TARGET 0 - 'libc.so.6': ELF-X64, 0x00000000028df0 entry, 1492897/1 executable bytes/segments 

0x0000000010d613: adc [r13+0x41], r11b; pop rsp; pop r13; pop r14; ret; 
0x000000000604e5: adc [rax+rax], al; add [rbp+0x41], bl; pop rsp; pop r13; ret; 
0x0000000010d614: adc [rbp+0x41], bl; pop rsp; pop r13; pop r14; ret; 
0x0000000003498a: adc [rbp+0x41], bl; pop rsp; pop r13; ret; 
0x000000000606e9: adc [rbx+0x41], bl; pop rsp; pop r13; ret; 
0x0000000010ff3b: adc [rbx], ecx; clc; dec dword ptr [rbx+0x480c2444]; add esp, 0x38; ret; 
0x000000000cc1d4: adc al, 0x48; add esp, 0x28; ret; 
0x0000000009281c: adc eax, 0x48a77600; add esp, 0x8; ret; 
0x00000000069bc3: adc ecx, [rcx+0x415d5b28]; pop rsp; ret; 
0x0000000008fa75: add [r8-0x77], r9b; imul esp, [rax+0x5b], 0x5d; pop r12; ret; 
0x0000000009ee60: add [r8], r8b; add [rax], al; add [rbp+0x41], bl; pop rsp; ret; 
0x000000000cc8f8: add [rax-0x73], cl; mov esp, 0xd024; add [rcx+rcx*4-0x12], cl; call r12; 
0x00000000076be7: add [rax-0x75], cl; mov esp, 0x8024; add [rax-0x7d], cl; ret; 
0x0000000007bf8e: add [rax-0x75], cl; pop rsp; and al, 0x68; jmp rcx; 
0x00000000039599: add [rax-0x75], cl; pop rsp; ret; 
0x0000000008fa76: add [rax-0x77], cl; imul esp, [rax+0x5b], 0x5d; pop r12; ret; 
0x000000000596f2: add [rax-0x8], ebp; saveprevssp; mov [r9+0x3a8], rdi; mov rsp, rdx; ret; 
0x000000000cc8f6: add [rax], al; add [rax-0x73], cl; mov esp, 0xd024; add [rcx+rcx*4-0x12], cl; call r12; 
0x0000000009ee61: add [rax], al; add [rax], al; add [rbp+0x41], bl; pop rsp; ret; 
0x0000000005f00b: add [rax], al; add [rbp+0x41], bl; pop rsp; pop r13; ret; 
0x00000000041eb7: add [rax], al; add [rbp+0x41], bl; pop rsp; ret; 
0x00000000055917: add [rax], al; add [rbp+0x79], dh; leave; ret; 
0x00000000074bee: add [rax], al; add [rcx], dh; leave; jmp rsi; 
0x0000000008a12b: add [rax], al; add [rcx], dh; rcr byte ptr [rbx+0x5d], 0x41; pop rsp; ret; 
0x000000000a847d: add [rax], al; add [rdi], cl; mov esp, 0x448d48c0; cmp [rax], ah; ret; 
0x000000000a846d: add [rax], al; add [rdi], cl; mov esp, 0x448d48c0; cmp [rax], dl; ret; 
0x000000000a845d: add [rax], al; add [rdi], cl; mov esp, 0xf80148c0; ret; 
0x0000000009a69c: add [rax], al; add [rdi], cl; test [rbp+0x48000000], ebp; add esp, 0x18; ret; 
0x00000000108b9d: add [rax], al; add [rdi], cl; test [rbp+0x48000000], edi; add esp, 0x78; ret; 
0x000000001091a3: add [rax], al; add [rdi], cl; test [rcx+0x48000000], ebx; add esp, 0x68; ret; 
0x0000000011f43c: add [rax], al; add al, ch; pop rsp; sti; jmp qword ptr [rsi+0xf]; 
0x00000000126da2: add [rax], al; jne 0x0000000000126e7d; leave; ret; 
0x00000000055918: add [rax], al; jne short 0x0000000000055995; leave; ret; 
0x00000000126da8: add [rax], al; leave; ret; 
0x000000000596fe: add [rax], al; mov rsp, rdx; ret; 
0x00000000060456: add [rax], eax; add [rbp+0x41], bl; pop rsp; pop r13; ret; 
0x00000000095496: add [rbp+0x31], al; leave; mov dword ptr fs:[rax], 0xc; mov rax, r9; ret; 
0x000000000d0ae6: add [rbp+0x31], al; ror byte ptr [rcx-0x3f76b3fe], 0x48; add esp, 0x8; ret; 
0x0000000009843e: add [rbp+0x41], bl; pop rsp; pop r13; jmp rax; 
0x0000000006158e: add [rbp+0x41], bl; pop rsp; pop r13; pop r14; ret; 
0x0000000005f00d: add [rbp+0x41], bl; pop rsp; pop r13; ret; 
0x00000000041eb9: add [rbp+0x41], bl; pop rsp; ret; 
0x00000000145c0f: add [rbp+0x480c74d2], al; add esp, 0x8; pop rbx; pop rbp; ret; 
0x00000000041b8c: add [rbp+0x480f75c0], al; add esp, 0x8; ret; 
0x0000000009b394: add [rbp+0x485774c0], al; add esp, 0x8; pop rbp; pop r12; ret; 
0x00000000055919: add [rbp+0x79], dh; leave; ret; 
0x0000000010ab5f: add [rbx+0x41], bl; pop rsp; pop r13; pop r14; ret; 
0x00000000131900: add [rbx+0x4804c244], cl; add esp, 0x8; pop rbx; pop rbp; ret; 
0x00000000041c8d: add [rbx+0x48082444], cl; add esp, 0x18; ret; 
0x0000000003e912: add [rbx-0x7bf0fc08], al; xchg esp, eax; add [rax], al; add [rbx-0x7bf0fe08], al; ret; 
0x00000000156e76: add [rcx+0x415d5bd8], cl; pop rsp; pop r13; pop r14; ret; 
0x000000000b8664: add [rcx+0xf], eax; xchg esp, eax; ret; 
0x00000000151a09: add [rcx+0xf], eax; xchg esp, eax; ror byte ptr [rax-0x7d], 0xc4; or [rcx+rcx*4-0x40], al; ret; 
0x00000000040a57: add [rcx], dh; leave; addsd xmm0, xmm0; mov [rdi], ecx; ret; 
0x00000000074bf0: add [rcx], dh; leave; jmp rsi; 
0x000000001420e1: add [rcx], dh; leave; lea rdx, [rip+0xd805]; lea r9, [rsp+0x20]; call qword ptr [rax]; 
0x0000000008a12d: add [rcx], dh; rcr byte ptr [rbx+0x5d], 0x41; pop rsp; ret; 
0x000000000b7cd2: add [rcx], dh; ror byte ptr [rax], cl; leave; cmove rax, rdx; ret; 
0x0000000011014b: add [rcx], ecx; clc; dec dword ptr [rbx+0x480c2444]; add esp, 0x18; ret; 
0x000000001256b6: add [rdi+rbx*2+0x31], esi; ror byte ptr [rax-0x7d], 0xc4; or [rbp+0x41], bl; pop rsp; ret; 
0x000000000a847f: add [rdi], cl; mov esp, 0x448d48c0; cmp [rax], ah; ret; 
0x000000000a846f: add [rdi], cl; mov esp, 0x448d48c0; cmp [rax], dl; ret; 
0x000000000a844e: add [rdi], cl; mov esp, 0x448d48c0; cmp al, dh; ret; 
0x000000000a848f: add [rdi], cl; mov esp, 0xc22948c0; jbe short 0x00000000000a84d0; add rax, rdi; ret; 
0x000000000a849e: add [rdi], cl; mov esp, 0xc22948c0; jbe short 0x00000000000a84d0; lea rax, [rdi+rax+0x10]; ret; 
0x000000000ca38f: add [rdi], cl; mov esp, 0xc22948c0; jbe short 0x00000000000ca3d0; add rax, rdi; ret; 
0x000000000ca39e: add [rdi], cl; mov esp, 0xc22948c0; jbe short 0x00000000000ca3d0; lea rax, [rdi+rax+0x10]; ret; 
0x000000000a845f: add [rdi], cl; mov esp, 0xf80148c0; ret; 
0x0000000010d724: add [rdi], cl; test [rax+0x48000000], ebx; add esp, 0x40; pop r12; ret; 
0x0000000009a69e: add [rdi], cl; test [rbp+0x48000000], ebp; add esp, 0x18; ret; 
0x00000000108b9f: add [rdi], cl; test [rbp+0x48000000], edi; add esp, 0x78; ret; 
0x000000001091a5: add [rdi], cl; test [rcx+0x48000000], ebx; add esp, 0x68; ret; 
0x00000000050325: add [rdi], cl; test [rcx+0x48000000], ecx; add esp, 0x10; pop rbx; ret; 
0x000000001092e6: add [rdi], cl; test [rcx+0x48000000], esi; add esp, 0x30; pop rbx; ret; 
0x000000000a1e15: add [rdx+0x38], eax; pop rsp; syscall; 
0x000000000a1e14: add [rdx+0x38], eax; pop rsp; syscall; 
0x0000000011984b: add [rdx-0x9], esi; dec dword ptr [rbx+0x48082444]; add esp, 0x18; ret; 
0x000000000604e6: add al, 0x0; add [rbp+0x41], bl; pop rsp; pop r13; ret; 
0x0000000011939c: add al, 0x48; add esp, 0x20; pop rbp; ret; 
0x0000000011ad8f: add al, 0x48; add esp, 0x28; ret; 
0x00000000106f15: add al, 0x48; add esp, 0x8; pop rbx; pop rbp; ret; 
0x00000000128abb: add al, 0x85; leave; jne short 0x0000000000128a70; mov rax, r8; ret; 
0x000000000834eb: add al, [rax]; add [rbp+0x41], bl; pop rsp; pop r13; ret; 
0x0000000011f43e: add al, ch; pop rsp; sti; jmp qword ptr [rsi+0xf]; 
0x0000000007609c: add cl, ch; xchg esp, eax; out 0xff, eax; jmp qword ptr [rsi+0xf]; 
0x000000000d8fe3: add dh, [rdx+rbp*2-0x7b]; dec dword ptr [rdi]; xchg esp, eax; ret; 
0x00000000126c60: add eax, 0x41000000; pop rsp; pop rbp; ret; 
0x000000001904d7: add eax, 0x48ffffff; add esp, 0x38; ret; 
0x000000000b865e: add eax, 0x8307e083; clc; add [rcx+0xf], eax; xchg esp, eax; ret; 
0x000000001562f4: add eax, 0x894c0000; loopne 0x000000000015633c; pop rsp; ret; 
0x000000000596f7: add edx, ebp; mov [r9+0x3a8], rdi; mov rsp, rdx; ret; 
0x000000000b7c1d: add esp, 0x100; sub rax, rdx; ret; 
0x000000000b7ccd: add esp, 0x100; xor edx, edx; or cl, cl; cmove rax, rdx; ret; 
0x00000000060986: add esp, 0x1010; pop rbp; ret; 
0x00000000060791: add esp, 0x1018; mov rax, r12; pop rbp; pop r12; ret; 
0x0000000009a583: add esp, 0x10; mov eax, r12d; pop r12; ret; 
0x0000000014c156: add esp, 0x10; mov eax, r8d; pop r12; ret; 
0x00000000156913: add esp, 0x10; mov eax, r8d; pop rbp; ret; 
0x000000000969f8: add esp, 0x10; mov rax, r8; pop rbp; ret; 
0x00000000096808: add esp, 0x10; mov rax, r8; pop rbx; ret; 
0x0000000008a50a: add esp, 0x10; movzx eax, al; pop rbx; neg eax; ret; 
0x0000000013f790: add esp, 0x10; pop r12; ret; 
0x0000000014facb: add esp, 0x10; pop rbp; jmp rax; 
0x00000000034988: add esp, 0x10; pop rbp; pop r12; pop r13; ret; 
0x00000000093151: add esp, 0x10; pop rbp; ret; 
0x0000000008dfb5: add esp, 0x10; pop rbx; jmp rax; 
0x000000000606e7: add esp, 0x10; pop rbx; pop r12; pop r13; ret; 
0x0000000008384f: add esp, 0x10; pop rbx; pop rbp; pop r12; ret; 
0x00000000041165: add esp, 0x10; pop rbx; ret; 
0x0000000015a4df: add esp, 0x110; mov eax, r12d; pop r12; ret; 
0x0000000014c3d6: add esp, 0x110; pop rbx; pop rbp; pop r12; ret; 
0x000000000418e2: add esp, 0x118; ret; 
0x00000000109fb8: add esp, 0x130; pop rbp; ret; 
0x000000000420d9: add esp, 0x140; mov eax, r8d; pop rbx; ret; 
0x000000000417ab: add esp, 0x148; ret; 
0x00000000091c74: add esp, 0x18; and eax, 0xc; pop rbx; pop rbp; ret; 
0x00000000097c0e: add esp, 0x18; jmp rax; 
0x00000000141d26: add esp, 0x18; mov eax, r12d; pop rbx; pop r12; ret; 
0x000000001379bb: add esp, 0x18; mov eax, r8d; pop rbx; pop rbp; ret; 
0x0000000009a01b: add esp, 0x18; mov rax, r8; pop rbx; pop r12; ret; 
0x00000000060f6a: add esp, 0x18; movzx eax, al; neg eax; ret; 
0x00000000045872: add esp, 0x18; pop rbp; mov rax, r12; pop r12; ret; 
0x000000000412c6: add esp, 0x18; pop rbx; pop rbp; ret; 
0x000000000394ab: add esp, 0x18; ret; 
0x00000000156f03: add esp, 0x190; mov rax, r8; pop rbp; ret; 
0x0000000010fe33: add esp, 0x190; pop rbx; pop rbp; pop r12; ret; 
0x000000001081ae: add esp, 0x1a0; mov eax, r8d; pop rbx; ret; 
0x00000000060453: add esp, 0x1d0; pop rbp; pop r12; pop r13; ret; 
0x00000000132df7: add esp, 0x20; mov eax, r8d; pop rbp; ret; 
0x000000000dbcef: add esp, 0x20; mov eax, r8d; pop rbx; ret; 
0x00000000041381: add esp, 0x20; movdqa xmm0, xmm2; pop rbp; ret; 
0x00000000041412: add esp, 0x20; pop rbp; ret; 
0x0000000008e761: add esp, 0x20; pop rbx; jmp rax; 
0x000000000342ad: add esp, 0x20; pop rbx; pop rbp; pop r12; ret; 
0x000000000c6116: add esp, 0x20; pop rbx; ret; 
0x000000000d0319: add esp, 0x20; xor eax, eax; pop rbx; ret; 
0x0000000008ec63: add esp, 0x20; xor edx, edx; pop rbx; jmp rax; 
0x00000000042a7b: add esp, 0x240; pop rbx; pop rbp; pop r12; ret; 
0x0000000014c8e9: add esp, 0x28; mov eax, r12d; pop rbp; pop r12; ret; 
0x0000000006086b: add esp, 0x28; mov rax, r12; pop rbx; pop r12; ret; 
0x0000000014c295: add esp, 0x28; pop rbx; pop r12; ret; 
0x000000000590cd: add esp, 0x28; pop rbx; pop rbp; ret; 
0x000000000455f6: add esp, 0x28; ret; 
0x00000000029019: add esp, 0x28; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000834e8: add esp, 0x2c0; pop rbp; pop r12; pop r13; ret; 
0x00000000190b18: add esp, 0x30; mov rax, r12; pop r12; ret; 
0x0000000010dd4d: add esp, 0x30; pop rbp; ret; 
0x0000000008d87c: add esp, 0x30; pop rbx; pop rbp; pop r12; ret; 
0x000000001092ee: add esp, 0x30; pop rbx; ret; 
0x00000000159cdc: add esp, 0x38; jmp rax; 
0x000000001906f7: add esp, 0x38; pop rbx; pop r14; ret; 
0x000000000290c8: add esp, 0x38; pop rbx; pop rbp; ret; 
0x00000000059a36: add esp, 0x38; ret; 
0x0000000010d72c: add esp, 0x40; pop r12; ret; 
0x0000000009666e: add esp, 0x40; pop rbp; ret; 
0x00000000148d49: add esp, 0x40; pop rbx; pop rbp; pop r12; ret; 
0x00000000042189: add esp, 0x40; pop rbx; ret; 
0x0000000011ca3c: add esp, 0x40; ret; 
0x000000000604e3: add esp, 0x410; pop rbp; pop r12; pop r13; ret; 
0x0000000011603e: add esp, 0x418; ret; 
0x000000000597e6: add esp, 0x450; pop rbp; ret; 
0x0000000014bd64: add esp, 0x48; pop rbx; pop rbp; ret; 
0x0000000008a3f9: add esp, 0x48; ret; 
0x000000001486ff: add esp, 0x50; pop rbx; pop rbp; pop r12; ret; 
0x000000001562f1: add esp, 0x520; mov rax, r12; pop r12; ret; 
0x00000000138cc6: add esp, 0x58; pop rbx; pop rbp; ret; 
0x000000000cce64: add esp, 0x58; ret; 
0x0000000010e88f: add esp, 0x60; mov eax, r11d; pop rbx; ret; 
0x0000000010ee18: add esp, 0x60; mov rax, r12; pop r12; ret; 
0x0000000010fff8: add esp, 0x60; pop rbp; ret; 
0x00000000159bf1: add esp, 0x68; jmp rax; 
0x00000000108a2c: add esp, 0x68; pop rbp; pop r12; ret; 
0x000000000fbb65: add esp, 0x68; pop rbx; pop rbp; ret; 
0x000000001091ad: add esp, 0x68; ret; 
0x000000000b9553: add esp, 0x70; pop rbx; pop rbp; pop r12; ret; 
0x00000000108ba7: add esp, 0x78; ret; 
0x0000000015822f: add esp, 0x88; mov eax, r12d; pop rbp; pop r12; ret; 
0x00000000116bad: add esp, 0x88; mov rax, r8; pop rbx; pop rbp; ret; 
0x000000000eab95: add esp, 0x8; add eax, eax; pop rbx; pop rbp; ret; 
0x00000000137241: add esp, 0x8; lea eax, [rbx+rbp]; pop rbx; pop rbp; ret; 
0x000000001414bf: add esp, 0x8; lea rax, [rip+0xa77d7]; ret; 
0x000000001415e1: add esp, 0x8; mov eax, 0x10; pop rbx; pop rbp; ret; 
0x0000000014f861: add esp, 0x8; mov eax, 0x1; pop rbp; pop r12; ret; 
0x0000000007fc37: add esp, 0x8; mov eax, 0x1; pop rbx; pop rbp; ret; 
0x0000000013188b: add esp, 0x8; mov eax, 0xa; pop rbx; pop rbp; ret; 
0x0000000007fc59: add esp, 0x8; mov eax, 0xffffffff; pop rbx; pop rbp; ret; 
0x000000000866ec: add esp, 0x8; mov eax, r12d; pop rbp; pop r12; ret; 
0x00000000059b11: add esp, 0x8; mov eax, r12d; pop rbx; pop r12; ret; 
0x0000000007ed94: add esp, 0x8; mov eax, r8d; pop rbx; pop rbp; ret; 
0x000000001122af: add esp, 0x8; mov eax, r8d; ret; 
0x000000000fd339: add esp, 0x8; mov eax, r9d; ret; 
0x000000000b8c43: add esp, 0x8; mov rax, r12; pop rbp; pop r12; ret; 
0x0000000009d7d1: add esp, 0x8; mov rax, r12; pop rbx; pop r12; ret; 
0x0000000004594f: add esp, 0x8; mov rax, r8; pop rbx; pop rbp; ret; 
0x000000001502a3: add esp, 0x8; mov rdi, rbp; pop rbp; pop r12; jmp rax; 
0x0000000008406d: add esp, 0x8; mov rdi, rbp; pop rbx; pop rbp; jmp rax; 
0x00000000029309: add esp, 0x8; movzx eax, al; neg eax; ret; 
0x00000000143830: add esp, 0x8; movzx eax, al; pop rbp; pop r12; ret; 
0x00000000144ce7: add esp, 0x8; movzx eax, al; pop rbx; pop rbp; ret; 
0x000000000503e6: add esp, 0x8; movzx eax, al; ret; 
0x0000000013c03e: add esp, 0x8; movzx eax, ax; ret; 
0x000000001519a6: add esp, 0x8; not eax; shr eax, 0x1f; ret; 
0x0000000014f856: add esp, 0x8; pop rbp; pop r12; jmp rax; 
0x00000000081d6a: add esp, 0x8; pop rbp; pop r12; ret; 
0x00000000143707: add esp, 0x8; pop rbx; pop rbp; jmp rcx; 
0x00000000087dd7: add esp, 0x8; pop rbx; pop rbp; mov eax, r8d; ret; 
0x00000000029a39: add esp, 0x8; pop rbx; pop rbp; ret; 
0x0000000002bba9: add esp, 0x8; ret; 
0x0000000015c845: add esp, 0x8; sar eax, 0x1f; ret; 
0x0000000012566c: add esp, 0x8; xor eax, eax; pop rbp; pop r12; ret; 
0x0000000008fbf3: add esp, 0x8; xor eax, eax; pop rbx; pop rbp; ret; 
0x00000000041d3d: add esp, 0x90; pop rbx; pop rbp; pop r12; ret; 
0x000000001517ba: add esp, 0x90; pop rbx; ret; 
0x00000000041eb4: add esp, 0x98; pop rbp; pop r12; ret; 
0x00000000028e73: add esp, 0x98; ret; 
0x000000000422a3: add esp, 0xa0; pop rbx; pop rbp; pop r12; ret; 
0x0000000010df88: add esp, 0xa0; pop rbx; ret; 
0x000000000da636: add esp, 0xa8; pop rbp; pop r12; ret; 
0x00000000042948: add esp, 0xa8; ret; 
0x0000000003417f: add esp, 0xb8; mov eax, r8d; pop rbp; pop r12; ret; 
0x000000000e0400: add esp, 0xb8; pop rbx; pop rbp; ret; 
0x00000000050d48: add esp, 0xd8; ret; 
0x000000000cd170: add esp, 0xe0; mov eax, r8d; pop rbx; ret; 
0x000000000d9ac6: add esp, 0xe0; pop rbx; ret; 
0x0000000007e3cd: add esp, 0xe8; mov eax, r8d; pop rbx; pop rbp; ret; 
0x00000000165d89: add esp, [rax]; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165a89: add esp, [rbx]; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165789: add esp, [rsi]; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000010952b: and [rbp-0x8], esi; dec dword ptr [rbx+0x480c2444]; add esp, 0x18; ret; 
0x000000001562f3: and [rip-0x76b40000], al; loopne 0x000000000015633c; pop rsp; ret; 
0x0000000009ed14: and al, 0x41; pop rsp; pop r13; pop r14; ret; 
0x0000000008dfd8: and al, 0x48; add esp, 0x10; pop rbx; jmp rax; 
0x000000000412c4: and al, 0x48; add esp, 0x18; pop rbx; pop rbp; ret; 
0x000000001096b8: and al, 0x48; add esp, 0x18; ret; 
0x0000000011a502: and al, 0x48; add esp, 0x20; pop rbp; ret; 
0x00000000106d06: and al, 0x48; add esp, 0x28; ret; 
0x0000000011a5c8: and al, 0x48; add esp, 0x30; pop rbp; ret; 
0x00000000190752: and al, 0x48; add esp, 0x38; pop rbx; pop r14; ret; 
0x0000000011c9d9: and al, 0x48; add esp, 0x38; ret; 
0x0000000011ca3a: and al, 0x48; add esp, 0x40; ret; 
0x000000000de75a: and bh, bl; dec dword ptr [rbx+0x480c2444]; add esp, 0x28; ret; 
0x000000000de759: and bh, bl; dec dword ptr [rbx+0x480c2444]; add esp, 0x28; ret; 
0x00000000126d9f: and eax, 0x28; jne 0x0000000000126e7d; leave; ret; 
0x00000000055915: and eax, 0x28; jne short 0x0000000000055995; leave; ret; 
0x000000000de880: and ebx, edi; dec dword ptr [rbx+0x480c2444]; add esp, 0x18; ret; 
0x000000000de6a0: and edi, ebx; dec dword ptr [rbx+0x48102444]; add esp, 0x28; ret; 
0x000000000d0ae4: and edx, [rcx]; add [rbp+0x31], al; ror byte ptr [rcx-0x3f76b3fe], 0x48; add esp, 0x8; ret; 
0x0000000012e1e0: and esp, [rcx+0x6401000b]; mov [r8], r9d; add rsp, 0x18; ret; 
0x0000000014bb2b: and esp, ebx; std; call qword ptr [rax-0x5e1f00d]; 
0x000000000b8663: clc; add [rcx+0xf], eax; xchg esp, eax; ret; 
0x0000000010d681: clc; dec dword ptr [rbx+0x48082444]; add esp, 0x28; ret; 
0x0000000010952d: clc; dec dword ptr [rbx+0x480c2444]; add esp, 0x18; ret; 
0x0000000010ff3d: clc; dec dword ptr [rbx+0x480c2444]; add esp, 0x38; ret; 
0x0000000010e1d2: clc; dec dword ptr [rbx+0x48182444]; add esp, 0x28; ret; 
0x000000000596f4: clc; saveprevssp; mov [r9+0x3a8], rdi; mov rsp, rdx; ret; 
0x0000000005590f: clc; sub rax, fs:[0x28]; jne short 0x0000000000055995; leave; ret; 
0x00000000126d99: clc; sub rcx, fs:[0x28]; jne 0x0000000000126e7d; leave; ret; 
0x000000001287c0: cmovl ecx, [rcx+0x415d5be0]; pop rsp; ret; 
0x0000000007f438: cmovs ecx, [rbx+0x48082444]; add esp, 0x18; ret; 
0x000000000b8520: cmovs esp, [rbx+0x4]; xchg esi, eax; add rax, rsi; notrack jmp rax; 
0x0000000008ecf0: cmp [r13+0x41], r11b; pop rsp; ret; 
0x0000000008ecf1: cmp [rbp+0x41], bl; pop rsp; ret; 
0x000000001214a0: cmp [rcx], dh; rcr byte ptr [rbx+0x5d], 0x41; pop rsp; ret; 
0x000000001108b0: cmp al, 0x48; add esp, 0x68; ret; 
0x0000000017d3cd: cmp cl, [rax+0x63]; leave; add rax, rcx; sub rax, rdi; ret; 
0x000000000525dc: cmp cl, [rdi]; xchg esp, eax; ret; 
0x00000000113b73: cmp eax, 0x415d000d; pop rsp; pop r13; ret; 
0x0000000014d3c0: cvtdq2ps xmm3, [rbp+0x41]; pop rsp; ret; 
0x00000000041eb6: cwde; add [rax], al; add [rbp+0x41], bl; pop rsp; ret; 
0x000000000b6e93: dec dword ptr [rbp+rcx*4+0x1d]; imul esp, [rdi+rcx], 0xc634b00; or dword ptr [rcx-0x73], 0xc; or edi, [rsi]; jmp rcx; 
0x00000000119398: dec dword ptr [rbx+0x48042444]; add esp, 0x20; pop rbp; ret; 
0x0000000011ad8b: dec dword ptr [rbx+0x48042444]; add esp, 0x28; ret; 
0x0000000011984e: dec dword ptr [rbx+0x48082444]; add esp, 0x18; ret; 
0x0000000010d682: dec dword ptr [rbx+0x48082444]; add esp, 0x28; ret; 
0x000000000de882: dec dword ptr [rbx+0x480c2444]; add esp, 0x18; ret; 
0x000000000de75c: dec dword ptr [rbx+0x480c2444]; add esp, 0x28; ret; 
0x0000000010ff3e: dec dword ptr [rbx+0x480c2444]; add esp, 0x38; ret; 
0x000000000de6a2: dec dword ptr [rbx+0x48102444]; add esp, 0x28; ret; 
0x0000000010e1d3: dec dword ptr [rbx+0x48182444]; add esp, 0x28; ret; 
0x00000000093324: dec dword ptr [rcx+0x31342444]; shr al, 0xa0; leave; cld; jmp qword ptr [rbx+rcx*4+0x4]; 
0x0000000009d438: dec dword ptr [rdi]; mov esp, 0xc2440fc7; add eax, 0x1; ret; 
0x000000000d8fe7: dec dword ptr [rdi]; xchg esp, eax; ret; 
0x0000000005dcf5: dec dword ptr [rdi]; xchg esp, eax; shr cl, 0x66; idiv bh; jmp qword ptr [rsi-0x70]; 
0x0000000013432a: emms; mov esp, 0xfffeafe9; jmp qword ptr [rsi+0xf]; 
0x000000001299c0: enter 0x5d5b, 0x41; pop rsp; ret; 
0x000000000719ec: enter 0x6176, 0x4d; movsxd esp, esp; mov rdx, r12; call qword ptr [r13+0x38]; 
0x00000000107f01: enter 0x8348, 0xc4; or [rbp+0x41], bl; pop rsp; ret; 
0x000000000525d8: fild st, dword ptr [rax+0xf3a007d]; xchg esp, eax; ret; 
0x000000000ae205: fimul st, dword ptr [rax+0xf]; mov esp, 0xd00148d2; sub rax, rdi; ret; 
0x000000000cb845: fimul st, dword ptr [rax+0xf]; mov esp, 0xd00148d2; sub rax, rdi; shr rax, 0x2; ret; 
0x000000000a50bc: imul al; mov esi, 0x48fff814; add esp, 0x8; ret; 
0x000000000da005: imul eax, [rcx+rax], 0x48; add esp, 0x8; pop rbx; pop rbp; ret; 
0x0000000009281b: imul eax, [rsi+0x15], 0x48a77600; add esp, 0x8; ret; 
0x000000001215c4: imul ebx, [rax], 0x48; add esp, 0x8; pop rbx; pop rbp; ret; 
0x00000000121524: imul ecx, [rax], 0x48; add esp, 0x8; pop rbx; pop rbp; ret; 
0x00000000121574: imul edx, [rax], 0x48; add esp, 0x8; pop rbx; pop rbp; ret; 
0x0000000008fa79: imul esp, [rax+0x5b], 0x5d; pop r12; ret; 
0x0000000016c7f4: imul esp, [rbx], 0x894d0000; ret far; 
0x000000000b6e97: imul esp, [rdi+rcx], 0xc634b00; or dword ptr [rcx-0x73], 0xc; or edi, [rsi]; jmp rcx; 
0x000000001287be: in al, 0x75; cmovl ecx, [rcx+0x415d5be0]; pop rsp; ret; 
0x000000000f982c: inc dword ptr [rax+0x3108384b]; rcr byte ptr [rbx+0x5d], 0x41; pop rsp; ret; 
0x000000000fd334: inc dword ptr [rbp+0x31]; leave; add rsp, 0x8; mov eax, r9d; ret; 
0x000000000fd333: inc dword ptr [rbp+0x31]; leave; add rsp, 0x8; mov eax, r9d; ret; 
0x000000000de8d6: inc dword ptr [rbp+0x480575c0]; add esp, 0x8; ret; 
0x00000000156755: inc dword ptr [rbp+0x480e78c0]; add esp, 0x8; pop rbp; pop r12; ret; 
0x0000000014208f: ja short 0x00000000001420d9; add esp, 0x28; pop rbx; pop rbp; ret; 
0x0000000014b846: jae short 0x000000000014b890; add esp, 0x10; pop r12; ret; 
0x0000000011984c: jb short 0x0000000000119845; dec dword ptr [rbx+0x48082444]; add esp, 0x18; ret; 
0x00000000119396: jbe short 0x000000000011938f; dec dword ptr [rbx+0x48042444]; add esp, 0x20; pop rbp; ret; 
0x0000000014c293: jbe short 0x000000000014c2dd; add esp, 0x28; pop rbx; pop r12; ret; 
0x0000000010e05a: je short 0x000000000010e0a4; add esp, 0xa0; pop rbx; ret; 
0x0000000011957f: je short 0x0000000000119578; dec dword ptr [rbx+0x480c2444]; add esp, 0x28; ret; 
0x000000000525da: jge short 0x00000000000525dc; cmp cl, [rdi]; xchg esp, eax; ret; 
0x0000000010e1d0: jl short 0x000000000010e1fa; clc; dec dword ptr [rbx+0x48182444]; add esp, 0x28; ret; 
0x00000000126da4: jne 0x0000000000126e7d; leave; ret; 
0x0000000005591a: jne short 0x0000000000055995; leave; ret; 
0x0000000010952c: jne short 0x0000000000109526; dec dword ptr [rbx+0x480c2444]; add esp, 0x18; ret; 
0x0000000010fa55: jne short 0x000000000010fa9f; add esp, 0x38; ret; 
0x0000000010fb25: jne short 0x000000000010fb6f; add esp, 0x38; ret; 
0x0000000014c154: jno short 0x000000000014c19e; add esp, 0x10; mov eax, r8d; pop r12; ret; 
0x00000000190b16: jnp short 0x0000000000190b60; add esp, 0x30; mov rax, r12; pop r12; ret; 
0x00000000101604: jrcxz 0x000000000010164e; add esp, 0x8; pop rbx; pop rbp; ret; 
0x00000000091b3e: js short 0x0000000000091b88; add esp, 0x98; ret; 
0x000000000dd134: lea esp, [rbp-0x10]; pop r12; pop r13; pop rbp; ret; 
0x000000000deea1: lea esp, [rbp-0x10]; pop rbx; pop r12; pop rbp; ret; 
0x00000000143796: lea esp, [rbx+0x23b0]; mov dword ptr [rbx+0x23b0], 0x0; mov rdi, r12; call qword ptr [rax+0x28]; 
0x00000000042cc4: lea esp, [rcx+rax]; mov r13, rax; mov rdi, r12; call rbx; 
0x000000000b6df3: lea esp, [rdi+rcx]; add [rcx+0x63], cl; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000044b42: lea esp, [rip+0x1a0ae8]; cmp rbx, r12; jae short 0x0000000000044b5b; nop [rax]; call qword ptr [rbx]; 
0x0000000015c7b7: lea esp, [rsi+0x8]; add [rdi+rax*8], ah; add [rax], al; add [rax-0x1], bh; ret; 
0x000000000596b7: lea esp, [rsi+0x8]; lea rsi, [rdi+0x3b0]; mov edi, 0x3004; mov eax, 0x9e; syscall; 
0x000000000dd133: lea rsp, [rbp-0x10]; pop r12; pop r13; pop rbp; ret; 
0x000000000deea0: lea rsp, [rbp-0x10]; pop rbx; pop r12; pop rbp; ret; 
0x000000000596b6: lea rsp, [rsi+0x8]; lea rsi, [rdi+0x3b0]; mov edi, 0x3004; mov eax, 0x9e; syscall; 
0x000000000a50e2: leave; adc eax, [rax]; mov rax, [rax+rdi*8]; ret; 
0x0000000015f607: leave; add al, [rax]; add [rbp-0x77], cl; ret far; 
0x00000000179347: leave; add eax, [rax]; add [rbp-0x77], cl; ret far; 
0x0000000017d354: leave; add rax, rcx; sub rax, rdi; ret; 
0x000000000fd337: leave; add rsp, 0x8; mov eax, r9d; ret; 
0x00000000040a59: leave; addsd xmm0, xmm0; mov [rdi], ecx; ret; 
0x000000000f9993: leave; bnd jmp qword ptr [rbx+rcx*4+0x4]; 
0x0000000009332d: leave; cld; jmp qword ptr [rbx+rcx*4+0x4]; 
0x000000000b7cd6: leave; cmove rax, rdx; ret; 
0x00000000128853: leave; idiv edi; jmp qword ptr [rsi+0xf]; 
0x00000000074ba1: leave; jmp rsi; 
0x000000000a492d: leave; jne short 0x00000000000a4920; mov [rdi], rdx; ret; 
0x000000000b77d0: leave; jne short 0x00000000000b77c0; ret; 
0x000000000b7880: leave; jne short 0x00000000000b7870; ret; 
0x000000000b7b40: leave; jne short 0x00000000000b7b30; sub rax, 0x1; ret; 
0x000000000b8fb0: leave; jne short 0x00000000000b8f88; mov rax, r8; ret; 
0x0000000011d1c9: leave; jne short 0x000000000011d1d0; ret; 
0x0000000011da20: leave; jne short 0x000000000011da28; ret; 
0x0000000011da7d: leave; jne short 0x000000000011da88; ret; 
0x00000000128abe: leave; jne short 0x0000000000128a70; mov rax, r8; ret; 
0x000000000a69f9: leave; lea r10, [rip+0x1022c7]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x000000000a52d9: leave; lea r10, [rip+0x103967]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000016c759: leave; lea r10, [rip+0x3c6a7]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000016a5d9: leave; lea r10, [rip+0x3e7a7]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000015e229: leave; lea r10, [rip+0x4aad7]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000015cf99: leave; lea r10, [rip+0x4bce7]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x000000000ab249: leave; lea r10, [rip+0xfdb77]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x000000000a8fd9: leave; lea r10, [rip+0xffd67]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x000000001420e3: leave; lea rdx, [rip+0xd805]; lea r9, [rsp+0x20]; call qword ptr [rax]; 
0x00000000140bd3: leave; loop 0x0000000000140bd5; jmp qword ptr [rsi+0xf]; 
0x000000000b2911: leave; mov [rax], cl; mov rax, rdi; ret; 
0x0000000017e8df: leave; mov al, [rdi+rdx-0x1]; mov cl, [rsi+rdx-0x1]; sub eax, ecx; ret; 
0x00000000095499: leave; mov dword ptr fs:[rax], 0xc; mov rax, r9; ret; 
0x00000000159e7a: leave; mov rdi, rbp; call qword ptr [rax+0x270]; 
0x00000000033d3b: leave; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; lea r8, [rsp+0xa0]; call r15; 
0x000000000a684c: leave; movzx eax, byte ptr [rax+rcx]; movzx edx, byte ptr [rdx+rcx]; sub eax, edx; ret; 
0x0000000018dbb2: leave; notrack jmp rcx; 
0x000000000b917d: leave; or al, 0x0; cmovne rax, rdx; ret; 
0x0000000012b67b: leave; or eax, [rax]; syscall; 
0x0000000005591c: leave; ret; 
0x000000000464e4: leave; sbb [rax], eax; mov dword ptr fs:[rax], 0x5; mov eax, 0xffffffff; ret; 
0x000000000b4313: leave; str [rbx+0x63]; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000298ec: leave; xor edx, edx; push rax; call rbx; 
0x0000000011a6b5: leave; xor r8d, r8d; mov eax, 0x2c; syscall; 
0x0000000011a495: leave; xor r8d, r8d; mov eax, 0x2d; syscall; 
0x000000000de69f: lodsd [rsi]; and edi, ebx; dec dword ptr [rbx+0x48102444]; add esp, 0x28; ret; 
0x0000000009c02a: loop 0x000000000009c06d; pop rsp; pop r13; ret; 
0x0000000009c03f: loop 0x000000000009c082; pop rsp; pop r13; ret; 
0x0000000003960a: loopne 0x000000000003964d; pop rsp; ret; 
0x00000000045878: loopne 0x00000000000458bb; pop rsp; ret; 
0x00000000082446: loopne 0x0000000000082489; pop rsp; pop r13; pop r14; ret; 
0x0000000008a6c8: loopne 0x000000000008a70b; pop rsp; ret; 
0x0000000008a6d7: loopne 0x000000000008a71a; pop rsp; ret; 
0x00000000092ad7: loopne 0x0000000000092b1a; pop rsp; ret; 
0x0000000009a588: loopne 0x000000000009a5cb; pop rsp; ret; 
0x0000000009a7bb: loopne 0x000000000009a7fe; pop rsp; ret; 
0x0000000009d10a: loopne 0x000000000009d14d; pop rsp; pop r13; ret; 
0x0000000009ebaf: loopne 0x000000000009ebf2; pop rsp; ret; 
0x000000000a4a6e: loopne 0x00000000000a4ab1; pop rsp; ret; 
0x000000000cc00f: loopne 0x00000000000cc052; pop rsp; ret; 
0x000000000cc043: loopne 0x00000000000cc086; pop rsp; ret; 
0x000000000cc055: loopne 0x00000000000cc098; pop rsp; ret; 
0x000000000cdcb7: loopne 0x00000000000cdcfa; pop rsp; pop r13; pop r14; ret; 
0x000000000d9757: loopne 0x00000000000d979a; pop rsp; ret; 
0x000000000d98b7: loopne 0x00000000000d98fa; pop rsp; pop r13; pop r14; ret; 
0x000000000f9f02: loopne 0x00000000000f9f45; pop rsp; pop r13; pop r14; ret; 
0x00000000107d7f: loopne 0x0000000000107dc2; pop rsp; ret; 
0x0000000010ee1d: loopne 0x000000000010ee60; pop rsp; ret; 
0x00000000110642: loopne 0x0000000000110685; pop rsp; ret; 
0x00000000113c0a: loopne 0x0000000000113c4d; pop rsp; ret; 
0x000000001287ef: loopne 0x0000000000128832; pop rsp; ret; 
0x00000000128817: loopne 0x000000000012885a; pop rsp; ret; 
0x00000000141022: loopne 0x0000000000141065; pop rsp; ret; 
0x000000001438b9: loopne 0x00000000001438fc; pop rsp; ret; 
0x00000000155653: loopne 0x0000000000155696; pop rsp; pop r13; pop r14; ret; 
0x000000001562f9: loopne 0x000000000015633c; pop rsp; ret; 
0x0000000015a4e7: loopne 0x000000000015a52a; pop rsp; ret; 
0x00000000190b1d: loopne 0x0000000000190b60; pop rsp; ret; 
0x00000000190ba0: loopne 0x0000000000190be3; pop rsp; ret; 
0x000000000596f9: mov [r9+0x3a8], rdi; mov rsp, rdx; ret; 
0x000000000596fa: mov [rcx+0x3a8], edi; mov rsp, rdx; ret; 
0x000000000318d9: mov ah, 0x3c; xchg esp, eax; add [rax], al; add [rax+0x39], cl; ret far; 
0x000000000318af: mov ah, 0x4; xchg esp, eax; add [rax], al; add [rax+0x39], cl; ret far; 
0x0000000012e2c2: mov al, [0x480889456401000b]; add esp, 0x8; ret; 
0x000000000a1e12: mov dh, 0x5c; add [rdx+0x38], eax; pop rsp; syscall; 
0x0000000012e1e1: mov eax, [0x480889456401000b]; add esp, 0x18; ret; 
0x0000000005590e: mov eax, [rbp-0x8]; sub rax, fs:[0x28]; jne short 0x0000000000055995; leave; ret; 
0x00000000041685: mov eax, esi; mov rsp, r8; mov rbp, r9; nop; jmp rdx; 
0x00000000108ba2: mov ebp, 0x48000000; add esp, 0x78; ret; 
0x000000000596fb: mov ecx, 0x3a8; mov rsp, rdx; ret; 
0x00000000126d98: mov ecx, [rbp-0x8]; sub rcx, fs:[0x28]; jne 0x0000000000126e7d; leave; ret; 
0x000000001420de: mov esi, 0x31000000; leave; lea rdx, [rip+0xd805]; lea r9, [rsp+0x20]; call qword ptr [rax]; 
0x000000000a50be: mov esi, 0x48fff814; add esp, 0x8; ret; 
0x000000000f4a43: mov esp, 0x19824; add al, ch; sbb bl, dh; jmp qword ptr [rsi+0xf]; 
0x0000000007bda4: mov esp, 0x1; jmp rcx; 
0x000000000b6d15: mov esp, 0x1d8d4cd2; and ax, 0xf; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6cf8: mov esp, 0x1d8d4cd2; and dword ptr [rip+0x6349000f], 0xc; xchg ebx, eax; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6d3a: mov esp, 0x1d8d4cd2; and eax, 0x6349000f; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b3725: mov esp, 0x1d8d4cd2; mov [0x49930c6349000f57], al; lea ecx, [rbx+rcx]; notrack jmp rcx; 
0x000000000b6d72: mov esp, 0x1d8d4cd2; or [rip+0x6349000f], esp; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b4698: mov esp, 0x1d8d4cd2; or dword ptr [rcx+0xf], 0x0; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b46b5: mov esp, 0x1d8d4cd2; str [r9+0x63]; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000014ddf3: mov esp, 0x440f48c5; ret; 
0x000000001139aa: mov esp, 0x441f0f; add bl, dh; nop edx, edi; mov eax, 0x1c; syscall; 
0x0000000011a2ea: mov esp, 0x441f0f; add bl, dh; nop edx, edi; mov eax, 0x31; syscall; 
0x0000000010e2ba: mov esp, 0x441f0f; add bl, dh; nop edx, edi; mov eax, 0x3; syscall; 
0x000000000a8481: mov esp, 0x448d48c0; cmp [rax], ah; ret; 
0x000000000a8471: mov esp, 0x448d48c0; cmp [rax], dl; ret; 
0x000000000a8451: mov esp, 0x448d48c0; cmp al, dh; ret; 
0x0000000009b9c0: mov esp, 0x48fff8a9; mov eax, [rip+0x14747d]; mov dword ptr fs:[rax], 0xc; xor eax, eax; ret; 
0x0000000007b260: mov esp, 0x48fffff5; add ecx, ebx; mov rbx, rdx; mov edx, 0x1; jmp rcx; 
0x0000000015cf9e: mov esp, 0x634f0004; or al, 0x8a; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000076bea: mov esp, 0x8024; add [rax-0x7d], cl; ret; 
0x000000000748e9: mov esp, 0x89000000; ret; 
0x0000000008a866: mov esp, 0x8948fff9; ret; 
0x0000000003aad1: mov esp, 0x8d48001a; cmp eax, 0x1aabe5; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003aaaa: mov esp, 0x8d48001a; cmp eax, 0x1aae0c; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000018a7c0: mov esp, 0xa8000000; jne 0x000000000018a890; lea rax, [rdi+0x7]; ret; 
0x000000001822b2: mov esp, 0xc08348c0; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x0000000017e262: mov esp, 0xc08348c0; add rax, rdi; vzeroupper; ret; 
0x0000000017e252: mov esp, 0xc08348c0; and [rax+0x1], cl; clc; vzeroupper; ret; 
0x0000000014d1fa: mov esp, 0xc1480009; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x000000000d99eb: mov esp, 0xc1480010; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x000000000a822a: mov esp, 0xc22948c0; jbe 0x00000000000a84d0; add rax, rdi; add rax, rcx; ret; 
0x000000000ca12a: mov esp, 0xc22948c0; jbe 0x00000000000ca3d0; add rax, rdi; add rax, rcx; ret; 
0x000000000a8491: mov esp, 0xc22948c0; jbe short 0x00000000000a84d0; add rax, rdi; ret; 
0x000000000a84a1: mov esp, 0xc22948c0; jbe short 0x00000000000a84d0; lea rax, [rdi+rax+0x10]; ret; 
0x000000000a84b1: mov esp, 0xc22948c0; jbe short 0x00000000000a84d0; lea rax, [rdi+rax+0x20]; ret; 
0x000000000a84c1: mov esp, 0xc22948c0; jbe short 0x00000000000a84d0; lea rax, [rdi+rax+0x30]; ret; 
0x000000000ca391: mov esp, 0xc22948c0; jbe short 0x00000000000ca3d0; add rax, rdi; ret; 
0x000000000ca3a1: mov esp, 0xc22948c0; jbe short 0x00000000000ca3d0; lea rax, [rdi+rax+0x10]; ret; 
0x000000000ca3b1: mov esp, 0xc22948c0; jbe short 0x00000000000ca3d0; lea rax, [rdi+rax+0x20]; ret; 
0x000000000ca3c1: mov esp, 0xc22948c0; jbe short 0x00000000000ca3d0; lea rax, [rdi+rax+0x30]; ret; 
0x0000000017e1c2: mov esp, 0xc23948c0; jbe short 0x000000000017e230; add rax, rdi; vzeroupper; ret; 
0x00000000185c72: mov esp, 0xc23948c0; jbe short 0x0000000000185ce0; add rax, rdi; vzeroupper; ret; 
0x0000000009d43a: mov esp, 0xc2440fc7; add eax, 0x1; ret; 
0x0000000011bde9: mov esp, 0xc73000c; mov rdx, [rip+0xcbc83]; add word ptr [rdx+rax*2], 0x1; ret; 
0x00000000181e25: mov esp, 0xc80148c0; add rax, rdi; vzeroupper; ret; 
0x000000000cb344: mov esp, 0xc83948ca; ja short 0x00000000000cb360; sub rdi, 0x10; add rax, rdi; ret; 
0x000000000ae043: mov esp, 0xd00148d2; sub rax, rdi; ret; 
0x000000000cb848: mov esp, 0xd00148d2; sub rax, rdi; shr rax, 0x2; ret; 
0x000000000cc8fb: mov esp, 0xd024; add [rcx+rcx*4-0x12], cl; call r12; 
0x000000000cb27c: mov esp, 0xd03948d2; ja 0x00000000000cb360; add rax, rdi; add rax, rcx; ret; 
0x000000001117e1: mov esp, 0xe8c03150; out 0xe4, al; hlt; call far fword ptr [rdx+0x59]; 
0x000000001020a1: mov esp, 0xf024; add [rax+0x39], cl; fbstp tbyte ptr [rbp+rax-0x18], st; pop qword ptr [rdx-0xe]; jmp qword ptr [rsi+0xf]; 
0x00000000190d10: mov esp, 0xf3000266; divps xmm0, [rip+0x279c8]; ret; 
0x000000000a854b: mov esp, 0xf80148c0; add rax, rcx; ret; 
0x000000001821c7: mov esp, 0xf80148c0; add rax, rcx; sub rax, rdx; vzeroupper; ret; 
0x0000000017e2f7: mov esp, 0xf80148c0; add rax, rcx; vzeroupper; ret; 
0x000000000a8461: mov esp, 0xf80148c0; ret; 
0x00000000186bf2: mov esp, 0xf80148c0; sub rax, rdx; shr rax, 0x2; vzeroupper; ret; 
0x00000000182282: mov esp, 0xf80148c0; sub rax, rdx; vzeroupper; ret; 
0x0000000017e242: mov esp, 0xf80148c0; vzeroupper; ret; 
0x0000000013432c: mov esp, 0xfffeafe9; jmp qword ptr [rsi+0xf]; 
0x00000000114acb: mov esp, [rbp+0x10]; test r12, r12; jne short 0x0000000000114b1c; mov rdi, [rbp]; call rbx; 
0x00000000115914: mov esp, [rbp+0x10]; test r12, r12; jne short 0x0000000000115940; mov rdi, [rbp]; call rbx; 
0x0000000011a5c1: mov esp, [rdi+rsi*8-0x1]; mov rax, [rsp]; add rsp, 0x30; pop rbp; ret; 
0x000000000453ca: mov esp, [rip+0x19d968]; mov rax, fs:[r12]; lock add qword ptr [rax+0x460], 0x1; lea rdi, [rbp+0x988]; call qword ptr [rbp+0xf90]; 
0x0000000015083c: mov esp, eax; mov eax, eax; mov [rsp], rax; mov rax, [rbp+0x8]; call qword ptr [rax+0x8]; 
0x00000000142558: mov esp, eax; mov rax, [rdi+0x8]; call qword ptr [rax+0x20]; 
0x0000000008a6c4: mov esp, eax; mov rax, r12; pop r12; ret; 
0x00000000041688: mov esp, eax; mov rbp, r9; nop; jmp rdx; 
0x000000001423ee: mov esp, eax; xor eax, eax; call qword ptr [rbx+0x28]; 
0x00000000190d78: mov esp, edi; dec dword ptr [rcx-0x75]; jge short 0x0000000000190d8f; add rdi, rbp; call r12; 
0x00000000093847: mov esp, edx; je short 0x000000000009386a; mov r13, [rip+0x14f53e]; xor edi, edi; call qword ptr [r13]; 
0x00000000059701: mov esp, edx; ret; 
0x00000000143de5: mov esp, esp; lea rsi, [rsp+0x8]; call qword ptr [rax]; 
0x0000000005590d: mov rax, [rbp-0x8]; sub rax, fs:[0x28]; jne short 0x0000000000055995; leave; ret; 
0x00000000126d97: mov rcx, [rbp-0x8]; sub rcx, fs:[0x28]; jne 0x0000000000126e7d; leave; ret; 
0x00000000041687: mov rsp, r8; mov rbp, r9; nop; jmp rdx; 
0x00000000059700: mov rsp, rdx; ret; 
0x000000000719f0: movsxd esp, esp; mov rdx, r12; call qword ptr [r13+0x38]; 
0x0000000018daf4: movzx esp, bh; add rax, rdx; notrack jmp rax; 
0x0000000014f858: or [rbp+0x41], bl; pop rsp; jmp rax; 
0x00000000081d6c: or [rbp+0x41], bl; pop rsp; ret; 
0x000000000610f8: or [rbx+0x48010447], al; add esp, 0x8; pop rbx; pop rbp; ret; 
0x000000000453f7: or [rcx], dh; rcr byte ptr [rbx+0x5d], 0x41; pop rsp; pop r13; ret; 
0x000000000f9830: or [rcx], dh; rcr byte ptr [rbx+0x5d], 0x41; pop rsp; ret; 
0x000000000de886: or al, 0x48; add esp, 0x18; ret; 
0x000000000de760: or al, 0x48; add esp, 0x28; ret; 
0x0000000010ff42: or al, 0x48; add esp, 0x38; ret; 
0x00000000145c13: or al, 0x48; add esp, 0x8; pop rbx; pop rbp; ret; 
0x00000000109529: or al, 0xe8; and [rbp-0x8], esi; dec dword ptr [rbx+0x480c2444]; add esp, 0x18; ret; 
0x000000000de757: or al, 0xe8; and bh, bl; dec dword ptr [rbx+0x480c2444]; add esp, 0x28; ret; 
0x00000000110209: or al, 0xe8; or r8b, dil; dec dword ptr [rbx+0x480c2444]; add esp, 0x18; ret; 
0x0000000011020c: or al, bh; dec dword ptr [rbx+0x480c2444]; add esp, 0x18; ret; 
0x00000000119849: or al, ch; add [rdx-0x9], esi; dec dword ptr [rbx+0x48082444]; add esp, 0x18; ret; 
0x0000000011a379: or al, ch; shl dword ptr [rsi-0x9], 0x1; dec dword ptr [rbx+0x48082444]; add esp, 0x18; ret; 
0x00000000115855: or bl, [rbp+0x41]; pop rsp; pop r13; ret; 
0x000000000eab4b: or dh, [rbp+rdi+0x48]; add esp, 0x8; pop rbx; pop rbp; ret; 
0x000000000f9829: or dword ptr [rcx], 0xffffffff; inc dword ptr [rax+0x3108384b]; rcr byte ptr [rbx+0x5d], 0x41; pop rsp; ret; 
0x0000000011409e: or eax, 0x415d5900; pop rsp; pop r13; ret; 
0x00000000044dc0: or eax, 0x4801001a; add esp, 0x8; pop rbx; pop rbp; ret; 
0x00000000113b39: or eax, 0xc4834800; adc [rbp+0x41], bl; pop rsp; pop r13; ret; 
0x0000000011014c: or eax, edi; dec dword ptr [rbx+0x480c2444]; add esp, 0x18; ret; 
0x0000000010ff3c: or edi, eax; dec dword ptr [rbx+0x480c2444]; add esp, 0x38; ret; 
0x000000000f982a: or edi, edi; inc dword ptr [rax+0x3108384b]; rcr byte ptr [rbx+0x5d], 0x41; pop rsp; ret; 
0x0000000007f3e8: or esp, [rax]; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000141208: or esp, [rax]; mov dword ptr fs:[rax], 0x1d; mov eax, 0x1d; pop rbx; ret; 
0x0000000008ab91: or esp, [rax]; mov eax, 0xffffffff; pop rbx; ret; 
0x0000000011020b: or r8b, dil; dec dword ptr [rbx+0x480c2444]; add esp, 0x18; ret; 
0x00000000098723: out 0x41, al; pop rsp; pop r13; jmp rax; 
0x000000000979b6: out 0x41, eax; pop rsp; pop r13; jmp rax; 
0x0000000018daf2: out 0x44, eax; movzx esp, bh; add rax, rdx; notrack jmp rax; 
0x000000001255d9: out 0x48, al; add esp, 0x8; pop rbx; pop rbp; ret; 
0x0000000012149f: pop rbp; cmp [rcx], dh; rcr byte ptr [rbx+0x5d], 0x41; pop rsp; ret; 
0x000000000a1e13: pop rsp; add [rdx+0x38], eax; pop rsp; syscall; 
0x00000000105f20: pop rsp; add al, 0xf2; dec dword ptr [rax-0x7b]; ror byte ptr [rdi], 0x84; ret far; 
0x00000000094c8c: pop rsp; and al, 0x10; call rax; 
0x0000000009491d: pop rsp; and al, 0x18; call qword ptr [rax]; 
0x0000000007b3c4: pop rsp; and al, 0x68; jmp rcx; 
0x000000000cc279: pop rsp; and al, 0xf0; movsd xmm0, [rsp-0x10]; ret; 
0x0000000011ad89: pop rsp; idiv edi; mov eax, [rsp+0x4]; add rsp, 0x28; ret; 
0x0000000011ae3f: pop rsp; idiv edi; mov eax, [rsp+0xc]; add rsp, 0x28; ret; 
0x00000000107abf: pop rsp; imul ecx, [rdx], 0x908b4800; mov al, 0x0; add [rax], al; call qword ptr [rax+0x88]; 
0x00000000083b78: pop rsp; jmp rax; 
0x00000000141332: pop rsp; lea rsi, [rdi+0x48]; mov rdi, r8; mov rax, [rax+0x18]; jmp rax; 
0x000000000979a5: pop rsp; mov rax, r8; pop r13; ret; 
0x0000000014d103: pop rsp; or [rax], eax; mov dword ptr [rip+0x9bdd0], 0x2; pop rbx; ret; 
0x0000000014d174: pop rsp; or [rax], eax; pop rbx; ret; 
0x0000000004b020: pop rsp; or eax, [rax]; add [rax-0x80], al; jmp far fword ptr [rbx]; 
0x0000000013289c: pop rsp; or eax, [rax]; add [rcx+rcx*4-0x40], eax; pop rbp; ret; 
0x000000000d0268: pop rsp; pop qword ptr [rdx]; jbe short 0x00000000000d0270; ret; 
0x00000000081003: pop rsp; pop r13; jmp rax; 
0x00000000077454: pop rsp; pop r13; mov rax, r9; pop r14; ret; 
0x000000001506f5: pop rsp; pop r13; pop r14; jmp rcx; 
0x0000000002c29f: pop rsp; pop r13; pop r14; pop r15; jmp rax; 
0x00000000028589: pop rsp; pop r13; pop r14; pop r15; ret; 
0x0000000002ac3b: pop rsp; pop r13; pop r14; ret; 
0x00000000044232: pop rsp; pop r13; pop rbp; ret; 
0x0000000002a7bc: pop rsp; pop r13; ret; 
0x000000000deea6: pop rsp; pop rbp; ret; 
0x0000000003418a: pop rsp; ret; 
0x00000000040bfc: pop rsp; rol ebx, 0x90; and esi, 0x80000000; mov [rdi], esi; ret; 
0x0000000011f440: pop rsp; sti; jmp qword ptr [rsi+0xf]; 
0x000000000a1e18: pop rsp; syscall; 
0x000000000d8fe5: push 0xffffffffffffff85; dec dword ptr [rdi]; xchg esp, eax; ret; 
0x000000000b290f: push qword ptr [rax]; leave; mov [rax], cl; mov rax, rdi; ret; 
0x000000000b88a8: push qword ptr [rcx]; rcr byte ptr [rbx+0x5d], 0x41; pop rsp; ret; 
0x0000000012563d: push qword ptr [rcx]; ror byte ptr [rax-0x7d], 0xc4; or [rbp+0x41], bl; pop rsp; ret; 
0x0000000011409d: push rdx; or eax, 0x415d5900; pop rsp; pop r13; ret; 
0x0000000008bae2: rcr byte ptr [rbp+0x41], 0x1; pop rsp; ret; 
0x0000000008130a: rcr byte ptr [rbp+0x41], cl; pop rsp; pop r13; jmp rax; 
0x00000000081778: rcr byte ptr [rbx+0x5d], 0x41; pop rsp; pop r13; pop r14; ret; 
0x000000000447b1: rcr byte ptr [rbx+0x5d], 0x41; pop rsp; pop r13; ret; 
0x0000000003d7d2: rcr byte ptr [rbx+0x5d], 0x41; pop rsp; ret; 
0x000000000eab48: rol byte ptr [rbx+0x3d740afb], 0x48; add esp, 0x8; pop rbx; pop rbp; ret; 
0x00000000081d65: rol byte ptr [rcx+rcx*4+0x22], 0x48; add esp, 0x8; pop rbp; pop r12; ret; 
0x000000000834ea: rol byte ptr [rdx], 0x0; add [rbp+0x41], bl; pop rsp; pop r13; ret; 
0x00000000126da6: rol dword ptr [rax], cl; add [rax], al; leave; ret; 
0x0000000012563f: ror byte ptr [rax-0x7d], 0xc4; or [rbp+0x41], bl; pop rsp; ret; 
0x000000000b7cd4: ror byte ptr [rax], cl; leave; cmove rax, rdx; ret; 
0x000000000d0ae9: ror byte ptr [rcx-0x3f76b3fe], 0x48; add esp, 0x8; ret; 
0x000000001904d4: ror byte ptr [rdi], 0x85; add eax, 0x48ffffff; add esp, 0x38; ret; 
0x000000000719e9: ror dword ptr [rax+0x39], 0x1; enter 0x6176, 0x4d; movsxd esp, esp; mov rdx, r12; call qword ptr [r13+0x38]; 
0x000000000596ef: rstorssp [r8-0x8]; saveprevssp; mov [r9+0x3a8], rdi; mov rsp, rdx; ret; 
0x00000000156757: sar byte ptr [rax+0xe], 0x48; add esp, 0x8; pop rbp; pop r12; ret; 
0x000000000596f5: saveprevssp; mov [r9+0x3a8], rdi; mov rsp, rdx; ret; 
0x000000000869ce: sbb [rcx], dh; rcr byte ptr [rbx+0x5d], 0x41; pop rsp; pop r13; ret; 
0x0000000014b4f4: sbb al, 0x48; add esp, 0x10; pop rbx; ret; 
0x0000000004284a: sbb al, 0x48; add esp, 0x98; pop rbp; pop r12; ret; 
0x00000000113b72: sbb bh, [rip+0x415d000d]; pop rsp; pop r13; ret; 
0x000000000e03fb: sbb eax, 0x48000005; add esp, 0xb8; pop rbx; pop rbp; ret; 
0x00000000113970: shl bh, 0x1; dec dword ptr [rbx+0x48082444]; add esp, 0x28; ret; 
0x000000000de8d8: shl byte ptr [rbp+0x5], 0x48; add esp, 0x8; ret; 
0x00000000041b8e: shl byte ptr [rbp+0xf], 0x48; add esp, 0x8; ret; 
0x00000000181e20: shl byte ptr [rbp+rbx-0xd], 0xf; mov esp, 0xc80148c0; add rax, rdi; vzeroupper; ret; 
0x000000000ecdca: shl byte ptr [rbp-0x68], 0x48; add esp, 0x8; pop rbx; pop rbp; ret; 
0x0000000017e2f2: shl byte ptr [rbx+rbx-0xd], 0xf; mov esp, 0xf80148c0; add rax, rcx; vzeroupper; ret; 
0x00000000145c11: shl byte ptr [rsp+rcx+0x48], cl; add esp, 0x8; pop rbx; pop rbp; ret; 
0x0000000011a37b: shl dword ptr [rsi-0x9], 0x1; dec dword ptr [rbx+0x48082444]; add esp, 0x18; ret; 
0x00000000113983: shl esp, 0xc; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x2]; mov eax, 0xffffffff; ret; 
0x0000000009332a: shr al, 0xa0; leave; cld; jmp qword ptr [rbx+rcx*4+0x4]; 
0x0000000011f43b: sldt [rax]; add al, ch; pop rsp; sti; jmp qword ptr [rsi+0xf]; 
0x000000000de881: sti; dec dword ptr [rbx+0x480c2444]; add esp, 0x18; ret; 
0x000000000de75b: sti; dec dword ptr [rbx+0x480c2444]; add esp, 0x28; ret; 
0x000000000de6a1: sti; dec dword ptr [rbx+0x48102444]; add esp, 0x28; ret; 
0x000000000f9992: stosb [rdi]; leave; bnd jmp qword ptr [rbx+rcx*4+0x4]; 
0x0000000012b67a: stosb [rdi]; leave; or eax, [rax]; syscall; 
0x000000000ae204: stosd [rdi]; fimul st, dword ptr [rax+0xf]; mov esp, 0xd00148d2; sub rax, rdi; ret; 
0x00000000126da0: sub [rax], al; add [rax], al; jne 0x0000000000126e7d; leave; ret; 
0x00000000055916: sub [rax], al; add [rax], al; jne short 0x0000000000055995; leave; ret; 
0x00000000141c64: sub [rbp+0x41], bl; pop rsp; pop r13; pop r14; ret; 
0x0000000014c297: sub [rbx+0x41], bl; pop rsp; ret; 
0x0000000010e1d1: sub al, bh; dec dword ptr [rbx+0x48182444]; add esp, 0x28; ret; 
0x00000000055913: sub eax, [0x28]; jne short 0x0000000000055995; leave; ret; 
0x00000000126d9d: sub ecx, [0x28]; jne 0x0000000000126e7d; leave; ret; 
0x00000000052f93: sub esp, 0x18; mov rsi, rsp; mov edi, 0x3001; mov eax, 0x9e; syscall; 
0x0000000015936b: sub esp, 0x28; mov r13, [rip+0x89a43]; mov [rsp+0x8], rcx; lea rdi, [r13+0x988]; call qword ptr [r13+0xf88]; 
0x00000000119017: sub esp, 0x8; call rsi; 
0x000000001597bc: sub esp, 0x8; push qword ptr [rax]; mov rax, [rip+0x89670]; mov rdi, [rdi]; call qword ptr [rax+0x278]; 
0x0000000014b978: sub esp, 0xffffff80; mov eax, r8d; pop rbp; ret; 
0x00000000108648: sub esp, 0xffffff80; pop rbp; pop r12; pop r13; ret; 
0x00000000055912: sub rax, [0x28]; jne short 0x0000000000055995; leave; ret; 
0x00000000055911: sub rax, fs:[0x28]; jne short 0x0000000000055995; leave; ret; 
0x00000000126d9c: sub rcx, [0x28]; jne 0x0000000000126e7d; leave; ret; 
0x00000000126d9b: sub rcx, fs:[0x28]; jne 0x0000000000126e7d; leave; ret; 
0x00000000108a26: test [rax+0x48000000], ebp; add esp, 0x68; pop rbp; pop r12; ret; 
0x0000000014fb42: test [rax+0x48000000], ebx; add esp, 0x28; pop rbx; pop rbp; ret; 
0x0000000010d726: test [rax+0x48000000], ebx; add esp, 0x40; pop r12; ret; 
0x0000000009a57d: test [rbp+0x48000000], ebp; add esp, 0x10; mov eax, r12d; pop r12; ret; 
0x0000000009a6a0: test [rbp+0x48000000], ebp; add esp, 0x18; ret; 
0x00000000108ba1: test [rbp+0x48000000], edi; add esp, 0x78; ret; 
0x000000001091a7: test [rcx+0x48000000], ebx; add esp, 0x68; ret; 
0x00000000050327: test [rcx+0x48000000], ecx; add esp, 0x10; pop rbx; ret; 
0x000000001092e8: test [rcx+0x48000000], esi; add esp, 0x30; pop rbx; ret; 
0x000000000fbb5f: test [rcx+0x48000005], ebp; add esp, 0x68; pop rbx; pop rbp; ret; 
0x0000000014bd5e: test [rdi+0x48000000], ebx; add esp, 0x48; pop rbx; pop rbp; ret; 
0x000000000c65ed: test [rdi+0x48000000], ebx; add esp, 0x8; pop rbx; pop rbp; ret; 
0x00000000138cc0: test [rdi+0x48000000], ecx; add esp, 0x58; pop rbx; pop rbp; ret; 
0x00000000141eec: test [rdi+0x48000000], esp; add esp, 0x68; pop rbx; pop rbp; ret; 
0x000000000e03fa: test [rip+0x48000005], ebx; add esp, 0xb8; pop rbx; pop rbp; ret; 
0x000000001904d6: test [rip+0x48ffffff], eax; add esp, 0x38; ret; 
0x000000000596fc: test al, 0x3; add [rax], al; mov rsp, rdx; ret; 
0x0000000017d34d: test byte ptr [rbp+0x48d674d2], 0x63; leave; add rax, rcx; sub rax, rdi; ret; 
0x000000000fbb60: test eax, 0x48000005; add esp, 0x68; pop rbx; pop rbp; ret; 
0x00000000083df6: xchg [rax+0x48000000], esp; cmp dword ptr [rax+0x30], 0x0; je short 0x0000000000083e08; ret; 
0x000000000d3a66: xchg ebp, esp; sar bh, cl; jmp qword ptr [rsi-0x7f]; 
0x000000000318b1: xchg esp, eax; add [rax], al; add [rax+0x39], cl; ret far; 
0x0000000003e918: xchg esp, eax; add [rax], al; add [rbx-0x7bf0fe08], al; ret; 
0x0000000003161d: xchg esp, eax; and al, 0x80; add [rax], al; add [rax+0x39], cl; ret; 
0x0000000005141d: xchg esp, eax; and al, 0x98; add [rax], al; add [rcx+0x1], cl; ret; 
0x000000000f4411: xchg esp, eax; and al, 0xa0; add [rax], eax; add [rcx], al; ret; 
0x0000000014ce5e: xchg esp, eax; in eax, dx; jmp qword ptr [rax+rcx*2-0x39]; 
0x0000000014ba58: xchg esp, eax; mov eax, [0xeb158d481e6affff]; mov al, [0x4c00000002beffff]; lea ecx, [rsp+0x14]; call qword ptr [rax]; 
0x0000000017c8e9: xchg esp, eax; or [rax], eax; add [rbp-0x77], cl; ret far; 
0x000000001199a4: xchg esp, eax; or al, 0x0; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000011e8c3: xchg esp, eax; or al, 0x0; syscall; 
0x0000000007609e: xchg esp, eax; out 0xff, eax; jmp qword ptr [rsi+0xf]; 
0x00000000144986: xchg esp, eax; rcr byte ptr [rbx+0x5d], 0xf; mov dh, 0xc0; pop r12; ret; 
0x00000000034f4a: xchg esp, eax; ret; 
0x000000000faffe: xchg esp, eax; ror byte ptr [rax-0x7d], 0xc4; adc [rbx+0x5d], bl; pop r12; ret; 
0x00000000151a0c: xchg esp, eax; ror byte ptr [rax-0x7d], 0xc4; or [rcx+rcx*4-0x40], al; ret; 
0x000000000503e3: xchg esp, eax; ror byte ptr [rax-0x7d], 0xc4; or [rdi], cl; mov dh, 0xc0; ret; 
0x000000000e0c4c: xchg esp, eax; ror byte ptr [rdi], 0xb6; ror byte ptr [rax-0x73], 0x44; add bh, bh; ret; 
0x0000000005dcf7: xchg esp, eax; shr cl, 0x66; idiv bh; jmp qword ptr [rsi-0x70]; 
0x00000000093328: xor al, 0x31; shr al, 0xa0; leave; cld; jmp qword ptr [rbx+rcx*4+0x4]; 
0x00000000041eb2: xor eax, 0x98c48148; add [rax], al; add [rbp+0x41], bl; pop rsp; ret; 
0x000000000da634: xor eax, 0xa8c48148; add [rax], al; add [rbp+0x41], bl; pop rsp; ret; 
0x0000000010d680: xor edi, eax; dec dword ptr [rbx+0x48082444]; add esp, 0x28; ret; 
0x0000000007b221: xor esp, esp; jmp rcx; 
0x000000000cc038: xor esp, esp; mov dword ptr fs:[rax], 0x4b; mov rax, r12; pop r12; ret; 
0x000000000cc051: xor esp, esp; mov rax, r12; pop r12; ret; 

CONFIG [ search: Stack-pivot-only, x_match: none, max_len: 5, syntax: Intel, regex_filter: none ]
RESULT [ unique_gadgets: 677, search_time: 588.874577ms, print_time: 12.258151ms ]
