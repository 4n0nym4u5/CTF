TARGET 0 - 'libc.so.6': ELF-X64, 0x00000000028df0 entry, 1492897/1 executable bytes/segments 

0x000000000dff1b: adc [eax], al; test eax, eax; jne short 0x00000000000dff50; mov eax, 0x75; syscall; 
0x0000000011bd31: adc [r10+0x13], r14b; mov qword ptr [rip+0xc7640], 0x2; ret; 
0x00000000089b9a: adc [r10+0x32], r14b; mov [rdi+0x18], rax; mov [rsi], rax; xor eax, eax; ret; 
0x00000000089fba: adc [r10+0x42], r14b; mov [rdi+0x18], rax; mov [rsi], rax; xor eax, eax; ret; 
0x0000000008a4b4: adc [r11+0x10], r14b; lea rdx, [rax+0x1]; mov [rdi+0x8], rdx; movzx eax, byte ptr [rax]; ret; 
0x0000000008a47a: adc [r11+0x12], r14b; lea rdx, [rax+0x1]; mov [rdi+0x8], rdx; movzx eax, byte ptr [rax]; ret; 
0x00000000115637: adc [r11+0x94801e0], al; ror byte ptr [rcx-0x77], 0x1; or [r9-0x75], cl; add [rbx+0x94901e0], eax; ret; 
0x00000000126c46: adc [r11], dil; adc al, 0x74; adc [rbx+0x31], ebx; rol byte ptr [rcx+0x5c], 0x5d; ret; 
0x0000000010d613: adc [r13+0x41], r11b; pop rsp; pop r13; pop r14; ret; 
0x00000000090b05: adc [r13+0x4c1574c0], r8b; mov eax, [rdi+0x8]; mov rax, [rdi]; mov rdi, r8; jmp rax; 
0x0000000013c06a: adc [r13+0x5b0875c0], r8b; pop rbp; pop r12; ret; 
0x000000000a843f: adc [r14+0xf], r12b; xlat [rbx]; rol dword ptr [rbp+0x315775c0], 0xc0; ret; 
0x00000000106e3f: adc [r15], r9b; adc [rdi+0x20], eax; movups [rdi+0x30], xmm0; movups [rdi+0x40], xmm0; ret; 
0x000000000b7fa6: adc [r15], r9b; adc [rdi+rdx-0x10], edx; movups [rdi+rdx-0x20], xmm3; ret; 
0x00000000138ca5: adc [r8+0x14], dil; add edx, 0x1; syscall; 
0x000000000e3af2: adc [r8+0x1], r9b; fmul st, dword ptr [rax-0x7d]; ret; 
0x00000000086042: adc [r8+0x1], r9b; ret; 
0x000000000ed804: adc [r8+0x39], r9b; ret far; 
0x0000000015981b: adc [r8+0x5a], bl; pop rbx; ret; 
0x000000000b744f: adc [r8-0x12cfeba9], r9b; mov [rdi+0x15], ch; ret; 
0x0000000010deff: adc [r8-0x77], r9b; or [r15], r9b; adc [rdi+0x20], ecx; ret; 
0x0000000013c0e9: adc [r8-0x7d], r9b; ret; 
0x000000000b73cc: adc [r8], r14b; in eax, dx; mov [rdi+0x11], ch; ret; 
0x000000000b73ee: adc [r8], r14b; in eax, dx; mov [rdi+0x12], ch; ret; 
0x000000000b742c: adc [r8], r14b; in eax, dx; mov [rdi+0x14], ch; ret; 
0x000000000b74ae: adc [r8], r14b; in eax, dx; mov [rdi+0x18], ch; ret; 
0x0000000014e737: adc [r8], r8b; add [rax], al; add [rcx+rcx*4-0x11], cl; call qword ptr [rax+0x28]; 
0x000000000de6b4: adc [r8], r8b; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000014eac3: adc [r9], al; add [rax], al; add [rcx+rcx*4-0x11], cl; call qword ptr [rax+0x28]; 
0x0000000008fbac: adc [r9], r13b; rol bl, 0x1; mov eax, 0xffffffff; ret; 
0x000000001197ff: adc [rax+0x130], bh; syscall; 
0x0000000010f34f: adc [rax+0x13], bh; syscall; 
0x000000000463cf: adc [rax+0x13e], bh; syscall; 
0x00000000138ca6: adc [rax+0x14], bh; add edx, 0x1; syscall; 
0x0000000010f3ef: adc [rax+0x14], bh; syscall; 
0x0000000010ff1f: adc [rax+0x17], bh; mov edi, [rsp+0xc]; syscall; 
0x0000000014a5b4: adc [rax+0x1], bh; movups [rdi+0x20], xmm2; ret; 
0x00000000143f98: adc [rax+0x1], bh; pop rbx; pop rbp; pop r12; ret; 
0x000000001122cf: adc [rax+0x1], bh; ret; 
0x00000000108d4f: adc [rax+0x1], bh; syscall; 
0x000000000cb34e: adc [rax+0x1], cl; clc; ret; 
0x000000000e3af3: adc [rax+0x1], cl; fmul st, dword ptr [rax-0x7d]; ret; 
0x00000000190d7e: adc [rax+0x1], cl; out dx, eax; call r12; 
0x00000000054b4e: adc [rax+0x1], cl; ret; 
0x0000000014a66d: adc [rax+0x1], dil; ret; 
0x0000000011391f: adc [rax+0x1a], bh; syscall; 
0x000000000de84f: adc [rax+0x22], bh; syscall; 
0x0000000011a32f: adc [rax+0x2a], bh; syscall; 
0x0000000011a25f: adc [rax+0x2b], bh; syscall; 
0x0000000011a76f: adc [rax+0x2e], bh; syscall; 
0x0000000011a60f: adc [rax+0x2f], bh; syscall; 
0x00000000053dab: adc [rax+0x39], cl; ret far; 
0x000000000e1731: adc [rax+0x39], cl; ret; 
0x00000000077545: adc [rax+0x39], ecx; ret; 
0x000000001094ef: adc [rax+0x3], bh; syscall; 
0x00000000159713: adc [rax+0x3b], cl; sub [rbx-0x1b], sil; mov eax, 0x1; ret; 
0x000000000de687: adc [rax+0x3d], bh; syscall; 
0x000000000845ea: adc [rax+0x40], eax; pop rbx; ret; 
0x0000000011b07f: adc [rax+0x46], bh; mov edi, [rsp+0x8]; syscall; 
0x0000000011010f: adc [rax+0x4a], bh; syscall; 
0x000000001101cf: adc [rax+0x4b], bh; syscall; 
0x0000000010966f: adc [rax+0x55], bh; syscall; 
0x0000000015981c: adc [rax+0x5a], bl; pop rbx; ret; 
0x0000000007d6e7: adc [rax+0x63], cl; add al, 0x86; add rax, rsi; notrack jmp rax; 
0x000000000f9a7e: adc [rax+0x63], cl; ret far; 
0x00000000049497: adc [rax+0x63], cl; ret; 
0x000000000fa9cd: adc [rax+0x63], r9b; ret; 
0x000000000dbb1a: adc [rax+0x64010010], edi; mov [r8], r9d; add rsp, 0x8; ret; 
0x00000000172222: adc [rax+0x66c30251], ecx; nop [rax+rax]; mov [rcx], edx; ret; 
0x00000000172241: adc [rax+0x66c30451], ecx; nop [rax+rax]; mov [rcx], edx; mov [rcx+0x4], dx; ret; 
0x00000000172282: adc [rax+0x66c30851], ecx; nop [rax+rax]; mov [rcx], rdx; mov [rcx+0x8], dx; ret; 
0x0000000010d62f: adc [rax+0x7], bh; syscall; 
0x00000000146eb0: adc [rax+0x8], eax; ret; 
0x00000000119ab9: adc [rax+0x9d], bh; syscall; 
0x000000000de741: adc [rax+0xf7], bh; syscall; 
0x000000000604e5: adc [rax+rax], al; add [rbp+0x41], bl; pop rsp; pop r13; ret; 
0x00000000126dc2: adc [rax+rax], cl; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000126cef: adc [rax+rax], ecx; pop rbp; ret; 
0x00000000044a4b: adc [rax+rcx*2+0x33], esp; adc al, 0x25; xor [rax], al; add [rax], al; call rdx; 
0x00000000028cde: adc [rax+rcx*2+0x33], esp; add al, 0x25; xor [rax], al; add [rax], al; call rax; 
0x0000000002901f: adc [rax+rcx*2+0x33], esp; add al, 0x25; xor [rax], al; add [rax], al; jmp rax; 
0x0000000013e603: adc [rax+rcx*2+0x33], esp; cmp al, 0x25; xor [rax], al; add [rax], al; call rax; 
0x000000000b75d4: adc [rax-0x12cfdfb1], cl; mov [rdi+0x21], ch; ret; 
0x000000000b74d2: adc [rax-0x12cfe7b1], cl; mov [rdi+0x19], ch; ret; 
0x000000000b7450: adc [rax-0x12cfeba9], cl; mov [rdi+0x15], ch; ret; 
0x000000000d8ec2: adc [rax-0x1], bh; add rsp, 0x8; pop rbp; pop r12; ret; 
0x0000000014ddc4: adc [rax-0x39], cl; ret; 
0x000000000db32a: adc [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x00000000171e44: adc [rax-0x73], cl; adc [rdi], cl; test [rcx+0x5], eax; add [rax], al; ret; 
0x0000000011d1d4: adc [rax-0x73], cl; adc al, 0xb2; add eax, [rdx+rcx]; ret; 
0x000000000388b6: adc [rax-0x73], cl; adc al, 0xb7; mov r8d, [rdx+rax]; mov eax, r8d; ret; 
0x0000000014962c: adc [rax-0x73], cl; adc eax, 0x6424c; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000009d078: adc [rax-0x73], cl; add eax, 0x1a660; cmove rax, rdx; ret; 
0x0000000009c868: adc [rax-0x73], cl; add eax, 0x1b470; cmovne rax, rdx; ret; 
0x0000000009c738: adc [rax-0x73], cl; add eax, 0x1b4f0; cmovne rax, rdx; ret; 
0x0000000009c2c8: adc [rax-0x73], cl; add eax, 0x1b8b0; cmovne rax, rdx; ret; 
0x000000000b3b9b: adc [rax-0x73], cl; jg short 0x00000000000b3bb0; jne 0x00000000000b4270; ret; 
0x000000000b52bf: adc [rax-0x73], cl; jg short 0x00000000000b52d4; jne 0x00000000000b5ac0; ret; 
0x0000000011d3c4: adc [rax-0x73], cl; or al, 0x8e; add eax, [rcx+rdx]; ret; 
0x000000000500d8: adc [rax-0x73], cl; xor eax, 0x160; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000008a456: adc [rax-0x73], ecx; add [rax-0x77], rcx; sub [rax-0x3f76bbfe], r9b; ret; 
0x000000000b3bbe: adc [rax-0x73], ecx; jg short 0x00000000000b3bd4; jne 0x00000000000b4270; ret; 
0x000000000b52e2: adc [rax-0x73], ecx; jg short 0x00000000000b52f8; jne 0x00000000000b5ac0; ret; 
0x000000000829fe: adc [rax-0x73], ecx; jno short 0x0000000000082a07; mov [rdx+0x20], rsi; mov [rcx], eax; ret; 
0x00000000103f4b: adc [rax-0x73], ecx; or eax, 0xa7fcd; movsxd rdx, [rcx+r9*4]; add rdx, rcx; notrack jmp rdx; 
0x0000000011d3c3: adc [rax-0x73], r9b; or al, 0x8e; add eax, [rcx+rdx]; ret; 
0x00000000083562: adc [rax-0x75], cl; adc cl, [rax+0x39]; ret far; 
0x00000000028caa: adc [rax-0x75], cl; and al, 0x10; call rax; 
0x00000000148f4f: adc [rax-0x75], cl; and al, 0x48; call qword ptr [rax+0x28]; 
0x0000000011c9d0: adc [rax-0x75], cl; and al, 0x8; mov rax, [rsp]; add rsp, 0x38; ret; 
0x0000000011ca31: adc [rax-0x75], cl; and al, 0x8; mov rax, [rsp]; add rsp, 0x40; ret; 
0x00000000141691: adc [rax-0x75], cl; and al, 0x8; mov rdi, rbp; call rcx; 
0x00000000119375: adc [rax-0x75], cl; je short 0x000000000011939e; or [rax+0x119], bh; mov edi, [rsp+0x4]; syscall; 
0x0000000011ad67: adc [rax-0x75], cl; je short 0x000000000011ad90; or [rax+0x12b], bh; mov edi, [rsp+0x4]; syscall; 
0x00000000141f82: adc [rax-0x75], cl; or [r8-0x77], r9b; out dx, eax; call qword ptr [rax+0x20]; 
0x00000000143df1: adc [rax-0x75], cl; or [r9+rcx*4-0x1a], r9b; mov rdi, rbp; call qword ptr [rax]; 
0x0000000008537b: adc [rax-0x75], cl; push rbx; mov rdi, rbx; sub rdx, rsi; call qword ptr [rax+0x70]; 
0x00000000159ccf: adc [rax-0x75], ecx; add eax, 0x8f5f1; mov rax, [rax+0x10]; add rsp, 0x38; jmp rax; 
0x000000000837a7: adc [rax-0x77], cl; adc [rax-0x77], cl; push rax; adc [rax-0x77], cl; ret; 
0x000000000a4d7c: adc [rax-0x77], cl; adc bl, al; nop [rax]; mov byte ptr [rax], 0x0; ret; 
0x00000000150356: adc [rax-0x77], cl; and al, 0x10; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x000000000b2a9c: adc [rax-0x77], cl; clc; ret; 
0x00000000059db2: adc [rax-0x77], cl; jl short 0x0000000000059ddb; sbb al, ch; ret; 
0x0000000008487b: adc [rax-0x77], cl; jo short 0x00000000000848c0; mov [rax], rdx; xor eax, eax; ret; 
0x0000000010df00: adc [rax-0x77], cl; or [r15], r9b; adc [rdi+0x20], ecx; ret; 
0x0000000014fbc0: adc [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x8]; 
0x0000000008ae45: adc [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x90]; 
0x0000000014fb67: adc [rax-0x77], cl; out dx, eax; call qword ptr [rax]; 
0x00000000114cf7: adc [rax-0x77], cl; out dx, eax; call rax; 
0x00000000142327: adc [rax-0x77], cl; out dx, eax; mov [rbx], rax; xor eax, eax; call qword ptr [rbx+0x18]; 
0x000000000b9d3e: adc [rax-0x77], cl; out dx, eax; mov rsi, [rsp+0x18]; call rbx; 
0x000000000837ab: adc [rax-0x77], cl; push rax; adc [rax-0x77], cl; ret; 
0x000000000837ec: adc [rax-0x77], cl; push rax; movups [rax], xmm0; ret; 
0x000000000837af: adc [rax-0x77], cl; ret; 
0x00000000094c5a: adc [rax-0x77], cl; ror dword ptr [rax-0x75], 0x5; ret; 
0x000000000284ae: adc [rax-0x77], ecx; add eax, 0x1be192; ret; 
0x0000000007fe6e: adc [rax-0x77], ecx; ret far; 
0x00000000114bc1: adc [rax-0x7b], cl; dec dword ptr [rdi]; test [rbp+0x49000000], edx; mov edi, [rbp]; call rbx; 
0x000000001159c1: adc [rax-0x7b], cl; dec dword ptr [rdi]; test [rbp+0x49000000], esi; mov edi, [rbp]; call rbx; 
0x00000000114b8c: adc [rax-0x7b], cl; dec dword ptr [rdi]; test [rdx+0x49000000], ecx; mov edi, [rbp]; call rbx; 
0x00000000114b59: adc [rax-0x7b], cl; dec dword ptr [rdi]; test [rip+0x49000001], ebx; mov edi, [rbp]; call rbx; 
0x00000000115a1d: adc [rax-0x7b], cl; push qword ptr [rbp+0x1d]; mov rdi, [r13]; call rbx; 
0x0000000011594f: adc [rax-0x7b], cl; push qword ptr [rbp+0x4b]; mov rdi, [r12]; call rbx; 
0x00000000114bed: adc [rax-0x7b], cl; push qword ptr [rbp+0x4d]; mov rdi, [r13]; call rbx; 
0x000000001159f1: adc [rax-0x7b], cl; push qword ptr [rbp+0x69]; mov rdi, [r13]; call rbx; 
0x00000000123062: adc [rax-0x7b], cl; ror byte ptr [rdi], 0x84; ret far; 
0x000000000f887c: adc [rax-0x7b], cl; shl byte ptr [rbp+rax+0x48], 0x39; ret; 
0x000000000968ab: adc [rax-0x7d], cl; call qword ptr [rax]; 
0x00000000062991: adc [rax-0x7d], cl; ret; 
0x0000000014d432: adc [rax-0x7d], cl; rol byte ptr [rcx], 0x39; ret; 
0x000000000a4b3f: adc [rax-0x7d], cl; rol byte ptr [rcx], 0xf; mov esi, 0xf2390714; je short 0x00000000000a4b40; ret; 
0x00000000113dc4: adc [rax-0x7d], ecx; ret; 
0x00000000059fe0: adc [rax-0xdf6b], ecx; jmp qword ptr [rsi+0xf]; 
0x0000000014e738: adc [rax], al; add [rax], al; add [rcx+rcx*4-0x11], cl; call qword ptr [rax+0x28]; 
0x0000000009243e: adc [rax], al; add [rax], al; cmova rax, rdx; mov [rip+0x154a4b], rax; ret; 
0x00000000142ec2: adc [rax], al; add [rax], al; mov [rsi+0x8], rax; ret; 
0x0000000010e35e: adc [rax], al; add [rax], al; mov eax, 0x48; syscall; 
0x00000000142f89: adc [rax], al; add [rax], al; mov qword ptr [rsi+0x8], 0x0; mov [rsi+0x10], rax; ret; 
0x00000000142eee: adc [rax], al; add [rax], al; mov qword ptr [rsi+0x8], 0x1; mov [rsi+0x10], rax; ret; 
0x00000000080531: adc [rax], al; add [rax], al; mov rsi, r13; mov rdi, r15; call qword ptr [r14+0x38]; 
0x000000001415e5: adc [rax], al; add [rax], al; pop rbx; pop rbp; ret; 
0x000000000b8582: adc [rax], al; add [rax], al; pop rbx; ret; 
0x00000000061169: adc [rax], al; add [rax], al; ret; 
0x0000000010e7ba: adc [rax], al; add [rax], al; syscall; 
0x000000000a7128: adc [rax], al; add [rbp-0x77], cl; ret far; 
0x000000000db3c4: adc [rax], al; add [rcx+rax*2-0x77], esp; sbb [rcx+rcx*4-0x40], ecx; pop rbx; ret; 
0x00000000060794: adc [rax], al; add [rcx+rcx*4-0x20], cl; pop rbp; pop r12; ret; 
0x0000000007a7b7: adc [rax], al; add [rcx+rcx*4-0xe], cl; mov rsi, r15; mov rdi, rbp; call qword ptr [rbx+0x38]; 
0x000000000d99e5: adc [rax], al; lea rdi, [rip+0x10bcd2]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000d999f: adc [rax], al; lea rdi, [rip+0x10bd18]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000d97fd: adc [rax], al; lea rdi, [rip+0x10beba]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000d97ce: adc [rax], al; lea rdi, [rip+0x10bee9]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000d9705: adc [rax], al; lea rdi, [rip+0x10bfb2]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000d96dc: adc [rax], al; lea rdi, [rip+0x10bfdb]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000d920a: adc [rax], al; lea rdi, [rip+0x10c4ad]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000d8f9d: adc [rax], al; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000a4e22: adc [rax], al; mov edx, eax; movsxd rdx, [r8+rdx*4]; add rdx, r8; notrack jmp rdx; 
0x000000000a4e21: adc [rax], al; mov edx, eax; movsxd rdx, [r8+rdx*4]; add rdx, r8; notrack jmp rdx; 
0x000000000a4c92: adc [rax], al; mov edx, eax; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x000000000a4d65: adc [rax], al; mov edx, edx; movsxd rdx, [rdi+rdx*4]; add rdx, rdi; notrack jmp rdx; 
0x000000000a4d64: adc [rax], al; mov edx, edx; movsxd rdx, [rdi+rdx*4]; add rdx, rdi; notrack jmp rdx; 
0x000000000d8f05: adc [rax], al; mov rax, [rax+0x230]; test rax, rax; je short 0x00000000000d8f40; call rax; 
0x000000000d8e95: adc [rax], al; mov rax, [rax+0x250]; test rax, rax; je short 0x00000000000d8ed0; call rax; 
0x000000000deab5: adc [rax], al; mov rdi, r9; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000a52df: adc [rax], al; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000009970f: adc [rax], al; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000000de568: adc [rax], al; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000d8f85: adc [rax], al; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000da1bd: adc [rax], al; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000028ba3: adc [rax], al; nop [rax+rax]; nop; endbr64; ret; 
0x000000000d9211: adc [rax], al; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000dab1c: adc [rax], al; syscall; 
0x000000000db2dc: adc [rax], al; test eax, eax; jne short 0x00000000000db310; mov eax, 0x74; syscall; 
0x000000000dfbac: adc [rax], al; test eax, eax; jne short 0x00000000000dfbe0; mov eax, 0x69; syscall; 
0x000000000dfc4c: adc [rax], al; test eax, eax; jne short 0x00000000000dfc80; mov eax, 0x6a; syscall; 
0x000000000dff1c: adc [rax], al; test eax, eax; jne short 0x00000000000dff50; mov eax, 0x75; syscall; 
0x000000000dffcb: adc [rax], al; test eax, eax; jne short 0x00000000000e0000; mov eax, 0x77; syscall; 
0x000000000dffca: adc [rax], al; test eax, eax; jne short 0x00000000000e0000; mov eax, 0x77; syscall; 
0x0000000018c05e: adc [rax], bh; enter 0x275, 0x39; enter 0xc019, 0x83; fdivr st, st(7); ret; 
0x00000000053148: adc [rax], bh; jne short 0x0000000000053153; push r10; ret; 
0x00000000053621: adc [rax], bh; jne short 0x000000000005362c; push r10; ret; 
0x00000000142fd7: adc [rax], ch; mov rax, [rdi+0x8]; call qword ptr [rax+0x30]; 
0x000000000b73cd: adc [rax], dh; in eax, dx; mov [rdi+0x11], ch; ret; 
0x000000000b73ef: adc [rax], dh; in eax, dx; mov [rdi+0x12], ch; ret; 
0x000000000b742d: adc [rax], dh; in eax, dx; mov [rdi+0x14], ch; ret; 
0x000000000b74af: adc [rax], dh; in eax, dx; mov [rdi+0x18], ch; ret; 
0x000000000b75b1: adc [rax], dh; in eax, dx; mov [rdi+0x20], ch; ret; 
0x00000000060988: adc [rax], dl; add [rax], al; pop rbp; ret; 
0x00000000106ca4: adc [rax], eax; add [rax], al; syscall; 
0x000000000a6fa8: adc [rax], eax; add [rbp-0x77], cl; ret far; 
0x000000000cc115: adc [rax], eax; add rsp, 0x8; ret; 
0x000000000de944: adc [rax], eax; and [rcx], al; mov eax, 0x38; syscall; 
0x000000000cc155: adc [rax], eax; mov dword ptr fs:[rax], 0x16; xor eax, eax; ret; 
0x000000000cc135: adc [rax], eax; mov dword ptr fs:[rax], 0x4b; xor eax, eax; add rsp, 0x8; ret; 
0x000000000cdd9b: adc [rax], eax; movaps [rax], xmm0; add rsp, 0x10; pop rbp; ret; 
0x0000000008c760: adc [rax], eax; movzx eax, al; movsxd rax, [r10+rax*4]; add rax, r10; notrack jmp rax; 
0x000000000cceb5: adc [rax], eax; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000ccd9d: adc [rax], eax; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x000000000837f3: adc [rax], eax; ret; 
0x000000000c6363: adc [rax], eax; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000c6181: adc [rax], eax; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000c6688: adc [rax], eax; syscall; 
0x0000000014a5cc: adc [rax], ebx; ret; 
0x000000001072fb: adc [rax], ecx; add [rax], al; add rsp, 0x18; ret; 
0x00000000149cb4: adc [rax], ecx; ret; 
0x00000000149ccc: adc [rax], edx; ret; 
0x0000000014a5ac: adc [rax], esp; ret; 
0x000000000de7b8: adc [rax], r8b; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000de774: adc [rax], r8b; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000deab3: adc [rbp+0x10], edi; add [rcx+rcx*4-0x31], cl; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000143990: adc [rbp+0x28840fc0], al; add [rax], eax; add [rcx+rcx*4-0x19], cl; call qword ptr [rbx]; 
0x000000000593ac: adc [rbp+0x29], cl; ret; 
0x0000000008ecef: adc [rbp+0x38], eax; pop rbp; pop r12; ret; 
0x0000000010d614: adc [rbp+0x41], bl; pop rsp; pop r13; pop r14; ret; 
0x0000000003498a: adc [rbp+0x41], bl; pop rsp; pop r13; ret; 
0x0000000011d15d: adc [rbp+0x440e75d2], eax; mov eax, eax; ret; 
0x00000000143ded: adc [rbp+0x481074c0], al; mov eax, [rbp+0x8]; mov rsi, r12; mov rdi, rbp; call qword ptr [rax]; 
0x0000000014fb5a: adc [rbp+0x487974c0], al; mov eax, [rbp+0x8]; lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax]; 
0x000000001417be: adc [rbp+0x494874c0], al; mov edi, [rsp]; mov rsi, r13; mov rax, [rdi+0x38]; call qword ptr [rax+0x10]; 
0x00000000090b06: adc [rbp+0x4c1574c0], al; mov eax, [rdi+0x8]; mov rax, [rdi]; mov rdi, r8; jmp rax; 
0x0000000013c06b: adc [rbp+0x5b0875c0], al; pop rbp; pop r12; ret; 
0x0000000013ad8a: adc [rbp+rax-0x18], dh; scasb [rdi]; mov ch, 0xee; jmp qword ptr [rsi+0xf]; 
0x000000000b42d9: adc [rbp+rcx*4+0x1d], cl; dec dword ptr [rdi+rcx]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b42f9: adc [rbp+rcx*4+0x1d], cl; fisttp word ptr [rdi+rcx], st; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000108133: adc [rbp-0x389bfff3], ebp; add [rsi], dl; add [rax], al; add [rax-0x1], bh; ret; 
0x000000000b9139: adc [rbp-0x5f], esi; test edx, edx; jne short 0x00000000000b9120; ret; 
0x0000000012603c: adc [rbp-0x78], ebp; call rax; 
0x0000000012639e: adc [rbp-0x78], ebx; call rax; 
0x00000000125fb1: adc [rbp-0x78], ecx; call rcx; 
0x000000001266a5: adc [rbp-0x78], edi; call rax; 
0x00000000126227: adc [rbp-0x78], edi; call rcx; 
0x0000000012614d: adc [rbp-0x78], edx; call r8; 
0x000000001265ce: adc [rbp-0x78], esi; call rax; 
0x0000000012609e: adc [rbp-0x78], esp; call rax; 
0x00000000115916: adc [rbp-0x7b], cl; in al, 0x75; and al, 0x48; mov edi, [rbp]; call rbx; 
0x00000000114acd: adc [rbp-0x7b], cl; in al, 0x75; mov rdi, [rbp]; call rbx; 
0x00000000114aff: adc [rbp-0x7b], cl; in eax, dx; jne short 0x0000000000114b7b; mov rdi, [r12]; call rbx; 
0x00000000114b2f: adc [rbp-0x7b], cl; in eax, dx; jne short 0x0000000000114bb0; mov rdi, [r12]; call rbx; 
0x0000000011597b: adc [rbp-0x7b], cl; in eax, dx; jne short 0x00000000001159e0; mov rdi, [r12]; call rbx; 
0x000000000f8796: adc [rbp-0x7b], cl; shl byte ptr [rcx+rcx+0x4c], 0x39; ret; 
0x0000000008a4b5: adc [rbx+0x10], dh; lea rdx, [rax+0x1]; mov [rdi+0x8], rdx; movzx eax, byte ptr [rax]; ret; 
0x0000000008a47b: adc [rbx+0x12], dh; lea rdx, [rax+0x1]; mov [rdi+0x8], rdx; movzx eax, byte ptr [rax]; ret; 
0x000000000b8bf7: adc [rbx+0x137403f8], al; xor eax, eax; ret; 
0x0000000008d58f: adc [rbx+0x1590d92d], al; add [rcx], al; ret; 
0x0000000008aa83: adc [rbx+0x18], eax; movups [rbx+0x28], xmm0; pop rbx; ret; 
0x0000000009b971: adc [rbx+0x18], eax; pop rbx; pop rbp; pop r12; ret; 
0x0000000008aa87: adc [rbx+0x28], eax; pop rbx; ret; 
0x00000000126c4c: adc [rbx+0x31], ebx; rol byte ptr [rcx+0x5c], 0x5d; ret; 
0x0000000009b60f: adc [rbx+0x38], eax; mov [rbx], rsi; call rcx; 
0x0000000009b541: adc [rbx+0x38], eax; movsxd rdi, esi; mov [rbx], rdi; call rcx; 
0x0000000008e476: adc [rbx+0x38], eax; pop rbx; pop rbp; pop r12; ret; 
0x000000000606e9: adc [rbx+0x41], bl; pop rsp; pop r13; ret; 
0x0000000018c66f: adc [rbx+0x463bfc47], cl; cld; jne short 0x000000000018c680; xor eax, eax; ret; 
0x00000000045729: adc [rbx+0x48], bl; mov dword ptr [rip+0x1a0c29], 0x0; mov eax, [rax+0x58]; ret; 
0x0000000008df56: adc [rbx+0x48], eax; pop rbx; ret; 
0x0000000007da67: adc [rbx+0x5d], bl; pop r12; pop r13; pop r14; ret; 
0x00000000083851: adc [rbx+0x5d], bl; pop r12; ret; 
0x0000000008aa7f: adc [rbx+0x8], eax; movups [rbx+0x18], xmm0; movups [rbx+0x28], xmm0; pop rbx; ret; 
0x0000000008ab86: adc [rbx+0x8], eax; pop rbx; ret; 
0x00000000115638: adc [rbx+0x94801e0], al; ror byte ptr [rcx-0x77], 0x1; or [r9-0x75], cl; add [rbx+0x94901e0], eax; ret; 
0x00000000136b4e: adc [rbx+0xba05ff], eax; add [rax], al; add [rax+0x102], bh; cmovne eax, edx; ret; 
0x000000000b3367: adc [rbx+0xff3174e], cl; jg short 0x00000000000b3376; mov [rdi+0x10], rdx; mov [rdi+0x17], ecx; ret; 
0x000000000b4057: adc [rbx+0xff3174e], cl; jg short 0x00000000000b4066; mov [rdi+0x10], rdx; mov [rdi+0x17], ecx; ret; 
0x000000000b6677: adc [rbx+0xff3174e], cl; jg short 0x00000000000b6686; mov [rdi+0x10], rdx; mov [rdi+0x17], ecx; ret; 
0x000000000b7167: adc [rbx+0xff3174e], cl; jg short 0x00000000000b7176; mov [rdi+0x10], rdx; mov [rdi+0x17], ecx; ret; 
0x000000000b3387: adc [rbx+0xff3184e], cl; jg short 0x00000000000b3396; mov [rdi+0x10], rdx; mov [rdi+0x18], ecx; ret; 
0x000000000b4077: adc [rbx+0xff3184e], cl; jg short 0x00000000000b4086; mov [rdi+0x10], rdx; mov [rdi+0x18], ecx; ret; 
0x000000000b6697: adc [rbx+0xff3184e], cl; jg short 0x00000000000b66a6; mov [rdi+0x10], rdx; mov [rdi+0x18], ecx; ret; 
0x000000000b7187: adc [rbx+0xff3184e], cl; jg short 0x00000000000b7196; mov [rdi+0x10], rdx; mov [rdi+0x18], ecx; ret; 
0x0000000010ca0e: adc [rbx+r9*4+0x63], r9b; or [rax-0x7d], cl; ret; 
0x0000000010ca0f: adc [rbx+rcx*4+0x63], cl; or [rax-0x7d], cl; ret; 
0x000000000d57f8: adc [rbx+rcx*4-0x68], cl; nop; add [rax], eax; add cl, ch; ret far; 
0x0000000008fbaa: adc [rbx-0x2fd6efb9], cl; ret; 
0x00000000150f36: adc [rbx-0x3d], bl; nop [rax]; mov rax, [rdi+0x8]; lea rsi, [rsp+0x4]; call qword ptr [rax+0x40]; 
0x00000000143d36: adc [rbx-0x3d], bl; nop [rax]; mov rax, [rdi+0x8]; mov rsi, rsp; call qword ptr [rax]; 
0x00000000108c07: adc [rbx-0x47e7db84], cl; add [rcx], eax; add [rax], al; syscall; 
0x0000000011ae22: adc [rbx-0x47f3db84], cl; xor eax, [rcx]; add [rax], al; syscall; 
0x0000000013708e: adc [rbx-0x73], al; add [rdx], r8d; pop rbx; ret; 
0x00000000126c47: adc [rbx], bh; adc al, 0x74; adc [rbx+0x31], ebx; rol byte ptr [rcx+0x5c], 0x5d; ret; 
0x000000000461b8: adc [rbx], eax; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000000b80cc: adc [rbx], eax; ret; 
0x0000000010ff3b: adc [rbx], ecx; clc; dec dword ptr [rbx+0x480c2444]; add esp, 0x38; ret; 
0x000000000b8045: adc [rbx], esp; ret; 
0x0000000013de91: adc [rcx+0x244489ee], cl; adc al, 0x4c; mov edx, esp; mov eax, 0x81; syscall; 
0x000000000a370f: adc [rcx+0x39], cl; ret; 
0x000000001898b6: adc [rcx+0x4], esp; vmovups [r9+0x140], zmm13; vmovups [r9+0x180], zmm14; vmovups [r9+0x1c0], zmm15; ret; 
0x000000001898b5: adc [rcx+0x4], rsp; vmovups [r9+0x140], zmm13; vmovups [r9+0x180], zmm14; vmovups [r9+0x1c0], zmm15; ret; 
0x000000001373d9: adc [rcx+0x4e2c1f2], ecx; add edx, 0x8; cmp esi, 0x80; cmovb eax, edx; ret; 
0x000000001898bd: adc [rcx+0x5], ebp; vmovups [r9+0x180], zmm14; vmovups [r9+0x1c0], zmm15; ret; 
0x000000001898bc: adc [rcx+0x5], rbp; vmovups [r9+0x180], zmm14; vmovups [r9+0x1c0], zmm15; ret; 
0x0000000013f792: adc [rcx+0x5c], al; ret; 
0x00000000172261: adc [rcx+0x66c30351], ecx; nop [rax+rax]; mov [rcx], rdx; ret; 
0x000000001722a2: adc [rcx+0x66c30751], ecx; nop [rax+rax]; mov [rcx], rdx; mov [rcx+0x8], edx; ret; 
0x000000001722b2: adc [rcx+0x66c30851], ecx; nop [rax+rax]; mov [rcx], rdx; mov [rcx+0x5], rdx; ret; 
0x000000001898c4: adc [rcx+0x6], esi; vmovups [r9+0x1c0], zmm15; ret; 
0x000000001898c3: adc [rcx+0x6], rsi; vmovups [r9+0x1c0], zmm15; ret; 
0x000000001898cb: adc [rcx+0x7], edi; ret; 
0x000000001898ca: adc [rcx+0x7], rdi; ret; 
0x00000000144aa4: adc [rcx+rcx*4-0x16], cl; mov rsi, r12; mov rdi, rbp; call rax; 
0x00000000132fe4: adc [rcx+rcx*4-0x1a], cl; call qword ptr [rsp+0x58]; 
0x000000001470f1: adc [rcx+rcx*4-0x1a], cl; mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x8]; 
0x00000000143987: adc [rcx+rcx*4-0x1e], cl; mov rdi, r14; call qword ptr [rax+0x10]; 
0x000000001439c1: adc [rcx+rcx*4-0x1e], cl; mov rdi, r14; call qword ptr [rax+0x20]; 
0x0000000009a585: adc [rcx+rcx*4-0x20], al; pop r12; ret; 
0x00000000042674: adc [rcx+rcx*4-0x20], al; pop rbx; pop rbp; pop r12; ret; 
0x0000000014101f: adc [rcx+rcx*4-0x20], cl; pop r12; ret; 
0x000000000349b2: adc [rcx+rcx*4-0x20], cl; pop rbp; pop r12; pop r13; ret; 
0x00000000137934: adc [rcx+rcx*4-0x20], cl; pop rbx; pop rbp; pop r12; ret; 
0x000000001084e5: adc [rcx+rcx*4-0x30], al; cmp r10, rax; jne short 0x0000000000108518; mov eax, 0x103; syscall; 
0x0000000014c158: adc [rcx+rcx*4-0x40], al; pop r12; ret; 
0x00000000156915: adc [rcx+rcx*4-0x40], al; pop rbp; ret; 
0x00000000045011: adc [rcx+rcx*4-0x40], al; pop rbx; pop rbp; pop r12; ret; 
0x000000000969fa: adc [rcx+rcx*4-0x40], cl; pop rbp; ret; 
0x00000000099ee7: adc [rcx+rcx*4-0x40], cl; pop rbx; pop rbp; pop r12; ret; 
0x000000000e8212: adc [rcx+rcx*4-0x40], cl; pop rbx; pop rbp; pop r13; ret; 
0x0000000009680a: adc [rcx+rcx*4-0x40], cl; pop rbx; ret; 
0x000000000d0ace: adc [rcx+rcx*4-0x40], ecx; add rsp, 0x8; ret; 
0x00000000132bd4: adc [rcx+rcx*4-0xe], cl; mov rdi, r13; mov rsi, [rsp+0x8]; call rbp; 
0x0000000014d173: adc [rcx+rcx], ebx; pop rbx; ret; 
0x000000000b8037: adc [rcx-0x10], esi; movups [rcx-0x20], xmm7; movups [rcx-0x30], xmm8; movups [r11], xmm4; ret; 
0x000000000b7532: adc [rcx-0x12cfe7b1], cl; mov [rdi+0x1c], ch; ret; 
0x000000000b7512: adc [rcx-0x12cfe8b1], cl; mov [rdi+0x1b], ch; ret; 
0x00000000189566: adc [rcx-0x1], ebx; ret; 
0x0000000018952a: adc [rcx-0x1], edi; ret; 
0x00000000189565: adc [rcx-0x1], rbx; ret; 
0x00000000189529: adc [rcx-0x1], rdi; ret; 
0x000000000b803b: adc [rcx-0x20], edi; movups [rcx-0x30], xmm8; movups [r11], xmm4; ret; 
0x0000000018955f: adc [rcx-0x2], edx; vmovups [r9-0x40], zmm3; ret; 
0x0000000018975d: adc [rcx-0x2], esi; vmovups [r9-0x40], zmm15; ret; 
0x00000000189523: adc [rcx-0x2], esi; vmovups [r9-0x40], zmm7; ret; 
0x0000000018955e: adc [rcx-0x2], rdx; vmovups [r9-0x40], zmm3; ret; 
0x0000000018975c: adc [rcx-0x2], rsi; vmovups [r9-0x40], zmm15; ret; 
0x00000000189522: adc [rcx-0x2], rsi; vmovups [r9-0x40], zmm7; ret; 
0x000000000b8040: adc [rcx-0x30], eax; movups [r11], xmm4; ret; 
0x00000000189756: adc [rcx-0x3], ebp; vmovups [r9-0x80], zmm14; vmovups [r9-0x40], zmm15; ret; 
0x0000000018951c: adc [rcx-0x3], ebp; vmovups [r9-0x80], zmm6; vmovups [r9-0x40], zmm7; ret; 
0x00000000189755: adc [rcx-0x3], rbp; vmovups [r9-0x80], zmm14; vmovups [r9-0x40], zmm15; ret; 
0x0000000018951b: adc [rcx-0x3], rbp; vmovups [r9-0x80], zmm6; vmovups [r9-0x40], zmm7; ret; 
0x00000000108483: adc [rcx-0x3dc6b730], ecx; jne short 0x00000000001084b8; mov eax, 0x85; syscall; 
0x00000000045e4e: adc [rcx-0x3f76bbea], cl; ret; 
0x0000000007bdfd: adc [rcx-0x41f0b7fa], cl; add cl, [rax-0x7b]; ror byte ptr [rdi], 0x88; ret; 
0x000000001519d7: adc [rcx-0x48], al; add [rax], eax; add [rax], al; mov eax, r8d; ret; 
0x0000000018974f: adc [rcx-0x4], esp; vmovups [r9-0xc0], zmm13; vmovups [r9-0x80], zmm14; vmovups [r9-0x40], zmm15; ret; 
0x00000000189515: adc [rcx-0x4], esp; vmovups [r9-0xc0], zmm5; vmovups [r9-0x80], zmm6; vmovups [r9-0x40], zmm7; ret; 
0x0000000018974e: adc [rcx-0x4], rsp; vmovups [r9-0xc0], zmm13; vmovups [r9-0x80], zmm14; vmovups [r9-0x40], zmm15; ret; 
0x00000000189514: adc [rcx-0x4], rsp; vmovups [r9-0xc0], zmm5; vmovups [r9-0x80], zmm6; vmovups [r9-0x40], zmm7; ret; 
0x0000000014ca25: adc [rcx-0x75], cl; or [r9+r9*4-0x1], r9b; call qword ptr [rax+0x20]; 
0x000000000faacc: adc [rcx-0x75], cl; push rsi; or [rax+0x63], cl; ret; 
0x000000000faacb: adc [rcx-0x75], r9b; push rsi; or [rax+0x63], cl; ret; 
0x0000000002b45c: adc [rcx-0x76b70001], dh; ret; 
0x000000000463ff: adc [rcx-0x77], al; ror byte ptr [rax-0x75], 0x7c; and al, 0x8; mov eax, 0x13e; syscall; 
0x0000000011394f: adc [rcx-0x77], al; ror byte ptr [rax-0x75], 0x7c; and al, 0x8; mov eax, 0x1a; syscall; 
0x0000000010d65f: adc [rcx-0x77], al; ror byte ptr [rax-0x75], 0x7c; and al, 0x8; mov eax, 0x7; syscall; 
0x00000000108ce0: adc [rcx-0x77], al; ror byte ptr [rbx+0x3108247c], 0xc0; syscall; 
0x0000000011960b: adc [rcx-0x77], al; ror byte ptr [rbx-0x74e7db8c], 0x7c; and al, 0x8; mov eax, 0x114; syscall; 
0x0000000010e25c: adc [rcx-0x77], al; ror byte ptr [rbx-0x74f3db8c], 0x7c; and al, 0x8; mov eax, 0x11d; syscall; 
0x000000001540cc: adc [rcx-0x77], cl; ret; 
0x0000000018dc0f: adc [rcx-0x7d], al; ret far; 
0x00000000051d57: adc [rcx-0x7d], cl; ret; 
0x0000000009c15c: adc [rcx], ah; add [rax], eax; cmovne rax, rdx; ret; 
0x0000000007b180: adc [rcx], al; add [rax], al; add [rax-0x77], cl; xrelease mov dword ptr [rsp+0x28], 0x20; jmp rcx; 
0x0000000014eac4: adc [rcx], al; add [rax], al; add [rcx+rcx*4-0x11], cl; call qword ptr [rax+0x28]; 
0x000000000ddc8b: adc [rcx], al; add [rax], al; add cl, ch; ret; 
0x0000000015a4e1: adc [rcx], al; add [rax], al; mov eax, r12d; pop r12; ret; 
0x0000000011a045: adc [rcx], al; add [rax], al; syscall; 
0x0000000015163f: adc [rcx], al; imul ebp, [rax], 0x5b; pop rbp; pop r12; ret; 
0x0000000017d317: adc [rcx], ch; cmp edx, ecx; jle short 0x000000000017d334; movsxd rax, ecx; ret; 
0x0000000008fbad: adc [rcx], ch; rol bl, 0x1; mov eax, 0xffffffff; ret; 
0x0000000012181f: adc [rcx], dh; idiv byte ptr [rdi+0x2000004]; call rax; 
0x00000000084882: adc [rcx], dh; rol bl, 0x66; nop [rax+rax]; mov eax, 0xffffffff; ret; 
0x00000000085b47: adc [rcx], dh; ror byte ptr [rcx+rcx*4-0x1], cl; call qword ptr [r14+0x80]; 
0x0000000013fc0b: adc [rcx], dh; ror byte ptr [rcx+rcx*4-0x1a], cl; mov rdi, rbx; mov rcx, r13; call r10; 
0x00000000186a34: adc [rcx], edx; bsr eax, eax; lea rax, [rdi+rax-0x20]; vzeroupper; ret; 
0x0000000010defe: adc [rdi+0x10], eax; mov [rdi+0x8], rax; movups [rdi+0x20], xmm1; ret; 
0x00000000106e3e: adc [rdi+0x10], eax; movups [rdi+0x20], xmm0; movups [rdi+0x30], xmm0; movups [rdi+0x40], xmm0; ret; 
0x000000000b80bf: adc [rdi+0x10], ebp; movups [rdi+0x20], xmm6; movups [rdi+0x30], xmm7; movups [r11], xmm8; ret; 
0x000000000b7fa5: adc [rdi+0x10], ecx; movups [rdi+rdx-0x10], xmm2; movups [rdi+rdx-0x20], xmm3; ret; 
0x0000000015138e: adc [rdi+0x18], eax; ret; 
0x00000000189558: adc [rdi+0x1], ecx; vmovups [r9-0x80], zmm2; vmovups [r9-0x40], zmm3; ret; 
0x00000000189c65: adc [rdi+0x1], edx; vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x00000000189557: adc [rdi+0x1], rcx; vmovups [r9-0x80], zmm2; vmovups [r9-0x40], zmm3; ret; 
0x00000000189c64: adc [rdi+0x1], rdx; vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x00000000106e42: adc [rdi+0x20], eax; movups [rdi+0x30], xmm0; movups [rdi+0x40], xmm0; ret; 
0x0000000010df06: adc [rdi+0x20], ecx; ret; 
0x0000000014a5bb: adc [rdi+0x20], edx; ret; 
0x000000000b80c3: adc [rdi+0x20], esi; movups [rdi+0x30], xmm7; movups [r11], xmm8; ret; 
0x00000000106e46: adc [rdi+0x30], eax; movups [rdi+0x40], xmm0; ret; 
0x0000000014a580: adc [rdi+0x30], eax; ret; 
0x000000000b80c7: adc [rdi+0x30], edi; movups [r11], xmm8; ret; 
0x00000000106e4a: adc [rdi+0x40], eax; ret; 
0x00000000107291: adc [rdi+0x68], esi; movdqu xmm7, [rsi+0x70]; movups [rdi+0x78], xmm7; ret; 
0x00000000091047: adc [rdi+0x70], edi; pop rbx; pop rbp; pop r12; ret; 
0x0000000010729a: adc [rdi+0x78], edi; ret; 
0x0000000008de8c: adc [rdi+0x8], eax; ret; 
0x00000000107c23: adc [rdi+0xe8], esi; movdqu xmm7, [rsi+0x70]; movups [rdi+0xf8], xmm7; ret; 
0x00000000107c2f: adc [rdi+0xf8], edi; ret; 
0x000000000b6eef: adc [rdi+rcx], esp; add [rbx+0x63], cl; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000137494: adc [rdi+rdx+0x8], eax; ret; 
0x000000000b7de7: adc [rdi+rdx-0x10], ecx; ret; 
0x000000000b7fa9: adc [rdi+rdx-0x10], edx; movups [rdi+rdx-0x20], xmm3; ret; 
0x000000000b7f7c: adc [rdi+rdx-0x10], esp; movups [rdi+rdx-0x20], xmm5; movups [rdi+rdx-0x30], xmm6; movups [rdi+rdx-0x40], xmm7; ret; 
0x000000000b7f81: adc [rdi+rdx-0x20], ebp; movups [rdi+rdx-0x30], xmm6; movups [rdi+rdx-0x40], xmm7; ret; 
0x000000000b7fae: adc [rdi+rdx-0x20], ebx; ret; 
0x000000000b7f86: adc [rdi+rdx-0x30], esi; movups [rdi+rdx-0x40], xmm7; ret; 
0x000000000b7f8b: adc [rdi+rdx-0x40], edi; ret; 
0x0000000011a733: adc [rdi-0x2708fff4], eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000189a18: adc [rdi-0x5], esp; vmovups [rdi-0x180], zmm13; vmovups [rdi-0x1c0], zmm14; vmovups [rdi-0x200], zmm15; ret; 
0x00000000189a17: adc [rdi-0x5], rsp; vmovups [rdi-0x180], zmm13; vmovups [rdi-0x1c0], zmm14; vmovups [rdi-0x200], zmm15; ret; 
0x00000000189a1f: adc [rdi-0x6], ebp; vmovups [rdi-0x1c0], zmm14; vmovups [rdi-0x200], zmm15; ret; 
0x00000000189a1e: adc [rdi-0x6], rbp; vmovups [rdi-0x1c0], zmm14; vmovups [rdi-0x200], zmm15; ret; 
0x00000000189a26: adc [rdi-0x7], esi; vmovups [rdi-0x200], zmm15; ret; 
0x00000000189a25: adc [rdi-0x7], rsi; vmovups [rdi-0x200], zmm15; ret; 
0x00000000189a2d: adc [rdi-0x8], edi; ret; 
0x00000000189a2c: adc [rdi-0x8], rdi; ret; 
0x00000000140599: adc [rdi], al; add al, ch; scasd [rdi]; test bh, ch; jmp qword ptr [rsi+0x66]; 
0x00000000106e40: adc [rdi], cl; adc [rdi+0x20], eax; movups [rdi+0x30], xmm0; movups [rdi+0x40], xmm0; ret; 
0x000000000b80c1: adc [rdi], cl; adc [rdi+0x20], esi; movups [rdi+0x30], xmm7; movups [r11], xmm8; ret; 
0x000000000b7fa7: adc [rdi], cl; adc [rdi+rdx-0x10], edx; movups [rdi+rdx-0x20], xmm3; ret; 
0x000000000b8456: adc [rdi], cl; add [rax+0x63], cl; add al, 0xbe; add rax, rsi; notrack jmp rax; 
0x0000000014a648: adc [rdi], cl; enter 0xc089, 0x49; mov [rax], eax; mov eax, 0x1; ret; 
0x000000000a4dd5: adc [rdi], cl; mov bh, 0x54; and al, 0xec; mov [rax+0x4], dx; ret; 
0x000000000a4dbd: adc [rdi], cl; mov dh, 0x54; and al, 0xf4; mov [rax+0x4], dl; ret; 
0x000000000a4d9f: adc [rdi], cl; mov dh, 0x54; and al, 0xfa; mov [rax+0x2], dl; ret; 
0x0000000008a50c: adc [rdi], cl; mov dh, 0xc0; pop rbx; neg eax; ret; 
0x00000000171e47: adc [rdi], cl; test [rcx+0x5], eax; add [rax], al; ret; 
0x00000000040839: adc [rdi], eax; and rdx, rax; movq xmm0, rdx; ret; 
0x00000000055df4: adc [rdi], eax; mov [rsi], eax; mov eax, 0x2; ret; 
0x00000000040be5: adc [rdi], eax; movd xmm0, esi; ret; 
0x000000000b7fa2: adc [rdi], eax; movups [rdi+0x10], xmm1; movups [rdi+rdx-0x10], xmm2; movups [rdi+rdx-0x20], xmm3; ret; 
0x000000000b7de4: adc [rdi], eax; movups [rdi+rdx-0x10], xmm1; ret; 
0x00000000045e9c: adc [rdi], eax; ret; 
0x00000000189552: adc [rdi], eax; vmovups [rdi+0x40], zmm1; vmovups [r9-0x80], zmm2; vmovups [r9-0x40], zmm3; ret; 
0x00000000189c5f: adc [rdi], edx; vmovups [rdi+0x40], zmm2; vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x00000000189c80: adc [rdi], edx; vmovups [rsi-0x40], zmm2; ret; 
0x00000000140598: adc [rdi], r8b; add al, ch; scasd [rdi]; test bh, ch; jmp qword ptr [rsi+0x66]; 
0x00000000189551: adc [rdi], rax; vmovups [rdi+0x40], zmm1; vmovups [r9-0x80], zmm2; vmovups [r9-0x40], zmm3; ret; 
0x00000000189c5e: adc [rdi], rdx; vmovups [rdi+0x40], zmm2; vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x00000000189c7f: adc [rdi], rdx; vmovups [rsi-0x40], zmm2; ret; 
0x0000000011bd32: adc [rdx+0x13], dh; mov qword ptr [rip+0xc7640], 0x2; ret; 
0x000000000b9a28: adc [rdx+0x1], ch; push 0x0; lea rcx, [rax+0x4]; lea r9, [rsp+0x20]; call rbx; 
0x000000000b99ad: adc [rdx+0x1], ch; xor edx, edx; push 0x1; lea r9, [rsp+0x20]; call rbx; 
0x00000000089b9b: adc [rdx+0x32], dh; mov [rdi+0x18], rax; mov [rsi], rax; xor eax, eax; ret; 
0x00000000028d07: adc [rdx+0x3c], bh; nop [rax]; xor edi, edi; mov eax, edx; syscall; 
0x00000000089fbb: adc [rdx+0x42], dh; mov [rdi+0x18], rax; mov [rsi], rax; xor eax, eax; ret; 
0x0000000002bdaf: adc [rdx+0x48], eax; ret; 
0x0000000014254f: adc [rdx+0x59], bl; mov rdi, [rsp+0x8]; mov r12d, eax; mov rax, [rdi+0x8]; call qword ptr [rax+0x20]; 
0x0000000011c156: adc [rdx+0x8], dh; seta al; movzx eax, al; neg eax; ret; 
0x000000000fd39e: adc [rdx+0x8], dh; setne al; movzx eax, al; neg eax; ret; 
0x0000000015ff7a: adc [rdx+0x9], dh; movaps [rdi], xmm4; notrack jmp r9; 
0x000000000b3f96: adc [rdx+0xff31456], cl; jg short 0x00000000000b3fa5; mov [rdi+0x10], ecx; mov [rdi+0x14], dl; ret; 
0x000000000b3f95: adc [rdx+0xff31456], r9b; jg short 0x00000000000b3fa5; mov [rdi+0x10], ecx; mov [rdi+0x14], dl; ret; 
0x000000000b4017: adc [rdx+0xff3184e], cl; jg short 0x00000000000b4026; mov [rdi+0x10], rdx; mov [rdi+0x18], cl; ret; 
0x000000000b4118: adc [rdx+0xff3204e], cl; jg short 0x00000000000b4127; movdqu [rdi+0x10], xmm2; mov [rdi+0x20], cl; ret; 
0x000000000b5968: adc [rdx+0xff3204e], cl; jg short 0x00000000000b5977; movdqu [rdi+0x10], xmm2; mov [rdi+0x20], cl; ret; 
0x0000000003f89a: adc [rdx+rdx*8-0x3c3c268b], eax; nop [rax]; xor eax, eax; ret; 
0x000000001765cc: adc [rdx], al; add [rax], al; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x00000000136771: adc [rdx], al; cmp rcx, rdi; jae short 0x0000000000136783; mov eax, 0xffffffff; ret; 
0x00000000187beb: adc [rdx], cl; add [rax], al; xor eax, eax; ret; 
0x0000000005676a: adc [rdx], eax; std; jmp qword ptr [rsi-0x70]; 
0x00000000041ca4: adc [rdx], ebx; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x2]; mov eax, 0xffffffff; ret; 
0x00000000146ec4: adc [rdx], ecx; ret; 
0x00000000166a71: adc [rip+0x14634900], al; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000040b96: adc [rip+0x161844], bl; andps xmm0, xmm3; andnps xmm3, xmm1; orps xmm0, xmm3; ret; 
0x00000000040960: adc [rip+0x17637a], al; orpd xmm1, [rip+0x175d92]; mulsd xmm0, xmm1; ret; 
0x0000000004093a: adc [rip+0x1763a8], al; orpd xmm1, [rip+0x175dc8]; mulsd xmm0, xmm1; ret; 
0x00000000190d0e: adc [rip+0x266bc], al; divss xmm0, [rip+0x279c8]; ret; 
0x00000000040447: adc [rip-0x8000], cl; inc eax; shr eax, 0x1f; ret; 
0x00000000111c6b: adc [rip-0xf187d00], ecx; add edi, 0x26; mov fs:[rax], edi; mov eax, 0xffffffff; ret; 
0x00000000189da5: adc [rsi+0x1], edx; vmovups [rsi+0x80], zmm2; vmovups [rsi+0xc0], zmm2; ret; 
0x00000000189da4: adc [rsi+0x1], rdx; vmovups [rsi+0x80], zmm2; vmovups [rsi+0xc0], zmm2; ret; 
0x00000000189dac: adc [rsi+0x2], edx; vmovups [rsi+0xc0], zmm2; ret; 
0x00000000189dab: adc [rsi+0x2], rdx; vmovups [rsi+0xc0], zmm2; ret; 
0x00000000189db3: adc [rsi+0x3], edx; ret; 
0x00000000189db2: adc [rsi+0x3], rdx; ret; 
0x00000000189e3b: adc [rsi+0x4], edx; vmovups [rsi+0x140], zmm2; vmovups [rsi+0x180], zmm2; vmovups [rsi+0x1c0], zmm2; ret; 
0x00000000189e3a: adc [rsi+0x4], rdx; vmovups [rsi+0x140], zmm2; vmovups [rsi+0x180], zmm2; vmovups [rsi+0x1c0], zmm2; ret; 
0x00000000189e42: adc [rsi+0x5], edx; vmovups [rsi+0x180], zmm2; vmovups [rsi+0x1c0], zmm2; ret; 
0x00000000189e41: adc [rsi+0x5], rdx; vmovups [rsi+0x180], zmm2; vmovups [rsi+0x1c0], zmm2; ret; 
0x00000000090e71: adc [rsi+0x60], esi; movdqu xmm7, [rax+0x80]; xor eax, eax; movups [rsi+0x70], xmm7; ret; 
0x00000000107241: adc [rsi+0x60], esi; movdqu xmm7, [rdi+0x78]; movups [rsi+0x70], xmm7; ret; 
0x00000000107b96: adc [rsi+0x60], esi; movdqu xmm7, [rdi+0xf8]; movups [rsi+0x70], xmm7; ret; 
0x00000000189e49: adc [rsi+0x6], edx; vmovups [rsi+0x1c0], zmm2; ret; 
0x00000000189e48: adc [rsi+0x6], rdx; vmovups [rsi+0x1c0], zmm2; ret; 
0x00000000090e7f: adc [rsi+0x70], edi; ret; 
0x00000000189e50: adc [rsi+0x7], edx; ret; 
0x00000000189e4f: adc [rsi+0x7], rdx; ret; 
0x000000000faf57: adc [rsi+0x8], eax; ret; 
0x00000000142f1c: adc [rsi+0x8], ecx; ret; 
0x00000000187a9a: adc [rsi+0xf], ah; cmp [rdi], dl; ret; 
0x000000000a547b: adc [rsi+0xf], ah; outsd dx, [rsi]; fsub st(1), st; imul edi, 0xffffffff; jmp qword ptr [rsi+0x66]; 
0x000000000868d3: adc [rsi+0xf], ah; outsd dx, [rsi]; ret far; 
0x000000000a8440: adc [rsi+0xf], ah; xlat [rbx]; rol dword ptr [rbp+0x315775c0], 0xc0; ret; 
0x0000000013753a: adc [rsi+rcx+0x8], edx; mov [rsi+0x3], r8b; xor eax, eax; ret; 
0x0000000009c55c: adc [rsi+rcx], bl; cmovne rax, rdx; ret; 
0x0000000009c29b: adc [rsi+rcx], esi; test dh, 0x1; je short 0x000000000009c26f; ret; 
0x000000000b7ddf: adc [rsi+rdx-0x10], cl; movups [rdi], xmm0; movups [rdi+rdx-0x10], xmm1; ret; 
0x00000000189c52: adc [rsi-0x1], edx; ret; 
0x00000000189c51: adc [rsi-0x1], rdx; ret; 
0x00000000189c4b: adc [rsi-0x2], edx; vmovups [rsi-0x40], zmm2; ret; 
0x00000000189c4a: adc [rsi-0x2], rdx; vmovups [rsi-0x40], zmm2; ret; 
0x00000000189c44: adc [rsi-0x3], edx; vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x00000000189c43: adc [rsi-0x3], rdx; vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x00000000189c3d: adc [rsi-0x4], edx; vmovups [rsi-0xc0], zmm2; vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x00000000189c3c: adc [rsi-0x4], rdx; vmovups [rsi-0xc0], zmm2; vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x000000001895ee: adc [rsi-0x75], ah; mov cx, [rcx-0x2]; mov [rdi], si; mov [r9-0x2], cx; ret; 
0x000000000b74f3: adc [rsi-0x77], ah; sbb [r8], r14b; in eax, dx; mov [rdi+0x1a], ch; ret; 
0x000000000b7ddc: adc [rsi], al; movups xmm1, [rsi+rdx-0x10]; movups [rdi], xmm0; movups [rdi+rdx-0x10], xmm1; ret; 
0x00000000149bbe: adc [rsi], eax; mov rax, [rax+0x40]; mov [rsi+0x10], rax; ret; 
0x0000000014a4ee: adc [rsi], eax; mov rax, [rax+0x50]; mov [rsi+0x10], rax; ret; 
0x00000000146dd1: adc [rsi], eax; mov rax, [rax+0xa0]; mov [rsi+0x10], rax; ret; 
0x00000000045b74: adc [rsi], eax; sub ecx, 0x1; jns short 0x0000000000045b39; xor eax, eax; ret; 
0x00000000189d9f: adc [rsi], edx; vmovups [rsi+0x40], zmm2; vmovups [rsi+0x80], zmm2; vmovups [rsi+0xc0], zmm2; ret; 
0x00000000189d9e: adc [rsi], rdx; vmovups [rsi+0x40], zmm2; vmovups [rsi+0x80], zmm2; vmovups [rsi+0xc0], zmm2; ret; 
0x0000000010e82e: adc [rsp+0x11], eax; syscall; 
0x0000000014d630: adc [rsp+0x18], eax; call qword ptr [rax+0x18]; 
0x00000000151788: adc [rsp+0x18], eax; call r8; 
0x0000000014d934: adc [rsp+0x18], ecx; movups [rsp+0x38], xmm0; call qword ptr [rax+0x18]; 
0x0000000014d939: adc [rsp+0x38], eax; call qword ptr [rax+0x18]; 
0x00000000041a0d: adc [rsp+0x78], esi; movups [rsp+0x88], xmm7; mov r10d, 0x8; mov eax, 0xd; syscall; 
0x00000000041a12: adc [rsp+0x88], edi; mov r10d, 0x8; mov eax, 0xd; syscall; 
0x000000000dff75: adc [rsp+0x8], eax; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000014dbf6: adc [rsp+0xb8], ebp; call rax; 
0x0000000014db5a: adc [rsp+0xb8], ebx; movups [rsp+0xd8], xmm0; call rax; 
0x00000000107475: adc [rsp+0xc8], eax; mov [rsp+0xe8], eax; mov eax, 0xe; syscall; 
0x0000000014db62: adc [rsp+0xd8], eax; call rax; 
0x000000000cc27e: adc [rsp-0x10], al; ret; 
0x0000000018860d: adc ah, [rip+0xffff]; and ecx, 0xffff; sub eax, ecx; ret; 
0x000000000e1f1a: adc al, 0x0; add [rax-0x77], cl; ret far; 
0x0000000004b0e1: adc al, 0x0; add [rax-0x80], al; jmp qword ptr [rbp+0xf]; 
0x000000000974e2: adc al, 0x0; add [rax], al; add [rax], al; ret; 
0x00000000046da1: adc al, 0x0; add [rax], al; add [rcx-0x80], al; jmp far fword ptr [rbx]; 
0x000000000fd89f: adc al, 0x0; add [rax], al; add [rdx+0x2], edi; cmove eax, edx; ret; 
0x00000000138ca8: adc al, 0x0; add [rax], al; add edx, 0x1; syscall; 
0x0000000010f3f1: adc al, 0x0; add [rax], al; syscall; 
0x00000000096180: adc al, 0x0; add [rbp-0x3d], ebx; nop [rax]; ret; 
0x000000000a6ca8: adc al, 0x0; add [rbp-0x77], cl; ret far; 
0x0000000005a9a8: adc al, 0x0; add bh, al; test [rdi+rdi*8-0x1], esp; jmp qword ptr [rsi]; 
0x00000000041162: adc al, 0x0; add rsp, 0x10; pop rbx; ret; 
0x000000000412dc: adc al, 0x0; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x00000000094c0f: adc al, 0x0; call qword ptr [rax]; 
0x000000000992a2: adc al, 0x0; jae short 0x0000000000099319; lea rax, [rax-0x8]; ret; 
0x0000000009754d: adc al, 0x0; mov [rax], rdi; ret; 
0x00000000093263: adc al, 0x0; mov [rax], rdx; ret; 
0x00000000097543: adc al, 0x0; mov [rax], rsi; mov rax, [rip+0x14b971]; mov [rax], rdi; ret; 
0x00000000093259: adc al, 0x0; mov [rax], rsi; mov rax, [rip+0x14fc5b]; mov [rax], rdx; ret; 
0x00000000094911: adc al, 0x0; mov [rsp+0x10], rsi; mov rdi, rsi; mov [rsp+0x18], r11; call qword ptr [rax]; 
0x00000000094d77: adc al, 0x0; mov [rsp+0x8], r8; xor edi, edi; call qword ptr [rax]; 
0x0000000009a7ad: adc al, 0x0; mov dword ptr [rip+0x14c6eb], 0x1; mov eax, r12d; pop r12; ret; 
0x0000000009b9c9: adc al, 0x0; mov dword ptr fs:[rax], 0xc; xor eax, eax; ret; 
0x00000000096647: adc al, 0x0; mov rax, [rax]; test rax, rax; je short 0x0000000000096653; call rax; 
0x00000000061655: adc al, 0x0; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x00000000062a11: adc al, 0x0; movzx eax, al; movsxd rax, [rdi+rax*4]; add rax, rdi; notrack jmp rax; 
0x00000000062314: adc al, 0x0; movzx eax, al; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000000961e8: adc al, 0x0; syscall; 
0x00000000093850: adc al, 0x0; xor edi, edi; call qword ptr [r13]; 
0x00000000094c55: adc al, 0x0; xor edi, edi; call qword ptr [rax]; 
0x00000000096882: adc al, 0x0; xor r8d, r8d; mov dword ptr fs:[rax], 0xc; mov rax, r8; ret; 
0x00000000095495: adc al, 0x0; xor r9d, r9d; mov dword ptr fs:[rax], 0xc; mov rax, r9; ret; 
0x0000000011d15c: adc al, 0x11; test edx, edx; jne short 0x000000000011d170; mov eax, r8d; ret; 
0x0000000011d3af: adc al, 0x11; test edx, edx; jne short 0x000000000011d3c0; ret; 
0x0000000011dc4f: adc al, 0x11; test edx, edx; jne short 0x000000000011dc60; ret; 
0x0000000015fa75: adc al, 0x13; notrack jmp rdx; 
0x000000000a66e9: adc al, 0x16; sub eax, edx; ret; 
0x0000000017d6a0: adc al, 0x16; sub eax, edx; vzeroupper; ret; 
0x000000000ba40b: adc al, 0x1; add [rax-0x73], cl; adc eax, 0x1127b; cmovne rax, rdx; ret; 
0x00000000047028: adc al, 0x1; add [rax], al; add [rax-0x7d], cl; ret; 
0x0000000018c568: adc al, 0x1; add [rax], al; ret; 
0x000000001195d4: adc al, 0x1; add [rax], al; syscall; 
0x00000000150b3e: adc al, 0x24; call qword ptr [rax+0x48]; 
0x000000000feedd: adc al, 0x24; mov rax, [rbp-0x1e0]; call rax; 
0x00000000044a4f: adc al, 0x25; xor [rax], al; add [rax], al; call rdx; 
0x0000000010ac06: adc al, 0x2; call qword ptr [rbx+0x40]; 
0x0000000010b7a6: adc al, 0x2; mov rdi, [rbp-0x118]; mov rsi, r9; call qword ptr [rbp-0xf0]; 
0x000000000b7453: adc al, 0x30; in eax, dx; mov [rdi+0x15], ch; ret; 
0x00000000102b28: adc al, 0x38; call far fword ptr [rax+0x5a]; 
0x0000000017dccd: adc al, 0x3a; sub eax, edx; vzeroupper; ret; 
0x000000000e5dcb: adc al, 0x3c; sub [rax+rbp+0xf], esi; mov dh, 0x43; add [rax-0x7d], ecx; ret; 
0x000000000427a0: adc al, 0x44; mov edi, esp; mov eax, 0x81; syscall; 
0x000000000cc1d4: adc al, 0x48; add esp, 0x28; ret; 
0x000000000b4980: adc al, 0x48; lea eax, [rdi+0x14]; ret; 
0x000000000b57f3: adc al, 0x48; lea eax, [rdi+0x15]; ret; 
0x000000000a89cb: adc al, 0x48; lea eax, [rdi+rax+0x30]; ret; 
0x000000000b3c21: adc al, 0x48; lea edi, [rdi+0x14]; jne 0x00000000000b4270; ret; 
0x000000000b5365: adc al, 0x48; lea edi, [rdi+0x14]; jne 0x00000000000b5ac0; ret; 
0x000000001420f7: adc al, 0x48; mov eax, [rbp+0x8]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x0000000008e75b: adc al, 0x48; mov eax, [rbx+0x40]; add rsp, 0x20; pop rbx; jmp rax; 
0x0000000010f4db: adc al, 0x48; mov esi, [rsp+0x8]; mov eax, 0x127; syscall; 
0x0000000010f59b: adc al, 0x48; mov esi, [rsp+0x8]; mov eax, 0x128; syscall; 
0x000000000b3c40: adc al, 0x49; sub eax, 0x15; lea rdi, [rdi+0x15]; jne 0x00000000000b4270; ret; 
0x000000000b5393: adc al, 0x49; sub eax, 0x15; lea rdi, [rdi+0x15]; jne 0x00000000000b5ac0; ret; 
0x0000000013de97: adc al, 0x4c; mov edx, esp; mov eax, 0x81; syscall; 
0x00000000166747: adc al, 0x5; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000a4d2d: adc al, 0x66; mov [rdi+0x4], edx; movzx edx, byte ptr [rsp+0x16]; mov [rdi+0x6], dl; ret; 
0x00000000126c49: adc al, 0x74; adc [rbx+0x31], ebx; rol byte ptr [rcx+0x5c], 0x5d; ret; 
0x000000000e1db6: adc al, 0x74; sbb [rbp-0x7b], cl; push qword ptr [rdx+rcx+0x48]; mov edi, ebx; call r15; 
0x000000000a4b46: adc al, 0x7; cmp edx, esi; je short 0x00000000000a4b40; ret; 
0x0000000017e66b: adc al, 0x83; shl byte ptr [rax+0x48], 0x1; clc; vzeroupper; ret; 
0x00000000142f30: adc al, 0x88; add rdx, r8; notrack jmp rdx; 
0x00000000103f55: adc al, 0x89; add rdx, rcx; notrack jmp rdx; 
0x0000000003b403: adc al, 0x89; ret far; 
0x000000000d6795: adc al, 0x8f; add rdx, rdi; notrack jmp rdx; 
0x000000000a4e28: adc al, 0x90; add rdx, r8; notrack jmp rdx; 
0x00000000084845: adc al, 0x90; mov [rax], rdx; xor eax, eax; ret; 
0x00000000050e89: adc al, 0x91; add rdx, r9; notrack jmp rdx; 
0x0000000007cddd: adc al, 0x91; add rdx, rcx; notrack jmp rdx; 
0x0000000017b280: adc al, 0x91; mov eax, [rcx+rax*4]; sub eax, edx; ret; 
0x000000001799ae: adc al, 0x91; sub eax, edx; ret; 
0x000000000b83ec: adc al, 0x91; sub edx, [rcx+rsi*4]; je short 0x00000000000b83d0; mov eax, edx; ret; 
0x0000000003f2ea: adc al, 0x93; add r10, r11; notrack jmp r10; 
0x0000000015fa71: adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000003f004: adc al, 0x96; add rdx, rsi; notrack jmp rdx; 
0x0000000005328d: adc al, 0x97; add rdx, rdi; cmp esi, 0x2f; notrack jmp rdx; 
0x000000000a4d6b: adc al, 0x97; add rdx, rdi; notrack jmp rdx; 
0x0000000009d788: adc al, 0xa7; add [rax], eax; cmove rax, rdx; ret; 
0x000000000a52e7: adc al, 0xa; notrack jmp r10; 
0x000000000a6853: adc al, 0xa; sub eax, edx; ret; 
0x0000000017d81d: adc al, 0xa; sub eax, edx; vzeroupper; ret; 
0x000000000b83ef: adc al, 0xb1; je short 0x00000000000b83d0; mov eax, edx; ret; 
0x0000000011d1d7: adc al, 0xb2; add eax, [rdx+rcx]; ret; 
0x000000000d67d8: adc al, 0xb7; add rdx, rdi; notrack jmp rdx; 
0x000000000388b9: adc al, 0xb7; mov r8d, [rdx+rax]; mov eax, r8d; ret; 
0x0000000015a63c: adc al, 0xc7; xor eax, eax; ret; 
0x00000000053914: adc al, 0xc8; xor eax, eax; ret; 
0x00000000053910: adc al, 0xca; mov [rax+rcx*8], rdx; xor eax, eax; ret; 
0x0000000009c21b: adc al, 0xe; add dh, dh; mov byte ptr [rcx], 0x74; ret far; 
0x000000000b7e48: adc al, 0xe; cmp rdi, rdx; jb short 0x00000000000b7e52; rep movsb [rdi], [rsi]; ret; 
0x00000000177ac1: adc al, 0xe; sub eax, edx; ret; 
0x0000000017e87a: adc al, 0xe; sub eax, edx; vzeroupper; ret; 
0x000000000b3f99: adc al, 0xf3; movq [rdi], mm0; mov [rdi+0x10], ecx; mov [rdi+0x14], dl; ret; 
0x0000000010f5b9: adc al, 0xf8; dec dword ptr [rax-0x75]; add al, 0x24; add rsp, 0x28; ret; 
0x000000000b5369: adc al, 0xf; test [rax+0x7], edx; add [rax], al; ret; 
0x00000000077632: adc al, 0xfc; jmp qword ptr [rsi+0x66]; 
0x000000001582fb: adc al, 0xfd; jmp qword ptr [rsi-0x70]; 
0x000000000d95b6: adc al, 0xff; pop rbx; pop rbp; lea rax, [rax+rdx*8]; ret; 
0x000000000a354e: adc al, [rax]; add [rax-0x77], cl; ret far; 
0x00000000106d54: adc al, [rax]; add [rax], al; syscall; 
0x0000000018091f: adc al, [rax]; add [rbp-0x77], cl; ret far; 
0x000000000ac4be: adc al, [rax]; add [rbp-0x77], cl; ret far; 
0x0000000007a881: adc al, [rax]; add [rcx-0x7d], al; call qword ptr [rbx+0xf]; 
0x0000000007cd68: adc al, [rax]; add rax, rdx; ret; 
0x000000000c635d: adc al, [rax]; lea rdi, [rip+0x11f35a]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000c617a: adc al, [rax]; lea rdi, [rip+0x11f53d]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000007b327: adc al, [rax]; lea rdi, [rip-0xb10]; movsxd rcx, [rsi+rcx*4]; add rcx, rdi; jmp rcx; 
0x00000000034854: adc al, [rax]; mov qword ptr [rbx+0x10], 0x0; pop rbx; ret; 
0x0000000002a2c3: adc al, [rax]; mov rax, [rbp-0x70]; mov rdi, rbx; call rax; 
0x0000000002a4de: adc al, [rax]; mov rdi, rbx; call r12; 
0x00000000029b71: adc al, [rax]; mov rdi, rbx; call r12; 
0x0000000002abc2: adc al, [rax]; mov rdi, rbx; call r14; 
0x0000000002a717: adc al, [rax]; mov rdi, rbx; call rbp; 
0x000000000784a8: adc al, [rax]; movsxd rax, [rax+rdx*4]; lea rdx, [rip-0x3e9]; add rax, rdx; jmp rax; 
0x0000000007ceda: adc al, [rax]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000007ba70: adc al, [rax]; movsxd rcx, [rsi+rcx*4]; lea rsi, [rip-0x125d]; add rcx, rsi; jmp rcx; 
0x0000000007d7db: adc al, [rax]; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x0000000007d784: adc al, [rax]; movsxd rsi, [rdi+rsi*4]; add rsi, rdi; notrack jmp rsi; 
0x0000000007ce81: adc al, [rax]; movzx edx, dl; movsxd rdx, [rsi+rdx*4]; add rdx, rsi; notrack jmp rdx; 
0x00000000136b0d: adc al, [rbx+0x7ba14fe]; add [rax], eax; add [rax-0x1], bh; cmove eax, edx; ret; 
0x000000000afc54: adc al, [rcx]; movlpd [rdx], xmm0; mov rax, rdi; ret; 
0x00000000079f7a: adc al, [rdi+0x39480000]; ret; 
0x0000000003b358: adc al, [rdx*4-0x763f6af1]; ret; 
0x00000000183f8a: adc al, [rdx]; add [rax], al; vzeroupper; ret; 
0x0000000013dac9: adc al, ch; jno short 0x000000000013da55; out dx, al; jmp qword ptr [rsi+0xf]; 
0x0000000007780f: adc al, ch; ret far; 
0x000000000f21a4: adc al, ch; ret; 
0x0000000003f7f7: adc al, ch; ret; 
0x0000000014e735: adc bh, al; adc [r8], r8b; add [rax], al; add [rcx+rcx*4-0x11], cl; call qword ptr [rax+0x28]; 
0x000000000a5241: adc bh, al; jmp qword ptr [rsi+0x2e]; 
0x00000000138452: adc bh, bh; jmp qword ptr [rsi+0x66]; 
0x0000000011f2c5: adc bl, [rbx+0x5d]; pop r12; ret; 
0x0000000009c66a: adc bl, [rbx]; or al, 0x0; cmovne rax, rdx; ret; 
0x000000000448af: adc bl, [rdx]; add [rcx], al; xor eax, eax; pop rbx; ret; 
0x00000000041bd8: adc bl, [rdx]; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x00000000041c14: adc bl, [rdx]; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x2]; mov eax, 0xffffffff; ret; 
0x000000000a8477: adc bl, al; nop [rax]; bsf eax, eax; lea rax, [rax+rdi+0x20]; ret; 
0x000000000a8947: adc bl, al; nop [rax]; bsr eax, eax; lea rax, [rax+rdi+0x20]; ret; 
0x000000000a4d7f: adc bl, al; nop [rax]; mov byte ptr [rax], 0x0; ret; 
0x0000000004047c: adc bl, bl; insb [rdi], dx; and al, 0x8; ret; 
0x00000000089ff3: adc bl, ch; in eax, 0x66; nop [rax+rax]; mov eax, 0xffffffff; ret; 
0x000000000543c6: adc bl, ch; jge short 0x0000000000054413; shl ecx, cl; mov [rdi], r9; ret; 
0x00000000159948: adc bl, ch; ret far; 
0x00000000028b9d: adc bl, ch; ret; 
0x000000001672f0: adc bl, dh; movq [rdi+0x10], mm0; lddqu xmm0, [rsi]; movdqu [rdi], xmm0; ret; 
0x000000000b82ba: adc bl, dh; movq [rdi+rdx-0x10], mm0; movdqu [rdi+rdx-0x20], xmm0; ret; 
0x000000000b5766: adc bl, dh; movq [rdi], mm0; mov [rdi+0x10], cl; lea rax, [rdi+0x11]; ret; 
0x000000000b3f46: adc bl, dh; movq [rdi], mm0; mov [rdi+0x10], cl; ret; 
0x000000000b4917: adc bl, dh; movq [rdi], mm0; mov [rdi+0x10], cx; lea rax, [rdi+0x11]; ret; 
0x000000000b5787: adc bl, dh; movq [rdi], mm0; mov [rdi+0x10], cx; lea rax, [rdi+0x12]; ret; 
0x000000000b3267: adc bl, dh; movq [rdi], mm0; mov [rdi+0x10], cx; ret; 
0x000000000b4956: adc bl, dh; movq [rdi], mm0; mov [rdi+0x10], ecx; lea rax, [rdi+0x13]; ret; 
0x000000000b57c6: adc bl, dh; movq [rdi], mm0; mov [rdi+0x10], ecx; lea rax, [rdi+0x14]; ret; 
0x000000000b32a6: adc bl, dh; movq [rdi], mm0; mov [rdi+0x10], ecx; mov [rdi+0x14], dh; ret; 
0x000000000b3296: adc bl, dh; movq [rdi], mm0; mov [rdi+0x10], ecx; ret; 
0x000000000b49d7: adc bl, dh; movq [rdi], mm0; mov [rdi+0x10], rcx; lea rax, [rdi+0x17]; ret; 
0x000000000b5847: adc bl, dh; movq [rdi], mm0; mov [rdi+0x10], rcx; lea rax, [rdi+0x18]; ret; 
0x000000000b3327: adc bl, dh; movq [rdi], mm0; mov [rdi+0x10], rcx; mov [rdi+0x18], dh; ret; 
0x000000000b3307: adc bl, dh; movq [rdi], mm0; mov [rdi+0x10], rcx; ret; 
0x000000000b4ad8: adc bl, dh; movq [rdi], mm0; movdqu [rdi+0x10], xmm2; lea rax, [rdi+0x1f]; ret; 
0x000000000b5948: adc bl, dh; movq [rdi], mm0; movdqu [rdi+0x10], xmm2; lea rax, [rdi+0x20]; ret; 
0x000000000b3408: adc bl, dh; movq [rdi], mm0; movdqu [rdi+0x10], xmm2; ret; 
0x00000000190d0b: adc bl, dh; movups xmm0, [rip+0x266bc]; divss xmm0, [rip+0x279c8]; ret; 
0x000000001672ef: adc bl, r14b; movq [rdi+0x10], mm0; lddqu xmm0, [rsi]; movdqu [rdi], xmm0; ret; 
0x000000000b5765: adc bl, r14b; movq [rdi], mm0; mov [rdi+0x10], cl; lea rax, [rdi+0x11]; ret; 
0x000000000b3f45: adc bl, r14b; movq [rdi], mm0; mov [rdi+0x10], cl; ret; 
0x000000000b4916: adc bl, r14b; movq [rdi], mm0; mov [rdi+0x10], cx; lea rax, [rdi+0x11]; ret; 
0x000000000b5786: adc bl, r14b; movq [rdi], mm0; mov [rdi+0x10], cx; lea rax, [rdi+0x12]; ret; 
0x000000000b3266: adc bl, r14b; movq [rdi], mm0; mov [rdi+0x10], cx; ret; 
0x000000000b4955: adc bl, r14b; movq [rdi], mm0; mov [rdi+0x10], ecx; lea rax, [rdi+0x13]; ret; 
0x000000000b57c5: adc bl, r14b; movq [rdi], mm0; mov [rdi+0x10], ecx; lea rax, [rdi+0x14]; ret; 
0x000000000b32a5: adc bl, r14b; movq [rdi], mm0; mov [rdi+0x10], ecx; mov [rdi+0x14], dh; ret; 
0x000000000b3295: adc bl, r14b; movq [rdi], mm0; mov [rdi+0x10], ecx; ret; 
0x000000000b49d6: adc bl, r14b; movq [rdi], mm0; mov [rdi+0x10], rcx; lea rax, [rdi+0x17]; ret; 
0x000000000b5846: adc bl, r14b; movq [rdi], mm0; mov [rdi+0x10], rcx; lea rax, [rdi+0x18]; ret; 
0x000000000b3326: adc bl, r14b; movq [rdi], mm0; mov [rdi+0x10], rcx; mov [rdi+0x18], dh; ret; 
0x000000000b3306: adc bl, r14b; movq [rdi], mm0; mov [rdi+0x10], rcx; ret; 
0x000000000b8ce3: adc byte ptr [rbp+0x2000000], 0x48; lea eax, [rip+0x124c0]; cmovne rax, rdx; ret; 
0x00000000033fcc: adc byte ptr [rdi+0x12], 0x0; mov rdi, rbx; call r12; 
0x000000000ac4bd: adc byte ptr [rdx], 0x0; add [rbp-0x77], cl; ret far; 
0x0000000009c863: adc byte ptr [rsi+0x10000000], 0x48; lea eax, [rip+0x1b470]; cmovne rax, rdx; ret; 
0x0000000009c733: adc byte ptr [rsi+0x10000000], 0x48; lea eax, [rip+0x1b4f0]; cmovne rax, rdx; ret; 
0x0000000009c2c3: adc byte ptr [rsi+0x10000000], 0x48; lea eax, [rip+0x1b8b0]; cmovne rax, rdx; ret; 
0x00000000107da3: adc byte ptr [rsi-0x80000000], 0x48; lea eax, [rip-0xc0]; cmove rax, rdx; ret; 
0x0000000016d4dd: adc byte ptr [rsi], 0x0; add [rbp-0x77], cl; ret far; 
0x00000000110289: adc ch, [rax]; mov edi, 0xfee1dead; mov eax, 0xa9; syscall; 
0x000000000b8dcc: adc ch, bl; or al, 0x0; cmovne rax, rdx; ret; 
0x0000000018887a: adc ch, dh; add al, [rax]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x000000000a5219: adc cl, [rax+0x29]; ret; 
0x00000000083566: adc cl, [rax+0x39]; ret far; 
0x000000000b3be3: adc cl, [rax-0x73]; jg short 0x00000000000b3bfa; jne 0x00000000000b4270; ret; 
0x000000000b5307: adc cl, [rax-0x73]; jg short 0x00000000000b531e; jne 0x00000000000b5ac0; ret; 
0x00000000082ba5: adc cl, [rax-0x73]; jno short 0x0000000000082bae; mov [rdx+0x20], rsi; mov [rcx], eax; ret; 
0x000000001592a0: adc cl, [rax-0x75]; add eax, 0x89b90; call qword ptr [rax+0x288]; 
0x0000000008ec5d: adc cl, [rax-0x75]; add rsp, 0x20; xor edx, edx; pop rbx; jmp rax; 
0x00000000053334: adc cl, [rax-0x77]; push rbx; push 0xffffffffffff7ae9; jmp qword ptr [rsi-0x70]; 
0x00000000138833: adc cl, [rbp-0x2ff6f]; jmp qword ptr [rsi-0x7d]; 
0x0000000008705d: adc cl, [rbx+0x42394c42]; cmovne rax, rcx; ret; 
0x000000000afe1f: adc cl, [rcx+0x5]; movlpd [rdx+0x5], xmm1; mov rax, rdi; ret; 
0x000000000afe3f: adc cl, [rcx+0x6]; movlpd [rdx+0x6], xmm1; mov rax, rdi; ret; 
0x000000000afe5f: adc cl, [rcx+0x7]; movlpd [rdx+0x7], xmm1; mov rax, rdi; ret; 
0x000000000b29af: adc cl, [rcx+0x8]; movlpd [rdx+0x8], xmm1; mov rax, rdi; ret; 
0x000000000afca5: adc cl, [rcx+0x8]; movlpd [rdx], xmm0; movlpd [rdx+0x8], xmm1; mov rax, rdi; ret; 
0x0000000005cb6d: adc cl, [rdi]; mov esi, 0x77cf390e; jrcxz 0x000000000005cbba; mov eax, eax; ret; 
0x000000001291da: adc cl, [rdi]; stc; jmp qword ptr [rsi-0x70]; 
0x000000001160c6: adc cl, [rdx]; add al, ch; ret; 
0x00000000111bfb: adc cl, [rip+0x64d8f700]; mov [rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000005d516: adc cl, bl; in eax, 0xdf; loopne 0x000000000005d4a5; ret; 
0x0000000003a1c1: adc cl, ch; ret; 
0x0000000017d629: adc dh, [rbx-0xc]; movsxd rcx, ecx; add rax, rcx; sub rax, rdi; ret; 
0x00000000103f49: adc dh, [rdi+0x11]; lea rcx, [rip+0xa7fcd]; movsxd rdx, [rcx+r9*4]; add rdx, rcx; notrack jmp rdx; 
0x0000000011ae8c: adc dh, [rdi+0xd]; movzx edi, di; lea rax, [rip+0x91667]; mov eax, [rax+rdi*4]; ret; 
0x00000000051418: adc dl, [rip-0x6b74b400]; and al, 0x98; add [rax], al; add [rcx+0x1], cl; ret; 
0x000000000fb15b: adc dl, bh; jmp qword ptr [rsi-0x70]; 
0x0000000014b9b2: adc dl, ch; or [rax], eax; syscall; 
0x000000000384ac: adc dl, dl; sbb al, [rax]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000018e2cb: adc dword ptr [rax+0x41000002], 0xffffff83; ret far; 
0x0000000008d207: adc dword ptr [rax+rax-0x74b80000], 0x44; and al, 0x8; mov esi, 0xffffffff; mov rdi, r8; call qword ptr [rax+0x18]; 
0x000000000876a9: adc dword ptr [rax+rax-0x801700], 0xffffffff; jmp qword ptr [rsi+0xf]; 
0x0000000017e82a: adc dword ptr [rcx+0x31000002], 0xffffffc0; vzeroupper; ret; 
0x000000001470d5: adc eax, 0x0; add [rax], al; mov rsi, [rsp+0x18]; mov rdi, r12; call qword ptr [rax+0x8]; 
0x000000000923d5: adc eax, 0x100; add [rax-0x77], cl; add eax, 0x150eae; ret; 
0x000000000923ac: adc eax, 0x100; add [rax-0x77], cl; add eax, 0x150ecf; ret; 
0x0000000009238c: adc eax, 0x100; add [rax-0x77], cl; add eax, 0x150ee7; ret; 
0x000000000a69fc: adc eax, 0x1022c7; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x000000000a52dc: adc eax, 0x103967; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x000000000de892: adc eax, 0x1045b1; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000de772: adc eax, 0x1046d1; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000de6b2: adc eax, 0x104791; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000da1ba: adc eax, 0x108c89; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x000000000d8f82: adc eax, 0x109ec1; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000cb34a: adc eax, 0x10ef8348; add rax, rdi; ret; 
0x0000000009970c: adc eax, 0x10f497; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000000ba410: adc eax, 0x1127b; cmovne rax, rdx; ret; 
0x000000000d022a: adc eax, 0x112c19; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000d01fa: adc eax, 0x112c49; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000cd062: adc eax, 0x115de1; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000cceb2: adc eax, 0x115f91; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000ccd9a: adc eax, 0x1160a9; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000008c75d: adc eax, 0x11c21e; movzx eax, al; movsxd rax, [r10+rax*4]; add rax, r10; notrack jmp rax; 
0x0000000008c7a4: adc eax, 0x11c233; movzx eax, al; movsxd rax, [r10+rax*4]; add rax, r10; notrack jmp rax; 
0x0000000008c7f9: adc eax, 0x11c23a; movzx eax, al; movsxd rax, [r10+rax*4]; add rax, r10; notrack jmp rax; 
0x0000000008c849: adc eax, 0x11c246; movzx eax, al; movsxd rax, [r10+rax*4]; add rax, r10; notrack jmp rax; 
0x0000000008c899: adc eax, 0x11c252; movzx eax, al; movsxd rax, [r10+rax*4]; add rax, r10; notrack jmp rax; 
0x0000000008c8e9: adc eax, 0x11c25e; movzx eax, al; movsxd rax, [r10+rax*4]; add rax, r10; notrack jmp rax; 
0x0000000009c15b: adc eax, 0x12110; cmovne rax, rdx; ret; 
0x00000000181b68: adc eax, 0x12953; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x00000000181b43: adc eax, 0x12978; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000007cd65: adc eax, 0x12a9b6; add rax, rdx; ret; 
0x0000000007ced7: adc eax, 0x12b6f4; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000009c5eb: adc eax, 0x138a0; cmovne rax, rdx; ret; 
0x0000000006a5b1: adc eax, 0x13c756; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000069ffb: adc eax, 0x13cb00; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000001801a8: adc eax, 0x14313; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000018018e: adc eax, 0x1432d; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000006253b: adc eax, 0x1443c0; movzx eax, al; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000062312: adc eax, 0x14452d; movzx eax, al; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000009a7aa: adc eax, 0x14c701; mov dword ptr [rip+0x14c6eb], 0x1; mov eax, r12d; pop r12; ret; 
0x00000000093144: adc eax, 0x150a57; lea rax, [rip+0x150a50]; add rsp, 0x10; pop rbp; ret; 
0x00000000092139: adc eax, 0x151192; ret; 
0x0000000008feaa: adc eax, 0x1567c1; mov [rip+0x1567c2], rbx; add dword ptr [rip+0x1567b7], 0x1; pop rbx; ret; 
0x000000000b3c44: adc eax, 0x157f8d48; jne 0x00000000000b4270; ret; 
0x000000000b5398: adc eax, 0x157f8d48; jne 0x00000000000b5ac0; ret; 
0x000000000395de: adc eax, 0x16897d; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000002918a: adc eax, 0x169e71; mov eax, eax; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000000b53c2: adc eax, 0x16e88349; lea rdi, [rdi+0x16]; jne 0x00000000000b5ac0; ret; 
0x0000000017d298: adc eax, 0x17223; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000017d273: adc eax, 0x17248; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000002887a: adc eax, 0x180b41; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000061012: adc eax, 0x181e31; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000060fda: adc eax, 0x181e69; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000158819: adc eax, 0x18c48348; pop rbx; pop rbp; ret; 
0x0000000017b2c8: adc eax, 0x191f3; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000017b2ae: adc eax, 0x1920d; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x00000000046432: adc eax, 0x19ca11; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x000000000425f1: adc eax, 0x1a0bb6; ret; 
0x00000000041ca2: adc eax, 0x1a11a1; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000041c12: adc eax, 0x1a1231; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000009d780: adc eax, 0x1a63b; lea rax, [rip+0x1a714]; cmove rax, rdx; ret; 
0x0000000009d400: adc eax, 0x1a99b; lea rax, [rip+0x1aa74]; cmove rax, rdx; ret; 
0x00000000039004: adc eax, 0x1a9ef7; add rax, 0x200; mov fs:[rdx], rax; ret; 
0x0000000009d2a0: adc eax, 0x1ab1b; lea rax, [rip+0x1abf4]; cmove rax, rdx; ret; 
0x0000000009d314: adc eax, 0x1af57; lea rax, [rip+0x1aed0]; cmovne rax, rdx; ret; 
0x00000000028d88: adc eax, 0x1ba0ab; lea rdi, [rip+0x184f6e]; mov rsi, [rax]; xor eax, eax; call qword ptr [rdx+0x260]; 
0x000000000284c9: adc eax, 0x1ba99a; cmp [rdx+0xd8], rax; jne short 0x000000000002849b; ret; 
0x000000000266d9: adc eax, 0x1bef72; pop rax; pop rbx; pop rbp; ret; 
0x00000000085a5c: adc eax, 0x1d8d4800; ret; 
0x0000000008fe48: adc eax, 0x1f0fc300; add bl, sil; nop edx, edi; xor eax, eax; ret; 
0x0000000008d5a4: adc eax, 0x1f88300; jg short 0x000000000008d5db; ret; 
0x0000000008ff1b: adc eax, 0x1f88300; jg short 0x000000000008ff24; ret; 
0x00000000191613: adc eax, 0x20478b48; test rax, rax; je short 0x0000000000191624; call rax; 
0x0000000016eb78: adc eax, 0x25943; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000016eb53: adc eax, 0x25968; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000016c608: adc eax, 0x27eb3; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000016c5ee: adc eax, 0x27ecd; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000018e776: adc eax, 0x29f25; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000001802d8: adc eax, 0x382b3; movsxd r9, [r10+r9*4]; vpcmpeqb xmm0, xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000014c04c: adc eax, 0x389f; call qword ptr [rax]; 
0x0000000017ec38: adc eax, 0x39913; movsxd r9, [r10+r9*4]; vpcmpeqb xmm0, xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x000000000cb04a: adc eax, 0x3b30478b; xor [rbp+0x3d], r14b; ret; 
0x0000000017b408: adc eax, 0x3c103; movsxd r9, [r10+r9*4]; pcmpeqb xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000016c75c: adc eax, 0x3c6a7; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000103d6a: adc eax, 0x3cde428d; sbb eax, 0xb60f0e77; ror byte ptr [rax+0x63], 0x4; or dword ptr [rax+0x1], 0xffffffd8; notrack jmp rax; 
0x0000000012770a: adc eax, 0x3d771; cmovne rax, rdx; ret; 
0x0000000004fa3d: adc eax, 0x3d8d4800; ret far; 
0x0000000012756a: adc eax, 0x3d931; cmovne rax, rdx; ret; 
0x00000000179838: adc eax, 0x3dc93; movsxd r9, [r10+r9*4]; pcmpeqb xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000016a5dc: adc eax, 0x3e7a7; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x000000001787f8: adc eax, 0x3ec93; movsxd r9, [r10+r9*4]; pcmpeqb xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000177a28: adc eax, 0x3fa23; movsxd r9, [r10+r9*4]; pcmpeqb xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000014b92b: adc eax, 0x3fc0; mov r9, rbp; mov esi, 0x9; call qword ptr [rax]; 
0x0000000012763a: adc eax, 0x40351; cmovne rax, rdx; ret; 
0x000000001677a4: adc eax, 0x46f00ff2; add eax, 0xef00ff2; movdqu [rdi+0x5], xmm0; movdqu [rdi], xmm1; ret; 
0x000000000b91c3: adc eax, 0x4802e680; lea eax, [rip+0x10e62]; lea rdx, [rip+0xd2eab]; cmovne rax, rdx; ret; 
0x0000000009c65c: adc eax, 0x4802e680; lea eax, [rip+0xa2e9]; lea rdx, [rip+0xc1b12]; cmovne rax, rdx; ret; 
0x0000000009d607: adc eax, 0x4802e680; lea eax, [rip+0xb8ce]; lea rdx, [rip+0xccec7]; cmovne rax, rdx; ret; 
0x0000000009d1b3: adc eax, 0x4802e680; lea eax, [rip+0xb902]; lea rdx, [rip+0xed74b]; cmovne rax, rdx; ret; 
0x0000000009d567: adc eax, 0x4802e680; lea eax, [rip+0xb94e]; lea rdx, [rip+0xccf47]; cmovne rax, rdx; ret; 
0x0000000009d657: adc eax, 0x4802e680; lea eax, [rip+0xdace]; lea rdx, [rip+0xcefd7]; cmovne rax, rdx; ret; 
0x0000000009d5b7: adc eax, 0x4802e680; lea eax, [rip+0xdb4e]; lea rdx, [rip+0xcf057]; cmovne rax, rdx; ret; 
0x0000000009281c: adc eax, 0x48a77600; add esp, 0x8; ret; 
0x0000000011bbca: adc eax, 0x48db6348; mov [rip+0xc77ab], ebx; pop rbx; ret; 
0x000000000da787: adc eax, 0x48eb894c; mov edi, ebp; call r12; 
0x00000000188a77: adc eax, 0x490002ec; movsxd ecx, [rbx+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000162b77: adc eax, 0x4900054e; movsxd edx, [rbx+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160eb7: adc eax, 0x49000569; movsxd edx, [rbx+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000015e22c: adc eax, 0x4aad7; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000015cf9c: adc eax, 0x4bce7; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000007bba7: adc eax, 0x4c00000b; mov edx, edi; mov rsi, r12; mov rdi, rbp; call qword ptr [rax+0x38]; 
0x00000000091ec4: adc eax, 0x5b050f00; ret; 
0x000000001070aa: adc eax, 0x5bc33948; setl al; ret; 
0x0000000009292e: adc eax, 0x5be97500; mov rax, r8; pop rbp; pop r12; ret; 
0x000000001276d8: adc eax, 0x5da03; lea rax, [rip+0x5da6c]; cmove rax, rdx; ret; 
0x00000000127608: adc eax, 0x5daf3; lea rax, [rip+0x5db5c]; cmove rax, rdx; ret; 
0x00000000127538: adc eax, 0x5dbc3; lea rax, [rip+0x5dc2c]; cmove rax, rdx; ret; 
0x000000001277ab: adc eax, 0x5dde0; lea rax, [rip+0x5de39]; cmove rax, rdx; ret; 
0x000000000b3c48: adc eax, 0x621850f; add [rax], al; ret; 
0x00000000127731: adc eax, 0x6272a; lea rax, [rip+0x62793]; cmove rax, rdx; ret; 
0x00000000127661: adc eax, 0x6281a; lea rax, [rip+0x62883]; cmove rax, rdx; ret; 
0x00000000127591: adc eax, 0x628ea; lea rax, [rip+0x62953]; cmove rax, rdx; ret; 
0x000000001277f5: adc eax, 0x62c16; cmove rax, rdx; ret; 
0x000000001665c7: adc eax, 0x63490005; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000caf3a: adc eax, 0x63b078b; jne 0x00000000000cb090; ret; 
0x0000000014962f: adc eax, 0x6424c; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000091c40: adc eax, 0x6e0f4866; ret; 
0x000000000b539c: adc eax, 0x71d850f; add [rax], al; ret; 
0x00000000048301: adc eax, 0x80400000; jmp qword ptr [rbp+0xf]; 
0x00000000090b0a: adc eax, 0x8478b4c; mov rax, [rdi]; mov rdi, r8; jmp rax; 
0x000000000d0ac7: adc eax, 0x85001167; shl byte ptr [rbp+0x11], 0x4c; mov eax, eax; add rsp, 0x8; ret; 
0x0000000015c752: adc eax, 0x866f1; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000006602f: adc eax, 0x890017ce; fimul st, word ptr [rbx-0x61f63]; jmp qword ptr [rbx+rcx*4]; 
0x00000000072ccb: adc eax, 0x894c0000; loop 0x0000000000072d1e; mov esi, ebp; mov rdi, r14; call qword ptr [rcx+0x38]; 
0x0000000015e358: adc eax, 0x894d0000; ret far; 
0x0000000018061f: adc eax, 0x894d0000; ret far; 
0x0000000008aaea: adc eax, 0x8a894800; loopne 0x000000000008aaf1; add [rax], al; pop rbx; ret; 
0x00000000091f24: adc eax, 0x8b4800; test rax, rax; je short 0x0000000000091f30; call rax; 
0x0000000010f4f9: adc eax, 0x8b48fff8; add al, 0x24; add rsp, 0x28; ret; 
0x0000000009c1b7: adc eax, 0x8d480001; adc eax, 0xee42f; cmovne rax, rdx; ret; 
0x000000000351df: adc eax, 0x8d48001b; cmp eax, 0x1b04d7; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000351a3: adc eax, 0x8d48001b; cmp eax, 0x1b0513; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000051419: adc eax, 0x948b4c00; and al, 0x98; add [rax], al; add [rcx+0x1], cl; ret; 
0x0000000014cf27: adc eax, 0x9bfd4; cmp rax, rdx; je 0x000000000014cfd0; pop rbx; ret; 
0x0000000014cdbd: adc eax, 0x9c13e; mov fs:[rax], rdx; ret; 
0x00000000143392: adc eax, 0x9f7a9; jmp qword ptr [rdx+rax*8]; 
0x00000000104aaf: adc eax, 0xa752c; mov r15d, eax; movsxd rax, [rdx+r15*4]; add rax, rdx; notrack jmp rax; 
0x00000000104395: adc eax, 0xa7bd2; movzx eax, al; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000103b5d: adc eax, 0xa8286; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000000fbb25: adc eax, 0xafb56; movsxd rax, [rdx+rdi*4]; add rax, rdx; notrack jmp rax; 
0x000000000fbb7b: adc eax, 0xafd58; mov edi, edi; movsxd rax, [rdx+rdi*4]; add rax, rdx; notrack jmp rax; 
0x0000000010ccf9: adc eax, 0xb9e9; add [rax-0xe69c418], dl; jmp qword ptr [rsi-0x7d]; 
0x000000001284a2: adc eax, 0xba9a1; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x000000000b8cdd: adc eax, 0xbe63e; test byte ptr [rax+0x95], 0x2; lea rax, [rip+0x124c0]; cmovne rax, rdx; ret; 
0x000000000eb71b: adc eax, 0xbf540; movzx ebp, bpl; movsxd rax, [rdx+rbp*4]; add rax, rdx; notrack jmp rax; 
0x000000000eb875: adc eax, 0xbf54a; movzx r14d, r14b; movsxd rax, [rdx+r14*4]; add rax, rdx; notrack jmp rax; 
0x0000000014189b: adc eax, 0xc0850000; je short 0x0000000000141910; mov rax, [rbx+0x20]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x0000000009c20b: adc eax, 0xc0d00; cmovne rax, rdx; ret; 
0x0000000009c669: adc eax, 0xc1b12; cmovne rax, rdx; ret; 
0x0000000008ff3a: adc eax, 0xc3050f00; endbr64; mov qword ptr [rip+0x156721], 0x0; mov qword ptr [rip+0x15671e], 0x0; ret; 
0x000000000e5f0c: adc eax, 0xc4bc3; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000000e41d3: adc eax, 0xc678c; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000041924: adc eax, 0xc764001a; add [rsi], dl; add [rax], al; add [rax-0x1], bh; ret; 
0x000000000877fd: adc eax, 0xc76400; or [rax], eax; add [rax], al; mov eax, 0xffffffff; ret; 
0x0000000009d73a: adc eax, 0xc7771; cmovne rax, rdx; ret; 
0x0000000009d3ba: adc eax, 0xc7ad1; cmovne rax, rdx; ret; 
0x0000000011b32a: adc eax, 0xc7b19; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000011b2f2: adc eax, 0xc7b51; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000011b2ba: adc eax, 0xc7b89; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000011b28a: adc eax, 0xc7bb9; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000011b252: adc eax, 0xc7bf1; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000011b16a: adc eax, 0xc7cd9; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000011b12a: adc eax, 0xc7d19; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000011b0fa: adc eax, 0xc7d49; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000011b0b2: adc eax, 0xc7d91; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000011aff2: adc eax, 0xc7e51; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000011ae52: adc eax, 0xc7ff1; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000011ad9a: adc eax, 0xc80a9; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000011ace2: adc eax, 0xc8161; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000011a89a: adc eax, 0xc85a9; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000011a7d2: adc eax, 0xc8671; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000011a732: adc eax, 0xc8711; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000011a672: adc eax, 0xc87d1; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000011a5d2: adc eax, 0xc8871; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000011a512: adc eax, 0xc8931; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000011a392: adc eax, 0xc8ab1; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000011a2c2: adc eax, 0xc8b81; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000119b9a: adc eax, 0xc92a9; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000119b62: adc eax, 0xc92e1; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000119b22: adc eax, 0xc9321; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000119a52: adc eax, 0xc93f1; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000119a1a: adc eax, 0xc9429; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000119942: adc eax, 0xc9501; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000119862: adc eax, 0xc95e1; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000e12c3: adc eax, 0xc9648; mov esi, esi; movsxd rax, [rdx+rsi*4]; add rax, rdx; notrack jmp rax; 
0x000000001197ba: adc eax, 0xc9689; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x000000000e0e86: adc eax, 0xc96a9; movsxd rax, [rdx+rbp*4]; add rax, rdx; notrack jmp rax; 
0x000000001196f2: adc eax, 0xc9751; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000119642: adc eax, 0xc9801; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000119592: adc eax, 0xc98b1; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000119402: adc eax, 0xc9a41; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000001193aa: adc eax, 0xc9a99; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000011929a: adc eax, 0xc9ba9; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000011926a: adc eax, 0xc9bd9; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000e04ec: adc eax, 0xc9fef; mov esi, esi; movsxd rax, [rdx+rsi*4]; add rax, rdx; notrack jmp rax; 
0x0000000009d25a: adc eax, 0xca741; cmovne rax, rdx; ret; 
0x0000000011bdf0: adc eax, 0xcbc83; add word ptr [rdx+rax*2], 0x1; ret; 
0x000000000b917b: adc eax, 0xcc900; cmovne rax, rdx; ret; 
0x00000000116542: adc eax, 0xcc901; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000009d614: adc eax, 0xccec7; cmovne rax, rdx; ret; 
0x0000000009d574: adc eax, 0xccf47; cmovne rax, rdx; ret; 
0x000000000b8cbb: adc eax, 0xcd090; cmovne rax, rdx; ret; 
0x000000000b8e6b: adc eax, 0xcd330; cmovne rax, rdx; ret; 
0x000000000b8f5b: adc eax, 0xcd990; cmovne rax, rdx; ret; 
0x000000000b8c7b: adc eax, 0xcda40; cmovne rax, rdx; ret; 
0x000000000b8dcb: adc eax, 0xcdd10; cmovne rax, rdx; ret; 
0x0000000009d664: adc eax, 0xcefd7; cmovne rax, rdx; ret; 
0x0000000009d5c4: adc eax, 0xcf057; cmovne rax, rdx; ret; 
0x00000000113982: adc eax, 0xcf4c1; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000111c2a: adc eax, 0xd1219; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000111bfa: adc eax, 0xd1249; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000009c28b: adc eax, 0xd2900; cmovne rax, rdx; ret; 
0x000000001102a2: adc eax, 0xd2ba1; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000110222: adc eax, 0xd2c21; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000110162: adc eax, 0xd2ce1; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000b91d0: adc eax, 0xd2eab; cmovne rax, rdx; ret; 
0x0000000010ff52: adc eax, 0xd2ef1; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010f5ca: adc eax, 0xd3879; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000010f50a: adc eax, 0xd3939; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000010f452: adc eax, 0xd39f1; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000010f3b2: adc eax, 0xd3a91; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000009c6bb: adc eax, 0xd3c80; cmovne rax, rdx; ret; 
0x0000000010f162: adc eax, 0xd3ce1; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010ed8a: adc eax, 0xd40b9; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010ed52: adc eax, 0xd40f1; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010ed12: adc eax, 0xd4131; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010eb3a: adc eax, 0xd4309; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010e84a: adc eax, 0xd45f9; mov esi, 0x5401; mov eax, r8d; mov ebx, fs:[r10]; syscall; 
0x0000000010e60a: adc eax, 0xd4839; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000010e5d2: adc eax, 0xd4871; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000010e59a: adc eax, 0xd48a9; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000010e2da: adc eax, 0xd4b69; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010e292: adc eax, 0xd4bb1; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010e1e2: adc eax, 0xd4c61; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010ddf2: adc eax, 0xd5051; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010ddb2: adc eax, 0xd5091; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010dd5a: adc eax, 0xd50e9; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000010d692: adc eax, 0xd57b1; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000009d4ab: adc eax, 0xd5a10; cmovne rax, rdx; ret; 
0x0000000009d50b: adc eax, 0xd71c0; cmovne rax, rdx; ret; 
0x000000001420e6: adc eax, 0xd805; lea r9, [rsp+0x20]; call qword ptr [rax]; 
0x000000000d06a8: adc eax, 0xd91a7; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000000a4f0b: adc eax, 0xd94e0; cmovne rax, rdx; ret; 
0x000000001096c2: adc eax, 0xd9781; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000109542: adc eax, 0xd9901; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000108e2a: adc eax, 0xda019; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000108dfa: adc eax, 0xda049; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000108db2: adc eax, 0xda091; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000108d12: adc eax, 0xda131; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000108562: adc eax, 0xda8e1; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000108502: adc eax, 0xda941; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000001084a2: adc eax, 0xda9a1; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010811a: adc eax, 0xdad29; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000001080ba: adc eax, 0xdad89; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010805a: adc eax, 0xdade9; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000106dc2: adc eax, 0xdc081; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000106d12: adc eax, 0xdc131; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000009ea1b: adc eax, 0xdf880; cmovne rax, rdx; ret; 
0x0000000009c72d: adc eax, 0xe0cbe; test byte ptr [rax+0x96], 0x10; lea rax, [rip+0x1b4f0]; cmovne rax, rdx; ret; 
0x0000000009c85d: adc eax, 0xe0cce; test byte ptr [rax+0x96], 0x10; lea rax, [rip+0x1b470]; cmovne rax, rdx; ret; 
0x0000000009d16b: adc eax, 0xe0e60; cmovne rax, rdx; ret; 
0x0000000009c2bd: adc eax, 0xe0fee; test byte ptr [rax+0x96], 0x10; lea rax, [rip+0x1b8b0]; cmovne rax, rdx; ret; 
0x000000000cbaca: adc eax, 0xe180d188; pcmpeqb mm3, [rsi]; ret; 
0x0000000009ea5b: adc eax, 0xe3350; cmovne rax, rdx; ret; 
0x0000000009c70b: adc eax, 0xe5890; cmovne rax, rdx; ret; 
0x000000000fd37a: adc eax, 0xe5ac9; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000fd2da: adc eax, 0xe5b69; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000009c55b: adc eax, 0xe5c10; cmovne rax, rdx; ret; 
0x0000000009c59b: adc eax, 0xe5d70; cmovne rax, rdx; ret; 
0x000000000ad758: adc eax, 0xe6d63; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x000000000ad733: adc eax, 0xe6d88; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000008d851: adc eax, 0xe7894800; xor esi, esi; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000009d708: adc eax, 0xe7a03; lea rax, [rip+0xe7a6c]; cmove rax, rdx; ret; 
0x0000000009d388: adc eax, 0xe7d63; lea rax, [rip+0xe7dcc]; cmove rax, rdx; ret; 
0x0000000009d228: adc eax, 0xe7ee3; lea rax, [rip+0xe7f4c]; cmove rax, rdx; ret; 
0x0000000009d2fb: adc eax, 0xe82a0; lea rax, [rip+0xe82f9]; cmove rax, rdx; ret; 
0x000000000606c4: adc eax, 0xe8c03100; ret; 
0x000000000ab0f8: adc eax, 0xe93c3; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x000000000ab0de: adc eax, 0xe93dd; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000009d761: adc eax, 0xec72a; lea rax, [rip+0xec793]; cmove rax, rdx; ret; 
0x0000000009d3e1: adc eax, 0xeca8a; lea rax, [rip+0xecaf3]; cmove rax, rdx; ret; 
0x0000000009d281: adc eax, 0xecc0a; lea rax, [rip+0xecc73]; cmove rax, rdx; ret; 
0x0000000009d345: adc eax, 0xed0d6; cmove rax, rdx; ret; 
0x0000000009d1c0: adc eax, 0xed74b; cmovne rax, rdx; ret; 
0x0000000009c1bc: adc eax, 0xee42f; cmovne rax, rdx; ret; 
0x0000000011128a: adc eax, 0xf0658d48; pop r12; pop r13; pop rbp; ret; 
0x000000000880d9: adc eax, 0xf486600; outsb dx, [rsi]; ret; 
0x000000000b8338: adc eax, 0xf880272; ret; 
0x000000000fb158: adc eax, 0xfa10d2e9; jmp qword ptr [rsi-0x70]; 
0x000000000e1548: adc eax, 0xfbace2e9; jmp qword ptr [rsi-0x70]; 
0x000000000ab24c: adc eax, 0xfdb77; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x000000000a8fdc: adc eax, 0xffd67; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000127750: adc eax, 0xfff9063b; lea rax, [rip-0x6f8ec]; cmove rax, rdx; ret; 
0x00000000127680: adc eax, 0xfff9072b; lea rax, [rip-0x6f7fc]; cmove rax, rdx; ret; 
0x000000001275b0: adc eax, 0xfff907fb; lea rax, [rip-0x6f72c]; cmove rax, rdx; ret; 
0x000000001277c4: adc eax, 0xfff90a97; lea rax, [rip-0x6f5f0]; cmovne rax, rdx; ret; 
0x0000000014c236: adc eax, 0xffff98d5; mov esi, 0xa; lea r9, [rsp+0x1c]; call qword ptr [rax]; 
0x0000000014c102: adc eax, 0xffff9c39; mov esi, 0x8; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x0000000014be9d: adc eax, 0xffff9cee; mov esi, 0x7; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x0000000014bcfd: adc eax, 0xffff9e8e; mov esi, 0x6; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x0000000014bba0: adc eax, 0xffff9fab; mov esi, 0x3; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x0000000014ba60: adc eax, 0xffffa0eb; mov esi, 0x2; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x0000000014b7f7: adc eax, 0xffffa314; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x00000000072c2f: adc eax, 0xfffffb7a; movsxd rax, [rdi+rax*4]; add rax, rdx; jmp rax; 
0x000000000784b0: adc eax, 0xfffffc17; add rax, rdx; jmp rax; 
0x0000000009d06d: adc eax, 0xfffffc9e; test byte ptr [rax+0x15c], 0x10; lea rax, [rip+0x1a660]; cmove rax, rdx; ret; 
0x000000000ccf7a: adc eax, 0xffffff11; cmove rax, rdx; add rsp, 0x58; ret; 
0x000000000cce5a: adc eax, 0xffffff21; cmove rax, rdx; add rsp, 0x58; ret; 
0x00000000107d9d: adc eax, 0xffffff8e; test byte ptr [rax+0x96], 0x80; lea rax, [rip-0xc0]; cmove rax, rdx; ret; 
0x000000000b8333: adc eax, [rax+0x157701fa]; jb short 0x00000000000b833d; mov [rdi], cl; ret; 
0x00000000061b0e: adc eax, [rax-0x78]; sub [rbx+0x5d], bl; pop r12; ret; 
0x0000000008c645: adc eax, [rax]; add [rax-0x77], cl; fcomp st, dword ptr [rbx+0x5d]; pop r12; ret; 
0x0000000004dc31: adc eax, [rax]; add [rax-0x80], al; jmp qword ptr [rbp+0xf]; 
0x0000000010f351: adc eax, [rax]; add [rax], al; syscall; 
0x000000000c8f9b: adc eax, [rax]; add [rbp+0x31], al; shr cl, 0x26; idiv bh; jmp qword ptr [rsi+0xf]; 
0x000000000a6e28: adc eax, [rax]; add [rbp-0x77], cl; ret far; 
0x00000000072ef3: adc eax, [rax]; add [rcx+rcx*4-0x1e], cl; mov rsi, r13; mov rdi, r14; call qword ptr [rcx+0x38]; 
0x000000000e0a37: adc eax, [rax]; add [rdx+0x7f], bh; cmovne rax, rdx; ret; 
0x00000000078ad3: adc eax, [rax]; add dh, al; test [rbx], ebx; idiv edi; jmp qword ptr [rax]; 
0x0000000006a172: adc eax, [rax]; mov r11d, [rbp-0x5c0]; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x000000000a50e3: adc eax, [rax]; mov rax, [rax+rdi*8]; ret; 
0x00000000069ffe: adc eax, [rax]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000006a98c: adc eax, [rax]; movsxd rax, [rsi+rbx*4]; add rax, rsi; notrack jmp rax; 
0x00000000040bdc: adc eax, [rcx+0xe6]; xor bl, 0xf; adc [rdi], eax; movd xmm0, esi; ret; 
0x00000000119784: adc eax, [rcx]; add [rax], al; mov rsi, [rsp+0x10]; mov edi, [rsp+0x8]; syscall; 
0x00000000119734: adc eax, [rcx]; add [rax], al; syscall; 
0x000000000afd9b: adc eax, [rdx]; mov al, [rcx+0x8]; mov [rdx+0x8], al; mov rax, rdi; ret; 
0x000000000afdbb: adc eax, [rdx]; mov ax, [rcx+0x8]; mov [rdx+0x8], ax; mov rax, rdi; ret; 
0x000000000afddb: adc eax, [rdx]; mov eax, [rcx+0x7]; mov [rdx+0x7], eax; mov rax, rdi; ret; 
0x000000000afdfb: adc eax, [rdx]; mov eax, [rcx+0x8]; mov [rdx+0x8], eax; mov rax, rdi; ret; 
0x000000000afc58: adc eax, [rdx]; mov rax, rdi; ret; 
0x000000000afcaa: adc eax, [rdx]; movlpd [rdx+0x8], xmm1; mov rax, rdi; ret; 
0x000000000afe1b: adc eax, [rdx]; movlpd xmm1, [rcx+0x5]; movlpd [rdx+0x5], xmm1; mov rax, rdi; ret; 
0x000000000afe3b: adc eax, [rdx]; movlpd xmm1, [rcx+0x6]; movlpd [rdx+0x6], xmm1; mov rax, rdi; ret; 
0x000000000afe5b: adc eax, [rdx]; movlpd xmm1, [rcx+0x7]; movlpd [rdx+0x7], xmm1; mov rax, rdi; ret; 
0x000000000b29ab: adc eax, [rdx]; movlpd xmm1, [rcx+0x8]; movlpd [rdx+0x8], xmm1; mov rax, rdi; ret; 
0x000000000b2a2c: adc eax, [rdx]; xor ah, ah; mov [rdx+0x8], ah; mov rax, rdi; ret; 
0x000000000351a9: adc eax, [rip-0x3eb7ffe5]; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x00000000053b2d: adc eax, eax; ret; 
0x000000000e1f42: adc eax, ebp; cmp [rbp-0xc], al; inc dword ptr [rcx-0x80]; jl short 0x00000000000e1f50; jmp far fword ptr [rdi]; 
0x000000000cdcc2: adc eax, ebp; pop rax; xchg ch, dh; dec dword ptr [rax-0x77]; ret; 
0x0000000010f8a7: adc eax, edi; jmp qword ptr [rcx+rax*2-0x75]; 
0x00000000053c66: adc eax, edx; pop rbp; pop rbx; ret; 
0x00000000082291: adc ebp, ebx; ret far; 
0x0000000017ec39: adc ebx, [rcx+0x634f0003]; or al, 0x8a; vpcmpeqb xmm0, xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000090921: adc ebx, [rsi+0x15]; add [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; jmp rax; 
0x00000000172201: adc ebx, eax; nop [rax+rax]; xchg ax, ax; mov [rcx], dx; ret; 
0x0000000011bd34: adc ecx, [rax-0x39]; add eax, 0xc7640; add al, [rax]; add [rax], al; ret; 
0x000000000b3c01: adc ecx, [rax-0x73]; jg short 0x00000000000b3c19; jne 0x00000000000b4270; ret; 
0x000000000b5335: adc ecx, [rax-0x73]; jg short 0x00000000000b534d; jne 0x00000000000b5ac0; ret; 
0x00000000045468: adc ecx, [rax-0x75]; jge short 0x0000000000045475; call rax; 
0x0000000007f47c: adc ecx, [rax-0x75]; mov edi, 0xe0; jmp rax; 
0x000000001086c3: adc ecx, [rax-0x7d]; in al, dx; sbb byte ptr [rbp+0x41], 0x5c; pop r13; ret; 
0x00000000044b51: adc ecx, [rax-0x7d]; ret; 
0x00000000069bc3: adc ecx, [rcx+0x415d5b28]; pop rsp; ret; 
0x0000000007252e: adc ecx, [rcx+rax-0x1e]; call qword ptr [r10+rax*8]; 
0x000000000a4a6b: adc ecx, [rcx+rcx*4-0x20]; pop r12; ret; 
0x000000001607fc: adc ecx, [rdi]; sub [rdi-0x20], esp; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x000000000afe24: adc ecx, [rdx+0x5]; mov rax, rdi; ret; 
0x000000000afe44: adc ecx, [rdx+0x6]; mov rax, rdi; ret; 
0x000000000afe64: adc ecx, [rdx+0x7]; mov rax, rdi; ret; 
0x000000000afcae: adc ecx, [rdx+0x8]; mov rax, rdi; ret; 
0x000000000b2a95: adc ecx, [rdx+0x8]; xor ah, ah; mov [rdx+0x10], ah; mov rax, rdi; ret; 
0x0000000003a961: adc edi, [rsi-0x72b7ffe6]; cmp eax, 0x1aad54; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000015fa76: adc edi, [rsi]; jmp rdx; 
0x0000000010f747: adc edi, eax; jmp qword ptr [rcx+rax*2-0x75]; 
0x000000001583e1: adc edi, ebp; jmp qword ptr [rsi+0x66]; 
0x0000000012912b: adc edi, esi; call qword ptr [rax-0x18]; 
0x0000000014841c: adc edi, esi; call qword ptr [rax-0x5e1f00d]; 
0x00000000162679: adc edx, [rbx+0x5]; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000006ee99: adc edx, [rcx+0x1]; add [rbx+rcx*4-0x63], al; mov al, [0xd4e9c58941fffffa]; ret far; 
0x0000000003d059: adc edx, [rdi-0x72b7ffe6]; cmp eax, 0x1a885c; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000053b25: adc edx, ebx; mov [rdi+0x8], r10; mov eax, ecx; adc eax, eax; ret; 
0x00000000119219: adc esi, [rcx+rax-0x3d]; xor ebp, ebp; pop rax; pop rdi; call rax; 
0x0000000013773f: adc esi, eax; jmp qword ptr [rsi+0xf]; 
0x000000001285db: adc esi, edi; call qword ptr [rax-0x18]; 
0x00000000045390: adc esi, edi; dec dword ptr [rax-0x77]; sub [rax-0x77], cl; ret; 
0x00000000115915: adc gs:[rbp-0x7b], cl; in al, 0x75; and al, 0x48; mov edi, [rbp]; call rbx; 
0x00000000114acc: adc gs:[rbp-0x7b], cl; in al, 0x75; mov rdi, [rbp]; call rbx; 
0x00000000053b23: adc r10, r11; mov [rdi+0x8], r10; mov eax, ecx; adc eax, eax; ret; 
0x00000000089ff2: adc r11b, r13b; in eax, 0x66; nop [rax+rax]; mov eax, 0xffffffff; ret; 
0x000000000b82b9: adc r11b, r14b; movq [rdi+rdx-0x10], mm0; movdqu [rdi+rdx-0x20], xmm0; ret; 
0x000000000c8f9a: adc r8d, [r8]; add [rbp+0x31], al; shr cl, 0x26; idiv bh; jmp qword ptr [rsi+0xf]; 
0x00000000138832: adc r9b, [rbp-0x2ff6f]; jmp qword ptr [rsi-0x7d]; 
0x00000000091ec3: adc rax, 0x5b050f00; ret; 
0x00000000091f23: adc rax, 0x8b4800; test rax, rax; je short 0x0000000000091f30; call rax; 
0x00000000053c65: adc rax, rdx; pop rbp; pop rbx; ret; 
0x00000000189559: add [r10-0x2f], r12; jl short 0x00000000001895a7; adc [rcx-0x2], edx; vmovups [r9-0x40], zmm3; ret; 
0x0000000010e50f: add [r13+rbp-0x48], sil; add [rcx], eax; add [rax], al; syscall; 
0x00000000110ef8: add [r13-0x2d], esi; mov rax, r8; ret; 
0x0000000008ece7: add [r8+0x1], r15b; movups [rbp+0x38], xmm0; pop rbp; pop r12; ret; 
0x000000000599cc: add [r8-0x73], r9; add cl, [rcx+0x39]; ret far; 
0x00000000106a3e: add [r8-0x77], ecx; ret; 
0x0000000008fa75: add [r8-0x77], r9b; imul esp, [rax+0x5b], 0x5d; pop r12; ret; 
0x00000000099e52: add [r8-0x7b], r9b; ror byte ptr [rdi], 0x84; rol dword ptr [rax], cl; add [rax], al; call rax; 
0x0000000003cb44: add [r8-0x7d], ecx; ret; 
0x000000000d1be1: add [r8-0x7d], r9b; ret; 
0x000000000e3b8b: add [r8-0x7d], r9d; mov dword ptr [rcx], 0xac75c084; xor eax, eax; ret; 
0x000000000cc03d: add [r8], al; add [rcx+rcx*4-0x20], cl; pop r12; ret; 
0x00000000042b11: add [r8], al; add rsp, 0x8; ret; 
0x000000000d2912: add [r8], eax; add [rax-0x41], cl; ret; 
0x00000000180190: add [r8], eax; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000018015c: add [r8], eax; mov edx, [rcx+rdx*4]; mov eax, [rcx+rax*4]; sub eax, edx; ret; 
0x0000000009ee60: add [r8], r8b; add [rax], al; add [rbp+0x41], bl; pop rsp; ret; 
0x00000000147ca2: add [r8], r8b; add [rax], al; add [rbx+0x5d], bl; pop r12; ret; 
0x000000000bce65: add [r8], r8d; add [rax+0x29], cl; ret far; 
0x00000000183486: add [r8], r8d; vzeroupper; ret; 
0x0000000009d0ef: add [r9+rcx*4-0x20], r9b; pop rbp; pop r12; pop r13; ret; 
0x000000000e6f59: add [r9-0x73], ecx; push rbx; add [rcx-0x7f], ecx; ret; 
0x00000000046220: add [r9], r14b; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x5d], bl; ret; 
0x00000000136b56: add [rax+0x102], bh; cmovne eax, edx; ret; 
0x00000000136b2c: add [rax+0x104], bh; cmovne eax, edx; ret; 
0x00000000061167: add [rax+0x10], bh; ret; 
0x0000000010ead9: add [rax+0x10], bh; syscall; 
0x0000000010887f: add [rax+0x10c], bh; syscall; 
0x00000000119328: add [rax+0x119], bh; syscall; 
0x000000000debf2: add [rax+0x142], bh; syscall; 
0x0000000018a83e: add [rax+0x1478d48], dl; ret; 
0x0000000011b764: add [rax+0x14], bh; syscall; 
0x0000000009115f: add [rax+0x16], bh; cmove eax, edx; ret; 
0x0000000014124d: add [rax+0x16], bh; ret; 
0x000000000b55ce: add [rax+0x1788168a], dl; lea rax, [rdi+0x1]; ret; 
0x000000000d8e2d: add [rax+0x1], bh; add rsp, 0x8; ret; 
0x000000000cb08f: add [rax+0x1], bh; jg short 0x00000000000cb099; neg eax; ret; 
0x0000000018c67f: add [rax+0x1], bh; jg short 0x000000000018c690; neg eax; ret; 
0x00000000055c7c: add [rax+0x1], bh; mov dword ptr [rdx], 0xffffc002; ret; 
0x0000000008ece8: add [rax+0x1], bh; movups [rbp+0x38], xmm0; pop rbp; pop r12; ret; 
0x000000001448c0: add [rax+0x1], bh; pop rbx; pop rbp; pop r12; ret; 
0x000000001070bf: add [rax+0x1], bh; pop rbx; ret; 
0x00000000055b93: add [rax+0x1], bh; ret; 
0x000000000a8234: add [rax+0x1], cl; clc; add rax, rcx; ret; 
0x0000000017e051: add [rax+0x1], cl; clc; add rax, rcx; vzeroupper; ret; 
0x0000000017e599: add [rax+0x1], cl; clc; vzeroupper; ret; 
0x0000000009674e: add [rax+0x1], cl; enter 0x348, 0x15; outsd dx, [rsi]; ret far; 
0x000000001280e1: add [rax+0x1], cl; ret far; 
0x00000000092917: add [rax+0x1], cl; ret; 
0x0000000007cd69: add [rax+0x1], cl; rol bl, 0x1; xchg ax, ax; xor eax, eax; ret; 
0x000000001070be: add [rax+0x1], dil; pop rbx; ret; 
0x000000001112ce: add [rax+0x1], dil; ret; 
0x0000000015339b: add [rax+0x1], ecx; ret far; 
0x0000000006393f: add [rax+0x1], ecx; ret; 
0x000000000e7ddf: add [rax+0x1], edi; mov byte ptr [rdi], 0x5b; ret; 
0x000000000e7d98: add [rax+0x1], edi; ret; 
0x00000000147c5f: add [rax+0x1], edi; sbb eax, 0xffffffff; add rsp, 0x8; ret; 
0x000000000cb55e: add [rax+0x1a948], dl; add [rax], al; je 0x00000000000cb4c5; lea rax, [rdi-0x10]; ret; 
0x000000000cafbf: add [rax+0x1b740fe6], al; mov eax, [rdi+0x18]; cmp eax, [rsi+0x18]; jne 0x00000000000cb090; ret; 
0x000000000caf5f: add [rax+0x1b740fe6], al; mov eax, [rdi+0x8]; cmp eax, [rsi+0x8]; jne 0x00000000000cb090; ret; 
0x0000000018c56f: add [rax+0x1b740fe6], al; mov eax, [rdi-0x8]; cmp eax, [rsi-0x8]; jne 0x000000000018c680; ret; 
0x000000000e7e0d: add [rax+0x1b807], ecx; add [rax], al; ret; 
0x00000000141210: add [rax+0x1d], bh; pop rbx; ret; 
0x00000000040b85: add [rax+0x1fe8c17f], al; ret; 
0x000000000e0abb: add [rax+0x20], bh; cmove rax, rdx; ret; 
0x000000001411f5: add [rax+0x22], bh; pop rbx; ret; 
0x00000000040b7c: add [rax+0x2444237f], al; cld; sub eax, 0x7f800000; shr eax, 0x1f; ret; 
0x00000000174561: add [rax+0x28d4802], ecx; ret; 
0x000000000e7d71: add [rax+0x29755efa], al; mov byte ptr [rdi+0x8], 0x19; mov eax, 0x1; ret; 
0x0000000004f39d: add [rax+0x29], cl; ret far; 
0x000000000772fe: add [rax+0x29], cl; ret; 
0x000000001449f7: add [rax+0x29], ecx; mov rbp, rdx; call qword ptr [rbx+0x10]; 
0x00000000055da1: add [rax+0x2], bh; ret; 
0x000000000de947: add [rax+0x38], edi; syscall; 
0x00000000028d5c: add [rax+0x39], cl; and al, 0x18; cmovne rdi, r14; call rdx; 
0x00000000092817: add [rax+0x39], cl; cmp eax, 0x154669; jbe short 0x00000000000927c8; add rsp, 0x8; ret; 
0x00000000091d4e: add [rax+0x39], cl; fbstp tbyte ptr [rbp+rax-0x18], st; out 0x45, eax; stc; jmp qword ptr [rsi+0xf]; 
0x000000001020a6: add [rax+0x39], cl; fbstp tbyte ptr [rbp+rax-0x18], st; pop qword ptr [rdx-0xe]; jmp qword ptr [rsi+0xf]; 
0x000000001028dc: add [rax+0x39], cl; fbstp tbyte ptr [rbp+rax-0x18], st; pop rcx; cmp dh, dl; jmp qword ptr [rsi+0xf]; 
0x000000000318b4: add [rax+0x39], cl; ret far; 
0x0000000002e078: add [rax+0x39], cl; ret; 
0x0000000014cf2b: add [rax+0x39], cl; ror byte ptr [rdi], 0x1; test [rbx+0x5b000000], bl; ret; 
0x000000000ed79c: add [rax+0x39], ecx; ret far; 
0x00000000052453: add [rax+0x39], ecx; ret; 
0x000000000e2ea3: add [rax+0x39], ecx; shl dword ptr [rsi+rax-0x80], 0x78; call far fword ptr [rsp+rsi*2-0xf]; 
0x0000000009929c: add [rax+0x3b], cl; xor eax, 0x14dbe4; jae short 0x0000000000099319; lea rax, [rax-0x8]; ret; 
0x0000000018c55e: add [rax+0x3bf4478b], dl; hlt; jne 0x000000000018c680; ret; 
0x000000000c71e3: add [rax+0x4428944], al; mov [rdx], eax; xor eax, eax; ret; 
0x0000000013172c: add [rax+0x478b4803], cl; or [rax-0x7d], cl; ret; 
0x000000000b8537: add [rax+0x485bf0e5], al; cmovne eax, edx; ret; 
0x0000000010e361: add [rax+0x48], bh; syscall; 
0x00000000159d11: add [rax+0x48], dl; mov eax, [rip+0x8911e]; mov r8, [rbx+0x10]; call qword ptr [rax+0x270]; 
0x000000000408a8: add [rax+0x48c22148], al; mov [rdi], edx; ret; 
0x00000000039008: add [rax+0x5], cl; add [rdx], al; add [rax], al; mov fs:[rdx], rax; ret; 
0x0000000014d1a4: add [rax+0x5], cl; test al, 0x0; add [rax], al; pop rbx; ret; 
0x000000000266dd: add [rax+0x5b], bl; pop rbp; ret; 
0x0000000014300e: add [rax+0x5d5bc031], dl; pop r12; ret; 
0x0000000008355f: add [rax+0x63], cl; adc [rax-0x75], cl; adc cl, [rax+0x39]; ret far; 
0x0000000007d7dc: add [rax+0x63], cl; adc al, 0x91; add rdx, rcx; notrack jmp rdx; 
0x00000000061657: add [rax+0x63], cl; add al, 0x81; add rax, rcx; notrack jmp rax; 
0x0000000002887e: add [rax+0x63], cl; add al, 0x82; add rax, rdx; notrack jmp rax; 
0x000000000e46f1: add [rax+0x63], cl; add al, 0x86; add rax, rsi; notrack jmp rax; 
0x000000000784a9: add [rax+0x63], cl; add al, 0x90; lea rdx, [rip-0x3e9]; add rax, rdx; jmp rax; 
0x0000000006a98d: add [rax+0x63], cl; add al, 0x9e; add rax, rsi; notrack jmp rax; 
0x000000000e0e8a: add [rax+0x63], cl; add al, 0xaa; add rax, rdx; notrack jmp rax; 
0x000000000fbb29: add [rax+0x63], cl; add al, 0xba; add rax, rdx; notrack jmp rax; 
0x000000000b8458: add [rax+0x63], cl; add al, 0xbe; add rax, rsi; notrack jmp rax; 
0x00000000136501: add [rax+0x63], cl; fisttp dword ptr [rax+0x1], st; ret; 
0x0000000003881a: add [rax+0x63], cl; jmp qword ptr [rax+rcx*2-0x75]; 
0x000000000725a6: add [rax+0x63], cl; or al, 0x8a; add rcx, rdx; notrack jmp rcx; 
0x0000000007ba71: add [rax+0x63], cl; or al, 0x8e; lea rsi, [rip-0x125d]; add rcx, rsi; jmp rcx; 
0x00000000049592: add [rax+0x63], cl; ret; 
0x00000000137187: add [rax+0x63], cl; rol byte ptr [rcx+rcx*4-0x40], cl; mov byte ptr [rdi+rdx], 0x0; ret; 
0x0000000017d50f: add [rax+0x63], cl; ror dword ptr [rax+0x1], 0xf8; ret; 
0x00000000143378: add [rax+0x63], cl; sbb [r11+0xe7603f8], r8b; mov eax, 0x2; ret; 
0x0000000018dd52: add [rax+0x63], cl; sbb al, 0x99; add rcx, rbx; notrack jmp rcx; 
0x000000000f062a: add [rax+0x63], cl; test [rdi+rdi*8-0x1], esi; jmp qword ptr [rsi+0x48]; 
0x0000000007d785: add [rax+0x63], cl; xor al, 0xb7; add rsi, rdi; notrack jmp rsi; 
0x00000000121346: add [rax+0x63], ecx; fmul st, dword ptr [rax-0x77]; ror byte ptr [rcx+0x2b], 0x1; cmp [r8+0x39], r9b; ret; 
0x000000000ea7db: add [rax+0x63], ecx; ret; 
0x000000001721fe: add [rax+0x6666c311], cl; nop [rax+rax]; xchg ax, ax; mov [rcx], dx; ret; 
0x000000000b413e: add [rax+0x6666c317], cl; nop [rax+rax]; xchg ax, ax; mov [rdi], dx; ret; 
0x00000000040878: add [rax+0x66c22148], al; movq mm0, rdx; ret; 
0x000000000b73ae: add [rax+0x66f0ff3], dl; movdqu [rdi], xmm0; xor ch, ch; mov [rdi+0x10], ch; ret; 
0x00000000050b26: add [rax+0x6], bh; lea r8, [rip+0x1959cd]; mov byte ptr [r8+rax], 0x0; mov rax, r8; ret; 
0x00000000040835: add [rax+0x7110ff2], al; and rdx, rax; movq xmm0, rdx; ret; 
0x00000000040be1: add [rax+0x7110ff3], al; movd xmm0, esi; ret; 
0x0000000018410e: add [rax+0x77f8c517], cl; ret; 
0x000000000b478f: add [rax+0x78d4837], cl; ret; 
0x000000000b508f: add [rax+0x78d4837], cl; sub r8, 0x1; lea rdi, [rdi+0x1]; jne 0x00000000000b5ac0; ret; 
0x000000000e09e6: add [rax+0x7f], bh; mov edx, 0x7d00; cmove rax, rdx; ret; 
0x00000000041bf8: add [rax+0x7f], bh; syscall; 
0x000000001377ff: add [rax+0x7fffffff], bh; ret; 
0x00000000042640: add [rax+0x80], bh; syscall; 
0x00000000041c44: add [rax+0x82], bh; syscall; 
0x00000000142d2e: add [rax+0x8c48348], dl; mov eax, 0x1; pop rbx; pop rbp; ret; 
0x000000001198c7: add [rax+0x95], bh; syscall; 
0x000000000f38e8: add [rax+0x9], cl; ret far; 
0x0000000011563b: add [rax+0x9], ecx; ror byte ptr [rcx-0x77], 0x1; or [r9-0x75], cl; add [rbx+0x94901e0], eax; ret; 
0x00000000052f9d: add [rax+0x9e], bh; syscall; 
0x000000000cb01f: add [rax+0xb740fe6], al; mov eax, [rdi+0x28]; cmp eax, [rsi+0x28]; jne short 0x00000000000cb090; ret; 
0x000000000cb06f: add [rax+0xb740fe6], al; mov eax, [rdi+0x38]; cmp eax, [rsi+0x38]; jne short 0x00000000000cb090; ret; 
0x000000000edecf: add [rax+0xc], bh; ret; 
0x000000000dda31: add [rax+0xca], bh; lea rdi, [rip+0x109a62]; syscall; 
0x000000000dd8f1: add [rax+0xca], bh; lea rdi, [rip+0x109ba2]; syscall; 
0x000000000dd839: add [rax+0xca], bh; lea rdi, [rip+0x109c5a]; syscall; 
0x000000000dd75d: add [rax+0xca], bh; lea rdi, [rip+0x109d2e]; syscall; 
0x000000000dd58d: add [rax+0xca], bh; lea rdi, [rip+0x109ebe]; syscall; 
0x000000000dd3c9: add [rax+0xca], bh; lea rdi, [rip+0x10a03a]; syscall; 
0x000000000dd00f: add [rax+0xca], bh; lea rdi, [rip+0x10a39c]; syscall; 
0x000000000dbd61: add [rax+0xca], bh; lea rdi, [rip+0x10b5c2]; syscall; 
0x000000000dbc21: add [rax+0xca], bh; lea rdi, [rip+0x10b702]; syscall; 
0x000000000dbb69: add [rax+0xca], bh; lea rdi, [rip+0x10b7ba]; syscall; 
0x000000000db79d: add [rax+0xca], bh; lea rdi, [rip+0x10bb7e]; syscall; 
0x000000000db5cd: add [rax+0xca], bh; lea rdi, [rip+0x10bd0e]; syscall; 
0x000000000db409: add [rax+0xca], bh; lea rdi, [rip+0x10be8a]; syscall; 
0x000000000dab11: add [rax+0xca], bh; lea rdi, [rip+0x10c72a]; syscall; 
0x000000000ceb3d: add [rax+0xca], bh; lea rdi, [rip+0x1185f6]; syscall; 
0x000000000ce949: add [rax+0xca], bh; lea rdi, [rip+0x1187ea]; syscall; 
0x000000000c667d: add [rax+0xca], bh; lea rdi, [rip+0x11efd6]; syscall; 
0x0000000009989d: add [rax+0xca], bh; lea rdi, [rip+0x14a2f6]; syscall; 
0x0000000009b22d: add [rax+0xca], bh; lea rdi, [rip+0x14bcce]; syscall; 
0x0000000009afa9: add [rax+0xca], bh; lea rdi, [rip+0x14bf52]; syscall; 
0x0000000009adc9: add [rax+0xca], bh; lea rdi, [rip+0x14c132]; syscall; 
0x0000000009abdd: add [rax+0xca], bh; lea rdi, [rip+0x14c31e]; syscall; 
0x0000000009ab6d: add [rax+0xca], bh; lea rdi, [rip+0x14c38e]; syscall; 
0x00000000096eed: add [rax+0xca], bh; lea rdi, [rip+0x14cca6]; syscall; 
0x00000000096e8d: add [rax+0xca], bh; lea rdi, [rip+0x14cd06]; syscall; 
0x00000000096abd: add [rax+0xca], bh; lea rdi, [rip+0x14d0d6]; syscall; 
0x0000000009685d: add [rax+0xca], bh; lea rdi, [rip+0x14d336]; syscall; 
0x00000000096215: add [rax+0xca], bh; lea rdi, [rip+0x14d97e]; syscall; 
0x000000000961dd: add [rax+0xca], bh; lea rdi, [rip+0x14d9b6]; syscall; 
0x00000000097ebc: add [rax+0xca], bh; lea rdi, [rip+0x14efb7]; syscall; 
0x00000000097421: add [rax+0xca], bh; lea rdi, [rip+0x14fa42]; syscall; 
0x000000000930f8: add [rax+0xca], bh; lea rdi, [rip+0x153d7b]; syscall; 
0x0000000009307c: add [rax+0xca], bh; lea rdi, [rip+0x153de7]; syscall; 
0x00000000092dd5: add [rax+0xca], bh; lea rdi, [rip+0x15409e]; syscall; 
0x00000000092b29: add [rax+0xca], bh; lea rdi, [rip+0x15434a]; syscall; 
0x0000000009205e: add [rax+0xca], bh; lea rdi, [rip+0x154795]; syscall; 
0x00000000091eb9: add [rax+0xca], bh; lea rdi, [rip+0x15493a]; syscall; 
0x00000000091d2d: add [rax+0xca], bh; lea rdi, [rip+0x154ac6]; syscall; 
0x0000000008ff30: add [rax+0xca], bh; lea rdi, [rip+0x156733]; syscall; 
0x0000000008f9ef: add [rax+0xca], bh; lea rdi, [rip+0x156c74]; syscall; 
0x0000000008f65f: add [rax+0xca], bh; lea rdi, [rip+0x157004]; syscall; 
0x0000000008f2ff: add [rax+0xca], bh; lea rdi, [rip+0x157364]; syscall; 
0x0000000008dbdb: add [rax+0xca], bh; lea rdi, [rip+0x158a88]; syscall; 
0x0000000008d8eb: add [rax+0xca], bh; lea rdi, [rip+0x158d78]; syscall; 
0x0000000008d5e7: add [rax+0xca], bh; lea rdi, [rip+0x15907c]; syscall; 
0x00000000080ccc: add [rax+0xca], bh; lea rdi, [rip+0x165957]; syscall; 
0x000000000808d0: add [rax+0xca], bh; lea rdi, [rip+0x165d53]; syscall; 
0x00000000080824: add [rax+0xca], bh; lea rdi, [rip+0x165dff]; syscall; 
0x0000000007e97d: add [rax+0xca], bh; lea rdi, [rip+0x166cd6]; syscall; 
0x0000000005f1a1: add [rax+0xca], bh; lea rdi, [rip+0x18745a]; syscall; 
0x0000000005ef1d: add [rax+0xca], bh; lea rdi, [rip+0x1876da]; syscall; 
0x0000000005cd99: add [rax+0xca], bh; lea rdi, [rip+0x18984a]; syscall; 
0x0000000005cc59: add [rax+0xca], bh; lea rdi, [rip+0x18998a]; syscall; 
0x00000000052e81: add [rax+0xca], bh; lea rdi, [rip+0x193742]; syscall; 
0x00000000052cbd: add [rax+0xca], bh; lea rdi, [rip+0x193906]; syscall; 
0x000000000527ad: add [rax+0xca], bh; lea rdi, [rip+0x193e16]; syscall; 
0x000000000503a1: add [rax+0xca], bh; lea rdi, [rip+0x195ff2]; syscall; 
0x0000000005021d: add [rax+0xca], bh; lea rdi, [rip+0x196176]; syscall; 
0x000000000501bd: add [rax+0xca], bh; lea rdi, [rip+0x1961d6]; syscall; 
0x00000000045a59: add [rax+0xca], bh; lea rdi, [rip+0x1a0902]; syscall; 
0x00000000045999: add [rax+0xca], bh; lea rdi, [rip+0x1a09c2]; syscall; 
0x000000000458d1: add [rax+0xca], bh; lea rdi, [rip+0x1a0a8a]; syscall; 
0x000000000457f9: add [rax+0xca], bh; lea rdi, [rip+0x1a0b62]; syscall; 
0x000000000448f1: add [rax+0xca], bh; lea rdi, [rip+0x1a11ea]; syscall; 
0x0000000004482c: add [rax+0xca], bh; lea rdi, [rip+0x1a12af]; syscall; 
0x00000000044689: add [rax+0xca], bh; lea rdi, [rip+0x1a1452]; syscall; 
0x000000000445b0: add [rax+0xca], bh; lea rdi, [rip+0x1a152b]; syscall; 
0x0000000003d01a: add [rax+0xca], bh; lea rdi, [rip+0x1a89e1]; syscall; 
0x0000000003b68f: add [rax+0xca], bh; lea rdi, [rip+0x1aa334]; syscall; 
0x0000000003a4de: add [rax+0xca], bh; lea rdi, [rip+0x1ab435]; syscall; 
0x0000000003a4be: add [rax+0xca], bh; lea rdi, [rip+0x1ab455]; syscall; 
0x0000000003a354: add [rax+0xca], bh; lea rdi, [rip+0x1ab5bf]; syscall; 
0x0000000002ac61: add [rax+0xca], bh; lea rdi, [rip+0x1ba9f2]; syscall; 
0x0000000002aaf5: add [rax+0xca], bh; lea rdi, [rip+0x1bab5e]; syscall; 
0x0000000002a9fd: add [rax+0xca], bh; lea rdi, [rip+0x1bac56]; syscall; 
0x0000000002684b: add [rax+0xca], bh; lea rdi, [rip+0x1bf258]; syscall; 
0x00000000191979: add [rax+0xca], bh; lea rdi, [rip+0x54162]; syscall; 
0x00000000191b39: add [rax+0xca], bh; lea rdi, [rip+0x54cba]; syscall; 
0x00000000191e59: add [rax+0xca], bh; lea rdi, [rip+0x567f2]; syscall; 
0x00000000158059: add [rax+0xca], bh; lea rdi, [rip+0x9107e]; syscall; 
0x00000000156d61: add [rax+0xca], bh; lea rdi, [rip+0x92376]; syscall; 
0x00000000156c81: add [rax+0xca], bh; lea rdi, [rip+0x92456]; syscall; 
0x00000000156a99: add [rax+0xca], bh; lea rdi, [rip+0x9263e]; syscall; 
0x00000000156a09: add [rax+0xca], bh; lea rdi, [rip+0x926ce]; syscall; 
0x00000000156969: add [rax+0xca], bh; lea rdi, [rip+0x9276e]; syscall; 
0x000000001568b9: add [rax+0xca], bh; lea rdi, [rip+0x9281e]; syscall; 
0x000000001564e9: add [rax+0xca], bh; lea rdi, [rip+0x92bee]; syscall; 
0x0000000014c2e9: add [rax+0xca], bh; lea rdi, [rip+0x9cbd2]; syscall; 
0x0000000014c189: add [rax+0xca], bh; lea rdi, [rip+0x9cd32]; syscall; 
0x0000000014bf7d: add [rax+0xca], bh; lea rdi, [rip+0x9cf3e]; syscall; 
0x0000000014bddd: add [rax+0xca], bh; lea rdi, [rip+0x9d0de]; syscall; 
0x0000000014bc49: add [rax+0xca], bh; lea rdi, [rip+0x9d272]; syscall; 
0x0000000014bb09: add [rax+0xca], bh; lea rdi, [rip+0x9d3b2]; syscall; 
0x0000000014b9a9: add [rax+0xca], bh; lea rdi, [rip+0x9d512]; syscall; 
0x0000000014b899: add [rax+0xca], bh; lea rdi, [rip+0x9d622]; syscall; 
0x00000000148409: add [rax+0xca], bh; lea rdi, [rip+0xa0a96]; syscall; 
0x0000000013f4d5: add [rax+0xca], bh; lea rdi, [rip+0xa977e]; syscall; 
0x0000000013f1a5: add [rax+0xca], bh; lea rdi, [rip+0xa9aae]; syscall; 
0x0000000013ee25: add [rax+0xca], bh; lea rdi, [rip+0xa9e2e]; syscall; 
0x0000000013ec27: add [rax+0xca], bh; lea rdi, [rip+0xaa02c]; syscall; 
0x0000000013ea9d: add [rax+0xca], bh; lea rdi, [rip+0xaa1b6]; syscall; 
0x0000000013e860: add [rax+0xca], bh; lea rdi, [rip+0xaa3f3]; syscall; 
0x0000000013de19: add [rax+0xca], bh; lea rdi, [rip+0xaad72]; syscall; 
0x0000000013dc98: add [rax+0xca], bh; lea rdi, [rip+0xaaef3]; syscall; 
0x0000000013dc5e: add [rax+0xca], bh; lea rdi, [rip+0xaaf2d]; syscall; 
0x0000000013db51: add [rax+0xca], bh; lea rdi, [rip+0xab03a]; syscall; 
0x0000000013d311: add [rax+0xca], bh; lea rdi, [rip+0xab87a]; syscall; 
0x0000000013d249: add [rax+0xca], bh; lea rdi, [rip+0xab942]; syscall; 
0x0000000013d12d: add [rax+0xca], bh; lea rdi, [rip+0xaba5e]; syscall; 
0x0000000013bd9a: add [rax+0xca], bh; lea rdi, [rip+0xacba1]; syscall; 
0x00000000138519: add [rax+0xca], bh; lea rdi, [rip+0xb0132]; syscall; 
0x0000000013823d: add [rax+0xca], bh; lea rdi, [rip+0xb040e]; syscall; 
0x00000000133f5d: add [rax+0xca], bh; lea rdi, [rip+0xb46da]; syscall; 
0x000000001339dd: add [rax+0xca], bh; lea rdi, [rip+0xb4c3e]; syscall; 
0x00000000133819: add [rax+0xca], bh; lea rdi, [rip+0xb4dba]; syscall; 
0x00000000133751: add [rax+0xca], bh; lea rdi, [rip+0xb4e22]; syscall; 
0x00000000133611: add [rax+0xca], bh; lea rdi, [rip+0xb4f62]; syscall; 
0x00000000133559: add [rax+0xca], bh; lea rdi, [rip+0xb501a]; syscall; 
0x00000000132e69: add [rax+0xca], bh; lea rdi, [rip+0xb5702]; syscall; 
0x00000000132b39: add [rax+0xca], bh; lea rdi, [rip+0xb5a32]; syscall; 
0x0000000013297d: add [rax+0xca], bh; lea rdi, [rip+0xb5bee]; syscall; 
0x00000000132463: add [rax+0xca], bh; lea rdi, [rip+0xb6064]; syscall; 
0x0000000012eb71: add [rax+0xca], bh; lea rdi, [rip+0xb983a]; syscall; 
0x0000000012ea31: add [rax+0xca], bh; lea rdi, [rip+0xb997a]; syscall; 
0x0000000012e979: add [rax+0xca], bh; lea rdi, [rip+0xb9a32]; syscall; 
0x0000000012e88d: add [rax+0xca], bh; lea rdi, [rip+0xb9b16]; syscall; 
0x0000000012e6bd: add [rax+0xca], bh; lea rdi, [rip+0xb9cb6]; syscall; 
0x0000000012e4f9: add [rax+0xca], bh; lea rdi, [rip+0xb9e52]; syscall; 
0x0000000012e431: add [rax+0xca], bh; lea rdi, [rip+0xb9eca]; syscall; 
0x0000000012e2f1: add [rax+0xca], bh; lea rdi, [rip+0xba00a]; syscall; 
0x0000000012e239: add [rax+0xca], bh; lea rdi, [rip+0xba0c2]; syscall; 
0x0000000012e159: add [rax+0xca], bh; lea rdi, [rip+0xba19a]; syscall; 
0x0000000012dc8d: add [rax+0xca], bh; lea rdi, [rip+0xba5ee]; syscall; 
0x0000000012d6bd: add [rax+0xca], bh; lea rdi, [rip+0xbab5e]; syscall; 
0x0000000012d19d: add [rax+0xca], bh; lea rdi, [rip+0xbb036]; syscall; 
0x0000000012cfd1: add [rax+0xca], bh; lea rdi, [rip+0xbb1c2]; syscall; 
0x0000000012ce91: add [rax+0xca], bh; lea rdi, [rip+0xbb302]; syscall; 
0x0000000012cdd9: add [rax+0xca], bh; lea rdi, [rip+0xbb3ba]; syscall; 
0x0000000012ccf9: add [rax+0xca], bh; lea rdi, [rip+0xbb492]; syscall; 
0x0000000012c8dd: add [rax+0xca], bh; lea rdi, [rip+0xbb866]; syscall; 
0x0000000012c2c1: add [rax+0xca], bh; lea rdi, [rip+0xbbe22]; syscall; 
0x0000000012c169: add [rax+0xca], bh; lea rdi, [rip+0xbbf7a]; syscall; 
0x0000000012c0a9: add [rax+0xca], bh; lea rdi, [rip+0xbc03a]; syscall; 
0x0000000012bfc1: add [rax+0xca], bh; lea rdi, [rip+0xbc11a]; syscall; 
0x0000000012bedd: add [rax+0xca], bh; lea rdi, [rip+0xbc1c6]; syscall; 
0x0000000012b87d: add [rax+0xca], bh; lea rdi, [rip+0xbc7e6]; syscall; 
0x0000000012b671: add [rax+0xca], bh; lea rdi, [rip+0xbc9aa]; syscall; 
0x0000000012b519: add [rax+0xca], bh; lea rdi, [rip+0xbcb02]; syscall; 
0x0000000012b459: add [rax+0xca], bh; lea rdi, [rip+0xbcbc2]; syscall; 
0x0000000012b371: add [rax+0xca], bh; lea rdi, [rip+0xbcca2]; syscall; 
0x0000000012a75d: add [rax+0xca], bh; lea rdi, [rip+0xbd83e]; syscall; 
0x0000000012a4ed: add [rax+0xca], bh; lea rdi, [rip+0xbda6e]; syscall; 
0x00000000129d6d: add [rax+0xca], bh; lea rdi, [rip+0xbe18e]; syscall; 
0x00000000120311: add [rax+0xca], bh; lea rdi, [rip+0xc7b32]; syscall; 
0x000000001201d1: add [rax+0xca], bh; lea rdi, [rip+0xc7c72]; syscall; 
0x00000000120119: add [rax+0xca], bh; lea rdi, [rip+0xc7d2a]; syscall; 
0x0000000011fd3f: add [rax+0xca], bh; lea rdi, [rip+0xc80fc]; syscall; 
0x0000000011fb15: add [rax+0xca], bh; lea rdi, [rip+0xc82ee]; syscall; 
0x0000000011f94d: add [rax+0xca], bh; lea rdi, [rip+0xc846e]; syscall; 
0x0000000011f789: add [rax+0xca], bh; lea rdi, [rip+0xc85ea]; syscall; 
0x0000000011f6b9: add [rax+0xca], bh; lea rdi, [rip+0xc8666]; syscall; 
0x0000000011f5e9: add [rax+0xca], bh; lea rdi, [rip+0xc8736]; syscall; 
0x0000000011f54d: add [rax+0xca], bh; lea rdi, [rip+0xc87d2]; syscall; 
0x0000000011eab1: add [rax+0xca], bh; lea rdi, [rip+0xc923a]; syscall; 
0x0000000011e971: add [rax+0xca], bh; lea rdi, [rip+0xc937a]; syscall; 
0x0000000011e8b9: add [rax+0xca], bh; lea rdi, [rip+0xc9432]; syscall; 
0x0000000011e2bf: add [rax+0xca], bh; lea rdi, [rip+0xc9a24]; syscall; 
0x0000000011e0bd: add [rax+0xca], bh; lea rdi, [rip+0xc9bce]; syscall; 
0x0000000011dedd: add [rax+0xca], bh; lea rdi, [rip+0xc9d46]; syscall; 
0x0000000011dd19: add [rax+0xca], bh; lea rdi, [rip+0xc9ea2]; syscall; 
0x00000000113619: add [rax+0xca], bh; lea rdi, [rip+0xd422a]; syscall; 
0x000000001134fd: add [rax+0xca], bh; lea rdi, [rip+0xd4346]; syscall; 
0x0000000011309d: add [rax+0xca], bh; lea rdi, [rip+0xd47a6]; syscall; 
0x00000000112b6c: add [rax+0xca], bh; lea rdi, [rip+0xd4cd7]; syscall; 
0x0000000010155d: add [rax+0xca], bh; lea rdi, [rip+0xe6056]; syscall; 
0x000000000272c2: add [rax+0xca], bh; syscall; 
0x0000000009135c: add [rax+0xcc], bh; cmp rsi, 0x7fffffff; mov esi, 0x7fffffff; cmovbe rsi, r8; syscall; 
0x000000000913b1: add [rax+0xcc], bh; syscall; 
0x00000000041a1e: add [rax+0xd], bh; syscall; 
0x000000000d909a: add [rax+0xe6], bh; syscall; 
0x0000000010ded4: add [rax+0xe740000], al; mov qword ptr [rdi], 0xffffffffffffffff; ret; 
0x000000000418c3: add [rax+0xe], bh; syscall; 
0x0000000008f043: add [rax+0xf740a38], eax; cmp rax, rsi; ja short 0x000000000008f040; lea eax, [rdx+rdi]; ret; 
0x000000000eb78a: add [rax+0xf], al; mov dh, 0xed; movsxd rax, [rcx+rbp*4]; add rax, rcx; notrack jmp rax; 
0x000000000eb71f: add [rax+0xf], al; mov dh, 0xed; movsxd rax, [rdx+rbp*4]; add rax, rdx; notrack jmp rax; 
0x000000000adc09: add [rax+0xf], cl; mov ebp, 0xf80148c0; ret; 
0x0000000014ff2f: add [rax+0xf], cl; mov edi, 0xe6894806; mov [rsp], rax; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x00000000055daf: add [rax+0xf], cl; mov edx, 0x894830e8; or [r8+0x2], r15b; ret; 
0x00000000046d77: add [rax+0xf], cl; mov esi, 0x83480143; ret; 
0x000000000dc837: add [rax+0xf], cl; mov esi, 0x83480153; ret; 
0x0000000015002f: add [rax+0xf], cl; mov esi, 0xe68948c5; mov [rsp], rax; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x000000000db200: add [rax+0xf], cl; ret; 
0x0000000009079a: add [rax+0xf], cl; shl byte ptr [rcx], 0x1; ror byte ptr [rax+0x39], 0xfa; setae al; ret; 
0x000000000f3752: add [rax+0xf], ecx; ret; 
0x000000000e0a67: add [rax+0xfc17], bh; ret; 
0x000000000e0a66: add [rax+0xfc17], dil; ret; 
0x000000000e0b97: add [rax+0xff], bh; ret; 
0x000000000e0b96: add [rax+0xff], dil; ret; 
0x0000000009f60e: add [rax+rax*8+0x3d3c1974], eax; je short 0x000000000009f62c; xor eax, eax; ret; 
0x000000000e3b90: add [rax+rax*8-0x3fce538b], eax; ret; 
0x000000000e5d3f: add [rax+rax*8-0x49f0e38c], al; add ecx, [rax-0x77]; fimul st, dword ptr [rax-0x7d]; ret; 
0x000000000a4bfc: add [rax+rax*8-0xfc6f08c], eax; jne short 0x00000000000a4bf0; mov rax, r8; ret; 
0x00000000133034: add [rax+rax], al; add [rcx+rcx*4-0x2], cl; mov rdi, r12; call rbp; 
0x0000000012f3d9: add [rax+rax], al; add [rcx+rcx*4-0x6], cl; mov rsi, r14; mov rdi, rbx; call rax; 
0x00000000078e6c: add [rax+rax], al; add [rcx-0x7d], al; in al, dx; add [rax-0x8e443], eax; jmp qword ptr [rax]; 
0x0000000010f271: add [rax+rax], cl; add [rax], al; mov eax, 0xffffffff; ret; 
0x00000000096889: add [rax+rax], cl; add [rax], al; mov rax, r8; ret; 
0x0000000009549c: add [rax+rax], cl; add [rax], al; mov rax, r9; ret; 
0x000000001146e2: add [rax+rax], cl; add [rax], al; xor eax, eax; pop rbx; ret; 
0x0000000009b9cd: add [rax+rax], cl; add [rax], al; xor eax, eax; ret; 
0x00000000056763: add [rax+rax], cl; add [rdi+rax*4-0x17], dh; adc [rdx], eax; std; jmp qword ptr [rsi-0x70]; 
0x0000000010e850: add [rax+rax], edx; mov eax, r8d; mov ebx, fs:[r10]; syscall; 
0x000000000cb615: add [rax+rbp*2+0x48], dh; lea eax, [rdi-0x10]; ret; 
0x000000000eacdc: add [rax+rbp*4-0x7d], esi; jrcxz 0x00000000000eacea; je short 0x00000000000eac67; pop rbx; ret; 
0x00000000159765: add [rax+rbx+0x48], dh; mov eax, [rip+0x896c9]; mov rdi, [rsp]; mov rax, [rax+0x268]; jmp rax; 
0x0000000002903a: add [rax+rcx*2+0x3], ah; add al, 0x25; add [rax], al; add [rax], al; ret; 
0x0000000019158b: add [rax+rcx*2-0x75], ah; adc [rax-0x7d], cl; ret; 
0x00000000045464: add [rax+rcx*2-0x77], ah; adc ecx, [rax-0x75]; jge short 0x0000000000045475; call rax; 
0x000000000a4cae: add [rax+rcx*4+0x17], al; add rax, rdi; ret; 
0x000000000536e3: add [rax+rcx+0x48], esi; mov ecx, [rcx+rax*8]; mov [rdx+rax*8], rcx; xor eax, eax; ret; 
0x0000000005390b: add [rax+rcx+0x48], esi; mov edx, [rdx+rcx*8]; mov [rax+rcx*8], rdx; xor eax, eax; ret; 
0x0000000009edf5: add [rax+rdx+0x5b], dh; pop rbp; pop r12; ret; 
0x0000000005a962: add [rax-0x13b43], al; jmp qword ptr [rsi+0xf]; 
0x000000000b39af: add [rax-0x177cb6c9], cl; add [rax-0x73], ecx; jg short 0x00000000000b39bb; jne 0x00000000000b4270; ret; 
0x00000000136b15: add [rax-0x1], bh; cmove eax, edx; ret; 
0x000000000446ed: add [rax-0x1], bh; pop rbp; pop r12; pop r13; ret; 
0x0000000003fb8d: add [rax-0x1], bh; pop rbp; ret; 
0x0000000013712f: add [rax-0x1], bh; pop rbx; ret; 
0x00000000029325: add [rax-0x1], bh; ret; 
0x0000000008d2de: add [rax-0x1], dil; ret; 
0x00000000119643: add [rax-0x2708fff4], ebx; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000015a636: add [rax-0x2d], cl; loop 0x000000000015a683; or [rdi+rax*8], edx; xor eax, eax; ret; 
0x0000000004234d: add [rax-0x2d], cl; loopne 0x000000000004239a; or [rdi], eax; xor eax, eax; ret; 
0x00000000040c34: add [rax-0x3991f09a], al; ret; 
0x00000000137ad2: add [rax-0x39], cl; add al, 0x24; add [rax], al; add [rax], al; call rax; 
0x0000000008ff4e: add [rax-0x39], cl; add eax, 0x15671e; add [rax], al; add [rax], al; ret; 
0x0000000011bd8e: add [rax-0x39], cl; add eax, 0xc75e6; add [rax], al; add [rax], al; ret; 
0x0000000011bd65: add [rax-0x39], cl; add eax, 0xc760f; add [rax], al; add [rax], al; ret; 
0x0000000011bd0e: add [rax-0x39], cl; add eax, 0xc7666; add [rax], al; add [rax], al; ret; 
0x00000000047f7f: add [rax-0x39], cl; ret; 
0x000000000cbb3f: add [rax-0x39], cl; rol byte ptr [rbx], 0x0; add [rax], al; ret; 
0x000000000cbb7f: add [rax-0x39], cl; rol byte ptr [rdi], 0x0; add [rax], al; ret; 
0x000000000cbb2f: add [rax-0x39], cl; rol byte ptr [rdx], 0x0; add [rax], al; ret; 
0x000000000cbb6f: add [rax-0x39], cl; rol byte ptr [rsi], 0x0; add [rax], al; ret; 
0x0000000004194e: add [rax-0x39], cl; ror byte ptr [rdi], 0x0; add [rax], al; syscall; 
0x000000000b415e: add [rax-0x3c00a877], dl; nop [rax+rax]; nop; mov [rdi], edx; ret; 
0x000000001297dd: add [rax-0x3c38baf1], al; nop [rax+rax]; mov eax, edi; and eax, 0xffffff; ret; 
0x0000000012986e: add [rax-0x3c38baf1], al; nop [rax]; mov eax, edi; shr eax, 0x18; ret; 
0x0000000018a82e: add [rax-0x3cf872b8], dl; nop [rax+rax]; nop; lea rax, [rdi+0x1]; ret; 
0x0000000009eccf: add [rax-0x3d7cb7f6], cl; add [rax-0x7d], ecx; ret; 
0x000000001116b7: add [rax-0x3d7cb7fe], cl; add [rax-0x7d], ecx; ret; 
0x0000000009d1de: add [rax-0x3e8bfe1b], al; ret; 
0x00000000040449: add [rax-0x3f000001], al; shr eax, 0x1f; ret; 
0x0000000018227e: add [rax-0x3f43f00d], dl; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x00000000028cda: add [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x0000000002bb72: add [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; jmp rax; 
0x000000000284aa: add [rax-0x3f], cl; rcl byte ptr [rcx], 0x48; mov [rip+0x1be192], eax; ret; 
0x00000000137919: add [rax-0x3f], cl; ret; 
0x000000000d7506: add [rax-0x3f], cl; stc; add ch, [rcx]; ret far; 
0x0000000010e6d4: add [rax-0x3fcef877], al; ret; 
0x00000000055c5f: add [rax-0x3ffe], bh; sub eax, ecx; mov [rdx], eax; mov eax, 0x1; ret; 
0x000000000d2915: add [rax-0x41], cl; ret; 
0x0000000011bafe: add [rax-0x42], cl; ret; 
0x00000000055c78: add [rax-0x47ff76b7], al; add [rax], eax; add [rax], al; mov dword ptr [rdx], 0xffffc002; ret; 
0x00000000190c67: add [rax-0x48], cl; add [rax], al; add [rax], al; add [rax-0x7ab70000], al; ret; 
0x00000000036167: add [rax-0x49f000b9], ecx; push rbx; add [rax-0x7d], ecx; ret; 
0x0000000010894e: add [rax-0x5e1f00d], dl; mov eax, 0x102; syscall; 
0x0000000010a9ae: add [rax-0x5e1f00d], dl; mov eax, 0x107; syscall; 
0x0000000010a8ee: add [rax-0x5e1f00d], dl; mov eax, 0x10a; syscall; 
0x0000000011a03e: add [rax-0x5e1f00d], dl; mov eax, 0x110; syscall; 
0x0000000011a09e: add [rax-0x5e1f00d], dl; mov eax, 0x11b; syscall; 
0x00000000119d3e: add [rax-0x5e1f00d], dl; mov eax, 0x123; syscall; 
0x000000001095ce: add [rax-0x5e1f00d], dl; mov eax, 0x124; syscall; 
0x0000000010962e: add [rax-0x5e1f00d], dl; mov eax, 0x125; syscall; 
0x00000000119e5e: add [rax-0x5e1f00d], dl; mov eax, 0x126; syscall; 
0x0000000011a0ce: add [rax-0x5e1f00d], dl; mov eax, 0x12c; syscall; 
0x0000000011a15e: add [rax-0x5e1f00d], dl; mov eax, 0x13f; syscall; 
0x0000000011a18e: add [rax-0x5e1f00d], dl; mov eax, 0x14a; syscall; 
0x0000000011a1be: add [rax-0x5e1f00d], dl; mov eax, 0x14b; syscall; 
0x000000001095fe: add [rax-0x5e1f00d], dl; mov eax, 0x16; syscall; 
0x000000000fd22e: add [rax-0x5e1f00d], dl; mov eax, 0x18; syscall; 
0x000000001139de: add [rax-0x5e1f00d], dl; mov eax, 0x1b; syscall; 
0x0000000010959e: add [rax-0x5e1f00d], dl; mov eax, 0x21; syscall; 
0x0000000011a92e: add [rax-0x5e1f00d], dl; mov eax, 0x29; syscall; 
0x0000000011a3ee: add [rax-0x5e1f00d], dl; mov eax, 0x33; syscall; 
0x0000000010971e: add [rax-0x5e1f00d], dl; mov eax, 0x51; syscall; 
0x0000000010a9de: add [rax-0x5e1f00d], dl; mov eax, 0x54; syscall; 
0x0000000010a91e: add [rax-0x5e1f00d], dl; mov eax, 0x59; syscall; 
0x0000000010871e: add [rax-0x5e1f00d], dl; mov eax, 0x5b; syscall; 
0x0000000010a00e: add [rax-0x5e1f00d], dl; mov eax, 0x5c; syscall; 
0x0000000010a03e: add [rax-0x5e1f00d], dl; mov eax, 0x5d; syscall; 
0x0000000010a06e: add [rax-0x5e1f00d], dl; mov eax, 0x5e; syscall; 
0x000000000de57e: add [rax-0x5e1f00d], dl; mov eax, 0x64; syscall; 
0x00000000119ebe: add [rax-0x5e1f00d], dl; mov eax, 0x67; syscall; 
0x000000000dfdde: add [rax-0x5e1f00d], dl; mov eax, 0x6d; syscall; 
0x000000000dfe0e: add [rax-0x5e1f00d], dl; mov eax, 0x6f; syscall; 
0x000000000dfe6e: add [rax-0x5e1f00d], dl; mov eax, 0x70; syscall; 
0x000000000dfe9e: add [rax-0x5e1f00d], dl; mov eax, 0x76; syscall; 
0x000000000dfece: add [rax-0x5e1f00d], dl; mov eax, 0x78; syscall; 
0x000000001192de: add [rax-0x5e1f00d], dl; mov eax, 0x7b; syscall; 
0x00000000119c7e: add [rax-0x5e1f00d], dl; mov eax, 0x7e; syscall; 
0x0000000011a06e: add [rax-0x5e1f00d], dl; mov eax, 0x86; syscall; 
0x000000001085be: add [rax-0x5e1f00d], dl; mov eax, 0x8a; syscall; 
0x000000000fd19e: add [rax-0x5e1f00d], dl; mov eax, 0x8f; syscall; 
0x000000000fd1ce: add [rax-0x5e1f00d], dl; mov eax, 0x90; syscall; 
0x000000000fd1fe: add [rax-0x5e1f00d], dl; mov eax, 0x91; syscall; 
0x000000000fd25e: add [rax-0x5e1f00d], dl; mov eax, 0x92; syscall; 
0x000000000fd28e: add [rax-0x5e1f00d], dl; mov eax, 0x93; syscall; 
0x000000000fd2be: add [rax-0x5e1f00d], dl; mov eax, 0x94; syscall; 
0x00000000113a6e: add [rax-0x5e1f00d], dl; mov eax, 0x96; syscall; 
0x00000000113a9e: add [rax-0x5e1f00d], dl; mov eax, 0x97; syscall; 
0x00000000113ace: add [rax-0x5e1f00d], dl; mov eax, 0x98; syscall; 
0x00000000119bde: add [rax-0x5e1f00d], dl; mov eax, 0x9a; syscall; 
0x00000000119f7e: add [rax-0x5e1f00d], dl; mov eax, 0x9b; syscall; 
0x000000001100ce: add [rax-0x5e1f00d], dl; mov eax, 0xa1; syscall; 
0x000000001105be: add [rax-0x5e1f00d], dl; mov eax, 0xa7; syscall; 
0x000000001105ee: add [rax-0x5e1f00d], dl; mov eax, 0xa8; syscall; 
0x000000001138de: add [rax-0x5e1f00d], dl; mov eax, 0xa; syscall; 
0x0000000011919e: add [rax-0x5e1f00d], dl; mov eax, 0xac; syscall; 
0x00000000119cae: add [rax-0x5e1f00d], dl; mov eax, 0xae; syscall; 
0x00000000119cde: add [rax-0x5e1f00d], dl; mov eax, 0xb0; syscall; 
0x000000001138ae: add [rax-0x5e1f00d], dl; mov eax, 0xb; syscall; 
0x0000000011a1ee: add [rax-0x5e1f00d], dl; mov eax, 0xba; syscall; 
0x00000000116f9e: add [rax-0x5e1f00d], dl; mov eax, 0xc6; syscall; 
0x00000000116e7e: add [rax-0x5e1f00d], dl; mov eax, 0xc7; syscall; 
0x00000000119d0e: add [rax-0x5e1f00d], dl; mov eax, 0xd5; syscall; 
0x00000000119c0e: add [rax-0x5e1f00d], dl; mov eax, 0xe4; syscall; 
0x00000000119e2e: add [rax-0x5e1f00d], dl; mov eax, 0xfd; syscall; 
0x00000000119e8e: add [rax-0x5e1f00d], dl; mov eax, 0xff; syscall; 
0x0000000013542e: add [rax-0x5e1f00d], dl; mov edi, [rdi]; mov eax, 0x3; syscall; 
0x00000000041bee: add [rax-0x5e1f00d], dl; mov esi, 0x8; mov eax, 0x7f; syscall; 
0x0000000010a09e: add [rax-0x5e1f00d], dl; mov r10, rcx; mov eax, 0x104; syscall; 
0x0000000010a88e: add [rax-0x5e1f00d], dl; mov r10, rcx; mov eax, 0x109; syscall; 
0x0000000010a94e: add [rax-0x5e1f00d], dl; mov r10, rcx; mov eax, 0x10b; syscall; 
0x0000000011a0fe: add [rax-0x5e1f00d], dl; mov r10, rcx; mov eax, 0x12f; syscall; 
0x0000000011a95e: add [rax-0x5e1f00d], dl; mov r10, rcx; mov eax, 0x35; syscall; 
0x0000000011a8ce: add [rax-0x5e1f00d], dl; mov r10, rcx; mov eax, 0x36; syscall; 
0x0000000011a41e: add [rax-0x5e1f00d], dl; mov r10, rcx; mov eax, 0x37; syscall; 
0x00000000119eee: add [rax-0x5e1f00d], dl; mov r10, rcx; mov eax, 0xa5; syscall; 
0x00000000119dce: add [rax-0x5e1f00d], dl; mov r10, rcx; mov eax, 0xaf; syscall; 
0x00000000119fae: add [rax-0x5e1f00d], dl; mov r10, rcx; mov eax, 0xb2; syscall; 
0x0000000011702e: add [rax-0x5e1f00d], dl; mov r10, rcx; mov eax, 0xbc; syscall; 
0x00000000116fce: add [rax-0x5e1f00d], dl; mov r10, rcx; mov eax, 0xbd; syscall; 
0x00000000116eae: add [rax-0x5e1f00d], dl; mov r10, rcx; mov eax, 0xbe; syscall; 
0x00000000116f3e: add [rax-0x5e1f00d], dl; mov r10, rcx; mov eax, 0xc0; syscall; 
0x00000000113a0e: add [rax-0x5e1f00d], dl; mov r10, rcx; mov eax, 0xd8; syscall; 
0x00000000119d6e: add [rax-0x5e1f00d], dl; mov r10, rcx; mov eax, 0xe9; syscall; 
0x0000000010dd8e: add [rax-0x5e1f00d], dl; mov r10d, ecx; mov eax, 0x118; syscall; 
0x0000000015a84e: add [rax-0x5e1f00d], dl; mov rax, [rip+0x885ed]; mov dword ptr fs:[rax], 0x26; xor eax, eax; ret; 
0x0000000011a22e: add [rax-0x5e1f00d], dl; mov rax, [rip+0xc8c0d]; mov dword ptr fs:[rax], 0x26; mov rax, 0xffffffffffffffff; ret; 
0x000000000412ee: add [rax-0x5e1f00d], dl; movmskps eax, xmm0; and eax, 0x8; ret; 
0x00000000040dae: add [rax-0x5e1f00d], dl; pmovmskb eax, xmm0; and eax, 0x8; ret; 
0x00000000028bae: add [rax-0x5e1f00d], dl; ret; 
0x00000000090ec3: add [rax-0x68], cl; mov [rbx+0x10], rax; xor eax, eax; pop rbx; ret; 
0x000000000599ca: add [rax-0x72b7feb1], ecx; add cl, [rcx+0x39]; ret far; 
0x000000000599c9: add [rax-0x72b7feb1], rcx; add cl, [rcx+0x39]; ret far; 
0x000000000ba40d: add [rax-0x73], cl; adc eax, 0x1127b; cmovne rax, rdx; ret; 
0x0000000009c158: add [rax-0x73], cl; adc eax, 0x12110; cmovne rax, rdx; ret; 
0x0000000007ced4: add [rax-0x73], cl; adc eax, 0x12b6f4; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000009c5e8: add [rax-0x73], cl; adc eax, 0x138a0; cmovne rax, rdx; ret; 
0x0000000009d77d: add [rax-0x73], cl; adc eax, 0x1a63b; lea rax, [rip+0x1a714]; cmove rax, rdx; ret; 
0x0000000009d3fd: add [rax-0x73], cl; adc eax, 0x1a99b; lea rax, [rip+0x1aa74]; cmove rax, rdx; ret; 
0x0000000009d29d: add [rax-0x73], cl; adc eax, 0x1ab1b; lea rax, [rip+0x1abf4]; cmove rax, rdx; ret; 
0x0000000018e773: add [rax-0x73], cl; adc eax, 0x29f25; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000127707: add [rax-0x73], cl; adc eax, 0x3d771; cmovne rax, rdx; ret; 
0x00000000127567: add [rax-0x73], cl; adc eax, 0x3d931; cmovne rax, rdx; ret; 
0x00000000127637: add [rax-0x73], cl; adc eax, 0x40351; cmovne rax, rdx; ret; 
0x000000001276d5: add [rax-0x73], cl; adc eax, 0x5da03; lea rax, [rip+0x5da6c]; cmove rax, rdx; ret; 
0x00000000127605: add [rax-0x73], cl; adc eax, 0x5daf3; lea rax, [rip+0x5db5c]; cmove rax, rdx; ret; 
0x00000000127535: add [rax-0x73], cl; adc eax, 0x5dbc3; lea rax, [rip+0x5dc2c]; cmove rax, rdx; ret; 
0x0000000012772e: add [rax-0x73], cl; adc eax, 0x6272a; lea rax, [rip+0x62793]; cmove rax, rdx; ret; 
0x0000000012765e: add [rax-0x73], cl; adc eax, 0x6281a; lea rax, [rip+0x62883]; cmove rax, rdx; ret; 
0x0000000012758e: add [rax-0x73], cl; adc eax, 0x628ea; lea rax, [rip+0x62953]; cmove rax, rdx; ret; 
0x000000001277f2: add [rax-0x73], cl; adc eax, 0x62c16; cmove rax, rdx; ret; 
0x0000000014cdba: add [rax-0x73], cl; adc eax, 0x9c13e; mov fs:[rax], rdx; ret; 
0x0000000014338f: add [rax-0x73], cl; adc eax, 0x9f7a9; jmp qword ptr [rdx+rax*8]; 
0x00000000103b5a: add [rax-0x73], cl; adc eax, 0xa8286; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000009c208: add [rax-0x73], cl; adc eax, 0xc0d00; cmovne rax, rdx; ret; 
0x0000000009c666: add [rax-0x73], cl; adc eax, 0xc1b12; cmovne rax, rdx; ret; 
0x000000000e5f09: add [rax-0x73], cl; adc eax, 0xc4bc3; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000000e41d0: add [rax-0x73], cl; adc eax, 0xc678c; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000009d737: add [rax-0x73], cl; adc eax, 0xc7771; cmovne rax, rdx; ret; 
0x0000000009d3b7: add [rax-0x73], cl; adc eax, 0xc7ad1; cmovne rax, rdx; ret; 
0x000000000e0e83: add [rax-0x73], cl; adc eax, 0xc96a9; movsxd rax, [rdx+rbp*4]; add rax, rdx; notrack jmp rax; 
0x0000000009d257: add [rax-0x73], cl; adc eax, 0xca741; cmovne rax, rdx; ret; 
0x0000000009d611: add [rax-0x73], cl; adc eax, 0xccec7; cmovne rax, rdx; ret; 
0x0000000009d571: add [rax-0x73], cl; adc eax, 0xccf47; cmovne rax, rdx; ret; 
0x0000000009d661: add [rax-0x73], cl; adc eax, 0xcefd7; cmovne rax, rdx; ret; 
0x0000000009d5c1: add [rax-0x73], cl; adc eax, 0xcf057; cmovne rax, rdx; ret; 
0x0000000009c288: add [rax-0x73], cl; adc eax, 0xd2900; cmovne rax, rdx; ret; 
0x000000000b91cd: add [rax-0x73], cl; adc eax, 0xd2eab; cmovne rax, rdx; ret; 
0x0000000009c6b8: add [rax-0x73], cl; adc eax, 0xd3c80; cmovne rax, rdx; ret; 
0x0000000009d4a8: add [rax-0x73], cl; adc eax, 0xd5a10; cmovne rax, rdx; ret; 
0x0000000009d508: add [rax-0x73], cl; adc eax, 0xd71c0; cmovne rax, rdx; ret; 
0x0000000009d705: add [rax-0x73], cl; adc eax, 0xe7a03; lea rax, [rip+0xe7a6c]; cmove rax, rdx; ret; 
0x0000000009d385: add [rax-0x73], cl; adc eax, 0xe7d63; lea rax, [rip+0xe7dcc]; cmove rax, rdx; ret; 
0x0000000009d225: add [rax-0x73], cl; adc eax, 0xe7ee3; lea rax, [rip+0xe7f4c]; cmove rax, rdx; ret; 
0x0000000009d75e: add [rax-0x73], cl; adc eax, 0xec72a; lea rax, [rip+0xec793]; cmove rax, rdx; ret; 
0x0000000009d3de: add [rax-0x73], cl; adc eax, 0xeca8a; lea rax, [rip+0xecaf3]; cmove rax, rdx; ret; 
0x0000000009d27e: add [rax-0x73], cl; adc eax, 0xecc0a; lea rax, [rip+0xecc73]; cmove rax, rdx; ret; 
0x0000000009d342: add [rax-0x73], cl; adc eax, 0xed0d6; cmove rax, rdx; ret; 
0x0000000009d1bd: add [rax-0x73], cl; adc eax, 0xed74b; cmovne rax, rdx; ret; 
0x0000000009c1b9: add [rax-0x73], cl; adc eax, 0xee42f; cmovne rax, rdx; ret; 
0x0000000012774d: add [rax-0x73], cl; adc eax, 0xfff9063b; lea rax, [rip-0x6f8ec]; cmove rax, rdx; ret; 
0x0000000012767d: add [rax-0x73], cl; adc eax, 0xfff9072b; lea rax, [rip-0x6f7fc]; cmove rax, rdx; ret; 
0x000000001275ad: add [rax-0x73], cl; adc eax, 0xfff907fb; lea rax, [rip-0x6f72c]; cmove rax, rdx; ret; 
0x00000000110ef5: add [rax-0x73], cl; add [r13-0x2d], esi; mov rax, r8; ret; 
0x000000000b94a0: add [rax-0x73], cl; add [rcx-0x75], rcx; cmp al, 0x24; lea r9, [rsp+0x28]; call rbx; 
0x000000000b960a: add [rax-0x73], cl; add al, 0x4c; lea ecx, [rsp+0x18]; call rbx; 
0x000000000b9a2c: add [rax-0x73], cl; add al, 0x4c; lea ecx, [rsp+0x20]; call rbx; 
0x000000000ad7be: add [rax-0x73], cl; add al, 0x7; cmp [rax], sil; cmovne rax, rdx; ret; 
0x0000000006b69a: add [rax-0x73], cl; add al, 0x8b; sbb cl, [rax-0x77]; or [rbx-0x7bf00005], al; ret; 
0x0000000018a86f: add [rax-0x73], cl; add al, 0xc3; nop [rax+rax]; lea rax, [rdi+0x5]; ret; 
0x00000000032340: add [rax-0x73], cl; add cl, [rax+0x39]; ret; 
0x00000000093148: add [rax-0x73], cl; add eax, 0x150a50; add rsp, 0x10; pop rbp; ret; 
0x0000000003737f: add [rax-0x73], cl; add eax, 0x176e5b; ret; 
0x00000000046133: add [rax-0x73], cl; add eax, 0x1a023b; add rsp, 0x8; ret; 
0x0000000009d784: add [rax-0x73], cl; add eax, 0x1a714; cmove rax, rdx; ret; 
0x0000000009d404: add [rax-0x73], cl; add eax, 0x1aa74; cmove rax, rdx; ret; 
0x0000000009d2a4: add [rax-0x73], cl; add eax, 0x1abf4; cmove rax, rdx; ret; 
0x00000000037311: add [rax-0x73], cl; add eax, 0x1ae547; ret; 
0x0000000009d318: add [rax-0x73], cl; add eax, 0x1aed0; cmovne rax, rdx; ret; 
0x0000000018a87f: add [rax-0x73], cl; add eax, 0x2e6666c3; nop [rax+rax]; lea rax, [rdi+0x6]; ret; 
0x000000001276dc: add [rax-0x73], cl; add eax, 0x5da6c; cmove rax, rdx; ret; 
0x0000000012760c: add [rax-0x73], cl; add eax, 0x5db5c; cmove rax, rdx; ret; 
0x0000000012753c: add [rax-0x73], cl; add eax, 0x5dc2c; cmove rax, rdx; ret; 
0x000000001277af: add [rax-0x73], cl; add eax, 0x5de39; cmove rax, rdx; ret; 
0x00000000127735: add [rax-0x73], cl; add eax, 0x62793; cmove rax, rdx; ret; 
0x00000000127665: add [rax-0x73], cl; add eax, 0x62883; cmove rax, rdx; ret; 
0x00000000127595: add [rax-0x73], cl; add eax, 0x62953; cmove rax, rdx; ret; 
0x00000000114121: add [rax-0x73], cl; add eax, 0xd3797; add rsp, 0x18; ret; 
0x00000000113bc9: add [rax-0x73], cl; add eax, 0xd3c9f; add rsp, 0x8; ret; 
0x00000000110b0a: add [rax-0x73], cl; add eax, 0xd6b66; add rsp, 0x8; ret; 
0x0000000009c217: add [rax-0x73], cl; add eax, 0xe1441; test dh, 0x1; je short 0x000000000009c1ef; ret; 
0x0000000009c167: add [rax-0x73], cl; add eax, 0xe64c1; test dh, 0x1; je short 0x000000000009c13f; ret; 
0x0000000009c5f7: add [rax-0x73], cl; add eax, 0xe66a1; test dh, 0x1; je short 0x000000000009c5cf; ret; 
0x0000000009d4b7: add [rax-0x73], cl; add eax, 0xe6ee1; test dh, 0x1; je short 0x000000000009d48f; ret; 
0x0000000009d517: add [rax-0x73], cl; add eax, 0xe7231; test dh, 0x1; je short 0x000000000009d4ef; ret; 
0x0000000009c6c7: add [rax-0x73], cl; add eax, 0xe7371; test dh, 0x1; je short 0x000000000009c69f; ret; 
0x0000000009c297: add [rax-0x73], cl; add eax, 0xe7411; test dh, 0x1; je short 0x000000000009c26f; ret; 
0x0000000009d70c: add [rax-0x73], cl; add eax, 0xe7a6c; cmove rax, rdx; ret; 
0x0000000009d38c: add [rax-0x73], cl; add eax, 0xe7dcc; cmove rax, rdx; ret; 
0x0000000009d22c: add [rax-0x73], cl; add eax, 0xe7f4c; cmove rax, rdx; ret; 
0x0000000009d2ff: add [rax-0x73], cl; add eax, 0xe82f9; cmove rax, rdx; ret; 
0x0000000009d765: add [rax-0x73], cl; add eax, 0xec793; cmove rax, rdx; ret; 
0x0000000009d3e5: add [rax-0x73], cl; add eax, 0xecaf3; cmove rax, rdx; ret; 
0x0000000009d285: add [rax-0x73], cl; add eax, 0xecc73; cmove rax, rdx; ret; 
0x000000000ccfa6: add [rax-0x73], cl; add eax, 0xfffffee1; ret; 
0x000000000ccf96: add [rax-0x73], cl; add eax, 0xfffffef1; add rsp, 0x58; ret; 
0x000000000cce86: add [rax-0x73], cl; add eax, 0xfffffef1; ret; 
0x000000000cce76: add [rax-0x73], cl; add eax, 0xffffff01; add rsp, 0x58; ret; 
0x0000000018a84f: add [rax-0x73], cl; add r8b, r11b; nop [rax+rax]; lea rax, [rdi+0x3]; ret; 
0x0000000018a85f: add [rax-0x73], cl; add r8d, r11d; nop [rax+rax]; lea rax, [rdi+0x4]; ret; 
0x000000000cb65f: add [rax-0x73], cl; clc; ret; 
0x000000000cb66f: add [rax-0x73], cl; cld; ret; 
0x000000000dda36: add [rax-0x73], cl; cmp eax, 0x109a62; syscall; 
0x000000000dd8f6: add [rax-0x73], cl; cmp eax, 0x109ba2; syscall; 
0x000000000dd83e: add [rax-0x73], cl; cmp eax, 0x109c5a; syscall; 
0x000000000dd762: add [rax-0x73], cl; cmp eax, 0x109d2e; syscall; 
0x000000000dd592: add [rax-0x73], cl; cmp eax, 0x109ebe; syscall; 
0x000000000dd3ce: add [rax-0x73], cl; cmp eax, 0x10a03a; syscall; 
0x000000000dd014: add [rax-0x73], cl; cmp eax, 0x10a39c; syscall; 
0x000000000dbd66: add [rax-0x73], cl; cmp eax, 0x10b5c2; syscall; 
0x000000000dbc26: add [rax-0x73], cl; cmp eax, 0x10b702; syscall; 
0x000000000dbb6e: add [rax-0x73], cl; cmp eax, 0x10b7ba; syscall; 
0x000000000db7a2: add [rax-0x73], cl; cmp eax, 0x10bb7e; syscall; 
0x000000000d99e6: add [rax-0x73], cl; cmp eax, 0x10bcd2; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000db5d2: add [rax-0x73], cl; cmp eax, 0x10bd0e; syscall; 
0x000000000d99a0: add [rax-0x73], cl; cmp eax, 0x10bd18; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000db40e: add [rax-0x73], cl; cmp eax, 0x10be8a; syscall; 
0x000000000d97fe: add [rax-0x73], cl; cmp eax, 0x10beba; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000d97cf: add [rax-0x73], cl; cmp eax, 0x10bee9; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000d9706: add [rax-0x73], cl; cmp eax, 0x10bfb2; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000d96dd: add [rax-0x73], cl; cmp eax, 0x10bfdb; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000d920b: add [rax-0x73], cl; cmp eax, 0x10c4ad; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000dab16: add [rax-0x73], cl; cmp eax, 0x10c72a; syscall; 
0x000000000ceb42: add [rax-0x73], cl; cmp eax, 0x1185f6; syscall; 
0x000000000ce94e: add [rax-0x73], cl; cmp eax, 0x1187ea; syscall; 
0x000000000c6682: add [rax-0x73], cl; cmp eax, 0x11efd6; syscall; 
0x000000000c635e: add [rax-0x73], cl; cmp eax, 0x11f35a; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000c617b: add [rax-0x73], cl; cmp eax, 0x11f53d; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000998a2: add [rax-0x73], cl; cmp eax, 0x14a2f6; syscall; 
0x0000000009b232: add [rax-0x73], cl; cmp eax, 0x14bcce; syscall; 
0x0000000009afae: add [rax-0x73], cl; cmp eax, 0x14bf52; syscall; 
0x0000000009adce: add [rax-0x73], cl; cmp eax, 0x14c132; syscall; 
0x0000000009abe2: add [rax-0x73], cl; cmp eax, 0x14c31e; syscall; 
0x0000000009ab72: add [rax-0x73], cl; cmp eax, 0x14c38e; syscall; 
0x00000000096ef2: add [rax-0x73], cl; cmp eax, 0x14cca6; syscall; 
0x00000000096e92: add [rax-0x73], cl; cmp eax, 0x14cd06; syscall; 
0x00000000096ac2: add [rax-0x73], cl; cmp eax, 0x14d0d6; syscall; 
0x00000000096862: add [rax-0x73], cl; cmp eax, 0x14d336; syscall; 
0x0000000009621a: add [rax-0x73], cl; cmp eax, 0x14d97e; syscall; 
0x000000000961e2: add [rax-0x73], cl; cmp eax, 0x14d9b6; syscall; 
0x00000000097ec1: add [rax-0x73], cl; cmp eax, 0x14efb7; syscall; 
0x00000000097426: add [rax-0x73], cl; cmp eax, 0x14fa42; syscall; 
0x000000000930fd: add [rax-0x73], cl; cmp eax, 0x153d7b; syscall; 
0x00000000093081: add [rax-0x73], cl; cmp eax, 0x153de7; syscall; 
0x00000000092dda: add [rax-0x73], cl; cmp eax, 0x15409e; syscall; 
0x00000000092b2e: add [rax-0x73], cl; cmp eax, 0x15434a; syscall; 
0x00000000092063: add [rax-0x73], cl; cmp eax, 0x154795; syscall; 
0x00000000091ebe: add [rax-0x73], cl; cmp eax, 0x15493a; syscall; 
0x00000000091d32: add [rax-0x73], cl; cmp eax, 0x154ac6; syscall; 
0x0000000008ff35: add [rax-0x73], cl; cmp eax, 0x156733; syscall; 
0x0000000008f9f4: add [rax-0x73], cl; cmp eax, 0x156c74; syscall; 
0x0000000008f664: add [rax-0x73], cl; cmp eax, 0x157004; syscall; 
0x0000000008f304: add [rax-0x73], cl; cmp eax, 0x157364; syscall; 
0x0000000008dbe0: add [rax-0x73], cl; cmp eax, 0x158a88; syscall; 
0x0000000008d8f0: add [rax-0x73], cl; cmp eax, 0x158d78; syscall; 
0x0000000008d5ec: add [rax-0x73], cl; cmp eax, 0x15907c; syscall; 
0x00000000080cd1: add [rax-0x73], cl; cmp eax, 0x165957; syscall; 
0x000000000808d5: add [rax-0x73], cl; cmp eax, 0x165d53; syscall; 
0x00000000080829: add [rax-0x73], cl; cmp eax, 0x165dff; syscall; 
0x0000000007e982: add [rax-0x73], cl; cmp eax, 0x166cd6; syscall; 
0x00000000028d8c: add [rax-0x73], cl; cmp eax, 0x184f6e; mov rsi, [rax]; xor eax, eax; call qword ptr [rdx+0x260]; 
0x0000000005f1a6: add [rax-0x73], cl; cmp eax, 0x18745a; syscall; 
0x0000000005ef22: add [rax-0x73], cl; cmp eax, 0x1876da; syscall; 
0x0000000005cd9e: add [rax-0x73], cl; cmp eax, 0x18984a; syscall; 
0x0000000005cc5e: add [rax-0x73], cl; cmp eax, 0x18998a; syscall; 
0x00000000052e86: add [rax-0x73], cl; cmp eax, 0x193742; syscall; 
0x00000000052cc2: add [rax-0x73], cl; cmp eax, 0x193906; syscall; 
0x000000000527b2: add [rax-0x73], cl; cmp eax, 0x193e16; syscall; 
0x000000000503a6: add [rax-0x73], cl; cmp eax, 0x195ff2; syscall; 
0x00000000050222: add [rax-0x73], cl; cmp eax, 0x196176; syscall; 
0x000000000501c2: add [rax-0x73], cl; cmp eax, 0x1961d6; syscall; 
0x00000000045a5e: add [rax-0x73], cl; cmp eax, 0x1a0902; syscall; 
0x0000000004599e: add [rax-0x73], cl; cmp eax, 0x1a09c2; syscall; 
0x000000000458d6: add [rax-0x73], cl; cmp eax, 0x1a0a8a; syscall; 
0x000000000457fe: add [rax-0x73], cl; cmp eax, 0x1a0b62; syscall; 
0x000000000448f6: add [rax-0x73], cl; cmp eax, 0x1a11ea; syscall; 
0x00000000044831: add [rax-0x73], cl; cmp eax, 0x1a12af; syscall; 
0x0000000004468e: add [rax-0x73], cl; cmp eax, 0x1a1452; syscall; 
0x000000000445b5: add [rax-0x73], cl; cmp eax, 0x1a152b; syscall; 
0x0000000003d0bd: add [rax-0x73], cl; cmp eax, 0x1a87fb; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003d05c: add [rax-0x73], cl; cmp eax, 0x1a885c; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003d01f: add [rax-0x73], cl; cmp eax, 0x1a89e1; syscall; 
0x0000000003b694: add [rax-0x73], cl; cmp eax, 0x1aa334; syscall; 
0x0000000003b188: add [rax-0x73], cl; cmp eax, 0x1aa7f0; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003b11f: add [rax-0x73], cl; cmp eax, 0x1aa859; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003aff0: add [rax-0x73], cl; cmp eax, 0x1aa988; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003af90: add [rax-0x73], cl; cmp eax, 0x1aa9e8; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003aeae: add [rax-0x73], cl; cmp eax, 0x1aaa8a; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003ae57: add [rax-0x73], cl; cmp eax, 0x1aaae1; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003abd1: add [rax-0x73], cl; cmp eax, 0x1aaae7; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003aad3: add [rax-0x73], cl; cmp eax, 0x1aabe5; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003abaa: add [rax-0x73], cl; cmp eax, 0x1aad0e; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003a964: add [rax-0x73], cl; cmp eax, 0x1aad54; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003aaac: add [rax-0x73], cl; cmp eax, 0x1aae0c; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003a939: add [rax-0x73], cl; cmp eax, 0x1aaf7f; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003a596: add [rax-0x73], cl; cmp eax, 0x1ab122; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003a666: add [rax-0x73], cl; cmp eax, 0x1ab2d2; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003a5bd: add [rax-0x73], cl; cmp eax, 0x1ab2fb; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003a621: add [rax-0x73], cl; cmp eax, 0x1ab317; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003a4e3: add [rax-0x73], cl; cmp eax, 0x1ab435; syscall; 
0x0000000003a4c3: add [rax-0x73], cl; cmp eax, 0x1ab455; syscall; 
0x0000000003a359: add [rax-0x73], cl; cmp eax, 0x1ab5bf; syscall; 
0x00000000039047: add [rax-0x73], cl; cmp eax, 0x1ac871; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000038583: add [rax-0x73], cl; cmp eax, 0x1ad135; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000384a8: add [rax-0x73], cl; cmp eax, 0x1ad210; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000038433: add [rax-0x73], cl; cmp eax, 0x1ad285; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000038397: add [rax-0x73], cl; cmp eax, 0x1ad321; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000038119: add [rax-0x73], cl; cmp eax, 0x1ad59f; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000037d90: add [rax-0x73], cl; cmp eax, 0x1ad928; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000037b91: add [rax-0x73], cl; cmp eax, 0x1adb27; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035ab6: add [rax-0x73], cl; cmp eax, 0x1afc02; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000356ba: add [rax-0x73], cl; cmp eax, 0x1afffe; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035560: add [rax-0x73], cl; cmp eax, 0x1b0158; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035480: add [rax-0x73], cl; cmp eax, 0x1b0238; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000353ff: add [rax-0x73], cl; cmp eax, 0x1b02b9; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000351e1: add [rax-0x73], cl; cmp eax, 0x1b04d7; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000351a5: add [rax-0x73], cl; cmp eax, 0x1b0513; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000002ac66: add [rax-0x73], cl; cmp eax, 0x1ba9f2; syscall; 
0x0000000002aafa: add [rax-0x73], cl; cmp eax, 0x1bab5e; syscall; 
0x0000000002aa02: add [rax-0x73], cl; cmp eax, 0x1bac56; syscall; 
0x00000000026850: add [rax-0x73], cl; cmp eax, 0x1bf258; syscall; 
0x0000000019197e: add [rax-0x73], cl; cmp eax, 0x54162; syscall; 
0x00000000191b3e: add [rax-0x73], cl; cmp eax, 0x54cba; syscall; 
0x00000000191e5e: add [rax-0x73], cl; cmp eax, 0x567f2; syscall; 
0x0000000015805e: add [rax-0x73], cl; cmp eax, 0x9107e; syscall; 
0x00000000156d66: add [rax-0x73], cl; cmp eax, 0x92376; syscall; 
0x00000000156c86: add [rax-0x73], cl; cmp eax, 0x92456; syscall; 
0x00000000156a9e: add [rax-0x73], cl; cmp eax, 0x9263e; syscall; 
0x00000000156a0e: add [rax-0x73], cl; cmp eax, 0x926ce; syscall; 
0x0000000015696e: add [rax-0x73], cl; cmp eax, 0x9276e; syscall; 
0x000000001568be: add [rax-0x73], cl; cmp eax, 0x9281e; syscall; 
0x000000001564ee: add [rax-0x73], cl; cmp eax, 0x92bee; syscall; 
0x0000000014c2ee: add [rax-0x73], cl; cmp eax, 0x9cbd2; syscall; 
0x0000000014c18e: add [rax-0x73], cl; cmp eax, 0x9cd32; syscall; 
0x0000000014bf82: add [rax-0x73], cl; cmp eax, 0x9cf3e; syscall; 
0x0000000014bde2: add [rax-0x73], cl; cmp eax, 0x9d0de; syscall; 
0x0000000014bc4e: add [rax-0x73], cl; cmp eax, 0x9d272; syscall; 
0x0000000014bb0e: add [rax-0x73], cl; cmp eax, 0x9d3b2; syscall; 
0x0000000014b9ae: add [rax-0x73], cl; cmp eax, 0x9d512; syscall; 
0x0000000014b89e: add [rax-0x73], cl; cmp eax, 0x9d622; syscall; 
0x0000000014840e: add [rax-0x73], cl; cmp eax, 0xa0a96; syscall; 
0x0000000013f4da: add [rax-0x73], cl; cmp eax, 0xa977e; syscall; 
0x0000000013f1aa: add [rax-0x73], cl; cmp eax, 0xa9aae; syscall; 
0x0000000013ee2a: add [rax-0x73], cl; cmp eax, 0xa9e2e; syscall; 
0x0000000013ec2c: add [rax-0x73], cl; cmp eax, 0xaa02c; syscall; 
0x0000000013eaa2: add [rax-0x73], cl; cmp eax, 0xaa1b6; syscall; 
0x0000000013e865: add [rax-0x73], cl; cmp eax, 0xaa3f3; syscall; 
0x0000000013de1e: add [rax-0x73], cl; cmp eax, 0xaad72; syscall; 
0x0000000013dc9d: add [rax-0x73], cl; cmp eax, 0xaaef3; syscall; 
0x0000000013dc63: add [rax-0x73], cl; cmp eax, 0xaaf2d; syscall; 
0x0000000013db56: add [rax-0x73], cl; cmp eax, 0xab03a; syscall; 
0x0000000013d316: add [rax-0x73], cl; cmp eax, 0xab87a; syscall; 
0x0000000013d24e: add [rax-0x73], cl; cmp eax, 0xab942; syscall; 
0x0000000013d132: add [rax-0x73], cl; cmp eax, 0xaba5e; syscall; 
0x0000000013bd9f: add [rax-0x73], cl; cmp eax, 0xacba1; syscall; 
0x0000000013851e: add [rax-0x73], cl; cmp eax, 0xb0132; syscall; 
0x00000000138242: add [rax-0x73], cl; cmp eax, 0xb040e; syscall; 
0x00000000133f62: add [rax-0x73], cl; cmp eax, 0xb46da; syscall; 
0x000000001339e2: add [rax-0x73], cl; cmp eax, 0xb4c3e; syscall; 
0x0000000013381e: add [rax-0x73], cl; cmp eax, 0xb4dba; syscall; 
0x00000000133756: add [rax-0x73], cl; cmp eax, 0xb4e22; syscall; 
0x00000000133616: add [rax-0x73], cl; cmp eax, 0xb4f62; syscall; 
0x0000000013355e: add [rax-0x73], cl; cmp eax, 0xb501a; syscall; 
0x00000000132e6e: add [rax-0x73], cl; cmp eax, 0xb5702; syscall; 
0x00000000132b3e: add [rax-0x73], cl; cmp eax, 0xb5a32; syscall; 
0x00000000132982: add [rax-0x73], cl; cmp eax, 0xb5bee; syscall; 
0x00000000132468: add [rax-0x73], cl; cmp eax, 0xb6064; syscall; 
0x0000000012eb76: add [rax-0x73], cl; cmp eax, 0xb983a; syscall; 
0x0000000012ea36: add [rax-0x73], cl; cmp eax, 0xb997a; syscall; 
0x0000000012e97e: add [rax-0x73], cl; cmp eax, 0xb9a32; syscall; 
0x0000000012e892: add [rax-0x73], cl; cmp eax, 0xb9b16; syscall; 
0x0000000012e6c2: add [rax-0x73], cl; cmp eax, 0xb9cb6; syscall; 
0x0000000012e4fe: add [rax-0x73], cl; cmp eax, 0xb9e52; syscall; 
0x0000000012e436: add [rax-0x73], cl; cmp eax, 0xb9eca; syscall; 
0x0000000012e2f6: add [rax-0x73], cl; cmp eax, 0xba00a; syscall; 
0x0000000012e23e: add [rax-0x73], cl; cmp eax, 0xba0c2; syscall; 
0x0000000012e15e: add [rax-0x73], cl; cmp eax, 0xba19a; syscall; 
0x0000000012dc92: add [rax-0x73], cl; cmp eax, 0xba5ee; syscall; 
0x0000000012d6c2: add [rax-0x73], cl; cmp eax, 0xbab5e; syscall; 
0x0000000012d1a2: add [rax-0x73], cl; cmp eax, 0xbb036; syscall; 
0x0000000012cfd6: add [rax-0x73], cl; cmp eax, 0xbb1c2; syscall; 
0x0000000012ce96: add [rax-0x73], cl; cmp eax, 0xbb302; syscall; 
0x0000000012cdde: add [rax-0x73], cl; cmp eax, 0xbb3ba; syscall; 
0x0000000012ccfe: add [rax-0x73], cl; cmp eax, 0xbb492; syscall; 
0x0000000012c8e2: add [rax-0x73], cl; cmp eax, 0xbb866; syscall; 
0x0000000012c2c6: add [rax-0x73], cl; cmp eax, 0xbbe22; syscall; 
0x0000000012c16e: add [rax-0x73], cl; cmp eax, 0xbbf7a; syscall; 
0x0000000012c0ae: add [rax-0x73], cl; cmp eax, 0xbc03a; syscall; 
0x0000000012bfc6: add [rax-0x73], cl; cmp eax, 0xbc11a; syscall; 
0x0000000012bee2: add [rax-0x73], cl; cmp eax, 0xbc1c6; syscall; 
0x0000000012b882: add [rax-0x73], cl; cmp eax, 0xbc7e6; syscall; 
0x0000000012b676: add [rax-0x73], cl; cmp eax, 0xbc9aa; syscall; 
0x0000000012b51e: add [rax-0x73], cl; cmp eax, 0xbcb02; syscall; 
0x0000000012b45e: add [rax-0x73], cl; cmp eax, 0xbcbc2; syscall; 
0x0000000012b376: add [rax-0x73], cl; cmp eax, 0xbcca2; syscall; 
0x0000000012a762: add [rax-0x73], cl; cmp eax, 0xbd83e; syscall; 
0x0000000012a4f2: add [rax-0x73], cl; cmp eax, 0xbda6e; syscall; 
0x00000000129d72: add [rax-0x73], cl; cmp eax, 0xbe18e; syscall; 
0x00000000120316: add [rax-0x73], cl; cmp eax, 0xc7b32; syscall; 
0x000000001201d6: add [rax-0x73], cl; cmp eax, 0xc7c72; syscall; 
0x0000000012011e: add [rax-0x73], cl; cmp eax, 0xc7d2a; syscall; 
0x0000000011fd44: add [rax-0x73], cl; cmp eax, 0xc80fc; syscall; 
0x0000000011fb1a: add [rax-0x73], cl; cmp eax, 0xc82ee; syscall; 
0x0000000011f952: add [rax-0x73], cl; cmp eax, 0xc846e; syscall; 
0x0000000011f78e: add [rax-0x73], cl; cmp eax, 0xc85ea; syscall; 
0x0000000011f6be: add [rax-0x73], cl; cmp eax, 0xc8666; syscall; 
0x0000000011f5ee: add [rax-0x73], cl; cmp eax, 0xc8736; syscall; 
0x0000000011f552: add [rax-0x73], cl; cmp eax, 0xc87d2; syscall; 
0x0000000011eab6: add [rax-0x73], cl; cmp eax, 0xc923a; syscall; 
0x0000000011e976: add [rax-0x73], cl; cmp eax, 0xc937a; syscall; 
0x0000000011e8be: add [rax-0x73], cl; cmp eax, 0xc9432; syscall; 
0x0000000011e2c4: add [rax-0x73], cl; cmp eax, 0xc9a24; syscall; 
0x0000000011e0c2: add [rax-0x73], cl; cmp eax, 0xc9bce; syscall; 
0x0000000011dee2: add [rax-0x73], cl; cmp eax, 0xc9d46; syscall; 
0x0000000011dd1e: add [rax-0x73], cl; cmp eax, 0xc9ea2; syscall; 
0x0000000011361e: add [rax-0x73], cl; cmp eax, 0xd422a; syscall; 
0x00000000113502: add [rax-0x73], cl; cmp eax, 0xd4346; syscall; 
0x000000001130a2: add [rax-0x73], cl; cmp eax, 0xd47a6; syscall; 
0x00000000112b71: add [rax-0x73], cl; cmp eax, 0xd4cd7; syscall; 
0x00000000101562: add [rax-0x73], cl; cmp eax, 0xe6056; syscall; 
0x0000000007b328: add [rax-0x73], cl; cmp eax, 0xfffff4f0; movsxd rcx, [rsi+rcx*4]; add rcx, rdi; jmp rcx; 
0x00000000052427: add [rax-0x73], cl; dec dword ptr [rax+0x39]; ret; 
0x000000000cb64f: add [rax-0x73], cl; hlt; ret; 
0x00000000085a76: add [rax-0x73], cl; je short 0x0000000000085a9f; xor [rcx+rcx*4-0x1], cl; call qword ptr [r14+0x90]; 
0x0000000008ae40: add [rax-0x73], cl; je short 0x000000000008ae69; adc [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x90]; 
0x0000000008b4aa: add [rax-0x73], cl; je short 0x000000000008b4d3; and [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x90]; 
0x0000000014ca1b: add [rax-0x73], cl; jne short 0x000000000014ca28; mov rdi, r15; call qword ptr [rdx+0x10]; 
0x000000000cc8f8: add [rax-0x73], cl; mov esp, 0xd024; add [rcx+rcx*4-0x12], cl; call r12; 
0x0000000018a8df: add [rax-0x73], cl; or al, 0xc3; nop [rax+rax]; lea rax, [rdi+0xd]; ret; 
0x0000000007d7d5: add [rax-0x73], cl; or eax, 0x12b037; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x00000000061650: add [rax-0x73], cl; or eax, 0x144b28; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x0000000008aae4: add [rax-0x73], cl; or eax, 0x15a3d4; mov [rdx+0xe0], rcx; pop rbx; ret; 
0x0000000018dd4b: add [rax-0x73], cl; or eax, 0x2a91d; movsxd rbx, [rcx+rbx*4]; add rcx, rbx; notrack jmp rcx; 
0x0000000018a8ef: add [rax-0x73], cl; or eax, 0x2e6666c3; nop [rax+rax]; lea rax, [rdi+0xe]; ret; 
0x000000000f79ce: add [rax-0x73], cl; or eax, 0xb38ce; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x0000000007b488: add [rax-0x73], cl; or eax, 0xfffff390; mov dword ptr [rsp+0x38], 0x1; mov rbx, rsi; jmp rcx; 
0x0000000018a89f: add [rax-0x73], cl; or r11b, r8b; nop [rax+rax]; lea rax, [rdi+0x9]; ret; 
0x0000000018a8af: add [rax-0x73], cl; or r11d, r8d; nop [rax+rax]; lea rax, [rdi+0xa]; ret; 
0x0000000018a8bf: add [rax-0x73], cl; or r8b, r11b; nop [rax+rax]; lea rax, [rdi+0xb]; ret; 
0x0000000018a8cf: add [rax-0x73], cl; or r8d, r11d; nop [rax+rax]; lea rax, [rdi+0xc]; ret; 
0x000000001150c6: add [rax-0x73], cl; push rbx; or [rax-0x7d], cl; ret; 
0x0000000006a986: add [rax-0x73], cl; xor eax, 0x13c42e; movsxd rax, [rsi+rbx*4]; add rax, rsi; notrack jmp rax; 
0x000000000f59f8: add [rax-0x73], cl; xor eax, 0xb55b4; movsxd rax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x000000000b8451: add [rax-0x73], cl; xor eax, 0xf1003; movsxd rax, [rsi+rdi*4]; add rax, rsi; notrack jmp rax; 
0x00000000075793: add [rax-0x73], cl; xor eax, 0xfffff64d; mov dword ptr [rsp+0x48], 0x1; mov rbx, rdi; jmp rsi; 
0x000000000b9178: add [rax-0x73], ecx; adc eax, 0xcc900; cmovne rax, rdx; ret; 
0x000000000b8cb8: add [rax-0x73], ecx; adc eax, 0xcd090; cmovne rax, rdx; ret; 
0x000000000b8e68: add [rax-0x73], ecx; adc eax, 0xcd330; cmovne rax, rdx; ret; 
0x000000000b8f58: add [rax-0x73], ecx; adc eax, 0xcd990; cmovne rax, rdx; ret; 
0x000000000b8c78: add [rax-0x73], ecx; adc eax, 0xcda40; cmovne rax, rdx; ret; 
0x000000000b8dc8: add [rax-0x73], ecx; adc eax, 0xcdd10; cmovne rax, rdx; ret; 
0x000000000a4f08: add [rax-0x73], ecx; adc eax, 0xd94e0; cmovne rax, rdx; ret; 
0x0000000009ea18: add [rax-0x73], ecx; adc eax, 0xdf880; cmovne rax, rdx; ret; 
0x0000000009d168: add [rax-0x73], ecx; adc eax, 0xe0e60; cmovne rax, rdx; ret; 
0x0000000009ea58: add [rax-0x73], ecx; adc eax, 0xe3350; cmovne rax, rdx; ret; 
0x0000000009c708: add [rax-0x73], ecx; adc eax, 0xe5890; cmovne rax, rdx; ret; 
0x0000000009c558: add [rax-0x73], ecx; adc eax, 0xe5c10; cmovne rax, rdx; ret; 
0x0000000009c598: add [rax-0x73], ecx; adc eax, 0xe5d70; cmovne rax, rdx; ret; 
0x0000000017203a: add [rax-0x73], ecx; add [rdi], rcx; test [rbx+0x3], ecx; add [rax], al; ret; 
0x000000000599cd: add [rax-0x73], ecx; add cl, [rcx+0x39]; ret far; 
0x000000000b39b5: add [rax-0x73], ecx; jg short 0x00000000000b39bb; jne 0x00000000000b4270; ret; 
0x000000000b5098: add [rax-0x73], ecx; jg short 0x00000000000b509e; jne 0x00000000000b5ac0; ret; 
0x00000000183d6b: add [rax-0x73], ecx; jg short 0x0000000000183d71; jne 0x00000000001841a0; vzeroupper; ret; 
0x00000000184a83: add [rax-0x73], ecx; jg short 0x0000000000184a89; jne 0x0000000000184ed0; vzeroupper; ret; 
0x000000000453dd: add [rax-0x73], ecx; mov ebp, 0x988; call qword ptr [rbp+0xf90]; 
0x0000000012305f: add [rax-0x75], cl; adc [rax-0x7b], cl; ror byte ptr [rdi], 0x84; ret far; 
0x00000000038d51: add [rax-0x75], cl; add [rax-0x75], cl; mov rax, [rax+rdi*4+0x200]; ret; 
0x00000000038ce1: add [rax-0x75], cl; add [rax-0x75], cl; mov rax, [rax+rdx*4]; ret; 
0x00000000038f41: add [rax-0x75], cl; add [rax-0x75], cl; movzx eax, word ptr [rax+rdi*2+0x100]; and eax, esi; ret; 
0x00000000038d21: add [rax-0x75], cl; add [rax-0x75], cl; pop rax; mov eax, [rax+rdi*4+0x200]; ret; 
0x00000000038cb1: add [rax-0x75], cl; add [rax-0x75], cl; pop rax; mov eax, [rax+rdx*4]; ret; 
0x000000001701bf: add [rax-0x75], cl; add [rax-0x77], ecx; add cl, [rax-0x77]; clc; ret; 
0x000000001426cf: add [rax-0x75], cl; add [rax-0x7b], cl; shl byte ptr [rax+rax*2+0x41], 0x83; call qword ptr [rbx]; 
0x00000000045579: add [rax-0x75], cl; add [rbx-0x75], bl; pop rax; ret; 
0x000000001903eb: add [rax-0x75], cl; add al, 0x24; add rsp, 0x38; ret; 
0x00000000083d98: add [rax-0x75], cl; add al, 0x24; mov esi, r12d; mov rdi, r14; call qword ptr [rax+0x18]; 
0x0000000013338d: add [rax-0x75], cl; add al, 0x24; mov rdi, r12; call rax; 
0x000000000358cd: add [rax-0x75], cl; add al, 0xd8; test rax, rax; je short 0x00000000000358d9; call rax; 
0x0000000007cd37: add [rax-0x75], cl; add al, 0xf8; ret; 
0x00000000146f76: add [rax-0x75], cl; add al, [rbx-0x37f0fe18]; mov [r8+0xa8], eax; mov eax, 0x1; ret; 
0x000000000d9f98: add [rax-0x75], cl; add eax, 0x108ea8; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000d8f97: add [rax-0x75], cl; add eax, 0x109ea9; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000009b67f: add [rax-0x75], cl; add eax, 0x1478a9; call qword ptr [rax]; 
0x00000000094d71: add [rax-0x75], cl; add eax, 0x14e017; mov [rsp+0x8], r8; xor edi, edi; call qword ptr [rax]; 
0x00000000094c4f: add [rax-0x75], cl; add eax, 0x14e139; xor edi, edi; call qword ptr [rax]; 
0x00000000094c09: add [rax-0x75], cl; add eax, 0x14e17f; call qword ptr [rax]; 
0x00000000089bcf: add [rax-0x75], cl; add eax, 0x159271; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000877f6: add [rax-0x75], cl; add eax, 0x15b649; mov dword ptr fs:[rax], 0x9; mov eax, 0xffffffff; ret; 
0x00000000081087: add [rax-0x75], cl; add eax, 0x161db9; mov dword ptr fs:[rax], 0x16; mov rax, 0xffffffffffffffff; ret; 
0x000000000464df: add [rax-0x75], cl; add eax, 0x19c961; mov dword ptr fs:[rax], 0x5; mov eax, 0xffffffff; ret; 
0x00000000045e07: add [rax-0x75], cl; add eax, 0x19d039; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000042597: add [rax-0x75], cl; add eax, 0x1a08a9; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000042557: add [rax-0x75], cl; add eax, 0x1a08e9; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000042517: add [rax-0x75], cl; add eax, 0x1a0929; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000423f7: add [rax-0x75], cl; add eax, 0x1a0a49; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000423af: add [rax-0x75], cl; add eax, 0x1a0a91; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000004235f: add [rax-0x75], cl; add eax, 0x1a0ae1; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000041b5f: add [rax-0x75], cl; add eax, 0x1a12e1; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000003fb1f: add [rax-0x75], cl; add eax, 0x1a3321; mov dword ptr fs:[rax], 0x2a; mov rax, r10; ret; 
0x000000000387cf: add [rax-0x75], cl; add eax, 0x1aa5d9; mov [rax], rdx; ret; 
0x00000000029317: add [rax-0x75], cl; add eax, 0x1b9b29; mov dword ptr fs:[rax], 0x9; mov eax, 0xffffffff; ret; 
0x00000000159a37: add [rax-0x75], cl; add eax, 0x8f889; call qword ptr [rax+0x8]; 
0x0000000015993f: add [rax-0x75], cl; add eax, 0x8f981; call qword ptr [rax]; 
0x0000000014d16f: add [rax-0x75], cl; add eax, 0x95c11; pop rbx; ret; 
0x0000000014d09f: add [rax-0x75], cl; add eax, 0x95d81; pop rbx; ret; 
0x0000000014d23f: add [rax-0x75], cl; add eax, 0x95d99; pop rbx; ret; 
0x0000000014cfcf: add [rax-0x75], cl; add eax, 0x95e11; pop rbx; ret; 
0x0000000014123f: add [rax-0x75], cl; add eax, 0xa1c01; mov dword ptr fs:[rax], 0x16; mov eax, 0x16; ret; 
0x000000001290ef: add [rax-0x75], cl; add eax, 0xb9d51; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000001199df: add [rax-0x75], cl; add eax, 0xc9461; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000011999f: add [rax-0x75], cl; add eax, 0xc94a1; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000011c0bf: add [rax-0x75], cl; add eax, 0xcb9d1; mov rax, [rax+0x18]; add word ptr [rax], 0x1; ret; 
0x00000000116557: add [rax-0x75], cl; add eax, 0xcc8e9; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000113837: add [rax-0x75], cl; add eax, 0xcf609; mov dword ptr fs:[rax], 0x16; mov rax, 0xffffffffffffffff; ret; 
0x000000001106b7: add [rax-0x75], cl; add eax, 0xd2789; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010f267: add [rax-0x75], cl; add eax, 0xd3bd9; mov dword ptr fs:[rax], 0xc; mov eax, 0xffffffff; ret; 
0x0000000010de36: add [rax-0x75], cl; add eax, 0xd5009; mov dword ptr fs:[rax], 0x9; mov eax, 0xffffffff; ret; 
0x0000000010d5f7: add [rax-0x75], cl; add eax, 0xd5849; mov dword ptr fs:[rax], 0x16; xor eax, eax; ret; 
0x00000000108577: add [rax-0x75], cl; add eax, 0xda8c9; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000108517: add [rax-0x75], cl; add eax, 0xda929; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000001084b7: add [rax-0x75], cl; add eax, 0xda989; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010812f: add [rax-0x75], cl; add eax, 0xdad11; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000001080cf: add [rax-0x75], cl; add eax, 0xdad71; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010806f: add [rax-0x75], cl; add eax, 0xdadd1; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000085fa6: add [rax-0x75], cl; and [r11+rcx*4+0x6d], r9b; sbb [rax-0x77], cl; ret far; 
0x000000001416a3: add [rax-0x75], cl; and [r8-0x77], cl; out dx, eax; lea r15, [rsp+0x50]; call qword ptr [rax+0x20]; 
0x000000001416bc: add [rax-0x75], cl; and [r9], sil; test byte ptr [rax-0x77], 0xef; mov dword ptr [rbx+0x18], 0x1; call qword ptr [rax+0x28]; 
0x0000000015a4f8: add [rax-0x75], cl; and al, 0x10; mov rdi, [rsp+0x18]; call rax; 
0x0000000015a49b: add [rax-0x75], cl; and al, 0x10; mov rdi, [rsp+0x18]; call rcx; 
0x00000000142bbe: add [rax-0x75], cl; and al, 0x30; call rax; 
0x00000000046423: add [rax-0x75], cl; and al, 0x8; add rsp, 0x28; ret; 
0x0000000008d20b: add [rax-0x75], cl; and al, 0x8; mov esi, 0xffffffff; mov rdi, r8; call qword ptr [rax+0x18]; 
0x000000001433f7: add [rax-0x75], cl; and al, 0x8; mov esi, r14d; mov rdi, r13; call qword ptr [rax+0x30]; 
0x00000000141408: add [rax-0x75], cl; and al, 0x8; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x0000000013265e: add [rax-0x75], cl; and al, 0x8; mov rdi, rbx; call rax; 
0x00000000147885: add [rax-0x75], cl; cmp [rax-0x7b], cl; shl byte ptr [rbp+rax+0x48], 0x89; out dx, eax; call rax; 
0x00000000146e3f: add [rax-0x75], cl; cmp [rax-0x7b], cl; shl byte ptr [rcx+rcx+0x48], 0x8d; mov ebp, 0xc8; call rax; 
0x0000000015976e: add [rax-0x75], cl; cmp al, 0x24; mov rax, [rax+0x268]; jmp rax; 
0x000000000c6c15: add [rax-0x75], cl; cmp cl, ch; shr byte ptr [rdi], cl; cli; jmp qword ptr [rsi-0x70]; 
0x0000000014b707: add [rax-0x75], cl; cmp ebp, ebx; ret; 
0x00000000107d4f: add [rax-0x75], cl; cmp ecx, [rax-0x7d]; ret; 
0x000000000976d7: add [rax-0x75], cl; je short 0x0000000000097700; sbb [rbx+0x5d], bl; pop r12; jmp rax; 
0x00000000097e1e: add [rax-0x75], cl; je short 0x0000000000097e48; mov rdi, rbp; call rax; 
0x00000000098ddf: add [rax-0x75], cl; je short 0x0000000000098e08; sub [rcx+rcx*4-0x19], cl; call rdx; 
0x0000000013fd92: add [rax-0x75], cl; je short 0x000000000013fdbb; mov rdi, [rsp+0x38]; call qword ptr [rsp+0x68]; 
0x000000001470d9: add [rax-0x75], cl; je short 0x0000000000147102; sbb [rcx+rcx*4-0x19], cl; call qword ptr [rax+0x8]; 
0x0000000009b6db: add [rax-0x75], cl; jg short 0x000000000009b728; mov rsi, rbp; call rax; 
0x00000000132fdf: add [rax-0x75], cl; jl short 0x0000000000133008; adc [rcx+rcx*4-0x1a], cl; call qword ptr [rsp+0x58]; 
0x0000000009b8ff: add [rax-0x75], cl; jnp short 0x000000000009b94c; call rax; 
0x00000000149e38: add [rax-0x75], cl; jo short 0x0000000000149e86; mov esi, [rsp+0x18]; mov rdi, r12; call qword ptr [rax+0x8]; 
0x000000001077b4: add [rax-0x75], cl; mov ebx, 0x80; call qword ptr [rax+0x88]; 
0x00000000076be7: add [rax-0x75], cl; mov esp, 0x8024; add [rax-0x7d], cl; ret; 
0x00000000038d54: add [rax-0x75], cl; mov rax, [rax+rdi*4+0x200]; ret; 
0x00000000038ce4: add [rax-0x75], cl; mov rax, [rax+rdx*4]; ret; 
0x00000000161cff: add [rax-0x75], cl; mov rdx, [rsi-0x8]; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000161eff: add [rax-0x75], cl; mov rdx, [rsi-0x8]; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000038f44: add [rax-0x75], cl; movzx eax, word ptr [rax+rdi*2+0x100]; and eax, esi; ret; 
0x00000000107ac2: add [rax-0x75], cl; nop; mov al, 0x0; add [rax], al; call qword ptr [rax+0x88]; 
0x00000000143030: add [rax-0x75], cl; or [r14+0x20], r15b; mov rdi, rbp; call qword ptr [rax+0x30]; 
0x0000000014876f: add [rax-0x75], cl; or [r8-0x73], r9b; jae short 0x0000000000148790; mov rdi, rbp; call qword ptr [rax+0x48]; 
0x0000000014da3a: add [rax-0x75], cl; or [r8-0x77], r9b; fimul st, word ptr [rax-0x77]; out dx, eax; call qword ptr [rax]; 
0x0000000014db7f: add [rax-0x75], cl; or [r8-0x77], r9b; out dx, eax; call qword ptr [rax+0x28]; 
0x0000000014da1f: add [rax-0x75], cl; or [r8-0x77], r9b; out dx, eax; call qword ptr [rax+0x8]; 
0x00000000143ddf: add [rax-0x75], cl; or [r9-0x77], r9b; in al, 0x48; lea esi, [rsp+0x8]; call qword ptr [rax]; 
0x00000000107ea7: add [rax-0x75], cl; or byte ptr [rax+0x2], 0x0; add [rax-0x7b], cl; shl byte ptr [rsp+rsi+0x31], 0xd2; call rax; 
0x00000000038d24: add [rax-0x75], cl; pop rax; mov eax, [rax+rdi*4+0x200]; ret; 
0x00000000038cb4: add [rax-0x75], cl; pop rax; mov eax, [rax+rdx*4]; ret; 
0x000000001170b7: add [rax-0x75], cl; pop rax; ret; 
0x0000000007bf8e: add [rax-0x75], cl; pop rsp; and al, 0x68; jmp rcx; 
0x00000000039599: add [rax-0x75], cl; pop rsp; ret; 
0x0000000011d9cf: add [rax-0x75], cl; push 0xffffffffb70fff89; add al, 0x78; and eax, 0x1000; ret; 
0x0000000011d946: add [rax-0x75], cl; push 0xffffffffb70fff89; add al, 0x78; and eax, 0x100; ret; 
0x0000000011d53f: add [rax-0x75], cl; push 0xffffffffb70fff89; add al, 0x78; and eax, 0x1; ret; 
0x0000000011d8cf: add [rax-0x75], cl; push 0xffffffffb70fff89; add al, 0x78; and eax, 0x2000; ret; 
0x0000000011d6cf: add [rax-0x75], cl; push 0xffffffffb70fff89; add al, 0x78; and eax, 0x200; ret; 
0x0000000011d5bf: add [rax-0x75], cl; push 0xffffffffb70fff89; add al, 0x78; and eax, 0x2; ret; 
0x0000000011d7cf: add [rax-0x75], cl; push 0xffffffffb70fff89; add al, 0x78; and eax, 0x4000; ret; 
0x0000000011d4bf: add [rax-0x75], cl; push 0xffffffffb70fff89; add al, 0x78; and eax, 0x400; ret; 
0x0000000011d84f: add [rax-0x75], cl; push 0xffffffffb70fff89; add al, 0x78; and eax, 0x4; ret; 
0x0000000011d74f: add [rax-0x75], cl; push 0xffffffffb70fff89; add al, 0x78; and eax, 0x8000; ret; 
0x0000000011d43f: add [rax-0x75], cl; push 0xffffffffb70fff89; add al, 0x78; and eax, 0x8; ret; 
0x000000000f87a5: add [rax-0x75], cl; push rax; or [rax-0x77], cl; ret; 
0x0000000008d131: add [rax-0x75], cl; push rbx; mov rdi, rbx; sub rdx, rsi; call qword ptr [rbp+0x70]; 
0x00000000089abf: add [rax-0x75], cl; push rbx; or [rax-0x75], cl; xor ecx, [rax-0x7d]; ret; 
0x0000000014b75f: add [rax-0x75], cl; push rdi; or [rax-0x77], cl; add al, 0x24; call qword ptr [rdx+0x20]; 
0x000000001613ae: add [rax-0x75], cl; push rsi; clc; mov [rdi-0x8], rdx; ret; 
0x00000000166e8e: add [rax-0x75], cl; push rsi; test dword ptr [rbx-0x76b703b2], 0x4f89f757; cld; ret; 
0x000000000a4d77: add [rax-0x75], cl; push rsp; and al, 0x10; mov [rax], rdx; ret; 
0x0000000011a5a5: add [rax-0x75], cl; push rsp; and al, 0x10; mov rsi, [rsp+0x8]; syscall; 
0x00000000044a5e: add [rax-0x75], cl; sbb [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x0000000011c0d6: add [rax-0x75], cl; sbb [rbx-0x6f3cff00], al; ret; 
0x0000000011c0c6: add [rax-0x75], cl; sbb [rsi-0x7d], spl; add [rcx], al; ret; 
0x00000000089587: add [rax-0x75], cl; sub rax, [rdi+0x38]; ret; 
0x0000000016156f: add [rax-0x75], cl; test qword ptr [rbx-0x76b703aa], 0x5789f74f; cld; ret; 
0x0000000007f162: add [rax-0x75], cl; xchg edi, eax; mov al, [0xe08a8948000000]; add [rax], al; ret; 
0x0000000002a2c4: add [rax-0x75], cl; xchg r8d, eax; mov rdi, rbx; call rax; 
0x000000001151a7: add [rax-0x75], cl; xor [rcx+rcx*4-0x9], cl; mov rax, [rbp-0x58]; mov r15d, r13d; call rax; 
0x00000000028c30: add [rax-0x75], cl; xor al, 0x24; mov edi, [rsp+0xc]; mov rdx, [rax]; call rbp; 
0x0000000007a362: add [rax-0x75], cl; xor al, 0x24; mov rdx, rbx; mov rdi, rbp; call qword ptr [r12+0x38]; 
0x0000000008786d: add [rax-0x75], ecx; sub [r15+rcx-0x4a], r8b; ret; 
0x00000000104a26: add [rax-0x75], ecx; xor ecx, [rax-0x7d]; ret; 
0x0000000009130e: add [rax-0x76fc8bfe], ch; push rdi; and al, 0x90; xor eax, eax; ret; 
0x000000000afcc6: add [rax-0x776b7fe], ecx; ret; 
0x00000000172031: add [rax-0x776b7fe], ecx; sub r8, 0x1; lea rcx, [rdx+0x1]; jne 0x0000000000172390; ret; 
0x0000000011bd2e: add [rax-0x77], cl; adc [r10+0x13], r14b; mov qword ptr [rip+0xc7640], 0x2; ret; 
0x00000000159818: add [rax-0x77], cl; adc [r8+0x5a], bl; pop rbx; ret; 
0x000000000923da: add [rax-0x77], cl; add eax, 0x150eae; ret; 
0x000000000923b1: add [rax-0x77], cl; add eax, 0x150ecf; ret; 
0x00000000092391: add [rax-0x77], cl; add eax, 0x150ee7; ret; 
0x00000000110b03: add [rax-0x77], cl; add eax, 0xd6b95; lea rax, [rip+0xd6b66]; add rsp, 0x8; ret; 
0x00000000159d23: add [rax-0x77], cl; add ebx, [rax+0x5a]; pop rbx; ret; 
0x00000000148f4a: add [rax-0x77], cl; and al, 0x10; mov rax, [rsp+0x48]; call qword ptr [rax+0x28]; 
0x00000000085b42: add [rax-0x77], cl; and al, 0x10; xor edx, edx; mov rdi, r15; call qword ptr [r14+0x80]; 
0x000000000cc342: add [rax-0x77], cl; and al, 0x58; xor eax, eax; mov [rsp+0x50], r12; call rbx; 
0x00000000159171: add [rax-0x77], cl; and al, 0x68; xor eax, eax; call qword ptr [r12+0xf88]; 
0x00000000159374: add [rax-0x77], cl; and al, 0x8; lea rdi, [r13+0x988]; call qword ptr [r13+0xf88]; 
0x0000000005025c: add [rax-0x77], cl; and al, 0x8; xor eax, eax; mov eax, 0x3e; syscall; 
0x000000000b2aae: add [rax-0x77], cl; clc; ret; 
0x000000001850cf: add [rax-0x77], cl; clc; vzeroupper; ret; 
0x000000000f977d: add [rax-0x77], cl; cmp [rcx+rcx*4-0x40], cl; ret; 
0x0000000015973a: add [rax-0x77], cl; dec byte ptr [rax-0x75]; cmp al, 0x24; mov rax, [rax+0x268]; jmp rax; 
0x0000000002acb9: add [rax-0x77], cl; enter 0x8d48, 0x5; ret far; 
0x0000000008c647: add [rax-0x77], cl; fcomp st, dword ptr [rbx+0x5d]; pop r12; ret; 
0x00000000116ce1: add [rax-0x77], cl; fcomp st, dword ptr [rbx-0x3d]; nop [rax+rax]; ret; 
0x00000000123e18: add [rax-0x77], cl; fidivr st, word ptr [rdi+0x2000005]; mov rdx, rax; call qword ptr [r13+0x28]; 
0x000000000897dc: add [rax-0x77], cl; fidivr st, word ptr [rdi+0x2]; mov eax, r9d; syscall; 
0x0000000007857d: add [rax-0x77], cl; fimul st, dword ptr [rcx+rcx*4-0x1]; call qword ptr [r12+0x38]; 
0x00000000080e5d: add [rax-0x77], cl; fimul st, dword ptr [rcx+rcx*4-0x1a]; call qword ptr [r14+0x38]; 
0x00000000078f8a: add [rax-0x77], cl; fimul st, dword ptr [rcx+rcx*4-0x2a]; mov rdi, r15; call qword ptr [r12+0x38]; 
0x00000000079310: add [rax-0x77], cl; fimul st, dword ptr [rcx+rcx*4-0x2a]; mov rdi, r15; call qword ptr [r13+0x38]; 
0x00000000073084: add [rax-0x77], cl; fimul st, dword ptr [rcx+rcx*4-0x9]; call qword ptr [r12+0x38]; 
0x0000000004d976: add [rax-0x77], cl; fimul st, word ptr [rax+0xf]; mov esi, 0x83480143; ret; 
0x00000000132608: add [rax-0x77], cl; fimul st, word ptr [rax-0x77]; out dx, eax; call qword ptr [rsp+0x10]; 
0x00000000063e87: add [rax-0x77], cl; fimul st, word ptr [rax-0x7d]; ret; 
0x000000000982af: add [rax-0x77], cl; fistp qword ptr [rax+0xca], st; syscall; 
0x000000000ed868: add [rax-0x77], cl; fmul st, dword ptr [rax-0x7d]; ret; 
0x0000000007f25a: add [rax-0x77], cl; fucomip st, st(0); fnsave [rax-0x6]; call far fword ptr [rbx+0x4c]; 
0x000000000ef518: add [rax-0x77], cl; fucomip st, st(0); jmp far fword ptr [rbp-0xd]; 
0x000000001206bc: add [rax-0x77], cl; fucomip st, st(0); ret far; 
0x000000000b9484: add [rax-0x77], cl; fucomip st, st(0); ret; 
0x0000000008fa76: add [rax-0x77], cl; imul esp, [rax+0x5b], 0x5d; pop r12; ret; 
0x00000000148350: add [rax-0x77], cl; in eax, 0x89; ret; 
0x00000000099224: add [rax-0x77], cl; iretd; mov eax, 0xca; syscall; 
0x00000000114643: add [rax-0x77], cl; je short 0x0000000000114650; pop rbx; ret; 
0x00000000114642: add [rax-0x77], cl; je short 0x0000000000114650; pop rbx; ret; 
0x0000000005dbb5: add [rax-0x77], cl; jl short 0x000000000005dbde; xor [rcx-0x77], cl; ret; 
0x00000000142543: add [rax-0x77], cl; jl short 0x000000000014256c; sbb [rbp+rcx*4+0x4c], cl; and al, 0x40; call qword ptr [rax]; 
0x0000000007b497: add [rax-0x77], cl; jmp rcx; 
0x00000000159131: add [rax-0x77], cl; mov cl, 0xe9; add esi, ebx; movsq [rdi], [rsi]; ret; 
0x0000000007bf67: add [rax-0x77], cl; mov r10d, 0x1; jmp rcx; 
0x0000000007bd9e: add [rax-0x77], cl; mov r12d, 0x1; jmp rcx; 
0x0000000008c0e9: add [rax-0x77], cl; out 0x48, al; mov edi, ebp; call qword ptr [r12+0x90]; 
0x0000000008becd: add [rax-0x77], cl; out 0x48, al; mov edi, ebp; call qword ptr [r13+0x90]; 
0x0000000008abf7: add [rax-0x77], cl; out 0x48, al; mov edi, ebp; call qword ptr [r15+0x90]; 
0x0000000007e656: add [rax-0x77], cl; out 0x48, al; mov edi, ebp; call qword ptr [rbx+0x90]; 
0x000000000416a4: add [rax-0x77], cl; out 0x48, al; ror eax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000014dc06: add [rax-0x77], cl; out 0x48, eax; mov esi, ebp; call qword ptr [rax+0x18]; 
0x000000000771c8: add [rax-0x77], cl; out 0x48, eax; ror eax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000014ae81: add [rax-0x77], cl; out dx, al; mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x10]; 
0x0000000009ace7: add [rax-0x77], cl; out dx, al; mov rdi, r12; call rax; 
0x00000000147871: add [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x20]; 
0x00000000143039: add [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x30]; 
0x0000000008bcb3: add [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x80]; 
0x0000000007ebbb: add [rax-0x77], cl; out dx, eax; call qword ptr [rbx+0x80]; 
0x0000000009b83f: add [rax-0x77], cl; out dx, eax; call rax; 
0x0000000014c03f: add [rax-0x77], cl; out dx, eax; lea r8, [rip-0x929a]; lea rdx, [rip+0x389f]; call qword ptr [rax]; 
0x0000000014202a: add [rax-0x77], cl; out dx, eax; lea r9, [rsp+0x20]; call qword ptr [rax]; 
0x00000000148649: add [rax-0x77], cl; out dx, eax; mov [r12+0x70], edx; call qword ptr [rax+0x30]; 
0x00000000091902: add [rax-0x77], cl; out dx, eax; mov eax, 0xca; syscall; 
0x00000000159d96: add [rax-0x77], cl; out dx, eax; push r8; mov r8, rbx; call qword ptr [rax+0x270]; 
0x00000000086d9f: add [rax-0x77], cl; push 0xffffffffa5058b48; call qword ptr [rdx]; 
0x0000000014d629: add [rax-0x77], cl; push rsp; and al, 0x38; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x000000000b855f: add [rax-0x77], cl; rcr byte ptr [rbx-0x3d], 0x1; mov eax, 0x60; pop rbx; ret; 
0x0000000002b2ce: add [rax-0x77], cl; ret far; 
0x00000000026696: add [rax-0x77], cl; ret; 
0x000000000f7908: add [rax-0x77], cl; ror byte ptr [rax+0x63], 0x1; adc al, 0x91; add rdx, rcx; notrack jmp rdx; 
0x000000001909d7: add [rax-0x77], cl; ror dword ptr [rax+0x9], cl; ret far; 
0x000000001905ab: add [rax-0x77], cl; ror dword ptr [rax-0x75], 0x1; je short 0x00000000001905d7; adc [rcx-0x77], cl; ret; 
0x000000001597d0: add [rax-0x77], cl; sbb [r8+0x5a], bl; pop rbx; ret; 
0x00000000159503: add [rax-0x77], cl; sbb [r9-0x73], r9b; mov ebp, 0x988; call qword ptr [r13+0xf90]; 
0x0000000008feae: add [rax-0x77], cl; sbb eax, 0x1567c2; add dword ptr [rip+0x1567b7], 0x1; pop rbx; ret; 
0x000000000b7ee4: add [rax-0x77], cl; shl ebx, 0x1; movsb [rdi], [rsi]; ret; 
0x000000000757a2: add [rax-0x77], cl; sti; jmp rsi; 
0x00000000097544: add [rax-0x77], cl; xor [rax-0x75], cl; add eax, 0x14b971; mov [rax], rdi; ret; 
0x0000000009325a: add [rax-0x77], cl; xor [rax-0x75], cl; add eax, 0x14fc5b; mov [rax], rdx; ret; 
0x0000000010da0e: add [rax-0x77], cl; xor esi, esi; syscall; 
0x0000000007b21c: add [rax-0x77], cl; xor r12d, r12d; jmp rcx; 
0x0000000007b184: add [rax-0x77], cl; xrelease mov dword ptr [rsp+0x28], 0x20; jmp rcx; 
0x00000000092136: add [rax-0x77], ecx; adc eax, 0x151192; ret; 
0x00000000061b0b: add [rax-0x77], ecx; adc eax, [rax-0x78]; sub [rbx+0x5d], bl; pop r12; ret; 
0x00000000174672: add [rax-0x77], ecx; add cl, [rax-0x75]; add eax, 0x5428948; lea rax, [rdx+0xc]; ret; 
0x000000001702e2: add [rax-0x77], ecx; add cl, [rax-0x75]; add eax, 0x5428948; mov rax, rdi; ret; 
0x000000001701c2: add [rax-0x77], ecx; add cl, [rax-0x77]; clc; ret; 
0x000000001745f2: add [rax-0x77], ecx; add cl, [rbx+0x42890541]; add eax, 0x8428d48; ret; 
0x000000001702d2: add [rax-0x77], ecx; add cl, [rbx+0x42890841]; or [rax-0x77], cl; clc; ret; 
0x00000000069ac3: add [rax-0x77], ecx; lea edx, [rax-0x77000005]; add cl, [rax-0x7d]; ret; 
0x00000000141763: add [rax-0x77], ecx; out dx, eax; call qword ptr [rax+0x18]; 
0x0000000005f801: add [rax-0x77], ecx; push rbp; sub dh, al; add [rip-0x13317], ch; jmp qword ptr [rsi-0x70]; 
0x0000000005db61: add [rax-0x77], ecx; push rbp; sub dh, al; add [rip-0x4e117], ch; jmp qword ptr [rsi-0x70]; 
0x0000000005e4e1: add [rax-0x77], ecx; push rbp; sub dh, al; add [rip-0x6ea17], ch; jmp qword ptr [rsi-0x70]; 
0x0000000008a481: add [rax-0x77], ecx; push rdi; or [rdi], cl; mov dh, 0x0; ret; 
0x000000000b928f: add [rax-0x77], ecx; ret; 
0x0000000018fe3d: add [rax-0x77], ecx; shr ecx, 0x7a; idiv bh; jmp qword ptr [rsi+0x2e]; 
0x0000000008a45a: add [rax-0x77], ecx; sub [rax-0x3f76bbfe], r9b; ret; 
0x00000000069ac2: add [rax-0x77], rcx; lea edx, [rax-0x77000005]; add cl, [rax-0x7d]; ret; 
0x0000000008a459: add [rax-0x77], rcx; sub [rax-0x3f76bbfe], r9b; ret; 
0x00000000136fc3: add [rax-0x78], eax; ja short 0x0000000000136fc9; ret; 
0x00000000190c6e: add [rax-0x7ab70000], al; ret; 
0x0000000006c85c: add [rax-0x7b], cl; jmp qword ptr [rax+rcx*2-0x75]; 
0x000000001122ca: add [rax-0x7b], cl; push qword ptr [rbp+0x10]; mov eax, 0x1; ret; 
0x00000000141ba9: add [rax-0x7b], cl; push qword ptr [rdi+rax+0x48]; mov eax, [rdi+0x8]; call qword ptr [rax+0x20]; 
0x00000000141a07: add [rax-0x7b], cl; push qword ptr [rdi+rcx+0x48]; mov eax, [rdi+0x8]; call qword ptr [rax+0x20]; 
0x00000000099e53: add [rax-0x7b], cl; ror byte ptr [rdi], 0x84; rol dword ptr [rax], cl; add [rax], al; call rax; 
0x000000000b0513: add [rax-0x7b], cl; ror byte ptr [rdi], 0x85; ret; 
0x000000001426d2: add [rax-0x7b], cl; shl byte ptr [rax+rax*2+0x41], 0x83; call qword ptr [rbx]; 
0x00000000125a7d: add [rax-0x7b], cl; shl byte ptr [rbp+rbp+0x48], 0x8b; jp short 0x0000000000125ad7; mov rsi, rdx; call rax; 
0x0000000007f477: add [rax-0x7b], cl; shl byte ptr [rbx+rdx+0x48], 0x8b; mov edi, 0xe0; jmp rax; 
0x0000000007f397: add [rax-0x7b], cl; shl byte ptr [rcx+rcx+0x48], 0x8b; mov edi, 0xe0; jmp rax; 
0x00000000132ad3: add [rax-0x7b], cl; shl byte ptr [rcx+rcx+0x48], 0x8d; cmp eax, 0xb5a40; call rax; 
0x00000000107e19: add [rax-0x7b], cl; shl byte ptr [rcx+rsi+0x31], 0xd2; xor esi, esi; mov rdi, rbp; call rax; 
0x0000000007f420: add [rax-0x7b], cl; shl byte ptr [rdx+0x48], 0x8b; mov edi, 0xe0; lea rsi, [rsp+0x8]; call rax; 
0x00000000126d63: add [rax-0x7b], cl; shl byte ptr [rsp+rbp+0x48], 0x8d; jne short 0x0000000000126d4d; lea rdi, [rip-0x184]; call rax; 
0x00000000107eae: add [rax-0x7b], cl; shl byte ptr [rsp+rsi+0x31], 0xd2; call rax; 
0x0000000009f9b5: add [rax-0x7b], ecx; ror byte ptr [rax-0x77], 0xd8; pop rbx; cmovne rax, rdi; ret; 
0x0000000013776c: add [rax-0x7b], ecx; sar byte ptr [rax+0xe], cl; mov rax, rdx; movsxd rdx, ecx; ret; 
0x000000000d2d83: add [rax-0x7bf0ffc2], al; ret; 
0x00000000127e8b: add [rax-0x7bf10000], al; ret; 
0x00000000176177: add [rax-0x7cb7fec8], al; fdivr st, st(7); ret; 
0x000000000968b5: add [rax-0x7d], cl; call far fword ptr [rdi]; 
0x00000000098363: add [rax-0x7d], cl; call qword ptr [rax]; 
0x0000000004094f: add [rax-0x7d], cl; clc; ret far; 
0x00000000129106: add [rax-0x7d], cl; in al, dx; or al, ch; pxor mm7, mm7; jmp qword ptr [rsi+0x2e]; 
0x0000000010177b: add [rax-0x7d], cl; in al, dx; or al, ch; ret far; 
0x0000000007762b: add [rax-0x7d], cl; in al, dx; or al, ch; sbb edx, [rsp+rdi*8]; jmp qword ptr [rsi+0x66]; 
0x00000000060742: add [rax-0x7d], cl; in al, dx; sbb [rcx], dh; jmp qword ptr [rax+rcx*2-0x75]; 
0x00000000096a2f: add [rax-0x7d], cl; jmp qword ptr [rax]; 
0x00000000143b33: add [rax-0x7d], cl; mov eax, 0x100; add [rax-0x77], cl; ret; 
0x00000000135ae7: add [rax-0x7d], cl; out dx, eax; add ecx, [rax-0x7d]; call qword ptr [rcx]; 
0x000000000938ba: add [rax-0x7d], cl; ret far; 
0x0000000002ae28: add [rax-0x7d], cl; ret; 
0x00000000033b9d: add [rax-0x7d], cl; rol byte ptr [rax+rcx*2], 0x83; ret; 
0x000000000cbaff: add [rax-0x7d], cl; rol byte ptr [rbx], 0xc3; nop [rax+rax]; xor rax, rax; ret; 
0x000000000cbaee: add [rax-0x7d], cl; rol byte ptr [rcx], 0xc3; nop [rax+rax]; add rax, 0x3; ret; 
0x0000000017617a: add [rax-0x7d], ecx; fdivr st, st(7); ret; 
0x000000000e3b8c: add [rax-0x7d], ecx; mov dword ptr [rcx], 0xac75c084; xor eax, eax; ret; 
0x0000000002a500: add [rax-0x7d], ecx; ret; 
0x00000000076983: add [rax-0x7d], r9d; ret; 
0x00000000050541: add [rax-0x7f], ecx; ret; 
0x00000000048243: add [rax-0x80], al; jmp far fword ptr [rbx]; 
0x00000000048303: add [rax-0x80], al; jmp qword ptr [rbp+0xf]; 
0x00000000075633: add [rax-0x80], eax; jmp far fword ptr [rdx]; 
0x000000000596f2: add [rax-0x8], ebp; saveprevssp; mov [r9+0x3a8], rdi; mov rsp, rdx; ret; 
0x00000000073361: add [rax-0x8bf43], eax; jmp qword ptr [rax]; 
0x0000000007926f: add [rax-0x8e443], al; jmp qword ptr [rax]; 
0x00000000078e73: add [rax-0x8e443], eax; jmp qword ptr [rax]; 
0x0000000003d3a8: add [rax-0x9], ecx; ror byte ptr [rax+0x1], 0x1; ret; 
0x0000000010ccfe: add [rax-0xe69c418], dl; jmp qword ptr [rsi-0x7d]; 
0x000000000de945: add [rax], ah; add [rax+0x38], edi; syscall; 
0x00000000038c47: add [rax], ah; add [rax], al; ret; 
0x00000000121c23: add [rax], ah; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000009d076: add [rax], al; adc [rax-0x73], cl; add eax, 0x1a660; cmove rax, rdx; ret; 
0x0000000009c866: add [rax], al; adc [rax-0x73], cl; add eax, 0x1b470; cmovne rax, rdx; ret; 
0x0000000009c736: add [rax], al; adc [rax-0x73], cl; add eax, 0x1b4f0; cmovne rax, rdx; ret; 
0x0000000009c2c6: add [rax], al; adc [rax-0x73], cl; add eax, 0x1b8b0; cmovne rax, rdx; ret; 
0x0000000010e50d: add [rax], al; add [r13+rbp-0x48], sil; add [rcx], eax; add [rax], al; syscall; 
0x00000000136b54: add [rax], al; add [rax+0x102], bh; cmovne eax, edx; ret; 
0x00000000136b2a: add [rax], al; add [rax+0x104], bh; cmovne eax, edx; ret; 
0x0000000010887d: add [rax], al; add [rax+0x10c], bh; syscall; 
0x00000000119326: add [rax], al; add [rax+0x119], bh; syscall; 
0x0000000018a83c: add [rax], al; add [rax+0x1478d48], dl; ret; 
0x0000000011b761: add [rax], al; add [rax+0x14], bh; syscall; 
0x0000000009115d: add [rax], al; add [rax+0x16], bh; cmove eax, edx; ret; 
0x0000000014124b: add [rax], al; add [rax+0x16], bh; ret; 
0x000000000b55cc: add [rax], al; add [rax+0x1788168a], dl; lea rax, [rdi+0x1]; ret; 
0x000000000d8e2b: add [rax], al; add [rax+0x1], bh; add rsp, 0x8; ret; 
0x000000000cb08d: add [rax], al; add [rax+0x1], bh; jg short 0x00000000000cb099; neg eax; ret; 
0x00000000055b91: add [rax], al; add [rax+0x1], bh; ret; 
0x000000000cb284: add [rax], al; add [rax+0x1], cl; clc; add rax, rcx; ret; 
0x0000000017e597: add [rax], al; add [rax+0x1], cl; clc; vzeroupper; ret; 
0x000000001280df: add [rax], al; add [rax+0x1], cl; ret far; 
0x0000000014120e: add [rax], al; add [rax+0x1d], bh; pop rbx; ret; 
0x000000000e0af3: add [rax], al; add [rax+0x20], bh; cmove rax, rdx; ret; 
0x000000001411f3: add [rax], al; add [rax+0x22], bh; pop rbx; ret; 
0x000000000e7d6f: add [rax], al; add [rax+0x29755efa], al; mov byte ptr [rdi+0x8], 0x19; mov eax, 0x1; ret; 
0x0000000004f39b: add [rax], al; add [rax+0x29], cl; ret far; 
0x000000000772fc: add [rax], al; add [rax+0x29], cl; ret; 
0x00000000055d9f: add [rax], al; add [rax+0x2], bh; ret; 
0x000000001020a4: add [rax], al; add [rax+0x39], cl; fbstp tbyte ptr [rbp+rax-0x18], st; pop qword ptr [rdx-0xe]; jmp qword ptr [rsi+0xf]; 
0x000000000318b2: add [rax], al; add [rax+0x39], cl; ret far; 
0x0000000002e076: add [rax], al; add [rax+0x39], cl; ret; 
0x0000000018c55c: add [rax], al; add [rax+0x3bf4478b], dl; hlt; jne 0x000000000018c680; ret; 
0x000000000c71e1: add [rax], al; add [rax+0x4428944], al; mov [rdx], eax; xor eax, eax; ret; 
0x000000000b8535: add [rax], al; add [rax+0x485bf0e5], al; cmovne eax, edx; ret; 
0x0000000010e35f: add [rax], al; add [rax+0x48], bh; syscall; 
0x000000000408a6: add [rax], al; add [rax+0x48c22148], al; mov [rdi], edx; ret; 
0x0000000008355d: add [rax], al; add [rax+0x63], cl; adc [rax-0x75], cl; adc cl, [rax+0x39]; ret far; 
0x000000001364ff: add [rax], al; add [rax+0x63], cl; fisttp dword ptr [rax+0x1], st; ret; 
0x0000000004c294: add [rax], al; add [rax+0x63], cl; ret; 
0x00000000049590: add [rax], al; add [rax+0x63], cl; ret; 
0x00000000143376: add [rax], al; add [rax+0x63], cl; sbb [r11+0xe7603f8], r8b; mov eax, 0x2; ret; 
0x000000000f0628: add [rax], al; add [rax+0x63], cl; test [rdi+rdi*8-0x1], esi; jmp qword ptr [rsi+0x48]; 
0x00000000040876: add [rax], al; add [rax+0x66c22148], al; movq mm0, rdx; ret; 
0x00000000040833: add [rax], al; add [rax+0x7110ff2], al; and rdx, rax; movq xmm0, rdx; ret; 
0x00000000040bdf: add [rax], al; add [rax+0x7110ff3], al; movd xmm0, esi; ret; 
0x000000000b478d: add [rax], al; add [rax+0x78d4837], cl; ret; 
0x00000000041bf6: add [rax], al; add [rax+0x7f], bh; syscall; 
0x000000001377fd: add [rax], al; add [rax+0x7fffffff], bh; ret; 
0x0000000004263e: add [rax], al; add [rax+0x80], bh; syscall; 
0x00000000041c42: add [rax], al; add [rax+0x82], bh; syscall; 
0x000000001198c5: add [rax], al; add [rax+0x95], bh; syscall; 
0x000000000edecd: add [rax], al; add [rax+0xc], bh; ret; 
0x000000000dda2f: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x109a62]; syscall; 
0x000000000dd8ef: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x109ba2]; syscall; 
0x000000000dd837: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x109c5a]; syscall; 
0x000000000dd75b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x109d2e]; syscall; 
0x000000000dd58b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x109ebe]; syscall; 
0x000000000dd3c7: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x10a03a]; syscall; 
0x000000000dd00d: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x10a39c]; syscall; 
0x000000000dbd5f: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x10b5c2]; syscall; 
0x000000000dbc1f: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x10b702]; syscall; 
0x000000000dbb67: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x10b7ba]; syscall; 
0x000000000db79b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x10bb7e]; syscall; 
0x000000000db5cb: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x10bd0e]; syscall; 
0x000000000db407: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x10be8a]; syscall; 
0x000000000dab0f: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x10c72a]; syscall; 
0x000000000ceb3b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x1185f6]; syscall; 
0x000000000ce947: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x1187ea]; syscall; 
0x000000000c667b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x11efd6]; syscall; 
0x0000000009989b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x14a2f6]; syscall; 
0x0000000009b22b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x14bcce]; syscall; 
0x0000000009afa7: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x14bf52]; syscall; 
0x0000000009adc7: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x14c132]; syscall; 
0x0000000009abdb: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x14c31e]; syscall; 
0x0000000009ab6b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x14c38e]; syscall; 
0x00000000096eeb: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x14cca6]; syscall; 
0x00000000096e8b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x14cd06]; syscall; 
0x00000000096abb: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x14d0d6]; syscall; 
0x0000000009685b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x14d336]; syscall; 
0x00000000096213: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x14d97e]; syscall; 
0x000000000961db: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x14d9b6]; syscall; 
0x00000000097eba: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x14efb7]; syscall; 
0x0000000009741f: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x14fa42]; syscall; 
0x000000000930f6: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x153d7b]; syscall; 
0x0000000009307a: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x153de7]; syscall; 
0x00000000092dd3: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x15409e]; syscall; 
0x00000000092b27: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x15434a]; syscall; 
0x0000000009205c: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x154795]; syscall; 
0x00000000091eb7: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x15493a]; syscall; 
0x00000000091d2b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x154ac6]; syscall; 
0x0000000008ff2e: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x156733]; syscall; 
0x0000000008f9ed: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x156c74]; syscall; 
0x0000000008f65d: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x157004]; syscall; 
0x0000000008f2fd: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x157364]; syscall; 
0x0000000008dbd9: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x158a88]; syscall; 
0x0000000008d8e9: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x158d78]; syscall; 
0x0000000008d5e5: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x15907c]; syscall; 
0x00000000080cca: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x165957]; syscall; 
0x000000000808ce: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x165d53]; syscall; 
0x00000000080822: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x165dff]; syscall; 
0x0000000007e97b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x166cd6]; syscall; 
0x0000000005f19f: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x18745a]; syscall; 
0x0000000005ef1b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x1876da]; syscall; 
0x0000000005cd97: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x18984a]; syscall; 
0x0000000005cc57: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x18998a]; syscall; 
0x00000000052e7f: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x193742]; syscall; 
0x00000000052cbb: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x193906]; syscall; 
0x000000000527ab: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x193e16]; syscall; 
0x0000000005039f: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x195ff2]; syscall; 
0x0000000005021b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x196176]; syscall; 
0x000000000501bb: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x1961d6]; syscall; 
0x00000000045a57: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x1a0902]; syscall; 
0x00000000045997: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x1a09c2]; syscall; 
0x000000000458cf: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x1a0a8a]; syscall; 
0x000000000457f7: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x1a0b62]; syscall; 
0x000000000448ef: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x1a11ea]; syscall; 
0x0000000004482a: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x1a12af]; syscall; 
0x00000000044687: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x1a1452]; syscall; 
0x000000000445ae: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x1a152b]; syscall; 
0x0000000003d018: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x1a89e1]; syscall; 
0x0000000003b68d: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x1aa334]; syscall; 
0x0000000003a4dc: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x1ab435]; syscall; 
0x0000000003a4bc: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x1ab455]; syscall; 
0x0000000003a352: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x1ab5bf]; syscall; 
0x0000000002ac5f: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x1ba9f2]; syscall; 
0x0000000002aaf3: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x1bab5e]; syscall; 
0x0000000002a9fb: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x1bac56]; syscall; 
0x00000000026849: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x1bf258]; syscall; 
0x00000000191977: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x54162]; syscall; 
0x00000000191b37: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x54cba]; syscall; 
0x00000000191e57: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x567f2]; syscall; 
0x00000000158057: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x9107e]; syscall; 
0x00000000156d5f: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x92376]; syscall; 
0x00000000156c7f: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x92456]; syscall; 
0x00000000156a97: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x9263e]; syscall; 
0x00000000156a07: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x926ce]; syscall; 
0x00000000156967: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x9276e]; syscall; 
0x000000001568b7: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x9281e]; syscall; 
0x000000001564e7: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x92bee]; syscall; 
0x0000000014c2e7: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x9cbd2]; syscall; 
0x0000000014c187: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x9cd32]; syscall; 
0x0000000014bf7b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x9cf3e]; syscall; 
0x0000000014bddb: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x9d0de]; syscall; 
0x0000000014bc47: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x9d272]; syscall; 
0x0000000014bb07: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x9d3b2]; syscall; 
0x0000000014b9a7: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x9d512]; syscall; 
0x0000000014b897: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x9d622]; syscall; 
0x00000000148407: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xa0a96]; syscall; 
0x0000000013f4d3: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xa977e]; syscall; 
0x0000000013f1a3: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xa9aae]; syscall; 
0x0000000013ee23: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xa9e2e]; syscall; 
0x0000000013ec25: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xaa02c]; syscall; 
0x0000000013ea9b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xaa1b6]; syscall; 
0x0000000013e85e: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xaa3f3]; syscall; 
0x0000000013de17: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xaad72]; syscall; 
0x0000000013dc96: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xaaef3]; syscall; 
0x0000000013dc5c: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xaaf2d]; syscall; 
0x0000000013db4f: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xab03a]; syscall; 
0x0000000013d30f: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xab87a]; syscall; 
0x0000000013d247: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xab942]; syscall; 
0x0000000013d12b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xaba5e]; syscall; 
0x0000000013bd98: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xacba1]; syscall; 
0x00000000138517: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xb0132]; syscall; 
0x0000000013823b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xb040e]; syscall; 
0x00000000133f5b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xb46da]; syscall; 
0x000000001339db: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xb4c3e]; syscall; 
0x00000000133817: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xb4dba]; syscall; 
0x0000000013374f: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xb4e22]; syscall; 
0x0000000013360f: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xb4f62]; syscall; 
0x00000000133557: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xb501a]; syscall; 
0x00000000132e67: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xb5702]; syscall; 
0x00000000132b37: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xb5a32]; syscall; 
0x0000000013297b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xb5bee]; syscall; 
0x00000000132461: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xb6064]; syscall; 
0x0000000012eb6f: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xb983a]; syscall; 
0x0000000012ea2f: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xb997a]; syscall; 
0x0000000012e977: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xb9a32]; syscall; 
0x0000000012e88b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xb9b16]; syscall; 
0x0000000012e6bb: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xb9cb6]; syscall; 
0x0000000012e4f7: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xb9e52]; syscall; 
0x0000000012e42f: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xb9eca]; syscall; 
0x0000000012e2ef: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xba00a]; syscall; 
0x0000000012e237: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xba0c2]; syscall; 
0x0000000012e157: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xba19a]; syscall; 
0x0000000012dc8b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xba5ee]; syscall; 
0x0000000012d6bb: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xbab5e]; syscall; 
0x0000000012d19b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xbb036]; syscall; 
0x0000000012cfcf: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xbb1c2]; syscall; 
0x0000000012ce8f: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xbb302]; syscall; 
0x0000000012cdd7: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xbb3ba]; syscall; 
0x0000000012ccf7: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xbb492]; syscall; 
0x0000000012c8db: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xbb866]; syscall; 
0x0000000012c2bf: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xbbe22]; syscall; 
0x0000000012c167: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xbbf7a]; syscall; 
0x0000000012c0a7: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xbc03a]; syscall; 
0x0000000012bfbf: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xbc11a]; syscall; 
0x0000000012bedb: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xbc1c6]; syscall; 
0x0000000012b87b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xbc7e6]; syscall; 
0x0000000012b66f: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xbc9aa]; syscall; 
0x0000000012b517: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xbcb02]; syscall; 
0x0000000012b457: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xbcbc2]; syscall; 
0x0000000012b36f: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xbcca2]; syscall; 
0x0000000012a75b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xbd83e]; syscall; 
0x0000000012a4eb: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xbda6e]; syscall; 
0x00000000129d6b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xbe18e]; syscall; 
0x0000000012030f: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xc7b32]; syscall; 
0x000000001201cf: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xc7c72]; syscall; 
0x00000000120117: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xc7d2a]; syscall; 
0x0000000011fd3d: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xc80fc]; syscall; 
0x0000000011fb13: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xc82ee]; syscall; 
0x0000000011f94b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xc846e]; syscall; 
0x0000000011f787: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xc85ea]; syscall; 
0x0000000011f6b7: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xc8666]; syscall; 
0x0000000011f5e7: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xc8736]; syscall; 
0x0000000011f54b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xc87d2]; syscall; 
0x0000000011eaaf: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xc923a]; syscall; 
0x0000000011e96f: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xc937a]; syscall; 
0x0000000011e8b7: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xc9432]; syscall; 
0x0000000011e2bd: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xc9a24]; syscall; 
0x0000000011e0bb: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xc9bce]; syscall; 
0x0000000011dedb: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xc9d46]; syscall; 
0x0000000011dd17: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xc9ea2]; syscall; 
0x00000000113617: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xd422a]; syscall; 
0x000000001134fb: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xd4346]; syscall; 
0x0000000011309b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xd47a6]; syscall; 
0x00000000112b6a: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xd4cd7]; syscall; 
0x0000000010155b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xe6056]; syscall; 
0x000000000272c0: add [rax], al; add [rax+0xca], bh; syscall; 
0x000000000913af: add [rax], al; add [rax+0xcc], bh; syscall; 
0x00000000041a1c: add [rax], al; add [rax+0xd], bh; syscall; 
0x000000000d9098: add [rax], al; add [rax+0xe6], bh; syscall; 
0x000000000418c1: add [rax], al; add [rax+0xe], bh; syscall; 
0x00000000055dad: add [rax], al; add [rax+0xf], cl; mov edx, 0x894830e8; or [r8+0x2], r15b; ret; 
0x0000000011effd: add [rax], al; add [rax+0xf], cl; mov esi, 0x83480153; ret; 
0x000000000db1fd: add [rax], al; add [rax+0xf], cl; ret; 
0x000000000e5d3d: add [rax], al; add [rax+rax*8-0x49f0e38c], al; add ecx, [rax-0x77]; fimul st, dword ptr [rax-0x7d]; ret; 
0x000000000cb613: add [rax], al; add [rax+rbp*2+0x48], dh; lea eax, [rdi-0x10]; ret; 
0x00000000045462: add [rax], al; add [rax+rcx*2-0x77], ah; adc ecx, [rax-0x75]; jge short 0x0000000000045475; call rax; 
0x0000000003fb8b: add [rax], al; add [rax-0x1], bh; pop rbp; ret; 
0x0000000013712d: add [rax], al; add [rax-0x1], bh; pop rbx; ret; 
0x0000000004241e: add [rax], al; add [rax-0x1], bh; ret; 
0x00000000029323: add [rax], al; add [rax-0x1], bh; ret; 
0x00000000040c32: add [rax], al; add [rax-0x3991f09a], al; ret; 
0x00000000050f05: add [rax], al; add [rax-0x39], cl; ret; 
0x000000000cbb3d: add [rax], al; add [rax-0x39], cl; rol byte ptr [rbx], 0x0; add [rax], al; ret; 
0x000000000cbb7d: add [rax], al; add [rax-0x39], cl; rol byte ptr [rdi], 0x0; add [rax], al; ret; 
0x000000000cbb2d: add [rax], al; add [rax-0x39], cl; rol byte ptr [rdx], 0x0; add [rax], al; ret; 
0x000000000cbb6d: add [rax], al; add [rax-0x39], cl; rol byte ptr [rsi], 0x0; add [rax], al; ret; 
0x00000000038914: add [rax], al; add [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x000000000284a8: add [rax], al; add [rax-0x3f], cl; rcl byte ptr [rcx], 0x48; mov [rip+0x1be192], eax; ret; 
0x00000000137917: add [rax], al; add [rax-0x3f], cl; ret; 
0x000000000d7504: add [rax], al; add [rax-0x3f], cl; stc; add ch, [rcx]; ret far; 
0x0000000010e6d2: add [rax], al; add [rax-0x3fcef877], al; ret; 
0x000000000d2aad: add [rax], al; add [rax-0x41], cl; ret; 
0x0000000010894c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x102; syscall; 
0x0000000010a9ac: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x107; syscall; 
0x0000000010a8ec: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x10a; syscall; 
0x0000000011a03c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x110; syscall; 
0x0000000011a09c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x11b; syscall; 
0x00000000119d3c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x123; syscall; 
0x000000001095cc: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x124; syscall; 
0x0000000010962c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x125; syscall; 
0x00000000119e5c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x126; syscall; 
0x0000000011a0cc: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x12c; syscall; 
0x0000000011a15c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x13f; syscall; 
0x0000000011a18c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x14a; syscall; 
0x0000000011a1bc: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x14b; syscall; 
0x000000001095fc: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x16; syscall; 
0x000000000fd22c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x18; syscall; 
0x000000001139dc: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x1b; syscall; 
0x0000000010959c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x21; syscall; 
0x0000000011a92c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x29; syscall; 
0x0000000011a3ec: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x33; syscall; 
0x0000000010971c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x51; syscall; 
0x0000000010a9dc: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x54; syscall; 
0x0000000010a91c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x59; syscall; 
0x0000000010871c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x5b; syscall; 
0x0000000010a00c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x5c; syscall; 
0x0000000010a03c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x5d; syscall; 
0x0000000010a06c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x5e; syscall; 
0x000000000de57c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x64; syscall; 
0x00000000119ebc: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x67; syscall; 
0x000000000dfddc: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x6d; syscall; 
0x000000000dfe0c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x6f; syscall; 
0x000000000dfe6c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x70; syscall; 
0x000000000dfe9c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x76; syscall; 
0x000000000dfecc: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x78; syscall; 
0x000000001192dc: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x7b; syscall; 
0x00000000119c7c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x7e; syscall; 
0x0000000011a06c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x86; syscall; 
0x000000001085bc: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x8a; syscall; 
0x000000000fd19c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x8f; syscall; 
0x000000000fd1cc: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x90; syscall; 
0x000000000fd1fc: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x91; syscall; 
0x000000000fd25c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x92; syscall; 
0x000000000fd28c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x93; syscall; 
0x000000000fd2bc: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x94; syscall; 
0x00000000113a6c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x96; syscall; 
0x00000000113a9c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x97; syscall; 
0x00000000113acc: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x98; syscall; 
0x00000000119bdc: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x9a; syscall; 
0x00000000119f7c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x9b; syscall; 
0x000000001100cc: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0xa1; syscall; 
0x000000001105bc: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0xa7; syscall; 
0x000000001105ec: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0xa8; syscall; 
0x000000001138dc: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0xa; syscall; 
0x0000000011919c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0xac; syscall; 
0x00000000119cac: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0xae; syscall; 
0x00000000119cdc: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0xb0; syscall; 
0x000000001138ac: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0xb; syscall; 
0x0000000011a1ec: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0xba; syscall; 
0x00000000116f9c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0xc6; syscall; 
0x00000000116e7c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0xc7; syscall; 
0x00000000119d0c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0xd5; syscall; 
0x00000000119c0c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0xe4; syscall; 
0x00000000119e2c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0xfd; syscall; 
0x00000000119e8c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0xff; syscall; 
0x0000000013542c: add [rax], al; add [rax-0x5e1f00d], dl; mov edi, [rdi]; mov eax, 0x3; syscall; 
0x00000000041bec: add [rax], al; add [rax-0x5e1f00d], dl; mov esi, 0x8; mov eax, 0x7f; syscall; 
0x0000000010a09c: add [rax], al; add [rax-0x5e1f00d], dl; mov r10, rcx; mov eax, 0x104; syscall; 
0x0000000010a88c: add [rax], al; add [rax-0x5e1f00d], dl; mov r10, rcx; mov eax, 0x109; syscall; 
0x0000000010a94c: add [rax], al; add [rax-0x5e1f00d], dl; mov r10, rcx; mov eax, 0x10b; syscall; 
0x0000000011a0fc: add [rax], al; add [rax-0x5e1f00d], dl; mov r10, rcx; mov eax, 0x12f; syscall; 
0x0000000011a95c: add [rax], al; add [rax-0x5e1f00d], dl; mov r10, rcx; mov eax, 0x35; syscall; 
0x0000000011a8cc: add [rax], al; add [rax-0x5e1f00d], dl; mov r10, rcx; mov eax, 0x36; syscall; 
0x0000000011a41c: add [rax], al; add [rax-0x5e1f00d], dl; mov r10, rcx; mov eax, 0x37; syscall; 
0x00000000119eec: add [rax], al; add [rax-0x5e1f00d], dl; mov r10, rcx; mov eax, 0xa5; syscall; 
0x00000000119dcc: add [rax], al; add [rax-0x5e1f00d], dl; mov r10, rcx; mov eax, 0xaf; syscall; 
0x00000000119fac: add [rax], al; add [rax-0x5e1f00d], dl; mov r10, rcx; mov eax, 0xb2; syscall; 
0x0000000011702c: add [rax], al; add [rax-0x5e1f00d], dl; mov r10, rcx; mov eax, 0xbc; syscall; 
0x00000000116fcc: add [rax], al; add [rax-0x5e1f00d], dl; mov r10, rcx; mov eax, 0xbd; syscall; 
0x00000000116eac: add [rax], al; add [rax-0x5e1f00d], dl; mov r10, rcx; mov eax, 0xbe; syscall; 
0x00000000116f3c: add [rax], al; add [rax-0x5e1f00d], dl; mov r10, rcx; mov eax, 0xc0; syscall; 
0x00000000113a0c: add [rax], al; add [rax-0x5e1f00d], dl; mov r10, rcx; mov eax, 0xd8; syscall; 
0x00000000119d6c: add [rax], al; add [rax-0x5e1f00d], dl; mov r10, rcx; mov eax, 0xe9; syscall; 
0x0000000010dd8c: add [rax], al; add [rax-0x5e1f00d], dl; mov r10d, ecx; mov eax, 0x118; syscall; 
0x000000000412ec: add [rax], al; add [rax-0x5e1f00d], dl; movmskps eax, xmm0; and eax, 0x8; ret; 
0x00000000040dac: add [rax], al; add [rax-0x5e1f00d], dl; pmovmskb eax, xmm0; and eax, 0x8; ret; 
0x00000000028bac: add [rax], al; add [rax-0x5e1f00d], dl; ret; 
0x0000000014338d: add [rax], al; add [rax-0x73], cl; adc eax, 0x9f7a9; jmp qword ptr [rdx+rax*8]; 
0x0000000003737d: add [rax], al; add [rax-0x73], cl; add eax, 0x176e5b; ret; 
0x000000000cb65d: add [rax], al; add [rax-0x73], cl; clc; ret; 
0x000000000cb66d: add [rax], al; add [rax-0x73], cl; cld; ret; 
0x000000000dda34: add [rax], al; add [rax-0x73], cl; cmp eax, 0x109a62; syscall; 
0x000000000dd8f4: add [rax], al; add [rax-0x73], cl; cmp eax, 0x109ba2; syscall; 
0x000000000dd83c: add [rax], al; add [rax-0x73], cl; cmp eax, 0x109c5a; syscall; 
0x000000000dd760: add [rax], al; add [rax-0x73], cl; cmp eax, 0x109d2e; syscall; 
0x000000000dd590: add [rax], al; add [rax-0x73], cl; cmp eax, 0x109ebe; syscall; 
0x000000000dd3cc: add [rax], al; add [rax-0x73], cl; cmp eax, 0x10a03a; syscall; 
0x000000000dd012: add [rax], al; add [rax-0x73], cl; cmp eax, 0x10a39c; syscall; 
0x000000000dbd64: add [rax], al; add [rax-0x73], cl; cmp eax, 0x10b5c2; syscall; 
0x000000000dbc24: add [rax], al; add [rax-0x73], cl; cmp eax, 0x10b702; syscall; 
0x000000000dbb6c: add [rax], al; add [rax-0x73], cl; cmp eax, 0x10b7ba; syscall; 
0x000000000db7a0: add [rax], al; add [rax-0x73], cl; cmp eax, 0x10bb7e; syscall; 
0x000000000db5d0: add [rax], al; add [rax-0x73], cl; cmp eax, 0x10bd0e; syscall; 
0x000000000db40c: add [rax], al; add [rax-0x73], cl; cmp eax, 0x10be8a; syscall; 
0x000000000dab14: add [rax], al; add [rax-0x73], cl; cmp eax, 0x10c72a; syscall; 
0x000000000ceb40: add [rax], al; add [rax-0x73], cl; cmp eax, 0x1185f6; syscall; 
0x000000000ce94c: add [rax], al; add [rax-0x73], cl; cmp eax, 0x1187ea; syscall; 
0x000000000c6680: add [rax], al; add [rax-0x73], cl; cmp eax, 0x11efd6; syscall; 
0x000000000998a0: add [rax], al; add [rax-0x73], cl; cmp eax, 0x14a2f6; syscall; 
0x0000000009b230: add [rax], al; add [rax-0x73], cl; cmp eax, 0x14bcce; syscall; 
0x0000000009afac: add [rax], al; add [rax-0x73], cl; cmp eax, 0x14bf52; syscall; 
0x0000000009adcc: add [rax], al; add [rax-0x73], cl; cmp eax, 0x14c132; syscall; 
0x0000000009abe0: add [rax], al; add [rax-0x73], cl; cmp eax, 0x14c31e; syscall; 
0x0000000009ab70: add [rax], al; add [rax-0x73], cl; cmp eax, 0x14c38e; syscall; 
0x00000000096ef0: add [rax], al; add [rax-0x73], cl; cmp eax, 0x14cca6; syscall; 
0x00000000096e90: add [rax], al; add [rax-0x73], cl; cmp eax, 0x14cd06; syscall; 
0x00000000096ac0: add [rax], al; add [rax-0x73], cl; cmp eax, 0x14d0d6; syscall; 
0x00000000096860: add [rax], al; add [rax-0x73], cl; cmp eax, 0x14d336; syscall; 
0x00000000096218: add [rax], al; add [rax-0x73], cl; cmp eax, 0x14d97e; syscall; 
0x000000000961e0: add [rax], al; add [rax-0x73], cl; cmp eax, 0x14d9b6; syscall; 
0x00000000097ebf: add [rax], al; add [rax-0x73], cl; cmp eax, 0x14efb7; syscall; 
0x00000000097424: add [rax], al; add [rax-0x73], cl; cmp eax, 0x14fa42; syscall; 
0x000000000930fb: add [rax], al; add [rax-0x73], cl; cmp eax, 0x153d7b; syscall; 
0x0000000009307f: add [rax], al; add [rax-0x73], cl; cmp eax, 0x153de7; syscall; 
0x00000000092dd8: add [rax], al; add [rax-0x73], cl; cmp eax, 0x15409e; syscall; 
0x00000000092b2c: add [rax], al; add [rax-0x73], cl; cmp eax, 0x15434a; syscall; 
0x00000000092061: add [rax], al; add [rax-0x73], cl; cmp eax, 0x154795; syscall; 
0x00000000091ebc: add [rax], al; add [rax-0x73], cl; cmp eax, 0x15493a; syscall; 
0x00000000091d30: add [rax], al; add [rax-0x73], cl; cmp eax, 0x154ac6; syscall; 
0x0000000008ff33: add [rax], al; add [rax-0x73], cl; cmp eax, 0x156733; syscall; 
0x0000000008f9f2: add [rax], al; add [rax-0x73], cl; cmp eax, 0x156c74; syscall; 
0x0000000008f662: add [rax], al; add [rax-0x73], cl; cmp eax, 0x157004; syscall; 
0x0000000008f302: add [rax], al; add [rax-0x73], cl; cmp eax, 0x157364; syscall; 
0x0000000008dbde: add [rax], al; add [rax-0x73], cl; cmp eax, 0x158a88; syscall; 
0x0000000008d8ee: add [rax], al; add [rax-0x73], cl; cmp eax, 0x158d78; syscall; 
0x0000000008d5ea: add [rax], al; add [rax-0x73], cl; cmp eax, 0x15907c; syscall; 
0x00000000080ccf: add [rax], al; add [rax-0x73], cl; cmp eax, 0x165957; syscall; 
0x000000000808d3: add [rax], al; add [rax-0x73], cl; cmp eax, 0x165d53; syscall; 
0x00000000080827: add [rax], al; add [rax-0x73], cl; cmp eax, 0x165dff; syscall; 
0x0000000007e980: add [rax], al; add [rax-0x73], cl; cmp eax, 0x166cd6; syscall; 
0x0000000005f1a4: add [rax], al; add [rax-0x73], cl; cmp eax, 0x18745a; syscall; 
0x0000000005ef20: add [rax], al; add [rax-0x73], cl; cmp eax, 0x1876da; syscall; 
0x0000000005cd9c: add [rax], al; add [rax-0x73], cl; cmp eax, 0x18984a; syscall; 
0x0000000005cc5c: add [rax], al; add [rax-0x73], cl; cmp eax, 0x18998a; syscall; 
0x00000000052e84: add [rax], al; add [rax-0x73], cl; cmp eax, 0x193742; syscall; 
0x00000000052cc0: add [rax], al; add [rax-0x73], cl; cmp eax, 0x193906; syscall; 
0x000000000527b0: add [rax], al; add [rax-0x73], cl; cmp eax, 0x193e16; syscall; 
0x000000000503a4: add [rax], al; add [rax-0x73], cl; cmp eax, 0x195ff2; syscall; 
0x00000000050220: add [rax], al; add [rax-0x73], cl; cmp eax, 0x196176; syscall; 
0x000000000501c0: add [rax], al; add [rax-0x73], cl; cmp eax, 0x1961d6; syscall; 
0x00000000045a5c: add [rax], al; add [rax-0x73], cl; cmp eax, 0x1a0902; syscall; 
0x0000000004599c: add [rax], al; add [rax-0x73], cl; cmp eax, 0x1a09c2; syscall; 
0x000000000458d4: add [rax], al; add [rax-0x73], cl; cmp eax, 0x1a0a8a; syscall; 
0x000000000457fc: add [rax], al; add [rax-0x73], cl; cmp eax, 0x1a0b62; syscall; 
0x000000000448f4: add [rax], al; add [rax-0x73], cl; cmp eax, 0x1a11ea; syscall; 
0x0000000004482f: add [rax], al; add [rax-0x73], cl; cmp eax, 0x1a12af; syscall; 
0x0000000004468c: add [rax], al; add [rax-0x73], cl; cmp eax, 0x1a1452; syscall; 
0x000000000445b3: add [rax], al; add [rax-0x73], cl; cmp eax, 0x1a152b; syscall; 
0x0000000003d01d: add [rax], al; add [rax-0x73], cl; cmp eax, 0x1a89e1; syscall; 
0x0000000003b692: add [rax], al; add [rax-0x73], cl; cmp eax, 0x1aa334; syscall; 
0x0000000003a4e1: add [rax], al; add [rax-0x73], cl; cmp eax, 0x1ab435; syscall; 
0x0000000003a4c1: add [rax], al; add [rax-0x73], cl; cmp eax, 0x1ab455; syscall; 
0x0000000003a357: add [rax], al; add [rax-0x73], cl; cmp eax, 0x1ab5bf; syscall; 
0x0000000002ac64: add [rax], al; add [rax-0x73], cl; cmp eax, 0x1ba9f2; syscall; 
0x0000000002aaf8: add [rax], al; add [rax-0x73], cl; cmp eax, 0x1bab5e; syscall; 
0x0000000002aa00: add [rax], al; add [rax-0x73], cl; cmp eax, 0x1bac56; syscall; 
0x0000000002684e: add [rax], al; add [rax-0x73], cl; cmp eax, 0x1bf258; syscall; 
0x0000000019197c: add [rax], al; add [rax-0x73], cl; cmp eax, 0x54162; syscall; 
0x00000000191b3c: add [rax], al; add [rax-0x73], cl; cmp eax, 0x54cba; syscall; 
0x00000000191e5c: add [rax], al; add [rax-0x73], cl; cmp eax, 0x567f2; syscall; 
0x0000000015805c: add [rax], al; add [rax-0x73], cl; cmp eax, 0x9107e; syscall; 
0x00000000156d64: add [rax], al; add [rax-0x73], cl; cmp eax, 0x92376; syscall; 
0x00000000156c84: add [rax], al; add [rax-0x73], cl; cmp eax, 0x92456; syscall; 
0x00000000156a9c: add [rax], al; add [rax-0x73], cl; cmp eax, 0x9263e; syscall; 
0x00000000156a0c: add [rax], al; add [rax-0x73], cl; cmp eax, 0x926ce; syscall; 
0x0000000015696c: add [rax], al; add [rax-0x73], cl; cmp eax, 0x9276e; syscall; 
0x000000001568bc: add [rax], al; add [rax-0x73], cl; cmp eax, 0x9281e; syscall; 
0x000000001564ec: add [rax], al; add [rax-0x73], cl; cmp eax, 0x92bee; syscall; 
0x0000000014c2ec: add [rax], al; add [rax-0x73], cl; cmp eax, 0x9cbd2; syscall; 
0x0000000014c18c: add [rax], al; add [rax-0x73], cl; cmp eax, 0x9cd32; syscall; 
0x0000000014bf80: add [rax], al; add [rax-0x73], cl; cmp eax, 0x9cf3e; syscall; 
0x0000000014bde0: add [rax], al; add [rax-0x73], cl; cmp eax, 0x9d0de; syscall; 
0x0000000014bc4c: add [rax], al; add [rax-0x73], cl; cmp eax, 0x9d272; syscall; 
0x0000000014bb0c: add [rax], al; add [rax-0x73], cl; cmp eax, 0x9d3b2; syscall; 
0x0000000014b9ac: add [rax], al; add [rax-0x73], cl; cmp eax, 0x9d512; syscall; 
0x0000000014b89c: add [rax], al; add [rax-0x73], cl; cmp eax, 0x9d622; syscall; 
0x0000000014840c: add [rax], al; add [rax-0x73], cl; cmp eax, 0xa0a96; syscall; 
0x0000000013f4d8: add [rax], al; add [rax-0x73], cl; cmp eax, 0xa977e; syscall; 
0x0000000013f1a8: add [rax], al; add [rax-0x73], cl; cmp eax, 0xa9aae; syscall; 
0x0000000013ee28: add [rax], al; add [rax-0x73], cl; cmp eax, 0xa9e2e; syscall; 
0x0000000013ec2a: add [rax], al; add [rax-0x73], cl; cmp eax, 0xaa02c; syscall; 
0x0000000013eaa0: add [rax], al; add [rax-0x73], cl; cmp eax, 0xaa1b6; syscall; 
0x0000000013e863: add [rax], al; add [rax-0x73], cl; cmp eax, 0xaa3f3; syscall; 
0x0000000013de1c: add [rax], al; add [rax-0x73], cl; cmp eax, 0xaad72; syscall; 
0x0000000013dc9b: add [rax], al; add [rax-0x73], cl; cmp eax, 0xaaef3; syscall; 
0x0000000013dc61: add [rax], al; add [rax-0x73], cl; cmp eax, 0xaaf2d; syscall; 
0x0000000013db54: add [rax], al; add [rax-0x73], cl; cmp eax, 0xab03a; syscall; 
0x0000000013d314: add [rax], al; add [rax-0x73], cl; cmp eax, 0xab87a; syscall; 
0x0000000013d24c: add [rax], al; add [rax-0x73], cl; cmp eax, 0xab942; syscall; 
0x0000000013d130: add [rax], al; add [rax-0x73], cl; cmp eax, 0xaba5e; syscall; 
0x0000000013bd9d: add [rax], al; add [rax-0x73], cl; cmp eax, 0xacba1; syscall; 
0x0000000013851c: add [rax], al; add [rax-0x73], cl; cmp eax, 0xb0132; syscall; 
0x00000000138240: add [rax], al; add [rax-0x73], cl; cmp eax, 0xb040e; syscall; 
0x00000000133f60: add [rax], al; add [rax-0x73], cl; cmp eax, 0xb46da; syscall; 
0x000000001339e0: add [rax], al; add [rax-0x73], cl; cmp eax, 0xb4c3e; syscall; 
0x0000000013381c: add [rax], al; add [rax-0x73], cl; cmp eax, 0xb4dba; syscall; 
0x00000000133754: add [rax], al; add [rax-0x73], cl; cmp eax, 0xb4e22; syscall; 
0x00000000133614: add [rax], al; add [rax-0x73], cl; cmp eax, 0xb4f62; syscall; 
0x0000000013355c: add [rax], al; add [rax-0x73], cl; cmp eax, 0xb501a; syscall; 
0x00000000132e6c: add [rax], al; add [rax-0x73], cl; cmp eax, 0xb5702; syscall; 
0x00000000132b3c: add [rax], al; add [rax-0x73], cl; cmp eax, 0xb5a32; syscall; 
0x00000000132980: add [rax], al; add [rax-0x73], cl; cmp eax, 0xb5bee; syscall; 
0x00000000132466: add [rax], al; add [rax-0x73], cl; cmp eax, 0xb6064; syscall; 
0x0000000012eb74: add [rax], al; add [rax-0x73], cl; cmp eax, 0xb983a; syscall; 
0x0000000012ea34: add [rax], al; add [rax-0x73], cl; cmp eax, 0xb997a; syscall; 
0x0000000012e97c: add [rax], al; add [rax-0x73], cl; cmp eax, 0xb9a32; syscall; 
0x0000000012e890: add [rax], al; add [rax-0x73], cl; cmp eax, 0xb9b16; syscall; 
0x0000000012e6c0: add [rax], al; add [rax-0x73], cl; cmp eax, 0xb9cb6; syscall; 
0x0000000012e4fc: add [rax], al; add [rax-0x73], cl; cmp eax, 0xb9e52; syscall; 
0x0000000012e434: add [rax], al; add [rax-0x73], cl; cmp eax, 0xb9eca; syscall; 
0x0000000012e2f4: add [rax], al; add [rax-0x73], cl; cmp eax, 0xba00a; syscall; 
0x0000000012e23c: add [rax], al; add [rax-0x73], cl; cmp eax, 0xba0c2; syscall; 
0x0000000012e15c: add [rax], al; add [rax-0x73], cl; cmp eax, 0xba19a; syscall; 
0x0000000012dc90: add [rax], al; add [rax-0x73], cl; cmp eax, 0xba5ee; syscall; 
0x0000000012d6c0: add [rax], al; add [rax-0x73], cl; cmp eax, 0xbab5e; syscall; 
0x0000000012d1a0: add [rax], al; add [rax-0x73], cl; cmp eax, 0xbb036; syscall; 
0x0000000012cfd4: add [rax], al; add [rax-0x73], cl; cmp eax, 0xbb1c2; syscall; 
0x0000000012ce94: add [rax], al; add [rax-0x73], cl; cmp eax, 0xbb302; syscall; 
0x0000000012cddc: add [rax], al; add [rax-0x73], cl; cmp eax, 0xbb3ba; syscall; 
0x0000000012ccfc: add [rax], al; add [rax-0x73], cl; cmp eax, 0xbb492; syscall; 
0x0000000012c8e0: add [rax], al; add [rax-0x73], cl; cmp eax, 0xbb866; syscall; 
0x0000000012c2c4: add [rax], al; add [rax-0x73], cl; cmp eax, 0xbbe22; syscall; 
0x0000000012c16c: add [rax], al; add [rax-0x73], cl; cmp eax, 0xbbf7a; syscall; 
0x0000000012c0ac: add [rax], al; add [rax-0x73], cl; cmp eax, 0xbc03a; syscall; 
0x0000000012bfc4: add [rax], al; add [rax-0x73], cl; cmp eax, 0xbc11a; syscall; 
0x0000000012bee0: add [rax], al; add [rax-0x73], cl; cmp eax, 0xbc1c6; syscall; 
0x0000000012b880: add [rax], al; add [rax-0x73], cl; cmp eax, 0xbc7e6; syscall; 
0x0000000012b674: add [rax], al; add [rax-0x73], cl; cmp eax, 0xbc9aa; syscall; 
0x0000000012b51c: add [rax], al; add [rax-0x73], cl; cmp eax, 0xbcb02; syscall; 
0x0000000012b45c: add [rax], al; add [rax-0x73], cl; cmp eax, 0xbcbc2; syscall; 
0x0000000012b374: add [rax], al; add [rax-0x73], cl; cmp eax, 0xbcca2; syscall; 
0x0000000012a760: add [rax], al; add [rax-0x73], cl; cmp eax, 0xbd83e; syscall; 
0x0000000012a4f0: add [rax], al; add [rax-0x73], cl; cmp eax, 0xbda6e; syscall; 
0x00000000129d70: add [rax], al; add [rax-0x73], cl; cmp eax, 0xbe18e; syscall; 
0x00000000120314: add [rax], al; add [rax-0x73], cl; cmp eax, 0xc7b32; syscall; 
0x000000001201d4: add [rax], al; add [rax-0x73], cl; cmp eax, 0xc7c72; syscall; 
0x0000000012011c: add [rax], al; add [rax-0x73], cl; cmp eax, 0xc7d2a; syscall; 
0x0000000011fd42: add [rax], al; add [rax-0x73], cl; cmp eax, 0xc80fc; syscall; 
0x0000000011fb18: add [rax], al; add [rax-0x73], cl; cmp eax, 0xc82ee; syscall; 
0x0000000011f950: add [rax], al; add [rax-0x73], cl; cmp eax, 0xc846e; syscall; 
0x0000000011f78c: add [rax], al; add [rax-0x73], cl; cmp eax, 0xc85ea; syscall; 
0x0000000011f6bc: add [rax], al; add [rax-0x73], cl; cmp eax, 0xc8666; syscall; 
0x0000000011f5ec: add [rax], al; add [rax-0x73], cl; cmp eax, 0xc8736; syscall; 
0x0000000011f550: add [rax], al; add [rax-0x73], cl; cmp eax, 0xc87d2; syscall; 
0x0000000011eab4: add [rax], al; add [rax-0x73], cl; cmp eax, 0xc923a; syscall; 
0x0000000011e974: add [rax], al; add [rax-0x73], cl; cmp eax, 0xc937a; syscall; 
0x0000000011e8bc: add [rax], al; add [rax-0x73], cl; cmp eax, 0xc9432; syscall; 
0x0000000011e2c2: add [rax], al; add [rax-0x73], cl; cmp eax, 0xc9a24; syscall; 
0x0000000011e0c0: add [rax], al; add [rax-0x73], cl; cmp eax, 0xc9bce; syscall; 
0x0000000011dee0: add [rax], al; add [rax-0x73], cl; cmp eax, 0xc9d46; syscall; 
0x0000000011dd1c: add [rax], al; add [rax-0x73], cl; cmp eax, 0xc9ea2; syscall; 
0x0000000011361c: add [rax], al; add [rax-0x73], cl; cmp eax, 0xd422a; syscall; 
0x00000000113500: add [rax], al; add [rax-0x73], cl; cmp eax, 0xd4346; syscall; 
0x000000001130a0: add [rax], al; add [rax-0x73], cl; cmp eax, 0xd47a6; syscall; 
0x00000000112b6f: add [rax], al; add [rax-0x73], cl; cmp eax, 0xd4cd7; syscall; 
0x00000000101560: add [rax], al; add [rax-0x73], cl; cmp eax, 0xe6056; syscall; 
0x000000000cb64d: add [rax], al; add [rax-0x73], cl; hlt; ret; 
0x0000000014ca19: add [rax], al; add [rax-0x73], cl; jne short 0x000000000014ca28; mov rdi, r15; call qword ptr [rdx+0x10]; 
0x000000000cc8f6: add [rax], al; add [rax-0x73], cl; mov esp, 0xd024; add [rcx+rcx*4-0x12], cl; call r12; 
0x000000000453db: add [rax], al; add [rax-0x73], ecx; mov ebp, 0x988; call qword ptr [rbp+0xf90]; 
0x000000001426cd: add [rax], al; add [rax-0x75], cl; add [rax-0x7b], cl; shl byte ptr [rax+rax*2+0x41], 0x83; call qword ptr [rbx]; 
0x00000000045577: add [rax], al; add [rax-0x75], cl; add [rbx-0x75], bl; pop rax; ret; 
0x0000000009b67d: add [rax], al; add [rax-0x75], cl; add eax, 0x1478a9; call qword ptr [rax]; 
0x000000000387cd: add [rax], al; add [rax-0x75], cl; add eax, 0x1aa5d9; mov [rax], rdx; ret; 
0x0000000014d16d: add [rax], al; add [rax-0x75], cl; add eax, 0x95c11; pop rbx; ret; 
0x0000000014d09d: add [rax], al; add [rax-0x75], cl; add eax, 0x95d81; pop rbx; ret; 
0x0000000014d23d: add [rax], al; add [rax-0x75], cl; add eax, 0x95d99; pop rbx; ret; 
0x0000000014cfcd: add [rax], al; add [rax-0x75], cl; add eax, 0x95e11; pop rbx; ret; 
0x00000000085fa4: add [rax], al; add [rax-0x75], cl; and [r11+rcx*4+0x6d], r9b; sbb [rax-0x77], cl; ret far; 
0x0000000015a4f6: add [rax], al; add [rax-0x75], cl; and al, 0x10; mov rdi, [rsp+0x18]; call rax; 
0x0000000015a499: add [rax], al; add [rax-0x75], cl; and al, 0x10; mov rdi, [rsp+0x18]; call rcx; 
0x00000000148d55: add [rax], al; add [rax-0x75], cl; and al, 0x8; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x00000000098ddd: add [rax], al; add [rax-0x75], cl; je short 0x0000000000098e08; sub [rcx+rcx*4-0x19], cl; call rdx; 
0x0000000013fd90: add [rax], al; add [rax-0x75], cl; je short 0x000000000013fdbb; mov rdi, [rsp+0x38]; call qword ptr [rsp+0x68]; 
0x000000001470d7: add [rax], al; add [rax-0x75], cl; je short 0x0000000000147102; sbb [rcx+rcx*4-0x19], cl; call qword ptr [rax+0x8]; 
0x0000000009b8fd: add [rax], al; add [rax-0x75], cl; jnp short 0x000000000009b94c; call rax; 
0x000000001077b2: add [rax], al; add [rax-0x75], cl; mov ebx, 0x80; call qword ptr [rax+0x88]; 
0x000000001170b5: add [rax], al; add [rax-0x75], cl; pop rax; ret; 
0x0000000016156d: add [rax], al; add [rax-0x75], cl; test qword ptr [rbx-0x76b703aa], 0x5789f74f; cld; ret; 
0x000000000923d8: add [rax], al; add [rax-0x77], cl; add eax, 0x150eae; ret; 
0x000000000923af: add [rax], al; add [rax-0x77], cl; add eax, 0x150ecf; ret; 
0x0000000009238f: add [rax], al; add [rax-0x77], cl; add eax, 0x150ee7; ret; 
0x00000000148f48: add [rax], al; add [rax-0x77], cl; and al, 0x10; mov rax, [rsp+0x48]; call qword ptr [rax+0x28]; 
0x0000000015916f: add [rax], al; add [rax-0x77], cl; and al, 0x68; xor eax, eax; call qword ptr [r12+0xf88]; 
0x000000000b55bd: add [rax], al; add [rax-0x77], cl; clc; ret; 
0x000000001850cd: add [rax], al; add [rax-0x77], cl; clc; vzeroupper; ret; 
0x0000000002acb7: add [rax], al; add [rax-0x77], cl; enter 0x8d48, 0x5; ret far; 
0x000000000897da: add [rax], al; add [rax-0x77], cl; fidivr st, word ptr [rdi+0x2]; mov eax, r9d; syscall; 
0x00000000080e5b: add [rax], al; add [rax-0x77], cl; fimul st, dword ptr [rcx+rcx*4-0x1a]; call qword ptr [r14+0x38]; 
0x000000000982ad: add [rax], al; add [rax-0x77], cl; fistp qword ptr [rax+0xca], st; syscall; 
0x000000000ed866: add [rax], al; add [rax-0x77], cl; fmul st, dword ptr [rax-0x7d]; ret; 
0x000000000ef516: add [rax], al; add [rax-0x77], cl; fucomip st, st(0); jmp far fword ptr [rbp-0xd]; 
0x000000001206ba: add [rax], al; add [rax-0x77], cl; fucomip st, st(0); ret far; 
0x000000000b9482: add [rax], al; add [rax-0x77], cl; fucomip st, st(0); ret; 
0x00000000099222: add [rax], al; add [rax-0x77], cl; iretd; mov eax, 0xca; syscall; 
0x0000000007b495: add [rax], al; add [rax-0x77], cl; jmp rcx; 
0x0000000007e654: add [rax], al; add [rax-0x77], cl; out 0x48, al; mov edi, ebp; call qword ptr [rbx+0x90]; 
0x0000000009ace5: add [rax], al; add [rax-0x77], cl; out dx, al; mov rdi, r12; call rax; 
0x0000000014786f: add [rax], al; add [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x20]; 
0x00000000143037: add [rax], al; add [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x30]; 
0x0000000008bcb1: add [rax], al; add [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x80]; 
0x0000000007ebb9: add [rax], al; add [rax-0x77], cl; out dx, eax; call qword ptr [rbx+0x80]; 
0x0000000009b83d: add [rax], al; add [rax-0x77], cl; out dx, eax; call rax; 
0x00000000142028: add [rax], al; add [rax-0x77], cl; out dx, eax; lea r9, [rsp+0x20]; call qword ptr [rax]; 
0x00000000148647: add [rax], al; add [rax-0x77], cl; out dx, eax; mov [r12+0x70], edx; call qword ptr [rax+0x30]; 
0x00000000091900: add [rax], al; add [rax-0x77], cl; out dx, eax; mov eax, 0xca; syscall; 
0x00000000086d9d: add [rax], al; add [rax-0x77], cl; push 0xffffffffa5058b48; call qword ptr [rdx]; 
0x00000000042bff: add [rax], al; add [rax-0x77], cl; ret far; 
0x00000000059c3a: add [rax], al; add [rax-0x77], cl; ret; 
0x0000000004ee9f: add [rax], al; add [rax-0x77], cl; ret; 
0x000000001909d5: add [rax], al; add [rax-0x77], cl; ror dword ptr [rax+0x9], cl; ret far; 
0x00000000159501: add [rax], al; add [rax-0x77], cl; sbb [r9-0x73], r9b; mov ebp, 0x988; call qword ptr [r13+0xf90]; 
0x000000000757a0: add [rax], al; add [rax-0x77], cl; sti; jmp rsi; 
0x0000000007b21a: add [rax], al; add [rax-0x77], cl; xor r12d, r12d; jmp rcx; 
0x0000000007b182: add [rax], al; add [rax-0x77], cl; xrelease mov dword ptr [rsp+0x28], 0x20; jmp rcx; 
0x00000000141761: add [rax], al; add [rax-0x77], ecx; out dx, eax; call qword ptr [rax+0x18]; 
0x00000000190c6c: add [rax], al; add [rax-0x7ab70000], al; ret; 
0x0000000007f475: add [rax], al; add [rax-0x7b], cl; shl byte ptr [rbx+rdx+0x48], 0x8b; mov edi, 0xe0; jmp rax; 
0x0000000007f395: add [rax], al; add [rax-0x7b], cl; shl byte ptr [rcx+rcx+0x48], 0x8b; mov edi, 0xe0; jmp rax; 
0x0000000009836b: add [rax], al; add [rax-0x7d], cl; call far fword ptr [rdi]; 
0x00000000098361: add [rax], al; add [rax-0x7d], cl; call qword ptr [rax]; 
0x00000000096a2d: add [rax], al; add [rax-0x7d], cl; jmp qword ptr [rax]; 
0x000000000358ad: add [rax], al; add [rax-0x7d], cl; ret; 
0x0000000007926d: add [rax], al; add [rax-0x8e443], al; jmp qword ptr [rax]; 
0x0000000010ccfc: add [rax], al; add [rax-0xe69c418], dl; jmp qword ptr [rsi-0x7d]; 
0x0000000010887b: add [rax], al; add [rax], al; add [rax+0x10c], bh; syscall; 
0x0000000018a83a: add [rax], al; add [rax], al; add [rax+0x1478d48], dl; ret; 
0x000000000b55ca: add [rax], al; add [rax], al; add [rax+0x1788168a], dl; lea rax, [rdi+0x1]; ret; 
0x0000000009b8cb: add [rax], al; add [rax], al; add [rax+0x1], bh; ret; 
0x000000000473db: add [rax], al; add [rax], al; add [rax+0x39], cl; ret far; 
0x000000000408a4: add [rax], al; add [rax], al; add [rax+0x48c22148], al; mov [rdi], edx; ret; 
0x000000000bef0b: add [rax], al; add [rax], al; add [rax+0x63], cl; ret; 
0x00000000040874: add [rax], al; add [rax], al; add [rax+0x66c22148], al; movq mm0, rdx; ret; 
0x000000000b478b: add [rax], al; add [rax], al; add [rax+0x78d4837], cl; ret; 
0x000000000edecb: add [rax], al; add [rax], al; add [rax+0xc], bh; ret; 
0x0000000013712b: add [rax], al; add [rax], al; add [rax-0x1], bh; pop rbx; ret; 
0x000000000425fb: add [rax], al; add [rax], al; add [rax-0x1], bh; ret; 
0x000000000d2aab: add [rax], al; add [rax], al; add [rax-0x41], cl; ret; 
0x0000000010894a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x102; syscall; 
0x0000000010a9aa: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x107; syscall; 
0x0000000010a8ea: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x10a; syscall; 
0x0000000011a03a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x110; syscall; 
0x0000000011a09a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x11b; syscall; 
0x00000000119d3a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x123; syscall; 
0x000000001095ca: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x124; syscall; 
0x0000000010962a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x125; syscall; 
0x00000000119e5a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x126; syscall; 
0x0000000011a0ca: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x12c; syscall; 
0x0000000011a15a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x13f; syscall; 
0x0000000011a18a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x14a; syscall; 
0x0000000011a1ba: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x14b; syscall; 
0x000000001095fa: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x16; syscall; 
0x000000000fd22a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x18; syscall; 
0x000000001139da: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x1b; syscall; 
0x0000000010959a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x21; syscall; 
0x0000000011a92a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x29; syscall; 
0x0000000011a3ea: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x33; syscall; 
0x0000000010971a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x51; syscall; 
0x0000000010a9da: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x54; syscall; 
0x0000000010a91a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x59; syscall; 
0x0000000010871a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x5b; syscall; 
0x0000000010a00a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x5c; syscall; 
0x0000000010a03a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x5d; syscall; 
0x0000000010a06a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x5e; syscall; 
0x000000000de57a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x64; syscall; 
0x00000000119eba: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x67; syscall; 
0x000000000dfdda: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x6d; syscall; 
0x000000000dfe0a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x6f; syscall; 
0x000000000dfe6a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x70; syscall; 
0x000000000dfe9a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x76; syscall; 
0x000000000dfeca: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x78; syscall; 
0x000000001192da: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x7b; syscall; 
0x00000000119c7a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x7e; syscall; 
0x0000000011a06a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x86; syscall; 
0x000000001085ba: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x8a; syscall; 
0x000000000fd19a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x8f; syscall; 
0x000000000fd1ca: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x90; syscall; 
0x000000000fd1fa: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x91; syscall; 
0x000000000fd25a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x92; syscall; 
0x000000000fd28a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x93; syscall; 
0x000000000fd2ba: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x94; syscall; 
0x00000000113a6a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x96; syscall; 
0x00000000113a9a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x97; syscall; 
0x00000000113aca: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x98; syscall; 
0x00000000119bda: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x9a; syscall; 
0x00000000119f7a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x9b; syscall; 
0x000000001100ca: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0xa1; syscall; 
0x000000001105ba: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0xa7; syscall; 
0x000000001105ea: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0xa8; syscall; 
0x000000001138da: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0xa; syscall; 
0x0000000011919a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0xac; syscall; 
0x00000000119caa: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0xae; syscall; 
0x00000000119cda: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0xb0; syscall; 
0x000000001138aa: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0xb; syscall; 
0x0000000011a1ea: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0xba; syscall; 
0x00000000116f9a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0xc6; syscall; 
0x00000000116e7a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0xc7; syscall; 
0x00000000119d0a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0xd5; syscall; 
0x00000000119c0a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0xe4; syscall; 
0x00000000119e2a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0xfd; syscall; 
0x00000000119e8a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0xff; syscall; 
0x00000000028baa: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; ret; 
0x0000000014338b: add [rax], al; add [rax], al; add [rax-0x73], cl; adc eax, 0x9f7a9; jmp qword ptr [rdx+rax*8]; 
0x0000000003737b: add [rax], al; add [rax], al; add [rax-0x73], cl; add eax, 0x176e5b; ret; 
0x000000000cb65b: add [rax], al; add [rax], al; add [rax-0x73], cl; clc; ret; 
0x000000000cb66b: add [rax], al; add [rax], al; add [rax-0x73], cl; cld; ret; 
0x000000000cb64b: add [rax], al; add [rax], al; add [rax-0x73], cl; hlt; ret; 
0x0000000009b67b: add [rax], al; add [rax], al; add [rax-0x75], cl; add eax, 0x1478a9; call qword ptr [rax]; 
0x000000000b55bb: add [rax], al; add [rax], al; add [rax-0x77], cl; clc; ret; 
0x0000000007bf5b: add [rax], al; add [rax], al; add [rax-0x77], cl; jmp rcx; 
0x0000000009b83b: add [rax], al; add [rax], al; add [rax-0x77], cl; out dx, eax; call rax; 
0x0000000018fe4b: add [rax], al; add [rax], al; add [rax-0x77], cl; ret; 
0x00000000190c6a: add [rax], al; add [rax], al; add [rax-0x7ab70000], al; ret; 
0x000000000358ab: add [rax], al; add [rax], al; add [rax-0x7d], cl; ret; 
0x0000000007926b: add [rax], al; add [rax], al; add [rax-0x8e443], al; jmp qword ptr [rax]; 
0x000000001437a0: add [rax], al; add [rax], al; add [rax], al; mov rdi, r12; call qword ptr [rax+0x28]; 
0x0000000009ee61: add [rax], al; add [rax], al; add [rbp+0x41], bl; pop rsp; ret; 
0x000000000e6bdb: add [rax], al; add [rax], al; add [rbp-0x7fbf6088], cl; call far fword ptr [rax]; 
0x000000001354eb: add [rax], al; add [rax], al; add [rbx+0x3b83b], cl; add [rax], al; syscall; 
0x000000000b318b: add [rax], al; add [rax], al; add [rbx+0x477880e], cl; mov [rdi], ecx; ret; 
0x0000000017794b: add [rax], al; add [rax], al; add [rbx+0x48028901], cl; mov eax, edi; ret; 
0x00000000147ca3: add [rax], al; add [rax], al; add [rbx+0x5d], bl; pop r12; ret; 
0x000000000440ab: add [rax], al; add [rax], al; add [rbx+rcx*4+0x63], cl; or [rax-0x7d], cl; ret; 
0x000000001261eb: add [rax], al; add [rax], al; add [rbx-0x7cb7e7ad], cl; ret; 
0x0000000013c215: add [rax], al; add [rax], al; add [rbx-0x7cb7efab], cl; ret; 
0x0000000013c0e3: add [rax], al; add [rax], al; add [rbx-0x7cb7efbb], cl; ret; 
0x000000000ba76b: add [rax], al; add [rax], al; add [rbx-0x7cb7fb85], cl; ret; 
0x000000000b8efb: add [rax], al; add [rax], al; add [rbx-0x7cb7fb8d], cl; ret; 
0x000000000b79fb: add [rax], al; add [rax], al; add [rcx+0x1], cl; ret; 
0x0000000017225b: add [rax], al; add [rax], al; add [rcx+0x3518911], cl; ret; 
0x000000001437a1: add [rax], al; add [rax], al; add [rcx+rcx*4-0x19], cl; call qword ptr [rax+0x28]; 
0x0000000009387b: add [rax], al; add [rax], al; add [rcx+rcx*4-0x19], cl; neg rdi; call qword ptr [r13]; 
0x00000000099a1b: add [rax], al; add [rax], al; add [rcx+rcx*4-0x1a], cl; call rax; 
0x000000001289fb: add [rax], al; add [rax], al; add [rcx+rcx*4-0x40], cl; ret; 
0x0000000018257b: add [rax], al; add [rax], al; add [rcx+rcx*4-0x40], cl; vzeroupper; ret; 
0x000000000be70b: add [rax], al; add [rax], al; add [rcx-0x7d], cl; ret; 
0x0000000018583b: add [rax], al; add [rax], al; add [rcx], dh; ror byte ptr [rbx+0x75163b17], 0xe4; ret; 
0x0000000008d59b: add [rax], al; add [rax], al; add [rdi+0x1590ca05], al; add [rbx+0x307f01f8], al; ret; 
0x0000000011b75b: add [rax], al; add [rax], al; add [rdx+0x40], bh; mov eax, 0x14; syscall; 
0x0000000011c2ab: add [rax], al; add [rax], al; add [rsi+0xf], ah; outsd dx, [rsi]; ret; 
0x0000000009b279: add [rax], al; add [rax], al; add [rsi-0x70], ah; endbr64; ret; 
0x00000000172209: add [rax], al; add [rax], al; add [rsi-0x70], ah; mov [rcx], dx; ret; 
0x000000000b4149: add [rax], al; add [rax], al; add [rsi-0x70], ah; mov [rdi], dx; ret; 
0x000000000cb359: add [rax], al; add [rax], al; add [rsi-0x70], ah; xor rax, rax; ret; 
0x00000000083e6b: add [rax], al; add [rax], al; add al, ch; ret far; 
0x00000000191bab: add [rax], al; add [rax], al; add bh, bh; adc ecx, [rax-0x7d]; ret; 
0x00000000191d9b: add [rax], al; add [rax], al; add bl, al; nop [rax]; ret; 
0x0000000012a4c3: add [rax], al; add [rax], al; add bl, ch; ret far; 
0x000000000b421b: add [rax], al; add [rax], al; add bl, dh; movq [rdi-0x1], mm0; ret; 
0x000000000b422b: add [rax], al; add [rax], al; add bl, dh; movq [rdi], mm0; ret; 
0x000000001274eb: add [rax], al; add [rax], al; add bl, dh; nop edx, edi; ret; 
0x000000000cbafc: add [rax], al; add [rax], al; add rax, 0x3; ret; 
0x00000000097bfc: add [rax], al; add [rax], al; add rsp, 0x18; ret; 
0x00000000110e10: add [rax], al; add [rax], al; add rsp, 0x8; ret; 
0x000000000409dc: add [rax], al; add [rax], al; addsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x0000000009116c: add [rax], al; add [rax], al; and dword ptr [rdi+0x8], 0xfffffffb; xor eax, eax; ret; 
0x000000000a845c: add [rax], al; add [rax], al; bsf eax, eax; add rax, rdi; ret; 
0x000000000a846c: add [rax], al; add [rax], al; bsf eax, eax; lea rax, [rax+rdi+0x10]; ret; 
0x000000000a847c: add [rax], al; add [rax], al; bsf eax, eax; lea rax, [rax+rdi+0x20]; ret; 
0x000000000a893c: add [rax], al; add [rax], al; bsr eax, eax; lea rax, [rax+rdi+0x10]; ret; 
0x000000000a894c: add [rax], al; add [rax], al; bsr eax, eax; lea rax, [rax+rdi+0x20]; ret; 
0x000000000a895c: add [rax], al; add [rax], al; bsr eax, eax; lea rax, [rax+rdi+0x30]; ret; 
0x000000001423c3: add [rax], al; add [rax], al; call qword ptr [rax+0x20]; 
0x00000000141748: add [rax], al; add [rax], al; call qword ptr [rax+0x28]; 
0x00000000191bac: add [rax], al; add [rax], al; call qword ptr [rbx]; 
0x00000000137ad7: add [rax], al; add [rax], al; call rax; 
0x0000000010d7e8: add [rax], al; add [rax], al; cmova eax, edx; ret; 
0x0000000011aedb: add [rax], al; add [rax], al; cmovb rax, rdx; ret; 
0x00000000110679: add [rax], al; add [rax], al; cmove rax, rbx; pop rbx; ret; 
0x0000000009f657: add [rax], al; add [rax], al; cmove rax, rdx; ret; 
0x00000000156345: add [rax], al; add [rax], al; cmovne rax, rdx; add rsp, 0x8; ret; 
0x0000000012160c: add [rax], al; add [rax], al; cmovns rax, [rbx+0x28]; pop rbx; ret; 
0x0000000011a12c: add [rax], al; add [rax], al; endbr64; mov eax, 0x134; syscall; 
0x0000000014135c: add [rax], al; add [rax], al; endbr64; mov eax, 0x1; ret; 
0x0000000011a8fc: add [rax], al; add [rax], al; endbr64; mov eax, 0x30; syscall; 
0x0000000011a44c: add [rax], al; add [rax], al; endbr64; mov eax, 0x32; syscall; 
0x0000000010a97c: add [rax], al; add [rax], al; endbr64; mov eax, 0x57; syscall; 
0x0000000010a8bc: add [rax], al; add [rax], al; endbr64; mov eax, 0x58; syscall; 
0x0000000011a00c: add [rax], al; add [rax], al; endbr64; mov eax, 0x63; syscall; 
0x00000000119c4c: add [rax], al; add [rax], al; endbr64; mov eax, 0x7d; syscall; 
0x000000001194dc: add [rax], al; add [rax], al; endbr64; mov eax, 0x87; syscall; 
0x00000000113a3c: add [rax], al; add [rax], al; endbr64; mov eax, 0x95; syscall; 
0x0000000011058c: add [rax], al; add [rax], al; endbr64; mov eax, 0x99; syscall; 
0x0000000011009c: add [rax], al; add [rax], al; endbr64; mov eax, 0xa3; syscall; 
0x00000000119d9c: add [rax], al; add [rax], al; endbr64; mov eax, 0xb1; syscall; 
0x00000000119f4c: add [rax], al; add [rax], al; endbr64; mov eax, 0xb4; syscall; 
0x00000000116f0c: add [rax], al; add [rax], al; endbr64; mov eax, 0xc2; syscall; 
0x00000000116f6c: add [rax], al; add [rax], al; endbr64; mov eax, 0xc3; syscall; 
0x00000000116e4c: add [rax], al; add [rax], al; endbr64; mov eax, 0xc4; syscall; 
0x00000000116ffc: add [rax], al; add [rax], al; endbr64; mov eax, 0xc5; syscall; 
0x000000000fd35c: add [rax], al; add [rax], al; endbr64; mov eax, 0xcb; syscall; 
0x00000000119dfc: add [rax], al; add [rax], al; endbr64; mov eax, 0xfe; syscall; 
0x0000000008e4ac: add [rax], al; add [rax], al; endbr64; mov eax, 0xffffffff; ret; 
0x0000000008fe5c: add [rax], al; add [rax], al; endbr64; mov rax, [rdi+0x68]; ret; 
0x0000000008fe3c: add [rax], al; add [rax], al; endbr64; mov rax, [rip+0x154775]; ret; 
0x0000000002a6bc: add [rax], al; add [rax], al; endbr64; mov rax, [rip+0x1baf9d]; ret; 
0x0000000008fe6c: add [rax], al; add [rax], al; endbr64; mov rax, rdi; ret; 
0x000000001274ec: add [rax], al; add [rax], al; endbr64; ret; 
0x0000000014157c: add [rax], al; add [rax], al; endbr64; xor eax, eax; ret; 
0x00000000040538: add [rax], al; add [rax], al; fld st, tbyte ptr [rsp-0x18]; ret; 
0x0000000005314a: add [rax], al; add [rax], al; jne short 0x0000000000053153; push r10; ret; 
0x00000000053623: add [rax], al; add [rax], al; jne short 0x000000000005362c; push r10; ret; 
0x0000000018a84c: add [rax], al; add [rax], al; lea rax, [rdi+0x2]; ret; 
0x0000000018a85c: add [rax], al; add [rax], al; lea rax, [rdi+0x3]; ret; 
0x0000000018a86c: add [rax], al; add [rax], al; lea rax, [rdi+0x4]; ret; 
0x0000000018a87c: add [rax], al; add [rax], al; lea rax, [rdi+0x5]; ret; 
0x0000000018a88c: add [rax], al; add [rax], al; lea rax, [rdi+0x6]; ret; 
0x0000000018a89c: add [rax], al; add [rax], al; lea rax, [rdi+0x8]; ret; 
0x0000000018a8ac: add [rax], al; add [rax], al; lea rax, [rdi+0x9]; ret; 
0x0000000018a8bc: add [rax], al; add [rax], al; lea rax, [rdi+0xa]; ret; 
0x0000000018a8cc: add [rax], al; add [rax], al; lea rax, [rdi+0xb]; ret; 
0x0000000018a8dc: add [rax], al; add [rax], al; lea rax, [rdi+0xc]; ret; 
0x0000000018a8ec: add [rax], al; add [rax], al; lea rax, [rdi+0xd]; ret; 
0x0000000018a8fc: add [rax], al; add [rax], al; lea rax, [rdi+0xe]; ret; 
0x000000000cb66c: add [rax], al; add [rax], al; lea rax, [rdi-0x4]; ret; 
0x000000000cb65c: add [rax], al; add [rax], al; lea rax, [rdi-0x8]; ret; 
0x000000000cb64c: add [rax], al; add [rax], al; lea rax, [rdi-0xc]; ret; 
0x0000000003737c: add [rax], al; add [rax], al; lea rax, [rip+0x176e5b]; ret; 
0x0000000014338c: add [rax], al; add [rax], al; lea rdx, [rip+0x9f7a9]; jmp qword ptr [rdx+rax*8]; 
0x000000000a4dac: add [rax], al; add [rax], al; mov [rax], ecx; ret; 
0x0000000017225c: add [rax], al; add [rax], al; mov [rcx], edx; mov [rcx+0x3], edx; ret; 
0x0000000017224c: add [rax], al; add [rax], al; mov [rcx], edx; mov [rcx+0x4], dx; ret; 
0x0000000017222c: add [rax], al; add [rax], al; mov [rcx], edx; ret; 
0x000000001722bc: add [rax], al; add [rax], al; mov [rcx], rdx; mov [rcx+0x5], rdx; ret; 
0x000000001722cc: add [rax], al; add [rax], al; mov [rcx], rdx; mov [rcx+0x6], rdx; ret; 
0x0000000017229c: add [rax], al; add [rax], al; mov [rcx], rdx; mov [rcx+0x7], edx; ret; 
0x000000001722dc: add [rax], al; add [rax], al; mov [rcx], rdx; mov [rcx+0x7], rdx; ret; 
0x0000000017228c: add [rax], al; add [rax], al; mov [rcx], rdx; mov [rcx+0x8], dx; ret; 
0x000000001722ac: add [rax], al; add [rax], al; mov [rcx], rdx; mov [rcx+0x8], edx; ret; 
0x000000001722ec: add [rax], al; add [rax], al; mov [rcx], rdx; mov [rcx+0x8], rdx; ret; 
0x0000000017226c: add [rax], al; add [rax], al; mov [rcx], rdx; ret; 
0x000000000b419c: add [rax], al; add [rax], al; mov [rdi-0x1], rdx; ret; 
0x000000000b478c: add [rax], al; add [rax], al; mov [rdi], dh; lea rax, [rdi]; ret; 
0x000000000b314c: add [rax], al; add [rax], al; mov [rdi], dh; ret; 
0x0000000018411c: add [rax], al; add [rax], al; mov [rdi], dx; vzeroupper; ret; 
0x000000000a4e7c: add [rax], al; add [rax], al; mov [rdi], ecx; lea rax, [rdi+rax-0x1]; ret; 
0x000000000b418c: add [rax], al; add [rax], al; mov [rdi], edx; mov [rdi+0x4], dx; ret; 
0x000000000b41fc: add [rax], al; add [rax], al; mov [rdi], rdx; mov [rdi+0x5], rdx; ret; 
0x000000000b420c: add [rax], al; add [rax], al; mov [rdi], rdx; mov [rdi+0x6], rdx; ret; 
0x000000000b41dc: add [rax], al; add [rax], al; mov [rdi], rdx; mov [rdi+0x7], edx; ret; 
0x000000000b41cc: add [rax], al; add [rax], al; mov [rdi], rdx; mov [rdi+0x8], dx; ret; 
0x000000000b41ec: add [rax], al; add [rax], al; mov [rdi], rdx; mov [rdi+0x8], edx; ret; 
0x000000000b41ac: add [rax], al; add [rax], al; mov [rdi], rdx; ret; 
0x000000000a4cbc: add [rax], al; add [rax], al; mov [rdi], si; add rax, rdi; ret; 
0x000000000a4e4c: add [rax], al; add [rax], al; mov [rdi], si; lea rax, [rdi+rax-0x1]; ret; 
0x00000000142f91: add [rax], al; add [rax], al; mov [rsi+0x10], rax; ret; 
0x00000000148f46: add [rax], al; add [rax], al; mov [rsp+0x10], rax; mov rax, [rsp+0x48]; call qword ptr [rax+0x28]; 
0x0000000014d626: add [rax], al; add [rax], al; mov [rsp+0x38], rdx; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x000000000a4d84: add [rax], al; add [rax], al; mov byte ptr [rax], 0x0; ret; 
0x0000000011b83d: add [rax], al; add [rax], al; mov byte ptr [rbp-0x7ca], 0x0; mov byte ptr [rbp-0x7c9], 0x73; syscall; 
0x000000000e7dec: add [rax], al; add [rax], al; mov byte ptr [rdi+0x8], 0x15; mov eax, 0x1; ret; 
0x000000000e7e1c: add [rax], al; add [rax], al; mov byte ptr [rdi+0x8], 0x1a; mov eax, 0x2; ret; 
0x000000000749b4: add [rax], al; add [rax], al; mov byte ptr [rsp+0x38], 0x20; jmp rsi; 
0x00000000142f7c: add [rax], al; add [rax], al; mov dword ptr [rsi], 0x8; ret; 
0x00000000142f6c: add [rax], al; add [rax], al; mov dword ptr [rsi], 0xa; ret; 
0x00000000142f5c: add [rax], al; add [rax], al; mov dword ptr [rsi], 0xb; ret; 
0x0000000007a4c7: add [rax], al; add [rax], al; mov dword ptr [rsp+0x28], 0x20; jmp rcx; 
0x0000000007a4bf: add [rax], al; add [rax], al; mov dword ptr [rsp+0x3c], 0x0; mov dword ptr [rsp+0x28], 0x20; jmp rcx; 
0x0000000007bf34: add [rax], al; add [rax], al; mov dword ptr [rsp+0x3c], 0x1; mov rbx, rsi; jmp rcx; 
0x000000000749ab: add [rax], al; add [rax], al; mov dword ptr [rsp+0x54], 0x0; mov byte ptr [rsp+0x38], 0x20; jmp rsi; 
0x0000000007622c: add [rax], al; add [rax], al; mov dword ptr [rsp+0x54], 0x1; mov rbx, rdi; jmp rsi; 
0x000000000b3e4c: add [rax], al; add [rax], al; mov dx, [rsi]; mov [rdi], dx; ret; 
0x00000000136b53: add [rax], al; add [rax], al; mov eax, 0x102; cmovne eax, edx; ret; 
0x0000000010887c: add [rax], al; add [rax], al; mov eax, 0x10c; syscall; 
0x00000000055b90: add [rax], al; add [rax], al; mov eax, 0x1; ret; 
0x00000000055d9e: add [rax], al; add [rax], al; mov eax, 0x2; ret; 
0x000000001377fc: add [rax], al; add [rax], al; mov eax, 0x7fffffff; ret; 
0x000000001198c4: add [rax], al; add [rax], al; mov eax, 0x95; syscall; 
0x000000000edecc: add [rax], al; add [rax], al; mov eax, 0xc; ret; 
0x0000000013712c: add [rax], al; add [rax], al; mov eax, 0xffffffff; pop rbx; ret; 
0x000000000425fc: add [rax], al; add [rax], al; mov eax, 0xffffffff; ret; 
0x00000000045733: add [rax], al; add [rax], al; mov eax, [rax+0x58]; ret; 
0x000000000deb3c: add [rax], al; add [rax], al; mov eax, edx; syscall; 
0x000000001354ec: add [rax], al; add [rax], al; mov edi, [rbx]; mov eax, 0x3; syscall; 
0x0000000011b75c: add [rax], al; add [rax], al; mov edx, 0x40; mov eax, 0x14; syscall; 
0x0000000016782c: add [rax], al; add [rax], al; mov edx, [rsi]; mov [rdi], edx; ret; 
0x0000000014a84c: add [rax], al; add [rax], al; mov esi, [rbx+0x88]; mov rdi, r15; call qword ptr [rax+0x28]; 
0x0000000008edc0: add [rax], al; add [rax], al; mov qword ptr [rax+0x8], 0x0; ret; 
0x00000000151a88: add [rax], al; add [rax], al; mov qword ptr [rdi+0x20], 0x0; ret; 
0x0000000008ff4b: add [rax], al; add [rax], al; mov qword ptr [rip+0x15671e], 0x0; ret; 
0x0000000011bd62: add [rax], al; add [rax], al; mov qword ptr [rip+0xc760f], 0x0; ret; 
0x000000001125f2: add [rax], al; add [rax], al; mov qword ptr [rip+0xd518f], 0x0; add rsp, 0x8; ret; 
0x000000000895cc: add [rax], al; add [rax], al; mov r8d, 0x1; mov eax, r8d; ret; 
0x000000000ff776: add [rax], al; add [rax], al; mov r9, rbx; add r8, r13; call r14; 
0x000000000cbb2c: add [rax], al; add [rax], al; mov rax, 0x2; ret; 
0x000000000cbb3c: add [rax], al; add [rax], al; mov rax, 0x3; ret; 
0x000000000cbb4c: add [rax], al; add [rax], al; mov rax, 0x4; ret; 
0x000000000cbb5c: add [rax], al; add [rax], al; mov rax, 0x5; ret; 
0x000000000cbb6c: add [rax], al; add [rax], al; mov rax, 0x6; ret; 
0x000000000cbb7c: add [rax], al; add [rax], al; mov rax, 0x7; ret; 
0x0000000013777c: add [rax], al; add [rax], al; mov rax, 0xffffffffffffffff; mov rdx, 0xffffffffffffffff; ret; 
0x000000001170b4: add [rax], al; add [rax], al; mov rax, [rax+0x58]; ret; 
0x00000000150e8c: add [rax], al; add [rax], al; mov rax, [rdi+0x8]; jmp qword ptr [rax+0x48]; 
0x00000000150f3c: add [rax], al; add [rax], al; mov rax, [rdi+0x8]; lea rsi, [rsp+0x4]; call qword ptr [rax+0x40]; 
0x00000000143d3c: add [rax], al; add [rax], al; mov rax, [rdi+0x8]; mov rsi, rsp; call qword ptr [rax]; 
0x0000000009b67c: add [rax], al; add [rax], al; mov rax, [rip+0x1478a9]; call qword ptr [rax]; 
0x0000000014d16c: add [rax], al; add [rax], al; mov rax, [rip+0x95c11]; pop rbx; ret; 
0x0000000014d09c: add [rax], al; add [rax], al; mov rax, [rip+0x95d81]; pop rbx; ret; 
0x0000000014d23c: add [rax], al; add [rax], al; mov rax, [rip+0x95d99]; pop rbx; ret; 
0x0000000014cfcc: add [rax], al; add [rax], al; mov rax, [rip+0x95e11]; pop rbx; ret; 
0x0000000003738c: add [rax], al; add [rax], al; mov rax, [rsi+rax*8+0x80]; ret; 
0x0000000015a4f5: add [rax], al; add [rax], al; mov rax, [rsp+0x10]; mov rdi, [rsp+0x18]; call rax; 
0x00000000148d54: add [rax], al; add [rax], al; mov rax, [rsp+0x8]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x000000001289fc: add [rax], al; add [rax], al; mov rax, r8; ret; 
0x0000000018257c: add [rax], al; add [rax], al; mov rax, r8; vzeroupper; ret; 
0x000000000b55bc: add [rax], al; add [rax], al; mov rax, rdi; ret; 
0x000000001850cc: add [rax], al; add [rax], al; mov rax, rdi; vzeroupper; ret; 
0x0000000007bf5c: add [rax], al; add [rax], al; mov rbx, rsi; jmp rcx; 
0x000000001412de: add [rax], al; add [rax], al; mov rcx, r15; call rbp; 
0x0000000009b8fc: add [rax], al; add [rax], al; mov rdi, [rbx+0x48]; call rax; 
0x000000001437a2: add [rax], al; add [rax], al; mov rdi, r12; call qword ptr [rax+0x28]; 
0x0000000009387c: add [rax], al; add [rax], al; mov rdi, r12; neg rdi; call qword ptr [r13]; 
0x0000000014e739: add [rax], al; add [rax], al; mov rdi, r13; call qword ptr [rax+0x28]; 
0x0000000009b83c: add [rax], al; add [rax], al; mov rdi, rbp; call rax; 
0x0000000014b75c: add [rax], al; add [rax], al; mov rdx, [rdi+0x8]; mov [rsp], rax; call qword ptr [rdx+0x20]; 
0x0000000016766c: add [rax], al; add [rax], al; mov rdx, [rsi]; mov [rdi], rdx; ret; 
0x00000000098ddc: add [rax], al; add [rax], al; mov rsi, [rsp+0x28]; mov rdi, r12; call rdx; 
0x00000000099a1c: add [rax], al; add [rax], al; mov rsi, r12; call rax; 
0x000000000b421c: add [rax], al; add [rax], al; movdqu [rdi-0x1], xmm0; ret; 
0x000000000b422c: add [rax], al; add [rax], al; movdqu [rdi], xmm0; ret; 
0x000000000845e5: add [rax], al; add [rax], al; movups [rax+0x40], xmm0; pop rbx; ret; 
0x0000000013c9a3: add [rax], al; add [rax], al; movups [rax], xmm0; add rsp, 0x8; ret; 
0x00000000126222: add [rax], al; add [rax], al; movups [rbp-0x78], xmm7; call rcx; 
0x0000000008df51: add [rax], al; add [rax], al; movups [rbx+0x48], xmm0; pop rbx; ret; 
0x000000000faf6a: add [rax], al; add [rax], al; movups [rsi+0x8], xmm0; ret; 
0x000000000b84ec: add [rax], al; add [rax], al; movzx eax, cl; pop rbx; ret; 
0x0000000016797c: add [rax], al; add [rax], al; movzx edx, byte ptr [rsi]; mov [rdi], dl; ret; 
0x0000000016790c: add [rax], al; add [rax], al; movzx edx, word ptr [rsi]; mov [rdi], dx; ret; 
0x0000000011f328: add [rax], al; add [rax], al; nop [rax]; endbr64; ret; 
0x000000001721f8: add [rax], al; add [rax], al; nop [rax]; mov [rcx], dl; ret; 
0x000000000b4138: add [rax], al; add [rax], al; nop [rax]; mov [rdi], dl; ret; 
0x00000000041948: add [rax], al; add [rax], al; nop [rax]; mov rax, 0xf; syscall; 
0x000000000b2aa8: add [rax], al; add [rax], al; nop [rax]; mov rax, rdi; ret; 
0x000000000b3e28: add [rax], al; add [rax], al; nop [rax]; ret; 
0x0000000018c698: add [rax], al; add [rax], al; nop [rax]; xor eax, eax; ret; 
0x000000000a89d9: add [rax], al; add [rax], al; nop [rax]; xor eax, eax; ret; 
0x00000000028bab: add [rax], al; add [rax], al; nop; endbr64; ret; 
0x0000000018a83b: add [rax], al; add [rax], al; nop; lea rax, [rdi+0x1]; ret; 
0x0000000018a82b: add [rax], al; add [rax], al; nop; lea rax, [rdi]; ret; 
0x000000000b415b: add [rax], al; add [rax], al; nop; mov [rdi-0x1], edx; ret; 
0x000000000b416b: add [rax], al; add [rax], al; nop; mov [rdi], edx; ret; 
0x000000000cbb1b: add [rax], al; add [rax], al; nop; mov rax, 0x1; ret; 
0x000000000408a5: add [rax], al; add [rax], al; or byte ptr [rax+0x21], 0xc2; mov [rdi], rdx; ret; 
0x00000000040875: add [rax], al; add [rax], al; or byte ptr [rax+0x21], 0xc2; movq xmm0, rdx; ret; 
0x0000000009ee62: add [rax], al; add [rax], al; pop rbp; pop r12; ret; 
0x000000000c60b4: add [rax], al; add [rax], al; pop rbp; ret; 
0x000000000b84a7: add [rax], al; add [rax], al; pop rbx; cmove rax, rdx; ret; 
0x0000000003485a: add [rax], al; add [rax], al; pop rbx; ret; 
0x00000000029040: add [rax], al; add [rax], al; ret; 
0x000000001379ef: add [rax], al; add [rax], al; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000001835ae: add [rax], al; add [rax], al; vzeroupper; ret; 
0x0000000017e67c: add [rax], al; add [rax], al; vzeroupper; xor eax, eax; ret; 
0x0000000009b27a: add [rax], al; add [rax], al; xchg ax, ax; endbr64; ret; 
0x0000000017220a: add [rax], al; add [rax], al; xchg ax, ax; mov [rcx], dx; ret; 
0x000000000b414a: add [rax], al; add [rax], al; xchg ax, ax; mov [rdi], dx; ret; 
0x000000000cb35a: add [rax], al; add [rax], al; xchg ax, ax; xor rax, rax; ret; 
0x0000000009bf96: add [rax], al; add [rax], al; xor eax, eax; mov [r8], rsi; ret; 
0x0000000003f8a4: add [rax], al; add [rax], al; xor eax, eax; ret; 
0x000000000b83fc: add [rax], al; add [rax], al; xor edx, edx; mov eax, edx; ret; 
0x00000000139e84: add [rax], al; add [rax], al; xor r10d, r10d; mov eax, r10d; ret; 
0x0000000008a834: add [rax], al; add [rax], al; xor r8d, r8d; mov rax, r8; ret; 
0x000000000cb67c: add [rax], al; add [rax], al; xor rax, rax; ret; 
0x0000000009c865: add [rax], al; add [rax], dl; lea rax, [rip+0x1b470]; cmovne rax, rdx; ret; 
0x0000000009c735: add [rax], al; add [rax], dl; lea rax, [rip+0x1b4f0]; cmovne rax, rdx; ret; 
0x0000000009c2c5: add [rax], al; add [rax], dl; lea rax, [rip+0x1b8b0]; cmovne rax, rdx; ret; 
0x0000000014da14: add [rax], al; add [rax], eax; add [rax], al; call qword ptr [rax+0x18]; 
0x0000000014da09: add [rax], al; add [rax], eax; add [rax], al; mov dword ptr [rsp+0xb8], 0x1; call qword ptr [rax+0x18]; 
0x0000000014dbef: add [rax], al; add [rax], eax; add [rax], al; movups [rsp+0xb8], xmm5; call rax; 
0x00000000144f52: add [rax], al; add [rbp+0x10], dh; add rsp, 0x40; pop rbx; ret; 
0x0000000011af4a: add [rax], al; add [rbp+0x10], dh; add rsp, 0xa0; pop rbx; ret; 
0x00000000127c30: add [rax], al; add [rbp+0x10], dh; add rsp, 0xd8; ret; 
0x0000000008a3f3: add [rax], al; add [rbp+0x11], dh; add rsp, 0x48; ret; 
0x00000000110761: add [rax], al; add [rbp+0x11], dh; add rsp, 0x58; ret; 
0x000000000cc1d0: add [rax], al; add [rbp+0x14], dh; add rsp, 0x28; ret; 
0x000000001376c8: add [rax], al; add [rbp+0x17], dh; add rsp, 0x20; pop rbp; ret; 
0x00000000138f66: add [rax], al; add [rbp+0x1a], dh; add rsp, 0x20; pop rbx; ret; 
0x00000000119ad4: add [rax], al; add [rbp+0x1a], dh; add rsp, 0x58; ret; 
0x000000000597e0: add [rax], al; add [rbp+0x1b], dh; add rsp, 0x450; pop rbp; ret; 
0x0000000014b4f0: add [rax], al; add [rbp+0x1c], dh; add rsp, 0x10; pop rbx; ret; 
0x0000000010ea11: add [rax], al; add [rbp+0x1e], dh; mov eax, r9d; add rsp, 0x38; ret; 
0x000000000c6110: add [rax], al; add [rbp+0x1f], dh; add rsp, 0x20; pop rbx; ret; 
0x000000001362dd: add [rax], al; add [rbp+0x20850fdb], al; add [rax], eax; add [rax+0x63], cl; ret; 
0x0000000014de6e: add [rax], al; add [rbp+0x25], dh; add rsp, 0x28; ret; 
0x000000000418d9: add [rax], al; add [rbp+0x26], dh; mov eax, r8d; add rsp, 0x118; ret; 
0x0000000013101c: add [rax], al; add [rbp+0x28], dh; add rsp, 0x38; ret; 
0x00000000159be7: add [rax], al; add [rbp+0x28], dh; mov rax, [rax+0x18]; add rsp, 0x68; jmp rax; 
0x0000000009c948: add [rax], al; add [rbp+0x29], cl; ret far; 
0x00000000042183: add [rax], al; add [rbp+0x2d], dh; add rsp, 0x40; pop rbx; ret; 
0x0000000014427f: add [rax], al; add [rbp+0x2e], dh; add rsp, 0x10; pop rbx; ret; 
0x000000001567ff: add [rax], al; add [rbp+0x30], dh; add rsp, 0x18; ret; 
0x00000000139e85: add [rax], al; add [rbp+0x31], al; rol byte ptr [rcx+rcx*4-0x30], cl; ret; 
0x000000000717b3: add [rax], al; add [rbp+0x31], al; shr cl, 0x64; ret; 
0x00000000156af6: add [rax], al; add [rbp+0x31], dh; add rsp, 0x10; pop rbp; ret; 
0x0000000014431d: add [rax], al; add [rbp+0x33], dh; add rsp, 0x10; pop rbx; ret; 
0x00000000096668: add [rax], al; add [rbp+0x38], dh; add rsp, 0x40; pop rbp; ret; 
0x00000000159921: add [rax], al; add [rbp+0x38], dh; add rsp, 0x58; ret; 
0x00000000190c2b: add [rax], al; add [rbp+0x39], cl; ret; 
0x0000000005314b: add [rax], al; add [rbp+0x3], dh; push r10; ret; 
0x000000000ccff6: add [rax], al; add [rbp+0x3b], dh; add rsp, 0x28; ret; 
0x000000001108ac: add [rax], al; add [rbp+0x3c], dh; add rsp, 0x68; ret; 
0x00000000059a30: add [rax], al; add [rbp+0x3d], dh; add rsp, 0x38; ret; 
0x0000000014f9ce: add [rax], al; add [rbp+0x3f], dh; add rsp, 0x10; pop rbx; ret; 
0x00000000143d2e: add [rax], al; add [rbp+0x40], dh; add rsp, 0x10; pop rbx; ret; 
0x0000000011931c: add [rax], al; add [rbp+0x411d75c0], al; mov ecx, 0x8; mov eax, 0x119; syscall; 
0x00000000042634: add [rax], al; add [rbp+0x415d75c0], al; mov edx, 0x8; mov eax, 0x80; syscall; 
0x0000000005f00b: add [rax], al; add [rbp+0x41], bl; pop rsp; pop r13; ret; 
0x00000000041eb7: add [rax], al; add [rbp+0x41], bl; pop rsp; ret; 
0x0000000014fefe: add [rax], al; add [rbp+0x41], dh; add rsp, 0x10; pop rbx; ret; 
0x00000000150f2e: add [rax], al; add [rbp+0x42], dh; add rsp, 0x10; pop rbx; ret; 
0x00000000041aed: add [rax], al; add [rbp+0x42], dh; mov eax, r9d; add rsp, 0x148; ret; 
0x0000000010f48c: add [rax], al; add [rbp+0x451d75c0], al; xor eax, eax; mov eax, 0x127; syscall; 
0x0000000010f54c: add [rax], al; add [rbp+0x451d75c0], al; xor eax, eax; mov eax, 0x128; syscall; 
0x000000000de6ec: add [rax], al; add [rbp+0x451d75c0], al; xor eax, eax; mov eax, 0xf7; syscall; 
0x0000000015013e: add [rax], al; add [rbp+0x46], dh; add rsp, 0x10; pop rbx; ret; 
0x0000000010e348: add [rax], al; add [rbp+0x46], dh; add rsp, 0x68; ret; 
0x0000000010e3d7: add [rax], al; add [rbp+0x47], dh; add rsp, 0x18; ret; 
0x0000000010e48f: add [rax], al; add [rbp+0x47], dh; add rsp, 0x58; ret; 
0x00000000159a18: add [rax], al; add [rbp+0x47], dh; add rsp, 0x68; ret; 
0x00000000109fb2: add [rax], al; add [rbp+0x49], dh; add rsp, 0x130; pop rbp; ret; 
0x0000000010e52d: add [rax], al; add [rbp+0x49], dh; add rsp, 0x58; ret; 
0x0000000011b1d0: add [rax], al; add [rbp+0x4e], dh; add rsp, 0x58; ret; 
0x00000000045a14: add [rax], al; add [rbp+0x51], dh; add rsp, 0x18; ret; 
0x000000000db2fc: add [rax], al; add [rbp+0x52], dh; add rsp, 0x38; ret; 
0x000000000fd48e: add [rax], al; add [rbp+0x53], dh; add rsp, 0x38; ret; 
0x00000000159c88: add [rax], al; add [rbp+0x54], dh; add rsp, 0x38; ret; 
0x00000000041462: add [rax], al; add [rbp+0x5], dh; add rsp, 0x18; ret; 
0x000000000455f0: add [rax], al; add [rbp+0x5], dh; add rsp, 0x28; ret; 
0x00000000107f72: add [rax], al; add [rbp+0x5], dh; add rsp, 0x38; ret; 
0x0000000014f8d3: add [rax], al; add [rbp+0x5], dh; add rsp, 0x48; ret; 
0x0000000014d642: add [rax], al; add [rbp+0x5], dh; add rsp, 0x78; ret; 
0x0000000010f8fc: add [rax], al; add [rbp+0x5a], dh; add rsp, 0x38; ret; 
0x00000000159bb1: add [rax], al; add [rbp+0x5e], dh; add rsp, 0x68; ret; 
0x0000000014fa97: add [rax], al; add [rbp+0x5f], dh; add rsp, 0x10; pop rbp; ret; 
0x000000000dff3c: add [rax], al; add [rbp+0x62], dh; add rsp, 0x38; ret; 
0x00000000107e7d: add [rax], al; add [rbp+0x6], dh; add rsp, 0x10; pop rbp; ret; 
0x000000001518f7: add [rax], al; add [rbp+0x6], dh; add rsp, 0x10; pop rbx; ret; 
0x000000000cc24a: add [rax], al; add [rbp+0x6], dh; add rsp, 0x40; pop rbp; ret; 
0x0000000014bab9: add [rax], al; add [rbp+0x6c], dh; add rsp, 0x30; pop rbx; ret; 
0x0000000010df82: add [rax], al; add [rbp+0x6d], dh; add rsp, 0xa0; pop rbx; ret; 
0x0000000014b842: add [rax], al; add [rbp+0x73], dh; add rsp, 0x10; pop r12; ret; 
0x0000000010e056: add [rax], al; add [rbp+0x74], dh; add rsp, 0xa0; pop rbx; ret; 
0x0000000010fa51: add [rax], al; add [rbp+0x75], dh; add rsp, 0x38; ret; 
0x00000000091b3a: add [rax], al; add [rbp+0x78], dh; add rsp, 0x98; ret; 
0x00000000055917: add [rax], al; add [rbp+0x79], dh; leave; ret; 
0x0000000013f78a: add [rax], al; add [rbp+0x7], dh; add rsp, 0x10; pop r12; ret; 
0x000000000417a5: add [rax], al; add [rbp+0x8], dh; add rsp, 0x148; ret; 
0x00000000116038: add [rax], al; add [rbp+0x8], dh; add rsp, 0x418; ret; 
0x00000000041f3f: add [rax], al; add [rbp+0x8], dh; add rsp, 0x98; ret; 
0x00000000042942: add [rax], al; add [rbp+0x8], dh; add rsp, 0xa8; ret; 
0x00000000050d42: add [rax], al; add [rbp+0x8], dh; add rsp, 0xd8; ret; 
0x00000000151828: add [rax], al; add [rbp+0x8], dh; movzx eax, al; add rsp, 0x18; ret; 
0x0000000010a840: add [rax], al; add [rbp+0x8], dh; movzx eax, al; add rsp, 0x58; ret; 
0x00000000060980: add [rax], al; add [rbp+0x9], dh; add rsp, 0x1010; pop rbp; ret; 
0x000000001517b4: add [rax], al; add [rbp+0x9], dh; add rsp, 0x90; pop rbx; ret; 
0x000000000d9ac0: add [rax], al; add [rbp+0x9], dh; add rsp, 0xe0; pop rbx; ret; 
0x0000000015a276: add [rax], al; add [rbp+0xa], dh; add rsp, 0x28; ret; 
0x00000000129275: add [rax], al; add [rbp+0xb], dh; add rsp, 0x28; ret; 
0x0000000010ea7a: add [rax], al; add [rbp+0xc], dh; add rsp, 0x18; ret; 
0x00000000040c1f: add [rax], al; add [rbp+0xc], dh; test eax, 0x7fffff; je short 0x0000000000040c30; ret; 
0x00000000127b2a: add [rax], al; add [rbp+0xd], dh; add rsp, 0xd8; ret; 
0x00000000060f24: add [rax], al; add [rbp+0xe], dh; add rsp, 0x18; ret; 
0x000000000d46e7: add [rax], al; add [rbp+0xf], al; fiadd st, word ptr [r13+0x1]; ret; 
0x00000000041db1: add [rax], al; add [rbp+0xf], dh; add rsp, 0x118; ret; 
0x0000000014ba67: add [rax], al; add [rbp+rcx*4+0x4c], cl; and al, 0x14; call qword ptr [rax]; 
0x0000000014c23d: add [rax], al; add [rbp+rcx*4+0x4c], cl; and al, 0x1c; call qword ptr [rax]; 
0x0000000010decd: add [rax], al; add [rbp+rdi+0x3d], dh; add [rax+0xe740000], al; mov qword ptr [rdi], 0xffffffffffffffff; ret; 
0x0000000003f8c4: add [rax], al; add [rbp-0x18], dl; ret; 
0x000000000284d2: add [rax], al; add [rbp-0x3c], dh; ret; 
0x00000000090c16: add [rax], al; add [rbp-0x3dbaf040], al; ret; 
0x00000000108b78: add [rax], al; add [rbp-0x479e8a40], al; add [rcx], eax; add [rax], al; syscall; 
0x00000000106c9c: add [rax], al; add [rbp-0x47ea8a40], al; adc [rax], eax; add [rax], al; syscall; 
0x000000001195cc: add [rax], al; add [rbp-0x47ea8a40], al; adc al, 0x1; add [rax], al; syscall; 
0x00000000106d4c: add [rax], al; add [rbp-0x47ea8a40], al; adc al, [rax]; add [rax], al; syscall; 
0x0000000011972c: add [rax], al; add [rbp-0x47ea8a40], al; adc eax, [rcx]; add [rax], al; syscall; 
0x0000000011ac6c: add [rax], al; add [rbp-0x47ea8a40], al; and [rcx], al; add [rax], al; syscall; 
0x0000000011a80c: add [rax], al; add [rbp-0x47ea8a40], al; sub al, 0x0; add [rax], al; syscall; 
0x0000000011ad1c: add [rax], al; add [rbp-0x47ea8a40], al; sub eax, [rcx]; add [rax], al; syscall; 
0x0000000011addc: add [rax], al; add [rbp-0x47ea8a40], al; xor eax, [rcx]; add [rax], al; syscall; 
0x0000000010f3e9: add [rax], al; add [rbp-0x47ef8a40], al; adc al, 0x0; add [rax], al; syscall; 
0x0000000010f349: add [rax], al; add [rbp-0x47ef8a40], al; adc eax, [rax]; add [rax], al; syscall; 
0x00000000108d49: add [rax], al; add [rbp-0x47ef8a40], al; add [rax], eax; add [rax], al; syscall; 
0x000000001094e9: add [rax], al; add [rbp-0x47ef8a40], al; add eax, [rax]; add [rax], al; syscall; 
0x000000000de849: add [rax], al; add [rbp-0x47ef8a40], al; and al, [rax]; add [rax], al; syscall; 
0x00000000113919: add [rax], al; add [rbp-0x47ef8a40], al; sbb al, [rax]; add [rax], al; syscall; 
0x0000000011a329: add [rax], al; add [rbp-0x47ef8a40], al; sub al, [rax]; add [rax], al; syscall; 
0x0000000011a259: add [rax], al; add [rbp-0x47ef8a40], al; sub eax, [rax]; add [rax], al; syscall; 
0x000000001197f9: add [rax], al; add [rbp-0x47ef8a40], al; xor [rcx], al; add [rax], al; syscall; 
0x00000000106a3a: add [rax], al; add [rbp-0x76b7febd], cl; ret; 
0x00000000179618: add [rax], al; add [rbp-0x77], cl; ret far; 
0x000000000e6bdd: add [rax], al; add [rbp-0x7fbf6088], cl; call far fword ptr [rax]; 
0x0000000017e5e8: add [rax], al; add [rbx+0x14840c0], al; clc; vzeroupper; ret; 
0x00000000096179: add [rax], al; add [rbx+0x14da1d2d], al; add [rcx], al; pop rbp; ret; 
0x00000000091136: add [rax], al; add [rbx+0x27602fe], al; ret; 
0x0000000008c66d: add [rax], al; add [rbx+0x31], bl; rcr byte ptr [rbp+0x41], 0x5c; ret; 
0x000000001354ed: add [rax], al; add [rbx+0x3b83b], cl; add [rax], al; syscall; 
0x000000000b3e7d: add [rax], al; add [rbx+0x4568a0e], cl; mov [rdi], ecx; mov [rdi+0x4], dl; ret; 
0x000000000b47cd: add [rax], al; add [rbx+0x477880e], cl; mov [rdi], ecx; lea rax, [rdi+0x4]; ret; 
0x000000000b318d: add [rax], al; add [rbx+0x477880e], cl; mov [rdi], ecx; ret; 
0x0000000017794d: add [rax], al; add [rbx+0x48028901], cl; mov eax, edi; ret; 
0x000000000b84a8: add [rax], al; add [rbx+0x48], bl; cmove eax, edx; ret; 
0x000000000e8280: add [rax], al; add [rbx+0x5b010447], al; pop rbp; pop r12; ret; 
0x000000000427ca: add [rax], al; add [rbx+0x5d], bl; pop r12; pop r13; ret; 
0x00000000041d40: add [rax], al; add [rbx+0x5d], bl; pop r12; ret; 
0x0000000007fc3c: add [rax], al; add [rbx+0x5d], bl; ret; 
0x00000000107c46: add [rax], al; add [rbx+0x87702fe], al; mov [rdi+0x10c], esi; xor eax, eax; ret; 
0x0000000014a84d: add [rax], al; add [rbx+0x88b3], cl; add [rcx+rcx*4-0x1], cl; call qword ptr [rax+0x28]; 
0x000000001677bd: add [rax], al; add [rbx+0xe8b0156], cl; mov [rdi+0x1], edx; mov [rdi], ecx; ret; 
0x0000000016774d: add [rax], al; add [rbx+0xe8b0256], cl; mov [rdi+0x2], edx; mov [rdi], ecx; ret; 
0x000000001676dd: add [rax], al; add [rbx+0xe8b0356], cl; mov [rdi+0x3], edx; mov [rdi], ecx; ret; 
0x00000000189448: add [rax], al; add [rbx+rax-0x9], bh; fadd st, st(3); ret; 
0x000000000f8791: add [rax], al; add [rbx+rcx*4+0x40], cl; adc [rbp-0x7b], cl; shl byte ptr [rcx+rcx+0x4c], 0x39; ret; 
0x000000000440ad: add [rax], al; add [rbx+rcx*4+0x63], cl; or [rax-0x7d], cl; ret; 
0x000000000ea7d2: add [rax], al; add [rbx-0x157cfe15], al; add [rax+0x63], ecx; ret; 
0x000000000ea7d3: add [rax], al; add [rbx-0x157cfe15], al; add [rax+0x63], ecx; ret; 
0x00000000150985: add [rax], al; add [rbx-0x2c8afe08], al; mov rax, [rdi+0x8]; mov rsi, rsp; call qword ptr [rax]; 
0x0000000014a627: add [rax], al; add [rbx-0x37f0fe18], al; mov [rdx], eax; mov eax, 0x1; ret; 
0x000000000b857c: add [rax], al; add [rbx-0x3d], bl; mov eax, 0x10; pop rbx; ret; 
0x000000000b8575: add [rax], al; add [rbx-0x3d], bl; mov eax, 0x20; pop rbx; ret; 
0x000000000b856d: add [rax], al; add [rbx-0x3d], bl; mov eax, 0x30; pop rbx; ret; 
0x000000000b8567: add [rax], al; add [rbx-0x3d], bl; mov eax, 0x40; pop rbx; ret; 
0x000000000b858a: add [rax], al; add [rbx-0x3d], bl; mov eax, 0x80; pop rbx; ret; 
0x000000000b8583: add [rax], al; add [rbx-0x3d], bl; mov eax, 0x8; pop rbx; ret; 
0x00000000116e0d: add [rax], al; add [rbx-0x3f7ac7c0], cl; cmove eax, edx; ret; 
0x0000000014a604: add [rax], al; add [rbx-0x7637f100], cl; ror byte ptr [rcx-0x77], 0x0; mov eax, 0x1; ret; 
0x00000000136fbe: add [rax], al; add [rbx-0x77bffe12], al; ja short 0x0000000000136fc9; ret; 
0x0000000003db89: add [rax], al; add [rbx-0x7bf0fe08], al; ret far; 
0x0000000003e919: add [rax], al; add [rbx-0x7bf0fe08], al; ret; 
0x00000000156f6d: add [rax], al; add [rbx-0x7c99fa17], al; stc; add esi, [rsi+0x7]; ret; 
0x000000001261ed: add [rax], al; add [rbx-0x7cb7e7ad], cl; ret; 
0x0000000013c217: add [rax], al; add [rbx-0x7cb7efab], cl; ret; 
0x0000000013c0e5: add [rax], al; add [rbx-0x7cb7efbb], cl; ret; 
0x000000000ba76d: add [rax], al; add [rbx-0x7cb7fb85], cl; ret; 
0x000000000b8efd: add [rax], al; add [rbx-0x7cb7fb8d], cl; ret; 
0x00000000182b61: add [rax], al; add [rbx-0x7cf0fb06], al; ret; 
0x000000000d714c: add [rax], al; add [rbx-0xff43], cl; dec dword ptr [rdi]; ret; 
0x0000000011d3bd: add [rax], al; add [rcx+0x104e23c1], cl; lea rcx, [rsi+rcx*4]; add eax, [rcx+rdx]; ret; 
0x0000000011da85: add [rax], al; add [rcx+0x107223c6], cl; lea rdx, [rdx+rsi*4]; add eax, [rdx+rcx]; ret; 
0x00000000076246: add [rax], al; add [rcx+0x1], bh; jmp rsi; 
0x00000000051420: add [rax], al; add [rcx+0x1], cl; ret; 
0x000000000d262e: add [rax], al; add [rcx+0x29], al; ret; 
0x0000000018f6c5: add [rax], al; add [rcx+0x29], cl; ret far; 
0x000000000ccb09: add [rax], al; add [rcx+0x29], cl; ror byte ptr [rbp+0x1], 0xc7; mov [rsp+0x88], r15; call r12; 
0x0000000017225d: add [rax], al; add [rcx+0x3518911], cl; ret; 
0x000000000f4b29: add [rax], al; add [rcx+0x39], al; ret; 
0x0000000015a820: add [rax], al; add [rcx+0x3eb8c7], cl; add [rax], al; syscall; 
0x0000000004188c: add [rax], al; add [rcx+0x48050fc8], cl; mov edi, eax; mov eax, 0xba; syscall; 
0x00000000126c61: add [rax], al; add [rcx+0x5c], al; pop rbp; ret; 
0x000000000d9259: add [rax], al; add [rcx+0x5d], al; pop r14; jmp rax; 
0x000000000c98af: add [rax], al; add [rcx+0x63], cl; ret; 
0x00000000107479: add [rax], al; add [rcx+0xe82484], cl; add [rax], al; mov eax, 0xe; syscall; 
0x0000000014a5c7: add [rax], al; add [rcx+0xf], al; adc [rax], ebx; ret; 
0x00000000149caf: add [rax], al; add [rcx+0xf], al; adc [rax], ecx; ret; 
0x00000000149cc7: add [rax], al; add [rcx+0xf], al; adc [rax], edx; ret; 
0x0000000014a5a7: add [rax], al; add [rcx+0xf], al; adc [rax], esp; ret; 
0x000000000e710d: add [rax], al; add [rcx+0xf], al; mov dh, 0x43; add cl, [rcx-0x7d]; ret; 
0x000000000781ef: add [rax], al; add [rcx+0xf], al; mov dh, 0x46; or al, 0x83; ret; 
0x0000000014e73a: add [rax], al; add [rcx+rcx*4-0x11], cl; call qword ptr [rax+0x28]; 
0x000000000452b9: add [rax], al; add [rcx+rcx*4-0x11], cl; mov eax, 0xca; syscall; 
0x0000000009aec8: add [rax], al; add [rcx+rcx*4-0x11], cl; mov rdx, rbp; mov rsi, r12; call rax; 
0x000000000cc8fe: add [rax], al; add [rcx+rcx*4-0x12], cl; call r12; 
0x00000000080532: add [rax], al; add [rcx+rcx*4-0x12], cl; mov rdi, r15; call qword ptr [r14+0x38]; 
0x0000000008b875: add [rax], al; add [rcx+rcx*4-0x12], cl; mov rdi, rbx; call qword ptr [rbp+0x70]; 
0x0000000008b6b3: add [rax], al; add [rcx+rcx*4-0x16], cl; mov rsi, r14; mov rdi, rbp; call qword ptr [rax+0x40]; 
0x000000001437a3: add [rax], al; add [rcx+rcx*4-0x19], cl; call qword ptr [rax+0x28]; 
0x00000000044cc0: add [rax], al; add [rcx+rcx*4-0x19], cl; mov eax, 0xca; syscall; 
0x0000000009387d: add [rax], al; add [rcx+rcx*4-0x19], cl; neg rdi; call qword ptr [r13]; 
0x0000000014a868: add [rax], al; add [rcx+rcx*4-0x1], cl; add dword ptr [rax], 0x1; mov rax, [rbx+0x60]; call qword ptr [rax+0x8]; 
0x00000000085e1d: add [rax], al; add [rcx+rcx*4-0x1], cl; call qword ptr [r13+0x80]; 
0x0000000014a853: add [rax], al; add [rcx+rcx*4-0x1], cl; call qword ptr [rax+0x28]; 
0x00000000086013: add [rax], al; add [rcx+rcx*4-0x1], cl; call qword ptr [rbp+0x80]; 
0x00000000099a1d: add [rax], al; add [rcx+rcx*4-0x1a], cl; call rax; 
0x0000000009aa80: add [rax], al; add [rcx+rcx*4-0x1a], cl; mov rdi, rbp; call rax; 
0x0000000010d702: add [rax], al; add [rcx+rcx*4-0x1e], cl; mov eax, 0x10f; syscall; 
0x0000000007fd21: add [rax], al; add [rcx+rcx*4-0x1e], cl; mov rsi, r14; mov rdi, rbx; call qword ptr [r15+0x38]; 
0x0000000007f6eb: add [rax], al; add [rcx+rcx*4-0x1e], cl; mov rsi, rbp; mov rdi, rbx; call qword ptr [r13+0x38]; 
0x00000000081725: add [rax], al; add [rcx+rcx*4-0x1e], cl; mov rsi, rbp; mov rdi, rbx; call qword ptr [r13+0x58]; 
0x0000000008157d: add [rax], al; add [rcx+rcx*4-0x1e], cl; mov rsi, rbp; mov rdi, rbx; call qword ptr [rax+0x58]; 
0x0000000009a7b6: add [rax], al; add [rcx+rcx*4-0x20], al; pop r12; ret; 
0x00000000158232: add [rax], al; add [rcx+rcx*4-0x20], al; pop rbp; pop r12; ret; 
0x000000000cc03e: add [rax], al; add [rcx+rcx*4-0x20], cl; pop r12; ret; 
0x00000000042dd5: add [rax], al; add [rcx+rcx*4-0x2], cl; mov rdi, r12; mov rdx, r14; call rbp; 
0x0000000003fb2b: add [rax], al; add [rcx+rcx*4-0x30], cl; ret; 
0x000000000897e2: add [rax], al; add [rcx+rcx*4-0x38], al; syscall; 
0x0000000009549e: add [rax], al; add [rcx+rcx*4-0x38], cl; ret; 
0x00000000091b0e: add [rax], al; add [rcx+rcx*4-0x3a], cl; mov eax, 0xe; syscall; 
0x0000000011226c: add [rax], al; add [rcx+rcx*4-0x40], al; add rsp, 0x8; ret; 
0x00000000156ca3: add [rax], al; add [rcx+rcx*4-0x40], al; mov qword ptr [rdx], 0x0; ret; 
0x00000000034182: add [rax], al; add [rcx+rcx*4-0x40], al; pop rbp; pop r12; ret; 
0x0000000007e3d0: add [rax], al; add [rcx+rcx*4-0x40], al; pop rbx; pop rbp; ret; 
0x000000000cd173: add [rax], al; add [rcx+rcx*4-0x40], al; pop rbx; ret; 
0x000000000895d3: add [rax], al; add [rcx+rcx*4-0x40], al; ret; 
0x00000000091296: add [rax], al; add [rcx+rcx*4-0x40], al; syscall; 
0x00000000116bb0: add [rax], al; add [rcx+rcx*4-0x40], cl; pop rbx; pop rbp; ret; 
0x0000000009688b: add [rax], al; add [rcx+rcx*4-0x40], cl; ret; 
0x00000000186e60: add [rax], al; add [rcx+rcx*4-0x40], cl; shr rax, 0x2; vzeroupper; ret; 
0x000000001824bd: add [rax], al; add [rcx+rcx*4-0x40], cl; vzeroupper; ret; 
0x000000001412df: add [rax], al; add [rcx+rcx*4-0x7], cl; call rbp; 
0x00000000044ad9: add [rax], al; add [rcx+rcx*4-0x9], cl; mov eax, 0xca; syscall; 
0x00000000071f2d: add [rax], al; add [rcx+rcx*4-0xe], cl; mov rsi, r12; mov rdi, rbp; call qword ptr [rax+0x38]; 
0x000000001149af: add [rax], al; add [rcx+rsi+0x48], dh; mov edi, ebp; xor esi, esi; call r12; 
0x0000000005ba52: add [rax], al; add [rcx-0x1177b], cl; jmp far fword ptr [rcx]; 
0x0000000004f48a: add [rax], al; add [rcx-0x39], cl; ret; 
0x00000000114b93: add [rax], al; add [rcx-0x75], cl; jge short 0x0000000000114b9a; call rbx; 
0x00000000114bc8: add [rax], al; add [rcx-0x75], cl; jge short 0x0000000000114bcf; call rbx; 
0x000000001159c8: add [rax], al; add [rcx-0x75], cl; jge short 0x00000000001159cf; call rbx; 
0x0000000014a330: add [rax], al; add [rcx-0x75], cl; jo short 0x000000000014a380; mov edi, ebp; call qword ptr [rax+0x20]; 
0x0000000015117e: add [rax], al; add [rcx-0x76b7d7b9], cl; ja short 0x00000000001511a0; mov eax, r8d; ret; 
0x0000000013625b: add [rax], al; add [rcx-0x76b7f3a9], cl; ret; 
0x000000000d268f: add [rax], al; add [rcx-0x77], al; ret far; 
0x000000000cc6a2: add [rax], al; add [rcx-0x77], al; ret; 
0x000000000a0b3d: add [rax], al; add [rcx-0x77], cl; ret; 
0x0000000010e904: add [rax], al; add [rcx-0x7d], al; ret far; 
0x00000000114f47: add [rax], al; add [rcx-0x7d], cl; ret far; 
0x00000000051d0e: add [rax], al; add [rcx-0x7d], cl; ret; 
0x00000000046da3: add [rax], al; add [rcx-0x80], al; jmp far fword ptr [rbx]; 
0x0000000013a945: add [rax], al; add [rcx-0x80], al; jmp qword ptr [rax]; 
0x0000000013a9b5: add [rax], al; add [rcx-0x80], al; jmp qword ptr [rsi]; 
0x0000000013425b: add [rax], al; add [rcx-0xa], al; ret; 
0x000000001449f3: add [rax], al; add [rcx-0xdd6b7ff], cl; mov rbp, rdx; call qword ptr [rbx+0x10]; 
0x000000000fd8a0: add [rax], al; add [rcx], al; mov edx, 0x2; cmove eax, edx; ret; 
0x000000000cd41d: add [rax], al; add [rcx], bh; ret far; 
0x0000000012fc83: add [rax], al; add [rcx], bh; ret; 
0x00000000035fe2: add [rax], al; add [rcx], ch; ret far; 
0x000000000d270f: add [rax], al; add [rcx], ch; ret; 
0x0000000003d73a: add [rax], al; add [rcx], dh; call qword ptr [rax+0x480ab60f]; 
0x000000000f5d42: add [rax], al; add [rcx], dh; jmp qword ptr [rsi+0xf]; 
0x00000000074bee: add [rax], al; add [rcx], dh; leave; jmp rsi; 
0x0000000008a12b: add [rax], al; add [rcx], dh; rcr byte ptr [rbx+0x5d], 0x41; pop rsp; ret; 
0x0000000008b2a9: add [rax], al; add [rcx], dh; ror byte ptr [rax-0x77], cl; out dx, eax; call qword ptr [rbx+0x80]; 
0x00000000045c28: add [rax], al; add [rcx], dh; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x5d], bl; ret; 
0x0000000018583d: add [rax], al; add [rcx], dh; ror byte ptr [rbx+0x75163b17], 0xe4; ret; 
0x0000000009bf97: add [rax], al; add [rcx], dh; ror byte ptr [rcx-0x77], 0x30; ret; 
0x00000000090e79: add [rax], al; add [rcx], dh; ror byte ptr [rdi], 0x11; jle short 0x0000000000090ef2; ret; 
0x000000000eacc5: add [rax], al; add [rcx], dh; sar byte ptr [rax], 0xe; je 0x00000000000eac2d; ret; 
0x0000000008d59d: add [rax], al; add [rdi+0x1590ca05], al; add [rbx+0x307f01f8], al; ret; 
0x000000000cb092: add [rax], al; add [rdi+0x2], bh; neg eax; ret; 
0x00000000164f48: add [rax], al; add [rdi+0x63], cl; or al, 0x8b; add r9, r11; notrack jmp r9; 
0x0000000018c682: add [rax], al; add [rdi+0x9], bh; neg eax; ret; 
0x000000001157c6: add [rax], al; add [rdi+rbp+0x48], dh; mov edi, ebp; xor esi, esi; call r12; 
0x00000000040d95: add [rax], al; add [rdi], bh; mov [rdi], edx; movd xmm0, eax; ret; 
0x000000000845e6: add [rax], al; add [rdi], cl; adc [rax+0x40], eax; pop rbx; ret; 
0x0000000013c9a4: add [rax], al; add [rdi], cl; adc [rax], eax; add rsp, 0x8; ret; 
0x00000000126223: add [rax], al; add [rdi], cl; adc [rbp-0x78], edi; call rcx; 
0x0000000008df52: add [rax], al; add [rdi], cl; adc [rbx+0x48], eax; pop rbx; ret; 
0x0000000014a5b7: add [rax], al; add [rdi], cl; adc [rdi+0x20], edx; ret; 
0x00000000149c9b: add [rax], al; add [rdi], cl; adc [rdi+0x8], eax; ret; 
0x00000000146ec0: add [rax], al; add [rdi], cl; adc [rdx], ecx; ret; 
0x00000000107b9e: add [rax], al; add [rdi], cl; adc [rsi+0x70], edi; ret; 
0x000000000faf6b: add [rax], al; add [rdi], cl; adc [rsi+0x8], eax; ret; 
0x00000000142f18: add [rax], al; add [rdi], cl; adc [rsi+0x8], ecx; ret; 
0x0000000014d6a2: add [rax], al; add [rdi], cl; adc [rsp+0x18], eax; call qword ptr [rax+0x18]; 
0x0000000014d930: add [rax], al; add [rdi], cl; adc [rsp+0x18], ecx; movups [rsp+0x38], xmm0; call qword ptr [rax+0x18]; 
0x0000000014dbf2: add [rax], al; add [rdi], cl; adc [rsp+0xb8], ebp; call rax; 
0x0000000014db56: add [rax], al; add [rdi], cl; adc [rsp+0xb8], ebx; movups [rsp+0xd8], xmm0; call rax; 
0x0000000014db5e: add [rax], al; add [rdi], cl; adc [rsp+0xd8], eax; call rax; 
0x0000000011e7ea: add [rax], al; add [rdi], cl; add eax, 0xfffd2ae9; jmp qword ptr [rsi+0x2e]; 
0x000000000972bd: add [rax], al; add [rdi], cl; add eax, 0xfffebbe9; jmp qword ptr [rsi+0xf]; 
0x00000000095f00: add [rax], al; add [rdi], cl; add eax, 0xffff01e9; jmp qword ptr [rsi+0xf]; 
0x00000000091908: add [rax], al; add [rdi], cl; add eax, 0xffff18e9; jmp qword ptr [rsi+0xf]; 
0x000000000fa295: add [rax], al; add [rdi], cl; add eax, 0xffff41e9; call qword ptr [rax-0x5e1f00d]; 
0x0000000008d61a: add [rax], al; add [rdi], cl; add eax, 0xffff44e9; jmp qword ptr [rsi+0x66]; 
0x000000000452ec: add [rax], al; add [rdi], cl; add eax, 0xffff4ae9; jmp qword ptr [rsi+0x2e]; 
0x000000000931f8: add [rax], al; add [rdi], cl; add eax, 0xffff70e9; jmp qword ptr [rsi+0x66]; 
0x0000000014a667: add [rax], al; add [rdi], cl; enter 0x4289, 0x10; mov eax, 0x1; ret; 
0x0000000014a567: add [rax], al; add [rdi], cl; enter 0x4289, 0xc; mov eax, 0x1; ret; 
0x0000000016790d: add [rax], al; add [rdi], cl; mov bh, 0x16; mov [rdi], dx; ret; 
0x0000000014b7bf: add [rax], al; add [rdi], cl; mov cl, 0x15; call rsi; 
0x0000000012bd4f: add [rax], al; add [rdi], cl; mov cl, 0x15; push rdi; ret; 
0x0000000012bf13: add [rax], al; add [rdi], cl; mov cl, 0x15; ret far; 
0x00000000080a5b: add [rax], al; add [rdi], cl; mov cl, 0x35; ret far; 
0x0000000016797d: add [rax], al; add [rdi], cl; mov dh, 0x16; mov [rdi], dl; ret; 
0x0000000003d935: add [rax], al; add [rdi], cl; mov dh, 0x43; add [rax-0x7d], ecx; ret; 
0x000000000b84ed: add [rax], al; add [rdi], cl; mov dh, 0xc1; pop rbx; ret; 
0x000000000a894d: add [rax], al; add [rdi], cl; mov ebp, 0x448d48c0; cmp [rax], ah; ret; 
0x000000000a895d: add [rax], al; add [rdi], cl; mov ebp, 0x448d48c0; cmp [rax], dh; ret; 
0x000000000a893d: add [rax], al; add [rdi], cl; mov ebp, 0x448d48c0; cmp [rax], dl; ret; 
0x0000000017e5fd: add [rax], al; add [rdi], cl; mov ebp, 0xf80148c0; vzeroupper; ret; 
0x000000000a847d: add [rax], al; add [rdi], cl; mov esp, 0x448d48c0; cmp [rax], ah; ret; 
0x000000000a846d: add [rax], al; add [rdi], cl; mov esp, 0x448d48c0; cmp [rax], dl; ret; 
0x000000000a845d: add [rax], al; add [rdi], cl; mov esp, 0xf80148c0; ret; 
0x000000000d6a2d: add [rax], al; add [rdi], cl; ret; 
0x00000000041875: add [rax], al; add [rdi], cl; sub [rsp+0xe0], eax; movaps [rsp+0xf0], xmm0; syscall; 
0x0000000004187d: add [rax], al; add [rdi], cl; sub [rsp+0xf0], eax; syscall; 
0x0000000009a69c: add [rax], al; add [rdi], cl; test [rbp+0x48000000], ebp; add esp, 0x18; ret; 
0x00000000108b9d: add [rax], al; add [rdi], cl; test [rbp+0x48000000], edi; add esp, 0x78; ret; 
0x000000001091a3: add [rax], al; add [rdi], cl; test [rcx+0x48000000], ebx; add esp, 0x68; ret; 
0x0000000014925a: add [rax], al; add [rdi], cl; xchg edi, eax; ret; 
0x0000000007bf4e: add [rax], al; add [rdx+0x1], bh; jmp rcx; 
0x0000000008cdf6: add [rax], al; add [rdx+0x1], bh; mov rdi, rbx; call qword ptr [r12+0x48]; 
0x00000000086993: add [rax], al; add [rdx+0x1], bh; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x000000000fd8a1: add [rax], al; add [rdx+0x2], edi; cmove eax, edx; ret; 
0x000000000b722d: add [rax], al; add [rdx+0x30178816], cl; in eax, dx; mov [rdi+0x1], ch; ret; 
0x0000000011b75d: add [rax], al; add [rdx+0x40], bh; mov eax, 0x14; syscall; 
0x000000000e09e9: add [rax], al; add [rdx+0x7d00], bh; cmove rax, rdx; ret; 
0x000000000e09cf: add [rax], al; add [rdx+0xfde8], bh; cmove rax, rdx; ret; 
0x000000000923c9: add [rax], al; add [rdx], al; jbe short 0x00000000000923d0; ret; 
0x000000000b8ce5: add [rax], al; add [rdx], al; lea rax, [rip+0x124c0]; cmovne rax, rdx; ret; 
0x000000000cce27: add [rax], al; add [rdx], ch; push 0x0; lea r8, [rsp+0x40]; call qword ptr [rax+0x270]; 
0x0000000010e508: add [rax], al; add [rip+0x410000], dil; je short 0x000000000010e540; mov eax, 0x101; syscall; 
0x0000000009242a: add [rax], al; add [rsi+0x1], dh; ret; 
0x0000000010ead2: add [rax], al; add [rsi+0x5409], bh; mov eax, 0x10; syscall; 
0x0000000010eb03: add [rax], al; add [rsi+0x5409], bh; mov r8d, eax; mov eax, 0x10; syscall; 
0x00000000090b4c: add [rax], al; add [rsi+0x80], bh; mov eax, 0xca; syscall; 
0x0000000015c6c9: add [rax], al; add [rsi+0x80], bh; syscall; 
0x000000000dda2a: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x109a62]; syscall; 
0x000000000dd8ea: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x109ba2]; syscall; 
0x000000000dd832: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x109c5a]; syscall; 
0x000000000dd756: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x109d2e]; syscall; 
0x000000000dd586: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x109ebe]; syscall; 
0x000000000dd3c2: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x10a03a]; syscall; 
0x000000000dd008: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x10a39c]; syscall; 
0x000000000dbd5a: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x10b5c2]; syscall; 
0x000000000dbc1a: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x10b702]; syscall; 
0x000000000dbb62: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x10b7ba]; syscall; 
0x000000000db796: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x10bb7e]; syscall; 
0x000000000db5c6: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x10bd0e]; syscall; 
0x000000000db402: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x10be8a]; syscall; 
0x000000000dab0a: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x10c72a]; syscall; 
0x000000000ceb36: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1185f6]; syscall; 
0x000000000ce942: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1187ea]; syscall; 
0x000000000c6676: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x11efd6]; syscall; 
0x00000000099896: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x14a2f6]; syscall; 
0x0000000009b226: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x14bcce]; syscall; 
0x0000000009afa2: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x14bf52]; syscall; 
0x0000000009adc2: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x14c132]; syscall; 
0x0000000009abd6: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x14c31e]; syscall; 
0x0000000009ab66: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x14c38e]; syscall; 
0x00000000096ee6: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x14cca6]; syscall; 
0x00000000096e86: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x14cd06]; syscall; 
0x00000000096ab6: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x14d0d6]; syscall; 
0x00000000096856: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x14d336]; syscall; 
0x0000000009620e: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x14d97e]; syscall; 
0x000000000961d6: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x14d9b6]; syscall; 
0x00000000097eb5: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x14efb7]; syscall; 
0x0000000009741a: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x14fa42]; syscall; 
0x000000000930f1: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x153d7b]; syscall; 
0x00000000093075: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x153de7]; syscall; 
0x00000000092dce: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x15409e]; syscall; 
0x00000000092b22: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x15434a]; syscall; 
0x00000000092057: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x154795]; syscall; 
0x00000000091eb2: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x15493a]; syscall; 
0x00000000091d26: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x154ac6]; syscall; 
0x0000000008ff29: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x156733]; syscall; 
0x0000000008f9e8: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x156c74]; syscall; 
0x0000000008f658: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x157004]; syscall; 
0x0000000008f2f8: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x157364]; syscall; 
0x0000000008dbd4: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x158a88]; syscall; 
0x0000000008d8e4: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x158d78]; syscall; 
0x0000000008d5e0: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x15907c]; syscall; 
0x00000000080cc5: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x165957]; syscall; 
0x000000000808c9: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x165d53]; syscall; 
0x0000000008081d: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x165dff]; syscall; 
0x0000000007e976: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x166cd6]; syscall; 
0x0000000005f19a: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x18745a]; syscall; 
0x0000000005ef16: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1876da]; syscall; 
0x0000000005cd92: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x18984a]; syscall; 
0x0000000005cc52: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x18998a]; syscall; 
0x00000000052e7a: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x193742]; syscall; 
0x00000000052cb6: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x193906]; syscall; 
0x000000000527a6: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x193e16]; syscall; 
0x0000000005039a: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x195ff2]; syscall; 
0x00000000050216: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x196176]; syscall; 
0x000000000501b6: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1961d6]; syscall; 
0x00000000045a52: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1a0902]; syscall; 
0x00000000045992: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1a09c2]; syscall; 
0x000000000458ca: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1a0a8a]; syscall; 
0x000000000457f2: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1a0b62]; syscall; 
0x000000000448ea: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1a11ea]; syscall; 
0x00000000044825: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1a12af]; syscall; 
0x00000000044682: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1a1452]; syscall; 
0x000000000445a9: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1a152b]; syscall; 
0x0000000003d013: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1a89e1]; syscall; 
0x0000000003b688: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1aa334]; syscall; 
0x0000000003a4d7: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1ab435]; syscall; 
0x0000000003a4b7: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1ab455]; syscall; 
0x0000000003a34d: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1ab5bf]; syscall; 
0x0000000002ac5a: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1ba9f2]; syscall; 
0x0000000002aaee: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1bab5e]; syscall; 
0x0000000002a9f6: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1bac56]; syscall; 
0x00000000026844: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1bf258]; syscall; 
0x00000000191972: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x54162]; syscall; 
0x00000000191b32: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x54cba]; syscall; 
0x00000000191e52: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x567f2]; syscall; 
0x00000000158052: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x9107e]; syscall; 
0x00000000156d5a: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x92376]; syscall; 
0x00000000156c7a: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x92456]; syscall; 
0x00000000156a92: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x9263e]; syscall; 
0x00000000156a02: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x926ce]; syscall; 
0x00000000156962: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x9276e]; syscall; 
0x000000001568b2: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x9281e]; syscall; 
0x000000001564e2: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x92bee]; syscall; 
0x0000000014c2e2: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x9cbd2]; syscall; 
0x0000000014c182: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x9cd32]; syscall; 
0x0000000014bf76: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x9cf3e]; syscall; 
0x0000000014bdd6: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x9d0de]; syscall; 
0x0000000014bc42: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x9d272]; syscall; 
0x0000000014bb02: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x9d3b2]; syscall; 
0x0000000014b9a2: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x9d512]; syscall; 
0x0000000014b892: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x9d622]; syscall; 
0x00000000148402: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xa0a96]; syscall; 
0x0000000013f4ce: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xa977e]; syscall; 
0x0000000013f19e: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xa9aae]; syscall; 
0x0000000013ee1e: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xa9e2e]; syscall; 
0x0000000013ec20: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xaa02c]; syscall; 
0x0000000013ea96: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xaa1b6]; syscall; 
0x0000000013e859: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xaa3f3]; syscall; 
0x0000000013de12: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xaad72]; syscall; 
0x0000000013dc91: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xaaef3]; syscall; 
0x0000000013dc57: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xaaf2d]; syscall; 
0x0000000013db4a: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xab03a]; syscall; 
0x0000000013d30a: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xab87a]; syscall; 
0x0000000013d242: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xab942]; syscall; 
0x0000000013d126: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xaba5e]; syscall; 
0x0000000013bd93: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xacba1]; syscall; 
0x00000000138512: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb0132]; syscall; 
0x00000000138236: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb040e]; syscall; 
0x00000000133f56: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb46da]; syscall; 
0x000000001339d6: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb4c3e]; syscall; 
0x00000000133812: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb4dba]; syscall; 
0x0000000013374a: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb4e22]; syscall; 
0x0000000013360a: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb4f62]; syscall; 
0x00000000133552: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb501a]; syscall; 
0x00000000132e62: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb5702]; syscall; 
0x00000000132b32: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb5a32]; syscall; 
0x00000000132976: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb5bee]; syscall; 
0x0000000013245c: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb6064]; syscall; 
0x0000000012eb6a: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb983a]; syscall; 
0x0000000012ea2a: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb997a]; syscall; 
0x0000000012e972: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb9a32]; syscall; 
0x0000000012e886: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb9b16]; syscall; 
0x0000000012e6b6: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb9cb6]; syscall; 
0x0000000012e4f2: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb9e52]; syscall; 
0x0000000012e42a: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb9eca]; syscall; 
0x0000000012e2ea: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xba00a]; syscall; 
0x0000000012e232: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xba0c2]; syscall; 
0x0000000012e152: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xba19a]; syscall; 
0x0000000012dc86: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xba5ee]; syscall; 
0x0000000012d6b6: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbab5e]; syscall; 
0x0000000012d196: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbb036]; syscall; 
0x0000000012cfca: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbb1c2]; syscall; 
0x0000000012ce8a: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbb302]; syscall; 
0x0000000012cdd2: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbb3ba]; syscall; 
0x0000000012ccf2: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbb492]; syscall; 
0x0000000012c8d6: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbb866]; syscall; 
0x0000000012c2ba: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbbe22]; syscall; 
0x0000000012c162: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbbf7a]; syscall; 
0x0000000012c0a2: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbc03a]; syscall; 
0x0000000012bfba: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbc11a]; syscall; 
0x0000000012bed6: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbc1c6]; syscall; 
0x0000000012b876: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbc7e6]; syscall; 
0x0000000012b66a: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbc9aa]; syscall; 
0x0000000012b512: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbcb02]; syscall; 
0x0000000012b452: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbcbc2]; syscall; 
0x0000000012b36a: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbcca2]; syscall; 
0x0000000012a756: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbd83e]; syscall; 
0x0000000012a4e6: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbda6e]; syscall; 
0x00000000129d66: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbe18e]; syscall; 
0x0000000012030a: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xc7b32]; syscall; 
0x000000001201ca: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xc7c72]; syscall; 
0x00000000120112: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xc7d2a]; syscall; 
0x0000000011fd38: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xc80fc]; syscall; 
0x0000000011fb0e: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xc82ee]; syscall; 
0x0000000011f946: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xc846e]; syscall; 
0x0000000011f782: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xc85ea]; syscall; 
0x0000000011f6b2: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xc8666]; syscall; 
0x0000000011f5e2: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xc8736]; syscall; 
0x0000000011f546: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xc87d2]; syscall; 
0x0000000011eaaa: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xc923a]; syscall; 
0x0000000011e96a: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xc937a]; syscall; 
0x0000000011e8b2: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xc9432]; syscall; 
0x0000000011e2b8: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xc9a24]; syscall; 
0x0000000011e0b6: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xc9bce]; syscall; 
0x0000000011ded6: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xc9d46]; syscall; 
0x0000000011dd12: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xc9ea2]; syscall; 
0x00000000113612: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xd422a]; syscall; 
0x000000001134f6: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xd4346]; syscall; 
0x00000000113096: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xd47a6]; syscall; 
0x00000000112b65: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xd4cd7]; syscall; 
0x00000000101556: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xe6056]; syscall; 
0x000000000272bb: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; syscall; 
0x000000000973ef: add [rax], al; add [rsi+0x81], bh; mov eax, ebx; syscall; 
0x00000000044cbb: add [rax], al; add [rsi+0x81], bh; mov rdi, r12; mov eax, 0xca; syscall; 
0x000000000452b4: add [rax], al; add [rsi+0x81], bh; mov rdi, r13; mov eax, 0xca; syscall; 
0x00000000044ad4: add [rax], al; add [rsi+0x81], bh; mov rdi, r14; mov eax, 0xca; syscall; 
0x000000000918fb: add [rax], al; add [rsi+0x81], bh; mov rdi, rbp; mov eax, 0xca; syscall; 
0x000000000982a8: add [rax], al; add [rsi+0x81], bh; mov rdi, rbx; mov eax, 0xca; syscall; 
0x0000000009921d: add [rax], al; add [rsi+0x81], bh; mov rdi, rcx; mov eax, 0xca; syscall; 
0x00000000148683: add [rax], al; add [rsi+0x8], bh; mov rdi, rbp; call qword ptr [rax+0x30]; 
0x000000000f3864: add [rax], al; add [rsi+0xf], ah; outsb dx, [rsi]; ret; 
0x0000000011c2ad: add [rax], al; add [rsi+0xf], ah; outsd dx, [rsi]; ret; 
0x000000000a886a: add [rax], al; add [rsi+0xf], ah; xlat [rbx]; ret; 
0x000000000a8869: add [rax], al; add [rsi+0xf], ah; xlat [rbx]; ret; 
0x00000000083f4d: add [rax], al; add [rsi-0x1], bh; call qword ptr [rax+0x18]; 
0x0000000008e10e: add [rax], al; add [rsi-0x1], bh; mov rdi, rbp; call qword ptr [rbx+0x18]; 
0x0000000008f8c3: add [rax], al; add [rsi-0x1], bh; mov rdi, rbx; call qword ptr [r15+0x18]; 
0x000000001199fb: add [rax], al; add [rsi-0x70], ah; endbr64; mov eax, 0x11f; syscall; 
0x00000000119b7b: add [rax], al; add [rsi-0x70], ah; endbr64; mov eax, 0x131; syscall; 
0x0000000010e5eb: add [rax], al; add [rsi-0x70], ah; endbr64; mov eax, 0x1; syscall; 
0x000000000d01db: add [rax], al; add [rsi-0x70], ah; endbr64; mov eax, 0x24; syscall; 
0x000000000dfafb: add [rax], al; add [rsi-0x70], ah; endbr64; mov eax, 0x27; syscall; 
0x000000000dfdab: add [rax], al; add [rsi-0x70], ah; endbr64; mov eax, 0x79; syscall; 
0x000000000ccd7b: add [rax], al; add [rsi-0x70], ah; endbr64; mov eax, 0xc9; syscall; 
0x0000000009b27b: add [rax], al; add [rsi-0x70], ah; endbr64; ret; 
0x0000000017220b: add [rax], al; add [rsi-0x70], ah; mov [rcx], dx; ret; 
0x0000000017223b: add [rax], al; add [rsi-0x70], ah; mov [rcx], edx; mov [rcx+0x4], dl; ret; 
0x000000000b414b: add [rax], al; add [rsi-0x70], ah; mov [rdi], dx; ret; 
0x000000000b417b: add [rax], al; add [rsi-0x70], ah; mov [rdi], edx; mov [rdi+0x4], dl; ret; 
0x000000000b315b: add [rax], al; add [rsi-0x70], ah; mov dx, [rsi]; mov [rdi], dx; ret; 
0x000000000b721b: add [rax], al; add [rsi-0x70], ah; xor ch, ch; mov [rdi], ch; ret; 
0x000000000cb35b: add [rax], al; add [rsi-0x70], ah; xor rax, rax; ret; 
0x00000000146f22: add [rax], al; add [rsi-0x77], ah; insb [rdi], dx; mov eax, 0x1; ret; 
0x000000000c2c8a: add [rax], al; add [rsp+rax+0x44], dh; mov eax, eax; ret; 
0x0000000012170d: add [rax], al; add ah, [rcx]; enter 0x4c88, 0x24; and [rax+0x411f2444], cl; call qword ptr [rsp+0x28]; 
0x00000000146df4: add [rax], al; add al, [rax]; add [rax], al; add rdi, 0xc8; jmp rcx; 
0x000000001297d5: add [rax], al; add al, al; cmp edx, 0x80000000; cmovne eax, edi; ret; 
0x00000000101447: add [rax], al; add al, ch; add [rax], ebp; hlt; jmp qword ptr [rbx+rcx*4+0x4]; 
0x0000000014ce39: add [rax], al; add al, ch; call qword ptr [rbp+rbp*8-0x4274b701]; 
0x000000001563ef: add [rax], al; add al, ch; cmp [rdx], eax; in eax, dx; jmp qword ptr [rbx+rcx*4+0x4]; 
0x0000000008aab8: add [rax], al; add al, ch; mov al, [0xb74c08548ffffff]; pop rbx; ret; 
0x0000000013a128: add [rax], al; add al, ch; nop; ret far; 
0x000000000f025c: add [rax], al; add al, ch; or al, 0x63; dec dword ptr [rcx-0x77]; ret; 
0x0000000013addf: add [rax], al; add al, ch; pop rcx; mov ch, 0xee; jmp qword ptr [rsi+0xf]; 
0x0000000015753e: add [rax], al; add al, ch; pop rdx; jb short 0x000000000015753d; jmp qword ptr [rsi+0xf]; 
0x0000000011f43c: add [rax], al; add al, ch; pop rsp; sti; jmp qword ptr [rsi+0xf]; 
0x000000000f0cfe: add [rax], al; add al, ch; push 0x58; dec dword ptr [rcx-0x77]; ret; 
0x00000000083e6d: add [rax], al; add al, ch; ret far; 
0x000000000e0f25: add [rax], al; add al, ch; ret; 
0x000000000ed99a: add [rax], al; add al, ch; sahf; mov ebx, esi; call far fword ptr [rbx+0x4c]; 
0x00000000095e4d: add [rax], al; add al, ch; stosd [rdi]; ret far; 
0x00000000157912: add [rax], al; add al, ch; xchg [rsi-0x8], ch; jmp qword ptr [rsi+0xf]; 
0x00000000156e02: add [rax], al; add al, ch; xchg esi, eax; jns short 0x0000000000156e01; jmp qword ptr [rsi+0xf]; 
0x00000000055c7f: add [rax], al; add bh, al; add al, [rdx]; sar bh, 0xff; ret; 
0x00000000079852: add [rax], al; add bh, al; test eax, edx; idiv bh; call qword ptr [rax]; 
0x00000000191bad: add [rax], al; add bh, bh; adc ecx, [rax-0x7d]; ret; 
0x000000000416b2: add [rax], al; add bh, bh; loopne 0x000000000004171e; nop [rax+rax]; ret; 
0x0000000007f3a1: add [rax], al; add bh, bh; loopne 0x000000000007f3ef; mov eax, 0xffffffff; ret; 
0x000000000eac33: add [rax], al; add bh, dh; ret; 
0x000000000e155a: add [rax], al; add bl, al; mov eax, 0xffffffff; ret; 
0x000000001436b6: add [rax], al; add bl, al; nop [rax+rax]; endbr64; ret; 
0x00000000143384: add [rax], al; add bl, al; nop [rax+rax]; lea rdx, [rip+0x9f7a9]; jmp qword ptr [rdx+rax*8]; 
0x00000000142f73: add [rax], al; add bl, al; nop [rax+rax]; mov dword ptr [rsi], 0x8; ret; 
0x00000000142f63: add [rax], al; add bl, al; nop [rax+rax]; mov dword ptr [rsi], 0xa; ret; 
0x00000000142f53: add [rax], al; add bl, al; nop [rax+rax]; mov dword ptr [rsi], 0xb; ret; 
0x00000000136fd2: add [rax], al; add bl, al; nop [rax+rax]; mov eax, 0xffffffff; ret; 
0x000000000cbb24: add [rax], al; add bl, al; nop [rax+rax]; mov rax, 0x2; ret; 
0x000000000cbb34: add [rax], al; add bl, al; nop [rax+rax]; mov rax, 0x3; ret; 
0x000000000cbb44: add [rax], al; add bl, al; nop [rax+rax]; mov rax, 0x4; ret; 
0x000000000cbb54: add [rax], al; add bl, al; nop [rax+rax]; mov rax, 0x5; ret; 
0x000000000cbb64: add [rax], al; add bl, al; nop [rax+rax]; mov rax, 0x6; ret; 
0x000000000cbb74: add [rax], al; add bl, al; nop [rax+rax]; mov rax, 0x7; ret; 
0x00000000061161: add [rax], al; add bl, al; nop [rax]; mov eax, 0x10; ret; 
0x00000000191d9d: add [rax], al; add bl, al; nop [rax]; ret; 
0x0000000015971d: add [rax], al; add bl, al; nop [rax]; xor eax, eax; ret; 
0x0000000014a68b: add [rax], al; add bl, al; nop; xor eax, eax; ret; 
0x0000000009b8d2: add [rax], al; add bl, al; ret; 
0x00000000040539: add [rax], al; add bl, bl; insb [rdi], dx; and al, 0xe8; ret; 
0x00000000141e88: add [rax], al; add bl, ch; mov eax, 0xfe78bee8; jmp qword ptr [rsi+0x66]; 
0x00000000144350: add [rax], al; add bl, ch; mov ebp, 0xfe53f6e8; jmp qword ptr [rsi+0xf]; 
0x00000000156f30: add [rax], al; add bl, ch; mov edx, 0xfd2816e8; jmp qword ptr [rsi+0xf]; 
0x0000000012a4c5: add [rax], al; add bl, ch; ret far; 
0x000000000dec4b: add [rax], al; add bl, ch; ret; 
0x000000000deb01: add [rax], al; add bl, dh; lfence; jmp rdi; 
0x000000000b8219: add [rax], al; add bl, dh; movq [rdi+rdx-0x10], mm0; movdqu [rdi], xmm0; ret; 
0x000000000b421d: add [rax], al; add bl, dh; movq [rdi-0x1], mm0; ret; 
0x000000000b422d: add [rax], al; add bl, dh; movq [rdi], mm0; ret; 
0x00000000107c26: add [rax], al; add bl, dh; movq mm7, [rsi+0x70]; movups [rdi+0xf8], xmm7; ret; 
0x0000000011a12d: add [rax], al; add bl, dh; nop edx, edi; mov eax, 0x134; syscall; 
0x0000000014135d: add [rax], al; add bl, dh; nop edx, edi; mov eax, 0x1; ret; 
0x0000000011a8fd: add [rax], al; add bl, dh; nop edx, edi; mov eax, 0x30; syscall; 
0x0000000011a44d: add [rax], al; add bl, dh; nop edx, edi; mov eax, 0x32; syscall; 
0x0000000010a97d: add [rax], al; add bl, dh; nop edx, edi; mov eax, 0x57; syscall; 
0x0000000010a8bd: add [rax], al; add bl, dh; nop edx, edi; mov eax, 0x58; syscall; 
0x0000000011a00d: add [rax], al; add bl, dh; nop edx, edi; mov eax, 0x63; syscall; 
0x00000000119c4d: add [rax], al; add bl, dh; nop edx, edi; mov eax, 0x7d; syscall; 
0x000000001194dd: add [rax], al; add bl, dh; nop edx, edi; mov eax, 0x87; syscall; 
0x00000000113a3d: add [rax], al; add bl, dh; nop edx, edi; mov eax, 0x95; syscall; 
0x0000000011058d: add [rax], al; add bl, dh; nop edx, edi; mov eax, 0x99; syscall; 
0x0000000011009d: add [rax], al; add bl, dh; nop edx, edi; mov eax, 0xa3; syscall; 
0x00000000119d9d: add [rax], al; add bl, dh; nop edx, edi; mov eax, 0xb1; syscall; 
0x00000000119f4d: add [rax], al; add bl, dh; nop edx, edi; mov eax, 0xb4; syscall; 
0x00000000116f0d: add [rax], al; add bl, dh; nop edx, edi; mov eax, 0xc2; syscall; 
0x00000000116f6d: add [rax], al; add bl, dh; nop edx, edi; mov eax, 0xc3; syscall; 
0x00000000116e4d: add [rax], al; add bl, dh; nop edx, edi; mov eax, 0xc4; syscall; 
0x00000000116ffd: add [rax], al; add bl, dh; nop edx, edi; mov eax, 0xc5; syscall; 
0x000000000fd35d: add [rax], al; add bl, dh; nop edx, edi; mov eax, 0xcb; syscall; 
0x00000000119dfd: add [rax], al; add bl, dh; nop edx, edi; mov eax, 0xfe; syscall; 
0x0000000008e4ad: add [rax], al; add bl, dh; nop edx, edi; mov eax, 0xffffffff; ret; 
0x0000000008fe5d: add [rax], al; add bl, dh; nop edx, edi; mov rax, [rdi+0x68]; ret; 
0x0000000008fe3d: add [rax], al; add bl, dh; nop edx, edi; mov rax, [rip+0x154775]; ret; 
0x0000000002a6bd: add [rax], al; add bl, dh; nop edx, edi; mov rax, [rip+0x1baf9d]; ret; 
0x0000000008fe6d: add [rax], al; add bl, dh; nop edx, edi; mov rax, rdi; ret; 
0x000000001274ed: add [rax], al; add bl, dh; nop edx, edi; ret; 
0x0000000014157d: add [rax], al; add bl, dh; nop edx, edi; xor eax, eax; ret; 
0x000000000c71e2: add [rax], al; add byte ptr [rcx+rcx*4+0x42], 0x4; mov [rdx], eax; xor eax, eax; ret; 
0x000000000b8ce6: add [rax], al; add cl, [rax-0x73]; add eax, 0x124c0; cmovne rax, rdx; ret; 
0x000000000c6ce6: add [rax], al; add cl, ch; add ch, [rdi]; cli; jmp qword ptr [rsi-0x70]; 
0x0000000005e05e: add [rax], al; add cl, ch; idiv bh; jmp qword ptr [rsi+0x2e]; 
0x0000000002d3ba: add [rax], al; add cl, ch; imul edi, esi, 0xffffffff; jmp qword ptr [rsi+0xf]; 
0x000000000d076a: add [rax], al; add cl, ch; paddb mm7, mm7; jmp qword ptr [rsi+0xf]; 
0x0000000005f607: add [rax], al; add cl, ch; ret far; 
0x0000000003067b: add [rax], al; add cl, ch; ret; 
0x0000000009a4f2: add [rax], al; add cl, ch; sar ch, 0xff; jmp qword ptr [rsi+0xf]; 
0x0000000007536e: add [rax], al; add cl, ch; xor dh, 0xff; jmp qword ptr [rsi+0x2e]; 
0x00000000126da7: add [rax], al; add cl, cl; ret; 
0x000000000923ca: add [rax], al; add dh, [rsi+0x1]; ret; 
0x000000000a4d85: add [rax], al; add dh, al; add [rax], al; ret; 
0x000000000e7e1d: add [rax], al; add dh, al; or [r10], r11b; mov eax, 0x2; ret; 
0x00000000137ed6: add [rax], al; add dh, al; ret; 
0x000000000787f0: add [rax], al; add dh, al; test [rbx], ebx; idiv edi; jmp qword ptr [rax]; 
0x000000000951bd: add [rax], al; add dh, dh; ret; 
0x000000000409dd: add [rax], al; add dl, dh; addps xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x0000000017e5e9: add [rax], al; add eax, 0x40; add rax, rdi; vzeroupper; ret; 
0x00000000138caa: add [rax], al; add edx, 0x1; syscall; 
0x000000000cbafe: add [rax], al; add rax, 0x3; ret; 
0x0000000014d0d3: add [rax], al; add rax, 0xa0; pop rbx; ret; 
0x0000000014d1a3: add [rax], al; add rax, 0xa8; pop rbx; ret; 
0x000000000a8233: add [rax], al; add rax, rdi; add rax, rcx; ret; 
0x0000000017e050: add [rax], al; add rax, rdi; add rax, rcx; vzeroupper; ret; 
0x0000000017e598: add [rax], al; add rax, rdi; vzeroupper; ret; 
0x0000000007a692: add [rax], al; add rcx, rbx; mov rbx, rdx; xor edx, edx; jmp rcx; 
0x00000000147a35: add [rax], al; add rdi, 0x10; jmp rcx; 
0x0000000014a515: add [rax], al; add rdi, 0x58; jmp rcx; 
0x00000000149be5: add [rax], al; add rdi, 0x68; jmp rcx; 
0x00000000146df8: add [rax], al; add rdi, 0xc8; jmp rcx; 
0x00000000148c56: add [rax], al; add rsi, 0x38; jmp qword ptr [rax+0x18]; 
0x0000000009a580: add [rax], al; add rsp, 0x10; mov eax, r12d; pop r12; ret; 
0x00000000096a6f: add [rax], al; add rsp, 0x10; mov rax, r8; pop rbp; ret; 
0x0000000005032a: add [rax], al; add rsp, 0x10; pop rbx; ret; 
0x00000000086354: add [rax], al; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x00000000097bfe: add [rax], al; add rsp, 0x18; ret; 
0x000000001081ab: add [rax], al; add rsp, 0x1a0; mov eax, r8d; pop rbx; ret; 
0x0000000004140f: add [rax], al; add rsp, 0x20; pop rbp; ret; 
0x000000001484a3: add [rax], al; add rsp, 0x20; pop rbx; ret; 
0x0000000014fb45: add [rax], al; add rsp, 0x28; pop rbx; pop rbp; ret; 
0x00000000190b98: add [rax], al; add rsp, 0x30; mov rax, r12; pop r12; ret; 
0x000000001092eb: add [rax], al; add rsp, 0x30; pop rbx; ret; 
0x00000000086d0f: add [rax], al; add rsp, 0x38; pop rbx; pop rbp; ret; 
0x0000000010d729: add [rax], al; add rsp, 0x40; pop r12; ret; 
0x0000000014bd61: add [rax], al; add rsp, 0x48; pop rbx; pop rbp; ret; 
0x00000000138cc3: add [rax], al; add rsp, 0x58; pop rbx; pop rbp; ret; 
0x0000000010e88c: add [rax], al; add rsp, 0x60; mov eax, r11d; pop rbx; ret; 
0x0000000010ee15: add [rax], al; add rsp, 0x60; mov rax, r12; pop r12; ret; 
0x0000000010fff5: add [rax], al; add rsp, 0x60; pop rbp; ret; 
0x00000000108a29: add [rax], al; add rsp, 0x68; pop rbp; pop r12; ret; 
0x000000000fbb62: add [rax], al; add rsp, 0x68; pop rbx; pop rbp; ret; 
0x000000001091aa: add [rax], al; add rsp, 0x68; ret; 
0x00000000108ba4: add [rax], al; add rsp, 0x78; ret; 
0x000000001122ac: add [rax], al; add rsp, 0x8; mov eax, r8d; ret; 
0x0000000009f69e: add [rax], al; add rsp, 0x8; pop rbp; pop r12; ret; 
0x00000000143704: add [rax], al; add rsp, 0x8; pop rbx; pop rbp; jmp rcx; 
0x00000000029a36: add [rax], al; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000040736: add [rax], al; add rsp, 0x8; ret; 
0x00000000028e70: add [rax], al; add rsp, 0x98; ret; 
0x000000000e03fd: add [rax], al; add rsp, 0xb8; pop rbx; pop rbp; ret; 
0x000000000409de: add [rax], al; addsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x00000000040d2e: add [rax], al; addss xmm0, xmm0; ret; 
0x000000000b8536: add [rax], al; and ch, 0xf0; pop rbx; cmovne rax, rdx; ret; 
0x0000000009116e: add [rax], al; and dword ptr [rdi+0x8], 0xfffffffb; xor eax, eax; ret; 
0x00000000187d51: add [rax], al; and eax, 0xffff; and ecx, 0xffff; sub eax, ecx; ret; 
0x00000000118f78: add [rax], al; and eax, 0xfffff000; or eax, edx; ret; 
0x00000000038f4f: add [rax], al; and eax, esi; ret; 
0x000000000b86c3: add [rax], al; and ebx, 0xfff; lea rax, [rbx+0x1]; pop rbx; ret; 
0x00000000188623: add [rax], al; and ecx, 0xff; sub eax, ecx; ret; 
0x00000000187d56: add [rax], al; and ecx, 0xffff; sub eax, ecx; ret; 
0x000000000a845e: add [rax], al; bsf eax, eax; add rax, rdi; ret; 
0x000000000a846e: add [rax], al; bsf eax, eax; lea rax, [rax+rdi+0x10]; ret; 
0x000000000a847e: add [rax], al; bsf eax, eax; lea rax, [rax+rdi+0x20]; ret; 
0x000000000ae0f0: add [rax], al; bsf rax, rdx; ret; 
0x000000000cb734: add [rax], al; bsf rax, rdx; shr rax, 0x2; ret; 
0x0000000017e5fe: add [rax], al; bsr eax, eax; add rax, rdi; vzeroupper; ret; 
0x000000000a893e: add [rax], al; bsr eax, eax; lea rax, [rax+rdi+0x10]; ret; 
0x000000000a894e: add [rax], al; bsr eax, eax; lea rax, [rax+rdi+0x20]; ret; 
0x000000000a895e: add [rax], al; bsr eax, eax; lea rax, [rax+rdi+0x30]; ret; 
0x000000000adc08: add [rax], al; bsr rax, rax; add rax, rdi; ret; 
0x000000000adca2: add [rax], al; bsr rsi, rsi; lea rax, [rdi+rsi]; ret; 
0x0000000014a668: add [rax], al; bswap eax; mov [rdx+0x10], eax; mov eax, 0x1; ret; 
0x0000000014a568: add [rax], al; bswap eax; mov [rdx+0xc], eax; mov eax, 0x1; ret; 
0x000000001470c2: add [rax], al; bswap ebp; mov ebp, ebp; call qword ptr [rax+0x18]; 
0x00000000055dae: add [rax], al; bts rax, 0x30; mov [rdi+0x8], rax; mov eax, 0x2; ret; 
0x00000000055b9e: add [rax], al; bts rdx, 0x34; mov eax, 0x1; mov [rdi], rdx; ret; 
0x000000001592d7: add [rax], al; call qword ptr [r12+0xf90]; 
0x0000000015937f: add [rax], al; call qword ptr [r13+0xf88]; 
0x0000000015950d: add [rax], al; call qword ptr [r13+0xf90]; 
0x0000000008ceb0: add [rax], al; call qword ptr [r14+0x80]; 
0x0000000014d7e9: add [rax], al; call qword ptr [rax+0x18]; 
0x000000001423c5: add [rax], al; call qword ptr [rax+0x20]; 
0x000000001416cb: add [rax], al; call qword ptr [rax+0x28]; 
0x00000000083e19: add [rax], al; call qword ptr [rax+0x68]; 
0x000000001077ba: add [rax], al; call qword ptr [rax+0x88]; 
0x0000000014b936: add [rax], al; call qword ptr [rax]; 
0x0000000010b020: add [rax], al; call qword ptr [rbp+0x40]; 
0x000000000453e3: add [rax], al; call qword ptr [rbp+0xf90]; 
0x00000000191bae: add [rax], al; call qword ptr [rbx]; 
0x000000000ccb18: add [rax], al; call r12; 
0x00000000033d4c: add [rax], al; call r15; 
0x0000000014f8c3: add [rax], al; call r8; 
0x00000000028ce6: add [rax], al; call rax; 
0x00000000044a53: add [rax], al; call rdx; 
0x0000000010d7ea: add [rax], al; cmova eax, edx; ret; 
0x00000000092440: add [rax], al; cmova rax, rdx; mov [rip+0x154a4b], rax; ret; 
0x000000001373e6: add [rax], al; cmovb eax, edx; ret; 
0x0000000011aedd: add [rax], al; cmovb rax, rdx; ret; 
0x000000000fd306: add [rax], al; cmovbe rsi, r8; syscall; 
0x00000000091163: add [rax], al; cmove eax, edx; ret; 
0x0000000011067b: add [rax], al; cmove rax, rbx; pop rbx; ret; 
0x000000000b84e2: add [rax], al; cmove rax, rcx; ret; 
0x0000000009f659: add [rax], al; cmove rax, rdx; ret; 
0x000000000cb1a1: add [rax], al; cmovg r8d, eax; mov eax, r8d; ret; 
0x000000000cb181: add [rax], al; cmovl r8d, eax; mov eax, r8d; ret; 
0x000000000eac82: add [rax], al; cmovne eax, edx; pop rbx; ret; 
0x000000000d8e6a: add [rax], al; cmovne eax, edx; ret; 
0x00000000156347: add [rax], al; cmovne rax, rdx; add rsp, 0x8; ret; 
0x000000000e0a3d: add [rax], al; cmovne rax, rdx; ret; 
0x0000000012160e: add [rax], al; cmovns rax, [rbx+0x28]; pop rbx; ret; 
0x00000000092816: add [rax], al; cmp [rip+0x154669], rdi; jbe short 0x00000000000927c8; add rsp, 0x8; ret; 
0x00000000028d5b: add [rax], al; cmp [rsp+0x18], rcx; cmovne rdi, r14; call rdx; 
0x00000000176176: add [rax], al; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x000000000fd82c: add [rax], al; cmp dx, 0x2; je short 0x00000000000fd838; ret; 
0x0000000018bfa8: add [rax], al; cmp eax, ecx; jne 0x000000000018c065; xor eax, eax; ret; 
0x00000000091137: add [rax], al; cmp esi, 0x2; jbe short 0x0000000000091140; ret; 
0x00000000083df9: add [rax], al; cmp qword ptr [rax+0x30], 0x0; je short 0x0000000000083e08; ret; 
0x00000000099c30: add [rax], al; cmp rax, 0xffffffffffffffff; cmove rax, rdx; add rsp, 0x8; ret; 
0x000000001856b3: add [rax], al; cmp rdx, rcx; jne short 0x000000000018569b; vzeroupper; ret; 
0x0000000018a576: add [rax], al; cmp rdx, rcx; jne short 0x000000000018a556; vzeroupper; ret; 
0x00000000091360: add [rax], al; cmp rsi, 0x7fffffff; mov esi, 0x7fffffff; cmovbe rsi, r8; syscall; 
0x0000000009929b: add [rax], al; cmp rsi, [rip+0x14dbe4]; jae short 0x0000000000099319; lea rax, [rax-0x8]; ret; 
0x0000000008e3ee: add [rax], al; endbr64; cmp qword ptr [rdi+0x38], 0x0; je short 0x000000000008e400; ret; 
0x0000000009b28e: add [rax], al; endbr64; cmp qword ptr [rip+0x14bc74], 0x0; je short 0x000000000009b2a0; ret; 
0x00000000028dce: add [rax], al; endbr64; lea rax, [rip+0x18932d]; ret; 
0x0000000009132e: add [rax], al; endbr64; mov dword ptr [rdi], 0x0; xor eax, eax; ret; 
0x0000000011024e: add [rax], al; endbr64; mov eax, 0x132; syscall; 
0x0000000011a12e: add [rax], al; endbr64; mov eax, 0x134; syscall; 
0x0000000014135e: add [rax], al; endbr64; mov eax, 0x1; ret; 
0x000000001139ae: add [rax], al; endbr64; mov eax, 0x1c; syscall; 
0x0000000010956e: add [rax], al; endbr64; mov eax, 0x20; syscall; 
0x000000000de79e: add [rax], al; endbr64; mov eax, 0x25; syscall; 
0x000000000d020e: add [rax], al; endbr64; mov eax, 0x26; syscall; 
0x0000000014369e: add [rax], al; endbr64; mov eax, 0x2; ret; 
0x0000000011a8fe: add [rax], al; endbr64; mov eax, 0x30; syscall; 
0x0000000011a2ee: add [rax], al; endbr64; mov eax, 0x31; syscall; 
0x0000000011a44e: add [rax], al; endbr64; mov eax, 0x32; syscall; 
0x0000000011a3be: add [rax], al; endbr64; mov eax, 0x34; syscall; 
0x0000000010e2be: add [rax], al; endbr64; mov eax, 0x3; syscall; 
0x00000000041bbe: add [rax], al; endbr64; mov eax, 0x3e; syscall; 
0x0000000011b14e: add [rax], al; endbr64; mov eax, 0x40; syscall; 
0x0000000011b10e: add [rax], al; endbr64; mov eax, 0x47; syscall; 
0x0000000010924e: add [rax], al; endbr64; mov eax, 0x49; syscall; 
0x00000000111bde: add [rax], al; endbr64; mov eax, 0x4c; syscall; 
0x00000000111c0e: add [rax], al; endbr64; mov eax, 0x4d; syscall; 
0x000000001096ee: add [rax], al; endbr64; mov eax, 0x50; syscall; 
0x0000000010a97e: add [rax], al; endbr64; mov eax, 0x57; syscall; 
0x0000000010a8be: add [rax], al; endbr64; mov eax, 0x58; syscall; 
0x0000000011a00e: add [rax], al; endbr64; mov eax, 0x63; syscall; 
0x00000000119c4e: add [rax], al; endbr64; mov eax, 0x7d; syscall; 
0x000000000421be: add [rax], al; endbr64; mov eax, 0x83; syscall; 
0x000000001194de: add [rax], al; endbr64; mov eax, 0x87; syscall; 
0x0000000010f13e: add [rax], al; endbr64; mov eax, 0x8c; syscall; 
0x00000000113a3e: add [rax], al; endbr64; mov eax, 0x95; syscall; 
0x0000000011058e: add [rax], al; endbr64; mov eax, 0x99; syscall; 
0x00000000119bae: add [rax], al; endbr64; mov eax, 0x9e; syscall; 
0x0000000011018e: add [rax], al; endbr64; mov eax, 0xa2; syscall; 
0x0000000011009e: add [rax], al; endbr64; mov eax, 0xa3; syscall; 
0x0000000011924e: add [rax], al; endbr64; mov eax, 0xa6; syscall; 
0x0000000011916e: add [rax], al; endbr64; mov eax, 0xad; syscall; 
0x00000000119d9e: add [rax], al; endbr64; mov eax, 0xb1; syscall; 
0x00000000119f4e: add [rax], al; endbr64; mov eax, 0xb4; syscall; 
0x0000000011927e: add [rax], al; endbr64; mov eax, 0xbb; syscall; 
0x00000000116f0e: add [rax], al; endbr64; mov eax, 0xc2; syscall; 
0x00000000116f6e: add [rax], al; endbr64; mov eax, 0xc3; syscall; 
0x00000000116e4e: add [rax], al; endbr64; mov eax, 0xc4; syscall; 
0x00000000116ffe: add [rax], al; endbr64; mov eax, 0xc5; syscall; 
0x000000000fd35e: add [rax], al; endbr64; mov eax, 0xcb; syscall; 
0x00000000119dfe: add [rax], al; endbr64; mov eax, 0xfe; syscall; 
0x0000000008e4ae: add [rax], al; endbr64; mov eax, 0xffffffff; ret; 
0x000000000895de: add [rax], al; endbr64; mov eax, [rdi]; and eax, 0x804; ret; 
0x000000000425be: add [rax], al; endbr64; mov eax, [rip+0x1a0bde]; ret; 
0x000000001297ae: add [rax], al; endbr64; mov eax, edi; rol ax, 0x8; ret; 
0x0000000015ceee: add [rax], al; endbr64; mov qword ptr [rcx], 0x0; mov eax, 0xffffffff; ret; 
0x00000000060fee: add [rax], al; endbr64; mov r10, rcx; mov eax, 0x108; syscall; 
0x00000000119a2e: add [rax], al; endbr64; mov r10, rcx; mov eax, 0x11e; syscall; 
0x00000000119afe: add [rax], al; endbr64; mov r10, rcx; mov eax, 0x136; syscall; 
0x00000000119f1e: add [rax], al; endbr64; mov r10, rcx; mov eax, 0x19; syscall; 
0x0000000010dc8e: add [rax], al; endbr64; mov r10, rcx; mov eax, 0x28; syscall; 
0x00000000119fde: add [rax], al; endbr64; mov r10, rcx; mov eax, 0xb3; syscall; 
0x00000000116ede: add [rax], al; endbr64; mov r10, rcx; mov eax, 0xbf; syscall; 
0x00000000116e1e: add [rax], al; endbr64; mov r10, rcx; mov eax, 0xc1; syscall; 
0x0000000011b22e: add [rax], al; endbr64; mov r10, rcx; mov eax, 0xdc; syscall; 
0x0000000010840e: add [rax], al; endbr64; mov r10d, ecx; mov eax, 0x14c; syscall; 
0x0000000010d7ce: add [rax], al; endbr64; mov r10d, ecx; mov eax, 0xdd; syscall; 
0x0000000008fdfe: add [rax], al; endbr64; mov rax, 0xffffffffffffffff; ret; 
0x0000000015113e: add [rax], al; endbr64; mov rax, [rdi+0x18]; sub rax, [rdi+0x20]; ret; 
0x0000000008fe5e: add [rax], al; endbr64; mov rax, [rdi+0x68]; ret; 
0x0000000008fe3e: add [rax], al; endbr64; mov rax, [rip+0x154775]; ret; 
0x00000000038f7e: add [rax], al; endbr64; mov rax, [rip+0x1a9f3d]; add rax, fs:[0x0]; ret; 
0x00000000038f9e: add [rax], al; endbr64; mov rax, [rip+0x1a9f55]; add rax, fs:[0x0]; ret; 
0x0000000002902e: add [rax], al; endbr64; mov rax, [rip+0x1b9e0d]; add rax, fs:[0x0]; ret; 
0x0000000002a6be: add [rax], al; endbr64; mov rax, [rip+0x1baf9d]; ret; 
0x00000000129b5e: add [rax], al; endbr64; mov rax, [rip+0xb92c5]; add rax, fs:[0x0]; ret; 
0x0000000011c96e: add [rax], al; endbr64; mov rax, [rip+0xc64bd]; mov eax, [rax+0x38]; ret; 
0x0000000008fe6e: add [rax], al; endbr64; mov rax, rdi; ret; 
0x000000000deade: add [rax], al; endbr64; pop rdi; mov eax, 0x3a; syscall; 
0x0000000008fe2e: add [rax], al; endbr64; ret; 
0x0000000009131e: add [rax], al; endbr64; xor eax, eax; ret; 
0x0000000011b2ce: add [rax], al; endbr64; xor r10d, r10d; mov eax, 0x1d; syscall; 
0x0000000004069e: add [rax], al; fld st, tbyte ptr [rsp+0x8]; fadd st, st(0); ret; 
0x0000000004053a: add [rax], al; fld st, tbyte ptr [rsp-0x18]; ret; 
0x000000000deb02: add [rax], al; incsspq rsi; jmp rdi; 
0x000000001296c9: add [rax], al; ja short 0x00000000001296d5; mov rax, rdi; sar rax, 0x6; ret; 
0x0000000009210b: add [rax], al; jbe short 0x0000000000092110; ret; 
0x0000000009214b: add [rax], al; jbe short 0x0000000000092150; ret; 
0x0000000009242b: add [rax], al; jbe short 0x0000000000092430; ret; 
0x000000000cb564: add [rax], al; je 0x00000000000cb4c5; lea rax, [rdi-0x10]; ret; 
0x0000000018329d: add [rax], al; je 0x00000000001833e0; mov byte ptr [rdi], 0x0; vzeroupper; ret; 
0x0000000009b29a: add [rax], al; je short 0x000000000009b2a0; ret; 
0x000000000c2c8b: add [rax], al; je short 0x00000000000c2c93; mov eax, r8d; ret; 
0x000000000cb614: add [rax], al; je short 0x00000000000cb680; lea rax, [rdi-0x10]; ret; 
0x0000000010ded6: add [rax], al; je short 0x000000000010dee8; mov qword ptr [rdi], 0xffffffffffffffff; ret; 
0x000000001149b0: add [rax], al; je short 0x00000000001149e5; mov rdi, rbp; xor esi, esi; call r12; 
0x00000000114a40: add [rax], al; je short 0x0000000000114a75; mov rdi, rbp; xor esi, esi; call r12; 
0x000000001157c7: add [rax], al; je short 0x00000000001157fa; mov rdi, rbp; xor esi, esi; call r12; 
0x00000000115878: add [rax], al; je short 0x00000000001158ad; mov rdi, rbp; xor esi, esi; call r12; 
0x00000000182b7d: add [rax], al; je short 0x0000000000182c00; mov byte ptr [rdi], 0x0; vzeroupper; ret; 
0x0000000018391d: add [rax], al; je short 0x00000000001839a0; mov byte ptr [rdi], 0x0; vzeroupper; ret; 
0x000000000cb093: add [rax], al; jg short 0x00000000000cb099; neg eax; ret; 
0x0000000018c683: add [rax], al; jg short 0x000000000018c690; neg eax; ret; 
0x00000000189449: add [rax], al; jl short 0x0000000000189450; neg eax; ret; 
0x00000000029027: add [rax], al; jmp rax; 
0x0000000007a4d1: add [rax], al; jmp rcx; 
0x0000000007550b: add [rax], al; jmp rsi; 
0x00000000050324: add [rax], al; jne 0x00000000000503b5; add rsp, 0x10; pop rbx; ret; 
0x0000000009a69d: add [rax], al; jne 0x000000000009a752; add rsp, 0x18; ret; 
0x000000000ead02: add [rax], al; jne 0x00000000000eac2d; ret; 
0x00000000108b9e: add [rax], al; jne 0x0000000000108c63; add rsp, 0x78; ret; 
0x000000001091a4: add [rax], al; jne 0x0000000000109245; add rsp, 0x68; ret; 
0x000000001092e5: add [rax], al; jne 0x000000000010939e; add rsp, 0x30; pop rbx; ret; 
0x00000000109415: add [rax], al; jne 0x00000000001094ce; add rsp, 0x30; pop rbx; ret; 
0x0000000010d723: add [rax], al; jne 0x000000000010d7c3; add rsp, 0x40; pop r12; ret; 
0x0000000010ffef: add [rax], al; jne 0x0000000000110093; add rsp, 0x60; pop rbp; ret; 
0x00000000126da2: add [rax], al; jne 0x0000000000126e7d; leave; ret; 
0x0000000014849d: add [rax], al; jne 0x0000000000148523; add rsp, 0x20; pop rbx; ret; 
0x0000000017e962: add [rax], al; jne 0x000000000017e870; ret; 
0x000000001858a0: add [rax], al; jne 0x0000000000185820; ret; 
0x000000000284d3: add [rax], al; jne short 0x000000000002849b; ret; 
0x00000000040c20: add [rax], al; jne short 0x0000000000040c30; test eax, 0x7fffff; je short 0x0000000000040c30; ret; 
0x00000000041463: add [rax], al; jne short 0x000000000004146c; add rsp, 0x18; ret; 
0x000000000417a6: add [rax], al; jne short 0x00000000000417b2; add rsp, 0x148; ret; 
0x000000000418da: add [rax], al; jne short 0x0000000000041904; mov eax, r8d; add rsp, 0x118; ret; 
0x00000000041aee: add [rax], al; jne short 0x0000000000041b34; mov eax, r9d; add rsp, 0x148; ret; 
0x00000000041db2: add [rax], al; jne short 0x0000000000041dc5; add rsp, 0x118; ret; 
0x00000000041e35: add [rax], al; jne short 0x0000000000041e48; add rsp, 0x118; ret; 
0x00000000041f40: add [rax], al; jne short 0x0000000000041f4c; add rsp, 0x98; ret; 
0x00000000042184: add [rax], al; jne short 0x00000000000421b5; add rsp, 0x40; pop rbx; ret; 
0x000000000424a3: add [rax], al; jne short 0x00000000000424af; add rsp, 0x148; ret; 
0x00000000042943: add [rax], al; jne short 0x000000000004294f; add rsp, 0xa8; ret; 
0x000000000455f1: add [rax], al; jne short 0x00000000000455fa; add rsp, 0x28; ret; 
0x000000000456e1: add [rax], al; jne short 0x00000000000456ea; add rsp, 0x28; ret; 
0x00000000045a15: add [rax], al; jne short 0x0000000000045a6a; add rsp, 0x18; ret; 
0x00000000045f6b: add [rax], al; jne short 0x0000000000045f74; add rsp, 0x18; ret; 
0x00000000045fb8: add [rax], al; jne short 0x0000000000045fc1; add rsp, 0x18; ret; 
0x0000000004600a: add [rax], al; jne short 0x0000000000046013; add rsp, 0x18; ret; 
0x00000000046057: add [rax], al; jne short 0x0000000000046060; add rsp, 0x18; ret; 
0x000000000460aa: add [rax], al; jne short 0x00000000000460b3; add rsp, 0x18; ret; 
0x000000000460f7: add [rax], al; jne short 0x0000000000046100; add rsp, 0x18; ret; 
0x00000000050d43: add [rax], al; jne short 0x0000000000050d4f; add rsp, 0xd8; ret; 
0x0000000005229d: add [rax], al; jne short 0x00000000000522a9; add rsp, 0xd8; ret; 
0x0000000005314c: add [rax], al; jne short 0x0000000000053153; push r10; ret; 
0x00000000053625: add [rax], al; jne short 0x000000000005362c; push r10; ret; 
0x00000000055918: add [rax], al; jne short 0x0000000000055995; leave; ret; 
0x000000000597e1: add [rax], al; jne short 0x0000000000059800; add rsp, 0x450; pop rbp; ret; 
0x00000000059a31: add [rax], al; jne short 0x0000000000059a72; add rsp, 0x38; ret; 
0x0000000005fd76: add [rax], al; jne short 0x000000000005fd82; add rsp, 0xd8; ret; 
0x0000000005fe4b: add [rax], al; jne short 0x000000000005fe57; add rsp, 0xd8; ret; 
0x0000000005ff02: add [rax], al; jne short 0x000000000005ff0e; add rsp, 0xd8; ret; 
0x0000000005ffd4: add [rax], al; jne short 0x000000000005ffe0; add rsp, 0xd8; ret; 
0x00000000060096: add [rax], al; jne short 0x00000000000600a2; add rsp, 0xd8; ret; 
0x00000000060156: add [rax], al; jne short 0x0000000000060162; add rsp, 0xd8; ret; 
0x00000000060244: add [rax], al; jne short 0x0000000000060250; add rsp, 0xd8; ret; 
0x0000000006031b: add [rax], al; jne short 0x0000000000060327; add rsp, 0xd8; ret; 
0x00000000060981: add [rax], al; jne short 0x000000000006098e; add rsp, 0x1010; pop rbp; ret; 
0x00000000060f25: add [rax], al; jne short 0x0000000000060f37; add rsp, 0x18; ret; 
0x000000000612ae: add [rax], al; jne short 0x00000000000612ba; add rsp, 0xd8; ret; 
0x00000000061389: add [rax], al; jne short 0x0000000000061395; add rsp, 0xd8; ret; 
0x00000000082e06: add [rax], al; jne short 0x0000000000082e12; add rsp, 0xd8; ret; 
0x00000000082ec2: add [rax], al; jne short 0x0000000000082ece; add rsp, 0xd8; ret; 
0x00000000082fbb: add [rax], al; jne short 0x0000000000082fc7; add rsp, 0xd8; ret; 
0x0000000008308b: add [rax], al; jne short 0x0000000000083097; add rsp, 0xd8; ret; 
0x00000000083144: add [rax], al; jne short 0x0000000000083150; add rsp, 0xd8; ret; 
0x0000000008a3f4: add [rax], al; jne short 0x000000000008a409; add rsp, 0x48; ret; 
0x00000000091b3b: add [rax], al; jne short 0x0000000000091bb7; add rsp, 0x98; ret; 
0x00000000096669: add [rax], al; jne short 0x00000000000966a5; add rsp, 0x40; pop rbp; ret; 
0x000000000c6111: add [rax], al; jne short 0x00000000000c6134; add rsp, 0x20; pop rbx; ret; 
0x000000000c6bee: add [rax], al; jne short 0x00000000000c6bfa; add rsp, 0xd8; ret; 
0x000000000c6cc9: add [rax], al; jne short 0x00000000000c6cd5; add rsp, 0xd8; ret; 
0x000000000cc1d1: add [rax], al; jne short 0x00000000000cc1e9; add rsp, 0x28; ret; 
0x000000000cc24b: add [rax], al; jne short 0x00000000000cc255; add rsp, 0x40; pop rbp; ret; 
0x000000000ccff7: add [rax], al; jne short 0x00000000000cd036; add rsp, 0x28; ret; 
0x000000000d653a: add [rax], al; jne short 0x00000000000d6543; add rsp, 0x18; ret; 
0x000000000d8dfa: add [rax], al; jne short 0x00000000000d8e03; add rsp, 0x18; ret; 
0x000000000d9ac1: add [rax], al; jne short 0x00000000000d9ace; add rsp, 0xe0; pop rbx; ret; 
0x000000000d9b59: add [rax], al; jne short 0x00000000000d9b66; add rsp, 0xe0; pop rbx; ret; 
0x000000000db2fd: add [rax], al; jne short 0x00000000000db353; add rsp, 0x38; ret; 
0x000000000dfbcd: add [rax], al; jne short 0x00000000000dfc23; add rsp, 0x38; ret; 
0x000000000dfc6d: add [rax], al; jne short 0x00000000000dfcc3; add rsp, 0x38; ret; 
0x000000000dff3d: add [rax], al; jne short 0x00000000000dffa3; add rsp, 0x38; ret; 
0x000000000dffed: add [rax], al; jne short 0x00000000000e0053; add rsp, 0x38; ret; 
0x000000000e0a13: add [rax], al; jne short 0x00000000000e0a33; mov eax, 0xfffa; ret; 
0x000000000e0b34: add [rax], al; jne short 0x00000000000e0b40; mov eax, 0x40; ret; 
0x000000000fd48f: add [rax], al; jne short 0x00000000000fd4e6; add rsp, 0x38; ret; 
0x00000000107cc9: add [rax], al; jne short 0x0000000000107ce1; add rsp, 0x28; ret; 
0x00000000107e7e: add [rax], al; jne short 0x0000000000107e88; add rsp, 0x10; pop rbp; ret; 
0x00000000107f73: add [rax], al; jne short 0x0000000000107f7c; add rsp, 0x38; ret; 
0x00000000107fce: add [rax], al; jne short 0x0000000000107fd7; add rsp, 0x18; ret; 
0x00000000108020: add [rax], al; jne short 0x0000000000108029; add rsp, 0x18; ret; 
0x00000000109fb3: add [rax], al; jne short 0x000000000010a000; add rsp, 0x130; pop rbp; ret; 
0x0000000010a841: add [rax], al; jne short 0x000000000010a84d; movzx eax, al; add rsp, 0x58; ret; 
0x0000000010df83: add [rax], al; jne short 0x000000000010dff4; add rsp, 0xa0; pop rbx; ret; 
0x0000000010e057: add [rax], al; jne short 0x000000000010e0cf; add rsp, 0xa0; pop rbx; ret; 
0x0000000010e349: add [rax], al; jne short 0x000000000010e393; add rsp, 0x68; ret; 
0x0000000010e3d8: add [rax], al; jne short 0x000000000010e423; add rsp, 0x18; ret; 
0x0000000010e490: add [rax], al; jne short 0x000000000010e4db; add rsp, 0x58; ret; 
0x0000000010e52e: add [rax], al; jne short 0x000000000010e57b; add rsp, 0x58; ret; 
0x0000000010ea12: add [rax], al; jne short 0x000000000010ea34; mov eax, r9d; add rsp, 0x38; ret; 
0x0000000010ea7b: add [rax], al; jne short 0x000000000010ea8b; add rsp, 0x18; ret; 
0x0000000010f8fd: add [rax], al; jne short 0x000000000010f95b; add rsp, 0x38; ret; 
0x0000000010f99d: add [rax], al; jne short 0x000000000010f9fb; add rsp, 0x38; ret; 
0x0000000010fa52: add [rax], al; jne short 0x000000000010facb; add rsp, 0x38; ret; 
0x0000000010fb22: add [rax], al; jne short 0x000000000010fb9b; add rsp, 0x38; ret; 
0x0000000010fc1c: add [rax], al; jne short 0x000000000010fc25; add rsp, 0x28; ret; 
0x00000000110762: add [rax], al; jne short 0x0000000000110777; add rsp, 0x58; ret; 
0x000000001107d5: add [rax], al; jne short 0x00000000001107de; add rsp, 0x28; ret; 
0x000000001108ad: add [rax], al; jne short 0x00000000001108ed; add rsp, 0x68; ret; 
0x00000000111a6b: add [rax], al; jne short 0x0000000000111a74; add rsp, 0x38; ret; 
0x00000000111aee: add [rax], al; jne short 0x0000000000111af7; add rsp, 0x38; ret; 
0x00000000111b62: add [rax], al; jne short 0x0000000000111b6b; add rsp, 0x38; ret; 
0x00000000111bcd: add [rax], al; jne short 0x0000000000111bd6; add rsp, 0x38; ret; 
0x000000001131d6: add [rax], al; jne short 0x00000000001131e2; add rsp, 0xd8; ret; 
0x000000001132af: add [rax], al; jne short 0x00000000001132bb; add rsp, 0xd8; ret; 
0x00000000114607: add [rax], al; jne short 0x0000000000114610; add rsp, 0x18; ret; 
0x00000000115d9b: add [rax], al; jne short 0x0000000000115da7; add rsp, 0xd8; ret; 
0x00000000115e5b: add [rax], al; jne short 0x0000000000115e67; add rsp, 0xd8; ret; 
0x00000000116039: add [rax], al; jne short 0x0000000000116045; add rsp, 0x418; ret; 
0x000000001162a2: add [rax], al; jne short 0x00000000001162ae; add rsp, 0xd8; ret; 
0x0000000011650f: add [rax], al; jne short 0x000000000011651b; add rsp, 0xd8; ret; 
0x00000000119ad5: add [rax], al; jne short 0x0000000000119af3; add rsp, 0x58; ret; 
0x0000000011ac4c: add [rax], al; jne short 0x000000000011ac55; add rsp, 0x18; ret; 
0x0000000011af4b: add [rax], al; jne short 0x000000000011af5f; add rsp, 0xa0; pop rbx; ret; 
0x0000000011b1d1: add [rax], al; jne short 0x000000000011b223; add rsp, 0x58; ret; 
0x0000000012393d: add [rax], al; jne short 0x0000000000123949; add rsp, 0xd8; ret; 
0x00000000125546: add [rax], al; jne short 0x0000000000125552; add rsp, 0xd8; ret; 
0x00000000127b2b: add [rax], al; jne short 0x0000000000127b3c; add rsp, 0xd8; ret; 
0x00000000127c31: add [rax], al; jne short 0x0000000000127c45; add rsp, 0xd8; ret; 
0x00000000127d47: add [rax], al; jne short 0x0000000000127d53; add rsp, 0xd8; ret; 
0x00000000127e0f: add [rax], al; jne short 0x0000000000127e1b; add rsp, 0xd8; ret; 
0x00000000128c51: add [rax], al; jne short 0x0000000000128c65; add rsp, 0xd8; ret; 
0x00000000128d67: add [rax], al; jne short 0x0000000000128d73; add rsp, 0xd8; ret; 
0x00000000128e2f: add [rax], al; jne short 0x0000000000128e3b; add rsp, 0xd8; ret; 
0x00000000129276: add [rax], al; jne short 0x0000000000129285; add rsp, 0x28; ret; 
0x000000001292d6: add [rax], al; jne short 0x00000000001292e5; add rsp, 0x28; ret; 
0x0000000012939f: add [rax], al; jne short 0x00000000001293ab; add rsp, 0xd8; ret; 
0x0000000012947f: add [rax], al; jne short 0x000000000012948b; add rsp, 0xd8; ret; 
0x0000000012955f: add [rax], al; jne short 0x000000000012956b; add rsp, 0xd8; ret; 
0x0000000013101d: add [rax], al; jne short 0x0000000000131049; add rsp, 0x38; ret; 
0x000000001310ba: add [rax], al; jne short 0x00000000001310c3; add rsp, 0x38; ret; 
0x00000000131127: add [rax], al; jne short 0x0000000000131130; add rsp, 0x28; ret; 
0x000000001376c9: add [rax], al; jne short 0x00000000001376e4; add rsp, 0x20; pop rbp; ret; 
0x00000000138f67: add [rax], al; jne short 0x0000000000138f85; add rsp, 0x20; pop rbx; ret; 
0x00000000138fbc: add [rax], al; jne short 0x0000000000138fc5; add rsp, 0x18; ret; 
0x0000000013900f: add [rax], al; jne short 0x0000000000139018; add rsp, 0x28; ret; 
0x0000000013989e: add [rax], al; jne short 0x00000000001398a7; add rsp, 0x18; ret; 
0x0000000013f78b: add [rax], al; jne short 0x000000000013f796; add rsp, 0x10; pop r12; ret; 
0x00000000141439: add [rax], al; jne short 0x0000000000141443; add rsp, 0x40; pop rbp; ret; 
0x00000000143d2f: add [rax], al; jne short 0x0000000000143d73; add rsp, 0x10; pop rbx; ret; 
0x00000000144280: add [rax], al; jne short 0x00000000001442b2; add rsp, 0x10; pop rbx; ret; 
0x0000000014431e: add [rax], al; jne short 0x0000000000144355; add rsp, 0x10; pop rbx; ret; 
0x00000000144f53: add [rax], al; jne short 0x0000000000144f67; add rsp, 0x40; pop rbx; ret; 
0x0000000014b4f1: add [rax], al; jne short 0x000000000014b511; add rsp, 0x10; pop rbx; ret; 
0x0000000014b843: add [rax], al; jne short 0x000000000014b8ba; add rsp, 0x10; pop r12; ret; 
0x0000000014baba: add [rax], al; jne short 0x000000000014bb2a; add rsp, 0x30; pop rbx; ret; 
0x0000000014bbfa: add [rax], al; jne short 0x000000000014bc6a; add rsp, 0x30; pop rbx; ret; 
0x0000000014d643: add [rax], al; jne short 0x000000000014d64c; add rsp, 0x78; ret; 
0x0000000014d6b9: add [rax], al; jne short 0x000000000014d6c2; add rsp, 0x78; ret; 
0x0000000014d729: add [rax], al; jne short 0x000000000014d732; add rsp, 0x78; ret; 
0x0000000014d799: add [rax], al; jne short 0x000000000014d7a2; add rsp, 0x78; ret; 
0x0000000014d7fa: add [rax], al; jne short 0x000000000014d803; add rsp, 0x78; ret; 
0x0000000014d85e: add [rax], al; jne short 0x000000000014d867; add rsp, 0x78; ret; 
0x0000000014d8c9: add [rax], al; jne short 0x000000000014d8d2; add rsp, 0x78; ret; 
0x0000000014d94c: add [rax], al; jne short 0x000000000014d955; add rsp, 0x78; ret; 
0x0000000014de6f: add [rax], al; jne short 0x000000000014de98; add rsp, 0x28; ret; 
0x0000000014f8d4: add [rax], al; jne short 0x000000000014f8dd; add rsp, 0x48; ret; 
0x0000000014f93f: add [rax], al; jne short 0x000000000014f983; add rsp, 0x10; pop rbx; ret; 
0x0000000014f9cf: add [rax], al; jne short 0x000000000014fa12; add rsp, 0x10; pop rbx; ret; 
0x0000000014fa98: add [rax], al; jne short 0x000000000014fafb; add rsp, 0x10; pop rbp; ret; 
0x0000000014feff: add [rax], al; jne short 0x000000000014ff44; add rsp, 0x10; pop rbx; ret; 
0x0000000014ff8f: add [rax], al; jne short 0x000000000014ffd3; add rsp, 0x10; pop rbx; ret; 
0x0000000015013f: add [rax], al; jne short 0x0000000000150189; add rsp, 0x10; pop rbx; ret; 
0x000000001501cf: add [rax], al; jne short 0x0000000000150213; add rsp, 0x10; pop rbx; ret; 
0x00000000150f2f: add [rax], al; jne short 0x0000000000150f75; add rsp, 0x10; pop rbx; ret; 
0x00000000150fbf: add [rax], al; jne short 0x0000000000151005; add rsp, 0x10; pop rbx; ret; 
0x0000000015104f: add [rax], al; jne short 0x0000000000151095; add rsp, 0x10; pop rbx; ret; 
0x000000001510df: add [rax], al; jne short 0x0000000000151125; add rsp, 0x10; pop rbx; ret; 
0x000000001517b5: add [rax], al; jne short 0x00000000001517c2; add rsp, 0x90; pop rbx; ret; 
0x00000000151829: add [rax], al; jne short 0x0000000000151835; movzx eax, al; add rsp, 0x18; ret; 
0x0000000015188a: add [rax], al; jne short 0x0000000000151896; movzx eax, al; add rsp, 0x18; ret; 
0x000000001518f8: add [rax], al; jne short 0x0000000000151902; add rsp, 0x10; pop rbx; ret; 
0x0000000015196b: add [rax], al; jne short 0x0000000000151975; add rsp, 0x10; pop rbx; ret; 
0x00000000156800: add [rax], al; jne short 0x0000000000156834; add rsp, 0x18; ret; 
0x00000000156af7: add [rax], al; jne short 0x0000000000156b2c; add rsp, 0x10; pop rbp; ret; 
0x00000000156b87: add [rax], al; jne short 0x0000000000156bbc; add rsp, 0x10; pop rbp; ret; 
0x00000000159922: add [rax], al; jne short 0x000000000015995e; add rsp, 0x58; ret; 
0x00000000159a19: add [rax], al; jne short 0x0000000000159a64; add rsp, 0x68; ret; 
0x00000000159bb2: add [rax], al; jne short 0x0000000000159c14; add rsp, 0x68; ret; 
0x00000000159be8: add [rax], al; jne short 0x0000000000159c14; mov rax, [rax+0x18]; add rsp, 0x68; jmp rax; 
0x00000000159c89: add [rax], al; jne short 0x0000000000159ce1; add rsp, 0x38; ret; 
0x0000000015a277: add [rax], al; jne short 0x000000000015a285; add rsp, 0x28; ret; 
0x0000000015a99c: add [rax], al; jne short 0x000000000015a9a5; add rsp, 0x28; ret; 
0x0000000015ce09: add [rax], al; jne short 0x000000000015ce13; add rsp, 0x10; pop rbx; ret; 
0x0000000015ce8f: add [rax], al; jne short 0x000000000015ce99; add rsp, 0x10; pop rbx; ret; 
0x0000000004260e: add [rax], al; lea eax, [rdx-0x1]; mov [rip+0x1a0b8f], eax; mov eax, edx; ret; 
0x000000001679bd: add [rax], al; lea r11, [rip+0x5068a]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000b6dee: add [rax], al; lea r11, [rip+0xf248d]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b4f2e: add [rax], al; lea r11, [rip+0xf4179]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b384e: add [rax], al; lea r11, [rip+0xf5679]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000050b2a: add [rax], al; lea r8, [rip+0x1959cd]; mov byte ptr [r8+rax], 0x0; mov rax, r8; ret; 
0x0000000018dba3: add [rax], al; lea r9, [rip+0x2aa58]; movsxd rcx, [r9+rbx*4]; add rcx, r9; notrack jmp rcx; 
0x0000000014ba68: add [rax], al; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x0000000014c23e: add [rax], al; lea r9, [rsp+0x1c]; call qword ptr [rax]; 
0x000000001420e9: add [rax], al; lea r9, [rsp+0x20]; call qword ptr [rax]; 
0x000000000b86c9: add [rax], al; lea rax, [rbx+0x1]; pop rbx; ret; 
0x0000000018a84e: add [rax], al; lea rax, [rdi+0x2]; ret; 
0x0000000018a85e: add [rax], al; lea rax, [rdi+0x3]; ret; 
0x0000000018a86e: add [rax], al; lea rax, [rdi+0x4]; ret; 
0x0000000018a87e: add [rax], al; lea rax, [rdi+0x5]; ret; 
0x0000000018a88e: add [rax], al; lea rax, [rdi+0x6]; ret; 
0x0000000018a7ca: add [rax], al; lea rax, [rdi+0x7]; ret; 
0x0000000018a89e: add [rax], al; lea rax, [rdi+0x8]; ret; 
0x0000000018a8ae: add [rax], al; lea rax, [rdi+0x9]; ret; 
0x0000000018a8be: add [rax], al; lea rax, [rdi+0xa]; ret; 
0x0000000018a8ce: add [rax], al; lea rax, [rdi+0xb]; ret; 
0x0000000018a8de: add [rax], al; lea rax, [rdi+0xc]; ret; 
0x0000000018a8ee: add [rax], al; lea rax, [rdi+0xd]; ret; 
0x0000000018a8fe: add [rax], al; lea rax, [rdi+0xe]; ret; 
0x0000000018a81d: add [rax], al; lea rax, [rdi+0xf]; ret; 
0x000000000ad7bd: add [rax], al; lea rax, [rdi+rax]; cmp [rax], sil; cmovne rax, rdx; ret; 
0x000000000cb4eb: add [rax], al; lea rax, [rdi-0x10]; ret; 
0x000000000cb66e: add [rax], al; lea rax, [rdi-0x4]; ret; 
0x000000000cb65e: add [rax], al; lea rax, [rdi-0x8]; ret; 
0x000000000cb64e: add [rax], al; lea rax, [rdi-0xc]; ret; 
0x0000000003737e: add [rax], al; lea rax, [rip+0x176e5b]; ret; 
0x00000000046132: add [rax], al; lea rax, [rip+0x1a023b]; add rsp, 0x8; ret; 
0x00000000114120: add [rax], al; lea rax, [rip+0xd3797]; add rsp, 0x18; ret; 
0x00000000113bc8: add [rax], al; lea rax, [rip+0xd3c9f]; add rsp, 0x8; ret; 
0x0000000007d7d4: add [rax], al; lea rcx, [rip+0x12b037]; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x0000000006164f: add [rax], al; lea rcx, [rip+0x144b28]; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x0000000008aae3: add [rax], al; lea rcx, [rip+0x15a3d4]; mov [rdx+0xe0], rcx; pop rbx; ret; 
0x0000000018dd4a: add [rax], al; lea rcx, [rip+0x2a91d]; movsxd rbx, [rcx+rbx*4]; add rcx, rbx; notrack jmp rcx; 
0x000000000f79cd: add [rax], al; lea rcx, [rip+0xb38ce]; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x0000000007b487: add [rax], al; lea rcx, [rip-0xc70]; mov dword ptr [rsp+0x38], 0x1; mov rbx, rsi; jmp rcx; 
0x000000000dda35: add [rax], al; lea rdi, [rip+0x109a62]; syscall; 
0x000000000dd8f5: add [rax], al; lea rdi, [rip+0x109ba2]; syscall; 
0x000000000dd83d: add [rax], al; lea rdi, [rip+0x109c5a]; syscall; 
0x000000000dd761: add [rax], al; lea rdi, [rip+0x109d2e]; syscall; 
0x000000000dd591: add [rax], al; lea rdi, [rip+0x109ebe]; syscall; 
0x000000000dd3cd: add [rax], al; lea rdi, [rip+0x10a03a]; syscall; 
0x000000000dd013: add [rax], al; lea rdi, [rip+0x10a39c]; syscall; 
0x000000000dbd65: add [rax], al; lea rdi, [rip+0x10b5c2]; syscall; 
0x000000000dbc25: add [rax], al; lea rdi, [rip+0x10b702]; syscall; 
0x000000000dbb6d: add [rax], al; lea rdi, [rip+0x10b7ba]; syscall; 
0x000000000db7a1: add [rax], al; lea rdi, [rip+0x10bb7e]; syscall; 
0x000000000db5d1: add [rax], al; lea rdi, [rip+0x10bd0e]; syscall; 
0x000000000db40d: add [rax], al; lea rdi, [rip+0x10be8a]; syscall; 
0x000000000dab15: add [rax], al; lea rdi, [rip+0x10c72a]; syscall; 
0x000000000ceb41: add [rax], al; lea rdi, [rip+0x1185f6]; syscall; 
0x000000000ce94d: add [rax], al; lea rdi, [rip+0x1187ea]; syscall; 
0x000000000c6681: add [rax], al; lea rdi, [rip+0x11efd6]; syscall; 
0x000000000998a1: add [rax], al; lea rdi, [rip+0x14a2f6]; syscall; 
0x0000000009b231: add [rax], al; lea rdi, [rip+0x14bcce]; syscall; 
0x0000000009afad: add [rax], al; lea rdi, [rip+0x14bf52]; syscall; 
0x0000000009adcd: add [rax], al; lea rdi, [rip+0x14c132]; syscall; 
0x0000000009abe1: add [rax], al; lea rdi, [rip+0x14c31e]; syscall; 
0x0000000009ab71: add [rax], al; lea rdi, [rip+0x14c38e]; syscall; 
0x00000000096ef1: add [rax], al; lea rdi, [rip+0x14cca6]; syscall; 
0x00000000096e91: add [rax], al; lea rdi, [rip+0x14cd06]; syscall; 
0x00000000096ac1: add [rax], al; lea rdi, [rip+0x14d0d6]; syscall; 
0x00000000096861: add [rax], al; lea rdi, [rip+0x14d336]; syscall; 
0x00000000096219: add [rax], al; lea rdi, [rip+0x14d97e]; syscall; 
0x000000000961e1: add [rax], al; lea rdi, [rip+0x14d9b6]; syscall; 
0x00000000097ec0: add [rax], al; lea rdi, [rip+0x14efb7]; syscall; 
0x00000000097425: add [rax], al; lea rdi, [rip+0x14fa42]; syscall; 
0x000000000930fc: add [rax], al; lea rdi, [rip+0x153d7b]; syscall; 
0x00000000093080: add [rax], al; lea rdi, [rip+0x153de7]; syscall; 
0x00000000092dd9: add [rax], al; lea rdi, [rip+0x15409e]; syscall; 
0x00000000092b2d: add [rax], al; lea rdi, [rip+0x15434a]; syscall; 
0x00000000092062: add [rax], al; lea rdi, [rip+0x154795]; syscall; 
0x00000000091ebd: add [rax], al; lea rdi, [rip+0x15493a]; syscall; 
0x00000000091d31: add [rax], al; lea rdi, [rip+0x154ac6]; syscall; 
0x0000000008ff34: add [rax], al; lea rdi, [rip+0x156733]; syscall; 
0x0000000008f9f3: add [rax], al; lea rdi, [rip+0x156c74]; syscall; 
0x0000000008f663: add [rax], al; lea rdi, [rip+0x157004]; syscall; 
0x0000000008f303: add [rax], al; lea rdi, [rip+0x157364]; syscall; 
0x0000000008dbdf: add [rax], al; lea rdi, [rip+0x158a88]; syscall; 
0x0000000008d8ef: add [rax], al; lea rdi, [rip+0x158d78]; syscall; 
0x0000000008d5eb: add [rax], al; lea rdi, [rip+0x15907c]; syscall; 
0x00000000080cd0: add [rax], al; lea rdi, [rip+0x165957]; syscall; 
0x000000000808d4: add [rax], al; lea rdi, [rip+0x165d53]; syscall; 
0x00000000080828: add [rax], al; lea rdi, [rip+0x165dff]; syscall; 
0x0000000007e981: add [rax], al; lea rdi, [rip+0x166cd6]; syscall; 
0x0000000005f1a5: add [rax], al; lea rdi, [rip+0x18745a]; syscall; 
0x0000000005ef21: add [rax], al; lea rdi, [rip+0x1876da]; syscall; 
0x0000000005cd9d: add [rax], al; lea rdi, [rip+0x18984a]; syscall; 
0x0000000005cc5d: add [rax], al; lea rdi, [rip+0x18998a]; syscall; 
0x00000000052e85: add [rax], al; lea rdi, [rip+0x193742]; syscall; 
0x00000000052cc1: add [rax], al; lea rdi, [rip+0x193906]; syscall; 
0x000000000527b1: add [rax], al; lea rdi, [rip+0x193e16]; syscall; 
0x000000000503a5: add [rax], al; lea rdi, [rip+0x195ff2]; syscall; 
0x00000000050221: add [rax], al; lea rdi, [rip+0x196176]; syscall; 
0x000000000501c1: add [rax], al; lea rdi, [rip+0x1961d6]; syscall; 
0x00000000045a5d: add [rax], al; lea rdi, [rip+0x1a0902]; syscall; 
0x0000000004599d: add [rax], al; lea rdi, [rip+0x1a09c2]; syscall; 
0x000000000458d5: add [rax], al; lea rdi, [rip+0x1a0a8a]; syscall; 
0x000000000457fd: add [rax], al; lea rdi, [rip+0x1a0b62]; syscall; 
0x000000000448f5: add [rax], al; lea rdi, [rip+0x1a11ea]; syscall; 
0x00000000044830: add [rax], al; lea rdi, [rip+0x1a12af]; syscall; 
0x0000000004468d: add [rax], al; lea rdi, [rip+0x1a1452]; syscall; 
0x000000000445b4: add [rax], al; lea rdi, [rip+0x1a152b]; syscall; 
0x0000000003d01e: add [rax], al; lea rdi, [rip+0x1a89e1]; syscall; 
0x0000000003b693: add [rax], al; lea rdi, [rip+0x1aa334]; syscall; 
0x0000000003a4e2: add [rax], al; lea rdi, [rip+0x1ab435]; syscall; 
0x0000000003a4c2: add [rax], al; lea rdi, [rip+0x1ab455]; syscall; 
0x0000000003a358: add [rax], al; lea rdi, [rip+0x1ab5bf]; syscall; 
0x0000000002ac65: add [rax], al; lea rdi, [rip+0x1ba9f2]; syscall; 
0x0000000002aaf9: add [rax], al; lea rdi, [rip+0x1bab5e]; syscall; 
0x0000000002aa01: add [rax], al; lea rdi, [rip+0x1bac56]; syscall; 
0x0000000002684f: add [rax], al; lea rdi, [rip+0x1bf258]; syscall; 
0x0000000019197d: add [rax], al; lea rdi, [rip+0x54162]; syscall; 
0x00000000191b3d: add [rax], al; lea rdi, [rip+0x54cba]; syscall; 
0x00000000191e5d: add [rax], al; lea rdi, [rip+0x567f2]; syscall; 
0x0000000015805d: add [rax], al; lea rdi, [rip+0x9107e]; syscall; 
0x00000000156d65: add [rax], al; lea rdi, [rip+0x92376]; syscall; 
0x00000000156c85: add [rax], al; lea rdi, [rip+0x92456]; syscall; 
0x00000000156a9d: add [rax], al; lea rdi, [rip+0x9263e]; syscall; 
0x00000000156a0d: add [rax], al; lea rdi, [rip+0x926ce]; syscall; 
0x0000000015696d: add [rax], al; lea rdi, [rip+0x9276e]; syscall; 
0x000000001568bd: add [rax], al; lea rdi, [rip+0x9281e]; syscall; 
0x000000001564ed: add [rax], al; lea rdi, [rip+0x92bee]; syscall; 
0x0000000014c2ed: add [rax], al; lea rdi, [rip+0x9cbd2]; syscall; 
0x0000000014c18d: add [rax], al; lea rdi, [rip+0x9cd32]; syscall; 
0x0000000014bf81: add [rax], al; lea rdi, [rip+0x9cf3e]; syscall; 
0x0000000014bde1: add [rax], al; lea rdi, [rip+0x9d0de]; syscall; 
0x0000000014bc4d: add [rax], al; lea rdi, [rip+0x9d272]; syscall; 
0x0000000014bb0d: add [rax], al; lea rdi, [rip+0x9d3b2]; syscall; 
0x0000000014b9ad: add [rax], al; lea rdi, [rip+0x9d512]; syscall; 
0x0000000014b89d: add [rax], al; lea rdi, [rip+0x9d622]; syscall; 
0x0000000014840d: add [rax], al; lea rdi, [rip+0xa0a96]; syscall; 
0x0000000013f4d9: add [rax], al; lea rdi, [rip+0xa977e]; syscall; 
0x0000000013f1a9: add [rax], al; lea rdi, [rip+0xa9aae]; syscall; 
0x0000000013ee29: add [rax], al; lea rdi, [rip+0xa9e2e]; syscall; 
0x0000000013ec2b: add [rax], al; lea rdi, [rip+0xaa02c]; syscall; 
0x0000000013eaa1: add [rax], al; lea rdi, [rip+0xaa1b6]; syscall; 
0x0000000013e864: add [rax], al; lea rdi, [rip+0xaa3f3]; syscall; 
0x0000000013de1d: add [rax], al; lea rdi, [rip+0xaad72]; syscall; 
0x0000000013dc9c: add [rax], al; lea rdi, [rip+0xaaef3]; syscall; 
0x0000000013dc62: add [rax], al; lea rdi, [rip+0xaaf2d]; syscall; 
0x0000000013db55: add [rax], al; lea rdi, [rip+0xab03a]; syscall; 
0x0000000013d315: add [rax], al; lea rdi, [rip+0xab87a]; syscall; 
0x0000000013d24d: add [rax], al; lea rdi, [rip+0xab942]; syscall; 
0x0000000013d131: add [rax], al; lea rdi, [rip+0xaba5e]; syscall; 
0x0000000013bd9e: add [rax], al; lea rdi, [rip+0xacba1]; syscall; 
0x0000000013851d: add [rax], al; lea rdi, [rip+0xb0132]; syscall; 
0x00000000138241: add [rax], al; lea rdi, [rip+0xb040e]; syscall; 
0x00000000133f61: add [rax], al; lea rdi, [rip+0xb46da]; syscall; 
0x000000001339e1: add [rax], al; lea rdi, [rip+0xb4c3e]; syscall; 
0x0000000013381d: add [rax], al; lea rdi, [rip+0xb4dba]; syscall; 
0x00000000133755: add [rax], al; lea rdi, [rip+0xb4e22]; syscall; 
0x00000000133615: add [rax], al; lea rdi, [rip+0xb4f62]; syscall; 
0x0000000013355d: add [rax], al; lea rdi, [rip+0xb501a]; syscall; 
0x00000000132e6d: add [rax], al; lea rdi, [rip+0xb5702]; syscall; 
0x00000000132b3d: add [rax], al; lea rdi, [rip+0xb5a32]; syscall; 
0x00000000132981: add [rax], al; lea rdi, [rip+0xb5bee]; syscall; 
0x00000000132467: add [rax], al; lea rdi, [rip+0xb6064]; syscall; 
0x0000000012eb75: add [rax], al; lea rdi, [rip+0xb983a]; syscall; 
0x0000000012ea35: add [rax], al; lea rdi, [rip+0xb997a]; syscall; 
0x0000000012e97d: add [rax], al; lea rdi, [rip+0xb9a32]; syscall; 
0x0000000012e891: add [rax], al; lea rdi, [rip+0xb9b16]; syscall; 
0x0000000012e6c1: add [rax], al; lea rdi, [rip+0xb9cb6]; syscall; 
0x0000000012e4fd: add [rax], al; lea rdi, [rip+0xb9e52]; syscall; 
0x0000000012e435: add [rax], al; lea rdi, [rip+0xb9eca]; syscall; 
0x0000000012e2f5: add [rax], al; lea rdi, [rip+0xba00a]; syscall; 
0x0000000012e23d: add [rax], al; lea rdi, [rip+0xba0c2]; syscall; 
0x0000000012e15d: add [rax], al; lea rdi, [rip+0xba19a]; syscall; 
0x0000000012dc91: add [rax], al; lea rdi, [rip+0xba5ee]; syscall; 
0x0000000012d6c1: add [rax], al; lea rdi, [rip+0xbab5e]; syscall; 
0x0000000012d1a1: add [rax], al; lea rdi, [rip+0xbb036]; syscall; 
0x0000000012cfd5: add [rax], al; lea rdi, [rip+0xbb1c2]; syscall; 
0x0000000012ce95: add [rax], al; lea rdi, [rip+0xbb302]; syscall; 
0x0000000012cddd: add [rax], al; lea rdi, [rip+0xbb3ba]; syscall; 
0x0000000012ccfd: add [rax], al; lea rdi, [rip+0xbb492]; syscall; 
0x0000000012c8e1: add [rax], al; lea rdi, [rip+0xbb866]; syscall; 
0x0000000012c2c5: add [rax], al; lea rdi, [rip+0xbbe22]; syscall; 
0x0000000012c16d: add [rax], al; lea rdi, [rip+0xbbf7a]; syscall; 
0x0000000012c0ad: add [rax], al; lea rdi, [rip+0xbc03a]; syscall; 
0x0000000012bfc5: add [rax], al; lea rdi, [rip+0xbc11a]; syscall; 
0x0000000012bee1: add [rax], al; lea rdi, [rip+0xbc1c6]; syscall; 
0x0000000012b881: add [rax], al; lea rdi, [rip+0xbc7e6]; syscall; 
0x0000000012b675: add [rax], al; lea rdi, [rip+0xbc9aa]; syscall; 
0x0000000012b51d: add [rax], al; lea rdi, [rip+0xbcb02]; syscall; 
0x0000000012b45d: add [rax], al; lea rdi, [rip+0xbcbc2]; syscall; 
0x0000000012b375: add [rax], al; lea rdi, [rip+0xbcca2]; syscall; 
0x0000000012a761: add [rax], al; lea rdi, [rip+0xbd83e]; syscall; 
0x0000000012a4f1: add [rax], al; lea rdi, [rip+0xbda6e]; syscall; 
0x00000000129d71: add [rax], al; lea rdi, [rip+0xbe18e]; syscall; 
0x00000000120315: add [rax], al; lea rdi, [rip+0xc7b32]; syscall; 
0x000000001201d5: add [rax], al; lea rdi, [rip+0xc7c72]; syscall; 
0x0000000012011d: add [rax], al; lea rdi, [rip+0xc7d2a]; syscall; 
0x0000000011fd43: add [rax], al; lea rdi, [rip+0xc80fc]; syscall; 
0x0000000011fb19: add [rax], al; lea rdi, [rip+0xc82ee]; syscall; 
0x0000000011f951: add [rax], al; lea rdi, [rip+0xc846e]; syscall; 
0x0000000011f78d: add [rax], al; lea rdi, [rip+0xc85ea]; syscall; 
0x0000000011f6bd: add [rax], al; lea rdi, [rip+0xc8666]; syscall; 
0x0000000011f5ed: add [rax], al; lea rdi, [rip+0xc8736]; syscall; 
0x0000000011f551: add [rax], al; lea rdi, [rip+0xc87d2]; syscall; 
0x0000000011eab5: add [rax], al; lea rdi, [rip+0xc923a]; syscall; 
0x0000000011e975: add [rax], al; lea rdi, [rip+0xc937a]; syscall; 
0x0000000011e8bd: add [rax], al; lea rdi, [rip+0xc9432]; syscall; 
0x0000000011e2c3: add [rax], al; lea rdi, [rip+0xc9a24]; syscall; 
0x0000000011e0c1: add [rax], al; lea rdi, [rip+0xc9bce]; syscall; 
0x0000000011dee1: add [rax], al; lea rdi, [rip+0xc9d46]; syscall; 
0x0000000011dd1d: add [rax], al; lea rdi, [rip+0xc9ea2]; syscall; 
0x0000000011361d: add [rax], al; lea rdi, [rip+0xd422a]; syscall; 
0x00000000113501: add [rax], al; lea rdi, [rip+0xd4346]; syscall; 
0x000000001130a1: add [rax], al; lea rdi, [rip+0xd47a6]; syscall; 
0x00000000112b70: add [rax], al; lea rdi, [rip+0xd4cd7]; syscall; 
0x00000000101561: add [rax], al; lea rdi, [rip+0xe6056]; syscall; 
0x000000000cc8f7: add [rax], al; lea rdi, [rsp+0xd0]; mov rsi, r13; call r12; 
0x0000000007ced3: add [rax], al; lea rdx, [rip+0x12b6f4]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000009c5e7: add [rax], al; lea rdx, [rip+0x138a0]; cmovne rax, rdx; ret; 
0x0000000009d77c: add [rax], al; lea rdx, [rip+0x1a63b]; lea rax, [rip+0x1a714]; cmove rax, rdx; ret; 
0x0000000009d3fc: add [rax], al; lea rdx, [rip+0x1a99b]; lea rax, [rip+0x1aa74]; cmove rax, rdx; ret; 
0x0000000009d29c: add [rax], al; lea rdx, [rip+0x1ab1b]; lea rax, [rip+0x1abf4]; cmove rax, rdx; ret; 
0x0000000018e772: add [rax], al; lea rdx, [rip+0x29f25]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000001276d4: add [rax], al; lea rdx, [rip+0x5da03]; lea rax, [rip+0x5da6c]; cmove rax, rdx; ret; 
0x00000000127604: add [rax], al; lea rdx, [rip+0x5daf3]; lea rax, [rip+0x5db5c]; cmove rax, rdx; ret; 
0x00000000127534: add [rax], al; lea rdx, [rip+0x5dbc3]; lea rax, [rip+0x5dc2c]; cmove rax, rdx; ret; 
0x0000000012772d: add [rax], al; lea rdx, [rip+0x6272a]; lea rax, [rip+0x62793]; cmove rax, rdx; ret; 
0x0000000012765d: add [rax], al; lea rdx, [rip+0x6281a]; lea rax, [rip+0x62883]; cmove rax, rdx; ret; 
0x0000000012758d: add [rax], al; lea rdx, [rip+0x628ea]; lea rax, [rip+0x62953]; cmove rax, rdx; ret; 
0x0000000014338e: add [rax], al; lea rdx, [rip+0x9f7a9]; jmp qword ptr [rdx+rax*8]; 
0x00000000103b59: add [rax], al; lea rdx, [rip+0xa8286]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000009c207: add [rax], al; lea rdx, [rip+0xc0d00]; cmovne rax, rdx; ret; 
0x0000000009c665: add [rax], al; lea rdx, [rip+0xc1b12]; cmovne rax, rdx; ret; 
0x000000000e5f08: add [rax], al; lea rdx, [rip+0xc4bc3]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000000e41cf: add [rax], al; lea rdx, [rip+0xc678c]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000000e0e82: add [rax], al; lea rdx, [rip+0xc96a9]; movsxd rax, [rdx+rbp*4]; add rax, rdx; notrack jmp rax; 
0x0000000009d610: add [rax], al; lea rdx, [rip+0xccec7]; cmovne rax, rdx; ret; 
0x0000000009d570: add [rax], al; lea rdx, [rip+0xccf47]; cmovne rax, rdx; ret; 
0x0000000009d660: add [rax], al; lea rdx, [rip+0xcefd7]; cmovne rax, rdx; ret; 
0x0000000009d5c0: add [rax], al; lea rdx, [rip+0xcf057]; cmovne rax, rdx; ret; 
0x0000000009c6b7: add [rax], al; lea rdx, [rip+0xd3c80]; cmovne rax, rdx; ret; 
0x0000000009d507: add [rax], al; lea rdx, [rip+0xd71c0]; cmovne rax, rdx; ret; 
0x0000000009d704: add [rax], al; lea rdx, [rip+0xe7a03]; lea rax, [rip+0xe7a6c]; cmove rax, rdx; ret; 
0x0000000009d384: add [rax], al; lea rdx, [rip+0xe7d63]; lea rax, [rip+0xe7dcc]; cmove rax, rdx; ret; 
0x0000000009d224: add [rax], al; lea rdx, [rip+0xe7ee3]; lea rax, [rip+0xe7f4c]; cmove rax, rdx; ret; 
0x0000000009d75d: add [rax], al; lea rdx, [rip+0xec72a]; lea rax, [rip+0xec793]; cmove rax, rdx; ret; 
0x0000000009d3dd: add [rax], al; lea rdx, [rip+0xeca8a]; lea rax, [rip+0xecaf3]; cmove rax, rdx; ret; 
0x0000000009d27d: add [rax], al; lea rdx, [rip+0xecc0a]; lea rax, [rip+0xecc73]; cmove rax, rdx; ret; 
0x0000000009d1bc: add [rax], al; lea rdx, [rip+0xed74b]; cmovne rax, rdx; ret; 
0x000000001275ac: add [rax], al; lea rdx, [rip-0x6f805]; lea rax, [rip-0x6f72c]; cmove rax, rdx; ret; 
0x0000000012767c: add [rax], al; lea rdx, [rip-0x6f8d5]; lea rax, [rip-0x6f7fc]; cmove rax, rdx; ret; 
0x0000000012774c: add [rax], al; lea rdx, [rip-0x6f9c5]; lea rax, [rip-0x6f8ec]; cmove rax, rdx; ret; 
0x0000000010e356: add [rax], al; lea rdx, [rsp+0x8]; mov esi, 0x10; mov eax, 0x48; syscall; 
0x0000000014cc63: add [rax], al; lea rsi, [r12+0x8]; mov rdi, rbp; call qword ptr [rax+0x10]; 
0x0000000014ca1a: add [rax], al; lea rsi, [rbp+0x8]; mov rdi, r15; call qword ptr [rdx+0x10]; 
0x0000000006a985: add [rax], al; lea rsi, [rip+0x13c42e]; movsxd rax, [rsi+rbx*4]; add rax, rsi; notrack jmp rax; 
0x000000000f59f7: add [rax], al; lea rsi, [rip+0xb55b4]; movsxd rax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x000000000b8450: add [rax], al; lea rsi, [rip+0xf1003]; movsxd rax, [rsi+rdi*4]; add rax, rsi; notrack jmp rax; 
0x00000000075792: add [rax], al; lea rsi, [rip-0x9b3]; mov dword ptr [rsp+0x48], 0x1; mov rbx, rdi; jmp rsi; 
0x0000000008ae3f: add [rax], al; lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax+0x90]; 
0x0000000008b4a9: add [rax], al; lea rsi, [rsp+0x20]; mov rdi, rbp; call qword ptr [rax+0x90]; 
0x00000000085a75: add [rax], al; lea rsi, [rsp+0x30]; mov rdi, r15; call qword ptr [r14+0x90]; 
0x0000000007f42b: add [rax], al; lea rsi, [rsp+0x8]; call rax; 
0x00000000126da8: add [rax], al; leave; ret; 
0x00000000040a46: add [rax], al; loopne 0x0000000000040a89; or rax, rdx; movq xmm0, rax; ret; 
0x000000000a4dae: add [rax], al; mov [rax], ecx; ret; 
0x00000000159502: add [rax], al; mov [rbp+0x18], rax; lea rdi, [r13+0x988]; call qword ptr [r13+0xf90]; 
0x000000001470bc: add [rax], al; mov [rbx+0xa8], ebp; bswap ebp; mov ebp, ebp; call qword ptr [rax+0x18]; 
0x000000001449f4: add [rax], al; mov [rcx], eax; sub rdx, rsi; mov rbp, rdx; call qword ptr [rbx+0x10]; 
0x0000000017225e: add [rax], al; mov [rcx], edx; mov [rcx+0x3], edx; ret; 
0x0000000017224e: add [rax], al; mov [rcx], edx; mov [rcx+0x4], dx; ret; 
0x0000000017222e: add [rax], al; mov [rcx], edx; ret; 
0x000000001722be: add [rax], al; mov [rcx], rdx; mov [rcx+0x5], rdx; ret; 
0x000000001722ce: add [rax], al; mov [rcx], rdx; mov [rcx+0x6], rdx; ret; 
0x0000000017229e: add [rax], al; mov [rcx], rdx; mov [rcx+0x7], edx; ret; 
0x000000001722de: add [rax], al; mov [rcx], rdx; mov [rcx+0x7], rdx; ret; 
0x0000000017228e: add [rax], al; mov [rcx], rdx; mov [rcx+0x8], dx; ret; 
0x000000001722ae: add [rax], al; mov [rcx], rdx; mov [rcx+0x8], edx; ret; 
0x000000001722ee: add [rax], al; mov [rcx], rdx; mov [rcx+0x8], rdx; ret; 
0x0000000017226e: add [rax], al; mov [rcx], rdx; ret; 
0x0000000010ec19: add [rax], al; mov [rdi+0x16], ax; ret; 
0x0000000015117f: add [rax], al; mov [rdi+0x28], eax; mov [rdi+0x18], rsi; mov eax, r8d; ret; 
0x0000000013625c: add [rax], al; mov [rdi+0xc], edx; mov [rsi], rdi; ret; 
0x000000000b419e: add [rax], al; mov [rdi-0x1], rdx; ret; 
0x000000000b478e: add [rax], al; mov [rdi], dh; lea rax, [rdi]; ret; 
0x000000000b314e: add [rax], al; mov [rdi], dh; ret; 
0x0000000018412e: add [rax], al; mov [rdi], dx; mov [rdi+r8-0x2], dx; vzeroupper; ret; 
0x0000000018411e: add [rax], al; mov [rdi], dx; vzeroupper; ret; 
0x000000000a4e7e: add [rax], al; mov [rdi], ecx; lea rax, [rdi+rax-0x1]; ret; 
0x000000000b418e: add [rax], al; mov [rdi], edx; mov [rdi+0x4], dx; ret; 
0x000000000b41fe: add [rax], al; mov [rdi], rdx; mov [rdi+0x5], rdx; ret; 
0x000000000b420e: add [rax], al; mov [rdi], rdx; mov [rdi+0x6], rdx; ret; 
0x000000000b41de: add [rax], al; mov [rdi], rdx; mov [rdi+0x7], edx; ret; 
0x000000000b41ce: add [rax], al; mov [rdi], rdx; mov [rdi+0x8], dx; ret; 
0x000000000b41ee: add [rax], al; mov [rdi], rdx; mov [rdi+0x8], edx; ret; 
0x0000000018414e: add [rax], al; mov [rdi], rdx; mov [rdi+r8-0x8], rdx; vzeroupper; ret; 
0x00000000055ba8: add [rax], al; mov [rdi], rdx; ret; 
0x000000000a4cbe: add [rax], al; mov [rdi], si; add rax, rdi; ret; 
0x000000000a4e4e: add [rax], al; mov [rdi], si; lea rax, [rdi+rax-0x1]; ret; 
0x00000000146f23: add [rax], al; mov [rdx+0x6c], ax; mov eax, 0x1; ret; 
0x00000000061157: add [rax], al; mov [rdx+0x8], rcx; mov dword ptr [rdx+0x4], 0x1; ret; 
0x0000000007f168: add [rax], al; mov [rdx+0xe0], rcx; ret; 
0x00000000092400: add [rax], al; mov [rip+0x150ea4], eax; ret; 
0x000000000923d9: add [rax], al; mov [rip+0x150eae], rax; ret; 
0x000000000923b0: add [rax], al; mov [rip+0x150ecf], rax; ret; 
0x00000000092390: add [rax], al; mov [rip+0x150ee7], rax; ret; 
0x00000000142ef8: add [rax], al; mov [rsi+0x10], rax; ret; 
0x000000000462b7: add [rax], al; mov [rsi+0x10], rax; xor eax, eax; mov dword ptr [rsi+0xc], 0x1000b; ret; 
0x00000000046306: add [rax], al; mov [rsi+0x10], rax; xor eax, eax; ret; 
0x00000000142f07: add [rax], al; mov [rsi+0x8], eax; ret; 
0x00000000142ec4: add [rax], al; mov [rsi+0x8], rax; ret; 
0x00000000046348: add [rax], al; mov [rsi+0xe], ax; xor eax, eax; ret; 
0x00000000107bb8: add [rax], al; mov [rsi], eax; xor eax, eax; ret; 
0x00000000148f49: add [rax], al; mov [rsp+0x10], rax; mov rax, [rsp+0x48]; call qword ptr [rax+0x28]; 
0x00000000085b41: add [rax], al; mov [rsp+0x10], rcx; xor edx, edx; mov rdi, r15; call qword ptr [r14+0x80]; 
0x000000000db324: add [rax], al; mov [rsp+0x10], rsi; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000142542: add [rax], al; mov [rsp+0x18], rdi; lea r9, [rsp+0x40]; call qword ptr [rax]; 
0x00000000094c7e: add [rax], al; mov [rsp+0x20], r8; mov [rsp+0x18], rsi; mov [rsp+0x10], r11; call rax; 
0x0000000014d628: add [rax], al; mov [rsp+0x38], rdx; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x000000000cc341: add [rax], al; mov [rsp+0x58], rax; xor eax, eax; mov [rsp+0x50], r12; call rbx; 
0x00000000159170: add [rax], al; mov [rsp+0x68], rax; xor eax, eax; call qword ptr [r12+0xf88]; 
0x0000000005025b: add [rax], al; mov [rsp+0x8], rax; xor eax, eax; mov eax, 0x3e; syscall; 
0x0000000010747a: add [rax], al; mov [rsp+0xe8], eax; mov eax, 0xe; syscall; 
0x000000000404e3: add [rax], al; mov [rsp-0x10], ax; fstp tbyte ptr [rdi], st; fld st, tbyte ptr [rsp-0x18]; ret; 
0x0000000017456e: add [rax], al; mov ax, [rcx]; mov [rdx], ax; lea rax, [rdx+0x1]; ret; 
0x0000000017023e: add [rax], al; mov ax, [rcx]; mov [rdx], ax; mov rax, rdi; ret; 
0x000000000a4d86: add [rax], al; mov byte ptr [rax], 0x0; ret; 
0x0000000011b83f: add [rax], al; mov byte ptr [rbp-0x7ca], 0x0; mov byte ptr [rbp-0x7c9], 0x73; syscall; 
0x000000000e7dee: add [rax], al; mov byte ptr [rdi+0x8], 0x15; mov eax, 0x1; ret; 
0x000000000e7e1e: add [rax], al; mov byte ptr [rdi+0x8], 0x1a; mov eax, 0x2; ret; 
0x000000000e7e2e: add [rax], al; mov byte ptr [rdi+0x8], 0x1c; mov eax, 0x2; ret; 
0x000000001832a3: add [rax], al; mov byte ptr [rdi], 0x0; vzeroupper; ret; 
0x000000000e7de3: add [rax], al; mov byte ptr [rdi], 0x5b; ret; 
0x000000000749b6: add [rax], al; mov byte ptr [rsp+0x38], 0x20; jmp rsi; 
0x000000000b316e: add [rax], al; mov cx, [rsi]; mov [rdi], cx; mov [rdi+0x2], dh; ret; 
0x00000000146f3e: add [rax], al; mov dword ptr [r8+0x4], 0x1; mov eax, 0x1; ret; 
0x0000000011b835: add [rax], al; mov dword ptr [rbp-0x7d0], 0x0; mov byte ptr [rbp-0x7ca], 0x0; mov byte ptr [rbp-0x7c9], 0x73; syscall; 
0x0000000014379a: add [rax], al; mov dword ptr [rbx+0x23b0], 0x0; mov rdi, r12; call qword ptr [rax+0x28]; 
0x0000000008c34c: add [rax], al; mov dword ptr [rbx+0x70], 0xffffffff; pop rbx; ret; 
0x00000000149cde: add [rax], al; mov dword ptr [rdi+0x4], 0x1; mov eax, 0x1; ret; 
0x00000000055c80: add [rax], al; mov dword ptr [rdx], 0xffffc002; ret; 
0x00000000142f7e: add [rax], al; mov dword ptr [rsi], 0x8; ret; 
0x00000000142f6e: add [rax], al; mov dword ptr [rsi], 0xa; ret; 
0x00000000142f5e: add [rax], al; mov dword ptr [rsi], 0xb; ret; 
0x0000000014d7d9: add [rax], al; mov dword ptr [rsp+0x10], 0x1; mov dword ptr [rsp+0x18], 0x1; call qword ptr [rax+0x18]; 
0x0000000014d835: add [rax], al; mov dword ptr [rsp+0x10], 0x1; mov dword ptr [rsp+0x18], 0x1; mov dword ptr [rsp+0x20], 0x5; call qword ptr [rax+0x18]; 
0x0000000014d7e1: add [rax], al; mov dword ptr [rsp+0x18], 0x1; call qword ptr [rax+0x18]; 
0x0000000014d83d: add [rax], al; mov dword ptr [rsp+0x18], 0x1; mov dword ptr [rsp+0x20], 0x5; call qword ptr [rax+0x18]; 
0x0000000014d845: add [rax], al; mov dword ptr [rsp+0x20], 0x5; call qword ptr [rax+0x18]; 
0x0000000007a4c9: add [rax], al; mov dword ptr [rsp+0x28], 0x20; jmp rcx; 
0x0000000014d620: add [rax], al; mov dword ptr [rsp+0x30], 0x0; mov [rsp+0x38], rdx; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x0000000014d929: add [rax], al; mov dword ptr [rsp+0x30], 0x2; movups [rsp+0x18], xmm1; movups [rsp+0x38], xmm0; call qword ptr [rax+0x18]; 
0x0000000007a4b9: add [rax], al; mov dword ptr [rsp+0x38], 0x0; mov dword ptr [rsp+0x3c], 0x0; mov dword ptr [rsp+0x28], 0x20; jmp rcx; 
0x0000000007a4c1: add [rax], al; mov dword ptr [rsp+0x3c], 0x0; mov dword ptr [rsp+0x28], 0x20; jmp rcx; 
0x0000000007bf36: add [rax], al; mov dword ptr [rsp+0x3c], 0x1; mov rbx, rsi; jmp rcx; 
0x000000000749a6: add [rax], al; mov dword ptr [rsp+0x48], 0x0; mov dword ptr [rsp+0x54], 0x0; mov byte ptr [rsp+0x38], 0x20; jmp rsi; 
0x0000000007be26: add [rax], al; mov dword ptr [rsp+0x50], 0x1; mov rbx, rsi; jmp rcx; 
0x000000000749ae: add [rax], al; mov dword ptr [rsp+0x54], 0x0; mov byte ptr [rsp+0x38], 0x20; jmp rsi; 
0x0000000007622e: add [rax], al; mov dword ptr [rsp+0x54], 0x1; mov rbx, rdi; jmp rsi; 
0x00000000076346: add [rax], al; mov dword ptr [rsp+0x68], 0x1; mov rbx, rdi; jmp rsi; 
0x0000000014da02: add [rax], al; mov dword ptr [rsp+0xb0], 0x1; mov dword ptr [rsp+0xb8], 0x1; call qword ptr [rax+0x18]; 
0x0000000014da0d: add [rax], al; mov dword ptr [rsp+0xb8], 0x1; call qword ptr [rax+0x18]; 
0x0000000014dbe8: add [rax], al; mov dword ptr [rsp+0xd0], 0x1; movups [rsp+0xb8], xmm5; call rax; 
0x0000000014db4c: add [rax], al; mov dword ptr [rsp+0xd0], 0x2; movups [rsp+0xb8], xmm3; movups [rsp+0xd8], xmm0; call rax; 
0x000000000b479e: add [rax], al; mov dx, [rsi]; mov [rdi], dx; lea rax, [rdi+0x1]; ret; 
0x000000000b55de: add [rax], al; mov dx, [rsi]; mov [rdi], dx; lea rax, [rdi+0x2]; ret; 
0x000000000b3e4e: add [rax], al; mov dx, [rsi]; mov [rdi], dx; ret; 
0x00000000136b55: add [rax], al; mov eax, 0x102; cmovne eax, edx; ret; 
0x00000000136b2b: add [rax], al; mov eax, 0x104; cmovne eax, edx; ret; 
0x0000000010ead8: add [rax], al; mov eax, 0x10; syscall; 
0x0000000010887e: add [rax], al; mov eax, 0x10c; syscall; 
0x00000000119327: add [rax], al; mov eax, 0x119; syscall; 
0x0000000011b763: add [rax], al; mov eax, 0x14; syscall; 
0x0000000009115e: add [rax], al; mov eax, 0x16; cmove eax, edx; ret; 
0x0000000014124c: add [rax], al; mov eax, 0x16; ret; 
0x000000000d8e2c: add [rax], al; mov eax, 0x1; add rsp, 0x8; ret; 
0x000000000cb08e: add [rax], al; mov eax, 0x1; jg short 0x00000000000cb099; neg eax; ret; 
0x0000000018c67e: add [rax], al; mov eax, 0x1; jg short 0x000000000018c690; neg eax; ret; 
0x00000000055b92: add [rax], al; mov eax, 0x1; ret; 
0x0000000014120f: add [rax], al; mov eax, 0x1d; pop rbx; ret; 
0x000000000e0aba: add [rax], al; mov eax, 0x20; cmove rax, rdx; ret; 
0x000000001411f4: add [rax], al; mov eax, 0x22; pop rbx; ret; 
0x00000000055da0: add [rax], al; mov eax, 0x2; ret; 
0x0000000010e360: add [rax], al; mov eax, 0x48; syscall; 
0x00000000041bf7: add [rax], al; mov eax, 0x7f; syscall; 
0x000000001377fe: add [rax], al; mov eax, 0x7fffffff; ret; 
0x0000000004263f: add [rax], al; mov eax, 0x80; syscall; 
0x00000000041c43: add [rax], al; mov eax, 0x82; syscall; 
0x000000001198c6: add [rax], al; mov eax, 0x95; syscall; 
0x00000000052f9c: add [rax], al; mov eax, 0x9e; syscall; 
0x000000000edece: add [rax], al; mov eax, 0xc; ret; 
0x000000000dda30: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x109a62]; syscall; 
0x000000000dd8f0: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x109ba2]; syscall; 
0x000000000dd838: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x109c5a]; syscall; 
0x000000000dd75c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x109d2e]; syscall; 
0x000000000dd58c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x109ebe]; syscall; 
0x000000000dd3c8: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x10a03a]; syscall; 
0x000000000dd00e: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x10a39c]; syscall; 
0x000000000dbd60: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x10b5c2]; syscall; 
0x000000000dbc20: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x10b702]; syscall; 
0x000000000dbb68: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x10b7ba]; syscall; 
0x000000000db79c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x10bb7e]; syscall; 
0x000000000db5cc: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x10bd0e]; syscall; 
0x000000000db408: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x10be8a]; syscall; 
0x000000000dab10: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x10c72a]; syscall; 
0x000000000ceb3c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x1185f6]; syscall; 
0x000000000ce948: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x1187ea]; syscall; 
0x000000000c667c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x11efd6]; syscall; 
0x0000000009989c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x14a2f6]; syscall; 
0x0000000009b22c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x14bcce]; syscall; 
0x0000000009afa8: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x14bf52]; syscall; 
0x0000000009adc8: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x14c132]; syscall; 
0x0000000009abdc: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x14c31e]; syscall; 
0x0000000009ab6c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x14c38e]; syscall; 
0x00000000096eec: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x14cca6]; syscall; 
0x00000000096e8c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x14cd06]; syscall; 
0x00000000096abc: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x14d0d6]; syscall; 
0x0000000009685c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x14d336]; syscall; 
0x00000000096214: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x14d97e]; syscall; 
0x000000000961dc: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x14d9b6]; syscall; 
0x00000000097ebb: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x14efb7]; syscall; 
0x00000000097420: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x14fa42]; syscall; 
0x000000000930f7: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x153d7b]; syscall; 
0x0000000009307b: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x153de7]; syscall; 
0x00000000092dd4: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x15409e]; syscall; 
0x00000000092b28: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x15434a]; syscall; 
0x0000000009205d: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x154795]; syscall; 
0x00000000091eb8: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x15493a]; syscall; 
0x00000000091d2c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x154ac6]; syscall; 
0x0000000008ff2f: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x156733]; syscall; 
0x0000000008f9ee: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x156c74]; syscall; 
0x0000000008f65e: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x157004]; syscall; 
0x0000000008f2fe: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x157364]; syscall; 
0x0000000008dbda: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x158a88]; syscall; 
0x0000000008d8ea: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x158d78]; syscall; 
0x0000000008d5e6: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x15907c]; syscall; 
0x00000000080ccb: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x165957]; syscall; 
0x000000000808cf: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x165d53]; syscall; 
0x00000000080823: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x165dff]; syscall; 
0x0000000007e97c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x166cd6]; syscall; 
0x0000000005f1a0: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x18745a]; syscall; 
0x0000000005ef1c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x1876da]; syscall; 
0x0000000005cd98: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x18984a]; syscall; 
0x0000000005cc58: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x18998a]; syscall; 
0x00000000052e80: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x193742]; syscall; 
0x00000000052cbc: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x193906]; syscall; 
0x000000000527ac: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x193e16]; syscall; 
0x000000000503a0: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x195ff2]; syscall; 
0x0000000005021c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x196176]; syscall; 
0x000000000501bc: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x1961d6]; syscall; 
0x00000000045a58: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x1a0902]; syscall; 
0x00000000045998: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x1a09c2]; syscall; 
0x000000000458d0: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x1a0a8a]; syscall; 
0x000000000457f8: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x1a0b62]; syscall; 
0x000000000448f0: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x1a11ea]; syscall; 
0x0000000004482b: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x1a12af]; syscall; 
0x00000000044688: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x1a1452]; syscall; 
0x000000000445af: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x1a152b]; syscall; 
0x0000000003d019: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x1a89e1]; syscall; 
0x0000000003b68e: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x1aa334]; syscall; 
0x0000000003a4dd: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x1ab435]; syscall; 
0x0000000003a4bd: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x1ab455]; syscall; 
0x0000000003a353: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x1ab5bf]; syscall; 
0x0000000002ac60: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x1ba9f2]; syscall; 
0x0000000002aaf4: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x1bab5e]; syscall; 
0x0000000002a9fc: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x1bac56]; syscall; 
0x0000000002684a: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x1bf258]; syscall; 
0x00000000191978: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x54162]; syscall; 
0x00000000191b38: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x54cba]; syscall; 
0x00000000191e58: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x567f2]; syscall; 
0x00000000158058: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x9107e]; syscall; 
0x00000000156d60: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x92376]; syscall; 
0x00000000156c80: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x92456]; syscall; 
0x00000000156a98: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x9263e]; syscall; 
0x00000000156a08: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x926ce]; syscall; 
0x00000000156968: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x9276e]; syscall; 
0x000000001568b8: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x9281e]; syscall; 
0x000000001564e8: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x92bee]; syscall; 
0x0000000014c2e8: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x9cbd2]; syscall; 
0x0000000014c188: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x9cd32]; syscall; 
0x0000000014bf7c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x9cf3e]; syscall; 
0x0000000014bddc: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x9d0de]; syscall; 
0x0000000014bc48: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x9d272]; syscall; 
0x0000000014bb08: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x9d3b2]; syscall; 
0x0000000014b9a8: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x9d512]; syscall; 
0x0000000014b898: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x9d622]; syscall; 
0x00000000148408: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xa0a96]; syscall; 
0x0000000013f4d4: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xa977e]; syscall; 
0x0000000013f1a4: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xa9aae]; syscall; 
0x0000000013ee24: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xa9e2e]; syscall; 
0x0000000013ec26: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xaa02c]; syscall; 
0x0000000013ea9c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xaa1b6]; syscall; 
0x0000000013e85f: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xaa3f3]; syscall; 
0x0000000013de18: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xaad72]; syscall; 
0x0000000013dc97: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xaaef3]; syscall; 
0x0000000013dc5d: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xaaf2d]; syscall; 
0x0000000013db50: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xab03a]; syscall; 
0x0000000013d310: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xab87a]; syscall; 
0x0000000013d248: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xab942]; syscall; 
0x0000000013d12c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xaba5e]; syscall; 
0x0000000013bd99: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xacba1]; syscall; 
0x00000000138518: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xb0132]; syscall; 
0x0000000013823c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xb040e]; syscall; 
0x00000000133f5c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xb46da]; syscall; 
0x000000001339dc: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xb4c3e]; syscall; 
0x00000000133818: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xb4dba]; syscall; 
0x00000000133750: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xb4e22]; syscall; 
0x00000000133610: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xb4f62]; syscall; 
0x00000000133558: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xb501a]; syscall; 
0x00000000132e68: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xb5702]; syscall; 
0x00000000132b38: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xb5a32]; syscall; 
0x0000000013297c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xb5bee]; syscall; 
0x00000000132462: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xb6064]; syscall; 
0x0000000012eb70: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xb983a]; syscall; 
0x0000000012ea30: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xb997a]; syscall; 
0x0000000012e978: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xb9a32]; syscall; 
0x0000000012e88c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xb9b16]; syscall; 
0x0000000012e6bc: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xb9cb6]; syscall; 
0x0000000012e4f8: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xb9e52]; syscall; 
0x0000000012e430: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xb9eca]; syscall; 
0x0000000012e2f0: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xba00a]; syscall; 
0x0000000012e238: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xba0c2]; syscall; 
0x0000000012e158: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xba19a]; syscall; 
0x0000000012dc8c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xba5ee]; syscall; 
0x0000000012d6bc: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xbab5e]; syscall; 
0x0000000012d19c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xbb036]; syscall; 
0x0000000012cfd0: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xbb1c2]; syscall; 
0x0000000012ce90: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xbb302]; syscall; 
0x0000000012cdd8: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xbb3ba]; syscall; 
0x0000000012ccf8: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xbb492]; syscall; 
0x0000000012c8dc: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xbb866]; syscall; 
0x0000000012c2c0: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xbbe22]; syscall; 
0x0000000012c168: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xbbf7a]; syscall; 
0x0000000012c0a8: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xbc03a]; syscall; 
0x0000000012bfc0: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xbc11a]; syscall; 
0x0000000012bedc: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xbc1c6]; syscall; 
0x0000000012b87c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xbc7e6]; syscall; 
0x0000000012b670: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xbc9aa]; syscall; 
0x0000000012b518: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xbcb02]; syscall; 
0x0000000012b458: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xbcbc2]; syscall; 
0x0000000012b370: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xbcca2]; syscall; 
0x0000000012a75c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xbd83e]; syscall; 
0x0000000012a4ec: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xbda6e]; syscall; 
0x00000000129d6c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xbe18e]; syscall; 
0x00000000120310: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xc7b32]; syscall; 
0x000000001201d0: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xc7c72]; syscall; 
0x00000000120118: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xc7d2a]; syscall; 
0x0000000011fd3e: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xc80fc]; syscall; 
0x0000000011fb14: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xc82ee]; syscall; 
0x0000000011f94c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xc846e]; syscall; 
0x0000000011f788: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xc85ea]; syscall; 
0x0000000011f6b8: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xc8666]; syscall; 
0x0000000011f5e8: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xc8736]; syscall; 
0x0000000011f54c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xc87d2]; syscall; 
0x0000000011eab0: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xc923a]; syscall; 
0x0000000011e970: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xc937a]; syscall; 
0x0000000011e8b8: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xc9432]; syscall; 
0x0000000011e2be: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xc9a24]; syscall; 
0x0000000011e0bc: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xc9bce]; syscall; 
0x0000000011dedc: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xc9d46]; syscall; 
0x0000000011dd18: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xc9ea2]; syscall; 
0x00000000113618: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xd422a]; syscall; 
0x000000001134fc: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xd4346]; syscall; 
0x0000000011309c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xd47a6]; syscall; 
0x00000000112b6b: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xd4cd7]; syscall; 
0x0000000010155c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xe6056]; syscall; 
0x000000000272c1: add [rax], al; mov eax, 0xca; syscall; 
0x000000000913b0: add [rax], al; mov eax, 0xcc; syscall; 
0x00000000041a1d: add [rax], al; mov eax, 0xd; syscall; 
0x000000000d9099: add [rax], al; mov eax, 0xe6; syscall; 
0x000000000418c2: add [rax], al; mov eax, 0xe; syscall; 
0x00000000136b14: add [rax], al; mov eax, 0xffffffff; cmove eax, edx; ret; 
0x0000000003fb8c: add [rax], al; mov eax, 0xffffffff; pop rbp; ret; 
0x0000000013712e: add [rax], al; mov eax, 0xffffffff; pop rbx; ret; 
0x00000000029324: add [rax], al; mov eax, 0xffffffff; ret; 
0x00000000116e0e: add [rax], al; mov eax, [rax+0x38]; test eax, eax; cmove eax, edx; ret; 
0x00000000045735: add [rax], al; mov eax, [rax+0x58]; ret; 
0x0000000017794e: add [rax], al; mov eax, [rcx]; mov [rdx], eax; mov rax, rdi; ret; 
0x000000000cafae: add [rax], al; mov eax, [rdi+0x14]; cmp eax, [rsi+0x14]; jne 0x00000000000cb090; ret; 
0x000000000cb00e: add [rax], al; mov eax, [rdi+0x24]; cmp eax, [rsi+0x24]; jne short 0x00000000000cb090; ret; 
0x000000000caf4e: add [rax], al; mov eax, [rdi+0x4]; cmp eax, [rsi+0x4]; jne 0x00000000000cb090; ret; 
0x0000000002bb86: add [rax], al; mov eax, [rip+0x1b9b0e]; test eax, eax; je short 0x000000000002bb98; ret; 
0x0000000013bae6: add [rax], al; mov eax, [rip+0xace5e]; test eax, eax; je short 0x000000000013baf8; ret; 
0x000000000973f5: add [rax], al; mov eax, ebx; syscall; 
0x0000000004188d: add [rax], al; mov eax, ecx; syscall; 
0x000000001297e6: add [rax], al; mov eax, edi; and eax, 0xffffff; ret; 
0x000000000deb3e: add [rax], al; mov eax, edx; syscall; 
0x0000000009a7b7: add [rax], al; mov eax, r12d; pop r12; ret; 
0x00000000158233: add [rax], al; mov eax, r12d; pop rbp; pop r12; ret; 
0x0000000011226d: add [rax], al; mov eax, r8d; add rsp, 0x8; ret; 
0x0000000010e852: add [rax], al; mov eax, r8d; mov ebx, fs:[r10]; syscall; 
0x00000000156ca4: add [rax], al; mov eax, r8d; mov qword ptr [rdx], 0x0; ret; 
0x00000000034183: add [rax], al; mov eax, r8d; pop rbp; pop r12; ret; 
0x0000000007e3d1: add [rax], al; mov eax, r8d; pop rbx; pop rbp; ret; 
0x000000000420dd: add [rax], al; mov eax, r8d; pop rbx; ret; 
0x000000000895d4: add [rax], al; mov eax, r8d; ret; 
0x00000000091297: add [rax], al; mov eax, r8d; syscall; 
0x000000000897e3: add [rax], al; mov eax, r9d; syscall; 
0x00000000076247: add [rax], al; mov ecx, 0x1; jmp rsi; 
0x000000000b318e: add [rax], al; mov ecx, [rsi]; mov [rdi+0x4], dh; mov [rdi], ecx; ret; 
0x000000000534bd: add [rax], al; mov edi, 0x2; mov r10d, 0x8; mov eax, 0xe; syscall; 
0x000000000596bf: add [rax], al; mov edi, 0x3004; mov eax, 0x9e; syscall; 
0x000000001356c8: add [rax], al; mov edi, [rbp-0x60]; syscall; 
0x000000001354ee: add [rax], al; mov edi, [rbx]; mov eax, 0x3; syscall; 
0x0000000011937e: add [rax], al; mov edi, [rsp+0x4]; syscall; 
0x0000000011b083: add [rax], al; mov edi, [rsp+0x8]; syscall; 
0x0000000010ff23: add [rax], al; mov edi, [rsp+0xc]; syscall; 
0x0000000015a821: add [rax], al; mov edi, eax; mov eax, 0x3e; syscall; 
0x00000000082716: add [rax], al; mov edx, 0x10; mov rsi, r13; mov rdi, r15; call qword ptr [r14+0x38]; 
0x0000000007bf4f: add [rax], al; mov edx, 0x1; jmp rcx; 
0x0000000008cdf7: add [rax], al; mov edx, 0x1; mov rdi, rbx; call qword ptr [r12+0x48]; 
0x00000000086994: add [rax], al; mov edx, 0x1; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x0000000011b75e: add [rax], al; mov edx, 0x40; mov eax, 0x14; syscall; 
0x000000000e0b44: add [rax], al; mov edx, 0x40; mov eax, 0x20; cmove rax, rdx; ret; 
0x000000000e09ea: add [rax], al; mov edx, 0x7d00; cmove rax, rdx; ret; 
0x000000000e0a38: add [rax], al; mov edx, 0x7f; cmovne rax, rdx; ret; 
0x000000001193ea: add [rax], al; mov edx, 0x8; syscall; 
0x000000000e09d0: add [rax], al; mov edx, 0xfde8; cmove rax, rdx; ret; 
0x000000000b317e: add [rax], al; mov edx, [rsi]; mov [rdi], edx; ret; 
0x00000000085d44: add [rax], al; mov edx, r12d; mov rsi, rbp; mov rdi, r15; call qword ptr [r14+0x80]; 
0x0000000008b07c: add [rax], al; mov edx, r13d; mov rsi, r12; mov rdi, rbp; call qword ptr [r15+0x80]; 
0x00000000142024: add [rax], al; mov esi, 0x4; mov rdi, rbp; lea r9, [rsp+0x20]; call qword ptr [rax]; 
0x0000000010ead3: add [rax], al; mov esi, 0x5409; mov eax, 0x10; syscall; 
0x0000000010eb04: add [rax], al; mov esi, 0x5409; mov r8d, eax; mov eax, 0x10; syscall; 
0x00000000090b4d: add [rax], al; mov esi, 0x80; mov eax, 0xca; syscall; 
0x000000000913ab: add [rax], al; mov esi, 0x80; mov eax, 0xcc; syscall; 
0x0000000015c6ca: add [rax], al; mov esi, 0x80; syscall; 
0x000000000dda2b: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x109a62]; syscall; 
0x000000000dd8eb: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x109ba2]; syscall; 
0x000000000dd833: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x109c5a]; syscall; 
0x000000000dd757: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x109d2e]; syscall; 
0x000000000dd587: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x109ebe]; syscall; 
0x000000000dd3c3: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10a03a]; syscall; 
0x000000000dd009: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10a39c]; syscall; 
0x000000000dbd5b: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10b5c2]; syscall; 
0x000000000dbc1b: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10b702]; syscall; 
0x000000000dbb63: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10b7ba]; syscall; 
0x000000000db797: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10bb7e]; syscall; 
0x000000000db5c7: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10bd0e]; syscall; 
0x000000000db403: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10be8a]; syscall; 
0x000000000dab0b: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10c72a]; syscall; 
0x000000000ceb37: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1185f6]; syscall; 
0x000000000ce943: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1187ea]; syscall; 
0x000000000c6677: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x11efd6]; syscall; 
0x00000000099897: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x14a2f6]; syscall; 
0x0000000009b227: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x14bcce]; syscall; 
0x0000000009afa3: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x14bf52]; syscall; 
0x0000000009adc3: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x14c132]; syscall; 
0x0000000009abd7: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x14c31e]; syscall; 
0x0000000009ab67: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x14c38e]; syscall; 
0x00000000096ee7: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x14cca6]; syscall; 
0x00000000096e87: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x14cd06]; syscall; 
0x00000000096ab7: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x14d0d6]; syscall; 
0x00000000096857: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x14d336]; syscall; 
0x0000000009620f: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x14d97e]; syscall; 
0x000000000961d7: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x14d9b6]; syscall; 
0x00000000097eb6: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x14efb7]; syscall; 
0x0000000009741b: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x14fa42]; syscall; 
0x000000000930f2: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x153d7b]; syscall; 
0x00000000093076: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x153de7]; syscall; 
0x00000000092dcf: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x15409e]; syscall; 
0x00000000092b23: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x15434a]; syscall; 
0x00000000092058: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x154795]; syscall; 
0x00000000091eb3: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x15493a]; syscall; 
0x00000000091d27: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x154ac6]; syscall; 
0x0000000008ff2a: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x156733]; syscall; 
0x0000000008f9e9: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x156c74]; syscall; 
0x0000000008f659: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x157004]; syscall; 
0x0000000008f2f9: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x157364]; syscall; 
0x0000000008dbd5: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x158a88]; syscall; 
0x0000000008d8e5: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x158d78]; syscall; 
0x0000000008d5e1: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x15907c]; syscall; 
0x00000000080cc6: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x165957]; syscall; 
0x000000000808ca: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x165d53]; syscall; 
0x0000000008081e: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x165dff]; syscall; 
0x0000000007e977: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x166cd6]; syscall; 
0x0000000005f19b: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x18745a]; syscall; 
0x0000000005ef17: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1876da]; syscall; 
0x0000000005cd93: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x18984a]; syscall; 
0x0000000005cc53: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x18998a]; syscall; 
0x00000000052e7b: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x193742]; syscall; 
0x00000000052cb7: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x193906]; syscall; 
0x000000000527a7: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x193e16]; syscall; 
0x0000000005039b: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x195ff2]; syscall; 
0x00000000050217: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x196176]; syscall; 
0x000000000501b7: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1961d6]; syscall; 
0x00000000045a53: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1a0902]; syscall; 
0x00000000045993: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1a09c2]; syscall; 
0x000000000458cb: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1a0a8a]; syscall; 
0x000000000457f3: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1a0b62]; syscall; 
0x000000000448eb: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1a11ea]; syscall; 
0x00000000044826: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1a12af]; syscall; 
0x00000000044683: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1a1452]; syscall; 
0x000000000445aa: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1a152b]; syscall; 
0x0000000003d014: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1a89e1]; syscall; 
0x0000000003b689: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1aa334]; syscall; 
0x0000000003a4d8: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1ab435]; syscall; 
0x0000000003a4b8: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1ab455]; syscall; 
0x0000000003a34e: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1ab5bf]; syscall; 
0x0000000002ac5b: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1ba9f2]; syscall; 
0x0000000002aaef: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1bab5e]; syscall; 
0x0000000002a9f7: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1bac56]; syscall; 
0x00000000026845: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1bf258]; syscall; 
0x00000000191973: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x54162]; syscall; 
0x00000000191b33: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x54cba]; syscall; 
0x00000000191e53: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x567f2]; syscall; 
0x00000000158053: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9107e]; syscall; 
0x00000000156d5b: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x92376]; syscall; 
0x00000000156c7b: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x92456]; syscall; 
0x00000000156a93: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9263e]; syscall; 
0x00000000156a03: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x926ce]; syscall; 
0x00000000156963: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9276e]; syscall; 
0x000000001568b3: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9281e]; syscall; 
0x000000001564e3: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x92bee]; syscall; 
0x0000000014c2e3: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9cbd2]; syscall; 
0x0000000014c183: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9cd32]; syscall; 
0x0000000014bf77: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9cf3e]; syscall; 
0x0000000014bdd7: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9d0de]; syscall; 
0x0000000014bc43: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9d272]; syscall; 
0x0000000014bb03: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9d3b2]; syscall; 
0x0000000014b9a3: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9d512]; syscall; 
0x0000000014b893: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9d622]; syscall; 
0x00000000148403: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa0a96]; syscall; 
0x0000000013f4cf: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa977e]; syscall; 
0x0000000013f19f: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa9aae]; syscall; 
0x0000000013ee1f: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa9e2e]; syscall; 
0x0000000013ec21: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xaa02c]; syscall; 
0x0000000013ea97: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xaa1b6]; syscall; 
0x0000000013e85a: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xaa3f3]; syscall; 
0x0000000013de13: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xaad72]; syscall; 
0x0000000013dc92: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xaaef3]; syscall; 
0x0000000013dc58: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xaaf2d]; syscall; 
0x0000000013db4b: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xab03a]; syscall; 
0x0000000013d30b: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xab87a]; syscall; 
0x0000000013d243: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xab942]; syscall; 
0x0000000013d127: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xaba5e]; syscall; 
0x0000000013bd94: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xacba1]; syscall; 
0x00000000138513: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb0132]; syscall; 
0x00000000138237: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb040e]; syscall; 
0x00000000133f57: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb46da]; syscall; 
0x000000001339d7: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb4c3e]; syscall; 
0x00000000133813: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb4dba]; syscall; 
0x0000000013374b: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb4e22]; syscall; 
0x0000000013360b: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb4f62]; syscall; 
0x00000000133553: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb501a]; syscall; 
0x00000000132e63: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb5702]; syscall; 
0x00000000132b33: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb5a32]; syscall; 
0x00000000132977: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb5bee]; syscall; 
0x0000000013245d: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb6064]; syscall; 
0x0000000012eb6b: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb983a]; syscall; 
0x0000000012ea2b: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb997a]; syscall; 
0x0000000012e973: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb9a32]; syscall; 
0x0000000012e887: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb9b16]; syscall; 
0x0000000012e6b7: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb9cb6]; syscall; 
0x0000000012e4f3: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb9e52]; syscall; 
0x0000000012e42b: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb9eca]; syscall; 
0x0000000012e2eb: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xba00a]; syscall; 
0x0000000012e233: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xba0c2]; syscall; 
0x0000000012e153: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xba19a]; syscall; 
0x0000000012dc87: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xba5ee]; syscall; 
0x0000000012d6b7: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbab5e]; syscall; 
0x0000000012d197: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbb036]; syscall; 
0x0000000012cfcb: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbb1c2]; syscall; 
0x0000000012ce8b: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbb302]; syscall; 
0x0000000012cdd3: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbb3ba]; syscall; 
0x0000000012ccf3: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbb492]; syscall; 
0x0000000012c8d7: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbb866]; syscall; 
0x0000000012c2bb: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbbe22]; syscall; 
0x0000000012c163: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbbf7a]; syscall; 
0x0000000012c0a3: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbc03a]; syscall; 
0x0000000012bfbb: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbc11a]; syscall; 
0x0000000012bed7: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbc1c6]; syscall; 
0x0000000012b877: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbc7e6]; syscall; 
0x0000000012b66b: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbc9aa]; syscall; 
0x0000000012b513: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbcb02]; syscall; 
0x0000000012b453: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbcbc2]; syscall; 
0x0000000012b36b: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbcca2]; syscall; 
0x0000000012a757: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbd83e]; syscall; 
0x0000000012a4e7: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbda6e]; syscall; 
0x00000000129d67: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbe18e]; syscall; 
0x0000000012030b: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc7b32]; syscall; 
0x000000001201cb: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc7c72]; syscall; 
0x00000000120113: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc7d2a]; syscall; 
0x0000000011fd39: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc80fc]; syscall; 
0x0000000011fb0f: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc82ee]; syscall; 
0x0000000011f947: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc846e]; syscall; 
0x0000000011f783: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc85ea]; syscall; 
0x0000000011f6b3: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc8666]; syscall; 
0x0000000011f5e3: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc8736]; syscall; 
0x0000000011f547: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc87d2]; syscall; 
0x0000000011eaab: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc923a]; syscall; 
0x0000000011e96b: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc937a]; syscall; 
0x0000000011e8b3: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc9432]; syscall; 
0x0000000011e2b9: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc9a24]; syscall; 
0x0000000011e0b7: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc9bce]; syscall; 
0x0000000011ded7: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc9d46]; syscall; 
0x0000000011dd13: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc9ea2]; syscall; 
0x00000000113613: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xd422a]; syscall; 
0x000000001134f7: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xd4346]; syscall; 
0x00000000113097: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xd47a6]; syscall; 
0x00000000112b66: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xd4cd7]; syscall; 
0x00000000101557: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xe6056]; syscall; 
0x000000000272bc: add [rax], al; mov esi, 0x81; mov eax, 0xca; syscall; 
0x000000000973f0: add [rax], al; mov esi, 0x81; mov eax, ebx; syscall; 
0x00000000044cbc: add [rax], al; mov esi, 0x81; mov rdi, r12; mov eax, 0xca; syscall; 
0x000000000452b5: add [rax], al; mov esi, 0x81; mov rdi, r13; mov eax, 0xca; syscall; 
0x00000000044ad5: add [rax], al; mov esi, 0x81; mov rdi, r14; mov eax, 0xca; syscall; 
0x000000000918fc: add [rax], al; mov esi, 0x81; mov rdi, rbp; mov eax, 0xca; syscall; 
0x000000000982a9: add [rax], al; mov esi, 0x81; mov rdi, rbx; mov eax, 0xca; syscall; 
0x0000000009921e: add [rax], al; mov esi, 0x81; mov rdi, rcx; mov eax, 0xca; syscall; 
0x00000000148684: add [rax], al; mov esi, 0x8; mov rdi, rbp; call qword ptr [rax+0x30]; 
0x00000000083f4e: add [rax], al; mov esi, 0xffffffff; call qword ptr [rax+0x18]; 
0x0000000008bbf8: add [rax], al; mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rax+0x18]; 
0x0000000008e10f: add [rax], al; mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rbx+0x18]; 
0x0000000008f8c4: add [rax], al; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [r15+0x18]; 
0x0000000008e8e6: add [rax], al; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rax+0x18]; 
0x0000000014a84e: add [rax], al; mov esi, [rbx+0x88]; mov rdi, r15; call qword ptr [rax+0x28]; 
0x00000000044a44: add [rax], al; mov esi, ebp; ror rdx, 0x11; xor rdx, fs:[0x30]; call rdx; 
0x00000000083c04: add [rax], al; mov esi, r12d; mov rdi, r14; call qword ptr [rax+0x18]; 
0x00000000045463: add [rax], al; mov fs:[rbx], rdx; mov rdi, [rbp+0x8]; call rax; 
0x0000000003900d: add [rax], al; mov fs:[rdx], rax; ret; 
0x0000000011bd5c: add [rax], al; mov qword ptr [rax+0x10], 0x0; mov qword ptr [rip+0xc760f], 0x0; ret; 
0x0000000008edc2: add [rax], al; mov qword ptr [rax+0x8], 0x0; ret; 
0x00000000151a8a: add [rax], al; mov qword ptr [rdi+0x20], 0x0; ret; 
0x0000000010df0e: add [rax], al; mov qword ptr [rdi], 0x0; ret; 
0x0000000008ff4d: add [rax], al; mov qword ptr [rip+0x15671e], 0x0; ret; 
0x000000001570ac: add [rax], al; mov qword ptr [rip+0x921c7], 0x0; add rsp, 0x8; ret; 
0x0000000011bd64: add [rax], al; mov qword ptr [rip+0xc760f], 0x0; ret; 
0x0000000011b996: add [rax], al; mov qword ptr [rip+0xc79dd], 0x0; add rsp, 0x8; ret; 
0x0000000011b961: add [rax], al; mov qword ptr [rip+0xc7a12], 0x3; add rsp, 0x8; ret; 
0x000000001125f4: add [rax], al; mov qword ptr [rip+0xd518f], 0x0; add rsp, 0x8; ret; 
0x00000000110e07: add [rax], al; mov qword ptr [rip+0xd682c], 0x0; add rsp, 0x8; ret; 
0x00000000142f8b: add [rax], al; mov qword ptr [rsi+0x8], 0x0; mov [rsi+0x10], rax; ret; 
0x00000000142ef0: add [rax], al; mov qword ptr [rsi+0x8], 0x1; mov [rsi+0x10], rax; ret; 
0x00000000090e86: add [rax], al; mov qword ptr [rsi], 0x0; mov eax, 0xffffffff; ret; 
0x00000000137ad1: add [rax], al; mov qword ptr [rsp], 0x0; call rax; 
0x0000000015a4ee: add [rax], al; mov qword ptr fs:[r12], 0x0; mov rax, [rsp+0x10]; mov rdi, [rsp+0x18]; call rax; 
0x000000000debe7: add [rax], al; mov r10, r12; lea rsi, [rip+0xcf5ef]; mov eax, 0x142; syscall; 
0x00000000041a17: add [rax], al; mov r10d, 0x8; mov eax, 0xd; syscall; 
0x00000000053041: add [rax], al; mov r10d, 0x8; mov eax, 0xe; syscall; 
0x00000000139f1e: add [rax], al; mov r8, r10; mov rax, r10; mov byte ptr [r8], 0x0; ret; 
0x000000000895ce: add [rax], al; mov r8d, 0x1; mov eax, r8d; ret; 
0x0000000010eb09: add [rax], al; mov r8d, eax; mov eax, 0x10; syscall; 
0x00000000041c6e: add [rax], al; mov r8d, eax; mov eax, 0x82; syscall; 
0x0000000014b92e: add [rax], al; mov r9, rbp; mov esi, 0x9; call qword ptr [rax]; 
0x000000000ff778: add [rax], al; mov r9, rbx; add r8, r13; call r14; 
0x000000000cbb2e: add [rax], al; mov rax, 0x2; ret; 
0x000000000cbb3e: add [rax], al; mov rax, 0x3; ret; 
0x000000000cbb4e: add [rax], al; mov rax, 0x4; ret; 
0x000000000cbb5e: add [rax], al; mov rax, 0x5; ret; 
0x000000000cbb6e: add [rax], al; mov rax, 0x6; ret; 
0x000000000cbb7e: add [rax], al; mov rax, 0x7; ret; 
0x0000000004089e: add [rax], al; mov rax, 0x8000000000000000; and rdx, rax; mov [rdi], rdx; ret; 
0x0000000013777e: add [rax], al; mov rax, 0xffffffffffffffff; mov rdx, 0xffffffffffffffff; ret; 
0x000000000417ec: add [rax], al; mov rax, 0xffffffffffffffff; ret; 
0x00000000147869: add [rax], al; mov rax, [r13+0xd0]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x0000000014a331: add [rax], al; mov rax, [r14+0x70]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x00000000086262: add [rax], al; mov rax, [rax+0x20]; jmp rax; 
0x00000000143810: add [rax], al; mov rax, [rax+0x23b8]; mov rdi, r12; call qword ptr [rax+0x28]; 
0x000000001170b6: add [rax], al; mov rax, [rax+0x58]; ret; 
0x0000000008ed4d: add [rax], al; mov rax, [rax+0x68]; test rax, rax; jne short 0x000000000008ed48; ret; 
0x00000000045578: add [rax], al; mov rax, [rax]; pop rbx; mov eax, [rax+0x58]; ret; 
0x0000000014876e: add [rax], al; mov rax, [rbp+0x8]; lea rsi, [rbx+0x18]; mov rdi, rbp; call qword ptr [rax+0x48]; 
0x0000000014302f: add [rax], al; mov rax, [rbp+0x8]; mov esi, 0x20; mov rdi, rbp; call qword ptr [rax+0x30]; 
0x0000000014da39: add [rax], al; mov rax, [rbp+0x8]; mov rsi, rbx; mov rdi, rbp; call qword ptr [rax]; 
0x000000001416a2: add [rax], al; mov rax, [rbx+0x20]; mov rdi, rbp; lea r15, [rsp+0x50]; call qword ptr [rax+0x20]; 
0x0000000014a8b6: add [rax], al; mov rax, [rbx+0x60]; mov rdi, r15; call qword ptr [rax+0x20]; 
0x00000000149e37: add [rax], al; mov rax, [rbx+0x70]; mov rsi, [rsp+0x18]; mov rdi, r12; call qword ptr [rax+0x8]; 
0x000000001470d1: add [rax], al; mov rax, [rbx+0xd0]; mov rsi, [rsp+0x18]; mov rdi, r12; call qword ptr [rax+0x8]; 
0x0000000014b571: add [rax], al; mov rax, [rbx]; mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x20]; 
0x0000000017795e: add [rax], al; mov rax, [rcx]; mov [rdx], rax; mov rax, rdi; ret; 
0x000000000896b6: add [rax], al; mov rax, [rdi+0x28]; sub rax, [rdi+0x20]; ret; 
0x00000000089586: add [rax], al; mov rax, [rdi+0x40]; sub rax, [rdi+0x38]; ret; 
0x0000000014f82e: add [rax], al; mov rax, [rdi+0x8]; call qword ptr [rax+0x18]; 
0x0000000014b61f: add [rax], al; mov rax, [rdi+0x8]; call qword ptr [rax+0x28]; 
0x00000000150e7e: add [rax], al; mov rax, [rdi+0x8]; jmp qword ptr [rax+0x40]; 
0x00000000150e8e: add [rax], al; mov rax, [rdi+0x8]; jmp qword ptr [rax+0x48]; 
0x0000000014fa4e: add [rax], al; mov rax, [rdi+0x8]; jmp qword ptr [rax+0x8]; 
0x0000000014b6ce: add [rax], al; mov rax, [rdi+0x8]; lea rdx, [rsp+0xc]; mov esi, 0xd; call qword ptr [rax+0x28]; 
0x000000001503a6: add [rax], al; mov rax, [rdi+0x8]; lea rsi, [rsp+0x10]; call qword ptr [rax]; 
0x00000000150f3e: add [rax], al; mov rax, [rdi+0x8]; lea rsi, [rsp+0x4]; call qword ptr [rax+0x40]; 
0x00000000143dde: add [rax], al; mov rax, [rdi+0x8]; mov r12, rsp; lea rsi, [rsp+0x8]; call qword ptr [rax]; 
0x00000000150ae6: add [rax], al; mov rax, [rdi+0x8]; mov rsi, rsp; call qword ptr [rax+0x40]; 
0x00000000143d3e: add [rax], al; mov rax, [rdi+0x8]; mov rsi, rsp; call qword ptr [rax]; 
0x000000000896a3: add [rax], al; mov rax, [rdx+0x20]; sub rax, [rdx+0x18]; sar rax, 0x2; ret; 
0x00000000089573: add [rax], al; mov rax, [rdx+0x38]; sub rax, [rdx+0x30]; sar rax, 0x2; ret; 
0x000000000d8f96: add [rax], al; mov rax, [rip+0x109ea9]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000009b67e: add [rax], al; mov rax, [rip+0x1478a9]; call qword ptr [rax]; 
0x00000000094d70: add [rax], al; mov rax, [rip+0x14e017]; mov [rsp+0x8], r8; xor edi, edi; call qword ptr [rax]; 
0x00000000094c4e: add [rax], al; mov rax, [rip+0x14e139]; xor edi, edi; call qword ptr [rax]; 
0x00000000094c08: add [rax], al; mov rax, [rip+0x14e17f]; call qword ptr [rax]; 
0x00000000089bce: add [rax], al; mov rax, [rip+0x159271]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000464de: add [rax], al; mov rax, [rip+0x19c961]; mov dword ptr fs:[rax], 0x5; mov eax, 0xffffffff; ret; 
0x00000000042516: add [rax], al; mov rax, [rip+0x1a0929]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000423f6: add [rax], al; mov rax, [rip+0x1a0a49]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000423ae: add [rax], al; mov rax, [rip+0x1a0a91]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000004235e: add [rax], al; mov rax, [rip+0x1a0ae1]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000041b5e: add [rax], al; mov rax, [rip+0x1a12e1]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000003fb1e: add [rax], al; mov rax, [rip+0x1a3321]; mov dword ptr fs:[rax], 0x2a; mov rax, r10; ret; 
0x000000000387ce: add [rax], al; mov rax, [rip+0x1aa5d9]; mov [rax], rdx; ret; 
0x00000000029316: add [rax], al; mov rax, [rip+0x1b9b29]; mov dword ptr fs:[rax], 0x9; mov eax, 0xffffffff; ret; 
0x00000000159a36: add [rax], al; mov rax, [rip+0x8f889]; call qword ptr [rax+0x8]; 
0x0000000015993e: add [rax], al; mov rax, [rip+0x8f981]; call qword ptr [rax]; 
0x0000000014d16e: add [rax], al; mov rax, [rip+0x95c11]; pop rbx; ret; 
0x0000000014d09e: add [rax], al; mov rax, [rip+0x95d81]; pop rbx; ret; 
0x0000000014d23e: add [rax], al; mov rax, [rip+0x95d99]; pop rbx; ret; 
0x0000000014cfce: add [rax], al; mov rax, [rip+0x95e11]; pop rbx; ret; 
0x0000000014123e: add [rax], al; mov rax, [rip+0xa1c01]; mov dword ptr fs:[rax], 0x16; mov eax, 0x16; ret; 
0x000000001290ee: add [rax], al; mov rax, [rip+0xb9d51]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000001199de: add [rax], al; mov rax, [rip+0xc9461]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000011999e: add [rax], al; mov rax, [rip+0xc94a1]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000011c0be: add [rax], al; mov rax, [rip+0xcb9d1]; mov rax, [rax+0x18]; add word ptr [rax], 0x1; ret; 
0x00000000116556: add [rax], al; mov rax, [rip+0xcc8e9]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000113836: add [rax], al; mov rax, [rip+0xcf609]; mov dword ptr fs:[rax], 0x16; mov rax, 0xffffffffffffffff; ret; 
0x000000001106b6: add [rax], al; mov rax, [rip+0xd2789]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010d5f6: add [rax], al; mov rax, [rip+0xd5849]; mov dword ptr fs:[rax], 0x16; xor eax, eax; ret; 
0x00000000108576: add [rax], al; mov rax, [rip+0xda8c9]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000108516: add [rax], al; mov rax, [rip+0xda929]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000001084b6: add [rax], al; mov rax, [rip+0xda989]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010812e: add [rax], al; mov rax, [rip+0xdad11]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000001080ce: add [rax], al; mov rax, [rip+0xdad71]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010806e: add [rax], al; mov rax, [rip+0xdadd1]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000003738e: add [rax], al; mov rax, [rsi+rax*8+0x80]; ret; 
0x0000000015a4f7: add [rax], al; mov rax, [rsp+0x10]; mov rdi, [rsp+0x18]; call rax; 
0x00000000142bbd: add [rax], al; mov rax, [rsp+0x30]; call rax; 
0x0000000008d20a: add [rax], al; mov rax, [rsp+0x8]; mov esi, 0xffffffff; mov rdi, r8; call qword ptr [rax+0x18]; 
0x000000001433f6: add [rax], al; mov rax, [rsp+0x8]; mov esi, r14d; mov rdi, r13; call qword ptr [rax+0x30]; 
0x00000000141407: add [rax], al; mov rax, [rsp+0x8]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x000000001903ea: add [rax], al; mov rax, [rsp]; add rsp, 0x38; ret; 
0x00000000083d97: add [rax], al; mov rax, [rsp]; mov esi, r12d; mov rdi, r14; call qword ptr [rax+0x18]; 
0x00000000159167: add [rax], al; mov rax, fs:[0x28]; mov [rsp+0x68], rax; xor eax, eax; call qword ptr [r12+0xf88]; 
0x0000000003fb2c: add [rax], al; mov rax, r10; ret; 
0x000000000cc03f: add [rax], al; mov rax, r12; pop r12; ret; 
0x00000000060795: add [rax], al; mov rax, r12; pop rbp; pop r12; ret; 
0x00000000156f07: add [rax], al; mov rax, r8; pop rbp; ret; 
0x00000000116bb1: add [rax], al; mov rax, r8; pop rbx; pop rbp; ret; 
0x00000000050b36: add [rax], al; mov rax, r8; ret; 
0x00000000186e61: add [rax], al; mov rax, r8; shr rax, 0x2; vzeroupper; ret; 
0x000000001824be: add [rax], al; mov rax, r8; vzeroupper; ret; 
0x0000000009549f: add [rax], al; mov rax, r9; ret; 
0x00000000116ce0: add [rax], al; mov rax, rbx; pop rbx; ret; 
0x000000000b441e: add [rax], al; mov rax, rdi; ret; 
0x000000001850ce: add [rax], al; mov rax, rdi; vzeroupper; ret; 
0x00000000074be6: add [rax], al; mov rbx, rcx; mov r13d, 0x1; xor ecx, ecx; jmp rsi; 
0x000000000757a1: add [rax], al; mov rbx, rdi; jmp rsi; 
0x0000000007a6de: add [rax], al; mov rbx, rdx; mov r9d, 0x1; xor edx, edx; jmp rcx; 
0x0000000007b496: add [rax], al; mov rbx, rsi; jmp rcx; 
0x0000000007b183: add [rax], al; mov rbx, rsi; mov dword ptr [rsp+0x28], 0x20; jmp rcx; 
0x0000000007b21b: add [rax], al; mov rbx, rsi; xor r12d, r12d; jmp rcx; 
0x000000000b31ce: add [rax], al; mov rcx, [rsi]; mov [rdi+0x8], dh; mov [rdi], rcx; ret; 
0x0000000015a49a: add [rax], al; mov rcx, [rsp+0x10]; mov rdi, [rsp+0x18]; call rcx; 
0x000000001412e0: add [rax], al; mov rcx, r15; call rbp; 
0x000000000b7ee3: add [rax], al; mov rcx, rdx; rep movsb [rdi], [rsi]; ret; 
0x00000000141673: add [rax], al; mov rdi, [r12]; mov rsi, rbp; mov rax, [rdi+0x38]; call qword ptr [rax+0x8]; 
0x00000000114b61: add [rax], al; mov rdi, [r13]; call rbx; 
0x0000000009b8fe: add [rax], al; mov rdi, [rbx+0x48]; call rax; 
0x000000001077b3: add [rax], al; mov rdi, [rbx+0x80]; call qword ptr [rax+0x88]; 
0x0000000009b6da: add [rax], al; mov rdi, [rdi+0x48]; mov rsi, rbp; call rax; 
0x00000000042cd5: add [rax], al; mov rdi, [rsp+0x10]; mov rdx, rbp; mov rsi, r12; call rbx; 
0x000000001437c0: add [rax], al; mov rdi, r12; call qword ptr [rax+0x20]; 
0x000000001437a4: add [rax], al; mov rdi, r12; call qword ptr [rax+0x28]; 
0x00000000143997: add [rax], al; mov rdi, r12; call qword ptr [rbx]; 
0x00000000044cc1: add [rax], al; mov rdi, r12; mov eax, 0xca; syscall; 
0x0000000009387e: add [rax], al; mov rdi, r12; neg rdi; call qword ptr [r13]; 
0x0000000014e73b: add [rax], al; mov rdi, r13; call qword ptr [rax+0x28]; 
0x000000000452ba: add [rax], al; mov rdi, r13; mov eax, 0xca; syscall; 
0x0000000009aec9: add [rax], al; mov rdi, r13; mov rdx, rbp; mov rsi, r12; call rax; 
0x00000000044ada: add [rax], al; mov rdi, r14; mov eax, 0xca; syscall; 
0x0000000014a869: add [rax], al; mov rdi, r15; add dword ptr [rax], 0x1; mov rax, [rbx+0x60]; call qword ptr [rax+0x8]; 
0x00000000085e1e: add [rax], al; mov rdi, r15; call qword ptr [r13+0x80]; 
0x0000000008439d: add [rax], al; mov rdi, r15; call qword ptr [rax+0x20]; 
0x0000000014a854: add [rax], al; mov rdi, r15; call qword ptr [rax+0x28]; 
0x00000000086014: add [rax], al; mov rdi, r15; call qword ptr [rbp+0x80]; 
0x00000000147870: add [rax], al; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x00000000143038: add [rax], al; mov rdi, rbp; call qword ptr [rax+0x30]; 
0x0000000008bcb2: add [rax], al; mov rdi, rbp; call qword ptr [rax+0x80]; 
0x0000000007ebba: add [rax], al; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x0000000009b83e: add [rax], al; mov rdi, rbp; call rax; 
0x0000000014c03e: add [rax], al; mov rdi, rbp; lea r8, [rip-0x929a]; lea rdx, [rip+0x389f]; call qword ptr [rax]; 
0x00000000142029: add [rax], al; mov rdi, rbp; lea r9, [rsp+0x20]; call qword ptr [rax]; 
0x00000000148648: add [rax], al; mov rdi, rbp; mov [r12+0x70], edx; call qword ptr [rax+0x30]; 
0x00000000091901: add [rax], al; mov rdi, rbp; mov eax, 0xca; syscall; 
0x0000000008cdfc: add [rax], al; mov rdi, rbx; call qword ptr [r12+0x48]; 
0x0000000008c413: add [rax], al; mov rdi, rbx; call qword ptr [r12+0x88]; 
0x000000000879f3: add [rax], al; mov rdi, rbx; call qword ptr [r13+0x60]; 
0x0000000008e836: add [rax], al; mov rdi, rbx; call qword ptr [rax+0x20]; 
0x00000000086999: add [rax], al; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x0000000007dbb0: add [rax], al; mov rdi, rbx; call r8; 
0x0000000007d4ef: add [rax], al; mov rdi, rbx; call rax; 
0x000000000982ae: add [rax], al; mov rdi, rbx; mov eax, 0xca; syscall; 
0x00000000099223: add [rax], al; mov rdi, rcx; mov eax, 0xca; syscall; 
0x0000000008d130: add [rax], al; mov rdx, [rbx+0x40]; mov rdi, rbx; sub rdx, rsi; call qword ptr [rbp+0x70]; 
0x0000000014b75e: add [rax], al; mov rdx, [rdi+0x8]; mov [rsp], rax; call qword ptr [rdx+0x20]; 
0x0000000007f161: add [rax], al; mov rdx, [rdi+0xa0]; mov [rdx+0xe0], rcx; ret; 
0x000000000b31be: add [rax], al; mov rdx, [rsi]; mov [rdi], rdx; ret; 
0x000000000a4d76: add [rax], al; mov rdx, [rsp+0x10]; mov [rax], rdx; ret; 
0x0000000011a5a4: add [rax], al; mov rdx, [rsp+0x10]; mov rsi, [rsp+0x8]; syscall; 
0x00000000121819: add [rax], al; mov rdx, [rsp+0x10]; xor esi, esi; mov edi, 0x2000004; call rax; 
0x000000000453b0: add [rax], al; mov rdx, fs:[rax]; mov [rbx+0x18], rdx; mov fs:[rax], rbx; call qword ptr [rbp+0xf88]; 
0x0000000010d703: add [rax], al; mov rdx, r12; mov eax, 0x10f; syscall; 
0x00000000073d03: add [rax], al; mov rdx, r12; mov rsi, r13; mov rdi, r14; call qword ptr [rbx+0x38]; 
0x00000000072ccc: add [rax], al; mov rdx, r12; mov rsi, r13; mov rdi, r14; call qword ptr [rcx+0x38]; 
0x0000000007fd22: add [rax], al; mov rdx, r12; mov rsi, r14; mov rdi, rbx; call qword ptr [r15+0x38]; 
0x0000000007f6ec: add [rax], al; mov rdx, r12; mov rsi, rbp; mov rdi, rbx; call qword ptr [r13+0x38]; 
0x00000000081726: add [rax], al; mov rdx, r12; mov rsi, rbp; mov rdi, rbx; call qword ptr [r13+0x58]; 
0x0000000008157e: add [rax], al; mov rdx, r12; mov rsi, rbp; mov rdi, rbx; call qword ptr [rax+0x58]; 
0x0000000009a36f: add [rax], al; mov rdx, r13; mov rdi, r12; call rax; 
0x0000000007644d: add [rax], al; mov rdx, r13; mov rsi, r14; mov rdi, rbp; call qword ptr [r12+0x38]; 
0x0000000008b6b4: add [rax], al; mov rdx, r13; mov rsi, r14; mov rdi, rbp; call qword ptr [rax+0x40]; 
0x0000000007523d: add [rax], al; mov rdx, r13; mov rsi, r14; mov rdi, rbp; call qword ptr [rbx+0x38]; 
0x00000000074c82: add [rax], al; mov rdx, r13; mov rsi, r14; mov rdi, rbp; call qword ptr [rcx+0x38]; 
0x00000000071f2e: add [rax], al; mov rdx, r14; mov rsi, r12; mov rdi, rbp; call qword ptr [rax+0x38]; 
0x0000000007a7b8: add [rax], al; mov rdx, r14; mov rsi, r15; mov rdi, rbp; call qword ptr [rbx+0x38]; 
0x0000000007bfed: add [rax], al; mov rdx, r15; mov rsi, r12; mov rdi, rbp; call qword ptr [r14+0x38]; 
0x0000000007b6b7: add [rax], al; mov rdx, r15; mov rsi, r12; mov rdi, rbp; call qword ptr [rax+0x38]; 
0x0000000009b0a8: add [rax], al; mov rdx, r15; mov rsi, r14; mov rdi, r13; call rax; 
0x0000000012f3db: add [rax], al; mov rdx, r15; mov rsi, r14; mov rdi, rbx; call rax; 
0x0000000008cee2: add [rax], al; mov rdx, rbp; mov rsi, r12; mov rdi, rbx; call qword ptr [r14+0x78]; 
0x00000000074bbc: add [rax], al; mov rdx, rbp; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000073083: add [rax], al; mov rdx, rbx; mov rdi, r14; call qword ptr [r12+0x38]; 
0x0000000007857c: add [rax], al; mov rdx, rbx; mov rdi, r15; call qword ptr [r12+0x38]; 
0x00000000078f89: add [rax], al; mov rdx, rbx; mov rsi, r10; mov rdi, r15; call qword ptr [r12+0x38]; 
0x0000000007930f: add [rax], al; mov rdx, rbx; mov rsi, r10; mov rdi, r15; call qword ptr [r13+0x38]; 
0x00000000080e5c: add [rax], al; mov rdx, rbx; mov rsi, r12; call qword ptr [r14+0x38]; 
0x0000000010da0d: add [rax], al; mov rdx, rsi; xor esi, esi; syscall; 
0x0000000010e3e6: add [rax], al; mov rdx, rsp; mov esi, 0x10; mov eax, 0x48; syscall; 
0x00000000073a1a: add [rax], al; mov rsi, [rbp-0x8c8]; mov rdx, r13; mov rdi, r14; call qword ptr [r12+0x38]; 
0x0000000007345d: add [rax], al; mov rsi, [rbp-0x8c8]; mov rdx, r13; mov rdi, r14; call qword ptr [rbx+0x38]; 
0x000000001077ac: add [rax], al; mov rsi, [rbx+0xa0]; mov rdi, [rbx+0x80]; call qword ptr [rax+0x88]; 
0x0000000010dd26: add [rax], al; mov rsi, [rsp+0x10]; mov edi, [rsp+0x8]; syscall; 
0x00000000110039: add [rax], al; mov rsi, [rsp+0x18]; mov edi, [rsp+0x14]; syscall; 
0x000000001470d8: add [rax], al; mov rsi, [rsp+0x18]; mov rdi, r12; call qword ptr [rax+0x8]; 
0x00000000098dde: add [rax], al; mov rsi, [rsp+0x28]; mov rdi, r12; call rdx; 
0x0000000013fd91: add [rax], al; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; call qword ptr [rsp+0x68]; 
0x00000000074834: add [rax], al; mov rsi, [rsp+0x8]; mov rdx, rbx; mov rdi, rbp; call qword ptr [r12+0x38]; 
0x0000000007a361: add [rax], al; mov rsi, [rsp]; mov rdx, rbx; mov rdi, rbp; call qword ptr [r12+0x38]; 
0x00000000099a1e: add [rax], al; mov rsi, r12; call rax; 
0x0000000009aa81: add [rax], al; mov rsi, r12; mov rdi, rbp; call rax; 
0x000000000cc8ff: add [rax], al; mov rsi, r13; call r12; 
0x00000000080533: add [rax], al; mov rsi, r13; mov rdi, r15; call qword ptr [r14+0x38]; 
0x0000000008b876: add [rax], al; mov rsi, r13; mov rdi, rbx; call qword ptr [rbp+0x70]; 
0x00000000141757: add [rax], al; mov rsi, r14; add qword ptr [rbx+0x22a8], 0x1; mov rdi, rbp; call qword ptr [rax+0x18]; 
0x00000000122d0f: add [rax], al; mov rsi, r14; mov edi, 0x2000003; mov rdx, rax; call qword ptr [rbx+0x28]; 
0x000000001222db: add [rax], al; mov rsi, r15; mov edi, 0x2000006; mov rdx, rax; call qword ptr [rbx+0x28]; 
0x00000000133036: add [rax], al; mov rsi, r15; mov rdi, r12; call rbp; 
0x00000000042dd6: add [rax], al; mov rsi, r15; mov rdi, r12; mov rdx, r14; call rbp; 
0x00000000091b0f: add [rax], al; mov rsi, r8; mov eax, 0xe; syscall; 
0x0000000011b6cb: add [rax], al; mov rsi, r9; mov edi, r12d; mov eax, ebx; syscall; 
0x00000000159130: add [rax], al; mov rsi, rax; shr ecx, 0x3; rep movsq [rdi], [rsi]; ret; 
0x0000000014ae80: add [rax], al; mov rsi, rbp; mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x10]; 
0x0000000009ace6: add [rax], al; mov rsi, rbp; mov rdi, r12; call rax; 
0x00000000123e17: add [rax], al; mov rsi, rbx; mov edi, 0x2000005; mov rdx, rax; call qword ptr [r13+0x28]; 
0x000000000897db: add [rax], al; mov rsi, rbx; mov edi, 0x2; mov eax, r9d; syscall; 
0x0000000008c0e8: add [rax], al; mov rsi, rsp; mov rdi, rbp; call qword ptr [r12+0x90]; 
0x0000000008becc: add [rax], al; mov rsi, rsp; mov rdi, rbp; call qword ptr [r13+0x90]; 
0x0000000008abf6: add [rax], al; mov rsi, rsp; mov rdi, rbp; call qword ptr [r15+0x90]; 
0x0000000007e655: add [rax], al; mov rsi, rsp; mov rdi, rbp; call qword ptr [rbx+0x90]; 
0x000000000596fe: add [rax], al; mov rsp, rdx; ret; 
0x0000000004186e: add [rax], al; movaps [rsp+0xd0], xmm0; movaps [rsp+0xe0], xmm0; movaps [rsp+0xf0], xmm0; syscall; 
0x00000000041876: add [rax], al; movaps [rsp+0xe0], xmm0; movaps [rsp+0xf0], xmm0; syscall; 
0x0000000004187e: add [rax], al; movaps [rsp+0xf0], xmm0; syscall; 
0x0000000014b602: add [rax], al; movdqa xmm0, [rip+0x6b684]; movaps [rsp+0x20], xmm0; call qword ptr [rax+0x28]; 
0x000000000b821a: add [rax], al; movdqu [rdi+rdx-0x10], xmm0; movdqu [rdi], xmm0; ret; 
0x000000000b421e: add [rax], al; movdqu [rdi-0x1], xmm0; ret; 
0x000000000b422e: add [rax], al; movdqu [rdi], xmm0; ret; 
0x00000000142f3e: add [rax], al; movdqu xmm0, [rdi+0x38]; mov dword ptr [rsi], 0x9; movups [rsi+0x8], xmm0; ret; 
0x00000000146ea6: add [rax], al; movdqu xmm0, [rdx]; mov eax, esi; movups [r8+0x8], xmm0; ret; 
0x000000000b324e: add [rax], al; movdqu xmm0, [rsi]; movdqu [rdi], xmm0; mov [rdi+0x10], dh; ret; 
0x00000000149ca6: add [rax], al; movdqu xmm1, [rdi+0x8]; mov eax, 0x1; movups [r8], xmm1; ret; 
0x00000000149cbe: add [rax], al; movdqu xmm2, [rdi+0x1c]; mov eax, 0x1; movups [r8], xmm2; ret; 
0x0000000014a59e: add [rax], al; movdqu xmm4, [rdi+0x8]; mov eax, 0x1; movups [r8], xmm4; ret; 
0x00000000107c27: add [rax], al; movdqu xmm7, [rsi+0x70]; movups [rdi+0xf8], xmm7; ret; 
0x000000000afc50: add [rax], al; movlpd xmm0, [rcx]; movlpd [rdx], xmm0; mov rax, rdi; ret; 
0x00000000164f49: add [rax], al; movsxd r9, [r11+r9*4]; add r9, r11; notrack jmp r9; 
0x000000000364ba: add [rax], al; movsxd rcx, [rdi+r9*4]; add rcx, rdi; notrack jmp rcx; 
0x000000000725a5: add [rax], al; movsxd rcx, [rdx+rcx*4]; add rcx, rdx; notrack jmp rcx; 
0x0000000007cba6: add [rax], al; movsxd rdx, ebp; mov rdi, rbx; call qword ptr [r14+0x38]; 
0x00000000137186: add [rax], al; movsxd rdx, edx; mov eax, r8d; mov byte ptr [rdi+rdx], 0x0; ret; 
0x00000000077105: add [rax], al; movsxd rdx, r13d; mov rdi, rbx; call qword ptr [r14+0x38]; 
0x00000000149cb0: add [rax], al; movups [r8], xmm1; ret; 
0x00000000149cc8: add [rax], al; movups [r8], xmm2; ret; 
0x0000000014a5c8: add [rax], al; movups [r8], xmm3; ret; 
0x0000000014a5a8: add [rax], al; movups [r8], xmm4; ret; 
0x000000000845e7: add [rax], al; movups [rax+0x40], xmm0; pop rbx; ret; 
0x0000000013c9a5: add [rax], al; movups [rax], xmm0; add rsp, 0x8; ret; 
0x0000000008ecec: add [rax], al; movups [rbp+0x38], xmm0; pop rbp; pop r12; ret; 
0x00000000126224: add [rax], al; movups [rbp-0x78], xmm7; call rcx; 
0x0000000008df53: add [rax], al; movups [rbx+0x48], xmm0; pop rbx; ret; 
0x0000000014a5b8: add [rax], al; movups [rdi+0x20], xmm2; ret; 
0x00000000149c9c: add [rax], al; movups [rdi+0x8], xmm0; ret; 
0x00000000146ec1: add [rax], al; movups [rdx], xmm1; ret; 
0x00000000107b93: add [rax], al; movups [rsi+0x60], xmm6; movdqu xmm7, [rdi+0xf8]; movups [rsi+0x70], xmm7; ret; 
0x00000000107b9f: add [rax], al; movups [rsi+0x70], xmm7; ret; 
0x000000000faf6c: add [rax], al; movups [rsi+0x8], xmm0; ret; 
0x00000000142f19: add [rax], al; movups [rsi+0x8], xmm1; ret; 
0x00000000146dce: add [rax], al; movups [rsi], xmm0; mov rax, [rax+0xa0]; mov [rsi+0x10], rax; ret; 
0x0000000014d6a3: add [rax], al; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x0000000014d931: add [rax], al; movups [rsp+0x18], xmm1; movups [rsp+0x38], xmm0; call qword ptr [rax+0x18]; 
0x000000000dff72: add [rax], al; movups [rsp+0x8], xmm0; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000014db57: add [rax], al; movups [rsp+0xb8], xmm3; movups [rsp+0xd8], xmm0; call rax; 
0x0000000014dbf3: add [rax], al; movups [rsp+0xb8], xmm5; call rax; 
0x0000000014db5f: add [rax], al; movups [rsp+0xd8], xmm0; call rax; 
0x00000000187ebe: add [rax], al; movzx eax, byte ptr [rdi-0x1]; movzx ecx, byte ptr [rsi-0x1]; sub eax, ecx; ret; 
0x00000000187c71: add [rax], al; movzx eax, byte ptr [rdi-0x1]; movzx edx, byte ptr [rsi-0x1]; sub eax, edx; ret; 
0x0000000018bb8e: add [rax], al; movzx eax, byte ptr [rdi-0xa]; movzx edx, byte ptr [rsi-0xa]; sub eax, edx; ret; 
0x0000000018bb7e: add [rax], al; movzx eax, byte ptr [rdi-0xb]; movzx edx, byte ptr [rsi-0xb]; sub eax, edx; ret; 
0x0000000018bb6e: add [rax], al; movzx eax, byte ptr [rdi-0xc]; movzx edx, byte ptr [rsi-0xc]; sub eax, edx; ret; 
0x0000000018bb5e: add [rax], al; movzx eax, byte ptr [rdi-0xd]; movzx edx, byte ptr [rsi-0xd]; sub eax, edx; ret; 
0x0000000018bb4e: add [rax], al; movzx eax, byte ptr [rdi-0xe]; movzx edx, byte ptr [rsi-0xe]; sub eax, edx; ret; 
0x0000000018bb3e: add [rax], al; movzx eax, byte ptr [rdi-0xf]; movzx edx, byte ptr [rsi-0xf]; sub eax, edx; ret; 
0x0000000017e8ee: add [rax], al; movzx eax, byte ptr [rdi]; movzx ecx, byte ptr [rsi]; sub eax, ecx; ret; 
0x000000000b84ee: add [rax], al; movzx eax, cl; pop rbx; ret; 
0x000000000a819e: add [rax], al; movzx ecx, byte ptr [rsi]; movzx eax, byte ptr [rdi]; sub eax, ecx; ret; 
0x000000000f8a55: add [rax], al; movzx edx, byte ptr [r15+0x30]; movsxd rdx, [rsi+rdx*4]; add rdx, rsi; notrack jmp rdx; 
0x0000000016797e: add [rax], al; movzx edx, byte ptr [rsi]; mov [rdi], dl; ret; 
0x0000000018402e: add [rax], al; movzx edx, byte ptr [rsi]; mov [rdi], dl; vzeroupper; ret; 
0x00000000050e82: add [rax], al; movzx edx, dl; movsxd rdx, [r9+rdx*4]; add rdx, r9; notrack jmp rdx; 
0x0000000016790e: add [rax], al; movzx edx, word ptr [rsi]; mov [rdi], dx; ret; 
0x00000000182bfe: add [rax], al; movzx edx, word ptr [rsi]; mov [rdi], dx; vzeroupper; ret; 
0x0000000014e659: add [rax], al; nop [rax+rax]; endbr64; mov eax, 0x2; ret; 
0x00000000041bb9: add [rax], al; nop [rax+rax]; endbr64; mov eax, 0x3e; syscall; 
0x0000000011b149: add [rax], al; nop [rax+rax]; endbr64; mov eax, 0x40; syscall; 
0x00000000119249: add [rax], al; nop [rax+rax]; endbr64; mov eax, 0xa6; syscall; 
0x00000000119169: add [rax], al; nop [rax+rax]; endbr64; mov eax, 0xad; syscall; 
0x000000001274e5: add [rax], al; nop [rax+rax]; endbr64; ret; 
0x000000001278b9: add [rax], al; nop [rax+rax]; mov rax, r8; ret; 
0x00000000191b61: add [rax], al; nop [rax+rax]; ret; 
0x000000000a86ab: add [rax], al; nop [rax]; bsf eax, eax; lea rax, [rax+rdi-0x10]; ret; 
0x0000000011941a: add [rax], al; nop [rax]; endbr64; mov eax, 0x122; syscall; 
0x0000000014f8eb: add [rax], al; nop [rax]; endbr64; mov eax, 0x1; ret; 
0x0000000011b26a: add [rax], al; nop [rax]; endbr64; mov eax, 0x1e; syscall; 
0x0000000011b30a: add [rax], al; nop [rax]; endbr64; mov eax, 0x1f; syscall; 
0x000000000de54a: add [rax], al; nop [rax]; endbr64; mov eax, 0x3f; syscall; 
0x0000000010a85a: add [rax], al; nop [rax]; endbr64; mov eax, 0x56; syscall; 
0x0000000010ed6a: add [rax], al; nop [rax]; endbr64; mov eax, 0x62; syscall; 
0x0000000010f17a: add [rax], al; nop [rax]; endbr64; mov eax, 0x8d; syscall; 
0x0000000015987b: add [rax], al; nop [rax]; endbr64; mov rax, [rip+0x895ad]; jmp qword ptr [rax+0x280]; 
0x0000000009207a: add [rax], al; nop [rax]; endbr64; mov rax, fs:[0x10]; ret; 
0x0000000009194b: add [rax], al; nop [rax]; endbr64; mov rax, fs:[0x10]; ret; 
0x0000000011f32a: add [rax], al; nop [rax]; endbr64; ret; 
0x000000001071eb: add [rax], al; nop [rax]; endbr64; xor eax, eax; ret; 
0x00000000126bda: add [rax], al; nop [rax]; endbr64; xor eax, eax; ret; 
0x000000001721fa: add [rax], al; nop [rax]; mov [rcx], dl; ret; 
0x000000000b413a: add [rax], al; nop [rax]; mov [rdi], dl; ret; 
0x000000000b3e3a: add [rax], al; nop [rax]; mov dl, [rsi]; mov [rdi], dl; ret; 
0x0000000016710a: add [rax], al; nop [rax]; mov edx, [rsi-0x4]; mov [rdi-0x4], edx; ret; 
0x0000000004194a: add [rax], al; nop [rax]; mov rax, 0xf; syscall; 
0x000000000b2aaa: add [rax], al; nop [rax]; mov rax, rdi; ret; 
0x000000001613aa: add [rax], al; nop [rax]; mov rdx, [rsi-0x8]; mov [rdi-0x8], rdx; ret; 
0x0000000016729a: add [rax], al; nop [rax]; movzx edx, byte ptr [rsi-0x1]; mov [rdi-0x1], dl; ret; 
0x0000000016721a: add [rax], al; nop [rax]; movzx edx, word ptr [rsi-0x2]; mov [rdi-0x2], dx; ret; 
0x000000000b3e2a: add [rax], al; nop [rax]; ret; 
0x0000000018c69a: add [rax], al; nop [rax]; xor eax, eax; ret; 
0x000000000a89db: add [rax], al; nop [rax]; xor eax, eax; ret; 
0x000000001865da: add [rax], al; nop [rax]; xor eax, eax; vzeroupper; ret; 
0x0000000018215b: add [rax], al; nop [rax]; xor eax, eax; vzeroupper; ret; 
0x00000000028d0b: add [rax], al; nop [rax]; xor edi, edi; mov eax, edx; syscall; 
0x0000000010894d: add [rax], al; nop; endbr64; mov eax, 0x102; syscall; 
0x0000000010a9ad: add [rax], al; nop; endbr64; mov eax, 0x107; syscall; 
0x0000000010a8ed: add [rax], al; nop; endbr64; mov eax, 0x10a; syscall; 
0x0000000011a03d: add [rax], al; nop; endbr64; mov eax, 0x110; syscall; 
0x0000000011a09d: add [rax], al; nop; endbr64; mov eax, 0x11b; syscall; 
0x00000000119d3d: add [rax], al; nop; endbr64; mov eax, 0x123; syscall; 
0x000000001095cd: add [rax], al; nop; endbr64; mov eax, 0x124; syscall; 
0x0000000010962d: add [rax], al; nop; endbr64; mov eax, 0x125; syscall; 
0x00000000119e5d: add [rax], al; nop; endbr64; mov eax, 0x126; syscall; 
0x0000000011a0cd: add [rax], al; nop; endbr64; mov eax, 0x12c; syscall; 
0x0000000011a15d: add [rax], al; nop; endbr64; mov eax, 0x13f; syscall; 
0x0000000011a18d: add [rax], al; nop; endbr64; mov eax, 0x14a; syscall; 
0x0000000011a1bd: add [rax], al; nop; endbr64; mov eax, 0x14b; syscall; 
0x000000001095fd: add [rax], al; nop; endbr64; mov eax, 0x16; syscall; 
0x000000000fd22d: add [rax], al; nop; endbr64; mov eax, 0x18; syscall; 
0x000000001139dd: add [rax], al; nop; endbr64; mov eax, 0x1b; syscall; 
0x0000000010959d: add [rax], al; nop; endbr64; mov eax, 0x21; syscall; 
0x0000000011a92d: add [rax], al; nop; endbr64; mov eax, 0x29; syscall; 
0x0000000011a3ed: add [rax], al; nop; endbr64; mov eax, 0x33; syscall; 
0x0000000010971d: add [rax], al; nop; endbr64; mov eax, 0x51; syscall; 
0x0000000010a9dd: add [rax], al; nop; endbr64; mov eax, 0x54; syscall; 
0x0000000010a91d: add [rax], al; nop; endbr64; mov eax, 0x59; syscall; 
0x0000000010871d: add [rax], al; nop; endbr64; mov eax, 0x5b; syscall; 
0x0000000010a00d: add [rax], al; nop; endbr64; mov eax, 0x5c; syscall; 
0x0000000010a03d: add [rax], al; nop; endbr64; mov eax, 0x5d; syscall; 
0x0000000010a06d: add [rax], al; nop; endbr64; mov eax, 0x5e; syscall; 
0x000000000de57d: add [rax], al; nop; endbr64; mov eax, 0x64; syscall; 
0x00000000119ebd: add [rax], al; nop; endbr64; mov eax, 0x67; syscall; 
0x000000000dfddd: add [rax], al; nop; endbr64; mov eax, 0x6d; syscall; 
0x000000000dfe0d: add [rax], al; nop; endbr64; mov eax, 0x6f; syscall; 
0x000000000dfe6d: add [rax], al; nop; endbr64; mov eax, 0x70; syscall; 
0x000000000dfe9d: add [rax], al; nop; endbr64; mov eax, 0x76; syscall; 
0x000000000dfecd: add [rax], al; nop; endbr64; mov eax, 0x78; syscall; 
0x000000001192dd: add [rax], al; nop; endbr64; mov eax, 0x7b; syscall; 
0x00000000119c7d: add [rax], al; nop; endbr64; mov eax, 0x7e; syscall; 
0x0000000011a06d: add [rax], al; nop; endbr64; mov eax, 0x86; syscall; 
0x000000001085bd: add [rax], al; nop; endbr64; mov eax, 0x8a; syscall; 
0x000000000fd19d: add [rax], al; nop; endbr64; mov eax, 0x8f; syscall; 
0x000000000fd1cd: add [rax], al; nop; endbr64; mov eax, 0x90; syscall; 
0x000000000fd1fd: add [rax], al; nop; endbr64; mov eax, 0x91; syscall; 
0x000000000fd25d: add [rax], al; nop; endbr64; mov eax, 0x92; syscall; 
0x000000000fd28d: add [rax], al; nop; endbr64; mov eax, 0x93; syscall; 
0x000000000fd2bd: add [rax], al; nop; endbr64; mov eax, 0x94; syscall; 
0x00000000113a6d: add [rax], al; nop; endbr64; mov eax, 0x96; syscall; 
0x00000000113a9d: add [rax], al; nop; endbr64; mov eax, 0x97; syscall; 
0x00000000113acd: add [rax], al; nop; endbr64; mov eax, 0x98; syscall; 
0x00000000119bdd: add [rax], al; nop; endbr64; mov eax, 0x9a; syscall; 
0x00000000119f7d: add [rax], al; nop; endbr64; mov eax, 0x9b; syscall; 
0x000000001100cd: add [rax], al; nop; endbr64; mov eax, 0xa1; syscall; 
0x000000001105bd: add [rax], al; nop; endbr64; mov eax, 0xa7; syscall; 
0x000000001105ed: add [rax], al; nop; endbr64; mov eax, 0xa8; syscall; 
0x000000001138dd: add [rax], al; nop; endbr64; mov eax, 0xa; syscall; 
0x0000000011919d: add [rax], al; nop; endbr64; mov eax, 0xac; syscall; 
0x00000000119cad: add [rax], al; nop; endbr64; mov eax, 0xae; syscall; 
0x00000000119cdd: add [rax], al; nop; endbr64; mov eax, 0xb0; syscall; 
0x000000001138ad: add [rax], al; nop; endbr64; mov eax, 0xb; syscall; 
0x0000000011a1ed: add [rax], al; nop; endbr64; mov eax, 0xba; syscall; 
0x00000000116f9d: add [rax], al; nop; endbr64; mov eax, 0xc6; syscall; 
0x00000000116e7d: add [rax], al; nop; endbr64; mov eax, 0xc7; syscall; 
0x00000000119d0d: add [rax], al; nop; endbr64; mov eax, 0xd5; syscall; 
0x00000000119c0d: add [rax], al; nop; endbr64; mov eax, 0xe4; syscall; 
0x00000000119e2d: add [rax], al; nop; endbr64; mov eax, 0xfd; syscall; 
0x00000000119e8d: add [rax], al; nop; endbr64; mov eax, 0xff; syscall; 
0x00000000028bad: add [rax], al; nop; endbr64; ret; 
0x0000000018a83d: add [rax], al; nop; lea rax, [rdi+0x1]; ret; 
0x0000000018a82d: add [rax], al; nop; lea rax, [rdi]; ret; 
0x0000000017221d: add [rax], al; nop; mov [rcx], dx; mov [rcx+0x2], dl; ret; 
0x0000000017227d: add [rax], al; nop; mov [rcx], rdx; mov [rcx+0x8], dl; ret; 
0x000000000b415d: add [rax], al; nop; mov [rdi-0x1], edx; ret; 
0x000000000b416d: add [rax], al; nop; mov [rdi], edx; ret; 
0x000000000b41bd: add [rax], al; nop; mov [rdi], rdx; mov [rdi+0x8], dl; ret; 
0x000000000cbb1d: add [rax], al; nop; mov rax, 0x1; ret; 
0x0000000018438d: add [rax], al; nop; mov rax, rdi; vzeroupper; ret; 
0x0000000017e22d: add [rax], al; nop; vzeroupper; xor eax, eax; ret; 
0x000000000408a7: add [rax], al; or byte ptr [rax+0x21], 0xc2; mov [rdi], rdx; ret; 
0x00000000040877: add [rax], al; or byte ptr [rax+0x21], 0xc2; movq xmm0, rdx; ret; 
0x00000000055c77: add [rax], al; or byte ptr [rcx-0x77], 0x0; mov eax, 0x1; mov dword ptr [rdx], 0xffffc002; ret; 
0x000000000f7abd: add [rax], al; or ch, al; ret far; 
0x000000001122a6: add [rax], al; or dword ptr [rax], 0x8000; add rsp, 0x8; mov eax, r8d; ret; 
0x0000000008ab8e: add [rax], al; or dword ptr [rbx], 0x20; mov eax, 0xffffffff; pop rbx; ret; 
0x0000000005fcc3: add [rax], al; or eax, 0x7; mov [rdx], eax; mov eax, 0x1; ret; 
0x00000000040475: add [rax], al; or eax, edx; mov [rsp+0x10], eax; fld st, tbyte ptr [rsp+0x8]; ret; 
0x000000000a83a9: add [rax], al; pmovmskb eax, xmm1; bsf eax, eax; lea rax, [rdi+rax+0x30]; ret; 
0x000000000a8890: add [rax], al; pmovmskb eax, xmm1; bsr eax, eax; add rax, rdi; ret; 
0x00000000126c62: add [rax], al; pop r12; pop rbp; ret; 
0x000000000d925a: add [rax], al; pop r13; pop r14; jmp rax; 
0x00000000143753: add [rax], al; pop rbp; jmp rcx; 
0x0000000005f00c: add [rax], al; pop rbp; pop r12; pop r13; ret; 
0x00000000041eb8: add [rax], al; pop rbp; pop r12; ret; 
0x000000000597ea: add [rax], al; pop rbp; ret; 
0x000000000b84a9: add [rax], al; pop rbx; cmove rax, rdx; ret; 
0x00000000041d41: add [rax], al; pop rbx; pop rbp; pop r12; ret; 
0x0000000007fc3d: add [rax], al; pop rbx; pop rbp; ret; 
0x0000000003485c: add [rax], al; pop rbx; ret; 
0x00000000159860: add [rax], al; push 0x0; call qword ptr [rax+0x270]; 
0x000000000cce28: add [rax], al; push 0x0; push 0x0; lea r8, [rsp+0x40]; call qword ptr [rax+0x270]; 
0x0000000015980f: add [rax], al; push 0x2; call qword ptr [rax+0x270]; 
0x00000000141e2a: add [rax], al; push qword ptr [rip+0x74d26]; push qword ptr [rip+0x74d18]; lea r9, [rsp+0x2c]; call qword ptr [rax]; 
0x0000000014253b: add [rax], al; push qword ptr [rsp+0xe8]; mov [rsp+0x18], rdi; lea r9, [rsp+0x40]; call qword ptr [rax]; 
0x0000000008fc73: add [rax], al; pxor xmm0, xmm0; movups [rbx+0x48], xmm0; pop rbx; ret; 
0x00000000111cae: add [rax], al; pxor xmm0, xmm0; movups [rdi], xmm0; ret; 
0x00000000028e77: add [rax], al; ret; 
0x000000001297d6: add [rax], al; rol byte ptr [rcx+0xfa], 0x80; cmovne eax, edi; ret; 
0x000000000284a9: add [rax], al; rol rax, 0x11; mov [rip+0x1be192], rax; ret; 
0x00000000038915: add [rax], al; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000147c63: add [rax], al; sbb eax, 0xffffffff; add rsp, 0x8; ret; 
0x000000000ca09e: add [rax], al; setg al; movzx eax, al; lea eax, [rax+rax-0x1]; ret; 
0x000000000fd8c6: add [rax], al; setne al; lea eax, [rax+rax*8+0x5]; ret; 
0x000000000e0bde: add [rax], al; setne al; ret; 
0x0000000004234c: add [rax], al; shl rax, cl; or [rdi], rax; xor eax, eax; ret; 
0x0000000015a635: add [rax], al; shl rdx, cl; or [rdi+rax*8], rdx; xor eax, eax; ret; 
0x00000000095e3f: add [rax], al; shr ecx, 0x3; rep stosq [rdi]; pop rbp; ret; 
0x000000001071da: add [rax], al; shr ecx, 0x3; rep stosq [rdi]; ret; 
0x0000000008767e: add [rax], al; shr edx, 0x4; and edx, 0x1; mov eax, edx; ret; 
0x0000000008777e: add [rax], al; shr edx, 0x5; and edx, 0x1; mov eax, edx; ret; 
0x0000000004517f: add [rax], al; sub dword ptr [r13], 0x1; xor esi, esi; mov rdi, r9; call r8; 
0x0000000009617a: add [rax], al; sub dword ptr [rip+0x14da1d], 0x1; pop rbp; ret; 
0x00000000132897: add [rax], al; sub dword ptr [rip+0xb5cd8], 0x1; mov eax, r8d; pop rbp; ret; 
0x00000000187d5c: add [rax], al; sub eax, ecx; ret; 
0x00000000156f6e: add [rax], al; sub ecx, 0x5; cmp cx, 0x3; jbe short 0x0000000000156f80; ret; 
0x0000000008fba6: add [rax], al; sub edx, [rax+0x10]; mov eax, [rdi+0x10]; sub eax, edx; ret; 
0x0000000010f156: add [rax], al; sub edx, eax; test eax, eax; cmovns eax, edx; ret; 
0x00000000136fbf: add [rax], al; sub esi, 0x1; mov [rdi+0x1], sil; ret; 
0x000000000ccb0a: add [rax], al; sub r8, rax; add r15, r8; mov [rsp+0x88], r15; call r12; 
0x0000000014d003: add [rax], al; sub rax, 0xffffffffffffff80; pop rbx; ret; 
0x00000000116030: add [rax], al; sub rax, fs:[0x28]; jne short 0x0000000000116045; add rsp, 0x418; ret; 
0x000000000b7c21: add [rax], al; sub rax, rdx; ret; 
0x0000000004179d: add [rax], al; sub rcx, fs:[0x28]; jne short 0x00000000000417b2; add rsp, 0x148; ret; 
0x00000000041da9: add [rax], al; sub rcx, fs:[0x28]; jne short 0x0000000000041dc5; add rsp, 0x118; ret; 
0x00000000041e2c: add [rax], al; sub rcx, fs:[0x28]; jne short 0x0000000000041e48; add rsp, 0x118; ret; 
0x0000000004249a: add [rax], al; sub rcx, fs:[0x28]; jne short 0x00000000000424af; add rsp, 0x148; ret; 
0x0000000004293a: add [rax], al; sub rcx, fs:[0x28]; jne short 0x000000000004294f; add rsp, 0xa8; ret; 
0x00000000091b32: add [rax], al; sub rcx, fs:[0x28]; jne short 0x0000000000091bb7; add rsp, 0x98; ret; 
0x0000000008f056: add [rax], al; sub rcx, rax; lea eax, [rcx-0x1]; ret; 
0x00000000084716: add [rax], al; sub rcx, rax; sar rcx, 0x2; lea eax, [rcx-0x1]; ret; 
0x00000000041f37: add [rax], al; sub rsi, fs:[0x28]; jne short 0x0000000000041f4c; add rsp, 0x98; ret; 
0x0000000008cea5: add [rax], al; sub rsi, rdx; mov rdi, rbx; mov edx, 0x1; call qword ptr [r14+0x80]; 
0x000000000272c6: add [rax], al; syscall; 
0x0000000018a814: add [rax], al; test ah, 0x40; jne 0x000000000018a900; lea rax, [rdi+0xf]; ret; 
0x0000000018a7c2: add [rax], al; test al, 0x40; jne 0x000000000018a890; lea rax, [rdi+0x7]; ret; 
0x000000000cb4e3: add [rax], al; test al, 0xf0; jne 0x00000000000cb650; lea rax, [rdi-0x10]; ret; 
0x0000000018a735: add [rax], al; test dh, 0x40; jne 0x000000000018a670; lea rax, [rdi+0xf]; ret; 
0x0000000018a77b: add [rax], al; test dh, 0x4; jne 0x000000000018a670; lea rax, [rdi+0xb]; ret; 
0x0000000018a6b2: add [rax], al; test dl, 0x40; jne short 0x000000000018a670; lea rax, [rdi+0x7]; ret; 
0x0000000018a6e0: add [rax], al; test dl, 0x4; jne short 0x000000000018a670; lea rax, [rdi+0x3]; ret; 
0x00000000090c17: add [rax], al; test eax, eax; cmovne eax, edx; ret; 
0x00000000142e33: add [rax], al; test eax, eax; je short 0x0000000000142e40; xor eax, eax; ret; 
0x000000000463ca: add [rax], al; test eax, eax; jne short 0x00000000000463e0; mov eax, 0x13e; syscall; 
0x000000000de63d: add [rax], al; test eax, eax; jne short 0x00000000000de658; mov eax, 0x3d; syscall; 
0x000000000de84a: add [rax], al; test eax, eax; jne short 0x00000000000de860; mov eax, 0x22; syscall; 
0x00000000106c9d: add [rax], al; test eax, eax; jne short 0x0000000000106cb8; mov eax, 0x11; syscall; 
0x00000000106d4d: add [rax], al; test eax, eax; jne short 0x0000000000106d68; mov eax, 0x12; syscall; 
0x00000000108b79: add [rax], al; test eax, eax; jne short 0x0000000000108be0; mov eax, 0x101; syscall; 
0x00000000108caa: add [rax], al; test eax, eax; jne short 0x0000000000108cc0; syscall; 
0x00000000108d4a: add [rax], al; test eax, eax; jne short 0x0000000000108d60; mov eax, 0x1; syscall; 
0x000000001091be: add [rax], al; test eax, eax; jne short 0x00000000001091f0; mov eax, 0x48; syscall; 
0x000000001094ea: add [rax], al; test eax, eax; jne short 0x0000000000109500; mov eax, 0x3; syscall; 
0x0000000010966a: add [rax], al; test eax, eax; jne short 0x0000000000109680; mov eax, 0x55; syscall; 
0x0000000010d62a: add [rax], al; test eax, eax; jne short 0x000000000010d640; mov eax, 0x7; syscall; 
0x0000000010dccd: add [rax], al; test eax, eax; jne short 0x000000000010dce8; mov eax, 0x146; syscall; 
0x0000000010e16d: add [rax], al; test eax, eax; jne short 0x000000000010e188; mov eax, 0x115; syscall; 
0x0000000010e21d: add [rax], al; test eax, eax; jne short 0x000000000010e238; mov eax, 0x11d; syscall; 
0x0000000010f34a: add [rax], al; test eax, eax; jne short 0x000000000010f360; mov eax, 0x13; syscall; 
0x0000000010f3ea: add [rax], al; test eax, eax; jne short 0x000000000010f400; mov eax, 0x14; syscall; 
0x0000000010fecd: add [rax], al; test eax, eax; jne short 0x000000000010fee8; mov eax, 0x17; syscall; 
0x0000000011010a: add [rax], al; test eax, eax; jne short 0x0000000000110120; mov eax, 0x4a; syscall; 
0x000000001101ca: add [rax], al; test eax, eax; jne short 0x00000000001101e0; mov eax, 0x4b; syscall; 
0x00000000112b36: add [rax], al; test eax, eax; jne short 0x0000000000112b48; sub dword ptr [rip+0xd4d0d], 0x1; ret; 
0x0000000011391a: add [rax], al; test eax, eax; jne short 0x0000000000113930; mov eax, 0x1a; syscall; 
0x0000000011951d: add [rax], al; test eax, eax; jne short 0x0000000000119538; mov eax, 0xe8; syscall; 
0x000000001195cd: add [rax], al; test eax, eax; jne short 0x00000000001195e8; mov eax, 0x114; syscall; 
0x0000000011967d: add [rax], al; test eax, eax; jne short 0x0000000000119698; mov eax, 0x116; syscall; 
0x0000000011972d: add [rax], al; test eax, eax; jne short 0x0000000000119748; mov eax, 0x113; syscall; 
0x000000001197fa: add [rax], al; test eax, eax; jne short 0x0000000000119810; mov eax, 0x130; syscall; 
0x0000000011a25a: add [rax], al; test eax, eax; jne short 0x000000000011a270; mov eax, 0x2b; syscall; 
0x0000000011a32a: add [rax], al; test eax, eax; jne short 0x000000000011a340; mov eax, 0x2a; syscall; 
0x0000000011a54d: add [rax], al; test eax, eax; jne short 0x000000000011a568; mov eax, 0x2d; syscall; 
0x0000000011a60a: add [rax], al; test eax, eax; jne short 0x000000000011a620; mov eax, 0x2f; syscall; 
0x0000000011a76a: add [rax], al; test eax, eax; jne short 0x000000000011a780; mov eax, 0x2e; syscall; 
0x0000000011a80d: add [rax], al; test eax, eax; jne short 0x000000000011a828; mov eax, 0x2c; syscall; 
0x0000000011ac6d: add [rax], al; test eax, eax; jne short 0x000000000011ac88; mov eax, 0x120; syscall; 
0x0000000011ad1d: add [rax], al; test eax, eax; jne short 0x000000000011ad38; mov eax, 0x12b; syscall; 
0x0000000011addd: add [rax], al; test eax, eax; jne short 0x000000000011adf8; mov eax, 0x133; syscall; 
0x0000000011af7d: add [rax], al; test eax, eax; jne short 0x000000000011af98; mov eax, 0x45; syscall; 
0x0000000011b02d: add [rax], al; test eax, eax; jne short 0x000000000011b048; mov eax, 0x46; syscall; 
0x000000000e0c67: add [rax], al; test edi, edi; js short 0x00000000000e0c70; ret; 
0x000000000611c4: add [rax], al; test edx, edx; jne short 0x00000000000611d0; sub dword ptr [rdi], 0x1; ret; 
0x000000000808a6: add [rax], al; test edx, edx; jne short 0x00000000000808b8; sub dword ptr [rip+0x165d7d], 0x1; ret; 
0x0000000008d58a: add [rax], al; test edx, edx; jne short 0x000000000008d5a0; sub dword ptr [rip+0x1590d9], 0x1; ret; 
0x0000000008ff06: add [rax], al; test edx, edx; jne short 0x000000000008ff18; sub dword ptr [rip+0x15675d], 0x1; ret; 
0x0000000007f396: add [rax], al; test rax, rax; je short 0x000000000007f3a6; mov rdi, [rdi+0xe0]; jmp rax; 
0x0000000007f476: add [rax], al; test rax, rax; je short 0x000000000007f490; mov rdi, [rdi+0xe0]; jmp rax; 
0x000000000d8e9c: add [rax], al; test rax, rax; je short 0x00000000000d8ed0; call rax; 
0x000000000d8f0c: add [rax], al; test rax, rax; je short 0x00000000000d8f40; call rax; 
0x00000000107ead: add [rax], al; test rax, rax; je short 0x0000000000107ee8; xor edx, edx; call rax; 
0x000000001326ea: add [rax], al; test rax, rax; je short 0x00000000001326f6; mov rdi, rbx; call rax; 
0x00000000132a0a: add [rax], al; test rax, rax; je short 0x0000000000132a16; mov rdi, rbx; call rax; 
0x00000000132ad2: add [rax], al; test rax, rax; je short 0x0000000000132ae2; lea rdi, [rip+0xb5a40]; call rax; 
0x0000000017e23e: add [rax], al; tzcnt eax, eax; add rax, rdi; vzeroupper; ret; 
0x0000000018a44b: add [rax], al; vmovdqu64 [rdi+rdx-0x40], zmm0; vmovdqu64 [rdi], zmm0; vzeroupper; ret; 
0x000000001835b0: add [rax], al; vzeroupper; ret; 
0x0000000017e67e: add [rax], al; vzeroupper; xor eax, eax; ret; 
0x0000000008d59e: add [rax], al; xchg [rip+0x1590ca], eax; cmp eax, 0x1; jg short 0x000000000008d5db; ret; 
0x000000001199fc: add [rax], al; xchg ax, ax; endbr64; mov eax, 0x11f; syscall; 
0x00000000119b7c: add [rax], al; xchg ax, ax; endbr64; mov eax, 0x131; syscall; 
0x0000000010e5ec: add [rax], al; xchg ax, ax; endbr64; mov eax, 0x1; syscall; 
0x000000000d01dc: add [rax], al; xchg ax, ax; endbr64; mov eax, 0x24; syscall; 
0x000000000dfafc: add [rax], al; xchg ax, ax; endbr64; mov eax, 0x27; syscall; 
0x000000000dfdac: add [rax], al; xchg ax, ax; endbr64; mov eax, 0x79; syscall; 
0x000000000ccd7c: add [rax], al; xchg ax, ax; endbr64; mov eax, 0xc9; syscall; 
0x0000000009b27c: add [rax], al; xchg ax, ax; endbr64; ret; 
0x0000000017220c: add [rax], al; xchg ax, ax; mov [rcx], dx; ret; 
0x0000000017223c: add [rax], al; xchg ax, ax; mov [rcx], edx; mov [rcx+0x4], dl; ret; 
0x000000000b414c: add [rax], al; xchg ax, ax; mov [rdi], dx; ret; 
0x000000000b417c: add [rax], al; xchg ax, ax; mov [rdi], edx; mov [rdi+0x4], dl; ret; 
0x000000000b315c: add [rax], al; xchg ax, ax; mov dx, [rsi]; mov [rdi], dx; ret; 
0x0000000014205c: add [rax], al; xchg ax, ax; mov rax, [rbp+0x8]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x000000000363cc: add [rax], al; xchg ax, ax; ret; 
0x000000000b721c: add [rax], al; xchg ax, ax; xor ch, ch; mov [rdi], ch; ret; 
0x000000000cb35c: add [rax], al; xchg ax, ax; xor rax, rax; ret; 
0x00000000040be0: add [rax], al; xor bl, 0xf; adc [rdi], eax; movd xmm0, esi; ret; 
0x000000000cc13c: add [rax], al; xor eax, eax; add rsp, 0x8; ret; 
0x000000000eacc6: add [rax], al; xor eax, eax; cmp [rsi], cl; je 0x00000000000eac2d; ret; 
0x0000000009bf98: add [rax], al; xor eax, eax; mov [r8], rsi; ret; 
0x000000001495d3: add [rax], al; xor eax, eax; mov rax, [rdi+0x8]; lea rsi, [rsp+0x10]; call qword ptr [rax+0x10]; 
0x00000000090e7a: add [rax], al; xor eax, eax; movups [rsi+0x70], xmm7; ret; 
0x000000000b8466: add [rax], al; xor eax, eax; pop rbx; ret; 
0x0000000003f8a6: add [rax], al; xor eax, eax; ret; 
0x0000000017de8e: add [rax], al; xor eax, eax; vzeroupper; ret; 
0x00000000045f2a: add [rax], al; xor eax, ecx; ret; 
0x00000000040a56: add [rax], al; xor ecx, ecx; addsd xmm0, xmm0; mov [rdi], ecx; ret; 
0x00000000074bef: add [rax], al; xor ecx, ecx; jmp rsi; 
0x000000001420e0: add [rax], al; xor ecx, ecx; lea rdx, [rip+0xd805]; lea r9, [rsp+0x20]; call qword ptr [rax]; 
0x0000000011386b: add [rax], al; xor edi, edi; or r10d, 0x40; mov eax, ecx; syscall; 
0x000000000cd04a: add [rax], al; xor edi, edi; syscall; 
0x0000000007a6e7: add [rax], al; xor edx, edx; jmp rcx; 
0x000000000762af: add [rax], al; xor edx, edx; jmp rsi; 
0x0000000009c3e6: add [rax], al; xor edx, edx; mov eax, edx; ret; 
0x00000000086102: add [rax], al; xor edx, edx; mov rdi, r15; call qword ptr [rbx+0x80]; 
0x0000000008afa0: add [rax], al; xor edx, edx; mov rdi, rbp; call qword ptr [rax+0x80]; 
0x0000000008b2aa: add [rax], al; xor edx, edx; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x0000000008ba26: add [rax], al; xor edx, edx; mov rsi, rbp; mov rdi, rbx; call qword ptr [r12+0x80]; 
0x000000000b7cd1: add [rax], al; xor edx, edx; or cl, cl; cmove rax, rdx; ret; 
0x0000000008f501: add [rax], al; xor edx, edx; xor esi, esi; mov rdi, rbx; call qword ptr [rax+0x58]; 
0x000000000d8e4c: add [rax], al; xor esi, esi; lea edi, [rdi*8+0x2]; syscall; 
0x0000000008600d: add [rax], al; xor esi, esi; mov edx, 0x1; mov rdi, r15; call qword ptr [rbp+0x80]; 
0x0000000008b205: add [rax], al; xor esi, esi; mov edx, 0x1; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x00000000085e17: add [rax], al; xor esi, esi; mov edx, 0x2; mov rdi, r15; call qword ptr [r13+0x80]; 
0x0000000007ebb3: add [rax], al; xor esi, esi; mov edx, 0x2; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x0000000007e7c7: add [rax], al; xor esi, esi; mov rdi, rbp; call qword ptr [rbx+0x10]; 
0x00000000074b3d: add [rax], al; xor esi, esi; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000139e86: add [rax], al; xor r10d, r10d; mov eax, r10d; ret; 
0x000000000cc04e: add [rax], al; xor r12d, r12d; mov rax, r12; pop r12; ret; 
0x0000000008a836: add [rax], al; xor r8d, r8d; mov rax, r8; ret; 
0x000000000cb09e: add [rax], al; xor rax, rax; ret; 
0x000000000712ab: add [rax], ax; add [rax-0x7d], cl; ret; 
0x0000000012160a: add [rax], bh; cmovns rax, [rbx+0x28]; pop rbx; ret; 
0x00000000038ba7: add [rax], cl; add [rax], al; ret; 
0x000000000ba405: add [rax], cl; lea rax, [rip+0x114a2]; lea rdx, [rip+0x1127b]; cmovne rax, rdx; ret; 
0x00000000038c87: add [rax], dl; add [rax], al; ret; 
0x0000000009d077: add [rax], dl; lea rax, [rip+0x1a660]; cmove rax, rdx; ret; 
0x0000000009c867: add [rax], dl; lea rax, [rip+0x1b470]; cmovne rax, rdx; ret; 
0x0000000009c737: add [rax], dl; lea rax, [rip+0x1b4f0]; cmovne rax, rdx; ret; 
0x0000000009c2c7: add [rax], dl; lea rax, [rip+0x1b8b0]; cmovne rax, rdx; ret; 
0x000000000e0ab9: add [rax], eax; add [rax+0x20], bh; cmove rax, rdx; ret; 
0x000000000bce66: add [rax], eax; add [rax+0x29], cl; ret far; 
0x000000000ecea4: add [rax], eax; add [rax+0x63], cl; ret; 
0x000000000f38e6: add [rax], eax; add [rax+0x9], cl; ret far; 
0x000000000adc07: add [rax], eax; add [rax+0xf], cl; mov ebp, 0xf80148c0; ret; 
0x00000000136b13: add [rax], eax; add [rax-0x1], bh; cmove eax, edx; ret; 
0x000000000500dd: add [rax], eax; add [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x000000000d2913: add [rax], eax; add [rax-0x41], cl; ret; 
0x00000000046131: add [rax], eax; add [rax-0x73], cl; add eax, 0x1a023b; add rsp, 0x8; ret; 
0x00000000094c07: add [rax], eax; add [rax-0x75], cl; add eax, 0x14e17f; call qword ptr [rax]; 
0x00000000142bbc: add [rax], eax; add [rax-0x75], cl; and al, 0x30; call rax; 
0x0000000009b6d9: add [rax], eax; add [rax-0x75], cl; jg short 0x000000000009b728; mov rsi, rbp; call rax; 
0x0000000014302e: add [rax], eax; add [rax-0x75], cl; or [r14+0x20], r15b; mov rdi, rbp; call qword ptr [rax+0x30]; 
0x0000000008c0e7: add [rax], eax; add [rax-0x77], cl; out 0x48, al; mov edi, ebp; call qword ptr [r12+0x90]; 
0x0000000008becb: add [rax], eax; add [rax-0x77], cl; out 0x48, al; mov edi, ebp; call qword ptr [r13+0x90]; 
0x0000000008abf5: add [rax], eax; add [rax-0x77], cl; out 0x48, al; mov edi, ebp; call qword ptr [r15+0x90]; 
0x000000000b7ee2: add [rax], eax; add [rax-0x77], cl; shl ebx, 0x1; movsb [rdi], [rsi]; ret; 
0x0000000010da0c: add [rax], eax; add [rax-0x77], cl; xor esi, esi; syscall; 
0x000000001765fd: add [rax], eax; add [rax-0x7cb7fec8], al; fdivr st, st(7); ret; 
0x000000000968b3: add [rax], eax; add [rax-0x7d], cl; call far fword ptr [rdi]; 
0x0000000018db8d: add [rax], eax; add [rax-0x7d], cl; ret far; 
0x0000000002ae26: add [rax], eax; add [rax-0x7d], cl; ret; 
0x0000000015cef6: add [rax], eax; add [rax], al; add [rax-0x1], bh; ret; 
0x000000000d8e2f: add [rax], eax; add [rax], al; add rsp, 0x8; ret; 
0x0000000008ceae: add [rax], eax; add [rax], al; call qword ptr [r14+0x80]; 
0x0000000014d7e7: add [rax], eax; add [rax], al; call qword ptr [rax+0x18]; 
0x000000001416c9: add [rax], eax; add [rax], al; call qword ptr [rax+0x28]; 
0x0000000010b01e: add [rax], eax; add [rax], al; call qword ptr [rbp+0x40]; 
0x000000001149cd: add [rax], eax; add [rax], al; call r12; 
0x000000000cb19f: add [rax], eax; add [rax], al; cmovg r8d, eax; mov eax, r8d; ret; 
0x000000000cb17f: add [rax], eax; add [rax], al; cmovl r8d, eax; mov eax, r8d; ret; 
0x000000000deb00: add [rax], eax; add [rax], al; incsspq rsi; jmp rdi; 
0x000000000cb562: add [rax], eax; add [rax], al; je 0x00000000000cb4c5; lea rax, [rdi-0x10]; ret; 
0x000000000cb612: add [rax], eax; add [rax], al; je short 0x00000000000cb680; lea rax, [rdi-0x10]; ret; 
0x000000000cb091: add [rax], eax; add [rax], al; jg short 0x00000000000cb099; neg eax; ret; 
0x0000000018c681: add [rax], eax; add [rax], al; jg short 0x000000000018c690; neg eax; ret; 
0x00000000189447: add [rax], eax; add [rax], al; jl short 0x0000000000189450; neg eax; ret; 
0x0000000007b1d2: add [rax], eax; add [rax], al; jmp rcx; 
0x00000000075509: add [rax], eax; add [rax], al; jmp rsi; 
0x00000000159500: add [rax], eax; add [rax], al; mov [rbp+0x18], rax; lea rdi, [r13+0x988]; call qword ptr [r13+0xf90]; 
0x00000000055ba6: add [rax], eax; add [rax], al; mov [rdi], rdx; ret; 
0x000000000923fe: add [rax], eax; add [rax], al; mov [rip+0x150ea4], eax; ret; 
0x000000000923d7: add [rax], eax; add [rax], al; mov [rip+0x150eae], rax; ret; 
0x000000000923ae: add [rax], eax; add [rax], al; mov [rip+0x150ecf], rax; ret; 
0x0000000009238e: add [rax], eax; add [rax], al; mov [rip+0x150ee7], rax; ret; 
0x00000000142ef6: add [rax], eax; add [rax], al; mov [rsi+0x10], rax; ret; 
0x00000000046346: add [rax], eax; add [rax], al; mov [rsi+0xe], ax; xor eax, eax; ret; 
0x000000000e7de1: add [rax], eax; add [rax], al; mov byte ptr [rdi], 0x5b; ret; 
0x00000000055c7e: add [rax], eax; add [rax], al; mov dword ptr [rdx], 0xffffc002; ret; 
0x0000000014d7d7: add [rax], eax; add [rax], al; mov dword ptr [rsp+0x10], 0x1; mov dword ptr [rsp+0x18], 0x1; call qword ptr [rax+0x18]; 
0x0000000014d7df: add [rax], eax; add [rax], al; mov dword ptr [rsp+0x18], 0x1; call qword ptr [rax+0x18]; 
0x0000000014d83b: add [rax], eax; add [rax], al; mov dword ptr [rsp+0x18], 0x1; mov dword ptr [rsp+0x20], 0x5; call qword ptr [rax+0x18]; 
0x0000000014d843: add [rax], eax; add [rax], al; mov dword ptr [rsp+0x20], 0x5; call qword ptr [rax+0x18]; 
0x0000000014da00: add [rax], eax; add [rax], al; mov dword ptr [rsp+0xb0], 0x1; mov dword ptr [rsp+0xb8], 0x1; call qword ptr [rax+0x18]; 
0x0000000014da0b: add [rax], eax; add [rax], al; mov dword ptr [rsp+0xb8], 0x1; call qword ptr [rax+0x18]; 
0x00000000146f44: add [rax], eax; add [rax], al; mov eax, 0x1; ret; 
0x000000000d9097: add [rax], eax; add [rax], al; mov eax, 0xe6; syscall; 
0x0000000009a7b5: add [rax], eax; add [rax], al; mov eax, r12d; pop r12; ret; 
0x0000000011226b: add [rax], eax; add [rax], al; mov eax, r8d; add rsp, 0x8; ret; 
0x000000000895d2: add [rax], eax; add [rax], al; mov eax, r8d; ret; 
0x00000000076245: add [rax], eax; add [rax], al; mov ecx, 0x1; jmp rsi; 
0x0000000007bf4d: add [rax], eax; add [rax], al; mov edx, 0x1; jmp rcx; 
0x0000000010ead1: add [rax], eax; add [rax], al; mov esi, 0x5409; mov eax, 0x10; syscall; 
0x000000000272ba: add [rax], eax; add [rax], al; mov esi, 0x81; mov eax, 0xca; syscall; 
0x000000000973ee: add [rax], eax; add [rax], al; mov esi, 0x81; mov eax, ebx; syscall; 
0x0000000011bd5a: add [rax], eax; add [rax], al; mov qword ptr [rax+0x10], 0x0; mov qword ptr [rip+0xc760f], 0x0; ret; 
0x000000001570aa: add [rax], eax; add [rax], al; mov qword ptr [rip+0x921c7], 0x0; add rsp, 0x8; ret; 
0x0000000014380e: add [rax], eax; add [rax], al; mov rax, [rax+0x23b8]; mov rdi, r12; call qword ptr [rax+0x28]; 
0x0000000007579f: add [rax], eax; add [rax], al; mov rbx, rdi; jmp rsi; 
0x0000000007b494: add [rax], eax; add [rax], al; mov rbx, rsi; jmp rcx; 
0x0000000007b181: add [rax], eax; add [rax], al; mov rbx, rsi; mov dword ptr [rsp+0x28], 0x20; jmp rcx; 
0x0000000007b219: add [rax], eax; add [rax], al; mov rbx, rsi; xor r12d, r12d; jmp rcx; 
0x0000000014eac5: add [rax], eax; add [rax], al; mov rdi, r13; call qword ptr [rax+0x28]; 
0x00000000086012: add [rax], eax; add [rax], al; mov rdi, r15; call qword ptr [rbp+0x80]; 
0x0000000008bcb0: add [rax], eax; add [rax], al; mov rdi, rbp; call qword ptr [rax+0x80]; 
0x0000000008b20a: add [rax], eax; add [rax], al; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x0000000008cdfa: add [rax], eax; add [rax], al; mov rdi, rbx; call qword ptr [r12+0x48]; 
0x00000000086997: add [rax], eax; add [rax], al; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x0000000007dbae: add [rax], eax; add [rax], al; mov rdi, rbx; call r8; 
0x0000000007d4ed: add [rax], eax; add [rax], al; mov rdi, rbx; call rax; 
0x00000000149cae: add [rax], eax; add [rax], al; movups [r8], xmm1; ret; 
0x00000000149cc6: add [rax], eax; add [rax], al; movups [r8], xmm2; ret; 
0x0000000014a5c6: add [rax], eax; add [rax], al; movups [r8], xmm3; ret; 
0x0000000014a5a6: add [rax], eax; add [rax], al; movups [r8], xmm4; ret; 
0x0000000014a5b6: add [rax], eax; add [rax], al; movups [rdi+0x20], xmm2; ret; 
0x00000000149c9a: add [rax], eax; add [rax], al; movups [rdi+0x8], xmm0; ret; 
0x00000000146ebf: add [rax], eax; add [rax], al; movups [rdx], xmm1; ret; 
0x0000000014d8b1: add [rax], eax; add [rax], al; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x0000000014dbf1: add [rax], eax; add [rax], al; movups [rsp+0xb8], xmm5; call rax; 
0x00000000083ef5: add [rax], eax; add [rax], al; pop rbp; pop r12; ret; 
0x0000000007fc3b: add [rax], eax; add [rax], al; pop rbx; pop rbp; ret; 
0x000000001070c1: add [rax], eax; add [rax], al; pop rbx; ret; 
0x00000000053717: add [rax], eax; add [rax], al; ret; 
0x00000000038913: add [rax], eax; add [rax], al; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000147c61: add [rax], eax; add [rax], al; sbb eax, 0xffffffff; add rsp, 0x8; ret; 
0x00000000108d51: add [rax], eax; add [rax], al; syscall; 
0x000000000e0c65: add [rax], eax; add [rax], al; test edi, edi; js short 0x00000000000e0c70; ret; 
0x00000000074bed: add [rax], eax; add [rax], al; xor ecx, ecx; jmp rsi; 
0x0000000007a6e5: add [rax], eax; add [rax], al; xor edx, edx; jmp rcx; 
0x000000000762ad: add [rax], eax; add [rax], al; xor edx, edx; jmp rsi; 
0x0000000009d075: add [rax], eax; add [rax], dl; lea rax, [rip+0x1a660]; cmove rax, rdx; ret; 
0x000000000bc8bb: add [rax], eax; add [rbp+0x31], al; shr cl, 0x86; idiv bh; jmp qword ptr [rsi+0xf]; 
0x00000000060456: add [rax], eax; add [rbp+0x41], bl; pop rsp; pop r13; ret; 
0x000000000e9515: add [rax], eax; add [rbp+rcx*4+0x5a], cl; dec dword ptr [rcx+0x29]; ret; 
0x000000000a8028: add [rax], eax; add [rbp-0x77], cl; ret far; 
0x000000000e5c01: add [rax], eax; add [rbp-0x7b], al; ror byte ptr [rdi], 0x85; ret; 
0x0000000005fcc2: add [rax], eax; add [rbx+0x28907c8], al; mov eax, 0x1; ret; 
0x00000000138ac3: add [rax], eax; add [rbx+0x5d], bl; pop r12; pop r13; ret; 
0x0000000010fe36: add [rax], eax; add [rbx+0x5d], bl; pop r12; ret; 
0x000000000fc453: add [rax], eax; add [rbx+rcx*4+0x63], cl; and [rax-0x7d], cl; ret; 
0x00000000155f85: add [rax], eax; add [rbx+rdi+0x3c], cl; and al, 0x72; mov [0xffff4fe924048b49], al; jmp qword ptr [rsi+0xf]; 
0x000000000d0867: add [rax], eax; add [rbx-0x13f7b], cl; jmp far fword ptr [rbx]; 
0x000000001036ed: add [rax], eax; add [rbx-0x6af0fd05], al; ret; 
0x0000000010368b: add [rax], eax; add [rbx-0x6af0fe05], al; ret; 
0x0000000009a36e: add [rax], eax; add [rcx+rcx*4-0x16], cl; mov rdi, r12; call rax; 
0x00000000143996: add [rax], eax; add [rcx+rcx*4-0x19], cl; call qword ptr [rbx]; 
0x0000000008439c: add [rax], eax; add [rcx+rcx*4-0x1], cl; call qword ptr [rax+0x20]; 
0x00000000083c03: add [rax], eax; add [rcx+rcx*4-0x1a], al; mov rdi, r14; call qword ptr [rax+0x18]; 
0x0000000015a4e2: add [rax], eax; add [rcx+rcx*4-0x20], al; pop r12; ret; 
0x000000000420db: add [rax], eax; add [rcx+rcx*4-0x40], al; pop rbx; ret; 
0x00000000156f06: add [rax], eax; add [rcx+rcx*4-0x40], cl; pop rbp; ret; 
0x0000000009b0a7: add [rax], eax; add [rcx+rcx*4-0x6], cl; mov rsi, r14; mov rdi, r13; call rax; 
0x000000000d6993: add [rax], eax; add [rcx-0x12f43], al; jmp far fword ptr [rax]; 
0x000000000326b3: add [rax], eax; add [rcx-0x73], cl; add cl, [rax+0x39]; ret far; 
0x00000000114b60: add [rax], eax; add [rcx-0x75], cl; jge short 0x0000000000114b67; call rbx; 
0x000000000e442b: add [rax], eax; add [rcx-0x77], al; ret; 
0x000000000311a8: add [rax], eax; add [rcx-0x77], al; xor ecx, [rcx-0x77]; ret far; 
0x0000000006c980: add [rax], eax; add [rcx-0x7d], cl; ret; 
0x0000000002c75d: add [rax], eax; add [rcx-0xa], al; ret; 
0x000000000f4414: add [rax], eax; add [rcx], al; ret; 
0x000000000f3f54: add [rax], eax; add [rcx], bh; ret; 
0x0000000008600c: add [rax], eax; add [rcx], dh; idiv byte ptr [rdx+0x1]; mov rdi, r15; call qword ptr [rbp+0x80]; 
0x0000000008b204: add [rax], eax; add [rcx], dh; idiv byte ptr [rdx+0x1]; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x0000000007ebb2: add [rax], eax; add [rcx], dh; idiv byte ptr [rdx+0x2]; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x00000000086101: add [rax], eax; add [rcx], dh; ror byte ptr [rcx+rcx*4-0x1], cl; call qword ptr [rbx+0x80]; 
0x00000000108166: add [rax], eax; add [rcx], dh; shl bh, 0xc2; jmp rsi; 
0x0000000008f500: add [rax], eax; add [rcx], dh; shl byte ptr [rcx], cl; test byte ptr [rax-0x77], 0xdf; call qword ptr [rax+0x58]; 
0x0000000007e7c6: add [rax], eax; add [rcx], dh; test byte ptr [rax-0x77], 0xef; call qword ptr [rbx+0x10]; 
0x000000000534bc: add [rax], eax; add [rdi+0x2], bh; mov r10d, 0x8; mov eax, 0xe; syscall; 
0x000000000364b9: add [rax], eax; add [rdx+0x63], cl; or al, 0x8f; add rcx, rdi; notrack jmp rcx; 
0x000000001193e9: add [rax], eax; add [rdx+0x8], bh; syscall; 
0x00000000142023: add [rax], eax; add [rsi+0x4], bh; mov rdi, rbp; lea r9, [rsp+0x20]; call qword ptr [rax]; 
0x0000000008bbf7: add [rax], eax; add [rsi-0x1], bh; mov rdi, rbp; call qword ptr [rax+0x18]; 
0x0000000008f154: add [rax], eax; add [rsi-0x1], bh; mov rdi, rbx; call qword ptr [rax+0x18]; 
0x0000000008e946: add [rax], eax; add al, ch; bnd jns short 0x000000000008e946; jmp qword ptr [rsi+0xf]; 
0x000000001465a2: add [rax], eax; add al, ch; jbe short 0x00000000001465a5; in eax, dx; jmp qword ptr [rsi+0xf]; 
0x000000001249d0: add [rax], eax; add al, ch; or [rbx-0xf], cl; dec dword ptr [rax-0x7d]; ret; 
0x00000000142bed: add [rax], eax; add al, ch; ret far; 
0x000000000fb860: add [rax], eax; add al, ch; sbb bh, ah; std; jmp qword ptr [rsp+rax*2-0x77]; 
0x000000000f4a46: add [rax], eax; add al, ch; sbb bl, dh; jmp qword ptr [rsi+0xf]; 
0x00000000136b6b: add [rax], eax; add bl, al; mov eax, 0x29; ret; 
0x000000001721ec: add [rax], eax; add bl, al; ret; 
0x00000000136b62: add [rax], eax; add bl, al; xor eax, eax; ret; 
0x00000000148d68: add [rax], eax; add bl, ch; mov eax, 0xfe09dee8; jmp qword ptr [rsi+0x66]; 
0x0000000017e500: add [rax], eax; add ch, al; std; xlat [rbx]; ret; 
0x000000000d57fd: add [rax], eax; add cl, ch; ret far; 
0x0000000013fbad: add [rax], eax; call qword ptr [rsp+0x10]; 
0x0000000009d07e: add [rax], eax; cmove rax, rdx; ret; 
0x0000000009c15e: add [rax], eax; cmovne rax, rdx; ret; 
0x0000000010e57e: add [rax], eax; endbr64; xor eax, eax; syscall; 
0x00000000052486: add [rax], eax; jne short 0x0000000000052480; pop rbx; ret; 
0x0000000009d783: add [rax], eax; lea rax, [rip+0x1a714]; cmove rax, rdx; ret; 
0x0000000009d403: add [rax], eax; lea rax, [rip+0x1aa74]; cmove rax, rdx; ret; 
0x0000000009d2a3: add [rax], eax; lea rax, [rip+0x1abf4]; cmove rax, rdx; ret; 
0x0000000009d317: add [rax], eax; lea rax, [rip+0x1aed0]; cmovne rax, rdx; ret; 
0x000000000ba40c: add [rax], eax; lea rdx, [rip+0x1127b]; cmovne rax, rdx; ret; 
0x0000000009c157: add [rax], eax; lea rdx, [rip+0x12110]; cmovne rax, rdx; ret; 
0x0000000009c287: add [rax], eax; lea rdx, [rip+0xd2900]; cmovne rax, rdx; ret; 
0x000000000b91cc: add [rax], eax; lea rdx, [rip+0xd2eab]; cmovne rax, rdx; ret; 
0x0000000009d4a7: add [rax], eax; lea rdx, [rip+0xd5a10]; cmovne rax, rdx; ret; 
0x0000000009c1b8: add [rax], eax; lea rdx, [rip+0xee42f]; cmovne rax, rdx; ret; 
0x000000000e09e5: add [rax], eax; mov eax, 0x7f; mov edx, 0x7d00; cmove rax, rdx; ret; 
0x000000001799a8: add [rax], eax; mov eax, [rcx+rax*4]; mov edx, [rcx+rdx*4]; sub eax, edx; ret; 
0x0000000017b2b1: add [rax], eax; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000013f98f: add [rax], eax; mov edi, [r13]; call qword ptr [rsp+0x20]; 
0x0000000013fe78: add [rax], eax; mov edi, [r15]; call qword ptr [rsp+0x70]; 
0x0000000017b27d: add [rax], eax; mov edx, [rcx+rdx*4]; mov eax, [rcx+rax*4]; sub eax, edx; ret; 
0x00000000111bd9: add [rax], eax; nop [rax+rax]; endbr64; mov eax, 0x4c; syscall; 
0x0000000010f138: add [rax], eax; nop [rax+rax]; endbr64; mov eax, 0x8c; syscall; 
0x00000000110096: add [rax], eax; nop [rax+rax]; endbr64; mov eax, 0xa3; syscall; 
0x0000000010fe8a: add [rax], eax; nop [rax]; endbr64; mov eax, 0xab; syscall; 
0x0000000012f5fc: add [rax], eax; pop r12; pop r13; ret; 
0x000000000462c4: add [rax], eax; ret; 
0x00000000183487: add [rax], eax; vzeroupper; ret; 
0x0000000010fd4c: add [rax], eax; xchg ax, ax; endbr64; mov eax, 0xaa; syscall; 
0x0000000013fa27: add [rax], eax; xor edi, edi; call qword ptr [rsp+0x20]; 
0x00000000140034: add [rax], eax; xor edi, edi; call qword ptr [rsp+0x70]; 
0x0000000010144b: add [rax], ebp; hlt; jmp qword ptr [rbx+rcx*4+0x4]; 
0x00000000052f9a: add [rax], esi; add [rax], al; mov eax, 0x9e; syscall; 
0x00000000029a35: add [rax], r8b; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000040d2d: add [rax], r8b; addss xmm0, xmm0; ret; 
0x00000000055b9d: add [rax], r8b; bts rdx, 0x34; mov eax, 0x1; mov [rdi], rdx; ret; 
0x000000000938cd: add [rax], r8b; call rax; 
0x00000000092815: add [rax], r8b; cmp [rip+0x154669], rdi; jbe short 0x00000000000927c8; add rsp, 0x8; ret; 
0x00000000028dcd: add [rax], r8b; endbr64; lea rax, [rip+0x18932d]; ret; 
0x0000000011024d: add [rax], r8b; endbr64; mov eax, 0x132; syscall; 
0x000000001139ad: add [rax], r8b; endbr64; mov eax, 0x1c; syscall; 
0x0000000010956d: add [rax], r8b; endbr64; mov eax, 0x20; syscall; 
0x000000000de79d: add [rax], r8b; endbr64; mov eax, 0x25; syscall; 
0x000000000d020d: add [rax], r8b; endbr64; mov eax, 0x26; syscall; 
0x0000000014369d: add [rax], r8b; endbr64; mov eax, 0x2; ret; 
0x0000000011a2ed: add [rax], r8b; endbr64; mov eax, 0x31; syscall; 
0x0000000011a3bd: add [rax], r8b; endbr64; mov eax, 0x34; syscall; 
0x0000000010e2bd: add [rax], r8b; endbr64; mov eax, 0x3; syscall; 
0x00000000041bbd: add [rax], r8b; endbr64; mov eax, 0x3e; syscall; 
0x0000000011b14d: add [rax], r8b; endbr64; mov eax, 0x40; syscall; 
0x0000000011b10d: add [rax], r8b; endbr64; mov eax, 0x47; syscall; 
0x0000000010924d: add [rax], r8b; endbr64; mov eax, 0x49; syscall; 
0x00000000111bdd: add [rax], r8b; endbr64; mov eax, 0x4c; syscall; 
0x00000000111c0d: add [rax], r8b; endbr64; mov eax, 0x4d; syscall; 
0x000000001096ed: add [rax], r8b; endbr64; mov eax, 0x50; syscall; 
0x000000000421bd: add [rax], r8b; endbr64; mov eax, 0x83; syscall; 
0x0000000010f13d: add [rax], r8b; endbr64; mov eax, 0x8c; syscall; 
0x00000000119bad: add [rax], r8b; endbr64; mov eax, 0x9e; syscall; 
0x0000000011018d: add [rax], r8b; endbr64; mov eax, 0xa2; syscall; 
0x0000000011924d: add [rax], r8b; endbr64; mov eax, 0xa6; syscall; 
0x0000000011916d: add [rax], r8b; endbr64; mov eax, 0xad; syscall; 
0x0000000011927d: add [rax], r8b; endbr64; mov eax, 0xbb; syscall; 
0x000000000895dd: add [rax], r8b; endbr64; mov eax, [rdi]; and eax, 0x804; ret; 
0x000000000425bd: add [rax], r8b; endbr64; mov eax, [rip+0x1a0bde]; ret; 
0x0000000015ceed: add [rax], r8b; endbr64; mov qword ptr [rcx], 0x0; mov eax, 0xffffffff; ret; 
0x00000000060fed: add [rax], r8b; endbr64; mov r10, rcx; mov eax, 0x108; syscall; 
0x00000000119a2d: add [rax], r8b; endbr64; mov r10, rcx; mov eax, 0x11e; syscall; 
0x0000000010dc8d: add [rax], r8b; endbr64; mov r10, rcx; mov eax, 0x28; syscall; 
0x0000000008fdfd: add [rax], r8b; endbr64; mov rax, 0xffffffffffffffff; ret; 
0x0000000002902d: add [rax], r8b; endbr64; mov rax, [rip+0x1b9e0d]; add rax, fs:[0x0]; ret; 
0x00000000129b5d: add [rax], r8b; endbr64; mov rax, [rip+0xb92c5]; add rax, fs:[0x0]; ret; 
0x0000000011c96d: add [rax], r8b; endbr64; mov rax, [rip+0xc64bd]; mov eax, [rax+0x38]; ret; 
0x000000000deadd: add [rax], r8b; endbr64; pop rdi; mov eax, 0x3a; syscall; 
0x0000000008fe2d: add [rax], r8b; endbr64; ret; 
0x0000000009131d: add [rax], r8b; endbr64; xor eax, eax; ret; 
0x0000000011b2cd: add [rax], r8b; endbr64; xor r10d, r10d; mov eax, 0x1d; syscall; 
0x0000000004069d: add [rax], r8b; fld st, tbyte ptr [rsp+0x8]; fadd st, st(0); ret; 
0x000000000b4f2d: add [rax], r8b; lea r11, [rip+0xf4179]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b384d: add [rax], r8b; lea r11, [rip+0xf5679]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000010e355: add [rax], r8b; lea rdx, [rsp+0x8]; mov esi, 0x10; mov eax, 0x48; syscall; 
0x0000000018414d: add [rax], r8b; mov [rdi], rdx; mov [rdi+r8-0x8], rdx; vzeroupper; ret; 
0x00000000094c7d: add [rax], r8b; mov [rsp+0x20], r8; mov [rsp+0x18], rsi; mov [rsp+0x10], r11; call rax; 
0x000000000e7e2d: add [rax], r8b; mov byte ptr [rdi+0x8], 0x1c; mov eax, 0x2; ret; 
0x00000000146f3d: add [rax], r8b; mov dword ptr [r8+0x4], 0x1; mov eax, 0x1; ret; 
0x00000000149cdd: add [rax], r8b; mov dword ptr [rdi+0x4], 0x1; mov eax, 0x1; ret; 
0x0000000007be25: add [rax], r8b; mov dword ptr [rsp+0x50], 0x1; mov rbx, rsi; jmp rcx; 
0x00000000076345: add [rax], r8b; mov dword ptr [rsp+0x68], 0x1; mov rbx, rdi; jmp rsi; 
0x0000000018c67d: add [rax], r8b; mov eax, 0x1; jg short 0x000000000018c690; neg eax; ret; 
0x000000000e1555: add [rax], r8b; mov eax, 0x1; ret; 
0x000000000fa21d: add [rax], r8b; mov eax, 0x2; ret; 
0x00000000060fb5: add [rax], r8b; mov eax, 0xffffffff; pop rbp; ret; 
0x00000000084dc5: add [rax], r8b; mov eax, 0xffffffff; ret; 
0x0000000002bb85: add [rax], r8b; mov eax, [rip+0x1b9b0e]; test eax, eax; je short 0x000000000002bb98; ret; 
0x0000000013bae5: add [rax], r8b; mov eax, [rip+0xace5e]; test eax, eax; je short 0x000000000013baf8; ret; 
0x000000001297e5: add [rax], r8b; mov eax, edi; and eax, 0xffffff; ret; 
0x0000000011f6cd: add [rax], r8b; mov eax, r8d; ret; 
0x00000000082715: add [rax], r8b; mov edx, 0x10; mov rsi, r13; mov rdi, r15; call qword ptr [r14+0x38]; 
0x000000000b317d: add [rax], r8b; mov edx, [rsi]; mov [rdi], edx; ret; 
0x0000000010df0d: add [rax], r8b; mov qword ptr [rdi], 0x0; ret; 
0x00000000090e85: add [rax], r8b; mov qword ptr [rsi], 0x0; mov eax, 0xffffffff; ret; 
0x0000000015a4ed: add [rax], r8b; mov qword ptr fs:[r12], 0x0; mov rax, [rsp+0x10]; mov rdi, [rsp+0x18]; call rax; 
0x00000000139f1d: add [rax], r8b; mov r8, r10; mov rax, r10; mov byte ptr [r8], 0x0; ret; 
0x00000000150e6d: add [rax], r8b; mov r8d, 0x1; mov eax, r8d; ret; 
0x0000000004089d: add [rax], r8b; mov rax, 0x8000000000000000; and rdx, rax; mov [rdi], rdx; ret; 
0x000000000896b5: add [rax], r8b; mov rax, [rdi+0x28]; sub rax, [rdi+0x20]; ret; 
0x00000000089585: add [rax], r8b; mov rax, [rdi+0x40]; sub rax, [rdi+0x38]; ret; 
0x0000000014f82d: add [rax], r8b; mov rax, [rdi+0x8]; call qword ptr [rax+0x18]; 
0x00000000150e7d: add [rax], r8b; mov rax, [rdi+0x8]; jmp qword ptr [rax+0x40]; 
0x0000000014fa4d: add [rax], r8b; mov rax, [rdi+0x8]; jmp qword ptr [rax+0x8]; 
0x000000001503a5: add [rax], r8b; mov rax, [rdi+0x8]; lea rsi, [rsp+0x10]; call qword ptr [rax]; 
0x00000000150ae5: add [rax], r8b; mov rax, [rdi+0x8]; mov rsi, rsp; call qword ptr [rax+0x40]; 
0x0000000015072d: add [rax], r8b; mov rax, [rdi+0x8]; mov rsi, rsp; call qword ptr [rax]; 
0x000000000d8f95: add [rax], r8b; mov rax, [rip+0x109ea9]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000094c4d: add [rax], r8b; mov rax, [rip+0x14e139]; xor edi, edi; call qword ptr [rax]; 
0x00000000042515: add [rax], r8b; mov rax, [rip+0x1a0929]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000423f5: add [rax], r8b; mov rax, [rip+0x1a0a49]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000029315: add [rax], r8b; mov rax, [rip+0x1b9b29]; mov dword ptr fs:[rax], 0x9; mov eax, 0xffffffff; ret; 
0x00000000159a35: add [rax], r8b; mov rax, [rip+0x8f889]; call qword ptr [rax+0x8]; 
0x0000000015993d: add [rax], r8b; mov rax, [rip+0x8f981]; call qword ptr [rax]; 
0x00000000116555: add [rax], r8b; mov rax, [rip+0xcc8e9]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010d5f5: add [rax], r8b; mov rax, [rip+0xd5849]; mov dword ptr fs:[rax], 0x16; xor eax, eax; ret; 
0x00000000108575: add [rax], r8b; mov rax, [rip+0xda8c9]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000108515: add [rax], r8b; mov rax, [rip+0xda929]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000001084b5: add [rax], r8b; mov rax, [rip+0xda989]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010812d: add [rax], r8b; mov rax, [rip+0xdad11]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000001080cd: add [rax], r8b; mov rax, [rip+0xdad71]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010806d: add [rax], r8b; mov rax, [rip+0xdadd1]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000001278bd: add [rax], r8b; mov rax, r8; ret; 
0x00000000186f1d: add [rax], r8b; mov rax, r8; shr rax, 0x2; vzeroupper; ret; 
0x000000000b441d: add [rax], r8b; mov rax, rdi; ret; 
0x00000000074be5: add [rax], r8b; mov rbx, rcx; mov r13d, 0x1; xor ecx, ecx; jmp rsi; 
0x0000000007a6dd: add [rax], r8b; mov rbx, rdx; mov r9d, 0x1; xor edx, edx; jmp rcx; 
0x000000000b31bd: add [rax], r8b; mov rdx, [rsi]; mov [rdi], rdx; ret; 
0x000000000a4d75: add [rax], r8b; mov rdx, [rsp+0x10]; mov [rax], rdx; ret; 
0x00000000146ea5: add [rax], r8b; movdqu xmm0, [rdx]; mov eax, esi; movups [r8+0x8], xmm0; ret; 
0x00000000149ca5: add [rax], r8b; movdqu xmm1, [rdi+0x8]; mov eax, 0x1; movups [r8], xmm1; ret; 
0x00000000137185: add [rax], r8b; movsxd rdx, edx; mov eax, r8d; mov byte ptr [rdi+rdx], 0x0; ret; 
0x0000000018bb8d: add [rax], r8b; movzx eax, byte ptr [rdi-0xa]; movzx edx, byte ptr [rsi-0xa]; sub eax, edx; ret; 
0x0000000018bb7d: add [rax], r8b; movzx eax, byte ptr [rdi-0xb]; movzx edx, byte ptr [rsi-0xb]; sub eax, edx; ret; 
0x0000000018bb6d: add [rax], r8b; movzx eax, byte ptr [rdi-0xc]; movzx edx, byte ptr [rsi-0xc]; sub eax, edx; ret; 
0x0000000018bb5d: add [rax], r8b; movzx eax, byte ptr [rdi-0xd]; movzx edx, byte ptr [rsi-0xd]; sub eax, edx; ret; 
0x0000000018bb4d: add [rax], r8b; movzx eax, byte ptr [rdi-0xe]; movzx edx, byte ptr [rsi-0xe]; sub eax, edx; ret; 
0x0000000018bb3d: add [rax], r8b; movzx eax, byte ptr [rdi-0xf]; movzx edx, byte ptr [rsi-0xf]; sub eax, edx; ret; 
0x0000000017e8ed: add [rax], r8b; movzx eax, byte ptr [rdi]; movzx ecx, byte ptr [rsi]; sub eax, ecx; ret; 
0x0000000018402d: add [rax], r8b; movzx edx, byte ptr [rsi]; mov [rdi], dl; vzeroupper; ret; 
0x0000000008ab8d: add [rax], r8b; or dword ptr [rbx], 0x20; mov eax, 0xffffffff; pop rbx; ret; 
0x0000000009b4a5: add [rax], r8b; pop rbp; ret; 
0x00000000111cad: add [rax], r8b; pxor xmm0, xmm0; movups [rdi], xmm0; ret; 
0x000000000347e5: add [rax], r8b; ret; 
0x0000000008767d: add [rax], r8b; shr edx, 0x4; and edx, 0x1; mov eax, edx; ret; 
0x0000000008777d: add [rax], r8b; shr edx, 0x5; and edx, 0x1; mov eax, edx; ret; 
0x0000000008fba5: add [rax], r8b; sub edx, [rax+0x10]; mov eax, [rdi+0x10]; sub eax, edx; ret; 
0x0000000008f055: add [rax], r8b; sub rcx, rax; lea eax, [rcx-0x1]; ret; 
0x00000000084715: add [rax], r8b; sub rcx, rax; sar rcx, 0x2; lea eax, [rcx-0x1]; ret; 
0x0000000011223d: add [rax], r8b; xor eax, eax; add rsp, 0x8; ret; 
0x000000000b8465: add [rax], r8b; xor eax, eax; pop rbx; ret; 
0x0000000008ce2d: add [rax], r8b; xor eax, eax; ret; 
0x0000000017de8d: add [rax], r8b; xor eax, eax; vzeroupper; ret; 
0x00000000040a55: add [rax], r8b; xor ecx, ecx; addsd xmm0, xmm0; mov [rdi], ecx; ret; 
0x0000000009c3e5: add [rax], r8b; xor edx, edx; mov eax, edx; ret; 
0x00000000128f9d: add [rax], r8b; xor r8d, r8d; mov rax, r8; ret; 
0x000000000cb09d: add [rax], r8b; xor rax, rax; ret; 
0x0000000009b0a6: add [rax], r8d; add [rcx+rcx*4-0x6], cl; mov rsi, r14; mov rdi, r13; call rax; 
0x000000000f3f53: add [rax], r8d; add [rcx], bh; ret; 
0x000000000364b8: add [rax], r8d; add [rdx+0x63], cl; or al, 0x8f; add rcx, rdi; notrack jmp rcx; 
0x0000000007579e: add [rax], rax; add [rax], al; mov rbx, rdi; jmp rsi; 
0x0000000007b218: add [rax], rax; add [rax], al; mov rbx, rsi; xor r12d, r12d; jmp rcx; 
0x00000000144f54: add [rbp+0x10], dh; add rsp, 0x40; pop rbx; ret; 
0x0000000011af4c: add [rbp+0x10], dh; add rsp, 0xa0; pop rbx; ret; 
0x00000000127c32: add [rbp+0x10], dh; add rsp, 0xd8; ret; 
0x0000000008a3f5: add [rbp+0x11], dh; add rsp, 0x48; ret; 
0x00000000110763: add [rbp+0x11], dh; add rsp, 0x58; ret; 
0x00000000159ccd: add [rbp+0x11], dh; mov rax, [rip+0x8f5f1]; mov rax, [rax+0x10]; add rsp, 0x38; jmp rax; 
0x000000000cc1d2: add [rbp+0x14], dh; add rsp, 0x28; ret; 
0x00000000040859: add [rbp+0x14], dh; mov rax, 0xfffffffffffff; test rdx, rax; je short 0x0000000000040870; ret; 
0x00000000158817: add [rbp+0x15], dh; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000001376ca: add [rbp+0x17], dh; add rsp, 0x20; pop rbp; ret; 
0x00000000041fbc: add [rbp+0x18], dh; add rsp, 0x98; pop rbp; pop r12; ret; 
0x000000000428cb: add [rbp+0x19], dh; add rsp, 0x98; pop rbp; pop r12; ret; 
0x000000000a33fe: add [rbp+0x19], eax; fild st, dword ptr [rcx-0x7d]; ret; 
0x00000000123350: add [rbp+0x19], eax; rol byte ptr [rcx-0x7d], 0xc0; add [rbp+0x440f45c9], eax; ror dword ptr [rax-0x7d], 0x1; ret; 
0x000000001233fb: add [rbp+0x19], eax; rol byte ptr [rcx-0x7d], 0xc0; add [rbp+0x440f45f6], eax; ret far; 
0x000000000ce13b: add [rbp+0x1], cl; ret far; 
0x000000000ce27d: add [rbp+0x1], cl; ret; 
0x00000000138f68: add [rbp+0x1a], dh; add rsp, 0x20; pop rbx; ret; 
0x00000000119ad6: add [rbp+0x1a], dh; add rsp, 0x58; ret; 
0x000000000597e2: add [rbp+0x1b], dh; add rsp, 0x450; pop rbp; ret; 
0x0000000014b4f2: add [rbp+0x1c], dh; add rsp, 0x10; pop rbx; ret; 
0x00000000042848: add [rbp+0x1c], dh; add rsp, 0x98; pop rbp; pop r12; ret; 
0x000000000e0a14: add [rbp+0x1c], dh; mov eax, 0xfffa; ret; 
0x0000000010ea13: add [rbp+0x1e], dh; mov eax, r9d; add rsp, 0x38; ret; 
0x000000000c6112: add [rbp+0x1f], dh; add rsp, 0x20; pop rbx; ret; 
0x000000001562ed: add [rbp+0x1f], dh; add rsp, 0x520; mov rax, r12; pop r12; ret; 
0x0000000014d1d8: add [rbp+0x20009], bh; add [rax], al; pop rbx; ret; 
0x000000001362df: add [rbp+0x20850fdb], al; add [rax], eax; add [rax+0x63], cl; ret; 
0x00000000141234: add [rbp+0x21], esi; ret; 
0x0000000014de70: add [rbp+0x25], dh; add rsp, 0x28; ret; 
0x000000000418db: add [rbp+0x26], dh; mov eax, r8d; add rsp, 0x118; ret; 
0x000000000420d5: add [rbp+0x27], dh; add rsp, 0x140; mov eax, r8d; pop rbx; ret; 
0x000000001354dc: add [rbp+0x28], dh; add rsp, 0x28; pop rbx; pop rbp; ret; 
0x0000000013101e: add [rbp+0x28], dh; add rsp, 0x38; ret; 
0x00000000159be9: add [rbp+0x28], dh; mov rax, [rax+0x18]; add rsp, 0x68; jmp rax; 
0x0000000009c94a: add [rbp+0x29], cl; ret far; 
0x0000000011b1b3: add [rbp+0x2a], dh; mov eax, 0x42; syscall; 
0x00000000042185: add [rbp+0x2d], dh; add rsp, 0x40; pop rbx; ret; 
0x00000000144281: add [rbp+0x2e], dh; add rsp, 0x10; pop rbx; ret; 
0x0000000012534f: add [rbp+0x2e], dh; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000004fc29: add [rbp+0x30], dh; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x00000000156801: add [rbp+0x30], dh; add rsp, 0x18; ret; 
0x000000001414e4: add [rbp+0x310f75c0], al; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x5d], bl; ret; 
0x000000000cc04f: add [rbp+0x31], al; in al, 0x4c; mov eax, esp; pop r12; ret; 
0x000000000baa2d: add [rbp+0x31], al; jmp qword ptr [rdi+rax*8]; 
0x00000000095496: add [rbp+0x31], al; leave; mov dword ptr fs:[rax], 0xc; mov rax, r9; ret; 
0x0000000009799f: add [rbp+0x31], al; rcr byte ptr [rbp+0x41], 0x5c; mov rax, r8; pop r13; ret; 
0x000000000970f7: add [rbp+0x31], al; rcr byte ptr [rbx+0x5d], 0x4c; mov eax, eax; pop r12; ret; 
0x00000000139e87: add [rbp+0x31], al; rol byte ptr [rcx+rcx*4-0x30], cl; ret; 
0x00000000090a9b: add [rbp+0x31], al; rol byte ptr [rcx+rcx*4-0x3e], cl; mov esi, 0x80; mov eax, r9d; syscall; 
0x000000000d0ae6: add [rbp+0x31], al; ror byte ptr [rcx-0x3f76b3fe], 0x48; add esp, 0x8; ret; 
0x000000000298e7: add [rbp+0x31], al; shl byte ptr [rcx], 0xc9; xor edx, edx; push rax; call rbx; 
0x00000000096883: add [rbp+0x31], al; shl byte ptr [rdi+rax*8], 0xc; add [rax], al; add [rcx+rcx*4-0x40], cl; ret; 
0x000000000c8f9d: add [rbp+0x31], al; shr cl, 0x26; idiv bh; jmp qword ptr [rsi+0xf]; 
0x000000000717b5: add [rbp+0x31], al; shr cl, 0x64; ret; 
0x000000000bc8bd: add [rbp+0x31], al; shr cl, 0x86; idiv bh; jmp qword ptr [rsi+0xf]; 
0x00000000156af8: add [rbp+0x31], dh; add rsp, 0x10; pop rbp; ret; 
0x000000000290c4: add [rbp+0x31], dh; add rsp, 0x38; pop rbx; pop rbp; ret; 
0x000000000b97a8: add [rbp+0x31], eax; shr byte ptr [rdx], 0x4c; lea ecx, [rsp+0x18]; call r13; 
0x0000000017791b: add [rbp+0x32], esi; mov rax, [rcx]; mov [rdx], rax; mov rax, rdi; ret; 
0x0000000014431f: add [rbp+0x33], dh; add rsp, 0x10; pop rbx; ret; 
0x00000000156eff: add [rbp+0x33], dh; add rsp, 0x190; mov rax, r8; pop rbp; ret; 
0x00000000041eb0: add [rbp+0x35], dh; add rsp, 0x98; pop rbp; pop r12; ret; 
0x000000000da632: add [rbp+0x35], dh; add rsp, 0xa8; pop rbp; pop r12; ret; 
0x000000000c96fd: add [rbp+0x368e0fdb], al; add eax, 0x438d0000; dec dword ptr [rax+0x63]; ret far; 
0x000000001422fc: add [rbp+0x36], dh; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000009666a: add [rbp+0x38], dh; add rsp, 0x40; pop rbp; ret; 
0x00000000159923: add [rbp+0x38], dh; add rsp, 0x58; ret; 
0x00000000094973: add [rbp+0x39], cl; ret; 
0x0000000005314d: add [rbp+0x3], dh; push r10; ret; 
0x000000000ccff8: add [rbp+0x3b], dh; add rsp, 0x28; ret; 
0x000000001108ae: add [rbp+0x3c], dh; add rsp, 0x68; ret; 
0x000000000590c9: add [rbp+0x3d], dh; add rsp, 0x28; pop rbx; pop rbp; ret; 
0x00000000059a32: add [rbp+0x3d], dh; add rsp, 0x38; ret; 
0x0000000014f9d0: add [rbp+0x3f], dh; add rsp, 0x10; pop rbx; ret; 
0x00000000143d30: add [rbp+0x40], dh; add rsp, 0x10; pop rbx; ret; 
0x0000000013762a: add [rbp+0x40], dh; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000011931e: add [rbp+0x411d75c0], al; mov ecx, 0x8; mov eax, 0x119; syscall; 
0x0000000010d6fa: add [rbp+0x413975c0], al; mov eax, 0x8; mov rdx, r12; mov eax, 0x10f; syscall; 
0x00000000042636: add [rbp+0x415d75c0], al; mov edx, 0x8; mov eax, 0x80; syscall; 
0x0000000009843e: add [rbp+0x41], bl; pop rsp; pop r13; jmp rax; 
0x0000000006158e: add [rbp+0x41], bl; pop rsp; pop r13; pop r14; ret; 
0x0000000005f00d: add [rbp+0x41], bl; pop rsp; pop r13; ret; 
0x00000000041eb9: add [rbp+0x41], bl; pop rsp; ret; 
0x0000000014ff00: add [rbp+0x41], dh; add rsp, 0x10; pop rbx; ret; 
0x00000000150f30: add [rbp+0x42], dh; add rsp, 0x10; pop rbx; ret; 
0x00000000041aef: add [rbp+0x42], dh; mov eax, r9d; add rsp, 0x148; ret; 
0x00000000123357: add [rbp+0x440f45c9], eax; ror dword ptr [rax-0x7d], 0x1; ret; 
0x00000000123402: add [rbp+0x440f45f6], eax; ret far; 
0x0000000010f48e: add [rbp+0x451d75c0], al; xor eax, eax; mov eax, 0x127; syscall; 
0x0000000010f54e: add [rbp+0x451d75c0], al; xor eax, eax; mov eax, 0x128; syscall; 
0x000000000de6ee: add [rbp+0x451d75c0], al; xor eax, eax; mov eax, 0xf7; syscall; 
0x0000000011a6ae: add [rbp+0x451d75c0], al; xor ecx, ecx; xor r8d, r8d; mov eax, 0x2c; syscall; 
0x0000000011a48e: add [rbp+0x451d75c0], al; xor ecx, ecx; xor r8d, r8d; mov eax, 0x2d; syscall; 
0x00000000150140: add [rbp+0x46], dh; add rsp, 0x10; pop rbx; ret; 
0x0000000010e34a: add [rbp+0x46], dh; add rsp, 0x68; ret; 
0x0000000010e3d9: add [rbp+0x47], dh; add rsp, 0x18; ret; 
0x0000000010e491: add [rbp+0x47], dh; add rsp, 0x58; ret; 
0x00000000159a1a: add [rbp+0x47], dh; add rsp, 0x68; ret; 
0x00000000145c0f: add [rbp+0x480c74d2], al; add esp, 0x8; pop rbx; pop rbp; ret; 
0x00000000041b8c: add [rbp+0x480f75c0], al; add esp, 0x8; ret; 
0x0000000011bbc6: add [rbp+0x481574db], al; movsxd ebx, ebx; mov [rip+0xc77ab], rbx; pop rbx; ret; 
0x0000000009087f: add [rbp+0x481674c0], al; mov eax, [rip+0x155e95]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000909a9: add [rbp+0x481a74c0], al; mov eax, [rip+0x155d9b]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000090979: add [rbp+0x481a74c0], al; mov eax, [rip+0x155dc3]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000090949: add [rbp+0x481a74c0], al; mov eax, [rip+0x155deb]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000090919: add [rbp+0x481a74c0], al; mov eax, [rip+0x155e13]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000908e9: add [rbp+0x481a74c0], al; mov eax, [rip+0x155e3b]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000908b9: add [rbp+0x481a74c0], al; mov eax, [rip+0x155e63]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000090849: add [rbp+0x481a74c0], al; mov eax, [rip+0x155ea3]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000090819: add [rbp+0x481a74c0], al; mov eax, [rip+0x155ecb]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000907e9: add [rbp+0x481a74c0], al; mov eax, [rip+0x155ef3]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000907b9: add [rbp+0x481a74c0], al; mov eax, [rip+0x155f1b]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000015a7d9: add [rbp+0x481a74c0], al; mov eax, [rip+0x8bf33]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000015a7a9: add [rbp+0x481a74c0], al; mov eax, [rip+0x8bf5b]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000015a779: add [rbp+0x481a74c0], al; mov eax, [rip+0x8bf83]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000015a749: add [rbp+0x481a74c0], al; mov eax, [rip+0x8bfab]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009b394: add [rbp+0x485774c0], al; add esp, 0x8; pop rbp; pop r12; ret; 
0x0000000014189d: add [rbp+0x486e74c0], al; mov eax, [rbx+0x20]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x000000001423d7: add [rbp+0x489374c0], al; mov eax, [rbp+0x8]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x000000001423b3: add [rbp+0x48b774c0], al; mov eax, [rbp+0x8]; mov rdi, rbp; mov qword ptr [rsp], 0x0; call qword ptr [rax+0x20]; 
0x00000000109fb4: add [rbp+0x49], dh; add rsp, 0x130; pop rbp; ret; 
0x0000000015001f: add [rbp+0x49], dh; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000010e52f: add [rbp+0x49], dh; add rsp, 0x58; ret; 
0x00000000110518: add [rbp+0x4a], dh; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000d0aca: add [rbp+0x4c1175c0], al; mov eax, eax; add rsp, 0x8; ret; 
0x00000000097937: add [rbp+0x4c], bl; mov eax, eax; pop r12; pop r13; ret; 
0x0000000009871e: add [rbp+0x4c], bl; mov esi, esp; pop r12; pop r13; jmp rax; 
0x0000000011b1d2: add [rbp+0x4e], dh; add rsp, 0x58; ret; 
0x0000000015a4db: add [rbp+0x51], dh; add rsp, 0x110; mov eax, r12d; pop r12; ret; 
0x00000000045a16: add [rbp+0x51], dh; add rsp, 0x18; ret; 
0x000000000db2fe: add [rbp+0x52], dh; add rsp, 0x38; ret; 
0x000000000fd490: add [rbp+0x53], dh; add rsp, 0x38; ret; 
0x00000000159c8a: add [rbp+0x54], dh; add rsp, 0x38; ret; 
0x00000000137af8: add [rbp+0x56], dh; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x00000000041464: add [rbp+0x5], dh; add rsp, 0x18; ret; 
0x000000000455f2: add [rbp+0x5], dh; add rsp, 0x28; ret; 
0x00000000107f74: add [rbp+0x5], dh; add rsp, 0x38; ret; 
0x0000000014f8d5: add [rbp+0x5], dh; add rsp, 0x48; ret; 
0x0000000014d644: add [rbp+0x5], dh; add rsp, 0x78; ret; 
0x0000000004fda7: add [rbp+0x5a], dh; add rsp, 0x38; pop rbx; pop rbp; ret; 
0x0000000010f8fe: add [rbp+0x5a], dh; add rsp, 0x38; ret; 
0x00000000159bb3: add [rbp+0x5e], dh; add rsp, 0x68; ret; 
0x0000000014fa99: add [rbp+0x5f], dh; add rsp, 0x10; pop rbp; ret; 
0x0000000004fcd9: add [rbp+0x5f], dh; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000cd16c: add [rbp+0x5f], dh; add rsp, 0xe0; mov eax, r8d; pop rbx; ret; 
0x000000001483b6: add [rbp+0x61], dh; add rsp, 0x28; pop rbx; pop rbp; ret; 
0x000000000dff3e: add [rbp+0x62], dh; add rsp, 0x38; ret; 
0x000000000bf80b: add [rbp+0x6348ff43], cl; ret far; 
0x000000000fa867: add [rbp+0x634c0158], cl; ret far; 
0x00000000107e7f: add [rbp+0x6], dh; add rsp, 0x10; pop rbp; ret; 
0x000000001518f9: add [rbp+0x6], dh; add rsp, 0x10; pop rbx; ret; 
0x000000000cc24c: add [rbp+0x6], dh; add rsp, 0x40; pop rbp; ret; 
0x0000000014babb: add [rbp+0x6c], dh; add rsp, 0x30; pop rbx; ret; 
0x0000000010df84: add [rbp+0x6d], dh; add rsp, 0xa0; pop rbx; ret; 
0x000000000dd29a: add [rbp+0x6f], dh; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000014b974: add [rbp+0x6f], dh; sub rsp, 0xffffffffffffff80; mov eax, r8d; pop rbp; ret; 
0x0000000014c152: add [rbp+0x71], dh; add rsp, 0x10; mov eax, r8d; pop r12; ret; 
0x0000000014b844: add [rbp+0x73], dh; add rsp, 0x10; pop r12; ret; 
0x0000000010e058: add [rbp+0x74], dh; add rsp, 0xa0; pop rbx; ret; 
0x0000000010fa53: add [rbp+0x75], dh; add rsp, 0x38; ret; 
0x0000000014c291: add [rbp+0x76], dh; add rsp, 0x28; pop rbx; pop r12; ret; 
0x0000000014208d: add [rbp+0x77], dh; add rsp, 0x28; pop rbx; pop rbp; ret; 
0x00000000091b3c: add [rbp+0x78], dh; add rsp, 0x98; ret; 
0x00000000055919: add [rbp+0x79], dh; leave; ret; 
0x0000000013f78c: add [rbp+0x7], dh; add rsp, 0x10; pop r12; ret; 
0x0000000004551e: add [rbp+0x7], dh; pop rbx; ret; 
0x000000000417a7: add [rbp+0x8], dh; add rsp, 0x148; ret; 
0x000000000d0315: add [rbp+0x8], dh; add rsp, 0x20; xor eax, eax; pop rbx; ret; 
0x0000000011603a: add [rbp+0x8], dh; add rsp, 0x418; ret; 
0x00000000041f41: add [rbp+0x8], dh; add rsp, 0x98; ret; 
0x00000000042944: add [rbp+0x8], dh; add rsp, 0xa8; ret; 
0x00000000050d44: add [rbp+0x8], dh; add rsp, 0xd8; ret; 
0x000000000e0b35: add [rbp+0x8], dh; mov eax, 0x40; ret; 
0x0000000015182a: add [rbp+0x8], dh; movzx eax, al; add rsp, 0x18; ret; 
0x0000000010a842: add [rbp+0x8], dh; movzx eax, al; add rsp, 0x58; ret; 
0x0000000018e977: add [rbp+0x9], cl; ret far; 
0x00000000060982: add [rbp+0x9], dh; add rsp, 0x1010; pop rbp; ret; 
0x000000001517b6: add [rbp+0x9], dh; add rsp, 0x90; pop rbx; ret; 
0x000000000d9ac2: add [rbp+0x9], dh; add rsp, 0xe0; pop rbx; ret; 
0x0000000015a278: add [rbp+0xa], dh; add rsp, 0x28; ret; 
0x00000000129277: add [rbp+0xb], dh; add rsp, 0x28; ret; 
0x0000000010ea7c: add [rbp+0xc], dh; add rsp, 0x18; ret; 
0x00000000040c21: add [rbp+0xc], dh; test eax, 0x7fffff; je short 0x0000000000040c30; ret; 
0x00000000112b4c: add [rbp+0xd], cl; add [rbx+0xb7f01f8], al; ret; 
0x00000000127b2c: add [rbp+0xd], dh; add rsp, 0xd8; ret; 
0x00000000060f26: add [rbp+0xe], dh; add rsp, 0x18; ret; 
0x000000000de824: add [rbp+0xe], dh; add rsp, 0x28; pop rbx; pop rbp; ret; 
0x0000000014c080: add [rbp+0xe], dh; add rsp, 0x38; pop rbx; pop rbp; ret; 
0x000000000d46e9: add [rbp+0xf], al; fiadd st, word ptr [r13+0x1]; ret; 
0x0000000003f2e3: add [rbp+0xf], al; mov dh, 0xd2; movsxd r10, [r11+r10*4]; add r10, r11; notrack jmp r10; 
0x000000000eb879: add [rbp+0xf], al; mov dh, 0xf6; movsxd rax, [rdx+r14*4]; add rax, rdx; notrack jmp rax; 
0x0000000005453f: add [rbp+0xf], cl; lodsd [rsi]; ret; 
0x0000000005442f: add [rbp+0xf], cl; movsd [rdi], [rsi]; ret; 
0x00000000041db3: add [rbp+0xf], dh; add rsp, 0x118; ret; 
0x0000000008fb96: add [rbp+0xf], dh; sub edx, [rax+0x18]; mov eax, [rdi+0x10]; sub eax, edx; ret; 
0x00000000040c28: add [rbp+rax-0x3d], dh; nop [rax]; and esi, 0x80000000; movd xmm0, esi; ret; 
0x0000000010e510: add [rbp+rbp-0x48], dh; add [rcx], eax; add [rax], al; syscall; 
0x000000000d26de: add [rbp+rcx*4+0x14], eax; ret; 
0x00000000163541: add [rbp+rcx*4+0x1d], cl; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160826: add [rbp+rcx*4+0x1d], cl; mov [0x499314634900056f], al; lea edx, [rbx+rdx]; notrack jmp rdx; 
0x00000000163691: add [rbp+rcx*4+0x1d], cl; test dword ptr [rdx+0x5], 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000772f6: add [rbp+rcx*4+0x2c], cl; test [rax], eax; add [rax], al; add [rax+0x29], cl; ret; 
0x000000000cce2d: add [rbp+rcx*4+0x44], cl; and al, 0x40; call qword ptr [rax+0x270]; 
0x0000000014ba69: add [rbp+rcx*4+0x4c], cl; and al, 0x14; call qword ptr [rax]; 
0x000000000b97ad: add [rbp+rcx*4+0x4c], cl; and al, 0x18; call r13; 
0x0000000014c23f: add [rbp+rcx*4+0x4c], cl; and al, 0x1c; call qword ptr [rax]; 
0x000000001420ea: add [rbp+rcx*4+0x4c], cl; and al, 0x20; call qword ptr [rax]; 
0x00000000141e37: add [rbp+rcx*4+0x4c], cl; and al, 0x2c; call qword ptr [rax]; 
0x000000000b99b3: add [rbp+rcx*4+0x4c], ecx; and al, 0x20; call rbx; 
0x00000000087133: add [rbp+rcx*4+0x4d], cl; rol byte ptr [rbp+0x31], 0xc0; mov rcx, r14; mov rdi, r15; call r12; 
0x000000000e9517: add [rbp+rcx*4+0x5a], cl; dec dword ptr [rcx+0x29]; ret; 
0x000000000296e1: add [rbp+rcx*4+0x7b], cl; jmp qword ptr [rbp+rax*2-0x75]; 
0x000000000b91e5: add [rbp+rcx*8+0x48], dh; lea eax, [rip+0xcc521]; and ch, 0x1; je short 0x00000000000b91b5; ret; 
0x0000000009d1d5: add [rbp+rcx*8+0x48], dh; lea eax, [rip+0xe1581]; and ch, 0x1; je short 0x000000000009d1a5; ret; 
0x000000000b91e4: add [rbp+rcx*8+0x48], sil; lea eax, [rip+0xcc521]; and ch, 0x1; je short 0x00000000000b91b5; ret; 
0x0000000009d1d4: add [rbp+rcx*8+0x48], sil; lea eax, [rip+0xe1581]; and ch, 0x1; je short 0x000000000009d1a5; ret; 
0x00000000137178: add [rbp+rcx-0x7b], esi; shl byte ptr [rbp+0x19], 0x44; mov eax, eax; ret; 
0x0000000010ba43: add [rbp+rcx], esi; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010ded0: add [rbp+rdi+0x3d], dh; add [rax+0xe740000], al; mov qword ptr [rdi], 0xffffffffffffffff; ret; 
0x0000000014fa42: add [rbp-0x10], esi; mov rax, [rdi+0x8]; jmp qword ptr [rax]; 
0x0000000009e193: add [rbp-0x16], esi; ret; 
0x0000000003f8c6: add [rbp-0x18], dl; ret; 
0x00000000053713: add [rbp-0x1e], esi; mov eax, 0x1; ret; 
0x000000000bf803: add [rbp-0x2571f025], al; add eax, [rax]; add [rbp+0x6348ff43], cl; ret far; 
0x00000000119943: add [rbp-0x2708fff4], edx; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000284c4: add [rbp-0x2c], dh; mov rdx, [rip+0x1ba99a]; cmp [rdx+0xd8], rax; jne short 0x000000000002849b; ret; 
0x0000000015080a: add [rbp-0x2d], esi; mov rax, [rbp+0x8]; mov rsi, rsp; mov rdi, rbp; call qword ptr [rax]; 
0x0000000015098a: add [rbp-0x2d], esi; mov rax, [rdi+0x8]; mov rsi, rsp; call qword ptr [rax]; 
0x00000000110ef9: add [rbp-0x2d], esi; mov rax, r8; ret; 
0x0000000009b92a: add [rbp-0x2d], esi; mov rdi, rsi; call rax; 
0x0000000005cb7f: add [rbp-0x2dce00b9], cl; div ecx; add r8d, eax; mov eax, r8d; ret; 
0x000000000284d4: add [rbp-0x3c], dh; ret; 
0x00000000096182: add [rbp-0x3d], ebx; nop [rax]; ret; 
0x00000000090c18: add [rbp-0x3dbaf040], al; ret; 
0x00000000029302: add [rbp-0x3f6af040], al; add rsp, 0x8; movzx eax, al; neg eax; ret; 
0x00000000145afc: add [rbp-0x3f6af040], al; add rsp, 0x8; movzx eax, al; ret; 
0x00000000060fa5: add [rbp-0x3f6af040], al; movzx eax, al; neg eax; pop rbp; ret; 
0x00000000041c3b: add [rbp-0x41e78a40], al; or [rax], al; add [rax], al; mov eax, 0x82; syscall; 
0x00000000108b7a: add [rbp-0x479e8a40], al; add [rcx], eax; add [rax], al; syscall; 
0x000000000dffcd: add [rbp-0x47d18a40], al; ja short 0x00000000000dffd5; add [rax], al; syscall; 
0x0000000010f97d: add [rbp-0x47d18a40], al; jb short 0x000000000010f985; add [rax], al; syscall; 
0x000000000db2dd: add [rbp-0x47d18a40], al; je short 0x00000000000db2e5; add [rax], al; syscall; 
0x000000000dff1d: add [rbp-0x47d18a40], al; jne short 0x00000000000dff25; add [rax], al; syscall; 
0x0000000010f8dd: add [rbp-0x47d18a40], al; jno short 0x000000000010f8e5; add [rax], al; syscall; 
0x000000000dfc4d: add [rbp-0x47d18a40], al; push 0x0; add [rax], al; syscall; 
0x00000000106c9e: add [rbp-0x47ea8a40], al; adc [rax], eax; add [rax], al; syscall; 
0x000000001195ce: add [rbp-0x47ea8a40], al; adc al, 0x1; add [rax], al; syscall; 
0x00000000106d4e: add [rbp-0x47ea8a40], al; adc al, [rax]; add [rax], al; syscall; 
0x0000000011972e: add [rbp-0x47ea8a40], al; adc eax, [rcx]; add [rax], al; syscall; 
0x0000000011ac6e: add [rbp-0x47ea8a40], al; and [rcx], al; add [rax], al; syscall; 
0x0000000011a80e: add [rbp-0x47ea8a40], al; sub al, 0x0; add [rax], al; syscall; 
0x0000000011ad1e: add [rbp-0x47ea8a40], al; sub eax, [rcx]; add [rax], al; syscall; 
0x0000000011adde: add [rbp-0x47ea8a40], al; xor eax, [rcx]; add [rax], al; syscall; 
0x0000000010f3eb: add [rbp-0x47ef8a40], al; adc al, 0x0; add [rax], al; syscall; 
0x0000000010f34b: add [rbp-0x47ef8a40], al; adc eax, [rax]; add [rax], al; syscall; 
0x00000000108d4b: add [rbp-0x47ef8a40], al; add [rax], eax; add [rax], al; syscall; 
0x000000001094eb: add [rbp-0x47ef8a40], al; add eax, [rax]; add [rax], al; syscall; 
0x000000000de84b: add [rbp-0x47ef8a40], al; and al, [rax]; add [rax], al; syscall; 
0x0000000011391b: add [rbp-0x47ef8a40], al; sbb al, [rax]; add [rax], al; syscall; 
0x0000000011a32b: add [rbp-0x47ef8a40], al; sub al, [rax]; add [rax], al; syscall; 
0x0000000011a25b: add [rbp-0x47ef8a40], al; sub eax, [rax]; add [rax], al; syscall; 
0x000000001197fb: add [rbp-0x47ef8a40], al; xor [rcx], al; add [rax], al; syscall; 
0x0000000018dfa2: add [rbp-0x73], cl; push rcx; dec byte ptr [rax-0x77]; ret far; 
0x0000000018cb26: add [rbp-0x76b23fb6], cl; ret far; 
0x00000000106a3c: add [rbp-0x76b7febd], cl; ret; 
0x00000000113649: add [rbp-0x76f98b01], al; cmp eax, 0xcfd04; ret; 
0x0000000003c084: add [rbp-0x77], al; dec dword ptr [rax-0x7d]; ret; 
0x0000000010f62c: add [rbp-0x77], al; ror dword ptr [rcx-0x77], 0xca; xor r8d, r8d; mov eax, 0x147; syscall; 
0x0000000010f78c: add [rbp-0x77], al; ror dword ptr [rcx-0x77], 0xca; xor r8d, r8d; mov eax, 0x148; syscall; 
0x00000000064c96: add [rbp-0x77], cl; dec byte ptr [rbx-0x5ff7b]; jmp qword ptr [rcx+rcx*4+0x2]; 
0x000000000debe8: add [rbp-0x77], cl; loop 0x00000000000dec35; lea esi, [rip+0xcf5ef]; mov eax, 0x142; syscall; 
0x000000000a6a4d: add [rbp-0x77], cl; ret far; 
0x000000000313bf: add [rbp-0x77], cl; ret; 
0x00000000139f1f: add [rbp-0x77], cl; ror byte ptr [rcx+rcx*4-0x30], 0x1; mov byte ptr [r8], 0x0; ret; 
0x0000000009a678: add [rbp-0x7acc812e], al; ror byte ptr [rdi], 0x84; ret; 
0x00000000074f9d: add [rbp-0x7b], al; fisttp dword ptr [rdi], st; test cl, al; or eax, 0x63490000; ret; 
0x0000000007aa15: add [rbp-0x7b], al; fisttp dword ptr [rdi], st; test cl, dl; or eax, 0x63490000; ret; 
0x000000000e5c03: add [rbp-0x7b], al; ror byte ptr [rdi], 0x85; ret; 
0x0000000011f660: add [rbp-0x7cc48a40], al; sub eax, 0xc86c0; add [rcx+rcx*4-0x40], eax; add rsp, 0x8; ret; 
0x000000001569b2: add [rbp-0x7cc68a40], al; sub eax, 0x92726; add [rcx+rcx*4-0x40], ecx; pop rbp; ret; 
0x0000000005f14d: add [rbp-0x7cc98a40], al; sub eax, 0x1874af; add [rcx+rcx*4-0x40], eax; pop rbx; ret; 
0x000000000da0a6: add [rbp-0x7cd28a40], al; imul eax, [rcx+rax], 0x5b; pop rbp; pop r12; ret; 
0x00000000140fa3: add [rbp-0x7e], esi; ret; 
0x000000000e6bdf: add [rbp-0x7fbf6088], cl; call far fword ptr [rax]; 
0x00000000113328: add [rbp-0x8f38b25], al; ret; 
0x00000000052487: add [rbp-0xa], dh; pop rbx; ret; 
0x0000000017e5ea: add [rbx+0x14840c0], al; clc; vzeroupper; ret; 
0x000000001799a9: add [rbx+0x148b8104], cl; xchg ecx, eax; sub eax, edx; ret; 
0x0000000009617b: add [rbx+0x14da1d2d], al; add [rcx], al; pop rbp; ret; 
0x0000000008feb5: add [rbx+0x1567b705], al; add [rcx], al; pop rbx; ret; 
0x000000001677c2: add [rbx+0x157890e], ecx; mov [rdi], ecx; ret; 
0x0000000008758f: add [rbx+0x1789cfe2], al; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000000808bd: add [rbx+0x17f01f8], al; ret; 
0x000000000f4b23: add [rbx+0x1be01ea], eax; add [rax], al; add [rcx+0x39], al; ret; 
0x00000000091138: add [rbx+0x27602fe], al; ret; 
0x0000000005fcc4: add [rbx+0x28907c8], al; mov eax, 0x1; ret; 
0x00000000151640: add [rbx+0x28], ebp; pop rbx; pop rbp; pop r12; ret; 
0x000000000d6a27: add [rbx+0x2b802fb], al; add [rax], al; add [rdi], cl; ret; 
0x000000000b726f: add [rbx+0x30178916], cl; in eax, dx; mov [rdi+0x4], ch; ret; 
0x0000000008d5a5: add [rbx+0x307f01f8], al; ret; 
0x00000000091076: add [rbx+0x3101084f], al; rol bl, 0x90; mov eax, 0x16; ret; 
0x000000000298e4: add [rbx+0x314500d0], al; shl byte ptr [rcx], 0xc9; xor edx, edx; push rax; call rbx; 
0x00000000136362: add [rbx+0x31], bl; rcr byte ptr [rbp+0x41], 0x5c; pop r13; pop r14; ret; 
0x0000000008c66f: add [rbx+0x31], bl; rcr byte ptr [rbp+0x41], 0x5c; ret; 
0x0000000002ac35: add [rbx+0x31], ebx; rcr byte ptr [rbp+0x41], 0x5c; pop r13; pop r14; ret; 
0x000000000b47fe: add [rbx+0x3568b0e], cl; mov [rdi], ecx; mov [rdi+0x3], edx; lea rax, [rdi+0x6]; ret; 
0x000000000b564e: add [rbx+0x3568b0e], cl; mov [rdi], ecx; mov [rdi+0x3], edx; lea rax, [rdi+0x7]; ret; 
0x000000000b31af: add [rbx+0x3568b0e], cl; mov [rdi], ecx; mov [rdi+0x3], edx; ret; 
0x000000001354ef: add [rbx+0x3b83b], cl; add [rax], al; syscall; 
0x0000000010ab5f: add [rbx+0x41], bl; pop rsp; pop r13; pop r14; ret; 
0x00000000087f0f: add [rbx+0x445b012f], al; mov eax, eax; pop rbp; pop r12; ret; 
0x00000000044c7a: add [rbx+0x44], ebx; mov eax, eax; pop rbp; pop r12; ret; 
0x000000000b561f: add [rbx+0x4568a0e], cl; mov [rdi], ecx; mov [rdi+0x4], dl; lea rax, [rdi+0x5]; ret; 
0x000000000b3e7f: add [rbx+0x4568a0e], cl; mov [rdi], ecx; mov [rdi+0x4], dl; ret; 
0x000000000caf4f: add [rbx+0x463b0447], cl; add al, 0xf; test [rcx+rax], esi; add [rax], al; ret; 
0x000000000caf7f: add [rbx+0x463b0c47], cl; or al, 0xf; test [rcx+rax], eax; add [rax], al; ret; 
0x0000000018c58f: add [rbx+0x463bfc47], cl; cld; jne 0x000000000018c680; ret; 
0x00000000108436: add [rbx+0x47426f8], al; mov eax, r9d; ret; 
0x000000000b47cf: add [rbx+0x477880e], cl; mov [rdi], ecx; lea rax, [rdi+0x4]; ret; 
0x000000000b318f: add [rbx+0x477880e], cl; mov [rdi], ecx; ret; 
0x0000000017459e: add [rbx+0x48028901], cl; lea eax, [rdx+0x3]; ret; 
0x0000000017794f: add [rbx+0x48028901], cl; mov eax, edi; ret; 
0x00000000131900: add [rbx+0x4804c244], cl; add esp, 0x8; pop rbx; pop rbp; ret; 
0x00000000041c8d: add [rbx+0x48082444], cl; add esp, 0x18; ret; 
0x00000000028c9f: add [rbx+0x480c247c], cl; mov esi, [rsp]; mov rdx, [rax]; mov rax, [rsp+0x10]; call rax; 
0x00000000149628: add [rbx+0x48102444], cl; lea edx, [rip+0x6424c]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000001846bf: add [rbx+0x48178916], cl; lea eax, [rdi+0x3]; vzeroupper; ret; 
0x000000000b560e: add [rbx+0x48178916], cl; lea eax, [rdi+0x4]; ret; 
0x000000000b84aa: add [rbx+0x48], bl; cmove eax, edx; ret; 
0x0000000013735a: add [rbx+0x48], bl; movsxd edx, eax; add r10, rdx; mov [r9], r10; ret; 
0x000000000b3a0f: add [rbx+0x49178916], cl; sub eax, 0x4; lea rdi, [rdi+0x4]; jne 0x00000000000b4270; ret; 
0x00000000097033: add [rbx+0x4c], bl; mov eax, eax; pop rbp; pop r12; ret; 
0x0000000016211e: add [rbx+0x4e8bf956], cl; cld; mov [rdi-0x7], edx; mov [rdi-0x4], ecx; ret; 
0x00000000161f1e: add [rbx+0x4e8bfa56], cl; cld; mov [rdi-0x6], edx; mov [rdi-0x4], ecx; ret; 
0x00000000161d1e: add [rbx+0x4e8bfb56], cl; cld; mov [rdi-0x5], edx; mov [rdi-0x4], ecx; ret; 
0x00000000189210: add [rbx+0x4f3bfc4e], cl; cld; jne 0x0000000000189446; xor eax, eax; ret; 
0x0000000016710e: add [rbx+0x5789fc56], cl; cld; ret; 
0x000000000e8282: add [rbx+0x5b010447], al; pop rbp; pop r12; ret; 
0x00000000087f35: add [rbx+0x5d], bl; mov eax, r8d; pop r12; ret; 
0x000000000552e7: add [rbx+0x5d], bl; pop r12; pop r13; pop r14; ret; 
0x000000000427cc: add [rbx+0x5d], bl; pop r12; pop r13; ret; 
0x00000000034b00: add [rbx+0x5d], bl; pop r12; ret; 
0x0000000007fc3e: add [rbx+0x5d], bl; ret; 
0x000000000da0ae: add [rbx+0x5d], ebx; pop r12; ret; 
0x000000000ea7d8: add [rbx+0x634801ea], eax; ret; 
0x00000000140f09: add [rbx+0x634807e6], al; add al, 0xb1; shr rdx, 0x3; add rax, rcx; notrack jmp rax; 
0x000000000fa323: add [rbx+0x634c01c3], al; ret; 
0x000000000b3889: add [rbx+0x63], cl; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000090da6: add [rbx+0x64], bl; mov eax, [rax]; ret; 
0x000000000992a3: add [rbx+0x73], dh; lea rax, [rax-0x8]; ret; 
0x0000000015034f: add [rbx+0x748d4802], cl; and al, 0x10; mov [rsp+0x10], rax; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x000000001504ef: add [rbx+0x748d4806], cl; and al, 0x10; mov [rsp+0x10], rax; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x0000000004493a: add [rbx+0x75c08500], cl; psubsw mm3, [rdx]; idiv edi; jmp qword ptr [rsi+0x2e]; 
0x00000000107c48: add [rbx+0x87702fe], al; mov [rdi+0x10c], esi; xor eax, eax; ret; 
0x0000000014a84f: add [rbx+0x88b3], cl; add [rcx+rcx*4-0x1], cl; call qword ptr [rax+0x28]; 
0x00000000115645: add [rbx+0x94901e0], eax; ret; 
0x00000000132898: add [rbx+0xb5cd82d], al; add [rcx], al; mov eax, r8d; pop rbp; ret; 
0x00000000112b4f: add [rbx+0xb7f01f8], al; ret; 
0x0000000011bdeb: add [rbx+0xc], dh; mov rdx, [rip+0xcbc83]; add word ptr [rdx+rax*2], 0x1; ret; 
0x00000000137175: add [rbx+0xd7401f8], al; test eax, eax; jne short 0x0000000000137198; mov eax, r8d; ret; 
0x000000001677bf: add [rbx+0xe8b0156], cl; mov [rdi+0x1], edx; mov [rdi], ecx; ret; 
0x0000000016774f: add [rbx+0xe8b0256], cl; mov [rdi+0x2], edx; mov [rdi], ecx; ret; 
0x000000001676df: add [rbx+0xe8b0356], cl; mov [rdi+0x3], edx; mov [rdi], ecx; ret; 
0x000000000fd09a: add [rbx+0xea4e70d], cl; add [rcx+0x5b595a0a], cl; ret; 
0x000000000f374f: add [rbx+0xf4801e2], al; ret; 
0x00000000147f96: add [rbx+rax*4+0x38], ah; add al, 0x75; ret; 
0x000000000e0c46: add [rbx+rax*4+0x38], ah; sete al; movzx eax, al; lea rax, [rax+rax-0x1]; ret; 
0x0000000018944a: add [rbx+rax-0x9], bh; fadd st, st(3); ret; 
0x00000000149f65: add [rbx+rbp*4+0x48], esi; mov eax, [rsp+0x10]; mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x18]; 
0x000000001198b4: add [rbx+rcx*4+0x2], ah; cmp eax, 0x26; je short 0x00000000001198f4; mov eax, r8d; ret; 
0x0000000019150b: add [rbx+rcx*4+0x34], cl; fmul st, dword ptr [rax+0x63]; ret; 
0x0000000012bd5f: add [rbx+rcx*4+0x35], cl; ret; 
0x000000000f8793: add [rbx+rcx*4+0x40], cl; adc [rbp-0x7b], cl; shl byte ptr [rcx+rcx+0x4c], 0x39; ret; 
0x000000000c6fe8: add [rbx+rcx*4+0x4c], cl; and al, 0x10; call r13; 
0x0000000002ed7c: add [rbx+rcx*4+0x4c], cl; and al, 0x40; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; call r14; 
0x000000000fc455: add [rbx+rcx*4+0x63], cl; and [rax-0x7d], cl; ret; 
0x000000000440af: add [rbx+rcx*4+0x63], cl; or [rax-0x7d], cl; ret; 
0x0000000006ee9c: add [rbx+rcx*4-0x63], al; mov al, [0xd4e9c58941fffffa]; ret far; 
0x0000000006ef07: add [rbx+rcx*4-0x63], al; mov al, [0xfffad085c7fffffa]; jmp qword ptr [rbp]; 
0x0000000005141a: add [rbx+rcx*4-0x6c], cl; and al, 0x98; add [rax], al; add [rcx+0x1], cl; ret; 
0x00000000108433: add [rbx+rcx*4], ah; cmp eax, 0x26; je short 0x0000000000108440; mov eax, r9d; ret; 
0x000000000464b6: add [rbx+rcx*4], ah; cmp eax, 0x4; je short 0x0000000000046480; mov eax, 0xffffffff; ret; 
0x000000000f977a: add [rbx+rcx*4], cl; mov [rax], rdi; mov rax, r8; ret; 
0x00000000155f87: add [rbx+rdi+0x3c], cl; and al, 0x72; mov [0xffff4fe924048b49], al; jmp qword ptr [rsi+0xf]; 
0x000000000d0869: add [rbx-0x13f7b], cl; jmp far fword ptr [rbx]; 
0x000000000ea7d5: add [rbx-0x157cfe15], al; add [rax+0x63], ecx; ret; 
0x0000000014f9ff: add [rbx-0x1976b7fa], cl; mov [rsp], rax; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x00000000127e85: add [rbx-0x1d7effab], cl; add [rax-0x7bf10000], al; ret; 
0x00000000150807: add [rbx-0x2c8afe08], al; mov rax, [rbp+0x8]; mov rsi, rsp; mov rdi, rbp; call qword ptr [rax]; 
0x00000000150987: add [rbx-0x2c8afe08], al; mov rax, [rdi+0x8]; mov rsi, rsp; call qword ptr [rax]; 
0x00000000149d27: add [rbx-0x37f0a7b9], cl; mov eax, eax; mov [r8], rax; mov eax, 0x1; ret; 
0x00000000149cff: add [rbx-0x37f0b7b9], cl; mov eax, eax; mov [r8], rax; mov eax, 0x1; ret; 
0x0000000014a646: add [rbx-0x37f0efc0], cl; mov eax, eax; mov [r8], rax; mov eax, 0x1; ret; 
0x0000000014a67e: add [rbx-0x37f0f3c0], cl; mov eax, eax; mov [r8], rax; mov eax, 0x1; ret; 
0x00000000149d12: add [rbx-0x37f0fe18], al; mov [rdi+0x48], eax; mov eax, 0x1; ret; 
0x0000000014a629: add [rbx-0x37f0fe18], al; mov [rdx], eax; mov eax, 0x1; ret; 
0x00000000111c6d: add [rbx-0x387c0f19], al; mov fs:[rax], edi; mov eax, 0xffffffff; ret; 
0x00000000141206: add [rbx-0x389bdff5], al; add [rip-0x48000000], bl; sbb eax, 0x5b000000; ret; 
0x00000000090bc5: add [rbx-0x39], bl; add eax, 0x155aef; add [rax], eax; add [rax], al; ret; 
0x0000000008420f: add [rbx-0x3b7cb7fe], cl; or [rbx+0x5d], bl; ret; 
0x000000000b857e: add [rbx-0x3d], bl; mov eax, 0x10; pop rbx; ret; 
0x000000000b8577: add [rbx-0x3d], bl; mov eax, 0x20; pop rbx; ret; 
0x000000000b8570: add [rbx-0x3d], bl; mov eax, 0x30; pop rbx; ret; 
0x000000000b8569: add [rbx-0x3d], bl; mov eax, 0x40; pop rbx; ret; 
0x000000000b858c: add [rbx-0x3d], bl; mov eax, 0x80; pop rbx; ret; 
0x000000000b8585: add [rbx-0x3d], bl; mov eax, 0x8; pop rbx; ret; 
0x0000000011471b: add [rbx-0x3d], bl; xchg ax, ax; mov rax, [rip+0xce721]; mov dword ptr fs:[rax], 0x16; ret; 
0x000000000464b9: add [rbx-0x3e8bfb08], al; mov eax, 0xffffffff; ret; 
0x00000000116e0f: add [rbx-0x3f7ac7c0], cl; cmove eax, edx; ret; 
0x00000000142ecf: add [rbx-0x3f7acfb9], cl; jne short 0x0000000000142f20; mov dword ptr [rsi], 0x0; ret; 
0x0000000013bf3a: add [rbx-0x3f7ae7c0], cl; jne short 0x000000000013bf48; ret; 
0x0000000007335e: add [rbx-0x427ffe16], al; idiv edi; jmp qword ptr [rax]; 
0x0000000013a31c: add [rbx-0x49f0fe0d], al; ret; 
0x00000000071406: add [rbx-0x51f43], cl; jmp qword ptr [rcx+rcx*4+0x38]; 
0x0000000006e6dd: add [rbx-0x51f4b], cl; jmp qword ptr [rcx+rcx*4+0x30]; 
0x00000000064ced: add [rbx-0x5a76b], cl; inc dword ptr [rbx-0x78f0d006]; ret far; 
0x000000000643a5: add [rbx-0x5ff7b], cl; jmp qword ptr [rcx+rcx*4+0x2]; 
0x00000000068959: add [rbx-0x6577b], ecx; dec dword ptr [rax-0x7d]; ret; 
0x000000000e7e3f: add [rbx-0x688bfb1f], al; mov byte ptr [rdi+0x8], 0x1e; mov eax, 0x2; ret; 
0x0000000009b4eb: add [rbx-0x691217c8], cl; cli; jmp qword ptr [rsi+0x66]; 
0x000000001122f3: add [rbx-0x6af00008], al; ror byte ptr [rax-0x7d], 0xc4; or [rdi], cl; mov dh, 0xc0; ret; 
0x000000001036ef: add [rbx-0x6af0fd05], al; ret; 
0x0000000010368d: add [rbx-0x6af0fe05], al; ret; 
0x000000000ceb27: add [rbx-0x71f0fe08], al; ret; 
0x0000000009c1af: add [rbx-0x72b7bf1e], al; add eax, 0x115b6; lea rdx, [rip+0xee42f]; cmovne rax, rdx; ret; 
0x0000000004557c: add [rbx-0x75], bl; pop rax; ret; 
0x000000001745af: add [rbx-0x75fd76ff], cl; add al, 0x88; add al, 0x48; lea eax, [rdx+0x4]; ret; 
0x0000000017026f: add [rbx-0x75fd76ff], cl; add al, 0x88; add al, 0x48; mov eax, edi; ret; 
0x0000000014a606: add [rbx-0x7637f100], cl; ror byte ptr [rcx-0x77], 0x0; mov eax, 0x1; ret; 
0x000000000c5fa7: add [rbx-0x76b30383], cl; out 0x89, al; ret; 
0x00000000136fc0: add [rbx-0x77bffe12], al; ja short 0x0000000000136fc9; ret; 
0x0000000007d6de: add [rbx-0x77cdf18], al; sub [rdi+0x10], esi; movsxd rax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x0000000007259d: add [rbx-0x78f0f807], al; add rax, 0x63480000; or al, 0x8a; add rcx, rdx; notrack jmp rcx; 
0x00000000077de5: add [rbx-0x78f0f807], al; rol dword ptr [rip+0x63480000], 0xc; mov cl, [rax+0x1]; sar dword ptr [rsi], 0x1; jmp rcx; 
0x000000000e4a60: add [rbx-0x7ae3db8c], cl; test byte ptr [rdi], 0x85; ret; 
0x00000000028e68: add [rbx-0x7bf00008], al; out 0x0, al; add [rax], al; add rsp, 0x98; ret; 
0x0000000003db82: add [rbx-0x7bf0fc08], al; pushfq; add [rax], al; add [rbx-0x7bf0fe08], al; ret far; 
0x0000000003e912: add [rbx-0x7bf0fc08], al; xchg esp, eax; add [rax], al; add [rbx-0x7bf0fe08], al; ret; 
0x0000000003db8b: add [rbx-0x7bf0fe08], al; ret far; 
0x0000000003e91b: add [rbx-0x7bf0fe08], al; ret; 
0x00000000156f6f: add [rbx-0x7c99fa17], al; stc; add esi, [rsi+0x7]; ret; 
0x000000001261ef: add [rbx-0x7cb7e7ad], cl; ret; 
0x0000000013c219: add [rbx-0x7cb7efab], cl; ret; 
0x0000000013c0e7: add [rbx-0x7cb7efbb], cl; ret; 
0x000000000e41e7: add [rbx-0x7cb7f7ad], cl; ret; 
0x000000000ba76f: add [rbx-0x7cb7fb85], cl; ret; 
0x000000000b8eff: add [rbx-0x7cb7fb8d], cl; ret; 
0x0000000005edae: add [rbx-0x7cb7fbbd], cl; ret; 
0x00000000182b63: add [rbx-0x7cf0fb06], al; ret; 
0x00000000147a56: add [rbx-0x7e17ff83], cl; sbb bh, ah; jmp qword ptr [rsi-0x7d]; 
0x0000000002b8d5: add [rbx-0x834b], cl; jmp qword ptr [rcx+rcx*4+0x30]; 
0x0000000003a90b: add [rbx-0xd373], cl; jmp qword ptr [rcx+rcx*4+0x8]; 
0x000000000545da: add [rbx-0xd], esi; mov rax, rdx; ret; 
0x000000001110fc: add [rbx-0xf], dl; dec dword ptr [rax+0x1]; ret; 
0x000000000d714e: add [rbx-0xff43], cl; dec dword ptr [rdi]; ret; 
0x00000000111deb: add [rbx], ah; mov rax, r8; mov byte ptr [rsi-0x1], 0x0; ret; 
0x000000001874dd: add [rbx], al; add [rcx+0x63], cl; or al, 0x93; add rcx, r11; notrack jmp rcx; 
0x0000000008fba7: add [rbx], ch; push rax; adc [rbx-0x2fd6efb9], cl; ret; 
0x000000000cc03c: add [rbx], cl; add [rax], al; mov rax, r12; pop r12; ret; 
0x000000000cc139: add [rbx], cl; add [rax], al; xor eax, eax; add rsp, 0x8; ret; 
0x00000000187448: add [rbx], eax; add [rcx+0x63], cl; or al, 0x93; add rcx, r11; notrack jmp rcx; 
0x00000000035565: add [rbx], ebx; add [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x000000000e7d8f: add [rbx], edi; jl short 0x00000000000e7e00; mov byte ptr [rdi+0x8], 0x1; mov eax, 0x1; ret; 
0x0000000011d3bf: add [rcx+0x104e23c1], cl; lea rcx, [rsi+rcx*4]; add eax, [rcx+rdx]; ret; 
0x0000000011d1cf: add [rcx+0x107223c6], cl; lea rdx, [rdx+rsi*4]; add eax, [rdx+rcx]; ret; 
0x000000000a4c93: add [rcx+0x146348c2], cl; xchg ecx, eax; add rdx, rcx; notrack jmp rdx; 
0x00000000053288: add [rcx+0x146348c2], cl; xchg edi, eax; add rdx, rdi; cmp esi, 0x2f; notrack jmp rdx; 
0x000000000d67d3: add [rcx+0x146348c6], cl; mov bh, 0x48; add edx, edi; notrack jmp rdx; 
0x000000000a4d66: add [rcx+0x146348d2], cl; xchg edi, eax; add rdx, rdi; notrack jmp rdx; 
0x0000000003efff: add [rcx+0x146348d2], cl; xchg esi, eax; add rdx, rsi; notrack jmp rdx; 
0x00000000142f2b: add [rcx+0x146349c1], cl; mov [rcx+rax-0x3e], cl; notrack jmp rdx; 
0x000000000a4e23: add [rcx+0x146349c2], cl; nop; add rdx, r8; notrack jmp rdx; 
0x00000000149c94: add [rcx+0x1847c7f0], cl; add [rax], eax; add [rax], al; movups [rdi+0x8], xmm0; ret; 
0x00000000129876: add [rcx+0x18e8c1f8], cl; ret; 
0x00000000076248: add [rcx+0x1], bh; jmp rsi; 
0x00000000051422: add [rcx+0x1], cl; ret; 
0x000000000425ef: add [rcx+0x1a0bb615], ecx; add bl, al; nop [rax+rax]; mov eax, 0xffffffff; ret; 
0x00000000146f32: add [rcx+0x1b802], cl; add [rax], al; ret; 
0x000000000d0259: add [rcx+0x1eb850c7], al; add eax, 0xcac1fa89; add al, [rcx-0x70a3d706]; add dh, [rsi+0x3]; ret; 
0x000000000c5f4f: add [rcx+0x295d5bd8], cl; rol byte ptr [rcx+0x5c], 0x1; pop r13; pop r14; ret; 
0x000000000d2630: add [rcx+0x29], al; ret; 
0x000000000ce821: add [rcx+0x29], cl; fmul st, dword ptr [rbp+0x1]; ret; 
0x000000000ce5af: add [rcx+0x29], cl; fmul st, dword ptr [rcx+0x118b4f05]; add [rbp+0x1], cl; ret; 
0x000000001788a5: add [rcx+0x29], cl; ret far; 
0x000000000ccb0b: add [rcx+0x29], cl; ror byte ptr [rbp+0x1], 0xc7; mov [rsp+0x88], r15; call r12; 
0x0000000008603f: add [rcx+0x2b], cl; adc [r8+0x1], r9b; ret; 
0x000000001745e1: add [rcx+0x3418b02], ecx; mov [rdx+0x3], eax; lea rax, [rdx+0x6]; ret; 
0x000000000afd56: add [rcx+0x3418b02], ecx; mov [rdx+0x3], eax; mov rax, rdi; ret; 
0x0000000017225f: add [rcx+0x3518911], cl; ret; 
0x000000000f4b2b: add [rcx+0x39], al; ret; 
0x000000000ae1bf: add [rcx+0x39], cl; ret; 
0x000000000599c1: add [rcx+0x39], ecx; ret far; 
0x000000000599c0: add [rcx+0x39], rcx; ret far; 
0x0000000015a822: add [rcx+0x3eb8c7], cl; add [rax], al; syscall; 
0x00000000156e76: add [rcx+0x415d5bd8], cl; pop rsp; pop r13; pop r14; ret; 
0x000000001745c1: add [rcx+0x418b6602], ecx; add al, 0x66; mov [rdx+0x4], eax; lea rax, [rdx+0x5]; ret; 
0x000000000afd36: add [rcx+0x418b6602], ecx; add al, 0x66; mov [rdx+0x4], eax; mov rax, rdi; ret; 
0x00000000126c44: add [rcx+0x433b1043], ecx; adc al, 0x74; adc [rbx+0x31], ebx; rol byte ptr [rcx+0x5c], 0x5d; ret; 
0x000000001745b1: add [rcx+0x4418a02], ecx; mov [rdx+0x4], al; lea rax, [rdx+0x4]; ret; 
0x000000000afd16: add [rcx+0x4418a02], ecx; mov [rdx+0x4], al; mov rax, rdi; ret; 
0x000000000d6725: add [rcx+0x46348ca], cl; xchg esi, eax; add rax, rsi; notrack jmp rax; 
0x00000000149c76: add [rcx+0x46348f2], cl; xchg ecx, eax; add rax, rcx; notrack jmp rax; 
0x000000000e04f0: add [rcx+0x46348f6], cl; mov dl, 0x48; add eax, edx; notrack jmp rax; 
0x000000000fbb7f: add [rcx+0x46348ff], cl; mov edx, 0x3ed00148; jmp rax; 
0x0000000004188e: add [rcx+0x48050fc8], cl; mov edi, eax; mov eax, 0xba; syscall; 
0x000000000b418f: add [rcx+0x57896617], cl; add al, 0xc3; nop [rax+rax]; mov [rdi-0x1], rdx; ret; 
0x000000000fd0a0: add [rcx+0x5b595a0a], cl; ret; 
0x000000000391b5: add [rcx+0x5c], al; pop r13; pop r14; pop r15; jmp rax; 
0x000000001140d8: add [rcx+0x5c], al; pop r13; ret; 
0x00000000126c63: add [rcx+0x5c], al; pop rbp; ret; 
0x000000000d925b: add [rcx+0x5d], al; pop r14; jmp rax; 
0x0000000011409f: add [rcx+0x5d], bl; pop r12; pop r13; ret; 
0x0000000015fa6e: add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000187010: add [rcx+0x63], cl; or al, 0x93; add rcx, r11; notrack jmp rcx; 
0x000000000b3008: add [rcx+0x63], cl; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000018dbab: add [rcx+0x63], cl; or al, 0x99; add rcx, r9; notrack jmp rcx; 
0x00000000074fa6: add [rcx+0x63], cl; ret; 
0x0000000010774c: add [rcx+0x63], ecx; add al, 0x84; add rax, r12; notrack jmp rax; 
0x000000000f9d78: add [rcx+0x6c0f66d0], cl; ret; 
0x0000000010fa26: add [rcx+0x75c085fe], cl; xor edi, [rdx-0x1]; mov edi, 0xffffffff; mov eax, 0x75; syscall; 
0x0000000010faf6: add [rcx+0x75c085fe], cl; xor edi, [rdx-0x1]; mov edi, 0xffffffff; mov eax, 0x77; syscall; 
0x000000000c5ec6: add [rcx+0x75db85c2], cl; fisttp dword ptr [rcx+0x295d5bd8], st; rol byte ptr [rcx+0x5c], 0x1; ret; 
0x0000000010de6d: add [rcx+0x9], cl; enter 0x774, 0x31; ror byte ptr [rax+0x39], 0xca; je short 0x000000000010de80; ret; 
0x00000000115648: add [rcx+0x9], ecx; ret; 
0x0000000010747b: add [rcx+0xe82484], cl; add [rax], al; mov eax, 0xe; syscall; 
0x0000000014a5c9: add [rcx+0xf], al; adc [rax], ebx; ret; 
0x00000000149cb1: add [rcx+0xf], al; adc [rax], ecx; ret; 
0x00000000149cc9: add [rcx+0xf], al; adc [rax], edx; ret; 
0x0000000014a5a9: add [rcx+0xf], al; adc [rax], esp; ret; 
0x000000000e710f: add [rcx+0xf], al; mov dh, 0x43; add cl, [rcx-0x7d]; ret; 
0x000000000781f1: add [rcx+0xf], al; mov dh, 0x46; or al, 0x83; ret; 
0x000000000d421c: add [rcx+0xf], al; mov dh, 0xd2; movsxd rdx, [rdi+rdx*4]; add rdx, rdi; notrack jmp rdx; 
0x000000000d4296: add [rcx+0xf], al; mov dh, 0xd2; movsxd rdx, [rsi+rdx*4]; add rdx, rsi; notrack jmp rdx; 
0x000000000b8664: add [rcx+0xf], eax; xchg esp, eax; ret; 
0x00000000151a09: add [rcx+0xf], eax; xchg esp, eax; ror byte ptr [rax-0x7d], 0xc4; or [rcx+rcx*4-0x40], al; ret; 
0x00000000107b2e: add [rcx+0xf], ecx; ret; 
0x000000000d5608: add [rcx+0xf], ecx; scasd [rdi]; ret; 
0x000000000db3c6: add [rcx+rax*2-0x77], esp; sbb [rcx+rcx*4-0x40], ecx; pop rbx; ret; 
0x000000000f50bc: add [rcx+rax-0x16], cl; notrack jmp rdx; 
0x0000000011b34c: add [rcx+rax-0x3d], dh; mov rax, [rdi]; mov [rdx], rax; mov eax, 0x1; ret; 
0x00000000127b73: add [rcx+rbp*8], al; sahf; cmc; call qword ptr [rax-0x18]; 
0x00000000127b72: add [rcx+rbp*8], r8b; sahf; cmc; call qword ptr [rax-0x18]; 
0x00000000101a2a: add [rcx+rbx*2+0x5b], dh; xor eax, eax; pop rbp; pop r12; ret; 
0x000000000453cf: add [rcx+rcx*2-0x75], ah; add al, 0x24; lock add qword ptr [rax+0x460], 0x1; lea rdi, [rbp+0x988]; call qword ptr [rbp+0xf90]; 
0x00000000094c7f: add [rcx+rcx*4+0x44], cl; and al, 0x20; mov [rsp+0x18], rsi; mov [rsp+0x10], r11; call rax; 
0x00000000094d78: add [rcx+rcx*4+0x44], cl; and al, 0x8; xor edi, edi; call qword ptr [rax]; 
0x000000000a4ce6: add [rcx+rcx*4+0x7], al; add rax, rdi; ret; 
0x0000000014e73c: add [rcx+rcx*4-0x11], cl; call qword ptr [rax+0x28]; 
0x000000000452bb: add [rcx+rcx*4-0x11], cl; mov eax, 0xca; syscall; 
0x0000000009aeca: add [rcx+rcx*4-0x11], cl; mov rdx, rbp; mov rsi, r12; call rax; 
0x000000000cc900: add [rcx+rcx*4-0x12], cl; call r12; 
0x00000000080741: add [rcx+rcx*4-0x12], cl; mov edi, 0x1; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000011b638: add [rcx+rcx*4-0x12], cl; mov edi, r12d; mov [rbp-0x830], rax; mov eax, ebx; syscall; 
0x00000000080534: add [rcx+rcx*4-0x12], cl; mov rdi, r15; call qword ptr [r14+0x38]; 
0x0000000008b877: add [rcx+rcx*4-0x12], cl; mov rdi, rbx; call qword ptr [rbp+0x70]; 
0x0000000008b07d: add [rcx+rcx*4-0x16], al; mov rsi, r12; mov rdi, rbp; call qword ptr [r15+0x80]; 
0x000000000b9d36: add [rcx+rcx*4-0x16], cl; mov r9, [rsp+0x10]; mov rdi, rbp; mov rsi, [rsp+0x18]; call rbx; 
0x0000000009a370: add [rcx+rcx*4-0x16], cl; mov rdi, r12; call rax; 
0x0000000007644e: add [rcx+rcx*4-0x16], cl; mov rsi, r14; mov rdi, rbp; call qword ptr [r12+0x38]; 
0x0000000008b6b5: add [rcx+rcx*4-0x16], cl; mov rsi, r14; mov rdi, rbp; call qword ptr [rax+0x40]; 
0x0000000007523e: add [rcx+rcx*4-0x16], cl; mov rsi, r14; mov rdi, rbp; call qword ptr [rbx+0x38]; 
0x00000000074c83: add [rcx+rcx*4-0x16], cl; mov rsi, r14; mov rdi, rbp; call qword ptr [rcx+0x38]; 
0x000000000b9be4: add [rcx+rcx*4-0x16], cl; xor r8d, r8d; mov rdi, rbp; lea r9, [rsp+0x30]; call rbx; 
0x00000000081138: add [rcx+rcx*4-0x17], al; mov edx, r12d; mov rsi, rbp; mov rdi, rbx; call qword ptr [r14+0x48]; 
0x0000000013302f: add [rcx+rcx*4-0x17], cl; mov edx, 0x400; mov rsi, r15; mov rdi, r12; call rbp; 
0x000000001437c1: add [rcx+rcx*4-0x19], cl; call qword ptr [rax+0x20]; 
0x000000001437a5: add [rcx+rcx*4-0x19], cl; call qword ptr [rax+0x28]; 
0x00000000143998: add [rcx+rcx*4-0x19], cl; call qword ptr [rbx]; 
0x00000000132f9b: add [rcx+rcx*4-0x19], cl; call rbp; 
0x0000000013328b: add [rcx+rcx*4-0x19], cl; call rbx; 
0x00000000044cc2: add [rcx+rcx*4-0x19], cl; mov eax, 0xca; syscall; 
0x0000000009387f: add [rcx+rcx*4-0x19], cl; neg rdi; call qword ptr [r13]; 
0x00000000039f4a: add [rcx+rcx*4-0x19], cl; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000014a86a: add [rcx+rcx*4-0x1], cl; add dword ptr [rax], 0x1; mov rax, [rbx+0x60]; call qword ptr [rax+0x8]; 
0x00000000028d52: add [rcx+rcx*4-0x1], cl; add rcx, 0xa08; cmp [rsp+0x18], rcx; cmovne rdi, r14; call rdx; 
0x00000000085e1f: add [rcx+rcx*4-0x1], cl; call qword ptr [r13+0x80]; 
0x0000000008439e: add [rcx+rcx*4-0x1], cl; call qword ptr [rax+0x20]; 
0x0000000014a855: add [rcx+rcx*4-0x1], cl; call qword ptr [rax+0x28]; 
0x00000000086015: add [rcx+rcx*4-0x1], cl; call qword ptr [rbp+0x80]; 
0x0000000008e58a: add [rcx+rcx*4-0x1], ecx; movzx esi, byte ptr [rsi]; call qword ptr [rax+0x18]; 
0x00000000083c05: add [rcx+rcx*4-0x1a], al; mov rdi, r14; call qword ptr [rax+0x18]; 
0x00000000099a1f: add [rcx+rcx*4-0x1a], cl; call rax; 
0x0000000009aa82: add [rcx+rcx*4-0x1a], cl; mov rdi, rbp; call rax; 
0x00000000085d45: add [rcx+rcx*4-0x1e], al; mov rsi, rbp; mov rdi, r15; call qword ptr [r14+0x80]; 
0x0000000010d704: add [rcx+rcx*4-0x1e], cl; mov eax, 0x10f; syscall; 
0x00000000073d04: add [rcx+rcx*4-0x1e], cl; mov rsi, r13; mov rdi, r14; call qword ptr [rbx+0x38]; 
0x00000000072ccd: add [rcx+rcx*4-0x1e], cl; mov rsi, r13; mov rdi, r14; call qword ptr [rcx+0x38]; 
0x0000000007fd23: add [rcx+rcx*4-0x1e], cl; mov rsi, r14; mov rdi, rbx; call qword ptr [r15+0x38]; 
0x0000000007f6ed: add [rcx+rcx*4-0x1e], cl; mov rsi, rbp; mov rdi, rbx; call qword ptr [r13+0x38]; 
0x00000000081727: add [rcx+rcx*4-0x1e], cl; mov rsi, rbp; mov rdi, rbx; call qword ptr [r13+0x58]; 
0x0000000008157f: add [rcx+rcx*4-0x1e], cl; mov rsi, rbp; mov rdi, rbx; call qword ptr [rax+0x58]; 
0x0000000009a7b8: add [rcx+rcx*4-0x20], al; pop r12; ret; 
0x0000000010886d: add [rcx+rcx*4-0x20], al; pop rbp; pop r12; pop r13; ret; 
0x00000000158234: add [rcx+rcx*4-0x20], al; pop rbp; pop r12; ret; 
0x00000000090fb6: add [rcx+rcx*4-0x20], al; pop rbx; pop rbp; pop r12; ret; 
0x000000000cc040: add [rcx+rcx*4-0x20], cl; pop r12; ret; 
0x0000000007f5b3: add [rcx+rcx*4-0x20], cl; pop rbp; pop r12; pop r13; ret; 
0x00000000060796: add [rcx+rcx*4-0x20], cl; pop rbp; pop r12; ret; 
0x000000001121a4: add [rcx+rcx*4-0x20], cl; pop rbx; pop rbp; pop r12; ret; 
0x00000000158014: add [rcx+rcx*4-0x20], eax; pop rbp; pop r12; pop r13; ret; 
0x000000001222dd: add [rcx+rcx*4-0x2], cl; mov edi, 0x2000006; mov rdx, rax; call qword ptr [rbx+0x28]; 
0x00000000133037: add [rcx+rcx*4-0x2], cl; mov rdi, r12; call rbp; 
0x00000000042dd7: add [rcx+rcx*4-0x2], cl; mov rdi, r12; mov rdx, r14; call rbp; 
0x0000000003fb2d: add [rcx+rcx*4-0x30], cl; ret; 
0x000000000deab6: add [rcx+rcx*4-0x31], cl; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000011b6cc: add [rcx+rcx*4-0x32], cl; mov edi, r12d; mov eax, ebx; syscall; 
0x000000000897e4: add [rcx+rcx*4-0x38], al; syscall; 
0x000000000954a0: add [rcx+rcx*4-0x38], cl; ret; 
0x0000000015a832: add [rcx+rcx*4-0x39], cl; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000091b10: add [rcx+rcx*4-0x3a], cl; mov eax, 0xe; syscall; 
0x0000000011226e: add [rcx+rcx*4-0x40], al; add rsp, 0x8; ret; 
0x0000000010e853: add [rcx+rcx*4-0x40], al; mov ebx, fs:[r10]; syscall; 
0x00000000156ca5: add [rcx+rcx*4-0x40], al; mov qword ptr [rdx], 0x0; ret; 
0x00000000034184: add [rcx+rcx*4-0x40], al; pop rbp; pop r12; ret; 
0x0000000007e3d2: add [rcx+rcx*4-0x40], al; pop rbx; pop rbp; ret; 
0x000000000420de: add [rcx+rcx*4-0x40], al; pop rbx; ret; 
0x00000000084964: add [rcx+rcx*4-0x40], al; ret; 
0x00000000091298: add [rcx+rcx*4-0x40], al; syscall; 
0x000000001125b2: add [rcx+rcx*4-0x40], cl; add rsp, 0x8; ret; 
0x00000000156f08: add [rcx+rcx*4-0x40], cl; pop rbp; ret; 
0x0000000003d7cf: add [rcx+rcx*4-0x40], cl; pop rbx; pop rbp; pop r12; ret; 
0x00000000116bb2: add [rcx+rcx*4-0x40], cl; pop rbx; pop rbp; ret; 
0x00000000050b37: add [rcx+rcx*4-0x40], cl; ret; 
0x00000000186e62: add [rcx+rcx*4-0x40], cl; shr rax, 0x2; vzeroupper; ret; 
0x000000001824bf: add [rcx+rcx*4-0x40], cl; vzeroupper; ret; 
0x0000000011f66b: add [rcx+rcx*4-0x40], eax; add rsp, 0x8; ret; 
0x0000000013289f: add [rcx+rcx*4-0x40], eax; pop rbp; ret; 
0x00000000081fd2: add [rcx+rcx*4-0x40], eax; pop rbx; pop rbp; pop r12; ret; 
0x0000000005f158: add [rcx+rcx*4-0x40], eax; pop rbx; ret; 
0x0000000011ccf2: add [rcx+rcx*4-0x40], eax; ret; 
0x00000000137448: add [rcx+rcx*4-0x40], ecx; mov byte ptr [r8+0x2], 0x0; ret; 
0x000000001569bd: add [rcx+rcx*4-0x40], ecx; pop rbp; ret; 
0x000000000f7604: add [rcx+rcx*4-0x54], al; and al, 0xa4; add [rax], al; add [rax-0x77], cl; ret far; 
0x000000000f7469: add [rcx+rcx*4-0x5c], al; and al, 0xa4; add [rax], al; add [rax-0x77], cl; ret far; 
0x0000000007bfee: add [rcx+rcx*4-0x6], cl; mov rsi, r12; mov rdi, rbp; call qword ptr [r14+0x38]; 
0x0000000007b6b8: add [rcx+rcx*4-0x6], cl; mov rsi, r12; mov rdi, rbp; call qword ptr [rax+0x38]; 
0x0000000009b0a9: add [rcx+rcx*4-0x6], cl; mov rsi, r14; mov rdi, r13; call rax; 
0x0000000012f3dc: add [rcx+rcx*4-0x6], cl; mov rsi, r14; mov rdi, rbx; call rax; 
0x000000001412e1: add [rcx+rcx*4-0x7], cl; call rbp; 
0x000000000dad14: add [rcx+rcx*4-0x8], cl; call rax; 
0x00000000044adb: add [rcx+rcx*4-0x9], cl; mov eax, 0xca; syscall; 
0x00000000141758: add [rcx+rcx*4-0xa], cl; add qword ptr [rbx+0x22a8], 0x1; mov rdi, rbp; call qword ptr [rax+0x18]; 
0x00000000122d10: add [rcx+rcx*4-0xa], cl; mov edi, 0x2000003; mov rdx, rax; call qword ptr [rbx+0x28]; 
0x000000000b9fb6: add [rcx+rcx*4-0xe], cl; mov r9, [rsp+0x10]; mov rdi, rbp; mov rsi, [rsp+0x18]; call rbx; 
0x000000000b9ee6: add [rcx+rcx*4-0xe], cl; mov rdi, rbp; xor r8d, r8d; lea r9, [rsp+0x28]; call rbx; 
0x00000000071f2f: add [rcx+rcx*4-0xe], cl; mov rsi, r12; mov rdi, rbp; call qword ptr [rax+0x38]; 
0x0000000007a7b9: add [rcx+rcx*4-0xe], cl; mov rsi, r15; mov rdi, rbp; call qword ptr [rbx+0x38]; 
0x000000000ba1c5: add [rcx+rcx*4-0xe], cl; xor r8d, r8d; mov rdi, rbp; lea r9, [rsp+0x30]; call rbx; 
0x0000000005cef8: add [rcx+rcx*4-0xf], cl; call qword ptr [rax+r8*8]; 
0x0000000014042e: add [rcx+rcx*8+0x7880cd75], eax; jmp far fword ptr [rsi]; 
0x00000000081f6e: add [rcx+rdi+0x5b], dh; mov eax, r8d; pop rbp; pop r12; ret; 
0x00000000044b47: add [rcx+rdi-0x1d], cl; jae short 0x0000000000044b5b; nop [rax]; call qword ptr [rbx]; 
0x000000001149b1: add [rcx+rsi+0x48], dh; mov edi, ebp; xor esi, esi; call r12; 
0x0000000005ba55: add [rcx-0x1177b], cl; jmp far fword ptr [rcx]; 
0x000000000d6995: add [rcx-0x12f43], al; jmp far fword ptr [rax]; 
0x0000000010458b: add [rcx-0x1683dbb4], ecx; ret far; 
0x000000000cc667: add [rcx-0x1da25], eax; dec dword ptr [rax+0x63]; ret; 
0x00000000045e46: add [rcx-0x1e], al; jg short 0x0000000000045dd7; adc [rcx-0x3f76bbea], cl; ret; 
0x00000000109543: add [rcx-0x2708fff3], ebx; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000e1595: add [rcx-0x2ff6b], cl; jmp qword ptr [rax+rcx*2-0x75]; 
0x00000000146f3f: add [rcx-0x39], al; add al, 0x1; add [rax], al; add [rax+0x1], bh; ret; 
0x0000000004f48d: add [rcx-0x39], cl; ret; 
0x00000000050b32: add [rcx-0x3a], al; add al, 0x0; add [rcx+rcx*4-0x40], cl; ret; 
0x00000000045b78: add [rcx-0x42], edi; xor eax, eax; ret; 
0x00000000041a18: add [rcx-0x46], al; or [rax], al; add [rax], al; mov eax, 0xd; syscall; 
0x00000000053042: add [rcx-0x46], al; or [rax], al; add [rax], al; mov eax, 0xe; syscall; 
0x000000000895cf: add [rcx-0x48], al; add [rax], eax; add [rax], al; mov eax, r8d; ret; 
0x000000000918c6: add [rcx-0x48], al; add eax, [rax]; add [rax], al; mov eax, r8d; ret; 
0x000000000326b5: add [rcx-0x73], cl; add cl, [rax+0x39]; ret far; 
0x00000000094629: add [rcx-0x73], cl; dec dword ptr [r9-0x7b]; ret; 
0x0000000014cc64: add [rcx-0x73], cl; je short 0x000000000014cc8d; or [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x10]; 
0x00000000039aa8: add [rcx-0x73], cl; mov ebp, 0x80; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000055605: add [rcx-0x73], cl; or [r8+0x39], r9b; ret; 
0x000000000e6f5a: add [rcx-0x73], ecx; push rbx; add [rcx-0x7f], ecx; ret; 
0x0000000013f990: add [rcx-0x75], al; jge short 0x000000000013f995; call qword ptr [rsp+0x20]; 
0x00000000146fbf: add [rcx-0x75], al; xor byte ptr [rax+rax-0x37f10000], 0x89; ror byte ptr [rax-0x77], 0x2; mov eax, 0x1; ret; 
0x00000000149d3f: add [rcx-0x75], cl; add [rdi], cl; enter 0x4789, 0x58; mov eax, 0x1; ret; 
0x00000000043943: add [rcx-0x75], cl; cmp al, 0x24; mov rdx, r14; mov rax, [rsp]; call rax; 
0x00000000141674: add [rcx-0x75], cl; cmp al, 0x24; mov rsi, rbp; mov rax, [rdi+0x38]; call qword ptr [rax+0x8]; 
0x00000000114b62: add [rcx-0x75], cl; jge short 0x0000000000114b67; call rbx; 
0x00000000114b95: add [rcx-0x75], cl; jge short 0x0000000000114b9a; call rbx; 
0x00000000114bca: add [rcx-0x75], cl; jge short 0x0000000000114bcf; call rbx; 
0x000000001159ca: add [rcx-0x75], cl; jge short 0x00000000001159cf; call rbx; 
0x0000000014a332: add [rcx-0x75], cl; jo short 0x000000000014a380; mov edi, ebp; call qword ptr [rax+0x20]; 
0x0000000008622c: add [rcx-0x75], cl; mov bh, 0x90; add [rax], al; add cl, ch; ret far; 
0x00000000114cee: add [rcx-0x75], cl; mov rax, [rsp+0x10]; mov rdi, rbp; call rax; 
0x000000000f9a76: add [rcx-0x75], cl; or [r9-0x75], r9b; push rbp; adc [rax+0x63], cl; ret far; 
0x000000000fa9c6: add [rcx-0x75], cl; push rsi; or [rcx-0x75], cl; adc [rax+0x63], r9b; ret; 
0x000000000b94a4: add [rcx-0x75], ecx; cmp al, 0x24; lea r9, [rsp+0x28]; call rbx; 
0x000000000b94a3: add [rcx-0x75], rcx; cmp al, 0x24; lea r9, [rsp+0x28]; call rbx; 
0x00000000151180: add [rcx-0x76b7d7b9], cl; ja short 0x00000000001511a0; mov eax, r8d; ret; 
0x0000000013625d: add [rcx-0x76b7f3a9], cl; ret; 
0x000000000f3f49: add [rcx-0x76f7dbbc], ecx; ret; 
0x000000000afd06: add [rcx-0x776b7fe], ecx; ret; 
0x00000000172091: add [rcx-0x776b7fe], ecx; sub r8, 0x4; lea rcx, [rdx+0x4]; jne 0x0000000000172390; ret; 
0x000000000373f5: add [rcx-0x77], al; push rdi; mov dword ptr [rax-0x20], 0x850fffff; ret far; 
0x000000000d2691: add [rcx-0x77], al; ret far; 
0x000000000cc6a4: add [rcx-0x77], al; ret; 
0x00000000108176: add [rcx-0x77], al; ror byte ptr [rax-0x77], 0x1; ret far; 
0x000000000311aa: add [rcx-0x77], al; xor ecx, [rcx-0x77]; ret far; 
0x000000000a4a68: add [rcx-0x77], cl; adc ecx, [rcx+rcx*4-0x20]; pop r12; ret; 
0x000000000a49f9: add [rcx-0x77], cl; add [rcx+rcx*4-0x38], cl; ret; 
0x000000000f6a1d: add [rcx-0x77], cl; fimul st, dword ptr [rax-0x77]; ret far; 
0x0000000003d977: add [rcx-0x77], cl; fisttp word ptr [rax-0x7d], st; ret; 
0x00000000159e71: add [rcx-0x77], cl; fmul st, dword ptr [rcx+rcx*4-0x1a]; xor r9d, r9d; mov rdi, rbp; call qword ptr [rax+0x270]; 
0x0000000011190e: add [rcx-0x77], cl; fsubp; ret far; 
0x00000000078864: add [rcx-0x77], cl; ret far; 
0x0000000009c93f: add [rcx-0x77], cl; ret; 
0x00000000082d3f: add [rcx-0x77], ecx; push rax; sub [rax-0x78], al; cmp [rcx+rcx*4-0x38], al; ret; 
0x000000000728fd: add [rcx-0x77], ecx; push rsi; sub dh, al; add [rcx-0x7d], cl; ret; 
0x00000000055120: add [rcx-0x77], ecx; push rsp; ret; 
0x00000000034826: add [rcx-0x77cf7bd], ecx; std; je short 0x0000000000034848; pop rbx; ret; 
0x0000000005148c: add [rcx-0x78], eax; add ecx, [rcx-0x7d]; ret; 
0x00000000190c71: add [rcx-0x7b], cl; ret; 
0x0000000007aa35: add [rcx-0x7d], al; call far fword ptr [rax+0x48]; 
0x0000000007a883: add [rcx-0x7d], al; call qword ptr [rbx+0xf]; 
0x00000000078e6f: add [rcx-0x7d], al; in al, dx; add [rax-0x8e443], eax; jmp qword ptr [rax]; 
0x0000000005bb5f: add [rcx-0x7d], al; out dx, eax; add [rax+0x39], ecx; ret; 
0x0000000010e906: add [rcx-0x7d], al; ret far; 
0x00000000114f49: add [rcx-0x7d], cl; ret far; 
0x00000000051d10: add [rcx-0x7d], cl; ret; 
0x0000000002ca37: add [rcx-0x7d], cl; rol byte ptr [rcx], 0x89; xor [rax-0x7d], ecx; ret; 
0x000000000d9989: add [rcx-0x7d], ecx; jmp qword ptr [rbp+rsi*2-0x38]; 
0x0000000003f19c: add [rcx-0x7f], cl; call qword ptr [rax]; 
0x000000000ce5a8: add [rcx-0x7f], cl; rol byte ptr [rax+0x49000151], 0x29; fmul st, dword ptr [rcx+0x118b4f05]; add [rbp+0x1], cl; ret; 
0x000000000e6f5e: add [rcx-0x7f], ecx; ret; 
0x00000000105dd9: add [rcx-0x80], al; call far fword ptr [rdi+rcx-0x7b]; 
0x00000000060a17: add [rcx-0x80], al; jl short 0x0000000000060a31; jmp far fword ptr [rdi]; 
0x00000000046da5: add [rcx-0x80], al; jmp far fword ptr [rbx]; 
0x0000000013a947: add [rcx-0x80], al; jmp qword ptr [rax]; 
0x00000000105db5: add [rcx-0x80], al; jmp qword ptr [rdi]; 
0x00000000105dbf: add [rcx-0x80], al; jmp qword ptr [rdx]; 
0x0000000013a9b7: add [rcx-0x80], al; jmp qword ptr [rsi]; 
0x000000001820db: add [rcx-0x876b730], cl; bsr eax, eax; lea rax, [rdi+rax-0x20]; vzeroupper; ret; 
0x00000000126187: add [rcx-0x877b], cl; dec dword ptr [rax-0x7d]; ret; 
0x0000000002c75f: add [rcx-0xa], al; ret; 
0x000000001297e7: add [rcx-0xda08], cl; inc dword ptr [rax]; ret; 
0x000000001449f5: add [rcx-0xdd6b7ff], cl; mov rbp, rdx; call qword ptr [rbx+0x10]; 
0x000000000923d6: add [rcx], al; add [rax], al; add [rax-0x77], cl; add eax, 0x150eae; ret; 
0x000000000923ad: add [rcx], al; add [rax], al; add [rax-0x77], cl; add eax, 0x150ecf; ret; 
0x0000000009238d: add [rcx], al; add [rax], al; add [rax-0x77], cl; add eax, 0x150ee7; ret; 
0x00000000086d9b: add [rcx], al; add [rax], al; add [rax-0x77], cl; push 0xffffffffa5058b48; call qword ptr [rdx]; 
0x00000000143b37: add [rcx], al; add [rax], al; add [rax-0x77], cl; ret; 
0x0000000009a7b4: add [rcx], al; add [rax], al; add [rcx+rcx*4-0x20], al; pop r12; ret; 
0x0000000014dbf0: add [rcx], al; add [rax], al; add [rdi], cl; adc [rsp+0xb8], ebp; call rax; 
0x00000000038f4d: add [rcx], al; add [rax], al; and eax, esi; ret; 
0x0000000010ec17: add [rcx], al; add [rax], al; mov [rdi+0x16], ax; ret; 
0x000000000e0ab8: add [rcx], al; add [rax], al; mov eax, 0x20; cmove rax, rdx; ret; 
0x00000000038c67: add [rcx], al; add [rax], al; ret; 
0x000000000b7c1f: add [rcx], al; add [rax], al; sub rax, rdx; ret; 
0x00000000156910: add [rcx], al; add rsp, 0x10; mov eax, r8d; pop rbp; ret; 
0x00000000132df4: add [rcx], al; add rsp, 0x20; mov eax, r8d; pop rbp; ret; 
0x00000000044dc2: add [rcx], al; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000000ce901: add [rcx], al; add rsp, 0x8; ret; 
0x0000000010e509: add [rcx], al; cmp eax, 0x410000; je short 0x000000000010e540; mov eax, 0x101; syscall; 
0x0000000010e50e: add [rcx], al; je short 0x000000000010e540; mov eax, 0x101; syscall; 
0x000000000453dc: add [rcx], al; lea rdi, [rbp+0x988]; call qword ptr [rbp+0xf90]; 
0x0000000011f66a: add [rcx], al; mov eax, r8d; add rsp, 0x8; ret; 
0x0000000013289e: add [rcx], al; mov eax, r8d; pop rbp; ret; 
0x0000000005f157: add [rcx], al; mov eax, r8d; pop rbx; ret; 
0x000000000fd8a2: add [rcx], al; mov edx, 0x2; cmove eax, edx; ret; 
0x0000000012b403: add [rcx], al; mov fs:[r8], r9d; add rsp, 0x18; ret; 
0x000000000dbb1d: add [rcx], al; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x000000000db3c5: add [rcx], al; mov fs:[r9], ebx; mov rax, r8; pop rbx; ret; 
0x0000000014a86f: add [rcx], al; mov rax, [rbx+0x60]; call qword ptr [rax+0x8]; 
0x000000001569bc: add [rcx], al; mov rax, r8; pop rbp; ret; 
0x00000000141762: add [rcx], al; mov rdi, rbp; call qword ptr [rax+0x18]; 
0x000000000457ae: add [rcx], al; pop rbp; ret; 
0x0000000008febb: add [rcx], al; pop rbx; ret; 
0x000000000808b1: add [rcx], al; ret; 
0x000000000448b1: add [rcx], al; xor eax, eax; pop rbx; ret; 
0x00000000045184: add [rcx], al; xor esi, esi; mov rdi, r9; call r8; 
0x0000000003736a: add [rcx], bh; jp short 0x00000000000373a6; jbe short 0x0000000000037387; mov rax, [rdx+rdi*8+0x40]; ret; 
0x000000000cd41f: add [rcx], bh; ret far; 
0x000000000c5ea7: add [rcx], bh; ret; 
0x000000001107fe: add [rcx], bl; rol byte ptr [rbx-0x3f7c0f20], 0x26; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000035fe4: add [rcx], ch; ret far; 
0x000000000d2711: add [rcx], ch; ret; 
0x0000000003fb89: add [rcx], cl; add [rax], al; add [rax-0x1], bh; pop rbp; ret; 
0x00000000029321: add [rcx], cl; add [rax], al; add [rax-0x1], bh; ret; 
0x00000000040476: add [rcx], cl; ror byte ptr [rcx-0x24efdbbc], 0x1; insb [rdi], dx; and al, 0x8; ret; 
0x0000000003d73c: add [rcx], dh; call qword ptr [rax+0x480ab60f]; 
0x0000000002ad53: add [rcx], dh; div byte ptr [rcx]; jmp qword ptr [rsi+0xf]; 
0x00000000116d9b: add [rcx], dh; fucomi st, st(3); or al, 0x8d; add [r8-0x7d], ecx; ret; 
0x0000000003890f: add [rcx], dh; idiv byte ptr [rdi+0x1]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000008600e: add [rcx], dh; idiv byte ptr [rdx+0x1]; mov rdi, r15; call qword ptr [rbp+0x80]; 
0x0000000008b206: add [rcx], dh; idiv byte ptr [rdx+0x1]; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x00000000085e18: add [rcx], dh; idiv byte ptr [rdx+0x2]; mov rdi, r15; call qword ptr [r13+0x80]; 
0x0000000007ebb4: add [rcx], dh; idiv byte ptr [rdx+0x2]; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x000000000f5d44: add [rcx], dh; jmp qword ptr [rsi+0xf]; 
0x00000000040a57: add [rcx], dh; leave; addsd xmm0, xmm0; mov [rdi], ecx; ret; 
0x00000000074bf0: add [rcx], dh; leave; jmp rsi; 
0x000000001420e1: add [rcx], dh; leave; lea rdx, [rip+0xd805]; lea r9, [rsp+0x20]; call qword ptr [rax]; 
0x0000000008a12d: add [rcx], dh; rcr byte ptr [rbx+0x5d], 0x41; pop rsp; ret; 
0x000000001904cf: add [rcx], dh; rol byte ptr [rbp-0x7b], 0xc0; jne 0x00000000001903e0; add rsp, 0x38; ret; 
0x000000000fd8bf: add [rcx], dh; rol byte ptr [rcx+0xc0fef9], 0x0; setne al; lea eax, [rax+rax*8+0x5]; ret; 
0x00000000112b47: add [rcx], dh; rol byte ptr [rdi+0xd4d0005], 0x0; cmp eax, 0x1; jg short 0x0000000000112b60; ret; 
0x000000001318f7: add [rcx], dh; ror byte ptr [rax-0x73], 0x15; jmp far fword ptr [rdi+rax-0x3dbb7500]; 
0x0000000008ba27: add [rcx], dh; ror byte ptr [rax-0x77], cl; out dx, al; mov rdi, rbx; call qword ptr [r12+0x80]; 
0x0000000008afa1: add [rcx], dh; ror byte ptr [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x80]; 
0x0000000008b2ab: add [rcx], dh; ror byte ptr [rax-0x77], cl; out dx, eax; call qword ptr [rbx+0x80]; 
0x00000000045c2a: add [rcx], dh; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x5d], bl; ret; 
0x000000000b7cd2: add [rcx], dh; ror byte ptr [rax], cl; leave; cmove rax, rdx; ret; 
0x0000000018583f: add [rcx], dh; ror byte ptr [rbx+0x75163b17], 0xe4; ret; 
0x00000000186230: add [rcx], dh; ror byte ptr [rbx+0xc3b170c], 0x16; jne short 0x0000000000186209; vzeroupper; ret; 
0x00000000086103: add [rcx], dh; ror byte ptr [rcx+rcx*4-0x1], cl; call qword ptr [rbx+0x80]; 
0x00000000107ee7: add [rcx], dh; ror byte ptr [rcx+rcx*4-0x1a], cl; mov rdi, rbp; mov eax, 0x135; syscall; 
0x000000000418b9: add [rcx], dh; ror byte ptr [rcx+rcx*4-0x32], cl; mov edi, 0x2; mov eax, 0xe; syscall; 
0x000000001074e2: add [rcx], dh; ror byte ptr [rcx+rcx*4-0xa], cl; mov edi, 0x2; mov eax, 0xe; syscall; 
0x0000000009bf99: add [rcx], dh; ror byte ptr [rcx-0x77], 0x30; ret; 
0x000000001270d9: add [rcx], dh; ror byte ptr [rcx-0x7d], 0xc7; add eax, ebp; cmp ecx, [rsi-0x7cb7000d]; ret; 
0x00000000090e7b: add [rcx], dh; ror byte ptr [rdi], 0x11; jle short 0x0000000000090ef2; ret; 
0x000000000eacc7: add [rcx], dh; sar byte ptr [rax], 0xe; je 0x00000000000eac2d; ret; 
0x0000000005303b: add [rcx], dh; sar byte ptr [rdi+0x2], cl; mov r10d, 0x8; mov eax, 0xe; syscall; 
0x00000000108168: add [rcx], dh; shl bh, 0xc2; jmp rsi; 
0x000000000de93e: add [rcx], dh; shl byte ptr [rcx], cl; idiv byte ptr [rdi+0x1200011]; mov eax, 0x38; syscall; 
0x0000000008f502: add [rcx], dh; shl byte ptr [rcx], cl; test byte ptr [rax-0x77], 0xdf; call qword ptr [rax+0x58]; 
0x00000000107e4f: add [rcx], dh; shl byte ptr [rcx], cl; test byte ptr [rax-0x77], 0xef; mov eax, 0x135; syscall; 
0x0000000010c627: add [rcx], dh; shr al, 0x81; ret; 
0x00000000051a3f: add [rcx], dh; shr cl, 0xfd; idiv edi; jmp qword ptr [rsi+0xf]; 
0x0000000007e7c8: add [rcx], dh; test byte ptr [rax-0x77], 0xef; call qword ptr [rbx+0x10]; 
0x000000000cb54b: add [rcx], eax; add [rax], al; lea rax, [rdi-0x10]; ret; 
0x00000000136b6a: add [rcx], eax; add [rax], al; ret; 
0x00000000108a05: add [rcx], eax; add [rax], al; syscall; 
0x0000000018c701: add [rcx], eax; add [rcx], eax; imul rax, rdi; shr rax, 0x38; ret; 
0x0000000018c703: add [rcx], eax; imul rax, rdi; shr rax, 0x38; ret; 
0x00000000113fed: add [rcx], eax; sub esi, [rcx]; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x5d], bl; ret; 
0x00000000091c70: add [rcx], ebx; ror byte ptr [rax-0x7d], 0xc4; sbb [rbx+0x5d5b0ce0], al; ret; 
0x0000000011014b: add [rcx], ecx; clc; dec dword ptr [rbx+0x480c2444]; add esp, 0x18; ret; 
0x0000000014d436: add [rcx], edi; ret; 
0x0000000009107b: add [rcx], esi; rol bl, 0x90; mov eax, 0x16; ret; 
0x000000000b99af: add [rcx], esi; shr byte ptr [rdx+0x1], cl; lea r9, [rsp+0x20]; call rbx; 
0x00000000045185: add [rcx], esi; test byte ptr [rcx+rcx*4-0x31], 0x41; call rax; 
0x00000000112b46: add [rcx], sil; rol byte ptr [rdi+0xd4d0005], 0x0; cmp eax, 0x1; jg short 0x0000000000112b60; ret; 
0x0000000018a4b6: add [rdi+0x12], dh; vmovdqu64 [rdi+rdx-0x40], zmm0; vmovdqu64 [rdi], zmm0; vzeroupper; ret; 
0x0000000008ff16: add [rdi+0x15675205], al; add [rbx+0x17f01f8], al; ret; 
0x0000000008d59f: add [rdi+0x1590ca05], al; add [rbx+0x307f01f8], al; ret; 
0x000000000b8336: add [rdi+0x15], esi; jb short 0x00000000000b833d; mov [rdi], cl; ret; 
0x000000000808b6: add [rdi+0x165d7205], al; add [rbx+0x17f01f8], al; ret; 
0x000000000fbb20: add [rdi+0x19], dh; lea rdx, [rip+0xafb56]; movsxd rax, [rdx+rdi*4]; add rax, rdx; notrack jmp rax; 
0x000000000611d4: add [rdi+0x1], edi; ret; 
0x000000000b7ef7: add [rdi+0x26], esi; jb short 0x00000000000b7f01; movzx ecx, byte ptr [rsi]; mov [rdi], cl; ret; 
0x000000001515b4: add [rdi+0x28], edx; mov eax, 0x1; ret; 
0x000000000534be: add [rdi+0x2], bh; mov r10d, 0x8; mov eax, 0xe; syscall; 
0x000000000cb094: add [rdi+0x2], bh; neg eax; ret; 
0x000000001856d4: add [rdi+0x2c], esi; jb short 0x00000000001856db; mov [rdi], cl; vzeroupper; ret; 
0x00000000108040: add [rdi+0x2d], esi; mov eax, 0x4; syscall; 
0x00000000108100: add [rdi+0x2d], esi; mov eax, 0x6; syscall; 
0x0000000010809f: add [rdi+0x2e], esi; mov eax, 0x5; syscall; 
0x000000000596c0: add [rdi+0x3004], bh; mov eax, 0x9e; syscall; 
0x0000000008d5a8: add [rdi+0x30], edi; ret; 
0x00000000108545: add [rdi+0x30], esi; mov eax, 0x106; syscall; 
0x0000000018a59c: add [rdi+0x3a], esi; jb short 0x000000000018a5a3; mov [rdi], cl; vzeroupper; ret; 
0x000000001851e7: add [rdi+0x3b], esi; jb short 0x00000000001851f1; movzx ecx, byte ptr [rsi]; mov [rdi], cl; ret; 
0x0000000014720c: add [rdi+0x48], esi; mov eax, [rsp+0x10]; mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x18]; 
0x00000000189f77: add [rdi+0x53], esi; jb short 0x0000000000189f81; movzx ecx, byte ptr [rsi]; mov [rdi], cl; ret; 
0x000000000a52e0: add [rdi+0x63], cl; or al, 0x8a; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000177a2c: add [rdi+0x63], cl; or al, 0x8a; pcmpeqb xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000017ec3c: add [rdi+0x63], cl; or al, 0x8a; vpcmpeqb xmm0, xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000164f4a: add [rdi+0x63], cl; or al, 0x8b; add r9, r11; notrack jmp r9; 
0x0000000015f99a: add [rdi+0x63], cl; or al, 0x8b; lea r9, [r11+r9]; notrack jmp r9; 
0x000000001296ca: add [rdi+0x8], dh; mov rax, rdi; sar rax, 0x6; ret; 
0x0000000018c684: add [rdi+0x9], bh; neg eax; ret; 
0x00000000112b52: add [rdi+0xb], edi; ret; 
0x0000000007cd2b: add [rdi+0xe], dh; movsxd rdi, edi; lea rax, [rip+0x164948]; mov rax, [rax+rdi*8]; ret; 
0x00000000056766: add [rdi+rax*4-0x17], dh; adc [rdx], eax; std; jmp qword ptr [rsi-0x70]; 
0x0000000004241a: add [rdi+rax*8], ah; add [rax], al; add [rax-0x1], bh; ret; 
0x000000001170a6: add [rdi+rax*8], ah; add al, [rax]; add [rax], al; xor eax, eax; ret; 
0x00000000040730: add [rdi+rax*8], ah; and al, [rax]; add [rax], al; add rsp, 0x8; ret; 
0x0000000002931e: add [rdi+rax*8], ah; or [rax], eax; add [rax], al; mov eax, 0xffffffff; ret; 
0x0000000010f26e: add [rdi+rax*8], ah; or al, 0x0; add [rax], al; mov eax, 0xffffffff; ret; 
0x0000000009b9ca: add [rdi+rax*8], ah; or al, 0x0; add [rax], al; xor eax, eax; ret; 
0x000000000df44d: add [rdi+rax*8], ah; or eax, 0xe9000000; ret far; 
0x0000000003fb26: add [rdi+rax*8], ah; sub al, [rax]; add [rax], al; mov rax, r10; ret; 
0x000000001157c8: add [rdi+rbp+0x48], dh; mov edi, ebp; xor esi, esi; call r12; 
0x000000001256b6: add [rdi+rbx*2+0x31], esi; ror byte ptr [rax-0x7d], 0xc4; or [rbp+0x41], bl; pop rsp; ret; 
0x000000000e0a0b: add [rdi+rcx*4+0x48], dh; cmp edx, 0x2468; jne short 0x00000000000e0a33; mov eax, 0xfffa; ret; 
0x00000000126bae: add [rdi+rcx-0x3d], dh; nop [rax+rax]; xor eax, eax; ret; 
0x00000000091066: add [rdi+rcx-0x7b], esi; div byte ptr [rbp+0x13]; and dword ptr [rdi+0x8], 0xfffffffe; xor eax, eax; ret; 
0x00000000037306: add [rdi+rdi*8], bh; cmove eax, edx; mov [rip+0x1ae5ab], al; lea rax, [rip+0x1ae547]; ret; 
0x0000000009efc4: add [rdi-0x27], esi; pop rbx; pop rbp; pop r12; ret; 
0x00000000040d97: add [rdi], bh; mov [rdi], edx; movd xmm0, eax; ret; 
0x000000000845e8: add [rdi], cl; adc [rax+0x40], eax; pop rbx; ret; 
0x0000000013c9a6: add [rdi], cl; adc [rax], eax; add rsp, 0x8; ret; 
0x0000000008eced: add [rdi], cl; adc [rbp+0x38], eax; pop rbp; pop r12; ret; 
0x00000000126225: add [rdi], cl; adc [rbp-0x78], edi; call rcx; 
0x0000000008df54: add [rdi], cl; adc [rbx+0x48], eax; pop rbx; ret; 
0x0000000014a5b9: add [rdi], cl; adc [rdi+0x20], edx; ret; 
0x00000000149c9d: add [rdi], cl; adc [rdi+0x8], eax; ret; 
0x00000000146ec2: add [rdi], cl; adc [rdx], ecx; ret; 
0x00000000107b94: add [rdi], cl; adc [rsi+0x60], esi; movdqu xmm7, [rdi+0xf8]; movups [rsi+0x70], xmm7; ret; 
0x00000000107ba0: add [rdi], cl; adc [rsi+0x70], edi; ret; 
0x000000000faf6d: add [rdi], cl; adc [rsi+0x8], eax; ret; 
0x00000000142f1a: add [rdi], cl; adc [rsi+0x8], ecx; ret; 
0x00000000146dcf: add [rdi], cl; adc [rsi], eax; mov rax, [rax+0xa0]; mov [rsi+0x10], rax; ret; 
0x0000000014d6a4: add [rdi], cl; adc [rsp+0x18], eax; call qword ptr [rax+0x18]; 
0x0000000014d932: add [rdi], cl; adc [rsp+0x18], ecx; movups [rsp+0x38], xmm0; call qword ptr [rax+0x18]; 
0x000000000dff73: add [rdi], cl; adc [rsp+0x8], eax; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000014dbf4: add [rdi], cl; adc [rsp+0xb8], ebp; call rax; 
0x0000000014db58: add [rdi], cl; adc [rsp+0xb8], ebx; movups [rsp+0xd8], xmm0; call rax; 
0x00000000107473: add [rdi], cl; adc [rsp+0xc8], eax; mov [rsp+0xe8], eax; mov eax, 0xe; syscall; 
0x0000000014db60: add [rdi], cl; adc [rsp+0xd8], eax; call rax; 
0x00000000148415: add [rdi], cl; add eax, 0x31e88beb; adc edi, esi; call qword ptr [rax-0x5e1f00d]; 
0x0000000013d255: add [rdi], cl; add eax, 0x71e8c35d; idiv edi; call qword ptr [rax-0x5e1f00d]; 
0x0000000015a81b: add [rdi], cl; add eax, 0x9be; add [rcx+0x3eb8c7], cl; add [rax], al; syscall; 
0x000000000913b6: add [rdi], cl; add eax, 0xfff0003d; push qword ptr [rsi+0x8]; neg eax; ret; 
0x0000000011e7ec: add [rdi], cl; add eax, 0xfffd2ae9; jmp qword ptr [rsi+0x2e]; 
0x0000000013bda6: add [rdi], cl; add eax, 0xfffe86e9; jmp qword ptr [rsi-0x70]; 
0x0000000009206a: add [rdi], cl; add eax, 0xfffe9ce9; jmp qword ptr [rsi+0x2e]; 
0x000000000972bf: add [rdi], cl; add eax, 0xfffebbe9; jmp qword ptr [rsi+0xf]; 
0x0000000003d026: add [rdi], cl; add eax, 0xfffefbe9; jmp qword ptr [rsi-0x70]; 
0x00000000095f02: add [rdi], cl; add eax, 0xffff01e9; jmp qword ptr [rsi+0xf]; 
0x0000000008dbe7: add [rdi], cl; add eax, 0xffff0be9; call qword ptr [rax+0xff0c889]; 
0x00000000132989: add [rdi], cl; add eax, 0xffff0fe9; jmp qword ptr [rsi+0x66]; 
0x0000000009190a: add [rdi], cl; add eax, 0xffff18e9; jmp qword ptr [rsi+0xf]; 
0x000000000dd01b: add [rdi], cl; add eax, 0xffff33e9; jmp qword ptr [rbp+rax*2-0x75]; 
0x000000000fa297: add [rdi], cl; add eax, 0xffff41e9; call qword ptr [rax-0x5e1f00d]; 
0x0000000008d61c: add [rdi], cl; add eax, 0xffff44e9; jmp qword ptr [rsi+0x66]; 
0x0000000008d8f7: add [rdi], cl; add eax, 0xffff49e9; call qword ptr [rax+0x1bac031]; 
0x000000000452ee: add [rdi], cl; add eax, 0xffff4ae9; jmp qword ptr [rsi+0x2e]; 
0x000000000931fa: add [rdi], cl; add eax, 0xffff70e9; jmp qword ptr [rsi+0x66]; 
0x000000000dbd6d: add [rdi], cl; add eax, 0xffff75e9; jmp qword ptr [rsi+0x2e]; 
0x0000000012b67d: add [rdi], cl; add eax, 0xffff7ae9; jmp qword ptr [rsi+0x2e]; 
0x0000000012cfdd: add [rdi], cl; add eax, 0xffff7be9; jmp qword ptr [rsi+0x2e]; 
0x0000000014a669: add [rdi], cl; enter 0x4289, 0x10; mov eax, 0x1; ret; 
0x0000000014a569: add [rdi], cl; enter 0x4289, 0xc; mov eax, 0x1; ret; 
0x00000000149d62: add [rdi], cl; enter 0x4789, 0x54; mov eax, 0x1; ret; 
0x00000000149d42: add [rdi], cl; enter 0x4789, 0x58; mov eax, 0x1; ret; 
0x00000000146f66: add [rdi], cl; enter 0xc089, 0x48; mov [rdx], eax; mov eax, 0x1; ret; 
0x0000000014a608: add [rdi], cl; enter 0xc089, 0x49; mov [rax], eax; mov eax, 0x1; ret; 
0x0000000016790f: add [rdi], cl; mov bh, 0x16; mov [rdi], dx; ret; 
0x00000000182bff: add [rdi], cl; mov bh, 0x16; mov [rdi], dx; vzeroupper; ret; 
0x00000000038b41: add [rdi], cl; mov bh, 0x4; js short 0x0000000000038aca; loopne 0x0000000000038b51; ret; 
0x00000000038b81: add [rdi], cl; mov bh, 0x4; js short 0x0000000000038b0a; loopne 0x0000000000038b8b; ret; 
0x00000000038c21: add [rdi], cl; mov bh, 0x4; js short 0x0000000000038baa; loopne 0x0000000000038c2d; ret; 
0x00000000038d01: add [rdi], cl; mov bh, 0x4; js short 0x0000000000038c8a; loopne 0x0000000000038d0a; ret; 
0x0000000011cac4: add [rdi], cl; mov bh, 0x4; js short 0x000000000011ca4d; loopne 0x000000000011cad4; ret; 
0x0000000011cbe4: add [rdi], cl; mov bh, 0x4; js short 0x000000000011cb6d; loopne 0x000000000011cbed; ret; 
0x0000000011cc74: add [rdi], cl; mov bh, 0x4; js short 0x000000000011cbfd; loopne 0x000000000011cc7e; ret; 
0x0000000011cf54: add [rdi], cl; mov bh, 0x4; js short 0x000000000011cedd; loopne 0x000000000011cf60; ret; 
0x0000000013882f: add [rdi], cl; mov bh, 0x4e; adc cl, [rbp-0x2ff6f]; jmp qword ptr [rsi-0x7d]; 
0x00000000079faf: add [rdi], cl; mov bh, 0xb5; pop rax; idiv edi; jmp qword ptr [rsi-0x77]; 
0x0000000014b7c1: add [rdi], cl; mov cl, 0x15; call rsi; 
0x0000000012bd51: add [rdi], cl; mov cl, 0x15; push rdi; ret; 
0x0000000012bf15: add [rdi], cl; mov cl, 0x15; ret far; 
0x00000000080a5d: add [rdi], cl; mov cl, 0x35; ret far; 
0x0000000016797f: add [rdi], cl; mov dh, 0x16; mov [rdi], dl; ret; 
0x0000000018402f: add [rdi], cl; mov dh, 0x16; mov [rdi], dl; vzeroupper; ret; 
0x0000000003d937: add [rdi], cl; mov dh, 0x43; add [rax-0x7d], ecx; ret; 
0x00000000187ebf: add [rdi], cl; mov dh, 0x47; dec dword ptr [rdi]; mov dh, 0x4e; jmp far fword ptr [rcx]; 
0x00000000187c72: add [rdi], cl; mov dh, 0x47; dec dword ptr [rdi]; mov dh, 0x56; jmp far fword ptr [rcx]; 
0x0000000018bb5f: add [rdi], cl; mov dh, 0x47; movzx edx, byte ptr [rsi-0xd]; sub eax, edx; ret; 
0x0000000018bb4f: add [rdi], cl; mov dh, 0x47; movzx edx, byte ptr [rsi-0xe]; sub eax, edx; ret; 
0x000000000e5f1f: add [rdi], cl; mov dh, 0x53; add cl, [rax-0x7d]; ret; 
0x0000000013a258: add [rdi], cl; mov dh, 0x5d; add cl, ch; imul edi, esi, 0xffffffff; jmp qword ptr [rsi+0xf]; 
0x0000000017e8ef: add [rdi], cl; mov dh, 0x7; movzx ecx, byte ptr [rsi]; sub eax, ecx; ret; 
0x0000000008c761: add [rdi], cl; mov dh, 0xc0; movsxd rax, [r10+rax*4]; add rax, r10; notrack jmp rax; 
0x00000000105c3f: add [rdi], cl; mov dh, 0xc0; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x00000000062a12: add [rdi], cl; mov dh, 0xc0; movsxd rax, [rdi+rax*4]; add rax, rdi; notrack jmp rax; 
0x00000000062316: add [rdi], cl; mov dh, 0xc0; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000000b84ef: add [rdi], cl; mov dh, 0xc1; pop rbx; ret; 
0x00000000050e83: add [rdi], cl; mov dh, 0xd2; movsxd rdx, [r9+rdx*4]; add rdx, r9; notrack jmp rdx; 
0x0000000007ce82: add [rdi], cl; mov dh, 0xd2; movsxd rdx, [rsi+rdx*4]; add rdx, rsi; notrack jmp rdx; 
0x000000000a668f: add [rdi], cl; mov dh, 0xe; movzx eax, byte ptr [rdi]; sub eax, ecx; ret; 
0x0000000017e60f: add [rdi], cl; mov ebp, 0x20c083c0; add rax, rdi; vzeroupper; ret; 
0x0000000017e61f: add [rdi], cl; mov ebp, 0x40c083c0; add rax, rdi; vzeroupper; ret; 
0x000000000a894f: add [rdi], cl; mov ebp, 0x448d48c0; cmp [rax], ah; ret; 
0x000000000a895f: add [rdi], cl; mov ebp, 0x448d48c0; cmp [rax], dh; ret; 
0x000000000a893f: add [rdi], cl; mov ebp, 0x448d48c0; cmp [rax], dl; ret; 
0x0000000017e62f: add [rdi], cl; mov ebp, 0x60c083c0; add rax, rdi; ret; 
0x0000000017e5ff: add [rdi], cl; mov ebp, 0xf80148c0; vzeroupper; ret; 
0x000000000a847f: add [rdi], cl; mov esp, 0x448d48c0; cmp [rax], ah; ret; 
0x000000000a846f: add [rdi], cl; mov esp, 0x448d48c0; cmp [rax], dl; ret; 
0x000000000a844e: add [rdi], cl; mov esp, 0x448d48c0; cmp al, dh; ret; 
0x000000000a848f: add [rdi], cl; mov esp, 0xc22948c0; jbe short 0x00000000000a84d0; add rax, rdi; ret; 
0x000000000a849e: add [rdi], cl; mov esp, 0xc22948c0; jbe short 0x00000000000a84d0; lea rax, [rdi+rax+0x10]; ret; 
0x000000000ca38f: add [rdi], cl; mov esp, 0xc22948c0; jbe short 0x00000000000ca3d0; add rax, rdi; ret; 
0x000000000ca39e: add [rdi], cl; mov esp, 0xc22948c0; jbe short 0x00000000000ca3d0; lea rax, [rdi+rax+0x10]; ret; 
0x000000000a845f: add [rdi], cl; mov esp, 0xf80148c0; ret; 
0x00000000040ccf: add [rdi], cl; push rsi; add eax, 0x175a59; mulss xmm0, [rip+0x1766f9]; ret; 
0x00000000040caa: add [rdi], cl; push rsi; add eax, 0x175a8e; mulss xmm0, [rip+0x176722]; ret; 
0x00000000040b9b: add [rdi], cl; push rsp; ret; 
0x000000000d6a2f: add [rdi], cl; ret; 
0x000000000cdd9c: add [rdi], cl; sub [rax], eax; add rsp, 0x10; pop rbp; ret; 
0x0000000014b60b: add [rdi], cl; sub [rsp+0x20], eax; call qword ptr [rax+0x28]; 
0x0000000004186f: add [rdi], cl; sub [rsp+0xd0], eax; movaps [rsp+0xe0], xmm0; movaps [rsp+0xf0], xmm0; syscall; 
0x00000000041877: add [rdi], cl; sub [rsp+0xe0], eax; movaps [rsp+0xf0], xmm0; syscall; 
0x0000000004187f: add [rdi], cl; sub [rsp+0xf0], eax; syscall; 
0x0000000017889f: add [rdi], cl; sub dword ptr [rsi+0xe], 0x0; add [rcx+0x29], cl; ret far; 
0x0000000010d724: add [rdi], cl; test [rax+0x48000000], ebx; add esp, 0x40; pop r12; ret; 
0x0000000009a69e: add [rdi], cl; test [rbp+0x48000000], ebp; add esp, 0x18; ret; 
0x00000000108b9f: add [rdi], cl; test [rbp+0x48000000], edi; add esp, 0x78; ret; 
0x000000001091a5: add [rdi], cl; test [rcx+0x48000000], ebx; add esp, 0x68; ret; 
0x00000000050325: add [rdi], cl; test [rcx+0x48000000], ecx; add esp, 0x10; pop rbx; ret; 
0x000000001092e6: add [rdi], cl; test [rcx+0x48000000], esi; add esp, 0x30; pop rbx; ret; 
0x000000000fb85c: add [rdi], cl; test [rcx+rax+0x18e80000], ecx; out 0xfd, eax; jmp qword ptr [rsp+rax*2-0x77]; 
0x00000000176b47: add [rdi], cl; test [rdx-0x1600000a], esp; in eax, dx; idiv edi; jmp qword ptr [rsi+0x66]; 
0x000000000de10f: add [rdi], cl; test [rsi+rdi*8+0x3d80ffff], bh; ret far; 
0x00000000190018: add [rdi], cl; test al, bl; add [rax], al; add [rcx-0x77], cl; ret; 
0x00000000126da3: add [rdi], cl; test ebx, edx; add [rax], al; add cl, cl; ret; 
0x00000000150163: add [rdi], cl; xchg ebp, eax; ror byte ptr [rcx+0x1b803], 0x0; add bl, ch; ret; 
0x0000000014925c: add [rdi], cl; xchg edi, eax; ret; 
0x0000000014a62c: add [rdi], ecx; enter 0x289, 0xb8; add [rax], eax; add [rax], al; ret; 
0x00000000149d15: add [rdi], ecx; enter 0x4789, 0x48; mov eax, 0x1; ret; 
0x0000000008e5fd: add [rdi], ecx; mov dh, 0x36; call qword ptr [rax+0x18]; 
0x000000000a4b43: add [rdi], ecx; mov esi, 0xf2390714; je short 0x00000000000a4b40; ret; 
0x000000001249cc: add [rdi], ecx; test [rbp-0x17ffffff], bh; or [rbx-0xf], cl; dec dword ptr [rax-0x7d]; ret; 
0x00000000046d4c: add [rdi], ecx; test [rbp-0x7cffffff], cl; jmp qword ptr [rdi+rcx]; 
0x0000000017203e: add [rdi], ecx; test [rbx+0x3], ecx; add [rax], al; ret; 
0x00000000112bf1: add [rdi], ecx; test [rcx], bl; add al, [rax]; add bh, dh; ret; 
0x0000000018401f: add [rdi], ecx; test [rdx+0x1], edi; add [rax], al; vzeroupper; ret; 
0x00000000184a87: add [rdi], ecx; test [rdx+0x4], eax; add [rax], al; vzeroupper; ret; 
0x00000000184d53: add [rdi], ecx; test [rsi+0x1], esi; add [rax], al; vzeroupper; ret; 
0x00000000103690: add [rdi], ecx; xchg ebp, eax; ret; 
0x0000000017203d: add [rdi], rcx; test [rbx+0x3], ecx; add [rax], al; ret; 
0x0000000008052f: add [rdx+0x10], bh; mov rsi, r13; mov rdi, r15; call qword ptr [r14+0x38]; 
0x0000000008052e: add [rdx+0x10], dil; mov rsi, r13; mov rdi, r15; call qword ptr [r14+0x38]; 
0x0000000007bf50: add [rdx+0x1], bh; jmp rcx; 
0x0000000008cdf8: add [rdx+0x1], bh; mov rdi, rbx; call qword ptr [r12+0x48]; 
0x00000000086995: add [rdx+0x1], bh; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x000000000897d7: add [rdx+0x1], bh; mov rsi, rbx; mov edi, 0x2; mov eax, r9d; syscall; 
0x000000000897d6: add [rdx+0x1], dil; mov rsi, rbx; mov edi, 0x2; mov eax, r9d; syscall; 
0x0000000014b7eb: add [rdx+0x1e], ch; lea r8, [rip-0x5d05]; lea rdx, [rip-0x5cec]; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x00000000159810: add [rdx+0x2], ch; call qword ptr [rax+0x270]; 
0x000000000fd8a3: add [rdx+0x2], edi; cmove eax, edx; ret; 
0x00000000189cd0: add [rdx+0x2], esi; mov [rdi], cl; ret; 
0x000000000b722f: add [rdx+0x30178816], cl; in eax, dx; mov [rdi+0x1], ch; ret; 
0x000000000a1e14: add [rdx+0x38], eax; pop rsp; syscall; 
0x000000000a1e15: add [rdx+0x38], eax; pop rsp; syscall; 
0x0000000014cc49: add [rdx+0x3c], ch; lea r9, [rsp+0x2a]; call qword ptr [rax]; 
0x0000000011b75f: add [rdx+0x40], bh; mov eax, 0x14; syscall; 
0x000000000e0b45: add [rdx+0x40], bh; mov eax, 0x20; cmove rax, rdx; ret; 
0x0000000017022f: add [rdx+0x48028801], cl; mov eax, edi; ret; 
0x000000000afcc4: add [rdx+0x48028801], ecx; mov eax, edi; ret; 
0x00000000189601: add [rdx+0x4], esi; mov cl, [rsi]; mov [rdi], cl; ret; 
0x000000000daee3: add [rdx+0x4c], dl; mov ecx, [rsp+0x20]; mov rdx, [rsp+0x28]; mov rax, [rsp+0x18]; call rax; 
0x0000000009115a: add [rdx+0x5f], edi; mov eax, 0x16; cmove eax, edx; ret; 
0x00000000103f52: add [rdx+0x63], cl; adc al, 0x89; add rdx, rcx; notrack jmp rdx; 
0x000000000364bb: add [rdx+0x63], cl; or al, 0x8f; add rcx, rdi; notrack jmp rcx; 
0x00000000116e0a: add [rdx+0x64], bh; mov eax, [rax+0x38]; test eax, eax; cmove eax, edx; ret; 
0x000000000e09eb: add [rdx+0x7d00], bh; cmove rax, rdx; ret; 
0x000000000e0a39: add [rdx+0x7f], bh; cmovne rax, rdx; ret; 
0x000000001193eb: add [rdx+0x8], bh; syscall; 
0x000000000e09d1: add [rdx+0xfde8], bh; cmove rax, rdx; ret; 
0x0000000013a589: add [rdx+rdx*8+0xf451975], al; mov dh, 0x7d; or [rcx-0x80], al; jmp qword ptr [rax]; 
0x00000000045546: add [rdx-0x1], bh; pop rbx; test eax, eax; cmovs eax, edx; ret; 
0x0000000018a38e: add [rdx-0x2f], esp; jge short 0x000000000018a3db; out 0x49, eax; jmp qword ptr [rdx-0x2f]; 
0x0000000018955a: add [rdx-0x2f], esp; jl short 0x00000000001895a7; adc [rcx-0x2], edx; vmovups [r9-0x40], zmm3; ret; 
0x0000000018a20b: add [rdx-0x2f], esp; std; jg short 0x000000000018a25b; jmp qword ptr [rdx-0x2f]; 
0x000000000b3e3e: add [rdx-0x3ce877ea], cl; nop [rax+rax]; mov dx, [rsi]; mov [rdi], dx; ret; 
0x0000000011984b: add [rdx-0x9], esi; dec dword ptr [rbx+0x48082444]; add esp, 0x18; ret; 
0x0000000018a1dc: add [rdx-0xf], ah; dec byte ptr [rax+0x6f]; add [rdx-0xf], esp; dec byte ptr [rax+0x6f]; jmp qword ptr [r10-0xf]; 
0x0000000018a1e2: add [rdx-0xf], esp; dec byte ptr [rax+0x6f]; jmp qword ptr [r10-0xf]; 
0x00000000189c67: add [rdx-0xf], esp; jl short 0x0000000000189cb4; adc [rsi-0x2], edx; vmovups [rsi-0x40], zmm2; ret; 
0x00000000189da7: add [rdx-0xf], esp; jl short 0x0000000000189df4; adc [rsi+0x2], edx; vmovups [rsi+0xc0], zmm2; ret; 
0x000000001411f1: add [rdx], ah; add [rax], al; add [rax+0x22], bh; pop rbx; ret; 
0x0000000003900b: add [rdx], al; add [rax], al; mov fs:[rdx], rax; ret; 
0x00000000038bc7: add [rdx], al; add [rax], al; ret; 
0x000000001414bc: add [rdx], al; add rsp, 0x8; lea rax, [rip+0xa77d7]; ret; 
0x0000000002bba6: add [rdx], al; add rsp, 0x8; ret; 
0x0000000012170e: add [rdx], al; and eax, ecx; mov [rsp+0x20], cl; mov [rsp+0x1f], al; call qword ptr [r12+0x28]; 
0x00000000121825: add [rdx], al; call rax; 
0x000000000923cb: add [rdx], al; jbe short 0x00000000000923d0; ret; 
0x000000000b8ce7: add [rdx], al; lea rax, [rip+0x124c0]; cmovne rax, rdx; ret; 
0x0000000009d4a0: add [rdx], al; lea rax, [rip+0x15857]; lea rdx, [rip+0xd5a10]; cmovne rax, rdx; ret; 
0x0000000009c280: add [rdx], al; lea rax, [rip+0x16987]; lea rdx, [rip+0xd2900]; cmovne rax, rdx; ret; 
0x0000000009c150: add [rdx], al; lea rax, [rip+0x19b27]; lea rdx, [rip+0x12110]; cmovne rax, rdx; ret; 
0x0000000009d500: add [rdx], al; lea rax, [rip+0x7c77]; lea rdx, [rip+0xd71c0]; cmovne rax, rdx; ret; 
0x0000000009c6b0: add [rdx], al; lea rax, [rip+0x8b37]; lea rdx, [rip+0xd3c80]; cmovne rax, rdx; ret; 
0x0000000009c5e0: add [rdx], al; lea rax, [rip+0x8b47]; lea rdx, [rip+0x138a0]; cmovne rax, rdx; ret; 
0x0000000009c200: add [rdx], al; lea rax, [rip+0x9047]; lea rdx, [rip+0xc0d00]; cmovne rax, rdx; ret; 
0x00000000123e1f: add [rdx], al; mov rdx, rax; call qword ptr [r13+0x28]; 
0x000000001222e4: add [rdx], al; mov rdx, rax; call qword ptr [rbx+0x28]; 
0x00000000121985: add [rdx], al; mov rsi, rbp; mov [rsp+0x10], rax; mov rdx, rax; call qword ptr [r12+0x28]; 
0x00000000156343: add [rdx], bh; cmovne rax, rdx; add rsp, 0x8; ret; 
0x00000000099c2c: add [rdx], bh; cmp rax, 0xffffffffffffffff; cmove rax, rdx; add rsp, 0x8; ret; 
0x0000000003fb29: add [rdx], ch; add [rax], al; add [rcx+rcx*4-0x30], cl; ret; 
0x00000000159861: add [rdx], ch; call qword ptr [rax+0x270]; 
0x000000000cce2b: add [rdx], ch; lea r8, [rsp+0x40]; call qword ptr [rax+0x270]; 
0x00000000159d94: add [rdx], ch; mov rdi, rbp; push r8; mov r8, rbx; call qword ptr [rax+0x270]; 
0x000000000cce29: add [rdx], ch; push 0x0; lea r8, [rsp+0x40]; call qword ptr [rax+0x270]; 
0x00000000121bdb: add [rdx], cl; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000137092: add [rdx], eax; pop rbx; ret; 
0x000000000b949e: add [rdx], ebp; lea rcx, [rax+0x1]; mov rdi, [r12]; lea r9, [rsp+0x28]; call rbx; 
0x000000000b9608: add [rdx], ebp; lea rcx, [rax+0x4]; lea r9, [rsp+0x18]; call rbx; 
0x000000000b9a2a: add [rdx], ebp; lea rcx, [rax+0x4]; lea r9, [rsp+0x20]; call rbx; 
0x000000000c6fe6: add [rdx], ebp; mov r9, [rsp+0x10]; call r13; 
0x0000000010fbcd: add [rdx], ecx; add al, ch; jnp short 0x000000000010fb61; bnd jmp qword ptr [rsi+0x2e]; 
0x00000000137091: add [rdx], r8d; pop rbx; ret; 
0x00000000168047: add [rip+0x14634900], al; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000167ec7: add [rip+0x14634900], eax; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000010e50b: add [rip+0x410000], bh; je short 0x000000000010e540; mov eax, 0x101; syscall; 
0x0000000010e50a: add [rip+0x410000], dil; je short 0x000000000010e540; mov eax, 0x101; syscall; 
0x00000000040471: add [rip+0x7fff], ah; or eax, edx; mov [rsp+0x10], eax; fld st, tbyte ptr [rsp+0x8]; ret; 
0x0000000018861f: add [rip+0xff], ah; and ecx, 0xff; sub eax, ecx; ret; 
0x0000000018861e: add [rip+0xff], spl; and ecx, 0xff; sub eax, ecx; ret; 
0x00000000187d52: add [rip+0xffff], ah; and ecx, 0xffff; sub eax, ecx; ret; 
0x00000000118f79: add [rip-0x1000], ah; or eax, edx; ret; 
0x0000000005f807: add [rip-0x13317], ch; jmp qword ptr [rsi-0x70]; 
0x0000000008ce25: add [rip-0x16141c8c], bl; nop [rax+rax]; xor eax, eax; ret; 
0x000000000df450: add [rip-0x17000000], cl; ret far; 
0x0000000014120c: add [rip-0x48000000], bl; sbb eax, 0x5b000000; ret; 
0x0000000005db67: add [rip-0x4e117], ch; jmp qword ptr [rsi-0x70]; 
0x0000000005e4e7: add [rip-0x6ea17], ch; jmp qword ptr [rsi-0x70]; 
0x0000000009210c: add [rsi+0x1], dh; ret; 
0x000000000e098c: add [rsi+0x29], bh; mov eax, 0x7fffffff; cmp rdx, 0x58465342; jne short 0x00000000000e09a0; ret; 
0x00000000115b7a: add [rsi+0x2b], dh; mov rsi, r12; mov rdi, r14; call r13; 
0x0000000002a6b5: add [rsi+0x2e], ah; nop [rax+rax]; endbr64; mov rax, [rip+0x1baf9d]; ret; 
0x00000000028ba4: add [rsi+0x2e], ah; nop [rax+rax]; nop; endbr64; ret; 
0x000000001149ac: add [rsi+0x3], bh; je short 0x00000000001149e5; mov rdi, rbp; xor esi, esi; call r12; 
0x00000000114a3c: add [rsi+0x3], bh; je short 0x0000000000114a75; mov rdi, rbp; xor esi, esi; call r12; 
0x000000001157c3: add [rsi+0x3], bh; je short 0x00000000001157fa; mov rdi, rbp; xor esi, esi; call r12; 
0x00000000115874: add [rsi+0x3], bh; je short 0x00000000001158ad; mov rdi, rbp; xor esi, esi; call r12; 
0x0000000014c03a: add [rsi+0x4], bh; mov rdi, rbp; lea r8, [rip-0x929a]; lea rdx, [rip+0x389f]; call qword ptr [rax]; 
0x00000000142025: add [rsi+0x4], bh; mov rdi, rbp; lea r9, [rsp+0x20]; call qword ptr [rax]; 
0x0000000010e84e: add [rsi+0x5401], bh; mov eax, r8d; mov ebx, fs:[r10]; syscall; 
0x0000000010ead4: add [rsi+0x5409], bh; mov eax, 0x10; syscall; 
0x0000000010eb05: add [rsi+0x5409], bh; mov r8d, eax; mov eax, 0x10; syscall; 
0x0000000009b272: add [rsi+0x66], ah; nop [rax+rax]; xchg ax, ax; endbr64; ret; 
0x00000000090b4e: add [rsi+0x80], bh; mov eax, 0xca; syscall; 
0x000000000913ac: add [rsi+0x80], bh; mov eax, 0xcc; syscall; 
0x0000000015c6cb: add [rsi+0x80], bh; syscall; 
0x000000000dda2c: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x109a62]; syscall; 
0x000000000dd8ec: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x109ba2]; syscall; 
0x000000000dd834: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x109c5a]; syscall; 
0x000000000dd758: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x109d2e]; syscall; 
0x000000000dd588: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x109ebe]; syscall; 
0x000000000dd3c4: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x10a03a]; syscall; 
0x000000000dd00a: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x10a39c]; syscall; 
0x000000000dbd5c: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x10b5c2]; syscall; 
0x000000000dbc1c: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x10b702]; syscall; 
0x000000000dbb64: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x10b7ba]; syscall; 
0x000000000db798: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x10bb7e]; syscall; 
0x000000000db5c8: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x10bd0e]; syscall; 
0x000000000db404: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x10be8a]; syscall; 
0x000000000dab0c: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x10c72a]; syscall; 
0x000000000ceb38: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1185f6]; syscall; 
0x000000000ce944: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1187ea]; syscall; 
0x000000000c6678: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x11efd6]; syscall; 
0x00000000099898: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x14a2f6]; syscall; 
0x0000000009b228: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x14bcce]; syscall; 
0x0000000009afa4: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x14bf52]; syscall; 
0x0000000009adc4: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x14c132]; syscall; 
0x0000000009abd8: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x14c31e]; syscall; 
0x0000000009ab68: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x14c38e]; syscall; 
0x00000000096ee8: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x14cca6]; syscall; 
0x00000000096e88: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x14cd06]; syscall; 
0x00000000096ab8: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x14d0d6]; syscall; 
0x00000000096858: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x14d336]; syscall; 
0x00000000096210: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x14d97e]; syscall; 
0x000000000961d8: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x14d9b6]; syscall; 
0x00000000097eb7: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x14efb7]; syscall; 
0x0000000009741c: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x14fa42]; syscall; 
0x000000000930f3: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x153d7b]; syscall; 
0x00000000093077: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x153de7]; syscall; 
0x00000000092dd0: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x15409e]; syscall; 
0x00000000092b24: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x15434a]; syscall; 
0x00000000092059: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x154795]; syscall; 
0x00000000091eb4: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x15493a]; syscall; 
0x00000000091d28: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x154ac6]; syscall; 
0x0000000008ff2b: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x156733]; syscall; 
0x0000000008f9ea: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x156c74]; syscall; 
0x0000000008f65a: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x157004]; syscall; 
0x0000000008f2fa: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x157364]; syscall; 
0x0000000008dbd6: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x158a88]; syscall; 
0x0000000008d8e6: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x158d78]; syscall; 
0x0000000008d5e2: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x15907c]; syscall; 
0x00000000080cc7: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x165957]; syscall; 
0x000000000808cb: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x165d53]; syscall; 
0x0000000008081f: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x165dff]; syscall; 
0x0000000007e978: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x166cd6]; syscall; 
0x0000000005f19c: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x18745a]; syscall; 
0x0000000005ef18: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1876da]; syscall; 
0x0000000005cd94: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x18984a]; syscall; 
0x0000000005cc54: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x18998a]; syscall; 
0x00000000052e7c: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x193742]; syscall; 
0x00000000052cb8: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x193906]; syscall; 
0x000000000527a8: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x193e16]; syscall; 
0x0000000005039c: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x195ff2]; syscall; 
0x00000000050218: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x196176]; syscall; 
0x000000000501b8: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1961d6]; syscall; 
0x00000000045a54: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1a0902]; syscall; 
0x00000000045994: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1a09c2]; syscall; 
0x000000000458cc: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1a0a8a]; syscall; 
0x000000000457f4: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1a0b62]; syscall; 
0x000000000448ec: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1a11ea]; syscall; 
0x00000000044827: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1a12af]; syscall; 
0x00000000044684: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1a1452]; syscall; 
0x000000000445ab: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1a152b]; syscall; 
0x0000000003d015: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1a89e1]; syscall; 
0x0000000003b68a: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1aa334]; syscall; 
0x0000000003a4d9: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1ab435]; syscall; 
0x0000000003a4b9: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1ab455]; syscall; 
0x0000000003a34f: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1ab5bf]; syscall; 
0x0000000002ac5c: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1ba9f2]; syscall; 
0x0000000002aaf0: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1bab5e]; syscall; 
0x0000000002a9f8: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1bac56]; syscall; 
0x00000000026846: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1bf258]; syscall; 
0x00000000191974: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x54162]; syscall; 
0x00000000191b34: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x54cba]; syscall; 
0x00000000191e54: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x567f2]; syscall; 
0x00000000158054: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x9107e]; syscall; 
0x00000000156d5c: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x92376]; syscall; 
0x00000000156c7c: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x92456]; syscall; 
0x00000000156a94: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x9263e]; syscall; 
0x00000000156a04: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x926ce]; syscall; 
0x00000000156964: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x9276e]; syscall; 
0x000000001568b4: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x9281e]; syscall; 
0x000000001564e4: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x92bee]; syscall; 
0x0000000014c2e4: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x9cbd2]; syscall; 
0x0000000014c184: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x9cd32]; syscall; 
0x0000000014bf78: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x9cf3e]; syscall; 
0x0000000014bdd8: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x9d0de]; syscall; 
0x0000000014bc44: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x9d272]; syscall; 
0x0000000014bb04: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x9d3b2]; syscall; 
0x0000000014b9a4: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x9d512]; syscall; 
0x0000000014b894: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x9d622]; syscall; 
0x00000000148404: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xa0a96]; syscall; 
0x0000000013f4d0: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xa977e]; syscall; 
0x0000000013f1a0: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xa9aae]; syscall; 
0x0000000013ee20: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xa9e2e]; syscall; 
0x0000000013ec22: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xaa02c]; syscall; 
0x0000000013ea98: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xaa1b6]; syscall; 
0x0000000013e85b: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xaa3f3]; syscall; 
0x0000000013de14: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xaad72]; syscall; 
0x0000000013dc93: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xaaef3]; syscall; 
0x0000000013dc59: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xaaf2d]; syscall; 
0x0000000013db4c: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xab03a]; syscall; 
0x0000000013d30c: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xab87a]; syscall; 
0x0000000013d244: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xab942]; syscall; 
0x0000000013d128: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xaba5e]; syscall; 
0x0000000013bd95: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xacba1]; syscall; 
0x00000000138514: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb0132]; syscall; 
0x00000000138238: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb040e]; syscall; 
0x00000000133f58: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb46da]; syscall; 
0x000000001339d8: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb4c3e]; syscall; 
0x00000000133814: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb4dba]; syscall; 
0x0000000013374c: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb4e22]; syscall; 
0x0000000013360c: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb4f62]; syscall; 
0x00000000133554: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb501a]; syscall; 
0x00000000132e64: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb5702]; syscall; 
0x00000000132b34: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb5a32]; syscall; 
0x00000000132978: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb5bee]; syscall; 
0x0000000013245e: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb6064]; syscall; 
0x0000000012eb6c: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb983a]; syscall; 
0x0000000012ea2c: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb997a]; syscall; 
0x0000000012e974: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb9a32]; syscall; 
0x0000000012e888: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb9b16]; syscall; 
0x0000000012e6b8: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb9cb6]; syscall; 
0x0000000012e4f4: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb9e52]; syscall; 
0x0000000012e42c: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb9eca]; syscall; 
0x0000000012e2ec: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xba00a]; syscall; 
0x0000000012e234: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xba0c2]; syscall; 
0x0000000012e154: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xba19a]; syscall; 
0x0000000012dc88: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xba5ee]; syscall; 
0x0000000012d6b8: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbab5e]; syscall; 
0x0000000012d198: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbb036]; syscall; 
0x0000000012cfcc: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbb1c2]; syscall; 
0x0000000012ce8c: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbb302]; syscall; 
0x0000000012cdd4: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbb3ba]; syscall; 
0x0000000012ccf4: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbb492]; syscall; 
0x0000000012c8d8: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbb866]; syscall; 
0x0000000012c2bc: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbbe22]; syscall; 
0x0000000012c164: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbbf7a]; syscall; 
0x0000000012c0a4: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbc03a]; syscall; 
0x0000000012bfbc: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbc11a]; syscall; 
0x0000000012bed8: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbc1c6]; syscall; 
0x0000000012b878: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbc7e6]; syscall; 
0x0000000012b66c: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbc9aa]; syscall; 
0x0000000012b514: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbcb02]; syscall; 
0x0000000012b454: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbcbc2]; syscall; 
0x0000000012b36c: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbcca2]; syscall; 
0x0000000012a758: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbd83e]; syscall; 
0x0000000012a4e8: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbda6e]; syscall; 
0x00000000129d68: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbe18e]; syscall; 
0x0000000012030c: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xc7b32]; syscall; 
0x000000001201cc: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xc7c72]; syscall; 
0x00000000120114: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xc7d2a]; syscall; 
0x0000000011fd3a: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xc80fc]; syscall; 
0x0000000011fb10: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xc82ee]; syscall; 
0x0000000011f948: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xc846e]; syscall; 
0x0000000011f784: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xc85ea]; syscall; 
0x0000000011f6b4: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xc8666]; syscall; 
0x0000000011f5e4: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xc8736]; syscall; 
0x0000000011f548: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xc87d2]; syscall; 
0x0000000011eaac: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xc923a]; syscall; 
0x0000000011e96c: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xc937a]; syscall; 
0x0000000011e8b4: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xc9432]; syscall; 
0x0000000011e2ba: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xc9a24]; syscall; 
0x0000000011e0b8: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xc9bce]; syscall; 
0x0000000011ded8: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xc9d46]; syscall; 
0x0000000011dd14: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xc9ea2]; syscall; 
0x00000000113614: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xd422a]; syscall; 
0x000000001134f8: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xd4346]; syscall; 
0x00000000113098: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xd47a6]; syscall; 
0x00000000112b67: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xd4cd7]; syscall; 
0x00000000101558: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xe6056]; syscall; 
0x000000000272bd: add [rsi+0x81], bh; mov eax, 0xca; syscall; 
0x000000000973f1: add [rsi+0x81], bh; mov eax, ebx; syscall; 
0x00000000044cbd: add [rsi+0x81], bh; mov rdi, r12; mov eax, 0xca; syscall; 
0x000000000452b6: add [rsi+0x81], bh; mov rdi, r13; mov eax, 0xca; syscall; 
0x00000000044ad6: add [rsi+0x81], bh; mov rdi, r14; mov eax, 0xca; syscall; 
0x000000000918fd: add [rsi+0x81], bh; mov rdi, rbp; mov eax, 0xca; syscall; 
0x000000000982aa: add [rsi+0x81], bh; mov rdi, rbx; mov eax, 0xca; syscall; 
0x0000000009921f: add [rsi+0x81], bh; mov rdi, rcx; mov eax, 0xca; syscall; 
0x00000000148685: add [rsi+0x8], bh; mov rdi, rbp; call qword ptr [rax+0x30]; 
0x000000000afc51: add [rsi+0xf], ah; adc al, [rcx]; movlpd [rdx], xmm0; mov rax, rdi; ret; 
0x00000000040f0b: add [rsi+0xf], ah; fild st, dword ptr [rip+0x17585c]; por xmm0, xmm1; ret; 
0x0000000008fc74: add [rsi+0xf], ah; out dx, eax; ror byte ptr [rdi], 0x11; pop rbx; ret; 
0x000000000f526a: add [rsi+0xf], ah; out dx, eax; ror byte ptr [rdi], 0x84; ret far; 
0x000000000f3866: add [rsi+0xf], ah; outsb dx, [rsi]; ret; 
0x00000000059fdc: add [rsi+0xf], ah; outsd dx, [rsi]; adc [rax-0xdf6b], ecx; jmp qword ptr [rsi+0xf]; 
0x0000000014b603: add [rsi+0xf], ah; outsd dx, [rsi]; add eax, 0x6b684; movaps [rsp+0x20], xmm0; call qword ptr [rax+0x28]; 
0x0000000011c2af: add [rsi+0xf], ah; outsd dx, [rsi]; ret; 
0x00000000040965: add [rsi+0xf], ah; push rsi; or eax, 0x175d92; mulsd xmm0, xmm1; ret; 
0x0000000004093f: add [rsi+0xf], ah; push rsi; or eax, 0x175dc8; mulsd xmm0, xmm1; ret; 
0x000000000407db: add [rsi+0xf], ah; push rsp; or eax, 0x175efc; orpd xmm0, xmm1; ret; 
0x000000000a886c: add [rsi+0xf], ah; xlat [rbx]; ret; 
0x000000000a8891: add [rsi+0xf], ah; xlat [rbx]; ror dword ptr [rdi], 0xbd; ror byte ptr [rax+0x1], 0xf8; ret; 
0x000000000afc55: add [rsi+0xf], esp; adc eax, [rdx]; mov rax, rdi; ret; 
0x0000000010ded7: add [rsi+rcx+0x48], dh; mov dword ptr [rdi], 0xffffffff; ret; 
0x00000000083f4f: add [rsi-0x1], bh; call qword ptr [rax+0x18]; 
0x0000000008bbf9: add [rsi-0x1], bh; mov rdi, rbp; call qword ptr [rax+0x18]; 
0x0000000008e110: add [rsi-0x1], bh; mov rdi, rbp; call qword ptr [rbx+0x18]; 
0x0000000008f8c5: add [rsi-0x1], bh; mov rdi, rbx; call qword ptr [r15+0x18]; 
0x0000000008e8e7: add [rsi-0x1], bh; mov rdi, rbx; call qword ptr [rax+0x18]; 
0x0000000009281e: add [rsi-0x59], dh; add rsp, 0x8; ret; 
0x0000000008a40d: add [rsi-0x70], ah; endbr64; and dword ptr [rdi], 0xffffffcf; ret; 
0x000000001199fd: add [rsi-0x70], ah; endbr64; mov eax, 0x11f; syscall; 
0x00000000119b7d: add [rsi-0x70], ah; endbr64; mov eax, 0x131; syscall; 
0x0000000010e5ed: add [rsi-0x70], ah; endbr64; mov eax, 0x1; syscall; 
0x000000000d01dd: add [rsi-0x70], ah; endbr64; mov eax, 0x24; syscall; 
0x000000000dfafd: add [rsi-0x70], ah; endbr64; mov eax, 0x27; syscall; 
0x0000000010891d: add [rsi-0x70], ah; endbr64; mov eax, 0x53; syscall; 
0x000000000dfdad: add [rsi-0x70], ah; endbr64; mov eax, 0x79; syscall; 
0x0000000010fd4d: add [rsi-0x70], ah; endbr64; mov eax, 0xaa; syscall; 
0x000000000ccd7d: add [rsi-0x70], ah; endbr64; mov eax, 0xc9; syscall; 
0x00000000119b3d: add [rsi-0x70], ah; endbr64; mov r10, rcx; mov eax, 0x137; syscall; 
0x00000000038f5d: add [rsi-0x70], ah; endbr64; mov rax, [rip+0x1a9e65]; add rax, fs:[0x0]; ret; 
0x0000000013c01d: add [rsi-0x70], ah; endbr64; mov rax, [rip+0xa6fbd]; mov rax, fs:[rax]; ret; 
0x0000000009b27d: add [rsi-0x70], ah; endbr64; ret; 
0x0000000017220d: add [rsi-0x70], ah; mov [rcx], dx; ret; 
0x0000000017223d: add [rsi-0x70], ah; mov [rcx], edx; mov [rcx+0x4], dl; ret; 
0x000000000b414d: add [rsi-0x70], ah; mov [rdi], dx; ret; 
0x000000000b417d: add [rsi-0x70], ah; mov [rdi], edx; mov [rdi+0x4], dl; ret; 
0x0000000017455d: add [rsi-0x70], ah; mov al, [rcx]; mov [rdx], al; lea rax, [rdx]; ret; 
0x000000000b315d: add [rsi-0x70], ah; mov dx, [rsi]; mov [rdi], dx; ret; 
0x0000000014205d: add [rsi-0x70], ah; mov rax, [rbp+0x8]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x0000000014165d: add [rsi-0x70], ah; mov rax, [rbx+0x20]; mov rsi, r13; mov rdi, rbp; call qword ptr [rax+0x8]; 
0x00000000089a4d: add [rsi-0x70], ah; mov rsi, rbx; mov edi, 0x2; mov eax, r9d; syscall; 
0x000000000b574d: add [rsi-0x70], ah; movdqu xmm0, [rsi]; movdqu [rdi], xmm0; lea rax, [rdi+0x10]; ret; 
0x000000000b48ed: add [rsi-0x70], ah; movdqu xmm0, [rsi]; movdqu [rdi], xmm0; lea rax, [rdi+0xf]; ret; 
0x000000000363cd: add [rsi-0x70], ah; ret; 
0x000000000b721d: add [rsi-0x70], ah; xor ch, ch; mov [rdi], ch; ret; 
0x000000000cb35d: add [rsi-0x70], ah; xor rax, rax; ret; 
0x0000000017023f: add [rsi-0x75], ah; add [rsi-0x77], esp; add cl, [rax-0x77]; clc; ret; 
0x000000000404e4: add [rsi-0x77], ah; and al, 0xf0; fstp tbyte ptr [rdi], st; fld st, tbyte ptr [rsp-0x18]; ret; 
0x00000000146f24: add [rsi-0x77], ah; insb [rdi], dx; mov eax, 0x1; ret; 
0x000000001351aa: add [rsi-0x77], ah; rol r14, 0x45; ret; 
0x000000000afcd7: add [rsi-0x77], esp; add cl, [rax-0x77]; clc; ret; 
0x000000000afce7: add [rsi-0x77], esp; add cl, [rdx+0x42880241]; add cl, [rax-0x77]; clc; ret; 
0x0000000004241d: add [rsi], ah; add [rax], al; add [rax-0x1], bh; ret; 
0x000000001761dc: add [rsi], al; add [rax], al; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x00000000141249: add [rsi], dl; add [rax], al; add [rax+0x16], bh; ret; 
0x0000000010d4c9: add [rsi], dl; add [rax], al; add [rax+0x1], bh; ret; 
0x00000000041929: add [rsi], dl; add [rax], al; add [rax-0x1], bh; ret; 
0x00000000156ca1: add [rsi], dl; add [rax], al; add [rcx+rcx*4-0x40], al; mov qword ptr [rdx], 0x0; ret; 
0x000000000dec49: add [rsi], dl; add [rax], al; add bl, ch; ret; 
0x0000000010aff4: add [rsp+rax*2-0x75], ah; xor ebp, eax; mov bl, 0xf1; jmp qword ptr [rsp+rax*2-0x77]; 
0x000000000c2c8c: add [rsp+rax+0x44], dh; mov eax, eax; ret; 
0x0000000005e05c: add ah, [rax]; add [rax], al; add cl, ch; idiv bh; jmp qword ptr [rsi+0x2e]; 
0x0000000012170f: add ah, [rcx]; enter 0x4c88, 0x24; and [rax+0x411f2444], cl; call qword ptr [rsp+0x28]; 
0x00000000189dae: add ah, [rdx-0xf]; jl short 0x0000000000189dfb; adc [rsi+0x3], edx; ret; 
0x000000000afe1c: add ah, [rsi+0xf]; adc cl, [rcx+0x5]; movlpd [rdx+0x5], xmm1; mov rax, rdi; ret; 
0x000000000afe3c: add ah, [rsi+0xf]; adc cl, [rcx+0x6]; movlpd [rdx+0x6], xmm1; mov rax, rdi; ret; 
0x000000000afe5c: add ah, [rsi+0xf]; adc cl, [rcx+0x7]; movlpd [rdx+0x7], xmm1; mov rax, rdi; ret; 
0x000000000b29ac: add ah, [rsi+0xf]; adc cl, [rcx+0x8]; movlpd [rdx+0x8], xmm1; mov rax, rdi; ret; 
0x000000000afcab: add ah, [rsi+0xf]; adc ecx, [rdx+0x8]; mov rax, rdi; ret; 
0x000000000afcd4: add ah, [rsi-0x75]; add [rsi-0x77], esp; add cl, [rax-0x77]; clc; ret; 
0x000000001745c3: add ah, [rsi-0x75]; add al, 0x66; mov [rdx+0x4], eax; lea rax, [rdx+0x5]; ret; 
0x000000000afd38: add ah, [rsi-0x75]; add al, 0x66; mov [rdx+0x4], eax; mov rax, rdi; ret; 
0x000000000afdbc: add ah, [rsi-0x75]; or [r14-0x77], spl; or [rax-0x77], cl; clc; ret; 
0x000000000b7255: add ah, [rsi-0x77]; js 0xffffffffed3b74b5; mov [rdi+0x3], ch; ret; 
0x000000000b84da: add ah, bh; add eax, [rax]; cmp edx, 0xff; cmove rax, rcx; ret; 
0x000000000b84bf: add ah, bh; add eax, [rax]; ret; 
0x000000000b85b9: add ah, bh; inc dword ptr [rbx]; div ecx; mov eax, eax; ret; 
0x000000000b850a: add ah, bh; inc dword ptr [rbx]; ret; 
0x000000000ea24c: add al, 0x0; add [rax-0x7d], cl; ret; 
0x00000000146f52: add al, 0x0; add [rax], al; add [rax+0x1], bh; ret; 
0x00000000142027: add al, 0x0; add [rax], al; mov rdi, rbp; lea r9, [rsp+0x20]; call qword ptr [rax]; 
0x0000000014b600: add al, 0x0; add [rax], al; movdqa xmm0, [rip+0x6b684]; movaps [rsp+0x20], xmm0; call qword ptr [rax+0x28]; 
0x0000000014d711: add al, 0x0; add [rax], al; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x000000000cbb53: add al, 0x0; add [rax], al; ret; 
0x00000000108044: add al, 0x0; add [rax], al; syscall; 
0x000000000604e6: add al, 0x0; add [rbp+0x41], bl; pop rsp; pop r13; ret; 
0x000000000bf800: add al, 0x0; add [rbp-0x2571f025], al; add eax, [rax]; add [rbp+0x6348ff43], cl; ret far; 
0x000000000bf801: add al, 0x0; add [rbp-0x2571f025], al; add eax, [rax]; add [rbp+0x6348ff43], cl; ret far; 
0x000000000a7d28: add al, 0x0; add [rbp-0x77], cl; ret far; 
0x000000000f374d: add al, 0x0; add [rbx+0xf4801e2], al; ret; 
0x00000000133035: add al, 0x0; add [rcx+rcx*4-0x2], cl; mov rdi, r12; call rbp; 
0x00000000050b35: add al, 0x0; add [rcx+rcx*4-0x40], cl; ret; 
0x0000000012f3da: add al, 0x0; add [rcx+rcx*4-0x6], cl; mov rsi, r14; mov rdi, rbx; call rax; 
0x00000000078e6d: add al, 0x0; add [rcx-0x7d], al; in al, dx; add [rax-0x8e443], eax; jmp qword ptr [rax]; 
0x00000000105dbd: add al, 0x0; add [rcx-0x80], al; jmp qword ptr [rdx]; 
0x000000000453da: add al, 0x0; add [rcx], al; lea rdi, [rbp+0x988]; call qword ptr [rbp+0xf90]; 
0x00000000051a3d: add al, 0x0; add [rcx], dh; shr cl, 0xfd; idiv edi; jmp qword ptr [rsi+0xf]; 
0x00000000121823: add al, 0x0; add [rdx], al; call rax; 
0x0000000009210a: add al, 0x0; add [rsi+0x1], dh; ret; 
0x000000000b3e1d: add al, 0x0; add bl, al; nop [rax+rax]; nop [rax]; ret; 
0x0000000012763d: add al, 0x0; cmovne rax, rdx; ret; 
0x00000000041c8c: add al, 0x0; mov eax, [rsp+0x8]; add rsp, 0x18; ret; 
0x00000000046422: add al, 0x0; mov rax, [rsp+0x8]; add rsp, 0x28; ret; 
0x0000000015cf9f: add al, 0x0; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000168dc7: add al, 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001681c8: add al, 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000041b8b: add al, 0x0; test eax, eax; jne short 0x0000000000041ba0; add rsp, 0x8; ret; 
0x000000000c2c84: add al, 0x10; cmp r8d, 0xff; je short 0x00000000000c2c93; mov eax, r8d; ret; 
0x00000000145ae4: add al, 0x10; mov [rdi+0x7], al; ret; 
0x0000000011d2d9: add al, 0x10; shr eax, cl; and eax, 0x1; ret; 
0x0000000011ccea: add al, 0x10; shr r8d, cl; and r8d, 0x1; mov eax, r8d; ret; 
0x0000000011d3ca: add al, 0x11; ret; 
0x000000000b8554: add al, 0x12; pop rbx; and eax, 0x7ff80000; ret; 
0x00000000099312: add al, 0x16; cmp al, r8b; jne short 0x0000000000099300; lea rax, [rdx-0x10]; ret; 
0x0000000009e18b: add al, 0x17; mov [rsi+rdx], cl; mov [rsi+rdx+0x1], al; jne short 0x000000000009e180; ret; 
0x000000000a66e5: add al, 0x17; movzx edx, byte ptr [rsi+rdx]; sub eax, edx; ret; 
0x0000000017d69c: add al, 0x17; movzx edx, byte ptr [rsi+rdx]; sub eax, edx; vzeroupper; ret; 
0x000000000a667a: add al, 0x17; sub eax, ecx; ret; 
0x000000001846de: add al, 0x17; vzeroupper; ret; 
0x00000000146f42: add al, 0x1; add [rax], al; add [rax+0x1], bh; ret; 
0x00000000136b2e: add al, 0x1; add [rax], al; cmovne eax, edx; ret; 
0x000000000caf88: add al, 0x1; add [rax], al; ret; 
0x0000000010a0a8: add al, 0x1; add [rax], al; syscall; 
0x000000000610fa: add al, 0x1; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000000e7e08: add al, 0x1; mov byte ptr [rdi+0x8], 0x1; mov [rdi], al; mov eax, 0x1; ret; 
0x000000000da0ad: add al, 0x1; pop rbx; pop rbp; pop r12; ret; 
0x00000000061171: add al, 0x1; xor eax, eax; ret; 
0x000000000351e6: add al, 0x1b; add [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x000000001423c1: add al, 0x24; add [rax], al; add [rax], al; call qword ptr [rax+0x20]; 
0x00000000137ad5: add al, 0x24; add [rax], al; add [rax], al; call rax; 
0x00000000034afe: add al, 0x24; add [rbx+0x5d], bl; pop r12; ret; 
0x0000000011063d: add al, 0x24; add [rcx+rcx*4-0x20], cl; pop r12; ret; 
0x0000000014f8bf: add al, 0x24; add al, [rax]; add [rax], al; call r8; 
0x00000000043ad2: add al, 0x24; add r15, r12; call rax; 
0x000000000412c3: add al, 0x24; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000001096b7: add al, 0x24; add rsp, 0x18; ret; 
0x0000000011a501: add al, 0x24; add rsp, 0x20; pop rbp; ret; 
0x00000000106d05: add al, 0x24; add rsp, 0x28; ret; 
0x0000000011a5c7: add al, 0x24; add rsp, 0x30; pop rbp; ret; 
0x00000000190751: add al, 0x24; add rsp, 0x38; pop rbx; pop r14; ret; 
0x0000000011c9d8: add al, 0x24; add rsp, 0x38; ret; 
0x0000000011ca39: add al, 0x24; add rsp, 0x40; ret; 
0x0000000014b766: add al, 0x24; call qword ptr [rdx+0x20]; 
0x0000000004394d: add al, 0x24; call rax; 
0x00000000028cbb: add al, 0x24; lea rdi, [rip+0x185024]; mov rsi, [rax]; xor eax, eax; call qword ptr [rdx+0x260]; 
0x000000000453d3: add al, 0x24; lock add qword ptr [rax+0x460], 0x1; lea rdi, [rbp+0x988]; call qword ptr [rbp+0xf90]; 
0x0000000008bcad: add al, 0x24; mov edx, 0x1; mov rdi, rbp; call qword ptr [rax+0x80]; 
0x00000000083d9b: add al, 0x24; mov esi, r12d; mov rdi, r14; call qword ptr [rax+0x18]; 
0x00000000150842: add al, 0x24; mov rax, [rbp+0x8]; call qword ptr [rax+0x8]; 
0x00000000143d68: add al, 0x24; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x00000000133390: add al, 0x24; mov rdi, r12; call rax; 
0x0000000008e5f5: add al, 0x24; mov rdi, r15; lea rbx, [rsi+0x1]; movzx esi, byte ptr [rsi]; call qword ptr [rax+0x18]; 
0x000000000438c2: add al, 0x24; mov rdx, r14; mov rsi, r13; mov rdi, r12; call rax; 
0x0000000008bcea: add al, 0x24; mov rdx, r8; mov rsi, r12; mov rdi, rbp; call qword ptr [rax+0x78]; 
0x00000000043a6e: add al, 0x24; mov rsi, r13; mov rdi, r12; call rax; 
0x0000000011f2db: add al, 0x24; pop rbx; pop rbp; pop r12; ret; 
0x00000000091957: add al, 0x25; adc [rax], al; add [rax], al; ret; 
0x000000001412dc: add al, 0x25; add [rax], al; add [rax], al; mov rcx, r15; call rbp; 
0x0000000002903e: add al, 0x25; add [rax], al; add [rax], al; ret; 
0x00000000028ce2: add al, 0x25; xor [rax], al; add [rax], al; call rax; 
0x00000000029023: add al, 0x25; xor [rax], al; add [rax], al; jmp rax; 
0x00000000137acd: add al, 0x25; xor [rax], al; add [rax], al; mov qword ptr [rsp], 0x0; call rax; 
0x00000000072c2b: add al, 0x2; lea rdx, [rip-0x486]; movsxd rax, [rdi+rax*4]; add rax, rdx; jmp rax; 
0x000000000388bd: add al, 0x2; mov eax, r8d; ret; 
0x00000000143f5e: add al, 0x2; pop rbx; pop rbp; mov eax, r8d; ret; 
0x0000000003885b: add al, 0x2; test eax, eax; jne short 0x0000000000038868; mov eax, r8d; ret; 
0x000000000feed2: add al, 0x2a; mov rdi, [rbp-0x1b0]; mov rdx, [r12]; mov rax, [rbp-0x1e0]; call rax; 
0x00000000137245: add al, 0x2b; pop rbx; pop rbp; ret; 
0x000000000596c2: add al, 0x30; add [rax], al; mov eax, 0x9e; syscall; 
0x000000000b7289: add al, 0x30; in eax, dx; mov [rdi+0x5], ch; ret; 
0x000000000b729b: add al, 0x30; in eax, dx; mov [rdi+0x6], ch; ret; 
0x000000000addae: add al, 0x31; ret; 
0x000000000d0272: add al, 0x31; rol byte ptr [rcx-0x5c28f401], 0x0; setb al; add eax, 0x16d; ret; 
0x000000000adcaa: add al, 0x37; ret; 
0x0000000017dcc9: add al, 0x38; movzx edx, byte ptr [rdx+rdi]; sub eax, edx; vzeroupper; ret; 
0x000000000ba436: add al, 0x39; bnd je short 0x00000000000ba43f; test edx, edx; jne short 0x00000000000ba430; ret; 
0x00000000093ca3: add al, 0x39; ret; 
0x000000000a4ad0: add al, 0x39; shl byte ptr [rbp-0x15], 0x1; mov rax, r8; ret; 
0x000000001764d8: add al, 0x3; add [rax], al; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x000000001882f7: add al, 0x3; add [rax], al; xor eax, eax; ret; 
0x00000000187119: add al, 0x3; add [rcx+0x63], cl; or al, 0x93; add rcx, r11; notrack jmp rcx; 
0x0000000008470f: add al, 0x3a; ret; 
0x000000000caf51: add al, 0x3b; add al, 0xf; test [rcx+rax], esi; add [rax], al; ret; 
0x000000000c2c8e: add al, 0x44; mov eax, eax; ret; 
0x0000000010843b: add al, 0x44; mov eax, ecx; ret; 
0x0000000011939c: add al, 0x48; add esp, 0x20; pop rbp; ret; 
0x0000000011ad8f: add al, 0x48; add esp, 0x28; ret; 
0x00000000106f15: add al, 0x48; add esp, 0x8; pop rbx; pop rbp; ret; 
0x000000000b47eb: add al, 0x48; lea eax, [rdi+0x5]; ret; 
0x000000000b563b: add al, 0x48; lea eax, [rdi+0x6]; ret; 
0x000000001745b8: add al, 0x48; lea eax, [rdx+0x4]; ret; 
0x000000001745ca: add al, 0x48; lea eax, [rdx+0x5]; ret; 
0x0000000017209a: add al, 0x48; lea ecx, [rdx+0x4]; jne 0x0000000000172390; ret; 
0x000000000b3a17: add al, 0x48; lea edi, [rdi+0x4]; jne 0x00000000000b4270; ret; 
0x000000000b50fb: add al, 0x48; lea edi, [rdi+0x4]; jne 0x00000000000b5ac0; ret; 
0x00000000183f57: add al, 0x48; lea edi, [rdi+0x4]; jne 0x00000000001841a0; vzeroupper; ret; 
0x00000000184c8b: add al, 0x48; lea edi, [rdi+0x4]; jne 0x0000000000184ed0; vzeroupper; ret; 
0x00000000092132: add al, 0x48; lea edx, [rax+0x1]; mov [rip+0x151192], rdx; ret; 
0x00000000081edb: add al, 0x48; mov [rax], ecx; mov eax, [rdx]; ret; 
0x00000000138ca2: add al, 0x48; mov [rbx+0x10], eax; mov eax, 0x14; add edx, 0x1; syscall; 
0x000000001674ba: add al, 0x48; mov [rdi], ecx; ret; 
0x00000000082a02: add al, 0x48; mov [rdx+0x20], esi; mov [rcx], eax; ret; 
0x00000000150f6b: add al, 0x48; mov eax, [rdi+0x8]; call qword ptr [rax+0x48]; 
0x00000000150b34: add al, 0x48; mov eax, [rdi+0x8]; sar rdx, 0x20; mov [rsp], edx; call qword ptr [rax+0x48]; 
0x00000000150d14: add al, 0x48; mov eax, [rdi+0x8]; shr rdx, 0x20; mov [rsp], edx; call qword ptr [rax+0x48]; 
0x000000000afd1d: add al, 0x48; mov eax, edi; ret; 
0x000000001674b3: add al, 0x48; mov ecx, [rsi]; mov [rdi+0x4], rdx; mov [rdi], rcx; ret; 
0x00000000150afe: add al, 0x48; mov edi, ebp; call qword ptr [rax+0x40]; 
0x00000000150b4f: add al, 0x48; mov edi, ebp; call qword ptr [rax+0x48]; 
0x000000000ae058: add al, 0x48; xor eax, eax; ret; 
0x00000000145228: add al, 0x48; xor eax, edx; mov [r8], rsi; mov [r8+0x8], rax; ret; 
0x000000000b5119: add al, 0x49; sub eax, 0x5; lea rdi, [rdi+0x5]; jne 0x00000000000b5ac0; ret; 
0x000000000b3a5b: add al, 0x49; sub eax, 0x6; lea rdi, [rdi+0x6]; jne 0x00000000000b4270; ret; 
0x000000001375a5: add al, 0x4c; lea eax, [rdi+rsi+0x8]; mov rax, r8; ret; 
0x000000000b960d: add al, 0x4c; lea ecx, [rsp+0x18]; call rbx; 
0x000000000b9a2f: add al, 0x4c; lea ecx, [rsp+0x20]; call rbx; 
0x00000000126b88: add al, 0x50; shr ax, 0xe; and eax, 0x1; ret; 
0x00000000167bce: add al, 0x5; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000010704c: add al, 0x5b; pop rbp; pop r12; ret; 
0x000000000d0cb2: add al, 0x66; cmp eax, 0x840f0400; ret; 
0x000000001745c6: add al, 0x66; mov [rdx+0x4], eax; lea rax, [rdx+0x5]; ret; 
0x000000000afd3b: add al, 0x66; mov [rdx+0x4], eax; mov rax, rdi; ret; 
0x000000000b8331: add al, 0x73; adc eax, [rax+0x157701fa]; jb short 0x00000000000b833d; mov [rdi], cl; ret; 
0x00000000107c78: add al, 0x74; or [rax+0x1c], edi; syscall; 
0x000000000e7e42: add al, 0x74; xchg edi, eax; mov byte ptr [rdi+0x8], 0x1e; mov eax, 0x2; ret; 
0x000000000f86ce: add al, 0x75; fisttp word ptr [rax+0x63], st; sub [rbp-0x77], al; ret far; 
0x000000000f185a: add al, 0x75; mov ebx, 0xf708588b; ret; 
0x000000001076aa: add al, 0x75; ret; 
0x00000000038c84: add al, 0x78; and eax, 0x1000; ret; 
0x00000000038c64: add al, 0x78; and eax, 0x100; ret; 
0x00000000038d04: add al, 0x78; and eax, 0x1; ret; 
0x00000000038c44: add al, 0x78; and eax, 0x2000; ret; 
0x00000000038bc4: add al, 0x78; and eax, 0x200; ret; 
0x00000000038b84: add al, 0x78; and eax, 0x2; ret; 
0x00000000038c04: add al, 0x78; and eax, 0x4000; ret; 
0x00000000038b64: add al, 0x78; and eax, 0x400; ret; 
0x00000000038c24: add al, 0x78; and eax, 0x4; ret; 
0x00000000038be4: add al, 0x78; and eax, 0x8000; ret; 
0x00000000038ba4: add al, 0x78; and eax, 0x800; ret; 
0x00000000038b44: add al, 0x78; and eax, 0x8; ret; 
0x000000000b3b68: add al, 0x7; add [rax], al; ret; 
0x000000000ad7c1: add al, 0x7; cmp [rax], sil; cmovne rax, rdx; ret; 
0x0000000018673e: add al, 0x7; cmp esi, [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x00000000181bfe: add al, 0x7; cmp sil, [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x000000000ad9ec: add al, 0x7; ret; 
0x00000000184d94: add al, 0x7; vzeroupper; ret; 
0x0000000009e381: add al, 0x80; jo short 0x000000000009e38b; sub cl, [rcx+rcx*4-0x40]; ret; 
0x0000000006165a: add al, 0x81; add rax, rcx; notrack jmp rax; 
0x00000000072ac4: add al, 0x81; jmp far fword ptr [rdi+0xf000000]; 
0x000000001799ab: add al, 0x81; mov edx, [rcx+rdx*4]; sub eax, edx; ret; 
0x000000000b8397: add al, 0x81; sub eax, [rcx+rsi*4]; je short 0x00000000000b8380; ret; 
0x0000000017b283: add al, 0x81; sub eax, edx; ret; 
0x0000000008c767: add al, 0x82; add rax, r10; notrack jmp rax; 
0x00000000028881: add al, 0x82; add rax, rdx; notrack jmp rax; 
0x000000000ab0e7: add al, 0x82; sub eax, ecx; ret; 
0x00000000103d77: add al, 0x83; add rax, rbx; notrack jmp rax; 
0x000000000e4d0e: add al, 0x83; call far fword ptr [rbp+0xf]; 
0x00000000087682: add al, 0x83; loop 0x0000000000087687; mov eax, edx; ret; 
0x0000000008a428: add al, 0x83; loopne 0x000000000008a42d; ret; 
0x00000000137564: add al, 0x83; loopne 0x00000000001375e7; ret; 
0x0000000005d6d3: add al, 0x83; ret; 
0x000000001055fc: add al, 0x84; add rax, r12; notrack jmp rax; 
0x00000000128abb: add al, 0x85; leave; jne short 0x0000000000128a70; mov rax, r8; ret; 
0x000000000b90ad: add al, 0x85; shl byte ptr [rbp-0x12], cl; xor eax, eax; ret; 
0x000000000ba43a: add al, 0x85; shl byte ptr [rbp-0xf], cl; ret; 
0x0000000013815c: add al, 0x85; test byte ptr [rdi], 0x85; ret; 
0x0000000007d6ea: add al, 0x86; add rax, rsi; notrack jmp rax; 
0x0000000011d2d6: add al, 0x86; mov eax, [rax+rdx]; shr eax, cl; and eax, 0x1; ret; 
0x00000000062a18: add al, 0x87; add rax, rdi; notrack jmp rax; 
0x00000000072c36: add al, 0x87; add rax, rdx; jmp rax; 
0x000000001745b5: add al, 0x88; add al, 0x48; lea eax, [rdx+0x4]; ret; 
0x000000000afd1a: add al, 0x88; add al, 0x48; mov eax, edi; ret; 
0x00000000045de2: add al, 0x88; mov [rsi+0x10], r8; mov [rsi+0x28], rax; xor eax, eax; ret; 
0x00000000077543: add al, 0x89; adc [rax+0x39], ecx; ret; 
0x00000000150f67: add al, 0x89; and al, 0x4; mov rax, [rdi+0x8]; call qword ptr [rax+0x48]; 
0x000000000b3a34: add al, 0x89; cmovns eax, [rbx-0x72b7fa18]; jg short 0x00000000000b3a44; jne 0x00000000000b4270; ret; 
0x000000000b7284: add al, 0x89; js 0xffffffffed3b76e3; mov [rdi+0x5], ch; ret; 
0x000000000b7295: add al, 0x89; pcmpgtd mm1, [rcx-0x12cffba9]; mov [rdi+0x6], ch; ret; 
0x000000000895e7: add al, 0x8; add [rax], al; ret; 
0x0000000011caab: add al, 0x8; mov ecx, edi; shr eax, cl; and eax, 0x1; ret; 
0x000000000a684f: add al, 0x8; movzx edx, byte ptr [rdx+rcx]; sub eax, edx; ret; 
0x0000000017d819: add al, 0x8; movzx edx, byte ptr [rdx+rcx]; sub eax, edx; vzeroupper; ret; 
0x0000000010b7a4: add al, 0x8b; adc al, 0x2; mov rdi, [rbp-0x118]; mov rsi, r9; call qword ptr [rbp-0xf0]; 
0x000000000afd04: add al, 0x8b; add [rcx-0x776b7fe], ecx; ret; 
0x0000000006b69d: add al, 0x8b; sbb cl, [rax-0x77]; or [rbx-0x7bf00005], al; ret; 
0x00000000146e98: add al, 0x8f; add rax, rdi; notrack jmp rax; 
0x000000000784ac: add al, 0x90; lea rdx, [rip-0x3e9]; add rax, rdx; jmp rax; 
0x00000000038cba: add al, 0x90; ret; 
0x00000000149c7b: add al, 0x91; add rax, rcx; notrack jmp rax; 
0x000000000318b0: add al, 0x94; add [rax], al; add [rax+0x39], cl; ret far; 
0x000000000b8523: add al, 0x96; add rax, rsi; notrack jmp rax; 
0x000000000b929a: add al, 0x98; pop rbx; pop rbp; pop r12; ret; 
0x000000000f9e71: add al, 0x9; ret; 
0x0000000018dd0f: add al, 0x9a; xor edi, r12d; add rax, rdx; notrack jmp rax; 
0x0000000018daee: add al, 0x9a; xor edi, r12d; movzx r12d, dil; add rax, rdx; notrack jmp rax; 
0x0000000006a990: add al, 0x9e; add rax, rsi; notrack jmp rax; 
0x000000000eb791: add al, 0xa9; add rax, rcx; notrack jmp rax; 
0x0000000011d1da: add al, 0xa; ret; 
0x000000000e0e8d: add al, 0xaa; add rax, rdx; notrack jmp rax; 
0x000000000b839a: add al, 0xb1; je short 0x00000000000b8380; ret; 
0x00000000140f0f: add al, 0xb1; shr rdx, 0x3; add rax, rcx; notrack jmp rax; 
0x000000000e04f5: add al, 0xb2; add rax, rdx; notrack jmp rax; 
0x000000001515a7: add al, 0xb8; add [rax], eax; add [rax], al; ret; 
0x00000000038f1c: add al, 0xb8; ret; 
0x000000000fbb2c: add al, 0xba; add rax, rdx; notrack jmp rax; 
0x000000000b845b: add al, 0xbe; add rax, rsi; notrack jmp rax; 
0x0000000018a872: add al, 0xc3; nop [rax+rax]; lea rax, [rdi+0x5]; ret; 
0x00000000172255: add al, 0xc3; nop [rax+rax]; mov [rcx], edx; mov [rcx+0x3], edx; ret; 
0x00000000172244: add al, 0xc3; nop [rax+rax]; mov [rcx], edx; mov [rcx+0x4], dx; ret; 
0x000000000b4195: add al, 0xc3; nop [rax+rax]; mov [rdi-0x1], rdx; ret; 
0x000000000b4184: add al, 0xc3; nop [rax+rax]; mov [rdi], edx; mov [rdi+0x4], dx; ret; 
0x000000000d95bc: add al, 0xd0; ret; 
0x000000000358d0: add al, 0xd8; test rax, rax; je short 0x00000000000358d9; call rax; 
0x00000000191527: add al, 0xd8; test rax, rax; je short 0x0000000000191530; call rax; 
0x000000000c5fa2: add al, 0xe8; cmp [rdx+0x5], bh; add [rbx-0x76b30383], cl; out 0x89, al; ret; 
0x0000000003564f: add al, 0xe8; test rax, rax; je short 0x0000000000035658; call rax; 
0x000000000399d7: add al, 0xe9; ret far; 
0x00000000127b74: add al, 0xe9; sahf; cmc; call qword ptr [rax-0x18]; 
0x00000000111889: add al, 0xe9; ud0 edi, edi; call qword ptr [rax+0x305c02c7]; 
0x0000000010712e: add al, 0xeb; ret; 
0x00000000105f21: add al, 0xf2; dec dword ptr [rax-0x7b]; ror byte ptr [rdi], 0x84; ret far; 
0x00000000167822: add al, 0xf3; movq [rdi], mm1; ret; 
0x000000001106dc: add al, 0xf5; call qword ptr [rax+0x61058b48]; 
0x0000000015a5ff: add al, 0xf7; setne al; movzx eax, al; ret; 
0x000000000b85de: add al, 0xf8; jmp qword ptr [rsi+0x66]; 
0x0000000007cd3a: add al, 0xf8; ret; 
0x000000000a4d31: add al, 0xf; mov dh, 0x54; and al, 0x16; mov [rdi+0x6], dl; ret; 
0x000000000a4dee: add al, 0xf; mov dh, 0x54; and al, 0xe; mov [rax+0x6], dl; ret; 
0x000000000a4ed3: add al, 0xf; mov dh, 0x54; and al, 0xe; mov [rdi+0x6], dl; ret; 
0x00000000177abd: add al, 0xf; movzx edx, byte ptr [rsi+rcx]; sub eax, edx; ret; 
0x0000000017e876: add al, 0xf; movzx edx, byte ptr [rsi+rcx]; sub eax, edx; vzeroupper; ret; 
0x000000000caf54: add al, 0xf; test [rcx+rax], esi; add [rax], al; ret; 
0x000000000f1885: add al, 0xf; test [rdi+rdi*8-0x1], esp; jmp far fword ptr [rax+0x65840f08]; 
0x000000000fa31d: add al, 0xf; test [rdx+rax], dl; add [rbx+0x634c01c3], al; ret; 
0x0000000017644e: add al, 0xf; test [rdx-0x7ffffffd], ecx; cmp [rcx], al; sbb rax, 0xffffffffffffffff; ret; 
0x000000000b3a1b: add al, 0xf; test [rsi+0x8], ecx; add [rax], al; ret; 
0x000000000fa861: add al, 0xf; test al, bl; add eax, [rax]; add [rbp+0x634c0158], cl; ret far; 
0x00000000159340: add al, 0xfd; jmp qword ptr [rsi+0x2e]; 
0x00000000113650: add al, 0xfd; or al, 0x0; ret; 
0x00000000132fdd: add al, [eax]; mov rdi, [rsp+0x10]; mov rsi, r12; call qword ptr [rsp+0x58]; 
0x00000000132f99: add al, [eax]; mov rdi, r12; call rbp; 
0x000000000a8232: add al, [rax]; add [rax+0x1], cl; clc; add rax, rcx; ret; 
0x0000000014300c: add al, [rax]; add [rax+0x5d5bc031], dl; pop r12; ret; 
0x000000001116b5: add al, [rax]; add [rax-0x3d7cb7fe], cl; add [rax-0x7d], ecx; ret; 
0x00000000080621: add al, [rax]; add [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x0000000003233e: add al, [rax]; add [rax-0x73], cl; add cl, [rax+0x39]; ret; 
0x0000000011411f: add al, [rax]; add [rax-0x73], cl; add eax, 0xd3797; add rsp, 0x18; ret; 
0x00000000113bc7: add al, [rax]; add [rax-0x73], cl; add eax, 0xd3c9f; add rsp, 0x8; ret; 
0x00000000159816: add al, [rax]; add [rax-0x77], cl; adc [r8+0x5a], bl; pop rbx; ret; 
0x00000000159d21: add al, [rax]; add [rax-0x77], cl; add ebx, [rax+0x5a]; pop rbx; ret; 
0x0000000010a54a: add al, [rax]; add [rax-0x77], cl; ret; 
0x000000001597ce: add al, [rax]; add [rax-0x77], cl; sbb [r8+0x5a], bl; pop rbx; ret; 
0x00000000189f58: add al, [rax]; add [rax-0x77], cl; shl ebx, 0x1; movsb [rdi], [rsi]; ret; 
0x00000000107eab: add al, [rax]; add [rax-0x7b], cl; shl byte ptr [rsp+rsi+0x31], 0xd2; call rax; 
0x0000000017650b: add al, [rax]; add [rax-0x7cb7fec8], al; fdivr st, st(7); ret; 
0x000000000e3fdc: add al, [rax]; add [rax-0x7d], cl; ret; 
0x00000000055c1d: add al, [rax]; add [rax], al; add [rax+0x1], bh; ret; 
0x0000000013c213: add al, [rax]; add [rax], al; add [rax], al; add [rbx-0x7cb7efab], cl; ret; 
0x0000000013c0e1: add al, [rax]; add [rax], al; add [rax], al; add [rbx-0x7cb7efbb], cl; ret; 
0x00000000147a33: add al, [rax]; add [rax], al; add rdi, 0x10; jmp rcx; 
0x0000000014a513: add al, [rax]; add [rax], al; add rdi, 0x58; jmp rcx; 
0x00000000149be3: add al, [rax]; add [rax], al; add rdi, 0x68; jmp rcx; 
0x00000000146df6: add al, [rax]; add [rax], al; add rdi, 0xc8; jmp rcx; 
0x0000000010b37e: add al, [rax]; add [rax], al; call qword ptr [rbp+0x40]; 
0x0000000014f8c1: add al, [rax]; add [rax], al; call r8; 
0x000000000fd8a5: add al, [rax]; add [rax], al; cmove eax, edx; ret; 
0x0000000014ba66: add al, [rax]; add [rax], al; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x000000000418c0: add al, [rax]; add [rax], al; mov eax, 0xe; syscall; 
0x000000000897e1: add al, [rax]; add [rax], al; mov eax, r9d; syscall; 
0x00000000090b4b: add al, [rax]; add [rax], al; mov esi, 0x80; mov eax, 0xca; syscall; 
0x0000000005303f: add al, [rax]; add [rax], al; mov r10d, 0x8; mov eax, 0xe; syscall; 
0x00000000085e1c: add al, [rax]; add [rax], al; mov rdi, r15; call qword ptr [r13+0x80]; 
0x0000000007ebb8: add al, [rax]; add [rax], al; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x0000000008c62d: add al, [rax]; add [rax], al; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x0000000014d92f: add al, [rax]; add [rax], al; movups [rsp+0x18], xmm1; movups [rsp+0x38], xmm0; call qword ptr [rax+0x18]; 
0x0000000014db55: add al, [rax]; add [rax], al; movups [rsp+0xb8], xmm3; movups [rsp+0xd8], xmm0; call rax; 
0x0000000014cf6c: add al, [rax]; add [rax], al; pop rbx; ret; 
0x00000000055da3: add al, [rax]; add [rax], al; ret; 
0x00000000136fbd: add al, [rax]; add [rax], al; sub esi, 0x1; mov [rdi+0x1], sil; ret; 
0x000000000d8e53: add al, [rax]; add [rax], al; syscall; 
0x000000001170aa: add al, [rax]; add [rax], al; xor eax, eax; ret; 
0x000000000834eb: add al, [rax]; add [rbp+0x41], bl; pop rsp; pop r13; ret; 
0x0000000003c082: add al, [rax]; add [rbp-0x77], al; dec dword ptr [rax-0x7d]; ret; 
0x000000000a7ea8: add al, [rax]; add [rbp-0x77], cl; ret far; 
0x00000000042a7d: add al, [rax]; add [rbx+0x5d], bl; pop r12; ret; 
0x000000000fa321: add al, [rax]; add [rbx+0x634c01c3], al; ret; 
0x0000000008b07a: add al, [rax]; add [rcx+rcx*4-0x16], al; mov rsi, r12; mov rdi, rbp; call qword ptr [r15+0x80]; 
0x0000000007644c: add al, [rax]; add [rcx+rcx*4-0x16], cl; mov rsi, r14; mov rdi, rbp; call qword ptr [r12+0x38]; 
0x00000000085d43: add al, [rax]; add [rcx+rcx*4-0x1e], al; mov rsi, rbp; mov rdi, r15; call qword ptr [r14+0x80]; 
0x00000000073d02: add al, [rax]; add [rcx+rcx*4-0x1e], cl; mov rsi, r13; mov rdi, r14; call qword ptr [rbx+0x38]; 
0x0000000011b6ca: add al, [rax]; add [rcx+rcx*4-0x32], cl; mov edi, r12d; mov eax, ebx; syscall; 
0x0000000007bfec: add al, [rax]; add [rcx+rcx*4-0x6], cl; mov rsi, r12; mov rdi, rbp; call qword ptr [r14+0x38]; 
0x00000000055603: add al, [rax]; add [rcx-0x73], cl; or [r8+0x39], r9b; ret; 
0x00000000108174: add al, [rax]; add [rcx-0x77], al; ror byte ptr [rax-0x77], 0x1; ret far; 
0x0000000018e2cd: add al, [rax]; add [rcx-0x7d], al; ret far; 
0x0000000008b130: add al, [rax]; add [rcx], dh; idiv byte ptr [rdx+0x2]; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x0000000013a5f5: add al, [rax]; add [rdi], cl; mov dh, 0x43; add [rax-0x7d], ecx; ret; 
0x000000000fb85a: add al, [rax]; add [rdi], cl; test [rcx+rax+0x18e80000], ecx; out 0xfd, eax; jmp qword ptr [rsp+rax*2-0x77]; 
0x000000000913aa: add al, [rax]; add [rsi+0x80], bh; mov eax, 0xcc; syscall; 
0x00000000059fda: add al, [rax]; add [rsi+0xf], ah; outsd dx, [rsi]; adc [rax-0xdf6b], ecx; jmp qword ptr [rsi+0xf]; 
0x0000000008e8e5: add al, [rax]; add [rsi-0x1], bh; mov rdi, rbx; call qword ptr [rax+0x18]; 
0x000000000a13e2: add al, [rax]; add bh, dh; ret; 
0x000000000a2c10: add al, [rax]; add bh, dh; ret; 
0x00000000190d11: add al, [rax]; divss xmm0, [rip+0x279c8]; ret; 
0x000000001846a8: add al, [rax]; lea rax, [rdi+0x2]; vzeroupper; ret; 
0x000000000a4a67: add al, [rax]; mov [r11], rdx; mov rax, r12; pop r12; ret; 
0x0000000016c5f1: add al, [rax]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000013265d: add al, [rax]; mov rax, [rsp+0x8]; mov rdi, rbx; call rax; 
0x0000000013338c: add al, [rax]; mov rax, [rsp]; mov rdi, r12; call rax; 
0x00000000132fde: add al, [rax]; mov rdi, [rsp+0x10]; mov rsi, r12; call qword ptr [rsp+0x58]; 
0x00000000132f9a: add al, [rax]; mov rdi, r12; call rbp; 
0x0000000013328a: add al, [rax]; mov rdi, r12; call rbx; 
0x00000000132607: add al, [rax]; mov rsi, rbx; mov rdi, rbp; call qword ptr [rsp+0x10]; 
0x0000000018e779: add al, [rax]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000018dd51: add al, [rax]; movsxd rbx, [rcx+rbx*4]; add rcx, rbx; notrack jmp rcx; 
0x0000000018755c: add al, [rax]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018dbaa: add al, [rax]; movsxd rcx, [r9+rbx*4]; add rcx, r9; notrack jmp rcx; 
0x00000000109248: add al, [rax]; nop [rax+rax]; endbr64; mov eax, 0x49; syscall; 
0x000000001086da: add al, [rax]; nop [rax]; endbr64; mov eax, 0x5f; syscall; 
0x0000000013744e: add al, [rax]; ret; 
0x00000000182c18: add al, [rax]; vzeroupper; ret; 
0x0000000010891c: add al, [rax]; xchg ax, ax; endbr64; mov eax, 0x53; syscall; 
0x0000000003885c: add al, [rbp+0x440775c0]; mov eax, eax; ret; 
0x00000000137387: add al, [rbp-0x77]; sbb [rbx+0x49], bl; mov [rcx], eax; mov eax, ecx; ret; 
0x00000000137087: add al, [rbp-0x78]; dec dword ptr [rcx+r9*4+0x10]; lea eax, [r9+r8+0x2]; pop rbx; ret; 
0x0000000012334d: add al, [rbx+0x194501f9]; rol byte ptr [rcx-0x7d], 0xc0; add [rbp+0x440f45c9], eax; ror dword ptr [rax-0x7d], 0x1; ret; 
0x000000001233f8: add al, [rbx+0x194501fe]; rol byte ptr [rcx-0x7d], 0xc0; add [rbp+0x440f45f6], eax; ret far; 
0x00000000061069: add al, [rbx+0x277426f8]; mov r8d, 0xffffffff; mov eax, r8d; ret; 
0x000000001198b7: add al, [rbx+0x377426f8]; mov eax, r8d; ret; 
0x00000000090e09: add al, [rbx+0x68901e0]; xor eax, eax; ret; 
0x0000000011c06b: add al, [rbx+0x6f74fff8]; add eax, 0x1; mov [rdx], eax; ret; 
0x00000000146f7a: add al, [rbx-0x37f0fe18]; mov [r8+0xa8], eax; mov eax, 0x1; ret; 
0x00000000053c9a: add al, [rbx-0x6f3cfe18]; xor eax, eax; ret; 
0x000000001355fe: add al, [rbx-0x79f0f008]; lock add [rax], al; add [rcx-0x77], al; ret; 
0x0000000018724a: add al, [rbx]; add eax, [rax]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x000000000f9aa7: add al, [rcx+0xf]; xchg edi, eax; ret; 
0x000000000fd351: add al, [rcx+rcx*4-0x38]; ret; 
0x000000000388be: add al, [rcx+rcx*4-0x40]; ret; 
0x000000000d0264: add al, [rcx-0x70a3d706]; add dh, [rsi+0x3]; ret; 
0x00000000051051: add al, [rcx-0x77]; ret; 
0x00000000136b58: add al, [rcx]; add [rax], al; cmovne eax, edx; ret; 
0x00000000108955: add al, [rcx]; add [rax], al; syscall; 
0x00000000114531: add al, [rcx]; sub esi, [rcx]; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x5d], bl; ret; 
0x000000000cbac6: add al, [rdx+rdx*8-0x2e77ea8c]; and cl, 0xf; je short 0x00000000000cbaf0; ret; 
0x00000000055c83: add al, [rdx]; sar bh, 0xff; ret; 
0x000000000b3c6a: add al, [rsi]; add [rax], al; ret; 
0x000000000d0cb1: add al, [rsi]; cmp eax, 0x840f0400; ret; 
0x000000001297d7: add al, al; cmp edx, 0x80000000; cmovne eax, edi; ret; 
0x00000000129865: add al, al; shr eax, 0x10; cmp edx, 0x80000000; cmovne eax, edi; ret; 
0x0000000018a853: add al, bl; nop [rax+rax]; lea rax, [rdi+0x3]; ret; 
0x00000000172225: add al, bl; nop [rax+rax]; mov [rcx], edx; ret; 
0x000000000a4e74: add al, bl; nop [rax+rax]; mov [rdi], ecx; lea rax, [rdi+rax-0x1]; ret; 
0x000000000b3178: add al, bl; nop [rax+rax]; mov edx, [rsi]; mov [rdi], edx; ret; 
0x000000000896b0: add al, bl; nop [rax+rax]; mov rax, [rdi+0x28]; sub rax, [rdi+0x20]; ret; 
0x00000000089580: add al, bl; nop [rax+rax]; mov rax, [rdi+0x40]; sub rax, [rdi+0x38]; ret; 
0x000000000cbaea: add al, bl; nop [rax]; add rax, 0x1; ret; 
0x000000000a4da7: add al, bl; nop [rax]; mov [rax], ecx; ret; 
0x000000000a4ce2: add al, bl; nop [rax]; mov [rdi], r8d; add rax, rdi; ret; 
0x000000000b3e6b: add al, bl; nop [rax]; mov edx, [rsi]; mov [rdi], edx; ret; 
0x000000001072f9: add al, ch; adc [rax], ecx; add [rax], al; add rsp, 0x18; ret; 
0x00000000101449: add al, ch; add [rax], ebp; hlt; jmp qword ptr [rbx+rcx*4+0x4]; 
0x000000001110fa: add al, ch; add [rbx-0xf], dl; dec dword ptr [rax+0x1]; ret; 
0x0000000013c548: add al, ch; add al, ch; out dx, eax; jmp qword ptr [rsi-0x70]; 
0x0000000015b748: add al, ch; add dl, bl; in eax, dx; jmp qword ptr [rsi-0x70]; 
0x0000000008e948: add al, ch; bnd jns short 0x000000000008e946; jmp qword ptr [rsi+0xf]; 
0x0000000014ce3b: add al, ch; call qword ptr [rbp+rbp*8-0x4274b701]; 
0x0000000012b42b: add al, ch; call qword ptr [rsi-0xa]; 
0x0000000009584e: add al, ch; cld; ret far; 
0x000000001563f1: add al, ch; cmp [rdx], eax; in eax, dx; jmp qword ptr [rbx+rcx*4+0x4]; 
0x0000000010f8a4: add al, ch; cmpsb [rsi], [rdi]; adc eax, edi; jmp qword ptr [rcx+rax*2-0x75]; 
0x0000000011ac01: add al, ch; fdivrp; jmp qword ptr [rsi+0xf]; 
0x0000000014838c: add al, ch; fsubp st(7), st; jmp qword ptr [rbx+rcx*4+0x4]; 
0x0000000009af2f: add al, ch; fwait; cld; jmp qword ptr [rbx+rcx*4+0x4]; 
0x000000000fa03b: add al, ch; inc edx; bnd jmp qword ptr [rsi+0xf]; 
0x00000000092e7e: add al, ch; insb [rdi], dx; idiv edi; dec dword ptr [rax-0x77]; ret; 
0x000000001465a4: add al, ch; jbe short 0x00000000001465a5; in eax, dx; jmp qword ptr [rsi+0xf]; 
0x000000000e1ecb: add al, ch; jg short 0x00000000000e1f3a; cmc; jmp qword ptr [rsi+0x66]; 
0x00000000088dce: add al, ch; jl short 0x0000000000088dce; cli; jmp qword ptr [rsi+0x66]; 
0x000000000bf83b: add al, ch; jmp far fword ptr [rbp-0xa]; 
0x00000000061a6b: add al, ch; jmp rcx; 
0x0000000010fbcf: add al, ch; jnp short 0x000000000010fb61; bnd jmp qword ptr [rsi+0x2e]; 
0x0000000013c8d1: add al, ch; jns short 0x000000000013c896; out dx, eax; jmp qword ptr [rsi+0xf]; 
0x0000000015708b: add al, ch; lahf; jae short 0x000000000015708b; dec dword ptr [rcx-0x4cfa7639]; ret; 
0x0000000004d3ab: add al, ch; lahf; mov dh, 0xfe; jmp qword ptr [rsi+0x66]; 
0x000000000c719d: add al, ch; lodsd [rsi]; sbb bh, dh; jmp qword ptr [rsi+0x2e]; 
0x000000001416b7: add al, ch; mov [0x3120438b480000c6], eax; test byte ptr [rax-0x77], 0xef; mov dword ptr [rbx+0x18], 0x1; call qword ptr [rax+0x28]; 
0x0000000008aaba: add al, ch; mov al, [0xb74c08548ffffff]; pop rbx; ret; 
0x0000000014bd6f: add al, ch; mov ebx, 0x48fff93d; lea esi, [rsp+0x10]; mov edi, eax; call rbp; 
0x00000000191930: add al, ch; mov edx, 0x5bfff83f; mov qword ptr [rip+0x5419e], 0x0; ret; 
0x000000000c00fb: add al, ch; mov r15, r14; jmp qword ptr [rsi+0x66]; 
0x000000000bd8fd: add al, ch; mov r9b, 0xf7; jmp qword ptr [rsi+0x66]; 
0x0000000010eaa7: add al, ch; movsxd ecx, [rax]; add [rax], al; add rsp, 0x18; ret; 
0x00000000134cd7: add al, ch; movsxd edx, [rsi]; out dx, eax; dec dword ptr [rax-0x7d]; ret; 
0x0000000013d33b: add al, ch; movzx ebp, di; jmp qword ptr [rsi+0x66]; 
0x000000000313ba: add al, ch; nop; jbe short 0x00000000000313bf; add [rbp-0x77], cl; ret; 
0x0000000013a12a: add al, ch; nop; ret far; 
0x000000001249d2: add al, ch; or [rbx-0xf], cl; dec dword ptr [rax-0x7d]; ret; 
0x000000000f025e: add al, ch; or al, 0x63; dec dword ptr [rcx-0x77]; ret; 
0x00000000086e3f: add al, ch; or ebx, [rbx+rdi*8]; jmp qword ptr [rsi+0x66]; 
0x00000000155e5c: add al, ch; out dx, al; sub ebp, esi; jmp qword ptr [rsi+0x66]; 
0x000000000bb05b: add al, ch; out dx, eax; fincstp; jmp qword ptr [rsi+0x66]; 
0x0000000013c54a: add al, ch; out dx, eax; jmp qword ptr [rsi-0x70]; 
0x00000000096f5b: add al, ch; out dx, eax; mov ah, 0xff; jmp qword ptr [rsi+0x66]; 
0x000000000e44dc: add al, ch; outsb dx, [rsi]; cmc; jmp qword ptr [rsi+0xf]; 
0x000000000b85db: add al, ch; outsd dx, [rsi]; add al, 0xf8; jmp qword ptr [rsi+0x66]; 
0x000000000fbadb: add al, ch; outsd dx, [rsi]; iretd; jmp qword ptr [rsi+0x2e]; 
0x000000000a0af1: add al, ch; pop rcx; jg short 0x00000000000a0aef; jmp qword ptr [rsi+0xf]; 
0x0000000013ade1: add al, ch; pop rcx; mov ch, 0xee; jmp qword ptr [rsi+0xf]; 
0x00000000157540: add al, ch; pop rdx; jb short 0x000000000015753d; jmp qword ptr [rsi+0xf]; 
0x000000001361f0: add al, ch; pop rdx; sub al, dh; jmp qword ptr [rsi+0x2e]; 
0x000000000e2b58: add al, ch; pop rsi; cmc; jmp qword ptr [rsi-0x70]; 
0x0000000011f43e: add al, ch; pop rsp; sti; jmp qword ptr [rsi+0xf]; 
0x0000000011b992: add al, ch; push 0x48000004; mov dword ptr [rip+0xc79dd], 0x0; add rsp, 0x8; ret; 
0x000000000f0d00: add al, ch; push 0x58; dec dword ptr [rcx-0x77]; ret; 
0x0000000011a9c8: add al, ch; rcl esi, 0xfe; jmp qword ptr [rsp+rax*2-0x77]; 
0x0000000011a9c9: add al, ch; rcl esi, 0xfe; jmp qword ptr [rsp+rax*2-0x77]; 
0x0000000002667f: add al, ch; ret far; 
0x0000000003a031: add al, ch; ret; 
0x000000000ed99c: add al, ch; sahf; mov ebx, esi; call far fword ptr [rbx+0x4c]; 
0x000000000f6447: add al, ch; sar esi, cl; bnd jmp qword ptr [rsi+0xf]; 
0x00000000088a30: add al, ch; sbb al, [rax]; sti; jmp qword ptr [rsi+0x2e]; 
0x000000000fb862: add al, ch; sbb bh, ah; std; jmp qword ptr [rsp+rax*2-0x77]; 
0x000000000f4a48: add al, ch; sbb bl, dh; jmp qword ptr [rsi+0xf]; 
0x00000000099adc: add al, ch; scasb [rdi]; mov bh, bh; jmp qword ptr [rsi+0xf]; 
0x0000000014059b: add al, ch; scasd [rdi]; test bh, ch; jmp qword ptr [rsi+0x66]; 
0x000000000c2978: add al, ch; shl byte ptr [rax-0x9], cl; jmp qword ptr [rsi-0x70]; 
0x00000000095e4f: add al, ch; stosd [rdi]; ret far; 
0x00000000105a21: add al, ch; sub [rax], esi; jmp qword ptr [rsi+0xf]; 
0x000000000912c5: add al, ch; test [rax+0x1f0fffff], ecx; add [rax], r8b; xor eax, eax; ret; 
0x0000000009b146: add al, ch; test [rbx-0x4], cl; jmp qword ptr [rbx+rcx*4+0x4]; 
0x00000000157914: add al, ch; xchg [rsi-0x8], ch; jmp qword ptr [rsi+0xf]; 
0x00000000156e04: add al, ch; xchg esi, eax; jns short 0x0000000000156e01; jmp qword ptr [rsi+0xf]; 
0x000000001559fd: add al, ch; xor r14b, r13b; jmp qword ptr [rsi+0x66]; 
0x00000000133289: add al, fs:[rax]; mov rdi, r12; call rbx; 
0x0000000011b6c9: add al, gs:[rax]; add [rcx+rcx*4-0x32], cl; mov edi, r12d; mov eax, ebx; syscall; 
0x00000000161158: add ax, 0x4900; movsxd edx, [rbx+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000055c68: add bh, [rax+0x1]; ret; 
0x00000000041c1b: add bh, [rax-0x1]; ret; 
0x0000000009d1ba: add bh, [rcx-0x72b80000]; adc eax, 0xed74b; cmovne rax, rdx; ret; 
0x0000000018c062: add bh, [rcx]; enter 0xc019, 0x83; fdivr st, st(7); ret; 
0x00000000035aba: add bh, ah; sbb al, [rax]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000149cef: add bh, al; add al, 0x0; add [rax], al; add [rax+0x1], bh; ret; 
0x00000000149cdf: add bh, al; add al, 0x1; add [rax], al; add [rax+0x1], bh; ret; 
0x00000000055c81: add bh, al; add al, [rdx]; sar bh, 0xff; ret; 
0x0000000014d7e2: add bh, al; and al, 0x18; add [rax], eax; add [rax], al; call qword ptr [rax+0x18]; 
0x0000000007a4ca: add bh, al; and al, 0x28; and [rax], al; add [rax], al; jmp rcx; 
0x0000000002d3b4: add bh, al; and al, 0x38; add eax, 0xe9000000; imul edi, esi, 0xffffffff; jmp qword ptr [rsi+0xf]; 
0x000000000b87ac: add bh, al; call qword ptr [rax-0x77f0097b]; 
0x000000000fca42: add bh, al; mov al, [0xfffad1e900000001]; call qword ptr [rax-0x5e1f00d]; 
0x0000000005a9aa: add bh, al; test [rdi+rdi*8-0x1], esp; jmp qword ptr [rsi]; 
0x000000000787e8: add bh, al; test eax, edx; idiv bh; call qword ptr [rax]; 
0x0000000014379b: add bh, al; xor dword ptr [rax+0x23], 0x0; add [rax], al; mov rdi, r12; call qword ptr [rax+0x28]; 
0x00000000159946: add bh, bh; adc bl, ch; ret far; 
0x00000000044b4f: add bh, bh; adc ecx, [rax-0x7d]; ret; 
0x00000000040ec2: add bh, bh; jg short 0x0000000000040f0e; sub eax, edx; shr rax, 0x3f; ret; 
0x000000001072bc: add bh, bh; jne short 0x00000000001072c5; mov [rdi], si; xor eax, eax; ret; 
0x000000000416b4: add bh, bh; loopne 0x000000000004171e; nop [rax+rax]; ret; 
0x0000000007f3a3: add bh, bh; loopne 0x000000000007f3ef; mov eax, 0xffffffff; ret; 
0x0000000007f483: add bh, bh; loopne 0x000000000007f4ed; nop [rax+rax]; xor eax, eax; ret; 
0x0000000007624d: add bh, bh; out 0x48, al; mov ebx, edx; mov edx, 0x1; jmp rsi; 
0x000000000ca0a8: add bh, bh; ret; 
0x00000000141493: add bh, bh; ror byte ptr [rax-0x73], 0x1; add eax, 0xa7803; add rsp, 0x8; ret; 
0x0000000014db68: add bh, bh; ror byte ptr [rax-0x75], 0x1; or [r8-0x77], r9b; out dx, eax; call qword ptr [rax+0x8]; 
0x00000000141f75: add bh, bh; xor eax, 0x74bd4; lea r9, [rsp+0x2c]; call qword ptr [rax]; 
0x00000000141e31: add bh, bh; xor eax, 0x74d18; lea r9, [rsp+0x2c]; call qword ptr [rax]; 
0x00000000141e2b: add bh, bh; xor eax, 0x74d26; push qword ptr [rip+0x74d18]; lea r9, [rsp+0x2c]; call qword ptr [rax]; 
0x0000000005676b: add bh, ch; jmp qword ptr [rsi-0x70]; 
0x00000000041bda: add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x00000000041c16: add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x2]; mov eax, 0xffffffff; ret; 
0x00000000046436: add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x2]; mov rax, 0xffffffffffffffff; ret; 
0x000000000a13e4: add bh, dh; ret; 
0x000000000e3de2: add bl, [r11+0x5d]; pop r12; ret; 
0x00000000143f5f: add bl, [rbx+0x5d]; mov eax, r8d; ret; 
0x000000000e3de3: add bl, [rbx+0x5d]; pop r12; ret; 
0x000000000608ed: add bl, [rbx-0x3d]; xor eax, eax; pop rbx; ret; 
0x00000000035404: add bl, [rbx]; add [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x0000000010fd4a: add bl, [rdx-0x6f99ffff]; endbr64; mov eax, 0xaa; syscall; 
0x0000000009216e: add bl, al; endbr64; xor eax, eax; ret; 
0x00000000142f85: add bl, al; mov dword ptr [rsi], 0x10; mov qword ptr [rsi+0x8], 0x0; mov [rsi+0x10], rax; ret; 
0x00000000136b6d: add bl, al; mov eax, 0x29; ret; 
0x000000000e155c: add bl, al; mov eax, 0xffffffff; ret; 
0x000000000409d4: add bl, al; nop [rax+rax]; addsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x00000000040d29: add bl, al; nop [rax+rax]; addss xmm0, xmm0; ret; 
0x000000001436a8: add bl, al; nop [rax+rax]; endbr64; mov eax, 0x2; ret; 
0x000000000425b9: add bl, al; nop [rax+rax]; endbr64; mov eax, [rip+0x1a0bde]; ret; 
0x000000001436b8: add bl, al; nop [rax+rax]; endbr64; ret; 
0x00000000141368: add bl, al; nop [rax+rax]; endbr64; xor eax, eax; ret; 
0x00000000143386: add bl, al; nop [rax+rax]; lea rdx, [rip+0x9f7a9]; jmp qword ptr [rdx+rax*8]; 
0x000000000e7e14: add bl, al; nop [rax+rax]; mov byte ptr [rdi+0x8], 0x1a; mov eax, 0x2; ret; 
0x000000000e7e28: add bl, al; nop [rax+rax]; mov byte ptr [rdi+0x8], 0x1c; mov eax, 0x2; ret; 
0x00000000146f39: add bl, al; nop [rax+rax]; mov dword ptr [r8+0x4], 0x1; mov eax, 0x1; ret; 
0x00000000149cd9: add bl, al; nop [rax+rax]; mov dword ptr [rdi+0x4], 0x1; mov eax, 0x1; ret; 
0x00000000142f75: add bl, al; nop [rax+rax]; mov dword ptr [rsi], 0x8; ret; 
0x00000000142f65: add bl, al; nop [rax+rax]; mov dword ptr [rsi], 0xa; ret; 
0x00000000142f55: add bl, al; nop [rax+rax]; mov dword ptr [rsi], 0xb; ret; 
0x000000000425f5: add bl, al; nop [rax+rax]; mov eax, 0xffffffff; ret; 
0x00000000136fd4: add bl, al; nop [rax+rax]; mov eax, 0xffffffff; ret; 
0x000000000cbb26: add bl, al; nop [rax+rax]; mov rax, 0x2; ret; 
0x000000000cbb36: add bl, al; nop [rax+rax]; mov rax, 0x3; ret; 
0x000000000cbb46: add bl, al; nop [rax+rax]; mov rax, 0x4; ret; 
0x000000000cbb56: add bl, al; nop [rax+rax]; mov rax, 0x5; ret; 
0x000000000cbb66: add bl, al; nop [rax+rax]; mov rax, 0x6; ret; 
0x000000000cbb76: add bl, al; nop [rax+rax]; mov rax, 0x7; ret; 
0x00000000037386: add bl, al; nop [rax+rax]; mov rax, [rsi+rax*8+0x80]; ret; 
0x000000000b55b3: add bl, al; nop [rax+rax]; mov rax, rdi; ret; 
0x0000000017663f: add bl, al; nop [rax+rax]; nop [rax]; mov [rcx], dl; ret; 
0x000000000b412f: add bl, al; nop [rax+rax]; nop [rax]; mov [rdi], dl; ret; 
0x000000000b3e1f: add bl, al; nop [rax+rax]; nop [rax]; ret; 
0x0000000018c68f: add bl, al; nop [rax+rax]; nop [rax]; xor eax, eax; ret; 
0x0000000015a945: add bl, al; nop [rax+rax]; xor eax, eax; ret; 
0x00000000028dda: add bl, al; nop [rax]; endbr64; lea rax, [rip+0x186cbd]; ret; 
0x000000001515bb: add bl, al; nop [rax]; endbr64; mov eax, [rdi+0x28]; ret; 
0x0000000002a6ca: add bl, al; nop [rax]; endbr64; mov rax, [rip+0x1baf95]; ret; 
0x0000000008fe4a: add bl, al; nop [rax]; endbr64; xor eax, eax; ret; 
0x000000000a4d8a: add bl, al; nop [rax]; mov [rax], si; ret; 
0x00000000149ceb: add bl, al; nop [rax]; mov dword ptr [rdi+0x4], 0x0; mov eax, 0x1; ret; 
0x00000000061163: add bl, al; nop [rax]; mov eax, 0x10; ret; 
0x00000000191d9f: add bl, al; nop [rax]; ret; 
0x0000000015971f: add bl, al; nop [rax]; xor eax, eax; ret; 
0x000000000e7dad: add bl, al; nop; mov byte ptr [rdi+0x8], 0x2; xor eax, eax; ret; 
0x0000000014a68d: add bl, al; nop; xor eax, eax; ret; 
0x0000000009b8d4: add bl, al; ret; 
0x0000000006116c: add bl, al; xchg ax, ax; add dword ptr [rdx+0x4], 0x1; xor eax, eax; ret; 
0x00000000146f4c: add bl, al; xchg ax, ax; mov dword ptr [r8+0x4], 0x0; mov eax, 0x1; ret; 
0x000000000e0a6c: add bl, al; xchg ax, ax; mov eax, 0x7e; ret; 
0x00000000136b64: add bl, al; xor eax, eax; ret; 
0x00000000088a33: add bl, bh; jmp qword ptr [rsi+0x2e]; 
0x0000000004069f: add bl, bl; insb [rdi], dx; and al, 0x8; fadd st, st(0); ret; 
0x0000000004053b: add bl, bl; insb [rdi], dx; and al, 0xe8; ret; 
0x000000000deb6d: add bl, ch; fdivr st(3), st; nop edx, edi; mov eax, 0x3b; syscall; 
0x00000000148d6a: add bl, ch; mov eax, 0xfe09dee8; jmp qword ptr [rsi+0x66]; 
0x00000000141e8a: add bl, ch; mov eax, 0xfe78bee8; jmp qword ptr [rsi+0x66]; 
0x00000000144352: add bl, ch; mov ebp, 0xfe53f6e8; jmp qword ptr [rsi+0xf]; 
0x00000000156f32: add bl, ch; mov edx, 0xfd2816e8; jmp qword ptr [rsi+0xf]; 
0x000000000cf5c2: add bl, ch; or [rax-0x7d], ecx; ret; 
0x0000000012a4c7: add bl, ch; ret far; 
0x000000000dec4d: add bl, ch; ret; 
0x00000000099a14: add bl, ch; sahf; nop [rax+rax]; mov rsi, r12; call rax; 
0x000000000a0620: add bl, ch; sub [rbp-0x7cbe00b5], cl; ret; 
0x00000000069ffc: add bl, cl; adc eax, [rax]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000040d2f: add bl, dh; addps xmm0, xmm0; ret; 
0x0000000017e23f: add bl, dh; bsf eax, eax; add rax, rdi; vzeroupper; ret; 
0x00000000190d13: add bl, dh; divps xmm0, [rip+0x279c8]; ret; 
0x000000000deb03: add bl, dh; lfence; jmp rdi; 
0x000000000b821b: add bl, dh; movq [rdi+rdx-0x10], mm0; movdqu [rdi], xmm0; ret; 
0x000000000b421f: add bl, dh; movq [rdi-0x1], mm0; ret; 
0x000000000b422f: add bl, dh; movq [rdi], mm0; ret; 
0x0000000014a577: add bl, dh; movq mm0, [r8]; mov eax, esi; movups [rdi+0x30], xmm0; ret; 
0x00000000142f3f: add bl, dh; movq mm0, [rdi+0x38]; mov dword ptr [rsi], 0x9; movups [rsi+0x8], xmm0; ret; 
0x00000000146ea7: add bl, dh; movq mm0, [rdx]; mov eax, esi; movups [r8+0x8], xmm0; ret; 
0x000000000b324f: add bl, dh; movq mm0, [rsi]; movdqu [rdi], xmm0; mov [rdi+0x10], dh; ret; 
0x00000000146eb7: add bl, dh; movq mm1, [r8+0x8]; mov eax, 0x1; movups [rdx], xmm1; ret; 
0x00000000142f0f: add bl, dh; movq mm1, [rdi+0x20]; mov dword ptr [rsi], 0x6; movups [rsi+0x8], xmm1; ret; 
0x0000000014a587: add bl, dh; movq mm1, [rdi+0x30]; mov eax, 0x1; movups [r8], xmm1; ret; 
0x00000000149ca7: add bl, dh; movq mm1, [rdi+0x8]; mov eax, 0x1; movups [r8], xmm1; ret; 
0x00000000149cbf: add bl, dh; movq mm2, [rdi+0x1c]; mov eax, 0x1; movups [r8], xmm2; ret; 
0x0000000014a59f: add bl, dh; movq mm4, [rdi+0x8]; mov eax, 0x1; movups [r8], xmm4; ret; 
0x00000000107c28: add bl, dh; movq mm7, [rsi+0x70]; movups [rdi+0xf8], xmm7; ret; 
0x00000000040cd6: add bl, dh; mulps xmm0, [rip+0x1766f9]; ret; 
0x00000000040cb1: add bl, dh; mulps xmm0, [rip+0x176722]; ret; 
0x0000000015169f: add bl, dh; nop edx, edi; add dword ptr [rdi+0x28], 0x4; mov eax, 0x1; ret; 
0x0000000008e3ef: add bl, dh; nop edx, edi; cmp qword ptr [rdi+0x38], 0x0; je short 0x000000000008e400; ret; 
0x0000000009b28f: add bl, dh; nop edx, edi; cmp qword ptr [rip+0x14bc74], 0x0; je short 0x000000000009b2a0; ret; 
0x00000000028ddf: add bl, dh; nop edx, edi; lea rax, [rip+0x186cbd]; ret; 
0x00000000028dcf: add bl, dh; nop edx, edi; lea rax, [rip+0x18932d]; ret; 
0x000000001072df: add bl, dh; nop edx, edi; mov [rdi+0x4], esi; xor eax, eax; ret; 
0x0000000009132f: add bl, dh; nop edx, edi; mov dword ptr [rdi], 0x0; xor eax, eax; ret; 
0x0000000011941f: add bl, dh; nop edx, edi; mov eax, 0x122; syscall; 
0x0000000011024f: add bl, dh; nop edx, edi; mov eax, 0x132; syscall; 
0x0000000011a12f: add bl, dh; nop edx, edi; mov eax, 0x134; syscall; 
0x00000000108e0f: add bl, dh; nop edx, edi; mov eax, 0x15; syscall; 
0x000000000920cf: add bl, dh; nop edx, edi; mov eax, 0x18; syscall; 
0x0000000014135f: add bl, dh; nop edx, edi; mov eax, 0x1; ret; 
0x000000001139af: add bl, dh; nop edx, edi; mov eax, 0x1c; syscall; 
0x0000000011b26f: add bl, dh; nop edx, edi; mov eax, 0x1e; syscall; 
0x0000000011b30f: add bl, dh; nop edx, edi; mov eax, 0x1f; syscall; 
0x0000000010956f: add bl, dh; nop edx, edi; mov eax, 0x20; syscall; 
0x000000000de79f: add bl, dh; nop edx, edi; mov eax, 0x25; syscall; 
0x000000000d020f: add bl, dh; nop edx, edi; mov eax, 0x26; syscall; 
0x0000000014369f: add bl, dh; nop edx, edi; mov eax, 0x2; ret; 
0x0000000011a8ff: add bl, dh; nop edx, edi; mov eax, 0x30; syscall; 
0x0000000011a2ef: add bl, dh; nop edx, edi; mov eax, 0x31; syscall; 
0x0000000011a44f: add bl, dh; nop edx, edi; mov eax, 0x32; syscall; 
0x0000000011a3bf: add bl, dh; nop edx, edi; mov eax, 0x34; syscall; 
0x0000000010e2bf: add bl, dh; nop edx, edi; mov eax, 0x3; syscall; 
0x00000000041bbf: add bl, dh; nop edx, edi; mov eax, 0x3e; syscall; 
0x000000000de54f: add bl, dh; nop edx, edi; mov eax, 0x3f; syscall; 
0x0000000011b14f: add bl, dh; nop edx, edi; mov eax, 0x40; syscall; 
0x0000000011b29f: add bl, dh; nop edx, edi; mov eax, 0x43; syscall; 
0x0000000011b0df: add bl, dh; nop edx, edi; mov eax, 0x44; syscall; 
0x0000000011b10f: add bl, dh; nop edx, edi; mov eax, 0x47; syscall; 
0x0000000010924f: add bl, dh; nop edx, edi; mov eax, 0x49; syscall; 
0x00000000111bdf: add bl, dh; nop edx, edi; mov eax, 0x4c; syscall; 
0x00000000111c0f: add bl, dh; nop edx, edi; mov eax, 0x4d; syscall; 
0x000000001096ef: add bl, dh; nop edx, edi; mov eax, 0x50; syscall; 
0x0000000010a85f: add bl, dh; nop edx, edi; mov eax, 0x56; syscall; 
0x0000000010a97f: add bl, dh; nop edx, edi; mov eax, 0x57; syscall; 
0x0000000010a8bf: add bl, dh; nop edx, edi; mov eax, 0x58; syscall; 
0x000000001086ef: add bl, dh; nop edx, edi; mov eax, 0x5a; syscall; 
0x000000001086df: add bl, dh; nop edx, edi; mov eax, 0x5f; syscall; 
0x0000000010ed6f: add bl, dh; nop edx, edi; mov eax, 0x62; syscall; 
0x0000000011a00f: add bl, dh; nop edx, edi; mov eax, 0x63; syscall; 
0x000000000dfb1f: add bl, dh; nop edx, edi; mov eax, 0x66; syscall; 
0x000000000dfb3f: add bl, dh; nop edx, edi; mov eax, 0x68; syscall; 
0x000000000dfb2f: add bl, dh; nop edx, edi; mov eax, 0x6b; syscall; 
0x000000000dfb4f: add bl, dh; nop edx, edi; mov eax, 0x6c; syscall; 
0x000000000dfb0f: add bl, dh; nop edx, edi; mov eax, 0x6e; syscall; 
0x000000000dfb5f: add bl, dh; nop edx, edi; mov eax, 0x73; syscall; 
0x000000001192af: add bl, dh; nop edx, edi; mov eax, 0x7a; syscall; 
0x000000000dfe3f: add bl, dh; nop edx, edi; mov eax, 0x7c; syscall; 
0x00000000119c4f: add bl, dh; nop edx, edi; mov eax, 0x7d; syscall; 
0x000000000421bf: add bl, dh; nop edx, edi; mov eax, 0x83; syscall; 
0x000000001194df: add bl, dh; nop edx, edi; mov eax, 0x87; syscall; 
0x0000000010858f: add bl, dh; nop edx, edi; mov eax, 0x89; syscall; 
0x00000000108ddf: add bl, dh; nop edx, edi; mov eax, 0x8; syscall; 
0x0000000010f13f: add bl, dh; nop edx, edi; mov eax, 0x8c; syscall; 
0x0000000010f17f: add bl, dh; nop edx, edi; mov eax, 0x8d; syscall; 
0x000000000fd16f: add bl, dh; nop edx, edi; mov eax, 0x8e; syscall; 
0x00000000113a3f: add bl, dh; nop edx, edi; mov eax, 0x95; syscall; 
0x0000000011058f: add bl, dh; nop edx, edi; mov eax, 0x99; syscall; 
0x00000000119baf: add bl, dh; nop edx, edi; mov eax, 0x9e; syscall; 
0x0000000011018f: add bl, dh; nop edx, edi; mov eax, 0xa2; syscall; 
0x0000000011009f: add bl, dh; nop edx, edi; mov eax, 0xa3; syscall; 
0x0000000011924f: add bl, dh; nop edx, edi; mov eax, 0xa6; syscall; 
0x0000000010fe8f: add bl, dh; nop edx, edi; mov eax, 0xab; syscall; 
0x0000000011916f: add bl, dh; nop edx, edi; mov eax, 0xad; syscall; 
0x00000000119d9f: add bl, dh; nop edx, edi; mov eax, 0xb1; syscall; 
0x00000000119f4f: add bl, dh; nop edx, edi; mov eax, 0xb4; syscall; 
0x0000000011927f: add bl, dh; nop edx, edi; mov eax, 0xbb; syscall; 
0x00000000116f0f: add bl, dh; nop edx, edi; mov eax, 0xc2; syscall; 
0x00000000116f6f: add bl, dh; nop edx, edi; mov eax, 0xc3; syscall; 
0x00000000116e4f: add bl, dh; nop edx, edi; mov eax, 0xc4; syscall; 
0x00000000116fff: add bl, dh; nop edx, edi; mov eax, 0xc5; syscall; 
0x000000000fd35f: add bl, dh; nop edx, edi; mov eax, 0xcb; syscall; 
0x0000000011a1ff: add bl, dh; nop edx, edi; mov eax, 0xea; syscall; 
0x00000000119dff: add bl, dh; nop edx, edi; mov eax, 0xfe; syscall; 
0x0000000008e4af: add bl, dh; nop edx, edi; mov eax, 0xffffffff; ret; 
0x0000000008fb6f: add bl, dh; nop edx, edi; mov eax, [rdi+0x10]; sub eax, [rsi+0x10]; ret; 
0x000000001515bf: add bl, dh; nop edx, edi; mov eax, [rdi+0x28]; ret; 
0x0000000010e61f: add bl, dh; nop edx, edi; mov eax, [rdi+0x8]; and eax, 0x100f; ret; 
0x0000000008960f: add bl, dh; nop edx, edi; mov eax, [rdi]; and eax, 0x200; ret; 
0x000000000895df: add bl, dh; nop edx, edi; mov eax, [rdi]; and eax, 0x804; ret; 
0x000000000da1cf: add bl, dh; nop edx, edi; mov eax, [rdi]; ret; 
0x000000000425bf: add bl, dh; nop edx, edi; mov eax, [rip+0x1a0bde]; ret; 
0x000000000425af: add bl, dh; nop edx, edi; mov eax, [rip+0x1a0bf2]; ret; 
0x00000000038d6f: add bl, dh; nop edx, edi; mov eax, edi; and eax, 0x7f; ret; 
0x0000000012979f: add bl, dh; nop edx, edi; mov eax, edi; bswap eax; ret; 
0x000000001297af: add bl, dh; nop edx, edi; mov eax, edi; rol ax, 0x8; ret; 
0x0000000015ceef: add bl, dh; nop edx, edi; mov qword ptr [rcx], 0x0; mov eax, 0xffffffff; ret; 
0x00000000060fef: add bl, dh; nop edx, edi; mov r10, rcx; mov eax, 0x108; syscall; 
0x0000000010e5af: add bl, dh; nop edx, edi; mov r10, rcx; mov eax, 0x11; syscall; 
0x00000000119a2f: add bl, dh; nop edx, edi; mov r10, rcx; mov eax, 0x11e; syscall; 
0x00000000119c1f: add bl, dh; nop edx, edi; mov r10, rcx; mov eax, 0x12d; syscall; 
0x000000001194af: add bl, dh; nop edx, edi; mov r10, rcx; mov eax, 0x12e; syscall; 
0x00000000119aff: add bl, dh; nop edx, edi; mov r10, rcx; mov eax, 0x136; syscall; 
0x00000000119f1f: add bl, dh; nop edx, edi; mov r10, rcx; mov eax, 0x19; syscall; 
0x0000000010dc8f: add bl, dh; nop edx, edi; mov r10, rcx; mov eax, 0x28; syscall; 
0x00000000119fdf: add bl, dh; nop edx, edi; mov r10, rcx; mov eax, 0xb3; syscall; 
0x00000000116edf: add bl, dh; nop edx, edi; mov r10, rcx; mov eax, 0xbf; syscall; 
0x00000000116e1f: add bl, dh; nop edx, edi; mov r10, rcx; mov eax, 0xc1; syscall; 
0x0000000011b22f: add bl, dh; nop edx, edi; mov r10, rcx; mov eax, 0xdc; syscall; 
0x0000000010840f: add bl, dh; nop edx, edi; mov r10d, ecx; mov eax, 0x14c; syscall; 
0x0000000010d7cf: add bl, dh; nop edx, edi; mov r10d, ecx; mov eax, 0xdd; syscall; 
0x0000000008fdff: add bl, dh; nop edx, edi; mov rax, 0xffffffffffffffff; ret; 
0x0000000015113f: add bl, dh; nop edx, edi; mov rax, [rdi+0x18]; sub rax, [rdi+0x20]; ret; 
0x0000000008fe5f: add bl, dh; nop edx, edi; mov rax, [rdi+0x68]; ret; 
0x0000000008fe3f: add bl, dh; nop edx, edi; mov rax, [rip+0x154775]; ret; 
0x00000000038f7f: add bl, dh; nop edx, edi; mov rax, [rip+0x1a9f3d]; add rax, fs:[0x0]; ret; 
0x00000000038f9f: add bl, dh; nop edx, edi; mov rax, [rip+0x1a9f55]; add rax, fs:[0x0]; ret; 
0x0000000003401f: add bl, dh; nop edx, edi; mov rax, [rip+0x1b1685]; ret; 
0x0000000002902f: add bl, dh; nop edx, edi; mov rax, [rip+0x1b9e0d]; add rax, fs:[0x0]; ret; 
0x0000000002a6cf: add bl, dh; nop edx, edi; mov rax, [rip+0x1baf95]; ret; 
0x0000000002a6bf: add bl, dh; nop edx, edi; mov rax, [rip+0x1baf9d]; ret; 
0x0000000015987f: add bl, dh; nop edx, edi; mov rax, [rip+0x895ad]; jmp qword ptr [rax+0x280]; 
0x00000000129b5f: add bl, dh; nop edx, edi; mov rax, [rip+0xb92c5]; add rax, fs:[0x0]; ret; 
0x0000000011c96f: add bl, dh; nop edx, edi; mov rax, [rip+0xc64bd]; mov eax, [rax+0x38]; ret; 
0x0000000009194f: add bl, dh; nop edx, edi; mov rax, fs:[0x10]; ret; 
0x0000000008fe6f: add bl, dh; nop edx, edi; mov rax, rdi; ret; 
0x00000000040a8f: add bl, dh; nop edx, edi; pmovmskb eax, xmm0; and eax, 0x80; ret; 
0x000000000deadf: add bl, dh; nop edx, edi; pop rdi; mov eax, 0x3a; syscall; 
0x0000000008fe2f: add bl, dh; nop edx, edi; ret; 
0x0000000008fe0f: add bl, dh; nop edx, edi; xor eax, eax; ret; 
0x0000000010e57f: add bl, dh; nop edx, edi; xor eax, eax; syscall; 
0x0000000011b2cf: add bl, dh; nop edx, edi; xor r10d, r10d; mov eax, 0x1d; syscall; 
0x00000000146eb6: add bl, sil; movq mm1, [r8+0x8]; mov eax, 0x1; movups [rdx], xmm1; ret; 
0x0000000014a586: add bl, sil; movq mm1, [rdi+0x30]; mov eax, 0x1; movups [r8], xmm1; ret; 
0x0000000015169e: add bl, sil; nop edx, edi; add dword ptr [rdi+0x28], 0x4; mov eax, 0x1; ret; 
0x00000000028dde: add bl, sil; nop edx, edi; lea rax, [rip+0x186cbd]; ret; 
0x000000001072de: add bl, sil; nop edx, edi; mov [rdi+0x4], esi; xor eax, eax; ret; 
0x0000000011941e: add bl, sil; nop edx, edi; mov eax, 0x122; syscall; 
0x00000000108e0e: add bl, sil; nop edx, edi; mov eax, 0x15; syscall; 
0x000000000920ce: add bl, sil; nop edx, edi; mov eax, 0x18; syscall; 
0x0000000011b26e: add bl, sil; nop edx, edi; mov eax, 0x1e; syscall; 
0x0000000011b30e: add bl, sil; nop edx, edi; mov eax, 0x1f; syscall; 
0x0000000014df0e: add bl, sil; nop edx, edi; mov eax, 0x2; ret; 
0x000000000de54e: add bl, sil; nop edx, edi; mov eax, 0x3f; syscall; 
0x0000000011b29e: add bl, sil; nop edx, edi; mov eax, 0x43; syscall; 
0x0000000010a85e: add bl, sil; nop edx, edi; mov eax, 0x56; syscall; 
0x000000001086ee: add bl, sil; nop edx, edi; mov eax, 0x5a; syscall; 
0x000000001086de: add bl, sil; nop edx, edi; mov eax, 0x5f; syscall; 
0x0000000010ed6e: add bl, sil; nop edx, edi; mov eax, 0x62; syscall; 
0x000000000dfb1e: add bl, sil; nop edx, edi; mov eax, 0x66; syscall; 
0x000000000dfb3e: add bl, sil; nop edx, edi; mov eax, 0x68; syscall; 
0x000000000dfb2e: add bl, sil; nop edx, edi; mov eax, 0x6b; syscall; 
0x000000000dfb4e: add bl, sil; nop edx, edi; mov eax, 0x6c; syscall; 
0x000000000dfb0e: add bl, sil; nop edx, edi; mov eax, 0x6e; syscall; 
0x000000000dfb5e: add bl, sil; nop edx, edi; mov eax, 0x73; syscall; 
0x000000001192ae: add bl, sil; nop edx, edi; mov eax, 0x7a; syscall; 
0x0000000010858e: add bl, sil; nop edx, edi; mov eax, 0x89; syscall; 
0x0000000010f17e: add bl, sil; nop edx, edi; mov eax, 0x8d; syscall; 
0x000000000fd16e: add bl, sil; nop edx, edi; mov eax, 0x8e; syscall; 
0x0000000010fe8e: add bl, sil; nop edx, edi; mov eax, 0xab; syscall; 
0x0000000011a1fe: add bl, sil; nop edx, edi; mov eax, 0xea; syscall; 
0x0000000008fdee: add bl, sil; nop edx, edi; mov eax, 0xffffffff; ret; 
0x0000000008fb6e: add bl, sil; nop edx, edi; mov eax, [rdi+0x10]; sub eax, [rsi+0x10]; ret; 
0x0000000010e61e: add bl, sil; nop edx, edi; mov eax, [rdi+0x8]; and eax, 0x100f; ret; 
0x000000000da1ce: add bl, sil; nop edx, edi; mov eax, [rdi]; ret; 
0x000000000425ae: add bl, sil; nop edx, edi; mov eax, [rip+0x1a0bf2]; ret; 
0x00000000038d6e: add bl, sil; nop edx, edi; mov eax, edi; and eax, 0x7f; ret; 
0x0000000012979e: add bl, sil; nop edx, edi; mov eax, edi; bswap eax; ret; 
0x0000000010e5ae: add bl, sil; nop edx, edi; mov r10, rcx; mov eax, 0x11; syscall; 
0x00000000119c1e: add bl, sil; nop edx, edi; mov r10, rcx; mov eax, 0x12d; syscall; 
0x0000000002a6ce: add bl, sil; nop edx, edi; mov rax, [rip+0x1baf95]; ret; 
0x0000000009207e: add bl, sil; nop edx, edi; mov rax, fs:[0x10]; ret; 
0x00000000040a8e: add bl, sil; nop edx, edi; pmovmskb eax, xmm0; and eax, 0x80; ret; 
0x0000000011f32e: add bl, sil; nop edx, edi; ret; 
0x0000000008fe0e: add bl, sil; nop edx, edi; xor eax, eax; ret; 
0x00000000126220: add byte ptr [r8], 0x0; add [rax], al; movups [rbp-0x78], xmm7; call rcx; 
0x00000000146f15: add byte ptr [rax+rax+0x42890000], 0x68; movzx eax, word ptr [r8+0x88]; mov [rdx+0x6c], ax; mov eax, 0x1; ret; 
0x000000000b3dec: add byte ptr [rax+rax], 0x0; ret; 
0x000000000896e9: add byte ptr [rax-0x17c801b], 0x2; cmovne edx, ecx; mov [rdi], edx; ret; 
0x0000000002e075: add byte ptr [rax], 0x0; add [rax+0x39], cl; ret; 
0x00000000090b50: add byte ptr [rax], 0x0; add [rax+0xca], bh; syscall; 
0x000000000913ae: add byte ptr [rax], 0x0; add [rax+0xcc], bh; syscall; 
0x00000000039aac: add byte ptr [rax], 0x0; add [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x00000000076bec: add byte ptr [rax], 0x0; add [rax-0x7d], cl; ret; 
0x00000000191d4b: add byte ptr [rax], 0x0; add [rax], al; add rsp, 0x8; ret; 
0x0000000009116b: add byte ptr [rax], 0x0; add [rax], al; and dword ptr [rdi+0x8], 0xfffffffb; xor eax, eax; ret; 
0x000000000a845b: add byte ptr [rax], 0x0; add [rax], al; bsf eax, eax; add rax, rdi; ret; 
0x000000000a847b: add byte ptr [rax], 0x0; add [rax], al; bsf eax, eax; lea rax, [rax+rdi+0x20]; ret; 
0x000000000a894b: add byte ptr [rax], 0x0; add [rax], al; bsr eax, eax; lea rax, [rax+rdi+0x20]; ret; 
0x000000000a895b: add byte ptr [rax], 0x0; add [rax], al; bsr eax, eax; lea rax, [rax+rdi+0x30]; ret; 
0x0000000008fe6b: add byte ptr [rax], 0x0; add [rax], al; endbr64; mov rax, rdi; ret; 
0x0000000014155b: add byte ptr [rax], 0x0; add [rax], al; endbr64; ret; 
0x000000000a4dab: add byte ptr [rax], 0x0; add [rax], al; mov [rax], ecx; ret; 
0x000000000a4e4b: add byte ptr [rax], 0x0; add [rax], al; mov [rdi], si; lea rax, [rdi+rax-0x1]; ret; 
0x000000000a4d83: add byte ptr [rax], 0x0; add [rax], al; mov byte ptr [rax], 0x0; ret; 
0x000000000e7deb: add byte ptr [rax], 0x0; add [rax], al; mov byte ptr [rdi+0x8], 0x15; mov eax, 0x1; ret; 
0x0000000007bf33: add byte ptr [rax], 0x0; add [rax], al; mov dword ptr [rsp+0x3c], 0x1; mov rbx, rsi; jmp rcx; 
0x0000000007622b: add byte ptr [rax], 0x0; add [rax], al; mov dword ptr [rsp+0x54], 0x1; mov rbx, rdi; jmp rsi; 
0x00000000136fcb: add byte ptr [rax], 0x0; add [rax], al; mov eax, 0x2; ret; 
0x000000001377fb: add byte ptr [rax], 0x0; add [rax], al; mov eax, 0x7fffffff; ret; 
0x000000001198c3: add byte ptr [rax], 0x0; add [rax], al; mov eax, 0x95; syscall; 
0x0000000013749b: add byte ptr [rax], 0x0; add [rax], al; mov eax, 0xffffffff; ret; 
0x0000000016782b: add byte ptr [rax], 0x0; add [rax], al; mov edx, [rsi]; mov [rdi], edx; ret; 
0x0000000013777b: add byte ptr [rax], 0x0; add [rax], al; mov rax, 0xffffffffffffffff; mov rdx, 0xffffffffffffffff; ret; 
0x000000001170b3: add byte ptr [rax], 0x0; add [rax], al; mov rax, [rax+0x58]; ret; 
0x00000000150f3b: add byte ptr [rax], 0x0; add [rax], al; mov rax, [rdi+0x8]; lea rsi, [rsp+0x4]; call qword ptr [rax+0x40]; 
0x00000000143d3b: add byte ptr [rax], 0x0; add [rax], al; mov rax, [rdi+0x8]; mov rsi, rsp; call qword ptr [rax]; 
0x0000000014d16b: add byte ptr [rax], 0x0; add [rax], al; mov rax, [rip+0x95c11]; pop rbx; ret; 
0x0000000014d09b: add byte ptr [rax], 0x0; add [rax], al; mov rax, [rip+0x95d81]; pop rbx; ret; 
0x0000000014d23b: add byte ptr [rax], 0x0; add [rax], al; mov rax, [rip+0x95d99]; pop rbx; ret; 
0x00000000148d53: add byte ptr [rax], 0x0; add [rax], al; mov rax, [rsp+0x8]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x0000000009b8fb: add byte ptr [rax], 0x0; add [rax], al; mov rdi, [rbx+0x48]; call rax; 
0x0000000016766b: add byte ptr [rax], 0x0; add [rax], al; mov rdx, [rsi]; mov [rdi], rdx; ret; 
0x00000000126221: add byte ptr [rax], 0x0; add [rax], al; movups [rbp-0x78], xmm7; call rcx; 
0x000000000b84eb: add byte ptr [rax], 0x0; add [rax], al; movzx eax, cl; pop rbx; ret; 
0x0000000016797b: add byte ptr [rax], 0x0; add [rax], al; movzx edx, byte ptr [rsi]; mov [rdi], dl; ret; 
0x0000000016790b: add byte ptr [rax], 0x0; add [rax], al; movzx edx, word ptr [rsi]; mov [rdi], dx; ret; 
0x000000000c60b3: add byte ptr [rax], 0x0; add [rax], al; pop rbp; ret; 
0x00000000052463: add byte ptr [rax], 0x0; add [rax], al; ret; 
0x000000001835ad: add byte ptr [rax], 0x0; add [rax], al; vzeroupper; ret; 
0x0000000003f8a3: add byte ptr [rax], 0x0; add [rax], al; xor eax, eax; ret; 
0x00000000139e83: add byte ptr [rax], 0x0; add [rax], al; xor r10d, r10d; mov eax, r10d; ret; 
0x0000000008a833: add byte ptr [rax], 0x0; add [rax], al; xor r8d, r8d; mov rax, r8; ret; 
0x00000000040c1e: add byte ptr [rax], 0x0; add [rbp+0xc], dh; test eax, 0x7fffff; je short 0x0000000000040c30; ret; 
0x00000000090aa3: add byte ptr [rax], 0x0; add [rcx+rcx*4-0x38], al; syscall; 
0x00000000091295: add byte ptr [rax], 0x0; add [rcx+rcx*4-0x40], al; syscall; 
0x00000000090e78: add byte ptr [rax], 0x0; add [rcx], dh; ror byte ptr [rdi], 0x11; jle short 0x0000000000090ef2; ret; 
0x00000000164f47: add byte ptr [rax], 0x0; add [rdi+0x63], cl; or al, 0x8b; add r9, r11; notrack jmp r9; 
0x000000001122ab: add byte ptr [rax], 0x0; add rsp, 0x8; mov eax, r8d; ret; 
0x0000000010ded5: add byte ptr [rax], 0x0; je short 0x000000000010dee8; mov qword ptr [rdi], 0xffffffffffffffff; ret; 
0x00000000038be8: add byte ptr [rax], 0x0; ret; 
0x000000000c71e4: add byte ptr [rcx+rcx*4+0x42], 0x4; mov [rdx], eax; xor eax, eax; ret; 
0x0000000014b97a: add byte ptr [rcx+rcx*4-0x40], 0x5d; ret; 
0x000000000d750a: add ch, [rcx]; ret far; 
0x000000000c6cea: add ch, [rdi]; cli; jmp qword ptr [rsi-0x70]; 
0x0000000005f605: add ch, [rip-0x17000000]; ret far; 
0x00000000078225: add ch, [rip-0x7d000000]; ret; 
0x000000000e4a47: add ch, al; ret; 
0x0000000017e502: add ch, al; std; xlat [rbx]; ret; 
0x00000000188b8a: add ch, bl; add al, [rax]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x000000001563f4: add ch, ch; jmp qword ptr [rbx+rcx*4+0x4]; 
0x000000001288ac: add ch, cl; fsub st(7), st; jmp qword ptr [rsi+0xf]; 
0x000000001288dc: add ch, cl; pop rsi; fucomp st, st(7); jmp qword ptr [rsi+0xf]; 
0x0000000012890c: add ch, cl; scasb [rdi]; fsub st(7), st; jmp qword ptr [rsi+0xf]; 
0x000000000afcec: add cl, [r8-0x76b7fdbe]; clc; ret; 
0x0000000004627b: add cl, [r8-0x77]; add [r9], r14b; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x5d], bl; ret; 
0x000000000e7113: add cl, [r9-0x7d]; ret; 
0x000000000faf50: add cl, [rax+0x16893847]; movups [rsi+0x8], xmm0; ret; 
0x00000000084543: add cl, [rax+0x29]; ret far; 
0x0000000005f09d: add cl, [rax+0x39]; enter 0x97e, 0x8b; outsd dx, [rsi]; or [rcx-0x77], al; ret; 
0x000000000311fc: add cl, [rax+0x39]; ret far; 
0x00000000032343: add cl, [rax+0x39]; ret; 
0x00000000136772: add cl, [rax+0x39]; stc; jae short 0x0000000000136783; mov eax, 0xffffffff; ret; 
0x000000001856d8: add cl, [rax+0x77f8c50f]; ret; 
0x00000000085e9d: add cl, [rax+0xf]; scasd [rdi]; ret; 
0x000000000599d9: add cl, [rax-0x72b7fdb1]; add rcx, [rcx+0x39]; ret far; 
0x00000000072c2c: add cl, [rax-0x73]; adc eax, 0xfffffb7a; movsxd rax, [rdi+rax*4]; add rax, rdx; jmp rax; 
0x000000000b91c6: add cl, [rax-0x73]; add eax, 0x10e62; lea rdx, [rip+0xd2eab]; cmovne rax, rdx; ret; 
0x000000000b8ce8: add cl, [rax-0x73]; add eax, 0x124c0; cmovne rax, rdx; ret; 
0x0000000009d4a1: add cl, [rax-0x73]; add eax, 0x15857; lea rdx, [rip+0xd5a10]; cmovne rax, rdx; ret; 
0x0000000009c281: add cl, [rax-0x73]; add eax, 0x16987; lea rdx, [rip+0xd2900]; cmovne rax, rdx; ret; 
0x0000000009c151: add cl, [rax-0x73]; add eax, 0x19b27; lea rdx, [rip+0x12110]; cmovne rax, rdx; ret; 
0x000000001277eb: add cl, [rax-0x73]; add eax, 0x62c8d; lea rdx, [rip+0x62c16]; cmove rax, rdx; ret; 
0x0000000009d501: add cl, [rax-0x73]; add eax, 0x7c77; lea rdx, [rip+0xd71c0]; cmovne rax, rdx; ret; 
0x0000000009c6b1: add cl, [rax-0x73]; add eax, 0x8b37; lea rdx, [rip+0xd3c80]; cmovne rax, rdx; ret; 
0x0000000009c5e1: add cl, [rax-0x73]; add eax, 0x8b47; lea rdx, [rip+0x138a0]; cmovne rax, rdx; ret; 
0x0000000009c201: add cl, [rax-0x73]; add eax, 0x9047; lea rdx, [rip+0xc0d00]; cmovne rax, rdx; ret; 
0x0000000009c65f: add cl, [rax-0x73]; add eax, 0xa2e9; lea rdx, [rip+0xc1b12]; cmovne rax, rdx; ret; 
0x0000000009d60a: add cl, [rax-0x73]; add eax, 0xb8ce; lea rdx, [rip+0xccec7]; cmovne rax, rdx; ret; 
0x0000000009d1b6: add cl, [rax-0x73]; add eax, 0xb902; lea rdx, [rip+0xed74b]; cmovne rax, rdx; ret; 
0x0000000009d56a: add cl, [rax-0x73]; add eax, 0xb94e; lea rdx, [rip+0xccf47]; cmovne rax, rdx; ret; 
0x0000000009d65a: add cl, [rax-0x73]; add eax, 0xdace; lea rdx, [rip+0xcefd7]; cmovne rax, rdx; ret; 
0x0000000009d5ba: add cl, [rax-0x73]; add eax, 0xdb4e; lea rdx, [rip+0xcf057]; cmovne rax, rdx; ret; 
0x0000000009d33b: add cl, [rax-0x73]; add eax, 0xed14d; lea rdx, [rip+0xed0d6]; cmove rax, rdx; ret; 
0x000000000599dd: add cl, [rax-0x73]; add rcx, [rcx+0x39]; ret far; 
0x000000000b39d9: add cl, [rax-0x73]; jg short 0x00000000000b39e0; jne 0x00000000000b4270; ret; 
0x000000000b50bd: add cl, [rax-0x73]; jg short 0x00000000000b50c4; jne 0x00000000000b5ac0; ret; 
0x00000000183f19: add cl, [rax-0x73]; jg short 0x0000000000183f20; jne 0x00000000001841a0; vzeroupper; ret; 
0x00000000184c4d: add cl, [rax-0x73]; jg short 0x0000000000184c54; jne 0x0000000000184ed0; vzeroupper; ret; 
0x0000000007252a: add cl, [rax-0x73]; or al, 0x13; add rdx, r12; call qword ptr [r10+rax*8]; 
0x00000000174675: add cl, [rax-0x75]; add eax, 0x5428948; lea rax, [rdx+0xc]; ret; 
0x000000001702e5: add cl, [rax-0x75]; add eax, 0x5428948; mov rax, rdi; ret; 
0x0000000010f253: add cl, [rax-0x75]; add eax, 0xd3c45; mov qword ptr [rax], 0xffffffffffffffff; xor eax, eax; ret; 
0x0000000010b7a7: add cl, [rax-0x75]; mov ebp, 0xfffffee8; mov rsi, r9; call qword ptr [rbp-0xf0]; 
0x00000000170215: add cl, [rax-0x75]; or [r8-0x77], cl; or [rax-0x77], cl; clc; ret; 
0x000000000afced: add cl, [rax-0x76b7fdbe]; clc; ret; 
0x0000000004627c: add cl, [rax-0x77]; add [r9], r14b; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x5d], bl; ret; 
0x000000000afc59: add cl, [rax-0x77]; clc; ret; 
0x00000000121986: add cl, [rax-0x77]; out dx, al; mov [rsp+0x10], rax; mov rdx, rax; call qword ptr [r12+0x28]; 
0x000000000825bb: add cl, [rax-0x77]; ret; 
0x000000000cb8d3: add cl, [rax-0x7b]; ror byte ptr [rax+0xf], cl; ret; 
0x0000000007be03: add cl, [rax-0x7b]; ror byte ptr [rdi], 0x88; ret; 
0x00000000069acc: add cl, [rax-0x7d]; ret; 
0x00000000191af9: add cl, [rbp+0x5]; add [rcx], al; pop rbx; ret; 
0x00000000167752: add cl, [rbx+0x257890e]; mov [rdi], ecx; ret; 
0x000000000afd58: add cl, [rbx+0x42890341]; add ecx, [rax-0x77]; clc; ret; 
0x000000001745f5: add cl, [rbx+0x42890541]; add eax, 0x8428d48; ret; 
0x000000000afdfc: add cl, [rbx+0x42890841]; or [rax-0x77], cl; clc; ret; 
0x000000000599d0: add cl, [rcx+0x39]; ret far; 
0x00000000059686: add cl, [rcx+0x39]; ret; 
0x000000000d0aeb: add cl, [rcx+rcx*4-0x40]; add rsp, 0x8; ret; 
0x000000000910a7: add cl, [rcx-0x3fcef7b9]; ret; 
0x0000000006202c: add cl, [rcx-0x60f7b]; jmp qword ptr [rdi+rax*8+0x2]; 
0x000000000e7114: add cl, [rcx-0x7d]; ret; 
0x00000000045a62: add cl, [rcx]; sbb al, [rax]; syscall; 
0x000000000923aa: add cl, [rdi]; adc eax, 0x100; add [rax-0x77], cl; add eax, 0x150ecf; ret; 
0x00000000184c51: add cl, [rdi]; test [rax+0x2], edi; add [rax], al; vzeroupper; ret; 
0x000000000a3e88: add cl, [rdi]; xchg al, cl; ret far; 
0x000000001036f2: add cl, [rdi]; xchg ebp, eax; ret; 
0x000000000afcea: add cl, [rdx+0x42880241]; add cl, [rax-0x77]; clc; ret; 
0x000000001745b3: add cl, [rdx+0x42880441]; add al, 0x48; lea eax, [rdx+0x4]; ret; 
0x000000000afd18: add cl, [rdx+0x42880441]; add al, 0x48; mov eax, edi; ret; 
0x000000000afd9c: add cl, [rdx+0x42880841]; or [rax-0x77], cl; clc; ret; 
0x000000000e44da: add cl, [rip+0x456ee800]; cmc; jmp qword ptr [rsi+0xf]; 
0x000000000cec0c: add cl, ah; cld; dec dword ptr [rax-0x7b]; ror byte ptr [rdi], 0x84; ret; 
0x0000000012b522: add cl, bl; or eax, [rax]; syscall; 
0x000000000c6ce8: add cl, ch; add ch, [rdi]; cli; jmp qword ptr [rsi-0x70]; 
0x000000000363c8: add cl, ch; and al, [rsi]; add [rax], al; xchg ax, ax; ret; 
0x0000000004a4d2: add cl, ch; cdq; fdiv st(7), st; dec dword ptr [rax-0x77]; ret far; 
0x0000000013643c: add cl, ch; cmp dh, 0xff; jmp qword ptr [rsi+0xf]; 
0x00000000149901: add cl, ch; fsincos; out dx, al; jmp qword ptr [rsi+0xf]; 
0x0000000005e060: add cl, ch; idiv bh; jmp qword ptr [rsi+0x2e]; 
0x0000000002d3bc: add cl, ch; imul edi, esi, 0xffffffff; jmp qword ptr [rsi+0xf]; 
0x000000000bde00: add cl, ch; jmp qword ptr [rcx-0x516000a]; 
0x000000000795be: add cl, ch; mov eax, [0x2949e8894dfffffe]; ror byte ptr [rbp+0xf], 0x48; ret; 
0x000000000d076c: add cl, ch; paddb mm7, mm7; jmp qword ptr [rsi+0xf]; 
0x00000000052789: add cl, ch; paddd mm7, mm7; call qword ptr [rax+0x587c031]; 
0x00000000191450: add cl, ch; pop rdx; and al, 0xf8; jmp qword ptr [rsi+0x2e]; 
0x0000000005f609: add cl, ch; ret far; 
0x0000000003067d: add cl, ch; ret; 
0x0000000009a4f4: add cl, ch; sar ch, 0xff; jmp qword ptr [rsi+0xf]; 
0x0000000003bd11: add cl, ch; scasd [rdi]; idiv edi; jmp qword ptr [rsi+0xf]; 
0x0000000007609c: add cl, ch; xchg esp, eax; out 0xff, eax; jmp qword ptr [rsi+0xf]; 
0x0000000018d3c0: add cl, ch; xor ch, 0xff; jmp qword ptr [rsi+0x2e]; 
0x00000000075370: add cl, ch; xor dh, 0xff; jmp qword ptr [rsi+0x2e]; 
0x000000000b917c: add cl, cl; or al, 0x0; cmovne rax, rdx; ret; 
0x00000000126da9: add cl, cl; ret; 
0x0000000006c06f: add dh, [rax]; add [rax], al; add [rax+0x39], cl; ret; 
0x000000000b725b: add dh, [rax]; in eax, dx; mov [rdi+0x3], ch; ret; 
0x000000000b77c7: add dh, [rbp+0x16]; movzx ecx, byte ptr [rsi+rdx+0x3]; test cl, cl; jne short 0x00000000000b77c0; ret; 
0x000000000b7877: add dh, [rbp+0x16]; movzx ecx, byte ptr [rsi+rdx+0x3]; test cl, cl; jne short 0x00000000000b7870; ret; 
0x00000000083e11: add dh, [rbp+0x74]; mov rax, [rax+0xe0]; call qword ptr [rax+0x68]; 
0x00000000091310: add dh, [rbx+rax-0x77]; push rdi; and al, 0x90; xor eax, eax; ret; 
0x00000000107c4b: add dh, [rdi+0x8]; mov [rdi+0x10c], esi; xor eax, eax; ret; 
0x00000000189cc3: add dh, [rdx+0x8]; mov [rdi], cx; mov [rsi-0x2], cx; ret; 
0x000000000d8fe3: add dh, [rdx+rbp*2-0x7b]; dec dword ptr [rdi]; xchg esp, eax; ret; 
0x000000000923cc: add dh, [rsi+0x1]; ret; 
0x0000000009113b: add dh, [rsi+0x2]; ret; 
0x000000000d026a: add dh, [rsi+0x3]; ret; 
0x000000000a4d87: add dh, al; add [rax], al; ret; 
0x00000000111de5: add dh, al; add eax, 0xd5983; and ecx, [rcx+rcx*4-0x40]; mov byte ptr [rsi-0x1], 0x0; ret; 
0x00000000075feb: add dh, al; and al, 0x38; and cl, ch; shr edi, 0xff; jmp qword ptr [rsi+0x2e]; 
0x000000000a4937: add dh, al; inc dword ptr [rax]; mov [rdi], rdx; ret; 
0x00000000120ec7: add dh, al; jmp qword ptr [rax]; 
0x000000000e7e1f: add dh, al; or [r10], r11b; mov eax, 0x2; ret; 
0x000000000e7e2f: add dh, al; or [r8+r15*4], r11b; add al, [rax]; add [rax], al; ret; 
0x00000000137ed8: add dh, al; ret; 
0x000000000787f2: add dh, al; test [rbx], ebx; idiv edi; jmp qword ptr [rax]; 
0x000000000cb096: add dh, bh; fadd st, st(3); nop [rax+rax]; xor rax, rax; ret; 
0x000000000cc65f: add dh, bh; fimul st, dword ptr [rcx-0x67cb63d]; add [rcx-0x1da25], eax; dec dword ptr [rax+0x63]; ret; 
0x00000000167903: add dh, bl; movq [rdi], mm1; ret; 
0x000000000b8ce1: add dh, dh; adc byte ptr [rbp+0x2000000], 0x48; lea eax, [rip+0x124c0]; cmovne rax, rdx; ret; 
0x0000000009c861: add dh, dh; adc byte ptr [rsi+0x10000000], 0x48; lea eax, [rip+0x1b470]; cmovne rax, rdx; ret; 
0x0000000009c731: add dh, dh; adc byte ptr [rsi+0x10000000], 0x48; lea eax, [rip+0x1b4f0]; cmovne rax, rdx; ret; 
0x0000000009c2c1: add dh, dh; adc byte ptr [rsi+0x10000000], 0x48; lea eax, [rip+0x1b8b0]; cmovne rax, rdx; ret; 
0x0000000009c16e: add dh, dh; mov byte ptr [rcx], 0x74; ret far; 
0x00000000074795: add dh, dh; ret; 
0x000000000ca0a7: add dil, r15b; ret; 
0x0000000010e902: add dl, [rsi]; add [rax], al; add [rcx-0x7d], al; ret far; 
0x00000000087bf3: add dl, bh; jmp qword ptr [rsi+0x2e]; 
0x0000000015b74a: add dl, bl; in eax, dx; jmp qword ptr [rsi-0x70]; 
0x000000000409df: add dl, dh; addps xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x0000000004095d: add dl, dh; movups xmm0, [rip+0x17637a]; orpd xmm1, [rip+0x175d92]; mulsd xmm0, xmm1; ret; 
0x00000000040937: add dl, dh; movups xmm0, [rip+0x1763a8]; orpd xmm1, [rip+0x175dc8]; mulsd xmm0, xmm1; ret; 
0x00000000040947: add dl, dh; mulps xmm0, xmm1; ret; 
0x00000000167e09: add dword ptr [rax*1+0x14634900], 0xffffff93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000453d7: add dword ptr [rax+0x460], 0x1; lea rdi, [rbp+0x988]; call qword ptr [rbp+0xf90]; 
0x0000000014a86e: add dword ptr [rax], 0x1; mov rax, [rbx+0x60]; call qword ptr [rax+0x8]; 
0x0000000011c0cc: add dword ptr [rax], 0x1; ret; 
0x000000000982ac: add dword ptr [rax], 0x89480000; fistp qword ptr [rax+0xca], st; syscall; 
0x00000000099221: add dword ptr [rax], 0x89480000; iretd; mov eax, 0xca; syscall; 
0x000000000918ff: add dword ptr [rax], 0x89480000; out dx, eax; mov eax, 0xca; syscall; 
0x00000000044ad8: add dword ptr [rax], 0x894c0000; idiv dword ptr [rax+0xca]; syscall; 
0x000000000452b8: add dword ptr [rax], 0x894c0000; out dx, eax; mov eax, 0xca; syscall; 
0x000000000dda2e: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x109a62; syscall; 
0x000000000dd8ee: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x109ba2; syscall; 
0x000000000dd836: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x109c5a; syscall; 
0x000000000dd75a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x109d2e; syscall; 
0x000000000dd58a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x109ebe; syscall; 
0x000000000dd3c6: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x10a03a; syscall; 
0x000000000dd00c: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x10a39c; syscall; 
0x000000000dbd5e: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x10b5c2; syscall; 
0x000000000dbc1e: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x10b702; syscall; 
0x000000000dbb66: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x10b7ba; syscall; 
0x000000000db79a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x10bb7e; syscall; 
0x000000000db5ca: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x10bd0e; syscall; 
0x000000000db406: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x10be8a; syscall; 
0x000000000dab0e: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x10c72a; syscall; 
0x000000000ceb3a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x1185f6; syscall; 
0x000000000ce946: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x1187ea; syscall; 
0x000000000c667a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x11efd6; syscall; 
0x0000000009989a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x14a2f6; syscall; 
0x0000000009b22a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x14bcce; syscall; 
0x0000000009afa6: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x14bf52; syscall; 
0x0000000009adc6: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x14c132; syscall; 
0x0000000009abda: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x14c31e; syscall; 
0x0000000009ab6a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x14c38e; syscall; 
0x00000000096eea: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x14cca6; syscall; 
0x00000000096e8a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x14cd06; syscall; 
0x00000000096aba: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x14d0d6; syscall; 
0x0000000009685a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x14d336; syscall; 
0x00000000096212: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x14d97e; syscall; 
0x000000000961da: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x14d9b6; syscall; 
0x00000000097eb9: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x14efb7; syscall; 
0x0000000009741e: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x14fa42; syscall; 
0x000000000930f5: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x153d7b; syscall; 
0x00000000093079: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x153de7; syscall; 
0x00000000092dd2: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x15409e; syscall; 
0x00000000092b26: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x15434a; syscall; 
0x0000000009205b: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x154795; syscall; 
0x00000000091eb6: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x15493a; syscall; 
0x00000000091d2a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x154ac6; syscall; 
0x0000000008ff2d: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x156733; syscall; 
0x0000000008f9ec: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x156c74; syscall; 
0x0000000008f65c: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x157004; syscall; 
0x0000000008f2fc: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x157364; syscall; 
0x0000000008dbd8: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x158a88; syscall; 
0x0000000008d8e8: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x158d78; syscall; 
0x0000000008d5e4: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x15907c; syscall; 
0x00000000080cc9: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x165957; syscall; 
0x000000000808cd: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x165d53; syscall; 
0x00000000080821: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x165dff; syscall; 
0x0000000007e97a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x166cd6; syscall; 
0x0000000005f19e: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x18745a; syscall; 
0x0000000005ef1a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x1876da; syscall; 
0x0000000005cd96: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x18984a; syscall; 
0x0000000005cc56: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x18998a; syscall; 
0x00000000052e7e: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x193742; syscall; 
0x00000000052cba: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x193906; syscall; 
0x000000000527aa: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x193e16; syscall; 
0x0000000005039e: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x195ff2; syscall; 
0x0000000005021a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x196176; syscall; 
0x000000000501ba: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x1961d6; syscall; 
0x00000000045a56: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x1a0902; syscall; 
0x00000000045996: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x1a09c2; syscall; 
0x000000000458ce: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x1a0a8a; syscall; 
0x000000000457f6: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x1a0b62; syscall; 
0x000000000448ee: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x1a11ea; syscall; 
0x00000000044829: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x1a12af; syscall; 
0x00000000044686: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x1a1452; syscall; 
0x000000000445ad: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x1a152b; syscall; 
0x0000000003d017: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x1a89e1; syscall; 
0x0000000003b68c: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x1aa334; syscall; 
0x0000000003a4db: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x1ab435; syscall; 
0x0000000003a4bb: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x1ab455; syscall; 
0x0000000003a351: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x1ab5bf; syscall; 
0x0000000002ac5e: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x1ba9f2; syscall; 
0x0000000002aaf2: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x1bab5e; syscall; 
0x0000000002a9fa: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x1bac56; syscall; 
0x00000000026848: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x1bf258; syscall; 
0x00000000191976: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x54162; syscall; 
0x00000000191b36: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x54cba; syscall; 
0x00000000191e56: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x567f2; syscall; 
0x00000000158056: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x9107e; syscall; 
0x00000000156d5e: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x92376; syscall; 
0x00000000156c7e: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x92456; syscall; 
0x00000000156a96: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x9263e; syscall; 
0x00000000156a06: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x926ce; syscall; 
0x00000000156966: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x9276e; syscall; 
0x000000001568b6: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x9281e; syscall; 
0x000000001564e6: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x92bee; syscall; 
0x0000000014c2e6: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x9cbd2; syscall; 
0x0000000014c186: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x9cd32; syscall; 
0x0000000014bf7a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x9cf3e; syscall; 
0x0000000014bdda: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x9d0de; syscall; 
0x0000000014bc46: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x9d272; syscall; 
0x0000000014bb06: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x9d3b2; syscall; 
0x0000000014b9a6: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x9d512; syscall; 
0x0000000014b896: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x9d622; syscall; 
0x00000000148406: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xa0a96; syscall; 
0x0000000013f4d2: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xa977e; syscall; 
0x0000000013f1a2: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xa9aae; syscall; 
0x0000000013ee22: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xa9e2e; syscall; 
0x0000000013ec24: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xaa02c; syscall; 
0x0000000013ea9a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xaa1b6; syscall; 
0x0000000013e85d: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xaa3f3; syscall; 
0x0000000013de16: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xaad72; syscall; 
0x0000000013dc95: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xaaef3; syscall; 
0x0000000013dc5b: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xaaf2d; syscall; 
0x0000000013db4e: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xab03a; syscall; 
0x0000000013d30e: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xab87a; syscall; 
0x0000000013d246: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xab942; syscall; 
0x0000000013d12a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xaba5e; syscall; 
0x0000000013bd97: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xacba1; syscall; 
0x00000000138516: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xb0132; syscall; 
0x0000000013823a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xb040e; syscall; 
0x00000000133f5a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xb46da; syscall; 
0x000000001339da: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xb4c3e; syscall; 
0x00000000133816: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xb4dba; syscall; 
0x0000000013374e: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xb4e22; syscall; 
0x0000000013360e: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xb4f62; syscall; 
0x00000000133556: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xb501a; syscall; 
0x00000000132e66: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xb5702; syscall; 
0x00000000132b36: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xb5a32; syscall; 
0x0000000013297a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xb5bee; syscall; 
0x00000000132460: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xb6064; syscall; 
0x0000000012eb6e: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xb983a; syscall; 
0x0000000012ea2e: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xb997a; syscall; 
0x0000000012e976: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xb9a32; syscall; 
0x0000000012e88a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xb9b16; syscall; 
0x0000000012e6ba: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xb9cb6; syscall; 
0x0000000012e4f6: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xb9e52; syscall; 
0x0000000012e42e: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xb9eca; syscall; 
0x0000000012e2ee: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xba00a; syscall; 
0x0000000012e236: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xba0c2; syscall; 
0x0000000012e156: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xba19a; syscall; 
0x0000000012dc8a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xba5ee; syscall; 
0x0000000012d6ba: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xbab5e; syscall; 
0x0000000012d19a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xbb036; syscall; 
0x0000000012cfce: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xbb1c2; syscall; 
0x0000000012ce8e: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xbb302; syscall; 
0x0000000012cdd6: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xbb3ba; syscall; 
0x0000000012ccf6: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xbb492; syscall; 
0x0000000012c8da: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xbb866; syscall; 
0x0000000012c2be: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xbbe22; syscall; 
0x0000000012c166: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xbbf7a; syscall; 
0x0000000012c0a6: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xbc03a; syscall; 
0x0000000012bfbe: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xbc11a; syscall; 
0x0000000012beda: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xbc1c6; syscall; 
0x0000000012b87a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xbc7e6; syscall; 
0x0000000012b66e: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xbc9aa; syscall; 
0x0000000012b516: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xbcb02; syscall; 
0x0000000012b456: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xbcbc2; syscall; 
0x0000000012b36e: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xbcca2; syscall; 
0x0000000012a75a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xbd83e; syscall; 
0x0000000012a4ea: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xbda6e; syscall; 
0x00000000129d6a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xbe18e; syscall; 
0x0000000012030e: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xc7b32; syscall; 
0x000000001201ce: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xc7c72; syscall; 
0x00000000120116: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xc7d2a; syscall; 
0x0000000011fd3c: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xc80fc; syscall; 
0x0000000011fb12: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xc82ee; syscall; 
0x0000000011f94a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xc846e; syscall; 
0x0000000011f786: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xc85ea; syscall; 
0x0000000011f6b6: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xc8666; syscall; 
0x0000000011f5e6: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xc8736; syscall; 
0x0000000011f54a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xc87d2; syscall; 
0x0000000011eaae: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xc923a; syscall; 
0x0000000011e96e: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xc937a; syscall; 
0x0000000011e8b6: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xc9432; syscall; 
0x0000000011e2bc: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xc9a24; syscall; 
0x0000000011e0ba: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xc9bce; syscall; 
0x0000000011deda: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xc9d46; syscall; 
0x0000000011dd16: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xc9ea2; syscall; 
0x00000000113616: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xd422a; syscall; 
0x000000001134fa: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xd4346; syscall; 
0x0000000011309a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xd47a6; syscall; 
0x00000000112b69: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xd4cd7; syscall; 
0x0000000010155a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xe6056; syscall; 
0x0000000011e7e4: add dword ptr [rax], 0xcab80000; add [rax], al; add [rdi], cl; add eax, 0xfffd2ae9; jmp qword ptr [rsi+0x2e]; 
0x0000000008d614: add dword ptr [rax], 0xcab80000; add [rax], al; add [rdi], cl; add eax, 0xffff44e9; jmp qword ptr [rsi+0x66]; 
0x000000000931f2: add dword ptr [rax], 0xcab80000; add [rax], al; add [rdi], cl; add eax, 0xffff70e9; jmp qword ptr [rsi+0x66]; 
0x000000000973f3: add dword ptr [rax], 0xd8890000; syscall; 
0x00000000087936: add dword ptr [rbp+0x31], 0x1bad2; add [rax], al; mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000007fa36: add dword ptr [rbp+0x31], 0xffffffd2; mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000014175d: add dword ptr [rbx+0x22a8], 0x1; mov rdi, rbp; call qword ptr [rax+0x18]; 
0x00000000127565: add dword ptr [rbx], 0x0; lea rdx, [rip+0x3d931]; cmovne rax, rdx; ret; 
0x00000000127705: add dword ptr [rbx], 0x158d4800; jno short 0x00000000001276e4; add eax, [rax]; cmovne rax, rdx; ret; 
0x000000000e9514: add dword ptr [rcx], 0x0; add [rbp+rcx*4+0x5a], cl; dec dword ptr [rcx+0x29]; ret; 
0x00000000168109: add dword ptr [rcx], 0x5; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000bce64: add dword ptr [rdi+0x1], 0x0; add [rax+0x29], cl; ret far; 
0x000000001515a4: add dword ptr [rdi+0x28], 0x4; mov eax, 0x1; ret; 
0x000000000610f9: add dword ptr [rdi+0x4], 0x1; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000000e8283: add dword ptr [rdi+0x4], 0x1; pop rbx; pop rbp; pop r12; ret; 
0x0000000013d63a: add dword ptr [rdi], 0xb40ee800; out dx, eax; jmp qword ptr [rsi+0xf]; 
0x00000000061170: add dword ptr [rdx+0x4], 0x1; xor eax, eax; ret; 
0x0000000011bdf6: add dword ptr [rdx+rax*2], 0x1; ret; 
0x0000000008feb6: add dword ptr [rip+0x1567b7], 0x1; pop rbx; ret; 
0x00000000044dbd: add dword ptr [rip+0x1a0d3c], 0x1; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000006b696: add dword ptr [rip+0x48000008], 0xffffff8d; add al, 0x8b; sbb cl, [rax-0x77]; or [rbx-0x7bf00005], al; ret; 
0x0000000003fb05: add dword ptr [rsi*2+0x548b44e7], 0x34c0881; push rdi; and [rcx+rcx*4-0x30], cl; ret; 
0x000000000d01cb: add dword ptr [rsi+rcx], 0xf6887ce8; jmp qword ptr [rsi+0x2e]; 
0x00000000191d9a: add eax, 0x0; add bl, al; nop [rax]; ret; 
0x000000000a4e1f: add eax, 0x103e00; mov edx, eax; movsxd rdx, [r8+rdx*4]; add rdx, r8; notrack jmp rdx; 
0x000000000dffc9: add eax, 0x1066f2; test eax, eax; jne short 0x00000000000e0000; mov eax, 0x77; syscall; 
0x000000000dff19: add eax, 0x1067a2; test eax, eax; jne short 0x00000000000dff50; mov eax, 0x75; syscall; 
0x000000000dfc49: add eax, 0x106a72; test eax, eax; jne short 0x00000000000dfc80; mov eax, 0x6a; syscall; 
0x000000000dfba9: add eax, 0x106b12; test eax, eax; jne short 0x00000000000dfbe0; mov eax, 0x69; syscall; 
0x000000000dfc93: add eax, 0x106b28; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000dfbf3: add eax, 0x106bc8; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000deab2: add eax, 0x107d11; mov rdi, r9; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000d9f9b: add eax, 0x108ea8; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000d8f9a: add eax, 0x109ea9; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000d8f02: add eax, 0x109f31; mov rax, [rax+0x230]; test rax, rax; je short 0x00000000000d8f40; call rax; 
0x000000000d8e92: add eax, 0x109fa1; mov rax, [rax+0x250]; test rax, rax; je short 0x00000000000d8ed0; call rax; 
0x000000000b5b5d: add eax, 0x10; lea r11, [rip+0xf3659]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b430d: add eax, 0x10; lea r11, [rip+0xf4cc9]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000013623a: add eax, 0x10; ret; 
0x000000000db2d9: add eax, 0x10b3e2; test eax, eax; jne short 0x00000000000db310; mov eax, 0x74; syscall; 
0x000000000d99e2: add eax, 0x10cd89; lea rdi, [rip+0x10bcd2]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000d999c: add eax, 0x10cdd7; lea rdi, [rip+0x10bd18]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000d97fa: add eax, 0x10cf71; lea rdi, [rip+0x10beba]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000d97cb: add eax, 0x10cfa8; lea rdi, [rip+0x10bee9]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000d9702: add eax, 0x10d069; lea rdi, [rip+0x10bfb2]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000d96d9: add eax, 0x10d09a; lea rdi, [rip+0x10bfdb]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000d9207: add eax, 0x10d564; lea rdi, [rip+0x10c4ad]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000b91c9: add eax, 0x10e62; lea rdx, [rip+0xd2eab]; cmovne rax, rdx; ret; 
0x000000000ba409: add eax, 0x114a2; lea rdx, [rip+0x1127b]; cmovne rax, rdx; ret; 
0x000000000cdd98: add eax, 0x11507b; movaps [rax], xmm0; add rsp, 0x10; pop rbp; ret; 
0x0000000009c1b5: add eax, 0x115b6; lea rdx, [rip+0xee42f]; cmovne rax, rdx; ret; 
0x000000000cc152: add eax, 0x116cf1; mov dword ptr fs:[rax], 0x16; xor eax, eax; ret; 
0x000000000cc132: add eax, 0x116d11; mov dword ptr fs:[rax], 0x4b; xor eax, eax; add rsp, 0x8; ret; 
0x000000000cc112: add eax, 0x11aee9; add rsp, 0x8; ret; 
0x000000000c635a: add eax, 0x120419; lea rdi, [rip+0x11f35a]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000c6177: add eax, 0x1205f4; lea rdi, [rip+0x11f53d]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000b8ceb: add eax, 0x124c0; cmovne rax, rdx; ret; 
0x000000000784a5: add eax, 0x12ee96; movsxd rax, [rax+rdx*4]; lea rdx, [rip-0x3e9]; add rax, rdx; jmp rax; 
0x000000000a50e0: add eax, 0x13c9db; mov rax, [rax+rdi*8]; ret; 
0x000000000a5100: add eax, 0x13cbdb; mov rax, [rax+rdi*8]; ret; 
0x000000001611f6: add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165547: add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000164ecf: add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000015fa6d: add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000163b38: add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000009b9c6: add eax, 0x14747d; mov dword ptr fs:[rax], 0xc; xor eax, eax; ret; 
0x0000000009b853: add eax, 0x1476d8; call qword ptr [rax]; 
0x0000000009b682: add eax, 0x1478a9; call qword ptr [rax]; 
0x0000000009b5b2: add eax, 0x147979; call qword ptr [rax]; 
0x0000000009754a: add eax, 0x14b971; mov [rax], rdi; ret; 
0x00000000097540: add eax, 0x14ba8b; mov [rax], rsi; mov rax, [rip+0x14b971]; mov [rax], rdi; ret; 
0x0000000009687f: add eax, 0x14c5c4; xor r8d, r8d; mov dword ptr fs:[rax], 0xc; mov rax, r8; ret; 
0x00000000096644: add eax, 0x14c7f7; mov rax, [rax]; test rax, rax; je short 0x0000000000096653; call rax; 
0x00000000095492: add eax, 0x14d9b1; xor r9d, r9d; mov dword ptr fs:[rax], 0xc; mov rax, r9; ret; 
0x00000000094d74: add eax, 0x14e017; mov [rsp+0x8], r8; xor edi, edi; call qword ptr [rax]; 
0x00000000094c52: add eax, 0x14e139; xor edi, edi; call qword ptr [rax]; 
0x00000000094c0c: add eax, 0x14e17f; call qword ptr [rax]; 
0x0000000009490e: add eax, 0x14e47d; mov [rsp+0x10], rsi; mov rdi, rsi; mov [rsp+0x18], r11; call qword ptr [rax]; 
0x000000000974df: add eax, 0x14f988; add [rax], al; add [rax], al; ret; 
0x00000000093260: add eax, 0x14fc5b; mov [rax], rdx; ret; 
0x00000000093256: add eax, 0x14fd75; mov [rax], rsi; mov rax, [rip+0x14fc5b]; mov [rax], rdx; ret; 
0x0000000009314b: add eax, 0x150a50; add rsp, 0x10; pop rbp; ret; 
0x00000000092403: add eax, 0x150ea4; ret; 
0x000000000923dd: add eax, 0x150eae; ret; 
0x000000000923f9: add eax, 0x150eb2; add [rax], eax; add [rax], al; mov [rip+0x150ea4], eax; ret; 
0x000000000923b4: add eax, 0x150ecf; ret; 
0x000000000923d2: add eax, 0x150ed9; add [rax], eax; add [rax], al; mov [rip+0x150eae], rax; ret; 
0x00000000092394: add eax, 0x150ee7; ret; 
0x000000000923a9: add eax, 0x150f02; add [rax], eax; add [rax], al; mov [rip+0x150ecf], rax; ret; 
0x00000000092389: add eax, 0x150f22; add [rax], eax; add [rax], al; mov [rip+0x150ee7], rax; ret; 
0x0000000009216a: add eax, 0x151179; ret; 
0x00000000092153: add eax, 0x151188; ret; 
0x000000000920fa: add eax, 0x151199; ret; 
0x000000000920ea: add eax, 0x1511b1; ret; 
0x00000000090da2: add eax, 0x1520a1; pop rbx; mov eax, fs:[rax]; ret; 
0x0000000008fe46: add eax, 0x154775; ret; 
0x00000000091fd9: add eax, 0x154852; mov rax, [rax+0x8]; test rax, rax; je short 0x0000000000091fe9; call rax; 
0x00000000091f99: add eax, 0x154892; mov rax, [rax+0x10]; test rax, rax; je short 0x0000000000091fa9; call rax; 
0x00000000091f21: add eax, 0x15490a; mov rax, [rax]; test rax, rax; je short 0x0000000000091f30; call rax; 
0x00000000092448: add eax, 0x154a4b; ret; 
0x00000000092419: add eax, 0x154a66; ret; 
0x00000000090bc8: add eax, 0x155aef; add [rax], eax; add [rax], al; ret; 
0x00000000090bc1: add eax, 0x155c0a; pop rbx; mov dword ptr [rip+0x155aef], 0x1; ret; 
0x000000000909b0: add eax, 0x155d9b; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000090980: add eax, 0x155dc3; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000090950: add eax, 0x155deb; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000090920: add eax, 0x155e13; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000908f0: add eax, 0x155e3b; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000908c0: add eax, 0x155e63; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000090886: add eax, 0x155e95; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000090850: add eax, 0x155ea3; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000090820: add eax, 0x155ecb; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000907f0: add eax, 0x155ef3; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000907c0: add eax, 0x155f1b; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000008ff51: add eax, 0x15671e; add [rax], al; add [rax], al; ret; 
0x0000000008ff46: add eax, 0x156721; add [rax], al; add [rax], al; mov qword ptr [rip+0x15671e], 0x0; ret; 
0x0000000008ff19: add eax, 0x156752; cmp eax, 0x1; jg short 0x000000000008ff24; ret; 
0x0000000009d4a4: add eax, 0x15857; lea rdx, [rip+0xd5a10]; cmovne rax, rdx; ret; 
0x0000000008d5a1: add eax, 0x1590ca; cmp eax, 0x1; jg short 0x000000000008d5db; ret; 
0x00000000089bd2: add eax, 0x159271; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000877fa: add eax, 0x15b649; mov dword ptr fs:[rax], 0x9; mov eax, 0xffffffff; ret; 
0x0000000008108a: add eax, 0x161db9; mov dword ptr fs:[rax], 0x16; mov rax, 0xffffffffffffffff; ret; 
0x0000000007cd33: add eax, 0x164948; mov rax, [rax+rdi*8]; ret; 
0x000000000808b9: add eax, 0x165d72; cmp eax, 0x1; jg short 0x00000000000808c4; ret; 
0x0000000009c284: add eax, 0x16987; lea rdx, [rip+0xd2900]; cmovne rax, rdx; ret; 
0x000000000d027e: add eax, 0x16d; ret; 
0x00000000079e8d: add eax, 0x16f456; mov [rbp-0x8c0], rax; mov [rbp-0x8b0], rsi; call qword ptr [r8+rcx*8-0x40]; 
0x0000000007423e: add eax, 0x1750a5; mov [rbp-0x8b0], rax; mov [rbp-0x8a0], rsi; call qword ptr [r8+rcx*8-0x40]; 
0x00000000040f0f: add eax, 0x17585c; por xmm0, xmm1; ret; 
0x00000000040ccb: add eax, 0x175a50; orps xmm0, [rip+0x175a59]; mulss xmm0, [rip+0x1766f9]; ret; 
0x00000000040cd2: add eax, 0x175a59; mulss xmm0, [rip+0x1766f9]; ret; 
0x00000000040ca6: add eax, 0x175a75; orps xmm0, [rip+0x175a8e]; mulss xmm0, [rip+0x176722]; ret; 
0x00000000040cad: add eax, 0x175a8e; mulss xmm0, [rip+0x176722]; ret; 
0x000000000407d7: add eax, 0x175f14; andpd xmm1, [rip+0x175efc]; orpd xmm0, xmm1; ret; 
0x000000000409d0: add eax, 0x17631b; ret; 
0x00000000040961: add eax, 0x17637a; orpd xmm1, [rip+0x175d92]; mulsd xmm0, xmm1; ret; 
0x0000000004093b: add eax, 0x1763a8; orpd xmm1, [rip+0x175dc8]; mulsd xmm0, xmm1; ret; 
0x00000000040d25: add eax, 0x1766b6; ret; 
0x00000000040cda: add eax, 0x1766f9; ret; 
0x00000000040cb5: add eax, 0x176722; ret; 
0x00000000037382: add eax, 0x176e5b; ret; 
0x00000000037366: add eax, 0x176e77; cmp [rdx+0x38], edi; jbe short 0x0000000000037387; mov rax, [rdx+rdi*8+0x40]; ret; 
0x00000000142021: add eax, 0x17a; mov esi, 0x4; mov rdi, rbp; lea r9, [rsp+0x20]; call qword ptr [rax]; 
0x00000000028de6: add eax, 0x186cbd; ret; 
0x00000000028dd6: add eax, 0x18932d; ret; 
0x0000000005cef4: add eax, 0x18c3e7; mov rcx, r14; call qword ptr [rax+r8*8]; 
0x00000000041466: add eax, 0x18c48348; ret; 
0x00000000050b2e: add eax, 0x1959cd; mov byte ptr [r8+rax], 0x0; mov rax, r8; ret; 
0x0000000009c154: add eax, 0x19b27; lea rdx, [rip+0x12110]; cmovne rax, rdx; ret; 
0x000000000464e2: add eax, 0x19c961; mov dword ptr fs:[rax], 0x5; mov eax, 0xffffffff; ret; 
0x00000000045e0a: add eax, 0x19d039; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000052481: add eax, 0x1; cmp byte ptr [rax+0x1], 0x0; jne short 0x0000000000052480; pop rbx; ret; 
0x0000000011c0b1: add eax, 0x1; mov [rdx], ax; ret; 
0x0000000011c0b2: add eax, 0x1; mov [rdx], ax; ret; 
0x0000000011c071: add eax, 0x1; mov [rdx], eax; ret; 
0x000000000a4b41: add eax, 0x1; movsx edx, byte ptr [rdi+rax]; cmp edx, esi; je short 0x00000000000a4b40; ret; 
0x0000000009d43f: add eax, 0x1; ret; 
0x0000000009f651: add eax, 0x1; test dl, dl; mov edx, 0x0; cmove rax, rdx; ret; 
0x00000000046136: add eax, 0x1a023b; add rsp, 0x8; ret; 
0x0000000004259a: add eax, 0x1a08a9; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000004255a: add eax, 0x1a08e9; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000004251a: add eax, 0x1a0929; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000424d4: add eax, 0x1a096f; mov dword ptr fs:[rax], 0x16; mov rax, 0xffffffffffffffff; ret; 
0x00000000042416: add eax, 0x1a0a2d; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x000000000423fa: add eax, 0x1a0a49; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000423b2: add eax, 0x1a0a91; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000042362: add eax, 0x1a0ae1; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000004231b: add eax, 0x1a0b28; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000422e5: add eax, 0x1a0b5e; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000042614: add eax, 0x1a0b8f; mov eax, edx; ret; 
0x000000000425c5: add eax, 0x1a0bde; ret; 
0x000000000425b5: add eax, 0x1a0bf2; ret; 
0x0000000004572e: add eax, 0x1a0c29; add [rax], al; add [rax], al; mov eax, [rax+0x58]; ret; 
0x00000000041b62: add eax, 0x1a12e1; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000041922: add eax, 0x1a1521; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000417e2: add eax, 0x1a1661; mov dword ptr fs:[rax], 0x16; mov rax, 0xffffffffffffffff; ret; 
0x00000000040e13: add eax, 0x1a2030; mov dword ptr fs:[rax], 0x22; add rsp, 0x8; ret; 
0x00000000040afd: add eax, 0x1a2346; mov dword ptr fs:[rax], 0x22; add rsp, 0x8; ret; 
0x0000000004072c: add eax, 0x1a2717; mov dword ptr fs:[rax], 0x22; add rsp, 0x8; ret; 
0x0000000003fb82: add eax, 0x1a32c1; mov dword ptr fs:[rax], 0x9; mov eax, 0xffffffff; pop rbp; ret; 
0x0000000003fb22: add eax, 0x1a3321; mov dword ptr fs:[rax], 0x2a; mov rax, r10; ret; 
0x000000000416a0: add eax, 0x1a50b3; mov rsi, rsp; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009d07b: add eax, 0x1a660; cmove rax, rdx; ret; 
0x0000000009d787: add eax, 0x1a714; cmove rax, rdx; ret; 
0x0000000003d0b9: add eax, 0x1a96ba; lea rdi, [rip+0x1a87fb]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003d058: add eax, 0x1a9713; lea rdi, [rip+0x1a885c]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000038f66: add eax, 0x1a9e65; add rax, fs:[0x0]; ret; 
0x00000000038f86: add eax, 0x1a9f3d; add rax, fs:[0x0]; ret; 
0x00000000038fa6: add eax, 0x1a9f55; add rax, fs:[0x0]; ret; 
0x00000000038816: add eax, 0x1aa57d; movsxd rdi, edi; mov rax, fs:[rax]; mov rax, [rax+rdi*8+0x80]; ret; 
0x000000000387d2: add eax, 0x1aa5d9; mov [rax], rdx; ret; 
0x0000000009d407: add eax, 0x1aa74; cmove rax, rdx; ret; 
0x0000000003b184: add eax, 0x1ab5ef; lea rdi, [rip+0x1aa7f0]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003b11b: add eax, 0x1ab650; lea rdi, [rip+0x1aa859]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003afec: add eax, 0x1ab787; lea rdi, [rip+0x1aa988]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003af8c: add eax, 0x1ab7d7; lea rdi, [rip+0x1aa9e8]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003aeaa: add eax, 0x1ab8c9; lea rdi, [rip+0x1aaa8a]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003ae53: add eax, 0x1ab918; lea rdi, [rip+0x1aaae1]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000373a6: add eax, 0x1ab9ed; mov rax, fs:[rax]; mov rax, [rax]; mov eax, [rax+0xa8]; ret; 
0x0000000003abcd: add eax, 0x1abba6; lea rdi, [rip+0x1aaae7]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003aba6: add eax, 0x1abbcd; lea rdi, [rip+0x1aad0e]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003aacf: add eax, 0x1abca4; lea rdi, [rip+0x1aabe5]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003aaa8: add eax, 0x1abccb; lea rdi, [rip+0x1aae0c]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003a960: add eax, 0x1abe13; lea rdi, [rip+0x1aad54]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003a935: add eax, 0x1abe3e; lea rdi, [rip+0x1aaf7f]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000009d2a7: add eax, 0x1abf4; cmove rax, rdx; ret; 
0x0000000003a662: add eax, 0x1ac111; lea rdi, [rip+0x1ab2d2]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003a61d: add eax, 0x1ac146; lea rdi, [rip+0x1ab317]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003a5b9: add eax, 0x1ac1aa; lea rdi, [rip+0x1ab2fb]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003a592: add eax, 0x1ac1d1; lea rdi, [rip+0x1ab122]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003a2d7: add eax, 0x1ac49c; lea rdi, [r13+0x80]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003a156: add eax, 0x1ac61d; lea rdi, [r13+0x80]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000039f6b: add eax, 0x1ac800; mov rdi, r12; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000039f46: add eax, 0x1ac82d; mov rdi, r12; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000039f1d: add eax, 0x1ac856; lea rdi, [r13+0x80]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000039aa4: add eax, 0x1accbf; lea rdi, [r13+0x80]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000358c9: add eax, 0x1acff2; mov rax, [rax+rbx*8]; test rax, rax; je short 0x00000000000358d9; call rax; 
0x00000000039043: add eax, 0x1ad728; lea rdi, [rip+0x1ac871]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003857f: add eax, 0x1ae1f4; lea rdi, [rip+0x1ad135]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000384a4: add eax, 0x1ae2c7; lea rdi, [rip+0x1ad210]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003842f: add eax, 0x1ae344; lea rdi, [rip+0x1ad285]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000038393: add eax, 0x1ae3d8; lea rdi, [rip+0x1ad321]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000037314: add eax, 0x1ae547; ret; 
0x0000000003730d: add eax, 0x1ae5ab; lea rax, [rip+0x1ae547]; ret; 
0x00000000038115: add eax, 0x1ae65e; lea rdi, [rip+0x1ad59f]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000037d8c: add eax, 0x1ae9e7; lea rdi, [rip+0x1ad928]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000037b8d: add eax, 0x1aebde; lea rdi, [rip+0x1adb27]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000009d31b: add eax, 0x1aed0; cmovne rax, rdx; ret; 
0x00000000035ab2: add eax, 0x1b0cc1; lea rdi, [rip+0x1afc02]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000356b6: add eax, 0x1b10bd; lea rdi, [rip+0x1afffe]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003555c: add eax, 0x1b1217; lea rdi, [rip+0x1b0158]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003547c: add eax, 0x1b12f7; lea rdi, [rip+0x1b0238]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000353fb: add eax, 0x1b1378; lea rdi, [rip+0x1b02b9]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000351dd: add eax, 0x1b1596; lea rdi, [rip+0x1b04d7]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000351a1: add eax, 0x1b15ca; lea rdi, [rip+0x1b0513]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000034026: add eax, 0x1b1685; ret; 
0x0000000009c86b: add eax, 0x1b470; cmovne rax, rdx; ret; 
0x0000000009c73b: add eax, 0x1b4f0; cmovne rax, rdx; ret; 
0x0000000009c2cb: add eax, 0x1b8b0; cmovne rax, rdx; ret; 
0x0000000002bb89: add eax, 0x1b9b0e; test eax, eax; je short 0x000000000002bb98; ret; 
0x0000000002931a: add eax, 0x1b9b29; mov dword ptr fs:[rax], 0x9; mov eax, 0xffffffff; ret; 
0x00000000029036: add eax, 0x1b9e0d; add rax, fs:[0x0]; ret; 
0x00000000028c2c: add eax, 0x1ba257; mov rsi, [rsp]; mov edi, [rsp+0xc]; mov rdx, [rax]; call rbp; 
0x0000000002a6d6: add eax, 0x1baf95; ret; 
0x0000000002a6c6: add eax, 0x1baf9d; ret; 
0x00000000028cd6: add eax, 0x1bdadd; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000284b1: add eax, 0x1be192; ret; 
0x0000000008ff3e: add eax, 0x1e0ff3c3; cli; mov qword ptr [rip+0x156721], 0x0; mov qword ptr [rip+0x15671e], 0x0; ret; 
0x0000000003900a: add eax, 0x200; mov fs:[rdx], rax; ret; 
0x00000000182295: add eax, 0x20; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x0000000017e1da: add eax, 0x20; add rax, rdi; vzeroupper; ret; 
0x0000000011063a: add eax, 0x2404c641; add [rcx+rcx*4-0x20], cl; pop r12; ret; 
0x0000000019144e: add eax, 0x245ae900; clc; jmp qword ptr [rsi+0x2e]; 
0x00000000190d0f: add eax, 0x266bc; divss xmm0, [rip+0x279c8]; ret; 
0x00000000110804: add eax, 0x26; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000190d17: add eax, 0x279c8; ret; 
0x00000000041889: add eax, 0x27b9; add [rcx+0x48050fc8], cl; mov edi, eax; mov eax, 0xba; syscall; 
0x000000000afd14: add eax, 0x289018b; mov al, [rcx+0x4]; mov [rdx+0x4], al; mov rax, rdi; ret; 
0x000000000455f4: add eax, 0x28c48348; ret; 
0x000000001372b4: add eax, 0x2; mov [r8], edx; mov [r9], rax; mov eax, ecx; ret; 
0x000000000cbae8: add eax, 0x2; ret; 
0x00000000155e5b: add eax, 0x2beee800; out dx, al; jmp qword ptr [rsi+0x66]; 
0x000000001720c4: add eax, 0x2c5850f; add [rax], al; ret; 
0x0000000018a882: add eax, 0x2e6666c3; nop [rax+rax]; lea rax, [rdi+0x6]; ret; 
0x00000000156d6f: add eax, 0x2e6690eb; nop [rax+rax]; nop [rax]; endbr64; ret; 
0x000000001559fc: add eax, 0x304de800; out dx, al; jmp qword ptr [rsi+0x66]; 
0x00000000148417: add eax, 0x31e88beb; adc edi, esi; call qword ptr [rax-0x5e1f00d]; 
0x00000000191509: add eax, 0x348b4c00; fmul st, dword ptr [rax+0x63]; ret; 
0x00000000176475: add eax, 0x364850f; add [rax], al; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x00000000127703: add eax, 0x381e8; lea rdx, [rip+0x3d771]; cmovne rax, rdx; ret; 
0x00000000127563: add eax, 0x383a8; lea rdx, [rip+0x3d931]; cmovne rax, rdx; ret; 
0x00000000107f76: add eax, 0x38c48348; ret; 
0x000000000cbb01: add eax, 0x3; ret; 
0x00000000127633: add eax, 0x3acb8; lea rdx, [rip+0x40351]; cmovne rax, rdx; ret; 
0x00000000191928: add eax, 0x3d8b4800; scasd [rdi]; add eax, 0x3fbae800; clc; call far fword ptr [rbx+0x48]; 
0x00000000155e54: add eax, 0x3d8d4800; mov edx, 0xe80005ba; out dx, al; sub ebp, esi; jmp qword ptr [rsi+0x66]; 
0x000000001559f5: add eax, 0x3d8d4800; sbb [rdi+0x4de80005], edi; xor dh, ch; jmp qword ptr [rsi+0x66]; 
0x00000000156f72: add eax, 0x3f98366; jbe short 0x0000000000156f80; ret; 
0x0000000019192e: add eax, 0x3fbae800; clc; call far fword ptr [rbx+0x48]; 
0x0000000011da22: add eax, 0x401f0fc3; add [rcx+0x107223c6], cl; lea rdx, [rdx+rsi*4]; add eax, [rdx+rcx]; ret; 
0x000000001086ea: add eax, 0x401f0fc3; add bl, dh; nop edx, edi; mov eax, 0x5a; syscall; 
0x000000000dfb1a: add eax, 0x401f0fc3; add bl, dh; nop edx, edi; mov eax, 0x66; syscall; 
0x000000000dfb3a: add eax, 0x401f0fc3; add bl, dh; nop edx, edi; mov eax, 0x68; syscall; 
0x000000000dfb2a: add eax, 0x401f0fc3; add bl, dh; nop edx, edi; mov eax, 0x6b; syscall; 
0x000000000dfb4a: add eax, 0x401f0fc3; add bl, dh; nop edx, edi; mov eax, 0x6c; syscall; 
0x000000000dfb0a: add eax, 0x401f0fc3; add bl, dh; nop edx, edi; mov eax, 0x6e; syscall; 
0x000000000dfb5a: add eax, 0x401f0fc3; add bl, dh; nop edx, edi; mov eax, 0x73; syscall; 
0x0000000011a1fa: add eax, 0x401f0fc3; add bl, dh; nop edx, edi; mov eax, 0xea; syscall; 
0x000000001822b5: add eax, 0x40; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x0000000017e1fa: add eax, 0x40; add rax, rdi; vzeroupper; ret; 
0x00000000126c60: add eax, 0x41000000; pop rsp; pop rbp; ret; 
0x000000000c9702: add eax, 0x438d0000; dec dword ptr [rax+0x63]; ret far; 
0x000000000c9703: add eax, 0x438d0000; dec dword ptr [rax+0x63]; ret far; 
0x000000000462b5: add eax, 0x48000000; mov [rsi+0x10], eax; xor eax, eax; mov dword ptr [rsi+0xc], 0x1000b; ret; 
0x00000000046304: add eax, 0x48000000; mov [rsi+0x10], eax; xor eax, eax; ret; 
0x00000000123e1d: add eax, 0x48020000; mov edx, eax; call qword ptr [r13+0x28]; 
0x000000001745f7: add eax, 0x48054289; lea eax, [rdx+0x8]; ret; 
0x000000001702a7: add eax, 0x48054289; mov eax, edi; ret; 
0x00000000167443: add eax, 0x480e8b48; mov [rdi+0x5], edx; mov [rdi], rcx; ret; 
0x000000000b4896: add eax, 0x480f8948; mov [rdi+0x5], edx; lea rax, [rdi+0xc]; ret; 
0x000000000b56f6: add eax, 0x480f8948; mov [rdi+0x5], edx; lea rax, [rdi+0xd]; ret; 
0x000000000b3216: add eax, 0x480f8948; mov [rdi+0x5], edx; ret; 
0x000000000b7356: add eax, 0x480f8948; mov [rdi+0x5], edx; xor ch, ch; mov [rdi+0xd], ch; ret; 
0x000000001898bf: add eax, 0x487c5162; adc [rcx+0x6], esi; vmovups [r9+0x1c0], zmm15; ret; 
0x00000000189e44: add eax, 0x487cf162; adc [rsi+0x6], edx; vmovups [rsi+0x1c0], zmm2; ret; 
0x0000000014f8d7: add eax, 0x48c48348; ret; 
0x000000001904d7: add eax, 0x48ffffff; add esp, 0x38; ret; 
0x00000000187447: add eax, 0x49000301; movsxd ecx, [rbx+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000160ac7: add eax, 0x4900056d; movsxd edx, [rbx+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000017211a: add eax, 0x49f88948; sub eax, 0x9; lea rcx, [rdx+0x9]; jne 0x0000000000172390; ret; 
0x0000000017219c: add eax, 0x49f88948; sub eax, 0xd; lea rcx, [rdx+0xd]; jne 0x0000000000172390; ret; 
0x00000000151275: add eax, 0x4; mov [rax-0x4], edx; mov [rdi+0x18], rax; mov eax, r8d; ret; 
0x000000000b90ab: add eax, 0x4; test edx, edx; jne short 0x00000000000b90a0; xor eax, eax; ret; 
0x000000001420e7: add eax, 0x4c0000d8; lea ecx, [rsp+0x20]; call qword ptr [rax]; 
0x00000000191939: add eax, 0x5419e; add [rax], al; add [rax], al; ret; 
0x000000001914ad: add eax, 0x54202; add [rax], al; add [rax], al; add rsp, 0x8; ret; 
0x00000000174678: add eax, 0x5428948; lea rax, [rdx+0xc]; ret; 
0x000000001702e8: add eax, 0x5428948; mov rax, rdi; ret; 
0x000000001720c0: add eax, 0x54a8d48; jne 0x0000000000172390; ret; 
0x00000000176471: add eax, 0x54a8d48; jne 0x00000000001767e0; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x00000000191c5e: add eax, 0x55469; add [rax], al; add [rax], al; ret; 
0x00000000191cc4: add eax, 0x5587b; add [rax], al; add [rax], al; add rsp, 0x8; ret; 
0x00000000191d97: add eax, 0x56110; add [rax], al; add [rax], al; ret; 
0x00000000191ec9: add eax, 0x56cce; add [rax], al; add [rax], al; pop rbx; ret; 
0x000000000b3a3a: add eax, 0x57f8d48; jne 0x00000000000b4270; ret; 
0x000000000b511e: add eax, 0x57f8d48; jne 0x00000000000b5ac0; ret; 
0x00000000191b44: add eax, 0x5b050f00; ret; 
0x0000000012f333: add eax, 0x5bf08948; ret; 
0x00000000101a88: add eax, 0x5d000000; pop r12; ret; 
0x00000000191e62: add eax, 0x5d050f00; ret; 
0x00000000191e63: add eax, 0x5d050f00; ret; 
0x0000000014dba1: add eax, 0x5d5b0000; pop r12; pop r13; ret; 
0x000000001276df: add eax, 0x5da6c; cmove rax, rdx; ret; 
0x0000000012760f: add eax, 0x5db5c; cmove rax, rdx; ret; 
0x0000000012753f: add eax, 0x5dc2c; cmove rax, rdx; ret; 
0x000000001277b2: add eax, 0x5de39; cmove rax, rdx; ret; 
0x0000000017e633: add eax, 0x60; add rax, rdi; ret; 
0x00000000182301: add eax, 0x60; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x0000000017e21a: add eax, 0x60; add rax, rdi; vzeroupper; ret; 
0x00000000128b6f: add eax, 0x6186c; cmove r8, rax; mov rax, r8; ret; 
0x0000000002849d: add eax, 0x61ede; xor rax, fs:[0x30]; rol rax, 0x11; mov [rip+0x1be192], rax; ret; 
0x00000000127738: add eax, 0x62793; cmove rax, rdx; ret; 
0x00000000127668: add eax, 0x62883; cmove rax, rdx; ret; 
0x00000000127598: add eax, 0x62953; cmove rax, rdx; ret; 
0x000000001277ee: add eax, 0x62c8d; lea rdx, [rip+0x62c16]; cmove rax, rdx; ret; 
0x000000000725a4: add eax, 0x63480000; or al, 0x8a; add rcx, rdx; notrack jmp rcx; 
0x0000000018700e: add eax, 0x63490003; or al, 0x93; add rcx, r11; notrack jmp rcx; 
0x000000000b55b1: add eax, 0x66c30000; nop [rax+rax]; mov rax, rdi; ret; 
0x00000000142f27: add eax, 0x698d4; mov ecx, eax; movsxd rdx, [r8+rcx*4]; add rdx, r8; notrack jmp rdx; 
0x0000000014b607: add eax, 0x6b684; movaps [rsp+0x20], xmm0; call qword ptr [rax+0x28]; 
0x000000000b513e: add eax, 0x6e88349; lea rdi, [rdi+0x6]; jne 0x00000000000b5ac0; ret; 
0x0000000013d257: add eax, 0x71e8c35d; idiv edi; call qword ptr [rax-0x5e1f00d]; 
0x000000000e09a1: add eax, 0x72f52011; cmp rdx, rax; jne short 0x00000000000e0a1d; mov eax, 0x7d00; ret; 
0x000000000b8677: add eax, 0x75db8445; ret far; 
0x0000000014d646: add eax, 0x78c48348; ret; 
0x0000000009d504: add eax, 0x7c77; lea rdx, [rip+0xd71c0]; cmovne rax, rdx; ret; 
0x000000000b3a3e: add eax, 0x82b850f; add [rax], al; ret; 
0x000000000b865e: add eax, 0x8307e083; clc; add [rcx+0xf], eax; xchg esp, eax; ret; 
0x000000000bc24d: add eax, 0x83492377; ret; 
0x000000001745fa: add eax, 0x8428d48; ret; 
0x0000000007aa13: add eax, 0x85450000; fisttp dword ptr [rdi], st; test cl, dl; or eax, 0x63490000; ret; 
0x0000000015cec6: add eax, 0x85f7d; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x0000000015cea6: add eax, 0x85f9d; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x0000000015cd76: add eax, 0x860cd; mov dword ptr fs:[rax], 0x26; mov rax, 0xffffffffffffffff; ret; 
0x0000000015c876: add eax, 0x865cd; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x0000000015c856: add eax, 0x865ed; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x0000000015c816: add eax, 0x8662d; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x0000000015c7f6: add eax, 0x8664d; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x0000000015c7d6: add eax, 0x8666d; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x0000000015c7b6: add eax, 0x8668d; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x0000000015a856: add eax, 0x885ed; mov dword ptr fs:[rax], 0x26; xor eax, eax; ret; 
0x0000000015a6c2: add eax, 0x88781; mov dword ptr fs:[rax], 0x16; xor eax, eax; ret; 
0x0000000015a5be: add eax, 0x8894d; mov [rax], bl; pop rbx; ret; 
0x00000000159d15: add eax, 0x8911e; mov r8, [rbx+0x10]; call qword ptr [rax+0x270]; 
0x00000000085b40: add eax, 0x89480000; and al, 0x10; xor edx, edx; mov rdi, r15; call qword ptr [r14+0x80]; 
0x000000000d0555: add eax, 0x89480000; ret; 
0x000000001562f4: add eax, 0x894c0000; loopne 0x000000000015633c; pop rsp; ret; 
0x000000000a7ba8: add eax, 0x894d0000; ret far; 
0x00000000159886: add eax, 0x895ad; jmp qword ptr [rax+0x280]; 
0x000000001597c3: add eax, 0x89670; mov rdi, [rdi]; call qword ptr [rax+0x278]; 
0x0000000015976a: add eax, 0x896c9; mov rdi, [rsp]; mov rax, [rax+0x268]; jmp rax; 
0x00000000159736: add eax, 0x896fd; mov rsi, rdi; mov rdi, [rsp]; mov rax, [rax+0x268]; jmp rax; 
0x000000001592a3: add eax, 0x89b90; call qword ptr [rax+0x288]; 
0x000000001125a9: add eax, 0x8; mov [rip+0xd51dd], rax; mov rax, r8; add rsp, 0x8; ret; 
0x00000000112579: add eax, 0x8; mov [rip+0xd520d], rax; mov rax, r8; ret; 
0x0000000009c6b4: add eax, 0x8b37; lea rdx, [rip+0xd3c80]; cmovne rax, rdx; ret; 
0x0000000009c5e4: add eax, 0x8b47; lea rdx, [rip+0x138a0]; cmovne rax, rdx; ret; 
0x0000000019158a: add eax, 0x8b486400; adc [rax-0x7d], cl; ret; 
0x0000000015a7e0: add eax, 0x8bf33; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000015a7b0: add eax, 0x8bf5b; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000015a82e: add eax, 0x8bf7d; mov rdi, r8; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000015a780: add eax, 0x8bf83; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000015a750: add eax, 0x8bfab; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000de8da: add eax, 0x8c48348; ret; 
0x0000000015a938: add eax, 0x8c553; xor eax, eax; mov [rip+0x8c542], rsi; ret; 
0x00000000156786: add eax, 0x8c6bd; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x000000000c6179: add eax, 0x8d480012; cmp eax, 0x11f53d; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000159cd2: add eax, 0x8f5f1; mov rax, [rax+0x10]; add rsp, 0x38; jmp rax; 
0x00000000159a3a: add eax, 0x8f889; call qword ptr [rax+0x8]; 
0x00000000159942: add eax, 0x8f981; call qword ptr [rax]; 
0x0000000009c204: add eax, 0x9047; lea rdx, [rip+0xc0d00]; cmovne rax, rdx; ret; 
0x0000000011ae94: add eax, 0x91667; mov eax, [rax+rdi*4]; ret; 
0x000000001570b0: add eax, 0x921c7; add [rax], al; add [rax], al; add rsp, 0x8; ret; 
0x0000000015633f: add eax, 0x92d7c; mov edx, 0x0; cmovne rax, rdx; add rsp, 0x8; ret; 
0x0000000018f474: add eax, 0x94c0000; ret; 
0x0000000014d172: add eax, 0x95c11; pop rbx; ret; 
0x0000000014d101: add eax, 0x95c82; mov dword ptr [rip+0x9bdd0], 0x2; pop rbx; ret; 
0x0000000014d0a2: add eax, 0x95d81; pop rbx; ret; 
0x0000000014d242: add eax, 0x95d99; pop rbx; ret; 
0x0000000014d031: add eax, 0x95df2; mov dword ptr [rip+0x9bea0], 0x2; pop rbx; ret; 
0x0000000014d1d1: add eax, 0x95e0a; mov dword ptr [rip+0x9bd00], 0x2; pop rbx; ret; 
0x0000000014cfd2: add eax, 0x95e11; pop rbx; ret; 
0x0000000014cf61: add eax, 0x95e82; mov dword ptr [rip+0x9bf70], 0x2; pop rbx; ret; 
0x0000000014cdb6: add eax, 0x95fad; lea rdx, [rip+0x9c13e]; mov fs:[rax], rdx; ret; 
0x000000000b5122: add eax, 0x997850f; add [rax], al; ret; 
0x0000000014d1d7: add eax, 0x9bd00; add al, [rax]; add [rax], al; pop rbx; ret; 
0x0000000014d107: add eax, 0x9bdd0; add al, [rax]; add [rax], al; pop rbx; ret; 
0x0000000015a81d: add eax, 0x9be; add [rcx+0x3eb8c7], cl; add [rax], al; syscall; 
0x0000000014d037: add eax, 0x9bea0; add al, [rax]; add [rax], al; pop rbx; ret; 
0x0000000014cf67: add eax, 0x9bf70; add al, [rax]; add [rax], al; pop rbx; ret; 
0x0000000014ceb1: add eax, 0x9c026; add al, [rax]; add [rax], al; ret; 
0x0000000014cea6: add eax, 0x9c055; mov fs:[rbx], rax; pop rbx; mov dword ptr [rip+0x9c026], 0x2; ret; 
0x00000000091f1e: add eax, 0xa050348; adc rax, 0x8b4800; test rax, rax; je short 0x0000000000091f30; call rax; 
0x0000000014d0d6: add eax, 0xa0; pop rbx; ret; 
0x00000000141242: add eax, 0xa1c01; mov dword ptr fs:[rax], 0x16; mov eax, 0x16; ret; 
0x000000001411ea: add eax, 0xa1c59; mov dword ptr fs:[rax], 0x22; mov eax, 0x22; pop rbx; ret; 
0x0000000009c662: add eax, 0xa2e9; lea rdx, [rip+0xc1b12]; cmovne rax, rdx; ret; 
0x0000000013bf36: add eax, 0xa6ebd; mov eax, [rax+0x18]; test eax, eax; jne short 0x000000000013bf48; ret; 
0x0000000013c026: add eax, 0xa6fbd; mov rax, fs:[rax]; ret; 
0x00000000141bea: add eax, 0xa7111; add rsp, 0x8; ret; 
0x00000000141bd5: add eax, 0xa7126; test eax, eax; je short 0x0000000000141be0; ret; 
0x000000001414c4: add eax, 0xa77d7; ret; 
0x00000000141498: add eax, 0xa7803; add rsp, 0x8; ret; 
0x0000000014d1a6: add eax, 0xa8; pop rbx; ret; 
0x0000000013dd56: add eax, 0xaae45; test rax, rax; jne short 0x000000000013dd68; ret; 
0x0000000013c96e: add eax, 0xac22d; test rax, rax; je short 0x000000000013c980; add rsp, 0x8; ret; 
0x0000000013bae9: add eax, 0xace5e; test eax, eax; je short 0x000000000013baf8; ret; 
0x000000001333d4: add eax, 0xb6047; add rsp, 0x8; ret; 
0x0000000009d60d: add eax, 0xb8ce; lea rdx, [rip+0xccec7]; cmovne rax, rdx; ret; 
0x0000000009d1b9: add eax, 0xb902; lea rdx, [rip+0xed74b]; cmovne rax, rdx; ret; 
0x00000000129b66: add eax, 0xb92c5; add rax, fs:[0x0]; ret; 
0x0000000009d56d: add eax, 0xb94e; lea rdx, [rip+0xccf47]; cmovne rax, rdx; ret; 
0x000000001290f2: add eax, 0xb9d51; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000136b51: add eax, 0xba; add [rax+0x102], bh; cmovne eax, edx; ret; 
0x000000001420dd: add eax, 0xbe; xor ecx, ecx; lea rdx, [rip+0xd805]; lea r9, [rsp+0x20]; call qword ptr [rax]; 
0x0000000014a89c: add eax, 0xc0310000; mov rsi, [rsp+0x50]; mov rcx, [rsp+0x20]; mov rdi, r15; call rcx; 
0x0000000018804a: add eax, 0xc0310000; ret; 
0x000000001880c9: add eax, 0xc0310000; ret; 
0x00000000110673: add eax, 0xc085fff5; mov eax, 0x0; cmove rax, rbx; pop rbx; ret; 
0x00000000126ced: add eax, 0xc11c6; pop rbp; ret; 
0x000000000351aa: add eax, 0xc148001b; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x0000000009d733: add eax, 0xc21e8; lea rdx, [rip+0xc7771]; cmovne rax, rdx; ret; 
0x0000000009d3b3: add eax, 0xc2548; lea rdx, [rip+0xc7ad1]; cmovne rax, rdx; ret; 
0x000000000cbb63: add eax, 0xc3000000; nop [rax+rax]; mov rax, 0x6; ret; 
0x0000000017467c: add eax, 0xc428d48; ret; 
0x000000000b489d: add eax, 0xc478d48; ret; 
0x000000000b522d: add eax, 0xc478d48; sub r8, 0xd; lea rdi, [rdi+0xd]; jne 0x00000000000b5ac0; ret; 
0x0000000009d253: add eax, 0xc50a8; lea rdx, [rip+0xca741]; cmovne rax, rdx; ret; 
0x0000000015f999: add eax, 0xc634f00; mov ecx, [rdi-0x73]; or al, 0xb; notrack jmp r9; 
0x0000000011c976: add eax, 0xc64bd; mov eax, [rax+0x38]; ret; 
0x0000000011bd91: add eax, 0xc75e6; add [rax], al; add [rax], al; ret; 
0x0000000011bd68: add eax, 0xc760f; add [rax], al; add [rax], al; ret; 
0x0000000011bd37: add eax, 0xc7640; add al, [rax]; add [rax], al; ret; 
0x0000000011bd11: add eax, 0xc7666; add [rax], al; add [rax], al; ret; 
0x0000000011bd2a: add eax, 0xc7689; mov [rdi+0x10], rax; jb short 0x000000000011bd48; mov qword ptr [rip+0xc7640], 0x2; ret; 
0x0000000011b99a: add eax, 0xc79dd; add [rax], al; add [rax], al; add rsp, 0x8; ret; 
0x0000000011b965: add eax, 0xc7a12; add eax, [rax]; add [rax], al; add rsp, 0x8; ret; 
0x0000000011a236: add eax, 0xc8c0d; mov dword ptr fs:[rax], 0x26; mov rax, 0xffffffffffffffff; ret; 
0x000000001199e2: add eax, 0xc9461; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000001199a2: add eax, 0xc94a1; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000d025f: add eax, 0xcac1fa89; add al, [rcx-0x70a3d706]; add dh, [rsi+0x3]; ret; 
0x0000000011c0d2: add eax, 0xcb9c1; mov rax, [rax+0x18]; add dword ptr [rax], 0x1; ret; 
0x0000000011c0c2: add eax, 0xcb9d1; mov rax, [rax+0x18]; add word ptr [rax], 0x1; ret; 
0x0000000011bde7: add eax, 0xcbc84; jae short 0x000000000011bdfa; mov rdx, [rip+0xcbc83]; add word ptr [rdx+rax*2], 0x1; ret; 
0x000000001170a2: add eax, 0xcbda1; mov dword ptr fs:[rax], 0x2; xor eax, eax; ret; 
0x000000000b91ea: add eax, 0xcc521; and ch, 0x1; je short 0x00000000000b91b5; ret; 
0x0000000011655a: add eax, 0xcc8e9; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000116340: add eax, 0xccbf3; mov rax, [rax]; test rax, rax; je 0x0000000000116440; call rax; 
0x00000000116161: add eax, 0xccdd2; mov rax, [rax]; test rax, rax; je short 0x00000000001161d0; call rax; 
0x00000000114722: add eax, 0xce721; mov dword ptr fs:[rax], 0x16; ret; 
0x000000001146ed: add eax, 0xce756; mov dword ptr fs:[rax], 0x16; xor eax, eax; ret; 
0x000000001146db: add eax, 0xce768; mov dword ptr fs:[rax], 0xc; xor eax, eax; pop rbx; ret; 
0x00000000113e9f: add eax, 0xcefa4; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000011383a: add eax, 0xcf609; mov dword ptr fs:[rax], 0x16; mov rax, 0xffffffffffffffff; ret; 
0x00000000113645: add eax, 0xcfd0e; test edi, edi; je short 0x0000000000113654; mov [rip+0xcfd04], edi; ret; 
0x000000000b925f: add eax, 0xd118c; cmove r8, rax; mov rax, r8; ret; 
0x000000001106e2: add eax, 0xd2761; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000001106ba: add eax, 0xd2789; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000110576: add eax, 0xd28cd; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x0000000015b746: add eax, 0xd302e800; in eax, dx; jmp qword ptr [rsi-0x70]; 
0x0000000010fba6: add eax, 0xd328d; mov rax, [rax+0x18]; test rax, rax; je short 0x000000000010fbb5; ret; 
0x00000000114124: add eax, 0xd3797; add rsp, 0x18; ret; 
0x000000001140d4: add eax, 0xd3827; pop r12; pop r13; ret; 
0x0000000010f26a: add eax, 0xd3bd9; mov dword ptr fs:[rax], 0xc; mov eax, 0xffffffff; ret; 
0x0000000010f256: add eax, 0xd3c45; mov qword ptr [rax], 0xffffffffffffffff; xor eax, eax; ret; 
0x00000000113bcc: add eax, 0xd3c9f; add rsp, 0x8; ret; 
0x00000000113b71: add eax, 0xd3d1a; pop rbp; pop r12; pop r13; ret; 
0x0000000010e6dd: add eax, 0xd4766; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000b56fd: add eax, 0xd478d48; ret; 
0x0000000010e67c: add eax, 0xd47c7; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000112b4b: add eax, 0xd4d00; cmp eax, 0x1; jg short 0x0000000000112b60; ret; 
0x0000000010de3a: add eax, 0xd5009; mov dword ptr fs:[rax], 0x9; mov eax, 0xffffffff; ret; 
0x0000000010de04: add eax, 0xd503f; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000011261f: add eax, 0xd516c; add rsp, 0x8; ret; 
0x000000001125f8: add eax, 0xd518f; add [rax], al; add [rax], al; add rsp, 0x8; ret; 
0x000000001125ae: add eax, 0xd51dd; mov rax, r8; add rsp, 0x8; ret; 
0x0000000011257e: add eax, 0xd520d; mov rax, r8; ret; 
0x0000000010d5fa: add eax, 0xd5849; mov dword ptr fs:[rax], 0x16; xor eax, eax; ret; 
0x0000000010d4c2: add eax, 0xd5981; mov dword ptr fs:[rax], 0x16; mov eax, 0x1; ret; 
0x00000000111de7: add eax, 0xd5983; and ecx, [rcx+rcx*4-0x40]; mov byte ptr [rsi-0x1], 0x0; ret; 
0x00000000110e0b: add eax, 0xd682c; add [rax], al; add [rax], al; add rsp, 0x8; ret; 
0x00000000110b0d: add eax, 0xd6b66; add rsp, 0x8; ret; 
0x00000000110aff: add eax, 0xd6b6c; mov [rip+0xd6b95], rax; lea rax, [rip+0xd6b66]; add rsp, 0x8; ret; 
0x00000000110b06: add eax, 0xd6b95; lea rax, [rip+0xd6b66]; add rsp, 0x8; ret; 
0x00000000110a52: add eax, 0xd6be9; mov eax, 0x1; add rsp, 0x8; ret; 
0x0000000010f979: add eax, 0xd6d42; test eax, eax; jne short 0x000000000010f9b0; mov eax, 0x72; syscall; 
0x0000000010f8d9: add eax, 0xd6de2; test eax, eax; jne short 0x000000000010f910; mov eax, 0x71; syscall; 
0x0000000010f9c8: add eax, 0xd6df3; movups [rsp+0x8], xmm0; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000010f928: add eax, 0xd6e93; movups [rsp+0x8], xmm0; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000010ba42: add eax, 0xd7401; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000106dc3: add eax, 0xd8f7000d; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000010857a: add eax, 0xda8c9; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010851a: add eax, 0xda929; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000001084ba: add eax, 0xda989; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000009d65d: add eax, 0xdace; lea rdx, [rip+0xcefd7]; cmovne rax, rdx; ret; 
0x00000000108132: add eax, 0xdad11; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000001080d2: add eax, 0xdad71; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000108072: add eax, 0xdadd1; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010d7dd: add eax, 0xdaf7c289; cmp eax, 0xfffff000; mov eax, 0x0; cmova eax, edx; ret; 
0x0000000009d5bd: add eax, 0xdb4e; lea rdx, [rip+0xcf057]; cmovne rax, rdx; ret; 
0x00000000191a88: add eax, 0xdb854800; jne short 0x0000000000191a70; pop rbx; ret; 
0x000000000b3b3d: add eax, 0xde88349; lea rdi, [rdi+0xd]; jne 0x00000000000b4270; ret; 
0x0000000009c21a: add eax, 0xe1441; test dh, 0x1; je short 0x000000000009c1ef; ret; 
0x0000000009d1da: add eax, 0xe1581; and ch, 0x1; je short 0x000000000009d1a5; ret; 
0x00000000141e27: add eax, 0xe2d4; push qword ptr [rip+0x74d26]; push qword ptr [rip+0x74d18]; lea r9, [rsp+0x2c]; call qword ptr [rax]; 
0x0000000009c16a: add eax, 0xe64c1; test dh, 0x1; je short 0x000000000009c13f; ret; 
0x0000000009c5fa: add eax, 0xe66a1; test dh, 0x1; je short 0x000000000009c5cf; ret; 
0x0000000009d4ba: add eax, 0xe6ee1; test dh, 0x1; je short 0x000000000009d48f; ret; 
0x0000000009d51a: add eax, 0xe7231; test dh, 0x1; je short 0x000000000009d4ef; ret; 
0x0000000009c6ca: add eax, 0xe7371; test dh, 0x1; je short 0x000000000009c69f; ret; 
0x0000000009c29a: add eax, 0xe7411; test dh, 0x1; je short 0x000000000009c26f; ret; 
0x0000000009d70f: add eax, 0xe7a6c; cmove rax, rdx; ret; 
0x0000000009d38f: add eax, 0xe7dcc; cmove rax, rdx; ret; 
0x0000000009d22f: add eax, 0xe7f4c; cmove rax, rdx; ret; 
0x00000000155e1c: add eax, 0xe8000000; ret far; 
0x0000000009d302: add eax, 0xe82f9; cmove rax, rdx; ret; 
0x000000000e97e7: add eax, 0xe8f6894c; nop; ret far; 
0x0000000002d3b9: add eax, 0xe9000000; imul edi, esi, 0xffffffff; jmp qword ptr [rsi+0xf]; 
0x0000000003067a: add eax, 0xe9000000; ret; 
0x00000000191acf: add eax, 0xe9486be8; jmp qword ptr [rsi+0xf]; 
0x000000000f9776: add eax, 0xe981d; mov r8, [rax]; mov [rax], rdi; mov rax, r8; ret; 
0x0000000009d768: add eax, 0xec793; cmove rax, rdx; ret; 
0x0000000009d3e8: add eax, 0xecaf3; cmove rax, rdx; ret; 
0x0000000009d288: add eax, 0xecc73; cmove rax, rdx; ret; 
0x0000000009d33e: add eax, 0xed14d; lea rdx, [rip+0xed0d6]; cmove rax, rdx; ret; 
0x0000000013adb7: add eax, 0xeeb583e8; jmp qword ptr [rsi+0xf]; 
0x0000000013ad8c: add eax, 0xeeb5aee8; jmp qword ptr [rsi+0xf]; 
0x000000001677a9: add eax, 0xef00ff2; movdqu [rdi+0x5], xmm0; movdqu [rdi], xmm1; ret; 
0x00000000133e58: add eax, 0xef24e2e8; jmp qword ptr [rbx+rcx*4+0x4]; 
0x0000000014d781: add eax, 0xf000000; adc [rsp+0x18], eax; call qword ptr [rax+0x18]; 
0x000000001028e1: add eax, 0xf23a59e8; jmp qword ptr [rsi+0xf]; 
0x000000001020ab: add eax, 0xf2428fe8; jmp qword ptr [rsi+0xf]; 
0x000000001285fc: add eax, 0xf27deee9; call qword ptr [rax-0x18]; 
0x000000001677b2: add eax, 0xf7f0ff3; ret; 
0x0000000012919c: add eax, 0xf9074ee9; call qword ptr [rax-0x18]; 
0x00000000091d53: add eax, 0xf945e7e8; jmp qword ptr [rsi+0xf]; 
0x00000000094bfc: add eax, 0xfd894900; test rdi, rdi; js 0x0000000000094d94; mov rax, [rip+0x14e17f]; call qword ptr [rax]; 
0x000000001284e8: add eax, 0xfde7a2e9; call qword ptr [rax-0x18]; 
0x000000001284c8: add eax, 0xfde7c2e9; call qword ptr [rax-0x18]; 
0x000000001285d8: add eax, 0xfe1172e9; call qword ptr [rax-0x18]; 
0x00000000129128: add eax, 0xfe1322e9; call qword ptr [rax-0x18]; 
0x00000000128558: add eax, 0xfe23c2e9; call qword ptr [rax-0x18]; 
0x00000000128578: add eax, 0xfe23d2e9; call qword ptr [rax-0x18]; 
0x000000001296ec: add eax, 0xfe3f2ee9; call qword ptr [rax-0x18]; 
0x0000000012970c: add eax, 0xfe3faee9; call qword ptr [rax-0x18]; 
0x00000000129148: add eax, 0xfe6ae2e9; call qword ptr [rax-0x18]; 
0x00000000129168: add eax, 0xfe6c12e9; call qword ptr [rax-0x18]; 
0x00000000091373: add eax, 0xfff0003d; push qword ptr [rsi+0x5]; neg eax; ret; 
0x000000000913b8: add eax, 0xfff0003d; push qword ptr [rsi+0x8]; neg eax; ret; 
0x00000000127757: add eax, 0xfff90714; cmove rax, rdx; ret; 
0x00000000127687: add eax, 0xfff90804; cmove rax, rdx; ret; 
0x000000001275b7: add eax, 0xfff908d4; cmove rax, rdx; ret; 
0x000000001277cb: add eax, 0xfff90a10; cmovne rax, rdx; ret; 
0x0000000011e7ee: add eax, 0xfffd2ae9; jmp qword ptr [rsi+0x2e]; 
0x00000000159068: add eax, 0xfffd32e9; call qword ptr [rax-0x18]; 
0x0000000013bda8: add eax, 0xfffe86e9; jmp qword ptr [rsi-0x70]; 
0x0000000009206c: add eax, 0xfffe9ce9; jmp qword ptr [rsi+0x2e]; 
0x000000000972c1: add eax, 0xfffebbe9; jmp qword ptr [rsi+0xf]; 
0x0000000003d028: add eax, 0xfffefbe9; jmp qword ptr [rsi-0x70]; 
0x00000000095f04: add eax, 0xffff01e9; jmp qword ptr [rsi+0xf]; 
0x0000000008dbe9: add eax, 0xffff0be9; call qword ptr [rax+0xff0c889]; 
0x0000000013298b: add eax, 0xffff0fe9; jmp qword ptr [rsi+0x66]; 
0x0000000009190c: add eax, 0xffff18e9; jmp qword ptr [rsi+0xf]; 
0x000000000dd01d: add eax, 0xffff33e9; jmp qword ptr [rbp+rax*2-0x75]; 
0x000000000fa299: add eax, 0xffff41e9; call qword ptr [rax-0x5e1f00d]; 
0x0000000008d61e: add eax, 0xffff44e9; jmp qword ptr [rsi+0x66]; 
0x0000000008d8f9: add eax, 0xffff49e9; call qword ptr [rax+0x1bac031]; 
0x000000000452f0: add eax, 0xffff4ae9; jmp qword ptr [rsi+0x2e]; 
0x0000000014c045: add eax, 0xffff6d66; lea rdx, [rip+0x389f]; call qword ptr [rax]; 
0x000000000931fc: add eax, 0xffff70e9; jmp qword ptr [rsi+0x66]; 
0x000000000dbd6f: add eax, 0xffff75e9; jmp qword ptr [rsi+0x2e]; 
0x0000000012b67f: add eax, 0xffff7ae9; jmp qword ptr [rsi+0x2e]; 
0x0000000012cfdf: add eax, 0xffff7be9; jmp qword ptr [rsi+0x2e]; 
0x000000001567a8: add eax, 0xffff92e9; call qword ptr [rax-0x18]; 
0x0000000014b7f0: add eax, 0xffffa2fb; lea rdx, [rip-0x5cec]; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x000000000ccfaa: add eax, 0xfffffee1; ret; 
0x000000000ccf9a: add eax, 0xfffffef1; add rsp, 0x58; ret; 
0x000000000cce8a: add eax, 0xfffffef1; ret; 
0x000000000cce7a: add eax, 0xffffff01; add rsp, 0x58; ret; 
0x00000000107dab: add eax, 0xffffff40; cmove rax, rdx; ret; 
0x000000001412db: add eax, [0x0]; mov rcx, r15; call rbp; 
0x0000000002903d: add eax, [0x0]; ret; 
0x000000000d9f96: add eax, [r8]; mov rax, [rip+0x108ea8]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000012763c: add eax, [rax+rax]; cmovne rax, rdx; ret; 
0x00000000032456: add eax, [rax]; add [rax-0x73], cl; add cl, [rax+0x39]; ret; 
0x00000000063e85: add eax, [rax]; add [rax-0x77], cl; fimul st, word ptr [rax-0x7d]; ret; 
0x000000001763e2: add eax, [rax]; add [rax-0x7cb7fec8], al; fdivr st, st(7); ret; 
0x000000000940d8: add eax, [rax]; add [rax-0x7d], cl; ret far; 
0x0000000011c4a1: add eax, [rax]; add [rax-0x7d], cl; ret; 
0x0000000011b96a: add eax, [rax]; add [rax], al; add rsp, 0x8; ret; 
0x000000000d8e68: add eax, [rax]; add [rax], al; cmovne eax, edx; ret; 
0x0000000014bba6: add eax, [rax]; add [rax], al; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x000000000918ca: add eax, [rax]; add [rax], al; mov eax, r8d; ret; 
0x000000001356c6: add eax, [rax]; add [rax], al; mov edi, [rbp-0x60]; syscall; 
0x0000000008cdf5: add eax, [rax]; add [rax], al; mov edx, 0x1; mov rdi, rbx; call qword ptr [r12+0x48]; 
0x0000000014d6a1: add eax, [rax]; add [rax], al; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x000000000cbb43: add eax, [rax]; add [rax], al; ret; 
0x000000001094f1: add eax, [rax]; add [rax], al; syscall; 
0x000000000bf809: add eax, [rax]; add [rbp+0x6348ff43], cl; ret far; 
0x000000000fa865: add eax, [rax]; add [rbp+0x634c0158], cl; ret far; 
0x0000000018dfa0: add eax, [rax]; add [rbp-0x73], cl; push rcx; dec byte ptr [rax-0x77]; ret far; 
0x0000000018181f: add eax, [rax]; add [rbp-0x77], cl; ret far; 
0x00000000179348: add eax, [rax]; add [rbp-0x77], cl; ret far; 
0x000000000500bb: add eax, [rax]; add [rbx+0x5d], bl; pop r12; pop r13; ret; 
0x000000000e1593: add eax, [rax]; add [rcx-0x2ff6b], cl; jmp qword ptr [rax+rcx*2-0x75]; 
0x0000000018e099: add eax, [rax]; add [rcx-0x7d], al; ret far; 
0x00000000085e16: add eax, [rax]; add [rcx], dh; idiv byte ptr [rdx+0x2]; mov rdi, r15; call qword ptr [r13+0x80]; 
0x0000000008af9f: add eax, [rax]; add [rcx], dh; ror byte ptr [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x80]; 
0x0000000008af9e: add eax, [rax]; add [rcx], dh; ror byte ptr [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x80]; 
0x000000000596be: add eax, [rax]; add [rdi+0x3004], bh; mov eax, 0x9e; syscall; 
0x000000001296c8: add eax, [rax]; add [rdi+0x8], dh; mov rax, rdi; sar rax, 0x6; ret; 
0x0000000015980e: add eax, [rax]; add [rdx+0x2], ch; call qword ptr [rax+0x270]; 
0x00000000122d15: add eax, [rax]; add [rdx], al; mov rdx, rax; call qword ptr [rbx+0x28]; 
0x0000000015985f: add eax, [rax]; add [rdx], ch; call qword ptr [rax+0x270]; 
0x000000000f704d: add eax, [rax]; add al, ch; ret far; 
0x000000000f6445: add eax, [rax]; add al, ch; sar esi, cl; bnd jmp qword ptr [rsi+0xf]; 
0x00000000168289: add eax, [rax]; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000012756d: add eax, [rax]; cmovne rax, rdx; ret; 
0x000000000b84dc: add eax, [rax]; cmp edx, 0xff; cmove rax, rcx; ret; 
0x00000000127706: add eax, [rax]; lea rdx, [rip+0x3d771]; cmovne rax, rdx; ret; 
0x00000000127566: add eax, [rax]; lea rdx, [rip+0x3d931]; cmovne rax, rdx; ret; 
0x00000000127636: add eax, [rax]; lea rdx, [rip+0x40351]; cmovne rax, rdx; ret; 
0x000000000d9f97: add eax, [rax]; mov rax, [rip+0x108ea8]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000016a5df: add eax, [rax]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000177a2b: add eax, [rax]; movsxd r9, [r10+r9*4]; pcmpeqb xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000017ec3b: add eax, [rax]; movsxd r9, [r10+r9*4]; vpcmpeqb xmm0, xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000018700f: add eax, [rax]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x000000000b84c1: add eax, [rax]; ret; 
0x000000000d43ed: add eax, [rbp-0x74f28740]; jl short 0x00000000000d4419; xor [rcx-0x77], al; ret; 
0x000000000395d6: add eax, [rbx+0x27770af8]; lea rdx, [rip+0x16897d]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000001594fb: add eax, [rbx+0x8]; mov r14d, 0x1; mov [rbp+0x18], rax; lea rdi, [r13+0x988]; call qword ptr [r13+0xf90]; 
0x00000000084961: add eax, [rbx+rcx*4]; mov eax, r8d; ret; 
0x00000000142fce: add eax, [rbx-0x1d7c0320]; cld; lea esi, [rax+rdx+0x28]; mov rax, [rdi+0x8]; call qword ptr [rax+0x30]; 
0x00000000172089: add eax, [rbx]; add [rax], al; ret; 
0x0000000018724b: add eax, [rbx]; add [rcx+0x63], cl; or al, 0x93; add rcx, r11; notrack jmp rcx; 
0x00000000167f89: add eax, [rbx]; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000005314f: add eax, [rcx+0x52]; ret; 
0x000000000b787e: add eax, [rcx+rcx*8+0x31c3ed75]; rol bl, 0x48; mov eax, edi; ret; 
0x0000000011d3c9: add eax, [rcx+rdx]; ret; 
0x000000000490fb: add eax, [rcx-0x77]; ret; 
0x0000000008c94b: add eax, [rcx]; add [rax-0x77], cl; ret; 
0x000000001084ef: add eax, [rcx]; add [rax], al; syscall; 
0x000000000cce55: add eax, [rdx+0x8]; lea rdx, [rip-0xdf]; cmove rax, rdx; add rsp, 0x58; ret; 
0x000000000ccf75: add eax, [rdx+0x8]; lea rdx, [rip-0xef]; cmove rax, rdx; add rsp, 0x58; ret; 
0x0000000011d1d9: add eax, [rdx+rcx]; ret; 
0x00000000172189: add eax, [rdx]; add [rax], al; ret; 
0x000000000e44d9: add eax, [rdx]; or eax, 0x456ee800; cmc; jmp qword ptr [rsi+0xf]; 
0x00000000167d47: add eax, [rip+0x14634900]; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000091fd8: add eax, [rip+0x154852]; mov rax, [rax+0x8]; test rax, rax; je short 0x0000000000091fe9; call rax; 
0x00000000091f98: add eax, [rip+0x154892]; mov rax, [rax+0x10]; test rax, rax; je short 0x0000000000091fa9; call rax; 
0x00000000091f20: add eax, [rip+0x15490a]; mov rax, [rax]; test rax, rax; je short 0x0000000000091f30; call rax; 
0x00000000167c89: add eax, [rsi]; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000107d16: add eax, eax; cmp rdi, rsi; ja short 0x0000000000107d08; mov eax, r8d; ret; 
0x0000000005cb88: add eax, eax; mov eax, r8d; ret; 
0x000000000eab98: add eax, eax; pop rbx; pop rbp; ret; 
0x0000000017e701: add eax, eax; vzeroupper; ret; 
0x000000000ff77e: add eax, ebp; call r14; 
0x000000001270df: add eax, ebp; cmp ecx, [rsi-0x7cb7000d]; ret; 
0x0000000018a863: add eax, ebx; nop [rax+rax]; lea rax, [rdi+0x4]; ret; 
0x00000000172264: add eax, ebx; nop [rax+rax]; mov [rcx], rdx; ret; 
0x000000000b31b9: add eax, ebx; nop [rax+rax]; mov rdx, [rsi]; mov [rdi], rdx; ret; 
0x000000000cbb03: add eax, ebx; nop [rax+rax]; xor rax, rax; ret; 
0x00000000103d7a: add eax, ebx; notrack jmp rax; 
0x00000000181e28: add eax, ecx; add rax, rdi; vzeroupper; ret; 
0x000000001377f3: add eax, ecx; cmovs eax, edx; ret; 
0x0000000006165d: add eax, ecx; notrack jmp rax; 
0x000000000a8239: add eax, ecx; ret; 
0x0000000017d356: add eax, ecx; sub rax, rdi; ret; 
0x00000000186b3d: add eax, ecx; sub rax, rdx; shr rax, 0x2; vzeroupper; ret; 
0x000000001821cd: add eax, ecx; sub rax, rdx; vzeroupper; ret; 
0x00000000140f9e: add eax, ecx; sub rdx, 0x1; jne short 0x0000000000140f28; ret; 
0x0000000017e056: add eax, ecx; vzeroupper; ret; 
0x0000000017e6fe: add eax, edi; add rax, r8; vzeroupper; ret; 
0x000000000a8236: add eax, edi; add rax, rcx; ret; 
0x000000001821ca: add eax, edi; add rax, rcx; sub rax, rdx; vzeroupper; ret; 
0x0000000017e053: add eax, edi; add rax, rcx; vzeroupper; ret; 
0x000000000a8a6a: add eax, edi; add rax, rsi; ret; 
0x000000000a4cd6: add eax, edi; mov [rdi], dx; movzx edx, byte ptr [rsp-0x6]; mov [rdi+0x2], dl; ret; 
0x000000000a4cf5: add eax, edi; mov [rdi], edx; movzx edx, byte ptr [rsp-0xc]; mov [rdi+0x4], dl; ret; 
0x000000000a4d0d: add eax, edi; mov [rdi], edx; movzx edx, word ptr [rsp+0xc]; mov [rdi+0x4], dx; ret; 
0x00000000062a1b: add eax, edi; notrack jmp rax; 
0x000000000a4ca9: add eax, edi; ret; 
0x00000000186bf5: add eax, edi; sub rax, rdx; shr rax, 0x2; vzeroupper; ret; 
0x00000000182285: add eax, edi; sub rax, rdx; vzeroupper; ret; 
0x0000000017e1ca: add eax, edi; vzeroupper; ret; 
0x00000000072c39: add eax, edx; jmp rax; 
0x000000000cd26e: add eax, edx; mov [rdi+0x20], rax; ret; 
0x00000000028884: add eax, edx; notrack jmp rax; 
0x0000000007cd6b: add eax, edx; ret; 
0x000000000ae046: add eax, edx; sub rax, rdi; ret; 
0x000000000cb84b: add eax, edx; sub rax, rdi; shr rax, 0x2; ret; 
0x00000000128017: add eax, esi; jmp qword ptr [rsi+0xf]; 
0x0000000006a993: add eax, esi; notrack jmp rax; 
0x000000000a8a6d: add eax, esi; ret; 
0x000000001055ff: add eax, esp; notrack jmp rax; 
0x00000000176478: add eax, fs:[rax]; add [rax-0x7cb7fec8], al; fdivr st, st(7); ret; 
0x00000000165189: add ebp, [rax*1+0x14634900]; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165489: add ebp, [rcx]; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000f4180: add ebp, eax; cli; and esi, ebx; jmp qword ptr [rsi+0xf]; 
0x00000000144156: add ebp, eax; sub edx, eax; mov rsi, r13; call qword ptr [r15+0x40]; 
0x0000000014f672: add ebp, ebx; call rbp; 
0x000000001443ad: add ebp, ebx; sub edx, ebx; mov rsi, r13; call qword ptr [r14+0x40]; 
0x00000000153862: add ebp, ebx; test al, ch; out 0x5e, al; std; jmp qword ptr [rsi+0xf]; 
0x00000000107dcf: add ebp, ecx; in eax, 0xf1; jmp qword ptr [rsi+0x2e]; 
0x0000000014407c: add ebp, ecx; sub edx, ecx; mov rsi, r13; call qword ptr [r15+0x40]; 
0x000000000ff773: add ebx, [0x0]; mov r9, rbx; add r8, r13; call r14; 
0x00000000159d26: add ebx, [rax+0x5a]; pop rbx; ret; 
0x00000000091107: add ebx, [rbx+0x31]; rcr byte ptr [rbp+0x41], 0x5c; pop r13; pop r14; ret; 
0x0000000009ba26: add ebx, [rbx+0x44]; mov eax, eax; pop rbp; pop r12; ret; 
0x0000000009a1ae: add ebx, [rbx+0x5d]; pop r12; ret; 
0x0000000014ceae: add ebx, [rbx-0x39]; add eax, 0x9c026; add al, [rax]; add [rax], al; ret; 
0x0000000014cfc3: add ebx, [rbx-0x3d]; nop [rax+rax]; mov rax, [rip+0x95e11]; pop rbx; ret; 
0x00000000166389: add ebx, [rdx]; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166089: add ebx, [rip+0x63490005]; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000011b34e: add ebx, eax; mov rax, [rdi]; mov [rdx], rax; mov eax, 0x1; ret; 
0x0000000011c0ce: add ebx, eax; mov rax, [rip+0xcb9c1]; mov rax, [rax+0x18]; add dword ptr [rax], 0x1; ret; 
0x000000000cbaf3: add ebx, eax; nop [rax+rax]; add rax, 0x3; ret; 
0x0000000018a843: add ebx, eax; nop [rax+rax]; lea rax, [rdi+0x2]; ret; 
0x00000000126b90: add ebx, eax; nop [rax+rax]; xor eax, eax; ret; 
0x00000000136fc7: add ebx, eax; nop [rax]; mov eax, 0x2; ret; 
0x0000000017e8bb: add ebx, eax; nop [rax]; ret; 
0x0000000009214e: add ebx, eax; nop; mov [rip+0x151188], rax; ret; 
0x000000000923ce: add ebx, eax; nop; mov dword ptr [rip+0x150ed9], 0x1; mov [rip+0x150eae], rax; ret; 
0x0000000011c0dd: add ebx, eax; nop; ret; 
0x00000000053c9d: add ebx, eax; nop; xor eax, eax; ret; 
0x00000000144846: add ebx, eax; sub edx, eax; mov rsi, rbx; call qword ptr [rbp+0x40]; 
0x0000000011921b: add ebx, eax; xor ebp, ebp; pop rax; pop rdi; call rax; 
0x00000000086f3b: add ebx, ebp; ret far; 
0x0000000012f343: add ebx, ebp; xchg edi, eax; xor eax, eax; ret; 
0x00000000167973: add ebx, esi; movq [rdi], mm1; ret; 
0x0000000014b44b: add ebx, esp; std; call qword ptr [rax-0x5e1f00d]; 
0x0000000018a572: add ecx, 0x100; cmp rdx, rcx; jne short 0x000000000018a556; vzeroupper; ret; 
0x000000001071d6: add ecx, 0x150; shr ecx, 0x3; rep stosq [rdi]; ret; 
0x0000000015912c: add ecx, 0x180; mov rsi, rax; shr ecx, 0x3; rep movsq [rdi], [rsi]; ret; 
0x000000000b831b: add ecx, 0x40; cmp rdx, rcx; jne short 0x00000000000b8307; rep ret; 
0x000000001856af: add ecx, 0x80; cmp rdx, rcx; jne short 0x000000000018569b; vzeroupper; ret; 
0x00000000028d57: add ecx, 0xa08; cmp [rsp+0x18], rcx; cmovne rdi, r14; call rdx; 
0x000000000afd5a: add ecx, [r9-0x76b7fcbe]; clc; ret; 
0x00000000191bf6: add ecx, [rax-0x73]; insb [rdi], dx; ret; 
0x000000000b39fc: add ecx, [rax-0x73]; jg short 0x00000000000b3a04; jne 0x00000000000b4270; ret; 
0x000000000b50e0: add ecx, [rax-0x73]; jg short 0x00000000000b50e8; jne 0x00000000000b5ac0; ret; 
0x00000000183f3d: add ecx, [rax-0x73]; jg short 0x0000000000183f45; jne 0x00000000001841a0; vzeroupper; ret; 
0x00000000184c71: add ecx, [rax-0x73]; jg short 0x0000000000184c79; jne 0x0000000000184ed0; vzeroupper; ret; 
0x0000000014d0fe: add ecx, [rax-0x75]; add eax, 0x95c82; mov dword ptr [rip+0x9bdd0], 0x2; pop rbx; ret; 
0x0000000014d02e: add ecx, [rax-0x75]; add eax, 0x95df2; mov dword ptr [rip+0x9bea0], 0x2; pop rbx; ret; 
0x0000000014d1ce: add ecx, [rax-0x75]; add eax, 0x95e0a; mov dword ptr [rip+0x9bd00], 0x2; pop rbx; ret; 
0x0000000014cf5e: add ecx, [rax-0x75]; add eax, 0x95e82; mov dword ptr [rip+0x9bf70], 0x2; pop rbx; ret; 
0x0000000013172e: add ecx, [rax-0x75]; or [r8-0x7d], r9b; ret; 
0x000000000afd5d: add ecx, [rax-0x77]; clc; ret; 
0x000000000e3ff5: add ecx, [rax-0x77]; fimul st, dword ptr [rax-0x7d]; ret; 
0x000000001430c8: add ecx, [rax-0x77]; out dx, eax; and esi, 0xfffffffc; call qword ptr [rax+0x30]; 
0x00000000099f8b: add ecx, [rax-0x7b]; ror byte ptr [rdi], 0x84; ret far; 
0x0000000009a197: add ecx, [rax-0x7b]; shl byte ptr [rbx+0x4c], 0x89; out 0x48, al; mov edi, ebp; call rax; 
0x00000000135aeb: add ecx, [rax-0x7d]; call qword ptr [rcx]; 
0x0000000007c5b9: add ecx, [rax-0x7d]; ret; 
0x000000001676e2: add ecx, [rbx+0x357890e]; mov [rdi], ecx; ret; 
0x000000000b4804: add ecx, [rcx+0x357890f]; lea rax, [rdi+0x6]; ret; 
0x000000000b5654: add ecx, [rcx+0x357890f]; lea rax, [rdi+0x7]; ret; 
0x000000000b31b4: add ecx, [rcx+0x357890f]; ret; 
0x000000000b3a74: add ecx, [rcx+0x357890f]; sub r8, 0x7; lea rdi, [rdi+0x7]; jne 0x00000000000b4270; ret; 
0x000000000b72b4: add ecx, [rcx+0x357890f]; xor ch, ch; mov [rdi+0x7], ch; ret; 
0x000000000599e1: add ecx, [rcx+0x39]; ret far; 
0x000000000a3d8e: add ecx, [rcx+rcx*4+0x1c]; xor cl, [rbp-0x77]; ret far; 
0x000000000afd5b: add ecx, [rcx-0x76b7fcbe]; clc; ret; 
0x0000000005148f: add ecx, [rcx-0x7d]; ret; 
0x00000000157300: add ecx, [rdi]; mov bh, 0x15; clc; sbb eax, 0x488d0009; jmp qword ptr [rsi-0x7d]; 
0x00000000183f41: add ecx, [rdi]; test [rax+0x2], ebx; add [rax], al; vzeroupper; ret; 
0x000000000b3a00: add ecx, [rdi]; test [rcx+0x8], ebp; add [rax], al; ret; 
0x000000000ed792: add ecx, [rdi]; test [rdi], bl; add al, [rax]; add [rax-0x7d], cl; ret; 
0x00000000176427: add ecx, [rdi]; test [rdx-0x7ffffffd], esi; cmp [rcx], al; sbb rax, 0xffffffffffffffff; ret; 
0x0000000013755d: add ecx, eax; loopne 0x0000000000137564; shr rax, 0x4; and eax, 0x7f; ret; 
0x000000000f926a: add ecx, eax; notrack jmp rcx; 
0x0000000006d976: add ecx, ebp; ret; 
0x0000000011ffb0: add ecx, ebp; sar dh, 0xff; jmp qword ptr [rsi+0x2e]; 
0x000000000f0344: add ecx, ebp; syscall; 
0x0000000007afe0: add ecx, ebp; xchg edx, eax; idiv edi; jmp qword ptr [rsi+0x2e]; 
0x0000000007b17b: add ecx, ebx; mov dword ptr [rsp+0x10], 0x1; mov rbx, rsi; mov dword ptr [rsp+0x28], 0x20; jmp rcx; 
0x0000000007b213: add ecx, ebx; mov dword ptr [rsp+0x48], 0x1; mov rbx, rsi; xor r12d, r12d; jmp rcx; 
0x0000000007b3c0: add ecx, ebx; mov rbx, [rsp+0x68]; jmp rcx; 
0x0000000007b265: add ecx, ebx; mov rbx, rdx; mov edx, 0x1; jmp rcx; 
0x0000000007a695: add ecx, ebx; mov rbx, rdx; xor edx, edx; jmp rcx; 
0x0000000007b0a7: add ecx, ebx; mov rbx, rsi; jmp rcx; 
0x0000000007b1cb: add ecx, ebx; mov rbx, rsi; mov r9d, 0x1; jmp rcx; 
0x0000000015f93f: add ecx, ebx; notrack jmp r9; 
0x00000000187016: add ecx, ebx; notrack jmp rcx; 
0x0000000011459c: add ecx, ebx; ret; 
0x0000000018dbb1: add ecx, ecx; notrack jmp rcx; 
0x0000000007b335: add ecx, edi; jmp rcx; 
0x000000000364c1: add ecx, edi; notrack jmp rcx; 
0x000000000725ac: add ecx, edx; notrack jmp rcx; 
0x0000000007ba7e: add ecx, esi; jmp rcx; 
0x000000000b8494: add ecx, esi; notrack jmp rcx; 
0x00000000147a11: add edi, 0x10; jmp rcx; 
0x000000000b6d9d: add edi, 0x10; lea r11, [rip+0xf24dd]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b640d: add edi, 0x10; lea r11, [rip+0xf2ded]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b5b47: add edi, 0x10; lea r11, [rip+0xf366f]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b5b27: add edi, 0x10; lea r11, [rip+0xf368f]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b473d: add edi, 0x10; lea r11, [rip+0xf48dd]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b42f7: add edi, 0x10; lea r11, [rip+0xf4cdf]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b42d7: add edi, 0x10; lea r11, [rip+0xf4cff]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b30fd: add edi, 0x10; lea r11, [rip+0xf5d41]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000e3b8e: add edi, 0x1; test al, al; jne short 0x00000000000e3b41; xor eax, eax; ret; 
0x0000000015a11a: add edi, 0x1c; mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x000000000b6dd2: add edi, 0x20; lea r11, [rip+0xf24a8]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6442: add edi, 0x20; lea r11, [rip+0xf2db8]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b4772: add edi, 0x20; lea r11, [rip+0xf48a8]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b3132: add edi, 0x20; lea r11, [rip+0xf5d0c]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000014374f: add edi, 0x23b0; pop rbp; jmp rcx; 
0x00000000111c71: add edi, 0x26; mov fs:[rax], edi; mov eax, 0xffffffff; ret; 
0x000000000b6c80: add edi, 0x30; lea r11, [rip+0xf25fa]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b630f: add edi, 0x30; lea r11, [rip+0xf2eeb]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b463f: add edi, 0x30; lea r11, [rip+0xf49db]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b2fff: add edi, 0x30; lea r11, [rip+0xf5e3f]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000008ae3c: add edi, 0x4; add [rax], al; lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax+0x90]; 
0x0000000014a518: add edi, 0x58; jmp rcx; 
0x00000000149be8: add edi, 0x68; jmp rcx; 
0x00000000146dfb: add edi, 0xc8; jmp rcx; 
0x0000000009bb82: add edi, [rax+0x1]; pop rbx; pop rbp; pop r12; ret; 
0x00000000136fbb: add edi, [rax+0x2]; sub esi, 0x1; mov [rdi+0x1], sil; ret; 
0x0000000009d709: add edi, [rdx+0xe]; add [rax-0x73], cl; add eax, 0xe7a6c; cmove rax, rdx; ret; 
0x00000000042b90: add edi, [rsp]; mov rsi, r15; call r14; 
0x000000000464a2: add edi, eax; cmp rdi, r8; jb short 0x0000000000046485; xor eax, eax; ret; 
0x000000000ccb10: add edi, eax; mov [rsp+0x88], r15; call r12; 
0x0000000005ba4b: add edi, eax; test [rdi+rdi*8-0x1], esp; jmp qword ptr [rsi]; 
0x00000000168589: add edi, ebp; add al, 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000190d80: add edi, ebp; call r12; 
0x00000000119991: add edi, ebp; xor eax, eax; ret; 
0x00000000168889: add edi, edx; add al, 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000015f93c: add edi, edx; add r9, r11; notrack jmp r9; 
0x00000000189091: add edi, edx; lea r11, [rip+0x2e5f6]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000189017: add edi, edx; lea r11, [rip+0x2e670]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000188f88: add edi, edx; lea r11, [rip+0x2e6ff]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000188d7d: add edi, edx; lea r11, [rip+0x2e90a]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000188c4b: add edi, edx; lea r11, [rip+0x2ea3c]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000188b85: add edi, edx; lea r11, [rip+0x2eb02]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000188b07: add edi, edx; lea r11, [rip+0x2eb80]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000188a72: add edi, edx; lea r11, [rip+0x2ec15]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000188875: add edi, edx; lea r11, [rip+0x2ee12]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000188743: add edi, edx; lea r11, [rip+0x2ef44]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000188646: add edi, edx; lea r11, [rip+0x2f041]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000187a61: add edi, edx; lea r11, [rip+0x2fae6]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x000000001879e7: add edi, edx; lea r11, [rip+0x2fb60]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000187958: add edi, edx; lea r11, [rip+0x2fbef]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018774d: add edi, edx; lea r11, [rip+0x2fdfa]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018761b: add edi, edx; lea r11, [rip+0x2ff2c]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000187555: add edi, edx; lea r11, [rip+0x2fff2]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x000000001874d7: add edi, edx; lea r11, [rip+0x30070]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000187442: add edi, edx; lea r11, [rip+0x30105]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000187245: add edi, edx; lea r11, [rip+0x30302]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000187113: add edi, edx; lea r11, [rip+0x30434]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000187008: add edi, edx; lea r11, [rip+0x3053f]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x000000001693ec: add edi, edx; lea r11, [rip+0x4ee9b]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000167b47: add edi, edx; lea r11, [rip+0x50740]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001679e0: add edi, edx; lea r11, [rip+0x508a7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001668d8: add edi, edx; lea r11, [rip+0x514af]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000164cba: add edi, edx; lea r11, [rip+0x52ccd]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165047: add edi, edx; lea r11, [rip+0x52d40]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000164ec9: add edi, edx; lea r11, [rip+0x52ebe]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016250b: add edi, edx; lea r11, [rip+0x5547c]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162446: add edi, edx; lea r11, [rip+0x55541]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000015fb2b: add edi, edx; lea r11, [rip+0x57c9c]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000015fa66: add edi, edx; lea r11, [rip+0x57d61]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000043ad5: add edi, esp; call rax; 
0x00000000138cac: add edx, 0x1; syscall; 
0x0000000008fb62: add edx, 0x60; mov rax, [rdi]; mov [rdx], rax; ret; 
0x000000001373df: add edx, 0x8; cmp esi, 0x80; cmovb eax, edx; ret; 
0x000000000b8455: add edx, [rax]; str [rax+0x63]; add al, 0xbe; add rax, rsi; notrack jmp rax; 
0x0000000003fb0f: add edx, [rdi+0x20]; mov rax, r10; ret; 
0x00000000166689: add edx, [rdi]; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000011aed5: add edx, eax; cmp rcx, rdx; mov edx, 0x0; cmovb rax, rdx; ret; 
0x0000000017e592: add edx, eax; jl 0x000000000017e680; add rax, rdi; vzeroupper; ret; 
0x000000000a8978: add edx, eax; jl short 0x00000000000a89e0; add rax, rdi; ret; 
0x000000000a8988: add edx, eax; jl short 0x00000000000a89e0; lea rax, [rdi+rax+0x10]; ret; 
0x000000000a89a8: add edx, eax; jl short 0x00000000000a89e0; lea rax, [rdi+rax+0x20]; ret; 
0x000000000a89c8: add edx, eax; jl short 0x00000000000a89e0; lea rax, [rdi+rax+0x30]; ret; 
0x00000000054b92: add edx, eax; mov rax, rdx; pop rbx; ret; 
0x000000000a4e2b: add edx, eax; notrack jmp rdx; 
0x000000000596f7: add edx, ebp; mov [r9+0x3a8], rdi; mov rsp, rdx; ret; 
0x000000000f50be: add edx, ebp; notrack jmp rdx; 
0x0000000003f2ed: add edx, ebx; notrack jmp r10; 
0x00000000050e8c: add edx, ecx; notrack jmp rdx; 
0x00000000053290: add edx, edi; cmp esi, 0x2f; notrack jmp rdx; 
0x000000000a4d6e: add edx, edi; notrack jmp rdx; 
0x00000000137360: add edx, edx; mov [r9], r10; ret; 
0x0000000011b58b: add edx, edx; mov eax, 0x14; syscall; 
0x0000000003f007: add edx, esi; notrack jmp rdx; 
0x00000000072530: add edx, esp; call qword ptr [r10+rax*8]; 
0x00000000148c59: add esi, 0x38; jmp qword ptr [rax+0x18]; 
0x00000000072524: add esi, 0x48; shl rdx, 0x2; lea rcx, [rbx+rdx]; add rdx, r12; call qword ptr [r10+rax*8]; 
0x000000000b72b9: add esi, [rax]; in eax, dx; mov [rdi+0x7], ch; ret; 
0x0000000014232d: add esi, [rcx]; sar bh, 0x53; sbb bl, ch; mov edx, 0xfe7416e8; jmp qword ptr [rsi+0xf]; 
0x00000000156f5c: add esi, [rdi+0x11]; cmp dx, cx; sete al; ret; 
0x0000000009128e: add esi, [rdi+rdi+0x45]; xor edx, edx; mov esi, 0x80; mov eax, r8d; syscall; 
0x00000000156f76: add esi, [rsi+0x7]; ret; 
0x0000000014337f: add esi, [rsi+0xe]; mov eax, 0x2; ret; 
0x00000000110eee: add esi, eax; call far fword ptr [rax+r8*4+0x39]; 
0x00000000143ebf: add esi, eax; cmp rsi, [rdx+0x28]; ja short 0x0000000000143eb0; mov [rdx+0x20], rsi; ret; 
0x00000000050f73: add esi, eax; jmp qword ptr [rax]; 
0x000000001511ba: add esi, eax; mov [rdi+0x18], rsi; mov rax, r8; ret; 
0x000000000e7e09: add esi, eax; or [r9], r8b; mov [rdi], al; mov eax, 0x1; ret; 
0x000000001199cc: add esi, ebp; lea ecx, [rdi+rdi]; shr eax, cl; and eax, 0x3; ret; 
0x000000000759e0: add esi, ebx; mov byte ptr [rsp+0x38], 0x20; mov rbx, rdi; mov dword ptr [rsp+0x28], 0x1; jmp rsi; 
0x00000000075a92: add esi, ebx; mov rbx, [rsp+0x80]; jmp rsi; 
0x00000000075503: add esi, ebx; mov rbx, rcx; mov ecx, 0x1; jmp rsi; 
0x00000000074b9b: add esi, ebx; mov rbx, rcx; xor ecx, ecx; jmp rsi; 
0x000000000755b3: add esi, ebx; mov rbx, rdi; jmp rsi; 
0x00000000075b38: add esi, ebx; mov rbx, rdi; mov r13d, 0x1; jmp rsi; 
0x000000000758f4: add esi, ebx; mov rbx, rdx; mov edx, 0x1; jmp rsi; 
0x000000000758a3: add esi, ebx; mov rbx, rdx; xor edx, edx; jmp rsi; 
0x00000000167893: add esi, ebx; movq [rdi], mm1; ret; 
0x0000000013748e: add esi, ebx; movq mm0, [rsi]; movups [rdi+rdx+0x8], xmm0; ret; 
0x000000000b7e4e: add esi, ebx; movsb [rdi], [rsi]; ret; 
0x00000000159137: add esi, ebx; movsq [rdi], [rsi]; ret; 
0x00000000095e43: add esi, ebx; stosq [rdi]; pop rbp; ret; 
0x000000001071de: add esi, ebx; stosq [rdi]; ret; 
0x00000000169189: add esi, ecx; add al, 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000b6f0a: add esi, ecx; lea r11, [rip+0xf23f1]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6eea: add esi, ecx; lea r11, [rip+0xf2411]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6ec1: add esi, ecx; lea r11, [rip+0xf243a]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b504a: add esi, ecx; lea r11, [rip+0xf40dd]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b502a: add esi, ecx; lea r11, [rip+0xf40fd]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b5001: add esi, ecx; lea r11, [rip+0xf4126]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b396a: add esi, ecx; lea r11, [rip+0xf55dd]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b394a: add esi, ecx; lea r11, [rip+0xf55fd]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b3921: add esi, ecx; lea r11, [rip+0xf5626]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000168b89: add esi, edi; add al, 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000018944c: add esi, edi; fadd st, st(3); ret; 
0x000000001495ab: add esi, edi; jmp qword ptr [rsi-0x70]; 
0x00000000075686: add esi, edi; jmp rsi; 
0x00000000042d19: add esi, edi; mov rdx, rbp; mov rsi, r14; mov rdi, r12; call rbx; 
0x0000000007d78b: add esi, edi; notrack jmp rsi; 
0x0000000015f939: add esi, edx; add rdi, rdx; add r9, r11; notrack jmp r9; 
0x00000000169184: add esi, edx; lea r11, [rip+0x4f103]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169004: add esi, edx; lea r11, [rip+0x4f283]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168e84: add esi, edx; lea r11, [rip+0x4f403]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168d05: add esi, edx; lea r11, [rip+0x4f582]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168b84: add esi, edx; lea r11, [rip+0x4f703]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168a04: add esi, edx; lea r11, [rip+0x4f883]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168884: add esi, edx; lea r11, [rip+0x4fa03]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168704: add esi, edx; lea r11, [rip+0x4fb83]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168584: add esi, edx; lea r11, [rip+0x4fd03]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168404: add esi, edx; lea r11, [rip+0x4fe83]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168284: add esi, edx; lea r11, [rip+0x50003]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168104: add esi, edx; lea r11, [rip+0x50183]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000167f84: add esi, edx; lea r11, [rip+0x50303]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000167e04: add esi, edx; lea r11, [rip+0x50483]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000167c84: add esi, edx; lea r11, [rip+0x50603]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166684: add esi, edx; lea r11, [rip+0x51703]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166504: add esi, edx; lea r11, [rip+0x51883]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166384: add esi, edx; lea r11, [rip+0x51a03]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166205: add esi, edx; lea r11, [rip+0x51b82]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166084: add esi, edx; lea r11, [rip+0x51d03]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165f04: add esi, edx; lea r11, [rip+0x51e83]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165d84: add esi, edx; lea r11, [rip+0x52003]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165c04: add esi, edx; lea r11, [rip+0x52183]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165a84: add esi, edx; lea r11, [rip+0x52303]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165904: add esi, edx; lea r11, [rip+0x52483]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165784: add esi, edx; lea r11, [rip+0x52603]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165604: add esi, edx; lea r11, [rip+0x52783]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165484: add esi, edx; lea r11, [rip+0x52903]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165304: add esi, edx; lea r11, [rip+0x52a83]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165184: add esi, edx; lea r11, [rip+0x52c03]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000163b32: add esi, edx; lea r11, [rip+0x53e55]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001639e2: add esi, edx; lea r11, [rip+0x53fa5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000163892: add esi, edx; lea r11, [rip+0x540f5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000163742: add esi, edx; lea r11, [rip+0x54245]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001635f2: add esi, edx; lea r11, [rip+0x54395]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001634a2: add esi, edx; lea r11, [rip+0x544e5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000163352: add esi, edx; lea r11, [rip+0x54635]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001630b2: add esi, edx; lea r11, [rip+0x548d5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162f62: add esi, edx; lea r11, [rip+0x54a25]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162e12: add esi, edx; lea r11, [rip+0x54b75]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162cc2: add esi, edx; lea r11, [rip+0x54cc5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162b72: add esi, edx; lea r11, [rip+0x54e15]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162a22: add esi, edx; lea r11, [rip+0x54f65]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001628d2: add esi, edx; lea r11, [rip+0x550b5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016260a: add esi, edx; lea r11, [rip+0x5537d]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000161152: add esi, edx; lea r11, [rip+0x56675]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000161002: add esi, edx; lea r11, [rip+0x567c5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160eb2: add esi, edx; lea r11, [rip+0x56915]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160d62: add esi, edx; lea r11, [rip+0x56a65]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160c12: add esi, edx; lea r11, [rip+0x56bb5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160ac2: add esi, edx; lea r11, [rip+0x56d05]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160972: add esi, edx; lea r11, [rip+0x56e55]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001606d2: add esi, edx; lea r11, [rip+0x570f5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160582: add esi, edx; lea r11, [rip+0x57245]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160432: add esi, edx; lea r11, [rip+0x57395]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001602e2: add esi, edx; lea r11, [rip+0x574e5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160192: add esi, edx; lea r11, [rip+0x57635]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160042: add esi, edx; lea r11, [rip+0x57785]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000015fef2: add esi, edx; lea r11, [rip+0x578d5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000015fc2a: add esi, edx; lea r11, [rip+0x57b9d]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000013a0cc: add esi, esi; ret; 
0x000000000eac54: add esi, esi; ret; 
0x00000000168e89: add esi, esp; add al, 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000e5f88: add esi, esp; dec dword ptr [rax-0x77]; ret; 
0x000000000b7c1d: add esp, 0x100; sub rax, rdx; ret; 
0x000000000b7ccd: add esp, 0x100; xor edx, edx; or cl, cl; cmove rax, rdx; ret; 
0x00000000060986: add esp, 0x1010; pop rbp; ret; 
0x00000000060791: add esp, 0x1018; mov rax, r12; pop rbp; pop r12; ret; 
0x0000000009a583: add esp, 0x10; mov eax, r12d; pop r12; ret; 
0x0000000014c156: add esp, 0x10; mov eax, r8d; pop r12; ret; 
0x00000000156913: add esp, 0x10; mov eax, r8d; pop rbp; ret; 
0x000000000969f8: add esp, 0x10; mov rax, r8; pop rbp; ret; 
0x00000000096808: add esp, 0x10; mov rax, r8; pop rbx; ret; 
0x0000000008a50a: add esp, 0x10; movzx eax, al; pop rbx; neg eax; ret; 
0x0000000013f790: add esp, 0x10; pop r12; ret; 
0x0000000014facb: add esp, 0x10; pop rbp; jmp rax; 
0x00000000034988: add esp, 0x10; pop rbp; pop r12; pop r13; ret; 
0x00000000093151: add esp, 0x10; pop rbp; ret; 
0x0000000008dfb5: add esp, 0x10; pop rbx; jmp rax; 
0x000000000606e7: add esp, 0x10; pop rbx; pop r12; pop r13; ret; 
0x0000000008384f: add esp, 0x10; pop rbx; pop rbp; pop r12; ret; 
0x00000000041165: add esp, 0x10; pop rbx; ret; 
0x0000000015a4df: add esp, 0x110; mov eax, r12d; pop r12; ret; 
0x0000000014c3d6: add esp, 0x110; pop rbx; pop rbp; pop r12; ret; 
0x000000000418e2: add esp, 0x118; ret; 
0x00000000109fb8: add esp, 0x130; pop rbp; ret; 
0x000000000420d9: add esp, 0x140; mov eax, r8d; pop rbx; ret; 
0x000000000417ab: add esp, 0x148; ret; 
0x00000000091c74: add esp, 0x18; and eax, 0xc; pop rbx; pop rbp; ret; 
0x00000000097c0e: add esp, 0x18; jmp rax; 
0x00000000141d26: add esp, 0x18; mov eax, r12d; pop rbx; pop r12; ret; 
0x000000001379bb: add esp, 0x18; mov eax, r8d; pop rbx; pop rbp; ret; 
0x0000000009a01b: add esp, 0x18; mov rax, r8; pop rbx; pop r12; ret; 
0x00000000060f6a: add esp, 0x18; movzx eax, al; neg eax; ret; 
0x00000000045872: add esp, 0x18; pop rbp; mov rax, r12; pop r12; ret; 
0x000000000412c6: add esp, 0x18; pop rbx; pop rbp; ret; 
0x000000000394ab: add esp, 0x18; ret; 
0x00000000156f03: add esp, 0x190; mov rax, r8; pop rbp; ret; 
0x0000000010fe33: add esp, 0x190; pop rbx; pop rbp; pop r12; ret; 
0x000000001081ae: add esp, 0x1a0; mov eax, r8d; pop rbx; ret; 
0x00000000060453: add esp, 0x1d0; pop rbp; pop r12; pop r13; ret; 
0x00000000132df7: add esp, 0x20; mov eax, r8d; pop rbp; ret; 
0x000000000dbcef: add esp, 0x20; mov eax, r8d; pop rbx; ret; 
0x00000000041381: add esp, 0x20; movdqa xmm0, xmm2; pop rbp; ret; 
0x00000000041412: add esp, 0x20; pop rbp; ret; 
0x0000000008e761: add esp, 0x20; pop rbx; jmp rax; 
0x000000000342ad: add esp, 0x20; pop rbx; pop rbp; pop r12; ret; 
0x000000000c6116: add esp, 0x20; pop rbx; ret; 
0x000000000d0319: add esp, 0x20; xor eax, eax; pop rbx; ret; 
0x0000000008ec63: add esp, 0x20; xor edx, edx; pop rbx; jmp rax; 
0x00000000042a7b: add esp, 0x240; pop rbx; pop rbp; pop r12; ret; 
0x0000000014c8e9: add esp, 0x28; mov eax, r12d; pop rbp; pop r12; ret; 
0x0000000006086b: add esp, 0x28; mov rax, r12; pop rbx; pop r12; ret; 
0x0000000014c295: add esp, 0x28; pop rbx; pop r12; ret; 
0x000000000590cd: add esp, 0x28; pop rbx; pop rbp; ret; 
0x000000000455f6: add esp, 0x28; ret; 
0x00000000029019: add esp, 0x28; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000834e8: add esp, 0x2c0; pop rbp; pop r12; pop r13; ret; 
0x00000000190b18: add esp, 0x30; mov rax, r12; pop r12; ret; 
0x0000000010dd4d: add esp, 0x30; pop rbp; ret; 
0x0000000008d87c: add esp, 0x30; pop rbx; pop rbp; pop r12; ret; 
0x000000001092ee: add esp, 0x30; pop rbx; ret; 
0x00000000159cdc: add esp, 0x38; jmp rax; 
0x000000001906f7: add esp, 0x38; pop rbx; pop r14; ret; 
0x000000000290c8: add esp, 0x38; pop rbx; pop rbp; ret; 
0x00000000059a36: add esp, 0x38; ret; 
0x0000000010d72c: add esp, 0x40; pop r12; ret; 
0x0000000009666e: add esp, 0x40; pop rbp; ret; 
0x00000000148d49: add esp, 0x40; pop rbx; pop rbp; pop r12; ret; 
0x00000000042189: add esp, 0x40; pop rbx; ret; 
0x0000000011ca3c: add esp, 0x40; ret; 
0x000000000604e3: add esp, 0x410; pop rbp; pop r12; pop r13; ret; 
0x0000000011603e: add esp, 0x418; ret; 
0x000000000597e6: add esp, 0x450; pop rbp; ret; 
0x0000000014bd64: add esp, 0x48; pop rbx; pop rbp; ret; 
0x0000000008a3f9: add esp, 0x48; ret; 
0x000000001486ff: add esp, 0x50; pop rbx; pop rbp; pop r12; ret; 
0x000000001562f1: add esp, 0x520; mov rax, r12; pop r12; ret; 
0x00000000138cc6: add esp, 0x58; pop rbx; pop rbp; ret; 
0x000000000cce64: add esp, 0x58; ret; 
0x0000000010e88f: add esp, 0x60; mov eax, r11d; pop rbx; ret; 
0x0000000010ee18: add esp, 0x60; mov rax, r12; pop r12; ret; 
0x0000000010fff8: add esp, 0x60; pop rbp; ret; 
0x00000000159bf1: add esp, 0x68; jmp rax; 
0x00000000108a2c: add esp, 0x68; pop rbp; pop r12; ret; 
0x000000000fbb65: add esp, 0x68; pop rbx; pop rbp; ret; 
0x000000001091ad: add esp, 0x68; ret; 
0x000000000b9553: add esp, 0x70; pop rbx; pop rbp; pop r12; ret; 
0x00000000108ba7: add esp, 0x78; ret; 
0x0000000015822f: add esp, 0x88; mov eax, r12d; pop rbp; pop r12; ret; 
0x00000000116bad: add esp, 0x88; mov rax, r8; pop rbx; pop rbp; ret; 
0x000000000eab95: add esp, 0x8; add eax, eax; pop rbx; pop rbp; ret; 
0x00000000137241: add esp, 0x8; lea eax, [rbx+rbp]; pop rbx; pop rbp; ret; 
0x000000001414bf: add esp, 0x8; lea rax, [rip+0xa77d7]; ret; 
0x000000001415e1: add esp, 0x8; mov eax, 0x10; pop rbx; pop rbp; ret; 
0x0000000014f861: add esp, 0x8; mov eax, 0x1; pop rbp; pop r12; ret; 
0x0000000007fc37: add esp, 0x8; mov eax, 0x1; pop rbx; pop rbp; ret; 
0x0000000013188b: add esp, 0x8; mov eax, 0xa; pop rbx; pop rbp; ret; 
0x0000000007fc59: add esp, 0x8; mov eax, 0xffffffff; pop rbx; pop rbp; ret; 
0x000000000866ec: add esp, 0x8; mov eax, r12d; pop rbp; pop r12; ret; 
0x00000000059b11: add esp, 0x8; mov eax, r12d; pop rbx; pop r12; ret; 
0x0000000007ed94: add esp, 0x8; mov eax, r8d; pop rbx; pop rbp; ret; 
0x000000001122af: add esp, 0x8; mov eax, r8d; ret; 
0x000000000fd339: add esp, 0x8; mov eax, r9d; ret; 
0x000000000b8c43: add esp, 0x8; mov rax, r12; pop rbp; pop r12; ret; 
0x0000000009d7d1: add esp, 0x8; mov rax, r12; pop rbx; pop r12; ret; 
0x0000000004594f: add esp, 0x8; mov rax, r8; pop rbx; pop rbp; ret; 
0x000000001502a3: add esp, 0x8; mov rdi, rbp; pop rbp; pop r12; jmp rax; 
0x0000000008406d: add esp, 0x8; mov rdi, rbp; pop rbx; pop rbp; jmp rax; 
0x00000000029309: add esp, 0x8; movzx eax, al; neg eax; ret; 
0x00000000143830: add esp, 0x8; movzx eax, al; pop rbp; pop r12; ret; 
0x00000000144ce7: add esp, 0x8; movzx eax, al; pop rbx; pop rbp; ret; 
0x000000000503e6: add esp, 0x8; movzx eax, al; ret; 
0x0000000013c03e: add esp, 0x8; movzx eax, ax; ret; 
0x000000001519a6: add esp, 0x8; not eax; shr eax, 0x1f; ret; 
0x0000000014f856: add esp, 0x8; pop rbp; pop r12; jmp rax; 
0x00000000081d6a: add esp, 0x8; pop rbp; pop r12; ret; 
0x00000000143707: add esp, 0x8; pop rbx; pop rbp; jmp rcx; 
0x00000000087dd7: add esp, 0x8; pop rbx; pop rbp; mov eax, r8d; ret; 
0x00000000029a39: add esp, 0x8; pop rbx; pop rbp; ret; 
0x0000000002bba9: add esp, 0x8; ret; 
0x0000000015c845: add esp, 0x8; sar eax, 0x1f; ret; 
0x0000000012566c: add esp, 0x8; xor eax, eax; pop rbp; pop r12; ret; 
0x0000000008fbf3: add esp, 0x8; xor eax, eax; pop rbx; pop rbp; ret; 
0x00000000041d3d: add esp, 0x90; pop rbx; pop rbp; pop r12; ret; 
0x000000001517ba: add esp, 0x90; pop rbx; ret; 
0x00000000041eb4: add esp, 0x98; pop rbp; pop r12; ret; 
0x00000000028e73: add esp, 0x98; ret; 
0x000000000422a3: add esp, 0xa0; pop rbx; pop rbp; pop r12; ret; 
0x0000000010df88: add esp, 0xa0; pop rbx; ret; 
0x000000000da636: add esp, 0xa8; pop rbp; pop r12; ret; 
0x00000000042948: add esp, 0xa8; ret; 
0x0000000003417f: add esp, 0xb8; mov eax, r8d; pop rbp; pop r12; ret; 
0x000000000e0400: add esp, 0xb8; pop rbx; pop rbp; ret; 
0x00000000050d48: add esp, 0xd8; ret; 
0x000000000cd170: add esp, 0xe0; mov eax, r8d; pop rbx; ret; 
0x000000000d9ac6: add esp, 0xe0; pop rbx; ret; 
0x0000000007e3cd: add esp, 0xe8; mov eax, r8d; pop rbx; pop rbp; ret; 
0x00000000165d89: add esp, [rax]; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165a89: add esp, [rbx]; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165789: add esp, [rsi]; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000116e0c: add fs:[rax], al; add [rbx-0x3f7ac7c0], cl; cmove eax, edx; ret; 
0x0000000009b6d8: add fs:[rax], eax; add [rax-0x75], cl; jg short 0x000000000009b728; mov rsi, rbp; call rax; 
0x00000000083d96: add gs:[rax], al; mov rax, [rsp]; mov esi, r12d; mov rdi, r14; call qword ptr [rax+0x18]; 
0x000000001350c3: add gs:[rbx+0x5d], bl; pop r12; ret; 
0x000000000453d6: add qword ptr [rax+0x460], 0x1; lea rdi, [rbp+0x988]; call qword ptr [rbp+0xf90]; 
0x0000000014175c: add qword ptr [rbx+0x22a8], 0x1; mov rdi, rbp; call qword ptr [rax+0x18]; 
0x00000000044dbc: add qword ptr [rip+0x1a0d3c], 0x1; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000003fb04: add qword ptr [rsi*2+0x548b44e7], 0x34c0881; push rdi; and [rcx+rcx*4-0x30], cl; ret; 
0x0000000003fb0e: add r10, [rdi+0x20]; mov rax, r10; ret; 
0x0000000003f2ec: add r10, r11; notrack jmp r10; 
0x0000000013735f: add r10, rdx; mov [r9], r10; ret; 
0x00000000087bf2: add r10b, r15b; jmp qword ptr [rsi+0x2e]; 
0x00000000167972: add r11d, r14d; movq [rdi], mm1; ret; 
0x0000000018a842: add r11d, r8d; nop [rax+rax]; lea rax, [rdi+0x2]; ret; 
0x00000000144155: add r13, rax; sub edx, eax; mov rsi, r13; call qword ptr [r15+0x40]; 
0x0000000014f671: add r13, rbx; call rbp; 
0x000000001443ac: add r13, rbx; sub edx, ebx; mov rsi, r13; call qword ptr [r14+0x40]; 
0x000000001443ab: add r13, rbx; sub edx, ebx; mov rsi, r13; call qword ptr [r14+0x40]; 
0x0000000014407b: add r13, rcx; sub edx, ecx; mov rsi, r13; call qword ptr [r15+0x40]; 
0x00000000072523: add r14, 0x48; shl rdx, 0x2; lea rcx, [rbx+rdx]; add rdx, r12; call qword ptr [r10+rax*8]; 
0x0000000013748d: add r14, r11; movq mm0, [rsi]; movups [rdi+rdx+0x8], xmm0; ret; 
0x00000000042d18: add r14, r15; mov rdx, rbp; mov rsi, r14; mov rdi, r12; call rbx; 
0x00000000167902: add r14b, r11b; movq [rdi], mm1; ret; 
0x00000000167892: add r14d, r11d; movq [rdi], mm1; ret; 
0x00000000042b8f: add r15, [rsp]; mov rsi, r15; call r14; 
0x00000000043ad4: add r15, r12; call rax; 
0x000000000ccb0f: add r15, r8; mov [rsp+0x88], r15; call r12; 
0x000000000b5b5c: add r8, 0x10; lea r11, [rip+0xf3659]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b430c: add r8, 0x10; lea r11, [rip+0xf4cc9]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000001412da: add r8, [0x0]; mov rcx, r15; call rbp; 
0x0000000018df9f: add r8, [r8]; add [rbp-0x73], cl; push rcx; dec byte ptr [rax-0x77]; ret far; 
0x000000001412d9: add r8, fs:[0x0]; mov rcx, r15; call rbp; 
0x000000000ff77d: add r8, r13; call r14; 
0x000000001846a7: add r8b, [r8]; lea rax, [rdi+0x2]; vzeroupper; ret; 
0x00000000182c17: add r8b, [r8]; vzeroupper; ret; 
0x0000000018a852: add r8b, r11b; nop [rax+rax]; lea rax, [rdi+0x3]; ret; 
0x0000000010f8a3: add r8b, r13b; cmpsb [rsi], [rdi]; adc eax, edi; jmp qword ptr [rcx+rax*2-0x75]; 
0x00000000107d15: add r8d, eax; cmp rdi, rsi; ja short 0x0000000000107d08; mov eax, r8d; ret; 
0x0000000005cb87: add r8d, eax; mov eax, r8d; ret; 
0x0000000018a862: add r8d, r11d; nop [rax+rax]; lea rax, [rdi+0x4]; ret; 
0x0000000015f93e: add r9, r11; notrack jmp r9; 
0x000000000599dc: add r9b, [r8-0x73]; add rcx, [rcx+0x39]; ret far; 
0x0000000013755c: add r9d, r8d; loopne 0x0000000000137564; shr rax, 0x4; and eax, 0x7f; ret; 
0x00000000162a27: add rax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162a28: add rax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000052480: add rax, 0x1; cmp byte ptr [rax+0x1], 0x0; jne short 0x0000000000052480; pop rbx; ret; 
0x000000000a4b40: add rax, 0x1; movsx edx, byte ptr [rdi+rax]; cmp edx, esi; je short 0x00000000000a4b40; ret; 
0x000000000cbaf0: add rax, 0x1; ret; 
0x0000000009f650: add rax, 0x1; test dl, dl; mov edx, 0x0; cmove rax, rdx; ret; 
0x00000000039009: add rax, 0x200; mov fs:[rdx], rax; ret; 
0x00000000182294: add rax, 0x20; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x0000000017e1d9: add rax, 0x20; add rax, rdi; vzeroupper; ret; 
0x000000001372b3: add rax, 0x2; mov [r8], edx; mov [r9], rax; mov eax, ecx; ret; 
0x000000000cbae7: add rax, 0x2; ret; 
0x000000001720c3: add rax, 0x2c5850f; add [rax], al; ret; 
0x00000000176474: add rax, 0x364850f; add [rax], al; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x000000000cbb00: add rax, 0x3; ret; 
0x000000001822b4: add rax, 0x40; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x0000000017e1f9: add rax, 0x40; add rax, rdi; vzeroupper; ret; 
0x00000000151274: add rax, 0x4; mov [rax-0x4], edx; mov [rdi+0x18], rax; mov eax, r8d; ret; 
0x000000000b90aa: add rax, 0x4; test edx, edx; jne short 0x00000000000b90a0; xor eax, eax; ret; 
0x00000000191b43: add rax, 0x5b050f00; ret; 
0x00000000182300: add rax, 0x60; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x0000000017e219: add rax, 0x60; add rax, rdi; vzeroupper; ret; 
0x000000000725a3: add rax, 0x63480000; or al, 0x8a; add rcx, rdx; notrack jmp rcx; 
0x000000000e09a0: add rax, 0x72f52011; cmp rdx, rax; jne short 0x00000000000e0a1d; mov eax, 0x7d00; ret; 
0x000000001125a8: add rax, 0x8; mov [rip+0xd51dd], rax; mov rax, r8; add rsp, 0x8; ret; 
0x00000000112578: add rax, 0x8; mov [rip+0xd520d], rax; mov rax, r8; ret; 
0x0000000014d0d5: add rax, 0xa0; pop rbx; ret; 
0x0000000014d1a5: add rax, 0xa8; pop rbx; ret; 
0x00000000191a87: add rax, 0xffffffffdb854800; jne short 0x0000000000191a70; pop rbx; ret; 
0x0000000002903c: add rax, [0x0]; ret; 
0x000000001594fa: add rax, [r11+0x8]; mov r14d, 0x1; mov [rbp+0x18], rax; lea rdi, [r13+0x988]; call qword ptr [r13+0xf90]; 
0x000000000cce54: add rax, [rdx+0x8]; lea rdx, [rip-0xdf]; cmove rax, rdx; add rsp, 0x58; ret; 
0x000000000ccf74: add rax, [rdx+0x8]; lea rdx, [rip-0xef]; cmove rax, rdx; add rsp, 0x58; ret; 
0x00000000091fd7: add rax, [rip+0x154852]; mov rax, [rax+0x8]; test rax, rax; je short 0x0000000000091fe9; call rax; 
0x00000000091f97: add rax, [rip+0x154892]; mov rax, [rax+0x10]; test rax, rax; je short 0x0000000000091fa9; call rax; 
0x00000000091f1f: add rax, [rip+0x15490a]; mov rax, [rax]; test rax, rax; je short 0x0000000000091f30; call rax; 
0x0000000002903b: add rax, fs:[0x0]; ret; 
0x0000000008c769: add rax, r10; notrack jmp rax; 
0x000000001055fe: add rax, r12; notrack jmp rax; 
0x0000000017e700: add rax, r8; vzeroupper; ret; 
0x00000000103d79: add rax, rbx; notrack jmp rax; 
0x00000000181e27: add rax, rcx; add rax, rdi; vzeroupper; ret; 
0x0000000006165c: add rax, rcx; notrack jmp rax; 
0x000000000a8238: add rax, rcx; ret; 
0x0000000017d355: add rax, rcx; sub rax, rdi; ret; 
0x00000000186b3c: add rax, rcx; sub rax, rdx; shr rax, 0x2; vzeroupper; ret; 
0x000000001821cc: add rax, rcx; sub rax, rdx; vzeroupper; ret; 
0x0000000017e055: add rax, rcx; vzeroupper; ret; 
0x0000000017e6fd: add rax, rdi; add rax, r8; vzeroupper; ret; 
0x000000000a8235: add rax, rdi; add rax, rcx; ret; 
0x000000001821c9: add rax, rdi; add rax, rcx; sub rax, rdx; vzeroupper; ret; 
0x0000000017e052: add rax, rdi; add rax, rcx; vzeroupper; ret; 
0x000000000a8a69: add rax, rdi; add rax, rsi; ret; 
0x000000000a4cd5: add rax, rdi; mov [rdi], dx; movzx edx, byte ptr [rsp-0x6]; mov [rdi+0x2], dl; ret; 
0x000000000a4cf4: add rax, rdi; mov [rdi], edx; movzx edx, byte ptr [rsp-0xc]; mov [rdi+0x4], dl; ret; 
0x000000000a4d0c: add rax, rdi; mov [rdi], edx; movzx edx, word ptr [rsp+0xc]; mov [rdi+0x4], dx; ret; 
0x00000000062a1a: add rax, rdi; notrack jmp rax; 
0x000000000a897b: add rax, rdi; ret; 
0x000000000a4ca8: add rax, rdi; ret; 
0x00000000186bf4: add rax, rdi; sub rax, rdx; shr rax, 0x2; vzeroupper; ret; 
0x00000000182284: add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x0000000017e1c8: add rax, rdi; vzeroupper; ret; 
0x00000000072c38: add rax, rdx; jmp rax; 
0x000000000cd26d: add rax, rdx; mov [rdi+0x20], rax; ret; 
0x00000000028883: add rax, rdx; notrack jmp rax; 
0x0000000007cd6a: add rax, rdx; ret; 
0x000000000ae045: add rax, rdx; sub rax, rdi; ret; 
0x000000000cb84a: add rax, rdx; sub rax, rdi; shr rax, 0x2; ret; 
0x0000000006a992: add rax, rsi; notrack jmp rax; 
0x000000000a8a6c: add rax, rsi; ret; 
0x000000000ff772: add rbx, [0x0]; mov r9, rbx; add r8, r13; call r14; 
0x000000000ff771: add rbx, fs:[0x0]; mov r9, rbx; add r8, r13; call r14; 
0x00000000144845: add rbx, rax; sub edx, eax; mov rsi, rbx; call qword ptr [rbp+0x40]; 
0x0000000018a571: add rcx, 0x100; cmp rdx, rcx; jne short 0x000000000018a556; vzeroupper; ret; 
0x000000000b831a: add rcx, 0x40; cmp rdx, rcx; jne short 0x00000000000b8307; rep ret; 
0x000000001856ae: add rcx, 0x80; cmp rdx, rcx; jne short 0x000000000018569b; vzeroupper; ret; 
0x00000000028d56: add rcx, 0xa08; cmp [rsp+0x18], rcx; cmovne rdi, r14; call rdx; 
0x000000000599e0: add rcx, [rcx+0x39]; ret far; 
0x00000000176426: add rcx, [rdi]; test [rdx-0x7ffffffd], esi; cmp [rcx], al; sbb rax, 0xffffffffffffffff; ret; 
0x00000000187015: add rcx, r11; notrack jmp rcx; 
0x000000000f9269: add rcx, r8; notrack jmp rcx; 
0x0000000018dbb0: add rcx, r9; notrack jmp rcx; 
0x0000000007b17a: add rcx, rbx; mov dword ptr [rsp+0x10], 0x1; mov rbx, rsi; mov dword ptr [rsp+0x28], 0x20; jmp rcx; 
0x0000000007b212: add rcx, rbx; mov dword ptr [rsp+0x48], 0x1; mov rbx, rsi; xor r12d, r12d; jmp rcx; 
0x0000000007b3bf: add rcx, rbx; mov rbx, [rsp+0x68]; jmp rcx; 
0x0000000007b264: add rcx, rbx; mov rbx, rdx; mov edx, 0x1; jmp rcx; 
0x0000000007a694: add rcx, rbx; mov rbx, rdx; xor edx, edx; jmp rcx; 
0x0000000007b0a6: add rcx, rbx; mov rbx, rsi; jmp rcx; 
0x0000000007b1ca: add rcx, rbx; mov rbx, rsi; mov r9d, 0x1; jmp rcx; 
0x0000000018dd57: add rcx, rbx; notrack jmp rcx; 
0x0000000007b334: add rcx, rdi; jmp rcx; 
0x000000000364c0: add rcx, rdi; notrack jmp rcx; 
0x000000000725ab: add rcx, rdx; notrack jmp rcx; 
0x0000000007ba7d: add rcx, rsi; jmp rcx; 
0x000000000b8493: add rcx, rsi; notrack jmp rcx; 
0x00000000147a10: add rdi, 0x10; jmp rcx; 
0x000000000b6d9c: add rdi, 0x10; lea r11, [rip+0xf24dd]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b640c: add rdi, 0x10; lea r11, [rip+0xf2ded]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b5b46: add rdi, 0x10; lea r11, [rip+0xf366f]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b5b26: add rdi, 0x10; lea r11, [rip+0xf368f]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b473c: add rdi, 0x10; lea r11, [rip+0xf48dd]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b42f6: add rdi, 0x10; lea r11, [rip+0xf4cdf]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b42d6: add rdi, 0x10; lea r11, [rip+0xf4cff]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b30fc: add rdi, 0x10; lea r11, [rip+0xf5d41]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000e3b8d: add rdi, 0x1; test al, al; jne short 0x00000000000e3b41; xor eax, eax; ret; 
0x0000000015a119: add rdi, 0x1c; mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x000000000b6dd1: add rdi, 0x20; lea r11, [rip+0xf24a8]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6441: add rdi, 0x20; lea r11, [rip+0xf2db8]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b4771: add rdi, 0x20; lea r11, [rip+0xf48a8]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b3131: add rdi, 0x20; lea r11, [rip+0xf5d0c]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000014374e: add rdi, 0x23b0; pop rbp; jmp rcx; 
0x000000000b6c7f: add rdi, 0x30; lea r11, [rip+0xf25fa]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b630e: add rdi, 0x30; lea r11, [rip+0xf2eeb]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b463e: add rdi, 0x30; lea r11, [rip+0xf49db]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b2ffe: add rdi, 0x30; lea r11, [rip+0xf5e3f]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000014a517: add rdi, 0x58; jmp rcx; 
0x00000000149be7: add rdi, 0x68; jmp rcx; 
0x00000000146dfa: add rdi, 0xc8; jmp rcx; 
0x000000000464a1: add rdi, rax; cmp rdi, r8; jb short 0x0000000000046485; xor eax, eax; ret; 
0x00000000190d7f: add rdi, rbp; call r12; 
0x0000000015f93b: add rdi, rdx; add r9, r11; notrack jmp r9; 
0x00000000189090: add rdi, rdx; lea r11, [rip+0x2e5f6]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000189016: add rdi, rdx; lea r11, [rip+0x2e670]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000188f87: add rdi, rdx; lea r11, [rip+0x2e6ff]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000188d7c: add rdi, rdx; lea r11, [rip+0x2e90a]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000188c4a: add rdi, rdx; lea r11, [rip+0x2ea3c]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000188b84: add rdi, rdx; lea r11, [rip+0x2eb02]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000188b06: add rdi, rdx; lea r11, [rip+0x2eb80]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000188a71: add rdi, rdx; lea r11, [rip+0x2ec15]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000188874: add rdi, rdx; lea r11, [rip+0x2ee12]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000188742: add rdi, rdx; lea r11, [rip+0x2ef44]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000188645: add rdi, rdx; lea r11, [rip+0x2f041]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000187a60: add rdi, rdx; lea r11, [rip+0x2fae6]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x000000001879e6: add rdi, rdx; lea r11, [rip+0x2fb60]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000187957: add rdi, rdx; lea r11, [rip+0x2fbef]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018774c: add rdi, rdx; lea r11, [rip+0x2fdfa]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018761a: add rdi, rdx; lea r11, [rip+0x2ff2c]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000187554: add rdi, rdx; lea r11, [rip+0x2fff2]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x000000001874d6: add rdi, rdx; lea r11, [rip+0x30070]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000187441: add rdi, rdx; lea r11, [rip+0x30105]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000187244: add rdi, rdx; lea r11, [rip+0x30302]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000187112: add rdi, rdx; lea r11, [rip+0x30434]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000187007: add rdi, rdx; lea r11, [rip+0x3053f]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x000000001693eb: add rdi, rdx; lea r11, [rip+0x4ee9b]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000167b46: add rdi, rdx; lea r11, [rip+0x50740]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001679df: add rdi, rdx; lea r11, [rip+0x508a7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001668d7: add rdi, rdx; lea r11, [rip+0x514af]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000164cb9: add rdi, rdx; lea r11, [rip+0x52ccd]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165046: add rdi, rdx; lea r11, [rip+0x52d40]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000164ec8: add rdi, rdx; lea r11, [rip+0x52ebe]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016250a: add rdi, rdx; lea r11, [rip+0x5547c]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162445: add rdi, rdx; lea r11, [rip+0x55541]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000015fb2a: add rdi, rdx; lea r11, [rip+0x57c9c]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000015fa65: add rdi, rdx; lea r11, [rip+0x57d61]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000008fb61: add rdx, 0x60; mov rax, [rdi]; mov [rdx], rax; ret; 
0x0000000007252f: add rdx, r12; call qword ptr [r10+rax*8]; 
0x000000000f50bd: add rdx, r13; notrack jmp rdx; 
0x00000000054b91: add rdx, r8; mov rax, rdx; pop rbx; ret; 
0x000000000a4e2a: add rdx, r8; notrack jmp rdx; 
0x00000000050e8b: add rdx, r9; notrack jmp rdx; 
0x0000000011aed4: add rdx, rax; cmp rcx, rdx; mov edx, 0x0; cmovb rax, rdx; ret; 
0x0000000017e591: add rdx, rax; jl 0x000000000017e680; add rax, rdi; vzeroupper; ret; 
0x000000000a8976: add rdx, rax; jl short 0x00000000000a89e0; add rax, rdi; ret; 
0x000000000a8987: add rdx, rax; jl short 0x00000000000a89e0; lea rax, [rdi+rax+0x10]; ret; 
0x000000000a89a7: add rdx, rax; jl short 0x00000000000a89e0; lea rax, [rdi+rax+0x20]; ret; 
0x000000000a89c7: add rdx, rax; jl short 0x00000000000a89e0; lea rax, [rdi+rax+0x30]; ret; 
0x0000000007cddf: add rdx, rcx; notrack jmp rdx; 
0x0000000005328f: add rdx, rdi; cmp esi, 0x2f; notrack jmp rdx; 
0x000000000a4d6d: add rdx, rdi; notrack jmp rdx; 
0x0000000003f006: add rdx, rsi; notrack jmp rdx; 
0x00000000148c58: add rsi, 0x38; jmp qword ptr [rax+0x18]; 
0x000000001511b9: add rsi, r8; mov [rdi+0x18], rsi; mov rax, r8; ret; 
0x00000000110eed: add rsi, rax; call far fword ptr [rax+r8*4+0x39]; 
0x00000000143ebe: add rsi, rax; cmp rsi, [rdx+0x28]; ja short 0x0000000000143eb0; mov [rdx+0x20], rsi; ret; 
0x000000000759df: add rsi, rbx; mov byte ptr [rsp+0x38], 0x20; mov rbx, rdi; mov dword ptr [rsp+0x28], 0x1; jmp rsi; 
0x00000000075a91: add rsi, rbx; mov rbx, [rsp+0x80]; jmp rsi; 
0x00000000075502: add rsi, rbx; mov rbx, rcx; mov ecx, 0x1; jmp rsi; 
0x00000000074b9a: add rsi, rbx; mov rbx, rcx; xor ecx, ecx; jmp rsi; 
0x000000000755b2: add rsi, rbx; mov rbx, rdi; jmp rsi; 
0x00000000075b37: add rsi, rbx; mov rbx, rdi; mov r13d, 0x1; jmp rsi; 
0x000000000758f3: add rsi, rbx; mov rbx, rdx; mov edx, 0x1; jmp rsi; 
0x000000000758a2: add rsi, rbx; mov rbx, rdx; xor edx, edx; jmp rsi; 
0x000000000b6f09: add rsi, rcx; lea r11, [rip+0xf23f1]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6ee9: add rsi, rcx; lea r11, [rip+0xf2411]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6ec0: add rsi, rcx; lea r11, [rip+0xf243a]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b5049: add rsi, rcx; lea r11, [rip+0xf40dd]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b5029: add rsi, rcx; lea r11, [rip+0xf40fd]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b5000: add rsi, rcx; lea r11, [rip+0xf4126]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b3969: add rsi, rcx; lea r11, [rip+0xf55dd]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b3949: add rsi, rcx; lea r11, [rip+0xf55fd]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b3920: add rsi, rcx; lea r11, [rip+0xf5626]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000075685: add rsi, rdi; jmp rsi; 
0x0000000007d78a: add rsi, rdi; notrack jmp rsi; 
0x0000000015f938: add rsi, rdx; add rdi, rdx; add r9, r11; notrack jmp r9; 
0x00000000169183: add rsi, rdx; lea r11, [rip+0x4f103]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169003: add rsi, rdx; lea r11, [rip+0x4f283]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168e83: add rsi, rdx; lea r11, [rip+0x4f403]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168d04: add rsi, rdx; lea r11, [rip+0x4f582]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168b83: add rsi, rdx; lea r11, [rip+0x4f703]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168a03: add rsi, rdx; lea r11, [rip+0x4f883]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168883: add rsi, rdx; lea r11, [rip+0x4fa03]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168703: add rsi, rdx; lea r11, [rip+0x4fb83]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168583: add rsi, rdx; lea r11, [rip+0x4fd03]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168403: add rsi, rdx; lea r11, [rip+0x4fe83]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168283: add rsi, rdx; lea r11, [rip+0x50003]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168103: add rsi, rdx; lea r11, [rip+0x50183]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000167f83: add rsi, rdx; lea r11, [rip+0x50303]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000167e03: add rsi, rdx; lea r11, [rip+0x50483]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000167c83: add rsi, rdx; lea r11, [rip+0x50603]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166683: add rsi, rdx; lea r11, [rip+0x51703]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166503: add rsi, rdx; lea r11, [rip+0x51883]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166383: add rsi, rdx; lea r11, [rip+0x51a03]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166204: add rsi, rdx; lea r11, [rip+0x51b82]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166083: add rsi, rdx; lea r11, [rip+0x51d03]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165f03: add rsi, rdx; lea r11, [rip+0x51e83]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165d83: add rsi, rdx; lea r11, [rip+0x52003]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165c03: add rsi, rdx; lea r11, [rip+0x52183]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165a83: add rsi, rdx; lea r11, [rip+0x52303]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165903: add rsi, rdx; lea r11, [rip+0x52483]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165783: add rsi, rdx; lea r11, [rip+0x52603]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165603: add rsi, rdx; lea r11, [rip+0x52783]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165483: add rsi, rdx; lea r11, [rip+0x52903]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165303: add rsi, rdx; lea r11, [rip+0x52a83]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165183: add rsi, rdx; lea r11, [rip+0x52c03]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000163b31: add rsi, rdx; lea r11, [rip+0x53e55]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001639e1: add rsi, rdx; lea r11, [rip+0x53fa5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000163891: add rsi, rdx; lea r11, [rip+0x540f5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000163741: add rsi, rdx; lea r11, [rip+0x54245]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001635f1: add rsi, rdx; lea r11, [rip+0x54395]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001634a1: add rsi, rdx; lea r11, [rip+0x544e5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000163351: add rsi, rdx; lea r11, [rip+0x54635]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001630b1: add rsi, rdx; lea r11, [rip+0x548d5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162f61: add rsi, rdx; lea r11, [rip+0x54a25]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162e11: add rsi, rdx; lea r11, [rip+0x54b75]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162cc1: add rsi, rdx; lea r11, [rip+0x54cc5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162b71: add rsi, rdx; lea r11, [rip+0x54e15]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162a21: add rsi, rdx; lea r11, [rip+0x54f65]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001628d1: add rsi, rdx; lea r11, [rip+0x550b5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162609: add rsi, rdx; lea r11, [rip+0x5537d]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000161151: add rsi, rdx; lea r11, [rip+0x56675]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000161001: add rsi, rdx; lea r11, [rip+0x567c5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160eb1: add rsi, rdx; lea r11, [rip+0x56915]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160d61: add rsi, rdx; lea r11, [rip+0x56a65]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160c11: add rsi, rdx; lea r11, [rip+0x56bb5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160ac1: add rsi, rdx; lea r11, [rip+0x56d05]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160971: add rsi, rdx; lea r11, [rip+0x56e55]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001606d1: add rsi, rdx; lea r11, [rip+0x570f5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160581: add rsi, rdx; lea r11, [rip+0x57245]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160431: add rsi, rdx; lea r11, [rip+0x57395]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001602e1: add rsi, rdx; lea r11, [rip+0x574e5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160191: add rsi, rdx; lea r11, [rip+0x57635]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160041: add rsi, rdx; lea r11, [rip+0x57785]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000015fef1: add rsi, rdx; lea r11, [rip+0x578d5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000015fc29: add rsi, rdx; lea r11, [rip+0x57b9d]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000b7c1c: add rsp, 0x100; sub rax, rdx; ret; 
0x000000000b7ccc: add rsp, 0x100; xor edx, edx; or cl, cl; cmove rax, rdx; ret; 
0x00000000060985: add rsp, 0x1010; pop rbp; ret; 
0x00000000060790: add rsp, 0x1018; mov rax, r12; pop rbp; pop r12; ret; 
0x0000000009a582: add rsp, 0x10; mov eax, r12d; pop r12; ret; 
0x0000000014c155: add rsp, 0x10; mov eax, r8d; pop r12; ret; 
0x00000000156912: add rsp, 0x10; mov eax, r8d; pop rbp; ret; 
0x000000000969f7: add rsp, 0x10; mov rax, r8; pop rbp; ret; 
0x00000000096807: add rsp, 0x10; mov rax, r8; pop rbx; ret; 
0x0000000008a509: add rsp, 0x10; movzx eax, al; pop rbx; neg eax; ret; 
0x0000000013f78f: add rsp, 0x10; pop r12; ret; 
0x0000000014faca: add rsp, 0x10; pop rbp; jmp rax; 
0x00000000034987: add rsp, 0x10; pop rbp; pop r12; pop r13; ret; 
0x00000000093150: add rsp, 0x10; pop rbp; ret; 
0x0000000008dfb4: add rsp, 0x10; pop rbx; jmp rax; 
0x000000000606e6: add rsp, 0x10; pop rbx; pop r12; pop r13; ret; 
0x0000000008384e: add rsp, 0x10; pop rbx; pop rbp; pop r12; ret; 
0x00000000041164: add rsp, 0x10; pop rbx; ret; 
0x00000000144283: add rsp, 0x10; pop rbx; ret; 
0x0000000015a4de: add rsp, 0x110; mov eax, r12d; pop r12; ret; 
0x0000000014c3d5: add rsp, 0x110; pop rbx; pop rbp; pop r12; ret; 
0x000000000418e1: add rsp, 0x118; ret; 
0x00000000109fb6: add rsp, 0x130; pop rbp; ret; 
0x000000000420d8: add rsp, 0x140; mov eax, r8d; pop rbx; ret; 
0x000000000417aa: add rsp, 0x148; ret; 
0x00000000091c73: add rsp, 0x18; and eax, 0xc; pop rbx; pop rbp; ret; 
0x00000000097c0d: add rsp, 0x18; jmp rax; 
0x00000000141d25: add rsp, 0x18; mov eax, r12d; pop rbx; pop r12; ret; 
0x000000001379ba: add rsp, 0x18; mov eax, r8d; pop rbx; pop rbp; ret; 
0x0000000009a01a: add rsp, 0x18; mov rax, r8; pop rbx; pop r12; ret; 
0x00000000060f69: add rsp, 0x18; movzx eax, al; neg eax; ret; 
0x00000000045871: add rsp, 0x18; pop rbp; mov rax, r12; pop r12; ret; 
0x000000001422fe: add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000412c5: add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000394aa: add rsp, 0x18; ret; 
0x00000000156f02: add rsp, 0x190; mov rax, r8; pop rbp; ret; 
0x0000000010fe32: add rsp, 0x190; pop rbx; pop rbp; pop r12; ret; 
0x000000001081ad: add rsp, 0x1a0; mov eax, r8d; pop rbx; ret; 
0x00000000060452: add rsp, 0x1d0; pop rbp; pop r12; pop r13; ret; 
0x00000000132df6: add rsp, 0x20; mov eax, r8d; pop rbp; ret; 
0x000000000dbcee: add rsp, 0x20; mov eax, r8d; pop rbx; ret; 
0x00000000041380: add rsp, 0x20; movdqa xmm0, xmm2; pop rbp; ret; 
0x00000000041411: add rsp, 0x20; pop rbp; ret; 
0x0000000008e75e: add rsp, 0x20; pop rbx; jmp rax; 
0x000000000342ac: add rsp, 0x20; pop rbx; pop rbp; pop r12; ret; 
0x000000000c6115: add rsp, 0x20; pop rbx; ret; 
0x000000000d0318: add rsp, 0x20; xor eax, eax; pop rbx; ret; 
0x0000000008ec60: add rsp, 0x20; xor edx, edx; pop rbx; jmp rax; 
0x00000000042a7a: add rsp, 0x240; pop rbx; pop rbp; pop r12; ret; 
0x0000000014c8e8: add rsp, 0x28; mov eax, r12d; pop rbp; pop r12; ret; 
0x0000000006086a: add rsp, 0x28; mov rax, r12; pop rbx; pop r12; ret; 
0x0000000014c294: add rsp, 0x28; pop rbx; pop r12; ret; 
0x000000000590cc: add rsp, 0x28; pop rbx; pop rbp; ret; 
0x000000000455f5: add rsp, 0x28; ret; 
0x00000000029018: add rsp, 0x28; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000834e7: add rsp, 0x2c0; pop rbp; pop r12; pop r13; ret; 
0x00000000190b17: add rsp, 0x30; mov rax, r12; pop r12; ret; 
0x0000000010dd4c: add rsp, 0x30; pop rbp; ret; 
0x0000000008d87b: add rsp, 0x30; pop rbx; pop rbp; pop r12; ret; 
0x000000001092ed: add rsp, 0x30; pop rbx; ret; 
0x00000000159cdb: add rsp, 0x38; jmp rax; 
0x000000001906f5: add rsp, 0x38; pop rbx; pop r14; ret; 
0x000000000290c7: add rsp, 0x38; pop rbx; pop rbp; ret; 
0x00000000059a35: add rsp, 0x38; ret; 
0x0000000010d72b: add rsp, 0x40; pop r12; ret; 
0x0000000009666d: add rsp, 0x40; pop rbp; ret; 
0x00000000148d48: add rsp, 0x40; pop rbx; pop rbp; pop r12; ret; 
0x00000000042188: add rsp, 0x40; pop rbx; ret; 
0x0000000011ca3b: add rsp, 0x40; ret; 
0x000000000604e2: add rsp, 0x410; pop rbp; pop r12; pop r13; ret; 
0x0000000011603d: add rsp, 0x418; ret; 
0x000000000597e5: add rsp, 0x450; pop rbp; ret; 
0x0000000014bd63: add rsp, 0x48; pop rbx; pop rbp; ret; 
0x0000000008a3f8: add rsp, 0x48; ret; 
0x000000001486fe: add rsp, 0x50; pop rbx; pop rbp; pop r12; ret; 
0x000000001562f0: add rsp, 0x520; mov rax, r12; pop r12; ret; 
0x00000000138cc5: add rsp, 0x58; pop rbx; pop rbp; ret; 
0x000000000cce63: add rsp, 0x58; ret; 
0x0000000010e88e: add rsp, 0x60; mov eax, r11d; pop rbx; ret; 
0x0000000010ee17: add rsp, 0x60; mov rax, r12; pop r12; ret; 
0x0000000010fff7: add rsp, 0x60; pop rbp; ret; 
0x00000000159bf0: add rsp, 0x68; jmp rax; 
0x00000000108a2b: add rsp, 0x68; pop rbp; pop r12; ret; 
0x000000000fbb64: add rsp, 0x68; pop rbx; pop rbp; ret; 
0x000000001091ac: add rsp, 0x68; ret; 
0x000000000b9552: add rsp, 0x70; pop rbx; pop rbp; pop r12; ret; 
0x00000000108ba6: add rsp, 0x78; ret; 
0x0000000015822e: add rsp, 0x88; mov eax, r12d; pop rbp; pop r12; ret; 
0x00000000116bac: add rsp, 0x88; mov rax, r8; pop rbx; pop rbp; ret; 
0x000000000eab94: add rsp, 0x8; add eax, eax; pop rbx; pop rbp; ret; 
0x00000000137240: add rsp, 0x8; lea eax, [rbx+rbp]; pop rbx; pop rbp; ret; 
0x000000001414be: add rsp, 0x8; lea rax, [rip+0xa77d7]; ret; 
0x000000001415e0: add rsp, 0x8; mov eax, 0x10; pop rbx; pop rbp; ret; 
0x0000000014f860: add rsp, 0x8; mov eax, 0x1; pop rbp; pop r12; ret; 
0x0000000007fc36: add rsp, 0x8; mov eax, 0x1; pop rbx; pop rbp; ret; 
0x0000000013188a: add rsp, 0x8; mov eax, 0xa; pop rbx; pop rbp; ret; 
0x0000000007fc58: add rsp, 0x8; mov eax, 0xffffffff; pop rbx; pop rbp; ret; 
0x000000000866eb: add rsp, 0x8; mov eax, r12d; pop rbp; pop r12; ret; 
0x00000000059b10: add rsp, 0x8; mov eax, r12d; pop rbx; pop r12; ret; 
0x0000000007ed93: add rsp, 0x8; mov eax, r8d; pop rbx; pop rbp; ret; 
0x000000001122ae: add rsp, 0x8; mov eax, r8d; ret; 
0x000000000fd338: add rsp, 0x8; mov eax, r9d; ret; 
0x000000000b8c42: add rsp, 0x8; mov rax, r12; pop rbp; pop r12; ret; 
0x0000000009d7d0: add rsp, 0x8; mov rax, r12; pop rbx; pop r12; ret; 
0x0000000004594e: add rsp, 0x8; mov rax, r8; pop rbx; pop rbp; ret; 
0x000000001502a2: add rsp, 0x8; mov rdi, rbp; pop rbp; pop r12; jmp rax; 
0x0000000008406c: add rsp, 0x8; mov rdi, rbp; pop rbx; pop rbp; jmp rax; 
0x00000000029308: add rsp, 0x8; movzx eax, al; neg eax; ret; 
0x0000000014382f: add rsp, 0x8; movzx eax, al; pop rbp; pop r12; ret; 
0x00000000144ce6: add rsp, 0x8; movzx eax, al; pop rbx; pop rbp; ret; 
0x000000000503e5: add rsp, 0x8; movzx eax, al; ret; 
0x0000000013c03d: add rsp, 0x8; movzx eax, ax; ret; 
0x000000001519a5: add rsp, 0x8; not eax; shr eax, 0x1f; ret; 
0x0000000014f855: add rsp, 0x8; pop rbp; pop r12; jmp rax; 
0x00000000081d69: add rsp, 0x8; pop rbp; pop r12; ret; 
0x00000000143706: add rsp, 0x8; pop rbx; pop rbp; jmp rcx; 
0x00000000087dd6: add rsp, 0x8; pop rbx; pop rbp; mov eax, r8d; ret; 
0x00000000029a38: add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000125351: add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000002bba8: add rsp, 0x8; ret; 
0x0000000015c844: add rsp, 0x8; sar eax, 0x1f; ret; 
0x0000000012566b: add rsp, 0x8; xor eax, eax; pop rbp; pop r12; ret; 
0x0000000008fbf2: add rsp, 0x8; xor eax, eax; pop rbx; pop rbp; ret; 
0x00000000041d3c: add rsp, 0x90; pop rbx; pop rbp; pop r12; ret; 
0x0000000013debc: add rsp, 0x90; pop rbx; pop rbp; pop r12; ret; 
0x000000001517b9: add rsp, 0x90; pop rbx; ret; 
0x00000000041eb3: add rsp, 0x98; pop rbp; pop r12; ret; 
0x00000000028e72: add rsp, 0x98; ret; 
0x000000000422a2: add rsp, 0xa0; pop rbx; pop rbp; pop r12; ret; 
0x0000000010df87: add rsp, 0xa0; pop rbx; ret; 
0x000000000da635: add rsp, 0xa8; pop rbp; pop r12; ret; 
0x00000000042947: add rsp, 0xa8; ret; 
0x0000000003417e: add rsp, 0xb8; mov eax, r8d; pop rbp; pop r12; ret; 
0x000000000e03ff: add rsp, 0xb8; pop rbx; pop rbp; ret; 
0x00000000050d47: add rsp, 0xd8; ret; 
0x000000000cd16f: add rsp, 0xe0; mov eax, r8d; pop rbx; ret; 
0x000000000d9ac5: add rsp, 0xe0; pop rbx; ret; 
0x0000000007e3cc: add rsp, 0xe8; mov eax, r8d; pop rbx; pop rbp; ret; 
0x000000000a4936: add sil, al; inc dword ptr [rax]; mov [rdi], rdx; ret; 
0x0000000011c0cb: add word ptr [rax], 0x1; ret; 
0x0000000011bdf5: add word ptr [rdx+rax*2], 0x1; ret; 
0x00000000040a5b: addps xmm0, xmm0; mov [rdi], ecx; ret; 
0x00000000040acf: addps xmm0, xmm0; ret; 
0x000000000409e1: addps xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x0000000015fed1: addr32 loopne 0x000000000015fee3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000160021: addr32 loopne 0x0000000000160033; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000160171: addr32 loopne 0x0000000000160183; sub [rdi-0x10], ebp; notrack jmp r9; 
0x000000001602c1: addr32 loopne 0x00000000001602d3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000160411: addr32 loopne 0x0000000000160423; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000160561: addr32 loopne 0x0000000000160573; sub [rdi-0x10], ebp; notrack jmp r9; 
0x000000001606b1: addr32 loopne 0x00000000001606c3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x000000001607ff: addr32 loopne 0x0000000000160811; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000160951: addr32 loopne 0x0000000000160963; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000160aa1: addr32 loopne 0x0000000000160ab3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000160bf1: addr32 loopne 0x0000000000160c03; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000160d41: addr32 loopne 0x0000000000160d53; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000160e91: addr32 loopne 0x0000000000160ea3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000160fe1: addr32 loopne 0x0000000000160ff3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000161131: addr32 loopne 0x0000000000161143; sub [rdi-0x10], ebp; notrack jmp r9; 
0x000000001628b1: addr32 loopne 0x00000000001628c3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000162a01: addr32 loopne 0x0000000000162a13; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000162b51: addr32 loopne 0x0000000000162b63; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000162ca1: addr32 loopne 0x0000000000162cb3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000162df1: addr32 loopne 0x0000000000162e03; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000162f41: addr32 loopne 0x0000000000162f53; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000163091: addr32 loopne 0x00000000001630a3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x000000001631df: addr32 loopne 0x00000000001631f1; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000163331: addr32 loopne 0x0000000000163343; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000163481: addr32 loopne 0x0000000000163493; sub [rdi-0x10], ebp; notrack jmp r9; 
0x000000001635d1: addr32 loopne 0x00000000001635e3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000163721: addr32 loopne 0x0000000000163733; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000163871: addr32 loopne 0x0000000000163883; sub [rdi-0x10], ebp; notrack jmp r9; 
0x000000001639c1: addr32 loopne 0x00000000001639d3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000163b11: addr32 loopne 0x0000000000163b23; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000040a5a: addsd xmm0, xmm0; mov [rdi], ecx; ret; 
0x00000000040ace: addsd xmm0, xmm0; ret; 
0x000000000409e0: addsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x00000000040d30: addss xmm0, xmm0; ret; 
0x00000000141751: and [r11+0x22c093], cl; add [rcx+rcx*4-0xa], cl; add qword ptr [rbx+0x22a8], 0x1; mov rdi, rbp; call qword ptr [rax+0x18]; 
0x00000000085fa9: and [r11+rcx*4+0x6d], r9b; sbb [rax-0x77], cl; ret far; 
0x0000000010dea4: and [r13-0x2e], r14b; mov rax, [rsi+0x28]; cmp [rdi+0x28], rax; sete al; ret; 
0x000000000a8921: and [r14+0xf], r12b; xlat [rbx]; rol dword ptr [rbp+0x317575c0], 0xc0; ret; 
0x00000000106e43: and [r15], r9b; adc [rdi+0x30], eax; movups [rdi+0x40], xmm0; ret; 
0x00000000085fd7: and [r8+0x1], r9b; ret; 
0x00000000117663: and [r8+0x2], dil; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000001418b4: and [r8-0x75], cl; cmp [rax-0x7b], cl; shl byte ptr [rbp+rax+0x48], 0x89; out dx, eax; call rax; 
0x000000001418a4: and [r8-0x77], cl; out dx, eax; call qword ptr [rax+0x20]; 
0x000000001416a6: and [r8-0x77], cl; out dx, eax; lea r15, [rsp+0x50]; call qword ptr [rax+0x20]; 
0x000000000369f7: and [r8-0x77], r9b; std; test rax, rax; je short 0x0000000000036a03; call rax; 
0x000000000b75d6: and [r8], r14b; in eax, dx; mov [rdi+0x21], ch; ret; 
0x00000000141662: and [r9+r9*4-0x12], cl; mov rdi, rbp; call qword ptr [rax+0x8]; 
0x0000000008df06: and [r9], sil; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x5d], bl; ret; 
0x0000000014173e: and [r9], sil; test byte ptr [rax-0x77], 0xef; mov dword ptr [rbx+0x18], 0x0; call qword ptr [rax+0x28]; 
0x000000001416bf: and [r9], sil; test byte ptr [rax-0x77], 0xef; mov dword ptr [rbx+0x18], 0x1; call qword ptr [rax+0x28]; 
0x00000000110035: and [rax+0x10e], bh; mov rsi, [rsp+0x18]; mov edi, [rsp+0x14]; syscall; 
0x0000000014a5c4: and [rax+0x1], bh; movups [r8], xmm3; ret; 
0x00000000182297: and [rax+0x1], cl; clc; sub rax, rdx; vzeroupper; ret; 
0x0000000017e1dc: and [rax+0x1], cl; clc; vzeroupper; ret; 
0x00000000085fd8: and [rax+0x1], cl; ret; 
0x00000000118ff1: and [rax+0x21], cl; clc; or rax, rsi; ret; 
0x0000000007cdd2: and [rax+0x287729fa], al; movzx edx, dl; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x00000000117664: and [rax+0x2], bh; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000121715: and [rax+0x411f2444], cl; call qword ptr [rsp+0x28]; 
0x0000000010e825: and [rax+0x44232444], ecx; mov eax, eax; movups [rsp+0x11], xmm0; syscall; 
0x00000000110886: and [rax+0x65], bh; syscall; 
0x0000000009d735: and [rax+rax], ecx; lea rdx, [rip+0xc7771]; cmovne rax, rdx; ret; 
0x00000000190d09: and [rax+rdx-0xd], dh; movups xmm0, [rip+0x266bc]; divss xmm0, [rip+0x279c8]; ret; 
0x0000000008ab92: and [rax-0x1], bh; pop rbx; ret; 
0x000000000cc10f: and [rax-0x73], cl; add eax, 0x11aee9; add rsp, 0x8; ret; 
0x000000000b3e15: and [rax-0x73], cl; jg short 0x00000000000b3e3a; jne 0x00000000000b4270; ret; 
0x000000000b55a9: and [rax-0x73], cl; jg short 0x00000000000b55ce; jne 0x00000000000b5ac0; ret; 
0x000000000f27f5: and [rax-0x75], cl; add cl, [rax-0x77]; ret; 
0x0000000002e0e3: and [rax-0x75], cl; and al, 0x30; mov rsi, [rsp+0x60]; mov rdi, [rsp+0x58]; call r13; 
0x000000001418b5: and [rax-0x75], cl; cmp [rax-0x7b], cl; shl byte ptr [rbp+rax+0x48], 0x89; out dx, eax; call rax; 
0x0000000014c340: and [rax-0x75], cl; jge short 0x000000000014c345; mov rax, [rdi+0x8]; call qword ptr [rax+0x20]; 
0x00000000141ac7: and [rax-0x75], cl; push rsp; and al, 0x18; mov rsi, [rsp+0x10]; call qword ptr [rax]; 
0x000000000daee9: and [rax-0x75], cl; push rsp; and al, 0x28; mov rax, [rsp+0x18]; call rax; 
0x000000001150de: and [rax-0x75], ecx; xor ecx, [rcx-0x77]; fisttp qword ptr [rax-0x77], st; out dx, eax; call r12; 
0x00000000119ab4: and [rax-0x77], cl; and al, 0x10; mov eax, 0x9d; syscall; 
0x00000000094c84: and [rax-0x77], cl; je short 0x0000000000094cad; sbb [rcx+rcx*4+0x5c], cl; and al, 0x10; call rax; 
0x000000001418a5: and [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x20]; 
0x0000000008b4af: and [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x90]; 
0x000000001416a7: and [rax-0x77], cl; out dx, eax; lea r15, [rsp+0x50]; call qword ptr [rax+0x20]; 
0x000000001423e9: and [rax-0x77], cl; out dx, eax; mov r12d, eax; xor eax, eax; call qword ptr [rbx+0x28]; 
0x0000000014fba7: and [rax-0x77], cl; push rsp; and al, 0x8; call qword ptr [rax+0x8]; 
0x00000000029d0c: and [rax-0x77], cl; ret; 
0x000000000369f8: and [rax-0x77], cl; std; test rax, rax; je short 0x0000000000036a03; call rax; 
0x000000000759e6: and [rax-0x77], cl; sti; mov dword ptr [rsp+0x28], 0x1; jmp rsi; 
0x0000000008665b: and [rax-0x77], cl; xor [r9-0x29f0993f], r9b; or [r8+0xf6608cd], r8b; insb [rdi], dx; ret far; 
0x000000000d9319: and [rax-0x7d], cl; ret; 
0x000000000d2b6e: and [rax-0x80], al; call qword ptr [rax]; 
0x000000000e0abd: and [rax], al; add [rax], al; cmove rax, rdx; ret; 
0x000000000e0b8b: and [rax], al; add [rax], al; cmovne rax, rdx; ret; 
0x0000000007a4cf: and [rax], al; add [rax], al; jmp rcx; 
0x00000000143036: and [rax], al; add [rax], al; mov rdi, rbp; call qword ptr [rax+0x30]; 
0x000000000b857b: and [rax], al; add [rax], al; pop rbx; ret; 
0x00000000109575: and [rax], al; add [rax], al; syscall; 
0x000000000ab6de: and [rax], al; add [rbp-0x77], cl; ret far; 
0x000000000b529c: and [rax], cl; add [rax], al; ret; 
0x000000000b75d7: and [rax], dh; in eax, dx; mov [rdi+0x21], ch; ret; 
0x000000001095a5: and [rax], eax; add [rax], al; syscall; 
0x0000000016c99e: and [rax], eax; add [rbp-0x77], cl; ret far; 
0x0000000015fe45: and [rbp+rcx*4+0x1d], cl; cmp dword ptr [rcx+0x5], 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000b6444: and [rbp+rcx*4+0x1d], cl; mov eax, 0x49000f2d; movsxd ecx, [rbx+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000130b57: and [rbp-0x1ff7b], cl; jmp qword ptr [rsi+0x3d]; 
0x00000000185dbd: and [rbp-0x27], dh; vzeroupper; ret; 
0x0000000010dea5: and [rbp-0x2e], dh; mov rax, [rsi+0x28]; cmp [rdi+0x28], rax; sete al; ret; 
0x0000000010952b: and [rbp-0x8], esi; dec dword ptr [rbx+0x480c2444]; add esp, 0x18; ret; 
0x0000000007d6e2: and [rbx+0x107729f8], al; movsxd rax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x00000000141752: and [rbx+0x22c093], cl; add [rcx+rcx*4-0xa], cl; add qword ptr [rbx+0x22a8], 0x1; mov rdi, rbp; call qword ptr [rax+0x18]; 
0x0000000010e328: and [rbx+0x2a7409fe], al; mov eax, 0x48; syscall; 
0x000000000cd9e7: and [rbx+0x5d], bl; pop r12; pop r13; pop r14; ret; 
0x000000000342af: and [rbx+0x5d], bl; pop r12; ret; 
0x00000000085faa: and [rbx+rcx*4+0x6d], cl; sbb [rax-0x77], cl; ret far; 
0x00000000041680: and [rbx+rcx*4+0x7f], cl; sub [rcx-0x3b76b310], cl; mov rbp, r9; nop; jmp rdx; 
0x00000000119b23: and [rbx-0x2708fff4], edx; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000185f56: and [rbx], bh; cmp r12b, [rax]; jne 0x0000000000185d99; vzeroupper; ret; 
0x00000000185f58: and [rbx], bh; cmp r12b, [rax]; jne 0x0000000000185d99; vzeroupper; ret; 
0x000000000d67d0: and [rbx], bh; or eax, 0x48c68900; movsxd edx, [rdi+rsi*4]; add rdx, rdi; notrack jmp rdx; 
0x0000000003fb23: and [rbx], esi; sbb al, [rax]; mov dword ptr fs:[rax], 0x2a; mov rax, r10; ret; 
0x00000000110223: and [rcx*1+0x64d8f700], ebp; mov [rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000118f73: and [rcx+0xfffe2], al; add [rip-0x1000], ah; or eax, edx; ret; 
0x00000000141663: and [rcx+rcx*4-0x12], cl; mov rdi, rbp; call qword ptr [rax+0x8]; 
0x00000000144bdc: and [rcx+rcx*4-0x17], cl; mov rdx, r12; mov rsi, rbp; mov rdi, rbx; call rax; 
0x0000000014732d: and [rcx+rcx*4-0x19], cl; call rdx; 
0x0000000014a8aa: and [rcx+rcx*4-0x1], cl; call rcx; 
0x00000000115ae7: and [rcx+rcx*4-0x1a], cl; mov rdi, r15; call r14; 
0x000000000db293: and [rcx+rcx*4-0x20], al; pop rbx; pop rbp; pop r12; ret; 
0x0000000007f61b: and [rcx+rcx*4-0x20], cl; pop rbp; pop r12; pop r13; ret; 
0x000000000874de: and [rcx+rcx*4-0x20], cl; pop rbx; pop rbp; pop r12; ret; 
0x0000000003fb11: and [rcx+rcx*4-0x30], cl; ret; 
0x000000001299bd: and [rcx+rcx*4-0x38], al; pop rbx; pop rbp; pop r12; ret; 
0x00000000132df9: and [rcx+rcx*4-0x40], al; pop rbp; ret; 
0x000000000dbcf1: and [rcx+rcx*4-0x40], al; pop rbx; ret; 
0x000000000e4fb3: and [rcx-0x17d7dbbc], cl; ret; 
0x00000000143eba: and [rcx-0x39feb70a], cl; cmp rsi, [rdx+0x28]; ja short 0x0000000000143eb0; mov [rdx+0x20], rsi; ret; 
0x000000000a8b9e: and [rcx-0x77], ecx; ret; 
0x000000000520cc: and [rcx-0x7d], cl; ret; 
0x0000000011ac74: and [rcx], al; add [rax], al; syscall; 
0x000000000de946: and [rcx], al; mov eax, 0x38; syscall; 
0x000000000e83f8: and [rcx], bh; sbb [r10+rdx*2-0x73], r14b; push rax; add [rax-0x7d], ecx; ret; 
0x00000000097ac5: and [rcx], dh; imul al; ret; 
0x0000000008df07: and [rcx], dh; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x5d], bl; ret; 
0x0000000013faa9: and [rcx], dh; ror byte ptr [rcx+rcx*4-0xa], cl; mov rdi, r15; mov [rsp+0x8], rcx; call rbp; 
0x0000000014173f: and [rcx], dh; test byte ptr [rax-0x77], 0xef; mov dword ptr [rbx+0x18], 0x0; call qword ptr [rax+0x28]; 
0x000000001416c0: and [rcx], dh; test byte ptr [rax-0x77], 0xef; mov dword ptr [rbx+0x18], 0x1; call qword ptr [rax+0x28]; 
0x000000001193e8: and [rcx], eax; add [rax], al; mov edx, 0x8; syscall; 
0x00000000156fcd: and [rcx], ecx; add al, ch; ret far; 
0x000000001055f4: and [rdi+0x19], esi; movzx eax, al; movsxd rax, [r12+rax*4]; add rax, r12; notrack jmp rax; 
0x000000000b8295: and [rdi+0xb], dh; movdqu [rdi+rdx-0x10], xmm0; movdqu [rdi], xmm0; ret; 
0x00000000141209: and [rdi+rax*8], ah; sbb eax, 0xb8000000; sbb eax, 0x5b000000; ret; 
0x0000000015a67d: and [rdi+rax*8], edx; xor eax, eax; ret; 
0x0000000015a67c: and [rdi+rax*8], rdx; xor eax, eax; ret; 
0x00000000106e44: and [rdi], cl; adc [rdi+0x30], eax; movups [rdi+0x40], xmm0; ret; 
0x000000000b80c5: and [rdi], cl; adc [rdi+0x30], edi; movups [r11], xmm8; ret; 
0x0000000011b1b1: and [rdi], cl; add [rbp+0x2a], dh; mov eax, 0x42; syscall; 
0x000000000b55ad: and [rdi], cl; test [rax*1+0x66c30000], ecx; nop [rax+rax]; mov rax, rdi; ret; 
0x000000000b3e19: and [rdi], cl; test [rax+0x4], edx; add [rax], al; ret; 
0x0000000018a7bd: and [rdi], cl; test [rax+rax+0x40a80000], edi; jne 0x000000000018a890; lea rax, [rdi+0x7]; ret; 
0x000000000b8215: and [rdi], cl; xchg [rax-0xd000000], edx; movq [rdi+rdx-0x10], mm0; movdqu [rdi], xmm0; ret; 
0x000000000423a4: and [rdi], eax; xor eax, eax; ret; 
0x000000000423a3: and [rdi], rax; xor eax, eax; ret; 
0x000000000911a0: and [rdx+0x10], ecx; pop rbx; ret; 
0x0000000009119f: and [rdx+0x10], rcx; pop rbx; ret; 
0x0000000010eacf: and [rdx+0x1], bh; mov esi, 0x5409; mov eax, 0x10; syscall; 
0x000000000b9606: and [rdx+0x1], ch; push 0x0; lea rcx, [rax+0x4]; lea r9, [rsp+0x18]; call rbx; 
0x000000000b97a6: and [rdx+0x1], ch; xor r8d, r8d; push 0x0; lea r9, [rsp+0x18]; call r13; 
0x00000000189c8c: and [rdx+0xa], dh; vmovdqu [rdi], ymm2; vmovdqu [rsi-0x20], ymm2; ret; 
0x0000000014cc47: and [rdx], ch; push 0x3c; lea r9, [rsp+0x2a]; call qword ptr [rax]; 
0x00000000165b47: and [rip+0x14634900], al; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001659c7: and [rip+0x14634900], eax; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000041923: and [rip-0x389bffe6], edx; add [rsi], dl; add [rax], al; add [rax-0x1], bh; ret; 
0x000000001562f3: and [rip-0x76b40000], al; loopne 0x000000000015633c; pop rsp; ret; 
0x0000000013be5c: and [rsi+0x3948ffee], ah; ret; 
0x0000000014b5fe: and [rsi+0x4], bh; movdqa xmm0, [rip+0x6b684]; movaps [rsp+0x20], xmm0; call qword ptr [rax+0x28]; 
0x000000000a8922: and [rsi+0xf], ah; xlat [rbx]; rol dword ptr [rbp+0x317575c0], 0xc0; ret; 
0x000000000b9173: and [rsi+rcx-0x80], dh; in eax, 0x1; lea rdx, [rip+0xcc900]; cmovne rax, rdx; ret; 
0x000000000b8cb3: and [rsi+rcx-0x80], dh; in eax, 0x1; lea rdx, [rip+0xcd090]; cmovne rax, rdx; ret; 
0x000000000b8e63: and [rsi+rcx-0x80], dh; in eax, 0x1; lea rdx, [rip+0xcd330]; cmovne rax, rdx; ret; 
0x000000000b8f53: and [rsi+rcx-0x80], dh; in eax, 0x1; lea rdx, [rip+0xcd990]; cmovne rax, rdx; ret; 
0x000000000b8c73: and [rsi+rcx-0x80], dh; in eax, 0x1; lea rdx, [rip+0xcda40]; cmovne rax, rdx; ret; 
0x000000000b8dc3: and [rsi+rcx-0x80], dh; in eax, 0x1; lea rdx, [rip+0xcdd10]; cmovne rax, rdx; ret; 
0x000000000a4f03: and [rsi+rcx-0x80], dh; in eax, 0x1; lea rdx, [rip+0xd94e0]; cmovne rax, rdx; ret; 
0x0000000009ea13: and [rsi+rcx-0x80], dh; in eax, 0x1; lea rdx, [rip+0xdf880]; cmovne rax, rdx; ret; 
0x0000000009d163: and [rsi+rcx-0x80], dh; in eax, 0x1; lea rdx, [rip+0xe0e60]; cmovne rax, rdx; ret; 
0x0000000009ea53: and [rsi+rcx-0x80], dh; in eax, 0x1; lea rdx, [rip+0xe3350]; cmovne rax, rdx; ret; 
0x0000000009c703: and [rsi+rcx-0x80], dh; in eax, 0x1; lea rdx, [rip+0xe5890]; cmovne rax, rdx; ret; 
0x0000000009c553: and [rsi+rcx-0x80], dh; in eax, 0x1; lea rdx, [rip+0xe5c10]; cmovne rax, rdx; ret; 
0x0000000009c593: and [rsi+rcx-0x80], dh; in eax, 0x1; lea rdx, [rip+0xe5d70]; cmovne rax, rdx; ret; 
0x000000000b3c4b: and [rsi], eax; add [rax], al; ret; 
0x00000000080da8: and [rsi], edx; add [rax-0x77], cl; ret; 
0x00000000111dd1: and [rsp+rbp*8-0x3a], dh; inc dword ptr [rax]; mov rax, r8; ret; 
0x00000000125a91: and [rsp+rcx+0x5b], dh; ret; 
0x000000000e425c: and ah, dh; dec dword ptr [rax-0x77]; ret; 
0x000000000b0511: and al, 0x0; add [rax-0x7b], cl; ror byte ptr [rdi], 0x85; ret; 
0x0000000009ee14: and al, 0x0; add [rax], al; add [rbx+0x5d], bl; pop r12; ret; 
0x00000000083e16: and al, 0x0; add [rax], al; call qword ptr [rax+0x68]; 
0x00000000083f4b: and al, 0x0; add [rax], al; mov esi, 0xffffffff; call qword ptr [rax+0x18]; 
0x0000000008625f: and al, 0x0; add [rax], al; mov rax, [rax+0x20]; jmp rax; 
0x000000000d01e5: and al, 0x0; add [rax], al; syscall; 
0x000000000e0a12: and al, 0x0; add [rbp+0x1c], dh; mov eax, 0xfffa; ret; 
0x000000000ab2e5: and al, 0x0; add [rbp-0x77], cl; ret far; 
0x00000000064ceb: and al, 0x0; add [rbx-0x5a76b], cl; inc dword ptr [rbx-0x78f0d006]; ret far; 
0x0000000011063e: and al, 0x0; mov rax, r12; pop r12; ret; 
0x00000000034aff: and al, 0x0; pop rbx; pop rbp; pop r12; ret; 
0x0000000014d7dc: and al, 0x10; add [rax], eax; add [rax], al; mov dword ptr [rsp+0x18], 0x1; call qword ptr [rax+0x18]; 
0x000000000f5268: and al, 0x10; add [rsi+0xf], ah; out dx, eax; ror byte ptr [rdi], 0x84; ret far; 
0x000000000de6a4: and al, 0x10; add rsp, 0x28; ret; 
0x000000001495de: and al, 0x10; call qword ptr [rax+0x10]; 
0x00000000141ad0: and al, 0x10; call qword ptr [rax]; 
0x000000000c6feb: and al, 0x10; call r13; 
0x00000000028cad: and al, 0x10; call rax; 
0x0000000004047a: and al, 0x10; fld st, tbyte ptr [rsp+0x8]; ret; 
0x0000000014962a: and al, 0x10; lea rdx, [rip+0x6424c]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000000500d7: and al, 0x10; lea rsi, [rip+0x160]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000a4d7b: and al, 0x10; mov [rax], rdx; ret; 
0x000000000a4e33: and al, 0x10; mov [rdi], rdx; lea rax, [rdi+rax-0x1]; ret; 
0x00000000150355: and al, 0x10; mov [rsp+0x10], rax; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x0000000010ff1e: and al, 0x10; mov eax, 0x17; mov edi, [rsp+0xc]; syscall; 
0x000000000de686: and al, 0x10; mov eax, 0x3d; syscall; 
0x0000000011b07e: and al, 0x10; mov eax, 0x46; mov edi, [rsp+0x8]; syscall; 
0x00000000119ab7: and al, 0x10; mov eax, 0x9d; syscall; 
0x000000000de740: and al, 0x10; mov eax, 0xf7; syscall; 
0x00000000108c06: and al, 0x10; mov edi, [rsp+0x18]; mov eax, 0x101; syscall; 
0x0000000010dd2b: and al, 0x10; mov edi, [rsp+0x8]; syscall; 
0x0000000011ae21: and al, 0x10; mov edi, [rsp+0xc]; mov eax, 0x133; syscall; 
0x00000000119561: and al, 0x10; mov edi, [rsp+0xc]; mov eax, 0xe8; syscall; 
0x0000000014bd78: and al, 0x10; mov edi, eax; call rbp; 
0x0000000010f37d: and al, 0x10; mov r8d, eax; mov edi, [rsp+0x8]; mov eax, 0x13; syscall; 
0x0000000010f41d: and al, 0x10; mov r8d, eax; mov edi, [rsp+0x8]; mov eax, 0x14; syscall; 
0x00000000108d7f: and al, 0x10; mov r8d, eax; mov edi, [rsp+0x8]; mov eax, 0x1; syscall; 
0x0000000011a79d: and al, 0x10; mov r8d, eax; mov edi, [rsp+0x8]; mov eax, 0x2e; syscall; 
0x0000000011a63d: and al, 0x10; mov r8d, eax; mov edi, [rsp+0x8]; mov eax, 0x2f; syscall; 
0x00000000108cdf: and al, 0x10; mov r8d, eax; mov edi, [rsp+0x8]; xor eax, eax; syscall; 
0x0000000011a28f: and al, 0x10; mov r8d, eax; mov edi, [rsp+0xc]; mov eax, 0x2b; syscall; 
0x000000000463fe: and al, 0x10; mov r8d, eax; mov rdi, [rsp+0x8]; mov eax, 0x13e; syscall; 
0x0000000011394e: and al, 0x10; mov r8d, eax; mov rdi, [rsp+0x8]; mov eax, 0x1a; syscall; 
0x0000000010d65e: and al, 0x10; mov r8d, eax; mov rdi, [rsp+0x8]; mov eax, 0x7; syscall; 
0x00000000150359: and al, 0x10; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x0000000014fb9d: and al, 0x10; mov rax, [rdi+0x8]; sar rdx, 0x20; mov [rsp+0x8], rdx; call qword ptr [rax+0x8]; 
0x0000000014fc8d: and al, 0x10; mov rax, [rdi+0x8]; shr rdx, 0x20; mov [rsp+0x8], rdx; call qword ptr [rax+0x8]; 
0x00000000148f4d: and al, 0x10; mov rax, [rsp+0x48]; call qword ptr [rax+0x28]; 
0x0000000011c9cf: and al, 0x10; mov rcx, [rsp+0x8]; mov rax, [rsp]; add rsp, 0x38; ret; 
0x0000000011ca30: and al, 0x10; mov rcx, [rsp+0x8]; mov rax, [rsp]; add rsp, 0x40; ret; 
0x00000000141690: and al, 0x10; mov rcx, [rsp+0x8]; mov rdi, rbp; call rcx; 
0x00000000147211: and al, 0x10; mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x18]; 
0x0000000015a4fb: and al, 0x10; mov rdi, [rsp+0x18]; call rax; 
0x0000000015a49e: and al, 0x10; mov rdi, [rsp+0x18]; call rcx; 
0x0000000008e790: and al, 0x10; mov rdi, [rsp+0x8]; add rsp, 0x20; pop rbx; jmp rax; 
0x0000000014fbbf: and al, 0x10; mov rdi, rbp; call qword ptr [rax+0x8]; 
0x0000000008ae44: and al, 0x10; mov rdi, rbp; call qword ptr [rax+0x90]; 
0x0000000014fb66: and al, 0x10; mov rdi, rbp; call qword ptr [rax]; 
0x00000000114cf5: and al, 0x10; mov rdi, rbp; call rax; 
0x000000000b9d3c: and al, 0x10; mov rdi, rbp; mov rsi, [rsp+0x18]; call rbx; 
0x00000000094916: and al, 0x10; mov rdi, rsi; mov [rsp+0x18], r11; call qword ptr [rax]; 
0x00000000144aa2: and al, 0x10; mov rdx, r13; mov rsi, r12; mov rdi, rbp; call rax; 
0x00000000132bd2: and al, 0x10; mov rdx, r14; mov rdi, r13; mov rsi, [rsp+0x8]; call rbp; 
0x0000000012198c: and al, 0x10; mov rdx, rax; call qword ptr [r12+0x28]; 
0x00000000042cda: and al, 0x10; mov rdx, rbp; mov rsi, r12; call rbx; 
0x0000000007aca3: and al, 0x10; mov rdx, rcx; mov rsi, r12; mov rdi, rbp; call qword ptr [r14+0x38]; 
0x000000000751aa: and al, 0x10; mov rdx, rcx; mov rsi, r9; mov rdi, rbp; call qword ptr [r12+0x38]; 
0x00000000075d06: and al, 0x10; mov rdx, rcx; mov rsi, r9; mov rdi, rbp; call qword ptr [r13+0x38]; 
0x00000000119374: and al, 0x10; mov rsi, [rsp+0x8]; mov eax, 0x119; mov edi, [rsp+0x4]; syscall; 
0x0000000011ad66: and al, 0x10; mov rsi, [rsp+0x8]; mov eax, 0x12b; mov edi, [rsp+0x4]; syscall; 
0x0000000011a5a9: and al, 0x10; mov rsi, [rsp+0x8]; syscall; 
0x0000000011a6fb: and al, 0x10; mov rsi, [rsp+0x8]; xor r8d, r8d; mov eax, 0x2c; syscall; 
0x0000000011a4db: and al, 0x10; mov rsi, [rsp+0x8]; xor r8d, r8d; mov eax, 0x2d; syscall; 
0x00000000132fe3: and al, 0x10; mov rsi, r12; call qword ptr [rsp+0x58]; 
0x000000001470ef: and al, 0x10; mov rsi, r12; mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x8]; 
0x00000000040445: and al, 0x10; or eax, 0xffff8000; inc eax; shr eax, 0x1f; ret; 
0x000000000db329: and al, 0x10; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000114afe: and al, 0x10; test r13, r13; jne short 0x0000000000114b7b; mov rdi, [r12]; call rbx; 
0x00000000114b2e: and al, 0x10; test r13, r13; jne short 0x0000000000114bb0; mov rdi, [r12]; call rbx; 
0x0000000011597a: and al, 0x10; test r13, r13; jne short 0x00000000001159e0; mov rdi, [r12]; call rbx; 
0x0000000011594e: and al, 0x10; test rdi, rdi; jne short 0x00000000001159a0; mov rdi, [r12]; call rbx; 
0x00000000085b45: and al, 0x10; xor edx, edx; mov rdi, r15; call qword ptr [r14+0x80]; 
0x0000000012181e: and al, 0x10; xor esi, esi; mov edi, 0x2000004; call rax; 
0x000000000806e0: and al, 0x10; xor esi, esi; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000010e82f: and al, 0x11; syscall; 
0x0000000014b7fe: and al, 0x14; call qword ptr [rax]; 
0x000000000a4d2c: and al, 0x14; mov [rdi+0x4], dx; movzx edx, byte ptr [rsp+0x16]; mov [rdi+0x6], dl; ret; 
0x0000000004279e: and al, 0x14; mov edi, r12d; mov eax, 0x81; syscall; 
0x0000000013de95: and al, 0x14; mov rdx, r12; mov eax, 0x81; syscall; 
0x0000000010f4da: and al, 0x14; mov rsi, [rsp+0x8]; mov eax, 0x127; syscall; 
0x0000000010f59a: and al, 0x14; mov rsi, [rsp+0x8]; mov eax, 0x128; syscall; 
0x00000000110042: and al, 0x14; syscall; 
0x000000000a4d35: and al, 0x16; mov [rdi+0x6], dl; ret; 
0x0000000014d7e4: and al, 0x18; add [rax], eax; add [rax], al; call qword ptr [rax+0x18]; 
0x0000000014d840: and al, 0x18; add [rax], eax; add [rax], al; mov dword ptr [rsp+0x20], 0x5; call qword ptr [rax+0x18]; 
0x00000000097c0b: and al, 0x18; add rsp, 0x18; jmp rax; 
0x0000000010e1d5: and al, 0x18; add rsp, 0x28; ret; 
0x0000000014d631: and al, 0x18; call qword ptr [rax+0x18]; 
0x0000000009491e: and al, 0x18; call qword ptr [rax]; 
0x000000000b97b0: and al, 0x18; call r13; 
0x00000000151789: and al, 0x18; call r8; 
0x0000000002da7f: and al, 0x18; call rax; 
0x000000000b9611: and al, 0x18; call rbx; 
0x0000000015a4a4: and al, 0x18; call rcx; 
0x00000000028d5f: and al, 0x18; cmovne rdi, r14; call rdx; 
0x00000000142547: and al, 0x18; lea r9, [rsp+0x40]; call qword ptr [rax]; 
0x000000000a4ca3: and al, 0x18; mov [rdi], rdx; add rax, rdi; ret; 
0x00000000094c88: and al, 0x18; mov [rsp+0x10], r11; call rax; 
0x00000000108c0a: and al, 0x18; mov eax, 0x101; syscall; 
0x0000000010e1b7: and al, 0x18; mov eax, 0x115; syscall; 
0x0000000011acb7: and al, 0x18; mov eax, 0x120; syscall; 
0x0000000011a862: and al, 0x18; mov eax, 0x2c; mov rsi, [rsp+0x10]; mov edi, [rsp+0x8]; syscall; 
0x0000000011afc7: and al, 0x18; mov eax, 0x45; syscall; 
0x0000000011003e: and al, 0x18; mov edi, [rsp+0x14]; syscall; 
0x00000000119611: and al, 0x18; mov edi, [rsp+0x8]; mov eax, 0x114; syscall; 
0x0000000014b653: and al, 0x18; mov esi, 0x6; call qword ptr [rax+0x28]; 
0x0000000014b61a: and al, 0x18; mov esi, 0x6; mov rax, [rdi+0x8]; call qword ptr [rax+0x28]; 
0x000000000c68bb: and al, 0x18; mov rcx, r12; mov rdx, r13; call rbx; 
0x000000001470dd: and al, 0x18; mov rdi, r12; call qword ptr [rax+0x8]; 
0x00000000086ed9: and al, 0x18; mov rdi, r13; lea r9, [rsp+0x28]; call rbp; 
0x000000001592b5: and al, 0x18; mov rdx, r14; mov esi, 0x40; mov rdi, rbx; call rax; 
0x00000000141acb: and al, 0x18; mov rsi, [rsp+0x10]; call qword ptr [rax]; 
0x0000000010ff19: and al, 0x18; mov rsi, [rsp+0x10]; mov eax, 0x17; mov edi, [rsp+0xc]; syscall; 
0x0000000011b079: and al, 0x18; mov rsi, [rsp+0x10]; mov eax, 0x46; mov edi, [rsp+0x8]; syscall; 
0x00000000033bdd: and al, 0x18; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; call r15; 
0x0000000002ccd1: and al, 0x18; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; mov rax, [rsp+0x28]; call rax; 
0x0000000014d935: and al, 0x18; movups [rsp+0x38], xmm0; call qword ptr [rax+0x18]; 
0x000000000976db: and al, 0x18; pop rbx; pop rbp; pop r12; jmp rax; 
0x000000001131cc: and al, 0x18; sub rax, fs:[0x28]; jne short 0x00000000001131e2; add rsp, 0xd8; ret; 
0x000000001132a5: and al, 0x18; sub rax, fs:[0x28]; jne short 0x00000000001132bb; add rsp, 0xd8; ret; 
0x00000000115d91: and al, 0x18; sub rax, fs:[0x28]; jne short 0x0000000000115da7; add rsp, 0xd8; ret; 
0x00000000115e51: and al, 0x18; sub rax, fs:[0x28]; jne short 0x0000000000115e67; add rsp, 0xd8; ret; 
0x00000000116298: and al, 0x18; sub rax, fs:[0x28]; jne short 0x00000000001162ae; add rsp, 0xd8; ret; 
0x00000000116505: and al, 0x18; sub rax, fs:[0x28]; jne short 0x000000000011651b; add rsp, 0xd8; ret; 
0x00000000123933: and al, 0x18; sub rax, fs:[0x28]; jne short 0x0000000000123949; add rsp, 0xd8; ret; 
0x0000000012553c: and al, 0x18; sub rax, fs:[0x28]; jne short 0x0000000000125552; add rsp, 0xd8; ret; 
0x0000000014de65: and al, 0x18; sub rax, fs:[0x28]; jne short 0x000000000014de98; add rsp, 0x28; ret; 
0x000000000455e7: and al, 0x18; sub rcx, fs:[0x28]; jne short 0x00000000000455fa; add rsp, 0x28; ret; 
0x000000000456d7: and al, 0x18; sub rcx, fs:[0x28]; jne short 0x00000000000456ea; add rsp, 0x28; ret; 
0x00000000050d39: and al, 0x18; sub rcx, fs:[0x28]; jne short 0x0000000000050d4f; add rsp, 0xd8; ret; 
0x0000000005fd6c: and al, 0x18; sub rcx, fs:[0x28]; jne short 0x000000000005fd82; add rsp, 0xd8; ret; 
0x0000000005fe41: and al, 0x18; sub rcx, fs:[0x28]; jne short 0x000000000005fe57; add rsp, 0xd8; ret; 
0x0000000005fef8: and al, 0x18; sub rcx, fs:[0x28]; jne short 0x000000000005ff0e; add rsp, 0xd8; ret; 
0x0000000006008c: and al, 0x18; sub rcx, fs:[0x28]; jne short 0x00000000000600a2; add rsp, 0xd8; ret; 
0x0000000006014c: and al, 0x18; sub rcx, fs:[0x28]; jne short 0x0000000000060162; add rsp, 0xd8; ret; 
0x0000000006023a: and al, 0x18; sub rcx, fs:[0x28]; jne short 0x0000000000060250; add rsp, 0xd8; ret; 
0x00000000060311: and al, 0x18; sub rcx, fs:[0x28]; jne short 0x0000000000060327; add rsp, 0xd8; ret; 
0x000000000612a4: and al, 0x18; sub rcx, fs:[0x28]; jne short 0x00000000000612ba; add rsp, 0xd8; ret; 
0x0000000006137f: and al, 0x18; sub rcx, fs:[0x28]; jne short 0x0000000000061395; add rsp, 0xd8; ret; 
0x00000000082dfc: and al, 0x18; sub rcx, fs:[0x28]; jne short 0x0000000000082e12; add rsp, 0xd8; ret; 
0x00000000082eb8: and al, 0x18; sub rcx, fs:[0x28]; jne short 0x0000000000082ece; add rsp, 0xd8; ret; 
0x00000000082fb1: and al, 0x18; sub rcx, fs:[0x28]; jne short 0x0000000000082fc7; add rsp, 0xd8; ret; 
0x00000000083081: and al, 0x18; sub rcx, fs:[0x28]; jne short 0x0000000000083097; add rsp, 0xd8; ret; 
0x0000000008313a: and al, 0x18; sub rcx, fs:[0x28]; jne short 0x0000000000083150; add rsp, 0xd8; ret; 
0x000000000c6be4: and al, 0x18; sub rcx, fs:[0x28]; jne short 0x00000000000c6bfa; add rsp, 0xd8; ret; 
0x000000000c6cbf: and al, 0x18; sub rcx, fs:[0x28]; jne short 0x00000000000c6cd5; add rsp, 0xd8; ret; 
0x000000000ccfed: and al, 0x18; sub rcx, fs:[0x28]; jne short 0x00000000000cd036; add rsp, 0x28; ret; 
0x0000000010e486: and al, 0x18; sub rcx, fs:[0x28]; jne short 0x000000000010e4db; add rsp, 0x58; ret; 
0x0000000010e524: and al, 0x18; sub rcx, fs:[0x28]; jne short 0x000000000010e57b; add rsp, 0x58; ret; 
0x000000001107cb: and al, 0x18; sub rcx, fs:[0x28]; jne short 0x00000000001107de; add rsp, 0x28; ret; 
0x00000000119acb: and al, 0x18; sub rcx, fs:[0x28]; jne short 0x0000000000119af3; add rsp, 0x58; ret; 
0x0000000011b1c7: and al, 0x18; sub rcx, fs:[0x28]; jne short 0x000000000011b223; add rsp, 0x58; ret; 
0x00000000127b21: and al, 0x18; sub rcx, fs:[0x28]; jne short 0x0000000000127b3c; add rsp, 0xd8; ret; 
0x00000000127e05: and al, 0x18; sub rcx, fs:[0x28]; jne short 0x0000000000127e1b; add rsp, 0xd8; ret; 
0x00000000128e25: and al, 0x18; sub rcx, fs:[0x28]; jne short 0x0000000000128e3b; add rsp, 0xd8; ret; 
0x00000000129395: and al, 0x18; sub rcx, fs:[0x28]; jne short 0x00000000001293ab; add rsp, 0xd8; ret; 
0x00000000129475: and al, 0x18; sub rcx, fs:[0x28]; jne short 0x000000000012948b; add rsp, 0xd8; ret; 
0x00000000129555: and al, 0x18; sub rcx, fs:[0x28]; jne short 0x000000000012956b; add rsp, 0xd8; ret; 
0x0000000013111d: and al, 0x18; sub rcx, fs:[0x28]; jne short 0x0000000000131130; add rsp, 0x28; ret; 
0x00000000139005: and al, 0x18; sub rcx, fs:[0x28]; jne short 0x0000000000139018; add rsp, 0x28; ret; 
0x000000000cc1c8: and al, 0x18; sub rdi, fs:[0x28]; jne short 0x00000000000cc1e9; add rsp, 0x28; ret; 
0x00000000052294: and al, 0x18; sub rdx, fs:[0x28]; jne short 0x00000000000522a9; add rsp, 0xd8; ret; 
0x0000000005ffcb: and al, 0x18; sub rdx, fs:[0x28]; jne short 0x000000000005ffe0; add rsp, 0xd8; ret; 
0x00000000107cc0: and al, 0x18; sub rdx, fs:[0x28]; jne short 0x0000000000107ce1; add rsp, 0x28; ret; 
0x0000000010fc13: and al, 0x18; sub rdx, fs:[0x28]; jne short 0x000000000010fc25; add rsp, 0x28; ret; 
0x00000000127c28: and al, 0x18; sub rdx, fs:[0x28]; jne short 0x0000000000127c45; add rsp, 0xd8; ret; 
0x00000000127d3e: and al, 0x18; sub rdx, fs:[0x28]; jne short 0x0000000000127d53; add rsp, 0xd8; ret; 
0x00000000128c48: and al, 0x18; sub rdx, fs:[0x28]; jne short 0x0000000000128c65; add rsp, 0xd8; ret; 
0x00000000128d5e: and al, 0x18; sub rdx, fs:[0x28]; jne short 0x0000000000128d73; add rsp, 0xd8; ret; 
0x0000000015a993: and al, 0x18; sub rdx, fs:[0x28]; jne short 0x000000000015a9a5; add rsp, 0x28; ret; 
0x0000000012926d: and al, 0x18; sub rsi, fs:[0x28]; jne short 0x0000000000129285; add rsp, 0x28; ret; 
0x000000001292cd: and al, 0x18; sub rsi, fs:[0x28]; jne short 0x00000000001292e5; add rsp, 0x28; ret; 
0x0000000015a26e: and al, 0x18; sub rsi, fs:[0x28]; jne short 0x000000000015a285; add rsp, 0x28; ret; 
0x00000000029878: and al, 0x18; xor r8d, r8d; call rbx; 
0x000000000c6a42: and al, 0x18; xor r8d, r8d; mov rdi, rbp; call rbx; 
0x000000000ba80e: and al, 0x1; add [rax], al; add [rax-0x7d], cl; ret; 
0x000000001095d5: and al, 0x1; add [rax], al; syscall; 
0x00000000086100: and al, 0x1; add [rax], al; xor edx, edx; mov rdi, r15; call qword ptr [rbx+0x80]; 
0x00000000042cc5: and al, 0x1; mov r13, rax; mov rdi, r12; call rbx; 
0x0000000014c242: and al, 0x1c; call qword ptr [rax]; 
0x000000000de73b: and al, 0x1c; mov rdx, [rsp+0x10]; mov eax, 0xf7; syscall; 
0x00000000121717: and al, 0x1f; call qword ptr [r12+0x28]; 
0x0000000014b60e: and al, 0x20; call qword ptr [rax+0x28]; 
0x00000000142030: and al, 0x20; call qword ptr [rax]; 
0x0000000002c573: and al, 0x20; call rax; 
0x000000000b99b6: and al, 0x20; call rbx; 
0x0000000010e326: and al, 0x20; cmp esi, 0x9; je short 0x000000000010e358; mov eax, 0x48; syscall; 
0x00000000119ab2: and al, 0x20; mov [rsp+0x10], rax; mov eax, 0x9d; syscall; 
0x00000000094c82: and al, 0x20; mov [rsp+0x18], rsi; mov [rsp+0x10], r11; call rax; 
0x00000000121713: and al, 0x20; mov [rsp+0x1f], al; call qword ptr [r12+0x28]; 
0x00000000110034: and al, 0x20; mov eax, 0x10e; mov rsi, [rsp+0x18]; mov edi, [rsp+0x14]; syscall; 
0x00000000110884: and al, 0x20; mov eax, 0x65; syscall; 
0x0000000014b5fd: and al, 0x20; mov esi, 0x4; movdqa xmm0, [rip+0x6b684]; movaps [rsp+0x20], xmm0; call qword ptr [rax+0x28]; 
0x0000000002e0e1: and al, 0x20; mov rcx, [rsp+0x30]; mov rsi, [rsp+0x60]; mov rdi, [rsp+0x58]; call r13; 
0x0000000014732c: and al, 0x20; mov rdi, r12; call rdx; 
0x0000000014a8a8: and al, 0x20; mov rdi, r15; call rcx; 
0x0000000008b4ae: and al, 0x20; mov rdi, rbp; call qword ptr [rax+0x90]; 
0x00000000141ac5: and al, 0x20; mov rdx, [rsp+0x18]; mov rsi, [rsp+0x10]; call qword ptr [rax]; 
0x000000000daee7: and al, 0x20; mov rdx, [rsp+0x28]; mov rax, [rsp+0x18]; call rax; 
0x0000000014cc45: and al, 0x20; push 0x0; push 0x3c; lea r9, [rsp+0x2a]; call qword ptr [rax]; 
0x0000000010e823: and al, 0x21; mov [rsp+0x23], al; mov eax, r8d; movups [rsp+0x11], xmm0; syscall; 
0x0000000010e827: and al, 0x23; mov eax, r8d; movups [rsp+0x11], xmm0; syscall; 
0x0000000015a023: and al, 0x24; call rax; 
0x000000000528da: and al, 0x24; mov edi, 0x1; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000052a18: and al, 0x24; xor esi, esi; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000759eb: and al, 0x28; add [rax], eax; add [rax], al; jmp rsi; 
0x0000000007a4cc: and al, 0x28; and [rax], al; add [rax], al; jmp rcx; 
0x0000000002bfeb: and al, 0x28; call rax; 
0x00000000086ee0: and al, 0x28; call rbp; 
0x000000000b94ab: and al, 0x28; call rbx; 
0x0000000010b017: and al, 0x28; lea rcx, [rbp+0x28]; mov edx, 0x1; call qword ptr [rbp+0x40]; 
0x0000000010b377: and al, 0x28; lea rcx, [rbp+0x28]; mov edx, 0x2; call qword ptr [rbp+0x40]; 
0x0000000010b2f7: and al, 0x28; lea rcx, [rbp+0x28]; mov edx, 0x5; call qword ptr [rbp+0x40]; 
0x00000000119781: and al, 0x28; mov eax, 0x113; mov rsi, [rsp+0x10]; mov edi, [rsp+0x8]; syscall; 
0x0000000010dd21: and al, 0x28; mov eax, 0x146; mov rsi, [rsp+0x10]; mov edi, [rsp+0x8]; syscall; 
0x0000000015a019: and al, 0x28; mov esi, [rsi]; lea r9, [r11+rsi]; mov esi, [rsp+0x24]; call rax; 
0x0000000014d8a6: and al, 0x28; mov rax, [rdi+0x8]; mov dword ptr [rsp+0x30], 0x1; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x0000000014d696: and al, 0x28; mov rax, [rdi+0x8]; mov dword ptr [rsp+0x30], 0x3; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x0000000014d706: and al, 0x28; mov rax, [rdi+0x8]; mov dword ptr [rsp+0x30], 0x4; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x0000000014d776: and al, 0x28; mov rax, [rdi+0x8]; mov dword ptr [rsp+0x30], 0x5; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x000000000daeed: and al, 0x28; mov rax, [rsp+0x18]; call rax; 
0x00000000141ac0: and al, 0x28; mov rcx, [rsp+0x20]; mov rdx, [rsp+0x18]; mov rsi, [rsp+0x10]; call qword ptr [rax]; 
0x00000000147110: and al, 0x28; mov rdi, r12; call rcx; 
0x00000000098de3: and al, 0x28; mov rdi, r12; call rdx; 
0x0000000002da70: and al, 0x28; mov rsi, [rsp+0x48]; mov rdi, [rsp+0x50]; mov rax, [rsp+0x18]; call rax; 
0x000000000323c6: and al, 0x28; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; mov rax, [rsp+0x10]; call rax; 
0x0000000010919a: and al, 0x28; sub rcx, fs:[0x28]; jne 0x0000000000109245; add rsp, 0x68; ret; 
0x000000000db2f3: and al, 0x28; sub rcx, fs:[0x28]; jne short 0x00000000000db353; add rsp, 0x38; ret; 
0x000000000dfbc3: and al, 0x28; sub rcx, fs:[0x28]; jne short 0x00000000000dfc23; add rsp, 0x38; ret; 
0x000000000dfc63: and al, 0x28; sub rcx, fs:[0x28]; jne short 0x00000000000dfcc3; add rsp, 0x38; ret; 
0x000000000dff33: and al, 0x28; sub rcx, fs:[0x28]; jne short 0x00000000000dffa3; add rsp, 0x38; ret; 
0x000000000dffe3: and al, 0x28; sub rcx, fs:[0x28]; jne short 0x00000000000e0053; add rsp, 0x38; ret; 
0x00000000107f69: and al, 0x28; sub rcx, fs:[0x28]; jne short 0x0000000000107f7c; add rsp, 0x38; ret; 
0x0000000010e33f: and al, 0x28; sub rcx, fs:[0x28]; jne short 0x000000000010e393; add rsp, 0x68; ret; 
0x0000000010f8f3: and al, 0x28; sub rcx, fs:[0x28]; jne short 0x000000000010f95b; add rsp, 0x38; ret; 
0x0000000010f993: and al, 0x28; sub rcx, fs:[0x28]; jne short 0x000000000010f9fb; add rsp, 0x38; ret; 
0x0000000010fa48: and al, 0x28; sub rcx, fs:[0x28]; jne short 0x000000000010facb; add rsp, 0x38; ret; 
0x0000000010fb18: and al, 0x28; sub rcx, fs:[0x28]; jne short 0x000000000010fb9b; add rsp, 0x38; ret; 
0x000000001108a3: and al, 0x28; sub rcx, fs:[0x28]; jne short 0x00000000001108ed; add rsp, 0x68; ret; 
0x00000000111a61: and al, 0x28; sub rcx, fs:[0x28]; jne short 0x0000000000111a74; add rsp, 0x38; ret; 
0x00000000111ae4: and al, 0x28; sub rcx, fs:[0x28]; jne short 0x0000000000111af7; add rsp, 0x38; ret; 
0x00000000111b58: and al, 0x28; sub rcx, fs:[0x28]; jne short 0x0000000000111b6b; add rsp, 0x38; ret; 
0x00000000111bc3: and al, 0x28; sub rcx, fs:[0x28]; jne short 0x0000000000111bd6; add rsp, 0x38; ret; 
0x000000001310b0: and al, 0x28; sub rcx, fs:[0x28]; jne short 0x00000000001310c3; add rsp, 0x38; ret; 
0x00000000159c7f: and al, 0x28; sub rcx, fs:[0x28]; jne short 0x0000000000159ce1; add rsp, 0x38; ret; 
0x00000000059a28: and al, 0x28; sub rdi, fs:[0x28]; jne short 0x0000000000059a72; add rsp, 0x38; ret; 
0x000000000fd486: and al, 0x28; sub rdi, fs:[0x28]; jne short 0x00000000000fd4e6; add rsp, 0x38; ret; 
0x00000000131014: and al, 0x28; sub rdx, fs:[0x28]; jne short 0x0000000000131049; add rsp, 0x38; ret; 
0x0000000010e98b: and al, 0x28; xor eax, eax; mov rdx, rsp; mov eax, 0x10; syscall; 
0x0000000014cc4e: and al, 0x2a; call qword ptr [rax]; 
0x00000000141e3a: and al, 0x2c; call qword ptr [rax]; 
0x0000000010755a: and al, 0x2c; mov edi, 0x1; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000107507: and al, 0x2c; xor esi, esi; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000014d8ae: and al, 0x30; add [rax], eax; add [rax], al; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x0000000014d70e: and al, 0x30; add al, 0x0; add [rax], al; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x0000000014d77e: and al, 0x30; add eax, 0xf000000; adc [rsp+0x18], eax; call qword ptr [rax+0x18]; 
0x0000000014d69e: and al, 0x30; add eax, [rax]; add [rax], al; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x00000000142bc1: and al, 0x30; call rax; 
0x000000000b9bf0: and al, 0x30; call rbx; 
0x0000000010e7b7: and al, 0x30; mov eax, 0x10; syscall; 
0x0000000014710c: and al, 0x30; mov rcx, [rsp+0x28]; mov rdi, r12; call rcx; 
0x00000000085a7a: and al, 0x30; mov rdi, r15; call qword ptr [r14+0x90]; 
0x00000000030d1f: and al, 0x30; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; mov rax, [rsp+0x20]; call rax; 
0x0000000002e0e6: and al, 0x30; mov rsi, [rsp+0x60]; mov rdi, [rsp+0x58]; call r13; 
0x00000000141f6d: and al, 0x30; push qword ptr [rip+0x74be2]; push qword ptr [rip+0x74bd4]; lea r9, [rsp+0x2c]; call qword ptr [rax]; 
0x0000000014c9fd: and al, 0x30; push r13; push r12; lea r9, [rsp+0x3a]; call qword ptr [rax]; 
0x0000000005003b: and al, 0x30; xor esi, esi; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000099f87: and al, 0x31; mov [rbx], rax; test rax, rax; je 0x000000000009a060; call rax; 
0x00000000142b0d: and al, 0x31; ror byte ptr [rax-0x77], 0xdf; call rcx; 
0x0000000014f7ab: and al, 0x31; sar byte ptr [rdx-0x1], 0x4c; mov esi, esi; mov rdi, r12; call r13; 
0x0000000007be39: and al, 0x34; add [rax], eax; add [rax], al; mov rbx, rsi; jmp rcx; 
0x0000000007b491: and al, 0x38; add [rax], eax; add [rax], al; mov rbx, rsi; jmp rcx; 
0x0000000002d3b6: and al, 0x38; add eax, 0xe9000000; imul edi, esi, 0xffffffff; jmp qword ptr [rsi+0xf]; 
0x000000000759e3: and al, 0x38; and [rax-0x77], cl; sti; mov dword ptr [rsp+0x28], 0x1; jmp rsi; 
0x00000000075fed: and al, 0x38; and cl, ch; shr edi, 0xff; jmp qword ptr [rsi+0x2e]; 
0x0000000014d93a: and al, 0x38; call qword ptr [rax+0x18]; 
0x00000000129f38: and al, 0x38; call qword ptr [rsp+0x60]; 
0x0000000013fd9b: and al, 0x38; call qword ptr [rsp+0x68]; 
0x00000000033be8: and al, 0x38; call r15; 
0x00000000033d44: and al, 0x38; lea r8, [rsp+0xa0]; call r15; 
0x0000000012a971: and al, 0x38; mov esi, r14d; mov rdi, r13; call qword ptr [rsp+0x50]; 
0x0000000012b9f3: and al, 0x38; mov r8, rbx; mov rdx, rbp; call qword ptr [rsp+0x60]; 
0x0000000014284e: and al, 0x38; mov rdi, r12; call qword ptr [rax+0x20]; 
0x0000000014d62d: and al, 0x38; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x0000000008a3ea: and al, 0x38; sub rax, fs:[0x28]; jne short 0x000000000008a409; add rsp, 0x48; ret; 
0x0000000014f8ca: and al, 0x38; sub rax, fs:[0x28]; jne short 0x000000000014f8dd; add rsp, 0x48; ret; 
0x00000000108b94: and al, 0x38; sub rcx, fs:[0x28]; jne 0x0000000000108c63; add rsp, 0x78; ret; 
0x0000000014f8b6: and al, 0x38; xor eax, eax; mov rdi, rsp; mov dword ptr [rsp], 0x2; call r8; 
0x000000001430c7: and al, 0x3; mov rdi, rbp; and esi, 0xfffffffc; call qword ptr [rax+0x30]; 
0x0000000014ca06: and al, 0x3a; call qword ptr [rax]; 
0x0000000007a4c4: and al, 0x3c; add [rax], al; add [rax], al; mov dword ptr [rsp+0x28], 0x20; jmp rcx; 
0x0000000007bf39: and al, 0x3c; add [rax], eax; add [rax], al; mov rbx, rsi; jmp rcx; 
0x000000000f45da: and al, 0x3c; add [rax], eax; add [rcx], bh; ret; 
0x00000000076299: and al, 0x40; add [rax], eax; add [rax], al; mov rbx, rdi; jmp rsi; 
0x000000000cce30: and al, 0x40; call qword ptr [rax+0x270]; 
0x0000000014254b: and al, 0x40; call qword ptr [rax]; 
0x0000000013fd96: and al, 0x40; mov rdi, [rsp+0x38]; call qword ptr [rsp+0x68]; 
0x00000000033be3: and al, 0x40; mov rdi, [rsp+0x38]; call r15; 
0x00000000033d3f: and al, 0x40; mov rdi, [rsp+0x38]; lea r8, [rsp+0xa0]; call r15; 
0x00000000147327: and al, 0x40; mov rdx, [rsp+0x20]; mov rdi, r12; call rdx; 
0x0000000002fd2e: and al, 0x40; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x48]; mov rax, [rsp+0x28]; call rax; 
0x0000000002ed7f: and al, 0x40; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; call r14; 
0x0000000010ffcd: and al, 0x40; test eax, eax; jne short 0x0000000000110000; mov eax, 0x10e; syscall; 
0x00000000109698: and al, 0x41; mov eax, eax; mov eax, 0x55; syscall; 
0x0000000011982c: and al, 0x41; mov eax, eax; mov edi, [rsp+0x8]; mov eax, 0x130; syscall; 
0x0000000011a35c: and al, 0x41; mov eax, eax; mov edi, [rsp+0x8]; mov eax, 0x2a; syscall; 
0x0000000009ed14: and al, 0x41; pop rsp; pop r13; pop r14; ret; 
0x000000000f3f52: and al, 0x44; add [rax], eax; add [rcx], bh; ret; 
0x00000000083d9c: and al, 0x44; mov esi, esp; mov rdi, r14; call qword ptr [rax+0x18]; 
0x0000000014172b: and al, 0x45; test edi, edi; je short 0x00000000001417b0; mov rax, [rdi+0x38]; call qword ptr [rax+0x18]; 
0x0000000007579c: and al, 0x48; add [rax], eax; add [rax], al; mov rbx, rdi; jmp rsi; 
0x0000000008dfd8: and al, 0x48; add esp, 0x10; pop rbx; jmp rax; 
0x000000000412c4: and al, 0x48; add esp, 0x18; pop rbx; pop rbp; ret; 
0x000000001096b8: and al, 0x48; add esp, 0x18; ret; 
0x0000000011a502: and al, 0x48; add esp, 0x20; pop rbp; ret; 
0x00000000106d06: and al, 0x48; add esp, 0x28; ret; 
0x0000000011a5c8: and al, 0x48; add esp, 0x30; pop rbp; ret; 
0x00000000190752: and al, 0x48; add esp, 0x38; pop rbx; pop r14; ret; 
0x0000000011c9d9: and al, 0x48; add esp, 0x38; ret; 
0x0000000011ca3a: and al, 0x48; add esp, 0x40; ret; 
0x00000000148f52: and al, 0x48; call qword ptr [rax+0x28]; 
0x00000000028cbc: and al, 0x48; lea edi, [rip+0x185024]; mov rsi, [rax]; xor eax, eax; call qword ptr [rdx+0x260]; 
0x00000000159741: and al, 0x48; mov eax, [rax+0x268]; jmp rax; 
0x00000000150843: and al, 0x48; mov eax, [rbp+0x8]; call qword ptr [rax+0x8]; 
0x000000000feede: and al, 0x48; mov eax, [rbp-0x1e0]; call rax; 
0x00000000143d69: and al, 0x48; mov eax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x000000000f50b4: and al, 0x48; mov eax, edx; movsxd rdx, [r13+rdx*4]; add rdx, r13; notrack jmp rdx; 
0x000000000f794a: and al, 0x48; mov eax, edx; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x0000000011591b: and al, 0x48; mov edi, [rbp]; call rbx; 
0x0000000008aff2: and al, 0x48; mov edi, ebp; call rax; 
0x00000000028ca7: and al, 0x48; mov edx, [rax]; mov rax, [rsp+0x10]; call rax; 
0x0000000007a366: and al, 0x48; mov edx, ebx; mov rdi, rbp; call qword ptr [r12+0x38]; 
0x00000000141678: and al, 0x48; mov esi, ebp; mov rax, [rdi+0x38]; call qword ptr [rax+0x8]; 
0x0000000002fd39: and al, 0x48; mov rax, [rsp+0x28]; call rax; 
0x00000000033bd8: and al, 0x48; mov rcx, [rsp+0x18]; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; call r15; 
0x0000000014acf5: and al, 0x48; mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x18]; 
0x0000000002da76: and al, 0x48; mov rdi, [rsp+0x50]; mov rax, [rsp+0x18]; call rax; 
0x00000000097e23: and al, 0x48; mov rdi, rbp; call rax; 
0x00000000110758: and al, 0x48; sub rcx, fs:[0x28]; jne short 0x0000000000110777; add rsp, 0x58; ret; 
0x00000000159918: and al, 0x48; sub rcx, fs:[0x28]; jne short 0x000000000015995e; add rsp, 0x58; ret; 
0x0000000011939a: and al, 0x4; add rsp, 0x20; pop rbp; ret; 
0x0000000011ad8d: and al, 0x4; add rsp, 0x28; ret; 
0x00000000150f47: and al, 0x4; call qword ptr [rax+0x40]; 
0x00000000150f66: and al, 0x4; mov [rsp+0x4], eax; mov rax, [rdi+0x8]; call qword ptr [rax+0x48]; 
0x0000000005027f: and al, 0x4; mov edi, 0x1; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000150f69: and al, 0x4; mov rax, [rdi+0x8]; call qword ptr [rax+0x48]; 
0x00000000150b32: and al, 0x4; mov rax, [rdi+0x8]; sar rdx, 0x20; mov [rsp], edx; call qword ptr [rax+0x48]; 
0x00000000150d12: and al, 0x4; mov rax, [rdi+0x8]; shr rdx, 0x20; mov [rsp], edx; call qword ptr [rax+0x48]; 
0x00000000150afd: and al, 0x4; mov rdi, rbp; call qword ptr [rax+0x40]; 
0x00000000150b4e: and al, 0x4; mov rdi, rbp; call qword ptr [rax+0x48]; 
0x0000000010704b: and al, 0x4; pop rbx; pop rbp; pop r12; ret; 
0x00000000119382: and al, 0x4; syscall; 
0x000000000502d1: and al, 0x4; xor esi, esi; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000b94a8: and al, 0x4c; lea ecx, [rsp+0x28]; call rbx; 
0x0000000008e5f6: and al, 0x4c; mov edi, edi; lea rbx, [rsi+0x1]; movzx esi, byte ptr [rsi]; call qword ptr [rax+0x18]; 
0x00000000133391: and al, 0x4c; mov edi, esp; call rax; 
0x0000000008bceb: and al, 0x4c; mov edx, eax; mov rsi, r12; mov rdi, rbp; call qword ptr [rax+0x78]; 
0x00000000043947: and al, 0x4c; mov edx, esi; mov rax, [rsp]; call rax; 
0x000000000438c3: and al, 0x4c; mov edx, esi; mov rsi, r13; mov rdi, r12; call rax; 
0x000000001417c6: and al, 0x4c; mov esi, ebp; mov rax, [rdi+0x38]; call qword ptr [rax+0x10]; 
0x00000000043a6f: and al, 0x4c; mov esi, ebp; mov rdi, r12; call rax; 
0x00000000042b92: and al, 0x4c; mov esi, edi; call r14; 
0x00000000142bf8: and al, 0x4c; mov esi, edi; mov rdi, rbx; xor eax, eax; call rcx; 
0x00000000043ad3: and al, 0x4d; add edi, esp; call rax; 
0x00000000091518: and al, 0x4e; stc; jmp qword ptr [rbx+rcx*4+0x4]; 
0x0000000007be29: and al, 0x50; add [rax], eax; add [rax], al; mov rbx, rsi; jmp rcx; 
0x000000001416ae: and al, 0x50; call qword ptr [rax+0x20]; 
0x0000000002ed8a: and al, 0x50; call r14; 
0x000000000cc34c: and al, 0x50; call rbx; 
0x000000000cc34d: and al, 0x50; call rbx; 
0x000000000323d1: and al, 0x50; mov rax, [rsp+0x10]; call rax; 
0x0000000002da7b: and al, 0x50; mov rax, [rsp+0x18]; call rax; 
0x00000000030d2a: and al, 0x50; mov rax, [rsp+0x20]; call rax; 
0x0000000014a8a4: and al, 0x50; mov rcx, [rsp+0x20]; mov rdi, r15; call rcx; 
0x0000000002fd34: and al, 0x50; mov rdi, [rsp+0x48]; mov rax, [rsp+0x28]; call rax; 
0x0000000002d280: and al, 0x50; mov rdi, [rsp+0x58]; mov rax, [rsp+0x20]; call rax; 
0x0000000002bfe2: and al, 0x50; mov rdi, [rsp+0x58]; mov rax, [rsp+0x28]; call rax; 
0x0000000013fd88: and al, 0x50; mov rdx, [rsp+0xe0]; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; call qword ptr [rsp+0x68]; 
0x000000000cc465: and al, 0x50; mov rsi, r15; mov rdi, rbp; call rbx; 
0x000000000cc464: and al, 0x50; mov rsi, r15; mov rdi, rbp; call rbx; 
0x00000000028cc0: and al, 0x50; sbb [rax], al; mov rsi, [rax]; xor eax, eax; call qword ptr [rdx+0x260]; 
0x00000000159299: and al, 0x50; test rax, rax; je short 0x00000000001592b3; mov rax, [rip+0x89b90]; call qword ptr [rax+0x288]; 
0x000000000749b1: and al, 0x54; add [rax], al; add [rax], al; mov byte ptr [rsp+0x38], 0x20; jmp rsi; 
0x00000000076231: and al, 0x54; add [rax], eax; add [rax], al; mov rbx, rdi; jmp rsi; 
0x000000000763f1: and al, 0x58; add [rax], eax; add [rax], al; mov rbx, rdi; jmp rsi; 
0x0000000002e0f1: and al, 0x58; call r13; 
0x0000000002d285: and al, 0x58; mov rax, [rsp+0x20]; call rax; 
0x0000000002bfe7: and al, 0x58; mov rax, [rsp+0x28]; call rax; 
0x0000000002ed85: and al, 0x58; mov rdi, [rsp+0x50]; call r14; 
0x000000000323cc: and al, 0x58; mov rdi, [rsp+0x50]; mov rax, [rsp+0x10]; call rax; 
0x00000000030d25: and al, 0x58; mov rdi, [rsp+0x50]; mov rax, [rsp+0x20]; call rax; 
0x0000000002c56a: and al, 0x58; mov rdi, [rsp+0x60]; mov rax, [rsp+0x20]; call rax; 
0x0000000014909d: and al, 0x58; mov rdi, r12; call qword ptr [rax+0x20]; 
0x00000000159a0f: and al, 0x58; sub rcx, fs:[0x28]; jne short 0x0000000000159a64; add rsp, 0x68; ret; 
0x00000000159ba8: and al, 0x58; sub rcx, fs:[0x28]; jne short 0x0000000000159c14; add rsp, 0x68; ret; 
0x0000000010e7af: and al, 0x58; xor eax, eax; lea rdx, [rsp+0x30]; mov eax, 0x10; syscall; 
0x000000000cc345: and al, 0x58; xor eax, eax; mov [rsp+0x50], r12; call rbx; 
0x000000001656c7: and al, 0x5; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000011f2dc: and al, 0x5b; pop rbp; pop r12; ret; 
0x0000000009f98b: and al, 0x5d; pop r12; pop r13; pop r14; ret; 
0x00000000142beb: and al, 0x60; add [rax], eax; add al, ch; ret far; 
0x000000000dac38: and al, 0x60; call r12; 
0x0000000002c56f: and al, 0x60; mov rax, [rsp+0x20]; call rax; 
0x0000000002e0ec: and al, 0x60; mov rdi, [rsp+0x58]; call r13; 
0x00000000151784: and al, 0x60; movups [rsp+0x18], xmm0; call r8; 
0x00000000076349: and al, 0x68; add [rax], eax; add [rax], al; mov rbx, rdi; jmp rsi; 
0x0000000007b3c5: and al, 0x68; jmp rcx; 
0x0000000014a888: and al, 0x68; mov rdi, [rax]; mov rsi, r15; mov rax, [rdi+0x38]; call qword ptr [rax+0x8]; 
0x000000000dac30: and al, 0x68; mov rdi, r15; mov rsi, [rsp+0x60]; call r12; 
0x0000000002c565: and al, 0x68; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x60]; mov rax, [rsp+0x20]; call rax; 
0x000000000433c7: and al, 0x68; mov rsi, [rsp+0x8]; mov rdx, rbp; mov rdi, r12; call rbx; 
0x000000001417b7: and al, 0x68; mov rsi, r13; call qword ptr [rax+0x10]; 
0x000000001472cf: and al, 0x68; mov rsi, rbp; mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x10]; 
0x0000000014d6af: and al, 0x68; sub rax, fs:[0x28]; jne short 0x000000000014d6c2; add rsp, 0x78; ret; 
0x0000000014d71f: and al, 0x68; sub rax, fs:[0x28]; jne short 0x000000000014d732; add rsp, 0x78; ret; 
0x0000000014d78f: and al, 0x68; sub rax, fs:[0x28]; jne short 0x000000000014d7a2; add rsp, 0x78; ret; 
0x0000000014d7f0: and al, 0x68; sub rax, fs:[0x28]; jne short 0x000000000014d803; add rsp, 0x78; ret; 
0x0000000014d854: and al, 0x68; sub rax, fs:[0x28]; jne short 0x000000000014d867; add rsp, 0x78; ret; 
0x0000000014d8bf: and al, 0x68; sub rax, fs:[0x28]; jne short 0x000000000014d8d2; add rsp, 0x78; ret; 
0x0000000014d942: and al, 0x68; sub rax, fs:[0x28]; jne short 0x000000000014d955; add rsp, 0x78; ret; 
0x0000000014d639: and al, 0x68; sub rcx, fs:[0x28]; jne short 0x000000000014d64c; add rsp, 0x78; ret; 
0x00000000159174: and al, 0x68; xor eax, eax; call qword ptr [r12+0xf88]; 
0x000000000f38e4: and al, 0x70; add [rax], eax; add [rax+0x9], cl; ret far; 
0x00000000148650: and al, 0x70; call qword ptr [rax+0x30]; 
0x0000000015177b: and al, 0x70; pxor xmm0, xmm0; movaps [rsp+0x60], xmm1; movups [rsp+0x18], xmm0; call r8; 
0x00000000155f8b: and al, 0x72; mov [0xffff4fe924048b49], al; jmp qword ptr [rsi+0xf]; 
0x00000000041a0f: and al, 0x78; movups [rsp+0x88], xmm7; mov r10d, 0x8; mov eax, 0xd; syscall; 
0x000000000b3b48: and al, 0x7; add [rax], al; ret; 
0x0000000002e074: and al, 0x80; add [rax], al; add [rax+0x39], cl; ret; 
0x00000000076beb: and al, 0x80; add [rax], al; add [rax-0x7d], cl; ret; 
0x00000000191523: and al, 0x80; mov rax, [rax+rbx*8]; test rax, rax; je short 0x0000000000191530; call rax; 
0x000000000f0833: and al, 0x83; ret; 
0x000000000ba90c: and al, 0x89; ret; 
0x000000000fa718: and al, 0x89; shl byte ptr [rsi+0xf], 0x1; insb [rdi], dx; ret; 
0x000000000394a7: and al, 0x8; add rsp, 0x18; ret; 
0x0000000008e795: and al, 0x8; add rsp, 0x20; pop rbx; jmp rax; 
0x00000000046426: and al, 0x8; add rsp, 0x28; ret; 
0x0000000010dd49: and al, 0x8; add rsp, 0x30; pop rbp; ret; 
0x0000000011b0a2: and al, 0x8; add rsp, 0x38; ret; 
0x0000000014fbab: and al, 0x8; call qword ptr [rax+0x8]; 
0x00000000143dea: and al, 0x8; call qword ptr [rax]; 
0x0000000007f430: and al, 0x8; call rax; 
0x00000000132bde: and al, 0x8; call rbp; 
0x000000000406a2: and al, 0x8; fadd st, st(0); ret; 
0x000000000405fe: and al, 0x8; fscale; fstp st(1), st; ret; 
0x00000000040564: and al, 0x8; fsubrp; ret; 
0x00000000119aad: and al, 0x8; lea rax, [rsp+0x20]; mov [rsp+0x10], rax; mov eax, 0x9d; syscall; 
0x000000001592ce: and al, 0x8; lea rdi, [r12+0x9b0]; call qword ptr [r12+0xf90]; 
0x00000000159377: and al, 0x8; lea rdi, [r13+0x988]; call qword ptr [r13+0xf88]; 
0x00000000119615: and al, 0x8; mov eax, 0x114; syscall; 
0x00000000119379: and al, 0x8; mov eax, 0x119; mov edi, [rsp+0x4]; syscall; 
0x0000000010e266: and al, 0x8; mov eax, 0x11d; syscall; 
0x0000000010f4df: and al, 0x8; mov eax, 0x127; syscall; 
0x0000000010f59f: and al, 0x8; mov eax, 0x128; syscall; 
0x0000000011ad6b: and al, 0x8; mov eax, 0x12b; mov edi, [rsp+0x4]; syscall; 
0x00000000119832: and al, 0x8; mov eax, 0x130; syscall; 
0x0000000010f384: and al, 0x8; mov eax, 0x13; syscall; 
0x00000000046406: and al, 0x8; mov eax, 0x13e; syscall; 
0x0000000010f424: and al, 0x8; mov eax, 0x14; syscall; 
0x00000000108d86: and al, 0x8; mov eax, 0x1; syscall; 
0x00000000113956: and al, 0x8; mov eax, 0x1a; syscall; 
0x0000000011a362: and al, 0x8; mov eax, 0x2a; syscall; 
0x0000000011a7a4: and al, 0x8; mov eax, 0x2e; syscall; 
0x0000000011a644: and al, 0x8; mov eax, 0x2f; syscall; 
0x0000000011920c: and al, 0x8; mov eax, 0x38; syscall; 
0x0000000010920e: and al, 0x8; mov eax, 0x48; syscall; 
0x0000000010d666: and al, 0x8; mov eax, 0x7; syscall; 
0x000000000de682: and al, 0x8; mov edi, [rsp+0x10]; mov eax, 0x3d; syscall; 
0x0000000010e1b3: and al, 0x8; mov edi, [rsp+0x18]; mov eax, 0x115; syscall; 
0x0000000011acb3: and al, 0x8; mov edi, [rsp+0x18]; mov eax, 0x120; syscall; 
0x0000000011afc3: and al, 0x8; mov edi, [rsp+0x18]; mov eax, 0x45; syscall; 
0x000000001196c2: and al, 0x8; mov edi, [rsp]; mov eax, 0x116; syscall; 
0x00000000106ce3: and al, 0x8; mov edi, [rsp]; mov eax, 0x11; syscall; 
0x00000000106d93: and al, 0x8; mov edi, [rsp]; mov eax, 0x12; syscall; 
0x0000000010e35b: and al, 0x8; mov esi, 0x10; mov eax, 0x48; syscall; 
0x00000000041c69: and al, 0x8; mov esi, 0x8; mov r8d, eax; mov eax, 0x82; syscall; 
0x000000000857fc: and al, 0x8; mov esi, 0xffffffff; mov rdi, r8; call qword ptr [rax+0x18]; 
0x000000001433fa: and al, 0x8; mov esi, r14d; mov rdi, r13; call qword ptr [rax+0x30]; 
0x00000000142555: and al, 0x8; mov r12d, eax; mov rax, [rdi+0x8]; call qword ptr [rax+0x20]; 
0x00000000143e20: and al, 0x8; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x000000000dfc8e: and al, 0x8; mov rax, [rip+0x106b28]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000dfbee: and al, 0x8; mov rax, [rip+0x106bc8]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000011c9d3: and al, 0x8; mov rax, [rsp]; add rsp, 0x38; ret; 
0x0000000011ca34: and al, 0x8; mov rax, [rsp]; add rsp, 0x40; ret; 
0x00000000043a6a: and al, 0x8; mov rax, [rsp]; mov rsi, r13; mov rdi, r12; call rax; 
0x00000000142b08: and al, 0x8; mov rcx, [rsp]; xor eax, eax; mov rdi, rbx; call rcx; 
0x00000000141e47: and al, 0x8; mov rdi, r12; call qword ptr [rax+0x20]; 
0x00000000085ba0: and al, 0x8; mov rdi, r15; call rax; 
0x0000000014cc68: and al, 0x8; mov rdi, rbp; call qword ptr [rax+0x10]; 
0x0000000014140b: and al, 0x8; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x00000000143e35: and al, 0x8; mov rdi, rbp; call qword ptr [rax+0x8]; 
0x00000000141694: and al, 0x8; mov rdi, rbp; call rcx; 
0x00000000132661: and al, 0x8; mov rdi, rbx; call rax; 
0x000000000dac2a: and al, 0x8; mov rdx, [rsp+0x68]; mov rdi, r15; mov rsi, [rsp+0x60]; call r12; 
0x0000000010d762: and al, 0x8; mov rdx, r12; mov eax, 0x10f; syscall; 
0x000000000433cd: and al, 0x8; mov rdx, rbp; mov rdi, r12; call rbx; 
0x00000000074839: and al, 0x8; mov rdx, rbx; mov rdi, rbp; call qword ptr [r12+0x38]; 
0x0000000008b96d: and al, 0x8; mov rsi, r13; mov rdi, rbx; call qword ptr [rbp+0x70]; 
0x0000000004047f: and al, 0x8; ret; 
0x000000000dff76: and al, 0x8; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000041459: and al, 0x8; sub rax, fs:[0x28]; jne short 0x000000000004146c; add rsp, 0x18; ret; 
0x00000000045f61: and al, 0x8; sub rax, fs:[0x28]; jne short 0x0000000000045f74; add rsp, 0x18; ret; 
0x00000000045fae: and al, 0x8; sub rax, fs:[0x28]; jne short 0x0000000000045fc1; add rsp, 0x18; ret; 
0x0000000009a693: and al, 0x8; sub rcx, fs:[0x28]; jne 0x000000000009a752; add rsp, 0x18; ret; 
0x00000000045a0b: and al, 0x8; sub rcx, fs:[0x28]; jne short 0x0000000000045a6a; add rsp, 0x18; ret; 
0x00000000046000: and al, 0x8; sub rcx, fs:[0x28]; jne short 0x0000000000046013; add rsp, 0x18; ret; 
0x0000000004604d: and al, 0x8; sub rcx, fs:[0x28]; jne short 0x0000000000046060; add rsp, 0x18; ret; 
0x000000000460a0: and al, 0x8; sub rcx, fs:[0x28]; jne short 0x00000000000460b3; add rsp, 0x18; ret; 
0x000000000460ed: and al, 0x8; sub rcx, fs:[0x28]; jne short 0x0000000000046100; add rsp, 0x18; ret; 
0x00000000107fc4: and al, 0x8; sub rcx, fs:[0x28]; jne short 0x0000000000107fd7; add rsp, 0x18; ret; 
0x0000000010e3ce: and al, 0x8; sub rcx, fs:[0x28]; jne short 0x000000000010e423; add rsp, 0x18; ret; 
0x0000000010ea71: and al, 0x8; sub rcx, fs:[0x28]; jne short 0x000000000010ea8b; add rsp, 0x18; ret; 
0x000000001145fd: and al, 0x8; sub rcx, fs:[0x28]; jne short 0x0000000000114610; add rsp, 0x18; ret; 
0x0000000011ac42: and al, 0x8; sub rcx, fs:[0x28]; jne short 0x000000000011ac55; add rsp, 0x18; ret; 
0x00000000138fb2: and al, 0x8; sub rcx, fs:[0x28]; jne short 0x0000000000138fc5; add rsp, 0x18; ret; 
0x00000000060f1c: and al, 0x8; sub rdx, fs:[0x28]; jne short 0x0000000000060f37; add rsp, 0x18; ret; 
0x000000000d6531: and al, 0x8; sub rdx, fs:[0x28]; jne short 0x00000000000d6543; add rsp, 0x18; ret; 
0x000000000d8df1: and al, 0x8; sub rdx, fs:[0x28]; jne short 0x00000000000d8e03; add rsp, 0x18; ret; 
0x00000000108017: and al, 0x8; sub rdx, fs:[0x28]; jne short 0x0000000000108029; add rsp, 0x18; ret; 
0x000000001567f7: and al, 0x8; sub rdx, fs:[0x28]; jne short 0x0000000000156834; add rsp, 0x18; ret; 
0x00000000139895: and al, 0x8; sub rsi, fs:[0x28]; jne short 0x00000000001398a7; add rsp, 0x18; ret; 
0x0000000010dd2f: and al, 0x8; syscall; 
0x0000000005025f: and al, 0x8; xor eax, eax; mov eax, 0x3e; syscall; 
0x00000000108ce6: and al, 0x8; xor eax, eax; syscall; 
0x00000000094d7b: and al, 0x8; xor edi, edi; call qword ptr [rax]; 
0x0000000011a700: and al, 0x8; xor r8d, r8d; mov eax, 0x2c; syscall; 
0x0000000011a4e0: and al, 0x8; xor r8d, r8d; mov eax, 0x2d; syscall; 
0x0000000013c068: and al, 0x8b; adc [r13+0x5b0875c0], r8b; pop rbp; pop r12; ret; 
0x00000000028c34: and al, 0x8b; jl short 0x0000000000028c5c; or al, 0x48; mov edx, [rax]; call rbp; 
0x000000000e7450: and al, 0x90; add [rax], al; add [rax-0x77], cl; ret far; 
0x00000000091315: and al, 0x90; xor eax, eax; ret; 
0x00000000142bba: and al, 0x92; add [rax], eax; add [rax-0x75], cl; and al, 0x30; call rax; 
0x0000000005141e: and al, 0x98; add [rax], al; add [rcx+0x1], cl; ret; 
0x00000000108164: and al, 0x98; add [rax], eax; add [rcx], dh; shl bh, 0xc2; jmp rsi; 
0x000000000f4a44: and al, 0x98; add [rax], eax; add al, ch; sbb bl, dh; jmp qword ptr [rsi+0xf]; 
0x0000000011e2c8: and al, 0x9a; or al, 0x0; syscall; 
0x000000000f4412: and al, 0xa0; add [rax], eax; add [rcx], al; ret; 
0x000000000f746d: and al, 0xa4; add [rax], al; add [rax-0x77], cl; ret far; 
0x000000000e56e8: and al, 0xa8; add [rax], al; add [rax-0x77], cl; ret far; 
0x0000000013325b: and al, 0xa8; add [rax], al; add cl, ch; ret; 
0x00000000051d0c: and al, 0xab; add [rax], al; add [rcx-0x7d], cl; ret; 
0x00000000106ce7: and al, 0xb8; adc [rax], eax; add [rax], al; syscall; 
0x00000000106d97: and al, 0xb8; adc al, [rax]; add [rax], al; syscall; 
0x0000000014db5c: and al, 0xb8; add [rax], al; add [rdi], cl; adc [rsp+0xd8], eax; call rax; 
0x0000000011a5a0: and al, 0xb8; sub eax, 0x48000000; mov edx, [rsp+0x10]; mov rsi, [rsp+0x8]; syscall; 
0x0000000008bcae: and al, 0xba; add [rax], eax; add [rax], al; mov rdi, rbp; call qword ptr [rax+0x80]; 
0x00000000148d66: and al, 0xc8; add [rax], eax; add bl, ch; mov eax, 0xfe09dee8; jmp qword ptr [rsi+0x66]; 
0x000000000de884: and al, 0xc; add rsp, 0x18; ret; 
0x000000000de75e: and al, 0xc; add rsp, 0x28; ret; 
0x0000000010ff40: and al, 0xc; add rsp, 0x38; ret; 
0x000000000a4de9: and al, 0xc; mov [rax+0x4], dx; movzx edx, byte ptr [rsp+0xe]; mov [rax+0x6], dl; ret; 
0x000000000a4ece: and al, 0xc; mov [rdi+0x4], dx; movzx edx, byte ptr [rsp+0xe]; mov [rdi+0x6], dl; ret; 
0x000000000a4d14: and al, 0xc; mov [rdi+0x4], dx; ret; 
0x0000000011ae25: and al, 0xc; mov eax, 0x133; syscall; 
0x0000000011a296: and al, 0xc; mov eax, 0x2b; syscall; 
0x00000000119565: and al, 0xc; mov eax, 0xe8; syscall; 
0x0000000010e262: and al, 0xc; mov edi, [rsp+0x8]; mov eax, 0x11d; syscall; 
0x0000000014b6d7: and al, 0xc; mov esi, 0xd; call qword ptr [rax+0x28]; 
0x0000000010950f: and al, 0xc; mov r8d, eax; mov eax, 0x3; syscall; 
0x0000000011012f: and al, 0xc; mov r8d, eax; mov eax, 0x4a; syscall; 
0x000000001101ef: and al, 0xc; mov r8d, eax; mov eax, 0x4b; syscall; 
0x00000000109207: and al, 0xc; mov r8d, eax; mov edi, [rsp+0x8]; mov eax, 0x48; syscall; 
0x0000000008dfd3: and al, 0xc; mov rdi, [rsp]; add rsp, 0x10; pop rbx; jmp rax; 
0x00000000109693: and al, 0xc; mov rdi, [rsp]; mov r8d, eax; mov eax, 0x55; syscall; 
0x000000001486d8: and al, 0xc; mov rdi, rbp; call qword ptr [rax+0x48]; 
0x00000000028c37: and al, 0xc; mov rdx, [rax]; call rbp; 
0x00000000028ca2: and al, 0xc; mov rsi, [rsp]; mov rdx, [rax]; mov rax, [rsp+0x10]; call rax; 
0x0000000010ff27: and al, 0xc; syscall; 
0x000000000cc8fc: and al, 0xd0; add [rax], al; add [rcx+rcx*4-0x12], cl; call r12; 
0x0000000007536c: and al, 0xd0; add [rax], al; add cl, ch; xor dh, 0xff; jmp qword ptr [rsi+0x2e]; 
0x0000000004187b: and al, 0xe0; add [rax], al; add [rdi], cl; sub [rsp+0xf0], eax; syscall; 
0x0000000010747e: and al, 0xe8; add [rax], al; add [rax+0xe], bh; syscall; 
0x00000000040535: and al, 0xe8; add [rax], al; add [rax], al; fld st, tbyte ptr [rsp-0x18]; ret; 
0x00000000055d31: and al, 0xe8; fld st, tbyte ptr [rsp-0x18]; ret; 
0x000000000405ac: and al, 0xe8; fstp tbyte ptr [rdi], st; fld st, tbyte ptr [rsp+0x8]; ret; 
0x000000000a4dd2: and al, 0xe8; mov [rax], edx; movzx edx, word ptr [rsp-0x14]; mov [rax+0x4], dx; ret; 
0x00000000126033: and al, 0xe8; mov [rbp-0x80], edx; mov rdx, r13; movups [rbp-0x78], xmm5; call rax; 
0x00000000040666: and al, 0xe8; mov [rsp-0x10], ax; fld st, tbyte ptr [rsp-0x18]; ret; 
0x00000000129626: and al, 0xe8; mov eax, 0x83; syscall; 
0x0000000013f98b: and al, 0xe8; mov edi, 0x4100019d; mov edi, [rbp]; call qword ptr [rsp+0x20]; 
0x000000000e9825: and al, 0xe8; push rbp; ret far; 
0x000000000fd00f: and al, 0xe8; ret far; 
0x000000000404ee: and al, 0xe8; ret; 
0x000000001918b3: and al, 0xe8; xchg [rdx-0x17], ecx; call far fword ptr [rbx+0x4c]; 
0x0000000008be17: and al, 0xe9; ret far; 
0x000000000a4df2: and al, 0xe; mov [rax+0x6], dl; ret; 
0x000000000a4ed7: and al, 0xe; mov [rdi+0x6], dl; ret; 
0x0000000003564b: and al, 0xeb; mov rax, [rax+r13*8]; test rax, rax; je short 0x0000000000035658; call rax; 
0x000000000a4dd9: and al, 0xec; mov [rax+0x4], dx; ret; 
0x000000000a4eb6: and al, 0xec; mov [rdi+0x4], dx; ret; 
0x00000000133e5b: and al, 0xef; jmp qword ptr [rbx+rcx*4+0x4]; 
0x000000000453d4: and al, 0xf0; add qword ptr [rax+0x460], 0x1; lea rdi, [rbp+0x988]; call qword ptr [rbp+0xf90]; 
0x00000000040ee5: and al, 0xf0; and rax, rdx; sub rax, rdx; shr rax, 0x3f; ret; 
0x000000000405a7: and al, 0xf0; fld st, tbyte ptr [rsp-0x18]; fstp tbyte ptr [rdi], st; fld st, tbyte ptr [rsp+0x8]; ret; 
0x0000000004066a: and al, 0xf0; fld st, tbyte ptr [rsp-0x18]; ret; 
0x000000000404e7: and al, 0xf0; fstp tbyte ptr [rdi], st; fld st, tbyte ptr [rsp-0x18]; ret; 
0x000000000cc274: and al, 0xf0; fsubp; fstp qword ptr [rsp-0x10], st; movsd xmm0, [rsp-0x10]; ret; 
0x0000000013662e: and al, 0xf0; jmp qword ptr [rsi+0x66]; 
0x000000000a4dba: and al, 0xf0; mov [rax], edx; movzx edx, byte ptr [rsp-0xc]; mov [rax+0x4], dl; ret; 
0x00000000040530: and al, 0xf0; mov qword ptr [rsp-0x18], 0x0; fld st, tbyte ptr [rsp-0x18]; ret; 
0x0000000005918c: and al, 0xf0; movdqa xmm0, [rsp-0x18]; ret; 
0x000000000cc27a: and al, 0xf0; movsd xmm0, [rsp-0x10]; ret; 
0x000000000cc27f: and al, 0xf0; ret; 
0x000000000a4dc1: and al, 0xf4; mov [rax+0x4], dl; ret; 
0x000000000a4cfc: and al, 0xf4; mov [rdi+0x4], dl; ret; 
0x00000000191453: and al, 0xf8; jmp qword ptr [rsi+0x2e]; 
0x000000000a4d9b: and al, 0xf8; mov [rax], dx; movzx edx, byte ptr [rsp-0x6]; mov [rax+0x2], dl; ret; 
0x000000000407b9: and al, 0xf8; sub rax, rdx; shr rax, 0x3f; ret; 
0x000000000b6e27: and al, 0xf; add [rbx+0x63], cl; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6da4: and al, 0xf; add [rcx+0x63], cl; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000008f4fc: and al, 0xf; xchg [rbp+0x31000001], cl; shl byte ptr [rcx], cl; test byte ptr [rax-0x77], 0xdf; call qword ptr [rax+0x58]; 
0x000000000a4da3: and al, 0xfa; mov [rax+0x2], dl; ret; 
0x000000000a4cde: and al, 0xfa; mov [rdi+0x2], dl; ret; 
0x000000000405f9: and al, 0xfc; fld st, tbyte ptr [rsp+0x8]; fscale; fstp st(1), st; ret; 
0x00000000040b80: and al, 0xfc; sub eax, 0x7f800000; shr eax, 0x1f; ret; 
0x0000000015728b: and al, 0xfd; jmp qword ptr [rsi-0x70]; 
0x000000000c7274: and al, 0xff; jmp qword ptr [rsi+0xf]; 
0x0000000004140d: and al, [rax]; add [rax], al; add rsp, 0x20; pop rbp; ret; 
0x00000000040734: and al, [rax]; add [rax], al; add rsp, 0x8; ret; 
0x000000001411f2: and al, [rax]; add [rax], al; mov eax, 0x22; pop rbx; ret; 
0x000000001411f7: and al, [rax]; add [rax], al; pop rbx; ret; 
0x000000000de851: and al, [rax]; add [rax], al; syscall; 
0x000000000ab48e: and al, [rax]; add [rbp-0x77], cl; ret far; 
0x00000000141756: and al, [rax]; add [rcx+rcx*4-0xa], cl; add qword ptr [rbx+0x22a8], 0x1; mov rdi, rbp; call qword ptr [rax+0x18]; 
0x00000000141760: and al, [rax]; add [rcx], al; mov rdi, rbp; call qword ptr [rax+0x18]; 
0x00000000028587: and al, [rcx+0x5c]; pop r13; pop r14; pop r15; ret; 
0x00000000119425: and al, [rcx]; add [rax], al; syscall; 
0x00000000128b8a: and al, [rdi]; stc; jmp qword ptr [rsi-0x70]; 
0x000000000363ca: and al, [rsi]; add [rax], al; xchg ax, ax; ret; 
0x00000000191876: and al, bh; call far fword ptr [rbx+0x4c]; 
0x000000000cd80f: and al, ch; fwait; cmp edi, ecx; call far fword ptr [rcx+0x5e]; 
0x000000000cd72c: and al, ch; jle short 0x00000000000cd76c; stc; call far fword ptr [rdx+0x59]; 
0x00000000157945: and al, ch; movsd [rdi], [rsi]; imul edi, ebx, 0x2d8b4cff; div byte ptr [rax+rcx-0x7600cf00]; ret; 
0x000000000ef76f: and al, ch; ret far; 
0x00000000157b9f: and al, ch; sti; jmp qword ptr [rcx+rax*2-0x39]; 
0x0000000004052a: and ax, 0x8000; mov [rsp-0x10], ax; mov qword ptr [rsp-0x18], 0x0; fld st, tbyte ptr [rsp-0x18]; ret; 
0x000000000b6d1a: and ax, 0xf; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000005f603: and bh, al; add ch, [rip-0x17000000]; ret far; 
0x00000000078223: and bh, al; add ch, [rip-0x7d000000]; ret; 
0x0000000013766f: and bh, bh; jmp qword ptr [rsi+0x2e]; 
0x000000000de75a: and bh, bl; dec dword ptr [rbx+0x480c2444]; add esp, 0x28; ret; 
0x000000000de759: and bh, bl; dec dword ptr [rbx+0x480c2444]; add esp, 0x28; ret; 
0x00000000157497: and bh, ch; jmp qword ptr [rsi+0xf]; 
0x00000000147492: and bh, dh; jmp qword ptr [rsi+0x66]; 
0x000000000858b7: and bh, dl; jmp qword ptr [rsi+0xf]; 
0x0000000010df08: and bl, al; nop [rax+rax]; mov qword ptr [rdi], 0x0; ret; 
0x000000000a8957: and bl, al; nop [rax]; bsr eax, eax; lea rax, [rax+rdi+0x30]; ret; 
0x000000000b4127: and bl, al; nop [rax]; ret; 
0x000000000b411b: and bl, dh; movq [rdi], mm0; movdqu [rdi+0x10], xmm2; mov [rdi+0x20], cl; ret; 
0x000000000b411a: and bl, r14b; movq [rdi], mm0; movdqu [rdi+0x10], xmm2; mov [rdi+0x20], cl; ret; 
0x000000000453d8: and byte ptr [rax+0x4], 0x0; add [rcx], al; lea rdi, [rbp+0x988]; call qword ptr [rbp+0xf90]; 
0x0000000009b53c: and byte ptr [rbx+0x50], 0xfe; movups [rbx+0x38], xmm0; movsxd rdi, esi; mov [rbx], rdi; call rcx; 
0x000000000faf64: and byte ptr [rdi+0x38], 0xf9; mov dword ptr [rsi], 0x0; movups [rsi+0x8], xmm0; ret; 
0x0000000004052d: and byte ptr [rsi-0x77], 0x44; and al, 0xf0; mov qword ptr [rsp-0x18], 0x0; fld st, tbyte ptr [rsp-0x18]; ret; 
0x0000000009d1df: and ch, 0x1; je short 0x000000000009d1a5; ret; 
0x000000000b91ef: and ch, 0x1; je short 0x00000000000b91b5; ret; 
0x000000000b9176: and ch, 0x1; lea rdx, [rip+0xcc900]; cmovne rax, rdx; ret; 
0x000000000b8cb6: and ch, 0x1; lea rdx, [rip+0xcd090]; cmovne rax, rdx; ret; 
0x000000000b8e66: and ch, 0x1; lea rdx, [rip+0xcd330]; cmovne rax, rdx; ret; 
0x000000000b8f56: and ch, 0x1; lea rdx, [rip+0xcd990]; cmovne rax, rdx; ret; 
0x000000000b8c76: and ch, 0x1; lea rdx, [rip+0xcda40]; cmovne rax, rdx; ret; 
0x000000000b8dc6: and ch, 0x1; lea rdx, [rip+0xcdd10]; cmovne rax, rdx; ret; 
0x000000000a4f06: and ch, 0x1; lea rdx, [rip+0xd94e0]; cmovne rax, rdx; ret; 
0x0000000009ea16: and ch, 0x1; lea rdx, [rip+0xdf880]; cmovne rax, rdx; ret; 
0x0000000009d166: and ch, 0x1; lea rdx, [rip+0xe0e60]; cmovne rax, rdx; ret; 
0x0000000009ea56: and ch, 0x1; lea rdx, [rip+0xe3350]; cmovne rax, rdx; ret; 
0x0000000009c706: and ch, 0x1; lea rdx, [rip+0xe5890]; cmovne rax, rdx; ret; 
0x0000000009c556: and ch, 0x1; lea rdx, [rip+0xe5c10]; cmovne rax, rdx; ret; 
0x0000000009c596: and ch, 0x1; lea rdx, [rip+0xe5d70]; cmovne rax, rdx; ret; 
0x000000000896ea: and ch, 0x7f; cmp esi, 0x2; cmovne edx, ecx; mov [rdi], edx; ret; 
0x000000000b8538: and ch, 0xf0; pop rbx; cmovne rax, rdx; ret; 
0x000000000cbae2: and ch, 0xf; je short 0x00000000000cbb00; add rax, 0x2; ret; 
0x0000000017e473: and ch, al; std; xlat [rbx]; ret; 
0x000000001541c9: and ch, ch; dec dword ptr [rax-0x77]; ret; 
0x000000000cbacd: and cl, 0xf; je short 0x00000000000cbaf0; ret; 
0x0000000007f425: and cl, [rax-0x75]; mov edi, 0xe0; lea rsi, [rsp+0x8]; call rax; 
0x00000000082475: and cl, [rax-0x77]; fimul st, dword ptr [rcx+rcx*4-0x12]; mov rdi, rbp; call qword ptr [r14+0x38]; 
0x000000001222da: and cl, [rax]; add [rcx+rcx*4-0x2], cl; mov edi, 0x2000006; mov rdx, rax; call qword ptr [rbx+0x28]; 
0x0000000009238a: and cl, [rdi]; adc eax, 0x100; add [rax-0x77], cl; add eax, 0x150ee7; ret; 
0x0000000013375a: and cl, [rsi+0xb]; add [rdi], cl; add eax, 0xffff75e9; jmp qword ptr [rsi+0x2e]; 
0x000000000f6dc8: and cl, bpl; ret far; 
0x0000000015a182: and cl, ch; mov esi, 0xe8fffffd; ret; 
0x000000000f6dc9: and cl, ch; ret far; 
0x000000000caaa9: and cl, ch; sar ebx, 0xff; call qword ptr [rax+0x166f0ff3]; 
0x000000000cac69: and cl, ch; sar esi, 0xff; call qword ptr [rax+0xf6f0ff3]; 
0x00000000075ff0: and cl, ch; shr edi, 0xff; jmp qword ptr [rsi+0x2e]; 
0x000000000b91c4: and dh, 0x2; lea rax, [rip+0x10e62]; lea rdx, [rip+0xd2eab]; cmovne rax, rdx; ret; 
0x000000001277e9: and dh, 0x2; lea rax, [rip+0x62c8d]; lea rdx, [rip+0x62c16]; cmove rax, rdx; ret; 
0x0000000009c65d: and dh, 0x2; lea rax, [rip+0xa2e9]; lea rdx, [rip+0xc1b12]; cmovne rax, rdx; ret; 
0x0000000009d608: and dh, 0x2; lea rax, [rip+0xb8ce]; lea rdx, [rip+0xccec7]; cmovne rax, rdx; ret; 
0x0000000009d1b4: and dh, 0x2; lea rax, [rip+0xb902]; lea rdx, [rip+0xed74b]; cmovne rax, rdx; ret; 
0x0000000009d568: and dh, 0x2; lea rax, [rip+0xb94e]; lea rdx, [rip+0xccf47]; cmovne rax, rdx; ret; 
0x0000000009d658: and dh, 0x2; lea rax, [rip+0xdace]; lea rdx, [rip+0xcefd7]; cmovne rax, rdx; ret; 
0x0000000009d5b8: and dh, 0x2; lea rax, [rip+0xdb4e]; lea rdx, [rip+0xcf057]; cmovne rax, rdx; ret; 
0x0000000009d339: and dh, 0x2; lea rax, [rip+0xed14d]; lea rdx, [rip+0xed0d6]; cmove rax, rdx; ret; 
0x00000000128b6a: and dh, 0x40; lea rax, [rip+0x6186c]; cmove r8, rax; mov rax, r8; ret; 
0x000000000b925a: and dh, 0x40; lea rax, [rip+0xd118c]; cmove r8, rax; mov rax, r8; ret; 
0x000000000b84a3: and dh, 0xf0; mov edx, 0x0; pop rbx; cmove rax, rdx; ret; 
0x0000000003a59a: and dh, [rcx-0x3eb7ffe6]; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x00000000078222: and dil, al; add ch, [rip-0x7d000000]; ret; 
0x000000000a69fe: and dl, [rax]; add [rdi+0x63], cl; or al, 0x8a; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000008c34a: and dl, [rsi]; add [rax], al; mov dword ptr [rbx+0x70], 0xffffffff; pop rbx; ret; 
0x0000000014b8a2: and dl, dh; or [rax], eax; syscall; 
0x00000000165909: and dword ptr [rax*1+0x14634900], 0xffffff93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000084640: and dword ptr [rbx], 0xffffffef; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000008469c: and dword ptr [rbx], 0xffffffef; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000006a5aa: and dword ptr [rcx+0x48fffffa], 0xffffff8d; adc eax, 0x13c756; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000001679ba: and dword ptr [rcx+0x4c000000], 0xffffff8d; sbb eax, 0x5068a; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165c09: and dword ptr [rcx], 0x5; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000091170: and dword ptr [rdi+0x8], 0xfffffffb; xor eax, eax; ret; 
0x0000000009106d: and dword ptr [rdi+0x8], 0xfffffffe; xor eax, eax; ret; 
0x00000000165609: and dword ptr [rdi], 0x5; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000008a414: and dword ptr [rdi], 0xffffffcf; ret; 
0x0000000011cb4b: and dword ptr [rdx+0xc], 0x64ff8900; mov rax, [rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x400; ret; 
0x000000000b6cfd: and dword ptr [rip+0x6349000f], 0xc; xchg ebx, eax; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000084e47: and dword ptr [rsi+0x48], 0xf; outsb dx, [rsi]; ret; 
0x000000000ff775: and eax, 0x0; mov r9, rbx; add r8, r13; call r14; 
0x000000001412dd: and eax, 0x0; mov rcx, r15; call rbp; 
0x0000000002903f: and eax, 0x0; ret; 
0x00000000038c86: and eax, 0x1000; ret; 
0x0000000005fcc0: and eax, 0x100; or eax, 0x7; mov [rdx], eax; mov eax, 0x1; ret; 
0x00000000038c66: and eax, 0x100; ret; 
0x0000000010e627: and eax, 0x100f; ret; 
0x00000000091958: and eax, 0x10; ret; 
0x00000000186a31: and eax, 0x11111111; bsr eax, eax; lea rax, [rdi+rax-0x20]; vzeroupper; ret; 
0x000000000463c7: and eax, 0x18; test eax, eax; jne short 0x00000000000463e0; mov eax, 0x13e; syscall; 
0x000000000de63a: and eax, 0x18; test eax, eax; jne short 0x00000000000de658; mov eax, 0x3d; syscall; 
0x000000000de847: and eax, 0x18; test eax, eax; jne short 0x00000000000de860; mov eax, 0x22; syscall; 
0x00000000106c9a: and eax, 0x18; test eax, eax; jne short 0x0000000000106cb8; mov eax, 0x11; syscall; 
0x00000000106d4a: and eax, 0x18; test eax, eax; jne short 0x0000000000106d68; mov eax, 0x12; syscall; 
0x00000000108b76: and eax, 0x18; test eax, eax; jne short 0x0000000000108be0; mov eax, 0x101; syscall; 
0x00000000108ca7: and eax, 0x18; test eax, eax; jne short 0x0000000000108cc0; syscall; 
0x00000000108d47: and eax, 0x18; test eax, eax; jne short 0x0000000000108d60; mov eax, 0x1; syscall; 
0x000000001091bb: and eax, 0x18; test eax, eax; jne short 0x00000000001091f0; mov eax, 0x48; syscall; 
0x000000001094e7: and eax, 0x18; test eax, eax; jne short 0x0000000000109500; mov eax, 0x3; syscall; 
0x00000000109667: and eax, 0x18; test eax, eax; jne short 0x0000000000109680; mov eax, 0x55; syscall; 
0x0000000010d627: and eax, 0x18; test eax, eax; jne short 0x000000000010d640; mov eax, 0x7; syscall; 
0x0000000010dcca: and eax, 0x18; test eax, eax; jne short 0x000000000010dce8; mov eax, 0x146; syscall; 
0x0000000010e16a: and eax, 0x18; test eax, eax; jne short 0x000000000010e188; mov eax, 0x115; syscall; 
0x0000000010e21a: and eax, 0x18; test eax, eax; jne short 0x000000000010e238; mov eax, 0x11d; syscall; 
0x0000000010f347: and eax, 0x18; test eax, eax; jne short 0x000000000010f360; mov eax, 0x13; syscall; 
0x0000000010f3e7: and eax, 0x18; test eax, eax; jne short 0x000000000010f400; mov eax, 0x14; syscall; 
0x0000000010feca: and eax, 0x18; test eax, eax; jne short 0x000000000010fee8; mov eax, 0x17; syscall; 
0x00000000110107: and eax, 0x18; test eax, eax; jne short 0x0000000000110120; mov eax, 0x4a; syscall; 
0x000000001101c7: and eax, 0x18; test eax, eax; jne short 0x00000000001101e0; mov eax, 0x4b; syscall; 
0x00000000112b33: and eax, 0x18; test eax, eax; jne short 0x0000000000112b48; sub dword ptr [rip+0xd4d0d], 0x1; ret; 
0x00000000113917: and eax, 0x18; test eax, eax; jne short 0x0000000000113930; mov eax, 0x1a; syscall; 
0x0000000011951a: and eax, 0x18; test eax, eax; jne short 0x0000000000119538; mov eax, 0xe8; syscall; 
0x000000001195ca: and eax, 0x18; test eax, eax; jne short 0x00000000001195e8; mov eax, 0x114; syscall; 
0x0000000011967a: and eax, 0x18; test eax, eax; jne short 0x0000000000119698; mov eax, 0x116; syscall; 
0x0000000011972a: and eax, 0x18; test eax, eax; jne short 0x0000000000119748; mov eax, 0x113; syscall; 
0x000000001197f7: and eax, 0x18; test eax, eax; jne short 0x0000000000119810; mov eax, 0x130; syscall; 
0x0000000011a257: and eax, 0x18; test eax, eax; jne short 0x000000000011a270; mov eax, 0x2b; syscall; 
0x0000000011a327: and eax, 0x18; test eax, eax; jne short 0x000000000011a340; mov eax, 0x2a; syscall; 
0x0000000011a54a: and eax, 0x18; test eax, eax; jne short 0x000000000011a568; mov eax, 0x2d; syscall; 
0x0000000011a607: and eax, 0x18; test eax, eax; jne short 0x000000000011a620; mov eax, 0x2f; syscall; 
0x0000000011a767: and eax, 0x18; test eax, eax; jne short 0x000000000011a780; mov eax, 0x2e; syscall; 
0x0000000011a80a: and eax, 0x18; test eax, eax; jne short 0x000000000011a828; mov eax, 0x2c; syscall; 
0x0000000011ac6a: and eax, 0x18; test eax, eax; jne short 0x000000000011ac88; mov eax, 0x120; syscall; 
0x0000000011ad1a: and eax, 0x18; test eax, eax; jne short 0x000000000011ad38; mov eax, 0x12b; syscall; 
0x0000000011adda: and eax, 0x18; test eax, eax; jne short 0x000000000011adf8; mov eax, 0x133; syscall; 
0x0000000011af7a: and eax, 0x18; test eax, eax; jne short 0x000000000011af98; mov eax, 0x45; syscall; 
0x0000000011b02a: and eax, 0x18; test eax, eax; jne short 0x000000000011b048; mov eax, 0x46; syscall; 
0x000000000611c1: and eax, 0x18; test edx, edx; jne short 0x00000000000611d0; sub dword ptr [rdi], 0x1; ret; 
0x000000000808a3: and eax, 0x18; test edx, edx; jne short 0x00000000000808b8; sub dword ptr [rip+0x165d7d], 0x1; ret; 
0x0000000008d587: and eax, 0x18; test edx, edx; jne short 0x000000000008d5a0; sub dword ptr [rip+0x1590d9], 0x1; ret; 
0x0000000008ff03: and eax, 0x18; test edx, edx; jne short 0x000000000008ff18; sub dword ptr [rip+0x15675d], 0x1; ret; 
0x000000000453cb: and eax, 0x19d968; mov rax, fs:[r12]; lock add qword ptr [rax+0x460], 0x1; lea rdi, [rbp+0x988]; call qword ptr [rbp+0xf90]; 
0x000000000992b9: and eax, 0x1; cmovne rax, rdx; ret; 
0x00000000090db7: and eax, 0x1; mov [rsi], eax; xor eax, eax; ret; 
0x0000000011ccf0: and eax, 0x1; mov eax, r8d; ret; 
0x00000000038d06: and eax, 0x1; ret; 
0x00000000044b43: and eax, 0x1a0ae8; cmp rbx, r12; jae short 0x0000000000044b5b; nop [rax]; call qword ptr [rbx]; 
0x00000000038c46: and eax, 0x2000; ret; 
0x00000000038bc6: and eax, 0x200; ret; 
0x00000000050321: and eax, 0x28; jne 0x00000000000503b5; add rsp, 0x10; pop rbx; ret; 
0x0000000009a69a: and eax, 0x28; jne 0x000000000009a752; add rsp, 0x18; ret; 
0x00000000108b9b: and eax, 0x28; jne 0x0000000000108c63; add rsp, 0x78; ret; 
0x000000001091a1: and eax, 0x28; jne 0x0000000000109245; add rsp, 0x68; ret; 
0x000000001092e2: and eax, 0x28; jne 0x000000000010939e; add rsp, 0x30; pop rbx; ret; 
0x00000000109412: and eax, 0x28; jne 0x00000000001094ce; add rsp, 0x30; pop rbx; ret; 
0x0000000010d720: and eax, 0x28; jne 0x000000000010d7c3; add rsp, 0x40; pop r12; ret; 
0x0000000010ffec: and eax, 0x28; jne 0x0000000000110093; add rsp, 0x60; pop rbp; ret; 
0x00000000126d9f: and eax, 0x28; jne 0x0000000000126e7d; leave; ret; 
0x0000000014849a: and eax, 0x28; jne 0x0000000000148523; add rsp, 0x20; pop rbx; ret; 
0x00000000041460: and eax, 0x28; jne short 0x000000000004146c; add rsp, 0x18; ret; 
0x000000000417a3: and eax, 0x28; jne short 0x00000000000417b2; add rsp, 0x148; ret; 
0x000000000418d7: and eax, 0x28; jne short 0x0000000000041904; mov eax, r8d; add rsp, 0x118; ret; 
0x00000000041aeb: and eax, 0x28; jne short 0x0000000000041b34; mov eax, r9d; add rsp, 0x148; ret; 
0x00000000041daf: and eax, 0x28; jne short 0x0000000000041dc5; add rsp, 0x118; ret; 
0x00000000041e32: and eax, 0x28; jne short 0x0000000000041e48; add rsp, 0x118; ret; 
0x00000000041f3d: and eax, 0x28; jne short 0x0000000000041f4c; add rsp, 0x98; ret; 
0x00000000042181: and eax, 0x28; jne short 0x00000000000421b5; add rsp, 0x40; pop rbx; ret; 
0x000000000424a0: and eax, 0x28; jne short 0x00000000000424af; add rsp, 0x148; ret; 
0x00000000042940: and eax, 0x28; jne short 0x000000000004294f; add rsp, 0xa8; ret; 
0x000000000455ee: and eax, 0x28; jne short 0x00000000000455fa; add rsp, 0x28; ret; 
0x000000000456de: and eax, 0x28; jne short 0x00000000000456ea; add rsp, 0x28; ret; 
0x00000000045a12: and eax, 0x28; jne short 0x0000000000045a6a; add rsp, 0x18; ret; 
0x00000000045f68: and eax, 0x28; jne short 0x0000000000045f74; add rsp, 0x18; ret; 
0x00000000045fb5: and eax, 0x28; jne short 0x0000000000045fc1; add rsp, 0x18; ret; 
0x00000000046007: and eax, 0x28; jne short 0x0000000000046013; add rsp, 0x18; ret; 
0x00000000046054: and eax, 0x28; jne short 0x0000000000046060; add rsp, 0x18; ret; 
0x000000000460a7: and eax, 0x28; jne short 0x00000000000460b3; add rsp, 0x18; ret; 
0x000000000460f4: and eax, 0x28; jne short 0x0000000000046100; add rsp, 0x18; ret; 
0x00000000050d40: and eax, 0x28; jne short 0x0000000000050d4f; add rsp, 0xd8; ret; 
0x0000000005229a: and eax, 0x28; jne short 0x00000000000522a9; add rsp, 0xd8; ret; 
0x00000000055915: and eax, 0x28; jne short 0x0000000000055995; leave; ret; 
0x000000000597de: and eax, 0x28; jne short 0x0000000000059800; add rsp, 0x450; pop rbp; ret; 
0x00000000059a2e: and eax, 0x28; jne short 0x0000000000059a72; add rsp, 0x38; ret; 
0x0000000005fd73: and eax, 0x28; jne short 0x000000000005fd82; add rsp, 0xd8; ret; 
0x0000000005fe48: and eax, 0x28; jne short 0x000000000005fe57; add rsp, 0xd8; ret; 
0x0000000005feff: and eax, 0x28; jne short 0x000000000005ff0e; add rsp, 0xd8; ret; 
0x0000000005ffd1: and eax, 0x28; jne short 0x000000000005ffe0; add rsp, 0xd8; ret; 
0x00000000060093: and eax, 0x28; jne short 0x00000000000600a2; add rsp, 0xd8; ret; 
0x00000000060153: and eax, 0x28; jne short 0x0000000000060162; add rsp, 0xd8; ret; 
0x00000000060241: and eax, 0x28; jne short 0x0000000000060250; add rsp, 0xd8; ret; 
0x00000000060318: and eax, 0x28; jne short 0x0000000000060327; add rsp, 0xd8; ret; 
0x0000000006097e: and eax, 0x28; jne short 0x000000000006098e; add rsp, 0x1010; pop rbp; ret; 
0x00000000060f22: and eax, 0x28; jne short 0x0000000000060f37; add rsp, 0x18; ret; 
0x000000000612ab: and eax, 0x28; jne short 0x00000000000612ba; add rsp, 0xd8; ret; 
0x00000000061386: and eax, 0x28; jne short 0x0000000000061395; add rsp, 0xd8; ret; 
0x00000000082e03: and eax, 0x28; jne short 0x0000000000082e12; add rsp, 0xd8; ret; 
0x00000000082ebf: and eax, 0x28; jne short 0x0000000000082ece; add rsp, 0xd8; ret; 
0x00000000082fb8: and eax, 0x28; jne short 0x0000000000082fc7; add rsp, 0xd8; ret; 
0x00000000083088: and eax, 0x28; jne short 0x0000000000083097; add rsp, 0xd8; ret; 
0x00000000083141: and eax, 0x28; jne short 0x0000000000083150; add rsp, 0xd8; ret; 
0x0000000008a3f1: and eax, 0x28; jne short 0x000000000008a409; add rsp, 0x48; ret; 
0x00000000091b38: and eax, 0x28; jne short 0x0000000000091bb7; add rsp, 0x98; ret; 
0x00000000096666: and eax, 0x28; jne short 0x00000000000966a5; add rsp, 0x40; pop rbp; ret; 
0x000000000c610e: and eax, 0x28; jne short 0x00000000000c6134; add rsp, 0x20; pop rbx; ret; 
0x000000000c6beb: and eax, 0x28; jne short 0x00000000000c6bfa; add rsp, 0xd8; ret; 
0x000000000c6cc6: and eax, 0x28; jne short 0x00000000000c6cd5; add rsp, 0xd8; ret; 
0x000000000cc1ce: and eax, 0x28; jne short 0x00000000000cc1e9; add rsp, 0x28; ret; 
0x000000000cc248: and eax, 0x28; jne short 0x00000000000cc255; add rsp, 0x40; pop rbp; ret; 
0x000000000ccff4: and eax, 0x28; jne short 0x00000000000cd036; add rsp, 0x28; ret; 
0x000000000d6537: and eax, 0x28; jne short 0x00000000000d6543; add rsp, 0x18; ret; 
0x000000000d8df7: and eax, 0x28; jne short 0x00000000000d8e03; add rsp, 0x18; ret; 
0x000000000d9abe: and eax, 0x28; jne short 0x00000000000d9ace; add rsp, 0xe0; pop rbx; ret; 
0x000000000d9b56: and eax, 0x28; jne short 0x00000000000d9b66; add rsp, 0xe0; pop rbx; ret; 
0x000000000db2fa: and eax, 0x28; jne short 0x00000000000db353; add rsp, 0x38; ret; 
0x000000000dfbca: and eax, 0x28; jne short 0x00000000000dfc23; add rsp, 0x38; ret; 
0x000000000dfc6a: and eax, 0x28; jne short 0x00000000000dfcc3; add rsp, 0x38; ret; 
0x000000000dff3a: and eax, 0x28; jne short 0x00000000000dffa3; add rsp, 0x38; ret; 
0x000000000dffea: and eax, 0x28; jne short 0x00000000000e0053; add rsp, 0x38; ret; 
0x000000000fd48c: and eax, 0x28; jne short 0x00000000000fd4e6; add rsp, 0x38; ret; 
0x00000000107cc6: and eax, 0x28; jne short 0x0000000000107ce1; add rsp, 0x28; ret; 
0x00000000107e7b: and eax, 0x28; jne short 0x0000000000107e88; add rsp, 0x10; pop rbp; ret; 
0x00000000107f70: and eax, 0x28; jne short 0x0000000000107f7c; add rsp, 0x38; ret; 
0x00000000107fcb: and eax, 0x28; jne short 0x0000000000107fd7; add rsp, 0x18; ret; 
0x0000000010801d: and eax, 0x28; jne short 0x0000000000108029; add rsp, 0x18; ret; 
0x00000000109fb0: and eax, 0x28; jne short 0x000000000010a000; add rsp, 0x130; pop rbp; ret; 
0x0000000010a83e: and eax, 0x28; jne short 0x000000000010a84d; movzx eax, al; add rsp, 0x58; ret; 
0x0000000010df80: and eax, 0x28; jne short 0x000000000010dff4; add rsp, 0xa0; pop rbx; ret; 
0x0000000010e054: and eax, 0x28; jne short 0x000000000010e0cf; add rsp, 0xa0; pop rbx; ret; 
0x0000000010e346: and eax, 0x28; jne short 0x000000000010e393; add rsp, 0x68; ret; 
0x0000000010e3d5: and eax, 0x28; jne short 0x000000000010e423; add rsp, 0x18; ret; 
0x0000000010e48d: and eax, 0x28; jne short 0x000000000010e4db; add rsp, 0x58; ret; 
0x0000000010e52b: and eax, 0x28; jne short 0x000000000010e57b; add rsp, 0x58; ret; 
0x0000000010ea0f: and eax, 0x28; jne short 0x000000000010ea34; mov eax, r9d; add rsp, 0x38; ret; 
0x0000000010ea78: and eax, 0x28; jne short 0x000000000010ea8b; add rsp, 0x18; ret; 
0x0000000010f8fa: and eax, 0x28; jne short 0x000000000010f95b; add rsp, 0x38; ret; 
0x0000000010f99a: and eax, 0x28; jne short 0x000000000010f9fb; add rsp, 0x38; ret; 
0x0000000010fa4f: and eax, 0x28; jne short 0x000000000010facb; add rsp, 0x38; ret; 
0x0000000010fb1f: and eax, 0x28; jne short 0x000000000010fb9b; add rsp, 0x38; ret; 
0x0000000010fc19: and eax, 0x28; jne short 0x000000000010fc25; add rsp, 0x28; ret; 
0x0000000011075f: and eax, 0x28; jne short 0x0000000000110777; add rsp, 0x58; ret; 
0x000000001107d2: and eax, 0x28; jne short 0x00000000001107de; add rsp, 0x28; ret; 
0x000000001108aa: and eax, 0x28; jne short 0x00000000001108ed; add rsp, 0x68; ret; 
0x00000000111a68: and eax, 0x28; jne short 0x0000000000111a74; add rsp, 0x38; ret; 
0x00000000111aeb: and eax, 0x28; jne short 0x0000000000111af7; add rsp, 0x38; ret; 
0x00000000111b5f: and eax, 0x28; jne short 0x0000000000111b6b; add rsp, 0x38; ret; 
0x00000000111bca: and eax, 0x28; jne short 0x0000000000111bd6; add rsp, 0x38; ret; 
0x000000001131d3: and eax, 0x28; jne short 0x00000000001131e2; add rsp, 0xd8; ret; 
0x000000001132ac: and eax, 0x28; jne short 0x00000000001132bb; add rsp, 0xd8; ret; 
0x00000000114604: and eax, 0x28; jne short 0x0000000000114610; add rsp, 0x18; ret; 
0x00000000115d98: and eax, 0x28; jne short 0x0000000000115da7; add rsp, 0xd8; ret; 
0x00000000115e58: and eax, 0x28; jne short 0x0000000000115e67; add rsp, 0xd8; ret; 
0x00000000116036: and eax, 0x28; jne short 0x0000000000116045; add rsp, 0x418; ret; 
0x0000000011629f: and eax, 0x28; jne short 0x00000000001162ae; add rsp, 0xd8; ret; 
0x0000000011650c: and eax, 0x28; jne short 0x000000000011651b; add rsp, 0xd8; ret; 
0x00000000119ad2: and eax, 0x28; jne short 0x0000000000119af3; add rsp, 0x58; ret; 
0x0000000011ac49: and eax, 0x28; jne short 0x000000000011ac55; add rsp, 0x18; ret; 
0x0000000011af48: and eax, 0x28; jne short 0x000000000011af5f; add rsp, 0xa0; pop rbx; ret; 
0x0000000011b1ce: and eax, 0x28; jne short 0x000000000011b223; add rsp, 0x58; ret; 
0x0000000012393a: and eax, 0x28; jne short 0x0000000000123949; add rsp, 0xd8; ret; 
0x00000000125543: and eax, 0x28; jne short 0x0000000000125552; add rsp, 0xd8; ret; 
0x00000000127b28: and eax, 0x28; jne short 0x0000000000127b3c; add rsp, 0xd8; ret; 
0x00000000127c2e: and eax, 0x28; jne short 0x0000000000127c45; add rsp, 0xd8; ret; 
0x00000000127d44: and eax, 0x28; jne short 0x0000000000127d53; add rsp, 0xd8; ret; 
0x00000000127e0c: and eax, 0x28; jne short 0x0000000000127e1b; add rsp, 0xd8; ret; 
0x00000000128c4e: and eax, 0x28; jne short 0x0000000000128c65; add rsp, 0xd8; ret; 
0x00000000128d64: and eax, 0x28; jne short 0x0000000000128d73; add rsp, 0xd8; ret; 
0x00000000128e2c: and eax, 0x28; jne short 0x0000000000128e3b; add rsp, 0xd8; ret; 
0x00000000129273: and eax, 0x28; jne short 0x0000000000129285; add rsp, 0x28; ret; 
0x000000001292d3: and eax, 0x28; jne short 0x00000000001292e5; add rsp, 0x28; ret; 
0x0000000012939c: and eax, 0x28; jne short 0x00000000001293ab; add rsp, 0xd8; ret; 
0x0000000012947c: and eax, 0x28; jne short 0x000000000012948b; add rsp, 0xd8; ret; 
0x0000000012955c: and eax, 0x28; jne short 0x000000000012956b; add rsp, 0xd8; ret; 
0x0000000013101a: and eax, 0x28; jne short 0x0000000000131049; add rsp, 0x38; ret; 
0x000000001310b7: and eax, 0x28; jne short 0x00000000001310c3; add rsp, 0x38; ret; 
0x00000000131124: and eax, 0x28; jne short 0x0000000000131130; add rsp, 0x28; ret; 
0x000000001376c6: and eax, 0x28; jne short 0x00000000001376e4; add rsp, 0x20; pop rbp; ret; 
0x00000000138f64: and eax, 0x28; jne short 0x0000000000138f85; add rsp, 0x20; pop rbx; ret; 
0x00000000138fb9: and eax, 0x28; jne short 0x0000000000138fc5; add rsp, 0x18; ret; 
0x0000000013900c: and eax, 0x28; jne short 0x0000000000139018; add rsp, 0x28; ret; 
0x0000000013989b: and eax, 0x28; jne short 0x00000000001398a7; add rsp, 0x18; ret; 
0x0000000013f788: and eax, 0x28; jne short 0x000000000013f796; add rsp, 0x10; pop r12; ret; 
0x00000000141436: and eax, 0x28; jne short 0x0000000000141443; add rsp, 0x40; pop rbp; ret; 
0x00000000143d2c: and eax, 0x28; jne short 0x0000000000143d73; add rsp, 0x10; pop rbx; ret; 
0x0000000014427d: and eax, 0x28; jne short 0x00000000001442b2; add rsp, 0x10; pop rbx; ret; 
0x0000000014431b: and eax, 0x28; jne short 0x0000000000144355; add rsp, 0x10; pop rbx; ret; 
0x00000000144f50: and eax, 0x28; jne short 0x0000000000144f67; add rsp, 0x40; pop rbx; ret; 
0x0000000014b4ee: and eax, 0x28; jne short 0x000000000014b511; add rsp, 0x10; pop rbx; ret; 
0x0000000014b840: and eax, 0x28; jne short 0x000000000014b8ba; add rsp, 0x10; pop r12; ret; 
0x0000000014bab7: and eax, 0x28; jne short 0x000000000014bb2a; add rsp, 0x30; pop rbx; ret; 
0x0000000014bbf7: and eax, 0x28; jne short 0x000000000014bc6a; add rsp, 0x30; pop rbx; ret; 
0x0000000014d640: and eax, 0x28; jne short 0x000000000014d64c; add rsp, 0x78; ret; 
0x0000000014d6b6: and eax, 0x28; jne short 0x000000000014d6c2; add rsp, 0x78; ret; 
0x0000000014d726: and eax, 0x28; jne short 0x000000000014d732; add rsp, 0x78; ret; 
0x0000000014d796: and eax, 0x28; jne short 0x000000000014d7a2; add rsp, 0x78; ret; 
0x0000000014d7f7: and eax, 0x28; jne short 0x000000000014d803; add rsp, 0x78; ret; 
0x0000000014d85b: and eax, 0x28; jne short 0x000000000014d867; add rsp, 0x78; ret; 
0x0000000014d8c6: and eax, 0x28; jne short 0x000000000014d8d2; add rsp, 0x78; ret; 
0x0000000014d949: and eax, 0x28; jne short 0x000000000014d955; add rsp, 0x78; ret; 
0x0000000014de6c: and eax, 0x28; jne short 0x000000000014de98; add rsp, 0x28; ret; 
0x0000000014f8d1: and eax, 0x28; jne short 0x000000000014f8dd; add rsp, 0x48; ret; 
0x0000000014f93c: and eax, 0x28; jne short 0x000000000014f983; add rsp, 0x10; pop rbx; ret; 
0x0000000014f9cc: and eax, 0x28; jne short 0x000000000014fa12; add rsp, 0x10; pop rbx; ret; 
0x0000000014fa95: and eax, 0x28; jne short 0x000000000014fafb; add rsp, 0x10; pop rbp; ret; 
0x0000000014fefc: and eax, 0x28; jne short 0x000000000014ff44; add rsp, 0x10; pop rbx; ret; 
0x0000000014ff8c: and eax, 0x28; jne short 0x000000000014ffd3; add rsp, 0x10; pop rbx; ret; 
0x0000000015013c: and eax, 0x28; jne short 0x0000000000150189; add rsp, 0x10; pop rbx; ret; 
0x000000001501cc: and eax, 0x28; jne short 0x0000000000150213; add rsp, 0x10; pop rbx; ret; 
0x00000000150f2c: and eax, 0x28; jne short 0x0000000000150f75; add rsp, 0x10; pop rbx; ret; 
0x00000000150fbc: and eax, 0x28; jne short 0x0000000000151005; add rsp, 0x10; pop rbx; ret; 
0x0000000015104c: and eax, 0x28; jne short 0x0000000000151095; add rsp, 0x10; pop rbx; ret; 
0x000000001510dc: and eax, 0x28; jne short 0x0000000000151125; add rsp, 0x10; pop rbx; ret; 
0x000000001517b2: and eax, 0x28; jne short 0x00000000001517c2; add rsp, 0x90; pop rbx; ret; 
0x00000000151826: and eax, 0x28; jne short 0x0000000000151835; movzx eax, al; add rsp, 0x18; ret; 
0x00000000151887: and eax, 0x28; jne short 0x0000000000151896; movzx eax, al; add rsp, 0x18; ret; 
0x000000001518f5: and eax, 0x28; jne short 0x0000000000151902; add rsp, 0x10; pop rbx; ret; 
0x00000000151968: and eax, 0x28; jne short 0x0000000000151975; add rsp, 0x10; pop rbx; ret; 
0x000000001567fd: and eax, 0x28; jne short 0x0000000000156834; add rsp, 0x18; ret; 
0x00000000156af4: and eax, 0x28; jne short 0x0000000000156b2c; add rsp, 0x10; pop rbp; ret; 
0x00000000156b84: and eax, 0x28; jne short 0x0000000000156bbc; add rsp, 0x10; pop rbp; ret; 
0x0000000015991f: and eax, 0x28; jne short 0x000000000015995e; add rsp, 0x58; ret; 
0x00000000159a16: and eax, 0x28; jne short 0x0000000000159a64; add rsp, 0x68; ret; 
0x00000000159baf: and eax, 0x28; jne short 0x0000000000159c14; add rsp, 0x68; ret; 
0x00000000159be5: and eax, 0x28; jne short 0x0000000000159c14; mov rax, [rax+0x18]; add rsp, 0x68; jmp rax; 
0x00000000159c86: and eax, 0x28; jne short 0x0000000000159ce1; add rsp, 0x38; ret; 
0x0000000015a274: and eax, 0x28; jne short 0x000000000015a285; add rsp, 0x28; ret; 
0x0000000015a999: and eax, 0x28; jne short 0x000000000015a9a5; add rsp, 0x28; ret; 
0x0000000015ce06: and eax, 0x28; jne short 0x000000000015ce13; add rsp, 0x10; pop rbx; ret; 
0x0000000015ce8c: and eax, 0x28; jne short 0x000000000015ce99; add rsp, 0x10; pop rbx; ret; 
0x000000000cc33e: and eax, 0x28; mov [rsp+0x58], rax; xor eax, eax; mov [rsp+0x50], r12; call rbx; 
0x0000000015916d: and eax, 0x28; mov [rsp+0x68], rax; xor eax, eax; call qword ptr [r12+0xf88]; 
0x00000000050258: and eax, 0x28; mov [rsp+0x8], rax; xor eax, eax; mov eax, 0x3e; syscall; 
0x0000000014de72: and eax, 0x28c48348; ret; 
0x00000000038b86: and eax, 0x2; ret; 
0x00000000053c98: and eax, 0x2; sub eax, 0x1; ret; 
0x00000000028ce3: and eax, 0x30; call rax; 
0x00000000044a50: and eax, 0x30; call rdx; 
0x00000000029024: and eax, 0x30; jmp rax; 
0x00000000045460: and eax, 0x30; mov fs:[rbx], rdx; mov rdi, [rbp+0x8]; call rax; 
0x00000000137ace: and eax, 0x30; mov qword ptr [rsp], 0x0; call rax; 
0x000000000d9257: and eax, 0x30; pop r13; pop r14; jmp rax; 
0x000000000284a6: and eax, 0x30; rol rax, 0x11; mov [rip+0x1be192], rax; ret; 
0x0000000007f393: and eax, 0x30; test rax, rax; je short 0x000000000007f3a6; mov rdi, [rdi+0xe0]; jmp rax; 
0x0000000007f473: and eax, 0x30; test rax, rax; je short 0x000000000007f490; mov rdi, [rdi+0xe0]; jmp rax; 
0x00000000107e4c: and eax, 0x31001f0f; shl byte ptr [rcx], cl; test byte ptr [rax-0x77], 0xef; mov eax, 0x135; syscall; 
0x0000000003bd8a: and eax, 0x34e90017; idiv edi; jmp qword ptr [rsi+0xf]; 
0x000000001199d3: and eax, 0x3; ret; 
0x000000000b84be: and eax, 0x3fc00; ret; 
0x000000000b85b8: and eax, 0x3fffc00; div ecx; mov eax, eax; ret; 
0x000000000b8509: and eax, 0x3fffc00; ret; 
0x00000000038c06: and eax, 0x4000; ret; 
0x00000000038b66: and eax, 0x400; ret; 
0x00000000148d47: and eax, 0x40c48348; pop rbx; pop rbp; pop r12; ret; 
0x0000000010e507: and eax, 0x410000; cmp eax, 0x410000; je short 0x000000000010e540; mov eax, 0x101; syscall; 
0x00000000082712: and eax, 0x441f0f; add [rdx+0x10], bh; mov rsi, r13; mov rdi, r15; call qword ptr [r14+0x38]; 
0x0000000018e777: and eax, 0x4800029f; movsxd eax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000009b870: and eax, 0x487b8b48; mov rsi, r14; call rax; 
0x00000000147867: and eax, 0x49000001; mov eax, [rbp+0xd0]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x00000000164e67: and eax, 0x4900052b; movsxd edx, [rbx+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162f67: and eax, 0x4900054a; movsxd edx, [rbx+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000038c26: and eax, 0x4; ret; 
0x000000000b6c87: and eax, 0x6349000f; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000083eda: and eax, 0x6e0f4866; ret; 
0x00000000038d76: and eax, 0x7f; ret; 
0x000000000b85a1: and eax, 0x7ff80000; div esi; mov eax, eax; ret; 
0x000000000b8557: and eax, 0x7ff80000; ret; 
0x00000000040472: and eax, 0x7fff; or eax, edx; mov [rsp+0x10], eax; fld st, tbyte ptr [rsp+0x8]; ret; 
0x00000000055ca4: and eax, 0x7fffff; or esi, eax; or esi, edx; movd xmm0, esi; ret; 
0x00000000038be6: and eax, 0x8000; ret; 
0x00000000038ba6: and eax, 0x800; ret; 
0x000000000895e6: and eax, 0x804; ret; 
0x00000000040a98: and eax, 0x80; ret; 
0x0000000007b3f7: and eax, 0x83fffff4; call far fword ptr [rdx+0xf]; 
0x0000000004052b: and eax, 0x89668000; and al, 0xf0; mov qword ptr [rsp-0x18], 0x0; fld st, tbyte ptr [rsp-0x18]; ret; 
0x00000000038b46: and eax, 0x8; ret; 
0x0000000009d3b5: and eax, 0x8d48000c; adc eax, 0xc7ad1; cmovne rax, rdx; ret; 
0x0000000003bd0f: and eax, 0xafe90017; idiv edi; jmp qword ptr [rsi+0xf]; 
0x00000000090ac0: and eax, 0xc; cmp eax, 0x4; je short 0x0000000000090a9c; pop rbx; ret; 
0x00000000091c77: and eax, 0xc; pop rbx; pop rbp; ret; 
0x0000000005301f: and eax, 0xf70018fe; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x000000000b848c: and eax, 0xf; movsxd rcx, [rsi+rax*4]; add rcx, rsi; notrack jmp rcx; 
0x000000000fd8b4: and eax, 0xf; ret; 
0x00000000188620: and eax, 0xff; and ecx, 0xff; sub eax, ecx; ret; 
0x00000000187d53: and eax, 0xffff; and ecx, 0xffff; sub eax, ecx; ret; 
0x0000000010e66d: and eax, 0xffffeff0; or esi, eax; xor eax, eax; mov [rdi+0x8], esi; ret; 
0x00000000118f7a: and eax, 0xfffff000; or eax, edx; ret; 
0x000000001297ea: and eax, 0xffffff; ret; 
0x00000000110801: and eax, 0xfffffff0; add eax, 0x26; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000136237: and eax, 0xfffffff8; add eax, 0x10; ret; 
0x00000000142fcf: and eax, 0xfffffffc; and edx, 0xfffffffc; lea esi, [rax+rdx+0x28]; mov rax, [rdi+0x8]; call qword ptr [rax+0x30]; 
0x000000000910b0: and eax, 0xfffffffd; mov [rdi+0x8], eax; xor eax, eax; ret; 
0x000000001509d6: and eax, 0xffffffff; mov [rsp], rax; mov rax, [rbp+0x8]; call qword ptr [rax+0x8]; 
0x0000000014379f: and eax, [rax]; add [rax], al; add [rax], al; add [rcx+rcx*4-0x19], cl; call qword ptr [rax+0x28]; 
0x0000000016c7f5: and eax, [rax]; add [rbp-0x77], cl; ret far; 
0x000000001437bf: and eax, [rax]; add [rcx+rcx*4-0x19], cl; call qword ptr [rax+0x20]; 
0x00000000143816: and eax, [rax]; add [rcx+rcx*4-0x19], cl; call qword ptr [rax+0x28]; 
0x0000000010e829: and eax, [rcx+rcx*4-0x40]; movups [rsp+0x11], xmm0; syscall; 
0x00000000119d45: and eax, [rcx]; add [rax], al; syscall; 
0x00000000099e4e: and eax, [rcx]; mov [rbp], rax; test rax, rax; je 0x0000000000099f30; call rax; 
0x0000000015a5fe: and eax, [rdi+rsi*8]; setne al; movzx eax, al; ret; 
0x000000000423ea: and eax, [rdi]; setne al; movzx eax, al; ret; 
0x00000000172169: and eax, [rdx]; add [rax], al; ret; 
0x0000000004254d: and eax, [rdx]; mov [rdi], rax; xor eax, eax; ret; 
0x00000000165847: and eax, [rip+0x14634900]; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000009af2c: and eax, [rsi+0x11]; add al, ch; fwait; cld; jmp qword ptr [rbx+rcx*4+0x4]; 
0x00000000040b7f: and eax, [rsp-0x4]; sub eax, 0x7f800000; shr eax, 0x1f; ret; 
0x000000000407b8: and eax, [rsp-0x8]; sub rax, rdx; shr rax, 0x3f; ret; 
0x000000000adc02: and eax, ecx; je 0x00000000000addd0; bsr rax, rax; add rax, rdi; ret; 
0x00000000121710: and eax, ecx; mov [rsp+0x20], cl; mov [rsp+0x1f], al; call qword ptr [r12+0x28]; 
0x00000000059185: and eax, ecx; or rax, rdx; mov [rsp-0x10], rax; movdqa xmm0, [rsp-0x18]; ret; 
0x000000000403f3: and eax, ecx; ret; 
0x0000000018c6f9: and eax, edi; mov rdi, 0x101010101010101; imul rax, rdi; shr rax, 0x38; ret; 
0x00000000118ff3: and eax, edi; or rax, rsi; ret; 
0x00000000040a3e: and eax, edx; mov rdx, 0x3fe0000000000000; or rax, rdx; movq xmm0, rax; ret; 
0x0000000004088c: and eax, edx; movq xmm1, rax; mov [rdi], rax; subsd xmm0, xmm1; ret; 
0x00000000040773: and eax, edx; ret; 
0x00000000040ee9: and eax, edx; sub rax, rdx; shr rax, 0x3f; ret; 
0x00000000038f51: and eax, esi; ret; 
0x0000000004d669: and ebp, [rsi]; add [rax-0x7d], cl; ret; 
0x000000000b91eb: and ebp, eax; or al, 0x0; and ch, 0x1; je short 0x00000000000b91b5; ret; 
0x00000000084641: and ebp, edi; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000008469d: and ebp, edi; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000000eacdf: and ebx, 0x8; je short 0x00000000000eac67; pop rbx; ret; 
0x000000000b86c5: and ebx, 0xfff; lea rax, [rbx+0x1]; pop rbx; ret; 
0x00000000082264: and ebx, [rbx+0x4c]; mov eax, eax; pop rbp; pop r12; ret; 
0x0000000013c88d: and ebx, [rbx+0x5d]; pop r12; ret; 
0x000000000de880: and ebx, edi; dec dword ptr [rbx+0x480c2444]; add esp, 0x18; ret; 
0x000000000de865: and ebx, edi; dec dword ptr [rcx+0x22b8c7]; add [rax], al; syscall; 
0x0000000003839b: and ebx, edx; sbb al, [rax]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000b84d8: and ecx, 0x3fc00; cmp edx, 0xff; cmove rax, rcx; ret; 
0x00000000045f26: and ecx, 0x3ff; xor eax, ecx; ret; 
0x000000000e7e40: and ecx, 0x4; je short 0x00000000000e7ddc; mov byte ptr [rdi+0x8], 0x1e; mov eax, 0x2; ret; 
0x000000000eac7e: and ecx, 0x80; cmovne eax, edx; pop rbx; ret; 
0x00000000188625: and ecx, 0xff; sub eax, ecx; ret; 
0x00000000187d58: and ecx, 0xffff; sub eax, ecx; ret; 
0x000000000425ec: and ecx, [rbp+0x15890150]; mov dh, 0xb; sbb al, [rax]; ret; 
0x0000000007c7b4: and ecx, [rbp-0x76bb76f4]; ret; 
0x000000000cc00c: and ecx, [rcx+rcx*4-0x20]; pop r12; ret; 
0x00000000092ac5: and ecx, [rcx+rcx*4-0x20]; pop rbx; pop rbp; pop r12; ret; 
0x0000000009d90d: and ecx, [rcx+rcx*4-0x30]; pop rbx; pop rbp; pop r12; ret; 
0x00000000111dec: and ecx, [rcx+rcx*4-0x40]; mov byte ptr [rsi-0x1], 0x0; ret; 
0x000000000bc24f: and ecx, [rcx-0x7d]; ret; 
0x000000000b6f10: and ecx, [rdi]; add [rbx+0x63], cl; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000011d3c2: and ecx, [rsi+0x10]; lea rcx, [rsi+rcx*4]; add eax, [rcx+rdx]; ret; 
0x00000000183dd7: and ecx, ebp; ret; 
0x000000000409c3: and ecx, edx; or rax, rcx; movq xmm0, rax; mulsd xmm0, [rip+0x17631b]; ret; 
0x0000000004091f: and ecx, edx; or rcx, rax; movq xmm0, rcx; ret; 
0x000000000fd85a: and ecx, esi; cmp ecx, [rax-0xc]; jne short 0x00000000000fd850; mov eax, [rdx+0x8]; ret; 
0x00000000190d07: and edi, 0x20; je short 0x0000000000190d1c; movss xmm0, [rip+0x266bc]; divss xmm0, [rip+0x279c8]; ret; 
0x00000000038d86: and edi, 0xffffff80; sete al; ret; 
0x00000000111c6e: and edi, 0xfffffff0; add edi, 0x26; mov fs:[rax], edi; mov eax, 0xffffffff; ret; 
0x0000000007f8fd: and edi, [rbx-0x6]; jmp qword ptr [rsi+0x2e]; 
0x000000000de6a0: and edi, ebx; dec dword ptr [rbx+0x48102444]; add esp, 0x28; ret; 
0x0000000012855b: and edi, esi; call qword ptr [rax-0x18]; 
0x0000000014734e: and edi, esi; jmp qword ptr [rsi+0x66]; 
0x00000000114723: and edi, esp; or al, 0x0; mov dword ptr fs:[rax], 0x16; ret; 
0x000000000eac7b: and edx, 0x1; and ecx, 0x80; cmovne eax, edx; pop rbx; ret; 
0x00000000087683: and edx, 0x1; mov eax, edx; ret; 
0x0000000009c1b0: and edx, 0x40; lea rax, [rip+0x115b6]; lea rdx, [rip+0xee42f]; cmovne rax, rdx; ret; 
0x00000000145adf: and edx, 0x7f; movzx eax, byte ptr [rax+rdx]; mov [rdi+0x7], al; ret; 
0x00000000045e47: and edx, 0x7fffffff; mov [rax], edx; mov [rsi], edx; mov eax, r8d; ret; 
0x000000000405d3: and edx, 0x7fffffff; or edx, esi; je 0x0000000000040528; ret; 
0x00000000040b5d: and edx, 0x7fffffff; sub eax, edx; shr eax, 0x1f; ret; 
0x000000000d2b6b: and edx, 0x80402000; call qword ptr [rax]; 
0x000000001276fe: and edx, 0x8; lea rax, [rip+0x381e8]; lea rdx, [rip+0x3d771]; cmovne rax, rdx; ret; 
0x0000000012755e: and edx, 0x8; lea rax, [rip+0x383a8]; lea rdx, [rip+0x3d931]; cmovne rax, rdx; ret; 
0x0000000012762e: and edx, 0x8; lea rax, [rip+0x3acb8]; lea rdx, [rip+0x40351]; cmovne rax, rdx; ret; 
0x0000000009d72e: and edx, 0x8; lea rax, [rip+0xc21e8]; lea rdx, [rip+0xc7771]; cmovne rax, rdx; ret; 
0x0000000009d3ae: and edx, 0x8; lea rax, [rip+0xc2548]; lea rdx, [rip+0xc7ad1]; cmovne rax, rdx; ret; 
0x0000000009d24e: and edx, 0x8; lea rax, [rip+0xc50a8]; lea rdx, [rip+0xca741]; cmovne rax, rdx; ret; 
0x000000001297d3: and edx, 0xc0000000; cmp edx, 0x80000000; cmovne eax, edi; ret; 
0x00000000129861: and edx, 0xc0000000; shr eax, 0x10; cmp edx, 0x80000000; cmovne eax, edi; ret; 
0x00000000090a83: and edx, 0xc; cmp edx, 0x4; je short 0x0000000000090a90; ret; 
0x000000000b851e: and edx, 0xf; movsxd rax, [rsi+rdx*4]; add rax, rsi; notrack jmp rax; 
0x00000000118f74: and edx, 0xfff; and eax, 0xfffff000; or eax, edx; ret; 
0x00000000090a01: and edx, 0xffffffbb; cmp edx, 0xa; je short 0x0000000000090a15; mov eax, r8d; ret; 
0x00000000142fd2: and edx, 0xfffffffc; lea esi, [rax+rdx+0x28]; mov rax, [rdi+0x8]; call qword ptr [rax+0x30]; 
0x000000000d0ae4: and edx, [rcx]; add [rbp+0x31], al; ror byte ptr [rcx-0x3f76b3fe], 0x48; add esp, 0x8; ret; 
0x000000000408ab: and edx, eax; mov [rdi], rdx; ret; 
0x00000000040bf2: and edx, eax; movd xmm1, edx; mov [rdi], edx; subss xmm0, xmm1; ret; 
0x0000000004083c: and edx, eax; movq xmm0, rdx; ret; 
0x0000000009d778: and esi, 0x200; lea rdx, [rip+0x1a63b]; lea rax, [rip+0x1a714]; cmove rax, rdx; ret; 
0x0000000009d3f8: and esi, 0x200; lea rdx, [rip+0x1a99b]; lea rax, [rip+0x1aa74]; cmove rax, rdx; ret; 
0x0000000009d298: and esi, 0x200; lea rdx, [rip+0x1ab1b]; lea rax, [rip+0x1abf4]; cmove rax, rdx; ret; 
0x000000001276d0: and esi, 0x200; lea rdx, [rip+0x5da03]; lea rax, [rip+0x5da6c]; cmove rax, rdx; ret; 
0x00000000127600: and esi, 0x200; lea rdx, [rip+0x5daf3]; lea rax, [rip+0x5db5c]; cmove rax, rdx; ret; 
0x00000000127530: and esi, 0x200; lea rdx, [rip+0x5dbc3]; lea rax, [rip+0x5dc2c]; cmove rax, rdx; ret; 
0x00000000127729: and esi, 0x200; lea rdx, [rip+0x6272a]; lea rax, [rip+0x62793]; cmove rax, rdx; ret; 
0x00000000127659: and esi, 0x200; lea rdx, [rip+0x6281a]; lea rax, [rip+0x62883]; cmove rax, rdx; ret; 
0x00000000127589: and esi, 0x200; lea rdx, [rip+0x628ea]; lea rax, [rip+0x62953]; cmove rax, rdx; ret; 
0x0000000009d700: and esi, 0x200; lea rdx, [rip+0xe7a03]; lea rax, [rip+0xe7a6c]; cmove rax, rdx; ret; 
0x0000000009d380: and esi, 0x200; lea rdx, [rip+0xe7d63]; lea rax, [rip+0xe7dcc]; cmove rax, rdx; ret; 
0x0000000009d220: and esi, 0x200; lea rdx, [rip+0xe7ee3]; lea rax, [rip+0xe7f4c]; cmove rax, rdx; ret; 
0x0000000009d759: and esi, 0x200; lea rdx, [rip+0xec72a]; lea rax, [rip+0xec793]; cmove rax, rdx; ret; 
0x0000000009d3d9: and esi, 0x200; lea rdx, [rip+0xeca8a]; lea rax, [rip+0xecaf3]; cmove rax, rdx; ret; 
0x0000000009d279: and esi, 0x200; lea rdx, [rip+0xecc0a]; lea rax, [rip+0xecc73]; cmove rax, rdx; ret; 
0x000000001275a8: and esi, 0x200; lea rdx, [rip-0x6f805]; lea rax, [rip-0x6f72c]; cmove rax, rdx; ret; 
0x00000000127678: and esi, 0x200; lea rdx, [rip-0x6f8d5]; lea rax, [rip-0x6f7fc]; cmove rax, rdx; ret; 
0x00000000127748: and esi, 0x200; lea rdx, [rip-0x6f9c5]; lea rax, [rip-0x6f8ec]; cmove rax, rdx; ret; 
0x00000000140f0a: and esi, 0x7; movsxd rax, [rcx+rsi*4]; shr rdx, 0x3; add rax, rcx; notrack jmp rax; 
0x00000000040c00: and esi, 0x80000000; mov [rdi], esi; ret; 
0x00000000040c30: and esi, 0x80000000; movd xmm0, esi; ret; 
0x00000000040bdd: and esi, 0x80000000; movss [rdi], xmm0; movd xmm0, esi; ret; 
0x00000000040c8b: and esi, 0x807fffff; shl edi, 0x17; or esi, edi; movd xmm0, esi; ret; 
0x000000001297fc: and esi, 0xffffff; mov eax, edi; or eax, esi; bswap eax; ret; 
0x000000001430cc: and esi, 0xfffffffc; call qword ptr [rax+0x30]; 
0x0000000010f1f5: and esi, [rcx]; neg byte ptr [rbx+0x31]; call far fword ptr [rbp+0x41]; 
0x000000000388b4: and esi, [rdi+0x10]; lea rdx, [rdi+rsi*4]; mov r8d, [rdx+rax]; mov eax, r8d; ret; 
0x0000000011d1d2: and esi, [rdx+0x10]; lea rdx, [rdx+rsi*4]; add eax, [rdx+rcx]; ret; 
0x000000000ade92: and esi, eax; je 0x00000000000addd0; bsr rax, rsi; add rax, rdi; ret; 
0x000000000f4183: and esi, ebx; jmp qword ptr [rsi+0xf]; 
0x000000000adc9c: and esi, ecx; je 0x00000000000addd0; bsr rsi, rsi; lea rax, [rdi+rsi]; ret; 
0x000000000442d7: and esi, edi; dec dword ptr [rax-0x77]; ret; 
0x0000000012e1e0: and esp, [rcx+0x6401000b]; mov [r8], r9d; add rsp, 0x18; ret; 
0x0000000014bb2b: and esp, ebx; std; call qword ptr [rax-0x5e1f00d]; 
0x00000000090a82: and r10, 0xc; cmp edx, 0x4; je short 0x0000000000090a90; ret; 
0x0000000010df07: and r11b, r8b; nop [rax+rax]; mov qword ptr [rdi], 0x0; ret; 
0x000000000b4126: and r11b, r8b; nop [rax]; ret; 
0x0000000011ccef: and r8d, 0x1; mov eax, r8d; ret; 
0x0000000009d3b4: and rax, 0xffffffff8d48000c; adc eax, 0xc7ad1; cmovne rax, rdx; ret; 
0x0000000015a5fd: and rax, [rdi+rsi*8]; setne al; movzx eax, al; ret; 
0x000000000423e9: and rax, [rdi]; setne al; movzx eax, al; ret; 
0x0000000004254c: and rax, [rdx]; mov [rdi], rax; xor eax, eax; ret; 
0x000000000407b7: and rax, [rsp-0x8]; sub rax, rdx; shr rax, 0x3f; ret; 
0x000000000adc01: and rax, rcx; je 0x00000000000addd0; bsr rax, rax; add rax, rdi; ret; 
0x00000000059184: and rax, rcx; or rax, rdx; mov [rsp-0x10], rax; movdqa xmm0, [rsp-0x18]; ret; 
0x0000000018c6f8: and rax, rdi; mov rdi, 0x101010101010101; imul rax, rdi; shr rax, 0x38; ret; 
0x00000000118ff2: and rax, rdi; or rax, rsi; ret; 
0x00000000040a3d: and rax, rdx; mov rdx, 0x3fe0000000000000; or rax, rdx; movq xmm0, rax; ret; 
0x0000000004088b: and rax, rdx; movq xmm1, rax; mov [rdi], rax; subsd xmm0, xmm1; ret; 
0x00000000040ee8: and rax, rdx; sub rax, rdx; shr rax, 0x3f; ret; 
0x000000000409c2: and rcx, rdx; or rax, rcx; movq xmm0, rax; mulsd xmm0, [rip+0x17631b]; ret; 
0x0000000004091e: and rcx, rdx; or rcx, rax; movq xmm0, rcx; ret; 
0x000000001276fd: and rdx, 0x8; lea rax, [rip+0x381e8]; lea rdx, [rip+0x3d771]; cmovne rax, rdx; ret; 
0x0000000012755d: and rdx, 0x8; lea rax, [rip+0x383a8]; lea rdx, [rip+0x3d931]; cmovne rax, rdx; ret; 
0x0000000012762d: and rdx, 0x8; lea rax, [rip+0x3acb8]; lea rdx, [rip+0x40351]; cmovne rax, rdx; ret; 
0x0000000009d72d: and rdx, 0x8; lea rax, [rip+0xc21e8]; lea rdx, [rip+0xc7771]; cmovne rax, rdx; ret; 
0x0000000009d3ad: and rdx, 0x8; lea rax, [rip+0xc2548]; lea rdx, [rip+0xc7ad1]; cmovne rax, rdx; ret; 
0x0000000009d24d: and rdx, 0x8; lea rax, [rip+0xc50a8]; lea rdx, [rip+0xca741]; cmovne rax, rdx; ret; 
0x000000000408aa: and rdx, rax; mov [rdi], rdx; ret; 
0x0000000004083b: and rdx, rax; movq xmm0, rdx; ret; 
0x000000000ade91: and rsi, rax; je 0x00000000000addd0; bsr rax, rsi; add rax, rdi; ret; 
0x000000000adc9b: and rsi, rcx; je 0x00000000000addd0; bsr rsi, rsi; lea rax, [rdi+rsi]; ret; 
0x00000000040b9f: andnps xmm3, xmm1; orps xmm0, xmm3; ret; 
0x000000000407d4: andpd xmm0, [rip+0x175f14]; andpd xmm1, [rip+0x175efc]; orpd xmm0, xmm1; ret; 
0x00000000040956: andpd xmm1, [rip+0x175d82]; movsd xmm0, [rip+0x17637a]; orpd xmm1, [rip+0x175d92]; mulsd xmm0, xmm1; ret; 
0x00000000040930: andpd xmm1, [rip+0x175da8]; movsd xmm0, [rip+0x1763a8]; orpd xmm1, [rip+0x175dc8]; mulsd xmm0, xmm1; ret; 
0x000000000407dc: andpd xmm1, [rip+0x175efc]; orpd xmm0, xmm1; ret; 
0x00000000040cc9: andps xmm0, [rip+0x175a50]; orps xmm0, [rip+0x175a59]; mulss xmm0, [rip+0x1766f9]; ret; 
0x00000000040ca4: andps xmm0, [rip+0x175a75]; orps xmm0, [rip+0x175a8e]; mulss xmm0, [rip+0x176722]; ret; 
0x000000000407d5: andps xmm0, [rip+0x175f14]; andpd xmm1, [rip+0x175efc]; orpd xmm0, xmm1; ret; 
0x00000000040b9c: andps xmm0, xmm3; andnps xmm3, xmm1; orps xmm0, xmm3; ret; 
0x00000000040957: andps xmm1, [rip+0x175d82]; movsd xmm0, [rip+0x17637a]; orpd xmm1, [rip+0x175d92]; mulsd xmm0, xmm1; ret; 
0x00000000040931: andps xmm1, [rip+0x175da8]; movsd xmm0, [rip+0x1763a8]; orpd xmm1, [rip+0x175dc8]; mulsd xmm0, xmm1; ret; 
0x000000000407dd: andps xmm1, [rip+0x175efc]; orpd xmm0, xmm1; ret; 
0x00000000085385: bnd call qword ptr [rax+0x70]; 
0x00000000128600: bnd call qword ptr [rax-0x18]; 
0x0000000008d13b: bnd call qword ptr [rbp+0x70]; 
0x00000000042de0: bnd call rbp; 
0x00000000160f7c: bnd jb short 0x0000000000160f87; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016102c: bnd jb short 0x0000000000161037; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016395c: bnd jb short 0x0000000000163967; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000163a0c: bnd jb short 0x0000000000163a17; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000000405da: bnd je 0x0000000000040528; ret; 
0x000000000a4b49: bnd je short 0x00000000000a4b40; ret; 
0x000000000a4b85: bnd je short 0x00000000000a4b78; ret; 
0x000000000ba438: bnd je short 0x00000000000ba43f; test edx, edx; jne short 0x00000000000ba430; ret; 
0x000000000de596: bnd je short 0x00000000000de5b0; cmp rax, 0xffffffffffffffff; mov edx, 0x0; cmove rax, rdx; ret; 
0x000000000f9994: bnd jmp qword ptr [rbx+rcx*4+0x4]; 
0x000000000fd3e4: bnd jmp qword ptr [rsi+0x2e]; 
0x000000001160df: bnd jmp qword ptr [rsi+0x66]; 
0x000000000f644b: bnd jmp qword ptr [rsi+0xf]; 
0x00000000102cb7: bnd jmp qword ptr [rsi+0xf]; 
0x0000000008e94a: bnd jns short 0x000000000008e946; jmp qword ptr [rsi+0xf]; 
0x0000000017e251: bsf eax, eax; add rax, 0x20; add rax, rdi; vzeroupper; ret; 
0x0000000017e261: bsf eax, eax; add rax, 0x40; add rax, rdi; vzeroupper; ret; 
0x0000000017e28f: bsf eax, eax; add rax, 0x60; add rax, rdi; vzeroupper; ret; 
0x00000000181e24: bsf eax, eax; add rax, rcx; add rax, rdi; vzeroupper; ret; 
0x000000000a854a: bsf eax, eax; add rax, rdi; add rax, rcx; ret; 
0x0000000017e2f6: bsf eax, eax; add rax, rdi; add rax, rcx; vzeroupper; ret; 
0x000000000a8460: bsf eax, eax; add rax, rdi; ret; 
0x00000000182281: bsf eax, eax; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x0000000017e241: bsf eax, eax; add rax, rdi; vzeroupper; ret; 
0x000000000a8470: bsf eax, eax; lea rax, [rax+rdi+0x10]; ret; 
0x000000000a8480: bsf eax, eax; lea rax, [rax+rdi+0x20]; ret; 
0x000000000a8450: bsf eax, eax; lea rax, [rax+rdi-0x10]; ret; 
0x000000000a83af: bsf eax, eax; lea rax, [rdi+rax+0x30]; ret; 
0x000000000ad9e7: bsf eax, eax; lea rax, [rdi+rax]; ret; 
0x000000000a8490: bsf eax, eax; sub rdx, rax; jbe short 0x00000000000a84d0; add rax, rdi; ret; 
0x000000000a84a0: bsf eax, eax; sub rdx, rax; jbe short 0x00000000000a84d0; lea rax, [rdi+rax+0x10]; ret; 
0x000000000a84b0: bsf eax, eax; sub rdx, rax; jbe short 0x00000000000a84d0; lea rax, [rdi+rax+0x20]; ret; 
0x000000000a84c0: bsf eax, eax; sub rdx, rax; jbe short 0x00000000000a84d0; lea rax, [rdi+rax+0x30]; ret; 
0x000000000ca390: bsf eax, eax; sub rdx, rax; jbe short 0x00000000000ca3d0; add rax, rdi; ret; 
0x000000000ca3a0: bsf eax, eax; sub rdx, rax; jbe short 0x00000000000ca3d0; lea rax, [rdi+rax+0x10]; ret; 
0x000000000ca3b0: bsf eax, eax; sub rdx, rax; jbe short 0x00000000000ca3d0; lea rax, [rdi+rax+0x20]; ret; 
0x000000000ca3c0: bsf eax, eax; sub rdx, rax; jbe short 0x00000000000ca3d0; lea rax, [rdi+rax+0x30]; ret; 
0x0000000009d439: bsf eax, edi; cmove eax, edx; add eax, 0x1; ret; 
0x0000000009d45c: bsf eax, edi; cmove rax, rdx; add eax, 0x1; ret; 
0x000000000adeea: bsf eax, edx; ret; 
0x000000000cb737: bsf eax, edx; shr rax, 0x2; ret; 
0x000000000a684a: bsf ecx, ecx; movzx eax, byte ptr [rax+rcx]; movzx edx, byte ptr [rdx+rcx]; sub eax, edx; ret; 
0x000000000a6910: bsf ecx, edi; movzx eax, byte ptr [rax+rcx]; movzx edx, byte ptr [rdx+rcx]; sub eax, edx; ret; 
0x000000000a66e0: bsf edx, eax; movzx eax, byte ptr [rdi+rdx]; movzx edx, byte ptr [rsi+rdx]; sub eax, edx; ret; 
0x000000000ae042: bsf edx, edx; add rax, rdx; sub rax, rdi; ret; 
0x000000000cb847: bsf edx, edx; add rax, rdx; sub rax, rdi; shr rax, 0x2; ret; 
0x000000000b6d71: bsf edx, edx; lea r11, [rip+0xf2509]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6d39: bsf edx, edx; lea r11, [rip+0xf2541]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6d14: bsf edx, edx; lea r11, [rip+0xf2566]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6cf7: bsf edx, edx; lea r11, [rip+0xf2583]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b63e1: bsf edx, edx; lea r11, [rip+0xf2e19]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b63a9: bsf edx, edx; lea r11, [rip+0xf2e51]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6384: bsf edx, edx; lea r11, [rip+0xf2e76]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6367: bsf edx, edx; lea r11, [rip+0xf2e93]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b4e1d: bsf edx, edx; lea r11, [rip+0xf4289]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b4df4: bsf edx, edx; lea r11, [rip+0xf42b2]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b4711: bsf edx, edx; lea r11, [rip+0xf4909]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b46d9: bsf edx, edx; lea r11, [rip+0xf4941]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b46b4: bsf edx, edx; lea r11, [rip+0xf4966]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b4697: bsf edx, edx; lea r11, [rip+0xf4983]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b374d: bsf edx, edx; lea r11, [rip+0xf5779]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b3724: bsf edx, edx; lea r11, [rip+0xf57a2]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b30d1: bsf edx, edx; lea r11, [rip+0xf5d6d]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b3099: bsf edx, edx; lea r11, [rip+0xf5da5]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b3074: bsf edx, edx; lea r11, [rip+0xf5dca]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b3057: bsf edx, edx; lea r11, [rip+0xf5de7]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000a6671: bsf edx, edx; movzx ecx, byte ptr [rsi+rdx]; movzx eax, byte ptr [rdi+rdx]; sub eax, ecx; ret; 
0x000000000adb00: bsf rax, rax; lea rax, [rdi+rax]; ret; 
0x0000000009d45b: bsf rax, rdi; cmove rax, rdx; add eax, 0x1; ret; 
0x000000000adf32: bsf rax, rdx; ret; 
0x000000000cb736: bsf rax, rdx; shr rax, 0x2; ret; 
0x000000000a6849: bsf rcx, rcx; movzx eax, byte ptr [rax+rcx]; movzx edx, byte ptr [rdx+rcx]; sub eax, edx; ret; 
0x000000000a690f: bsf rcx, rdi; movzx eax, byte ptr [rax+rcx]; movzx edx, byte ptr [rdx+rcx]; sub eax, edx; ret; 
0x000000000a66df: bsf rdx, rax; movzx eax, byte ptr [rdi+rdx]; movzx edx, byte ptr [rsi+rdx]; sub eax, edx; ret; 
0x000000000ae041: bsf rdx, rdx; add rax, rdx; sub rax, rdi; ret; 
0x000000000cb846: bsf rdx, rdx; add rax, rdx; sub rax, rdi; shr rax, 0x2; ret; 
0x000000000b6d70: bsf rdx, rdx; lea r11, [rip+0xf2509]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6d38: bsf rdx, rdx; lea r11, [rip+0xf2541]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6d13: bsf rdx, rdx; lea r11, [rip+0xf2566]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6cf6: bsf rdx, rdx; lea r11, [rip+0xf2583]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b63e0: bsf rdx, rdx; lea r11, [rip+0xf2e19]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b63a8: bsf rdx, rdx; lea r11, [rip+0xf2e51]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6383: bsf rdx, rdx; lea r11, [rip+0xf2e76]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6366: bsf rdx, rdx; lea r11, [rip+0xf2e93]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b4e1c: bsf rdx, rdx; lea r11, [rip+0xf4289]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b4df3: bsf rdx, rdx; lea r11, [rip+0xf42b2]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b4710: bsf rdx, rdx; lea r11, [rip+0xf4909]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b46d8: bsf rdx, rdx; lea r11, [rip+0xf4941]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b46b3: bsf rdx, rdx; lea r11, [rip+0xf4966]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b4696: bsf rdx, rdx; lea r11, [rip+0xf4983]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b374c: bsf rdx, rdx; lea r11, [rip+0xf5779]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b3723: bsf rdx, rdx; lea r11, [rip+0xf57a2]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b30d0: bsf rdx, rdx; lea r11, [rip+0xf5d6d]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b3098: bsf rdx, rdx; lea r11, [rip+0xf5da5]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b3073: bsf rdx, rdx; lea r11, [rip+0xf5dca]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b3056: bsf rdx, rdx; lea r11, [rip+0xf5de7]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000a6670: bsf rdx, rdx; movzx ecx, byte ptr [rsi+rdx]; movzx eax, byte ptr [rdi+rdx]; sub eax, ecx; ret; 
0x0000000017e610: bsr eax, eax; add eax, 0x20; add rax, rdi; vzeroupper; ret; 
0x0000000017e620: bsr eax, eax; add eax, 0x40; add rax, rdi; vzeroupper; ret; 
0x0000000017e630: bsr eax, eax; add eax, 0x60; add rax, rdi; ret; 
0x0000000017e6fa: bsr eax, eax; add rax, rdi; add rax, r8; vzeroupper; ret; 
0x000000000a8a66: bsr eax, eax; add rax, rdi; add rax, rsi; ret; 
0x000000000a8896: bsr eax, eax; add rax, rdi; ret; 
0x0000000017e51f: bsr eax, eax; add rax, rdi; vzeroupper; ret; 
0x000000000a8940: bsr eax, eax; lea rax, [rax+rdi+0x10]; ret; 
0x000000000a8950: bsr eax, eax; lea rax, [rax+rdi+0x20]; ret; 
0x000000000a8960: bsr eax, eax; lea rax, [rax+rdi+0x30]; ret; 
0x000000001820e1: bsr eax, eax; lea rax, [rdi+rax-0x20]; vzeroupper; ret; 
0x000000000ade9b: bsr eax, esi; add rax, rdi; ret; 
0x000000000adda9: bsr esi, esi; lea rax, [rcx+rsi]; ret; 
0x000000000adca5: bsr esi, esi; lea rax, [rdi+rsi]; ret; 
0x000000000adc0a: bsr rax, rax; add rax, rdi; ret; 
0x000000000ade9a: bsr rax, rsi; add rax, rdi; ret; 
0x000000000adda6: bsr rsi, rsi; lea rax, [rcx+rsi]; ret; 
0x000000000adda8: bsr rsi, rsi; lea rax, [rcx+rsi]; ret; 
0x000000000adca4: bsr rsi, rsi; lea rax, [rdi+rsi]; ret; 
0x00000000146f7e: bswap eax; mov [r8+0xa8], eax; mov eax, 0x1; ret; 
0x00000000146fdb: bswap eax; mov [r8+0xb4], eax; mov eax, 0x1; ret; 
0x00000000146fab: bswap eax; mov [r8+0xb8], eax; mov eax, 0x1; ret; 
0x00000000149d16: bswap eax; mov [rdi+0x48], eax; mov eax, 0x1; ret; 
0x00000000149d63: bswap eax; mov [rdi+0x54], eax; mov eax, 0x1; ret; 
0x00000000149d43: bswap eax; mov [rdi+0x58], eax; mov eax, 0x1; ret; 
0x0000000014a66a: bswap eax; mov [rdx+0x10], eax; mov eax, 0x1; ret; 
0x0000000014a56a: bswap eax; mov [rdx+0xc], eax; mov eax, 0x1; ret; 
0x0000000014a62d: bswap eax; mov [rdx], eax; mov eax, 0x1; ret; 
0x000000001445c8: bswap eax; mov [rdx], eax; mov edx, ebx; call qword ptr [r13+0x10]; 
0x00000000149d03: bswap eax; mov eax, eax; mov [r8], rax; mov eax, 0x1; ret; 
0x00000000146f67: bswap eax; mov eax, eax; mov [rdx], rax; mov eax, 0x1; ret; 
0x000000001297a6: bswap eax; ret; 
0x00000000149e2c: bswap ebp; call qword ptr [rax+0x18]; 
0x000000001470c4: bswap ebp; mov ebp, ebp; call qword ptr [rax+0x18]; 
0x0000000017e8de: bswap ecx; mov al, [rdi+rdx-0x1]; mov cl, [rsi+rdx-0x1]; sub eax, ecx; ret; 
0x000000001511f5: bswap edx; mov [rax-0x4], edx; mov [rdi+0x18], rax; mov eax, r8d; ret; 
0x00000000143fce: bswap edx; mov [rcx], edx; mov edx, eax; call qword ptr [rbx+0x10]; 
0x00000000151235: bswap edx; mov [rsi], edx; mov [rdi+0x18], rax; mov eax, r8d; ret; 
0x00000000149d01: bswap rax; mov eax, eax; mov [r8], rax; mov eax, 0x1; ret; 
0x00000000149e2b: bswap rbp; call qword ptr [rax+0x18]; 
0x00000000040794: btr edx, 0x3f; sub rax, rdx; shr rax, 0x3f; ret; 
0x00000000040793: btr rdx, 0x3f; sub rax, rdx; shr rax, 0x3f; ret; 
0x00000000055db1: bts eax, 0x30; mov [rdi+0x8], rax; mov eax, 0x2; ret; 
0x00000000055ba1: bts edx, 0x34; mov eax, 0x1; mov [rdi], rdx; ret; 
0x000000000ae203: bts edx, ebx; bsf rdx, rdx; add rax, rdx; sub rax, rdi; ret; 
0x00000000055db0: bts rax, 0x30; mov [rdi+0x8], rax; mov eax, 0x2; ret; 
0x00000000055ba0: bts rdx, 0x34; mov eax, 0x1; mov [rdi], rdx; ret; 
0x000000000ae202: bts rdx, r11; bsf rdx, rdx; add rax, rdx; sub rax, rdi; ret; 
0x0000000007321a: call far fword ptr [rax+0x44]; 
0x0000000007aa38: call far fword ptr [rax+0x48]; 
0x0000000011415c: call far fword ptr [rax+0x4c]; 
0x000000001298c9: call far fword ptr [rax+0x4c]; 
0x0000000004070b: call far fword ptr [rax+0x5a]; 
0x000000000fadb4: call far fword ptr [rax+0x5a]; 
0x000000001016a8: call far fword ptr [rax+0xa2840f]; 
0x00000000110ef0: call far fword ptr [rax+r8*4+0x39]; 
0x00000000110f47: call far fword ptr [rax+r9*2-0x73]; 
0x00000000110ef1: call far fword ptr [rax+rax*4+0x39]; 
0x00000000100c6e: call far fword ptr [rax+rax]; 
0x00000000110f48: call far fword ptr [rax+rcx*2-0x73]; 
0x00000000060b7d: call far fword ptr [rax-0x4]; 
0x000000000c038d: call far fword ptr [rax-0x7]; 
0x000000000a3485: call far fword ptr [rax]; 
0x0000000008082d: call far fword ptr [rbp+0x16]; 
0x0000000009d6bd: call far fword ptr [rbp+0x31]; 
0x000000000446f2: call far fword ptr [rbp+0x41]; 
0x00000000191d93: call far fword ptr [rbp+0x48]; 
0x0000000003f910: call far fword ptr [rbp+0x4c]; 
0x000000000e48c1: call far fword ptr [rbp+0xf]; 
0x000000000e48ca: call far fword ptr [rbp+rsi*2+0xb]; 
0x0000000003fb92: call far fword ptr [rbp-0x3d]; 
0x000000000f06ed: call far fword ptr [rbp-0xd]; 
0x000000000ee5ba: call far fword ptr [rbx+0x31]; 
0x000000000ede37: call far fword ptr [rbx+0x31]; 
0x000000000df340: call far fword ptr [rbx+0x41]; 
0x000000000816de: call far fword ptr [rbx+0x44]; 
0x0000000012e7ac: call far fword ptr [rbx+0x4801000b]; 
0x0000000006065e: call far fword ptr [rbx+0x48]; 
0x0000000007f262: call far fword ptr [rbx+0x4c]; 
0x000000000ed9a0: call far fword ptr [rbx+0x4c]; 
0x00000000033ea3: call far fword ptr [rbx+0x5d]; 
0x000000000e48da: call far fword ptr [rbx+0xf]; 
0x000000000421ae: call far fword ptr [rbx-0x17]; 
0x0000000008ab97: call far fword ptr [rbx-0x3d]; 
0x00000000144972: call far fword ptr [rbx-0x48]; 
0x0000000004554b: call far fword ptr [rbx-0x7b]; 
0x00000000101691: call far fword ptr [rbx-0x7c9d8c]; 
0x000000000d70f6: call far fword ptr [rcx+0x25ffc148]; 
0x000000000cd814: call far fword ptr [rcx+0x5e]; 
0x0000000010169f: call far fword ptr [rcx+0xa4840f]; 
0x000000000e72a6: call far fword ptr [rdi+0x41]; 
0x000000001123a5: call far fword ptr [rdi+0x4c]; 
0x00000000101688: call far fword ptr [rdi+rcx+0xad84]; 
0x00000000105ddc: call far fword ptr [rdi+rcx-0x7b]; 
0x00000000026cf3: call far fword ptr [rdi]; 
0x0000000009c438: call far fword ptr [rdx+0x31]; 
0x000000000cd731: call far fword ptr [rdx+0x59]; 
0x00000000114234: call far fword ptr [rdx+0x5e]; 
0x00000000074b77: call far fword ptr [rdx+0x77]; 
0x00000000101696: call far fword ptr [rdx+0xa6840f]; 
0x000000000754db: call far fword ptr [rdx+0xf]; 
0x0000000013318d: call far fword ptr [rdx+rax]; 
0x000000000349ed: call far fword ptr [rdx]; 
0x000000000d7001: call far fword ptr [rsi+0x29]; 
0x00000000130690: call far fword ptr [rsi+0x5f]; 
0x000000000e4b04: call far fword ptr [rsi+0x5f]; 
0x000000000e7beb: call far fword ptr [rsi-0x75]; 
0x000000000e7bea: call far fword ptr [rsi-0x75]; 
0x000000000a349b: call far fword ptr [rsi]; 
0x000000000e320f: call far fword ptr [rsp+rsi*2-0x13]; 
0x000000000e2eab: call far fword ptr [rsp+rsi*2-0xf]; 
0x000000001298c8: call far fword ptr gs:[rax+0x4c]; 
0x000000001247d9: call qword ptr [r10+0x28]; 
0x00000000072532: call qword ptr [r10+rax*8]; 
0x0000000008fabd: call qword ptr [r12+0x18]; 
0x000000000e1ddf: call qword ptr [r12+0x20]; 
0x000000000e1a68: call qword ptr [r12+0x28]; 
0x000000000e1e13: call qword ptr [r12+0x30]; 
0x0000000007308b: call qword ptr [r12+0x38]; 
0x000000000fba19: call qword ptr [r12+0x40]; 
0x0000000008ce01: call qword ptr [r12+0x48]; 
0x0000000008ba30: call qword ptr [r12+0x80]; 
0x0000000008c418: call qword ptr [r12+0x88]; 
0x0000000008c0f0: call qword ptr [r12+0x90]; 
0x00000000159179: call qword ptr [r12+0xf88]; 
0x000000001592d9: call qword ptr [r12+0xf90]; 
0x000000000886b4: call qword ptr [r13+0x10]; 
0x00000000123e24: call qword ptr [r13+0x28]; 
0x000000000719f5: call qword ptr [r13+0x38]; 
0x000000000813f0: call qword ptr [r13+0x48]; 
0x0000000008155f: call qword ptr [r13+0x58]; 
0x000000000879f8: call qword ptr [r13+0x60]; 
0x00000000085e23: call qword ptr [r13+0x80]; 
0x0000000008bed4: call qword ptr [r13+0x90]; 
0x00000000159381: call qword ptr [r13+0xf88]; 
0x0000000015950f: call qword ptr [r13+0xf90]; 
0x00000000093854: call qword ptr [r13]; 
0x0000000007710d: call qword ptr [r14+0x38]; 
0x000000001443b4: call qword ptr [r14+0x40]; 
0x00000000081145: call qword ptr [r14+0x48]; 
0x0000000008ceed: call qword ptr [r14+0x78]; 
0x00000000085b4d: call qword ptr [r14+0x80]; 
0x00000000085a7f: call qword ptr [r14+0x90]; 
0x0000000008f8ce: call qword ptr [r15+0x18]; 
0x0000000007fd2d: call qword ptr [r15+0x38]; 
0x00000000144083: call qword ptr [r15+0x40]; 
0x0000000008b087: call qword ptr [r15+0x80]; 
0x0000000008abfe: call qword ptr [r15+0x90]; 
0x00000000074251: call qword ptr [r8+rcx*8-0x40]; 
0x000000001417bc: call qword ptr [rax+0x10]; 
0x000000001302fe: call qword ptr [rax+0x10bd41]; 
0x0000000010912e: call qword ptr [rax+0x11058b48]; 
0x00000000139cce: call qword ptr [rax+0x14d8d48]; 
0x000000000caaae: call qword ptr [rax+0x166f0ff3]; 
0x000000000fc2fe: call qword ptr [rax+0x17048d4a]; 
0x0000000011695e: call qword ptr [rax+0x1788d4c]; 
0x00000000083c0c: call qword ptr [rax+0x18]; 
0x0000000008e590: call qword ptr [rax+0x18]; 
0x000000001589fe: call qword ptr [rax+0x1903c764]; 
0x0000000003549e: call qword ptr [rax+0x19058d48]; 
0x0000000007e23e: call qword ptr [rax+0x1b841]; 
0x0000000007721e: call qword ptr [rax+0x1b9]; 
0x0000000008d8fe: call qword ptr [rax+0x1bac031]; 
0x000000000fa6ae: call qword ptr [rax+0x1be41]; 
0x00000000080bbe: call qword ptr [rax+0x1be]; 
0x000000000ed95e: call qword ptr [rax+0x1c38348]; 
0x0000000010468e: call qword ptr [rax+0x1fc8341]; 
0x000000000f77ae: call qword ptr [rax+0x1fd8349]; 
0x0000000013ab1e: call qword ptr [rax+0x200045f6]; 
0x000000000867ce: call qword ptr [rax+0x20758b48]; 
0x000000000843a2: call qword ptr [rax+0x20]; 
0x0000000005e68e: call qword ptr [rax+0x23ffbe8]; 
0x0000000008a2fe: call qword ptr [rax+0x2404c641]; 
0x000000000e4c2e: call qword ptr [rax+0x24343b4c]; 
0x000000000551ce: call qword ptr [rax+0x24348b48]; 
0x0000000011040e: call qword ptr [rax+0x24446348]; 
0x0000000005bcde: call qword ptr [rax+0x24448b49]; 
0x000000000d2dae: call qword ptr [rax+0x2444b60f]; 
0x0000000007c51e: call qword ptr [rax+0x244c8948]; 
0x000000000e6c1e: call qword ptr [rax+0x244c8b44]; 
0x00000000157c9e: call qword ptr [rax+0x24548b48]; 
0x000000000e6e6e: call qword ptr [rax+0x24548b4c]; 
0x0000000005e3be: call qword ptr [rax+0x245c8b48]; 
0x000000000e4fce: call qword ptr [rax+0x24648b44]; 
0x00000000083dae: call qword ptr [rax+0x246c294c]; 
0x0000000013ff8e: call qword ptr [rax+0x24743948]; 
0x000000000bf25e: call qword ptr [rax+0x2474894c]; 
0x0000000003542e: call qword ptr [rax+0x24748d4c]; 
0x00000000048ffe: call qword ptr [rax+0x247c3948]; 
0x0000000012ba6e: call qword ptr [rax+0x247c8348]; 
0x000000000e513e: call qword ptr [rax+0x247c8b44]; 
0x000000001057ae: call qword ptr [rax+0x247c8b48]; 
0x000000000e123e: call qword ptr [rax+0x249c8b48]; 
0x000000000cce32: call qword ptr [rax+0x270]; 
0x000000001597cb: call qword ptr [rax+0x278]; 
0x0000000005e5ee: call qword ptr [rax+0x28458b48]; 
0x000000001592a8: call qword ptr [rax+0x288]; 
0x000000001416cd: call qword ptr [rax+0x28]; 
0x00000000131f0e: call qword ptr [rax+0x28ad8b44]; 
0x0000000009ef5e: call qword ptr [rax+0x28c48348]; 
0x0000000018658e: call qword ptr [rax+0x2c75c839]; 
0x00000000141bbe: call qword ptr [rax+0x2e66c35d]; 
0x0000000011183e: call qword ptr [rax+0x305c02c7]; 
0x00000000142fdd: call qword ptr [rax+0x30]; 
0x0000000011c87e: call qword ptr [rax+0x30bf]; 
0x0000000018f6ee: call qword ptr [rax+0x3145f631]; 
0x00000000085ede: call qword ptr [rax+0x31ee8948]; 
0x0000000013332e: call qword ptr [rax+0x342444c7]; 
0x000000001432ae: call qword ptr [rax+0x38738b48]; 
0x00000000071f39: call qword ptr [rax+0x38]; 
0x00000000098dfe: call qword ptr [rax+0x39058b48]; 
0x0000000013e2fe: call qword ptr [rax+0x3bb]; 
0x0000000018e51e: call qword ptr [rax+0x3eec148]; 
0x0000000005b64e: call qword ptr [rax+0x4003d66]; 
0x00000000075fae: call qword ptr [rax+0x40247c8b]; 
0x000000000840de: call qword ptr [rax+0x40788b48]; 
0x0000000008b6bf: call qword ptr [rax+0x40]; 
0x0000000017264e: call qword ptr [rax+0x416f0ff3]; 
0x0000000010c0fe: call qword ptr [rax+0x44045f6]; 
0x000000001726ce: call qword ptr [rax+0x44318b48]; 
0x0000000015236e: call qword ptr [rax+0x44ef8948]; 
0x00000000095ede: call qword ptr [rax+0x4587c031]; 
0x0000000008005e: call qword ptr [rax+0x458b48]; 
0x0000000010a41e: call qword ptr [rax+0x45c764]; 
0x0000000007d96e: call qword ptr [rax+0x45fa8949]; 
0x0000000007d93e: call qword ptr [rax+0x4804428b]; 
0x000000000547ee: call qword ptr [rax+0x48068b48]; 
0x0000000007dcee: call qword ptr [rax+0x4808728b]; 
0x0000000007dafe: call qword ptr [rax+0x48087a8b]; 
0x0000000003d73e: call qword ptr [rax+0x480ab60f]; 
0x0000000008424e: call qword ptr [rax+0x487d8348]; 
0x0000000005b93e: call qword ptr [rax+0x48858b48]; 
0x000000000ff0ca: call qword ptr [rax+0x48]; 
0x0000000008568e: call qword ptr [rax+0x48c7894c]; 
0x00000000043bde: call qword ptr [rax+0x48ea8948]; 
0x0000000009840e: call qword ptr [rax+0x48ed0148]; 
0x0000000005e77e: call qword ptr [rax+0x48f2b60f]; 
0x0000000013face: call qword ptr [rax+0x49178b49]; 
0x0000000007c33e: call qword ptr [rax+0x4c087b8b]; 
0x000000000bc86e: call qword ptr [rax+0x4c48349]; 
0x00000000083c7e: call qword ptr [rax+0x4ce2894c]; 
0x00000000097aee: call qword ptr [rax+0x4ce7894c]; 
0x00000000098e75: call qword ptr [rax+0x4cef8948]; 
0x000000000941ee: call qword ptr [rax+0x4cef894c]; 
0x0000000015a06e: call qword ptr [rax+0x4d208b4c]; 
0x000000000e1c0e: call qword ptr [rax+0x4dfc894d]; 
0x000000001540ee: call qword ptr [rax+0x4f4605c7]; 
0x0000000008fafe: call qword ptr [rax+0x50738b48]; 
0x0000000003a487: call qword ptr [rax+0x50]; 
0x0000000004acee: call qword ptr [rax+0x5100ff2]; 
0x00000000047f0e: call qword ptr [rax+0x5100ff3]; 
0x00000000099845: call qword ptr [rax+0x521d8948]; 
0x0000000007ca0e: call qword ptr [rax+0x55415641]; 
0x00000000047aae: call qword ptr [rax+0x56415741]; 
0x0000000005f49e: call qword ptr [rax+0x56b60f41]; 
0x0000000005278e: call qword ptr [rax+0x587c031]; 
0x00000000081589: call qword ptr [rax+0x58]; 
0x00000000097e2e: call qword ptr [rax+0x59353b48]; 
0x000000001118ae: call qword ptr [rax+0x5c5cb941]; 
0x000000001445ee: call qword ptr [rax+0x5dc0315b]; 
0x000000000417de: call qword ptr [rax+0x61058b48]; 
0x00000000117dce: call qword ptr [rax+0x61158b48]; 
0x0000000011bc3e: call qword ptr [rax+0x613d8b48]; 
0x00000000083e1b: call qword ptr [rax+0x68]; 
0x00000000085386: call qword ptr [rax+0x70]; 
0x00000000029ebe: call qword ptr [rax+0x70b58b48]; 
0x000000000e097e: call qword ptr [rax+0x73fa8148]; 
0x00000000097f6e: call qword ptr [rax+0x74ff8548]; 
0x0000000013949e: call qword ptr [rax+0x75e73945]; 
0x00000000101cbe: call qword ptr [rax+0x75f68548]; 
0x0000000003469e: call qword ptr [rax+0x76148d48]; 
0x000000000931de: call qword ptr [rax+0x787c031]; 
0x0000000008bcf5: call qword ptr [rax+0x78]; 
0x0000000009b5ae: call qword ptr [rax+0x79058b48]; 
0x0000000018ddee: call qword ptr [rax+0x7fffba]; 
0x0000000008afa7: call qword ptr [rax+0x80]; 
0x0000000002ff1e: call qword ptr [rax+0x82444c7]; 
0x0000000009b85e: call qword ptr [rax+0x8468b49]; 
0x0000000010a34e: call qword ptr [rax+0x8788141]; 
0x0000000014725e: call qword ptr [rax+0x87b8348]; 
0x0000000007845e: call qword ptr [rax+0x87e8b48]; 
0x000000001077bc: call qword ptr [rax+0x88]; 
0x0000000014166a: call qword ptr [rax+0x8]; 
0x0000000005eece: call qword ptr [rax+0x8be]; 
0x000000000fa58e: call qword ptr [rax+0x8bf]; 
0x0000000008ae49: call qword ptr [rax+0x90]; 
0x000000000365ce: call qword ptr [rax+0x9e3d48]; 
0x00000000110f6e: call qword ptr [rax+0x9ff42c6]; 
0x0000000005b63e: call qword ptr [rax+0xc003d66]; 
0x000000000296be: call qword ptr [rax+0xc4c8348]; 
0x0000000018058e: call qword ptr [rax+0xea8149]; 
0x0000000007840e: call qword ptr [rax+0xf08c5f6]; 
0x000000000b053e: call qword ptr [rax+0xf11280f]; 
0x0000000005d5ee: call qword ptr [rax+0xf50c2f6]; 
0x0000000005522e: call qword ptr [rax+0xf66c031]; 
0x000000000cac6e: call qword ptr [rax+0xf6f0ff3]; 
0x0000000012ac0e: call qword ptr [rax+0xfe48445]; 
0x000000001063ae: call qword ptr [rax+0xfe48545]; 
0x0000000008dbee: call qword ptr [rax+0xff0c889]; 
0x0000000015297e: call qword ptr [rax+0xff6854d]; 
0x0000000005cefc: call qword ptr [rax+r8*8]; 
0x0000000005cefd: call qword ptr [rax+rax*8]; 
0x000000000a1973: call qword ptr [rax+rax]; 
0x00000000074252: call qword ptr [rax+rcx*8-0x40]; 
0x0000000015305e: call qword ptr [rax-0x140bf]; 
0x0000000009df8e: call qword ptr [rax-0x141676b7]; 
0x00000000149f7e: call qword ptr [rax-0x14cfbc75]; 
0x000000001166ce: call qword ptr [rax-0x1600cebb]; 
0x000000000d989e: call qword ptr [rax-0x161bcebb]; 
0x00000000097d4e: call qword ptr [rax-0x16fa74b8]; 
0x000000000dc07e: call qword ptr [rax-0x171876b4]; 
0x0000000012d99e: call qword ptr [rax-0x172076b8]; 
0x00000000159ebe: call qword ptr [rax-0x172876b8]; 
0x000000000b89ee: call qword ptr [rax-0x173e2777]; 
0x0000000010b93e: call qword ptr [rax-0x174a74b4]; 
0x00000000061eae: call qword ptr [rax-0x176274b8]; 
0x0000000014d5ce: call qword ptr [rax-0x177e76b8]; 
0x00000000127b79: call qword ptr [rax-0x18]; 
0x0000000013e31e: call qword ptr [rax-0x1a76b7ab]; 
0x00000000096a5e: call qword ptr [rax-0x1efa74b8]; 
0x00000000146d6e: call qword ptr [rax-0x1f7ba39]; 
0x0000000008c4fe: call qword ptr [rax-0x218418]; 
0x0000000007bfce: call qword ptr [rax-0x274a74b4]; 
0x000000000bd7ae: call qword ptr [rax-0x2dce24cf]; 
0x000000000963fe: call qword ptr [rax-0x32c272b8]; 
0x00000000117a1e: call qword ptr [rax-0x32fa72b8]; 
0x0000000018e31e: call qword ptr [rax-0x36ce3877]; 
0x000000000408f6: call qword ptr [rax-0x3d]; 
0x00000000047f5e: call qword ptr [rax-0x3f38b8]; 
0x0000000003627e: call qword ptr [rax-0x3f8274b8]; 
0x00000000143c4e: call qword ptr [rax-0x41]; 
0x0000000007ec6e: call qword ptr [rax-0x41fb3380]; 
0x000000000db2ae: call qword ptr [rax-0x43bf]; 
0x00000000133f0e: call qword ptr [rax-0x474a74b8]; 
0x000000000dea3e: call qword ptr [rax-0x4760418]; 
0x0000000007d16e: call qword ptr [rax-0x47]; 
0x0000000018fede: call qword ptr [rax-0x47eb7]; 
0x0000000009721e: call qword ptr [rax-0x482418]; 
0x0000000013711e: call qword ptr [rax-0x48]; 
0x000000000977de: call qword ptr [rax-0x4de418]; 
0x00000000131e0e: call qword ptr [rax-0x4efa74b4]; 
0x00000000117d7e: call qword ptr [rax-0x4efa74b8]; 
0x0000000017d3ed: call qword ptr [rax-0x5e1f00d]; 
0x0000000002601e: call qword ptr [rax-0x5e1f00d]; 
0x0000000010bc9e: call qword ptr [rax-0x5eda74b4]; 
0x0000000005a58e: call qword ptr [rax-0x5f8272b4]; 
0x000000000a024e: call qword ptr [rax-0x72b32dcf]; 
0x0000000005064d: call qword ptr [rax-0x74b3fff5]; 
0x00000000157f2e: call qword ptr [rax-0x761976b4]; 
0x000000000cd43e: call qword ptr [rax-0x76319cb8]; 
0x0000000008580e: call qword ptr [rax-0x76df377d]; 
0x00000000148b5e: call qword ptr [rax-0x76f874bf]; 
0x0000000008046e: call qword ptr [rax-0x77cf879]; 
0x000000000b87ae: call qword ptr [rax-0x77f0097b]; 
0x00000000069efe: call qword ptr [rax-0x7a81f00d]; 
0x00000000083dbe: call qword ptr [rax-0x7af372b4]; 
0x000000000ffcde: call qword ptr [rax-0x7c2dcebb]; 
0x0000000005f4de: call qword ptr [rax-0x7cb70e28]; 
0x00000000121e3e: call qword ptr [rax-0x7cb7f978]; 
0x0000000009980d: call qword ptr [rax-0x7de276b8]; 
0x000000000ea61e: call qword ptr [rax-0x7df374bc]; 
0x0000000012547e: call qword ptr [rax-0x7efa74b8]; 
0x000000000739ae: call qword ptr [rax-0x8bf4280]; 
0x000000000744de: call qword ptr [rax-0x8d77a78]; 
0x000000001532ce: call qword ptr [rax-0xbf427d]; 
0x00000000094a7e: call qword ptr [rax-0xee2fa0a]; 
0x0000000008b2be: call qword ptr [rax-0xf4418]; 
0x0000000003f19f: call qword ptr [rax]; 
0x000000000886b5: call qword ptr [rbp+0x10]; 
0x0000000008ded2: call qword ptr [rbp+0x18]; 
0x00000000083af3: call qword ptr [rbp+0x20]; 
0x00000000123e25: call qword ptr [rbp+0x28]; 
0x00000000084638: call qword ptr [rbp+0x30]; 
0x000000000719f6: call qword ptr [rbp+0x38]; 
0x0000000010b022: call qword ptr [rbp+0x40]; 
0x000000000813f1: call qword ptr [rbp+0x48]; 
0x0000000011f273: call qword ptr [rbp+0x4c]; 
0x00000000141069: call qword ptr [rbp+0x53]; 
0x00000000081560: call qword ptr [rbp+0x58]; 
0x0000000007ed53: call qword ptr [rbp+0x60]; 
0x000000000817f4: call qword ptr [rbp+0x68]; 
0x0000000008b87e: call qword ptr [rbp+0x70]; 
0x000000000fbb1c: call qword ptr [rbp+0x77000000]; 
0x00000000085e24: call qword ptr [rbp+0x80]; 
0x0000000008bed5: call qword ptr [rbp+0x90]; 
0x000000000453be: call qword ptr [rbp+0xf88]; 
0x000000000453e5: call qword ptr [rbp+0xf90]; 
0x0000000014ce3d: call qword ptr [rbp+rbp*8-0x4274b701]; 
0x0000000005319e: call qword ptr [rbp-0x77]; 
0x0000000010b7b2: call qword ptr [rbp-0xf0]; 
0x00000000093855: call qword ptr [rbp]; 
0x0000000007e7ce: call qword ptr [rbx+0x10]; 
0x0000000008e119: call qword ptr [rbx+0x18]; 
0x000000001222e9: call qword ptr [rbx+0x28]; 
0x000000000b85f6: call qword ptr [rbx+0x31]; 
0x0000000007346c: call qword ptr [rbx+0x38]; 
0x000000000e2d18: call qword ptr [rbx+0x40]; 
0x000000000d5139: call qword ptr [rbx+0x48924924]; 
0x0000000009047a: call qword ptr [rbx+0x48]; 
0x000000001340d1: call qword ptr [rbx+0x4c]; 
0x0000000008a501: call qword ptr [rbx+0x60]; 
0x0000000007ebbf: call qword ptr [rbx+0x80]; 
0x0000000008c574: call qword ptr [rbx+0x88]; 
0x0000000007e65d: call qword ptr [rbx+0x90]; 
0x0000000007a886: call qword ptr [rbx+0xf]; 
0x00000000044b50: call qword ptr [rbx]; 
0x00000000072cd7: call qword ptr [rcx+0x38]; 
0x000000000c2a0c: call qword ptr [rcx]; 
0x0000000008f8cf: call qword ptr [rdi+0x18]; 
0x0000000007fd2e: call qword ptr [rdi+0x38]; 
0x00000000144084: call qword ptr [rdi+0x40]; 
0x000000001016bd: call qword ptr [rdi+0x5ba1774]; 
0x0000000008b088: call qword ptr [rdi+0x80]; 
0x0000000008abff: call qword ptr [rdi+0x90]; 
0x0000000005b53b: call qword ptr [rdi+rcx]; 
0x00000000035fa8: call qword ptr [rdi]; 
0x0000000014ca23: call qword ptr [rdx+0x10]; 
0x0000000014b768: call qword ptr [rdx+0x20]; 
0x00000000028cc9: call qword ptr [rdx+0x260]; 
0x000000001247da: call qword ptr [rdx+0x28]; 
0x00000000072533: call qword ptr [rdx+rax*8]; 
0x000000000cde45: call qword ptr [rdx-0x3f7affef]; 
0x00000000086da8: call qword ptr [rdx]; 
0x0000000007710e: call qword ptr [rsi+0x38]; 
0x000000001443b5: call qword ptr [rsi+0x40]; 
0x00000000081146: call qword ptr [rsi+0x48]; 
0x00000000125a65: call qword ptr [rsi+0x74]; 
0x0000000008ceee: call qword ptr [rsi+0x78]; 
0x00000000085b4e: call qword ptr [rsi+0x80]; 
0x00000000085a80: call qword ptr [rsi+0x90]; 
0x0000000012b42d: call qword ptr [rsi-0xa]; 
0x000000000ac002: call qword ptr [rsi]; 
0x0000000013260f: call qword ptr [rsp+0x10]; 
0x0000000008fabe: call qword ptr [rsp+0x18]; 
0x000000000e1de0: call qword ptr [rsp+0x20]; 
0x000000000e1a69: call qword ptr [rsp+0x28]; 
0x000000000ddb97: call qword ptr [rsp+0x30]; 
0x0000000007308c: call qword ptr [rsp+0x38]; 
0x000000000fba1a: call qword ptr [rsp+0x40]; 
0x0000000008ce02: call qword ptr [rsp+0x48]; 
0x0000000012a97a: call qword ptr [rsp+0x50]; 
0x00000000132fe8: call qword ptr [rsp+0x58]; 
0x00000000129f3a: call qword ptr [rsp+0x60]; 
0x0000000013fd9d: call qword ptr [rsp+0x68]; 
0x0000000013fe7d: call qword ptr [rsp+0x70]; 
0x0000000008ba31: call qword ptr [rsp+0x80]; 
0x0000000008c419: call qword ptr [rsp+0x88]; 
0x0000000008c0f1: call qword ptr [rsp+0x90]; 
0x0000000015917a: call qword ptr [rsp+0xf88]; 
0x000000001592da: call qword ptr [rsp+0xf90]; 
0x0000000013fc17: call r10; 
0x00000000029b76: call r12; 
0x0000000002e0f3: call r13; 
0x0000000002abc7: call r14; 
0x00000000033bea: call r15; 
0x0000000004518b: call r8; 
0x00000000028cb0: call rax; 
0x00000000028c3c: call rbp; 
0x0000000002987d: call rbx; 
0x0000000006cfdd: call rcx; 
0x00000000033beb: call rdi; 
0x00000000028d66: call rdx; 
0x0000000002abc8: call rsi; 
0x00000000029b77: call rsp; 
0x0000000015e637: cdq; adc al, [rax]; add [rbp-0x77], cl; ret far; 
0x0000000018dbaf: cdq; add rcx, r9; notrack jmp rcx; 
0x0000000018dd56: cdq; add rcx, rbx; notrack jmp rcx; 
0x0000000004a4d4: cdq; fdiv st(7), st; dec dword ptr [rax-0x77]; ret far; 
0x000000000e50d3: cdq; idiv bh; jmp qword ptr [rsi+0xf]; 
0x000000000454d6: cdq; idiv esi; shl rdx, 0x20; or rax, rdx; ret; 
0x000000000454f8: cdq; idiv rsi; ret; 
0x00000000140903: cdq; in eax, 0xff; jmp qword ptr [rsi+0xf]; 
0x0000000014f249: cdq; nop [rax+rax]; ret; 
0x00000000109544: cdq; or eax, 0x64d8f700; mov [rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000012ea3b: cdq; or eax, [rax]; syscall; 
0x000000000d7c73: cdq; out 0xf4, eax; jmp far fword ptr [rcx]; 
0x0000000014d243: cdq; pop rbp; or [rax], eax; pop rbx; ret; 
0x000000000e0ce3: cdq; push rdi; hlt; dec dword ptr [rax-0x77]; ret; 
0x00000000097853: cdq; ret; 
0x0000000005cc63: cdq; sbb [rax], al; syscall; 
0x0000000014fdc1: cdq; std; jmp qword ptr [rsi+0x66]; 
0x00000000185dff: cdq; vzeroupper; ret; 
0x000000000454a6: cdq; xor eax, edx; sub eax, edx; ret; 
0x000000000454b8: cdq; xor rax, rdx; sub rax, rdx; ret; 
0x00000000090ec4: cdqe; mov [rbx+0x10], rax; xor eax, eax; pop rbx; ret; 
0x000000001512b7: cdqe; mov [rsi], rax; mov [rdi+0x18], rdx; mov eax, r8d; ret; 
0x0000000005cda2: cdqe; sbb [rax], al; syscall; 
0x00000000147c5e: clc; add [rax+0x1], edi; sbb eax, 0xffffffff; add rsp, 0x8; ret; 
0x00000000107b9d: clc; add [rax], al; add [rdi], cl; adc [rsi+0x70], edi; ret; 
0x000000000e5d24: clc; add [rax], eax; add [rax-0x7d], cl; ret; 
0x00000000137177: clc; add [rbp+rcx-0x7b], esi; shl byte ptr [rbp+0x19], 0x44; mov eax, eax; ret; 
0x0000000014fa41: clc; add [rbp-0x10], esi; mov rax, [rdi+0x8]; jmp qword ptr [rax]; 
0x00000000150989: clc; add [rbp-0x2d], esi; mov rax, [rdi+0x8]; mov rsi, rsp; call qword ptr [rax]; 
0x000000000b8663: clc; add [rcx+0xf], eax; xchg esp, eax; ret; 
0x00000000091c6f: clc; add [rcx], ebx; ror byte ptr [rax-0x7d], 0xc4; sbb [rbx+0x5d5b0ce0], al; ret; 
0x000000000611d3: clc; add [rdi+0x1], edi; ret; 
0x0000000010803f: clc; add [rdi+0x2d], esi; mov eax, 0x4; syscall; 
0x000000001080ff: clc; add [rdi+0x2d], esi; mov eax, 0x6; syscall; 
0x0000000010809e: clc; add [rdi+0x2e], esi; mov eax, 0x5; syscall; 
0x0000000008d5a7: clc; add [rdi+0x30], edi; ret; 
0x00000000112b51: clc; add [rdi+0xb], edi; ret; 
0x000000001687c7: clc; add al, 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000090e08: clc; add al, [rbx+0x68901e0]; xor eax, eax; ret; 
0x00000000085e9c: clc; add cl, [rax+0xf]; scasd [rdi]; ret; 
0x000000000825ba: clc; add cl, [rax-0x77]; ret; 
0x000000000cb8d2: clc; add cl, [rax-0x7b]; ror byte ptr [rax+0xf], cl; ret; 
0x00000000059685: clc; add cl, [rcx+0x39]; ret; 
0x000000000a3e87: clc; add cl, [rdi]; xchg al, cl; ret far; 
0x00000000136239: clc; add eax, 0x10; ret; 
0x000000000bc24c: clc; add eax, 0x83492377; ret; 
0x0000000014337e: clc; add esi, [rsi+0xe]; mov eax, 0x2; ret; 
0x0000000017e6ff: clc; add rax, r8; vzeroupper; ret; 
0x000000000a8237: clc; add rax, rcx; ret; 
0x000000001821cb: clc; add rax, rcx; sub rax, rdx; vzeroupper; ret; 
0x0000000017e054: clc; add rax, rcx; vzeroupper; ret; 
0x000000000a8a6b: clc; add rax, rsi; ret; 
0x00000000090dc8: clc; and eax, 0x1; mov [rsi], eax; xor eax, eax; ret; 
0x00000000038d75: clc; and eax, 0x7f; ret; 
0x000000001297e9: clc; and eax, 0xffffff; ret; 
0x000000001297a5: clc; bswap eax; ret; 
0x0000000009d6bc: clc; call far fword ptr [rbp+0x31]; 
0x0000000009bf2e: clc; call far fword ptr [rbx+0x44]; 
0x00000000191934: clc; call far fword ptr [rbx+0x48]; 
0x00000000191877: clc; call far fword ptr [rbx+0x4c]; 
0x0000000009b942: clc; call far fword ptr [rbx+0x5d]; 
0x0000000009c10e: clc; call far fword ptr [rbx-0x17]; 
0x0000000009c437: clc; call far fword ptr [rdx+0x31]; 
0x000000000b87ad: clc; call qword ptr [rax-0x77f0097b]; 
0x000000000dad17: clc; call rax; 
0x000000000454a5: clc; cdq; xor eax, edx; sub eax, edx; ret; 
0x00000000136219: clc; cmc; je short 0x0000000000136210; pop rbx; ret; 
0x0000000009bf80: clc; cmp [r8+0x8], rsi; jb short 0x000000000009bf90; mov [r8], rsi; ret; 
0x0000000018c576: clc; cmp eax, [rsi-0x8]; jne 0x000000000018c680; ret; 
0x00000000187bbc: clc; cmp rcx, rax; jne 0x00000000001885f3; xor eax, eax; ret; 
0x000000001891ec: clc; cmp rcx, rax; jne 0x0000000000189433; xor eax, eax; ret; 
0x000000001885c8: clc; cmp rcx, rax; jne short 0x00000000001885f3; xor eax, eax; ret; 
0x00000000189408: clc; cmp rcx, rax; jne short 0x0000000000189433; xor eax, eax; ret; 
0x00000000116525: clc; cmp rdi, rax; jne short 0x0000000000116558; mov eax, 0x88; syscall; 
0x000000000454f6: clc; cqo; idiv rsi; ret; 
0x000000000454b6: clc; cqo; xor rax, rdx; sub rax, rdx; ret; 
0x0000000009efb0: clc; dec dword ptr [rax+0x29]; ret; 
0x00000000106d01: clc; dec dword ptr [rax-0x75]; add al, 0x24; add rsp, 0x28; ret; 
0x00000000108cff: clc; dec dword ptr [rax-0x75]; and al, 0x8; add rsp, 0x28; ret; 
0x0000000009e1d9: clc; dec dword ptr [rax-0x77]; ret; 
0x000000000c779b: clc; dec dword ptr [rax-0x7d]; ret; 
0x0000000010950b: clc; dec dword ptr [rbx+0x410c247c]; mov eax, eax; mov eax, 0x3; syscall; 
0x0000000011012b: clc; dec dword ptr [rbx+0x410c247c]; mov eax, eax; mov eax, 0x4a; syscall; 
0x000000001101eb: clc; dec dword ptr [rbx+0x410c247c]; mov eax, eax; mov eax, 0x4b; syscall; 
0x0000000010d681: clc; dec dword ptr [rbx+0x48082444]; add esp, 0x28; ret; 
0x0000000010952d: clc; dec dword ptr [rbx+0x480c2444]; add esp, 0x18; ret; 
0x0000000010ff3d: clc; dec dword ptr [rbx+0x480c2444]; add esp, 0x38; ret; 
0x0000000010e1d2: clc; dec dword ptr [rbx+0x48182444]; add esp, 0x28; ret; 
0x000000000d6bc9: clc; hlt; jmp far fword ptr [rcx]; 
0x00000000077b33: clc; idiv bh; jmp qword ptr [rax+rcx*2-0x75]; 
0x00000000182584: clc; ja short 0x000000000018254a; nop [rax+rax]; xor eax, eax; ret; 
0x00000000183694: clc; ja short 0x000000000018365a; nop [rax+rax]; vzeroupper; ret; 
0x00000000184e3d: clc; ja short 0x0000000000184e03; mov [rdi], dl; vzeroupper; ret; 
0x00000000186f28: clc; ja short 0x0000000000186eee; nop [rax+rax]; xor eax, eax; ret; 
0x0000000016079c: clc; jb short 0x00000000001607a7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016084c: clc; jb short 0x0000000000160857; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016317c: clc; jb short 0x0000000000163187; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016322c: clc; jb short 0x0000000000163237; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000008aa0d: clc; jbe short 0x000000000008aa30; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x0000000006106b: clc; je short 0x0000000000061096; mov r8d, 0xffffffff; mov eax, r8d; ret; 
0x00000000108438: clc; je short 0x0000000000108440; mov eax, r9d; ret; 
0x000000001198b9: clc; je short 0x00000000001198f4; mov eax, r8d; ret; 
0x00000000147d34: clc; jge short 0x0000000000147d30; dec dword ptr [rcx-0x17f7dbbc]; movd ecx, mm7; jmp qword ptr [rsi+0xf]; 
0x0000000010f748: clc; jmp qword ptr [rcx+rax*2-0x75]; 
0x000000000a5242: clc; jmp qword ptr [rsi+0x2e]; 
0x000000000b85df: clc; jmp qword ptr [rsi+0x66]; 
0x0000000009b3e5: clc; jmp qword ptr [rsi+0xf]; 
0x0000000018c579: clc; jne 0x000000000018c680; ret; 
0x00000000053d02: clc; jne short 0x0000000000053cf0; mov rax, rdx; ret; 
0x00000000164da6: clc; lea r11, [rip+0x52be2]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000164bf0: clc; lea r11, [rip+0x52d98]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001622d2: clc; lea r11, [rip+0x554f6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001621f8: clc; lea r11, [rip+0x555d0]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000184dcf: clc; lea rax, [rdi+r8]; vzeroupper; ret; 
0x000000000a4d9c: clc; mov [rax], dx; movzx edx, byte ptr [rsp-0x6]; mov [rax+0x2], dl; ret; 
0x00000000161397: clc; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x00000000161ceb: clc; mov [rdi-0x15], r11; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000161eeb: clc; mov [rdi-0x16], r11; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x000000001620eb: clc; mov [rdi-0x17], r11; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000016137b: clc; mov [rdi-0x18], r10; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x000000001613b3: clc; mov [rdi-0x8], rdx; ret; 
0x00000000161d07: clc; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000166c86: clc; mov [rdi-0xd], rdx; mov [rdi-0x8], rcx; ret; 
0x00000000161f07: clc; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000166bf6: clc; mov [rdi-0xe], rdx; mov [rdi-0x8], rcx; ret; 
0x00000000162107: clc; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000166b66: clc; mov [rdi-0xf], rdx; mov [rdi-0x8], rcx; ret; 
0x000000000a4cd7: clc; mov [rdi], dx; movzx edx, byte ptr [rsp-0x6]; mov [rdi+0x2], dl; ret; 
0x000000000a4cf6: clc; mov [rdi], edx; movzx edx, byte ptr [rsp-0xc]; mov [rdi+0x4], dl; ret; 
0x000000000a4d0e: clc; mov [rdi], edx; movzx edx, word ptr [rsp+0xc]; mov [rdi+0x4], dx; ret; 
0x00000000184097: clc; mov [rdi], rcx; mov [rdi+r8-0x8], rdx; vzeroupper; ret; 
0x000000000b8342: clc; mov [rdi], rcx; ret; 
0x000000001856f1: clc; mov [rdi], rcx; vzeroupper; ret; 
0x000000001895cf: clc; mov [rdi], rsi; mov [r9-0x8], rcx; ret; 
0x000000000b7f0e: clc; mov [rdi], rsi; ret; 
0x000000001834ef: clc; mov byte ptr [rdi+r8], 0x0; vzeroupper; ret; 
0x00000000111d6d: clc; mov byte ptr [rsi-0x1], 0x0; mov rax, r8; ret; 
0x0000000012c419: clc; mov rcx, rbp; mov rdx, r14; mov rsi, r12; call qword ptr [rsp+0x40]; 
0x0000000018c6fa: clc; mov rdi, 0x101010101010101; imul rax, rdi; shr rax, 0x38; ret; 
0x00000000129f32: clc; mov rdi, r12; mov edx, [rsp+0x38]; call qword ptr [rsp+0x60]; 
0x000000000b7f06: clc; mov rsi, [rsi]; mov [rdi+rdx-0x8], rcx; mov [rdi], rsi; ret; 
0x00000000062a1c: clc; notrack jmp rax; 
0x00000000159a3c: clc; or [rax], al; call qword ptr [rax+0x8]; 
0x000000000598da: clc; or [rdi-0x2e], esi; mov rax, r8; ret; 
0x00000000129803: clc; or eax, esi; bswap eax; ret; 
0x00000000118ff4: clc; or rax, rsi; ret; 
0x0000000006104f: clc; push qword ptr [rbp+rcx+0x44]; mov eax, eax; ret; 
0x0000000007f435: clc; push qword ptr [rdi+rcx+0x48]; mov eax, [rsp+0x8]; add rsp, 0x18; ret; 
0x0000000011c0ae: clc; push qword ptr [rsi+rbp-0x7d]; rol byte ptr [rcx], 0x66; mov [rdx], eax; ret; 
0x00000000040952: clc; ret far; 
0x000000000543ff: clc; ret; 
0x000000001297b5: clc; rol ax, 0x8; ret; 
0x000000001296cf: clc; sar rax, 0x6; ret; 
0x000000000596f4: clc; saveprevssp; mov [r9+0x3a8], rdi; mov rsp, rdx; ret; 
0x000000000e5895: clc; sbb [rcx], bh; ret; 
0x000000000cc009: clc; sbb [rdi+0x23], edi; mov rax, r12; pop r12; ret; 
0x00000000157304: clc; sbb eax, 0x488d0009; jmp qword ptr [rsi-0x7d]; 
0x00000000054479: clc; shl r9, cl; mov [rdi-0x10], r9; ret; 
0x00000000129879: clc; shr eax, 0x18; ret; 
0x000000000cb84f: clc; shr rax, 0x2; ret; 
0x0000000003482b: clc; std; je short 0x0000000000034848; pop rbx; ret; 
0x0000000007d6e4: clc; sub [rdi+0x10], esi; movsxd rax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x00000000171e40: clc; sub r8, 0x10; lea rcx, [rdx+0x10]; jne 0x0000000000172390; ret; 
0x00000000172036: clc; sub r8, 0x1; lea rcx, [rdx+0x1]; jne 0x0000000000172390; ret; 
0x00000000172058: clc; sub r8, 0x2; lea rcx, [rdx+0x2]; jne 0x0000000000172390; ret; 
0x0000000017207e: clc; sub r8, 0x3; lea rcx, [rdx+0x3]; jne 0x0000000000172390; ret; 
0x00000000172096: clc; sub r8, 0x4; lea rcx, [rdx+0x4]; jne 0x0000000000172390; ret; 
0x000000001720bc: clc; sub r8, 0x5; lea rcx, [rdx+0x5]; jne 0x0000000000172390; ret; 
0x000000001720de: clc; sub r8, 0x6; lea rcx, [rdx+0x6]; jne 0x0000000000172390; ret; 
0x000000001720fc: clc; sub r8, 0x7; lea rcx, [rdx+0x7]; jne 0x0000000000172390; ret; 
0x00000000171dd8: clc; sub r8, 0x8; lea rcx, [rdx+0x8]; jne 0x0000000000172390; ret; 
0x0000000017211e: clc; sub r8, 0x9; lea rcx, [rdx+0x9]; jne 0x0000000000172390; ret; 
0x0000000017213e: clc; sub r8, 0xa; lea rcx, [rdx+0xa]; jne 0x0000000000172390; ret; 
0x0000000017215e: clc; sub r8, 0xb; lea rcx, [rdx+0xb]; jne 0x0000000000172390; ret; 
0x0000000017217e: clc; sub r8, 0xc; lea rcx, [rdx+0xc]; jne 0x0000000000172390; ret; 
0x000000001721a0: clc; sub r8, 0xd; lea rcx, [rdx+0xd]; jne 0x0000000000172390; ret; 
0x000000001721c0: clc; sub r8, 0xe; lea rcx, [rdx+0xe]; jne 0x0000000000172390; ret; 
0x000000001721e0: clc; sub r8, 0xf; lea rcx, [rdx+0xf]; jne 0x0000000000172390; ret; 
0x0000000005590f: clc; sub rax, fs:[0x28]; jne short 0x0000000000055995; leave; ret; 
0x00000000186bf6: clc; sub rax, rdx; shr rax, 0x2; vzeroupper; ret; 
0x000000000407bb: clc; sub rax, rdx; shr rax, 0x3f; ret; 
0x00000000182286: clc; sub rax, rdx; vzeroupper; ret; 
0x00000000126d99: clc; sub rcx, fs:[0x28]; jne 0x0000000000126e7d; leave; ret; 
0x0000000015a812: clc; test eax, eax; jne short 0x000000000015a82c; mov eax, 0x27; syscall; 
0x0000000017e1cb: clc; vzeroupper; ret; 
0x00000000093262: cld; adc al, 0x0; mov [rax], rdx; ret; 
0x000000000e0a6a: cld; add [rax], al; ret; 
0x000000000b84db: cld; add eax, [rax]; cmp edx, 0xff; cmove rax, rcx; ret; 
0x000000000b84c0: cld; add eax, [rax]; ret; 
0x00000000142fd1: cld; and edx, 0xfffffffc; lea esi, [rax+rdx+0x28]; mov rax, [rdi+0x8]; call qword ptr [rax+0x30]; 
0x000000000935f6: cld; call far fword ptr [rax+0x5a]; 
0x00000000191d92: cld; call far fword ptr [rbp+0x48]; 
0x000000001430ce: cld; call qword ptr [rax+0x30]; 
0x0000000005b64d: cld; call qword ptr [rax+0x4003d66]; 
0x0000000005e77d: cld; call qword ptr [rax+0x48f2b60f]; 
0x0000000007845d: cld; call qword ptr [rax+0x87e8b48]; 
0x00000000088dd1: cld; cli; jmp qword ptr [rsi+0x66]; 
0x0000000018c591: cld; cmp eax, [rsi-0x4]; jne 0x000000000018c680; ret; 
0x0000000018c671: cld; cmp eax, [rsi-0x4]; jne short 0x000000000018c680; xor eax, eax; ret; 
0x0000000018be40: cld; cmp eax, ecx; jne 0x000000000018c050; xor eax, eax; ret; 
0x00000000189212: cld; cmp ecx, [rdi-0x4]; jne 0x0000000000189446; xor eax, eax; ret; 
0x00000000187be5: cld; cmp ecx, eax; jne 0x00000000001885ff; xor eax, eax; ret; 
0x0000000010c089: cld; dec dword ptr [rax-0x77]; ret; 
0x000000000cec0e: cld; dec dword ptr [rax-0x7b]; ror byte ptr [rdi], 0x84; ret; 
0x0000000014284a: cld; dec dword ptr [rcx-0x75]; and al, 0x38; mov rdi, r12; call qword ptr [rax+0x20]; 
0x00000000190d79: cld; dec dword ptr [rcx-0x75]; jge short 0x0000000000190d8f; add rdi, rbp; call r12; 
0x00000000058d1f: cld; dec dword ptr [rcx-0x77]; ret; 
0x000000000405fb: cld; fld st, tbyte ptr [rsp+0x8]; fscale; fstp st(1), st; ret; 
0x00000000063823: cld; idiv edi; jmp qword ptr [rsi+0xf]; 
0x000000000b85ba: cld; inc dword ptr [rbx]; div ecx; mov eax, eax; ret; 
0x000000000b850b: cld; inc dword ptr [rbx]; ret; 
0x0000000016025c: cld; jb short 0x0000000000160267; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016030c: cld; jb short 0x0000000000160317; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000162c3c: cld; jb short 0x0000000000162c47; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000162cec: cld; jb short 0x0000000000162cf7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000009332e: cld; jmp qword ptr [rbx+rcx*4+0x4]; 
0x0000000005ed80: cld; jmp qword ptr [rsi+0x2e]; 
0x00000000071dd3: cld; jmp qword ptr [rsi+0x66]; 
0x0000000015a531: cld; jmp qword ptr [rsi+0x66]; 
0x00000000072ba5: cld; jmp qword ptr [rsi+0xf]; 
0x000000001136dc: cld; jmp qword ptr [rsi-0x70]; 
0x00000000147a5d: cld; jmp qword ptr [rsi-0x7d]; 
0x0000000010b069: cld; jmp qword ptr [rsp+rax*2-0x77]; 
0x00000000189215: cld; jne 0x0000000000189446; xor eax, eax; ret; 
0x0000000018c594: cld; jne 0x000000000018c680; ret; 
0x0000000018c674: cld; jne short 0x000000000018c680; xor eax, eax; ret; 
0x00000000142fd4: cld; lea esi, [rax+rdx+0x28]; mov rax, [rdi+0x8]; call qword ptr [rax+0x30]; 
0x00000000184dad: cld; lea rax, [rdi+r8]; vzeroupper; ret; 
0x000000001511f9: cld; mov [rdi+0x18], rax; mov eax, r8d; ret; 
0x0000000016155a: cld; mov [rdi-0x11], r11; mov [rdi-0x9], rcx; mov [rdi-0x4], edx; ret; 
0x0000000016173a: cld; mov [rdi-0x12], r11; mov [rdi-0xa], rcx; mov [rdi-0x4], edx; ret; 
0x0000000016191a: cld; mov [rdi-0x13], r11; mov [rdi-0xb], rcx; mov [rdi-0x4], edx; ret; 
0x00000000161afa: cld; mov [rdi-0x14], r11; mov [rdi-0xc], rcx; mov [rdi-0x4], edx; ret; 
0x00000000161b22: cld; mov [rdi-0x4], edx; ret; 
0x00000000161d24: cld; mov [rdi-0x5], edx; mov [rdi-0x4], ecx; ret; 
0x00000000161f24: cld; mov [rdi-0x6], edx; mov [rdi-0x4], ecx; ret; 
0x00000000162124: cld; mov [rdi-0x7], edx; mov [rdi-0x4], ecx; ret; 
0x00000000161576: cld; mov [rdi-0x9], rcx; mov [rdi-0x4], edx; ret; 
0x00000000166e95: cld; mov [rdi-0x9], rdx; mov [rdi-0x4], ecx; ret; 
0x00000000161756: cld; mov [rdi-0xa], rcx; mov [rdi-0x4], edx; ret; 
0x00000000166e15: cld; mov [rdi-0xa], rdx; mov [rdi-0x4], ecx; ret; 
0x00000000161936: cld; mov [rdi-0xb], rcx; mov [rdi-0x4], edx; ret; 
0x00000000166d95: cld; mov [rdi-0xb], rdx; mov [rdi-0x4], ecx; ret; 
0x00000000161b16: cld; mov [rdi-0xc], rcx; mov [rdi-0x4], edx; ret; 
0x00000000166d15: cld; mov [rdi-0xc], rdx; mov [rdi-0x4], ecx; ret; 
0x00000000184076: cld; mov [rdi], ecx; mov [rdi+r8-0x4], edx; vzeroupper; ret; 
0x000000000b834a: cld; mov [rdi], ecx; ret; 
0x000000001856fc: cld; mov [rdi], ecx; vzeroupper; ret; 
0x000000001895e1: cld; mov [rdi], esi; mov [r9-0x4], ecx; ret; 
0x000000000b7f1c: cld; mov [rdi], esi; ret; 
0x000000001834cd: cld; mov byte ptr [rdi+r8], 0x0; vzeroupper; ret; 
0x00000000150d50: cld; mov ebp, edi; jmp qword ptr [rsi+0x66]; 
0x000000000b7f16: cld; mov esi, [rsi]; mov [rdi+rdx-0x4], ecx; mov [rdi], esi; ret; 
0x0000000009e8d6: cld; or [rax+0xf], cl; ret; 
0x0000000011fd48: cld; or byte ptr [rax+rax], 0xf; add eax, 0xffff33e9; jmp qword ptr [rbp+rax*2-0x75]; 
0x00000000149822: cld; out dx, al; dec dword ptr [rax-0x77]; ret; 
0x00000000095850: cld; ret far; 
0x000000000b7e5f: cld; ret; 
0x00000000035abb: cld; sbb al, [rax]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000040b82: cld; sub eax, 0x7f800000; shr eax, 0x1f; ret; 
0x00000000189751: cld; vmovups [r9-0xc0], zmm13; vmovups [r9-0x80], zmm14; vmovups [r9-0x40], zmm15; ret; 
0x00000000189517: cld; vmovups [r9-0xc0], zmm5; vmovups [r9-0x80], zmm6; vmovups [r9-0x40], zmm7; ret; 
0x00000000189c3f: cld; vmovups [rsi-0xc0], zmm2; vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x0000000018407d: cld; vzeroupper; ret; 
0x0000000009742a: cli; adc al, 0x0; syscall; 
0x00000000141233: cli; add [rbp+0x21], esi; ret; 
0x000000000b8335: cli; add [rdi+0x15], esi; jb short 0x00000000000b833d; mov [rdi], cl; ret; 
0x000000001515b3: cli; add [rdi+0x28], edx; mov eax, 0x1; ret; 
0x00000000189ccf: cli; add [rdx+0x2], esi; mov [rdi], cl; ret; 
0x00000000189600: cli; add [rdx+0x4], esi; mov cl, [rsi]; mov [rdi], cl; ret; 
0x00000000168647: cli; add al, 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000107c77: cli; add al, 0x74; or [rax+0x1c], edi; syscall; 
0x00000000187a67: cli; add al, [rax]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x000000000e4a46: cli; add ch, al; ret; 
0x00000000189cc2: cli; add dh, [rdx+0x8]; mov [rdi], cx; mov [rsi-0x2], cx; ret; 
0x000000001515a3: cli; add dword ptr [rdi+0x28], 0x4; mov eax, 0x1; ret; 
0x0000000014fba6: cli; and [rax-0x77], cl; push rsp; and al, 0x8; call qword ptr [rax+0x8]; 
0x000000000b8294: cli; and [rdi+0xb], dh; movdqu [rdi+rdx-0x10], xmm0; movdqu [rdi], xmm0; ret; 
0x00000000189c8b: cli; and [rdx+0xa], dh; vmovdqu [rdi], ymm2; vmovdqu [rsi-0x20], ymm2; ret; 
0x0000000008a413: cli; and dword ptr [rdi], 0xffffffcf; ret; 
0x000000000b6c86: cli; and eax, 0x6349000f; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000f4182: cli; and esi, ebx; jmp qword ptr [rsi+0xf]; 
0x000000000407d3: cli; andpd xmm0, [rip+0x175f14]; andpd xmm1, [rip+0x175efc]; orpd xmm0, xmm1; ret; 
0x0000000007f261: cli; call far fword ptr [rbx+0x4c]; 
0x0000000007744c: cli; call far fword ptr [rbx+0x5d]; 
0x00000000159ce3: cli; cld; jmp qword ptr [rsi+0x2e]; 
0x000000000df44a: cli; cmp [rax], edx; add [rdi+rax*8], ah; or eax, 0xe9000000; ret far; 
0x00000000125a63: cli; cmp edi, 0x56; je short 0x0000000000125a70; mov eax, 0x7; ret; 
0x000000000d8e13: cli; cmp esi, 0x1; je short 0x00000000000d8e20; xor eax, eax; ret; 
0x00000000053291: cli; cmp esi, 0x2f; notrack jmp rdx; 
0x00000000090d73: cli; cmp qword ptr [rdi+0x28], 0x0; je short 0x0000000000090d80; xor eax, eax; ret; 
0x0000000008e3f3: cli; cmp qword ptr [rdi+0x38], 0x0; je short 0x000000000008e400; ret; 
0x0000000009b293: cli; cmp qword ptr [rip+0x14bc74], 0x0; je short 0x000000000009b2a0; ret; 
0x000000000d8f63: cli; cmp qword ptr [rsi+0x8], 0x3b9ac9ff; ja short 0x00000000000d8f98; mov eax, 0xe3; syscall; 
0x00000000128483: cli; cmp rdx, rcx; ja short 0x00000000001284b4; xor eax, eax; syscall; 
0x0000000007f19d: cli; dec dword ptr [rax-0x7b]; ror byte ptr [rdi], 0x84; mov dword ptr [rax], 0x89480000; ret; 
0x00000000084e42: cli; dec dword ptr [rbp+rcx*4+0x2c]; and dword ptr [rsi+0x48], 0xf; outsb dx, [rsi]; ret; 
0x000000000b84df: cli; inc dword ptr [rax]; add [rax], al; cmove rax, rcx; ret; 
0x000000001604fc: cli; jb short 0x0000000000160507; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001605ac: cli; jb short 0x00000000001605b7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000162edc: cli; jb short 0x0000000000162ee7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000162f8c: cli; jb short 0x0000000000162f97; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000189c78: cli; jb short 0x0000000000189c8a; vmovups [rdi], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x00000000182c6b: cli; jg short 0x0000000000182c85; vmovdqu [rdi+rdx-0xf], xmm3; vzeroupper; ret; 
0x0000000018344b: cli; jg short 0x0000000000183465; vmovdqu [rdi+rdx-0xf], xmm3; vzeroupper; ret; 
0x00000000183a0b: cli; jg short 0x0000000000183a25; vmovdqu [rdi+rdx-0xf], xmm3; vzeroupper; ret; 
0x000000001840bc: cli; jg short 0x00000000001840d6; vmovdqu [rdi+r8-0x10], xmm3; vzeroupper; ret; 
0x00000000184161: cli; jg short 0x000000000018416b; vmovdqu [rdi+r8-0x10], xmm0; vzeroupper; ret; 
0x00000000184e91: cli; jg short 0x0000000000184e9b; vmovdqu [rdi+r8-0x10], xmm0; vzeroupper; ret; 
0x000000001851fd: cli; jg short 0x0000000000185207; vmovdqu [rdi+rdx-0x10], xmm1; ret; 
0x000000001856e6: cli; jg short 0x00000000001856f0; vzeroupper; ret; 
0x000000001895bb: cli; jg short 0x00000000001895c5; vmovdqu [r9-0x10], xmm1; ret; 
0x00000000189c9a: cli; jg short 0x0000000000189ca4; vmovdqu [rsi-0x10], xmm0; ret; 
0x00000000189fa5: cli; jg short 0x0000000000189faf; vmovdqu [rdi+rdx-0x10], xmm1; ret; 
0x0000000018a5bc: cli; jg short 0x000000000018a5c6; vzeroupper; ret; 
0x0000000007e811: cli; jmp qword ptr [rbx+rcx*4+0x4]; 
0x0000000007f8ff: cli; jmp qword ptr [rsi+0x2e]; 
0x00000000088dd2: cli; jmp qword ptr [rsi+0x66]; 
0x0000000007fe38: cli; jmp qword ptr [rsi+0xf]; 
0x000000000c6c1c: cli; jmp qword ptr [rsi-0x70]; 
0x00000000136233: cli; lea eax, [rdi+0x9]; and eax, 0xfffffff8; add eax, 0x10; ret; 
0x00000000028de3: cli; lea rax, [rip+0x186cbd]; ret; 
0x00000000028dd3: cli; lea rax, [rip+0x18932d]; ret; 
0x000000000a4da4: cli; mov [rax+0x2], dl; ret; 
0x000000000a4cdf: cli; mov [rdi+0x2], dl; ret; 
0x000000001072e3: cli; mov [rdi+0x4], esi; xor eax, eax; ret; 
0x00000000161f28: cli; mov [rdi-0x4], ecx; ret; 
0x00000000091333: cli; mov dword ptr [rdi], 0x0; xor eax, eax; ret; 
0x00000000108953: cli; mov eax, 0x102; syscall; 
0x0000000010a9b3: cli; mov eax, 0x107; syscall; 
0x0000000010f313: cli; mov eax, 0x10; syscall; 
0x0000000010a8f3: cli; mov eax, 0x10a; syscall; 
0x0000000011a043: cli; mov eax, 0x110; syscall; 
0x0000000011a0a3: cli; mov eax, 0x11b; syscall; 
0x00000000119a03: cli; mov eax, 0x11f; syscall; 
0x00000000119423: cli; mov eax, 0x122; syscall; 
0x00000000119d43: cli; mov eax, 0x123; syscall; 
0x000000001095d3: cli; mov eax, 0x124; syscall; 
0x00000000109633: cli; mov eax, 0x125; syscall; 
0x00000000119e63: cli; mov eax, 0x126; syscall; 
0x0000000011a0d3: cli; mov eax, 0x12c; syscall; 
0x00000000119b83: cli; mov eax, 0x131; syscall; 
0x00000000110253: cli; mov eax, 0x132; syscall; 
0x0000000011a133: cli; mov eax, 0x134; syscall; 
0x0000000011a163: cli; mov eax, 0x13f; syscall; 
0x0000000011a193: cli; mov eax, 0x14a; syscall; 
0x0000000011a1c3: cli; mov eax, 0x14b; syscall; 
0x00000000108e13: cli; mov eax, 0x15; syscall; 
0x00000000091133: cli; mov eax, 0x16; cmp esi, 0x2; jbe short 0x0000000000091140; ret; 
0x00000000109603: cli; mov eax, 0x16; syscall; 
0x000000000920d3: cli; mov eax, 0x18; syscall; 
0x00000000141363: cli; mov eax, 0x1; ret; 
0x0000000010e5f3: cli; mov eax, 0x1; syscall; 
0x000000000e0c63: cli; mov eax, 0x1; test edi, edi; js short 0x00000000000e0c70; ret; 
0x000000001139e3: cli; mov eax, 0x1b; syscall; 
0x000000001139b3: cli; mov eax, 0x1c; syscall; 
0x0000000011b273: cli; mov eax, 0x1e; syscall; 
0x0000000011b313: cli; mov eax, 0x1f; syscall; 
0x00000000109573: cli; mov eax, 0x20; syscall; 
0x000000001095a3: cli; mov eax, 0x21; syscall; 
0x000000000d01e3: cli; mov eax, 0x24; syscall; 
0x000000000de7a3: cli; mov eax, 0x25; syscall; 
0x000000000d0213: cli; mov eax, 0x26; syscall; 
0x000000000dfb03: cli; mov eax, 0x27; syscall; 
0x0000000011a933: cli; mov eax, 0x29; syscall; 
0x000000001436a3: cli; mov eax, 0x2; ret; 
0x0000000011a903: cli; mov eax, 0x30; syscall; 
0x0000000011a2f3: cli; mov eax, 0x31; syscall; 
0x0000000011a453: cli; mov eax, 0x32; syscall; 
0x0000000011a3f3: cli; mov eax, 0x33; syscall; 
0x0000000011a3c3: cli; mov eax, 0x34; syscall; 
0x0000000010e2c3: cli; mov eax, 0x3; syscall; 
0x000000000deb73: cli; mov eax, 0x3b; syscall; 
0x00000000041bc3: cli; mov eax, 0x3e; syscall; 
0x000000000de553: cli; mov eax, 0x3f; syscall; 
0x0000000011b153: cli; mov eax, 0x40; syscall; 
0x0000000011b2a3: cli; mov eax, 0x43; syscall; 
0x0000000011b0e3: cli; mov eax, 0x44; syscall; 
0x0000000011b113: cli; mov eax, 0x47; syscall; 
0x00000000109253: cli; mov eax, 0x49; syscall; 
0x00000000111be3: cli; mov eax, 0x4c; syscall; 
0x00000000111c13: cli; mov eax, 0x4d; syscall; 
0x000000001096f3: cli; mov eax, 0x50; syscall; 
0x00000000109723: cli; mov eax, 0x51; syscall; 
0x00000000060fc3: cli; mov eax, 0x52; syscall; 
0x00000000108923: cli; mov eax, 0x53; syscall; 
0x0000000010a9e3: cli; mov eax, 0x54; syscall; 
0x0000000010a863: cli; mov eax, 0x56; syscall; 
0x0000000010a983: cli; mov eax, 0x57; syscall; 
0x0000000010a8c3: cli; mov eax, 0x58; syscall; 
0x0000000010a923: cli; mov eax, 0x59; syscall; 
0x000000001086f3: cli; mov eax, 0x5a; syscall; 
0x00000000108723: cli; mov eax, 0x5b; syscall; 
0x0000000010a013: cli; mov eax, 0x5c; syscall; 
0x0000000010a043: cli; mov eax, 0x5d; syscall; 
0x0000000010a073: cli; mov eax, 0x5e; syscall; 
0x000000001086e3: cli; mov eax, 0x5f; syscall; 
0x0000000010ed73: cli; mov eax, 0x62; syscall; 
0x0000000011a013: cli; mov eax, 0x63; syscall; 
0x000000000de583: cli; mov eax, 0x64; syscall; 
0x000000000dfb23: cli; mov eax, 0x66; syscall; 
0x00000000119ec3: cli; mov eax, 0x67; syscall; 
0x000000000dfb43: cli; mov eax, 0x68; syscall; 
0x000000000dfb33: cli; mov eax, 0x6b; syscall; 
0x000000000dfb53: cli; mov eax, 0x6c; syscall; 
0x000000000dfde3: cli; mov eax, 0x6d; syscall; 
0x000000000dfb13: cli; mov eax, 0x6e; syscall; 
0x000000000dfe13: cli; mov eax, 0x6f; syscall; 
0x000000000dfe73: cli; mov eax, 0x70; syscall; 
0x000000000dfb63: cli; mov eax, 0x73; syscall; 
0x000000000dfea3: cli; mov eax, 0x76; syscall; 
0x000000000dfed3: cli; mov eax, 0x78; syscall; 
0x000000000dfdb3: cli; mov eax, 0x79; syscall; 
0x000000001192b3: cli; mov eax, 0x7a; syscall; 
0x000000001192e3: cli; mov eax, 0x7b; syscall; 
0x000000000dfe43: cli; mov eax, 0x7c; syscall; 
0x00000000119c53: cli; mov eax, 0x7d; syscall; 
0x00000000119c83: cli; mov eax, 0x7e; syscall; 
0x000000000421c3: cli; mov eax, 0x83; syscall; 
0x0000000011a073: cli; mov eax, 0x86; syscall; 
0x000000001194e3: cli; mov eax, 0x87; syscall; 
0x00000000108593: cli; mov eax, 0x89; syscall; 
0x00000000108de3: cli; mov eax, 0x8; syscall; 
0x000000001085c3: cli; mov eax, 0x8a; syscall; 
0x0000000010f143: cli; mov eax, 0x8c; syscall; 
0x0000000010f183: cli; mov eax, 0x8d; syscall; 
0x000000000fd173: cli; mov eax, 0x8e; syscall; 
0x000000000fd1a3: cli; mov eax, 0x8f; syscall; 
0x000000000fd1d3: cli; mov eax, 0x90; syscall; 
0x000000000fd203: cli; mov eax, 0x91; syscall; 
0x000000000fd263: cli; mov eax, 0x92; syscall; 
0x000000000fd293: cli; mov eax, 0x93; syscall; 
0x000000000fd2c3: cli; mov eax, 0x94; syscall; 
0x00000000113a43: cli; mov eax, 0x95; syscall; 
0x00000000113a73: cli; mov eax, 0x96; syscall; 
0x00000000113aa3: cli; mov eax, 0x97; syscall; 
0x00000000113ad3: cli; mov eax, 0x98; syscall; 
0x00000000110593: cli; mov eax, 0x99; syscall; 
0x00000000119be3: cli; mov eax, 0x9a; syscall; 
0x00000000119f83: cli; mov eax, 0x9b; syscall; 
0x00000000119bb3: cli; mov eax, 0x9e; syscall; 
0x000000001100d3: cli; mov eax, 0xa1; syscall; 
0x00000000110193: cli; mov eax, 0xa2; syscall; 
0x000000001100a3: cli; mov eax, 0xa3; syscall; 
0x00000000119253: cli; mov eax, 0xa6; syscall; 
0x000000001105c3: cli; mov eax, 0xa7; syscall; 
0x000000001105f3: cli; mov eax, 0xa8; syscall; 
0x000000001138e3: cli; mov eax, 0xa; syscall; 
0x0000000010fd53: cli; mov eax, 0xaa; syscall; 
0x0000000010fe93: cli; mov eax, 0xab; syscall; 
0x000000001191a3: cli; mov eax, 0xac; syscall; 
0x00000000119173: cli; mov eax, 0xad; syscall; 
0x00000000119cb3: cli; mov eax, 0xae; syscall; 
0x00000000119ce3: cli; mov eax, 0xb0; syscall; 
0x00000000119da3: cli; mov eax, 0xb1; syscall; 
0x00000000119f53: cli; mov eax, 0xb4; syscall; 
0x000000001138b3: cli; mov eax, 0xb; syscall; 
0x0000000011a1f3: cli; mov eax, 0xba; syscall; 
0x00000000119283: cli; mov eax, 0xbb; syscall; 
0x00000000116f13: cli; mov eax, 0xc2; syscall; 
0x00000000116f73: cli; mov eax, 0xc3; syscall; 
0x00000000116e53: cli; mov eax, 0xc4; syscall; 
0x00000000117003: cli; mov eax, 0xc5; syscall; 
0x00000000116fa3: cli; mov eax, 0xc6; syscall; 
0x00000000116e83: cli; mov eax, 0xc7; syscall; 
0x000000000ccd83: cli; mov eax, 0xc9; syscall; 
0x0000000010f223: cli; mov eax, 0xc; syscall; 
0x000000000fd363: cli; mov eax, 0xcb; syscall; 
0x00000000119d13: cli; mov eax, 0xd5; syscall; 
0x00000000119c13: cli; mov eax, 0xe4; syscall; 
0x0000000011a203: cli; mov eax, 0xea; syscall; 
0x00000000119e33: cli; mov eax, 0xfd; syscall; 
0x00000000119e03: cli; mov eax, 0xfe; syscall; 
0x00000000119e93: cli; mov eax, 0xff; syscall; 
0x0000000008e4b3: cli; mov eax, 0xffffffff; ret; 
0x00000000107bc3: cli; mov eax, [rdi+0x108]; mov [rsi], eax; xor eax, eax; ret; 
0x0000000008fb73: cli; mov eax, [rdi+0x10]; sub eax, [rsi+0x10]; ret; 
0x00000000107bb3: cli; mov eax, [rdi+0x10c]; mov [rsi], eax; xor eax, eax; ret; 
0x000000001515c3: cli; mov eax, [rdi+0x28]; ret; 
0x00000000090df3: cli; mov eax, [rdi+0x4]; mov [rsi], eax; xor eax, eax; ret; 
0x0000000010e623: cli; mov eax, [rdi+0x8]; and eax, 0x100f; ret; 
0x00000000089613: cli; mov eax, [rdi]; and eax, 0x200; ret; 
0x000000000895e3: cli; mov eax, [rdi]; and eax, 0x804; ret; 
0x00000000090de3: cli; mov eax, [rdi]; mov [rsi], eax; xor eax, eax; ret; 
0x000000000da1d3: cli; mov eax, [rdi]; ret; 
0x0000000008a423: cli; mov eax, [rdi]; shr eax, 0x4; and eax, 0x1; ret; 
0x0000000008a433: cli; mov eax, [rdi]; shr eax, 0x5; and eax, 0x1; ret; 
0x000000000425c3: cli; mov eax, [rip+0x1a0bde]; ret; 
0x000000000425b3: cli; mov eax, [rip+0x1a0bf2]; ret; 
0x00000000141bd3: cli; mov eax, [rip+0xa7126]; test eax, eax; je short 0x0000000000141be0; ret; 
0x00000000107c63: cli; mov eax, [rsi]; mov [rdi+0x108], eax; xor eax, eax; ret; 
0x00000000038d73: cli; mov eax, edi; and eax, 0x7f; ret; 
0x000000001297a3: cli; mov eax, edi; bswap eax; ret; 
0x000000001297b3: cli; mov eax, edi; rol ax, 0x8; ret; 
0x00000000108ca3: cli; mov eax, fs:[0x18]; test eax, eax; jne short 0x0000000000108cc0; syscall; 
0x0000000011704a: cli; mov ebp, 0xd8f7000c; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000161f22: cli; mov ecx, [rsi-0x4]; mov [rdi-0x6], edx; mov [rdi-0x4], ecx; ret; 
0x00000000135433: cli; mov edi, [rdi]; mov eax, 0x3; syscall; 
0x00000000157de3: cli; mov edi, [rip+0x8b662]; test edi, edi; jns short 0x0000000000157df0; ret; 
0x0000000010f6db: cli; mov edi, ebp; mov eax, 0x147; syscall; 
0x0000000010f83b: cli; mov edi, ebp; mov eax, 0x148; syscall; 
0x00000000110285: cli; mov esi, 0x28121969; mov edi, 0xfee1dead; mov eax, 0xa9; syscall; 
0x00000000041bf3: cli; mov esi, 0x8; mov eax, 0x7f; syscall; 
0x0000000015cef3: cli; mov qword ptr [rcx], 0x0; mov eax, 0xffffffff; ret; 
0x0000000008ff43: cli; mov qword ptr [rip+0x156721], 0x0; mov qword ptr [rip+0x15671e], 0x0; ret; 
0x0000000010a0a3: cli; mov r10, rcx; mov eax, 0x104; syscall; 
0x00000000060ff3: cli; mov r10, rcx; mov eax, 0x108; syscall; 
0x0000000010a893: cli; mov r10, rcx; mov eax, 0x109; syscall; 
0x0000000010a953: cli; mov r10, rcx; mov eax, 0x10b; syscall; 
0x0000000010e5b3: cli; mov r10, rcx; mov eax, 0x11; syscall; 
0x00000000119a33: cli; mov r10, rcx; mov eax, 0x11e; syscall; 
0x00000000119c23: cli; mov r10, rcx; mov eax, 0x12d; syscall; 
0x000000001194b3: cli; mov r10, rcx; mov eax, 0x12e; syscall; 
0x0000000011a103: cli; mov r10, rcx; mov eax, 0x12f; syscall; 
0x00000000119b03: cli; mov r10, rcx; mov eax, 0x136; syscall; 
0x00000000119b43: cli; mov r10, rcx; mov eax, 0x137; syscall; 
0x00000000119f23: cli; mov r10, rcx; mov eax, 0x19; syscall; 
0x0000000010dc93: cli; mov r10, rcx; mov eax, 0x28; syscall; 
0x0000000011a963: cli; mov r10, rcx; mov eax, 0x35; syscall; 
0x0000000011a8d3: cli; mov r10, rcx; mov eax, 0x36; syscall; 
0x0000000011a423: cli; mov r10, rcx; mov eax, 0x37; syscall; 
0x00000000119ef3: cli; mov r10, rcx; mov eax, 0xa5; syscall; 
0x00000000119dd3: cli; mov r10, rcx; mov eax, 0xaf; syscall; 
0x00000000119fb3: cli; mov r10, rcx; mov eax, 0xb2; syscall; 
0x00000000119fe3: cli; mov r10, rcx; mov eax, 0xb3; syscall; 
0x00000000117033: cli; mov r10, rcx; mov eax, 0xbc; syscall; 
0x00000000116fd3: cli; mov r10, rcx; mov eax, 0xbd; syscall; 
0x00000000116eb3: cli; mov r10, rcx; mov eax, 0xbe; syscall; 
0x00000000116ee3: cli; mov r10, rcx; mov eax, 0xbf; syscall; 
0x00000000116f43: cli; mov r10, rcx; mov eax, 0xc0; syscall; 
0x00000000116e23: cli; mov r10, rcx; mov eax, 0xc1; syscall; 
0x00000000113a13: cli; mov r10, rcx; mov eax, 0xd8; syscall; 
0x0000000011b233: cli; mov r10, rcx; mov eax, 0xdc; syscall; 
0x00000000119d73: cli; mov r10, rcx; mov eax, 0xe9; syscall; 
0x0000000010dd93: cli; mov r10d, ecx; mov eax, 0x118; syscall; 
0x00000000108413: cli; mov r10d, ecx; mov eax, 0x14c; syscall; 
0x0000000010d7d3: cli; mov r10d, ecx; mov eax, 0xdd; syscall; 
0x000000001193e3: cli; mov r10d, edx; mov eax, 0x121; mov edx, 0x8; syscall; 
0x0000000008ef23: cli; mov rax, 0xffffffffffffffff; ret; 
0x00000000151143: cli; mov rax, [rdi+0x18]; sub rax, [rdi+0x20]; ret; 
0x0000000008fe63: cli; mov rax, [rdi+0x68]; ret; 
0x00000000083df3: cli; mov rax, [rdi+0xa0]; cmp qword ptr [rax+0x30], 0x0; je short 0x0000000000083e08; ret; 
0x000000000923c3: cli; mov rax, [rdi]; cmp rax, 0x2000000; jbe short 0x00000000000923d0; ret; 
0x00000000092103: cli; mov rax, [rdi]; cmp rax, 0x408; jbe short 0x0000000000092110; ret; 
0x00000000092423: cli; mov rax, [rdi]; cmp rax, 0xa0; jbe short 0x0000000000092430; ret; 
0x00000000092143: cli; mov rax, [rdi]; cmp rax, 0xffff; jbe short 0x0000000000092150; ret; 
0x00000000092163: cli; mov rax, [rdi]; nop; mov [rip+0x151179], rax; ret; 
0x000000000920f3: cli; mov rax, [rdi]; nop; mov [rip+0x151199], rax; ret; 
0x000000000920e3: cli; mov rax, [rdi]; nop; mov [rip+0x1511b1], rax; ret; 
0x00000000092413: cli; mov rax, [rdi]; nop; mov [rip+0x154a66], eax; ret; 
0x0000000008fe43: cli; mov rax, [rip+0x154775]; ret; 
0x00000000042413: cli; mov rax, [rip+0x1a0a2d]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x00000000038f63: cli; mov rax, [rip+0x1a9e65]; add rax, fs:[0x0]; ret; 
0x00000000038f83: cli; mov rax, [rip+0x1a9f3d]; add rax, fs:[0x0]; ret; 
0x00000000038fa3: cli; mov rax, [rip+0x1a9f55]; add rax, fs:[0x0]; ret; 
0x00000000034023: cli; mov rax, [rip+0x1b1685]; ret; 
0x00000000029033: cli; mov rax, [rip+0x1b9e0d]; add rax, fs:[0x0]; ret; 
0x0000000002a6d3: cli; mov rax, [rip+0x1baf95]; ret; 
0x0000000002a6c3: cli; mov rax, [rip+0x1baf9d]; ret; 
0x0000000015cec3: cli; mov rax, [rip+0x85f7d]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x0000000015cea3: cli; mov rax, [rip+0x85f9d]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x0000000015cd73: cli; mov rax, [rip+0x860cd]; mov dword ptr fs:[rax], 0x26; mov rax, 0xffffffffffffffff; ret; 
0x0000000015c873: cli; mov rax, [rip+0x865cd]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x0000000015c853: cli; mov rax, [rip+0x865ed]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x0000000015c813: cli; mov rax, [rip+0x8662d]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x0000000015c7f3: cli; mov rax, [rip+0x8664d]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x0000000015c7d3: cli; mov rax, [rip+0x8666d]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x0000000015c7b3: cli; mov rax, [rip+0x8668d]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x0000000015a853: cli; mov rax, [rip+0x885ed]; mov dword ptr fs:[rax], 0x26; xor eax, eax; ret; 
0x00000000159883: cli; mov rax, [rip+0x895ad]; jmp qword ptr [rax+0x280]; 
0x00000000156783: cli; mov rax, [rip+0x8c6bd]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x0000000014cdb3: cli; mov rax, [rip+0x95fad]; lea rdx, [rip+0x9c13e]; mov fs:[rax], rdx; ret; 
0x0000000013c023: cli; mov rax, [rip+0xa6fbd]; mov rax, fs:[rax]; ret; 
0x0000000013dd53: cli; mov rax, [rip+0xaae45]; test rax, rax; jne short 0x000000000013dd68; ret; 
0x00000000129b63: cli; mov rax, [rip+0xb92c5]; add rax, fs:[0x0]; ret; 
0x0000000011c973: cli; mov rax, [rip+0xc64bd]; mov eax, [rax+0x38]; ret; 
0x0000000011a233: cli; mov rax, [rip+0xc8c0d]; mov dword ptr fs:[rax], 0x26; mov rax, 0xffffffffffffffff; ret; 
0x00000000110573: cli; mov rax, [rip+0xd28cd]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x00000000038f13: cli; mov rax, [rsi+0x70]; movsxd rdi, edi; mov eax, [rax+rdi*4]; ret; 
0x00000000038f23: cli; mov rax, [rsi+0x78]; movsxd rdi, edi; mov eax, [rax+rdi*4]; ret; 
0x00000000091953: cli; mov rax, fs:[0x10]; ret; 
0x000000000454f3: cli; mov rax, rdi; cqo; idiv rsi; ret; 
0x0000000008fe73: cli; mov rax, rdi; ret; 
0x0000000015c733: cli; mov rdx, rsi; mov eax, 0xcb; mov esi, 0x80; syscall; 
0x0000000015c6c3: cli; mov rdx, rsi; mov eax, 0xcc; mov esi, 0x80; syscall; 
0x0000000007bff1: cli; mov rsi, r12; mov rdi, rbp; call qword ptr [r14+0x38]; 
0x000000000720c2: cli; mov rsi, r12; mov rdi, rbp; call qword ptr [rax+0x38]; 
0x0000000009b0ac: cli; mov rsi, r14; mov rdi, r13; call rax; 
0x0000000012f3df: cli; mov rsi, r14; mov rdi, rbx; call rax; 
0x000000000cd043: cli; mov rsi, rdi; mov eax, 0xa4; xor edi, edi; syscall; 
0x000000000412f3: cli; movmskps eax, xmm0; and eax, 0x8; ret; 
0x000000001072a3: cli; movzx eax, word ptr [rdi]; mov [rsi], ax; xor eax, eax; ret; 
0x000000000a8bb9: cli; movzx edx, dl; sub eax, edx; ret; 
0x000000000a4d6f: cli; notrack jmp rdx; 
0x00000000189ca4: cli; or [rdx+0xa], dh; vmovq [rdi], xmm0; vmovq [rsi-0x8], xmm0; ret; 
0x00000000090a05: cli; or dh, [rsp+rcx+0x44]; mov eax, eax; ret; 
0x000000000639a2: cli; out 0xff, eax; jmp qword ptr [rsi+0x2e]; 
0x00000000128781: cli; out dx, eax; jmp qword ptr [rsi+0x2e]; 
0x00000000040f03: cli; pand xmm1, [rip+0x175854]; pand xmm0, [rip+0x17585c]; por xmm0, xmm1; ret; 
0x00000000040a93: cli; pmovmskb eax, xmm0; and eax, 0x80; ret; 
0x00000000040db3: cli; pmovmskb eax, xmm0; and eax, 0x8; ret; 
0x000000000deae3: cli; pop rdi; mov eax, 0x3a; syscall; 
0x00000000040c76: cli; push rax; ret; 
0x000000000e0996: cli; push rbx; pop rax; jne short 0x00000000000e09a0; ret; 
0x000000000e0bf7: cli; push rsp; push rbx; setne al; ret; 
0x000000000b8256: cli; rep stosb [rdi]; mov rax, rdx; ret; 
0x00000000028bb3: cli; ret; 
0x000000000d0261: cli; ror edx, 0x2; cmp edx, 0x28f5c28; jbe short 0x00000000000d0270; ret; 
0x00000000069ee7: cli; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000137b52: cli; sbb edi, edi; jmp qword ptr [rsi+0x2e]; 
0x000000000907a3: cli; setae al; ret; 
0x000000000883ad: cli; stc; jmp qword ptr [rsi+0x2e]; 
0x000000000d0266: cli; sub [rdi+rcx*4+0x2], bl; jbe short 0x00000000000d0270; ret; 
0x000000000e7da1: cli; sub eax, 0x47c6f075; or [rsi], dl; mov eax, 0x1; ret; 
0x00000000119893: cli; test edx, edx; je short 0x00000000001198c8; mov eax, 0x145; syscall; 
0x000000000ae0e8: cli; test rdx, rdx; je 0x00000000000ae190; bsf rax, rdx; ret; 
0x000000000adf89: cli; test rdx, rdx; je short 0x00000000000adfa0; bsf rax, rdx; ret; 
0x000000000adf2c: cli; test rdx, rdx; je short 0x00000000000adfb0; bsf rax, rdx; ret; 
0x000000000ae158: cli; test rdx, rdx; je short 0x00000000000ae180; bsf rax, rdx; ret; 
0x000000000b8243: cli; test rdx, rdx; jne short 0x00000000000b824d; mov rax, rdi; ret; 
0x000000000ae053: cli; test rsi, rsi; jne short 0x00000000000ae05d; xor rax, rax; ret; 
0x000000000cb693: cli; test rsi, rsi; jne short 0x00000000000cb69d; xor rax, rax; ret; 
0x000000000cce93: cli; test rsi, rsi; jne short 0x00000000000ccec8; mov eax, 0x60; syscall; 
0x00000000189a21: cli; vmovups [rdi-0x1c0], zmm14; vmovups [rdi-0x200], zmm15; ret; 
0x00000000038d83: cli; xor eax, eax; and edi, 0xffffff80; sete al; ret; 
0x00000000091343: cli; xor eax, eax; cmp rdi, rsi; sete al; ret; 
0x0000000008eea3: cli; xor eax, eax; ret; 
0x0000000010e583: cli; xor eax, eax; syscall; 
0x000000000895f3: cli; xor eax, eax; test byte ptr [rdi], 0x4; sete al; ret; 
0x00000000089603: cli; xor eax, eax; test byte ptr [rdi], 0x8; sete al; ret; 
0x0000000008ce43: cli; xor eax, eax; test rdx, rdx; jne short 0x000000000008ce50; ret; 
0x0000000011b2d3: cli; xor r10d, r10d; mov eax, 0x1d; syscall; 
0x000000000c6180: cmc; adc [rax], eax; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000009384e: cmc; adc al, 0x0; xor edi, edi; call qword ptr [r13]; 
0x0000000009384f: cmc; adc al, 0x0; xor edi, edi; call qword ptr [r13]; 
0x00000000168ac7: cmc; add al, 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000163897: cmc; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000cbae1: cmc; and ch, 0xf; je short 0x00000000000cbb00; add rax, 0x2; ret; 
0x000000001106dd: cmc; call qword ptr [rax+0x61058b48]; 
0x00000000127b78: cmc; call qword ptr [rax-0x18]; 
0x0000000011065d: cmc; call qword ptr [rax-0x5e1f00d]; 
0x000000000cdcc6: cmc; dec dword ptr [rax-0x77]; ret; 
0x000000000d6ee4: cmc; hlt; jmp far fword ptr [rcx]; 
0x00000000156fd2: cmc; in al, dx; inc dword ptr [rbp-0x3f6bf040]; add rsp, 0x8; ret; 
0x00000000160b8c: cmc; jb short 0x0000000000160b97; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000160c3c: cmc; jb short 0x0000000000160c47; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016356c: cmc; jb short 0x0000000000163577; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016361c: cmc; jb short 0x0000000000163627; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000013621a: cmc; je short 0x0000000000136210; pop rbx; ret; 
0x000000000e7d23: cmc; jmp qword ptr [rsi+0x2e]; 
0x000000000e1ecf: cmc; jmp qword ptr [rsi+0x66]; 
0x000000000e44df: cmc; jmp qword ptr [rsi+0xf]; 
0x000000000e2b5c: cmc; jmp qword ptr [rsi-0x70]; 
0x000000000e0bdc: cmc; lodsd [rsi]; add [rax], al; setne al; ret; 
0x00000000166d9a: cmc; mov [rdi-0x4], ecx; ret; 
0x000000001617ad: cmc; mov [rdi-0x4], edx; ret; 
0x00000000166d93: cmc; mov ecx, [rsi-0x4]; mov [rdi-0xb], rdx; mov [rdi-0x4], ecx; ret; 
0x00000000161932: cmc; mov edx, [rsi-0x4]; mov [rdi-0xb], rcx; mov [rdi-0x4], edx; ret; 
0x0000000018bb82: cmc; movzx edx, byte ptr [rsi-0xb]; sub eax, edx; ret; 
0x00000000159cd4: cmc; or [rax], al; mov rax, [rax+0x10]; add rsp, 0x38; jmp rax; 
0x000000000e4a5d: cmc; or [rax], eax; add [rbx-0x7ae3db8c], cl; test byte ptr [rdi], 0x85; ret; 
0x000000000debf0: cmc; or al, 0x0; mov eax, 0x142; syscall; 
0x000000000d01c5: cmc; or eax, 0x3d8d4800; add dword ptr [rsi+rcx], 0xf6887ce8; jmp qword ptr [rsi+0x2e]; 
0x000000000264e7: cmc; ret far; 
0x0000000003a2c7: cmc; ret; 
0x0000000014a230: cmc; std; jmp qword ptr [rsi+0x66]; 
0x0000000018bb87: cmc; sub eax, edx; ret; 
0x00000000092443: cmova eax, edx; mov [rip+0x154a4b], rax; ret; 
0x0000000010d7ec: cmova eax, edx; ret; 
0x000000000da1a1: cmova edx, eax; mov eax, 0xd9; syscall; 
0x00000000092442: cmova rax, rdx; mov [rip+0x154a4b], rax; ret; 
0x000000000da1a0: cmova rdx, rax; mov eax, 0xd9; syscall; 
0x000000000904ad: cmovae eax, [rdi+0x10]; sub rax, [rdi+0x18]; ret; 
0x00000000084ef4: cmovae eax, [rdx+0x8]; sub rax, [rdx+0x10]; sar rax, 0x2; ret; 
0x0000000011087f: cmovae edx, ecx; mov [rsp+0x20], rax; mov eax, 0x65; syscall; 
0x0000000011087e: cmovae r10, rcx; mov [rsp+0x20], rax; mov eax, 0x65; syscall; 
0x000000000904ac: cmovae rax, [rdi+0x10]; sub rax, [rdi+0x18]; ret; 
0x00000000084ef3: cmovae rax, [rdx+0x8]; sub rax, [rdx+0x10]; sar rax, 0x2; ret; 
0x0000000013d338: cmovb eax, [rdi]; add al, ch; movzx ebp, di; jmp qword ptr [rsi+0x66]; 
0x0000000011aee0: cmovb eax, edx; ret; 
0x000000001834c8: cmovb ecx, [rcx+0x42fc0754]; mov byte ptr [rdi+rax], 0x0; vzeroupper; ret; 
0x00000000184da8: cmovb ecx, [rcx+0x4afc0754]; lea eax, [rdi+rax]; vzeroupper; ret; 
0x00000000059546: cmovb edx, eax; mov rax, r10; pop rbx; pop rbp; ret; 
0x00000000059545: cmovb r10, r8; mov rax, r10; pop rbx; pop rbp; ret; 
0x0000000011aedf: cmovb rax, rdx; ret; 
0x0000000009079c: cmovbe edx, eax; xor eax, eax; cmp rdx, rdi; setae al; ret; 
0x0000000009136f: cmovbe esi, eax; syscall; 
0x0000000009079b: cmovbe rdx, rax; xor eax, eax; cmp rdx, rdi; setae al; ret; 
0x0000000009136e: cmovbe rsi, r8; syscall; 
0x000000000b9265: cmove eax, eax; mov rax, r8; ret; 
0x000000000cb8d8: cmove eax, ebx; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000011067e: cmove eax, ebx; pop rbx; ret; 
0x000000000b84e5: cmove eax, ecx; ret; 
0x0000000009d43c: cmove eax, edx; add eax, 0x1; ret; 
0x000000000cce60: cmove eax, edx; add rsp, 0x58; ret; 
0x00000000099c37: cmove eax, edx; add rsp, 0x8; ret; 
0x00000000037309: cmove eax, edx; mov [rip+0x1ae5ab], al; lea rax, [rip+0x1ae547]; ret; 
0x00000000126ce8: cmove eax, edx; mov [rip+0xc11c6], rax; pop rbp; ret; 
0x000000000386ff: cmove eax, edx; ret; 
0x0000000012322e: cmove eax, esi; ret; 
0x000000000b9264: cmove r8, rax; mov rax, r8; ret; 
0x000000000cb8d7: cmove rax, rbx; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000011067d: cmove rax, rbx; pop rbx; ret; 
0x000000000b84e4: cmove rax, rcx; ret; 
0x0000000009d45f: cmove rax, rdx; add eax, 0x1; ret; 
0x000000000cce5f: cmove rax, rdx; add rsp, 0x58; ret; 
0x00000000099c36: cmove rax, rdx; add rsp, 0x8; ret; 
0x00000000126ce7: cmove rax, rdx; mov [rip+0xc11c6], rax; pop rbp; ret; 
0x000000000386fe: cmove rax, rdx; ret; 
0x000000000cb1a4: cmovg eax, eax; mov eax, r8d; ret; 
0x0000000008376b: cmovg eax, edx; test rax, rax; jne short 0x0000000000083760; mov rax, r8; ret; 
0x0000000008dc73: cmovg eax, edx; test rax, rax; jne short 0x000000000008dc68; mov rax, r8; ret; 
0x0000000007f159: cmovg edx, ecx; mov [rdi+0xd8], rdx; mov rdx, [rdi+0xa0]; mov [rdx+0xe0], rcx; ret; 
0x0000000008376a: cmovg r8, rdx; test rax, rax; jne short 0x0000000000083760; mov rax, r8; ret; 
0x0000000008dc72: cmovg r8, rdx; test rax, rax; jne short 0x000000000008dc68; mov rax, r8; ret; 
0x000000000cb1a3: cmovg r8d, eax; mov eax, r8d; ret; 
0x0000000007f158: cmovg rdx, rcx; mov [rdi+0xd8], rdx; mov rdx, [rdi+0xa0]; mov [rdx+0xe0], rcx; ret; 
0x000000000cb184: cmovl eax, eax; mov eax, r8d; ret; 
0x000000001287c0: cmovl ecx, [rcx+0x415d5be0]; pop rsp; ret; 
0x000000001846fa: cmovl ecx, [rcx+0x48f9174c]; lea eax, [rdi+rdx]; vzeroupper; ret; 
0x000000000cb183: cmovl r8d, eax; mov eax, r8d; ret; 
0x00000000087064: cmovne eax, ecx; ret; 
0x0000000009ed97: cmovne eax, edi; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000009f9be: cmovne eax, edi; ret; 
0x0000000015634a: cmovne eax, edx; add rsp, 0x8; ret; 
0x000000000eac84: cmovne eax, edx; pop rbx; ret; 
0x00000000090c1b: cmovne eax, edx; ret; 
0x00000000181c04: cmovne eax, edx; vzeroupper; ret; 
0x000000000adda1: cmovne ecx, edi; cmovne rsi, rdx; bsr rsi, rsi; lea rax, [rcx+rsi]; ret; 
0x00000000028d63: cmovne edi, esi; call rdx; 
0x000000000896f0: cmovne edx, ecx; mov [rdi], edx; ret; 
0x000000000adda5: cmovne esi, edx; bsr rsi, rsi; lea rax, [rcx+rsi]; ret; 
0x00000000087062: cmovne rax, rcx; ret; 
0x0000000009ed96: cmovne rax, rdi; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000009f9bd: cmovne rax, rdi; ret; 
0x00000000156349: cmovne rax, rdx; add rsp, 0x8; ret; 
0x000000000992bc: cmovne rax, rdx; ret; 
0x00000000181c03: cmovne rax, rdx; vzeroupper; ret; 
0x000000000adda0: cmovne rcx, rdi; cmovne rsi, rdx; bsr rsi, rsi; lea rax, [rcx+rsi]; ret; 
0x00000000028d62: cmovne rdi, r14; call rdx; 
0x000000000adda4: cmovne rsi, rdx; bsr rsi, rsi; lea rax, [rcx+rsi]; ret; 
0x00000000121611: cmovns eax, [rbx+0x28]; pop rbx; ret; 
0x000000000e172d: cmovns eax, [rbx+0x394810c1]; ret; 
0x000000000b3de1: cmovns eax, [rbx-0x72b7e018]; jg short 0x00000000000b3e09; jne 0x00000000000b4270; ret; 
0x000000000b3c7f: cmovns eax, [rbx-0x72b7e818]; jg short 0x00000000000b3c9f; jne 0x00000000000b4270; ret; 
0x000000000b3bfd: cmovns eax, [rbx-0x72b7ec18]; jg short 0x00000000000b3c19; jne 0x00000000000b4270; ret; 
0x000000000b52bb: cmovns eax, [rbx-0x72b7ef18]; jg short 0x00000000000b52d4; jne 0x00000000000b5ac0; ret; 
0x000000000b3ab8: cmovns eax, [rbx-0x72b7f618]; jg short 0x00000000000b3aca; jne 0x00000000000b4270; ret; 
0x000000000b3a36: cmovns eax, [rbx-0x72b7fa18]; jg short 0x00000000000b3a44; jne 0x00000000000b4270; ret; 
0x0000000010f15c: cmovns eax, edx; ret; 
0x000000000b3c7e: cmovns r8, [r11-0x72b7e818]; jg short 0x00000000000b3c9f; jne 0x00000000000b4270; ret; 
0x000000000b3bfc: cmovns r8, [r11-0x72b7ec18]; jg short 0x00000000000b3c19; jne 0x00000000000b4270; ret; 
0x000000000b52ba: cmovns r8d, [r11-0x72b7ef18]; jg short 0x00000000000b52d4; jne 0x00000000000b5ac0; ret; 
0x00000000121610: cmovns rax, [rbx+0x28]; pop rbx; ret; 
0x000000001834ea: cmovp ecx, [rcx+0x42f80754]; mov byte ptr [rdi+rax], 0x0; vzeroupper; ret; 
0x00000000184dca: cmovp ecx, [rcx+0x4af80754]; lea eax, [rdi+rax]; vzeroupper; ret; 
0x00000000142158: cmovs eax, [rbx-0x3fcef73c]; pop rbx; pop rbp; ret; 
0x00000000042670: cmovs eax, [rbx-0x76bbef3c]; loopne 0x00000000000426d4; pop rbp; pop r12; ret; 
0x0000000002be30: cmovs eax, edx; ret; 
0x000000000599bd: cmovs ecx, [rbp+0x39490148]; ret far; 
0x000000000b5295: cmovs ecx, [rbp-0x7af0f081]; and [rax], cl; add [rax], al; ret; 
0x000000000b3b81: cmovs ecx, [rbp-0x7af0f081]; in al, 0x6; add [rax], al; ret; 
0x00000000042588: cmovs ecx, [rbx+0x20b4806]; mov [rdi], rax; xor eax, eax; ret; 
0x00000000042548: cmovs ecx, [rbx+0x2234806]; mov [rdi], rax; xor eax, eax; ret; 
0x0000000007f438: cmovs ecx, [rbx+0x48082444]; add esp, 0x18; ret; 
0x000000001895c9: cmovs ecx, [rbx+0x498b4836]; clc; mov [rdi], rsi; mov [r9-0x8], rcx; ret; 
0x0000000010aa28: cmovs ecx, [rbx+0x7394806]; seta al; movzx eax, al; sbb eax, 0x0; ret; 
0x00000000093c9c: cmovs ecx, [rbx-0x173ef7be]; add al, 0x39; ret; 
0x00000000128ab6: cmovs ecx, [rcx+0x44a89f0]; test ecx, ecx; jne short 0x0000000000128a70; mov rax, r8; ret; 
0x000000000b7399: cmovs ecx, [rcx-0x12cff8a9]; mov [rdi+0xf], ch; ret; 
0x000000000b7379: cmovs ecx, [rcx-0x12cff9a9]; mov [rdi+0xe], ch; ret; 
0x000000000b7359: cmovs ecx, [rcx-0x12cffaa9]; mov [rdi+0xd], ch; ret; 
0x000000000b3239: cmovs ecx, [rcx-0x6f3cf8a9]; movdqu xmm0, [rsi]; movdqu [rdi], xmm0; ret; 
0x000000000b5259: cmovs ecx, [rcx-0x72b7f9a9]; or eax, 0xee88349; lea rdi, [rdi+0xe]; jne 0x00000000000b5ac0; ret; 
0x00000000126b28: cmovs edi, [rcx]; js short 0x0000000000126b35; jne short 0x0000000000126b20; mov rax, [rax+0x30]; ret; 
0x000000000b8520: cmovs esp, [rbx+0x4]; xchg esi, eax; add rax, rsi; notrack jmp rax; 
0x000000000a52dd: cmp [eax], edx; add [rdi+0x63], cl; or al, 0x8a; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000008e477: cmp [r11+0x5d], bl; pop r12; ret; 
0x000000000cb076: cmp [r11], r15b; cmp [rbp+0x13], r14b; ret; 
0x0000000008ecf0: cmp [r13+0x41], r11b; pop rsp; ret; 
0x000000001417b2: cmp [r13+r9*4+0x6c], r9b; and al, 0x68; mov rsi, r13; call qword ptr [rax+0x10]; 
0x000000001212b7: cmp [r8+0x39], r9b; ret; 
0x0000000009bf81: cmp [r8+0x8], rsi; jb short 0x000000000009bf90; mov [r8], rsi; ret; 
0x00000000121de1: cmp [r8-0x7d], cl; ret; 
0x000000001449f0: cmp [r8], al; add [rax], al; add [rcx-0xdd6b7ff], cl; mov rbp, rdx; call qword ptr [rbx+0x10]; 
0x0000000008e3d1: cmp [r9-0x3b7cb7fd], cl; adc [rbx+0x5d], bl; pop r12; ret; 
0x000000000b9137: cmp [r9], edx; jne short 0x00000000000b90dd; test edx, edx; jne short 0x00000000000b9120; ret; 
0x000000000a8497: cmp [rax+0x1], cl; clc; ret; 
0x00000000074845: cmp [rax+0x39], cl; ret; 
0x00000000126b2a: cmp [rax+0x8], edi; jne short 0x0000000000126b20; mov rax, [rax+0x30]; ret; 
0x0000000009bf82: cmp [rax+0x8], esi; jb short 0x000000000009bf90; mov [r8], rsi; ret; 
0x00000000126b29: cmp [rax+0x8], rdi; jne short 0x0000000000126b20; mov rax, [rax+0x30]; ret; 
0x0000000010e60b: cmp [rax+0xd], ecx; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x2]; mov rax, 0xffffffffffffffff; ret; 
0x0000000015f497: cmp [rax+rax], eax; add [rbp-0x77], cl; ret far; 
0x00000000178ad7: cmp [rax+rax], ecx; add [rbp-0x77], cl; ret far; 
0x0000000007523b: cmp [rax+rax], ecx; add [rcx+rcx*4-0x16], cl; mov rsi, r14; mov rdi, rbp; call qword ptr [rbx+0x38]; 
0x00000000111c76: cmp [rax-0x1], bh; ret; 
0x000000001214d0: cmp [rax-0x3c41f0e8], cl; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000093b8e: cmp [rax-0x75], cl; or [rax-0x77], r9b; ret; 
0x0000000008ecbd: cmp [rax-0x77], cl; ret; 
0x0000000007b522: cmp [rax-0x77], ecx; ret far; 
0x00000000141421: cmp [rax-0x7b], cl; shl byte ptr [rbp+rax+0x48], 0x89; out dx, eax; call rax; 
0x00000000143435: cmp [rax-0x7b], cl; shl byte ptr [rbp+rax+0x4c], 0x89; out dx, eax; call rax; 
0x00000000146e42: cmp [rax-0x7b], cl; shl byte ptr [rcx+rcx+0x48], 0x8d; mov ebp, 0xc8; call rax; 
0x00000000149c1f: cmp [rax-0x7b], cl; shl byte ptr [rsi+rax+0x48], 0x8d; jge short 0x0000000000149c92; call rax; 
0x0000000014a6bf: cmp [rax-0x7b], cl; shl byte ptr [rsi+rax+0x48], 0x8d; jge short 0x000000000014a722; call rax; 
0x0000000003adc8: cmp [rax-0x7d], cl; ret; 
0x0000000017e386: cmp [rax-0x7f], ecx; mov dword ptr [rax-0x15000000], 0xbc0ff3d0; ror byte ptr [rax+0x1], 0xf8; vzeroupper; ret; 
0x000000000749bb: cmp [rax], ah; jmp rsi; 
0x000000000759e5: cmp [rax], ah; mov rbx, rdi; mov dword ptr [rsp+0x28], 0x1; jmp rsi; 
0x0000000017d843: cmp [rax], ah; movzx edx, byte ptr [rdx+rdi+0x20]; sub eax, edx; vzeroupper; ret; 
0x000000000a8486: cmp [rax], ah; ret; 
0x000000001449f1: cmp [rax], al; add [rax], al; add [rcx-0xdd6b7ff], cl; mov rbp, rdx; call qword ptr [rbx+0x10]; 
0x000000000de949: cmp [rax], al; add [rax], al; syscall; 
0x0000000008e3f7: cmp [rax], al; je short 0x000000000008e400; ret; 
0x000000000ad7c4: cmp [rax], dh; cmovne rax, rdx; ret; 
0x000000000a8966: cmp [rax], dh; ret; 
0x000000000a8476: cmp [rax], dl; ret; 
0x0000000011b34b: cmp [rax], eax; je short 0x000000000011b350; ret; 
0x00000000110ef4: cmp [rax], eax; lea rax, [rcx+0x1]; jne short 0x0000000000110ecf; mov rax, r8; ret; 
0x000000000a52de: cmp [rax], edx; add [rdi+0x63], cl; or al, 0x8a; lea r10, [r10+r9]; notrack jmp r10; 
0x000000000df44b: cmp [rax], edx; add [rdi+rax*8], ah; or eax, 0xe9000000; ret far; 
0x000000000a8475: cmp [rax], r10b; ret; 
0x0000000017d842: cmp [rax], r12b; movzx edx, byte ptr [rdx+rdi+0x20]; sub eax, edx; vzeroupper; ret; 
0x000000000a8485: cmp [rax], r12b; ret; 
0x000000000a8965: cmp [rax], r14b; ret; 
0x000000000ad7c3: cmp [rax], sil; cmovne rax, rdx; ret; 
0x000000000cb07a: cmp [rbp+0x13], dh; ret; 
0x000000000cb079: cmp [rbp+0x13], r14b; ret; 
0x0000000008ecf1: cmp [rbp+0x41], bl; pop rsp; ret; 
0x000000001417b3: cmp [rbp+rcx*4+0x6c], cl; and al, 0x68; mov rsi, r13; call qword ptr [rax+0x10]; 
0x00000000116e11: cmp [rbp-0x3dbbf040], al; ret; 
0x000000000e1f44: cmp [rbp-0xc], al; inc dword ptr [rcx-0x80]; jl short 0x00000000000e1f50; jmp far fword ptr [rdi]; 
0x00000000115b78: cmp [rbp], ebx; jbe short 0x0000000000115ba8; mov rsi, r12; mov rdi, r14; call r13; 
0x00000000115b77: cmp [rbp], rbx; jbe short 0x0000000000115ba8; mov rsi, r12; mov rdi, r14; call r13; 
0x000000000dd7e7: cmp [rbx+0x109cb12d], al; add [rcx], al; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x000000000dbb17: cmp [rbx+0x10b8112d], al; add [rcx], al; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x000000000973ce: cmp [rbx+0x14fa9a2d], eax; add [rcx], al; pop rbx; ret; 
0x000000001906f9: cmp [rbx+0x41], bl; pop rsi; ret; 
0x0000000008191f: cmp [rbx+0x445b012f], al; mov eax, eax; pop rbp; pop r12; ret; 
0x00000000081f70: cmp [rbx+0x44], ebx; mov eax, eax; pop rbp; pop r12; ret; 
0x0000000002a7b8: cmp [rbx+0x5d], bl; pop r12; pop r13; ret; 
0x0000000008e478: cmp [rbx+0x5d], bl; pop r12; ret; 
0x000000000290ca: cmp [rbx+0x5d], bl; ret; 
0x0000000011609f: cmp [rbx+0x5d], ebx; pop r12; ret; 
0x0000000012ce62: cmp [rbx+0x6401000b], esi; mov [r8], r9d; add rsp, 0x8; ret; 
0x000000001569b6: cmp [rbx+0x927262d], eax; add [rcx], al; mov rax, r8; pop rbp; ret; 
0x00000000133507: cmp [rbx+0xb50712d], al; add [rcx], al; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x000000001200c7: cmp [rbx+0xc7d812d], al; add [rcx], al; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x0000000011e867: cmp [rbx+0xc94892d], al; add [rcx], al; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x00000000101905: cmp [rbx+rcx*4+0x25], cl; ret; 
0x000000000cb077: cmp [rbx], bh; cmp [rbp+0x13], r14b; ret; 
0x000000000f79d3: cmp [rbx], cl; add [rax+0x63], cl; adc al, 0x91; add rdx, rcx; notrack jmp rdx; 
0x000000000516c1: cmp [rcx+0x1], al; ret; 
0x00000000142850: cmp [rcx+rcx*4-0x19], cl; call qword ptr [rax+0x20]; 
0x0000000014a88c: cmp [rcx+rcx*4-0x2], cl; mov rax, [rdi+0x38]; call qword ptr [rax+0x8]; 
0x00000000082d46: cmp [rcx+rcx*4-0x38], al; ret; 
0x0000000014c339: cmp [rcx+rcx*4-0x39], cl; call qword ptr [rax+0x20]; 
0x000000000878d8: cmp [rcx+rcx*4-0x40], al; pop rbx; pop rbp; pop r12; ret; 
0x000000000f9780: cmp [rcx+rcx*4-0x40], cl; ret; 
0x0000000012a973: cmp [rcx+rcx*4-0xa], al; mov rdi, r13; call qword ptr [rsp+0x50]; 
0x0000000008e3d2: cmp [rcx-0x3b7cb7fd], cl; adc [rbx+0x5d], bl; pop r12; ret; 
0x0000000003b400: cmp [rcx-0x75], al; adc al, 0x89; ret far; 
0x0000000013a9e1: cmp [rcx-0x80], al; jmp qword ptr [rax]; 
0x00000000134915: cmp [rcx-0xa], al; ret; 
0x0000000007b493: cmp [rcx], al; add [rax], al; add [rax-0x77], cl; jmp rcx; 
0x00000000176179: cmp [rcx], al; sbb rax, 0xffffffffffffffff; ret; 
0x000000000b5184: cmp [rcx], cl; add [rax], al; ret; 
0x000000001214a0: cmp [rcx], dh; rcr byte ptr [rbx+0x5d], 0x41; pop rsp; ret; 
0x0000000014f8b8: cmp [rcx], dh; ror byte ptr [rax-0x77], 0xe7; mov dword ptr [rsp], 0x2; call r8; 
0x00000000151527: cmp [rcx], dh; sar byte ptr [rdx-0x1], 0x4c; mov esi, esi; mov rdi, rbp; call r12; 
0x000000000a0aee: cmp [rcx], dl; add al, ch; pop rcx; jg short 0x00000000000a0aef; jmp qword ptr [rsi+0xf]; 
0x000000000a0aef: cmp [rcx], dl; add al, ch; pop rcx; jg short 0x00000000000a0aef; jmp qword ptr [rsi+0xf]; 
0x00000000147a53: cmp [rcx], ebx; add [rbx-0x7e17ff83], cl; sbb bh, ah; jmp qword ptr [rsi-0x7d]; 
0x0000000010f50b: cmp [rcx], edi; or eax, 0x64d8f700; mov [rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x000000000b9138: cmp [rcx], edx; jne short 0x00000000000b90dd; test edx, edx; jne short 0x00000000000b9120; ret; 
0x000000000904a9: cmp [rdi+0x10], eax; cmovae rax, [rdi+0x10]; sub rax, [rdi+0x18]; ret; 
0x000000000904a8: cmp [rdi+0x10], rax; cmovae rax, [rdi+0x10]; sub rax, [rdi+0x18]; ret; 
0x0000000010dead: cmp [rdi+0x28], eax; sete al; ret; 
0x0000000010deac: cmp [rdi+0x28], rax; sete al; ret; 
0x000000000fd3bc: cmp [rdi+0x4], edx; ja short 0x00000000000fd3c7; setne al; movzx eax, al; ret; 
0x000000000dbbf2: cmp [rdi+0x64010010], esi; mov [r8], r9d; add rsp, 0x8; ret; 
0x000000000caf1b: cmp [rdi+0xc], ecx; jne 0x00000000000cb090; xor eax, eax; ret; 
0x0000000014c103: cmp [rdi+rdi*8+0x8beff], ebx; add [rax], al; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x0000000014d62e: cmp [rdi], cl; adc [rsp+0x18], eax; call qword ptr [rax+0x18]; 
0x00000000187a9d: cmp [rdi], dl; ret; 
0x0000000010aa2d: cmp [rdi], eax; seta al; movzx eax, al; sbb eax, 0x0; ret; 
0x0000000010aa2c: cmp [rdi], rax; seta al; movzx eax, al; sbb eax, 0x0; ret; 
0x0000000003736b: cmp [rdx+0x38], edi; jbe short 0x0000000000037387; mov rax, [rdx+rdi*8+0x40]; ret; 
0x00000000087061: cmp [rdx+0x48], eax; cmovne eax, ecx; ret; 
0x0000000008705f: cmp [rdx+0x48], r8; cmovne eax, ecx; ret; 
0x000000000c5fa4: cmp [rdx+0x5], bh; add [rbx-0x76b30383], cl; out 0x89, al; ret; 
0x00000000084ef0: cmp [rdx+0x8], eax; cmovae rax, [rdx+0x8]; sub rax, [rdx+0x10]; sar rax, 0x2; ret; 
0x00000000084eef: cmp [rdx+0x8], rax; cmovae rax, [rdx+0x8]; sub rax, [rdx+0x10]; sar rax, 0x2; ret; 
0x000000000284cf: cmp [rdx+0xd8], eax; jne short 0x000000000002849b; ret; 
0x000000000284ce: cmp [rdx+0xd8], rax; jne short 0x000000000002849b; ret; 
0x00000000035484: cmp [rdx], al; sbb eax, [rax]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000001563f3: cmp [rdx], eax; in eax, dx; jmp qword ptr [rbx+rcx*4+0x4]; 
0x00000000092819: cmp [rip+0x154669], edi; jbe short 0x00000000000927c8; add rsp, 0x8; ret; 
0x00000000092818: cmp [rip+0x154669], rdi; jbe short 0x00000000000927c8; add rsp, 0x8; ret; 
0x000000001140d6: cmp [rip+0x415c4100], cl; pop rbp; ret; 
0x000000000d678e: cmp [rip+0x48c18900], ecx; movsxd edx, [rdi+rcx*4]; add rdx, rdi; notrack jmp rdx; 
0x0000000010f5cc: cmp [rip+0x64d8f700], cl; mov [rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000010f454: cmp [rip+0x64d8f700], ecx; mov [rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000010e66c: cmp [rip-0x1010], ah; or esi, eax; xor eax, eax; mov [rdi+0x8], esi; ret; 
0x0000000002d3b8: cmp [rip-0x17000000], al; imul edi, esi, 0xffffffff; jmp qword ptr [rsi+0xf]; 
0x0000000003736d: cmp [rsi+0x17], dh; mov rax, [rdx+rdi*8+0x40]; ret; 
0x0000000011f742: cmp [rsi+0x6401000c], eax; mov [r9], ebx; mov rax, r8; pop rbx; ret; 
0x000000000867f4: cmp [rsi+0xf], ah; outsd dx, [rsi]; ret; 
0x00000000042cfd: cmp [rsi-0x70], ah; mov rdx, rbp; mov rsi, r12; mov rdi, r13; call rbx; 
0x000000000e0b88: cmp [rsi], ah; mov eax, 0x20; cmovne rax, rdx; ret; 
0x000000000e0a58: cmp [rsi], ah; mov eax, 0x7f; cmovne rax, rdx; ret; 
0x000000000e0c49: cmp [rsi], ah; sete al; movzx eax, al; lea rax, [rax+rax-0x1]; ret; 
0x000000000eacca: cmp [rsi], cl; je 0x00000000000eac2d; ret; 
0x00000000028d5e: cmp [rsp+0x18], ecx; cmovne rdi, r14; call rdx; 
0x00000000028d5d: cmp [rsp+0x18], rcx; cmovne rdi, r14; call rdx; 
0x00000000185f5b: cmp ah, [rax]; jne 0x0000000000185d99; vzeroupper; ret; 
0x0000000017d848: cmp ah, [rax]; sub eax, edx; vzeroupper; ret; 
0x000000000b6ec6: cmp ah, [rdi+rcx]; add [rbx+0x63], cl; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000014b512: cmp ah, dl; std; jmp qword ptr [rsi+0x2e]; 
0x00000000119227: cmp al, 0x0; add [rax], al; syscall; 
0x0000000007bf3b: cmp al, 0x1; add [rax], al; add [rax-0x77], cl; jmp rcx; 
0x0000000006103d: cmp al, 0x1; add [rax], al; syscall; 
0x00000000111dd0: cmp al, 0x20; je short 0x0000000000111dc0; mov byte ptr [rsi-0x1], 0x0; mov rax, r8; ret; 
0x0000000008dfd7: cmp al, 0x24; add rsp, 0x10; pop rbx; jmp rax; 
0x00000000114b07: cmp al, 0x24; call rbx; 
0x000000000b94a7: cmp al, 0x24; lea r9, [rsp+0x28]; call rbx; 
0x000000001196c5: cmp al, 0x24; mov eax, 0x116; syscall; 
0x00000000106ce6: cmp al, 0x24; mov eax, 0x11; syscall; 
0x00000000106d96: cmp al, 0x24; mov eax, 0x12; syscall; 
0x0000000011a59f: cmp al, 0x24; mov eax, 0x2d; mov rdx, [rsp+0x10]; mov rsi, [rsp+0x8]; syscall; 
0x00000000109697: cmp al, 0x24; mov r8d, eax; mov eax, 0x55; syscall; 
0x00000000159740: cmp al, 0x24; mov rax, [rax+0x268]; jmp rax; 
0x00000000043946: cmp al, 0x24; mov rdx, r14; mov rax, [rsp]; call rax; 
0x000000001417c5: cmp al, 0x24; mov rsi, r13; mov rax, [rdi+0x38]; call qword ptr [rax+0x10]; 
0x00000000042b91: cmp al, 0x24; mov rsi, r15; call r14; 
0x00000000141677: cmp al, 0x24; mov rsi, rbp; mov rax, [rdi+0x38]; call qword ptr [rax+0x8]; 
0x0000000014172a: cmp al, 0x24; test r15d, r15d; je short 0x00000000001417b0; mov rax, [rdi+0x38]; call qword ptr [rax+0x18]; 
0x0000000013e607: cmp al, 0x25; xor [rax], al; add [rax], al; call rax; 
0x000000001891f3: cmp al, 0x2; add [rax], al; xor eax, eax; ret; 
0x00000000156310: cmp al, 0x34; std; jmp qword ptr [rsi+0x66]; 
0x0000000009c39d: cmp al, 0x3; je short 0x000000000009c3b0; movsx edx, al; mov eax, edx; ret; 
0x0000000009f613: cmp al, 0x3d; je short 0x000000000009f62c; xor eax, eax; ret; 
0x000000000e3b53: cmp al, 0x3f; jne short 0x00000000000e3b89; mov eax, 0x1; ret; 
0x000000000e3b74: cmp al, 0x3f; jne short 0x00000000000e3ba9; mov eax, 0x1; ret; 
0x000000001108b0: cmp al, 0x48; add esp, 0x68; ret; 
0x0000000014cc4b: cmp al, 0x4c; lea ecx, [rsp+0x2a]; call qword ptr [rax]; 
0x000000000b3d30: cmp al, 0x5; add [rax], al; ret; 
0x0000000014e700: cmp al, 0x7c; in eax, dx; jmp qword ptr [rsi+0x66]; 
0x000000000318da: cmp al, 0x94; add [rax], al; add [rax+0x39], cl; ret far; 
0x00000000185f27: cmp al, 0xa; jne 0x0000000000185d99; vzeroupper; ret; 
0x000000001863ad: cmp al, 0xa; jne 0x0000000000186209; vzeroupper; ret; 
0x0000000010f198: cmp al, 0xd; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x0000000010f164: cmp al, 0xd; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x2]; mov eax, 0xffffffff; ret; 
0x00000000185f24: cmp al, 0xe; cmp edi, [rdx+rcx]; jne 0x0000000000185d99; vzeroupper; ret; 
0x000000001863aa: cmp al, 0xe; cmp edi, [rdx+rcx]; jne 0x0000000000186209; vzeroupper; ret; 
0x00000000188c50: cmp al, 0xea; add al, [rax]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x000000000cd72f: cmp al, 0xf9; call far fword ptr [rdx+0x59]; 
0x00000000084dab: cmp al, 0xfb; jmp qword ptr [rsi-0x70]; 
0x000000000d8e51: cmp al, 0xfd; add al, [rax]; add [rax], al; syscall; 
0x00000000145a61: cmp al, 0xfe; jmp qword ptr [rsi+0x2e]; 
0x00000000037307: cmp al, 0xff; cmove eax, edx; mov [rip+0x1ae5ab], al; lea rax, [rip+0x1ae547]; ret; 
0x000000000deae6: cmp al, [rax]; add [rax], al; syscall; 
0x00000000184c92: cmp al, [rdx]; add [rax], al; vzeroupper; ret; 
0x00000000110672: cmp al, [rip-0x3f7a000b]; mov eax, 0x0; cmove rax, rbx; pop rbx; ret; 
0x0000000018beee: cmp al, [rsi-0x1]; jne 0x000000000018c065; xor eax, eax; ret; 
0x0000000018c046: cmp al, [rsi-0x1]; jne short 0x000000000018c065; xor eax, eax; ret; 
0x00000000099315: cmp al, al; jne short 0x0000000000099300; lea rax, [rdx-0x10]; ret; 
0x0000000012c0b2: cmp al, al; or eax, [rax]; syscall; 
0x0000000008f050: cmp al, bl; nop [rax+rax]; sub rcx, rax; lea eax, [rcx-0x1]; ret; 
0x0000000013318b: cmp al, ch; call far fword ptr [rdx+rax]; 
0x0000000009b4ed: cmp al, ch; in eax, dx; xchg esi, eax; cli; jmp qword ptr [rsi+0x66]; 
0x00000000123267: cmp al, dh; cmovne eax, edi; ret; 
0x000000000a8456: cmp al, dh; ret; 
0x000000000a8455: cmp al, r14b; ret; 
0x00000000099314: cmp al, r8b; jne short 0x0000000000099300; lea rax, [rdx-0x10]; ret; 
0x0000000011c0ac: cmp ax, 0xffff; je short 0x000000000011c0e0; add eax, 0x1; mov [rdx], ax; ret; 
0x0000000004044a: cmp bh, 0xff; inc eax; shr eax, 0x1f; ret; 
0x0000000012322a: cmp bh, al; mov eax, edx; cmove eax, esi; ret; 
0x00000000159cde: cmp bh, bh; loopne 0x0000000000159cca; push 0xfffffffffffffffa; cld; jmp qword ptr [rsi+0x2e]; 
0x000000001232cd: cmp bh, dh; cmovne eax, edx; ret; 
0x00000000155c1b: cmp bl, bh; dec dword ptr [rbx-0x17b7b]; jmp qword ptr [rcx+rcx*4+0x3]; 
0x0000000008ef1c: cmp bl, ch; test al, 0x90; endbr64; mov rax, 0xffffffffffffffff; ret; 
0x00000000052484: cmp byte ptr [rax+0x1], 0x0; jne short 0x0000000000052480; pop rbx; ret; 
0x00000000146f92: cmp byte ptr [rax+0xf000000], 0xc8; mov eax, eax; mov [rdx], rax; mov eax, 0x1; ret; 
0x00000000052459: cmp byte ptr [rax-0x1], 0x2f; jne short 0x0000000000052450; pop rbx; ret; 
0x00000000176178: cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x0000000009c6bc: cmp byte ptr [rcx*1+0x450f4800], 0xc2; ret; 
0x0000000011b34a: cmp byte ptr [rcx], 0x0; je short 0x000000000011b350; ret; 
0x00000000110ef3: cmp byte ptr [rcx], 0x0; lea rax, [rcx+0x1]; jne short 0x0000000000110ecf; mov rax, r8; ret; 
0x00000000040b7d: cmp byte ptr [rdi+0x23], 0x44; and al, 0xfc; sub eax, 0x7f800000; shr eax, 0x1f; ret; 
0x0000000004551c: cmp byte ptr [rdi], 0x0; jne short 0x0000000000045528; pop rbx; ret; 
0x00000000056883: cmp ch, 0xff; jmp qword ptr [rsi+0xf]; 
0x0000000017d3cd: cmp cl, [rax+0x63]; leave; add rax, rcx; sub rax, rdi; ret; 
0x00000000139474: cmp cl, [rax-0x77]; ret; 
0x00000000139430: cmp cl, [rax-0x7d]; ret; 
0x000000001190d7: cmp cl, [rcx+0x75c085c7]; fisttp word ptr [rcx+rcx*4-0x40], st; ret; 
0x00000000119f0a: cmp cl, [rdi-0x2708fff4]; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000dc8fe: cmp cl, [rdi]; test [rax+rax-0x7cb80000], ebp; ret; 
0x000000000525dc: cmp cl, [rdi]; xchg esp, eax; ret; 
0x0000000010f3b4: cmp cl, [rip+0x64d8f700]; mov [rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x000000000faf65: cmp cl, bh; mov dword ptr [rsi], 0x0; movups [rsi+0x8], xmm0; ret; 
0x000000000c6c18: cmp cl, ch; shr byte ptr [rdi], cl; cli; jmp qword ptr [rsi-0x70]; 
0x00000000156f73: cmp cx, 0x3; jbe short 0x0000000000156f80; ret; 
0x00000000055c35: cmp cx, 0x7fff; jne short 0x0000000000055c1c; mov eax, 0x1; ret; 
0x00000000125b2e: cmp dh, 0xff; jmp qword ptr [rax+rcx*2-0x75]; 
0x0000000013643e: cmp dh, 0xff; jmp qword ptr [rsi+0xf]; 
0x00000000181c01: cmp dh, [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x0000000018a59e: cmp dh, [rdx+0x2]; mov [rdi], cl; vzeroupper; ret; 
0x0000000012329f: cmp dh, cl; cmove eax, edx; ret; 
0x000000000f407c: cmp dh, dh; ret; 
0x000000001028e4: cmp dh, dl; jmp qword ptr [rsi+0xf]; 
0x00000000123229: cmp dil, al; mov eax, edx; cmove eax, esi; ret; 
0x000000001232cc: cmp dil, sil; cmovne eax, edx; ret; 
0x000000000b8334: cmp dl, 0x1; ja short 0x00000000000b834e; jb short 0x00000000000b833d; mov [rdi], cl; ret; 
0x000000001895ff: cmp dl, 0x1; jb short 0x0000000000189608; mov cl, [rsi]; mov [rdi], cl; ret; 
0x00000000189cce: cmp dl, 0x1; jb short 0x0000000000189cd5; mov [rdi], cl; ret; 
0x00000000189c8a: cmp dl, 0x20; jb short 0x0000000000189c99; vmovdqu [rdi], ymm2; vmovdqu [rsi-0x20], ymm2; ret; 
0x00000000189cc1: cmp dl, 0x2; jb short 0x0000000000189cce; mov [rdi], cx; mov [rsi-0x2], cx; ret; 
0x000000000e7da0: cmp dl, 0x2d; jne short 0x00000000000e7d95; mov byte ptr [rdi+0x8], 0x16; mov eax, 0x1; ret; 
0x0000000009f627: cmp dl, 0x3d; jne short 0x000000000009f5e5; mov rax, r10; ret; 
0x00000000189c77: cmp dl, 0x40; jb short 0x0000000000189c8a; vmovups [rdi], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x00000000189cb6: cmp dl, 0x4; jb short 0x0000000000189cc1; mov [rdi], ecx; mov [rsi-0x4], ecx; ret; 
0x0000000012f305: cmp dl, 0x5; jbe 0x000000000012f279; xor eax, eax; pop rbx; ret; 
0x000000000e7d72: cmp dl, 0x5e; jne short 0x00000000000e7da0; mov byte ptr [rdi+0x8], 0x19; mov eax, 0x1; ret; 
0x00000000189ca3: cmp dl, 0x8; jb short 0x0000000000189cb2; vmovq [rdi], xmm0; vmovq [rsi-0x8], xmm0; ret; 
0x0000000006b902: cmp dl, 0xff; dec dword ptr [rbx-0x51f73]; jmp qword ptr [rcx+rcx*4+0x8]; 
0x0000000006a05a: cmp dl, 0xff; jmp qword ptr [rbx+rcx*4+0x8]; 
0x0000000006a2e3: cmp dl, 0xff; jmp qword ptr [rbx+rcx*4]; 
0x0000000006a0da: cmp dl, 0xff; jmp qword ptr [rsp+rax*2-0x75]; 
0x00000000102b29: cmp dl, dh; call far fword ptr [rax+0x5a]; 
0x00000000083dfc: cmp dword ptr [rax+0x30], 0x0; je short 0x0000000000083e08; ret; 
0x0000000014378e: cmp dword ptr [rax+0x31000023], 0xfffffff6; lea r12, [rbx+0x23b0]; mov dword ptr [rbx+0x23b0], 0x0; mov rdi, r12; call qword ptr [rax+0x28]; 
0x000000000e0b87: cmp dword ptr [rax], 0x26; mov eax, 0x20; cmovne rax, rdx; ret; 
0x000000000e0a57: cmp dword ptr [rax], 0x26; mov eax, 0x7f; cmovne rax, rdx; ret; 
0x000000000e0c48: cmp dword ptr [rax], 0x26; sete al; movzx eax, al; lea rax, [rax+rax-0x1]; ret; 
0x000000001200ca: cmp dword ptr [rbp+0xc], 0x45640100; mov [rax], ecx; add rsp, 0x8; ret; 
0x00000000121607: cmp dword ptr [rbx+0x28], 0x0; mov eax, 0x0; cmovns rax, [rbx+0x28]; pop rbx; ret; 
0x0000000015fe49: cmp dword ptr [rcx+0x5], 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000fd89d: cmp dword ptr [rdi+0x14], 0x1000000; mov edx, 0x2; cmove eax, edx; ret; 
0x000000000895ba: cmp dword ptr [rdi+0x18], 0x0; setne r8b; mov eax, r8d; ret; 
0x00000000090d75: cmp dword ptr [rdi+0x28], 0x0; je short 0x0000000000090d80; xor eax, eax; ret; 
0x0000000008e3f5: cmp dword ptr [rdi+0x38], 0x0; je short 0x000000000008e400; ret; 
0x00000000126bac: cmp dword ptr [rdi], 0x0; je short 0x0000000000126bc0; ret; 
0x0000000009b295: cmp dword ptr [rip+0x14bc74], 0x0; je short 0x000000000009b2a0; ret; 
0x000000000d8f65: cmp dword ptr [rsi+0x8], 0x3b9ac9ff; ja short 0x00000000000d8f98; mov eax, 0xe3; syscall; 
0x00000000114641: cmp dword ptr [rsi], 0x0; mov rbx, rsi; je short 0x0000000000114650; pop rbx; ret; 
0x000000000e0b86: cmp dword ptr fs:[rax], 0x26; mov eax, 0x20; cmovne rax, rdx; ret; 
0x000000000e0a56: cmp dword ptr fs:[rax], 0x26; mov eax, 0x7f; cmovne rax, rdx; ret; 
0x000000000e0c47: cmp dword ptr fs:[rax], 0x26; sete al; movzx eax, al; lea rax, [rax+rax-0x1]; ret; 
0x000000000fd82e: cmp dx, 0x2; je short 0x00000000000fd838; ret; 
0x00000000156f5f: cmp dx, cx; sete al; ret; 
0x000000000ce8fe: cmp eax, 0x1001188; add rsp, 0x8; ret; 
0x000000000a4d62: cmp eax, 0x103e99; mov edx, edx; movsxd rdx, [rdi+rdx*4]; add rdx, rdi; notrack jmp rdx; 
0x000000000dda39: cmp eax, 0x109a62; syscall; 
0x000000000dd8f9: cmp eax, 0x109ba2; syscall; 
0x000000000dd841: cmp eax, 0x109c5a; syscall; 
0x000000000dd765: cmp eax, 0x109d2e; syscall; 
0x000000000dd595: cmp eax, 0x109ebe; syscall; 
0x000000000dd3d1: cmp eax, 0x10a03a; syscall; 
0x000000000dd017: cmp eax, 0x10a39c; syscall; 
0x000000000dbd69: cmp eax, 0x10b5c2; syscall; 
0x000000000dbc29: cmp eax, 0x10b702; syscall; 
0x000000000dbb71: cmp eax, 0x10b7ba; syscall; 
0x000000000db7a5: cmp eax, 0x10bb7e; syscall; 
0x000000000d99e9: cmp eax, 0x10bcd2; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000db5d5: cmp eax, 0x10bd0e; syscall; 
0x000000000d99a3: cmp eax, 0x10bd18; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000db411: cmp eax, 0x10be8a; syscall; 
0x000000000d9801: cmp eax, 0x10beba; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000d97d2: cmp eax, 0x10bee9; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000d9709: cmp eax, 0x10bfb2; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000d96e0: cmp eax, 0x10bfdb; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000606e5: cmp eax, 0x10c48348; pop rbx; pop r12; pop r13; ret; 
0x000000000d920e: cmp eax, 0x10c4ad; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000dab19: cmp eax, 0x10c72a; syscall; 
0x000000000ceb45: cmp eax, 0x1185f6; syscall; 
0x000000000ce951: cmp eax, 0x1187ea; syscall; 
0x000000000c6685: cmp eax, 0x11efd6; syscall; 
0x000000000c6361: cmp eax, 0x11f35a; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000c617e: cmp eax, 0x11f53d; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000007d781: cmp eax, 0x12afd2; movsxd rsi, [rdi+rsi*4]; add rsi, rdi; notrack jmp rsi; 
0x00000000062a0e: cmp eax, 0x143f9d; movzx eax, al; movsxd rax, [rdi+rax*4]; add rax, rdi; notrack jmp rax; 
0x000000000998a5: cmp eax, 0x14a2f6; syscall; 
0x0000000009b235: cmp eax, 0x14bcce; syscall; 
0x0000000009afb1: cmp eax, 0x14bf52; syscall; 
0x0000000009add1: cmp eax, 0x14c132; syscall; 
0x0000000009abe5: cmp eax, 0x14c31e; syscall; 
0x0000000009ab75: cmp eax, 0x14c38e; syscall; 
0x00000000096ef5: cmp eax, 0x14cca6; syscall; 
0x00000000096e95: cmp eax, 0x14cd06; syscall; 
0x00000000096ac5: cmp eax, 0x14d0d6; syscall; 
0x00000000096865: cmp eax, 0x14d336; syscall; 
0x0000000009621d: cmp eax, 0x14d97e; syscall; 
0x000000000961e5: cmp eax, 0x14d9b6; syscall; 
0x00000000097ec4: cmp eax, 0x14efb7; syscall; 
0x00000000097429: cmp eax, 0x14fa42; syscall; 
0x00000000093100: cmp eax, 0x153d7b; syscall; 
0x00000000093084: cmp eax, 0x153de7; syscall; 
0x00000000092ddd: cmp eax, 0x15409e; syscall; 
0x00000000092b31: cmp eax, 0x15434a; syscall; 
0x0000000009281a: cmp eax, 0x154669; jbe short 0x00000000000927c8; add rsp, 0x8; ret; 
0x00000000092066: cmp eax, 0x154795; syscall; 
0x00000000091ec1: cmp eax, 0x15493a; syscall; 
0x00000000091d35: cmp eax, 0x154ac6; syscall; 
0x0000000008ff38: cmp eax, 0x156733; syscall; 
0x0000000008f9f7: cmp eax, 0x156c74; syscall; 
0x0000000008f667: cmp eax, 0x157004; syscall; 
0x0000000008f307: cmp eax, 0x157364; syscall; 
0x0000000008dbe3: cmp eax, 0x158a88; syscall; 
0x0000000008d8f3: cmp eax, 0x158d78; syscall; 
0x0000000008d5ef: cmp eax, 0x15907c; syscall; 
0x00000000080cd4: cmp eax, 0x165957; syscall; 
0x000000000808d8: cmp eax, 0x165d53; syscall; 
0x0000000008082c: cmp eax, 0x165dff; syscall; 
0x0000000007e985: cmp eax, 0x166cd6; syscall; 
0x00000000028d8f: cmp eax, 0x184f6e; mov rsi, [rax]; xor eax, eax; call qword ptr [rdx+0x260]; 
0x00000000028cbf: cmp eax, 0x185024; mov rsi, [rax]; xor eax, eax; call qword ptr [rdx+0x260]; 
0x0000000005f1a9: cmp eax, 0x18745a; syscall; 
0x0000000005ef25: cmp eax, 0x1876da; syscall; 
0x0000000005cda1: cmp eax, 0x18984a; syscall; 
0x0000000005cc61: cmp eax, 0x18998a; syscall; 
0x00000000052e89: cmp eax, 0x193742; syscall; 
0x00000000052cc5: cmp eax, 0x193906; syscall; 
0x00000000052866: cmp eax, 0x193d5d; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000527b5: cmp eax, 0x193e16; syscall; 
0x000000000503a9: cmp eax, 0x195ff2; syscall; 
0x00000000050225: cmp eax, 0x196176; syscall; 
0x000000000501c5: cmp eax, 0x1961d6; syscall; 
0x000000000cc008: cmp eax, 0x19; jg short 0x00000000000cc030; mov rax, r12; pop r12; ret; 
0x00000000184371: cmp eax, 0x1; ja 0x0000000000184040; je 0x0000000000184030; vzeroupper; ret; 
0x0000000018424d: cmp eax, 0x1; ja 0x0000000000184120; je 0x0000000000184110; vzeroupper; ret; 
0x00000000184f7d: cmp eax, 0x1; ja 0x0000000000184e50; je 0x0000000000184e40; vzeroupper; ret; 
0x0000000010803e: cmp eax, 0x1; ja short 0x0000000000108070; mov eax, 0x4; syscall; 
0x0000000010809d: cmp eax, 0x1; ja short 0x00000000001080d0; mov eax, 0x5; syscall; 
0x000000001080fe: cmp eax, 0x1; ja short 0x0000000000108130; mov eax, 0x6; syscall; 
0x00000000142ebb: cmp eax, 0x1; je short 0x0000000000142ee0; mov dword ptr [rsi], 0x10; mov [rsi+0x8], rax; ret; 
0x000000000611d2: cmp eax, 0x1; jg short 0x00000000000611d8; ret; 
0x000000000808be: cmp eax, 0x1; jg short 0x00000000000808c4; ret; 
0x0000000008d5a6: cmp eax, 0x1; jg short 0x000000000008d5db; ret; 
0x0000000008ff1e: cmp eax, 0x1; jg short 0x000000000008ff24; ret; 
0x00000000112b50: cmp eax, 0x1; jg short 0x0000000000112b60; ret; 
0x0000000014fa40: cmp eax, 0x1; jne short 0x000000000014fa35; mov rax, [rdi+0x8]; jmp qword ptr [rax]; 
0x00000000150988: cmp eax, 0x1; jne short 0x0000000000150960; mov rax, [rdi+0x8]; mov rsi, rsp; call qword ptr [rax]; 
0x00000000147c5d: cmp eax, 0x1; mov eax, 0x1; sbb eax, 0xffffffff; add rsp, 0x8; ret; 
0x00000000151a07: cmp eax, 0x1; sete r8b; add rsp, 0x8; mov eax, r8d; ret; 
0x00000000045a61: cmp eax, 0x1a0902; syscall; 
0x000000000459a1: cmp eax, 0x1a09c2; syscall; 
0x000000000458d9: cmp eax, 0x1a0a8a; syscall; 
0x00000000045801: cmp eax, 0x1a0b62; syscall; 
0x000000000448f9: cmp eax, 0x1a11ea; syscall; 
0x00000000044834: cmp eax, 0x1a12af; syscall; 
0x00000000044691: cmp eax, 0x1a1452; syscall; 
0x000000000445b8: cmp eax, 0x1a152b; syscall; 
0x0000000003d0c0: cmp eax, 0x1a87fb; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003d05f: cmp eax, 0x1a885c; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003d022: cmp eax, 0x1a89e1; syscall; 
0x0000000003b697: cmp eax, 0x1aa334; syscall; 
0x0000000003b18b: cmp eax, 0x1aa7f0; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003b122: cmp eax, 0x1aa859; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003aff3: cmp eax, 0x1aa988; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003af93: cmp eax, 0x1aa9e8; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003aeb1: cmp eax, 0x1aaa8a; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003ae5a: cmp eax, 0x1aaae1; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003abd4: cmp eax, 0x1aaae7; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003aad6: cmp eax, 0x1aabe5; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003abad: cmp eax, 0x1aad0e; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003a967: cmp eax, 0x1aad54; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003aaaf: cmp eax, 0x1aae0c; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003a93c: cmp eax, 0x1aaf7f; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003a599: cmp eax, 0x1ab122; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003a669: cmp eax, 0x1ab2d2; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003a5c0: cmp eax, 0x1ab2fb; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003a624: cmp eax, 0x1ab317; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003a4e6: cmp eax, 0x1ab435; syscall; 
0x0000000003a4c6: cmp eax, 0x1ab455; syscall; 
0x0000000003a35c: cmp eax, 0x1ab5bf; syscall; 
0x0000000003904a: cmp eax, 0x1ac871; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000038586: cmp eax, 0x1ad135; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000384ab: cmp eax, 0x1ad210; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000038436: cmp eax, 0x1ad285; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003839a: cmp eax, 0x1ad321; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003811c: cmp eax, 0x1ad59f; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000037d93: cmp eax, 0x1ad928; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000037b94: cmp eax, 0x1adb27; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035ab9: cmp eax, 0x1afc02; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000356bd: cmp eax, 0x1afffe; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035563: cmp eax, 0x1b0158; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035483: cmp eax, 0x1b0238; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035402: cmp eax, 0x1b02b9; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000351e4: cmp eax, 0x1b04d7; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000351a8: cmp eax, 0x1b0513; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000002bb6e: cmp eax, 0x1b9b29; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000002ac69: cmp eax, 0x1ba9f2; syscall; 
0x0000000002aafd: cmp eax, 0x1bab5e; syscall; 
0x0000000002aa05: cmp eax, 0x1bac56; syscall; 
0x00000000026853: cmp eax, 0x1bf258; syscall; 
0x000000000923c8: cmp eax, 0x2000000; jbe short 0x00000000000923d0; ret; 
0x0000000006106a: cmp eax, 0x26; je short 0x0000000000061096; mov r8d, 0xffffffff; mov eax, r8d; ret; 
0x00000000108437: cmp eax, 0x26; je short 0x0000000000108440; mov eax, r9d; ret; 
0x000000001198b8: cmp eax, 0x26; je short 0x00000000001198f4; mov eax, r8d; ret; 
0x000000000590cb: cmp eax, 0x28c48348; pop rbx; pop rbp; ret; 
0x0000000007d6e3: cmp eax, 0x29; ja short 0x000000000007d6f8; movsxd rax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x0000000014fa35: cmp eax, 0x2; sete al; movzx eax, al; ret; 
0x00000000059a34: cmp eax, 0x38c48348; ret; 
0x0000000014337d: cmp eax, 0x3; jbe short 0x0000000000143390; mov eax, 0x2; ret; 
0x000000000b8bf8: cmp eax, 0x3; je short 0x00000000000b8c10; xor eax, eax; ret; 
0x000000000edc22: cmp eax, 0x3; je short 0x00000000000edc80; xor eax, eax; pop rbp; ret; 
0x00000000092108: cmp eax, 0x408; jbe short 0x0000000000092110; ret; 
0x0000000010e50c: cmp eax, 0x410000; je short 0x000000000010e540; mov eax, 0x101; syscall; 
0x00000000113b73: cmp eax, 0x415d000d; pop rsp; pop r13; ret; 
0x000000000c617f: cmp eax, 0x480011f5; ror eax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000082392: cmp eax, 0x48ea894c; mov esi, ebp; mov rdi, rbx; call qword ptr [r14+0x38]; 
0x00000000168a09: cmp eax, 0x4; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000464ba: cmp eax, 0x4; je short 0x0000000000046480; mov eax, 0xffffffff; ret; 
0x00000000090ac3: cmp eax, 0x4; je short 0x0000000000090a9c; pop rbx; ret; 
0x000000000e0b31: cmp eax, 0x517b; jne short 0x00000000000e0b40; mov eax, 0x40; ret; 
0x000000000e0b61: cmp eax, 0x52654973; mov edx, 0x40; mov eax, 0x20; cmove rax, rdx; ret; 
0x00000000191981: cmp eax, 0x54162; syscall; 
0x00000000191b41: cmp eax, 0x54cba; syscall; 
0x00000000191e61: cmp eax, 0x567f2; syscall; 
0x000000000e0aed: cmp eax, 0x58465342; mov edx, 0x40; mov eax, 0x20; cmove rax, rdx; ret; 
0x00000000163bd6: cmp eax, 0x63490005; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000038f87: cmp eax, 0x64001a9f; add rax, [0x0]; ret; 
0x00000000146e8f: cmp eax, 0x669ac; mov ecx, esi; movsxd rax, [rdi+rcx*4]; add rax, rdi; notrack jmp rax; 
0x000000000cc10b: cmp eax, 0x71; jg short 0x00000000000cc130; lea rax, [rip+0x11aee9]; add rsp, 0x8; ret; 
0x0000000009243a: cmp eax, 0x7; mov eax, 0x10; cmova rax, rdx; mov [rip+0x154a4b], rax; ret; 
0x000000000cc10a: cmp eax, 0x7f71f883; and [rax-0x73], cl; add eax, 0x11aee9; add rsp, 0x8; ret; 
0x0000000010ded2: cmp eax, 0x80003d; add [rsi+rcx+0x48], dh; mov dword ptr [rdi], 0xffffffff; ret; 
0x0000000010ded3: cmp eax, 0x8000; je short 0x000000000010dee8; mov qword ptr [rdi], 0xffffffffffffffff; ret; 
0x0000000009f64d: cmp eax, 0x8348f075; rol byte ptr [rcx], 0x84; sar byte ptr [rdx], cl; cmove rax, rdx; ret; 
0x0000000006104a: cmp eax, 0x83c08941; clc; push qword ptr [rbp+rcx+0x44]; mov eax, eax; ret; 
0x000000000d0cb4: cmp eax, 0x840f0400; ret; 
0x0000000014a49a: cmp eax, 0x89480006; ret; 
0x00000000122d0e: cmp eax, 0x894c0000; idiv byte ptr [rdi+0x2000003]; mov rdx, rax; call qword ptr [rbx+0x28]; 
0x00000000157de5: cmp eax, 0x8b662; test edi, edi; jns short 0x0000000000157df0; ret; 
0x000000000eab4d: cmp eax, 0x8c48348; pop rbx; pop rbp; ret; 
0x00000000158061: cmp eax, 0x9107e; syscall; 
0x00000000156d69: cmp eax, 0x92376; syscall; 
0x00000000156c89: cmp eax, 0x92456; syscall; 
0x00000000156aa1: cmp eax, 0x9263e; syscall; 
0x00000000156a11: cmp eax, 0x926ce; syscall; 
0x00000000156971: cmp eax, 0x9276e; syscall; 
0x000000001568c1: cmp eax, 0x9281e; syscall; 
0x000000001564f1: cmp eax, 0x92bee; syscall; 
0x000000000598d9: cmp eax, 0x9; ja short 0x00000000000598b0; mov rax, r8; ret; 
0x0000000014d1f8: cmp eax, 0x9bce3; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000014d128: cmp eax, 0x9bdb3; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000014d058: cmp eax, 0x9be83; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000014cf88: cmp eax, 0x9bf53; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000014ced0: cmp eax, 0x9c00b; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000014c2f1: cmp eax, 0x9cbd2; syscall; 
0x0000000014c191: cmp eax, 0x9cd32; syscall; 
0x0000000014bf85: cmp eax, 0x9cf3e; syscall; 
0x0000000014bde5: cmp eax, 0x9d0de; syscall; 
0x0000000014bc51: cmp eax, 0x9d272; syscall; 
0x0000000014bb11: cmp eax, 0x9d3b2; syscall; 
0x0000000014b9b1: cmp eax, 0x9d512; syscall; 
0x0000000014b8a1: cmp eax, 0x9d622; syscall; 
0x00000000092428: cmp eax, 0xa0; jbe short 0x0000000000092430; ret; 
0x00000000148411: cmp eax, 0xa0a96; syscall; 
0x00000000107abe: cmp eax, 0xa695c; mov rdx, [rax+0xb0]; call qword ptr [rax+0x88]; 
0x00000000141482: cmp eax, 0xa77f9; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000013f4dd: cmp eax, 0xa977e; syscall; 
0x0000000013f1ad: cmp eax, 0xa9aae; syscall; 
0x0000000013ee2d: cmp eax, 0xa9e2e; syscall; 
0x0000000013ec2f: cmp eax, 0xaa02c; syscall; 
0x0000000013eaa5: cmp eax, 0xaa1b6; syscall; 
0x0000000013e868: cmp eax, 0xaa3f3; syscall; 
0x0000000013e5fb: cmp eax, 0xaa640; ror rdi, 0x11; xor rdi, fs:[0x30]; call rax; 
0x0000000013de21: cmp eax, 0xaad72; syscall; 
0x0000000013dca0: cmp eax, 0xaaef3; syscall; 
0x0000000013dc66: cmp eax, 0xaaf2d; syscall; 
0x0000000013db59: cmp eax, 0xab03a; syscall; 
0x0000000013d319: cmp eax, 0xab87a; syscall; 
0x0000000013d251: cmp eax, 0xab942; syscall; 
0x0000000013d135: cmp eax, 0xaba5e; syscall; 
0x0000000013bda2: cmp eax, 0xacba1; syscall; 
0x0000000013bace: cmp eax, 0xace79; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000138521: cmp eax, 0xb0132; syscall; 
0x00000000138245: cmp eax, 0xb040e; syscall; 
0x00000000133f65: cmp eax, 0xb46da; syscall; 
0x000000001339e5: cmp eax, 0xb4c3e; syscall; 
0x00000000133821: cmp eax, 0xb4dba; syscall; 
0x00000000133759: cmp eax, 0xb4e22; syscall; 
0x00000000133619: cmp eax, 0xb4f62; syscall; 
0x00000000133561: cmp eax, 0xb501a; syscall; 
0x0000000013340c: cmp eax, 0xb516b; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000132e71: cmp eax, 0xb5702; syscall; 
0x00000000132b41: cmp eax, 0xb5a32; syscall; 
0x00000000132adb: cmp eax, 0xb5a40; call rax; 
0x00000000132985: cmp eax, 0xb5bee; syscall; 
0x0000000013246b: cmp eax, 0xb6064; syscall; 
0x0000000012eb79: cmp eax, 0xb983a; syscall; 
0x0000000012ea39: cmp eax, 0xb997a; syscall; 
0x0000000012e981: cmp eax, 0xb9a32; syscall; 
0x0000000012e895: cmp eax, 0xb9b16; syscall; 
0x0000000012e6c5: cmp eax, 0xb9cb6; syscall; 
0x0000000012e501: cmp eax, 0xb9e52; syscall; 
0x0000000012e439: cmp eax, 0xb9eca; syscall; 
0x0000000012e2f9: cmp eax, 0xba00a; syscall; 
0x0000000012e241: cmp eax, 0xba0c2; syscall; 
0x0000000012e161: cmp eax, 0xba19a; syscall; 
0x0000000012dc95: cmp eax, 0xba5ee; syscall; 
0x0000000012d6c5: cmp eax, 0xbab5e; syscall; 
0x0000000012d1a5: cmp eax, 0xbb036; syscall; 
0x0000000012cfd9: cmp eax, 0xbb1c2; syscall; 
0x0000000012ce99: cmp eax, 0xbb302; syscall; 
0x0000000012cde1: cmp eax, 0xbb3ba; syscall; 
0x0000000012cd01: cmp eax, 0xbb492; syscall; 
0x0000000012c8e5: cmp eax, 0xbb866; syscall; 
0x0000000012c2c9: cmp eax, 0xbbe22; syscall; 
0x0000000012c171: cmp eax, 0xbbf7a; syscall; 
0x0000000012c0b1: cmp eax, 0xbc03a; syscall; 
0x0000000012bfc9: cmp eax, 0xbc11a; syscall; 
0x0000000012bee5: cmp eax, 0xbc1c6; syscall; 
0x0000000012b885: cmp eax, 0xbc7e6; syscall; 
0x0000000012b679: cmp eax, 0xbc9aa; syscall; 
0x0000000012b521: cmp eax, 0xbcb02; syscall; 
0x0000000012b461: cmp eax, 0xbcbc2; syscall; 
0x0000000012b379: cmp eax, 0xbcca2; syscall; 
0x000000000e0b1b: cmp eax, 0xbd00bd0; mov edx, 0x40; mov eax, 0x20; cmove rax, rdx; ret; 
0x0000000012a765: cmp eax, 0xbd83e; syscall; 
0x0000000012a4f5: cmp eax, 0xbda6e; syscall; 
0x00000000129d75: cmp eax, 0xbe18e; syscall; 
0x0000000009f614: cmp eax, 0xc0311574; ret; 
0x00000000126dc0: cmp eax, 0xc10e3; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000052868: cmp eax, 0xc1480019; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x000000000e6402: cmp eax, 0xc474d; movzx eax, al; movsxd rax, [rdi+rax*4]; add rax, rdi; notrack jmp rax; 
0x00000000120319: cmp eax, 0xc7b32; syscall; 
0x000000001201d9: cmp eax, 0xc7c72; syscall; 
0x00000000120121: cmp eax, 0xc7d2a; syscall; 
0x0000000011fd47: cmp eax, 0xc80fc; syscall; 
0x0000000011fb1d: cmp eax, 0xc82ee; syscall; 
0x0000000011f955: cmp eax, 0xc846e; syscall; 
0x0000000011f791: cmp eax, 0xc85ea; syscall; 
0x0000000011f6c1: cmp eax, 0xc8666; syscall; 
0x0000000011f5f1: cmp eax, 0xc8736; syscall; 
0x0000000011f555: cmp eax, 0xc87d2; syscall; 
0x0000000011eab9: cmp eax, 0xc923a; syscall; 
0x0000000011e979: cmp eax, 0xc937a; syscall; 
0x0000000011e8c1: cmp eax, 0xc9432; syscall; 
0x0000000011e2c7: cmp eax, 0xc9a24; syscall; 
0x0000000011e0c5: cmp eax, 0xc9bce; syscall; 
0x0000000011dee5: cmp eax, 0xc9d46; syscall; 
0x0000000011dd21: cmp eax, 0xc9ea2; syscall; 
0x0000000011364f: cmp eax, 0xcfd04; ret; 
0x000000000d678c: cmp eax, 0xd3977; mov ecx, eax; movsxd rdx, [rdi+rcx*4]; add rdx, rdi; notrack jmp rdx; 
0x000000000d67cf: cmp eax, 0xd3b20; mov esi, eax; movsxd rdx, [rdi+rsi*4]; add rdx, rdi; notrack jmp rdx; 
0x00000000113621: cmp eax, 0xd422a; syscall; 
0x00000000113505: cmp eax, 0xd4346; syscall; 
0x000000001130a5: cmp eax, 0xd47a6; syscall; 
0x00000000112b74: cmp eax, 0xd4cd7; syscall; 
0x000000001122c6: cmp eax, 0xd549d; test rdi, rdi; jne short 0x00000000001122e0; mov eax, 0x1; ret; 
0x000000000d4218: cmp eax, 0xd5927; movzx edx, r10b; movsxd rdx, [rdi+rdx*4]; add rdx, rdi; notrack jmp rdx; 
0x000000000d1fd6: cmp eax, 0xd7a89; movzx eax, al; movsxd rax, [rdi+rax*4]; add rax, rdi; notrack jmp rax; 
0x000000000d1bfc: cmp eax, 0xd7ddb; movzx eax, al; movsxd rax, [rdi+rax*4]; add rax, rdi; notrack jmp rax; 
0x000000000d0e13: cmp eax, 0xd8a6c; movzx eax, al; movsxd rax, [rdi+rax*4]; add rax, rdi; notrack jmp rax; 
0x00000000101565: cmp eax, 0xe6056; syscall; 
0x00000000100aec: cmp eax, 0xe6ad3; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000e0b41: cmp eax, 0xef53; mov edx, 0x40; mov eax, 0x20; cmove rax, rdx; ret; 
0x0000000011a407: cmp eax, 0xf7000c8a; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x0000000011a307: cmp eax, 0xf7000c8b; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x00000000110607: cmp eax, 0xf7000d28; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x0000000010a907: cmp eax, 0xf7000d85; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x00000000109707: cmp eax, 0xf7000d97; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x00000000108707: cmp eax, 0xf7000da7; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x000000000c2c87: cmp eax, 0xff; je short 0x00000000000c2c93; mov eax, r8d; ret; 
0x00000000092148: cmp eax, 0xffff; jbe short 0x0000000000092150; ret; 
0x0000000007611a: cmp eax, 0xffffecc9; add rsi, rdi; jmp rsi; 
0x00000000041c01: cmp eax, 0xfffff000; ja short 0x0000000000041c10; ret; 
0x00000000041c4d: cmp eax, 0xfffff000; ja short 0x0000000000041ca0; ret; 
0x000000000463d8: cmp eax, 0xfffff000; ja short 0x0000000000046430; ret; 
0x00000000060fcc: cmp eax, 0xfffff000; ja short 0x0000000000060fd8; ret; 
0x00000000060fff: cmp eax, 0xfffff000; ja short 0x0000000000061010; ret; 
0x000000000ccd8c: cmp eax, 0xfffff000; ja short 0x00000000000ccd98; ret; 
0x000000000ccea1: cmp eax, 0xfffff000; ja short 0x00000000000cceb0; ret; 
0x000000000cd051: cmp eax, 0xfffff000; ja short 0x00000000000cd060; ret; 
0x000000000d01ec: cmp eax, 0xfffff000; ja short 0x00000000000d01f8; ret; 
0x000000000d021c: cmp eax, 0xfffff000; ja short 0x00000000000d0228; ret; 
0x000000000d8f76: cmp eax, 0xfffff000; ja short 0x00000000000d8f80; ret; 
0x000000000da1ac: cmp eax, 0xfffff000; ja short 0x00000000000da1b8; ret; 
0x000000000de64b: cmp eax, 0xfffff000; ja short 0x00000000000de6b0; ret; 
0x000000000de6fe: cmp eax, 0xfffff000; ja short 0x00000000000de770; ret; 
0x000000000de858: cmp eax, 0xfffff000; ja short 0x00000000000de890; ret; 
0x000000000deb45: cmp eax, 0xfffff000; ja short 0x00000000000deb68; hlt; mov eax, esi; syscall; 
0x000000000fd2cc: cmp eax, 0xfffff000; ja short 0x00000000000fd2d8; ret; 
0x000000000fd36c: cmp eax, 0xfffff000; ja short 0x00000000000fd378; ret; 
0x00000000106cab: cmp eax, 0xfffff000; ja short 0x0000000000106d10; ret; 
0x00000000106d5b: cmp eax, 0xfffff000; ja short 0x0000000000106dc0; ret; 
0x0000000010804b: cmp eax, 0xfffff000; ja short 0x0000000000108058; ret; 
0x000000001080aa: cmp eax, 0xfffff000; ja short 0x00000000001080b8; ret; 
0x0000000010810b: cmp eax, 0xfffff000; ja short 0x0000000000108118; ret; 
0x00000000108493: cmp eax, 0xfffff000; ja short 0x00000000001084a0; ret; 
0x000000001084f6: cmp eax, 0xfffff000; ja short 0x0000000000108500; ret; 
0x00000000108550: cmp eax, 0xfffff000; ja short 0x0000000000108560; ret; 
0x00000000108cb3: cmp eax, 0xfffff000; ja short 0x0000000000108d10; ret; 
0x00000000108d58: cmp eax, 0xfffff000; ja short 0x0000000000108db0; ret; 
0x00000000108dec: cmp eax, 0xfffff000; ja short 0x0000000000108df8; ret; 
0x00000000108e1c: cmp eax, 0xfffff000; ja short 0x0000000000108e28; ret; 
0x000000001094f8: cmp eax, 0xfffff000; ja short 0x0000000000109540; ret; 
0x00000000109678: cmp eax, 0xfffff000; ja short 0x00000000001096c0; ret; 
0x0000000010d638: cmp eax, 0xfffff000; ja short 0x000000000010d690; ret; 
0x0000000010dcdb: cmp eax, 0xfffff000; ja short 0x000000000010dd58; ret; 
0x0000000010dd9f: cmp eax, 0xfffff000; ja short 0x000000000010ddb0; ret; 
0x0000000010dde4: cmp eax, 0xfffff000; ja short 0x000000000010ddf0; ret; 
0x0000000010e17b: cmp eax, 0xfffff000; ja short 0x000000000010e1e0; ret; 
0x0000000010e22b: cmp eax, 0xfffff000; ja short 0x000000000010e290; ret; 
0x0000000010e2cc: cmp eax, 0xfffff000; ja short 0x000000000010e2d8; ret; 
0x0000000010e589: cmp eax, 0xfffff000; ja short 0x000000000010e598; ret; 
0x0000000010e5bf: cmp eax, 0xfffff000; ja short 0x000000000010e5d0; ret; 
0x0000000010e5fc: cmp eax, 0xfffff000; ja short 0x000000000010e608; ret; 
0x0000000010eae2: cmp eax, 0xfffff000; ja short 0x000000000010eb38; ret; 
0x0000000010ed05: cmp eax, 0xfffff000; ja short 0x000000000010ed10; ret; 
0x0000000010ed46: cmp eax, 0xfffff000; ja short 0x000000000010ed50; ret; 
0x0000000010ed7c: cmp eax, 0xfffff000; ja short 0x000000000010ed88; ret; 
0x0000000010f358: cmp eax, 0xfffff000; ja short 0x000000000010f3b0; ret; 
0x0000000010f3f8: cmp eax, 0xfffff000; ja short 0x000000000010f450; ret; 
0x0000000010f49e: cmp eax, 0xfffff000; ja short 0x000000000010f508; ret; 
0x0000000010f55e: cmp eax, 0xfffff000; ja short 0x000000000010f5c8; ret; 
0x0000000010fedb: cmp eax, 0xfffff000; ja short 0x000000000010ff50; ret; 
0x00000000110118: cmp eax, 0xfffff000; ja short 0x0000000000110160; ret; 
0x000000001101d8: cmp eax, 0xfffff000; ja short 0x0000000000110220; ret; 
0x00000000110298: cmp eax, 0xfffff000; ja short 0x00000000001102a0; ret; 
0x00000000111bec: cmp eax, 0xfffff000; ja short 0x0000000000111bf8; ret; 
0x00000000111c1c: cmp eax, 0xfffff000; ja short 0x0000000000111c28; ret; 
0x00000000113827: cmp eax, 0xfffff000; ja short 0x0000000000113890; pop rbx; pop rbp; ret; 
0x00000000113928: cmp eax, 0xfffff000; ja short 0x0000000000113980; ret; 
0x00000000116533: cmp eax, 0xfffff000; ja short 0x0000000000116540; ret; 
0x0000000011925c: cmp eax, 0xfffff000; ja short 0x0000000000119268; ret; 
0x0000000011928c: cmp eax, 0xfffff000; ja short 0x0000000000119298; ret; 
0x00000000119331: cmp eax, 0xfffff000; ja short 0x00000000001193a8; ret; 
0x000000001193f4: cmp eax, 0xfffff000; ja short 0x0000000000119400; ret; 
0x0000000011952b: cmp eax, 0xfffff000; ja short 0x0000000000119590; ret; 
0x000000001195db: cmp eax, 0xfffff000; ja short 0x0000000000119640; ret; 
0x0000000011968b: cmp eax, 0xfffff000; ja short 0x00000000001196f0; ret; 
0x0000000011973b: cmp eax, 0xfffff000; ja short 0x00000000001197b8; ret; 
0x00000000119808: cmp eax, 0xfffff000; ja short 0x0000000000119860; ret; 
0x000000001198d0: cmp eax, 0xfffff000; ja short 0x0000000000119908; mov r8d, eax; mov eax, r8d; ret; 
0x00000000119934: cmp eax, 0xfffff000; ja short 0x0000000000119940; ret; 
0x00000000119a0c: cmp eax, 0xfffff000; ja short 0x0000000000119a18; ret; 
0x00000000119a3f: cmp eax, 0xfffff000; ja short 0x0000000000119a50; ret; 
0x00000000119b0f: cmp eax, 0xfffff000; ja short 0x0000000000119b20; ret; 
0x00000000119b4f: cmp eax, 0xfffff000; ja short 0x0000000000119b60; ret; 
0x00000000119b8c: cmp eax, 0xfffff000; ja short 0x0000000000119b98; ret; 
0x0000000011a268: cmp eax, 0xfffff000; ja short 0x000000000011a2c0; ret; 
0x0000000011a338: cmp eax, 0xfffff000; ja short 0x000000000011a390; ret; 
0x0000000011a4a1: cmp eax, 0xfffff000; ja short 0x000000000011a510; ret; 
0x0000000011a55b: cmp eax, 0xfffff000; ja short 0x000000000011a5d0; ret; 
0x0000000011a618: cmp eax, 0xfffff000; ja short 0x000000000011a670; ret; 
0x0000000011a6c1: cmp eax, 0xfffff000; ja short 0x000000000011a730; ret; 
0x0000000011a778: cmp eax, 0xfffff000; ja short 0x000000000011a7d0; ret; 
0x0000000011a81b: cmp eax, 0xfffff000; ja short 0x000000000011a898; ret; 
0x0000000011ac7b: cmp eax, 0xfffff000; ja short 0x000000000011ace0; ret; 
0x0000000011ad2b: cmp eax, 0xfffff000; ja short 0x000000000011ad98; ret; 
0x0000000011adeb: cmp eax, 0xfffff000; ja short 0x000000000011ae50; ret; 
0x0000000011af8b: cmp eax, 0xfffff000; ja short 0x000000000011aff0; ret; 
0x0000000011b03b: cmp eax, 0xfffff000; ja short 0x000000000011b0b0; ret; 
0x0000000011b0ec: cmp eax, 0xfffff000; ja short 0x000000000011b0f8; ret; 
0x0000000011b11c: cmp eax, 0xfffff000; ja short 0x000000000011b128; ret; 
0x0000000011b15c: cmp eax, 0xfffff000; ja short 0x000000000011b168; ret; 
0x0000000011b23f: cmp eax, 0xfffff000; ja short 0x000000000011b250; ret; 
0x0000000011b27c: cmp eax, 0xfffff000; ja short 0x000000000011b288; ret; 
0x0000000011b2ac: cmp eax, 0xfffff000; ja short 0x000000000011b2b8; ret; 
0x0000000011b2df: cmp eax, 0xfffff000; ja short 0x000000000011b2f0; ret; 
0x0000000011b31c: cmp eax, 0xfffff000; ja short 0x000000000011b328; ret; 
0x0000000012848e: cmp eax, 0xfffff000; ja short 0x00000000001284a0; ret; 
0x0000000015c744: cmp eax, 0xfffff000; ja short 0x000000000015c750; ret; 
0x00000000091374: cmp eax, 0xfffff000; jbe short 0x0000000000091380; neg eax; ret; 
0x000000000913b9: cmp eax, 0xfffff000; jbe short 0x00000000000913c8; neg eax; ret; 
0x0000000010d7e2: cmp eax, 0xfffff000; mov eax, 0x0; cmova eax, edx; ret; 
0x00000000041bcc: cmp eax, 0xfffff001; jae short 0x0000000000041bd4; ret; 
0x000000000421cc: cmp eax, 0xfffff001; jae short 0x00000000000421d4; ret; 
0x00000000053012: cmp eax, 0xfffff001; jae short 0x000000000005301c; xor eax, eax; ret; 
0x000000000de55c: cmp eax, 0xfffff001; jae short 0x00000000000de564; ret; 
0x000000000de7ac: cmp eax, 0xfffff001; jae short 0x00000000000de7b4; ret; 
0x000000000deb7c: cmp eax, 0xfffff001; jae short 0x00000000000deb84; ret; 
0x000000000dfb6c: cmp eax, 0xfffff001; jae short 0x00000000000dfb74; ret; 
0x000000000dfdbc: cmp eax, 0xfffff001; jae short 0x00000000000dfdc4; ret; 
0x000000000dfdec: cmp eax, 0xfffff001; jae short 0x00000000000dfdf4; ret; 
0x000000000dfe4c: cmp eax, 0xfffff001; jae short 0x00000000000dfe54; ret; 
0x000000000dfe7c: cmp eax, 0xfffff001; jae short 0x00000000000dfe84; ret; 
0x000000000dfeac: cmp eax, 0xfffff001; jae short 0x00000000000dfeb4; ret; 
0x000000000dfedc: cmp eax, 0xfffff001; jae short 0x00000000000dfee4; ret; 
0x000000000fd17c: cmp eax, 0xfffff001; jae short 0x00000000000fd184; ret; 
0x000000000fd1ac: cmp eax, 0xfffff001; jae short 0x00000000000fd1b4; ret; 
0x000000000fd1dc: cmp eax, 0xfffff001; jae short 0x00000000000fd1e4; ret; 
0x000000000fd20c: cmp eax, 0xfffff001; jae short 0x00000000000fd214; ret; 
0x000000000fd23c: cmp eax, 0xfffff001; jae short 0x00000000000fd244; ret; 
0x000000000fd26c: cmp eax, 0xfffff001; jae short 0x00000000000fd274; ret; 
0x000000000fd29c: cmp eax, 0xfffff001; jae short 0x00000000000fd2a4; ret; 
0x0000000010859c: cmp eax, 0xfffff001; jae short 0x00000000001085a4; ret; 
0x000000001085cc: cmp eax, 0xfffff001; jae short 0x00000000001085d4; ret; 
0x000000001086fc: cmp eax, 0xfffff001; jae short 0x0000000000108704; ret; 
0x0000000010872c: cmp eax, 0xfffff001; jae short 0x0000000000108734; ret; 
0x0000000010892c: cmp eax, 0xfffff001; jae short 0x0000000000108934; ret; 
0x0000000010895c: cmp eax, 0xfffff001; jae short 0x0000000000108964; ret; 
0x0000000010925c: cmp eax, 0xfffff001; jae short 0x0000000000109264; ret; 
0x0000000010957c: cmp eax, 0xfffff001; jae short 0x0000000000109584; ret; 
0x000000001095ac: cmp eax, 0xfffff001; jae short 0x00000000001095b4; ret; 
0x000000001095dc: cmp eax, 0xfffff001; jae short 0x00000000001095e4; ret; 
0x0000000010960c: cmp eax, 0xfffff001; jae short 0x0000000000109614; ret; 
0x0000000010963c: cmp eax, 0xfffff001; jae short 0x0000000000109644; ret; 
0x000000001096fc: cmp eax, 0xfffff001; jae short 0x0000000000109704; ret; 
0x0000000010972c: cmp eax, 0xfffff001; jae short 0x0000000000109734; ret; 
0x0000000010a01c: cmp eax, 0xfffff001; jae short 0x000000000010a024; ret; 
0x0000000010a04c: cmp eax, 0xfffff001; jae short 0x000000000010a054; ret; 
0x0000000010a07c: cmp eax, 0xfffff001; jae short 0x000000000010a084; ret; 
0x0000000010a0af: cmp eax, 0xfffff001; jae short 0x000000000010a0b7; ret; 
0x0000000010a86c: cmp eax, 0xfffff001; jae short 0x000000000010a874; ret; 
0x0000000010a89f: cmp eax, 0xfffff001; jae short 0x000000000010a8a7; ret; 
0x0000000010a8cc: cmp eax, 0xfffff001; jae short 0x000000000010a8d4; ret; 
0x0000000010a8fc: cmp eax, 0xfffff001; jae short 0x000000000010a904; ret; 
0x0000000010a92c: cmp eax, 0xfffff001; jae short 0x000000000010a934; ret; 
0x0000000010a95f: cmp eax, 0xfffff001; jae short 0x000000000010a967; ret; 
0x0000000010a98c: cmp eax, 0xfffff001; jae short 0x000000000010a994; ret; 
0x0000000010a9bc: cmp eax, 0xfffff001; jae short 0x000000000010a9c4; ret; 
0x0000000010a9ec: cmp eax, 0xfffff001; jae short 0x000000000010a9f4; ret; 
0x0000000010dc9f: cmp eax, 0xfffff001; jae short 0x000000000010dca7; ret; 
0x0000000010f18c: cmp eax, 0xfffff001; jae short 0x000000000010f194; ret; 
0x0000000010f31c: cmp eax, 0xfffff001; jae short 0x000000000010f324; ret; 
0x0000000010fd5c: cmp eax, 0xfffff001; jae short 0x000000000010fd64; ret; 
0x0000000010fe9c: cmp eax, 0xfffff001; jae short 0x000000000010fea4; ret; 
0x000000001100ac: cmp eax, 0xfffff001; jae short 0x00000000001100b4; ret; 
0x000000001100dc: cmp eax, 0xfffff001; jae short 0x00000000001100e4; ret; 
0x0000000011019c: cmp eax, 0xfffff001; jae short 0x00000000001101a4; ret; 
0x0000000011025c: cmp eax, 0xfffff001; jae short 0x0000000000110264; ret; 
0x0000000011059c: cmp eax, 0xfffff001; jae short 0x00000000001105a4; ret; 
0x000000001105cc: cmp eax, 0xfffff001; jae short 0x00000000001105d4; ret; 
0x000000001105fc: cmp eax, 0xfffff001; jae short 0x0000000000110604; ret; 
0x0000000011367e: cmp eax, 0xfffff001; jae short 0x0000000000113686; ret; 
0x000000001138bc: cmp eax, 0xfffff001; jae short 0x00000000001138c4; ret; 
0x000000001138ec: cmp eax, 0xfffff001; jae short 0x00000000001138f4; ret; 
0x000000001139bc: cmp eax, 0xfffff001; jae short 0x00000000001139c4; ret; 
0x000000001139ec: cmp eax, 0xfffff001; jae short 0x00000000001139f4; ret; 
0x00000000113a1f: cmp eax, 0xfffff001; jae short 0x0000000000113a27; ret; 
0x00000000113a4c: cmp eax, 0xfffff001; jae short 0x0000000000113a54; ret; 
0x00000000113a7c: cmp eax, 0xfffff001; jae short 0x0000000000113a84; ret; 
0x00000000113aac: cmp eax, 0xfffff001; jae short 0x0000000000113ab4; ret; 
0x00000000113adc: cmp eax, 0xfffff001; jae short 0x0000000000113ae4; ret; 
0x00000000116e2f: cmp eax, 0xfffff001; jae short 0x0000000000116e37; ret; 
0x00000000116e5c: cmp eax, 0xfffff001; jae short 0x0000000000116e64; ret; 
0x00000000116e8c: cmp eax, 0xfffff001; jae short 0x0000000000116e94; ret; 
0x00000000116ebf: cmp eax, 0xfffff001; jae short 0x0000000000116ec7; ret; 
0x00000000116eef: cmp eax, 0xfffff001; jae short 0x0000000000116ef7; ret; 
0x00000000116f1c: cmp eax, 0xfffff001; jae short 0x0000000000116f24; ret; 
0x00000000116f4f: cmp eax, 0xfffff001; jae short 0x0000000000116f57; ret; 
0x00000000116f7c: cmp eax, 0xfffff001; jae short 0x0000000000116f84; ret; 
0x00000000116fac: cmp eax, 0xfffff001; jae short 0x0000000000116fb4; ret; 
0x00000000116fdf: cmp eax, 0xfffff001; jae short 0x0000000000116fe7; ret; 
0x0000000011700c: cmp eax, 0xfffff001; jae short 0x0000000000117014; ret; 
0x0000000011703f: cmp eax, 0xfffff001; jae short 0x0000000000117047; ret; 
0x0000000011917c: cmp eax, 0xfffff001; jae short 0x0000000000119184; ret; 
0x000000001191ac: cmp eax, 0xfffff001; jae short 0x00000000001191b4; ret; 
0x000000001192bc: cmp eax, 0xfffff001; jae short 0x00000000001192c4; ret; 
0x000000001192ec: cmp eax, 0xfffff001; jae short 0x00000000001192f4; ret; 
0x0000000011942c: cmp eax, 0xfffff001; jae short 0x0000000000119434; ret; 
0x000000001194bf: cmp eax, 0xfffff001; jae short 0x00000000001194c7; ret; 
0x000000001194ec: cmp eax, 0xfffff001; jae short 0x00000000001194f4; ret; 
0x00000000119bbc: cmp eax, 0xfffff001; jae short 0x0000000000119bc4; ret; 
0x00000000119bec: cmp eax, 0xfffff001; jae short 0x0000000000119bf4; ret; 
0x00000000119c2f: cmp eax, 0xfffff001; jae short 0x0000000000119c37; ret; 
0x00000000119c5c: cmp eax, 0xfffff001; jae short 0x0000000000119c64; ret; 
0x00000000119c8c: cmp eax, 0xfffff001; jae short 0x0000000000119c94; ret; 
0x00000000119cbc: cmp eax, 0xfffff001; jae short 0x0000000000119cc4; ret; 
0x00000000119cec: cmp eax, 0xfffff001; jae short 0x0000000000119cf4; ret; 
0x00000000119d1c: cmp eax, 0xfffff001; jae short 0x0000000000119d24; ret; 
0x00000000119d4c: cmp eax, 0xfffff001; jae short 0x0000000000119d54; ret; 
0x00000000119d7f: cmp eax, 0xfffff001; jae short 0x0000000000119d87; ret; 
0x00000000119dac: cmp eax, 0xfffff001; jae short 0x0000000000119db4; ret; 
0x00000000119ddf: cmp eax, 0xfffff001; jae short 0x0000000000119de7; ret; 
0x00000000119e0c: cmp eax, 0xfffff001; jae short 0x0000000000119e14; ret; 
0x00000000119e3c: cmp eax, 0xfffff001; jae short 0x0000000000119e44; ret; 
0x00000000119e6c: cmp eax, 0xfffff001; jae short 0x0000000000119e74; ret; 
0x00000000119e9c: cmp eax, 0xfffff001; jae short 0x0000000000119ea4; ret; 
0x00000000119ecc: cmp eax, 0xfffff001; jae short 0x0000000000119ed4; ret; 
0x00000000119eff: cmp eax, 0xfffff001; jae short 0x0000000000119f07; ret; 
0x00000000119f2f: cmp eax, 0xfffff001; jae short 0x0000000000119f37; ret; 
0x00000000119f5c: cmp eax, 0xfffff001; jae short 0x0000000000119f64; ret; 
0x00000000119f8c: cmp eax, 0xfffff001; jae short 0x0000000000119f94; ret; 
0x00000000119fbf: cmp eax, 0xfffff001; jae short 0x0000000000119fc7; ret; 
0x00000000119fef: cmp eax, 0xfffff001; jae short 0x0000000000119ff7; ret; 
0x0000000011a01c: cmp eax, 0xfffff001; jae short 0x000000000011a024; ret; 
0x0000000011a04c: cmp eax, 0xfffff001; jae short 0x000000000011a054; ret; 
0x0000000011a07c: cmp eax, 0xfffff001; jae short 0x000000000011a084; ret; 
0x0000000011a0ac: cmp eax, 0xfffff001; jae short 0x000000000011a0b4; ret; 
0x0000000011a0dc: cmp eax, 0xfffff001; jae short 0x000000000011a0e4; ret; 
0x0000000011a10f: cmp eax, 0xfffff001; jae short 0x000000000011a117; ret; 
0x0000000011a13c: cmp eax, 0xfffff001; jae short 0x000000000011a144; ret; 
0x0000000011a16c: cmp eax, 0xfffff001; jae short 0x000000000011a174; ret; 
0x0000000011a19c: cmp eax, 0xfffff001; jae short 0x000000000011a1a4; ret; 
0x0000000011a1cc: cmp eax, 0xfffff001; jae short 0x000000000011a1d4; ret; 
0x0000000011a20c: cmp eax, 0xfffff001; jae short 0x000000000011a214; ret; 
0x0000000011a2fc: cmp eax, 0xfffff001; jae short 0x000000000011a304; ret; 
0x0000000011a3cc: cmp eax, 0xfffff001; jae short 0x000000000011a3d4; ret; 
0x0000000011a3fc: cmp eax, 0xfffff001; jae short 0x000000000011a404; ret; 
0x0000000011a42f: cmp eax, 0xfffff001; jae short 0x000000000011a437; ret; 
0x0000000011a45c: cmp eax, 0xfffff001; jae short 0x000000000011a464; ret; 
0x0000000011a8df: cmp eax, 0xfffff001; jae short 0x000000000011a8e7; ret; 
0x0000000011a90c: cmp eax, 0xfffff001; jae short 0x000000000011a914; ret; 
0x0000000011a93c: cmp eax, 0xfffff001; jae short 0x000000000011a944; ret; 
0x0000000011a96f: cmp eax, 0xfffff001; jae short 0x000000000011a977; ret; 
0x0000000007b32b: cmp eax, 0xfffff4f0; movsxd rcx, [rsi+rcx*4]; add rcx, rdi; jmp rcx; 
0x00000000075680: cmp eax, 0xfffff763; add rsi, rdi; jmp rsi; 
0x00000000126d6f: cmp eax, 0xfffffe7c; call rax; 
0x0000000010da1d: cmp eax, 0xffffffa1; je short 0x000000000010da28; neg eax; ret; 
0x0000000010dc6d: cmp eax, 0xffffffa1; je short 0x000000000010dc78; neg eax; ret; 
0x000000000d8e64: cmp eax, 0xffffffea; mov eax, 0x3; cmovne eax, edx; ret; 
0x00000000136218: cmp eax, 0xfffffff5; je short 0x0000000000136210; pop rbx; ret; 
0x000000000a8a9f: cmp eax, 0xfffffff; mov ebp, 0xf80148c0; add rax, rsi; ret; 
0x0000000003482a: cmp eax, 0xfffffffd; je short 0x0000000000034848; pop rbx; ret; 
0x00000000099c33: cmp eax, 0xffffffff; cmove rax, rdx; add rsp, 0x8; ret; 
0x00000000028e69: cmp eax, 0xffffffff; je 0x0000000000028f58; add rsp, 0x98; ret; 
0x0000000006104e: cmp eax, 0xffffffff; je short 0x0000000000061060; mov eax, r8d; ret; 
0x0000000007f434: cmp eax, 0xffffffff; je short 0x000000000007f448; mov rax, [rsp+0x8]; add rsp, 0x18; ret; 
0x0000000011c0ad: cmp eax, 0xffffffff; je short 0x000000000011c0e0; add eax, 0x1; mov [rdx], ax; ret; 
0x0000000011c06c: cmp eax, 0xffffffff; je short 0x000000000011c0e0; add eax, 0x1; mov [rdx], eax; ret; 
0x000000000de59a: cmp eax, 0xffffffff; mov edx, 0x0; cmove rax, rdx; ret; 
0x0000000015a702: cmp eax, 0xffffffff; sete dl; mov [rbx], edx; pop rbx; ret; 
0x000000001122f4: cmp eax, 0xffffffff; setne al; add rsp, 0x8; movzx eax, al; ret; 
0x000000000deb75: cmp eax, [rax]; add [rax], al; syscall; 
0x00000000073079: cmp eax, [rbp-0x8d0]; jae 0x00000000000738d0; mov rdx, rbx; mov rdi, r14; call qword ptr [r12+0x38]; 
0x00000000078572: cmp eax, [rbp-0x8d8]; jae 0x00000000000791d8; mov rdx, rbx; mov rdi, r15; call qword ptr [r12+0x38]; 
0x00000000082974: cmp eax, [rbx+0x445b012f]; mov eax, eax; pop rbp; pop r12; ret; 
0x0000000011f664: cmp eax, [rbx+0xc86c02d]; add [rcx], al; mov eax, r8d; add rsp, 0x8; ret; 
0x0000000010e864: cmp eax, [rcx-0x77]; ret; 
0x000000001832a1: cmp eax, [rcx]; add [rax], al; mov byte ptr [rdi], 0x0; vzeroupper; ret; 
0x00000000046137: cmp eax, [rdx]; sbb al, [rax]; add rsp, 0x8; ret; 
0x0000000011bd29: cmp eax, [rip+0xc7689]; mov [rdi+0x10], rax; jb short 0x000000000011bd48; mov qword ptr [rip+0xc7640], 0x2; ret; 
0x0000000011bde6: cmp eax, [rip+0xcbc84]; jae short 0x000000000011bdfa; mov rdx, [rip+0xcbc83]; add word ptr [rdx+rax*2], 0x1; ret; 
0x000000000caf9e: cmp eax, [rsi+0x10]; jne 0x00000000000cb090; ret; 
0x000000000cafb3: cmp eax, [rsi+0x14]; jne 0x00000000000cb090; ret; 
0x000000000cafc8: cmp eax, [rsi+0x18]; jne 0x00000000000cb090; ret; 
0x000000000cafe3: cmp eax, [rsi+0x1c]; jne 0x00000000000cb090; ret; 
0x000000000caffe: cmp eax, [rsi+0x20]; jne 0x00000000000cb090; ret; 
0x000000000cb013: cmp eax, [rsi+0x24]; jne short 0x00000000000cb090; ret; 
0x000000000cb028: cmp eax, [rsi+0x28]; jne short 0x00000000000cb090; ret; 
0x000000000cb033: cmp eax, [rsi+0x2c]; jne short 0x00000000000cb090; ret; 
0x000000000cb04e: cmp eax, [rsi+0x30]; jne short 0x00000000000cb090; ret; 
0x000000000cb063: cmp eax, [rsi+0x34]; jne short 0x00000000000cb090; ret; 
0x000000000cb078: cmp eax, [rsi+0x38]; jne short 0x00000000000cb090; ret; 
0x000000000cb083: cmp eax, [rsi+0x3c]; jne short 0x00000000000cb090; ret; 
0x000000000e7d90: cmp eax, [rsi+0x40]; jl short 0x00000000000e7e00; mov byte ptr [rdi+0x8], 0x1; mov eax, 0x1; ret; 
0x000000000caf53: cmp eax, [rsi+0x4]; jne 0x00000000000cb090; ret; 
0x000000000caf68: cmp eax, [rsi+0x8]; jne 0x00000000000cb090; ret; 
0x000000000caf83: cmp eax, [rsi+0xc]; jne 0x00000000000cb090; ret; 
0x0000000018c54a: cmp eax, [rsi-0x10]; jne 0x000000000018c680; ret; 
0x0000000018c593: cmp eax, [rsi-0x4]; jne 0x000000000018c680; ret; 
0x0000000018c673: cmp eax, [rsi-0x4]; jne short 0x000000000018c680; xor eax, eax; ret; 
0x0000000018c578: cmp eax, [rsi-0x8]; jne 0x000000000018c680; ret; 
0x0000000018c563: cmp eax, [rsi-0xc]; jne 0x000000000018c680; ret; 
0x000000000caf3d: cmp eax, [rsi]; jne 0x00000000000cb090; ret; 
0x00000000085a6f: cmp eax, ebx; jae 0x0000000000086140; lea rsi, [rsp+0x30]; mov rdi, r15; call qword ptr [r14+0x90]; 
0x000000000cb347: cmp eax, ecx; ja short 0x00000000000cb360; sub rdi, 0x10; add rax, rdi; ret; 
0x0000000008495e: cmp eax, ecx; jae short 0x0000000000084965; mov r8d, [rax]; mov eax, r8d; ret; 
0x000000000770ff: cmp eax, ecx; jbe 0x0000000000077210; movsxd rdx, r13d; mov rdi, rbx; call qword ptr [r14+0x38]; 
0x0000000007cba0: cmp eax, ecx; jbe 0x000000000007cca0; movsxd rdx, ebp; mov rdi, rbx; call qword ptr [r14+0x38]; 
0x0000000007e64f: cmp eax, ecx; jbe 0x000000000007e750; mov rsi, rsp; mov rdi, rbp; call qword ptr [rbx+0x90]; 
0x0000000007e7c1: cmp eax, ecx; jbe 0x000000000007e920; xor esi, esi; mov rdi, rbp; call qword ptr [rbx+0x10]; 
0x00000000080e56: cmp eax, ecx; jbe 0x0000000000080ef0; mov rdx, rbx; mov rsi, r12; call qword ptr [r14+0x38]; 
0x000000000860fc: cmp eax, ecx; jbe 0x0000000000086228; xor edx, edx; mov rdi, r15; call qword ptr [rbx+0x80]; 
0x0000000008698e: cmp eax, ecx; jbe 0x0000000000086a70; mov edx, 0x1; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x000000000879ed: cmp eax, ecx; jbe 0x0000000000087b80; mov rdi, rbx; call qword ptr [r13+0x60]; 
0x0000000008935d: cmp eax, ecx; jbe 0x00000000000894e0; mov rdi, rbx; call qword ptr [r13+0x60]; 
0x0000000008b2a4: cmp eax, ecx; jbe 0x000000000008b350; xor edx, edx; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x0000000008c40d: cmp eax, ecx; jbe 0x000000000008c500; mov rdi, rbx; call qword ptr [r12+0x88]; 
0x0000000008e109: cmp eax, ecx; jbe 0x000000000008e198; mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rbx+0x18]; 
0x0000000008e2e1: cmp eax, ecx; jbe 0x000000000008e378; mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rbx+0x18]; 
0x0000000008eb46: cmp eax, ecx; jbe 0x000000000008ec18; mov rdi, rbx; call qword ptr [r13+0x60]; 
0x000000000719eb: cmp eax, ecx; jbe short 0x0000000000071a50; movsxd r12, r12d; mov rdx, r12; call qword ptr [r13+0x38]; 
0x000000000772ca: cmp eax, ecx; jbe short 0x0000000000077348; movsxd rbx, ebx; mov rdx, rbx; call qword ptr [r13+0x38]; 
0x0000000007ed4c: cmp eax, ecx; jbe short 0x000000000007eda8; mov rdi, rbx; call qword ptr [rbp+0x60]; 
0x000000000817ed: cmp eax, ecx; jbe short 0x0000000000081864; mov rdi, rbx; call qword ptr [rbp+0x68]; 
0x00000000083aec: cmp eax, ecx; jbe short 0x0000000000083b28; mov rdi, rbx; call qword ptr [rbp+0x20]; 
0x00000000084631: cmp eax, ecx; jbe short 0x0000000000084660; mov rdi, rbx; call qword ptr [rbp+0x30]; 
0x000000000846cf: cmp eax, ecx; jbe short 0x00000000000846e0; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp+0x30]; 
0x000000000886ab: cmp eax, ecx; jbe short 0x0000000000088700; xor esi, esi; mov rdi, rbp; call qword ptr [r13+0x10]; 
0x0000000008a4fd: cmp eax, ecx; jbe short 0x000000000008a520; call qword ptr [rbx+0x60]; 
0x0000000008a73b: cmp eax, ecx; jbe short 0x000000000008a798; mov rdx, r12; mov rsi, r13; call qword ptr [r14+0x38]; 
0x0000000008a95c: cmp eax, ecx; jbe short 0x000000000008a9c0; mov edx, 0x1; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x0000000008c56d: cmp eax, ecx; jbe short 0x000000000008c5a8; mov rdi, rbp; call qword ptr [rbx+0x88]; 
0x0000000008dec6: cmp eax, ecx; jbe short 0x000000000008df28; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp+0x18]; 
0x0000000008e436: cmp eax, ecx; jbe short 0x000000000008e4a0; mov rdi, rbx; call qword ptr [rbp+0x68]; 
0x0000000008e4ec: cmp eax, ecx; jbe short 0x000000000008e518; mov rdi, rbx; call qword ptr [rbp+0x20]; 
0x0000000008ef6c: cmp eax, ecx; jbe short 0x000000000008efa0; mov rdi, rbx; call qword ptr [rbp+0x30]; 
0x0000000008efff: cmp eax, ecx; jbe short 0x000000000008f020; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp+0x30]; 
0x0000000008fab1: cmp eax, ecx; jbe short 0x000000000008fb10; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [r12+0x18]; 
0x0000000018be42: cmp eax, ecx; jne 0x000000000018c050; xor eax, eax; ret; 
0x0000000018bfaa: cmp eax, ecx; jne 0x000000000018c065; xor eax, eax; ret; 
0x000000000cb19c: cmp eax, ecx; mov eax, 0x1; cmovg r8d, eax; mov eax, r8d; ret; 
0x0000000018c063: cmp eax, ecx; sbb eax, eax; sbb eax, 0xffffffff; ret; 
0x0000000008aa0c: cmp eax, edi; jbe short 0x000000000008aa30; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x000000000cb27f: cmp eax, edx; ja 0x00000000000cb360; add rax, rdi; add rax, rcx; ret; 
0x0000000008ff8f: cmp eax, edx; jae short 0x000000000008ffb8; movzx eax, byte ptr [rax]; ret; 
0x000000001512d7: cmp eax, edx; jae short 0x00000000001512e8; xor r8d, r8d; mov eax, r8d; ret; 
0x0000000014cf2d: cmp eax, edx; je 0x000000000014cfd0; pop rbx; ret; 
0x0000000014cffd: cmp eax, edx; je 0x000000000014d0a0; sub rax, 0xffffffffffffff80; pop rbx; ret; 
0x0000000014d0cd: cmp eax, edx; je 0x000000000014d170; add rax, 0xa0; pop rbx; ret; 
0x0000000014d19d: cmp eax, edx; je 0x000000000014d240; add rax, 0xa8; pop rbx; ret; 
0x000000000a4bd1: cmp eax, edx; je short 0x00000000000a4bb8; mov rax, r8; ret; 
0x000000000a4ad1: cmp eax, edx; jne short 0x00000000000a4ac0; mov rax, r8; ret; 
0x000000000cb168: cmp eax, edx; jne short 0x00000000000cb170; mov eax, r8d; ret; 
0x000000000e0ab5: cmp eax, edx; mov edx, 0x100; mov eax, 0x20; cmove rax, rdx; ret; 
0x000000000386f5: cmp eax, edx; mov rdx, 0xffffffffffffffff; cmove rax, rdx; ret; 
0x00000000045e0b: cmp eax, edx; sbb [rax], eax; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000008470a: cmp eax, esi; ja short 0x0000000000084700; lea eax, [rdx+rdi]; ret; 
0x0000000008f04a: cmp eax, esi; ja short 0x000000000008f040; lea eax, [rdx+rdi]; ret; 
0x0000000012118d: cmp eax, esi; jb short 0x00000000001211a0; mov eax, 0x1; ret; 
0x000000000a4a9d: cmp eax, esi; jne short 0x00000000000a4a90; mov rax, r8; ret; 
0x000000000a4c01: cmp eax, esi; jne short 0x00000000000a4bf0; mov rax, r8; ret; 
0x000000001367aa: cmp eax, esi; jne short 0x0000000000136780; mov [r8], rdi; xor eax, eax; ret; 
0x000000000a4bd0: cmp eax, r10d; je short 0x00000000000a4bb8; mov rax, r8; ret; 
0x000000000364b3: cmp ebp, 0xc; ja 0x0000000000036600; movsxd rcx, [rdi+r9*4]; add rcx, rdi; notrack jmp rcx; 
0x0000000010793f: cmp ebp, 0xffca83ff; or edi, 0xffffffff; mov esi, eax; mov eax, 0x75; syscall; 
0x00000000107968: cmp ebp, 0xffca83ff; or edi, 0xffffffff; mov esi, eax; mov eax, 0x77; syscall; 
0x000000001219ae: cmp ebp, 0xffffffff; jmp qword ptr [rsi+0xf]; 
0x0000000008f8be: cmp ebp, eax; jbe 0x000000000008f9a0; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [r15+0x18]; 
0x0000000014b70a: cmp ebp, ebx; ret; 
0x00000000084397: cmp ebp, edx; jbe 0x0000000000084558; mov rdi, r15; call qword ptr [rax+0x20]; 
0x0000000008bbf2: cmp ebp, edx; jbe 0x000000000008bda0; mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rax+0x18]; 
0x0000000008e830: cmp ebp, edx; jbe 0x000000000008ea90; mov rdi, rbx; call qword ptr [rax+0x20]; 
0x0000000008e8e0: cmp ebp, edx; jbe 0x000000000008eaf0; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rax+0x18]; 
0x00000000168709: cmp ebx, 0x4; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000908f1: cmp ebx, [rsi+0x15]; add [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; jmp rax; 
0x0000000008abf0: cmp ebx, eax; jbe 0x000000000008ad28; mov rsi, rsp; mov rdi, rbp; call qword ptr [r15+0x90]; 
0x0000000008bec6: cmp ebx, eax; jbe 0x000000000008bff8; mov rsi, rsp; mov rdi, rbp; call qword ptr [r13+0x90]; 
0x0000000008c0e2: cmp ebx, eax; jbe 0x000000000008c2e0; mov rsi, rsp; mov rdi, rbp; call qword ptr [r12+0x90]; 
0x000000001070ac: cmp ebx, eax; pop rbx; setl al; ret; 
0x00000000191ba4: cmp ebx, ebp; jae short 0x0000000000191bbb; nop [rax+rax]; call qword ptr [rbx]; 
0x00000000115ae4: cmp ebx, edi; jae short 0x0000000000115b08; mov rsi, r12; mov rdi, r15; call r14; 
0x00000000083bfe: cmp ebx, edx; jbe 0x0000000000083d90; mov esi, r12d; mov rdi, r14; call qword ptr [rax+0x18]; 
0x0000000008b4a3: cmp ebx, edx; jbe 0x000000000008b710; lea rsi, [rsp+0x20]; mov rdi, rbp; call qword ptr [rax+0x90]; 
0x00000000044b49: cmp ebx, esp; jae short 0x0000000000044b5b; nop [rax]; call qword ptr [rbx]; 
0x00000000108543: cmp ecx, 0x1; ja short 0x0000000000108578; mov eax, 0x106; syscall; 
0x00000000156f74: cmp ecx, 0x3; jbe short 0x0000000000156f80; ret; 
0x0000000009e37d: cmp ecx, 0x5; je short 0x000000000009e386; xor byte ptr [rax+0x6], 0x2a; mov rax, r8; ret; 
0x0000000007259e: cmp ecx, 0x7; ja 0x0000000000072af0; movsxd rcx, [rdx+rcx*4]; add rcx, rdx; notrack jmp rcx; 
0x00000000077de6: cmp ecx, 0x7; ja 0x00000000000783b0; movsxd rcx, [rdx+rcx*4]; add rcx, rdx; notrack jmp rcx; 
0x00000000040c1c: cmp ecx, 0x80; jne short 0x0000000000040c30; test eax, 0x7fffff; je short 0x0000000000040c30; ret; 
0x000000000fd8c2: cmp ecx, 0xc0fe; setne al; lea eax, [rax+rax*8+0x5]; ret; 
0x00000000055c36: cmp ecx, 0xe0757fff; mov eax, 0x1; ret; 
0x00000000053d00: cmp ecx, 0xfffffff8; jne short 0x0000000000053cf0; mov rax, rdx; ret; 
0x00000000119927: cmp ecx, 0xffffffff; je short 0x0000000000119958; mov eax, 0x149; syscall; 
0x00000000159716: cmp ecx, [rax+0x28]; jae short 0x0000000000159700; mov eax, 0x1; ret; 
0x0000000014d494: cmp ecx, [rax-0x77]; ret far; 
0x000000000299b8: cmp ecx, [rax-0x7d]; ret; 
0x000000000fd85c: cmp ecx, [rax-0xc]; jne short 0x00000000000fd850; mov eax, [rdx+0x8]; ret; 
0x00000000189214: cmp ecx, [rdi-0x4]; jne 0x0000000000189446; xor eax, eax; ret; 
0x00000000185f59: cmp ecx, [rdx+rdi+0x20]; jne 0x0000000000185d99; vzeroupper; ret; 
0x00000000185f86: cmp ecx, [rdx+rdi+0x40]; jne 0x0000000000185d99; vzeroupper; ret; 
0x00000000185f88: cmp ecx, [rdx+rdi+0x40]; jne 0x0000000000185d99; vzeroupper; ret; 
0x000000001863ef: cmp ecx, [rdx+rdi]; jne 0x0000000000186209; vzeroupper; ret; 
0x000000001863ee: cmp ecx, [rdx+rdi]; jne 0x0000000000186209; vzeroupper; ret; 
0x000000000d67d1: cmp ecx, [rip+0x48c68900]; movsxd edx, [rdi+rsi*4]; add rdx, rdi; notrack jmp rdx; 
0x0000000010f328: cmp ecx, [rip+0x64d8f700]; mov [rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010f26c: cmp ecx, [rip+0xc76400]; or al, 0x0; add [rax], al; mov eax, 0xffffffff; ret; 
0x00000000185dba: cmp ecx, [rsi+rdx+0x20]; jne short 0x0000000000185d99; vzeroupper; ret; 
0x00000000185dd9: cmp ecx, [rsi+rdx+0x40]; jne short 0x0000000000185d99; vzeroupper; ret; 
0x00000000185dfa: cmp ecx, [rsi+rdx+0x60]; jne short 0x0000000000185d99; vzeroupper; ret; 
0x0000000018611f: cmp ecx, [rsi+rdx]; jne 0x0000000000185d99; vzeroupper; ret; 
0x00000000186617: cmp ecx, [rsi+rdx]; jne 0x0000000000186209; vzeroupper; ret; 
0x00000000186236: cmp ecx, [rsi+rdx]; jne short 0x0000000000186209; vzeroupper; ret; 
0x000000001270e1: cmp ecx, [rsi-0x7cb7000d]; ret; 
0x000000001865f4: cmp ecx, [rsi]; jne 0x0000000000186209; vzeroupper; ret; 
0x00000000187bbf: cmp ecx, eax; jne 0x00000000001885f3; xor eax, eax; ret; 
0x00000000187be7: cmp ecx, eax; jne 0x00000000001885ff; xor eax, eax; ret; 
0x000000001891ef: cmp ecx, eax; jne 0x0000000000189433; xor eax, eax; ret; 
0x000000001885cb: cmp ecx, eax; jne short 0x00000000001885f3; xor eax, eax; ret; 
0x0000000018940b: cmp ecx, eax; jne short 0x0000000000189433; xor eax, eax; ret; 
0x0000000018943f: cmp ecx, eax; jne short 0x0000000000189446; xor eax, eax; ret; 
0x00000000053c94: cmp ecx, eax; sbb eax, eax; and eax, 0x2; sub eax, 0x1; ret; 
0x00000000136774: cmp ecx, edi; jae short 0x0000000000136783; mov eax, 0xffffffff; ret; 
0x00000000137328: cmp ecx, edi; jb short 0x0000000000137315; mov eax, 0xffffffff; pop rbx; ret; 
0x00000000139f0e: cmp ecx, edi; jg short 0x0000000000139ecd; mov byte ptr [r8], 0x0; mov rax, r10; ret; 
0x0000000011aed8: cmp ecx, edx; mov edx, 0x0; cmovb rax, rdx; ret; 
0x00000000094c53: cmp ecx, esp; adc al, 0x0; xor edi, edi; call qword ptr [rax]; 
0x000000001296c5: cmp edi, 0x3ff; ja short 0x00000000001296d5; mov rax, rdi; sar rax, 0x6; ret; 
0x00000000125a64: cmp edi, 0x56; je short 0x0000000000125a70; mov eax, 0x7; ret; 
0x00000000136b4f: cmp edi, 0x5; mov edx, 0x0; mov eax, 0x102; cmovne eax, edx; ret; 
0x0000000011cd06: cmp edi, 0x9; setbe r8b; mov eax, r8d; ret; 
0x000000000d0275: cmp edi, 0xa3d70b; setb al; add eax, 0x16d; ret; 
0x00000000136b25: cmp edi, 0xb; mov edx, 0x29; mov eax, 0x104; cmovne eax, edx; ret; 
0x000000001354f1: cmp edi, [rax+0x3]; syscall; 
0x000000001860ac: cmp edi, [rdx+rcx+0x40]; jne 0x0000000000185d99; vzeroupper; ret; 
0x00000000185f26: cmp edi, [rdx+rcx]; jne 0x0000000000185d99; vzeroupper; ret; 
0x000000001863ac: cmp edi, [rdx+rcx]; jne 0x0000000000186209; vzeroupper; ret; 
0x0000000010f23e: cmp edi, eax; ja short 0x000000000010f268; xor eax, eax; ret; 
0x000000000464a5: cmp edi, eax; jb short 0x0000000000046485; xor eax, eax; ret; 
0x00000000116527: cmp edi, eax; jne short 0x0000000000116558; mov eax, 0x88; syscall; 
0x000000000cd812: cmp edi, ecx; call far fword ptr [rcx+0x5e]; 
0x0000000005cb71: cmp edi, ecx; ja short 0x000000000005cb58; mov eax, r8d; ret; 
0x00000000137287: cmp edi, ecx; ja short 0x0000000000137274; mov eax, 0xffffffff; ret; 
0x000000000b7edd: cmp edi, ecx; jb 0x00000000000b8048; mov rcx, rdx; rep movsb [rdi], [rsi]; ret; 
0x000000001851c8: cmp edi, ecx; jb 0x0000000000185395; mov rcx, rdx; rep movsb [rdi], [rsi]; ret; 
0x00000000189f53: cmp edi, ecx; jb 0x000000000018a190; mov rcx, rdx; rep movsb [rdi], [rsi]; ret; 
0x000000000b7e4b: cmp edi, edx; jb short 0x00000000000b7e52; rep movsb [rdi], [rsi]; ret; 
0x00000000117096: cmp edi, edx; jne short 0x0000000000117088; mov rax, [rax+0x8]; ret; 
0x00000000107d19: cmp edi, esi; ja short 0x0000000000107d08; mov eax, r8d; ret; 
0x00000000091347: cmp edi, esi; sete al; ret; 
0x000000000e09e1: cmp edx, 0x11954; mov eax, 0x7f; mov edx, 0x7d00; cmove rax, rdx; ret; 
0x000000000e0a34: cmp edx, 0x137f; mov edx, 0x7f; cmovne rax, rdx; ret; 
0x00000000141232: cmp edx, 0x1; jne short 0x0000000000141258; ret; 
0x000000000e0c0e: cmp edx, 0x1badface; setne al; ret; 
0x000000000e0c29: cmp edx, 0x1cd1; setne al; ret; 
0x000000000b8213: cmp edx, 0x20; ja 0x00000000000b82ac; movdqu [rdi+rdx-0x10], xmm0; movdqu [rdi], xmm0; ret; 
0x000000000b8293: cmp edx, 0x20; ja short 0x00000000000b82a3; movdqu [rdi+rdx-0x10], xmm0; movdqu [rdi], xmm0; ret; 
0x000000000e0a0f: cmp edx, 0x2468; jne short 0x00000000000e0a33; mov eax, 0xfffa; ret; 
0x000000000d0265: cmp edx, 0x28f5c28; jbe short 0x00000000000d0270; ret; 
0x000000000fd82f: cmp edx, 0x2; je short 0x00000000000fd838; ret; 
0x0000000010d4b4: cmp edx, 0x4; ja short 0x000000000010d4c0; mov [rsi+0x66], dx; xor eax, eax; ret; 
0x00000000090a86: cmp edx, 0x4; je short 0x0000000000090a90; ret; 
0x00000000107c76: cmp edx, 0x4; je short 0x0000000000107c84; mov eax, 0x1c; syscall; 
0x000000000e0bf6: cmp edx, 0x5346544e; setne al; ret; 
0x000000000e0a1e: cmp edx, 0x54190100; mov eax, 0x7f; mov edx, 0x7d00; cmove rax, rdx; ret; 
0x000000000e0995: cmp edx, 0x58465342; jne short 0x00000000000e09a0; ret; 
0x000000000da195: cmp edx, 0x7fffffff; mov eax, 0x7fffffff; cmova rdx, rax; mov eax, 0xd9; syscall; 
0x000000001297d9: cmp edx, 0x80000000; cmovne eax, edi; ret; 
0x00000000090a04: cmp edx, 0xa; je short 0x0000000000090a15; mov eax, r8d; ret; 
0x000000000e0bda: cmp edx, 0xadf5; setne al; ret; 
0x000000000e09c7: cmp edx, 0xbd00bd0; mov eax, 0x7f; mov edx, 0xfde8; cmove rax, rdx; ret; 
0x000000000b84de: cmp edx, 0xff; cmove rax, rcx; ret; 
0x00000000083f44: cmp edx, [rax+0x18]; jbe short 0x0000000000083f68; mov rax, [rax+0xe0]; mov esi, 0xffffffff; call qword ptr [rax+0x18]; 
0x00000000053147: cmp edx, [rax]; mov eax, 0x0; jne short 0x0000000000053153; push r10; ret; 
0x00000000053620: cmp edx, [rax]; mov eax, 0x0; jne short 0x000000000005362c; push r10; ret; 
0x00000000185844: cmp edx, [rsi]; jne short 0x000000000018582c; ret; 
0x0000000017e1c5: cmp edx, eax; jbe short 0x000000000017e230; add rax, rdi; vzeroupper; ret; 
0x00000000185c75: cmp edx, eax; jbe short 0x0000000000185ce0; add rax, rdi; vzeroupper; ret; 
0x000000000e09a7: cmp edx, eax; jne short 0x00000000000e0a1d; mov eax, 0x7d00; ret; 
0x00000000108487: cmp edx, eax; jne short 0x00000000001084b8; mov eax, 0x85; syscall; 
0x000000001084ea: cmp edx, eax; jne short 0x0000000000108518; mov eax, 0x103; syscall; 
0x000000000cb17c: cmp edx, eax; mov eax, 0x1; cmovl r8d, eax; mov eax, r8d; ret; 
0x000000001366e1: cmp edx, eax; sbb eax, eax; ret; 
0x0000000008af9a: cmp edx, ebx; jae 0x000000000008b2d0; xor edx, edx; mov rdi, rbp; call qword ptr [rax+0x80]; 
0x0000000008ae39: cmp edx, ebx; jae 0x000000000008b308; lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax+0x90]; 
0x00000000128485: cmp edx, ecx; ja short 0x00000000001284b4; xor eax, eax; syscall; 
0x00000000059856: cmp edx, ecx; jae short 0x000000000005983c; mov rax, r8; ret; 
0x000000000a4b80: cmp edx, ecx; je short 0x00000000000a4b78; cmp edx, esi; je short 0x00000000000a4b78; ret; 
0x0000000010de76: cmp edx, ecx; je short 0x000000000010de80; ret; 
0x0000000017d59c: cmp edx, ecx; jle 0x000000000017d640; ret; 
0x0000000017d31a: cmp edx, ecx; jle short 0x000000000017d334; movsxd rax, ecx; ret; 
0x0000000017d319: cmp edx, ecx; jle short 0x000000000017d334; movsxd rax, ecx; ret; 
0x000000000b831f: cmp edx, ecx; jne short 0x00000000000b8307; rep ret; 
0x000000001856b6: cmp edx, ecx; jne short 0x000000000018569b; vzeroupper; ret; 
0x0000000018a579: cmp edx, ecx; jne short 0x000000000018a556; vzeroupper; ret; 
0x00000000156f60: cmp edx, ecx; sete al; ret; 
0x000000000907a2: cmp edx, edi; setae al; ret; 
0x000000000a4b48: cmp edx, esi; je short 0x00000000000a4b40; ret; 
0x000000000a4b84: cmp edx, esi; je short 0x00000000000a4b78; ret; 
0x000000000ba437: cmp edx, esi; je short 0x00000000000ba43f; test edx, edx; jne short 0x00000000000ba430; ret; 
0x00000000136b0e: cmp esi, 0x14; mov edx, 0x107; mov eax, 0xffffffff; cmove eax, edx; ret; 
0x000000000d8e14: cmp esi, 0x1; je short 0x00000000000d8e20; xor eax, eax; ret; 
0x00000000091158: cmp esi, 0x1; mov edx, 0x5f; mov eax, 0x16; cmove eax, edx; ret; 
0x000000000896ed: cmp esi, 0x2; cmovne edx, ecx; mov [rdi], edx; ret; 
0x00000000107c49: cmp esi, 0x2; ja short 0x0000000000107c56; mov [rdi+0x10c], esi; xor eax, eax; ret; 
0x00000000091139: cmp esi, 0x2; jbe short 0x0000000000091140; ret; 
0x00000000053292: cmp esi, 0x2f; notrack jmp rdx; 
0x00000000156f5a: cmp esi, 0x3; ja short 0x0000000000156f70; cmp dx, cx; sete al; ret; 
0x00000000034808: cmp esi, 0x3; je short 0x0000000000034810; ret; 
0x00000000168409: cmp esi, 0x4; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000091363: cmp esi, 0x7fffffff; mov esi, 0x7fffffff; cmovbe rsi, r8; syscall; 
0x000000000fd2f8: cmp esi, 0x7fffffff; mov esi, 0x7fffffff; mov eax, 0xcc; cmovbe rsi, r8; syscall; 
0x000000001373e2: cmp esi, 0x80; cmovb eax, edx; ret; 
0x0000000010e329: cmp esi, 0x9; je short 0x000000000010e358; mov eax, 0x48; syscall; 
0x0000000010e3b8: cmp esi, 0x9; je short 0x000000000010e3e8; mov eax, 0x48; syscall; 
0x0000000002db8e: cmp esi, 0xffffffff; jmp qword ptr [rsi+0xf]; 
0x00000000141445: cmp esi, 0xffffffff; nop [rax+rax]; endbr64; ret; 
0x00000000186740: cmp esi, [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x000000000e46e8: cmp esi, [rdi+0x25]; lea rsi, [rip+0xc62f2]; movsxd rax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x000000000d8f6b: cmp esi, [rdi+0x2a]; mov eax, 0xe3; syscall; 
0x00000000143ec2: cmp esi, [rdx+0x28]; ja short 0x0000000000143eb0; mov [rdx+0x20], rsi; ret; 
0x000000001851e9: cmp esi, [rdx+0x5]; movzx ecx, byte ptr [rsi]; mov [rdi], cl; ret; 
0x00000000185fb5: cmp esi, [rdx+rcx+0x60]; jne 0x0000000000185d99; vzeroupper; ret; 
0x0000000018646b: cmp esi, [rdx+rcx]; jne 0x0000000000186209; vzeroupper; ret; 
0x0000000009929e: cmp esi, [rip+0x14dbe4]; jae short 0x0000000000099319; lea rax, [rax-0x8]; ret; 
0x0000000008b870: cmp esi, eax; jbe 0x000000000008b960; mov rsi, r13; mov rdi, rbx; call qword ptr [rbp+0x70]; 
0x00000000124a49: cmp esp, 0xffffffff; jmp far fword ptr [rax+0x61840f02]; 
0x0000000006c859: cmp esp, [rbp+0x17]; add [rax-0x7b], cl; jmp qword ptr [rax+rcx*2-0x75]; 
0x0000000009d781: cmp esp, [rsi-0x72b7ffff]; add eax, 0x1a714; cmove rax, rdx; ret; 
0x0000000008f14f: cmp esp, edx; jbe 0x000000000008f2d0; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rax+0x18]; 
0x0000000013ae14: cmp esp, esi; jmp qword ptr [rsp+rax*2-0x77]; 
0x00000000083dfb: cmp qword ptr [rax+0x30], 0x0; je short 0x0000000000083e08; ret; 
0x00000000121606: cmp qword ptr [rbx+0x28], 0x0; mov eax, 0x0; cmovns rax, [rbx+0x28]; pop rbx; ret; 
0x000000000895b9: cmp qword ptr [rdi+0x18], 0x0; setne r8b; mov eax, r8d; ret; 
0x00000000090d74: cmp qword ptr [rdi+0x28], 0x0; je short 0x0000000000090d80; xor eax, eax; ret; 
0x0000000008e3f4: cmp qword ptr [rdi+0x38], 0x0; je short 0x000000000008e400; ret; 
0x00000000126bab: cmp qword ptr [rdi], 0x0; je short 0x0000000000126bc0; ret; 
0x0000000009b294: cmp qword ptr [rip+0x14bc74], 0x0; je short 0x000000000009b2a0; ret; 
0x000000000d8f64: cmp qword ptr [rsi+0x8], 0x3b9ac9ff; ja short 0x00000000000d8f98; mov eax, 0xe3; syscall; 
0x00000000114640: cmp qword ptr [rsi], 0x0; mov rbx, rsi; je short 0x0000000000114650; pop rbx; ret; 
0x00000000053146: cmp r10, [rax]; mov eax, 0x0; jne short 0x0000000000053153; push r10; ret; 
0x0000000005361f: cmp r10, [rax]; mov eax, 0x0; jne short 0x000000000005362c; push r10; ret; 
0x000000001084e9: cmp r10, rax; jne short 0x0000000000108518; mov eax, 0x103; syscall; 
0x0000000008ef1b: cmp r11b, r13b; test al, 0x90; endbr64; mov rax, 0xffffffffffffffff; ret; 
0x0000000008f14e: cmp r12, rdx; jbe 0x000000000008f2d0; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rax+0x18]; 
0x0000000013ae13: cmp r12, rsi; jmp qword ptr [rsp+rax*2-0x77]; 
0x00000000185f5a: cmp r12b, [rax]; jne 0x0000000000185d99; vzeroupper; ret; 
0x00000000084395: cmp r13, rdx; jbe 0x0000000000084558; mov rdi, r15; call qword ptr [rax+0x20]; 
0x00000000084396: cmp r13, rdx; jbe 0x0000000000084558; mov rdi, r15; call qword ptr [rax+0x20]; 
0x0000000008bbf1: cmp r13, rdx; jbe 0x000000000008bda0; mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rax+0x18]; 
0x0000000008e82f: cmp r13, rdx; jbe 0x000000000008ea90; mov rdi, rbx; call qword ptr [rax+0x20]; 
0x0000000008e82e: cmp r13, rdx; jbe 0x000000000008ea90; mov rdi, rbx; call qword ptr [rax+0x20]; 
0x0000000008e8df: cmp r13, rdx; jbe 0x000000000008eaf0; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rax+0x18]; 
0x0000000008e8de: cmp r13, rdx; jbe 0x000000000008eaf0; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rax+0x18]; 
0x0000000008b86f: cmp r14, rax; jbe 0x000000000008b960; mov rsi, r13; mov rdi, rbx; call qword ptr [rbp+0x70]; 
0x00000000123266: cmp r8b, sil; cmovne eax, edi; ret; 
0x00000000184370: cmp r8d, 0x1; ja 0x0000000000184040; je 0x0000000000184030; vzeroupper; ret; 
0x0000000018424c: cmp r8d, 0x1; ja 0x0000000000184120; je 0x0000000000184110; vzeroupper; ret; 
0x00000000184f7c: cmp r8d, 0x1; ja 0x0000000000184e50; je 0x0000000000184e40; vzeroupper; ret; 
0x0000000010803d: cmp r8d, 0x1; ja short 0x0000000000108070; mov eax, 0x4; syscall; 
0x0000000010809c: cmp r8d, 0x1; ja short 0x00000000001080d0; mov eax, 0x5; syscall; 
0x000000001080fd: cmp r8d, 0x1; ja short 0x0000000000108130; mov eax, 0x6; syscall; 
0x000000000c2c86: cmp r8d, 0xff; je short 0x00000000000c2c93; mov eax, r8d; ret; 
0x00000000108542: cmp r9d, 0x1; ja short 0x0000000000108578; mov eax, 0x106; syscall; 
0x00000000139f0d: cmp r9d, edi; jg short 0x0000000000139ecd; mov byte ptr [r8], 0x0; mov rax, r10; ret; 
0x000000000cc007: cmp rax, 0x19; jg short 0x00000000000cc030; mov rax, r12; pop r12; ret; 
0x00000000151a06: cmp rax, 0x1; sete r8b; add rsp, 0x8; mov eax, r8d; ret; 
0x000000000923c7: cmp rax, 0x2000000; jbe short 0x00000000000923d0; ret; 
0x00000000092107: cmp rax, 0x408; jbe short 0x0000000000092110; ret; 
0x000000000e0b30: cmp rax, 0x517b; jne short 0x00000000000e0b40; mov eax, 0x40; ret; 
0x000000000e0b60: cmp rax, 0x52654973; mov edx, 0x40; mov eax, 0x20; cmove rax, rdx; ret; 
0x000000000e0aeb: cmp rax, 0x58465342; mov edx, 0x40; mov eax, 0x20; cmove rax, rdx; ret; 
0x00000000092439: cmp rax, 0x7; mov eax, 0x10; cmova rax, rdx; mov [rip+0x154a4b], rax; ret; 
0x000000000598d8: cmp rax, 0x9; ja short 0x00000000000598b0; mov rax, r8; ret; 
0x00000000092427: cmp rax, 0xa0; jbe short 0x0000000000092430; ret; 
0x000000000e0b1a: cmp rax, 0xbd00bd0; mov edx, 0x40; mov eax, 0x20; cmove rax, rdx; ret; 
0x000000000e0b40: cmp rax, 0xef53; mov edx, 0x40; mov eax, 0x20; cmove rax, rdx; ret; 
0x00000000092147: cmp rax, 0xffff; jbe short 0x0000000000092150; ret; 
0x00000000041c00: cmp rax, 0xfffffffffffff000; ja short 0x0000000000041c10; ret; 
0x00000000041c4c: cmp rax, 0xfffffffffffff000; ja short 0x0000000000041ca0; ret; 
0x000000000463d7: cmp rax, 0xfffffffffffff000; ja short 0x0000000000046430; ret; 
0x00000000060fcb: cmp rax, 0xfffffffffffff000; ja short 0x0000000000060fd8; ret; 
0x00000000060ffe: cmp rax, 0xfffffffffffff000; ja short 0x0000000000061010; ret; 
0x000000000ccd8b: cmp rax, 0xfffffffffffff000; ja short 0x00000000000ccd98; ret; 
0x000000000ccea0: cmp rax, 0xfffffffffffff000; ja short 0x00000000000cceb0; ret; 
0x000000000cd050: cmp rax, 0xfffffffffffff000; ja short 0x00000000000cd060; ret; 
0x000000000d01eb: cmp rax, 0xfffffffffffff000; ja short 0x00000000000d01f8; ret; 
0x000000000d021b: cmp rax, 0xfffffffffffff000; ja short 0x00000000000d0228; ret; 
0x000000000d8f75: cmp rax, 0xfffffffffffff000; ja short 0x00000000000d8f80; ret; 
0x000000000da1ab: cmp rax, 0xfffffffffffff000; ja short 0x00000000000da1b8; ret; 
0x000000000de64a: cmp rax, 0xfffffffffffff000; ja short 0x00000000000de6b0; ret; 
0x000000000de6fd: cmp rax, 0xfffffffffffff000; ja short 0x00000000000de770; ret; 
0x000000000de857: cmp rax, 0xfffffffffffff000; ja short 0x00000000000de890; ret; 
0x000000000deb44: cmp rax, 0xfffffffffffff000; ja short 0x00000000000deb68; hlt; mov eax, esi; syscall; 
0x000000000fd2cb: cmp rax, 0xfffffffffffff000; ja short 0x00000000000fd2d8; ret; 
0x000000000fd36b: cmp rax, 0xfffffffffffff000; ja short 0x00000000000fd378; ret; 
0x00000000106caa: cmp rax, 0xfffffffffffff000; ja short 0x0000000000106d10; ret; 
0x00000000106d5a: cmp rax, 0xfffffffffffff000; ja short 0x0000000000106dc0; ret; 
0x0000000010804a: cmp rax, 0xfffffffffffff000; ja short 0x0000000000108058; ret; 
0x000000001080a9: cmp rax, 0xfffffffffffff000; ja short 0x00000000001080b8; ret; 
0x0000000010810a: cmp rax, 0xfffffffffffff000; ja short 0x0000000000108118; ret; 
0x00000000108492: cmp rax, 0xfffffffffffff000; ja short 0x00000000001084a0; ret; 
0x000000001084f5: cmp rax, 0xfffffffffffff000; ja short 0x0000000000108500; ret; 
0x0000000010854f: cmp rax, 0xfffffffffffff000; ja short 0x0000000000108560; ret; 
0x00000000108cb2: cmp rax, 0xfffffffffffff000; ja short 0x0000000000108d10; ret; 
0x00000000108d57: cmp rax, 0xfffffffffffff000; ja short 0x0000000000108db0; ret; 
0x00000000108deb: cmp rax, 0xfffffffffffff000; ja short 0x0000000000108df8; ret; 
0x00000000108e1b: cmp rax, 0xfffffffffffff000; ja short 0x0000000000108e28; ret; 
0x000000001094f7: cmp rax, 0xfffffffffffff000; ja short 0x0000000000109540; ret; 
0x00000000109677: cmp rax, 0xfffffffffffff000; ja short 0x00000000001096c0; ret; 
0x0000000010d637: cmp rax, 0xfffffffffffff000; ja short 0x000000000010d690; ret; 
0x0000000010dcda: cmp rax, 0xfffffffffffff000; ja short 0x000000000010dd58; ret; 
0x0000000010dd9e: cmp rax, 0xfffffffffffff000; ja short 0x000000000010ddb0; ret; 
0x0000000010dde3: cmp rax, 0xfffffffffffff000; ja short 0x000000000010ddf0; ret; 
0x0000000010e17a: cmp rax, 0xfffffffffffff000; ja short 0x000000000010e1e0; ret; 
0x0000000010e22a: cmp rax, 0xfffffffffffff000; ja short 0x000000000010e290; ret; 
0x0000000010e2cb: cmp rax, 0xfffffffffffff000; ja short 0x000000000010e2d8; ret; 
0x0000000010e588: cmp rax, 0xfffffffffffff000; ja short 0x000000000010e598; ret; 
0x0000000010e5be: cmp rax, 0xfffffffffffff000; ja short 0x000000000010e5d0; ret; 
0x0000000010e5fb: cmp rax, 0xfffffffffffff000; ja short 0x000000000010e608; ret; 
0x0000000010eae1: cmp rax, 0xfffffffffffff000; ja short 0x000000000010eb38; ret; 
0x0000000010ed04: cmp rax, 0xfffffffffffff000; ja short 0x000000000010ed10; ret; 
0x0000000010ed45: cmp rax, 0xfffffffffffff000; ja short 0x000000000010ed50; ret; 
0x0000000010ed7b: cmp rax, 0xfffffffffffff000; ja short 0x000000000010ed88; ret; 
0x0000000010f357: cmp rax, 0xfffffffffffff000; ja short 0x000000000010f3b0; ret; 
0x0000000010f3f7: cmp rax, 0xfffffffffffff000; ja short 0x000000000010f450; ret; 
0x0000000010f49d: cmp rax, 0xfffffffffffff000; ja short 0x000000000010f508; ret; 
0x0000000010f55d: cmp rax, 0xfffffffffffff000; ja short 0x000000000010f5c8; ret; 
0x0000000010feda: cmp rax, 0xfffffffffffff000; ja short 0x000000000010ff50; ret; 
0x00000000110117: cmp rax, 0xfffffffffffff000; ja short 0x0000000000110160; ret; 
0x000000001101d7: cmp rax, 0xfffffffffffff000; ja short 0x0000000000110220; ret; 
0x00000000110297: cmp rax, 0xfffffffffffff000; ja short 0x00000000001102a0; ret; 
0x00000000111beb: cmp rax, 0xfffffffffffff000; ja short 0x0000000000111bf8; ret; 
0x00000000111c1b: cmp rax, 0xfffffffffffff000; ja short 0x0000000000111c28; ret; 
0x00000000113826: cmp rax, 0xfffffffffffff000; ja short 0x0000000000113890; pop rbx; pop rbp; ret; 
0x00000000113927: cmp rax, 0xfffffffffffff000; ja short 0x0000000000113980; ret; 
0x00000000116532: cmp rax, 0xfffffffffffff000; ja short 0x0000000000116540; ret; 
0x0000000011925b: cmp rax, 0xfffffffffffff000; ja short 0x0000000000119268; ret; 
0x0000000011928b: cmp rax, 0xfffffffffffff000; ja short 0x0000000000119298; ret; 
0x00000000119330: cmp rax, 0xfffffffffffff000; ja short 0x00000000001193a8; ret; 
0x000000001193f3: cmp rax, 0xfffffffffffff000; ja short 0x0000000000119400; ret; 
0x0000000011952a: cmp rax, 0xfffffffffffff000; ja short 0x0000000000119590; ret; 
0x000000001195da: cmp rax, 0xfffffffffffff000; ja short 0x0000000000119640; ret; 
0x0000000011968a: cmp rax, 0xfffffffffffff000; ja short 0x00000000001196f0; ret; 
0x0000000011973a: cmp rax, 0xfffffffffffff000; ja short 0x00000000001197b8; ret; 
0x00000000119807: cmp rax, 0xfffffffffffff000; ja short 0x0000000000119860; ret; 
0x000000001198cf: cmp rax, 0xfffffffffffff000; ja short 0x0000000000119908; mov r8d, eax; mov eax, r8d; ret; 
0x00000000119933: cmp rax, 0xfffffffffffff000; ja short 0x0000000000119940; ret; 
0x00000000119a0b: cmp rax, 0xfffffffffffff000; ja short 0x0000000000119a18; ret; 
0x00000000119a3e: cmp rax, 0xfffffffffffff000; ja short 0x0000000000119a50; ret; 
0x00000000119b0e: cmp rax, 0xfffffffffffff000; ja short 0x0000000000119b20; ret; 
0x00000000119b4e: cmp rax, 0xfffffffffffff000; ja short 0x0000000000119b60; ret; 
0x00000000119b8b: cmp rax, 0xfffffffffffff000; ja short 0x0000000000119b98; ret; 
0x0000000011a267: cmp rax, 0xfffffffffffff000; ja short 0x000000000011a2c0; ret; 
0x0000000011a337: cmp rax, 0xfffffffffffff000; ja short 0x000000000011a390; ret; 
0x0000000011a4a0: cmp rax, 0xfffffffffffff000; ja short 0x000000000011a510; ret; 
0x0000000011a55a: cmp rax, 0xfffffffffffff000; ja short 0x000000000011a5d0; ret; 
0x0000000011a617: cmp rax, 0xfffffffffffff000; ja short 0x000000000011a670; ret; 
0x0000000011a6c0: cmp rax, 0xfffffffffffff000; ja short 0x000000000011a730; ret; 
0x0000000011a777: cmp rax, 0xfffffffffffff000; ja short 0x000000000011a7d0; ret; 
0x0000000011a81a: cmp rax, 0xfffffffffffff000; ja short 0x000000000011a898; ret; 
0x0000000011ac7a: cmp rax, 0xfffffffffffff000; ja short 0x000000000011ace0; ret; 
0x0000000011ad2a: cmp rax, 0xfffffffffffff000; ja short 0x000000000011ad98; ret; 
0x0000000011adea: cmp rax, 0xfffffffffffff000; ja short 0x000000000011ae50; ret; 
0x0000000011af8a: cmp rax, 0xfffffffffffff000; ja short 0x000000000011aff0; ret; 
0x0000000011b03a: cmp rax, 0xfffffffffffff000; ja short 0x000000000011b0b0; ret; 
0x0000000011b0eb: cmp rax, 0xfffffffffffff000; ja short 0x000000000011b0f8; ret; 
0x0000000011b11b: cmp rax, 0xfffffffffffff000; ja short 0x000000000011b128; ret; 
0x0000000011b15b: cmp rax, 0xfffffffffffff000; ja short 0x000000000011b168; ret; 
0x0000000011b23e: cmp rax, 0xfffffffffffff000; ja short 0x000000000011b250; ret; 
0x0000000011b27b: cmp rax, 0xfffffffffffff000; ja short 0x000000000011b288; ret; 
0x0000000011b2ab: cmp rax, 0xfffffffffffff000; ja short 0x000000000011b2b8; ret; 
0x0000000011b2de: cmp rax, 0xfffffffffffff000; ja short 0x000000000011b2f0; ret; 
0x0000000011b31b: cmp rax, 0xfffffffffffff000; ja short 0x000000000011b328; ret; 
0x0000000012848d: cmp rax, 0xfffffffffffff000; ja short 0x00000000001284a0; ret; 
0x0000000015c743: cmp rax, 0xfffffffffffff000; ja short 0x000000000015c750; ret; 
0x00000000041bcb: cmp rax, 0xfffffffffffff001; jae short 0x0000000000041bd4; ret; 
0x000000000421cb: cmp rax, 0xfffffffffffff001; jae short 0x00000000000421d4; ret; 
0x00000000053011: cmp rax, 0xfffffffffffff001; jae short 0x000000000005301c; xor eax, eax; ret; 
0x000000000de55b: cmp rax, 0xfffffffffffff001; jae short 0x00000000000de564; ret; 
0x000000000de7ab: cmp rax, 0xfffffffffffff001; jae short 0x00000000000de7b4; ret; 
0x000000000deb7b: cmp rax, 0xfffffffffffff001; jae short 0x00000000000deb84; ret; 
0x000000000dfb6b: cmp rax, 0xfffffffffffff001; jae short 0x00000000000dfb74; ret; 
0x000000000dfdbb: cmp rax, 0xfffffffffffff001; jae short 0x00000000000dfdc4; ret; 
0x000000000dfdeb: cmp rax, 0xfffffffffffff001; jae short 0x00000000000dfdf4; ret; 
0x000000000dfe4b: cmp rax, 0xfffffffffffff001; jae short 0x00000000000dfe54; ret; 
0x000000000dfe7b: cmp rax, 0xfffffffffffff001; jae short 0x00000000000dfe84; ret; 
0x000000000dfeab: cmp rax, 0xfffffffffffff001; jae short 0x00000000000dfeb4; ret; 
0x000000000dfedb: cmp rax, 0xfffffffffffff001; jae short 0x00000000000dfee4; ret; 
0x000000000fd17b: cmp rax, 0xfffffffffffff001; jae short 0x00000000000fd184; ret; 
0x000000000fd1ab: cmp rax, 0xfffffffffffff001; jae short 0x00000000000fd1b4; ret; 
0x000000000fd1db: cmp rax, 0xfffffffffffff001; jae short 0x00000000000fd1e4; ret; 
0x000000000fd20b: cmp rax, 0xfffffffffffff001; jae short 0x00000000000fd214; ret; 
0x000000000fd23b: cmp rax, 0xfffffffffffff001; jae short 0x00000000000fd244; ret; 
0x000000000fd26b: cmp rax, 0xfffffffffffff001; jae short 0x00000000000fd274; ret; 
0x000000000fd29b: cmp rax, 0xfffffffffffff001; jae short 0x00000000000fd2a4; ret; 
0x0000000010859b: cmp rax, 0xfffffffffffff001; jae short 0x00000000001085a4; ret; 
0x000000001085cb: cmp rax, 0xfffffffffffff001; jae short 0x00000000001085d4; ret; 
0x000000001086fb: cmp rax, 0xfffffffffffff001; jae short 0x0000000000108704; ret; 
0x0000000010872b: cmp rax, 0xfffffffffffff001; jae short 0x0000000000108734; ret; 
0x0000000010892b: cmp rax, 0xfffffffffffff001; jae short 0x0000000000108934; ret; 
0x0000000010895b: cmp rax, 0xfffffffffffff001; jae short 0x0000000000108964; ret; 
0x0000000010925b: cmp rax, 0xfffffffffffff001; jae short 0x0000000000109264; ret; 
0x0000000010957b: cmp rax, 0xfffffffffffff001; jae short 0x0000000000109584; ret; 
0x000000001095ab: cmp rax, 0xfffffffffffff001; jae short 0x00000000001095b4; ret; 
0x000000001095db: cmp rax, 0xfffffffffffff001; jae short 0x00000000001095e4; ret; 
0x0000000010960b: cmp rax, 0xfffffffffffff001; jae short 0x0000000000109614; ret; 
0x0000000010963b: cmp rax, 0xfffffffffffff001; jae short 0x0000000000109644; ret; 
0x000000001096fb: cmp rax, 0xfffffffffffff001; jae short 0x0000000000109704; ret; 
0x0000000010972b: cmp rax, 0xfffffffffffff001; jae short 0x0000000000109734; ret; 
0x0000000010a01b: cmp rax, 0xfffffffffffff001; jae short 0x000000000010a024; ret; 
0x0000000010a04b: cmp rax, 0xfffffffffffff001; jae short 0x000000000010a054; ret; 
0x0000000010a07b: cmp rax, 0xfffffffffffff001; jae short 0x000000000010a084; ret; 
0x0000000010a0ae: cmp rax, 0xfffffffffffff001; jae short 0x000000000010a0b7; ret; 
0x0000000010a86b: cmp rax, 0xfffffffffffff001; jae short 0x000000000010a874; ret; 
0x0000000010a89e: cmp rax, 0xfffffffffffff001; jae short 0x000000000010a8a7; ret; 
0x0000000010a8cb: cmp rax, 0xfffffffffffff001; jae short 0x000000000010a8d4; ret; 
0x0000000010a8fb: cmp rax, 0xfffffffffffff001; jae short 0x000000000010a904; ret; 
0x0000000010a92b: cmp rax, 0xfffffffffffff001; jae short 0x000000000010a934; ret; 
0x0000000010a95e: cmp rax, 0xfffffffffffff001; jae short 0x000000000010a967; ret; 
0x0000000010a98b: cmp rax, 0xfffffffffffff001; jae short 0x000000000010a994; ret; 
0x0000000010a9bb: cmp rax, 0xfffffffffffff001; jae short 0x000000000010a9c4; ret; 
0x0000000010a9eb: cmp rax, 0xfffffffffffff001; jae short 0x000000000010a9f4; ret; 
0x0000000010dc9e: cmp rax, 0xfffffffffffff001; jae short 0x000000000010dca7; ret; 
0x0000000010f18b: cmp rax, 0xfffffffffffff001; jae short 0x000000000010f194; ret; 
0x0000000010f31b: cmp rax, 0xfffffffffffff001; jae short 0x000000000010f324; ret; 
0x0000000010fd5b: cmp rax, 0xfffffffffffff001; jae short 0x000000000010fd64; ret; 
0x0000000010fe9b: cmp rax, 0xfffffffffffff001; jae short 0x000000000010fea4; ret; 
0x000000001100ab: cmp rax, 0xfffffffffffff001; jae short 0x00000000001100b4; ret; 
0x000000001100db: cmp rax, 0xfffffffffffff001; jae short 0x00000000001100e4; ret; 
0x0000000011019b: cmp rax, 0xfffffffffffff001; jae short 0x00000000001101a4; ret; 
0x0000000011025b: cmp rax, 0xfffffffffffff001; jae short 0x0000000000110264; ret; 
0x0000000011059b: cmp rax, 0xfffffffffffff001; jae short 0x00000000001105a4; ret; 
0x000000001105cb: cmp rax, 0xfffffffffffff001; jae short 0x00000000001105d4; ret; 
0x000000001105fb: cmp rax, 0xfffffffffffff001; jae short 0x0000000000110604; ret; 
0x0000000011367d: cmp rax, 0xfffffffffffff001; jae short 0x0000000000113686; ret; 
0x000000001138bb: cmp rax, 0xfffffffffffff001; jae short 0x00000000001138c4; ret; 
0x000000001138eb: cmp rax, 0xfffffffffffff001; jae short 0x00000000001138f4; ret; 
0x000000001139bb: cmp rax, 0xfffffffffffff001; jae short 0x00000000001139c4; ret; 
0x000000001139eb: cmp rax, 0xfffffffffffff001; jae short 0x00000000001139f4; ret; 
0x00000000113a1e: cmp rax, 0xfffffffffffff001; jae short 0x0000000000113a27; ret; 
0x00000000113a4b: cmp rax, 0xfffffffffffff001; jae short 0x0000000000113a54; ret; 
0x00000000113a7b: cmp rax, 0xfffffffffffff001; jae short 0x0000000000113a84; ret; 
0x00000000113aab: cmp rax, 0xfffffffffffff001; jae short 0x0000000000113ab4; ret; 
0x00000000113adb: cmp rax, 0xfffffffffffff001; jae short 0x0000000000113ae4; ret; 
0x00000000116e2e: cmp rax, 0xfffffffffffff001; jae short 0x0000000000116e37; ret; 
0x00000000116e5b: cmp rax, 0xfffffffffffff001; jae short 0x0000000000116e64; ret; 
0x00000000116e8b: cmp rax, 0xfffffffffffff001; jae short 0x0000000000116e94; ret; 
0x00000000116ebe: cmp rax, 0xfffffffffffff001; jae short 0x0000000000116ec7; ret; 
0x00000000116eee: cmp rax, 0xfffffffffffff001; jae short 0x0000000000116ef7; ret; 
0x00000000116f1b: cmp rax, 0xfffffffffffff001; jae short 0x0000000000116f24; ret; 
0x00000000116f4e: cmp rax, 0xfffffffffffff001; jae short 0x0000000000116f57; ret; 
0x00000000116f7b: cmp rax, 0xfffffffffffff001; jae short 0x0000000000116f84; ret; 
0x00000000116fab: cmp rax, 0xfffffffffffff001; jae short 0x0000000000116fb4; ret; 
0x00000000116fde: cmp rax, 0xfffffffffffff001; jae short 0x0000000000116fe7; ret; 
0x0000000011700b: cmp rax, 0xfffffffffffff001; jae short 0x0000000000117014; ret; 
0x0000000011703e: cmp rax, 0xfffffffffffff001; jae short 0x0000000000117047; ret; 
0x0000000011917b: cmp rax, 0xfffffffffffff001; jae short 0x0000000000119184; ret; 
0x000000001191ab: cmp rax, 0xfffffffffffff001; jae short 0x00000000001191b4; ret; 
0x000000001192bb: cmp rax, 0xfffffffffffff001; jae short 0x00000000001192c4; ret; 
0x000000001192eb: cmp rax, 0xfffffffffffff001; jae short 0x00000000001192f4; ret; 
0x0000000011942b: cmp rax, 0xfffffffffffff001; jae short 0x0000000000119434; ret; 
0x000000001194be: cmp rax, 0xfffffffffffff001; jae short 0x00000000001194c7; ret; 
0x000000001194eb: cmp rax, 0xfffffffffffff001; jae short 0x00000000001194f4; ret; 
0x00000000119bbb: cmp rax, 0xfffffffffffff001; jae short 0x0000000000119bc4; ret; 
0x00000000119beb: cmp rax, 0xfffffffffffff001; jae short 0x0000000000119bf4; ret; 
0x00000000119c2e: cmp rax, 0xfffffffffffff001; jae short 0x0000000000119c37; ret; 
0x00000000119c5b: cmp rax, 0xfffffffffffff001; jae short 0x0000000000119c64; ret; 
0x00000000119c8b: cmp rax, 0xfffffffffffff001; jae short 0x0000000000119c94; ret; 
0x00000000119cbb: cmp rax, 0xfffffffffffff001; jae short 0x0000000000119cc4; ret; 
0x00000000119ceb: cmp rax, 0xfffffffffffff001; jae short 0x0000000000119cf4; ret; 
0x00000000119d1b: cmp rax, 0xfffffffffffff001; jae short 0x0000000000119d24; ret; 
0x00000000119d4b: cmp rax, 0xfffffffffffff001; jae short 0x0000000000119d54; ret; 
0x00000000119d7e: cmp rax, 0xfffffffffffff001; jae short 0x0000000000119d87; ret; 
0x00000000119dab: cmp rax, 0xfffffffffffff001; jae short 0x0000000000119db4; ret; 
0x00000000119dde: cmp rax, 0xfffffffffffff001; jae short 0x0000000000119de7; ret; 
0x00000000119e0b: cmp rax, 0xfffffffffffff001; jae short 0x0000000000119e14; ret; 
0x00000000119e3b: cmp rax, 0xfffffffffffff001; jae short 0x0000000000119e44; ret; 
0x00000000119e6b: cmp rax, 0xfffffffffffff001; jae short 0x0000000000119e74; ret; 
0x00000000119e9b: cmp rax, 0xfffffffffffff001; jae short 0x0000000000119ea4; ret; 
0x00000000119ecb: cmp rax, 0xfffffffffffff001; jae short 0x0000000000119ed4; ret; 
0x00000000119efe: cmp rax, 0xfffffffffffff001; jae short 0x0000000000119f07; ret; 
0x00000000119f2e: cmp rax, 0xfffffffffffff001; jae short 0x0000000000119f37; ret; 
0x00000000119f5b: cmp rax, 0xfffffffffffff001; jae short 0x0000000000119f64; ret; 
0x00000000119f8b: cmp rax, 0xfffffffffffff001; jae short 0x0000000000119f94; ret; 
0x00000000119fbe: cmp rax, 0xfffffffffffff001; jae short 0x0000000000119fc7; ret; 
0x00000000119fee: cmp rax, 0xfffffffffffff001; jae short 0x0000000000119ff7; ret; 
0x0000000011a01b: cmp rax, 0xfffffffffffff001; jae short 0x000000000011a024; ret; 
0x0000000011a04b: cmp rax, 0xfffffffffffff001; jae short 0x000000000011a054; ret; 
0x0000000011a07b: cmp rax, 0xfffffffffffff001; jae short 0x000000000011a084; ret; 
0x0000000011a0ab: cmp rax, 0xfffffffffffff001; jae short 0x000000000011a0b4; ret; 
0x0000000011a0db: cmp rax, 0xfffffffffffff001; jae short 0x000000000011a0e4; ret; 
0x0000000011a10e: cmp rax, 0xfffffffffffff001; jae short 0x000000000011a117; ret; 
0x0000000011a13b: cmp rax, 0xfffffffffffff001; jae short 0x000000000011a144; ret; 
0x0000000011a16b: cmp rax, 0xfffffffffffff001; jae short 0x000000000011a174; ret; 
0x0000000011a19b: cmp rax, 0xfffffffffffff001; jae short 0x000000000011a1a4; ret; 
0x0000000011a1cb: cmp rax, 0xfffffffffffff001; jae short 0x000000000011a1d4; ret; 
0x0000000011a20b: cmp rax, 0xfffffffffffff001; jae short 0x000000000011a214; ret; 
0x0000000011a2fb: cmp rax, 0xfffffffffffff001; jae short 0x000000000011a304; ret; 
0x0000000011a3cb: cmp rax, 0xfffffffffffff001; jae short 0x000000000011a3d4; ret; 
0x0000000011a3fb: cmp rax, 0xfffffffffffff001; jae short 0x000000000011a404; ret; 
0x0000000011a42e: cmp rax, 0xfffffffffffff001; jae short 0x000000000011a437; ret; 
0x0000000011a45b: cmp rax, 0xfffffffffffff001; jae short 0x000000000011a464; ret; 
0x0000000011a8de: cmp rax, 0xfffffffffffff001; jae short 0x000000000011a8e7; ret; 
0x0000000011a90b: cmp rax, 0xfffffffffffff001; jae short 0x000000000011a914; ret; 
0x0000000011a93b: cmp rax, 0xfffffffffffff001; jae short 0x000000000011a944; ret; 
0x0000000011a96e: cmp rax, 0xfffffffffffff001; jae short 0x000000000011a977; ret; 
0x00000000099c32: cmp rax, 0xffffffffffffffff; cmove rax, rdx; add rsp, 0x8; ret; 
0x000000000de599: cmp rax, 0xffffffffffffffff; mov edx, 0x0; cmove rax, rdx; ret; 
0x00000000073078: cmp rax, [rbp-0x8d0]; jae 0x00000000000738d0; mov rdx, rbx; mov rdi, r14; call qword ptr [r12+0x38]; 
0x00000000078571: cmp rax, [rbp-0x8d8]; jae 0x00000000000791d8; mov rdx, rbx; mov rdi, r15; call qword ptr [r12+0x38]; 
0x0000000011bd28: cmp rax, [rip+0xc7689]; mov [rdi+0x10], rax; jb short 0x000000000011bd48; mov qword ptr [rip+0xc7640], 0x2; ret; 
0x0000000011bde5: cmp rax, [rip+0xcbc84]; jae short 0x000000000011bdfa; mov rdx, [rip+0xcbc83]; add word ptr [rdx+rax*2], 0x1; ret; 
0x00000000085a6e: cmp rax, rbx; jae 0x0000000000086140; lea rsi, [rsp+0x30]; mov rdi, r15; call qword ptr [r14+0x90]; 
0x000000000cb346: cmp rax, rcx; ja short 0x00000000000cb360; sub rdi, 0x10; add rax, rdi; ret; 
0x0000000008495d: cmp rax, rcx; jae short 0x0000000000084965; mov r8d, [rax]; mov eax, r8d; ret; 
0x000000000770fe: cmp rax, rcx; jbe 0x0000000000077210; movsxd rdx, r13d; mov rdi, rbx; call qword ptr [r14+0x38]; 
0x0000000007cb9f: cmp rax, rcx; jbe 0x000000000007cca0; movsxd rdx, ebp; mov rdi, rbx; call qword ptr [r14+0x38]; 
0x0000000007e64e: cmp rax, rcx; jbe 0x000000000007e750; mov rsi, rsp; mov rdi, rbp; call qword ptr [rbx+0x90]; 
0x0000000007e7c0: cmp rax, rcx; jbe 0x000000000007e920; xor esi, esi; mov rdi, rbp; call qword ptr [rbx+0x10]; 
0x00000000080e55: cmp rax, rcx; jbe 0x0000000000080ef0; mov rdx, rbx; mov rsi, r12; call qword ptr [r14+0x38]; 
0x000000000860fb: cmp rax, rcx; jbe 0x0000000000086228; xor edx, edx; mov rdi, r15; call qword ptr [rbx+0x80]; 
0x0000000008698d: cmp rax, rcx; jbe 0x0000000000086a70; mov edx, 0x1; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x000000000879ec: cmp rax, rcx; jbe 0x0000000000087b80; mov rdi, rbx; call qword ptr [r13+0x60]; 
0x0000000008935c: cmp rax, rcx; jbe 0x00000000000894e0; mov rdi, rbx; call qword ptr [r13+0x60]; 
0x0000000008b2a3: cmp rax, rcx; jbe 0x000000000008b350; xor edx, edx; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x0000000008c40c: cmp rax, rcx; jbe 0x000000000008c500; mov rdi, rbx; call qword ptr [r12+0x88]; 
0x0000000008e108: cmp rax, rcx; jbe 0x000000000008e198; mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rbx+0x18]; 
0x0000000008e2e0: cmp rax, rcx; jbe 0x000000000008e378; mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rbx+0x18]; 
0x0000000008eb45: cmp rax, rcx; jbe 0x000000000008ec18; mov rdi, rbx; call qword ptr [r13+0x60]; 
0x000000000719ea: cmp rax, rcx; jbe short 0x0000000000071a50; movsxd r12, r12d; mov rdx, r12; call qword ptr [r13+0x38]; 
0x000000000772c9: cmp rax, rcx; jbe short 0x0000000000077348; movsxd rbx, ebx; mov rdx, rbx; call qword ptr [r13+0x38]; 
0x0000000007ed4b: cmp rax, rcx; jbe short 0x000000000007eda8; mov rdi, rbx; call qword ptr [rbp+0x60]; 
0x000000000817ec: cmp rax, rcx; jbe short 0x0000000000081864; mov rdi, rbx; call qword ptr [rbp+0x68]; 
0x00000000083aeb: cmp rax, rcx; jbe short 0x0000000000083b28; mov rdi, rbx; call qword ptr [rbp+0x20]; 
0x00000000084630: cmp rax, rcx; jbe short 0x0000000000084660; mov rdi, rbx; call qword ptr [rbp+0x30]; 
0x000000000846ce: cmp rax, rcx; jbe short 0x00000000000846e0; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp+0x30]; 
0x000000000886aa: cmp rax, rcx; jbe short 0x0000000000088700; xor esi, esi; mov rdi, rbp; call qword ptr [r13+0x10]; 
0x0000000008a4fc: cmp rax, rcx; jbe short 0x000000000008a520; call qword ptr [rbx+0x60]; 
0x0000000008a73a: cmp rax, rcx; jbe short 0x000000000008a798; mov rdx, r12; mov rsi, r13; call qword ptr [r14+0x38]; 
0x0000000008a95b: cmp rax, rcx; jbe short 0x000000000008a9c0; mov edx, 0x1; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x0000000008c56c: cmp rax, rcx; jbe short 0x000000000008c5a8; mov rdi, rbp; call qword ptr [rbx+0x88]; 
0x0000000008dec5: cmp rax, rcx; jbe short 0x000000000008df28; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp+0x18]; 
0x0000000008e435: cmp rax, rcx; jbe short 0x000000000008e4a0; mov rdi, rbx; call qword ptr [rbp+0x68]; 
0x0000000008e4eb: cmp rax, rcx; jbe short 0x000000000008e518; mov rdi, rbx; call qword ptr [rbp+0x20]; 
0x0000000008ef6b: cmp rax, rcx; jbe short 0x000000000008efa0; mov rdi, rbx; call qword ptr [rbp+0x30]; 
0x0000000008effe: cmp rax, rcx; jbe short 0x000000000008f020; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp+0x30]; 
0x0000000008fab0: cmp rax, rcx; jbe short 0x000000000008fb10; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [r12+0x18]; 
0x0000000008aa0b: cmp rax, rdi; jbe short 0x000000000008aa30; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x000000000cb27e: cmp rax, rdx; ja 0x00000000000cb360; add rax, rdi; add rax, rcx; ret; 
0x0000000008ff8e: cmp rax, rdx; jae short 0x000000000008ffb8; movzx eax, byte ptr [rax]; ret; 
0x0000000014cf2c: cmp rax, rdx; je 0x000000000014cfd0; pop rbx; ret; 
0x0000000014cffc: cmp rax, rdx; je 0x000000000014d0a0; sub rax, 0xffffffffffffff80; pop rbx; ret; 
0x0000000014d0cc: cmp rax, rdx; je 0x000000000014d170; add rax, 0xa0; pop rbx; ret; 
0x0000000014d19c: cmp rax, rdx; je 0x000000000014d240; add rax, 0xa8; pop rbx; ret; 
0x000000000e0ab2: cmp rax, rdx; mov edx, 0x100; mov eax, 0x20; cmove rax, rdx; ret; 
0x000000000e0ab3: cmp rax, rdx; mov edx, 0x100; mov eax, 0x20; cmove rax, rdx; ret; 
0x000000000386f4: cmp rax, rdx; mov rdx, 0xffffffffffffffff; cmove rax, rdx; ret; 
0x00000000084709: cmp rax, rsi; ja short 0x0000000000084700; lea eax, [rdx+rdi]; ret; 
0x0000000008f049: cmp rax, rsi; ja short 0x000000000008f040; lea eax, [rdx+rdi]; ret; 
0x0000000012118c: cmp rax, rsi; jb short 0x00000000001211a0; mov eax, 0x1; ret; 
0x0000000008f8bd: cmp rbp, rax; jbe 0x000000000008f9a0; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [r15+0x18]; 
0x00000000044b48: cmp rbx, r12; jae short 0x0000000000044b5b; nop [rax]; call qword ptr [rbx]; 
0x0000000008abef: cmp rbx, rax; jbe 0x000000000008ad28; mov rsi, rsp; mov rdi, rbp; call qword ptr [r15+0x90]; 
0x0000000008bec5: cmp rbx, rax; jbe 0x000000000008bff8; mov rsi, rsp; mov rdi, rbp; call qword ptr [r13+0x90]; 
0x0000000008c0e1: cmp rbx, rax; jbe 0x000000000008c2e0; mov rsi, rsp; mov rdi, rbp; call qword ptr [r12+0x90]; 
0x000000001070ab: cmp rbx, rax; pop rbx; setl al; ret; 
0x00000000191ba3: cmp rbx, rbp; jae short 0x0000000000191bbb; nop [rax+rax]; call qword ptr [rbx]; 
0x00000000115ae3: cmp rbx, rdi; jae short 0x0000000000115b08; mov rsi, r12; mov rdi, r15; call r14; 
0x00000000083bfd: cmp rbx, rdx; jbe 0x0000000000083d90; mov esi, r12d; mov rdi, r14; call qword ptr [rax+0x18]; 
0x0000000008b4a2: cmp rbx, rdx; jbe 0x000000000008b710; lea rsi, [rsp+0x20]; mov rdi, rbp; call qword ptr [rax+0x90]; 
0x0000000009e37c: cmp rcx, 0x5; je short 0x000000000009e386; xor byte ptr [rax+0x6], 0x2a; mov rax, r8; ret; 
0x00000000053cff: cmp rcx, 0xfffffffffffffff8; jne short 0x0000000000053cf0; mov rax, rdx; ret; 
0x00000000159715: cmp rcx, [rax+0x28]; jae short 0x0000000000159700; mov eax, 0x1; ret; 
0x00000000187bbe: cmp rcx, rax; jne 0x00000000001885f3; xor eax, eax; ret; 
0x000000001891ee: cmp rcx, rax; jne 0x0000000000189433; xor eax, eax; ret; 
0x000000001885ca: cmp rcx, rax; jne short 0x00000000001885f3; xor eax, eax; ret; 
0x0000000018940a: cmp rcx, rax; jne short 0x0000000000189433; xor eax, eax; ret; 
0x00000000053c93: cmp rcx, rax; sbb eax, eax; and eax, 0x2; sub eax, 0x1; ret; 
0x00000000136773: cmp rcx, rdi; jae short 0x0000000000136783; mov eax, 0xffffffff; ret; 
0x0000000011aed7: cmp rcx, rdx; mov edx, 0x0; cmovb rax, rdx; ret; 
0x000000001296c4: cmp rdi, 0x3ff; ja short 0x00000000001296d5; mov rax, rdi; sar rax, 0x6; ret; 
0x00000000136b24: cmp rdi, 0xb; mov edx, 0x29; mov eax, 0x104; cmovne eax, edx; ret; 
0x000000000464a4: cmp rdi, r8; jb short 0x0000000000046485; xor eax, eax; ret; 
0x000000000b7edc: cmp rdi, r9; jb 0x00000000000b8048; mov rcx, rdx; rep movsb [rdi], [rsi]; ret; 
0x000000001851c7: cmp rdi, r9; jb 0x0000000000185395; mov rcx, rdx; rep movsb [rdi], [rsi]; ret; 
0x00000000189f52: cmp rdi, r9; jb 0x000000000018a190; mov rcx, rdx; rep movsb [rdi], [rsi]; ret; 
0x0000000010f23d: cmp rdi, rax; ja short 0x000000000010f268; xor eax, eax; ret; 
0x00000000116526: cmp rdi, rax; jne short 0x0000000000116558; mov eax, 0x88; syscall; 
0x000000000b7e4a: cmp rdi, rdx; jb short 0x00000000000b7e52; rep movsb [rdi], [rsi]; ret; 
0x00000000117095: cmp rdi, rdx; jne short 0x0000000000117088; mov rax, [rax+0x8]; ret; 
0x00000000107d18: cmp rdi, rsi; ja short 0x0000000000107d08; mov eax, r8d; ret; 
0x00000000091346: cmp rdi, rsi; sete al; ret; 
0x000000000e09e0: cmp rdx, 0x11954; mov eax, 0x7f; mov edx, 0x7d00; cmove rax, rdx; ret; 
0x000000000e0a33: cmp rdx, 0x137f; mov edx, 0x7f; cmovne rax, rdx; ret; 
0x000000000e0c0d: cmp rdx, 0x1badface; setne al; ret; 
0x000000000e0c28: cmp rdx, 0x1cd1; setne al; ret; 
0x000000000b8212: cmp rdx, 0x20; ja 0x00000000000b82ac; movdqu [rdi+rdx-0x10], xmm0; movdqu [rdi], xmm0; ret; 
0x000000000b8292: cmp rdx, 0x20; ja short 0x00000000000b82a3; movdqu [rdi+rdx-0x10], xmm0; movdqu [rdi], xmm0; ret; 
0x000000000e0a0e: cmp rdx, 0x2468; jne short 0x00000000000e0a33; mov eax, 0xfffa; ret; 
0x000000000e0bf5: cmp rdx, 0x5346544e; setne al; ret; 
0x000000000e0a1d: cmp rdx, 0x54190100; mov eax, 0x7f; mov edx, 0x7d00; cmove rax, rdx; ret; 
0x000000000e0994: cmp rdx, 0x58465342; jne short 0x00000000000e09a0; ret; 
0x000000000da194: cmp rdx, 0x7fffffff; mov eax, 0x7fffffff; cmova rdx, rax; mov eax, 0xd9; syscall; 
0x000000000e0bd9: cmp rdx, 0xadf5; setne al; ret; 
0x000000000e09c6: cmp rdx, 0xbd00bd0; mov eax, 0x7f; mov edx, 0xfde8; cmove rax, rdx; ret; 
0x00000000083f43: cmp rdx, [rax+0x18]; jbe short 0x0000000000083f68; mov rax, [rax+0xe0]; mov esi, 0xffffffff; call qword ptr [rax+0x18]; 
0x0000000017e1c4: cmp rdx, rax; jbe short 0x000000000017e230; add rax, rdi; vzeroupper; ret; 
0x00000000185c74: cmp rdx, rax; jbe short 0x0000000000185ce0; add rax, rdi; vzeroupper; ret; 
0x000000000e09a6: cmp rdx, rax; jne short 0x00000000000e0a1d; mov eax, 0x7d00; ret; 
0x00000000108486: cmp rdx, rax; jne short 0x00000000001084b8; mov eax, 0x85; syscall; 
0x000000001366e0: cmp rdx, rax; sbb eax, eax; ret; 
0x0000000008af98: cmp rdx, rbx; jae 0x000000000008b2d0; xor edx, edx; mov rdi, rbp; call qword ptr [rax+0x80]; 
0x0000000008af99: cmp rdx, rbx; jae 0x000000000008b2d0; xor edx, edx; mov rdi, rbp; call qword ptr [rax+0x80]; 
0x0000000008ae37: cmp rdx, rbx; jae 0x000000000008b308; lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax+0x90]; 
0x0000000008ae38: cmp rdx, rbx; jae 0x000000000008b308; lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax+0x90]; 
0x00000000128484: cmp rdx, rcx; ja short 0x00000000001284b4; xor eax, eax; syscall; 
0x00000000059855: cmp rdx, rcx; jae short 0x000000000005983c; mov rax, r8; ret; 
0x0000000010de75: cmp rdx, rcx; je short 0x000000000010de80; ret; 
0x000000000b831d: cmp rdx, rcx; jne short 0x00000000000b8307; rep ret; 
0x000000001856b5: cmp rdx, rcx; jne short 0x000000000018569b; vzeroupper; ret; 
0x0000000018a578: cmp rdx, rcx; jne short 0x000000000018a556; vzeroupper; ret; 
0x000000000907a1: cmp rdx, rdi; setae al; ret; 
0x00000000091362: cmp rsi, 0x7fffffff; mov esi, 0x7fffffff; cmovbe rsi, r8; syscall; 
0x000000000fd2f7: cmp rsi, 0x7fffffff; mov esi, 0x7fffffff; mov eax, 0xcc; cmovbe rsi, r8; syscall; 
0x00000000143ec1: cmp rsi, [rdx+0x28]; ja short 0x0000000000143eb0; mov [rdx+0x20], rsi; ret; 
0x0000000009929d: cmp rsi, [rip+0x14dbe4]; jae short 0x0000000000099319; lea rax, [rax-0x8]; ret; 
0x00000000156f59: cmp si, 0x3; ja short 0x0000000000156f70; cmp dx, cx; sete al; ret; 
0x00000000181c00: cmp sil, [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x0000000012329e: cmp sil, cl; cmove eax, edx; ret; 
0x0000000010f8a6: cmpsb [rsi], [rdi]; adc eax, edi; jmp qword ptr [rcx+rax*2-0x75]; 
0x000000000326b2: cmpsb [rsi], [rdi]; add [rax], eax; add [rcx-0x73], cl; add cl, [rax+0x39]; ret far; 
0x0000000008bbf6: cmpsb [rsi], [rdi]; add [rax], eax; add [rsi-0x1], bh; mov rdi, rbp; call qword ptr [rax+0x18]; 
0x0000000009d07d: cmpsb [rsi], [rdi]; add [rax], eax; cmove rax, rdx; ret; 
0x0000000009d782: cmpsb [rsi], [rdi]; add [rax], eax; lea rax, [rip+0x1a714]; cmove rax, rdx; ret; 
0x00000000046421: cmpsb [rsi], [rdi]; add al, 0x0; mov rax, [rsp+0x8]; add rsp, 0x28; ret; 
0x00000000188049: cmpsb [rsi], [rdi]; add eax, 0xc0310000; ret; 
0x000000000442d6: cmpsb [rsi], [rdi]; and esi, edi; dec dword ptr [rax-0x77]; ret; 
0x0000000017d65c: cmpsb [rsi], [rdi]; call qword ptr [rax-0x5e1f00d]; 
0x0000000009bf2d: cmpsb [rsi], [rdi]; clc; call far fword ptr [rbx+0x44]; 
0x0000000015a9a6: cmpsb [rsi], [rdi]; in eax, dx; cld; jmp qword ptr [rsi+0xf]; 
0x00000000052786: cmpsb [rsi], [rdi]; jrcxz 0x000000000005278c; add cl, ch; paddd mm7, mm7; call qword ptr [rax+0x587c031]; 
0x0000000004d8c6: cmpsb [rsi], [rdi]; nop; std; jmp qword ptr [rsi+0xf]; 
0x0000000013e5fc: cmpsb [rsi], [rdi]; or al, [rax]; ror rdi, 0x11; xor rdi, fs:[0x30]; call rax; 
0x0000000013be5d: cmpsb [rsi], [rdi]; out dx, al; dec dword ptr [rax+0x39]; ret; 
0x0000000011bf96: cmpsb [rsi], [rdi]; pop rbx; bnd jmp qword ptr [rsi+0xf]; 
0x0000000014f08c: cmpsb [rsi], [rdi]; std; call qword ptr [rax-0x5e1f00d]; 
0x0000000009d789: cmpsd [rsi], [rdi]; add [rax], eax; cmove rax, rdx; ret; 
0x000000001637e5: cmpsd [rsi], [rdi]; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000092820: cmpsd [rsi], [rdi]; add rsp, 0x8; ret; 
0x000000000b0510: cmpsd [rsi], [rdi]; and al, 0x0; add [rax-0x7b], cl; ror byte ptr [rdi], 0x85; ret; 
0x0000000003bd0e: cmpsd [rsi], [rdi]; and eax, 0xafe90017; idiv edi; jmp qword ptr [rsi+0xf]; 
0x0000000017d3ec: cmpsd [rsi], [rdi]; call qword ptr [rax-0x5e1f00d]; 
0x00000000176a65: cmpsd [rsi], [rdi]; idiv bh; jmp qword ptr [rsi+0xf]; 
0x0000000016c75d: cmpsd [rsi], [rdi]; mov byte ptr [rbx], 0x0; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000014720e: cmpsd [rsi], [rdi]; mov rax, [rsp+0x10]; mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x18]; 
0x000000001279c9: cmpsd [rsi], [rdi]; mov rax, r9; ret; 
0x000000001679e5: cmpsd [rsi], [rdi]; or [rip+0x14634900], al; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000009d25b: cmpsd [rsi], [rdi]; or al, 0x0; cmovne rax, rdx; ret; 
0x00000000108708: cmpsd [rsi], [rdi]; or eax, 0x64d8f700; mov [rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000003b18d: cmpsd [rsi], [rdi]; sbb al, [rax]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000093142: cmpxchg [rip+0x150a57], edx; lea rax, [rip+0x150a50]; add rsp, 0x10; pop rbp; ret; 
0x0000000008fea8: cmpxchg [rip+0x1567c1], edx; mov [rip+0x1567c2], rbx; add dword ptr [rip+0x1567b7], 0x1; pop rbx; ret; 
0x000000000454f7: cqo; idiv rsi; ret; 
0x000000000454b7: cqo; xor rax, rdx; sub rax, rdx; ret; 
0x0000000014d3c0: cvtdq2ps xmm3, [rbp+0x41]; pop rsp; ret; 
0x00000000041eb6: cwde; add [rax], al; add [rbp+0x41], bl; pop rsp; ret; 
0x0000000005141f: cwde; add [rax], al; add [rcx+0x1], cl; ret; 
0x00000000108165: cwde; add [rax], eax; add [rcx], dh; shl bh, 0xc2; jmp rsi; 
0x000000000f4a45: cwde; add [rax], eax; add al, ch; sbb bl, dh; jmp qword ptr [rsi+0xf]; 
0x0000000013ff0e: cwde; add [rax], eax; mov edi, [r15]; call qword ptr [rsp+0x70]; 
0x0000000013fe77: cwde; add [rax], eax; mov edi, [r15]; call qword ptr [rsp+0x70]; 
0x0000000015980d: cwde; add eax, [rax]; add [rdx+0x2], ch; call qword ptr [rax+0x270]; 
0x0000000015985e: cwde; add eax, [rax]; add [rdx], ch; call qword ptr [rax+0x270]; 
0x000000000ecdcc: cwde; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000186a8b: cwde; bsr eax, eax; lea rax, [rdi+rax-0x20]; vzeroupper; ret; 
0x00000000062932: cwde; idiv bh; jmp qword ptr [rsi+0x2e]; 
0x00000000090ec5: cwde; mov [rbx+0x10], rax; xor eax, eax; pop rbx; ret; 
0x000000001512b8: cwde; mov [rsi], rax; mov [rdi+0x18], rdx; mov eax, r8d; ret; 
0x00000000126218: cwde; movdqu xmm7, [rbx-0x18]; mov dword ptr [rbp-0x80], 0x0; movups [rbp-0x78], xmm7; call rcx; 
0x000000000d57fb: cwde; nop; add [rax], eax; add cl, ch; ret far; 
0x00000000109588: cwde; or eax, 0x64d8f700; mov [rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000012eb7b: cwde; or eax, [rax]; syscall; 
0x000000000b929b: cwde; pop rbx; pop rbp; pop r12; ret; 
0x0000000005cda3: cwde; sbb [rax], al; syscall; 
0x0000000014feb1: cwde; std; jmp qword ptr [rsi+0x66]; 
0x00000000164bf4: cwde; sub eax, 0x63490005; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160486: data16 ret far; 
0x00000000026637: data64 ret far; 
0x0000000009c4de: dec bh; stc; jmp qword ptr [rsi+0xf]; 
0x0000000018a1df: dec byte ptr [rax+0x6f]; add [rdx-0xf], esp; dec byte ptr [rax+0x6f]; jmp qword ptr [r10-0xf]; 
0x0000000018a1e5: dec byte ptr [rax+0x6f]; jmp qword ptr [r10-0xf]; 
0x00000000189b76: dec byte ptr [rax+0x6f]; pop rcx; jmp qword ptr [rdx-0x2f]; 
0x0000000018a247: dec byte ptr [rax+0x7f]; jg short 0x000000000018a24f; vmovdqu64 [r11], zmm8; vzeroupper; ret; 
0x0000000018a3d1: dec byte ptr [rax+0x7f]; jg short 0x000000000018a3d9; vmovdqu64 [r11], zmm8; vzeroupper; ret; 
0x0000000018a071: dec byte ptr [rax+0x7f]; jl short 0x000000000018a08d; cld; vzeroupper; ret; 
0x0000000018a181: dec byte ptr [rax+0x7f]; std; vmovdqu64 [r11], zmm4; vzeroupper; ret; 
0x000000000454d8: dec byte ptr [rax-0x3f]; loop 0x00000000000454fd; or rax, rdx; ret; 
0x0000000015973d: dec byte ptr [rax-0x75]; cmp al, 0x24; mov rax, [rax+0x268]; jmp rax; 
0x0000000007a7bf: dec byte ptr [rax-0x77]; out dx, eax; call qword ptr [rbx+0x38]; 
0x000000000cc469: dec byte ptr [rax-0x77]; out dx, eax; call rbx; 
0x0000000018dfa6: dec byte ptr [rax-0x77]; ret far; 
0x00000000114d50: dec byte ptr [rbp-0x75]; pop rdx; or [rcx-0xa], al; ret; 
0x00000000063799: dec byte ptr [rbx-0x5ff7b]; jmp qword ptr [rcx+rcx*4+0x2]; 
0x00000000115056: dec byte ptr [rcx+0x9]; ret far; 
0x0000000013303a: dec byte ptr [rcx+rcx*4-0x19]; call rbp; 
0x00000000042dda: dec byte ptr [rcx+rcx*4-0x19]; mov rdx, r14; call rbp; 
0x00000000073857: dec byte ptr [rcx+rcx*4-0x9]; mov [rbp-0x8f5], r9b; mov [rbp-0x900], r8b; call rax; 
0x00000000028579: dec byte ptr [rcx-0x77]; ret; 
0x0000000010e32a: dec byte ptr [rcx]; je short 0x000000000010e358; mov eax, 0x48; syscall; 
0x0000000010e3b9: dec byte ptr [rcx]; je short 0x000000000010e3e8; mov eax, 0x48; syscall; 
0x0000000009b53f: dec byte ptr [rdi]; adc [rbx+0x38], eax; movsxd rdi, esi; mov [rbx], rdi; call rcx; 
0x000000000b7f24: dec byte ptr [rdi]; mov bh, 0x36; mov [rdi+rdx-0x2], cx; mov [rdi], si; ret; 
0x00000000184d91: dec byte ptr [rdx-0x73]; add al, 0x7; vzeroupper; ret; 
0x00000000187ec2: dec dword ptr [r15]; mov dh, 0x4e; jmp far fword ptr [rcx]; 
0x00000000036169: dec dword ptr [r15]; mov dh, 0x53; add [rax-0x7d], ecx; ret; 
0x00000000187c75: dec dword ptr [r15]; mov dh, 0x56; jmp far fword ptr [rcx]; 
0x000000000bf80d: dec dword ptr [r8+0x63]; ret far; 
0x0000000009462c: dec dword ptr [r9-0x7b]; ret; 
0x000000000758f2: dec dword ptr [rax+0x1]; fimul st, word ptr [rax-0x77]; sar dword ptr [rdx+0x1], cl; jmp rsi; 
0x000000000755b1: dec dword ptr [rax+0x1]; fimul st, word ptr [rax-0x77]; sti; jmp rsi; 
0x00000000075b36: dec dword ptr [rax+0x1]; fimul st, word ptr [rax-0x77]; sti; mov r13d, 0x1; jmp rsi; 
0x00000000050579: dec dword ptr [rax+0x1]; ret; 
0x00000000059183: dec dword ptr [rax+0x21]; enter 0x948, 0xd0; mov [rsp-0x10], rax; movdqa xmm0, [rsp-0x18]; ret; 
0x0000000002ca97: dec dword ptr [rax+0x29]; ret far; 
0x000000000648bc: dec dword ptr [rax+0x29]; ret; 
0x0000000008495c: dec dword ptr [rax+0x39]; enter 0x373, 0x44; mov eax, [rax]; mov eax, r8d; ret; 
0x0000000006650b: dec dword ptr [rax+0x39]; enter 0xf48, 0x4e; fmul st, dword ptr [rax+0x1]; ret; 
0x00000000053f92: dec dword ptr [rax+0x39]; ret far; 
0x0000000003f173: dec dword ptr [rax+0x39]; ret; 
0x0000000006211d: dec dword ptr [rax+0x63]; add al, 0x81; add rax, rcx; notrack jmp rax; 
0x00000000072c33: dec dword ptr [rax+0x63]; add al, 0x87; add rax, rdx; jmp rax; 
0x000000000fbb81: dec dword ptr [rax+0x63]; add al, 0xba; add rax, rdx; notrack jmp rax; 
0x0000000011bbe4: dec dword ptr [rax+0x63]; fisttp dword ptr [rax-0x77], st; sbb eax, 0xc7791; pop rbx; ret; 
0x0000000007b32f: dec dword ptr [rax+0x63]; or al, 0x8e; add rcx, rdi; jmp rcx; 
0x000000000bf80e: dec dword ptr [rax+0x63]; ret far; 
0x00000000035c78: dec dword ptr [rax+0x63]; ret; 
0x000000000ade99: dec dword ptr [rax+0xf]; mov ebp, 0xf80148c6; ret; 
0x0000000004239f: dec dword ptr [rax-0x2d]; ror byte ptr [rax+0x21], 0x7; xor eax, eax; ret; 
0x0000000004d4e7: dec dword ptr [rax-0x39]; ret; 
0x00000000028fe7: dec dword ptr [rax-0x3f]; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x00000000118fed: dec dword ptr [rax-0x3f]; loopne 0x0000000000119012; and rax, rdi; or rax, rsi; ret; 
0x0000000006a5ae: dec dword ptr [rax-0x73]; adc eax, 0x13c756; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000028877: dec dword ptr [rax-0x73]; adc eax, 0x180b41; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000014c049: dec dword ptr [rax-0x73]; adc eax, 0x389f; call qword ptr [rax]; 
0x000000000d06a5: dec dword ptr [rax-0x73]; adc eax, 0xd91a7; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000014b7f4: dec dword ptr [rax-0x73]; adc eax, 0xffffa314; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x000000000e3ddf: dec dword ptr [rax-0x73]; add bl, [r11+0x5d]; pop r12; ret; 
0x00000000032711: dec dword ptr [rax-0x73]; add cl, [rax+0x39]; ret; 
0x000000000a50dd: dec dword ptr [rax-0x73]; add eax, 0x13c9db; mov rax, [rax+rdi*8]; ret; 
0x000000000a50fd: dec dword ptr [rax-0x73]; add eax, 0x13cbdb; mov rax, [rax+rdi*8]; ret; 
0x0000000007cd30: dec dword ptr [rax-0x73]; add eax, 0x164948; mov rax, [rax+rdi*8]; ret; 
0x0000000011ae91: dec dword ptr [rax-0x73]; add eax, 0x91667; mov eax, [rax+rdi*4]; ret; 
0x00000000127754: dec dword ptr [rax-0x73]; add eax, 0xfff90714; cmove rax, rdx; ret; 
0x00000000127684: dec dword ptr [rax-0x73]; add eax, 0xfff90804; cmove rax, rdx; ret; 
0x000000001275b4: dec dword ptr [rax-0x73]; add eax, 0xfff908d4; cmove rax, rdx; ret; 
0x000000001277c8: dec dword ptr [rax-0x73]; add eax, 0xfff90a10; cmovne rax, rdx; ret; 
0x00000000052863: dec dword ptr [rax-0x73]; cmp eax, 0x193d5d; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000002bb6b: dec dword ptr [rax-0x73]; cmp eax, 0x1b9b29; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000014d1f5: dec dword ptr [rax-0x73]; cmp eax, 0x9bce3; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000014d125: dec dword ptr [rax-0x73]; cmp eax, 0x9bdb3; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000014d055: dec dword ptr [rax-0x73]; cmp eax, 0x9be83; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000014cf85: dec dword ptr [rax-0x73]; cmp eax, 0x9bf53; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000014cecd: dec dword ptr [rax-0x73]; cmp eax, 0x9c00b; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000014147f: dec dword ptr [rax-0x73]; cmp eax, 0xa77f9; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000013bacb: dec dword ptr [rax-0x73]; cmp eax, 0xace79; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000133409: dec dword ptr [rax-0x73]; cmp eax, 0xb516b; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000126dbd: dec dword ptr [rax-0x73]; cmp eax, 0xc10e3; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000100ae9: dec dword ptr [rax-0x73]; cmp eax, 0xe6ad3; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000007d4e3: dec dword ptr [rax-0x73]; lea rdx, [rbx+0x34]; mov esi, 0x1; mov rdi, rbx; call rax; 
0x000000000e3cdf: dec dword ptr [rax-0x73]; or [r11+0x5d], bl; pop r12; ret; 
0x000000000f7cbe: dec dword ptr [rax-0x73]; or eax, 0xb366e; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x0000000008e5f9: dec dword ptr [rax-0x73]; pop rsi; add [rdi], ecx; mov dh, 0x36; call qword ptr [rax+0x18]; 
0x0000000015fe76: dec dword ptr [rax-0x73]; push rdx; sar byte ptr [rsi], 0x41; jmp rcx; 
0x0000000017254a: dec dword ptr [rax-0x75]; add [rax-0x77], ecx; add cl, [rax-0x77]; clc; ret; 
0x0000000011a4fe: dec dword ptr [rax-0x75]; add al, 0x24; add rsp, 0x20; pop rbp; ret; 
0x00000000106d02: dec dword ptr [rax-0x75]; add al, 0x24; add rsp, 0x28; ret; 
0x0000000011a5c4: dec dword ptr [rax-0x75]; add al, 0x24; add rsp, 0x30; pop rbp; ret; 
0x0000000009b9c3: dec dword ptr [rax-0x75]; add eax, 0x14747d; mov dword ptr fs:[rax], 0xc; xor eax, eax; ret; 
0x0000000009b850: dec dword ptr [rax-0x75]; add eax, 0x1476d8; call qword ptr [rax]; 
0x00000000028cd3: dec dword ptr [rax-0x75]; add eax, 0x1bdadd; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000015a5bb: dec dword ptr [rax-0x75]; add eax, 0x8894d; mov [rax], bl; pop rbx; ret; 
0x00000000113e9c: dec dword ptr [rax-0x75]; add eax, 0xcefa4; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000014acf2: dec dword ptr [rax-0x75]; and al, 0x48; mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x18]; 
0x0000000014909a: dec dword ptr [rax-0x75]; and al, 0x58; mov rdi, r12; call qword ptr [rax+0x20]; 
0x000000000394a4: dec dword ptr [rax-0x75]; and al, 0x8; add rsp, 0x18; ret; 
0x00000000108d00: dec dword ptr [rax-0x75]; and al, 0x8; add rsp, 0x28; ret; 
0x0000000010dd46: dec dword ptr [rax-0x75]; and al, 0x8; add rsp, 0x30; pop rbp; ret; 
0x0000000011b09f: dec dword ptr [rax-0x75]; and al, 0x8; add rsp, 0x38; ret; 
0x00000000124f95: dec dword ptr [rax-0x75]; cmp [rax-0x77], cl; ret; 
0x0000000014002b: dec dword ptr [rax-0x75]; jl short 0x0000000000140054; jo short 0x000000000014001a; sbb dl, [rdi-0xceffff]; call qword ptr [rsp+0x70]; 
0x00000000149e24: dec dword ptr [rax-0x75]; jo short 0x0000000000149db3; imul ecx, [rax+0xf], 0xffffffcd; call qword ptr [rax+0x18]; 
0x000000000e332c: dec dword ptr [rax-0x75]; mov ebp, 0xfffffb40; lea rsi, [rbp-0x450]; call qword ptr [rbx+0x40]; 
0x000000001430e9: dec dword ptr [rax-0x75]; or [r14+0x8], r15b; mov rdi, rbp; call qword ptr [rax+0x30]; 
0x000000001423fc: dec dword ptr [rax-0x75]; or [r8-0x77], r9b; out dx, eax; call qword ptr [rax+0x20]; 
0x00000000142433: dec dword ptr [rax-0x75]; or [r9+rcx*4-0xa], r8b; mov rdi, rbp; call qword ptr [rax+0x28]; 
0x00000000047f7b: dec dword ptr [rax-0x75]; push rbp; add [rax-0x39], cl; ret; 
0x000000000d87da: dec dword ptr [rax-0x75]; ret; 
0x000000001509d8: dec dword ptr [rax-0x77]; add al, 0x24; mov rax, [rbp+0x8]; call qword ptr [rax+0x8]; 
0x000000001333d1: dec dword ptr [rax-0x77]; add eax, 0xb6047; add rsp, 0x8; ret; 
0x0000000011261c: dec dword ptr [rax-0x77]; add eax, 0xd516c; add rsp, 0x8; ret; 
0x0000000009a1ab: dec dword ptr [rax-0x77]; add ebx, [rbx+0x5d]; pop r12; ret; 
0x00000000094ca4: dec dword ptr [rax-0x77]; and al, 0x8; call rax; 
0x0000000013fab1: dec dword ptr [rax-0x77]; and al, 0x8; call rbp; 
0x000000001850bf: dec dword ptr [rax-0x77]; clc; vzeroupper; ret; 
0x0000000004803f: dec dword ptr [rax-0x77]; fimul st, word ptr [rax+0xf]; mov esi, 0x83480143; ret; 
0x0000000008bbfe: dec dword ptr [rax-0x77]; out dx, eax; call qword ptr [rax+0x18]; 
0x0000000008e115: dec dword ptr [rax-0x77]; out dx, eax; call qword ptr [rbx+0x18]; 
0x00000000044638: dec dword ptr [rax-0x77]; pop rbp; mov eax, 0xfffd97e9; jmp qword ptr [rbx+rcx*4+0x4]; 
0x0000000004a4d7: dec dword ptr [rax-0x77]; ret far; 
0x0000000002b45f: dec dword ptr [rax-0x77]; ret; 
0x0000000019095b: dec dword ptr [rax-0x77]; rol dword ptr [rbp+0x31], cl; ror byte ptr [rax+0x9], cl; ret far; 
0x0000000019097f: dec dword ptr [rax-0x77]; ror dword ptr [rax+0x9], cl; ret far; 
0x00000000109b74: dec dword ptr [rax-0x77]; ror dword ptr [rax-0x73], 0x40; inc esi; jmp far fword ptr [r15]; 
0x00000000090d92: dec dword ptr [rax-0x77]; sub [r8-0x7b], cl; shl byte ptr [rsp+rax+0x31], 0xc0; pop rbx; ret; 
0x00000000045392: dec dword ptr [rax-0x77]; sub [rax-0x77], cl; ret; 
0x00000000077b2f: dec dword ptr [rax-0x77]; test eax, edi; idiv bh; jmp qword ptr [rax+rcx*2-0x75]; 
0x000000000d87e6: dec dword ptr [rax-0x7b]; ror byte ptr [rdi], 0x84; jmp rax; 
0x0000000007f19e: dec dword ptr [rax-0x7b]; ror byte ptr [rdi], 0x84; mov dword ptr [rax], 0x89480000; ret; 
0x00000000105f23: dec dword ptr [rax-0x7b]; ror byte ptr [rdi], 0x84; ret far; 
0x00000000105f22: dec dword ptr [rax-0x7b]; ror byte ptr [rdi], 0x84; ret far; 
0x0000000003572d: dec dword ptr [rax-0x7b]; ror byte ptr [rdi], 0x84; ret; 
0x00000000176a5f: dec dword ptr [rax-0x7b]; ror byte ptr [rdi], 0x85; cmpsd [rsi], [rdi]; idiv bh; jmp qword ptr [rsi+0xf]; 
0x00000000176a19: dec dword ptr [rax-0x7b]; ror byte ptr [rdi], 0x85; in eax, dx; idiv bh; jmp qword ptr [rsi+0xf]; 
0x0000000014cefe: dec dword ptr [rax-0x7b]; shl byte ptr [rcx+rax*4+0x64], 0x48; mov [rbx], eax; pop rbx; ret; 
0x000000000a3e84: dec dword ptr [rax-0x7d]; clc; add cl, [rdi]; xchg al, cl; ret far; 
0x00000000032924: dec dword ptr [rax-0x7d]; mov dword ptr [rax+rcx*2], 0x820ffa39; ret; 
0x0000000014d267: dec dword ptr [rax-0x7d]; mov eax, 0xe0; add [rax-0x77], cl; ret; 
0x000000001270e3: dec dword ptr [rax-0x7d]; ret; 
0x0000000003c087: dec dword ptr [rax-0x7d]; ret; 
0x00000000116769: dec dword ptr [rax-0x7f]; ret; 
0x0000000009262d: dec dword ptr [rax-0x9]; fisttp dword ptr [rax+0x21], st; ret; 
0x000000000b6f34: dec dword ptr [rbp+rcx*4+0x1d]; enter 0xf23, 0x0; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6e93: dec dword ptr [rbp+rcx*4+0x1d]; imul esp, [rdi+rcx], 0xc634b00; or dword ptr [rcx-0x73], 0xc; or edi, [rsi]; jmp rcx; 
0x000000000b4408: dec dword ptr [rbp+rcx*4+0x1d]; str [r11+0x63]; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000084e43: dec dword ptr [rbp+rcx*4+0x2c]; and dword ptr [rsi+0x48], 0xf; outsb dx, [rsi]; ret; 
0x0000000014b7fb: dec dword ptr [rbp+rcx*4+0x4c]; and al, 0x14; call qword ptr [rax]; 
0x0000000003d44b: dec dword ptr [rbp-0x73]; je short 0x000000000003d456; add [rax-0x9], ecx; ror byte ptr [rax+0x1], 0x1; ret; 
0x0000000003d3a3: dec dword ptr [rbp-0x73]; jl short 0x000000000003d3af; add [rax-0x9], ecx; ror byte ptr [rax+0x1], 0x1; ret; 
0x0000000012478f: dec dword ptr [rbp-0x75]; push rbp; sub [rax-0x77], cl; ret; 
0x0000000018d0df: dec dword ptr [rbp-0x76b23fb6]; ret far; 
0x00000000063796: dec dword ptr [rbp-0x77]; dec byte ptr [rbx-0x5ff7b]; jmp qword ptr [rcx+rcx*4+0x2]; 
0x0000000006cfd8: dec dword ptr [rbp-0x77]; imul ecx; call rcx; 
0x0000000006b8fb: dec dword ptr [rbp-0x77]; test dword ptr [rax-0x75], 0xfffa8085; dec dword ptr [rbx-0x51f73]; jmp qword ptr [rcx+rcx*4+0x8]; 
0x000000000c0c60: dec dword ptr [rbp-0x7cbe00bd]; call far fword ptr [rax]; 
0x0000000010950c: dec dword ptr [rbx+0x410c247c]; mov eax, eax; mov eax, 0x3; syscall; 
0x0000000011012c: dec dword ptr [rbx+0x410c247c]; mov eax, eax; mov eax, 0x4a; syscall; 
0x000000001101ec: dec dword ptr [rbx+0x410c247c]; mov eax, eax; mov eax, 0x4b; syscall; 
0x00000000119398: dec dword ptr [rbx+0x48042444]; add esp, 0x20; pop rbp; ret; 
0x0000000011ad8b: dec dword ptr [rbx+0x48042444]; add esp, 0x28; ret; 
0x0000000011984e: dec dword ptr [rbx+0x48082444]; add esp, 0x18; ret; 
0x0000000010d682: dec dword ptr [rbx+0x48082444]; add esp, 0x28; ret; 
0x000000000de882: dec dword ptr [rbx+0x480c2444]; add esp, 0x18; ret; 
0x000000000de75c: dec dword ptr [rbx+0x480c2444]; add esp, 0x28; ret; 
0x0000000010ff3e: dec dword ptr [rbx+0x480c2444]; add esp, 0x38; ret; 
0x00000000109690: dec dword ptr [rbx+0x480c2474]; mov edi, [rsp]; mov r8d, eax; mov eax, 0x55; syscall; 
0x000000000de6a2: dec dword ptr [rbx+0x48102444]; add esp, 0x28; ret; 
0x0000000010e1d3: dec dword ptr [rbx+0x48182444]; add esp, 0x28; ret; 
0x0000000014df76: dec dword ptr [rbx+0x61e8007d]; mov ch, 0xfb; jmp qword ptr [rsi-0x7d]; 
0x000000000ba994: dec dword ptr [rbx+0xeb8087b]; add [rax], al; add [rax-0x7d], cl; ret; 
0x0000000011b59a: dec dword ptr [rbx+rcx*4+0x15]; out dx, al; ret; 
0x0000000015794a: dec dword ptr [rbx+rcx*4+0x2d]; div byte ptr [rax+rcx-0x7600cf00]; ret; 
0x000000000d866c: dec dword ptr [rbx+rcx*4+0x6c]; ret; 
0x00000000155c1d: dec dword ptr [rbx-0x17b7b]; jmp qword ptr [rcx+rcx*4+0x3]; 
0x000000000e18e7: dec dword ptr [rbx-0x2ff7b]; jmp far fword ptr [rcx+0x810]; 
0x0000000006b905: dec dword ptr [rbx-0x51f73]; jmp qword ptr [rcx+rcx*4+0x8]; 
0x0000000006c34b: dec dword ptr [rbx-0x53f63]; jmp qword ptr [rbx+rcx*4]; 
0x00000000067241: dec dword ptr [rbx-0x6577b]; jmp qword ptr [rsi+0xf]; 
0x000000000babcf: dec dword ptr [rbx-0x7cb7fb85]; ret; 
0x000000000798eb: dec dword ptr [rbx-0x8a77b]; inc dword ptr [rbp+0x60880fc0]; in eax, 0xff; inc dword ptr [rcx]; ret; 
0x00000000079f86: dec dword ptr [rbx-0x8a77b]; inc dword ptr [rbp-0x3a77f040]; fdivp st(7), st; inc dword ptr [rcx]; ret; 
0x00000000072c80: dec dword ptr [rbx-0x8af63]; jmp far fword ptr [rcx]; 
0x00000000079c21: dec dword ptr [rbx-0x8e37b]; dec dword ptr [rcx-0x77]; ret far; 
0x000000000d709f: dec dword ptr [rbx-0xdf73]; call far fword ptr [rax+0x5a]; 
0x000000000d8155: dec dword ptr [rbx-0xfb7b]; inc dword ptr [rcx+0xf]; ret; 
0x00000000136b26: dec dword ptr [rbx]; mov edx, 0x29; mov eax, 0x104; cmovne eax, edx; ret; 
0x000000000de868: dec dword ptr [rcx+0x22b8c7]; add [rax], al; syscall; 
0x000000000e951b: dec dword ptr [rcx+0x29]; ret; 
0x00000000093324: dec dword ptr [rcx+0x31342444]; shr al, 0xa0; leave; cld; jmp qword ptr [rbx+rcx*4+0x4]; 
0x000000000310a7: dec dword ptr [rcx+0x3948fc57]; ret; 
0x0000000003105f: dec dword ptr [rcx+0x3948fc72]; ret; 
0x000000000ec545: dec dword ptr [rcx+0x39]; ret far; 
0x0000000002f3ba: dec dword ptr [rcx+0x39]; ret; 
0x000000001592cc: dec dword ptr [rcx+0x49082444]; lea edi, [rsp+0x9b0]; call qword ptr [r12+0xf90]; 
0x000000000a4e98: dec dword ptr [rcx+0x54b60f17]; and al, 0xf4; mov [rdi+0x4], dl; ret; 
0x000000000a4eb0: dec dword ptr [rcx+0x54b70f17]; and al, 0xec; mov [rdi+0x4], dx; ret; 
0x00000000107947: dec dword ptr [rcx+0x75b8c6]; add [rax], al; syscall; 
0x00000000107970: dec dword ptr [rcx+0x77b8c6]; add [rax], al; syscall; 
0x0000000013708a: dec dword ptr [rcx+r9*4+0x10]; lea eax, [r9+r8+0x2]; pop rbx; ret; 
0x0000000013708b: dec dword ptr [rcx+rcx*4+0x10]; lea eax, [r9+r8+0x2]; pop rbx; ret; 
0x00000000073a22: dec dword ptr [rcx+rcx*4-0x16]; mov rdi, r14; call qword ptr [r12+0x38]; 
0x00000000073465: dec dword ptr [rcx+rcx*4-0x16]; mov rdi, r14; call qword ptr [rbx+0x38]; 
0x000000000e1e05: dec dword ptr [rcx+rcx*4-0x1]; call qword ptr [r12+0x38]; 
0x000000000fba15: dec dword ptr [rcx+rcx*4-0x1]; call qword ptr [r12+0x40]; 
0x0000000014f66b: dec dword ptr [rcx+rcx*4-0x1]; xor eax, eax; add r13, rbx; call rbp; 
0x00000000107ab8: dec dword ptr [rcx+rcx*4-0x1a]; lea rdi, [rip+0xa695c]; mov rdx, [rax+0xb0]; call qword ptr [rax+0x88]; 
0x00000000151400: dec dword ptr [rcx+rcx*4-0x1a]; mov rdi, rbx; call rcx; 
0x00000000113c07: dec dword ptr [rcx+rcx*4-0x20]; pop r12; ret; 
0x00000000080d72: dec dword ptr [rcx+rcx*4-0x20]; pop rbp; pop r12; pop r13; ret; 
0x0000000009c519: dec dword ptr [rcx+rcx*4-0x20]; pop rbx; pop rbp; pop r12; ret; 
0x0000000010b7ae: dec dword ptr [rcx+rcx*4-0x32]; call qword ptr [rbp-0xf0]; 
0x0000000011b714: dec dword ptr [rcx+rcx*4-0x32]; mov edi, r12d; mov eax, ebx; syscall; 
0x00000000085803: dec dword ptr [rcx+rcx*4-0x39]; call qword ptr [rax+0x18]; 
0x0000000005b575: dec dword ptr [rcx+rcx*4-0x3e]; mov rsi, r14; mov rdi, r12; mov [rbp-0xe8], r8; call rax; 
0x00000000069ee4: dec dword ptr [rcx+rcx*4-0x6]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000125b2a: dec dword ptr [rcx+rcx*4-0x7b]; cmp dh, 0xff; jmp qword ptr [rax+rcx*2-0x75]; 
0x0000000009b895: dec dword ptr [rcx+rcx*4-0x9]; call rax; 
0x0000000014f7b2: dec dword ptr [rcx+rcx*4-0xa]; mov rdi, r12; call r13; 
0x000000000e2d11: dec dword ptr [rcx+rcx*4-0xa]; mov rdi, r8; call qword ptr [rbx+0x40]; 
0x0000000015152e: dec dword ptr [rcx+rcx*4-0xa]; mov rdi, rbp; call r12; 
0x00000000061e94: dec dword ptr [rcx+rcx*4-0xe]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000147d37: dec dword ptr [rcx-0x17f7dbbc]; movd ecx, mm7; jmp qword ptr [rsi+0xf]; 
0x000000001247d0: dec dword ptr [rcx-0x3d76b721]; mov rsi, r8; call qword ptr [r10+0x28]; 
0x00000000157090: dec dword ptr [rcx-0x4cfa7639]; ret; 
0x00000000067af9: dec dword ptr [rcx-0x53f7b]; inc dword ptr [rcx-0x77]; ret; 
0x00000000062ea2: dec dword ptr [rcx-0x61f43]; dec dword ptr [rax+0x39]; ret; 
0x000000000d9311: dec dword ptr [rcx-0x72b2bfbd]; je short 0x00000000000d933d; and [rax-0x7d], cl; ret; 
0x00000000031376: dec dword ptr [rcx-0x73]; add cl, [rax+0x39]; ret far; 
0x000000000ed801: dec dword ptr [rcx-0x75]; adc [r8+0x39], r9b; ret far; 
0x000000000ed800: dec dword ptr [rcx-0x75]; adc [r8+0x39], r9b; ret far; 
0x000000000feeda: dec dword ptr [rcx-0x75]; adc al, 0x24; mov rax, [rbp-0x1e0]; call rax; 
0x0000000014284b: dec dword ptr [rcx-0x75]; and al, 0x38; mov rdi, r12; call qword ptr [rax+0x20]; 
0x00000000190d7a: dec dword ptr [rcx-0x75]; jge short 0x0000000000190d8f; add rdi, rbp; call r12; 
0x000000000ff0d2: dec dword ptr [rcx-0x75]; or al, 0x24; call rax; 
0x000000000f883e: dec dword ptr [rcx-0x75]; push 0x441f0f; add [rax-0x77], cl; ret; 
0x00000000063c8d: dec dword ptr [rcx-0x77]; fisttp qword ptr [rax-0x77], st; ret; 
0x000000000e6bfc: dec dword ptr [rcx-0x77]; fmul st, qword ptr [rdi]; mov dh, 0x43; add [rax-0x7d], ecx; ret; 
0x0000000003124e: dec dword ptr [rcx-0x77]; ret far; 
0x000000000f0262: dec dword ptr [rcx-0x77]; ret; 
0x00000000058d20: dec dword ptr [rcx-0x77]; ret; 
0x000000000a3728: dec dword ptr [rcx-0x77]; ror dword ptr [rcx+0x29], cl; ret; 
0x0000000009462d: dec dword ptr [rcx-0x7b]; ret; 
0x0000000006cc55: dec dword ptr [rcx-0x7d]; ret; 
0x00000000092203: dec dword ptr [rcx-0x9]; ret; 
0x000000000397d3: dec dword ptr [rcx-0xab73]; jmp qword ptr [rax+rcx*2-0x75]; 
0x000000001240b3: dec dword ptr [rcx]; ret; 
0x0000000011cd07: dec dword ptr [rcx]; setbe r8b; mov eax, r8d; ret; 
0x000000000b42dd: dec dword ptr [rdi+rcx]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000118f76: dec dword ptr [rdi]; add [rax], al; and eax, 0xfffff000; or eax, edx; ret; 
0x000000000b86c7: dec dword ptr [rdi]; add [rax], al; lea rax, [rbx+0x1]; pop rbx; ret; 
0x00000000041104: dec dword ptr [rdi]; mov [rbp-0x7f000000], es; sti; push rax; ret; 
0x00000000094c03: dec dword ptr [rdi]; mov [rdx+0x48000001], cl; mov eax, [rip+0x14e17f]; call qword ptr [rax]; 
0x00000000038d9a: dec dword ptr [rdi]; mov bh, 0x4; js short 0x0000000000038d23; loopne 0x0000000000038da3; ret; 
0x00000000038dba: dec dword ptr [rdi]; mov bh, 0x4; js short 0x0000000000038d43; loopne 0x0000000000038dca; ret; 
0x00000000038dfa: dec dword ptr [rdi]; mov bh, 0x4; js short 0x0000000000038d83; loopne 0x0000000000038e04; ret; 
0x00000000038e9a: dec dword ptr [rdi]; mov bh, 0x4; js short 0x0000000000038e23; loopne 0x0000000000038ea6; ret; 
0x0000000011d445: dec dword ptr [rdi]; mov bh, 0x4; js short 0x000000000011d3ce; loopne 0x000000000011d455; ret; 
0x0000000011d545: dec dword ptr [rdi]; mov bh, 0x4; js short 0x000000000011d4ce; loopne 0x000000000011d54e; ret; 
0x0000000011d5c5: dec dword ptr [rdi]; mov bh, 0x4; js short 0x000000000011d54e; loopne 0x000000000011d5cf; ret; 
0x0000000011d855: dec dword ptr [rdi]; mov bh, 0x4; js short 0x000000000011d7de; loopne 0x000000000011d861; ret; 
0x0000000008e58d: dec dword ptr [rdi]; mov dh, 0x36; call qword ptr [rax+0x18]; 
0x00000000187ec3: dec dword ptr [rdi]; mov dh, 0x4e; jmp far fword ptr [rcx]; 
0x0000000003616a: dec dword ptr [rdi]; mov dh, 0x53; add [rax-0x7d], ecx; ret; 
0x00000000187c76: dec dword ptr [rdi]; mov dh, 0x56; jmp far fword ptr [rcx]; 
0x000000000f7983: dec dword ptr [rdi]; mov dh, 0xd2; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x0000000017e743: dec dword ptr [rdi]; mov ebp, 0xf80148c0; add rax, r8; vzeroupper; ret; 
0x000000000a8a65: dec dword ptr [rdi]; mov ebp, 0xf80148c0; add rax, rsi; ret; 
0x0000000005104d: dec dword ptr [rdi]; mov esi, 0x89410257; ret; 
0x0000000009d438: dec dword ptr [rdi]; mov esp, 0xc2440fc7; add eax, 0x1; ret; 
0x0000000007307e: dec dword ptr [rdi]; or dword ptr [rbx+0x8], 0x0; add [rax-0x77], cl; fimul st, dword ptr [rcx+rcx*4-0x9]; call qword ptr [r12+0x38]; 
0x000000000d7154: dec dword ptr [rdi]; ret; 
0x00000000078577: dec dword ptr [rdi]; sbb dword ptr [rdx+0xc], 0x0; add [rax-0x77], cl; fimul st, dword ptr [rcx+rcx*4-0x1]; call qword ptr [r12+0x38]; 
0x000000001850b9: dec dword ptr [rdi]; test [rax+0x48fffffc], ah; mov eax, edi; vzeroupper; ret; 
0x00000000114bc4: dec dword ptr [rdi]; test [rbp+0x49000000], edx; mov edi, [rbp]; call rbx; 
0x000000001159c4: dec dword ptr [rdi]; test [rbp+0x49000000], esi; mov edi, [rbp]; call rbx; 
0x000000000e2d7a: dec dword ptr [rdi]; test [rdi-0x800000d], edi; test [rbx+rdi*8-0x1], ecx; call qword ptr [rax]; 
0x0000000006ef89: dec dword ptr [rdi]; test [rdi], al; sub [rax], al; add [rax-0x7d], cl; ret; 
0x000000000a2c19: dec dword ptr [rdi]; test [rdi], cl; sbb al, [rax]; add bh, dh; ret; 
0x00000000114b8f: dec dword ptr [rdi]; test [rdx+0x49000000], ecx; mov edi, [rbp]; call rbx; 
0x000000000e1f16: dec dword ptr [rdi]; test [rdx], dh; adc al, 0x0; add [rax-0x77], cl; ret far; 
0x00000000114b5c: dec dword ptr [rdi]; test [rip+0x49000001], ebx; mov edi, [rbp]; call rbx; 
0x0000000018beef: dec dword ptr [rdi]; test [rsi+0x1], ebp; add [rax], al; xor eax, eax; ret; 
0x000000000a2c25: dec dword ptr [rdi]; test bh, ch; sbb [rax], eax; add bh, dh; ret; 
0x00000000134257: dec dword ptr [rdi]; test dl, bl; add [rax], al; add [rcx-0xa], al; ret; 
0x000000001009c2: dec dword ptr [rdi]; xchg ebp, eax; ret; 
0x0000000005e682: dec dword ptr [rdi]; xchg ebp, eax; ror byte ptr [rcx-0x16efdbbc], 0x62; idiv bh; call qword ptr [rax+0x23ffbe8]; 
0x000000000d8fe7: dec dword ptr [rdi]; xchg esp, eax; ret; 
0x0000000005dcf5: dec dword ptr [rdi]; xchg esp, eax; shr cl, 0x66; idiv bh; jmp qword ptr [rsi-0x70]; 
0x00000000097ac0: dec dword ptr [rdx-0x73]; jl short 0x0000000000097af2; and [rcx], dh; imul al; ret; 
0x00000000028dc7: dec dword ptr [rip+0x1f0f6600]; add [rax], r8b; endbr64; lea rax, [rip+0x18932d]; ret; 
0x000000000d6d28: div ah; jmp far fword ptr [rcx]; 
0x0000000015794e: div byte ptr [rax+rcx-0x7600cf00]; ret; 
0x00000000034805: div byte ptr [rax+rcx-0x7d]; inc byte ptr [rbx]; je short 0x0000000000034810; ret; 
0x00000000151525: div byte ptr [rax+rdi+0x31]; sar byte ptr [rdx-0x1], 0x4c; mov esi, esi; mov rdi, rbp; call r12; 
0x0000000009106a: div byte ptr [rbp+0x13]; and dword ptr [rdi+0x8], 0xfffffffe; xor eax, eax; ret; 
0x00000000055c19: div byte ptr [rbp+0x2c]; mov dword ptr [rdx], 0x0; mov eax, 0x1; ret; 
0x000000000cce96: div byte ptr [rbp+0x2f]; mov eax, 0x60; syscall; 
0x000000000ae056: div byte ptr [rbp+0x4]; xor rax, rax; ret; 
0x000000001157a5: div byte ptr [rbp+0x8]; add rsp, 0x8; pop rbp; pop r12; ret; 
0x00000000115853: div byte ptr [rbp+0xa]; pop rbp; pop r12; pop r13; ret; 
0x00000000041509: div byte ptr [rbp+0xc]; mov [rbx+0x40], esi; xor eax, eax; pop rbx; ret; 
0x000000000e1546: div byte ptr [rbp+rdx-0x17]; loop 0x00000000000e14f8; sti; jmp qword ptr [rsi-0x70]; 
0x000000000fb156: div byte ptr [rbp+rdx-0x17]; rcl byte ptr [rax], cl; cli; jmp qword ptr [rsi-0x70]; 
0x00000000055c32: div byte ptr [rbp-0x13]; cmp cx, 0x7fff; jne short 0x0000000000055c1c; mov eax, 0x1; ret; 
0x0000000010e6ce: div byte ptr [rbp-0x25]; or eax, 0x80000000; mov [rdi], eax; xor eax, eax; ret; 
0x000000000421ac: div byte ptr [rcx]; call far fword ptr [rbx-0x17]; 
0x0000000002ad55: div byte ptr [rcx]; jmp qword ptr [rsi+0xf]; 
0x0000000015a6b6: div byte ptr [rdi+rax-0x17]; xor bl, [rbp-0x11]; jmp qword ptr [rsi-0x70]; 
0x000000000d6722: div byte ptr [rdi]; or eax, 0x48ca8900; movsxd eax, [rsi+rdx*4]; add rax, rsi; notrack jmp rax; 
0x00000000160a3c: div byte ptr [rdx+0x7]; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000010ddd9: div byte ptr [rsi-0x48]; sbb [rcx], al; add [rax], al; syscall; 
0x000000000deafc: div byte ptr [rsp+rcx-0x42]; add [rax], eax; add [rax], al; incsspq rsi; jmp rdi; 
0x00000000133e56: div dword ptr [rbp+rax-0x18]; loop 0x0000000000133e80; out dx, eax; jmp qword ptr [rbx+rcx*4+0x4]; 
0x00000000107d1a: div dword ptr [rdi-0x15]; mov eax, r8d; ret; 
0x000000001604d5: div dword ptr [rdx+0x5]; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001608ed: div dword ptr [rdx+0x7]; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000005cb85: div ecx; add r8d, eax; mov eax, r8d; ret; 
0x000000000b85bd: div ecx; mov eax, eax; ret; 
0x000000000b85a6: div esi; mov eax, eax; ret; 
0x000000000545d5: div esi; sub rcx, 0x1; jae short 0x00000000000545d0; mov rax, rdx; ret; 
0x000000001608ec: div qword ptr [rdx+0x7]; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000000545d4: div rsi; sub rcx, 0x1; jae short 0x00000000000545d0; mov rax, rdx; ret; 
0x00000000190d15: divps xmm0, [rip+0x279c8]; ret; 
0x00000000190d14: divss xmm0, [rip+0x279c8]; ret; 
0x000000000792ca: emms; jrcxz 0x0000000000079295; test eax, edx; idiv bh; call qword ptr [rax]; 
0x0000000013432a: emms; mov esp, 0xfffeafe9; jmp qword ptr [rsi+0xf]; 
0x000000001515b0: endbr64; add [rdi+0x28], edx; mov eax, 0x1; ret; 
0x000000001515a0: endbr64; add dword ptr [rdi+0x28], 0x4; mov eax, 0x1; ret; 
0x0000000008a410: endbr64; and dword ptr [rdi], 0xffffffcf; ret; 
0x000000000407d0: endbr64; andpd xmm0, [rip+0x175f14]; andpd xmm1, [rip+0x175efc]; orpd xmm0, xmm1; ret; 
0x00000000125a60: endbr64; cmp edi, 0x56; je short 0x0000000000125a70; mov eax, 0x7; ret; 
0x000000000d8e10: endbr64; cmp esi, 0x1; je short 0x00000000000d8e20; xor eax, eax; ret; 
0x00000000090d70: endbr64; cmp qword ptr [rdi+0x28], 0x0; je short 0x0000000000090d80; xor eax, eax; ret; 
0x0000000008e3f0: endbr64; cmp qword ptr [rdi+0x38], 0x0; je short 0x000000000008e400; ret; 
0x0000000009b290: endbr64; cmp qword ptr [rip+0x14bc74], 0x0; je short 0x000000000009b2a0; ret; 
0x000000000d8f60: endbr64; cmp qword ptr [rsi+0x8], 0x3b9ac9ff; ja short 0x00000000000d8f98; mov eax, 0xe3; syscall; 
0x00000000128480: endbr64; cmp rdx, rcx; ja short 0x00000000001284b4; xor eax, eax; syscall; 
0x00000000136230: endbr64; lea eax, [rdi+0x9]; and eax, 0xfffffff8; add eax, 0x10; ret; 
0x00000000028de0: endbr64; lea rax, [rip+0x186cbd]; ret; 
0x00000000028dd0: endbr64; lea rax, [rip+0x18932d]; ret; 
0x000000001072e0: endbr64; mov [rdi+0x4], esi; xor eax, eax; ret; 
0x00000000091330: endbr64; mov dword ptr [rdi], 0x0; xor eax, eax; ret; 
0x00000000108950: endbr64; mov eax, 0x102; syscall; 
0x0000000010a9b0: endbr64; mov eax, 0x107; syscall; 
0x0000000010f310: endbr64; mov eax, 0x10; syscall; 
0x0000000010a8f0: endbr64; mov eax, 0x10a; syscall; 
0x0000000011a040: endbr64; mov eax, 0x110; syscall; 
0x0000000011a0a0: endbr64; mov eax, 0x11b; syscall; 
0x00000000119a00: endbr64; mov eax, 0x11f; syscall; 
0x00000000119420: endbr64; mov eax, 0x122; syscall; 
0x00000000119d40: endbr64; mov eax, 0x123; syscall; 
0x000000001095d0: endbr64; mov eax, 0x124; syscall; 
0x00000000109630: endbr64; mov eax, 0x125; syscall; 
0x00000000119e60: endbr64; mov eax, 0x126; syscall; 
0x0000000011a0d0: endbr64; mov eax, 0x12c; syscall; 
0x00000000119b80: endbr64; mov eax, 0x131; syscall; 
0x00000000110250: endbr64; mov eax, 0x132; syscall; 
0x0000000011a130: endbr64; mov eax, 0x134; syscall; 
0x0000000011a160: endbr64; mov eax, 0x13f; syscall; 
0x0000000011a190: endbr64; mov eax, 0x14a; syscall; 
0x0000000011a1c0: endbr64; mov eax, 0x14b; syscall; 
0x00000000108e10: endbr64; mov eax, 0x15; syscall; 
0x00000000091130: endbr64; mov eax, 0x16; cmp esi, 0x2; jbe short 0x0000000000091140; ret; 
0x00000000109600: endbr64; mov eax, 0x16; syscall; 
0x000000000920d0: endbr64; mov eax, 0x18; syscall; 
0x00000000141360: endbr64; mov eax, 0x1; ret; 
0x0000000010e5f0: endbr64; mov eax, 0x1; syscall; 
0x000000000e0c60: endbr64; mov eax, 0x1; test edi, edi; js short 0x00000000000e0c70; ret; 
0x000000001139e0: endbr64; mov eax, 0x1b; syscall; 
0x000000001139b0: endbr64; mov eax, 0x1c; syscall; 
0x0000000011b270: endbr64; mov eax, 0x1e; syscall; 
0x0000000011b310: endbr64; mov eax, 0x1f; syscall; 
0x00000000109570: endbr64; mov eax, 0x20; syscall; 
0x000000001095a0: endbr64; mov eax, 0x21; syscall; 
0x000000000d01e0: endbr64; mov eax, 0x24; syscall; 
0x000000000de7a0: endbr64; mov eax, 0x25; syscall; 
0x000000000d0210: endbr64; mov eax, 0x26; syscall; 
0x000000000dfb00: endbr64; mov eax, 0x27; syscall; 
0x0000000011a930: endbr64; mov eax, 0x29; syscall; 
0x000000001436a0: endbr64; mov eax, 0x2; ret; 
0x0000000011a900: endbr64; mov eax, 0x30; syscall; 
0x0000000011a2f0: endbr64; mov eax, 0x31; syscall; 
0x0000000011a450: endbr64; mov eax, 0x32; syscall; 
0x0000000011a3f0: endbr64; mov eax, 0x33; syscall; 
0x0000000011a3c0: endbr64; mov eax, 0x34; syscall; 
0x0000000010e2c0: endbr64; mov eax, 0x3; syscall; 
0x000000000deb70: endbr64; mov eax, 0x3b; syscall; 
0x00000000041bc0: endbr64; mov eax, 0x3e; syscall; 
0x000000000de550: endbr64; mov eax, 0x3f; syscall; 
0x0000000011b150: endbr64; mov eax, 0x40; syscall; 
0x0000000011b2a0: endbr64; mov eax, 0x43; syscall; 
0x0000000011b0e0: endbr64; mov eax, 0x44; syscall; 
0x0000000011b110: endbr64; mov eax, 0x47; syscall; 
0x00000000109250: endbr64; mov eax, 0x49; syscall; 
0x00000000111be0: endbr64; mov eax, 0x4c; syscall; 
0x00000000111c10: endbr64; mov eax, 0x4d; syscall; 
0x000000001096f0: endbr64; mov eax, 0x50; syscall; 
0x00000000109720: endbr64; mov eax, 0x51; syscall; 
0x00000000060fc0: endbr64; mov eax, 0x52; syscall; 
0x00000000108920: endbr64; mov eax, 0x53; syscall; 
0x0000000010a9e0: endbr64; mov eax, 0x54; syscall; 
0x0000000010a860: endbr64; mov eax, 0x56; syscall; 
0x0000000010a980: endbr64; mov eax, 0x57; syscall; 
0x0000000010a8c0: endbr64; mov eax, 0x58; syscall; 
0x0000000010a920: endbr64; mov eax, 0x59; syscall; 
0x000000001086f0: endbr64; mov eax, 0x5a; syscall; 
0x00000000108720: endbr64; mov eax, 0x5b; syscall; 
0x0000000010a010: endbr64; mov eax, 0x5c; syscall; 
0x0000000010a040: endbr64; mov eax, 0x5d; syscall; 
0x0000000010a070: endbr64; mov eax, 0x5e; syscall; 
0x000000001086e0: endbr64; mov eax, 0x5f; syscall; 
0x0000000010ed70: endbr64; mov eax, 0x62; syscall; 
0x0000000011a010: endbr64; mov eax, 0x63; syscall; 
0x000000000de580: endbr64; mov eax, 0x64; syscall; 
0x000000000dfb20: endbr64; mov eax, 0x66; syscall; 
0x00000000119ec0: endbr64; mov eax, 0x67; syscall; 
0x000000000dfb40: endbr64; mov eax, 0x68; syscall; 
0x000000000dfb30: endbr64; mov eax, 0x6b; syscall; 
0x000000000dfb50: endbr64; mov eax, 0x6c; syscall; 
0x000000000dfde0: endbr64; mov eax, 0x6d; syscall; 
0x000000000dfb10: endbr64; mov eax, 0x6e; syscall; 
0x000000000dfe10: endbr64; mov eax, 0x6f; syscall; 
0x000000000dfe70: endbr64; mov eax, 0x70; syscall; 
0x000000000dfb60: endbr64; mov eax, 0x73; syscall; 
0x000000000dfea0: endbr64; mov eax, 0x76; syscall; 
0x000000000dfed0: endbr64; mov eax, 0x78; syscall; 
0x000000000dfdb0: endbr64; mov eax, 0x79; syscall; 
0x000000001192b0: endbr64; mov eax, 0x7a; syscall; 
0x000000001192e0: endbr64; mov eax, 0x7b; syscall; 
0x000000000dfe40: endbr64; mov eax, 0x7c; syscall; 
0x00000000119c50: endbr64; mov eax, 0x7d; syscall; 
0x00000000119c80: endbr64; mov eax, 0x7e; syscall; 
0x000000000421c0: endbr64; mov eax, 0x83; syscall; 
0x0000000011a070: endbr64; mov eax, 0x86; syscall; 
0x000000001194e0: endbr64; mov eax, 0x87; syscall; 
0x00000000108590: endbr64; mov eax, 0x89; syscall; 
0x00000000108de0: endbr64; mov eax, 0x8; syscall; 
0x000000001085c0: endbr64; mov eax, 0x8a; syscall; 
0x0000000010f140: endbr64; mov eax, 0x8c; syscall; 
0x0000000010f180: endbr64; mov eax, 0x8d; syscall; 
0x000000000fd170: endbr64; mov eax, 0x8e; syscall; 
0x000000000fd1a0: endbr64; mov eax, 0x8f; syscall; 
0x000000000fd1d0: endbr64; mov eax, 0x90; syscall; 
0x000000000fd200: endbr64; mov eax, 0x91; syscall; 
0x000000000fd260: endbr64; mov eax, 0x92; syscall; 
0x000000000fd290: endbr64; mov eax, 0x93; syscall; 
0x000000000fd2c0: endbr64; mov eax, 0x94; syscall; 
0x00000000113a40: endbr64; mov eax, 0x95; syscall; 
0x00000000113a70: endbr64; mov eax, 0x96; syscall; 
0x00000000113aa0: endbr64; mov eax, 0x97; syscall; 
0x00000000113ad0: endbr64; mov eax, 0x98; syscall; 
0x00000000110590: endbr64; mov eax, 0x99; syscall; 
0x00000000119be0: endbr64; mov eax, 0x9a; syscall; 
0x00000000119f80: endbr64; mov eax, 0x9b; syscall; 
0x00000000119bb0: endbr64; mov eax, 0x9e; syscall; 
0x000000001100d0: endbr64; mov eax, 0xa1; syscall; 
0x00000000110190: endbr64; mov eax, 0xa2; syscall; 
0x000000001100a0: endbr64; mov eax, 0xa3; syscall; 
0x00000000119250: endbr64; mov eax, 0xa6; syscall; 
0x000000001105c0: endbr64; mov eax, 0xa7; syscall; 
0x000000001105f0: endbr64; mov eax, 0xa8; syscall; 
0x000000001138e0: endbr64; mov eax, 0xa; syscall; 
0x0000000010fd50: endbr64; mov eax, 0xaa; syscall; 
0x0000000010fe90: endbr64; mov eax, 0xab; syscall; 
0x000000001191a0: endbr64; mov eax, 0xac; syscall; 
0x00000000119170: endbr64; mov eax, 0xad; syscall; 
0x00000000119cb0: endbr64; mov eax, 0xae; syscall; 
0x00000000119ce0: endbr64; mov eax, 0xb0; syscall; 
0x00000000119da0: endbr64; mov eax, 0xb1; syscall; 
0x00000000119f50: endbr64; mov eax, 0xb4; syscall; 
0x000000001138b0: endbr64; mov eax, 0xb; syscall; 
0x0000000011a1f0: endbr64; mov eax, 0xba; syscall; 
0x00000000119280: endbr64; mov eax, 0xbb; syscall; 
0x00000000116f10: endbr64; mov eax, 0xc2; syscall; 
0x00000000116f70: endbr64; mov eax, 0xc3; syscall; 
0x00000000116e50: endbr64; mov eax, 0xc4; syscall; 
0x00000000117000: endbr64; mov eax, 0xc5; syscall; 
0x00000000116fa0: endbr64; mov eax, 0xc6; syscall; 
0x00000000116e80: endbr64; mov eax, 0xc7; syscall; 
0x000000000ccd80: endbr64; mov eax, 0xc9; syscall; 
0x0000000010f220: endbr64; mov eax, 0xc; syscall; 
0x000000000fd360: endbr64; mov eax, 0xcb; syscall; 
0x00000000119d10: endbr64; mov eax, 0xd5; syscall; 
0x00000000119c10: endbr64; mov eax, 0xe4; syscall; 
0x0000000011a200: endbr64; mov eax, 0xea; syscall; 
0x00000000119e30: endbr64; mov eax, 0xfd; syscall; 
0x00000000119e00: endbr64; mov eax, 0xfe; syscall; 
0x00000000119e90: endbr64; mov eax, 0xff; syscall; 
0x0000000008e4b0: endbr64; mov eax, 0xffffffff; ret; 
0x00000000107bc0: endbr64; mov eax, [rdi+0x108]; mov [rsi], eax; xor eax, eax; ret; 
0x0000000008fb70: endbr64; mov eax, [rdi+0x10]; sub eax, [rsi+0x10]; ret; 
0x00000000107bb0: endbr64; mov eax, [rdi+0x10c]; mov [rsi], eax; xor eax, eax; ret; 
0x000000001515c0: endbr64; mov eax, [rdi+0x28]; ret; 
0x00000000090df0: endbr64; mov eax, [rdi+0x4]; mov [rsi], eax; xor eax, eax; ret; 
0x0000000010e620: endbr64; mov eax, [rdi+0x8]; and eax, 0x100f; ret; 
0x00000000089610: endbr64; mov eax, [rdi]; and eax, 0x200; ret; 
0x000000000895e0: endbr64; mov eax, [rdi]; and eax, 0x804; ret; 
0x00000000090de0: endbr64; mov eax, [rdi]; mov [rsi], eax; xor eax, eax; ret; 
0x000000000da1d0: endbr64; mov eax, [rdi]; ret; 
0x0000000008a420: endbr64; mov eax, [rdi]; shr eax, 0x4; and eax, 0x1; ret; 
0x0000000008a430: endbr64; mov eax, [rdi]; shr eax, 0x5; and eax, 0x1; ret; 
0x000000000425c0: endbr64; mov eax, [rip+0x1a0bde]; ret; 
0x000000000425b0: endbr64; mov eax, [rip+0x1a0bf2]; ret; 
0x00000000141bd0: endbr64; mov eax, [rip+0xa7126]; test eax, eax; je short 0x0000000000141be0; ret; 
0x00000000107c60: endbr64; mov eax, [rsi]; mov [rdi+0x108], eax; xor eax, eax; ret; 
0x00000000038d70: endbr64; mov eax, edi; and eax, 0x7f; ret; 
0x000000001297a0: endbr64; mov eax, edi; bswap eax; ret; 
0x000000001297b0: endbr64; mov eax, edi; rol ax, 0x8; ret; 
0x00000000108ca0: endbr64; mov eax, fs:[0x18]; test eax, eax; jne short 0x0000000000108cc0; syscall; 
0x00000000135430: endbr64; mov edi, [rdi]; mov eax, 0x3; syscall; 
0x00000000157de0: endbr64; mov edi, [rip+0x8b662]; test edi, edi; jns short 0x0000000000157df0; ret; 
0x00000000041bf0: endbr64; mov esi, 0x8; mov eax, 0x7f; syscall; 
0x0000000015cef0: endbr64; mov qword ptr [rcx], 0x0; mov eax, 0xffffffff; ret; 
0x0000000008ff40: endbr64; mov qword ptr [rip+0x156721], 0x0; mov qword ptr [rip+0x15671e], 0x0; ret; 
0x0000000010a0a0: endbr64; mov r10, rcx; mov eax, 0x104; syscall; 
0x00000000060ff0: endbr64; mov r10, rcx; mov eax, 0x108; syscall; 
0x0000000010a890: endbr64; mov r10, rcx; mov eax, 0x109; syscall; 
0x0000000010a950: endbr64; mov r10, rcx; mov eax, 0x10b; syscall; 
0x0000000010e5b0: endbr64; mov r10, rcx; mov eax, 0x11; syscall; 
0x00000000119a30: endbr64; mov r10, rcx; mov eax, 0x11e; syscall; 
0x00000000119c20: endbr64; mov r10, rcx; mov eax, 0x12d; syscall; 
0x000000001194b0: endbr64; mov r10, rcx; mov eax, 0x12e; syscall; 
0x0000000011a100: endbr64; mov r10, rcx; mov eax, 0x12f; syscall; 
0x00000000119b00: endbr64; mov r10, rcx; mov eax, 0x136; syscall; 
0x00000000119b40: endbr64; mov r10, rcx; mov eax, 0x137; syscall; 
0x00000000119f20: endbr64; mov r10, rcx; mov eax, 0x19; syscall; 
0x0000000010dc90: endbr64; mov r10, rcx; mov eax, 0x28; syscall; 
0x0000000011a960: endbr64; mov r10, rcx; mov eax, 0x35; syscall; 
0x0000000011a8d0: endbr64; mov r10, rcx; mov eax, 0x36; syscall; 
0x0000000011a420: endbr64; mov r10, rcx; mov eax, 0x37; syscall; 
0x00000000119ef0: endbr64; mov r10, rcx; mov eax, 0xa5; syscall; 
0x00000000119dd0: endbr64; mov r10, rcx; mov eax, 0xaf; syscall; 
0x00000000119fb0: endbr64; mov r10, rcx; mov eax, 0xb2; syscall; 
0x00000000119fe0: endbr64; mov r10, rcx; mov eax, 0xb3; syscall; 
0x00000000117030: endbr64; mov r10, rcx; mov eax, 0xbc; syscall; 
0x00000000116fd0: endbr64; mov r10, rcx; mov eax, 0xbd; syscall; 
0x00000000116eb0: endbr64; mov r10, rcx; mov eax, 0xbe; syscall; 
0x00000000116ee0: endbr64; mov r10, rcx; mov eax, 0xbf; syscall; 
0x00000000116f40: endbr64; mov r10, rcx; mov eax, 0xc0; syscall; 
0x00000000116e20: endbr64; mov r10, rcx; mov eax, 0xc1; syscall; 
0x00000000113a10: endbr64; mov r10, rcx; mov eax, 0xd8; syscall; 
0x0000000011b230: endbr64; mov r10, rcx; mov eax, 0xdc; syscall; 
0x00000000119d70: endbr64; mov r10, rcx; mov eax, 0xe9; syscall; 
0x0000000010dd90: endbr64; mov r10d, ecx; mov eax, 0x118; syscall; 
0x00000000108410: endbr64; mov r10d, ecx; mov eax, 0x14c; syscall; 
0x0000000010d7d0: endbr64; mov r10d, ecx; mov eax, 0xdd; syscall; 
0x000000001193e0: endbr64; mov r10d, edx; mov eax, 0x121; mov edx, 0x8; syscall; 
0x0000000008ef20: endbr64; mov rax, 0xffffffffffffffff; ret; 
0x00000000151140: endbr64; mov rax, [rdi+0x18]; sub rax, [rdi+0x20]; ret; 
0x0000000008fe60: endbr64; mov rax, [rdi+0x68]; ret; 
0x00000000083df0: endbr64; mov rax, [rdi+0xa0]; cmp qword ptr [rax+0x30], 0x0; je short 0x0000000000083e08; ret; 
0x000000000923c0: endbr64; mov rax, [rdi]; cmp rax, 0x2000000; jbe short 0x00000000000923d0; ret; 
0x00000000092100: endbr64; mov rax, [rdi]; cmp rax, 0x408; jbe short 0x0000000000092110; ret; 
0x00000000092420: endbr64; mov rax, [rdi]; cmp rax, 0xa0; jbe short 0x0000000000092430; ret; 
0x00000000092140: endbr64; mov rax, [rdi]; cmp rax, 0xffff; jbe short 0x0000000000092150; ret; 
0x00000000092160: endbr64; mov rax, [rdi]; nop; mov [rip+0x151179], rax; ret; 
0x000000000920f0: endbr64; mov rax, [rdi]; nop; mov [rip+0x151199], rax; ret; 
0x000000000920e0: endbr64; mov rax, [rdi]; nop; mov [rip+0x1511b1], rax; ret; 
0x00000000092410: endbr64; mov rax, [rdi]; nop; mov [rip+0x154a66], eax; ret; 
0x0000000008fe40: endbr64; mov rax, [rip+0x154775]; ret; 
0x00000000042410: endbr64; mov rax, [rip+0x1a0a2d]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x00000000038f60: endbr64; mov rax, [rip+0x1a9e65]; add rax, fs:[0x0]; ret; 
0x00000000038f80: endbr64; mov rax, [rip+0x1a9f3d]; add rax, fs:[0x0]; ret; 
0x00000000038fa0: endbr64; mov rax, [rip+0x1a9f55]; add rax, fs:[0x0]; ret; 
0x00000000034020: endbr64; mov rax, [rip+0x1b1685]; ret; 
0x00000000029030: endbr64; mov rax, [rip+0x1b9e0d]; add rax, fs:[0x0]; ret; 
0x0000000002a6d0: endbr64; mov rax, [rip+0x1baf95]; ret; 
0x0000000002a6c0: endbr64; mov rax, [rip+0x1baf9d]; ret; 
0x0000000015cec0: endbr64; mov rax, [rip+0x85f7d]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x0000000015cea0: endbr64; mov rax, [rip+0x85f9d]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x0000000015cd70: endbr64; mov rax, [rip+0x860cd]; mov dword ptr fs:[rax], 0x26; mov rax, 0xffffffffffffffff; ret; 
0x0000000015c870: endbr64; mov rax, [rip+0x865cd]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x0000000015c850: endbr64; mov rax, [rip+0x865ed]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x0000000015c810: endbr64; mov rax, [rip+0x8662d]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x0000000015c7f0: endbr64; mov rax, [rip+0x8664d]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x0000000015c7d0: endbr64; mov rax, [rip+0x8666d]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x0000000015c7b0: endbr64; mov rax, [rip+0x8668d]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x0000000015a850: endbr64; mov rax, [rip+0x885ed]; mov dword ptr fs:[rax], 0x26; xor eax, eax; ret; 
0x00000000159880: endbr64; mov rax, [rip+0x895ad]; jmp qword ptr [rax+0x280]; 
0x00000000156780: endbr64; mov rax, [rip+0x8c6bd]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x0000000014cdb0: endbr64; mov rax, [rip+0x95fad]; lea rdx, [rip+0x9c13e]; mov fs:[rax], rdx; ret; 
0x0000000013c020: endbr64; mov rax, [rip+0xa6fbd]; mov rax, fs:[rax]; ret; 
0x0000000013dd50: endbr64; mov rax, [rip+0xaae45]; test rax, rax; jne short 0x000000000013dd68; ret; 
0x00000000129b60: endbr64; mov rax, [rip+0xb92c5]; add rax, fs:[0x0]; ret; 
0x0000000011c970: endbr64; mov rax, [rip+0xc64bd]; mov eax, [rax+0x38]; ret; 
0x0000000011a230: endbr64; mov rax, [rip+0xc8c0d]; mov dword ptr fs:[rax], 0x26; mov rax, 0xffffffffffffffff; ret; 
0x00000000110570: endbr64; mov rax, [rip+0xd28cd]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x00000000038f10: endbr64; mov rax, [rsi+0x70]; movsxd rdi, edi; mov eax, [rax+rdi*4]; ret; 
0x00000000038f20: endbr64; mov rax, [rsi+0x78]; movsxd rdi, edi; mov eax, [rax+rdi*4]; ret; 
0x00000000091950: endbr64; mov rax, fs:[0x10]; ret; 
0x000000000454f0: endbr64; mov rax, rdi; cqo; idiv rsi; ret; 
0x0000000008fe70: endbr64; mov rax, rdi; ret; 
0x0000000015c730: endbr64; mov rdx, rsi; mov eax, 0xcb; mov esi, 0x80; syscall; 
0x0000000015c6c0: endbr64; mov rdx, rsi; mov eax, 0xcc; mov esi, 0x80; syscall; 
0x000000000cd040: endbr64; mov rsi, rdi; mov eax, 0xa4; xor edi, edi; syscall; 
0x000000000412f0: endbr64; movmskps eax, xmm0; and eax, 0x8; ret; 
0x000000001072a0: endbr64; movzx eax, word ptr [rdi]; mov [rsi], ax; xor eax, eax; ret; 
0x00000000040f00: endbr64; pand xmm1, [rip+0x175854]; pand xmm0, [rip+0x17585c]; por xmm0, xmm1; ret; 
0x00000000040a90: endbr64; pmovmskb eax, xmm0; and eax, 0x80; ret; 
0x00000000040db0: endbr64; pmovmskb eax, xmm0; and eax, 0x8; ret; 
0x000000000deae0: endbr64; pop rdi; mov eax, 0x3a; syscall; 
0x00000000028bb0: endbr64; ret; 
0x00000000119890: endbr64; test edx, edx; je short 0x00000000001198c8; mov eax, 0x145; syscall; 
0x000000000b8240: endbr64; test rdx, rdx; jne short 0x00000000000b824d; mov rax, rdi; ret; 
0x000000000ae050: endbr64; test rsi, rsi; jne short 0x00000000000ae05d; xor rax, rax; ret; 
0x000000000cb690: endbr64; test rsi, rsi; jne short 0x00000000000cb69d; xor rax, rax; ret; 
0x000000000cce90: endbr64; test rsi, rsi; jne short 0x00000000000ccec8; mov eax, 0x60; syscall; 
0x00000000038d80: endbr64; xor eax, eax; and edi, 0xffffff80; sete al; ret; 
0x00000000091340: endbr64; xor eax, eax; cmp rdi, rsi; sete al; ret; 
0x0000000008eea0: endbr64; xor eax, eax; ret; 
0x0000000010e580: endbr64; xor eax, eax; syscall; 
0x000000000895f0: endbr64; xor eax, eax; test byte ptr [rdi], 0x4; sete al; ret; 
0x00000000089600: endbr64; xor eax, eax; test byte ptr [rdi], 0x8; sete al; ret; 
0x0000000008ce40: endbr64; xor eax, eax; test rdx, rdx; jne short 0x000000000008ce50; ret; 
0x0000000011b2d0: endbr64; xor r10d, r10d; mov eax, 0x1d; syscall; 
0x00000000146df2: enter 0x0, 0x0; add al, [rax]; add [rax], al; add rdi, 0xc8; jmp rcx; 
0x00000000146e4c: enter 0x0, 0x0; call rax; 
0x00000000146dfd: enter 0x0, 0x0; jmp rcx; 
0x000000000ead00: enter 0x0, 0x0; jne 0x00000000000eac2d; ret; 
0x00000000107478: enter 0x0, 0x0; mov [rsp+0xe8], eax; mov eax, 0xe; syscall; 
0x0000000014dbe6: enter 0x0, 0x0; mov dword ptr [rsp+0xd0], 0x1; movups [rsp+0xb8], xmm5; call rax; 
0x0000000014db4a: enter 0x0, 0x0; mov dword ptr [rsp+0xd0], 0x2; movups [rsp+0xb8], xmm3; movups [rsp+0xd8], xmm0; call rax; 
0x000000001428a0: enter 0x0, 0x0; mov rdi, rbx; call qword ptr [rax+0x20]; 
0x0000000008ba24: enter 0x0, 0x0; xor edx, edx; mov rsi, rbp; mov rdi, rbx; call qword ptr [r12+0x80]; 
0x00000000148c54: enter 0x1, 0x0; add rsi, 0x38; jmp qword ptr [rax+0x18]; 
0x000000000dfbf4: enter 0x106b, 0x0; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000008dfad: enter 0x1076, 0x48; mov eax, [rbx+0x18]; add rsp, 0x10; pop rbx; jmp rax; 
0x00000000181e29: enter 0x148, 0xf8; vzeroupper; ret; 
0x000000000cb348: enter 0x1577, 0x48; sub edi, 0x10; add rax, rdi; ret; 
0x00000000040944: enter 0x175d, 0x0; mulsd xmm0, xmm1; ret; 
0x0000000003904c: enter 0x1a, 0x48; ror eax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000039f1f: enter 0x1a, 0x49; lea edi, [rbp+0x80]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000039f48: enter 0x1a, 0x4c; mov edi, esp; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000cb19d: enter 0x1b8, 0x0; add [rax], al; cmovg r8d, eax; mov eax, r8d; ret; 
0x00000000082473: enter 0x2276, 0x48; mov edx, ebx; mov rsi, r13; mov rdi, rbp; call qword ptr [r14+0x38]; 
0x0000000018c060: enter 0x275, 0x39; enter 0xc019, 0x83; fdivr st, st(7); ret; 
0x00000000190d18: enter 0x279, 0x0; ret; 
0x0000000008e4ed: enter 0x2876, 0x48; mov edi, ebx; call qword ptr [rbp+0x20]; 
0x00000000055c66: enter 0x289, 0xb8; add [rax], eax; add [rax], al; ret; 
0x00000000186b3e: enter 0x2948, 0xd0; shr rax, 0x2; vzeroupper; ret; 
0x000000001821ce: enter 0x2948, 0xd0; vzeroupper; ret; 
0x0000000017d357: enter 0x2948, 0xf8; ret; 
0x0000000004648c: enter 0x2948, 0xfe; syscall; 
0x00000000084632: enter 0x2b76, 0x48; mov edi, ebx; call qword ptr [rbp+0x30]; 
0x0000000008ef6d: enter 0x3076, 0x48; mov edi, ebx; call qword ptr [rbp+0x30]; 
0x00000000080594: enter 0x3176, 0x48; movsxd edx, ebx; mov rsi, r13; mov rdi, r15; call qword ptr [rbp+0x38]; 
0x000000000a667d: enter 0x31c3, 0xc0; ret; 
0x00000000096751: enter 0x348, 0x15; outsd dx, [rsi]; ret far; 
0x0000000008495f: enter 0x373, 0x44; mov eax, [rax]; mov eax, r8d; ret; 
0x0000000008c56e: enter 0x3776, 0x48; mov edi, ebp; call qword ptr [rbx+0x88]; 
0x00000000083aed: enter 0x3876, 0x48; mov edi, ebx; call qword ptr [rbp+0x20]; 
0x00000000053145: enter 0x3b4c, 0x10; mov eax, 0x0; jne short 0x0000000000053153; push r10; ret; 
0x0000000005361e: enter 0x3b4c, 0x10; mov eax, 0x0; jne short 0x000000000005362c; push r10; ret; 
0x00000000082390: enter 0x3d76, 0x4c; mov edx, ebp; mov rsi, rbp; mov rdi, rbx; call qword ptr [r14+0x38]; 
0x000000000773a8: enter 0x415d, 0x5c; pop r13; pop r14; ret; 
0x0000000014a66b: enter 0x4289, 0x10; mov eax, 0x1; ret; 
0x0000000014a56b: enter 0x4289, 0xc; mov eax, 0x1; ret; 
0x000000000b8764: enter 0x438d, 0x1; pop rbx; imul eax, ecx; ret; 
0x0000000008a8a0: enter 0x4576, 0x48; mov edx, ebx; mov rsi, r12; mov rdi, rbp; call qword ptr [r13+0x38]; 
0x0000000008cdef: enter 0x4676, 0x31; idiv byte ptr [rcx+0x3]; mov edx, 0x1; mov rdi, rbx; call qword ptr [r12+0x48]; 
0x00000000149d17: enter 0x4789, 0x48; mov eax, 0x1; ret; 
0x00000000149d64: enter 0x4789, 0x54; mov eax, 0x1; ret; 
0x00000000149d44: enter 0x4789, 0x58; mov eax, 0x1; ret; 
0x000000001377f4: enter 0x480f, 0xc2; ret; 
0x00000000112480: enter 0x4866, 0xf; outsb dx, [rsi]; ret; 
0x00000000121711: enter 0x4c88, 0x24; and [rax+0x411f2444], cl; call qword ptr [rsp+0x28]; 
0x000000000b54f4: enter 0x5, 0x0; ret; 
0x00000000041890: enter 0x50f, 0x48; mov edi, eax; mov eax, 0xba; syscall; 
0x000000000886ac: enter 0x5176, 0x31; test byte ptr [rax-0x77], 0xef; call qword ptr [r13+0x10]; 
0x0000000007ed4d: enter 0x5876, 0x48; mov edi, ebx; call qword ptr [rbp+0x60]; 
0x0000000008a73c: enter 0x5976, 0x4c; mov edx, esp; mov rsi, r13; call qword ptr [r14+0x38]; 
0x000000001299c0: enter 0x5d5b, 0x41; pop rsp; ret; 
0x0000000008a95d: enter 0x6076, 0xba; add [rax], eax; add [rax], al; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x000000000719ec: enter 0x6176, 0x4d; movsxd esp, esp; mov rdx, r12; call qword ptr [r13+0x38]; 
0x00000000028cdd: enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x0000000002901e: enter 0x6411, 0x48; xor eax, [0x30]; jmp rax; 
0x0000000004545a: enter 0x6411, 0x48; xor eax, [0x30]; mov fs:[rbx], rdx; mov rdi, [rbp+0x8]; call rax; 
0x00000000137ac8: enter 0x6411, 0x48; xor eax, [0x30]; mov qword ptr [rsp], 0x0; call rax; 
0x000000000d9251: enter 0x6411, 0x48; xor eax, [0x30]; pop r13; pop r14; jmp rax; 
0x0000000008c627: enter 0x6676, 0x31; idiv byte ptr [rdx+0x2]; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x0000000008e437: enter 0x6676, 0x48; mov edi, ebx; call qword ptr [rbp+0x68]; 
0x000000000fd354: enter 0x66c3, 0x2e; nop [rax+rax]; endbr64; mov eax, 0xcb; syscall; 
0x000000000817ee: enter 0x7376, 0x48; mov edi, ebx; call qword ptr [rbp+0x68]; 
0x0000000010de70: enter 0x774, 0x31; ror byte ptr [rax+0x39], 0xca; je short 0x000000000010de80; ret; 
0x000000000772cb: enter 0x7a76, 0x48; movsxd ebx, ebx; mov rdx, rbx; call qword ptr [r13+0x38]; 
0x00000000081553: enter 0x7a76, 0x4c; mov edx, esp; mov rsi, rbp; mov rdi, rbx; call qword ptr [r13+0x58]; 
0x00000000107f01: enter 0x8348, 0xc4; or [rbp+0x41], bl; pop rsp; ret; 
0x00000000140f9f: enter 0x8348, 0xea; add [rbp-0x7e], esi; ret; 
0x000000000adc03: enter 0x840f, 0xc6; add [rax], eax; add [rax+0xf], cl; mov ebp, 0xf80148c0; ret; 
0x000000000860fd: enter 0x860f, 0x24; add [rax], eax; add [rcx], dh; ror byte ptr [rcx+rcx*4-0x1], cl; call qword ptr [rbx+0x80]; 
0x0000000007e7c2: enter 0x860f, 0x57; add [rax], eax; add [rcx], dh; test byte ptr [rax-0x77], 0xef; call qword ptr [rbx+0x10]; 
0x0000000008e10a: enter 0x860f, 0x87; add [rax], al; add [rsi-0x1], bh; mov rdi, rbp; call qword ptr [rbx+0x18]; 
0x0000000008e2e2: enter 0x860f, 0x8f; add [rax], al; add [rsi-0x1], bh; mov rdi, rbp; call qword ptr [rbx+0x18]; 
0x00000000080e57: enter 0x860f, 0x92; add [rax], al; add [rax-0x77], cl; fimul st, dword ptr [rcx+rcx*4-0x1a]; call qword ptr [r14+0x38]; 
0x0000000008698f: enter 0x860f, 0xda; add [rax], al; add [rdx+0x1], bh; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x0000000005fcc6: enter 0x8907, 0x2; mov eax, 0x1; ret; 
0x0000000010ec11: enter 0x8930, 0x47; or [rax+0x100], bh; mov [rdi+0x16], ax; ret; 
0x00000000146fdc: enter 0x8941, 0x80; mov ah, 0x0; add [rax], al; mov eax, 0x1; ret; 
0x00000000146fac: enter 0x8941, 0x80; mov eax, 0xb8000000; add [rax], eax; add [rax], al; ret; 
0x00000000146f7f: enter 0x8941, 0x80; test al, 0x0; add [rax], al; mov eax, 0x1; ret; 
0x00000000040892: enter 0x8948, 0x7; subsd xmm0, xmm1; ret; 
0x00000000054476: enter 0x894c, 0x47; clc; shl r9, cl; mov [rdi-0x10], r9; ret; 
0x000000000543f6: enter 0x894c, 0x7; shl r9, cl; mov [rdi-0x8], r9; ret; 
0x00000000054510: enter 0x894c, 0x7; shr r9, cl; mov [rdi+0x8], r9; ret; 
0x000000001417af: enter 0x8b48, 0x47; cmp [rbp+rcx*4+0x6c], cl; and al, 0x68; mov rsi, r13; call qword ptr [rax+0x10]; 
0x00000000113675: enter 0x8b4c, 0x4c; and al, 0x8; syscall; 
0x00000000119208: enter 0x8b4c, 0x54; and al, 0x8; mov eax, 0x38; syscall; 
0x0000000002acbc: enter 0x8d48, 0x5; ret far; 
0x00000000084842: enter 0x8d49, 0x14; nop; mov [rax], rdx; xor eax, eax; ret; 
0x0000000004117b: enter 0x8fe8, 0xb5; adc al, 0x0; add rsp, 0x10; pop rbx; ret; 
0x00000000059186: enter 0x948, 0xd0; mov [rsp-0x10], rax; movdqa xmm0, [rsp-0x18]; ret; 
0x0000000005f0a0: enter 0x97e, 0x8b; outsd dx, [rsi]; or [rcx-0x77], al; ret; 
0x000000001512b6: enter 0x9848, 0x48; mov [rsi], eax; mov [rdi+0x18], rdx; mov eax, r8d; ret; 
0x0000000011655c: enter 0xc, 0x64; mov dword ptr [rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000018c064: enter 0xc019, 0x83; fdivr st, st(7); ret; 
0x000000000442d1: enter 0xc031, 0xe8; cmpsb [rsi], [rdi]; and esi, edi; dec dword ptr [rax-0x77]; ret; 
0x00000000146f68: enter 0xc089, 0x48; mov [rdx], eax; mov eax, 0x1; ret; 
0x00000000149d04: enter 0xc089, 0x49; mov [rax], eax; mov eax, 0x1; ret; 
0x000000000cbac2: enter 0xc148, 0xe8; add al, [rdx+rdx*8-0x2e77ea8c]; and cl, 0xf; je short 0x00000000000cbaf0; ret; 
0x00000000106a34: enter 0xc748, 0x4; rol byte ptr [rax], 0x1; add [rax], al; add [rbp-0x76b7febd], cl; ret; 
0x00000000055bc1: enter 0xd348, 0xe2; mov [rdi], rdx; mov [rsi], eax; mov eax, 0x1; ret; 
0x000000000b6f38: enter 0xf23, 0x0; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000006650e: enter 0xf48, 0x4e; fmul st, dword ptr [rax+0x1]; ret; 
0x0000000002bf25: enter 0xf49, 0x4f; ret; 
0x000000000ad819: enter 0xf66, 0xeb; ret; 
0x0000000011a884: enter 0xf761, 0xff; mov rax, [rsp+0x8]; add rsp, 0x30; pop rbp; ret; 
0x000000001372d9: enter 0xf789, 0x89; ret far; 
0x00000000040b3e: enter 0xf8c1, 0x1f; not eax; and eax, edx; ret; 
0x0000000017d9a0: enter 0xf8c5, 0x77; ret; 
0x0000000018861a: enter 0xfc3, 0x1f; add [rip+0xff], spl; and ecx, 0xff; sub eax, ecx; ret; 
0x0000000017e8f7: enter 0xfc3, 0x1f; add byte ptr [rax], 0x0; add [rax], al; xor eax, eax; ret; 
0x00000000149c7f: enter 0xff3e, 0xe0; nop [rax+rax]; xor eax, eax; ret; 
0x000000000d9a4f: enter 0xfff4, 0x66; nop [rax+rax]; pop rbp; ret; 
0x00000000078d16: enter 0xfff6, 0xff; mov [rbp-0x930], r11b; call rax; 
0x0000000017e9a4: enter 0xfffe, 0xff; ret; 
0x000000000a4715: enter 0xffff, 0x89; ret; 
0x0000000014db65: fadd st, dword ptr [rax]; add [rax], al; call rax; 
0x000000000284d1: fadd st, dword ptr [rax]; add [rax], al; jne short 0x000000000002849b; ret; 
0x0000000007f15f: fadd st, dword ptr [rax]; add [rax], al; mov rdx, [rdi+0xa0]; mov [rdx+0xe0], rcx; ret; 
0x00000000050d4a: fadd st, dword ptr [rax]; add [rax], al; ret; 
0x00000000113a18: fadd st, dword ptr [rax]; add [rax], al; syscall; 
0x000000001420e8: fadd st, dword ptr [rax]; add [rbp+rcx*4+0x4c], cl; and al, 0x20; call qword ptr [rax]; 
0x0000000010aa36: fadd st, dword ptr [rax]; ret; 
0x000000000608e8: fadd st, dword ptr [rbp-0x7b]; shl byte ptr [rbp+0x2], 0x5b; ret; 
0x000000001525c6: fadd st, dword ptr [rbx+0x14807e0]; ret; 
0x000000000d2639: fadd st, dword ptr [rbx-0x76b6f840]; ret; 
0x000000001542b1: fadd st, dword ptr [rbx-0x76b7f820]; ret; 
0x00000000176404: fadd st, dword ptr [rbx]; add [rax], al; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x000000000e817b: fadd st, dword ptr [rcx+0x5c]; pop r13; pop r14; pop r15; ret; 
0x0000000011b238: fadd st, qword ptr [rax]; add [rax], al; syscall; 
0x000000000406f8: fadd st, st(0); add rsp, 0x8; ret; 
0x000000000406a4: fadd st, st(0); ret; 
0x0000000018c688: fadd st, st(3); nop [rax+rax]; ret; 
0x000000000cb098: fadd st, st(3); nop [rax+rax]; xor rax, rax; ret; 
0x0000000018944e: fadd st, st(3); ret; 
0x000000000935f4: fadd st, st(6); cld; call far fword ptr [rax+0x5a]; 
0x00000000091d51: fbstp tbyte ptr [rbp+rax-0x18], st; out 0x45, eax; stc; jmp qword ptr [rsi+0xf]; 
0x000000001020a9: fbstp tbyte ptr [rbp+rax-0x18], st; pop qword ptr [rdx-0xe]; jmp qword ptr [rsi+0xf]; 
0x000000001028df: fbstp tbyte ptr [rbp+rax-0x18], st; pop rcx; cmp dh, dl; jmp qword ptr [rsi+0xf]; 
0x000000001822eb: fcmovnb st, st(5); std; xlat [rbx]; ret; 
0x000000000a50e1: fcmovne st, st(1); adc eax, [rax]; mov rax, [rax+rdi*8]; ret; 
0x000000000a5101: fcmovne st, st(3); adc eax, [rax]; mov rax, [rax+rdi*8]; ret; 
0x0000000003d3a0: fcom st, qword ptr [rax-0x72b20002]; jl short 0x000000000003d3af; add [rax-0x9], ecx; ror byte ptr [rax+0x1], 0x1; ret; 
0x00000000166a70: fcom st, qword ptr [rax]; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000060faf: fcomp st, dword ptr [rbp-0x3d]; nop [rax+rax]; mov eax, 0xffffffff; pop rbp; ret; 
0x0000000009f9bb: fcomp st, dword ptr [rbx+0x48]; cmovne eax, edi; ret; 
0x00000000156e78: fcomp st, dword ptr [rbx+0x5d]; pop r12; pop r13; pop r14; ret; 
0x0000000012783c: fcomp st, dword ptr [rbx+0x5d]; pop r12; pop r13; ret; 
0x0000000008a0d5: fcomp st, dword ptr [rbx+0x5d]; pop r12; ret; 
0x000000000c5ece: fcomp st, dword ptr [rbx+0x5d]; sub eax, edx; pop r12; ret; 
0x0000000013289b: fcomp st, dword ptr [rbx+rcx]; add [rcx+rcx*4-0x40], eax; pop rbp; ret; 
0x00000000116ce4: fcomp st, dword ptr [rbx-0x3d]; nop [rax+rax]; ret; 
0x0000000014bde6: fcomp st, st(0); or [rax], eax; syscall; 
0x000000000d8db1: fcos; jmp qword ptr [rsi+0x66]; 
0x0000000006c3e2: fcos; jmp qword ptr [rsi+0xf]; 
0x0000000014bb2c: fdiv st(5), st; call qword ptr [rax-0x5e1f00d]; 
0x0000000013ba9f: fdiv st(6), st; jmp qword ptr [rsi+0x66]; 
0x0000000004a4d5: fdiv st(7), st; dec dword ptr [rax-0x77]; ret far; 
0x0000000007a213: fdiv st(7), st; jmp qword ptr [rsi+0x2e]; 
0x000000000c9f51: fdiv st(7), st; jmp qword ptr [rsi+0x66]; 
0x00000000076d7f: fdiv st(7), st; jmp qword ptr [rsi+0xf]; 
0x0000000004d0fb: fdiv st(7), st; jmp qword ptr [rsi-0x70]; 
0x0000000014b8bc: fdivp st(5), st; call qword ptr [rax-0x5e1f00d]; 
0x0000000005668a: fdivp st(7), st; dec dword ptr [rax-0x7d]; ret; 
0x00000000079f92: fdivp st(7), st; inc dword ptr [rcx]; ret; 
0x0000000012b893: fdivp st(7), st; jmp qword ptr [rsi+0x2e]; 
0x0000000007c6b7: fdivp st(7), st; jmp qword ptr [rsi+0xf]; 
0x000000000bd6aa: fdivp st(7), st; jmp qword ptr [rsi-0x70]; 
0x000000000bd6ab: fdivp st(7), st; jmp qword ptr [rsi-0x70]; 
0x000000000deb6f: fdivr st(3), st; nop edx, edi; mov eax, 0x3b; syscall; 
0x00000000103d7b: fdivr st, dword ptr [rsi]; jmp rax; 
0x00000000058d1e: fdivr st, st(4); dec dword ptr [rcx-0x77]; ret; 
0x00000000147c66: fdivr st, st(7); add rsp, 0x8; ret; 
0x0000000009f436: fdivr st, st(7); dec dword ptr [rax-0x77]; ret; 
0x0000000012bef3: fdivr st, st(7); jmp qword ptr [rsi+0x2e]; 
0x0000000017617d: fdivr st, st(7); ret; 
0x000000000b290e: fdivr st, st(7); xor cl, cl; mov [rax], cl; mov rax, rdi; ret; 
0x0000000011ac03: fdivrp; jmp qword ptr [rsi+0xf]; 
0x0000000017d721: ffreep st(5); std; xlat [rbx]; ret far; 
0x0000000009d65f: fiadd st, dword ptr [rax]; add [rax-0x73], cl; adc eax, 0xcefd7; cmovne rax, rdx; ret; 
0x00000000086992: fiadd st, dword ptr [rax]; add [rax], al; mov edx, 0x1; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x0000000008f8c2: fiadd st, dword ptr [rax]; add [rax], al; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [r15+0x18]; 
0x000000001438b4: fiadd st, dword ptr [rax]; add [rcx+rcx*4-0x20], cl; pop r12; ret; 
0x0000000010a96a: fiadd st, dword ptr [rbp+rcx+0x64d8f700]; mov [rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000c1cb8: fiadd st, dword ptr [rcx-0x7d]; call far fword ptr [rax]; 
0x00000000184cf2: fiadd st, dword ptr [rcx]; add [rax], al; vzeroupper; ret; 
0x000000000d46ec: fiadd st, word ptr [r13+0x1]; ret; 
0x000000000d46ed: fiadd st, word ptr [rbp+0x1]; ret; 
0x000000000a196d: fiadd st, word ptr [rbx-0x7cf0f701]; call qword ptr [rax+rax]; 
0x0000000010793e: fiadd st, word ptr [rcx-0x357c0003]; inc dword ptr [rbx-0x39760031]; mov eax, 0x75; syscall; 
0x000000000426b1: fiadd st, word ptr [rcx-0x77]; rol byte ptr [rcx-0x46], 0x8; add [rax], al; add [rax+0x80], bh; syscall; 
0x00000000183fbe: fiadd st, word ptr [rcx]; add [rax], al; vzeroupper; ret; 
0x000000000462b4: fiadd st, word ptr [rip+0x48000000]; mov [rsi+0x10], eax; xor eax, eax; mov dword ptr [rsi+0xc], 0x1000b; ret; 
0x00000000046303: fiadd st, word ptr [rip+0x48000000]; mov [rsi+0x10], eax; xor eax, eax; ret; 
0x0000000009617f: ficom st, dword ptr [rax+rax]; add [rbp-0x3d], ebx; nop [rax]; ret; 
0x000000000795bc: ficom st, dword ptr [rbx]; add cl, ch; mov eax, [0x2949e8894dfffffe]; ror byte ptr [rbp+0xf], 0x48; ret; 
0x00000000028cd8: ficomp st, dword ptr [rbx]; add [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x0000000010d7e1: fidivr st, dword ptr [rip-0x1000]; mov eax, 0x0; cmova eax, edx; ret; 
0x0000000003f2ee: fidivr st, dword ptr [rsi]; jmp r10; 
0x00000000103d6c: fidivr st, word ptr [r11*1-0x49f0f189]; ror byte ptr [rax+0x63], 0x4; or dword ptr [rax+0x1], 0xffffffd8; notrack jmp rax; 
0x0000000003a02e: fidivr st, word ptr [rax+0x49e8001a]; ret; 
0x00000000103d6d: fidivr st, word ptr [rbx*1-0x49f0f189]; ror byte ptr [rax+0x63], 0x4; or dword ptr [rax+0x1], 0xffffffd8; notrack jmp rax; 
0x00000000123e1b: fidivr st, word ptr [rdi+0x2000005]; mov rdx, rax; call qword ptr [r13+0x28]; 
0x000000000897df: fidivr st, word ptr [rdi+0x2]; mov eax, r9d; syscall; 
0x00000000141c6e: fidivr st, word ptr [rdx-0x2]; jmp qword ptr [rsi+0x2e]; 
0x000000000525d8: fild st, dword ptr [rax+0xf3a007d]; xchg esp, eax; ret; 
0x0000000009d5be: fild st, dword ptr [rax]; add [rax-0x73], cl; adc eax, 0xcf057; cmovne rax, rdx; ret; 
0x000000000c1cb2: fild st, dword ptr [rbp+0x29]; fisttp word ptr [rcx+0x29], st; fiadd st, dword ptr [rcx-0x7d]; call far fword ptr [rax]; 
0x000000000a0790: fild st, dword ptr [rbp-0x77]; ret far; 
0x000000000d2769: fild st, dword ptr [rcx-0x77]; ret far; 
0x000000000a3401: fild st, dword ptr [rcx-0x7d]; ret; 
0x00000000040f0e: fild st, dword ptr [rip+0x17585c]; por xmm0, xmm1; ret; 
0x000000000405f8: fild st, dword ptr [rsp-0x4]; fld st, tbyte ptr [rsp+0x8]; fscale; fstp st(1), st; ret; 
0x000000000cc272: fild st, qword ptr [rsp-0x10]; fsubp; fstp qword ptr [rsp-0x10], st; movsd xmm0, [rsp-0x10]; ret; 
0x000000000e46e4: fild st, word ptr [rbx+0x25773bf8]; lea rsi, [rip+0xc62f2]; movsxd rax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x0000000008f8cd: fild st, word ptr [rcx-0x1]; push rdi; sbb cl, ch; imul edi, 0xffffffff; jmp qword ptr [rsi+0xf]; 
0x000000000ae205: fimul st, dword ptr [rax+0xf]; mov esp, 0xd00148d2; sub rax, rdi; ret; 
0x000000000cb845: fimul st, dword ptr [rax+0xf]; mov esp, 0xd00148d2; sub rax, rdi; shr rax, 0x2; ret; 
0x000000000b8c7c: fimul st, dword ptr [rax+rax]; cmovne rax, rdx; ret; 
0x0000000007483d: fimul st, dword ptr [rax-0x77]; out dx, eax; call qword ptr [r12+0x38]; 
0x0000000011381b: fimul st, dword ptr [rax-0x77]; out dx, eax; mov eax, 0x9; syscall; 
0x000000000f6a20: fimul st, dword ptr [rax-0x77]; ret far; 
0x0000000003ff59: fimul st, dword ptr [rax-0x7d]; ret; 
0x000000001443b0: fimul st, dword ptr [rcx+rcx*4-0x12]; call qword ptr [r14+0x40]; 
0x00000000082478: fimul st, dword ptr [rcx+rcx*4-0x12]; mov rdi, rbp; call qword ptr [r14+0x38]; 
0x00000000078580: fimul st, dword ptr [rcx+rcx*4-0x1]; call qword ptr [r12+0x38]; 
0x00000000080e60: fimul st, dword ptr [rcx+rcx*4-0x1a]; call qword ptr [r14+0x38]; 
0x0000000008a8a5: fimul st, dword ptr [rcx+rcx*4-0x1a]; mov rdi, rbp; call qword ptr [r13+0x38]; 
0x00000000078f8d: fimul st, dword ptr [rcx+rcx*4-0x2a]; mov rdi, r15; call qword ptr [r12+0x38]; 
0x00000000079313: fimul st, dword ptr [rcx+rcx*4-0x2a]; mov rdi, r15; call qword ptr [r13+0x38]; 
0x00000000073087: fimul st, dword ptr [rcx+rcx*4-0x9]; call qword ptr [r12+0x38]; 
0x000000000cc661: fimul st, dword ptr [rcx-0x67cb63d]; add [rcx-0x1da25], eax; dec dword ptr [rax+0x63]; ret; 
0x00000000048042: fimul st, word ptr [rax+0xf]; mov esi, 0x83480143; ret; 
0x000000001486c6: fimul st, word ptr [rax-0x77]; out dx, eax; call qword ptr [rax+0x48]; 
0x0000000014da41: fimul st, word ptr [rax-0x77]; out dx, eax; call qword ptr [rax]; 
0x0000000013260b: fimul st, word ptr [rax-0x77]; out dx, eax; call qword ptr [rsp+0x10]; 
0x00000000074b9c: fimul st, word ptr [rax-0x77]; ret far; 
0x000000000758f5: fimul st, word ptr [rax-0x77]; sar dword ptr [rdx+0x1], cl; jmp rsi; 
0x000000000755b4: fimul st, word ptr [rax-0x77]; sti; jmp rsi; 
0x00000000075b39: fimul st, word ptr [rax-0x77]; sti; mov r13d, 0x1; jmp rsi; 
0x00000000063e8a: fimul st, word ptr [rax-0x7d]; ret; 
0x000000000f3049: fimul st, word ptr [rax-0x7d]; rol dword ptr [rcx+rcx*2], 0x39; ret far; 
0x00000000053bfc: fimul st, word ptr [rbp+0x11]; ret far; 
0x00000000066034: fimul st, word ptr [rbx-0x61f63]; jmp qword ptr [rbx+rcx*4]; 
0x000000000425c6: fimul st, word ptr [rbx]; sbb al, [rax]; ret; 
0x000000000bb05e: fincstp; jmp qword ptr [rsi+0x66]; 
0x000000000992a1: fist dword ptr [rax+rax], st; jae short 0x0000000000099319; lea rax, [rax-0x8]; ret; 
0x000000000cdcf9: fist dword ptr [rbx+0x5d5b0011], st; pop r12; pop r13; pop r14; ret; 
0x00000000037b96: fistp dword ptr [rdx], st; add [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x000000000982b2: fistp qword ptr [rax+0xca], st; syscall; 
0x0000000008ceac: fistp qword ptr [rdx+0x1], st; call qword ptr [r14+0x80]; 
0x00000000136504: fisttp dword ptr [rax+0x1], st; ret; 
0x00000000092630: fisttp dword ptr [rax+0x21], st; ret; 
0x00000000054af5: fisttp dword ptr [rax-0x77], st; ret; 
0x0000000011bbe7: fisttp dword ptr [rax-0x77], st; sbb eax, 0xc7791; pop rbx; ret; 
0x0000000011bbcd: fisttp dword ptr [rax-0x77], st; sbb eax, 0xc77ab; pop rbx; ret; 
0x00000000116762: fisttp dword ptr [rax-0x7f], st; jrcxz 0x0000000000116767; loop 0x0000000000116768; dec dword ptr [rax-0x7f]; ret; 
0x000000000c5ecc: fisttp dword ptr [rcx+0x295d5bd8], st; rol byte ptr [rcx+0x5c], 0x1; ret; 
0x000000000b4645: fisttp dword ptr [rcx+0xf], st; add [rcx+0x63], cl; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000158feb: fisttp dword ptr [rcx], st; ret; 
0x000000000ab24e: fisttp dword ptr [rdi], st; add [rdi+0x63], cl; or al, 0x8a; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000114eb0: fisttp dword ptr [rdi], st; lahf; ret; 
0x000000000bf805: fisttp dword ptr [rdi], st; mov ds, dx; add eax, [rax]; add [rbp+0x6348ff43], cl; ret far; 
0x000000001036e9: fisttp dword ptr [rdi], st; test [rax], cl; add [rax], eax; add [rbx-0x6af0fd05], al; ret; 
0x000000001362e1: fisttp dword ptr [rdi], st; test [rax], esp; add [rax], eax; add [rax+0x63], cl; ret; 
0x00000000056e1d: fisttp dword ptr [rdi], st; test ch, ah; adc al, 0x0; add [rax-0x80], al; jmp qword ptr [rbp+0xf]; 
0x0000000004dc2d: fisttp dword ptr [rdi], st; test ch, bl; adc eax, [rax]; add [rax-0x80], al; jmp qword ptr [rbp+0xf]; 
0x00000000074fa0: fisttp dword ptr [rdi], st; test cl, al; or eax, 0x63490000; ret; 
0x0000000007aa18: fisttp dword ptr [rdi], st; test cl, dl; or eax, 0x63490000; ret; 
0x00000000040f06: fisttp dword ptr [rip+0x175854], st; pand xmm0, [rip+0x17585c]; por xmm0, xmm1; ret; 
0x0000000010e6d0: fisttp dword ptr [rip-0x80000000], st; mov [rdi], eax; xor eax, eax; ret; 
0x000000000de567: fisttp qword ptr [rax+0x10], st; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x000000000b4743: fisttp qword ptr [rax+0xf], st; add [rcx+0x63], cl; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8dcd: fisttp qword ptr [rax+rax], st; cmovne rax, rdx; ret; 
0x000000001150e4: fisttp qword ptr [rax-0x77], st; out dx, eax; call r12; 
0x00000000063c90: fisttp qword ptr [rax-0x77], st; ret; 
0x000000001550cc: fisttp qword ptr [rax], st; add [rbp+0x31], al; jmp qword ptr [rdi+rax*8]; 
0x000000000b83f2: fisttp qword ptr [rcx+0x2e66c3d0], st; nop [rax+rax]; xor edx, edx; mov eax, edx; ret; 
0x0000000011a467: fisttp qword ptr [rcx-0x2708fff4], st; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000e6ee0: fisttp qword ptr [rcx-0x77], st; ret; 
0x000000000e6e96: fisttp qword ptr [rcx-0x7d], st; ret; 
0x00000000119f67: fisttp qword ptr [rsi-0x2708fff4], st; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000085382: fisttp word ptr [rax+0x29], st; bnd call qword ptr [rax+0x70]; 
0x0000000008d138: fisttp word ptr [rax+0x29], st; bnd call qword ptr [rbp+0x70]; 
0x000000000f86d0: fisttp word ptr [rax+0x63], st; sub [rbp-0x77], al; ret far; 
0x00000000142be7: fisttp word ptr [rax-0x77], st; test [rax], ah; add [rax], eax; add al, ch; ret far; 
0x0000000003d97a: fisttp word ptr [rax-0x7d], st; ret; 
0x00000000054b8e: fisttp word ptr [rax], st; add rdx, r8; mov rax, rdx; pop rbx; ret; 
0x00000000026aac: fisttp word ptr [rbp-0x73], st; pop rbx; or [rcx+0x39], cl; ret far; 
0x000000000c1cb5: fisttp word ptr [rcx+0x29], st; fiadd st, dword ptr [rcx-0x7d]; call far fword ptr [rax]; 
0x0000000013fc13: fisttp word ptr [rcx+rcx*4-0x17], st; call r10; 
0x000000000a4b20: fisttp word ptr [rcx+rcx*4-0x40], st; ret; 
0x000000000b42fd: fisttp word ptr [rdi+rcx], st; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000003cb41: fisttp word ptr [rdi], st; mov dh, 0x43; add [rax-0x7d], ecx; ret; 
0x000000000b6e26: fisub st, dword ptr [rdi+rcx]; add [rbx+0x63], cl; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000f099d: fisub st, dword ptr [rsi+0xf]; insb [rdi], dx; ret; 
0x000000001865b1: fisubr st, word ptr [rcx]; enter 0xf8c5, 0x77; ret; 
0x0000000002b2c7: fld st, dword ptr [rax+rax*8+0x1f0f6474]; add [rax-0x77], cl; ret far; 
0x000000000cb283: fld st, dword ptr [rax]; add [rax], al; add rax, rdi; add rax, rcx; ret; 
0x000000000da1a5: fld st, dword ptr [rax]; add [rax], al; syscall; 
0x0000000008838e: fld st, dword ptr [rbp+0x31]; sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; syscall; 
0x000000000b504f: fld st, qword ptr [rax+0xf]; add [rbx+0x63], cl; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000010d7d8: fld st, qword ptr [rax]; add [rax], al; syscall; 
0x00000000085b3f: fld st, qword ptr [rip-0x76b80000]; and al, 0x10; xor edx, edx; mov rdi, r15; call qword ptr [r14+0x80]; 
0x0000000004055e: fld st, st(0); fstp tbyte ptr [rdi], st; fld st, tbyte ptr [rsp+0x8]; fsubrp; ret; 
0x0000000003f89e: fld st, st(3); ret; 
0x00000000112a01: fld st, tbyte ptr [rdx-0x1]; jmp qword ptr [rsp+rax*2-0x77]; 
0x000000000406a0: fld st, tbyte ptr [rsp+0x8]; fadd st, st(0); ret; 
0x000000000405fc: fld st, tbyte ptr [rsp+0x8]; fscale; fstp st(1), st; ret; 
0x00000000040562: fld st, tbyte ptr [rsp+0x8]; fsubrp; ret; 
0x0000000004047d: fld st, tbyte ptr [rsp+0x8]; ret; 
0x000000000405aa: fld st, tbyte ptr [rsp-0x18]; fstp tbyte ptr [rdi], st; fld st, tbyte ptr [rsp+0x8]; ret; 
0x000000000404ec: fld st, tbyte ptr [rsp-0x18]; ret; 
0x000000000ca299: fldenv [rsi+0xf]; jbe short 0x00000000000ca2ed; xor [rsi+0xf], ah; xlat [rbx]; ret; 
0x000000000a8399: fldenv [rsi+0xf]; je short 0x00000000000a83ed; xor [rsi+0xf], ah; xlat [rbx]; ret; 
0x000000000a8687: fldenv [rsi+0xf]; je short 0x00000000000a86db; xor [rsi+0xf], ah; xlat [rbx]; ret; 
0x000000000a8291: fldenv [rsi+0xf]; xlat [rbx]; ret; 
0x000000000de8d3: fldenv [rsi-0x3f7a0001]; jne short 0x00000000000de8e0; add rsp, 0x8; ret; 
0x00000000053c64: fmul st, dword ptr [rax+0x11]; rcr byte ptr [rbp+0x5b], 0x1; ret; 
0x00000000066511: fmul st, dword ptr [rax+0x1]; ret; 
0x0000000019150f: fmul st, dword ptr [rax+0x63]; ret; 
0x0000000004d800: fmul st, dword ptr [rax-0x39]; ret; 
0x0000000008990e: fmul st, dword ptr [rax-0x77]; ret; 
0x00000000121349: fmul st, dword ptr [rax-0x77]; ror byte ptr [rcx+0x2b], 0x1; cmp [r8+0x39], r9b; ret; 
0x000000000e3af6: fmul st, dword ptr [rax-0x7d]; ret; 
0x000000001525c3: fmul st, dword ptr [rax-0x9]; fadd st, dword ptr [rbx+0x14807e0]; ret; 
0x000000000ce824: fmul st, dword ptr [rbp+0x1]; ret; 
0x00000000069f21: fmul st, dword ptr [rbx+0xf660441]; insb [rdi], dx; ret; 
0x000000000ce5b2: fmul st, dword ptr [rcx+0x118b4f05]; add [rbp+0x1], cl; ret; 
0x000000000ce277: fmul st, dword ptr [rcx+0x118e8a05]; add [rbp+0x1], cl; ret; 
0x0000000002c4ac: fmul st, dword ptr [rcx+0xf]; ret; 
0x00000000159e74: fmul st, dword ptr [rcx+rcx*4-0x1a]; xor r9d, r9d; mov rdi, rbp; call qword ptr [rax+0x270]; 
0x0000000003052e: fmul st, dword ptr [rcx-0x77]; ret; 
0x00000000040b3c: fmul st, dword ptr [rcx]; enter 0xf8c1, 0x1f; not eax; and eax, edx; ret; 
0x000000000df410: fmul st, qword ptr [rax-0x77]; ret; 
0x000000001097c4: fmul st, qword ptr [rax-0x77]; std; mov rdi, rbp; mov eax, 0x4f; syscall; 
0x000000000da6c3: fmul st, qword ptr [rax-0x7d]; ret; 
0x000000000ff664: fmul st, qword ptr [rcx-0x7d]; ret; 
0x000000000e6bff: fmul st, qword ptr [rdi]; mov dh, 0x43; add [rax-0x7d], ecx; ret; 
0x0000000007f25f: fnsave [rax-0x6]; call far fword ptr [rbx+0x4c]; 
0x0000000010fd67: fnsave [rax]; or eax, 0x64d8f700; mov [rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000191c0e: fnsave [rbp-0x11]; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000000406f3: fnstcw [rdx+0xa]; jne short 0x0000000000040700; fadd st, st(0); add rsp, 0x8; ret; 
0x000000000db3c2: fnstcw [rsi+0x64010010]; mov [r9], ebx; mov rax, r8; pop rbx; ret; 
0x0000000015f940: fnstcw [rsi]; jmp r9; 
0x00000000187017: fnstcw [rsi]; jmp rcx; 
0x0000000011b16b: fnstcw [rsp+rcx]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000116e67: fnstsw [rdi-0x2708fff4]; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000406ba: fnstsw ax; fstp st(0), st; and eax, 0x200; ret; 
0x00000000108967: frstor [rbp+rcx+0x64d8f700]; mov [rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000b6da3: frstor [rdi+rcx]; add [rcx+0x63], cl; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000040600: fscale; fstp st(1), st; ret; 
0x0000000014be03: fscale; jmp qword ptr [rsi+0xf]; 
0x00000000149903: fsincos; out dx, al; jmp qword ptr [rsi+0xf]; 
0x000000000961e7: fst dword ptr [rax+rax], st; syscall; 
0x00000000095494: fst dword ptr [rax+rax], st; xor r9d, r9d; mov dword ptr fs:[rax], 0xc; mov rax, r9; ret; 
0x000000000b396f: fst qword ptr [rbp+0xf], st; add [rbx+0x63], cl; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000ab0df: fst qword ptr [rbx+0xc8b000e], st; mov cl, [rbx-0x37d67dfc]; ret; 
0x000000001125af: fst qword ptr [rcx+0xd], st; add [rcx+rcx*4-0x40], cl; add rsp, 0x8; ret; 
0x00000000119c67: fst qword ptr [rcx-0x2708fff4], st; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011396f: fst st(0), st; idiv edi; mov eax, [rsp+0x8]; add rsp, 0x28; ret; 
0x000000000c5f3e: fstp dword ptr [rbx+0x31], st; rcr byte ptr [rbp+0x41], 0x5c; pop r13; pop r14; ret; 
0x0000000012f5f6: fstp dword ptr [rbx+0x31], st; rcr byte ptr [rbp-0x3a], 0x1; add [rcx+0x5c], al; pop r13; ret; 
0x0000000013c93e: fstp dword ptr [rbx+0x5d], st; pop r12; pop r13; pop r14; ret; 
0x0000000009efc6: fstp dword ptr [rbx+0x5d], st; pop r12; ret; 
0x000000000dd8c2: fstp dword ptr [rbx+0x64010010], st; mov [r8], r9d; add rsp, 0x8; ret; 
0x0000000011926b: fstp dword ptr [rbx-0x2708fff4], st; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000037d95: fstp dword ptr [rdx], st; add [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x00000000109267: fstp qword ptr [rbx-0x2708fff3], st; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000cc278: fstp qword ptr [rsp-0x10], st; movsd xmm0, [rsp-0x10]; ret; 
0x000000000406bc: fstp st(0), st; and eax, 0x200; ret; 
0x00000000040602: fstp st(1), st; ret; 
0x00000000028cd7: fstp st(2), st; sbb eax, [rax]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000d96e1: fstp tbyte ptr [rdi-0x3eb7fff0], st; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x00000000040560: fstp tbyte ptr [rdi], st; fld st, tbyte ptr [rsp+0x8]; fsubrp; ret; 
0x000000000405ae: fstp tbyte ptr [rdi], st; fld st, tbyte ptr [rsp+0x8]; ret; 
0x000000000404ea: fstp tbyte ptr [rdi], st; fld st, tbyte ptr [rsp-0x18]; ret; 
0x0000000017d3cc: fstp tbyte ptr [rdx], st; movsxd rcx, ecx; add rax, rcx; sub rax, rdi; ret; 
0x0000000008e4a1: fstp tbyte ptr [rsi-0x6c140001], st; nop [rax+rax]; endbr64; mov eax, 0xffffffff; ret; 
0x00000000040664: fstp tbyte ptr [rsp-0x18], st; mov [rsp-0x10], ax; fld st, tbyte ptr [rsp-0x18]; ret; 
0x000000000a547f: fsub st(1), st; imul edi, 0xffffffff; jmp qword ptr [rsi+0x66]; 
0x000000001288ae: fsub st(7), st; jmp qword ptr [rsi+0xf]; 
0x000000001288af: fsub st(7), st; jmp qword ptr [rsi+0xf]; 
0x00000000041bdc: fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x00000000041c18: fsub st, dword ptr [rcx+rcx*4+0x2]; mov eax, 0xffffffff; ret; 
0x00000000046438: fsub st, dword ptr [rcx+rcx*4+0x2]; mov rax, 0xffffffffffffffff; ret; 
0x0000000010f250: fsub st, dword ptr [rcx+rcx*4+0x2]; mov rax, [rip+0xd3c45]; mov qword ptr [rax], 0xffffffffffffffff; xor eax, eax; ret; 
0x000000000406bd: fsub st, dword ptr [rip+0x200]; ret; 
0x00000000061f11: fsub st, dword ptr [rsi+0xf]; insb [rdi], dx; ret; 
0x000000000ae8b4: fsub st, dword ptr [rsi+0xf]; xlat [rbx]; ret; 
0x000000000ad93c: fsub st, qword ptr [rsi+0xf]; xlat [rbx]; ret; 
0x000000000892be: fsubp st(3), st; stc; jmp qword ptr [rsi+0x2e]; 
0x0000000014838e: fsubp st(7), st; jmp qword ptr [rbx+rcx*4+0x4]; 
0x0000000014838f: fsubp st(7), st; jmp qword ptr [rbx+rcx*4+0x4]; 
0x000000000cc276: fsubp; fstp qword ptr [rsp-0x10], st; movsd xmm0, [rsp-0x10]; ret; 
0x00000000111912: fsubp; ret far; 
0x000000000c5fc0: fsubr st, dword ptr [rcx]; rcr byte ptr [rbx+0x5d], 0x1; pop r12; pop r13; ret; 
0x0000000017de83: fsubr st, qword ptr [rcx]; enter 0xf8c5, 0x77; ret; 
0x00000000040566: fsubrp; ret; 
0x000000001538af: fucomi st, st(0); ret far; 
0x0000000015882e: fucomi st, st(0); sbb al, 0xf; std; jmp qword ptr [rsi+0x2e]; 
0x00000000116d9d: fucomi st, st(3); or al, 0x8d; add [r8-0x7d], ecx; ret; 
0x0000000007f25d: fucomip st, st(0); fnsave [rax-0x6]; call far fword ptr [rbx+0x4c]; 
0x000000000ef51b: fucomip st, st(0); jmp far fword ptr [rbp-0xd]; 
0x000000000d00bf: fucomip st, st(0); ret far; 
0x000000000890a7: fucomip st, st(0); ret; 
0x0000000013091f: fucomip st, st(0); stosd [rdi]; or al, 0xfd; jmp qword ptr [rcx+rax*2-0x75]; 
0x000000001288df: fucomp st, st(7); jmp qword ptr [rsi+0xf]; 
0x000000000bd28d: fucompp; ret; 
0x000000000dd8fb: fwait; adc [rax], al; syscall; 
0x0000000013fbac: fwait; add [rax], eax; call qword ptr [rsp+0x10]; 
0x0000000009c156: fwait; add [rax], eax; lea rdx, [rip+0x12110]; cmovne rax, rdx; ret; 
0x0000000009af31: fwait; cld; jmp qword ptr [rbx+rcx*4+0x4]; 
0x0000000009b413: fwait; cli; jmp qword ptr [rsi+0x2e]; 
0x000000000cd811: fwait; cmp edi, ecx; call far fword ptr [rcx+0x5e]; 
0x000000001592a5: fwait; or [rax], al; call qword ptr [rax+0x288]; 
0x0000000011e0c7: fwait; or al, 0x0; syscall; 
0x00000000109268: fwait; or eax, 0x64d8f700; mov [rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000012e897: fwait; or eax, [rax]; syscall; 
0x0000000002931c: fwait; sbb eax, [rax]; mov dword ptr fs:[rax], 0x9; mov eax, 0xffffffff; ret; 
0x0000000002bb70: fwait; sbb eax, [rax]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000002bb8b: fwait; sbb eax, [rax]; test eax, eax; je short 0x000000000002bb98; ret; 
0x0000000014fbe1: fwait; std; jmp qword ptr [rsi+0x66]; 
0x0000000009d401: fwait; test eax, 0x8d480001; add eax, 0x1aa74; cmove rax, rdx; ret; 
0x000000000406b8: fxam; fnstsw ax; fstp st(0), st; and eax, 0x200; ret; 
0x00000000069ff6: hint-not-taken ja short 0x000000000006a01f; lea rdx, [rip+0x13cb00]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000007d77c: hint-not-taken ja short 0x000000000007d79b; lea rdi, [rip+0x12afd2]; movsxd rsi, [rdi+rsi*4]; add rsi, rdi; notrack jmp rsi; 
0x000000000e7dd9: hint-not-taken je short 0x00000000000e7e20; mov byte ptr [rdi+0x8], 0x1; mov eax, 0x1; mov byte ptr [rdi], 0x5b; ret; 
0x0000000009970e: hlt; adc [rax], al; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000017bf89: hlt; adc al, [rax]; add [rbp-0x77], cl; ret far; 
0x0000000002a2c2: hlt; adc al, [rax]; mov rax, [rbp-0x70]; mov rdi, rbx; call rax; 
0x00000000168c47: hlt; add al, 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000191508: hlt; add eax, 0x348b4c00; fmul st, dword ptr [rax+0x63]; ret; 
0x0000000017ce89: hlt; add eax, [rax]; add [rbp-0x77], cl; ret far; 
0x0000000011415b: hlt; call far fword ptr [rax+0x4c]; 
0x000000001117e8: hlt; call far fword ptr [rdx+0x59]; 
0x00000000114233: hlt; call far fword ptr [rdx+0x5e]; 
0x0000000015a287: hlt; cld; jmp qword ptr [rsi+0xf]; 
0x0000000018c561: hlt; cmp eax, [rsi-0xc]; jne 0x000000000018c680; ret; 
0x000000000a4b83: hlt; cmp edx, esi; je short 0x00000000000a4b78; ret; 
0x000000000d9963: hlt; dec dword ptr [rax-0x77]; ret; 
0x00000000113c06: hlt; dec dword ptr [rcx+rcx*4-0x20]; pop r12; ret; 
0x0000000014101a: hlt; inc dword ptr [rbp+0x4c1078c0]; mov eax, esp; pop r12; ret; 
0x000000000e1f45: hlt; inc dword ptr [rcx-0x80]; jl short 0x00000000000e1f50; jmp far fword ptr [rdi]; 
0x00000000160cdc: hlt; jb short 0x0000000000160ce7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000160d8c: hlt; jb short 0x0000000000160d97; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001636bc: hlt; jb short 0x00000000001636c7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016376c: hlt; jb short 0x0000000000163777; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000000d6bcb: hlt; jmp far fword ptr [rcx]; 
0x000000000dd02e: hlt; jmp qword ptr [rbp+rax*2-0x77]; 
0x0000000010144d: hlt; jmp qword ptr [rbx+rcx*4+0x4]; 
0x000000000d9a50: hlt; jmp qword ptr [rsi+0xf]; 
0x0000000013ae15: hlt; jmp qword ptr [rsp+rax*2-0x77]; 
0x0000000018c564: hlt; jne 0x000000000018c680; ret; 
0x000000000fd85d: hlt; jne short 0x00000000000fd850; mov eax, [rdx+0x8]; ret; 
0x000000000a4dc2: hlt; mov [rax+0x4], dl; ret; 
0x000000000a4cfd: hlt; mov [rdi+0x4], dl; ret; 
0x00000000166d1a: hlt; mov [rdi-0x4], ecx; ret; 
0x0000000016199d: hlt; mov [rdi-0x4], edx; ret; 
0x000000000deb4c: hlt; mov eax, esi; syscall; 
0x00000000166d13: hlt; mov ecx, [rsi-0x4]; mov [rdi-0xc], rdx; mov [rdi-0x4], ecx; ret; 
0x00000000161b12: hlt; mov edx, [rsi-0x4]; mov [rdi-0xc], rcx; mov [rdi-0x4], edx; ret; 
0x0000000017d62b: hlt; movsxd rcx, ecx; add rax, rcx; sub rax, rdi; ret; 
0x0000000018bb72: hlt; movzx edx, byte ptr [rsi-0xc]; sub eax, edx; ret; 
0x000000000a4b4b: hlt; ret; 
0x0000000009d2a8: hlt; stosd [rdi]; add [rax], eax; cmove rax, rdx; ret; 
0x0000000018bb77: hlt; sub eax, edx; ret; 
0x0000000005e68c: idiv bh; call qword ptr [rax+0x23ffbe8]; 
0x000000000e513c: idiv bh; call qword ptr [rax+0x247c8b44]; 
0x000000000e097c: idiv bh; call qword ptr [rax+0x73fa8148]; 
0x000000000787ec: idiv bh; call qword ptr [rax]; 
0x00000000075768: idiv bh; dec dword ptr [rax+0x1]; fimul st, word ptr [rax-0x77]; sti; jmp rsi; 
0x00000000063794: idiv bh; dec dword ptr [rbp-0x77]; dec byte ptr [rbx-0x5ff7b]; jmp qword ptr [rcx+rcx*4+0x2]; 
0x000000001437b4: idiv bh; inc dword ptr [rbp+0x481d74c0]; mov eax, [rbx+0x23b8]; mov rdi, r12; call qword ptr [rax+0x20]; 
0x000000000722ef: idiv bh; jmp qword ptr [rax+rcx*2-0x75]; 
0x0000000005e062: idiv bh; jmp qword ptr [rsi+0x2e]; 
0x0000000005e063: idiv bh; jmp qword ptr [rsi+0x2e]; 
0x000000000c8fa2: idiv bh; jmp qword ptr [rsi+0xf]; 
0x0000000003be47: idiv bh; jmp qword ptr [rsi+0xf]; 
0x0000000005dcfa: idiv bh; jmp qword ptr [rsi-0x70]; 
0x0000000008cd83: idiv bh; jmp qword ptr [rsp+rax*2-0x77]; 
0x000000001112c0: idiv bh; mov eax, 0x1; add rsp, 0x8; ret; 
0x000000000c60af: idiv bh; nop [rax]; pop rbp; ret; 
0x0000000008cdf3: idiv byte ptr [rcx+0x3]; mov edx, 0x1; mov rdi, rbx; call qword ptr [r12+0x48]; 
0x000000000de942: idiv byte ptr [rdi+0x1200011]; mov eax, 0x38; syscall; 
0x00000000038911: idiv byte ptr [rdi+0x1]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000122d13: idiv byte ptr [rdi+0x2000003]; mov rdx, rax; call qword ptr [rbx+0x28]; 
0x00000000121821: idiv byte ptr [rdi+0x2000004]; call rax; 
0x000000001074e7: idiv byte ptr [rdi+0x2]; mov eax, 0xe; syscall; 
0x00000000086010: idiv byte ptr [rdx+0x1]; mov rdi, r15; call qword ptr [rbp+0x80]; 
0x0000000008b208: idiv byte ptr [rdx+0x1]; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x00000000085e1a: idiv byte ptr [rdx+0x2]; mov rdi, r15; call qword ptr [r13+0x80]; 
0x0000000007ebb6: idiv byte ptr [rdx+0x2]; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x0000000008c62b: idiv byte ptr [rdx+0x2]; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x0000000002be2a: idiv byte ptr [rdx-0x1]; cmovs eax, edx; ret; 
0x0000000014a080: idiv ch; jmp qword ptr [rsi+0x66]; 
0x0000000011a37c: idiv di; mov eax, [rsp+0x8]; add rsp, 0x18; ret; 
0x0000000018d46e: idiv dil; jmp qword ptr [rsi+0xf]; 
0x00000000044ade: idiv dword ptr [rax+0xca]; syscall; 
0x00000000073218: idiv edi; call far fword ptr [rax+0x44]; 
0x0000000007840c: idiv edi; call qword ptr [rax+0xf08c5f6]; 
0x0000000004a5ac: idiv edi; call qword ptr [rax-0x5e1f00d]; 
0x000000000731ee: idiv edi; call qword ptr [rax]; 
0x00000000078000: idiv edi; call rax; 
0x0000000007945f: idiv edi; dec dword ptr [rax-0x77]; ret; 
0x00000000077b2d: idiv edi; dec dword ptr [rax-0x77]; test eax, edi; idiv bh; jmp qword ptr [rax+rcx*2-0x75]; 
0x00000000073a20: idiv edi; dec dword ptr [rcx+rcx*4-0x16]; mov rdi, r14; call qword ptr [r12+0x38]; 
0x00000000073463: idiv edi; dec dword ptr [rcx+rcx*4-0x16]; mov rdi, r14; call qword ptr [rbx+0x38]; 
0x000000000e2d0f: idiv edi; dec dword ptr [rcx+rcx*4-0xa]; mov rdi, r8; call qword ptr [rbx+0x40]; 
0x00000000079c25: idiv edi; dec dword ptr [rcx-0x77]; ret far; 
0x000000000798ef: idiv edi; inc dword ptr [rbp+0x60880fc0]; in eax, 0xff; inc dword ptr [rcx]; ret; 
0x00000000079f8a: idiv edi; inc dword ptr [rbp-0x3a77f040]; fdivp st(7), st; inc dword ptr [rcx]; ret; 
0x0000000007948b: idiv edi; inc dword ptr [rbp-0x7b]; ror byte ptr [rdi], 0x88; ret; 
0x00000000078a20: idiv edi; inc edi; test eax, edx; idiv bh; call qword ptr [rax]; 
0x00000000072c84: idiv edi; jmp far fword ptr [rcx]; 
0x00000000102d33: idiv edi; jmp qword ptr [rax+rcx*2-0x75]; 
0x000000000731fa: idiv edi; jmp qword ptr [rax]; 
0x0000000011b3dd: idiv edi; jmp qword ptr [rdi+0x6d]; 
0x00000000044943: idiv edi; jmp qword ptr [rsi+0x2e]; 
0x000000000cad1e: idiv edi; jmp qword ptr [rsi+0x66]; 
0x000000000e6d56: idiv edi; jmp qword ptr [rsi+0xf]; 
0x0000000002f557: idiv edi; jmp qword ptr [rsi+0xf]; 
0x0000000004e64b: idiv edi; jmp qword ptr [rsi-0x70]; 
0x000000000742c4: idiv edi; jmp qword ptr [rsi-0x77]; 
0x00000000110a01: idiv edi; mov eax, 0x1; add rsp, 0x8; ret; 
0x0000000011acd2: idiv edi; mov eax, [rsp+0x18]; add rsp, 0x28; ret; 
0x00000000119397: idiv edi; mov eax, [rsp+0x4]; add rsp, 0x20; pop rbp; ret; 
0x0000000011ad8a: idiv edi; mov eax, [rsp+0x4]; add rsp, 0x28; ret; 
0x0000000011984d: idiv edi; mov eax, [rsp+0x8]; add rsp, 0x18; ret; 
0x00000000113971: idiv edi; mov eax, [rsp+0x8]; add rsp, 0x28; ret; 
0x00000000119580: idiv edi; mov eax, [rsp+0xc]; add rsp, 0x28; ret; 
0x00000000112267: idiv edi; mov r8d, 0x1; mov eax, r8d; add rsp, 0x8; ret; 
0x00000000119631: idiv edi; mov rax, [rsp+0x8]; add rsp, 0x28; ret; 
0x000000001197a5: idiv edi; mov rax, [rsp+0x8]; add rsp, 0x30; pop rbp; ret; 
0x0000000011b09e: idiv edi; mov rax, [rsp+0x8]; add rsp, 0x38; ret; 
0x0000000011a4fd: idiv edi; mov rax, [rsp]; add rsp, 0x20; pop rbp; ret; 
0x0000000011a4fc: idiv edi; mov rax, [rsp]; add rsp, 0x20; pop rbp; ret; 
0x000000001196e0: idiv edi; mov rax, [rsp]; add rsp, 0x28; ret; 
0x0000000011a5c3: idiv edi; mov rax, [rsp]; add rsp, 0x30; pop rbp; ret; 
0x0000000011a5c2: idiv edi; mov rax, [rsp]; add rsp, 0x30; pop rbp; ret; 
0x000000000454fa: idiv esi; ret; 
0x000000000454d7: idiv esi; shl rdx, 0x20; or rax, rdx; ret; 
0x0000000018fbf6: idiv r15; jmp qword ptr [rsi+0xf]; 
0x000000000454f9: idiv rsi; ret; 
0x000000000de8d1: imul al; fldenv [rsi-0x3f7a0001]; jne short 0x00000000000de8e0; add rsp, 0x8; ret; 
0x00000000028c0d: imul al; insd [rdi], dx; ret; 
0x00000000042b0e: imul al; lodsb [rsi]; add [r8], al; add rsp, 0x8; ret; 
0x000000000a50bc: imul al; mov esi, 0x48fff814; add esp, 0x8; ret; 
0x000000000e97ea: imul al; nop; ret far; 
0x00000000058d1b: imul al; pop rdi; fdivr st, st(4); dec dword ptr [rcx-0x77]; ret; 
0x000000001021bf: imul al; ret far; 
0x00000000097ac7: imul al; ret; 
0x000000000389d2: imul al; sub [rsi-0x76b7fff3], ch; ret; 
0x0000000002925b: imul al; syscall; 
0x000000001252ed: imul cl; pop rbp; out 0xff, al; jmp qword ptr [rsi+0x66]; 
0x00000000049dfd: imul cl; ret far; 
0x00000000047450: imul cl; sar esi, 0xff; jmp qword ptr [rsi+0x2e]; 
0x00000000110b0e: imul cx, [rip-0x3b7cb800], 0x8; ret; 
0x00000000136ec3: imul dh; jmp qword ptr [rsi+0xf]; 
0x000000000da005: imul eax, [rcx+rax], 0x48; add esp, 0x8; pop rbx; pop rbp; ret; 
0x000000000da0ac: imul eax, [rcx+rax], 0x5b; pop rbp; pop r12; ret; 
0x000000000a8027: imul eax, [rcx], 0x894d0000; ret far; 
0x000000000a7a27: imul eax, [rdi], 0x894d0000; ret far; 
0x00000000160e06: imul eax, [rip+0x14634900], 0x148d4993; adc edi, [rsi]; jmp rdx; 
0x00000000160c18: imul eax, [rip+0x14634900], 0xffffff93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001898be: imul eax, [rip+0x487c5162], 0x62067111; push rcx; jl short 0x0000000000189913; adc [rcx+0x7], edi; ret; 
0x0000000009281b: imul eax, [rsi+0x15], 0x48a77600; add esp, 0x8; ret; 
0x00000000146e91: imul eax, [rsi], 0x48f18900; movsxd eax, [rdi+rcx*4]; add rax, rdi; notrack jmp rax; 
0x000000000b8769: imul eax, ecx; ret; 
0x00000000042cc0: imul eax, edi; lea r12, [rcx+rax]; mov r13, rax; mov rdi, r12; call rbx; 
0x0000000018c706: imul eax, edi; shr rax, 0x38; ret; 
0x000000000e7d94: imul eax, esi, 0x47; or [rcx], al; mov eax, 0x1; ret; 
0x00000000091516: imul eax; and al, 0x4e; stc; jmp qword ptr [rbx+rcx*4+0x4]; 
0x0000000012462b: imul eax; data64 ret far; 
0x0000000002abbe: imul eax; mov ebx, gs; adc al, [rax]; mov rdi, rbx; call r14; 
0x0000000007459f: imul eax; ret far; 
0x000000000367b7: imul eax; ret; 
0x000000000d995f: imul eax; sbb ecx, ebx; hlt; dec dword ptr [rax-0x77]; ret; 
0x00000000151641: imul ebp, [rax], 0x5b; pop rbp; pop r12; ret; 
0x000000001215c4: imul ebx, [rax], 0x48; add esp, 0x8; pop rbx; pop rbp; ret; 
0x0000000011d063: imul ebx, [rbp+0xc], 0x64ff8900; mov rax, [rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x100; ret; 
0x000000000fd2db: imul ebx, [rbx+0xe], 0x64d8f700; mov [rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000060fdb: imul ebx, [rsi], 0xd8f70018; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000149e2a: imul ecx, [rax+0xf], 0xffffffcd; call qword ptr [rax+0x18]; 
0x000000000f8879: imul ecx, [rax-0x75], 0x42; adc [rax-0x7b], cl; shl byte ptr [rbp+rax+0x48], 0x39; ret; 
0x00000000121524: imul ecx, [rax], 0x48; add esp, 0x8; pop rbx; pop rbp; ret; 
0x0000000010e2db: imul ecx, [rbx+0xd], 0x64d8f700; mov [rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000015ed67: imul ecx, [rbx], 0x894d0000; ret far; 
0x000000000fdf8e: imul ecx, [rbx], 0xaabae800; jmp qword ptr [rsi+0x2e]; 
0x00000000085fd4: imul ecx, [rcx+0x2b], 0x47; and [rax+0x1], cl; ret; 
0x00000000178da7: imul ecx, [rcx], 0x894d0000; ret far; 
0x000000000cf1fe: imul ecx, [rdi], 0xfffcee85; jmp qword ptr [rsi-0x7f]; 
0x000000000a7727: imul ecx, [rdx], 0x894d0000; ret far; 
0x00000000107ac0: imul ecx, [rdx], 0x908b4800; mov al, 0x0; add [rax], al; call qword ptr [rax+0x88]; 
0x00000000110b01: imul ecx, [rip+0x5894800], 0xffffff95; imul ecx, [rip+0x58d4800], 0x66; imul ecx, [rip-0x3b7cb800], 0x8; ret; 
0x00000000110afa: imul ecx, [rip+0x58b4800], 0x6c; imul ecx, [rip+0x5894800], 0xffffff95; imul ecx, [rip+0x58d4800], 0x66; imul ecx, [rip-0x3b7cb800], 0x8; ret; 
0x00000000110b08: imul ecx, [rip+0x58d4800], 0x66; imul ecx, [rip-0x3b7cb800], 0x8; ret; 
0x00000000110b0f: imul ecx, [rip-0x3b7cb800], 0x8; ret; 
0x000000000b8762: imul ecx, eax; lea eax, [rbx+0x1]; pop rbx; imul eax, ecx; ret; 
0x0000000006cfdb: imul ecx; call rcx; 
0x000000001448af: imul edi, 0x315bffff; rcr byte ptr [rbp+0x41], 0x5c; ret; 
0x000000000e3ddc: imul edi, 0xffffffff; dec dword ptr [rax-0x73]; add bl, [r11+0x5d]; pop r12; ret; 
0x000000001592c9: imul edi, 0xffffffff; dec dword ptr [rcx+0x49082444]; lea edi, [rsp+0x9b0]; call qword ptr [r12+0xf90]; 
0x000000000a5481: imul edi, 0xffffffff; jmp qword ptr [rsi+0x66]; 
0x0000000008f8d3: imul edi, 0xffffffff; jmp qword ptr [rsi+0xf]; 
0x00000000189757: imul edi, ebp, 0x487c5162; adc [rcx-0x2], esi; vmovups [r9-0x40], zmm15; ret; 
0x0000000018951d: imul edi, ebp, 0x487cd162; adc [rcx-0x2], esi; vmovups [r9-0x40], zmm7; ret; 
0x00000000099bdb: imul edi, ebp, 0xffffffff; call qword ptr [rax-0x5e1f00d]; 
0x0000000004d7be: imul edi, ebp, 0xffffffff; jmp qword ptr [rsi+0xf]; 
0x00000000157948: imul edi, ebx, 0x2d8b4cff; div byte ptr [rax+rcx-0x7600cf00]; ret; 
0x00000000042b8c: imul edi, ebx; add r15, [rsp]; mov rsi, r15; call r14; 
0x000000000f883b: imul edi, esi, 0xffffffff; dec dword ptr [rcx-0x75]; push 0x441f0f; add [rax-0x77], cl; ret; 
0x0000000002d3be: imul edi, esi, 0xffffffff; jmp qword ptr [rsi+0xf]; 
0x000000000dfbf5: imul edx, [rax], 0x0; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000dfbab: imul edx, [rax], 0x0; test eax, eax; jne short 0x00000000000dfbe0; mov eax, 0x69; syscall; 
0x00000000121574: imul edx, [rax], 0x48; add esp, 0x8; pop rbx; pop rbp; ret; 
0x000000000a7127: imul edx, [rax], 0x894d0000; ret far; 
0x00000000191c5f: imul edx, [rbp+rax], 0x0; ret; 
0x000000000a6e27: imul edx, [rbx], 0x894d0000; ret far; 
0x0000000013340d: imul edx, [rcx+0xb], 0x0; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000a6b27: imul edx, [rsi], 0x894d0000; ret far; 
0x000000000d9703: imul edx, eax, 0x8d480010; cmp eax, 0x10bfb2; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000f7a95: imul esi, [rax-0x17], 0xffffffc0; fdiv st(7), st; jmp qword ptr [rsi+0xf]; 
0x0000000008fa79: imul esp, [rax+0x5b], 0x5d; pop r12; ret; 
0x0000000016c7f4: imul esp, [rbx], 0x894d0000; ret far; 
0x000000000b6e97: imul esp, [rdi+rcx], 0xc634b00; or dword ptr [rcx-0x73], 0xc; or edi, [rsi]; jmp rcx; 
0x00000000042b8b: imul r15, rbx; add r15, [rsp]; mov rsi, r15; call r14; 
0x00000000042cbf: imul rax, rdi; lea r12, [rcx+rax]; mov r13, rax; mov rdi, r12; call rbx; 
0x0000000018c705: imul rax, rdi; shr rax, 0x38; ret; 
0x0000000018c598: in al, 0x0; add [rax], al; ret; 
0x000000000d8f46: in al, 0x0; add [rax], al; syscall; 
0x00000000044938: in al, 0x19; add [rbx+0x75c08500], cl; psubsw mm3, [rdx]; idiv edi; jmp qword ptr [rsi+0x2e]; 
0x000000001460f8: in al, 0x33; cld; jmp qword ptr [rsp+rax*2-0x77]; 
0x00000000143de6: in al, 0x48; lea esi, [rsp+0x8]; call qword ptr [rax]; 
0x00000000161996: in al, 0x4c; mov [rdi-0x14], ebx; mov [rdi-0xc], rcx; mov [rdi-0x4], edx; ret; 
0x000000000cc052: in al, 0x4c; mov eax, esp; pop r12; ret; 
0x000000000719f1: in al, 0x4c; mov edx, esp; call qword ptr [r13+0x38]; 
0x00000000107d7a: in al, 0x5b; pop rbp; mov eax, r12d; pop r12; ret; 
0x00000000039605: in al, 0x5b; pop rbp; mov rax, r12; pop r12; ret; 
0x0000000009d106: in al, 0x5d; mov rax, r12; pop r12; pop r13; ret; 
0x000000000cc039: in al, 0x64; mov dword ptr [rax], 0x4b; mov rax, r12; pop r12; ret; 
0x000000000b3b88: in al, 0x6; add [rax], al; ret; 
0x000000000da785: in al, 0x74; adc eax, 0x48eb894c; mov edi, ebp; call r12; 
0x00000000115919: in al, 0x75; and al, 0x48; mov edi, [rbp]; call rbx; 
0x000000001287be: in al, 0x75; cmovl ecx, [rcx+0x415d5be0]; pop rsp; ret; 
0x0000000011609d: in al, 0x75; cmp [rbx+0x5d], ebx; pop r12; ret; 
0x00000000114ad0: in al, 0x75; mov rdi, [rbp]; call rbx; 
0x000000000cb5f6: in al, 0x75; test al, 0xf0; jne short 0x00000000000cb650; lea rax, [rdi-0x10]; ret; 
0x00000000185847: in al, 0xc3; nop [rax]; xor eax, eax; ret; 
0x000000000992a0: in al, 0xdb; adc al, 0x0; jae short 0x0000000000099319; lea rax, [rax-0x8]; ret; 
0x0000000014f06f: in al, 0xe8; ret far; 
0x000000000d9f3b: in al, 0xeb; ret far; 
0x00000000166cf9: in al, 0xf3; movq [rdi-0x10], mm1; ret; 
0x000000000b8322: in al, 0xf3; ret; 
0x000000001117e7: in al, 0xf4; call far fword ptr [rdx+0x59]; 
0x000000000cb5ad: in al, 0xf; test [rax+rax-0xf580000], ebp; jne 0x00000000000cb650; lea rax, [rdi-0x10]; ret; 
0x0000000009b93d: in al, 0xf; test [rdi+0x5bfff8c6], esi; pop rbp; pop r12; ret; 
0x000000000744dc: in al, 0xff; call qword ptr [rax-0x8d77a78]; 
0x0000000008f0a6: in al, 0xff; dec dword ptr [rax-0x3f]; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x0000000012b29e: in al, 0xff; jmp qword ptr [rsi+0x2e]; 
0x0000000005c81f: in al, 0xff; jmp qword ptr [rsi+0xf]; 
0x000000000968aa: in al, dx; adc [rax-0x7d], cl; call qword ptr [rax]; 
0x00000000078e72: in al, dx; add [rax-0x8e443], eax; jmp qword ptr [rax]; 
0x00000000188a78: in al, dx; add al, [rax]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000014b979: in al, dx; add byte ptr [rcx+rcx*4-0x40], 0x5d; ret; 
0x00000000145a60: in al, dx; cmp al, 0xfe; jmp qword ptr [rsi+0x2e]; 
0x00000000046302: in al, dx; fiadd st, word ptr [rip+0x48000000]; mov [rsi+0x10], eax; xor eax, eax; ret; 
0x000000000d7795: in al, dx; hlt; jmp far fword ptr [rcx]; 
0x0000000015c6fe: in al, dx; inc dword ptr [rbp+0x31]; ror byte ptr [rax-0x7d], 0xc4; or [rcx+rcx*4-0x40], al; ret; 
0x00000000156fd3: in al, dx; inc dword ptr [rbp-0x3f6bf040]; add rsp, 0x8; ret; 
0x0000000015ab36: in al, dx; inc dword ptr [rcx-0x80]; jl short 0x000000000015ab40; jmp far fword ptr [rdi]; 
0x0000000007fe36: in al, dx; jbe short 0x000000000007fe33; jmp qword ptr [rsi+0xf]; 
0x00000000149ba0: in al, dx; jmp qword ptr [rsi+0x2e]; 
0x000000001670ef: in al, dx; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x14], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x000000000a4dda: in al, dx; mov [rax+0x4], dx; ret; 
0x000000000a4eb7: in al, dx; mov [rdi+0x4], dx; ret; 
0x0000000016199a: in al, dx; mov [rdi-0xc], rcx; mov [rdi-0x4], edx; ret; 
0x00000000150c60: in al, dx; mov bh, ch; jmp qword ptr [rsi+0x66]; 
0x00000000111dd3: in al, dx; mov byte ptr [rsi-0x1], 0x0; mov rax, r8; ret; 
0x000000001670f9: in al, dx; movdqu [rdi-0x10], xmm1; ret; 
0x00000000071dce: in al, dx; or al, ch; jnp short 0x0000000000071e3f; cld; jmp qword ptr [rsi+0x66]; 
0x00000000050b90: in al, dx; or al, ch; mov [rdi-0x2], esp; dec dword ptr [rax-0x77]; ret; 
0x000000001288ba: in al, dx; or al, ch; pop rdi; idiv edi; jmp qword ptr [rsi+0x2e]; 
0x0000000012910a: in al, dx; or al, ch; pxor mm7, mm7; jmp qword ptr [rsi+0x2e]; 
0x000000000415be: in al, dx; or al, ch; ret far; 
0x0000000013c036: in al, dx; or al, ch; ret; 
0x0000000007762e: in al, dx; or al, ch; sbb edx, [rsp+rdi*8]; jmp qword ptr [rsi+0x66]; 
0x00000000132630: in al, dx; ret far; 
0x00000000109502: in al, dx; sbb [rcx-0x17f3db84], cl; ret; 
0x00000000060745: in al, dx; sbb [rcx], dh; jmp qword ptr [rax+rcx*2-0x75]; 
0x00000000108649: in al, dx; sbb byte ptr [rbp+0x41], 0x5c; pop r13; ret; 
0x00000000157174: in al, dx; xor [rbx+rcx*4+0x2d], cl; ret far; 
0x00000000055295: in eax, 0x0; add [rax], al; add [rax-0x7d], cl; ret; 
0x000000000d8ed6: in eax, 0x0; add [rax], al; syscall; 
0x000000000d8e4a: in eax, 0x0; add [rax], al; xor esi, esi; lea edi, [rdi*8+0x2]; syscall; 
0x000000001414e2: in eax, 0x0; add [rbp+0x310f75c0], al; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x5d], bl; ret; 
0x0000000009d1e0: in eax, 0x1; je short 0x000000000009d1a5; ret; 
0x000000000b91f0: in eax, 0x1; je short 0x00000000000b91b5; ret; 
0x000000000b9177: in eax, 0x1; lea rdx, [rip+0xcc900]; cmovne rax, rdx; ret; 
0x000000000b8cb7: in eax, 0x1; lea rdx, [rip+0xcd090]; cmovne rax, rdx; ret; 
0x000000000b8e67: in eax, 0x1; lea rdx, [rip+0xcd330]; cmovne rax, rdx; ret; 
0x000000000b8f57: in eax, 0x1; lea rdx, [rip+0xcd990]; cmovne rax, rdx; ret; 
0x000000000b8c77: in eax, 0x1; lea rdx, [rip+0xcda40]; cmovne rax, rdx; ret; 
0x000000000b8dc7: in eax, 0x1; lea rdx, [rip+0xcdd10]; cmovne rax, rdx; ret; 
0x000000000a4f07: in eax, 0x1; lea rdx, [rip+0xd94e0]; cmovne rax, rdx; ret; 
0x0000000009ea17: in eax, 0x1; lea rdx, [rip+0xdf880]; cmovne rax, rdx; ret; 
0x0000000009d167: in eax, 0x1; lea rdx, [rip+0xe0e60]; cmovne rax, rdx; ret; 
0x0000000009ea57: in eax, 0x1; lea rdx, [rip+0xe3350]; cmovne rax, rdx; ret; 
0x0000000009c707: in eax, 0x1; lea rdx, [rip+0xe5890]; cmovne rax, rdx; ret; 
0x0000000009c557: in eax, 0x1; lea rdx, [rip+0xe5c10]; cmovne rax, rdx; ret; 
0x0000000009c597: in eax, 0x1; lea rdx, [rip+0xe5d70]; cmovne rax, rdx; ret; 
0x0000000003730f: in eax, 0x1a; add [rax-0x73], cl; add eax, 0x1ae547; ret; 
0x00000000189097: in eax, 0x2; add [rcx+0x63], cl; or al, 0x93; add rcx, r11; notrack jmp rcx; 
0x000000001634a7: in eax, 0x44; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001617a6: in eax, 0x4c; mov [rdi-0x13], ebx; mov [rdi-0xb], rcx; mov [rdi-0x4], edx; ret; 
0x00000000089ff5: in eax, 0x66; nop [rax+rax]; mov eax, 0xffffffff; ret; 
0x000000001602e7: in eax, 0x74; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000017d71f: in eax, 0x74; ffreep st(5); std; xlat [rbx]; ret far; 
0x00000000185e20: in eax, 0x76; ffreep st(5); std; xlat [rbx]; ret far; 
0x000000000896eb: in eax, 0x7f; cmp esi, 0x2; cmovne edx, ecx; mov [rdi], edx; ret; 
0x00000000148353: in eax, 0x89; ret; 
0x0000000003aad7: in eax, 0xab; sbb al, [rax]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000015971a: in eax, 0xb8; add [rax], eax; add [rax], al; ret; 
0x000000000406b9: in eax, 0xdf; loopne 0x000000000004069a; fsub st, dword ptr [rip+0x200]; ret; 
0x0000000005d518: in eax, 0xdf; loopne 0x000000000005d4a5; ret; 
0x00000000137dd3: in eax, 0xee; jmp qword ptr [rsi+0x2e]; 
0x000000000b8539: in eax, 0xf0; pop rbx; cmovne rax, rdx; ret; 
0x00000000107dd1: in eax, 0xf1; jmp qword ptr [rsi+0x2e]; 
0x00000000166d79: in eax, 0xf3; movq [rdi-0x10], mm1; ret; 
0x000000000d6d27: in eax, 0xf6; hlt; jmp far fword ptr [rcx]; 
0x000000000cbae3: in eax, 0xf; je short 0x00000000000cbb00; add rax, 0x2; ret; 
0x0000000014b1ac: in eax, 0xfd; call qword ptr [rax-0x5e1f00d]; 
0x0000000014cbe8: in eax, 0xff; call far fword ptr [rsi+0x5f]; 
0x000000000798f7: in eax, 0xff; inc dword ptr [rcx]; ret; 
0x00000000068a9a: in eax, 0xff; jmp qword ptr [rsi+0xf]; 
0x0000000013703f: in eax, dx; add [rax], al; add [rcx-0x77], al; ret far; 
0x00000000041c8b: in eax, dx; add al, 0x0; mov eax, [rsp+0x8]; add rsp, 0x18; ret; 
0x00000000032455: in eax, dx; add eax, [rax]; add [rax-0x73], cl; add cl, [rax+0x39]; ret; 
0x0000000011459b: in eax, dx; add ecx, ebx; ret; 
0x000000001470c7: in eax, dx; call qword ptr [rax+0x18]; 
0x0000000015a9a7: in eax, dx; cld; jmp qword ptr [rsi+0xf]; 
0x00000000055c34: in eax, dx; cmp cx, 0x7fff; jne short 0x0000000000055c1c; mov eax, 0x1; ret; 
0x00000000149099: in eax, dx; dec dword ptr [rax-0x75]; and al, 0x58; mov rdi, r12; call qword ptr [rax+0x20]; 
0x00000000149098: in eax, dx; dec dword ptr [rax-0x75]; and al, 0x58; mov rdi, r12; call qword ptr [rax+0x20]; 
0x0000000014b73b: in eax, dx; dec dword ptr [rax-0x77]; ret; 
0x00000000176a1f: in eax, dx; idiv bh; jmp qword ptr [rsi+0xf]; 
0x00000000176b4f: in eax, dx; idiv edi; jmp qword ptr [rsi+0x66]; 
0x000000000a047e: in eax, dx; idiv edi; jmp qword ptr [rsi+0xf]; 
0x0000000014d5ab: in eax, dx; inc dword ptr [rbp+0x5b0f75db]; pop rbp; pop r12; ret; 
0x00000000149255: in eax, dx; inc dword ptr [rcx+0xfffb]; add [rdi], cl; xchg edi, eax; ret; 
0x0000000011668f: in eax, dx; jle short 0x0000000000116691; dec dword ptr [rax-0x77]; ret; 
0x0000000014ce5f: in eax, dx; jmp qword ptr [rax+rcx*2-0x39]; 
0x000000001563f5: in eax, dx; jmp qword ptr [rbx+rcx*4+0x4]; 
0x00000000147a90: in eax, dx; jmp qword ptr [rsi+0x66]; 
0x000000001465a8: in eax, dx; jmp qword ptr [rsi+0xf]; 
0x0000000015b74c: in eax, dx; jmp qword ptr [rsi-0x70]; 
0x0000000009b84a: in eax, dx; jne 0x000000000009b6f1; mov rax, [rip+0x1476d8]; call qword ptr [rax]; 
0x00000000114b02: in eax, dx; jne short 0x0000000000114b7b; mov rdi, [r12]; call rbx; 
0x00000000114b32: in eax, dx; jne short 0x0000000000114bb0; mov rdi, [r12]; call rbx; 
0x0000000011597e: in eax, dx; jne short 0x00000000001159e0; mov rdi, [r12]; call rbx; 
0x0000000016716f: in eax, dx; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x13], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000010a057: in eax, dx; lea ecx, [rip+0x64d8f700]; mov [rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000b79f2: in eax, dx; lea rax, [rcx-0x1]; ret; 
0x000000000b73b9: in eax, dx; mov [rdi+0x10], ch; ret; 
0x000000000b73cf: in eax, dx; mov [rdi+0x11], ch; ret; 
0x000000000b73f1: in eax, dx; mov [rdi+0x12], ch; ret; 
0x000000000b740f: in eax, dx; mov [rdi+0x13], ch; ret; 
0x000000000b742f: in eax, dx; mov [rdi+0x14], ch; ret; 
0x000000000b7455: in eax, dx; mov [rdi+0x15], ch; ret; 
0x000000000b7471: in eax, dx; mov [rdi+0x16], ch; ret; 
0x000000000b7491: in eax, dx; mov [rdi+0x17], ch; ret; 
0x000000000b74b1: in eax, dx; mov [rdi+0x18], ch; ret; 
0x000000000b74d7: in eax, dx; mov [rdi+0x19], ch; ret; 
0x000000000b7235: in eax, dx; mov [rdi+0x1], ch; ret; 
0x000000000b74f9: in eax, dx; mov [rdi+0x1a], ch; ret; 
0x000000000b7517: in eax, dx; mov [rdi+0x1b], ch; ret; 
0x000000000b7537: in eax, dx; mov [rdi+0x1c], ch; ret; 
0x000000000b7553: in eax, dx; mov [rdi+0x1d], ch; ret; 
0x000000000b7573: in eax, dx; mov [rdi+0x1e], ch; ret; 
0x000000000b7593: in eax, dx; mov [rdi+0x1f], ch; ret; 
0x000000000b75b3: in eax, dx; mov [rdi+0x20], ch; ret; 
0x000000000b75d9: in eax, dx; mov [rdi+0x21], ch; ret; 
0x000000000b7247: in eax, dx; mov [rdi+0x2], ch; ret; 
0x000000000b725d: in eax, dx; mov [rdi+0x3], ch; ret; 
0x000000000b7629: in eax, dx; mov [rdi+0x40], ch; ret; 
0x000000000b7275: in eax, dx; mov [rdi+0x4], ch; ret; 
0x000000000b728b: in eax, dx; mov [rdi+0x5], ch; ret; 
0x000000000b729d: in eax, dx; mov [rdi+0x6], ch; ret; 
0x000000000b72bb: in eax, dx; mov [rdi+0x7], ch; ret; 
0x000000000b72c7: in eax, dx; mov [rdi+0x8], ch; ret; 
0x000000000b72dd: in eax, dx; mov [rdi+0x9], ch; ret; 
0x000000000b72ff: in eax, dx; mov [rdi+0xa], ch; ret; 
0x000000000b731d: in eax, dx; mov [rdi+0xb], ch; ret; 
0x000000000b733d: in eax, dx; mov [rdi+0xc], ch; ret; 
0x000000000b735f: in eax, dx; mov [rdi+0xd], ch; ret; 
0x000000000b737f: in eax, dx; mov [rdi+0xe], ch; ret; 
0x000000000b739f: in eax, dx; mov [rdi+0xf], ch; ret; 
0x000000001617aa: in eax, dx; mov [rdi-0xb], rcx; mov [rdi-0x4], edx; ret; 
0x000000000b7221: in eax, dx; mov [rdi], ch; ret; 
0x0000000013b14f: in eax, dx; mov cl, 0xee; jmp qword ptr [rsi+0xf]; 
0x00000000083772: in eax, dx; mov rax, r8; ret; 
0x00000000167179: in eax, dx; movdqu [rdi-0x10], xmm1; ret; 
0x000000000eb78e: in eax, dx; movsxd rax, [rcx+rbp*4]; add rax, rcx; notrack jmp rax; 
0x000000000eb723: in eax, dx; movsxd rax, [rdx+rbp*4]; add rax, rdx; notrack jmp rax; 
0x00000000099137: in eax, dx; or [rax-0x7f], ecx; stc; jmp far fword ptr [rcx]; 
0x0000000015c857: in eax, dx; or gs:[rax], al; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x0000000011921e: in eax, dx; pop rax; pop rdi; call rax; 
0x000000000264f7: in eax, dx; ret far; 
0x000000000b77d2: in eax, dx; ret; 
0x0000000015995f: in eax, dx; std; cld; jmp qword ptr [rsi+0x66]; 
0x000000000b6413: in eax, dx; sub eax, 0x6349000f; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b7b42: in eax, dx; sub rax, 0x1; ret; 
0x0000000009b4ef: in eax, dx; xchg esi, eax; cli; jmp qword ptr [rsi+0x66]; 
0x0000000013322f: in eax, dx; xor bh, ch; dec dword ptr [rax-0x77]; ret; 
0x0000000009b8c2: in eax, dx; xor eax, eax; ret; 
0x000000000fd8c4: inc al; add [rax], al; setne al; lea eax, [rax+rax*8+0x5]; ret; 
0x00000000189ccb: inc bl; cmp dl, 0x1; jb short 0x0000000000189cd5; mov [rdi], cl; ret; 
0x000000001681c7: inc byte ptr [rax+rax]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000119e05: inc byte ptr [rax]; add [rax], al; syscall; 
0x00000000114ea8: inc byte ptr [rbp-0x60f0bf2e]; vpand ymm1, ymm15, [rdi]; lahf; ret; 
0x000000000536e0: inc byte ptr [rbx+0x87401e7]; mov rcx, [rcx+rax*8]; mov [rdx+rax*8], rcx; xor eax, eax; ret; 
0x00000000053908: inc byte ptr [rbx+0x87401e7]; mov rdx, [rdx+rcx*8]; mov [rax+rcx*8], rdx; xor eax, eax; ret; 
0x00000000156f5b: inc byte ptr [rbx]; ja short 0x0000000000156f70; cmp dx, cx; sete al; ret; 
0x00000000034809: inc byte ptr [rbx]; je short 0x0000000000034810; ret; 
0x000000000d8e15: inc byte ptr [rcx]; je short 0x00000000000d8e20; xor eax, eax; ret; 
0x00000000091159: inc byte ptr [rcx]; mov edx, 0x5f; mov eax, 0x16; cmove eax, edx; ret; 
0x0000000011411e: inc byte ptr [rdx]; add [rax], al; lea rax, [rip+0xd3797]; add rsp, 0x18; ret; 
0x000000000896ee: inc byte ptr [rdx]; cmovne edx, ecx; mov [rdi], edx; ret; 
0x00000000107c4a: inc byte ptr [rdx]; ja short 0x0000000000107c56; mov [rdi+0x10c], esi; xor eax, eax; ret; 
0x0000000009113a: inc byte ptr [rdx]; jbe short 0x0000000000091140; ret; 
0x0000000015904e: inc byte ptr [rsi]; std; jmp qword ptr [rsi+0x2e]; 
0x00000000041b89: inc dword ptr [r8+r8]; test eax, eax; jne short 0x0000000000041ba0; add rsp, 0x8; ret; 
0x000000000c0c62: inc dword ptr [r9-0x7d]; call far fword ptr [rax]; 
0x000000000f982c: inc dword ptr [rax+0x3108384b]; rcr byte ptr [rbx+0x5d], 0x41; pop rsp; ret; 
0x00000000081800: inc dword ptr [rax+0x3145fde6]; ror byte ptr [rcx-0xc916ed], 0xff; jmp qword ptr [rsi-0x70]; 
0x00000000041b8a: inc dword ptr [rax+rax]; test eax, eax; jne short 0x0000000000041ba0; add rsp, 0x8; ret; 
0x0000000005c63e: inc dword ptr [rax-0x13b43]; jmp qword ptr [rdi+0x75]; 
0x0000000005c2e2: inc dword ptr [rax-0x13b43]; jmp qword ptr [rdi-0x75]; 
0x0000000003a6ea: inc dword ptr [rax-0x76b7bcc8]; ret; 
0x000000000e3d98: inc dword ptr [rax-0x76b7ffc8]; ret; 
0x00000000137ed4: inc dword ptr [rax]; add [rax], al; add dh, al; ret; 
0x00000000188621: inc dword ptr [rax]; add [rax], al; and ecx, 0xff; sub eax, ecx; ret; 
0x000000000b84e0: inc dword ptr [rax]; add [rax], al; cmove rax, rcx; ret; 
0x000000000c2c89: inc dword ptr [rax]; add [rax], al; je short 0x00000000000c2c93; mov eax, r8d; ret; 
0x000000000e0b99: inc dword ptr [rax]; add [rax], al; ret; 
0x00000000188627: inc dword ptr [rax]; add [rax], al; sub eax, ecx; ret; 
0x00000000119e95: inc dword ptr [rax]; add [rax], al; syscall; 
0x0000000009214a: inc dword ptr [rax]; add [rsi+0x1], dh; ret; 
0x000000000a4939: inc dword ptr [rax]; mov [rdi], rdx; ret; 
0x0000000011b846: inc dword ptr [rax]; mov byte ptr [rbp-0x7c9], 0x73; syscall; 
0x00000000129800: inc dword ptr [rax]; mov eax, edi; or eax, esi; bswap eax; ret; 
0x00000000111d6f: inc dword ptr [rax]; mov rax, r8; ret; 
0x00000000111df1: inc dword ptr [rax]; ret; 
0x000000000c8e02: inc dword ptr [rbp+0x1]; dec dword ptr [rax-0x7d]; ret; 
0x000000000d9f38: inc dword ptr [rbp+0x31]; in al, 0xeb; ret far; 
0x000000000fd334: inc dword ptr [rbp+0x31]; leave; add rsp, 0x8; mov eax, r9d; ret; 
0x000000000fd333: inc dword ptr [rbp+0x31]; leave; add rsp, 0x8; mov eax, r9d; ret; 
0x00000000112292: inc dword ptr [rbp+0x31]; ror byte ptr [rax-0x77], 0x5; ret far; 
0x0000000015c6ff: inc dword ptr [rbp+0x31]; ror byte ptr [rax-0x7d], 0xc4; or [rcx+rcx*4-0x40], al; ret; 
0x00000000064b7e: inc dword ptr [rbp+0x31]; sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; syscall; 
0x00000000110636: inc dword ptr [rbp+0x410579c0]; mov byte ptr [rsp], 0x0; mov rax, r12; pop r12; ret; 
0x000000000de8d6: inc dword ptr [rbp+0x480575c0]; add esp, 0x8; ret; 
0x00000000156755: inc dword ptr [rbp+0x480e78c0]; add esp, 0x8; pop rbp; pop r12; ret; 
0x000000001437b6: inc dword ptr [rbp+0x481d74c0]; mov eax, [rbx+0x23b8]; mov rdi, r12; call qword ptr [rax+0x20]; 
0x0000000014e755: inc dword ptr [rbp+0x483674c0]; mov eax, [rbp+0x18]; mov rdi, r13; call qword ptr [rax+0x20]; 
0x0000000014b307: inc dword ptr [rbp+0x487474c0]; mov eax, [rbp+0x60]; mov rdi, r13; call qword ptr [rax+0x20]; 
0x00000000142897: inc dword ptr [rbp+0x48a374c0]; mov eax, [rsp+0xc8]; mov rdi, rbx; call qword ptr [rax+0x20]; 
0x0000000014b052: inc dword ptr [rbp+0x497974c0]; mov eax, [rdi+0x60]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x0000000014101b: inc dword ptr [rbp+0x4c1078c0]; mov eax, esp; pop r12; ret; 
0x0000000014d5ac: inc dword ptr [rbp+0x5b0f75db]; pop rbp; pop r12; ret; 
0x00000000101a81: inc dword ptr [rbp+0x5ba774c0]; mov eax, 0x5; pop rbp; pop r12; ret; 
0x000000000798f1: inc dword ptr [rbp+0x60880fc0]; in eax, 0xff; inc dword ptr [rcx]; ret; 
0x00000000110675: inc dword ptr [rbp+0xb8c0]; add [rax], al; cmove rax, rbx; pop rbx; ret; 
0x00000000079f8c: inc dword ptr [rbp-0x3a77f040]; fdivp st(7), st; inc dword ptr [rcx]; ret; 
0x000000000503df: inc dword ptr [rbp-0x3f6bf040]; add rsp, 0x8; movzx eax, al; ret; 
0x00000000156fd4: inc dword ptr [rbp-0x3f6bf040]; add rsp, 0x8; ret; 
0x00000000107127: inc dword ptr [rbp-0x74f38a40]; push rbx; add al, 0xeb; ret; 
0x0000000011609a: inc dword ptr [rbp-0x7b]; in al, 0x75; cmp [rbx+0x5d], ebx; pop r12; ret; 
0x0000000007948d: inc dword ptr [rbp-0x7b]; ror byte ptr [rdi], 0x88; ret; 
0x000000001128cc: inc dword ptr [rbp-0x7cc08b40]; ret; 
0x0000000003a2c1: inc dword ptr [rbx+0x158b01c0]; cmc; ret; 
0x0000000002bba0: inc dword ptr [rbx+0x1b9af40d]; add [rdx], al; add rsp, 0x8; ret; 
0x0000000010ec0f: inc dword ptr [rbx+0x478930c8]; or [rax+0x100], bh; mov [rdi+0x16], ax; ret; 
0x000000001414b6: inc dword ptr [rbx+0xa77c20d]; add [rdx], al; add rsp, 0x8; lea rax, [rip+0xa77d7]; ret; 
0x0000000013bb00: inc dword ptr [rbx+0xace440d]; add [rdx], al; add rsp, 0x8; ret; 
0x0000000007caf5: inc dword ptr [rbx+rcx*4+0x2d]; ret; 
0x0000000006c27b: inc dword ptr [rbx+rcx*4-0x5b]; cmp dl, 0xff; jmp qword ptr [rbx+rcx*4]; 
0x000000000e1d60: inc dword ptr [rbx-0x2ff73]; call qword ptr [rax]; 
0x00000000107941: inc dword ptr [rbx-0x307c0036]; dec dword ptr [rcx+0x75b8c6]; add [rax], al; syscall; 
0x0000000010796a: inc dword ptr [rbx-0x307c0036]; dec dword ptr [rcx+0x77b8c6]; add [rax], al; syscall; 
0x00000000107944: inc dword ptr [rbx-0x39760031]; mov eax, 0x75; syscall; 
0x0000000010796d: inc dword ptr [rbx-0x39760031]; mov eax, 0x77; syscall; 
0x00000000064cf3: inc dword ptr [rbx-0x78f0d006]; ret far; 
0x0000000006ab99: inc dword ptr [rbx-0x7af09108]; ret; 
0x000000000361db: inc dword ptr [rbx-0x80]; jl short 0x0000000000036214; jmp far fword ptr [rsi]; 
0x0000000005bf72: inc dword ptr [rbx-0x9b43]; jmp qword ptr [rsi+0xf]; 
0x00000000136217: inc dword ptr [rbx-0xc8b0a08]; pop rbx; ret; 
0x00000000045f28: inc dword ptr [rbx]; add [rax], al; xor eax, ecx; ret; 
0x000000000b85bb: inc dword ptr [rbx]; div ecx; mov eax, eax; ret; 
0x000000000b850c: inc dword ptr [rbx]; ret; 
0x000000001297d2: inc dword ptr [rcx+0xe2]; rol byte ptr [rcx+0xfa], 0x80; cmovne eax, edi; ret; 
0x000000000d1bdd: inc dword ptr [rcx+0xf]; mov dh, 0x45; add [rax-0x7d], cl; ret; 
0x0000000006a749: inc dword ptr [rcx+0xf]; ret; 
0x000000000fa438: inc dword ptr [rcx+0xf]; xchg edi, eax; ret; 
0x00000000149256: inc dword ptr [rcx+0xfffb]; add [rdi], cl; xchg edi, eax; ret; 
0x00000000055e31: inc dword ptr [rcx+rbp-0x40]; mov [rsi], eax; mov eax, 0x2; ret; 
0x000000000de9de: inc dword ptr [rcx+rcx*4-0x18]; pop rbp; pop r12; pop r13; ret; 
0x0000000007e852: inc dword ptr [rcx+rcx*4-0x20]; pop rbx; pop rbp; pop r12; ret; 
0x000000000405cf: inc dword ptr [rcx+rcx*4-0x3e]; and edx, 0x7fffffff; or edx, esi; je 0x0000000000040528; ret; 
0x00000000081d81: inc dword ptr [rcx+rcx*4-0x40]; pop rbp; pop r12; ret; 
0x000000000c2d32: inc dword ptr [rcx+rcx*4-0x40]; pop rbx; ret; 
0x00000000052ec3: inc dword ptr [rcx+rcx*4-0x40]; ret; 
0x00000000078d12: inc dword ptr [rcx+rcx*4-0x73]; enter 0xfff6, 0xff; mov [rbp-0x930], r11b; call rax; 
0x000000000794c0: inc dword ptr [rcx-0x1]; push rbp; cmp [rax+0x39], cl; ret; 
0x00000000030677: inc dword ptr [rcx-0x46]; add eax, 0xe9000000; ret; 
0x00000000053003: inc dword ptr [rcx-0x46]; or [rax], al; add [rax], al; mov eax, 0xe; syscall; 
0x0000000006746c: inc dword ptr [rcx-0x77]; ret; 
0x000000000c0c63: inc dword ptr [rcx-0x7d]; call far fword ptr [rax]; 
0x0000000007ba4f: inc dword ptr [rcx-0x7d]; jmp qword ptr [rdi+rcx]; 
0x0000000018ddcf: inc dword ptr [rcx-0x7d]; ret far; 
0x000000000a0625: inc dword ptr [rcx-0x7d]; ret; 
0x000000000e1f47: inc dword ptr [rcx-0x80]; jl short 0x00000000000e1f50; jmp far fword ptr [rdi]; 
0x0000000015ab37: inc dword ptr [rcx-0x80]; jl short 0x000000000015ab40; jmp far fword ptr [rdi]; 
0x00000000134903: inc dword ptr [rcx-0xa]; ret; 
0x00000000154267: inc dword ptr [rcx]; add [rax], al; add [rax-0x7d], cl; ret; 
0x00000000072e29: inc dword ptr [rcx]; ret; 
0x000000000fa860: inc dword ptr [rdi+rcx]; test al, bl; add eax, [rax]; add [rbp+0x634c0158], cl; ret far; 
0x0000000018755b: inc dword ptr [rdx]; add [rcx+0x63], cl; or al, 0x93; add rcx, r11; notrack jmp rcx; 
0x0000000018755a: inc dword ptr [rdx]; add [rcx+0x63], cl; or al, 0x93; add rcx, r11; notrack jmp rcx; 
0x00000000136b50: inc dword ptr [rip+0xba]; add [rax+0x102], bh; cmovne eax, edx; ret; 
0x000000000b7c1a: inc eax; add rsp, 0x100; sub rax, rdx; ret; 
0x000000000b7c17: inc eax; inc rax; add rsp, 0x100; sub rax, rdx; ret; 
0x0000000004044d: inc eax; shr eax, 0x1f; ret; 
0x0000000014d64d: inc eax; std; jmp qword ptr [rsi+0x66]; 
0x0000000015a957: inc ebx; mov eax, 0xfffffffe; ret; 
0x0000000010de00: inc ebx; mov rax, [rip+0xd503f]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000011a126: inc ebx; nop [rax+rax]; endbr64; mov eax, 0x134; syscall; 
0x000000000d0208: inc ebx; nop [rax+rax]; endbr64; mov eax, 0x26; syscall; 
0x0000000011a8f6: inc ebx; nop [rax+rax]; endbr64; mov eax, 0x30; syscall; 
0x0000000011a446: inc ebx; nop [rax+rax]; endbr64; mov eax, 0x32; syscall; 
0x0000000011b108: inc ebx; nop [rax+rax]; endbr64; mov eax, 0x47; syscall; 
0x00000000111c08: inc ebx; nop [rax+rax]; endbr64; mov eax, 0x4d; syscall; 
0x0000000010a976: inc ebx; nop [rax+rax]; endbr64; mov eax, 0x57; syscall; 
0x0000000010a8b6: inc ebx; nop [rax+rax]; endbr64; mov eax, 0x58; syscall; 
0x0000000011a006: inc ebx; nop [rax+rax]; endbr64; mov eax, 0x63; syscall; 
0x00000000119c46: inc ebx; nop [rax+rax]; endbr64; mov eax, 0x7d; syscall; 
0x000000001194d6: inc ebx; nop [rax+rax]; endbr64; mov eax, 0x87; syscall; 
0x00000000113a36: inc ebx; nop [rax+rax]; endbr64; mov eax, 0x95; syscall; 
0x00000000110586: inc ebx; nop [rax+rax]; endbr64; mov eax, 0x99; syscall; 
0x00000000119ba8: inc ebx; nop [rax+rax]; endbr64; mov eax, 0x9e; syscall; 
0x00000000119d96: inc ebx; nop [rax+rax]; endbr64; mov eax, 0xb1; syscall; 
0x00000000119f46: inc ebx; nop [rax+rax]; endbr64; mov eax, 0xb4; syscall; 
0x00000000119278: inc ebx; nop [rax+rax]; endbr64; mov eax, 0xbb; syscall; 
0x00000000116f06: inc ebx; nop [rax+rax]; endbr64; mov eax, 0xc2; syscall; 
0x00000000116f66: inc ebx; nop [rax+rax]; endbr64; mov eax, 0xc3; syscall; 
0x00000000116e46: inc ebx; nop [rax+rax]; endbr64; mov eax, 0xc4; syscall; 
0x00000000116ff6: inc ebx; nop [rax+rax]; endbr64; mov eax, 0xc5; syscall; 
0x00000000119df6: inc ebx; nop [rax+rax]; endbr64; mov eax, 0xfe; syscall; 
0x0000000015ced6: inc ebx; nop [rax+rax]; endbr64; mov eax, 0xffffffff; ret; 
0x0000000008fdf8: inc ebx; nop [rax+rax]; endbr64; mov rax, 0xffffffffffffffff; ret; 
0x0000000008fe28: inc ebx; nop [rax+rax]; endbr64; ret; 
0x000000000b41a3: inc ebx; nop [rax+rax]; mov [rdi], rdx; ret; 
0x00000000137124: inc ebx; nop [rax+rax]; mov eax, 0xffffffff; pop rbx; ret; 
0x000000000b4224: inc ebx; nop [rax+rax]; movdqu [rdi], xmm0; ret; 
0x000000000b4162: inc ebx; nop [rax+rax]; nop; mov [rdi], edx; ret; 
0x00000000176636: inc ebx; nop [rax+rax]; ret; 
0x000000000eacb8: inc ebx; nop [rax+rax]; ret; 
0x0000000018c069: inc ebx; nop [rax+rax]; xor eax, eax; ret; 
0x00000000108e0a: inc ebx; nop [rax]; endbr64; mov eax, 0x15; syscall; 
0x0000000011b29a: inc ebx; nop [rax]; endbr64; mov eax, 0x43; syscall; 
0x000000001192aa: inc ebx; nop [rax]; endbr64; mov eax, 0x7a; syscall; 
0x0000000010858a: inc ebx; nop [rax]; endbr64; mov eax, 0x89; syscall; 
0x0000000008fdea: inc ebx; nop [rax]; endbr64; mov eax, 0xffffffff; ret; 
0x000000000da1ca: inc ebx; nop [rax]; endbr64; mov eax, [rdi]; ret; 
0x000000000425aa: inc ebx; nop [rax]; endbr64; mov eax, [rip+0x1a0bf2]; ret; 
0x0000000008fe0a: inc ebx; nop [rax]; endbr64; xor eax, eax; ret; 
0x000000000a4e47: inc ebx; nop [rax]; mov [rdi], si; lea rax, [rdi+rax-0x1]; ret; 
0x000000000a4e3c: inc ebx; xchg ax, ax; mov byte ptr [rdi], 0x0; lea rax, [rdi+rax-0x1]; ret; 
0x000000000ead0a: inc ebx; xor eax, eax; pop rbx; ret; 
0x0000000006c06d: inc edi; add dh, [rax]; add [rax], al; add [rax+0x39], cl; ret; 
0x0000000005b9b3: inc edi; test [rdi+rdi*8-0x1], esp; jmp qword ptr [rsi]; 
0x00000000078a22: inc edi; test eax, edx; idiv bh; call qword ptr [rax]; 
0x000000000fa03d: inc edx; bnd jmp qword ptr [rsi+0xf]; 
0x00000000110f45: inc esi; call far fword ptr [rax+r9*2-0x73]; 
0x00000000109b7a: inc esi; jmp far fword ptr [r15]; 
0x00000000110f61: inc esi; jmp qword ptr [rax]; 
0x0000000013865d: inc esi; ret; 
0x00000000079792: inc esi; test [rbx], ebx; idiv edi; jmp qword ptr [rax]; 
0x000000000a0624: inc qword ptr [r9-0x7d]; ret; 
0x000000000b4223: inc r11d; nop [rax+rax]; movdqu [rdi], xmm0; ret; 
0x000000000b7c19: inc rax; add rsp, 0x100; sub rax, rdx; ret; 
0x000000000b7c16: inc rax; inc rax; add rsp, 0x100; sub rax, rdx; ret; 
0x000000000deb04: incsspq rsi; jmp rdi; 
0x00000000160b65: insb [edi], dx; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000cc154: insb [rdi], dx; adc [rax], eax; mov dword ptr fs:[rax], 0x16; xor eax, eax; ret; 
0x000000001583e0: insb [rdi], dx; adc edi, ebp; jmp qword ptr [rsi+0x66]; 
0x00000000160b66: insb [rdi], dx; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000014babd: insb [rdi], dx; add rsp, 0x30; pop rbx; ret; 
0x000000001417b6: insb [rdi], dx; and al, 0x68; mov rsi, r13; call qword ptr [rax+0x10]; 
0x000000000406a1: insb [rdi], dx; and al, 0x8; fadd st, st(0); ret; 
0x000000000405fd: insb [rdi], dx; and al, 0x8; fscale; fstp st(1), st; ret; 
0x00000000040563: insb [rdi], dx; and al, 0x8; fsubrp; ret; 
0x0000000004047e: insb [rdi], dx; and al, 0x8; ret; 
0x000000000405ab: insb [rdi], dx; and al, 0xe8; fstp tbyte ptr [rdi], st; fld st, tbyte ptr [rsp+0x8]; ret; 
0x000000000404ed: insb [rdi], dx; and al, 0xe8; ret; 
0x00000000071dd2: insb [rdi], dx; cld; jmp qword ptr [rsi+0x66]; 
0x0000000014fbe0: insb [rdi], dx; fwait; std; jmp qword ptr [rsi+0x66]; 
0x00000000092e80: insb [rdi], dx; idiv edi; dec dword ptr [rax-0x77]; ret; 
0x00000000110b00: insb [rdi], dx; imul ecx, [rip+0x5894800], 0xffffff95; imul ecx, [rip+0x58d4800], 0x66; imul ecx, [rip-0x3b7cb800], 0x8; ret; 
0x000000000d0e14: insb [rdi], dx; mov cl, [rip-0x3f49f100]; movsxd rax, [rdi+rax*4]; add rax, rdi; notrack jmp rax; 
0x00000000146f27: insb [rdi], dx; mov eax, 0x1; ret; 
0x00000000056d60: insb [rdi], dx; or eax, [rax]; add [rax-0x80], al; jmp far fword ptr [rbx]; 
0x0000000005cb1b: insb [rdi], dx; out 0xff, eax; call qword ptr [rax-0x5e1f00d]; 
0x0000000008666c: insb [rdi], dx; ret far; 
0x00000000043ded: insb [rdi], dx; ret; 
0x00000000045e96: insb [rdi], dx; rol dword ptr [rcx+rcx*4-0x40], 0xf; adc [rdi], eax; ret; 
0x000000000957cc: insb [rdi], dx; ror byte ptr [rdi], 0x11; push 0x6e0f4966; ret; 
0x0000000008e473: insb [rdi], dx; ror dword ptr [rdi], 0x11; cmp [r11+0x5d], bl; pop r12; ret; 
0x0000000002bdac: insb [rdi], dx; ror dword ptr [rdi], 0x11; ret; 
0x00000000083e58: insb [rdi], dx; ror dword ptr [rdi], 0x11; xor [rcx+0x5d5b7453], cl; pop r12; ret; 
0x00000000028de8: insb [rdi], dx; sbb [rax], al; ret; 
0x000000001567b0: insb [rdi], dx; sbb ch, bh; jmp qword ptr [rsi+0x2e]; 
0x00000000156873: insb [rdi], dx; sub [rcx], cl; add [rcx], al; add rsp, 0x8; ret; 
0x000000000311a7: insd [rdi], dx; add [rax], eax; add [rcx-0x77], al; xor ecx, [rcx-0x77]; ret far; 
0x00000000127e84: insd [rdi], dx; add [rbx-0x1d7effab], cl; add [rax-0x7bf10000], al; ret; 
0x00000000045183: insd [rdi], dx; add [rcx], al; xor esi, esi; mov rdi, r9; call r8; 
0x00000000160a16: insd [rdi], dx; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000010df86: insd [rdi], dx; add rsp, 0xa0; pop rbx; ret; 
0x0000000015c7d7: insd [rdi], dx; or [rax], al; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x0000000010f8db: insd [rdi], dx; or eax, 0x75c08500; mov eax, 0x71; syscall; 
0x0000000010f97a: insd [rdi], dx; or eax, 0x75c08500; mov eax, 0x72; syscall; 
0x000000000265f7: insd [rdi], dx; ret far; 
0x00000000028c0f: insd [rdi], dx; ret; 
0x0000000008de81: insd [rdi], dx; ror byte ptr [rax-0x77], 0x57; sbb [rax-0x77], cl; movups [rdi+0x8], xmm0; ret; 
0x00000000085fad: insd [rdi], dx; sbb [rax-0x77], cl; ret far; 
0x000000001105d7: insd [rdi], dx; sub [rip+0x64d8f700], cl; mov [rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010a8d7: insd [rdi], dx; test [rip+0x64d8f700], ecx; mov [rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000137536: invd; movups [rsi+r9+0x8], xmm2; mov [rsi+0x3], r8b; xor eax, eax; ret; 
0x0000000004518a: iretd; call r8; 
0x00000000128780: iretd; cli; out dx, eax; jmp qword ptr [rsi+0x2e]; 
0x000000000adda2: iretd; cmovne rsi, rdx; bsr rsi, rsi; lea rax, [rcx+rsi]; ret; 
0x0000000008aa0a: iretd; cmp rax, rdi; jbe short 0x000000000008aa30; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x00000000107946: iretd; dec dword ptr [rcx+0x75b8c6]; add [rax], al; syscall; 
0x0000000010796f: iretd; dec dword ptr [rcx+0x77b8c6]; add [rax], al; syscall; 
0x0000000005cb72: iretd; ja short 0x000000000005cb58; mov eax, r8d; ret; 
0x00000000137288: iretd; ja short 0x0000000000137274; mov eax, 0xffffffff; ret; 
0x000000000b7ede: iretd; jb 0x00000000000b8048; mov rcx, rdx; rep movsb [rdi], [rsi]; ret; 
0x000000001851c9: iretd; jb 0x0000000000185395; mov rcx, rdx; rep movsb [rdi], [rsi]; ret; 
0x00000000189f54: iretd; jb 0x000000000018a190; mov rcx, rdx; rep movsb [rdi], [rsi]; ret; 
0x000000000fbade: iretd; jmp qword ptr [rsi+0x2e]; 
0x00000000099227: iretd; mov eax, 0xca; syscall; 
0x000000000a6912: iretd; movzx eax, byte ptr [rax+rcx]; movzx edx, byte ptr [rdx+rcx]; sub eax, edx; ret; 
0x0000000014bf87: iretd; or [rax], eax; syscall; 
0x0000000014bf86: iretd; or [rax], eax; syscall; 
0x0000000009d575: iretd; or al, 0x0; cmovne rax, rdx; ret; 
0x00000000066a75: iretd; ret; 
0x000000000deab9: iretd; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000137a7d: iretd; sbb al, 0xff; jmp qword ptr [rsi+0x66]; 
0x0000000009c4df: iretd; stc; jmp qword ptr [rsi+0xf]; 
0x0000000014c7f3: iretd; std; jmp qword ptr [rsi+0x2e]; 
0x00000000119015: iretd; sub rsp, 0x8; call rsi; 
0x000000000d06a0: ja 0x0000000000028014; lea rdx, [rip+0xd91a7]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000000f925b: ja 0x0000000000028139; movzx ecx, byte ptr [rdx+0x8]; movsxd rcx, [r8+rcx*4]; add rcx, r8; notrack jmp rcx; 
0x00000000028871: ja 0x000000000002854e; lea rdx, [rip+0x180b41]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000028872: ja 0x000000000002854e; lea rdx, [rip+0x180b41]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000000364b6: ja 0x0000000000036600; movsxd rcx, [rdi+r9*4]; add rcx, rdi; notrack jmp rcx; 
0x00000000050e7e: ja 0x0000000000050fc8; movzx edx, dl; movsxd rdx, [r9+rdx*4]; add rdx, r9; notrack jmp rdx; 
0x0000000006164b: ja 0x0000000000061710; lea rcx, [rip+0x144b28]; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x0000000006a981: ja 0x000000000006ada7; lea rsi, [rip+0x13c42e]; movsxd rax, [rsi+rbx*4]; add rax, rsi; notrack jmp rax; 
0x000000000725a1: ja 0x0000000000072af0; movsxd rcx, [rdx+rcx*4]; add rcx, rdx; notrack jmp rcx; 
0x00000000077de9: ja 0x00000000000783b0; movsxd rcx, [rdx+rcx*4]; add rcx, rdx; notrack jmp rcx; 
0x0000000007cecf: ja 0x000000000007d180; lea rdx, [rip+0x12b6f4]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000007d7d0: ja 0x000000000007da40; lea rcx, [rip+0x12b037]; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x000000000b8216: ja 0x00000000000b82ac; movdqu [rdi+rdx-0x10], xmm0; movdqu [rdi], xmm0; ret; 
0x000000000b844c: ja 0x00000000000b85c2; lea rsi, [rip+0xf1003]; movsxd rax, [rsi+rdi*4]; add rax, rsi; notrack jmp rax; 
0x000000000cb281: ja 0x00000000000cb360; add rax, rdi; add rax, rcx; ret; 
0x000000000e0e7e: ja 0x00000000000e0f00; lea rdx, [rip+0xc96a9]; movsxd rax, [rdx+rbp*4]; add rax, rdx; notrack jmp rax; 
0x000000000e41cb: ja 0x00000000000e44c3; lea rdx, [rip+0xc678c]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000000e5f04: ja 0x00000000000e61ed; lea rdx, [rip+0xc4bc3]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000000f8a51: ja 0x00000000000f8b78; movzx edx, byte ptr [r15+0x30]; movsxd rdx, [rsi+rdx*4]; add rdx, rsi; notrack jmp rdx; 
0x00000000103b55: ja 0x0000000000103cd1; lea rdx, [rip+0xa8286]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000182b79: ja 0x0000000000182c10; je short 0x0000000000182c00; mov byte ptr [rdi], 0x0; vzeroupper; ret; 
0x00000000183299: ja 0x00000000001833f0; je 0x00000000001833e0; mov byte ptr [rdi], 0x0; vzeroupper; ret; 
0x00000000183684: ja 0x0000000000183490; je 0x0000000000183480; mov byte ptr [rdi], 0x0; vzeroupper; ret; 
0x00000000183919: ja 0x00000000001839b0; je short 0x00000000001839a0; mov byte ptr [rdi], 0x0; vzeroupper; ret; 
0x00000000184374: ja 0x0000000000184040; je 0x0000000000184030; vzeroupper; ret; 
0x00000000184250: ja 0x0000000000184120; je 0x0000000000184110; vzeroupper; ret; 
0x000000001850b4: ja 0x0000000000184d70; je 0x0000000000184d60; mov rax, rdi; vzeroupper; ret; 
0x00000000184f80: ja 0x0000000000184e50; je 0x0000000000184e40; vzeroupper; ret; 
0x0000000018a447: ja 0x000000000018a4d4; vmovdqu64 [rdi+rdx-0x40], zmm0; vmovdqu64 [rdi], zmm0; vzeroupper; ret; 
0x0000000018db9f: ja 0x000000000018de10; lea r9, [rip+0x2aa58]; movsxd rcx, [r9+rbx*4]; add rcx, r9; notrack jmp rcx; 
0x0000000018dd46: ja 0x000000000018def7; lea rcx, [rip+0x2a91d]; movsxd rbx, [rcx+rbx*4]; add rcx, rbx; notrack jmp rcx; 
0x0000000018e76e: ja 0x000000000018e82c; lea rdx, [rip+0x29f25]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000000388b5: ja short 0x00000000000388c7; lea rdx, [rdi+rsi*4]; mov r8d, [rdx+rax]; mov eax, r8d; ret; 
0x000000000395da: ja short 0x0000000000039603; lea rdx, [rip+0x16897d]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000041c06: ja short 0x0000000000041c10; ret; 
0x00000000041c52: ja short 0x0000000000041ca0; ret; 
0x000000000463dd: ja short 0x0000000000046430; ret; 
0x000000000598dc: ja short 0x00000000000598b0; mov rax, r8; ret; 
0x0000000005cb73: ja short 0x000000000005cb58; mov eax, r8d; ret; 
0x00000000060fd1: ja short 0x0000000000060fd8; ret; 
0x00000000061004: ja short 0x0000000000061010; ret; 
0x0000000006171f: ja short 0x000000000006174b; lea rcx, [rip+0x144ac0]; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x00000000069ff7: ja short 0x000000000006a01f; lea rdx, [rip+0x13cb00]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000007cd2c: ja short 0x000000000007cd3c; movsxd rdi, edi; lea rax, [rip+0x164948]; mov rax, [rax+rdi*8]; ret; 
0x0000000007cdd6: ja short 0x000000000007ce00; movzx edx, dl; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x0000000007d6e6: ja short 0x000000000007d6f8; movsxd rax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x0000000007d77d: ja short 0x000000000007d79b; lea rdi, [rip+0x12afd2]; movsxd rsi, [rdi+rsi*4]; add rsi, rdi; notrack jmp rsi; 
0x0000000008470c: ja short 0x0000000000084700; lea eax, [rdx+rdi]; ret; 
0x0000000008f04c: ja short 0x000000000008f040; lea eax, [rdx+rdi]; ret; 
0x00000000091147: ja short 0x000000000009114d; ret; 
0x00000000099708: ja short 0x0000000000099768; lea rdx, [rip+0x10f497]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000009d505: ja short 0x000000000009d583; add [rax], al; lea rdx, [rip+0xd71c0]; cmovne rax, rdx; ret; 
0x0000000009efc5: ja short 0x000000000009efa0; pop rbx; pop rbp; pop r12; ret; 
0x000000000a50d8: ja short 0x00000000000a50e9; movsxd rdi, edi; lea rax, [rip+0x13c9db]; mov rax, [rax+rdi*8]; ret; 
0x000000000a50f8: ja short 0x00000000000a5109; movsxd rdi, edi; lea rax, [rip+0x13cbdb]; mov rax, [rax+rdi*8]; ret; 
0x000000000ab24d: ja short 0x00000000000ab22a; str [rdi+0x63]; or al, 0x8a; lea r10, [r10+r9]; notrack jmp r10; 
0x000000000b3177: ja short 0x00000000000b317b; ret; 
0x000000000b3193: ja short 0x00000000000b3199; mov [rdi], ecx; ret; 
0x000000000b31d4: ja short 0x00000000000b31de; mov [rdi], rcx; ret; 
0x000000000b3259: ja short 0x00000000000b326b; ret; 
0x000000000b32af: ja short 0x00000000000b32c5; ret; 
0x000000000b3331: ja short 0x00000000000b334b; ret; 
0x000000000b39f7: ja short 0x00000000000b39fb; sub r8, 0x3; lea rdi, [rdi+0x3]; jne 0x00000000000b4270; ret; 
0x000000000b3bb9: ja short 0x00000000000b3bcb; sub r8, 0x11; lea rdi, [rdi+0x11]; jne 0x00000000000b4270; ret; 
0x000000000b3c3f: ja short 0x00000000000b3c55; sub r8, 0x15; lea rdi, [rdi+0x15]; jne 0x00000000000b4270; ret; 
0x000000000b3cc1: ja short 0x00000000000b3cdb; sub r8, 0x19; lea rdi, [rdi+0x19]; jne 0x00000000000b4270; ret; 
0x000000000b4367: ja short 0x00000000000b4389; sub r8, 0x10; jb 0x00000000000b3919; movdqu [rdi+0x30], xmm7; ret; 
0x000000000b47b7: ja short 0x00000000000b47bb; lea rax, [rdi+0x2]; ret; 
0x000000000b47d3: ja short 0x00000000000b47d9; mov [rdi], ecx; lea rax, [rdi+0x4]; ret; 
0x000000000b4824: ja short 0x00000000000b482e; mov [rdi], rcx; lea rax, [rdi+0x8]; ret; 
0x000000000b4909: ja short 0x00000000000b491b; lea rax, [rdi+0x10]; ret; 
0x000000000b497f: ja short 0x00000000000b4995; lea rax, [rdi+0x14]; ret; 
0x000000000b4a01: ja short 0x00000000000b4a1b; lea rax, [rdi+0x18]; ret; 
0x000000000b6487: ja short 0x00000000000b648b; ret; 
0x000000000b64a3: ja short 0x00000000000b64a9; mov [rdi], ecx; ret; 
0x000000000b64e4: ja short 0x00000000000b64ee; mov [rdi], rcx; ret; 
0x000000000b6569: ja short 0x00000000000b657b; ret; 
0x000000000b65bf: ja short 0x00000000000b65d5; ret; 
0x000000000b6641: ja short 0x00000000000b665b; ret; 
0x000000000b6f77: ja short 0x00000000000b6f7b; ret; 
0x000000000b6f93: ja short 0x00000000000b6f99; mov [rdi], ecx; ret; 
0x000000000b6fd4: ja short 0x00000000000b6fde; mov [rdi], rcx; ret; 
0x000000000b7059: ja short 0x00000000000b706b; ret; 
0x000000000b70af: ja short 0x00000000000b70c5; ret; 
0x000000000b7131: ja short 0x00000000000b714b; ret; 
0x000000000b7ef8: ja short 0x00000000000b7f20; jb short 0x00000000000b7f01; movzx ecx, byte ptr [rsi]; mov [rdi], cl; ret; 
0x000000000b80c4: ja short 0x00000000000b80e6; movups [rdi+0x30], xmm7; movups [r11], xmm8; ret; 
0x000000000b8192: ja short 0x00000000000b81b4; movups [rdi+0x30], xmm7; movups [r11], xmm8; ret; 
0x000000000b8296: ja short 0x00000000000b82a3; movdqu [rdi+rdx-0x10], xmm0; movdqu [rdi], xmm0; ret; 
0x000000000b8337: ja short 0x00000000000b834e; jb short 0x00000000000b833d; mov [rdi], cl; ret; 
0x000000000cb349: ja short 0x00000000000cb360; sub rdi, 0x10; add rax, rdi; ret; 
0x000000000ccd91: ja short 0x00000000000ccd98; ret; 
0x000000000ccea6: ja short 0x00000000000cceb0; ret; 
0x000000000cd056: ja short 0x00000000000cd060; ret; 
0x000000000d01f1: ja short 0x00000000000d01f8; ret; 
0x000000000d0221: ja short 0x00000000000d0228; ret; 
0x000000000d678d: ja short 0x00000000000d67c8; or eax, 0x48c18900; movsxd edx, [rdi+rcx*4]; add rdx, rdi; notrack jmp rdx; 
0x000000000d8ee5: ja short 0x00000000000d8eb7; add rsp, 0x8; pop rbp; pop r12; ret; 
0x000000000d8f55: ja short 0x00000000000d8f27; add rsp, 0x8; pop rbp; pop r12; ret; 
0x000000000d8f7b: ja short 0x00000000000d8f80; ret; 
0x000000000d8f6c: ja short 0x00000000000d8f98; mov eax, 0xe3; syscall; 
0x000000000da1b1: ja short 0x00000000000da1b8; ret; 
0x000000000de650: ja short 0x00000000000de6b0; ret; 
0x000000000de703: ja short 0x00000000000de770; ret; 
0x000000000de85d: ja short 0x00000000000de890; ret; 
0x000000000deb4a: ja short 0x00000000000deb68; hlt; mov eax, esi; syscall; 
0x000000000dffd3: ja short 0x00000000000dffd5; add [rax], al; syscall; 
0x000000000e46e9: ja short 0x00000000000e4710; lea rsi, [rip+0xc62f2]; movsxd rax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x000000000fbb21: ja short 0x00000000000fbb3c; lea rdx, [rip+0xafb56]; movsxd rax, [rdx+rdi*4]; add rax, rdx; notrack jmp rax; 
0x000000000fd2d1: ja short 0x00000000000fd2d8; ret; 
0x000000000fd371: ja short 0x00000000000fd378; ret; 
0x000000000fd3bf: ja short 0x00000000000fd3c7; setne al; movzx eax, al; ret; 
0x00000000103d70: ja short 0x0000000000103d80; movzx eax, al; movsxd rax, [rbx+rax*4]; add rax, rbx; notrack jmp rax; 
0x00000000103f4a: ja short 0x0000000000103f5d; lea rcx, [rip+0xa7fcd]; movsxd rdx, [rcx+r9*4]; add rdx, rcx; notrack jmp rdx; 
0x000000001055f5: ja short 0x0000000000105610; movzx eax, al; movsxd rax, [r12+rax*4]; add rax, r12; notrack jmp rax; 
0x00000000106cb0: ja short 0x0000000000106d10; ret; 
0x00000000106d60: ja short 0x0000000000106dc0; ret; 
0x0000000010723e: ja short 0x00000000001072a8; movups [rsi+0x60], xmm6; movdqu xmm7, [rdi+0x78]; movups [rsi+0x70], xmm7; ret; 
0x000000001072e5: ja short 0x00000000001072eb; xor eax, eax; ret; 
0x00000000107292: ja short 0x00000000001072fc; movdqu xmm7, [rsi+0x70]; movups [rdi+0x78], xmm7; ret; 
0x00000000107749: ja short 0x0000000000107775; mov eax, [rcx]; movsxd rax, [r12+rax*4]; add rax, r12; notrack jmp rax; 
0x00000000107974: ja short 0x0000000000107976; add [rax], al; syscall; 
0x00000000107c4c: ja short 0x0000000000107c56; mov [rdi+0x10c], esi; xor eax, eax; ret; 
0x00000000107d1b: ja short 0x0000000000107d08; mov eax, r8d; ret; 
0x00000000107f00: ja short 0x0000000000107eca; add rsp, 0x8; pop rbp; pop r12; ret; 
0x00000000108050: ja short 0x0000000000108058; ret; 
0x00000000108041: ja short 0x0000000000108070; mov eax, 0x4; syscall; 
0x000000001080af: ja short 0x00000000001080b8; ret; 
0x000000001080a0: ja short 0x00000000001080d0; mov eax, 0x5; syscall; 
0x00000000108110: ja short 0x0000000000108118; ret; 
0x00000000108101: ja short 0x0000000000108130; mov eax, 0x6; syscall; 
0x00000000108498: ja short 0x00000000001084a0; ret; 
0x000000001084fb: ja short 0x0000000000108500; ret; 
0x00000000108555: ja short 0x0000000000108560; ret; 
0x00000000108546: ja short 0x0000000000108578; mov eax, 0x106; syscall; 
0x00000000108cb8: ja short 0x0000000000108d10; ret; 
0x00000000108d5d: ja short 0x0000000000108db0; ret; 
0x00000000108df1: ja short 0x0000000000108df8; ret; 
0x00000000108e21: ja short 0x0000000000108e28; ret; 
0x000000001094fd: ja short 0x0000000000109540; ret; 
0x0000000010967d: ja short 0x00000000001096c0; ret; 
0x0000000010d4b7: ja short 0x000000000010d4c0; mov [rsi+0x66], dx; xor eax, eax; ret; 
0x0000000010d63d: ja short 0x000000000010d690; ret; 
0x0000000010dce0: ja short 0x000000000010dd58; ret; 
0x0000000010dda4: ja short 0x000000000010ddb0; ret; 
0x0000000010dde9: ja short 0x000000000010ddf0; ret; 
0x0000000010e180: ja short 0x000000000010e1e0; ret; 
0x0000000010e230: ja short 0x000000000010e290; ret; 
0x0000000010e2d1: ja short 0x000000000010e2d8; ret; 
0x0000000010e58e: ja short 0x000000000010e598; ret; 
0x0000000010e5c4: ja short 0x000000000010e5d0; ret; 
0x0000000010e601: ja short 0x000000000010e608; ret; 
0x0000000010e677: ja short 0x000000000010e681; ret; 
0x0000000010e6c0: ja short 0x000000000010e6ca; ret; 
0x0000000010eae7: ja short 0x000000000010eb38; ret; 
0x0000000010ed0a: ja short 0x000000000010ed10; ret; 
0x0000000010ed4b: ja short 0x000000000010ed50; ret; 
0x0000000010ed81: ja short 0x000000000010ed88; ret; 
0x0000000010f240: ja short 0x000000000010f268; xor eax, eax; ret; 
0x0000000010f35d: ja short 0x000000000010f3b0; ret; 
0x0000000010f3fd: ja short 0x000000000010f450; ret; 
0x0000000010f4a3: ja short 0x000000000010f508; ret; 
0x0000000010f563: ja short 0x000000000010f5c8; ret; 
0x0000000010fb08: ja short 0x000000000010fb0a; add [rax], al; syscall; 
0x0000000010fee0: ja short 0x000000000010ff50; ret; 
0x0000000011011d: ja short 0x0000000000110160; ret; 
0x000000001101dd: ja short 0x0000000000110220; ret; 
0x0000000011029d: ja short 0x00000000001102a0; ret; 
0x00000000111bf1: ja short 0x0000000000111bf8; ret; 
0x00000000111c21: ja short 0x0000000000111c28; ret; 
0x0000000011382c: ja short 0x0000000000113890; pop rbx; pop rbp; ret; 
0x0000000011392d: ja short 0x0000000000113980; ret; 
0x00000000116538: ja short 0x0000000000116540; ret; 
0x00000000119261: ja short 0x0000000000119268; ret; 
0x00000000119291: ja short 0x0000000000119298; ret; 
0x00000000119336: ja short 0x00000000001193a8; ret; 
0x000000001193f9: ja short 0x0000000000119400; ret; 
0x00000000119530: ja short 0x0000000000119590; ret; 
0x000000001195e0: ja short 0x0000000000119640; ret; 
0x00000000119690: ja short 0x00000000001196f0; ret; 
0x00000000119740: ja short 0x00000000001197b8; ret; 
0x0000000011980d: ja short 0x0000000000119860; ret; 
0x000000001198d5: ja short 0x0000000000119908; mov r8d, eax; mov eax, r8d; ret; 
0x00000000119939: ja short 0x0000000000119940; ret; 
0x00000000119a11: ja short 0x0000000000119a18; ret; 
0x00000000119a44: ja short 0x0000000000119a50; ret; 
0x00000000119b14: ja short 0x0000000000119b20; ret; 
0x00000000119b54: ja short 0x0000000000119b60; ret; 
0x00000000119b91: ja short 0x0000000000119b98; ret; 
0x0000000011a26d: ja short 0x000000000011a2c0; ret; 
0x0000000011a33d: ja short 0x000000000011a390; ret; 
0x0000000011a4a6: ja short 0x000000000011a510; ret; 
0x0000000011a560: ja short 0x000000000011a5d0; ret; 
0x0000000011a61d: ja short 0x000000000011a670; ret; 
0x0000000011a6c6: ja short 0x000000000011a730; ret; 
0x0000000011a77d: ja short 0x000000000011a7d0; ret; 
0x0000000011a820: ja short 0x000000000011a898; ret; 
0x0000000011ac80: ja short 0x000000000011ace0; ret; 
0x0000000011ad30: ja short 0x000000000011ad98; ret; 
0x0000000011adf0: ja short 0x000000000011ae50; ret; 
0x0000000011ae8d: ja short 0x000000000011ae9c; movzx edi, di; lea rax, [rip+0x91667]; mov eax, [rax+rdi*4]; ret; 
0x0000000011af90: ja short 0x000000000011aff0; ret; 
0x0000000011b040: ja short 0x000000000011b0b0; ret; 
0x0000000011b0f1: ja short 0x000000000011b0f8; ret; 
0x0000000011b121: ja short 0x000000000011b128; ret; 
0x0000000011b161: ja short 0x000000000011b168; ret; 
0x0000000011b244: ja short 0x000000000011b250; ret; 
0x0000000011b281: ja short 0x000000000011b288; ret; 
0x0000000011b2b1: ja short 0x000000000011b2b8; ret; 
0x0000000011b2e4: ja short 0x000000000011b2f0; ret; 
0x0000000011b321: ja short 0x000000000011b328; ret; 
0x00000000128493: ja short 0x00000000001284a0; ret; 
0x00000000128487: ja short 0x00000000001284b4; xor eax, eax; syscall; 
0x000000001296cb: ja short 0x00000000001296d5; mov rax, rdi; sar rax, 0x6; ret; 
0x00000000136fc6: ja short 0x0000000000136fc9; ret; 
0x00000000137289: ja short 0x0000000000137274; mov eax, 0xffffffff; ret; 
0x00000000141335: ja short 0x000000000014137f; mov rdi, r8; mov rax, [rax+0x18]; jmp rax; 
0x00000000141484: ja short 0x0000000000141490; add [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x000000001414ba: ja short 0x00000000001414c6; add [rdx], al; add rsp, 0x8; lea rax, [rip+0xa77d7]; ret; 
0x0000000014208f: ja short 0x00000000001420d9; add esp, 0x28; pop rbx; pop rbp; ret; 
0x00000000143ec5: ja short 0x0000000000143eb0; mov [rdx+0x20], rsi; ret; 
0x00000000143e9c: ja short 0x0000000000143eb0; sub rcx, rsi; mov [rdx+0x58], rdi; mov [rdx+0x68], rcx; ret; 
0x00000000151186: ja short 0x00000000001511a0; mov eax, r8d; ret; 
0x000000001511be: ja short 0x00000000001511d8; mov rax, r8; ret; 
0x00000000151a83: ja short 0x0000000000151a9d; mov dword ptr [rdi+0x28], 0x0; mov qword ptr [rdi+0x20], 0x0; ret; 
0x0000000015201e: ja short 0x000000000015201d; jmp qword ptr [rsi+0x2e]; 
0x00000000156f5d: ja short 0x0000000000156f70; cmp dx, cx; sete al; ret; 
0x0000000015c749: ja short 0x000000000015c750; ret; 
0x00000000160048: ja short 0x000000000016004f; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160f55: ja short 0x0000000000160fbf; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162c15: ja short 0x0000000000162c64; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000017de88: ja short 0x000000000017de4d; nop [rax+rax]; xor eax, eax; vzeroupper; ret; 
0x0000000017e674: ja short 0x000000000017e639; nop [rax+rax]; vzeroupper; xor eax, eax; ret; 
0x00000000182575: ja short 0x000000000018253a; nop [rax+rax]; mov rax, r8; vzeroupper; ret; 
0x00000000182585: ja short 0x000000000018254a; nop [rax+rax]; xor eax, eax; ret; 
0x00000000182508: ja short 0x0000000000182552; add eax, edi; sub rax, rdx; vzeroupper; ret; 
0x00000000183695: ja short 0x000000000018365a; nop [rax+rax]; vzeroupper; ret; 
0x0000000018410a: ja short 0x00000000001840cf; nop [rax]; mov [rdi], dl; vzeroupper; ret; 
0x00000000184114: ja short 0x00000000001840d9; nop [rax+rax]; mov [rdi], dx; vzeroupper; ret; 
0x00000000184e3e: ja short 0x0000000000184e03; mov [rdi], dl; vzeroupper; ret; 
0x00000000184e44: ja short 0x0000000000184e09; nop [rax+rax]; mov [rdi], dx; vzeroupper; ret; 
0x000000001850c5: ja short 0x000000000018508a; nop [rax+rax]; mov rax, rdi; vzeroupper; ret; 
0x000000001851e8: ja short 0x0000000000185225; jb short 0x00000000001851f1; movzx ecx, byte ptr [rsi]; mov [rdi], cl; ret; 
0x0000000018542c: ja short 0x000000000018546e; vmovdqu [rdi+0x60], ymm7; vmovdqu [r11], ymm8; vzeroupper; ret; 
0x00000000185548: ja short 0x000000000018558a; vmovdqu [rdi+0x60], ymm7; vmovdqu [r11], ymm8; vzeroupper; ret; 
0x0000000018561d: ja short 0x000000000018562e; vmovdqu [rdi+rdx-0x20], ymm0; vmovdqu [rdi], ymm0; vzeroupper; ret; 
0x000000001855bd: ja short 0x0000000000185637; vmovdqu [rdi+rdx-0x20], ymm0; vmovdqu [rdi], ymm0; vzeroupper; ret; 
0x000000001856dd: ja short 0x00000000001856a2; vmovdqu [rdi+rdx-0x10], xmm0; vmovdqu [rdi], xmm0; vzeroupper; ret; 
0x000000001856eb: ja short 0x00000000001856b0; mov [rdi+rdx-0x8], rcx; mov [rdi], rcx; vzeroupper; ret; 
0x000000001856f7: ja short 0x00000000001856bc; mov [rdi+rdx-0x4], ecx; mov [rdi], ecx; vzeroupper; ret; 
0x00000000185701: ja short 0x00000000001856c6; mov [rdi+rdx-0x2], cx; mov [rdi], cx; vzeroupper; ret; 
0x000000001856d5: ja short 0x0000000000185703; jb short 0x00000000001856db; mov [rdi], cl; vzeroupper; ret; 
0x00000000186acb: ja short 0x0000000000186a90; nop [rax]; xor eax, eax; vzeroupper; ret; 
0x00000000186f29: ja short 0x0000000000186eee; nop [rax+rax]; xor eax, eax; ret; 
0x00000000189a27: ja short 0x0000000000189a22; vmovups [rdi-0x200], zmm15; ret; 
0x00000000189f78: ja short 0x0000000000189fcd; jb short 0x0000000000189f81; movzx ecx, byte ptr [rsi]; mov [rdi], cl; ret; 
0x0000000018a243: ja short 0x000000000018a247; vmovdqu64 [rdi+0xc0], zmm7; vmovdqu64 [r11], zmm8; vzeroupper; ret; 
0x0000000018a3cd: ja short 0x000000000018a3d1; vmovdqu64 [rdi+0xc0], zmm7; vmovdqu64 [r11], zmm8; vzeroupper; ret; 
0x0000000018a4b7: ja short 0x000000000018a4cb; vmovdqu64 [rdi+rdx-0x40], zmm0; vmovdqu64 [rdi], zmm0; vzeroupper; ret; 
0x0000000018a5a5: ja short 0x000000000018a56a; vmovdqu [rdi+rdx-0x20], ymm0; vmovdqu [rdi], ymm0; vzeroupper; ret; 
0x0000000018a5b3: ja short 0x000000000018a578; vmovdqu [rdi+rdx-0x10], xmm0; vmovdqu [rdi], xmm0; vzeroupper; ret; 
0x0000000018a5c1: ja short 0x000000000018a586; mov [rdi+rdx-0x8], rcx; mov [rdi], rcx; vzeroupper; ret; 
0x0000000018a5cd: ja short 0x000000000018a592; mov [rdi+rdx-0x4], ecx; mov [rdi], ecx; vzeroupper; ret; 
0x0000000018a5d7: ja short 0x000000000018a59c; mov [rdi+rdx-0x2], cx; mov [rdi], cx; vzeroupper; ret; 
0x0000000018a59d: ja short 0x000000000018a5d9; jb short 0x000000000018a5a3; mov [rdi], cl; vzeroupper; ret; 
0x0000000006a5a9: jae 0x000000000006a050; lea rdx, [rip+0x13c756]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000007307f: jae 0x00000000000738d0; mov rdx, rbx; mov rdi, r14; call qword ptr [r12+0x38]; 
0x00000000078578: jae 0x00000000000791d8; mov rdx, rbx; mov rdi, r15; call qword ptr [r12+0x38]; 
0x00000000085d40: jae 0x0000000000086030; mov edx, r12d; mov rsi, rbp; mov rdi, r15; call qword ptr [r14+0x80]; 
0x00000000085b3d: jae 0x0000000000086120; mov [rsp+0x10], rcx; xor edx, edx; mov rdi, r15; call qword ptr [r14+0x80]; 
0x00000000085a71: jae 0x0000000000086140; lea rsi, [rsp+0x30]; mov rdi, r15; call qword ptr [r14+0x90]; 
0x0000000008af9c: jae 0x000000000008b2d0; xor edx, edx; mov rdi, rbp; call qword ptr [rax+0x80]; 
0x0000000008ae3b: jae 0x000000000008b308; lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax+0x90]; 
0x0000000008b6b0: jae 0x000000000008b778; mov rdx, r13; mov rsi, r14; mov rdi, rbp; call qword ptr [rax+0x40]; 
0x0000000008cede: jae 0x000000000008cf90; mov rdx, rbp; mov rsi, r12; mov rdi, rbx; call qword ptr [r14+0x78]; 
0x0000000008d12c: jae 0x000000000008d270; mov rdx, [rbx+0x40]; mov rdi, rbx; sub rdx, rsi; call qword ptr [rbp+0x70]; 
0x0000000008d206: jae 0x000000000008d2a0; mov rax, [rsp+0x8]; mov esi, 0xffffffff; mov rdi, r8; call qword ptr [rax+0x18]; 
0x000000001679b9: jae 0x0000000000167a60; lea r11, [rip+0x5068a]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000017e829: jae 0x000000000017eac0; xor eax, eax; vzeroupper; ret; 
0x000000001857dd: jae 0x0000000000185a00; xor eax, eax; vzeroupper; ret; 
0x00000000090a00: jae 0xfffffffffa8cc5e8; or dh, [rsp+rcx+0x44]; mov eax, eax; ret; 
0x00000000040af9: jae short 0x0000000000040b10; mov rax, [rip+0x1a2346]; mov dword ptr fs:[rax], 0x22; add rsp, 0x8; ret; 
0x00000000040e0f: jae short 0x0000000000040e28; mov rax, [rip+0x1a2030]; mov dword ptr fs:[rax], 0x22; add rsp, 0x8; ret; 
0x0000000004150d: jae short 0x000000000004154f; xor eax, eax; pop rbx; ret; 
0x00000000041530: jae short 0x0000000000041572; pop rbx; ret; 
0x00000000041bd1: jae short 0x0000000000041bd4; ret; 
0x000000000421d1: jae short 0x00000000000421d4; ret; 
0x00000000044b4b: jae short 0x0000000000044b5b; nop [rax]; call qword ptr [rbx]; 
0x00000000053017: jae short 0x000000000005301c; xor eax, eax; ret; 
0x000000000544e2: jae short 0x000000000005452d; shr ecx, cl; mov [rdi], r9; ret; 
0x000000000545db: jae short 0x00000000000545d0; mov rax, rdx; ret; 
0x00000000059858: jae short 0x000000000005983c; mov rax, r8; ret; 
0x000000000817f0: jae short 0x000000000008183a; mov edi, ebx; call qword ptr [rbp+0x68]; 
0x00000000081ed7: jae short 0x0000000000081ee8; lea rcx, [rdx+0x4]; mov [rax], rcx; mov eax, [rdx]; ret; 
0x00000000082061: jae short 0x0000000000082070; lea rcx, [rdx+0x4]; mov [rax], rcx; mov eax, [rdx]; ret; 
0x000000000829fd: jae short 0x0000000000082a10; lea rsi, [rcx+0x4]; mov [rdx+0x20], rsi; mov [rcx], eax; ret; 
0x00000000082ba4: jae short 0x0000000000082bb8; lea rsi, [rcx+0x4]; mov [rdx+0x20], rsi; mov [rcx], eax; ret; 
0x00000000084960: jae short 0x0000000000084965; mov r8d, [rax]; mov eax, r8d; ret; 
0x0000000008537a: jae short 0x000000000008538c; mov rdx, [rbx+0x40]; mov rdi, rbx; sub rdx, rsi; call qword ptr [rax+0x70]; 
0x000000000857f8: jae short 0x0000000000085855; mov rax, [rsp+0x8]; mov esi, 0xffffffff; mov rdi, r8; call qword ptr [rax+0x18]; 
0x0000000008a47c: jae short 0x000000000008a490; lea rdx, [rax+0x1]; mov [rdi+0x8], rdx; movzx eax, byte ptr [rax]; ret; 
0x0000000008a4b6: jae short 0x000000000008a4c8; lea rdx, [rax+0x1]; mov [rdi+0x8], rdx; movzx eax, byte ptr [rax]; ret; 
0x0000000008ff91: jae short 0x000000000008ffb8; movzx eax, byte ptr [rax]; ret; 
0x000000000992a5: jae short 0x00000000000992ef; lea eax, [rax-0x8]; ret; 
0x000000000992a4: jae short 0x0000000000099319; lea rax, [rax-0x8]; ret; 
0x0000000009c6cc: jae short 0x000000000009c6dc; add dh, dh; mov byte ptr [rcx], 0x74; ret far; 
0x0000000009efaf: jae short 0x000000000009efa9; dec dword ptr [rax+0x29]; ret; 
0x000000000de561: jae short 0x00000000000de564; ret; 
0x000000000de7b1: jae short 0x00000000000de7b4; ret; 
0x000000000deb81: jae short 0x00000000000deb84; ret; 
0x000000000dfb65: jae short 0x00000000000dfb67; add [rax], al; syscall; 
0x000000000dfb71: jae short 0x00000000000dfb74; ret; 
0x000000000dfdc1: jae short 0x00000000000dfdc4; ret; 
0x000000000dfdf1: jae short 0x00000000000dfdf4; ret; 
0x000000000dfe51: jae short 0x00000000000dfe54; ret; 
0x000000000dfe81: jae short 0x00000000000dfe84; ret; 
0x000000000dfeb1: jae short 0x00000000000dfeb4; ret; 
0x000000000dfee1: jae short 0x00000000000dfee4; ret; 
0x000000000fd181: jae short 0x00000000000fd184; ret; 
0x000000000fd1b1: jae short 0x00000000000fd1b4; ret; 
0x000000000fd1e1: jae short 0x00000000000fd1e4; ret; 
0x000000000fd211: jae short 0x00000000000fd214; ret; 
0x000000000fd241: jae short 0x00000000000fd244; ret; 
0x000000000fd271: jae short 0x00000000000fd274; ret; 
0x000000000fd2a1: jae short 0x00000000000fd2a4; ret; 
0x000000001085a1: jae short 0x00000000001085a4; ret; 
0x000000001085d1: jae short 0x00000000001085d4; ret; 
0x00000000108701: jae short 0x0000000000108704; ret; 
0x00000000108731: jae short 0x0000000000108734; ret; 
0x00000000108931: jae short 0x0000000000108934; ret; 
0x00000000108961: jae short 0x0000000000108964; ret; 
0x00000000109261: jae short 0x0000000000109264; ret; 
0x00000000109581: jae short 0x0000000000109584; ret; 
0x000000001095b1: jae short 0x00000000001095b4; ret; 
0x000000001095e1: jae short 0x00000000001095e4; ret; 
0x00000000109611: jae short 0x0000000000109614; ret; 
0x00000000109641: jae short 0x0000000000109644; ret; 
0x00000000109701: jae short 0x0000000000109704; ret; 
0x00000000109731: jae short 0x0000000000109734; ret; 
0x0000000010a021: jae short 0x000000000010a024; ret; 
0x0000000010a051: jae short 0x000000000010a054; ret; 
0x0000000010a081: jae short 0x000000000010a084; ret; 
0x0000000010a0b4: jae short 0x000000000010a0b7; ret; 
0x0000000010a871: jae short 0x000000000010a874; ret; 
0x0000000010a8a4: jae short 0x000000000010a8a7; ret; 
0x0000000010a8d1: jae short 0x000000000010a8d4; ret; 
0x0000000010a901: jae short 0x000000000010a904; ret; 
0x0000000010a931: jae short 0x000000000010a934; ret; 
0x0000000010a964: jae short 0x000000000010a967; ret; 
0x0000000010a991: jae short 0x000000000010a994; ret; 
0x0000000010a9c1: jae short 0x000000000010a9c4; ret; 
0x0000000010a9f1: jae short 0x000000000010a9f4; ret; 
0x0000000010dca4: jae short 0x000000000010dca7; ret; 
0x0000000010f191: jae short 0x000000000010f194; ret; 
0x0000000010f321: jae short 0x000000000010f324; ret; 
0x0000000010fd61: jae short 0x000000000010fd64; ret; 
0x0000000010fea1: jae short 0x000000000010fea4; ret; 
0x000000001100b1: jae short 0x00000000001100b4; ret; 
0x000000001100e1: jae short 0x00000000001100e4; ret; 
0x000000001101a1: jae short 0x00000000001101a4; ret; 
0x00000000110261: jae short 0x0000000000110264; ret; 
0x000000001105a1: jae short 0x00000000001105a4; ret; 
0x000000001105d1: jae short 0x00000000001105d4; ret; 
0x00000000110601: jae short 0x0000000000110604; ret; 
0x00000000113683: jae short 0x0000000000113686; ret; 
0x000000001138c1: jae short 0x00000000001138c4; ret; 
0x000000001138f1: jae short 0x00000000001138f4; ret; 
0x000000001139c1: jae short 0x00000000001139c4; ret; 
0x000000001139f1: jae short 0x00000000001139f4; ret; 
0x00000000113a24: jae short 0x0000000000113a27; ret; 
0x00000000113a51: jae short 0x0000000000113a54; ret; 
0x00000000113a81: jae short 0x0000000000113a84; ret; 
0x00000000113ab1: jae short 0x0000000000113ab4; ret; 
0x00000000113ae1: jae short 0x0000000000113ae4; ret; 
0x00000000115ae6: jae short 0x0000000000115b08; mov rsi, r12; mov rdi, r15; call r14; 
0x00000000116e34: jae short 0x0000000000116e37; ret; 
0x00000000116e61: jae short 0x0000000000116e64; ret; 
0x00000000116e91: jae short 0x0000000000116e94; ret; 
0x00000000116ec4: jae short 0x0000000000116ec7; ret; 
0x00000000116ef4: jae short 0x0000000000116ef7; ret; 
0x00000000116f21: jae short 0x0000000000116f24; ret; 
0x00000000116f54: jae short 0x0000000000116f57; ret; 
0x00000000116f81: jae short 0x0000000000116f84; ret; 
0x00000000116fb1: jae short 0x0000000000116fb4; ret; 
0x00000000116fe4: jae short 0x0000000000116fe7; ret; 
0x00000000117011: jae short 0x0000000000117014; ret; 
0x00000000117044: jae short 0x0000000000117047; ret; 
0x00000000119181: jae short 0x0000000000119184; ret; 
0x000000001191b1: jae short 0x00000000001191b4; ret; 
0x000000001192c1: jae short 0x00000000001192c4; ret; 
0x000000001192f1: jae short 0x00000000001192f4; ret; 
0x00000000119431: jae short 0x0000000000119434; ret; 
0x000000001194c4: jae short 0x00000000001194c7; ret; 
0x000000001194f1: jae short 0x00000000001194f4; ret; 
0x000000001196df: jae short 0x00000000001196d8; dec dword ptr [rax-0x75]; add al, 0x24; add rsp, 0x28; ret; 
0x00000000119bc1: jae short 0x0000000000119bc4; ret; 
0x00000000119bf1: jae short 0x0000000000119bf4; ret; 
0x00000000119c34: jae short 0x0000000000119c37; ret; 
0x00000000119c61: jae short 0x0000000000119c64; ret; 
0x00000000119c91: jae short 0x0000000000119c94; ret; 
0x00000000119cc1: jae short 0x0000000000119cc4; ret; 
0x00000000119cf1: jae short 0x0000000000119cf4; ret; 
0x00000000119d21: jae short 0x0000000000119d24; ret; 
0x00000000119d51: jae short 0x0000000000119d54; ret; 
0x00000000119d84: jae short 0x0000000000119d87; ret; 
0x00000000119db1: jae short 0x0000000000119db4; ret; 
0x00000000119de4: jae short 0x0000000000119de7; ret; 
0x00000000119e11: jae short 0x0000000000119e14; ret; 
0x00000000119e41: jae short 0x0000000000119e44; ret; 
0x00000000119e71: jae short 0x0000000000119e74; ret; 
0x00000000119ea1: jae short 0x0000000000119ea4; ret; 
0x00000000119ed1: jae short 0x0000000000119ed4; ret; 
0x00000000119f04: jae short 0x0000000000119f07; ret; 
0x00000000119f34: jae short 0x0000000000119f37; ret; 
0x00000000119f61: jae short 0x0000000000119f64; ret; 
0x00000000119f91: jae short 0x0000000000119f94; ret; 
0x00000000119fc4: jae short 0x0000000000119fc7; ret; 
0x00000000119ff4: jae short 0x0000000000119ff7; ret; 
0x0000000011a021: jae short 0x000000000011a024; ret; 
0x0000000011a051: jae short 0x000000000011a054; ret; 
0x0000000011a081: jae short 0x000000000011a084; ret; 
0x0000000011a0b1: jae short 0x000000000011a0b4; ret; 
0x0000000011a0e1: jae short 0x000000000011a0e4; ret; 
0x0000000011a114: jae short 0x000000000011a117; ret; 
0x0000000011a141: jae short 0x000000000011a144; ret; 
0x0000000011a171: jae short 0x000000000011a174; ret; 
0x0000000011a1a1: jae short 0x000000000011a1a4; ret; 
0x0000000011a1d1: jae short 0x000000000011a1d4; ret; 
0x0000000011a211: jae short 0x000000000011a214; ret; 
0x0000000011a301: jae short 0x000000000011a304; ret; 
0x0000000011a3d1: jae short 0x000000000011a3d4; ret; 
0x0000000011a401: jae short 0x000000000011a404; ret; 
0x0000000011a434: jae short 0x000000000011a437; ret; 
0x0000000011a461: jae short 0x000000000011a464; ret; 
0x0000000011a8e4: jae short 0x000000000011a8e7; ret; 
0x0000000011a911: jae short 0x000000000011a914; ret; 
0x0000000011a941: jae short 0x000000000011a944; ret; 
0x0000000011a974: jae short 0x000000000011a977; ret; 
0x0000000011bdec: jae short 0x000000000011bdfa; mov rdx, [rip+0xcbc83]; add word ptr [rdx+rax*2], 0x1; ret; 
0x000000001265c5: jae short 0x000000000012663f; mov [rbp-0x80], edx; mov rdx, r12; movups [rbp-0x78], xmm6; call rax; 
0x00000000126b27: jae short 0x0000000000126b38; cmp [rax+0x8], rdi; jne short 0x0000000000126b20; mov rax, [rax+0x30]; ret; 
0x00000000136776: jae short 0x0000000000136783; mov eax, 0xffffffff; ret; 
0x000000001375a0: jae short 0x00000000001375ab; shl rsi, 0x4; lea r8, [rdi+rsi+0x8]; mov rax, r8; ret; 
0x00000000142326: jae short 0x0000000000142338; mov rdi, rbp; mov [rbx], rax; xor eax, eax; call qword ptr [rbx+0x18]; 
0x000000001423e8: jae short 0x000000000014240a; mov rdi, rbp; mov r12d, eax; xor eax, eax; call qword ptr [rbx+0x28]; 
0x00000000143986: jae short 0x0000000000143998; mov rdx, r12; mov rdi, r14; call qword ptr [rax+0x10]; 
0x000000001439c0: jae short 0x00000000001439d2; mov rdx, r12; mov rdi, r14; call qword ptr [rax+0x20]; 
0x000000001449d9: jae short 0x00000000001449fb; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000148776: jae short 0x0000000000148790; mov rdi, rbp; call qword ptr [rax+0x48]; 
0x0000000014b846: jae short 0x000000000014b890; add esp, 0x10; pop r12; ret; 
0x000000001512d9: jae short 0x00000000001512e8; xor r8d, r8d; mov eax, r8d; ret; 
0x00000000152434: jae short 0x0000000000152433; jmp qword ptr [rsi+0xf]; 
0x0000000015708e: jae short 0x000000000015708b; dec dword ptr [rcx-0x4cfa7639]; ret; 
0x00000000159719: jae short 0x0000000000159700; mov eax, 0x1; ret; 
0x00000000160438: jae short 0x000000000016043f; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000017d62a: jae short 0x000000000017d620; movsxd rcx, ecx; add rax, rcx; sub rax, rdi; ret; 
0x000000001916c1: jae short 0x00000000001916ad; jmp qword ptr [rsi+0x2e]; 
0x00000000191ba6: jae short 0x0000000000191bbb; nop [rax+rax]; call qword ptr [rbx]; 
0x00000000099297: jb 0x0000000000099319; cmp rsi, [rip+0x14dbe4]; jae short 0x0000000000099319; lea rax, [rax-0x8]; ret; 
0x000000000b4403: jb 0x00000000000b3850; lea r11, [rip+0xf4b40]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b38ee: jb 0x00000000000b3850; lea r11, [rip+0xf5655]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b38cf: jb 0x00000000000b3850; lea r11, [rip+0xf5674]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b436d: jb 0x00000000000b3919; movdqu [rdi+0x30], xmm7; ret; 
0x000000000b5c53: jb 0x00000000000b4f30; lea r11, [rip+0xf34d0]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b4fce: jb 0x00000000000b4f30; lea r11, [rip+0xf4155]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b4faf: jb 0x00000000000b4f30; lea r11, [rip+0xf4174]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b5bbd: jb 0x00000000000b4ff9; movdqu [rdi+0x30], xmm7; lea rax, [rdi+0x40]; ret; 
0x000000000b76b3: jb 0x00000000000b6df0; lea r11, [rip+0xf1c44]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6e8e: jb 0x00000000000b6df0; lea r11, [rip+0xf2469]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6e6f: jb 0x00000000000b6df0; lea r11, [rip+0xf2488]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b761d: jb 0x00000000000b6eb9; movdqu [rdi+0x30], xmm7; xor ch, ch; mov [rdi+0x40], ch; ret; 
0x000000000b7edf: jb 0x00000000000b8048; mov rcx, rdx; rep movsb [rdi], [rsi]; ret; 
0x0000000011b70f: jb 0x000000000011b688; mov rsi, r9; mov edi, r12d; mov eax, ebx; syscall; 
0x000000001835a0: jb 0x0000000000183385; vmovdqu [rdi+0x60], ymm7; mov byte ptr [rdi+0x80], 0x0; vzeroupper; ret; 
0x000000001842a0: jb 0x0000000000183eb5; vmovdqu [rdi+0x60], ymm7; vzeroupper; ret; 
0x00000000184fd0: jb 0x0000000000184be5; vmovdqu [rdi+0x60], ymm7; lea rax, [rdi+0x80]; vzeroupper; ret; 
0x000000001851ca: jb 0x0000000000185395; mov rcx, rdx; rep movsb [rdi], [rsi]; ret; 
0x00000000189f55: jb 0x000000000018a190; mov rcx, rdx; rep movsb [rdi], [rsi]; ret; 
0x000000000464a7: jb short 0x0000000000046485; xor eax, eax; ret; 
0x00000000082a05: jb short 0x0000000000082a27; mov [rcx], eax; ret; 
0x00000000082bac: jb short 0x0000000000082bce; mov [rcx], eax; ret; 
0x00000000089b9c: jb short 0x0000000000089bd0; mov [rdi+0x18], rax; mov [rsi], rax; xor eax, eax; ret; 
0x00000000089fbc: jb short 0x000000000008a000; mov [rdi+0x18], rax; mov [rsi], rax; xor eax, eax; ret; 
0x0000000009bf85: jb short 0x000000000009bf90; mov [r8], rsi; ret; 
0x0000000009bfc3: jb short 0x000000000009bfcc; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000009c47a: jb short 0x000000000009c41c; clc; call far fword ptr [rdx+0x31]; 
0x0000000009d51c: jb short 0x000000000009d52c; add dh, dh; mov byte ptr [rcx], 0x74; ret far; 
0x000000000b38b1: jb short 0x00000000000b3850; lea r11, [rip+0xf5696]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b3881: jb short 0x00000000000b3850; lea r11, [rip+0xf56c6]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b4f91: jb short 0x00000000000b4f30; lea r11, [rip+0xf4196]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b4f61: jb short 0x00000000000b4f30; lea r11, [rip+0xf41c6]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b514a: jb short 0x00000000000b5155; add [rax], al; ret; 
0x000000000b6e51: jb short 0x00000000000b6df0; lea r11, [rip+0xf24aa]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6e21: jb short 0x00000000000b6df0; lea r11, [rip+0xf24da]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b7e4d: jb short 0x00000000000b7e52; rep movsb [rdi], [rsi]; ret; 
0x000000000b7ef9: jb short 0x00000000000b7f01; movzx ecx, byte ptr [rsi]; mov [rdi], cl; ret; 
0x000000000b7efa: jb short 0x00000000000b7f01; movzx ecx, byte ptr [rsi]; mov [rdi], cl; ret; 
0x000000000b8339: jb short 0x00000000000b833d; mov [rdi], cl; ret; 
0x000000000c2d2b: jb short 0x00000000000c2cd0; mov r8d, 0xffffffff; mov eax, r8d; pop rbx; ret; 
0x000000000c5ec3: jb short 0x00000000000c5ecb; add [rcx+0x75db85c2], cl; fisttp dword ptr [rcx+0x295d5bd8], st; rol byte ptr [rcx+0x5c], 0x1; ret; 
0x000000000e09a5: jb short 0x00000000000e09ef; cmp edx, eax; jne short 0x00000000000e0a1d; mov eax, 0x7d00; ret; 
0x000000000fd39f: jb short 0x00000000000fd3a9; setne al; movzx eax, al; neg eax; ret; 
0x00000000101782: jb short 0x0000000000101777; jmp qword ptr [rsi+0x66]; 
0x0000000010f983: jb short 0x000000000010f985; add [rax], al; syscall; 
0x0000000011984c: jb short 0x0000000000119845; dec dword ptr [rbx+0x48082444]; add esp, 0x18; ret; 
0x0000000011bd33: jb short 0x000000000011bd48; mov qword ptr [rip+0xc7640], 0x2; ret; 
0x0000000011c157: jb short 0x000000000011c161; seta al; movzx eax, al; neg eax; ret; 
0x0000000011d1d3: jb short 0x000000000011d1e5; lea rdx, [rdx+rsi*4]; add eax, [rdx+rcx]; ret; 
0x0000000011da2b: jb short 0x000000000011da3d; lea rdx, [rdx+rsi*4]; add eax, [rdx+rcx]; ret; 
0x0000000011da8b: jb short 0x000000000011da9d; lea rdx, [rdx+rsi*4]; add eax, [rdx+rcx]; ret; 
0x000000001201da: jb short 0x0000000000120258; or al, 0x0; syscall; 
0x0000000012118f: jb short 0x00000000001211a0; mov eax, 0x1; ret; 
0x0000000013732a: jb short 0x0000000000137315; mov eax, 0xffffffff; pop rbx; ret; 
0x0000000013de22: jb short 0x000000000013ddd1; or al, [rax]; syscall; 
0x00000000143ec9: jb short 0x0000000000143eeb; ret; 
0x00000000143ec3: jb short 0x0000000000143eed; ja short 0x0000000000143eb0; mov [rdx+0x20], rsi; ret; 
0x0000000014bc52: jb short 0x000000000014bc26; or [rax], eax; syscall; 
0x00000000150af5: jb short 0x0000000000150b3f; mov eax, [rbp+0x8]; lea rsi, [rsp+0x4]; mov rdi, rbp; call qword ptr [rax+0x40]; 
0x00000000150be5: jb short 0x0000000000150c2f; mov eax, [rbp+0x8]; lea rsi, [rsp+0x4]; mov rdi, rbp; call qword ptr [rax+0x40]; 
0x00000000150cd5: jb short 0x0000000000150d1f; mov eax, [rbp+0x8]; lea rsi, [rsp+0x4]; mov rdi, rbp; call qword ptr [rax+0x40]; 
0x00000000150dc5: jb short 0x0000000000150e0f; mov eax, [rbp+0x8]; lea rsi, [rsp+0x4]; mov rdi, rbp; call qword ptr [rax+0x40]; 
0x00000000157543: jb short 0x000000000015753d; jmp qword ptr [rsi+0xf]; 
0x0000000015a934: jb short 0x000000000015a915; mov [rip+0x8c553], r8; xor eax, eax; mov [rip+0x8c542], rsi; ret; 
0x0000000015fe6e: jb short 0x000000000015fe77; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000015fecd: jb short 0x000000000015fedd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000015ff1e: jb short 0x000000000015ff27; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000015ff7b: jb short 0x000000000015ff86; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000015ffbe: jb short 0x000000000015ffc7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016001d: jb short 0x000000000016002d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000016006e: jb short 0x0000000000160077; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001600cb: jb short 0x00000000001600d6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000016010e: jb short 0x0000000000160117; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016016d: jb short 0x000000000016017d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x000000001601be: jb short 0x00000000001601c7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016021b: jb short 0x0000000000160226; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000016025e: jb short 0x0000000000160267; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001602bd: jb short 0x00000000001602cd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000016030e: jb short 0x0000000000160317; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016036b: jb short 0x0000000000160376; movaps [rdi], xmm4; notrack jmp r9; 
0x000000001603ae: jb short 0x00000000001603b7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016040d: jb short 0x000000000016041d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000016045e: jb short 0x0000000000160467; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001604bb: jb short 0x00000000001604c6; movaps [rdi], xmm4; notrack jmp r9; 
0x000000001604d6: jb short 0x00000000001604dd; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001604fe: jb short 0x0000000000160507; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016055d: jb short 0x000000000016056d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000160587: jb short 0x000000000016058f; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001605ae: jb short 0x00000000001605b7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016060b: jb short 0x0000000000160616; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000016064e: jb short 0x0000000000160657; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001606ad: jb short 0x00000000001606bd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x000000001606fe: jb short 0x0000000000160707; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016075b: jb short 0x0000000000160766; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000016079e: jb short 0x00000000001607a7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001607fb: jb short 0x0000000000160810; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000016084e: jb short 0x0000000000160857; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001608ab: jb short 0x00000000001608b6; movaps [rdi], xmm4; notrack jmp r9; 
0x000000001608ee: jb short 0x00000000001608f7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016094d: jb short 0x000000000016095d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000016099e: jb short 0x00000000001609a7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001609fb: jb short 0x0000000000160a06; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000160a3e: jb short 0x0000000000160a47; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000160a9d: jb short 0x0000000000160aad; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000160aee: jb short 0x0000000000160af7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000160b4b: jb short 0x0000000000160b56; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000160b8e: jb short 0x0000000000160b97; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000160bed: jb short 0x0000000000160bfd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000160c3e: jb short 0x0000000000160c47; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000160c9b: jb short 0x0000000000160ca6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000160cde: jb short 0x0000000000160ce7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000160d3d: jb short 0x0000000000160d4d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000160d8e: jb short 0x0000000000160d97; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000160deb: jb short 0x0000000000160df6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000160e2e: jb short 0x0000000000160e37; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000160e2c: jb short 0x0000000000160e37; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000160e8d: jb short 0x0000000000160e9d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000160ede: jb short 0x0000000000160ee7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000160edc: jb short 0x0000000000160ee7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000160f3b: jb short 0x0000000000160f46; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000160f7e: jb short 0x0000000000160f87; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000160fdd: jb short 0x0000000000160fed; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000016102e: jb short 0x0000000000161037; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016108b: jb short 0x0000000000161096; movaps [rdi], xmm4; notrack jmp r9; 
0x000000001610ce: jb short 0x00000000001610d7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016112d: jb short 0x000000000016113d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000016117e: jb short 0x0000000000161187; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001611db: jb short 0x00000000001611e6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000016284e: jb short 0x0000000000162857; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001628ad: jb short 0x00000000001628bd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x000000001628fe: jb short 0x0000000000162907; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016295b: jb short 0x0000000000162966; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000016299e: jb short 0x00000000001629a7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001629fd: jb short 0x0000000000162a0d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000162a4e: jb short 0x0000000000162a57; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000162aab: jb short 0x0000000000162ab6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000162aee: jb short 0x0000000000162af7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000162b4d: jb short 0x0000000000162b5d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000162b9e: jb short 0x0000000000162ba7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000162bfb: jb short 0x0000000000162c06; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000162c3e: jb short 0x0000000000162c47; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000162c9d: jb short 0x0000000000162cad; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000162cee: jb short 0x0000000000162cf7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000162d4b: jb short 0x0000000000162d56; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000162d8e: jb short 0x0000000000162d97; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000162ded: jb short 0x0000000000162dfd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000162e3e: jb short 0x0000000000162e47; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000162e9b: jb short 0x0000000000162ea6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000162ede: jb short 0x0000000000162ee7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000162f3d: jb short 0x0000000000162f4d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000162f8e: jb short 0x0000000000162f97; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000162feb: jb short 0x0000000000162ff6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000016302e: jb short 0x0000000000163037; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016308d: jb short 0x000000000016309d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x000000001630de: jb short 0x00000000001630e7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016313b: jb short 0x0000000000163146; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000016317e: jb short 0x0000000000163187; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001631db: jb short 0x00000000001631f0; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000016322e: jb short 0x0000000000163237; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016328b: jb short 0x0000000000163296; movaps [rdi], xmm4; notrack jmp r9; 
0x000000001632ce: jb short 0x00000000001632d7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016332d: jb short 0x000000000016333d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000016337e: jb short 0x0000000000163387; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001633db: jb short 0x00000000001633e6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000016341e: jb short 0x0000000000163427; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016347d: jb short 0x000000000016348d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x000000001634ce: jb short 0x00000000001634d7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016352b: jb short 0x0000000000163536; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000016356e: jb short 0x0000000000163577; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001635cd: jb short 0x00000000001635dd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000016361e: jb short 0x0000000000163627; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016367b: jb short 0x0000000000163686; movaps [rdi], xmm4; notrack jmp r9; 
0x000000001636be: jb short 0x00000000001636c7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016371d: jb short 0x000000000016372d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000016376e: jb short 0x0000000000163777; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001637cb: jb short 0x00000000001637d6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000016380c: jb short 0x0000000000163817; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016380e: jb short 0x0000000000163817; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016386d: jb short 0x000000000016387d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x000000001638be: jb short 0x00000000001638c7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001638bc: jb short 0x00000000001638c7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016391b: jb short 0x0000000000163926; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000016395e: jb short 0x0000000000163967; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001639bd: jb short 0x00000000001639cd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000163a0e: jb short 0x0000000000163a17; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000163a6b: jb short 0x0000000000163a76; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000163aae: jb short 0x0000000000163ab7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000163b0d: jb short 0x0000000000163b1d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000163b5e: jb short 0x0000000000163b67; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000163bbb: jb short 0x0000000000163bc6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000017656a: jb short 0x000000000017656e; add [rax], al; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x000000001851ea: jb short 0x00000000001851f1; movzx ecx, byte ptr [rsi]; mov [rdi], cl; ret; 
0x000000001856d7: jb short 0x00000000001856db; mov [rdi], cl; vzeroupper; ret; 
0x00000000189602: jb short 0x0000000000189608; mov cl, [rsi]; mov [rdi], cl; ret; 
0x00000000189c79: jb short 0x0000000000189c8a; vmovups [rdi], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x00000000189c8d: jb short 0x0000000000189c99; vmovdqu [rdi], ymm2; vmovdqu [rsi-0x20], ymm2; ret; 
0x00000000189ca6: jb short 0x0000000000189cb2; vmovq [rdi], xmm0; vmovq [rsi-0x8], xmm0; ret; 
0x00000000189cb9: jb short 0x0000000000189cc1; mov [rdi], ecx; mov [rsi-0x4], ecx; ret; 
0x00000000189cc4: jb short 0x0000000000189cce; mov [rdi], cx; mov [rsi-0x2], cx; ret; 
0x00000000189cd1: jb short 0x0000000000189cd5; mov [rdi], cl; ret; 
0x00000000189f7a: jb short 0x0000000000189f81; movzx ecx, byte ptr [rsi]; mov [rdi], cl; ret; 
0x0000000018a59f: jb short 0x000000000018a5a3; mov [rdi], cl; vzeroupper; ret; 
0x00000000073cff: jbe 0x0000000000073f09; mov rdx, r12; mov rsi, r13; mov rdi, r14; call qword ptr [rbx+0x38]; 
0x00000000073a16: jbe 0x00000000000740d4; mov rsi, [rbp-0x8c8]; mov rdx, r13; mov rdi, r14; call qword ptr [r12+0x38]; 
0x00000000073459: jbe 0x0000000000074100; mov rsi, [rbp-0x8c8]; mov rdx, r13; mov rdi, r14; call qword ptr [rbx+0x38]; 
0x00000000072cc8: jbe 0x0000000000074290; mov rdx, r12; mov rsi, r13; mov rdi, r14; call qword ptr [rcx+0x38]; 
0x00000000072ef0: jbe 0x00000000000742a8; mov rdx, r12; mov rsi, r13; mov rdi, r14; call qword ptr [rcx+0x38]; 
0x00000000075239: jbe 0x0000000000075e78; mov rdx, r13; mov rsi, r14; mov rdi, rbp; call qword ptr [rbx+0x38]; 
0x00000000074830: jbe 0x0000000000076098; mov rsi, [rsp+0x8]; mov rdx, rbx; mov rdi, rbp; call qword ptr [r12+0x38]; 
0x0000000007578e: jbe 0x0000000000076260; lea rsi, [rip-0x9b3]; mov dword ptr [rsp+0x48], 0x1; mov rbx, rdi; jmp rsi; 
0x00000000076449: jbe 0x00000000000766e8; mov rdx, r13; mov rsi, r14; mov rdi, rbp; call qword ptr [r12+0x38]; 
0x00000000074e9e: jbe 0x0000000000076a8b; mov rdx, r13; mov rsi, r14; mov rdi, rbp; call qword ptr [rcx+0x38]; 
0x00000000074c7e: jbe 0x0000000000076a9f; mov rdx, r13; mov rsi, r14; mov rdi, rbp; call qword ptr [rcx+0x38]; 
0x00000000077101: jbe 0x0000000000077210; movsxd rdx, r13d; mov rdi, rbx; call qword ptr [r14+0x38]; 
0x00000000078f85: jbe 0x0000000000079c6e; mov rdx, rbx; mov rsi, r10; mov rdi, r15; call qword ptr [r12+0x38]; 
0x0000000007930b: jbe 0x0000000000079cd0; mov rdx, rbx; mov rsi, r10; mov rdi, r15; call qword ptr [r13+0x38]; 
0x000000000794b2: jbe 0x0000000000079fbf; mov rdx, rbx; mov rsi, r10; mov rdi, r15; call qword ptr [r13+0x38]; 
0x0000000007a7b4: jbe 0x000000000007b8b8; mov rdx, r14; mov rsi, r15; mov rdi, rbp; call qword ptr [rbx+0x38]; 
0x0000000007a35d: jbe 0x000000000007bcd0; mov rsi, [rsp]; mov rdx, rbx; mov rdi, rbp; call qword ptr [r12+0x38]; 
0x0000000007b483: jbe 0x000000000007bdb0; lea rcx, [rip-0xc70]; mov dword ptr [rsp+0x38], 0x1; mov rbx, rsi; jmp rcx; 
0x0000000007bfe9: jbe 0x000000000007c2a0; mov rdx, r15; mov rsi, r12; mov rdi, rbp; call qword ptr [r14+0x38]; 
0x0000000007b6b3: jbe 0x000000000007c49a; mov rdx, r15; mov rsi, r12; mov rdi, rbp; call qword ptr [rax+0x38]; 
0x0000000007bba5: jbe 0x000000000007c6c0; mov rdx, r15; mov rsi, r12; mov rdi, rbp; call qword ptr [rax+0x38]; 
0x0000000007cba2: jbe 0x000000000007cca0; movsxd rdx, ebp; mov rdi, rbx; call qword ptr [r14+0x38]; 
0x0000000007e651: jbe 0x000000000007e750; mov rsi, rsp; mov rdi, rbp; call qword ptr [rbx+0x90]; 
0x0000000007e7c3: jbe 0x000000000007e920; xor esi, esi; mov rdi, rbp; call qword ptr [rbx+0x10]; 
0x0000000007ebaf: jbe 0x000000000007ecbb; xor esi, esi; mov edx, 0x2; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x0000000007f6e8: jbe 0x000000000007f790; mov rdx, r12; mov rsi, rbp; mov rdi, rbx; call qword ptr [r13+0x38]; 
0x0000000007fd1e: jbe 0x000000000007fdf8; mov rdx, r12; mov rsi, r14; mov rdi, rbx; call qword ptr [r15+0x38]; 
0x00000000080e58: jbe 0x0000000000080ef0; mov rdx, rbx; mov rsi, r12; call qword ptr [r14+0x38]; 
0x00000000081722: jbe 0x0000000000081810; mov rdx, r12; mov rsi, rbp; mov rdi, rbx; call qword ptr [r13+0x58]; 
0x00000000083c00: jbe 0x0000000000083d90; mov esi, r12d; mov rdi, r14; call qword ptr [rax+0x18]; 
0x00000000084399: jbe 0x0000000000084558; mov rdi, r15; call qword ptr [rax+0x20]; 
0x00000000085e13: jbe 0x0000000000086202; xor esi, esi; mov edx, 0x2; mov rdi, r15; call qword ptr [r13+0x80]; 
0x00000000086009: jbe 0x000000000008620c; xor esi, esi; mov edx, 0x1; mov rdi, r15; call qword ptr [rbp+0x80]; 
0x000000000860fe: jbe 0x0000000000086228; xor edx, edx; mov rdi, r15; call qword ptr [rbx+0x80]; 
0x00000000086990: jbe 0x0000000000086a70; mov edx, 0x1; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x000000000879ef: jbe 0x0000000000087b80; mov rdi, rbx; call qword ptr [r13+0x60]; 
0x0000000008935f: jbe 0x00000000000894e0; mov rdi, rbx; call qword ptr [r13+0x60]; 
0x0000000008abf2: jbe 0x000000000008ad28; mov rsi, rsp; mov rdi, rbp; call qword ptr [r15+0x90]; 
0x0000000008b078: jbe 0x000000000008b2c0; mov edx, r13d; mov rsi, r12; mov rdi, rbp; call qword ptr [r15+0x80]; 
0x0000000008b12d: jbe 0x000000000008b33c; xor esi, esi; mov edx, 0x2; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x0000000008b201: jbe 0x000000000008b346; xor esi, esi; mov edx, 0x1; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x0000000008b2a6: jbe 0x000000000008b350; xor edx, edx; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x0000000008b4a5: jbe 0x000000000008b710; lea rsi, [rsp+0x20]; mov rdi, rbp; call qword ptr [rax+0x90]; 
0x0000000008b872: jbe 0x000000000008b960; mov rsi, r13; mov rdi, rbx; call qword ptr [rbp+0x70]; 
0x0000000008ba22: jbe 0x000000000008baf0; xor edx, edx; mov rsi, rbp; mov rdi, rbx; call qword ptr [r12+0x80]; 
0x0000000008bbf4: jbe 0x000000000008bda0; mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rax+0x18]; 
0x0000000008bec8: jbe 0x000000000008bff8; mov rsi, rsp; mov rdi, rbp; call qword ptr [r13+0x90]; 
0x0000000008c0e4: jbe 0x000000000008c2e0; mov rsi, rsp; mov rdi, rbp; call qword ptr [r12+0x90]; 
0x0000000008c40f: jbe 0x000000000008c500; mov rdi, rbx; call qword ptr [r12+0x88]; 
0x0000000008cea1: jbe 0x000000000008cfa0; sub rsi, rdx; mov rdi, rbx; mov edx, 0x1; call qword ptr [r14+0x80]; 
0x0000000008e10b: jbe 0x000000000008e198; mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rbx+0x18]; 
0x0000000008e2e3: jbe 0x000000000008e378; mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rbx+0x18]; 
0x0000000008e832: jbe 0x000000000008ea90; mov rdi, rbx; call qword ptr [rax+0x20]; 
0x0000000008e8e2: jbe 0x000000000008eaf0; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rax+0x18]; 
0x0000000008eb48: jbe 0x000000000008ec18; mov rdi, rbx; call qword ptr [r13+0x60]; 
0x0000000008f151: jbe 0x000000000008f2d0; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rax+0x18]; 
0x0000000008f4fd: jbe 0x000000000008f690; xor edx, edx; xor esi, esi; mov rdi, rbx; call qword ptr [rax+0x58]; 
0x0000000008f8c0: jbe 0x000000000008f9a0; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [r15+0x18]; 
0x000000000a822f: jbe 0x00000000000a84d0; add rax, rdi; add rax, rcx; ret; 
0x000000000ca12f: jbe 0x00000000000ca3d0; add rax, rdi; add rax, rcx; ret; 
0x0000000011b6c7: jbe 0x000000000011b932; mov rsi, r9; mov edi, r12d; mov eax, ebx; syscall; 
0x0000000012f308: jbe 0x000000000012f279; xor eax, eax; pop rbx; ret; 
0x0000000017e04c: jbe 0x000000000017e230; add rax, rdi; add rax, rcx; vzeroupper; ret; 
0x00000000185afc: jbe 0x0000000000185ce0; add rax, rdi; add rax, rcx; vzeroupper; ret; 
0x000000000313bd: jbe short 0x00000000000313bf; add [rbp-0x77], cl; ret; 
0x0000000003736e: jbe short 0x0000000000037387; mov rax, [rdx+rdi*8+0x40]; ret; 
0x00000000050226: jbe short 0x0000000000050289; sbb [rax], eax; syscall; 
0x000000000719ed: jbe short 0x0000000000071a50; movsxd r12, r12d; mov rdx, r12; call qword ptr [r13+0x38]; 
0x000000000772cc: jbe short 0x0000000000077348; movsxd rbx, ebx; mov rdx, rbx; call qword ptr [r13+0x38]; 
0x0000000007ed4e: jbe short 0x000000000007eda8; mov rdi, rbx; call qword ptr [rbp+0x60]; 
0x0000000007fe37: jbe short 0x000000000007fe33; jmp qword ptr [rsi+0xf]; 
0x00000000080595: jbe short 0x00000000000805c8; movsxd rdx, ebx; mov rsi, r13; mov rdi, r15; call qword ptr [rbp+0x38]; 
0x00000000081554: jbe short 0x00000000000815d0; mov rdx, r12; mov rsi, rbp; mov rdi, rbx; call qword ptr [r13+0x58]; 
0x000000000817ef: jbe short 0x0000000000081864; mov rdi, rbx; call qword ptr [rbp+0x68]; 
0x00000000082391: jbe short 0x00000000000823d0; mov rdx, r13; mov rsi, rbp; mov rdi, rbx; call qword ptr [r14+0x38]; 
0x00000000082474: jbe short 0x0000000000082498; mov rdx, rbx; mov rsi, r13; mov rdi, rbp; call qword ptr [r14+0x38]; 
0x00000000082785: jbe short 0x00000000000827b8; movsxd rdx, ebx; mov rsi, r13; mov rdi, r15; call qword ptr [rbp+0x38]; 
0x00000000083aee: jbe short 0x0000000000083b28; mov rdi, rbx; call qword ptr [rbp+0x20]; 
0x00000000083f47: jbe short 0x0000000000083f68; mov rax, [rax+0xe0]; mov esi, 0xffffffff; call qword ptr [rax+0x18]; 
0x00000000084633: jbe short 0x0000000000084660; mov rdi, rbx; call qword ptr [rbp+0x30]; 
0x000000000846d1: jbe short 0x00000000000846e0; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp+0x30]; 
0x000000000886ad: jbe short 0x0000000000088700; xor esi, esi; mov rdi, rbp; call qword ptr [r13+0x10]; 
0x0000000008a4ff: jbe short 0x000000000008a520; call qword ptr [rbx+0x60]; 
0x0000000008a73d: jbe short 0x000000000008a798; mov rdx, r12; mov rsi, r13; call qword ptr [r14+0x38]; 
0x0000000008a8a1: jbe short 0x000000000008a8e8; mov rdx, rbx; mov rsi, r12; mov rdi, rbp; call qword ptr [r13+0x38]; 
0x0000000008a95e: jbe short 0x000000000008a9c0; mov edx, 0x1; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x0000000008aa0e: jbe short 0x000000000008aa30; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x0000000008c56f: jbe short 0x000000000008c5a8; mov rdi, rbp; call qword ptr [rbx+0x88]; 
0x0000000008c628: jbe short 0x000000000008c690; xor esi, esi; mov edx, 0x2; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x0000000008dec8: jbe short 0x000000000008df28; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp+0x18]; 
0x0000000008dfae: jbe short 0x000000000008dfc0; mov rax, [rbx+0x18]; add rsp, 0x10; pop rbx; jmp rax; 
0x0000000008e438: jbe short 0x000000000008e4a0; mov rdi, rbx; call qword ptr [rbp+0x68]; 
0x0000000008e4ee: jbe short 0x000000000008e518; mov rdi, rbx; call qword ptr [rbp+0x20]; 
0x0000000008e585: jbe short 0x000000000008e5e0; lea rbx, [rsi+0x1]; mov rdi, r15; movzx esi, byte ptr [rsi]; call qword ptr [rax+0x18]; 
0x0000000008e75a: jbe short 0x000000000008e770; mov rax, [rbx+0x40]; add rsp, 0x20; pop rbx; jmp rax; 
0x0000000008ef6e: jbe short 0x000000000008efa0; mov rdi, rbx; call qword ptr [rbp+0x30]; 
0x0000000008f001: jbe short 0x000000000008f020; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp+0x30]; 
0x0000000008fab3: jbe short 0x000000000008fb10; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [r12+0x18]; 
0x00000000090e72: jbe short 0x0000000000090ed4; movdqu xmm7, [rax+0x80]; xor eax, eax; movups [rsi+0x70], xmm7; ret; 
0x0000000009113c: jbe short 0x0000000000091140; ret; 
0x00000000091379: jbe short 0x0000000000091380; neg eax; ret; 
0x000000000913be: jbe short 0x00000000000913c8; neg eax; ret; 
0x0000000009210d: jbe short 0x0000000000092110; ret; 
0x0000000009214d: jbe short 0x0000000000092150; ret; 
0x000000000923cd: jbe short 0x00000000000923d0; ret; 
0x0000000009242d: jbe short 0x0000000000092430; ret; 
0x0000000009281f: jbe short 0x00000000000927c8; add rsp, 0x8; ret; 
0x0000000009ed7d: jbe short 0x000000000009eda1; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000000a8187: jbe short 0x00000000000a8194; movzx ecx, byte ptr [rsi+rdx]; movzx eax, byte ptr [rdi+rdx]; sub eax, ecx; ret; 
0x000000000a8496: jbe short 0x00000000000a84d0; add rax, rdi; ret; 
0x000000000a84a6: jbe short 0x00000000000a84d0; lea rax, [rdi+rax+0x10]; ret; 
0x000000000a84b6: jbe short 0x00000000000a84d0; lea rax, [rdi+rax+0x20]; ret; 
0x000000000a84c6: jbe short 0x00000000000a84d0; lea rax, [rdi+rax+0x30]; ret; 
0x000000000b638a: jbe short 0x00000000000b63ba; str [rcx+0x63]; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000ca29c: jbe short 0x00000000000ca2ed; xor [rsi+0xf], ah; xlat [rbx]; ret; 
0x000000000ca33e: jbe short 0x00000000000ca38f; adc [rsi+0xf], ah; xlat [rbx]; rol dword ptr [rbp+0x315775c0], 0xc0; ret; 
0x000000000ca396: jbe short 0x00000000000ca3d0; add rax, rdi; ret; 
0x000000000ca3a6: jbe short 0x00000000000ca3d0; lea rax, [rdi+rax+0x10]; ret; 
0x000000000ca3b6: jbe short 0x00000000000ca3d0; lea rax, [rdi+rax+0x20]; ret; 
0x000000000ca3c6: jbe short 0x00000000000ca3d0; lea rax, [rdi+rax+0x30]; ret; 
0x000000000d026b: jbe short 0x00000000000d0270; ret; 
0x000000000dfea5: jbe short 0x00000000000dfea7; add [rax], al; syscall; 
0x00000000107242: jbe short 0x00000000001072a4; movdqu xmm7, [rdi+0x78]; movups [rsi+0x70], xmm7; ret; 
0x0000000010728e: jbe short 0x00000000001072f0; movups [rdi+0x68], xmm6; movdqu xmm7, [rsi+0x70]; movups [rdi+0x78], xmm7; ret; 
0x00000000107b97: jbe short 0x0000000000107bf9; movdqu xmm7, [rdi+0xf8]; movups [rsi+0x70], xmm7; ret; 
0x00000000107c20: jbe short 0x0000000000107c82; movups [rdi+0xe8], xmm6; movdqu xmm7, [rsi+0x70]; movups [rdi+0xf8], xmm7; ret; 
0x0000000010da1b: jbe short 0x000000000010da38; cmp eax, 0xffffffa1; je short 0x000000000010da28; neg eax; ret; 
0x0000000010dc6b: jbe short 0x000000000010dc88; cmp eax, 0xffffffa1; je short 0x000000000010dc78; neg eax; ret; 
0x00000000114b04: jbe short 0x0000000000114b4f; mov edi, [rsp]; call rbx; 
0x00000000115b7b: jbe short 0x0000000000115ba8; mov rsi, r12; mov rdi, r14; call r13; 
0x00000000119396: jbe short 0x000000000011938f; dec dword ptr [rbx+0x48042444]; add esp, 0x20; pop rbp; ret; 
0x0000000011bd2c: jbe short 0x000000000011bd3a; add [rax-0x77], cl; adc [r10+0x13], r14b; mov qword ptr [rip+0xc7640], 0x2; ret; 
0x00000000143380: jbe short 0x0000000000143390; mov eax, 0x2; ret; 
0x000000001465a6: jbe short 0x00000000001465a5; in eax, dx; jmp qword ptr [rsi+0xf]; 
0x0000000014c293: jbe short 0x000000000014c2dd; add esp, 0x28; pop rbx; pop r12; ret; 
0x00000000156d6a: jbe short 0x0000000000156d8f; or [rax], eax; syscall; 
0x00000000156f77: jbe short 0x0000000000156f80; ret; 
0x0000000015f8c7: jbe short 0x000000000015f8d4; movzx ecx, byte ptr [rsi+rdx]; movzx eax, byte ptr [rdi+rdx]; sub eax, ecx; ret; 
0x000000001600e6: jbe short 0x00000000001600ed; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160198: jbe short 0x000000000016019f; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000179707: jbe short 0x0000000000179714; movzx ecx, byte ptr [rsi+rdx]; movzx eax, byte ptr [rdi+rdx]; sub eax, ecx; ret; 
0x0000000017e1d7: jbe short 0x000000000017e230; add rax, 0x20; add rax, rdi; vzeroupper; ret; 
0x0000000017e1f7: jbe short 0x000000000017e230; add rax, 0x40; add rax, rdi; vzeroupper; ret; 
0x0000000017e217: jbe short 0x000000000017e230; add rax, 0x60; add rax, rdi; vzeroupper; ret; 
0x0000000017e1c7: jbe short 0x000000000017e230; add rax, rdi; vzeroupper; ret; 
0x00000000182507: jbe short 0x0000000000182580; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x00000000184d56: jbe short 0x0000000000184d59; add [rax], al; vzeroupper; ret; 
0x00000000185897: jbe short 0x000000000018586a; vpmovmskb eax, xmm2; sub eax, 0xffff; jne 0x0000000000185820; ret; 
0x000000001858d7: jbe short 0x00000000001858f0; vpmovmskb eax, xmm2; sub eax, 0xffff; jne 0x0000000000185820; ret; 
0x00000000185c87: jbe short 0x0000000000185ce0; add rax, 0x20; add rax, rdi; vzeroupper; ret; 
0x00000000185ca7: jbe short 0x0000000000185ce0; add rax, 0x40; add rax, rdi; vzeroupper; ret; 
0x00000000185cc7: jbe short 0x0000000000185ce0; add rax, 0x60; add rax, rdi; vzeroupper; ret; 
0x00000000185c77: jbe short 0x0000000000185ce0; add rax, rdi; vzeroupper; ret; 
0x00000000028fe2: je 0x00000000000266e2; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000029012: je 0x00000000000266fd; add rsp, 0x28; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000149095: je 0x0000000000028387; mov rax, [rsp+0x58]; mov rdi, r12; call qword ptr [rax+0x20]; 
0x00000000028e6c: je 0x0000000000028f58; add rsp, 0x98; ret; 
0x000000000405db: je 0x0000000000040528; ret; 
0x00000000094d6c: je 0x0000000000094e08; mov rax, [rip+0x14e017]; mov [rsp+0x8], r8; xor edi, edi; call qword ptr [rax]; 
0x00000000099e57: je 0x0000000000099f30; call rax; 
0x00000000099f8f: je 0x000000000009a060; call rax; 
0x0000000009a36b: je 0x000000000009a4e0; mov rdx, r13; mov rdi, r12; call rax; 
0x0000000009aa7d: je 0x000000000009ab30; mov rsi, r12; mov rdi, rbp; call rax; 
0x0000000009ace2: je 0x000000000009ad90; mov rsi, rbp; mov rdi, r12; call rax; 
0x0000000009aec5: je 0x000000000009af70; mov rdi, r13; mov rdx, rbp; mov rsi, r12; call rax; 
0x0000000009b0a4: je 0x000000000009b1f0; mov rdx, r15; mov rsi, r14; mov rdi, r13; call rax; 
0x0000000009b6d6: je 0x000000000009b840; mov rdi, [rdi+0x48]; mov rsi, rbp; call rax; 
0x000000000a8a60: je 0x00000000000a89e0; bsr eax, eax; add rax, rdi; add rax, rsi; ret; 
0x000000000adc04: je 0x00000000000addd0; bsr rax, rax; add rax, rdi; ret; 
0x000000000ade94: je 0x00000000000addd0; bsr rax, rsi; add rax, rdi; ret; 
0x000000000adc9e: je 0x00000000000addd0; bsr rsi, rsi; lea rax, [rdi+rsi]; ret; 
0x000000000ae0ec: je 0x00000000000ae190; bsf rax, rdx; ret; 
0x000000000b854d: je 0x00000000000b846a; lea eax, [rdx+rdx]; pop rbx; and eax, 0x7ff80000; ret; 
0x000000000cb566: je 0x00000000000cb4c5; lea rax, [rdi-0x10]; ret; 
0x000000000cb584: je 0x00000000000cb4c5; test al, 0xf0; jne 0x00000000000cb650; lea rax, [rdi-0x10]; ret; 
0x000000000cb730: je 0x00000000000cb7d0; bsf rax, rdx; shr rax, 0x2; ret; 
0x000000000eacb3: je 0x00000000000eac2d; ret; 
0x000000000f59f3: je 0x00000000000f7190; lea rsi, [rip+0xb55b4]; movsxd rax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x0000000011634b: je 0x0000000000116440; call rax; 
0x00000000121815: je 0x00000000001218de; mov rdx, [rsp+0x10]; xor esi, esi; mov edi, 0x2000004; call rax; 
0x0000000012f32c: je 0x000000000012f2a3; mov [rsi+0x5], al; mov rax, rsi; pop rbx; ret; 
0x0000000014169e: je 0x0000000000141772; mov rax, [rbx+0x20]; mov rdi, rbp; lea r15, [rsp+0x50]; call qword ptr [rax+0x20]; 
0x0000000014166f: je 0x0000000000141772; mov rdi, [r12]; mov rsi, rbp; mov rax, [rdi+0x38]; call qword ptr [rax+0x8]; 
0x0000000014242e: je 0x000000000014236f; mov rax, [rbp+0x8]; mov esi, r14d; mov rdi, rbp; call qword ptr [rax+0x28]; 
0x000000001423f7: je 0x000000000014236f; mov rax, [rbp+0x8]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x00000000142b24: je 0x00000000001429ae; mov rdi, rbx; call rax; 
0x00000000143993: je 0x0000000000143ac1; mov rdi, r12; call qword ptr [rbx]; 
0x000000001470cd: je 0x0000000000147280; mov rax, [rbx+0xd0]; mov rsi, [rsp+0x18]; mov rdi, r12; call qword ptr [rax+0x8]; 
0x00000000147865: je 0x0000000000147990; mov rax, [r13+0xd0]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x00000000148780: je 0x00000000001486e8; mov rax, [rbp+0x8]; lea rsi, [rsp+0xc]; mov rdi, rbp; call qword ptr [rax+0x48]; 
0x00000000149e33: je 0x0000000000149fd0; mov rax, [rbx+0x70]; mov rsi, [rsp+0x18]; mov rdi, r12; call qword ptr [rax+0x8]; 
0x0000000014a32d: je 0x000000000014a430; mov rax, [r14+0x70]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x0000000014aced: je 0x000000000014a7dc; mov rax, [rsp+0x48]; mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x18]; 
0x0000000014a8b2: je 0x000000000014ae0e; mov rax, [rbx+0x60]; mov rdi, r15; call qword ptr [rax+0x20]; 
0x0000000014b646: je 0x000000000014b591; mov rax, [rdi+0x8]; lea rdx, [rsp+0x18]; mov esi, 0x6; call qword ptr [rax+0x28]; 
0x0000000014b56d: je 0x000000000014b640; mov rax, [rbx]; mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x20]; 
0x0000000014b6ca: je 0x000000000014b760; mov rax, [rdi+0x8]; lea rdx, [rsp+0xc]; mov esi, 0xd; call qword ptr [rax+0x28]; 
0x0000000014cfba: je 0x000000000014cf35; mov fs:[rbx], rax; pop rbx; ret; 
0x0000000014cf2f: je 0x000000000014cfd0; pop rbx; ret; 
0x0000000014cfff: je 0x000000000014d0a0; sub rax, 0xffffffffffffff80; pop rbx; ret; 
0x0000000014d0cf: je 0x000000000014d170; add rax, 0xa0; pop rbx; ret; 
0x0000000014d19f: je 0x000000000014d240; add rax, 0xa8; pop rbx; ret; 
0x0000000014fbb2: je 0x000000000014fb33; mov rax, [rbp+0x8]; lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax+0x8]; 
0x0000000014fca2: je 0x000000000014fc23; mov rax, [rbp+0x8]; lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax+0x8]; 
0x0000000014fd92: je 0x000000000014fd13; mov rax, [rbp+0x8]; lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax+0x8]; 
0x0000000014fe82: je 0x000000000014fe03; mov rax, [rbp+0x8]; lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax+0x8]; 
0x000000001592c7: je 0x0000000000159238; mov [rsp+0x8], eax; lea rdi, [r12+0x9b0]; call qword ptr [r12+0xf90]; 
0x00000000172545: je 0x00000000001720f0; mov rax, [rcx]; mov [rdx], rax; mov rax, rdi; ret; 
0x0000000018329f: je 0x00000000001833e0; mov byte ptr [rdi], 0x0; vzeroupper; ret; 
0x0000000018368a: je 0x0000000000183480; mov byte ptr [rdi], 0x0; vzeroupper; ret; 
0x0000000018437a: je 0x0000000000184030; vzeroupper; ret; 
0x00000000184256: je 0x0000000000184110; vzeroupper; ret; 
0x000000001850ba: je 0x0000000000184d60; mov rax, rdi; vzeroupper; ret; 
0x00000000184f86: je 0x0000000000184e40; vzeroupper; ret; 
0x0000000002bb90: je short 0x000000000002bb98; ret; 
0x0000000002bfe1: je short 0x000000000002c007; push rax; mov rdi, [rsp+0x58]; mov rax, [rsp+0x28]; call rax; 
0x0000000002c569: je short 0x000000000002c58f; pop rax; mov rdi, [rsp+0x60]; mov rax, [rsp+0x20]; call rax; 
0x0000000002ccd6: je short 0x000000000002ccfc; push rax; mov rdi, [rsp+0x58]; mov rax, [rsp+0x28]; call rax; 
0x0000000002d27f: je short 0x000000000002d2a5; push rax; mov rdi, [rsp+0x58]; mov rax, [rsp+0x20]; call rax; 
0x0000000002da75: je short 0x000000000002da9b; mov rdi, [rsp+0x50]; mov rax, [rsp+0x18]; call rax; 
0x0000000002ed84: je short 0x000000000002edaa; pop rax; mov rdi, [rsp+0x50]; call r14; 
0x0000000002fd33: je short 0x000000000002fd59; push rax; mov rdi, [rsp+0x48]; mov rax, [rsp+0x28]; call rax; 
0x00000000030d24: je short 0x0000000000030d4a; pop rax; mov rdi, [rsp+0x50]; mov rax, [rsp+0x20]; call rax; 
0x000000000323cb: je short 0x00000000000323f1; pop rax; mov rdi, [rsp+0x50]; mov rax, [rsp+0x10]; call rax; 
0x00000000033be2: je short 0x0000000000033c08; mov rdi, [rsp+0x38]; call r15; 
0x00000000033d3e: je short 0x0000000000033d64; mov rdi, [rsp+0x38]; lea r8, [rsp+0xa0]; call r15; 
0x00000000034806: je short 0x0000000000034810; cmp esi, 0x3; je short 0x0000000000034810; ret; 
0x0000000003480b: je short 0x0000000000034810; ret; 
0x0000000003482d: je short 0x0000000000034848; pop rbx; ret; 
0x00000000035654: je short 0x0000000000035658; call rax; 
0x000000000358d5: je short 0x00000000000358d9; call rax; 
0x000000000369ff: je short 0x0000000000036a03; call rax; 
0x0000000003d44e: je short 0x000000000003d456; add [rax-0x9], ecx; ror byte ptr [rax+0x1], 0x1; ret; 
0x00000000040869: je short 0x0000000000040870; ret; 
0x00000000040c29: je short 0x0000000000040c30; ret; 
0x000000000422d7: je short 0x00000000000422e3; mov qword ptr [rdi], 0x0; xor eax, eax; ret; 
0x00000000042307: je short 0x0000000000042319; mov rax, 0xfffffffe7fffffff; mov [rdi], rax; xor eax, eax; ret; 
0x000000000425eb: je short 0x0000000000042610; lea edx, [rax+0x1]; mov [rip+0x1a0bb6], edx; ret; 
0x00000000045614: je short 0x000000000004561c; mov dword ptr [rdi], 0x0; pop rbx; ret; 
0x000000000464bd: je short 0x0000000000046480; mov eax, 0xffffffff; ret; 
0x00000000052457: je short 0x000000000005245f; cmp byte ptr [rax-0x1], 0x2f; jne short 0x0000000000052450; pop rbx; ret; 
0x000000000536e4: je short 0x00000000000536ee; mov rcx, [rcx+rax*8]; mov [rdx+rax*8], rcx; xor eax, eax; ret; 
0x0000000005390c: je short 0x0000000000053916; mov rdx, [rdx+rcx*8]; mov [rax+rcx*8], rdx; xor eax, eax; ret; 
0x00000000056a15: je short 0x0000000000056a3b; or [rbp+0x31], al; ror byte ptr [rax-0x39], cl; ret; 
0x00000000059748: je short 0x00000000000597c3; mov byte ptr [rdi+0x8], 0x0; mov [rdi], rax; mov rax, rdi; ret; 
0x0000000005f155: je short 0x000000000005f16f; add [rcx], al; mov eax, r8d; pop rbx; ret; 
0x00000000061051: je short 0x0000000000061060; mov eax, r8d; ret; 
0x0000000006103a: je short 0x0000000000061080; mov eax, 0x13c; syscall; 
0x0000000006106d: je short 0x0000000000061096; mov r8d, 0xffffffff; mov eax, r8d; ret; 
0x0000000006106c: je short 0x0000000000061096; mov r8d, 0xffffffff; mov eax, r8d; ret; 
0x00000000074838: je short 0x000000000007485e; or [rax-0x77], cl; fimul st, dword ptr [rax-0x77]; out dx, eax; call qword ptr [r12+0x38]; 
0x0000000007780d: je short 0x0000000000077833; adc al, ch; ret far; 
0x0000000007cd61: je short 0x000000000007cd70; lea rdx, [rip+0x12a9b6]; add rax, rdx; ret; 
0x0000000007f39b: je short 0x000000000007f3a6; mov rdi, [rdi+0xe0]; jmp rax; 
0x0000000007f3d4: je short 0x000000000007f3e7; mov rbp, rdx; mov rdi, [rdi+0xe0]; call rax; 
0x0000000007f437: je short 0x000000000007f448; mov rax, [rsp+0x8]; add rsp, 0x18; ret; 
0x0000000007f424: je short 0x000000000007f448; mov rdi, [rdi+0xe0]; lea rsi, [rsp+0x8]; call rax; 
0x0000000007f47b: je short 0x000000000007f490; mov rdi, [rdi+0xe0]; jmp rax; 
0x0000000008011e: je short 0x000000000008011a; jmp qword ptr [rsi+0x2e]; 
0x00000000083e00: je short 0x0000000000083e08; ret; 
0x00000000083e13: je short 0x0000000000083e5d; mov eax, [rax+0xe0]; call qword ptr [rax+0x68]; 
0x00000000083e60: je short 0x0000000000083ebd; pop rbp; pop r12; ret; 
0x00000000084707: je short 0x0000000000084718; cmp rax, rsi; ja short 0x0000000000084700; lea eax, [rdx+rdi]; ret; 
0x00000000085a79: je short 0x0000000000085a9f; xor [rcx+rcx*4-0x1], cl; call qword ptr [r14+0x90]; 
0x00000000086ed8: je short 0x0000000000086efe; sbb [rcx+rcx*4-0x11], cl; lea r9, [rsp+0x28]; call rbp; 
0x00000000086fd7: je short 0x0000000000086ffd; sbb [rcx+rcx*4-0x11], cl; lea r9, [rsp+0x28]; call rbp; 
0x000000000877ea: je short 0x00000000000877f8; mov eax, [rdi+0x70]; test eax, eax; js short 0x00000000000877f8; ret; 
0x00000000089b85: je short 0x0000000000089b90; ret; 
0x00000000089b7c: je short 0x0000000000089bb0; mov eax, 0xffffffff; test edx, edx; je short 0x0000000000089b90; ret; 
0x00000000089fa5: je short 0x0000000000089fb0; ret; 
0x00000000089f9c: je short 0x0000000000089fd0; mov eax, 0xffffffff; test edx, edx; je short 0x0000000000089fb0; ret; 
0x0000000008aac3: je short 0x000000000008aad0; pop rbx; ret; 
0x0000000008ae43: je short 0x000000000008ae69; adc [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x90]; 
0x0000000008b4ad: je short 0x000000000008b4d3; and [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x90]; 
0x0000000008e3f9: je short 0x000000000008e400; ret; 
0x0000000008edbb: je short 0x000000000008edcc; mov qword ptr [rax], 0x0; mov qword ptr [rax+0x8], 0x0; ret; 
0x0000000008ef12: je short 0x000000000008ef0d; jmp qword ptr [rsi+0xf]; 
0x0000000008f047: je short 0x000000000008f058; cmp rax, rsi; ja short 0x000000000008f040; lea eax, [rdx+rdi]; ret; 
0x000000000907bc: je short 0x00000000000907d8; mov rax, [rip+0x155f1b]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000907ec: je short 0x0000000000090808; mov rax, [rip+0x155ef3]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009081c: je short 0x0000000000090838; mov rax, [rip+0x155ecb]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009084c: je short 0x0000000000090868; mov rax, [rip+0x155ea3]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000090882: je short 0x000000000009089a; mov rax, [rip+0x155e95]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000908bc: je short 0x00000000000908d8; mov rax, [rip+0x155e63]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000908ec: je short 0x0000000000090908; mov rax, [rip+0x155e3b]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009091c: je short 0x0000000000090938; mov rax, [rip+0x155e13]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009094c: je short 0x0000000000090968; mov rax, [rip+0x155deb]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009097c: je short 0x0000000000090998; mov rax, [rip+0x155dc3]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000909ac: je short 0x00000000000909c8; mov rax, [rip+0x155d9b]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000090a07: je short 0x0000000000090a15; mov eax, r8d; ret; 
0x00000000090a89: je short 0x0000000000090a90; ret; 
0x00000000090ac6: je short 0x0000000000090a9c; pop rbx; ret; 
0x00000000090b09: je short 0x0000000000090b20; mov r8, [rdi+0x8]; mov rax, [rdi]; mov rdi, r8; jmp rax; 
0x00000000090d79: je short 0x0000000000090d80; xor eax, eax; ret; 
0x00000000090d9a: je short 0x0000000000090da0; xor eax, eax; pop rbx; ret; 
0x000000000910a3: je short 0x00000000000910b0; or eax, 0x2; mov [rdi+0x8], eax; xor eax, eax; ret; 
0x0000000009128f: je short 0x00000000000912d0; xor r10d, r10d; mov esi, 0x80; mov eax, r8d; syscall; 
0x00000000091311: je short 0x0000000000091316; mov [rdi+0x24], edx; nop; xor eax, eax; ret; 
0x00000000091f2c: je short 0x0000000000091f30; call rax; 
0x00000000091fa5: je short 0x0000000000091fa9; call rax; 
0x00000000091fe5: je short 0x0000000000091fe9; call rax; 
0x00000000092558: je short 0x0000000000092561; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000093849: je short 0x000000000009386a; mov r13, [rip+0x14f53e]; xor edi, edi; call qword ptr [r13]; 
0x00000000094c87: je short 0x0000000000094cad; sbb [rcx+rcx*4+0x5c], cl; and al, 0x10; call rax; 
0x0000000009664f: je short 0x0000000000096653; call rax; 
0x000000000976da: je short 0x0000000000097700; sbb [rbx+0x5d], bl; pop r12; jmp rax; 
0x00000000097e22: je short 0x0000000000097e48; mov rdi, rbp; call rax; 
0x00000000098de2: je short 0x0000000000098e08; sub [rcx+rcx*4-0x19], cl; call rdx; 
0x0000000009a19b: je short 0x000000000009a200; mov rsi, r12; mov rdi, rbp; call rax; 
0x0000000009b29c: je short 0x000000000009b2a0; ret; 
0x0000000009b397: je short 0x000000000009b3f0; add rsp, 0x8; pop rbp; pop r12; ret; 
0x0000000009b86d: je short 0x000000000009b896; mov rdi, [rbx+0x48]; mov rsi, r14; call rax; 
0x0000000009c172: je short 0x000000000009c13f; ret; 
0x0000000009c222: je short 0x000000000009c1ef; ret; 
0x0000000009c2a2: je short 0x000000000009c26f; ret; 
0x0000000009c29c: je short 0x000000000009c2ac; add dh, dh; mov byte ptr [rcx], 0x74; ret far; 
0x0000000009c39f: je short 0x000000000009c3b0; movsx edx, al; mov eax, edx; ret; 
0x0000000009c554: je short 0x000000000009c564; and ch, 0x1; lea rdx, [rip+0xe5c10]; cmovne rax, rdx; ret; 
0x0000000009c594: je short 0x000000000009c5a4; and ch, 0x1; lea rdx, [rip+0xe5d70]; cmovne rax, rdx; ret; 
0x0000000009c602: je short 0x000000000009c5cf; ret; 
0x0000000009c6d2: je short 0x000000000009c69f; ret; 
0x0000000009c704: je short 0x000000000009c714; and ch, 0x1; lea rdx, [rip+0xe5890]; cmovne rax, rdx; ret; 
0x0000000009d164: je short 0x000000000009d174; and ch, 0x1; lea rdx, [rip+0xe0e60]; cmovne rax, rdx; ret; 
0x0000000009d1d6: je short 0x000000000009d1a5; lea rax, [rip+0xe1581]; and ch, 0x1; je short 0x000000000009d1a5; ret; 
0x0000000009d1e2: je short 0x000000000009d1a5; ret; 
0x0000000009d408: je short 0x000000000009d3b4; add [rax], eax; cmove rax, rdx; ret; 
0x0000000009d4c2: je short 0x000000000009d48f; ret; 
0x0000000009d522: je short 0x000000000009d4ef; ret; 
0x0000000009e380: je short 0x000000000009e386; xor byte ptr [rax+0x6], 0x2a; mov rax, r8; ret; 
0x0000000009ea14: je short 0x000000000009ea24; and ch, 0x1; lea rdx, [rip+0xdf880]; cmovne rax, rdx; ret; 
0x0000000009ea54: je short 0x000000000009ea64; and ch, 0x1; lea rdx, [rip+0xe3350]; cmovne rax, rdx; ret; 
0x0000000009edf6: je short 0x000000000009ee08; pop rbx; pop rbp; pop r12; ret; 
0x0000000009f611: je short 0x000000000009f62c; cmp al, 0x3d; je short 0x000000000009f62c; xor eax, eax; ret; 
0x0000000009f625: je short 0x000000000009f62c; cmp dl, 0x3d; jne short 0x000000000009f5e5; mov rax, r10; ret; 
0x0000000009f615: je short 0x000000000009f62c; xor eax, eax; ret; 
0x000000000a047a: je short 0x00000000000a04a0; xor cl, ch; in eax, dx; idiv edi; jmp qword ptr [rsi+0xf]; 
0x000000000a4a9b: je short 0x00000000000a4aa1; cmp eax, esi; jne short 0x00000000000a4a90; mov rax, r8; ret; 
0x000000000a4acf: je short 0x00000000000a4ad5; cmp eax, edx; jne short 0x00000000000a4ac0; mov rax, r8; ret; 
0x000000000a4b4a: je short 0x00000000000a4b40; ret; 
0x000000000a4b82: je short 0x00000000000a4b78; cmp edx, esi; je short 0x00000000000a4b78; ret; 
0x000000000a4b86: je short 0x00000000000a4b78; ret; 
0x000000000a4bd3: je short 0x00000000000a4bb8; mov rax, r8; ret; 
0x000000000a4bff: je short 0x00000000000a4c10; cmp eax, esi; jne short 0x00000000000a4bf0; mov rax, r8; ret; 
0x000000000a4f04: je short 0x00000000000a4f14; and ch, 0x1; lea rdx, [rip+0xd94e0]; cmovne rax, rdx; ret; 
0x000000000a839c: je short 0x00000000000a83ed; xor [rsi+0xf], ah; xlat [rbx]; ret; 
0x000000000a843e: je short 0x00000000000a848f; adc [rsi+0xf], ah; xlat [rbx]; rol dword ptr [rbp+0x315775c0], 0xc0; ret; 
0x000000000a8548: je short 0x00000000000a8560; bsf eax, eax; add rax, rdi; add rax, rcx; ret; 
0x000000000a868a: je short 0x00000000000a86db; xor [rsi+0xf], ah; xlat [rbx]; ret; 
0x000000000a8920: je short 0x00000000000a8971; and [rsi+0xf], ah; xlat [rbx]; rol dword ptr [rbp+0x317575c0], 0xc0; ret; 
0x000000000a8a0c: je short 0x00000000000a89e0; bsr eax, eax; add rax, rdi; ret; 
0x000000000ad9e5: je short 0x00000000000ad9f0; bsf eax, eax; lea rax, [rdi+rax]; ret; 
0x000000000adee8: je short 0x00000000000adeee; bsf eax, edx; ret; 
0x000000000adf8d: je short 0x00000000000adfa0; bsf rax, rdx; ret; 
0x000000000adf30: je short 0x00000000000adfb0; bsf rax, rdx; ret; 
0x000000000ae15c: je short 0x00000000000ae180; bsf rax, rdx; ret; 
0x000000000b38d8: je short 0x00000000000b3930; str [rbx+0x63]; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b4fb8: je short 0x00000000000b4ffb; str [rbx+0x63]; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b7f87: je short 0x00000000000b7fa0; ror byte ptr [rdi], 0x1; adc [rdi+rdx-0x40], edi; ret; 
0x000000000b839c: je short 0x00000000000b8380; ret; 
0x000000000b83f1: je short 0x00000000000b83d0; mov eax, edx; ret; 
0x000000000b8bf6: je short 0x00000000000b8c08; cmp eax, 0x3; je short 0x00000000000b8c10; xor eax, eax; ret; 
0x000000000b8bfb: je short 0x00000000000b8c10; xor eax, eax; ret; 
0x000000000b8c74: je short 0x00000000000b8c84; and ch, 0x1; lea rdx, [rip+0xcda40]; cmovne rax, rdx; ret; 
0x000000000b8cb4: je short 0x00000000000b8cc4; and ch, 0x1; lea rdx, [rip+0xcd090]; cmovne rax, rdx; ret; 
0x000000000b8dc4: je short 0x00000000000b8dd4; and ch, 0x1; lea rdx, [rip+0xcdd10]; cmovne rax, rdx; ret; 
0x000000000b8e64: je short 0x00000000000b8e74; and ch, 0x1; lea rdx, [rip+0xcd330]; cmovne rax, rdx; ret; 
0x000000000b8f54: je short 0x00000000000b8f64; and ch, 0x1; lea rdx, [rip+0xcd990]; cmovne rax, rdx; ret; 
0x000000000b9174: je short 0x00000000000b9184; and ch, 0x1; lea rdx, [rip+0xcc900]; cmovne rax, rdx; ret; 
0x000000000b91e6: je short 0x00000000000b91b5; lea rax, [rip+0xcc521]; and ch, 0x1; je short 0x00000000000b91b5; ret; 
0x000000000b91f2: je short 0x00000000000b91b5; ret; 
0x000000000ba439: je short 0x00000000000ba43f; test edx, edx; jne short 0x00000000000ba430; ret; 
0x000000000c2c8d: je short 0x00000000000c2c93; mov eax, r8d; ret; 
0x000000000c68ba: je short 0x00000000000c68e0; sbb [rcx+rcx*4-0x1f], cl; mov rdx, r13; call rbx; 
0x000000000c6a41: je short 0x00000000000c6a67; sbb [rbp+0x31], al; ror byte ptr [rax-0x77], 0xef; call rbx; 
0x000000000c7b25: je short 0x00000000000c7b4b; or [rbp+0x31], al; ror byte ptr [rax-0x39], cl; ret; 
0x000000000caf39: je short 0x00000000000caf50; mov eax, [rdi]; cmp eax, [rsi]; jne 0x00000000000cb090; ret; 
0x000000000caf63: je short 0x00000000000caf80; mov eax, [rdi+0x8]; cmp eax, [rsi+0x8]; jne 0x00000000000cb090; ret; 
0x000000000caf99: je short 0x00000000000cafb0; mov eax, [rdi+0x10]; cmp eax, [rsi+0x10]; jne 0x00000000000cb090; ret; 
0x000000000cafc3: je short 0x00000000000cafe0; mov eax, [rdi+0x18]; cmp eax, [rsi+0x18]; jne 0x00000000000cb090; ret; 
0x000000000caff9: je short 0x00000000000cb010; mov eax, [rdi+0x20]; cmp eax, [rsi+0x20]; jne 0x00000000000cb090; ret; 
0x000000000cb023: je short 0x00000000000cb030; mov eax, [rdi+0x28]; cmp eax, [rsi+0x28]; jne short 0x00000000000cb090; ret; 
0x000000000cb049: je short 0x00000000000cb060; mov eax, [rdi+0x30]; cmp eax, [rsi+0x30]; jne short 0x00000000000cb090; ret; 
0x000000000cb073: je short 0x00000000000cb080; mov eax, [rdi+0x38]; cmp eax, [rsi+0x38]; jne short 0x00000000000cb090; ret; 
0x000000000cb616: je short 0x00000000000cb680; lea rax, [rdi-0x10]; ret; 
0x000000000cb624: je short 0x00000000000cb680; test al, 0xf0; jne short 0x00000000000cb650; lea rax, [rdi-0x10]; ret; 
0x000000000cb79c: je short 0x00000000000cb7c0; bsf rax, rdx; shr rax, 0x2; ret; 
0x000000000cbac9: je short 0x00000000000cbae0; mov cl, dl; and cl, 0xf; je short 0x00000000000cbaf0; ret; 
0x000000000cbad0: je short 0x00000000000cbaf0; ret; 
0x000000000cbae5: je short 0x00000000000cbb00; add rax, 0x2; ret; 
0x000000000cc460: je short 0x00000000000cc490; mov [rsp+0x50], r12; mov rsi, r15; mov rdi, rbp; call rbx; 
0x000000000d8e17: je short 0x00000000000d8e20; xor eax, eax; ret; 
0x000000000d8ea1: je short 0x00000000000d8ed0; call rax; 
0x000000000d8f11: je short 0x00000000000d8f40; call rax; 
0x000000000d9317: je short 0x00000000000d933d; and [rax-0x7d], cl; ret; 
0x000000000d95f7: je short 0x00000000000d9624; pop rbx; pop rbp; pop r12; ret; 
0x000000000da786: je short 0x00000000000da79d; mov rbx, r13; mov rdi, rbp; call r12; 
0x000000000db2e3: je short 0x00000000000db2e5; add [rax], al; syscall; 
0x000000000db328: je short 0x00000000000db34e; adc [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x000000000de597: je short 0x00000000000de5b0; cmp rax, 0xffffffffffffffff; mov edx, 0x0; cmove rax, rdx; ret; 
0x000000000deafd: je short 0x00000000000deb0b; mov esi, 0x1; incsspq rsi; jmp rdi; 
0x000000000e0a0c: je short 0x00000000000e099d; cmp rdx, 0x2468; jne short 0x00000000000e0a33; mov eax, 0xfffa; ret; 
0x000000000e0c09: je short 0x00000000000e0c3a; xor eax, eax; cmp rdx, 0x1badface; setne al; ret; 
0x000000000e0c24: je short 0x00000000000e0c3a; xor eax, eax; cmp rdx, 0x1cd1; setne al; ret; 
0x000000000e0bd5: je short 0x00000000000e0c3a; xor eax, eax; cmp rdx, 0xadf5; setne al; ret; 
0x000000000e1dbc: je short 0x00000000000e1dc8; mov rdi, rbx; call r15; 
0x000000000e1db7: je short 0x00000000000e1dd1; test r15, r15; je short 0x00000000000e1dc8; mov rdi, rbx; call r15; 
0x000000000e3b51: je short 0x00000000000e3b57; cmp al, 0x3f; jne short 0x00000000000e3b89; mov eax, 0x1; ret; 
0x000000000e3b72: je short 0x00000000000e3b57; cmp al, 0x3f; jne short 0x00000000000e3ba9; mov eax, 0x1; ret; 
0x000000000e4a62: je short 0x00000000000e4a88; sbb al, 0x85; test byte ptr [rdi], 0x85; ret; 
0x000000000e7e43: je short 0x00000000000e7ddc; mov byte ptr [rdi+0x8], 0x1e; mov eax, 0x2; ret; 
0x000000000e7dda: je short 0x00000000000e7e20; mov byte ptr [rdi+0x8], 0x1; mov eax, 0x1; mov byte ptr [rdi], 0x5b; ret; 
0x000000000ea79e: je short 0x00000000000ea7d9; ret; 
0x000000000eab4c: je short 0x00000000000eab8b; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000000eace2: je short 0x00000000000eac67; pop rbx; ret; 
0x000000000eacdd: je short 0x00000000000eac87; and ebx, 0x8; je short 0x00000000000eac67; pop rbx; ret; 
0x000000000edc25: je short 0x00000000000edc80; xor eax, eax; pop rbp; ret; 
0x000000000fb9cc: je short 0x00000000000fb9d8; mov rdi, rbx; call r15; 
0x000000000fb9c7: je short 0x00000000000fb9e1; test r15, r15; je short 0x00000000000fb9d8; mov rdi, rbx; call r15; 
0x000000000fd832: je short 0x00000000000fd838; ret; 
0x000000000fd827: je short 0x00000000000fd868; mov eax, 0xf; cmp dx, 0x2; je short 0x00000000000fd838; ret; 
0x00000000107c79: je short 0x0000000000107c84; mov eax, 0x1c; syscall; 
0x00000000107e1d: je short 0x0000000000107e50; xor edx, edx; xor esi, esi; mov rdi, rbp; call rax; 
0x00000000107eb2: je short 0x0000000000107ee8; xor edx, edx; call rax; 
0x0000000010843a: je short 0x0000000000108440; mov eax, r9d; ret; 
0x00000000108439: je short 0x0000000000108440; mov eax, r9d; ret; 
0x00000000108c05: je short 0x0000000000108c2b; adc [rbx-0x47e7db84], cl; add [rcx], eax; add [rax], al; syscall; 
0x00000000108cde: je short 0x0000000000108d04; adc [rcx-0x77], al; ror byte ptr [rbx+0x3108247c], 0xc0; syscall; 
0x0000000010950a: je short 0x0000000000109504; dec dword ptr [rbx+0x410c247c]; mov eax, eax; mov eax, 0x3; syscall; 
0x000000001097c3: je short 0x00000000001097a1; mov rbp, rdi; mov rdi, rbp; mov eax, 0x4f; syscall; 
0x0000000010b016: je short 0x000000000010b03c; sub [rax-0x73], cl; sub [r10+0x1], r15b; call qword ptr [rbp+0x40]; 
0x0000000010b2f6: je short 0x000000000010b31c; sub [rax-0x73], cl; sub [r10+0x5], r15b; call qword ptr [rbp+0x40]; 
0x0000000010b376: je short 0x000000000010b39c; sub [rax-0x73], cl; sub [r10+0x2], r15b; call qword ptr [rbp+0x40]; 
0x0000000010da20: je short 0x000000000010da28; neg eax; ret; 
0x0000000010dc70: je short 0x000000000010dc78; neg eax; ret; 
0x0000000010ddda: je short 0x000000000010de02; mov eax, 0x118; syscall; 
0x0000000010de71: je short 0x000000000010de7a; xor eax, eax; cmp rdx, rcx; je short 0x000000000010de80; ret; 
0x0000000010de78: je short 0x000000000010de80; ret; 
0x0000000010ded8: je short 0x000000000010dee8; mov qword ptr [rdi], 0xffffffffffffffff; ret; 
0x0000000010ded1: je short 0x000000000010df10; cmp eax, 0x8000; je short 0x000000000010dee8; mov qword ptr [rdi], 0xffffffffffffffff; ret; 
0x0000000010e05a: je short 0x000000000010e0a4; add esp, 0xa0; pop rbx; ret; 
0x0000000010e261: je short 0x000000000010e287; or al, 0x8b; jl short 0x000000000010e28b; or [rax+0x11d], bh; syscall; 
0x0000000010e32c: je short 0x000000000010e358; mov eax, 0x48; syscall; 
0x0000000010e3bb: je short 0x000000000010e3e8; mov eax, 0x48; syscall; 
0x0000000010e511: je short 0x000000000010e540; mov eax, 0x101; syscall; 
0x0000000010f4de: je short 0x000000000010f504; or [rax+0x127], bh; syscall; 
0x0000000010f59e: je short 0x000000000010f5c4; or [rax+0x128], bh; syscall; 
0x0000000010fbb2: je short 0x000000000010fbb5; ret; 
0x0000000010ff1d: je short 0x000000000010ff43; adc [rax+0x17], bh; mov edi, [rsp+0xc]; syscall; 
0x00000000110a4e: je short 0x0000000000110a68; mov [rip+0xd6be9], rax; mov eax, 0x1; add rsp, 0x8; ret; 
0x00000000111cd7: je short 0x0000000000111cdc; mov [rax], rdx; ret; 
0x00000000111dd2: je short 0x0000000000111dc0; mov byte ptr [rsi-0x1], 0x0; mov rax, r8; ret; 
0x00000000112576: je short 0x0000000000112583; add rax, 0x8; mov [rip+0xd520d], rax; mov rax, r8; ret; 
0x0000000011364c: je short 0x0000000000113654; mov [rip+0xcfd04], edi; ret; 
0x00000000113817: je short 0x0000000000113850; mov r10d, ebx; mov rdi, rbp; mov eax, 0x9; syscall; 
0x00000000114647: je short 0x0000000000114650; pop rbx; ret; 
0x00000000114646: je short 0x0000000000114650; pop rbx; ret; 
0x000000001149b2: je short 0x00000000001149e5; mov rdi, rbp; xor esi, esi; call r12; 
0x00000000114a42: je short 0x0000000000114a75; mov rdi, rbp; xor esi, esi; call r12; 
0x000000001150dd: je short 0x0000000000115100; mov rsi, [rbx]; mov r13, rbx; mov rdi, rbp; call r12; 
0x000000001157c9: je short 0x00000000001157fa; mov rdi, rbp; xor esi, esi; call r12; 
0x0000000011587a: je short 0x00000000001158ad; mov rdi, rbp; xor esi, esi; call r12; 
0x0000000011616c: je short 0x00000000001161d0; call rax; 
0x00000000116cdd: je short 0x0000000000116cd0; mov byte ptr [rax], 0x0; mov rax, rbx; pop rbx; ret; 
0x00000000117093: je short 0x00000000001170a0; cmp rdi, rdx; jne short 0x0000000000117088; mov rax, [rax+0x8]; ret; 
0x00000000119049: je short 0x0000000000119059; mov rsi, r8; mov rdi, rbp; call r12; 
0x0000000011921a: je short 0x000000000011921d; ret; 
0x00000000119378: je short 0x000000000011939e; or [rax+0x119], bh; mov edi, [rsp+0x4]; syscall; 
0x0000000011957f: je short 0x0000000000119578; dec dword ptr [rbx+0x480c2444]; add esp, 0x28; ret; 
0x00000000119630: je short 0x0000000000119629; dec dword ptr [rax-0x75]; and al, 0x8; add rsp, 0x28; ret; 
0x00000000119610: je short 0x0000000000119636; sbb [rbx-0x47f7db84], cl; adc al, 0x1; add [rax], al; syscall; 
0x00000000119896: je short 0x00000000001198c8; mov eax, 0x145; syscall; 
0x000000001198ba: je short 0x00000000001198f4; mov eax, r8d; ret; 
0x000000001198bb: je short 0x00000000001198f4; mov eax, r8d; ret; 
0x0000000011992a: je short 0x0000000000119958; mov eax, 0x149; syscall; 
0x0000000011acb2: je short 0x000000000011acd8; or [rbx-0x47e7db84], cl; and [rcx], al; add [rax], al; syscall; 
0x0000000011ad6a: je short 0x000000000011ad90; or [rax+0x12b], bh; mov edi, [rsp+0x4]; syscall; 
0x0000000011ae20: je short 0x000000000011ae46; adc [rbx-0x47f3db84], cl; xor eax, [rcx]; add [rax], al; syscall; 
0x0000000011b07d: je short 0x000000000011b0a3; adc [rax+0x46], bh; mov edi, [rsp+0x8]; syscall; 
0x0000000011b34d: je short 0x000000000011b350; ret; 
0x0000000011b589: je short 0x000000000011b594; add edx, edx; mov eax, 0x14; syscall; 
0x0000000011bbc9: je short 0x000000000011bbe0; movsxd rbx, ebx; mov [rip+0xc77ab], rbx; pop rbx; ret; 
0x0000000011c0b0: je short 0x000000000011c0e0; add eax, 0x1; mov [rdx], ax; ret; 
0x0000000011c06f: je short 0x000000000011c0e0; add eax, 0x1; mov [rdx], eax; ret; 
0x0000000011f2c4: je short 0x000000000011f2d8; pop rbx; pop rbp; pop r12; ret; 
0x00000000125a67: je short 0x0000000000125a70; mov eax, 0x7; ret; 
0x00000000125a92: je short 0x0000000000125aa0; pop rbx; ret; 
0x00000000125a81: je short 0x0000000000125ab0; mov rdi, [rdx+0x50]; mov rsi, rdx; call rax; 
0x00000000126baf: je short 0x0000000000126bc0; ret; 
0x00000000126d67: je short 0x0000000000126d95; lea rsi, [rbp-0x20]; lea rdi, [rip-0x184]; call rax; 
0x000000001285a0: je short 0x00000000001285b0; add rsp, 0x8; ret; 
0x000000001326ef: je short 0x00000000001326f6; mov rdi, rbx; call rax; 
0x00000000132a0f: je short 0x0000000000132a16; mov rdi, rbx; call rax; 
0x00000000132ad7: je short 0x0000000000132ae2; lea rdi, [rip+0xb5a40]; call rax; 
0x00000000133184: je short 0x00000000001331aa; or [rax-0x75], cl; jl short 0x00000000001331af; cmp al, ch; call far fword ptr [rdx+rax]; 
0x0000000013621b: je short 0x0000000000136210; pop rbx; ret; 
0x00000000137179: je short 0x0000000000137188; test eax, eax; jne short 0x0000000000137198; mov eax, r8d; ret; 
0x0000000013baf0: je short 0x000000000013baf8; ret; 
0x0000000013c976: je short 0x000000000013c980; add rsp, 0x8; ret; 
0x0000000013d5da: je short 0x000000000013d5b9; add [rax-0x7d], cl; ret; 
0x0000000013e5f7: je short 0x000000000013e60f; mov rdi, [rip+0xaa640]; ror rdi, 0x11; xor rdi, fs:[0x30]; call rax; 
0x0000000013fd95: je short 0x000000000013fdbb; mov rdi, [rsp+0x38]; call qword ptr [rsp+0x68]; 
0x0000000014122e: je short 0x0000000000141240; xor eax, eax; cmp edx, 0x1; jne short 0x0000000000141258; ret; 
0x00000000141426: je short 0x000000000014142d; mov rdi, rbp; call rax; 
0x0000000014168f: je short 0x00000000001416b5; adc [rax-0x75], cl; and al, 0x8; mov rdi, rbp; call rcx; 
0x0000000014172f: je short 0x00000000001417b0; mov rax, [rdi+0x38]; call qword ptr [rax+0x18]; 
0x000000001417c1: je short 0x000000000014180b; mov rdi, [r12]; mov rsi, r13; mov rax, [rdi+0x38]; call qword ptr [rax+0x10]; 
0x000000001418bd: je short 0x00000000001418c4; mov rdi, rbp; call rax; 
0x000000001418a0: je short 0x0000000000141910; mov rax, [rbx+0x20]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x00000000141a0b: je short 0x0000000000141a1c; mov rax, [rdi+0x8]; call qword ptr [rax+0x20]; 
0x00000000141bad: je short 0x0000000000141bb6; mov rax, [rdi+0x8]; call qword ptr [rax+0x20]; 
0x00000000141bdc: je short 0x0000000000141be0; ret; 
0x00000000142337: je short 0x0000000000142337; jmp qword ptr [rsi+0xf]; 
0x000000001423da: je short 0x000000000014236f; mov rax, [rbp+0x8]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x000000001423b6: je short 0x000000000014236f; mov rax, [rbp+0x8]; mov rdi, rbp; mov qword ptr [rsp], 0x0; call qword ptr [rax+0x20]; 
0x0000000014289a: je short 0x000000000014283f; mov rax, [rsp+0xc8]; mov rdi, rbx; call qword ptr [rax+0x20]; 
0x000000001428bc: je short 0x00000000001428c3; mov rdi, rbx; call rax; 
0x00000000142c12: je short 0x0000000000142c19; mov rdi, rbx; call rax; 
0x00000000142e37: je short 0x0000000000142e40; xor eax, eax; ret; 
0x00000000142ebe: je short 0x0000000000142ee0; mov dword ptr [rsi], 0x10; mov [rsi+0x8], rax; ret; 
0x00000000142eea: je short 0x0000000000142f00; mov dword ptr [rsi], 0x10; mov qword ptr [rsi+0x8], 0x1; mov [rsi+0x10], rax; ret; 
0x000000001430c6: je short 0x00000000001430ec; add ecx, [rax-0x77]; out dx, eax; and esi, 0xfffffffc; call qword ptr [rax+0x30]; 
0x0000000014313b: je short 0x0000000000143161; add ecx, [rax-0x77]; out dx, eax; and esi, 0xfffffffc; call qword ptr [rax+0x30]; 
0x0000000014343a: je short 0x0000000000143441; mov rdi, r13; call rax; 
0x000000001437b9: je short 0x00000000001437d8; mov rax, [rbx+0x23b8]; mov rdi, r12; call qword ptr [rax+0x20]; 
0x00000000143e2c: je short 0x0000000000143db9; mov rax, [rbp+0x8]; lea rsi, [rsp+0x8]; mov rdi, rbp; call qword ptr [rax+0x8]; 
0x00000000143df0: je short 0x0000000000143e02; mov rax, [rbp+0x8]; mov rsi, r12; mov rdi, rbp; call qword ptr [rax]; 
0x00000000143e34: je short 0x0000000000143e5a; or [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x8]; 
0x00000000145c12: je short 0x0000000000145c20; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000145cd2: je short 0x0000000000145ce0; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000145dd2: je short 0x0000000000145de0; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000146e47: je short 0x0000000000146e52; lea rdi, [rbp+0xc8]; call rax; 
0x000000001470dc: je short 0x0000000000147102; sbb [rcx+rcx*4-0x19], cl; call qword ptr [rax+0x8]; 
0x0000000014710b: je short 0x0000000000147131; xor [rax-0x75], cl; and al, 0x28; mov rdi, r12; call rcx; 
0x0000000014720d: je short 0x00000000001471b6; mov rax, [rsp+0x10]; mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x18]; 
0x00000000147326: je short 0x000000000014734c; mov rdx, [rsp+0x20]; mov rdi, r12; call rdx; 
0x0000000014788d: je short 0x0000000000147894; mov rdi, rbp; call rax; 
0x00000000147a72: je short 0x0000000000147a7b; lea rdi, [r12+0x10]; call rax; 
0x000000001486cf: je short 0x00000000001486e8; mov rax, [rbp+0x8]; lea rsi, [rsp+0xc]; mov rdi, rbp; call qword ptr [rax+0x48]; 
0x000000001486d7: je short 0x00000000001486fd; or al, 0x48; mov edi, ebp; call qword ptr [rax+0x48]; 
0x0000000014878c: je short 0x00000000001487b2; or al, 0x48; mov edi, ebp; call qword ptr [rax+0x48]; 
0x00000000148d31: je short 0x0000000000148d38; mov rdi, rbp; call rax; 
0x00000000148f06: je short 0x0000000000148f0d; mov rdi, r13; call rax; 
0x00000000149c24: je short 0x0000000000149c2c; lea rdi, [rbp+0x68]; call rax; 
0x00000000149e1f: je short 0x0000000000149e45; or [rbp-0x74b70098], cl; jo short 0x0000000000149db3; imul ecx, [rax+0xf], 0xffffffcd; call qword ptr [rax+0x18]; 
0x00000000149e3f: je short 0x0000000000149e65; sbb [rcx+rcx*4-0x19], cl; call qword ptr [rax+0x8]; 
0x00000000149e6e: je short 0x0000000000149e94; xor [rax-0x75], cl; and al, 0x28; mov rdi, r12; call rcx; 
0x00000000149f66: je short 0x0000000000149f13; mov rax, [rsp+0x10]; mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x18]; 
0x0000000014a05e: je short 0x000000000014a084; mov rdx, [rsp+0x20]; mov rdi, r12; call rdx; 
0x0000000014a34c: je short 0x000000000014a353; mov rdi, rbp; call rax; 
0x0000000014a6c4: je short 0x000000000014a6cc; lea rdi, [rbp+0x58]; call rax; 
0x0000000014a8a3: je short 0x000000000014a8c9; push rax; mov rcx, [rsp+0x20]; mov rdi, r15; call rcx; 
0x0000000014b055: je short 0x000000000014b0d0; mov rax, [r15+0x60]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x0000000014b30b: je short 0x000000000014b355; mov eax, [rbp+0x60]; mov rdi, r13; call qword ptr [rax+0x20]; 
0x0000000014b30a: je short 0x000000000014b380; mov rax, [rbp+0x60]; mov rdi, r13; call qword ptr [rax+0x20]; 
0x0000000014c335: je short 0x000000000014c345; mov rax, [r8+0x38]; mov rdi, r8; call qword ptr [rax+0x20]; 
0x0000000014cc67: je short 0x000000000014cc8d; or [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x10]; 
0x0000000014cf02: je short 0x000000000014ce85; mov fs:[rbx], rax; pop rbx; ret; 
0x0000000014ce83: je short 0x000000000014ce90; pop rbx; ret; 
0x0000000014d3bf: je short 0x000000000014d3d0; pop rbx; pop rbp; pop r12; ret; 
0x0000000014ddc2: je short 0x000000000014dde8; adc [rax-0x39], cl; ret; 
0x0000000014df92: je short 0x000000000014df9b; lea rdi, [r12+0x10]; call rax; 
0x0000000014e6db: je short 0x000000000014e6e4; lea rdi, [r12+0x10]; call rax; 
0x0000000014e758: je short 0x000000000014e790; mov rax, [rbp+0x18]; mov rdi, r13; call qword ptr [rax+0x20]; 
0x0000000014fa33: je short 0x000000000014fa50; cmp eax, 0x2; sete al; movzx eax, al; ret; 
0x0000000014fb65: je short 0x000000000014fb8b; adc [rax-0x77], cl; out dx, eax; call qword ptr [rax]; 
0x0000000014fb5d: je short 0x000000000014fbd8; mov rax, [rbp+0x8]; lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax]; 
0x0000000014fbbe: je short 0x000000000014fbe4; adc [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x8]; 
0x0000000014fc55: je short 0x000000000014fc7b; adc [rax-0x77], cl; out dx, eax; call qword ptr [rax]; 
0x0000000014fc4d: je short 0x000000000014fcc8; mov rax, [rbp+0x8]; lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax]; 
0x0000000014fcae: je short 0x000000000014fcd4; adc [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x8]; 
0x0000000014fd45: je short 0x000000000014fd6b; adc [rax-0x77], cl; out dx, eax; call qword ptr [rax]; 
0x0000000014fd3d: je short 0x000000000014fdb8; mov rax, [rbp+0x8]; lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax]; 
0x0000000014fd9e: je short 0x000000000014fdc4; adc [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x8]; 
0x0000000014fe35: je short 0x000000000014fe5b; adc [rax-0x77], cl; out dx, eax; call qword ptr [rax]; 
0x0000000014fe2d: je short 0x000000000014fea8; mov rax, [rbp+0x8]; lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax]; 
0x0000000014fe8e: je short 0x000000000014feb4; adc [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x8]; 
0x00000000150354: je short 0x000000000015037a; adc [rax-0x77], cl; and al, 0x10; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x000000001504f4: je short 0x000000000015051a; adc [rax-0x77], cl; and al, 0x10; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x00000000150b45: je short 0x0000000000150ac7; mov rax, [rbp+0x8]; lea rsi, [rsp+0x4]; mov rdi, rbp; call qword ptr [rax+0x48]; 
0x00000000150afc: je short 0x0000000000150b22; add al, 0x48; mov edi, ebp; call qword ptr [rax+0x40]; 
0x00000000150af4: je short 0x0000000000150b68; mov rax, [rbp+0x8]; lea rsi, [rsp+0x4]; mov rdi, rbp; call qword ptr [rax+0x40]; 
0x00000000150b4d: je short 0x0000000000150b73; add al, 0x48; mov edi, ebp; call qword ptr [rax+0x48]; 
0x00000000150c35: je short 0x0000000000150bb7; mov rax, [rbp+0x8]; lea rsi, [rsp+0x4]; mov rdi, rbp; call qword ptr [rax+0x48]; 
0x00000000150bec: je short 0x0000000000150c12; add al, 0x48; mov edi, ebp; call qword ptr [rax+0x40]; 
0x00000000150be4: je short 0x0000000000150c58; mov rax, [rbp+0x8]; lea rsi, [rsp+0x4]; mov rdi, rbp; call qword ptr [rax+0x40]; 
0x00000000150c3d: je short 0x0000000000150c63; add al, 0x48; mov edi, ebp; call qword ptr [rax+0x48]; 
0x00000000150d25: je short 0x0000000000150ca7; mov rax, [rbp+0x8]; lea rsi, [rsp+0x4]; mov rdi, rbp; call qword ptr [rax+0x48]; 
0x00000000150cdc: je short 0x0000000000150d02; add al, 0x48; mov edi, ebp; call qword ptr [rax+0x40]; 
0x00000000150cd4: je short 0x0000000000150d48; mov rax, [rbp+0x8]; lea rsi, [rsp+0x4]; mov rdi, rbp; call qword ptr [rax+0x40]; 
0x00000000150d2d: je short 0x0000000000150d53; add al, 0x48; mov edi, ebp; call qword ptr [rax+0x48]; 
0x00000000150e15: je short 0x0000000000150d97; mov rax, [rbp+0x8]; lea rsi, [rsp+0x4]; mov rdi, rbp; call qword ptr [rax+0x48]; 
0x00000000150dcc: je short 0x0000000000150df2; add al, 0x48; mov edi, ebp; call qword ptr [rax+0x40]; 
0x00000000150dc4: je short 0x0000000000150e38; mov rax, [rbp+0x8]; lea rsi, [rsp+0x4]; mov rdi, rbp; call qword ptr [rax+0x40]; 
0x00000000150e1d: je short 0x0000000000150e43; add al, 0x48; mov edi, ebp; call qword ptr [rax+0x48]; 
0x00000000150e65: je short 0x0000000000150e90; mov eax, r8d; ret; 
0x00000000150eb5: je short 0x0000000000150ee0; mov eax, r8d; ret; 
0x00000000150f65: je short 0x0000000000150f8b; add al, 0x89; and al, 0x4; mov rax, [rdi+0x8]; call qword ptr [rax+0x48]; 
0x00000000150ff5: je short 0x000000000015101b; add al, 0x89; and al, 0x4; mov rax, [rdi+0x8]; call qword ptr [rax+0x48]; 
0x00000000151085: je short 0x00000000001510ab; add al, 0x89; and al, 0x4; mov rax, [rdi+0x8]; call qword ptr [rax+0x48]; 
0x00000000151115: je short 0x000000000015113b; add al, 0x89; and al, 0x4; mov rax, [rdi+0x8]; call qword ptr [rax+0x48]; 
0x0000000015929f: je short 0x00000000001592b3; mov rax, [rip+0x89b90]; call qword ptr [rax+0x288]; 
0x00000000159766: je short 0x0000000000159780; mov rax, [rip+0x896c9]; mov rdi, [rsp]; mov rax, [rax+0x268]; jmp rax; 
0x0000000015a74c: je short 0x000000000015a768; mov rax, [rip+0x8bfab]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000015a77c: je short 0x000000000015a798; mov rax, [rip+0x8bf83]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000015a7ac: je short 0x000000000015a7c8; mov rax, [rip+0x8bf5b]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000015a7dc: je short 0x000000000015a7f8; mov rax, [rip+0x8bf33]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000015fd58: je short 0x000000000015fdd4; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001602e8: je short 0x00000000001602ef; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160385: je short 0x000000000016038d; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000177a33: je short 0x00000000001779f6; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000178705: je short 0x0000000000178708; xchg edx, eax; sub eax, edx; ret; 
0x00000000178803: je short 0x00000000001787c6; lea r10, [r10+r9]; notrack jmp r10; 
0x000000001796ea: je short 0x00000000001796ed; xchg edx, eax; sub eax, edx; ret; 
0x00000000179843: je short 0x0000000000179806; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000017b413: je short 0x000000000017b3d6; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000017d350: je short 0x000000000017d328; movsxd rcx, ecx; add rax, rcx; sub rax, rdi; ret; 
0x0000000017d4a8: je short 0x000000000017d488; xor eax, eax; ret; 
0x0000000017e471: je short 0x000000000017e4d2; and ch, al; std; xlat [rbx]; ret; 
0x0000000017e55f: je short 0x000000000017e5c0; and ch, al; std; xlat [rbx]; ret; 
0x0000000017e6aa: je short 0x000000000017e680; bsr eax, eax; add rax, rdi; vzeroupper; ret; 
0x0000000017e8b5: je short 0x000000000017e8c0; sbb eax, eax; or eax, 0x1; ret; 
0x0000000017e959: je short 0x000000000017e92c; vpmovmskb eax, xmm2; sub eax, 0xffff; jne 0x000000000017e870; ret; 
0x0000000017e997: je short 0x000000000017e9b0; vpmovmskb eax, xmm2; sub eax, 0xffff; jne 0x000000000017e870; ret; 
0x0000000017ec43: je short 0x000000000017ec06; lea r10, [r10+r9]; notrack jmp r10; 
0x000000001802e3: je short 0x00000000001802a6; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000018211f: je short 0x00000000001820d4; bsr eax, eax; lea rax, [rdi+rax-0x20]; vzeroupper; ret; 
0x00000000182144: je short 0x0000000000182160; bsr eax, eax; lea rax, [rdi+rax-0x20]; vzeroupper; ret; 
0x00000000182b7f: je short 0x0000000000182c00; mov byte ptr [rdi], 0x0; vzeroupper; ret; 
0x0000000018391f: je short 0x00000000001839a0; mov byte ptr [rdi], 0x0; vzeroupper; ret; 
0x0000000018460f: je short 0x0000000000184690; mov byte ptr [rdi], 0x0; lea rax, [rdi]; vzeroupper; ret; 
0x00000000186a8a: je short 0x0000000000186a24; bsr eax, eax; lea rax, [rdi+rax-0x20]; vzeroupper; ret; 
0x00000000186abf: je short 0x0000000000186ad0; bsr eax, eax; lea rax, [rdi+rax-0x20]; vzeroupper; ret; 
0x00000000188387: je short 0x000000000018838b; add [rax], al; xor eax, eax; ret; 
0x0000000018a06c: je short 0x000000000018a085; std; vmovdqu64 [rdi+rdx-0x100], zmm7; vzeroupper; ret; 
0x0000000018c545: je short 0x000000000018c560; mov eax, [rdi-0x10]; cmp eax, [rsi-0x10]; jne 0x000000000018c680; ret; 
0x0000000018c573: je short 0x000000000018c590; mov eax, [rdi-0x8]; cmp eax, [rsi-0x8]; jne 0x000000000018c680; ret; 
0x000000001905b1: je short 0x00000000001905d7; adc [rcx-0x77], cl; ret; 
0x00000000190d0a: je short 0x0000000000190d1c; movss xmm0, [rip+0x266bc]; divss xmm0, [rip+0x279c8]; ret; 
0x0000000019152c: je short 0x0000000000191530; call rax; 
0x0000000019161b: je short 0x0000000000191624; call rax; 
0x00000000191612: je short 0x0000000000191629; mov rax, [rdi+0x20]; test rax, rax; je short 0x0000000000191624; call rax; 
0x0000000003a93d: jg short 0x000000000003a8ee; sbb al, [rax]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000405d8: jg short 0x00000000000405e3; bnd je 0x0000000000040528; ret; 
0x00000000040b7e: jg short 0x0000000000040ba3; and al, 0xfc; sub eax, 0x7f800000; shr eax, 0x1f; ret; 
0x00000000040c8f: jg short 0x0000000000040c11; shl edi, 0x17; or esi, edi; movd xmm0, esi; ret; 
0x00000000040c27: jg short 0x0000000000040c29; je short 0x0000000000040c30; ret; 
0x00000000040ec4: jg short 0x0000000000040f0e; sub eax, edx; shr rax, 0x3f; ret; 
0x00000000041bfa: jg short 0x0000000000041bfc; add [rax], al; syscall; 
0x00000000045e4c: jg short 0x0000000000045dd7; adc [rcx-0x3f76bbea], cl; ret; 
0x00000000055ca7: jg short 0x0000000000055ca9; or esi, eax; or esi, edx; movd xmm0, esi; ret; 
0x00000000055c39: jg short 0x0000000000055cb0; loopne 0x0000000000055bf5; add [rax], eax; add [rax], al; ret; 
0x000000000611d5: jg short 0x00000000000611d8; ret; 
0x000000000808c1: jg short 0x00000000000808c4; ret; 
0x000000000896ec: jg short 0x0000000000089671; inc byte ptr [rdx]; cmovne edx, ecx; mov [rdi], edx; ret; 
0x0000000008d5a9: jg short 0x000000000008d5db; ret; 
0x0000000008ff21: jg short 0x000000000008ff24; ret; 
0x00000000091048: jg short 0x00000000000910ba; pop rbx; pop rbp; pop r12; ret; 
0x0000000009136d: jg short 0x00000000000913b8; cmovbe esi, eax; syscall; 
0x00000000094c0d: jg short 0x0000000000094bf0; adc al, 0x0; call qword ptr [rax]; 
0x0000000009b6de: jg short 0x000000000009b728; mov rsi, rbp; call rax; 
0x000000000a0af4: jg short 0x00000000000a0aef; jmp qword ptr [rsi+0xf]; 
0x000000000a2c0d: jg short 0x00000000000a2c1e; mov fs, [rsi]; add al, [rax]; add bh, dh; ret; 
0x000000000b3246: jg short 0x00000000000b324f; ret; 
0x000000000b3256: jg short 0x00000000000b325f; mov [rdi+0x10], dh; ret; 
0x000000000b326a: jg short 0x00000000000b3273; mov [rdi+0x10], cx; ret; 
0x000000000b3289: jg short 0x00000000000b3292; mov [rdi+0xf], ecx; ret; 
0x000000000b3299: jg short 0x00000000000b32a2; mov [rdi+0x10], ecx; ret; 
0x000000000b32a9: jg short 0x00000000000b32b2; mov [rdi+0x10], ecx; mov [rdi+0x14], dh; ret; 
0x000000000b32ca: jg short 0x00000000000b32d3; mov [rdi+0xe], rcx; ret; 
0x000000000b32ea: jg short 0x00000000000b32f3; mov [rdi+0xf], rcx; ret; 
0x000000000b330a: jg short 0x00000000000b3313; mov [rdi+0x10], rcx; ret; 
0x000000000b332a: jg short 0x00000000000b3333; mov [rdi+0x10], rcx; mov [rdi+0x18], dh; ret; 
0x000000000b334e: jg short 0x00000000000b3357; mov [rdi+0x10], rdx; mov [rdi+0x18], cx; ret; 
0x000000000b336d: jg short 0x00000000000b3376; mov [rdi+0x10], rdx; mov [rdi+0x17], ecx; ret; 
0x000000000b338d: jg short 0x00000000000b3396; mov [rdi+0x10], rdx; mov [rdi+0x18], ecx; ret; 
0x000000000b33ab: jg short 0x00000000000b33b4; movdqu [rdi+0xd], xmm2; ret; 
0x000000000b33cb: jg short 0x00000000000b33d4; movdqu [rdi+0xe], xmm2; ret; 
0x000000000b33eb: jg short 0x00000000000b33f4; movdqu [rdi+0xf], xmm2; ret; 
0x000000000b340b: jg short 0x00000000000b3414; movdqu [rdi+0x10], xmm2; ret; 
0x000000000b39b8: jg short 0x00000000000b39bb; jne 0x00000000000b4270; ret; 
0x000000000b39dc: jg short 0x00000000000b39e0; jne 0x00000000000b4270; ret; 
0x000000000b39ff: jg short 0x00000000000b3a04; jne 0x00000000000b4270; ret; 
0x000000000b3a1a: jg short 0x00000000000b3a20; jne 0x00000000000b4270; ret; 
0x000000000b3a3d: jg short 0x00000000000b3a44; jne 0x00000000000b4270; ret; 
0x000000000b3a62: jg short 0x00000000000b3a6a; jne 0x00000000000b4270; ret; 
0x000000000b3a80: jg short 0x00000000000b3a89; jne 0x00000000000b4270; ret; 
0x000000000b3a9c: jg short 0x00000000000b3aa6; jne 0x00000000000b4270; ret; 
0x000000000b3abf: jg short 0x00000000000b3aca; jne 0x00000000000b4270; ret; 
0x000000000b3ae4: jg short 0x00000000000b3af0; jne 0x00000000000b4270; ret; 
0x000000000b3b02: jg short 0x00000000000b3b0f; jne 0x00000000000b4270; ret; 
0x000000000b3b22: jg short 0x00000000000b3b30; jne 0x00000000000b4270; ret; 
0x000000000b3b44: jg short 0x00000000000b3b53; jne 0x00000000000b4270; ret; 
0x000000000b3b64: jg short 0x00000000000b3b74; jne 0x00000000000b4270; ret; 
0x000000000b3b84: jg short 0x00000000000b3b95; jne 0x00000000000b4270; ret; 
0x000000000b3b96: jg short 0x00000000000b3b9f; sub r8, 0x10; lea rdi, [rdi+0x10]; jne 0x00000000000b4270; ret; 
0x000000000b3b9e: jg short 0x00000000000b3bb0; jne 0x00000000000b4270; ret; 
0x000000000b3bc1: jg short 0x00000000000b3bd4; jne 0x00000000000b4270; ret; 
0x000000000b3be6: jg short 0x00000000000b3bfa; jne 0x00000000000b4270; ret; 
0x000000000b3c04: jg short 0x00000000000b3c19; jne 0x00000000000b4270; ret; 
0x000000000b3c24: jg short 0x00000000000b3c3a; jne 0x00000000000b4270; ret; 
0x000000000b3c47: jg short 0x00000000000b3c5e; jne 0x00000000000b4270; ret; 
0x000000000b3c66: jg short 0x00000000000b3c7e; jne 0x00000000000b4270; ret; 
0x000000000b3c86: jg short 0x00000000000b3c9f; jne 0x00000000000b4270; ret; 
0x000000000b3ca6: jg short 0x00000000000b3cc0; jne 0x00000000000b4270; ret; 
0x000000000b3cc9: jg short 0x00000000000b3ce4; jne 0x00000000000b4270; ret; 
0x000000000b3cfe: jg short 0x00000000000b3d1a; jne 0x00000000000b4270; ret; 
0x000000000b3d2c: jg short 0x00000000000b3d49; jne 0x00000000000b4270; ret; 
0x000000000b3d5c: jg short 0x00000000000b3d7a; jne 0x00000000000b4270; ret; 
0x000000000b3d88: jg short 0x00000000000b3da7; jne 0x00000000000b4270; ret; 
0x000000000b3db8: jg short 0x00000000000b3dd8; jne 0x00000000000b4270; ret; 
0x000000000b3d7f: jg short 0x00000000000b3dd8; or eax, 0x1de88349; lea rdi, [rdi+0x1d]; jne 0x00000000000b4270; ret; 
0x000000000b3de8: jg short 0x00000000000b3e09; jne 0x00000000000b4270; ret; 
0x000000000b3ddf: jg short 0x00000000000b3e38; cmovns eax, [rbx-0x72b7e018]; jg short 0x00000000000b3e09; jne 0x00000000000b4270; ret; 
0x000000000b3e18: jg short 0x00000000000b3e3a; jne 0x00000000000b4270; ret; 
0x000000000b3f36: jg short 0x00000000000b3f3f; ret; 
0x000000000b3f49: jg short 0x00000000000b3f52; mov [rdi+0x10], cl; ret; 
0x000000000b3f5a: jg short 0x00000000000b3f63; mov [rdi+0x10], cx; ret; 
0x000000000b3f79: jg short 0x00000000000b3f82; mov [rdi+0xf], ecx; ret; 
0x000000000b3f89: jg short 0x00000000000b3f92; mov [rdi+0x10], ecx; ret; 
0x000000000b3f9c: jg short 0x00000000000b3fa5; mov [rdi+0x10], ecx; mov [rdi+0x14], dl; ret; 
0x000000000b3fba: jg short 0x00000000000b3fc3; mov [rdi+0xe], rcx; ret; 
0x000000000b3fda: jg short 0x00000000000b3fe3; mov [rdi+0xf], rcx; ret; 
0x000000000b3ffa: jg short 0x00000000000b4003; mov [rdi+0x10], rcx; ret; 
0x000000000b401d: jg short 0x00000000000b4026; mov [rdi+0x10], rdx; mov [rdi+0x18], cl; ret; 
0x000000000b403e: jg short 0x00000000000b4047; mov [rdi+0x10], rdx; mov [rdi+0x18], cx; ret; 
0x000000000b405d: jg short 0x00000000000b4066; mov [rdi+0x10], rdx; mov [rdi+0x17], ecx; ret; 
0x000000000b407d: jg short 0x00000000000b4086; mov [rdi+0x10], rdx; mov [rdi+0x18], ecx; ret; 
0x000000000b409b: jg short 0x00000000000b40a4; movdqu [rdi+0xd], xmm2; ret; 
0x000000000b40bb: jg short 0x00000000000b40c4; movdqu [rdi+0xe], xmm2; ret; 
0x000000000b40db: jg short 0x00000000000b40e4; movdqu [rdi+0xf], xmm2; ret; 
0x000000000b40fb: jg short 0x00000000000b4104; movdqu [rdi+0x10], xmm2; ret; 
0x000000000b411e: jg short 0x00000000000b4127; movdqu [rdi+0x10], xmm2; mov [rdi+0x20], cl; ret; 
0x000000000b4232: jg short 0x00000000000b423b; ret; 
0x000000000b4222: jg short 0x00000000000b426b; inc ebx; nop [rax+rax]; movdqu [rdi], xmm0; ret; 
0x000000000b4376: jg short 0x00000000000b43a8; ret; 
0x000000000b48f6: jg short 0x00000000000b48ff; lea rax, [rdi+0xf]; ret; 
0x000000000b4906: jg short 0x00000000000b490f; mov [rdi+0x10], dh; lea rax, [rdi+0x10]; ret; 
0x000000000b491a: jg short 0x00000000000b4923; mov [rdi+0x10], cx; lea rax, [rdi+0x11]; ret; 
0x000000000b4939: jg short 0x00000000000b4942; mov [rdi+0xf], ecx; lea rax, [rdi+0x12]; ret; 
0x000000000b4959: jg short 0x00000000000b4962; mov [rdi+0x10], ecx; lea rax, [rdi+0x13]; ret; 
0x000000000b4979: jg short 0x00000000000b4982; mov [rdi+0x10], ecx; mov [rdi+0x14], dh; lea rax, [rdi+0x14]; ret; 
0x000000000b499a: jg short 0x00000000000b49a3; mov [rdi+0xe], rcx; lea rax, [rdi+0x15]; ret; 
0x000000000b49ba: jg short 0x00000000000b49c3; mov [rdi+0xf], rcx; lea rax, [rdi+0x16]; ret; 
0x000000000b49da: jg short 0x00000000000b49e3; mov [rdi+0x10], rcx; lea rax, [rdi+0x17]; ret; 
0x000000000b49fa: jg short 0x00000000000b4a03; mov [rdi+0x10], rcx; mov [rdi+0x18], dh; lea rax, [rdi+0x18]; ret; 
0x000000000b4a1e: jg short 0x00000000000b4a27; mov [rdi+0x10], rdx; mov [rdi+0x18], cx; lea rax, [rdi+0x19]; ret; 
0x000000000b4a3d: jg short 0x00000000000b4a46; mov [rdi+0x10], rdx; mov [rdi+0x17], ecx; lea rax, [rdi+0x1a]; ret; 
0x000000000b4a5d: jg short 0x00000000000b4a66; mov [rdi+0x10], rdx; mov [rdi+0x18], ecx; lea rax, [rdi+0x1b]; ret; 
0x000000000b4a7b: jg short 0x00000000000b4a84; movdqu [rdi+0xd], xmm2; lea rax, [rdi+0x1c]; ret; 
0x000000000b4a9b: jg short 0x00000000000b4aa4; movdqu [rdi+0xe], xmm2; lea rax, [rdi+0x1d]; ret; 
0x000000000b4abb: jg short 0x00000000000b4ac4; movdqu [rdi+0xf], xmm2; lea rax, [rdi+0x1e]; ret; 
0x000000000b4a7f: jg short 0x00000000000b4ad8; or eax, 0x1c478d48; ret; 
0x000000000b4adb: jg short 0x00000000000b4ae4; movdqu [rdi+0x10], xmm2; lea rax, [rdi+0x1f]; ret; 
0x000000000b509b: jg short 0x00000000000b509e; jne 0x00000000000b5ac0; ret; 
0x000000000b50c0: jg short 0x00000000000b50c4; jne 0x00000000000b5ac0; ret; 
0x000000000b50e3: jg short 0x00000000000b50e8; jne 0x00000000000b5ac0; ret; 
0x000000000b50fe: jg short 0x00000000000b5104; jne 0x00000000000b5ac0; ret; 
0x000000000b5121: jg short 0x00000000000b5128; jne 0x00000000000b5ac0; ret; 
0x000000000b5146: jg short 0x00000000000b514e; jne 0x00000000000b5ac0; ret; 
0x000000000b5164: jg short 0x00000000000b516d; jne 0x00000000000b5ac0; ret; 
0x000000000b5180: jg short 0x00000000000b518a; jne 0x00000000000b5ac0; ret; 
0x000000000b51a3: jg short 0x00000000000b51ae; jne 0x00000000000b5ac0; ret; 
0x000000000b51c8: jg short 0x00000000000b51d4; jne 0x00000000000b5ac0; ret; 
0x000000000b51f6: jg short 0x00000000000b5203; jne 0x00000000000b5ac0; ret; 
0x000000000b5216: jg short 0x00000000000b5224; jne 0x00000000000b5ac0; ret; 
0x000000000b5238: jg short 0x00000000000b5247; jne 0x00000000000b5ac0; ret; 
0x000000000b5268: jg short 0x00000000000b5278; jne 0x00000000000b5ac0; ret; 
0x000000000b5298: jg short 0x00000000000b52a9; jne 0x00000000000b5ac0; ret; 
0x000000000b52c2: jg short 0x00000000000b52d4; jne 0x00000000000b5ac0; ret; 
0x000000000b52e5: jg short 0x00000000000b52f8; jne 0x00000000000b5ac0; ret; 
0x000000000b530a: jg short 0x00000000000b531e; jne 0x00000000000b5ac0; ret; 
0x000000000b5338: jg short 0x00000000000b534d; jne 0x00000000000b5ac0; ret; 
0x000000000b5368: jg short 0x00000000000b537e; jne 0x00000000000b5ac0; ret; 
0x000000000b539b: jg short 0x00000000000b53b2; jne 0x00000000000b5ac0; ret; 
0x000000000b53ca: jg short 0x00000000000b53e2; jne 0x00000000000b5ac0; ret; 
0x000000000b53fa: jg short 0x00000000000b5413; jne 0x00000000000b5ac0; ret; 
0x000000000b542a: jg short 0x00000000000b5444; jne 0x00000000000b5ac0; ret; 
0x000000000b545d: jg short 0x00000000000b5478; jne 0x00000000000b5ac0; ret; 
0x000000000b5492: jg short 0x00000000000b54ae; jne 0x00000000000b5ac0; ret; 
0x000000000b54c0: jg short 0x00000000000b54dd; jne 0x00000000000b5ac0; ret; 
0x000000000b54f0: jg short 0x00000000000b550e; jne 0x00000000000b5ac0; ret; 
0x000000000b551c: jg short 0x00000000000b553b; jne 0x00000000000b5ac0; ret; 
0x000000000b554c: jg short 0x00000000000b556c; jne 0x00000000000b5ac0; ret; 
0x000000000b557c: jg short 0x00000000000b559d; jne 0x00000000000b5ac0; ret; 
0x000000000b55ac: jg short 0x00000000000b55ce; jne 0x00000000000b5ac0; ret; 
0x000000000b5756: jg short 0x00000000000b575f; lea rax, [rdi+0x10]; ret; 
0x000000000b5769: jg short 0x00000000000b5772; mov [rdi+0x10], cl; lea rax, [rdi+0x11]; ret; 
0x000000000b578a: jg short 0x00000000000b5793; mov [rdi+0x10], cx; lea rax, [rdi+0x12]; ret; 
0x000000000b57a9: jg short 0x00000000000b57b2; mov [rdi+0xf], ecx; lea rax, [rdi+0x13]; ret; 
0x000000000b57c9: jg short 0x00000000000b57d2; mov [rdi+0x10], ecx; lea rax, [rdi+0x14]; ret; 
0x000000000b57ec: jg short 0x00000000000b57f5; mov [rdi+0x10], ecx; mov [rdi+0x14], dl; lea rax, [rdi+0x15]; ret; 
0x000000000b580a: jg short 0x00000000000b5813; mov [rdi+0xe], rcx; lea rax, [rdi+0x16]; ret; 
0x000000000b582a: jg short 0x00000000000b5833; mov [rdi+0xf], rcx; lea rax, [rdi+0x17]; ret; 
0x000000000b584a: jg short 0x00000000000b5853; mov [rdi+0x10], rcx; lea rax, [rdi+0x18]; ret; 
0x000000000b586d: jg short 0x00000000000b5876; mov [rdi+0x10], rdx; mov [rdi+0x18], cl; lea rax, [rdi+0x19]; ret; 
0x000000000b588e: jg short 0x00000000000b5897; mov [rdi+0x10], rdx; mov [rdi+0x18], cx; lea rax, [rdi+0x1a]; ret; 
0x000000000b58ad: jg short 0x00000000000b58b6; mov [rdi+0x10], rdx; mov [rdi+0x17], ecx; lea rax, [rdi+0x1b]; ret; 
0x000000000b58cd: jg short 0x00000000000b58d6; mov [rdi+0x10], rdx; mov [rdi+0x18], ecx; lea rax, [rdi+0x1c]; ret; 
0x000000000b58eb: jg short 0x00000000000b58f4; movdqu [rdi+0xd], xmm2; lea rax, [rdi+0x1d]; ret; 
0x000000000b590b: jg short 0x00000000000b5914; movdqu [rdi+0xe], xmm2; lea rax, [rdi+0x1e]; ret; 
0x000000000b592b: jg short 0x00000000000b5934; movdqu [rdi+0xf], xmm2; lea rax, [rdi+0x1f]; ret; 
0x000000000b58ef: jg short 0x00000000000b5948; or eax, 0x1d478d48; ret; 
0x000000000b594b: jg short 0x00000000000b5954; movdqu [rdi+0x10], xmm2; lea rax, [rdi+0x20]; ret; 
0x000000000b596e: jg short 0x00000000000b5977; movdqu [rdi+0x10], xmm2; mov [rdi+0x20], cl; ret; 
0x000000000b5a82: jg short 0x00000000000b5a8b; ret; 
0x000000000b5a72: jg short 0x00000000000b5abb; inc ebx; nop [rax+rax]; movdqu [rdi], xmm0; ret; 
0x000000000b5bc6: jg short 0x00000000000b5bf8; lea rax, [rdi+0x40]; ret; 
0x000000000b5bc5: jg short 0x00000000000b5c46; xor [rax-0x73], cl; ret; 
0x000000000b6556: jg short 0x00000000000b655f; ret; 
0x000000000b6566: jg short 0x00000000000b656f; mov [rdi+0x10], dh; ret; 
0x000000000b657a: jg short 0x00000000000b6583; mov [rdi+0x10], cx; ret; 
0x000000000b6599: jg short 0x00000000000b65a2; mov [rdi+0xf], ecx; ret; 
0x000000000b65a9: jg short 0x00000000000b65b2; mov [rdi+0x10], ecx; ret; 
0x000000000b65b9: jg short 0x00000000000b65c2; mov [rdi+0x10], ecx; mov [rdi+0x14], dh; ret; 
0x000000000b65da: jg short 0x00000000000b65e3; mov [rdi+0xe], rcx; ret; 
0x000000000b65fa: jg short 0x00000000000b6603; mov [rdi+0xf], rcx; ret; 
0x000000000b661a: jg short 0x00000000000b6623; mov [rdi+0x10], rcx; ret; 
0x000000000b663a: jg short 0x00000000000b6643; mov [rdi+0x10], rcx; mov [rdi+0x18], dh; ret; 
0x000000000b665e: jg short 0x00000000000b6667; mov [rdi+0x10], rdx; mov [rdi+0x18], cx; ret; 
0x000000000b667d: jg short 0x00000000000b6686; mov [rdi+0x10], rdx; mov [rdi+0x17], ecx; ret; 
0x000000000b669d: jg short 0x00000000000b66a6; mov [rdi+0x10], rdx; mov [rdi+0x18], ecx; ret; 
0x000000000b66bb: jg short 0x00000000000b66c4; movdqu [rdi+0xd], xmm2; ret; 
0x000000000b66db: jg short 0x00000000000b66e4; movdqu [rdi+0xe], xmm2; ret; 
0x000000000b66fb: jg short 0x00000000000b6704; movdqu [rdi+0xf], xmm2; ret; 
0x000000000b671b: jg short 0x00000000000b6724; movdqu [rdi+0x10], xmm2; ret; 
0x000000000b7046: jg short 0x00000000000b704f; ret; 
0x000000000b7056: jg short 0x00000000000b705f; mov [rdi+0x10], dh; ret; 
0x000000000b706a: jg short 0x00000000000b7073; mov [rdi+0x10], cx; ret; 
0x000000000b7089: jg short 0x00000000000b7092; mov [rdi+0xf], ecx; ret; 
0x000000000b7099: jg short 0x00000000000b70a2; mov [rdi+0x10], ecx; ret; 
0x000000000b70a9: jg short 0x00000000000b70b2; mov [rdi+0x10], ecx; mov [rdi+0x14], dh; ret; 
0x000000000b70ca: jg short 0x00000000000b70d3; mov [rdi+0xe], rcx; ret; 
0x000000000b70ea: jg short 0x00000000000b70f3; mov [rdi+0xf], rcx; ret; 
0x000000000b710a: jg short 0x00000000000b7113; mov [rdi+0x10], rcx; ret; 
0x000000000b712a: jg short 0x00000000000b7133; mov [rdi+0x10], rcx; mov [rdi+0x18], dh; ret; 
0x000000000b714e: jg short 0x00000000000b7157; mov [rdi+0x10], rdx; mov [rdi+0x18], cx; ret; 
0x000000000b716d: jg short 0x00000000000b7176; mov [rdi+0x10], rdx; mov [rdi+0x17], ecx; ret; 
0x000000000b718d: jg short 0x00000000000b7196; mov [rdi+0x10], rdx; mov [rdi+0x18], ecx; ret; 
0x000000000b71ab: jg short 0x00000000000b71b4; movdqu [rdi+0xd], xmm2; ret; 
0x000000000b71cb: jg short 0x00000000000b71d4; movdqu [rdi+0xe], xmm2; ret; 
0x000000000b71eb: jg short 0x00000000000b71f4; movdqu [rdi+0xf], xmm2; ret; 
0x000000000b720b: jg short 0x00000000000b7214; movdqu [rdi+0x10], xmm2; ret; 
0x000000000b73b6: jg short 0x00000000000b73bf; xor ch, ch; mov [rdi+0x10], ch; ret; 
0x000000000b73c9: jg short 0x00000000000b73d2; mov [rdi+0x10], cl; xor ch, ch; mov [rdi+0x11], ch; ret; 
0x000000000b73ea: jg short 0x00000000000b73f3; mov [rdi+0x10], cx; xor ch, ch; mov [rdi+0x12], ch; ret; 
0x000000000b7409: jg short 0x00000000000b7412; mov [rdi+0xf], ecx; xor ch, ch; mov [rdi+0x13], ch; ret; 
0x000000000b7429: jg short 0x00000000000b7432; mov [rdi+0x10], ecx; xor ch, ch; mov [rdi+0x14], ch; ret; 
0x000000000b746a: jg short 0x00000000000b7473; mov [rdi+0xe], rcx; xor ch, ch; mov [rdi+0x16], ch; ret; 
0x000000000b748a: jg short 0x00000000000b7493; mov [rdi+0xf], rcx; xor ch, ch; mov [rdi+0x17], ch; ret; 
0x000000000b74aa: jg short 0x00000000000b74b3; mov [rdi+0x10], rcx; xor ch, ch; mov [rdi+0x18], ch; ret; 
0x000000000b754b: jg short 0x00000000000b7554; movdqu [rdi+0xd], xmm2; xor ch, ch; mov [rdi+0x1d], ch; ret; 
0x000000000b756b: jg short 0x00000000000b7574; movdqu [rdi+0xe], xmm2; xor ch, ch; mov [rdi+0x1e], ch; ret; 
0x000000000b758b: jg short 0x00000000000b7594; movdqu [rdi+0xf], xmm2; xor ch, ch; mov [rdi+0x1f], ch; ret; 
0x000000000b75ab: jg short 0x00000000000b75b4; movdqu [rdi+0x10], xmm2; xor ch, ch; mov [rdi+0x20], ch; ret; 
0x000000000b758f: jg short 0x00000000000b75e8; wrmsr; in eax, dx; mov [rdi+0x1f], ch; ret; 
0x000000000b75af: jg short 0x00000000000b7608; adc [rax], dh; in eax, dx; mov [rdi+0x20], ch; ret; 
0x000000000b75d2: jg short 0x00000000000b762b; adc [rax-0x12cfdfb1], cl; mov [rdi+0x21], ch; ret; 
0x000000000b7626: jg short 0x00000000000b7658; xor ch, ch; mov [rdi+0x40], ch; ret; 
0x000000000b7625: jg short 0x00000000000b76a6; xor [rax], dh; in eax, dx; mov [rdi+0x40], ch; ret; 
0x000000000b80c8: jg short 0x00000000000b80fa; movups [r11], xmm8; ret; 
0x000000000b8196: jg short 0x00000000000b81c8; movups [r11], xmm8; ret; 
0x000000000b8224: jg short 0x00000000000b822d; ret; 
0x000000000b82a0: jg short 0x00000000000b82a9; ret; 
0x000000000b82b4: jg short 0x00000000000b82bd; movdqu [rdi+0x10], xmm0; movdqu [rdi+rdx-0x10], xmm0; movdqu [rdi+rdx-0x20], xmm0; ret; 
0x000000000b82b8: jg short 0x00000000000b8301; adc bl, dh; movq [rdi+rdx-0x10], mm0; movdqu [rdi+rdx-0x20], xmm0; ret; 
0x000000000b855b: jg short 0x00000000000b8520; nop [rax]; mov rax, rdx; pop rbx; ret; 
0x000000000cb095: jg short 0x00000000000cb099; neg eax; ret; 
0x000000000cc00b: jg short 0x00000000000cc030; mov rax, r12; pop r12; ret; 
0x000000000cc10e: jg short 0x00000000000cc130; lea rax, [rip+0x11aee9]; add rsp, 0x8; ret; 
0x000000000da19f: jg short 0x00000000000da1e9; cmova edx, eax; mov eax, 0xd9; syscall; 
0x000000000e09ce: jg short 0x00000000000e09d0; add [rax], al; mov edx, 0xfde8; cmove rax, rdx; ret; 
0x000000000e0993: jg short 0x00000000000e09dd; cmp edx, 0x58465342; jne short 0x00000000000e09a0; ret; 
0x000000000e09e8: jg short 0x00000000000e09ea; add [rax], al; mov edx, 0x7d00; cmove rax, rdx; ret; 
0x000000000e0a25: jg short 0x00000000000e0a27; add [rax], al; mov edx, 0x7d00; cmove rax, rdx; ret; 
0x000000000e0a3b: jg short 0x00000000000e0a3d; add [rax], al; cmovne rax, rdx; ret; 
0x000000000e0a36: jg short 0x00000000000e0a4b; add [rax], al; mov edx, 0x7f; cmovne rax, rdx; ret; 
0x000000000e0a5b: jg short 0x00000000000e0a5d; add [rax], al; cmovne rax, rdx; ret; 
0x000000000e1ecd: jg short 0x00000000000e1f3a; cmc; jmp qword ptr [rsi+0x66]; 
0x000000000ee5b9: jg short 0x00000000000ee5ae; call far fword ptr [rbx+0x31]; 
0x00000000103f50: jg short 0x0000000000103f5c; add [rdx+0x63], cl; adc al, 0x89; add rdx, rcx; notrack jmp rdx; 
0x00000000107247: jg short 0x00000000001072c1; movups [rsi+0x70], xmm7; ret; 
0x0000000010729b: jg short 0x0000000000107315; ret; 
0x00000000112b53: jg short 0x0000000000112b60; ret; 
0x0000000011661c: jg short 0x000000000011661d; dec dword ptr [rax-0x77]; ret; 
0x0000000011ae54: jg short 0x000000000011ae62; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x2]; mov eax, 0xffffffff; ret; 
0x00000000137567: jg short 0x000000000013752c; nop [rax]; mov eax, 0xffffffff; ret; 
0x00000000137804: jg short 0x00000000001377c9; nop [rax+rax]; xor eax, eax; ret; 
0x000000001377f2: jg short 0x00000000001377f5; enter 0x480f, 0xc2; ret; 
0x00000000139f10: jg short 0x0000000000139ecd; mov byte ptr [r8], 0x0; mov rax, r10; ret; 
0x00000000141730: jg short 0x000000000014177a; mov eax, [rdi+0x38]; call qword ptr [rax+0x18]; 
0x00000000147c46: jg short 0x0000000000147c88; mov eax, [rdi]; test eax, eax; jne short 0x0000000000147c50; ret; 
0x0000000014e156: jg short 0x000000000014e198; mov eax, [rdi]; test eax, eax; jne short 0x000000000014e160; ret; 
0x000000001517c4: jg short 0x00000000001517c3; jmp qword ptr [rsi+0xf]; 
0x00000000151837: jg short 0x0000000000151836; jmp qword ptr [rsi+0xf]; 
0x000000001565a6: jg short 0x00000000001565a3; dec dword ptr [rax-0x77]; ret; 
0x00000000159806: jg short 0x0000000000159810; push 0x0; lea rcx, [rsi+0x398]; push 0x2; call qword ptr [rax+0x270]; 
0x00000000159857: jg short 0x0000000000159861; push 0x0; lea rcx, [rsi+0x398]; push 0x0; call qword ptr [rax+0x270]; 
0x0000000015f998: jg short 0x000000000015f99f; add [rdi+0x63], cl; or al, 0x8b; lea r9, [r11+r9]; notrack jmp r9; 
0x0000000015f9f9: jg short 0x000000000015fa00; add [rdi+0x63], cl; or al, 0x8b; lea r9, [r11+r9]; notrack jmp r9; 
0x0000000015ff75: jg short 0x000000000015ff37; movaps [rdi+0x10], xmm3; jb short 0x000000000015ff86; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000015ff90: jg short 0x000000000015ff92; lea r11, [rip+0x57837]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001600c5: jg short 0x0000000000160087; movaps [rdi+0x10], xmm3; jb short 0x00000000001600d6; movaps [rdi], xmm4; notrack jmp r9; 
0x000000001600e0: jg short 0x00000000001600e2; lea r11, [rip+0x576e7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160215: jg short 0x00000000001601d7; movaps [rdi+0x10], xmm3; jb short 0x0000000000160226; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000160230: jg short 0x0000000000160232; lea r11, [rip+0x57597]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160365: jg short 0x0000000000160327; movaps [rdi+0x10], xmm3; jb short 0x0000000000160376; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000160380: jg short 0x0000000000160382; lea r11, [rip+0x57447]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001604b5: jg short 0x0000000000160477; movaps [rdi+0x10], xmm3; jb short 0x00000000001604c6; movaps [rdi], xmm4; notrack jmp r9; 
0x000000001604d0: jg short 0x00000000001604d2; lea r11, [rip+0x572f7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160605: jg short 0x00000000001605c7; movaps [rdi+0x10], xmm3; jb short 0x0000000000160616; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000160620: jg short 0x0000000000160622; lea r11, [rip+0x571a7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160755: jg short 0x0000000000160717; movaps [rdi+0x10], xmm3; jb short 0x0000000000160766; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000160770: jg short 0x0000000000160772; lea r11, [rip+0x57057]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160825: jg short 0x0000000000160827; lea r11, [rip+0x56fa2]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001608a5: jg short 0x0000000000160867; movaps [rdi+0x10], xmm3; jb short 0x00000000001608b6; movaps [rdi], xmm4; notrack jmp r9; 
0x000000001608c0: jg short 0x00000000001608c2; lea r11, [rip+0x56f07]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001609f5: jg short 0x00000000001609b7; movaps [rdi+0x10], xmm3; jb short 0x0000000000160a06; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000160a10: jg short 0x0000000000160a12; lea r11, [rip+0x56db7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160b45: jg short 0x0000000000160b07; movaps [rdi+0x10], xmm3; jb short 0x0000000000160b56; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000160b60: jg short 0x0000000000160b62; lea r11, [rip+0x56c67]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160c95: jg short 0x0000000000160c57; movaps [rdi+0x10], xmm3; jb short 0x0000000000160ca6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000160cb0: jg short 0x0000000000160cb2; lea r11, [rip+0x56b17]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160de5: jg short 0x0000000000160da7; movaps [rdi+0x10], xmm3; jb short 0x0000000000160df6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000160e00: jg short 0x0000000000160e02; lea r11, [rip+0x569c7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160f35: jg short 0x0000000000160ef7; movaps [rdi+0x10], xmm3; jb short 0x0000000000160f46; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000160f50: jg short 0x0000000000160f52; lea r11, [rip+0x56877]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000161085: jg short 0x0000000000161047; movaps [rdi+0x10], xmm3; jb short 0x0000000000161096; movaps [rdi], xmm4; notrack jmp r9; 
0x000000001610a0: jg short 0x00000000001610a2; lea r11, [rip+0x56727]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001611d5: jg short 0x0000000000161197; movaps [rdi+0x10], xmm3; jb short 0x00000000001611e6; movaps [rdi], xmm4; notrack jmp r9; 
0x000000001611f0: jg short 0x00000000001611f2; lea r11, [rip+0x565d7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000161b59: jg short 0x0000000000161baa; ret; 
0x00000000161ba0: jg short 0x0000000000161be9; mov ebx, 0x4f7f0ff3; ret far; 
0x00000000161ba5: jg short 0x0000000000161bf6; ret far; 
0x00000000161bdf: jg short 0x0000000000161c28; ret; 
0x00000000161c1f: jg short 0x0000000000161c68; ret far; 
0x00000000162955: jg short 0x0000000000162917; movaps [rdi+0x10], xmm3; jb short 0x0000000000162966; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000162970: jg short 0x0000000000162972; lea r11, [rip+0x55017]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162aa5: jg short 0x0000000000162a67; movaps [rdi+0x10], xmm3; jb short 0x0000000000162ab6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000162ac0: jg short 0x0000000000162ac2; lea r11, [rip+0x54ec7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162bf5: jg short 0x0000000000162bb7; movaps [rdi+0x10], xmm3; jb short 0x0000000000162c06; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000162c10: jg short 0x0000000000162c12; lea r11, [rip+0x54d77]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162d45: jg short 0x0000000000162d07; movaps [rdi+0x10], xmm3; jb short 0x0000000000162d56; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000162d60: jg short 0x0000000000162d62; lea r11, [rip+0x54c27]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162e95: jg short 0x0000000000162e57; movaps [rdi+0x10], xmm3; jb short 0x0000000000162ea6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000162eb0: jg short 0x0000000000162eb2; lea r11, [rip+0x54ad7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162fe5: jg short 0x0000000000162fa7; movaps [rdi+0x10], xmm3; jb short 0x0000000000162ff6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000163000: jg short 0x0000000000163002; lea r11, [rip+0x54987]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000163135: jg short 0x00000000001630f7; movaps [rdi+0x10], xmm3; jb short 0x0000000000163146; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000163150: jg short 0x0000000000163152; lea r11, [rip+0x54837]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000163205: jg short 0x0000000000163207; lea r11, [rip+0x54782]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000163285: jg short 0x0000000000163247; movaps [rdi+0x10], xmm3; jb short 0x0000000000163296; movaps [rdi], xmm4; notrack jmp r9; 
0x000000001632a0: jg short 0x00000000001632a2; lea r11, [rip+0x546e7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001633d5: jg short 0x0000000000163397; movaps [rdi+0x10], xmm3; jb short 0x00000000001633e6; movaps [rdi], xmm4; notrack jmp r9; 
0x000000001633f0: jg short 0x00000000001633f2; lea r11, [rip+0x54597]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000163525: jg short 0x00000000001634e7; movaps [rdi+0x10], xmm3; jb short 0x0000000000163536; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000163540: jg short 0x0000000000163542; lea r11, [rip+0x54447]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000163675: jg short 0x0000000000163637; movaps [rdi+0x10], xmm3; jb short 0x0000000000163686; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000163690: jg short 0x0000000000163692; lea r11, [rip+0x542f7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001637c5: jg short 0x0000000000163787; movaps [rdi+0x10], xmm3; jb short 0x00000000001637d6; movaps [rdi], xmm4; notrack jmp r9; 
0x000000001637e0: jg short 0x00000000001637e2; lea r11, [rip+0x541a7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000163915: jg short 0x00000000001638d7; movaps [rdi+0x10], xmm3; jb short 0x0000000000163926; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000163930: jg short 0x0000000000163932; lea r11, [rip+0x54057]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000163a65: jg short 0x0000000000163a27; movaps [rdi+0x10], xmm3; jb short 0x0000000000163a76; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000163a80: jg short 0x0000000000163a82; lea r11, [rip+0x53f07]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000163bb5: jg short 0x0000000000163b77; movaps [rdi+0x10], xmm3; jb short 0x0000000000163bc6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000163bd0: jg short 0x0000000000163bd2; lea r11, [rip+0x53db7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000164539: jg short 0x000000000016458a; ret; 
0x00000000164580: jg short 0x00000000001645c9; mov ebx, 0x4f7f0ff3; ret far; 
0x00000000164585: jg short 0x00000000001645d6; ret far; 
0x000000001645bf: jg short 0x0000000000164608; ret; 
0x000000001645ff: jg short 0x0000000000164648; ret far; 
0x000000001650cd: jg short 0x00000000001650f9; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166b48: jg short 0x0000000000166b91; loope 0x0000000000166b3f; movq [rdi-0x10], mm1; ret; 
0x00000000166bd8: jg short 0x0000000000166c21; loop 0x0000000000166bcf; movq [rdi-0x10], mm1; ret; 
0x00000000166c4f: jg short 0x0000000000166c98; ret; 
0x00000000166c68: jg short 0x0000000000166cb1; jrcxz 0x0000000000166c5f; movq [rdi-0x10], mm1; ret; 
0x00000000166cf8: jg short 0x0000000000166d41; in al, 0xf3; movq [rdi-0x10], mm1; ret; 
0x00000000166d78: jg short 0x0000000000166dc1; in eax, 0xf3; movq [rdi-0x10], mm1; ret; 
0x00000000166df8: jg short 0x0000000000166e41; out 0xf3, al; movq [rdi-0x10], mm1; ret; 
0x00000000166e78: jg short 0x0000000000166ec1; out 0xf3, eax; movq [rdi-0x10], mm1; ret; 
0x00000000167055: jg short 0x000000000016709e; mov ebx, 0x46f00ff2; ret far; 
0x0000000016705f: jg short 0x00000000001670a8; ret far; 
0x000000001670f8: jg short 0x0000000000167141; in al, dx; movdqu [rdi-0x10], xmm1; ret; 
0x00000000167178: jg short 0x00000000001671c1; in eax, dx; movdqu [rdi-0x10], xmm1; ret; 
0x00000000167208: jg short 0x0000000000167251; out dx, al; movdqu [rdi-0x10], xmm1; ret; 
0x00000000167288: jg short 0x00000000001672d1; out dx, eax; movdqu [rdi-0x10], xmm1; ret; 
0x000000001672fc: jg short 0x0000000000167305; ret; 
0x00000000167356: jg short 0x0000000000167367; ret; 
0x00000000167351: jg short 0x000000000016739a; psllq mm1, [rdi]; jg short 0x0000000000167367; ret; 
0x000000001673c6: jg short 0x00000000001673d7; ret; 
0x00000000167436: jg short 0x0000000000167447; ret; 
0x00000000167431: jg short 0x000000000016747a; or eax, 0xf7f0ff3; ret; 
0x000000001674a6: jg short 0x00000000001674b7; ret; 
0x000000001674a1: jg short 0x00000000001674ea; or al, 0xf3; movq [rdi], mm1; ret; 
0x00000000167516: jg short 0x0000000000167527; ret; 
0x00000000167511: jg short 0x000000000016755a; or esi, ebx; movq [rdi], mm1; ret; 
0x00000000167586: jg short 0x0000000000167597; ret; 
0x00000000167581: jg short 0x00000000001675ca; or dh, bl; movq [rdi], mm1; ret; 
0x000000001675f6: jg short 0x0000000000167607; ret; 
0x000000001675f1: jg short 0x000000000016763a; or ebx, esi; movq [rdi], mm1; ret; 
0x00000000167666: jg short 0x0000000000167677; ret; 
0x00000000167661: jg short 0x00000000001676aa; or bl, dh; movq [rdi], mm1; ret; 
0x000000001676d6: jg short 0x00000000001676e7; ret; 
0x00000000167746: jg short 0x0000000000167757; ret; 
0x000000001677b6: jg short 0x00000000001677c7; ret; 
0x000000001677b1: jg short 0x00000000001677fa; add eax, 0xf7f0ff3; ret; 
0x00000000167826: jg short 0x0000000000167837; ret; 
0x00000000167821: jg short 0x000000000016786a; add al, 0xf3; movq [rdi], mm1; ret; 
0x00000000167896: jg short 0x00000000001678a7; ret; 
0x00000000167891: jg short 0x00000000001678da; add esi, ebx; movq [rdi], mm1; ret; 
0x00000000167906: jg short 0x0000000000167917; ret; 
0x00000000167901: jg short 0x000000000016794a; add dh, bl; movq [rdi], mm1; ret; 
0x00000000167976: jg short 0x0000000000167987; ret; 
0x00000000167971: jg short 0x00000000001679ba; add ebx, esi; movq [rdi], mm1; ret; 
0x00000000167bcd: jg short 0x0000000000167bd3; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169678: jg short 0x00000000001696c1; loope 0x000000000016966f; movq [rdi-0x10], mm1; ret; 
0x00000000169708: jg short 0x0000000000169751; loop 0x00000000001696ff; movq [rdi-0x10], mm1; ret; 
0x0000000016977f: jg short 0x00000000001697c8; ret; 
0x00000000169798: jg short 0x00000000001697e1; jrcxz 0x000000000016978f; movq [rdi-0x10], mm1; ret; 
0x00000000169828: jg short 0x0000000000169871; in al, 0xf3; movq [rdi-0x10], mm1; ret; 
0x000000001698a8: jg short 0x00000000001698f1; in eax, 0xf3; movq [rdi-0x10], mm1; ret; 
0x00000000169928: jg short 0x0000000000169971; out 0xf3, al; movq [rdi-0x10], mm1; ret; 
0x000000001699a8: jg short 0x00000000001699f1; out 0xf3, eax; movq [rdi-0x10], mm1; ret; 
0x00000000169b85: jg short 0x0000000000169bce; mov ebx, 0x46f00ff2; ret far; 
0x00000000169b8f: jg short 0x0000000000169bd8; ret far; 
0x00000000169c28: jg short 0x0000000000169c71; in al, dx; movdqu [rdi-0x10], xmm1; ret; 
0x00000000169ca8: jg short 0x0000000000169cf1; in eax, dx; movdqu [rdi-0x10], xmm1; ret; 
0x00000000169d38: jg short 0x0000000000169d81; out dx, al; movdqu [rdi-0x10], xmm1; ret; 
0x00000000169db8: jg short 0x0000000000169e01; out dx, eax; movdqu [rdi-0x10], xmm1; ret; 
0x00000000169e2c: jg short 0x0000000000169e35; ret; 
0x00000000169e86: jg short 0x0000000000169e97; ret; 
0x00000000169e81: jg short 0x0000000000169eca; psllq mm1, [rdi]; jg short 0x0000000000169e97; ret; 
0x00000000169ef6: jg short 0x0000000000169f07; ret; 
0x00000000169f66: jg short 0x0000000000169f77; ret; 
0x00000000169f61: jg short 0x0000000000169faa; or eax, 0xf7f0ff3; ret; 
0x00000000169fd6: jg short 0x0000000000169fe7; ret; 
0x00000000169fd1: jg short 0x000000000016a01a; or al, 0xf3; movq [rdi], mm1; ret; 
0x0000000016a046: jg short 0x000000000016a057; ret; 
0x0000000016a041: jg short 0x000000000016a08a; or esi, ebx; movq [rdi], mm1; ret; 
0x0000000016a0b6: jg short 0x000000000016a0c7; ret; 
0x0000000016a0b1: jg short 0x000000000016a0fa; or dh, bl; movq [rdi], mm1; ret; 
0x0000000016a126: jg short 0x000000000016a137; ret; 
0x0000000016a121: jg short 0x000000000016a16a; or ebx, esi; movq [rdi], mm1; ret; 
0x0000000016a196: jg short 0x000000000016a1a7; ret; 
0x0000000016a191: jg short 0x000000000016a1da; or bl, dh; movq [rdi], mm1; ret; 
0x0000000016a206: jg short 0x000000000016a217; ret; 
0x0000000016a276: jg short 0x000000000016a287; ret; 
0x0000000016a2e6: jg short 0x000000000016a2f7; ret; 
0x0000000016a2e1: jg short 0x000000000016a32a; add eax, 0xf7f0ff3; ret; 
0x0000000016a356: jg short 0x000000000016a367; ret; 
0x0000000016a351: jg short 0x000000000016a39a; add al, 0xf3; movq [rdi], mm1; ret; 
0x0000000016a3c6: jg short 0x000000000016a3d7; ret; 
0x0000000016a3c1: jg short 0x000000000016a40a; add esi, ebx; movq [rdi], mm1; ret; 
0x0000000016a436: jg short 0x000000000016a447; ret; 
0x0000000016a431: jg short 0x000000000016a47a; add dh, bl; movq [rdi], mm1; ret; 
0x0000000016a4a6: jg short 0x000000000016a4b7; ret; 
0x0000000016a4a1: jg short 0x000000000016a4ea; add ebx, esi; movq [rdi], mm1; ret; 
0x0000000017d594: jg short 0x000000000017d5a4; pcmpistri xmm1, xmm1, 0x3a; cmp edx, ecx; jle 0x000000000017d640; ret; 
0x00000000182a12: jg short 0x0000000000182a28; pextrw edi, mm5, 0x74; ret far; 
0x00000000182c6c: jg short 0x0000000000182c85; vmovdqu [rdi+rdx-0xf], xmm3; vzeroupper; ret; 
0x00000000182c8c: jg short 0x0000000000182ca5; vmovdqu [rdi+rdx-0x1f], ymm3; vzeroupper; ret; 
0x000000001830ed: jg short 0x0000000000183103; pextrw edi, mm5, 0x74; ret far; 
0x0000000018344c: jg short 0x0000000000183465; vmovdqu [rdi+rdx-0xf], xmm3; vzeroupper; ret; 
0x0000000018346c: jg short 0x0000000000183485; vmovdqu [rdi+rdx-0x1f], ymm3; vzeroupper; ret; 
0x0000000018350d: jg short 0x0000000000183526; vmovdqu [rdi+r8-0x10], xmm3; mov byte ptr [rdi+r8], 0x0; vzeroupper; ret; 
0x0000000018352d: jg short 0x0000000000183546; vmovdqu [rdi+r8-0x20], ymm3; mov byte ptr [rdi+r8], 0x0; vzeroupper; ret; 
0x000000001835a9: jg short 0x000000000018360b; mov byte ptr [rdi+0x80], 0x0; vzeroupper; ret; 
0x000000001837b2: jg short 0x00000000001837c8; pextrw edi, mm5, 0x74; ret far; 
0x00000000183a0c: jg short 0x0000000000183a25; vmovdqu [rdi+rdx-0xf], xmm3; vzeroupper; ret; 
0x00000000183a2c: jg short 0x0000000000183a45; vmovdqu [rdi+rdx-0x1f], ymm3; vzeroupper; ret; 
0x00000000183bad: jg short 0x0000000000183bc3; pextrw edi, mm5, 0x74; ret far; 
0x00000000183d6e: jg short 0x0000000000183d71; jne 0x00000000001841a0; vzeroupper; ret; 
0x00000000183f1c: jg short 0x0000000000183f20; jne 0x00000000001841a0; vzeroupper; ret; 
0x00000000183f40: jg short 0x0000000000183f45; jne 0x00000000001841a0; vzeroupper; ret; 
0x00000000183f5a: jg short 0x0000000000183f60; jne 0x00000000001841a0; vzeroupper; ret; 
0x000000001840bd: jg short 0x00000000001840d6; vmovdqu [rdi+r8-0x10], xmm3; vzeroupper; ret; 
0x000000001840dd: jg short 0x00000000001840f6; vmovdqu [rdi+r8-0x20], ymm3; vzeroupper; ret; 
0x000000001840fe: jg short 0x0000000000184117; vmovdqu [rdi+0x20], ymm3; mov [rdi+0x40], cl; vzeroupper; ret; 
0x00000000184162: jg short 0x000000000018416b; vmovdqu [rdi+r8-0x10], xmm0; vzeroupper; ret; 
0x000000001842a9: jg short 0x000000000018430b; vzeroupper; ret; 
0x000000001844a2: jg short 0x00000000001844b8; pextrw edi, mm5, 0x74; ret far; 
0x0000000018471c: jg short 0x0000000000184735; vmovdqu [rdi+rdx-0xf], xmm3; lea rax, [rdi+rdx]; vzeroupper; ret; 
0x0000000018473c: jg short 0x0000000000184755; vmovdqu [rdi+rdx-0x1f], ymm3; lea rax, [rdi+rdx]; vzeroupper; ret; 
0x000000001848bd: jg short 0x00000000001848d3; pextrw edi, mm5, 0x74; ret far; 
0x00000000184a86: jg short 0x0000000000184a89; jne 0x0000000000184ed0; vzeroupper; ret; 
0x00000000184c50: jg short 0x0000000000184c54; jne 0x0000000000184ed0; vzeroupper; ret; 
0x00000000184c74: jg short 0x0000000000184c79; jne 0x0000000000184ed0; vzeroupper; ret; 
0x00000000184c8e: jg short 0x0000000000184c94; jne 0x0000000000184ed0; vzeroupper; ret; 
0x00000000184ded: jg short 0x0000000000184e06; vmovdqu [rdi+r8-0x10], xmm3; lea rax, [rdi+r8]; vzeroupper; ret; 
0x00000000184e0d: jg short 0x0000000000184e26; vmovdqu [rdi+r8-0x20], ymm3; lea rax, [rdi+r8]; vzeroupper; ret; 
0x00000000184e92: jg short 0x0000000000184e9b; vmovdqu [rdi+r8-0x10], xmm0; vzeroupper; ret; 
0x00000000184fd9: jg short 0x000000000018503b; lea rax, [rdi+0x80]; vzeroupper; ret; 
0x00000000185137: jg short 0x0000000000185140; vmovdqu [rdi+rdx-0x20], ymm1; vzeroupper; ret; 
0x000000001851a3: jg short 0x00000000001851ac; vmovdqu [rdi+rdx-0x20], ymm1; vzeroupper; ret; 
0x000000001851fe: jg short 0x0000000000185207; vmovdqu [rdi+rdx-0x10], xmm1; ret; 
0x0000000018538f: jg short 0x00000000001853b4; vzeroupper; ret; 
0x00000000185389: jg short 0x00000000001853cc; mov al, [0x77f8c5237f7ec1c4]; ret; 
0x00000000185384: jg short 0x00000000001853ff; rol ch, 0x7e; jg short 0x00000000001853cc; mov al, [0x77f8c5237f7ec1c4]; ret; 
0x00000000185436: jg short 0x000000000018543b; vzeroupper; ret; 
0x00000000185431: jg short 0x0000000000185493; vmovdqu [r11], ymm8; vzeroupper; ret; 
0x000000001854c2: jg short 0x00000000001854e7; vzeroupper; ret; 
0x000000001854bc: jg short 0x00000000001854ff; mov al, [0x77f8c5237f7ec1c4]; ret; 
0x000000001854b7: jg short 0x0000000000185532; rol ch, 0x7e; jg short 0x00000000001854ff; mov al, [0x77f8c5237f7ec1c4]; ret; 
0x00000000185552: jg short 0x0000000000185557; vzeroupper; ret; 
0x0000000018554d: jg short 0x00000000001855af; vmovdqu [r11], ymm8; vzeroupper; ret; 
0x000000001855c8: jg short 0x00000000001855d1; vzeroupper; ret; 
0x00000000185628: jg short 0x0000000000185631; vzeroupper; ret; 
0x000000001856e7: jg short 0x00000000001856f0; vzeroupper; ret; 
0x00000000189584: jg short 0x000000000018958d; vmovdqu [rdi+0x20], ymm1; vmovdqu [r9-0x40], ymm2; vmovdqu [r9-0x20], ymm3; ret; 
0x000000001895a8: jg short 0x00000000001895b1; vmovdqu [r9-0x20], ymm1; ret; 
0x000000001895bc: jg short 0x00000000001895c5; vmovdqu [r9-0x10], xmm1; ret; 
0x00000000189a2e: jg short 0x0000000000189a28; ret; 
0x00000000189c9b: jg short 0x0000000000189ca4; vmovdqu [rsi-0x10], xmm0; ret; 
0x00000000189c91: jg short 0x0000000000189caa; vmovdqu [rsi-0x20], ymm2; ret; 
0x00000000189c95: jg short 0x0000000000189ced; loopne 0x0000000000189c5c; vmovdqu [rdi], xmm0; vmovdqu [rsi-0x10], xmm0; ret; 
0x00000000189ebf: jg short 0x0000000000189ec9; vmovdqu64 [rdi+rdx-0x40], zmm1; vzeroupper; ret; 
0x00000000189f2b: jg short 0x0000000000189f35; vmovdqu64 [rdi+rdx-0x40], zmm1; vzeroupper; ret; 
0x00000000189f8e: jg short 0x0000000000189f97; vmovdqu [rdi+rdx-0x20], ymm1; vzeroupper; ret; 
0x00000000189fa6: jg short 0x0000000000189faf; vmovdqu [rdi+rdx-0x10], xmm1; ret; 
0x0000000018a189: jg short 0x000000000018a1af; vzeroupper; ret; 
0x0000000018a182: jg short 0x000000000018a1c6; std; vmovdqu64 [r11], zmm4; vzeroupper; ret; 
0x0000000018a174: jg short 0x000000000018a1e8; jmp qword ptr [rdx-0xf]; 
0x0000000018a24a: jg short 0x000000000018a24f; vmovdqu64 [r11], zmm8; vzeroupper; ret; 
0x0000000018a24f: jg short 0x000000000018a255; vzeroupper; ret; 
0x0000000018a20f: jg short 0x000000000018a25b; jmp qword ptr [rdx-0x2f]; 
0x0000000018a314: jg short 0x000000000018a33a; vzeroupper; ret; 
0x0000000018a30d: jg short 0x000000000018a351; std; vmovdqu64 [r11], zmm4; vzeroupper; ret; 
0x0000000018a2ff: jg short 0x000000000018a373; jmp qword ptr [rdx-0xf]; 
0x0000000018a3d4: jg short 0x000000000018a3d9; vmovdqu64 [r11], zmm8; vzeroupper; ret; 
0x0000000018a3d9: jg short 0x000000000018a3df; vzeroupper; ret; 
0x0000000018a458: jg short 0x000000000018a462; vzeroupper; ret; 
0x0000000018a4c4: jg short 0x000000000018a4ce; vzeroupper; ret; 
0x0000000018a5af: jg short 0x000000000018a5b8; vzeroupper; ret; 
0x0000000018a5bd: jg short 0x000000000018a5c6; vzeroupper; ret; 
0x0000000018c685: jg short 0x000000000018c690; neg eax; ret; 
0x0000000004546b: jge short 0x0000000000045475; call rax; 
0x000000000525da: jge short 0x00000000000525dc; cmp cl, [rdi]; xchg esp, eax; ret; 
0x000000000543c8: jge short 0x0000000000054413; shl ecx, cl; mov [rdi], r9; ret; 
0x0000000008ce24: jge short 0x000000000008ce26; sbb eax, 0xe9ebe374; nop [rax+rax]; xor eax, eax; ret; 
0x0000000009b9c7: jge short 0x000000000009ba3d; adc al, 0x0; mov dword ptr fs:[rax], 0xc; xor eax, eax; ret; 
0x0000000009d38a: jge short 0x000000000009d39a; add [rax-0x73], cl; add eax, 0xe7dcc; cmove rax, rdx; ret; 
0x000000000deab4: jge short 0x00000000000deac6; add [rcx+rcx*4-0x31], cl; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000e20c2: jge short 0x00000000000e2139; ret far; 
0x00000000108cfd: jge short 0x0000000000108cf8; dec dword ptr [rax-0x75]; and al, 0x8; add rsp, 0x28; ret; 
0x0000000010a9c7: jge short 0x000000000010a94d; or eax, 0x64d8f700; mov [rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010b012: jge short 0x000000000010b02c; mov rsi, [rsp+0x28]; lea rcx, [rbp+0x28]; mov edx, 0x1; call qword ptr [rbp+0x40]; 
0x0000000010b2f2: jge short 0x000000000010b30c; mov rsi, [rsp+0x28]; lea rcx, [rbp+0x28]; mov edx, 0x5; call qword ptr [rbp+0x40]; 
0x0000000010b372: jge short 0x000000000010b38c; mov rsi, [rsp+0x28]; lea rcx, [rbp+0x28]; mov edx, 0x2; call qword ptr [rbp+0x40]; 
0x00000000114ad5: jge short 0x0000000000114ad7; call rbx; 
0x00000000114b65: jge short 0x0000000000114b67; call rbx; 
0x00000000114b58: jge short 0x0000000000114b6a; test rdi, rdi; jne 0x0000000000114c80; mov rdi, [r13]; call rbx; 
0x00000000114b98: jge short 0x0000000000114b9a; call rbx; 
0x00000000114b8b: jge short 0x0000000000114b9d; test rdi, rdi; jne 0x0000000000114c20; mov rdi, [r13]; call rbx; 
0x00000000114bcd: jge short 0x0000000000114bcf; call rbx; 
0x00000000114bc0: jge short 0x0000000000114bd2; test rdi, rdi; jne 0x0000000000114c60; mov rdi, [r13]; call rbx; 
0x00000000114bf5: jge short 0x0000000000114bf7; call rbx; 
0x00000000114bec: jge short 0x0000000000114bfe; test rdi, rdi; jne short 0x0000000000114c40; mov rdi, [r13]; call rbx; 
0x0000000011591e: jge short 0x0000000000115920; call rbx; 
0x000000001159cd: jge short 0x00000000001159cf; call rbx; 
0x000000001159c0: jge short 0x00000000001159d2; test rdi, rdi; jne 0x0000000000115a80; mov rdi, [r13]; call rbx; 
0x000000001159f9: jge short 0x00000000001159fb; call rbx; 
0x000000001159f0: jge short 0x0000000000115a02; test rdi, rdi; jne short 0x0000000000115a60; mov rdi, [r13]; call rbx; 
0x00000000115a25: jge short 0x0000000000115a27; call rbx; 
0x00000000115a1c: jge short 0x0000000000115a2e; test rdi, rdi; jne short 0x0000000000115a40; mov rdi, [r13]; call rbx; 
0x00000000119c55: jge short 0x0000000000119c57; add [rax], al; syscall; 
0x0000000011b0b4: jge short 0x000000000011b0c2; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x2]; mov rax, 0xffffffffffffffff; ret; 
0x0000000011b0fb: jge short 0x000000000011b10a; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x2]; mov eax, 0xffffffff; ret; 
0x0000000011b12c: jge short 0x000000000011b13a; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x2]; mov eax, 0xffffffff; ret; 
0x000000001200cb: jge short 0x00000000001200d9; add [rcx], al; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x00000000126228: jge short 0x00000000001261b2; call rcx; 
0x000000001266a6: jge short 0x0000000000126630; call rax; 
0x00000000126878: jge short 0x0000000000126802; call rax; 
0x000000001269ab: jge short 0x0000000000126935; call rax; 
0x000000001285ff: jge short 0x00000000001285f3; call qword ptr [rax-0x18]; 
0x000000001356cb: jge short 0x000000000013566d; syscall; 
0x0000000013f993: jge short 0x000000000013f995; call qword ptr [rsp+0x20]; 
0x00000000141a06: jge short 0x0000000000141a08; test rdi, rdi; je short 0x0000000000141a1c; mov rax, [rdi+0x8]; call qword ptr [rax+0x20]; 
0x00000000141ba8: jge short 0x0000000000141baa; test rdi, rdi; je short 0x0000000000141bb6; mov rax, [rdi+0x8]; call qword ptr [rax+0x20]; 
0x00000000144843: jge short 0x0000000000144845; add rbx, rax; sub edx, eax; mov rsi, rbx; call qword ptr [rbp+0x40]; 
0x00000000144903: jge short 0x0000000000144905; add rbx, rax; sub edx, eax; mov rsi, rbx; call qword ptr [rbp+0x40]; 
0x00000000147d35: jge short 0x0000000000147d30; dec dword ptr [rcx-0x17f7dbbc]; movd ecx, mm7; jmp qword ptr [rsi+0xf]; 
0x00000000149c28: jge short 0x0000000000149c92; call rax; 
0x0000000014a6c8: jge short 0x000000000014a722; call rax; 
0x0000000014b050: jge short 0x000000000014b051; inc dword ptr [rbp+0x497974c0]; mov eax, [rdi+0x60]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x0000000014c343: jge short 0x000000000014c345; mov rax, [rdi+0x8]; call qword ptr [rax+0x20]; 
0x00000000151977: jge short 0x0000000000151976; jmp qword ptr [rsi+0xf]; 
0x0000000015acb2: jge short 0x000000000015ad29; ret far; 
0x0000000015cec7: jge short 0x000000000015cf28; or [rax], al; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x0000000015fa6c: jge short 0x000000000015fa73; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016260f: jge short 0x0000000000162664; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000018a391: jge short 0x000000000018a3db; out 0x49, eax; jmp qword ptr [rdx-0x2f]; 
0x00000000190d7d: jge short 0x0000000000190d8f; add rdi, rbp; call r12; 
0x0000000017e5e5: jl 0x000000000017e680; add eax, 0x40; add rax, rdi; vzeroupper; ret; 
0x0000000017e594: jl 0x000000000017e680; add rax, rdi; vzeroupper; ret; 
0x00000000028c36: jl short 0x0000000000028c5c; or al, 0x48; mov edx, [rax]; call rbp; 
0x0000000002bfe6: jl short 0x000000000002c00c; pop rax; mov rax, [rsp+0x28]; call rax; 
0x0000000002c0f0: jl short 0x000000000002c116; sbb [rax-0x7d], cl; ret; 
0x0000000002ccdb: jl short 0x000000000002cd01; pop rax; mov rax, [rsp+0x28]; call rax; 
0x0000000002d284: jl short 0x000000000002d2aa; pop rax; mov rax, [rsp+0x20]; call rax; 
0x0000000002da7a: jl short 0x000000000002daa0; push rax; mov rax, [rsp+0x18]; call rax; 
0x0000000002e0f0: jl short 0x000000000002e116; pop rax; call r13; 
0x0000000002ed89: jl short 0x000000000002edaf; push rax; call r14; 
0x0000000002fd38: jl short 0x000000000002fd5e; mov rax, [rsp+0x28]; call rax; 
0x00000000030d29: jl short 0x0000000000030d4f; push rax; mov rax, [rsp+0x20]; call rax; 
0x000000000316a0: jl short 0x00000000000316c6; pop rax; call r13; 
0x000000000323d0: jl short 0x00000000000323f6; push rax; mov rax, [rsp+0x10]; call rax; 
0x00000000032de0: jl short 0x0000000000032e06; pop rax; call r13; 
0x000000000361de: jl short 0x0000000000036214; jmp far fword ptr [rsi]; 
0x0000000003d3a6: jl short 0x000000000003d3af; add [rax-0x9], ecx; ror byte ptr [rax+0x1], 0x1; ret; 
0x00000000041c68: jl short 0x0000000000041c8e; or [rsi+0x8], bh; mov r8d, eax; mov eax, 0x82; syscall; 
0x00000000046405: jl short 0x000000000004642b; or [rax+0x13e], bh; syscall; 
0x0000000004928b: jl short 0x00000000000492b1; js short 0x0000000000049212; ret; 
0x0000000004bf8b: jl short 0x000000000004bfb1; js short 0x000000000004bf12; ret; 
0x00000000059daf: jl short 0x0000000000059dd6; adc [rax-0x77], cl; jl short 0x0000000000059ddb; sbb al, ch; ret; 
0x00000000059db5: jl short 0x0000000000059ddb; sbb al, ch; ret; 
0x0000000005d514: jl short 0x000000000005d53a; adc cl, bl; in eax, 0xdf; loopne 0x000000000005d4a5; ret; 
0x0000000005dbb8: jl short 0x000000000005dbde; xor [rcx-0x77], cl; ret; 
0x0000000005ed7f: jl short 0x000000000005ed7d; jmp qword ptr [rsi+0x2e]; 
0x00000000060a1a: jl short 0x0000000000060a31; jmp far fword ptr [rdi]; 
0x00000000088dd0: jl short 0x0000000000088dce; cli; jmp qword ptr [rsi+0x66]; 
0x00000000096178: jl short 0x000000000009617a; add [rax], al; sub dword ptr [rip+0x14da1d], 0x1; pop rbp; ret; 
0x00000000097ac3: jl short 0x0000000000097af2; and [rcx], dh; imul al; ret; 
0x00000000099f86: jl short 0x0000000000099fac; xor [rax-0x77], ecx; add ecx, [rax-0x7b]; ror byte ptr [rdi], 0x84; ret far; 
0x0000000009d506: jl short 0x000000000009d508; add [rax-0x73], cl; adc eax, 0xd71c0; cmovne rax, rdx; ret; 
0x000000000a3464: jl short 0x00000000000a348b; rol dword ptr [rcx+rcx*4-0x39], 0xc1; call qword ptr [rdx]; 
0x000000000a347e: jl short 0x00000000000a34a5; rol dword ptr [rcx+rcx*4-0x39], 0xc1; call far fword ptr [rax]; 
0x000000000a897a: jl short 0x00000000000a89e0; add rax, rdi; ret; 
0x000000000a898a: jl short 0x00000000000a89e0; lea rax, [rdi+rax+0x10]; ret; 
0x000000000a89aa: jl short 0x00000000000a89e0; lea rax, [rdi+rax+0x20]; ret; 
0x000000000a89ca: jl short 0x00000000000a89e0; lea rax, [rdi+rax+0x30]; ret; 
0x000000000bf839: jl short 0x00000000000bf840; add al, ch; jmp far fword ptr [rbp-0xa]; 
0x000000000d43f3: jl short 0x00000000000d4419; xor [rcx-0x77], al; ret; 
0x000000000de685: jl short 0x00000000000de6ab; adc [rax+0x3d], bh; syscall; 
0x000000000dfe45: jl short 0x00000000000dfe47; add [rax], al; syscall; 
0x000000000e1f4a: jl short 0x00000000000e1f50; jmp far fword ptr [rdi]; 
0x000000000e6e45: jl short 0x00000000000e6e6b; sub bl, ch; ret far; 
0x000000000e7d91: jl short 0x00000000000e7e00; mov byte ptr [rdi+0x8], 0x1; mov eax, 0x1; ret; 
0x0000000010458f: jl short 0x000000000010457a; ret far; 
0x00000000105852: jl short 0x0000000000105878; xor al, ch; ret; 
0x00000000108c09: jl short 0x0000000000108c2f; sbb [rax+0x101], bh; syscall; 
0x00000000108da1: jl short 0x0000000000108d9b; dec dword ptr [rax-0x75]; and al, 0x8; add rsp, 0x28; ret; 
0x00000000108d85: jl short 0x0000000000108dab; or [rax+0x1], bh; syscall; 
0x0000000010920d: jl short 0x0000000000109233; or [rax+0x48], bh; syscall; 
0x00000000109505: jl short 0x000000000010952b; or al, 0xe8; ret; 
0x0000000010950e: jl short 0x0000000000109534; or al, 0x41; mov eax, eax; mov eax, 0x3; syscall; 
0x0000000010beac: jl short 0x000000000010beb4; jmp far fword ptr [rdi]; 
0x0000000010d164: jl short 0x000000000010d177; jmp far fword ptr [rdi]; 
0x0000000010d665: jl short 0x000000000010d68b; or [rax+0x7], bh; syscall; 
0x0000000010d761: jl short 0x000000000010d787; or [rcx+rcx*4-0x1e], cl; mov eax, 0x10f; syscall; 
0x0000000010e1b6: jl short 0x000000000010e1dc; sbb [rax+0x115], bh; syscall; 
0x0000000010e1d0: jl short 0x000000000010e1fa; clc; dec dword ptr [rbx+0x48182444]; add esp, 0x28; ret; 
0x0000000010e265: jl short 0x000000000010e28b; or [rax+0x11d], bh; syscall; 
0x0000000010f383: jl short 0x000000000010f3a9; or [rax+0x13], bh; syscall; 
0x0000000010f423: jl short 0x000000000010f449; or [rax+0x14], bh; syscall; 
0x0000000011012e: jl short 0x0000000000110154; or al, 0x41; mov eax, eax; mov eax, 0x4a; syscall; 
0x000000001101ee: jl short 0x0000000000110214; or al, 0x41; mov eax, eax; mov eax, 0x4b; syscall; 
0x00000000113955: jl short 0x000000000011397b; or [rax+0x1a], bh; syscall; 
0x0000000011594d: jl short 0x0000000000115973; adc [rax-0x7b], cl; push qword ptr [rbp+0x4b]; mov rdi, [r12]; call rbx; 
0x00000000119218: jl short 0x000000000011922d; je short 0x000000000011921d; ret; 
0x00000000119614: jl short 0x000000000011963a; or [rax+0x114], bh; syscall; 
0x00000000119831: jl short 0x0000000000119857; or [rax+0x130], bh; syscall; 
0x0000000011a295: jl short 0x000000000011a2bb; or al, 0xb8; sub eax, [rax]; add [rax], al; syscall; 
0x0000000011a361: jl short 0x000000000011a387; or [rax+0x2a], bh; syscall; 
0x0000000011a643: jl short 0x000000000011a669; or [rax+0x2f], bh; syscall; 
0x0000000011a7a3: jl short 0x000000000011a7c9; or [rax+0x2e], bh; syscall; 
0x0000000011acb6: jl short 0x000000000011acdc; sbb [rax+0x120], bh; syscall; 
0x0000000011acd0: jl short 0x000000000011ad2f; idiv edi; mov eax, [rsp+0x18]; add rsp, 0x28; ret; 
0x0000000011ae24: jl short 0x000000000011ae4a; or al, 0xb8; xor eax, [rcx]; add [rax], al; syscall; 
0x0000000011afc6: jl short 0x000000000011afec; sbb [rax+0x45], bh; syscall; 
0x0000000011b16c: jl short 0x000000000011b17a; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x2]; mov eax, 0xffffffff; ret; 
0x000000001201a3: jl short 0x00000000001201b1; add [rcx], al; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x0000000012af65: jl short 0x000000000012af8b; sbb al, ch; ret; 
0x00000000132fe2: jl short 0x0000000000133008; adc [rcx+rcx*4-0x1a], cl; call qword ptr [rsp+0x58]; 
0x00000000133189: jl short 0x00000000001331af; cmp al, ch; call far fword ptr [rdx+rax]; 
0x0000000013ad88: jl short 0x000000000013adae; adc [rbp+rax-0x18], dh; scasb [rdi]; mov ch, 0xee; jmp qword ptr [rsi+0xf]; 
0x0000000014002e: jl short 0x0000000000140054; jo short 0x000000000014001a; sbb dl, [rdi-0xceffff]; call qword ptr [rsp+0x70]; 
0x000000001416ad: jl short 0x00000000001416d3; push rax; call qword ptr [rax+0x20]; 
0x00000000142546: jl short 0x000000000014256c; sbb [rbp+rcx*4+0x4c], cl; and al, 0x40; call qword ptr [rax]; 
0x000000001466c5: jl short 0x00000000001466d6; ret far; 
0x0000000014a887: jl short 0x000000000014a8ad; push 0x4c388b48; mov esi, edi; mov rax, [rdi+0x38]; call qword ptr [rax+0x8]; 
0x0000000014e701: jl short 0x000000000014e6f0; jmp qword ptr [rsi+0x66]; 
0x0000000014fcd0: jl short 0x000000000014fc6c; std; jmp qword ptr [rsi+0x66]; 
0x0000000015a498: jl short 0x000000000015a49a; add [rax], al; mov rcx, [rsp+0x10]; mov rdi, [rsp+0x18]; call rcx; 
0x0000000015ab3a: jl short 0x000000000015ab40; jmp far fword ptr [rdi]; 
0x0000000015fb31: jl short 0x000000000015fb38; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162510: jl short 0x0000000000162566; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000017e64a: jl short 0x000000000017e680; add eax, 0x20; add rax, rdi; vzeroupper; ret; 
0x0000000017e66a: jl short 0x000000000017e680; add eax, 0x60; add rax, rdi; vzeroupper; ret; 
0x00000000183dd5: jl short 0x0000000000183dee; and ecx, ebp; ret; 
0x00000000183f20: jl short 0x0000000000183f24; add [rax], al; vzeroupper; ret; 
0x000000001860aa: jl short 0x00000000001860ba; cmp edi, [rdx+rcx+0x40]; jne 0x0000000000185d99; vzeroupper; ret; 
0x000000001860ae: jl short 0x00000000001860ba; jne 0x0000000000185d99; vzeroupper; ret; 
0x0000000018944b: jl short 0x0000000000189450; neg eax; ret; 
0x0000000018951a: jl short 0x0000000000189564; adc [rcx-0x3], ebp; vmovups [r9-0x80], zmm6; vmovups [r9-0x40], zmm7; ret; 
0x00000000189521: jl short 0x000000000018956b; adc [rcx-0x2], esi; vmovups [r9-0x40], zmm7; ret; 
0x00000000189528: jl short 0x0000000000189572; adc [rcx-0x1], edi; ret; 
0x00000000189556: jl short 0x00000000001895a0; adc [rdi+0x1], ecx; vmovups [r9-0x80], zmm2; vmovups [r9-0x40], zmm3; ret; 
0x0000000018955d: jl short 0x00000000001895a7; adc [rcx-0x2], edx; vmovups [r9-0x40], zmm3; ret; 
0x00000000189564: jl short 0x00000000001895ae; adc [rcx-0x1], ebx; ret; 
0x00000000189754: jl short 0x000000000018979e; adc [rcx-0x3], ebp; vmovups [r9-0x80], zmm14; vmovups [r9-0x40], zmm15; ret; 
0x0000000018975b: jl short 0x00000000001897a5; adc [rcx-0x2], esi; vmovups [r9-0x40], zmm15; ret; 
0x00000000189762: jl short 0x00000000001897ac; adc [rcx-0x1], edi; ret; 
0x000000001898bb: jl short 0x0000000000189905; adc [rcx+0x5], ebp; vmovups [r9+0x180], zmm14; vmovups [r9+0x1c0], zmm15; ret; 
0x000000001898c2: jl short 0x000000000018990c; adc [rcx+0x6], esi; vmovups [r9+0x1c0], zmm15; ret; 
0x000000001898c9: jl short 0x0000000000189913; adc [rcx+0x7], edi; ret; 
0x00000000189a1d: jl short 0x0000000000189a67; adc [rdi-0x6], ebp; vmovups [rdi-0x1c0], zmm14; vmovups [rdi-0x200], zmm15; ret; 
0x00000000189a24: jl short 0x0000000000189a6e; adc [rdi-0x7], esi; vmovups [rdi-0x200], zmm15; ret; 
0x00000000189a2b: jl short 0x0000000000189a75; adc [rdi-0x8], edi; ret; 
0x00000000189c42: jl short 0x0000000000189c8c; adc [rsi-0x3], edx; vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x00000000189c49: jl short 0x0000000000189c93; adc [rsi-0x2], edx; vmovups [rsi-0x40], zmm2; ret; 
0x00000000189c50: jl short 0x0000000000189c9a; adc [rsi-0x1], edx; ret; 
0x00000000189c63: jl short 0x0000000000189cad; adc [rdi+0x1], edx; vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x00000000189c6a: jl short 0x0000000000189cb4; adc [rsi-0x2], edx; vmovups [rsi-0x40], zmm2; ret; 
0x00000000189c71: jl short 0x0000000000189cbb; adc [rsi-0x1], edx; ret; 
0x00000000189c7e: jl short 0x0000000000189cc8; adc [rdi], edx; vmovups [rsi-0x40], zmm2; ret; 
0x00000000189c84: jl short 0x0000000000189cce; adc [rsi-0x1], edx; ret; 
0x00000000189d4b: jl short 0x0000000000189d95; adc [rsi-0x3], edx; vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x00000000189d52: jl short 0x0000000000189d9c; adc [rsi-0x2], edx; vmovups [rsi-0x40], zmm2; ret; 
0x00000000189d59: jl short 0x0000000000189da3; adc [rsi-0x1], edx; ret; 
0x00000000189da3: jl short 0x0000000000189ded; adc [rsi+0x1], edx; vmovups [rsi+0x80], zmm2; vmovups [rsi+0xc0], zmm2; ret; 
0x00000000189daa: jl short 0x0000000000189df4; adc [rsi+0x2], edx; vmovups [rsi+0xc0], zmm2; ret; 
0x00000000189db1: jl short 0x0000000000189dfb; adc [rsi+0x3], edx; ret; 
0x00000000189e40: jl short 0x0000000000189e8a; adc [rsi+0x5], edx; vmovups [rsi+0x180], zmm2; vmovups [rsi+0x1c0], zmm2; ret; 
0x00000000189e47: jl short 0x0000000000189e91; adc [rsi+0x6], edx; vmovups [rsi+0x1c0], zmm2; ret; 
0x00000000189e4e: jl short 0x0000000000189e98; adc [rsi+0x7], edx; ret; 
0x0000000018a074: jl short 0x000000000018a08d; cld; vzeroupper; ret; 
0x0000000018dc0d: jl short 0x000000000018dc33; adc [rcx-0x7d], al; ret far; 
0x0000000017d59e: jle 0x000000000017d640; ret; 
0x0000000003483a: jle short 0x0000000000034860; sub eax, 0x1; mov [rdx+0x8], eax; pop rbx; ret; 
0x00000000040791: jle short 0x0000000000040755; btr rdx, 0x3f; sub rax, rdx; shr rax, 0x3f; ret; 
0x000000000411de: jle short 0x00000000000411b4; adc al, 0x0; add rsp, 0x10; pop rbx; ret; 
0x000000000867f2: jle short 0x0000000000086851; cmp [rsi+0xf], ah; outsd dx, [rsi]; ret; 
0x00000000090e80: jle short 0x0000000000090ef2; ret; 
0x0000000009621e: jle short 0x00000000000961f9; adc al, 0x0; syscall; 
0x0000000009d22a: jle short 0x000000000009d23a; add [rax-0x73], cl; add eax, 0xe7f4c; cmove rax, rdx; ret; 
0x000000000adf31: jle short 0x00000000000adf7b; bsf eax, edx; ret; 
0x000000000cd72e: jle short 0x00000000000cd76c; stc; call far fword ptr [rdx+0x59]; 
0x000000000db7a6: jle short 0x00000000000db763; adc [rax], al; syscall; 
0x000000000e098d: jle short 0x00000000000e09b8; mov eax, 0x7fffffff; cmp rdx, 0x58465342; jne short 0x00000000000e09a0; ret; 
0x000000000e0a71: jle short 0x00000000000e0a73; add [rax], al; ret; 
0x000000000e0bf0: jle short 0x00000000000e0c00; xor eax, eax; cmp rdx, 0x5346544e; setne al; ret; 
0x0000000010724b: jle short 0x00000000001072bd; ret; 
0x00000000107297: jle short 0x0000000000107309; movups [rdi+0x78], xmm7; ret; 
0x00000000107ba3: jle short 0x0000000000107c15; ret; 
0x00000000107c2c: jle short 0x0000000000107c9e; movups [rdi+0xf8], xmm7; ret; 
0x0000000010aff2: jle short 0x000000000010b001; add [rsp+rax*2-0x75], ah; xor ebp, eax; mov bl, 0xf1; jmp qword ptr [rsp+rax*2-0x77]; 
0x00000000116690: jle short 0x0000000000116691; dec dword ptr [rax-0x77]; ret; 
0x00000000119c85: jle short 0x0000000000119c87; add [rax], al; syscall; 
0x0000000011aff4: jle short 0x000000000011b002; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x2]; mov eax, 0xffffffff; ret; 
0x0000000013f4de: jle short 0x000000000013f477; or al, [rax]; syscall; 
0x00000000147d3e: jle short 0x0000000000147d39; jmp qword ptr [rsi+0xf]; 
0x000000001484a1: jle short 0x00000000001484a3; add [rax], al; add rsp, 0x20; pop rbx; ret; 
0x00000000151903: jle short 0x0000000000151903; jmp qword ptr [rsi+0xf]; 
0x00000000158062: jle short 0x0000000000158074; or [rax], eax; syscall; 
0x0000000017d31c: jle short 0x000000000017d334; movsxd rax, ecx; ret; 
0x00000000185388: jle short 0x0000000000185409; mov al, [0x77f8c5237f7ec1c4]; ret; 
0x000000001854bb: jle short 0x000000000018553c; mov al, [0x77f8c5237f7ec1c4]; ret; 
0x00000000191d91: jle short 0x0000000000191d8f; call far fword ptr [rbp+0x48]; 
0x00000000109b7d: jmp far fword ptr [r15]; 
0x000000000b28c6: jmp far fword ptr [rax+0x16850f10]; 
0x000000000b28b4: jmp far fword ptr [rax+0x18850f08]; 
0x000000000b28d8: jmp far fword ptr [rax+0x24850f20]; 
0x000000000b28ea: jmp far fword ptr [rax+0x32850f40]; 
0x000000000f3ea4: jmp far fword ptr [rax+0x38850f10]; 
0x000000000ec015: jmp far fword ptr [rax+0x410a7508]; 
0x000000000ebfd6: jmp far fword ptr [rax+0x49667408]; 
0x000000000f46c9: jmp far fword ptr [rax+0x4d2a7401]; 
0x00000000073f5c: jmp far fword ptr [rax+0x55840f10]; 
0x00000000124a4c: jmp far fword ptr [rax+0x61840f02]; 
0x0000000002d7e7: jmp far fword ptr [rax+0x61850f02]; 
0x000000000f188b: jmp far fword ptr [rax+0x65840f08]; 
0x000000000fe664: jmp far fword ptr [rax+0x79850f80]; 
0x000000000b28a2: jmp far fword ptr [rax+0xa850f04]; 
0x000000000b2890: jmp far fword ptr [rax+0xc850f02]; 
0x00000000110d3d: jmp far fword ptr [rax+0xd]; 
0x000000000f99d2: jmp far fword ptr [rax+0xf850f08]; 
0x000000000f3e33: jmp far fword ptr [rax-0x117af0ff]; 
0x00000000135eb7: jmp far fword ptr [rax-0x27af0fe]; 
0x000000000f45c3: jmp far fword ptr [rax-0x27bf0ff]; 
0x0000000005a20b: jmp far fword ptr [rax-0x367af0f0]; 
0x000000000cb589: jmp far fword ptr [rax-0x417af010]; 
0x000000000ebf8f: jmp far fword ptr [rax-0x657bf0f8]; 
0x000000000f3619: jmp far fword ptr [rax-0x6b7bf0ff]; 
0x000000000ce2c8: jmp far fword ptr [rax-0x7af0fd]; 
0x00000000065e3a: jmp far fword ptr [rax]; 
0x0000000005b278: jmp far fword ptr [rbp+0x7f]; 
0x000000000bf83d: jmp far fword ptr [rbp-0xa]; 
0x000000000ef51d: jmp far fword ptr [rbp-0xd]; 
0x000000000f8195: jmp far fword ptr [rbx+0x4864000e]; 
0x00000000046da8: jmp far fword ptr [rbx]; 
0x0000000008d3f7: jmp far fword ptr [rcx+0x202]; 
0x000000000e18ed: jmp far fword ptr [rcx+0x810]; 
0x000000000ce2d0: jmp far fword ptr [rcx-0x30]; 
0x00000000045adf: jmp far fword ptr [rcx-0x40]; 
0x0000000003c81e: jmp far fword ptr [rcx]; 
0x000000000955b8: jmp far fword ptr [rdi+0x32760000]; 
0x00000000072ac6: jmp far fword ptr [rdi+0xf000000]; 
0x000000001318fd: jmp far fword ptr [rdi+rax-0x3dbb7500]; 
0x0000000009914c: jmp far fword ptr [rdi-0x78f10000]; 
0x0000000002aead: jmp far fword ptr [rdi]; 
0x0000000014b926: jmp far fword ptr [rdx+0x1e]; 
0x000000000feecd: jmp far fword ptr [rdx]; 
0x00000000075636: jmp far fword ptr [rdx]; 
0x00000000104ca6: jmp far fword ptr [rsi-0x72b7fff6]; 
0x000000000361e0: jmp far fword ptr [rsi]; 
0x000000000525ce: jmp far fword ptr [rsp+rsi*2]; 
0x00000000187ec6: jmp far tbyte ptr [rcx]; 
0x000000001899fd: jmp qword ptr [r10+0x71]; 
0x000000001899b5: jmp qword ptr [r10-0x2f]; 
0x00000000189944: jmp qword ptr [r10-0xf]; 
0x000000000b06e3: jmp qword ptr [r14+0x66]; 
0x000000000ae9e8: jmp qword ptr [r14+0xf]; 
0x00000000041738: jmp qword ptr [r8+r9*2-0x75]; 
0x00000000148c5c: jmp qword ptr [rax+0x18]; 
0x0000000015988b: jmp qword ptr [rax+0x280]; 
0x00000000150e84: jmp qword ptr [rax+0x40]; 
0x00000000098c45: jmp qword ptr [rax+0x48640014]; 
0x00000000150e94: jmp qword ptr [rax+0x48]; 
0x0000000014fa54: jmp qword ptr [rax+0x8]; 
0x0000000006346d: jmp qword ptr [rax+rax]; 
0x0000000002f9cd: jmp qword ptr [rax+rbx]; 
0x0000000008ee84: jmp qword ptr [rax+rcx*2+0x33]; 
0x0000000014ce60: jmp qword ptr [rax+rcx*2-0x39]; 
0x00000000034abe: jmp qword ptr [rax+rcx*2-0x75]; 
0x0000000014cfbf: jmp qword ptr [rax+rcx*2-0x77]; 
0x00000000043d85: jmp qword ptr [rax]; 
0x00000000065c60: jmp qword ptr [rbp+0x48]; 
0x00000000048306: jmp qword ptr [rbp+0xf]; 
0x000000000296e5: jmp qword ptr [rbp+rax*2-0x75]; 
0x000000000dd02f: jmp qword ptr [rbp+rax*2-0x77]; 
0x000000000d998c: jmp qword ptr [rbp+rsi*2-0x38]; 
0x00000000066bc2: jmp qword ptr [rbp-0x17]; 
0x00000000065c51: jmp qword ptr [rbp]; 
0x00000000155435: jmp qword ptr [rbx+0x6b]; 
0x000000001446c4: jmp qword ptr [rbx+0xf]; 
0x000000000e0a55: jmp qword ptr [rbx+rax*4+0x38]; 
0x0000000009301d: jmp qword ptr [rbx+rax*4+0x3c]; 
0x0000000007f9fc: jmp qword ptr [rbx+rcx*4+0x10]; 
0x00000000064fb9: jmp qword ptr [rbx+rcx*4+0x2]; 
0x0000000006239b: jmp qword ptr [rbx+rcx*4+0x3]; 
0x0000000002aab4: jmp qword ptr [rbx+rcx*4+0x4]; 
0x0000000006a05d: jmp qword ptr [rbx+rcx*4+0x8]; 
0x000000000639ee: jmp qword ptr [rbx+rcx*4]; 
0x000000000d2484: jmp qword ptr [rbx]; 
0x000000000fee1e: jmp qword ptr [rcx+rax*2-0x39]; 
0x000000000ffa69: jmp qword ptr [rcx+rax*2-0x75]; 
0x00000000043d59: jmp qword ptr [rcx+rax*2-0x77]; 
0x0000000009707a: jmp qword ptr [rcx+rcx*2-0x75]; 
0x0000000013468b: jmp qword ptr [rcx+rcx*4+0x10]; 
0x000000001461dc: jmp qword ptr [rcx+rcx*4+0x13]; 
0x000000000dc065: jmp qword ptr [rcx+rcx*4+0x18]; 
0x0000000010845e: jmp qword ptr [rcx+rcx*4+0x1]; 
0x000000000418fe: jmp qword ptr [rcx+rcx*4+0x2]; 
0x000000000e05f4: jmp qword ptr [rcx+rcx*4+0x2b]; 
0x0000000002b8db: jmp qword ptr [rcx+rcx*4+0x30]; 
0x0000000006cb6e: jmp qword ptr [rcx+rcx*4+0x38]; 
0x00000000155c23: jmp qword ptr [rcx+rcx*4+0x3]; 
0x000000000e1349: jmp qword ptr [rcx+rcx*4+0x5d]; 
0x0000000003a911: jmp qword ptr [rcx+rcx*4+0x8]; 
0x00000000125acd: jmp qword ptr [rcx-0x4614000d]; 
0x000000000bde02: jmp qword ptr [rcx-0x516000a]; 
0x00000000045ae9: jmp qword ptr [rdi+0x1000041]; 
0x0000000011b3df: jmp qword ptr [rdi+0x6d]; 
0x0000000005c644: jmp qword ptr [rdi+0x75]; 
0x00000000062032: jmp qword ptr [rdi+rax*8+0x2]; 
0x000000000fee17: jmp qword ptr [rdi+rax*8+0x3]; 
0x000000000e138f: jmp qword ptr [rdi+rax*8+0x45]; 
0x0000000003fc54: jmp qword ptr [rdi+rax*8]; 
0x00000000046d54: jmp qword ptr [rdi+rcx]; 
0x00000000067e15: jmp qword ptr [rdi+rdi*2]; 
0x0000000005c2e8: jmp qword ptr [rdi-0x75]; 
0x00000000105db8: jmp qword ptr [rdi]; 
0x00000000189896: jmp qword ptr [rdx+0x51]; 
0x000000001899f7: jmp qword ptr [rdx+0x71]; 
0x00000000143397: jmp qword ptr [rdx+rax*8]; 
0x000000001899af: jmp qword ptr [rdx-0x2f]; 
0x000000001894f5: jmp qword ptr [rdx-0xf]; 
0x00000000105dc2: jmp qword ptr [rdx]; 
0x0000000005b01f: jmp qword ptr [rsi+0x25]; 
0x000000000fbadf: jmp qword ptr [rsi+0x2e]; 
0x00000000028da3: jmp qword ptr [rsi+0x2e]; 
0x0000000005e741: jmp qword ptr [rsi+0x3d]; 
0x0000000002a122: jmp qword ptr [rsi+0x41]; 
0x0000000005c3fb: jmp qword ptr [rsi+0x44]; 
0x0000000010d121: jmp qword ptr [rsi+0x45]; 
0x0000000002a419: jmp qword ptr [rsi+0x48]; 
0x0000000002a409: jmp qword ptr [rsi+0x49]; 
0x00000000101783: jmp qword ptr [rsi+0x66]; 
0x000000000288e4: jmp qword ptr [rsi+0x66]; 
0x00000000028378: jmp qword ptr [rsi+0xf]; 
0x000000000ed9b0: jmp qword ptr [rsi+0xf]; 
0x000000000fd07d: jmp qword ptr [rsi+rcx+0xd8b4800]; 
0x000000001361bc: jmp qword ptr [rsi-0x39]; 
0x0000000002aa3d: jmp qword ptr [rsi-0x70]; 
0x000000000742c6: jmp qword ptr [rsi-0x77]; 
0x000000000d2b78: jmp qword ptr [rsi-0x7b]; 
0x00000000034414: jmp qword ptr [rsi-0x7d]; 
0x00000000035767: jmp qword ptr [rsi-0x7f]; 
0x0000000005a9b0: jmp qword ptr [rsi]; 
0x0000000013a9ba: jmp qword ptr [rsi]; 
0x0000000006a0dd: jmp qword ptr [rsp+rax*2-0x75]; 
0x0000000008cd85: jmp qword ptr [rsp+rax*2-0x77]; 
0x0000000004661e: jmp qword ptr [rsp+rcx*2-0x75]; 
0x0000000003f2f0: jmp r10; 
0x0000000015f942: jmp r9; 
0x00000000028887: jmp rax; 
0x000000000364c4: jmp rcx; 
0x0000000007b0ab: jmp rcx; 
0x000000000deb09: jmp rdi; 
0x0000000003f00a: jmp rdx; 
0x000000000749bd: jmp rsi; 
0x0000000009b93e: jne 0x0000000000027ffb; pop rbx; pop rbp; pop r12; ret; 
0x0000000004517b: jne 0x00000000000452a0; sub dword ptr [r13], 0x1; xor esi, esi; mov rdi, r9; call r8; 
0x00000000050326: jne 0x00000000000503b5; add rsp, 0x10; pop rbx; ret; 
0x00000000086350: jne 0x00000000000863ea; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x00000000086d0b: jne 0x0000000000086e02; add rsp, 0x38; pop rbx; pop rbp; ret; 
0x00000000096176: jne 0x00000000000961f8; sub dword ptr [rip+0x14da1d], 0x1; pop rbp; ret; 
0x0000000009a57c: jne 0x000000000009a62f; add rsp, 0x10; mov eax, r12d; pop r12; ret; 
0x0000000009a69f: jne 0x000000000009a752; add rsp, 0x18; ret; 
0x0000000009b84b: jne 0x000000000009b6f1; mov rax, [rip+0x1476d8]; call qword ptr [rax]; 
0x000000000a83a5: jne 0x00000000000a8480; pmovmskb eax, xmm1; bsf eax, eax; lea rax, [rdi+rax+0x30]; ret; 
0x000000000a8417: jne 0x00000000000a84c0; xor eax, eax; ret; 
0x000000000a888c: jne 0x00000000000a8940; pmovmskb eax, xmm1; bsr eax, eax; add rax, rdi; ret; 
0x000000000afc4b: jne 0x00000000000afd55; movlpd xmm0, [rcx]; movlpd [rdx], xmm0; mov rax, rdi; ret; 
0x000000000b261b: jne 0x00000000000b2725; movlpd xmm0, [rcx]; movlpd [rdx], xmm0; mov rax, rdi; ret; 
0x000000000b398f: jne 0x00000000000b38e7; lea r11, [rip+0xf55b4]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b39ba: jne 0x00000000000b4270; ret; 
0x000000000b506f: jne 0x00000000000b4fc7; lea r11, [rip+0xf40b4]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b509d: jne 0x00000000000b5ac0; ret; 
0x000000000b6f2f: jne 0x00000000000b6e87; lea r11, [rip+0xf23c8]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b86bf: jne 0x00000000000b8790; and ebx, 0xfff; lea rax, [rbx+0x1]; pop rbx; ret; 
0x000000000c65ec: jne 0x00000000000c6691; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000000ca2a5: jne 0x00000000000ca380; pmovmskb eax, xmm1; bsf eax, eax; lea rax, [rdi+rax+0x30]; ret; 
0x000000000ca317: jne 0x00000000000ca3c0; xor eax, eax; ret; 
0x000000000caf3f: jne 0x00000000000cb090; ret; 
0x000000000caf1e: jne 0x00000000000cb090; xor eax, eax; ret; 
0x000000000cb4e7: jne 0x00000000000cb650; lea rax, [rdi-0x10]; ret; 
0x000000000cb4df: jne 0x00000000000cb660; test al, 0xf0; jne 0x00000000000cb650; lea rax, [rdi-0x10]; ret; 
0x000000000e03f9: jne 0x00000000000e091c; add rsp, 0xb8; pop rbx; pop rbp; ret; 
0x000000000e1251: jne 0x00000000000e1447; add rsp, 0xb8; pop rbx; pop rbp; ret; 
0x000000000ead04: jne 0x00000000000eac2d; ret; 
0x000000000f79c9: jne 0x00000000000f7cbf; lea rcx, [rip+0xb38ce]; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x000000000fbb5e: jne 0x00000000000fc10d; add rsp, 0x68; pop rbx; pop rbp; ret; 
0x000000001081a7: jne 0x0000000000108401; add rsp, 0x1a0; mov eax, r8d; pop rbx; ret; 
0x00000000108a25: jne 0x0000000000108ad3; add rsp, 0x68; pop rbp; pop r12; ret; 
0x00000000108ba0: jne 0x0000000000108c63; add rsp, 0x78; ret; 
0x000000001091a6: jne 0x0000000000109245; add rsp, 0x68; ret; 
0x000000001092e7: jne 0x000000000010939e; add rsp, 0x30; pop rbx; ret; 
0x00000000109417: jne 0x00000000001094ce; add rsp, 0x30; pop rbx; ret; 
0x0000000010d725: jne 0x000000000010d7c3; add rsp, 0x40; pop r12; ret; 
0x0000000010e888: jne 0x000000000010e969; add rsp, 0x60; mov eax, r11d; pop rbx; ret; 
0x0000000010ee11: jne 0x000000000010eed8; add rsp, 0x60; mov rax, r12; pop r12; ret; 
0x0000000010fff1: jne 0x0000000000110093; add rsp, 0x60; pop rbp; ret; 
0x00000000114b90: jne 0x0000000000114c20; mov rdi, [r13]; call rbx; 
0x00000000114bc5: jne 0x0000000000114c60; mov rdi, [r13]; call rbx; 
0x00000000114b5d: jne 0x0000000000114c80; mov rdi, [r13]; call rbx; 
0x000000001159c5: jne 0x0000000000115a80; mov rdi, [r13]; call rbx; 
0x00000000126da4: jne 0x0000000000126e7d; leave; ret; 
0x00000000132893: jne 0x0000000000132960; sub dword ptr [rip+0xb5cd8], 0x1; mov eax, r8d; pop rbp; ret; 
0x00000000138cbf: jne 0x0000000000138d54; add rsp, 0x58; pop rbx; pop rbp; ret; 
0x00000000141eeb: jne 0x0000000000141f98; add rsp, 0x68; pop rbx; pop rbp; ret; 
0x0000000014302b: jne 0x0000000000143170; mov rax, [rbp+0x8]; mov esi, 0x20; mov rdi, rbp; call qword ptr [rax+0x30]; 
0x0000000014849f: jne 0x0000000000148523; add rsp, 0x20; pop rbx; ret; 
0x0000000014b6f5: jne 0x000000000014b787; add rsp, 0xb8; pop rbx; pop rbp; ret; 
0x0000000014bd5d: jne 0x000000000014be02; add rsp, 0x48; pop rbx; pop rbp; ret; 
0x0000000014befd: jne 0x000000000014bfa2; add rsp, 0x48; pop rbx; pop rbp; ret; 
0x0000000014db77: jne 0x000000000014da32; nop [rax]; mov rax, [rbp+0x8]; mov rdi, rbp; call qword ptr [rax+0x28]; 
0x0000000014da35: jne 0x000000000014db8a; mov rax, [rbp+0x8]; mov rsi, rbx; mov rdi, rbp; call qword ptr [rax]; 
0x0000000014fb41: jne 0x000000000014fbdf; add rsp, 0x28; pop rbx; pop rbp; ret; 
0x0000000014fc31: jne 0x000000000014fccf; add rsp, 0x28; pop rbx; pop rbp; ret; 
0x0000000014fd21: jne 0x000000000014fdbf; add rsp, 0x28; pop rbx; pop rbp; ret; 
0x0000000014fe11: jne 0x000000000014feaf; add rsp, 0x28; pop rbx; pop rbp; ret; 
0x00000000150ad5: jne 0x0000000000150b6f; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x00000000150bc5: jne 0x0000000000150c5f; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x00000000150cb5: jne 0x0000000000150d4f; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x00000000150da5: jne 0x0000000000150e3f; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000015a496: jne 0x000000000015a518; mov rcx, [rsp+0x10]; mov rdi, [rsp+0x18]; call rcx; 
0x00000000171de1: jne 0x0000000000172390; ret; 
0x00000000176172: jne 0x00000000001767e0; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x0000000017da93: jne 0x000000000017d980; sub eax, ecx; vzeroupper; ret; 
0x0000000017dfbc: jne 0x000000000017de60; sub eax, ecx; vzeroupper; ret; 
0x0000000017e176: jne 0x000000000017e210; xor eax, eax; vzeroupper; ret; 
0x0000000017e964: jne 0x000000000017e870; ret; 
0x0000000017eaaf: jne 0x000000000017e870; vzeroupper; ret; 
0x000000001824ba: jne 0x0000000000182560; mov rax, r8; vzeroupper; ret; 
0x00000000183d70: jne 0x00000000001841a0; vzeroupper; ret; 
0x00000000184a88: jne 0x0000000000184ed0; vzeroupper; ret; 
0x000000001858a2: jne 0x0000000000185820; ret; 
0x000000001859ef: jne 0x0000000000185820; vzeroupper; ret; 
0x00000000185c26: jne 0x0000000000185cc0; xor eax, eax; vzeroupper; ret; 
0x00000000185f29: jne 0x0000000000185d99; vzeroupper; ret; 
0x0000000018618c: jne 0x00000000001860c0; sub eax, ecx; vzeroupper; ret; 
0x000000001863af: jne 0x0000000000186209; vzeroupper; ret; 
0x000000001866a7: jne 0x0000000000186590; sub eax, ecx; vzeroupper; ret; 
0x00000000186e5d: jne 0x0000000000186f00; mov rax, r8; shr rax, 0x2; vzeroupper; ret; 
0x000000001881c7: jne 0x00000000001885f3; movzx eax, byte ptr [rdi-0x1]; movzx ecx, byte ptr [rsi-0x1]; sub eax, ecx; ret; 
0x00000000187c6d: jne 0x00000000001885f3; movzx eax, byte ptr [rdi-0x1]; movzx edx, byte ptr [rsi-0x1]; sub eax, edx; ret; 
0x00000000187bc1: jne 0x00000000001885f3; xor eax, eax; ret; 
0x00000000187cb8: jne 0x00000000001885ff; movzx eax, byte ptr [rdi-0x1]; movzx edx, byte ptr [rsi-0x1]; sub eax, edx; ret; 
0x00000000187be9: jne 0x00000000001885ff; xor eax, eax; ret; 
0x00000000187eba: jne 0x000000000018860a; movzx eax, byte ptr [rdi-0x1]; movzx ecx, byte ptr [rsi-0x1]; sub eax, ecx; ret; 
0x00000000187d4d: jne 0x0000000000188620; and eax, 0xffff; and ecx, 0xffff; sub eax, ecx; ret; 
0x000000001891f1: jne 0x0000000000189433; xor eax, eax; ret; 
0x00000000189217: jne 0x0000000000189446; xor eax, eax; ret; 
0x0000000018a780: jne 0x000000000018a670; lea rax, [rdi+0xb]; ret; 
0x0000000018a739: jne 0x000000000018a670; lea rax, [rdi+0xf]; ret; 
0x0000000018a6dc: jne 0x000000000018a850; test dl, 0x4; jne short 0x000000000018a670; lea rax, [rdi+0x3]; ret; 
0x0000000018a7be: jne 0x000000000018a880; test al, 0x40; jne 0x000000000018a890; lea rax, [rdi+0x7]; ret; 
0x0000000018a7c5: jne 0x000000000018a890; lea rax, [rdi+0x7]; ret; 
0x0000000018a6ad: jne 0x000000000018a890; test dl, 0x40; jne short 0x000000000018a670; lea rax, [rdi+0x7]; ret; 
0x0000000018a777: jne 0x000000000018a8c0; test dh, 0x4; jne 0x000000000018a670; lea rax, [rdi+0xb]; ret; 
0x0000000018a810: jne 0x000000000018a8f0; test ah, 0x40; jne 0x000000000018a900; lea rax, [rdi+0xf]; ret; 
0x0000000018a818: jne 0x000000000018a900; lea rax, [rdi+0xf]; ret; 
0x0000000018a730: jne 0x000000000018a900; test dh, 0x40; jne 0x000000000018a670; lea rax, [rdi+0xf]; ret; 
0x0000000018be44: jne 0x000000000018c050; xor eax, eax; ret; 
0x0000000018bfa4: jne 0x000000000018c065; cmp eax, ecx; jne 0x000000000018c065; xor eax, eax; ret; 
0x0000000018bef1: jne 0x000000000018c065; xor eax, eax; ret; 
0x0000000018c54d: jne 0x000000000018c680; ret; 
0x000000001904d5: jne 0x00000000001903e0; add rsp, 0x38; ret; 
0x00000000091068: jne 0xffffffff831c8664; or dh, bh; xor eax, eax; ret; 
0x000000000284c5: jne short 0x000000000002849b; mov rdx, [rip+0x1ba99a]; cmp [rdx+0xd8], rax; jne short 0x000000000002849b; ret; 
0x000000000284d5: jne short 0x000000000002849b; ret; 
0x000000000290c5: jne short 0x00000000000290f8; add rsp, 0x38; pop rbx; pop rbp; ret; 
0x0000000002b8d3: jne short 0x000000000002b8f0; add [rbx-0x834b], cl; jmp qword ptr [rcx+rcx*4+0x30]; 
0x0000000003885f: jne short 0x0000000000038868; mov eax, r8d; ret; 
0x0000000003f89d: jne short 0x000000000003f878; ret; 
0x0000000003fb07: jne short 0x000000000003faf0; mov r10d, [rcx+rax*4+0x8]; add r10, [rdi+0x20]; mov rax, r10; ret; 
0x00000000040728: jne short 0x00000000000406fa; mov rax, [rip+0x1a2717]; mov dword ptr fs:[rax], 0x22; add rsp, 0x8; ret; 
0x000000000406f6: jne short 0x0000000000040700; fadd st, st(0); add rsp, 0x8; ret; 
0x0000000004085a: jne short 0x0000000000040870; mov rax, 0xfffffffffffff; test rdx, rax; je short 0x0000000000040870; ret; 
0x00000000040acc: jne short 0x0000000000040ad8; addsd xmm0, xmm0; ret; 
0x00000000040bdb: jne short 0x0000000000040bf0; and esi, 0x80000000; movss [rdi], xmm0; movd xmm0, esi; ret; 
0x00000000040c22: jne short 0x0000000000040c30; test eax, 0x7fffff; je short 0x0000000000040c30; ret; 
0x00000000040de8: jne short 0x0000000000040df0; addss xmm0, xmm0; ret; 
0x00000000041465: jne short 0x000000000004146c; add rsp, 0x18; ret; 
0x0000000004150a: jne short 0x0000000000041518; mov [rbx+0x40], esi; xor eax, eax; pop rbx; ret; 
0x000000000417a8: jne short 0x00000000000417b2; add rsp, 0x148; ret; 
0x000000000418dc: jne short 0x0000000000041904; mov eax, r8d; add rsp, 0x118; ret; 
0x00000000041af0: jne short 0x0000000000041b34; mov eax, r9d; add rsp, 0x148; ret; 
0x00000000041b8f: jne short 0x0000000000041ba0; add rsp, 0x8; ret; 
0x00000000041c3e: jne short 0x0000000000041c58; mov esi, 0x8; mov eax, 0x82; syscall; 
0x00000000041db4: jne short 0x0000000000041dc5; add rsp, 0x118; ret; 
0x00000000041e37: jne short 0x0000000000041e48; add rsp, 0x118; ret; 
0x00000000041eb1: jne short 0x0000000000041ee8; add rsp, 0x98; pop rbp; pop r12; ret; 
0x00000000041f42: jne short 0x0000000000041f4c; add rsp, 0x98; ret; 
0x00000000041fbd: jne short 0x0000000000041fd7; add rsp, 0x98; pop rbp; pop r12; ret; 
0x000000000420d6: jne short 0x00000000000420ff; add rsp, 0x140; mov eax, r8d; pop rbx; ret; 
0x00000000042186: jne short 0x00000000000421b5; add rsp, 0x40; pop rbx; ret; 
0x000000000424a5: jne short 0x00000000000424af; add rsp, 0x148; ret; 
0x000000000424d0: jne short 0x00000000000424f0; mov rax, [rip+0x1a096f]; mov dword ptr fs:[rax], 0x16; mov rax, 0xffffffffffffffff; ret; 
0x00000000042639: jne short 0x0000000000042698; mov r10d, 0x8; mov eax, 0x80; syscall; 
0x00000000042849: jne short 0x0000000000042867; add rsp, 0x98; pop rbp; pop r12; ret; 
0x000000000428cc: jne short 0x00000000000428e7; add rsp, 0x98; pop rbp; pop r12; ret; 
0x00000000042945: jne short 0x000000000004294f; add rsp, 0xa8; ret; 
0x00000000043942: jne short 0x0000000000043944; mov rdi, [r12]; mov rdx, r14; mov rax, [rsp]; call rax; 
0x000000000448aa: jne short 0x00000000000448d8; sub dword ptr [rip+0x1a1235], 0x1; xor eax, eax; pop rbx; ret; 
0x0000000004548b: jne short 0x0000000000045450; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000004551f: jne short 0x0000000000045528; pop rbx; ret; 
0x000000000455f3: jne short 0x00000000000455fa; add rsp, 0x28; ret; 
0x000000000456e3: jne short 0x00000000000456ea; add rsp, 0x28; ret; 
0x000000000457a7: jne short 0x00000000000457e0; sub dword ptr [rip+0x1a0bb8], 0x1; pop rbp; ret; 
0x00000000045a17: jne short 0x0000000000045a6a; add rsp, 0x18; ret; 
0x00000000045f6d: jne short 0x0000000000045f74; add rsp, 0x18; ret; 
0x00000000045fba: jne short 0x0000000000045fc1; add rsp, 0x18; ret; 
0x0000000004600c: jne short 0x0000000000046013; add rsp, 0x18; ret; 
0x00000000046059: jne short 0x0000000000046060; add rsp, 0x18; ret; 
0x000000000460ac: jne short 0x00000000000460b3; add rsp, 0x18; ret; 
0x000000000460f9: jne short 0x0000000000046100; add rsp, 0x18; ret; 
0x000000000463ce: jne short 0x00000000000463e0; mov eax, 0x13e; syscall; 
0x0000000004fc2a: jne short 0x000000000004fc5c; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000004fcda: jne short 0x000000000004fd3b; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000004fda8: jne short 0x000000000004fe04; add rsp, 0x38; pop rbx; pop rbp; ret; 
0x00000000050d45: jne short 0x0000000000050d4f; add rsp, 0xd8; ret; 
0x0000000005229f: jne short 0x00000000000522a9; add rsp, 0xd8; ret; 
0x0000000005245d: jne short 0x0000000000052450; pop rbx; ret; 
0x00000000052488: jne short 0x0000000000052480; pop rbx; ret; 
0x0000000005314e: jne short 0x0000000000053153; push r10; ret; 
0x00000000053627: jne short 0x000000000005362c; push r10; ret; 
0x0000000005370e: jne short 0x0000000000053696; sub rsi, 0x1; jne short 0x00000000000536f8; mov eax, 0x1; ret; 
0x00000000053714: jne short 0x00000000000536f8; mov eax, 0x1; ret; 
0x00000000053936: jne short 0x00000000000538bb; sub rsi, 0x1; jne short 0x0000000000053920; mov eax, 0x1; ret; 
0x0000000005393c: jne short 0x0000000000053920; mov eax, 0x1; ret; 
0x00000000053d03: jne short 0x0000000000053cf0; mov rax, rdx; ret; 
0x0000000005591a: jne short 0x0000000000055995; leave; ret; 
0x00000000055b8c: jne short 0x0000000000055bb0; mov dword ptr [rsi], 0x0; mov eax, 0x1; ret; 
0x00000000055c3a: jne short 0x0000000000055c1c; mov eax, 0x1; ret; 
0x00000000055c33: jne short 0x0000000000055c22; cmp cx, 0x7fff; jne short 0x0000000000055c1c; mov eax, 0x1; ret; 
0x00000000055c1a: jne short 0x0000000000055c48; mov dword ptr [rdx], 0x0; mov eax, 0x1; ret; 
0x00000000055d9a: jne short 0x0000000000055e00; mov dword ptr [rsi], 0x0; mov eax, 0x2; ret; 
0x000000000590ca: jne short 0x0000000000059109; add rsp, 0x28; pop rbx; pop rbp; ret; 
0x000000000597e3: jne short 0x0000000000059800; add rsp, 0x450; pop rbp; ret; 
0x00000000059a33: jne short 0x0000000000059a72; add rsp, 0x38; ret; 
0x0000000005f150: jne short 0x000000000005f188; sub dword ptr [rip+0x1874af], 0x1; mov eax, r8d; pop rbx; ret; 
0x0000000005fd78: jne short 0x000000000005fd82; add rsp, 0xd8; ret; 
0x0000000005fe4d: jne short 0x000000000005fe57; add rsp, 0xd8; ret; 
0x0000000005ff04: jne short 0x000000000005ff0e; add rsp, 0xd8; ret; 
0x0000000005ffd6: jne short 0x000000000005ffe0; add rsp, 0xd8; ret; 
0x00000000060098: jne short 0x00000000000600a2; add rsp, 0xd8; ret; 
0x00000000060158: jne short 0x0000000000060162; add rsp, 0xd8; ret; 
0x00000000060246: jne short 0x0000000000060250; add rsp, 0xd8; ret; 
0x0000000006031d: jne short 0x0000000000060327; add rsp, 0xd8; ret; 
0x000000000608ec: jne short 0x00000000000608f0; pop rbx; ret; 
0x00000000060983: jne short 0x000000000006098e; add rsp, 0x1010; pop rbp; ret; 
0x00000000060f27: jne short 0x0000000000060f37; add rsp, 0x18; ret; 
0x00000000061150: jne short 0x0000000000061168; mov rdx, [rdi+0x88]; mov [rdx+0x8], rcx; mov dword ptr [rdx+0x4], 0x1; ret; 
0x000000000611c8: jne short 0x00000000000611d0; sub dword ptr [rdi], 0x1; ret; 
0x000000000612b0: jne short 0x00000000000612ba; add rsp, 0xd8; ret; 
0x0000000006138b: jne short 0x0000000000061395; add rsp, 0xd8; ret; 
0x000000000808aa: jne short 0x00000000000808b8; sub dword ptr [rip+0x165d7d], 0x1; ret; 
0x00000000082e08: jne short 0x0000000000082e12; add rsp, 0xd8; ret; 
0x00000000082ec4: jne short 0x0000000000082ece; add rsp, 0xd8; ret; 
0x00000000082fbd: jne short 0x0000000000082fc7; add rsp, 0xd8; ret; 
0x0000000008308d: jne short 0x0000000000083097; add rsp, 0xd8; ret; 
0x00000000083146: jne short 0x0000000000083150; add rsp, 0xd8; ret; 
0x00000000083771: jne short 0x0000000000083760; mov rax, r8; ret; 
0x00000000083e12: jne short 0x0000000000083e88; mov rax, [rax+0xe0]; call qword ptr [rax+0x68]; 
0x0000000008705c: jne short 0x0000000000087070; mov eax, [rdx+0x4c]; cmp [rdx+0x48], eax; cmovne eax, ecx; ret; 
0x0000000008a3f6: jne short 0x000000000008a409; add rsp, 0x48; ret; 
0x0000000008ce49: jne short 0x000000000008ce50; ret; 
0x0000000008d58e: jne short 0x000000000008d5a0; sub dword ptr [rip+0x1590d9], 0x1; ret; 
0x0000000008dc79: jne short 0x000000000008dc68; mov rax, r8; ret; 
0x0000000008ed56: jne short 0x000000000008ed48; ret; 
0x0000000008f011: jne short 0x000000000008efd3; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000008fb5e: jne short 0x000000000008fb50; ret; 
0x0000000008fb97: jne short 0x000000000008fba8; sub edx, [rax+0x18]; mov eax, [rdi+0x10]; sub eax, edx; ret; 
0x0000000008ff0a: jne short 0x000000000008ff18; sub dword ptr [rip+0x15675d], 0x1; ret; 
0x00000000090a81: jne short 0x0000000000090ad0; and edx, 0xc; cmp edx, 0x4; je short 0x0000000000090a90; ret; 
0x00000000090bbd: jne short 0x0000000000090ba0; lea rax, [rip+0x155c0a]; pop rbx; mov dword ptr [rip+0x155aef], 0x1; ret; 
0x0000000009106b: jne short 0x0000000000091080; and dword ptr [rdi+0x8], 0xfffffffe; xor eax, eax; ret; 
0x00000000091b3d: jne short 0x0000000000091bb7; add rsp, 0x98; ret; 
0x00000000091e5a: jne short 0x0000000000091ea0; sub dword ptr [rip+0x15499d], 0x1; pop rbx; ret; 
0x00000000091f0c: jne short 0x0000000000091f3c; pop rbx; pop rbp; pop r12; ret; 
0x0000000009227f: jne short 0x0000000000092260; nop [rax]; xor r8d, r8d; mov rax, r8; ret; 
0x00000000093897: jne short 0x00000000000938d0; xor edi, edi; call qword ptr [r13]; 
0x0000000009666b: jne short 0x00000000000966a5; add rsp, 0x40; pop rbp; ret; 
0x0000000009732e: jne short 0x0000000000097310; pop rbx; pop rbp; pop r12; ret; 
0x000000000973cd: jne short 0x0000000000097408; sub dword ptr [rip+0x14fa9a], 0x1; pop rbx; ret; 
0x000000000974d7: jne short 0x00000000000974bf; test r8b, r8b; jne short 0x00000000000974e9; mov dword ptr [rip+0x14f988], 0x0; ret; 
0x000000000974dc: jne short 0x00000000000974e9; mov dword ptr [rip+0x14f988], 0x0; ret; 
0x00000000099317: jne short 0x0000000000099300; lea rax, [rdx-0x10]; ret; 
0x0000000009b8c1: jne short 0x000000000009b8b0; xor eax, eax; ret; 
0x0000000009b92b: jne short 0x000000000009b900; mov rdi, rsi; call rax; 
0x0000000009b99d: jne short 0x000000000009b990; mov eax, r8d; ret; 
0x0000000009e194: jne short 0x000000000009e180; ret; 
0x0000000009f62a: jne short 0x000000000009f5e5; mov rax, r10; ret; 
0x000000000a492e: jne short 0x00000000000a4920; mov [rdi], rdx; ret; 
0x000000000a49f5: jne short 0x00000000000a49e0; mov byte ptr [rdi], 0x0; mov [r8], rax; mov rax, r9; ret; 
0x000000000a4a9f: jne short 0x00000000000a4a90; mov rax, r8; ret; 
0x000000000a4ad3: jne short 0x00000000000a4ac0; mov rax, r8; ret; 
0x000000000a4b1f: jne short 0x00000000000a4b00; mov rax, r8; ret; 
0x000000000a4bce: jne short 0x00000000000a4bb8; cmp eax, r10d; je short 0x00000000000a4bb8; mov rax, r8; ret; 
0x000000000a4c03: jne short 0x00000000000a4bf0; mov rax, r8; ret; 
0x000000000a4c5e: jne short 0x00000000000a4c40; mov rax, r8; ret; 
0x000000000a693c: jne short 0x00000000000a6920; xor eax, eax; sub eax, ecx; ret; 
0x000000000a8447: jne short 0x00000000000a84a0; xor eax, eax; ret; 
0x000000000a8693: jne short 0x00000000000a86e0; pmovmskb eax, xmm1; bsf eax, eax; lea rax, [rdi+rax+0x30]; ret; 
0x000000000a88fa: jne short 0x00000000000a8970; xor eax, eax; ret; 
0x000000000a8929: jne short 0x00000000000a89a0; xor eax, eax; ret; 
0x000000000ae057: jne short 0x00000000000ae05d; xor rax, rax; ret; 
0x000000000b77d1: jne short 0x00000000000b77c0; ret; 
0x000000000b77c8: jne short 0x00000000000b77e0; movzx ecx, byte ptr [rsi+rdx+0x3]; test cl, cl; jne short 0x00000000000b77c0; ret; 
0x000000000b7881: jne short 0x00000000000b7870; ret; 
0x000000000b7878: jne short 0x00000000000b7890; movzx ecx, byte ptr [rsi+rdx+0x3]; test cl, cl; jne short 0x00000000000b7870; ret; 
0x000000000b79f1: jne short 0x00000000000b79e0; lea rax, [rcx-0x1]; ret; 
0x000000000b7b41: jne short 0x00000000000b7b30; sub rax, 0x1; ret; 
0x000000000b8247: jne short 0x00000000000b824d; mov rax, rdi; ret; 
0x000000000b8321: jne short 0x00000000000b8307; rep ret; 
0x000000000b8fb1: jne short 0x00000000000b8f88; mov rax, r8; ret; 
0x000000000b90b0: jne short 0x00000000000b90a0; xor eax, eax; ret; 
0x000000000b913a: jne short 0x00000000000b90dd; test edx, edx; jne short 0x00000000000b9120; ret; 
0x000000000b913e: jne short 0x00000000000b9120; ret; 
0x000000000ba43d: jne short 0x00000000000ba430; ret; 
0x000000000c29fb: jne short 0x00000000000c2a5c; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000c2ad9: jne short 0x00000000000c2b35; add rsp, 0x38; pop rbx; pop rbp; ret; 
0x000000000c2bab: jne short 0x00000000000c2bdd; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000c6113: jne short 0x00000000000c6134; add rsp, 0x20; pop rbx; ret; 
0x000000000c6bf0: jne short 0x00000000000c6bfa; add rsp, 0xd8; ret; 
0x000000000c6ccb: jne short 0x00000000000c6cd5; add rsp, 0xd8; ret; 
0x000000000c9feb: jne short 0x00000000000ca02a; add rsp, 0x28; pop rbx; pop rbp; ret; 
0x000000000ca347: jne short 0x00000000000ca3a0; xor eax, eax; ret; 
0x000000000cb016: jne short 0x00000000000cb090; ret; 
0x000000000cb16a: jne short 0x00000000000cb170; mov eax, r8d; ret; 
0x000000000cb5fb: jne short 0x00000000000cb650; lea rax, [rdi-0x10]; ret; 
0x000000000cb5f7: jne short 0x00000000000cb660; test al, 0xf0; jne short 0x00000000000cb650; lea rax, [rdi-0x10]; ret; 
0x000000000cb697: jne short 0x00000000000cb69d; xor rax, rax; ret; 
0x000000000cc1d3: jne short 0x00000000000cc1e9; add rsp, 0x28; ret; 
0x000000000cc24d: jne short 0x00000000000cc255; add rsp, 0x40; pop rbp; ret; 
0x000000000cce97: jne short 0x00000000000ccec8; mov eax, 0x60; syscall; 
0x000000000ccff9: jne short 0x00000000000cd036; add rsp, 0x28; ret; 
0x000000000cd16d: jne short 0x00000000000cd1ce; add rsp, 0xe0; mov eax, r8d; pop rbx; ret; 
0x000000000ce8fa: jne short 0x00000000000ce930; sub dword ptr [rip+0x11883d], 0x1; add rsp, 0x8; ret; 
0x000000000d0316: jne short 0x00000000000d0320; add rsp, 0x20; xor eax, eax; pop rbx; ret; 
0x000000000d0acd: jne short 0x00000000000d0ae0; mov rax, r8; add rsp, 0x8; ret; 
0x000000000d653c: jne short 0x00000000000d6543; add rsp, 0x18; ret; 
0x000000000d8dfc: jne short 0x00000000000d8e03; add rsp, 0x18; ret; 
0x000000000d9677: jne short 0x00000000000d9660; pop rbx; pop rbp; pop r12; ret; 
0x000000000d9ac3: jne short 0x00000000000d9ace; add rsp, 0xe0; pop rbx; ret; 
0x000000000d9b5b: jne short 0x00000000000d9b66; add rsp, 0xe0; pop rbx; ret; 
0x000000000da633: jne short 0x00000000000da66a; add rsp, 0xa8; pop rbp; pop r12; ret; 
0x000000000db2e0: jne short 0x00000000000db310; mov eax, 0x74; syscall; 
0x000000000db2ff: jne short 0x00000000000db353; add rsp, 0x38; ret; 
0x000000000dbb16: jne short 0x00000000000dbb50; sub dword ptr [rip+0x10b811], 0x1; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x000000000dbbee: jne short 0x00000000000dbc08; sub dword ptr [rip+0x10b739], 0x1; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x000000000dd29b: jne short 0x00000000000dd30c; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000dd7e6: jne short 0x00000000000dd820; sub dword ptr [rip+0x109cb1], 0x1; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x000000000dd8be: jne short 0x00000000000dd8d8; sub dword ptr [rip+0x109bd9], 0x1; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x000000000de641: jne short 0x00000000000de658; mov eax, 0x3d; syscall; 
0x000000000de6f1: jne short 0x00000000000de710; xor r8d, r8d; mov eax, 0xf7; syscall; 
0x000000000de825: jne short 0x00000000000de835; add rsp, 0x28; pop rbx; pop rbp; ret; 
0x000000000de84e: jne short 0x00000000000de860; mov eax, 0x22; syscall; 
0x000000000de8d9: jne short 0x00000000000de8e0; add rsp, 0x8; ret; 
0x000000000dfbb0: jne short 0x00000000000dfbe0; mov eax, 0x69; syscall; 
0x000000000dfbcf: jne short 0x00000000000dfc23; add rsp, 0x38; ret; 
0x000000000dfc50: jne short 0x00000000000dfc80; mov eax, 0x6a; syscall; 
0x000000000dfc6f: jne short 0x00000000000dfcc3; add rsp, 0x38; ret; 
0x000000000dff23: jne short 0x00000000000dff25; add [rax], al; syscall; 
0x000000000dff20: jne short 0x00000000000dff50; mov eax, 0x75; syscall; 
0x000000000dff3f: jne short 0x00000000000dffa3; add rsp, 0x38; ret; 
0x000000000dffd0: jne short 0x00000000000e0000; mov eax, 0x77; syscall; 
0x000000000dffef: jne short 0x00000000000e0053; add rsp, 0x38; ret; 
0x000000000e099b: jne short 0x00000000000e09a0; ret; 
0x000000000e09a9: jne short 0x00000000000e0a1d; mov eax, 0x7d00; ret; 
0x000000000e0a15: jne short 0x00000000000e0a33; mov eax, 0xfffa; ret; 
0x000000000e0b36: jne short 0x00000000000e0b40; mov eax, 0x40; ret; 
0x000000000e3b93: jne short 0x00000000000e3b41; xor eax, eax; ret; 
0x000000000e3b55: jne short 0x00000000000e3b89; mov eax, 0x1; ret; 
0x000000000e3b76: jne short 0x00000000000e3ba9; mov eax, 0x1; ret; 
0x000000000e7da3: jne short 0x00000000000e7d95; mov byte ptr [rdi+0x8], 0x16; mov eax, 0x1; ret; 
0x000000000e7d75: jne short 0x00000000000e7da0; mov byte ptr [rdi+0x8], 0x19; mov eax, 0x1; ret; 
0x000000000ecdcb: jne short 0x00000000000ecd65; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000000fd491: jne short 0x00000000000fd4e6; add rsp, 0x38; ret; 
0x000000000fd89b: jne short 0x00000000000fd834; cmp dword ptr [rdi+0x14], 0x1000000; mov edx, 0x2; cmove eax, edx; ret; 
0x000000000fd85f: jne short 0x00000000000fd850; mov eax, [rdx+0x8]; ret; 
0x00000000101603: jne short 0x00000000001015e8; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000106ca1: jne short 0x0000000000106cb8; mov eax, 0x11; syscall; 
0x00000000106d51: jne short 0x0000000000106d68; mov eax, 0x12; syscall; 
0x000000001072be: jne short 0x00000000001072c5; mov [rdi], si; xor eax, eax; ret; 
0x0000000010794b: jne short 0x000000000010794d; add [rax], al; syscall; 
0x00000000107ccb: jne short 0x0000000000107ce1; add rsp, 0x28; ret; 
0x00000000107e80: jne short 0x0000000000107e88; add rsp, 0x10; pop rbp; ret; 
0x00000000107f75: jne short 0x0000000000107f7c; add rsp, 0x38; ret; 
0x00000000107fd0: jne short 0x0000000000107fd7; add rsp, 0x18; ret; 
0x00000000108022: jne short 0x0000000000108029; add rsp, 0x18; ret; 
0x00000000108489: jne short 0x00000000001084b8; mov eax, 0x85; syscall; 
0x000000001084ec: jne short 0x0000000000108518; mov eax, 0x103; syscall; 
0x00000000108b7d: jne short 0x0000000000108be0; mov eax, 0x101; syscall; 
0x00000000108cae: jne short 0x0000000000108cc0; syscall; 
0x00000000108d4e: jne short 0x0000000000108d60; mov eax, 0x1; syscall; 
0x000000001091c2: jne short 0x00000000001091f0; mov eax, 0x48; syscall; 
0x000000001094ee: jne short 0x0000000000109500; mov eax, 0x3; syscall; 
0x0000000010952c: jne short 0x0000000000109526; dec dword ptr [rbx+0x480c2444]; add esp, 0x18; ret; 
0x0000000010966e: jne short 0x0000000000109680; mov eax, 0x55; syscall; 
0x00000000109fb5: jne short 0x000000000010a000; add rsp, 0x130; pop rbp; ret; 
0x0000000010a843: jne short 0x000000000010a84d; movzx eax, al; add rsp, 0x58; ret; 
0x0000000010d62e: jne short 0x000000000010d640; mov eax, 0x7; syscall; 
0x0000000010d6fd: jne short 0x000000000010d738; mov r8d, 0x8; mov rdx, r12; mov eax, 0x10f; syscall; 
0x0000000010dcd1: jne short 0x000000000010dce8; mov eax, 0x146; syscall; 
0x0000000010dea6: jne short 0x000000000010de7a; mov rax, [rsi+0x28]; cmp [rdi+0x28], rax; sete al; ret; 
0x0000000010df85: jne short 0x000000000010dff4; add rsp, 0xa0; pop rbx; ret; 
0x0000000010e059: jne short 0x000000000010e0cf; add rsp, 0xa0; pop rbx; ret; 
0x0000000010e171: jne short 0x000000000010e188; mov eax, 0x115; syscall; 
0x0000000010e221: jne short 0x000000000010e238; mov eax, 0x11d; syscall; 
0x0000000010e34b: jne short 0x000000000010e393; add rsp, 0x68; ret; 
0x0000000010e3da: jne short 0x000000000010e423; add rsp, 0x18; ret; 
0x0000000010e492: jne short 0x000000000010e4db; add rsp, 0x58; ret; 
0x0000000010e530: jne short 0x000000000010e57b; add rsp, 0x58; ret; 
0x0000000010e6cf: jne short 0x000000000010e6ac; or eax, 0x80000000; mov [rdi], eax; xor eax, eax; ret; 
0x0000000010ea14: jne short 0x000000000010ea34; mov eax, r9d; add rsp, 0x38; ret; 
0x0000000010ea7d: jne short 0x000000000010ea8b; add rsp, 0x18; ret; 
0x0000000010eace: jne short 0x000000000010eaf0; mov edx, 0x1; mov esi, 0x5409; mov eax, 0x10; syscall; 
0x0000000010f34e: jne short 0x000000000010f360; mov eax, 0x13; syscall; 
0x0000000010f3ee: jne short 0x000000000010f400; mov eax, 0x14; syscall; 
0x0000000010f491: jne short 0x000000000010f4b0; xor r8d, r8d; mov eax, 0x127; syscall; 
0x0000000010f551: jne short 0x000000000010f570; xor r8d, r8d; mov eax, 0x128; syscall; 
0x0000000010f8e0: jne short 0x000000000010f910; mov eax, 0x71; syscall; 
0x0000000010f8ff: jne short 0x000000000010f95b; add rsp, 0x38; ret; 
0x0000000010f980: jne short 0x000000000010f9b0; mov eax, 0x72; syscall; 
0x0000000010f99f: jne short 0x000000000010f9fb; add rsp, 0x38; ret; 
0x0000000010fa38: jne short 0x000000000010fa3a; add [rax], al; syscall; 
0x0000000010fa2b: jne short 0x000000000010fa60; mov edx, 0xffffffff; mov edi, 0xffffffff; mov eax, 0x75; syscall; 
0x0000000010fa55: jne short 0x000000000010fa9f; add esp, 0x38; ret; 
0x0000000010fa54: jne short 0x000000000010facb; add rsp, 0x38; ret; 
0x0000000010fafb: jne short 0x000000000010fb30; mov edx, 0xffffffff; mov edi, 0xffffffff; mov eax, 0x77; syscall; 
0x0000000010fb25: jne short 0x000000000010fb6f; add esp, 0x38; ret; 
0x0000000010fb24: jne short 0x000000000010fb9b; add rsp, 0x38; ret; 
0x0000000010fc1e: jne short 0x000000000010fc25; add rsp, 0x28; ret; 
0x0000000010fed1: jne short 0x000000000010fee8; mov eax, 0x17; syscall; 
0x0000000010ffd2: jne short 0x0000000000110000; mov eax, 0x10e; syscall; 
0x0000000011010e: jne short 0x0000000000110120; mov eax, 0x4a; syscall; 
0x000000001101ce: jne short 0x00000000001101e0; mov eax, 0x4b; syscall; 
0x00000000110519: jne short 0x0000000000110565; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x00000000110764: jne short 0x0000000000110777; add rsp, 0x58; ret; 
0x000000001107d7: jne short 0x00000000001107de; add rsp, 0x28; ret; 
0x000000001108af: jne short 0x00000000001108ed; add rsp, 0x68; ret; 
0x00000000110ea2: jne short 0x0000000000110e64; xor eax, eax; pop rbp; ret; 
0x00000000110efa: jne short 0x0000000000110ecf; mov rax, r8; ret; 
0x00000000111a6d: jne short 0x0000000000111a74; add rsp, 0x38; ret; 
0x00000000111af0: jne short 0x0000000000111af7; add rsp, 0x38; ret; 
0x00000000111b64: jne short 0x0000000000111b6b; add rsp, 0x38; ret; 
0x00000000111bcf: jne short 0x0000000000111bd6; add rsp, 0x38; ret; 
0x000000001122ce: jne short 0x00000000001122e0; mov eax, 0x1; ret; 
0x00000000112b3a: jne short 0x0000000000112b48; sub dword ptr [rip+0xd4d0d], 0x1; ret; 
0x000000001131d8: jne short 0x00000000001131e2; add rsp, 0xd8; ret; 
0x000000001132b1: jne short 0x00000000001132bb; add rsp, 0xd8; ret; 
0x00000000113599: jne short 0x0000000000113600; sub dword ptr [rip+0xd42ae], 0x1; add rsp, 0x8; ret; 
0x0000000011391e: jne short 0x0000000000113930; mov eax, 0x1a; syscall; 
0x00000000114609: jne short 0x0000000000114610; add rsp, 0x18; ret; 
0x000000001149c4: jne short 0x00000000001149f8; mov rdi, rbp; mov edx, r13d; mov esi, 0x1; call r12; 
0x00000000114a54: jne short 0x0000000000114a88; mov rdi, rbp; mov rdx, r13; mov esi, 0x1; call r12; 
0x00000000114ad1: jne short 0x0000000000114b1c; mov rdi, [rbp]; call rbx; 
0x00000000114b03: jne short 0x0000000000114b7b; mov rdi, [r12]; call rbx; 
0x00000000114b33: jne short 0x0000000000114bb0; mov rdi, [r12]; call rbx; 
0x00000000114bf1: jne short 0x0000000000114c40; mov rdi, [r13]; call rbx; 
0x000000001157a6: jne short 0x00000000001157b0; add rsp, 0x8; pop rbp; pop r12; ret; 
0x000000001157db: jne short 0x0000000000115830; mov rdi, rbp; xor edx, edx; mov esi, 0x1; call r12; 
0x00000000115854: jne short 0x0000000000115860; pop rbp; pop r12; pop r13; ret; 
0x0000000011588c: jne short 0x00000000001158d8; mov rdi, rbp; mov rdx, r13; mov esi, 0x1; call r12; 
0x0000000011591a: jne short 0x0000000000115940; mov rdi, [rbp]; call rbx; 
0x00000000115953: jne short 0x00000000001159a0; mov rdi, [r12]; call rbx; 
0x0000000011597f: jne short 0x00000000001159e0; mov rdi, [r12]; call rbx; 
0x00000000115a21: jne short 0x0000000000115a40; mov rdi, [r13]; call rbx; 
0x000000001159f5: jne short 0x0000000000115a60; mov rdi, [r13]; call rbx; 
0x00000000115d9d: jne short 0x0000000000115da7; add rsp, 0xd8; ret; 
0x00000000115e5d: jne short 0x0000000000115e67; add rsp, 0xd8; ret; 
0x0000000011603b: jne short 0x0000000000116045; add rsp, 0x418; ret; 
0x0000000011609e: jne short 0x00000000001160d9; pop rbx; pop rbp; pop r12; ret; 
0x000000001162a4: jne short 0x00000000001162ae; add rsp, 0xd8; ret; 
0x00000000116511: jne short 0x000000000011651b; add rsp, 0xd8; ret; 
0x00000000116529: jne short 0x0000000000116558; mov eax, 0x88; syscall; 
0x00000000117098: jne short 0x0000000000117088; mov rax, [rax+0x8]; ret; 
0x000000001190dc: jne short 0x00000000001190bd; mov rax, r8; ret; 
0x00000000119321: jne short 0x0000000000119340; mov r9d, 0x8; mov eax, 0x119; syscall; 
0x00000000119521: jne short 0x0000000000119538; mov eax, 0xe8; syscall; 
0x000000001195d1: jne short 0x00000000001195e8; mov eax, 0x114; syscall; 
0x00000000119681: jne short 0x0000000000119698; mov eax, 0x116; syscall; 
0x00000000119731: jne short 0x0000000000119748; mov eax, 0x113; syscall; 
0x000000001197fe: jne short 0x0000000000119810; mov eax, 0x130; syscall; 
0x00000000119ad7: jne short 0x0000000000119af3; add rsp, 0x58; ret; 
0x0000000011a25e: jne short 0x000000000011a270; mov eax, 0x2b; syscall; 
0x0000000011a32e: jne short 0x000000000011a340; mov eax, 0x2a; syscall; 
0x0000000011a491: jne short 0x000000000011a4b0; xor r9d, r9d; xor r8d, r8d; mov eax, 0x2d; syscall; 
0x0000000011a551: jne short 0x000000000011a568; mov eax, 0x2d; syscall; 
0x0000000011a60e: jne short 0x000000000011a620; mov eax, 0x2f; syscall; 
0x0000000011a6b1: jne short 0x000000000011a6d0; xor r9d, r9d; xor r8d, r8d; mov eax, 0x2c; syscall; 
0x0000000011a76e: jne short 0x000000000011a780; mov eax, 0x2e; syscall; 
0x0000000011a811: jne short 0x000000000011a828; mov eax, 0x2c; syscall; 
0x0000000011ac4e: jne short 0x000000000011ac55; add rsp, 0x18; ret; 
0x0000000011ac71: jne short 0x000000000011ac88; mov eax, 0x120; syscall; 
0x0000000011ad21: jne short 0x000000000011ad38; mov eax, 0x12b; syscall; 
0x0000000011ade1: jne short 0x000000000011adf8; mov eax, 0x133; syscall; 
0x0000000011af4d: jne short 0x000000000011af5f; add rsp, 0xa0; pop rbx; ret; 
0x0000000011af81: jne short 0x000000000011af98; mov eax, 0x45; syscall; 
0x0000000011b031: jne short 0x000000000011b048; mov eax, 0x46; syscall; 
0x0000000011b1b4: jne short 0x000000000011b1e0; mov eax, 0x42; syscall; 
0x0000000011b1d3: jne short 0x000000000011b223; add rsp, 0x58; ret; 
0x0000000011d160: jne short 0x000000000011d170; mov eax, r8d; ret; 
0x0000000011d1ca: jne short 0x000000000011d1d0; ret; 
0x0000000011d3b3: jne short 0x000000000011d3c0; ret; 
0x0000000011da21: jne short 0x000000000011da28; ret; 
0x0000000011da7e: jne short 0x000000000011da88; ret; 
0x0000000011dc53: jne short 0x000000000011dc60; ret; 
0x0000000011e866: jne short 0x000000000011e8a0; sub dword ptr [rip+0xc9489], 0x1; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x0000000011e93e: jne short 0x000000000011e958; sub dword ptr [rip+0xc93b1], 0x1; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x0000000011f663: jne short 0x000000000011f6a0; sub dword ptr [rip+0xc86c0], 0x1; mov eax, r8d; add rsp, 0x8; ret; 
0x000000001200c6: jne short 0x0000000000120100; sub dword ptr [rip+0xc7d81], 0x1; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x0000000012019e: jne short 0x00000000001201b8; sub dword ptr [rip+0xc7ca9], 0x1; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x0000000012145e: jne short 0x0000000000121468; pop rbx; pop rbp; pop r12; ret; 
0x0000000012393f: jne short 0x0000000000123949; add rsp, 0xd8; ret; 
0x00000000125350: jne short 0x0000000000125380; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000125548: jne short 0x0000000000125552; add rsp, 0xd8; ret; 
0x000000001255d8: jne short 0x00000000001255c0; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000001265cf: jne short 0x0000000000126559; call rax; 
0x00000000126b2d: jne short 0x0000000000126b20; mov rax, [rax+0x30]; ret; 
0x00000000126ba9: jne short 0x0000000000126bb8; cmp qword ptr [rdi], 0x0; je short 0x0000000000126bc0; ret; 
0x00000000126d6b: jne short 0x0000000000126d4d; lea rdi, [rip-0x184]; call rax; 
0x000000001279c8: jne short 0x0000000000127971; mov rax, r9; ret; 
0x00000000127b2d: jne short 0x0000000000127b3c; add rsp, 0xd8; ret; 
0x00000000127c33: jne short 0x0000000000127c45; add rsp, 0xd8; ret; 
0x00000000127d49: jne short 0x0000000000127d53; add rsp, 0xd8; ret; 
0x00000000127e11: jne short 0x0000000000127e1b; add rsp, 0xd8; ret; 
0x00000000128abf: jne short 0x0000000000128a70; mov rax, r8; ret; 
0x00000000128c53: jne short 0x0000000000128c65; add rsp, 0xd8; ret; 
0x00000000128d69: jne short 0x0000000000128d73; add rsp, 0xd8; ret; 
0x00000000128e31: jne short 0x0000000000128e3b; add rsp, 0xd8; ret; 
0x00000000129278: jne short 0x0000000000129285; add rsp, 0x28; ret; 
0x000000001292d8: jne short 0x00000000001292e5; add rsp, 0x28; ret; 
0x000000001293a1: jne short 0x00000000001293ab; add rsp, 0xd8; ret; 
0x00000000129481: jne short 0x000000000012948b; add rsp, 0xd8; ret; 
0x00000000129561: jne short 0x000000000012956b; add rsp, 0xd8; ret; 
0x0000000012b3fc: jne short 0x000000000012b440; sub dword ptr [rip+0xbcc23], 0x1; mov fs:[r8], r9d; add rsp, 0x18; ret; 
0x0000000012b4e1: jne short 0x000000000012b500; sub dword ptr [rip+0xbcb3e], 0x1; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x0000000012c04c: jne short 0x000000000012c090; sub dword ptr [rip+0xbc09b], 0x1; mov fs:[r8], r9d; add rsp, 0x18; ret; 
0x0000000012c131: jne short 0x000000000012c150; sub dword ptr [rip+0xbbfb6], 0x1; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x0000000012cd7c: jne short 0x000000000012cdc0; sub dword ptr [rip+0xbb41b], 0x1; mov fs:[r8], r9d; add rsp, 0x18; ret; 
0x0000000012ce5e: jne short 0x000000000012ce78; sub dword ptr [rip+0xbb339], 0x1; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x0000000012e1dc: jne short 0x000000000012e220; sub dword ptr [rip+0xba123], 0x1; mov fs:[r8], r9d; add rsp, 0x18; ret; 
0x0000000012e2be: jne short 0x000000000012e2d8; sub dword ptr [rip+0xba041], 0x1; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x0000000012e91c: jne short 0x000000000012e960; sub dword ptr [rip+0xb9a93], 0x1; mov fs:[r8], r9d; add rsp, 0x18; ret; 
0x0000000012e9fe: jne short 0x000000000012ea18; sub dword ptr [rip+0xb99b1], 0x1; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x0000000013101f: jne short 0x0000000000131049; add rsp, 0x38; ret; 
0x000000001310bc: jne short 0x00000000001310c3; add rsp, 0x38; ret; 
0x00000000131129: jne short 0x0000000000131130; add rsp, 0x28; ret; 
0x000000001329f3: jne short 0x00000000001329e0; pop rbx; ret; 
0x00000000132ab5: jne short 0x0000000000132b20; sub dword ptr [rip+0xb5aba], 0x1; add rsp, 0x8; ret; 
0x00000000133506: jne short 0x0000000000133540; sub dword ptr [rip+0xb5071], 0x1; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x000000001335de: jne short 0x00000000001335f8; sub dword ptr [rip+0xb4f99], 0x1; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x000000001354dd: jne short 0x0000000000135507; add rsp, 0x28; pop rbx; pop rbp; ret; 
0x000000001356bf: jne short 0x00000000001356b0; mov fs:[rbx], r13d; mov eax, 0x3; mov edi, [rbp-0x60]; syscall; 
0x000000001367ac: jne short 0x0000000000136780; mov [r8], rdi; xor eax, eax; ret; 
0x0000000013717d: jne short 0x0000000000137198; mov eax, r8d; ret; 
0x0000000013762b: jne short 0x000000000013766d; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000001376cb: jne short 0x00000000001376e4; add rsp, 0x20; pop rbp; ret; 
0x00000000137af9: jne short 0x0000000000137b51; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x00000000138f69: jne short 0x0000000000138f85; add rsp, 0x20; pop rbx; ret; 
0x00000000138fbe: jne short 0x0000000000138fc5; add rsp, 0x18; ret; 
0x00000000139011: jne short 0x0000000000139018; add rsp, 0x28; ret; 
0x000000001398a0: jne short 0x00000000001398a7; add rsp, 0x18; ret; 
0x00000000139e7b: jne short 0x0000000000139e63; mov eax, r10d; ret; 
0x0000000013bf40: jne short 0x000000000013bf48; ret; 
0x0000000013bf84: jne short 0x000000000013bf70; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000013c06e: jne short 0x000000000013c078; pop rbx; pop rbp; pop r12; ret; 
0x0000000013d1e6: jne short 0x000000000013d230; sub dword ptr [rip+0xab9a9], 0x1; pop rbp; ret; 
0x0000000013dd5e: jne short 0x000000000013dd68; ret; 
0x0000000013f78d: jne short 0x000000000013f796; add rsp, 0x10; pop r12; ret; 
0x00000000140fa4: jne short 0x0000000000140f28; ret; 
0x00000000141235: jne short 0x0000000000141258; ret; 
0x0000000014143b: jne short 0x0000000000141443; add rsp, 0x40; pop rbp; ret; 
0x00000000141e43: jne short 0x0000000000141e60; mov rax, [r12+0x8]; mov rdi, r12; call qword ptr [rax+0x20]; 
0x0000000014208e: jne short 0x0000000000142107; add rsp, 0x28; pop rbx; pop rbp; ret; 
0x000000001420f6: jne short 0x000000000014210c; mov rax, [rbp+0x8]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x000000001422fd: jne short 0x0000000000142335; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x00000000142ed5: jne short 0x0000000000142f20; mov dword ptr [rsi], 0x0; ret; 
0x00000000143d31: jne short 0x0000000000143d73; add rsp, 0x10; pop rbx; ret; 
0x00000000144282: jne short 0x00000000001442b2; add rsp, 0x10; pop rbx; ret; 
0x00000000144320: jne short 0x0000000000144355; add rsp, 0x10; pop rbx; ret; 
0x00000000144f55: jne short 0x0000000000144f67; add rsp, 0x40; pop rbx; ret; 
0x00000000147c4c: jne short 0x0000000000147c50; ret; 
0x000000001483b7: jne short 0x000000000014841a; add rsp, 0x28; pop rbx; pop rbp; ret; 
0x0000000014b4f3: jne short 0x000000000014b511; add rsp, 0x10; pop rbx; ret; 
0x0000000014b845: jne short 0x000000000014b8ba; add rsp, 0x10; pop r12; ret; 
0x0000000014b975: jne short 0x000000000014b9e6; sub rsp, 0xffffffffffffff80; mov eax, r8d; pop rbp; ret; 
0x0000000014babc: jne short 0x000000000014bb2a; add rsp, 0x30; pop rbx; ret; 
0x0000000014bbfc: jne short 0x000000000014bc6a; add rsp, 0x30; pop rbx; ret; 
0x0000000014c081: jne short 0x000000000014c091; add rsp, 0x38; pop rbx; pop rbp; ret; 
0x0000000014c153: jne short 0x000000000014c1c6; add rsp, 0x10; mov eax, r8d; pop r12; ret; 
0x0000000014c292: jne short 0x000000000014c30a; add rsp, 0x28; pop rbx; pop r12; ret; 
0x0000000014ca1e: jne short 0x000000000014ca28; mov rdi, r15; call qword ptr [rdx+0x10]; 
0x0000000014d5af: jne short 0x000000000014d5c0; pop rbx; pop rbp; pop r12; ret; 
0x0000000014d645: jne short 0x000000000014d64c; add rsp, 0x78; ret; 
0x0000000014d6bb: jne short 0x000000000014d6c2; add rsp, 0x78; ret; 
0x0000000014d72b: jne short 0x000000000014d732; add rsp, 0x78; ret; 
0x0000000014d79b: jne short 0x000000000014d7a2; add rsp, 0x78; ret; 
0x0000000014d7fc: jne short 0x000000000014d803; add rsp, 0x78; ret; 
0x0000000014d860: jne short 0x000000000014d867; add rsp, 0x78; ret; 
0x0000000014d8cb: jne short 0x000000000014d8d2; add rsp, 0x78; ret; 
0x0000000014d94e: jne short 0x000000000014d955; add rsp, 0x78; ret; 
0x0000000014de71: jne short 0x000000000014de98; add rsp, 0x28; ret; 
0x0000000014e15c: jne short 0x000000000014e160; ret; 
0x0000000014f8d6: jne short 0x000000000014f8dd; add rsp, 0x48; ret; 
0x0000000014f941: jne short 0x000000000014f983; add rsp, 0x10; pop rbx; ret; 
0x0000000014f9d1: jne short 0x000000000014fa12; add rsp, 0x10; pop rbx; ret; 
0x0000000014fa43: jne short 0x000000000014fa35; mov rax, [rdi+0x8]; jmp qword ptr [rax]; 
0x0000000014fa9a: jne short 0x000000000014fafb; add rsp, 0x10; pop rbp; ret; 
0x0000000014ff01: jne short 0x000000000014ff44; add rsp, 0x10; pop rbx; ret; 
0x0000000014ff91: jne short 0x000000000014ffd3; add rsp, 0x10; pop rbx; ret; 
0x00000000150020: jne short 0x000000000015006b; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000001500b0: jne short 0x00000000001500fb; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x00000000150141: jne short 0x0000000000150189; add rsp, 0x10; pop rbx; ret; 
0x000000001501d1: jne short 0x0000000000150213; add rsp, 0x10; pop rbx; ret; 
0x0000000015080b: jne short 0x00000000001507e0; mov rax, [rbp+0x8]; mov rsi, rsp; mov rdi, rbp; call qword ptr [rax]; 
0x0000000015098b: jne short 0x0000000000150960; mov rax, [rdi+0x8]; mov rsi, rsp; call qword ptr [rax]; 
0x00000000150f31: jne short 0x0000000000150f75; add rsp, 0x10; pop rbx; ret; 
0x00000000150fc1: jne short 0x0000000000151005; add rsp, 0x10; pop rbx; ret; 
0x00000000151051: jne short 0x0000000000151095; add rsp, 0x10; pop rbx; ret; 
0x000000001510e1: jne short 0x0000000000151125; add rsp, 0x10; pop rbx; ret; 
0x000000001517b7: jne short 0x00000000001517c2; add rsp, 0x90; pop rbx; ret; 
0x0000000015182b: jne short 0x0000000000151835; movzx eax, al; add rsp, 0x18; ret; 
0x0000000015188c: jne short 0x0000000000151896; movzx eax, al; add rsp, 0x18; ret; 
0x000000001518fa: jne short 0x0000000000151902; add rsp, 0x10; pop rbx; ret; 
0x0000000015196d: jne short 0x0000000000151975; add rsp, 0x10; pop rbx; ret; 
0x000000001519d6: jne short 0x00000000001519e8; mov r8d, 0x1; mov eax, r8d; ret; 
0x00000000151a26: jne short 0x0000000000151a38; mov r8d, 0x1; mov eax, r8d; ret; 
0x000000001562ee: jne short 0x000000000015630f; add rsp, 0x520; mov rax, r12; pop r12; ret; 
0x00000000156802: jne short 0x0000000000156834; add rsp, 0x18; ret; 
0x0000000015686f: jne short 0x00000000001568a0; sub dword ptr [rip+0x9286c], 0x1; add rsp, 0x8; ret; 
0x000000001569b5: jne short 0x00000000001569f0; sub dword ptr [rip+0x92726], 0x1; mov rax, r8; pop rbp; ret; 
0x00000000156a4f: jne short 0x0000000000156a80; sub dword ptr [rip+0x9268c], 0x1; add rsp, 0x8; ret; 
0x00000000156af9: jne short 0x0000000000156b2c; add rsp, 0x10; pop rbp; ret; 
0x00000000156b89: jne short 0x0000000000156bbc; add rsp, 0x10; pop rbp; ret; 
0x00000000156f00: jne short 0x0000000000156f35; add rsp, 0x190; mov rax, r8; pop rbp; ret; 
0x00000000158818: jne short 0x000000000015882f; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x00000000159924: jne short 0x000000000015995e; add rsp, 0x58; ret; 
0x00000000159a1b: jne short 0x0000000000159a64; add rsp, 0x68; ret; 
0x00000000159bb4: jne short 0x0000000000159c14; add rsp, 0x68; ret; 
0x00000000159bea: jne short 0x0000000000159c14; mov rax, [rax+0x18]; add rsp, 0x68; jmp rax; 
0x00000000159c8b: jne short 0x0000000000159ce1; add rsp, 0x38; ret; 
0x00000000159cce: jne short 0x0000000000159ce1; mov rax, [rip+0x8f5f1]; mov rax, [rax+0x10]; add rsp, 0x38; jmp rax; 
0x0000000015a279: jne short 0x000000000015a285; add rsp, 0x28; ret; 
0x0000000015a4dc: jne short 0x000000000015a52f; add rsp, 0x110; mov eax, r12d; pop r12; ret; 
0x0000000015a6f2: jne short 0x000000000015a700; pop rbx; ret; 
0x0000000015a722: jne short 0x000000000015a730; pop rbx; ret; 
0x0000000015a815: jne short 0x000000000015a82c; mov eax, 0x27; syscall; 
0x0000000015a99e: jne short 0x000000000015a9a5; add rsp, 0x28; ret; 
0x0000000015ce0b: jne short 0x000000000015ce13; add rsp, 0x10; pop rbx; ret; 
0x0000000015ce91: jne short 0x000000000015ce99; add rsp, 0x10; pop rbx; ret; 
0x0000000015f997: jne short 0x000000000015fa18; add eax, 0xc634f00; mov ecx, [rdi-0x73]; or al, 0xb; notrack jmp r9; 
0x00000000160236: jne short 0x000000000016023d; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000161157: jne short 0x00000000001611bf; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162e17: jne short 0x0000000000162e64; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000017791c: jne short 0x0000000000177950; mov rax, [rcx]; mov [rdx], rax; mov rax, rdi; ret; 
0x0000000017d4a4: jne short 0x000000000017d510; test esi, esi; je short 0x000000000017d488; xor eax, eax; ret; 
0x0000000017d99d: jne short 0x000000000017d980; sub eax, ecx; vzeroupper; ret; 
0x0000000017de82: jne short 0x000000000017de60; sub eax, ecx; vzeroupper; ret; 
0x0000000017e1b3: jne short 0x000000000017e1d0; xor eax, eax; vzeroupper; ret; 
0x0000000017e86a: jne short 0x000000000017e870; vzeroupper; ret; 
0x000000001824f3: jne short 0x0000000000182520; mov rax, r8; vzeroupper; ret; 
0x000000001856b8: jne short 0x000000000018569b; vzeroupper; ret; 
0x0000000018581a: jne short 0x0000000000185820; vzeroupper; ret; 
0x00000000185846: jne short 0x000000000018582c; ret; 
0x00000000185c63: jne short 0x0000000000185c80; xor eax, eax; vzeroupper; ret; 
0x00000000185dbe: jne short 0x0000000000185d99; vzeroupper; ret; 
0x00000000185ed2: jne short 0x0000000000185f0f; ret far; 
0x00000000186002: jne short 0x000000000018603f; ret far; 
0x000000001860db: jne short 0x00000000001860c0; sub eax, ecx; vzeroupper; ret; 
0x00000000186239: jne short 0x0000000000186209; vzeroupper; ret; 
0x0000000018634f: jne short 0x000000000018638c; ret far; 
0x000000001864b2: jne short 0x00000000001864ef; ret far; 
0x000000001865b0: jne short 0x0000000000186590; sub eax, ecx; vzeroupper; ret; 
0x00000000186e93: jne short 0x0000000000186ec0; mov rax, r8; shr rax, 0x2; vzeroupper; ret; 
0x000000001885cd: jne short 0x00000000001885f3; xor eax, eax; ret; 
0x0000000018860c: jne short 0x0000000000188620; and eax, 0xffff; and ecx, 0xffff; sub eax, ecx; ret; 
0x0000000018940d: jne short 0x0000000000189433; xor eax, eax; ret; 
0x00000000189441: jne short 0x0000000000189446; xor eax, eax; ret; 
0x0000000018a57b: jne short 0x000000000018a556; vzeroupper; ret; 
0x0000000018a6e5: jne short 0x000000000018a670; lea rax, [rdi+0x3]; ret; 
0x0000000018a6b6: jne short 0x000000000018a670; lea rax, [rdi+0x7]; ret; 
0x0000000018a666: jne short 0x000000000018a674; nop [rax+rax]; xor rax, rax; ret; 
0x0000000018bb14: jne short 0x000000000018bb90; movzx eax, byte ptr [rdi-0x9]; movzx edx, byte ptr [rsi-0x9]; sub eax, edx; ret; 
0x0000000018c061: jne short 0x000000000018c065; cmp eax, ecx; sbb eax, eax; sbb eax, 0xffffffff; ret; 
0x0000000018c049: jne short 0x000000000018c065; xor eax, eax; ret; 
0x0000000018c676: jne short 0x000000000018c680; xor eax, eax; ret; 
0x000000001906f4: jne short 0x0000000000190743; add rsp, 0x38; pop rbx; pop r14; ret; 
0x000000001908fe: jne short 0x0000000000190931; add rsp, 0x38; pop rbx; pop r14; ret; 
0x00000000190b15: jne short 0x0000000000190b92; add rsp, 0x30; mov rax, r12; pop r12; ret; 
0x0000000019169e: jne short 0x0000000000191680; pop rbx; pop rbp; pop r12; ret; 
0x00000000191776: jne short 0x0000000000191760; pop rbx; pop rbp; pop r12; ret; 
0x000000001917c9: jne short 0x00000000001917a0; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000001919eb: jne short 0x00000000001919d5; pop rbx; ret; 
0x00000000191a8d: jne short 0x0000000000191a70; pop rbx; ret; 
0x00000000191af5: jne short 0x0000000000191b20; sub dword ptr [rip+0x54d02], 0x1; pop rbx; ret; 
0x00000000191c0f: jne short 0x0000000000191c00; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000191df6: jne short 0x0000000000191e40; sub dword ptr [rip+0x56859], 0x1; pop rbp; ret; 
0x0000000003904b: jno short 0x0000000000039015; sbb al, [rax]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000716e6: jno short 0x00000000000716de; ret; 
0x0000000007f19c: jno short 0x000000000007f198; dec dword ptr [rax-0x7b]; ror byte ptr [rdi], 0x84; mov dword ptr [rax], 0x89480000; ret; 
0x00000000082a01: jno short 0x0000000000082a07; mov [rdx+0x20], rsi; mov [rcx], eax; ret; 
0x00000000082ba8: jno short 0x0000000000082bae; mov [rdx+0x20], rsi; mov [rcx], eax; ret; 
0x0000000009754b: jno short 0x0000000000097506; adc al, 0x0; mov [rax], rdi; ret; 
0x0000000009d73b: jno short 0x000000000009d7b4; or al, 0x0; cmovne rax, rdx; ret; 
0x000000000b8038: jno short 0x00000000000b802a; movups [rcx-0x20], xmm7; movups [rcx-0x30], xmm8; movups [r11], xmm4; ret; 
0x000000000b8126: jno short 0x00000000000b8118; movups [rcx-0x20], xmm7; movups [rcx-0x30], xmm8; movups [r11], xmm4; ret; 
0x000000000cc10d: jno short 0x00000000000cc18e; and [rax-0x73], cl; add eax, 0x11aee9; add rsp, 0x8; ret; 
0x0000000010e5d3: jno short 0x000000000010e61d; or eax, 0x64d8f700; mov [rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000010f8e3: jno short 0x000000000010f8e5; add [rax], al; syscall; 
0x0000000012770b: jno short 0x00000000001276e4; add eax, [rax]; cmovne rax, rdx; ret; 
0x00000000132605: jno short 0x000000000013260a; add [rax-0x77], cl; fimul st, word ptr [rax-0x77]; out dx, eax; call qword ptr [rsp+0x10]; 
0x0000000013dacb: jno short 0x000000000013da55; out dx, al; jmp qword ptr [rsi+0xf]; 
0x0000000014c154: jno short 0x000000000014c19e; add esp, 0x10; mov eax, r8d; pop r12; ret; 
0x00000000160626: jno short 0x000000000016062d; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000187e7e: jno short 0x0000000000187e87; add [rax], al; xor eax, eax; ret; 
0x00000000189524: jno short 0x0000000000189524; vmovups [r9-0x40], zmm7; ret; 
0x0000000018975e: jno short 0x000000000018975e; vmovups [r9-0x40], zmm15; ret; 
0x000000001898c5: jno short 0x00000000001898cd; vmovups [r9+0x1c0], zmm15; ret; 
0x00000000189a1c: jno short 0x0000000000189a9a; adc [rdi-0x6], rbp; vmovups [rdi-0x1c0], zmm14; vmovups [rdi-0x200], zmm15; ret; 
0x00000000189a23: jno short 0x0000000000189aa1; adc [rdi-0x7], rsi; vmovups [rdi-0x200], zmm15; ret; 
0x00000000189a2a: jno short 0x0000000000189aa8; adc [rdi-0x8], rdi; ret; 
0x00000000071dd1: jnp short 0x0000000000071e3f; cld; jmp qword ptr [rsi+0x66]; 
0x0000000007f8fe: jnp short 0x000000000007f8fa; jmp qword ptr [rsi+0x2e]; 
0x00000000089361: jnp short 0x0000000000089364; add [rax], al; mov rdi, rbx; call qword ptr [r13+0x60]; 
0x0000000009b609: jnp short 0x000000000009b653; movsxd rsi, esi; movups [rbx+0x38], xmm0; mov [rbx], rsi; call rcx; 
0x0000000009b873: jnp short 0x000000000009b8bd; mov rsi, r14; call rax; 
0x0000000009b902: jnp short 0x000000000009b94c; call rax; 
0x000000000ba411: jnp short 0x00000000000ba425; add [rax], eax; cmovne rax, rdx; ret; 
0x000000000c0467: jnp short 0x00000000000c045f; jmp qword ptr [rsi+0xf]; 
0x000000000cf596: jnp short 0x00000000000cf5a9; add [rax-0x7d], cl; ret; 
0x000000000cf5c0: jnp short 0x00000000000cf5d3; add bl, ch; or [rax-0x7d], ecx; ret; 
0x000000000cf654: jnp short 0x00000000000cf667; add bl, ch; or [rax-0x7d], ecx; ret; 
0x000000000e0b32: jnp short 0x00000000000e0b85; add [rax], al; jne short 0x00000000000e0b40; mov eax, 0x40; ret; 
0x0000000010abfc: jnp short 0x000000000010ac16; lea rcx, [rbx+0x28]; mov rsi, r14; mov edx, [rdx+rax]; call qword ptr [rbx+0x40]; 
0x0000000010fbd1: jnp short 0x000000000010fb61; bnd jmp qword ptr [rsi+0x2e]; 
0x000000001128ca: jnp short 0x00000000001128cb; inc dword ptr [rbp-0x7cc08b40]; ret; 
0x00000000114b34: jnp short 0x0000000000114b7f; mov edi, [rsp]; call rbx; 
0x000000001192e5: jnp short 0x00000000001192e7; add [rax], al; syscall; 
0x0000000011b254: jnp short 0x000000000011b262; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x2]; mov eax, 0xffffffff; ret; 
0x0000000011b28c: jnp short 0x000000000011b29a; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x2]; mov rax, 0xffffffffffffffff; ret; 
0x0000000011b2bc: jnp short 0x000000000011b2ca; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x2]; mov eax, 0xffffffff; ret; 
0x0000000011b2f4: jnp short 0x000000000011b302; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x2]; mov eax, 0xffffffff; ret; 
0x0000000011b32c: jnp short 0x000000000011b33a; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x2]; mov eax, 0xffffffff; ret; 
0x0000000012031b: jnp short 0x0000000000120329; add [rdi], cl; add eax, 0xffff75e9; jmp qword ptr [rsi+0x2e]; 
0x00000000121608: jnp short 0x0000000000121632; add [rax], bh; cmovns rax, [rbx+0x28]; pop rbx; ret; 
0x0000000012621d: jnp short 0x0000000000126207; mov dword ptr [rbp-0x80], 0x0; movups [rbp-0x78], xmm7; call rcx; 
0x000000001269a1: jnp short 0x0000000000126a1b; mov [rbp-0x80], edx; mov rdx, r12; movups [rbp-0x78], xmm7; call rax; 
0x000000001329ee: jnp short 0x0000000000132a38; test rdi, rdi; jne short 0x00000000001329e0; pop rbx; ret; 
0x0000000014b305: jnp short 0x000000000014b306; inc dword ptr [rbp+0x487474c0]; mov eax, [rbp+0x60]; mov rdi, r13; call qword ptr [rax+0x20]; 
0x0000000015fc30: jnp short 0x000000000015fc37; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000015fc9a: jnp short 0x000000000015fca1; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000190b16: jnp short 0x0000000000190b60; add esp, 0x30; mov rax, r12; pop r12; ret; 
0x00000000106e16: jns 0x000000004399b647; or [rcx], dh; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x5d], bl; ret; 
0x000000000b72b6: jns 0xffffffffed3b7613; mov [rdi+0x7], ch; ret; 
0x000000000b7318: jns 0xffffffffed3b7a75; mov [rdi+0xb], ch; ret; 
0x000000000b7338: jns 0xffffffffed3b7b95; mov [rdi+0xc], ch; ret; 
0x00000000045b79: jns short 0x0000000000045b39; xor eax, eax; ret; 
0x0000000005591b: jns short 0x00000000000558e6; ret; 
0x00000000059749: jns short 0x0000000000059711; or [r8], r8b; mov [rdi], rax; mov rax, rdi; ret; 
0x0000000008e94b: jns short 0x000000000008e946; jmp qword ptr [rsi+0xf]; 
0x0000000008f153: jns short 0x000000000008f156; add [rax], al; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rax+0x18]; 
0x0000000009b5b3: jns short 0x000000000009b62e; adc al, 0x0; call qword ptr [rax]; 
0x000000000b3753: jns short 0x00000000000b37ac; str [rcx+0x63]; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b3853: jns short 0x00000000000b38ab; str [rcx+0x63]; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b4f33: jns short 0x00000000000b4f76; str [rcx+0x63]; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b803c: jns short 0x00000000000b801e; movups [rcx-0x30], xmm8; movups [r11], xmm4; ret; 
0x000000000b812a: jns short 0x00000000000b810c; movups [rcx-0x30], xmm8; movups [r11], xmm4; ret; 
0x000000000dfdb5: jns short 0x00000000000dfdb7; add [rax], al; syscall; 
0x0000000010f5cb: jns short 0x000000000010f605; or eax, 0x64d8f700; mov [rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000110639: jns short 0x0000000000110640; mov byte ptr [r12], 0x0; mov rax, r12; pop r12; ret; 
0x0000000012669c: jns short 0x00000000001266ce; mov [rbp-0x80], edx; mov rdx, r12; movups [rbp-0x78], xmm7; call rax; 
0x0000000012686e: jns short 0x00000000001268a0; mov [rbp-0x80], edx; mov rdx, r12; movups [rbp-0x78], xmm7; call rax; 
0x0000000013bacf: jns short 0x000000000013ba9f; or al, [rax]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000013c8d3: jns short 0x000000000013c896; out dx, eax; jmp qword ptr [rsi+0xf]; 
0x0000000014b056: jns short 0x000000000014b0a1; mov eax, [rdi+0x60]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x0000000014d8d3: jns short 0x000000000014d893; std; jmp qword ptr [rsi+0xf]; 
0x0000000014fb5e: jns short 0x000000000014fba8; mov eax, [rbp+0x8]; lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax]; 
0x0000000014fc4e: jns short 0x000000000014fc98; mov eax, [rbp+0x8]; lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax]; 
0x0000000014fd3e: jns short 0x000000000014fd88; mov eax, [rbp+0x8]; lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax]; 
0x0000000014fe2e: jns short 0x000000000014fe78; mov eax, [rbp+0x8]; lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax]; 
0x00000000156e07: jns short 0x0000000000156e01; jmp qword ptr [rsi+0xf]; 
0x00000000157dec: jns short 0x0000000000157df0; ret; 
0x0000000015fe4a: jns short 0x000000000015fe51; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000185385: jns short 0x0000000000185347; vmovdqu [rcx-0x60], ymm8; vmovdqu [r11], ymm4; vzeroupper; ret; 
0x000000001854b8: jns short 0x000000000018547a; vmovdqu [rcx-0x60], ymm8; vmovdqu [r11], ymm4; vzeroupper; ret; 
0x0000000018952b: jns short 0x000000000018952c; ret; 
0x00000000189765: jns short 0x0000000000189766; ret; 
0x000000001898cc: jns short 0x00000000001898d5; ret; 
0x0000000018a17d: jns short 0x000000000018a17d; vmovdqu64 [rcx-0xc0], zmm8; vmovdqu64 [r11], zmm4; vzeroupper; ret; 
0x0000000018a308: jns short 0x000000000018a308; vmovdqu64 [rcx-0xc0], zmm8; vmovdqu64 [r11], zmm4; vzeroupper; ret; 
0x00000000040918: jo 0x0000000034e4ca66; and rcx, rdx; or rcx, rax; movq xmm0, rcx; ret; 
0x00000000038f16: jo short 0x0000000000038f61; movsxd edi, edi; mov eax, [rax+rdi*4]; ret; 
0x00000000044a86: jo short 0x0000000000044aa8; mov edi, ebp; ror rdx, 0x11; xor rdx, fs:[0x30]; call rdx; 
0x0000000007f260: jo short 0x000000000007f25c; call far fword ptr [rbx+0x4c]; 
0x0000000008487e: jo short 0x00000000000848c0; mov [rax], rdx; xor eax, eax; ret; 
0x00000000090e81: jo short 0x0000000000090e46; nop [rax+rax]; mov qword ptr [rsi], 0x0; mov eax, 0xffffffff; ret; 
0x00000000091049: jo short 0x00000000000910a6; pop rbp; pop r12; ret; 
0x0000000009bf83: jo short 0x000000000009bf8d; jb short 0x000000000009bf90; mov [r8], rsi; ret; 
0x0000000009c86c: jo short 0x000000000009c822; add [rax], eax; cmovne rax, rdx; ret; 
0x0000000009e383: jo short 0x000000000009e38b; sub cl, [rcx+rcx*4-0x40]; ret; 
0x000000000b85d9: jo short 0x00000000000b85ea; add al, ch; outsd dx, [rsi]; add al, 0xf8; jmp qword ptr [rsi+0x66]; 
0x000000000b9555: jo short 0x00000000000b95b2; pop rbp; pop r12; ret; 
0x000000000b99f4: jo short 0x00000000000b9a51; pop rbp; pop r12; ret; 
0x000000000cc8ef: jo short 0x00000000000cc950; mov [rsp+0xd0], rax; lea rdi, [rsp+0xd0]; mov rsi, r13; call r12; 
0x000000000dfe75: jo short 0x00000000000dfe77; add [rax], al; syscall; 
0x000000000eacfb: jo short 0x00000000000ead2e; shl dh, 0x82; enter 0x0, 0x0; jne 0x00000000000eac2d; ret; 
0x000000000f7a96: jo short 0x00000000000f7a81; rcr ah, 0xff; jmp qword ptr [rsi+0xf]; 
0x00000000107298: jo short 0x00000000001072a9; adc [rdi+0x78], edi; ret; 
0x00000000107c2d: jo short 0x0000000000107c3e; adc [rdi+0xf8], edi; ret; 
0x0000000011087c: jo short 0x0000000000110886; cmovae r10, rcx; mov [rsp+0x20], rax; mov eax, 0x65; syscall; 
0x0000000013265c: jo short 0x0000000000132660; add [rax-0x75], cl; and al, 0x8; mov rdi, rbx; call rax; 
0x00000000132fdc: jo short 0x0000000000133045; add al, [rax]; mov rdi, [rsp+0x10]; mov rsi, r12; call qword ptr [rsp+0x58]; 
0x0000000013ff0c: jo short 0x000000000013fef6; cwde; add [rax], eax; mov edi, [r15]; call qword ptr [rsp+0x70]; 
0x00000000140030: jo short 0x000000000014001a; sbb dl, [rdi-0xceffff]; call qword ptr [rsp+0x70]; 
0x00000000148c50: jo short 0x0000000000148c92; mov edx, [rsi+0x1c8]; add rsi, 0x38; jmp qword ptr [rax+0x18]; 
0x00000000149e27: jo short 0x0000000000149db3; imul ecx, [rax+0xf], 0xffffffcd; call qword ptr [rax+0x18]; 
0x00000000149e3b: jo short 0x0000000000149e86; mov esi, [rsp+0x18]; mov rdi, r12; call qword ptr [rax+0x8]; 
0x0000000014a335: jo short 0x000000000014a380; mov edi, ebp; call qword ptr [rax+0x20]; 
0x0000000015177d: jo short 0x00000000001517e5; pxor mm0, mm0; movaps [rsp+0x60], xmm1; movups [rsp+0x18], xmm0; call r8; 
0x000000001597c4: jo short 0x000000000015975c; or [rax], al; mov rdi, [rdi]; call qword ptr [rax+0x278]; 
0x000000001606d8: jo short 0x00000000001606df; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160776: jo short 0x000000000016077d; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001874dc: jo short 0x00000000001874de; add eax, [rax]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018901c: jo short 0x0000000000189004; add al, [rax]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000002d514: jp short 0x000000000002d51d; or byte ptr [rdi], 0x87; ret far; 
0x0000000003736c: jp short 0x00000000000373a6; jbe short 0x0000000000037387; mov rax, [rdx+rdi*8+0x40]; ret; 
0x000000000406f4: jp short 0x0000000000040700; jne short 0x0000000000040700; fadd st, st(0); add rsp, 0x8; ret; 
0x00000000040aca: jp short 0x0000000000040ad8; jne short 0x0000000000040ad8; addsd xmm0, xmm0; ret; 
0x00000000040de6: jp short 0x0000000000040df0; jne short 0x0000000000040df0; addss xmm0, xmm0; ret; 
0x000000000772cd: jp short 0x0000000000077317; movsxd ebx, ebx; mov rdx, rbx; call qword ptr [r13+0x38]; 
0x00000000081555: jp short 0x00000000000815a3; mov edx, esp; mov rsi, rbp; mov rdi, rbx; call qword ptr [r13+0x58]; 
0x0000000009b4e8: jp short 0x000000000009b4ff; add [rbx-0x691217c8], cl; cli; jmp qword ptr [rsi+0x66]; 
0x0000000009b4e9: jp short 0x000000000009b4ff; add [rbx-0x691217c8], cl; cli; jmp qword ptr [rsi+0x66]; 
0x0000000009d70a: jp short 0x000000000009d71a; add [rax-0x73], cl; add eax, 0xe7a6c; cmove rax, rdx; ret; 
0x000000000c5fa5: jp short 0x00000000000c5fac; add [rbx-0x76b30383], cl; out 0x89, al; ret; 
0x000000001192b5: jp short 0x00000000001192b7; add [rax], al; syscall; 
0x0000000011e97a: jp short 0x000000000011e90f; or al, 0x0; syscall; 
0x00000000125a85: jp short 0x0000000000125ad7; mov rsi, rdx; call rax; 
0x0000000012c172: jp short 0x000000000012c133; or eax, [rax]; syscall; 
0x0000000012ea3a: jp short 0x000000000012e9d5; or eax, [rax]; syscall; 
0x0000000013d31a: jp short 0x000000000013d2d4; or al, [rax]; syscall; 
0x00000000141c6f: jp short 0x0000000000141c6f; jmp qword ptr [rsi+0x2e]; 
0x00000000143ea3: jp short 0x0000000000143efd; mov [rdx+0x68], rcx; ret; 
0x0000000015fd59: jp short 0x000000000015fd60; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000184022: jp short 0x0000000000184025; add [rax], al; vzeroupper; ret; 
0x00000000052787: jrcxz 0x000000000005278c; add cl, ch; paddd mm7, mm7; call qword ptr [rax+0x587c031]; 
0x0000000005cb74: jrcxz 0x000000000005cbba; mov eax, eax; ret; 
0x000000000792cc: jrcxz 0x0000000000079295; test eax, edx; idiv bh; call qword ptr [rax]; 
0x0000000009ee5c: jrcxz 0x000000000009eeb9; mov qword ptr [rbp], 0x0; pop rbp; pop r12; ret; 
0x000000000a4bd4: jrcxz 0x00000000000a4c22; mov eax, eax; ret; 
0x000000000b86c6: jrcxz 0x00000000000b86c7; sldt [rax]; lea rax, [rbx+0x1]; pop rbx; ret; 
0x000000000d8040: jrcxz 0x00000000000d8036; jmp far fword ptr [rcx]; 
0x000000000d8f6f: jrcxz 0x00000000000d8f71; add [rax], al; syscall; 
0x000000000d9676: jrcxz 0x00000000000d96ed; out 0x5b, eax; pop rbp; pop r12; ret; 
0x000000000e6bbc: jrcxz 0x00000000000e6ba7; xabort 0xff; jmp qword ptr [rsi+0xf]; 
0x000000000eace0: jrcxz 0x00000000000eacea; je short 0x00000000000eac67; pop rbx; ret; 
0x000000000f86dd: jrcxz 0x00000000000f8668; sub [rcx+0x63], cl; ret far; 
0x00000000101604: jrcxz 0x000000000010164e; add esp, 0x8; pop rbx; pop rbp; ret; 
0x00000000116765: jrcxz 0x0000000000116767; loop 0x0000000000116768; dec dword ptr [rax-0x7f]; ret; 
0x00000000126dc1: jrcxz 0x0000000000126dd3; or al, 0x0; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000140ab4: jrcxz 0x0000000000140ab5; jmp qword ptr [rsi+0xf]; 
0x00000000140b44: jrcxz 0x0000000000140b45; jmp qword ptr [rsi+0xf]; 
0x0000000014b44c: jrcxz 0x000000000014b44b; call qword ptr [rax-0x5e1f00d]; 
0x0000000014b739: jrcxz 0x000000000014b6e6; in eax, dx; dec dword ptr [rax-0x77]; ret; 
0x0000000014d1f9: jrcxz 0x000000000014d1b7; or [rax], eax; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000161b67: jrcxz 0x0000000000161bb5; mov [rdi-0x15], ebx; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000161baf: jrcxz 0x0000000000161bfd; mov [rdi-0x15], ebx; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000161bed: jrcxz 0x0000000000161c3b; mov [rdi-0x15], ebx; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000161c29: jrcxz 0x0000000000161c77; mov [rdi-0x15], ebx; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000161c63: jrcxz 0x0000000000161cb1; mov [rdi-0x15], ebx; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000161c9b: jrcxz 0x0000000000161ce9; mov [rdi-0x15], ebx; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000161cc3: jrcxz 0x0000000000161d11; mov [rdi-0x15], ebx; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000164547: jrcxz 0x0000000000164595; mov [rdi-0x15], ebx; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000016458f: jrcxz 0x00000000001645dd; mov [rdi-0x15], ebx; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x000000001645cd: jrcxz 0x000000000016461b; mov [rdi-0x15], ebx; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000164609: jrcxz 0x0000000000164657; mov [rdi-0x15], ebx; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000164643: jrcxz 0x0000000000164691; mov [rdi-0x15], ebx; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000016467b: jrcxz 0x00000000001646c9; mov [rdi-0x15], ebx; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x000000001646a3: jrcxz 0x00000000001646f1; mov [rdi-0x15], ebx; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000166c69: jrcxz 0x0000000000166c5f; movq [rdi-0x10], mm1; ret; 
0x00000000169799: jrcxz 0x000000000016978f; movq [rdi-0x10], mm1; ret; 
0x000000001860dc: jrcxz 0x0000000000186107; enter 0xf8c5, 0x77; ret; 
0x00000000042cd1: js 0x0000000000043576; mov rdi, [rsp+0x10]; mov rdx, rbp; mov rsi, r12; call rbx; 
0x00000000094c04: js 0x0000000000094d94; mov rax, [rip+0x14e17f]; call qword ptr [rax]; 
0x000000000b3175: js 0x0000000066ce33f2; nop [rax+rax]; mov edx, [rsi]; mov [rdi], edx; ret; 
0x000000000b6485: js 0x0000000066ce6702; nop [rax+rax]; mov edx, [rsi]; mov [rdi], edx; ret; 
0x000000000b6f75: js 0x0000000066ce71f2; nop [rax+rax]; mov edx, [rsi]; mov [rdi], edx; ret; 
0x000000000b7258: js 0xffffffffed3b74b5; mov [rdi+0x3], ch; ret; 
0x000000000b7286: js 0xffffffffed3b76e3; mov [rdi+0x5], ch; ret; 
0x000000000b72d8: js 0xffffffffed3b7b35; mov [rdi+0x9], ch; ret; 
0x0000000002f3b4: js short 0x000000000002f3c5; test [rdi+rdi*8-0x1], esp; dec dword ptr [rcx+0x39]; ret; 
0x00000000038b45: js short 0x0000000000038aca; loopne 0x0000000000038b51; ret; 
0x00000000038b85: js short 0x0000000000038b0a; loopne 0x0000000000038b8b; ret; 
0x00000000038c25: js short 0x0000000000038baa; loopne 0x0000000000038c2d; ret; 
0x00000000038ba5: js short 0x0000000000038bcc; add [rax], cl; add [rax], al; ret; 
0x00000000038bc5: js short 0x0000000000038bec; add [rdx], al; add [rax], al; ret; 
0x00000000038c45: js short 0x0000000000038c6c; add [rax], ah; add [rax], al; ret; 
0x00000000038d05: js short 0x0000000000038c8a; loopne 0x0000000000038d0a; ret; 
0x00000000038c65: js short 0x0000000000038c8c; add [rcx], al; add [rax], al; ret; 
0x00000000038c85: js short 0x0000000000038cac; add [rax], dl; add [rax], al; ret; 
0x00000000038d9e: js short 0x0000000000038d23; loopne 0x0000000000038da3; ret; 
0x00000000038dbe: js short 0x0000000000038d43; loopne 0x0000000000038dca; ret; 
0x00000000038dfe: js short 0x0000000000038d83; loopne 0x0000000000038e04; ret; 
0x00000000038e9e: js short 0x0000000000038e23; loopne 0x0000000000038ea6; ret; 
0x00000000038e1e: js short 0x0000000000038e45; add [rax], cl; add [rax], al; ret; 
0x00000000038e3e: js short 0x0000000000038e65; add [rdx], al; add [rax], al; ret; 
0x00000000038ebe: js short 0x0000000000038ee5; add [rax], ah; add [rax], al; ret; 
0x00000000038ede: js short 0x0000000000038f05; add [rcx], al; add [rax], al; ret; 
0x00000000038efe: js short 0x0000000000038f25; add [rax], dl; add [rax], al; ret; 
0x00000000038f26: js short 0x0000000000038f71; movsxd edi, edi; mov eax, [rax+rdi*4]; ret; 
0x00000000041a10: js short 0x0000000000041a21; adc [rsp+0x88], edi; mov r10d, 0x8; mov eax, 0xd; syscall; 
0x0000000004928d: js short 0x0000000000049212; ret; 
0x0000000004bf8d: js short 0x000000000004bf12; ret; 
0x00000000052485: js short 0x0000000000052488; add [rbp-0xa], dh; pop rbx; ret; 
0x0000000007fbcf: js short 0x000000000007fbcb; jmp qword ptr [rsi+0x2e]; 
0x0000000008487a: js short 0x000000000008488c; mov [rax+0x40], rsi; mov [rax], rdx; xor eax, eax; ret; 
0x000000000877f1: js short 0x00000000000877f8; ret; 
0x00000000091b3e: js short 0x0000000000091b88; add esp, 0x98; ret; 
0x000000000a078e: js short 0x00000000000a07c1; fild st, dword ptr [rbp-0x77]; ret far; 
0x000000000bfb94: js short 0x00000000000bfb7f; ret far; 
0x000000000d7794: js short 0x00000000000d7782; hlt; jmp far fword ptr [rcx]; 
0x000000000dfed5: js short 0x00000000000dfed7; add [rax], al; syscall; 
0x000000000e0c6b: js short 0x00000000000e0c70; ret; 
0x000000000f1858: js short 0x00000000000f1862; add al, 0x75; mov ebx, 0xf708588b; ret; 
0x000000000f93ef: js short 0x00000000000f93da; ret far; 
0x000000001070a9: js short 0x00000000001070c0; cmp rbx, rax; pop rbx; setl al; ret; 
0x00000000107248: js short 0x0000000000107259; adc [rsi+0x70], edi; ret; 
0x0000000010e63a: js short 0x000000000010e644; mov eax, [rdi+0x8]; and eax, 0x100f; ret; 
0x0000000011cac8: js short 0x000000000011ca4d; loopne 0x000000000011cad4; ret; 
0x0000000011cbe8: js short 0x000000000011cb6d; loopne 0x000000000011cbed; ret; 
0x0000000011cc78: js short 0x000000000011cbfd; loopne 0x000000000011cc7e; ret; 
0x0000000011cda8: js short 0x000000000011cdcf; add [rdx], al; add [rax], al; ret; 
0x0000000011cf58: js short 0x000000000011cedd; loopne 0x000000000011cf60; ret; 
0x0000000011cfe8: js short 0x000000000011d00f; add [rax], ah; add [rax], al; ret; 
0x0000000011d070: js short 0x000000000011d097; add [rcx], al; add [rax], al; ret; 
0x0000000011d108: js short 0x000000000011d12f; add [rax], dl; add [rax], al; ret; 
0x0000000011d449: js short 0x000000000011d3ce; loopne 0x000000000011d455; ret; 
0x0000000011d549: js short 0x000000000011d4ce; loopne 0x000000000011d54e; ret; 
0x0000000011d5c9: js short 0x000000000011d54e; loopne 0x000000000011d5cf; ret; 
0x0000000011d6d9: js short 0x000000000011d700; add [rdx], al; add [rax], al; ret; 
0x0000000011d859: js short 0x000000000011d7de; loopne 0x000000000011d861; ret; 
0x0000000011d8d9: js short 0x000000000011d900; add [rax], ah; add [rax], al; ret; 
0x0000000011d951: js short 0x000000000011d978; add [rcx], al; add [rax], al; ret; 
0x0000000011d9d9: js short 0x000000000011da00; add [rax], dl; add [rax], al; ret; 
0x00000000126096: js short 0x0000000000126021; push rbp; or byte ptr [rcx+rcx*4-0x1e], 0xf; adc [rbp-0x78], esp; call rax; 
0x000000001265c6: js short 0x0000000000126551; push rbp; or byte ptr [rcx+rcx*4-0x1e], 0xf; adc [rbp-0x78], esi; call rax; 
0x000000001269a2: js short 0x000000000012692d; push rbp; or byte ptr [rcx+rcx*4-0x1e], 0xf; adc [rbp-0x78], edi; call rax; 
0x00000000126b2b: js short 0x0000000000126b35; jne short 0x0000000000126b20; mov rax, [rax+0x30]; ret; 
0x00000000137770: js short 0x0000000000137780; mov rax, rdx; movsxd rdx, ecx; ret; 
0x00000000139654: js short 0x0000000000139623; out dx, al; dec dword ptr [rax-0x77]; ret; 
0x0000000014101e: js short 0x0000000000141030; mov rax, r12; pop r12; ret; 
0x00000000141e8f: js short 0x0000000000141e8f; jmp qword ptr [rsi+0x66]; 
0x0000000014205a: js short 0x000000000014205d; add [rsi-0x70], ah; mov rax, [rbp+0x8]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x00000000156758: js short 0x0000000000156768; add rsp, 0x8; pop rbp; pop r12; ret; 
0x0000000015fef8: js short 0x000000000015feff; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000015ff96: js short 0x000000000015ff9d; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000184c54: js short 0x0000000000184c58; add [rax], al; vzeroupper; ret; 
0x00000000191be4: js short 0x0000000000191beb; add [rax+0x39], cl; ret; 
0x0000000018e778: lahf; add al, [rax]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000014c4a7: lahf; in eax, dx; dec dword ptr [rax-0x77]; ret; 
0x0000000015708d: lahf; jae short 0x000000000015708b; dec dword ptr [rcx-0x4cfa7639]; ret; 
0x0000000004d3ad: lahf; mov dh, 0xfe; jmp qword ptr [rsi+0x66]; 
0x00000000114eb2: lahf; ret; 
0x00000000038f88: lahf; sbb al, [rax]; add rax, fs:[0x0]; ret; 
0x00000000114ead: lahf; vpand ymm1, ymm15, [rdi]; lahf; ret; 
0x000000001672ec: lddqu xmm0, [rsi+0x10]; movdqu [rdi+0x10], xmm0; lddqu xmm0, [rsi]; movdqu [rdi], xmm0; ret; 
0x00000000167966: lddqu xmm0, [rsi+0x1]; lddqu xmm1, [rsi]; movdqu [rdi+0x1], xmm0; movdqu [rdi], xmm1; ret; 
0x000000001678f6: lddqu xmm0, [rsi+0x2]; lddqu xmm1, [rsi]; movdqu [rdi+0x2], xmm0; movdqu [rdi], xmm1; ret; 
0x00000000167886: lddqu xmm0, [rsi+0x3]; lddqu xmm1, [rsi]; movdqu [rdi+0x3], xmm0; movdqu [rdi], xmm1; ret; 
0x00000000167816: lddqu xmm0, [rsi+0x4]; lddqu xmm1, [rsi]; movdqu [rdi+0x4], xmm0; movdqu [rdi], xmm1; ret; 
0x000000001677a6: lddqu xmm0, [rsi+0x5]; lddqu xmm1, [rsi]; movdqu [rdi+0x5], xmm0; movdqu [rdi], xmm1; ret; 
0x00000000167736: lddqu xmm0, [rsi+0x6]; lddqu xmm1, [rsi]; movdqu [rdi+0x6], xmm0; movdqu [rdi], xmm1; ret; 
0x000000001676c6: lddqu xmm0, [rsi+0x7]; lddqu xmm1, [rsi]; movdqu [rdi+0x7], xmm0; movdqu [rdi], xmm1; ret; 
0x00000000167656: lddqu xmm0, [rsi+0x8]; lddqu xmm1, [rsi]; movdqu [rdi+0x8], xmm0; movdqu [rdi], xmm1; ret; 
0x000000001675e6: lddqu xmm0, [rsi+0x9]; lddqu xmm1, [rsi]; movdqu [rdi+0x9], xmm0; movdqu [rdi], xmm1; ret; 
0x00000000167576: lddqu xmm0, [rsi+0xa]; lddqu xmm1, [rsi]; movdqu [rdi+0xa], xmm0; movdqu [rdi], xmm1; ret; 
0x00000000167506: lddqu xmm0, [rsi+0xb]; lddqu xmm1, [rsi]; movdqu [rdi+0xb], xmm0; movdqu [rdi], xmm1; ret; 
0x00000000167496: lddqu xmm0, [rsi+0xc]; lddqu xmm1, [rsi]; movdqu [rdi+0xc], xmm0; movdqu [rdi], xmm1; ret; 
0x00000000167426: lddqu xmm0, [rsi+0xd]; lddqu xmm1, [rsi]; movdqu [rdi+0xd], xmm0; movdqu [rdi], xmm1; ret; 
0x000000001673b6: lddqu xmm0, [rsi+0xe]; lddqu xmm1, [rsi]; movdqu [rdi+0xe], xmm0; movdqu [rdi], xmm1; ret; 
0x00000000167346: lddqu xmm0, [rsi+0xf]; lddqu xmm1, [rsi]; movdqu [rdi+0xf], xmm0; movdqu [rdi], xmm1; ret; 
0x00000000166ad6: lddqu xmm0, [rsi-0x10]; movdqu [rdi-0x10], xmm0; ret; 
0x0000000016727c: lddqu xmm0, [rsi-0x11]; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x11], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x000000001671fc: lddqu xmm0, [rsi-0x12]; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x12], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000016716c: lddqu xmm0, [rsi-0x13]; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x13], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x000000001670ec: lddqu xmm0, [rsi-0x14]; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x14], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000016706c: lddqu xmm0, [rsi-0x15]; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x15], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000166fec: lddqu xmm0, [rsi-0x16]; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x16], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000166f6c: lddqu xmm0, [rsi-0x17]; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x17], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000166eec: lddqu xmm0, [rsi-0x18]; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x18], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000166e6c: lddqu xmm0, [rsi-0x19]; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x19], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000166dec: lddqu xmm0, [rsi-0x1a]; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x1a], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000166d6c: lddqu xmm0, [rsi-0x1b]; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x1b], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000166cec: lddqu xmm0, [rsi-0x1c]; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x1c], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000166c5c: lddqu xmm0, [rsi-0x1d]; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x1d], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000166bcc: lddqu xmm0, [rsi-0x1e]; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x1e], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000166b3c: lddqu xmm0, [rsi-0x1f]; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x1f], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000166acc: lddqu xmm0, [rsi-0x20]; movdqu [rdi-0x20], xmm0; lddqu xmm0, [rsi-0x10]; movdqu [rdi-0x10], xmm0; ret; 
0x000000001672f6: lddqu xmm0, [rsi]; movdqu [rdi], xmm0; ret; 
0x00000000167281: lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x11], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000167201: lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x12], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000167171: lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x13], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x000000001670f1: lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x14], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000167071: lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x15], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000166ff1: lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x16], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000166f71: lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x17], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000166ef1: lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x18], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000166e71: lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x19], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000166df1: lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x1a], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000166d71: lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x1b], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000166cf1: lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x1c], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000166c61: lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x1d], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000166bd1: lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x1e], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000166b41: lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x1f], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000016796b: lddqu xmm1, [rsi]; movdqu [rdi+0x1], xmm0; movdqu [rdi], xmm1; ret; 
0x000000001678fb: lddqu xmm1, [rsi]; movdqu [rdi+0x2], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000016788b: lddqu xmm1, [rsi]; movdqu [rdi+0x3], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000016781b: lddqu xmm1, [rsi]; movdqu [rdi+0x4], xmm0; movdqu [rdi], xmm1; ret; 
0x000000001677ab: lddqu xmm1, [rsi]; movdqu [rdi+0x5], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000016773b: lddqu xmm1, [rsi]; movdqu [rdi+0x6], xmm0; movdqu [rdi], xmm1; ret; 
0x000000001676cb: lddqu xmm1, [rsi]; movdqu [rdi+0x7], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000016765b: lddqu xmm1, [rsi]; movdqu [rdi+0x8], xmm0; movdqu [rdi], xmm1; ret; 
0x000000001675eb: lddqu xmm1, [rsi]; movdqu [rdi+0x9], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000016757b: lddqu xmm1, [rsi]; movdqu [rdi+0xa], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000016750b: lddqu xmm1, [rsi]; movdqu [rdi+0xb], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000016749b: lddqu xmm1, [rsi]; movdqu [rdi+0xc], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000016742b: lddqu xmm1, [rsi]; movdqu [rdi+0xd], xmm0; movdqu [rdi], xmm1; ret; 
0x000000001673bb: lddqu xmm1, [rsi]; movdqu [rdi+0xe], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000016734b: lddqu xmm1, [rsi]; movdqu [rdi+0xf], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000013708f: lea eax, [r9+r8+0x2]; pop rbx; ret; 
0x0000000018042f: lea eax, [rax+0x1]; add [rbx+0x148b8104], cl; xchg ecx, eax; sub eax, edx; ret; 
0x000000000fd8cb: lea eax, [rax+rax*8+0x5]; ret; 
0x000000000ca0a6: lea eax, [rax+rax-0x1]; ret; 
0x000000000b9299: lea eax, [rax+rbx*4]; pop rbx; pop rbp; pop r12; ret; 
0x00000000045de1: lea eax, [rax+rcx*4]; mov [rsi+0x10], r8; mov [rsi+0x28], rax; xor eax, eax; ret; 
0x000000000a8474: lea eax, [rax+rdi+0x10]; ret; 
0x000000000a8484: lea eax, [rax+rdi+0x20]; ret; 
0x000000000a8964: lea eax, [rax+rdi+0x30]; ret; 
0x000000000a8454: lea eax, [rax+rdi-0x10]; ret; 
0x000000000d95bb: lea eax, [rax+rdx*8]; ret; 
0x000000000992a7: lea eax, [rax-0x8]; ret; 
0x000000000798e0: lea eax, [rax]; add [rax+0x39], cl; ret; 
0x00000000084442: lea eax, [rax]; add [rax], al; add [rax+0x29], cl; ret far; 
0x0000000010f185: lea eax, [rax]; add [rax], al; syscall; 
0x000000000b8765: lea eax, [rbx+0x1]; pop rbx; imul eax, ecx; ret; 
0x000000000b86cc: lea eax, [rbx+0x1]; pop rbx; ret; 
0x000000000e3de1: lea eax, [rbx+0x2]; pop rbx; pop rbp; pop r12; ret; 
0x000000000e3ce1: lea eax, [rbx+0x8]; pop rbx; pop rbp; pop r12; ret; 
0x00000000137244: lea eax, [rbx+rbp]; pop rbx; pop rbp; ret; 
0x00000000110ef7: lea eax, [rcx+0x1]; jne short 0x0000000000110ecf; mov rax, r8; ret; 
0x00000000137090: lea eax, [rcx+rax+0x2]; pop rbx; ret; 
0x000000000addad: lea eax, [rcx+rsi]; ret; 
0x0000000008471f: lea eax, [rcx-0x1]; ret; 
0x000000000b490c: lea eax, [rdi+0x10]; ret; 
0x000000000b52dc: lea eax, [rdi+0x10]; sub r8, 0x11; lea rdi, [rdi+0x11]; jne 0x00000000000b5ac0; ret; 
0x000000000b4921: lea eax, [rdi+0x11]; ret; 
0x000000000b5301: lea eax, [rdi+0x11]; sub r8, 0x12; lea rdi, [rdi+0x12]; jne 0x00000000000b5ac0; ret; 
0x000000000b493f: lea eax, [rdi+0x12]; ret; 
0x000000000b532f: lea eax, [rdi+0x12]; sub r8, 0x13; lea rdi, [rdi+0x13]; jne 0x00000000000b5ac0; ret; 
0x000000000b495f: lea eax, [rdi+0x13]; ret; 
0x000000000b535f: lea eax, [rdi+0x13]; sub r8, 0x14; lea rdi, [rdi+0x14]; jne 0x00000000000b5ac0; ret; 
0x000000000b4982: lea eax, [rdi+0x14]; ret; 
0x000000000b5392: lea eax, [rdi+0x14]; sub r8, 0x15; lea rdi, [rdi+0x15]; jne 0x00000000000b5ac0; ret; 
0x000000000b49a1: lea eax, [rdi+0x15]; ret; 
0x000000000b53c1: lea eax, [rdi+0x15]; sub r8, 0x16; lea rdi, [rdi+0x16]; jne 0x00000000000b5ac0; ret; 
0x000000000b49c1: lea eax, [rdi+0x16]; ret; 
0x000000000b53f1: lea eax, [rdi+0x16]; sub r8, 0x17; lea rdi, [rdi+0x17]; jne 0x00000000000b5ac0; ret; 
0x000000000b49e1: lea eax, [rdi+0x17]; ret; 
0x000000000b5421: lea eax, [rdi+0x17]; sub r8, 0x18; lea rdi, [rdi+0x18]; jne 0x00000000000b5ac0; ret; 
0x000000000b4a04: lea eax, [rdi+0x18]; ret; 
0x000000000b5454: lea eax, [rdi+0x18]; sub r8, 0x19; lea rdi, [rdi+0x19]; jne 0x00000000000b5ac0; ret; 
0x000000000b4a29: lea eax, [rdi+0x19]; ret; 
0x000000000b5489: lea eax, [rdi+0x19]; sub r8, 0x1a; lea rdi, [rdi+0x1a]; jne 0x00000000000b5ac0; ret; 
0x000000000b47a7: lea eax, [rdi+0x1]; ret; 
0x000000000b50b7: lea eax, [rdi+0x1]; sub r8, 0x2; lea rdi, [rdi+0x2]; jne 0x00000000000b5ac0; ret; 
0x00000000184697: lea eax, [rdi+0x1]; vzeroupper; ret; 
0x000000000b4a47: lea eax, [rdi+0x1a]; ret; 
0x000000000b54b7: lea eax, [rdi+0x1a]; sub r8, 0x1b; lea rdi, [rdi+0x1b]; jne 0x00000000000b5ac0; ret; 
0x000000000b4a67: lea eax, [rdi+0x1b]; ret; 
0x000000000b54e7: lea eax, [rdi+0x1b]; sub r8, 0x1c; lea rdi, [rdi+0x1c]; jne 0x00000000000b5ac0; ret; 
0x000000000b4a83: lea eax, [rdi+0x1c]; ret; 
0x000000000b5513: lea eax, [rdi+0x1c]; sub r8, 0x1d; lea rdi, [rdi+0x1d]; jne 0x00000000000b5ac0; ret; 
0x000000000b4aa3: lea eax, [rdi+0x1d]; ret; 
0x000000000b5543: lea eax, [rdi+0x1d]; sub r8, 0x1e; lea rdi, [rdi+0x1e]; jne 0x00000000000b5ac0; ret; 
0x000000000b4ac3: lea eax, [rdi+0x1e]; ret; 
0x000000000b5573: lea eax, [rdi+0x1e]; sub r8, 0x1f; lea rdi, [rdi+0x1f]; jne 0x00000000000b5ac0; ret; 
0x000000000b4ae3: lea eax, [rdi+0x1f]; ret; 
0x000000000b55a3: lea eax, [rdi+0x1f]; sub r8, 0x20; lea rdi, [rdi+0x20]; jne 0x00000000000b5ac0; ret; 
0x000000000b5953: lea eax, [rdi+0x20]; ret; 
0x000000000b47ba: lea eax, [rdi+0x2]; ret; 
0x000000000b50da: lea eax, [rdi+0x2]; sub r8, 0x3; lea rdi, [rdi+0x3]; jne 0x00000000000b5ac0; ret; 
0x000000001846ab: lea eax, [rdi+0x2]; vzeroupper; ret; 
0x000000000b47c5: lea eax, [rdi+0x3]; ret; 
0x000000000b50f5: lea eax, [rdi+0x3]; sub r8, 0x4; lea rdi, [rdi+0x4]; jne 0x00000000000b5ac0; ret; 
0x000000001846c5: lea eax, [rdi+0x3]; vzeroupper; ret; 
0x000000000b5bc9: lea eax, [rdi+0x40]; ret; 
0x00000000184e39: lea eax, [rdi+0x41]; vzeroupper; ret; 
0x000000000b47d8: lea eax, [rdi+0x4]; ret; 
0x000000000b5118: lea eax, [rdi+0x4]; sub r8, 0x5; lea rdi, [rdi+0x5]; jne 0x00000000000b5ac0; ret; 
0x000000000b47ed: lea eax, [rdi+0x5]; ret; 
0x000000000b513d: lea eax, [rdi+0x5]; sub r8, 0x6; lea rdi, [rdi+0x6]; jne 0x00000000000b5ac0; ret; 
0x000000000b480b: lea eax, [rdi+0x6]; ret; 
0x000000000b515b: lea eax, [rdi+0x6]; sub r8, 0x7; lea rdi, [rdi+0x7]; jne 0x00000000000b5ac0; ret; 
0x000000000b4817: lea eax, [rdi+0x7]; ret; 
0x000000000b5177: lea eax, [rdi+0x7]; sub r8, 0x8; lea rdi, [rdi+0x8]; jne 0x00000000000b5ac0; ret; 
0x00000000184fdc: lea eax, [rdi+0x80]; vzeroupper; ret; 
0x000000000b482a: lea eax, [rdi+0x8]; ret; 
0x000000000b519a: lea eax, [rdi+0x8]; sub r8, 0x9; lea rdi, [rdi+0x9]; jne 0x00000000000b5ac0; ret; 
0x00000000136234: lea eax, [rdi+0x9]; and eax, 0xfffffff8; add eax, 0x10; ret; 
0x000000000b483f: lea eax, [rdi+0x9]; ret; 
0x000000000b51bf: lea eax, [rdi+0x9]; sub r8, 0xa; lea rdi, [rdi+0xa]; jne 0x00000000000b5ac0; ret; 
0x000000000b485d: lea eax, [rdi+0xa]; ret; 
0x000000000b51ed: lea eax, [rdi+0xa]; sub r8, 0xb; lea rdi, [rdi+0xb]; jne 0x00000000000b5ac0; ret; 
0x000000000b487d: lea eax, [rdi+0xb]; ret; 
0x000000000b520d: lea eax, [rdi+0xb]; sub r8, 0xc; lea rdi, [rdi+0xc]; jne 0x00000000000b5ac0; ret; 
0x000000000b489f: lea eax, [rdi+0xc]; ret; 
0x000000000b522f: lea eax, [rdi+0xc]; sub r8, 0xd; lea rdi, [rdi+0xd]; jne 0x00000000000b5ac0; ret; 
0x000000000b48bf: lea eax, [rdi+0xd]; ret; 
0x000000000b525f: lea eax, [rdi+0xd]; sub r8, 0xe; lea rdi, [rdi+0xe]; jne 0x00000000000b5ac0; ret; 
0x000000000b48df: lea eax, [rdi+0xe]; ret; 
0x000000000b528f: lea eax, [rdi+0xe]; sub r8, 0xf; lea rdi, [rdi+0xf]; jne 0x00000000000b5ac0; ret; 
0x000000000b48f9: lea eax, [rdi+0xf]; ret; 
0x000000000b52b9: lea eax, [rdi+0xf]; sub r8, 0x10; lea rdi, [rdi+0x10]; jne 0x00000000000b5ac0; ret; 
0x000000000a84a9: lea eax, [rdi+rax+0x10]; ret; 
0x00000000186877: lea eax, [rdi+rax+0x20]; cmp esi, [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x00000000181d37: lea eax, [rdi+rax+0x20]; cmp sil, [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x000000000a84b9: lea eax, [rdi+rax+0x20]; ret; 
0x000000001366dc: lea eax, [rdi+rax+0x2]; cmp rdx, rax; sbb eax, eax; ret; 
0x000000000a83b3: lea eax, [rdi+rax+0x30]; ret; 
0x00000000186897: lea eax, [rdi+rax+0x40]; cmp esi, [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x00000000181d57: lea eax, [rdi+rax+0x40]; cmp sil, [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x000000001868d5: lea eax, [rdi+rax+0x60]; cmp esi, [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x00000000181d95: lea eax, [rdi+rax+0x60]; cmp sil, [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x000000000a4e66: lea eax, [rdi+rax-0x1]; mov [rdi], dx; movzx edx, byte ptr [rsp-0x6]; mov [rdi+0x2], dl; ret; 
0x000000000a4e95: lea eax, [rdi+rax-0x1]; mov [rdi], edx; movzx edx, byte ptr [rsp-0xc]; mov [rdi+0x4], dl; ret; 
0x000000000a4ead: lea eax, [rdi+rax-0x1]; mov [rdi], edx; movzx edx, word ptr [rsp-0x14]; mov [rdi+0x4], dx; ret; 
0x000000000a4e39: lea eax, [rdi+rax-0x1]; ret; 
0x000000001820e5: lea eax, [rdi+rax-0x20]; vzeroupper; ret; 
0x000000000ad7c0: lea eax, [rdi+rax]; cmp [rax], sil; cmovne rax, rdx; ret; 
0x0000000018673d: lea eax, [rdi+rax]; cmp esi, [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x00000000181bfd: lea eax, [rdi+rax]; cmp sil, [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x000000000ad9eb: lea eax, [rdi+rax]; ret; 
0x00000000184d93: lea eax, [rdi+rax]; vzeroupper; ret; 
0x000000001846dd: lea eax, [rdi+rdx]; vzeroupper; ret; 
0x000000001375a7: lea eax, [rdi+rsi+0x8]; mov rax, r8; ret; 
0x000000000adca9: lea eax, [rdi+rsi]; ret; 
0x000000000cb4ee: lea eax, [rdi-0x10]; ret; 
0x000000000cb671: lea eax, [rdi-0x4]; ret; 
0x000000000cb661: lea eax, [rdi-0x8]; ret; 
0x000000000cb651: lea eax, [rdi-0xc]; ret; 
0x000000000b4793: lea eax, [rdi]; ret; 
0x000000000b5093: lea eax, [rdi]; sub r8, 0x1; lea rdi, [rdi+0x1]; jne 0x00000000000b5ac0; ret; 
0x00000000184615: lea eax, [rdi]; vzeroupper; ret; 
0x00000000174577: lea eax, [rdx+0x1]; ret; 
0x0000000017458d: lea eax, [rdx+0x2]; ret; 
0x000000001745a5: lea eax, [rdx+0x3]; ret; 
0x000000001745bb: lea eax, [rdx+0x4]; ret; 
0x000000001745cd: lea eax, [rdx+0x5]; ret; 
0x000000001745eb: lea eax, [rdx+0x6]; ret; 
0x000000001769b2: lea eax, [rdx+0x7]; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x000000001744f7: lea eax, [rdx+0x7]; ret; 
0x000000001745fd: lea eax, [rdx+0x8]; ret; 
0x0000000017461d: lea eax, [rdx+0x9]; ret; 
0x0000000017463d: lea eax, [rdx+0xa]; ret; 
0x0000000017465d: lea eax, [rdx+0xb]; ret; 
0x0000000017467f: lea eax, [rdx+0xc]; ret; 
0x0000000017469f: lea eax, [rdx+0xd]; ret; 
0x00000000176907: lea eax, [rdx+0xe]; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x000000001746bf: lea eax, [rdx+0xe]; ret; 
0x0000000017454f: lea eax, [rdx+0xf]; ret; 
0x00000000143f5d: lea eax, [rdx+rax]; pop rbx; pop rbp; mov eax, r8d; ret; 
0x000000000feed1: lea eax, [rdx+rbp]; mov rdi, [rbp-0x1b0]; mov rdx, [r12]; mov rax, [rbp-0x1e0]; call rax; 
0x0000000008470d: lea eax, [rdx+rdi]; ret; 
0x0000000008470e: lea eax, [rdx+rdi]; ret; 
0x000000000b8553: lea eax, [rdx+rdx]; pop rbx; and eax, 0x7ff80000; ret; 
0x0000000009931a: lea eax, [rdx-0x10]; ret; 
0x00000000042610: lea eax, [rdx-0x1]; mov [rip+0x1a0b8f], eax; mov eax, edx; ret; 
0x00000000174565: lea eax, [rdx]; ret; 
0x000000000a4e1e: lea eax, [rip+0x103e00]; mov edx, eax; movsxd rdx, [r8+rdx*4]; add rdx, r8; notrack jmp rdx; 
0x000000000b91c8: lea eax, [rip+0x10e62]; lea rdx, [rip+0xd2eab]; cmovne rax, rdx; ret; 
0x000000000ba408: lea eax, [rip+0x114a2]; lea rdx, [rip+0x1127b]; cmovne rax, rdx; ret; 
0x0000000009c1b4: lea eax, [rip+0x115b6]; lea rdx, [rip+0xee42f]; cmovne rax, rdx; ret; 
0x000000000cc111: lea eax, [rip+0x11aee9]; add rsp, 0x8; ret; 
0x000000000b8cea: lea eax, [rip+0x124c0]; cmovne rax, rdx; ret; 
0x000000000784a4: lea eax, [rip+0x12ee96]; movsxd rax, [rax+rdx*4]; lea rdx, [rip-0x3e9]; add rax, rdx; jmp rax; 
0x000000000a50df: lea eax, [rip+0x13c9db]; mov rax, [rax+rdi*8]; ret; 
0x000000000a50ff: lea eax, [rip+0x13cbdb]; mov rax, [rax+rdi*8]; ret; 
0x0000000009314a: lea eax, [rip+0x150a50]; add rsp, 0x10; pop rbp; ret; 
0x00000000090bc0: lea eax, [rip+0x155c0a]; pop rbx; mov dword ptr [rip+0x155aef], 0x1; ret; 
0x0000000009d4a3: lea eax, [rip+0x15857]; lea rdx, [rip+0xd5a10]; cmovne rax, rdx; ret; 
0x0000000007cd32: lea eax, [rip+0x164948]; mov rax, [rax+rdi*8]; ret; 
0x0000000009c283: lea eax, [rip+0x16987]; lea rdx, [rip+0xd2900]; cmovne rax, rdx; ret; 
0x00000000037381: lea eax, [rip+0x176e5b]; ret; 
0x00000000037365: lea eax, [rip+0x176e77]; cmp [rdx+0x38], edi; jbe short 0x0000000000037387; mov rax, [rdx+rdi*8+0x40]; ret; 
0x00000000142020: lea eax, [rip+0x17a]; mov esi, 0x4; mov rdi, rbp; lea r9, [rsp+0x20]; call qword ptr [rax]; 
0x00000000028de5: lea eax, [rip+0x186cbd]; ret; 
0x00000000028dd5: lea eax, [rip+0x18932d]; ret; 
0x00000000050b2d: lea eax, [rip+0x1959cd]; mov byte ptr [r8+rax], 0x0; mov rax, r8; ret; 
0x0000000009c153: lea eax, [rip+0x19b27]; lea rdx, [rip+0x12110]; cmovne rax, rdx; ret; 
0x00000000046135: lea eax, [rip+0x1a023b]; add rsp, 0x8; ret; 
0x0000000009d07a: lea eax, [rip+0x1a660]; cmove rax, rdx; ret; 
0x0000000009d786: lea eax, [rip+0x1a714]; cmove rax, rdx; ret; 
0x0000000009d406: lea eax, [rip+0x1aa74]; cmove rax, rdx; ret; 
0x0000000009d2a6: lea eax, [rip+0x1abf4]; cmove rax, rdx; ret; 
0x000000000358c8: lea eax, [rip+0x1acff2]; mov rax, [rax+rbx*8]; test rax, rax; je short 0x00000000000358d9; call rax; 
0x00000000037313: lea eax, [rip+0x1ae547]; ret; 
0x0000000009d31a: lea eax, [rip+0x1aed0]; cmovne rax, rdx; ret; 
0x0000000009c86a: lea eax, [rip+0x1b470]; cmovne rax, rdx; ret; 
0x0000000009c73a: lea eax, [rip+0x1b4f0]; cmovne rax, rdx; ret; 
0x0000000009c2ca: lea eax, [rip+0x1b8b0]; cmovne rax, rdx; ret; 
0x00000000127702: lea eax, [rip+0x381e8]; lea rdx, [rip+0x3d771]; cmovne rax, rdx; ret; 
0x00000000127562: lea eax, [rip+0x383a8]; lea rdx, [rip+0x3d931]; cmovne rax, rdx; ret; 
0x00000000127632: lea eax, [rip+0x3acb8]; lea rdx, [rip+0x40351]; cmovne rax, rdx; ret; 
0x000000001276de: lea eax, [rip+0x5da6c]; cmove rax, rdx; ret; 
0x0000000012760e: lea eax, [rip+0x5db5c]; cmove rax, rdx; ret; 
0x0000000012753e: lea eax, [rip+0x5dc2c]; cmove rax, rdx; ret; 
0x000000001277b1: lea eax, [rip+0x5de39]; cmove rax, rdx; ret; 
0x00000000128b6e: lea eax, [rip+0x6186c]; cmove r8, rax; mov rax, r8; ret; 
0x0000000002849c: lea eax, [rip+0x61ede]; xor rax, fs:[0x30]; rol rax, 0x11; mov [rip+0x1be192], rax; ret; 
0x00000000127737: lea eax, [rip+0x62793]; cmove rax, rdx; ret; 
0x00000000127667: lea eax, [rip+0x62883]; cmove rax, rdx; ret; 
0x00000000127597: lea eax, [rip+0x62953]; cmove rax, rdx; ret; 
0x000000001277ed: lea eax, [rip+0x62c8d]; lea rdx, [rip+0x62c16]; cmove rax, rdx; ret; 
0x00000000142f26: lea eax, [rip+0x698d4]; mov ecx, eax; movsxd rdx, [r8+rcx*4]; add rdx, r8; notrack jmp rdx; 
0x0000000009d503: lea eax, [rip+0x7c77]; lea rdx, [rip+0xd71c0]; cmovne rax, rdx; ret; 
0x0000000009c6b3: lea eax, [rip+0x8b37]; lea rdx, [rip+0xd3c80]; cmovne rax, rdx; ret; 
0x0000000009c5e3: lea eax, [rip+0x8b47]; lea rdx, [rip+0x138a0]; cmovne rax, rdx; ret; 
0x0000000009c203: lea eax, [rip+0x9047]; lea rdx, [rip+0xc0d00]; cmovne rax, rdx; ret; 
0x0000000011ae93: lea eax, [rip+0x91667]; mov eax, [rax+rdi*4]; ret; 
0x0000000015633e: lea eax, [rip+0x92d7c]; mov edx, 0x0; cmovne rax, rdx; add rsp, 0x8; ret; 
0x0000000014cea5: lea eax, [rip+0x9c055]; mov fs:[rbx], rax; pop rbx; mov dword ptr [rip+0x9c026], 0x2; ret; 
0x0000000009c661: lea eax, [rip+0xa2e9]; lea rdx, [rip+0xc1b12]; cmovne rax, rdx; ret; 
0x000000001414c3: lea eax, [rip+0xa77d7]; ret; 
0x00000000141497: lea eax, [rip+0xa7803]; add rsp, 0x8; ret; 
0x0000000009d60c: lea eax, [rip+0xb8ce]; lea rdx, [rip+0xccec7]; cmovne rax, rdx; ret; 
0x0000000009d1b8: lea eax, [rip+0xb902]; lea rdx, [rip+0xed74b]; cmovne rax, rdx; ret; 
0x0000000009d56c: lea eax, [rip+0xb94e]; lea rdx, [rip+0xccf47]; cmovne rax, rdx; ret; 
0x000000001420dc: lea eax, [rip+0xbe]; xor ecx, ecx; lea rdx, [rip+0xd805]; lea r9, [rsp+0x20]; call qword ptr [rax]; 
0x0000000009d732: lea eax, [rip+0xc21e8]; lea rdx, [rip+0xc7771]; cmovne rax, rdx; ret; 
0x0000000009d3b2: lea eax, [rip+0xc2548]; lea rdx, [rip+0xc7ad1]; cmovne rax, rdx; ret; 
0x0000000009d252: lea eax, [rip+0xc50a8]; lea rdx, [rip+0xca741]; cmovne rax, rdx; ret; 
0x000000000b91e9: lea eax, [rip+0xcc521]; and ch, 0x1; je short 0x00000000000b91b5; ret; 
0x000000000b925e: lea eax, [rip+0xd118c]; cmove r8, rax; mov rax, r8; ret; 
0x00000000114123: lea eax, [rip+0xd3797]; add rsp, 0x18; ret; 
0x000000001140d3: lea eax, [rip+0xd3827]; pop r12; pop r13; ret; 
0x00000000113bcb: lea eax, [rip+0xd3c9f]; add rsp, 0x8; ret; 
0x00000000113b70: lea eax, [rip+0xd3d1a]; pop rbp; pop r12; pop r13; ret; 
0x00000000110b0c: lea eax, [rip+0xd6b66]; add rsp, 0x8; ret; 
0x0000000009d65c: lea eax, [rip+0xdace]; lea rdx, [rip+0xcefd7]; cmovne rax, rdx; ret; 
0x0000000009d5bc: lea eax, [rip+0xdb4e]; lea rdx, [rip+0xcf057]; cmovne rax, rdx; ret; 
0x0000000009c219: lea eax, [rip+0xe1441]; test dh, 0x1; je short 0x000000000009c1ef; ret; 
0x0000000009d1d9: lea eax, [rip+0xe1581]; and ch, 0x1; je short 0x000000000009d1a5; ret; 
0x00000000141e26: lea eax, [rip+0xe2d4]; push qword ptr [rip+0x74d26]; push qword ptr [rip+0x74d18]; lea r9, [rsp+0x2c]; call qword ptr [rax]; 
0x0000000009c169: lea eax, [rip+0xe64c1]; test dh, 0x1; je short 0x000000000009c13f; ret; 
0x0000000009c5f9: lea eax, [rip+0xe66a1]; test dh, 0x1; je short 0x000000000009c5cf; ret; 
0x0000000009d4b9: lea eax, [rip+0xe6ee1]; test dh, 0x1; je short 0x000000000009d48f; ret; 
0x0000000009d519: lea eax, [rip+0xe7231]; test dh, 0x1; je short 0x000000000009d4ef; ret; 
0x0000000009c6c9: lea eax, [rip+0xe7371]; test dh, 0x1; je short 0x000000000009c69f; ret; 
0x0000000009c299: lea eax, [rip+0xe7411]; test dh, 0x1; je short 0x000000000009c26f; ret; 
0x0000000009d70e: lea eax, [rip+0xe7a6c]; cmove rax, rdx; ret; 
0x0000000009d38e: lea eax, [rip+0xe7dcc]; cmove rax, rdx; ret; 
0x0000000009d22e: lea eax, [rip+0xe7f4c]; cmove rax, rdx; ret; 
0x0000000009d301: lea eax, [rip+0xe82f9]; cmove rax, rdx; ret; 
0x0000000009d767: lea eax, [rip+0xec793]; cmove rax, rdx; ret; 
0x0000000009d3e7: lea eax, [rip+0xecaf3]; cmove rax, rdx; ret; 
0x0000000009d287: lea eax, [rip+0xecc73]; cmove rax, rdx; ret; 
0x0000000009d33d: lea eax, [rip+0xed14d]; lea rdx, [rip+0xed0d6]; cmove rax, rdx; ret; 
0x000000000ccf99: lea eax, [rip-0x10f]; add rsp, 0x58; ret; 
0x000000000cce89: lea eax, [rip-0x10f]; ret; 
0x000000000ccfa9: lea eax, [rip-0x11f]; ret; 
0x0000000014b7ef: lea eax, [rip-0x5d05]; lea rdx, [rip-0x5cec]; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x000000001277ca: lea eax, [rip-0x6f5f0]; cmovne rax, rdx; ret; 
0x000000001275b6: lea eax, [rip-0x6f72c]; cmove rax, rdx; ret; 
0x00000000127686: lea eax, [rip-0x6f7fc]; cmove rax, rdx; ret; 
0x00000000127756: lea eax, [rip-0x6f8ec]; cmove rax, rdx; ret; 
0x0000000014c044: lea eax, [rip-0x929a]; lea rdx, [rip+0x389f]; call qword ptr [rax]; 
0x00000000107daa: lea eax, [rip-0xc0]; cmove rax, rdx; ret; 
0x000000000cce79: lea eax, [rip-0xff]; add rsp, 0x58; ret; 
0x000000000de7b7: lea eax, [rsi+0x10]; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x0000000011d2d5: lea eax, [rsi+rax*4]; mov eax, [rax+rdx]; shr eax, cl; and eax, 0x1; ret; 
0x00000000119ab1: lea eax, [rsp+0x20]; mov [rsp+0x10], rax; mov eax, 0x9d; syscall; 
0x000000000cce2f: lea eax, [rsp+0x40]; call qword ptr [rax+0x270]; 
0x00000000033d47: lea eax, [rsp+0xa0]; call r15; 
0x00000000149e22: lea ebp, [rax-0x1]; mov rax, [rbx+0x70]; mov [rbx+0x48], ebp; bswap ebp; call qword ptr [rax+0x18]; 
0x0000000014e733: lea ebp, [rbp+0x10]; mov dword ptr [rbp+0x10], 0x0; mov rdi, r13; call qword ptr [rax+0x28]; 
0x0000000014eabd: lea ebp, [rbx+0x10]; xor esi, esi; mov dword ptr [rbx+0x10], 0x1; mov rdi, r13; call qword ptr [rax+0x28]; 
0x000000001100b7: lea ebp, [rip-0x2708fff3]; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001277ef: lea ebp, [rsi+rax]; add [rax-0x73], cl; adc eax, 0x62c16; cmove rax, rdx; ret; 
0x0000000014ae7b: lea ebp, [rsp+0x138]; mov rsi, rbp; mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x10]; 
0x000000001417b5: lea ebp, [rsp+0x68]; mov rsi, r13; call qword ptr [rax+0x10]; 
0x000000001472cd: lea ebp, [rsp+0x68]; mov rsi, rbp; mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x10]; 
0x000000001095b7: lea ebx, [rax-0x2708fff3]; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000005ad96: lea ebx, [rdi+rdi*8-0x1]; jmp qword ptr [rsi+0xf]; 
0x0000000003f2de: lea ebx, [rip+0x162cf4]; movzx r10d, r10b; movsxd r10, [r11+r10*4]; add r10, r11; notrack jmp r10; 
0x0000000007a68e: lea ebx, [rip+0x18c]; add rcx, rbx; mov rbx, rdx; xor edx, edx; jmp rcx; 
0x00000000189094: lea ebx, [rip+0x2e5f6]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018901a: lea ebx, [rip+0x2e670]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000188f8b: lea ebx, [rip+0x2e6ff]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000188d80: lea ebx, [rip+0x2e90a]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000188c4e: lea ebx, [rip+0x2ea3c]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000188b88: lea ebx, [rip+0x2eb02]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000188b0a: lea ebx, [rip+0x2eb80]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000188a75: lea ebx, [rip+0x2ec15]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000188878: lea ebx, [rip+0x2ee12]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000188746: lea ebx, [rip+0x2ef44]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000188649: lea ebx, [rip+0x2f041]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000187a64: lea ebx, [rip+0x2fae6]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x000000001879ea: lea ebx, [rip+0x2fb60]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018795b: lea ebx, [rip+0x2fbef]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000187750: lea ebx, [rip+0x2fdfa]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018761e: lea ebx, [rip+0x2ff2c]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000187558: lea ebx, [rip+0x2fff2]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x000000001874da: lea ebx, [rip+0x30070]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000187445: lea ebx, [rip+0x30105]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000187248: lea ebx, [rip+0x30302]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000187116: lea ebx, [rip+0x30434]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018700b: lea ebx, [rip+0x3053f]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x000000001695a2: lea ebx, [rip+0x4eaa8]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169244: lea ebx, [rip+0x4ee06]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001693ef: lea ebx, [rip+0x4ee9b]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001690c4: lea ebx, [rip+0x4ef86]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169187: lea ebx, [rip+0x4f103]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168f44: lea ebx, [rip+0x4f106]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169007: lea ebx, [rip+0x4f283]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168dc4: lea ebx, [rip+0x4f286]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168e87: lea ebx, [rip+0x4f403]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168c44: lea ebx, [rip+0x4f406]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168d08: lea ebx, [rip+0x4f582]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168ac4: lea ebx, [rip+0x4f586]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168b87: lea ebx, [rip+0x4f703]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168944: lea ebx, [rip+0x4f706]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168a07: lea ebx, [rip+0x4f883]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001687c4: lea ebx, [rip+0x4f886]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168887: lea ebx, [rip+0x4fa03]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168644: lea ebx, [rip+0x4fa06]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168707: lea ebx, [rip+0x4fb83]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001684c4: lea ebx, [rip+0x4fb86]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168587: lea ebx, [rip+0x4fd03]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168344: lea ebx, [rip+0x4fd06]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168407: lea ebx, [rip+0x4fe83]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001681c4: lea ebx, [rip+0x4fe86]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168287: lea ebx, [rip+0x50003]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168044: lea ebx, [rip+0x50006]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168107: lea ebx, [rip+0x50183]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000167ec4: lea ebx, [rip+0x50186]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000167f87: lea ebx, [rip+0x50303]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000167d44: lea ebx, [rip+0x50306]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000167bcb: lea ebx, [rip+0x5047f]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000167e07: lea ebx, [rip+0x50483]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000167c87: lea ebx, [rip+0x50603]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001679c0: lea ebx, [rip+0x5068a]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000167b4a: lea ebx, [rip+0x50740]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001679e3: lea ebx, [rip+0x508a7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000167aa0: lea ebx, [rip+0x50a6a]; sub rdx, 0x80; movsxd r9, [r11+r9*4]; add r9, r11; notrack jmp r9; 
0x00000000167a39: lea ebx, [rip+0x50a91]; sub rdx, 0x80; movsxd r9, [r11+r9*4]; add r9, r11; notrack jmp r9; 
0x00000000166a6e: lea ebx, [rip+0x510dc]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166744: lea ebx, [rip+0x51406]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001668db: lea ebx, [rip+0x514af]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001665c4: lea ebx, [rip+0x51586]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166687: lea ebx, [rip+0x51703]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166444: lea ebx, [rip+0x51706]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166507: lea ebx, [rip+0x51883]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001662c4: lea ebx, [rip+0x51886]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166387: lea ebx, [rip+0x51a03]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166144: lea ebx, [rip+0x51a06]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166208: lea ebx, [rip+0x51b82]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165fc4: lea ebx, [rip+0x51b86]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166087: lea ebx, [rip+0x51d03]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165e44: lea ebx, [rip+0x51d06]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165f07: lea ebx, [rip+0x51e83]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165cc4: lea ebx, [rip+0x51e86]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165d87: lea ebx, [rip+0x52003]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165b44: lea ebx, [rip+0x52006]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165c07: lea ebx, [rip+0x52183]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001659c4: lea ebx, [rip+0x52186]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165a87: lea ebx, [rip+0x52303]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165844: lea ebx, [rip+0x52306]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165907: lea ebx, [rip+0x52483]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001656c4: lea ebx, [rip+0x52486]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165787: lea ebx, [rip+0x52603]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165544: lea ebx, [rip+0x52606]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165607: lea ebx, [rip+0x52783]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001653c4: lea ebx, [rip+0x52786]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165487: lea ebx, [rip+0x52903]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165244: lea ebx, [rip+0x52906]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001650cb: lea ebx, [rip+0x52a7f]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165307: lea ebx, [rip+0x52a83]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000164e65: lea ebx, [rip+0x52b25]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000164da8: lea ebx, [rip+0x52be2]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165187: lea ebx, [rip+0x52c03]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000164ee0: lea ebx, [rip+0x52c6a]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000164cbd: lea ebx, [rip+0x52ccd]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016504a: lea ebx, [rip+0x52d40]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000164bf2: lea ebx, [rip+0x52d98]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000164ecc: lea ebx, [rip+0x52ebe]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000164fa0: lea ebx, [rip+0x5306a]; sub rdx, 0x80; movsxd r9, [r11+r9*4]; add r9, r11; notrack jmp r9; 
0x00000000164f3e: lea ebx, [rip+0x5308c]; sub rdx, 0x80; movsxd r9, [r11+r9*4]; add r9, r11; notrack jmp r9; 
0x00000000163bd3: lea ebx, [rip+0x53db7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000163b35: lea ebx, [rip+0x53e55]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000163a83: lea ebx, [rip+0x53f07]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001639e5: lea ebx, [rip+0x53fa5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000163933: lea ebx, [rip+0x54057]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000163895: lea ebx, [rip+0x540f5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001637e3: lea ebx, [rip+0x541a7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000163745: lea ebx, [rip+0x54245]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000163693: lea ebx, [rip+0x542f7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001635f5: lea ebx, [rip+0x54395]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000163543: lea ebx, [rip+0x54447]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001634a5: lea ebx, [rip+0x544e5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001633f3: lea ebx, [rip+0x54597]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000163355: lea ebx, [rip+0x54635]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001632a3: lea ebx, [rip+0x546e7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000163208: lea ebx, [rip+0x54782]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000163153: lea ebx, [rip+0x54837]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001630b5: lea ebx, [rip+0x548d5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000163003: lea ebx, [rip+0x54987]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162f65: lea ebx, [rip+0x54a25]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162eb3: lea ebx, [rip+0x54ad7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162e15: lea ebx, [rip+0x54b75]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162d63: lea ebx, [rip+0x54c27]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162cc5: lea ebx, [rip+0x54cc5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162c13: lea ebx, [rip+0x54d77]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162b75: lea ebx, [rip+0x54e15]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162ac3: lea ebx, [rip+0x54ec7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162a25: lea ebx, [rip+0x54f65]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162973: lea ebx, [rip+0x55017]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001628d5: lea ebx, [rip+0x550b5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162827: lea ebx, [rip+0x55163]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162736: lea ebx, [rip+0x55254]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162677: lea ebx, [rip+0x55313]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016260d: lea ebx, [rip+0x5537d]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016250e: lea ebx, [rip+0x5547c]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001622d4: lea ebx, [rip+0x554f6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162449: lea ebx, [rip+0x55541]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001621fa: lea ebx, [rip+0x555d0]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001623d6: lea ebx, [rip+0x55734]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x0000000016237c: lea ebx, [rip+0x5574e]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x000000001611f3: lea ebx, [rip+0x565d7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000161155: lea ebx, [rip+0x56675]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001610a3: lea ebx, [rip+0x56727]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000161005: lea ebx, [rip+0x567c5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160f53: lea ebx, [rip+0x56877]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160eb5: lea ebx, [rip+0x56915]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160e03: lea ebx, [rip+0x569c7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160d65: lea ebx, [rip+0x56a65]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160cb3: lea ebx, [rip+0x56b17]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160c15: lea ebx, [rip+0x56bb5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160b63: lea ebx, [rip+0x56c67]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160ac5: lea ebx, [rip+0x56d05]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160a13: lea ebx, [rip+0x56db7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160975: lea ebx, [rip+0x56e55]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001608c3: lea ebx, [rip+0x56f07]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160828: lea ebx, [rip+0x56fa2]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160773: lea ebx, [rip+0x57057]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001606d5: lea ebx, [rip+0x570f5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160623: lea ebx, [rip+0x571a7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160585: lea ebx, [rip+0x57245]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001604d3: lea ebx, [rip+0x572f7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160435: lea ebx, [rip+0x57395]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160383: lea ebx, [rip+0x57447]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001602e5: lea ebx, [rip+0x574e5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160233: lea ebx, [rip+0x57597]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160195: lea ebx, [rip+0x57635]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001600e3: lea ebx, [rip+0x576e7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160045: lea ebx, [rip+0x57785]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000015ff93: lea ebx, [rip+0x57837]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000015fef5: lea ebx, [rip+0x578d5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000015fe47: lea ebx, [rip+0x57983]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000015fd56: lea ebx, [rip+0x57a74]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000015fc97: lea ebx, [rip+0x57b33]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000015fc2d: lea ebx, [rip+0x57b9d]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000015fb2e: lea ebx, [rip+0x57c9c]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000015fa69: lea ebx, [rip+0x57d61]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000015f9f6: lea ebx, [rip+0x57f54]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x0000000015f995: lea ebx, [rip+0x57f75]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x000000000b76ba: lea ebx, [rip+0xf1c44]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6f36: lea ebx, [rip+0xf23c8]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6f0d: lea ebx, [rip+0xf23f1]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6eed: lea ebx, [rip+0xf2411]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6ec4: lea ebx, [rip+0xf243a]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6e95: lea ebx, [rip+0xf2469]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6e76: lea ebx, [rip+0xf2488]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6df1: lea ebx, [rip+0xf248d]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6dd6: lea ebx, [rip+0xf24a8]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6e54: lea ebx, [rip+0xf24aa]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6e24: lea ebx, [rip+0xf24da]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6da1: lea ebx, [rip+0xf24dd]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6d75: lea ebx, [rip+0xf2509]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6d5f: lea ebx, [rip+0xf251f]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6d3d: lea ebx, [rip+0xf2541]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6d18: lea ebx, [rip+0xf2566]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6cfb: lea ebx, [rip+0xf2583]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6c84: lea ebx, [rip+0xf25fa]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6446: lea ebx, [rip+0xf2db8]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6411: lea ebx, [rip+0xf2ded]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b63e5: lea ebx, [rip+0xf2e19]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b63cf: lea ebx, [rip+0xf2e2f]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b63ad: lea ebx, [rip+0xf2e51]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6388: lea ebx, [rip+0xf2e76]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b636b: lea ebx, [rip+0xf2e93]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6313: lea ebx, [rip+0xf2eeb]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b5c5a: lea ebx, [rip+0xf34d0]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b5b61: lea ebx, [rip+0xf3659]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b5b4b: lea ebx, [rip+0xf366f]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b5b2b: lea ebx, [rip+0xf368f]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b5076: lea ebx, [rip+0xf40b4]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b504d: lea ebx, [rip+0xf40dd]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b502d: lea ebx, [rip+0xf40fd]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b5004: lea ebx, [rip+0xf4126]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b4fd5: lea ebx, [rip+0xf4155]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b4fb6: lea ebx, [rip+0xf4174]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b4f31: lea ebx, [rip+0xf4179]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b4f94: lea ebx, [rip+0xf4196]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b4f64: lea ebx, [rip+0xf41c6]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b4e4f: lea ebx, [rip+0xf425b]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b4e21: lea ebx, [rip+0xf4289]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b4df8: lea ebx, [rip+0xf42b2]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b4776: lea ebx, [rip+0xf48a8]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b4741: lea ebx, [rip+0xf48dd]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b4715: lea ebx, [rip+0xf4909]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b46ff: lea ebx, [rip+0xf491f]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b46dd: lea ebx, [rip+0xf4941]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b46b8: lea ebx, [rip+0xf4966]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b469b: lea ebx, [rip+0xf4983]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b4643: lea ebx, [rip+0xf49db]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b440a: lea ebx, [rip+0xf4b40]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b4311: lea ebx, [rip+0xf4cc9]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b42fb: lea ebx, [rip+0xf4cdf]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b42db: lea ebx, [rip+0xf4cff]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b3996: lea ebx, [rip+0xf55b4]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b396d: lea ebx, [rip+0xf55dd]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b394d: lea ebx, [rip+0xf55fd]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b3924: lea ebx, [rip+0xf5626]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b38f5: lea ebx, [rip+0xf5655]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b38d6: lea ebx, [rip+0xf5674]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b3851: lea ebx, [rip+0xf5679]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b38b4: lea ebx, [rip+0xf5696]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b3884: lea ebx, [rip+0xf56c6]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b377f: lea ebx, [rip+0xf574b]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b3751: lea ebx, [rip+0xf5779]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b3728: lea ebx, [rip+0xf57a2]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b3136: lea ebx, [rip+0xf5d0c]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b3101: lea ebx, [rip+0xf5d41]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b30d5: lea ebx, [rip+0xf5d6d]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b30bf: lea ebx, [rip+0xf5d83]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b309d: lea ebx, [rip+0xf5da5]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b3078: lea ebx, [rip+0xf5dca]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b305b: lea ebx, [rip+0xf5de7]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b3003: lea ebx, [rip+0xf5e3f]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000076282: lea ebx, [rip-0x14a0]; add rsi, rbx; mov rbx, rdi; jmp rsi; 
0x0000000007bdc8: lea ebx, [rip-0x15ae]; add rcx, rbx; mov rbx, rsi; jmp rcx; 
0x000000000755ac: lea ebx, [rip-0x7ca]; add rsi, rbx; mov rbx, rdi; jmp rsi; 
0x0000000007b0a0: lea ebx, [rip-0x886]; add rcx, rbx; mov rbx, rsi; jmp rcx; 
0x0000000007b0f2: lea ebx, [rip-0x8d8]; add rcx, rbx; mov rbx, rsi; jmp rcx; 
0x0000000007b136: lea ebx, [rip-0x91c]; add rcx, rbx; mov rbx, rsi; jmp rcx; 
0x00000000075765: lea ebx, [rip-0x983]; add rsi, rbx; mov rbx, rdi; jmp rsi; 
0x0000000007b1c4: lea ebx, [rip-0x9aa]; add rcx, rbx; mov rbx, rsi; mov r9d, 0x1; jmp rcx; 
0x000000000757f5: lea ebx, [rip-0xa13]; add rsi, rbx; mov rbx, rdi; jmp rsi; 
0x0000000007b25e: lea ebx, [rip-0xa44]; add rcx, rbx; mov rbx, rdx; mov edx, 0x1; jmp rcx; 
0x000000000758ed: lea ebx, [rip-0xb0b]; add rsi, rbx; mov rbx, rdx; mov edx, 0x1; jmp rsi; 
0x0000000007b3b9: lea ebx, [rip-0xb9f]; add rcx, rbx; mov rbx, [rsp+0x68]; jmp rcx; 
0x0000000007598d: lea ebx, [rip-0xbab]; add rsi, rbx; mov rbx, rdi; jmp rsi; 
0x0000000007b414: lea ebx, [rip-0xbfa]; add rcx, rbx; mov rbx, rsi; jmp rcx; 
0x0000000007b460: lea ebx, [rip-0xc46]; add rcx, rbx; mov rbx, rsi; jmp rcx; 
0x00000000075a8b: lea ebx, [rip-0xca9]; add rsi, rbx; mov rbx, [rsp+0x80]; jmp rsi; 
0x0000000007b4d8: lea ebx, [rip-0xcbe]; add rcx, rbx; mov rbx, rsi; jmp rcx; 
0x00000000075ae5: lea ebx, [rip-0xd03]; add rsi, rbx; mov rbx, rdi; jmp rsi; 
0x00000000075b31: lea ebx, [rip-0xd4f]; add rsi, rbx; mov rbx, rdi; mov r13d, 0x1; jmp rsi; 
0x0000000008e588: lea ebx, [rsi+0x1]; mov rdi, r15; movzx esi, byte ptr [rsi]; call qword ptr [rax+0x18]; 
0x0000000008e5fb: lea ebx, [rsi+0x1]; movzx esi, byte ptr [rsi]; call qword ptr [rax+0x18]; 
0x000000000fd1b7: lea ebx, [rsi+rcx]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001191b7: lea ebx, [rsp+rcx+0x64d8f700]; mov [rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000095e3a: lea ecx, [r8+0x280]; shr ecx, 0x3; rep stosq [rdi]; pop rbp; ret; 
0x000000000b94a2: lea ecx, [rax+0x1]; mov rdi, [r12]; lea r9, [rsp+0x28]; call rbx; 
0x00000000095e3b: lea ecx, [rax+0x280]; shr ecx, 0x3; rep stosq [rdi]; pop rbp; ret; 
0x000000000b960c: lea ecx, [rax+0x4]; lea r9, [rsp+0x18]; call rbx; 
0x000000000b9a2e: lea ecx, [rax+0x4]; lea r9, [rsp+0x20]; call rbx; 
0x0000000011a058: lea ecx, [rax+rax]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010b01a: lea ecx, [rbp+0x28]; mov edx, 0x1; call qword ptr [rbp+0x40]; 
0x0000000010b37a: lea ecx, [rbp+0x28]; mov edx, 0x2; call qword ptr [rbp+0x40]; 
0x0000000010b2fa: lea ecx, [rbp+0x28]; mov edx, 0x5; call qword ptr [rbp+0x40]; 
0x0000000011a0b7: lea ecx, [rbp-0x2708fff4]; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000087135: lea ecx, [rbp-0x40]; xor r8d, r8d; mov rcx, r14; mov rdi, r15; call r12; 
0x0000000010abff: lea ecx, [rbx+0x28]; mov rsi, r14; mov edx, [rdx+rax]; call qword ptr [rbx+0x40]; 
0x0000000007d4e5: lea ecx, [rbx+0x40]; lea rdx, [rbx+0x34]; mov esi, 0x1; mov rdi, rbx; call rax; 
0x0000000007dbaa: lea ecx, [rbx+0x40]; mov esi, 0x1; mov rdi, rbx; call r8; 
0x0000000015f9a0: lea ecx, [rbx+rcx]; notrack jmp r9; 
0x000000000b300e: lea ecx, [rbx+rcx]; notrack jmp rcx; 
0x0000000007252c: lea ecx, [rbx+rdx]; add rdx, r12; call qword ptr [r10+rax*8]; 
0x0000000015a01e: lea ecx, [rbx+rsi]; mov esi, [rsp+0x24]; call rax; 
0x0000000015fe71: lea ecx, [rcx-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000003a535: lea ecx, [rdi+rdi*8-0x1]; jmp qword ptr [rax+rcx*2-0x75]; 
0x000000001199ce: lea ecx, [rdi+rdi]; shr eax, cl; and eax, 0x3; ret; 
0x00000000171e46: lea ecx, [rdx+0x10]; jne 0x0000000000172390; ret; 
0x000000001761d7: lea ecx, [rdx+0x10]; jne 0x00000000001767e0; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x0000000017203c: lea ecx, [rdx+0x1]; jne 0x0000000000172390; ret; 
0x000000001763dc: lea ecx, [rdx+0x1]; jne 0x00000000001767e0; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x0000000008a458: lea ecx, [rdx+0x1]; mov [rsi+0x28], rcx; mov [rdx], al; mov eax, r8d; ret; 
0x0000000017205e: lea ecx, [rdx+0x2]; jne 0x0000000000172390; ret; 
0x000000001763ff: lea ecx, [rdx+0x2]; jne 0x00000000001767e0; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x00000000172084: lea ecx, [rdx+0x3]; jne 0x0000000000172390; ret; 
0x00000000176425: lea ecx, [rdx+0x3]; jne 0x00000000001767e0; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x0000000017209c: lea ecx, [rdx+0x4]; jne 0x0000000000172390; ret; 
0x0000000017644d: lea ecx, [rdx+0x4]; jne 0x00000000001767e0; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x00000000081eda: lea ecx, [rdx+0x4]; mov [rax], rcx; mov eax, [rdx]; ret; 
0x000000001720c2: lea ecx, [rdx+0x5]; jne 0x0000000000172390; ret; 
0x00000000176473: lea ecx, [rdx+0x5]; jne 0x00000000001767e0; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x000000001720e4: lea ecx, [rdx+0x6]; jne 0x0000000000172390; ret; 
0x000000001764a5: lea ecx, [rdx+0x6]; jne 0x00000000001767e0; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x00000000172102: lea ecx, [rdx+0x7]; jne 0x0000000000172390; ret; 
0x000000001764d3: lea ecx, [rdx+0x7]; jne 0x00000000001767e0; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x00000000171dde: lea ecx, [rdx+0x8]; jne 0x0000000000172390; ret; 
0x0000000017616f: lea ecx, [rdx+0x8]; jne 0x00000000001767e0; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x00000000172124: lea ecx, [rdx+0x9]; jne 0x0000000000172390; ret; 
0x00000000176505: lea ecx, [rdx+0x9]; jne 0x00000000001767e0; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x00000000172144: lea ecx, [rdx+0xa]; jne 0x0000000000172390; ret; 
0x00000000176535: lea ecx, [rdx+0xa]; jne 0x00000000001767e0; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x00000000172164: lea ecx, [rdx+0xb]; jne 0x0000000000172390; ret; 
0x00000000176565: lea ecx, [rdx+0xb]; jne 0x00000000001767e0; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x00000000172184: lea ecx, [rdx+0xc]; jne 0x0000000000172390; ret; 
0x00000000176595: lea ecx, [rdx+0xc]; jne 0x00000000001767e0; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x000000001721a6: lea ecx, [rdx+0xd]; jne 0x0000000000172390; ret; 
0x000000001765c7: lea ecx, [rdx+0xd]; jne 0x00000000001767e0; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x000000001721c6: lea ecx, [rdx+0xe]; jne 0x0000000000172390; ret; 
0x000000001765f7: lea ecx, [rdx+0xe]; jne 0x00000000001767e0; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x000000001721e6: lea ecx, [rdx+0xf]; jne 0x0000000000172390; ret; 
0x00000000176627: lea ecx, [rdx+0xf]; jne 0x00000000001767e0; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x0000000011d1c2: lea ecx, [rdx+rcx*4]; mov ecx, [rcx+rsi]; test ecx, ecx; jne short 0x000000000011d1d0; ret; 
0x0000000011da19: lea ecx, [rdx+rcx*4]; mov ecx, [rcx+rsi]; test ecx, ecx; jne short 0x000000000011da28; ret; 
0x0000000011da76: lea ecx, [rdx+rcx*4]; mov ecx, [rcx+rsi]; test ecx, ecx; jne short 0x000000000011da88; ret; 
0x00000000177ab7: lea ecx, [rdx+rcx-0x10]; movzx eax, byte ptr [rdi+rcx]; movzx edx, byte ptr [rsi+rcx]; sub eax, edx; ret; 
0x000000000a4c8e: lea ecx, [rip+0x103f48]; mov edx, eax; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x00000000181b0e: lea ecx, [rip+0x129ac]; mov edx, [rcx+rdx*4]; mov eax, [rcx+rax*4]; sub eax, edx; ret; 
0x0000000007d7d7: lea ecx, [rip+0x12b037]; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x0000000006a16e: lea ecx, [rip+0x13ca48]; mov r11d, [rbp-0x5c0]; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x0000000018042d: lea ecx, [rip+0x1408d]; mov eax, [rcx+rax*4]; mov edx, [rcx+rdx*4]; sub eax, edx; ret; 
0x00000000180159: lea ecx, [rip+0x14361]; mov edx, [rcx+rdx*4]; mov eax, [rcx+rax*4]; sub eax, edx; ret; 
0x00000000061722: lea ecx, [rip+0x144ac0]; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x00000000061652: lea ecx, [rip+0x144b28]; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x0000000017ed44: lea ecx, [rip+0x15776]; mov eax, [rcx+rax*4]; mov edx, [rcx+rdx*4]; sub eax, edx; ret; 
0x0000000008aae6: lea ecx, [rip+0x15a3d4]; mov [rdx+0xe0], rcx; pop rbx; ret; 
0x0000000017d23e: lea ecx, [rip+0x1727c]; mov edx, [rcx+rdx*4]; mov eax, [rcx+rax*4]; sub eax, edx; ret; 
0x0000000017b5ad: lea ecx, [rip+0x18f0d]; mov eax, [rcx+rax*4]; mov edx, [rcx+rdx*4]; sub eax, edx; ret; 
0x0000000017b279: lea ecx, [rip+0x19241]; mov edx, [rcx+rdx*4]; mov eax, [rcx+rax*4]; sub eax, edx; ret; 
0x000000001799a4: lea ecx, [rip+0x1ab16]; mov eax, [rcx+rax*4]; mov edx, [rcx+rdx*4]; sub eax, edx; ret; 
0x0000000018dd4d: lea ecx, [rip+0x2a91d]; movsxd rbx, [rcx+rbx*4]; add rcx, rbx; notrack jmp rcx; 
0x0000000018dba6: lea ecx, [rip+0x2aa58]; movsxd rcx, [r9+rbx*4]; add rcx, r9; notrack jmp rcx; 
0x0000000014a545: lea ecx, [rip+0x63759]; mov edx, esi; movsxd rax, [rcx+rdx*4]; add rax, rcx; notrack jmp rax; 
0x00000000149c71: lea ecx, [rip+0x63fed]; mov edx, esi; movsxd rax, [rcx+rdx*4]; add rax, rcx; notrack jmp rax; 
0x0000000010a058: lea ecx, [rip+0x64d8f700]; mov [rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000105c3a: lea ecx, [rip+0xa64e8]; movzx eax, al; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x00000000103f4d: lea ecx, [rip+0xa7fcd]; movsxd rdx, [rcx+r9*4]; add rdx, rcx; notrack jmp rdx; 
0x000000000f7cc0: lea ecx, [rip+0xb366e]; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x000000000f7903: lea ecx, [rip+0xb36bf]; mov rax, rdx; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x000000000f79d0: lea ecx, [rip+0xb38ce]; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x000000000eb785: lea ecx, [rip+0xbf5ad]; movzx ebp, bpl; movsxd rax, [rcx+rbp*4]; add rax, rcx; notrack jmp rax; 
0x0000000007b48a: lea ecx, [rip-0xc70]; mov dword ptr [rsp+0x38], 0x1; mov rbx, rsi; jmp rcx; 
0x0000000015985c: lea ecx, [rsi+0x398]; push 0x0; call qword ptr [rax+0x270]; 
0x0000000015980b: lea ecx, [rsi+0x398]; push 0x2; call qword ptr [rax+0x270]; 
0x0000000011d3c6: lea ecx, [rsi+rcx*4]; add eax, [rcx+rdx]; ret; 
0x0000000011d3ab: lea ecx, [rsi+rcx*4]; mov edx, [rcx+rdx]; test edx, edx; jne short 0x000000000011d3c0; ret; 
0x0000000011dc4b: lea ecx, [rsi+rcx*4]; mov edx, [rcx+rdx]; test edx, edx; jne short 0x000000000011dc60; ret; 
0x0000000014b7fd: lea ecx, [rsp+0x14]; call qword ptr [rax]; 
0x000000000b97af: lea ecx, [rsp+0x18]; call r13; 
0x000000000b9610: lea ecx, [rsp+0x18]; call rbx; 
0x0000000014c241: lea ecx, [rsp+0x1c]; call qword ptr [rax]; 
0x0000000014202f: lea ecx, [rsp+0x20]; call qword ptr [rax]; 
0x000000000b99b5: lea ecx, [rsp+0x20]; call rbx; 
0x00000000086edf: lea ecx, [rsp+0x28]; call rbp; 
0x000000000b94aa: lea ecx, [rsp+0x28]; call rbx; 
0x0000000014cc4d: lea ecx, [rsp+0x2a]; call qword ptr [rax]; 
0x00000000141e39: lea ecx, [rsp+0x2c]; call qword ptr [rax]; 
0x000000000b9bef: lea ecx, [rsp+0x30]; call rbx; 
0x0000000014ca05: lea ecx, [rsp+0x3a]; call qword ptr [rax]; 
0x0000000014254a: lea ecx, [rsp+0x40]; call qword ptr [rax]; 
0x0000000010ffcc: lea ecx, [rsp+0x40]; test eax, eax; jne short 0x0000000000110000; mov eax, 0x10e; syscall; 
0x00000000121980: lea edi, [r13+0x2000001]; mov rsi, rbp; mov [rsp+0x10], rax; mov rdx, rax; call qword ptr [r12+0x28]; 
0x0000000013676f: lea edi, [rax+rdx+0x2]; cmp rcx, rdi; jae short 0x0000000000136783; mov eax, 0xffffffff; ret; 
0x00000000121981: lea edi, [rbp+0x2000001]; mov rsi, rbp; mov [rsp+0x10], rax; mov rdx, rax; call qword ptr [r12+0x28]; 
0x0000000014a6c7: lea edi, [rbp+0x58]; call rax; 
0x00000000149c27: lea edi, [rbp+0x68]; call rax; 
0x00000000039aaa: lea edi, [rbp+0x80]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000015937b: lea edi, [rbp+0x988]; call qword ptr [r13+0xf88]; 
0x00000000159509: lea edi, [rbp+0x988]; call qword ptr [r13+0xf90]; 
0x000000000453df: lea edi, [rbp+0x988]; call qword ptr [rbp+0xf90]; 
0x000000000453ac: lea edi, [rbp+0x988]; mov rdx, fs:[rax]; mov [rbx+0x18], rdx; mov fs:[rax], rbx; call qword ptr [rbp+0xf88]; 
0x00000000146e4a: lea edi, [rbp+0xc8]; call rax; 
0x00000000069edf: lea edi, [rbp-0x500]; mov rdx, r15; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000006a228: lea edi, [rbp-0x500]; xor esi, esi; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000061e8f: lea edi, [rbp-0x5e0]; mov rdx, r14; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000621e8: lea edi, [rbp-0x5e0]; xor esi, esi; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000d8e50: lea edi, [rdi*8+0x2]; syscall; 
0x000000000b3b9d: lea edi, [rdi+0x10]; jne 0x00000000000b4270; ret; 
0x000000000b52c1: lea edi, [rdi+0x10]; jne 0x00000000000b5ac0; ret; 
0x000000000b3bc0: lea edi, [rdi+0x11]; jne 0x00000000000b4270; ret; 
0x000000000b52e4: lea edi, [rdi+0x11]; jne 0x00000000000b5ac0; ret; 
0x000000000b3be5: lea edi, [rdi+0x12]; jne 0x00000000000b4270; ret; 
0x000000000b5309: lea edi, [rdi+0x12]; jne 0x00000000000b5ac0; ret; 
0x000000000b3c03: lea edi, [rdi+0x13]; jne 0x00000000000b4270; ret; 
0x000000000b5337: lea edi, [rdi+0x13]; jne 0x00000000000b5ac0; ret; 
0x000000000b3c23: lea edi, [rdi+0x14]; jne 0x00000000000b4270; ret; 
0x000000000b5367: lea edi, [rdi+0x14]; jne 0x00000000000b5ac0; ret; 
0x000000000b3c46: lea edi, [rdi+0x15]; jne 0x00000000000b4270; ret; 
0x000000000b539a: lea edi, [rdi+0x15]; jne 0x00000000000b5ac0; ret; 
0x000000000b3c65: lea edi, [rdi+0x16]; jne 0x00000000000b4270; ret; 
0x000000000b53c9: lea edi, [rdi+0x16]; jne 0x00000000000b5ac0; ret; 
0x000000000b3c85: lea edi, [rdi+0x17]; jne 0x00000000000b4270; ret; 
0x000000000b53f9: lea edi, [rdi+0x17]; jne 0x00000000000b5ac0; ret; 
0x000000000b3ca5: lea edi, [rdi+0x18]; jne 0x00000000000b4270; ret; 
0x000000000b5429: lea edi, [rdi+0x18]; jne 0x00000000000b5ac0; ret; 
0x000000000b3cc8: lea edi, [rdi+0x19]; jne 0x00000000000b4270; ret; 
0x000000000b545c: lea edi, [rdi+0x19]; jne 0x00000000000b5ac0; ret; 
0x000000000b39b7: lea edi, [rdi+0x1]; jne 0x00000000000b4270; ret; 
0x000000000b509a: lea edi, [rdi+0x1]; jne 0x00000000000b5ac0; ret; 
0x00000000183d6d: lea edi, [rdi+0x1]; jne 0x00000000001841a0; vzeroupper; ret; 
0x00000000184a85: lea edi, [rdi+0x1]; jne 0x0000000000184ed0; vzeroupper; ret; 
0x000000000b3cfd: lea edi, [rdi+0x1a]; jne 0x00000000000b4270; ret; 
0x000000000b5491: lea edi, [rdi+0x1a]; jne 0x00000000000b5ac0; ret; 
0x000000000b3d2b: lea edi, [rdi+0x1b]; jne 0x00000000000b4270; ret; 
0x000000000b54bf: lea edi, [rdi+0x1b]; jne 0x00000000000b5ac0; ret; 
0x000000000b3d5b: lea edi, [rdi+0x1c]; jne 0x00000000000b4270; ret; 
0x000000000b54ef: lea edi, [rdi+0x1c]; jne 0x00000000000b5ac0; ret; 
0x000000000b3d87: lea edi, [rdi+0x1d]; jne 0x00000000000b4270; ret; 
0x000000000b551b: lea edi, [rdi+0x1d]; jne 0x00000000000b5ac0; ret; 
0x000000000b3db7: lea edi, [rdi+0x1e]; jne 0x00000000000b4270; ret; 
0x000000000b554b: lea edi, [rdi+0x1e]; jne 0x00000000000b5ac0; ret; 
0x000000000b3de7: lea edi, [rdi+0x1f]; jne 0x00000000000b4270; ret; 
0x000000000b557b: lea edi, [rdi+0x1f]; jne 0x00000000000b5ac0; ret; 
0x000000000b3e17: lea edi, [rdi+0x20]; jne 0x00000000000b4270; ret; 
0x000000000b55ab: lea edi, [rdi+0x20]; jne 0x00000000000b5ac0; ret; 
0x000000000b39db: lea edi, [rdi+0x2]; jne 0x00000000000b4270; ret; 
0x000000000b50bf: lea edi, [rdi+0x2]; jne 0x00000000000b5ac0; ret; 
0x00000000183f1b: lea edi, [rdi+0x2]; jne 0x00000000001841a0; vzeroupper; ret; 
0x00000000184c4f: lea edi, [rdi+0x2]; jne 0x0000000000184ed0; vzeroupper; ret; 
0x000000000b39fe: lea edi, [rdi+0x3]; jne 0x00000000000b4270; ret; 
0x000000000b50e2: lea edi, [rdi+0x3]; jne 0x00000000000b5ac0; ret; 
0x00000000183f3f: lea edi, [rdi+0x3]; jne 0x00000000001841a0; vzeroupper; ret; 
0x00000000184c73: lea edi, [rdi+0x3]; jne 0x0000000000184ed0; vzeroupper; ret; 
0x000000000b3a19: lea edi, [rdi+0x4]; jne 0x00000000000b4270; ret; 
0x000000000b50fd: lea edi, [rdi+0x4]; jne 0x00000000000b5ac0; ret; 
0x00000000183f59: lea edi, [rdi+0x4]; jne 0x00000000001841a0; vzeroupper; ret; 
0x00000000184c8d: lea edi, [rdi+0x4]; jne 0x0000000000184ed0; vzeroupper; ret; 
0x000000000b3a3c: lea edi, [rdi+0x5]; jne 0x00000000000b4270; ret; 
0x000000000b5120: lea edi, [rdi+0x5]; jne 0x00000000000b5ac0; ret; 
0x000000000b3a61: lea edi, [rdi+0x6]; jne 0x00000000000b4270; ret; 
0x000000000b5145: lea edi, [rdi+0x6]; jne 0x00000000000b5ac0; ret; 
0x000000000b3a7f: lea edi, [rdi+0x7]; jne 0x00000000000b4270; ret; 
0x000000000b5163: lea edi, [rdi+0x7]; jne 0x00000000000b5ac0; ret; 
0x000000000b3a9b: lea edi, [rdi+0x8]; jne 0x00000000000b4270; ret; 
0x000000000b517f: lea edi, [rdi+0x8]; jne 0x00000000000b5ac0; ret; 
0x000000000b3abe: lea edi, [rdi+0x9]; jne 0x00000000000b4270; ret; 
0x000000000b51a2: lea edi, [rdi+0x9]; jne 0x00000000000b5ac0; ret; 
0x000000000b3ae3: lea edi, [rdi+0xa]; jne 0x00000000000b4270; ret; 
0x000000000b51c7: lea edi, [rdi+0xa]; jne 0x00000000000b5ac0; ret; 
0x000000000b3b01: lea edi, [rdi+0xb]; jne 0x00000000000b4270; ret; 
0x000000000b51f5: lea edi, [rdi+0xb]; jne 0x00000000000b5ac0; ret; 
0x000000000b3b21: lea edi, [rdi+0xc]; jne 0x00000000000b4270; ret; 
0x000000000b5215: lea edi, [rdi+0xc]; jne 0x00000000000b5ac0; ret; 
0x000000000b3b43: lea edi, [rdi+0xd]; jne 0x00000000000b4270; ret; 
0x000000000b5237: lea edi, [rdi+0xd]; jne 0x00000000000b5ac0; ret; 
0x000000000b3b63: lea edi, [rdi+0xe]; jne 0x00000000000b4270; ret; 
0x000000000b5267: lea edi, [rdi+0xe]; jne 0x00000000000b5ac0; ret; 
0x000000000b3b83: lea edi, [rdi+0xf]; jne 0x00000000000b4270; ret; 
0x000000000b5297: lea edi, [rdi+0xf]; jne 0x00000000000b5ac0; ret; 
0x00000000183f84: lea edi, [rdi+rdx+0x1]; jne 0x00000000001841a0; vzeroupper; ret; 
0x00000000184cb8: lea edi, [rdi+rdx+0x1]; jne 0x0000000000184ed0; vzeroupper; ret; 
0x0000000015ff74: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x000000000015ff86; movaps [rdi], xmm4; notrack jmp r9; 
0x000000001600c4: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x00000000001600d6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000160214: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000160226; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000160364: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000160376; movaps [rdi], xmm4; notrack jmp r9; 
0x000000001604b4: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x00000000001604c6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000160604: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000160616; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000160754: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000160766; movaps [rdi], xmm4; notrack jmp r9; 
0x000000001608a4: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x00000000001608b6; movaps [rdi], xmm4; notrack jmp r9; 
0x000000001609f4: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000160a06; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000160b44: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000160b56; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000160c94: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000160ca6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000160de4: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000160df6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000160f34: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000160f46; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000161084: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000161096; movaps [rdi], xmm4; notrack jmp r9; 
0x000000001611d4: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x00000000001611e6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000162954: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000162966; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000162aa4: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000162ab6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000162bf4: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000162c06; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000162d44: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000162d56; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000162e94: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000162ea6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000162fe4: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000162ff6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000163134: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000163146; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000163284: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000163296; movaps [rdi], xmm4; notrack jmp r9; 
0x000000001633d4: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x00000000001633e6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000163524: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000163536; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000163674: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000163686; movaps [rdi], xmm4; notrack jmp r9; 
0x000000001637c4: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x00000000001637d6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000163914: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000163926; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000163a64: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000163a76; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000163bb4: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000163bc6; movaps [rdi], xmm4; notrack jmp r9; 
0x000000000a4d61: lea edi, [rip+0x103e99]; mov edx, edx; movsxd rdx, [rdi+rdx*4]; add rdx, rdi; notrack jmp rdx; 
0x000000000dda38: lea edi, [rip+0x109a62]; syscall; 
0x000000000dd8f8: lea edi, [rip+0x109ba2]; syscall; 
0x000000000dd840: lea edi, [rip+0x109c5a]; syscall; 
0x000000000dd764: lea edi, [rip+0x109d2e]; syscall; 
0x000000000dd594: lea edi, [rip+0x109ebe]; syscall; 
0x000000000dd3d0: lea edi, [rip+0x10a03a]; syscall; 
0x000000000dd016: lea edi, [rip+0x10a39c]; syscall; 
0x000000000dbd68: lea edi, [rip+0x10b5c2]; syscall; 
0x000000000dbc28: lea edi, [rip+0x10b702]; syscall; 
0x000000000dbb70: lea edi, [rip+0x10b7ba]; syscall; 
0x000000000db7a4: lea edi, [rip+0x10bb7e]; syscall; 
0x000000000d99e8: lea edi, [rip+0x10bcd2]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000db5d4: lea edi, [rip+0x10bd0e]; syscall; 
0x000000000d99a2: lea edi, [rip+0x10bd18]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000db410: lea edi, [rip+0x10be8a]; syscall; 
0x000000000d9800: lea edi, [rip+0x10beba]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000d97d1: lea edi, [rip+0x10bee9]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000d9708: lea edi, [rip+0x10bfb2]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000d96df: lea edi, [rip+0x10bfdb]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000d920d: lea edi, [rip+0x10c4ad]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000dab18: lea edi, [rip+0x10c72a]; syscall; 
0x000000000ceb44: lea edi, [rip+0x1185f6]; syscall; 
0x000000000ce950: lea edi, [rip+0x1187ea]; syscall; 
0x000000000c6684: lea edi, [rip+0x11efd6]; syscall; 
0x000000000c6360: lea edi, [rip+0x11f35a]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000c617d: lea edi, [rip+0x11f53d]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000007d780: lea edi, [rip+0x12afd2]; movsxd rsi, [rdi+rsi*4]; add rsi, rdi; notrack jmp rsi; 
0x00000000062a0d: lea edi, [rip+0x143f9d]; movzx eax, al; movsxd rax, [rdi+rax*4]; add rax, rdi; notrack jmp rax; 
0x000000000998a4: lea edi, [rip+0x14a2f6]; syscall; 
0x0000000009b234: lea edi, [rip+0x14bcce]; syscall; 
0x0000000009afb0: lea edi, [rip+0x14bf52]; syscall; 
0x0000000009add0: lea edi, [rip+0x14c132]; syscall; 
0x0000000009abe4: lea edi, [rip+0x14c31e]; syscall; 
0x0000000009ab74: lea edi, [rip+0x14c38e]; syscall; 
0x00000000096ef4: lea edi, [rip+0x14cca6]; syscall; 
0x00000000096e94: lea edi, [rip+0x14cd06]; syscall; 
0x00000000096ac4: lea edi, [rip+0x14d0d6]; syscall; 
0x00000000096864: lea edi, [rip+0x14d336]; syscall; 
0x0000000009621c: lea edi, [rip+0x14d97e]; syscall; 
0x000000000961e4: lea edi, [rip+0x14d9b6]; syscall; 
0x00000000097ec3: lea edi, [rip+0x14efb7]; syscall; 
0x00000000097428: lea edi, [rip+0x14fa42]; syscall; 
0x000000000930ff: lea edi, [rip+0x153d7b]; syscall; 
0x00000000093083: lea edi, [rip+0x153de7]; syscall; 
0x00000000092ddc: lea edi, [rip+0x15409e]; syscall; 
0x00000000092b30: lea edi, [rip+0x15434a]; syscall; 
0x00000000092065: lea edi, [rip+0x154795]; syscall; 
0x00000000091ec0: lea edi, [rip+0x15493a]; syscall; 
0x00000000091d34: lea edi, [rip+0x154ac6]; syscall; 
0x0000000008ff37: lea edi, [rip+0x156733]; syscall; 
0x0000000008f9f6: lea edi, [rip+0x156c74]; syscall; 
0x0000000008f666: lea edi, [rip+0x157004]; syscall; 
0x0000000008f306: lea edi, [rip+0x157364]; syscall; 
0x0000000008dbe2: lea edi, [rip+0x158a88]; syscall; 
0x0000000008d8f2: lea edi, [rip+0x158d78]; syscall; 
0x0000000008d5ee: lea edi, [rip+0x15907c]; syscall; 
0x00000000080cd3: lea edi, [rip+0x165957]; syscall; 
0x000000000808d7: lea edi, [rip+0x165d53]; syscall; 
0x0000000008082b: lea edi, [rip+0x165dff]; syscall; 
0x0000000007e984: lea edi, [rip+0x166cd6]; syscall; 
0x00000000028d8e: lea edi, [rip+0x184f6e]; mov rsi, [rax]; xor eax, eax; call qword ptr [rdx+0x260]; 
0x00000000028cbe: lea edi, [rip+0x185024]; mov rsi, [rax]; xor eax, eax; call qword ptr [rdx+0x260]; 
0x0000000005f1a8: lea edi, [rip+0x18745a]; syscall; 
0x0000000005ef24: lea edi, [rip+0x1876da]; syscall; 
0x0000000005cda0: lea edi, [rip+0x18984a]; syscall; 
0x0000000005cc60: lea edi, [rip+0x18998a]; syscall; 
0x00000000052e88: lea edi, [rip+0x193742]; syscall; 
0x00000000052cc4: lea edi, [rip+0x193906]; syscall; 
0x00000000052865: lea edi, [rip+0x193d5d]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000527b4: lea edi, [rip+0x193e16]; syscall; 
0x000000000503a8: lea edi, [rip+0x195ff2]; syscall; 
0x00000000050224: lea edi, [rip+0x196176]; syscall; 
0x000000000501c4: lea edi, [rip+0x1961d6]; syscall; 
0x00000000045a60: lea edi, [rip+0x1a0902]; syscall; 
0x000000000459a0: lea edi, [rip+0x1a09c2]; syscall; 
0x000000000458d8: lea edi, [rip+0x1a0a8a]; syscall; 
0x00000000045800: lea edi, [rip+0x1a0b62]; syscall; 
0x000000000448f8: lea edi, [rip+0x1a11ea]; syscall; 
0x00000000044833: lea edi, [rip+0x1a12af]; syscall; 
0x00000000044690: lea edi, [rip+0x1a1452]; syscall; 
0x000000000445b7: lea edi, [rip+0x1a152b]; syscall; 
0x0000000003d0bf: lea edi, [rip+0x1a87fb]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003d05e: lea edi, [rip+0x1a885c]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003d021: lea edi, [rip+0x1a89e1]; syscall; 
0x0000000003b696: lea edi, [rip+0x1aa334]; syscall; 
0x0000000003b18a: lea edi, [rip+0x1aa7f0]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003b121: lea edi, [rip+0x1aa859]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003aff2: lea edi, [rip+0x1aa988]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003af92: lea edi, [rip+0x1aa9e8]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003aeb0: lea edi, [rip+0x1aaa8a]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003ae59: lea edi, [rip+0x1aaae1]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003abd3: lea edi, [rip+0x1aaae7]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003aad5: lea edi, [rip+0x1aabe5]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003abac: lea edi, [rip+0x1aad0e]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003a966: lea edi, [rip+0x1aad54]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003aaae: lea edi, [rip+0x1aae0c]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003a93b: lea edi, [rip+0x1aaf7f]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003a598: lea edi, [rip+0x1ab122]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003a668: lea edi, [rip+0x1ab2d2]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003a5bf: lea edi, [rip+0x1ab2fb]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003a623: lea edi, [rip+0x1ab317]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003a4e5: lea edi, [rip+0x1ab435]; syscall; 
0x0000000003a4c5: lea edi, [rip+0x1ab455]; syscall; 
0x0000000003a35b: lea edi, [rip+0x1ab5bf]; syscall; 
0x00000000039049: lea edi, [rip+0x1ac871]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000038585: lea edi, [rip+0x1ad135]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000384aa: lea edi, [rip+0x1ad210]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000038435: lea edi, [rip+0x1ad285]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000038399: lea edi, [rip+0x1ad321]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003811b: lea edi, [rip+0x1ad59f]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000037d92: lea edi, [rip+0x1ad928]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000037b93: lea edi, [rip+0x1adb27]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035ab8: lea edi, [rip+0x1afc02]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000356bc: lea edi, [rip+0x1afffe]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035562: lea edi, [rip+0x1b0158]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035482: lea edi, [rip+0x1b0238]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035401: lea edi, [rip+0x1b02b9]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000351e3: lea edi, [rip+0x1b04d7]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000351a7: lea edi, [rip+0x1b0513]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000002bb6d: lea edi, [rip+0x1b9b29]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000002ac68: lea edi, [rip+0x1ba9f2]; syscall; 
0x0000000002aafc: lea edi, [rip+0x1bab5e]; syscall; 
0x0000000002aa04: lea edi, [rip+0x1bac56]; syscall; 
0x00000000026852: lea edi, [rip+0x1bf258]; syscall; 
0x00000000191980: lea edi, [rip+0x54162]; syscall; 
0x00000000191b40: lea edi, [rip+0x54cba]; syscall; 
0x00000000191e60: lea edi, [rip+0x567f2]; syscall; 
0x00000000146e8e: lea edi, [rip+0x669ac]; mov ecx, esi; movsxd rax, [rdi+rcx*4]; add rax, rdi; notrack jmp rax; 
0x00000000158060: lea edi, [rip+0x9107e]; syscall; 
0x00000000156d68: lea edi, [rip+0x92376]; syscall; 
0x00000000156c88: lea edi, [rip+0x92456]; syscall; 
0x00000000156aa0: lea edi, [rip+0x9263e]; syscall; 
0x00000000156a10: lea edi, [rip+0x926ce]; syscall; 
0x00000000156970: lea edi, [rip+0x9276e]; syscall; 
0x000000001568c0: lea edi, [rip+0x9281e]; syscall; 
0x000000001564f0: lea edi, [rip+0x92bee]; syscall; 
0x0000000014d1f7: lea edi, [rip+0x9bce3]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000014d127: lea edi, [rip+0x9bdb3]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000014d057: lea edi, [rip+0x9be83]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000014cf87: lea edi, [rip+0x9bf53]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000014cecf: lea edi, [rip+0x9c00b]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000014c2f0: lea edi, [rip+0x9cbd2]; syscall; 
0x0000000014c190: lea edi, [rip+0x9cd32]; syscall; 
0x0000000014bf84: lea edi, [rip+0x9cf3e]; syscall; 
0x0000000014bde4: lea edi, [rip+0x9d0de]; syscall; 
0x0000000014bc50: lea edi, [rip+0x9d272]; syscall; 
0x0000000014bb10: lea edi, [rip+0x9d3b2]; syscall; 
0x0000000014b9b0: lea edi, [rip+0x9d512]; syscall; 
0x0000000014b8a0: lea edi, [rip+0x9d622]; syscall; 
0x00000000148410: lea edi, [rip+0xa0a96]; syscall; 
0x00000000107abd: lea edi, [rip+0xa695c]; mov rdx, [rax+0xb0]; call qword ptr [rax+0x88]; 
0x00000000141481: lea edi, [rip+0xa77f9]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000013f4dc: lea edi, [rip+0xa977e]; syscall; 
0x0000000013f1ac: lea edi, [rip+0xa9aae]; syscall; 
0x0000000013ee2c: lea edi, [rip+0xa9e2e]; syscall; 
0x0000000013ec2e: lea edi, [rip+0xaa02c]; syscall; 
0x0000000013eaa4: lea edi, [rip+0xaa1b6]; syscall; 
0x0000000013e867: lea edi, [rip+0xaa3f3]; syscall; 
0x0000000013de20: lea edi, [rip+0xaad72]; syscall; 
0x0000000013dc9f: lea edi, [rip+0xaaef3]; syscall; 
0x0000000013dc65: lea edi, [rip+0xaaf2d]; syscall; 
0x0000000013db58: lea edi, [rip+0xab03a]; syscall; 
0x0000000013d318: lea edi, [rip+0xab87a]; syscall; 
0x0000000013d250: lea edi, [rip+0xab942]; syscall; 
0x0000000013d134: lea edi, [rip+0xaba5e]; syscall; 
0x0000000013bda1: lea edi, [rip+0xacba1]; syscall; 
0x0000000013bacd: lea edi, [rip+0xace79]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000138520: lea edi, [rip+0xb0132]; syscall; 
0x00000000138244: lea edi, [rip+0xb040e]; syscall; 
0x00000000133f64: lea edi, [rip+0xb46da]; syscall; 
0x000000001339e4: lea edi, [rip+0xb4c3e]; syscall; 
0x00000000133820: lea edi, [rip+0xb4dba]; syscall; 
0x00000000133758: lea edi, [rip+0xb4e22]; syscall; 
0x00000000133618: lea edi, [rip+0xb4f62]; syscall; 
0x00000000133560: lea edi, [rip+0xb501a]; syscall; 
0x0000000013340b: lea edi, [rip+0xb516b]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000132e70: lea edi, [rip+0xb5702]; syscall; 
0x00000000132b40: lea edi, [rip+0xb5a32]; syscall; 
0x00000000132ada: lea edi, [rip+0xb5a40]; call rax; 
0x00000000132984: lea edi, [rip+0xb5bee]; syscall; 
0x0000000013246a: lea edi, [rip+0xb6064]; syscall; 
0x0000000012eb78: lea edi, [rip+0xb983a]; syscall; 
0x0000000012ea38: lea edi, [rip+0xb997a]; syscall; 
0x0000000012e980: lea edi, [rip+0xb9a32]; syscall; 
0x0000000012e894: lea edi, [rip+0xb9b16]; syscall; 
0x0000000012e6c4: lea edi, [rip+0xb9cb6]; syscall; 
0x0000000012e500: lea edi, [rip+0xb9e52]; syscall; 
0x0000000012e438: lea edi, [rip+0xb9eca]; syscall; 
0x0000000012e2f8: lea edi, [rip+0xba00a]; syscall; 
0x0000000012e240: lea edi, [rip+0xba0c2]; syscall; 
0x0000000012e160: lea edi, [rip+0xba19a]; syscall; 
0x0000000012dc94: lea edi, [rip+0xba5ee]; syscall; 
0x0000000012d6c4: lea edi, [rip+0xbab5e]; syscall; 
0x0000000012d1a4: lea edi, [rip+0xbb036]; syscall; 
0x0000000012cfd8: lea edi, [rip+0xbb1c2]; syscall; 
0x0000000012ce98: lea edi, [rip+0xbb302]; syscall; 
0x0000000012cde0: lea edi, [rip+0xbb3ba]; syscall; 
0x0000000012cd00: lea edi, [rip+0xbb492]; syscall; 
0x0000000012c8e4: lea edi, [rip+0xbb866]; syscall; 
0x0000000012c2c8: lea edi, [rip+0xbbe22]; syscall; 
0x0000000012c170: lea edi, [rip+0xbbf7a]; syscall; 
0x0000000012c0b0: lea edi, [rip+0xbc03a]; syscall; 
0x0000000012bfc8: lea edi, [rip+0xbc11a]; syscall; 
0x0000000012bee4: lea edi, [rip+0xbc1c6]; syscall; 
0x0000000012b884: lea edi, [rip+0xbc7e6]; syscall; 
0x0000000012b678: lea edi, [rip+0xbc9aa]; syscall; 
0x0000000012b520: lea edi, [rip+0xbcb02]; syscall; 
0x0000000012b460: lea edi, [rip+0xbcbc2]; syscall; 
0x0000000012b378: lea edi, [rip+0xbcca2]; syscall; 
0x0000000012a764: lea edi, [rip+0xbd83e]; syscall; 
0x0000000012a4f4: lea edi, [rip+0xbda6e]; syscall; 
0x00000000129d74: lea edi, [rip+0xbe18e]; syscall; 
0x00000000126dbf: lea edi, [rip+0xc10e3]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000e6401: lea edi, [rip+0xc474d]; movzx eax, al; movsxd rax, [rdi+rax*4]; add rax, rdi; notrack jmp rax; 
0x00000000120318: lea edi, [rip+0xc7b32]; syscall; 
0x000000001201d8: lea edi, [rip+0xc7c72]; syscall; 
0x00000000120120: lea edi, [rip+0xc7d2a]; syscall; 
0x0000000011fd46: lea edi, [rip+0xc80fc]; syscall; 
0x0000000011fb1c: lea edi, [rip+0xc82ee]; syscall; 
0x0000000011f954: lea edi, [rip+0xc846e]; syscall; 
0x0000000011f790: lea edi, [rip+0xc85ea]; syscall; 
0x0000000011f6c0: lea edi, [rip+0xc8666]; syscall; 
0x0000000011f5f0: lea edi, [rip+0xc8736]; syscall; 
0x0000000011f554: lea edi, [rip+0xc87d2]; syscall; 
0x0000000011eab8: lea edi, [rip+0xc923a]; syscall; 
0x0000000011e978: lea edi, [rip+0xc937a]; syscall; 
0x0000000011e8c0: lea edi, [rip+0xc9432]; syscall; 
0x0000000011e2c6: lea edi, [rip+0xc9a24]; syscall; 
0x0000000011e0c4: lea edi, [rip+0xc9bce]; syscall; 
0x0000000011dee4: lea edi, [rip+0xc9d46]; syscall; 
0x0000000011dd20: lea edi, [rip+0xc9ea2]; syscall; 
0x000000000d678b: lea edi, [rip+0xd3977]; mov ecx, eax; movsxd rdx, [rdi+rcx*4]; add rdx, rdi; notrack jmp rdx; 
0x000000000d67ce: lea edi, [rip+0xd3b20]; mov esi, eax; movsxd rdx, [rdi+rsi*4]; add rdx, rdi; notrack jmp rdx; 
0x00000000113620: lea edi, [rip+0xd422a]; syscall; 
0x00000000113504: lea edi, [rip+0xd4346]; syscall; 
0x000000001130a4: lea edi, [rip+0xd47a6]; syscall; 
0x00000000112b73: lea edi, [rip+0xd4cd7]; syscall; 
0x000000000d4217: lea edi, [rip+0xd5927]; movzx edx, r10b; movsxd rdx, [rdi+rdx*4]; add rdx, rdi; notrack jmp rdx; 
0x000000000d1fd5: lea edi, [rip+0xd7a89]; movzx eax, al; movsxd rax, [rdi+rax*4]; add rax, rdi; notrack jmp rax; 
0x000000000d1bfb: lea edi, [rip+0xd7ddb]; movzx eax, al; movsxd rax, [rdi+rax*4]; add rax, rdi; notrack jmp rax; 
0x000000000d0e12: lea edi, [rip+0xd8a6c]; movzx eax, al; movsxd rax, [rdi+rax*4]; add rax, rdi; notrack jmp rax; 
0x00000000101564: lea edi, [rip+0xe6056]; syscall; 
0x00000000100aeb: lea edi, [rip+0xe6ad3]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000076119: lea edi, [rip-0x1337]; add rsi, rdi; jmp rsi; 
0x00000000126d6e: lea edi, [rip-0x184]; call rax; 
0x0000000007567f: lea edi, [rip-0x89d]; add rsi, rdi; jmp rsi; 
0x0000000007b32a: lea edi, [rip-0xb10]; movsxd rcx, [rsi+rcx*4]; add rcx, rdi; jmp rcx; 
0x00000000116fb7: lea edi, [rsi-0x2708fff4]; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000074bb7: lea edi, [rsp+0x100]; mov rdx, rbp; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000074b38: lea edi, [rsp+0x100]; xor esi, esi; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000147a75: lea edi, [rsp+0x10]; call rax; 
0x000000000806de: lea edi, [rsp+0x10]; xor esi, esi; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000050039: lea edi, [rsp+0x30]; xor esi, esi; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000099f85: lea edi, [rsp+0x31]; mov [rbx], rax; test rax, rax; je 0x000000000009a060; call rax; 
0x000000001416ac: lea edi, [rsp+0x50]; call qword ptr [rax+0x20]; 
0x000000001592d2: lea edi, [rsp+0x9b0]; call qword ptr [r12+0xf90]; 
0x00000000159162: lea edi, [rsp+0x9b0]; mov rax, fs:[0x28]; mov [rsp+0x68], rax; xor eax, eax; call qword ptr [r12+0xf88]; 
0x000000000cc8fa: lea edi, [rsp+0xd0]; mov rsi, r13; call r12; 
0x0000000007a6af: lea edi, [rsp+0xe0]; mov rdx, rbp; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000007a638: lea edi, [rsp+0xe0]; xor esi, esi; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000082d3d: lea edx, [rax+0x1]; mov [r8+0x28], rdx; mov [rax], dil; mov eax, r9d; ret; 
0x0000000008a47f: lea edx, [rax+0x1]; mov [rdi+0x8], rdx; movzx eax, byte ptr [rax]; ret; 
0x00000000092134: lea edx, [rax+0x1]; mov [rip+0x151192], rdx; ret; 
0x000000000425ed: lea edx, [rax+0x1]; mov [rip+0x1a0bb6], edx; ret; 
0x00000000084844: lea edx, [rax+rdx*4]; mov [rax], rdx; xor eax, eax; ret; 
0x000000000f7981: lea edx, [rax-0x1]; movzx edx, dl; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x00000000119db7: lea edx, [rax-0x2708fff4]; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000069ac6: lea edx, [rax-0x77000005]; add cl, [rax-0x7d]; ret; 
0x0000000007dba6: lea edx, [rbx+0x34]; lea rcx, [rbx+0x40]; mov esi, 0x1; mov rdi, rbx; call r8; 
0x0000000007d4e9: lea edx, [rbx+0x34]; mov esi, 0x1; mov rdi, rbx; call rax; 
0x0000000015fa74: lea edx, [rbx+rdx]; notrack jmp rdx; 
0x00000000040d90: lea edx, [rcx+rdx-0x7e]; or eax, 0x3f000000; mov [rdi], edx; movd xmm0, eax; ret; 
0x00000000139e76: lea edx, [rdi+0x1]; test al, al; jne short 0x0000000000139e63; mov eax, r10d; ret; 
0x000000000397d5: lea edx, [rdi+rdi*8-0x1]; jmp qword ptr [rax+rcx*2-0x75]; 
0x000000000d95b5: lea edx, [rdi+rdi*8]; pop rbx; pop rbp; lea rax, [rax+rdx*8]; ret; 
0x000000000388b8: lea edx, [rdi+rsi*4]; mov r8d, [rdx+rax]; mov eax, r8d; ret; 
0x000000000a52e6: lea edx, [rdx+rcx]; notrack jmp r10; 
0x0000000011d1d6: lea edx, [rdx+rsi*4]; add eax, [rdx+rcx]; ret; 
0x0000000015fe78: lea edx, [rdx-0x40]; notrack jmp r9; 
0x000000000a69fb: lea edx, [rip+0x1022c7]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x000000000a52db: lea edx, [rip+0x103967]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000009970b: lea edx, [rip+0x10f497]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000000ba40f: lea edx, [rip+0x1127b]; cmovne rax, rdx; ret; 
0x0000000008c75c: lea edx, [rip+0x11c21e]; movzx eax, al; movsxd rax, [r10+rax*4]; add rax, r10; notrack jmp rax; 
0x0000000008c7a3: lea edx, [rip+0x11c233]; movzx eax, al; movsxd rax, [r10+rax*4]; add rax, r10; notrack jmp rax; 
0x0000000008c7f8: lea edx, [rip+0x11c23a]; movzx eax, al; movsxd rax, [r10+rax*4]; add rax, r10; notrack jmp rax; 
0x0000000008c848: lea edx, [rip+0x11c246]; movzx eax, al; movsxd rax, [r10+rax*4]; add rax, r10; notrack jmp rax; 
0x0000000008c898: lea edx, [rip+0x11c252]; movzx eax, al; movsxd rax, [r10+rax*4]; add rax, r10; notrack jmp rax; 
0x0000000008c8e8: lea edx, [rip+0x11c25e]; movzx eax, al; movsxd rax, [r10+rax*4]; add rax, r10; notrack jmp rax; 
0x0000000009c15a: lea edx, [rip+0x12110]; cmovne rax, rdx; ret; 
0x00000000181b67: lea edx, [rip+0x12953]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x00000000181b42: lea edx, [rip+0x12978]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000007cd64: lea edx, [rip+0x12a9b6]; add rax, rdx; ret; 
0x0000000007ced6: lea edx, [rip+0x12b6f4]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000009c5ea: lea edx, [rip+0x138a0]; cmovne rax, rdx; ret; 
0x0000000006a5b0: lea edx, [rip+0x13c756]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000069ffa: lea edx, [rip+0x13cb00]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000001801a7: lea edx, [rip+0x14313]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000018018d: lea edx, [rip+0x1432d]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000006253a: lea edx, [rip+0x1443c0]; movzx eax, al; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000062311: lea edx, [rip+0x14452d]; movzx eax, al; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000000395dd: lea edx, [rip+0x16897d]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000029189: lea edx, [rip+0x169e71]; mov eax, eax; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000017d297: lea edx, [rip+0x17223]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000017d272: lea edx, [rip+0x17248]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x00000000028879: lea edx, [rip+0x180b41]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000017b2c7: lea edx, [rip+0x191f3]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000017b2ad: lea edx, [rip+0x1920d]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000009d77f: lea edx, [rip+0x1a63b]; lea rax, [rip+0x1a714]; cmove rax, rdx; ret; 
0x0000000009d3ff: lea edx, [rip+0x1a99b]; lea rax, [rip+0x1aa74]; cmove rax, rdx; ret; 
0x0000000009d29f: lea edx, [rip+0x1ab1b]; lea rax, [rip+0x1abf4]; cmove rax, rdx; ret; 
0x0000000009d313: lea edx, [rip+0x1af57]; lea rax, [rip+0x1aed0]; cmovne rax, rdx; ret; 
0x0000000016eb77: lea edx, [rip+0x25943]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000016eb52: lea edx, [rip+0x25968]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000016c607: lea edx, [rip+0x27eb3]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000016c5ed: lea edx, [rip+0x27ecd]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000018e775: lea edx, [rip+0x29f25]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000001802d7: lea edx, [rip+0x382b3]; movsxd r9, [r10+r9*4]; vpcmpeqb xmm0, xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000014c04b: lea edx, [rip+0x389f]; call qword ptr [rax]; 
0x0000000017ec37: lea edx, [rip+0x39913]; movsxd r9, [r10+r9*4]; vpcmpeqb xmm0, xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000017b407: lea edx, [rip+0x3c103]; movsxd r9, [r10+r9*4]; pcmpeqb xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000016c75b: lea edx, [rip+0x3c6a7]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000127709: lea edx, [rip+0x3d771]; cmovne rax, rdx; ret; 
0x00000000127569: lea edx, [rip+0x3d931]; cmovne rax, rdx; ret; 
0x00000000179837: lea edx, [rip+0x3dc93]; movsxd r9, [r10+r9*4]; pcmpeqb xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000016a5db: lea edx, [rip+0x3e7a7]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x000000001787f7: lea edx, [rip+0x3ec93]; movsxd r9, [r10+r9*4]; pcmpeqb xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000177a27: lea edx, [rip+0x3fa23]; movsxd r9, [r10+r9*4]; pcmpeqb xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000014b92a: lea edx, [rip+0x3fc0]; mov r9, rbp; mov esi, 0x9; call qword ptr [rax]; 
0x00000000127639: lea edx, [rip+0x40351]; cmovne rax, rdx; ret; 
0x0000000015e22b: lea edx, [rip+0x4aad7]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000015cf9b: lea edx, [rip+0x4bce7]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x000000001276d7: lea edx, [rip+0x5da03]; lea rax, [rip+0x5da6c]; cmove rax, rdx; ret; 
0x00000000127607: lea edx, [rip+0x5daf3]; lea rax, [rip+0x5db5c]; cmove rax, rdx; ret; 
0x00000000127537: lea edx, [rip+0x5dbc3]; lea rax, [rip+0x5dc2c]; cmove rax, rdx; ret; 
0x000000001277aa: lea edx, [rip+0x5dde0]; lea rax, [rip+0x5de39]; cmove rax, rdx; ret; 
0x00000000127730: lea edx, [rip+0x6272a]; lea rax, [rip+0x62793]; cmove rax, rdx; ret; 
0x00000000127660: lea edx, [rip+0x6281a]; lea rax, [rip+0x62883]; cmove rax, rdx; ret; 
0x00000000127590: lea edx, [rip+0x628ea]; lea rax, [rip+0x62953]; cmove rax, rdx; ret; 
0x000000001277f4: lea edx, [rip+0x62c16]; cmove rax, rdx; ret; 
0x0000000014962e: lea edx, [rip+0x6424c]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000014cf26: lea edx, [rip+0x9bfd4]; cmp rax, rdx; je 0x000000000014cfd0; pop rbx; ret; 
0x0000000014cdbc: lea edx, [rip+0x9c13e]; mov fs:[rax], rdx; ret; 
0x00000000143391: lea edx, [rip+0x9f7a9]; jmp qword ptr [rdx+rax*8]; 
0x00000000104aae: lea edx, [rip+0xa752c]; mov r15d, eax; movsxd rax, [rdx+r15*4]; add rax, rdx; notrack jmp rax; 
0x00000000104394: lea edx, [rip+0xa7bd2]; movzx eax, al; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000103b5c: lea edx, [rip+0xa8286]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000000fbb24: lea edx, [rip+0xafb56]; movsxd rax, [rdx+rdi*4]; add rax, rdx; notrack jmp rax; 
0x000000000fbb7a: lea edx, [rip+0xafd58]; mov edi, edi; movsxd rax, [rdx+rdi*4]; add rax, rdx; notrack jmp rax; 
0x000000000b8cdc: lea edx, [rip+0xbe63e]; test byte ptr [rax+0x95], 0x2; lea rax, [rip+0x124c0]; cmovne rax, rdx; ret; 
0x000000000eb71a: lea edx, [rip+0xbf540]; movzx ebp, bpl; movsxd rax, [rdx+rbp*4]; add rax, rdx; notrack jmp rax; 
0x000000000eb874: lea edx, [rip+0xbf54a]; movzx r14d, r14b; movsxd rax, [rdx+r14*4]; add rax, rdx; notrack jmp rax; 
0x0000000009c20a: lea edx, [rip+0xc0d00]; cmovne rax, rdx; ret; 
0x0000000009c668: lea edx, [rip+0xc1b12]; cmovne rax, rdx; ret; 
0x000000000e5f0b: lea edx, [rip+0xc4bc3]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000000e41d2: lea edx, [rip+0xc678c]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000009d739: lea edx, [rip+0xc7771]; cmovne rax, rdx; ret; 
0x0000000009d3b9: lea edx, [rip+0xc7ad1]; cmovne rax, rdx; ret; 
0x000000000e12c2: lea edx, [rip+0xc9648]; mov esi, esi; movsxd rax, [rdx+rsi*4]; add rax, rdx; notrack jmp rax; 
0x000000000e0e85: lea edx, [rip+0xc96a9]; movsxd rax, [rdx+rbp*4]; add rax, rdx; notrack jmp rax; 
0x000000000e04eb: lea edx, [rip+0xc9fef]; mov esi, esi; movsxd rax, [rdx+rsi*4]; add rax, rdx; notrack jmp rax; 
0x0000000009d259: lea edx, [rip+0xca741]; cmovne rax, rdx; ret; 
0x000000000b917a: lea edx, [rip+0xcc900]; cmovne rax, rdx; ret; 
0x0000000009d613: lea edx, [rip+0xccec7]; cmovne rax, rdx; ret; 
0x0000000009d573: lea edx, [rip+0xccf47]; cmovne rax, rdx; ret; 
0x000000000b8cba: lea edx, [rip+0xcd090]; cmovne rax, rdx; ret; 
0x000000000b8e6a: lea edx, [rip+0xcd330]; cmovne rax, rdx; ret; 
0x000000000b8f5a: lea edx, [rip+0xcd990]; cmovne rax, rdx; ret; 
0x000000000b8c7a: lea edx, [rip+0xcda40]; cmovne rax, rdx; ret; 
0x000000000b8dca: lea edx, [rip+0xcdd10]; cmovne rax, rdx; ret; 
0x0000000009d663: lea edx, [rip+0xcefd7]; cmovne rax, rdx; ret; 
0x0000000009d5c3: lea edx, [rip+0xcf057]; cmovne rax, rdx; ret; 
0x0000000009c28a: lea edx, [rip+0xd2900]; cmovne rax, rdx; ret; 
0x000000000b91cf: lea edx, [rip+0xd2eab]; cmovne rax, rdx; ret; 
0x0000000009c6ba: lea edx, [rip+0xd3c80]; cmovne rax, rdx; ret; 
0x0000000009d4aa: lea edx, [rip+0xd5a10]; cmovne rax, rdx; ret; 
0x0000000009d50a: lea edx, [rip+0xd71c0]; cmovne rax, rdx; ret; 
0x000000001420e5: lea edx, [rip+0xd805]; lea r9, [rsp+0x20]; call qword ptr [rax]; 
0x000000000d06a7: lea edx, [rip+0xd91a7]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000000a4f0a: lea edx, [rip+0xd94e0]; cmovne rax, rdx; ret; 
0x0000000009ea1a: lea edx, [rip+0xdf880]; cmovne rax, rdx; ret; 
0x0000000009c72c: lea edx, [rip+0xe0cbe]; test byte ptr [rax+0x96], 0x10; lea rax, [rip+0x1b4f0]; cmovne rax, rdx; ret; 
0x0000000009c85c: lea edx, [rip+0xe0cce]; test byte ptr [rax+0x96], 0x10; lea rax, [rip+0x1b470]; cmovne rax, rdx; ret; 
0x0000000009d16a: lea edx, [rip+0xe0e60]; cmovne rax, rdx; ret; 
0x0000000009c2bc: lea edx, [rip+0xe0fee]; test byte ptr [rax+0x96], 0x10; lea rax, [rip+0x1b8b0]; cmovne rax, rdx; ret; 
0x0000000009ea5a: lea edx, [rip+0xe3350]; cmovne rax, rdx; ret; 
0x0000000009c70a: lea edx, [rip+0xe5890]; cmovne rax, rdx; ret; 
0x0000000009c55a: lea edx, [rip+0xe5c10]; cmovne rax, rdx; ret; 
0x0000000009c59a: lea edx, [rip+0xe5d70]; cmovne rax, rdx; ret; 
0x000000000ad757: lea edx, [rip+0xe6d63]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x000000000ad732: lea edx, [rip+0xe6d88]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000009d707: lea edx, [rip+0xe7a03]; lea rax, [rip+0xe7a6c]; cmove rax, rdx; ret; 
0x0000000009d387: lea edx, [rip+0xe7d63]; lea rax, [rip+0xe7dcc]; cmove rax, rdx; ret; 
0x0000000009d227: lea edx, [rip+0xe7ee3]; lea rax, [rip+0xe7f4c]; cmove rax, rdx; ret; 
0x0000000009d2fa: lea edx, [rip+0xe82a0]; lea rax, [rip+0xe82f9]; cmove rax, rdx; ret; 
0x000000000ab0f7: lea edx, [rip+0xe93c3]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x000000000ab0dd: lea edx, [rip+0xe93dd]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000009d760: lea edx, [rip+0xec72a]; lea rax, [rip+0xec793]; cmove rax, rdx; ret; 
0x0000000009d3e0: lea edx, [rip+0xeca8a]; lea rax, [rip+0xecaf3]; cmove rax, rdx; ret; 
0x0000000009d280: lea edx, [rip+0xecc0a]; lea rax, [rip+0xecc73]; cmove rax, rdx; ret; 
0x0000000009d344: lea edx, [rip+0xed0d6]; cmove rax, rdx; ret; 
0x0000000009d1bf: lea edx, [rip+0xed74b]; cmovne rax, rdx; ret; 
0x0000000009c1bb: lea edx, [rip+0xee42f]; cmovne rax, rdx; ret; 
0x000000000ab24b: lea edx, [rip+0xfdb77]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x000000000a8fdb: lea edx, [rip+0xffd67]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000009d06c: lea edx, [rip-0x362]; test byte ptr [rax+0x15c], 0x10; lea rax, [rip+0x1a660]; cmove rax, rdx; ret; 
0x000000000784af: lea edx, [rip-0x3e9]; add rax, rdx; jmp rax; 
0x00000000072c2e: lea edx, [rip-0x486]; movsxd rax, [rdi+rax*4]; add rax, rdx; jmp rax; 
0x0000000014b7f6: lea edx, [rip-0x5cec]; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x0000000014ba5f: lea edx, [rip-0x5f15]; mov esi, 0x2; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x0000000014bb9f: lea edx, [rip-0x6055]; mov esi, 0x3; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x0000000014bcfc: lea edx, [rip-0x6172]; mov esi, 0x6; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x0000000014be9c: lea edx, [rip-0x6312]; mov esi, 0x7; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x0000000014c101: lea edx, [rip-0x63c7]; mov esi, 0x8; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x0000000014c235: lea edx, [rip-0x672b]; mov esi, 0xa; lea r9, [rsp+0x1c]; call qword ptr [rax]; 
0x000000001277c3: lea edx, [rip-0x6f569]; lea rax, [rip-0x6f5f0]; cmovne rax, rdx; ret; 
0x000000001275af: lea edx, [rip-0x6f805]; lea rax, [rip-0x6f72c]; cmove rax, rdx; ret; 
0x0000000012767f: lea edx, [rip-0x6f8d5]; lea rax, [rip-0x6f7fc]; cmove rax, rdx; ret; 
0x0000000012774f: lea edx, [rip-0x6f9c5]; lea rax, [rip-0x6f8ec]; cmove rax, rdx; ret; 
0x00000000107d9c: lea edx, [rip-0x72]; test byte ptr [rax+0x96], 0x80; lea rax, [rip-0xc0]; cmove rax, rdx; ret; 
0x000000000cce59: lea edx, [rip-0xdf]; cmove rax, rdx; add rsp, 0x58; ret; 
0x000000000ccf79: lea edx, [rip-0xef]; cmove rax, rdx; add rsp, 0x58; ret; 
0x000000000b7e47: lea edx, [rsi+rcx]; cmp rdi, rdx; jb short 0x00000000000b7e52; rep movsb [rdi], [rsi]; ret; 
0x000000000500d5: lea edx, [rsp+0x10]; lea rsi, [rip+0x160]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000014b651: lea edx, [rsp+0x18]; mov esi, 0x6; call qword ptr [rax+0x28]; 
0x0000000014b618: lea edx, [rsp+0x18]; mov esi, 0x6; mov rax, [rdi+0x8]; call qword ptr [rax+0x28]; 
0x0000000014b5fb: lea edx, [rsp+0x20]; mov esi, 0x4; movdqa xmm0, [rip+0x6b684]; movaps [rsp+0x20], xmm0; call qword ptr [rax+0x28]; 
0x0000000010e7b5: lea edx, [rsp+0x30]; mov eax, 0x10; syscall; 
0x0000000010e359: lea edx, [rsp+0x8]; mov esi, 0x10; mov eax, 0x48; syscall; 
0x0000000014b6d5: lea edx, [rsp+0xc]; mov esi, 0xd; call qword ptr [rax+0x28]; 
0x000000001430c4: lea esi, [r12+0x3]; mov rdi, rbp; and esi, 0xfffffffc; call qword ptr [rax+0x30]; 
0x00000000142fd5: lea esi, [rax+rdx+0x28]; mov rax, [rdi+0x8]; call qword ptr [rax+0x30]; 
0x0000000014ca1d: lea esi, [rbp+0x8]; mov rdi, r15; call qword ptr [rdx+0x10]; 
0x00000000126d6a: lea esi, [rbp-0x20]; lea rdi, [rip-0x184]; call rax; 
0x000000000e1e00: lea esi, [rbp-0x2e0]; mov rdi, r15; call qword ptr [r12+0x38]; 
0x000000000fba10: lea esi, [rbp-0x2e0]; mov rdi, r15; call qword ptr [r12+0x40]; 
0x000000000e3335: lea esi, [rbp-0x450]; call qword ptr [rbx+0x40]; 
0x00000000148775: lea esi, [rbx+0x18]; mov rdi, rbp; call qword ptr [rax+0x48]; 
0x00000000099e4c: lea esi, [rbx+0x1]; mov [rbp], rax; test rax, rax; je 0x0000000000099f30; call rax; 
0x00000000082a00: lea esi, [rcx+0x4]; mov [rdx+0x20], rsi; mov [rcx], eax; ret; 
0x000000000596bb: lea esi, [rdi+0x3b0]; mov edi, 0x3004; mov eax, 0x9e; syscall; 
0x00000000141334: lea esi, [rdi+0x48]; mov rdi, r8; mov rax, [rax+0x18]; jmp rax; 
0x0000000007ce7d: lea esi, [rip+0x12b691]; movzx edx, dl; movsxd rdx, [rsi+rdx*4]; add rdx, rsi; notrack jmp rdx; 
0x0000000007ba6c: lea esi, [rip+0x12bb4e]; movsxd rcx, [rsi+rcx*4]; lea rsi, [rip-0x125d]; add rcx, rsi; jmp rcx; 
0x0000000007b323: lea esi, [rip+0x12c217]; lea rdi, [rip-0xb10]; movsxd rcx, [rsi+rcx*4]; add rcx, rdi; jmp rcx; 
0x0000000006a988: lea esi, [rip+0x13c42e]; movsxd rax, [rsi+rbx*4]; add rax, rsi; notrack jmp rax; 
0x000000000500da: lea esi, [rip+0x160]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003effa: lea esi, [rip+0x162fa0]; mov edx, edx; movsxd rdx, [rsi+rdx*4]; add rdx, rsi; notrack jmp rdx; 
0x0000000008061e: lea esi, [rip+0x25c]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000010746e: lea esi, [rip+0xa4dec]; movups [rsp+0xc8], xmm0; mov [rsp+0xe8], eax; mov eax, 0xe; syscall; 
0x000000000f59fa: lea esi, [rip+0xb55b4]; movsxd rax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x000000000e46ec: lea esi, [rip+0xc62f2]; movsxd rax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x000000000debed: lea esi, [rip+0xcf5ef]; mov eax, 0x142; syscall; 
0x000000000d6720: lea esi, [rip+0xd37f6]; mov edx, ecx; movsxd rax, [rsi+rdx*4]; add rax, rsi; notrack jmp rax; 
0x000000000d4291: lea esi, [rip+0xd5a99]; movzx edx, r10b; movsxd rdx, [rsi+rdx*4]; add rdx, rsi; notrack jmp rdx; 
0x000000000b8453: lea esi, [rip+0xf1003]; movsxd rax, [rsi+rdi*4]; add rax, rsi; notrack jmp rax; 
0x0000000014147a: lea esi, [rip-0x100]; lea rdi, [rip+0xa77f9]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000008d666: lea esi, [rip-0x11c]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000014cec8: lea esi, [rip-0x11e]; lea rdi, [rip+0x9c00b]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000007ba77: lea esi, [rip-0x125d]; add rcx, rsi; jmp rcx; 
0x00000000126db8: lea esi, [rip-0x14e]; lea rdi, [rip+0xc10e3]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000008f0a3: lea esi, [rip-0x1b59]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000014cf80: lea esi, [rip-0x1d6]; lea rdi, [rip+0x9bf53]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000008f3db: lea esi, [rip-0x1e91]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000008f76f: lea esi, [rip-0x2225]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000014d050: lea esi, [rip-0x2a6]; lea rdi, [rip+0x9be83]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000014d120: lea esi, [rip-0x376]; lea rdi, [rip+0x9bdb3]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000080c1f: lea esi, [rip-0x3a5]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000005285e: lea esi, [rip-0x3c4]; lea rdi, [rip+0x193d5d]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000013bac6: lea esi, [rip-0x43c]; lea rdi, [rip+0xace79]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000014d1f0: lea esi, [rip-0x446]; lea rdi, [rip+0x9bce3]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000133404: lea esi, [rip-0x4a]; lea rdi, [rip+0xb516b]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000008db4d: lea esi, [rip-0x603]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000002bb66: lea esi, [rip-0x61c]; lea rdi, [rip+0x1b9b29]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000075795: lea esi, [rip-0x9b3]; mov dword ptr [rsp+0x48], 0x1; mov rbx, rdi; jmp rsi; 
0x00000000100ae4: lea esi, [rip-0xdea]; lea rdi, [rip+0xe6ad3]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000534b9: lea esi, [rsi+0x128]; mov edi, 0x2; mov r10d, 0x8; mov eax, 0xe; syscall; 
0x000000000b7e58: lea esi, [rsi+rcx-0x1]; std; rep movsb [rdi], [rsi]; cld; ret; 
0x000000001495dc: lea esi, [rsp+0x10]; call qword ptr [rax+0x10]; 
0x000000001503ad: lea esi, [rsp+0x10]; call qword ptr [rax]; 
0x00000000150353: lea esi, [rsp+0x10]; mov [rsp+0x10], rax; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x0000000014bd76: lea esi, [rsp+0x10]; mov edi, eax; call rbp; 
0x0000000014fbbd: lea esi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax+0x8]; 
0x0000000008ae42: lea esi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax+0x90]; 
0x0000000014fb64: lea esi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax]; 
0x0000000008b4ac: lea esi, [rsp+0x20]; mov rdi, rbp; call qword ptr [rax+0x90]; 
0x000000000528d8: lea esi, [rsp+0x24]; mov edi, 0x1; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000107558: lea esi, [rsp+0x2c]; mov edi, 0x1; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000085a78: lea esi, [rsp+0x30]; mov rdi, r15; call qword ptr [r14+0x90]; 
0x000000001430c5: lea esi, [rsp+0x3]; mov rdi, rbp; and esi, 0xfffffffc; call qword ptr [rax+0x30]; 
0x00000000150f45: lea esi, [rsp+0x4]; call qword ptr [rax+0x40]; 
0x00000000150f64: lea esi, [rsp+0x4]; mov [rsp+0x4], eax; mov rax, [rdi+0x8]; call qword ptr [rax+0x48]; 
0x0000000005027d: lea esi, [rsp+0x4]; mov edi, 0x1; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000150afb: lea esi, [rsp+0x4]; mov rdi, rbp; call qword ptr [rax+0x40]; 
0x00000000150b4c: lea esi, [rsp+0x4]; mov rdi, rbp; call qword ptr [rax+0x48]; 
0x0000000014a864: lea esi, [rsp+0x88]; mov rdi, r15; add dword ptr [rax], 0x1; mov rax, [rbx+0x60]; call qword ptr [rax+0x8]; 
0x00000000143de8: lea esi, [rsp+0x8]; call qword ptr [rax]; 
0x0000000007f42e: lea esi, [rsp+0x8]; call rax; 
0x0000000014cc66: lea esi, [rsp+0x8]; mov rdi, rbp; call qword ptr [rax+0x10]; 
0x00000000143e33: lea esi, [rsp+0x8]; mov rdi, rbp; call qword ptr [rax+0x8]; 
0x000000001486d6: lea esi, [rsp+0xc]; mov rdi, rbp; call qword ptr [rax+0x48]; 
0x00000000129624: lea esi, [rsp-0x18]; mov eax, 0x83; syscall; 
0x000000000dd134: lea esp, [rbp-0x10]; pop r12; pop r13; pop rbp; ret; 
0x000000000deea1: lea esp, [rbp-0x10]; pop rbx; pop r12; pop rbp; ret; 
0x00000000143796: lea esp, [rbx+0x23b0]; mov dword ptr [rbx+0x23b0], 0x0; mov rdi, r12; call qword ptr [rax+0x28]; 
0x00000000042cc4: lea esp, [rcx+rax]; mov r13, rax; mov rdi, r12; call rbx; 
0x000000000b6df3: lea esp, [rdi+rcx]; add [rcx+0x63], cl; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000044b42: lea esp, [rip+0x1a0ae8]; cmp rbx, r12; jae short 0x0000000000044b5b; nop [rax]; call qword ptr [rbx]; 
0x0000000015c7b7: lea esp, [rsi+0x8]; add [rdi+rax*8], ah; add [rax], al; add [rax-0x1], bh; ret; 
0x000000000596b7: lea esp, [rsi+0x8]; lea rsi, [rdi+0x3b0]; mov edi, 0x3004; mov eax, 0x9e; syscall; 
0x000000000a52e5: lea r10, [r10+r9]; notrack jmp r10; 
0x000000000a69fa: lea r10, [rip+0x1022c7]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x000000000a52da: lea r10, [rip+0x103967]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000008c75b: lea r10, [rip+0x11c21e]; movzx eax, al; movsxd rax, [r10+rax*4]; add rax, r10; notrack jmp rax; 
0x0000000008c7a1: lea r10, [rip+0x11c233]; movzx eax, al; movsxd rax, [r10+rax*4]; add rax, r10; notrack jmp rax; 
0x0000000008c7a2: lea r10, [rip+0x11c233]; movzx eax, al; movsxd rax, [r10+rax*4]; add rax, r10; notrack jmp rax; 
0x0000000008c7f7: lea r10, [rip+0x11c23a]; movzx eax, al; movsxd rax, [r10+rax*4]; add rax, r10; notrack jmp rax; 
0x0000000008c847: lea r10, [rip+0x11c246]; movzx eax, al; movsxd rax, [r10+rax*4]; add rax, r10; notrack jmp rax; 
0x0000000008c897: lea r10, [rip+0x11c252]; movzx eax, al; movsxd rax, [r10+rax*4]; add rax, r10; notrack jmp rax; 
0x0000000008c8e7: lea r10, [rip+0x11c25e]; movzx eax, al; movsxd rax, [r10+rax*4]; add rax, r10; notrack jmp rax; 
0x000000001802d6: lea r10, [rip+0x382b3]; movsxd r9, [r10+r9*4]; vpcmpeqb xmm0, xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000017ec36: lea r10, [rip+0x39913]; movsxd r9, [r10+r9*4]; vpcmpeqb xmm0, xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000017b406: lea r10, [rip+0x3c103]; movsxd r9, [r10+r9*4]; pcmpeqb xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000016c75a: lea r10, [rip+0x3c6a7]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000179836: lea r10, [rip+0x3dc93]; movsxd r9, [r10+r9*4]; pcmpeqb xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000016a5da: lea r10, [rip+0x3e7a7]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x000000001787f6: lea r10, [rip+0x3ec93]; movsxd r9, [r10+r9*4]; pcmpeqb xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000177a26: lea r10, [rip+0x3fa23]; movsxd r9, [r10+r9*4]; pcmpeqb xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000015e22a: lea r10, [rip+0x4aad7]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000015cf9a: lea r10, [rip+0x4bce7]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x000000000ab24a: lea r10, [rip+0xfdb77]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x000000000a8fda: lea r10, [rip+0xffd67]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000003f2dd: lea r11, [rip+0x162cf4]; movzx r10d, r10b; movsxd r10, [r11+r10*4]; add r10, r11; notrack jmp r10; 
0x00000000189093: lea r11, [rip+0x2e5f6]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000189019: lea r11, [rip+0x2e670]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000188f8a: lea r11, [rip+0x2e6ff]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000188d7f: lea r11, [rip+0x2e90a]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000188c4d: lea r11, [rip+0x2ea3c]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000188b87: lea r11, [rip+0x2eb02]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000188b09: lea r11, [rip+0x2eb80]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000188a74: lea r11, [rip+0x2ec15]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000188877: lea r11, [rip+0x2ee12]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000188745: lea r11, [rip+0x2ef44]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000188648: lea r11, [rip+0x2f041]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000187a63: lea r11, [rip+0x2fae6]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x000000001879e9: lea r11, [rip+0x2fb60]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018795a: lea r11, [rip+0x2fbef]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018774f: lea r11, [rip+0x2fdfa]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018761d: lea r11, [rip+0x2ff2c]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000187557: lea r11, [rip+0x2fff2]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x000000001874d9: lea r11, [rip+0x30070]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000187444: lea r11, [rip+0x30105]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000187247: lea r11, [rip+0x30302]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000187115: lea r11, [rip+0x30434]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018700a: lea r11, [rip+0x3053f]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x000000001695a1: lea r11, [rip+0x4eaa8]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169243: lea r11, [rip+0x4ee06]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001693ee: lea r11, [rip+0x4ee9b]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001690c3: lea r11, [rip+0x4ef86]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169186: lea r11, [rip+0x4f103]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168f43: lea r11, [rip+0x4f106]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169006: lea r11, [rip+0x4f283]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168dc3: lea r11, [rip+0x4f286]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168e86: lea r11, [rip+0x4f403]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168c43: lea r11, [rip+0x4f406]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168d07: lea r11, [rip+0x4f582]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168ac3: lea r11, [rip+0x4f586]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168b86: lea r11, [rip+0x4f703]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168943: lea r11, [rip+0x4f706]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168a06: lea r11, [rip+0x4f883]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001687c3: lea r11, [rip+0x4f886]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168886: lea r11, [rip+0x4fa03]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168643: lea r11, [rip+0x4fa06]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168706: lea r11, [rip+0x4fb83]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001684c3: lea r11, [rip+0x4fb86]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168586: lea r11, [rip+0x4fd03]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168343: lea r11, [rip+0x4fd06]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168406: lea r11, [rip+0x4fe83]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001681c3: lea r11, [rip+0x4fe86]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168286: lea r11, [rip+0x50003]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168043: lea r11, [rip+0x50006]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168106: lea r11, [rip+0x50183]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000167ec3: lea r11, [rip+0x50186]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000167f86: lea r11, [rip+0x50303]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000167d43: lea r11, [rip+0x50306]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000167bca: lea r11, [rip+0x5047f]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000167e06: lea r11, [rip+0x50483]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000167c86: lea r11, [rip+0x50603]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001679bf: lea r11, [rip+0x5068a]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000167b49: lea r11, [rip+0x50740]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001679e2: lea r11, [rip+0x508a7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000167a9f: lea r11, [rip+0x50a6a]; sub rdx, 0x80; movsxd r9, [r11+r9*4]; add r9, r11; notrack jmp r9; 
0x00000000167a38: lea r11, [rip+0x50a91]; sub rdx, 0x80; movsxd r9, [r11+r9*4]; add r9, r11; notrack jmp r9; 
0x00000000166a6d: lea r11, [rip+0x510dc]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166743: lea r11, [rip+0x51406]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001668da: lea r11, [rip+0x514af]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001665c3: lea r11, [rip+0x51586]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166686: lea r11, [rip+0x51703]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166443: lea r11, [rip+0x51706]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166506: lea r11, [rip+0x51883]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001662c3: lea r11, [rip+0x51886]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166386: lea r11, [rip+0x51a03]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166143: lea r11, [rip+0x51a06]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166207: lea r11, [rip+0x51b82]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165fc3: lea r11, [rip+0x51b86]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166086: lea r11, [rip+0x51d03]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165e43: lea r11, [rip+0x51d06]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165f06: lea r11, [rip+0x51e83]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165cc3: lea r11, [rip+0x51e86]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165d86: lea r11, [rip+0x52003]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165b43: lea r11, [rip+0x52006]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165c06: lea r11, [rip+0x52183]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001659c3: lea r11, [rip+0x52186]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165a86: lea r11, [rip+0x52303]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165843: lea r11, [rip+0x52306]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165906: lea r11, [rip+0x52483]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001656c3: lea r11, [rip+0x52486]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165786: lea r11, [rip+0x52603]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165543: lea r11, [rip+0x52606]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165606: lea r11, [rip+0x52783]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001653c3: lea r11, [rip+0x52786]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165486: lea r11, [rip+0x52903]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165243: lea r11, [rip+0x52906]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001650ca: lea r11, [rip+0x52a7f]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165306: lea r11, [rip+0x52a83]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000164e63: lea r11, [rip+0x52b25]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000164da7: lea r11, [rip+0x52be2]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165186: lea r11, [rip+0x52c03]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000164edf: lea r11, [rip+0x52c6a]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000164cbc: lea r11, [rip+0x52ccd]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165049: lea r11, [rip+0x52d40]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000164bf1: lea r11, [rip+0x52d98]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000164ecb: lea r11, [rip+0x52ebe]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000164f9f: lea r11, [rip+0x5306a]; sub rdx, 0x80; movsxd r9, [r11+r9*4]; add r9, r11; notrack jmp r9; 
0x00000000164f3d: lea r11, [rip+0x5308c]; sub rdx, 0x80; movsxd r9, [r11+r9*4]; add r9, r11; notrack jmp r9; 
0x00000000163bd2: lea r11, [rip+0x53db7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000163b34: lea r11, [rip+0x53e55]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000163a82: lea r11, [rip+0x53f07]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001639e4: lea r11, [rip+0x53fa5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000163932: lea r11, [rip+0x54057]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000163894: lea r11, [rip+0x540f5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001637e2: lea r11, [rip+0x541a7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000163744: lea r11, [rip+0x54245]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000163692: lea r11, [rip+0x542f7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001635f4: lea r11, [rip+0x54395]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000163542: lea r11, [rip+0x54447]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001634a4: lea r11, [rip+0x544e5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001633f2: lea r11, [rip+0x54597]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000163354: lea r11, [rip+0x54635]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001632a2: lea r11, [rip+0x546e7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000163207: lea r11, [rip+0x54782]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000163152: lea r11, [rip+0x54837]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001630b4: lea r11, [rip+0x548d5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000163002: lea r11, [rip+0x54987]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162f64: lea r11, [rip+0x54a25]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162eb2: lea r11, [rip+0x54ad7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162e14: lea r11, [rip+0x54b75]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162d62: lea r11, [rip+0x54c27]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162cc4: lea r11, [rip+0x54cc5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162c12: lea r11, [rip+0x54d77]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162b74: lea r11, [rip+0x54e15]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162ac2: lea r11, [rip+0x54ec7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162a24: lea r11, [rip+0x54f65]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162972: lea r11, [rip+0x55017]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001628d4: lea r11, [rip+0x550b5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162826: lea r11, [rip+0x55163]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162734: lea r11, [rip+0x55254]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162675: lea r11, [rip+0x55313]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016260c: lea r11, [rip+0x5537d]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016250d: lea r11, [rip+0x5547c]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001622d3: lea r11, [rip+0x554f6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162448: lea r11, [rip+0x55541]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001621f9: lea r11, [rip+0x555d0]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001623d5: lea r11, [rip+0x55734]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x0000000016237b: lea r11, [rip+0x5574e]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x000000001611f2: lea r11, [rip+0x565d7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000161154: lea r11, [rip+0x56675]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001610a2: lea r11, [rip+0x56727]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000161004: lea r11, [rip+0x567c5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160f52: lea r11, [rip+0x56877]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160eb4: lea r11, [rip+0x56915]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160e02: lea r11, [rip+0x569c7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160d64: lea r11, [rip+0x56a65]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160cb2: lea r11, [rip+0x56b17]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160c14: lea r11, [rip+0x56bb5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160b62: lea r11, [rip+0x56c67]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160ac4: lea r11, [rip+0x56d05]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160a12: lea r11, [rip+0x56db7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160974: lea r11, [rip+0x56e55]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001608c2: lea r11, [rip+0x56f07]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160827: lea r11, [rip+0x56fa2]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160772: lea r11, [rip+0x57057]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001606d4: lea r11, [rip+0x570f5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160622: lea r11, [rip+0x571a7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160584: lea r11, [rip+0x57245]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001604d2: lea r11, [rip+0x572f7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160434: lea r11, [rip+0x57395]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160382: lea r11, [rip+0x57447]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001602e4: lea r11, [rip+0x574e5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160232: lea r11, [rip+0x57597]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160194: lea r11, [rip+0x57635]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001600e2: lea r11, [rip+0x576e7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160044: lea r11, [rip+0x57785]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000015ff92: lea r11, [rip+0x57837]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000015fef4: lea r11, [rip+0x578d5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000015fe46: lea r11, [rip+0x57983]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000015fd54: lea r11, [rip+0x57a74]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000015fc95: lea r11, [rip+0x57b33]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000015fc2c: lea r11, [rip+0x57b9d]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000015fb2d: lea r11, [rip+0x57c9c]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000015fa68: lea r11, [rip+0x57d61]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000015f9f5: lea r11, [rip+0x57f54]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x0000000015f994: lea r11, [rip+0x57f75]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x000000000b76b9: lea r11, [rip+0xf1c44]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6f35: lea r11, [rip+0xf23c8]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6f0c: lea r11, [rip+0xf23f1]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6eec: lea r11, [rip+0xf2411]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6ec3: lea r11, [rip+0xf243a]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6e94: lea r11, [rip+0xf2469]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6e75: lea r11, [rip+0xf2488]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6df0: lea r11, [rip+0xf248d]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6dd5: lea r11, [rip+0xf24a8]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6e53: lea r11, [rip+0xf24aa]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6e23: lea r11, [rip+0xf24da]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6da0: lea r11, [rip+0xf24dd]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6d74: lea r11, [rip+0xf2509]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6d5e: lea r11, [rip+0xf251f]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6d3c: lea r11, [rip+0xf2541]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6d17: lea r11, [rip+0xf2566]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6cfa: lea r11, [rip+0xf2583]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6c83: lea r11, [rip+0xf25fa]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6445: lea r11, [rip+0xf2db8]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6410: lea r11, [rip+0xf2ded]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b63e4: lea r11, [rip+0xf2e19]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b63ce: lea r11, [rip+0xf2e2f]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b63ac: lea r11, [rip+0xf2e51]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6387: lea r11, [rip+0xf2e76]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b636a: lea r11, [rip+0xf2e93]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6312: lea r11, [rip+0xf2eeb]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b5c59: lea r11, [rip+0xf34d0]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b5b60: lea r11, [rip+0xf3659]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b5b4a: lea r11, [rip+0xf366f]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b5b2a: lea r11, [rip+0xf368f]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b5075: lea r11, [rip+0xf40b4]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b504c: lea r11, [rip+0xf40dd]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b502c: lea r11, [rip+0xf40fd]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b5003: lea r11, [rip+0xf4126]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b4fd4: lea r11, [rip+0xf4155]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b4fb5: lea r11, [rip+0xf4174]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b4f30: lea r11, [rip+0xf4179]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b4f93: lea r11, [rip+0xf4196]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b4f63: lea r11, [rip+0xf41c6]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b4e4e: lea r11, [rip+0xf425b]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b4e20: lea r11, [rip+0xf4289]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b4df7: lea r11, [rip+0xf42b2]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b4775: lea r11, [rip+0xf48a8]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b4740: lea r11, [rip+0xf48dd]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b4714: lea r11, [rip+0xf4909]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b46fe: lea r11, [rip+0xf491f]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b46dc: lea r11, [rip+0xf4941]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b46b7: lea r11, [rip+0xf4966]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b469a: lea r11, [rip+0xf4983]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b4642: lea r11, [rip+0xf49db]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b4409: lea r11, [rip+0xf4b40]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b4310: lea r11, [rip+0xf4cc9]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b42fa: lea r11, [rip+0xf4cdf]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b42da: lea r11, [rip+0xf4cff]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b3995: lea r11, [rip+0xf55b4]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b396c: lea r11, [rip+0xf55dd]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b394c: lea r11, [rip+0xf55fd]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b3923: lea r11, [rip+0xf5626]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b38f4: lea r11, [rip+0xf5655]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b38d5: lea r11, [rip+0xf5674]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b3850: lea r11, [rip+0xf5679]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b38b3: lea r11, [rip+0xf5696]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b3883: lea r11, [rip+0xf56c6]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b377e: lea r11, [rip+0xf574b]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b3750: lea r11, [rip+0xf5779]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b3727: lea r11, [rip+0xf57a2]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b3135: lea r11, [rip+0xf5d0c]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b3100: lea r11, [rip+0xf5d41]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b30d4: lea r11, [rip+0xf5d6d]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b30be: lea r11, [rip+0xf5d83]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b309c: lea r11, [rip+0xf5da5]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b3077: lea r11, [rip+0xf5dca]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b305a: lea r11, [rip+0xf5de7]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b3002: lea r11, [rip+0xf5e3f]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000143795: lea r12, [rbx+0x23b0]; mov dword ptr [rbx+0x23b0], 0x0; mov rdi, r12; call qword ptr [rax+0x28]; 
0x00000000042cc3: lea r12, [rcx+rax]; mov r13, rax; mov rdi, r12; call rbx; 
0x00000000044b41: lea r12, [rip+0x1a0ae8]; cmp rbx, r12; jae short 0x0000000000044b5b; nop [rax]; call qword ptr [rbx]; 
0x0000000014e732: lea r13, [rbp+0x10]; mov dword ptr [rbp+0x10], 0x0; mov rdi, r13; call qword ptr [rax+0x28]; 
0x0000000014eabc: lea r13, [rbx+0x10]; xor esi, esi; mov dword ptr [rbx+0x10], 0x1; mov rdi, r13; call qword ptr [rax+0x28]; 
0x000000001417b4: lea r13, [rsp+0x68]; mov rsi, r13; call qword ptr [rax+0x10]; 
0x000000001416ab: lea r15, [rsp+0x50]; call qword ptr [rax+0x20]; 
0x000000001375a6: lea r8, [rdi+rsi+0x8]; mov rax, r8; ret; 
0x000000000feed0: lea r8, [rdx+r13]; mov rdi, [rbp-0x1b0]; mov rdx, [r12]; mov rax, [rbp-0x1e0]; call rax; 
0x000000000a4e1d: lea r8, [rip+0x103e00]; mov edx, eax; movsxd rdx, [r8+rdx*4]; add rdx, r8; notrack jmp rdx; 
0x0000000014201f: lea r8, [rip+0x17a]; mov esi, 0x4; mov rdi, rbp; lea r9, [rsp+0x20]; call qword ptr [rax]; 
0x00000000050b2c: lea r8, [rip+0x1959cd]; mov byte ptr [r8+rax], 0x0; mov rax, r8; ret; 
0x00000000142f25: lea r8, [rip+0x698d4]; mov ecx, eax; movsxd rdx, [r8+rcx*4]; add rdx, r8; notrack jmp rdx; 
0x000000001420db: lea r8, [rip+0xbe]; xor ecx, ecx; lea rdx, [rip+0xd805]; lea r9, [rsp+0x20]; call qword ptr [rax]; 
0x00000000141e25: lea r8, [rip+0xe2d4]; push qword ptr [rip+0x74d26]; push qword ptr [rip+0x74d18]; lea r9, [rsp+0x2c]; call qword ptr [rax]; 
0x0000000014b7ee: lea r8, [rip-0x5d05]; lea rdx, [rip-0x5cec]; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x0000000014c043: lea r8, [rip-0x929a]; lea rdx, [rip+0x389f]; call qword ptr [rax]; 
0x000000000cce2e: lea r8, [rsp+0x40]; call qword ptr [rax+0x270]; 
0x00000000033d46: lea r8, [rsp+0xa0]; call r15; 
0x00000000143f5c: lea r8d, [rdx+rax]; pop rbx; pop rbp; mov eax, r8d; ret; 
0x0000000015f99f: lea r9, [r11+r9]; notrack jmp r9; 
0x0000000015a01d: lea r9, [r11+rsi]; mov esi, [rsp+0x24]; call rax; 
0x0000000015a01c: lea r9, [r11+rsi]; mov esi, [rsp+0x24]; call rax; 
0x0000000015fe70: lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000087134: lea r9, [rbp-0x40]; xor r8d, r8d; mov rcx, r14; mov rdi, r15; call r12; 
0x0000000018dba5: lea r9, [rip+0x2aa58]; movsxd rcx, [r9+rbx*4]; add rcx, r9; notrack jmp rcx; 
0x0000000014b7fc: lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x000000000b97ae: lea r9, [rsp+0x18]; call r13; 
0x000000000b960f: lea r9, [rsp+0x18]; call rbx; 
0x0000000014c240: lea r9, [rsp+0x1c]; call qword ptr [rax]; 
0x0000000014202e: lea r9, [rsp+0x20]; call qword ptr [rax]; 
0x000000000b99b4: lea r9, [rsp+0x20]; call rbx; 
0x00000000086ede: lea r9, [rsp+0x28]; call rbp; 
0x000000000b94a9: lea r9, [rsp+0x28]; call rbx; 
0x0000000014cc4c: lea r9, [rsp+0x2a]; call qword ptr [rax]; 
0x00000000141e38: lea r9, [rsp+0x2c]; call qword ptr [rax]; 
0x000000000b9bee: lea r9, [rsp+0x30]; call rbx; 
0x0000000014ca04: lea r9, [rsp+0x3a]; call qword ptr [rax]; 
0x00000000142549: lea r9, [rsp+0x40]; call qword ptr [rax]; 
0x0000000010ffcb: lea r9, [rsp+0x40]; test eax, eax; jne short 0x0000000000110000; mov eax, 0x10e; syscall; 
0x00000000045de0: lea rax, [r8+rcx*4]; mov [rsi+0x10], r8; mov [rsi+0x28], rax; xor eax, eax; ret; 
0x000000000e0c51: lea rax, [rax+rax-0x1]; ret; 
0x000000000b9298: lea rax, [rax+rbx*4]; pop rbx; pop rbp; pop r12; ret; 
0x000000000a8473: lea rax, [rax+rdi+0x10]; ret; 
0x000000000a8483: lea rax, [rax+rdi+0x20]; ret; 
0x000000000a8963: lea rax, [rax+rdi+0x30]; ret; 
0x000000000a8453: lea rax, [rax+rdi-0x10]; ret; 
0x000000000d95ba: lea rax, [rax+rdx*8]; ret; 
0x000000000992a6: lea rax, [rax-0x8]; ret; 
0x000000000b86cb: lea rax, [rbx+0x1]; pop rbx; ret; 
0x000000000e3de0: lea rax, [rbx+0x2]; pop rbx; pop rbp; pop r12; ret; 
0x000000000e3ce0: lea rax, [rbx+0x8]; pop rbx; pop rbp; pop r12; ret; 
0x00000000110ef6: lea rax, [rcx+0x1]; jne short 0x0000000000110ecf; mov rax, r8; ret; 
0x000000000addac: lea rax, [rcx+rsi]; ret; 
0x000000000b79f3: lea rax, [rcx-0x1]; ret; 
0x000000000b490b: lea rax, [rdi+0x10]; ret; 
0x000000000b52db: lea rax, [rdi+0x10]; sub r8, 0x11; lea rdi, [rdi+0x11]; jne 0x00000000000b5ac0; ret; 
0x000000000b4920: lea rax, [rdi+0x11]; ret; 
0x000000000b5300: lea rax, [rdi+0x11]; sub r8, 0x12; lea rdi, [rdi+0x12]; jne 0x00000000000b5ac0; ret; 
0x000000000b493e: lea rax, [rdi+0x12]; ret; 
0x000000000b532e: lea rax, [rdi+0x12]; sub r8, 0x13; lea rdi, [rdi+0x13]; jne 0x00000000000b5ac0; ret; 
0x000000000b495e: lea rax, [rdi+0x13]; ret; 
0x000000000b535e: lea rax, [rdi+0x13]; sub r8, 0x14; lea rdi, [rdi+0x14]; jne 0x00000000000b5ac0; ret; 
0x000000000b4981: lea rax, [rdi+0x14]; ret; 
0x000000000b5391: lea rax, [rdi+0x14]; sub r8, 0x15; lea rdi, [rdi+0x15]; jne 0x00000000000b5ac0; ret; 
0x000000000b49a0: lea rax, [rdi+0x15]; ret; 
0x000000000b53c0: lea rax, [rdi+0x15]; sub r8, 0x16; lea rdi, [rdi+0x16]; jne 0x00000000000b5ac0; ret; 
0x000000000b49c0: lea rax, [rdi+0x16]; ret; 
0x000000000b53f0: lea rax, [rdi+0x16]; sub r8, 0x17; lea rdi, [rdi+0x17]; jne 0x00000000000b5ac0; ret; 
0x000000000b49e0: lea rax, [rdi+0x17]; ret; 
0x000000000b5420: lea rax, [rdi+0x17]; sub r8, 0x18; lea rdi, [rdi+0x18]; jne 0x00000000000b5ac0; ret; 
0x000000000b4a03: lea rax, [rdi+0x18]; ret; 
0x000000000b5453: lea rax, [rdi+0x18]; sub r8, 0x19; lea rdi, [rdi+0x19]; jne 0x00000000000b5ac0; ret; 
0x000000000b4a28: lea rax, [rdi+0x19]; ret; 
0x000000000b5488: lea rax, [rdi+0x19]; sub r8, 0x1a; lea rdi, [rdi+0x1a]; jne 0x00000000000b5ac0; ret; 
0x000000000b47a6: lea rax, [rdi+0x1]; ret; 
0x000000000b50b6: lea rax, [rdi+0x1]; sub r8, 0x2; lea rdi, [rdi+0x2]; jne 0x00000000000b5ac0; ret; 
0x00000000184696: lea rax, [rdi+0x1]; vzeroupper; ret; 
0x000000000b4a46: lea rax, [rdi+0x1a]; ret; 
0x000000000b54b6: lea rax, [rdi+0x1a]; sub r8, 0x1b; lea rdi, [rdi+0x1b]; jne 0x00000000000b5ac0; ret; 
0x000000000b4a66: lea rax, [rdi+0x1b]; ret; 
0x000000000b54e6: lea rax, [rdi+0x1b]; sub r8, 0x1c; lea rdi, [rdi+0x1c]; jne 0x00000000000b5ac0; ret; 
0x000000000b4a82: lea rax, [rdi+0x1c]; ret; 
0x000000000b5512: lea rax, [rdi+0x1c]; sub r8, 0x1d; lea rdi, [rdi+0x1d]; jne 0x00000000000b5ac0; ret; 
0x000000000b4aa2: lea rax, [rdi+0x1d]; ret; 
0x000000000b5542: lea rax, [rdi+0x1d]; sub r8, 0x1e; lea rdi, [rdi+0x1e]; jne 0x00000000000b5ac0; ret; 
0x000000000b4ac2: lea rax, [rdi+0x1e]; ret; 
0x000000000b5572: lea rax, [rdi+0x1e]; sub r8, 0x1f; lea rdi, [rdi+0x1f]; jne 0x00000000000b5ac0; ret; 
0x000000000b4ae2: lea rax, [rdi+0x1f]; ret; 
0x000000000b55a2: lea rax, [rdi+0x1f]; sub r8, 0x20; lea rdi, [rdi+0x20]; jne 0x00000000000b5ac0; ret; 
0x000000000b5952: lea rax, [rdi+0x20]; ret; 
0x000000000b47b9: lea rax, [rdi+0x2]; ret; 
0x000000000b50d9: lea rax, [rdi+0x2]; sub r8, 0x3; lea rdi, [rdi+0x3]; jne 0x00000000000b5ac0; ret; 
0x000000001846aa: lea rax, [rdi+0x2]; vzeroupper; ret; 
0x000000000b47c4: lea rax, [rdi+0x3]; ret; 
0x000000000b50f4: lea rax, [rdi+0x3]; sub r8, 0x4; lea rdi, [rdi+0x4]; jne 0x00000000000b5ac0; ret; 
0x000000001846c4: lea rax, [rdi+0x3]; vzeroupper; ret; 
0x000000000b5bc8: lea rax, [rdi+0x40]; ret; 
0x00000000184e36: lea rax, [rdi+0x41]; vzeroupper; ret; 
0x000000000b47d7: lea rax, [rdi+0x4]; ret; 
0x000000000b5117: lea rax, [rdi+0x4]; sub r8, 0x5; lea rdi, [rdi+0x5]; jne 0x00000000000b5ac0; ret; 
0x000000000b47ec: lea rax, [rdi+0x5]; ret; 
0x000000000b513c: lea rax, [rdi+0x5]; sub r8, 0x6; lea rdi, [rdi+0x6]; jne 0x00000000000b5ac0; ret; 
0x000000000b480a: lea rax, [rdi+0x6]; ret; 
0x000000000b515a: lea rax, [rdi+0x6]; sub r8, 0x7; lea rdi, [rdi+0x7]; jne 0x00000000000b5ac0; ret; 
0x000000000b4816: lea rax, [rdi+0x7]; ret; 
0x000000000b5176: lea rax, [rdi+0x7]; sub r8, 0x8; lea rdi, [rdi+0x8]; jne 0x00000000000b5ac0; ret; 
0x00000000184fdb: lea rax, [rdi+0x80]; vzeroupper; ret; 
0x000000000b4829: lea rax, [rdi+0x8]; ret; 
0x000000000b5199: lea rax, [rdi+0x8]; sub r8, 0x9; lea rdi, [rdi+0x9]; jne 0x00000000000b5ac0; ret; 
0x000000000b483e: lea rax, [rdi+0x9]; ret; 
0x000000000b51be: lea rax, [rdi+0x9]; sub r8, 0xa; lea rdi, [rdi+0xa]; jne 0x00000000000b5ac0; ret; 
0x000000000b485c: lea rax, [rdi+0xa]; ret; 
0x000000000b51ec: lea rax, [rdi+0xa]; sub r8, 0xb; lea rdi, [rdi+0xb]; jne 0x00000000000b5ac0; ret; 
0x000000000b487c: lea rax, [rdi+0xb]; ret; 
0x000000000b520c: lea rax, [rdi+0xb]; sub r8, 0xc; lea rdi, [rdi+0xc]; jne 0x00000000000b5ac0; ret; 
0x000000000b489e: lea rax, [rdi+0xc]; ret; 
0x000000000b522e: lea rax, [rdi+0xc]; sub r8, 0xd; lea rdi, [rdi+0xd]; jne 0x00000000000b5ac0; ret; 
0x000000000b48be: lea rax, [rdi+0xd]; ret; 
0x000000000b525e: lea rax, [rdi+0xd]; sub r8, 0xe; lea rdi, [rdi+0xe]; jne 0x00000000000b5ac0; ret; 
0x000000000b48de: lea rax, [rdi+0xe]; ret; 
0x000000000b528e: lea rax, [rdi+0xe]; sub r8, 0xf; lea rdi, [rdi+0xf]; jne 0x00000000000b5ac0; ret; 
0x000000000b48f8: lea rax, [rdi+0xf]; ret; 
0x000000000b52b8: lea rax, [rdi+0xf]; sub r8, 0x10; lea rdi, [rdi+0x10]; jne 0x00000000000b5ac0; ret; 
0x00000000184d92: lea rax, [rdi+r8]; vzeroupper; ret; 
0x000000000a84a8: lea rax, [rdi+rax+0x10]; ret; 
0x00000000186876: lea rax, [rdi+rax+0x20]; cmp esi, [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x00000000181d36: lea rax, [rdi+rax+0x20]; cmp sil, [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x000000000a84b8: lea rax, [rdi+rax+0x20]; ret; 
0x000000001366db: lea rax, [rdi+rax+0x2]; cmp rdx, rax; sbb eax, eax; ret; 
0x000000000a83b2: lea rax, [rdi+rax+0x30]; ret; 
0x00000000186896: lea rax, [rdi+rax+0x40]; cmp esi, [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x00000000181d56: lea rax, [rdi+rax+0x40]; cmp sil, [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x000000001868d4: lea rax, [rdi+rax+0x60]; cmp esi, [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x00000000181d94: lea rax, [rdi+rax+0x60]; cmp sil, [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x000000000a4e65: lea rax, [rdi+rax-0x1]; mov [rdi], dx; movzx edx, byte ptr [rsp-0x6]; mov [rdi+0x2], dl; ret; 
0x000000000a4e94: lea rax, [rdi+rax-0x1]; mov [rdi], edx; movzx edx, byte ptr [rsp-0xc]; mov [rdi+0x4], dl; ret; 
0x000000000a4eac: lea rax, [rdi+rax-0x1]; mov [rdi], edx; movzx edx, word ptr [rsp-0x14]; mov [rdi+0x4], dx; ret; 
0x000000000a4e38: lea rax, [rdi+rax-0x1]; ret; 
0x000000001820e4: lea rax, [rdi+rax-0x20]; vzeroupper; ret; 
0x000000000ad7bf: lea rax, [rdi+rax]; cmp [rax], sil; cmovne rax, rdx; ret; 
0x0000000018673c: lea rax, [rdi+rax]; cmp esi, [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x00000000181bfc: lea rax, [rdi+rax]; cmp sil, [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x000000000ad9ea: lea rax, [rdi+rax]; ret; 
0x000000001846dc: lea rax, [rdi+rdx]; vzeroupper; ret; 
0x000000000adca8: lea rax, [rdi+rsi]; ret; 
0x000000000cb4ed: lea rax, [rdi-0x10]; ret; 
0x000000000cb629: lea rax, [rdi-0x10]; ret; 
0x000000000cb670: lea rax, [rdi-0x4]; ret; 
0x000000000cb660: lea rax, [rdi-0x8]; ret; 
0x000000000cb650: lea rax, [rdi-0xc]; ret; 
0x000000000b4792: lea rax, [rdi]; ret; 
0x000000000b5092: lea rax, [rdi]; sub r8, 0x1; lea rdi, [rdi+0x1]; jne 0x00000000000b5ac0; ret; 
0x00000000184614: lea rax, [rdi]; vzeroupper; ret; 
0x00000000174576: lea rax, [rdx+0x1]; ret; 
0x0000000017458c: lea rax, [rdx+0x2]; ret; 
0x000000001745a4: lea rax, [rdx+0x3]; ret; 
0x000000001745ba: lea rax, [rdx+0x4]; ret; 
0x000000001745cc: lea rax, [rdx+0x5]; ret; 
0x000000001745ea: lea rax, [rdx+0x6]; ret; 
0x000000001769b1: lea rax, [rdx+0x7]; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x000000001744f6: lea rax, [rdx+0x7]; ret; 
0x000000001745fc: lea rax, [rdx+0x8]; ret; 
0x0000000017461c: lea rax, [rdx+0x9]; ret; 
0x0000000017463c: lea rax, [rdx+0xa]; ret; 
0x0000000017465c: lea rax, [rdx+0xb]; ret; 
0x0000000017467e: lea rax, [rdx+0xc]; ret; 
0x0000000017469e: lea rax, [rdx+0xd]; ret; 
0x00000000176906: lea rax, [rdx+0xe]; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x000000001746be: lea rax, [rdx+0xe]; ret; 
0x0000000017454e: lea rax, [rdx+0xf]; ret; 
0x00000000099319: lea rax, [rdx-0x10]; ret; 
0x00000000174564: lea rax, [rdx]; ret; 
0x000000000b91c7: lea rax, [rip+0x10e62]; lea rdx, [rip+0xd2eab]; cmovne rax, rdx; ret; 
0x000000000ba407: lea rax, [rip+0x114a2]; lea rdx, [rip+0x1127b]; cmovne rax, rdx; ret; 
0x0000000009c1b2: lea rax, [rip+0x115b6]; lea rdx, [rip+0xee42f]; cmovne rax, rdx; ret; 
0x000000000cc110: lea rax, [rip+0x11aee9]; add rsp, 0x8; ret; 
0x000000000b8ce9: lea rax, [rip+0x124c0]; cmovne rax, rdx; ret; 
0x000000000784a3: lea rax, [rip+0x12ee96]; movsxd rax, [rax+rdx*4]; lea rdx, [rip-0x3e9]; add rax, rdx; jmp rax; 
0x000000000a50de: lea rax, [rip+0x13c9db]; mov rax, [rax+rdi*8]; ret; 
0x000000000a50fe: lea rax, [rip+0x13cbdb]; mov rax, [rax+rdi*8]; ret; 
0x00000000093149: lea rax, [rip+0x150a50]; add rsp, 0x10; pop rbp; ret; 
0x00000000090bbf: lea rax, [rip+0x155c0a]; pop rbx; mov dword ptr [rip+0x155aef], 0x1; ret; 
0x0000000009d4a2: lea rax, [rip+0x15857]; lea rdx, [rip+0xd5a10]; cmovne rax, rdx; ret; 
0x0000000007cd31: lea rax, [rip+0x164948]; mov rax, [rax+rdi*8]; ret; 
0x0000000009c282: lea rax, [rip+0x16987]; lea rdx, [rip+0xd2900]; cmovne rax, rdx; ret; 
0x00000000037380: lea rax, [rip+0x176e5b]; ret; 
0x00000000037364: lea rax, [rip+0x176e77]; cmp [rdx+0x38], edi; jbe short 0x0000000000037387; mov rax, [rdx+rdi*8+0x40]; ret; 
0x00000000028de4: lea rax, [rip+0x186cbd]; ret; 
0x00000000028dd4: lea rax, [rip+0x18932d]; ret; 
0x0000000009c152: lea rax, [rip+0x19b27]; lea rdx, [rip+0x12110]; cmovne rax, rdx; ret; 
0x00000000046134: lea rax, [rip+0x1a023b]; add rsp, 0x8; ret; 
0x0000000009d079: lea rax, [rip+0x1a660]; cmove rax, rdx; ret; 
0x0000000009d785: lea rax, [rip+0x1a714]; cmove rax, rdx; ret; 
0x0000000009d405: lea rax, [rip+0x1aa74]; cmove rax, rdx; ret; 
0x0000000009d2a5: lea rax, [rip+0x1abf4]; cmove rax, rdx; ret; 
0x000000000358c7: lea rax, [rip+0x1acff2]; mov rax, [rax+rbx*8]; test rax, rax; je short 0x00000000000358d9; call rax; 
0x00000000037312: lea rax, [rip+0x1ae547]; ret; 
0x0000000009d319: lea rax, [rip+0x1aed0]; cmovne rax, rdx; ret; 
0x0000000009c869: lea rax, [rip+0x1b470]; cmovne rax, rdx; ret; 
0x0000000009c739: lea rax, [rip+0x1b4f0]; cmovne rax, rdx; ret; 
0x0000000009c2c9: lea rax, [rip+0x1b8b0]; cmovne rax, rdx; ret; 
0x00000000127701: lea rax, [rip+0x381e8]; lea rdx, [rip+0x3d771]; cmovne rax, rdx; ret; 
0x00000000127561: lea rax, [rip+0x383a8]; lea rdx, [rip+0x3d931]; cmovne rax, rdx; ret; 
0x00000000127631: lea rax, [rip+0x3acb8]; lea rdx, [rip+0x40351]; cmovne rax, rdx; ret; 
0x000000001276dd: lea rax, [rip+0x5da6c]; cmove rax, rdx; ret; 
0x0000000012760d: lea rax, [rip+0x5db5c]; cmove rax, rdx; ret; 
0x0000000012753d: lea rax, [rip+0x5dc2c]; cmove rax, rdx; ret; 
0x000000001277b0: lea rax, [rip+0x5de39]; cmove rax, rdx; ret; 
0x00000000128b6c: lea rax, [rip+0x6186c]; cmove r8, rax; mov rax, r8; ret; 
0x0000000002849b: lea rax, [rip+0x61ede]; xor rax, fs:[0x30]; rol rax, 0x11; mov [rip+0x1be192], rax; ret; 
0x00000000127736: lea rax, [rip+0x62793]; cmove rax, rdx; ret; 
0x00000000127666: lea rax, [rip+0x62883]; cmove rax, rdx; ret; 
0x00000000127596: lea rax, [rip+0x62953]; cmove rax, rdx; ret; 
0x000000001277ec: lea rax, [rip+0x62c8d]; lea rdx, [rip+0x62c16]; cmove rax, rdx; ret; 
0x0000000009d502: lea rax, [rip+0x7c77]; lea rdx, [rip+0xd71c0]; cmovne rax, rdx; ret; 
0x0000000009c6b2: lea rax, [rip+0x8b37]; lea rdx, [rip+0xd3c80]; cmovne rax, rdx; ret; 
0x0000000009c5e2: lea rax, [rip+0x8b47]; lea rdx, [rip+0x138a0]; cmovne rax, rdx; ret; 
0x0000000009c202: lea rax, [rip+0x9047]; lea rdx, [rip+0xc0d00]; cmovne rax, rdx; ret; 
0x0000000011ae92: lea rax, [rip+0x91667]; mov eax, [rax+rdi*4]; ret; 
0x0000000015633d: lea rax, [rip+0x92d7c]; mov edx, 0x0; cmovne rax, rdx; add rsp, 0x8; ret; 
0x0000000014cea3: lea rax, [rip+0x9c055]; mov fs:[rbx], rax; pop rbx; mov dword ptr [rip+0x9c026], 0x2; ret; 
0x0000000009c660: lea rax, [rip+0xa2e9]; lea rdx, [rip+0xc1b12]; cmovne rax, rdx; ret; 
0x000000001414c2: lea rax, [rip+0xa77d7]; ret; 
0x00000000141496: lea rax, [rip+0xa7803]; add rsp, 0x8; ret; 
0x0000000009d60b: lea rax, [rip+0xb8ce]; lea rdx, [rip+0xccec7]; cmovne rax, rdx; ret; 
0x0000000009d1b7: lea rax, [rip+0xb902]; lea rdx, [rip+0xed74b]; cmovne rax, rdx; ret; 
0x0000000009d56b: lea rax, [rip+0xb94e]; lea rdx, [rip+0xccf47]; cmovne rax, rdx; ret; 
0x0000000009d731: lea rax, [rip+0xc21e8]; lea rdx, [rip+0xc7771]; cmovne rax, rdx; ret; 
0x0000000009d3b1: lea rax, [rip+0xc2548]; lea rdx, [rip+0xc7ad1]; cmovne rax, rdx; ret; 
0x0000000009d251: lea rax, [rip+0xc50a8]; lea rdx, [rip+0xca741]; cmovne rax, rdx; ret; 
0x000000000b91e8: lea rax, [rip+0xcc521]; and ch, 0x1; je short 0x00000000000b91b5; ret; 
0x000000000b925c: lea rax, [rip+0xd118c]; cmove r8, rax; mov rax, r8; ret; 
0x00000000114122: lea rax, [rip+0xd3797]; add rsp, 0x18; ret; 
0x000000001140d2: lea rax, [rip+0xd3827]; pop r12; pop r13; ret; 
0x00000000113bca: lea rax, [rip+0xd3c9f]; add rsp, 0x8; ret; 
0x00000000113b6f: lea rax, [rip+0xd3d1a]; pop rbp; pop r12; pop r13; ret; 
0x00000000110b0b: lea rax, [rip+0xd6b66]; add rsp, 0x8; ret; 
0x0000000009d65b: lea rax, [rip+0xdace]; lea rdx, [rip+0xcefd7]; cmovne rax, rdx; ret; 
0x0000000009d5bb: lea rax, [rip+0xdb4e]; lea rdx, [rip+0xcf057]; cmovne rax, rdx; ret; 
0x0000000009c218: lea rax, [rip+0xe1441]; test dh, 0x1; je short 0x000000000009c1ef; ret; 
0x0000000009d1d8: lea rax, [rip+0xe1581]; and ch, 0x1; je short 0x000000000009d1a5; ret; 
0x0000000009c168: lea rax, [rip+0xe64c1]; test dh, 0x1; je short 0x000000000009c13f; ret; 
0x0000000009c5f8: lea rax, [rip+0xe66a1]; test dh, 0x1; je short 0x000000000009c5cf; ret; 
0x0000000009d4b8: lea rax, [rip+0xe6ee1]; test dh, 0x1; je short 0x000000000009d48f; ret; 
0x0000000009d518: lea rax, [rip+0xe7231]; test dh, 0x1; je short 0x000000000009d4ef; ret; 
0x0000000009c6c8: lea rax, [rip+0xe7371]; test dh, 0x1; je short 0x000000000009c69f; ret; 
0x0000000009c298: lea rax, [rip+0xe7411]; test dh, 0x1; je short 0x000000000009c26f; ret; 
0x0000000009d70d: lea rax, [rip+0xe7a6c]; cmove rax, rdx; ret; 
0x0000000009d38d: lea rax, [rip+0xe7dcc]; cmove rax, rdx; ret; 
0x0000000009d22d: lea rax, [rip+0xe7f4c]; cmove rax, rdx; ret; 
0x0000000009d300: lea rax, [rip+0xe82f9]; cmove rax, rdx; ret; 
0x0000000009d766: lea rax, [rip+0xec793]; cmove rax, rdx; ret; 
0x0000000009d3e6: lea rax, [rip+0xecaf3]; cmove rax, rdx; ret; 
0x0000000009d286: lea rax, [rip+0xecc73]; cmove rax, rdx; ret; 
0x0000000009d33c: lea rax, [rip+0xed14d]; lea rdx, [rip+0xed0d6]; cmove rax, rdx; ret; 
0x000000000ccf98: lea rax, [rip-0x10f]; add rsp, 0x58; ret; 
0x000000000cce88: lea rax, [rip-0x10f]; ret; 
0x000000000ccfa8: lea rax, [rip-0x11f]; ret; 
0x000000001277c9: lea rax, [rip-0x6f5f0]; cmovne rax, rdx; ret; 
0x000000001275b5: lea rax, [rip-0x6f72c]; cmove rax, rdx; ret; 
0x00000000127685: lea rax, [rip-0x6f7fc]; cmove rax, rdx; ret; 
0x00000000127755: lea rax, [rip-0x6f8ec]; cmove rax, rdx; ret; 
0x00000000107da9: lea rax, [rip-0xc0]; cmove rax, rdx; ret; 
0x000000000cce78: lea rax, [rip-0xff]; add rsp, 0x58; ret; 
0x0000000011d2d4: lea rax, [rsi+rax*4]; mov eax, [rax+rdx]; shr eax, cl; and eax, 0x1; ret; 
0x00000000119ab0: lea rax, [rsp+0x20]; mov [rsp+0x10], rax; mov eax, 0x9d; syscall; 
0x0000000014ae79: lea rbp, [rsp+0x138]; mov rsi, rbp; mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x10]; 
0x000000001472cc: lea rbp, [rsp+0x68]; mov rsi, rbp; mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x10]; 
0x0000000007a68d: lea rbx, [rip+0x18c]; add rcx, rbx; mov rbx, rdx; xor edx, edx; jmp rcx; 
0x00000000076281: lea rbx, [rip-0x14a0]; add rsi, rbx; mov rbx, rdi; jmp rsi; 
0x0000000007bdc7: lea rbx, [rip-0x15ae]; add rcx, rbx; mov rbx, rsi; jmp rcx; 
0x000000000755ab: lea rbx, [rip-0x7ca]; add rsi, rbx; mov rbx, rdi; jmp rsi; 
0x0000000007b09f: lea rbx, [rip-0x886]; add rcx, rbx; mov rbx, rsi; jmp rcx; 
0x0000000007b0f1: lea rbx, [rip-0x8d8]; add rcx, rbx; mov rbx, rsi; jmp rcx; 
0x0000000007b135: lea rbx, [rip-0x91c]; add rcx, rbx; mov rbx, rsi; jmp rcx; 
0x00000000075764: lea rbx, [rip-0x983]; add rsi, rbx; mov rbx, rdi; jmp rsi; 
0x0000000007b1c3: lea rbx, [rip-0x9aa]; add rcx, rbx; mov rbx, rsi; mov r9d, 0x1; jmp rcx; 
0x000000000757f4: lea rbx, [rip-0xa13]; add rsi, rbx; mov rbx, rdi; jmp rsi; 
0x0000000007b25d: lea rbx, [rip-0xa44]; add rcx, rbx; mov rbx, rdx; mov edx, 0x1; jmp rcx; 
0x000000000758ec: lea rbx, [rip-0xb0b]; add rsi, rbx; mov rbx, rdx; mov edx, 0x1; jmp rsi; 
0x0000000007b3b8: lea rbx, [rip-0xb9f]; add rcx, rbx; mov rbx, [rsp+0x68]; jmp rcx; 
0x0000000007598c: lea rbx, [rip-0xbab]; add rsi, rbx; mov rbx, rdi; jmp rsi; 
0x0000000007b413: lea rbx, [rip-0xbfa]; add rcx, rbx; mov rbx, rsi; jmp rcx; 
0x0000000007b45f: lea rbx, [rip-0xc46]; add rcx, rbx; mov rbx, rsi; jmp rcx; 
0x00000000075a8a: lea rbx, [rip-0xca9]; add rsi, rbx; mov rbx, [rsp+0x80]; jmp rsi; 
0x0000000007b4d7: lea rbx, [rip-0xcbe]; add rcx, rbx; mov rbx, rsi; jmp rcx; 
0x00000000075ae4: lea rbx, [rip-0xd03]; add rsi, rbx; mov rbx, rdi; jmp rsi; 
0x00000000075b30: lea rbx, [rip-0xd4f]; add rsi, rbx; mov rbx, rdi; mov r13d, 0x1; jmp rsi; 
0x0000000008e587: lea rbx, [rsi+0x1]; mov rdi, r15; movzx esi, byte ptr [rsi]; call qword ptr [rax+0x18]; 
0x0000000008e5fa: lea rbx, [rsi+0x1]; movzx esi, byte ptr [rsi]; call qword ptr [rax+0x18]; 
0x000000000b300d: lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b94a1: lea rcx, [rax+0x1]; mov rdi, [r12]; lea r9, [rsp+0x28]; call rbx; 
0x000000000b960b: lea rcx, [rax+0x4]; lea r9, [rsp+0x18]; call rbx; 
0x000000000b9a2d: lea rcx, [rax+0x4]; lea r9, [rsp+0x20]; call rbx; 
0x0000000010b019: lea rcx, [rbp+0x28]; mov edx, 0x1; call qword ptr [rbp+0x40]; 
0x0000000010b379: lea rcx, [rbp+0x28]; mov edx, 0x2; call qword ptr [rbp+0x40]; 
0x0000000010b2f9: lea rcx, [rbp+0x28]; mov edx, 0x5; call qword ptr [rbp+0x40]; 
0x0000000010abfe: lea rcx, [rbx+0x28]; mov rsi, r14; mov edx, [rdx+rax]; call qword ptr [rbx+0x40]; 
0x0000000007d4e4: lea rcx, [rbx+0x40]; lea rdx, [rbx+0x34]; mov esi, 0x1; mov rdi, rbx; call rax; 
0x0000000007dba9: lea rcx, [rbx+0x40]; mov esi, 0x1; mov rdi, rbx; call r8; 
0x0000000007252b: lea rcx, [rbx+rdx]; add rdx, r12; call qword ptr [r10+rax*8]; 
0x00000000171e45: lea rcx, [rdx+0x10]; jne 0x0000000000172390; ret; 
0x000000001761d6: lea rcx, [rdx+0x10]; jne 0x00000000001767e0; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x0000000017203b: lea rcx, [rdx+0x1]; jne 0x0000000000172390; ret; 
0x000000001763db: lea rcx, [rdx+0x1]; jne 0x00000000001767e0; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x0000000008a457: lea rcx, [rdx+0x1]; mov [rsi+0x28], rcx; mov [rdx], al; mov eax, r8d; ret; 
0x0000000017205d: lea rcx, [rdx+0x2]; jne 0x0000000000172390; ret; 
0x000000001763fe: lea rcx, [rdx+0x2]; jne 0x00000000001767e0; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x00000000172083: lea rcx, [rdx+0x3]; jne 0x0000000000172390; ret; 
0x00000000176424: lea rcx, [rdx+0x3]; jne 0x00000000001767e0; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x0000000017209b: lea rcx, [rdx+0x4]; jne 0x0000000000172390; ret; 
0x0000000017644c: lea rcx, [rdx+0x4]; jne 0x00000000001767e0; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x00000000081ed9: lea rcx, [rdx+0x4]; mov [rax], rcx; mov eax, [rdx]; ret; 
0x000000001720c1: lea rcx, [rdx+0x5]; jne 0x0000000000172390; ret; 
0x00000000176472: lea rcx, [rdx+0x5]; jne 0x00000000001767e0; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x000000001720e3: lea rcx, [rdx+0x6]; jne 0x0000000000172390; ret; 
0x000000001764a4: lea rcx, [rdx+0x6]; jne 0x00000000001767e0; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x00000000172101: lea rcx, [rdx+0x7]; jne 0x0000000000172390; ret; 
0x000000001764d2: lea rcx, [rdx+0x7]; jne 0x00000000001767e0; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x00000000171ddd: lea rcx, [rdx+0x8]; jne 0x0000000000172390; ret; 
0x0000000017616e: lea rcx, [rdx+0x8]; jne 0x00000000001767e0; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x00000000172123: lea rcx, [rdx+0x9]; jne 0x0000000000172390; ret; 
0x00000000176504: lea rcx, [rdx+0x9]; jne 0x00000000001767e0; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x00000000172143: lea rcx, [rdx+0xa]; jne 0x0000000000172390; ret; 
0x00000000176534: lea rcx, [rdx+0xa]; jne 0x00000000001767e0; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x00000000172163: lea rcx, [rdx+0xb]; jne 0x0000000000172390; ret; 
0x00000000176564: lea rcx, [rdx+0xb]; jne 0x00000000001767e0; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x00000000172183: lea rcx, [rdx+0xc]; jne 0x0000000000172390; ret; 
0x00000000176594: lea rcx, [rdx+0xc]; jne 0x00000000001767e0; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x000000001721a5: lea rcx, [rdx+0xd]; jne 0x0000000000172390; ret; 
0x000000001765c6: lea rcx, [rdx+0xd]; jne 0x00000000001767e0; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x000000001721c5: lea rcx, [rdx+0xe]; jne 0x0000000000172390; ret; 
0x000000001765f6: lea rcx, [rdx+0xe]; jne 0x00000000001767e0; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x000000001721e5: lea rcx, [rdx+0xf]; jne 0x0000000000172390; ret; 
0x00000000176626: lea rcx, [rdx+0xf]; jne 0x00000000001767e0; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x0000000011d1c1: lea rcx, [rdx+rcx*4]; mov ecx, [rcx+rsi]; test ecx, ecx; jne short 0x000000000011d1d0; ret; 
0x0000000011da18: lea rcx, [rdx+rcx*4]; mov ecx, [rcx+rsi]; test ecx, ecx; jne short 0x000000000011da28; ret; 
0x0000000011da75: lea rcx, [rdx+rcx*4]; mov ecx, [rcx+rsi]; test ecx, ecx; jne short 0x000000000011da88; ret; 
0x00000000177ab6: lea rcx, [rdx+rcx-0x10]; movzx eax, byte ptr [rdi+rcx]; movzx edx, byte ptr [rsi+rcx]; sub eax, edx; ret; 
0x000000000a4c8d: lea rcx, [rip+0x103f48]; mov edx, eax; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x00000000181b0d: lea rcx, [rip+0x129ac]; mov edx, [rcx+rdx*4]; mov eax, [rcx+rax*4]; sub eax, edx; ret; 
0x0000000007d7d6: lea rcx, [rip+0x12b037]; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x0000000006a16d: lea rcx, [rip+0x13ca48]; mov r11d, [rbp-0x5c0]; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x0000000018042c: lea rcx, [rip+0x1408d]; mov eax, [rcx+rax*4]; mov edx, [rcx+rdx*4]; sub eax, edx; ret; 
0x00000000180158: lea rcx, [rip+0x14361]; mov edx, [rcx+rdx*4]; mov eax, [rcx+rax*4]; sub eax, edx; ret; 
0x00000000061721: lea rcx, [rip+0x144ac0]; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x00000000061651: lea rcx, [rip+0x144b28]; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x0000000017ed43: lea rcx, [rip+0x15776]; mov eax, [rcx+rax*4]; mov edx, [rcx+rdx*4]; sub eax, edx; ret; 
0x0000000008aae5: lea rcx, [rip+0x15a3d4]; mov [rdx+0xe0], rcx; pop rbx; ret; 
0x0000000017d23d: lea rcx, [rip+0x1727c]; mov edx, [rcx+rdx*4]; mov eax, [rcx+rax*4]; sub eax, edx; ret; 
0x0000000017b5ac: lea rcx, [rip+0x18f0d]; mov eax, [rcx+rax*4]; mov edx, [rcx+rdx*4]; sub eax, edx; ret; 
0x0000000017b278: lea rcx, [rip+0x19241]; mov edx, [rcx+rdx*4]; mov eax, [rcx+rax*4]; sub eax, edx; ret; 
0x000000001799a3: lea rcx, [rip+0x1ab16]; mov eax, [rcx+rax*4]; mov edx, [rcx+rdx*4]; sub eax, edx; ret; 
0x0000000018dd4c: lea rcx, [rip+0x2a91d]; movsxd rbx, [rcx+rbx*4]; add rcx, rbx; notrack jmp rcx; 
0x0000000014a544: lea rcx, [rip+0x63759]; mov edx, esi; movsxd rax, [rcx+rdx*4]; add rax, rcx; notrack jmp rax; 
0x00000000149c70: lea rcx, [rip+0x63fed]; mov edx, esi; movsxd rax, [rcx+rdx*4]; add rax, rcx; notrack jmp rax; 
0x00000000105c39: lea rcx, [rip+0xa64e8]; movzx eax, al; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x00000000103f4c: lea rcx, [rip+0xa7fcd]; movsxd rdx, [rcx+r9*4]; add rdx, rcx; notrack jmp rdx; 
0x000000000f7cbf: lea rcx, [rip+0xb366e]; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x000000000f7902: lea rcx, [rip+0xb36bf]; mov rax, rdx; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x000000000f79cf: lea rcx, [rip+0xb38ce]; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x000000000eb784: lea rcx, [rip+0xbf5ad]; movzx ebp, bpl; movsxd rax, [rcx+rbp*4]; add rax, rcx; notrack jmp rax; 
0x0000000007b489: lea rcx, [rip-0xc70]; mov dword ptr [rsp+0x38], 0x1; mov rbx, rsi; jmp rcx; 
0x0000000015985b: lea rcx, [rsi+0x398]; push 0x0; call qword ptr [rax+0x270]; 
0x0000000015980a: lea rcx, [rsi+0x398]; push 0x2; call qword ptr [rax+0x270]; 
0x0000000011d3c5: lea rcx, [rsi+rcx*4]; add eax, [rcx+rdx]; ret; 
0x0000000011d3aa: lea rcx, [rsi+rcx*4]; mov edx, [rcx+rdx]; test edx, edx; jne short 0x000000000011d3c0; ret; 
0x0000000011dc4a: lea rcx, [rsi+rcx*4]; mov edx, [rcx+rdx]; test edx, edx; jne short 0x000000000011dc60; ret; 
0x00000000147a74: lea rdi, [r12+0x10]; call rax; 
0x00000000099f84: lea rdi, [r12+0x31]; mov [rbx], rax; test rax, rax; je 0x000000000009a060; call rax; 
0x000000001592d1: lea rdi, [r12+0x9b0]; call qword ptr [r12+0xf90]; 
0x00000000159161: lea rdi, [r12+0x9b0]; mov rax, fs:[0x28]; mov [rsp+0x68], rax; xor eax, eax; call qword ptr [r12+0xf88]; 
0x00000000039aa9: lea rdi, [r13+0x80]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000015937a: lea rdi, [r13+0x988]; call qword ptr [r13+0xf88]; 
0x00000000159508: lea rdi, [r13+0x988]; call qword ptr [r13+0xf90]; 
0x0000000013676e: lea rdi, [rax+rdx+0x2]; cmp rcx, rdi; jae short 0x0000000000136783; mov eax, 0xffffffff; ret; 
0x0000000014a6c6: lea rdi, [rbp+0x58]; call rax; 
0x00000000149c26: lea rdi, [rbp+0x68]; call rax; 
0x000000000453de: lea rdi, [rbp+0x988]; call qword ptr [rbp+0xf90]; 
0x000000000453ab: lea rdi, [rbp+0x988]; mov rdx, fs:[rax]; mov [rbx+0x18], rdx; mov fs:[rax], rbx; call qword ptr [rbp+0xf88]; 
0x00000000146e49: lea rdi, [rbp+0xc8]; call rax; 
0x00000000069ede: lea rdi, [rbp-0x500]; mov rdx, r15; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000006a227: lea rdi, [rbp-0x500]; xor esi, esi; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000061e8e: lea rdi, [rbp-0x5e0]; mov rdx, r14; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000621e7: lea rdi, [rbp-0x5e0]; xor esi, esi; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000b3b9c: lea rdi, [rdi+0x10]; jne 0x00000000000b4270; ret; 
0x000000000b52c0: lea rdi, [rdi+0x10]; jne 0x00000000000b5ac0; ret; 
0x000000000b3bbf: lea rdi, [rdi+0x11]; jne 0x00000000000b4270; ret; 
0x000000000b52e3: lea rdi, [rdi+0x11]; jne 0x00000000000b5ac0; ret; 
0x000000000b3be4: lea rdi, [rdi+0x12]; jne 0x00000000000b4270; ret; 
0x000000000b5308: lea rdi, [rdi+0x12]; jne 0x00000000000b5ac0; ret; 
0x000000000b3c02: lea rdi, [rdi+0x13]; jne 0x00000000000b4270; ret; 
0x000000000b5336: lea rdi, [rdi+0x13]; jne 0x00000000000b5ac0; ret; 
0x000000000b3c22: lea rdi, [rdi+0x14]; jne 0x00000000000b4270; ret; 
0x000000000b5366: lea rdi, [rdi+0x14]; jne 0x00000000000b5ac0; ret; 
0x000000000b3c45: lea rdi, [rdi+0x15]; jne 0x00000000000b4270; ret; 
0x000000000b5399: lea rdi, [rdi+0x15]; jne 0x00000000000b5ac0; ret; 
0x000000000b3c64: lea rdi, [rdi+0x16]; jne 0x00000000000b4270; ret; 
0x000000000b53c8: lea rdi, [rdi+0x16]; jne 0x00000000000b5ac0; ret; 
0x000000000b3c84: lea rdi, [rdi+0x17]; jne 0x00000000000b4270; ret; 
0x000000000b53f8: lea rdi, [rdi+0x17]; jne 0x00000000000b5ac0; ret; 
0x000000000b3ca4: lea rdi, [rdi+0x18]; jne 0x00000000000b4270; ret; 
0x000000000b5428: lea rdi, [rdi+0x18]; jne 0x00000000000b5ac0; ret; 
0x000000000b3cc7: lea rdi, [rdi+0x19]; jne 0x00000000000b4270; ret; 
0x000000000b545b: lea rdi, [rdi+0x19]; jne 0x00000000000b5ac0; ret; 
0x000000000b39b6: lea rdi, [rdi+0x1]; jne 0x00000000000b4270; ret; 
0x000000000b5099: lea rdi, [rdi+0x1]; jne 0x00000000000b5ac0; ret; 
0x00000000183d6c: lea rdi, [rdi+0x1]; jne 0x00000000001841a0; vzeroupper; ret; 
0x00000000184a84: lea rdi, [rdi+0x1]; jne 0x0000000000184ed0; vzeroupper; ret; 
0x000000000b3cfc: lea rdi, [rdi+0x1a]; jne 0x00000000000b4270; ret; 
0x000000000b5490: lea rdi, [rdi+0x1a]; jne 0x00000000000b5ac0; ret; 
0x000000000b3d2a: lea rdi, [rdi+0x1b]; jne 0x00000000000b4270; ret; 
0x000000000b54be: lea rdi, [rdi+0x1b]; jne 0x00000000000b5ac0; ret; 
0x000000000b3d5a: lea rdi, [rdi+0x1c]; jne 0x00000000000b4270; ret; 
0x000000000b54ee: lea rdi, [rdi+0x1c]; jne 0x00000000000b5ac0; ret; 
0x000000000b3d86: lea rdi, [rdi+0x1d]; jne 0x00000000000b4270; ret; 
0x000000000b551a: lea rdi, [rdi+0x1d]; jne 0x00000000000b5ac0; ret; 
0x000000000b3db6: lea rdi, [rdi+0x1e]; jne 0x00000000000b4270; ret; 
0x000000000b554a: lea rdi, [rdi+0x1e]; jne 0x00000000000b5ac0; ret; 
0x000000000b3de6: lea rdi, [rdi+0x1f]; jne 0x00000000000b4270; ret; 
0x000000000b557a: lea rdi, [rdi+0x1f]; jne 0x00000000000b5ac0; ret; 
0x000000000b3e16: lea rdi, [rdi+0x20]; jne 0x00000000000b4270; ret; 
0x000000000b55aa: lea rdi, [rdi+0x20]; jne 0x00000000000b5ac0; ret; 
0x000000000b39da: lea rdi, [rdi+0x2]; jne 0x00000000000b4270; ret; 
0x000000000b50be: lea rdi, [rdi+0x2]; jne 0x00000000000b5ac0; ret; 
0x00000000183f1a: lea rdi, [rdi+0x2]; jne 0x00000000001841a0; vzeroupper; ret; 
0x00000000184c4e: lea rdi, [rdi+0x2]; jne 0x0000000000184ed0; vzeroupper; ret; 
0x000000000b39fd: lea rdi, [rdi+0x3]; jne 0x00000000000b4270; ret; 
0x000000000b50e1: lea rdi, [rdi+0x3]; jne 0x00000000000b5ac0; ret; 
0x00000000183f3e: lea rdi, [rdi+0x3]; jne 0x00000000001841a0; vzeroupper; ret; 
0x00000000184c72: lea rdi, [rdi+0x3]; jne 0x0000000000184ed0; vzeroupper; ret; 
0x000000000b3a18: lea rdi, [rdi+0x4]; jne 0x00000000000b4270; ret; 
0x000000000b50fc: lea rdi, [rdi+0x4]; jne 0x00000000000b5ac0; ret; 
0x00000000183f58: lea rdi, [rdi+0x4]; jne 0x00000000001841a0; vzeroupper; ret; 
0x00000000184c8c: lea rdi, [rdi+0x4]; jne 0x0000000000184ed0; vzeroupper; ret; 
0x000000000b3a3b: lea rdi, [rdi+0x5]; jne 0x00000000000b4270; ret; 
0x000000000b511f: lea rdi, [rdi+0x5]; jne 0x00000000000b5ac0; ret; 
0x000000000b3a60: lea rdi, [rdi+0x6]; jne 0x00000000000b4270; ret; 
0x000000000b5144: lea rdi, [rdi+0x6]; jne 0x00000000000b5ac0; ret; 
0x000000000b3a7e: lea rdi, [rdi+0x7]; jne 0x00000000000b4270; ret; 
0x000000000b5162: lea rdi, [rdi+0x7]; jne 0x00000000000b5ac0; ret; 
0x000000000b3a9a: lea rdi, [rdi+0x8]; jne 0x00000000000b4270; ret; 
0x000000000b517e: lea rdi, [rdi+0x8]; jne 0x00000000000b5ac0; ret; 
0x000000000b3abd: lea rdi, [rdi+0x9]; jne 0x00000000000b4270; ret; 
0x000000000b51a1: lea rdi, [rdi+0x9]; jne 0x00000000000b5ac0; ret; 
0x000000000b3ae2: lea rdi, [rdi+0xa]; jne 0x00000000000b4270; ret; 
0x000000000b51c6: lea rdi, [rdi+0xa]; jne 0x00000000000b5ac0; ret; 
0x000000000b3b00: lea rdi, [rdi+0xb]; jne 0x00000000000b4270; ret; 
0x000000000b51f4: lea rdi, [rdi+0xb]; jne 0x00000000000b5ac0; ret; 
0x000000000b3b20: lea rdi, [rdi+0xc]; jne 0x00000000000b4270; ret; 
0x000000000b5214: lea rdi, [rdi+0xc]; jne 0x00000000000b5ac0; ret; 
0x000000000b3b42: lea rdi, [rdi+0xd]; jne 0x00000000000b4270; ret; 
0x000000000b5236: lea rdi, [rdi+0xd]; jne 0x00000000000b5ac0; ret; 
0x000000000b3b62: lea rdi, [rdi+0xe]; jne 0x00000000000b4270; ret; 
0x000000000b5266: lea rdi, [rdi+0xe]; jne 0x00000000000b5ac0; ret; 
0x000000000b3b82: lea rdi, [rdi+0xf]; jne 0x00000000000b4270; ret; 
0x000000000b5296: lea rdi, [rdi+0xf]; jne 0x00000000000b5ac0; ret; 
0x00000000183f83: lea rdi, [rdi+rdx+0x1]; jne 0x00000000001841a0; vzeroupper; ret; 
0x00000000184cb7: lea rdi, [rdi+rdx+0x1]; jne 0x0000000000184ed0; vzeroupper; ret; 
0x0000000015ff73: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x000000000015ff86; movaps [rdi], xmm4; notrack jmp r9; 
0x000000001600c3: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x00000000001600d6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000160213: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000160226; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000160363: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000160376; movaps [rdi], xmm4; notrack jmp r9; 
0x000000001604b3: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x00000000001604c6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000160603: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000160616; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000160753: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000160766; movaps [rdi], xmm4; notrack jmp r9; 
0x000000001608a3: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x00000000001608b6; movaps [rdi], xmm4; notrack jmp r9; 
0x000000001609f3: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000160a06; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000160b43: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000160b56; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000160c93: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000160ca6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000160de3: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000160df6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000160f33: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000160f46; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000161083: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000161096; movaps [rdi], xmm4; notrack jmp r9; 
0x000000001611d3: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x00000000001611e6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000162953: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000162966; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000162aa3: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000162ab6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000162bf3: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000162c06; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000162d43: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000162d56; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000162e93: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000162ea6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000162fe3: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000162ff6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000163133: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000163146; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000163283: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000163296; movaps [rdi], xmm4; notrack jmp r9; 
0x000000001633d3: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x00000000001633e6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000163523: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000163536; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000163673: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000163686; movaps [rdi], xmm4; notrack jmp r9; 
0x000000001637c3: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x00000000001637d6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000163913: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000163926; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000163a63: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000163a76; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000163bb3: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000163bc6; movaps [rdi], xmm4; notrack jmp r9; 
0x000000000a4d60: lea rdi, [rip+0x103e99]; mov edx, edx; movsxd rdx, [rdi+rdx*4]; add rdx, rdi; notrack jmp rdx; 
0x000000000dda37: lea rdi, [rip+0x109a62]; syscall; 
0x000000000dd8f7: lea rdi, [rip+0x109ba2]; syscall; 
0x000000000dd83f: lea rdi, [rip+0x109c5a]; syscall; 
0x000000000dd763: lea rdi, [rip+0x109d2e]; syscall; 
0x000000000dd593: lea rdi, [rip+0x109ebe]; syscall; 
0x000000000dd3cf: lea rdi, [rip+0x10a03a]; syscall; 
0x000000000dd015: lea rdi, [rip+0x10a39c]; syscall; 
0x000000000dbd67: lea rdi, [rip+0x10b5c2]; syscall; 
0x000000000dbc27: lea rdi, [rip+0x10b702]; syscall; 
0x000000000dbb6f: lea rdi, [rip+0x10b7ba]; syscall; 
0x000000000db7a3: lea rdi, [rip+0x10bb7e]; syscall; 
0x000000000d99e7: lea rdi, [rip+0x10bcd2]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000db5d3: lea rdi, [rip+0x10bd0e]; syscall; 
0x000000000d99a1: lea rdi, [rip+0x10bd18]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000db40f: lea rdi, [rip+0x10be8a]; syscall; 
0x000000000d97ff: lea rdi, [rip+0x10beba]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000d97d0: lea rdi, [rip+0x10bee9]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000d9707: lea rdi, [rip+0x10bfb2]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000d96de: lea rdi, [rip+0x10bfdb]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000d920c: lea rdi, [rip+0x10c4ad]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000dab17: lea rdi, [rip+0x10c72a]; syscall; 
0x000000000ceb43: lea rdi, [rip+0x1185f6]; syscall; 
0x000000000ce94f: lea rdi, [rip+0x1187ea]; syscall; 
0x000000000c6683: lea rdi, [rip+0x11efd6]; syscall; 
0x000000000c635f: lea rdi, [rip+0x11f35a]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000c617c: lea rdi, [rip+0x11f53d]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000007d77f: lea rdi, [rip+0x12afd2]; movsxd rsi, [rdi+rsi*4]; add rsi, rdi; notrack jmp rsi; 
0x00000000062a0c: lea rdi, [rip+0x143f9d]; movzx eax, al; movsxd rax, [rdi+rax*4]; add rax, rdi; notrack jmp rax; 
0x000000000998a3: lea rdi, [rip+0x14a2f6]; syscall; 
0x0000000009b233: lea rdi, [rip+0x14bcce]; syscall; 
0x0000000009afaf: lea rdi, [rip+0x14bf52]; syscall; 
0x0000000009adcf: lea rdi, [rip+0x14c132]; syscall; 
0x0000000009abe3: lea rdi, [rip+0x14c31e]; syscall; 
0x0000000009ab73: lea rdi, [rip+0x14c38e]; syscall; 
0x00000000096ef3: lea rdi, [rip+0x14cca6]; syscall; 
0x00000000096e93: lea rdi, [rip+0x14cd06]; syscall; 
0x00000000096ac3: lea rdi, [rip+0x14d0d6]; syscall; 
0x00000000096863: lea rdi, [rip+0x14d336]; syscall; 
0x0000000009621b: lea rdi, [rip+0x14d97e]; syscall; 
0x000000000961e3: lea rdi, [rip+0x14d9b6]; syscall; 
0x00000000097ec2: lea rdi, [rip+0x14efb7]; syscall; 
0x00000000097427: lea rdi, [rip+0x14fa42]; syscall; 
0x000000000930fe: lea rdi, [rip+0x153d7b]; syscall; 
0x00000000093082: lea rdi, [rip+0x153de7]; syscall; 
0x00000000092ddb: lea rdi, [rip+0x15409e]; syscall; 
0x00000000092b2f: lea rdi, [rip+0x15434a]; syscall; 
0x00000000092064: lea rdi, [rip+0x154795]; syscall; 
0x00000000091ebf: lea rdi, [rip+0x15493a]; syscall; 
0x00000000091d33: lea rdi, [rip+0x154ac6]; syscall; 
0x0000000008ff36: lea rdi, [rip+0x156733]; syscall; 
0x0000000008f9f5: lea rdi, [rip+0x156c74]; syscall; 
0x0000000008f665: lea rdi, [rip+0x157004]; syscall; 
0x0000000008f305: lea rdi, [rip+0x157364]; syscall; 
0x0000000008dbe1: lea rdi, [rip+0x158a88]; syscall; 
0x0000000008d8f1: lea rdi, [rip+0x158d78]; syscall; 
0x0000000008d5ed: lea rdi, [rip+0x15907c]; syscall; 
0x00000000080cd2: lea rdi, [rip+0x165957]; syscall; 
0x000000000808d6: lea rdi, [rip+0x165d53]; syscall; 
0x0000000008082a: lea rdi, [rip+0x165dff]; syscall; 
0x0000000007e983: lea rdi, [rip+0x166cd6]; syscall; 
0x00000000028d8d: lea rdi, [rip+0x184f6e]; mov rsi, [rax]; xor eax, eax; call qword ptr [rdx+0x260]; 
0x00000000028cbd: lea rdi, [rip+0x185024]; mov rsi, [rax]; xor eax, eax; call qword ptr [rdx+0x260]; 
0x0000000005f1a7: lea rdi, [rip+0x18745a]; syscall; 
0x0000000005ef23: lea rdi, [rip+0x1876da]; syscall; 
0x0000000005cd9f: lea rdi, [rip+0x18984a]; syscall; 
0x0000000005cc5f: lea rdi, [rip+0x18998a]; syscall; 
0x00000000052e87: lea rdi, [rip+0x193742]; syscall; 
0x00000000052cc3: lea rdi, [rip+0x193906]; syscall; 
0x00000000052864: lea rdi, [rip+0x193d5d]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000527b3: lea rdi, [rip+0x193e16]; syscall; 
0x000000000503a7: lea rdi, [rip+0x195ff2]; syscall; 
0x00000000050223: lea rdi, [rip+0x196176]; syscall; 
0x000000000501c3: lea rdi, [rip+0x1961d6]; syscall; 
0x00000000045a5f: lea rdi, [rip+0x1a0902]; syscall; 
0x0000000004599f: lea rdi, [rip+0x1a09c2]; syscall; 
0x000000000458d7: lea rdi, [rip+0x1a0a8a]; syscall; 
0x000000000457ff: lea rdi, [rip+0x1a0b62]; syscall; 
0x000000000448f7: lea rdi, [rip+0x1a11ea]; syscall; 
0x00000000044832: lea rdi, [rip+0x1a12af]; syscall; 
0x0000000004468f: lea rdi, [rip+0x1a1452]; syscall; 
0x000000000445b6: lea rdi, [rip+0x1a152b]; syscall; 
0x0000000003d0be: lea rdi, [rip+0x1a87fb]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003d05d: lea rdi, [rip+0x1a885c]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003d020: lea rdi, [rip+0x1a89e1]; syscall; 
0x0000000003b695: lea rdi, [rip+0x1aa334]; syscall; 
0x0000000003b189: lea rdi, [rip+0x1aa7f0]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003b120: lea rdi, [rip+0x1aa859]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003aff1: lea rdi, [rip+0x1aa988]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003af91: lea rdi, [rip+0x1aa9e8]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003aeaf: lea rdi, [rip+0x1aaa8a]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003ae58: lea rdi, [rip+0x1aaae1]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003abd2: lea rdi, [rip+0x1aaae7]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003aad4: lea rdi, [rip+0x1aabe5]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003abab: lea rdi, [rip+0x1aad0e]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003a965: lea rdi, [rip+0x1aad54]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003aaad: lea rdi, [rip+0x1aae0c]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003a93a: lea rdi, [rip+0x1aaf7f]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003a597: lea rdi, [rip+0x1ab122]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003a667: lea rdi, [rip+0x1ab2d2]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003a5be: lea rdi, [rip+0x1ab2fb]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003a622: lea rdi, [rip+0x1ab317]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003a4e4: lea rdi, [rip+0x1ab435]; syscall; 
0x0000000003a4c4: lea rdi, [rip+0x1ab455]; syscall; 
0x0000000003a35a: lea rdi, [rip+0x1ab5bf]; syscall; 
0x00000000039048: lea rdi, [rip+0x1ac871]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000038584: lea rdi, [rip+0x1ad135]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000384a9: lea rdi, [rip+0x1ad210]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000038434: lea rdi, [rip+0x1ad285]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000038398: lea rdi, [rip+0x1ad321]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003811a: lea rdi, [rip+0x1ad59f]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000037d91: lea rdi, [rip+0x1ad928]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000037b92: lea rdi, [rip+0x1adb27]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035ab7: lea rdi, [rip+0x1afc02]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000356bb: lea rdi, [rip+0x1afffe]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035561: lea rdi, [rip+0x1b0158]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035481: lea rdi, [rip+0x1b0238]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035400: lea rdi, [rip+0x1b02b9]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000351e2: lea rdi, [rip+0x1b04d7]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000351a6: lea rdi, [rip+0x1b0513]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000002bb6c: lea rdi, [rip+0x1b9b29]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000002ac67: lea rdi, [rip+0x1ba9f2]; syscall; 
0x0000000002aafb: lea rdi, [rip+0x1bab5e]; syscall; 
0x0000000002aa03: lea rdi, [rip+0x1bac56]; syscall; 
0x00000000026851: lea rdi, [rip+0x1bf258]; syscall; 
0x0000000019197f: lea rdi, [rip+0x54162]; syscall; 
0x00000000191b3f: lea rdi, [rip+0x54cba]; syscall; 
0x00000000191e5f: lea rdi, [rip+0x567f2]; syscall; 
0x00000000146e8d: lea rdi, [rip+0x669ac]; mov ecx, esi; movsxd rax, [rdi+rcx*4]; add rax, rdi; notrack jmp rax; 
0x0000000015805f: lea rdi, [rip+0x9107e]; syscall; 
0x00000000156d67: lea rdi, [rip+0x92376]; syscall; 
0x00000000156c87: lea rdi, [rip+0x92456]; syscall; 
0x00000000156a9f: lea rdi, [rip+0x9263e]; syscall; 
0x00000000156a0f: lea rdi, [rip+0x926ce]; syscall; 
0x0000000015696f: lea rdi, [rip+0x9276e]; syscall; 
0x000000001568bf: lea rdi, [rip+0x9281e]; syscall; 
0x000000001564ef: lea rdi, [rip+0x92bee]; syscall; 
0x0000000014d1f6: lea rdi, [rip+0x9bce3]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000014d126: lea rdi, [rip+0x9bdb3]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000014d056: lea rdi, [rip+0x9be83]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000014cf86: lea rdi, [rip+0x9bf53]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000014cece: lea rdi, [rip+0x9c00b]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000014c2ef: lea rdi, [rip+0x9cbd2]; syscall; 
0x0000000014c18f: lea rdi, [rip+0x9cd32]; syscall; 
0x0000000014bf83: lea rdi, [rip+0x9cf3e]; syscall; 
0x0000000014bde3: lea rdi, [rip+0x9d0de]; syscall; 
0x0000000014bc4f: lea rdi, [rip+0x9d272]; syscall; 
0x0000000014bb0f: lea rdi, [rip+0x9d3b2]; syscall; 
0x0000000014b9af: lea rdi, [rip+0x9d512]; syscall; 
0x0000000014b89f: lea rdi, [rip+0x9d622]; syscall; 
0x0000000014840f: lea rdi, [rip+0xa0a96]; syscall; 
0x00000000107abc: lea rdi, [rip+0xa695c]; mov rdx, [rax+0xb0]; call qword ptr [rax+0x88]; 
0x00000000141480: lea rdi, [rip+0xa77f9]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000013f4db: lea rdi, [rip+0xa977e]; syscall; 
0x0000000013f1ab: lea rdi, [rip+0xa9aae]; syscall; 
0x0000000013ee2b: lea rdi, [rip+0xa9e2e]; syscall; 
0x0000000013ec2d: lea rdi, [rip+0xaa02c]; syscall; 
0x0000000013eaa3: lea rdi, [rip+0xaa1b6]; syscall; 
0x0000000013e866: lea rdi, [rip+0xaa3f3]; syscall; 
0x0000000013de1f: lea rdi, [rip+0xaad72]; syscall; 
0x0000000013dc9e: lea rdi, [rip+0xaaef3]; syscall; 
0x0000000013dc64: lea rdi, [rip+0xaaf2d]; syscall; 
0x0000000013db57: lea rdi, [rip+0xab03a]; syscall; 
0x0000000013d317: lea rdi, [rip+0xab87a]; syscall; 
0x0000000013d24f: lea rdi, [rip+0xab942]; syscall; 
0x0000000013d133: lea rdi, [rip+0xaba5e]; syscall; 
0x0000000013bda0: lea rdi, [rip+0xacba1]; syscall; 
0x0000000013bacc: lea rdi, [rip+0xace79]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000013851f: lea rdi, [rip+0xb0132]; syscall; 
0x00000000138243: lea rdi, [rip+0xb040e]; syscall; 
0x00000000133f63: lea rdi, [rip+0xb46da]; syscall; 
0x000000001339e3: lea rdi, [rip+0xb4c3e]; syscall; 
0x0000000013381f: lea rdi, [rip+0xb4dba]; syscall; 
0x00000000133757: lea rdi, [rip+0xb4e22]; syscall; 
0x00000000133617: lea rdi, [rip+0xb4f62]; syscall; 
0x0000000013355f: lea rdi, [rip+0xb501a]; syscall; 
0x0000000013340a: lea rdi, [rip+0xb516b]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000132e6f: lea rdi, [rip+0xb5702]; syscall; 
0x00000000132b3f: lea rdi, [rip+0xb5a32]; syscall; 
0x00000000132ad9: lea rdi, [rip+0xb5a40]; call rax; 
0x00000000132983: lea rdi, [rip+0xb5bee]; syscall; 
0x00000000132469: lea rdi, [rip+0xb6064]; syscall; 
0x0000000012eb77: lea rdi, [rip+0xb983a]; syscall; 
0x0000000012ea37: lea rdi, [rip+0xb997a]; syscall; 
0x0000000012e97f: lea rdi, [rip+0xb9a32]; syscall; 
0x0000000012e893: lea rdi, [rip+0xb9b16]; syscall; 
0x0000000012e6c3: lea rdi, [rip+0xb9cb6]; syscall; 
0x0000000012e4ff: lea rdi, [rip+0xb9e52]; syscall; 
0x0000000012e437: lea rdi, [rip+0xb9eca]; syscall; 
0x0000000012e2f7: lea rdi, [rip+0xba00a]; syscall; 
0x0000000012e23f: lea rdi, [rip+0xba0c2]; syscall; 
0x0000000012e15f: lea rdi, [rip+0xba19a]; syscall; 
0x0000000012dc93: lea rdi, [rip+0xba5ee]; syscall; 
0x0000000012d6c3: lea rdi, [rip+0xbab5e]; syscall; 
0x0000000012d1a3: lea rdi, [rip+0xbb036]; syscall; 
0x0000000012cfd7: lea rdi, [rip+0xbb1c2]; syscall; 
0x0000000012ce97: lea rdi, [rip+0xbb302]; syscall; 
0x0000000012cddf: lea rdi, [rip+0xbb3ba]; syscall; 
0x0000000012ccff: lea rdi, [rip+0xbb492]; syscall; 
0x0000000012c8e3: lea rdi, [rip+0xbb866]; syscall; 
0x0000000012c2c7: lea rdi, [rip+0xbbe22]; syscall; 
0x0000000012c16f: lea rdi, [rip+0xbbf7a]; syscall; 
0x0000000012c0af: lea rdi, [rip+0xbc03a]; syscall; 
0x0000000012bfc7: lea rdi, [rip+0xbc11a]; syscall; 
0x0000000012bee3: lea rdi, [rip+0xbc1c6]; syscall; 
0x0000000012b883: lea rdi, [rip+0xbc7e6]; syscall; 
0x0000000012b677: lea rdi, [rip+0xbc9aa]; syscall; 
0x0000000012b51f: lea rdi, [rip+0xbcb02]; syscall; 
0x0000000012b45f: lea rdi, [rip+0xbcbc2]; syscall; 
0x0000000012b377: lea rdi, [rip+0xbcca2]; syscall; 
0x0000000012a763: lea rdi, [rip+0xbd83e]; syscall; 
0x0000000012a4f3: lea rdi, [rip+0xbda6e]; syscall; 
0x00000000129d73: lea rdi, [rip+0xbe18e]; syscall; 
0x00000000126dbe: lea rdi, [rip+0xc10e3]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000e6400: lea rdi, [rip+0xc474d]; movzx eax, al; movsxd rax, [rdi+rax*4]; add rax, rdi; notrack jmp rax; 
0x00000000120317: lea rdi, [rip+0xc7b32]; syscall; 
0x000000001201d7: lea rdi, [rip+0xc7c72]; syscall; 
0x0000000012011f: lea rdi, [rip+0xc7d2a]; syscall; 
0x0000000011fd45: lea rdi, [rip+0xc80fc]; syscall; 
0x0000000011fb1b: lea rdi, [rip+0xc82ee]; syscall; 
0x0000000011f953: lea rdi, [rip+0xc846e]; syscall; 
0x0000000011f78f: lea rdi, [rip+0xc85ea]; syscall; 
0x0000000011f6bf: lea rdi, [rip+0xc8666]; syscall; 
0x0000000011f5ef: lea rdi, [rip+0xc8736]; syscall; 
0x0000000011f553: lea rdi, [rip+0xc87d2]; syscall; 
0x0000000011eab7: lea rdi, [rip+0xc923a]; syscall; 
0x0000000011e977: lea rdi, [rip+0xc937a]; syscall; 
0x0000000011e8bf: lea rdi, [rip+0xc9432]; syscall; 
0x0000000011e2c5: lea rdi, [rip+0xc9a24]; syscall; 
0x0000000011e0c3: lea rdi, [rip+0xc9bce]; syscall; 
0x0000000011dee3: lea rdi, [rip+0xc9d46]; syscall; 
0x0000000011dd1f: lea rdi, [rip+0xc9ea2]; syscall; 
0x000000000d678a: lea rdi, [rip+0xd3977]; mov ecx, eax; movsxd rdx, [rdi+rcx*4]; add rdx, rdi; notrack jmp rdx; 
0x000000000d67cd: lea rdi, [rip+0xd3b20]; mov esi, eax; movsxd rdx, [rdi+rsi*4]; add rdx, rdi; notrack jmp rdx; 
0x0000000011361f: lea rdi, [rip+0xd422a]; syscall; 
0x00000000113503: lea rdi, [rip+0xd4346]; syscall; 
0x000000001130a3: lea rdi, [rip+0xd47a6]; syscall; 
0x00000000112b72: lea rdi, [rip+0xd4cd7]; syscall; 
0x000000000d4216: lea rdi, [rip+0xd5927]; movzx edx, r10b; movsxd rdx, [rdi+rdx*4]; add rdx, rdi; notrack jmp rdx; 
0x000000000d1fd4: lea rdi, [rip+0xd7a89]; movzx eax, al; movsxd rax, [rdi+rax*4]; add rax, rdi; notrack jmp rax; 
0x000000000d1bfa: lea rdi, [rip+0xd7ddb]; movzx eax, al; movsxd rax, [rdi+rax*4]; add rax, rdi; notrack jmp rax; 
0x000000000d0e11: lea rdi, [rip+0xd8a6c]; movzx eax, al; movsxd rax, [rdi+rax*4]; add rax, rdi; notrack jmp rax; 
0x00000000101563: lea rdi, [rip+0xe6056]; syscall; 
0x00000000100aea: lea rdi, [rip+0xe6ad3]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000076118: lea rdi, [rip-0x1337]; add rsi, rdi; jmp rsi; 
0x00000000126d6d: lea rdi, [rip-0x184]; call rax; 
0x0000000007567e: lea rdi, [rip-0x89d]; add rsi, rdi; jmp rsi; 
0x0000000007b329: lea rdi, [rip-0xb10]; movsxd rcx, [rsi+rcx*4]; add rcx, rdi; jmp rcx; 
0x00000000074bb6: lea rdi, [rsp+0x100]; mov rdx, rbp; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000074b37: lea rdi, [rsp+0x100]; xor esi, esi; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000806dd: lea rdi, [rsp+0x10]; xor esi, esi; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000050038: lea rdi, [rsp+0x30]; xor esi, esi; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000cc8f9: lea rdi, [rsp+0xd0]; mov rsi, r13; call r12; 
0x0000000007a6ae: lea rdi, [rsp+0xe0]; mov rdx, rbp; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000007a637: lea rdi, [rsp+0xe0]; xor esi, esi; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000015fa73: lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000084843: lea rdx, [r8+rdx*4]; mov [rax], rdx; xor eax, eax; ret; 
0x00000000082d3c: lea rdx, [rax+0x1]; mov [r8+0x28], rdx; mov [rax], dil; mov eax, r9d; ret; 
0x0000000008a47e: lea rdx, [rax+0x1]; mov [rdi+0x8], rdx; movzx eax, byte ptr [rax]; ret; 
0x00000000092133: lea rdx, [rax+0x1]; mov [rip+0x151192], rdx; ret; 
0x0000000007dba5: lea rdx, [rbx+0x34]; lea rcx, [rbx+0x40]; mov esi, 0x1; mov rdi, rbx; call r8; 
0x0000000007d4e6: lea rdx, [rbx+0x34]; mov esi, 0x1; mov rdi, rbx; call rax; 
0x00000000139e75: lea rdx, [rdi+0x1]; test al, al; jne short 0x0000000000139e63; mov eax, r10d; ret; 
0x000000000d95b4: lea rdx, [rdi+rdi*8]; pop rbx; pop rbp; lea rax, [rax+rdx*8]; ret; 
0x000000000388b7: lea rdx, [rdi+rsi*4]; mov r8d, [rdx+rax]; mov eax, r8d; ret; 
0x0000000011d1d5: lea rdx, [rdx+rsi*4]; add eax, [rdx+rcx]; ret; 
0x0000000015fe77: lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000009970a: lea rdx, [rip+0x10f497]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000000ba40e: lea rdx, [rip+0x1127b]; cmovne rax, rdx; ret; 
0x0000000009c159: lea rdx, [rip+0x12110]; cmovne rax, rdx; ret; 
0x00000000181b66: lea rdx, [rip+0x12953]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x00000000181b41: lea rdx, [rip+0x12978]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000007cd63: lea rdx, [rip+0x12a9b6]; add rax, rdx; ret; 
0x0000000007ced5: lea rdx, [rip+0x12b6f4]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000009c5e9: lea rdx, [rip+0x138a0]; cmovne rax, rdx; ret; 
0x0000000006a5af: lea rdx, [rip+0x13c756]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000069ff8: lea rdx, [rip+0x13cb00]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000069ff9: lea rdx, [rip+0x13cb00]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000001801a6: lea rdx, [rip+0x14313]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000018018c: lea rdx, [rip+0x1432d]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x00000000062539: lea rdx, [rip+0x1443c0]; movzx eax, al; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000062310: lea rdx, [rip+0x14452d]; movzx eax, al; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000000395dc: lea rdx, [rip+0x16897d]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000029188: lea rdx, [rip+0x169e71]; mov eax, eax; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000017d296: lea rdx, [rip+0x17223]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000017d271: lea rdx, [rip+0x17248]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x00000000028878: lea rdx, [rip+0x180b41]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000017b2c6: lea rdx, [rip+0x191f3]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000017b2ac: lea rdx, [rip+0x1920d]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000009d77e: lea rdx, [rip+0x1a63b]; lea rax, [rip+0x1a714]; cmove rax, rdx; ret; 
0x0000000009d3fe: lea rdx, [rip+0x1a99b]; lea rax, [rip+0x1aa74]; cmove rax, rdx; ret; 
0x0000000009d29e: lea rdx, [rip+0x1ab1b]; lea rax, [rip+0x1abf4]; cmove rax, rdx; ret; 
0x0000000009d312: lea rdx, [rip+0x1af57]; lea rax, [rip+0x1aed0]; cmovne rax, rdx; ret; 
0x0000000016eb76: lea rdx, [rip+0x25943]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000016eb51: lea rdx, [rip+0x25968]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000016c606: lea rdx, [rip+0x27eb3]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000016c5ec: lea rdx, [rip+0x27ecd]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000018e774: lea rdx, [rip+0x29f25]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000014c04a: lea rdx, [rip+0x389f]; call qword ptr [rax]; 
0x00000000127708: lea rdx, [rip+0x3d771]; cmovne rax, rdx; ret; 
0x00000000127568: lea rdx, [rip+0x3d931]; cmovne rax, rdx; ret; 
0x0000000014b929: lea rdx, [rip+0x3fc0]; mov r9, rbp; mov esi, 0x9; call qword ptr [rax]; 
0x00000000127638: lea rdx, [rip+0x40351]; cmovne rax, rdx; ret; 
0x000000001276d6: lea rdx, [rip+0x5da03]; lea rax, [rip+0x5da6c]; cmove rax, rdx; ret; 
0x00000000127606: lea rdx, [rip+0x5daf3]; lea rax, [rip+0x5db5c]; cmove rax, rdx; ret; 
0x00000000127536: lea rdx, [rip+0x5dbc3]; lea rax, [rip+0x5dc2c]; cmove rax, rdx; ret; 
0x000000001277a9: lea rdx, [rip+0x5dde0]; lea rax, [rip+0x5de39]; cmove rax, rdx; ret; 
0x0000000012772f: lea rdx, [rip+0x6272a]; lea rax, [rip+0x62793]; cmove rax, rdx; ret; 
0x0000000012765f: lea rdx, [rip+0x6281a]; lea rax, [rip+0x62883]; cmove rax, rdx; ret; 
0x0000000012758f: lea rdx, [rip+0x628ea]; lea rax, [rip+0x62953]; cmove rax, rdx; ret; 
0x000000001277f3: lea rdx, [rip+0x62c16]; cmove rax, rdx; ret; 
0x0000000014962d: lea rdx, [rip+0x6424c]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000014cf25: lea rdx, [rip+0x9bfd4]; cmp rax, rdx; je 0x000000000014cfd0; pop rbx; ret; 
0x0000000014cdbb: lea rdx, [rip+0x9c13e]; mov fs:[rax], rdx; ret; 
0x00000000143390: lea rdx, [rip+0x9f7a9]; jmp qword ptr [rdx+rax*8]; 
0x00000000104aad: lea rdx, [rip+0xa752c]; mov r15d, eax; movsxd rax, [rdx+r15*4]; add rax, rdx; notrack jmp rax; 
0x00000000104393: lea rdx, [rip+0xa7bd2]; movzx eax, al; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000103b5b: lea rdx, [rip+0xa8286]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000000fbb23: lea rdx, [rip+0xafb56]; movsxd rax, [rdx+rdi*4]; add rax, rdx; notrack jmp rax; 
0x000000000fbb79: lea rdx, [rip+0xafd58]; mov edi, edi; movsxd rax, [rdx+rdi*4]; add rax, rdx; notrack jmp rax; 
0x000000000b8cdb: lea rdx, [rip+0xbe63e]; test byte ptr [rax+0x95], 0x2; lea rax, [rip+0x124c0]; cmovne rax, rdx; ret; 
0x000000000eb719: lea rdx, [rip+0xbf540]; movzx ebp, bpl; movsxd rax, [rdx+rbp*4]; add rax, rdx; notrack jmp rax; 
0x000000000eb873: lea rdx, [rip+0xbf54a]; movzx r14d, r14b; movsxd rax, [rdx+r14*4]; add rax, rdx; notrack jmp rax; 
0x0000000009c209: lea rdx, [rip+0xc0d00]; cmovne rax, rdx; ret; 
0x0000000009c667: lea rdx, [rip+0xc1b12]; cmovne rax, rdx; ret; 
0x000000000e5f0a: lea rdx, [rip+0xc4bc3]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000000e41d1: lea rdx, [rip+0xc678c]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000009d738: lea rdx, [rip+0xc7771]; cmovne rax, rdx; ret; 
0x0000000009d3b8: lea rdx, [rip+0xc7ad1]; cmovne rax, rdx; ret; 
0x000000000e12c1: lea rdx, [rip+0xc9648]; mov esi, esi; movsxd rax, [rdx+rsi*4]; add rax, rdx; notrack jmp rax; 
0x000000000e0e84: lea rdx, [rip+0xc96a9]; movsxd rax, [rdx+rbp*4]; add rax, rdx; notrack jmp rax; 
0x000000000e04ea: lea rdx, [rip+0xc9fef]; mov esi, esi; movsxd rax, [rdx+rsi*4]; add rax, rdx; notrack jmp rax; 
0x0000000009d258: lea rdx, [rip+0xca741]; cmovne rax, rdx; ret; 
0x000000000b9179: lea rdx, [rip+0xcc900]; cmovne rax, rdx; ret; 
0x0000000009d612: lea rdx, [rip+0xccec7]; cmovne rax, rdx; ret; 
0x0000000009d572: lea rdx, [rip+0xccf47]; cmovne rax, rdx; ret; 
0x000000000b8cb9: lea rdx, [rip+0xcd090]; cmovne rax, rdx; ret; 
0x000000000b8e69: lea rdx, [rip+0xcd330]; cmovne rax, rdx; ret; 
0x000000000b8f59: lea rdx, [rip+0xcd990]; cmovne rax, rdx; ret; 
0x000000000b8c79: lea rdx, [rip+0xcda40]; cmovne rax, rdx; ret; 
0x000000000b8dc9: lea rdx, [rip+0xcdd10]; cmovne rax, rdx; ret; 
0x0000000009d662: lea rdx, [rip+0xcefd7]; cmovne rax, rdx; ret; 
0x0000000009d5c2: lea rdx, [rip+0xcf057]; cmovne rax, rdx; ret; 
0x0000000009c289: lea rdx, [rip+0xd2900]; cmovne rax, rdx; ret; 
0x000000000b91ce: lea rdx, [rip+0xd2eab]; cmovne rax, rdx; ret; 
0x0000000009c6b9: lea rdx, [rip+0xd3c80]; cmovne rax, rdx; ret; 
0x0000000009d4a9: lea rdx, [rip+0xd5a10]; cmovne rax, rdx; ret; 
0x0000000009d509: lea rdx, [rip+0xd71c0]; cmovne rax, rdx; ret; 
0x000000001420e4: lea rdx, [rip+0xd805]; lea r9, [rsp+0x20]; call qword ptr [rax]; 
0x000000000d06a6: lea rdx, [rip+0xd91a7]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000000a4f09: lea rdx, [rip+0xd94e0]; cmovne rax, rdx; ret; 
0x0000000009ea19: lea rdx, [rip+0xdf880]; cmovne rax, rdx; ret; 
0x0000000009c72b: lea rdx, [rip+0xe0cbe]; test byte ptr [rax+0x96], 0x10; lea rax, [rip+0x1b4f0]; cmovne rax, rdx; ret; 
0x0000000009c85b: lea rdx, [rip+0xe0cce]; test byte ptr [rax+0x96], 0x10; lea rax, [rip+0x1b470]; cmovne rax, rdx; ret; 
0x0000000009d169: lea rdx, [rip+0xe0e60]; cmovne rax, rdx; ret; 
0x0000000009c2bb: lea rdx, [rip+0xe0fee]; test byte ptr [rax+0x96], 0x10; lea rax, [rip+0x1b8b0]; cmovne rax, rdx; ret; 
0x0000000009ea59: lea rdx, [rip+0xe3350]; cmovne rax, rdx; ret; 
0x0000000009c709: lea rdx, [rip+0xe5890]; cmovne rax, rdx; ret; 
0x0000000009c559: lea rdx, [rip+0xe5c10]; cmovne rax, rdx; ret; 
0x0000000009c599: lea rdx, [rip+0xe5d70]; cmovne rax, rdx; ret; 
0x000000000ad756: lea rdx, [rip+0xe6d63]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x000000000ad731: lea rdx, [rip+0xe6d88]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000009d706: lea rdx, [rip+0xe7a03]; lea rax, [rip+0xe7a6c]; cmove rax, rdx; ret; 
0x0000000009d386: lea rdx, [rip+0xe7d63]; lea rax, [rip+0xe7dcc]; cmove rax, rdx; ret; 
0x0000000009d226: lea rdx, [rip+0xe7ee3]; lea rax, [rip+0xe7f4c]; cmove rax, rdx; ret; 
0x0000000009d2f9: lea rdx, [rip+0xe82a0]; lea rax, [rip+0xe82f9]; cmove rax, rdx; ret; 
0x000000000ab0f6: lea rdx, [rip+0xe93c3]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x000000000ab0dc: lea rdx, [rip+0xe93dd]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000009d75f: lea rdx, [rip+0xec72a]; lea rax, [rip+0xec793]; cmove rax, rdx; ret; 
0x0000000009d3df: lea rdx, [rip+0xeca8a]; lea rax, [rip+0xecaf3]; cmove rax, rdx; ret; 
0x0000000009d27f: lea rdx, [rip+0xecc0a]; lea rax, [rip+0xecc73]; cmove rax, rdx; ret; 
0x0000000009d343: lea rdx, [rip+0xed0d6]; cmove rax, rdx; ret; 
0x0000000009d1be: lea rdx, [rip+0xed74b]; cmovne rax, rdx; ret; 
0x0000000009c1ba: lea rdx, [rip+0xee42f]; cmovne rax, rdx; ret; 
0x0000000009d06b: lea rdx, [rip-0x362]; test byte ptr [rax+0x15c], 0x10; lea rax, [rip+0x1a660]; cmove rax, rdx; ret; 
0x000000000784ae: lea rdx, [rip-0x3e9]; add rax, rdx; jmp rax; 
0x00000000072c2d: lea rdx, [rip-0x486]; movsxd rax, [rdi+rax*4]; add rax, rdx; jmp rax; 
0x0000000014b7f5: lea rdx, [rip-0x5cec]; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x0000000014ba5e: lea rdx, [rip-0x5f15]; mov esi, 0x2; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x0000000014bb9e: lea rdx, [rip-0x6055]; mov esi, 0x3; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x0000000014bcfb: lea rdx, [rip-0x6172]; mov esi, 0x6; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x0000000014be9b: lea rdx, [rip-0x6312]; mov esi, 0x7; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x0000000014c100: lea rdx, [rip-0x63c7]; mov esi, 0x8; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x0000000014c234: lea rdx, [rip-0x672b]; mov esi, 0xa; lea r9, [rsp+0x1c]; call qword ptr [rax]; 
0x000000001277c2: lea rdx, [rip-0x6f569]; lea rax, [rip-0x6f5f0]; cmovne rax, rdx; ret; 
0x000000001275ae: lea rdx, [rip-0x6f805]; lea rax, [rip-0x6f72c]; cmove rax, rdx; ret; 
0x0000000012767e: lea rdx, [rip-0x6f8d5]; lea rax, [rip-0x6f7fc]; cmove rax, rdx; ret; 
0x0000000012774e: lea rdx, [rip-0x6f9c5]; lea rax, [rip-0x6f8ec]; cmove rax, rdx; ret; 
0x00000000107d9b: lea rdx, [rip-0x72]; test byte ptr [rax+0x96], 0x80; lea rax, [rip-0xc0]; cmove rax, rdx; ret; 
0x000000000cce58: lea rdx, [rip-0xdf]; cmove rax, rdx; add rsp, 0x58; ret; 
0x000000000ccf78: lea rdx, [rip-0xef]; cmove rax, rdx; add rsp, 0x58; ret; 
0x000000000b7e46: lea rdx, [rsi+rcx]; cmp rdi, rdx; jb short 0x00000000000b7e52; rep movsb [rdi], [rsi]; ret; 
0x000000000500d4: lea rdx, [rsp+0x10]; lea rsi, [rip+0x160]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000014b650: lea rdx, [rsp+0x18]; mov esi, 0x6; call qword ptr [rax+0x28]; 
0x0000000014b617: lea rdx, [rsp+0x18]; mov esi, 0x6; mov rax, [rdi+0x8]; call qword ptr [rax+0x28]; 
0x0000000014b5fa: lea rdx, [rsp+0x20]; mov esi, 0x4; movdqa xmm0, [rip+0x6b684]; movaps [rsp+0x20], xmm0; call qword ptr [rax+0x28]; 
0x0000000010e7b4: lea rdx, [rsp+0x30]; mov eax, 0x10; syscall; 
0x0000000010e358: lea rdx, [rsp+0x8]; mov esi, 0x10; mov eax, 0x48; syscall; 
0x0000000014b6d4: lea rdx, [rsp+0xc]; mov esi, 0xd; call qword ptr [rax+0x28]; 
0x0000000014cc65: lea rsi, [r12+0x8]; mov rdi, rbp; call qword ptr [rax+0x10]; 
0x0000000014ca1c: lea rsi, [rbp+0x8]; mov rdi, r15; call qword ptr [rdx+0x10]; 
0x00000000126d69: lea rsi, [rbp-0x20]; lea rdi, [rip-0x184]; call rax; 
0x000000000e1dff: lea rsi, [rbp-0x2e0]; mov rdi, r15; call qword ptr [r12+0x38]; 
0x000000000fba0f: lea rsi, [rbp-0x2e0]; mov rdi, r15; call qword ptr [r12+0x40]; 
0x000000000e3334: lea rsi, [rbp-0x450]; call qword ptr [rbx+0x40]; 
0x00000000148774: lea rsi, [rbx+0x18]; mov rdi, rbp; call qword ptr [rax+0x48]; 
0x00000000099e4b: lea rsi, [rbx+r12+0x1]; mov [rbp], rax; test rax, rax; je 0x0000000000099f30; call rax; 
0x000000000829ff: lea rsi, [rcx+0x4]; mov [rdx+0x20], rsi; mov [rcx], eax; ret; 
0x000000000596ba: lea rsi, [rdi+0x3b0]; mov edi, 0x3004; mov eax, 0x9e; syscall; 
0x00000000141333: lea rsi, [rdi+0x48]; mov rdi, r8; mov rax, [rax+0x18]; jmp rax; 
0x0000000007ce7c: lea rsi, [rip+0x12b691]; movzx edx, dl; movsxd rdx, [rsi+rdx*4]; add rdx, rsi; notrack jmp rdx; 
0x0000000007ba6b: lea rsi, [rip+0x12bb4e]; movsxd rcx, [rsi+rcx*4]; lea rsi, [rip-0x125d]; add rcx, rsi; jmp rcx; 
0x0000000007b322: lea rsi, [rip+0x12c217]; lea rdi, [rip-0xb10]; movsxd rcx, [rsi+rcx*4]; add rcx, rdi; jmp rcx; 
0x0000000006a987: lea rsi, [rip+0x13c42e]; movsxd rax, [rsi+rbx*4]; add rax, rsi; notrack jmp rax; 
0x000000000500d9: lea rsi, [rip+0x160]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003eff9: lea rsi, [rip+0x162fa0]; mov edx, edx; movsxd rdx, [rsi+rdx*4]; add rdx, rsi; notrack jmp rdx; 
0x0000000008061d: lea rsi, [rip+0x25c]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000010746c: lea rsi, [rip+0xa4dec]; movups [rsp+0xc8], xmm0; mov [rsp+0xe8], eax; mov eax, 0xe; syscall; 
0x0000000010746d: lea rsi, [rip+0xa4dec]; movups [rsp+0xc8], xmm0; mov [rsp+0xe8], eax; mov eax, 0xe; syscall; 
0x000000000f59f9: lea rsi, [rip+0xb55b4]; movsxd rax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x000000000e46eb: lea rsi, [rip+0xc62f2]; movsxd rax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x000000000debec: lea rsi, [rip+0xcf5ef]; mov eax, 0x142; syscall; 
0x000000000d671f: lea rsi, [rip+0xd37f6]; mov edx, ecx; movsxd rax, [rsi+rdx*4]; add rax, rsi; notrack jmp rax; 
0x000000000d4290: lea rsi, [rip+0xd5a99]; movzx edx, r10b; movsxd rdx, [rsi+rdx*4]; add rdx, rsi; notrack jmp rdx; 
0x000000000b8452: lea rsi, [rip+0xf1003]; movsxd rax, [rsi+rdi*4]; add rax, rsi; notrack jmp rax; 
0x00000000141479: lea rsi, [rip-0x100]; lea rdi, [rip+0xa77f9]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000008d665: lea rsi, [rip-0x11c]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000014cec7: lea rsi, [rip-0x11e]; lea rdi, [rip+0x9c00b]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000007ba76: lea rsi, [rip-0x125d]; add rcx, rsi; jmp rcx; 
0x00000000126db7: lea rsi, [rip-0x14e]; lea rdi, [rip+0xc10e3]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000008f0a2: lea rsi, [rip-0x1b59]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000014cf7f: lea rsi, [rip-0x1d6]; lea rdi, [rip+0x9bf53]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000008f3da: lea rsi, [rip-0x1e91]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000008f76e: lea rsi, [rip-0x2225]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000014d04f: lea rsi, [rip-0x2a6]; lea rdi, [rip+0x9be83]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000014d11f: lea rsi, [rip-0x376]; lea rdi, [rip+0x9bdb3]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000080c1e: lea rsi, [rip-0x3a5]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000005285d: lea rsi, [rip-0x3c4]; lea rdi, [rip+0x193d5d]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000013bac5: lea rsi, [rip-0x43c]; lea rdi, [rip+0xace79]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000014d1ef: lea rsi, [rip-0x446]; lea rdi, [rip+0x9bce3]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000133403: lea rsi, [rip-0x4a]; lea rdi, [rip+0xb516b]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000008db4c: lea rsi, [rip-0x603]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000002bb65: lea rsi, [rip-0x61c]; lea rdi, [rip+0x1b9b29]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000075794: lea rsi, [rip-0x9b3]; mov dword ptr [rsp+0x48], 0x1; mov rbx, rdi; jmp rsi; 
0x00000000100ae3: lea rsi, [rip-0xdea]; lea rdi, [rip+0xe6ad3]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000534b8: lea rsi, [rsi+0x128]; mov edi, 0x2; mov r10d, 0x8; mov eax, 0xe; syscall; 
0x000000000b7e57: lea rsi, [rsi+rcx-0x1]; std; rep movsb [rdi], [rsi]; cld; ret; 
0x000000001495db: lea rsi, [rsp+0x10]; call qword ptr [rax+0x10]; 
0x000000001503ac: lea rsi, [rsp+0x10]; call qword ptr [rax]; 
0x00000000150352: lea rsi, [rsp+0x10]; mov [rsp+0x10], rax; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x0000000014bd75: lea rsi, [rsp+0x10]; mov edi, eax; call rbp; 
0x0000000014fbbc: lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax+0x8]; 
0x0000000008ae41: lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax+0x90]; 
0x0000000014fb63: lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax]; 
0x0000000008b4ab: lea rsi, [rsp+0x20]; mov rdi, rbp; call qword ptr [rax+0x90]; 
0x000000000528d7: lea rsi, [rsp+0x24]; mov edi, 0x1; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000107557: lea rsi, [rsp+0x2c]; mov edi, 0x1; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000085a77: lea rsi, [rsp+0x30]; mov rdi, r15; call qword ptr [r14+0x90]; 
0x00000000150f44: lea rsi, [rsp+0x4]; call qword ptr [rax+0x40]; 
0x00000000150f63: lea rsi, [rsp+0x4]; mov [rsp+0x4], eax; mov rax, [rdi+0x8]; call qword ptr [rax+0x48]; 
0x0000000005027c: lea rsi, [rsp+0x4]; mov edi, 0x1; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000150afa: lea rsi, [rsp+0x4]; mov rdi, rbp; call qword ptr [rax+0x40]; 
0x00000000150b4b: lea rsi, [rsp+0x4]; mov rdi, rbp; call qword ptr [rax+0x48]; 
0x0000000014a863: lea rsi, [rsp+0x88]; mov rdi, r15; add dword ptr [rax], 0x1; mov rax, [rbx+0x60]; call qword ptr [rax+0x8]; 
0x00000000143de7: lea rsi, [rsp+0x8]; call qword ptr [rax]; 
0x0000000007f42d: lea rsi, [rsp+0x8]; call rax; 
0x00000000143e32: lea rsi, [rsp+0x8]; mov rdi, rbp; call qword ptr [rax+0x8]; 
0x000000001486d5: lea rsi, [rsp+0xc]; mov rdi, rbp; call qword ptr [rax+0x48]; 
0x00000000129623: lea rsi, [rsp-0x18]; mov eax, 0x83; syscall; 
0x000000000dd133: lea rsp, [rbp-0x10]; pop r12; pop r13; pop rbp; ret; 
0x000000000deea0: lea rsp, [rbp-0x10]; pop rbx; pop r12; pop rbp; ret; 
0x000000000596b6: lea rsp, [rsi+0x8]; lea rsi, [rdi+0x3b0]; mov edi, 0x3004; mov eax, 0x9e; syscall; 
0x000000000a50e2: leave; adc eax, [rax]; mov rax, [rax+rdi*8]; ret; 
0x0000000015f607: leave; add al, [rax]; add [rbp-0x77], cl; ret far; 
0x00000000179347: leave; add eax, [rax]; add [rbp-0x77], cl; ret far; 
0x0000000017d354: leave; add rax, rcx; sub rax, rdi; ret; 
0x000000000fd337: leave; add rsp, 0x8; mov eax, r9d; ret; 
0x00000000040a59: leave; addsd xmm0, xmm0; mov [rdi], ecx; ret; 
0x000000000f9993: leave; bnd jmp qword ptr [rbx+rcx*4+0x4]; 
0x0000000009332d: leave; cld; jmp qword ptr [rbx+rcx*4+0x4]; 
0x000000000b7cd6: leave; cmove rax, rdx; ret; 
0x00000000128853: leave; idiv edi; jmp qword ptr [rsi+0xf]; 
0x00000000074ba1: leave; jmp rsi; 
0x000000000a492d: leave; jne short 0x00000000000a4920; mov [rdi], rdx; ret; 
0x000000000b77d0: leave; jne short 0x00000000000b77c0; ret; 
0x000000000b7880: leave; jne short 0x00000000000b7870; ret; 
0x000000000b7b40: leave; jne short 0x00000000000b7b30; sub rax, 0x1; ret; 
0x000000000b8fb0: leave; jne short 0x00000000000b8f88; mov rax, r8; ret; 
0x0000000011d1c9: leave; jne short 0x000000000011d1d0; ret; 
0x0000000011da20: leave; jne short 0x000000000011da28; ret; 
0x0000000011da7d: leave; jne short 0x000000000011da88; ret; 
0x00000000128abe: leave; jne short 0x0000000000128a70; mov rax, r8; ret; 
0x000000000a69f9: leave; lea r10, [rip+0x1022c7]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x000000000a52d9: leave; lea r10, [rip+0x103967]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000016c759: leave; lea r10, [rip+0x3c6a7]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000016a5d9: leave; lea r10, [rip+0x3e7a7]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000015e229: leave; lea r10, [rip+0x4aad7]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000015cf99: leave; lea r10, [rip+0x4bce7]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x000000000ab249: leave; lea r10, [rip+0xfdb77]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x000000000a8fd9: leave; lea r10, [rip+0xffd67]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x000000001420e3: leave; lea rdx, [rip+0xd805]; lea r9, [rsp+0x20]; call qword ptr [rax]; 
0x00000000140bd3: leave; loop 0x0000000000140bd5; jmp qword ptr [rsi+0xf]; 
0x000000000b2911: leave; mov [rax], cl; mov rax, rdi; ret; 
0x0000000017e8df: leave; mov al, [rdi+rdx-0x1]; mov cl, [rsi+rdx-0x1]; sub eax, ecx; ret; 
0x00000000095499: leave; mov dword ptr fs:[rax], 0xc; mov rax, r9; ret; 
0x00000000159e7a: leave; mov rdi, rbp; call qword ptr [rax+0x270]; 
0x00000000033d3b: leave; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; lea r8, [rsp+0xa0]; call r15; 
0x000000000a684c: leave; movzx eax, byte ptr [rax+rcx]; movzx edx, byte ptr [rdx+rcx]; sub eax, edx; ret; 
0x0000000018dbb2: leave; notrack jmp rcx; 
0x000000000b917d: leave; or al, 0x0; cmovne rax, rdx; ret; 
0x0000000012b67b: leave; or eax, [rax]; syscall; 
0x0000000005591c: leave; ret; 
0x000000000464e4: leave; sbb [rax], eax; mov dword ptr fs:[rax], 0x5; mov eax, 0xffffffff; ret; 
0x000000000b4313: leave; str [rbx+0x63]; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000298ec: leave; xor edx, edx; push rax; call rbx; 
0x0000000011a6b5: leave; xor r8d, r8d; mov eax, 0x2c; syscall; 
0x0000000011a495: leave; xor r8d, r8d; mov eax, 0x2d; syscall; 
0x000000000deb05: lfence; jmp rdi; 
0x000000001020a3: lock add [rax], al; add [rax+0x39], cl; fbstp tbyte ptr [rbp+rax-0x18], st; pop qword ptr [rdx-0xe]; jmp qword ptr [rsi+0xf]; 
0x00000000135604: lock add [rax], al; add [rcx-0x77], al; ret; 
0x000000000453d5: lock add qword ptr [rax+0x460], 0x1; lea rdi, [rbp+0x988]; call qword ptr [rbp+0xf90]; 
0x0000000010e14c: lock and [rax-0x77], cl; ret; 
0x0000000011d234: lock dec dword ptr [rax-0x77]; ret; 
0x00000000122e2c: lock dec dword ptr [rax-0x77]; ret; 
0x00000000122309: lock inc dword ptr [rax-0x76b7ffc8]; ret; 
0x000000000a5240: lodsb [rsi]; adc bh, al; jmp qword ptr [rsi+0x2e]; 
0x00000000042b10: lodsb [rsi]; add [r8], al; add rsp, 0x8; ret; 
0x000000000dc901: lodsb [rsi]; add [rax], al; add [rax-0x7d], cl; ret; 
0x00000000127635: lodsb [rsi]; add eax, [rax]; lea rdx, [rip+0x40351]; cmovne rax, rdx; ret; 
0x000000000f7607: lodsb [rsi]; and al, 0xa4; add [rax], al; add [rax-0x77], cl; ret far; 
0x000000000e56e7: lodsb [rsi]; and al, 0xa8; add [rax], al; add [rax-0x77], cl; ret far; 
0x000000000ccd70: lodsb [rsi]; idiv edi; jmp qword ptr [rsi+0x2e]; 
0x00000000146e90: lodsb [rsi]; imul eax, [rsi], 0x48f18900; movsxd eax, [rdi+rcx*4]; add rax, rdi; notrack jmp rax; 
0x00000000159070: lodsb [rsi]; out dx, eax; cld; jmp qword ptr [rsi+0x2e]; 
0x0000000002aa07: lodsb [rsi]; sbb eax, [rax]; syscall; 
0x000000000e154b: lodsb [rsi]; sti; jmp qword ptr [rsi-0x70]; 
0x000000000e3b94: lodsb [rsi]; xor eax, eax; ret; 
0x000000000880d8: lodsd [rsi]; adc eax, 0xf486600; outsb dx, [rsi]; ret; 
0x0000000009aa7f: lodsd [rsi]; add [rax], al; add [rcx+rcx*4-0x1a], cl; mov rdi, rbp; call rax; 
0x000000000e0bdd: lodsd [rsi]; add [rax], al; setne al; ret; 
0x000000000de69f: lodsd [rsi]; and edi, ebx; dec dword ptr [rbx+0x48102444]; add esp, 0x28; ret; 
0x0000000005450f: lodsd [rsi]; enter 0x894c, 0x7; shr r9, cl; mov [rdi+0x8], r9; ret; 
0x000000000798df: lodsd [rsi]; lea eax, [rax]; add [rax+0x39], cl; ret; 
0x00000000116e97: lodsd [rsi]; mov edi, 0xd8f7000c; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000014fade: lodsd [rsi]; nop; mov rax, [rdi+0x8]; mov rsi, rsp; call qword ptr [rax]; 
0x0000000013de23: lodsd [rsi]; or al, [rax]; syscall; 
0x0000000010805c: lodsd [rsi]; or eax, 0x64d8f700; mov [rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000026577: lodsd [rsi]; ret far; 
0x00000000054542: lodsd [rsi]; ret; 
0x0000000003a969: lodsd [rsi]; sbb al, [rax]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000c719f: lodsd [rsi]; sbb bh, dh; jmp qword ptr [rsi+0x2e]; 
0x0000000010a997: lodsd [rsi]; test [rip+0x64d8f700], cl; mov [rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000159887: lodsd [rsi]; xchg ebp, eax; or [rax], al; jmp qword ptr [rax+0x280]; 
0x000000000454db: loop 0x00000000000454fd; or rax, rdx; ret; 
0x00000000050a78: loop 0x0000000000050a98; mov r8d, edx; or r8d, eax; mov rax, r8; ret; 
0x00000000053715: loop 0x00000000000536cf; add [rax], eax; add [rax], al; ret; 
0x0000000005393d: loop 0x00000000000538f7; add [rax], eax; add [rax], al; ret; 
0x00000000055bc4: loop 0x0000000000055c0e; mov [rdi], edx; mov [rsi], eax; mov eax, 0x1; ret; 
0x00000000058933: loop 0x0000000000058934; jmp qword ptr [rsi+0xf]; 
0x00000000059859: loop 0x00000000000598a7; mov eax, eax; ret; 
0x0000000006065c: loop 0x000000000006068f; call far fword ptr [rbx+0x48]; 
0x0000000006ef05: loop 0x000000000006ef11; add [rbx+rcx*4-0x63], al; mov al, [0xfffad085c7fffffa]; jmp qword ptr [rbp]; 
0x000000000719f4: loop 0x0000000000071a37; call qword ptr [rbp+0x38]; 
0x000000000721d0: loop 0x00000000000721d2; add [rax+0x39], cl; ret; 
0x00000000072529: loop 0x000000000007252d; lea rcx, [rbx+rdx]; add rdx, r12; call qword ptr [r10+rax*8]; 
0x00000000072531: loop 0x0000000000072574; call qword ptr [rdx+rax*8]; 
0x00000000072cd0: loop 0x0000000000072d1e; mov esi, ebp; mov rdi, r14; call qword ptr [rcx+0x38]; 
0x00000000072ef8: loop 0x0000000000072f46; mov esi, ebp; mov rdi, r14; call qword ptr [rcx+0x38]; 
0x00000000073d07: loop 0x0000000000073d55; mov esi, ebp; mov rdi, r14; call qword ptr [rbx+0x38]; 
0x00000000077d71: loop 0x0000000000077d75; lea rcx, [rbx+rdx]; add rdx, r12; call qword ptr [r10+rax*8]; 
0x00000000077d79: loop 0x0000000000077dbc; call qword ptr [rdx+rax*8]; 
0x0000000007f6f0: loop 0x000000000007f73a; mov esi, ebp; mov rdi, rbx; call qword ptr [r13+0x38]; 
0x0000000007fd26: loop 0x000000000007fd74; mov esi, esi; mov rdi, rbx; call qword ptr [r15+0x38]; 
0x00000000081000: loop 0x000000000008105d; pop r12; pop r13; jmp rax; 
0x0000000008113e: loop 0x0000000000081188; mov esi, ebp; mov rdi, rbx; call qword ptr [r14+0x48]; 
0x00000000081558: loop 0x00000000000815a2; mov esi, ebp; mov rdi, rbx; call qword ptr [r13+0x58]; 
0x00000000081582: loop 0x00000000000815cc; mov esi, ebp; mov rdi, rbx; call qword ptr [rax+0x58]; 
0x0000000008172a: loop 0x0000000000081774; mov esi, ebp; mov rdi, rbx; call qword ptr [r13+0x58]; 
0x00000000085d48: loop 0x0000000000085d92; mov esi, ebp; mov rdi, r15; call qword ptr [r14+0x80]; 
0x00000000087684: loop 0x0000000000087687; mov eax, edx; ret; 
0x00000000087784: loop 0x0000000000087787; mov eax, edx; ret; 
0x0000000008a741: loop 0x000000000008a78f; mov esi, ebp; call qword ptr [r14+0x38]; 
0x00000000090a02: loop 0x00000000000909bf; cmp edx, 0xa; je short 0x0000000000090a15; mov eax, r8d; ret; 
0x00000000090a84: loop 0x0000000000090a92; cmp edx, 0x4; je short 0x0000000000090a90; ret; 
0x0000000009c02a: loop 0x000000000009c06d; pop rsp; pop r13; ret; 
0x0000000009c03f: loop 0x000000000009c082; pop rsp; pop r13; ret; 
0x0000000009c1b1: loop 0x000000000009c1f3; lea rax, [rip+0x115b6]; lea rdx, [rip+0xee42f]; cmovne rax, rdx; ret; 
0x0000000009d24f: loop 0x000000000009d259; lea rax, [rip+0xc50a8]; lea rdx, [rip+0xca741]; cmovne rax, rdx; ret; 
0x0000000009d3af: loop 0x000000000009d3b9; lea rax, [rip+0xc2548]; lea rdx, [rip+0xc7ad1]; cmovne rax, rdx; ret; 
0x0000000009d72f: loop 0x000000000009d739; lea rax, [rip+0xc21e8]; lea rdx, [rip+0xc7771]; cmovne rax, rdx; ret; 
0x000000000a4c9f: loop 0x00000000000a4ce9; mov edx, [rsp+0x18]; mov [rdi], rdx; add rax, rdi; ret; 
0x000000000a4e2f: loop 0x00000000000a4e79; mov edx, [rsp+0x10]; mov [rdi], rdx; lea rax, [rdi+rax-0x1]; ret; 
0x000000000a693d: loop 0x00000000000a6970; shr byte ptr [rcx], 0xc8; ret; 
0x000000000adafb: loop 0x00000000000adb2d; or rax, rdx; bsf rax, rax; lea rax, [rdi+rax]; ret; 
0x000000000b3c8a: loop 0x00000000000b3c91; add [rax], al; ret; 
0x000000000b839d: loop 0x00000000000b8362; nop; xor eax, eax; ret; 
0x000000000b851f: loop 0x00000000000b8530; movsxd rax, [rsi+rdx*4]; add rax, rsi; notrack jmp rax; 
0x000000000c00f8: loop 0x00000000000c0109; add al, ch; mov r15, r14; jmp qword ptr [rsi+0x66]; 
0x000000000d2b6c: loop 0x00000000000d2b6e; and [rax-0x80], al; call qword ptr [rax]; 
0x000000000d9000: loop 0x00000000000d8f8b; out dx, al; mov eax, 0xe6; syscall; 
0x000000000d9093: loop 0x00000000000d901e; out dx, al; mov edi, 0x1; mov eax, 0xe6; syscall; 
0x000000000d9151: loop 0x00000000000d90dc; out dx, al; mov edi, 0x1; mov eax, 0xe6; syscall; 
0x000000000d90d2: loop 0x00000000000d9115; mov eax, eax; mov esi, ebp; mov eax, 0xe6; syscall; 
0x000000000debeb: loop 0x00000000000dec35; lea esi, [rip+0xcf5ef]; mov eax, 0x142; syscall; 
0x000000000e154a: loop 0x00000000000e14f8; sti; jmp qword ptr [rsi-0x70]; 
0x000000000eac7c: loop 0x00000000000eac7f; and ecx, 0x80; cmovne eax, edx; pop rbx; ret; 
0x000000000f6f43: loop 0x00000000000f6f44; jmp qword ptr [rsi+0x2e]; 
0x000000001089fb: loop 0x0000000000108a45; mov esi, ebp; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x0000000010e3ea: loop 0x000000000010e3aa; adc [rax], al; add [rax], al; mov eax, 0x48; syscall; 
0x0000000010e992: loop 0x000000000010e94c; adc [rax], al; add [rax], al; syscall; 
0x0000000010f6d8: loop 0x000000000010f71e; mov edx, edi; mov edi, ebp; mov eax, 0x147; syscall; 
0x0000000010f838: loop 0x000000000010f87e; mov edx, edi; mov edi, ebp; mov eax, 0x148; syscall; 
0x0000000010f8da: loop 0x000000000010f949; or eax, 0x75c08500; mov eax, 0x71; syscall; 
0x00000000113d77: loop 0x0000000000113d61; ret; 
0x00000000116767: loop 0x0000000000116768; dec dword ptr [rax-0x7f]; ret; 
0x00000000118f75: loop 0x0000000000118f76; sldt [rax]; and eax, 0xfffff000; or eax, edx; ret; 
0x0000000012609c: loop 0x00000000001260ad; adc [rbp-0x78], esp; call rax; 
0x0000000012639c: loop 0x00000000001263ad; adc [rbp-0x78], ebx; call rax; 
0x000000001265cc: loop 0x00000000001265dd; adc [rbp-0x78], esi; call rax; 
0x000000001266a3: loop 0x00000000001266b4; adc [rbp-0x78], edi; call rax; 
0x00000000126875: loop 0x0000000000126886; adc [rbp-0x78], edi; call rax; 
0x000000001269a8: loop 0x00000000001269b9; adc [rbp-0x78], edi; call rax; 
0x0000000012755f: loop 0x0000000000127569; lea rax, [rip+0x383a8]; lea rdx, [rip+0x3d931]; cmovne rax, rdx; ret; 
0x0000000012762f: loop 0x0000000000127639; lea rax, [rip+0x3acb8]; lea rdx, [rip+0x40351]; cmovne rax, rdx; ret; 
0x000000001276ff: loop 0x0000000000127709; lea rax, [rip+0x381e8]; lea rdx, [rip+0x3d771]; cmovne rax, rdx; ret; 
0x000000001291fa: loop 0x0000000000129204; stc; jmp qword ptr [rsi-0x70]; 
0x000000001297d4: loop 0x00000000001297d6; add [rax], al; rol byte ptr [rcx+0xfa], 0x80; cmovne eax, edi; ret; 
0x00000000133e5a: loop 0x0000000000133e80; out dx, eax; jmp qword ptr [rbx+rcx*4+0x4]; 
0x000000001373dd: loop 0x00000000001373e3; add edx, 0x8; cmp esi, 0x80; cmovb eax, edx; ret; 
0x00000000140bd4: loop 0x0000000000140bd5; jmp qword ptr [rsi+0xf]; 
0x00000000140c64: loop 0x0000000000140c65; jmp qword ptr [rsi+0xf]; 
0x00000000142fd3: loop 0x0000000000142fd1; lea esi, [rax+rdx+0x28]; mov rax, [rdi+0x8]; call qword ptr [rax+0x30]; 
0x0000000014398a: loop 0x00000000001439d8; mov edi, esi; call qword ptr [rax+0x10]; 
0x000000001439c4: loop 0x0000000000143a12; mov edi, esi; call qword ptr [rax+0x20]; 
0x00000000144be2: loop 0x0000000000144c2c; mov esi, ebp; mov rdi, rbx; call rax; 
0x00000000145227: loop 0x000000000014522d; xor rax, rdx; mov [r8], rsi; mov [r8+0x8], rax; ret; 
0x00000000145ae0: loop 0x0000000000145b61; movzx eax, byte ptr [rax+rdx]; mov [rdi+0x7], al; ret; 
0x0000000014b513: loop 0x000000000014b512; jmp qword ptr [rsi+0x2e]; 
0x0000000015a639: loop 0x000000000015a683; or [rdi+rax*8], edx; xor eax, eax; ret; 
0x00000000161d67: loop 0x0000000000161db5; mov [rdi-0x16], ebx; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000161daf: loop 0x0000000000161dfd; mov [rdi-0x16], ebx; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000161ded: loop 0x0000000000161e3b; mov [rdi-0x16], ebx; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000161e25: loop 0x0000000000161e73; mov [rdi-0x16], ebx; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000161e63: loop 0x0000000000161eb1; mov [rdi-0x16], ebx; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000161e9b: loop 0x0000000000161ee9; mov [rdi-0x16], ebx; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000161ec3: loop 0x0000000000161f11; mov [rdi-0x16], ebx; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000164747: loop 0x0000000000164795; mov [rdi-0x16], ebx; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000016478f: loop 0x00000000001647dd; mov [rdi-0x16], ebx; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x000000001647cd: loop 0x000000000016481b; mov [rdi-0x16], ebx; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000164805: loop 0x0000000000164853; mov [rdi-0x16], ebx; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000164843: loop 0x0000000000164891; mov [rdi-0x16], ebx; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000016487b: loop 0x00000000001648c9; mov [rdi-0x16], ebx; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x000000001648a3: loop 0x00000000001648f1; mov [rdi-0x16], ebx; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000164daa: loop 0x0000000000164dd7; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166bd9: loop 0x0000000000166bcf; movq [rdi-0x10], mm1; ret; 
0x00000000169709: loop 0x00000000001696ff; movq [rdi-0x10], mm1; ret; 
0x0000000003a6e8: loope 0x000000000003a6e9; inc dword ptr [rax-0x76b7bcc8]; ret; 
0x0000000003ae5b: loope 0x000000000003ae07; sbb al, [rax]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003d023: loope 0x000000000003cfae; sbb al, [rax]; syscall; 
0x00000000041b63: loope 0x0000000000041b77; sbb al, [rax]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000042363: loope 0x000000000004236f; sbb al, [rax]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000004a86c: loope 0x000000000004a86c; call qword ptr [rax+0x56415741]; 
0x000000000543cb: loope 0x0000000000054419; mov [rdi], ecx; ret; 
0x000000000543fc: loope 0x000000000005444a; mov [rdi-0x8], ecx; ret; 
0x0000000005447d: loope 0x00000000000544cb; mov [rdi-0x10], ecx; ret; 
0x00000000064c94: loope 0x0000000000064cad; add [rbp-0x77], cl; dec byte ptr [rbx-0x5ff7b]; jmp qword ptr [rcx+rcx*4+0x2]; 
0x0000000007032f: loope 0x0000000000070330; jmp qword ptr [rsi+0xf]; 
0x000000000813e7: loope 0x000000000008141a; ror byte ptr [rax-0x77], cl; out dx, al; mov rdi, rbx; call qword ptr [r13+0x48]; 
0x0000000008f3de: loope 0x000000000008f3df; dec dword ptr [rax-0x3f]; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x00000000090bbe: loope 0x0000000000090c08; lea eax, [rip+0x155c0a]; pop rbx; mov dword ptr [rip+0x155aef], 0x1; ret; 
0x0000000009584c: loope 0x000000000009585f; add al, ch; cld; ret far; 
0x000000000b3146: loope 0x00000000000b31ae; nop [rax+rax]; mov [rdi], dh; ret; 
0x000000000b4786: loope 0x00000000000b47ee; nop [rax+rax]; mov [rdi], dh; lea rax, [rdi]; ret; 
0x000000000b6456: loope 0x00000000000b64be; nop [rax+rax]; mov [rdi], dh; ret; 
0x000000000b6f46: loope 0x00000000000b6fae; nop [rax+rax]; mov [rdi], dh; ret; 
0x000000000c68bf: loope 0x00000000000c690d; mov edx, ebp; call rbx; 
0x000000000cbace: loope 0x00000000000cbadf; je short 0x00000000000cbaf0; ret; 
0x000000000cec0d: loope 0x00000000000cec0b; dec dword ptr [rax-0x7b]; ror byte ptr [rdi], 0x84; ret; 
0x000000000dbe90: loope 0x00000000000dbe7a; mov edx, 0x8900000d; ret; 
0x000000000dbf3f: loope 0x00000000000dbf8d; mov edx, ebp; mov rsi, rbp; mov edi, r14d; call qword ptr [rsp+0x48]; 
0x000000000dc3df: loope 0x00000000000dc42d; mov edx, ebp; mov rsi, rbp; mov rdi, r14; call qword ptr [rsp+0x48]; 
0x000000000e7e41: loope 0x00000000000e7e47; je short 0x00000000000e7ddc; mov byte ptr [rdi+0x8], 0x1e; mov eax, 0x2; ret; 
0x000000000eac52: loope 0x00000000000eac53; add esi, esi; ret; 
0x00000000108563: loope 0x000000000010850d; or eax, 0x64d8f700; mov [rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010c088: loope 0x000000000010c086; dec dword ptr [rax-0x77]; ret; 
0x0000000010f163: loope 0x000000000010f1a1; or eax, 0x64d8f700; mov [rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000110163: loope 0x0000000000110191; or eax, 0x64d8f700; mov [rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000011028e: loope 0x000000000011028e; mov eax, 0xa9; syscall; 
0x0000000012aee3: loope 0x000000000012af2d; mov esi, ebp; mov rdi, r13; call qword ptr [rsp+0x40]; 
0x00000000140cf4: loope 0x0000000000140cf5; jmp qword ptr [rsi+0xf]; 
0x00000000140d84: loope 0x0000000000140d85; jmp qword ptr [rsi+0xf]; 
0x00000000146e02: loope 0x0000000000146e6a; nop [rax+rax]; xchg ax, ax; endbr64; ret; 
0x0000000014bc6b: loope 0x000000000014bc47; std; call qword ptr [rax-0x5e1f00d]; 
0x0000000014c73f: loope 0x000000000014c789; mov edx, ebp; mov rsi, rbx; call rax; 
0x00000000154d2c: loope 0x0000000000154d36; add [rbp+0x31], al; jmp qword ptr [rdi+rax*8]; 
0x00000000161f67: loope 0x0000000000161fb5; mov [rdi-0x17], ebx; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000161faf: loope 0x0000000000161ffd; mov [rdi-0x17], ebx; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000161fed: loope 0x000000000016203b; mov [rdi-0x17], ebx; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000162025: loope 0x0000000000162073; mov [rdi-0x17], ebx; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000162063: loope 0x00000000001620b1; mov [rdi-0x17], ebx; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000016209b: loope 0x00000000001620e9; mov [rdi-0x17], ebx; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x000000001620c3: loope 0x0000000000162111; mov [rdi-0x17], ebx; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000164947: loope 0x0000000000164995; mov [rdi-0x17], ebx; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000016498f: loope 0x00000000001649dd; mov [rdi-0x17], ebx; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x000000001649cd: loope 0x0000000000164a1b; mov [rdi-0x17], ebx; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000164a05: loope 0x0000000000164a53; mov [rdi-0x17], ebx; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000164a43: loope 0x0000000000164a91; mov [rdi-0x17], ebx; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000164a7b: loope 0x0000000000164ac9; mov [rdi-0x17], ebx; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000164aa3: loope 0x0000000000164af1; mov [rdi-0x17], ebx; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000166b49: loope 0x0000000000166b3f; movq [rdi-0x10], mm1; ret; 
0x00000000169679: loope 0x000000000016966f; movq [rdi-0x10], mm1; ret; 
0x000000001721ab: loope 0x00000000001721ae; add [rax], al; ret; 
0x0000000017d99e: loope 0x000000000017d9c9; enter 0xf8c5, 0x77; ret; 
0x00000000184743: loope 0x000000000018478d; lea eax, [rdi+rdx]; vzeroupper; ret; 
0x0000000018a81b: loope 0x000000000018a81d; add [rax], al; lea rax, [rdi+0xf]; ret; 
0x00000000191a8e: loope 0x0000000000191aeb; ret; 
0x000000000349b5: loopne 0x0000000000034a14; pop r12; pop r13; ret; 
0x00000000034a37: loopne 0x0000000000034a96; pop r12; pop r13; ret; 
0x00000000038b47: loopne 0x0000000000038b51; ret; 
0x00000000038b87: loopne 0x0000000000038b8b; ret; 
0x00000000038c27: loopne 0x0000000000038c2d; ret; 
0x00000000038d07: loopne 0x0000000000038d0a; ret; 
0x00000000038da0: loopne 0x0000000000038da3; ret; 
0x00000000038dc0: loopne 0x0000000000038dca; ret; 
0x00000000038d77: loopne 0x0000000000038df8; ret; 
0x00000000038e00: loopne 0x0000000000038e04; ret; 
0x00000000038ea0: loopne 0x0000000000038ea6; ret; 
0x0000000003956c: loopne 0x00000000000395c9; pop rbp; pop r12; ret; 
0x0000000003960a: loopne 0x000000000003964d; pop rsp; ret; 
0x0000000003d0d6: loopne 0x000000000003d135; pop r12; pop r13; ret; 
0x000000000406bb: loopne 0x000000000004069a; fsub st, dword ptr [rip+0x200]; ret; 
0x0000000004091c: loopne 0x0000000000040952; and rcx, rdx; or rcx, rax; movq xmm0, rcx; ret; 
0x00000000040a48: loopne 0x0000000000040a89; or rax, rdx; movq xmm0, rax; ret; 
0x00000000040db9: loopne 0x0000000000040dc3; ret; 
0x000000000412f8: loopne 0x0000000000041302; ret; 
0x000000000416b6: loopne 0x000000000004171e; nop [rax+rax]; ret; 
0x0000000004187c: loopne 0x000000000004187e; add [rax], al; movaps [rsp+0xf0], xmm0; syscall; 
0x00000000042350: loopne 0x000000000004239a; or [rdi], eax; xor eax, eax; ret; 
0x000000000423e8: loopne 0x0000000000042432; and eax, [rdi]; setne al; movzx eax, al; ret; 
0x00000000042677: loopne 0x00000000000426d4; pop rbp; pop r12; ret; 
0x0000000004268d: loopne 0x00000000000426ea; pop rbp; pop r12; ret; 
0x00000000045878: loopne 0x00000000000458bb; pop rsp; ret; 
0x00000000045b9a: loopne 0x0000000000045b87; pushfq; nop [rax]; mov eax, 0xffffffff; ret; 
0x00000000053c99: loopne 0x0000000000053c9d; sub eax, 0x1; ret; 
0x00000000055c3b: loopne 0x0000000000055bf5; add [rax], eax; add [rax], al; ret; 
0x00000000059b16: loopne 0x0000000000059b73; pop r12; ret; 
0x00000000059bae: loopne 0x0000000000059c0b; pop r12; ret; 
0x00000000059bd5: loopne 0x0000000000059c32; pop r12; ret; 
0x00000000059bf2: loopne 0x0000000000059c4f; pop r12; ret; 
0x0000000005d51a: loopne 0x000000000005d4a5; ret; 
0x00000000060799: loopne 0x00000000000607f8; pop r12; ret; 
0x00000000060870: loopne 0x00000000000608cd; pop r12; ret; 
0x0000000007697b: loopne 0x000000000007697c; jmp qword ptr [rsi-0x70]; 
0x00000000079604: loopne 0x0000000000079605; jmp qword ptr [rsi+0xf]; 
0x0000000007b07e: loopne 0x000000000007b003; call far fword ptr [rdx+0xf]; 
0x0000000007b0d2: loopne 0x000000000007b057; call far fword ptr [rdx+0xf]; 
0x0000000007b116: loopne 0x000000000007b09b; call far fword ptr [rdx+0xf]; 
0x0000000007b15e: loopne 0x000000000007b0e3; call far fword ptr [rdx+0x77]; 
0x0000000007b1ae: loopne 0x000000000007b133; call far fword ptr [rdx+0x77]; 
0x0000000007b1f6: loopne 0x000000000007b17b; call far fword ptr [rdx+0x77]; 
0x0000000007b43e: loopne 0x000000000007b3c3; call far fword ptr [rdx+0xf]; 
0x0000000007b4b6: loopne 0x000000000007b43b; call far fword ptr [rdx+0xf]; 
0x0000000007c4e4: loopne 0x000000000007c4e5; jmp qword ptr [rsi+0xf]; 
0x0000000007c51c: loopne 0x000000000007c51d; call qword ptr [rax+0x244c8948]; 
0x0000000007d30e: loopne 0x000000000007d36b; pop rbp; pop r12; pop r13; ret; 
0x0000000007e855: loopne 0x000000000007e8b2; pop rbp; pop r12; ret; 
0x0000000007f16d: loopne 0x000000000007f16f; add [rax], al; ret; 
0x0000000007f343: loopne 0x000000000007f3a0; pop rbp; pop r12; pop r13; ret; 
0x0000000007f3a0: loopne 0x000000000007f3a2; add [rax], al; jmp rax; 
0x0000000007f369: loopne 0x000000000007f3c6; pop rbp; pop r12; pop r13; ret; 
0x0000000007f3dc: loopne 0x000000000007f3de; add [rax], al; call rax; 
0x0000000007f3a5: loopne 0x000000000007f3ef; mov eax, 0xffffffff; ret; 
0x0000000007f429: loopne 0x000000000007f42b; add [rax], al; lea rsi, [rsp+0x8]; call rax; 
0x0000000007f480: loopne 0x000000000007f482; add [rax], al; jmp rax; 
0x0000000007f485: loopne 0x000000000007f4ed; nop [rax+rax]; xor eax, eax; ret; 
0x0000000007f5b6: loopne 0x000000000007f615; pop r12; pop r13; ret; 
0x0000000007f61e: loopne 0x000000000007f67d; pop r12; pop r13; ret; 
0x00000000080d56: loopne 0x0000000000080db5; pop r12; pop r13; ret; 
0x00000000080d75: loopne 0x0000000000080dd4; pop r12; pop r13; ret; 
0x00000000082364: loopne 0x00000000000823c3; pop r12; pop r13; pop r14; ret; 
0x00000000082446: loopne 0x0000000000082489; pop rsp; pop r13; pop r14; ret; 
0x0000000008248b: loopne 0x00000000000824ea; pop r12; pop r13; pop r14; ret; 
0x000000000831f4: loopne 0x0000000000083251; pop rbp; pop r12; pop r13; ret; 
0x00000000083e17: loopne 0x0000000000083e19; add [rax], al; call qword ptr [rax+0x68]; 
0x00000000083f4c: loopne 0x0000000000083f4e; add [rax], al; mov esi, 0xffffffff; call qword ptr [rax+0x18]; 
0x00000000086260: loopne 0x0000000000086262; add [rax], al; mov rax, [rax+0x20]; jmp rax; 
0x00000000086269: loopne 0x00000000000862d1; nop [rax+rax]; mov eax, 0xffffffff; pop rbp; ret; 
0x000000000866f1: loopne 0x0000000000086750; pop r12; ret; 
0x00000000086711: loopne 0x0000000000086770; pop r12; ret; 
0x0000000008673f: loopne 0x000000000008679e; pop r12; ret; 
0x000000000874e1: loopne 0x000000000008753e; pop rbp; pop r12; ret; 
0x00000000087ae2: loopne 0x0000000000087b3f; pop rbp; pop r12; pop r13; ret; 
0x00000000088151: loopne 0x00000000000881ae; pop rbp; pop r12; ret; 
0x000000000887be: loopne 0x000000000008881b; pop rbp; pop r12; pop r13; ret; 
0x00000000088997: loopne 0x00000000000889f6; pop r12; pop r13; pop r14; ret; 
0x000000000889f3: loopne 0x0000000000088a50; pop rbp; pop r12; ret; 
0x0000000008944f: loopne 0x00000000000894ac; pop rbp; pop r12; pop r13; ret; 
0x00000000089d7a: loopne 0x0000000000089dd7; pop rbp; pop r12; ret; 
0x0000000008a42a: loopne 0x000000000008a42d; ret; 
0x0000000008a43a: loopne 0x000000000008a43d; ret; 
0x0000000008a696: loopne 0x000000000008a6f3; pop rbp; pop r12; ret; 
0x0000000008a6c8: loopne 0x000000000008a70b; pop rsp; ret; 
0x0000000008a6d7: loopne 0x000000000008a71a; pop rsp; ret; 
0x0000000008a77f: loopne 0x000000000008a7de; pop r12; pop r13; pop r14; ret; 
0x0000000008aaef: loopne 0x000000000008aaf1; add [rax], al; pop rbx; ret; 
0x0000000008c4ae: loopne 0x000000000008c50b; pop rbp; pop r12; ret; 
0x00000000090ac1: loopne 0x0000000000090acf; cmp eax, 0x4; je short 0x0000000000090a9c; pop rbx; ret; 
0x00000000090b16: loopne 0x0000000000090b7e; nop [rax+rax]; ret; 
0x00000000090ccf: loopne 0x0000000000090d2c; pop rbp; pop r12; pop r13; ret; 
0x00000000090db8: loopne 0x0000000000090dbb; mov [rsi], eax; xor eax, eax; ret; 
0x00000000090dca: loopne 0x0000000000090dcd; mov [rsi], eax; xor eax, eax; ret; 
0x00000000090e0b: loopne 0x0000000000090e0e; mov [rsi], eax; xor eax, eax; ret; 
0x00000000090fb9: loopne 0x0000000000091016; pop rbp; pop r12; ret; 
0x000000000910b1: loopne 0x00000000000910b0; mov [rdi+0x8], eax; xor eax, eax; ret; 
0x00000000091c78: loopne 0x0000000000091c86; pop rbx; pop rbp; ret; 
0x00000000092708: loopne 0x0000000000092765; pop rbp; pop r12; pop r13; ret; 
0x0000000009273c: loopne 0x000000000009279b; pop r12; pop r13; ret; 
0x00000000092ad7: loopne 0x0000000000092b1a; pop rsp; ret; 
0x00000000092ac8: loopne 0x0000000000092b25; pop rbp; pop r12; ret; 
0x00000000092cf7: loopne 0x0000000000092d54; pop rbp; pop r12; pop r13; ret; 
0x00000000094d76: loopne 0x0000000000094d8c; add [rcx+rcx*4+0x44], cl; and al, 0x8; xor edi, edi; call qword ptr [rax]; 
0x0000000009732f: loopne 0x000000000009738c; pop rbp; pop r12; ret; 
0x000000000992ba: loopne 0x00000000000992bd; cmovne rax, rdx; ret; 
0x0000000009a17c: loopne 0x000000000009a167; std; ret; 
0x0000000009a588: loopne 0x000000000009a5cb; pop rsp; ret; 
0x0000000009a7bb: loopne 0x000000000009a7fe; pop rsp; ret; 
0x0000000009bf33: loopne 0x000000000009bf92; pop r12; pop r13; pop r14; ret; 
0x0000000009c51c: loopne 0x000000000009c579; pop rbp; pop r12; ret; 
0x0000000009d10a: loopne 0x000000000009d14d; pop rsp; pop r13; ret; 
0x0000000009d0f3: loopne 0x000000000009d152; pop r12; pop r13; ret; 
0x0000000009d7d6: loopne 0x000000000009d833; pop r12; ret; 
0x0000000009d7ed: loopne 0x000000000009d84a; pop r12; ret; 
0x0000000009ebaf: loopne 0x000000000009ebf2; pop rsp; ret; 
0x0000000009eb9b: loopne 0x000000000009ebf8; pop rbp; pop r12; ret; 
0x000000000a4997: loopne 0x00000000000a49f4; pop r12; ret; 
0x000000000a49ad: loopne 0x00000000000a4a0a; pop r12; ret; 
0x000000000a4a6e: loopne 0x00000000000a4ab1; pop rsp; ret; 
0x000000000a4c5f: loopne 0x00000000000a4cad; mov eax, eax; ret; 
0x000000000a5175: loopne 0x00000000000a51d4; pop r12; pop r13; pop r14; ret; 
0x000000000b3d8c: loopne 0x00000000000b3d92; add [rax], al; ret; 
0x000000000b7f84: loopne 0x00000000000b7f95; adc [rdi+rdx-0x30], esi; movups [rdi+rdx-0x40], xmm7; ret; 
0x000000000b803d: loopne 0x00000000000b8083; movups [rcx-0x30], xmm0; movups [r11], xmm4; ret; 
0x000000000b812b: loopne 0x00000000000b8171; movups [rcx-0x30], xmm0; movups [r11], xmm4; ret; 
0x000000000b848d: loopne 0x00000000000b849e; movsxd rcx, [rsi+rax*4]; add rcx, rsi; notrack jmp rcx; 
0x000000000b8c48: loopne 0x00000000000b8ca7; pop r12; ret; 
0x000000000b8d3b: loopne 0x00000000000b8d98; pop rbp; pop r12; ret; 
0x000000000b8e28: loopne 0x00000000000b8e87; pop r12; pop r13; pop r14; ret; 
0x000000000b913f: loopne 0x00000000000b9104; ret; 
0x000000000cb1dc: loopne 0x00000000000cb1dc; call qword ptr [rax-0x5e1f00d]; 
0x000000000cc00f: loopne 0x00000000000cc052; pop rsp; ret; 
0x000000000cc043: loopne 0x00000000000cc086; pop rsp; ret; 
0x000000000cc055: loopne 0x00000000000cc098; pop rsp; ret; 
0x000000000cd172: loopne 0x00000000000cd174; add [rax], al; mov eax, r8d; pop rbx; ret; 
0x000000000cdcb7: loopne 0x00000000000cdcfa; pop rsp; pop r13; pop r14; ret; 
0x000000000cdca0: loopne 0x00000000000cdcff; pop r12; pop r13; pop r14; ret; 
0x000000000d2d81: loopne 0x00000000000d2d93; add [rax-0x7bf0ffc2], al; ret; 
0x000000000d96f6: loopne 0x00000000000d9753; pop rbp; pop r12; ret; 
0x000000000d9757: loopne 0x00000000000d979a; pop rsp; ret; 
0x000000000d97e9: loopne 0x00000000000d9848; pop r12; pop r13; pop r14; ret; 
0x000000000d98b7: loopne 0x00000000000d98fa; pop rsp; pop r13; pop r14; ret; 
0x000000000d9ac8: loopne 0x00000000000d9aca; add [rax], al; pop rbx; ret; 
0x000000000d9b60: loopne 0x00000000000d9b62; add [rax], al; pop rbx; ret; 
0x000000000d9c67: loopne 0x00000000000d9cc4; pop rbp; pop r12; pop r13; ret; 
0x000000000d9de7: loopne 0x00000000000d9e44; pop rbp; pop r12; pop r13; ret; 
0x000000000d9f0f: loopne 0x00000000000d9f6c; pop rbp; pop r12; pop r13; ret; 
0x000000000db296: loopne 0x00000000000db2f3; pop rbp; pop r12; ret; 
0x000000000ea8b9: loopne 0x00000000000ea916; pop rbp; pop r12; pop r13; ret; 
0x000000000f9ead: loopne 0x00000000000f9f0c; pop r12; pop r13; pop r14; ret; 
0x000000000f9f02: loopne 0x00000000000f9f45; pop rsp; pop r13; pop r14; ret; 
0x000000000f9f80: loopne 0x00000000000f9fdd; pop rbp; pop r12; pop r13; ret; 
0x000000000fd8b5: loopne 0x00000000000fd8c6; ret; 
0x00000000105600: loopne 0x0000000000105640; jmp rax; 
0x00000000107753: loopne 0x0000000000107793; jmp rax; 
0x00000000107d7f: loopne 0x0000000000107dc2; pop rsp; ret; 
0x00000000107d6b: loopne 0x0000000000107dc8; pop rbp; pop r12; ret; 
0x00000000108870: loopne 0x00000000001088cf; pop r12; pop r13; ret; 
0x000000001090c5: loopne 0x0000000000109122; pop rbp; pop r12; pop r13; ret; 
0x00000000109f06: loopne 0x0000000000109f65; pop r12; pop r13; ret; 
0x0000000010b7a3: loopne 0x000000000010b7a9; mov edx, [rdx+rax]; mov rdi, [rbp-0x118]; mov rsi, r9; call qword ptr [rbp-0xf0]; 
0x0000000010ee1d: loopne 0x000000000010ee60; pop rsp; ret; 
0x0000000010f127: loopne 0x000000000010f184; pop rbp; pop r12; ret; 
0x0000000010f2cb: loopne 0x000000000010f328; pop rbp; pop r12; ret; 
0x0000000010f30a: loopne 0x000000000010f367; pop rbp; pop r12; ret; 
0x00000000110642: loopne 0x0000000000110685; pop rsp; ret; 
0x00000000110802: loopne 0x00000000001107f4; add eax, 0x26; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000110822: loopne 0x0000000000110814; add eax, 0x26; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000011094d: loopne 0x00000000001109aa; pop rbp; pop r12; ret; 
0x00000000111c52: loopne 0x0000000000111c44; add eax, 0x26; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000001121a7: loopne 0x0000000000112204; pop rbp; pop r12; ret; 
0x000000001128f6: loopne 0x0000000000112953; pop r12; pop r13; pop rbp; ret; 
0x0000000011371a: loopne 0x0000000000113777; pop rbp; pop r12; ret; 
0x00000000113c0a: loopne 0x0000000000113c4d; pop rsp; ret; 
0x00000000114160: loopne 0x00000000001141bc; pop r12; ret; 
0x000000001149ea: loopne 0x0000000000114a49; pop r12; pop r13; jmp rax; 
0x00000000114a7a: loopne 0x0000000000114ad9; pop r12; pop r13; jmp rax; 
0x00000000115803: loopne 0x0000000000115862; pop r12; jmp rax; 
0x000000001158b2: loopne 0x0000000000115911; pop r12; pop r13; jmp rax; 
0x000000001158b9: loopne 0x0000000000115921; nop [rax+rax]; ret; 
0x00000000116aee: loopne 0x0000000000116b4b; pop rbp; pop r12; pop r13; ret; 
0x00000000118ff0: loopne 0x0000000000119012; and rax, rdi; or rax, rsi; ret; 
0x000000001199d4: loopne 0x00000000001199d9; ret; 
0x0000000011cab2: loopne 0x000000000011cab5; ret; 
0x0000000011caca: loopne 0x000000000011cad4; ret; 
0x0000000011cb42: loopne 0x000000000011cb45; ret; 
0x0000000011cbd2: loopne 0x000000000011cbd5; ret; 
0x0000000011cbea: loopne 0x000000000011cbed; ret; 
0x0000000011cc62: loopne 0x000000000011cc65; ret; 
0x0000000011cc7a: loopne 0x000000000011cc7e; ret; 
0x0000000011ccf1: loopne 0x000000000011ccf4; mov eax, r8d; ret; 
0x0000000011cd92: loopne 0x000000000011cd95; ret; 
0x0000000011ce22: loopne 0x000000000011ce25; ret; 
0x0000000011ceb2: loopne 0x000000000011ceb5; ret; 
0x0000000011cf42: loopne 0x000000000011cf45; ret; 
0x0000000011cf5a: loopne 0x000000000011cf60; ret; 
0x0000000011cfd2: loopne 0x000000000011cfd5; ret; 
0x0000000011d05d: loopne 0x000000000011d060; ret; 
0x0000000011d0f2: loopne 0x000000000011d0f5; ret; 
0x0000000011d2de: loopne 0x000000000011d2e1; ret; 
0x0000000011d434: loopne 0x000000000011d437; ret; 
0x0000000011d44b: loopne 0x000000000011d455; ret; 
0x0000000011d4b4: loopne 0x000000000011d4b7; ret; 
0x0000000011d534: loopne 0x000000000011d537; ret; 
0x0000000011d54b: loopne 0x000000000011d54e; ret; 
0x0000000011d5b4: loopne 0x000000000011d5b7; ret; 
0x0000000011d5cb: loopne 0x000000000011d5cf; ret; 
0x0000000011d633: loopne 0x000000000011d636; mov eax, r8d; ret; 
0x0000000011d6c4: loopne 0x000000000011d6c7; ret; 
0x0000000011d744: loopne 0x000000000011d747; ret; 
0x0000000011d7c4: loopne 0x000000000011d7c7; ret; 
0x0000000011d844: loopne 0x000000000011d847; ret; 
0x0000000011d85b: loopne 0x000000000011d861; ret; 
0x0000000011d8c4: loopne 0x000000000011d8c7; ret; 
0x0000000011d941: loopne 0x000000000011d944; ret; 
0x0000000011d9c4: loopne 0x000000000011d9c7; ret; 
0x0000000011db8e: loopne 0x000000000011db91; ret; 
0x0000000011f4d3: loopne 0x000000000011f532; pop r12; pop r13; ret; 
0x00000000120b5d: loopne 0x0000000000120bba; pop rbp; pop r12; pop r13; ret; 
0x00000000126b8f: loopne 0x0000000000126b92; ret; 
0x00000000126c5d: loopne 0x0000000000126cba; mov eax, 0x5; pop r12; pop rbp; ret; 
0x00000000126d6c: loopne 0x0000000000126db6; lea edi, [rip-0x184]; call rax; 
0x000000001287c3: loopne 0x0000000000128820; pop rbp; pop r12; ret; 
0x000000001287ef: loopne 0x0000000000128832; pop rsp; ret; 
0x00000000128817: loopne 0x000000000012885a; pop rsp; ret; 
0x000000001298ce: loopne 0x000000000012992a; pop r12; ret; 
0x0000000012f698: loopne 0x000000000012f6f4; pop r12; ret; 
0x0000000012f89e: loopne 0x000000000012f8fb; pop rbp; pop r12; pop r13; ret; 
0x00000000136238: loopne 0x0000000000136232; add eax, 0x10; ret; 
0x0000000013755f: loopne 0x0000000000137564; shr rax, 0x4; and eax, 0x7f; ret; 
0x00000000137566: loopne 0x00000000001375e7; ret; 
0x00000000137937: loopne 0x0000000000137994; pop rbp; pop r12; ret; 
0x00000000137955: loopne 0x00000000001379b2; pop rbp; pop r12; ret; 
0x0000000013b343: loopne 0x000000000013b3a0; pop rbp; pop r12; pop r13; ret; 
0x0000000013b362: loopne 0x000000000013b3bf; pop rbp; pop r12; pop r13; ret; 
0x0000000013c829: loopne 0x000000000013c888; pop r12; ret; 
0x0000000013d075: loopne 0x000000000013d0d2; pop rbp; pop r12; pop r13; ret; 
0x0000000013d2eb: loopne 0x000000000013d34a; pop r12; ret; 
0x0000000013fd8f: loopne 0x000000000013fd91; add [rax], al; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; call qword ptr [rsp+0x68]; 
0x0000000014078a: loopne 0x00000000001407e7; pop rbp; pop r12; pop r13; ret; 
0x00000000140e14: loopne 0x0000000000140e15; jmp qword ptr [rsi+0xf]; 
0x00000000141022: loopne 0x0000000000141065; pop rsp; ret; 
0x00000000141d2b: loopne 0x0000000000141d88; pop r12; ret; 
0x00000000142414: loopne 0x000000000014245e; mov [rbx+0x18], eax; mov rax, [rbp+0x8]; call qword ptr [rax+0x28]; 
0x00000000142fd0: loopne 0x0000000000142fce; and edx, 0xfffffffc; lea esi, [rax+rdx+0x28]; mov rax, [rdi+0x8]; call qword ptr [rax+0x30]; 
0x000000001438b9: loopne 0x00000000001438fc; pop rsp; ret; 
0x00000000144e82: loopne 0x0000000000144edf; pop rbp; pop r12; pop r13; ret; 
0x00000000145ef3: loopne 0x0000000000145f50; pop rbp; pop r12; pop r13; ret; 
0x0000000014750e: loopne 0x000000000014756b; pop rbp; pop r12; pop r13; ret; 
0x00000000147c2f: loopne 0x0000000000147c8e; pop r12; ret; 
0x000000001482b1: loopne 0x0000000000148310; pop r12; pop r13; pop r14; ret; 
0x0000000014c8ee: loopne 0x000000000014c94d; pop r12; ret; 
0x0000000014d26b: loopne 0x000000000014d26d; add [rax], al; add [rax-0x77], cl; ret; 
0x0000000014e13f: loopne 0x000000000014e19e; pop r12; ret; 
0x0000000014e246: loopne 0x000000000014e2a3; pop rbp; pop r12; pop r13; ret; 
0x0000000014e601: loopne 0x000000000014e660; pop r12; pop r13; pop r14; ret; 
0x000000001502ad: loopne 0x0000000000150315; nop; mov rax, [rdi+0x8]; call qword ptr [rax+0x10]; 
0x000000001509d7: loopne 0x00000000001509d8; mov [rsp], rax; mov rax, [rbp+0x8]; call qword ptr [rax+0x8]; 
0x000000001537a3: loopne 0x0000000000153800; pop rbp; pop r12; ret; 
0x00000000155653: loopne 0x0000000000155696; pop rsp; pop r13; pop r14; ret; 
0x0000000015567c: loopne 0x00000000001556db; pop r12; pop r13; pop r14; ret; 
0x000000001562f9: loopne 0x000000000015633c; pop rsp; ret; 
0x00000000158017: loopne 0x0000000000158076; pop r12; pop r13; ret; 
0x00000000158237: loopne 0x0000000000158296; pop r12; ret; 
0x00000000159ce0: loopne 0x0000000000159cca; push 0xfffffffffffffffa; cld; jmp qword ptr [rsi+0x2e]; 
0x0000000015a4e7: loopne 0x000000000015a52a; pop rsp; ret; 
0x0000000015fed2: loopne 0x000000000015fee3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000160022: loopne 0x0000000000160033; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000160172: loopne 0x0000000000160183; sub [rdi-0x10], ebp; notrack jmp r9; 
0x000000001602c2: loopne 0x00000000001602d3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000160412: loopne 0x0000000000160423; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000160562: loopne 0x0000000000160573; sub [rdi-0x10], ebp; notrack jmp r9; 
0x000000001606b2: loopne 0x00000000001606c3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000160800: loopne 0x0000000000160811; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000160952: loopne 0x0000000000160963; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000160aa2: loopne 0x0000000000160ab3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000160bf2: loopne 0x0000000000160c03; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000160d42: loopne 0x0000000000160d53; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000160e92: loopne 0x0000000000160ea3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000160fe2: loopne 0x0000000000160ff3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000161132: loopne 0x0000000000161143; sub [rdi-0x10], ebp; notrack jmp r9; 
0x0000000016123e: loopne 0x000000000016128d; mov [rdi-0x18], edx; mov [rdi-0x10], r11; mov [rdi-0x8], rcx; ret; 
0x0000000016127c: loopne 0x00000000001612cb; mov [rdi-0x18], edx; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x000000001612b4: loopne 0x0000000000161303; mov [rdi-0x18], edx; mov [rdi-0x10], r11; mov [rdi-0x8], rcx; ret; 
0x000000001612f2: loopne 0x0000000000161341; mov [rdi-0x18], edx; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x0000000016132a: loopne 0x0000000000161379; mov [rdi-0x18], edx; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x00000000161352: loopne 0x00000000001613a1; mov [rdi-0x18], edx; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x000000001628b2: loopne 0x00000000001628c3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000162a02: loopne 0x0000000000162a13; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000162b52: loopne 0x0000000000162b63; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000162ca2: loopne 0x0000000000162cb3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000162df2: loopne 0x0000000000162e03; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000162f42: loopne 0x0000000000162f53; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000163092: loopne 0x00000000001630a3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x000000001631e0: loopne 0x00000000001631f1; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000163332: loopne 0x0000000000163343; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000163482: loopne 0x0000000000163493; sub [rdi-0x10], ebp; notrack jmp r9; 
0x000000001635d2: loopne 0x00000000001635e3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000163722: loopne 0x0000000000163733; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000163872: loopne 0x0000000000163883; sub [rdi-0x10], ebp; notrack jmp r9; 
0x000000001639c2: loopne 0x00000000001639d3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000163b12: loopne 0x0000000000163b23; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000163c1e: loopne 0x0000000000163c6d; mov [rdi-0x18], edx; mov [rdi-0x10], r11; mov [rdi-0x8], rcx; ret; 
0x00000000163c5c: loopne 0x0000000000163cab; mov [rdi-0x18], edx; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x00000000163c94: loopne 0x0000000000163ce3; mov [rdi-0x18], edx; mov [rdi-0x10], r11; mov [rdi-0x8], rcx; ret; 
0x00000000163cd2: loopne 0x0000000000163d21; mov [rdi-0x18], edx; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x00000000163d0a: loopne 0x0000000000163d59; mov [rdi-0x18], edx; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x00000000163d32: loopne 0x0000000000163d81; mov [rdi-0x18], edx; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x00000000166acf: loopne 0x0000000000166ac5; movq [rdi-0x20], mm0; lddqu xmm0, [rsi-0x10]; movdqu [rdi-0x10], xmm0; ret; 
0x000000001695ff: loopne 0x00000000001695f5; movq [rdi-0x20], mm0; lddqu xmm0, [rsi-0x10]; movdqu [rdi-0x10], xmm0; ret; 
0x000000001765fc: loopne 0x00000000001765ff; add [rax], al; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x00000000183535: loopne 0x0000000000183579; mov byte ptr [rdi+rax], 0x0; vzeroupper; ret; 
0x00000000184e15: loopne 0x0000000000184e61; lea eax, [rdi+rax]; vzeroupper; ret; 
0x00000000189c97: loopne 0x0000000000189c5c; vmovdqu [rdi], xmm0; vmovdqu [rsi-0x10], xmm0; ret; 
0x00000000190b1d: loopne 0x0000000000190b60; pop rsp; ret; 
0x00000000190ba0: loopne 0x0000000000190be3; pop rsp; ret; 
0x0000000019169f: loopne 0x00000000001916fc; pop rbp; pop r12; ret; 
0x000000001140d0: minps xmm1, [rax-0x73]; add eax, 0xd3827; pop r12; pop r13; ret; 
0x000000000ba40a: mov [0x127b158d48000114], al; add [rax], eax; cmovne rax, rdx; ret; 
0x000000001416b9: mov [0x3120438b480000c6], eax; test byte ptr [rax-0x77], 0xef; mov dword ptr [rbx+0x18], 0x1; call qword ptr [rax+0x28]; 
0x00000000110129: mov [0x410c247c8bfff808], eax; mov eax, eax; mov eax, 0x4a; syscall; 
0x0000000006a5a7: mov [0x48fffffaa1830fc2], eax; lea edx, [rip+0x13c756]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000000b372a: mov [0x49930c6349000f57], al; lea ecx, [rbx+rcx]; notrack jmp rcx; 
0x0000000016082a: mov [0x499314634900056f], al; lea edx, [rbx+rdx]; notrack jmp rdx; 
0x0000000010ba3a: mov [0x58b489066fffff9], al; add [rbp+rcx], esi; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000001482aa: mov [0x5de0894c5b00004f], al; pop r12; pop r13; pop r14; ret; 
0x00000000090851: mov [0x6411c8c14800155e], eax; xor rax, [0x30]; jmp rax; 
0x00000000028c2e: mov [0x7c8b24348b48001b], al; and al, 0xc; mov rdx, [rax]; call rbp; 
0x0000000017653a: mov [0x8348013880000002], al; fdivr st, st(7); ret; 
0x0000000015e62e: mov [0x840fc9854d000012], al; cdq; adc al, [rax]; add [rbp-0x77], cl; ret far; 
0x000000000c2d2c: mov [0x8944ffffffffb841], eax; rcr byte ptr [rbx-0x3d], 0x45; xor eax, eax; mov eax, r8d; ret; 
0x0000000007f6ea: mov [0x8948e2894c000000], al; out dx, al; mov rdi, rbx; call qword ptr [r13+0x38]; 
0x000000000dff1a: mov [0xb82e75c085001067], al; jne short 0x00000000000dff25; add [rax], al; syscall; 
0x0000000007fc52: mov [0xc483480000441f0f], eax; or [rax-0x1], bh; pop rbx; pop rbp; ret; 
0x0000000014289b: mov [0xc824848b48], eax; mov rdi, rbx; call qword ptr [rax+0x20]; 
0x0000000009c4d7: mov [0xcffee95c4100111d], al; stc; jmp qword ptr [rsi+0xf]; 
0x0000000015790d: mov [0xe80000000abfffee], al; xchg [rsi-0x8], ch; jmp qword ptr [rsi+0xf]; 
0x0000000007cbfa: mov [0xf631e7894800169b], al; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000014b7f2: mov [0xffa314158d48ffff], al; dec dword ptr [rbp+rcx*4+0x4c]; and al, 0x14; call qword ptr [rax]; 
0x000000000643a2: mov [0xfffa00858b0017ea], al; jmp qword ptr [rcx+rcx*4+0x2]; 
0x000000001284ea: mov [0xfffb2ce850fffde7], al; jmp qword ptr [rsi+0x2e]; 
0x000000000dd019: mov [0xffff33e9050f0010], eax; jmp qword ptr [rbp+rax*2-0x75]; 
0x00000000155f8d: mov [0xffff4fe924048b49], al; jmp qword ptr [rsi+0xf]; 
0x00000000137088: mov [r10-0x1], r8b; mov [rax], r10; lea eax, [r9+r8+0x2]; pop rbx; ret; 
0x0000000015432e: mov [r11+0x148087a], cs; ret; 
0x00000000045cb5: mov [r11], ebx; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000000a4a69: mov [r11], rdx; mov rax, r12; pop r12; ret; 
0x00000000107048: mov [r12+0x4], edx; pop rbx; pop rbp; pop r12; ret; 
0x0000000014864d: mov [r12+0x70], edx; call qword ptr [rax+0x30]; 
0x00000000191520: mov [r12-0x80], rbp; mov rax, [rax+rbx*8]; test rax, rax; je short 0x0000000000191530; call rax; 
0x0000000009ed11: mov [r12], r14; pop r12; pop r13; pop r14; ret; 
0x00000000137445: mov [r8+0x1], dl; mov rax, r8; mov byte ptr [r8+0x2], 0x0; ret; 
0x00000000082d40: mov [r8+0x28], rdx; mov [rax], dil; mov eax, r9d; ret; 
0x0000000014522f: mov [r8+0x8], rax; ret; 
0x00000000146f80: mov [r8+0xa8], eax; mov eax, 0x1; ret; 
0x00000000146fdd: mov [r8+0xb4], eax; mov eax, 0x1; ret; 
0x00000000146fad: mov [r8+0xb8], eax; mov eax, 0x1; ret; 
0x000000000969f3: mov [r8+rbp], r9b; add rsp, 0x10; mov rax, r8; pop rbp; ret; 
0x00000000096803: mov [r8+rbx], r9b; add rsp, 0x10; mov rax, r8; pop rbx; ret; 
0x0000000002b302: mov [r8-0x7d], r9b; ret; 
0x00000000149cd2: mov [r8], eax; mov eax, 0x1; ret; 
0x000000001372b7: mov [r8], edx; mov [r9], rax; mov eax, ecx; ret; 
0x00000000137388: mov [r8], r11d; pop rbx; mov [r9], rax; mov eax, ecx; ret; 
0x0000000012b406: mov [r8], r9d; add rsp, 0x18; ret; 
0x000000000dbb20: mov [r8], r9d; add rsp, 0x8; ret; 
0x00000000055c7a: mov [r8], rax; mov eax, 0x1; mov dword ptr [rdx], 0xffffc002; ret; 
0x00000000149d07: mov [r8], rax; mov eax, 0x1; ret; 
0x0000000011bd8c: mov [r8], rax; mov qword ptr [rip+0xc75e6], 0x0; ret; 
0x0000000011bd0c: mov [r8], rax; mov qword ptr [rip+0xc7666], 0x0; ret; 
0x000000000a49fa: mov [r8], rax; mov rax, r9; ret; 
0x000000001367ae: mov [r8], rdi; xor eax, eax; ret; 
0x0000000014522c: mov [r8], rsi; mov [r8+0x8], rax; ret; 
0x0000000009bf87: mov [r8], rsi; ret; 
0x000000000596f9: mov [r9+0x3a8], rdi; mov rsp, rdx; ret; 
0x000000001895f9: mov [r9-0x2], cx; ret; 
0x000000001895fa: mov [r9-0x2], ecx; ret; 
0x000000001895e5: mov [r9-0x4], ecx; ret; 
0x000000001895d4: mov [r9-0x8], rcx; ret; 
0x000000000dbceb: mov [r9], ebx; add rsp, 0x20; mov eax, r8d; pop rbx; ret; 
0x000000000db3c8: mov [r9], ebx; mov rax, r8; pop rbx; ret; 
0x00000000137362: mov [r9], r10; ret; 
0x000000001372ba: mov [r9], rax; mov eax, ecx; ret; 
0x000000000837eb: mov [rax+0x10], ecx; mov [rax+0x40], rdx; movups [rax], xmm0; ret; 
0x00000000084879: mov [rax+0x10], edi; mov [rax+0x40], rsi; mov [rax], rdx; xor eax, eax; ret; 
0x000000000837ad: mov [rax+0x10], edx; mov [rax+0x40], rcx; ret; 
0x000000000837ea: mov [rax+0x10], rcx; mov [rax+0x40], rdx; movups [rax], xmm0; ret; 
0x00000000084878: mov [rax+0x10], rdi; mov [rax+0x40], rsi; mov [rax], rdx; xor eax, eax; ret; 
0x000000000837ac: mov [rax+0x10], rdx; mov [rax+0x40], rcx; ret; 
0x00000000083f8c: mov [rax+0x18], edx; xor eax, eax; mov [rbx], ecx; pop rbx; ret; 
0x00000000083f8b: mov [rax+0x18], rdx; xor eax, eax; mov [rbx], ecx; pop rbx; ret; 
0x00000000137446: mov [rax+0x1], dl; mov rax, r8; mov byte ptr [r8+0x2], 0x0; ret; 
0x00000000072e25: mov [rax+0x1fffffb], dl; ret; 
0x00000000093947: mov [rax+0x20], edx; add rsp, 0x8; ret; 
0x00000000089650: mov [rax+0x20], edx; pop rbx; ret; 
0x00000000093946: mov [rax+0x20], rdx; add rsp, 0x8; ret; 
0x0000000008964f: mov [rax+0x20], rdx; pop rbx; ret; 
0x00000000082d41: mov [rax+0x28], edx; mov [rax], dil; mov eax, r9d; ret; 
0x000000000a4da5: mov [rax+0x2], dl; ret; 
0x000000000837b1: mov [rax+0x40], ecx; ret; 
0x000000000837ef: mov [rax+0x40], edx; movups [rax], xmm0; ret; 
0x0000000008487d: mov [rax+0x40], esi; mov [rax], rdx; xor eax, eax; ret; 
0x000000000837b0: mov [rax+0x40], rcx; ret; 
0x000000000837ee: mov [rax+0x40], rdx; movups [rax], xmm0; ret; 
0x0000000008487c: mov [rax+0x40], rsi; mov [rax], rdx; xor eax, eax; ret; 
0x000000000a4dc3: mov [rax+0x4], dl; ret; 
0x000000000a4deb: mov [rax+0x4], dx; movzx edx, byte ptr [rsp+0xe]; mov [rax+0x6], dl; ret; 
0x000000000a4ddb: mov [rax+0x4], dx; ret; 
0x000000000a4dec: mov [rax+0x4], edx; movzx edx, byte ptr [rsp+0xe]; mov [rax+0x6], dl; ret; 
0x000000000a4ddc: mov [rax+0x4], edx; ret; 
0x000000000dd382: mov [rax+0x64010010], esp; mov [r9], ebx; mov rax, r8; pop rbx; ret; 
0x000000000a4df4: mov [rax+0x6], dl; ret; 
0x000000000dabb3: mov [rax+0x6], eax; add [rax-0x77], cl; ret; 
0x00000000145230: mov [rax+0x8], eax; ret; 
0x00000000089648: mov [rax+0x8], edx; mov rdx, [rax+0x18]; mov [rax+0x20], rdx; pop rbx; ret; 
0x00000000089647: mov [rax+0x8], rdx; mov rdx, [rax+0x18]; mov [rax+0x20], rdx; pop rbx; ret; 
0x00000000146f81: mov [rax+0xa8], eax; mov eax, 0x1; ret; 
0x00000000146fde: mov [rax+0xb4], eax; mov eax, 0x1; ret; 
0x00000000146fae: mov [rax+0xb8], eax; mov eax, 0x1; ret; 
0x0000000011a5d4: mov [rax+rax], cl; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000011a238: mov [rax+rax], cs; mov dword ptr fs:[rax], 0x26; mov rax, 0xffffffffffffffff; ret; 
0x0000000011a148: mov [rax+rax], cs; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011a468: mov [rax+rax], ecx; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011a514: mov [rax+rax], ecx; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x000000000969f4: mov [rax+rbp], cl; add rsp, 0x10; mov rax, r8; pop rbp; ret; 
0x00000000096804: mov [rax+rbx], cl; add rsp, 0x10; mov rax, r8; pop rbx; ret; 
0x00000000053913: mov [rax+rcx*8], edx; xor eax, eax; ret; 
0x00000000053912: mov [rax+rcx*8], rdx; xor eax, eax; ret; 
0x000000000da1bb: mov [rax+rdx+0x64d8f700], ecx; mov [rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x000000001511f7: mov [rax-0x4], edx; mov [rdi+0x18], rax; mov eax, r8d; ret; 
0x0000000002b303: mov [rax-0x7d], cl; ret; 
0x000000000ccb16: mov [rax], al; add [rax], al; call r12; 
0x00000000146f21: mov [rax], al; add [rax], al; mov [rdx+0x6c], ax; mov eax, 0x1; ret; 
0x00000000061155: mov [rax], al; add [rax], al; mov [rdx+0x8], rcx; mov dword ptr [rdx+0x4], 0x1; ret; 
0x00000000041a15: mov [rax], al; add [rax], al; mov r10d, 0x8; mov eax, 0xd; syscall; 
0x0000000014a852: mov [rax], al; add [rax], al; mov rdi, r15; call qword ptr [rax+0x28]; 
0x0000000011652c: mov [rax], al; add [rax], al; syscall; 
0x00000000053178: mov [rax], al; add [rax], al; xor eax, eax; ret; 
0x00000000082d45: mov [rax], bh; mov eax, r9d; ret; 
0x0000000015a5c3: mov [rax], bl; pop rbx; ret; 
0x00000000061b0f: mov [rax], bpl; pop rbx; pop rbp; pop r12; ret; 
0x00000000061b10: mov [rax], ch; pop rbx; pop rbp; pop r12; ret; 
0x000000000b2912: mov [rax], cl; mov rax, rdi; ret; 
0x000000000b39e0: mov [rax], cs; add [rax], al; ret; 
0x00000000082d44: mov [rax], dil; mov eax, r9d; ret; 
0x000000000a4d9d: mov [rax], dx; movzx edx, byte ptr [rsp-0x6]; mov [rax+0x2], dl; ret; 
0x00000000050328: mov [rax], eax; add [rax], al; add rsp, 0x10; pop rbx; ret; 
0x000000000cb003: mov [rax], eax; add [rax], al; ret; 
0x00000000108595: mov [rax], eax; add [rax], al; syscall; 
0x00000000055c7b: mov [rax], eax; mov eax, 0x1; mov dword ptr [rdx], 0xffffc002; ret; 
0x00000000149cd3: mov [rax], eax; mov eax, 0x1; ret; 
0x0000000011bd8d: mov [rax], eax; mov qword ptr [rip+0xc75e6], 0x0; ret; 
0x0000000011bd0d: mov [rax], eax; mov qword ptr [rip+0xc7666], 0x0; ret; 
0x000000000a49fb: mov [rax], eax; mov rax, r9; ret; 
0x00000000069bc4: mov [rax], ebp; pop rbx; pop rbp; pop r12; ret; 
0x000000000453bc: mov [rax], ebx; call qword ptr [rbp+0xf88]; 
0x00000000137389: mov [rax], ebx; pop rbx; mov [r9], rax; mov eax, ecx; ret; 
0x0000000012b407: mov [rax], ecx; add rsp, 0x18; ret; 
0x000000000dbb21: mov [rax], ecx; add rsp, 0x8; ret; 
0x00000000081ede: mov [rax], ecx; mov eax, [rdx]; ret; 
0x000000000a4db0: mov [rax], ecx; ret; 
0x00000000111c75: mov [rax], edi; mov eax, 0xffffffff; ret; 
0x000000000f977f: mov [rax], edi; mov rax, r8; ret; 
0x00000000097550: mov [rax], edi; ret; 
0x000000001367af: mov [rax], edi; xor eax, eax; ret; 
0x00000000119157: mov [rax], edx; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000013708d: mov [rax], edx; lea eax, [r9+r8+0x2]; pop rbx; ret; 
0x000000001372b8: mov [rax], edx; mov [r9], rax; mov eax, ecx; ret; 
0x000000000837aa: mov [rax], edx; mov [rax+0x10], rdx; mov [rax+0x40], rcx; ret; 
0x00000000045e4d: mov [rax], edx; mov [rsi], edx; mov eax, r8d; ret; 
0x000000000a4d9e: mov [rax], edx; movzx edx, byte ptr [rsp-0x6]; mov [rax+0x2], dl; ret; 
0x000000000a4dbc: mov [rax], edx; movzx edx, byte ptr [rsp-0xc]; mov [rax+0x4], dl; ret; 
0x000000000a4dd4: mov [rax], edx; movzx edx, word ptr [rsp-0x14]; mov [rax+0x4], dx; ret; 
0x000000000387d8: mov [rax], edx; ret; 
0x00000000084848: mov [rax], edx; xor eax, eax; ret; 
0x0000000010f145: mov [rax], es; add [rax], al; syscall; 
0x0000000014522d: mov [rax], esi; mov [r8+0x8], rax; ret; 
0x0000000011bd54: mov [rax], esi; mov qword ptr [rax+0x8], 0x1; mov qword ptr [rax+0x10], 0x0; mov qword ptr [rip+0xc760f], 0x0; ret; 
0x00000000097546: mov [rax], esi; mov rax, [rip+0x14b971]; mov [rax], rdi; ret; 
0x0000000009325c: mov [rax], esi; mov rax, [rip+0x14fc5b]; mov [rax], rdx; ret; 
0x0000000009bf88: mov [rax], esi; ret; 
0x0000000013708c: mov [rax], r10; lea eax, [r9+r8+0x2]; pop rbx; ret; 
0x000000000453bb: mov [rax], rbx; call qword ptr [rbp+0xf88]; 
0x00000000081edd: mov [rax], rcx; mov eax, [rdx]; ret; 
0x000000000f977e: mov [rax], rdi; mov rax, r8; ret; 
0x0000000009754f: mov [rax], rdi; ret; 
0x00000000119156: mov [rax], rdx; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000000837a9: mov [rax], rdx; mov [rax+0x10], rdx; mov [rax+0x40], rcx; ret; 
0x000000000387d7: mov [rax], rdx; ret; 
0x00000000084847: mov [rax], rdx; xor eax, eax; ret; 
0x0000000011bd53: mov [rax], rsi; mov qword ptr [rax+0x8], 0x1; mov qword ptr [rax+0x10], 0x0; mov qword ptr [rip+0xc760f], 0x0; ret; 
0x00000000097545: mov [rax], rsi; mov rax, [rip+0x14b971]; mov [rax], rdi; ret; 
0x0000000009325b: mov [rax], rsi; mov rax, [rip+0x14fc5b]; mov [rax], rdx; ret; 
0x000000000a4d90: mov [rax], si; ret; 
0x000000000da1bc: mov [rax], ss; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x2]; mov rax, 0xffffffffffffffff; ret; 
0x00000000159505: mov [rbp+0x18], eax; lea rdi, [r13+0x988]; call qword ptr [r13+0xf90]; 
0x00000000159504: mov [rbp+0x18], rax; lea rdi, [r13+0x988]; call qword ptr [r13+0xf90]; 
0x000000000931e8: mov [rbp+0x31], eax; sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; syscall; 
0x00000000083ef1: mov [rbp+0x74], eax; mov eax, 0x1; pop rbp; pop r12; ret; 
0x000000001080bb: mov [rbp-0x2708fff3], ebp; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000126217: mov [rbp-0x68], eax; movdqu xmm7, [rbx-0x18]; mov dword ptr [rbp-0x80], 0x0; movups [rbp-0x78], xmm7; call rcx; 
0x00000000126216: mov [rbp-0x68], rax; movdqu xmm7, [rbx-0x18]; mov dword ptr [rbp-0x80], 0x0; movups [rbp-0x78], xmm7; call rcx; 
0x0000000017e5e6: mov [rbp-0x7d000000], ss; rol byte ptr [rax+0x48], 0x1; clc; vzeroupper; ret; 
0x00000000041106: mov [rbp-0x7f000000], es; sti; push rax; ret; 
0x00000000125fad: mov [rbp-0x80], eax; movups [rbp-0x78], xmm1; call rcx; 
0x00000000126149: mov [rbp-0x80], eax; movups [rbp-0x78], xmm2; call r8; 
0x00000000126397: mov [rbp-0x80], edx; mov rdx, r12; movups [rbp-0x78], xmm3; call rax; 
0x00000000126097: mov [rbp-0x80], edx; mov rdx, r12; movups [rbp-0x78], xmm4; call rax; 
0x000000001265c7: mov [rbp-0x80], edx; mov rdx, r12; movups [rbp-0x78], xmm6; call rax; 
0x0000000012669e: mov [rbp-0x80], edx; mov rdx, r12; movups [rbp-0x78], xmm7; call rax; 
0x00000000126035: mov [rbp-0x80], edx; mov rdx, r13; movups [rbp-0x78], xmm5; call rax; 
0x0000000011b640: mov [rbp-0x830], eax; mov eax, ebx; syscall; 
0x0000000011b63f: mov [rbp-0x830], rax; mov eax, ebx; syscall; 
0x0000000007424b: mov [rbp-0x8a0], esi; call qword ptr [r8+rcx*8-0x40]; 
0x0000000007424a: mov [rbp-0x8a0], rsi; call qword ptr [r8+rcx*8-0x40]; 
0x00000000074244: mov [rbp-0x8b0], eax; mov [rbp-0x8a0], rsi; call qword ptr [r8+rcx*8-0x40]; 
0x00000000079e9a: mov [rbp-0x8b0], esi; call qword ptr [r8+rcx*8-0x40]; 
0x00000000074243: mov [rbp-0x8b0], rax; mov [rbp-0x8a0], rsi; call qword ptr [r8+rcx*8-0x40]; 
0x00000000079e99: mov [rbp-0x8b0], rsi; call qword ptr [r8+rcx*8-0x40]; 
0x00000000079e93: mov [rbp-0x8c0], eax; mov [rbp-0x8b0], rsi; call qword ptr [r8+rcx*8-0x40]; 
0x00000000079e92: mov [rbp-0x8c0], rax; mov [rbp-0x8b0], rsi; call qword ptr [r8+rcx*8-0x40]; 
0x0000000007385c: mov [rbp-0x8f5], cl; mov [rbp-0x900], r8b; call rax; 
0x0000000007385b: mov [rbp-0x8f5], r9b; mov [rbp-0x900], r8b; call rax; 
0x00000000073863: mov [rbp-0x900], al; call rax; 
0x00000000073862: mov [rbp-0x900], r8b; call rax; 
0x00000000078d1b: mov [rbp-0x930], bl; call rax; 
0x00000000078d1a: mov [rbp-0x930], r11b; call rax; 
0x00000000078d14: mov [rbp-0x938], ecx; mov [rbp-0x930], r11b; call rax; 
0x00000000078d13: mov [rbp-0x938], r9d; mov [rbp-0x930], r11b; call rax; 
0x0000000005b580: mov [rbp-0xe8], eax; call rax; 
0x0000000005b57f: mov [rbp-0xe8], r8; call rax; 
0x00000000099e51: mov [rbp], eax; test rax, rax; je 0x0000000000099f30; call rax; 
0x000000000dca28: mov [rbp], ebx; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000001350c2: mov [rbp], esp; pop rbx; pop rbp; pop r12; ret; 
0x000000001350c1: mov [rbp], r12d; pop rbx; pop rbp; pop r12; ret; 
0x00000000099e50: mov [rbp], rax; test rax, rax; je 0x0000000000099f30; call rax; 
0x000000000dca27: mov [rbp], rbx; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000138ca4: mov [rbx+0x10], eax; mov eax, 0x14; add edx, 0x1; syscall; 
0x00000000089661: mov [rbx+0x10], eax; mov rax, [rbx+0x20]; mov [rbx+0x28], rax; pop rbx; ret; 
0x0000000015981a: mov [rbx+0x10], eax; pop rax; pop rdx; pop rbx; ret; 
0x00000000090ec7: mov [rbx+0x10], eax; xor eax, eax; pop rbx; ret; 
0x00000000121573: mov [rbx+0x10], ebp; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000138ca3: mov [rbx+0x10], rax; mov eax, 0x14; add edx, 0x1; syscall; 
0x00000000089660: mov [rbx+0x10], rax; mov rax, [rbx+0x20]; mov [rbx+0x28], rax; pop rbx; ret; 
0x00000000159819: mov [rbx+0x10], rax; pop rax; pop rdx; pop rbx; ret; 
0x00000000090ec6: mov [rbx+0x10], rax; xor eax, eax; pop rbx; ret; 
0x00000000121572: mov [rbx+0x10], rbp; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000015432f: mov [rbx+0x148087a], cs; ret; 
0x00000000142416: mov [rbx+0x18], eax; mov rax, [rbp+0x8]; call qword ptr [rax+0x28]; 
0x000000001597d2: mov [rbx+0x18], eax; pop rax; pop rdx; pop rbx; ret; 
0x000000001215c3: mov [rbx+0x18], ebp; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000000453b7: mov [rbx+0x18], edx; mov fs:[rax], rbx; call qword ptr [rbp+0xf88]; 
0x00000000142415: mov [rbx+0x18], rax; mov rax, [rbp+0x8]; call qword ptr [rax+0x28]; 
0x000000001597d1: mov [rbx+0x18], rax; pop rax; pop rdx; pop rbx; ret; 
0x000000001215c2: mov [rbx+0x18], rbp; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000000453b6: mov [rbx+0x18], rdx; mov fs:[rax], rbx; call qword ptr [rbp+0xf88]; 
0x000000001449d8: mov [rbx+0x20], esi; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000001449d7: mov [rbx+0x20], rsi; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000089669: mov [rbx+0x28], eax; pop rbx; ret; 
0x00000000089668: mov [rbx+0x28], rax; pop rbx; ret; 
0x00000000117868: mov [rbx+0x38], ecx; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000117867: mov [rbx+0x38], rcx; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000004152f: mov [rbx+0x40], esi; pop rbx; ret; 
0x0000000004150c: mov [rbx+0x40], esi; xor eax, eax; pop rbx; ret; 
0x00000000149e29: mov [rbx+0x48], ebp; bswap ebp; call qword ptr [rax+0x18]; 
0x0000000009b608: mov [rbx+0x48], edi; movsxd rsi, esi; movups [rbx+0x38], xmm0; mov [rbx], rsi; call rcx; 
0x0000000009b607: mov [rbx+0x48], rdi; movsxd rsi, esi; movups [rbx+0x38], xmm0; mov [rbx], rsi; call rcx; 
0x00000000106f13: mov [rbx+0x4], edx; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000008476e: mov [rbx+0x60], ebp; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000008fa78: mov [rbx+0x60], ebp; pop rbx; pop rbp; pop r12; ret; 
0x0000000008476d: mov [rbx+0x60], rbp; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000008fa77: mov [rbx+0x60], rbp; pop rbx; pop rbp; pop r12; ret; 
0x00000000083e5e: mov [rbx+0x74], edx; pop rbx; pop rbp; pop r12; ret; 
0x00000000034827: mov [rbx+0x8], eax; cmp eax, 0xfffffffd; je short 0x0000000000034848; pop rbx; ret; 
0x00000000121523: mov [rbx+0x8], ebp; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000121522: mov [rbx+0x8], rbp; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000008aa1f: mov [rbx+0x90], eax; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000008aa1e: mov [rbx+0x90], rax; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000001470be: mov [rbx+0xa8], ebp; bswap ebp; mov ebp, ebp; call qword ptr [rax+0x18]; 
0x0000000014b694: mov [rbx+0xc], eax; mov rax, [rbx]; mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x20]; 
0x0000000011b2bb: mov [rbx+0xc], edi; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x2]; mov eax, 0xffffffff; ret; 
0x0000000008aadf: mov [rbx+0xd8], ecx; lea rcx, [rip+0x15a3d4]; mov [rdx+0xe0], rcx; pop rbx; ret; 
0x0000000008aade: mov [rbx+0xd8], rcx; lea rcx, [rip+0x15a3d4]; mov [rdx+0xe0], rcx; pop rbx; ret; 
0x00000000035649: mov [rbx+r13*8], r12; mov rax, [rax+r13*8]; test rax, rax; je short 0x0000000000035658; call rax; 
0x0000000003564a: mov [rbx+rbp*8], esp; mov rax, [rax+r13*8]; test rax, rax; je short 0x0000000000035658; call rax; 
0x0000000011d15a: mov [rbx-0x2d7aeeec], cl; jne short 0x000000000011d170; mov eax, r8d; ret; 
0x0000000014d0fd: mov [rbx], eax; mov rax, [rip+0x95c82]; mov dword ptr [rip+0x9bdd0], 0x2; pop rbx; ret; 
0x0000000014d02d: mov [rbx], eax; mov rax, [rip+0x95df2]; mov dword ptr [rip+0x9bea0], 0x2; pop rbx; ret; 
0x0000000014d1cd: mov [rbx], eax; mov rax, [rip+0x95e0a]; mov dword ptr [rip+0x9bd00], 0x2; pop rbx; ret; 
0x0000000014cf5d: mov [rbx], eax; mov rax, [rip+0x95e82]; mov dword ptr [rip+0x9bf70], 0x2; pop rbx; ret; 
0x00000000159d25: mov [rbx], eax; pop rax; pop rdx; pop rbx; ret; 
0x0000000014cead: mov [rbx], eax; pop rbx; mov dword ptr [rip+0x9c026], 0x2; ret; 
0x0000000009a1ad: mov [rbx], eax; pop rbx; pop rbp; pop r12; ret; 
0x0000000014cf06: mov [rbx], eax; pop rbx; ret; 
0x000000001146bc: mov [rbx], eax; pop rbx; setne al; movzx eax, al; ret; 
0x00000000099f8a: mov [rbx], eax; test rax, rax; je 0x000000000009a060; call rax; 
0x0000000014232c: mov [rbx], eax; xor eax, eax; call qword ptr [rbx+0x18]; 
0x000000001356c3: mov [rbx], ebp; mov eax, 0x3; mov edi, [rbp-0x60]; syscall; 
0x00000000045cb6: mov [rbx], ebx; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000083f91: mov [rbx], ecx; pop rbx; ret; 
0x0000000009b548: mov [rbx], edi; call rcx; 
0x000000000a4a6a: mov [rbx], edx; mov rax, r12; pop r12; ret; 
0x00000000045467: mov [rbx], edx; mov rdi, [rbp+0x8]; call rax; 
0x0000000015a708: mov [rbx], edx; pop rbx; ret; 
0x0000000009b613: mov [rbx], esi; call rcx; 
0x0000000007f576: mov [rbx], esi; pop rbx; pop rbp; pop r12; ret; 
0x0000000013c88c: mov [rbx], esp; pop rbx; pop rbp; pop r12; ret; 
0x0000000013c88b: mov [rbx], r12d; pop rbx; pop rbp; pop r12; ret; 
0x000000001356c2: mov [rbx], r13d; mov eax, 0x3; mov edi, [rbp-0x60]; syscall; 
0x0000000014d0fc: mov [rbx], rax; mov rax, [rip+0x95c82]; mov dword ptr [rip+0x9bdd0], 0x2; pop rbx; ret; 
0x0000000014d02c: mov [rbx], rax; mov rax, [rip+0x95df2]; mov dword ptr [rip+0x9bea0], 0x2; pop rbx; ret; 
0x0000000014d1cc: mov [rbx], rax; mov rax, [rip+0x95e0a]; mov dword ptr [rip+0x9bd00], 0x2; pop rbx; ret; 
0x0000000014cf5c: mov [rbx], rax; mov rax, [rip+0x95e82]; mov dword ptr [rip+0x9bf70], 0x2; pop rbx; ret; 
0x00000000159d24: mov [rbx], rax; pop rax; pop rdx; pop rbx; ret; 
0x0000000014ceac: mov [rbx], rax; pop rbx; mov dword ptr [rip+0x9c026], 0x2; ret; 
0x0000000009a1ac: mov [rbx], rax; pop rbx; pop rbp; pop r12; ret; 
0x0000000014cf05: mov [rbx], rax; pop rbx; ret; 
0x000000001146bb: mov [rbx], rax; pop rbx; setne al; movzx eax, al; ret; 
0x00000000099f89: mov [rbx], rax; test rax, rax; je 0x000000000009a060; call rax; 
0x0000000014232b: mov [rbx], rax; xor eax, eax; call qword ptr [rbx+0x18]; 
0x0000000009b547: mov [rbx], rdi; call rcx; 
0x00000000045466: mov [rbx], rdx; mov rdi, [rbp+0x8]; call rax; 
0x0000000009b612: mov [rbx], rsi; call rcx; 
0x00000000172223: mov [rcx+0x2], dl; ret; 
0x00000000172262: mov [rcx+0x3], edx; ret; 
0x000000000596fa: mov [rcx+0x3a8], edi; mov rsp, rdx; ret; 
0x00000000172242: mov [rcx+0x4], dl; ret; 
0x00000000172252: mov [rcx+0x4], dx; ret; 
0x00000000172253: mov [rcx+0x4], edx; ret; 
0x000000001722c4: mov [rcx+0x5], edx; ret; 
0x000000001722c3: mov [rcx+0x5], rdx; ret; 
0x000000001722d4: mov [rcx+0x6], edx; ret; 
0x000000001722d3: mov [rcx+0x6], rdx; ret; 
0x000000001722a3: mov [rcx+0x7], edx; ret; 
0x000000001722e3: mov [rcx+0x7], rdx; ret; 
0x00000000172283: mov [rcx+0x8], dl; ret; 
0x00000000172293: mov [rcx+0x8], dx; ret; 
0x00000000172294: mov [rcx+0x8], edx; ret; 
0x000000001722f3: mov [rcx+0x8], rdx; ret; 
0x00000000142f31: mov [rcx+rax-0x3e], cl; notrack jmp rdx; 
0x000000000f9268: mov [rcx+rax-0x3f], cl; notrack jmp rcx; 
0x000000001895fb: mov [rcx-0x2], ecx; ret; 
0x000000001084bb: mov [rcx-0x389bfff3], ebp; add [rsi], dl; add [rax], al; add [rax-0x1], bh; ret; 
0x0000000003aff4: mov [rcx-0x3eb7ffe6], ch; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x000000001895e6: mov [rcx-0x4], ecx; ret; 
0x000000001895d5: mov [rcx-0x8], ecx; ret; 
0x0000000015937d: mov [rcx], cl; add [rax], al; call qword ptr [r13+0xf88]; 
0x0000000015950b: mov [rcx], cl; add [rax], al; call qword ptr [r13+0xf90]; 
0x000000000453e1: mov [rcx], cl; add [rax], al; call qword ptr [rbp+0xf90]; 
0x000000000ce8ff: mov [rcx], dl; add [rcx], al; add rsp, 0x8; ret; 
0x00000000172200: mov [rcx], dl; ret; 
0x00000000172220: mov [rcx], dx; mov [rcx+0x2], dl; ret; 
0x00000000172210: mov [rcx], dx; ret; 
0x000000001372bb: mov [rcx], eax; mov eax, ecx; ret; 
0x00000000041bde: mov [rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000082a07: mov [rcx], eax; ret; 
0x000000001449f6: mov [rcx], eax; sub rdx, rsi; mov rbp, rdx; call qword ptr [rbx+0x10]; 
0x0000000008735a: mov [rcx], eax; xor eax, eax; pop rbx; ret; 
0x000000000dbcec: mov [rcx], ebx; add rsp, 0x20; mov eax, r8d; pop rbx; ret; 
0x000000000db3c9: mov [rcx], ebx; mov rax, r8; pop rbx; ret; 
0x00000000172221: mov [rcx], edx; mov [rcx+0x2], dl; ret; 
0x00000000172260: mov [rcx], edx; mov [rcx+0x3], edx; ret; 
0x00000000172240: mov [rcx], edx; mov [rcx+0x4], dl; ret; 
0x00000000172250: mov [rcx], edx; mov [rcx+0x4], dx; ret; 
0x000000001722c1: mov [rcx], edx; mov [rcx+0x5], rdx; ret; 
0x000000001722d1: mov [rcx], edx; mov [rcx+0x6], rdx; ret; 
0x000000001722a1: mov [rcx], edx; mov [rcx+0x7], edx; ret; 
0x000000001722e1: mov [rcx], edx; mov [rcx+0x7], rdx; ret; 
0x00000000172281: mov [rcx], edx; mov [rcx+0x8], dl; ret; 
0x00000000172291: mov [rcx], edx; mov [rcx+0x8], dx; ret; 
0x000000001722b1: mov [rcx], edx; mov [rcx+0x8], edx; ret; 
0x000000001722f1: mov [rcx], edx; mov [rcx+0x8], rdx; ret; 
0x00000000143fd0: mov [rcx], edx; mov edx, eax; call qword ptr [rbx+0x10]; 
0x00000000137363: mov [rcx], edx; ret; 
0x000000000386f2: mov [rcx], esi; cmp rax, rdx; mov rdx, 0xffffffffffffffff; cmove rax, rdx; ret; 
0x00000000087359: mov [rcx], rax; xor eax, eax; pop rbx; ret; 
0x000000001722c0: mov [rcx], rdx; mov [rcx+0x5], rdx; ret; 
0x000000001722d0: mov [rcx], rdx; mov [rcx+0x6], rdx; ret; 
0x000000001722a0: mov [rcx], rdx; mov [rcx+0x7], edx; ret; 
0x000000001722e0: mov [rcx], rdx; mov [rcx+0x7], rdx; ret; 
0x00000000172280: mov [rcx], rdx; mov [rcx+0x8], dl; ret; 
0x00000000172290: mov [rcx], rdx; mov [rcx+0x8], dx; ret; 
0x000000001722b0: mov [rcx], rdx; mov [rcx+0x8], edx; ret; 
0x000000001722f0: mov [rcx], rdx; mov [rcx+0x8], rdx; ret; 
0x00000000172270: mov [rcx], rdx; ret; 
0x000000000386f1: mov [rcx], rsi; cmp rax, rdx; mov rdx, 0xffffffffffffffff; cmove rax, rdx; ret; 
0x00000000107c66: mov [rdi+0x108], eax; xor eax, eax; ret; 
0x000000000b73ba: mov [rdi+0x10], ch; ret; 
0x000000000b576b: mov [rdi+0x10], cl; lea rax, [rdi+0x11]; ret; 
0x000000000b3f4b: mov [rdi+0x10], cl; ret; 
0x000000000b73cb: mov [rdi+0x10], cl; xor ch, ch; mov [rdi+0x11], ch; ret; 
0x000000000b491c: mov [rdi+0x10], cx; lea rax, [rdi+0x11]; ret; 
0x000000000b578c: mov [rdi+0x10], cx; lea rax, [rdi+0x12]; ret; 
0x000000000b326c: mov [rdi+0x10], cx; ret; 
0x000000000b3bdc: mov [rdi+0x10], cx; sub r8, 0x12; lea rdi, [rdi+0x12]; jne 0x00000000000b4270; ret; 
0x000000000b73ec: mov [rdi+0x10], cx; xor ch, ch; mov [rdi+0x12], ch; ret; 
0x000000000b4908: mov [rdi+0x10], dh; lea rax, [rdi+0x10]; ret; 
0x000000000b3258: mov [rdi+0x10], dh; ret; 
0x000000000b3bb8: mov [rdi+0x10], dh; sub r8, 0x11; lea rdi, [rdi+0x11]; jne 0x00000000000b4270; ret; 
0x0000000011bd30: mov [rdi+0x10], eax; jb short 0x000000000011bd48; mov qword ptr [rip+0xc7640], 0x2; ret; 
0x000000000b491d: mov [rdi+0x10], ecx; lea rax, [rdi+0x11]; ret; 
0x000000000b578d: mov [rdi+0x10], ecx; lea rax, [rdi+0x12]; ret; 
0x000000000b495b: mov [rdi+0x10], ecx; lea rax, [rdi+0x13]; ret; 
0x000000000b57cb: mov [rdi+0x10], ecx; lea rax, [rdi+0x14]; ret; 
0x000000000b49dd: mov [rdi+0x10], ecx; lea rax, [rdi+0x17]; ret; 
0x000000000b584d: mov [rdi+0x10], ecx; lea rax, [rdi+0x18]; ret; 
0x000000000b497b: mov [rdi+0x10], ecx; mov [rdi+0x14], dh; lea rax, [rdi+0x14]; ret; 
0x000000000b32ab: mov [rdi+0x10], ecx; mov [rdi+0x14], dh; ret; 
0x000000000b57ee: mov [rdi+0x10], ecx; mov [rdi+0x14], dl; lea rax, [rdi+0x15]; ret; 
0x000000000b3f9e: mov [rdi+0x10], ecx; mov [rdi+0x14], dl; ret; 
0x000000000b744e: mov [rdi+0x10], ecx; mov [rdi+0x14], dl; xor ch, ch; mov [rdi+0x15], ch; ret; 
0x000000000b49fd: mov [rdi+0x10], ecx; mov [rdi+0x18], dh; lea rax, [rdi+0x18]; ret; 
0x000000000b332d: mov [rdi+0x10], ecx; mov [rdi+0x18], dh; ret; 
0x0000000005458f: mov [rdi+0x10], ecx; ret; 
0x000000000b3bdd: mov [rdi+0x10], ecx; sub r8, 0x12; lea rdi, [rdi+0x12]; jne 0x00000000000b4270; ret; 
0x000000000b3c1b: mov [rdi+0x10], ecx; sub r8, 0x14; lea rdi, [rdi+0x14]; jne 0x00000000000b4270; ret; 
0x000000000b3c9d: mov [rdi+0x10], ecx; sub r8, 0x18; lea rdi, [rdi+0x18]; jne 0x00000000000b4270; ret; 
0x000000000b73ed: mov [rdi+0x10], ecx; xor ch, ch; mov [rdi+0x12], ch; ret; 
0x000000000b742b: mov [rdi+0x10], ecx; xor ch, ch; mov [rdi+0x14], ch; ret; 
0x000000000b74ad: mov [rdi+0x10], ecx; xor ch, ch; mov [rdi+0x18], ch; ret; 
0x000000000b4a40: mov [rdi+0x10], edx; mov [rdi+0x17], ecx; lea rax, [rdi+0x1a]; ret; 
0x000000000b58b0: mov [rdi+0x10], edx; mov [rdi+0x17], ecx; lea rax, [rdi+0x1b]; ret; 
0x000000000b3370: mov [rdi+0x10], edx; mov [rdi+0x17], ecx; ret; 
0x000000000b7510: mov [rdi+0x10], edx; mov [rdi+0x17], ecx; xor ch, ch; mov [rdi+0x1b], ch; ret; 
0x000000000b5870: mov [rdi+0x10], edx; mov [rdi+0x18], cl; lea rax, [rdi+0x19]; ret; 
0x000000000b4020: mov [rdi+0x10], edx; mov [rdi+0x18], cl; ret; 
0x000000000b74d0: mov [rdi+0x10], edx; mov [rdi+0x18], cl; xor ch, ch; mov [rdi+0x19], ch; ret; 
0x000000000b4a21: mov [rdi+0x10], edx; mov [rdi+0x18], cx; lea rax, [rdi+0x19]; ret; 
0x000000000b5891: mov [rdi+0x10], edx; mov [rdi+0x18], cx; lea rax, [rdi+0x1a]; ret; 
0x000000000b3351: mov [rdi+0x10], edx; mov [rdi+0x18], cx; ret; 
0x000000000b74f1: mov [rdi+0x10], edx; mov [rdi+0x18], cx; xor ch, ch; mov [rdi+0x1a], ch; ret; 
0x000000000b4a60: mov [rdi+0x10], edx; mov [rdi+0x18], ecx; lea rax, [rdi+0x1b]; ret; 
0x000000000b58d0: mov [rdi+0x10], edx; mov [rdi+0x18], ecx; lea rax, [rdi+0x1c]; ret; 
0x000000000b3390: mov [rdi+0x10], edx; mov [rdi+0x18], ecx; ret; 
0x000000000b7530: mov [rdi+0x10], edx; mov [rdi+0x18], ecx; xor ch, ch; mov [rdi+0x1c], ch; ret; 
0x000000000de5c8: mov [rdi+0x10], edx; mov rdx, [rdi+0x18]; mov [rdi+0x18], rdx; ret; 
0x0000000005458e: mov [rdi+0x10], r9; ret; 
0x0000000011bd2f: mov [rdi+0x10], rax; jb short 0x000000000011bd48; mov qword ptr [rip+0xc7640], 0x2; ret; 
0x000000000b49dc: mov [rdi+0x10], rcx; lea rax, [rdi+0x17]; ret; 
0x000000000b584c: mov [rdi+0x10], rcx; lea rax, [rdi+0x18]; ret; 
0x000000000b49fc: mov [rdi+0x10], rcx; mov [rdi+0x18], dh; lea rax, [rdi+0x18]; ret; 
0x000000000b332c: mov [rdi+0x10], rcx; mov [rdi+0x18], dh; ret; 
0x000000000b330c: mov [rdi+0x10], rcx; ret; 
0x000000000b3c9c: mov [rdi+0x10], rcx; sub r8, 0x18; lea rdi, [rdi+0x18]; jne 0x00000000000b4270; ret; 
0x000000000b74ac: mov [rdi+0x10], rcx; xor ch, ch; mov [rdi+0x18], ch; ret; 
0x000000000b4a3f: mov [rdi+0x10], rdx; mov [rdi+0x17], ecx; lea rax, [rdi+0x1a]; ret; 
0x000000000b58af: mov [rdi+0x10], rdx; mov [rdi+0x17], ecx; lea rax, [rdi+0x1b]; ret; 
0x000000000b336f: mov [rdi+0x10], rdx; mov [rdi+0x17], ecx; ret; 
0x000000000b750f: mov [rdi+0x10], rdx; mov [rdi+0x17], ecx; xor ch, ch; mov [rdi+0x1b], ch; ret; 
0x000000000b586f: mov [rdi+0x10], rdx; mov [rdi+0x18], cl; lea rax, [rdi+0x19]; ret; 
0x000000000b401f: mov [rdi+0x10], rdx; mov [rdi+0x18], cl; ret; 
0x000000000b74cf: mov [rdi+0x10], rdx; mov [rdi+0x18], cl; xor ch, ch; mov [rdi+0x19], ch; ret; 
0x000000000b4a20: mov [rdi+0x10], rdx; mov [rdi+0x18], cx; lea rax, [rdi+0x19]; ret; 
0x000000000b5890: mov [rdi+0x10], rdx; mov [rdi+0x18], cx; lea rax, [rdi+0x1a]; ret; 
0x000000000b3350: mov [rdi+0x10], rdx; mov [rdi+0x18], cx; ret; 
0x000000000b74f0: mov [rdi+0x10], rdx; mov [rdi+0x18], cx; xor ch, ch; mov [rdi+0x1a], ch; ret; 
0x000000000b4a5f: mov [rdi+0x10], rdx; mov [rdi+0x18], ecx; lea rax, [rdi+0x1b]; ret; 
0x000000000b58cf: mov [rdi+0x10], rdx; mov [rdi+0x18], ecx; lea rax, [rdi+0x1c]; ret; 
0x000000000b338f: mov [rdi+0x10], rdx; mov [rdi+0x18], ecx; ret; 
0x000000000b752f: mov [rdi+0x10], rdx; mov [rdi+0x18], ecx; xor ch, ch; mov [rdi+0x1c], ch; ret; 
0x000000000de5c7: mov [rdi+0x10], rdx; mov rdx, [rdi+0x18]; mov [rdi+0x18], rdx; ret; 
0x00000000107c4e: mov [rdi+0x10c], esi; xor eax, eax; ret; 
0x000000000b73d0: mov [rdi+0x11], ch; ret; 
0x000000000b73f2: mov [rdi+0x12], ch; ret; 
0x000000000b7410: mov [rdi+0x13], ch; ret; 
0x000000000b7430: mov [rdi+0x14], ch; ret; 
0x000000000b497e: mov [rdi+0x14], dh; lea rax, [rdi+0x14]; ret; 
0x000000000b32ae: mov [rdi+0x14], dh; ret; 
0x000000000b3c3e: mov [rdi+0x14], dh; sub r8, 0x15; lea rdi, [rdi+0x15]; jne 0x00000000000b4270; ret; 
0x000000000b57f1: mov [rdi+0x14], dl; lea rax, [rdi+0x15]; ret; 
0x000000000b3fa1: mov [rdi+0x14], dl; ret; 
0x000000000b7451: mov [rdi+0x14], dl; xor ch, ch; mov [rdi+0x15], ch; ret; 
0x000000000b7456: mov [rdi+0x15], ch; ret; 
0x0000000010ec1b: mov [rdi+0x16], ax; ret; 
0x000000000b7472: mov [rdi+0x16], ch; ret; 
0x0000000010ec1c: mov [rdi+0x16], eax; ret; 
0x000000000b7492: mov [rdi+0x17], ch; ret; 
0x000000000b4a43: mov [rdi+0x17], ecx; lea rax, [rdi+0x1a]; ret; 
0x000000000b58b3: mov [rdi+0x17], ecx; lea rax, [rdi+0x1b]; ret; 
0x000000000b3373: mov [rdi+0x17], ecx; ret; 
0x000000000b3d23: mov [rdi+0x17], ecx; sub r8, 0x1b; lea rdi, [rdi+0x1b]; jne 0x00000000000b4270; ret; 
0x000000000b7513: mov [rdi+0x17], ecx; xor ch, ch; mov [rdi+0x1b], ch; ret; 
0x000000000b74b2: mov [rdi+0x18], ch; ret; 
0x000000000b5873: mov [rdi+0x18], cl; lea rax, [rdi+0x19]; ret; 
0x000000000b4023: mov [rdi+0x18], cl; ret; 
0x000000000b74d3: mov [rdi+0x18], cl; xor ch, ch; mov [rdi+0x19], ch; ret; 
0x000000000b4a24: mov [rdi+0x18], cx; lea rax, [rdi+0x19]; ret; 
0x000000000b5894: mov [rdi+0x18], cx; lea rax, [rdi+0x1a]; ret; 
0x000000000b3354: mov [rdi+0x18], cx; ret; 
0x000000000b3cf4: mov [rdi+0x18], cx; sub r8, 0x1a; lea rdi, [rdi+0x1a]; jne 0x00000000000b4270; ret; 
0x000000000b74f4: mov [rdi+0x18], cx; xor ch, ch; mov [rdi+0x1a], ch; ret; 
0x000000000b4a00: mov [rdi+0x18], dh; lea rax, [rdi+0x18]; ret; 
0x000000000b3330: mov [rdi+0x18], dh; ret; 
0x000000000b3cc0: mov [rdi+0x18], dh; sub r8, 0x19; lea rdi, [rdi+0x19]; jne 0x00000000000b4270; ret; 
0x0000000008de57: mov [rdi+0x18], eax; mov [rdi+0x8], rax; ret; 
0x00000000089b9f: mov [rdi+0x18], eax; mov [rsi], rax; xor eax, eax; ret; 
0x000000001511fb: mov [rdi+0x18], eax; mov eax, r8d; ret; 
0x000000000b4a25: mov [rdi+0x18], ecx; lea rax, [rdi+0x19]; ret; 
0x000000000b5895: mov [rdi+0x18], ecx; lea rax, [rdi+0x1a]; ret; 
0x000000000b4a63: mov [rdi+0x18], ecx; lea rax, [rdi+0x1b]; ret; 
0x000000000b58d3: mov [rdi+0x18], ecx; lea rax, [rdi+0x1c]; ret; 
0x000000000b3355: mov [rdi+0x18], ecx; ret; 
0x000000000b3cf5: mov [rdi+0x18], ecx; sub r8, 0x1a; lea rdi, [rdi+0x1a]; jne 0x00000000000b4270; ret; 
0x000000000b3d53: mov [rdi+0x18], ecx; sub r8, 0x1c; lea rdi, [rdi+0x1c]; jne 0x00000000000b4270; ret; 
0x000000000b74f5: mov [rdi+0x18], ecx; xor ch, ch; mov [rdi+0x1a], ch; ret; 
0x000000000b7533: mov [rdi+0x18], ecx; xor ch, ch; mov [rdi+0x1c], ch; ret; 
0x0000000008de84: mov [rdi+0x18], edx; mov [rdi+0x48], rax; movups [rdi+0x8], xmm0; ret; 
0x000000001512bd: mov [rdi+0x18], edx; mov eax, r8d; ret; 
0x000000000de5d0: mov [rdi+0x18], edx; ret; 
0x00000000151a82: mov [rdi+0x18], esi; mov dword ptr [rdi+0x28], 0x0; mov qword ptr [rdi+0x20], 0x0; ret; 
0x00000000151185: mov [rdi+0x18], esi; mov eax, r8d; ret; 
0x000000001511bd: mov [rdi+0x18], esi; mov rax, r8; ret; 
0x0000000008de55: mov [rdi+0x18], rax; mov [rdi+0x8], rax; ret; 
0x00000000089b9e: mov [rdi+0x18], rax; mov [rsi], rax; xor eax, eax; ret; 
0x000000001511fa: mov [rdi+0x18], rax; mov eax, r8d; ret; 
0x0000000008de83: mov [rdi+0x18], rdx; mov [rdi+0x48], rax; movups [rdi+0x8], xmm0; ret; 
0x000000001512bc: mov [rdi+0x18], rdx; mov eax, r8d; ret; 
0x000000000de5cf: mov [rdi+0x18], rdx; ret; 
0x00000000151a81: mov [rdi+0x18], rsi; mov dword ptr [rdi+0x28], 0x0; mov qword ptr [rdi+0x20], 0x0; ret; 
0x00000000151184: mov [rdi+0x18], rsi; mov eax, r8d; ret; 
0x000000001511bc: mov [rdi+0x18], rsi; mov rax, r8; ret; 
0x000000000b74d8: mov [rdi+0x19], ch; ret; 
0x000000000b7236: mov [rdi+0x1], ch; ret; 
0x00000000136fc5: mov [rdi+0x1], dh; ret; 
0x000000001678a7: mov [rdi+0x1], dx; mov [rdi], cx; ret; 
0x000000001678a8: mov [rdi+0x1], edx; mov [rdi], cx; ret; 
0x000000001677c5: mov [rdi+0x1], edx; mov [rdi], ecx; ret; 
0x00000000167608: mov [rdi+0x1], edx; mov [rdi], rcx; ret; 
0x00000000167607: mov [rdi+0x1], rdx; mov [rdi], rcx; ret; 
0x00000000136fc4: mov [rdi+0x1], sil; ret; 
0x000000000b74fa: mov [rdi+0x1a], ch; ret; 
0x000000000b7518: mov [rdi+0x1b], ch; ret; 
0x000000000b7538: mov [rdi+0x1c], ch; ret; 
0x000000000b7554: mov [rdi+0x1d], ch; ret; 
0x000000000b7574: mov [rdi+0x1e], ch; ret; 
0x000000000b7594: mov [rdi+0x1f], ch; ret; 
0x000000000b75b4: mov [rdi+0x20], ch; ret; 
0x000000000b4125: mov [rdi+0x20], cl; ret; 
0x000000000b75d5: mov [rdi+0x20], cl; xor ch, ch; mov [rdi+0x21], ch; ret; 
0x000000000cd271: mov [rdi+0x20], eax; ret; 
0x000000000cd270: mov [rdi+0x20], rax; ret; 
0x000000000b75da: mov [rdi+0x21], ch; ret; 
0x00000000091313: mov [rdi+0x24], edx; nop; xor eax, eax; ret; 
0x000000001511b6: mov [rdi+0x28], eax; add rsi, r8; mov [rdi+0x18], rsi; mov rax, r8; ret; 
0x00000000151181: mov [rdi+0x28], eax; mov [rdi+0x18], rsi; mov eax, r8d; ret; 
0x0000000015138a: mov [rdi+0x28], edx; movups [rdi+0x18], xmm0; ret; 
0x000000000b7248: mov [rdi+0x2], ch; ret; 
0x000000000b47b6: mov [rdi+0x2], dh; lea rax, [rdi+0x2]; ret; 
0x000000000b3176: mov [rdi+0x2], dh; ret; 
0x000000000b39f6: mov [rdi+0x2], dh; sub r8, 0x3; lea rdi, [rdi+0x3]; jne 0x00000000000b4270; ret; 
0x000000000b55f9: mov [rdi+0x2], dl; lea rax, [rdi+0x3]; ret; 
0x000000000a4ce0: mov [rdi+0x2], dl; ret; 
0x000000000b7259: mov [rdi+0x2], dl; xor ch, ch; mov [rdi+0x3], ch; ret; 
0x00000000167755: mov [rdi+0x2], edx; mov [rdi], ecx; ret; 
0x00000000167598: mov [rdi+0x2], edx; mov [rdi], rcx; ret; 
0x00000000167597: mov [rdi+0x2], rdx; mov [rdi], rcx; ret; 
0x000000000faf51: mov [rdi+0x38], al; mov [rsi], edx; movups [rsi+0x8], xmm0; ret; 
0x000000000b725e: mov [rdi+0x3], ch; ret; 
0x0000000013748c: mov [rdi+0x3], cl; movdqu xmm0, [rsi]; movups [rdi+rdx+0x8], xmm0; ret; 
0x000000000b4807: mov [rdi+0x3], edx; lea rax, [rdi+0x6]; ret; 
0x000000000b5657: mov [rdi+0x3], edx; lea rax, [rdi+0x7]; ret; 
0x000000001676e5: mov [rdi+0x3], edx; mov [rdi], ecx; ret; 
0x00000000167528: mov [rdi+0x3], edx; mov [rdi], rcx; ret; 
0x000000000b31b7: mov [rdi+0x3], edx; ret; 
0x000000000b3a77: mov [rdi+0x3], edx; sub r8, 0x7; lea rdi, [rdi+0x7]; jne 0x00000000000b4270; ret; 
0x000000000b72b7: mov [rdi+0x3], edx; xor ch, ch; mov [rdi+0x7], ch; ret; 
0x00000000167527: mov [rdi+0x3], rdx; mov [rdi], rcx; ret; 
0x000000000b762a: mov [rdi+0x40], ch; ret; 
0x00000000184e35: mov [rdi+0x40], cl; lea rax, [rdi+0x41]; vzeroupper; ret; 
0x00000000183555: mov [rdi+0x40], cl; mov byte ptr [rdi+0x41], 0x0; vzeroupper; ret; 
0x00000000184105: mov [rdi+0x40], cl; vzeroupper; ret; 
0x00000000042cd2: mov [rdi+0x48000008], bl; mov edi, [rsp+0x10]; mov rdx, rbp; mov rsi, r12; call rbx; 
0x00000000149d18: mov [rdi+0x48], eax; mov eax, 0x1; ret; 
0x0000000008de88: mov [rdi+0x48], eax; movups [rdi+0x8], xmm0; ret; 
0x0000000008de53: mov [rdi+0x48], edx; mov [rdi+0x18], rax; mov [rdi+0x8], rax; ret; 
0x0000000008de87: mov [rdi+0x48], rax; movups [rdi+0x8], xmm0; ret; 
0x0000000008de50: mov [rdi+0x48], rdx; mov [rdi+0x18], rax; mov [rdi+0x8], rax; ret; 
0x00000000046398: mov [rdi+0x4], ax; xor eax, eax; ret; 
0x000000000b7276: mov [rdi+0x4], ch; ret; 
0x000000000b47d2: mov [rdi+0x4], dh; mov [rdi], ecx; lea rax, [rdi+0x4]; ret; 
0x000000000b3192: mov [rdi+0x4], dh; mov [rdi], ecx; ret; 
0x000000000b5627: mov [rdi+0x4], dl; lea rax, [rdi+0x5]; ret; 
0x000000000a4cfe: mov [rdi+0x4], dl; ret; 
0x000000000b7287: mov [rdi+0x4], dl; xor ch, ch; mov [rdi+0x5], ch; ret; 
0x000000000b47e8: mov [rdi+0x4], dx; lea rax, [rdi+0x5]; ret; 
0x000000000b5638: mov [rdi+0x4], dx; lea rax, [rdi+0x6]; ret; 
0x000000000a4d2e: mov [rdi+0x4], dx; movzx edx, byte ptr [rsp+0x16]; mov [rdi+0x6], dl; ret; 
0x000000000a4ed0: mov [rdi+0x4], dx; movzx edx, byte ptr [rsp+0xe]; mov [rdi+0x6], dl; ret; 
0x000000000a4d16: mov [rdi+0x4], dx; ret; 
0x000000000b3a58: mov [rdi+0x4], dx; sub r8, 0x6; lea rdi, [rdi+0x6]; jne 0x00000000000b4270; ret; 
0x000000000b7298: mov [rdi+0x4], dx; xor ch, ch; mov [rdi+0x6], ch; ret; 
0x00000000046399: mov [rdi+0x4], eax; xor eax, eax; ret; 
0x000000000b47e9: mov [rdi+0x4], edx; lea rax, [rdi+0x5]; ret; 
0x000000000b5639: mov [rdi+0x4], edx; lea rax, [rdi+0x6]; ret; 
0x000000001674b8: mov [rdi+0x4], edx; mov [rdi], rcx; ret; 
0x000000000a4d2f: mov [rdi+0x4], edx; movzx edx, byte ptr [rsp+0x16]; mov [rdi+0x6], dl; ret; 
0x000000000a4ed1: mov [rdi+0x4], edx; movzx edx, byte ptr [rsp+0xe]; mov [rdi+0x6], dl; ret; 
0x000000000a4d17: mov [rdi+0x4], edx; ret; 
0x000000000b3a59: mov [rdi+0x4], edx; sub r8, 0x6; lea rdi, [rdi+0x6]; jne 0x00000000000b4270; ret; 
0x000000000b7299: mov [rdi+0x4], edx; xor ch, ch; mov [rdi+0x6], ch; ret; 
0x00000000091146: mov [rdi+0x4], esi; ret; 
0x000000001072e4: mov [rdi+0x4], esi; xor eax, eax; ret; 
0x000000001674b7: mov [rdi+0x4], rdx; mov [rdi], rcx; ret; 
0x00000000149d65: mov [rdi+0x54], eax; mov eax, 0x1; ret; 
0x00000000149d45: mov [rdi+0x58], eax; mov eax, 0x1; ret; 
0x000000000b728c: mov [rdi+0x5], ch; ret; 
0x000000000b489b: mov [rdi+0x5], edx; lea rax, [rdi+0xc]; ret; 
0x000000000b56fb: mov [rdi+0x5], edx; lea rax, [rdi+0xd]; ret; 
0x00000000167448: mov [rdi+0x5], edx; mov [rdi], rcx; ret; 
0x000000000b321b: mov [rdi+0x5], edx; ret; 
0x000000000b3b3b: mov [rdi+0x5], edx; sub r8, 0xd; lea rdi, [rdi+0xd]; jne 0x00000000000b4270; ret; 
0x000000000b735b: mov [rdi+0x5], edx; xor ch, ch; mov [rdi+0xd], ch; ret; 
0x000000000b489a: mov [rdi+0x5], rdx; lea rax, [rdi+0xc]; ret; 
0x000000000b56fa: mov [rdi+0x5], rdx; lea rax, [rdi+0xd]; ret; 
0x00000000167447: mov [rdi+0x5], rdx; mov [rdi], rcx; ret; 
0x000000000b321a: mov [rdi+0x5], rdx; ret; 
0x000000000b3b3a: mov [rdi+0x5], rdx; sub r8, 0xd; lea rdi, [rdi+0xd]; jne 0x00000000000b4270; ret; 
0x000000000b735a: mov [rdi+0x5], rdx; xor ch, ch; mov [rdi+0xd], ch; ret; 
0x000000000b729e: mov [rdi+0x6], ch; ret; 
0x000000000a4d37: mov [rdi+0x6], dl; ret; 
0x000000000b48bb: mov [rdi+0x6], edx; lea rax, [rdi+0xd]; ret; 
0x000000000b571b: mov [rdi+0x6], edx; lea rax, [rdi+0xe]; ret; 
0x000000001673d8: mov [rdi+0x6], edx; mov [rdi], rcx; ret; 
0x000000000b322b: mov [rdi+0x6], edx; ret; 
0x000000000b3b5b: mov [rdi+0x6], edx; sub r8, 0xe; lea rdi, [rdi+0xe]; jne 0x00000000000b4270; ret; 
0x000000000b737b: mov [rdi+0x6], edx; xor ch, ch; mov [rdi+0xe], ch; ret; 
0x000000000b48ba: mov [rdi+0x6], rdx; lea rax, [rdi+0xd]; ret; 
0x000000000b571a: mov [rdi+0x6], rdx; lea rax, [rdi+0xe]; ret; 
0x000000001673d7: mov [rdi+0x6], rdx; mov [rdi], rcx; ret; 
0x000000000b322a: mov [rdi+0x6], rdx; ret; 
0x000000000b3b5a: mov [rdi+0x6], rdx; sub r8, 0xe; lea rdi, [rdi+0xe]; jne 0x00000000000b4270; ret; 
0x000000000b737a: mov [rdi+0x6], rdx; xor ch, ch; mov [rdi+0xe], ch; ret; 
0x00000000145ae6: mov [rdi+0x7], al; ret; 
0x000000000b72bc: mov [rdi+0x7], ch; ret; 
0x000000000b4859: mov [rdi+0x7], edx; lea rax, [rdi+0xa]; ret; 
0x000000000b56b9: mov [rdi+0x7], edx; lea rax, [rdi+0xb]; ret; 
0x000000000b48db: mov [rdi+0x7], edx; lea rax, [rdi+0xe]; ret; 
0x000000000b573b: mov [rdi+0x7], edx; lea rax, [rdi+0xf]; ret; 
0x00000000167368: mov [rdi+0x7], edx; mov [rdi], rcx; ret; 
0x000000000b31f9: mov [rdi+0x7], edx; ret; 
0x000000000b3af9: mov [rdi+0x7], edx; sub r8, 0xb; lea rdi, [rdi+0xb]; jne 0x00000000000b4270; ret; 
0x000000000b3b7b: mov [rdi+0x7], edx; sub r8, 0xf; lea rdi, [rdi+0xf]; jne 0x00000000000b4270; ret; 
0x000000000b7319: mov [rdi+0x7], edx; xor ch, ch; mov [rdi+0xb], ch; ret; 
0x000000000b739b: mov [rdi+0x7], edx; xor ch, ch; mov [rdi+0xf], ch; ret; 
0x000000000b48da: mov [rdi+0x7], rdx; lea rax, [rdi+0xe]; ret; 
0x000000000b573a: mov [rdi+0x7], rdx; lea rax, [rdi+0xf]; ret; 
0x00000000167367: mov [rdi+0x7], rdx; mov [rdi], rcx; ret; 
0x000000000b323a: mov [rdi+0x7], rdx; ret; 
0x000000000b3b7a: mov [rdi+0x7], rdx; sub r8, 0xf; lea rdi, [rdi+0xf]; jne 0x00000000000b4270; ret; 
0x000000000b739a: mov [rdi+0x7], rdx; xor ch, ch; mov [rdi+0xf], ch; ret; 
0x000000000b72c8: mov [rdi+0x8], ch; ret; 
0x000000000b4823: mov [rdi+0x8], dh; mov [rdi], rcx; lea rax, [rdi+0x8]; ret; 
0x000000000b31d3: mov [rdi+0x8], dh; mov [rdi], rcx; ret; 
0x000000000b5679: mov [rdi+0x8], dl; lea rax, [rdi+0x9]; ret; 
0x000000000b3ec9: mov [rdi+0x8], dl; ret; 
0x000000000b72d9: mov [rdi+0x8], dl; xor ch, ch; mov [rdi+0x9], ch; ret; 
0x000000000b483a: mov [rdi+0x8], dx; lea rax, [rdi+0x9]; ret; 
0x000000000b569a: mov [rdi+0x8], dx; lea rax, [rdi+0xa]; ret; 
0x000000000b31ea: mov [rdi+0x8], dx; ret; 
0x000000000b3ada: mov [rdi+0x8], dx; sub r8, 0xa; lea rdi, [rdi+0xa]; jne 0x00000000000b4270; ret; 
0x000000000b72fa: mov [rdi+0x8], dx; xor ch, ch; mov [rdi+0xa], ch; ret; 
0x00000000151a7e: mov [rdi+0x8], eax; mov [rdi+0x18], rsi; mov dword ptr [rdi+0x28], 0x0; mov qword ptr [rdi+0x20], 0x0; ret; 
0x00000000151387: mov [rdi+0x8], eax; mov [rdi+0x28], edx; movups [rdi+0x18], xmm0; ret; 
0x0000000010ec13: mov [rdi+0x8], eax; mov eax, 0x100; mov [rdi+0x16], ax; ret; 
0x00000000055db6: mov [rdi+0x8], eax; mov eax, 0x2; ret; 
0x0000000010df02: mov [rdi+0x8], eax; movups [rdi+0x20], xmm1; ret; 
0x0000000008de5b: mov [rdi+0x8], eax; ret; 
0x00000000054588: mov [rdi+0x8], eax; shr r9, cl; mov [rdi+0x10], r9; ret; 
0x000000000910a8: mov [rdi+0x8], eax; xor eax, eax; ret; 
0x00000000054518: mov [rdi+0x8], ecx; ret; 
0x000000000b483b: mov [rdi+0x8], edx; lea rax, [rdi+0x9]; ret; 
0x000000000b569b: mov [rdi+0x8], edx; lea rax, [rdi+0xa]; ret; 
0x000000000b4879: mov [rdi+0x8], edx; lea rax, [rdi+0xb]; ret; 
0x000000000b56d9: mov [rdi+0x8], edx; lea rax, [rdi+0xc]; ret; 
0x00000000053b28: mov [rdi+0x8], edx; mov eax, ecx; adc eax, eax; ret; 
0x0000000008a483: mov [rdi+0x8], edx; movzx eax, byte ptr [rax]; ret; 
0x000000000b31eb: mov [rdi+0x8], edx; ret; 
0x000000000b3adb: mov [rdi+0x8], edx; sub r8, 0xa; lea rdi, [rdi+0xa]; jne 0x00000000000b4270; ret; 
0x000000000b3b19: mov [rdi+0x8], edx; sub r8, 0xc; lea rdi, [rdi+0xc]; jne 0x00000000000b4270; ret; 
0x000000000b72fb: mov [rdi+0x8], edx; xor ch, ch; mov [rdi+0xa], ch; ret; 
0x000000000b7339: mov [rdi+0x8], edx; xor ch, ch; mov [rdi+0xc], ch; ret; 
0x0000000010e676: mov [rdi+0x8], esi; ret; 
0x00000000053b27: mov [rdi+0x8], r10; mov eax, ecx; adc eax, eax; ret; 
0x00000000054587: mov [rdi+0x8], r8; shr r9, cl; mov [rdi+0x10], r9; ret; 
0x00000000054517: mov [rdi+0x8], r9; ret; 
0x00000000151a7d: mov [rdi+0x8], rax; mov [rdi+0x18], rsi; mov dword ptr [rdi+0x28], 0x0; mov qword ptr [rdi+0x20], 0x0; ret; 
0x00000000151386: mov [rdi+0x8], rax; mov [rdi+0x28], edx; movups [rdi+0x18], xmm0; ret; 
0x00000000055db5: mov [rdi+0x8], rax; mov eax, 0x2; ret; 
0x0000000010df01: mov [rdi+0x8], rax; movups [rdi+0x20], xmm1; ret; 
0x0000000008de5a: mov [rdi+0x8], rax; ret; 
0x0000000008a482: mov [rdi+0x8], rdx; movzx eax, byte ptr [rax]; ret; 
0x000000000b72de: mov [rdi+0x9], ch; ret; 
0x000000000b7300: mov [rdi+0xa], ch; ret; 
0x000000000b731e: mov [rdi+0xb], ch; ret; 
0x000000000b733e: mov [rdi+0xc], ch; ret; 
0x0000000013625e: mov [rdi+0xc], edx; mov [rsi], rdi; ret; 
0x000000000e41d4: mov [rdi+0xc], fs; add [rax+0x63], cl; add al, 0x82; add rax, rdx; notrack jmp rax; 
0x0000000007f15d: mov [rdi+0xd8], edx; mov rdx, [rdi+0xa0]; mov [rdx+0xe0], rcx; ret; 
0x0000000007f15c: mov [rdi+0xd8], rdx; mov rdx, [rdi+0xa0]; mov [rdx+0xe0], rcx; ret; 
0x000000000b7360: mov [rdi+0xd], ch; ret; 
0x000000000b7380: mov [rdi+0xe], ch; ret; 
0x000000000b499d: mov [rdi+0xe], ecx; lea rax, [rdi+0x15]; ret; 
0x000000000b580d: mov [rdi+0xe], ecx; lea rax, [rdi+0x16]; ret; 
0x000000000b32cd: mov [rdi+0xe], ecx; ret; 
0x000000000b3c5d: mov [rdi+0xe], ecx; sub r8, 0x16; lea rdi, [rdi+0x16]; jne 0x00000000000b4270; ret; 
0x000000000b746d: mov [rdi+0xe], ecx; xor ch, ch; mov [rdi+0x16], ch; ret; 
0x000000000b499c: mov [rdi+0xe], rcx; lea rax, [rdi+0x15]; ret; 
0x000000000b580c: mov [rdi+0xe], rcx; lea rax, [rdi+0x16]; ret; 
0x000000000b32cc: mov [rdi+0xe], rcx; ret; 
0x000000000b3c5c: mov [rdi+0xe], rcx; sub r8, 0x16; lea rdi, [rdi+0x16]; jne 0x00000000000b4270; ret; 
0x000000000b746c: mov [rdi+0xe], rcx; xor ch, ch; mov [rdi+0x16], ch; ret; 
0x000000000b73a0: mov [rdi+0xf], ch; ret; 
0x000000000b493b: mov [rdi+0xf], ecx; lea rax, [rdi+0x12]; ret; 
0x000000000b57ab: mov [rdi+0xf], ecx; lea rax, [rdi+0x13]; ret; 
0x000000000b49bd: mov [rdi+0xf], ecx; lea rax, [rdi+0x16]; ret; 
0x000000000b582d: mov [rdi+0xf], ecx; lea rax, [rdi+0x17]; ret; 
0x000000000b328b: mov [rdi+0xf], ecx; ret; 
0x000000000b3bfb: mov [rdi+0xf], ecx; sub r8, 0x13; lea rdi, [rdi+0x13]; jne 0x00000000000b4270; ret; 
0x000000000b3c7d: mov [rdi+0xf], ecx; sub r8, 0x17; lea rdi, [rdi+0x17]; jne 0x00000000000b4270; ret; 
0x000000000b740b: mov [rdi+0xf], ecx; xor ch, ch; mov [rdi+0x13], ch; ret; 
0x000000000b748d: mov [rdi+0xf], ecx; xor ch, ch; mov [rdi+0x17], ch; ret; 
0x000000000b49bc: mov [rdi+0xf], rcx; lea rax, [rdi+0x16]; ret; 
0x000000000b582c: mov [rdi+0xf], rcx; lea rax, [rdi+0x17]; ret; 
0x000000000b32ec: mov [rdi+0xf], rcx; ret; 
0x000000000b3c7c: mov [rdi+0xf], rcx; sub r8, 0x17; lea rdi, [rdi+0x17]; jne 0x00000000000b4270; ret; 
0x000000000b748c: mov [rdi+0xf], rcx; xor ch, ch; mov [rdi+0x17], ch; ret; 
0x00000000054b8c: mov [rdi+r11*8+0x8], r9; add rdx, r8; mov rax, rdx; pop rbx; ret; 
0x00000000184d8c: mov [rdi+r8-0x2], dx; lea rax, [rdi+r8]; vzeroupper; ret; 
0x000000001834ac: mov [rdi+r8-0x2], dx; mov byte ptr [rdi+r8], 0x0; vzeroupper; ret; 
0x0000000018405c: mov [rdi+r8-0x2], dx; vzeroupper; ret; 
0x00000000184d8d: mov [rdi+r8-0x2], edx; lea rax, [rdi+r8]; vzeroupper; ret; 
0x000000001834ad: mov [rdi+r8-0x2], edx; mov byte ptr [rdi+r8], 0x0; vzeroupper; ret; 
0x0000000018405d: mov [rdi+r8-0x2], edx; vzeroupper; ret; 
0x00000000184da9: mov [rdi+r8-0x4], edx; lea rax, [rdi+r8]; vzeroupper; ret; 
0x000000001834c9: mov [rdi+r8-0x4], edx; mov byte ptr [rdi+r8], 0x0; vzeroupper; ret; 
0x00000000184079: mov [rdi+r8-0x4], edx; vzeroupper; ret; 
0x00000000184dcb: mov [rdi+r8-0x8], rdx; lea rax, [rdi+r8]; vzeroupper; ret; 
0x000000001834eb: mov [rdi+r8-0x8], rdx; mov byte ptr [rdi+r8], 0x0; vzeroupper; ret; 
0x0000000018409b: mov [rdi+r8-0x8], rdx; vzeroupper; ret; 
0x00000000184d8e: mov [rdi+rax-0x2], edx; lea rax, [rdi+r8]; vzeroupper; ret; 
0x000000001834ae: mov [rdi+rax-0x2], edx; mov byte ptr [rdi+r8], 0x0; vzeroupper; ret; 
0x0000000018405e: mov [rdi+rax-0x2], edx; vzeroupper; ret; 
0x00000000184daa: mov [rdi+rax-0x4], edx; lea rax, [rdi+r8]; vzeroupper; ret; 
0x000000001834ca: mov [rdi+rax-0x4], edx; mov byte ptr [rdi+r8], 0x0; vzeroupper; ret; 
0x0000000018407a: mov [rdi+rax-0x4], edx; vzeroupper; ret; 
0x00000000184dcc: mov [rdi+rax-0x8], edx; lea rax, [rdi+r8]; vzeroupper; ret; 
0x000000001834ec: mov [rdi+rax-0x8], edx; mov byte ptr [rdi+r8], 0x0; vzeroupper; ret; 
0x0000000018409c: mov [rdi+rax-0x8], edx; vzeroupper; ret; 
0x00000000054b8d: mov [rdi+rbx*8+0x8], ecx; add rdx, r8; mov rax, rdx; pop rbx; ret; 
0x000000000b6e78: mov [rdi+rcx], ah; add [rbx+0x63], cl; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000014b923: mov [rdi+rdi*8+0x481e6aff], esp; lea edx, [rip+0x3fc0]; mov r9, rbp; mov esi, 0x9; call qword ptr [rax]; 
0x000000000b834e: mov [rdi+rdx-0x2], cx; mov [rdi], cx; ret; 
0x00000000185703: mov [rdi+rdx-0x2], cx; mov [rdi], cx; vzeroupper; ret; 
0x000000000b7f28: mov [rdi+rdx-0x2], cx; mov [rdi], si; ret; 
0x000000000b7f27: mov [rdi+rdx-0x2], cx; mov [rdi], si; ret; 
0x000000000b834f: mov [rdi+rdx-0x2], ecx; mov [rdi], cx; ret; 
0x00000000185704: mov [rdi+rdx-0x2], ecx; mov [rdi], cx; vzeroupper; ret; 
0x000000000b7f29: mov [rdi+rdx-0x2], ecx; mov [rdi], si; ret; 
0x000000001846d8: mov [rdi+rdx-0x3], ecx; lea rax, [rdi+rdx]; vzeroupper; ret; 
0x00000000182c38: mov [rdi+rdx-0x3], ecx; vzeroupper; ret; 
0x000000000b8347: mov [rdi+rdx-0x4], ecx; mov [rdi], ecx; ret; 
0x000000001856f9: mov [rdi+rdx-0x4], ecx; mov [rdi], ecx; vzeroupper; ret; 
0x000000000b7f19: mov [rdi+rdx-0x4], ecx; mov [rdi], esi; ret; 
0x000000000b7f18: mov [rdi+rdx-0x4], ecx; mov [rdi], esi; ret; 
0x000000001846fc: mov [rdi+rdx-0x7], ecx; lea rax, [rdi+rdx]; vzeroupper; ret; 
0x00000000182c4c: mov [rdi+rdx-0x7], ecx; vzeroupper; ret; 
0x000000001846fb: mov [rdi+rdx-0x7], r9; lea rax, [rdi+rdx]; vzeroupper; ret; 
0x00000000182c4b: mov [rdi+rdx-0x7], r9; vzeroupper; ret; 
0x000000000b833f: mov [rdi+rdx-0x8], ecx; mov [rdi], rcx; ret; 
0x000000001856ee: mov [rdi+rdx-0x8], ecx; mov [rdi], rcx; vzeroupper; ret; 
0x000000000b7f0b: mov [rdi+rdx-0x8], ecx; mov [rdi], rsi; ret; 
0x000000000b833e: mov [rdi+rdx-0x8], rcx; mov [rdi], rcx; ret; 
0x000000001856ed: mov [rdi+rdx-0x8], rcx; mov [rdi], rcx; vzeroupper; ret; 
0x000000000b7f0a: mov [rdi+rdx-0x8], rcx; mov [rdi], rsi; ret; 
0x000000000b7f09: mov [rdi+rdx-0x8], rcx; mov [rdi], rsi; ret; 
0x00000000161245: mov [rdi-0x10], ebx; mov [rdi-0x8], rcx; ret; 
0x00000000161283: mov [rdi-0x10], ebx; mov [rdi-0x8], rdx; ret; 
0x0000000005447f: mov [rdi-0x10], ecx; ret; 
0x00000000161244: mov [rdi-0x10], r11; mov [rdi-0x8], rcx; ret; 
0x00000000161282: mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x0000000005447e: mov [rdi-0x10], r9; ret; 
0x000000001613f8: mov [rdi-0x11], ebx; mov [rdi-0x9], r8; mov [rdi-0x4], edx; ret; 
0x000000001614f4: mov [rdi-0x11], ebx; mov [rdi-0x9], rcx; mov [rdi-0x1], dl; ret; 
0x00000000161440: mov [rdi-0x11], ebx; mov [rdi-0x9], rcx; mov [rdi-0x4], edx; ret; 
0x000000001613f7: mov [rdi-0x11], r11; mov [rdi-0x9], r8; mov [rdi-0x4], edx; ret; 
0x000000001614f3: mov [rdi-0x11], r11; mov [rdi-0x9], rcx; mov [rdi-0x1], dl; ret; 
0x0000000016143f: mov [rdi-0x11], r11; mov [rdi-0x9], rcx; mov [rdi-0x4], edx; ret; 
0x000000001615c8: mov [rdi-0x12], ebx; mov [rdi-0xa], rcx; mov [rdi-0x4], edx; ret; 
0x000000001615c7: mov [rdi-0x12], r11; mov [rdi-0xa], rcx; mov [rdi-0x4], edx; ret; 
0x000000001617a8: mov [rdi-0x13], ebx; mov [rdi-0xb], rcx; mov [rdi-0x4], edx; ret; 
0x000000001617a7: mov [rdi-0x13], r11; mov [rdi-0xb], rcx; mov [rdi-0x4], edx; ret; 
0x00000000161998: mov [rdi-0x14], ebx; mov [rdi-0xc], rcx; mov [rdi-0x4], edx; ret; 
0x00000000161997: mov [rdi-0x14], r11; mov [rdi-0xc], rcx; mov [rdi-0x4], edx; ret; 
0x00000000161b69: mov [rdi-0x15], ebx; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000161b68: mov [rdi-0x15], r11; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000161d69: mov [rdi-0x16], ebx; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000161d68: mov [rdi-0x16], r11; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000161f69: mov [rdi-0x17], ebx; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000161f68: mov [rdi-0x17], r11; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000161241: mov [rdi-0x18], edx; mov [rdi-0x10], r11; mov [rdi-0x8], rcx; ret; 
0x0000000016127f: mov [rdi-0x18], edx; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x00000000161240: mov [rdi-0x18], r10; mov [rdi-0x10], r11; mov [rdi-0x8], rcx; ret; 
0x0000000016127e: mov [rdi-0x18], r10; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x000000001613f4: mov [rdi-0x19], edx; mov [rdi-0x11], r11; mov [rdi-0x9], r8; mov [rdi-0x4], edx; ret; 
0x000000001614f0: mov [rdi-0x19], edx; mov [rdi-0x11], r11; mov [rdi-0x9], rcx; mov [rdi-0x1], dl; ret; 
0x0000000016143c: mov [rdi-0x19], edx; mov [rdi-0x11], r11; mov [rdi-0x9], rcx; mov [rdi-0x4], edx; ret; 
0x000000001613f3: mov [rdi-0x19], r10; mov [rdi-0x11], r11; mov [rdi-0x9], r8; mov [rdi-0x4], edx; ret; 
0x000000001614ef: mov [rdi-0x19], r10; mov [rdi-0x11], r11; mov [rdi-0x9], rcx; mov [rdi-0x1], dl; ret; 
0x0000000016143b: mov [rdi-0x19], r10; mov [rdi-0x11], r11; mov [rdi-0x9], rcx; mov [rdi-0x4], edx; ret; 
0x000000001614fb: mov [rdi-0x1], dl; ret; 
0x000000000b4160: mov [rdi-0x1], edx; ret; 
0x000000000b41a0: mov [rdi-0x1], rdx; ret; 
0x000000001615c4: mov [rdi-0x1a], edx; mov [rdi-0x12], r11; mov [rdi-0xa], rcx; mov [rdi-0x4], edx; ret; 
0x000000001615c3: mov [rdi-0x1a], r10; mov [rdi-0x12], r11; mov [rdi-0xa], rcx; mov [rdi-0x4], edx; ret; 
0x000000001617a4: mov [rdi-0x1b], edx; mov [rdi-0x13], r11; mov [rdi-0xb], rcx; mov [rdi-0x4], edx; ret; 
0x000000001617a3: mov [rdi-0x1b], r10; mov [rdi-0x13], r11; mov [rdi-0xb], rcx; mov [rdi-0x4], edx; ret; 
0x00000000161994: mov [rdi-0x1c], edx; mov [rdi-0x14], r11; mov [rdi-0xc], rcx; mov [rdi-0x4], edx; ret; 
0x00000000161993: mov [rdi-0x1c], r10; mov [rdi-0x14], r11; mov [rdi-0xc], rcx; mov [rdi-0x4], edx; ret; 
0x00000000161b65: mov [rdi-0x1d], edx; mov [rdi-0x15], r11; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000161b64: mov [rdi-0x1d], r10; mov [rdi-0x15], r11; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000161d65: mov [rdi-0x1e], edx; mov [rdi-0x16], r11; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000161d64: mov [rdi-0x1e], r10; mov [rdi-0x16], r11; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000161f65: mov [rdi-0x1f], edx; mov [rdi-0x17], r11; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000161f64: mov [rdi-0x1f], r10; mov [rdi-0x17], r11; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000016123d: mov [rdi-0x20], ecx; mov [rdi-0x18], r10; mov [rdi-0x10], r11; mov [rdi-0x8], rcx; ret; 
0x0000000016127b: mov [rdi-0x20], ecx; mov [rdi-0x18], r10; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x0000000016123c: mov [rdi-0x20], r9; mov [rdi-0x18], r10; mov [rdi-0x10], r11; mov [rdi-0x8], rcx; ret; 
0x0000000016127a: mov [rdi-0x20], r9; mov [rdi-0x18], r10; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x0000000016194c: mov [rdi-0x2], cx; ret; 
0x00000000161764: mov [rdi-0x2], dx; ret; 
0x0000000016194d: mov [rdi-0x2], ecx; ret; 
0x00000000161765: mov [rdi-0x2], edx; ret; 
0x00000000050b93: mov [rdi-0x2], esp; dec dword ptr [rax-0x77]; ret; 
0x00000000161948: mov [rdi-0x3], dx; mov [rdi-0x2], cx; ret; 
0x000000001517c3: mov [rdi-0x3], edi; jmp qword ptr [rsi+0xf]; 
0x00000000161949: mov [rdi-0x3], edx; mov [rdi-0x2], cx; ret; 
0x00000000161d29: mov [rdi-0x4], ecx; ret; 
0x000000001613ff: mov [rdi-0x4], edx; ret; 
0x00000000161d26: mov [rdi-0x5], edx; mov [rdi-0x4], ecx; ret; 
0x00000000161f26: mov [rdi-0x6], edx; mov [rdi-0x4], ecx; ret; 
0x00000000162126: mov [rdi-0x7], edx; mov [rdi-0x4], ecx; ret; 
0x00000000054478: mov [rdi-0x8], eax; shl r9, cl; mov [rdi-0x10], r9; ret; 
0x000000000543fe: mov [rdi-0x8], ecx; ret; 
0x00000000161287: mov [rdi-0x8], edx; ret; 
0x00000000054477: mov [rdi-0x8], r8; shl r9, cl; mov [rdi-0x10], r9; ret; 
0x000000000543fd: mov [rdi-0x8], r9; ret; 
0x00000000166bfb: mov [rdi-0x8], rcx; ret; 
0x00000000161248: mov [rdi-0x8], rcx; ret; 
0x00000000161d6e: mov [rdi-0x8], rdx; ret; 
0x00000000161286: mov [rdi-0x8], rdx; ret; 
0x000000001613fc: mov [rdi-0x9], eax; mov [rdi-0x4], edx; ret; 
0x000000001614f8: mov [rdi-0x9], ecx; mov [rdi-0x1], dl; ret; 
0x00000000161444: mov [rdi-0x9], ecx; mov [rdi-0x4], edx; ret; 
0x00000000166e98: mov [rdi-0x9], edx; mov [rdi-0x4], ecx; ret; 
0x000000001613fb: mov [rdi-0x9], r8; mov [rdi-0x4], edx; ret; 
0x000000001614f7: mov [rdi-0x9], rcx; mov [rdi-0x1], dl; ret; 
0x00000000161443: mov [rdi-0x9], rcx; mov [rdi-0x4], edx; ret; 
0x00000000166e97: mov [rdi-0x9], rdx; mov [rdi-0x4], ecx; ret; 
0x000000001615cc: mov [rdi-0xa], ecx; mov [rdi-0x4], edx; ret; 
0x00000000166e18: mov [rdi-0xa], edx; mov [rdi-0x4], ecx; ret; 
0x000000001615cb: mov [rdi-0xa], rcx; mov [rdi-0x4], edx; ret; 
0x00000000166e17: mov [rdi-0xa], rdx; mov [rdi-0x4], ecx; ret; 
0x000000001617ac: mov [rdi-0xb], ecx; mov [rdi-0x4], edx; ret; 
0x00000000166d98: mov [rdi-0xb], edx; mov [rdi-0x4], ecx; ret; 
0x000000001617ab: mov [rdi-0xb], rcx; mov [rdi-0x4], edx; ret; 
0x00000000166d97: mov [rdi-0xb], rdx; mov [rdi-0x4], ecx; ret; 
0x0000000016199c: mov [rdi-0xc], ecx; mov [rdi-0x4], edx; ret; 
0x00000000166d18: mov [rdi-0xc], edx; mov [rdi-0x4], ecx; ret; 
0x0000000016199b: mov [rdi-0xc], rcx; mov [rdi-0x4], edx; ret; 
0x00000000166d17: mov [rdi-0xc], rdx; mov [rdi-0x4], ecx; ret; 
0x00000000161b6d: mov [rdi-0xd], ecx; mov [rdi-0x8], rdx; ret; 
0x00000000166c89: mov [rdi-0xd], edx; mov [rdi-0x8], rcx; ret; 
0x00000000161b6c: mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000166c88: mov [rdi-0xd], rdx; mov [rdi-0x8], rcx; ret; 
0x00000000161d6d: mov [rdi-0xe], ecx; mov [rdi-0x8], rdx; ret; 
0x00000000166bf9: mov [rdi-0xe], edx; mov [rdi-0x8], rcx; ret; 
0x00000000161d6c: mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000166bf8: mov [rdi-0xe], rdx; mov [rdi-0x8], rcx; ret; 
0x00000000161f6d: mov [rdi-0xf], ecx; mov [rdi-0x8], rdx; ret; 
0x00000000166b69: mov [rdi-0xf], edx; mov [rdi-0x8], rcx; ret; 
0x00000000161f6c: mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000166b68: mov [rdi-0xf], rdx; mov [rdi-0x8], rcx; ret; 
0x000000000e7e0e: mov [rdi], al; mov eax, 0x1; ret; 
0x000000000b7222: mov [rdi], ch; ret; 
0x000000000b7eff: mov [rdi], cl; ret; 
0x000000001856d9: mov [rdi], cl; vzeroupper; ret; 
0x000000000b47b3: mov [rdi], cx; mov [rdi+0x2], dh; lea rax, [rdi+0x2]; ret; 
0x000000000b3173: mov [rdi], cx; mov [rdi+0x2], dh; ret; 
0x000000000b55f6: mov [rdi], cx; mov [rdi+0x2], dl; lea rax, [rdi+0x3]; ret; 
0x000000000b3e66: mov [rdi], cx; mov [rdi+0x2], dl; ret; 
0x000000000b7256: mov [rdi], cx; mov [rdi+0x2], dl; xor ch, ch; mov [rdi+0x3], ch; ret; 
0x00000000184d89: mov [rdi], cx; mov [rdi+r8-0x2], dx; lea rax, [rdi+r8]; vzeroupper; ret; 
0x000000001834a9: mov [rdi], cx; mov [rdi+r8-0x2], dx; mov byte ptr [rdi+r8], 0x0; vzeroupper; ret; 
0x00000000184059: mov [rdi], cx; mov [rdi+r8-0x2], dx; vzeroupper; ret; 
0x00000000189cc6: mov [rdi], cx; mov [rsi-0x2], cx; ret; 
0x000000001846a3: mov [rdi], cx; mov byte ptr [rdi+0x2], 0x0; lea rax, [rdi+0x2]; vzeroupper; ret; 
0x00000000182c13: mov [rdi], cx; mov byte ptr [rdi+0x2], 0x0; vzeroupper; ret; 
0x000000000b8353: mov [rdi], cx; ret; 
0x00000000185708: mov [rdi], cx; vzeroupper; ret; 
0x000000000b4790: mov [rdi], dh; lea rax, [rdi]; ret; 
0x000000000b3150: mov [rdi], dh; ret; 
0x000000000b39b0: mov [rdi], dh; sub r8, 0x1; lea rdi, [rdi+0x1]; jne 0x00000000000b4270; ret; 
0x000000000a4cb1: mov [rdi], dl; add rax, rdi; ret; 
0x000000000b55d2: mov [rdi], dl; lea rax, [rdi+0x1]; ret; 
0x00000000184d63: mov [rdi], dl; lea rax, [rdi+0x1]; vzeroupper; ret; 
0x00000000183483: mov [rdi], dl; mov byte ptr [rdi+0x1], 0x0; vzeroupper; ret; 
0x000000000b3e42: mov [rdi], dl; ret; 
0x00000000184033: mov [rdi], dl; vzeroupper; ret; 
0x000000000b7232: mov [rdi], dl; xor ch, ch; mov [rdi+0x1], ch; ret; 
0x000000000b47a3: mov [rdi], dx; lea rax, [rdi+0x1]; ret; 
0x00000000184693: mov [rdi], dx; lea rax, [rdi+0x1]; vzeroupper; ret; 
0x000000000b55e3: mov [rdi], dx; lea rax, [rdi+0x2]; ret; 
0x00000000184d73: mov [rdi], dx; lea rax, [rdi+0x2]; vzeroupper; ret; 
0x00000000184130: mov [rdi], dx; mov [rdi+r8-0x2], dx; vzeroupper; ret; 
0x00000000183493: mov [rdi], dx; mov byte ptr [rdi+0x2], 0x0; vzeroupper; ret; 
0x000000000a4cd8: mov [rdi], dx; movzx edx, byte ptr [rsp-0x6]; mov [rdi+0x2], dl; ret; 
0x000000000b3163: mov [rdi], dx; ret; 
0x000000000b39d3: mov [rdi], dx; sub r8, 0x2; lea rdi, [rdi+0x2]; jne 0x00000000000b4270; ret; 
0x00000000182c03: mov [rdi], dx; vzeroupper; ret; 
0x000000000b7243: mov [rdi], dx; xor ch, ch; mov [rdi+0x2], ch; ret; 
0x000000000a4ce9: mov [rdi], eax; add rax, rdi; ret; 
0x0000000005974f: mov [rdi], eax; mov rax, rdi; ret; 
0x000000000543f8: mov [rdi], eax; shl r9, cl; mov [rdi-0x8], r9; ret; 
0x00000000054512: mov [rdi], eax; shr r9, cl; mov [rdi+0x8], r9; ret; 
0x00000000046392: mov [rdi], eax; shr rax, 0x20; mov [rdi+0x4], ax; xor eax, eax; ret; 
0x00000000040894: mov [rdi], eax; subsd xmm0, xmm1; ret; 
0x00000000042314: mov [rdi], eax; xor eax, eax; ret; 
0x000000000b47d5: mov [rdi], ecx; lea rax, [rdi+0x4]; ret; 
0x000000000b4827: mov [rdi], ecx; lea rax, [rdi+0x8]; ret; 
0x000000000a4e80: mov [rdi], ecx; lea rax, [rdi+rax-0x1]; ret; 
0x000000000b47b4: mov [rdi], ecx; mov [rdi+0x2], dh; lea rax, [rdi+0x2]; ret; 
0x000000000b3174: mov [rdi], ecx; mov [rdi+0x2], dh; ret; 
0x000000000b55f7: mov [rdi], ecx; mov [rdi+0x2], dl; lea rax, [rdi+0x3]; ret; 
0x000000000b3e67: mov [rdi], ecx; mov [rdi+0x2], dl; ret; 
0x000000000b7257: mov [rdi], ecx; mov [rdi+0x2], dl; xor ch, ch; mov [rdi+0x3], ch; ret; 
0x000000000b4805: mov [rdi], ecx; mov [rdi+0x3], edx; lea rax, [rdi+0x6]; ret; 
0x000000000b5655: mov [rdi], ecx; mov [rdi+0x3], edx; lea rax, [rdi+0x7]; ret; 
0x000000000b31b5: mov [rdi], ecx; mov [rdi+0x3], edx; ret; 
0x000000000b72b5: mov [rdi], ecx; mov [rdi+0x3], edx; xor ch, ch; mov [rdi+0x7], ch; ret; 
0x000000000b5625: mov [rdi], ecx; mov [rdi+0x4], dl; lea rax, [rdi+0x5]; ret; 
0x000000000b3e85: mov [rdi], ecx; mov [rdi+0x4], dl; ret; 
0x000000000b7285: mov [rdi], ecx; mov [rdi+0x4], dl; xor ch, ch; mov [rdi+0x5], ch; ret; 
0x000000000b47e6: mov [rdi], ecx; mov [rdi+0x4], dx; lea rax, [rdi+0x5]; ret; 
0x000000000b5636: mov [rdi], ecx; mov [rdi+0x4], dx; lea rax, [rdi+0x6]; ret; 
0x000000000b31a6: mov [rdi], ecx; mov [rdi+0x4], dx; ret; 
0x000000000b7296: mov [rdi], ecx; mov [rdi+0x4], dx; xor ch, ch; mov [rdi+0x6], ch; ret; 
0x000000000b4898: mov [rdi], ecx; mov [rdi+0x5], rdx; lea rax, [rdi+0xc]; ret; 
0x000000000b56f8: mov [rdi], ecx; mov [rdi+0x5], rdx; lea rax, [rdi+0xd]; ret; 
0x000000000b3218: mov [rdi], ecx; mov [rdi+0x5], rdx; ret; 
0x000000000b7358: mov [rdi], ecx; mov [rdi+0x5], rdx; xor ch, ch; mov [rdi+0xd], ch; ret; 
0x000000000b48b8: mov [rdi], ecx; mov [rdi+0x6], rdx; lea rax, [rdi+0xd]; ret; 
0x000000000b5718: mov [rdi], ecx; mov [rdi+0x6], rdx; lea rax, [rdi+0xe]; ret; 
0x000000000b3228: mov [rdi], ecx; mov [rdi+0x6], rdx; ret; 
0x000000000b7378: mov [rdi], ecx; mov [rdi+0x6], rdx; xor ch, ch; mov [rdi+0xe], ch; ret; 
0x000000000b4857: mov [rdi], ecx; mov [rdi+0x7], edx; lea rax, [rdi+0xa]; ret; 
0x000000000b56b7: mov [rdi], ecx; mov [rdi+0x7], edx; lea rax, [rdi+0xb]; ret; 
0x000000000b31f7: mov [rdi], ecx; mov [rdi+0x7], edx; ret; 
0x000000000b7317: mov [rdi], ecx; mov [rdi+0x7], edx; xor ch, ch; mov [rdi+0xb], ch; ret; 
0x000000000b48d8: mov [rdi], ecx; mov [rdi+0x7], rdx; lea rax, [rdi+0xe]; ret; 
0x000000000b5738: mov [rdi], ecx; mov [rdi+0x7], rdx; lea rax, [rdi+0xf]; ret; 
0x000000000b3238: mov [rdi], ecx; mov [rdi+0x7], rdx; ret; 
0x000000000b7398: mov [rdi], ecx; mov [rdi+0x7], rdx; xor ch, ch; mov [rdi+0xf], ch; ret; 
0x000000000b5677: mov [rdi], ecx; mov [rdi+0x8], dl; lea rax, [rdi+0x9]; ret; 
0x000000000b3ec7: mov [rdi], ecx; mov [rdi+0x8], dl; ret; 
0x000000000b72d7: mov [rdi], ecx; mov [rdi+0x8], dl; xor ch, ch; mov [rdi+0x9], ch; ret; 
0x000000000b4838: mov [rdi], ecx; mov [rdi+0x8], dx; lea rax, [rdi+0x9]; ret; 
0x000000000b5698: mov [rdi], ecx; mov [rdi+0x8], dx; lea rax, [rdi+0xa]; ret; 
0x000000000b31e8: mov [rdi], ecx; mov [rdi+0x8], dx; ret; 
0x000000000b72f8: mov [rdi], ecx; mov [rdi+0x8], dx; xor ch, ch; mov [rdi+0xa], ch; ret; 
0x000000000b4877: mov [rdi], ecx; mov [rdi+0x8], edx; lea rax, [rdi+0xb]; ret; 
0x000000000b56d7: mov [rdi], ecx; mov [rdi+0x8], edx; lea rax, [rdi+0xc]; ret; 
0x000000000b3207: mov [rdi], ecx; mov [rdi+0x8], edx; ret; 
0x000000000b7337: mov [rdi], ecx; mov [rdi+0x8], edx; xor ch, ch; mov [rdi+0xc], ch; ret; 
0x00000000184d8a: mov [rdi], ecx; mov [rdi+r8-0x2], dx; lea rax, [rdi+r8]; vzeroupper; ret; 
0x000000001834aa: mov [rdi], ecx; mov [rdi+r8-0x2], dx; mov byte ptr [rdi+r8], 0x0; vzeroupper; ret; 
0x0000000018405a: mov [rdi], ecx; mov [rdi+r8-0x2], dx; vzeroupper; ret; 
0x00000000184da7: mov [rdi], ecx; mov [rdi+r8-0x4], edx; lea rax, [rdi+r8]; vzeroupper; ret; 
0x000000001834c7: mov [rdi], ecx; mov [rdi+r8-0x4], edx; mov byte ptr [rdi+r8], 0x0; vzeroupper; ret; 
0x00000000184077: mov [rdi], ecx; mov [rdi+r8-0x4], edx; vzeroupper; ret; 
0x00000000184dc9: mov [rdi], ecx; mov [rdi+r8-0x8], rdx; lea rax, [rdi+r8]; vzeroupper; ret; 
0x000000001834e9: mov [rdi], ecx; mov [rdi+r8-0x8], rdx; mov byte ptr [rdi+r8], 0x0; vzeroupper; ret; 
0x00000000184099: mov [rdi], ecx; mov [rdi+r8-0x8], rdx; vzeroupper; ret; 
0x000000001846f9: mov [rdi], ecx; mov [rdi+rdx-0x7], r9; lea rax, [rdi+rdx]; vzeroupper; ret; 
0x00000000182c49: mov [rdi], ecx; mov [rdi+rdx-0x7], r9; vzeroupper; ret; 
0x00000000189cc7: mov [rdi], ecx; mov [rsi-0x2], cx; ret; 
0x00000000189cbb: mov [rdi], ecx; mov [rsi-0x4], ecx; ret; 
0x000000001846a4: mov [rdi], ecx; mov byte ptr [rdi+0x2], 0x0; lea rax, [rdi+0x2]; vzeroupper; ret; 
0x00000000182c14: mov [rdi], ecx; mov byte ptr [rdi+0x2], 0x0; vzeroupper; ret; 
0x00000000182c32: mov [rdi], ecx; mov ecx, [rsi+rdx-0x3]; mov [rdi+rdx-0x3], ecx; vzeroupper; ret; 
0x00000000040a5e: mov [rdi], ecx; ret; 
0x000000000b3a35: mov [rdi], ecx; sub r8, 0x5; lea rdi, [rdi+0x5]; jne 0x00000000000b4270; ret; 
0x000000000b3ab7: mov [rdi], ecx; sub r8, 0x9; lea rdi, [rdi+0x9]; jne 0x00000000000b4270; ret; 
0x000000001856f3: mov [rdi], ecx; vzeroupper; ret; 
0x000000000a4ca6: mov [rdi], edx; add rax, rdi; ret; 
0x00000000087593: mov [rdi], edx; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000040662: mov [rdi], edx; fstp tbyte ptr [rsp-0x18], st; mov [rsp-0x10], ax; fld st, tbyte ptr [rsp-0x18]; ret; 
0x000000000b47a4: mov [rdi], edx; lea rax, [rdi+0x1]; ret; 
0x00000000184694: mov [rdi], edx; lea rax, [rdi+0x1]; vzeroupper; ret; 
0x000000000b55e4: mov [rdi], edx; lea rax, [rdi+0x2]; ret; 
0x00000000184d74: mov [rdi], edx; lea rax, [rdi+0x2]; vzeroupper; ret; 
0x000000000b47c2: mov [rdi], edx; lea rax, [rdi+0x3]; ret; 
0x000000001846c2: mov [rdi], edx; lea rax, [rdi+0x3]; vzeroupper; ret; 
0x000000000b5612: mov [rdi], edx; lea rax, [rdi+0x4]; ret; 
0x000000000b4814: mov [rdi], edx; lea rax, [rdi+0x7]; ret; 
0x000000000b5664: mov [rdi], edx; lea rax, [rdi+0x8]; ret; 
0x000000000a4e36: mov [rdi], edx; lea rax, [rdi+rax-0x1]; ret; 
0x000000000b4180: mov [rdi], edx; mov [rdi+0x4], dl; ret; 
0x000000000b4190: mov [rdi], edx; mov [rdi+0x4], dx; ret; 
0x000000000b4201: mov [rdi], edx; mov [rdi+0x5], rdx; ret; 
0x000000000b4211: mov [rdi], edx; mov [rdi+0x6], rdx; ret; 
0x000000000b41e1: mov [rdi], edx; mov [rdi+0x7], edx; ret; 
0x000000000b41c1: mov [rdi], edx; mov [rdi+0x8], dl; ret; 
0x000000000b41d1: mov [rdi], edx; mov [rdi+0x8], dx; ret; 
0x000000000b41f1: mov [rdi], edx; mov [rdi+0x8], edx; ret; 
0x00000000184131: mov [rdi], edx; mov [rdi+r8-0x2], dx; vzeroupper; ret; 
0x00000000184140: mov [rdi], edx; mov [rdi+r8-0x4], edx; vzeroupper; ret; 
0x00000000184151: mov [rdi], edx; mov [rdi+r8-0x8], rdx; vzeroupper; ret; 
0x00000000055bc6: mov [rdi], edx; mov [rsi], eax; mov eax, 0x1; ret; 
0x00000000183494: mov [rdi], edx; mov byte ptr [rdi+0x2], 0x0; vzeroupper; ret; 
0x00000000040d99: mov [rdi], edx; movd xmm0, eax; ret; 
0x000000000a4cd9: mov [rdi], edx; movzx edx, byte ptr [rsp-0x6]; mov [rdi+0x2], dl; ret; 
0x000000000a4cf7: mov [rdi], edx; movzx edx, byte ptr [rsp-0xc]; mov [rdi+0x4], dl; ret; 
0x000000000a4d0f: mov [rdi], edx; movzx edx, word ptr [rsp+0xc]; mov [rdi+0x4], dx; ret; 
0x000000000a4eb1: mov [rdi], edx; movzx edx, word ptr [rsp-0x14]; mov [rdi+0x4], dx; ret; 
0x000000000408ae: mov [rdi], edx; ret; 
0x00000000045f21: mov [rdi], edx; shr ecx, 0x10; and ecx, 0x3ff; xor eax, ecx; ret; 
0x000000000b39d4: mov [rdi], edx; sub r8, 0x2; lea rdi, [rdi+0x2]; jne 0x00000000000b4270; ret; 
0x000000000b3a12: mov [rdi], edx; sub r8, 0x4; lea rdi, [rdi+0x4]; jne 0x00000000000b4270; ret; 
0x000000000b3a94: mov [rdi], edx; sub r8, 0x8; lea rdi, [rdi+0x8]; jne 0x00000000000b4270; ret; 
0x00000000040bf8: mov [rdi], edx; subss xmm0, xmm1; ret; 
0x00000000182c04: mov [rdi], edx; vzeroupper; ret; 
0x000000000b7244: mov [rdi], edx; xor ch, ch; mov [rdi+0x2], ch; ret; 
0x000000000b7272: mov [rdi], edx; xor ch, ch; mov [rdi+0x4], ch; ret; 
0x000000000b72c4: mov [rdi], edx; xor ch, ch; mov [rdi+0x8], ch; ret; 
0x000000000a4cc1: mov [rdi], esi; add rax, rdi; ret; 
0x000000000a4e51: mov [rdi], esi; lea rax, [rdi+rax-0x1]; ret; 
0x000000001895f7: mov [rdi], esi; mov [r9-0x2], cx; ret; 
0x000000001895e3: mov [rdi], esi; mov [r9-0x4], ecx; ret; 
0x000000001895d2: mov [rdi], esi; mov [r9-0x8], rcx; ret; 
0x00000000040c06: mov [rdi], esi; ret; 
0x000000001072c1: mov [rdi], esi; xor eax, eax; ret; 
0x000000000a4cb0: mov [rdi], r10b; add rax, rdi; ret; 
0x000000000543f7: mov [rdi], r8; shl r9, cl; mov [rdi-0x8], r9; ret; 
0x00000000054511: mov [rdi], r8; shr r9, cl; mov [rdi+0x8], r9; ret; 
0x000000000a4ce8: mov [rdi], r8d; add rax, rdi; ret; 
0x000000000543cc: mov [rdi], r9; ret; 
0x0000000005974e: mov [rdi], rax; mov rax, rdi; ret; 
0x00000000040893: mov [rdi], rax; subsd xmm0, xmm1; ret; 
0x00000000042313: mov [rdi], rax; xor eax, eax; ret; 
0x000000000b4826: mov [rdi], rcx; lea rax, [rdi+0x8]; ret; 
0x000000000b4897: mov [rdi], rcx; mov [rdi+0x5], rdx; lea rax, [rdi+0xc]; ret; 
0x000000000b56f7: mov [rdi], rcx; mov [rdi+0x5], rdx; lea rax, [rdi+0xd]; ret; 
0x000000000b3217: mov [rdi], rcx; mov [rdi+0x5], rdx; ret; 
0x000000000b7357: mov [rdi], rcx; mov [rdi+0x5], rdx; xor ch, ch; mov [rdi+0xd], ch; ret; 
0x000000000b48b7: mov [rdi], rcx; mov [rdi+0x6], rdx; lea rax, [rdi+0xd]; ret; 
0x000000000b5717: mov [rdi], rcx; mov [rdi+0x6], rdx; lea rax, [rdi+0xe]; ret; 
0x000000000b3227: mov [rdi], rcx; mov [rdi+0x6], rdx; ret; 
0x000000000b7377: mov [rdi], rcx; mov [rdi+0x6], rdx; xor ch, ch; mov [rdi+0xe], ch; ret; 
0x000000000b4856: mov [rdi], rcx; mov [rdi+0x7], edx; lea rax, [rdi+0xa]; ret; 
0x000000000b56b6: mov [rdi], rcx; mov [rdi+0x7], edx; lea rax, [rdi+0xb]; ret; 
0x000000000b31f6: mov [rdi], rcx; mov [rdi+0x7], edx; ret; 
0x000000000b7316: mov [rdi], rcx; mov [rdi+0x7], edx; xor ch, ch; mov [rdi+0xb], ch; ret; 
0x000000000b48d7: mov [rdi], rcx; mov [rdi+0x7], rdx; lea rax, [rdi+0xe]; ret; 
0x000000000b5737: mov [rdi], rcx; mov [rdi+0x7], rdx; lea rax, [rdi+0xf]; ret; 
0x000000000b3237: mov [rdi], rcx; mov [rdi+0x7], rdx; ret; 
0x000000000b7397: mov [rdi], rcx; mov [rdi+0x7], rdx; xor ch, ch; mov [rdi+0xf], ch; ret; 
0x000000000b5676: mov [rdi], rcx; mov [rdi+0x8], dl; lea rax, [rdi+0x9]; ret; 
0x000000000b3ec6: mov [rdi], rcx; mov [rdi+0x8], dl; ret; 
0x000000000b72d6: mov [rdi], rcx; mov [rdi+0x8], dl; xor ch, ch; mov [rdi+0x9], ch; ret; 
0x000000000b4837: mov [rdi], rcx; mov [rdi+0x8], dx; lea rax, [rdi+0x9]; ret; 
0x000000000b5697: mov [rdi], rcx; mov [rdi+0x8], dx; lea rax, [rdi+0xa]; ret; 
0x000000000b31e7: mov [rdi], rcx; mov [rdi+0x8], dx; ret; 
0x000000000b72f7: mov [rdi], rcx; mov [rdi+0x8], dx; xor ch, ch; mov [rdi+0xa], ch; ret; 
0x000000000b4876: mov [rdi], rcx; mov [rdi+0x8], edx; lea rax, [rdi+0xb]; ret; 
0x000000000b56d6: mov [rdi], rcx; mov [rdi+0x8], edx; lea rax, [rdi+0xc]; ret; 
0x000000000b3206: mov [rdi], rcx; mov [rdi+0x8], edx; ret; 
0x000000000b7336: mov [rdi], rcx; mov [rdi+0x8], edx; xor ch, ch; mov [rdi+0xc], ch; ret; 
0x00000000184dc8: mov [rdi], rcx; mov [rdi+r8-0x8], rdx; lea rax, [rdi+r8]; vzeroupper; ret; 
0x000000001834e8: mov [rdi], rcx; mov [rdi+r8-0x8], rdx; mov byte ptr [rdi+r8], 0x0; vzeroupper; ret; 
0x00000000184098: mov [rdi], rcx; mov [rdi+r8-0x8], rdx; vzeroupper; ret; 
0x000000001846f8: mov [rdi], rcx; mov [rdi+rdx-0x7], r9; lea rax, [rdi+rdx]; vzeroupper; ret; 
0x00000000182c48: mov [rdi], rcx; mov [rdi+rdx-0x7], r9; vzeroupper; ret; 
0x000000000b31d6: mov [rdi], rcx; ret; 
0x000000000b3ab6: mov [rdi], rcx; sub r8, 0x9; lea rdi, [rdi+0x9]; jne 0x00000000000b4270; ret; 
0x000000001856f2: mov [rdi], rcx; vzeroupper; ret; 
0x000000000a4ca5: mov [rdi], rdx; add rax, rdi; ret; 
0x000000000b4813: mov [rdi], rdx; lea rax, [rdi+0x7]; ret; 
0x000000000b5663: mov [rdi], rdx; lea rax, [rdi+0x8]; ret; 
0x000000000a4e35: mov [rdi], rdx; lea rax, [rdi+rax-0x1]; ret; 
0x000000000b4200: mov [rdi], rdx; mov [rdi+0x5], rdx; ret; 
0x000000000b4210: mov [rdi], rdx; mov [rdi+0x6], rdx; ret; 
0x000000000b41e0: mov [rdi], rdx; mov [rdi+0x7], edx; ret; 
0x000000000b41c0: mov [rdi], rdx; mov [rdi+0x8], dl; ret; 
0x000000000b41d0: mov [rdi], rdx; mov [rdi+0x8], dx; ret; 
0x000000000b41f0: mov [rdi], rdx; mov [rdi+0x8], edx; ret; 
0x00000000184150: mov [rdi], rdx; mov [rdi+r8-0x8], rdx; vzeroupper; ret; 
0x00000000055bc5: mov [rdi], rdx; mov [rsi], eax; mov eax, 0x1; ret; 
0x000000000408ad: mov [rdi], rdx; ret; 
0x000000000b3a93: mov [rdi], rdx; sub r8, 0x8; lea rdi, [rdi+0x8]; jne 0x00000000000b4270; ret; 
0x000000000b72c3: mov [rdi], rdx; xor ch, ch; mov [rdi+0x8], ch; ret; 
0x000000001895d1: mov [rdi], rsi; mov [r9-0x8], rcx; ret; 
0x000000000b7f0f: mov [rdi], rsi; ret; 
0x000000000a4cc0: mov [rdi], si; add rax, rdi; ret; 
0x000000000a4e50: mov [rdi], si; lea rax, [rdi+rax-0x1]; ret; 
0x000000001895f6: mov [rdi], si; mov [r9-0x2], cx; ret; 
0x000000000b7f2d: mov [rdi], si; ret; 
0x000000001072c0: mov [rdi], si; xor eax, eax; ret; 
0x000000000b2a9a: mov [rdx+0x10], ah; mov rax, rdi; ret; 
0x0000000014a66c: mov [rdx+0x10], eax; mov eax, 0x1; ret; 
0x0000000011bd89: mov [rdx+0x10], ecx; mov [r8], rax; mov qword ptr [rip+0xc75e6], 0x0; ret; 
0x0000000011bd09: mov [rdx+0x10], ecx; mov [r8], rax; mov qword ptr [rip+0xc7666], 0x0; ret; 
0x0000000011bd88: mov [rdx+0x10], rcx; mov [r8], rax; mov qword ptr [rip+0xc75e6], 0x0; ret; 
0x0000000011bd08: mov [rdx+0x10], rcx; mov [r8], rax; mov qword ptr [rip+0xc7666], 0x0; ret; 
0x000000000afcc2: mov [rdx+0x1], ah; mov al, [rcx]; mov [rdx], al; mov rax, rdi; ret; 
0x00000000082a04: mov [rdx+0x20], esi; mov [rcx], eax; ret; 
0x00000000143ec8: mov [rdx+0x20], esi; ret; 
0x00000000082a03: mov [rdx+0x20], rsi; mov [rcx], eax; ret; 
0x00000000143ec7: mov [rdx+0x20], rsi; ret; 
0x0000000009393f: mov [rdx+0x28], ecx; mov rax, [rdi+0x28]; mov [rax+0x20], rdx; add rsp, 0x8; ret; 
0x0000000009393e: mov [rdx+0x28], rcx; mov rax, [rdi+0x28]; mov [rax+0x20], rdx; add rsp, 0x8; ret; 
0x000000000afcd2: mov [rdx+0x2], ah; mov ax, [rcx]; mov [rdx], ax; mov rax, rdi; ret; 
0x00000000174589: mov [rdx+0x2], al; lea rax, [rdx+0x2]; ret; 
0x000000000afcee: mov [rdx+0x2], al; mov rax, rdi; ret; 
0x000000001745e7: mov [rdx+0x3], eax; lea rax, [rdx+0x6]; ret; 
0x000000000afd5c: mov [rdx+0x3], eax; mov rax, rdi; ret; 
0x00000000094c05: mov [rdx+0x48000001], cl; mov eax, [rip+0x14e17f]; call qword ptr [rax]; 
0x000000000afd02: mov [rdx+0x4], ah; mov eax, [rcx]; mov [rdx], eax; mov rax, rdi; ret; 
0x000000001745b7: mov [rdx+0x4], al; lea rax, [rdx+0x4]; ret; 
0x000000000afd1c: mov [rdx+0x4], al; mov rax, rdi; ret; 
0x000000001745c8: mov [rdx+0x4], ax; lea rax, [rdx+0x5]; ret; 
0x000000000afd3d: mov [rdx+0x4], ax; mov rax, rdi; ret; 
0x000000001745c9: mov [rdx+0x4], eax; lea rax, [rdx+0x5]; ret; 
0x000000000c71e6: mov [rdx+0x4], eax; mov [rdx], eax; xor eax, eax; ret; 
0x000000000afd3e: mov [rdx+0x4], eax; mov rax, rdi; ret; 
0x00000000128aba: mov [rdx+0x4], ecx; test ecx, ecx; jne short 0x0000000000128a70; mov rax, r8; ret; 
0x000000000c71e5: mov [rdx+0x4], r8d; mov [rdx], eax; xor eax, eax; ret; 
0x00000000143ea2: mov [rdx+0x58], edi; mov [rdx+0x68], rcx; ret; 
0x00000000143ea1: mov [rdx+0x58], rdi; mov [rdx+0x68], rcx; ret; 
0x000000001745f9: mov [rdx+0x5], eax; lea rax, [rdx+0x8]; ret; 
0x0000000017467b: mov [rdx+0x5], eax; lea rax, [rdx+0xc]; ret; 
0x000000001702a9: mov [rdx+0x5], eax; mov rax, rdi; ret; 
0x0000000015b745: mov [rdx+0x5], es; add al, ch; add dl, bl; in eax, dx; jmp qword ptr [rsi-0x70]; 
0x0000000017467a: mov [rdx+0x5], rax; lea rax, [rdx+0xc]; ret; 
0x000000001702ea: mov [rdx+0x5], rax; mov rax, rdi; ret; 
0x00000000146f1a: mov [rdx+0x68], eax; movzx eax, word ptr [r8+0x88]; mov [rdx+0x6c], ax; mov eax, 0x1; ret; 
0x00000000143ea6: mov [rdx+0x68], ecx; ret; 
0x00000000143ea5: mov [rdx+0x68], rcx; ret; 
0x00000000174619: mov [rdx+0x6], eax; lea rax, [rdx+0x9]; ret; 
0x0000000017469b: mov [rdx+0x6], eax; lea rax, [rdx+0xd]; ret; 
0x000000001702b9: mov [rdx+0x6], eax; mov rax, rdi; ret; 
0x0000000017469a: mov [rdx+0x6], rax; lea rax, [rdx+0xd]; ret; 
0x0000000017030a: mov [rdx+0x6], rax; mov rax, rdi; ret; 
0x00000000146f25: mov [rdx+0x6c], ax; mov eax, 0x1; ret; 
0x00000000146f26: mov [rdx+0x6c], eax; mov eax, 0x1; ret; 
0x00000000174639: mov [rdx+0x7], eax; lea rax, [rdx+0xa]; ret; 
0x00000000176903: mov [rdx+0x7], eax; lea rax, [rdx+0xe]; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x000000001746bb: mov [rdx+0x7], eax; lea rax, [rdx+0xe]; ret; 
0x000000000afde0: mov [rdx+0x7], eax; mov rax, rdi; ret; 
0x00000000176902: mov [rdx+0x7], rax; lea rax, [rdx+0xe]; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x000000001746ba: mov [rdx+0x7], rax; lea rax, [rdx+0xe]; ret; 
0x0000000017032a: mov [rdx+0x7], rax; mov rax, rdi; ret; 
0x000000000b2a30: mov [rdx+0x8], ah; mov rax, rdi; ret; 
0x000000000afd72: mov [rdx+0x8], ah; movlpd xmm0, [rcx]; movlpd [rdx], xmm0; mov rax, rdi; ret; 
0x000000000afda0: mov [rdx+0x8], al; mov rax, rdi; ret; 
0x000000000afdc1: mov [rdx+0x8], ax; mov rax, rdi; ret; 
0x00000000174659: mov [rdx+0x8], eax; lea rax, [rdx+0xb]; ret; 
0x0000000017454b: mov [rdx+0x8], eax; lea rax, [rdx+0xf]; ret; 
0x000000000afdc2: mov [rdx+0x8], eax; mov rax, rdi; ret; 
0x0000000003483f: mov [rdx+0x8], eax; pop rbx; ret; 
0x00000000111cd1: mov [rdx+0x8], eax; test rax, rax; je short 0x0000000000111cdc; mov [rax], rdx; ret; 
0x0000000006115a: mov [rdx+0x8], ecx; mov dword ptr [rdx+0x4], 0x1; ret; 
0x0000000017454a: mov [rdx+0x8], rax; lea rax, [rdx+0xf]; ret; 
0x0000000017021a: mov [rdx+0x8], rax; mov rax, rdi; ret; 
0x00000000111cd0: mov [rdx+0x8], rax; test rax, rax; je short 0x0000000000111cdc; mov [rax], rdx; ret; 
0x00000000061159: mov [rdx+0x8], rcx; mov dword ptr [rdx+0x4], 0x1; ret; 
0x0000000014a56c: mov [rdx+0xc], eax; mov eax, 0x1; ret; 
0x0000000008aaed: mov [rdx+0xe0], ecx; pop rbx; ret; 
0x0000000007f16b: mov [rdx+0xe0], ecx; ret; 
0x0000000008aaec: mov [rdx+0xe0], rcx; pop rbx; ret; 
0x0000000007f16a: mov [rdx+0xe0], rcx; ret; 
0x000000000b4e23: mov [rdx+0xf], eax; add [rcx+0x63], cl; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000536eb: mov [rdx+rax*8], ecx; xor eax, eax; ret; 
0x000000000536ea: mov [rdx+rax*8], rcx; xor eax, eax; ret; 
0x00000000137089: mov [rdx-0x1], al; mov [rax], r10; lea eax, [r9+r8+0x2]; pop rbx; ret; 
0x00000000174562: mov [rdx], al; lea rax, [rdx]; ret; 
0x0000000008a45f: mov [rdx], al; mov eax, r8d; ret; 
0x000000000afcc7: mov [rdx], al; mov rax, rdi; ret; 
0x00000000174573: mov [rdx], ax; lea rax, [rdx+0x1]; ret; 
0x00000000174583: mov [rdx], ax; mov al, [rcx+0x2]; mov [rdx+0x2], al; lea rax, [rdx+0x2]; ret; 
0x000000000afce8: mov [rdx], ax; mov al, [rcx+0x2]; mov [rdx+0x2], al; mov rax, rdi; ret; 
0x000000000afcd8: mov [rdx], ax; mov rax, rdi; ret; 
0x0000000011c0b5: mov [rdx], ax; ret; 
0x0000000003d061: mov [rdx], bl; add [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x0000000010f23b: mov [rdx], eax; cmp rdi, rax; ja short 0x000000000010f268; xor eax, eax; ret; 
0x00000000174574: mov [rdx], eax; lea rax, [rdx+0x1]; ret; 
0x000000001745a2: mov [rdx], eax; lea rax, [rdx+0x3]; ret; 
0x000000001769af: mov [rdx], eax; lea rax, [rdx+0x7]; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x000000001744f4: mov [rdx], eax; lea rax, [rdx+0x7]; ret; 
0x00000000174584: mov [rdx], eax; mov al, [rcx+0x2]; mov [rdx+0x2], al; lea rax, [rdx+0x2]; ret; 
0x000000000afce9: mov [rdx], eax; mov al, [rcx+0x2]; mov [rdx+0x2], al; mov rax, rdi; ret; 
0x000000001745b2: mov [rdx], eax; mov al, [rcx+0x4]; mov [rdx+0x4], al; lea rax, [rdx+0x4]; ret; 
0x000000000afd17: mov [rdx], eax; mov al, [rcx+0x4]; mov [rdx+0x4], al; mov rax, rdi; ret; 
0x000000001745c2: mov [rdx], eax; mov ax, [rcx+0x4]; mov [rdx+0x4], ax; lea rax, [rdx+0x5]; ret; 
0x000000000afd37: mov [rdx], eax; mov ax, [rcx+0x4]; mov [rdx+0x4], ax; mov rax, rdi; ret; 
0x00000000055c67: mov [rdx], eax; mov eax, 0x1; ret; 
0x00000000041c1a: mov [rdx], eax; mov eax, 0xffffffff; ret; 
0x000000001745e2: mov [rdx], eax; mov eax, [rcx+0x3]; mov [rdx+0x3], eax; lea rax, [rdx+0x6]; ret; 
0x000000000afd57: mov [rdx], eax; mov eax, [rcx+0x3]; mov [rdx+0x3], eax; mov rax, rdi; ret; 
0x000000001745f4: mov [rdx], eax; mov eax, [rcx+0x5]; mov [rdx+0x5], eax; lea rax, [rdx+0x8]; ret; 
0x000000001702a4: mov [rdx], eax; mov eax, [rcx+0x5]; mov [rdx+0x5], eax; mov rax, rdi; ret; 
0x00000000174614: mov [rdx], eax; mov eax, [rcx+0x6]; mov [rdx+0x6], eax; lea rax, [rdx+0x9]; ret; 
0x000000001702b4: mov [rdx], eax; mov eax, [rcx+0x6]; mov [rdx+0x6], eax; mov rax, rdi; ret; 
0x00000000174634: mov [rdx], eax; mov eax, [rcx+0x7]; mov [rdx+0x7], eax; lea rax, [rdx+0xa]; ret; 
0x000000001702c4: mov [rdx], eax; mov eax, [rcx+0x7]; mov [rdx+0x7], eax; mov rax, rdi; ret; 
0x00000000174654: mov [rdx], eax; mov eax, [rcx+0x8]; mov [rdx+0x8], eax; lea rax, [rdx+0xb]; ret; 
0x000000001702d4: mov [rdx], eax; mov eax, [rcx+0x8]; mov [rdx+0x8], eax; mov rax, rdi; ret; 
0x0000000015c720: mov [rdx], eax; mov eax, r8d; ret; 
0x000000000fd350: mov [rdx], eax; mov eax, r9d; ret; 
0x000000001445ca: mov [rdx], eax; mov edx, ebx; call qword ptr [r13+0x10]; 
0x0000000004643a: mov [rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000174674: mov [rdx], eax; mov rax, [rcx+0x5]; mov [rdx+0x5], rax; lea rax, [rdx+0xc]; ret; 
0x000000001702e4: mov [rdx], eax; mov rax, [rcx+0x5]; mov [rdx+0x5], rax; mov rax, rdi; ret; 
0x00000000174694: mov [rdx], eax; mov rax, [rcx+0x6]; mov [rdx+0x6], rax; lea rax, [rdx+0xd]; ret; 
0x00000000170304: mov [rdx], eax; mov rax, [rcx+0x6]; mov [rdx+0x6], rax; mov rax, rdi; ret; 
0x000000001746b4: mov [rdx], eax; mov rax, [rcx+0x7]; mov [rdx+0x7], rax; lea rax, [rdx+0xe]; ret; 
0x00000000170324: mov [rdx], eax; mov rax, [rcx+0x7]; mov [rdx+0x7], rax; mov rax, rdi; ret; 
0x00000000174544: mov [rdx], eax; mov rax, [rcx+0x8]; mov [rdx+0x8], rax; lea rax, [rdx+0xf]; ret; 
0x00000000170214: mov [rdx], eax; mov rax, [rcx+0x8]; mov [rdx+0x8], rax; mov rax, rdi; ret; 
0x0000000010f252: mov [rdx], eax; mov rax, [rip+0xd3c45]; mov qword ptr [rax], 0xffffffffffffffff; xor eax, eax; ret; 
0x000000000d0aea: mov [rdx], eax; mov rax, r8; add rsp, 0x8; ret; 
0x000000000afcd9: mov [rdx], eax; mov rax, rdi; ret; 
0x00000000039011: mov [rdx], eax; ret; 
0x000000000c71e9: mov [rdx], eax; xor eax, eax; ret; 
0x0000000003d024: mov [rdx], ebx; add [rdi], cl; add eax, 0xfffefbe9; jmp qword ptr [rsi-0x70]; 
0x00000000083b0c: mov [rdx], ecx; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000000387c7: mov [rdx], ecx; mov rdx, [rax+0xc0]; mov rax, [rip+0x1aa5d9]; mov [rax], rdx; ret; 
0x000000000fd0a1: mov [rdx], ecx; pop rdx; pop rcx; pop rbx; ret; 
0x000000000d8e70: mov [rdx], edi; xor eax, eax; ret; 
0x00000000081d67: mov [rdx], esp; add rsp, 0x8; pop rbp; pop r12; ret; 
0x00000000081d66: mov [rdx], r12d; add rsp, 0x8; pop rbp; pop r12; ret; 
0x0000000010f23a: mov [rdx], rax; cmp rdi, rax; ja short 0x000000000010f268; xor eax, eax; ret; 
0x000000001769ae: mov [rdx], rax; lea rax, [rdx+0x7]; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x000000001744f3: mov [rdx], rax; lea rax, [rdx+0x7]; ret; 
0x0000000011b353: mov [rdx], rax; mov eax, 0x1; ret; 
0x000000001745f3: mov [rdx], rax; mov eax, [rcx+0x5]; mov [rdx+0x5], eax; lea rax, [rdx+0x8]; ret; 
0x000000001702a3: mov [rdx], rax; mov eax, [rcx+0x5]; mov [rdx+0x5], eax; mov rax, rdi; ret; 
0x00000000174613: mov [rdx], rax; mov eax, [rcx+0x6]; mov [rdx+0x6], eax; lea rax, [rdx+0x9]; ret; 
0x000000001702b3: mov [rdx], rax; mov eax, [rcx+0x6]; mov [rdx+0x6], eax; mov rax, rdi; ret; 
0x00000000174633: mov [rdx], rax; mov eax, [rcx+0x7]; mov [rdx+0x7], eax; lea rax, [rdx+0xa]; ret; 
0x000000001702c3: mov [rdx], rax; mov eax, [rcx+0x7]; mov [rdx+0x7], eax; mov rax, rdi; ret; 
0x00000000174653: mov [rdx], rax; mov eax, [rcx+0x8]; mov [rdx+0x8], eax; lea rax, [rdx+0xb]; ret; 
0x000000001702d3: mov [rdx], rax; mov eax, [rcx+0x8]; mov [rdx+0x8], eax; mov rax, rdi; ret; 
0x00000000174673: mov [rdx], rax; mov rax, [rcx+0x5]; mov [rdx+0x5], rax; lea rax, [rdx+0xc]; ret; 
0x000000001702e3: mov [rdx], rax; mov rax, [rcx+0x5]; mov [rdx+0x5], rax; mov rax, rdi; ret; 
0x00000000174693: mov [rdx], rax; mov rax, [rcx+0x6]; mov [rdx+0x6], rax; lea rax, [rdx+0xd]; ret; 
0x00000000170303: mov [rdx], rax; mov rax, [rcx+0x6]; mov [rdx+0x6], rax; mov rax, rdi; ret; 
0x000000001746b3: mov [rdx], rax; mov rax, [rcx+0x7]; mov [rdx+0x7], rax; lea rax, [rdx+0xe]; ret; 
0x00000000170323: mov [rdx], rax; mov rax, [rcx+0x7]; mov [rdx+0x7], rax; mov rax, rdi; ret; 
0x00000000174543: mov [rdx], rax; mov rax, [rcx+0x8]; mov [rdx+0x8], rax; lea rax, [rdx+0xf]; ret; 
0x00000000170213: mov [rdx], rax; mov rax, [rcx+0x8]; mov [rdx+0x8], rax; mov rax, rdi; ret; 
0x000000001701c3: mov [rdx], rax; mov rax, rdi; ret; 
0x00000000039010: mov [rdx], rax; ret; 
0x00000000083b0b: mov [rdx], rcx; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000000387c6: mov [rdx], rcx; mov rdx, [rax+0xc0]; mov rax, [rip+0x1aa5d9]; mov [rax], rdx; ret; 
0x00000000092402: mov [rip+0x150ea4], eax; ret; 
0x000000000923dc: mov [rip+0x150eae], eax; ret; 
0x000000000923db: mov [rip+0x150eae], rax; ret; 
0x000000000923b3: mov [rip+0x150ecf], eax; ret; 
0x000000000923b2: mov [rip+0x150ecf], rax; ret; 
0x00000000092393: mov [rip+0x150ee7], eax; ret; 
0x00000000092392: mov [rip+0x150ee7], rax; ret; 
0x00000000092169: mov [rip+0x151179], eax; ret; 
0x00000000092168: mov [rip+0x151179], rax; ret; 
0x00000000092152: mov [rip+0x151188], eax; ret; 
0x00000000092151: mov [rip+0x151188], rax; ret; 
0x00000000092138: mov [rip+0x151192], edx; ret; 
0x00000000092137: mov [rip+0x151192], rdx; ret; 
0x000000000920f9: mov [rip+0x151199], eax; ret; 
0x000000000920f8: mov [rip+0x151199], rax; ret; 
0x000000000920e9: mov [rip+0x1511b1], eax; ret; 
0x000000000920e8: mov [rip+0x1511b1], rax; ret; 
0x00000000092447: mov [rip+0x154a4b], eax; ret; 
0x00000000092446: mov [rip+0x154a4b], rax; ret; 
0x00000000092418: mov [rip+0x154a66], eax; ret; 
0x0000000008feb0: mov [rip+0x1567c2], ebx; add dword ptr [rip+0x1567b7], 0x1; pop rbx; ret; 
0x0000000008feaf: mov [rip+0x1567c2], rbx; add dword ptr [rip+0x1567b7], 0x1; pop rbx; ret; 
0x00000000042613: mov [rip+0x1a0b8f], eax; mov eax, edx; ret; 
0x000000000425f0: mov [rip+0x1a0bb6], edx; ret; 
0x0000000003730c: mov [rip+0x1ae5ab], al; lea rax, [rip+0x1ae547]; ret; 
0x000000000284b0: mov [rip+0x1be192], eax; ret; 
0x000000000284af: mov [rip+0x1be192], rax; ret; 
0x000000000266d8: mov [rip+0x1bef72], edx; pop rax; pop rbx; pop rbp; ret; 
0x000000000266d7: mov [rip+0x1bef72], rdx; pop rax; pop rbx; pop rbp; ret; 
0x0000000004c28f: mov [rip+0x36b90000], cl; add [rax], al; add [rax+0x63], cl; ret; 
0x00000000191a84: mov [rip+0x54bc6], ebx; test rbx, rbx; jne short 0x0000000000191a70; pop rbx; ret; 
0x00000000191a83: mov [rip+0x54bc6], rbx; test rbx, rbx; jne short 0x0000000000191a70; pop rbx; ret; 
0x0000000015a940: mov [rip+0x8c542], esi; ret; 
0x0000000015a93f: mov [rip+0x8c542], rsi; ret; 
0x0000000015a937: mov [rip+0x8c553], eax; xor eax, eax; mov [rip+0x8c542], rsi; ret; 
0x0000000015a936: mov [rip+0x8c553], r8; xor eax, eax; mov [rip+0x8c542], rsi; ret; 
0x00000000141be9: mov [rip+0xa7111], eax; add rsp, 0x8; ret; 
0x000000001333d3: mov [rip+0xb6047], eax; add rsp, 0x8; ret; 
0x000000001333d2: mov [rip+0xb6047], rax; add rsp, 0x8; ret; 
0x00000000126cec: mov [rip+0xc11c6], eax; pop rbp; ret; 
0x00000000126ceb: mov [rip+0xc11c6], rax; pop rbp; ret; 
0x0000000011bbe9: mov [rip+0xc7791], ebx; pop rbx; ret; 
0x0000000011bbe8: mov [rip+0xc7791], rbx; pop rbx; ret; 
0x0000000011bbcf: mov [rip+0xc77ab], ebx; pop rbx; ret; 
0x0000000011bbce: mov [rip+0xc77ab], rbx; pop rbx; ret; 
0x0000000011364e: mov [rip+0xcfd04], edi; ret; 
0x0000000011261e: mov [rip+0xd516c], eax; add rsp, 0x8; ret; 
0x0000000011261d: mov [rip+0xd516c], rax; add rsp, 0x8; ret; 
0x000000001125ad: mov [rip+0xd51dd], eax; mov rax, r8; add rsp, 0x8; ret; 
0x000000001125ac: mov [rip+0xd51dd], rax; mov rax, r8; add rsp, 0x8; ret; 
0x0000000011257d: mov [rip+0xd520d], eax; mov rax, r8; ret; 
0x0000000011257c: mov [rip+0xd520d], rax; mov rax, r8; ret; 
0x00000000110b05: mov [rip+0xd6b95], eax; lea rax, [rip+0xd6b66]; add rsp, 0x8; ret; 
0x00000000110b04: mov [rip+0xd6b95], rax; lea rax, [rip+0xd6b66]; add rsp, 0x8; ret; 
0x00000000110a51: mov [rip+0xd6be9], eax; mov eax, 0x1; add rsp, 0x8; ret; 
0x00000000110a50: mov [rip+0xd6be9], rax; mov eax, 0x1; add rsp, 0x8; ret; 
0x0000000008db02: mov [rip-0x1876b800], ss; xor esi, esi; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000045de5: mov [rsi+0x10], eax; mov [rsi+0x28], rax; xor eax, eax; ret; 
0x00000000142efb: mov [rsi+0x10], eax; ret; 
0x000000000462ba: mov [rsi+0x10], eax; xor eax, eax; mov dword ptr [rsi+0xc], 0x1000b; ret; 
0x00000000046309: mov [rsi+0x10], eax; xor eax, eax; ret; 
0x00000000045de4: mov [rsi+0x10], r8; mov [rsi+0x28], rax; xor eax, eax; ret; 
0x00000000142efa: mov [rsi+0x10], rax; ret; 
0x000000000462b9: mov [rsi+0x10], rax; xor eax, eax; mov dword ptr [rsi+0xc], 0x1000b; ret; 
0x00000000046308: mov [rsi+0x10], rax; xor eax, eax; ret; 
0x000000001279c3: mov [rsi+0x1], al; test al, al; jne short 0x0000000000127971; mov rax, r9; ret; 
0x00000000045de9: mov [rsi+0x28], eax; xor eax, eax; ret; 
0x0000000008a45c: mov [rsi+0x28], ecx; mov [rdx], al; mov eax, r8d; ret; 
0x00000000045de8: mov [rsi+0x28], rax; xor eax, eax; ret; 
0x0000000008a45b: mov [rsi+0x28], rcx; mov [rdx], al; mov eax, r8d; ret; 
0x0000000013753f: mov [rsi+0x3], al; xor eax, eax; ret; 
0x0000000013753e: mov [rsi+0x3], r8b; xor eax, eax; ret; 
0x0000000010e14f: mov [rsi+0x48], eax; ret; 
0x0000000010e14e: mov [rsi+0x48], rax; ret; 
0x0000000010e147: mov [rsi+0x50], ecx; xor rax, 0x20; mov [rsi+0x48], rax; ret; 
0x0000000010e146: mov [rsi+0x50], rcx; xor rax, 0x20; mov [rsi+0x48], rax; ret; 
0x0000000012f332: mov [rsi+0x5], al; mov rax, rsi; pop rbx; ret; 
0x0000000010d4b9: mov [rsi+0x66], dx; xor eax, eax; ret; 
0x0000000010d4ba: mov [rsi+0x66], edx; xor eax, eax; ret; 
0x00000000142ec7: mov [rsi+0x8], eax; ret; 
0x00000000142ec6: mov [rsi+0x8], rax; ret; 
0x00000000046341: mov [rsi+0xc], ax; mov eax, 0x1; mov [rsi+0xe], ax; xor eax, eax; ret; 
0x00000000046342: mov [rsi+0xc], eax; mov eax, 0x1; mov [rsi+0xe], ax; xor eax, eax; ret; 
0x0000000011bd2b: mov [rsi+0xc], esi; add [rax-0x77], cl; adc [r10+0x13], r14b; mov qword ptr [rip+0xc7640], 0x2; ret; 
0x0000000004634a: mov [rsi+0xe], ax; xor eax, eax; ret; 
0x0000000004634b: mov [rsi+0xe], eax; xor eax, eax; ret; 
0x0000000009e190: mov [rsi+rdx+0x1], al; jne short 0x000000000009e180; ret; 
0x0000000009e18d: mov [rsi+rdx], cl; mov [rsi+rdx+0x1], al; jne short 0x000000000009e180; ret; 
0x000000001197bb: mov [rsi-0x2708fff4], edx; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000189cc9: mov [rsi-0x2], cx; ret; 
0x00000000189cca: mov [rsi-0x2], ecx; ret; 
0x00000000189cbd: mov [rsi-0x4], ecx; ret; 
0x000000000462fb: mov [rsi], ax; mov rax, 0x5deece66d; mov [rsi+0x10], rax; xor eax, eax; ret; 
0x000000001072a7: mov [rsi], ax; xor eax, eax; ret; 
0x000000001512ba: mov [rsi], eax; mov [rdi+0x18], rdx; mov eax, r8d; ret; 
0x00000000055bc8: mov [rsi], eax; mov eax, 0x1; ret; 
0x00000000055df6: mov [rsi], eax; mov eax, 0x2; ret; 
0x000000000462fc: mov [rsi], eax; mov rax, 0x5deece66d; mov [rsi+0x10], rax; xor eax, eax; ret; 
0x00000000089ba3: mov [rsi], eax; xor eax, eax; ret; 
0x00000000136262: mov [rsi], edi; ret; 
0x000000000395e0: mov [rsi], edx; add [rax+0x63], cl; add al, 0x82; add rax, rdx; notrack jmp rax; 
0x00000000151237: mov [rsi], edx; mov [rdi+0x18], rax; mov eax, r8d; ret; 
0x00000000045e4f: mov [rsi], edx; mov eax, r8d; ret; 
0x000000000faf54: mov [rsi], edx; movups [rsi+0x8], xmm0; ret; 
0x000000001512b9: mov [rsi], rax; mov [rdi+0x18], rdx; mov eax, r8d; ret; 
0x00000000089ba2: mov [rsi], rax; xor eax, eax; ret; 
0x00000000136261: mov [rsi], rdi; ret; 
0x00000000040479: mov [rsp+0x10], eax; fld st, tbyte ptr [rsp+0x8]; ret; 
0x00000000119ab6: mov [rsp+0x10], eax; mov eax, 0x9d; syscall; 
0x00000000150358: mov [rsp+0x10], eax; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x0000000014fb9c: mov [rsp+0x10], eax; mov rax, [rdi+0x8]; sar rdx, 0x20; mov [rsp+0x8], rdx; call qword ptr [rax+0x8]; 
0x0000000014fc8c: mov [rsp+0x10], eax; mov rax, [rdi+0x8]; shr rdx, 0x20; mov [rsp+0x8], rdx; call qword ptr [rax+0x8]; 
0x00000000148f4c: mov [rsp+0x10], eax; mov rax, [rsp+0x48]; call qword ptr [rax+0x28]; 
0x0000000012198b: mov [rsp+0x10], eax; mov rdx, rax; call qword ptr [r12+0x28]; 
0x00000000094c8b: mov [rsp+0x10], ebx; call rax; 
0x0000000007aca2: mov [rsp+0x10], ecx; mov rdx, rcx; mov rsi, r12; mov rdi, rbp; call qword ptr [r14+0x38]; 
0x000000000751a9: mov [rsp+0x10], ecx; mov rdx, rcx; mov rsi, r9; mov rdi, rbp; call qword ptr [r12+0x38]; 
0x00000000075d05: mov [rsp+0x10], ecx; mov rdx, rcx; mov rsi, r9; mov rdi, rbp; call qword ptr [r13+0x38]; 
0x00000000085b44: mov [rsp+0x10], ecx; xor edx, edx; mov rdi, r15; call qword ptr [r14+0x80]; 
0x00000000094914: mov [rsp+0x10], esi; mov rdi, rsi; mov [rsp+0x18], r11; call qword ptr [rax]; 
0x000000000db327: mov [rsp+0x10], esi; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000094c8a: mov [rsp+0x10], r11; call rax; 
0x00000000119ab5: mov [rsp+0x10], rax; mov eax, 0x9d; syscall; 
0x00000000150357: mov [rsp+0x10], rax; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x0000000014fb9b: mov [rsp+0x10], rax; mov rax, [rdi+0x8]; sar rdx, 0x20; mov [rsp+0x8], rdx; call qword ptr [rax+0x8]; 
0x0000000014fc8b: mov [rsp+0x10], rax; mov rax, [rdi+0x8]; shr rdx, 0x20; mov [rsp+0x8], rdx; call qword ptr [rax+0x8]; 
0x00000000148f4b: mov [rsp+0x10], rax; mov rax, [rsp+0x48]; call qword ptr [rax+0x28]; 
0x0000000012198a: mov [rsp+0x10], rax; mov rdx, rax; call qword ptr [r12+0x28]; 
0x0000000007aca1: mov [rsp+0x10], rcx; mov rdx, rcx; mov rsi, r12; mov rdi, rbp; call qword ptr [r14+0x38]; 
0x000000000751a8: mov [rsp+0x10], rcx; mov rdx, rcx; mov rsi, r9; mov rdi, rbp; call qword ptr [r12+0x38]; 
0x00000000075d04: mov [rsp+0x10], rcx; mov rdx, rcx; mov rsi, r9; mov rdi, rbp; call qword ptr [r13+0x38]; 
0x00000000085b43: mov [rsp+0x10], rcx; xor edx, edx; mov rdi, r15; call qword ptr [r14+0x80]; 
0x00000000094913: mov [rsp+0x10], rsi; mov rdi, rsi; mov [rsp+0x18], r11; call qword ptr [rax]; 
0x000000000db326: mov [rsp+0x10], rsi; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000004279d: mov [rsp+0x14], eax; mov edi, r12d; mov eax, 0x81; syscall; 
0x0000000013de94: mov [rsp+0x14], eax; mov rdx, r12; mov eax, 0x81; syscall; 
0x0000000009491c: mov [rsp+0x18], ebx; call qword ptr [rax]; 
0x00000000142545: mov [rsp+0x18], edi; lea r9, [rsp+0x40]; call qword ptr [rax]; 
0x00000000094c86: mov [rsp+0x18], esi; mov [rsp+0x10], r11; call rax; 
0x0000000009491b: mov [rsp+0x18], r11; call qword ptr [rax]; 
0x00000000142544: mov [rsp+0x18], rdi; lea r9, [rsp+0x40]; call qword ptr [rax]; 
0x00000000094c85: mov [rsp+0x18], rsi; mov [rsp+0x10], r11; call rax; 
0x00000000142bb7: mov [rsp+0x192], ax; mov rax, [rsp+0x30]; call rax; 
0x00000000142bb8: mov [rsp+0x192], eax; mov rax, [rsp+0x30]; call rax; 
0x00000000121716: mov [rsp+0x1f], al; call qword ptr [r12+0x28]; 
0x00000000121712: mov [rsp+0x20], cl; mov [rsp+0x1f], al; call qword ptr [r12+0x28]; 
0x0000000010e325: mov [rsp+0x20], eax; cmp esi, 0x9; je short 0x000000000010e358; mov eax, 0x48; syscall; 
0x00000000094c81: mov [rsp+0x20], eax; mov [rsp+0x18], rsi; mov [rsp+0x10], r11; call rax; 
0x00000000110883: mov [rsp+0x20], eax; mov eax, 0x65; syscall; 
0x00000000094c80: mov [rsp+0x20], r8; mov [rsp+0x18], rsi; mov [rsp+0x10], r11; call rax; 
0x0000000010e324: mov [rsp+0x20], rax; cmp esi, 0x9; je short 0x000000000010e358; mov eax, 0x48; syscall; 
0x00000000110882: mov [rsp+0x20], rax; mov eax, 0x65; syscall; 
0x0000000010e821: mov [rsp+0x21], cx; mov [rsp+0x23], al; mov eax, r8d; movups [rsp+0x11], xmm0; syscall; 
0x0000000010e822: mov [rsp+0x21], ecx; mov [rsp+0x23], al; mov eax, r8d; movups [rsp+0x11], xmm0; syscall; 
0x0000000010e826: mov [rsp+0x23], al; mov eax, r8d; movups [rsp+0x11], xmm0; syscall; 
0x0000000014d8a5: mov [rsp+0x28], eax; mov rax, [rdi+0x8]; mov dword ptr [rsp+0x30], 0x1; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x0000000014d695: mov [rsp+0x28], eax; mov rax, [rdi+0x8]; mov dword ptr [rsp+0x30], 0x3; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x0000000014d705: mov [rsp+0x28], eax; mov rax, [rdi+0x8]; mov dword ptr [rsp+0x30], 0x4; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x0000000014d775: mov [rsp+0x28], eax; mov rax, [rdi+0x8]; mov dword ptr [rsp+0x30], 0x5; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x0000000010e98a: mov [rsp+0x28], eax; xor eax, eax; mov rdx, rsp; mov eax, 0x10; syscall; 
0x0000000014d8a4: mov [rsp+0x28], rax; mov rax, [rdi+0x8]; mov dword ptr [rsp+0x30], 0x1; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x0000000014d694: mov [rsp+0x28], rax; mov rax, [rdi+0x8]; mov dword ptr [rsp+0x30], 0x3; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x0000000014d704: mov [rsp+0x28], rax; mov rax, [rdi+0x8]; mov dword ptr [rsp+0x30], 0x4; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x0000000014d774: mov [rsp+0x28], rax; mov rax, [rdi+0x8]; mov dword ptr [rsp+0x30], 0x5; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x0000000010e989: mov [rsp+0x28], rax; xor eax, eax; mov rdx, rsp; mov eax, 0x10; syscall; 
0x0000000014f8b5: mov [rsp+0x38], eax; xor eax, eax; mov rdi, rsp; mov dword ptr [rsp], 0x2; call r8; 
0x0000000014d62b: mov [rsp+0x38], edx; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x0000000014f8b4: mov [rsp+0x38], rax; xor eax, eax; mov rdi, rsp; mov dword ptr [rsp], 0x2; call r8; 
0x0000000014d62a: mov [rsp+0x38], rdx; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x000000001495ce: mov [rsp+0x438], eax; xor eax, eax; mov rax, [rdi+0x8]; lea rsi, [rsp+0x10]; call qword ptr [rax+0x10]; 
0x000000001495cd: mov [rsp+0x438], rax; xor eax, eax; mov rax, [rdi+0x8]; lea rsi, [rsp+0x10]; call qword ptr [rax+0x10]; 
0x00000000150f68: mov [rsp+0x4], eax; mov rax, [rdi+0x8]; call qword ptr [rax+0x48]; 
0x00000000150b31: mov [rsp+0x4], eax; mov rax, [rdi+0x8]; sar rdx, 0x20; mov [rsp], edx; call qword ptr [rax+0x48]; 
0x00000000150d11: mov [rsp+0x4], eax; mov rax, [rdi+0x8]; shr rdx, 0x20; mov [rsp], edx; call qword ptr [rax+0x48]; 
0x00000000107049: mov [rsp+0x4], edx; pop rbx; pop rbp; pop r12; ret; 
0x00000000159298: mov [rsp+0x50], eax; test rax, rax; je short 0x00000000001592b3; mov rax, [rip+0x89b90]; call qword ptr [rax+0x288]; 
0x000000000cc34b: mov [rsp+0x50], esp; call rbx; 
0x000000000cc463: mov [rsp+0x50], esp; mov rsi, r15; mov rdi, rbp; call rbx; 
0x000000000cc34a: mov [rsp+0x50], r12; call rbx; 
0x000000000cc461: mov [rsp+0x50], r12; mov rsi, r15; mov rdi, rbp; call rbx; 
0x000000000cc462: mov [rsp+0x50], r12; mov rsi, r15; mov rdi, rbp; call rbx; 
0x00000000159297: mov [rsp+0x50], rax; test rax, rax; je short 0x00000000001592b3; mov rax, [rip+0x89b90]; call qword ptr [rax+0x288]; 
0x0000000010e7ae: mov [rsp+0x58], eax; xor eax, eax; lea rdx, [rsp+0x30]; mov eax, 0x10; syscall; 
0x000000000cc344: mov [rsp+0x58], eax; xor eax, eax; mov [rsp+0x50], r12; call rbx; 
0x0000000010e7ad: mov [rsp+0x58], rax; xor eax, eax; lea rdx, [rsp+0x30]; mov eax, 0x10; syscall; 
0x000000000cc343: mov [rsp+0x58], rax; xor eax, eax; mov [rsp+0x50], r12; call rbx; 
0x000000000433c6: mov [rsp+0x68], eax; mov rsi, [rsp+0x8]; mov rdx, rbp; mov rdi, r12; call rbx; 
0x00000000159173: mov [rsp+0x68], eax; xor eax, eax; call qword ptr [r12+0xf88]; 
0x000000000433c5: mov [rsp+0x68], r8; mov rsi, [rsp+0x8]; mov rdx, rbp; mov rdi, r12; call rbx; 
0x00000000159172: mov [rsp+0x68], rax; xor eax, eax; call qword ptr [r12+0xf88]; 
0x0000000014864e: mov [rsp+0x70], edx; call qword ptr [rax+0x30]; 
0x000000000ccb13: mov [rsp+0x88], edi; call r12; 
0x000000000ccb12: mov [rsp+0x88], r15; call r12; 
0x00000000119aac: mov [rsp+0x8], eax; lea rax, [rsp+0x20]; mov [rsp+0x10], rax; mov eax, 0x9d; syscall; 
0x000000001592cd: mov [rsp+0x8], eax; lea rdi, [r12+0x9b0]; call qword ptr [r12+0xf90]; 
0x00000000143e1f: mov [rsp+0x8], eax; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x000000000dfc8d: mov [rsp+0x8], eax; mov rax, [rip+0x106b28]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000dfbed: mov [rsp+0x8], eax; mov rax, [rip+0x106bc8]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000005025e: mov [rsp+0x8], eax; xor eax, eax; mov eax, 0x3e; syscall; 
0x00000000094d7a: mov [rsp+0x8], eax; xor edi, edi; call qword ptr [rax]; 
0x00000000094ca6: mov [rsp+0x8], ecx; call rax; 
0x0000000013fab3: mov [rsp+0x8], ecx; call rbp; 
0x00000000159376: mov [rsp+0x8], ecx; lea rdi, [r13+0x988]; call qword ptr [r13+0xf88]; 
0x00000000085b9f: mov [rsp+0x8], ecx; mov rdi, r15; call rax; 
0x0000000014fba9: mov [rsp+0x8], edx; call qword ptr [rax+0x8]; 
0x00000000094d79: mov [rsp+0x8], r8; xor edi, edi; call qword ptr [rax]; 
0x00000000119aab: mov [rsp+0x8], rax; lea rax, [rsp+0x20]; mov [rsp+0x10], rax; mov eax, 0x9d; syscall; 
0x00000000143e1e: mov [rsp+0x8], rax; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x000000000dfc8c: mov [rsp+0x8], rax; mov rax, [rip+0x106b28]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000dfbec: mov [rsp+0x8], rax; mov rax, [rip+0x106bc8]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000005025d: mov [rsp+0x8], rax; xor eax, eax; mov eax, 0x3e; syscall; 
0x00000000094ca5: mov [rsp+0x8], rcx; call rax; 
0x0000000013fab2: mov [rsp+0x8], rcx; call rbp; 
0x00000000159375: mov [rsp+0x8], rcx; lea rdi, [r13+0x988]; call qword ptr [r13+0xf88]; 
0x00000000085b9d: mov [rsp+0x8], rcx; mov rdi, r15; call rax; 
0x00000000085b9e: mov [rsp+0x8], rcx; mov rdi, r15; call rax; 
0x0000000014fba8: mov [rsp+0x8], rdx; call qword ptr [rax+0x8]; 
0x0000000014dbe3: mov [rsp+0xc8], edx; mov dword ptr [rsp+0xd0], 0x1; movups [rsp+0xb8], xmm5; call rax; 
0x0000000014db47: mov [rsp+0xc8], edx; mov dword ptr [rsp+0xd0], 0x2; movups [rsp+0xb8], xmm3; movups [rsp+0xd8], xmm0; call rax; 
0x0000000014dbe2: mov [rsp+0xc8], rdx; mov dword ptr [rsp+0xd0], 0x1; movups [rsp+0xb8], xmm5; call rax; 
0x0000000014db46: mov [rsp+0xc8], rdx; mov dword ptr [rsp+0xd0], 0x2; movups [rsp+0xb8], xmm3; movups [rsp+0xd8], xmm0; call rax; 
0x000000000cc8f2: mov [rsp+0xd0], eax; lea rdi, [rsp+0xd0]; mov rsi, r13; call r12; 
0x000000000cc8f1: mov [rsp+0xd0], rax; lea rdi, [rsp+0xd0]; mov rsi, r13; call r12; 
0x0000000010747c: mov [rsp+0xe8], eax; mov eax, 0xe; syscall; 
0x0000000011e86a: mov [rsp+rcx+0x45640100], edx; mov [rax], ecx; add rsp, 0x8; ret; 
0x000000000405a5: mov [rsp-0x10], ax; fld st, tbyte ptr [rsp-0x18]; fstp tbyte ptr [rdi], st; fld st, tbyte ptr [rsp+0x8]; ret; 
0x00000000040668: mov [rsp-0x10], ax; fld st, tbyte ptr [rsp-0x18]; ret; 
0x000000000404e5: mov [rsp-0x10], ax; fstp tbyte ptr [rdi], st; fld st, tbyte ptr [rsp-0x18]; ret; 
0x0000000004052e: mov [rsp-0x10], ax; mov qword ptr [rsp-0x18], 0x0; fld st, tbyte ptr [rsp-0x18]; ret; 
0x000000000405a6: mov [rsp-0x10], eax; fld st, tbyte ptr [rsp-0x18]; fstp tbyte ptr [rdi], st; fld st, tbyte ptr [rsp+0x8]; ret; 
0x00000000040669: mov [rsp-0x10], eax; fld st, tbyte ptr [rsp-0x18]; ret; 
0x000000000404e6: mov [rsp-0x10], eax; fstp tbyte ptr [rdi], st; fld st, tbyte ptr [rsp-0x18]; ret; 
0x0000000004052f: mov [rsp-0x10], eax; mov qword ptr [rsp-0x18], 0x0; fld st, tbyte ptr [rsp-0x18]; ret; 
0x0000000005918b: mov [rsp-0x10], eax; movdqa xmm0, [rsp-0x18]; ret; 
0x0000000005918a: mov [rsp-0x10], rax; movdqa xmm0, [rsp-0x18]; ret; 
0x00000000191521: mov [rsp-0x80], ebp; mov rax, [rax+rbx*8]; test rax, rax; je short 0x0000000000191530; call rax; 
0x0000000014b765: mov [rsp], eax; call qword ptr [rdx+0x20]; 
0x0000000008bcac: mov [rsp], eax; mov edx, 0x1; mov rdi, rbp; call qword ptr [rax+0x80]; 
0x00000000150841: mov [rsp], eax; mov rax, [rbp+0x8]; call qword ptr [rax+0x8]; 
0x00000000143d67: mov [rsp], eax; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x0000000008bce9: mov [rsp], eax; mov rdx, r8; mov rsi, r12; mov rdi, rbp; call qword ptr [rax+0x78]; 
0x0000000008aff0: mov [rsp], ecx; mov rdi, rbp; call rax; 
0x00000000150b3d: mov [rsp], edx; call qword ptr [rax+0x48]; 
0x0000000009ed12: mov [rsp], esi; pop r12; pop r13; pop r14; ret; 
0x0000000008bcab: mov [rsp], r8; mov edx, 0x1; mov rdi, rbp; call qword ptr [rax+0x80]; 
0x0000000008bce8: mov [rsp], r8; mov rdx, r8; mov rsi, r12; mov rdi, rbp; call qword ptr [rax+0x78]; 
0x0000000014b764: mov [rsp], rax; call qword ptr [rdx+0x20]; 
0x00000000150840: mov [rsp], rax; mov rax, [rbp+0x8]; call qword ptr [rax+0x8]; 
0x00000000143d66: mov [rsp], rax; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x0000000008afee: mov [rsp], rcx; mov rdi, rbp; call rax; 
0x0000000008afef: mov [rsp], rcx; mov rdi, rbp; call rax; 
0x00000000146fe0: mov ah, 0x0; add [rax], al; mov eax, 0x1; ret; 
0x00000000119f55: mov ah, 0x0; add [rax], al; syscall; 
0x000000001541c8: mov ah, 0x22; in eax, dx; dec dword ptr [rax-0x77]; ret; 
0x000000000318d9: mov ah, 0x3c; xchg esp, eax; add [rax], al; add [rax+0x39], cl; ret far; 
0x000000000b5078: mov ah, 0x40; str [rbx+0x63]; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000318af: mov ah, 0x4; xchg esp, eax; add [rax], al; add [rax+0x39], cl; ret far; 
0x000000000f59fc: mov ah, 0x55; or eax, [rax]; movsxd rax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x000000000b3998: mov ah, 0x55; str [rbx+0x63]; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000132f98: mov ah, 0x67; add al, [rax]; mov rdi, r12; call rbp; 
0x000000001903e8: mov ah, 0x8; add [rax], al; mov rax, [rsp]; add rsp, 0x38; ret; 
0x0000000012cd81: mov ah, 0xb; add [rcx], al; mov fs:[r8], r9d; add rsp, 0x18; ret; 
0x0000000013d63f: mov ah, 0xef; jmp qword ptr [rsi+0xf]; 
0x0000000010cccf: mov ah, 0xf1; jmp qword ptr [rsi+0x66]; 
0x000000000faeb5: mov ah, 0xf2; call far fword ptr [rax+0x5a]; 
0x000000001136db: mov ah, 0xfc; jmp qword ptr [rsi-0x70]; 
0x0000000014e30e: mov ah, 0xfd; jmp qword ptr [rsi+0x66]; 
0x0000000013e31c: mov ah, 0xfe; call qword ptr [rax-0x1a76b7ab]; 
0x00000000096f5e: mov ah, 0xff; jmp qword ptr [rsi+0x66]; 
0x00000000177a30: mov ah, [rsi+0xf]; je short 0x00000000001779f6; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000178800: mov ah, [rsi+0xf]; je short 0x00000000001787c6; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000179840: mov ah, [rsi+0xf]; je short 0x0000000000179806; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000017b410: mov ah, [rsi+0xf]; je short 0x000000000017b3d6; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000107ac6: mov al, 0x0; add [rax], al; call qword ptr [rax+0x88]; 
0x000000001077aa: mov al, 0x0; add [rax], al; mov rsi, [rbx+0xa0]; mov rdi, [rbx+0x80]; call qword ptr [rax+0x88]; 
0x00000000119ce5: mov al, 0x0; add [rax], al; syscall; 
0x0000000007d7da: mov al, 0x12; add [rax+0x63], cl; adc al, 0x91; add rdx, rcx; notrack jmp rdx; 
0x0000000017662c: mov al, 0x1; add [rax], al; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x00000000143798: mov al, 0x23; add [rax], al; mov dword ptr [rbx+0x23b0], 0x0; mov rdi, r12; call qword ptr [rax+0x28]; 
0x00000000143751: mov al, 0x23; add [rax], al; pop rbp; jmp rcx; 
0x000000000596bd: mov al, 0x3; add [rax], al; mov edi, 0x3004; mov eax, 0x9e; syscall; 
0x000000000b3dbc: mov al, 0x4; add [rax], al; ret; 
0x0000000011b09c: mov al, 0x59; idiv edi; mov rax, [rsp+0x8]; add rsp, 0x38; ret; 
0x000000000b39bc: mov al, 0x8; add [rax], al; ret; 
0x000000001592d5: mov al, 0x9; add [rax], al; call qword ptr [r12+0xf90]; 
0x0000000009c2cc: mov al, 0xb8; add [rax], eax; cmovne rax, rdx; ret; 
0x00000000181d7f: mov al, 0xc5; std; xlat [rbx]; ret; 
0x000000000e4259: mov al, 0xe8; shl dword ptr [rax], 0xf4; dec dword ptr [rax-0x77]; ret; 
0x000000000e5f85: mov al, 0xe8; xchg ebp, eax; add esi, esp; dec dword ptr [rax-0x77]; ret; 
0x0000000012e6d3: mov al, 0xff; jmp qword ptr [rsi+0x2e]; 
0x0000000003effc: mov al, [0x146348d28900162f]; xchg esi, eax; add rdx, rsi; notrack jmp rdx; 
0x00000000083df7: mov al, [0x30788348000000]; je short 0x0000000000083e08; ret; 
0x000000000f7cbb: mov al, [0x366e0d8d48ffffe3]; or eax, [rax]; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x00000000108db4: mov al, [0x48028964d8f7000d]; mov eax, 0xffffffff; ret; 
0x000000000596b2: mov al, [0x4808668d48000000]; lea esi, [rdi+0x3b0]; mov edi, 0x3004; mov eax, 0x9e; syscall; 
0x0000000012e2c2: mov al, [0x480889456401000b]; add esp, 0x8; ret; 
0x000000000896a1: mov al, [0x4820428b48000000]; sub eax, [rdx+0x18]; sar rax, 0x2; ret; 
0x00000000089571: mov al, [0x4838428b48000000]; sub eax, [rdx+0x30]; sar rax, 0x2; ret; 
0x00000000086255: mov al, [0x485def8948000000]; mov eax, [rax+0xe0]; mov rax, [rax+0x20]; jmp rax; 
0x000000000845d9: mov al, [0x48c0ef0f66000000]; mov dword ptr [rax+0x50], 0x0; movups [rax+0x40], xmm0; pop rbx; ret; 
0x0000000014ba62: mov al, [0x4c00000002beffff]; lea ecx, [rsp+0x14]; call qword ptr [rax]; 
0x000000000dd383: mov al, [0x4c19894164010010]; mov eax, eax; pop rbx; ret; 
0x0000000014d038: mov al, [0x5b000000020009be]; ret; 
0x0000000009c436: mov al, [0x5c415dc0315afff8]; ret; 
0x0000000014c530: mov al, [0x5d5bc08944000000]; pop r12; pop r13; pop r14; ret; 
0x0000000010f121: mov al, [0x5d5be08944000000]; pop r12; ret; 
0x0000000009b84d: mov al, [0x76d8058b48fffffe]; adc al, 0x0; call qword ptr [rax]; 
0x0000000018538a: mov al, [0x77f8c5237f7ec1c4]; ret; 
0x0000000019151c: mov al, [0x80246c8949000513]; mov rax, [rax+rbx*8]; test rax, rax; je short 0x0000000000191530; call rax; 
0x000000001077b1: mov al, [0x80bb8b48000000]; add [rax], al; call qword ptr [rax+0x88]; 
0x0000000005e57c: mov al, [0x8304758b41000000]; ret; 
0x00000000069783: mov al, [0x830ffb394cfffff9]; ret; 
0x000000000772f3: mov al, [0x852c8d4c000000]; add [rax], al; add [rax+0x29], cl; ret; 
0x0000000005f6ed: mov al, [0x8548378b41000000]; ror byte ptr [rdi], 0x84; ret; 
0x00000000074113: mov al, [0x85c6e43145fffff6]; idiv edi; jmp qword ptr [rax]; 
0x00000000038cd8: mov al, [0x8b4864d26348001a]; add [rax-0x75], cl; add [rax-0x75], cl; mov rax, [rax+rdx*4]; ret; 
0x00000000038d47: mov al, [0x8b4864ff6348001a]; add [rax-0x75], cl; add [rax-0x75], cl; mov rax, [rax+rdi*4+0x200]; ret; 
0x0000000008443b: mov al, [0x8d148d48000000]; add [rax], al; add [rax+0x29], cl; ret far; 
0x000000000e4d04: mov al, [0x8d493e8b41000004]; outsb dx, [rsi]; add al, 0x83; call far fword ptr [rbp+0xf]; 
0x0000000008aabc: mov al, [0xb74c08548ffffff]; pop rbx; ret; 
0x000000000fc44a: mov al, [0xc2840ff0394cfff2]; add [rax], eax; add [rbx+rcx*4+0x63], cl; and [rax-0x7d], cl; ret; 
0x0000000006eea0: mov al, [0xd4e9c58941fffffa]; ret far; 
0x0000000007f166: mov al, [0xe08a8948000000]; add [rax], al; ret; 
0x0000000013a928: mov al, [0xe9c11c8948000000]; ret; 
0x0000000006ef0b: mov al, [0xfffad085c7fffffa]; jmp qword ptr [rbp]; 
0x000000000fca44: mov al, [0xfffad1e900000001]; call qword ptr [rax-0x5e1f00d]; 
0x00000000114b92: mov al, [rax]; add [rax], al; mov rdi, [r13]; call rbx; 
0x000000001085c5: mov al, [rax]; add [rax], al; syscall; 
0x00000000080f46: mov al, [rbp+0x31]; sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; syscall; 
0x00000000176452: mov al, [rbx]; add [rax], al; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x00000000174586: mov al, [rcx+0x2]; mov [rdx+0x2], al; lea rax, [rdx+0x2]; ret; 
0x000000000afceb: mov al, [rcx+0x2]; mov [rdx+0x2], al; mov rax, rdi; ret; 
0x000000001745b4: mov al, [rcx+0x4]; mov [rdx+0x4], al; lea rax, [rdx+0x4]; ret; 
0x000000000afd19: mov al, [rcx+0x4]; mov [rdx+0x4], al; mov rax, rdi; ret; 
0x000000000afd9d: mov al, [rcx+0x8]; mov [rdx+0x8], al; mov rax, rdi; ret; 
0x00000000083c02: mov al, [rcx]; add [rax], al; mov esi, r12d; mov rdi, r14; call qword ptr [rax+0x18]; 
0x00000000094c06: mov al, [rcx]; add [rax], al; mov rax, [rip+0x14e17f]; call qword ptr [rax]; 
0x00000000174560: mov al, [rcx]; mov [rdx], al; lea rax, [rdx]; ret; 
0x000000000afcc5: mov al, [rcx]; mov [rdx], al; mov rax, rdi; ret; 
0x0000000017e8e0: mov al, [rdi+rdx-0x1]; mov cl, [rsi+rdx-0x1]; sub eax, ecx; ret; 
0x000000001679c2: mov al, [rsi]; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000017ec40: mov al, ch; stc; je short 0x000000000017ec06; lea r10, [r10+r9]; notrack jmp r10; 
0x000000001802e0: mov al, ch; stc; je short 0x00000000001802a6; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000012c8e6: mov ax, 0xb; syscall; 
0x000000001745c4: mov ax, [rcx+0x4]; mov [rdx+0x4], ax; lea rax, [rdx+0x5]; ret; 
0x000000000afd39: mov ax, [rcx+0x4]; mov [rdx+0x4], ax; mov rax, rdi; ret; 
0x000000000afdbd: mov ax, [rcx+0x8]; mov [rdx+0x8], ax; mov rax, rdi; ret; 
0x00000000174570: mov ax, [rcx]; mov [rdx], ax; lea rax, [rdx+0x1]; ret; 
0x000000000afcd5: mov ax, [rcx]; mov [rdx], ax; mov rax, rdi; ret; 
0x000000000dbbf3: mov bh, 0x10; add [rcx], al; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x00000000157302: mov bh, 0x15; clc; sbb eax, 0x488d0009; jmp qword ptr [rsi-0x7d]; 
0x00000000184691: mov bh, 0x16; mov [rdi], dx; lea rax, [rdi+0x1]; vzeroupper; ret; 
0x00000000184d71: mov bh, 0x16; mov [rdi], dx; lea rax, [rdi+0x2]; vzeroupper; ret; 
0x00000000183491: mov bh, 0x16; mov [rdi], dx; mov byte ptr [rdi+0x2], 0x0; vzeroupper; ret; 
0x00000000167911: mov bh, 0x16; mov [rdi], dx; ret; 
0x00000000182c01: mov bh, 0x16; mov [rdi], dx; vzeroupper; ret; 
0x000000000b7f26: mov bh, 0x36; mov [rdi+rdx-0x2], cx; mov [rdi], si; ret; 
0x00000000163bd5: mov bh, 0x3d; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000388ba: mov bh, 0x44; mov eax, [rdx+rax]; mov eax, r8d; ret; 
0x000000000d67d9: mov bh, 0x48; add edx, edi; notrack jmp rdx; 
0x0000000007d789: mov bh, 0x48; add esi, edi; notrack jmp rsi; 
0x0000000018a6b8: mov bh, 0x48; lea eax, [rdi+0x7]; ret; 
0x00000000076117: mov bh, 0x48; lea edi, [rip-0x1337]; add rsi, rdi; jmp rsi; 
0x0000000007567d: mov bh, 0x48; lea edi, [rip-0x89d]; add rsi, rdi; jmp rsi; 
0x000000001423b7: mov bh, 0x48; mov eax, [rbp+0x8]; mov rdi, rbp; mov qword ptr [rsp], 0x0; call qword ptr [rax+0x20]; 
0x00000000038b43: mov bh, 0x4; js short 0x0000000000038aca; loopne 0x0000000000038b51; ret; 
0x00000000038b83: mov bh, 0x4; js short 0x0000000000038b0a; loopne 0x0000000000038b8b; ret; 
0x00000000038c23: mov bh, 0x4; js short 0x0000000000038baa; loopne 0x0000000000038c2d; ret; 
0x00000000038ba3: mov bh, 0x4; js short 0x0000000000038bcc; add [rax], cl; add [rax], al; ret; 
0x00000000038bc3: mov bh, 0x4; js short 0x0000000000038bec; add [rdx], al; add [rax], al; ret; 
0x00000000038c43: mov bh, 0x4; js short 0x0000000000038c6c; add [rax], ah; add [rax], al; ret; 
0x00000000038d03: mov bh, 0x4; js short 0x0000000000038c8a; loopne 0x0000000000038d0a; ret; 
0x00000000038c63: mov bh, 0x4; js short 0x0000000000038c8c; add [rcx], al; add [rax], al; ret; 
0x00000000038c83: mov bh, 0x4; js short 0x0000000000038cac; add [rax], dl; add [rax], al; ret; 
0x00000000038d9c: mov bh, 0x4; js short 0x0000000000038d23; loopne 0x0000000000038da3; ret; 
0x00000000038dbc: mov bh, 0x4; js short 0x0000000000038d43; loopne 0x0000000000038dca; ret; 
0x00000000038dfc: mov bh, 0x4; js short 0x0000000000038d83; loopne 0x0000000000038e04; ret; 
0x00000000038e9c: mov bh, 0x4; js short 0x0000000000038e23; loopne 0x0000000000038ea6; ret; 
0x00000000038e1c: mov bh, 0x4; js short 0x0000000000038e45; add [rax], cl; add [rax], al; ret; 
0x00000000038e3c: mov bh, 0x4; js short 0x0000000000038e65; add [rdx], al; add [rax], al; ret; 
0x00000000038ebc: mov bh, 0x4; js short 0x0000000000038ee5; add [rax], ah; add [rax], al; ret; 
0x00000000038edc: mov bh, 0x4; js short 0x0000000000038f05; add [rcx], al; add [rax], al; ret; 
0x00000000038efc: mov bh, 0x4; js short 0x0000000000038f25; add [rax], dl; add [rax], al; ret; 
0x0000000011cac6: mov bh, 0x4; js short 0x000000000011ca4d; loopne 0x000000000011cad4; ret; 
0x0000000011cbe6: mov bh, 0x4; js short 0x000000000011cb6d; loopne 0x000000000011cbed; ret; 
0x0000000011cc76: mov bh, 0x4; js short 0x000000000011cbfd; loopne 0x000000000011cc7e; ret; 
0x0000000011cda6: mov bh, 0x4; js short 0x000000000011cdcf; add [rdx], al; add [rax], al; ret; 
0x0000000011cf56: mov bh, 0x4; js short 0x000000000011cedd; loopne 0x000000000011cf60; ret; 
0x0000000011cfe6: mov bh, 0x4; js short 0x000000000011d00f; add [rax], ah; add [rax], al; ret; 
0x0000000011d06e: mov bh, 0x4; js short 0x000000000011d097; add [rcx], al; add [rax], al; ret; 
0x0000000011d106: mov bh, 0x4; js short 0x000000000011d12f; add [rax], dl; add [rax], al; ret; 
0x0000000011d447: mov bh, 0x4; js short 0x000000000011d3ce; loopne 0x000000000011d455; ret; 
0x0000000011d547: mov bh, 0x4; js short 0x000000000011d4ce; loopne 0x000000000011d54e; ret; 
0x0000000011d5c7: mov bh, 0x4; js short 0x000000000011d54e; loopne 0x000000000011d5cf; ret; 
0x0000000011d6d7: mov bh, 0x4; js short 0x000000000011d700; add [rdx], al; add [rax], al; ret; 
0x0000000011d857: mov bh, 0x4; js short 0x000000000011d7de; loopne 0x000000000011d861; ret; 
0x0000000011d8d7: mov bh, 0x4; js short 0x000000000011d900; add [rax], ah; add [rax], al; ret; 
0x0000000011d94f: mov bh, 0x4; js short 0x000000000011d978; add [rcx], al; add [rax], al; ret; 
0x0000000011d9d7: mov bh, 0x4; js short 0x000000000011da00; add [rax], dl; add [rax], al; ret; 
0x00000000126b87: mov bh, 0x4; push rax; shr ax, 0xe; and eax, 0x1; ret; 
0x00000000138831: mov bh, 0x4e; adc cl, [rbp-0x2ff6f]; jmp qword ptr [rsi-0x7d]; 
0x000000000a4d12: mov bh, 0x54; and al, 0xc; mov [rdi+0x4], dx; ret; 
0x000000000a4dd7: mov bh, 0x54; and al, 0xec; mov [rax+0x4], dx; ret; 
0x000000000a4eb4: mov bh, 0x54; and al, 0xec; mov [rdi+0x4], dx; ret; 
0x00000000150ff1: mov bh, 0x6; lea rsi, [rsp+0x4]; mov [rsp+0x4], eax; mov rax, [rdi+0x8]; call qword ptr [rax+0x48]; 
0x0000000014ffc1: mov bh, 0x6; mov rsi, rsp; mov [rsp], rax; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x00000000160a15: mov bh, 0x6d; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001072a5: mov bh, 0x7; mov [rsi], ax; xor eax, eax; ret; 
0x0000000008622f: mov bh, 0x90; add [rax], al; add cl, ch; ret far; 
0x0000000009c435: mov bh, 0xa0; clc; call far fword ptr [rdx+0x31]; 
0x000000000596bc: mov bh, 0xb0; add eax, [rax]; add [rdi+0x3004], bh; mov eax, 0x9e; syscall; 
0x00000000079fb1: mov bh, 0xb5; pop rax; idiv edi; jmp qword ptr [rsi-0x77]; 
0x0000000013c042: mov bh, 0xc0; ret; 
0x0000000009b940: mov bh, 0xc6; clc; call far fword ptr [rbx+0x5d]; 
0x00000000182c11: mov bh, 0xe; mov [rdi], cx; mov byte ptr [rdi+0x2], 0x0; vzeroupper; ret; 
0x00000000097ec5: mov bh, 0xef; adc al, 0x0; syscall; 
0x0000000013d33e: mov bh, 0xef; jmp qword ptr [rsi+0x66]; 
0x0000000012981c: mov bh, 0xf6; mov eax, edi; or eax, esi; bswap eax; ret; 
0x0000000014aa93: mov bh, 0xfe; jmp qword ptr [rsi+0x2e]; 
0x00000000066a14: mov bh, 0xff; jmp qword ptr [rsi+0xf]; 
0x0000000011ae90: mov bh, 0xff; lea rax, [rip+0x91667]; mov eax, [rax+rdi*4]; ret; 
0x00000000130eac: mov bh, bh; call qword ptr [rax-0x5e1f00d]; 
0x00000000099adf: mov bh, bh; jmp qword ptr [rsi+0xf]; 
0x00000000150c61: mov bh, ch; jmp qword ptr [rsi+0x66]; 
0x00000000119fe8: mov bl, 0x0; add [rax], al; syscall; 
0x0000000018bfae: mov bl, 0x0; add [rax], al; xor eax, eax; ret; 
0x000000000db2db: mov bl, 0x10; add [rbp-0x47d18a40], al; je short 0x00000000000db2e5; add [rax], al; syscall; 
0x0000000003a626: mov bl, 0x1a; add [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x00000000076280: mov bl, 0x48; lea ebx, [rip-0x14a0]; add rsi, rbx; mov rbx, rdi; jmp rsi; 
0x000000000755aa: mov bl, 0x48; lea ebx, [rip-0x7ca]; add rsi, rbx; mov rbx, rdi; jmp rsi; 
0x00000000075763: mov bl, 0x48; lea ebx, [rip-0x983]; add rsi, rbx; mov rbx, rdi; jmp rsi; 
0x000000000757f3: mov bl, 0x48; lea ebx, [rip-0xa13]; add rsi, rbx; mov rbx, rdi; jmp rsi; 
0x0000000007598b: mov bl, 0x48; lea ebx, [rip-0xbab]; add rsi, rbx; mov rbx, rdi; jmp rsi; 
0x00000000075a89: mov bl, 0x48; lea ebx, [rip-0xca9]; add rsi, rbx; mov rbx, [rsp+0x80]; jmp rsi; 
0x00000000075ae3: mov bl, 0x48; lea ebx, [rip-0xd03]; add rsi, rbx; mov rbx, rdi; jmp rsi; 
0x00000000079e8a: mov bl, 0x4c; mov eax, [rip+0x16f456]; mov [rbp-0x8c0], rax; mov [rbp-0x8b0], rsi; call qword ptr [r8+rcx*8-0x40]; 
0x0000000007423b: mov bl, 0x4c; mov eax, [rip+0x1750a5]; mov [rbp-0x8b0], rax; mov [rbp-0x8a0], rsi; call qword ptr [r8+rcx*8-0x40]; 
0x0000000014a851: mov bl, 0x88; add [rax], al; add [rcx+rcx*4-0x1], cl; call qword ptr [rax+0x28]; 
0x000000001077b0: mov bl, 0xa0; add [rax], al; add [rax-0x75], cl; mov ebx, 0x80; call qword ptr [rax+0x88]; 
0x0000000012ce63: mov bl, 0xb; add [rcx], al; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x0000000014d129: mov bl, 0xbd; or [rax], eax; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000010affa: mov bl, 0xf1; jmp qword ptr [rsp+rax*2-0x77]; 
0x00000000128ff3: mov bl, 0xf2; out dx, eax; jmp qword ptr [rsi+0xf]; 
0x000000000bd693: mov bl, 0xf7; jmp qword ptr [rsi+0x2e]; 
0x0000000005b64c: mov bl, 0xfc; call qword ptr [rax+0x4003d66]; 
0x0000000009721c: mov bl, 0xff; call qword ptr [rax-0x482418]; 
0x0000000006eed5: mov bl, 0xff; jmp qword ptr [rsi+0xf]; 
0x000000000a4a65: mov byte ptr [r10], 0x0; mov [r11], rdx; mov rax, r12; pop r12; ret; 
0x0000000011063b: mov byte ptr [r12], 0x0; mov rax, r12; pop r12; ret; 
0x00000000034afc: mov byte ptr [r12], 0x0; pop rbx; pop rbp; pop r12; ret; 
0x0000000013744c: mov byte ptr [r8+0x2], 0x0; ret; 
0x00000000050b33: mov byte ptr [r8+rax], 0x0; mov rax, r8; ret; 
0x00000000139f12: mov byte ptr [r8], 0x0; mov rax, r10; ret; 
0x00000000139f26: mov byte ptr [r8], 0x0; ret; 
0x0000000013744d: mov byte ptr [rax+0x2], 0x0; ret; 
0x0000000018bbc7: mov byte ptr [rax+0x75], 0xc5; movzx eax, byte ptr [rdi-0x9]; movzx edx, byte ptr [rsi-0x9]; sub eax, edx; ret; 
0x00000000050b34: mov byte ptr [rax+rax], 0x0; mov rax, r8; ret; 
0x000000000d7791: mov byte ptr [rax-0x18], 0x78; in al, dx; hlt; jmp far fword ptr [rcx]; 
0x0000000002be27: mov byte ptr [rax-0x7c], 0xf6; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x00000000139f13: mov byte ptr [rax], 0x0; mov rax, r10; ret; 
0x00000000116cdf: mov byte ptr [rax], 0x0; mov rax, rbx; pop rbx; ret; 
0x000000000a4d88: mov byte ptr [rax], 0x0; ret; 
0x00000000121c22: mov byte ptr [rax], 0x20; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000121bda: mov byte ptr [rax], 0xa; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000001072bb: mov byte ptr [rax], 0xff; jne short 0x00000000001072c5; mov [rdi], si; xor eax, eax; ret; 
0x0000000011b848: mov byte ptr [rbp-0x7c9], 0x73; syscall; 
0x0000000011b841: mov byte ptr [rbp-0x7ca], 0x0; mov byte ptr [rbp-0x7c9], 0x73; syscall; 
0x000000001177c1: mov byte ptr [rbx+0xe8], 0x1; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000016c75e: mov byte ptr [rbx], 0x0; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x000000000b4f66: mov byte ptr [rcx+0xf], 0x0; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000005e9cc: mov byte ptr [rcx+0xf], 0x9c; ret; 
0x000000000d46e3: mov byte ptr [rcx-0x45], 0x0; add [rax], al; add [rbp+0xf], al; fiadd st, word ptr [r13+0x1]; ret; 
0x000000000f9aa3: mov byte ptr [rcx-0x7d], 0xf9; add al, [rcx+0xf]; xchg edi, eax; ret; 
0x000000000adc06: mov byte ptr [rcx], 0x0; add [rax+0xf], cl; mov ebp, 0xf80148c0; ret; 
0x0000000012f5fb: mov byte ptr [rcx], 0x0; pop r12; pop r13; ret; 
0x0000000009c170: mov byte ptr [rcx], 0x74; ret far; 
0x00000000183485: mov byte ptr [rdi+0x1], 0x0; vzeroupper; ret; 
0x000000001846a6: mov byte ptr [rdi+0x2], 0x0; lea rax, [rdi+0x2]; vzeroupper; ret; 
0x00000000182c16: mov byte ptr [rdi+0x2], 0x0; vzeroupper; ret; 
0x00000000183556: mov byte ptr [rdi+0x41], 0x0; vzeroupper; ret; 
0x000000001835ab: mov byte ptr [rdi+0x80], 0x0; vzeroupper; ret; 
0x0000000005974a: mov byte ptr [rdi+0x8], 0x0; mov [rdi], rax; mov rax, rdi; ret; 
0x000000000e7df0: mov byte ptr [rdi+0x8], 0x15; mov eax, 0x1; ret; 
0x000000000e7da5: mov byte ptr [rdi+0x8], 0x16; mov eax, 0x1; ret; 
0x000000000e7d77: mov byte ptr [rdi+0x8], 0x19; mov eax, 0x1; ret; 
0x000000000e7e0a: mov byte ptr [rdi+0x8], 0x1; mov [rdi], al; mov eax, 0x1; ret; 
0x000000000e7ddb: mov byte ptr [rdi+0x8], 0x1; mov eax, 0x1; mov byte ptr [rdi], 0x5b; ret; 
0x000000000e7d95: mov byte ptr [rdi+0x8], 0x1; mov eax, 0x1; ret; 
0x000000000e7e20: mov byte ptr [rdi+0x8], 0x1a; mov eax, 0x2; ret; 
0x000000000e7e30: mov byte ptr [rdi+0x8], 0x1c; mov eax, 0x2; ret; 
0x000000000e7e45: mov byte ptr [rdi+0x8], 0x1e; mov eax, 0x2; ret; 
0x000000000e7db0: mov byte ptr [rdi+0x8], 0x2; xor eax, eax; ret; 
0x000000001834b2: mov byte ptr [rdi+r8], 0x0; vzeroupper; ret; 
0x000000001834b3: mov byte ptr [rdi+rax], 0x0; vzeroupper; ret; 
0x0000000013718e: mov byte ptr [rdi+rdx], 0x0; ret; 
0x000000000a4e40: mov byte ptr [rdi], 0x0; lea rax, [rdi+rax-0x1]; ret; 
0x00000000184611: mov byte ptr [rdi], 0x0; lea rax, [rdi]; vzeroupper; ret; 
0x000000000a49f7: mov byte ptr [rdi], 0x0; mov [r8], rax; mov rax, r9; ret; 
0x00000000111de3: mov byte ptr [rdi], 0x0; mov byte ptr [rip+0xd5983], 0x23; mov rax, r8; mov byte ptr [rsi-0x1], 0x0; ret; 
0x00000000182b81: mov byte ptr [rdi], 0x0; vzeroupper; ret; 
0x000000000e7de5: mov byte ptr [rdi], 0x5b; ret; 
0x00000000138f86: mov byte ptr [rdi], 0xff; jmp qword ptr [rsi+0xf]; 
0x000000000a4938: mov byte ptr [rdx-0x1], 0x0; mov [rdi], rdx; ret; 
0x000000000a4a66: mov byte ptr [rdx], 0x0; mov [r11], rdx; mov rax, r12; pop r12; ret; 
0x00000000111de6: mov byte ptr [rip+0xd5983], 0x23; mov rax, r8; mov byte ptr [rsi-0x1], 0x0; ret; 
0x00000000111d6e: mov byte ptr [rsi-0x1], 0x0; mov rax, r8; ret; 
0x00000000111df0: mov byte ptr [rsi-0x1], 0x0; ret; 
0x00000000080466: mov byte ptr [rsi], 0x1; add cl, ch; ret far; 
0x000000000749b8: mov byte ptr [rsp+0x38], 0x20; jmp rsi; 
0x000000000759e2: mov byte ptr [rsp+0x38], 0x20; mov rbx, rdi; mov dword ptr [rsp+0x28], 0x1; jmp rsi; 
0x0000000011063c: mov byte ptr [rsp], 0x0; mov rax, r12; pop r12; ret; 
0x00000000034afd: mov byte ptr [rsp], 0x0; pop rbx; pop rbp; pop r12; ret; 
0x000000001159c7: mov ch, 0x0; add [rax], al; mov rdi, [r13]; call rbx; 
0x000000000dbd6b: mov ch, 0x10; add [rdi], cl; add eax, 0xffff75e9; jmp qword ptr [rsi+0x2e]; 
0x00000000073a1e: mov ch, 0x38; idiv edi; dec dword ptr [rcx+rcx*4-0x16]; mov rdi, r14; call qword ptr [r12+0x38]; 
0x00000000073461: mov ch, 0x38; idiv edi; dec dword ptr [rcx+rcx*4-0x16]; mov rdi, r14; call qword ptr [rbx+0x38]; 
0x00000000077fff: mov ch, 0x40; idiv edi; call rax; 
0x000000001628d7: mov ch, 0x50; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000079fb2: mov ch, 0x58; idiv edi; jmp qword ptr [rsi-0x77]; 
0x00000000187f46: mov ch, 0x6; add [rax], al; xor eax, eax; ret; 
0x00000000160c17: mov ch, 0x6b; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000013ad8f: mov ch, 0xee; jmp qword ptr [rsi+0xf]; 
0x000000000fadb3: mov ch, 0xf2; call far fword ptr [rax+0x5a]; 
0x0000000014df7c: mov ch, 0xfb; jmp qword ptr [rsi-0x7d]; 
0x0000000003aeb2: mov ch, [rdx-0x3eb7ffe6]; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x00000000079f90: mov ch, al; fdivp st(7), st; inc dword ptr [rcx]; ret; 
0x000000000cbae0: mov ch, dh; and ch, 0xf; je short 0x00000000000cbb00; add rax, 0x2; ret; 
0x000000001092e9: mov cl, 0x0; add [rax], al; add rsp, 0x30; pop rbx; ret; 
0x00000000119da5: mov cl, 0x0; add [rax], al; syscall; 
0x0000000014b7c3: mov cl, 0x15; call rsi; 
0x0000000012bd53: mov cl, 0x15; push rdi; ret; 
0x0000000012bf17: mov cl, 0x15; ret far; 
0x0000000010e57d: mov cl, 0x1; add bl, dh; nop edx, edi; xor eax, eax; syscall; 
0x0000000003a59b: mov cl, 0x1a; add [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x00000000080a5f: mov cl, 0x35; ret far; 
0x000000000faaa9: mov cl, 0x39; ret; 
0x00000000140f10: mov cl, 0x48; shr edx, 0x3; add rax, rcx; notrack jmp rax; 
0x0000000010e293: mov cl, 0x4b; or eax, 0x64d8f700; mov [rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010d693: mov cl, 0x57; or eax, 0x64d8f700; mov [rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000b839b: mov cl, 0x74; loop 0x00000000000b8362; nop; xor eax, eax; ret; 
0x0000000015159b: mov cl, 0x81; std; call qword ptr [rax-0x5e1f00d]; 
0x0000000019204e: mov cl, 0x90; pop rbx; pop rbp; pop r12; ret; 
0x0000000012cfdb: mov cl, 0xb; add [rdi], cl; add eax, 0xffff7be9; jmp qword ptr [rsi+0x2e]; 
0x00000000159134: mov cl, 0xe9; add esi, ebx; movsq [rdi], [rsi]; ret; 
0x000000000c512c: mov cl, 0xe9; ret; 
0x0000000013b150: mov cl, 0xee; jmp qword ptr [rsi+0xf]; 
0x000000000bd900: mov cl, 0xf7; jmp qword ptr [rsi+0x66]; 
0x0000000014992b: mov cl, 0xfb; out dx, al; call qword ptr [rax-0x5e1f00d]; 
0x0000000002b45d: mov cl, 0xff; dec dword ptr [rax-0x77]; ret; 
0x0000000002b494: mov cl, 0xff; jmp qword ptr [rsi+0xf]; 
0x000000000725aa: mov cl, [rax+0x1]; sar dword ptr [rsi], 0x1; jmp rcx; 
0x0000000011a3d8: mov cl, [rax+rax]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011a394: mov cl, [rax+rax]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010a0ba: mov cl, [rbp-0x2708fff3]; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011d1c4: mov cl, [rbx-0x367acef4]; jne short 0x000000000011d1d0; ret; 
0x0000000011da1b: mov cl, [rbx-0x367acef4]; jne short 0x000000000011da28; ret; 
0x0000000011da78: mov cl, [rbx-0x367acef4]; jne short 0x000000000011da88; ret; 
0x000000000ab0e5: mov cl, [rbx-0x37d67dfc]; ret; 
0x000000000a52e4: mov cl, [rdi-0x73]; adc al, 0xa; notrack jmp r10; 
0x000000000458da: mov cl, [rdx]; sbb al, [rax]; syscall; 
0x000000000d0e15: mov cl, [rip-0x3f49f100]; movsxd rax, [rdi+rax*4]; add rax, rdi; notrack jmp rax; 
0x000000000b5764: mov cl, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], cl; lea rax, [rdi+0x11]; ret; 
0x000000000b3f44: mov cl, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], cl; ret; 
0x000000000ce27a: mov cl, [rsi+0x14d0011]; ret; 
0x000000000b4018: mov cl, [rsi+0x18]; movdqu [rdi], xmm0; mov [rdi+0x10], rdx; mov [rdi+0x18], cl; ret; 
0x000000000b4119: mov cl, [rsi+0x20]; movdqu [rdi], xmm0; movdqu [rdi+0x10], xmm2; mov [rdi+0x20], cl; ret; 
0x0000000017e8e4: mov cl, [rsi+rdx-0x1]; sub eax, ecx; ret; 
0x00000000189604: mov cl, [rsi]; mov [rdi], cl; ret; 
0x000000000974e0: mov cl, bh; adc al, 0x0; add [rax], al; add [rax], al; ret; 
0x000000000cbacb: mov cl, dl; and cl, 0xf; je short 0x00000000000cbaf0; ret; 
0x000000001895f2: mov cx, [rcx-0x2]; mov [rdi], si; mov [r9-0x2], cx; ret; 
0x000000001895f1: mov cx, [rcx-0x2]; mov [rdi], si; mov [r9-0x2], cx; ret; 
0x000000000b4914: mov cx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], cx; lea rax, [rdi+0x11]; ret; 
0x000000000b5784: mov cx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], cx; lea rax, [rdi+0x12]; ret; 
0x000000000b3264: mov cx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], cx; ret; 
0x000000000b3348: mov cx, [rsi+0x18]; movdqu [rdi], xmm0; mov [rdi+0x10], rdx; mov [rdi+0x18], cx; ret; 
0x00000000161944: mov cx, [rsi-0x2]; mov [rdi-0x3], dx; mov [rdi-0x2], cx; ret; 
0x000000001678a4: mov cx, [rsi]; mov [rdi+0x1], dx; mov [rdi], cx; ret; 
0x000000000b47b0: mov cx, [rsi]; mov [rdi], cx; mov [rdi+0x2], dh; lea rax, [rdi+0x2]; ret; 
0x000000000b3170: mov cx, [rsi]; mov [rdi], cx; mov [rdi+0x2], dh; ret; 
0x000000000b3e60: mov cx, [rsi]; mov dl, [rsi+0x2]; mov [rdi], cx; mov [rdi+0x2], dl; ret; 
0x0000000008e0d1: mov dh, 0x0; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000008a487: mov dh, 0x0; ret; 
0x0000000003f899: mov dh, 0x11; test dl, dl; jne short 0x000000000003f878; ret; 
0x0000000007ced9: mov dh, 0x12; add [rax+0x63], cl; add al, 0x82; add rax, rdx; notrack jmp rax; 
0x0000000007aa33: mov dh, 0x12; add [rcx-0x7d], al; call far fword ptr [rax+0x48]; 
0x0000000009c1b6: mov dh, 0x15; add [rax], eax; lea rdx, [rip+0xee42f]; cmovne rax, rdx; ret; 
0x00000000184d61: mov dh, 0x16; mov [rdi], dl; lea rax, [rdi+0x1]; vzeroupper; ret; 
0x00000000183481: mov dh, 0x16; mov [rdi], dl; mov byte ptr [rdi+0x1], 0x0; vzeroupper; ret; 
0x00000000167981: mov dh, 0x16; mov [rdi], dl; ret; 
0x00000000184031: mov dh, 0x16; mov [rdi], dl; vzeroupper; ret; 
0x000000000a8b95: mov dh, 0x16; sub eax, edx; ret; 
0x00000000157496: mov dh, 0x22; std; jmp qword ptr [rsi+0xf]; 
0x0000000008e58f: mov dh, 0x36; call qword ptr [rax+0x18]; 
0x0000000003cb43: mov dh, 0x43; add [rax-0x7d], ecx; ret; 
0x000000000e6f58: mov dh, 0x43; add [rcx-0x73], ecx; push rbx; add [rcx-0x7f], ecx; ret; 
0x000000000e7112: mov dh, 0x43; add cl, [rcx-0x7d]; ret; 
0x000000000d1be0: mov dh, 0x45; add [rax-0x7d], cl; ret; 
0x00000000076982: mov dh, 0x46; add [rax-0x7d], ecx; ret; 
0x000000000781f4: mov dh, 0x46; or al, 0x83; ret; 
0x000000000e3b8a: mov dh, 0x47; add [rax-0x7d], ecx; mov dword ptr [rcx], 0xac75c084; xor eax, eax; ret; 
0x0000000018bb81: mov dh, 0x47; cmc; movzx edx, byte ptr [rsi-0xb]; sub eax, edx; ret; 
0x00000000187ec1: mov dh, 0x47; dec dword ptr [rdi]; mov dh, 0x4e; jmp far fword ptr [rcx]; 
0x00000000187c74: mov dh, 0x47; dec dword ptr [rdi]; mov dh, 0x56; jmp far fword ptr [rcx]; 
0x0000000018bb71: mov dh, 0x47; hlt; movzx edx, byte ptr [rsi-0xc]; sub eax, edx; ret; 
0x0000000018bb61: mov dh, 0x47; movzx edx, byte ptr [rsi-0xd]; sub eax, edx; ret; 
0x0000000018bb51: mov dh, 0x47; movzx edx, byte ptr [rsi-0xe]; sub eax, edx; ret; 
0x000000000728b4: mov dh, 0x47; or al, 0x83; ret; 
0x000000000599c8: mov dh, 0x48; add [rax-0x72b7feb1], ecx; add cl, [rcx+0x39]; ret far; 
0x000000000599d8: mov dh, 0x48; add cl, [rax-0x72b7fdb1]; add rcx, [rcx+0x39]; ret far; 
0x000000000f9262: mov dh, 0x4a; or [rcx+0x63], cl; or al, 0x88; add rcx, r8; notrack jmp rcx; 
0x00000000187ec5: mov dh, 0x4e; jmp far fword ptr [rcx]; 
0x0000000003616c: mov dh, 0x53; add [rax-0x7d], ecx; ret; 
0x000000000e5f21: mov dh, 0x53; add cl, [rax-0x7d]; ret; 
0x000000000a4d33: mov dh, 0x54; and al, 0x16; mov [rdi+0x6], dl; ret; 
0x000000000a4df0: mov dh, 0x54; and al, 0xe; mov [rax+0x6], dl; ret; 
0x000000000a4ed5: mov dh, 0x54; and al, 0xe; mov [rdi+0x6], dl; ret; 
0x000000000a4dbf: mov dh, 0x54; and al, 0xf4; mov [rax+0x4], dl; ret; 
0x000000000a4cfa: mov dh, 0x54; and al, 0xf4; mov [rdi+0x4], dl; ret; 
0x000000000a4da1: mov dh, 0x54; and al, 0xfa; mov [rax+0x2], dl; ret; 
0x000000000a4cdc: mov dh, 0x54; and al, 0xfa; mov [rdi+0x2], dl; ret; 
0x0000000017d846: mov dh, 0x54; cmp ah, [rax]; sub eax, edx; vzeroupper; ret; 
0x0000000018bb85: mov dh, 0x56; cmc; sub eax, edx; ret; 
0x0000000018bb75: mov dh, 0x56; hlt; sub eax, edx; ret; 
0x00000000187c78: mov dh, 0x56; jmp far fword ptr [rcx]; 
0x0000000018bb65: mov dh, 0x56; sub eax, edx; ret; 
0x0000000018bb55: mov dh, 0x56; sub eax, edx; ret; 
0x000000000f8a59: mov dh, 0x57; xor [rax+0x63], cl; adc al, 0x96; add rdx, rsi; notrack jmp rdx; 
0x000000000f407a: mov dh, 0x58; cmp dh, dh; ret; 
0x000000000a1e12: mov dh, 0x5c; add [rdx+0x38], eax; pop rsp; syscall; 
0x0000000013a25a: mov dh, 0x5d; add cl, ch; imul edi, esi, 0xffffffff; jmp qword ptr [rsi+0xf]; 
0x0000000014b609: mov dh, 0x6; add [rdi], cl; sub [rsp+0x20], eax; call qword ptr [rax+0x28]; 
0x00000000151111: mov dh, 0x6; lea rsi, [rsp+0x4]; mov [rsp+0x4], eax; mov rax, [rdi+0x8]; call qword ptr [rax+0x48]; 
0x00000000140f9c: mov dh, 0x7; add eax, ecx; sub rdx, 0x1; jne short 0x0000000000140f28; ret; 
0x0000000017e8f1: mov dh, 0x7; movzx ecx, byte ptr [rsi]; sub eax, ecx; ret; 
0x000000000a8b92: mov dh, 0x7; movzx edx, byte ptr [rsi]; sub eax, edx; ret; 
0x000000000a6694: mov dh, 0x7; sub eax, ecx; ret; 
0x0000000017dea4: mov dh, 0x7; sub eax, ecx; vzeroupper; ret; 
0x00000000046f3a: mov dh, 0x7b; add [rax-0x7d], ecx; ret; 
0x0000000013a590: mov dh, 0x7d; or [rcx-0x80], al; jmp qword ptr [rax]; 
0x00000000051d0a: mov dh, 0x84; and al, 0xab; add [rax], al; add [rcx-0x7d], cl; ret; 
0x00000000151096: mov dh, 0x86; std; jmp qword ptr [rsi+0xf]; 
0x0000000013c886: mov dh, 0x9a; out dx, al; jmp qword ptr [rsp+rax*2-0x77]; 
0x0000000012e6c6: mov dh, 0x9c; or eax, [rax]; syscall; 
0x0000000013eaa6: mov dh, 0xa1; or al, [rax]; syscall; 
0x0000000007cd66: mov dh, 0xa9; adc al, [rax]; add rax, rdx; ret; 
0x000000000a492a: mov dh, 0xa; test cl, cl; jne short 0x00000000000a4920; mov [rdi], rdx; ret; 
0x000000000425f2: mov dh, 0xb; sbb al, [rax]; ret; 
0x0000000015182e: mov dh, 0xc0; add rsp, 0x18; ret; 
0x0000000010a846: mov dh, 0xc0; add rsp, 0x58; ret; 
0x00000000144d55: mov dh, 0xc0; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000000ca0a4: mov dh, 0xc0; lea eax, [rax+rax-0x1]; ret; 
0x000000000e0c4f: mov dh, 0xc0; lea rax, [rax+rax-0x1]; ret; 
0x00000000062115: mov dh, 0xc0; mov rdx, [rbp-0x610]; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x0000000008c763: mov dh, 0xc0; movsxd rax, [r10+rax*4]; add rax, r10; notrack jmp rax; 
0x000000001055f8: mov dh, 0xc0; movsxd rax, [r12+rax*4]; add rax, r12; notrack jmp rax; 
0x00000000103d73: mov dh, 0xc0; movsxd rax, [rbx+rax*4]; add rax, rbx; notrack jmp rax; 
0x00000000105c41: mov dh, 0xc0; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x00000000062a14: mov dh, 0xc0; movsxd rax, [rdi+rax*4]; add rax, rdi; notrack jmp rax; 
0x00000000062318: mov dh, 0xc0; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000060fac: mov dh, 0xc0; neg eax; pop rbp; ret; 
0x0000000002930d: mov dh, 0xc0; neg eax; ret; 
0x0000000014498b: mov dh, 0xc0; pop r12; ret; 
0x00000000143834: mov dh, 0xc0; pop rbp; pop r12; ret; 
0x0000000008a50e: mov dh, 0xc0; pop rbx; neg eax; ret; 
0x00000000144ceb: mov dh, 0xc0; pop rbx; pop rbp; ret; 
0x000000000423f0: mov dh, 0xc0; ret; 
0x000000000a8bb5: mov dh, 0xc0; sar rdx, cl; movzx edx, dl; sub eax, edx; ret; 
0x0000000010aa33: mov dh, 0xc0; sbb eax, 0x0; ret; 
0x000000000920c2: mov dh, 0xc0; sub eax, 0x2; add rsp, 0x8; ret; 
0x000000000b84f1: mov dh, 0xc1; pop rbx; ret; 
0x0000000008d384: mov dh, 0xc3; pop rbx; pop rbp; pop r12; ret; 
0x000000001500c2: mov dh, 0xc5; mov rsi, rsp; mov [rsp], rax; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x000000000b8252: mov dh, 0xc6; mov rdx, rdi; rep stosb [rdi]; mov rax, rdx; ret; 
0x0000000002be26: mov dh, 0xc6; test sil, sil; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x0000000003f2e6: mov dh, 0xd2; movsxd r10, [r11+r10*4]; add r10, r11; notrack jmp r10; 
0x00000000050e85: mov dh, 0xd2; movsxd rdx, [r9+rdx*4]; add rdx, r9; notrack jmp rdx; 
0x0000000007cdd9: mov dh, 0xd2; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x000000000d421f: mov dh, 0xd2; movsxd rdx, [rdi+rdx*4]; add rdx, rdi; notrack jmp rdx; 
0x0000000007ce84: mov dh, 0xd2; movsxd rdx, [rsi+rdx*4]; add rdx, rsi; notrack jmp rdx; 
0x000000000a8bbb: mov dh, 0xd2; sub eax, edx; ret; 
0x00000000118f99: mov dh, 0xd7; shr rax, 0xc; xor al, al; or eax, edx; ret; 
0x000000000961e6: mov dh, 0xd9; adc al, 0x0; syscall; 
0x0000000018daf5: mov dh, 0xe7; add rax, rdx; notrack jmp rax; 
0x000000000b7efd: mov dh, 0xe; mov [rdi], cl; ret; 
0x000000000a6691: mov dh, 0xe; movzx eax, byte ptr [rdi]; sub eax, ecx; ret; 
0x0000000017dea1: mov dh, 0xe; movzx eax, byte ptr [rdi]; sub eax, ecx; vzeroupper; ret; 
0x0000000017e8f4: mov dh, 0xe; sub eax, ecx; ret; 
0x000000000eb78d: mov dh, 0xed; movsxd rax, [rcx+rbp*4]; add rax, rcx; notrack jmp rax; 
0x000000000eb722: mov dh, 0xed; movsxd rax, [rdx+rbp*4]; add rax, rdx; notrack jmp rax; 
0x00000000129839: mov dh, 0xf6; mov eax, edi; or eax, esi; bswap eax; ret; 
0x000000000eb87c: mov dh, 0xf6; movsxd rax, [rdx+r14*4]; add rax, rdx; notrack jmp rax; 
0x0000000004d3ae: mov dh, 0xfe; jmp qword ptr [rsi+0x66]; 
0x000000001297d1: mov dh, 0xff; and edx, 0xc0000000; cmp edx, 0x80000000; cmovne eax, edi; ret; 
0x00000000151aa7: mov dh, 0xff; dec dword ptr [rax-0x75]; cmp [rax-0x77], cl; ret; 
0x00000000151ae3: mov dh, 0xff; dec dword ptr [rax-0x77]; ret; 
0x0000000007aa32: mov dh, [rsi-0x7cbeffee]; call far fword ptr [rax+0x48]; 
0x0000000013dacc: mov dh, ch; jmp qword ptr [rsi+0xf]; 
0x000000000d01d1: mov dh, dh; jmp qword ptr [rsi+0x2e]; 
0x00000000119fb8: mov dl, 0x0; add [rax], al; syscall; 
0x0000000003a5c2: mov dl, 0x1a; add [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x0000000017642a: mov dl, 0x3; add [rax], al; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x0000000011d1d8: mov dl, 0x3; add al, 0xa; ret; 
0x000000000b4dfa: mov dl, 0x42; str [rcx+0x63]; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000e04f6: mov dl, 0x48; add eax, edx; notrack jmp rax; 
0x00000000075501: mov dl, 0x48; add esi, ebx; mov rbx, rcx; mov ecx, 0x1; jmp rsi; 
0x00000000074b99: mov dl, 0x48; add esi, ebx; mov rbx, rcx; xor ecx, ecx; jmp rsi; 
0x000000000758a1: mov dl, 0x48; add esi, ebx; mov rbx, rdx; xor edx, edx; jmp rsi; 
0x000000000d970a: mov dl, 0xbf; adc [rax], al; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000015ce9a: mov dl, 0xc8; cld; jmp qword ptr [rsi-0x70]; 
0x0000000014bb12: mov dl, 0xd3; or [rax], eax; syscall; 
0x000000000cf3c0: mov dl, 0xfb; dec dword ptr [rax+0x39]; ret; 
0x00000000066ef4: mov dl, 0xff; jmp qword ptr [rsi+0xf]; 
0x000000000b3f97: mov dl, [rsi+0x14]; movdqu [rdi], xmm0; mov [rdi+0x10], ecx; mov [rdi+0x14], dl; ret; 
0x000000000b55f3: mov dl, [rsi+0x2]; mov [rdi], cx; mov [rdi+0x2], dl; lea rax, [rdi+0x3]; ret; 
0x000000000b3e63: mov dl, [rsi+0x2]; mov [rdi], cx; mov [rdi+0x2], dl; ret; 
0x000000000b5622: mov dl, [rsi+0x4]; mov [rdi], ecx; mov [rdi+0x4], dl; lea rax, [rdi+0x5]; ret; 
0x000000000b3e82: mov dl, [rsi+0x4]; mov [rdi], ecx; mov [rdi+0x4], dl; ret; 
0x000000000b5673: mov dl, [rsi+0x8]; mov [rdi], rcx; mov [rdi+0x8], dl; lea rax, [rdi+0x9]; ret; 
0x000000000b3ec3: mov dl, [rsi+0x8]; mov [rdi], rcx; mov [rdi+0x8], dl; ret; 
0x00000000161580: mov dl, [rsi-0x1]; mov [rdi-0x1], dl; ret; 
0x000000000b55d0: mov dl, [rsi]; mov [rdi], dl; lea rax, [rdi+0x1]; ret; 
0x000000000b3e40: mov dl, [rsi]; mov [rdi], dl; ret; 
0x000000000b7230: mov dl, [rsi]; mov [rdi], dl; xor ch, ch; mov [rdi+0x1], ch; ret; 
0x00000000040cae: mov ds, [rdx+0x17]; add bl, dh; mulps xmm0, [rip+0x176722]; ret; 
0x0000000014bcfe: mov ds, [rsi+0x6beffff]; add [rax], al; add [rbp+rcx*4+0x4c], cl; and al, 0x14; call qword ptr [rax]; 
0x000000000bf807: mov ds, dx; add eax, [rax]; add [rbp+0x6348ff43], cl; ret far; 
0x0000000014cc5d: mov dword ptr [r12], 0xe; lea rsi, [r12+0x8]; mov rdi, rbp; call qword ptr [rax+0x10]; 
0x00000000146f50: mov dword ptr [r8+0x4], 0x0; mov eax, 0x1; ret; 
0x00000000146f40: mov dword ptr [r8+0x4], 0x1; mov eax, 0x1; ret; 
0x00000000044a3f: mov dword ptr [rax+0x10], 0x0; mov esi, ebp; ror rdx, 0x11; xor rdx, fs:[0x30]; call rdx; 
0x0000000011bd5f: mov dword ptr [rax+0x10], 0x0; mov qword ptr [rip+0xc760f], 0x0; ret; 
0x0000000013c9a0: mov dword ptr [rax+0x10], 0x0; movups [rax], xmm0; add rsp, 0x8; ret; 
0x00000000143808: mov dword ptr [rax+0x23b0], 0x1; mov rax, [rax+0x23b8]; mov rdi, r12; call qword ptr [rax+0x28]; 
0x00000000146f51: mov dword ptr [rax+0x4], 0x0; mov eax, 0x1; ret; 
0x00000000146f41: mov dword ptr [rax+0x4], 0x1; mov eax, 0x1; ret; 
0x000000000845e2: mov dword ptr [rax+0x50], 0x0; movups [rax+0x40], xmm0; pop rbx; ret; 
0x000000000970c8: mov dword ptr [rax+0x8], 0x0; pop rbx; pop rbp; pop r12; ret; 
0x0000000008edc5: mov dword ptr [rax+0x8], 0x0; ret; 
0x0000000009bf93: mov dword ptr [rax+0x8], 0x0; xor eax, eax; mov [r8], rsi; ret; 
0x0000000011bd57: mov dword ptr [rax+0x8], 0x1; mov qword ptr [rax+0x10], 0x0; mov qword ptr [rip+0xc760f], 0x0; ret; 
0x0000000002d3b1: mov dword ptr [rax+rax], 0x2444c700; cmp [rip-0x17000000], al; imul edi, esi, 0xffffffff; jmp qword ptr [rsi+0xf]; 
0x0000000008ae3d: mov dword ptr [rax+rax], 0x748d4800; and al, 0x10; mov rdi, rbp; call qword ptr [rax+0x90]; 
0x00000000032927: mov dword ptr [rax+rcx*2], 0x820ffa39; ret; 
0x0000000017e389: mov dword ptr [rax-0x15000000], 0xbc0ff3d0; ror byte ptr [rax+0x1], 0xf8; vzeroupper; ret; 
0x000000000373fa: mov dword ptr [rax-0x20], 0x850fffff; ret far; 
0x0000000008edbe: mov dword ptr [rax], 0x0; mov qword ptr [rax+0x8], 0x0; ret; 
0x00000000151ac1: mov dword ptr [rax], 0x0; pop rbx; ret; 
0x00000000141248: mov dword ptr [rax], 0x16; mov eax, 0x16; ret; 
0x0000000010d4c8: mov dword ptr [rax], 0x16; mov eax, 0x1; ret; 
0x00000000041928: mov dword ptr [rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000156ca0: mov dword ptr [rax], 0x16; mov eax, r8d; mov qword ptr [rdx], 0x0; ret; 
0x000000000417e8: mov dword ptr [rax], 0x16; mov rax, 0xffffffffffffffff; ret; 
0x00000000114728: mov dword ptr [rax], 0x16; ret; 
0x000000000cc158: mov dword ptr [rax], 0x16; xor eax, eax; ret; 
0x0000000014120b: mov dword ptr [rax], 0x1d; mov eax, 0x1d; pop rbx; ret; 
0x0000000004140b: mov dword ptr [rax], 0x22; add rsp, 0x20; pop rbp; ret; 
0x00000000040732: mov dword ptr [rax], 0x22; add rsp, 0x8; ret; 
0x000000001411f0: mov dword ptr [rax], 0x22; mov eax, 0x22; pop rbx; ret; 
0x0000000004241c: mov dword ptr [rax], 0x26; mov eax, 0xffffffff; ret; 
0x0000000011a23c: mov dword ptr [rax], 0x26; mov rax, 0xffffffffffffffff; ret; 
0x0000000015a85c: mov dword ptr [rax], 0x26; xor eax, eax; ret; 
0x000000001170a8: mov dword ptr [rax], 0x2; xor eax, eax; ret; 
0x0000000003fb28: mov dword ptr [rax], 0x2a; mov rax, r10; ret; 
0x00000000132895: mov dword ptr [rax], 0x2d830000; fcomp st, dword ptr [rbx+rcx]; add [rcx+rcx*4-0x40], eax; pop rbp; ret; 
0x000000000cc03b: mov dword ptr [rax], 0x4b; mov rax, r12; pop r12; ret; 
0x000000000cc138: mov dword ptr [rax], 0x4b; xor eax, eax; add rsp, 0x8; ret; 
0x00000000116e85: mov dword ptr [rax], 0x50f0000; cmp rax, 0xfffffffffffff001; jae short 0x0000000000116e94; ret; 
0x000000000464e8: mov dword ptr [rax], 0x5; mov eax, 0xffffffff; ret; 
0x0000000007f1a4: mov dword ptr [rax], 0x89480000; ret; 
0x0000000003fb88: mov dword ptr [rax], 0x9; mov eax, 0xffffffff; pop rbp; ret; 
0x00000000029320: mov dword ptr [rax], 0x9; mov eax, 0xffffffff; ret; 
0x00000000096a6b: mov dword ptr [rax], 0xc; add rsp, 0x10; mov rax, r8; pop rbp; ret; 
0x0000000010f270: mov dword ptr [rax], 0xc; mov eax, 0xffffffff; ret; 
0x00000000096888: mov dword ptr [rax], 0xc; mov rax, r8; ret; 
0x0000000009549b: mov dword ptr [rax], 0xc; mov rax, r9; ret; 
0x000000001146e1: mov dword ptr [rax], 0xc; xor eax, eax; pop rbx; ret; 
0x0000000009b9cc: mov dword ptr [rax], 0xc; xor eax, eax; ret; 
0x0000000010f25c: mov dword ptr [rax], 0xffffffff; xor eax, eax; ret; 
0x0000000014e736: mov dword ptr [rbp+0x10], 0x0; mov rdi, r13; call qword ptr [rax+0x28]; 
0x0000000013c1a6: mov dword ptr [rbp+0x210], 0xffffffff; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000000e3b14: mov dword ptr [rbp+0x8], 0x0; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000011b837: mov dword ptr [rbp-0x7d0], 0x0; mov byte ptr [rbp-0x7ca], 0x0; mov byte ptr [rbp-0x7c9], 0x73; syscall; 
0x0000000012621f: mov dword ptr [rbp-0x80], 0x0; movups [rbp-0x78], xmm7; call rcx; 
0x0000000009ee5f: mov dword ptr [rbp], 0x0; pop rbp; pop r12; ret; 
0x00000000147ca1: mov dword ptr [rbp], 0x0; pop rbx; pop rbp; pop r12; ret; 
0x0000000014ca15: mov dword ptr [rbp], 0xe; lea rsi, [rbp+0x8]; mov rdi, r15; call qword ptr [rdx+0x10]; 
0x00000000034857: mov dword ptr [rbx+0x10], 0x0; pop rbx; ret; 
0x0000000014eac2: mov dword ptr [rbx+0x10], 0x1; mov rdi, r13; call qword ptr [rax+0x28]; 
0x00000000141745: mov dword ptr [rbx+0x18], 0x0; call qword ptr [rax+0x28]; 
0x00000000151616: mov dword ptr [rbx+0x18], 0x0; pop rbx; ret; 
0x000000001416c6: mov dword ptr [rbx+0x18], 0x1; call qword ptr [rax+0x28]; 
0x0000000014379c: mov dword ptr [rbx+0x23b0], 0x0; mov rdi, r12; call qword ptr [rax+0x28]; 
0x000000000f9fdf: mov dword ptr [rbx+0x28], 0x0; pop rbx; ret; 
0x000000001449ef: mov dword ptr [rbx+0x38], 0x0; mov [rcx], eax; sub rdx, rsi; mov rbp, rdx; call qword ptr [rbx+0x10]; 
0x0000000014a849: mov dword ptr [rbx+0x58], 0x0; mov esi, [rbx+0x88]; mov rdi, r15; call qword ptr [rax+0x28]; 
0x0000000008df4e: mov dword ptr [rbx+0x58], 0x0; movups [rbx+0x48], xmm0; pop rbx; ret; 
0x0000000008fc6e: mov dword ptr [rbx+0x58], 0x0; pxor xmm0, xmm0; movups [rbx+0x48], xmm0; pop rbx; ret; 
0x00000000147cce: mov dword ptr [rbx+0x58], 0x28; pop rbx; pop rbp; pop r12; ret; 
0x0000000008c34e: mov dword ptr [rbx+0x70], 0xffffffff; pop rbx; ret; 
0x0000000002a727: mov dword ptr [rbx], 0x0; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000114716: mov dword ptr [rbx], 0x0; pop rbx; ret; 
0x0000000015cef5: mov dword ptr [rcx], 0x0; mov eax, 0xffffffff; ret; 
0x000000000e3b8f: mov dword ptr [rcx], 0xac75c084; xor eax, eax; ret; 
0x000000001270de: mov dword ptr [rcx], 0xf38e3be8; dec dword ptr [rax-0x7d]; ret; 
0x00000000036166: mov dword ptr [rcx], 0xfff4788; mov dh, 0x53; add [rax-0x7d], ecx; ret; 
0x00000000147a30: mov dword ptr [rdi+0x10], 0x2; add rdi, 0x10; jmp rcx; 
0x00000000149c97: mov dword ptr [rdi+0x18], 0x1; movups [rdi+0x8], xmm0; ret; 
0x00000000151a8d: mov dword ptr [rdi+0x20], 0x0; ret; 
0x00000000151a85: mov dword ptr [rdi+0x28], 0x0; mov qword ptr [rdi+0x20], 0x0; ret; 
0x00000000149cf0: mov dword ptr [rdi+0x4], 0x0; mov eax, 0x1; ret; 
0x00000000149ce0: mov dword ptr [rdi+0x4], 0x1; mov eax, 0x1; ret; 
0x0000000014a510: mov dword ptr [rdi+0x58], 0x2; add rdi, 0x58; jmp rcx; 
0x00000000149be0: mov dword ptr [rdi+0x68], 0x2; add rdi, 0x68; jmp rcx; 
0x00000000136257: mov dword ptr [rdi+0x8], 0x29; mov [rdi+0xc], edx; mov [rsi], rdi; ret; 
0x00000000146df0: mov dword ptr [rdi+0xc8], 0x2; add rdi, 0xc8; jmp rcx; 
0x00000000045616: mov dword ptr [rdi], 0x0; pop rbx; ret; 
0x0000000010df11: mov dword ptr [rdi], 0x0; ret; 
0x000000000422da: mov dword ptr [rdi], 0x0; xor eax, eax; ret; 
0x00000000143700: mov dword ptr [rdi], 0x2; add rsp, 0x8; pop rbx; pop rbp; jmp rcx; 
0x0000000010dedb: mov dword ptr [rdi], 0xffffffff; ret; 
0x0000000006115d: mov dword ptr [rdx+0x4], 0x1; ret; 
0x00000000055c1c: mov dword ptr [rdx], 0x0; mov eax, 0x1; ret; 
0x00000000156caa: mov dword ptr [rdx], 0x0; ret; 
0x00000000055c82: mov dword ptr [rdx], 0xffffc002; ret; 
0x0000000009a7af: mov dword ptr [rip+0x14c6eb], 0x1; mov eax, r12d; pop r12; ret; 
0x000000000974de: mov dword ptr [rip+0x14f988], 0x0; ret; 
0x000000000923f8: mov dword ptr [rip+0x150eb2], 0x1; mov [rip+0x150ea4], eax; ret; 
0x000000000923d1: mov dword ptr [rip+0x150ed9], 0x1; mov [rip+0x150eae], rax; ret; 
0x000000000923a8: mov dword ptr [rip+0x150f02], 0x1; mov [rip+0x150ecf], rax; ret; 
0x00000000092388: mov dword ptr [rip+0x150f22], 0x1; mov [rip+0x150ee7], rax; ret; 
0x00000000090bc7: mov dword ptr [rip+0x155aef], 0x1; ret; 
0x0000000008ff50: mov dword ptr [rip+0x15671e], 0x0; ret; 
0x0000000008ff45: mov dword ptr [rip+0x156721], 0x0; mov qword ptr [rip+0x15671e], 0x0; ret; 
0x0000000004572d: mov dword ptr [rip+0x1a0c29], 0x0; mov eax, [rax+0x58]; ret; 
0x00000000045658: mov dword ptr [rip+0x1a0cf6], 0x0; mov rax, [rax]; pop rbx; mov eax, [rax+0x58]; ret; 
0x00000000045570: mov dword ptr [rip+0x1a0dd6], 0x0; mov rax, [rax]; pop rbx; mov eax, [rax+0x58]; ret; 
0x00000000191938: mov dword ptr [rip+0x5419e], 0x0; ret; 
0x000000001914ac: mov dword ptr [rip+0x54202], 0x0; add rsp, 0x8; ret; 
0x00000000191c5d: mov dword ptr [rip+0x55469], 0x0; ret; 
0x00000000191cc3: mov dword ptr [rip+0x5587b], 0x0; add rsp, 0x8; ret; 
0x00000000191d96: mov dword ptr [rip+0x56110], 0x0; ret; 
0x00000000191ec8: mov dword ptr [rip+0x56cce], 0x0; pop rbx; ret; 
0x00000000157df9: mov dword ptr [rip+0x8b649], 0xffffffff; add rsp, 0x8; ret; 
0x000000001570af: mov dword ptr [rip+0x921c7], 0x0; add rsp, 0x8; ret; 
0x0000000014d1d6: mov dword ptr [rip+0x9bd00], 0x2; pop rbx; ret; 
0x0000000014d106: mov dword ptr [rip+0x9bdd0], 0x2; pop rbx; ret; 
0x0000000014d036: mov dword ptr [rip+0x9bea0], 0x2; pop rbx; ret; 
0x0000000014cf66: mov dword ptr [rip+0x9bf70], 0x2; pop rbx; ret; 
0x0000000014ceb0: mov dword ptr [rip+0x9c026], 0x2; ret; 
0x0000000011bd90: mov dword ptr [rip+0xc75e6], 0x0; ret; 
0x0000000011bd67: mov dword ptr [rip+0xc760f], 0x0; ret; 
0x0000000011bd36: mov dword ptr [rip+0xc7640], 0x2; ret; 
0x0000000011bd10: mov dword ptr [rip+0xc7666], 0x0; ret; 
0x0000000011b999: mov dword ptr [rip+0xc79dd], 0x0; add rsp, 0x8; ret; 
0x0000000011b964: mov dword ptr [rip+0xc7a12], 0x3; add rsp, 0x8; ret; 
0x000000001125ec: mov dword ptr [rip+0xd518a], 0x0; mov qword ptr [rip+0xd518f], 0x0; add rsp, 0x8; ret; 
0x000000001125f7: mov dword ptr [rip+0xd518f], 0x0; add rsp, 0x8; ret; 
0x00000000110e0a: mov dword ptr [rip+0xd682c], 0x0; add rsp, 0x8; ret; 
0x00000000142e2e: mov dword ptr [rsi+0x10], 0x2; test eax, eax; je short 0x0000000000142e40; xor eax, eax; ret; 
0x00000000142f8e: mov dword ptr [rsi+0x8], 0x0; mov [rsi+0x10], rax; ret; 
0x00000000142ef3: mov dword ptr [rsi+0x8], 0x1; mov [rsi+0x10], rax; ret; 
0x000000000462bf: mov dword ptr [rsi+0xc], 0x1000b; ret; 
0x00000000055b8e: mov dword ptr [rsi], 0x0; mov eax, 0x1; ret; 
0x00000000055d9c: mov dword ptr [rsi], 0x0; mov eax, 0x2; ret; 
0x00000000090e89: mov dword ptr [rsi], 0x0; mov eax, 0xffffffff; ret; 
0x000000000faf68: mov dword ptr [rsi], 0x0; movups [rsi+0x8], xmm0; ret; 
0x00000000142ed7: mov dword ptr [rsi], 0x0; ret; 
0x00000000142ec0: mov dword ptr [rsi], 0x10; mov [rsi+0x8], rax; ret; 
0x00000000142f87: mov dword ptr [rsi], 0x10; mov qword ptr [rsi+0x8], 0x0; mov [rsi+0x10], rax; ret; 
0x00000000142eec: mov dword ptr [rsi], 0x10; mov qword ptr [rsi+0x8], 0x1; mov [rsi+0x10], rax; ret; 
0x00000000142f15: mov dword ptr [rsi], 0x6; movups [rsi+0x8], xmm1; ret; 
0x00000000142f03: mov dword ptr [rsi], 0x7; mov [rsi+0x8], eax; ret; 
0x00000000142f80: mov dword ptr [rsi], 0x8; ret; 
0x00000000142f45: mov dword ptr [rsi], 0x9; movups [rsi+0x8], xmm0; ret; 
0x00000000142f70: mov dword ptr [rsi], 0xa; ret; 
0x00000000142f60: mov dword ptr [rsi], 0xb; ret; 
0x00000000142f50: mov dword ptr [rsi], 0xc; ret; 
0x0000000014d61a: mov dword ptr [rsp+0x10], 0x0; mov dword ptr [rsp+0x30], 0x0; mov [rsp+0x38], rdx; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x0000000014d923: mov dword ptr [rsp+0x10], 0x0; mov dword ptr [rsp+0x30], 0x2; movups [rsp+0x18], xmm1; movups [rsp+0x38], xmm0; call qword ptr [rax+0x18]; 
0x0000000007a4b3: mov dword ptr [rsp+0x10], 0x0; mov dword ptr [rsp+0x38], 0x0; mov dword ptr [rsp+0x3c], 0x0; mov dword ptr [rsp+0x28], 0x20; jmp rcx; 
0x0000000014d7db: mov dword ptr [rsp+0x10], 0x1; mov dword ptr [rsp+0x18], 0x1; call qword ptr [rax+0x18]; 
0x0000000014d837: mov dword ptr [rsp+0x10], 0x1; mov dword ptr [rsp+0x18], 0x1; mov dword ptr [rsp+0x20], 0x5; call qword ptr [rax+0x18]; 
0x0000000007b17d: mov dword ptr [rsp+0x10], 0x1; mov rbx, rsi; mov dword ptr [rsp+0x28], 0x20; jmp rcx; 
0x0000000014d7e3: mov dword ptr [rsp+0x18], 0x1; call qword ptr [rax+0x18]; 
0x0000000014d83f: mov dword ptr [rsp+0x18], 0x1; mov dword ptr [rsp+0x20], 0x5; call qword ptr [rax+0x18]; 
0x0000000010fa82: mov dword ptr [rsp+0x18], 0xffffffff; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000014d847: mov dword ptr [rsp+0x20], 0x5; call qword ptr [rax+0x18]; 
0x000000000749a0: mov dword ptr [rsp+0x28], 0x0; mov dword ptr [rsp+0x48], 0x0; mov dword ptr [rsp+0x54], 0x0; mov byte ptr [rsp+0x38], 0x20; jmp rsi; 
0x000000000759ea: mov dword ptr [rsp+0x28], 0x1; jmp rsi; 
0x0000000007a4cb: mov dword ptr [rsp+0x28], 0x20; jmp rcx; 
0x0000000014d622: mov dword ptr [rsp+0x30], 0x0; mov [rsp+0x38], rdx; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x0000000014d8ad: mov dword ptr [rsp+0x30], 0x1; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x0000000014d92b: mov dword ptr [rsp+0x30], 0x2; movups [rsp+0x18], xmm1; movups [rsp+0x38], xmm0; call qword ptr [rax+0x18]; 
0x0000000014d69d: mov dword ptr [rsp+0x30], 0x3; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x0000000014d70d: mov dword ptr [rsp+0x30], 0x4; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x0000000014d77d: mov dword ptr [rsp+0x30], 0x5; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x0000000007be38: mov dword ptr [rsp+0x34], 0x1; mov rbx, rsi; jmp rcx; 
0x0000000007a4bb: mov dword ptr [rsp+0x38], 0x0; mov dword ptr [rsp+0x3c], 0x0; mov dword ptr [rsp+0x28], 0x20; jmp rcx; 
0x0000000007b490: mov dword ptr [rsp+0x38], 0x1; mov rbx, rsi; jmp rcx; 
0x0000000007a4c3: mov dword ptr [rsp+0x3c], 0x0; mov dword ptr [rsp+0x28], 0x20; jmp rcx; 
0x0000000007bf38: mov dword ptr [rsp+0x3c], 0x1; mov rbx, rsi; jmp rcx; 
0x00000000148f43: mov dword ptr [rsp+0x40], 0x0; mov [rsp+0x10], rax; mov rax, [rsp+0x48]; call qword ptr [rax+0x28]; 
0x000000000cce22: mov dword ptr [rsp+0x40], 0x0; push 0x0; push 0x0; lea r8, [rsp+0x40]; call qword ptr [rax+0x270]; 
0x00000000076298: mov dword ptr [rsp+0x40], 0x1; mov rbx, rdi; jmp rsi; 
0x000000000749a8: mov dword ptr [rsp+0x48], 0x0; mov dword ptr [rsp+0x54], 0x0; mov byte ptr [rsp+0x38], 0x20; jmp rsi; 
0x0000000007579b: mov dword ptr [rsp+0x48], 0x1; mov rbx, rdi; jmp rsi; 
0x0000000007b215: mov dword ptr [rsp+0x48], 0x1; mov rbx, rsi; xor r12d, r12d; jmp rcx; 
0x0000000007be28: mov dword ptr [rsp+0x50], 0x1; mov rbx, rsi; jmp rcx; 
0x000000000749b0: mov dword ptr [rsp+0x54], 0x0; mov byte ptr [rsp+0x38], 0x20; jmp rsi; 
0x00000000076230: mov dword ptr [rsp+0x54], 0x1; mov rbx, rdi; jmp rsi; 
0x000000000763f0: mov dword ptr [rsp+0x58], 0x1; mov rbx, rdi; jmp rsi; 
0x00000000076348: mov dword ptr [rsp+0x68], 0x1; mov rbx, rdi; jmp rsi; 
0x0000000014d7d3: mov dword ptr [rsp+0x8], 0x1; mov dword ptr [rsp+0x10], 0x1; mov dword ptr [rsp+0x18], 0x1; call qword ptr [rax+0x18]; 
0x0000000014d82f: mov dword ptr [rsp+0x8], 0x1; mov dword ptr [rsp+0x10], 0x1; mov dword ptr [rsp+0x18], 0x1; mov dword ptr [rsp+0x20], 0x5; call qword ptr [rax+0x18]; 
0x0000000010fa79: mov dword ptr [rsp+0x8], 0xffffffff; mov qword ptr [rsp+0x18], 0xffffffffffffffff; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000014d9f9: mov dword ptr [rsp+0xa8], 0x1; mov dword ptr [rsp+0xb0], 0x1; mov dword ptr [rsp+0xb8], 0x1; call qword ptr [rax+0x18]; 
0x0000000014da04: mov dword ptr [rsp+0xb0], 0x1; mov dword ptr [rsp+0xb8], 0x1; call qword ptr [rax+0x18]; 
0x0000000014da0f: mov dword ptr [rsp+0xb8], 0x1; call qword ptr [rax+0x18]; 
0x0000000014867e: mov dword ptr [rsp+0xc], 0xc; mov esi, 0x8; mov rdi, rbp; call qword ptr [rax+0x30]; 
0x0000000014dbea: mov dword ptr [rsp+0xd0], 0x1; movups [rsp+0xb8], xmm5; call rax; 
0x0000000014db4e: mov dword ptr [rsp+0xd0], 0x2; movups [rsp+0xb8], xmm3; movups [rsp+0xd8], xmm0; call rax; 
0x00000000040534: mov dword ptr [rsp-0x18], 0x0; fld st, tbyte ptr [rsp-0x18]; ret; 
0x000000000404dd: mov dword ptr [rsp-0x18], 0x0; mov [rsp-0x10], ax; fstp tbyte ptr [rdi], st; fld st, tbyte ptr [rsp-0x18]; ret; 
0x000000001423c0: mov dword ptr [rsp], 0x0; call qword ptr [rax+0x20]; 
0x00000000137ad4: mov dword ptr [rsp], 0x0; call rax; 
0x0000000015a4f2: mov dword ptr [rsp], 0x0; mov rax, [rsp+0x10]; mov rdi, [rsp+0x18]; call rax; 
0x0000000009ee12: mov dword ptr [rsp], 0x0; pop rbx; pop rbp; pop r12; ret; 
0x000000001379ec: mov dword ptr [rsp], 0x0; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000014f8be: mov dword ptr [rsp], 0x2; call r8; 
0x000000000db31f: mov dword ptr [rsp], 0x74; mov [rsp+0x10], rsi; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000dff6d: mov dword ptr [rsp], 0x75; movups [rsp+0x8], xmm0; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000e001d: mov dword ptr [rsp], 0x77; movups [rsp+0x8], xmm0; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000014cc5e: mov dword ptr [rsp], 0xe; lea rsi, [r12+0x8]; mov rdi, rbp; call qword ptr [rax+0x10]; 
0x00000000141247: mov dword ptr fs:[rax], 0x16; mov eax, 0x16; ret; 
0x0000000010d4c7: mov dword ptr fs:[rax], 0x16; mov eax, 0x1; ret; 
0x00000000041927: mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000156c9f: mov dword ptr fs:[rax], 0x16; mov eax, r8d; mov qword ptr [rdx], 0x0; ret; 
0x000000000417e7: mov dword ptr fs:[rax], 0x16; mov rax, 0xffffffffffffffff; ret; 
0x00000000114727: mov dword ptr fs:[rax], 0x16; ret; 
0x000000000cc157: mov dword ptr fs:[rax], 0x16; xor eax, eax; ret; 
0x0000000014120a: mov dword ptr fs:[rax], 0x1d; mov eax, 0x1d; pop rbx; ret; 
0x0000000004140a: mov dword ptr fs:[rax], 0x22; add rsp, 0x20; pop rbp; ret; 
0x00000000040731: mov dword ptr fs:[rax], 0x22; add rsp, 0x8; ret; 
0x000000001411ef: mov dword ptr fs:[rax], 0x22; mov eax, 0x22; pop rbx; ret; 
0x0000000004241b: mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x0000000011a23b: mov dword ptr fs:[rax], 0x26; mov rax, 0xffffffffffffffff; ret; 
0x0000000015a85b: mov dword ptr fs:[rax], 0x26; xor eax, eax; ret; 
0x000000001170a7: mov dword ptr fs:[rax], 0x2; xor eax, eax; ret; 
0x0000000003fb27: mov dword ptr fs:[rax], 0x2a; mov rax, r10; ret; 
0x000000000cc03a: mov dword ptr fs:[rax], 0x4b; mov rax, r12; pop r12; ret; 
0x000000000cc137: mov dword ptr fs:[rax], 0x4b; xor eax, eax; add rsp, 0x8; ret; 
0x000000000464e7: mov dword ptr fs:[rax], 0x5; mov eax, 0xffffffff; ret; 
0x0000000003fb87: mov dword ptr fs:[rax], 0x9; mov eax, 0xffffffff; pop rbp; ret; 
0x0000000002931f: mov dword ptr fs:[rax], 0x9; mov eax, 0xffffffff; ret; 
0x00000000096a6a: mov dword ptr fs:[rax], 0xc; add rsp, 0x10; mov rax, r8; pop rbp; ret; 
0x0000000010f26f: mov dword ptr fs:[rax], 0xc; mov eax, 0xffffffff; ret; 
0x00000000096887: mov dword ptr fs:[rax], 0xc; mov rax, r8; ret; 
0x0000000009549a: mov dword ptr fs:[rax], 0xc; mov rax, r9; ret; 
0x000000001146e0: mov dword ptr fs:[rax], 0xc; xor eax, eax; pop rbx; ret; 
0x0000000009b9cb: mov dword ptr fs:[rax], 0xc; xor eax, eax; ret; 
0x00000000055d9b: mov dword ptr fs:[rsi], 0x0; mov eax, 0x2; ret; 
0x000000001678a0: mov dx, [rsi+0x1]; mov cx, [rsi]; mov [rdi+0x1], dx; mov [rdi], cx; ret; 
0x000000000b47e2: mov dx, [rsi+0x4]; mov [rdi], ecx; mov [rdi+0x4], dx; lea rax, [rdi+0x5]; ret; 
0x000000000b5632: mov dx, [rsi+0x4]; mov [rdi], ecx; mov [rdi+0x4], dx; lea rax, [rdi+0x6]; ret; 
0x000000000b31a2: mov dx, [rsi+0x4]; mov [rdi], ecx; mov [rdi+0x4], dx; ret; 
0x000000000b4833: mov dx, [rsi+0x8]; mov [rdi], rcx; mov [rdi+0x8], dx; lea rax, [rdi+0x9]; ret; 
0x000000000b5693: mov dx, [rsi+0x8]; mov [rdi], rcx; mov [rdi+0x8], dx; lea rax, [rdi+0xa]; ret; 
0x000000000b31e3: mov dx, [rsi+0x8]; mov [rdi], rcx; mov [rdi+0x8], dx; ret; 
0x00000000161760: mov dx, [rsi-0x2]; mov [rdi-0x2], dx; ret; 
0x00000000161940: mov dx, [rsi-0x3]; mov cx, [rsi-0x2]; mov [rdi-0x3], dx; mov [rdi-0x2], cx; ret; 
0x000000000b47a0: mov dx, [rsi]; mov [rdi], dx; lea rax, [rdi+0x1]; ret; 
0x000000000b55e0: mov dx, [rsi]; mov [rdi], dx; lea rax, [rdi+0x2]; ret; 
0x000000000b3160: mov dx, [rsi]; mov [rdi], dx; ret; 
0x000000000b7240: mov dx, [rsi]; mov [rdi], dx; xor ch, ch; mov [rdi+0x2], ch; ret; 
0x00000000190c69: mov eax, 0x0; add [rax-0x7ab70000], al; ret; 
0x000000000408a1: mov eax, 0x0; add [rax], al; add [rax+0x48c22148], al; mov [rdi], edx; ret; 
0x00000000040871: mov eax, 0x0; add [rax], al; add [rax+0x66c22148], al; movq mm0, rdx; ret; 
0x000000000b8533: mov eax, 0x0; and ch, 0xf0; pop rbx; cmovne rax, rdx; ret; 
0x0000000010d7e7: mov eax, 0x0; cmova eax, edx; ret; 
0x00000000110678: mov eax, 0x0; cmove rax, rbx; pop rbx; ret; 
0x0000000012160b: mov eax, 0x0; cmovns rax, [rbx+0x28]; pop rbx; ret; 
0x00000000053149: mov eax, 0x0; jne short 0x0000000000053153; push r10; ret; 
0x00000000053622: mov eax, 0x0; jne short 0x000000000005362c; push r10; ret; 
0x000000000debe4: mov eax, 0x1000; mov r10, r12; lea rsi, [rip+0xcf5ef]; mov eax, 0x142; syscall; 
0x000000000457ab: mov eax, 0x1001a0b; pop rbp; ret; 
0x00000000143b36: mov eax, 0x100; add [rax-0x77], cl; ret; 
0x0000000010ec16: mov eax, 0x100; mov [rdi+0x16], ax; ret; 
0x00000000136b60: mov eax, 0x100; ret; 
0x00000000136b69: mov eax, 0x101; ret; 
0x00000000108a04: mov eax, 0x101; syscall; 
0x00000000136b57: mov eax, 0x102; cmovne eax, edx; ret; 
0x00000000108954: mov eax, 0x102; syscall; 
0x000000001084ee: mov eax, 0x103; syscall; 
0x00000000136b2d: mov eax, 0x104; cmovne eax, edx; ret; 
0x0000000010a0a7: mov eax, 0x104; syscall; 
0x00000000108548: mov eax, 0x106; syscall; 
0x0000000010a9b4: mov eax, 0x107; syscall; 
0x00000000060ff7: mov eax, 0x108; syscall; 
0x0000000010a897: mov eax, 0x109; syscall; 
0x0000000009243d: mov eax, 0x10; cmova rax, rdx; mov [rip+0x154a4b], rax; ret; 
0x000000001415e4: mov eax, 0x10; pop rbx; pop rbp; ret; 
0x000000000b8581: mov eax, 0x10; pop rbx; ret; 
0x00000000061168: mov eax, 0x10; ret; 
0x0000000010e7b9: mov eax, 0x10; syscall; 
0x0000000010a8f4: mov eax, 0x10a; syscall; 
0x0000000010a957: mov eax, 0x10b; syscall; 
0x00000000108880: mov eax, 0x10c; syscall; 
0x00000000109093: mov eax, 0x10d; syscall; 
0x00000000110036: mov eax, 0x10e; mov rsi, [rsp+0x18]; mov edi, [rsp+0x14]; syscall; 
0x0000000010ffd4: mov eax, 0x10e; syscall; 
0x0000000010d708: mov eax, 0x10f; syscall; 
0x0000000011a044: mov eax, 0x110; syscall; 
0x00000000119783: mov eax, 0x113; mov rsi, [rsp+0x10]; mov edi, [rsp+0x8]; syscall; 
0x00000000119733: mov eax, 0x113; syscall; 
0x000000001195d3: mov eax, 0x114; syscall; 
0x0000000010e173: mov eax, 0x115; syscall; 
0x00000000119683: mov eax, 0x116; syscall; 
0x0000000010dddb: mov eax, 0x118; syscall; 
0x0000000010dd97: mov eax, 0x118; syscall; 
0x0000000011937b: mov eax, 0x119; mov edi, [rsp+0x4]; syscall; 
0x00000000119329: mov eax, 0x119; syscall; 
0x00000000106ca3: mov eax, 0x11; syscall; 
0x0000000011a0a4: mov eax, 0x11b; syscall; 
0x0000000010da0a: mov eax, 0x11d; mov rdx, rsi; xor esi, esi; syscall; 
0x0000000010e223: mov eax, 0x11d; syscall; 
0x00000000119a37: mov eax, 0x11e; syscall; 
0x00000000119a04: mov eax, 0x11f; syscall; 
0x0000000011ac73: mov eax, 0x120; syscall; 
0x000000001193e7: mov eax, 0x121; mov edx, 0x8; syscall; 
0x00000000119424: mov eax, 0x122; syscall; 
0x00000000119d44: mov eax, 0x123; syscall; 
0x000000001095d4: mov eax, 0x124; syscall; 
0x00000000109634: mov eax, 0x125; syscall; 
0x00000000119e64: mov eax, 0x126; syscall; 
0x0000000010f496: mov eax, 0x127; syscall; 
0x0000000010f556: mov eax, 0x128; syscall; 
0x00000000106d53: mov eax, 0x12; syscall; 
0x0000000011ad6d: mov eax, 0x12b; mov edi, [rsp+0x4]; syscall; 
0x0000000011ad23: mov eax, 0x12b; syscall; 
0x0000000011a0d4: mov eax, 0x12c; syscall; 
0x00000000119c27: mov eax, 0x12d; syscall; 
0x000000001194b7: mov eax, 0x12e; syscall; 
0x0000000010ecfb: mov eax, 0x12e; xor edi, edi; syscall; 
0x0000000011a107: mov eax, 0x12f; syscall; 
0x00000000119800: mov eax, 0x130; syscall; 
0x00000000119b84: mov eax, 0x131; syscall; 
0x00000000110254: mov eax, 0x132; syscall; 
0x0000000011ade3: mov eax, 0x133; syscall; 
0x0000000011a134: mov eax, 0x134; syscall; 
0x00000000107e57: mov eax, 0x135; syscall; 
0x00000000119b07: mov eax, 0x136; syscall; 
0x00000000119b47: mov eax, 0x137; syscall; 
0x0000000010f350: mov eax, 0x13; syscall; 
0x0000000006103b: mov eax, 0x13c; syscall; 
0x000000000463d0: mov eax, 0x13e; syscall; 
0x0000000011a164: mov eax, 0x13f; syscall; 
0x000000000debf3: mov eax, 0x142; syscall; 
0x00000000119898: mov eax, 0x145; syscall; 
0x0000000010dd23: mov eax, 0x146; mov rsi, [rsp+0x10]; mov edi, [rsp+0x8]; syscall; 
0x0000000010dcd3: mov eax, 0x146; syscall; 
0x0000000010f636: mov eax, 0x147; syscall; 
0x0000000010f796: mov eax, 0x148; syscall; 
0x0000000011992c: mov eax, 0x149; syscall; 
0x00000000138ca7: mov eax, 0x14; add edx, 0x1; syscall; 
0x0000000011b832: mov eax, 0x14; mov dword ptr [rbp-0x7d0], 0x0; mov byte ptr [rbp-0x7ca], 0x0; mov byte ptr [rbp-0x7c9], 0x73; syscall; 
0x0000000010f3f0: mov eax, 0x14; syscall; 
0x0000000011a194: mov eax, 0x14a; syscall; 
0x0000000011a1c4: mov eax, 0x14b; syscall; 
0x00000000108417: mov eax, 0x14c; syscall; 
0x00000000108e14: mov eax, 0x15; syscall; 
0x00000000091160: mov eax, 0x16; cmove eax, edx; ret; 
0x00000000091134: mov eax, 0x16; cmp esi, 0x2; jbe short 0x0000000000091140; ret; 
0x00000000091080: mov eax, 0x16; ret; 
0x00000000109604: mov eax, 0x16; syscall; 
0x0000000010ff20: mov eax, 0x17; mov edi, [rsp+0xc]; syscall; 
0x0000000010fed3: mov eax, 0x17; syscall; 
0x000000000920d4: mov eax, 0x18; syscall; 
0x00000000119f27: mov eax, 0x19; syscall; 
0x0000000012120f: mov eax, 0x1; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000000d8e2e: mov eax, 0x1; add rsp, 0x8; ret; 
0x000000000cb19e: mov eax, 0x1; cmovg r8d, eax; mov eax, r8d; ret; 
0x000000000cb17e: mov eax, 0x1; cmovl r8d, eax; mov eax, r8d; ret; 
0x000000000cb090: mov eax, 0x1; jg short 0x00000000000cb099; neg eax; ret; 
0x0000000018c680: mov eax, 0x1; jg short 0x000000000018c690; neg eax; ret; 
0x00000000189446: mov eax, 0x1; jl short 0x0000000000189450; neg eax; ret; 
0x0000000015117c: mov eax, 0x1; mov [rdi+0x28], eax; mov [rdi+0x18], rsi; mov eax, r8d; ret; 
0x00000000055ba5: mov eax, 0x1; mov [rdi], rdx; ret; 
0x00000000046345: mov eax, 0x1; mov [rsi+0xe], ax; xor eax, eax; ret; 
0x000000000e7de0: mov eax, 0x1; mov byte ptr [rdi], 0x5b; ret; 
0x00000000055c7d: mov eax, 0x1; mov dword ptr [rdx], 0xffffc002; ret; 
0x0000000011226a: mov eax, 0x1; mov eax, r8d; add rsp, 0x8; ret; 
0x000000000895d1: mov eax, 0x1; mov eax, r8d; ret; 
0x000000001570a9: mov eax, 0x1; mov qword ptr [rip+0x921c7], 0x0; add rsp, 0x8; ret; 
0x00000000149cad: mov eax, 0x1; movups [r8], xmm1; ret; 
0x00000000149cc5: mov eax, 0x1; movups [r8], xmm2; ret; 
0x0000000014a5c5: mov eax, 0x1; movups [r8], xmm3; ret; 
0x0000000014a5a5: mov eax, 0x1; movups [r8], xmm4; ret; 
0x0000000008ece9: mov eax, 0x1; movups [rbp+0x38], xmm0; pop rbp; pop r12; ret; 
0x0000000014a5b5: mov eax, 0x1; movups [rdi+0x20], xmm2; ret; 
0x00000000146ebe: mov eax, 0x1; movups [rdx], xmm1; ret; 
0x000000001122a3: mov eax, 0x1; or dword ptr [rax], 0x8000; add rsp, 0x8; mov eax, r8d; ret; 
0x0000000005f009: mov eax, 0x1; pop rbp; pop r12; pop r13; ret; 
0x00000000083ef4: mov eax, 0x1; pop rbp; pop r12; ret; 
0x0000000009bb83: mov eax, 0x1; pop rbx; pop rbp; pop r12; ret; 
0x0000000007fc3a: mov eax, 0x1; pop rbx; pop rbp; ret; 
0x000000001070c0: mov eax, 0x1; pop rbx; ret; 
0x00000000053716: mov eax, 0x1; ret; 
0x000000000cbb21: mov eax, 0x1; ret; 
0x00000000147c60: mov eax, 0x1; sbb eax, 0xffffffff; add rsp, 0x8; ret; 
0x00000000042349: mov eax, 0x1; shl rax, cl; or [rdi], rax; xor eax, eax; ret; 
0x00000000108d50: mov eax, 0x1; syscall; 
0x000000000e0c64: mov eax, 0x1; test edi, edi; js short 0x00000000000e0c70; ret; 
0x00000000113920: mov eax, 0x1a; syscall; 
0x000000001139e4: mov eax, 0x1b; syscall; 
0x00000000107c7b: mov eax, 0x1c; syscall; 
0x00000000141211: mov eax, 0x1d; pop rbx; ret; 
0x0000000011b2d7: mov eax, 0x1d; syscall; 
0x0000000011b274: mov eax, 0x1e; syscall; 
0x0000000011b314: mov eax, 0x1f; syscall; 
0x00000000038d2b: mov eax, 0x200; ret; 
0x000000000e0abc: mov eax, 0x20; cmove rax, rdx; ret; 
0x000000000e0b8a: mov eax, 0x20; cmovne rax, rdx; ret; 
0x000000000e0b89: mov eax, 0x20; cmovne rax, rdx; ret; 
0x000000000b857a: mov eax, 0x20; pop rbx; ret; 
0x00000000109574: mov eax, 0x20; syscall; 
0x000000001095a4: mov eax, 0x21; syscall; 
0x000000001411f6: mov eax, 0x22; pop rbx; ret; 
0x000000000de850: mov eax, 0x22; syscall; 
0x000000000d01e4: mov eax, 0x24; syscall; 
0x000000000de7a4: mov eax, 0x25; syscall; 
0x000000000d0214: mov eax, 0x26; syscall; 
0x000000000dfb04: mov eax, 0x27; syscall; 
0x0000000010dc97: mov eax, 0x28; syscall; 
0x00000000136b6f: mov eax, 0x29; ret; 
0x0000000011a934: mov eax, 0x29; syscall; 
0x00000000117665: mov eax, 0x2; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000055da2: mov eax, 0x2; ret; 
0x000000000cbb31: mov eax, 0x2; ret; 
0x00000000136fbc: mov eax, 0x2; sub esi, 0x1; mov [rdi+0x1], sil; ret; 
0x0000000011a330: mov eax, 0x2a; syscall; 
0x0000000011a260: mov eax, 0x2b; syscall; 
0x0000000011a864: mov eax, 0x2c; mov rsi, [rsp+0x10]; mov edi, [rsp+0x8]; syscall; 
0x0000000011a6b9: mov eax, 0x2c; syscall; 
0x0000000011a5a1: mov eax, 0x2d; mov rdx, [rsp+0x10]; mov rsi, [rsp+0x8]; syscall; 
0x0000000011a499: mov eax, 0x2d; syscall; 
0x0000000011a770: mov eax, 0x2e; syscall; 
0x00000000071ac6: mov eax, 0x2ebf000a; add [rax], al; add [rax-0x77], cl; ret; 
0x0000000011a610: mov eax, 0x2f; syscall; 
0x000000000b8573: mov eax, 0x30; pop rbx; ret; 
0x0000000011a904: mov eax, 0x30; syscall; 
0x0000000011a2f4: mov eax, 0x31; syscall; 
0x0000000011a454: mov eax, 0x32; syscall; 
0x0000000011a3f4: mov eax, 0x33; syscall; 
0x0000000011a3c4: mov eax, 0x34; syscall; 
0x0000000011a967: mov eax, 0x35; syscall; 
0x0000000011a8d7: mov eax, 0x36; syscall; 
0x0000000011a427: mov eax, 0x37; syscall; 
0x000000000de948: mov eax, 0x38; syscall; 
0x000000000d8e67: mov eax, 0x3; cmovne eax, edx; ret; 
0x000000000918c9: mov eax, 0x3; mov eax, r8d; ret; 
0x000000001356c5: mov eax, 0x3; mov edi, [rbp-0x60]; syscall; 
0x000000000cbb41: mov eax, 0x3; ret; 
0x000000001094f0: mov eax, 0x3; syscall; 
0x000000000deae5: mov eax, 0x3a; syscall; 
0x000000000deb74: mov eax, 0x3b; syscall; 
0x00000000119226: mov eax, 0x3c; syscall; 
0x000000000de643: mov eax, 0x3d; syscall; 
0x00000000041bc4: mov eax, 0x3e; syscall; 
0x000000000de554: mov eax, 0x3f; syscall; 
0x000000000b856c: mov eax, 0x40; pop rbx; ret; 
0x000000000e0b38: mov eax, 0x40; ret; 
0x0000000011b154: mov eax, 0x40; syscall; 
0x0000000011b1b6: mov eax, 0x42; syscall; 
0x0000000011b2a4: mov eax, 0x43; syscall; 
0x00000000034181: mov eax, 0x44000000; mov eax, eax; pop rbp; pop r12; ret; 
0x0000000011024a: mov eax, 0x441f0f; add bl, dh; nop edx, edi; mov eax, 0x132; syscall; 
0x0000000010956a: mov eax, 0x441f0f; add bl, dh; nop edx, edi; mov eax, 0x20; syscall; 
0x0000000011a3ba: mov eax, 0x441f0f; add bl, dh; nop edx, edi; mov eax, 0x34; syscall; 
0x0000000011018a: mov eax, 0x441f0f; add bl, dh; nop edx, edi; mov eax, 0xa2; syscall; 
0x0000000011b0e4: mov eax, 0x44; syscall; 
0x0000000011af83: mov eax, 0x45; syscall; 
0x0000000011b080: mov eax, 0x46; mov edi, [rsp+0x8]; syscall; 
0x0000000011b033: mov eax, 0x46; syscall; 
0x0000000011b114: mov eax, 0x47; syscall; 
0x0000000018e770: mov eax, 0x48000000; lea edx, [rip+0x29f25]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000073a18: mov eax, 0x48000006; mov esi, [rbp-0x8c8]; mov rdx, r13; mov rdi, r14; call qword ptr [r12+0x38]; 
0x00000000127634: mov eax, 0x480003ac; lea edx, [rip+0x40351]; cmovne rax, rdx; ret; 
0x000000001091c4: mov eax, 0x48; syscall; 
0x000000000b6448: mov eax, 0x49000f2d; movsxd ecx, [rbx+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000109254: mov eax, 0x49; syscall; 
0x0000000003a02f: mov eax, 0x49e8001a; ret; 
0x000000000cbb51: mov eax, 0x4; ret; 
0x00000000108043: mov eax, 0x4; syscall; 
0x00000000110110: mov eax, 0x4a; syscall; 
0x000000001101d0: mov eax, 0x4b; syscall; 
0x000000001437be: mov eax, 0x4c000023; mov edi, esp; call qword ptr [rax+0x20]; 
0x00000000143815: mov eax, 0x4c000023; mov edi, esp; call qword ptr [rax+0x28]; 
0x00000000111be4: mov eax, 0x4c; syscall; 
0x00000000111c14: mov eax, 0x4d; syscall; 
0x000000001097cb: mov eax, 0x4f; syscall; 
0x000000001096f4: mov eax, 0x50; syscall; 
0x00000000109724: mov eax, 0x51; syscall; 
0x00000000060fc4: mov eax, 0x52; syscall; 
0x00000000108924: mov eax, 0x53; syscall; 
0x0000000010a9e4: mov eax, 0x54; syscall; 
0x00000000109670: mov eax, 0x55; syscall; 
0x0000000010a864: mov eax, 0x56; syscall; 
0x0000000010a984: mov eax, 0x57; syscall; 
0x0000000010a8c4: mov eax, 0x58; syscall; 
0x0000000011409c: mov eax, 0x59000d52; pop rbp; pop r12; pop r13; ret; 
0x0000000010a924: mov eax, 0x59; syscall; 
0x00000000126c5f: mov eax, 0x5; pop r12; pop rbp; ret; 
0x00000000101a87: mov eax, 0x5; pop rbp; pop r12; ret; 
0x000000000cbb61: mov eax, 0x5; ret; 
0x000000001080a2: mov eax, 0x5; syscall; 
0x000000001080a1: mov eax, 0x5; syscall; 
0x000000001086f4: mov eax, 0x5a; syscall; 
0x0000000010ab5c: mov eax, 0x5b000000; pop r12; pop r13; pop r14; ret; 
0x000000000e0402: mov eax, 0x5b000000; pop rbp; ret; 
0x00000000108724: mov eax, 0x5b; syscall; 
0x0000000010a014: mov eax, 0x5c; syscall; 
0x0000000010a044: mov eax, 0x5d; syscall; 
0x0000000010a074: mov eax, 0x5e; syscall; 
0x000000001086e4: mov eax, 0x5f; syscall; 
0x000000000b8565: mov eax, 0x60; pop rbx; ret; 
0x000000000cce99: mov eax, 0x60; syscall; 
0x0000000010ed74: mov eax, 0x62; syscall; 
0x0000000011a014: mov eax, 0x63; syscall; 
0x000000000dbb1b: mov eax, 0x64010010; mov [r8], r9d; add rsp, 0x8; ret; 
0x000000000de584: mov eax, 0x64; syscall; 
0x00000000110887: mov eax, 0x65; syscall; 
0x000000000dfb24: mov eax, 0x66; syscall; 
0x00000000119ec4: mov eax, 0x67; syscall; 
0x000000000dfb44: mov eax, 0x68; syscall; 
0x000000000dfbb2: mov eax, 0x69; syscall; 
0x000000000dfbb1: mov eax, 0x69; syscall; 
0x00000000050b27: mov eax, 0x6; lea r8, [rip+0x1959cd]; mov byte ptr [r8+rax], 0x0; mov rax, r8; ret; 
0x000000000cbb71: mov eax, 0x6; ret; 
0x00000000108103: mov eax, 0x6; syscall; 
0x000000000dfc52: mov eax, 0x6a; syscall; 
0x000000000dfc51: mov eax, 0x6a; syscall; 
0x000000000dfb34: mov eax, 0x6b; syscall; 
0x000000000dfb54: mov eax, 0x6c; syscall; 
0x000000000dfde4: mov eax, 0x6d; syscall; 
0x000000000dfb14: mov eax, 0x6e; syscall; 
0x000000000dfe14: mov eax, 0x6f; syscall; 
0x000000000dfe74: mov eax, 0x70; syscall; 
0x0000000010f8e2: mov eax, 0x71; syscall; 
0x0000000010f8e1: mov eax, 0x71; syscall; 
0x0000000010f981: mov eax, 0x72; syscall; 
0x0000000010f982: mov eax, 0x72; syscall; 
0x000000000dfb64: mov eax, 0x73; syscall; 
0x000000000db2e1: mov eax, 0x74; syscall; 
0x000000000db2e2: mov eax, 0x74; syscall; 
0x000000000dff21: mov eax, 0x75; syscall; 
0x000000000dff22: mov eax, 0x75; syscall; 
0x000000000dfea4: mov eax, 0x76; syscall; 
0x000000000dffd2: mov eax, 0x77; syscall; 
0x000000000dffd1: mov eax, 0x77; syscall; 
0x000000000dfed4: mov eax, 0x78; syscall; 
0x000000000dfdb4: mov eax, 0x79; syscall; 
0x000000000cbb81: mov eax, 0x7; ret; 
0x00000000125a69: mov eax, 0x7; ret; 
0x0000000010d630: mov eax, 0x7; syscall; 
0x000000001192b4: mov eax, 0x7a; syscall; 
0x000000001192e4: mov eax, 0x7b; syscall; 
0x000000000dfe44: mov eax, 0x7c; syscall; 
0x000000000e09ab: mov eax, 0x7d00; ret; 
0x00000000119c54: mov eax, 0x7d; syscall; 
0x000000000e0a70: mov eax, 0x7e; ret; 
0x00000000119c84: mov eax, 0x7e; syscall; 
0x00000000040b7a: mov eax, 0x7f800000; and eax, [rsp-0x4]; sub eax, 0x7f800000; shr eax, 0x1f; ret; 
0x00000000040b58: mov eax, 0x7f800000; and edx, 0x7fffffff; sub eax, edx; shr eax, 0x1f; ret; 
0x000000000e0a5a: mov eax, 0x7f; cmovne rax, rdx; ret; 
0x000000000e0a59: mov eax, 0x7f; cmovne rax, rdx; ret; 
0x000000000e09e7: mov eax, 0x7f; mov edx, 0x7d00; cmove rax, rdx; ret; 
0x000000000e09cd: mov eax, 0x7f; mov edx, 0xfde8; cmove rax, rdx; ret; 
0x00000000041bf9: mov eax, 0x7f; syscall; 
0x000000000da19b: mov eax, 0x7fffffff; cmova rdx, rax; mov eax, 0xd9; syscall; 
0x000000000e098f: mov eax, 0x7fffffff; cmp rdx, 0x58465342; jne short 0x00000000000e09a0; ret; 
0x00000000137800: mov eax, 0x7fffffff; ret; 
0x000000000b858f: mov eax, 0x80; pop rbx; ret; 
0x00000000042641: mov eax, 0x80; syscall; 
0x00000000090e77: mov eax, 0x80; xor eax, eax; movups [rsi+0x70], xmm7; ret; 
0x000000000427a4: mov eax, 0x81; syscall; 
0x00000000041c45: mov eax, 0x82; syscall; 
0x000000000421c4: mov eax, 0x83; syscall; 
0x0000000010848b: mov eax, 0x85; syscall; 
0x0000000011a074: mov eax, 0x86; syscall; 
0x000000001194e4: mov eax, 0x87; syscall; 
0x0000000011652b: mov eax, 0x88; syscall; 
0x0000000003ae96: mov eax, 0x8948001a; ret; 
0x00000000108594: mov eax, 0x89; syscall; 
0x0000000010d700: mov eax, 0x8; mov rdx, r12; mov eax, 0x10f; syscall; 
0x000000000b8588: mov eax, 0x8; pop rbx; ret; 
0x00000000108de4: mov eax, 0x8; syscall; 
0x000000001085c4: mov eax, 0x8a; syscall; 
0x000000000f442b: mov eax, 0x8b000001; test [rsp+rax*2], ah; add [rax], eax; add [rcx], bh; ret; 
0x0000000010f144: mov eax, 0x8c; syscall; 
0x0000000009d60f: mov eax, 0x8d480000; adc eax, 0xccec7; cmovne rax, rdx; ret; 
0x0000000003aeac: mov eax, 0x8d48001a; cmp eax, 0x1aaa8a; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000010f184: mov eax, 0x8d; syscall; 
0x000000000fd174: mov eax, 0x8e; syscall; 
0x000000000fd1a4: mov eax, 0x8f; syscall; 
0x000000000fd1d4: mov eax, 0x90; syscall; 
0x000000000fd204: mov eax, 0x91; syscall; 
0x000000000fd264: mov eax, 0x92; syscall; 
0x000000000fd294: mov eax, 0x93; syscall; 
0x000000000fd2c4: mov eax, 0x94; syscall; 
0x00000000113a44: mov eax, 0x95; syscall; 
0x00000000113a74: mov eax, 0x96; syscall; 
0x00000000113aa4: mov eax, 0x97; syscall; 
0x00000000113ad4: mov eax, 0x98; syscall; 
0x00000000110594: mov eax, 0x99; syscall; 
0x00000000107059: mov eax, 0x9; pop rbp; pop r12; ret; 
0x0000000011381f: mov eax, 0x9; syscall; 
0x00000000119be4: mov eax, 0x9a; syscall; 
0x00000000119f84: mov eax, 0x9b; syscall; 
0x00000000119aba: mov eax, 0x9d; syscall; 
0x00000000052f9e: mov eax, 0x9e; syscall; 
0x000000001100d4: mov eax, 0xa1; syscall; 
0x00000000110194: mov eax, 0xa2; syscall; 
0x000000001100a4: mov eax, 0xa3; syscall; 
0x000000000cd047: mov eax, 0xa4; xor edi, edi; syscall; 
0x00000000119ef7: mov eax, 0xa5; syscall; 
0x00000000119254: mov eax, 0xa6; syscall; 
0x000000001105c4: mov eax, 0xa7; syscall; 
0x000000001105f4: mov eax, 0xa8; syscall; 
0x00000000110290: mov eax, 0xa9; syscall; 
0x0000000013188e: mov eax, 0xa; pop rbx; pop rbp; ret; 
0x000000001138e4: mov eax, 0xa; syscall; 
0x0000000010fd54: mov eax, 0xaa; syscall; 
0x0000000010fe94: mov eax, 0xab; syscall; 
0x000000001191a4: mov eax, 0xac; syscall; 
0x00000000119174: mov eax, 0xad; syscall; 
0x00000000119cb4: mov eax, 0xae; syscall; 
0x00000000119dd7: mov eax, 0xaf; syscall; 
0x00000000119ce4: mov eax, 0xb0; syscall; 
0x00000000119da4: mov eax, 0xb1; syscall; 
0x00000000119fb7: mov eax, 0xb2; syscall; 
0x00000000119fe7: mov eax, 0xb3; syscall; 
0x00000000119f54: mov eax, 0xb4; syscall; 
0x00000000146fb0: mov eax, 0xb8000000; add [rax], eax; add [rax], al; ret; 
0x000000001138b4: mov eax, 0xb; syscall; 
0x00000000041896: mov eax, 0xba; syscall; 
0x00000000119284: mov eax, 0xbb; syscall; 
0x00000000117037: mov eax, 0xbc; syscall; 
0x00000000116fd7: mov eax, 0xbd; syscall; 
0x00000000116eb7: mov eax, 0xbe; syscall; 
0x00000000116ee7: mov eax, 0xbf; syscall; 
0x00000000107d13: mov eax, 0xc00141c0; cmp rdi, rsi; ja short 0x0000000000107d08; mov eax, r8d; ret; 
0x00000000116f47: mov eax, 0xc0; syscall; 
0x00000000116e27: mov eax, 0xc1; syscall; 
0x00000000116f14: mov eax, 0xc2; syscall; 
0x00000000116f74: mov eax, 0xc3; syscall; 
0x00000000116e54: mov eax, 0xc4; syscall; 
0x00000000117004: mov eax, 0xc5; syscall; 
0x00000000116fa4: mov eax, 0xc6; syscall; 
0x00000000116e84: mov eax, 0xc7; syscall; 
0x000000000ccd84: mov eax, 0xc9; syscall; 
0x000000000ede01: mov eax, 0xc; pop rbp; pop r12; ret; 
0x000000000eded0: mov eax, 0xc; ret; 
0x0000000010f224: mov eax, 0xc; syscall; 
0x000000000dda32: mov eax, 0xca; lea rdi, [rip+0x109a62]; syscall; 
0x000000000dd8f2: mov eax, 0xca; lea rdi, [rip+0x109ba2]; syscall; 
0x000000000dd83a: mov eax, 0xca; lea rdi, [rip+0x109c5a]; syscall; 
0x000000000dd75e: mov eax, 0xca; lea rdi, [rip+0x109d2e]; syscall; 
0x000000000dd58e: mov eax, 0xca; lea rdi, [rip+0x109ebe]; syscall; 
0x000000000dd3ca: mov eax, 0xca; lea rdi, [rip+0x10a03a]; syscall; 
0x000000000dd010: mov eax, 0xca; lea rdi, [rip+0x10a39c]; syscall; 
0x000000000dbd62: mov eax, 0xca; lea rdi, [rip+0x10b5c2]; syscall; 
0x000000000dbc22: mov eax, 0xca; lea rdi, [rip+0x10b702]; syscall; 
0x000000000dbb6a: mov eax, 0xca; lea rdi, [rip+0x10b7ba]; syscall; 
0x000000000db79e: mov eax, 0xca; lea rdi, [rip+0x10bb7e]; syscall; 
0x000000000db5ce: mov eax, 0xca; lea rdi, [rip+0x10bd0e]; syscall; 
0x000000000db40a: mov eax, 0xca; lea rdi, [rip+0x10be8a]; syscall; 
0x000000000dab12: mov eax, 0xca; lea rdi, [rip+0x10c72a]; syscall; 
0x000000000ceb3e: mov eax, 0xca; lea rdi, [rip+0x1185f6]; syscall; 
0x000000000ce94a: mov eax, 0xca; lea rdi, [rip+0x1187ea]; syscall; 
0x000000000c667e: mov eax, 0xca; lea rdi, [rip+0x11efd6]; syscall; 
0x0000000009989e: mov eax, 0xca; lea rdi, [rip+0x14a2f6]; syscall; 
0x0000000009b22e: mov eax, 0xca; lea rdi, [rip+0x14bcce]; syscall; 
0x0000000009afaa: mov eax, 0xca; lea rdi, [rip+0x14bf52]; syscall; 
0x0000000009adca: mov eax, 0xca; lea rdi, [rip+0x14c132]; syscall; 
0x0000000009abde: mov eax, 0xca; lea rdi, [rip+0x14c31e]; syscall; 
0x0000000009ab6e: mov eax, 0xca; lea rdi, [rip+0x14c38e]; syscall; 
0x00000000096eee: mov eax, 0xca; lea rdi, [rip+0x14cca6]; syscall; 
0x00000000096e8e: mov eax, 0xca; lea rdi, [rip+0x14cd06]; syscall; 
0x00000000096abe: mov eax, 0xca; lea rdi, [rip+0x14d0d6]; syscall; 
0x0000000009685e: mov eax, 0xca; lea rdi, [rip+0x14d336]; syscall; 
0x00000000096216: mov eax, 0xca; lea rdi, [rip+0x14d97e]; syscall; 
0x000000000961de: mov eax, 0xca; lea rdi, [rip+0x14d9b6]; syscall; 
0x00000000097ebd: mov eax, 0xca; lea rdi, [rip+0x14efb7]; syscall; 
0x00000000097422: mov eax, 0xca; lea rdi, [rip+0x14fa42]; syscall; 
0x000000000930f9: mov eax, 0xca; lea rdi, [rip+0x153d7b]; syscall; 
0x0000000009307d: mov eax, 0xca; lea rdi, [rip+0x153de7]; syscall; 
0x00000000092dd6: mov eax, 0xca; lea rdi, [rip+0x15409e]; syscall; 
0x00000000092b2a: mov eax, 0xca; lea rdi, [rip+0x15434a]; syscall; 
0x0000000009205f: mov eax, 0xca; lea rdi, [rip+0x154795]; syscall; 
0x00000000091eba: mov eax, 0xca; lea rdi, [rip+0x15493a]; syscall; 
0x00000000091d2e: mov eax, 0xca; lea rdi, [rip+0x154ac6]; syscall; 
0x0000000008ff31: mov eax, 0xca; lea rdi, [rip+0x156733]; syscall; 
0x0000000008f9f0: mov eax, 0xca; lea rdi, [rip+0x156c74]; syscall; 
0x0000000008f660: mov eax, 0xca; lea rdi, [rip+0x157004]; syscall; 
0x0000000008f300: mov eax, 0xca; lea rdi, [rip+0x157364]; syscall; 
0x0000000008dbdc: mov eax, 0xca; lea rdi, [rip+0x158a88]; syscall; 
0x0000000008d8ec: mov eax, 0xca; lea rdi, [rip+0x158d78]; syscall; 
0x0000000008d5e8: mov eax, 0xca; lea rdi, [rip+0x15907c]; syscall; 
0x00000000080ccd: mov eax, 0xca; lea rdi, [rip+0x165957]; syscall; 
0x000000000808d1: mov eax, 0xca; lea rdi, [rip+0x165d53]; syscall; 
0x00000000080825: mov eax, 0xca; lea rdi, [rip+0x165dff]; syscall; 
0x0000000007e97e: mov eax, 0xca; lea rdi, [rip+0x166cd6]; syscall; 
0x0000000005f1a2: mov eax, 0xca; lea rdi, [rip+0x18745a]; syscall; 
0x0000000005ef1e: mov eax, 0xca; lea rdi, [rip+0x1876da]; syscall; 
0x0000000005cd9a: mov eax, 0xca; lea rdi, [rip+0x18984a]; syscall; 
0x0000000005cc5a: mov eax, 0xca; lea rdi, [rip+0x18998a]; syscall; 
0x00000000052e82: mov eax, 0xca; lea rdi, [rip+0x193742]; syscall; 
0x00000000052cbe: mov eax, 0xca; lea rdi, [rip+0x193906]; syscall; 
0x000000000527ae: mov eax, 0xca; lea rdi, [rip+0x193e16]; syscall; 
0x000000000503a2: mov eax, 0xca; lea rdi, [rip+0x195ff2]; syscall; 
0x0000000005021e: mov eax, 0xca; lea rdi, [rip+0x196176]; syscall; 
0x000000000501be: mov eax, 0xca; lea rdi, [rip+0x1961d6]; syscall; 
0x00000000045a5a: mov eax, 0xca; lea rdi, [rip+0x1a0902]; syscall; 
0x0000000004599a: mov eax, 0xca; lea rdi, [rip+0x1a09c2]; syscall; 
0x000000000458d2: mov eax, 0xca; lea rdi, [rip+0x1a0a8a]; syscall; 
0x000000000457fa: mov eax, 0xca; lea rdi, [rip+0x1a0b62]; syscall; 
0x000000000448f2: mov eax, 0xca; lea rdi, [rip+0x1a11ea]; syscall; 
0x0000000004482d: mov eax, 0xca; lea rdi, [rip+0x1a12af]; syscall; 
0x0000000004468a: mov eax, 0xca; lea rdi, [rip+0x1a1452]; syscall; 
0x000000000445b1: mov eax, 0xca; lea rdi, [rip+0x1a152b]; syscall; 
0x0000000003d01b: mov eax, 0xca; lea rdi, [rip+0x1a89e1]; syscall; 
0x0000000003b690: mov eax, 0xca; lea rdi, [rip+0x1aa334]; syscall; 
0x0000000003a4df: mov eax, 0xca; lea rdi, [rip+0x1ab435]; syscall; 
0x0000000003a4bf: mov eax, 0xca; lea rdi, [rip+0x1ab455]; syscall; 
0x0000000003a355: mov eax, 0xca; lea rdi, [rip+0x1ab5bf]; syscall; 
0x0000000002ac62: mov eax, 0xca; lea rdi, [rip+0x1ba9f2]; syscall; 
0x0000000002aaf6: mov eax, 0xca; lea rdi, [rip+0x1bab5e]; syscall; 
0x0000000002a9fe: mov eax, 0xca; lea rdi, [rip+0x1bac56]; syscall; 
0x0000000002684c: mov eax, 0xca; lea rdi, [rip+0x1bf258]; syscall; 
0x0000000019197a: mov eax, 0xca; lea rdi, [rip+0x54162]; syscall; 
0x00000000191b3a: mov eax, 0xca; lea rdi, [rip+0x54cba]; syscall; 
0x00000000191e5a: mov eax, 0xca; lea rdi, [rip+0x567f2]; syscall; 
0x0000000015805a: mov eax, 0xca; lea rdi, [rip+0x9107e]; syscall; 
0x00000000156d62: mov eax, 0xca; lea rdi, [rip+0x92376]; syscall; 
0x00000000156c82: mov eax, 0xca; lea rdi, [rip+0x92456]; syscall; 
0x00000000156a9a: mov eax, 0xca; lea rdi, [rip+0x9263e]; syscall; 
0x00000000156a0a: mov eax, 0xca; lea rdi, [rip+0x926ce]; syscall; 
0x0000000015696a: mov eax, 0xca; lea rdi, [rip+0x9276e]; syscall; 
0x000000001568ba: mov eax, 0xca; lea rdi, [rip+0x9281e]; syscall; 
0x000000001564ea: mov eax, 0xca; lea rdi, [rip+0x92bee]; syscall; 
0x0000000014c2ea: mov eax, 0xca; lea rdi, [rip+0x9cbd2]; syscall; 
0x0000000014c18a: mov eax, 0xca; lea rdi, [rip+0x9cd32]; syscall; 
0x0000000014bf7e: mov eax, 0xca; lea rdi, [rip+0x9cf3e]; syscall; 
0x0000000014bdde: mov eax, 0xca; lea rdi, [rip+0x9d0de]; syscall; 
0x0000000014bc4a: mov eax, 0xca; lea rdi, [rip+0x9d272]; syscall; 
0x0000000014bb0a: mov eax, 0xca; lea rdi, [rip+0x9d3b2]; syscall; 
0x0000000014b9aa: mov eax, 0xca; lea rdi, [rip+0x9d512]; syscall; 
0x0000000014b89a: mov eax, 0xca; lea rdi, [rip+0x9d622]; syscall; 
0x0000000014840a: mov eax, 0xca; lea rdi, [rip+0xa0a96]; syscall; 
0x0000000013f4d6: mov eax, 0xca; lea rdi, [rip+0xa977e]; syscall; 
0x0000000013f1a6: mov eax, 0xca; lea rdi, [rip+0xa9aae]; syscall; 
0x0000000013ee26: mov eax, 0xca; lea rdi, [rip+0xa9e2e]; syscall; 
0x0000000013ec28: mov eax, 0xca; lea rdi, [rip+0xaa02c]; syscall; 
0x0000000013ea9e: mov eax, 0xca; lea rdi, [rip+0xaa1b6]; syscall; 
0x0000000013e861: mov eax, 0xca; lea rdi, [rip+0xaa3f3]; syscall; 
0x0000000013de1a: mov eax, 0xca; lea rdi, [rip+0xaad72]; syscall; 
0x0000000013dc99: mov eax, 0xca; lea rdi, [rip+0xaaef3]; syscall; 
0x0000000013dc5f: mov eax, 0xca; lea rdi, [rip+0xaaf2d]; syscall; 
0x0000000013db52: mov eax, 0xca; lea rdi, [rip+0xab03a]; syscall; 
0x0000000013d312: mov eax, 0xca; lea rdi, [rip+0xab87a]; syscall; 
0x0000000013d24a: mov eax, 0xca; lea rdi, [rip+0xab942]; syscall; 
0x0000000013d12e: mov eax, 0xca; lea rdi, [rip+0xaba5e]; syscall; 
0x0000000013bd9b: mov eax, 0xca; lea rdi, [rip+0xacba1]; syscall; 
0x0000000013851a: mov eax, 0xca; lea rdi, [rip+0xb0132]; syscall; 
0x0000000013823e: mov eax, 0xca; lea rdi, [rip+0xb040e]; syscall; 
0x00000000133f5e: mov eax, 0xca; lea rdi, [rip+0xb46da]; syscall; 
0x000000001339de: mov eax, 0xca; lea rdi, [rip+0xb4c3e]; syscall; 
0x0000000013381a: mov eax, 0xca; lea rdi, [rip+0xb4dba]; syscall; 
0x00000000133752: mov eax, 0xca; lea rdi, [rip+0xb4e22]; syscall; 
0x00000000133612: mov eax, 0xca; lea rdi, [rip+0xb4f62]; syscall; 
0x0000000013355a: mov eax, 0xca; lea rdi, [rip+0xb501a]; syscall; 
0x00000000132e6a: mov eax, 0xca; lea rdi, [rip+0xb5702]; syscall; 
0x00000000132b3a: mov eax, 0xca; lea rdi, [rip+0xb5a32]; syscall; 
0x0000000013297e: mov eax, 0xca; lea rdi, [rip+0xb5bee]; syscall; 
0x00000000132464: mov eax, 0xca; lea rdi, [rip+0xb6064]; syscall; 
0x0000000012eb72: mov eax, 0xca; lea rdi, [rip+0xb983a]; syscall; 
0x0000000012ea32: mov eax, 0xca; lea rdi, [rip+0xb997a]; syscall; 
0x0000000012e97a: mov eax, 0xca; lea rdi, [rip+0xb9a32]; syscall; 
0x0000000012e88e: mov eax, 0xca; lea rdi, [rip+0xb9b16]; syscall; 
0x0000000012e6be: mov eax, 0xca; lea rdi, [rip+0xb9cb6]; syscall; 
0x0000000012e4fa: mov eax, 0xca; lea rdi, [rip+0xb9e52]; syscall; 
0x0000000012e432: mov eax, 0xca; lea rdi, [rip+0xb9eca]; syscall; 
0x0000000012e2f2: mov eax, 0xca; lea rdi, [rip+0xba00a]; syscall; 
0x0000000012e23a: mov eax, 0xca; lea rdi, [rip+0xba0c2]; syscall; 
0x0000000012e15a: mov eax, 0xca; lea rdi, [rip+0xba19a]; syscall; 
0x0000000012dc8e: mov eax, 0xca; lea rdi, [rip+0xba5ee]; syscall; 
0x0000000012d6be: mov eax, 0xca; lea rdi, [rip+0xbab5e]; syscall; 
0x0000000012d19e: mov eax, 0xca; lea rdi, [rip+0xbb036]; syscall; 
0x0000000012cfd2: mov eax, 0xca; lea rdi, [rip+0xbb1c2]; syscall; 
0x0000000012ce92: mov eax, 0xca; lea rdi, [rip+0xbb302]; syscall; 
0x0000000012cdda: mov eax, 0xca; lea rdi, [rip+0xbb3ba]; syscall; 
0x0000000012ccfa: mov eax, 0xca; lea rdi, [rip+0xbb492]; syscall; 
0x0000000012c8de: mov eax, 0xca; lea rdi, [rip+0xbb866]; syscall; 
0x0000000012c2c2: mov eax, 0xca; lea rdi, [rip+0xbbe22]; syscall; 
0x0000000012c16a: mov eax, 0xca; lea rdi, [rip+0xbbf7a]; syscall; 
0x0000000012c0aa: mov eax, 0xca; lea rdi, [rip+0xbc03a]; syscall; 
0x0000000012bfc2: mov eax, 0xca; lea rdi, [rip+0xbc11a]; syscall; 
0x0000000012bede: mov eax, 0xca; lea rdi, [rip+0xbc1c6]; syscall; 
0x0000000012b87e: mov eax, 0xca; lea rdi, [rip+0xbc7e6]; syscall; 
0x0000000012b672: mov eax, 0xca; lea rdi, [rip+0xbc9aa]; syscall; 
0x0000000012b51a: mov eax, 0xca; lea rdi, [rip+0xbcb02]; syscall; 
0x0000000012b45a: mov eax, 0xca; lea rdi, [rip+0xbcbc2]; syscall; 
0x0000000012b372: mov eax, 0xca; lea rdi, [rip+0xbcca2]; syscall; 
0x0000000012a75e: mov eax, 0xca; lea rdi, [rip+0xbd83e]; syscall; 
0x0000000012a4ee: mov eax, 0xca; lea rdi, [rip+0xbda6e]; syscall; 
0x00000000129d6e: mov eax, 0xca; lea rdi, [rip+0xbe18e]; syscall; 
0x00000000120312: mov eax, 0xca; lea rdi, [rip+0xc7b32]; syscall; 
0x000000001201d2: mov eax, 0xca; lea rdi, [rip+0xc7c72]; syscall; 
0x0000000012011a: mov eax, 0xca; lea rdi, [rip+0xc7d2a]; syscall; 
0x0000000011fd40: mov eax, 0xca; lea rdi, [rip+0xc80fc]; syscall; 
0x0000000011fb16: mov eax, 0xca; lea rdi, [rip+0xc82ee]; syscall; 
0x0000000011f94e: mov eax, 0xca; lea rdi, [rip+0xc846e]; syscall; 
0x0000000011f78a: mov eax, 0xca; lea rdi, [rip+0xc85ea]; syscall; 
0x0000000011f6ba: mov eax, 0xca; lea rdi, [rip+0xc8666]; syscall; 
0x0000000011f5ea: mov eax, 0xca; lea rdi, [rip+0xc8736]; syscall; 
0x0000000011f54e: mov eax, 0xca; lea rdi, [rip+0xc87d2]; syscall; 
0x0000000011eab2: mov eax, 0xca; lea rdi, [rip+0xc923a]; syscall; 
0x0000000011e972: mov eax, 0xca; lea rdi, [rip+0xc937a]; syscall; 
0x0000000011e8ba: mov eax, 0xca; lea rdi, [rip+0xc9432]; syscall; 
0x0000000011e2c0: mov eax, 0xca; lea rdi, [rip+0xc9a24]; syscall; 
0x0000000011e0be: mov eax, 0xca; lea rdi, [rip+0xc9bce]; syscall; 
0x0000000011dede: mov eax, 0xca; lea rdi, [rip+0xc9d46]; syscall; 
0x0000000011dd1a: mov eax, 0xca; lea rdi, [rip+0xc9ea2]; syscall; 
0x0000000011361a: mov eax, 0xca; lea rdi, [rip+0xd422a]; syscall; 
0x000000001134fe: mov eax, 0xca; lea rdi, [rip+0xd4346]; syscall; 
0x0000000011309e: mov eax, 0xca; lea rdi, [rip+0xd47a6]; syscall; 
0x00000000112b6d: mov eax, 0xca; lea rdi, [rip+0xd4cd7]; syscall; 
0x0000000010155e: mov eax, 0xca; lea rdi, [rip+0xe6056]; syscall; 
0x000000000272c3: mov eax, 0xca; syscall; 
0x0000000015c736: mov eax, 0xcb; mov esi, 0x80; syscall; 
0x0000000015c737: mov eax, 0xcb; mov esi, 0x80; syscall; 
0x000000000fd364: mov eax, 0xcb; syscall; 
0x000000000fd303: mov eax, 0xcc; cmovbe rsi, r8; syscall; 
0x0000000009135d: mov eax, 0xcc; cmp rsi, 0x7fffffff; mov esi, 0x7fffffff; cmovbe rsi, r8; syscall; 
0x0000000015c6c6: mov eax, 0xcc; mov esi, 0x80; syscall; 
0x0000000015c6c7: mov eax, 0xcc; mov esi, 0x80; syscall; 
0x000000000913b2: mov eax, 0xcc; syscall; 
0x00000000119d14: mov eax, 0xd5; syscall; 
0x00000000113a17: mov eax, 0xd8; syscall; 
0x000000000da1a4: mov eax, 0xd9; syscall; 
0x00000000041a1f: mov eax, 0xd; syscall; 
0x0000000011b237: mov eax, 0xdc; syscall; 
0x0000000010d7d7: mov eax, 0xdd; syscall; 
0x000000000462ff: mov eax, 0xdeece66d; add eax, 0x48000000; mov [rsi+0x10], eax; xor eax, eax; ret; 
0x0000000012c7df: mov eax, 0xe03d8348; ret far; 
0x0000000014d26a: mov eax, 0xe0; add [rax-0x77], cl; ret; 
0x000000000d8f6e: mov eax, 0xe3; syscall; 
0x000000000d8f45: mov eax, 0xe4; syscall; 
0x000000000d8ed5: mov eax, 0xe5; syscall; 
0x000000000d8e48: mov eax, 0xe5; xor esi, esi; lea edi, [rdi*8+0x2]; syscall; 
0x000000000d8e49: mov eax, 0xe5; xor esi, esi; lea edi, [rdi*8+0x2]; syscall; 
0x000000000d9003: mov eax, 0xe6; syscall; 
0x00000000119523: mov eax, 0xe8; syscall; 
0x00000000119d77: mov eax, 0xe9; syscall; 
0x000000000418c4: mov eax, 0xe; syscall; 
0x000000000418a2: mov eax, 0xea; syscall; 
0x0000000014db5d: mov eax, 0xf000000; adc [rsp+0xd8], eax; call rax; 
0x00000000146f93: mov eax, 0xf000000; enter 0xc089, 0x48; mov [rdx], eax; mov eax, 0x1; ret; 
0x000000000de6f6: mov eax, 0xf7; syscall; 
0x000000000fd829: mov eax, 0xf; cmp dx, 0x2; je short 0x00000000000fd838; ret; 
0x00000000041951: mov eax, 0xf; syscall; 
0x000000000d025d: mov eax, 0xfa89051e; ror edx, 0x2; cmp edx, 0x28f5c28; jbe short 0x00000000000d0270; ret; 
0x000000000e0a68: mov eax, 0xfc17; ret; 
0x0000000015995d: mov eax, 0xfcfdede8; jmp qword ptr [rsi+0x66]; 
0x00000000119e34: mov eax, 0xfd; syscall; 
0x00000000148d6c: mov eax, 0xfe09dee8; jmp qword ptr [rsi+0x66]; 
0x00000000044633: mov eax, 0xfe1d07e8; dec dword ptr [rax-0x77]; pop rbp; mov eax, 0xfffd97e9; jmp qword ptr [rbx+rcx*4+0x4]; 
0x00000000141e8c: mov eax, 0xfe78bee8; jmp qword ptr [rsi+0x66]; 
0x00000000119e04: mov eax, 0xfe; syscall; 
0x000000000e0b98: mov eax, 0xff; ret; 
0x00000000119e94: mov eax, 0xff; syscall; 
0x000000001290a1: mov eax, 0xffef79e8; jmp qword ptr [rsi+0xf]; 
0x000000000f08f0: mov eax, 0xfffa7be9; jmp qword ptr [rsi+0xf]; 
0x000000000e0a17: mov eax, 0xfffa; ret; 
0x00000000128471: mov eax, 0xfffba9e8; jmp qword ptr [rsi+0xf]; 
0x0000000004463c: mov eax, 0xfffd97e9; jmp qword ptr [rbx+rcx*4+0x4]; 
0x00000000055c60: mov eax, 0xffffc002; sub eax, ecx; mov [rdx], eax; mov eax, 0x1; ret; 
0x00000000055e2d: mov eax, 0xffffc002; sub eax, r8d; mov [rsi], eax; mov eax, 0x2; ret; 
0x0000000015a959: mov eax, 0xfffffffe; ret; 
0x0000000004239a: mov eax, 0xfffffffe; rol rax, cl; and [rdi], rax; xor eax, eax; ret; 
0x000000000d8ec3: mov eax, 0xffffffff; add rsp, 0x8; pop rbp; pop r12; ret; 
0x00000000136b16: mov eax, 0xffffffff; cmove eax, edx; ret; 
0x00000000156c9a: mov eax, 0xffffffff; mov dword ptr fs:[rax], 0x16; mov eax, r8d; mov qword ptr [rdx], 0x0; ret; 
0x00000000081d7d: mov eax, 0xffffffff; mov eax, r8d; pop rbp; pop r12; ret; 
0x000000000c2d2e: mov eax, 0xffffffff; mov eax, r8d; pop rbx; ret; 
0x00000000052ebf: mov eax, 0xffffffff; mov eax, r8d; ret; 
0x0000000015c71a: mov eax, 0xffffffff; mov fs:[rdx], eax; mov eax, r8d; ret; 
0x00000000137781: mov eax, 0xffffffff; mov rdx, 0xffffffffffffffff; ret; 
0x000000000446ee: mov eax, 0xffffffff; pop rbp; pop r12; pop r13; ret; 
0x00000000083f19: mov eax, 0xffffffff; pop rbp; pop r12; ret; 
0x0000000003fb8e: mov eax, 0xffffffff; pop rbp; ret; 
0x0000000007fc5c: mov eax, 0xffffffff; pop rbx; pop rbp; ret; 
0x0000000008ab93: mov eax, 0xffffffff; pop rbx; ret; 
0x000000000417ef: mov eax, 0xffffffff; ret; 
0x00000000029326: mov eax, 0xffffffff; ret; 
0x00000000089b7e: mov eax, 0xffffffff; test edx, edx; je short 0x0000000000089b90; ret; 
0x00000000089f9e: mov eax, 0xffffffff; test edx, edx; je short 0x0000000000089fb0; ret; 
0x00000000091956: mov eax, [0x10]; ret; 
0x000000001199a3: mov eax, [0x1600c764000c94]; add [rax], al; mov eax, 0xffffffff; ret; 
0x00000000082fab: mov eax, [0x18244c8b48ffff72]; sub rcx, fs:[0x28]; jne short 0x0000000000082fc7; add rsp, 0xd8; ret; 
0x000000000463c5: mov eax, [0x18]; test eax, eax; jne short 0x00000000000463e0; mov eax, 0x13e; syscall; 
0x000000000de638: mov eax, [0x18]; test eax, eax; jne short 0x00000000000de658; mov eax, 0x3d; syscall; 
0x000000000de845: mov eax, [0x18]; test eax, eax; jne short 0x00000000000de860; mov eax, 0x22; syscall; 
0x00000000106c98: mov eax, [0x18]; test eax, eax; jne short 0x0000000000106cb8; mov eax, 0x11; syscall; 
0x00000000106d48: mov eax, [0x18]; test eax, eax; jne short 0x0000000000106d68; mov eax, 0x12; syscall; 
0x00000000108b74: mov eax, [0x18]; test eax, eax; jne short 0x0000000000108be0; mov eax, 0x101; syscall; 
0x00000000108ca5: mov eax, [0x18]; test eax, eax; jne short 0x0000000000108cc0; syscall; 
0x00000000108d45: mov eax, [0x18]; test eax, eax; jne short 0x0000000000108d60; mov eax, 0x1; syscall; 
0x000000001091b9: mov eax, [0x18]; test eax, eax; jne short 0x00000000001091f0; mov eax, 0x48; syscall; 
0x000000001094e5: mov eax, [0x18]; test eax, eax; jne short 0x0000000000109500; mov eax, 0x3; syscall; 
0x00000000109665: mov eax, [0x18]; test eax, eax; jne short 0x0000000000109680; mov eax, 0x55; syscall; 
0x0000000010d625: mov eax, [0x18]; test eax, eax; jne short 0x000000000010d640; mov eax, 0x7; syscall; 
0x0000000010dcc8: mov eax, [0x18]; test eax, eax; jne short 0x000000000010dce8; mov eax, 0x146; syscall; 
0x0000000010e168: mov eax, [0x18]; test eax, eax; jne short 0x000000000010e188; mov eax, 0x115; syscall; 
0x0000000010e218: mov eax, [0x18]; test eax, eax; jne short 0x000000000010e238; mov eax, 0x11d; syscall; 
0x0000000010f345: mov eax, [0x18]; test eax, eax; jne short 0x000000000010f360; mov eax, 0x13; syscall; 
0x0000000010f3e5: mov eax, [0x18]; test eax, eax; jne short 0x000000000010f400; mov eax, 0x14; syscall; 
0x0000000010fec8: mov eax, [0x18]; test eax, eax; jne short 0x000000000010fee8; mov eax, 0x17; syscall; 
0x00000000110105: mov eax, [0x18]; test eax, eax; jne short 0x0000000000110120; mov eax, 0x4a; syscall; 
0x000000001101c5: mov eax, [0x18]; test eax, eax; jne short 0x00000000001101e0; mov eax, 0x4b; syscall; 
0x00000000112b31: mov eax, [0x18]; test eax, eax; jne short 0x0000000000112b48; sub dword ptr [rip+0xd4d0d], 0x1; ret; 
0x00000000113915: mov eax, [0x18]; test eax, eax; jne short 0x0000000000113930; mov eax, 0x1a; syscall; 
0x00000000119518: mov eax, [0x18]; test eax, eax; jne short 0x0000000000119538; mov eax, 0xe8; syscall; 
0x000000001195c8: mov eax, [0x18]; test eax, eax; jne short 0x00000000001195e8; mov eax, 0x114; syscall; 
0x00000000119678: mov eax, [0x18]; test eax, eax; jne short 0x0000000000119698; mov eax, 0x116; syscall; 
0x00000000119728: mov eax, [0x18]; test eax, eax; jne short 0x0000000000119748; mov eax, 0x113; syscall; 
0x000000001197f5: mov eax, [0x18]; test eax, eax; jne short 0x0000000000119810; mov eax, 0x130; syscall; 
0x0000000011a255: mov eax, [0x18]; test eax, eax; jne short 0x000000000011a270; mov eax, 0x2b; syscall; 
0x0000000011a325: mov eax, [0x18]; test eax, eax; jne short 0x000000000011a340; mov eax, 0x2a; syscall; 
0x0000000011a548: mov eax, [0x18]; test eax, eax; jne short 0x000000000011a568; mov eax, 0x2d; syscall; 
0x0000000011a605: mov eax, [0x18]; test eax, eax; jne short 0x000000000011a620; mov eax, 0x2f; syscall; 
0x0000000011a765: mov eax, [0x18]; test eax, eax; jne short 0x000000000011a780; mov eax, 0x2e; syscall; 
0x0000000011a808: mov eax, [0x18]; test eax, eax; jne short 0x000000000011a828; mov eax, 0x2c; syscall; 
0x0000000011ac68: mov eax, [0x18]; test eax, eax; jne short 0x000000000011ac88; mov eax, 0x120; syscall; 
0x0000000011ad18: mov eax, [0x18]; test eax, eax; jne short 0x000000000011ad38; mov eax, 0x12b; syscall; 
0x0000000011add8: mov eax, [0x18]; test eax, eax; jne short 0x000000000011adf8; mov eax, 0x133; syscall; 
0x0000000011af78: mov eax, [0x18]; test eax, eax; jne short 0x000000000011af98; mov eax, 0x45; syscall; 
0x0000000011b028: mov eax, [0x18]; test eax, eax; jne short 0x000000000011b048; mov eax, 0x46; syscall; 
0x0000000012e4b2: mov eax, [0x1989416401000b9e]; mov rax, r8; pop rbx; ret; 
0x0000000012c24a: mov eax, [0x1989416401000bbe]; add rsp, 0x20; mov eax, r8d; pop rbx; ret; 
0x0000000008dc1d: mov eax, [0x1bad23145fffffe]; add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; syscall; 
0x000000001170a3: mov eax, [0x200c764000cbd]; add [rax], al; xor eax, eax; ret; 
0x000000000d8e93: mov eax, [0x250808b4800109f]; add [rax], al; test rax, rax; je short 0x00000000000d8ed0; call rax; 
0x000000001284a3: mov eax, [0x28964d8f7000ba9]; mov rax, 0xffffffffffffffff; ret; 
0x000000001102a3: mov eax, [0x28964d8f7000d2b]; mov eax, 0xffffffff; ret; 
0x000000001084a3: mov eax, [0x28964d8f7000da9]; mov eax, 0xffffffff; ret; 
0x00000000041ca3: mov eax, [0x28964d8f7001a11]; mov eax, 0xffffffff; ret; 
0x000000000cc33c: mov eax, [0x28]; mov [rsp+0x58], rax; xor eax, eax; mov [rsp+0x50], r12; call rbx; 
0x0000000015916b: mov eax, [0x28]; mov [rsp+0x68], rax; xor eax, eax; call qword ptr [r12+0xf88]; 
0x00000000050256: mov eax, [0x28]; mov [rsp+0x8], rax; xor eax, eax; mov eax, 0x3e; syscall; 
0x000000000795c0: mov eax, [0x2949e8894dfffffe]; ror byte ptr [rbp+0xf], 0x48; ret; 
0x000000001721eb: mov eax, [0x2e6666c3c3000001]; nop [rax+rax]; nop [rax]; mov [rcx], dl; ret; 
0x00000000108d14: mov eax, [0x48028964d8f7000d]; mov eax, 0xffffffff; ret; 
0x0000000012e1e1: mov eax, [0x480889456401000b]; add esp, 0x18; ret; 
0x0000000012e113: mov eax, [0x4c1989416401000b]; mov eax, eax; pop rbx; ret; 
0x000000001679bb: mov eax, [0x68a1d8d4c000000]; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001840e0: mov eax, [0x77f8c5e0075c7f7e]; ret; 
0x00000000184165: mov eax, [0x77f8c5f007447f7a]; ret; 
0x000000001840c0: mov eax, [0x77f8c5f0075c7f7a]; ret; 
0x00000000028c9d: mov eax, [0x8b480c247c8b001b]; xor al, 0x24; mov rdx, [rax]; mov rax, [rsp+0x10]; call rax; 
0x00000000105a18: mov eax, [0xaf0163d8d48000a]; add al, ch; sub [rax], esi; jmp qword ptr [rsi+0xf]; 
0x0000000006a5ab: mov eax, [0xc756158d48fffffa]; adc eax, [rax]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000009c5fb: mov eax, [0xcb7401c6f6000e66]; ret; 
0x0000000014ba59: mov eax, [0xeb158d481e6affff]; mov al, [0x4c00000002beffff]; lea ecx, [rsp+0x14]; call qword ptr [rax]; 
0x0000000005cca3: mov eax, [0xffffffb841001861]; jmp qword ptr [rdi+rax*8]; 
0x0000000011f2d9: mov eax, [r12]; pop rbx; pop rbp; pop r12; ret; 
0x00000000146f30: mov eax, [r8]; mov [rdx], eax; mov eax, 0x1; ret; 
0x00000000159cd8: mov eax, [rax+0x10]; add rsp, 0x38; jmp rax; 
0x0000000014f892: mov eax, [rax+0x10]; add rsp, 0x8; pop rbp; pop r12; jmp rax; 
0x00000000045728: mov eax, [rax+0x10]; pop rbx; mov qword ptr [rip+0x1a0c29], 0x0; mov eax, [rax+0x58]; ret; 
0x00000000091f9f: mov eax, [rax+0x10]; test rax, rax; je short 0x0000000000091fa9; call rax; 
0x0000000011c0d8: mov eax, [rax+0x18]; add dword ptr [rax], 0x1; ret; 
0x00000000159bed: mov eax, [rax+0x18]; add rsp, 0x68; jmp rax; 
0x0000000014f852: mov eax, [rax+0x18]; add rsp, 0x8; pop rbp; pop r12; jmp rax; 
0x0000000011c0c8: mov eax, [rax+0x18]; add word ptr [rax], 0x1; ret; 
0x0000000014133b: mov eax, [rax+0x18]; jmp rax; 
0x00000000044a61: mov eax, [rax+0x18]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000013bf3b: mov eax, [rax+0x18]; test eax, eax; jne short 0x000000000013bf48; ret; 
0x0000000010fbac: mov eax, [rax+0x18]; test rax, rax; je short 0x000000000010fbb5; ret; 
0x00000000086265: mov eax, [rax+0x20]; jmp rax; 
0x000000000d8f08: mov eax, [rax+0x230]; test rax, rax; je short 0x00000000000d8f40; call rax; 
0x00000000143813: mov eax, [rax+0x23b8]; mov rdi, r12; call qword ptr [rax+0x28]; 
0x00000000107ea9: mov eax, [rax+0x248]; test rax, rax; je short 0x0000000000107ee8; xor edx, edx; call rax; 
0x000000000d8e98: mov eax, [rax+0x250]; test rax, rax; je short 0x00000000000d8ed0; call rax; 
0x000000001170c1: mov eax, [rax+0x258]; ret; 
0x00000000159743: mov eax, [rax+0x268]; jmp rax; 
0x00000000126b30: mov eax, [rax+0x30]; ret; 
0x0000000014c338: mov eax, [rax+0x38]; mov rdi, r8; call qword ptr [rax+0x20]; 
0x0000000011c97b: mov eax, [rax+0x38]; ret; 
0x00000000116e10: mov eax, [rax+0x38]; test eax, eax; cmove eax, edx; ret; 
0x00000000142b1e: mov eax, [rax+0x38]; test rax, rax; je 0x00000000001429ae; mov rdi, rbx; call rax; 
0x00000000141420: mov eax, [rax+0x38]; test rax, rax; je short 0x000000000014142d; mov rdi, rbp; call rax; 
0x000000001418b7: mov eax, [rax+0x38]; test rax, rax; je short 0x00000000001418c4; mov rdi, rbp; call rax; 
0x000000001428b6: mov eax, [rax+0x38]; test rax, rax; je short 0x00000000001428c3; mov rdi, rbx; call rax; 
0x00000000142c0c: mov eax, [rax+0x38]; test rax, rax; je short 0x0000000000142c19; mov rdi, rbx; call rax; 
0x00000000143434: mov eax, [rax+0x38]; test rax, rax; je short 0x0000000000143441; mov rdi, r13; call rax; 
0x00000000146e41: mov eax, [rax+0x38]; test rax, rax; je short 0x0000000000146e52; lea rdi, [rbp+0xc8]; call rax; 
0x00000000147887: mov eax, [rax+0x38]; test rax, rax; je short 0x0000000000147894; mov rdi, rbp; call rax; 
0x00000000147a6c: mov eax, [rax+0x38]; test rax, rax; je short 0x0000000000147a7b; lea rdi, [r12+0x10]; call rax; 
0x00000000148d2b: mov eax, [rax+0x38]; test rax, rax; je short 0x0000000000148d38; mov rdi, rbp; call rax; 
0x00000000148f00: mov eax, [rax+0x38]; test rax, rax; je short 0x0000000000148f0d; mov rdi, r13; call rax; 
0x00000000149c1e: mov eax, [rax+0x38]; test rax, rax; je short 0x0000000000149c2c; lea rdi, [rbp+0x68]; call rax; 
0x0000000014a346: mov eax, [rax+0x38]; test rax, rax; je short 0x000000000014a353; mov rdi, rbp; call rax; 
0x0000000014a6be: mov eax, [rax+0x38]; test rax, rax; je short 0x000000000014a6cc; lea rdi, [rbp+0x58]; call rax; 
0x0000000014df8c: mov eax, [rax+0x38]; test rax, rax; je short 0x000000000014df9b; lea rdi, [r12+0x10]; call rax; 
0x0000000014e6d5: mov eax, [rax+0x38]; test rax, rax; je short 0x000000000014e6e4; lea rdi, [r12+0x10]; call rax; 
0x00000000149bc1: mov eax, [rax+0x40]; mov [rsi+0x10], rax; ret; 
0x00000000038f46: mov eax, [rax+0x40]; movzx eax, word ptr [rax+rdi*2+0x100]; and eax, esi; ret; 
0x00000000038d56: mov eax, [rax+0x48]; mov eax, [rax+rdi*4+0x200]; ret; 
0x00000000038ce6: mov eax, [rax+0x48]; mov eax, [rax+rdx*4]; ret; 
0x0000000014a4f1: mov eax, [rax+0x50]; mov [rsi+0x10], rax; ret; 
0x00000000038d26: mov eax, [rax+0x58]; mov eax, [rax+rdi*4+0x200]; ret; 
0x00000000038cb6: mov eax, [rax+0x58]; mov eax, [rax+rdx*4]; ret; 
0x00000000038fff: mov eax, [rax+0x58]; mov rdx, [rip+0x1a9ef7]; add rax, 0x200; mov fs:[rdx], rax; ret; 
0x0000000004557e: mov eax, [rax+0x58]; ret; 
0x0000000008ed50: mov eax, [rax+0x68]; test rax, rax; jne short 0x000000000008ed48; ret; 
0x0000000014fac7: mov eax, [rax+0x8]; add rsp, 0x10; pop rbp; jmp rax; 
0x0000000011709b: mov eax, [rax+0x8]; ret; 
0x00000000091fdf: mov eax, [rax+0x8]; test rax, rax; je short 0x0000000000091fe9; call rax; 
0x0000000009b8bb: mov eax, [rax+0x8]; test rax, rax; jne short 0x000000000009b8b0; xor eax, eax; ret; 
0x0000000009b997: mov eax, [rax+0x8]; test rax, rax; jne short 0x000000000009b990; mov eax, r8d; ret; 
0x00000000146dd4: mov eax, [rax+0xa0]; mov [rsi+0x10], rax; ret; 
0x000000000373b2: mov eax, [rax+0xa8]; ret; 
0x00000000083e15: mov eax, [rax+0xe0]; call qword ptr [rax+0x68]; 
0x00000000083f4a: mov eax, [rax+0xe0]; mov esi, 0xffffffff; call qword ptr [rax+0x18]; 
0x0000000008625e: mov eax, [rax+0xe0]; mov rax, [rax+0x20]; jmp rax; 
0x0000000008157a: mov eax, [rax+0xe0]; mov rdx, r12; mov rsi, rbp; mov rdi, rbx; call qword ptr [rax+0x58]; 
0x0000000003564e: mov eax, [rax+rbp*8]; test rax, rax; je short 0x0000000000035658; call rax; 
0x000000000358cf: mov eax, [rax+rbx*8]; test rax, rax; je short 0x00000000000358d9; call rax; 
0x00000000191526: mov eax, [rax+rbx*8]; test rax, rax; je short 0x0000000000191530; call rax; 
0x0000000011caaa: mov eax, [rax+rcx]; mov ecx, edi; shr eax, cl; and eax, 0x1; ret; 
0x00000000038d29: mov eax, [rax+rdi*4+0x200]; ret; 
0x00000000038f1b: mov eax, [rax+rdi*4]; ret; 
0x00000000038823: mov eax, [rax+rdi*8+0x80]; ret; 
0x0000000007cd39: mov eax, [rax+rdi*8]; ret; 
0x00000000038cb9: mov eax, [rax+rdx*4]; ret; 
0x0000000011d2d8: mov eax, [rax+rdx]; shr eax, cl; and eax, 0x1; ret; 
0x0000000011cce9: mov eax, [rax+rdx]; shr r8d, cl; and r8d, 0x1; mov eax, r8d; ret; 
0x0000000009c5e6: mov eax, [rax]; add [rax-0x73], cl; adc eax, 0x138a0; cmovne rax, rdx; ret; 
0x0000000009c6b6: mov eax, [rax]; add [rax-0x73], cl; adc eax, 0xd3c80; cmovne rax, rdx; ret; 
0x00000000149d61: mov eax, [rax]; bswap eax; mov [rdi+0x54], eax; mov eax, 0x1; ret; 
0x00000000149d41: mov eax, [rax]; bswap eax; mov [rdi+0x58], eax; mov eax, 0x1; ret; 
0x00000000108435: mov eax, [rax]; cmp eax, 0x26; je short 0x0000000000108440; mov eax, r9d; ret; 
0x000000000464b8: mov eax, [rax]; cmp eax, 0x4; je short 0x0000000000046480; mov eax, 0xffffffff; ret; 
0x000000000f977c: mov eax, [rax]; mov [rax], rdi; mov rax, r8; ret; 
0x00000000146f31: mov eax, [rax]; mov [rdx], eax; mov eax, 0x1; ret; 
0x000000000373b0: mov eax, [rax]; mov eax, [rax+0xa8]; ret; 
0x00000000084963: mov eax, [rax]; mov eax, r8d; ret; 
0x00000000038f43: mov eax, [rax]; mov rax, [rax+0x40]; movzx eax, word ptr [rax+rdi*2+0x100]; and eax, esi; ret; 
0x00000000038d53: mov eax, [rax]; mov rax, [rax+0x48]; mov eax, [rax+rdi*4+0x200]; ret; 
0x00000000038ce3: mov eax, [rax]; mov rax, [rax+0x48]; mov eax, [rax+rdx*4]; ret; 
0x00000000038d23: mov eax, [rax]; mov rax, [rax+0x58]; mov eax, [rax+rdi*4+0x200]; ret; 
0x00000000038cb3: mov eax, [rax]; mov rax, [rax+0x58]; mov eax, [rax+rdx*4]; ret; 
0x00000000038820: mov eax, [rax]; mov rax, [rax+rdi*8+0x80]; ret; 
0x000000000373ad: mov eax, [rax]; mov rax, [rax]; mov eax, [rax+0xa8]; ret; 
0x00000000038d50: mov eax, [rax]; mov rax, [rax]; mov rax, [rax+0x48]; mov eax, [rax+rdi*4+0x200]; ret; 
0x00000000038ce0: mov eax, [rax]; mov rax, [rax]; mov rax, [rax+0x48]; mov eax, [rax+rdx*4]; ret; 
0x00000000038d20: mov eax, [rax]; mov rax, [rax]; mov rax, [rax+0x58]; mov eax, [rax+rdi*4+0x200]; ret; 
0x00000000038cb0: mov eax, [rax]; mov rax, [rax]; mov rax, [rax+0x58]; mov eax, [rax+rdx*4]; ret; 
0x00000000038c80: mov eax, [rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x1000; ret; 
0x00000000038c60: mov eax, [rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x100; ret; 
0x00000000038d00: mov eax, [rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x1; ret; 
0x00000000038c40: mov eax, [rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x2000; ret; 
0x00000000038bc0: mov eax, [rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x200; ret; 
0x00000000038b80: mov eax, [rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x2; ret; 
0x00000000038c00: mov eax, [rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x4000; ret; 
0x00000000038b60: mov eax, [rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x400; ret; 
0x00000000038c20: mov eax, [rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x4; ret; 
0x00000000038be0: mov eax, [rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x8000; ret; 
0x00000000038ba0: mov eax, [rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x800; ret; 
0x00000000038b40: mov eax, [rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x8; ret; 
0x00000000126b84: mov eax, [rax]; movzx eax, word ptr [rax+rdx*2]; shr ax, 0xe; and eax, 0x1; ret; 
0x0000000004557b: mov eax, [rax]; pop rbx; mov eax, [rax+0x58]; ret; 
0x00000000090da9: mov eax, [rax]; ret; 
0x00000000116346: mov eax, [rax]; test rax, rax; je 0x0000000000116440; call rax; 
0x00000000091f27: mov eax, [rax]; test rax, rax; je short 0x0000000000091f30; call rax; 
0x0000000009664a: mov eax, [rax]; test rax, rax; je short 0x0000000000096653; call rax; 
0x00000000116167: mov eax, [rax]; test rax, rax; je short 0x00000000001161d0; call rax; 
0x0000000008fb59: mov eax, [rax]; test rax, rax; jne short 0x000000000008fb50; ret; 
0x00000000093892: mov eax, [rax]; test rax, rax; jne short 0x00000000000938d0; xor edi, edi; call qword ptr [r13]; 
0x0000000014e72f: mov eax, [rbp+0x18]; lea r13, [rbp+0x10]; mov dword ptr [rbp+0x10], 0x0; mov rdi, r13; call qword ptr [rax+0x28]; 
0x0000000014e75b: mov eax, [rbp+0x18]; mov rdi, r13; call qword ptr [rax+0x20]; 
0x0000000007ef76: mov eax, [rbp+0x31]; sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; syscall; 
0x000000000eaba0: mov eax, [rbp+0x4c]; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000014b30d: mov eax, [rbp+0x60]; mov rdi, r13; call qword ptr [rax+0x20]; 
0x0000000014241a: mov eax, [rbp+0x8]; call qword ptr [rax+0x28]; 
0x00000000150845: mov eax, [rbp+0x8]; call qword ptr [rax+0x8]; 
0x000000001430c1: mov eax, [rbp+0x8]; lea esi, [r12+0x3]; mov rdi, rbp; and esi, 0xfffffffc; call qword ptr [rax+0x30]; 
0x00000000148771: mov eax, [rbp+0x8]; lea rsi, [rbx+0x18]; mov rdi, rbp; call qword ptr [rax+0x48]; 
0x0000000014fbb9: mov eax, [rbp+0x8]; lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax+0x8]; 
0x0000000014fb60: mov eax, [rbp+0x8]; lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax]; 
0x00000000150af7: mov eax, [rbp+0x8]; lea rsi, [rsp+0x4]; mov rdi, rbp; call qword ptr [rax+0x40]; 
0x00000000150b48: mov eax, [rbp+0x8]; lea rsi, [rsp+0x4]; mov rdi, rbp; call qword ptr [rax+0x48]; 
0x00000000143e2f: mov eax, [rbp+0x8]; lea rsi, [rsp+0x8]; mov rdi, rbp; call qword ptr [rax+0x8]; 
0x000000001486d2: mov eax, [rbp+0x8]; lea rsi, [rsp+0xc]; mov rdi, rbp; call qword ptr [rax+0x48]; 
0x0000000014cc5a: mov eax, [rbp+0x8]; mov dword ptr [r12], 0xe; lea rsi, [r12+0x8]; mov rdi, rbp; call qword ptr [rax+0x10]; 
0x0000000014867b: mov eax, [rbp+0x8]; mov dword ptr [rsp+0xc], 0xc; mov esi, 0x8; mov rdi, rbp; call qword ptr [rax+0x30]; 
0x00000000143032: mov eax, [rbp+0x8]; mov esi, 0x20; mov rdi, rbp; call qword ptr [rax+0x30]; 
0x000000001430eb: mov eax, [rbp+0x8]; mov esi, 0x8; mov rdi, rbp; call qword ptr [rax+0x30]; 
0x00000000148642: mov eax, [rbp+0x8]; mov esi, 0x8; mov rdi, rbp; mov [r12+0x70], edx; call qword ptr [rax+0x30]; 
0x00000000142435: mov eax, [rbp+0x8]; mov esi, r14d; mov rdi, rbp; call qword ptr [rax+0x28]; 
0x00000000141f84: mov eax, [rbp+0x8]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x0000000014db81: mov eax, [rbp+0x8]; mov rdi, rbp; call qword ptr [rax+0x28]; 
0x0000000014da21: mov eax, [rbp+0x8]; mov rdi, rbp; call qword ptr [rax+0x8]; 
0x000000001423b9: mov eax, [rbp+0x8]; mov rdi, rbp; mov qword ptr [rsp], 0x0; call qword ptr [rax+0x20]; 
0x00000000143df3: mov eax, [rbp+0x8]; mov rsi, r12; mov rdi, rbp; call qword ptr [rax]; 
0x000000001486c1: mov eax, [rbp+0x8]; mov rsi, rbx; mov rdi, rbp; call qword ptr [rax+0x48]; 
0x0000000014da3c: mov eax, [rbp+0x8]; mov rsi, rbx; mov rdi, rbp; call qword ptr [rax]; 
0x0000000015080e: mov eax, [rbp+0x8]; mov rsi, rsp; mov rdi, rbp; call qword ptr [rax]; 
0x0000000014c05a: mov eax, [rbp+0x8]; pop rdx; call qword ptr [rax+0x20]; 
0x0000000014786c: mov eax, [rbp+0xd0]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x00000000107ab3: mov eax, [rbp-0x168]; mov rsi, r12; lea rdi, [rip+0xa695c]; mov rdx, [rax+0xb0]; call qword ptr [rax+0x88]; 
0x000000000feee0: mov eax, [rbp-0x1e0]; call rax; 
0x000000000ff0cd: mov eax, [rbp-0x1e0]; mov rcx, [r12]; call rax; 
0x000000001151af: mov eax, [rbp-0x58]; mov r15d, r13d; call rax; 
0x0000000002a2c6: mov eax, [rbp-0x70]; mov rdi, rbx; call rax; 
0x0000000005590e: mov eax, [rbp-0x8]; sub rax, fs:[0x28]; jne short 0x0000000000055995; leave; ret; 
0x00000000159d1b: mov eax, [rbx+0x10]; call qword ptr [rax+0x270]; 
0x0000000008dfb1: mov eax, [rbx+0x18]; add rsp, 0x10; pop rbx; jmp rax; 
0x00000000125fa5: mov eax, [rbx+0x18]; movdqu xmm1, [rbx+0x30]; mov [rbp-0x80], eax; movups [rbp-0x78], xmm1; call rcx; 
0x00000000126141: mov eax, [rbx+0x18]; movdqu xmm2, [rbx+0x30]; mov [rbp-0x80], eax; movups [rbp-0x78], xmm2; call r8; 
0x00000000089665: mov eax, [rbx+0x20]; mov [rbx+0x28], rax; pop rbx; ret; 
0x000000001418a3: mov eax, [rbx+0x20]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x000000001416a5: mov eax, [rbx+0x20]; mov rdi, rbp; lea r15, [rsp+0x50]; call qword ptr [rax+0x20]; 
0x00000000141661: mov eax, [rbx+0x20]; mov rsi, r13; mov rdi, rbp; call qword ptr [rax+0x8]; 
0x0000000014173d: mov eax, [rbx+0x20]; xor esi, esi; mov rdi, rbp; mov dword ptr [rbx+0x18], 0x0; call qword ptr [rax+0x28]; 
0x000000001416be: mov eax, [rbx+0x20]; xor esi, esi; mov rdi, rbp; mov dword ptr [rbx+0x18], 0x1; call qword ptr [rax+0x28]; 
0x000000001437bc: mov eax, [rbx+0x23b8]; mov rdi, r12; call qword ptr [rax+0x20]; 
0x0000000008e75d: mov eax, [rbx+0x40]; add rsp, 0x20; pop rbx; jmp rax; 
0x0000000009b86c: mov eax, [rbx+0x40]; je short 0x000000000009b896; mov rdi, [rbx+0x48]; mov rsi, r14; call rax; 
0x0000000009b924: mov eax, [rbx+0x40]; test byte ptr [rbx+0x50], 0x1; jne short 0x000000000009b900; mov rdi, rsi; call rax; 
0x0000000008ec5f: mov eax, [rbx+0x48]; add rsp, 0x20; xor edx, edx; pop rbx; jmp rax; 
0x0000000014a872: mov eax, [rbx+0x60]; call qword ptr [rax+0x8]; 
0x0000000014a846: mov eax, [rbx+0x60]; mov dword ptr [rbx+0x58], 0x0; mov esi, [rbx+0x88]; mov rdi, r15; call qword ptr [rax+0x28]; 
0x0000000014a8b9: mov eax, [rbx+0x60]; mov rdi, r15; call qword ptr [rax+0x20]; 
0x00000000149e26: mov eax, [rbx+0x70]; mov [rbx+0x48], ebp; bswap ebp; call qword ptr [rax+0x18]; 
0x00000000149e3a: mov eax, [rbx+0x70]; mov rsi, [rsp+0x18]; mov rdi, r12; call qword ptr [rax+0x8]; 
0x000000001470b8: mov eax, [rbx+0xd0]; mov [rbx+0xa8], ebp; bswap ebp; mov ebp, ebp; call qword ptr [rax+0x18]; 
0x000000001470d4: mov eax, [rbx+0xd0]; mov rsi, [rsp+0x18]; mov rdi, r12; call qword ptr [rax+0x8]; 
0x0000000014b574: mov eax, [rbx]; mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x20]; 
0x0000000014ce7e: mov eax, [rbx]; test rax, rax; je short 0x000000000014ce90; pop rbx; ret; 
0x000000001745e4: mov eax, [rcx+0x3]; mov [rdx+0x3], eax; lea rax, [rdx+0x6]; ret; 
0x000000000afd59: mov eax, [rcx+0x3]; mov [rdx+0x3], eax; mov rax, rdi; ret; 
0x000000001745c5: mov eax, [rcx+0x4]; mov [rdx+0x4], ax; lea rax, [rdx+0x5]; ret; 
0x000000000afd3a: mov eax, [rcx+0x4]; mov [rdx+0x4], ax; mov rax, rdi; ret; 
0x000000001745f6: mov eax, [rcx+0x5]; mov [rdx+0x5], eax; lea rax, [rdx+0x8]; ret; 
0x000000001702a6: mov eax, [rcx+0x5]; mov [rdx+0x5], eax; mov rax, rdi; ret; 
0x00000000174677: mov eax, [rcx+0x5]; mov [rdx+0x5], rax; lea rax, [rdx+0xc]; ret; 
0x000000001702e7: mov eax, [rcx+0x5]; mov [rdx+0x5], rax; mov rax, rdi; ret; 
0x00000000174616: mov eax, [rcx+0x6]; mov [rdx+0x6], eax; lea rax, [rdx+0x9]; ret; 
0x000000001702b6: mov eax, [rcx+0x6]; mov [rdx+0x6], eax; mov rax, rdi; ret; 
0x00000000174697: mov eax, [rcx+0x6]; mov [rdx+0x6], rax; lea rax, [rdx+0xd]; ret; 
0x00000000170307: mov eax, [rcx+0x6]; mov [rdx+0x6], rax; mov rax, rdi; ret; 
0x00000000174636: mov eax, [rcx+0x7]; mov [rdx+0x7], eax; lea rax, [rdx+0xa]; ret; 
0x000000000afddd: mov eax, [rcx+0x7]; mov [rdx+0x7], eax; mov rax, rdi; ret; 
0x000000001746b7: mov eax, [rcx+0x7]; mov [rdx+0x7], rax; lea rax, [rdx+0xe]; ret; 
0x00000000170327: mov eax, [rcx+0x7]; mov [rdx+0x7], rax; mov rax, rdi; ret; 
0x000000000afdbe: mov eax, [rcx+0x8]; mov [rdx+0x8], ax; mov rax, rdi; ret; 
0x00000000174656: mov eax, [rcx+0x8]; mov [rdx+0x8], eax; lea rax, [rdx+0xb]; ret; 
0x000000000afdfd: mov eax, [rcx+0x8]; mov [rdx+0x8], eax; mov rax, rdi; ret; 
0x00000000174547: mov eax, [rcx+0x8]; mov [rdx+0x8], rax; lea rax, [rdx+0xf]; ret; 
0x00000000170217: mov eax, [rcx+0x8]; mov [rdx+0x8], rax; mov rax, rdi; ret; 
0x000000001799aa: mov eax, [rcx+rax*4]; mov edx, [rcx+rdx*4]; sub eax, edx; ret; 
0x000000000b8396: mov eax, [rcx+rax*4]; sub eax, [rcx+rsi*4]; je short 0x00000000000b8380; ret; 
0x0000000017b282: mov eax, [rcx+rax*4]; sub eax, edx; ret; 
0x000000000879f1: mov eax, [rcx]; add [rax], al; mov rdi, rbx; call qword ptr [r13+0x60]; 
0x00000000174571: mov eax, [rcx]; mov [rdx], ax; lea rax, [rdx+0x1]; ret; 
0x000000000afcd6: mov eax, [rcx]; mov [rdx], ax; mov rax, rdi; ret; 
0x000000001745a0: mov eax, [rcx]; mov [rdx], eax; lea rax, [rdx+0x3]; ret; 
0x000000000afd05: mov eax, [rcx]; mov [rdx], eax; mov rax, rdi; ret; 
0x000000001744f1: mov eax, [rcx]; mov [rdx], rax; lea rax, [rdx+0x7]; ret; 
0x000000001701c1: mov eax, [rcx]; mov [rdx], rax; mov rax, rdi; ret; 
0x0000000010774b: mov eax, [rcx]; movsxd rax, [r12+rax*4]; add rax, r12; notrack jmp rax; 
0x00000000107bc4: mov eax, [rdi+0x108]; mov [rsi], eax; xor eax, eax; ret; 
0x000000000caf9b: mov eax, [rdi+0x10]; cmp eax, [rsi+0x10]; jne 0x00000000000cb090; ret; 
0x0000000008fb74: mov eax, [rdi+0x10]; sub eax, [rsi+0x10]; ret; 
0x0000000008fb9c: mov eax, [rdi+0x10]; sub eax, edx; ret; 
0x000000000847c7: mov eax, [rdi+0x10]; sub r8d, eax; mov eax, r8d; ret; 
0x00000000107bb4: mov eax, [rdi+0x10c]; mov [rsi], eax; xor eax, eax; ret; 
0x000000000cafb0: mov eax, [rdi+0x14]; cmp eax, [rsi+0x14]; jne 0x00000000000cb090; ret; 
0x000000000cafc5: mov eax, [rdi+0x18]; cmp eax, [rsi+0x18]; jne 0x00000000000cb090; ret; 
0x00000000151145: mov eax, [rdi+0x18]; sub rax, [rdi+0x20]; ret; 
0x000000000cafe0: mov eax, [rdi+0x1c]; cmp eax, [rsi+0x1c]; jne 0x00000000000cb090; ret; 
0x000000000caffb: mov eax, [rdi+0x20]; cmp eax, [rsi+0x20]; jne 0x00000000000cb090; ret; 
0x00000000142f00: mov eax, [rdi+0x20]; mov dword ptr [rsi], 0x7; mov [rsi+0x8], eax; ret; 
0x000000000369f6: mov eax, [rdi+0x20]; mov rbp, rdi; test rax, rax; je short 0x0000000000036a03; call rax; 
0x00000000191615: mov eax, [rdi+0x20]; test rax, rax; je short 0x0000000000191624; call rax; 
0x000000000cb010: mov eax, [rdi+0x24]; cmp eax, [rsi+0x24]; jne short 0x00000000000cb090; ret; 
0x000000000904a5: mov eax, [rdi+0x28]; cmp [rdi+0x10], rax; cmovae rax, [rdi+0x10]; sub rax, [rdi+0x18]; ret; 
0x000000000cb025: mov eax, [rdi+0x28]; cmp eax, [rsi+0x28]; jne short 0x00000000000cb090; ret; 
0x00000000093943: mov eax, [rdi+0x28]; mov [rax+0x20], rdx; add rsp, 0x8; ret; 
0x000000001515c4: mov eax, [rdi+0x28]; ret; 
0x000000000896b9: mov eax, [rdi+0x28]; sub rax, [rdi+0x20]; ret; 
0x000000000cb030: mov eax, [rdi+0x2c]; cmp eax, [rsi+0x2c]; jne short 0x00000000000cb090; ret; 
0x000000000cb04b: mov eax, [rdi+0x30]; cmp eax, [rsi+0x30]; jne short 0x00000000000cb090; ret; 
0x00000000142ed0: mov eax, [rdi+0x30]; test eax, eax; jne short 0x0000000000142f20; mov dword ptr [rsi], 0x0; ret; 
0x000000000cb060: mov eax, [rdi+0x34]; cmp eax, [rsi+0x34]; jne short 0x00000000000cb090; ret; 
0x000000001417cb: mov eax, [rdi+0x38]; call qword ptr [rax+0x10]; 
0x00000000141732: mov eax, [rdi+0x38]; call qword ptr [rax+0x18]; 
0x0000000014b57a: mov eax, [rdi+0x38]; call qword ptr [rax+0x20]; 
0x0000000014167d: mov eax, [rdi+0x38]; call qword ptr [rax+0x8]; 
0x000000000cb075: mov eax, [rdi+0x38]; cmp eax, [rsi+0x38]; jne short 0x00000000000cb090; ret; 
0x000000001417b1: mov eax, [rdi+0x38]; lea r13, [rsp+0x68]; mov rsi, r13; call qword ptr [rax+0x10]; 
0x000000000cb080: mov eax, [rdi+0x3c]; cmp eax, [rsi+0x3c]; jne short 0x00000000000cb090; ret; 
0x00000000089589: mov eax, [rdi+0x40]; sub rax, [rdi+0x38]; ret; 
0x0000000008de4f: mov eax, [rdi+0x48]; mov [rdi+0x48], rdx; mov [rdi+0x18], rax; mov [rdi+0x8], rax; ret; 
0x000000000caf50: mov eax, [rdi+0x4]; cmp eax, [rsi+0x4]; jne 0x00000000000cb090; ret; 
0x00000000090df4: mov eax, [rdi+0x4]; mov [rsi], eax; xor eax, eax; ret; 
0x0000000014b058: mov eax, [rdi+0x60]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x0000000008fe65: mov eax, [rdi+0x68]; ret; 
0x000000000877ec: mov eax, [rdi+0x70]; test eax, eax; js short 0x00000000000877f8; ret; 
0x0000000010e624: mov eax, [rdi+0x8]; and eax, 0x100f; ret; 
0x00000000090db4: mov eax, [rdi+0x8]; and eax, 0x1; mov [rsi], eax; xor eax, eax; ret; 
0x0000000014f871: mov eax, [rdi+0x8]; call qword ptr [rax+0x10]; 
0x0000000014f831: mov eax, [rdi+0x8]; call qword ptr [rax+0x18]; 
0x00000000141a0e: mov eax, [rdi+0x8]; call qword ptr [rax+0x20]; 
0x0000000014b622: mov eax, [rdi+0x8]; call qword ptr [rax+0x28]; 
0x00000000142fda: mov eax, [rdi+0x8]; call qword ptr [rax+0x30]; 
0x00000000150f6d: mov eax, [rdi+0x8]; call qword ptr [rax+0x48]; 
0x00000000143d6b: mov eax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x000000000caf65: mov eax, [rdi+0x8]; cmp eax, [rsi+0x8]; jne 0x00000000000cb090; ret; 
0x0000000008ff8b: mov eax, [rdi+0x8]; cmp rax, rdx; jae short 0x000000000008ffb8; movzx eax, byte ptr [rax]; ret; 
0x00000000150e81: mov eax, [rdi+0x8]; jmp qword ptr [rax+0x40]; 
0x00000000150e91: mov eax, [rdi+0x8]; jmp qword ptr [rax+0x48]; 
0x0000000014fa51: mov eax, [rdi+0x8]; jmp qword ptr [rax+0x8]; 
0x0000000014fa46: mov eax, [rdi+0x8]; jmp qword ptr [rax]; 
0x0000000014b64d: mov eax, [rdi+0x8]; lea rdx, [rsp+0x18]; mov esi, 0x6; call qword ptr [rax+0x28]; 
0x0000000014b6d1: mov eax, [rdi+0x8]; lea rdx, [rsp+0xc]; mov esi, 0xd; call qword ptr [rax+0x28]; 
0x000000001495d8: mov eax, [rdi+0x8]; lea rsi, [rsp+0x10]; call qword ptr [rax+0x10]; 
0x000000001503a9: mov eax, [rdi+0x8]; lea rsi, [rsp+0x10]; call qword ptr [rax]; 
0x00000000150f41: mov eax, [rdi+0x8]; lea rsi, [rsp+0x4]; call qword ptr [rax+0x40]; 
0x0000000014fb51: mov eax, [rdi+0x8]; lea rsi, [rsp+0x8]; call qword ptr [rax]; 
0x0000000014d8aa: mov eax, [rdi+0x8]; mov dword ptr [rsp+0x30], 0x1; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x0000000014d69a: mov eax, [rdi+0x8]; mov dword ptr [rsp+0x30], 0x3; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x0000000014d70a: mov eax, [rdi+0x8]; mov dword ptr [rsp+0x30], 0x4; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x0000000014d77a: mov eax, [rdi+0x8]; mov dword ptr [rsp+0x30], 0x5; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x00000000143de1: mov eax, [rdi+0x8]; mov r12, rsp; lea rsi, [rsp+0x8]; call qword ptr [rax]; 
0x0000000014fac3: mov eax, [rdi+0x8]; mov rax, [rax+0x8]; add rsp, 0x10; pop rbp; jmp rax; 
0x00000000090b0c: mov eax, [rdi+0x8]; mov rax, [rdi]; mov rdi, r8; jmp rax; 
0x0000000014ca27: mov eax, [rdi+0x8]; mov rdi, r15; call qword ptr [rax+0x20]; 
0x00000000148c4b: mov eax, [rdi+0x8]; mov rsi, [r8+0x40]; mov edx, [rsi+0x1c8]; add rsi, 0x38; jmp qword ptr [rax+0x18]; 
0x00000000150ae9: mov eax, [rdi+0x8]; mov rsi, rsp; call qword ptr [rax+0x40]; 
0x00000000143d41: mov eax, [rdi+0x8]; mov rsi, rsp; call qword ptr [rax]; 
0x0000000014fba1: mov eax, [rdi+0x8]; sar rdx, 0x20; mov [rsp+0x8], rdx; call qword ptr [rax+0x8]; 
0x00000000150b36: mov eax, [rdi+0x8]; sar rdx, 0x20; mov [rsp], edx; call qword ptr [rax+0x48]; 
0x0000000014fc91: mov eax, [rdi+0x8]; shr rdx, 0x20; mov [rsp+0x8], rdx; call qword ptr [rax+0x8]; 
0x00000000150d16: mov eax, [rdi+0x8]; shr rdx, 0x20; mov [rsp], edx; call qword ptr [rax+0x48]; 
0x00000000083df5: mov eax, [rdi+0xa0]; cmp qword ptr [rax+0x30], 0x0; je short 0x0000000000083e08; ret; 
0x000000000caf80: mov eax, [rdi+0xc]; cmp eax, [rsi+0xc]; jne 0x00000000000cb090; ret; 
0x0000000018c547: mov eax, [rdi-0x10]; cmp eax, [rsi-0x10]; jne 0x000000000018c680; ret; 
0x0000000018c590: mov eax, [rdi-0x4]; cmp eax, [rsi-0x4]; jne 0x000000000018c680; ret; 
0x0000000018c670: mov eax, [rdi-0x4]; cmp eax, [rsi-0x4]; jne short 0x000000000018c680; xor eax, eax; ret; 
0x00000000187be4: mov eax, [rdi-0x4]; cmp ecx, eax; jne 0x00000000001885ff; xor eax, eax; ret; 
0x0000000018c575: mov eax, [rdi-0x8]; cmp eax, [rsi-0x8]; jne 0x000000000018c680; ret; 
0x00000000188141: mov eax, [rdi-0x8]; cmp rcx, rax; jne 0x00000000001885f3; xor eax, eax; ret; 
0x00000000189311: mov eax, [rdi-0x8]; cmp rcx, rax; jne 0x0000000000189433; xor eax, eax; ret; 
0x0000000018c560: mov eax, [rdi-0xc]; cmp eax, [rsi-0xc]; jne 0x000000000018c680; ret; 
0x00000000089614: mov eax, [rdi]; and eax, 0x200; ret; 
0x000000000895e4: mov eax, [rdi]; and eax, 0x804; ret; 
0x000000000caf3b: mov eax, [rdi]; cmp eax, [rsi]; jne 0x00000000000cb090; ret; 
0x000000000923c5: mov eax, [rdi]; cmp rax, 0x2000000; jbe short 0x00000000000923d0; ret; 
0x00000000092105: mov eax, [rdi]; cmp rax, 0x408; jbe short 0x0000000000092110; ret; 
0x00000000092425: mov eax, [rdi]; cmp rax, 0xa0; jbe short 0x0000000000092430; ret; 
0x00000000092145: mov eax, [rdi]; cmp rax, 0xffff; jbe short 0x0000000000092150; ret; 
0x00000000149cd0: mov eax, [rdi]; mov [r8], eax; mov eax, 0x1; ret; 
0x0000000011b351: mov eax, [rdi]; mov [rdx], rax; mov eax, 0x1; ret; 
0x0000000008fb66: mov eax, [rdi]; mov [rdx], rax; ret; 
0x00000000090de4: mov eax, [rdi]; mov [rsi], eax; xor eax, eax; ret; 
0x00000000090b10: mov eax, [rdi]; mov rdi, r8; jmp rax; 
0x00000000092165: mov eax, [rdi]; nop; mov [rip+0x151179], rax; ret; 
0x000000000920f5: mov eax, [rdi]; nop; mov [rip+0x151199], rax; ret; 
0x000000000920e5: mov eax, [rdi]; nop; mov [rip+0x1511b1], rax; ret; 
0x00000000092415: mov eax, [rdi]; nop; mov [rip+0x154a66], eax; ret; 
0x000000000923f5: mov eax, [rdi]; nop; mov dword ptr [rip+0x150eb2], 0x1; mov [rip+0x150ea4], eax; ret; 
0x000000000923a5: mov eax, [rdi]; nop; mov dword ptr [rip+0x150f02], 0x1; mov [rip+0x150ecf], rax; ret; 
0x00000000092385: mov eax, [rdi]; nop; mov dword ptr [rip+0x150f22], 0x1; mov [rip+0x150ee7], rax; ret; 
0x000000000da1d4: mov eax, [rdi]; ret; 
0x0000000008a424: mov eax, [rdi]; shr eax, 0x4; and eax, 0x1; ret; 
0x0000000008a434: mov eax, [rdi]; shr eax, 0x5; and eax, 0x1; ret; 
0x00000000147c47: mov eax, [rdi]; test eax, eax; jne short 0x0000000000147c50; ret; 
0x0000000014e157: mov eax, [rdi]; test eax, eax; jne short 0x000000000014e160; ret; 
0x000000000896a6: mov eax, [rdx+0x20]; sub rax, [rdx+0x18]; sar rax, 0x2; ret; 
0x0000000005316e: mov eax, [rdx+0x28]; mov r9, [rdx+0x30]; mov rdx, [rdx+0x88]; xor eax, eax; ret; 
0x00000000089576: mov eax, [rdx+0x38]; sub rax, [rdx+0x30]; sar rax, 0x2; ret; 
0x0000000008705e: mov eax, [rdx+0x4c]; cmp [rdx+0x48], eax; cmovne eax, ecx; ret; 
0x0000000010e143: mov eax, [rdx+0x50]; mov [rsi+0x50], rcx; xor rax, 0x20; mov [rsi+0x48], rax; ret; 
0x000000000fd861: mov eax, [rdx+0x8]; ret; 
0x000000000ab0e6: mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x00000000131901: mov eax, [rdx+rax*8+0x4]; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000000388bc: mov eax, [rdx+rax]; mov eax, r8d; ret; 
0x0000000003885a: mov eax, [rdx+rax]; test eax, eax; jne short 0x0000000000038868; mov eax, r8d; ret; 
0x00000000037371: mov eax, [rdx+rdi*8+0x40]; ret; 
0x000000000840a7: mov eax, [rdx]; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000146fd9: mov eax, [rdx]; bswap eax; mov [r8+0xb4], eax; mov eax, 0x1; ret; 
0x00000000146fa9: mov eax, [rdx]; bswap eax; mov [r8+0xb8], eax; mov eax, 0x1; ret; 
0x000000001198b6: mov eax, [rdx]; cmp eax, 0x26; je short 0x00000000001198f4; mov eax, r8d; ret; 
0x00000000150350: mov eax, [rdx]; lea rsi, [rsp+0x10]; mov [rsp+0x10], rax; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x00000000081ee0: mov eax, [rdx]; ret; 
0x000000000dffc8: mov eax, [rip+0x1066f2]; test eax, eax; jne short 0x00000000000e0000; mov eax, 0x77; syscall; 
0x000000000dff18: mov eax, [rip+0x1067a2]; test eax, eax; jne short 0x00000000000dff50; mov eax, 0x75; syscall; 
0x000000000dfc48: mov eax, [rip+0x106a72]; test eax, eax; jne short 0x00000000000dfc80; mov eax, 0x6a; syscall; 
0x000000000dfba8: mov eax, [rip+0x106b12]; test eax, eax; jne short 0x00000000000dfbe0; mov eax, 0x69; syscall; 
0x000000000dfc92: mov eax, [rip+0x106b28]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000dfbf2: mov eax, [rip+0x106bc8]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000deab1: mov eax, [rip+0x107d11]; mov rdi, r9; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000d9f9a: mov eax, [rip+0x108ea8]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000d8f99: mov eax, [rip+0x109ea9]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000d8f01: mov eax, [rip+0x109f31]; mov rax, [rax+0x230]; test rax, rax; je short 0x00000000000d8f40; call rax; 
0x000000000d8e91: mov eax, [rip+0x109fa1]; mov rax, [rax+0x250]; test rax, rax; je short 0x00000000000d8ed0; call rax; 
0x000000000db2d8: mov eax, [rip+0x10b3e2]; test eax, eax; jne short 0x00000000000db310; mov eax, 0x74; syscall; 
0x000000000d99e1: mov eax, [rip+0x10cd89]; lea rdi, [rip+0x10bcd2]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000d999b: mov eax, [rip+0x10cdd7]; lea rdi, [rip+0x10bd18]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000d97f9: mov eax, [rip+0x10cf71]; lea rdi, [rip+0x10beba]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000d97ca: mov eax, [rip+0x10cfa8]; lea rdi, [rip+0x10bee9]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000d9701: mov eax, [rip+0x10d069]; lea rdi, [rip+0x10bfb2]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000d96d8: mov eax, [rip+0x10d09a]; lea rdi, [rip+0x10bfdb]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000d9206: mov eax, [rip+0x10d564]; lea rdi, [rip+0x10c4ad]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000cdd97: mov eax, [rip+0x11507b]; movaps [rax], xmm0; add rsp, 0x10; pop rbp; ret; 
0x000000000cc151: mov eax, [rip+0x116cf1]; mov dword ptr fs:[rax], 0x16; xor eax, eax; ret; 
0x000000000cc131: mov eax, [rip+0x116d11]; mov dword ptr fs:[rax], 0x4b; xor eax, eax; add rsp, 0x8; ret; 
0x000000000c6359: mov eax, [rip+0x120419]; lea rdi, [rip+0x11f35a]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000c6176: mov eax, [rip+0x1205f4]; lea rdi, [rip+0x11f53d]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000009b9c5: mov eax, [rip+0x14747d]; mov dword ptr fs:[rax], 0xc; xor eax, eax; ret; 
0x0000000009b852: mov eax, [rip+0x1476d8]; call qword ptr [rax]; 
0x0000000009b681: mov eax, [rip+0x1478a9]; call qword ptr [rax]; 
0x0000000009b5b1: mov eax, [rip+0x147979]; call qword ptr [rax]; 
0x00000000097549: mov eax, [rip+0x14b971]; mov [rax], rdi; ret; 
0x0000000009753f: mov eax, [rip+0x14ba8b]; mov [rax], rsi; mov rax, [rip+0x14b971]; mov [rax], rdi; ret; 
0x0000000009687e: mov eax, [rip+0x14c5c4]; xor r8d, r8d; mov dword ptr fs:[rax], 0xc; mov rax, r8; ret; 
0x00000000096643: mov eax, [rip+0x14c7f7]; mov rax, [rax]; test rax, rax; je short 0x0000000000096653; call rax; 
0x00000000095491: mov eax, [rip+0x14d9b1]; xor r9d, r9d; mov dword ptr fs:[rax], 0xc; mov rax, r9; ret; 
0x00000000094d73: mov eax, [rip+0x14e017]; mov [rsp+0x8], r8; xor edi, edi; call qword ptr [rax]; 
0x00000000094c51: mov eax, [rip+0x14e139]; xor edi, edi; call qword ptr [rax]; 
0x00000000094c0b: mov eax, [rip+0x14e17f]; call qword ptr [rax]; 
0x0000000009490d: mov eax, [rip+0x14e47d]; mov [rsp+0x10], rsi; mov rdi, rsi; mov [rsp+0x18], r11; call qword ptr [rax]; 
0x0000000009325f: mov eax, [rip+0x14fc5b]; mov [rax], rdx; ret; 
0x00000000093255: mov eax, [rip+0x14fd75]; mov [rax], rsi; mov rax, [rip+0x14fc5b]; mov [rax], rdx; ret; 
0x00000000090da1: mov eax, [rip+0x1520a1]; pop rbx; mov eax, fs:[rax]; ret; 
0x0000000008fe45: mov eax, [rip+0x154775]; ret; 
0x000000000909af: mov eax, [rip+0x155d9b]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009097f: mov eax, [rip+0x155dc3]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009094f: mov eax, [rip+0x155deb]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009091f: mov eax, [rip+0x155e13]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000908ef: mov eax, [rip+0x155e3b]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000908bf: mov eax, [rip+0x155e63]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000090885: mov eax, [rip+0x155e95]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000009084f: mov eax, [rip+0x155ea3]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009081f: mov eax, [rip+0x155ecb]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000907ef: mov eax, [rip+0x155ef3]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000907bf: mov eax, [rip+0x155f1b]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000089bd1: mov eax, [rip+0x159271]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000877f9: mov eax, [rip+0x15b649]; mov dword ptr fs:[rax], 0x9; mov eax, 0xffffffff; ret; 
0x00000000081089: mov eax, [rip+0x161db9]; mov dword ptr fs:[rax], 0x16; mov rax, 0xffffffffffffffff; ret; 
0x00000000079e8c: mov eax, [rip+0x16f456]; mov [rbp-0x8c0], rax; mov [rbp-0x8b0], rsi; call qword ptr [r8+rcx*8-0x40]; 
0x0000000007423d: mov eax, [rip+0x1750a5]; mov [rbp-0x8b0], rax; mov [rbp-0x8a0], rsi; call qword ptr [r8+rcx*8-0x40]; 
0x0000000005cef3: mov eax, [rip+0x18c3e7]; mov rcx, r14; call qword ptr [rax+r8*8]; 
0x000000000464e1: mov eax, [rip+0x19c961]; mov dword ptr fs:[rax], 0x5; mov eax, 0xffffffff; ret; 
0x00000000045e09: mov eax, [rip+0x19d039]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000042599: mov eax, [rip+0x1a08a9]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000042559: mov eax, [rip+0x1a08e9]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000042519: mov eax, [rip+0x1a0929]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000424d3: mov eax, [rip+0x1a096f]; mov dword ptr fs:[rax], 0x16; mov rax, 0xffffffffffffffff; ret; 
0x00000000042415: mov eax, [rip+0x1a0a2d]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x000000000423f9: mov eax, [rip+0x1a0a49]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000423b1: mov eax, [rip+0x1a0a91]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000042361: mov eax, [rip+0x1a0ae1]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000004231a: mov eax, [rip+0x1a0b28]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000422e4: mov eax, [rip+0x1a0b5e]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000425c4: mov eax, [rip+0x1a0bde]; ret; 
0x000000000425b4: mov eax, [rip+0x1a0bf2]; ret; 
0x00000000041b61: mov eax, [rip+0x1a12e1]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000041921: mov eax, [rip+0x1a1521]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000417e1: mov eax, [rip+0x1a1661]; mov dword ptr fs:[rax], 0x16; mov rax, 0xffffffffffffffff; ret; 
0x00000000040e12: mov eax, [rip+0x1a2030]; mov dword ptr fs:[rax], 0x22; add rsp, 0x8; ret; 
0x00000000040afc: mov eax, [rip+0x1a2346]; mov dword ptr fs:[rax], 0x22; add rsp, 0x8; ret; 
0x0000000004072b: mov eax, [rip+0x1a2717]; mov dword ptr fs:[rax], 0x22; add rsp, 0x8; ret; 
0x0000000003fb81: mov eax, [rip+0x1a32c1]; mov dword ptr fs:[rax], 0x9; mov eax, 0xffffffff; pop rbp; ret; 
0x0000000003fb21: mov eax, [rip+0x1a3321]; mov dword ptr fs:[rax], 0x2a; mov rax, r10; ret; 
0x0000000004169f: mov eax, [rip+0x1a50b3]; mov rsi, rsp; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000003d0b8: mov eax, [rip+0x1a96ba]; lea rdi, [rip+0x1a87fb]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003d057: mov eax, [rip+0x1a9713]; lea rdi, [rip+0x1a885c]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000038f65: mov eax, [rip+0x1a9e65]; add rax, fs:[0x0]; ret; 
0x00000000038f85: mov eax, [rip+0x1a9f3d]; add rax, fs:[0x0]; ret; 
0x00000000038fa5: mov eax, [rip+0x1a9f55]; add rax, fs:[0x0]; ret; 
0x00000000038815: mov eax, [rip+0x1aa57d]; movsxd rdi, edi; mov rax, fs:[rax]; mov rax, [rax+rdi*8+0x80]; ret; 
0x000000000387d1: mov eax, [rip+0x1aa5d9]; mov [rax], rdx; ret; 
0x0000000003b183: mov eax, [rip+0x1ab5ef]; lea rdi, [rip+0x1aa7f0]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003b11a: mov eax, [rip+0x1ab650]; lea rdi, [rip+0x1aa859]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003afeb: mov eax, [rip+0x1ab787]; lea rdi, [rip+0x1aa988]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003af8b: mov eax, [rip+0x1ab7d7]; lea rdi, [rip+0x1aa9e8]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003aea9: mov eax, [rip+0x1ab8c9]; lea rdi, [rip+0x1aaa8a]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003ae52: mov eax, [rip+0x1ab918]; lea rdi, [rip+0x1aaae1]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000373a5: mov eax, [rip+0x1ab9ed]; mov rax, fs:[rax]; mov rax, [rax]; mov eax, [rax+0xa8]; ret; 
0x0000000003abcc: mov eax, [rip+0x1abba6]; lea rdi, [rip+0x1aaae7]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003aba5: mov eax, [rip+0x1abbcd]; lea rdi, [rip+0x1aad0e]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003aace: mov eax, [rip+0x1abca4]; lea rdi, [rip+0x1aabe5]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003aaa7: mov eax, [rip+0x1abccb]; lea rdi, [rip+0x1aae0c]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003a95f: mov eax, [rip+0x1abe13]; lea rdi, [rip+0x1aad54]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003a934: mov eax, [rip+0x1abe3e]; lea rdi, [rip+0x1aaf7f]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003a661: mov eax, [rip+0x1ac111]; lea rdi, [rip+0x1ab2d2]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003a61c: mov eax, [rip+0x1ac146]; lea rdi, [rip+0x1ab317]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003a5b8: mov eax, [rip+0x1ac1aa]; lea rdi, [rip+0x1ab2fb]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003a591: mov eax, [rip+0x1ac1d1]; lea rdi, [rip+0x1ab122]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003a2d6: mov eax, [rip+0x1ac49c]; lea rdi, [r13+0x80]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003a155: mov eax, [rip+0x1ac61d]; lea rdi, [r13+0x80]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000039f6a: mov eax, [rip+0x1ac800]; mov rdi, r12; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000039f45: mov eax, [rip+0x1ac82d]; mov rdi, r12; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000039f1c: mov eax, [rip+0x1ac856]; lea rdi, [r13+0x80]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000039aa3: mov eax, [rip+0x1accbf]; lea rdi, [r13+0x80]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000039042: mov eax, [rip+0x1ad728]; lea rdi, [rip+0x1ac871]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003857e: mov eax, [rip+0x1ae1f4]; lea rdi, [rip+0x1ad135]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000384a3: mov eax, [rip+0x1ae2c7]; lea rdi, [rip+0x1ad210]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003842e: mov eax, [rip+0x1ae344]; lea rdi, [rip+0x1ad285]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000038392: mov eax, [rip+0x1ae3d8]; lea rdi, [rip+0x1ad321]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000038114: mov eax, [rip+0x1ae65e]; lea rdi, [rip+0x1ad59f]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000037d8b: mov eax, [rip+0x1ae9e7]; lea rdi, [rip+0x1ad928]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000037b8c: mov eax, [rip+0x1aebde]; lea rdi, [rip+0x1adb27]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035ab1: mov eax, [rip+0x1b0cc1]; lea rdi, [rip+0x1afc02]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000356b5: mov eax, [rip+0x1b10bd]; lea rdi, [rip+0x1afffe]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003555b: mov eax, [rip+0x1b1217]; lea rdi, [rip+0x1b0158]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003547b: mov eax, [rip+0x1b12f7]; lea rdi, [rip+0x1b0238]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000353fa: mov eax, [rip+0x1b1378]; lea rdi, [rip+0x1b02b9]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000351dc: mov eax, [rip+0x1b1596]; lea rdi, [rip+0x1b04d7]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000351a0: mov eax, [rip+0x1b15ca]; lea rdi, [rip+0x1b0513]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000034025: mov eax, [rip+0x1b1685]; ret; 
0x0000000002bb88: mov eax, [rip+0x1b9b0e]; test eax, eax; je short 0x000000000002bb98; ret; 
0x00000000029319: mov eax, [rip+0x1b9b29]; mov dword ptr fs:[rax], 0x9; mov eax, 0xffffffff; ret; 
0x00000000029035: mov eax, [rip+0x1b9e0d]; add rax, fs:[0x0]; ret; 
0x00000000028c2b: mov eax, [rip+0x1ba257]; mov rsi, [rsp]; mov edi, [rsp+0xc]; mov rdx, [rax]; call rbp; 
0x0000000002a6d5: mov eax, [rip+0x1baf95]; ret; 
0x0000000002a6c5: mov eax, [rip+0x1baf9d]; ret; 
0x00000000028cd5: mov eax, [rip+0x1bdadd]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000015cec5: mov eax, [rip+0x85f7d]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x0000000015cea5: mov eax, [rip+0x85f9d]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x0000000015cd75: mov eax, [rip+0x860cd]; mov dword ptr fs:[rax], 0x26; mov rax, 0xffffffffffffffff; ret; 
0x0000000015c875: mov eax, [rip+0x865cd]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x0000000015c855: mov eax, [rip+0x865ed]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x0000000015c815: mov eax, [rip+0x8662d]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x0000000015c7f5: mov eax, [rip+0x8664d]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x0000000015c7d5: mov eax, [rip+0x8666d]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x0000000015c7b5: mov eax, [rip+0x8668d]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x0000000015a855: mov eax, [rip+0x885ed]; mov dword ptr fs:[rax], 0x26; xor eax, eax; ret; 
0x0000000015a6c1: mov eax, [rip+0x88781]; mov dword ptr fs:[rax], 0x16; xor eax, eax; ret; 
0x0000000015a5bd: mov eax, [rip+0x8894d]; mov [rax], bl; pop rbx; ret; 
0x00000000159d14: mov eax, [rip+0x8911e]; mov r8, [rbx+0x10]; call qword ptr [rax+0x270]; 
0x00000000159885: mov eax, [rip+0x895ad]; jmp qword ptr [rax+0x280]; 
0x000000001597c2: mov eax, [rip+0x89670]; mov rdi, [rdi]; call qword ptr [rax+0x278]; 
0x00000000159769: mov eax, [rip+0x896c9]; mov rdi, [rsp]; mov rax, [rax+0x268]; jmp rax; 
0x00000000159735: mov eax, [rip+0x896fd]; mov rsi, rdi; mov rdi, [rsp]; mov rax, [rax+0x268]; jmp rax; 
0x000000001592a2: mov eax, [rip+0x89b90]; call qword ptr [rax+0x288]; 
0x0000000015a7df: mov eax, [rip+0x8bf33]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000015a7af: mov eax, [rip+0x8bf5b]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000015a82d: mov eax, [rip+0x8bf7d]; mov rdi, r8; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000015a77f: mov eax, [rip+0x8bf83]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000015a74f: mov eax, [rip+0x8bfab]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000156785: mov eax, [rip+0x8c6bd]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x00000000159cd1: mov eax, [rip+0x8f5f1]; mov rax, [rax+0x10]; add rsp, 0x38; jmp rax; 
0x00000000159a39: mov eax, [rip+0x8f889]; call qword ptr [rax+0x8]; 
0x00000000159941: mov eax, [rip+0x8f981]; call qword ptr [rax]; 
0x0000000014d171: mov eax, [rip+0x95c11]; pop rbx; ret; 
0x0000000014d100: mov eax, [rip+0x95c82]; mov dword ptr [rip+0x9bdd0], 0x2; pop rbx; ret; 
0x0000000014d0a1: mov eax, [rip+0x95d81]; pop rbx; ret; 
0x0000000014d241: mov eax, [rip+0x95d99]; pop rbx; ret; 
0x0000000014d030: mov eax, [rip+0x95df2]; mov dword ptr [rip+0x9bea0], 0x2; pop rbx; ret; 
0x0000000014d1d0: mov eax, [rip+0x95e0a]; mov dword ptr [rip+0x9bd00], 0x2; pop rbx; ret; 
0x0000000014cfd1: mov eax, [rip+0x95e11]; pop rbx; ret; 
0x0000000014cf60: mov eax, [rip+0x95e82]; mov dword ptr [rip+0x9bf70], 0x2; pop rbx; ret; 
0x0000000014cdb5: mov eax, [rip+0x95fad]; lea rdx, [rip+0x9c13e]; mov fs:[rax], rdx; ret; 
0x00000000141241: mov eax, [rip+0xa1c01]; mov dword ptr fs:[rax], 0x16; mov eax, 0x16; ret; 
0x000000001411e9: mov eax, [rip+0xa1c59]; mov dword ptr fs:[rax], 0x22; mov eax, 0x22; pop rbx; ret; 
0x0000000013bf35: mov eax, [rip+0xa6ebd]; mov eax, [rax+0x18]; test eax, eax; jne short 0x000000000013bf48; ret; 
0x0000000013c025: mov eax, [rip+0xa6fbd]; mov rax, fs:[rax]; ret; 
0x00000000141bd4: mov eax, [rip+0xa7126]; test eax, eax; je short 0x0000000000141be0; ret; 
0x0000000013dd55: mov eax, [rip+0xaae45]; test rax, rax; jne short 0x000000000013dd68; ret; 
0x0000000013c96d: mov eax, [rip+0xac22d]; test rax, rax; je short 0x000000000013c980; add rsp, 0x8; ret; 
0x0000000013bae8: mov eax, [rip+0xace5e]; test eax, eax; je short 0x000000000013baf8; ret; 
0x00000000129b65: mov eax, [rip+0xb92c5]; add rax, fs:[0x0]; ret; 
0x000000001290f1: mov eax, [rip+0xb9d51]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000011c975: mov eax, [rip+0xc64bd]; mov eax, [rax+0x38]; ret; 
0x0000000011a235: mov eax, [rip+0xc8c0d]; mov dword ptr fs:[rax], 0x26; mov rax, 0xffffffffffffffff; ret; 
0x000000001199e1: mov eax, [rip+0xc9461]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000001199a1: mov eax, [rip+0xc94a1]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000011c0d1: mov eax, [rip+0xcb9c1]; mov rax, [rax+0x18]; add dword ptr [rax], 0x1; ret; 
0x0000000011c0c1: mov eax, [rip+0xcb9d1]; mov rax, [rax+0x18]; add word ptr [rax], 0x1; ret; 
0x000000001170a1: mov eax, [rip+0xcbda1]; mov dword ptr fs:[rax], 0x2; xor eax, eax; ret; 
0x00000000116559: mov eax, [rip+0xcc8e9]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000011633f: mov eax, [rip+0xccbf3]; mov rax, [rax]; test rax, rax; je 0x0000000000116440; call rax; 
0x00000000116160: mov eax, [rip+0xccdd2]; mov rax, [rax]; test rax, rax; je short 0x00000000001161d0; call rax; 
0x00000000114721: mov eax, [rip+0xce721]; mov dword ptr fs:[rax], 0x16; ret; 
0x000000001146ec: mov eax, [rip+0xce756]; mov dword ptr fs:[rax], 0x16; xor eax, eax; ret; 
0x000000001146da: mov eax, [rip+0xce768]; mov dword ptr fs:[rax], 0xc; xor eax, eax; pop rbx; ret; 
0x00000000113e9e: mov eax, [rip+0xcefa4]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000113839: mov eax, [rip+0xcf609]; mov dword ptr fs:[rax], 0x16; mov rax, 0xffffffffffffffff; ret; 
0x00000000113644: mov eax, [rip+0xcfd0e]; test edi, edi; je short 0x0000000000113654; mov [rip+0xcfd04], edi; ret; 
0x000000001106e1: mov eax, [rip+0xd2761]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000001106b9: mov eax, [rip+0xd2789]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000110575: mov eax, [rip+0xd28cd]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x0000000010fba5: mov eax, [rip+0xd328d]; mov rax, [rax+0x18]; test rax, rax; je short 0x000000000010fbb5; ret; 
0x0000000010f269: mov eax, [rip+0xd3bd9]; mov dword ptr fs:[rax], 0xc; mov eax, 0xffffffff; ret; 
0x0000000010f255: mov eax, [rip+0xd3c45]; mov qword ptr [rax], 0xffffffffffffffff; xor eax, eax; ret; 
0x0000000010e6dc: mov eax, [rip+0xd4766]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010e67b: mov eax, [rip+0xd47c7]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010de39: mov eax, [rip+0xd5009]; mov dword ptr fs:[rax], 0x9; mov eax, 0xffffffff; ret; 
0x0000000010de03: mov eax, [rip+0xd503f]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010d5f9: mov eax, [rip+0xd5849]; mov dword ptr fs:[rax], 0x16; xor eax, eax; ret; 
0x0000000010d4c1: mov eax, [rip+0xd5981]; mov dword ptr fs:[rax], 0x16; mov eax, 0x1; ret; 
0x00000000110afe: mov eax, [rip+0xd6b6c]; mov [rip+0xd6b95], rax; lea rax, [rip+0xd6b66]; add rsp, 0x8; ret; 
0x0000000010f978: mov eax, [rip+0xd6d42]; test eax, eax; jne short 0x000000000010f9b0; mov eax, 0x72; syscall; 
0x0000000010f8d8: mov eax, [rip+0xd6de2]; test eax, eax; jne short 0x000000000010f910; mov eax, 0x71; syscall; 
0x0000000010f9c7: mov eax, [rip+0xd6df3]; movups [rsp+0x8], xmm0; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000010f927: mov eax, [rip+0xd6e93]; movups [rsp+0x8], xmm0; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000010ba41: mov eax, [rip+0xd7401]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000108579: mov eax, [rip+0xda8c9]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000108519: mov eax, [rip+0xda929]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000001084b9: mov eax, [rip+0xda989]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000108131: mov eax, [rip+0xdad11]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000001080d1: mov eax, [rip+0xdad71]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000108071: mov eax, [rip+0xdadd1]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000f9775: mov eax, [rip+0xe981d]; mov r8, [rax]; mov [rax], rdi; mov rax, r8; ret; 
0x0000000010dea9: mov eax, [rsi+0x28]; cmp [rdi+0x28], rax; sete al; ret; 
0x0000000011d9d1: mov eax, [rsi+0x68]; mov edi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x1000; ret; 
0x0000000011d949: mov eax, [rsi+0x68]; mov edi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x100; ret; 
0x0000000011d541: mov eax, [rsi+0x68]; mov edi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x1; ret; 
0x0000000011d8d1: mov eax, [rsi+0x68]; mov edi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x2000; ret; 
0x0000000011d6d1: mov eax, [rsi+0x68]; mov edi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x200; ret; 
0x0000000011d5c1: mov eax, [rsi+0x68]; mov edi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x2; ret; 
0x0000000011d7d1: mov eax, [rsi+0x68]; mov edi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x4000; ret; 
0x0000000011d4c1: mov eax, [rsi+0x68]; mov edi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x400; ret; 
0x0000000011d851: mov eax, [rsi+0x68]; mov edi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x4; ret; 
0x0000000011d751: mov eax, [rsi+0x68]; mov edi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x8000; ret; 
0x0000000011d441: mov eax, [rsi+0x68]; mov edi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x8; ret; 
0x00000000038ef5: mov eax, [rsi+0x68]; movsxd rdi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x1000; ret; 
0x00000000038ed5: mov eax, [rsi+0x68]; movsxd rdi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x100; ret; 
0x00000000038d95: mov eax, [rsi+0x68]; movsxd rdi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x1; ret; 
0x00000000038eb5: mov eax, [rsi+0x68]; movsxd rdi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x2000; ret; 
0x00000000038e35: mov eax, [rsi+0x68]; movsxd rdi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x200; ret; 
0x00000000038df5: mov eax, [rsi+0x68]; movsxd rdi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x2; ret; 
0x00000000038e75: mov eax, [rsi+0x68]; movsxd rdi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x4000; ret; 
0x00000000038dd5: mov eax, [rsi+0x68]; movsxd rdi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x400; ret; 
0x00000000038e95: mov eax, [rsi+0x68]; movsxd rdi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x4; ret; 
0x00000000038e55: mov eax, [rsi+0x68]; movsxd rdi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x8000; ret; 
0x00000000038e15: mov eax, [rsi+0x68]; movsxd rdi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x800; ret; 
0x00000000038db5: mov eax, [rsi+0x68]; movsxd rdi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x8; ret; 
0x0000000014a334: mov eax, [rsi+0x70]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x00000000038f15: mov eax, [rsi+0x70]; movsxd rdi, edi; mov eax, [rax+rdi*4]; ret; 
0x00000000038f25: mov eax, [rsi+0x78]; movsxd rdi, edi; mov eax, [rax+rdi*4]; ret; 
0x00000000143981: mov eax, [rsi+0x8]; mov rsi, [rbx+0x10]; mov rdx, r12; mov rdi, r14; call qword ptr [rax+0x10]; 
0x000000001439bb: mov eax, [rsi+0x8]; mov rsi, [rbx+0x10]; mov rdx, r12; mov rdi, r14; call qword ptr [rax+0x20]; 
0x0000000010defa: mov eax, [rsi+0x8]; movups [rdi+0x10], xmm0; mov [rdi+0x8], rax; movups [rdi+0x20], xmm1; ret; 
0x00000000037391: mov eax, [rsi+rax*8+0x80]; ret; 
0x000000000992b1: mov eax, [rsi+rax+0x8]; sub rdx, 0x8; and eax, 0x1; cmovne rax, rdx; ret; 
0x0000000004254a: mov eax, [rsi]; and rax, [rdx]; mov [rdi], rax; xor eax, eax; ret; 
0x000000001504f0: mov eax, [rsi]; lea rsi, [rsp+0x10]; mov [rsp+0x10], rax; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x00000000107c64: mov eax, [rsi]; mov [rdi+0x108], eax; xor eax, eax; ret; 
0x00000000090c12: mov eax, [rsi]; mov edx, 0x16; test eax, eax; cmovne eax, edx; ret; 
0x0000000014fa00: mov eax, [rsi]; mov rsi, rsp; mov [rsp], rax; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x0000000004258a: mov eax, [rsi]; or rax, [rdx]; mov [rdi], rax; xor eax, eax; ret; 
0x000000000de6a3: mov eax, [rsp+0x10]; add rsp, 0x28; ret; 
0x00000000028cac: mov eax, [rsp+0x10]; call rax; 
0x00000000149629: mov eax, [rsp+0x10]; lea rdx, [rip+0x6424c]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000147210: mov eax, [rsp+0x10]; mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x18]; 
0x0000000015a4fa: mov eax, [rsp+0x10]; mov rdi, [rsp+0x18]; call rax; 
0x00000000114cf4: mov eax, [rsp+0x10]; mov rdi, rbp; call rax; 
0x00000000144aa1: mov eax, [rsp+0x10]; mov rdx, r13; mov rsi, r12; mov rdi, rbp; call rax; 
0x000000001470ee: mov eax, [rsp+0x10]; mov rsi, r12; mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x8]; 
0x00000000040444: mov eax, [rsp+0x10]; or eax, 0xffff8000; inc eax; shr eax, 0x1f; ret; 
0x0000000010e1d4: mov eax, [rsp+0x18]; add rsp, 0x28; ret; 
0x0000000002da7e: mov eax, [rsp+0x18]; call rax; 
0x000000001592b4: mov eax, [rsp+0x18]; mov rdx, r14; mov esi, 0x40; mov rdi, rbx; call rax; 
0x000000001131cb: mov eax, [rsp+0x18]; sub rax, fs:[0x28]; jne short 0x00000000001131e2; add rsp, 0xd8; ret; 
0x000000001132a4: mov eax, [rsp+0x18]; sub rax, fs:[0x28]; jne short 0x00000000001132bb; add rsp, 0xd8; ret; 
0x00000000115d90: mov eax, [rsp+0x18]; sub rax, fs:[0x28]; jne short 0x0000000000115da7; add rsp, 0xd8; ret; 
0x00000000115e50: mov eax, [rsp+0x18]; sub rax, fs:[0x28]; jne short 0x0000000000115e67; add rsp, 0xd8; ret; 
0x00000000116297: mov eax, [rsp+0x18]; sub rax, fs:[0x28]; jne short 0x00000000001162ae; add rsp, 0xd8; ret; 
0x00000000116504: mov eax, [rsp+0x18]; sub rax, fs:[0x28]; jne short 0x000000000011651b; add rsp, 0xd8; ret; 
0x00000000123932: mov eax, [rsp+0x18]; sub rax, fs:[0x28]; jne short 0x0000000000123949; add rsp, 0xd8; ret; 
0x0000000012553b: mov eax, [rsp+0x18]; sub rax, fs:[0x28]; jne short 0x0000000000125552; add rsp, 0xd8; ret; 
0x0000000014de64: mov eax, [rsp+0x18]; sub rax, fs:[0x28]; jne short 0x000000000014de98; add rsp, 0x28; ret; 
0x0000000002c572: mov eax, [rsp+0x20]; call rax; 
0x0000000002bfea: mov eax, [rsp+0x28]; call rax; 
0x00000000141abf: mov eax, [rsp+0x28]; mov rcx, [rsp+0x20]; mov rdx, [rsp+0x18]; mov rsi, [rsp+0x10]; call qword ptr [rax]; 
0x00000000142bc0: mov eax, [rsp+0x30]; call rax; 
0x0000000014284d: mov eax, [rsp+0x38]; mov rdi, r12; call qword ptr [rax+0x20]; 
0x0000000008a3e9: mov eax, [rsp+0x38]; sub rax, fs:[0x28]; jne short 0x000000000008a409; add rsp, 0x48; ret; 
0x0000000014f8c9: mov eax, [rsp+0x38]; sub rax, fs:[0x28]; jne short 0x000000000014f8dd; add rsp, 0x48; ret; 
0x0000000011602b: mov eax, [rsp+0x408]; sub rax, fs:[0x28]; jne short 0x0000000000116045; add rsp, 0x418; ret; 
0x00000000148f51: mov eax, [rsp+0x48]; call qword ptr [rax+0x28]; 
0x00000000033bd7: mov eax, [rsp+0x48]; mov rcx, [rsp+0x18]; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; call r15; 
0x0000000014acf4: mov eax, [rsp+0x48]; mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x18]; 
0x00000000119399: mov eax, [rsp+0x4]; add rsp, 0x20; pop rbp; ret; 
0x0000000011ad8c: mov eax, [rsp+0x4]; add rsp, 0x28; ret; 
0x0000000014909c: mov eax, [rsp+0x58]; mov rdi, r12; call qword ptr [rax+0x20]; 
0x0000000014d6ae: mov eax, [rsp+0x68]; sub rax, fs:[0x28]; jne short 0x000000000014d6c2; add rsp, 0x78; ret; 
0x0000000014d71e: mov eax, [rsp+0x68]; sub rax, fs:[0x28]; jne short 0x000000000014d732; add rsp, 0x78; ret; 
0x0000000014d78e: mov eax, [rsp+0x68]; sub rax, fs:[0x28]; jne short 0x000000000014d7a2; add rsp, 0x78; ret; 
0x0000000014d7ef: mov eax, [rsp+0x68]; sub rax, fs:[0x28]; jne short 0x000000000014d803; add rsp, 0x78; ret; 
0x0000000014d853: mov eax, [rsp+0x68]; sub rax, fs:[0x28]; jne short 0x000000000014d867; add rsp, 0x78; ret; 
0x0000000014d8be: mov eax, [rsp+0x68]; sub rax, fs:[0x28]; jne short 0x000000000014d8d2; add rsp, 0x78; ret; 
0x0000000014d941: mov eax, [rsp+0x68]; sub rax, fs:[0x28]; jne short 0x000000000014d955; add rsp, 0x78; ret; 
0x000000000394a6: mov eax, [rsp+0x8]; add rsp, 0x18; ret; 
0x00000000046425: mov eax, [rsp+0x8]; add rsp, 0x28; ret; 
0x0000000010dd48: mov eax, [rsp+0x8]; add rsp, 0x30; pop rbp; ret; 
0x0000000011b0a1: mov eax, [rsp+0x8]; add rsp, 0x38; ret; 
0x000000000857fb: mov eax, [rsp+0x8]; mov esi, 0xffffffff; mov rdi, r8; call qword ptr [rax+0x18]; 
0x000000001433f9: mov eax, [rsp+0x8]; mov esi, r14d; mov rdi, r13; call qword ptr [rax+0x30]; 
0x00000000141e46: mov eax, [rsp+0x8]; mov rdi, r12; call qword ptr [rax+0x20]; 
0x0000000014140a: mov eax, [rsp+0x8]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x00000000132660: mov eax, [rsp+0x8]; mov rdi, rbx; call rax; 
0x00000000041458: mov eax, [rsp+0x8]; sub rax, fs:[0x28]; jne short 0x000000000004146c; add rsp, 0x18; ret; 
0x00000000045f60: mov eax, [rsp+0x8]; sub rax, fs:[0x28]; jne short 0x0000000000045f74; add rsp, 0x18; ret; 
0x00000000045fad: mov eax, [rsp+0x8]; sub rax, fs:[0x28]; jne short 0x0000000000045fc1; add rsp, 0x18; ret; 
0x0000000014289d: mov eax, [rsp+0xc8]; mov rdi, rbx; call qword ptr [rax+0x20]; 
0x000000000de883: mov eax, [rsp+0xc]; add rsp, 0x18; ret; 
0x000000000de75d: mov eax, [rsp+0xc]; add rsp, 0x28; ret; 
0x0000000010ff3f: mov eax, [rsp+0xc]; add rsp, 0x38; ret; 
0x00000000040ee4: mov eax, [rsp-0x10]; and rax, rdx; sub rax, rdx; shr rax, 0x3f; ret; 
0x00000000043ad1: mov eax, [rsp]; add r15, r12; call rax; 
0x000000001096b6: mov eax, [rsp]; add rsp, 0x18; ret; 
0x0000000011a500: mov eax, [rsp]; add rsp, 0x20; pop rbp; ret; 
0x00000000106d04: mov eax, [rsp]; add rsp, 0x28; ret; 
0x0000000011a5c6: mov eax, [rsp]; add rsp, 0x30; pop rbp; ret; 
0x00000000190750: mov eax, [rsp]; add rsp, 0x38; pop rbx; pop r14; ret; 
0x0000000011c9d7: mov eax, [rsp]; add rsp, 0x38; ret; 
0x0000000011ca38: mov eax, [rsp]; add rsp, 0x40; ret; 
0x0000000004394c: mov eax, [rsp]; call rax; 
0x00000000028cba: mov eax, [rsp]; lea rdi, [rip+0x185024]; mov rsi, [rax]; xor eax, eax; call qword ptr [rdx+0x260]; 
0x000000000453d2: mov eax, [rsp]; lock add qword ptr [rax+0x460], 0x1; lea rdi, [rbp+0x988]; call qword ptr [rbp+0xf90]; 
0x00000000083d9a: mov eax, [rsp]; mov esi, r12d; mov rdi, r14; call qword ptr [rax+0x18]; 
0x0000000013338f: mov eax, [rsp]; mov rdi, r12; call rax; 
0x0000000008e5f4: mov eax, [rsp]; mov rdi, r15; lea rbx, [rsi+0x1]; movzx esi, byte ptr [rsi]; call qword ptr [rax+0x18]; 
0x000000000438c1: mov eax, [rsp]; mov rdx, r14; mov rsi, r13; mov rdi, r12; call rax; 
0x00000000043a6d: mov eax, [rsp]; mov rsi, r13; mov rdi, r12; call rax; 
0x0000000011f2da: mov eax, [rsp]; pop rbx; pop rbp; pop r12; ret; 
0x000000000418df: mov eax, eax; add rsp, 0x118; ret; 
0x000000000d0ad0: mov eax, eax; add rsp, 0x8; ret; 
0x0000000006104c: mov eax, eax; cmp eax, 0xffffffff; je short 0x0000000000061060; mov eax, r8d; ret; 
0x00000000149d05: mov eax, eax; mov [r8], rax; mov eax, 0x1; ret; 
0x00000000146f69: mov eax, eax; mov [rdx], rax; mov eax, 0x1; ret; 
0x0000000015083e: mov eax, eax; mov [rsp], rax; mov rax, [rbp+0x8]; call qword ptr [rax+0x8]; 
0x0000000013744a: mov eax, eax; mov byte ptr [r8+0x2], 0x0; ret; 
0x0000000013718c: mov eax, eax; mov byte ptr [rdi+rdx], 0x0; ret; 
0x00000000111dee: mov eax, eax; mov byte ptr [rsi-0x1], 0x0; ret; 
0x0000000010eb0c: mov eax, eax; mov eax, 0x10; syscall; 
0x00000000109512: mov eax, eax; mov eax, 0x3; syscall; 
0x00000000110132: mov eax, eax; mov eax, 0x4a; syscall; 
0x000000001101f2: mov eax, eax; mov eax, 0x4b; syscall; 
0x0000000010969a: mov eax, eax; mov eax, 0x55; syscall; 
0x00000000041c71: mov eax, eax; mov eax, 0x82; syscall; 
0x000000001198d8: mov eax, eax; mov eax, r8d; ret; 
0x0000000010e855: mov eax, eax; mov ebx, fs:[r10]; syscall; 
0x000000000d9178: mov eax, eax; mov edi, 0x1; mov eax, 0xe6; syscall; 
0x00000000108a76: mov eax, eax; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x0000000011982e: mov eax, eax; mov edi, [rsp+0x8]; mov eax, 0x130; syscall; 
0x0000000010f380: mov eax, eax; mov edi, [rsp+0x8]; mov eax, 0x13; syscall; 
0x0000000010f420: mov eax, eax; mov edi, [rsp+0x8]; mov eax, 0x14; syscall; 
0x00000000108d82: mov eax, eax; mov edi, [rsp+0x8]; mov eax, 0x1; syscall; 
0x0000000011a35e: mov eax, eax; mov edi, [rsp+0x8]; mov eax, 0x2a; syscall; 
0x0000000011a7a0: mov eax, eax; mov edi, [rsp+0x8]; mov eax, 0x2e; syscall; 
0x0000000011a640: mov eax, eax; mov edi, [rsp+0x8]; mov eax, 0x2f; syscall; 
0x0000000010920a: mov eax, eax; mov edi, [rsp+0x8]; mov eax, 0x48; syscall; 
0x00000000108ce2: mov eax, eax; mov edi, [rsp+0x8]; xor eax, eax; syscall; 
0x0000000011a292: mov eax, eax; mov edi, [rsp+0xc]; mov eax, 0x2b; syscall; 
0x0000000011960d: mov eax, eax; mov esi, [rsp+0x18]; mov edi, [rsp+0x8]; mov eax, 0x114; syscall; 
0x0000000010e25e: mov eax, eax; mov esi, [rsp+0xc]; mov edi, [rsp+0x8]; mov eax, 0x11d; syscall; 
0x000000000d90d4: mov eax, eax; mov esi, ebp; mov eax, 0xe6; syscall; 
0x00000000156ca7: mov eax, eax; mov qword ptr [rdx], 0x0; ret; 
0x000000000426b3: mov eax, eax; mov r10d, 0x8; mov eax, 0x80; syscall; 
0x00000000046401: mov eax, eax; mov rdi, [rsp+0x8]; mov eax, 0x13e; syscall; 
0x00000000113951: mov eax, eax; mov rdi, [rsp+0x8]; mov eax, 0x1a; syscall; 
0x0000000010d661: mov eax, eax; mov rdi, [rsp+0x8]; mov eax, 0x7; syscall; 
0x00000000108c01: mov eax, eax; mov rsi, [rsp+0x10]; mov edi, [rsp+0x18]; mov eax, 0x101; syscall; 
0x0000000011ae1c: mov eax, eax; mov rsi, [rsp+0x10]; mov edi, [rsp+0xc]; mov eax, 0x133; syscall; 
0x0000000011955c: mov eax, eax; mov rsi, [rsp+0x10]; mov edi, [rsp+0xc]; mov eax, 0xe8; syscall; 
0x000000000de67d: mov eax, eax; mov rsi, [rsp+0x8]; mov edi, [rsp+0x10]; mov eax, 0x3d; syscall; 
0x0000000010e1ae: mov eax, eax; mov rsi, [rsp+0x8]; mov edi, [rsp+0x18]; mov eax, 0x115; syscall; 
0x0000000011acae: mov eax, eax; mov rsi, [rsp+0x8]; mov edi, [rsp+0x18]; mov eax, 0x120; syscall; 
0x0000000011afbe: mov eax, eax; mov rsi, [rsp+0x8]; mov edi, [rsp+0x18]; mov eax, 0x45; syscall; 
0x000000001196bd: mov eax, eax; mov rsi, [rsp+0x8]; mov edi, [rsp]; mov eax, 0x116; syscall; 
0x00000000106cde: mov eax, eax; mov rsi, [rsp+0x8]; mov edi, [rsp]; mov eax, 0x11; syscall; 
0x00000000106d8e: mov eax, eax; mov rsi, [rsp+0x8]; mov edi, [rsp]; mov eax, 0x12; syscall; 
0x0000000002918f: mov eax, eax; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000045e99: mov eax, eax; movups [rdi], xmm0; ret; 
0x0000000010e82b: mov eax, eax; movups [rsp+0x11], xmm0; syscall; 
0x000000000dba16: mov eax, eax; pop r12; pop r13; pop r14; ret; 
0x0000000009793a: mov eax, eax; pop r12; pop r13; ret; 
0x0000000003d818: mov eax, eax; pop r12; ret; 
0x000000000979a7: mov eax, eax; pop r13; ret; 
0x00000000136581: mov eax, eax; pop rbp; pop r12; pop r13; ret; 
0x00000000034186: mov eax, eax; pop rbp; pop r12; ret; 
0x000000000969fc: mov eax, eax; pop rbp; ret; 
0x0000000009a01f: mov eax, eax; pop rbx; pop r12; ret; 
0x0000000003d7d1: mov eax, eax; pop rbx; pop rbp; pop r12; ret; 
0x000000000e8214: mov eax, eax; pop rbx; pop rbp; pop r13; ret; 
0x00000000044e2c: mov eax, eax; pop rbx; pop rbp; ret; 
0x000000000420e0: mov eax, eax; pop rbx; ret; 
0x00000000038862: mov eax, eax; ret; 
0x00000000186e64: mov eax, eax; shr rax, 0x2; vzeroupper; ret; 
0x0000000014d6c3: mov eax, eax; std; jmp qword ptr [rsi+0xf]; 
0x00000000142410: mov eax, eax; sub rax, r12; mov [rbx+0x18], rax; mov rax, [rbp+0x8]; call qword ptr [rax+0x28]; 
0x0000000009129a: mov eax, eax; syscall; 
0x000000001824c1: mov eax, eax; vzeroupper; ret; 
0x000000000876a7: mov eax, ebp; adc dword ptr [rax+rax-0x801700], 0xffffffff; jmp qword ptr [rsi+0xf]; 
0x0000000014c73b: mov eax, ebp; mov rcx, r12; mov rdx, rbp; mov rsi, rbx; call rax; 
0x0000000013f817: mov eax, ebp; mov rcx, r14; mov rdi, r13; call r12; 
0x0000000009c026: mov eax, ebp; mov rdx, r12; pop r12; pop r13; ret; 
0x0000000013c601: mov eax, ebp; pop r12; pop r13; pop r14; ret; 
0x0000000009c7fa: mov eax, ebp; pop rbp; pop r12; pop r13; ret; 
0x0000000008ba7d: mov eax, ebp; pop rbx; pop rbp; pop r12; ret; 
0x00000000053c63: mov eax, ebx; adc rax, rdx; pop rbp; pop rbx; ret; 
0x0000000008a18f: mov eax, ebx; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000159d9d: mov eax, ebx; call qword ptr [rax+0x270]; 
0x000000001077a5: mov eax, ebx; mov rdx, [rbx+0xb0]; mov rsi, [rbx+0xa0]; mov rdi, [rbx+0x80]; call qword ptr [rax+0x88]; 
0x0000000012b9f6: mov eax, ebx; mov rdx, rbp; call qword ptr [rsp+0x60]; 
0x00000000159e73: mov eax, ebx; mov rsi, r12; xor r9d, r9d; mov rdi, rbp; call qword ptr [rax+0x270]; 
0x0000000009f9ba: mov eax, ebx; pop rbx; cmovne rax, rdi; ret; 
0x0000000008a0d4: mov eax, ebx; pop rbx; pop rbp; pop r12; ret; 
0x0000000010e893: mov eax, ebx; pop rbx; ret; 
0x000000000973f7: mov eax, ebx; syscall; 
0x000000000608e7: mov eax, ebx; test r8d, r8d; jne short 0x00000000000608f0; pop rbx; ret; 
0x00000000053b2b: mov eax, ecx; adc eax, eax; ret; 
0x00000000041af3: mov eax, ecx; add rsp, 0x148; ret; 
0x0000000010ea17: mov eax, ecx; add rsp, 0x38; ret; 
0x000000000b859f: mov eax, ecx; and eax, 0x7ff80000; div esi; mov eax, eax; ret; 
0x00000000084841: mov eax, ecx; lea rdx, [r8+rdx*4]; mov [rax], rdx; xor eax, eax; ret; 
0x00000000119207: mov eax, ecx; mov r10, [rsp+0x8]; mov eax, 0x38; syscall; 
0x00000000113674: mov eax, ecx; mov r9, [rsp+0x8]; syscall; 
0x00000000077458: mov eax, ecx; pop r14; ret; 
0x000000001299bf: mov eax, ecx; pop rbx; pop rbp; pop r12; ret; 
0x000000000b8503: mov eax, ecx; pop rbx; shr eax, 0x6; and eax, 0x3fffc00; ret; 
0x000000000b84b8: mov eax, ecx; pop rbx; shr eax, 0xe; and eax, 0x3fc00; ret; 
0x00000000082d48: mov eax, ecx; ret; 
0x0000000004648b: mov eax, ecx; sub rsi, rdi; syscall; 
0x0000000004188f: mov eax, ecx; syscall; 
0x00000000038d74: mov eax, edi; and eax, 0x7f; ret; 
0x000000001297e8: mov eax, edi; and eax, 0xffffff; ret; 
0x000000001297a4: mov eax, edi; bswap eax; ret; 
0x000000000dad16: mov eax, edi; call rax; 
0x000000000454a4: mov eax, edi; cdq; xor eax, edx; sub eax, edx; ret; 
0x0000000009bf7f: mov eax, edi; cmp [r8+0x8], rsi; jb short 0x000000000009bf90; mov [r8], rsi; ret; 
0x00000000116524: mov eax, edi; cmp rdi, rax; jne short 0x0000000000116558; mov eax, 0x88; syscall; 
0x000000000454f5: mov eax, edi; cqo; idiv rsi; ret; 
0x000000000454b5: mov eax, edi; cqo; xor rax, rdx; sub rax, rdx; ret; 
0x00000000111d6c: mov eax, edi; mov byte ptr [rsi-0x1], 0x0; mov rax, r8; ret; 
0x0000000012c418: mov eax, edi; mov rcx, rbp; mov rdx, r14; mov rsi, r12; call qword ptr [rsp+0x40]; 
0x00000000129f31: mov eax, edi; mov rdi, r12; mov edx, [rsp+0x38]; call qword ptr [rsp+0x60]; 
0x00000000159a3b: mov eax, edi; or [rax], al; call qword ptr [rax+0x8]; 
0x00000000129802: mov eax, edi; or eax, esi; bswap eax; ret; 
0x00000000059752: mov eax, edi; ret; 
0x000000001297b4: mov eax, edi; rol ax, 0x8; ret; 
0x000000001296ce: mov eax, edi; sar rax, 0x6; ret; 
0x00000000129878: mov eax, edi; shr eax, 0x18; ret; 
0x00000000171e3f: mov eax, edi; sub r8, 0x10; lea rcx, [rdx+0x10]; jne 0x0000000000172390; ret; 
0x00000000172035: mov eax, edi; sub r8, 0x1; lea rcx, [rdx+0x1]; jne 0x0000000000172390; ret; 
0x00000000172057: mov eax, edi; sub r8, 0x2; lea rcx, [rdx+0x2]; jne 0x0000000000172390; ret; 
0x0000000017207d: mov eax, edi; sub r8, 0x3; lea rcx, [rdx+0x3]; jne 0x0000000000172390; ret; 
0x00000000172095: mov eax, edi; sub r8, 0x4; lea rcx, [rdx+0x4]; jne 0x0000000000172390; ret; 
0x000000001720bb: mov eax, edi; sub r8, 0x5; lea rcx, [rdx+0x5]; jne 0x0000000000172390; ret; 
0x000000001720dd: mov eax, edi; sub r8, 0x6; lea rcx, [rdx+0x6]; jne 0x0000000000172390; ret; 
0x000000001720fb: mov eax, edi; sub r8, 0x7; lea rcx, [rdx+0x7]; jne 0x0000000000172390; ret; 
0x00000000171dd7: mov eax, edi; sub r8, 0x8; lea rcx, [rdx+0x8]; jne 0x0000000000172390; ret; 
0x0000000017211d: mov eax, edi; sub r8, 0x9; lea rcx, [rdx+0x9]; jne 0x0000000000172390; ret; 
0x0000000017213d: mov eax, edi; sub r8, 0xa; lea rcx, [rdx+0xa]; jne 0x0000000000172390; ret; 
0x0000000017215d: mov eax, edi; sub r8, 0xb; lea rcx, [rdx+0xb]; jne 0x0000000000172390; ret; 
0x0000000017217d: mov eax, edi; sub r8, 0xc; lea rcx, [rdx+0xc]; jne 0x0000000000172390; ret; 
0x0000000017219f: mov eax, edi; sub r8, 0xd; lea rcx, [rdx+0xd]; jne 0x0000000000172390; ret; 
0x000000001721bf: mov eax, edi; sub r8, 0xe; lea rcx, [rdx+0xe]; jne 0x0000000000172390; ret; 
0x000000001721df: mov eax, edi; sub r8, 0xf; lea rcx, [rdx+0xf]; jne 0x0000000000172390; ret; 
0x0000000015a811: mov eax, edi; test eax, eax; jne short 0x000000000015a82c; mov eax, 0x27; syscall; 
0x00000000184391: mov eax, edi; vzeroupper; ret; 
0x000000000b84d6: mov eax, edx; and ecx, 0x3fc00; cmp edx, 0xff; cmove rax, rcx; ret; 
0x000000000407b5: mov eax, edx; and rax, [rsp-0x8]; sub rax, rdx; shr rax, 0x3f; ret; 
0x0000000012322c: mov eax, edx; cmove eax, esi; ret; 
0x000000001084e7: mov eax, edx; cmp r10, rax; jne short 0x0000000000108518; mov eax, 0x103; syscall; 
0x00000000108484: mov eax, edx; cmp rdx, rax; jne short 0x00000000001084b8; mov eax, 0x85; syscall; 
0x00000000139f24: mov eax, edx; mov byte ptr [r8], 0x0; ret; 
0x000000001377ec: mov eax, edx; mov edx, 0x7fffffff; add eax, ecx; cmovs eax, edx; ret; 
0x00000000139f21: mov eax, edx; mov rax, r10; mov byte ptr [r8], 0x0; ret; 
0x000000000f50b6: mov eax, edx; movsxd rdx, [r13+rdx*4]; add rdx, r13; notrack jmp rdx; 
0x000000000f790a: mov eax, edx; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x00000000137773: mov eax, edx; movsxd rdx, ecx; ret; 
0x00000000050a7b: mov eax, edx; or r8d, eax; mov rax, r8; ret; 
0x0000000009d90f: mov eax, edx; pop rbx; pop rbp; pop r12; ret; 
0x0000000005954a: mov eax, edx; pop rbx; pop rbp; ret; 
0x00000000054b95: mov eax, edx; pop rbx; ret; 
0x0000000003fb13: mov eax, edx; ret; 
0x00000000040438: mov eax, edx; sar eax, 0x10; ret; 
0x00000000028d12: mov eax, edx; syscall; 
0x0000000011dae3: mov eax, esi; dec dword ptr [rax-0x77]; ret; 
0x00000000149c95: mov eax, esi; mov dword ptr [rdi+0x18], 0x1; movups [rdi+0x8], xmm0; ret; 
0x00000000091b09: mov eax, esi; mov r10d, 0x8; mov rsi, r8; mov eax, 0xe; syscall; 
0x00000000041685: mov eax, esi; mov rsp, r8; mov rbp, r9; nop; jmp rdx; 
0x00000000146eac: mov eax, esi; movups [r8+0x8], xmm0; ret; 
0x0000000014a57d: mov eax, esi; movups [rdi+0x30], xmm0; ret; 
0x0000000012f336: mov eax, esi; pop rbx; ret; 
0x00000000059699: mov eax, esi; ret; 
0x000000000deb4d: mov eax, esi; syscall; 
0x00000000082445: mov eax, esp; pop r12; pop r13; pop r14; ret; 
0x0000000009d109: mov eax, esp; pop r12; pop r13; ret; 
0x00000000039609: mov eax, esp; pop r12; ret; 
0x00000000115802: mov eax, esp; pop rbp; pop r12; jmp rax; 
0x000000001149e9: mov eax, esp; pop rbp; pop r12; pop r13; jmp rax; 
0x000000000349b4: mov eax, esp; pop rbp; pop r12; pop r13; ret; 
0x00000000060798: mov eax, esp; pop rbp; pop r12; ret; 
0x00000000059b15: mov eax, esp; pop rbx; pop r12; ret; 
0x0000000003956b: mov eax, esp; pop rbx; pop rbp; pop r12; ret; 
0x0000000011415f: mov eax, esp; pop rdx; pop r12; ret; 
0x000000000463c4: mov eax, fs:[0x18]; test eax, eax; jne short 0x00000000000463e0; mov eax, 0x13e; syscall; 
0x000000000de637: mov eax, fs:[0x18]; test eax, eax; jne short 0x00000000000de658; mov eax, 0x3d; syscall; 
0x000000000de844: mov eax, fs:[0x18]; test eax, eax; jne short 0x00000000000de860; mov eax, 0x22; syscall; 
0x00000000106c97: mov eax, fs:[0x18]; test eax, eax; jne short 0x0000000000106cb8; mov eax, 0x11; syscall; 
0x00000000106d47: mov eax, fs:[0x18]; test eax, eax; jne short 0x0000000000106d68; mov eax, 0x12; syscall; 
0x00000000108b73: mov eax, fs:[0x18]; test eax, eax; jne short 0x0000000000108be0; mov eax, 0x101; syscall; 
0x00000000108ca4: mov eax, fs:[0x18]; test eax, eax; jne short 0x0000000000108cc0; syscall; 
0x00000000108d44: mov eax, fs:[0x18]; test eax, eax; jne short 0x0000000000108d60; mov eax, 0x1; syscall; 
0x000000001091b8: mov eax, fs:[0x18]; test eax, eax; jne short 0x00000000001091f0; mov eax, 0x48; syscall; 
0x000000001094e4: mov eax, fs:[0x18]; test eax, eax; jne short 0x0000000000109500; mov eax, 0x3; syscall; 
0x00000000109664: mov eax, fs:[0x18]; test eax, eax; jne short 0x0000000000109680; mov eax, 0x55; syscall; 
0x0000000010d624: mov eax, fs:[0x18]; test eax, eax; jne short 0x000000000010d640; mov eax, 0x7; syscall; 
0x0000000010dcc7: mov eax, fs:[0x18]; test eax, eax; jne short 0x000000000010dce8; mov eax, 0x146; syscall; 
0x0000000010e167: mov eax, fs:[0x18]; test eax, eax; jne short 0x000000000010e188; mov eax, 0x115; syscall; 
0x0000000010e217: mov eax, fs:[0x18]; test eax, eax; jne short 0x000000000010e238; mov eax, 0x11d; syscall; 
0x0000000010f344: mov eax, fs:[0x18]; test eax, eax; jne short 0x000000000010f360; mov eax, 0x13; syscall; 
0x0000000010f3e4: mov eax, fs:[0x18]; test eax, eax; jne short 0x000000000010f400; mov eax, 0x14; syscall; 
0x0000000010fec7: mov eax, fs:[0x18]; test eax, eax; jne short 0x000000000010fee8; mov eax, 0x17; syscall; 
0x00000000110104: mov eax, fs:[0x18]; test eax, eax; jne short 0x0000000000110120; mov eax, 0x4a; syscall; 
0x000000001101c4: mov eax, fs:[0x18]; test eax, eax; jne short 0x00000000001101e0; mov eax, 0x4b; syscall; 
0x00000000112b30: mov eax, fs:[0x18]; test eax, eax; jne short 0x0000000000112b48; sub dword ptr [rip+0xd4d0d], 0x1; ret; 
0x00000000113914: mov eax, fs:[0x18]; test eax, eax; jne short 0x0000000000113930; mov eax, 0x1a; syscall; 
0x00000000119517: mov eax, fs:[0x18]; test eax, eax; jne short 0x0000000000119538; mov eax, 0xe8; syscall; 
0x000000001195c7: mov eax, fs:[0x18]; test eax, eax; jne short 0x00000000001195e8; mov eax, 0x114; syscall; 
0x00000000119677: mov eax, fs:[0x18]; test eax, eax; jne short 0x0000000000119698; mov eax, 0x116; syscall; 
0x00000000119727: mov eax, fs:[0x18]; test eax, eax; jne short 0x0000000000119748; mov eax, 0x113; syscall; 
0x000000001197f4: mov eax, fs:[0x18]; test eax, eax; jne short 0x0000000000119810; mov eax, 0x130; syscall; 
0x0000000011a254: mov eax, fs:[0x18]; test eax, eax; jne short 0x000000000011a270; mov eax, 0x2b; syscall; 
0x0000000011a324: mov eax, fs:[0x18]; test eax, eax; jne short 0x000000000011a340; mov eax, 0x2a; syscall; 
0x0000000011a547: mov eax, fs:[0x18]; test eax, eax; jne short 0x000000000011a568; mov eax, 0x2d; syscall; 
0x0000000011a604: mov eax, fs:[0x18]; test eax, eax; jne short 0x000000000011a620; mov eax, 0x2f; syscall; 
0x0000000011a764: mov eax, fs:[0x18]; test eax, eax; jne short 0x000000000011a780; mov eax, 0x2e; syscall; 
0x0000000011a807: mov eax, fs:[0x18]; test eax, eax; jne short 0x000000000011a828; mov eax, 0x2c; syscall; 
0x0000000011ac67: mov eax, fs:[0x18]; test eax, eax; jne short 0x000000000011ac88; mov eax, 0x120; syscall; 
0x0000000011ad17: mov eax, fs:[0x18]; test eax, eax; jne short 0x000000000011ad38; mov eax, 0x12b; syscall; 
0x0000000011add7: mov eax, fs:[0x18]; test eax, eax; jne short 0x000000000011adf8; mov eax, 0x133; syscall; 
0x0000000011af77: mov eax, fs:[0x18]; test eax, eax; jne short 0x000000000011af98; mov eax, 0x45; syscall; 
0x0000000011b027: mov eax, fs:[0x18]; test eax, eax; jne short 0x000000000011b048; mov eax, 0x46; syscall; 
0x0000000011f2d8: mov eax, fs:[r12]; pop rbx; pop rbp; pop r12; ret; 
0x00000000108434: mov eax, fs:[rax]; cmp eax, 0x26; je short 0x0000000000108440; mov eax, r9d; ret; 
0x000000000464b7: mov eax, fs:[rax]; cmp eax, 0x4; je short 0x0000000000046480; mov eax, 0xffffffff; ret; 
0x00000000090da8: mov eax, fs:[rax]; ret; 
0x000000001198b5: mov eax, fs:[rdx]; cmp eax, 0x26; je short 0x00000000001198f4; mov eax, r8d; ret; 
0x000000001084e6: mov eax, r10d; cmp r10, rax; jne short 0x0000000000108518; mov eax, 0x103; syscall; 
0x00000000139e7d: mov eax, r10d; ret; 
0x0000000010e892: mov eax, r11d; pop rbx; ret; 
0x00000000082444: mov eax, r12d; pop r12; pop r13; pop r14; ret; 
0x0000000009a586: mov eax, r12d; pop r12; ret; 
0x0000000010886e: mov eax, r12d; pop rbp; pop r12; pop r13; ret; 
0x000000000866ef: mov eax, r12d; pop rbp; pop r12; ret; 
0x00000000059b14: mov eax, r12d; pop rbx; pop r12; ret; 
0x00000000042675: mov eax, r12d; pop rbx; pop rbp; pop r12; ret; 
0x000000000de9df: mov eax, r13d; pop rbp; pop r12; pop r13; ret; 
0x000000000418de: mov eax, r8d; add rsp, 0x118; ret; 
0x000000000418dd: mov eax, r8d; add rsp, 0x118; ret; 
0x0000000011226f: mov eax, r8d; add rsp, 0x8; ret; 
0x0000000013718b: mov eax, r8d; mov byte ptr [rdi+rdx], 0x0; ret; 
0x0000000010e854: mov eax, r8d; mov ebx, fs:[r10]; syscall; 
0x00000000156ca6: mov eax, r8d; mov qword ptr [rdx], 0x0; ret; 
0x00000000045e98: mov eax, r8d; movups [rdi], xmm0; ret; 
0x0000000010e82a: mov eax, r8d; movups [rsp+0x11], xmm0; syscall; 
0x000000000dba15: mov eax, r8d; pop r12; pop r13; pop r14; ret; 
0x00000000087f38: mov eax, r8d; pop r12; ret; 
0x0000000014a100: mov eax, r8d; pop rbp; pop r12; pop r13; ret; 
0x00000000034185: mov eax, r8d; pop rbp; pop r12; ret; 
0x000000001328a0: mov eax, r8d; pop rbp; ret; 
0x00000000045012: mov eax, r8d; pop rbx; pop rbp; pop r12; ret; 
0x0000000007e3d3: mov eax, r8d; pop rbx; pop rbp; ret; 
0x000000000420df: mov eax, r8d; pop rbx; ret; 
0x00000000038861: mov eax, r8d; ret; 
0x00000000091299: mov eax, r8d; syscall; 
0x00000000041af1: mov eax, r9d; add rsp, 0x148; ret; 
0x0000000010ea16: mov eax, r9d; add rsp, 0x38; ret; 
0x000000001299be: mov eax, r9d; pop rbx; pop rbp; pop r12; ret; 
0x00000000082d47: mov eax, r9d; ret; 
0x0000000004648a: mov eax, r9d; sub rsi, rdi; syscall; 
0x000000000897e5: mov eax, r9d; syscall; 
0x00000000075b3e: mov ebp, 0x1; jmp rsi; 
0x00000000076244: mov ebp, 0x1; mov ecx, 0x1; jmp rsi; 
0x00000000074bec: mov ebp, 0x1; xor ecx, ecx; jmp rsi; 
0x00000000121982: mov ebp, 0x2000001; mov rsi, rbp; mov [rsp+0x10], rax; mov rdx, rax; call qword ptr [r12+0x28]; 
0x0000000014d109: mov ebp, 0x20009; add [rax], al; pop rbx; ret; 
0x0000000017e611: mov ebp, 0x20c083c0; add rax, rdi; vzeroupper; ret; 
0x0000000017e621: mov ebp, 0x40c083c0; add rax, rdi; vzeroupper; ret; 
0x000000000a8951: mov ebp, 0x448d48c0; cmp [rax], ah; ret; 
0x000000000a8961: mov ebp, 0x448d48c0; cmp [rax], dh; ret; 
0x000000000a8941: mov ebp, 0x448d48c0; cmp [rax], dl; ret; 
0x00000000108ba2: mov ebp, 0x48000000; add esp, 0x78; ret; 
0x000000000356b7: mov ebp, 0x48001b10; lea edi, [rip+0x1afffe]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000011415a: mov ebp, 0x4c58fff4; mov eax, esp; pop rdx; pop r12; ret; 
0x0000000017e631: mov ebp, 0x60c083c0; add rax, rdi; ret; 
0x00000000156787: mov ebp, 0x640008c6; mov dword ptr [rax], 0x26; mov eax, 0xffffffff; ret; 
0x0000000013c027: mov ebp, 0x64000a6f; mov rax, [rax]; ret; 
0x00000000039aab: mov ebp, 0x80; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000117068: mov ebp, 0x8348000c; call qword ptr [rax]; 
0x000000000771c6: mov ebp, 0x89480016; out 0x48, eax; ror eax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000015937c: mov ebp, 0x988; call qword ptr [r13+0xf88]; 
0x0000000015950a: mov ebp, 0x988; call qword ptr [r13+0xf90]; 
0x000000000453e0: mov ebp, 0x988; call qword ptr [rbp+0xf90]; 
0x000000000453ad: mov ebp, 0x988; mov rdx, fs:[rax]; mov [rbx+0x18], rdx; mov fs:[rax], rbx; call qword ptr [rbp+0xf88]; 
0x0000000014d12a: mov ebp, 0xc1480009; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x000000000d99a5: mov ebp, 0xc1480010; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x00000000146e4b: mov ebp, 0xc8; call rax; 
0x0000000011704b: mov ebp, 0xd8f7000c; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001249cf: mov ebp, 0xe8000001; or [rbx-0xf], cl; dec dword ptr [rax-0x7d]; ret; 
0x000000000a8971: mov ebp, 0xea8348c0; add rdx, rax; jl short 0x00000000000a89e0; add rax, rdi; ret; 
0x0000000011a087: mov ebp, 0xf7000c8d; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x00000000119187: mov ebp, 0xf7000c9c; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x00000000116f87: mov ebp, 0xf7000cbe; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x00000000113a87: mov ebp, 0xf7000cf3; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x0000000010a087: mov ebp, 0xf7000d8d; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x00000000109587: mov ebp, 0xf7000d98; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x000000000fd187: mov ebp, 0xf7000e5c; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x000000000dfe87: mov ebp, 0xf700102f; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x000000000deb87: mov ebp, 0xf7001042; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x0000000017e6fb: mov ebp, 0xf80148c0; add rax, r8; vzeroupper; ret; 
0x000000000a8a67: mov ebp, 0xf80148c0; add rax, rsi; ret; 
0x000000000a8897: mov ebp, 0xf80148c0; ret; 
0x0000000017e520: mov ebp, 0xf80148c0; vzeroupper; ret; 
0x000000000ade9c: mov ebp, 0xf80148c6; ret; 
0x00000000144354: mov ebp, 0xfe53f6e8; jmp qword ptr [rsi+0xf]; 
0x0000000013193c: mov ebp, 0xffff48e9; jmp qword ptr [rsi+0xf]; 
0x0000000007885f: mov ebp, 0xfffff704; add [rcx-0x77], cl; ret far; 
0x00000000061e90: mov ebp, 0xfffffa20; mov rdx, r14; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000621e9: mov ebp, 0xfffffa20; xor esi, esi; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000069ee0: mov ebp, 0xfffffb00; mov rdx, r15; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000006a229: mov ebp, 0xfffffb00; xor esi, esi; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000e332f: mov ebp, 0xfffffb40; lea rsi, [rbp-0x450]; call qword ptr [rbx+0x40]; 
0x000000000feed6: mov ebp, 0xfffffe50; mov rdx, [r12]; mov rax, [rbp-0x1e0]; call rax; 
0x000000000ff0c6: mov ebp, 0xfffffe50; push rax; mov rax, [rbp-0x1e0]; mov rcx, [r12]; call rax; 
0x0000000010b7aa: mov ebp, 0xfffffee8; mov rsi, r9; call qword ptr [rbp-0xf0]; 
0x0000000009384c: mov ebp, [rip+0x14f53e]; xor edi, edi; call qword ptr [r13]; 
0x0000000015936f: mov ebp, [rip+0x89a43]; mov [rsp+0x8], rcx; lea rdi, [r13+0x988]; call qword ptr [r13+0xf88]; 
0x000000000ff76b: mov ebp, [rip+0xe36d7]; add rbx, fs:[0x0]; mov r9, rbx; add r8, r13; call r14; 
0x00000000114afc: mov ebp, [rsp+0x10]; test r13, r13; jne short 0x0000000000114b7b; mov rdi, [r12]; call rbx; 
0x00000000114b2c: mov ebp, [rsp+0x10]; test r13, r13; jne short 0x0000000000114bb0; mov rdi, [r12]; call rbx; 
0x00000000115978: mov ebp, [rsp+0x10]; test r13, r13; jne short 0x00000000001159e0; mov rdi, [r12]; call rbx; 
0x000000001509d4: mov ebp, eax; and eax, 0xffffffff; mov [rsp], rax; mov rax, [rbp+0x8]; call qword ptr [rax+0x8]; 
0x00000000143fcc: mov ebp, eax; bswap edx; mov [rcx], edx; mov edx, eax; call qword ptr [rbx+0x10]; 
0x00000000042cc8: mov ebp, eax; mov rdi, r12; call rbx; 
0x0000000009b846: mov ebp, eax; test r13, r13; jne 0x000000000009b6f1; mov rax, [rip+0x1476d8]; call qword ptr [rax]; 
0x000000001470c6: mov ebp, ebp; call qword ptr [rax+0x18]; 
0x000000001150e3: mov ebp, ebx; mov rdi, rbp; call r12; 
0x0000000004168b: mov ebp, ecx; nop; jmp rdx; 
0x00000000150d51: mov ebp, edi; jmp qword ptr [rsi+0x66]; 
0x00000000043ace: mov ebp, edi; mov rax, [rsp]; add r15, r12; call rax; 
0x000000001097c6: mov ebp, edi; mov rdi, rbp; mov eax, 0x4f; syscall; 
0x000000000369fa: mov ebp, edi; test rax, rax; je short 0x0000000000036a03; call rax; 
0x00000000094bff: mov ebp, edi; test rdi, rdi; js 0x0000000000094d94; mov rax, [rip+0x14e17f]; call qword ptr [rax]; 
0x000000001449fc: mov ebp, edx; call qword ptr [rbx+0x10]; 
0x0000000007f3d7: mov ebp, edx; mov rdi, [rdi+0xe0]; call rax; 
0x00000000129872: mov ebx, 0x401f0f; mov eax, edi; shr eax, 0x18; ret; 
0x000000001297e1: mov ebx, 0x441f0f; add [rcx-0xda08], cl; inc dword ptr [rax]; ret; 
0x00000000167057: mov ebx, 0x46f00ff2; ret far; 
0x00000000167051: mov ebx, 0x477f0ff3; mov ebx, 0x46f00ff2; ret far; 
0x0000000014bd71: mov ebx, 0x48fff93d; lea esi, [rsp+0x10]; mov edi, eax; call rbp; 
0x00000000161b83: mov ebx, 0x4e6f0ff3; ret far; 
0x00000000161ba2: mov ebx, 0x4f7f0ff3; ret far; 
0x0000000007ba6f: mov ebx, 0x63480012; or al, 0x8e; lea rsi, [rip-0x125d]; add rcx, rsi; jmp rcx; 
0x00000000090a03: mov ebx, 0x740afa83; or al, 0x44; mov eax, eax; ret; 
0x000000001077b7: mov ebx, 0x80; call qword ptr [rax+0x88]; 
0x0000000003d914: mov ebx, 0x850f5f3c; test byte ptr [rax], 0x0; add [rax-0x7d], cl; ret; 
0x0000000003abcf: mov ebx, 0x8d48001a; cmp eax, 0x1aaae7; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003aba8: mov ebx, 0x8d48001a; cmp eax, 0x1aad0e; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000139f11: mov ebx, 0xc641; mov rax, r10; ret; 
0x00000000113689: mov ebx, 0xf7000cf7; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x000000000f185c: mov ebx, 0xf708588b; ret; 
0x0000000010e858: mov ebx, [r10]; syscall; 
0x0000000006a175: mov ebx, [rbp-0x5c0]; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x0000000010e859: mov ebx, [rdx]; syscall; 
0x00000000161391: mov ebx, [rsi-0x10]; mov rdx, [rsi-0x8]; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x0000000007b3c3: mov ebx, [rsp+0x68]; jmp rcx; 
0x00000000075a95: mov ebx, [rsp+0x80]; jmp rsi; 
0x000000000f50b2: mov ebx, [rsp]; mov rax, rdx; movsxd rdx, [r13+rdx*4]; add rdx, r13; notrack jmp rdx; 
0x000000000f7948: mov ebx, [rsp]; mov rax, rdx; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x0000000014c056: mov ebx, eax; pop rax; mov rax, [rbp+0x8]; pop rdx; call qword ptr [rax+0x20]; 
0x000000000da789: mov ebx, ebp; mov rdi, rbp; call r12; 
0x00000000075506: mov ebx, ecx; mov ecx, 0x1; jmp rsi; 
0x00000000076241: mov ebx, ecx; mov r13d, 0x1; mov ecx, 0x1; jmp rsi; 
0x00000000074be9: mov ebx, ecx; mov r13d, 0x1; xor ecx, ecx; jmp rsi; 
0x00000000074b9e: mov ebx, ecx; xor ecx, ecx; jmp rsi; 
0x000000000755b6: mov ebx, edi; jmp rsi; 
0x000000000759e8: mov ebx, edi; mov dword ptr [rsp+0x28], 0x1; jmp rsi; 
0x00000000075b3b: mov ebx, edi; mov r13d, 0x1; jmp rsi; 
0x00000000119011: mov ebx, edi; mov rdi, rcx; sub rsp, 0x8; call rsi; 
0x00000000083e0d: mov ebx, edi; test byte ptr [rdi], 0x2; jne short 0x0000000000083e88; mov rax, [rax+0xe0]; call qword ptr [rax+0x68]; 
0x0000000007b268: mov ebx, edx; mov edx, 0x1; jmp rcx; 
0x000000000758f7: mov ebx, edx; mov edx, 0x1; jmp rsi; 
0x0000000007bf49: mov ebx, edx; mov r9d, 0x1; mov edx, 0x1; jmp rcx; 
0x0000000007a6e1: mov ebx, edx; mov r9d, 0x1; xor edx, edx; jmp rcx; 
0x000000000762a9: mov ebx, edx; mov r9d, 0x1; xor edx, edx; jmp rsi; 
0x0000000007a698: mov ebx, edx; xor edx, edx; jmp rcx; 
0x000000000758a6: mov ebx, edx; xor edx, edx; jmp rsi; 
0x000000000ed99f: mov ebx, esi; call far fword ptr [rbx+0x4c]; 
0x00000000114645: mov ebx, esi; je short 0x0000000000114650; pop rbx; ret; 
0x000000000ed9af: mov ebx, esi; jmp qword ptr [rsi+0xf]; 
0x0000000007b0aa: mov ebx, esi; jmp rcx; 
0x0000000007b186: mov ebx, esi; mov dword ptr [rsp+0x28], 0x20; jmp rcx; 
0x0000000007bf69: mov ebx, esi; mov r10d, 0x1; jmp rcx; 
0x0000000007bda1: mov ebx, esi; mov r12d, 0x1; jmp rcx; 
0x0000000007b1ce: mov ebx, esi; mov r9d, 0x1; jmp rcx; 
0x0000000012961f: mov ebx, esi; xor edi, edi; lea rsi, [rsp-0x18]; mov eax, 0x83; syscall; 
0x0000000007b21e: mov ebx, esi; xor r12d, r12d; jmp rcx; 
0x0000000010e857: mov ebx, fs:[r10]; syscall; 
0x0000000002abc0: mov ebx, gs; adc al, [rax]; mov rdi, rbx; call r14; 
0x0000000007b1d1: mov ecx, 0x1; jmp rcx; 
0x00000000075508: mov ecx, 0x1; jmp rsi; 
0x0000000007bf4c: mov ecx, 0x1; mov edx, 0x1; jmp rcx; 
0x0000000007a6e4: mov ecx, 0x1; xor edx, edx; jmp rcx; 
0x000000000762ac: mov ecx, 0x1; xor edx, edx; jmp rsi; 
0x0000000004188a: mov ecx, 0x27; mov eax, ecx; syscall; 
0x0000000008cdf4: mov ecx, 0x3; mov edx, 0x1; mov rdi, rbx; call qword ptr [r12+0x48]; 
0x000000000596fb: mov ecx, 0x3a8; mov rsp, rdx; ret; 
0x0000000012f3d8: mov ecx, 0x400; mov rdx, r15; mov rsi, r14; mov rdi, rbx; call rax; 
0x00000000035403: mov ecx, 0x48001b02; ror eax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000373a8: mov ecx, 0x4864001a; mov eax, [rax]; mov rax, [rax]; mov eax, [rax+0xa8]; ret; 
0x0000000008439b: mov ecx, 0x4c000001; mov edi, edi; call qword ptr [rax+0x20]; 
0x000000001438b3: mov ecx, 0x4c0000da; mov eax, esp; pop r12; ret; 
0x0000000013d252: mov ecx, 0x50f000a; pop rbp; ret; 
0x0000000013d1eb: mov ecx, 0x5d01000a; ret; 
0x0000000008108b: mov ecx, 0x6400161d; mov dword ptr [rax], 0x16; mov rax, 0xffffffffffffffff; ret; 
0x0000000015ab35: mov ecx, 0x8041ffec; jl short 0x000000000015ab40; jmp far fword ptr [rdi]; 
0x00000000133279: mov ecx, 0x89480000; ret; 
0x00000000119324: mov ecx, 0x8; mov eax, 0x119; syscall; 
0x0000000011c0d4: mov ecx, 0x8b48000c; sbb [rbx-0x6f3cff00], al; ret; 
0x0000000011c0c4: mov ecx, 0x8b48000c; sbb [rsi-0x7d], spl; add [rcx], al; ret; 
0x0000000009d56f: mov ecx, 0x8d480000; adc eax, 0xccf47; cmovne rax, rdx; ret; 
0x0000000009d1bb: mov ecx, 0x8d480000; adc eax, 0xed74b; cmovne rax, rdx; ret; 
0x0000000003ae55: mov ecx, 0x8d48001a; cmp eax, 0x1aaae1; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000113868: mov ecx, 0x9; xor edi, edi; or r10d, 0x40; mov eax, ecx; syscall; 
0x0000000011b28b: mov ecx, 0xf7000c7b; fsub st, dword ptr [rcx+rcx*4+0x2]; mov rax, 0xffffffffffffffff; ret; 
0x0000000010ed8b: mov ecx, 0xf7000d40; fsub st, dword ptr [rcx+rcx*4+0x2]; mov eax, 0xffffffff; ret; 
0x000000000fd34a: mov ecx, 0xffffffff; mov fs:[rdx], eax; mov eax, r9d; ret; 
0x000000000837a6: mov ecx, [rax+0x10]; mov [rax], rdx; mov [rax+0x10], rdx; mov [rax+0x40], rcx; ret; 
0x0000000011a308: mov ecx, [rax+rax]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011a2c4: mov ecx, [rax+rax]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000007bdc6: mov ecx, [rax-0x73]; sbb eax, 0xffffea52; add rcx, rbx; mov rbx, rsi; jmp rcx; 
0x0000000007b4d6: mov ecx, [rax-0x73]; sbb eax, 0xfffff342; add rcx, rbx; mov rbx, rsi; jmp rcx; 
0x0000000007b45e: mov ecx, [rax-0x73]; sbb eax, 0xfffff3ba; add rcx, rbx; mov rbx, rsi; jmp rcx; 
0x0000000007b412: mov ecx, [rax-0x73]; sbb eax, 0xfffff406; add rcx, rbx; mov rbx, rsi; jmp rcx; 
0x0000000007b3b7: mov ecx, [rax-0x73]; sbb eax, 0xfffff461; add rcx, rbx; mov rbx, [rsp+0x68]; jmp rcx; 
0x0000000007b134: mov ecx, [rax-0x73]; sbb eax, 0xfffff6e4; add rcx, rbx; mov rbx, rsi; jmp rcx; 
0x0000000007b0f0: mov ecx, [rax-0x73]; sbb eax, 0xfffff728; add rcx, rbx; mov rbx, rsi; jmp rcx; 
0x0000000007b09e: mov ecx, [rax-0x73]; sbb eax, 0xfffff77a; add rcx, rbx; mov rbx, rsi; jmp rcx; 
0x0000000012f691: mov ecx, [rax]; call far fword ptr [rax+0x4c]; 
0x0000000011bd86: mov ecx, [rax]; mov [rdx+0x10], rcx; mov [r8], rax; mov qword ptr [rip+0xc75e6], 0x0; ret; 
0x0000000011bd06: mov ecx, [rax]; mov [rdx+0x10], rcx; mov [r8], rax; mov qword ptr [rip+0xc7666], 0x0; ret; 
0x00000000164f4e: mov ecx, [rbp+0x1]; fnstcw [rsi]; jmp r9; 
0x00000000126d98: mov ecx, [rbp-0x8]; sub rcx, fs:[0x28]; jne 0x0000000000126e7d; leave; ret; 
0x000000000536e7: mov ecx, [rcx+rax*8]; mov [rdx+rax*8], rcx; xor eax, eax; ret; 
0x0000000011d1c5: mov ecx, [rcx+rsi]; test ecx, ecx; jne short 0x000000000011d1d0; ret; 
0x0000000011da1c: mov ecx, [rcx+rsi]; test ecx, ecx; jne short 0x000000000011da28; ret; 
0x0000000011da79: mov ecx, [rcx+rsi]; test ecx, ecx; jne short 0x000000000011da88; ret; 
0x000000001895f3: mov ecx, [rcx-0x2]; mov [rdi], si; mov [r9-0x2], cx; ret; 
0x000000001895e0: mov ecx, [rcx-0x4]; mov [rdi], esi; mov [r9-0x4], ecx; ret; 
0x000000001895df: mov ecx, [rcx-0x4]; mov [rdi], esi; mov [r9-0x4], ecx; ret; 
0x000000001895ce: mov ecx, [rcx-0x8]; mov [rdi], rsi; mov [r9-0x8], rcx; ret; 
0x0000000011b345: mov ecx, [rdi+0x8]; xor eax, eax; cmp byte ptr [rcx], 0x0; je short 0x000000000011b350; ret; 
0x000000000b8fab: mov ecx, [rdi+r8*4]; test ecx, ecx; jne short 0x00000000000b8f88; mov rax, r8; ret; 
0x000000000b8fac: mov ecx, [rdi+rax*4]; test ecx, ecx; jne short 0x00000000000b8f88; mov rax, r8; ret; 
0x00000000185db6: mov ecx, [rdi+rdx+0x20]; cmp ecx, [rsi+rdx+0x20]; jne short 0x0000000000185d99; vzeroupper; ret; 
0x00000000185dd6: mov ecx, [rdi+rdx+0x40]; cmp ecx, [rsi+rdx+0x40]; jne short 0x0000000000185d99; vzeroupper; ret; 
0x00000000185df6: mov ecx, [rdi+rdx+0x60]; cmp ecx, [rsi+rdx+0x60]; jne short 0x0000000000185d99; vzeroupper; ret; 
0x0000000018611c: mov ecx, [rdi+rdx]; cmp ecx, [rsi+rdx]; jne 0x0000000000185d99; vzeroupper; ret; 
0x00000000186614: mov ecx, [rdi+rdx]; cmp ecx, [rsi+rdx]; jne 0x0000000000186209; vzeroupper; ret; 
0x00000000186233: mov ecx, [rdi+rdx]; cmp ecx, [rsi+rdx]; jne short 0x0000000000186209; vzeroupper; ret; 
0x0000000015f99e: mov ecx, [rdi-0x73]; or al, 0xb; notrack jmp r9; 
0x000000001865f2: mov ecx, [rdi]; cmp ecx, [rsi]; jne 0x0000000000186209; vzeroupper; ret; 
0x00000000053172: mov ecx, [rdx+0x30]; mov rdx, [rdx+0x88]; xor eax, eax; ret; 
0x000000000ab0e3: mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x000000000dfee5: mov ecx, [rip+0x102f5d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000dfeb5: mov ecx, [rip+0x102f8d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000dfe85: mov ecx, [rip+0x102fbd]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000dfe55: mov ecx, [rip+0x102fed]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000dfdf5: mov ecx, [rip+0x10304d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000dfdc5: mov ecx, [rip+0x10307d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000dfb75: mov ecx, [rip+0x1032cd]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000deb85: mov ecx, [rip+0x1042bd]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000de7b5: mov ecx, [rip+0x10468d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000de565: mov ecx, [rip+0x1048dd]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000053659: mov ecx, [rip+0x18f7e9]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000053180: mov ecx, [rip+0x18fcc2]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000005301d: mov ecx, [rip+0x18fe25]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000421d5: mov ecx, [rip+0x1a0c6d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000041bd5: mov ecx, [rip+0x1a126d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001623cf: mov ecx, [rip+0x80f6b]; lea r11, [rip+0x55734]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x00000000162375: mov ecx, [rip+0x80fc5]; lea r11, [rip+0x5574e]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x0000000015f9ef: mov ecx, [rip+0x8394b]; lea r11, [rip+0x57f54]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x0000000015f98e: mov ecx, [rip+0x839ac]; lea r11, [rip+0x57f75]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x0000000011a978: mov ecx, [rip+0xc84ca]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011a945: mov ecx, [rip+0xc84fd]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011a915: mov ecx, [rip+0xc852d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011a8e8: mov ecx, [rip+0xc855a]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011a465: mov ecx, [rip+0xc89dd]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011a438: mov ecx, [rip+0xc8a0a]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011a405: mov ecx, [rip+0xc8a3d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011a3d5: mov ecx, [rip+0xc8a6d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011a305: mov ecx, [rip+0xc8b3d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011a215: mov ecx, [rip+0xc8c2d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011a1d5: mov ecx, [rip+0xc8c6d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011a1a5: mov ecx, [rip+0xc8c9d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011a175: mov ecx, [rip+0xc8ccd]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011a145: mov ecx, [rip+0xc8cfd]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011a118: mov ecx, [rip+0xc8d2a]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011a0e5: mov ecx, [rip+0xc8d5d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011a0b5: mov ecx, [rip+0xc8d8d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011a085: mov ecx, [rip+0xc8dbd]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011a055: mov ecx, [rip+0xc8ded]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011a025: mov ecx, [rip+0xc8e1d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000119ff8: mov ecx, [rip+0xc8e4a]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000119fc8: mov ecx, [rip+0xc8e7a]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000119f95: mov ecx, [rip+0xc8ead]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000119f65: mov ecx, [rip+0xc8edd]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000119f38: mov ecx, [rip+0xc8f0a]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000119f08: mov ecx, [rip+0xc8f3a]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000119ed5: mov ecx, [rip+0xc8f6d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000119ea5: mov ecx, [rip+0xc8f9d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000119e75: mov ecx, [rip+0xc8fcd]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000119e45: mov ecx, [rip+0xc8ffd]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000119e15: mov ecx, [rip+0xc902d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000119de8: mov ecx, [rip+0xc905a]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000119db5: mov ecx, [rip+0xc908d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000119d88: mov ecx, [rip+0xc90ba]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000119d55: mov ecx, [rip+0xc90ed]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000119d25: mov ecx, [rip+0xc911d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000119cf5: mov ecx, [rip+0xc914d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000119cc5: mov ecx, [rip+0xc917d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000119c95: mov ecx, [rip+0xc91ad]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000119c65: mov ecx, [rip+0xc91dd]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000119c38: mov ecx, [rip+0xc920a]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000119bf5: mov ecx, [rip+0xc924d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000119bc5: mov ecx, [rip+0xc927d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001194f5: mov ecx, [rip+0xc994d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001194c8: mov ecx, [rip+0xc997a]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000119435: mov ecx, [rip+0xc9a0d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001192f5: mov ecx, [rip+0xc9b4d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001192c5: mov ecx, [rip+0xc9b7d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011922e: mov ecx, [rip+0xc9c14]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001191b5: mov ecx, [rip+0xc9c8d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000119185: mov ecx, [rip+0xc9cbd]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000117048: mov ecx, [rip+0xcbdfa]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000117015: mov ecx, [rip+0xcbe2d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000116fe8: mov ecx, [rip+0xcbe5a]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000116fb5: mov ecx, [rip+0xcbe8d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000116f85: mov ecx, [rip+0xcbebd]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000116f58: mov ecx, [rip+0xcbeea]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000116f25: mov ecx, [rip+0xcbf1d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000116ef8: mov ecx, [rip+0xcbf4a]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000116ec8: mov ecx, [rip+0xcbf7a]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000116e95: mov ecx, [rip+0xcbfad]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000116e65: mov ecx, [rip+0xcbfdd]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000116e38: mov ecx, [rip+0xcc00a]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000113ae5: mov ecx, [rip+0xcf35d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000113ab5: mov ecx, [rip+0xcf38d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000113a85: mov ecx, [rip+0xcf3bd]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000113a55: mov ecx, [rip+0xcf3ed]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000113a28: mov ecx, [rip+0xcf41a]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001139f5: mov ecx, [rip+0xcf44d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001139c5: mov ecx, [rip+0xcf47d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001138f5: mov ecx, [rip+0xcf54d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001138c5: mov ecx, [rip+0xcf57d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000113687: mov ecx, [rip+0xcf7bb]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000110605: mov ecx, [rip+0xd283d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001105d5: mov ecx, [rip+0xd286d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001105a5: mov ecx, [rip+0xd289d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000110265: mov ecx, [rip+0xd2bdd]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001101a5: mov ecx, [rip+0xd2c9d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001100e5: mov ecx, [rip+0xd2d5d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001100b5: mov ecx, [rip+0xd2d8d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010fea5: mov ecx, [rip+0xd2f9d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010fd65: mov ecx, [rip+0xd30dd]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010f325: mov ecx, [rip+0xd3b1d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010f195: mov ecx, [rip+0xd3cad]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010dca8: mov ecx, [rip+0xd519a]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010a9f5: mov ecx, [rip+0xd844d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010a9c5: mov ecx, [rip+0xd847d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010a995: mov ecx, [rip+0xd84ad]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010a968: mov ecx, [rip+0xd84da]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010a935: mov ecx, [rip+0xd850d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010a905: mov ecx, [rip+0xd853d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010a8d5: mov ecx, [rip+0xd856d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010a8a8: mov ecx, [rip+0xd859a]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010a875: mov ecx, [rip+0xd85cd]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010a0b8: mov ecx, [rip+0xd8d8a]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010a085: mov ecx, [rip+0xd8dbd]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010a055: mov ecx, [rip+0xd8ded]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010a025: mov ecx, [rip+0xd8e1d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000109735: mov ecx, [rip+0xd970d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000109705: mov ecx, [rip+0xd973d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000109645: mov ecx, [rip+0xd97fd]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000109615: mov ecx, [rip+0xd982d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001095e5: mov ecx, [rip+0xd985d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001095b5: mov ecx, [rip+0xd988d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000109585: mov ecx, [rip+0xd98bd]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000109265: mov ecx, [rip+0xd9bdd]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000108965: mov ecx, [rip+0xda4dd]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000108935: mov ecx, [rip+0xda50d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000108735: mov ecx, [rip+0xda70d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000108705: mov ecx, [rip+0xda73d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001085d5: mov ecx, [rip+0xda86d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001085a5: mov ecx, [rip+0xda89d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000fd2a5: mov ecx, [rip+0xe5b9d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000fd275: mov ecx, [rip+0xe5bcd]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000fd245: mov ecx, [rip+0xe5bfd]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000fd215: mov ecx, [rip+0xe5c2d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000fd1e5: mov ecx, [rip+0xe5c5d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000fd1b5: mov ecx, [rip+0xe5c8d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000fd185: mov ecx, [rip+0xe5cbd]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000b4915: mov ecx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], cx; lea rax, [rdi+0x11]; ret; 
0x000000000b5785: mov ecx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], cx; lea rax, [rdi+0x12]; ret; 
0x000000000b3265: mov ecx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], cx; ret; 
0x000000000b4954: mov ecx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], ecx; lea rax, [rdi+0x13]; ret; 
0x000000000b57c4: mov ecx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], ecx; lea rax, [rdi+0x14]; ret; 
0x000000000b32a4: mov ecx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], ecx; mov [rdi+0x14], dh; ret; 
0x000000000b3294: mov ecx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], ecx; ret; 
0x000000000b49d5: mov ecx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], rcx; lea rax, [rdi+0x17]; ret; 
0x000000000b5845: mov ecx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], rcx; lea rax, [rdi+0x18]; ret; 
0x000000000b3325: mov ecx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], rcx; mov [rdi+0x18], dh; ret; 
0x000000000b3305: mov ecx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], rcx; ret; 
0x000000000b3368: mov ecx, [rsi+0x17]; movdqu [rdi], xmm0; mov [rdi+0x10], rdx; mov [rdi+0x17], ecx; ret; 
0x000000000b3349: mov ecx, [rsi+0x18]; movdqu [rdi], xmm0; mov [rdi+0x10], rdx; mov [rdi+0x18], cx; ret; 
0x000000000b3388: mov ecx, [rsi+0x18]; movdqu [rdi], xmm0; mov [rdi+0x10], rdx; mov [rdi+0x18], ecx; ret; 
0x000000000caf18: mov ecx, [rsi+0xc]; cmp [rdi+0xc], ecx; jne 0x00000000000cb090; xor eax, eax; ret; 
0x000000000b4995: mov ecx, [rsi+0xe]; movdqu [rdi], xmm0; mov [rdi+0xe], rcx; lea rax, [rdi+0x15]; ret; 
0x000000000b5805: mov ecx, [rsi+0xe]; movdqu [rdi], xmm0; mov [rdi+0xe], rcx; lea rax, [rdi+0x16]; ret; 
0x000000000b32c5: mov ecx, [rsi+0xe]; movdqu [rdi], xmm0; mov [rdi+0xe], rcx; ret; 
0x000000000b4934: mov ecx, [rsi+0xf]; movdqu [rdi], xmm0; mov [rdi+0xf], ecx; lea rax, [rdi+0x12]; ret; 
0x000000000b57a4: mov ecx, [rsi+0xf]; movdqu [rdi], xmm0; mov [rdi+0xf], ecx; lea rax, [rdi+0x13]; ret; 
0x000000000b3284: mov ecx, [rsi+0xf]; movdqu [rdi], xmm0; mov [rdi+0xf], ecx; ret; 
0x000000000b49b5: mov ecx, [rsi+0xf]; movdqu [rdi], xmm0; mov [rdi+0xf], rcx; lea rax, [rdi+0x16]; ret; 
0x000000000b5825: mov ecx, [rsi+0xf]; movdqu [rdi], xmm0; mov [rdi+0xf], rcx; lea rax, [rdi+0x17]; ret; 
0x000000000b32e5: mov ecx, [rsi+0xf]; movdqu [rdi], xmm0; mov [rdi+0xf], rcx; ret; 
0x00000000185f55: mov ecx, [rsi+rdi+0x20]; cmp ecx, [rdx+rdi+0x20]; jne 0x0000000000185d99; vzeroupper; ret; 
0x00000000185f85: mov ecx, [rsi+rdi+0x40]; cmp ecx, [rdx+rdi+0x40]; jne 0x0000000000185d99; vzeroupper; ret; 
0x000000001863ec: mov ecx, [rsi+rdi]; cmp ecx, [rdx+rdi]; jne 0x0000000000186209; vzeroupper; ret; 
0x000000001846d4: mov ecx, [rsi+rdx-0x3]; mov [rdi+rdx-0x3], ecx; lea rax, [rdi+rdx]; vzeroupper; ret; 
0x00000000182c34: mov ecx, [rsi+rdx-0x3]; mov [rdi+rdx-0x3], ecx; vzeroupper; ret; 
0x000000000b7f13: mov ecx, [rsi+rdx-0x4]; mov esi, [rsi]; mov [rdi+rdx-0x4], ecx; mov [rdi], esi; ret; 
0x00000000182c44: mov ecx, [rsi+rdx-0x7]; mov [rdi], rcx; mov [rdi+rdx-0x7], r9; vzeroupper; ret; 
0x000000000b7f03: mov ecx, [rsi+rdx-0x8]; mov rsi, [rsi]; mov [rdi+rdx-0x8], rcx; mov [rdi], rsi; ret; 
0x00000000161945: mov ecx, [rsi-0x2]; mov [rdi-0x3], dx; mov [rdi-0x2], cx; ret; 
0x0000000018be3f: mov ecx, [rsi-0x4]; cmp eax, ecx; jne 0x000000000018c050; xor eax, eax; ret; 
0x00000000189211: mov ecx, [rsi-0x4]; cmp ecx, [rdi-0x4]; jne 0x0000000000189446; xor eax, eax; ret; 
0x00000000187e46: mov ecx, [rsi-0x4]; cmp ecx, eax; jne 0x00000000001885ff; xor eax, eax; ret; 
0x00000000161d23: mov ecx, [rsi-0x4]; mov [rdi-0x5], edx; mov [rdi-0x4], ecx; ret; 
0x00000000161f23: mov ecx, [rsi-0x4]; mov [rdi-0x6], edx; mov [rdi-0x4], ecx; ret; 
0x00000000162123: mov ecx, [rsi-0x4]; mov [rdi-0x7], edx; mov [rdi-0x4], ecx; ret; 
0x00000000166e94: mov ecx, [rsi-0x4]; mov [rdi-0x9], rdx; mov [rdi-0x4], ecx; ret; 
0x00000000166e14: mov ecx, [rsi-0x4]; mov [rdi-0xa], rdx; mov [rdi-0x4], ecx; ret; 
0x00000000166d94: mov ecx, [rsi-0x4]; mov [rdi-0xb], rdx; mov [rdi-0x4], ecx; ret; 
0x00000000166d14: mov ecx, [rsi-0x4]; mov [rdi-0xc], rdx; mov [rdi-0x4], ecx; ret; 
0x00000000187bbb: mov ecx, [rsi-0x8]; cmp rcx, rax; jne 0x00000000001885f3; xor eax, eax; ret; 
0x000000001891eb: mov ecx, [rsi-0x8]; cmp rcx, rax; jne 0x0000000000189433; xor eax, eax; ret; 
0x000000001885c7: mov ecx, [rsi-0x8]; cmp rcx, rax; jne short 0x00000000001885f3; xor eax, eax; ret; 
0x00000000189407: mov ecx, [rsi-0x8]; cmp rcx, rax; jne short 0x0000000000189433; xor eax, eax; ret; 
0x00000000166c85: mov ecx, [rsi-0x8]; mov [rdi-0xd], rdx; mov [rdi-0x8], rcx; ret; 
0x00000000166bf5: mov ecx, [rsi-0x8]; mov [rdi-0xe], rdx; mov [rdi-0x8], rcx; ret; 
0x00000000166b65: mov ecx, [rsi-0x8]; mov [rdi-0xf], rdx; mov [rdi-0x8], rcx; ret; 
0x00000000161571: mov ecx, [rsi-0x9]; mov edx, [rsi-0x4]; mov [rdi-0x9], rcx; mov [rdi-0x4], edx; ret; 
0x00000000161751: mov ecx, [rsi-0xa]; mov edx, [rsi-0x4]; mov [rdi-0xa], rcx; mov [rdi-0x4], edx; ret; 
0x00000000161931: mov ecx, [rsi-0xb]; mov edx, [rsi-0x4]; mov [rdi-0xb], rcx; mov [rdi-0x4], edx; ret; 
0x00000000161b11: mov ecx, [rsi-0xc]; mov edx, [rsi-0x4]; mov [rdi-0xc], rcx; mov [rdi-0x4], edx; ret; 
0x00000000161d01: mov ecx, [rsi-0xd]; mov rdx, [rsi-0x8]; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000161f01: mov ecx, [rsi-0xe]; mov rdx, [rsi-0x8]; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000162101: mov ecx, [rsi-0xf]; mov rdx, [rsi-0x8]; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x000000001678a5: mov ecx, [rsi]; mov [rdi+0x1], dx; mov [rdi], cx; ret; 
0x000000001677c3: mov ecx, [rsi]; mov [rdi+0x1], edx; mov [rdi], ecx; ret; 
0x00000000167605: mov ecx, [rsi]; mov [rdi+0x1], rdx; mov [rdi], rcx; ret; 
0x00000000167753: mov ecx, [rsi]; mov [rdi+0x2], edx; mov [rdi], ecx; ret; 
0x00000000167595: mov ecx, [rsi]; mov [rdi+0x2], rdx; mov [rdi], rcx; ret; 
0x000000001676e3: mov ecx, [rsi]; mov [rdi+0x3], edx; mov [rdi], ecx; ret; 
0x00000000167525: mov ecx, [rsi]; mov [rdi+0x3], rdx; mov [rdi], rcx; ret; 
0x000000000b47d0: mov ecx, [rsi]; mov [rdi+0x4], dh; mov [rdi], ecx; lea rax, [rdi+0x4]; ret; 
0x000000000b3190: mov ecx, [rsi]; mov [rdi+0x4], dh; mov [rdi], ecx; ret; 
0x000000001674b5: mov ecx, [rsi]; mov [rdi+0x4], rdx; mov [rdi], rcx; ret; 
0x00000000167445: mov ecx, [rsi]; mov [rdi+0x5], rdx; mov [rdi], rcx; ret; 
0x000000001673d5: mov ecx, [rsi]; mov [rdi+0x6], rdx; mov [rdi], rcx; ret; 
0x00000000167365: mov ecx, [rsi]; mov [rdi+0x7], rdx; mov [rdi], rcx; ret; 
0x000000000b4821: mov ecx, [rsi]; mov [rdi+0x8], dh; mov [rdi], rcx; lea rax, [rdi+0x8]; ret; 
0x000000000b31d1: mov ecx, [rsi]; mov [rdi+0x8], dh; mov [rdi], rcx; ret; 
0x000000000b47b1: mov ecx, [rsi]; mov [rdi], cx; mov [rdi+0x2], dh; lea rax, [rdi+0x2]; ret; 
0x000000000b3171: mov ecx, [rsi]; mov [rdi], cx; mov [rdi+0x2], dh; ret; 
0x000000000b3e61: mov ecx, [rsi]; mov dl, [rsi+0x2]; mov [rdi], cx; mov [rdi+0x2], dl; ret; 
0x000000000b3e80: mov ecx, [rsi]; mov dl, [rsi+0x4]; mov [rdi], ecx; mov [rdi+0x4], dl; ret; 
0x000000000b3ec1: mov ecx, [rsi]; mov dl, [rsi+0x8]; mov [rdi], rcx; mov [rdi+0x8], dl; ret; 
0x000000000b31a0: mov ecx, [rsi]; mov dx, [rsi+0x4]; mov [rdi], ecx; mov [rdi+0x4], dx; ret; 
0x000000000b31e1: mov ecx, [rsi]; mov dx, [rsi+0x8]; mov [rdi], rcx; mov [rdi+0x8], dx; ret; 
0x000000000b31b0: mov ecx, [rsi]; mov edx, [rsi+0x3]; mov [rdi], ecx; mov [rdi+0x3], edx; ret; 
0x000000000b31f1: mov ecx, [rsi]; mov edx, [rsi+0x7]; mov [rdi], rcx; mov [rdi+0x7], edx; ret; 
0x000000000b3201: mov ecx, [rsi]; mov edx, [rsi+0x8]; mov [rdi], rcx; mov [rdi+0x8], edx; ret; 
0x000000000b3211: mov ecx, [rsi]; mov rdx, [rsi+0x5]; mov [rdi], rcx; mov [rdi+0x5], rdx; ret; 
0x000000000b3221: mov ecx, [rsi]; mov rdx, [rsi+0x6]; mov [rdi], rcx; mov [rdi+0x6], rdx; ret; 
0x000000000b3231: mov ecx, [rsi]; mov rdx, [rsi+0x7]; mov [rdi], rcx; mov [rdi+0x7], rdx; ret; 
0x00000000041da4: mov ecx, [rsp+0x108]; sub rcx, fs:[0x28]; jne short 0x0000000000041dc5; add rsp, 0x118; ret; 
0x00000000041e27: mov ecx, [rsp+0x108]; sub rcx, fs:[0x28]; jne short 0x0000000000041e48; add rsp, 0x118; ret; 
0x000000000c6fea: mov ecx, [rsp+0x10]; call r13; 
0x0000000015a49d: mov ecx, [rsp+0x10]; mov rdi, [rsp+0x18]; call rcx; 
0x000000000b9d3b: mov ecx, [rsp+0x10]; mov rdi, rbp; mov rsi, [rsp+0x18]; call rbx; 
0x00000000132bd1: mov ecx, [rsp+0x10]; mov rdx, r14; mov rdi, r13; mov rsi, [rsp+0x8]; call rbp; 
0x00000000041798: mov ecx, [rsp+0x138]; sub rcx, fs:[0x28]; jne short 0x00000000000417b2; add rsp, 0x148; ret; 
0x00000000042495: mov ecx, [rsp+0x138]; sub rcx, fs:[0x28]; jne short 0x00000000000424af; add rsp, 0x148; ret; 
0x00000000033bdc: mov ecx, [rsp+0x18]; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; call r15; 
0x0000000002ccd0: mov ecx, [rsp+0x18]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; mov rax, [rsp+0x28]; call rax; 
0x000000000455e6: mov ecx, [rsp+0x18]; sub rcx, fs:[0x28]; jne short 0x00000000000455fa; add rsp, 0x28; ret; 
0x000000000456d6: mov ecx, [rsp+0x18]; sub rcx, fs:[0x28]; jne short 0x00000000000456ea; add rsp, 0x28; ret; 
0x00000000050d38: mov ecx, [rsp+0x18]; sub rcx, fs:[0x28]; jne short 0x0000000000050d4f; add rsp, 0xd8; ret; 
0x0000000005fd6b: mov ecx, [rsp+0x18]; sub rcx, fs:[0x28]; jne short 0x000000000005fd82; add rsp, 0xd8; ret; 
0x0000000005fe40: mov ecx, [rsp+0x18]; sub rcx, fs:[0x28]; jne short 0x000000000005fe57; add rsp, 0xd8; ret; 
0x0000000005fef7: mov ecx, [rsp+0x18]; sub rcx, fs:[0x28]; jne short 0x000000000005ff0e; add rsp, 0xd8; ret; 
0x0000000006008b: mov ecx, [rsp+0x18]; sub rcx, fs:[0x28]; jne short 0x00000000000600a2; add rsp, 0xd8; ret; 
0x0000000006014b: mov ecx, [rsp+0x18]; sub rcx, fs:[0x28]; jne short 0x0000000000060162; add rsp, 0xd8; ret; 
0x00000000060239: mov ecx, [rsp+0x18]; sub rcx, fs:[0x28]; jne short 0x0000000000060250; add rsp, 0xd8; ret; 
0x00000000060310: mov ecx, [rsp+0x18]; sub rcx, fs:[0x28]; jne short 0x0000000000060327; add rsp, 0xd8; ret; 
0x000000000612a3: mov ecx, [rsp+0x18]; sub rcx, fs:[0x28]; jne short 0x00000000000612ba; add rsp, 0xd8; ret; 
0x0000000006137e: mov ecx, [rsp+0x18]; sub rcx, fs:[0x28]; jne short 0x0000000000061395; add rsp, 0xd8; ret; 
0x00000000082dfb: mov ecx, [rsp+0x18]; sub rcx, fs:[0x28]; jne short 0x0000000000082e12; add rsp, 0xd8; ret; 
0x00000000082eb7: mov ecx, [rsp+0x18]; sub rcx, fs:[0x28]; jne short 0x0000000000082ece; add rsp, 0xd8; ret; 
0x00000000082fb0: mov ecx, [rsp+0x18]; sub rcx, fs:[0x28]; jne short 0x0000000000082fc7; add rsp, 0xd8; ret; 
0x00000000083080: mov ecx, [rsp+0x18]; sub rcx, fs:[0x28]; jne short 0x0000000000083097; add rsp, 0xd8; ret; 
0x00000000083139: mov ecx, [rsp+0x18]; sub rcx, fs:[0x28]; jne short 0x0000000000083150; add rsp, 0xd8; ret; 
0x000000000c6be3: mov ecx, [rsp+0x18]; sub rcx, fs:[0x28]; jne short 0x00000000000c6bfa; add rsp, 0xd8; ret; 
0x000000000c6cbe: mov ecx, [rsp+0x18]; sub rcx, fs:[0x28]; jne short 0x00000000000c6cd5; add rsp, 0xd8; ret; 
0x000000000ccfec: mov ecx, [rsp+0x18]; sub rcx, fs:[0x28]; jne short 0x00000000000cd036; add rsp, 0x28; ret; 
0x0000000010e485: mov ecx, [rsp+0x18]; sub rcx, fs:[0x28]; jne short 0x000000000010e4db; add rsp, 0x58; ret; 
0x0000000010e523: mov ecx, [rsp+0x18]; sub rcx, fs:[0x28]; jne short 0x000000000010e57b; add rsp, 0x58; ret; 
0x000000001107ca: mov ecx, [rsp+0x18]; sub rcx, fs:[0x28]; jne short 0x00000000001107de; add rsp, 0x28; ret; 
0x00000000119aca: mov ecx, [rsp+0x18]; sub rcx, fs:[0x28]; jne short 0x0000000000119af3; add rsp, 0x58; ret; 
0x0000000011b1c6: mov ecx, [rsp+0x18]; sub rcx, fs:[0x28]; jne short 0x000000000011b223; add rsp, 0x58; ret; 
0x00000000127b20: mov ecx, [rsp+0x18]; sub rcx, fs:[0x28]; jne short 0x0000000000127b3c; add rsp, 0xd8; ret; 
0x00000000127e04: mov ecx, [rsp+0x18]; sub rcx, fs:[0x28]; jne short 0x0000000000127e1b; add rsp, 0xd8; ret; 
0x00000000128e24: mov ecx, [rsp+0x18]; sub rcx, fs:[0x28]; jne short 0x0000000000128e3b; add rsp, 0xd8; ret; 
0x00000000129394: mov ecx, [rsp+0x18]; sub rcx, fs:[0x28]; jne short 0x00000000001293ab; add rsp, 0xd8; ret; 
0x00000000129474: mov ecx, [rsp+0x18]; sub rcx, fs:[0x28]; jne short 0x000000000012948b; add rsp, 0xd8; ret; 
0x00000000129554: mov ecx, [rsp+0x18]; sub rcx, fs:[0x28]; jne short 0x000000000012956b; add rsp, 0xd8; ret; 
0x0000000013111c: mov ecx, [rsp+0x18]; sub rcx, fs:[0x28]; jne short 0x0000000000131130; add rsp, 0x28; ret; 
0x00000000139004: mov ecx, [rsp+0x18]; sub rcx, fs:[0x28]; jne short 0x0000000000139018; add rsp, 0x28; ret; 
0x0000000002e0e0: mov ecx, [rsp+0x20]; mov rcx, [rsp+0x30]; mov rsi, [rsp+0x60]; mov rdi, [rsp+0x58]; call r13; 
0x0000000014a8a7: mov ecx, [rsp+0x20]; mov rdi, r15; call rcx; 
0x00000000141ac4: mov ecx, [rsp+0x20]; mov rdx, [rsp+0x18]; mov rsi, [rsp+0x10]; call qword ptr [rax]; 
0x000000000daee6: mov ecx, [rsp+0x20]; mov rdx, [rsp+0x28]; mov rax, [rsp+0x18]; call rax; 
0x0000000014710f: mov ecx, [rsp+0x28]; mov rdi, r12; call rcx; 
0x0000000002da6f: mov ecx, [rsp+0x28]; mov rsi, [rsp+0x48]; mov rdi, [rsp+0x50]; mov rax, [rsp+0x18]; call rax; 
0x000000000323c5: mov ecx, [rsp+0x28]; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; mov rax, [rsp+0x10]; call rax; 
0x00000000109199: mov ecx, [rsp+0x28]; sub rcx, fs:[0x28]; jne 0x0000000000109245; add rsp, 0x68; ret; 
0x000000000db2f2: mov ecx, [rsp+0x28]; sub rcx, fs:[0x28]; jne short 0x00000000000db353; add rsp, 0x38; ret; 
0x000000000dfbc2: mov ecx, [rsp+0x28]; sub rcx, fs:[0x28]; jne short 0x00000000000dfc23; add rsp, 0x38; ret; 
0x000000000dfc62: mov ecx, [rsp+0x28]; sub rcx, fs:[0x28]; jne short 0x00000000000dfcc3; add rsp, 0x38; ret; 
0x000000000dff32: mov ecx, [rsp+0x28]; sub rcx, fs:[0x28]; jne short 0x00000000000dffa3; add rsp, 0x38; ret; 
0x000000000dffe2: mov ecx, [rsp+0x28]; sub rcx, fs:[0x28]; jne short 0x00000000000e0053; add rsp, 0x38; ret; 
0x00000000107f68: mov ecx, [rsp+0x28]; sub rcx, fs:[0x28]; jne short 0x0000000000107f7c; add rsp, 0x38; ret; 
0x0000000010e33e: mov ecx, [rsp+0x28]; sub rcx, fs:[0x28]; jne short 0x000000000010e393; add rsp, 0x68; ret; 
0x0000000010f8f2: mov ecx, [rsp+0x28]; sub rcx, fs:[0x28]; jne short 0x000000000010f95b; add rsp, 0x38; ret; 
0x0000000010f992: mov ecx, [rsp+0x28]; sub rcx, fs:[0x28]; jne short 0x000000000010f9fb; add rsp, 0x38; ret; 
0x0000000010fa47: mov ecx, [rsp+0x28]; sub rcx, fs:[0x28]; jne short 0x000000000010facb; add rsp, 0x38; ret; 
0x0000000010fb17: mov ecx, [rsp+0x28]; sub rcx, fs:[0x28]; jne short 0x000000000010fb9b; add rsp, 0x38; ret; 
0x000000001108a2: mov ecx, [rsp+0x28]; sub rcx, fs:[0x28]; jne short 0x00000000001108ed; add rsp, 0x68; ret; 
0x00000000111a60: mov ecx, [rsp+0x28]; sub rcx, fs:[0x28]; jne short 0x0000000000111a74; add rsp, 0x38; ret; 
0x00000000111ae3: mov ecx, [rsp+0x28]; sub rcx, fs:[0x28]; jne short 0x0000000000111af7; add rsp, 0x38; ret; 
0x00000000111b57: mov ecx, [rsp+0x28]; sub rcx, fs:[0x28]; jne short 0x0000000000111b6b; add rsp, 0x38; ret; 
0x00000000111bc2: mov ecx, [rsp+0x28]; sub rcx, fs:[0x28]; jne short 0x0000000000111bd6; add rsp, 0x38; ret; 
0x000000001310af: mov ecx, [rsp+0x28]; sub rcx, fs:[0x28]; jne short 0x00000000001310c3; add rsp, 0x38; ret; 
0x00000000159c7e: mov ecx, [rsp+0x28]; sub rcx, fs:[0x28]; jne short 0x0000000000159ce1; add rsp, 0x38; ret; 
0x00000000030d1e: mov ecx, [rsp+0x30]; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; mov rax, [rsp+0x20]; call rax; 
0x0000000002e0e5: mov ecx, [rsp+0x30]; mov rsi, [rsp+0x60]; mov rdi, [rsp+0x58]; call r13; 
0x0000000012a970: mov ecx, [rsp+0x38]; mov esi, r14d; mov rdi, r13; call qword ptr [rsp+0x50]; 
0x00000000108b93: mov ecx, [rsp+0x38]; sub rcx, fs:[0x28]; jne 0x0000000000108c63; add rsp, 0x78; ret; 
0x0000000002fd2d: mov ecx, [rsp+0x40]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x48]; mov rax, [rsp+0x28]; call rax; 
0x0000000002ed7e: mov ecx, [rsp+0x40]; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; call r14; 
0x00000000110757: mov ecx, [rsp+0x48]; sub rcx, fs:[0x28]; jne short 0x0000000000110777; add rsp, 0x58; ret; 
0x00000000159917: mov ecx, [rsp+0x48]; sub rcx, fs:[0x28]; jne short 0x000000000015995e; add rsp, 0x58; ret; 
0x0000000013fd87: mov ecx, [rsp+0x50]; mov rdx, [rsp+0xe0]; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; call qword ptr [rsp+0x68]; 
0x00000000159a0e: mov ecx, [rsp+0x58]; sub rcx, fs:[0x28]; jne short 0x0000000000159a64; add rsp, 0x68; ret; 
0x00000000159ba7: mov ecx, [rsp+0x58]; sub rcx, fs:[0x28]; jne short 0x0000000000159c14; add rsp, 0x68; ret; 
0x0000000014d638: mov ecx, [rsp+0x68]; sub rcx, fs:[0x28]; jne short 0x000000000014d64c; add rsp, 0x78; ret; 
0x00000000091b2d: mov ecx, [rsp+0x88]; sub rcx, fs:[0x28]; jne short 0x0000000000091bb7; add rsp, 0x98; ret; 
0x0000000011c9d2: mov ecx, [rsp+0x8]; mov rax, [rsp]; add rsp, 0x38; ret; 
0x0000000011ca33: mov ecx, [rsp+0x8]; mov rax, [rsp]; add rsp, 0x40; ret; 
0x00000000141693: mov ecx, [rsp+0x8]; mov rdi, rbp; call rcx; 
0x000000000dac29: mov ecx, [rsp+0x8]; mov rdx, [rsp+0x68]; mov rdi, r15; mov rsi, [rsp+0x60]; call r12; 
0x0000000009a692: mov ecx, [rsp+0x8]; sub rcx, fs:[0x28]; jne 0x000000000009a752; add rsp, 0x18; ret; 
0x00000000045a0a: mov ecx, [rsp+0x8]; sub rcx, fs:[0x28]; jne short 0x0000000000045a6a; add rsp, 0x18; ret; 
0x00000000045fff: mov ecx, [rsp+0x8]; sub rcx, fs:[0x28]; jne short 0x0000000000046013; add rsp, 0x18; ret; 
0x0000000004604c: mov ecx, [rsp+0x8]; sub rcx, fs:[0x28]; jne short 0x0000000000046060; add rsp, 0x18; ret; 
0x0000000004609f: mov ecx, [rsp+0x8]; sub rcx, fs:[0x28]; jne short 0x00000000000460b3; add rsp, 0x18; ret; 
0x000000000460ec: mov ecx, [rsp+0x8]; sub rcx, fs:[0x28]; jne short 0x0000000000046100; add rsp, 0x18; ret; 
0x00000000107fc3: mov ecx, [rsp+0x8]; sub rcx, fs:[0x28]; jne short 0x0000000000107fd7; add rsp, 0x18; ret; 
0x0000000010e3cd: mov ecx, [rsp+0x8]; sub rcx, fs:[0x28]; jne short 0x000000000010e423; add rsp, 0x18; ret; 
0x0000000010ea70: mov ecx, [rsp+0x8]; sub rcx, fs:[0x28]; jne short 0x000000000010ea8b; add rsp, 0x18; ret; 
0x000000001145fc: mov ecx, [rsp+0x8]; sub rcx, fs:[0x28]; jne short 0x0000000000114610; add rsp, 0x18; ret; 
0x0000000011ac41: mov ecx, [rsp+0x8]; sub rcx, fs:[0x28]; jne short 0x000000000011ac55; add rsp, 0x18; ret; 
0x00000000138fb1: mov ecx, [rsp+0x8]; sub rcx, fs:[0x28]; jne short 0x0000000000138fc5; add rsp, 0x18; ret; 
0x00000000113677: mov ecx, [rsp+0x8]; syscall; 
0x00000000042935: mov ecx, [rsp+0x98]; sub rcx, fs:[0x28]; jne short 0x000000000004294f; add rsp, 0xa8; ret; 
0x000000000ff0d4: mov ecx, [rsp]; call rax; 
0x00000000142bf6: mov ecx, [rsp]; mov rsi, r15; mov rdi, rbx; xor eax, eax; call rcx; 
0x00000000142b0b: mov ecx, [rsp]; xor eax, eax; mov rdi, rbx; call rcx; 
0x0000000011d3c0: mov ecx, eax; and ecx, [rsi+0x10]; lea rcx, [rsi+rcx*4]; add eax, [rcx+rdx]; ret; 
0x0000000010f4d6: mov ecx, eax; mov edx, [rsp+0x14]; mov rsi, [rsp+0x8]; mov eax, 0x127; syscall; 
0x0000000010f596: mov ecx, eax; mov edx, [rsp+0x14]; mov rsi, [rsp+0x8]; mov eax, 0x128; syscall; 
0x0000000010f62e: mov ecx, eax; mov r10, rcx; xor r8d, r8d; mov eax, 0x147; syscall; 
0x0000000010f78e: mov ecx, eax; mov r10, rcx; xor r8d, r8d; mov eax, 0x148; syscall; 
0x000000000de736: mov ecx, eax; mov r10d, [rsp+0x1c]; mov rdx, [rsp+0x10]; mov eax, 0xf7; syscall; 
0x0000000010d75d: mov ecx, eax; mov rdi, [rsp+0x8]; mov rdx, r12; mov eax, 0x10f; syscall; 
0x00000000142f2c: mov ecx, eax; movsxd rdx, [r8+rcx*4]; add rdx, r8; notrack jmp rdx; 
0x000000000d6791: mov ecx, eax; movsxd rdx, [rdi+rcx*4]; add rdx, rdi; notrack jmp rdx; 
0x0000000013fc15: mov ecx, ebp; call r10; 
0x00000000133031: mov ecx, ebp; mov edx, 0x400; mov rsi, r15; mov rdi, r12; call rbp; 
0x0000000008113a: mov ecx, ebp; mov edx, r12d; mov rsi, rbp; mov rdi, rbx; call qword ptr [r14+0x48]; 
0x0000000014b931: mov ecx, ebp; mov esi, 0x9; call qword ptr [rax]; 
0x00000000129f2e: mov ecx, ebp; mov r8, r15; mov rdi, r12; mov edx, [rsp+0x38]; call qword ptr [rsp+0x60]; 
0x00000000144bde: mov ecx, ebp; mov rdx, r12; mov rsi, rbp; mov rdi, rbx; call rax; 
0x0000000012c41b: mov ecx, ebp; mov rdx, r14; mov rsi, r12; call qword ptr [rsp+0x40]; 
0x000000000ddf6c: mov ecx, ebp; mov rdx, r14; mov rsi, r12; mov edi, r13d; call qword ptr [rsp+0x30]; 
0x000000000ddb8c: mov ecx, ebp; mov rdx, r14; mov rsi, r12; mov rdi, r13; call qword ptr [rsp+0x30]; 
0x000000000ff77b: mov ecx, ebx; add r8, r13; call r14; 
0x0000000012aedf: mov ecx, ebx; mov rcx, r12; mov rsi, rbp; mov rdi, r13; call qword ptr [rsp+0x40]; 
0x0000000008a4f7: mov ecx, ebx; sub rcx, rdx; cmp rax, rcx; jbe short 0x000000000008a520; call qword ptr [rbx+0x60]; 
0x000000001415d4: mov ecx, ebx; xor eax, eax; pop rbx; pop rbp; jmp rcx; 
0x000000001412e3: mov ecx, edi; call rbp; 
0x0000000012b9ef: mov ecx, edi; mov edi, [rsp+0x38]; mov r8, rbx; mov rdx, rbp; call qword ptr [rsp+0x60]; 
0x0000000012a96d: mov ecx, edi; mov rcx, [rsp+0x38]; mov esi, r14d; mov rdi, r13; call qword ptr [rsp+0x50]; 
0x0000000011caad: mov ecx, edi; shr eax, cl; and eax, 0x1; ret; 
0x00000000137285: mov ecx, edx; cmp edi, ecx; ja short 0x0000000000137274; mov eax, 0xffffffff; ret; 
0x000000000b7ee6: mov ecx, edx; rep movsb [rdi], [rsi]; ret; 
0x0000000005cefa: mov ecx, esi; call qword ptr [rax+r8*8]; 
0x0000000013f81a: mov ecx, esi; mov rdi, r13; call r12; 
0x0000000008713c: mov ecx, esi; mov rdi, r15; call r12; 
0x0000000012ddf9: mov ecx, esi; mov rdx, rbp; mov rsi, r13; mov edi, r12d; call qword ptr [rsp+0x40]; 
0x0000000012d829: mov ecx, esi; mov rdx, rbp; mov rsi, r13; mov rdi, r12; call qword ptr [rsp+0x40]; 
0x000000000c68b6: mov ecx, esi; mov rsi, [rsp+0x18]; mov rcx, r12; mov rdx, r13; call rbx; 
0x00000000029873: mov ecx, esi; mov rsi, [rsp+0x18]; xor r8d, r8d; call rbx; 
0x000000000c6a3d: mov ecx, esi; mov rsi, [rsp+0x18]; xor r8d, r8d; mov rdi, rbp; call rbx; 
0x00000000146e94: mov ecx, esi; movsxd rax, [rdi+rcx*4]; add rax, rdi; notrack jmp rax; 
0x00000000147a09: mov ecx, esi; xor eax, eax; mov rsi, rdx; add rdi, 0x10; jmp rcx; 
0x000000000c68be: mov ecx, esp; mov rdx, r13; call rbx; 
0x000000000dbf3e: mov ecx, esp; mov rdx, r13; mov rsi, rbp; mov edi, r14d; call qword ptr [rsp+0x48]; 
0x000000000dc3de: mov ecx, esp; mov rdx, r13; mov rsi, rbp; mov rdi, r14; call qword ptr [rsp+0x48]; 
0x0000000014c73e: mov ecx, esp; mov rdx, rbp; mov rsi, rbx; call rax; 
0x0000000012aee2: mov ecx, esp; mov rsi, rbp; mov rdi, r13; call qword ptr [rsp+0x40]; 
0x000000000813e6: mov ecx, esp; xor edx, edx; mov rsi, rbp; mov rdi, rbx; call qword ptr [r13+0x48]; 
0x000000000813e5: mov ecx, r12d; xor edx, edx; mov rsi, rbp; mov rdi, rbx; call qword ptr [r13+0x48]; 
0x00000000081139: mov ecx, r13d; mov edx, r12d; mov rsi, rbp; mov rdi, rbx; call qword ptr [r14+0x48]; 
0x000000000de943: mov edi, 0x1200011; mov eax, 0x38; syscall; 
0x000000000d9096: mov edi, 0x1; mov eax, 0xe6; syscall; 
0x00000000038912: mov edi, 0x1; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000012170b: mov edi, 0x2000001; and eax, ecx; mov [rsp+0x20], cl; mov [rsp+0x1f], al; call qword ptr [r12+0x28]; 
0x00000000122d14: mov edi, 0x2000003; mov rdx, rax; call qword ptr [rbx+0x28]; 
0x00000000121822: mov edi, 0x2000004; call rax; 
0x00000000123e1c: mov edi, 0x2000005; mov rdx, rax; call qword ptr [r13+0x28]; 
0x000000001222e1: mov edi, 0x2000006; mov rdx, rax; call qword ptr [rbx+0x28]; 
0x0000000014cf69: mov edi, 0x20009; add [rax], al; pop rbx; ret; 
0x000000000418bf: mov edi, 0x2; mov eax, 0xe; syscall; 
0x000000000897e0: mov edi, 0x2; mov eax, r9d; syscall; 
0x0000000005303e: mov edi, 0x2; mov r10d, 0x8; mov eax, 0xe; syscall; 
0x000000000913a8: mov edi, 0x2d0; mov esi, 0x80; mov eax, 0xcc; syscall; 
0x00000000052f99: mov edi, 0x3001; mov eax, 0x9e; syscall; 
0x000000000596c1: mov edi, 0x3004; mov eax, 0x9e; syscall; 
0x0000000014cf29: mov edi, 0x39480009; ror byte ptr [rdi], 0x1; test [rbx+0x5b000000], bl; ret; 
0x0000000013f98d: mov edi, 0x4100019d; mov edi, [rbp]; call qword ptr [rsp+0x20]; 
0x0000000006164d: mov edi, 0x48000000; lea ecx, [rip+0x144b28]; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x0000000007930d: mov edi, 0x48000009; mov edx, ebx; mov rsi, r10; mov rdi, r15; call qword ptr [r13+0x38]; 
0x000000000f7905: mov edi, 0x48000b36; mov eax, edx; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x00000000039aa5: mov edi, 0x49001acc; lea edi, [rbp+0x80]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000001559fb: mov edi, 0x4de80005; xor dh, ch; jmp qword ptr [rsi+0x66]; 
0x0000000012c136: mov edi, 0x6401000b; mov [r8], r9d; add rsp, 0x8; ret; 
0x00000000150f61: mov edi, 0x748d4806; and al, 0x4; mov [rsp+0x4], eax; mov rax, [rdi+0x8]; call qword ptr [rax+0x48]; 
0x0000000015a752: mov edi, 0xc1480008; enter 0x6411, 0x48; xor eax, [0x30]; jmp rax; 
0x0000000014cf8a: mov edi, 0xc1480009; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x000000000d96e2: mov edi, 0xc1480010; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x00000000116e68: mov edi, 0xd8f7000c; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000007f3db: mov edi, 0xe0; call rax; 
0x0000000007f39f: mov edi, 0xe0; jmp rax; 
0x0000000007f428: mov edi, 0xe0; lea rsi, [rsp+0x8]; call rax; 
0x0000000014ff32: mov edi, 0xe6894806; mov [rsp], rax; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x0000000013c545: mov edi, 0xe800074f; add al, ch; out dx, eax; jmp qword ptr [rsi-0x70]; 
0x000000000e2d7d: mov edi, 0xf7fffff3; test [rbx+rdi*8-0x1], ecx; call qword ptr [rax]; 
0x00000000107b9c: mov edi, 0xf8; movups [rsi+0x70], xmm7; ret; 
0x00000000107c30: mov edi, 0xf8; ret; 
0x00000000156bbb: mov edi, 0xfd2b8fe8; jmp qword ptr [rsi+0x2e]; 
0x00000000156b2b: mov edi, 0xfd2c1fe8; jmp qword ptr [rsi+0x2e]; 
0x0000000011028b: mov edi, 0xfee1dead; mov eax, 0xa9; syscall; 
0x00000000130f99: mov edi, 0xff87b1e8; call qword ptr [rax-0x5e1f00d]; 
0x00000000130ea9: mov edi, 0xff88a1e8; call qword ptr [rax-0x5e1f00d]; 
0x00000000154261: mov edi, 0xffff1085; inc dword ptr [rcx]; add [rax], al; add [rax-0x7d], cl; ret; 
0x000000001089ff: mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x0000000010fa32: mov edi, 0xffffffff; mov eax, 0x75; syscall; 
0x0000000010fb02: mov edi, 0xffffffff; mov eax, 0x77; syscall; 
0x0000000013f991: mov edi, [r13]; call qword ptr [rsp+0x20]; 
0x0000000013fe7a: mov edi, [r15]; call qword ptr [rsp+0x70]; 
0x000000001472d5: mov edi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x10]; 
0x00000000147215: mov edi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x18]; 
0x0000000014b577: mov edi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x20]; 
0x000000001470f6: mov edi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x8]; 
0x0000000014a88b: mov edi, [rax]; mov rsi, r15; mov rax, [rdi+0x38]; call qword ptr [rax+0x8]; 
0x00000000190d7c: mov edi, [rbp+0x10]; add rdi, rbp; call r12; 
0x00000000114b8a: mov edi, [rbp+0x10]; test rdi, rdi; jne 0x0000000000114c20; mov rdi, [r13]; call rbx; 
0x00000000114bbf: mov edi, [rbp+0x10]; test rdi, rdi; jne 0x0000000000114c60; mov rdi, [r13]; call rbx; 
0x00000000114b57: mov edi, [rbp+0x10]; test rdi, rdi; jne 0x0000000000114c80; mov rdi, [r13]; call rbx; 
0x000000001159bf: mov edi, [rbp+0x10]; test rdi, rdi; jne 0x0000000000115a80; mov rdi, [r13]; call rbx; 
0x00000000114beb: mov edi, [rbp+0x10]; test rdi, rdi; jne short 0x0000000000114c40; mov rdi, [r13]; call rbx; 
0x00000000115a1b: mov edi, [rbp+0x10]; test rdi, rdi; jne short 0x0000000000115a40; mov rdi, [r13]; call rbx; 
0x000000001159ef: mov edi, [rbp+0x10]; test rdi, rdi; jne short 0x0000000000115a60; mov rdi, [r13]; call rbx; 
0x0000000010b011: mov edi, [rbp+0x18]; mov rsi, [rsp+0x28]; lea rcx, [rbp+0x28]; mov edx, 0x1; call qword ptr [rbp+0x40]; 
0x0000000010b371: mov edi, [rbp+0x18]; mov rsi, [rsp+0x28]; lea rcx, [rbp+0x28]; mov edx, 0x2; call qword ptr [rbp+0x40]; 
0x0000000010b2f1: mov edi, [rbp+0x18]; mov rsi, [rsp+0x28]; lea rcx, [rbp+0x28]; mov edx, 0x5; call qword ptr [rbp+0x40]; 
0x0000000004546a: mov edi, [rbp+0x8]; call rax; 
0x0000000010b7a9: mov edi, [rbp-0x118]; mov rsi, r9; call qword ptr [rbp-0xf0]; 
0x000000000feed5: mov edi, [rbp-0x1b0]; mov rdx, [r12]; mov rax, [rbp-0x1e0]; call rax; 
0x000000000ff0c5: mov edi, [rbp-0x1b0]; push rax; mov rax, [rbp-0x1e0]; mov rcx, [r12]; call rax; 
0x000000000e332e: mov edi, [rbp-0x4c0]; lea rsi, [rbp-0x450]; call qword ptr [rbx+0x40]; 
0x000000001356ca: mov edi, [rbp-0x60]; syscall; 
0x00000000144842: mov edi, [rbp]; add rbx, rax; sub edx, eax; mov rsi, rbx; call qword ptr [rbp+0x40]; 
0x0000000013f992: mov edi, [rbp]; call qword ptr [rsp+0x20]; 
0x00000000114ad4: mov edi, [rbp]; call rbx; 
0x0000000014c342: mov edi, [rbp]; mov rax, [rdi+0x8]; call qword ptr [rax+0x20]; 
0x00000000141a05: mov edi, [rbp]; test rdi, rdi; je short 0x0000000000141a1c; mov rax, [rdi+0x8]; call qword ptr [rax+0x20]; 
0x00000000141ba7: mov edi, [rbp]; test rdi, rdi; je short 0x0000000000141bb6; mov rax, [rdi+0x8]; call qword ptr [rax+0x20]; 
0x0000000010abfb: mov edi, [rbx+0x18]; lea rcx, [rbx+0x28]; mov rsi, r14; mov edx, [rdx+rax]; call qword ptr [rbx+0x40]; 
0x0000000009b901: mov edi, [rbx+0x48]; call rax; 
0x0000000009b872: mov edi, [rbx+0x48]; mov rsi, r14; call rax; 
0x000000001329ed: mov edi, [rbx+0x48]; test rdi, rdi; jne short 0x00000000001329e0; pop rbx; ret; 
0x000000001077b6: mov edi, [rbx+0x80]; call qword ptr [rax+0x88]; 
0x0000000014b615: mov edi, [rbx]; lea rdx, [rsp+0x18]; mov esi, 0x6; mov rax, [rdi+0x8]; call qword ptr [rax+0x28]; 
0x000000001354f0: mov edi, [rbx]; mov eax, 0x3; syscall; 
0x0000000014b581: mov edi, [rbx]; mov rax, [rdi+0x8]; call qword ptr [rax+0x20]; 
0x000000000913a7: mov edi, [rdi+0x2d0]; mov esi, 0x80; mov eax, 0xcc; syscall; 
0x000000000913a6: mov edi, [rdi+0x2d0]; mov esi, 0x80; mov eax, 0xcc; syscall; 
0x00000000147c45: mov edi, [rdi+0x40]; mov eax, [rdi]; test eax, eax; jne short 0x0000000000147c50; ret; 
0x0000000014e155: mov edi, [rdi+0x40]; mov eax, [rdi]; test eax, eax; jne short 0x000000000014e160; ret; 
0x0000000009b6dd: mov edi, [rdi+0x48]; mov rsi, rbp; call rax; 
0x00000000159856: mov edi, [rdi+0x8]; push 0x0; lea rcx, [rsi+0x398]; push 0x0; call qword ptr [rax+0x270]; 
0x00000000159805: mov edi, [rdi+0x8]; push 0x0; lea rcx, [rsi+0x398]; push 0x2; call qword ptr [rax+0x270]; 
0x0000000007f3da: mov edi, [rdi+0xe0]; call rax; 
0x0000000007f39e: mov edi, [rdi+0xe0]; jmp rax; 
0x0000000007f427: mov edi, [rdi+0xe0]; lea rsi, [rsp+0x8]; call rax; 
0x00000000144153: mov edi, [rdi]; add r13, rax; sub edx, eax; mov rsi, r13; call qword ptr [r15+0x40]; 
0x00000000144079: mov edi, [rdi]; add r13, rcx; sub edx, ecx; mov rsi, r13; call qword ptr [r15+0x40]; 
0x000000001597c9: mov edi, [rdi]; call qword ptr [rax+0x278]; 
0x0000000013fe7b: mov edi, [rdi]; call qword ptr [rsp+0x70]; 
0x00000000135434: mov edi, [rdi]; mov eax, 0x3; syscall; 
0x00000000125a84: mov edi, [rdx+0x50]; mov rsi, rdx; call rax; 
0x00000000097541: mov edi, [rdx-0x76b7ffec]; xor [rax-0x75], cl; add eax, 0x14b971; mov [rax], rdi; ret; 
0x00000000157de4: mov edi, [rip+0x8b662]; test edi, edi; jns short 0x0000000000157df0; ret; 
0x0000000013e5fa: mov edi, [rip+0xaa640]; ror rdi, 0x11; xor rdi, fs:[0x30]; call rax; 
0x000000001122c5: mov edi, [rip+0xd549d]; test rdi, rdi; jne short 0x00000000001122e0; mov eax, 0x1; ret; 
0x000000001860a9: mov edi, [rsi+rcx+0x40]; cmp edi, [rdx+rcx+0x40]; jne 0x0000000000185d99; vzeroupper; ret; 
0x00000000185f23: mov edi, [rsi+rcx]; cmp edi, [rdx+rcx]; jne 0x0000000000185d99; vzeroupper; ret; 
0x000000001863a9: mov edi, [rsi+rcx]; cmp edi, [rdx+rcx]; jne 0x0000000000186209; vzeroupper; ret; 
0x000000001443aa: mov edi, [rsi]; add r13, rbx; sub edx, ebx; mov rsi, r13; call qword ptr [r14+0x40]; 
0x000000000de684: mov edi, [rsp+0x10]; mov eax, 0x3d; syscall; 
0x00000000042cd8: mov edi, [rsp+0x10]; mov rdx, rbp; mov rsi, r12; call rbx; 
0x00000000132fe1: mov edi, [rsp+0x10]; mov rsi, r12; call qword ptr [rsp+0x58]; 
0x0000000011594c: mov edi, [rsp+0x10]; test rdi, rdi; jne short 0x00000000001159a0; mov rdi, [r12]; call rbx; 
0x0000000008077c: mov edi, [rsp+0x10]; xor esi, esi; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000110040: mov edi, [rsp+0x14]; syscall; 
0x0000000015a4ff: mov edi, [rsp+0x18]; call rax; 
0x0000000015a4a2: mov edi, [rsp+0x18]; call rcx; 
0x00000000108c08: mov edi, [rsp+0x18]; mov eax, 0x101; syscall; 
0x0000000010e1b5: mov edi, [rsp+0x18]; mov eax, 0x115; syscall; 
0x0000000011acb5: mov edi, [rsp+0x18]; mov eax, 0x120; syscall; 
0x0000000011afc5: mov edi, [rsp+0x18]; mov eax, 0x45; syscall; 
0x000000000cc1c6: mov edi, [rsp+0x18]; sub rdi, fs:[0x28]; jne short 0x00000000000cc1e9; add rsp, 0x28; ret; 
0x00000000052a16: mov edi, [rsp+0x24]; xor esi, esi; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000059a26: mov edi, [rsp+0x28]; sub rdi, fs:[0x28]; jne short 0x0000000000059a72; add rsp, 0x38; ret; 
0x000000000fd484: mov edi, [rsp+0x28]; sub rdi, fs:[0x28]; jne short 0x00000000000fd4e6; add rsp, 0x38; ret; 
0x00000000107505: mov edi, [rsp+0x2c]; xor esi, esi; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000013fd99: mov edi, [rsp+0x38]; call qword ptr [rsp+0x68]; 
0x00000000033be6: mov edi, [rsp+0x38]; call r15; 
0x00000000033d42: mov edi, [rsp+0x38]; lea r8, [rsp+0xa0]; call r15; 
0x0000000012b9f1: mov edi, [rsp+0x38]; mov r8, rbx; mov rdx, rbp; call qword ptr [rsp+0x60]; 
0x0000000002fd37: mov edi, [rsp+0x48]; mov rax, [rsp+0x28]; call rax; 
0x00000000119380: mov edi, [rsp+0x4]; syscall; 
0x000000000502cf: mov edi, [rsp+0x4]; xor esi, esi; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000002ed88: mov edi, [rsp+0x50]; call r14; 
0x000000000323cf: mov edi, [rsp+0x50]; mov rax, [rsp+0x10]; call rax; 
0x0000000002da79: mov edi, [rsp+0x50]; mov rax, [rsp+0x18]; call rax; 
0x00000000030d28: mov edi, [rsp+0x50]; mov rax, [rsp+0x20]; call rax; 
0x0000000002e0ef: mov edi, [rsp+0x58]; call r13; 
0x0000000002d283: mov edi, [rsp+0x58]; mov rax, [rsp+0x20]; call rax; 
0x0000000002bfe5: mov edi, [rsp+0x58]; mov rax, [rsp+0x28]; call rax; 
0x0000000002c56d: mov edi, [rsp+0x60]; mov rax, [rsp+0x20]; call rax; 
0x0000000014a886: mov edi, [rsp+0x68]; mov rdi, [rax]; mov rsi, r15; mov rax, [rdi+0x38]; call qword ptr [rax+0x8]; 
0x0000000008e793: mov edi, [rsp+0x8]; add rsp, 0x20; pop rbx; jmp rax; 
0x00000000119613: mov edi, [rsp+0x8]; mov eax, 0x114; syscall; 
0x0000000010e264: mov edi, [rsp+0x8]; mov eax, 0x11d; syscall; 
0x00000000119830: mov edi, [rsp+0x8]; mov eax, 0x130; syscall; 
0x0000000010f382: mov edi, [rsp+0x8]; mov eax, 0x13; syscall; 
0x00000000046404: mov edi, [rsp+0x8]; mov eax, 0x13e; syscall; 
0x0000000010f422: mov edi, [rsp+0x8]; mov eax, 0x14; syscall; 
0x00000000108d84: mov edi, [rsp+0x8]; mov eax, 0x1; syscall; 
0x00000000113954: mov edi, [rsp+0x8]; mov eax, 0x1a; syscall; 
0x0000000011a360: mov edi, [rsp+0x8]; mov eax, 0x2a; syscall; 
0x0000000011a7a2: mov edi, [rsp+0x8]; mov eax, 0x2e; syscall; 
0x0000000011a642: mov edi, [rsp+0x8]; mov eax, 0x2f; syscall; 
0x0000000010920c: mov edi, [rsp+0x8]; mov eax, 0x48; syscall; 
0x0000000010d664: mov edi, [rsp+0x8]; mov eax, 0x7; syscall; 
0x00000000041c67: mov edi, [rsp+0x8]; mov esi, 0x8; mov r8d, eax; mov eax, 0x82; syscall; 
0x00000000142553: mov edi, [rsp+0x8]; mov r12d, eax; mov rax, [rdi+0x8]; call qword ptr [rax+0x20]; 
0x0000000010d760: mov edi, [rsp+0x8]; mov rdx, r12; mov eax, 0x10f; syscall; 
0x0000000010dd2d: mov edi, [rsp+0x8]; syscall; 
0x00000000108ce4: mov edi, [rsp+0x8]; xor eax, eax; syscall; 
0x0000000011ae23: mov edi, [rsp+0xc]; mov eax, 0x133; syscall; 
0x0000000011a294: mov edi, [rsp+0xc]; mov eax, 0x2b; syscall; 
0x00000000119563: mov edi, [rsp+0xc]; mov eax, 0xe8; syscall; 
0x0000000010950d: mov edi, [rsp+0xc]; mov r8d, eax; mov eax, 0x3; syscall; 
0x0000000011012d: mov edi, [rsp+0xc]; mov r8d, eax; mov eax, 0x4a; syscall; 
0x000000001101ed: mov edi, [rsp+0xc]; mov r8d, eax; mov eax, 0x4b; syscall; 
0x00000000028c35: mov edi, [rsp+0xc]; mov rdx, [rax]; call rbp; 
0x00000000028ca0: mov edi, [rsp+0xc]; mov rsi, [rsp]; mov rdx, [rax]; mov rax, [rsp+0x10]; call rax; 
0x0000000010ff25: mov edi, [rsp+0xc]; syscall; 
0x0000000008dfd6: mov edi, [rsp]; add rsp, 0x10; pop rbx; jmp rax; 
0x00000000114b06: mov edi, [rsp]; call rbx; 
0x000000000b94a6: mov edi, [rsp]; lea r9, [rsp+0x28]; call rbx; 
0x000000001196c4: mov edi, [rsp]; mov eax, 0x116; syscall; 
0x00000000106ce5: mov edi, [rsp]; mov eax, 0x11; syscall; 
0x00000000106d95: mov edi, [rsp]; mov eax, 0x12; syscall; 
0x0000000011a59e: mov edi, [rsp]; mov eax, 0x2d; mov rdx, [rsp+0x10]; mov rsi, [rsp+0x8]; syscall; 
0x00000000109696: mov edi, [rsp]; mov r8d, eax; mov eax, 0x55; syscall; 
0x0000000015973f: mov edi, [rsp]; mov rax, [rax+0x268]; jmp rax; 
0x00000000043945: mov edi, [rsp]; mov rdx, r14; mov rax, [rsp]; call rax; 
0x000000001417c4: mov edi, [rsp]; mov rsi, r13; mov rax, [rdi+0x38]; call qword ptr [rax+0x10]; 
0x00000000141676: mov edi, [rsp]; mov rsi, rbp; mov rax, [rdi+0x38]; call qword ptr [rax+0x8]; 
0x00000000141729: mov edi, [rsp]; test r15d, r15d; je short 0x00000000001417b0; mov rax, [rdi+0x38]; call qword ptr [rax+0x18]; 
0x00000000085805: mov edi, eax; call qword ptr [rax+0x18]; 
0x0000000014c33c: mov edi, eax; call qword ptr [rax+0x20]; 
0x000000000e2d16: mov edi, eax; call qword ptr [rbx+0x40]; 
0x0000000014bd7a: mov edi, eax; call rbp; 
0x00000000059853: mov edi, eax; cmp rdx, rcx; jae short 0x000000000005983c; mov rax, r8; ret; 
0x00000000090b13: mov edi, eax; jmp rax; 
0x000000000de869: mov edi, eax; mov eax, 0x22; syscall; 
0x00000000119224: mov edi, eax; mov eax, 0x3c; syscall; 
0x0000000015a823: mov edi, eax; mov eax, 0x3e; syscall; 
0x00000000041894: mov edi, eax; mov eax, 0xba; syscall; 
0x000000000b8394: mov edi, eax; mov eax, [rcx+rax*4]; sub eax, [rcx+rsi*4]; je short 0x00000000000b8380; ret; 
0x00000000141338: mov edi, eax; mov rax, [rax+0x18]; jmp rax; 
0x00000000104ab5: mov edi, eax; movsxd rax, [rdx+r15*4]; add rax, rdx; notrack jmp rax; 
0x0000000018dd0b: mov edi, eax; movsxd rax, [rdx+rbx*4]; xor edi, r12d; add rax, rdx; notrack jmp rax; 
0x0000000015a834: mov edi, eax; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000001190d8: mov edi, eax; test eax, eax; jne short 0x00000000001190bd; mov rax, r8; ret; 
0x000000001430ca: mov edi, ebp; and esi, 0xfffffffc; call qword ptr [rax+0x30]; 
0x0000000007483f: mov edi, ebp; call qword ptr [r12+0x38]; 
0x0000000008c0ee: mov edi, ebp; call qword ptr [r12+0x90]; 
0x000000000886b2: mov edi, ebp; call qword ptr [r13+0x10]; 
0x00000000075d10: mov edi, ebp; call qword ptr [r13+0x38]; 
0x0000000008bed2: mov edi, ebp; call qword ptr [r13+0x90]; 
0x0000000007acad: mov edi, ebp; call qword ptr [r14+0x38]; 
0x0000000008b085: mov edi, ebp; call qword ptr [r15+0x80]; 
0x0000000008abfc: mov edi, ebp; call qword ptr [r15+0x90]; 
0x0000000014cc6b: mov edi, ebp; call qword ptr [rax+0x10]; 
0x0000000008bc00: mov edi, ebp; call qword ptr [rax+0x18]; 
0x0000000014140f: mov edi, ebp; call qword ptr [rax+0x20]; 
0x00000000159e7c: mov edi, ebp; call qword ptr [rax+0x270]; 
0x0000000014243c: mov edi, ebp; call qword ptr [rax+0x28]; 
0x0000000014303b: mov edi, ebp; call qword ptr [rax+0x30]; 
0x00000000071f37: mov edi, ebp; call qword ptr [rax+0x38]; 
0x0000000008b6bd: mov edi, ebp; call qword ptr [rax+0x40]; 
0x000000001486c8: mov edi, ebp; call qword ptr [rax+0x48]; 
0x0000000008bcf3: mov edi, ebp; call qword ptr [rax+0x78]; 
0x0000000008afa5: mov edi, ebp; call qword ptr [rax+0x80]; 
0x00000000141668: mov edi, ebp; call qword ptr [rax+0x8]; 
0x0000000008ae47: mov edi, ebp; call qword ptr [rax+0x90]; 
0x00000000143dfa: mov edi, ebp; call qword ptr [rax]; 
0x0000000007e7cc: mov edi, ebp; call qword ptr [rbx+0x10]; 
0x0000000008e117: mov edi, ebp; call qword ptr [rbx+0x18]; 
0x00000000075246: mov edi, ebp; call qword ptr [rbx+0x38]; 
0x0000000007ebbd: mov edi, ebp; call qword ptr [rbx+0x80]; 
0x0000000008c572: mov edi, ebp; call qword ptr [rbx+0x88]; 
0x0000000007e65b: mov edi, ebp; call qword ptr [rbx+0x90]; 
0x00000000074c8b: mov edi, ebp; call qword ptr [rcx+0x38]; 
0x0000000013260d: mov edi, ebp; call qword ptr [rsp+0x10]; 
0x000000000ddb95: mov edi, ebp; call qword ptr [rsp+0x30]; 
0x0000000012aee8: mov edi, ebp; call qword ptr [rsp+0x40]; 
0x0000000012a978: mov edi, ebp; call qword ptr [rsp+0x50]; 
0x000000000da78c: mov edi, ebp; call r12; 
0x0000000008aff4: mov edi, ebp; call rax; 
0x00000000042d07: mov edi, ebp; call rbx; 
0x00000000141698: mov edi, ebp; call rcx; 
0x0000000012f943: mov edi, ebp; jmp qword ptr [rsi+0x2e]; 
0x00000000150b71: mov edi, ebp; jmp qword ptr [rsi+0x66]; 
0x000000001416a9: mov edi, ebp; lea r15, [rsp+0x50]; call qword ptr [rax+0x20]; 
0x0000000014c041: mov edi, ebp; lea r8, [rip-0x929a]; lea rdx, [rip+0x389f]; call qword ptr [rax]; 
0x0000000014202c: mov edi, ebp; lea r9, [rsp+0x20]; call qword ptr [rax]; 
0x00000000086edc: mov edi, ebp; lea r9, [rsp+0x28]; call rbp; 
0x000000000b9bec: mov edi, ebp; lea r9, [rsp+0x30]; call rbx; 
0x0000000014864b: mov edi, ebp; mov [r12+0x70], edx; call qword ptr [rax+0x30]; 
0x00000000142329: mov edi, ebp; mov [rbx], rax; xor eax, eax; call qword ptr [rbx+0x18]; 
0x0000000014dbe0: mov edi, ebp; mov [rsp+0xc8], rdx; mov dword ptr [rsp+0xd0], 0x1; movups [rsp+0xb8], xmm5; call rax; 
0x00000000141743: mov edi, ebp; mov dword ptr [rbx+0x18], 0x0; call qword ptr [rax+0x28]; 
0x000000001416c4: mov edi, ebp; mov dword ptr [rbx+0x18], 0x1; call qword ptr [rax+0x28]; 
0x00000000148f41: mov edi, ebp; mov dword ptr [rsp+0x40], 0x0; mov [rsp+0x10], rax; mov rax, [rsp+0x48]; call qword ptr [rax+0x28]; 
0x0000000014d9f7: mov edi, ebp; mov dword ptr [rsp+0xa8], 0x1; mov dword ptr [rsp+0xb0], 0x1; mov dword ptr [rsp+0xb8], 0x1; call qword ptr [rax+0x18]; 
0x00000000107e55: mov edi, ebp; mov eax, 0x135; syscall; 
0x0000000010f6dc: mov edi, ebp; mov eax, 0x147; syscall; 
0x0000000010f83c: mov edi, ebp; mov eax, 0x148; syscall; 
0x000000001097c9: mov edi, ebp; mov eax, 0x4f; syscall; 
0x0000000011381d: mov edi, ebp; mov eax, 0x9; syscall; 
0x000000000452bd: mov edi, ebp; mov eax, 0xca; syscall; 
0x000000000d8f43: mov edi, ebp; mov eax, 0xe4; syscall; 
0x000000000d8ed3: mov edi, ebp; mov eax, 0xe5; syscall; 
0x000000001149c7: mov edi, ebp; mov edx, r13d; mov esi, 0x1; call r12; 
0x000000001423bd: mov edi, ebp; mov qword ptr [rsp], 0x0; call qword ptr [rax+0x20]; 
0x000000001379e9: mov edi, ebp; mov qword ptr [rsp], 0x0; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000001423eb: mov edi, ebp; mov r12d, eax; xor eax, eax; call qword ptr [rbx+0x28]; 
0x00000000043acb: mov edi, ebp; mov r13, r15; mov rax, [rsp]; add r15, r12; call rax; 
0x000000001157ff: mov edi, ebp; mov rax, r12; pop rbp; pop r12; jmp rax; 
0x00000000114a57: mov edi, ebp; mov rdx, r13; mov esi, 0x1; call r12; 
0x0000000009aecc: mov edi, ebp; mov rdx, rbp; mov rsi, r12; call rax; 
0x000000000b9d40: mov edi, ebp; mov rsi, [rsp+0x18]; call rbx; 
0x00000000132bd9: mov edi, ebp; mov rsi, [rsp+0x8]; call rbp; 
0x0000000008625a: mov edi, ebp; pop rbp; mov rax, [rax+0xe0]; mov rax, [rax+0x20]; jmp rax; 
0x00000000083b74: mov edi, ebp; pop rbp; pop r12; jmp rax; 
0x00000000084071: mov edi, ebp; pop rbx; pop rbp; jmp rax; 
0x000000000970e9: mov edi, ebp; pop rbx; pop rbp; pop r12; jmp rax; 
0x00000000142d4d: mov edi, ebp; pop rbx; xor eax, eax; pop rbp; jmp rdx; 
0x00000000159d98: mov edi, ebp; push r8; mov r8, rbx; call qword ptr [rax+0x270]; 
0x00000000137ac4: mov edi, ebp; ror rax, 0x11; xor rax, fs:[0x30]; mov qword ptr [rsp], 0x0; call rax; 
0x00000000044a88: mov edi, ebp; ror rdx, 0x11; xor rdx, fs:[0x30]; call rdx; 
0x000000001157de: mov edi, ebp; xor edx, edx; mov esi, 0x1; call r12; 
0x000000001149b5: mov edi, ebp; xor esi, esi; call r12; 
0x000000000b9eeb: mov edi, ebp; xor r8d, r8d; lea r9, [rsp+0x28]; call rbx; 
0x0000000008fabb: mov edi, ebx; call qword ptr [r12+0x18]; 
0x0000000008cdff: mov edi, ebx; call qword ptr [r12+0x48]; 
0x0000000008ba2e: mov edi, ebx; call qword ptr [r12+0x80]; 
0x0000000008c416: mov edi, ebx; call qword ptr [r12+0x88]; 
0x0000000007f6f5: mov edi, ebx; call qword ptr [r13+0x38]; 
0x000000000813ee: mov edi, ebx; call qword ptr [r13+0x48]; 
0x0000000008155d: mov edi, ebx; call qword ptr [r13+0x58]; 
0x000000000879f6: mov edi, ebx; call qword ptr [r13+0x60]; 
0x0000000007710b: mov edi, ebx; call qword ptr [r14+0x38]; 
0x00000000081143: mov edi, ebx; call qword ptr [r14+0x48]; 
0x0000000008ceeb: mov edi, ebx; call qword ptr [r14+0x78]; 
0x0000000008f8cc: mov edi, ebx; call qword ptr [r15+0x18]; 
0x0000000007fd2b: mov edi, ebx; call qword ptr [r15+0x38]; 
0x0000000008e8ee: mov edi, ebx; call qword ptr [rax+0x18]; 
0x0000000008e839: mov edi, ebx; call qword ptr [rax+0x20]; 
0x00000000081587: mov edi, ebx; call qword ptr [rax+0x58]; 
0x0000000008ded0: mov edi, ebx; call qword ptr [rbp+0x18]; 
0x00000000083af1: mov edi, ebx; call qword ptr [rbp+0x20]; 
0x00000000084636: mov edi, ebx; call qword ptr [rbp+0x30]; 
0x0000000007ed51: mov edi, ebx; call qword ptr [rbp+0x60]; 
0x000000000817f2: mov edi, ebx; call qword ptr [rbp+0x68]; 
0x0000000008b87c: mov edi, ebx; call qword ptr [rbp+0x70]; 
0x0000000008699c: mov edi, ebx; call qword ptr [rbp+0x80]; 
0x00000000029b74: mov edi, ebx; call r12; 
0x0000000002abc5: mov edi, ebx; call r14; 
0x000000000e1dbf: mov edi, ebx; call r15; 
0x0000000007dbb3: mov edi, ebx; call r8; 
0x0000000002a2ca: mov edi, ebx; call rax; 
0x0000000002a71a: mov edi, ebx; call rbp; 
0x00000000142b11: mov edi, ebx; call rcx; 
0x000000000982b1: mov edi, ebx; mov eax, 0xca; syscall; 
0x0000000008ceab: mov edi, ebx; mov edx, 0x1; call qword ptr [r14+0x80]; 
0x0000000013fc12: mov edi, ebx; mov rcx, r13; call r10; 
0x000000001247d1: mov edi, ebx; mov rdx, rax; mov rsi, r8; call qword ptr [r10+0x28]; 
0x00000000085381: mov edi, ebx; sub rdx, rsi; call qword ptr [rax+0x70]; 
0x0000000008d137: mov edi, ebx; sub rdx, rsi; call qword ptr [rbp+0x70]; 
0x00000000142bfd: mov edi, ebx; xor eax, eax; call rcx; 
0x00000000045189: mov edi, ecx; call r8; 
0x00000000099226: mov edi, ecx; mov eax, 0xca; syscall; 
0x000000000deab8: mov edi, ecx; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000119014: mov edi, ecx; sub rsp, 0x8; call rsi; 
0x0000000014a86c: mov edi, edi; add dword ptr [rax], 0x1; mov rax, [rbx+0x60]; call qword ptr [rax+0x8]; 
0x00000000028d54: mov edi, edi; add rcx, 0xa08; cmp [rsp+0x18], rcx; cmovne rdi, r14; call rdx; 
0x00000000078582: mov edi, edi; call qword ptr [r12+0x38]; 
0x000000000fba17: mov edi, edi; call qword ptr [r12+0x40]; 
0x00000000079318: mov edi, edi; call qword ptr [r13+0x38]; 
0x00000000085e21: mov edi, edi; call qword ptr [r13+0x80]; 
0x00000000080539: mov edi, edi; call qword ptr [r14+0x38]; 
0x00000000085b4b: mov edi, edi; call qword ptr [r14+0x80]; 
0x00000000085a7d: mov edi, edi; call qword ptr [r14+0x90]; 
0x000000000843a0: mov edi, edi; call qword ptr [rax+0x20]; 
0x0000000014a857: mov edi, edi; call qword ptr [rax+0x28]; 
0x0000000008059e: mov edi, edi; call qword ptr [rbp+0x38]; 
0x00000000086017: mov edi, edi; call qword ptr [rbp+0x80]; 
0x00000000086107: mov edi, edi; call qword ptr [rbx+0x80]; 
0x0000000014ca21: mov edi, edi; call qword ptr [rdx+0x10]; 
0x0000000008713f: mov edi, edi; call r12; 
0x00000000115aec: mov edi, edi; call r14; 
0x00000000085ba4: mov edi, edi; call rax; 
0x0000000014a8ac: mov edi, edi; call rcx; 
0x0000000008e5f8: mov edi, edi; lea rbx, [rsi+0x1]; movzx esi, byte ptr [rsi]; call qword ptr [rax+0x18]; 
0x00000000078d11: mov edi, edi; mov [rbp-0x938], r9d; mov [rbp-0x930], r11b; call rax; 
0x00000000142bb5: mov edi, edi; mov [rsp+0x192], ax; mov rax, [rsp+0x30]; call rax; 
0x0000000013fab0: mov edi, edi; mov [rsp+0x8], rcx; call rbp; 
0x0000000011d0ff: mov edi, edi; mov rax, fs:[rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x1000; ret; 
0x0000000011d067: mov edi, edi; mov rax, fs:[rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x100; ret; 
0x0000000011cbdf: mov edi, edi; mov rax, fs:[rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x1; ret; 
0x0000000011cfdf: mov edi, edi; mov rax, fs:[rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x2000; ret; 
0x0000000011cd9f: mov edi, edi; mov rax, fs:[rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x200; ret; 
0x0000000011cc6f: mov edi, edi; mov rax, fs:[rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x2; ret; 
0x0000000011cebf: mov edi, edi; mov rax, fs:[rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x4000; ret; 
0x0000000011cb4f: mov edi, edi; mov rax, fs:[rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x400; ret; 
0x0000000011cf4f: mov edi, edi; mov rax, fs:[rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x4; ret; 
0x0000000011ce2f: mov edi, edi; mov rax, fs:[rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x8000; ret; 
0x0000000011cabf: mov edi, edi; mov rax, fs:[rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x8; ret; 
0x000000000dac33: mov edi, edi; mov rsi, [rsp+0x60]; call r12; 
0x000000000fbb80: mov edi, edi; movsxd rax, [rdx+rdi*4]; add rax, rdx; notrack jmp rax; 
0x0000000011d9d4: mov edi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x1000; ret; 
0x0000000011d94c: mov edi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x100; ret; 
0x0000000011d544: mov edi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x1; ret; 
0x0000000011d8d4: mov edi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x2000; ret; 
0x0000000011d6d4: mov edi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x200; ret; 
0x0000000011d5c4: mov edi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x2; ret; 
0x0000000011d7d4: mov edi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x4000; ret; 
0x0000000011d4c4: mov edi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x400; ret; 
0x0000000011d854: mov edi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x4; ret; 
0x0000000011d754: mov edi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x8000; ret; 
0x0000000011d444: mov edi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x8; ret; 
0x0000000008e58c: mov edi, edi; movzx esi, byte ptr [rsi]; call qword ptr [rax+0x18]; 
0x0000000014f66d: mov edi, edi; xor eax, eax; add r13, rbx; call rbp; 
0x000000000598d6: mov edi, edx; cmp rax, 0x9; ja short 0x00000000000598b0; mov rax, r8; ret; 
0x000000001412d7: mov edi, esi; add r8, fs:[0x0]; mov rcx, r15; call rbp; 
0x000000001820df: mov edi, esi; bsr eax, eax; lea rax, [rdi+rax-0x20]; vzeroupper; ret; 
0x00000000073089: mov edi, esi; call qword ptr [r12+0x38]; 
0x0000000014398c: mov edi, esi; call qword ptr [rax+0x10]; 
0x00000000083c0a: mov edi, esi; call qword ptr [rax+0x18]; 
0x000000001439c6: mov edi, esi; call qword ptr [rax+0x20]; 
0x0000000007346a: mov edi, esi; call qword ptr [rbx+0x38]; 
0x00000000072cd5: mov edi, esi; call qword ptr [rcx+0x38]; 
0x000000000dbf47: mov edi, esi; call qword ptr [rsp+0x48]; 
0x00000000115b81: mov edi, esi; call r13; 
0x0000000009b897: mov edi, esi; call rax; 
0x000000000c00fe: mov edi, esi; jmp qword ptr [rsi+0x66]; 
0x00000000073859: mov edi, esi; mov [rbp-0x8f5], r9b; mov [rbp-0x900], r8b; call rax; 
0x00000000094919: mov edi, esi; mov [rsp+0x18], r11; call qword ptr [rax]; 
0x00000000044add: mov edi, esi; mov eax, 0xca; syscall; 
0x000000001151ac: mov edi, esi; mov rax, [rbp-0x58]; mov r15d, r13d; call rax; 
0x00000000141e4b: mov edi, esp; call qword ptr [rax+0x20]; 
0x000000001437a7: mov edi, esp; call qword ptr [rax+0x28]; 
0x000000001470e0: mov edi, esp; call qword ptr [rax+0x8]; 
0x0000000014399a: mov edi, esp; call qword ptr [rbx]; 
0x0000000012d832: mov edi, esp; call qword ptr [rsp+0x40]; 
0x0000000014f7b7: mov edi, esp; call r13; 
0x000000000438cb: mov edi, esp; call rax; 
0x00000000132f9d: mov edi, esp; call rbp; 
0x00000000042ccb: mov edi, esp; call rbx; 
0x00000000147114: mov edi, esp; call rcx; 
0x00000000098de6: mov edi, esp; call rdx; 
0x0000000011b63d: mov edi, esp; mov [rbp-0x830], rax; mov eax, ebx; syscall; 
0x0000000005b57d: mov edi, esp; mov [rbp-0xe8], r8; call rax; 
0x0000000014f8bc: mov edi, esp; mov dword ptr [rsp], 0x2; call r8; 
0x000000000427a2: mov edi, esp; mov eax, 0x81; syscall; 
0x00000000044cc4: mov edi, esp; mov eax, 0xca; syscall; 
0x0000000011b6d1: mov edi, esp; mov eax, ebx; syscall; 
0x00000000129f34: mov edi, esp; mov edx, [rsp+0x38]; call qword ptr [rsp+0x60]; 
0x00000000042ddc: mov edi, esp; mov rdx, r14; call rbp; 
0x0000000014dc09: mov edi, esp; mov rsi, rbp; call qword ptr [rax+0x18]; 
0x00000000093881: mov edi, esp; neg rdi; call qword ptr [r13]; 
0x000000000979b5: mov edi, esp; pop r12; pop r13; jmp rax; 
0x00000000039f4c: mov edi, esp; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000005ceed: mov edi, esp; sub rsi, rax; mov rax, [rip+0x18c3e7]; mov rcx, r14; call qword ptr [rax+r8*8]; 
0x0000000007715e: mov edi, esp; xor esi, esi; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000012de01: mov edi, r12d; call qword ptr [rsp+0x40]; 
0x0000000011b63c: mov edi, r12d; mov [rbp-0x830], rax; mov eax, ebx; syscall; 
0x000000000427a1: mov edi, r12d; mov eax, 0x81; syscall; 
0x0000000011b6d0: mov edi, r12d; mov eax, ebx; syscall; 
0x000000000ddf74: mov edi, r13d; call qword ptr [rsp+0x30]; 
0x000000000dbf46: mov edi, r14d; call qword ptr [rsp+0x48]; 
0x0000000011aeda: mov edx, 0x0; cmovb rax, rdx; ret; 
0x0000000009f656: mov edx, 0x0; cmove rax, rdx; ret; 
0x00000000156344: mov edx, 0x0; cmovne rax, rdx; add rsp, 0x8; ret; 
0x00000000099c2d: mov edx, 0x0; cmp rax, 0xffffffffffffffff; cmove rax, rdx; add rsp, 0x8; ret; 
0x000000000ad7ba: mov edx, 0x0; lea rax, [rdi+rax]; cmp [rax], sil; cmovne rax, rdx; ret; 
0x00000000136b52: mov edx, 0x0; mov eax, 0x102; cmovne eax, edx; ret; 
0x000000000b84a6: mov edx, 0x0; pop rbx; cmove rax, rdx; ret; 
0x00000000132ab9: mov edx, 0x1000b5a; add rsp, 0x8; ret; 
0x000000000e0ab7: mov edx, 0x100; mov eax, 0x20; cmove rax, rdx; ret; 
0x00000000136b11: mov edx, 0x107; mov eax, 0xffffffff; cmove eax, edx; ret; 
0x00000000080530: mov edx, 0x10; mov rsi, r13; mov rdi, r15; call qword ptr [r14+0x38]; 
0x0000000010f153: mov edx, 0x14; sub edx, eax; test eax, eax; cmovns eax, edx; ret; 
0x00000000090c14: mov edx, 0x16; test eax, eax; cmovne eax, edx; ret; 
0x0000000008cead: mov edx, 0x1; call qword ptr [r14+0x80]; 
0x0000000010b01d: mov edx, 0x1; call qword ptr [rbp+0x40]; 
0x0000000007b26a: mov edx, 0x1; jmp rcx; 
0x000000000758f9: mov edx, 0x1; jmp rsi; 
0x0000000010ead0: mov edx, 0x1; mov esi, 0x5409; mov eax, 0x10; syscall; 
0x0000000010eb01: mov edx, 0x1; mov esi, 0x5409; mov r8d, eax; mov eax, 0x10; syscall; 
0x000000000dda28: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x109a62]; syscall; 
0x000000000dd8e8: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x109ba2]; syscall; 
0x000000000dd830: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x109c5a]; syscall; 
0x000000000dd754: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x109d2e]; syscall; 
0x000000000dd584: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x109ebe]; syscall; 
0x000000000dd3c0: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10a03a]; syscall; 
0x000000000dd006: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10a39c]; syscall; 
0x000000000dbd58: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10b5c2]; syscall; 
0x000000000dbc18: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10b702]; syscall; 
0x000000000dbb60: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10b7ba]; syscall; 
0x000000000db794: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10bb7e]; syscall; 
0x000000000db5c4: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10bd0e]; syscall; 
0x000000000db400: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10be8a]; syscall; 
0x000000000dab08: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10c72a]; syscall; 
0x000000000ceb34: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1185f6]; syscall; 
0x000000000ce940: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1187ea]; syscall; 
0x000000000c6674: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x11efd6]; syscall; 
0x00000000099894: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x14a2f6]; syscall; 
0x0000000009b224: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x14bcce]; syscall; 
0x0000000009afa0: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x14bf52]; syscall; 
0x0000000009adc0: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x14c132]; syscall; 
0x0000000009abd4: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x14c31e]; syscall; 
0x0000000009ab64: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x14c38e]; syscall; 
0x00000000096ee4: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x14cca6]; syscall; 
0x00000000096e84: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x14cd06]; syscall; 
0x00000000096ab4: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x14d0d6]; syscall; 
0x00000000096854: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x14d336]; syscall; 
0x0000000009620c: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x14d97e]; syscall; 
0x000000000961d4: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x14d9b6]; syscall; 
0x00000000097eb3: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x14efb7]; syscall; 
0x00000000097418: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x14fa42]; syscall; 
0x000000000930ef: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x153d7b]; syscall; 
0x00000000093073: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x153de7]; syscall; 
0x00000000092dcc: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x15409e]; syscall; 
0x00000000092b20: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x15434a]; syscall; 
0x00000000092055: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x154795]; syscall; 
0x00000000091eb0: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x15493a]; syscall; 
0x00000000091d24: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x154ac6]; syscall; 
0x0000000008ff27: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x156733]; syscall; 
0x0000000008f9e6: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x156c74]; syscall; 
0x0000000008f656: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x157004]; syscall; 
0x0000000008f2f6: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x157364]; syscall; 
0x0000000008dbd2: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x158a88]; syscall; 
0x0000000008d8e2: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x158d78]; syscall; 
0x0000000008d5de: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x15907c]; syscall; 
0x00000000080cc3: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x165957]; syscall; 
0x000000000808c7: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x165d53]; syscall; 
0x0000000008081b: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x165dff]; syscall; 
0x0000000007e974: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x166cd6]; syscall; 
0x0000000005f198: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x18745a]; syscall; 
0x0000000005ef14: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1876da]; syscall; 
0x0000000005cd90: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x18984a]; syscall; 
0x0000000005cc50: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x18998a]; syscall; 
0x00000000052e78: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x193742]; syscall; 
0x00000000052cb4: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x193906]; syscall; 
0x000000000527a4: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x193e16]; syscall; 
0x00000000050398: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x195ff2]; syscall; 
0x00000000050214: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x196176]; syscall; 
0x000000000501b4: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1961d6]; syscall; 
0x00000000045a50: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1a0902]; syscall; 
0x00000000045990: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1a09c2]; syscall; 
0x000000000458c8: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1a0a8a]; syscall; 
0x000000000457f0: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1a0b62]; syscall; 
0x000000000448e8: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1a11ea]; syscall; 
0x00000000044823: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1a12af]; syscall; 
0x00000000044680: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1a1452]; syscall; 
0x000000000445a7: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1a152b]; syscall; 
0x0000000003d011: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1a89e1]; syscall; 
0x0000000003b686: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1aa334]; syscall; 
0x0000000003a4d5: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1ab435]; syscall; 
0x0000000003a4b5: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1ab455]; syscall; 
0x0000000003a34b: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1ab5bf]; syscall; 
0x0000000002ac58: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1ba9f2]; syscall; 
0x0000000002aaec: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1bab5e]; syscall; 
0x0000000002a9f4: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1bac56]; syscall; 
0x00000000026842: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1bf258]; syscall; 
0x00000000191970: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x54162]; syscall; 
0x00000000191b30: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x54cba]; syscall; 
0x00000000191e50: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x567f2]; syscall; 
0x00000000158050: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9107e]; syscall; 
0x00000000156d58: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x92376]; syscall; 
0x00000000156c78: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x92456]; syscall; 
0x00000000156a90: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9263e]; syscall; 
0x00000000156a00: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x926ce]; syscall; 
0x00000000156960: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9276e]; syscall; 
0x000000001568b0: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9281e]; syscall; 
0x000000001564e0: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x92bee]; syscall; 
0x0000000014c2e0: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9cbd2]; syscall; 
0x0000000014c180: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9cd32]; syscall; 
0x0000000014bf74: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9cf3e]; syscall; 
0x0000000014bdd4: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9d0de]; syscall; 
0x0000000014bc40: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9d272]; syscall; 
0x0000000014bb00: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9d3b2]; syscall; 
0x0000000014b9a0: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9d512]; syscall; 
0x0000000014b890: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9d622]; syscall; 
0x00000000148400: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa0a96]; syscall; 
0x0000000013f4cc: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa977e]; syscall; 
0x0000000013f19c: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa9aae]; syscall; 
0x0000000013ee1c: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa9e2e]; syscall; 
0x0000000013ec1e: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xaa02c]; syscall; 
0x0000000013ea94: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xaa1b6]; syscall; 
0x0000000013e857: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xaa3f3]; syscall; 
0x0000000013de10: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xaad72]; syscall; 
0x0000000013dc8f: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xaaef3]; syscall; 
0x0000000013dc55: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xaaf2d]; syscall; 
0x0000000013db48: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xab03a]; syscall; 
0x0000000013d308: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xab87a]; syscall; 
0x0000000013d240: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xab942]; syscall; 
0x0000000013d124: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xaba5e]; syscall; 
0x0000000013bd91: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xacba1]; syscall; 
0x00000000138510: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb0132]; syscall; 
0x00000000138234: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb040e]; syscall; 
0x00000000133f54: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb46da]; syscall; 
0x000000001339d4: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb4c3e]; syscall; 
0x00000000133810: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb4dba]; syscall; 
0x00000000133748: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb4e22]; syscall; 
0x00000000133608: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb4f62]; syscall; 
0x00000000133550: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb501a]; syscall; 
0x00000000132e60: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb5702]; syscall; 
0x00000000132b30: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb5a32]; syscall; 
0x00000000132974: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb5bee]; syscall; 
0x0000000013245a: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb6064]; syscall; 
0x0000000012eb68: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb983a]; syscall; 
0x0000000012ea28: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb997a]; syscall; 
0x0000000012e970: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb9a32]; syscall; 
0x0000000012e884: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb9b16]; syscall; 
0x0000000012e6b4: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb9cb6]; syscall; 
0x0000000012e4f0: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb9e52]; syscall; 
0x0000000012e428: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb9eca]; syscall; 
0x0000000012e2e8: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xba00a]; syscall; 
0x0000000012e230: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xba0c2]; syscall; 
0x0000000012e150: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xba19a]; syscall; 
0x0000000012dc84: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xba5ee]; syscall; 
0x0000000012d6b4: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbab5e]; syscall; 
0x0000000012d194: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbb036]; syscall; 
0x0000000012cfc8: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbb1c2]; syscall; 
0x0000000012ce88: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbb302]; syscall; 
0x0000000012cdd0: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbb3ba]; syscall; 
0x0000000012ccf0: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbb492]; syscall; 
0x0000000012c8d4: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbb866]; syscall; 
0x0000000012c2b8: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbbe22]; syscall; 
0x0000000012c160: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbbf7a]; syscall; 
0x0000000012c0a0: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbc03a]; syscall; 
0x0000000012bfb8: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbc11a]; syscall; 
0x0000000012bed4: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbc1c6]; syscall; 
0x0000000012b874: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbc7e6]; syscall; 
0x0000000012b668: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbc9aa]; syscall; 
0x0000000012b510: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbcb02]; syscall; 
0x0000000012b450: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbcbc2]; syscall; 
0x0000000012b368: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbcca2]; syscall; 
0x0000000012a754: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbd83e]; syscall; 
0x0000000012a4e4: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbda6e]; syscall; 
0x00000000129d64: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbe18e]; syscall; 
0x00000000120308: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc7b32]; syscall; 
0x000000001201c8: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc7c72]; syscall; 
0x00000000120110: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc7d2a]; syscall; 
0x0000000011fd36: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc80fc]; syscall; 
0x0000000011fb0c: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc82ee]; syscall; 
0x0000000011f944: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc846e]; syscall; 
0x0000000011f780: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc85ea]; syscall; 
0x0000000011f6b0: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc8666]; syscall; 
0x0000000011f5e0: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc8736]; syscall; 
0x0000000011f544: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc87d2]; syscall; 
0x0000000011eaa8: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc923a]; syscall; 
0x0000000011e968: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc937a]; syscall; 
0x0000000011e8b0: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc9432]; syscall; 
0x0000000011e2b6: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc9a24]; syscall; 
0x0000000011e0b4: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc9bce]; syscall; 
0x0000000011ded4: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc9d46]; syscall; 
0x0000000011dd10: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc9ea2]; syscall; 
0x00000000113610: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xd422a]; syscall; 
0x000000001134f4: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xd4346]; syscall; 
0x00000000113094: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xd47a6]; syscall; 
0x00000000112b63: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xd4cd7]; syscall; 
0x00000000101554: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xe6056]; syscall; 
0x000000000272b9: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x000000000973ed: mov edx, 0x1; mov esi, 0x81; mov eax, ebx; syscall; 
0x00000000044cb9: mov edx, 0x1; mov esi, 0x81; mov rdi, r12; mov eax, 0xca; syscall; 
0x000000000452b2: mov edx, 0x1; mov esi, 0x81; mov rdi, r13; mov eax, 0xca; syscall; 
0x00000000044ad2: mov edx, 0x1; mov esi, 0x81; mov rdi, r14; mov eax, 0xca; syscall; 
0x000000000918f9: mov edx, 0x1; mov esi, 0x81; mov rdi, rbp; mov eax, 0xca; syscall; 
0x000000000982a6: mov edx, 0x1; mov esi, 0x81; mov rdi, rbx; mov eax, 0xca; syscall; 
0x0000000009921b: mov edx, 0x1; mov esi, 0x81; mov rdi, rcx; mov eax, 0xca; syscall; 
0x00000000086011: mov edx, 0x1; mov rdi, r15; call qword ptr [rbp+0x80]; 
0x0000000008bcaf: mov edx, 0x1; mov rdi, rbp; call qword ptr [rax+0x80]; 
0x0000000008b209: mov edx, 0x1; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x0000000008cdf9: mov edx, 0x1; mov rdi, rbx; call qword ptr [r12+0x48]; 
0x00000000086996: mov edx, 0x1; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x000000000897d8: mov edx, 0x1; mov rsi, rbx; mov edi, 0x2; mov eax, r9d; syscall; 
0x0000000015a632: mov edx, 0x1; shl rdx, cl; or [rdi+rax*8], rdx; xor eax, eax; ret; 
0x00000000136b28: mov edx, 0x29; mov eax, 0x104; cmovne eax, edx; ret; 
0x0000000010b37d: mov edx, 0x2; call qword ptr [rbp+0x40]; 
0x000000000fd8a4: mov edx, 0x2; cmove eax, edx; ret; 
0x00000000090b4a: mov edx, 0x2; mov esi, 0x80; mov eax, 0xca; syscall; 
0x00000000085e1b: mov edx, 0x2; mov rdi, r15; call qword ptr [r13+0x80]; 
0x0000000007ebb7: mov edx, 0x2; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x0000000008c62c: mov edx, 0x2; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x00000000028d08: mov edx, 0x3c; nop [rax]; xor edi, edi; mov eax, edx; syscall; 
0x000000000fbb2d: mov edx, 0x3ed00148; jmp rax; 
0x00000000133033: mov edx, 0x400; mov rsi, r15; mov rdi, r12; call rbp; 
0x0000000011b760: mov edx, 0x40; mov eax, 0x14; syscall; 
0x000000000e0af2: mov edx, 0x40; mov eax, 0x20; cmove rax, rdx; ret; 
0x000000000d9802: mov edx, 0x480010be; ror eax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003d0ba: mov edx, 0x48001a96; lea edi, [rip+0x1a87fb]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000007b462: mov edx, 0x48fffff3; add ecx, ebx; mov rbx, rsi; jmp rcx; 
0x0000000014d1f2: mov edx, 0x48fffffb; lea edi, [rip+0x9bce3]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000010b2fd: mov edx, 0x5; call qword ptr [rbp+0x40]; 
0x00000000097602: mov edx, 0x5b000001; mov rax, r8; pop rbp; pop r12; ret; 
0x0000000010f307: mov edx, 0x5be0894c; pop rbp; pop r12; ret; 
0x00000000191932: mov edx, 0x5bfff83f; mov qword ptr [rip+0x5419e], 0x0; ret; 
0x0000000009115b: mov edx, 0x5f; mov eax, 0x16; cmove eax, edx; ret; 
0x00000000116e0b: mov edx, 0x64; mov eax, [rax+0x38]; test eax, eax; cmove eax, edx; ret; 
0x000000000e09ec: mov edx, 0x7d00; cmove rax, rdx; ret; 
0x000000000e0a3a: mov edx, 0x7f; cmovne rax, rdx; ret; 
0x000000001377ee: mov edx, 0x7fffffff; add eax, ecx; cmovs eax, edx; ret; 
0x0000000018e2c7: mov edx, 0x830f33e2; nop; add al, [rax]; add [rcx-0x7d], al; ret far; 
0x000000000473d6: mov edx, 0x841f0f66; add [rax], al; add [rax], al; add [rax+0x39], cl; ret far; 
0x000000000dbe92: mov edx, 0x8900000d; ret; 
0x00000000097542: mov edx, 0x89480014; xor [rax-0x75], cl; add eax, 0x14b971; mov [rax], rdi; ret; 
0x00000000055db2: mov edx, 0x894830e8; or [r8+0x2], r15b; ret; 
0x0000000004263c: mov edx, 0x8; mov eax, 0x80; syscall; 
0x00000000041a1a: mov edx, 0x8; mov eax, 0xd; syscall; 
0x00000000053005: mov edx, 0x8; mov eax, 0xe; syscall; 
0x00000000091b0c: mov edx, 0x8; mov rsi, r8; mov eax, 0xe; syscall; 
0x000000001193ec: mov edx, 0x8; syscall; 
0x00000000155e59: mov edx, 0xe80005ba; out dx, al; sub ebp, esi; jmp qword ptr [rsi+0x66]; 
0x00000000155e5a: mov edx, 0xeee80005; sub ebp, esi; jmp qword ptr [rsi+0x66]; 
0x00000000108ddc: mov edx, 0xf3001f0f; nop edx, edi; mov eax, 0x8; syscall; 
0x00000000119d8a: mov edx, 0xf7000c90; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x00000000156f34: mov edx, 0xfd2816e8; jmp qword ptr [rsi+0xf]; 
0x000000000e09d2: mov edx, 0xfde8; cmove rax, rdx; ret; 
0x00000000142334: mov edx, 0xfe7416e8; jmp qword ptr [rsi+0xf]; 
0x0000000015a673: mov edx, 0xfffffffe; rol rdx, cl; and [rdi+rax*8], rdx; xor eax, eax; ret; 
0x0000000009d434: mov edx, 0xffffffff; bsf eax, edi; cmove eax, edx; add eax, 0x1; ret; 
0x000000000386f8: mov edx, 0xffffffff; cmove rax, rdx; ret; 
0x0000000002be2b: mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x000000000e0b80: mov edx, 0xffffffff; cmp dword ptr fs:[rax], 0x26; mov eax, 0x20; cmovne rax, rdx; ret; 
0x000000000e0a50: mov edx, 0xffffffff; cmp dword ptr fs:[rax], 0x26; mov eax, 0x7f; cmovne rax, rdx; ret; 
0x0000000010fa2d: mov edx, 0xffffffff; mov edi, 0xffffffff; mov eax, 0x75; syscall; 
0x0000000010fafd: mov edx, 0xffffffff; mov edi, 0xffffffff; mov eax, 0x77; syscall; 
0x0000000014f667: mov edx, 0xffffffff; mov rdi, r15; xor eax, eax; add r13, rbx; call rbp; 
0x000000001513fc: mov edx, 0xffffffff; mov rsi, r12; mov rdi, rbx; call rcx; 
0x0000000014f7ae: mov edx, 0xffffffff; mov rsi, r14; mov rdi, r12; call r13; 
0x0000000015152a: mov edx, 0xffffffff; mov rsi, r14; mov rdi, rbp; call r12; 
0x00000000045547: mov edx, 0xffffffff; pop rbx; test eax, eax; cmovs eax, edx; ret; 
0x00000000137788: mov edx, 0xffffffff; ret; 
0x000000000611bf: mov edx, [0x18]; test edx, edx; jne short 0x00000000000611d0; sub dword ptr [rdi], 0x1; ret; 
0x000000000808a1: mov edx, [0x18]; test edx, edx; jne short 0x00000000000808b8; sub dword ptr [rip+0x165d7d], 0x1; ret; 
0x0000000008d585: mov edx, [0x18]; test edx, edx; jne short 0x000000000008d5a0; sub dword ptr [rip+0x1590d9], 0x1; ret; 
0x0000000008ff01: mov edx, [0x18]; test edx, edx; jne short 0x000000000008ff18; sub dword ptr [rip+0x15675d], 0x1; ret; 
0x0000000008964c: mov edx, [rax+0x18]; mov [rax+0x20], rdx; pop rbx; ret; 
0x00000000107ac4: mov edx, [rax+0xb0]; call qword ptr [rax+0x88]; 
0x000000000387ca: mov edx, [rax+0xc0]; mov rax, [rip+0x1aa5d9]; mov [rax], rdx; ret; 
0x00000000028c3a: mov edx, [rax]; call rbp; 
0x000000000453b4: mov edx, [rax]; mov [rbx+0x18], rdx; mov fs:[rax], rbx; call qword ptr [rbp+0xf88]; 
0x00000000028ca9: mov edx, [rax]; mov rax, [rsp+0x10]; call rax; 
0x0000000008afe9: mov edx, [rbp+0x40]; sub rdx, rsi; mov [rsp], rcx; mov rdi, rbp; call rax; 
0x00000000062118: mov edx, [rbp-0x610]; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x000000001247cb: mov edx, [rbp-0xd0]; mov edi, ebx; mov rdx, rax; mov rsi, r8; call qword ptr [r10+0x28]; 
0x00000000141753: mov edx, [rbx+0x22c0]; mov rsi, r14; add qword ptr [rbx+0x22a8], 0x1; mov rdi, rbp; call qword ptr [rax+0x18]; 
0x0000000009119c: mov edx, [rbx+0x28]; and [rdx+0x10], rcx; pop rbx; ret; 
0x0000000008537d: mov edx, [rbx+0x40]; mov rdi, rbx; sub rdx, rsi; call qword ptr [rax+0x70]; 
0x0000000008d133: mov edx, [rbx+0x40]; mov rdi, rbx; sub rdx, rsi; call qword ptr [rbp+0x70]; 
0x000000001077a8: mov edx, [rbx+0xb0]; mov rsi, [rbx+0xa0]; mov rdi, [rbx+0x80]; call qword ptr [rax+0x88]; 
0x0000000003fb0a: mov edx, [rcx+rax*4+0x8]; add r10, [rdi+0x20]; mov rax, r10; ret; 
0x0000000017b27f: mov edx, [rcx+rdx*4]; mov eax, [rcx+rax*4]; sub eax, edx; ret; 
0x000000001799ad: mov edx, [rcx+rdx*4]; sub eax, edx; ret; 
0x000000000b83eb: mov edx, [rcx+rdx*4]; sub edx, [rcx+rsi*4]; je short 0x00000000000b83d0; mov eax, edx; ret; 
0x0000000011d15b: mov edx, [rcx+rdx]; test edx, edx; jne short 0x000000000011d170; mov eax, r8d; ret; 
0x0000000011d3ae: mov edx, [rcx+rdx]; test edx, edx; jne short 0x000000000011d3c0; ret; 
0x0000000011dc4e: mov edx, [rcx+rdx]; test edx, edx; jne short 0x000000000011dc60; ret; 
0x000000000ce5b6: mov edx, [rcx]; add [rbp+0x1], cl; ret; 
0x000000000de5c4: mov edx, [rdi+0x10]; mov [rdi+0x10], rdx; mov rdx, [rdi+0x18]; mov [rdi+0x18], rdx; ret; 
0x000000000de5cc: mov edx, [rdi+0x18]; mov [rdi+0x18], rdx; ret; 
0x00000000126bc7: mov edx, [rdi+0x28]; xor eax, eax; test edx, edx; sete al; ret; 
0x00000000085b98: mov edx, [rdi+0x40]; sub rdx, rsi; mov [rsp+0x8], rcx; mov rdi, r15; call rax; 
0x00000000141330: mov edx, [rdi+0x5c]; lea rsi, [rdi+0x48]; mov rdi, r8; mov rax, [rax+0x18]; jmp rax; 
0x000000000eacf9: mov edx, [rdi+0x70]; xor eax, eax; test byte ptr [rdx+0xc8], 0x40; jne 0x00000000000eac2d; ret; 
0x000000000eaca7: mov edx, [rdi+0x70]; xor eax, eax; test byte ptr [rdx+0xc8], 0x80; je 0x00000000000eac2d; ret; 
0x00000000061153: mov edx, [rdi+0x88]; mov [rdx+0x8], rcx; mov dword ptr [rdx+0x4], 0x1; ret; 
0x0000000014b761: mov edx, [rdi+0x8]; mov [rsp], rax; call qword ptr [rdx+0x20]; 
0x0000000014ca12: mov edx, [rdi+0x8]; mov dword ptr [rbp], 0xe; lea rsi, [rbp+0x8]; mov rdi, r15; call qword ptr [rdx+0x10]; 
0x0000000014a664: mov edx, [rdi+0x90]; bswap eax; mov [rdx+0x10], eax; mov eax, 0x1; ret; 
0x0000000014a564: mov edx, [rdi+0x90]; bswap eax; mov [rdx+0xc], eax; mov eax, 0x1; ret; 
0x0000000007f164: mov edx, [rdi+0xa0]; mov [rdx+0xe0], rcx; ret; 
0x0000000008969f: mov edx, [rdi+0xa0]; mov rax, [rdx+0x20]; sub rax, [rdx+0x18]; sar rax, 0x2; ret; 
0x0000000008956f: mov edx, [rdi+0xa0]; mov rax, [rdx+0x38]; sub rax, [rdx+0x30]; sar rax, 0x2; ret; 
0x00000000185842: mov edx, [rdi]; cmp edx, [rsi]; jne short 0x000000000018582c; ret; 
0x0000000013f814: mov edx, [rdi]; mov r8, rbp; mov rcx, r14; mov rdi, r13; call r12; 
0x00000000042509: mov edx, [rdi]; xor eax, eax; test edx, edx; sete al; ret; 
0x0000000013f876: mov edx, [rdi]; xor r8d, r8d; mov rcx, r14; mov rdi, r13; call r12; 
0x00000000053176: mov edx, [rdx+0x88]; xor eax, eax; ret; 
0x0000000010ac05: mov edx, [rdx+rax]; call qword ptr [rbx+0x40]; 
0x0000000010b7a5: mov edx, [rdx+rax]; mov rdi, [rbp-0x118]; mov rsi, r9; call qword ptr [rbp-0xf0]; 
0x0000000005390f: mov edx, [rdx+rcx*8]; mov [rax+rcx*8], rdx; xor eax, eax; ret; 
0x000000000de891: mov edx, [rip+0x1045b1]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000de771: mov edx, [rip+0x1046d1]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000de6b1: mov edx, [rip+0x104791]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000da1b9: mov edx, [rip+0x108c89]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x000000000d8f81: mov edx, [rip+0x109ec1]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000d0229: mov edx, [rip+0x112c19]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000d01f9: mov edx, [rip+0x112c49]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000cd061: mov edx, [rip+0x115de1]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000cceb1: mov edx, [rip+0x115f91]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000ccd99: mov edx, [rip+0x1160a9]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000061011: mov edx, [rip+0x181e31]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000060fd9: mov edx, [rip+0x181e69]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000046431: mov edx, [rip+0x19ca11]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000041ca1: mov edx, [rip+0x1a11a1]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000041c11: mov edx, [rip+0x1a1231]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000039003: mov edx, [rip+0x1a9ef7]; add rax, 0x200; mov fs:[rdx], rax; ret; 
0x00000000028d87: mov edx, [rip+0x1ba0ab]; lea rdi, [rip+0x184f6e]; mov rsi, [rax]; xor eax, eax; call qword ptr [rdx+0x260]; 
0x000000000284c8: mov edx, [rip+0x1ba99a]; cmp [rdx+0xd8], rax; jne short 0x000000000002849b; ret; 
0x0000000015c751: mov edx, [rip+0x866f1]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000001284a1: mov edx, [rip+0xba9a1]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000011b329: mov edx, [rip+0xc7b19]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000011b2f1: mov edx, [rip+0xc7b51]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000011b2b9: mov edx, [rip+0xc7b89]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000011b289: mov edx, [rip+0xc7bb9]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000011b251: mov edx, [rip+0xc7bf1]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000011b169: mov edx, [rip+0xc7cd9]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000011b129: mov edx, [rip+0xc7d19]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000011b0f9: mov edx, [rip+0xc7d49]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000011b0b1: mov edx, [rip+0xc7d91]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000011aff1: mov edx, [rip+0xc7e51]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000011ae51: mov edx, [rip+0xc7ff1]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000011ad99: mov edx, [rip+0xc80a9]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000011ace1: mov edx, [rip+0xc8161]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000011a899: mov edx, [rip+0xc85a9]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000011a7d1: mov edx, [rip+0xc8671]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000011a731: mov edx, [rip+0xc8711]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000011a671: mov edx, [rip+0xc87d1]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000011a5d1: mov edx, [rip+0xc8871]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000011a511: mov edx, [rip+0xc8931]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000011a391: mov edx, [rip+0xc8ab1]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000011a2c1: mov edx, [rip+0xc8b81]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000119b99: mov edx, [rip+0xc92a9]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000119b61: mov edx, [rip+0xc92e1]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000119b21: mov edx, [rip+0xc9321]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000119a51: mov edx, [rip+0xc93f1]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000119a19: mov edx, [rip+0xc9429]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000119941: mov edx, [rip+0xc9501]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000119861: mov edx, [rip+0xc95e1]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000001197b9: mov edx, [rip+0xc9689]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x000000001196f1: mov edx, [rip+0xc9751]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000119641: mov edx, [rip+0xc9801]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000119591: mov edx, [rip+0xc98b1]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000119401: mov edx, [rip+0xc9a41]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000001193a9: mov edx, [rip+0xc9a99]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000119299: mov edx, [rip+0xc9ba9]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000119269: mov edx, [rip+0xc9bd9]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000011bdef: mov edx, [rip+0xcbc83]; add word ptr [rdx+rax*2], 0x1; ret; 
0x00000000116541: mov edx, [rip+0xcc901]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000113981: mov edx, [rip+0xcf4c1]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000111c29: mov edx, [rip+0xd1219]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000111bf9: mov edx, [rip+0xd1249]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000001102a1: mov edx, [rip+0xd2ba1]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000110221: mov edx, [rip+0xd2c21]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000110161: mov edx, [rip+0xd2ce1]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010ff51: mov edx, [rip+0xd2ef1]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010f5c9: mov edx, [rip+0xd3879]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000010f509: mov edx, [rip+0xd3939]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000010f451: mov edx, [rip+0xd39f1]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000010f3b1: mov edx, [rip+0xd3a91]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000010f161: mov edx, [rip+0xd3ce1]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010ed89: mov edx, [rip+0xd40b9]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010ed51: mov edx, [rip+0xd40f1]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010ed11: mov edx, [rip+0xd4131]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010eb39: mov edx, [rip+0xd4309]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010e849: mov edx, [rip+0xd45f9]; mov esi, 0x5401; mov eax, r8d; mov ebx, fs:[r10]; syscall; 
0x0000000010e609: mov edx, [rip+0xd4839]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000010e5d1: mov edx, [rip+0xd4871]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000010e599: mov edx, [rip+0xd48a9]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000010e2d9: mov edx, [rip+0xd4b69]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010e291: mov edx, [rip+0xd4bb1]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010e1e1: mov edx, [rip+0xd4c61]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010ddf1: mov edx, [rip+0xd5051]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010ddb1: mov edx, [rip+0xd5091]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010dd59: mov edx, [rip+0xd50e9]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000010d691: mov edx, [rip+0xd57b1]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000001096c1: mov edx, [rip+0xd9781]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000109541: mov edx, [rip+0xd9901]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000108e29: mov edx, [rip+0xda019]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000108df9: mov edx, [rip+0xda049]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000108db1: mov edx, [rip+0xda091]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000108d11: mov edx, [rip+0xda131]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000108561: mov edx, [rip+0xda8e1]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000108501: mov edx, [rip+0xda941]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000001084a1: mov edx, [rip+0xda9a1]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000108119: mov edx, [rip+0xdad29]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000001080b9: mov edx, [rip+0xdad89]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000108059: mov edx, [rip+0xdade9]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000106dc1: mov edx, [rip+0xdc081]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000106d11: mov edx, [rip+0xdc131]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x000000000fd379: mov edx, [rip+0xe5ac9]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000fd2d9: mov edx, [rip+0xe5b69]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000001678a1: mov edx, [rsi+0x1]; mov cx, [rsi]; mov [rdi+0x1], dx; mov [rdi], cx; ret; 
0x000000001677c0: mov edx, [rsi+0x1]; mov ecx, [rsi]; mov [rdi+0x1], edx; mov [rdi], ecx; ret; 
0x00000000167601: mov edx, [rsi+0x1]; mov rcx, [rsi]; mov [rdi+0x1], rdx; mov [rdi], rcx; ret; 
0x00000000148c51: mov edx, [rsi+0x1c8]; add rsi, 0x38; jmp qword ptr [rax+0x18]; 
0x00000000167750: mov edx, [rsi+0x2]; mov ecx, [rsi]; mov [rdi+0x2], edx; mov [rdi], ecx; ret; 
0x00000000167591: mov edx, [rsi+0x2]; mov rcx, [rsi]; mov [rdi+0x2], rdx; mov [rdi], rcx; ret; 
0x000000000b4802: mov edx, [rsi+0x3]; mov [rdi], ecx; mov [rdi+0x3], edx; lea rax, [rdi+0x6]; ret; 
0x000000000b5652: mov edx, [rsi+0x3]; mov [rdi], ecx; mov [rdi+0x3], edx; lea rax, [rdi+0x7]; ret; 
0x000000000b31b2: mov edx, [rsi+0x3]; mov [rdi], ecx; mov [rdi+0x3], edx; ret; 
0x000000001676e0: mov edx, [rsi+0x3]; mov ecx, [rsi]; mov [rdi+0x3], edx; mov [rdi], ecx; ret; 
0x00000000167521: mov edx, [rsi+0x3]; mov rcx, [rsi]; mov [rdi+0x3], rdx; mov [rdi], rcx; ret; 
0x000000000b47e3: mov edx, [rsi+0x4]; mov [rdi], ecx; mov [rdi+0x4], dx; lea rax, [rdi+0x5]; ret; 
0x000000000b5633: mov edx, [rsi+0x4]; mov [rdi], ecx; mov [rdi+0x4], dx; lea rax, [rdi+0x6]; ret; 
0x000000000b31a3: mov edx, [rsi+0x4]; mov [rdi], ecx; mov [rdi+0x4], dx; ret; 
0x000000001674b1: mov edx, [rsi+0x4]; mov rcx, [rsi]; mov [rdi+0x4], rdx; mov [rdi], rcx; ret; 
0x000000000b4894: mov edx, [rsi+0x5]; mov [rdi], rcx; mov [rdi+0x5], rdx; lea rax, [rdi+0xc]; ret; 
0x000000000b56f4: mov edx, [rsi+0x5]; mov [rdi], rcx; mov [rdi+0x5], rdx; lea rax, [rdi+0xd]; ret; 
0x000000000b3214: mov edx, [rsi+0x5]; mov [rdi], rcx; mov [rdi+0x5], rdx; ret; 
0x00000000167441: mov edx, [rsi+0x5]; mov rcx, [rsi]; mov [rdi+0x5], rdx; mov [rdi], rcx; ret; 
0x000000000b48b4: mov edx, [rsi+0x6]; mov [rdi], rcx; mov [rdi+0x6], rdx; lea rax, [rdi+0xd]; ret; 
0x000000000b5714: mov edx, [rsi+0x6]; mov [rdi], rcx; mov [rdi+0x6], rdx; lea rax, [rdi+0xe]; ret; 
0x000000000b3224: mov edx, [rsi+0x6]; mov [rdi], rcx; mov [rdi+0x6], rdx; ret; 
0x000000001673d1: mov edx, [rsi+0x6]; mov rcx, [rsi]; mov [rdi+0x6], rdx; mov [rdi], rcx; ret; 
0x000000000b4853: mov edx, [rsi+0x7]; mov [rdi], rcx; mov [rdi+0x7], edx; lea rax, [rdi+0xa]; ret; 
0x000000000b56b3: mov edx, [rsi+0x7]; mov [rdi], rcx; mov [rdi+0x7], edx; lea rax, [rdi+0xb]; ret; 
0x000000000b31f3: mov edx, [rsi+0x7]; mov [rdi], rcx; mov [rdi+0x7], edx; ret; 
0x000000000b48d4: mov edx, [rsi+0x7]; mov [rdi], rcx; mov [rdi+0x7], rdx; lea rax, [rdi+0xe]; ret; 
0x000000000b5734: mov edx, [rsi+0x7]; mov [rdi], rcx; mov [rdi+0x7], rdx; lea rax, [rdi+0xf]; ret; 
0x000000000b3234: mov edx, [rsi+0x7]; mov [rdi], rcx; mov [rdi+0x7], rdx; ret; 
0x00000000167361: mov edx, [rsi+0x7]; mov rcx, [rsi]; mov [rdi+0x7], rdx; mov [rdi], rcx; ret; 
0x000000000b4834: mov edx, [rsi+0x8]; mov [rdi], rcx; mov [rdi+0x8], dx; lea rax, [rdi+0x9]; ret; 
0x000000000b5694: mov edx, [rsi+0x8]; mov [rdi], rcx; mov [rdi+0x8], dx; lea rax, [rdi+0xa]; ret; 
0x000000000b31e4: mov edx, [rsi+0x8]; mov [rdi], rcx; mov [rdi+0x8], dx; ret; 
0x000000000b4873: mov edx, [rsi+0x8]; mov [rdi], rcx; mov [rdi+0x8], edx; lea rax, [rdi+0xb]; ret; 
0x000000000b56d3: mov edx, [rsi+0x8]; mov [rdi], rcx; mov [rdi+0x8], edx; lea rax, [rdi+0xc]; ret; 
0x000000000b3203: mov edx, [rsi+0x8]; mov [rdi], rcx; mov [rdi+0x8], edx; ret; 
0x00000000184072: mov edx, [rsi+r8-0x4]; mov [rdi], ecx; mov [rdi+r8-0x4], edx; vzeroupper; ret; 
0x00000000184073: mov edx, [rsi+rax-0x4]; mov [rdi], ecx; mov [rdi+r8-0x4], edx; vzeroupper; ret; 
0x00000000184094: mov edx, [rsi+rax-0x8]; mov [rdi], rcx; mov [rdi+r8-0x8], rdx; vzeroupper; ret; 
0x00000000161761: mov edx, [rsi-0x2]; mov [rdi-0x2], dx; ret; 
0x00000000161941: mov edx, [rsi-0x3]; mov cx, [rsi-0x2]; mov [rdi-0x3], dx; mov [rdi-0x2], cx; ret; 
0x00000000161558: mov edx, [rsi-0x4]; mov [rdi-0x11], r11; mov [rdi-0x9], rcx; mov [rdi-0x4], edx; ret; 
0x00000000161738: mov edx, [rsi-0x4]; mov [rdi-0x12], r11; mov [rdi-0xa], rcx; mov [rdi-0x4], edx; ret; 
0x00000000161918: mov edx, [rsi-0x4]; mov [rdi-0x13], r11; mov [rdi-0xb], rcx; mov [rdi-0x4], edx; ret; 
0x00000000161af8: mov edx, [rsi-0x4]; mov [rdi-0x14], r11; mov [rdi-0xc], rcx; mov [rdi-0x4], edx; ret; 
0x00000000161b20: mov edx, [rsi-0x4]; mov [rdi-0x4], edx; ret; 
0x00000000161574: mov edx, [rsi-0x4]; mov [rdi-0x9], rcx; mov [rdi-0x4], edx; ret; 
0x00000000161754: mov edx, [rsi-0x4]; mov [rdi-0xa], rcx; mov [rdi-0x4], edx; ret; 
0x00000000161934: mov edx, [rsi-0x4]; mov [rdi-0xb], rcx; mov [rdi-0x4], edx; ret; 
0x00000000161b14: mov edx, [rsi-0x4]; mov [rdi-0xc], rcx; mov [rdi-0x4], edx; ret; 
0x00000000161d20: mov edx, [rsi-0x5]; mov ecx, [rsi-0x4]; mov [rdi-0x5], edx; mov [rdi-0x4], ecx; ret; 
0x00000000161f20: mov edx, [rsi-0x6]; mov ecx, [rsi-0x4]; mov [rdi-0x6], edx; mov [rdi-0x4], ecx; ret; 
0x00000000162120: mov edx, [rsi-0x7]; mov ecx, [rsi-0x4]; mov [rdi-0x7], edx; mov [rdi-0x4], ecx; ret; 
0x00000000161395: mov edx, [rsi-0x8]; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x00000000161ce9: mov edx, [rsi-0x8]; mov [rdi-0x15], r11; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000161ee9: mov edx, [rsi-0x8]; mov [rdi-0x16], r11; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x000000001620e9: mov edx, [rsi-0x8]; mov [rdi-0x17], r11; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000161379: mov edx, [rsi-0x8]; mov [rdi-0x18], r10; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x000000001613b1: mov edx, [rsi-0x8]; mov [rdi-0x8], rdx; ret; 
0x00000000161d05: mov edx, [rsi-0x8]; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000161f05: mov edx, [rsi-0x8]; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000162105: mov edx, [rsi-0x8]; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000166e91: mov edx, [rsi-0x9]; mov ecx, [rsi-0x4]; mov [rdi-0x9], rdx; mov [rdi-0x4], ecx; ret; 
0x00000000166e11: mov edx, [rsi-0xa]; mov ecx, [rsi-0x4]; mov [rdi-0xa], rdx; mov [rdi-0x4], ecx; ret; 
0x00000000166d91: mov edx, [rsi-0xb]; mov ecx, [rsi-0x4]; mov [rdi-0xb], rdx; mov [rdi-0x4], ecx; ret; 
0x00000000166d11: mov edx, [rsi-0xc]; mov ecx, [rsi-0x4]; mov [rdi-0xc], rdx; mov [rdi-0x4], ecx; ret; 
0x00000000166c81: mov edx, [rsi-0xd]; mov rcx, [rsi-0x8]; mov [rdi-0xd], rdx; mov [rdi-0x8], rcx; ret; 
0x00000000166bf1: mov edx, [rsi-0xe]; mov rcx, [rsi-0x8]; mov [rdi-0xe], rdx; mov [rdi-0x8], rcx; ret; 
0x00000000166b61: mov edx, [rsi-0xf]; mov rcx, [rsi-0x8]; mov [rdi-0xf], rdx; mov [rdi-0x8], rcx; ret; 
0x000000000b47a1: mov edx, [rsi]; mov [rdi], dx; lea rax, [rdi+0x1]; ret; 
0x000000000b55e1: mov edx, [rsi]; mov [rdi], dx; lea rax, [rdi+0x2]; ret; 
0x000000000b3161: mov edx, [rsi]; mov [rdi], dx; ret; 
0x000000000b7241: mov edx, [rsi]; mov [rdi], dx; xor ch, ch; mov [rdi+0x2], ch; ret; 
0x000000000b47c0: mov edx, [rsi]; mov [rdi], edx; lea rax, [rdi+0x3]; ret; 
0x000000001846c0: mov edx, [rsi]; mov [rdi], edx; lea rax, [rdi+0x3]; vzeroupper; ret; 
0x000000000b5610: mov edx, [rsi]; mov [rdi], edx; lea rax, [rdi+0x4]; ret; 
0x000000000b3180: mov edx, [rsi]; mov [rdi], edx; ret; 
0x00000000182c20: mov edx, [rsi]; mov [rdi], edx; vzeroupper; ret; 
0x000000000b7270: mov edx, [rsi]; mov [rdi], edx; xor ch, ch; mov [rdi+0x4], ch; ret; 
0x000000000b4811: mov edx, [rsi]; mov [rdi], rdx; lea rax, [rdi+0x7]; ret; 
0x000000000b5661: mov edx, [rsi]; mov [rdi], rdx; lea rax, [rdi+0x8]; ret; 
0x000000000b31c1: mov edx, [rsi]; mov [rdi], rdx; ret; 
0x000000000b72c1: mov edx, [rsi]; mov [rdi], rdx; xor ch, ch; mov [rdi+0x8], ch; ret; 
0x000000000a4d79: mov edx, [rsp+0x10]; mov [rax], rdx; ret; 
0x000000000a4e31: mov edx, [rsp+0x10]; mov [rdi], rdx; lea rax, [rdi+rax-0x1]; ret; 
0x000000000de73e: mov edx, [rsp+0x10]; mov eax, 0xf7; syscall; 
0x0000000011c9cd: mov edx, [rsp+0x10]; mov rcx, [rsp+0x8]; mov rax, [rsp]; add rsp, 0x38; ret; 
0x0000000011ca2e: mov edx, [rsp+0x10]; mov rcx, [rsp+0x8]; mov rax, [rsp]; add rsp, 0x40; ret; 
0x00000000119372: mov edx, [rsp+0x10]; mov rsi, [rsp+0x8]; mov eax, 0x119; mov edi, [rsp+0x4]; syscall; 
0x0000000011ad64: mov edx, [rsp+0x10]; mov rsi, [rsp+0x8]; mov eax, 0x12b; mov edi, [rsp+0x4]; syscall; 
0x0000000011a5a7: mov edx, [rsp+0x10]; mov rsi, [rsp+0x8]; syscall; 
0x0000000011a6f9: mov edx, [rsp+0x10]; mov rsi, [rsp+0x8]; xor r8d, r8d; mov eax, 0x2c; syscall; 
0x0000000011a4d9: mov edx, [rsp+0x10]; mov rsi, [rsp+0x8]; xor r8d, r8d; mov eax, 0x2d; syscall; 
0x0000000012181c: mov edx, [rsp+0x10]; xor esi, esi; mov edi, 0x2000004; call rax; 
0x0000000010f4d8: mov edx, [rsp+0x14]; mov rsi, [rsp+0x8]; mov eax, 0x127; syscall; 
0x0000000010f598: mov edx, [rsp+0x14]; mov rsi, [rsp+0x8]; mov eax, 0x128; syscall; 
0x000000000a4ca1: mov edx, [rsp+0x18]; mov [rdi], rdx; add rax, rdi; ret; 
0x0000000011a860: mov edx, [rsp+0x18]; mov eax, 0x2c; mov rsi, [rsp+0x10]; mov edi, [rsp+0x8]; syscall; 
0x00000000141ac9: mov edx, [rsp+0x18]; mov rsi, [rsp+0x10]; call qword ptr [rax]; 
0x0000000010ff17: mov edx, [rsp+0x18]; mov rsi, [rsp+0x10]; mov eax, 0x17; mov edi, [rsp+0xc]; syscall; 
0x0000000011b077: mov edx, [rsp+0x18]; mov rsi, [rsp+0x10]; mov eax, 0x46; mov edi, [rsp+0x8]; syscall; 
0x00000000052292: mov edx, [rsp+0x18]; sub rdx, fs:[0x28]; jne short 0x00000000000522a9; add rsp, 0xd8; ret; 
0x0000000005ffc9: mov edx, [rsp+0x18]; sub rdx, fs:[0x28]; jne short 0x000000000005ffe0; add rsp, 0xd8; ret; 
0x00000000107cbe: mov edx, [rsp+0x18]; sub rdx, fs:[0x28]; jne short 0x0000000000107ce1; add rsp, 0x28; ret; 
0x0000000010fc11: mov edx, [rsp+0x18]; sub rdx, fs:[0x28]; jne short 0x000000000010fc25; add rsp, 0x28; ret; 
0x00000000127c26: mov edx, [rsp+0x18]; sub rdx, fs:[0x28]; jne short 0x0000000000127c45; add rsp, 0xd8; ret; 
0x00000000127d3c: mov edx, [rsp+0x18]; sub rdx, fs:[0x28]; jne short 0x0000000000127d53; add rsp, 0xd8; ret; 
0x00000000128c46: mov edx, [rsp+0x18]; sub rdx, fs:[0x28]; jne short 0x0000000000128c65; add rsp, 0xd8; ret; 
0x00000000128d5c: mov edx, [rsp+0x18]; sub rdx, fs:[0x28]; jne short 0x0000000000128d73; add rsp, 0xd8; ret; 
0x0000000015a991: mov edx, [rsp+0x18]; sub rdx, fs:[0x28]; jne short 0x000000000015a9a5; add rsp, 0x28; ret; 
0x000000000de739: mov edx, [rsp+0x1c]; mov rdx, [rsp+0x10]; mov eax, 0xf7; syscall; 
0x00000000110032: mov edx, [rsp+0x20]; mov eax, 0x10e; mov rsi, [rsp+0x18]; mov edi, [rsp+0x14]; syscall; 
0x0000000014732a: mov edx, [rsp+0x20]; mov rdi, r12; call rdx; 
0x0000000011977f: mov edx, [rsp+0x28]; mov eax, 0x113; mov rsi, [rsp+0x10]; mov edi, [rsp+0x8]; syscall; 
0x0000000010dd1f: mov edx, [rsp+0x28]; mov eax, 0x146; mov rsi, [rsp+0x10]; mov edi, [rsp+0x8]; syscall; 
0x000000000daeeb: mov edx, [rsp+0x28]; mov rax, [rsp+0x18]; call rax; 
0x00000000131012: mov edx, [rsp+0x28]; sub rdx, fs:[0x28]; jne short 0x0000000000131049; add rsp, 0x38; ret; 
0x00000000129f36: mov edx, [rsp+0x38]; call qword ptr [rsp+0x60]; 
0x000000000dac2e: mov edx, [rsp+0x68]; mov rdi, r15; mov rsi, [rsp+0x60]; call r12; 
0x0000000002c563: mov edx, [rsp+0x68]; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x60]; mov rax, [rsp+0x20]; call rax; 
0x0000000011920a: mov edx, [rsp+0x8]; mov eax, 0x38; syscall; 
0x00000000043a68: mov edx, [rsp+0x8]; mov rax, [rsp]; mov rsi, r13; mov rdi, r12; call rax; 
0x0000000008b96b: mov edx, [rsp+0x8]; mov rsi, r13; mov rdi, rbx; call qword ptr [rbp+0x70]; 
0x00000000060f1a: mov edx, [rsp+0x8]; sub rdx, fs:[0x28]; jne short 0x0000000000060f37; add rsp, 0x18; ret; 
0x000000000d652f: mov edx, [rsp+0x8]; sub rdx, fs:[0x28]; jne short 0x00000000000d6543; add rsp, 0x18; ret; 
0x000000000d8def: mov edx, [rsp+0x8]; sub rdx, fs:[0x28]; jne short 0x00000000000d8e03; add rsp, 0x18; ret; 
0x00000000108015: mov edx, [rsp+0x8]; sub rdx, fs:[0x28]; jne short 0x0000000000108029; add rsp, 0x18; ret; 
0x000000001567f5: mov edx, [rsp+0x8]; sub rdx, fs:[0x28]; jne short 0x0000000000156834; add rsp, 0x18; ret; 
0x0000000013fd8c: mov edx, [rsp+0xe0]; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; call qword ptr [rsp+0x68]; 
0x000000000a4db8: mov edx, [rsp-0x10]; mov [rax], edx; movzx edx, byte ptr [rsp-0xc]; mov [rax+0x4], dl; ret; 
0x000000000a4dd0: mov edx, [rsp-0x18]; mov [rax], edx; movzx edx, word ptr [rsp-0x14]; mov [rax+0x4], dx; ret; 
0x000000000feedc: mov edx, [rsp]; mov rax, [rbp-0x1e0]; call rax; 
0x000000000405d1: mov edx, eax; and edx, 0x7fffffff; or edx, esi; je 0x0000000000040528; ret; 
0x000000000b851c: mov edx, eax; and edx, 0xf; movsxd rax, [rsi+rdx*4]; add rax, rsi; notrack jmp rax; 
0x0000000009d459: mov edx, eax; bsf rax, rdi; cmove rax, rdx; add eax, 0x1; ret; 
0x00000000121990: mov edx, eax; call qword ptr [r12+0x28]; 
0x00000000123e22: mov edx, eax; call qword ptr [r13+0x28]; 
0x00000000143fd2: mov edx, eax; call qword ptr [rbx+0x10]; 
0x000000001222e7: mov edx, eax; call qword ptr [rbx+0x28]; 
0x000000000418a0: mov edx, eax; mov eax, 0xea; syscall; 
0x00000000090aa0: mov edx, eax; mov esi, 0x80; mov eax, r9d; syscall; 
0x00000000119204: mov edx, eax; mov r8, r9; mov r10, [rsp+0x8]; mov eax, 0x38; syscall; 
0x00000000113671: mov edx, eax; mov r8, r9; mov r9, [rsp+0x8]; syscall; 
0x0000000008fb56: mov edx, eax; mov rax, [rax]; test rax, rax; jne short 0x000000000008fb50; ret; 
0x0000000008bced: mov edx, eax; mov rsi, r12; mov rdi, rbp; call qword ptr [rax+0x78]; 
0x0000000005b577: mov edx, eax; mov rsi, r14; mov rdi, r12; mov [rbp-0xe8], r8; call rax; 
0x000000001247d4: mov edx, eax; mov rsi, r8; call qword ptr [r10+0x28]; 
0x0000000010e46b: mov edx, eax; mov rsi, r9; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x000000000a4e24: mov edx, eax; movsxd rdx, [r8+rdx*4]; add rdx, r8; notrack jmp rdx; 
0x000000000a4c94: mov edx, eax; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x00000000053289: mov edx, eax; movsxd rdx, [rdi+rdx*4]; add rdx, rdi; cmp esi, 0x2f; notrack jmp rdx; 
0x0000000011998c: mov edx, eax; or eax, esi; wrpkru; xor eax, eax; ret; 
0x00000000098a25: mov edx, eax; pop r12; pop r13; jmp rax; 
0x000000000a4949: mov edx, eax; xor eax, eax; mov [rdi], rdx; ret; 
0x0000000012b9f9: mov edx, ebp; call qword ptr [rsp+0x60]; 
0x000000000c68c1: mov edx, ebp; call rbx; 
0x00000000109091: mov edx, ebp; mov eax, 0x10d; syscall; 
0x000000001149ca: mov edx, ebp; mov esi, 0x1; call r12; 
0x000000000b9d38: mov edx, ebp; mov r9, [rsp+0x10]; mov rdi, rbp; mov rsi, [rsp+0x18]; call rbx; 
0x0000000009a372: mov edx, ebp; mov rdi, r12; call rax; 
0x000000000433d0: mov edx, ebp; mov rdi, r12; call rbx; 
0x00000000073a24: mov edx, ebp; mov rdi, r14; call qword ptr [r12+0x38]; 
0x00000000073467: mov edx, ebp; mov rdi, r14; call qword ptr [rbx+0x38]; 
0x000000000d8ffc: mov edx, ebp; mov rdx, r12; mov esi, ebp; mov eax, 0xe6; syscall; 
0x0000000009aecf: mov edx, ebp; mov rsi, r12; call rax; 
0x00000000042cdd: mov edx, ebp; mov rsi, r12; call rbx; 
0x00000000042d01: mov edx, ebp; mov rsi, r12; mov rdi, r13; call rbx; 
0x0000000008b07f: mov edx, ebp; mov rsi, r12; mov rdi, rbp; call qword ptr [r15+0x80]; 
0x00000000144aa6: mov edx, ebp; mov rsi, r12; mov rdi, rbp; call rax; 
0x0000000008cee5: mov edx, ebp; mov rsi, r12; mov rdi, rbx; call qword ptr [r14+0x78]; 
0x0000000012ddfc: mov edx, ebp; mov rsi, r13; mov edi, r12d; call qword ptr [rsp+0x40]; 
0x0000000012d82c: mov edx, ebp; mov rsi, r13; mov rdi, r12; call qword ptr [rsp+0x40]; 
0x00000000042d1c: mov edx, ebp; mov rsi, r14; mov rdi, r12; call rbx; 
0x00000000076450: mov edx, ebp; mov rsi, r14; mov rdi, rbp; call qword ptr [r12+0x38]; 
0x0000000008b6b7: mov edx, ebp; mov rsi, r14; mov rdi, rbp; call qword ptr [rax+0x40]; 
0x00000000075240: mov edx, ebp; mov rsi, r14; mov rdi, rbp; call qword ptr [rbx+0x38]; 
0x00000000074c85: mov edx, ebp; mov rsi, r14; mov rdi, rbp; call qword ptr [rcx+0x38]; 
0x000000000dbf41: mov edx, ebp; mov rsi, rbp; mov edi, r14d; call qword ptr [rsp+0x48]; 
0x000000000dc3e1: mov edx, ebp; mov rsi, rbp; mov rdi, r14; call qword ptr [rsp+0x48]; 
0x00000000082394: mov edx, ebp; mov rsi, rbp; mov rdi, rbx; call qword ptr [r14+0x38]; 
0x0000000014c741: mov edx, ebp; mov rsi, rbx; call rax; 
0x00000000126039: mov edx, ebp; movups [rbp-0x78], xmm5; call rax; 
0x00000000074bbf: mov edx, ebp; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000b9be6: mov edx, ebp; xor r8d, r8d; mov rdi, rbp; lea r9, [rsp+0x30]; call rbx; 
0x000000001445cc: mov edx, ebx; call qword ptr [r13+0x10]; 
0x000000000772d2: mov edx, ebx; call qword ptr [r13+0x38]; 
0x00000000073086: mov edx, ebx; mov rdi, r14; call qword ptr [r12+0x38]; 
0x0000000007857f: mov edx, ebx; mov rdi, r15; call qword ptr [r12+0x38]; 
0x0000000007483c: mov edx, ebx; mov rdi, rbp; call qword ptr [r12+0x38]; 
0x0000000011381a: mov edx, ebx; mov rdi, rbp; mov eax, 0x9; syscall; 
0x00000000078f8c: mov edx, ebx; mov rsi, r10; mov rdi, r15; call qword ptr [r12+0x38]; 
0x00000000079312: mov edx, ebx; mov rsi, r10; mov rdi, r15; call qword ptr [r13+0x38]; 
0x00000000080e5f: mov edx, ebx; mov rsi, r12; call qword ptr [r14+0x38]; 
0x0000000008a8a4: mov edx, ebx; mov rsi, r12; mov rdi, rbp; call qword ptr [r13+0x38]; 
0x00000000082477: mov edx, ebx; mov rsi, r13; mov rdi, rbp; call qword ptr [r14+0x38]; 
0x00000000119925: mov edx, ecx; cmp ecx, 0xffffffff; je short 0x0000000000119958; mov eax, 0x149; syscall; 
0x00000000108540: mov edx, ecx; cmp r9d, 0x1; ja short 0x0000000000108578; mov eax, 0x106; syscall; 
0x0000000010a0a5: mov edx, ecx; mov eax, 0x104; syscall; 
0x00000000060ff5: mov edx, ecx; mov eax, 0x108; syscall; 
0x0000000010a895: mov edx, ecx; mov eax, 0x109; syscall; 
0x0000000010a955: mov edx, ecx; mov eax, 0x10b; syscall; 
0x0000000010dd95: mov edx, ecx; mov eax, 0x118; syscall; 
0x0000000010e5b5: mov edx, ecx; mov eax, 0x11; syscall; 
0x00000000119a35: mov edx, ecx; mov eax, 0x11e; syscall; 
0x00000000119c25: mov edx, ecx; mov eax, 0x12d; syscall; 
0x000000001194b5: mov edx, ecx; mov eax, 0x12e; syscall; 
0x0000000011a105: mov edx, ecx; mov eax, 0x12f; syscall; 
0x00000000119b05: mov edx, ecx; mov eax, 0x136; syscall; 
0x00000000119b45: mov edx, ecx; mov eax, 0x137; syscall; 
0x00000000108415: mov edx, ecx; mov eax, 0x14c; syscall; 
0x00000000119f25: mov edx, ecx; mov eax, 0x19; syscall; 
0x0000000010dc95: mov edx, ecx; mov eax, 0x28; syscall; 
0x0000000011a965: mov edx, ecx; mov eax, 0x35; syscall; 
0x0000000011a8d5: mov edx, ecx; mov eax, 0x36; syscall; 
0x0000000011a425: mov edx, ecx; mov eax, 0x37; syscall; 
0x00000000119ef5: mov edx, ecx; mov eax, 0xa5; syscall; 
0x00000000119dd5: mov edx, ecx; mov eax, 0xaf; syscall; 
0x00000000119fb5: mov edx, ecx; mov eax, 0xb2; syscall; 
0x00000000119fe5: mov edx, ecx; mov eax, 0xb3; syscall; 
0x00000000117035: mov edx, ecx; mov eax, 0xbc; syscall; 
0x00000000116fd5: mov edx, ecx; mov eax, 0xbd; syscall; 
0x00000000116eb5: mov edx, ecx; mov eax, 0xbe; syscall; 
0x00000000116ee5: mov edx, ecx; mov eax, 0xbf; syscall; 
0x00000000116f45: mov edx, ecx; mov eax, 0xc0; syscall; 
0x00000000116e25: mov edx, ecx; mov eax, 0xc1; syscall; 
0x00000000113a15: mov edx, ecx; mov eax, 0xd8; syscall; 
0x0000000011b235: mov edx, ecx; mov eax, 0xdc; syscall; 
0x0000000010d7d5: mov edx, ecx; mov eax, 0xdd; syscall; 
0x00000000119d75: mov edx, ecx; mov eax, 0xe9; syscall; 
0x0000000011366e: mov edx, ecx; mov r10, r8; mov r8, r9; mov r9, [rsp+0x8]; syscall; 
0x0000000007aca7: mov edx, ecx; mov rsi, r12; mov rdi, rbp; call qword ptr [r14+0x38]; 
0x000000000751ae: mov edx, ecx; mov rsi, r9; mov rdi, rbp; call qword ptr [r12+0x38]; 
0x00000000075d0a: mov edx, ecx; mov rsi, r9; mov rdi, rbp; call qword ptr [r13+0x38]; 
0x000000000d6726: mov edx, ecx; movsxd rax, [rsi+rdx*4]; add rax, rsi; notrack jmp rax; 
0x00000000061035: mov edx, ecx; test r8d, r8d; je short 0x0000000000061080; mov eax, 0x13c; syscall; 
0x0000000010ddd5: mov edx, ecx; test rsi, rsi; je short 0x000000000010de02; mov eax, 0x118; syscall; 
0x0000000010f631: mov edx, ecx; xor r8d, r8d; mov eax, 0x147; syscall; 
0x0000000010f791: mov edx, ecx; xor r8d, r8d; mov eax, 0x148; syscall; 
0x0000000010f6da: mov edx, edi; mov edi, ebp; mov eax, 0x147; syscall; 
0x0000000010f83a: mov edx, edi; mov edi, ebp; mov eax, 0x148; syscall; 
0x00000000110284: mov edx, edi; mov esi, 0x28121969; mov edi, 0xfee1dead; mov eax, 0xa9; syscall; 
0x0000000007bff0: mov edx, edi; mov rsi, r12; mov rdi, rbp; call qword ptr [r14+0x38]; 
0x000000000720c1: mov edx, edi; mov rsi, r12; mov rdi, rbp; call qword ptr [rax+0x38]; 
0x0000000009b0ab: mov edx, edi; mov rsi, r14; mov rdi, r13; call rax; 
0x0000000012f3de: mov edx, edi; mov rsi, r14; mov rdi, rbx; call rax; 
0x000000000b8255: mov edx, edi; rep stosb [rdi]; mov rax, rdx; ret; 
0x000000000d0260: mov edx, edi; ror edx, 0x2; cmp edx, 0x28f5c28; jbe short 0x00000000000d0270; ret; 
0x00000000069ee6: mov edx, edi; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000010da08: mov edx, edx; mov eax, 0x11d; mov rdx, rsi; xor esi, esi; syscall; 
0x000000001193e5: mov edx, edx; mov eax, 0x121; mov edx, 0x8; syscall; 
0x000000000a4d67: mov edx, edx; movsxd rdx, [rdi+rdx*4]; add rdx, rdi; notrack jmp rdx; 
0x0000000003f000: mov edx, edx; movsxd rdx, [rsi+rdx*4]; add rdx, rsi; notrack jmp rdx; 
0x00000000042ddf: mov edx, esi; call rbp; 
0x0000000015c735: mov edx, esi; mov eax, 0xcb; mov esi, 0x80; syscall; 
0x0000000015c6c5: mov edx, esi; mov eax, 0xcc; mov esi, 0x80; syscall; 
0x000000000d8e47: mov edx, esi; mov eax, 0xe5; xor esi, esi; lea edi, [rdi*8+0x2]; syscall; 
0x000000000913a5: mov edx, esi; mov edi, [rdi+0x2d0]; mov esi, 0x80; mov eax, 0xcc; syscall; 
0x000000001592b9: mov edx, esi; mov esi, 0x40; mov rdi, rbx; call rax; 
0x000000000b9fb8: mov edx, esi; mov r9, [rsp+0x10]; mov rdi, rbp; mov rsi, [rsp+0x18]; call rbx; 
0x00000000043949: mov edx, esi; mov rax, [rsp]; call rax; 
0x00000000132bd6: mov edx, esi; mov rdi, r13; mov rsi, [rsp+0x8]; call rbp; 
0x000000000b9ee8: mov edx, esi; mov rdi, rbp; xor r8d, r8d; lea r9, [rsp+0x28]; call rbx; 
0x0000000012c41e: mov edx, esi; mov rsi, r12; call qword ptr [rsp+0x40]; 
0x000000000ddf6f: mov edx, esi; mov rsi, r12; mov edi, r13d; call qword ptr [rsp+0x30]; 
0x000000000ddb8f: mov edx, esi; mov rsi, r12; mov rdi, r13; call qword ptr [rsp+0x30]; 
0x00000000071f31: mov edx, esi; mov rsi, r12; mov rdi, rbp; call qword ptr [rax+0x38]; 
0x000000000438c5: mov edx, esi; mov rsi, r13; mov rdi, r12; call rax; 
0x0000000007a7bb: mov edx, esi; mov rsi, r15; mov rdi, rbp; call qword ptr [rbx+0x38]; 
0x00000000149c77: mov edx, esi; movsxd rax, [rcx+rdx*4]; add rax, rcx; notrack jmp rax; 
0x00000000061e96: mov edx, esi; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000010da10: mov edx, esi; xor esi, esi; syscall; 
0x000000000ba1c7: mov edx, esi; xor r8d, r8d; mov rdi, rbp; lea r9, [rsp+0x30]; call rbx; 
0x000000000719f3: mov edx, esp; call qword ptr [r13+0x38]; 
0x000000000debea: mov edx, esp; lea rsi, [rip+0xcf5ef]; mov eax, 0x142; syscall; 
0x0000000010e991: mov edx, esp; mov eax, 0x10; syscall; 
0x0000000010d706: mov edx, esp; mov eax, 0x10f; syscall; 
0x0000000013de99: mov edx, esp; mov eax, 0x81; syscall; 
0x0000000010f6d7: mov edx, esp; mov edx, r15d; mov edi, ebp; mov eax, 0x147; syscall; 
0x0000000010f837: mov edx, esp; mov edx, r15d; mov edi, ebp; mov eax, 0x148; syscall; 
0x0000000010e3e9: mov edx, esp; mov esi, 0x10; mov eax, 0x48; syscall; 
0x000000000d8fff: mov edx, esp; mov esi, ebp; mov eax, 0xe6; syscall; 
0x000000000d9092: mov edx, esp; mov esi, ebp; mov edi, 0x1; mov eax, 0xe6; syscall; 
0x000000000d90d1: mov edx, esp; mov r8d, eax; mov esi, ebp; mov eax, 0xe6; syscall; 
0x00000000143989: mov edx, esp; mov rdi, r14; call qword ptr [rax+0x10]; 
0x000000001439c3: mov edx, esp; mov rdi, r14; call qword ptr [rax+0x20]; 
0x0000000008a740: mov edx, esp; mov rsi, r13; call qword ptr [r14+0x38]; 
0x00000000073d06: mov edx, esp; mov rsi, r13; mov rdi, r14; call qword ptr [rbx+0x38]; 
0x00000000072ccf: mov edx, esp; mov rsi, r13; mov rdi, r14; call qword ptr [rcx+0x38]; 
0x0000000007fd25: mov edx, esp; mov rsi, r14; mov rdi, rbx; call qword ptr [r15+0x38]; 
0x000000001089fa: mov edx, esp; mov rsi, rbp; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x00000000085d47: mov edx, esp; mov rsi, rbp; mov rdi, r15; call qword ptr [r14+0x80]; 
0x0000000007f6ef: mov edx, esp; mov rsi, rbp; mov rdi, rbx; call qword ptr [r13+0x38]; 
0x00000000081557: mov edx, esp; mov rsi, rbp; mov rdi, rbx; call qword ptr [r13+0x58]; 
0x0000000008113d: mov edx, esp; mov rsi, rbp; mov rdi, rbx; call qword ptr [r14+0x48]; 
0x00000000081581: mov edx, esp; mov rsi, rbp; mov rdi, rbx; call qword ptr [rax+0x58]; 
0x00000000144be1: mov edx, esp; mov rsi, rbp; mov rdi, rbx; call rax; 
0x0000000012639b: mov edx, esp; movups [rbp-0x78], xmm3; call rax; 
0x0000000012609b: mov edx, esp; movups [rbp-0x78], xmm4; call rax; 
0x000000001265cb: mov edx, esp; movups [rbp-0x78], xmm6; call rax; 
0x000000001266a2: mov edx, esp; movups [rbp-0x78], xmm7; call rax; 
0x0000000009c029: mov edx, esp; pop r12; pop r13; ret; 
0x00000000080fff: mov edx, esp; pop rbx; pop r12; pop r13; jmp rax; 
0x000000000611be: mov edx, fs:[0x18]; test edx, edx; jne short 0x00000000000611d0; sub dword ptr [rdi], 0x1; ret; 
0x000000000808a0: mov edx, fs:[0x18]; test edx, edx; jne short 0x00000000000808b8; sub dword ptr [rip+0x165d7d], 0x1; ret; 
0x0000000008d584: mov edx, fs:[0x18]; test edx, edx; jne short 0x000000000008d5a0; sub dword ptr [rip+0x1590d9], 0x1; ret; 
0x0000000008ff00: mov edx, fs:[0x18]; test edx, edx; jne short 0x000000000008ff18; sub dword ptr [rip+0x15675d], 0x1; ret; 
0x000000001089f8: mov edx, r12d; mov rsi, rbp; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x00000000085d46: mov edx, r12d; mov rsi, rbp; mov rdi, r15; call qword ptr [r14+0x80]; 
0x0000000008113c: mov edx, r12d; mov rsi, rbp; mov rdi, rbx; call qword ptr [r14+0x48]; 
0x00000000080ffe: mov edx, r12d; pop rbx; pop r12; pop r13; jmp rax; 
0x00000000109090: mov edx, r13d; mov eax, 0x10d; syscall; 
0x000000001149c9: mov edx, r13d; mov esi, 0x1; call r12; 
0x0000000008b07e: mov edx, r13d; mov rsi, r12; mov rdi, rbp; call qword ptr [r15+0x80]; 
0x0000000010f6d9: mov edx, r15d; mov edi, ebp; mov eax, 0x147; syscall; 
0x0000000010f839: mov edx, r15d; mov edi, ebp; mov eax, 0x148; syscall; 
0x000000000405d0: mov edx, r8d; and edx, 0x7fffffff; or edx, esi; je 0x0000000000040528; ret; 
0x0000000004189f: mov edx, r8d; mov eax, 0xea; syscall; 
0x00000000090a9f: mov edx, r8d; mov esi, 0x80; mov eax, r9d; syscall; 
0x0000000010e469: mov edx, r8d; mov rsi, r9; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x0000000010e46a: mov edx, r8d; mov rsi, r9; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x0000000011998b: mov edx, r8d; or eax, esi; wrpkru; xor eax, eax; ret; 
0x000000000fd175: mov es, [rax]; add [rax], al; syscall; 
0x0000000011d3c8: mov es, [rbx]; add al, 0x11; ret; 
0x000000000b542e: mov es, [rsi]; add [rax], al; ret; 
0x0000000009ab76: mov es, bx; adc al, 0x0; syscall; 
0x0000000010e35d: mov esi, 0x10; mov eax, 0x48; syscall; 
0x000000001149cc: mov esi, 0x1; call r12; 
0x000000000deaff: mov esi, 0x1; incsspq rsi; jmp rdi; 
0x000000001594ff: mov esi, 0x1; mov [rbp+0x18], rax; lea rdi, [r13+0x988]; call qword ptr [r13+0xf90]; 
0x0000000007dbab: mov esi, 0x1; mov rdi, rbx; call r8; 
0x0000000007d4ec: mov esi, 0x1; mov rdi, rbx; call rax; 
0x0000000014d039: mov esi, 0x20009; add [rax], al; pop rbx; ret; 
0x00000000143035: mov esi, 0x20; mov rdi, rbp; call qword ptr [rax+0x30]; 
0x00000000110286: mov esi, 0x28121969; mov edi, 0xfee1dead; mov eax, 0xa9; syscall; 
0x0000000014ba65: mov esi, 0x2; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x000000001420de: mov esi, 0x31000000; leave; lea rdx, [rip+0xd805]; lea r9, [rsp+0x20]; call qword ptr [rax]; 
0x000000001149ad: mov esi, 0x3; je short 0x00000000001149e5; mov rdi, rbp; xor esi, esi; call r12; 
0x00000000114a3d: mov esi, 0x3; je short 0x0000000000114a75; mov rdi, rbp; xor esi, esi; call r12; 
0x000000001157c4: mov esi, 0x3; je short 0x00000000001157fa; mov rdi, rbp; xor esi, esi; call r12; 
0x00000000115875: mov esi, 0x3; je short 0x00000000001158ad; mov rdi, rbp; xor esi, esi; call r12; 
0x0000000014bba5: mov esi, 0x3; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x000000000b845c: mov esi, 0x3ef00148; jmp rax; 
0x000000001592ba: mov esi, 0x40; mov rdi, rbx; call rax; 
0x000000001592bb: mov esi, 0x40; mov rdi, rbx; call rax; 
0x000000000cb58e: mov esi, 0x48000000; lea eax, [rdi-0x10]; ret; 
0x000000000a50be: mov esi, 0x48fff814; add esp, 0x8; ret; 
0x00000000164ece: mov esi, 0x4900052e; movsxd edx, [rbx+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000014c03b: mov esi, 0x4; mov rdi, rbp; lea r8, [rip-0x929a]; lea rdx, [rip+0x389f]; call qword ptr [rax]; 
0x00000000142026: mov esi, 0x4; mov rdi, rbp; lea r9, [rsp+0x20]; call qword ptr [rax]; 
0x0000000014b5ff: mov esi, 0x4; movdqa xmm0, [rip+0x6b684]; movaps [rsp+0x20], xmm0; call qword ptr [rax+0x28]; 
0x0000000010e84f: mov esi, 0x5401; mov eax, r8d; mov ebx, fs:[r10]; syscall; 
0x0000000010ead5: mov esi, 0x5409; mov eax, 0x10; syscall; 
0x0000000010eb06: mov esi, 0x5409; mov r8d, eax; mov eax, 0x10; syscall; 
0x000000000db3c3: mov esi, 0x64010010; mov [r9], ebx; mov rax, r8; pop rbx; ret; 
0x0000000009b49e: mov esi, 0x66fffe32; nop [rax+rax]; pop rbp; ret; 
0x0000000014b655: mov esi, 0x6; call qword ptr [rax+0x28]; 
0x0000000014bd02: mov esi, 0x6; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x0000000014b61c: mov esi, 0x6; mov rax, [rdi+0x8]; call qword ptr [rax+0x28]; 
0x00000000151081: mov esi, 0x748d4806; and al, 0x4; mov [rsp+0x4], eax; mov rax, [rdi+0x8]; call qword ptr [rax+0x48]; 
0x0000000005cb6f: mov esi, 0x77cf390e; jrcxz 0x000000000005cbba; mov eax, eax; ret; 
0x0000000014bea2: mov esi, 0x7; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x00000000091369: mov esi, 0x7fffffff; cmovbe rsi, r8; syscall; 
0x000000000fd2fe: mov esi, 0x7fffffff; mov eax, 0xcc; cmovbe rsi, r8; syscall; 
0x00000000090b4f: mov esi, 0x80; mov eax, 0xca; syscall; 
0x000000000913ad: mov esi, 0x80; mov eax, 0xcc; syscall; 
0x00000000091294: mov esi, 0x80; mov eax, r8d; syscall; 
0x00000000090aa2: mov esi, 0x80; mov eax, r9d; syscall; 
0x0000000015c6cc: mov esi, 0x80; syscall; 
0x000000000dda2d: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x109a62]; syscall; 
0x000000000dd8ed: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x109ba2]; syscall; 
0x000000000dd835: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x109c5a]; syscall; 
0x000000000dd759: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x109d2e]; syscall; 
0x000000000dd589: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x109ebe]; syscall; 
0x000000000dd3c5: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10a03a]; syscall; 
0x000000000dd00b: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10a39c]; syscall; 
0x000000000dbd5d: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10b5c2]; syscall; 
0x000000000dbc1d: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10b702]; syscall; 
0x000000000dbb65: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10b7ba]; syscall; 
0x000000000db799: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10bb7e]; syscall; 
0x000000000db5c9: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10bd0e]; syscall; 
0x000000000db405: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10be8a]; syscall; 
0x000000000dab0d: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10c72a]; syscall; 
0x000000000ceb39: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1185f6]; syscall; 
0x000000000ce945: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1187ea]; syscall; 
0x000000000c6679: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x11efd6]; syscall; 
0x00000000099899: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x14a2f6]; syscall; 
0x0000000009b229: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x14bcce]; syscall; 
0x0000000009afa5: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x14bf52]; syscall; 
0x0000000009adc5: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x14c132]; syscall; 
0x0000000009abd9: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x14c31e]; syscall; 
0x0000000009ab69: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x14c38e]; syscall; 
0x00000000096ee9: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x14cca6]; syscall; 
0x00000000096e89: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x14cd06]; syscall; 
0x00000000096ab9: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x14d0d6]; syscall; 
0x00000000096859: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x14d336]; syscall; 
0x00000000096211: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x14d97e]; syscall; 
0x000000000961d9: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x14d9b6]; syscall; 
0x00000000097eb8: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x14efb7]; syscall; 
0x0000000009741d: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x14fa42]; syscall; 
0x000000000930f4: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x153d7b]; syscall; 
0x00000000093078: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x153de7]; syscall; 
0x00000000092dd1: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x15409e]; syscall; 
0x00000000092b25: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x15434a]; syscall; 
0x0000000009205a: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x154795]; syscall; 
0x00000000091eb5: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x15493a]; syscall; 
0x00000000091d29: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x154ac6]; syscall; 
0x0000000008ff2c: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x156733]; syscall; 
0x0000000008f9eb: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x156c74]; syscall; 
0x0000000008f65b: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x157004]; syscall; 
0x0000000008f2fb: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x157364]; syscall; 
0x0000000008dbd7: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x158a88]; syscall; 
0x0000000008d8e7: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x158d78]; syscall; 
0x0000000008d5e3: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x15907c]; syscall; 
0x00000000080cc8: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x165957]; syscall; 
0x000000000808cc: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x165d53]; syscall; 
0x00000000080820: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x165dff]; syscall; 
0x0000000007e979: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x166cd6]; syscall; 
0x0000000005f19d: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x18745a]; syscall; 
0x0000000005ef19: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1876da]; syscall; 
0x0000000005cd95: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x18984a]; syscall; 
0x0000000005cc55: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x18998a]; syscall; 
0x00000000052e7d: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x193742]; syscall; 
0x00000000052cb9: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x193906]; syscall; 
0x000000000527a9: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x193e16]; syscall; 
0x0000000005039d: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x195ff2]; syscall; 
0x00000000050219: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x196176]; syscall; 
0x000000000501b9: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1961d6]; syscall; 
0x00000000045a55: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1a0902]; syscall; 
0x00000000045995: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1a09c2]; syscall; 
0x000000000458cd: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1a0a8a]; syscall; 
0x000000000457f5: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1a0b62]; syscall; 
0x000000000448ed: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1a11ea]; syscall; 
0x00000000044828: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1a12af]; syscall; 
0x00000000044685: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1a1452]; syscall; 
0x000000000445ac: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1a152b]; syscall; 
0x0000000003d016: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1a89e1]; syscall; 
0x0000000003b68b: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1aa334]; syscall; 
0x0000000003a4da: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1ab435]; syscall; 
0x0000000003a4ba: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1ab455]; syscall; 
0x0000000003a350: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1ab5bf]; syscall; 
0x0000000002ac5d: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1ba9f2]; syscall; 
0x0000000002aaf1: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1bab5e]; syscall; 
0x0000000002a9f9: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1bac56]; syscall; 
0x00000000026847: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1bf258]; syscall; 
0x00000000191975: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x54162]; syscall; 
0x00000000191b35: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x54cba]; syscall; 
0x00000000191e55: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x567f2]; syscall; 
0x00000000158055: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9107e]; syscall; 
0x00000000156d5d: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x92376]; syscall; 
0x00000000156c7d: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x92456]; syscall; 
0x00000000156a95: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9263e]; syscall; 
0x00000000156a05: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x926ce]; syscall; 
0x00000000156965: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9276e]; syscall; 
0x000000001568b5: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9281e]; syscall; 
0x000000001564e5: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x92bee]; syscall; 
0x0000000014c2e5: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9cbd2]; syscall; 
0x0000000014c185: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9cd32]; syscall; 
0x0000000014bf79: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9cf3e]; syscall; 
0x0000000014bdd9: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9d0de]; syscall; 
0x0000000014bc45: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9d272]; syscall; 
0x0000000014bb05: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9d3b2]; syscall; 
0x0000000014b9a5: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9d512]; syscall; 
0x0000000014b895: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9d622]; syscall; 
0x00000000148405: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa0a96]; syscall; 
0x0000000013f4d1: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa977e]; syscall; 
0x0000000013f1a1: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa9aae]; syscall; 
0x0000000013ee21: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa9e2e]; syscall; 
0x0000000013ec23: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xaa02c]; syscall; 
0x0000000013ea99: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xaa1b6]; syscall; 
0x0000000013e85c: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xaa3f3]; syscall; 
0x0000000013de15: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xaad72]; syscall; 
0x0000000013dc94: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xaaef3]; syscall; 
0x0000000013dc5a: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xaaf2d]; syscall; 
0x0000000013db4d: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xab03a]; syscall; 
0x0000000013d30d: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xab87a]; syscall; 
0x0000000013d245: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xab942]; syscall; 
0x0000000013d129: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xaba5e]; syscall; 
0x0000000013bd96: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xacba1]; syscall; 
0x00000000138515: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb0132]; syscall; 
0x00000000138239: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb040e]; syscall; 
0x00000000133f59: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb46da]; syscall; 
0x000000001339d9: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb4c3e]; syscall; 
0x00000000133815: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb4dba]; syscall; 
0x0000000013374d: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb4e22]; syscall; 
0x0000000013360d: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb4f62]; syscall; 
0x00000000133555: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb501a]; syscall; 
0x00000000132e65: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb5702]; syscall; 
0x00000000132b35: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb5a32]; syscall; 
0x00000000132979: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb5bee]; syscall; 
0x0000000013245f: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb6064]; syscall; 
0x0000000012eb6d: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb983a]; syscall; 
0x0000000012ea2d: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb997a]; syscall; 
0x0000000012e975: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb9a32]; syscall; 
0x0000000012e889: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb9b16]; syscall; 
0x0000000012e6b9: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb9cb6]; syscall; 
0x0000000012e4f5: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb9e52]; syscall; 
0x0000000012e42d: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb9eca]; syscall; 
0x0000000012e2ed: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xba00a]; syscall; 
0x0000000012e235: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xba0c2]; syscall; 
0x0000000012e155: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xba19a]; syscall; 
0x0000000012dc89: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xba5ee]; syscall; 
0x0000000012d6b9: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbab5e]; syscall; 
0x0000000012d199: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbb036]; syscall; 
0x0000000012cfcd: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbb1c2]; syscall; 
0x0000000012ce8d: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbb302]; syscall; 
0x0000000012cdd5: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbb3ba]; syscall; 
0x0000000012ccf5: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbb492]; syscall; 
0x0000000012c8d9: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbb866]; syscall; 
0x0000000012c2bd: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbbe22]; syscall; 
0x0000000012c165: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbbf7a]; syscall; 
0x0000000012c0a5: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbc03a]; syscall; 
0x0000000012bfbd: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbc11a]; syscall; 
0x0000000012bed9: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbc1c6]; syscall; 
0x0000000012b879: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbc7e6]; syscall; 
0x0000000012b66d: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbc9aa]; syscall; 
0x0000000012b515: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbcb02]; syscall; 
0x0000000012b455: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbcbc2]; syscall; 
0x0000000012b36d: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbcca2]; syscall; 
0x0000000012a759: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbd83e]; syscall; 
0x0000000012a4e9: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbda6e]; syscall; 
0x00000000129d69: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbe18e]; syscall; 
0x0000000012030d: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc7b32]; syscall; 
0x000000001201cd: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc7c72]; syscall; 
0x00000000120115: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc7d2a]; syscall; 
0x0000000011fd3b: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc80fc]; syscall; 
0x0000000011fb11: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc82ee]; syscall; 
0x0000000011f949: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc846e]; syscall; 
0x0000000011f785: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc85ea]; syscall; 
0x0000000011f6b5: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc8666]; syscall; 
0x0000000011f5e5: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc8736]; syscall; 
0x0000000011f549: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc87d2]; syscall; 
0x0000000011eaad: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc923a]; syscall; 
0x0000000011e96d: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc937a]; syscall; 
0x0000000011e8b5: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc9432]; syscall; 
0x0000000011e2bb: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc9a24]; syscall; 
0x0000000011e0b9: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc9bce]; syscall; 
0x0000000011ded9: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc9d46]; syscall; 
0x0000000011dd15: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc9ea2]; syscall; 
0x00000000113615: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xd422a]; syscall; 
0x000000001134f9: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xd4346]; syscall; 
0x00000000113099: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xd47a6]; syscall; 
0x00000000112b68: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xd4cd7]; syscall; 
0x00000000101559: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xe6056]; syscall; 
0x000000000272be: mov esi, 0x81; mov eax, 0xca; syscall; 
0x000000000973f2: mov esi, 0x81; mov eax, ebx; syscall; 
0x00000000044cbe: mov esi, 0x81; mov rdi, r12; mov eax, 0xca; syscall; 
0x000000000452b7: mov esi, 0x81; mov rdi, r13; mov eax, 0xca; syscall; 
0x00000000044ad7: mov esi, 0x81; mov rdi, r14; mov eax, 0xca; syscall; 
0x000000000918fe: mov esi, 0x81; mov rdi, rbp; mov eax, 0xca; syscall; 
0x000000000982ab: mov esi, 0x81; mov rdi, rbx; mov eax, 0xca; syscall; 
0x00000000099220: mov esi, 0x81; mov rdi, rcx; mov eax, 0xca; syscall; 
0x00000000046d7a: mov esi, 0x83480143; ret; 
0x000000000dc83a: mov esi, 0x83480153; ret; 
0x000000000483c0: mov esi, 0x8348016b; ret; 
0x00000000103523: mov esi, 0x89010544; ret; 
0x0000000005104f: mov esi, 0x89410257; ret; 
0x000000000f287b: mov esi, 0x8948ffff; ret; 
0x0000000014c107: mov esi, 0x8; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x00000000041bf4: mov esi, 0x8; mov eax, 0x7f; syscall; 
0x00000000041c40: mov esi, 0x8; mov eax, 0x82; syscall; 
0x00000000041c6b: mov esi, 0x8; mov r8d, eax; mov eax, 0x82; syscall; 
0x000000001430ee: mov esi, 0x8; mov rdi, rbp; call qword ptr [rax+0x30]; 
0x00000000148645: mov esi, 0x8; mov rdi, rbp; mov [r12+0x70], edx; call qword ptr [rax+0x30]; 
0x0000000003a962: mov esi, 0x8d48001a; cmp eax, 0x1aad54; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003a936: mov esi, 0x8d48001a; cmp eax, 0x1aaf7f; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003a937: mov esi, 0x8d48001a; cmp eax, 0x1aaf7f; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000008e4a2: mov esi, 0x93ebffff; nop [rax+rax]; endbr64; mov eax, 0xffffffff; ret; 
0x0000000014b933: mov esi, 0x9; call qword ptr [rax]; 
0x0000000015a81e: mov esi, 0x9; mov edi, eax; mov eax, 0x3e; syscall; 
0x0000000014c23b: mov esi, 0xa; lea r9, [rsp+0x1c]; call qword ptr [rax]; 
0x0000000014d05a: mov esi, 0xc1480009; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x000000000d97d4: mov esi, 0xc1480010; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x000000001214d4: mov esi, 0xc48348c3; or [rbx+0x5d], bl; ret; 
0x000000000a4b7d: mov esi, 0xca390714; je short 0x00000000000a4b78; cmp edx, esi; je short 0x00000000000a4b78; ret; 
0x00000000116f5b: mov esi, 0xd8f7000c; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000014b6d9: mov esi, 0xd; call qword ptr [rax+0x28]; 
0x00000000150032: mov esi, 0xe68948c5; mov [rsp], rax; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x000000000d2907: mov esi, 0xe8830247; xor [rbx-0x79f0f608], al; add [r8], eax; add [rax-0x41], cl; ret; 
0x0000000015362e: mov esi, 0xe8fffff6; sbb [rcx-0x3], esp; jmp qword ptr [rsi+0xf]; 
0x0000000015a184: mov esi, 0xe8fffffd; ret; 
0x0000000013844c: mov esi, 0xe8fffffe; sti; adc bh, bh; jmp qword ptr [rsi+0x66]; 
0x000000000a4b45: mov esi, 0xf2390714; je short 0x00000000000a4b40; ret; 
0x0000000009c72e: mov esi, 0xf6000e0c; adc byte ptr [rsi+0x10000000], 0x48; lea eax, [rip+0x1b4f0]; cmovne rax, rdx; ret; 
0x00000000083f50: mov esi, 0xffffffff; call qword ptr [rax+0x18]; 
0x000000000857ff: mov esi, 0xffffffff; mov rdi, r8; call qword ptr [rax+0x18]; 
0x0000000008bbfa: mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rax+0x18]; 
0x0000000008e111: mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rbx+0x18]; 
0x0000000008fab5: mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [r12+0x18]; 
0x0000000008f8c6: mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [r15+0x18]; 
0x0000000008e8e8: mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rax+0x18]; 
0x0000000008deca: mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp+0x18]; 
0x000000000846d3: mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp+0x30]; 
0x00000000044a85: mov esi, [rax+0x20]; mov edi, ebp; ror rdx, 0x11; xor rdx, fs:[0x30]; call rdx; 
0x00000000148c4f: mov esi, [rax+0x40]; mov edx, [rsi+0x1c8]; add rsi, 0x38; jmp qword ptr [rax+0x18]; 
0x0000000011087b: mov esi, [rax+0x8]; cmovae r10, rcx; mov [rsp+0x20], rax; mov eax, 0x65; syscall; 
0x000000001151a9: mov esi, [rax]; mov rdi, r14; mov rax, [rbp-0x58]; mov r15d, r13d; call rax; 
0x00000000028cc5: mov esi, [rax]; xor eax, eax; call qword ptr [rdx+0x260]; 
0x00000000073a1d: mov esi, [rbp-0x8c8]; mov rdx, r13; mov rdi, r14; call qword ptr [r12+0x38]; 
0x00000000073460: mov esi, [rbp-0x8c8]; mov rdx, r13; mov rdi, r14; call qword ptr [rbx+0x38]; 
0x00000000043941: mov esi, [rbp]; mov rdi, [r12]; mov rdx, r14; mov rax, [rsp]; call rax; 
0x00000000142325: mov esi, [rbx+0x10]; mov rdi, rbp; mov [rbx], rax; xor eax, eax; call qword ptr [rbx+0x18]; 
0x00000000085379: mov esi, [rbx+0x10]; mov rdx, [rbx+0x40]; mov rdi, rbx; sub rdx, rsi; call qword ptr [rax+0x70]; 
0x00000000143985: mov esi, [rbx+0x10]; mov rdx, r12; mov rdi, r14; call qword ptr [rax+0x10]; 
0x000000001439bf: mov esi, [rbx+0x10]; mov rdx, r12; mov rdi, r14; call qword ptr [rax+0x20]; 
0x000000001423e7: mov esi, [rbx+0x20]; mov rdi, rbp; mov r12d, eax; xor eax, eax; call qword ptr [rbx+0x28]; 
0x0000000014a850: mov esi, [rbx+0x88]; mov rdi, r15; call qword ptr [rax+0x28]; 
0x000000001077af: mov esi, [rbx+0xa0]; mov rdi, [rbx+0x80]; call qword ptr [rax+0x88]; 
0x000000001150e0: mov esi, [rbx]; mov r13, rbx; mov rdi, rbp; call r12; 
0x0000000007cc4b: mov esi, [rip+0x1662f7]; mov rdi, rsp; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000771c3: mov esi, [rip+0x16bd7f]; mov rdi, rsp; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000185fb1: mov esi, [rsi+rcx+0x60]; cmp esi, [rdx+rcx+0x60]; jne 0x0000000000185d99; vzeroupper; ret; 
0x00000000186468: mov esi, [rsi+rcx]; cmp esi, [rdx+rcx]; jne 0x0000000000186209; vzeroupper; ret; 
0x0000000015a01b: mov esi, [rsi]; lea r9, [r11+rsi]; mov esi, [rsp+0x24]; call rax; 
0x000000000b7f17: mov esi, [rsi]; mov [rdi+rdx-0x4], ecx; mov [rdi], esi; ret; 
0x000000000b7f08: mov esi, [rsi]; mov [rdi+rdx-0x8], rcx; mov [rdi], rsi; ret; 
0x000000001895f0: mov esi, [rsi]; mov cx, [rcx-0x2]; mov [rdi], si; mov [r9-0x2], cx; ret; 
0x000000001895de: mov esi, [rsi]; mov ecx, [rcx-0x4]; mov [rdi], esi; mov [r9-0x4], ecx; ret; 
0x00000000114cf1: mov esi, [rsi]; mov rax, [rsp+0x10]; mov rdi, rbp; call rax; 
0x000000001895cb: mov esi, [rsi]; mov rcx, [rcx-0x8]; mov [rdi], rsi; mov [r9-0x8], rcx; ret; 
0x00000000141ace: mov esi, [rsp+0x10]; call qword ptr [rax]; 
0x0000000010ff1c: mov esi, [rsp+0x10]; mov eax, 0x17; mov edi, [rsp+0xc]; syscall; 
0x0000000011b07c: mov esi, [rsp+0x10]; mov eax, 0x46; mov edi, [rsp+0x8]; syscall; 
0x00000000108c04: mov esi, [rsp+0x10]; mov edi, [rsp+0x18]; mov eax, 0x101; syscall; 
0x0000000010dd29: mov esi, [rsp+0x10]; mov edi, [rsp+0x8]; syscall; 
0x0000000011ae1f: mov esi, [rsp+0x10]; mov edi, [rsp+0xc]; mov eax, 0x133; syscall; 
0x0000000011955f: mov esi, [rsp+0x10]; mov edi, [rsp+0xc]; mov eax, 0xe8; syscall; 
0x0000000010f37b: mov esi, [rsp+0x10]; mov r8d, eax; mov edi, [rsp+0x8]; mov eax, 0x13; syscall; 
0x0000000010f41b: mov esi, [rsp+0x10]; mov r8d, eax; mov edi, [rsp+0x8]; mov eax, 0x14; syscall; 
0x00000000108d7d: mov esi, [rsp+0x10]; mov r8d, eax; mov edi, [rsp+0x8]; mov eax, 0x1; syscall; 
0x0000000011a79b: mov esi, [rsp+0x10]; mov r8d, eax; mov edi, [rsp+0x8]; mov eax, 0x2e; syscall; 
0x0000000011a63b: mov esi, [rsp+0x10]; mov r8d, eax; mov edi, [rsp+0x8]; mov eax, 0x2f; syscall; 
0x00000000108cdd: mov esi, [rsp+0x10]; mov r8d, eax; mov edi, [rsp+0x8]; xor eax, eax; syscall; 
0x0000000011a28d: mov esi, [rsp+0x10]; mov r8d, eax; mov edi, [rsp+0xc]; mov eax, 0x2b; syscall; 
0x000000000463fc: mov esi, [rsp+0x10]; mov r8d, eax; mov rdi, [rsp+0x8]; mov eax, 0x13e; syscall; 
0x0000000011394c: mov esi, [rsp+0x10]; mov r8d, eax; mov rdi, [rsp+0x8]; mov eax, 0x1a; syscall; 
0x0000000010d65c: mov esi, [rsp+0x10]; mov r8d, eax; mov rdi, [rsp+0x8]; mov eax, 0x7; syscall; 
0x0000000014168e: mov esi, [rsp+0x10]; mov rcx, [rsp+0x8]; mov rdi, rbp; call rcx; 
0x0000000008e78e: mov esi, [rsp+0x10]; mov rdi, [rsp+0x8]; add rsp, 0x20; pop rbx; jmp rax; 
0x00000000097c09: mov esi, [rsp+0x18]; add rsp, 0x18; jmp rax; 
0x000000000b9d43: mov esi, [rsp+0x18]; call rbx; 
0x0000000011003c: mov esi, [rsp+0x18]; mov edi, [rsp+0x14]; syscall; 
0x0000000011960f: mov esi, [rsp+0x18]; mov edi, [rsp+0x8]; mov eax, 0x114; syscall; 
0x000000000c68b9: mov esi, [rsp+0x18]; mov rcx, r12; mov rdx, r13; call rbx; 
0x000000001470db: mov esi, [rsp+0x18]; mov rdi, r12; call qword ptr [rax+0x8]; 
0x00000000086ed7: mov esi, [rsp+0x18]; mov rdi, r13; lea r9, [rsp+0x28]; call rbp; 
0x000000000976d9: mov esi, [rsp+0x18]; pop rbx; pop rbp; pop r12; jmp rax; 
0x0000000012926b: mov esi, [rsp+0x18]; sub rsi, fs:[0x28]; jne short 0x0000000000129285; add rsp, 0x28; ret; 
0x000000001292cb: mov esi, [rsp+0x18]; sub rsi, fs:[0x28]; jne short 0x00000000001292e5; add rsp, 0x28; ret; 
0x0000000015a26c: mov esi, [rsp+0x18]; sub rsi, fs:[0x28]; jne short 0x000000000015a285; add rsp, 0x28; ret; 
0x00000000029876: mov esi, [rsp+0x18]; xor r8d, r8d; call rbx; 
0x000000000c6a40: mov esi, [rsp+0x18]; xor r8d, r8d; mov rdi, rbp; call rbx; 
0x0000000015a021: mov esi, [rsp+0x24]; call rax; 
0x0000000010b015: mov esi, [rsp+0x28]; lea rcx, [rbp+0x28]; mov edx, 0x1; call qword ptr [rbp+0x40]; 
0x0000000010b375: mov esi, [rsp+0x28]; lea rcx, [rbp+0x28]; mov edx, 0x2; call qword ptr [rbp+0x40]; 
0x0000000010b2f5: mov esi, [rsp+0x28]; lea rcx, [rbp+0x28]; mov edx, 0x5; call qword ptr [rbp+0x40]; 
0x0000000015a017: mov esi, [rsp+0x28]; mov esi, [rsi]; lea r9, [r11+rsi]; mov esi, [rsp+0x24]; call rax; 
0x00000000098de1: mov esi, [rsp+0x28]; mov rdi, r12; call rdx; 
0x0000000014710a: mov esi, [rsp+0x30]; mov rcx, [rsp+0x28]; mov rdi, r12; call rcx; 
0x0000000013fd94: mov esi, [rsp+0x40]; mov rdi, [rsp+0x38]; call qword ptr [rsp+0x68]; 
0x00000000033be1: mov esi, [rsp+0x40]; mov rdi, [rsp+0x38]; call r15; 
0x00000000033d3d: mov esi, [rsp+0x40]; mov rdi, [rsp+0x38]; lea r8, [rsp+0xa0]; call r15; 
0x00000000147325: mov esi, [rsp+0x40]; mov rdx, [rsp+0x20]; mov rdi, r12; call rdx; 
0x0000000002da74: mov esi, [rsp+0x48]; mov rdi, [rsp+0x50]; mov rax, [rsp+0x18]; call rax; 
0x00000000097e21: mov esi, [rsp+0x48]; mov rdi, rbp; call rax; 
0x0000000014a8a2: mov esi, [rsp+0x50]; mov rcx, [rsp+0x20]; mov rdi, r15; call rcx; 
0x0000000002fd32: mov esi, [rsp+0x50]; mov rdi, [rsp+0x48]; mov rax, [rsp+0x28]; call rax; 
0x0000000002d27e: mov esi, [rsp+0x50]; mov rdi, [rsp+0x58]; mov rax, [rsp+0x20]; call rax; 
0x0000000002bfe0: mov esi, [rsp+0x50]; mov rdi, [rsp+0x58]; mov rax, [rsp+0x28]; call rax; 
0x0000000002ed83: mov esi, [rsp+0x58]; mov rdi, [rsp+0x50]; call r14; 
0x000000000323ca: mov esi, [rsp+0x58]; mov rdi, [rsp+0x50]; mov rax, [rsp+0x10]; call rax; 
0x00000000030d23: mov esi, [rsp+0x58]; mov rdi, [rsp+0x50]; mov rax, [rsp+0x20]; call rax; 
0x0000000002c568: mov esi, [rsp+0x58]; mov rdi, [rsp+0x60]; mov rax, [rsp+0x20]; call rax; 
0x000000000dac36: mov esi, [rsp+0x60]; call r12; 
0x0000000002e0ea: mov esi, [rsp+0x60]; mov rdi, [rsp+0x58]; call r13; 
0x00000000041f32: mov esi, [rsp+0x88]; sub rsi, fs:[0x28]; jne short 0x0000000000041f4c; add rsp, 0x98; ret; 
0x00000000132bdc: mov esi, [rsp+0x8]; call rbp; 
0x00000000119377: mov esi, [rsp+0x8]; mov eax, 0x119; mov edi, [rsp+0x4]; syscall; 
0x0000000010f4dd: mov esi, [rsp+0x8]; mov eax, 0x127; syscall; 
0x0000000010f59d: mov esi, [rsp+0x8]; mov eax, 0x128; syscall; 
0x0000000011ad69: mov esi, [rsp+0x8]; mov eax, 0x12b; mov edi, [rsp+0x4]; syscall; 
0x000000000de680: mov esi, [rsp+0x8]; mov edi, [rsp+0x10]; mov eax, 0x3d; syscall; 
0x0000000010e1b1: mov esi, [rsp+0x8]; mov edi, [rsp+0x18]; mov eax, 0x115; syscall; 
0x0000000011acb1: mov esi, [rsp+0x8]; mov edi, [rsp+0x18]; mov eax, 0x120; syscall; 
0x0000000011afc1: mov esi, [rsp+0x8]; mov edi, [rsp+0x18]; mov eax, 0x45; syscall; 
0x000000001196c0: mov esi, [rsp+0x8]; mov edi, [rsp]; mov eax, 0x116; syscall; 
0x00000000106ce1: mov esi, [rsp+0x8]; mov edi, [rsp]; mov eax, 0x11; syscall; 
0x00000000106d91: mov esi, [rsp+0x8]; mov edi, [rsp]; mov eax, 0x12; syscall; 
0x00000000142b06: mov esi, [rsp+0x8]; mov rcx, [rsp]; xor eax, eax; mov rdi, rbx; call rcx; 
0x000000000433cb: mov esi, [rsp+0x8]; mov rdx, rbp; mov rdi, r12; call rbx; 
0x00000000074837: mov esi, [rsp+0x8]; mov rdx, rbx; mov rdi, rbp; call qword ptr [r12+0x38]; 
0x00000000139893: mov esi, [rsp+0x8]; sub rsi, fs:[0x28]; jne short 0x00000000001398a7; add rsp, 0x18; ret; 
0x0000000011a5ac: mov esi, [rsp+0x8]; syscall; 
0x0000000011a6fe: mov esi, [rsp+0x8]; xor r8d, r8d; mov eax, 0x2c; syscall; 
0x0000000011a4de: mov esi, [rsp+0x8]; xor r8d, r8d; mov eax, 0x2d; syscall; 
0x0000000010e260: mov esi, [rsp+0xc]; mov edi, [rsp+0x8]; mov eax, 0x11d; syscall; 
0x00000000109205: mov esi, [rsp+0xc]; mov r8d, eax; mov edi, [rsp+0x8]; mov eax, 0x48; syscall; 
0x0000000008dfd1: mov esi, [rsp+0xc]; mov rdi, [rsp]; add rsp, 0x10; pop rbx; jmp rax; 
0x00000000109691: mov esi, [rsp+0xc]; mov rdi, [rsp]; mov r8d, eax; mov eax, 0x55; syscall; 
0x00000000028c32: mov esi, [rsp]; mov edi, [rsp+0xc]; mov rdx, [rax]; call rbp; 
0x0000000011982a: mov esi, [rsp]; mov r8d, eax; mov edi, [rsp+0x8]; mov eax, 0x130; syscall; 
0x0000000011a35a: mov esi, [rsp]; mov r8d, eax; mov edi, [rsp+0x8]; mov eax, 0x2a; syscall; 
0x00000000028ca5: mov esi, [rsp]; mov rdx, [rax]; mov rax, [rsp+0x10]; call rax; 
0x0000000007a364: mov esi, [rsp]; mov rdx, rbx; mov rdi, rbp; call qword ptr [r12+0x38]; 
0x0000000011d1d0: mov esi, eax; and esi, [rdx+0x10]; lea rdx, [rdx+rsi*4]; add eax, [rdx+rcx]; ret; 
0x000000001247d7: mov esi, eax; call qword ptr [r10+0x28]; 
0x00000000107948: mov esi, eax; mov eax, 0x75; syscall; 
0x00000000107971: mov esi, eax; mov eax, 0x77; syscall; 
0x00000000091b12: mov esi, eax; mov eax, 0xe; syscall; 
0x0000000004189d: mov esi, eax; mov edx, r8d; mov eax, 0xea; syscall; 
0x0000000011904c: mov esi, eax; mov rdi, rbp; call r12; 
0x000000000d67d4: mov esi, eax; movsxd rdx, [rdi+rsi*4]; add rdx, rdi; notrack jmp rdx; 
0x00000000159133: mov esi, eax; shr ecx, 0x3; rep movsq [rdi], [rsi]; ret; 
0x00000000046486: mov esi, eax; xor edx, edx; mov eax, r9d; sub rsi, rdi; syscall; 
0x0000000008a743: mov esi, ebp; call qword ptr [r14+0x38]; 
0x000000001443b2: mov esi, ebp; call qword ptr [r14+0x40]; 
0x00000000144081: mov esi, ebp; call qword ptr [r15+0x40]; 
0x000000001417ba: mov esi, ebp; call qword ptr [rax+0x10]; 
0x0000000014dc0c: mov esi, ebp; call qword ptr [rax+0x18]; 
0x000000000cc902: mov esi, ebp; call r12; 
0x0000000009b6e1: mov esi, ebp; call rax; 
0x00000000121988: mov esi, ebp; mov [rsp+0x10], rax; mov rdx, rax; call qword ptr [r12+0x28]; 
0x0000000004279b: mov esi, ebp; mov [rsp+0x14], eax; mov edi, r12d; mov eax, 0x81; syscall; 
0x0000000013de92: mov esi, ebp; mov [rsp+0x14], eax; mov rdx, r12; mov eax, 0x81; syscall; 
0x000000000d9001: mov esi, ebp; mov eax, 0xe6; syscall; 
0x000000000d9094: mov esi, ebp; mov edi, 0x1; mov eax, 0xe6; syscall; 
0x00000000080743: mov esi, ebp; mov edi, 0x1; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000001089fd: mov esi, ebp; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x0000000012ddff: mov esi, ebp; mov edi, r12d; call qword ptr [rsp+0x40]; 
0x0000000011b63a: mov esi, ebp; mov edi, r12d; mov [rbp-0x830], rax; mov eax, ebx; syscall; 
0x000000000dbf44: mov esi, ebp; mov edi, r14d; call qword ptr [rsp+0x48]; 
0x000000000d9175: mov esi, ebp; mov r8d, eax; mov edi, 0x1; mov eax, 0xe6; syscall; 
0x00000000108a73: mov esi, ebp; mov r8d, eax; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x000000001417c8: mov esi, ebp; mov rax, [rdi+0x38]; call qword ptr [rax+0x10]; 
0x0000000014167a: mov esi, ebp; mov rax, [rdi+0x38]; call qword ptr [rax+0x8]; 
0x000000001472d2: mov esi, ebp; mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x10]; 
0x0000000012d82f: mov esi, ebp; mov rdi, r12; call qword ptr [rsp+0x40]; 
0x000000000438c8: mov esi, ebp; mov rdi, r12; call rax; 
0x000000000979b2: mov esi, ebp; mov rdi, r12; pop r12; pop r13; jmp rax; 
0x0000000012aee5: mov esi, ebp; mov rdi, r13; call qword ptr [rsp+0x40]; 
0x00000000073d09: mov esi, ebp; mov rdi, r14; call qword ptr [rbx+0x38]; 
0x00000000072cd2: mov esi, ebp; mov rdi, r14; call qword ptr [rcx+0x38]; 
0x000000000dc3e4: mov esi, ebp; mov rdi, r14; call qword ptr [rsp+0x48]; 
0x00000000080536: mov esi, ebp; mov rdi, r15; call qword ptr [r14+0x38]; 
0x00000000085d4a: mov esi, ebp; mov rdi, r15; call qword ptr [r14+0x80]; 
0x0000000008059b: mov esi, ebp; mov rdi, r15; call qword ptr [rbp+0x38]; 
0x0000000008247a: mov esi, ebp; mov rdi, rbp; call qword ptr [r14+0x38]; 
0x00000000141665: mov esi, ebp; mov rdi, rbp; call qword ptr [rax+0x8]; 
0x0000000008ba2b: mov esi, ebp; mov rdi, rbx; call qword ptr [r12+0x80]; 
0x0000000007f6f2: mov esi, ebp; mov rdi, rbx; call qword ptr [r13+0x38]; 
0x000000000813eb: mov esi, ebp; mov rdi, rbx; call qword ptr [r13+0x48]; 
0x0000000008155a: mov esi, ebp; mov rdi, rbx; call qword ptr [r13+0x58]; 
0x00000000082397: mov esi, ebp; mov rdi, rbx; call qword ptr [r14+0x38]; 
0x00000000081140: mov esi, ebp; mov rdi, rbx; call qword ptr [r14+0x48]; 
0x00000000081584: mov esi, ebp; mov rdi, rbx; call qword ptr [rax+0x58]; 
0x0000000008b879: mov esi, ebp; mov rdi, rbx; call qword ptr [rbp+0x70]; 
0x00000000144be4: mov esi, ebp; mov rdi, rbx; call rax; 
0x00000000044a46: mov esi, ebp; ror rdx, 0x11; xor rdx, fs:[0x30]; call rdx; 
0x0000000014484b: mov esi, ebx; call qword ptr [rbp+0x40]; 
0x0000000014c744: mov esi, ebx; call rax; 
0x000000000ed7fe: mov esi, ebx; dec dword ptr [rcx-0x75]; adc [r8+0x39], r9b; ret far; 
0x000000000ed7ff: mov esi, ebx; dec dword ptr [rcx-0x75]; adc [r8+0x39], r9b; ret far; 
0x00000000123e1a: mov esi, ebx; mov edi, 0x2000005; mov rdx, rax; call qword ptr [r13+0x28]; 
0x000000000897de: mov esi, ebx; mov edi, 0x2; mov eax, r9d; syscall; 
0x000000000426b0: mov esi, ebx; mov r8d, eax; mov r10d, 0x8; mov eax, 0x80; syscall; 
0x000000001486c5: mov esi, ebx; mov rdi, rbp; call qword ptr [rax+0x48]; 
0x0000000014da40: mov esi, ebx; mov rdi, rbp; call qword ptr [rax]; 
0x0000000013260a: mov esi, ebx; mov rdi, rbp; call qword ptr [rsp+0x10]; 
0x0000000010b7b0: mov esi, ecx; call qword ptr [rbp-0xf0]; 
0x000000000418bd: mov esi, ecx; mov edi, 0x2; mov eax, 0xe; syscall; 
0x0000000010e46e: mov esi, ecx; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x0000000011b6ce: mov esi, ecx; mov edi, r12d; mov eax, ebx; syscall; 
0x00000000111d69: mov esi, ecx; mov r8, rdi; mov byte ptr [rsi-0x1], 0x0; mov rax, r8; ret; 
0x000000000751b1: mov esi, ecx; mov rdi, rbp; call qword ptr [r12+0x38]; 
0x00000000075d0d: mov esi, ecx; mov rdi, rbp; call qword ptr [r13+0x38]; 
0x00000000042b94: mov esi, edi; call r14; 
0x000000000bfe9b: mov esi, edi; jmp qword ptr [rsi-0x70]; 
0x0000000010ecf9: mov esi, edi; mov eax, 0x12e; xor edi, edi; syscall; 
0x000000000cd045: mov esi, edi; mov eax, 0xa4; xor edi, edi; syscall; 
0x000000001222df: mov esi, edi; mov edi, 0x2000006; mov rdx, rax; call qword ptr [rbx+0x28]; 
0x0000000014a88e: mov esi, edi; mov rax, [rdi+0x38]; call qword ptr [rax+0x8]; 
0x0000000015973c: mov esi, edi; mov rdi, [rsp]; mov rax, [rax+0x268]; jmp rax; 
0x00000000133039: mov esi, edi; mov rdi, r12; call rbp; 
0x00000000042dd9: mov esi, edi; mov rdi, r12; mov rdx, r14; call rbp; 
0x00000000073856: mov esi, edi; mov rdi, r14; mov [rbp-0x8f5], r9b; mov [rbp-0x900], r8b; call rax; 
0x0000000007a7be: mov esi, edi; mov rdi, rbp; call qword ptr [rbx+0x38]; 
0x000000000cc468: mov esi, edi; mov rdi, rbp; call rbx; 
0x00000000142bfa: mov esi, edi; mov rdi, rbx; xor eax, eax; call rcx; 
0x00000000147a0e: mov esi, edx; add rdi, 0x10; jmp rcx; 
0x00000000125a88: mov esi, edx; call rax; 
0x0000000010803b: mov esi, edx; cmp r8d, 0x1; ja short 0x0000000000108070; mov eax, 0x4; syscall; 
0x0000000010809a: mov esi, edx; cmp r8d, 0x1; ja short 0x00000000001080d0; mov eax, 0x5; syscall; 
0x000000001080fb: mov esi, edx; cmp r8d, 0x1; ja short 0x0000000000108130; mov eax, 0x6; syscall; 
0x00000000147a2e: mov esi, edx; mov dword ptr [rdi+0x10], 0x2; add rdi, 0x10; jmp rcx; 
0x0000000014a50e: mov esi, edx; mov dword ptr [rdi+0x58], 0x2; add rdi, 0x58; jmp rcx; 
0x00000000149bde: mov esi, edx; mov dword ptr [rdi+0x68], 0x2; add rdi, 0x68; jmp rcx; 
0x00000000146dee: mov esi, edx; mov dword ptr [rdi+0xc8], 0x2; add rdi, 0xc8; jmp rcx; 
0x00000000078f8f: mov esi, edx; mov rdi, r15; call qword ptr [r12+0x38]; 
0x00000000079315: mov esi, edx; mov rdi, r15; call qword ptr [r13+0x38]; 
0x0000000014175a: mov esi, esi; add qword ptr [rbx+0x22a8], 0x1; mov rdi, rbp; call qword ptr [rax+0x18]; 
0x0000000009b876: mov esi, esi; call rax; 
0x00000000122d12: mov esi, esi; mov edi, 0x2000003; mov rdx, rax; call qword ptr [rbx+0x28]; 
0x000000001074e6: mov esi, esi; mov edi, 0x2; mov eax, 0xe; syscall; 
0x0000000010ac03: mov esi, esi; mov edx, [rdx+rax]; call qword ptr [rbx+0x40]; 
0x0000000014f7b4: mov esi, esi; mov rdi, r12; call r13; 
0x00000000042d1f: mov esi, esi; mov rdi, r12; call rbx; 
0x0000000005b57a: mov esi, esi; mov rdi, r12; mov [rbp-0xe8], r8; call rax; 
0x000000001433fe: mov esi, esi; mov rdi, r13; call qword ptr [rax+0x30]; 
0x0000000012a975: mov esi, esi; mov rdi, r13; call qword ptr [rsp+0x50]; 
0x0000000009b0ae: mov esi, esi; mov rdi, r13; call rax; 
0x00000000078d0e: mov esi, esi; mov rdi, r15; mov [rbp-0x938], r9d; mov [rbp-0x930], r11b; call rax; 
0x0000000013faad: mov esi, esi; mov rdi, r15; mov [rsp+0x8], rcx; call rbp; 
0x000000000e2d13: mov esi, esi; mov rdi, r8; call qword ptr [rbx+0x40]; 
0x00000000076453: mov esi, esi; mov rdi, rbp; call qword ptr [r12+0x38]; 
0x00000000142439: mov esi, esi; mov rdi, rbp; call qword ptr [rax+0x28]; 
0x0000000008b6ba: mov esi, esi; mov rdi, rbp; call qword ptr [rax+0x40]; 
0x00000000075243: mov esi, esi; mov rdi, rbp; call qword ptr [rbx+0x38]; 
0x00000000074c88: mov esi, esi; mov rdi, rbp; call qword ptr [rcx+0x38]; 
0x00000000151530: mov esi, esi; mov rdi, rbp; call r12; 
0x0000000007fd28: mov esi, esi; mov rdi, rbx; call qword ptr [r15+0x38]; 
0x0000000012f3e1: mov esi, esi; mov rdi, rbx; call rax; 
0x000000000e04f1: mov esi, esi; movsxd rax, [rdx+rsi*4]; add rax, rdx; notrack jmp rax; 
0x0000000002a2c1: mov esi, esp; adc al, [rax]; mov rax, [rbp-0x70]; mov rdi, rbx; call rax; 
0x00000000080e62: mov esi, esp; call qword ptr [r14+0x38]; 
0x00000000150aed: mov esi, esp; call qword ptr [rax+0x40]; 
0x00000000143d45: mov esi, esp; call qword ptr [rax]; 
0x0000000012c421: mov esi, esp; call qword ptr [rsp+0x40]; 
0x00000000132fe6: mov esi, esp; call qword ptr [rsp+0x58]; 
0x00000000099a21: mov esi, esp; call rax; 
0x00000000042ce0: mov esi, esp; call rbx; 
0x00000000107aba: mov esi, esp; lea rdi, [rip+0xa695c]; mov rdx, [rax+0xb0]; call qword ptr [rax+0x88]; 
0x00000000143e1c: mov esi, esp; mov [rsp+0x8], rax; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x00000000143d64: mov esi, esp; mov [rsp], rax; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x0000000014d7d1: mov esi, esp; mov dword ptr [rsp+0x8], 0x1; mov dword ptr [rsp+0x10], 0x1; mov dword ptr [rsp+0x18], 0x1; call qword ptr [rax+0x18]; 
0x00000000052f97: mov esi, esp; mov edi, 0x3001; mov eax, 0x9e; syscall; 
0x000000000d8f41: mov esi, esp; mov edi, ebp; mov eax, 0xe4; syscall; 
0x000000000d8ed1: mov esi, esp; mov edi, ebp; mov eax, 0xe5; syscall; 
0x000000000ddf72: mov esi, esp; mov edi, r13d; call qword ptr [rsp+0x30]; 
0x000000001470f3: mov esi, esp; mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x8]; 
0x000000000ddb92: mov esi, esp; mov rdi, r13; call qword ptr [rsp+0x30]; 
0x00000000042d04: mov esi, esp; mov rdi, r13; call rbx; 
0x000000001412d4: mov esi, esp; mov rdi, r14; add r8, fs:[0x0]; mov rcx, r15; call rbp; 
0x00000000083c07: mov esi, esp; mov rdi, r14; call qword ptr [rax+0x18]; 
0x00000000115b7e: mov esi, esp; mov rdi, r14; call r13; 
0x00000000115ae9: mov esi, esp; mov rdi, r15; call r14; 
0x0000000008c0eb: mov esi, esp; mov rdi, rbp; call qword ptr [r12+0x90]; 
0x0000000008a8a7: mov esi, esp; mov rdi, rbp; call qword ptr [r13+0x38]; 
0x0000000008becf: mov esi, esp; mov rdi, rbp; call qword ptr [r13+0x90]; 
0x0000000007acaa: mov esi, esp; mov rdi, rbp; call qword ptr [r14+0x38]; 
0x0000000008b082: mov esi, esp; mov rdi, rbp; call qword ptr [r15+0x80]; 
0x0000000008abf9: mov esi, esp; mov rdi, rbp; call qword ptr [r15+0x90]; 
0x00000000071f34: mov esi, esp; mov rdi, rbp; call qword ptr [rax+0x38]; 
0x0000000008bcf0: mov esi, esp; mov rdi, rbp; call qword ptr [rax+0x78]; 
0x00000000143df7: mov esi, esp; mov rdi, rbp; call qword ptr [rax]; 
0x0000000007e658: mov esi, esp; mov rdi, rbp; call qword ptr [rbx+0x90]; 
0x0000000009a19e: mov esi, esp; mov rdi, rbp; call rax; 
0x00000000107eeb: mov esi, esp; mov rdi, rbp; mov eax, 0x135; syscall; 
0x0000000008cee8: mov esi, esp; mov rdi, rbx; call qword ptr [r14+0x78]; 
0x00000000151402: mov esi, esp; mov rdi, rbx; call rcx; 
0x0000000013fc0f: mov esi, esp; mov rdi, rbx; mov rcx, r13; call r10; 
0x00000000098a22: mov esi, esp; mov rdx, r8; pop r12; pop r13; jmp rax; 
0x00000000098722: mov esi, esp; pop r12; pop r13; jmp rax; 
0x000000000416a6: mov esi, esp; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000159e76: mov esi, esp; xor r9d, r9d; mov rdi, rbp; call qword ptr [rax+0x270]; 
0x00000000083c06: mov esi, r12d; mov rdi, r14; call qword ptr [rax+0x18]; 
0x000000001433fd: mov esi, r14d; mov rdi, r13; call qword ptr [rax+0x30]; 
0x0000000012a974: mov esi, r14d; mov rdi, r13; call qword ptr [rsp+0x50]; 
0x00000000142438: mov esi, r14d; mov rdi, rbp; call qword ptr [rax+0x28]; 
0x000000000f4a43: mov esp, 0x19824; add al, ch; sbb bl, dh; jmp qword ptr [rsi+0xf]; 
0x0000000007bda4: mov esp, 0x1; jmp rcx; 
0x000000000b6d15: mov esp, 0x1d8d4cd2; and ax, 0xf; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6cf8: mov esp, 0x1d8d4cd2; and dword ptr [rip+0x6349000f], 0xc; xchg ebx, eax; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6d3a: mov esp, 0x1d8d4cd2; and eax, 0x6349000f; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b3725: mov esp, 0x1d8d4cd2; mov [0x49930c6349000f57], al; lea ecx, [rbx+rcx]; notrack jmp rcx; 
0x000000000b6d72: mov esp, 0x1d8d4cd2; or [rip+0x6349000f], esp; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b4698: mov esp, 0x1d8d4cd2; or dword ptr [rcx+0xf], 0x0; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b46b5: mov esp, 0x1d8d4cd2; str [r9+0x63]; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000014ddf3: mov esp, 0x440f48c5; ret; 
0x000000001139aa: mov esp, 0x441f0f; add bl, dh; nop edx, edi; mov eax, 0x1c; syscall; 
0x0000000011a2ea: mov esp, 0x441f0f; add bl, dh; nop edx, edi; mov eax, 0x31; syscall; 
0x0000000010e2ba: mov esp, 0x441f0f; add bl, dh; nop edx, edi; mov eax, 0x3; syscall; 
0x000000000a8481: mov esp, 0x448d48c0; cmp [rax], ah; ret; 
0x000000000a8471: mov esp, 0x448d48c0; cmp [rax], dl; ret; 
0x000000000a8451: mov esp, 0x448d48c0; cmp al, dh; ret; 
0x0000000009b9c0: mov esp, 0x48fff8a9; mov eax, [rip+0x14747d]; mov dword ptr fs:[rax], 0xc; xor eax, eax; ret; 
0x0000000007b260: mov esp, 0x48fffff5; add ecx, ebx; mov rbx, rdx; mov edx, 0x1; jmp rcx; 
0x0000000015cf9e: mov esp, 0x634f0004; or al, 0x8a; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000076bea: mov esp, 0x8024; add [rax-0x7d], cl; ret; 
0x000000000748e9: mov esp, 0x89000000; ret; 
0x0000000008a866: mov esp, 0x8948fff9; ret; 
0x0000000003aad1: mov esp, 0x8d48001a; cmp eax, 0x1aabe5; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003aaaa: mov esp, 0x8d48001a; cmp eax, 0x1aae0c; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000018a7c0: mov esp, 0xa8000000; jne 0x000000000018a890; lea rax, [rdi+0x7]; ret; 
0x000000001822b2: mov esp, 0xc08348c0; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x0000000017e262: mov esp, 0xc08348c0; add rax, rdi; vzeroupper; ret; 
0x0000000017e252: mov esp, 0xc08348c0; and [rax+0x1], cl; clc; vzeroupper; ret; 
0x0000000014d1fa: mov esp, 0xc1480009; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x000000000d99eb: mov esp, 0xc1480010; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x000000000a822a: mov esp, 0xc22948c0; jbe 0x00000000000a84d0; add rax, rdi; add rax, rcx; ret; 
0x000000000ca12a: mov esp, 0xc22948c0; jbe 0x00000000000ca3d0; add rax, rdi; add rax, rcx; ret; 
0x000000000a8491: mov esp, 0xc22948c0; jbe short 0x00000000000a84d0; add rax, rdi; ret; 
0x000000000a84a1: mov esp, 0xc22948c0; jbe short 0x00000000000a84d0; lea rax, [rdi+rax+0x10]; ret; 
0x000000000a84b1: mov esp, 0xc22948c0; jbe short 0x00000000000a84d0; lea rax, [rdi+rax+0x20]; ret; 
0x000000000a84c1: mov esp, 0xc22948c0; jbe short 0x00000000000a84d0; lea rax, [rdi+rax+0x30]; ret; 
0x000000000ca391: mov esp, 0xc22948c0; jbe short 0x00000000000ca3d0; add rax, rdi; ret; 
0x000000000ca3a1: mov esp, 0xc22948c0; jbe short 0x00000000000ca3d0; lea rax, [rdi+rax+0x10]; ret; 
0x000000000ca3b1: mov esp, 0xc22948c0; jbe short 0x00000000000ca3d0; lea rax, [rdi+rax+0x20]; ret; 
0x000000000ca3c1: mov esp, 0xc22948c0; jbe short 0x00000000000ca3d0; lea rax, [rdi+rax+0x30]; ret; 
0x0000000017e1c2: mov esp, 0xc23948c0; jbe short 0x000000000017e230; add rax, rdi; vzeroupper; ret; 
0x00000000185c72: mov esp, 0xc23948c0; jbe short 0x0000000000185ce0; add rax, rdi; vzeroupper; ret; 
0x0000000009d43a: mov esp, 0xc2440fc7; add eax, 0x1; ret; 
0x0000000011bde9: mov esp, 0xc73000c; mov rdx, [rip+0xcbc83]; add word ptr [rdx+rax*2], 0x1; ret; 
0x00000000181e25: mov esp, 0xc80148c0; add rax, rdi; vzeroupper; ret; 
0x000000000cb344: mov esp, 0xc83948ca; ja short 0x00000000000cb360; sub rdi, 0x10; add rax, rdi; ret; 
0x000000000ae043: mov esp, 0xd00148d2; sub rax, rdi; ret; 
0x000000000cb848: mov esp, 0xd00148d2; sub rax, rdi; shr rax, 0x2; ret; 
0x000000000cc8fb: mov esp, 0xd024; add [rcx+rcx*4-0x12], cl; call r12; 
0x000000000cb27c: mov esp, 0xd03948d2; ja 0x00000000000cb360; add rax, rdi; add rax, rcx; ret; 
0x000000001117e1: mov esp, 0xe8c03150; out 0xe4, al; hlt; call far fword ptr [rdx+0x59]; 
0x000000001020a1: mov esp, 0xf024; add [rax+0x39], cl; fbstp tbyte ptr [rbp+rax-0x18], st; pop qword ptr [rdx-0xe]; jmp qword ptr [rsi+0xf]; 
0x00000000190d10: mov esp, 0xf3000266; divps xmm0, [rip+0x279c8]; ret; 
0x000000000a854b: mov esp, 0xf80148c0; add rax, rcx; ret; 
0x000000001821c7: mov esp, 0xf80148c0; add rax, rcx; sub rax, rdx; vzeroupper; ret; 
0x0000000017e2f7: mov esp, 0xf80148c0; add rax, rcx; vzeroupper; ret; 
0x000000000a8461: mov esp, 0xf80148c0; ret; 
0x00000000186bf2: mov esp, 0xf80148c0; sub rax, rdx; shr rax, 0x2; vzeroupper; ret; 
0x00000000182282: mov esp, 0xf80148c0; sub rax, rdx; vzeroupper; ret; 
0x0000000017e242: mov esp, 0xf80148c0; vzeroupper; ret; 
0x0000000013432c: mov esp, 0xfffeafe9; jmp qword ptr [rsi+0xf]; 
0x00000000114acb: mov esp, [rbp+0x10]; test r12, r12; jne short 0x0000000000114b1c; mov rdi, [rbp]; call rbx; 
0x00000000115914: mov esp, [rbp+0x10]; test r12, r12; jne short 0x0000000000115940; mov rdi, [rbp]; call rbx; 
0x0000000011a5c1: mov esp, [rdi+rsi*8-0x1]; mov rax, [rsp]; add rsp, 0x30; pop rbp; ret; 
0x000000000453ca: mov esp, [rip+0x19d968]; mov rax, fs:[r12]; lock add qword ptr [rax+0x460], 0x1; lea rdi, [rbp+0x988]; call qword ptr [rbp+0xf90]; 
0x0000000015083c: mov esp, eax; mov eax, eax; mov [rsp], rax; mov rax, [rbp+0x8]; call qword ptr [rax+0x8]; 
0x00000000142558: mov esp, eax; mov rax, [rdi+0x8]; call qword ptr [rax+0x20]; 
0x0000000008a6c4: mov esp, eax; mov rax, r12; pop r12; ret; 
0x00000000041688: mov esp, eax; mov rbp, r9; nop; jmp rdx; 
0x000000001423ee: mov esp, eax; xor eax, eax; call qword ptr [rbx+0x28]; 
0x00000000190d78: mov esp, edi; dec dword ptr [rcx-0x75]; jge short 0x0000000000190d8f; add rdi, rbp; call r12; 
0x00000000093847: mov esp, edx; je short 0x000000000009386a; mov r13, [rip+0x14f53e]; xor edi, edi; call qword ptr [r13]; 
0x00000000059701: mov esp, edx; ret; 
0x00000000143de5: mov esp, esp; lea rsi, [rsp+0x8]; call qword ptr [rax]; 
0x0000000011a7be: mov fs, [rdx-0x9]; dec dword ptr [rax-0x75]; and al, 0x8; add rsp, 0x28; ret; 
0x000000000a2c0f: mov fs, [rsi]; add al, [rax]; add bh, dh; ret; 
0x00000000129d76: mov fs, cx; or eax, [rax]; syscall; 
0x0000000012b405: mov fs:[r8], r9d; add rsp, 0x18; ret; 
0x000000000dbb1f: mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x000000000dbcea: mov fs:[r9], ebx; add rsp, 0x20; mov eax, r8d; pop rbx; ret; 
0x000000000db3c7: mov fs:[r9], ebx; mov rax, r8; pop rbx; ret; 
0x00000000111c73: mov fs:[rax], edi; mov eax, 0xffffffff; ret; 
0x000000000453ba: mov fs:[rax], rbx; call qword ptr [rbp+0xf88]; 
0x0000000014cdc2: mov fs:[rax], rdx; ret; 
0x000000001350c0: mov fs:[rbp], r12d; pop rbx; pop rbp; pop r12; ret; 
0x0000000013c88a: mov fs:[rbx], r12d; pop rbx; pop rbp; pop r12; ret; 
0x000000001356c1: mov fs:[rbx], r13d; mov eax, 0x3; mov edi, [rbp-0x60]; syscall; 
0x0000000014d0fb: mov fs:[rbx], rax; mov rax, [rip+0x95c82]; mov dword ptr [rip+0x9bdd0], 0x2; pop rbx; ret; 
0x0000000014d02b: mov fs:[rbx], rax; mov rax, [rip+0x95df2]; mov dword ptr [rip+0x9bea0], 0x2; pop rbx; ret; 
0x0000000014d1cb: mov fs:[rbx], rax; mov rax, [rip+0x95e0a]; mov dword ptr [rip+0x9bd00], 0x2; pop rbx; ret; 
0x0000000014cf5b: mov fs:[rbx], rax; mov rax, [rip+0x95e82]; mov dword ptr [rip+0x9bf70], 0x2; pop rbx; ret; 
0x0000000014ceab: mov fs:[rbx], rax; pop rbx; mov dword ptr [rip+0x9c026], 0x2; ret; 
0x0000000014cf04: mov fs:[rbx], rax; pop rbx; ret; 
0x00000000045465: mov fs:[rbx], rdx; mov rdi, [rbp+0x8]; call rax; 
0x00000000041bdd: mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000386f0: mov fs:[rcx], rsi; cmp rax, rdx; mov rdx, 0xffffffffffffffff; cmove rax, rdx; ret; 
0x00000000041c19: mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000015c71f: mov fs:[rdx], eax; mov eax, r8d; ret; 
0x000000000fd34f: mov fs:[rdx], eax; mov eax, r9d; ret; 
0x00000000046439: mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000010f251: mov fs:[rdx], eax; mov rax, [rip+0xd3c45]; mov qword ptr [rax], 0xffffffffffffffff; xor eax, eax; ret; 
0x0000000003900f: mov fs:[rdx], rax; ret; 
0x0000000015a4f1: mov qword ptr [r12], 0x0; mov rax, [rsp+0x10]; mov rdi, [rsp+0x18]; call rax; 
0x0000000009ee11: mov qword ptr [r12], 0x0; pop rbx; pop rbp; pop r12; ret; 
0x00000000142ed6: mov qword ptr [r14], 0x0; ret; 
0x000000000970c7: mov qword ptr [r8+0x8], 0x0; pop rbx; pop rbp; pop r12; ret; 
0x0000000009bf92: mov qword ptr [r8+0x8], 0x0; xor eax, eax; mov [r8], rsi; ret; 
0x00000000044a3e: mov qword ptr [rax+0x10], 0x0; mov esi, ebp; ror rdx, 0x11; xor rdx, fs:[0x30]; call rdx; 
0x0000000011bd5e: mov qword ptr [rax+0x10], 0x0; mov qword ptr [rip+0xc760f], 0x0; ret; 
0x0000000013c99f: mov qword ptr [rax+0x10], 0x0; movups [rax], xmm0; add rsp, 0x8; ret; 
0x000000000845e1: mov qword ptr [rax+0x50], 0x0; movups [rax+0x40], xmm0; pop rbx; ret; 
0x0000000013c100: mov qword ptr [rax+0x8], 0x0; pop rbx; pop rbp; pop r12; ret; 
0x0000000008edc4: mov qword ptr [rax+0x8], 0x0; ret; 
0x0000000011bd56: mov qword ptr [rax+0x8], 0x1; mov qword ptr [rax+0x10], 0x0; mov qword ptr [rip+0xc760f], 0x0; ret; 
0x0000000008edbd: mov qword ptr [rax], 0x0; mov qword ptr [rax+0x8], 0x0; ret; 
0x0000000010f25b: mov qword ptr [rax], 0xffffffffffffffff; xor eax, eax; ret; 
0x000000000e3b13: mov qword ptr [rbp+0x8], 0x0; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000009ee5e: mov qword ptr [rbp], 0x0; pop rbp; pop r12; ret; 
0x00000000034856: mov qword ptr [rbx+0x10], 0x0; pop rbx; ret; 
0x00000000151615: mov qword ptr [rbx+0x18], 0x0; pop rbx; ret; 
0x000000000f9fde: mov qword ptr [rbx+0x28], 0x0; pop rbx; ret; 
0x0000000008df4d: mov qword ptr [rbx+0x58], 0x0; movups [rbx+0x48], xmm0; pop rbx; ret; 
0x0000000008fc6d: mov qword ptr [rbx+0x58], 0x0; pxor xmm0, xmm0; movups [rbx+0x48], xmm0; pop rbx; ret; 
0x0000000002a726: mov qword ptr [rbx], 0x0; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000114715: mov qword ptr [rbx], 0x0; pop rbx; ret; 
0x0000000015cef4: mov qword ptr [rcx], 0x0; mov eax, 0xffffffff; ret; 
0x00000000151a8c: mov qword ptr [rdi+0x20], 0x0; ret; 
0x0000000010df10: mov qword ptr [rdi], 0x0; ret; 
0x000000000422d9: mov qword ptr [rdi], 0x0; xor eax, eax; ret; 
0x0000000010deda: mov qword ptr [rdi], 0xffffffffffffffff; ret; 
0x00000000156ca9: mov qword ptr [rdx], 0x0; ret; 
0x0000000008ff4f: mov qword ptr [rip+0x15671e], 0x0; ret; 
0x0000000008ff44: mov qword ptr [rip+0x156721], 0x0; mov qword ptr [rip+0x15671e], 0x0; ret; 
0x0000000004572c: mov qword ptr [rip+0x1a0c29], 0x0; mov eax, [rax+0x58]; ret; 
0x00000000045657: mov qword ptr [rip+0x1a0cf6], 0x0; mov rax, [rax]; pop rbx; mov eax, [rax+0x58]; ret; 
0x0000000004556f: mov qword ptr [rip+0x1a0dd6], 0x0; mov rax, [rax]; pop rbx; mov eax, [rax+0x58]; ret; 
0x00000000191937: mov qword ptr [rip+0x5419e], 0x0; ret; 
0x000000001914ab: mov qword ptr [rip+0x54202], 0x0; add rsp, 0x8; ret; 
0x00000000191c5c: mov qword ptr [rip+0x55469], 0x0; ret; 
0x00000000191cc2: mov qword ptr [rip+0x5587b], 0x0; add rsp, 0x8; ret; 
0x00000000191d95: mov qword ptr [rip+0x56110], 0x0; ret; 
0x00000000191ec7: mov qword ptr [rip+0x56cce], 0x0; pop rbx; ret; 
0x000000001570ae: mov qword ptr [rip+0x921c7], 0x0; add rsp, 0x8; ret; 
0x0000000011bd8f: mov qword ptr [rip+0xc75e6], 0x0; ret; 
0x0000000011bd66: mov qword ptr [rip+0xc760f], 0x0; ret; 
0x0000000011bd35: mov qword ptr [rip+0xc7640], 0x2; ret; 
0x0000000011bd0f: mov qword ptr [rip+0xc7666], 0x0; ret; 
0x0000000011b998: mov qword ptr [rip+0xc79dd], 0x0; add rsp, 0x8; ret; 
0x0000000011b963: mov qword ptr [rip+0xc7a12], 0x3; add rsp, 0x8; ret; 
0x000000001125eb: mov qword ptr [rip+0xd518a], 0x0; mov qword ptr [rip+0xd518f], 0x0; add rsp, 0x8; ret; 
0x000000001125f6: mov qword ptr [rip+0xd518f], 0x0; add rsp, 0x8; ret; 
0x00000000110e09: mov qword ptr [rip+0xd682c], 0x0; add rsp, 0x8; ret; 
0x00000000142e2d: mov qword ptr [rsi+0x10], 0x2; test eax, eax; je short 0x0000000000142e40; xor eax, eax; ret; 
0x00000000142f8d: mov qword ptr [rsi+0x8], 0x0; mov [rsi+0x10], rax; ret; 
0x00000000142ef2: mov qword ptr [rsi+0x8], 0x1; mov [rsi+0x10], rax; ret; 
0x00000000090e88: mov qword ptr [rsi], 0x0; mov eax, 0xffffffff; ret; 
0x0000000010fa81: mov qword ptr [rsp+0x18], 0xffffffffffffffff; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000cce21: mov qword ptr [rsp+0x40], 0x0; push 0x0; push 0x0; lea r8, [rsp+0x40]; call qword ptr [rax+0x270]; 
0x0000000010fa78: mov qword ptr [rsp+0x8], 0xffffffffffffffff; mov qword ptr [rsp+0x18], 0xffffffffffffffff; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000040533: mov qword ptr [rsp-0x18], 0x0; fld st, tbyte ptr [rsp-0x18]; ret; 
0x000000000404dc: mov qword ptr [rsp-0x18], 0x0; mov [rsp-0x10], ax; fstp tbyte ptr [rdi], st; fld st, tbyte ptr [rsp-0x18]; ret; 
0x000000001423bf: mov qword ptr [rsp], 0x0; call qword ptr [rax+0x20]; 
0x00000000137ad3: mov qword ptr [rsp], 0x0; call rax; 
0x000000001379eb: mov qword ptr [rsp], 0x0; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000015a4f0: mov qword ptr fs:[r12], 0x0; mov rax, [rsp+0x10]; mov rdi, [rsp+0x18]; call rax; 
0x0000000014ce61: mov qword ptr fs:[rbx], 0x0; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000000ce5b5: mov r10, [r9]; add [rbp+0x1], cl; ret; 
0x000000001247ca: mov r10, [rbp-0xd0]; mov edi, ebx; mov rdx, rax; mov rsi, r8; call qword ptr [r10+0x28]; 
0x0000000010e848: mov r10, [rip+0xd45f9]; mov esi, 0x5401; mov eax, r8d; mov ebx, fs:[r10]; syscall; 
0x00000000119209: mov r10, [rsp+0x8]; mov eax, 0x38; syscall; 
0x000000000debe9: mov r10, r12; lea rsi, [rip+0xcf5ef]; mov eax, 0x142; syscall; 
0x0000000010f6d6: mov r10, r12; mov edx, r15d; mov edi, ebp; mov eax, 0x147; syscall; 
0x0000000010f836: mov r10, r12; mov edx, r15d; mov edi, ebp; mov eax, 0x148; syscall; 
0x000000000d8ffb: mov r10, r13; mov rdx, r12; mov esi, ebp; mov eax, 0xe6; syscall; 
0x00000000113670: mov r10, r8; mov r8, r9; mov r9, [rsp+0x8]; syscall; 
0x0000000010a0a4: mov r10, rcx; mov eax, 0x104; syscall; 
0x00000000060ff4: mov r10, rcx; mov eax, 0x108; syscall; 
0x0000000010a894: mov r10, rcx; mov eax, 0x109; syscall; 
0x0000000010a954: mov r10, rcx; mov eax, 0x10b; syscall; 
0x0000000010e5b4: mov r10, rcx; mov eax, 0x11; syscall; 
0x00000000119a34: mov r10, rcx; mov eax, 0x11e; syscall; 
0x00000000119c24: mov r10, rcx; mov eax, 0x12d; syscall; 
0x000000001194b4: mov r10, rcx; mov eax, 0x12e; syscall; 
0x0000000011a104: mov r10, rcx; mov eax, 0x12f; syscall; 
0x00000000119b04: mov r10, rcx; mov eax, 0x136; syscall; 
0x00000000119b44: mov r10, rcx; mov eax, 0x137; syscall; 
0x00000000119f24: mov r10, rcx; mov eax, 0x19; syscall; 
0x0000000010dc94: mov r10, rcx; mov eax, 0x28; syscall; 
0x0000000011a964: mov r10, rcx; mov eax, 0x35; syscall; 
0x0000000011a8d4: mov r10, rcx; mov eax, 0x36; syscall; 
0x0000000011a424: mov r10, rcx; mov eax, 0x37; syscall; 
0x00000000119ef4: mov r10, rcx; mov eax, 0xa5; syscall; 
0x00000000119dd4: mov r10, rcx; mov eax, 0xaf; syscall; 
0x00000000119fb4: mov r10, rcx; mov eax, 0xb2; syscall; 
0x00000000119fe4: mov r10, rcx; mov eax, 0xb3; syscall; 
0x00000000117034: mov r10, rcx; mov eax, 0xbc; syscall; 
0x00000000116fd4: mov r10, rcx; mov eax, 0xbd; syscall; 
0x00000000116eb4: mov r10, rcx; mov eax, 0xbe; syscall; 
0x00000000116ee4: mov r10, rcx; mov eax, 0xbf; syscall; 
0x00000000116f44: mov r10, rcx; mov eax, 0xc0; syscall; 
0x00000000116e24: mov r10, rcx; mov eax, 0xc1; syscall; 
0x00000000113a14: mov r10, rcx; mov eax, 0xd8; syscall; 
0x0000000011b234: mov r10, rcx; mov eax, 0xdc; syscall; 
0x00000000119d74: mov r10, rcx; mov eax, 0xe9; syscall; 
0x00000000061034: mov r10, rcx; test r8d, r8d; je short 0x0000000000061080; mov eax, 0x13c; syscall; 
0x0000000010f630: mov r10, rcx; xor r8d, r8d; mov eax, 0x147; syscall; 
0x0000000010f790: mov r10, rcx; xor r8d, r8d; mov eax, 0x148; syscall; 
0x0000000010da07: mov r10, rdx; mov eax, 0x11d; mov rdx, rsi; xor esi, esi; syscall; 
0x0000000007bf6a: mov r10d, 0x1; jmp rcx; 
0x0000000007bf6b: mov r10d, 0x1; jmp rcx; 
0x0000000004263b: mov r10d, 0x8; mov eax, 0x80; syscall; 
0x00000000041a19: mov r10d, 0x8; mov eax, 0xd; syscall; 
0x00000000053004: mov r10d, 0x8; mov eax, 0xe; syscall; 
0x00000000091b0b: mov r10d, 0x8; mov rsi, r8; mov eax, 0xe; syscall; 
0x0000000003fb09: mov r10d, [rcx+rax*4+0x8]; add r10, [rdi+0x20]; mov rax, r10; ret; 
0x000000000de738: mov r10d, [rsp+0x1c]; mov rdx, [rsp+0x10]; mov eax, 0xf7; syscall; 
0x00000000113819: mov r10d, ebx; mov rdi, rbp; mov eax, 0x9; syscall; 
0x00000000119924: mov r10d, ecx; cmp ecx, 0xffffffff; je short 0x0000000000119958; mov eax, 0x149; syscall; 
0x0000000010dd94: mov r10d, ecx; mov eax, 0x118; syscall; 
0x00000000108414: mov r10d, ecx; mov eax, 0x14c; syscall; 
0x0000000010d7d4: mov r10d, ecx; mov eax, 0xdd; syscall; 
0x0000000010ddd4: mov r10d, ecx; test rsi, rsi; je short 0x000000000010de02; mov eax, 0x118; syscall; 
0x000000001193e4: mov r10d, edx; mov eax, 0x121; mov edx, 0x8; syscall; 
0x00000000161390: mov r11, [rsi-0x10]; mov rdx, [rsi-0x8]; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x00000000129871: mov r11d, 0x401f0f; mov eax, edi; shr eax, 0x18; ret; 
0x000000001297e0: mov r11d, 0x441f0f; add [rcx-0xda08], cl; inc dword ptr [rax]; ret; 
0x00000000167056: mov r11d, 0x46f00ff2; ret far; 
0x00000000161ba1: mov r11d, 0x4f7f0ff3; ret far; 
0x0000000006a174: mov r11d, [rbp-0x5c0]; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x00000000114aca: mov r12, [rbp+0x10]; test r12, r12; jne short 0x0000000000114b1c; mov rdi, [rbp]; call rbx; 
0x00000000114ac9: mov r12, [rbp+0x10]; test r12, r12; jne short 0x0000000000114b1c; mov rdi, [rbp]; call rbx; 
0x00000000115913: mov r12, [rbp+0x10]; test r12, r12; jne short 0x0000000000115940; mov rdi, [rbp]; call rbx; 
0x000000000453c9: mov r12, [rip+0x19d968]; mov rax, fs:[r12]; lock add qword ptr [rax+0x460], 0x1; lea rdi, [rbp+0x988]; call qword ptr [rbp+0xf90]; 
0x0000000008a6c3: mov r12, rax; mov rax, r12; pop r12; ret; 
0x00000000093846: mov r12, rdx; je short 0x000000000009386a; mov r13, [rip+0x14f53e]; xor edi, edi; call qword ptr [r13]; 
0x00000000143de4: mov r12, rsp; lea rsi, [rsp+0x8]; call qword ptr [rax]; 
0x0000000007bda3: mov r12d, 0x1; jmp rcx; 
0x0000000007bda2: mov r12d, 0x1; jmp rcx; 
0x000000001117e0: mov r12d, 0xe8c03150; out 0xe4, al; hlt; call far fword ptr [rdx+0x59]; 
0x0000000015083b: mov r12d, eax; mov eax, eax; mov [rsp], rax; mov rax, [rbp+0x8]; call qword ptr [rax+0x8]; 
0x00000000142557: mov r12d, eax; mov rax, [rdi+0x8]; call qword ptr [rax+0x20]; 
0x000000001423ed: mov r12d, eax; xor eax, eax; call qword ptr [rbx+0x28]; 
0x00000000114afa: mov r13, [r12+0x10]; test r13, r13; jne short 0x0000000000114b7b; mov rdi, [r12]; call rbx; 
0x00000000114b2b: mov r13, [r12+0x10]; test r13, r13; jne short 0x0000000000114bb0; mov rdi, [r12]; call rbx; 
0x00000000115977: mov r13, [r12+0x10]; test r13, r13; jne short 0x00000000001159e0; mov rdi, [r12]; call rbx; 
0x0000000009384b: mov r13, [rip+0x14f53e]; xor edi, edi; call qword ptr [r13]; 
0x0000000015936e: mov r13, [rip+0x89a43]; mov [rsp+0x8], rcx; lea rdi, [r13+0x988]; call qword ptr [r13+0xf88]; 
0x000000000ff76a: mov r13, [rip+0xe36d7]; add rbx, fs:[0x0]; mov r9, rbx; add r8, r13; call r14; 
0x00000000043acd: mov r13, r15; mov rax, [rsp]; add r15, r12; call rax; 
0x00000000042cc7: mov r13, rax; mov rdi, r12; call rbx; 
0x0000000009b845: mov r13, rax; test r13, r13; jne 0x000000000009b6f1; mov rax, [rip+0x1476d8]; call qword ptr [rax]; 
0x000000001150e2: mov r13, rbx; mov rdi, rbp; call r12; 
0x00000000094bfe: mov r13, rdi; test rdi, rdi; js 0x0000000000094d94; mov rax, [rip+0x14e17f]; call qword ptr [rax]; 
0x00000000075b3d: mov r13d, 0x1; jmp rsi; 
0x00000000076243: mov r13d, 0x1; mov ecx, 0x1; jmp rsi; 
0x00000000074beb: mov r13d, 0x1; xor ecx, ecx; jmp rsi; 
0x000000001509d3: mov r13d, eax; and eax, 0xffffffff; mov [rsp], rax; mov rax, [rbp+0x8]; call qword ptr [rax+0x8]; 
0x000000001594fe: mov r14d, 0x1; mov [rbp+0x18], rax; lea rdi, [r13+0x988]; call qword ptr [r13+0xf90]; 
0x0000000014a884: mov r15, [rsp+0x68]; mov rdi, [rax]; mov rsi, r15; mov rax, [rdi+0x38]; call qword ptr [rax+0x8]; 
0x000000000c00fd: mov r15, r14; jmp qword ptr [rsi+0x66]; 
0x00000000104ab4: mov r15d, eax; movsxd rax, [rdx+r15*4]; add rax, rdx; notrack jmp rax; 
0x000000001151b2: mov r15d, r13d; call rax; 
0x000000000f977b: mov r8, [rax]; mov [rax], rdi; mov rax, r8; ret; 
0x00000000159d1a: mov r8, [rbx+0x10]; call qword ptr [rax+0x270]; 
0x00000000090b0b: mov r8, [rdi+0x8]; mov rax, [rdi]; mov rdi, r8; jmp rax; 
0x0000000005316d: mov r8, [rdx+0x28]; mov r9, [rdx+0x30]; mov rdx, [rdx+0x88]; xor eax, eax; ret; 
0x00000000079e8b: mov r8, [rip+0x16f456]; mov [rbp-0x8c0], rax; mov [rbp-0x8b0], rsi; call qword ptr [r8+rcx*8-0x40]; 
0x0000000007423c: mov r8, [rip+0x1750a5]; mov [rbp-0x8b0], rax; mov [rbp-0x8a0], rsi; call qword ptr [r8+rcx*8-0x40]; 
0x00000000141abe: mov r8, [rsp+0x28]; mov rcx, [rsp+0x20]; mov rdx, [rsp+0x18]; mov rsi, [rsp+0x10]; call qword ptr [rax]; 
0x00000000033bd6: mov r8, [rsp+0x48]; mov rcx, [rsp+0x18]; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; call r15; 
0x00000000139f20: mov r8, r10; mov rax, r10; mov byte ptr [r8], 0x0; ret; 
0x0000000014c73a: mov r8, r13; mov rcx, r12; mov rdx, rbp; mov rsi, rbx; call rax; 
0x0000000012c417: mov r8, r15; mov rcx, rbp; mov rdx, r14; mov rsi, r12; call qword ptr [rsp+0x40]; 
0x00000000129f30: mov r8, r15; mov rdi, r12; mov edx, [rsp+0x38]; call qword ptr [rsp+0x60]; 
0x00000000119206: mov r8, r9; mov r10, [rsp+0x8]; mov eax, 0x38; syscall; 
0x00000000113673: mov r8, r9; mov r9, [rsp+0x8]; syscall; 
0x0000000013f816: mov r8, rbp; mov rcx, r14; mov rdi, r13; call r12; 
0x00000000159d9c: mov r8, rbx; call qword ptr [rax+0x270]; 
0x0000000012b9f5: mov r8, rbx; mov rdx, rbp; call qword ptr [rsp+0x60]; 
0x00000000159e72: mov r8, rbx; mov rsi, r12; xor r9d, r9d; mov rdi, rbp; call qword ptr [rax+0x270]; 
0x00000000084840: mov r8, rcx; lea rdx, [r8+rdx*4]; mov [rax], rdx; xor eax, eax; ret; 
0x00000000111d6b: mov r8, rdi; mov byte ptr [rsi-0x1], 0x0; mov rax, r8; ret; 
0x0000000015a810: mov r8, rdi; test eax, eax; jne short 0x000000000015a82c; mov eax, 0x27; syscall; 
0x00000000091b07: mov r8, rsi; mov r10d, 0x8; mov rsi, r8; mov eax, 0xe; syscall; 
0x000000000e4258: mov r8b, 0xe8; shl dword ptr [rax], 0xf4; dec dword ptr [rax-0x77]; ret; 
0x000000000debe2: mov r8d, 0x1000; mov r10, r12; lea rsi, [rip+0xcf5ef]; mov eax, 0x142; syscall; 
0x000000000debe3: mov r8d, 0x1000; mov r10, r12; lea rsi, [rip+0xcf5ef]; mov eax, 0x142; syscall; 
0x0000000015117b: mov r8d, 0x1; mov [rdi+0x28], eax; mov [rdi+0x18], rsi; mov eax, r8d; ret; 
0x00000000112269: mov r8d, 0x1; mov eax, r8d; add rsp, 0x8; ret; 
0x000000000895d0: mov r8d, 0x1; mov eax, r8d; ret; 
0x000000001122a2: mov r8d, 0x1; or dword ptr [rax], 0x8000; add rsp, 0x8; mov eax, r8d; ret; 
0x000000000918c8: mov r8d, 0x3; mov eax, r8d; ret; 
0x0000000010d6ff: mov r8d, 0x8; mov rdx, r12; mov eax, 0x10f; syscall; 
0x00000000156c99: mov r8d, 0xffffffff; mov dword ptr fs:[rax], 0x16; mov eax, r8d; mov qword ptr [rdx], 0x0; ret; 
0x00000000081d7c: mov r8d, 0xffffffff; mov eax, r8d; pop rbp; pop r12; ret; 
0x000000000c2d2d: mov r8d, 0xffffffff; mov eax, r8d; pop rbx; ret; 
0x00000000052ebe: mov r8d, 0xffffffff; mov eax, r8d; ret; 
0x0000000015c719: mov r8d, 0xffffffff; mov fs:[rdx], eax; mov eax, r8d; ret; 
0x0000000009c5e5: mov r8d, [r8]; add [rax-0x73], cl; adc eax, 0x138a0; cmovne rax, rdx; ret; 
0x0000000011cce8: mov r8d, [rax+rdx]; shr r8d, cl; and r8d, 0x1; mov eax, r8d; ret; 
0x00000000084962: mov r8d, [rax]; mov eax, r8d; ret; 
0x000000000847c6: mov r8d, [rdi+0x10]; sub r8d, eax; mov eax, r8d; ret; 
0x000000000388bb: mov r8d, [rdx+rax]; mov eax, r8d; ret; 
0x0000000006104b: mov r8d, eax; cmp eax, 0xffffffff; je short 0x0000000000061060; mov eax, r8d; ret; 
0x0000000010eb0b: mov r8d, eax; mov eax, 0x10; syscall; 
0x00000000109511: mov r8d, eax; mov eax, 0x3; syscall; 
0x00000000110131: mov r8d, eax; mov eax, 0x4a; syscall; 
0x000000001101f1: mov r8d, eax; mov eax, 0x4b; syscall; 
0x00000000109699: mov r8d, eax; mov eax, 0x55; syscall; 
0x00000000041c70: mov r8d, eax; mov eax, 0x82; syscall; 
0x000000001198d7: mov r8d, eax; mov eax, r8d; ret; 
0x000000000d9177: mov r8d, eax; mov edi, 0x1; mov eax, 0xe6; syscall; 
0x00000000108a75: mov r8d, eax; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x0000000011982d: mov r8d, eax; mov edi, [rsp+0x8]; mov eax, 0x130; syscall; 
0x0000000010f37f: mov r8d, eax; mov edi, [rsp+0x8]; mov eax, 0x13; syscall; 
0x0000000010f41f: mov r8d, eax; mov edi, [rsp+0x8]; mov eax, 0x14; syscall; 
0x00000000108d81: mov r8d, eax; mov edi, [rsp+0x8]; mov eax, 0x1; syscall; 
0x0000000011a35d: mov r8d, eax; mov edi, [rsp+0x8]; mov eax, 0x2a; syscall; 
0x0000000011a79f: mov r8d, eax; mov edi, [rsp+0x8]; mov eax, 0x2e; syscall; 
0x0000000011a63f: mov r8d, eax; mov edi, [rsp+0x8]; mov eax, 0x2f; syscall; 
0x00000000109209: mov r8d, eax; mov edi, [rsp+0x8]; mov eax, 0x48; syscall; 
0x00000000108ce1: mov r8d, eax; mov edi, [rsp+0x8]; xor eax, eax; syscall; 
0x0000000011a291: mov r8d, eax; mov edi, [rsp+0xc]; mov eax, 0x2b; syscall; 
0x0000000011960c: mov r8d, eax; mov esi, [rsp+0x18]; mov edi, [rsp+0x8]; mov eax, 0x114; syscall; 
0x0000000010e25d: mov r8d, eax; mov esi, [rsp+0xc]; mov edi, [rsp+0x8]; mov eax, 0x11d; syscall; 
0x000000000d90d3: mov r8d, eax; mov esi, ebp; mov eax, 0xe6; syscall; 
0x000000000426b2: mov r8d, eax; mov r10d, 0x8; mov eax, 0x80; syscall; 
0x00000000046400: mov r8d, eax; mov rdi, [rsp+0x8]; mov eax, 0x13e; syscall; 
0x00000000113950: mov r8d, eax; mov rdi, [rsp+0x8]; mov eax, 0x1a; syscall; 
0x0000000010d660: mov r8d, eax; mov rdi, [rsp+0x8]; mov eax, 0x7; syscall; 
0x00000000108c00: mov r8d, eax; mov rsi, [rsp+0x10]; mov edi, [rsp+0x18]; mov eax, 0x101; syscall; 
0x0000000011ae1b: mov r8d, eax; mov rsi, [rsp+0x10]; mov edi, [rsp+0xc]; mov eax, 0x133; syscall; 
0x0000000011955b: mov r8d, eax; mov rsi, [rsp+0x10]; mov edi, [rsp+0xc]; mov eax, 0xe8; syscall; 
0x000000000de67c: mov r8d, eax; mov rsi, [rsp+0x8]; mov edi, [rsp+0x10]; mov eax, 0x3d; syscall; 
0x0000000010e1ad: mov r8d, eax; mov rsi, [rsp+0x8]; mov edi, [rsp+0x18]; mov eax, 0x115; syscall; 
0x0000000011acad: mov r8d, eax; mov rsi, [rsp+0x8]; mov edi, [rsp+0x18]; mov eax, 0x120; syscall; 
0x0000000011afbd: mov r8d, eax; mov rsi, [rsp+0x8]; mov edi, [rsp+0x18]; mov eax, 0x45; syscall; 
0x000000001196bc: mov r8d, eax; mov rsi, [rsp+0x8]; mov edi, [rsp]; mov eax, 0x116; syscall; 
0x00000000106cdd: mov r8d, eax; mov rsi, [rsp+0x8]; mov edi, [rsp]; mov eax, 0x11; syscall; 
0x00000000106d8d: mov r8d, eax; mov rsi, [rsp+0x8]; mov edi, [rsp]; mov eax, 0x12; syscall; 
0x00000000050a7a: mov r8d, edx; or r8d, eax; mov rax, r8; ret; 
0x00000000053171: mov r9, [rdx+0x30]; mov rdx, [rdx+0x88]; xor eax, eax; ret; 
0x00000000182c43: mov r9, [rsi+rdx-0x7]; mov [rdi], rcx; mov [rdi+rdx-0x7], r9; vzeroupper; ret; 
0x000000000c6fe9: mov r9, [rsp+0x10]; call r13; 
0x000000000b9fb9: mov r9, [rsp+0x10]; mov rdi, rbp; mov rsi, [rsp+0x18]; call rbx; 
0x000000000b9d3a: mov r9, [rsp+0x10]; mov rdi, rbp; mov rsi, [rsp+0x18]; call rbx; 
0x0000000002cccf: mov r9, [rsp+0x18]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; mov rax, [rsp+0x28]; call rax; 
0x0000000002e0df: mov r9, [rsp+0x20]; mov rcx, [rsp+0x30]; mov rsi, [rsp+0x60]; mov rdi, [rsp+0x58]; call r13; 
0x000000000daee5: mov r9, [rsp+0x20]; mov rdx, [rsp+0x28]; mov rax, [rsp+0x18]; call rax; 
0x0000000002fd2c: mov r9, [rsp+0x40]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x48]; mov rax, [rsp+0x28]; call rax; 
0x0000000002ed7d: mov r9, [rsp+0x40]; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; call r14; 
0x00000000113676: mov r9, [rsp+0x8]; syscall; 
0x00000000129f2d: mov r9, r13; mov r8, r15; mov rdi, r12; mov edx, [rsp+0x38]; call qword ptr [rsp+0x60]; 
0x000000000c68b5: mov r9, r14; mov rsi, [rsp+0x18]; mov rcx, r12; mov rdx, r13; call rbx; 
0x00000000029872: mov r9, r14; mov rsi, [rsp+0x18]; xor r8d, r8d; call rbx; 
0x000000000c6a3c: mov r9, r14; mov rsi, [rsp+0x18]; xor r8d, r8d; mov rdi, rbp; call rbx; 
0x0000000012b9ee: mov r9, r15; mov edi, [rsp+0x38]; mov r8, rbx; mov rdx, rbp; call qword ptr [rsp+0x60]; 
0x0000000012a96c: mov r9, r15; mov rcx, [rsp+0x38]; mov esi, r14d; mov rdi, r13; call qword ptr [rsp+0x50]; 
0x0000000014b930: mov r9, rbp; mov esi, 0x9; call qword ptr [rax]; 
0x000000000ff77a: mov r9, rbx; add r8, r13; call r14; 
0x0000000012aede: mov r9, rbx; mov rcx, r12; mov rsi, rbp; mov rdi, r13; call qword ptr [rsp+0x40]; 
0x000000000bd8ff: mov r9b, 0xf7; jmp qword ptr [rsi+0x66]; 
0x0000000007b1d0: mov r9d, 0x1; jmp rcx; 
0x0000000007b1cf: mov r9d, 0x1; jmp rcx; 
0x0000000007bf4b: mov r9d, 0x1; mov edx, 0x1; jmp rcx; 
0x0000000007a6e3: mov r9d, 0x1; xor edx, edx; jmp rcx; 
0x000000000762ab: mov r9d, 0x1; xor edx, edx; jmp rsi; 
0x00000000119323: mov r9d, 0x8; mov eax, 0x119; syscall; 
0x000000000fd349: mov r9d, 0xffffffff; mov fs:[rdx], eax; mov eax, r9d; ret; 
0x0000000010f4d5: mov r9d, eax; mov edx, [rsp+0x14]; mov rsi, [rsp+0x8]; mov eax, 0x127; syscall; 
0x0000000010f595: mov r9d, eax; mov edx, [rsp+0x14]; mov rsi, [rsp+0x8]; mov eax, 0x128; syscall; 
0x000000000de735: mov r9d, eax; mov r10d, [rsp+0x1c]; mov rdx, [rsp+0x10]; mov eax, 0xf7; syscall; 
0x0000000010d75c: mov r9d, eax; mov rdi, [rsp+0x8]; mov rdx, r12; mov eax, 0x10f; syscall; 
0x0000000010f62d: mov r9d, r8d; mov r10, rcx; xor r8d, r8d; mov eax, 0x147; syscall; 
0x0000000010f78d: mov r9d, r8d; mov r10, rcx; xor r8d, r8d; mov eax, 0x148; syscall; 
0x000000000cbb20: mov rax, 0x1; ret; 
0x000000000cbb30: mov rax, 0x2; ret; 
0x000000000cbb40: mov rax, 0x3; ret; 
0x000000000cbb50: mov rax, 0x4; ret; 
0x000000000cbb60: mov rax, 0x5; ret; 
0x000000001148e0: mov rax, 0x5c415d5b00000001; pop r13; pop r14; pop r15; ret; 
0x00000000148dba: mov rax, 0x5c415d5b00000001; pop r13; ret; 
0x000000000e7f31: mov rax, 0x5c415d5bffffffff; pop r13; pop r14; pop r15; ret; 
0x000000000462af: mov rax, 0x5deece66d; mov [rsi+0x10], rax; xor eax, eax; mov dword ptr [rsi+0xc], 0x1000b; ret; 
0x000000000462fe: mov rax, 0x5deece66d; mov [rsi+0x10], rax; xor eax, eax; ret; 
0x000000000cbb70: mov rax, 0x6; ret; 
0x00000000059740: mov rax, 0x7974742f7665642f; mov byte ptr [rdi+0x8], 0x0; mov [rdi], rax; mov rax, rdi; ret; 
0x000000000cbb80: mov rax, 0x7; ret; 
0x00000000040ebb: mov rax, 0x7fff000000000000; sub rax, rdx; shr rax, 0x3f; ret; 
0x000000000408a0: mov rax, 0x8000000000000000; and rdx, rax; mov [rdi], rdx; ret; 
0x00000000040870: mov rax, 0x8000000000000000; and rdx, rax; movq xmm0, rdx; ret; 
0x00000000055c70: mov rax, 0x8000000000000000; mov [r8], rax; mov eax, 0x1; mov dword ptr [rdx], 0xffffc002; ret; 
0x0000000004082d: mov rax, 0x8000000000000000; movsd [rdi], xmm0; and rdx, rax; movq xmm0, rdx; ret; 
0x00000000041950: mov rax, 0xf; syscall; 
0x00000000042309: mov rax, 0xfffffffe7fffffff; mov [rdi], rax; xor eax, eax; ret; 
0x0000000004085c: mov rax, 0xfffffffffffff; test rdx, rax; je short 0x0000000000040870; ret; 
0x00000000042399: mov rax, 0xfffffffffffffffe; rol rax, cl; and [rdi], rax; xor eax, eax; ret; 
0x00000000137780: mov rax, 0xffffffffffffffff; mov rdx, 0xffffffffffffffff; ret; 
0x000000000417ee: mov rax, 0xffffffffffffffff; ret; 
0x00000000091955: mov rax, [0x10]; ret; 
0x000000000cc33b: mov rax, [0x28]; mov [rsp+0x58], rax; xor eax, eax; mov [rsp+0x50], r12; call rbx; 
0x0000000015916a: mov rax, [0x28]; mov [rsp+0x68], rax; xor eax, eax; call qword ptr [r12+0xf88]; 
0x00000000050255: mov rax, [0x28]; mov [rsp+0x8], rax; xor eax, eax; mov eax, 0x3e; syscall; 
0x0000000014284c: mov rax, [r12+0x38]; mov rdi, r12; call qword ptr [rax+0x20]; 
0x00000000141e45: mov rax, [r12+0x8]; mov rdi, r12; call qword ptr [rax+0x20]; 
0x000000000453d1: mov rax, [r12]; lock add qword ptr [rax+0x460], 0x1; lea rdi, [rbp+0x988]; call qword ptr [rbp+0xf90]; 
0x0000000014786b: mov rax, [r13+0xd0]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x0000000014a333: mov rax, [r14+0x70]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x00000000143980: mov rax, [r14+0x8]; mov rsi, [rbx+0x10]; mov rdx, r12; mov rdi, r14; call qword ptr [rax+0x10]; 
0x000000001439ba: mov rax, [r14+0x8]; mov rsi, [rbx+0x10]; mov rdx, r12; mov rdi, r14; call qword ptr [rax+0x20]; 
0x0000000014b057: mov rax, [r15+0x60]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x0000000014ca26: mov rax, [r15+0x8]; mov rdi, r15; call qword ptr [rax+0x20]; 
0x0000000014c337: mov rax, [r8+0x38]; mov rdi, r8; call qword ptr [rax+0x20]; 
0x00000000149d60: mov rax, [r8]; bswap eax; mov [rdi+0x54], eax; mov eax, 0x1; ret; 
0x00000000149d40: mov rax, [r8]; bswap eax; mov [rdi+0x58], eax; mov eax, 0x1; ret; 
0x00000000159cd7: mov rax, [rax+0x10]; add rsp, 0x38; jmp rax; 
0x0000000014f891: mov rax, [rax+0x10]; add rsp, 0x8; pop rbp; pop r12; jmp rax; 
0x00000000045727: mov rax, [rax+0x10]; pop rbx; mov qword ptr [rip+0x1a0c29], 0x0; mov eax, [rax+0x58]; ret; 
0x00000000091f9e: mov rax, [rax+0x10]; test rax, rax; je short 0x0000000000091fa9; call rax; 
0x0000000011c0d7: mov rax, [rax+0x18]; add dword ptr [rax], 0x1; ret; 
0x00000000159bec: mov rax, [rax+0x18]; add rsp, 0x68; jmp rax; 
0x0000000014f851: mov rax, [rax+0x18]; add rsp, 0x8; pop rbp; pop r12; jmp rax; 
0x0000000011c0c7: mov rax, [rax+0x18]; add word ptr [rax], 0x1; ret; 
0x0000000014133a: mov rax, [rax+0x18]; jmp rax; 
0x00000000044a60: mov rax, [rax+0x18]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000010fbab: mov rax, [rax+0x18]; test rax, rax; je short 0x000000000010fbb5; ret; 
0x00000000086264: mov rax, [rax+0x20]; jmp rax; 
0x000000000d8f07: mov rax, [rax+0x230]; test rax, rax; je short 0x00000000000d8f40; call rax; 
0x00000000143812: mov rax, [rax+0x23b8]; mov rdi, r12; call qword ptr [rax+0x28]; 
0x00000000107ea8: mov rax, [rax+0x248]; test rax, rax; je short 0x0000000000107ee8; xor edx, edx; call rax; 
0x000000000d8e97: mov rax, [rax+0x250]; test rax, rax; je short 0x00000000000d8ed0; call rax; 
0x000000001170c0: mov rax, [rax+0x258]; ret; 
0x00000000159742: mov rax, [rax+0x268]; jmp rax; 
0x00000000126b2f: mov rax, [rax+0x30]; ret; 
0x00000000142b1d: mov rax, [rax+0x38]; test rax, rax; je 0x00000000001429ae; mov rdi, rbx; call rax; 
0x0000000014141f: mov rax, [rax+0x38]; test rax, rax; je short 0x000000000014142d; mov rdi, rbp; call rax; 
0x000000001418b6: mov rax, [rax+0x38]; test rax, rax; je short 0x00000000001418c4; mov rdi, rbp; call rax; 
0x000000001428b5: mov rax, [rax+0x38]; test rax, rax; je short 0x00000000001428c3; mov rdi, rbx; call rax; 
0x00000000142c0b: mov rax, [rax+0x38]; test rax, rax; je short 0x0000000000142c19; mov rdi, rbx; call rax; 
0x00000000143433: mov rax, [rax+0x38]; test rax, rax; je short 0x0000000000143441; mov rdi, r13; call rax; 
0x00000000146e40: mov rax, [rax+0x38]; test rax, rax; je short 0x0000000000146e52; lea rdi, [rbp+0xc8]; call rax; 
0x00000000147886: mov rax, [rax+0x38]; test rax, rax; je short 0x0000000000147894; mov rdi, rbp; call rax; 
0x00000000147a6b: mov rax, [rax+0x38]; test rax, rax; je short 0x0000000000147a7b; lea rdi, [r12+0x10]; call rax; 
0x00000000148d2a: mov rax, [rax+0x38]; test rax, rax; je short 0x0000000000148d38; mov rdi, rbp; call rax; 
0x00000000148efe: mov rax, [rax+0x38]; test rax, rax; je short 0x0000000000148f0d; mov rdi, r13; call rax; 
0x00000000149c1d: mov rax, [rax+0x38]; test rax, rax; je short 0x0000000000149c2c; lea rdi, [rbp+0x68]; call rax; 
0x0000000014a345: mov rax, [rax+0x38]; test rax, rax; je short 0x000000000014a353; mov rdi, rbp; call rax; 
0x0000000014a6bd: mov rax, [rax+0x38]; test rax, rax; je short 0x000000000014a6cc; lea rdi, [rbp+0x58]; call rax; 
0x0000000014df8b: mov rax, [rax+0x38]; test rax, rax; je short 0x000000000014df9b; lea rdi, [r12+0x10]; call rax; 
0x0000000014e6d4: mov rax, [rax+0x38]; test rax, rax; je short 0x000000000014e6e4; lea rdi, [r12+0x10]; call rax; 
0x00000000149bc0: mov rax, [rax+0x40]; mov [rsi+0x10], rax; ret; 
0x00000000038f45: mov rax, [rax+0x40]; movzx eax, word ptr [rax+rdi*2+0x100]; and eax, esi; ret; 
0x00000000038d55: mov rax, [rax+0x48]; mov eax, [rax+rdi*4+0x200]; ret; 
0x00000000038ce5: mov rax, [rax+0x48]; mov eax, [rax+rdx*4]; ret; 
0x0000000014a4f0: mov rax, [rax+0x50]; mov [rsi+0x10], rax; ret; 
0x00000000038d25: mov rax, [rax+0x58]; mov eax, [rax+rdi*4+0x200]; ret; 
0x00000000038cb5: mov rax, [rax+0x58]; mov eax, [rax+rdx*4]; ret; 
0x00000000038ffe: mov rax, [rax+0x58]; mov rdx, [rip+0x1a9ef7]; add rax, 0x200; mov fs:[rdx], rax; ret; 
0x000000001170b8: mov rax, [rax+0x58]; ret; 
0x0000000008ed4f: mov rax, [rax+0x68]; test rax, rax; jne short 0x000000000008ed48; ret; 
0x0000000014fac6: mov rax, [rax+0x8]; add rsp, 0x10; pop rbp; jmp rax; 
0x0000000011709a: mov rax, [rax+0x8]; ret; 
0x00000000091fde: mov rax, [rax+0x8]; test rax, rax; je short 0x0000000000091fe9; call rax; 
0x0000000009b8ba: mov rax, [rax+0x8]; test rax, rax; jne short 0x000000000009b8b0; xor eax, eax; ret; 
0x0000000009b996: mov rax, [rax+0x8]; test rax, rax; jne short 0x000000000009b990; mov eax, r8d; ret; 
0x00000000146dd3: mov rax, [rax+0xa0]; mov [rsi+0x10], rax; ret; 
0x00000000083e14: mov rax, [rax+0xe0]; call qword ptr [rax+0x68]; 
0x00000000083f49: mov rax, [rax+0xe0]; mov esi, 0xffffffff; call qword ptr [rax+0x18]; 
0x0000000008625d: mov rax, [rax+0xe0]; mov rax, [rax+0x20]; jmp rax; 
0x00000000081579: mov rax, [rax+0xe0]; mov rdx, r12; mov rsi, rbp; mov rdi, rbx; call qword ptr [rax+0x58]; 
0x0000000003564d: mov rax, [rax+r13*8]; test rax, rax; je short 0x0000000000035658; call rax; 
0x000000000358ce: mov rax, [rax+rbx*8]; test rax, rax; je short 0x00000000000358d9; call rax; 
0x00000000191525: mov rax, [rax+rbx*8]; test rax, rax; je short 0x0000000000191530; call rax; 
0x00000000038d57: mov rax, [rax+rdi*4+0x200]; ret; 
0x00000000038822: mov rax, [rax+rdi*8+0x80]; ret; 
0x0000000007cd38: mov rax, [rax+rdi*8]; ret; 
0x00000000038ce7: mov rax, [rax+rdx*4]; ret; 
0x000000000373af: mov rax, [rax]; mov eax, [rax+0xa8]; ret; 
0x00000000038f42: mov rax, [rax]; mov rax, [rax+0x40]; movzx eax, word ptr [rax+rdi*2+0x100]; and eax, esi; ret; 
0x00000000038d52: mov rax, [rax]; mov rax, [rax+0x48]; mov eax, [rax+rdi*4+0x200]; ret; 
0x00000000038ce2: mov rax, [rax]; mov rax, [rax+0x48]; mov eax, [rax+rdx*4]; ret; 
0x00000000038d22: mov rax, [rax]; mov rax, [rax+0x58]; mov eax, [rax+rdi*4+0x200]; ret; 
0x00000000038cb2: mov rax, [rax]; mov rax, [rax+0x58]; mov eax, [rax+rdx*4]; ret; 
0x0000000003881f: mov rax, [rax]; mov rax, [rax+rdi*8+0x80]; ret; 
0x000000000373ac: mov rax, [rax]; mov rax, [rax]; mov eax, [rax+0xa8]; ret; 
0x00000000038d4f: mov rax, [rax]; mov rax, [rax]; mov rax, [rax+0x48]; mov eax, [rax+rdi*4+0x200]; ret; 
0x00000000038cdf: mov rax, [rax]; mov rax, [rax]; mov rax, [rax+0x48]; mov eax, [rax+rdx*4]; ret; 
0x00000000038d1f: mov rax, [rax]; mov rax, [rax]; mov rax, [rax+0x58]; mov eax, [rax+rdi*4+0x200]; ret; 
0x00000000038caf: mov rax, [rax]; mov rax, [rax]; mov rax, [rax+0x58]; mov eax, [rax+rdx*4]; ret; 
0x00000000038c7f: mov rax, [rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x1000; ret; 
0x00000000038c5f: mov rax, [rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x100; ret; 
0x00000000038cff: mov rax, [rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x1; ret; 
0x00000000038c3f: mov rax, [rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x2000; ret; 
0x00000000038bbf: mov rax, [rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x200; ret; 
0x00000000038b7f: mov rax, [rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x2; ret; 
0x00000000038bff: mov rax, [rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x4000; ret; 
0x00000000038b5f: mov rax, [rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x400; ret; 
0x00000000038c1f: mov rax, [rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x4; ret; 
0x00000000038bdf: mov rax, [rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x8000; ret; 
0x00000000038b9f: mov rax, [rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x800; ret; 
0x00000000038b3f: mov rax, [rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x8; ret; 
0x00000000126b83: mov rax, [rax]; movzx eax, word ptr [rax+rdx*2]; shr ax, 0xe; and eax, 0x1; ret; 
0x0000000004557a: mov rax, [rax]; pop rbx; mov eax, [rax+0x58]; ret; 
0x0000000013c02c: mov rax, [rax]; ret; 
0x00000000116345: mov rax, [rax]; test rax, rax; je 0x0000000000116440; call rax; 
0x00000000091f26: mov rax, [rax]; test rax, rax; je short 0x0000000000091f30; call rax; 
0x00000000096649: mov rax, [rax]; test rax, rax; je short 0x0000000000096653; call rax; 
0x00000000116166: mov rax, [rax]; test rax, rax; je short 0x00000000001161d0; call rax; 
0x0000000008fb58: mov rax, [rax]; test rax, rax; jne short 0x000000000008fb50; ret; 
0x00000000093891: mov rax, [rax]; test rax, rax; jne short 0x00000000000938d0; xor edi, edi; call qword ptr [r13]; 
0x0000000014e72d: mov rax, [rbp+0x18]; lea r13, [rbp+0x10]; mov dword ptr [rbp+0x10], 0x0; mov rdi, r13; call qword ptr [rax+0x28]; 
0x0000000014e75a: mov rax, [rbp+0x18]; mov rdi, r13; call qword ptr [rax+0x20]; 
0x0000000014e759: mov rax, [rbp+0x18]; mov rdi, r13; call qword ptr [rax+0x20]; 
0x0000000014b30c: mov rax, [rbp+0x60]; mov rdi, r13; call qword ptr [rax+0x20]; 
0x00000000142419: mov rax, [rbp+0x8]; call qword ptr [rax+0x28]; 
0x00000000150844: mov rax, [rbp+0x8]; call qword ptr [rax+0x8]; 
0x000000001430c0: mov rax, [rbp+0x8]; lea esi, [r12+0x3]; mov rdi, rbp; and esi, 0xfffffffc; call qword ptr [rax+0x30]; 
0x00000000148770: mov rax, [rbp+0x8]; lea rsi, [rbx+0x18]; mov rdi, rbp; call qword ptr [rax+0x48]; 
0x0000000014fbb8: mov rax, [rbp+0x8]; lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax+0x8]; 
0x0000000014fb5f: mov rax, [rbp+0x8]; lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax]; 
0x00000000150af6: mov rax, [rbp+0x8]; lea rsi, [rsp+0x4]; mov rdi, rbp; call qword ptr [rax+0x40]; 
0x00000000150b47: mov rax, [rbp+0x8]; lea rsi, [rsp+0x4]; mov rdi, rbp; call qword ptr [rax+0x48]; 
0x00000000143e2e: mov rax, [rbp+0x8]; lea rsi, [rsp+0x8]; mov rdi, rbp; call qword ptr [rax+0x8]; 
0x000000001486d1: mov rax, [rbp+0x8]; lea rsi, [rsp+0xc]; mov rdi, rbp; call qword ptr [rax+0x48]; 
0x0000000014cc59: mov rax, [rbp+0x8]; mov dword ptr [r12], 0xe; lea rsi, [r12+0x8]; mov rdi, rbp; call qword ptr [rax+0x10]; 
0x0000000014867a: mov rax, [rbp+0x8]; mov dword ptr [rsp+0xc], 0xc; mov esi, 0x8; mov rdi, rbp; call qword ptr [rax+0x30]; 
0x00000000143031: mov rax, [rbp+0x8]; mov esi, 0x20; mov rdi, rbp; call qword ptr [rax+0x30]; 
0x000000001430ea: mov rax, [rbp+0x8]; mov esi, 0x8; mov rdi, rbp; call qword ptr [rax+0x30]; 
0x00000000148641: mov rax, [rbp+0x8]; mov esi, 0x8; mov rdi, rbp; mov [r12+0x70], edx; call qword ptr [rax+0x30]; 
0x00000000142434: mov rax, [rbp+0x8]; mov esi, r14d; mov rdi, rbp; call qword ptr [rax+0x28]; 
0x00000000141f83: mov rax, [rbp+0x8]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x0000000014db80: mov rax, [rbp+0x8]; mov rdi, rbp; call qword ptr [rax+0x28]; 
0x0000000014da20: mov rax, [rbp+0x8]; mov rdi, rbp; call qword ptr [rax+0x8]; 
0x000000001423b8: mov rax, [rbp+0x8]; mov rdi, rbp; mov qword ptr [rsp], 0x0; call qword ptr [rax+0x20]; 
0x00000000143df2: mov rax, [rbp+0x8]; mov rsi, r12; mov rdi, rbp; call qword ptr [rax]; 
0x000000001486c0: mov rax, [rbp+0x8]; mov rsi, rbx; mov rdi, rbp; call qword ptr [rax+0x48]; 
0x0000000014da3b: mov rax, [rbp+0x8]; mov rsi, rbx; mov rdi, rbp; call qword ptr [rax]; 
0x0000000015080d: mov rax, [rbp+0x8]; mov rsi, rsp; mov rdi, rbp; call qword ptr [rax]; 
0x0000000014c059: mov rax, [rbp+0x8]; pop rdx; call qword ptr [rax+0x20]; 
0x00000000107ab2: mov rax, [rbp-0x168]; mov rsi, r12; lea rdi, [rip+0xa695c]; mov rdx, [rax+0xb0]; call qword ptr [rax+0x88]; 
0x000000000feedf: mov rax, [rbp-0x1e0]; call rax; 
0x000000000ff0cc: mov rax, [rbp-0x1e0]; mov rcx, [r12]; call rax; 
0x000000001151ae: mov rax, [rbp-0x58]; mov r15d, r13d; call rax; 
0x0000000002a2c5: mov rax, [rbp-0x70]; mov rdi, rbx; call rax; 
0x0000000005590d: mov rax, [rbp-0x8]; sub rax, fs:[0x28]; jne short 0x0000000000055995; leave; ret; 
0x0000000008dfb0: mov rax, [rbx+0x18]; add rsp, 0x10; pop rbx; jmp rax; 
0x00000000089664: mov rax, [rbx+0x20]; mov [rbx+0x28], rax; pop rbx; ret; 
0x000000001418a2: mov rax, [rbx+0x20]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x000000001416a4: mov rax, [rbx+0x20]; mov rdi, rbp; lea r15, [rsp+0x50]; call qword ptr [rax+0x20]; 
0x00000000141660: mov rax, [rbx+0x20]; mov rsi, r13; mov rdi, rbp; call qword ptr [rax+0x8]; 
0x0000000014173c: mov rax, [rbx+0x20]; xor esi, esi; mov rdi, rbp; mov dword ptr [rbx+0x18], 0x0; call qword ptr [rax+0x28]; 
0x000000001416bd: mov rax, [rbx+0x20]; xor esi, esi; mov rdi, rbp; mov dword ptr [rbx+0x18], 0x1; call qword ptr [rax+0x28]; 
0x000000001437bb: mov rax, [rbx+0x23b8]; mov rdi, r12; call qword ptr [rax+0x20]; 
0x0000000008e75c: mov rax, [rbx+0x40]; add rsp, 0x20; pop rbx; jmp rax; 
0x0000000009b86b: mov rax, [rbx+0x40]; je short 0x000000000009b896; mov rdi, [rbx+0x48]; mov rsi, r14; call rax; 
0x0000000009b923: mov rax, [rbx+0x40]; test byte ptr [rbx+0x50], 0x1; jne short 0x000000000009b900; mov rdi, rsi; call rax; 
0x0000000008ec5e: mov rax, [rbx+0x48]; add rsp, 0x20; xor edx, edx; pop rbx; jmp rax; 
0x0000000014a871: mov rax, [rbx+0x60]; call qword ptr [rax+0x8]; 
0x0000000014a845: mov rax, [rbx+0x60]; mov dword ptr [rbx+0x58], 0x0; mov esi, [rbx+0x88]; mov rdi, r15; call qword ptr [rax+0x28]; 
0x0000000014a8b8: mov rax, [rbx+0x60]; mov rdi, r15; call qword ptr [rax+0x20]; 
0x00000000149e25: mov rax, [rbx+0x70]; mov [rbx+0x48], ebp; bswap ebp; call qword ptr [rax+0x18]; 
0x00000000149e39: mov rax, [rbx+0x70]; mov rsi, [rsp+0x18]; mov rdi, r12; call qword ptr [rax+0x8]; 
0x000000001470b7: mov rax, [rbx+0xd0]; mov [rbx+0xa8], ebp; bswap ebp; mov ebp, ebp; call qword ptr [rax+0x18]; 
0x000000001470d3: mov rax, [rbx+0xd0]; mov rsi, [rsp+0x18]; mov rdi, r12; call qword ptr [rax+0x8]; 
0x0000000014b573: mov rax, [rbx]; mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x20]; 
0x0000000014ce7d: mov rax, [rbx]; test rax, rax; je short 0x000000000014ce90; pop rbx; ret; 
0x00000000174676: mov rax, [rcx+0x5]; mov [rdx+0x5], rax; lea rax, [rdx+0xc]; ret; 
0x000000001702e6: mov rax, [rcx+0x5]; mov [rdx+0x5], rax; mov rax, rdi; ret; 
0x00000000174696: mov rax, [rcx+0x6]; mov [rdx+0x6], rax; lea rax, [rdx+0xd]; ret; 
0x00000000170306: mov rax, [rcx+0x6]; mov [rdx+0x6], rax; mov rax, rdi; ret; 
0x000000001746b6: mov rax, [rcx+0x7]; mov [rdx+0x7], rax; lea rax, [rdx+0xe]; ret; 
0x00000000170326: mov rax, [rcx+0x7]; mov [rdx+0x7], rax; mov rax, rdi; ret; 
0x00000000174546: mov rax, [rcx+0x8]; mov [rdx+0x8], rax; lea rax, [rdx+0xf]; ret; 
0x00000000170216: mov rax, [rcx+0x8]; mov [rdx+0x8], rax; mov rax, rdi; ret; 
0x000000001744f0: mov rax, [rcx]; mov [rdx], rax; lea rax, [rdx+0x7]; ret; 
0x000000001701c0: mov rax, [rcx]; mov [rdx], rax; mov rax, rdi; ret; 
0x00000000151144: mov rax, [rdi+0x18]; sub rax, [rdi+0x20]; ret; 
0x000000000369f5: mov rax, [rdi+0x20]; mov rbp, rdi; test rax, rax; je short 0x0000000000036a03; call rax; 
0x00000000191614: mov rax, [rdi+0x20]; test rax, rax; je short 0x0000000000191624; call rax; 
0x000000000904a4: mov rax, [rdi+0x28]; cmp [rdi+0x10], rax; cmovae rax, [rdi+0x10]; sub rax, [rdi+0x18]; ret; 
0x00000000093942: mov rax, [rdi+0x28]; mov [rax+0x20], rdx; add rsp, 0x8; ret; 
0x000000000896b8: mov rax, [rdi+0x28]; sub rax, [rdi+0x20]; ret; 
0x000000001417ca: mov rax, [rdi+0x38]; call qword ptr [rax+0x10]; 
0x00000000141731: mov rax, [rdi+0x38]; call qword ptr [rax+0x18]; 
0x0000000014b579: mov rax, [rdi+0x38]; call qword ptr [rax+0x20]; 
0x0000000014167c: mov rax, [rdi+0x38]; call qword ptr [rax+0x8]; 
0x000000001417b0: mov rax, [rdi+0x38]; lea r13, [rsp+0x68]; mov rsi, r13; call qword ptr [rax+0x10]; 
0x00000000089588: mov rax, [rdi+0x40]; sub rax, [rdi+0x38]; ret; 
0x0000000008de4e: mov rax, [rdi+0x48]; mov [rdi+0x48], rdx; mov [rdi+0x18], rax; mov [rdi+0x8], rax; ret; 
0x0000000008fe64: mov rax, [rdi+0x68]; ret; 
0x0000000014f870: mov rax, [rdi+0x8]; call qword ptr [rax+0x10]; 
0x0000000014f830: mov rax, [rdi+0x8]; call qword ptr [rax+0x18]; 
0x00000000141a0d: mov rax, [rdi+0x8]; call qword ptr [rax+0x20]; 
0x0000000014b621: mov rax, [rdi+0x8]; call qword ptr [rax+0x28]; 
0x00000000142fd9: mov rax, [rdi+0x8]; call qword ptr [rax+0x30]; 
0x00000000150f6c: mov rax, [rdi+0x8]; call qword ptr [rax+0x48]; 
0x00000000143d6a: mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x0000000008ff8a: mov rax, [rdi+0x8]; cmp rax, rdx; jae short 0x000000000008ffb8; movzx eax, byte ptr [rax]; ret; 
0x00000000150e80: mov rax, [rdi+0x8]; jmp qword ptr [rax+0x40]; 
0x00000000150e90: mov rax, [rdi+0x8]; jmp qword ptr [rax+0x48]; 
0x0000000014fa50: mov rax, [rdi+0x8]; jmp qword ptr [rax+0x8]; 
0x0000000014fa45: mov rax, [rdi+0x8]; jmp qword ptr [rax]; 
0x0000000014b64c: mov rax, [rdi+0x8]; lea rdx, [rsp+0x18]; mov esi, 0x6; call qword ptr [rax+0x28]; 
0x0000000014b6d0: mov rax, [rdi+0x8]; lea rdx, [rsp+0xc]; mov esi, 0xd; call qword ptr [rax+0x28]; 
0x000000001495d7: mov rax, [rdi+0x8]; lea rsi, [rsp+0x10]; call qword ptr [rax+0x10]; 
0x000000001503a8: mov rax, [rdi+0x8]; lea rsi, [rsp+0x10]; call qword ptr [rax]; 
0x00000000150f40: mov rax, [rdi+0x8]; lea rsi, [rsp+0x4]; call qword ptr [rax+0x40]; 
0x0000000014fb50: mov rax, [rdi+0x8]; lea rsi, [rsp+0x8]; call qword ptr [rax]; 
0x0000000014d8a9: mov rax, [rdi+0x8]; mov dword ptr [rsp+0x30], 0x1; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x0000000014d699: mov rax, [rdi+0x8]; mov dword ptr [rsp+0x30], 0x3; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x0000000014d709: mov rax, [rdi+0x8]; mov dword ptr [rsp+0x30], 0x4; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x0000000014d779: mov rax, [rdi+0x8]; mov dword ptr [rsp+0x30], 0x5; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x00000000143de0: mov rax, [rdi+0x8]; mov r12, rsp; lea rsi, [rsp+0x8]; call qword ptr [rax]; 
0x0000000014fac2: mov rax, [rdi+0x8]; mov rax, [rax+0x8]; add rsp, 0x10; pop rbp; jmp rax; 
0x00000000148c4a: mov rax, [rdi+0x8]; mov rsi, [r8+0x40]; mov edx, [rsi+0x1c8]; add rsi, 0x38; jmp qword ptr [rax+0x18]; 
0x00000000150ae8: mov rax, [rdi+0x8]; mov rsi, rsp; call qword ptr [rax+0x40]; 
0x00000000143d40: mov rax, [rdi+0x8]; mov rsi, rsp; call qword ptr [rax]; 
0x0000000014fba0: mov rax, [rdi+0x8]; sar rdx, 0x20; mov [rsp+0x8], rdx; call qword ptr [rax+0x8]; 
0x00000000150b35: mov rax, [rdi+0x8]; sar rdx, 0x20; mov [rsp], edx; call qword ptr [rax+0x48]; 
0x0000000014fc90: mov rax, [rdi+0x8]; shr rdx, 0x20; mov [rsp+0x8], rdx; call qword ptr [rax+0x8]; 
0x00000000150d15: mov rax, [rdi+0x8]; shr rdx, 0x20; mov [rsp], edx; call qword ptr [rax+0x48]; 
0x00000000083df4: mov rax, [rdi+0xa0]; cmp qword ptr [rax+0x30], 0x0; je short 0x0000000000083e08; ret; 
0x00000000188140: mov rax, [rdi-0x8]; cmp rcx, rax; jne 0x00000000001885f3; xor eax, eax; ret; 
0x00000000189310: mov rax, [rdi-0x8]; cmp rcx, rax; jne 0x0000000000189433; xor eax, eax; ret; 
0x000000000923c4: mov rax, [rdi]; cmp rax, 0x2000000; jbe short 0x00000000000923d0; ret; 
0x00000000092104: mov rax, [rdi]; cmp rax, 0x408; jbe short 0x0000000000092110; ret; 
0x00000000092424: mov rax, [rdi]; cmp rax, 0xa0; jbe short 0x0000000000092430; ret; 
0x00000000092144: mov rax, [rdi]; cmp rax, 0xffff; jbe short 0x0000000000092150; ret; 
0x0000000011b350: mov rax, [rdi]; mov [rdx], rax; mov eax, 0x1; ret; 
0x0000000008fb65: mov rax, [rdi]; mov [rdx], rax; ret; 
0x00000000090b0f: mov rax, [rdi]; mov rdi, r8; jmp rax; 
0x00000000092164: mov rax, [rdi]; nop; mov [rip+0x151179], rax; ret; 
0x000000000920f4: mov rax, [rdi]; nop; mov [rip+0x151199], rax; ret; 
0x000000000920e4: mov rax, [rdi]; nop; mov [rip+0x1511b1], rax; ret; 
0x00000000092414: mov rax, [rdi]; nop; mov [rip+0x154a66], eax; ret; 
0x000000000923f4: mov rax, [rdi]; nop; mov dword ptr [rip+0x150eb2], 0x1; mov [rip+0x150ea4], eax; ret; 
0x000000000923a4: mov rax, [rdi]; nop; mov dword ptr [rip+0x150f02], 0x1; mov [rip+0x150ecf], rax; ret; 
0x00000000092384: mov rax, [rdi]; nop; mov dword ptr [rip+0x150f22], 0x1; mov [rip+0x150ee7], rax; ret; 
0x000000000896a5: mov rax, [rdx+0x20]; sub rax, [rdx+0x18]; sar rax, 0x2; ret; 
0x00000000089575: mov rax, [rdx+0x38]; sub rax, [rdx+0x30]; sar rax, 0x2; ret; 
0x0000000010e142: mov rax, [rdx+0x50]; mov [rsi+0x50], rcx; xor rax, 0x20; mov [rsi+0x48], rax; ret; 
0x00000000037370: mov rax, [rdx+rdi*8+0x40]; ret; 
0x00000000146fd8: mov rax, [rdx]; bswap eax; mov [r8+0xb4], eax; mov eax, 0x1; ret; 
0x00000000146fa8: mov rax, [rdx]; bswap eax; mov [r8+0xb8], eax; mov eax, 0x1; ret; 
0x000000000dfc91: mov rax, [rip+0x106b28]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000dfbf1: mov rax, [rip+0x106bc8]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000deab0: mov rax, [rip+0x107d11]; mov rdi, r9; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000d9f99: mov rax, [rip+0x108ea8]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000d8f98: mov rax, [rip+0x109ea9]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000d8f00: mov rax, [rip+0x109f31]; mov rax, [rax+0x230]; test rax, rax; je short 0x00000000000d8f40; call rax; 
0x000000000d8e90: mov rax, [rip+0x109fa1]; mov rax, [rax+0x250]; test rax, rax; je short 0x00000000000d8ed0; call rax; 
0x000000000d99e0: mov rax, [rip+0x10cd89]; lea rdi, [rip+0x10bcd2]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000d999a: mov rax, [rip+0x10cdd7]; lea rdi, [rip+0x10bd18]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000d97f8: mov rax, [rip+0x10cf71]; lea rdi, [rip+0x10beba]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000d97c9: mov rax, [rip+0x10cfa8]; lea rdi, [rip+0x10bee9]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000d9700: mov rax, [rip+0x10d069]; lea rdi, [rip+0x10bfb2]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000d96d7: mov rax, [rip+0x10d09a]; lea rdi, [rip+0x10bfdb]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000d9205: mov rax, [rip+0x10d564]; lea rdi, [rip+0x10c4ad]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000cdd96: mov rax, [rip+0x11507b]; movaps [rax], xmm0; add rsp, 0x10; pop rbp; ret; 
0x000000000cc150: mov rax, [rip+0x116cf1]; mov dword ptr fs:[rax], 0x16; xor eax, eax; ret; 
0x000000000cc130: mov rax, [rip+0x116d11]; mov dword ptr fs:[rax], 0x4b; xor eax, eax; add rsp, 0x8; ret; 
0x000000000c6358: mov rax, [rip+0x120419]; lea rdi, [rip+0x11f35a]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000c6175: mov rax, [rip+0x1205f4]; lea rdi, [rip+0x11f53d]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000009b9c4: mov rax, [rip+0x14747d]; mov dword ptr fs:[rax], 0xc; xor eax, eax; ret; 
0x0000000009b851: mov rax, [rip+0x1476d8]; call qword ptr [rax]; 
0x0000000009b680: mov rax, [rip+0x1478a9]; call qword ptr [rax]; 
0x0000000009b5b0: mov rax, [rip+0x147979]; call qword ptr [rax]; 
0x00000000097548: mov rax, [rip+0x14b971]; mov [rax], rdi; ret; 
0x0000000009753e: mov rax, [rip+0x14ba8b]; mov [rax], rsi; mov rax, [rip+0x14b971]; mov [rax], rdi; ret; 
0x0000000009687d: mov rax, [rip+0x14c5c4]; xor r8d, r8d; mov dword ptr fs:[rax], 0xc; mov rax, r8; ret; 
0x00000000096642: mov rax, [rip+0x14c7f7]; mov rax, [rax]; test rax, rax; je short 0x0000000000096653; call rax; 
0x00000000095490: mov rax, [rip+0x14d9b1]; xor r9d, r9d; mov dword ptr fs:[rax], 0xc; mov rax, r9; ret; 
0x00000000094d72: mov rax, [rip+0x14e017]; mov [rsp+0x8], r8; xor edi, edi; call qword ptr [rax]; 
0x00000000094c50: mov rax, [rip+0x14e139]; xor edi, edi; call qword ptr [rax]; 
0x00000000094c0a: mov rax, [rip+0x14e17f]; call qword ptr [rax]; 
0x0000000009490c: mov rax, [rip+0x14e47d]; mov [rsp+0x10], rsi; mov rdi, rsi; mov [rsp+0x18], r11; call qword ptr [rax]; 
0x0000000009325e: mov rax, [rip+0x14fc5b]; mov [rax], rdx; ret; 
0x00000000093254: mov rax, [rip+0x14fd75]; mov [rax], rsi; mov rax, [rip+0x14fc5b]; mov [rax], rdx; ret; 
0x00000000090da0: mov rax, [rip+0x1520a1]; pop rbx; mov eax, fs:[rax]; ret; 
0x0000000008fe44: mov rax, [rip+0x154775]; ret; 
0x000000000909ae: mov rax, [rip+0x155d9b]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009097e: mov rax, [rip+0x155dc3]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009094e: mov rax, [rip+0x155deb]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009091e: mov rax, [rip+0x155e13]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000908ee: mov rax, [rip+0x155e3b]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000908be: mov rax, [rip+0x155e63]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000090884: mov rax, [rip+0x155e95]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000009084e: mov rax, [rip+0x155ea3]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009081e: mov rax, [rip+0x155ecb]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000907ee: mov rax, [rip+0x155ef3]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000907be: mov rax, [rip+0x155f1b]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000089bd0: mov rax, [rip+0x159271]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000877f8: mov rax, [rip+0x15b649]; mov dword ptr fs:[rax], 0x9; mov eax, 0xffffffff; ret; 
0x00000000081088: mov rax, [rip+0x161db9]; mov dword ptr fs:[rax], 0x16; mov rax, 0xffffffffffffffff; ret; 
0x0000000005cef2: mov rax, [rip+0x18c3e7]; mov rcx, r14; call qword ptr [rax+r8*8]; 
0x000000000464e0: mov rax, [rip+0x19c961]; mov dword ptr fs:[rax], 0x5; mov eax, 0xffffffff; ret; 
0x00000000045e08: mov rax, [rip+0x19d039]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000042598: mov rax, [rip+0x1a08a9]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000042558: mov rax, [rip+0x1a08e9]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000042518: mov rax, [rip+0x1a0929]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000424d2: mov rax, [rip+0x1a096f]; mov dword ptr fs:[rax], 0x16; mov rax, 0xffffffffffffffff; ret; 
0x00000000042414: mov rax, [rip+0x1a0a2d]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x000000000423f8: mov rax, [rip+0x1a0a49]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000423b0: mov rax, [rip+0x1a0a91]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000042360: mov rax, [rip+0x1a0ae1]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000042319: mov rax, [rip+0x1a0b28]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000422e3: mov rax, [rip+0x1a0b5e]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000041b60: mov rax, [rip+0x1a12e1]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000041920: mov rax, [rip+0x1a1521]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000417e0: mov rax, [rip+0x1a1661]; mov dword ptr fs:[rax], 0x16; mov rax, 0xffffffffffffffff; ret; 
0x00000000040e11: mov rax, [rip+0x1a2030]; mov dword ptr fs:[rax], 0x22; add rsp, 0x8; ret; 
0x00000000040afb: mov rax, [rip+0x1a2346]; mov dword ptr fs:[rax], 0x22; add rsp, 0x8; ret; 
0x0000000004072a: mov rax, [rip+0x1a2717]; mov dword ptr fs:[rax], 0x22; add rsp, 0x8; ret; 
0x0000000003fb80: mov rax, [rip+0x1a32c1]; mov dword ptr fs:[rax], 0x9; mov eax, 0xffffffff; pop rbp; ret; 
0x0000000003fb20: mov rax, [rip+0x1a3321]; mov dword ptr fs:[rax], 0x2a; mov rax, r10; ret; 
0x0000000004169e: mov rax, [rip+0x1a50b3]; mov rsi, rsp; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000003d0b7: mov rax, [rip+0x1a96ba]; lea rdi, [rip+0x1a87fb]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003d056: mov rax, [rip+0x1a9713]; lea rdi, [rip+0x1a885c]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000038f64: mov rax, [rip+0x1a9e65]; add rax, fs:[0x0]; ret; 
0x00000000038f84: mov rax, [rip+0x1a9f3d]; add rax, fs:[0x0]; ret; 
0x00000000038fa4: mov rax, [rip+0x1a9f55]; add rax, fs:[0x0]; ret; 
0x00000000038814: mov rax, [rip+0x1aa57d]; movsxd rdi, edi; mov rax, fs:[rax]; mov rax, [rax+rdi*8+0x80]; ret; 
0x000000000387d0: mov rax, [rip+0x1aa5d9]; mov [rax], rdx; ret; 
0x0000000003b182: mov rax, [rip+0x1ab5ef]; lea rdi, [rip+0x1aa7f0]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003b119: mov rax, [rip+0x1ab650]; lea rdi, [rip+0x1aa859]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003afea: mov rax, [rip+0x1ab787]; lea rdi, [rip+0x1aa988]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003af8a: mov rax, [rip+0x1ab7d7]; lea rdi, [rip+0x1aa9e8]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003aea8: mov rax, [rip+0x1ab8c9]; lea rdi, [rip+0x1aaa8a]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003ae51: mov rax, [rip+0x1ab918]; lea rdi, [rip+0x1aaae1]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000373a4: mov rax, [rip+0x1ab9ed]; mov rax, fs:[rax]; mov rax, [rax]; mov eax, [rax+0xa8]; ret; 
0x0000000003abcb: mov rax, [rip+0x1abba6]; lea rdi, [rip+0x1aaae7]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003aba3: mov rax, [rip+0x1abbcd]; lea rdi, [rip+0x1aad0e]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003aacd: mov rax, [rip+0x1abca4]; lea rdi, [rip+0x1aabe5]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003aaa5: mov rax, [rip+0x1abccb]; lea rdi, [rip+0x1aae0c]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003a95e: mov rax, [rip+0x1abe13]; lea rdi, [rip+0x1aad54]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003a933: mov rax, [rip+0x1abe3e]; lea rdi, [rip+0x1aaf7f]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003a660: mov rax, [rip+0x1ac111]; lea rdi, [rip+0x1ab2d2]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003a61b: mov rax, [rip+0x1ac146]; lea rdi, [rip+0x1ab317]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003a5b7: mov rax, [rip+0x1ac1aa]; lea rdi, [rip+0x1ab2fb]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003a58f: mov rax, [rip+0x1ac1d1]; lea rdi, [rip+0x1ab122]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003a2d5: mov rax, [rip+0x1ac49c]; lea rdi, [r13+0x80]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003a154: mov rax, [rip+0x1ac61d]; lea rdi, [r13+0x80]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000039f69: mov rax, [rip+0x1ac800]; mov rdi, r12; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000039f44: mov rax, [rip+0x1ac82d]; mov rdi, r12; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000039f1b: mov rax, [rip+0x1ac856]; lea rdi, [r13+0x80]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000039aa2: mov rax, [rip+0x1accbf]; lea rdi, [r13+0x80]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000039aa1: mov rax, [rip+0x1accbf]; lea rdi, [r13+0x80]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000039041: mov rax, [rip+0x1ad728]; lea rdi, [rip+0x1ac871]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003857d: mov rax, [rip+0x1ae1f4]; lea rdi, [rip+0x1ad135]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000384a2: mov rax, [rip+0x1ae2c7]; lea rdi, [rip+0x1ad210]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003842d: mov rax, [rip+0x1ae344]; lea rdi, [rip+0x1ad285]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000038391: mov rax, [rip+0x1ae3d8]; lea rdi, [rip+0x1ad321]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000038113: mov rax, [rip+0x1ae65e]; lea rdi, [rip+0x1ad59f]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000037d8a: mov rax, [rip+0x1ae9e7]; lea rdi, [rip+0x1ad928]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000037b8b: mov rax, [rip+0x1aebde]; lea rdi, [rip+0x1adb27]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035ab0: mov rax, [rip+0x1b0cc1]; lea rdi, [rip+0x1afc02]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000356b4: mov rax, [rip+0x1b10bd]; lea rdi, [rip+0x1afffe]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035559: mov rax, [rip+0x1b1217]; lea rdi, [rip+0x1b0158]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003555a: mov rax, [rip+0x1b1217]; lea rdi, [rip+0x1b0158]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003547a: mov rax, [rip+0x1b12f7]; lea rdi, [rip+0x1b0238]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000353f9: mov rax, [rip+0x1b1378]; lea rdi, [rip+0x1b02b9]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000351db: mov rax, [rip+0x1b1596]; lea rdi, [rip+0x1b04d7]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003519f: mov rax, [rip+0x1b15ca]; lea rdi, [rip+0x1b0513]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000034024: mov rax, [rip+0x1b1685]; ret; 
0x00000000029318: mov rax, [rip+0x1b9b29]; mov dword ptr fs:[rax], 0x9; mov eax, 0xffffffff; ret; 
0x00000000029034: mov rax, [rip+0x1b9e0d]; add rax, fs:[0x0]; ret; 
0x00000000028c2a: mov rax, [rip+0x1ba257]; mov rsi, [rsp]; mov edi, [rsp+0xc]; mov rdx, [rax]; call rbp; 
0x0000000002a6d4: mov rax, [rip+0x1baf95]; ret; 
0x0000000002a6c4: mov rax, [rip+0x1baf9d]; ret; 
0x00000000028cd4: mov rax, [rip+0x1bdadd]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000015cec4: mov rax, [rip+0x85f7d]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x0000000015cea4: mov rax, [rip+0x85f9d]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x0000000015cd74: mov rax, [rip+0x860cd]; mov dword ptr fs:[rax], 0x26; mov rax, 0xffffffffffffffff; ret; 
0x0000000015c874: mov rax, [rip+0x865cd]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x0000000015c854: mov rax, [rip+0x865ed]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x0000000015c814: mov rax, [rip+0x8662d]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x0000000015c7f4: mov rax, [rip+0x8664d]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x0000000015c7d4: mov rax, [rip+0x8666d]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x0000000015c7b4: mov rax, [rip+0x8668d]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x0000000015a854: mov rax, [rip+0x885ed]; mov dword ptr fs:[rax], 0x26; xor eax, eax; ret; 
0x0000000015a6c0: mov rax, [rip+0x88781]; mov dword ptr fs:[rax], 0x16; xor eax, eax; ret; 
0x0000000015a5bc: mov rax, [rip+0x8894d]; mov [rax], bl; pop rbx; ret; 
0x00000000159d13: mov rax, [rip+0x8911e]; mov r8, [rbx+0x10]; call qword ptr [rax+0x270]; 
0x00000000159884: mov rax, [rip+0x895ad]; jmp qword ptr [rax+0x280]; 
0x000000001597c1: mov rax, [rip+0x89670]; mov rdi, [rdi]; call qword ptr [rax+0x278]; 
0x00000000159768: mov rax, [rip+0x896c9]; mov rdi, [rsp]; mov rax, [rax+0x268]; jmp rax; 
0x00000000159734: mov rax, [rip+0x896fd]; mov rsi, rdi; mov rdi, [rsp]; mov rax, [rax+0x268]; jmp rax; 
0x000000001592a1: mov rax, [rip+0x89b90]; call qword ptr [rax+0x288]; 
0x0000000015a7de: mov rax, [rip+0x8bf33]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000015a7ae: mov rax, [rip+0x8bf5b]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000015a82c: mov rax, [rip+0x8bf7d]; mov rdi, r8; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000015a77e: mov rax, [rip+0x8bf83]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000015a74e: mov rax, [rip+0x8bfab]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000156784: mov rax, [rip+0x8c6bd]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x00000000159cd0: mov rax, [rip+0x8f5f1]; mov rax, [rax+0x10]; add rsp, 0x38; jmp rax; 
0x00000000159a38: mov rax, [rip+0x8f889]; call qword ptr [rax+0x8]; 
0x00000000159940: mov rax, [rip+0x8f981]; call qword ptr [rax]; 
0x0000000014d170: mov rax, [rip+0x95c11]; pop rbx; ret; 
0x0000000014d0ff: mov rax, [rip+0x95c82]; mov dword ptr [rip+0x9bdd0], 0x2; pop rbx; ret; 
0x0000000014d0a0: mov rax, [rip+0x95d81]; pop rbx; ret; 
0x0000000014d240: mov rax, [rip+0x95d99]; pop rbx; ret; 
0x0000000014d02f: mov rax, [rip+0x95df2]; mov dword ptr [rip+0x9bea0], 0x2; pop rbx; ret; 
0x0000000014d1cf: mov rax, [rip+0x95e0a]; mov dword ptr [rip+0x9bd00], 0x2; pop rbx; ret; 
0x0000000014cfd0: mov rax, [rip+0x95e11]; pop rbx; ret; 
0x0000000014cf5f: mov rax, [rip+0x95e82]; mov dword ptr [rip+0x9bf70], 0x2; pop rbx; ret; 
0x0000000014cdb4: mov rax, [rip+0x95fad]; lea rdx, [rip+0x9c13e]; mov fs:[rax], rdx; ret; 
0x00000000141240: mov rax, [rip+0xa1c01]; mov dword ptr fs:[rax], 0x16; mov eax, 0x16; ret; 
0x000000001411e8: mov rax, [rip+0xa1c59]; mov dword ptr fs:[rax], 0x22; mov eax, 0x22; pop rbx; ret; 
0x0000000013bf34: mov rax, [rip+0xa6ebd]; mov eax, [rax+0x18]; test eax, eax; jne short 0x000000000013bf48; ret; 
0x0000000013c024: mov rax, [rip+0xa6fbd]; mov rax, fs:[rax]; ret; 
0x0000000013dd54: mov rax, [rip+0xaae45]; test rax, rax; jne short 0x000000000013dd68; ret; 
0x0000000013c96c: mov rax, [rip+0xac22d]; test rax, rax; je short 0x000000000013c980; add rsp, 0x8; ret; 
0x00000000129b64: mov rax, [rip+0xb92c5]; add rax, fs:[0x0]; ret; 
0x000000001290f0: mov rax, [rip+0xb9d51]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000011c974: mov rax, [rip+0xc64bd]; mov eax, [rax+0x38]; ret; 
0x0000000011a234: mov rax, [rip+0xc8c0d]; mov dword ptr fs:[rax], 0x26; mov rax, 0xffffffffffffffff; ret; 
0x000000001199e0: mov rax, [rip+0xc9461]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000001199a0: mov rax, [rip+0xc94a1]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000011c0d0: mov rax, [rip+0xcb9c1]; mov rax, [rax+0x18]; add dword ptr [rax], 0x1; ret; 
0x0000000011c0c0: mov rax, [rip+0xcb9d1]; mov rax, [rax+0x18]; add word ptr [rax], 0x1; ret; 
0x000000001170a0: mov rax, [rip+0xcbda1]; mov dword ptr fs:[rax], 0x2; xor eax, eax; ret; 
0x00000000116558: mov rax, [rip+0xcc8e9]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000011633e: mov rax, [rip+0xccbf3]; mov rax, [rax]; test rax, rax; je 0x0000000000116440; call rax; 
0x0000000011615f: mov rax, [rip+0xccdd2]; mov rax, [rax]; test rax, rax; je short 0x00000000001161d0; call rax; 
0x00000000114720: mov rax, [rip+0xce721]; mov dword ptr fs:[rax], 0x16; ret; 
0x000000001146eb: mov rax, [rip+0xce756]; mov dword ptr fs:[rax], 0x16; xor eax, eax; ret; 
0x000000001146d9: mov rax, [rip+0xce768]; mov dword ptr fs:[rax], 0xc; xor eax, eax; pop rbx; ret; 
0x00000000113e9d: mov rax, [rip+0xcefa4]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000113838: mov rax, [rip+0xcf609]; mov dword ptr fs:[rax], 0x16; mov rax, 0xffffffffffffffff; ret; 
0x000000001106e0: mov rax, [rip+0xd2761]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000001106b8: mov rax, [rip+0xd2789]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000110574: mov rax, [rip+0xd28cd]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x0000000010fba4: mov rax, [rip+0xd328d]; mov rax, [rax+0x18]; test rax, rax; je short 0x000000000010fbb5; ret; 
0x0000000010f268: mov rax, [rip+0xd3bd9]; mov dword ptr fs:[rax], 0xc; mov eax, 0xffffffff; ret; 
0x0000000010f254: mov rax, [rip+0xd3c45]; mov qword ptr [rax], 0xffffffffffffffff; xor eax, eax; ret; 
0x0000000010e6db: mov rax, [rip+0xd4766]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010e67a: mov rax, [rip+0xd47c7]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010de38: mov rax, [rip+0xd5009]; mov dword ptr fs:[rax], 0x9; mov eax, 0xffffffff; ret; 
0x0000000010de02: mov rax, [rip+0xd503f]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010d5f8: mov rax, [rip+0xd5849]; mov dword ptr fs:[rax], 0x16; xor eax, eax; ret; 
0x0000000010d4c0: mov rax, [rip+0xd5981]; mov dword ptr fs:[rax], 0x16; mov eax, 0x1; ret; 
0x00000000110afd: mov rax, [rip+0xd6b6c]; mov [rip+0xd6b95], rax; lea rax, [rip+0xd6b66]; add rsp, 0x8; ret; 
0x0000000010f9c6: mov rax, [rip+0xd6df3]; movups [rsp+0x8], xmm0; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000010f926: mov rax, [rip+0xd6e93]; movups [rsp+0x8], xmm0; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000010ba40: mov rax, [rip+0xd7401]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000108578: mov rax, [rip+0xda8c9]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000108518: mov rax, [rip+0xda929]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000001084b8: mov rax, [rip+0xda989]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000108130: mov rax, [rip+0xdad11]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000001080d0: mov rax, [rip+0xdad71]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000108070: mov rax, [rip+0xdadd1]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000f9774: mov rax, [rip+0xe981d]; mov r8, [rax]; mov [rax], rdi; mov rax, r8; ret; 
0x0000000010dea8: mov rax, [rsi+0x28]; cmp [rdi+0x28], rax; sete al; ret; 
0x0000000011d9d0: mov rax, [rsi+0x68]; mov edi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x1000; ret; 
0x0000000011d948: mov rax, [rsi+0x68]; mov edi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x100; ret; 
0x0000000011d540: mov rax, [rsi+0x68]; mov edi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x1; ret; 
0x0000000011d8d0: mov rax, [rsi+0x68]; mov edi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x2000; ret; 
0x0000000011d6d0: mov rax, [rsi+0x68]; mov edi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x200; ret; 
0x0000000011d5c0: mov rax, [rsi+0x68]; mov edi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x2; ret; 
0x0000000011d7d0: mov rax, [rsi+0x68]; mov edi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x4000; ret; 
0x0000000011d4c0: mov rax, [rsi+0x68]; mov edi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x400; ret; 
0x0000000011d850: mov rax, [rsi+0x68]; mov edi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x4; ret; 
0x0000000011d750: mov rax, [rsi+0x68]; mov edi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x8000; ret; 
0x0000000011d440: mov rax, [rsi+0x68]; mov edi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x8; ret; 
0x00000000038ef4: mov rax, [rsi+0x68]; movsxd rdi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x1000; ret; 
0x00000000038ed4: mov rax, [rsi+0x68]; movsxd rdi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x100; ret; 
0x00000000038d94: mov rax, [rsi+0x68]; movsxd rdi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x1; ret; 
0x00000000038eb4: mov rax, [rsi+0x68]; movsxd rdi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x2000; ret; 
0x00000000038e34: mov rax, [rsi+0x68]; movsxd rdi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x200; ret; 
0x00000000038df4: mov rax, [rsi+0x68]; movsxd rdi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x2; ret; 
0x00000000038e74: mov rax, [rsi+0x68]; movsxd rdi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x4000; ret; 
0x00000000038dd4: mov rax, [rsi+0x68]; movsxd rdi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x400; ret; 
0x00000000038e94: mov rax, [rsi+0x68]; movsxd rdi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x4; ret; 
0x00000000038e54: mov rax, [rsi+0x68]; movsxd rdi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x8000; ret; 
0x00000000038e14: mov rax, [rsi+0x68]; movsxd rdi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x800; ret; 
0x00000000038db4: mov rax, [rsi+0x68]; movsxd rdi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x8; ret; 
0x00000000038f14: mov rax, [rsi+0x70]; movsxd rdi, edi; mov eax, [rax+rdi*4]; ret; 
0x00000000038f24: mov rax, [rsi+0x78]; movsxd rdi, edi; mov eax, [rax+rdi*4]; ret; 
0x0000000010def9: mov rax, [rsi+0x8]; movups [rdi+0x10], xmm0; mov [rdi+0x8], rax; movups [rdi+0x20], xmm1; ret; 
0x00000000037390: mov rax, [rsi+rax*8+0x80]; ret; 
0x000000000992b0: mov rax, [rsi+rax+0x8]; sub rdx, 0x8; and eax, 0x1; cmovne rax, rdx; ret; 
0x00000000042549: mov rax, [rsi]; and rax, [rdx]; mov [rdi], rax; xor eax, eax; ret; 
0x00000000042589: mov rax, [rsi]; or rax, [rdx]; mov [rdi], rax; xor eax, eax; ret; 
0x00000000028cab: mov rax, [rsp+0x10]; call rax; 
0x0000000014720f: mov rax, [rsp+0x10]; mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x18]; 
0x0000000015a4f9: mov rax, [rsp+0x10]; mov rdi, [rsp+0x18]; call rax; 
0x00000000114cf3: mov rax, [rsp+0x10]; mov rdi, rbp; call rax; 
0x00000000114cf2: mov rax, [rsp+0x10]; mov rdi, rbp; call rax; 
0x00000000144aa0: mov rax, [rsp+0x10]; mov rdx, r13; mov rsi, r12; mov rdi, rbp; call rax; 
0x000000001470ed: mov rax, [rsp+0x10]; mov rsi, r12; mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x8]; 
0x0000000002da7d: mov rax, [rsp+0x18]; call rax; 
0x000000001592b3: mov rax, [rsp+0x18]; mov rdx, r14; mov esi, 0x40; mov rdi, rbx; call rax; 
0x000000001131ca: mov rax, [rsp+0x18]; sub rax, fs:[0x28]; jne short 0x00000000001131e2; add rsp, 0xd8; ret; 
0x000000001132a3: mov rax, [rsp+0x18]; sub rax, fs:[0x28]; jne short 0x00000000001132bb; add rsp, 0xd8; ret; 
0x00000000115d8f: mov rax, [rsp+0x18]; sub rax, fs:[0x28]; jne short 0x0000000000115da7; add rsp, 0xd8; ret; 
0x00000000115e4f: mov rax, [rsp+0x18]; sub rax, fs:[0x28]; jne short 0x0000000000115e67; add rsp, 0xd8; ret; 
0x00000000116296: mov rax, [rsp+0x18]; sub rax, fs:[0x28]; jne short 0x00000000001162ae; add rsp, 0xd8; ret; 
0x00000000116503: mov rax, [rsp+0x18]; sub rax, fs:[0x28]; jne short 0x000000000011651b; add rsp, 0xd8; ret; 
0x00000000123931: mov rax, [rsp+0x18]; sub rax, fs:[0x28]; jne short 0x0000000000123949; add rsp, 0xd8; ret; 
0x0000000012553a: mov rax, [rsp+0x18]; sub rax, fs:[0x28]; jne short 0x0000000000125552; add rsp, 0xd8; ret; 
0x0000000014de63: mov rax, [rsp+0x18]; sub rax, fs:[0x28]; jne short 0x000000000014de98; add rsp, 0x28; ret; 
0x0000000002c571: mov rax, [rsp+0x20]; call rax; 
0x0000000002bfe9: mov rax, [rsp+0x28]; call rax; 
0x00000000142bbf: mov rax, [rsp+0x30]; call rax; 
0x0000000008a3e8: mov rax, [rsp+0x38]; sub rax, fs:[0x28]; jne short 0x000000000008a409; add rsp, 0x48; ret; 
0x0000000014f8c8: mov rax, [rsp+0x38]; sub rax, fs:[0x28]; jne short 0x000000000014f8dd; add rsp, 0x48; ret; 
0x0000000011602a: mov rax, [rsp+0x408]; sub rax, fs:[0x28]; jne short 0x0000000000116045; add rsp, 0x418; ret; 
0x00000000148f50: mov rax, [rsp+0x48]; call qword ptr [rax+0x28]; 
0x0000000014acf3: mov rax, [rsp+0x48]; mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x18]; 
0x0000000014909b: mov rax, [rsp+0x58]; mov rdi, r12; call qword ptr [rax+0x20]; 
0x0000000014d6ad: mov rax, [rsp+0x68]; sub rax, fs:[0x28]; jne short 0x000000000014d6c2; add rsp, 0x78; ret; 
0x0000000014d71d: mov rax, [rsp+0x68]; sub rax, fs:[0x28]; jne short 0x000000000014d732; add rsp, 0x78; ret; 
0x0000000014d78d: mov rax, [rsp+0x68]; sub rax, fs:[0x28]; jne short 0x000000000014d7a2; add rsp, 0x78; ret; 
0x0000000014d7ee: mov rax, [rsp+0x68]; sub rax, fs:[0x28]; jne short 0x000000000014d803; add rsp, 0x78; ret; 
0x0000000014d852: mov rax, [rsp+0x68]; sub rax, fs:[0x28]; jne short 0x000000000014d867; add rsp, 0x78; ret; 
0x0000000014d8bd: mov rax, [rsp+0x68]; sub rax, fs:[0x28]; jne short 0x000000000014d8d2; add rsp, 0x78; ret; 
0x0000000014d940: mov rax, [rsp+0x68]; sub rax, fs:[0x28]; jne short 0x000000000014d955; add rsp, 0x78; ret; 
0x000000000394a5: mov rax, [rsp+0x8]; add rsp, 0x18; ret; 
0x00000000046424: mov rax, [rsp+0x8]; add rsp, 0x28; ret; 
0x0000000010dd47: mov rax, [rsp+0x8]; add rsp, 0x30; pop rbp; ret; 
0x0000000011b0a0: mov rax, [rsp+0x8]; add rsp, 0x38; ret; 
0x000000000857fa: mov rax, [rsp+0x8]; mov esi, 0xffffffff; mov rdi, r8; call qword ptr [rax+0x18]; 
0x000000001433f8: mov rax, [rsp+0x8]; mov esi, r14d; mov rdi, r13; call qword ptr [rax+0x30]; 
0x00000000141409: mov rax, [rsp+0x8]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x0000000013265f: mov rax, [rsp+0x8]; mov rdi, rbx; call rax; 
0x00000000041457: mov rax, [rsp+0x8]; sub rax, fs:[0x28]; jne short 0x000000000004146c; add rsp, 0x18; ret; 
0x00000000045f5f: mov rax, [rsp+0x8]; sub rax, fs:[0x28]; jne short 0x0000000000045f74; add rsp, 0x18; ret; 
0x00000000045fac: mov rax, [rsp+0x8]; sub rax, fs:[0x28]; jne short 0x0000000000045fc1; add rsp, 0x18; ret; 
0x0000000014289c: mov rax, [rsp+0xc8]; mov rdi, rbx; call qword ptr [rax+0x20]; 
0x00000000040ee3: mov rax, [rsp-0x10]; and rax, rdx; sub rax, rdx; shr rax, 0x3f; ret; 
0x00000000043ad0: mov rax, [rsp]; add r15, r12; call rax; 
0x0000000011a4ff: mov rax, [rsp]; add rsp, 0x20; pop rbp; ret; 
0x00000000106d03: mov rax, [rsp]; add rsp, 0x28; ret; 
0x0000000011a5c5: mov rax, [rsp]; add rsp, 0x30; pop rbp; ret; 
0x0000000019074f: mov rax, [rsp]; add rsp, 0x38; pop rbx; pop r14; ret; 
0x0000000011c9d6: mov rax, [rsp]; add rsp, 0x38; ret; 
0x0000000011ca37: mov rax, [rsp]; add rsp, 0x40; ret; 
0x0000000004394b: mov rax, [rsp]; call rax; 
0x0000000004394a: mov rax, [rsp]; call rax; 
0x00000000028cb9: mov rax, [rsp]; lea rdi, [rip+0x185024]; mov rsi, [rax]; xor eax, eax; call qword ptr [rdx+0x260]; 
0x00000000083d99: mov rax, [rsp]; mov esi, r12d; mov rdi, r14; call qword ptr [rax+0x18]; 
0x0000000013338e: mov rax, [rsp]; mov rdi, r12; call rax; 
0x0000000008e5f3: mov rax, [rsp]; mov rdi, r15; lea rbx, [rsi+0x1]; movzx esi, byte ptr [rsi]; call qword ptr [rax+0x18]; 
0x000000000438c0: mov rax, [rsp]; mov rdx, r14; mov rsi, r13; mov rdi, r12; call rax; 
0x00000000043a6c: mov rax, [rsp]; mov rsi, r13; mov rdi, r12; call rax; 
0x00000000091954: mov rax, fs:[0x10]; ret; 
0x000000000cc33a: mov rax, fs:[0x28]; mov [rsp+0x58], rax; xor eax, eax; mov [rsp+0x50], r12; call rbx; 
0x00000000159169: mov rax, fs:[0x28]; mov [rsp+0x68], rax; xor eax, eax; call qword ptr [r12+0xf88]; 
0x00000000050254: mov rax, fs:[0x28]; mov [rsp+0x8], rax; xor eax, eax; mov eax, 0x3e; syscall; 
0x000000000453d0: mov rax, fs:[r12]; lock add qword ptr [rax+0x460], 0x1; lea rdi, [rbp+0x988]; call qword ptr [rbp+0xf90]; 
0x0000000003881e: mov rax, fs:[rax]; mov rax, [rax+rdi*8+0x80]; ret; 
0x000000000373ab: mov rax, fs:[rax]; mov rax, [rax]; mov eax, [rax+0xa8]; ret; 
0x00000000038d4e: mov rax, fs:[rax]; mov rax, [rax]; mov rax, [rax+0x48]; mov eax, [rax+rdi*4+0x200]; ret; 
0x00000000038cde: mov rax, fs:[rax]; mov rax, [rax]; mov rax, [rax+0x48]; mov eax, [rax+rdx*4]; ret; 
0x00000000038d1e: mov rax, fs:[rax]; mov rax, [rax]; mov rax, [rax+0x58]; mov eax, [rax+rdi*4+0x200]; ret; 
0x00000000038cae: mov rax, fs:[rax]; mov rax, [rax]; mov rax, [rax+0x58]; mov eax, [rax+rdx*4]; ret; 
0x00000000038c7e: mov rax, fs:[rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x1000; ret; 
0x00000000038c5e: mov rax, fs:[rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x100; ret; 
0x00000000038cfe: mov rax, fs:[rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x1; ret; 
0x00000000038c3e: mov rax, fs:[rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x2000; ret; 
0x00000000038bbe: mov rax, fs:[rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x200; ret; 
0x00000000038b7e: mov rax, fs:[rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x2; ret; 
0x00000000038bfe: mov rax, fs:[rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x4000; ret; 
0x00000000038b5e: mov rax, fs:[rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x400; ret; 
0x00000000038c1e: mov rax, fs:[rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x4; ret; 
0x00000000038bde: mov rax, fs:[rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x8000; ret; 
0x00000000038b9e: mov rax, fs:[rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x800; ret; 
0x00000000038b3e: mov rax, fs:[rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x8; ret; 
0x00000000126b82: mov rax, fs:[rax]; movzx eax, word ptr [rax+rdx*2]; shr ax, 0xe; and eax, 0x1; ret; 
0x0000000013c02b: mov rax, fs:[rax]; ret; 
0x0000000014ce7c: mov rax, fs:[rbx]; test rax, rax; je short 0x000000000014ce90; pop rbx; ret; 
0x00000000139f23: mov rax, r10; mov byte ptr [r8], 0x0; ret; 
0x0000000009d90e: mov rax, r10; pop rbx; pop rbp; pop r12; ret; 
0x00000000059549: mov rax, r10; pop rbx; pop rbp; ret; 
0x0000000003fb12: mov rax, r10; ret; 
0x000000000cdcb5: mov rax, r12; pop r12; pop r13; pop r14; ret; 
0x0000000009d108: mov rax, r12; pop r12; pop r13; ret; 
0x00000000039608: mov rax, r12; pop r12; ret; 
0x00000000115801: mov rax, r12; pop rbp; pop r12; jmp rax; 
0x000000001149e8: mov rax, r12; pop rbp; pop r12; pop r13; jmp rax; 
0x000000000349b3: mov rax, r12; pop rbp; pop r12; pop r13; ret; 
0x00000000060797: mov rax, r12; pop rbp; pop r12; ret; 
0x0000000006086e: mov rax, r12; pop rbx; pop r12; ret; 
0x0000000003956a: mov rax, r12; pop rbx; pop rbp; pop r12; ret; 
0x0000000011415e: mov rax, r12; pop rdx; pop r12; ret; 
0x0000000009c025: mov rax, r13; mov rdx, r12; pop r12; pop r13; ret; 
0x0000000013c600: mov rax, r13; pop r12; pop r13; pop r14; ret; 
0x000000000b9070: mov rax, r13; pop rbp; pop r12; pop r13; ret; 
0x000000000dad15: mov rax, r15; call rax; 
0x000000000d0acf: mov rax, r8; add rsp, 0x8; ret; 
0x00000000137449: mov rax, r8; mov byte ptr [r8+0x2], 0x0; ret; 
0x00000000111ded: mov rax, r8; mov byte ptr [rsi-0x1], 0x0; ret; 
0x00000000097939: mov rax, r8; pop r12; pop r13; ret; 
0x0000000003d817: mov rax, r8; pop r12; ret; 
0x000000000979a6: mov rax, r8; pop r13; ret; 
0x00000000136580: mov rax, r8; pop rbp; pop r12; pop r13; ret; 
0x00000000082266: mov rax, r8; pop rbp; pop r12; ret; 
0x000000000969fb: mov rax, r8; pop rbp; ret; 
0x0000000009a01e: mov rax, r8; pop rbx; pop r12; ret; 
0x0000000003d7d0: mov rax, r8; pop rbx; pop rbp; pop r12; ret; 
0x000000000e8213: mov rax, r8; pop rbx; pop rbp; pop r13; ret; 
0x00000000044e2b: mov rax, r8; pop rbx; pop rbp; ret; 
0x0000000009680b: mov rax, r8; pop rbx; ret; 
0x00000000044e20: mov rax, r8; ret; 
0x00000000186e63: mov rax, r8; shr rax, 0x2; vzeroupper; ret; 
0x000000001824c0: mov rax, r8; vzeroupper; ret; 
0x00000000077457: mov rax, r9; pop r14; ret; 
0x000000000954a1: mov rax, r9; ret; 
0x0000000009c7f9: mov rax, rbp; pop rbp; pop r12; pop r13; ret; 
0x0000000008ba7c: mov rax, rbp; pop rbx; pop rbp; pop r12; ret; 
0x0000000008a18e: mov rax, rbx; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000001077a4: mov rax, rbx; mov rdx, [rbx+0xb0]; mov rsi, [rbx+0xa0]; mov rdi, [rbx+0x80]; call qword ptr [rax+0x88]; 
0x0000000009f9b9: mov rax, rbx; pop rbx; cmovne rax, rdi; ret; 
0x0000000008a0d3: mov rax, rbx; pop rbx; pop rbp; pop r12; ret; 
0x00000000116ce2: mov rax, rbx; pop rbx; ret; 
0x000000000608e6: mov rax, rbx; test r8d, r8d; jne short 0x00000000000608f0; pop rbx; ret; 
0x0000000009bf7e: mov rax, rdi; cmp [r8+0x8], rsi; jb short 0x000000000009bf90; mov [r8], rsi; ret; 
0x000000000454f4: mov rax, rdi; cqo; idiv rsi; ret; 
0x000000000454b4: mov rax, rdi; cqo; xor rax, rdx; sub rax, rdx; ret; 
0x00000000059751: mov rax, rdi; ret; 
0x000000001296cd: mov rax, rdi; sar rax, 0x6; ret; 
0x00000000171e3e: mov rax, rdi; sub r8, 0x10; lea rcx, [rdx+0x10]; jne 0x0000000000172390; ret; 
0x00000000172034: mov rax, rdi; sub r8, 0x1; lea rcx, [rdx+0x1]; jne 0x0000000000172390; ret; 
0x00000000172056: mov rax, rdi; sub r8, 0x2; lea rcx, [rdx+0x2]; jne 0x0000000000172390; ret; 
0x0000000017207c: mov rax, rdi; sub r8, 0x3; lea rcx, [rdx+0x3]; jne 0x0000000000172390; ret; 
0x00000000172094: mov rax, rdi; sub r8, 0x4; lea rcx, [rdx+0x4]; jne 0x0000000000172390; ret; 
0x000000001720ba: mov rax, rdi; sub r8, 0x5; lea rcx, [rdx+0x5]; jne 0x0000000000172390; ret; 
0x000000001720dc: mov rax, rdi; sub r8, 0x6; lea rcx, [rdx+0x6]; jne 0x0000000000172390; ret; 
0x000000001720fa: mov rax, rdi; sub r8, 0x7; lea rcx, [rdx+0x7]; jne 0x0000000000172390; ret; 
0x00000000171dd6: mov rax, rdi; sub r8, 0x8; lea rcx, [rdx+0x8]; jne 0x0000000000172390; ret; 
0x0000000017211c: mov rax, rdi; sub r8, 0x9; lea rcx, [rdx+0x9]; jne 0x0000000000172390; ret; 
0x0000000017213c: mov rax, rdi; sub r8, 0xa; lea rcx, [rdx+0xa]; jne 0x0000000000172390; ret; 
0x0000000017215c: mov rax, rdi; sub r8, 0xb; lea rcx, [rdx+0xb]; jne 0x0000000000172390; ret; 
0x0000000017217c: mov rax, rdi; sub r8, 0xc; lea rcx, [rdx+0xc]; jne 0x0000000000172390; ret; 
0x0000000017219e: mov rax, rdi; sub r8, 0xd; lea rcx, [rdx+0xd]; jne 0x0000000000172390; ret; 
0x000000001721be: mov rax, rdi; sub r8, 0xe; lea rcx, [rdx+0xe]; jne 0x0000000000172390; ret; 
0x000000001721de: mov rax, rdi; sub r8, 0xf; lea rcx, [rdx+0xf]; jne 0x0000000000172390; ret; 
0x00000000184390: mov rax, rdi; vzeroupper; ret; 
0x000000000407b4: mov rax, rdx; and rax, [rsp-0x8]; sub rax, rdx; shr rax, 0x3f; ret; 
0x000000000f50b5: mov rax, rdx; movsxd rdx, [r13+rdx*4]; add rdx, r13; notrack jmp rdx; 
0x000000000f7909: mov rax, rdx; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x00000000137772: mov rax, rdx; movsxd rdx, ecx; ret; 
0x00000000054b94: mov rax, rdx; pop rbx; ret; 
0x000000000545dc: mov rax, rdx; ret; 
0x00000000053d05: mov rax, rdx; ret; 
0x0000000012f335: mov rax, rsi; pop rbx; ret; 
0x00000000059698: mov rax, rsi; ret; 
0x0000000004168a: mov rbp, r9; nop; jmp rdx; 
0x00000000143fcb: mov rbp, rax; bswap edx; mov [rcx], edx; mov edx, eax; call qword ptr [rbx+0x10]; 
0x000000001097c5: mov rbp, rdi; mov rdi, rbp; mov eax, 0x4f; syscall; 
0x000000000369f9: mov rbp, rdi; test rax, rax; je short 0x0000000000036a03; call rax; 
0x000000001449fb: mov rbp, rdx; call qword ptr [rbx+0x10]; 
0x000000001449fa: mov rbp, rdx; call qword ptr [rbx+0x10]; 
0x0000000007f3d6: mov rbp, rdx; mov rdi, [rdi+0xe0]; call rax; 
0x0000000007ba6e: mov rbx, 0x8d488e0c63480012; xor eax, 0xffffeda3; add rcx, rsi; jmp rcx; 
0x000000000f50b1: mov rbx, [r12]; mov rax, rdx; movsxd rdx, [r13+rdx*4]; add rdx, r13; notrack jmp rdx; 
0x000000000f7947: mov rbx, [r12]; mov rax, rdx; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x0000000007b3c2: mov rbx, [rsp+0x68]; jmp rcx; 
0x00000000075a94: mov rbx, [rsp+0x80]; jmp rsi; 
0x000000000da788: mov rbx, r13; mov rdi, rbp; call r12; 
0x00000000075505: mov rbx, rcx; mov ecx, 0x1; jmp rsi; 
0x00000000076240: mov rbx, rcx; mov r13d, 0x1; mov ecx, 0x1; jmp rsi; 
0x00000000074be8: mov rbx, rcx; mov r13d, 0x1; xor ecx, ecx; jmp rsi; 
0x00000000074b9d: mov rbx, rcx; xor ecx, ecx; jmp rsi; 
0x000000000755b5: mov rbx, rdi; jmp rsi; 
0x000000000759e7: mov rbx, rdi; mov dword ptr [rsp+0x28], 0x1; jmp rsi; 
0x00000000075b3a: mov rbx, rdi; mov r13d, 0x1; jmp rsi; 
0x00000000119010: mov rbx, rdi; mov rdi, rcx; sub rsp, 0x8; call rsi; 
0x00000000083e0c: mov rbx, rdi; test byte ptr [rdi], 0x2; jne short 0x0000000000083e88; mov rax, [rax+0xe0]; call qword ptr [rax+0x68]; 
0x0000000007b267: mov rbx, rdx; mov edx, 0x1; jmp rcx; 
0x000000000758f6: mov rbx, rdx; mov edx, 0x1; jmp rsi; 
0x0000000007bf48: mov rbx, rdx; mov r9d, 0x1; mov edx, 0x1; jmp rcx; 
0x0000000007a6e0: mov rbx, rdx; mov r9d, 0x1; xor edx, edx; jmp rcx; 
0x000000000762a8: mov rbx, rdx; mov r9d, 0x1; xor edx, edx; jmp rsi; 
0x0000000007a697: mov rbx, rdx; xor edx, edx; jmp rcx; 
0x000000000758a5: mov rbx, rdx; xor edx, edx; jmp rsi; 
0x00000000114644: mov rbx, rsi; je short 0x0000000000114650; pop rbx; ret; 
0x0000000007b0a9: mov rbx, rsi; jmp rcx; 
0x0000000007b185: mov rbx, rsi; mov dword ptr [rsp+0x28], 0x20; jmp rcx; 
0x0000000007bf68: mov rbx, rsi; mov r10d, 0x1; jmp rcx; 
0x0000000007bda0: mov rbx, rsi; mov r12d, 0x1; jmp rcx; 
0x0000000007b1cd: mov rbx, rsi; mov r9d, 0x1; jmp rcx; 
0x0000000007b21d: mov rbx, rsi; xor r12d, r12d; jmp rcx; 
0x00000000091191: mov rcx, 0xfffffffe7fffffff; mov rdx, [rbx+0x28]; and [rdx+0x10], rcx; pop rbx; ret; 
0x000000000ff0d3: mov rcx, [r12]; call rax; 
0x0000000011bd85: mov rcx, [r8]; mov [rdx+0x10], rcx; mov [r8], rax; mov qword ptr [rip+0xc75e6], 0x0; ret; 
0x0000000011bd05: mov rcx, [r8]; mov [rdx+0x10], rcx; mov [r8], rax; mov qword ptr [rip+0xc7666], 0x0; ret; 
0x000000000837a5: mov rcx, [rax+0x10]; mov [rax], rdx; mov [rax+0x10], rdx; mov [rax+0x40], rcx; ret; 
0x00000000126d97: mov rcx, [rbp-0x8]; sub rcx, fs:[0x28]; jne 0x0000000000126e7d; leave; ret; 
0x000000000536e6: mov rcx, [rcx+rax*8]; mov [rdx+rax*8], rcx; xor eax, eax; ret; 
0x000000001895cc: mov rcx, [rcx-0x8]; mov [rdi], rsi; mov [r9-0x8], rcx; ret; 
0x000000001895cd: mov rcx, [rcx-0x8]; mov [rdi], rsi; mov [r9-0x8], rcx; ret; 
0x0000000011b344: mov rcx, [rdi+0x8]; xor eax, eax; cmp byte ptr [rcx], 0x0; je short 0x000000000011b350; ret; 
0x000000000dfee4: mov rcx, [rip+0x102f5d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000dfeb4: mov rcx, [rip+0x102f8d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000dfe84: mov rcx, [rip+0x102fbd]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000dfe54: mov rcx, [rip+0x102fed]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000dfdf4: mov rcx, [rip+0x10304d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000dfdc4: mov rcx, [rip+0x10307d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000dfb74: mov rcx, [rip+0x1032cd]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000deb84: mov rcx, [rip+0x1042bd]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000de7b4: mov rcx, [rip+0x10468d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000de564: mov rcx, [rip+0x1048dd]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000053658: mov rcx, [rip+0x18f7e9]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000005317f: mov rcx, [rip+0x18fcc2]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000005301c: mov rcx, [rip+0x18fe25]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000421d4: mov rcx, [rip+0x1a0c6d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000041bd4: mov rcx, [rip+0x1a126d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001623ce: mov rcx, [rip+0x80f6b]; lea r11, [rip+0x55734]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x00000000162374: mov rcx, [rip+0x80fc5]; lea r11, [rip+0x5574e]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x0000000015f9ee: mov rcx, [rip+0x8394b]; lea r11, [rip+0x57f54]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x0000000015f98d: mov rcx, [rip+0x839ac]; lea r11, [rip+0x57f75]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x0000000011a977: mov rcx, [rip+0xc84ca]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011a944: mov rcx, [rip+0xc84fd]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011a914: mov rcx, [rip+0xc852d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011a8e7: mov rcx, [rip+0xc855a]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011a464: mov rcx, [rip+0xc89dd]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011a437: mov rcx, [rip+0xc8a0a]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011a404: mov rcx, [rip+0xc8a3d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011a3d4: mov rcx, [rip+0xc8a6d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011a304: mov rcx, [rip+0xc8b3d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011a214: mov rcx, [rip+0xc8c2d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011a1d4: mov rcx, [rip+0xc8c6d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011a1a4: mov rcx, [rip+0xc8c9d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011a174: mov rcx, [rip+0xc8ccd]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011a144: mov rcx, [rip+0xc8cfd]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011a117: mov rcx, [rip+0xc8d2a]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011a0e4: mov rcx, [rip+0xc8d5d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011a0b4: mov rcx, [rip+0xc8d8d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011a084: mov rcx, [rip+0xc8dbd]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011a054: mov rcx, [rip+0xc8ded]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011a024: mov rcx, [rip+0xc8e1d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000119ff7: mov rcx, [rip+0xc8e4a]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000119fc7: mov rcx, [rip+0xc8e7a]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000119f94: mov rcx, [rip+0xc8ead]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000119f64: mov rcx, [rip+0xc8edd]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000119f37: mov rcx, [rip+0xc8f0a]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000119f07: mov rcx, [rip+0xc8f3a]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000119ed4: mov rcx, [rip+0xc8f6d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000119ea4: mov rcx, [rip+0xc8f9d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000119e74: mov rcx, [rip+0xc8fcd]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000119e44: mov rcx, [rip+0xc8ffd]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000119e14: mov rcx, [rip+0xc902d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000119de7: mov rcx, [rip+0xc905a]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000119db4: mov rcx, [rip+0xc908d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000119d87: mov rcx, [rip+0xc90ba]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000119d54: mov rcx, [rip+0xc90ed]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000119d24: mov rcx, [rip+0xc911d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000119cf4: mov rcx, [rip+0xc914d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000119cc4: mov rcx, [rip+0xc917d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000119c94: mov rcx, [rip+0xc91ad]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000119c64: mov rcx, [rip+0xc91dd]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000119c37: mov rcx, [rip+0xc920a]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000119bf4: mov rcx, [rip+0xc924d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000119bc4: mov rcx, [rip+0xc927d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001194f4: mov rcx, [rip+0xc994d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001194c7: mov rcx, [rip+0xc997a]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000119434: mov rcx, [rip+0xc9a0d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001192f4: mov rcx, [rip+0xc9b4d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001192c4: mov rcx, [rip+0xc9b7d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011922d: mov rcx, [rip+0xc9c14]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001191b4: mov rcx, [rip+0xc9c8d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000119184: mov rcx, [rip+0xc9cbd]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000117047: mov rcx, [rip+0xcbdfa]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000117014: mov rcx, [rip+0xcbe2d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000116fe7: mov rcx, [rip+0xcbe5a]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000116fb4: mov rcx, [rip+0xcbe8d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000116f84: mov rcx, [rip+0xcbebd]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000116f57: mov rcx, [rip+0xcbeea]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000116f24: mov rcx, [rip+0xcbf1d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000116ef7: mov rcx, [rip+0xcbf4a]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000116ec7: mov rcx, [rip+0xcbf7a]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000116e94: mov rcx, [rip+0xcbfad]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000116e64: mov rcx, [rip+0xcbfdd]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000116e37: mov rcx, [rip+0xcc00a]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000113ae4: mov rcx, [rip+0xcf35d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000113ab4: mov rcx, [rip+0xcf38d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000113a84: mov rcx, [rip+0xcf3bd]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000113a54: mov rcx, [rip+0xcf3ed]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000113a27: mov rcx, [rip+0xcf41a]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001139f4: mov rcx, [rip+0xcf44d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001139c4: mov rcx, [rip+0xcf47d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001138f4: mov rcx, [rip+0xcf54d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001138c4: mov rcx, [rip+0xcf57d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000113686: mov rcx, [rip+0xcf7bb]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000110604: mov rcx, [rip+0xd283d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001105d4: mov rcx, [rip+0xd286d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001105a4: mov rcx, [rip+0xd289d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000110264: mov rcx, [rip+0xd2bdd]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001101a4: mov rcx, [rip+0xd2c9d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001100e4: mov rcx, [rip+0xd2d5d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001100b4: mov rcx, [rip+0xd2d8d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010fea4: mov rcx, [rip+0xd2f9d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010fd64: mov rcx, [rip+0xd30dd]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010f324: mov rcx, [rip+0xd3b1d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010f194: mov rcx, [rip+0xd3cad]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010dca7: mov rcx, [rip+0xd519a]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010a9f4: mov rcx, [rip+0xd844d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010a9c4: mov rcx, [rip+0xd847d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010a994: mov rcx, [rip+0xd84ad]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010a967: mov rcx, [rip+0xd84da]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010a934: mov rcx, [rip+0xd850d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010a904: mov rcx, [rip+0xd853d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010a8d4: mov rcx, [rip+0xd856d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010a8a7: mov rcx, [rip+0xd859a]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010a874: mov rcx, [rip+0xd85cd]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010a0b7: mov rcx, [rip+0xd8d8a]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010a084: mov rcx, [rip+0xd8dbd]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010a054: mov rcx, [rip+0xd8ded]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010a024: mov rcx, [rip+0xd8e1d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000109734: mov rcx, [rip+0xd970d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000109704: mov rcx, [rip+0xd973d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000109644: mov rcx, [rip+0xd97fd]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000109614: mov rcx, [rip+0xd982d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001095e4: mov rcx, [rip+0xd985d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001095b4: mov rcx, [rip+0xd988d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000109584: mov rcx, [rip+0xd98bd]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000109264: mov rcx, [rip+0xd9bdd]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000108964: mov rcx, [rip+0xda4dd]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000108934: mov rcx, [rip+0xda50d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000108734: mov rcx, [rip+0xda70d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000108704: mov rcx, [rip+0xda73d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001085d4: mov rcx, [rip+0xda86d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001085a4: mov rcx, [rip+0xda89d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000fd2a4: mov rcx, [rip+0xe5b9d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000fd274: mov rcx, [rip+0xe5bcd]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000fd244: mov rcx, [rip+0xe5bfd]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000fd214: mov rcx, [rip+0xe5c2d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000fd1e4: mov rcx, [rip+0xe5c5d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000fd1b4: mov rcx, [rip+0xe5c8d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000fd184: mov rcx, [rip+0xe5cbd]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000b49d4: mov rcx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], rcx; lea rax, [rdi+0x17]; ret; 
0x000000000b5844: mov rcx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], rcx; lea rax, [rdi+0x18]; ret; 
0x000000000b3324: mov rcx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], rcx; mov [rdi+0x18], dh; ret; 
0x000000000b3304: mov rcx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], rcx; ret; 
0x000000000b4994: mov rcx, [rsi+0xe]; movdqu [rdi], xmm0; mov [rdi+0xe], rcx; lea rax, [rdi+0x15]; ret; 
0x000000000b5804: mov rcx, [rsi+0xe]; movdqu [rdi], xmm0; mov [rdi+0xe], rcx; lea rax, [rdi+0x16]; ret; 
0x000000000b32c4: mov rcx, [rsi+0xe]; movdqu [rdi], xmm0; mov [rdi+0xe], rcx; ret; 
0x000000000b49b4: mov rcx, [rsi+0xf]; movdqu [rdi], xmm0; mov [rdi+0xf], rcx; lea rax, [rdi+0x16]; ret; 
0x000000000b5824: mov rcx, [rsi+0xf]; movdqu [rdi], xmm0; mov [rdi+0xf], rcx; lea rax, [rdi+0x17]; ret; 
0x000000000b32e4: mov rcx, [rsi+0xf]; movdqu [rdi], xmm0; mov [rdi+0xf], rcx; ret; 
0x000000000b7f02: mov rcx, [rsi+rdx-0x8]; mov rsi, [rsi]; mov [rdi+rdx-0x8], rcx; mov [rdi], rsi; ret; 
0x00000000187bba: mov rcx, [rsi-0x8]; cmp rcx, rax; jne 0x00000000001885f3; xor eax, eax; ret; 
0x000000001891ea: mov rcx, [rsi-0x8]; cmp rcx, rax; jne 0x0000000000189433; xor eax, eax; ret; 
0x000000001885c6: mov rcx, [rsi-0x8]; cmp rcx, rax; jne short 0x00000000001885f3; xor eax, eax; ret; 
0x00000000189406: mov rcx, [rsi-0x8]; cmp rcx, rax; jne short 0x0000000000189433; xor eax, eax; ret; 
0x00000000166c83: mov rcx, [rsi-0x8]; mov [rdi-0xd], rdx; mov [rdi-0x8], rcx; ret; 
0x00000000166c84: mov rcx, [rsi-0x8]; mov [rdi-0xd], rdx; mov [rdi-0x8], rcx; ret; 
0x00000000166bf4: mov rcx, [rsi-0x8]; mov [rdi-0xe], rdx; mov [rdi-0x8], rcx; ret; 
0x00000000166bf3: mov rcx, [rsi-0x8]; mov [rdi-0xe], rdx; mov [rdi-0x8], rcx; ret; 
0x00000000166b64: mov rcx, [rsi-0x8]; mov [rdi-0xf], rdx; mov [rdi-0x8], rcx; ret; 
0x00000000161570: mov rcx, [rsi-0x9]; mov edx, [rsi-0x4]; mov [rdi-0x9], rcx; mov [rdi-0x4], edx; ret; 
0x00000000161750: mov rcx, [rsi-0xa]; mov edx, [rsi-0x4]; mov [rdi-0xa], rcx; mov [rdi-0x4], edx; ret; 
0x00000000161930: mov rcx, [rsi-0xb]; mov edx, [rsi-0x4]; mov [rdi-0xb], rcx; mov [rdi-0x4], edx; ret; 
0x00000000161b10: mov rcx, [rsi-0xc]; mov edx, [rsi-0x4]; mov [rdi-0xc], rcx; mov [rdi-0x4], edx; ret; 
0x00000000161d00: mov rcx, [rsi-0xd]; mov rdx, [rsi-0x8]; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000161f00: mov rcx, [rsi-0xe]; mov rdx, [rsi-0x8]; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000162100: mov rcx, [rsi-0xf]; mov rdx, [rsi-0x8]; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000167604: mov rcx, [rsi]; mov [rdi+0x1], rdx; mov [rdi], rcx; ret; 
0x00000000167594: mov rcx, [rsi]; mov [rdi+0x2], rdx; mov [rdi], rcx; ret; 
0x00000000167524: mov rcx, [rsi]; mov [rdi+0x3], rdx; mov [rdi], rcx; ret; 
0x000000001674b4: mov rcx, [rsi]; mov [rdi+0x4], rdx; mov [rdi], rcx; ret; 
0x00000000167444: mov rcx, [rsi]; mov [rdi+0x5], rdx; mov [rdi], rcx; ret; 
0x000000001673d4: mov rcx, [rsi]; mov [rdi+0x6], rdx; mov [rdi], rcx; ret; 
0x00000000167364: mov rcx, [rsi]; mov [rdi+0x7], rdx; mov [rdi], rcx; ret; 
0x000000000b4820: mov rcx, [rsi]; mov [rdi+0x8], dh; mov [rdi], rcx; lea rax, [rdi+0x8]; ret; 
0x000000000b31d0: mov rcx, [rsi]; mov [rdi+0x8], dh; mov [rdi], rcx; ret; 
0x000000000b3ec0: mov rcx, [rsi]; mov dl, [rsi+0x8]; mov [rdi], rcx; mov [rdi+0x8], dl; ret; 
0x000000000b31e0: mov rcx, [rsi]; mov dx, [rsi+0x8]; mov [rdi], rcx; mov [rdi+0x8], dx; ret; 
0x000000000b31f0: mov rcx, [rsi]; mov edx, [rsi+0x7]; mov [rdi], rcx; mov [rdi+0x7], edx; ret; 
0x000000000b3200: mov rcx, [rsi]; mov edx, [rsi+0x8]; mov [rdi], rcx; mov [rdi+0x8], edx; ret; 
0x000000000b3210: mov rcx, [rsi]; mov rdx, [rsi+0x5]; mov [rdi], rcx; mov [rdi+0x5], rdx; ret; 
0x000000000b3220: mov rcx, [rsi]; mov rdx, [rsi+0x6]; mov [rdi], rcx; mov [rdi+0x6], rdx; ret; 
0x000000000b3230: mov rcx, [rsi]; mov rdx, [rsi+0x7]; mov [rdi], rcx; mov [rdi+0x7], rdx; ret; 
0x00000000041da3: mov rcx, [rsp+0x108]; sub rcx, fs:[0x28]; jne short 0x0000000000041dc5; add rsp, 0x118; ret; 
0x00000000041e26: mov rcx, [rsp+0x108]; sub rcx, fs:[0x28]; jne short 0x0000000000041e48; add rsp, 0x118; ret; 
0x0000000015a49c: mov rcx, [rsp+0x10]; mov rdi, [rsp+0x18]; call rcx; 
0x00000000132bd0: mov rcx, [rsp+0x10]; mov rdx, r14; mov rdi, r13; mov rsi, [rsp+0x8]; call rbp; 
0x00000000041797: mov rcx, [rsp+0x138]; sub rcx, fs:[0x28]; jne short 0x00000000000417b2; add rsp, 0x148; ret; 
0x00000000042494: mov rcx, [rsp+0x138]; sub rcx, fs:[0x28]; jne short 0x00000000000424af; add rsp, 0x148; ret; 
0x00000000033bda: mov rcx, [rsp+0x18]; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; call r15; 
0x000000000455e5: mov rcx, [rsp+0x18]; sub rcx, fs:[0x28]; jne short 0x00000000000455fa; add rsp, 0x28; ret; 
0x000000000456d5: mov rcx, [rsp+0x18]; sub rcx, fs:[0x28]; jne short 0x00000000000456ea; add rsp, 0x28; ret; 
0x00000000050d37: mov rcx, [rsp+0x18]; sub rcx, fs:[0x28]; jne short 0x0000000000050d4f; add rsp, 0xd8; ret; 
0x0000000005fd6a: mov rcx, [rsp+0x18]; sub rcx, fs:[0x28]; jne short 0x000000000005fd82; add rsp, 0xd8; ret; 
0x0000000005fe3f: mov rcx, [rsp+0x18]; sub rcx, fs:[0x28]; jne short 0x000000000005fe57; add rsp, 0xd8; ret; 
0x0000000005fef6: mov rcx, [rsp+0x18]; sub rcx, fs:[0x28]; jne short 0x000000000005ff0e; add rsp, 0xd8; ret; 
0x0000000006008a: mov rcx, [rsp+0x18]; sub rcx, fs:[0x28]; jne short 0x00000000000600a2; add rsp, 0xd8; ret; 
0x0000000006014a: mov rcx, [rsp+0x18]; sub rcx, fs:[0x28]; jne short 0x0000000000060162; add rsp, 0xd8; ret; 
0x00000000060238: mov rcx, [rsp+0x18]; sub rcx, fs:[0x28]; jne short 0x0000000000060250; add rsp, 0xd8; ret; 
0x0000000006030f: mov rcx, [rsp+0x18]; sub rcx, fs:[0x28]; jne short 0x0000000000060327; add rsp, 0xd8; ret; 
0x000000000612a2: mov rcx, [rsp+0x18]; sub rcx, fs:[0x28]; jne short 0x00000000000612ba; add rsp, 0xd8; ret; 
0x0000000006137d: mov rcx, [rsp+0x18]; sub rcx, fs:[0x28]; jne short 0x0000000000061395; add rsp, 0xd8; ret; 
0x00000000082dfa: mov rcx, [rsp+0x18]; sub rcx, fs:[0x28]; jne short 0x0000000000082e12; add rsp, 0xd8; ret; 
0x00000000082eb6: mov rcx, [rsp+0x18]; sub rcx, fs:[0x28]; jne short 0x0000000000082ece; add rsp, 0xd8; ret; 
0x00000000082faf: mov rcx, [rsp+0x18]; sub rcx, fs:[0x28]; jne short 0x0000000000082fc7; add rsp, 0xd8; ret; 
0x0000000008307f: mov rcx, [rsp+0x18]; sub rcx, fs:[0x28]; jne short 0x0000000000083097; add rsp, 0xd8; ret; 
0x00000000083138: mov rcx, [rsp+0x18]; sub rcx, fs:[0x28]; jne short 0x0000000000083150; add rsp, 0xd8; ret; 
0x000000000c6be2: mov rcx, [rsp+0x18]; sub rcx, fs:[0x28]; jne short 0x00000000000c6bfa; add rsp, 0xd8; ret; 
0x000000000c6cbd: mov rcx, [rsp+0x18]; sub rcx, fs:[0x28]; jne short 0x00000000000c6cd5; add rsp, 0xd8; ret; 
0x000000000ccfeb: mov rcx, [rsp+0x18]; sub rcx, fs:[0x28]; jne short 0x00000000000cd036; add rsp, 0x28; ret; 
0x0000000010e483: mov rcx, [rsp+0x18]; sub rcx, fs:[0x28]; jne short 0x000000000010e4db; add rsp, 0x58; ret; 
0x0000000010e521: mov rcx, [rsp+0x18]; sub rcx, fs:[0x28]; jne short 0x000000000010e57b; add rsp, 0x58; ret; 
0x000000001107c9: mov rcx, [rsp+0x18]; sub rcx, fs:[0x28]; jne short 0x00000000001107de; add rsp, 0x28; ret; 
0x00000000119ac9: mov rcx, [rsp+0x18]; sub rcx, fs:[0x28]; jne short 0x0000000000119af3; add rsp, 0x58; ret; 
0x0000000011b1c4: mov rcx, [rsp+0x18]; sub rcx, fs:[0x28]; jne short 0x000000000011b223; add rsp, 0x58; ret; 
0x00000000127b1f: mov rcx, [rsp+0x18]; sub rcx, fs:[0x28]; jne short 0x0000000000127b3c; add rsp, 0xd8; ret; 
0x00000000127e03: mov rcx, [rsp+0x18]; sub rcx, fs:[0x28]; jne short 0x0000000000127e1b; add rsp, 0xd8; ret; 
0x00000000128e23: mov rcx, [rsp+0x18]; sub rcx, fs:[0x28]; jne short 0x0000000000128e3b; add rsp, 0xd8; ret; 
0x00000000129393: mov rcx, [rsp+0x18]; sub rcx, fs:[0x28]; jne short 0x00000000001293ab; add rsp, 0xd8; ret; 
0x00000000129473: mov rcx, [rsp+0x18]; sub rcx, fs:[0x28]; jne short 0x000000000012948b; add rsp, 0xd8; ret; 
0x00000000129553: mov rcx, [rsp+0x18]; sub rcx, fs:[0x28]; jne short 0x000000000012956b; add rsp, 0xd8; ret; 
0x0000000013111b: mov rcx, [rsp+0x18]; sub rcx, fs:[0x28]; jne short 0x0000000000131130; add rsp, 0x28; ret; 
0x00000000139003: mov rcx, [rsp+0x18]; sub rcx, fs:[0x28]; jne short 0x0000000000139018; add rsp, 0x28; ret; 
0x0000000014a8a6: mov rcx, [rsp+0x20]; mov rdi, r15; call rcx; 
0x00000000141ac3: mov rcx, [rsp+0x20]; mov rdx, [rsp+0x18]; mov rsi, [rsp+0x10]; call qword ptr [rax]; 
0x0000000014710e: mov rcx, [rsp+0x28]; mov rdi, r12; call rcx; 
0x0000000002da6e: mov rcx, [rsp+0x28]; mov rsi, [rsp+0x48]; mov rdi, [rsp+0x50]; mov rax, [rsp+0x18]; call rax; 
0x000000000323c4: mov rcx, [rsp+0x28]; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; mov rax, [rsp+0x10]; call rax; 
0x00000000109198: mov rcx, [rsp+0x28]; sub rcx, fs:[0x28]; jne 0x0000000000109245; add rsp, 0x68; ret; 
0x000000000db2f0: mov rcx, [rsp+0x28]; sub rcx, fs:[0x28]; jne short 0x00000000000db353; add rsp, 0x38; ret; 
0x000000000dfbc0: mov rcx, [rsp+0x28]; sub rcx, fs:[0x28]; jne short 0x00000000000dfc23; add rsp, 0x38; ret; 
0x000000000dfc60: mov rcx, [rsp+0x28]; sub rcx, fs:[0x28]; jne short 0x00000000000dfcc3; add rsp, 0x38; ret; 
0x000000000dff31: mov rcx, [rsp+0x28]; sub rcx, fs:[0x28]; jne short 0x00000000000dffa3; add rsp, 0x38; ret; 
0x000000000dffe1: mov rcx, [rsp+0x28]; sub rcx, fs:[0x28]; jne short 0x00000000000e0053; add rsp, 0x38; ret; 
0x00000000107f67: mov rcx, [rsp+0x28]; sub rcx, fs:[0x28]; jne short 0x0000000000107f7c; add rsp, 0x38; ret; 
0x0000000010e33c: mov rcx, [rsp+0x28]; sub rcx, fs:[0x28]; jne short 0x000000000010e393; add rsp, 0x68; ret; 
0x0000000010f8f1: mov rcx, [rsp+0x28]; sub rcx, fs:[0x28]; jne short 0x000000000010f95b; add rsp, 0x38; ret; 
0x0000000010f991: mov rcx, [rsp+0x28]; sub rcx, fs:[0x28]; jne short 0x000000000010f9fb; add rsp, 0x38; ret; 
0x0000000010fa46: mov rcx, [rsp+0x28]; sub rcx, fs:[0x28]; jne short 0x000000000010facb; add rsp, 0x38; ret; 
0x0000000010fb16: mov rcx, [rsp+0x28]; sub rcx, fs:[0x28]; jne short 0x000000000010fb9b; add rsp, 0x38; ret; 
0x000000001108a1: mov rcx, [rsp+0x28]; sub rcx, fs:[0x28]; jne short 0x00000000001108ed; add rsp, 0x68; ret; 
0x00000000111a5f: mov rcx, [rsp+0x28]; sub rcx, fs:[0x28]; jne short 0x0000000000111a74; add rsp, 0x38; ret; 
0x00000000111ae2: mov rcx, [rsp+0x28]; sub rcx, fs:[0x28]; jne short 0x0000000000111af7; add rsp, 0x38; ret; 
0x00000000111b56: mov rcx, [rsp+0x28]; sub rcx, fs:[0x28]; jne short 0x0000000000111b6b; add rsp, 0x38; ret; 
0x00000000111bc1: mov rcx, [rsp+0x28]; sub rcx, fs:[0x28]; jne short 0x0000000000111bd6; add rsp, 0x38; ret; 
0x000000001310ae: mov rcx, [rsp+0x28]; sub rcx, fs:[0x28]; jne short 0x00000000001310c3; add rsp, 0x38; ret; 
0x00000000159c7d: mov rcx, [rsp+0x28]; sub rcx, fs:[0x28]; jne short 0x0000000000159ce1; add rsp, 0x38; ret; 
0x00000000030d1d: mov rcx, [rsp+0x30]; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; mov rax, [rsp+0x20]; call rax; 
0x0000000002e0e4: mov rcx, [rsp+0x30]; mov rsi, [rsp+0x60]; mov rdi, [rsp+0x58]; call r13; 
0x0000000012a96f: mov rcx, [rsp+0x38]; mov esi, r14d; mov rdi, r13; call qword ptr [rsp+0x50]; 
0x00000000108b92: mov rcx, [rsp+0x38]; sub rcx, fs:[0x28]; jne 0x0000000000108c63; add rsp, 0x78; ret; 
0x00000000110756: mov rcx, [rsp+0x48]; sub rcx, fs:[0x28]; jne short 0x0000000000110777; add rsp, 0x58; ret; 
0x00000000159916: mov rcx, [rsp+0x48]; sub rcx, fs:[0x28]; jne short 0x000000000015995e; add rsp, 0x58; ret; 
0x0000000013fd85: mov rcx, [rsp+0x50]; mov rdx, [rsp+0xe0]; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; call qword ptr [rsp+0x68]; 
0x00000000159a0d: mov rcx, [rsp+0x58]; sub rcx, fs:[0x28]; jne short 0x0000000000159a64; add rsp, 0x68; ret; 
0x00000000159ba6: mov rcx, [rsp+0x58]; sub rcx, fs:[0x28]; jne short 0x0000000000159c14; add rsp, 0x68; ret; 
0x0000000014d637: mov rcx, [rsp+0x68]; sub rcx, fs:[0x28]; jne short 0x000000000014d64c; add rsp, 0x78; ret; 
0x00000000091b2c: mov rcx, [rsp+0x88]; sub rcx, fs:[0x28]; jne short 0x0000000000091bb7; add rsp, 0x98; ret; 
0x0000000011c9d1: mov rcx, [rsp+0x8]; mov rax, [rsp]; add rsp, 0x38; ret; 
0x0000000011ca32: mov rcx, [rsp+0x8]; mov rax, [rsp]; add rsp, 0x40; ret; 
0x00000000141692: mov rcx, [rsp+0x8]; mov rdi, rbp; call rcx; 
0x000000000dac28: mov rcx, [rsp+0x8]; mov rdx, [rsp+0x68]; mov rdi, r15; mov rsi, [rsp+0x60]; call r12; 
0x0000000009a691: mov rcx, [rsp+0x8]; sub rcx, fs:[0x28]; jne 0x000000000009a752; add rsp, 0x18; ret; 
0x00000000045a09: mov rcx, [rsp+0x8]; sub rcx, fs:[0x28]; jne short 0x0000000000045a6a; add rsp, 0x18; ret; 
0x00000000045ffe: mov rcx, [rsp+0x8]; sub rcx, fs:[0x28]; jne short 0x0000000000046013; add rsp, 0x18; ret; 
0x0000000004604b: mov rcx, [rsp+0x8]; sub rcx, fs:[0x28]; jne short 0x0000000000046060; add rsp, 0x18; ret; 
0x0000000004609e: mov rcx, [rsp+0x8]; sub rcx, fs:[0x28]; jne short 0x00000000000460b3; add rsp, 0x18; ret; 
0x000000000460eb: mov rcx, [rsp+0x8]; sub rcx, fs:[0x28]; jne short 0x0000000000046100; add rsp, 0x18; ret; 
0x00000000107fc2: mov rcx, [rsp+0x8]; sub rcx, fs:[0x28]; jne short 0x0000000000107fd7; add rsp, 0x18; ret; 
0x0000000010e3cb: mov rcx, [rsp+0x8]; sub rcx, fs:[0x28]; jne short 0x000000000010e423; add rsp, 0x18; ret; 
0x0000000010ea6f: mov rcx, [rsp+0x8]; sub rcx, fs:[0x28]; jne short 0x000000000010ea8b; add rsp, 0x18; ret; 
0x000000001145fb: mov rcx, [rsp+0x8]; sub rcx, fs:[0x28]; jne short 0x0000000000114610; add rsp, 0x18; ret; 
0x0000000011ac40: mov rcx, [rsp+0x8]; sub rcx, fs:[0x28]; jne short 0x000000000011ac55; add rsp, 0x18; ret; 
0x00000000138fb0: mov rcx, [rsp+0x8]; sub rcx, fs:[0x28]; jne short 0x0000000000138fc5; add rsp, 0x18; ret; 
0x00000000042934: mov rcx, [rsp+0x98]; sub rcx, fs:[0x28]; jne short 0x000000000004294f; add rsp, 0xa8; ret; 
0x00000000142bf5: mov rcx, [rsp]; mov rsi, r15; mov rdi, rbx; xor eax, eax; call rcx; 
0x00000000142b0a: mov rcx, [rsp]; xor eax, eax; mov rdi, rbx; call rcx; 
0x000000000c68bd: mov rcx, r12; mov rdx, r13; call rbx; 
0x000000000dbf3d: mov rcx, r12; mov rdx, r13; mov rsi, rbp; mov edi, r14d; call qword ptr [rsp+0x48]; 
0x000000000dc3dd: mov rcx, r12; mov rdx, r13; mov rsi, rbp; mov rdi, r14; call qword ptr [rsp+0x48]; 
0x0000000014c73d: mov rcx, r12; mov rdx, rbp; mov rsi, rbx; call rax; 
0x0000000012aee1: mov rcx, r12; mov rsi, rbp; mov rdi, r13; call qword ptr [rsp+0x40]; 
0x0000000013fc14: mov rcx, r13; call r10; 
0x00000000133030: mov rcx, r13; mov edx, 0x400; mov rsi, r15; mov rdi, r12; call rbp; 
0x00000000144bdd: mov rcx, r13; mov rdx, r12; mov rsi, rbp; mov rdi, rbx; call rax; 
0x0000000005cef9: mov rcx, r14; call qword ptr [rax+r8*8]; 
0x0000000013f819: mov rcx, r14; mov rdi, r13; call r12; 
0x0000000008713b: mov rcx, r14; mov rdi, r15; call r12; 
0x0000000012ddf8: mov rcx, r14; mov rdx, rbp; mov rsi, r13; mov edi, r12d; call qword ptr [rsp+0x40]; 
0x0000000012d828: mov rcx, r14; mov rdx, rbp; mov rsi, r13; mov rdi, r12; call qword ptr [rsp+0x40]; 
0x000000001412e2: mov rcx, r15; call rbp; 
0x0000000012c41a: mov rcx, rbp; mov rdx, r14; mov rsi, r12; call qword ptr [rsp+0x40]; 
0x000000000ddf6b: mov rcx, rbp; mov rdx, r14; mov rsi, r12; mov edi, r13d; call qword ptr [rsp+0x30]; 
0x000000000ddb8b: mov rcx, rbp; mov rdx, r14; mov rsi, r12; mov rdi, r13; call qword ptr [rsp+0x30]; 
0x0000000008a4f6: mov rcx, rbx; sub rcx, rdx; cmp rax, rcx; jbe short 0x000000000008a520; call qword ptr [rbx+0x60]; 
0x000000001415d3: mov rcx, rbx; xor eax, eax; pop rbx; pop rbp; jmp rcx; 
0x000000000b7ee5: mov rcx, rdx; rep movsb [rdi], [rsi]; ret; 
0x00000000147a07: mov rcx, rsi; xor eax, eax; mov rsi, rdx; add rdi, 0x10; jmp rcx; 
0x0000000018c6fb: mov rdi, 0x101010101010101; imul rax, rdi; shr rax, 0x38; ret; 
0x00000000116efa: mov rdi, 0x48018964d8f7000c; or eax, 0xffffffff; ret; 
0x00000000118fe4: mov rdi, 0xfffff00000000000; shl rax, 0x20; and rax, rdi; or rax, rsi; ret; 
0x0000000011594b: mov rdi, [r12+0x10]; test rdi, rdi; jne short 0x00000000001159a0; mov rdi, [r12]; call rbx; 
0x00000000114b05: mov rdi, [r12]; call rbx; 
0x000000000b94a5: mov rdi, [r12]; lea r9, [rsp+0x28]; call rbx; 
0x00000000043944: mov rdi, [r12]; mov rdx, r14; mov rax, [rsp]; call rax; 
0x000000001417c2: mov rdi, [r12]; mov rsi, r13; mov rax, [rdi+0x38]; call qword ptr [rax+0x10]; 
0x00000000141675: mov rdi, [r12]; mov rsi, rbp; mov rax, [rdi+0x38]; call qword ptr [rax+0x8]; 
0x00000000141728: mov rdi, [r12]; test r15d, r15d; je short 0x00000000001417b0; mov rax, [rdi+0x38]; call qword ptr [rax+0x18]; 
0x00000000190d7b: mov rdi, [r13+0x10]; add rdi, rbp; call r12; 
0x00000000114b89: mov rdi, [r13+0x10]; test rdi, rdi; jne 0x0000000000114c20; mov rdi, [r13]; call rbx; 
0x00000000114bbe: mov rdi, [r13+0x10]; test rdi, rdi; jne 0x0000000000114c60; mov rdi, [r13]; call rbx; 
0x00000000114b56: mov rdi, [r13+0x10]; test rdi, rdi; jne 0x0000000000114c80; mov rdi, [r13]; call rbx; 
0x000000001159be: mov rdi, [r13+0x10]; test rdi, rdi; jne 0x0000000000115a80; mov rdi, [r13]; call rbx; 
0x00000000114be9: mov rdi, [r13+0x10]; test rdi, rdi; jne short 0x0000000000114c40; mov rdi, [r13]; call rbx; 
0x00000000115a1a: mov rdi, [r13+0x10]; test rdi, rdi; jne short 0x0000000000115a40; mov rdi, [r13]; call rbx; 
0x00000000115a19: mov rdi, [r13+0x10]; test rdi, rdi; jne short 0x0000000000115a40; mov rdi, [r13]; call rbx; 
0x000000001159ee: mov rdi, [r13+0x10]; test rdi, rdi; jne short 0x0000000000115a60; mov rdi, [r13]; call rbx; 
0x00000000114b63: mov rdi, [r13]; call rbx; 
0x00000000141a04: mov rdi, [r13]; test rdi, rdi; je short 0x0000000000141a1c; mov rax, [rdi+0x8]; call qword ptr [rax+0x20]; 
0x000000001443a8: mov rdi, [r14]; add r13, rbx; sub edx, ebx; mov rsi, r13; call qword ptr [r14+0x40]; 
0x00000000144151: mov rdi, [r15]; add r13, rax; sub edx, eax; mov rsi, r13; call qword ptr [r15+0x40]; 
0x00000000144077: mov rdi, [r15]; add r13, rcx; sub edx, ecx; mov rsi, r13; call qword ptr [r15+0x40]; 
0x000000001472d4: mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x10]; 
0x00000000147214: mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x18]; 
0x0000000014b576: mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x20]; 
0x000000001470f5: mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x8]; 
0x0000000014a88a: mov rdi, [rax]; mov rsi, r15; mov rax, [rdi+0x38]; call qword ptr [rax+0x8]; 
0x0000000010b010: mov rdi, [rbp+0x18]; mov rsi, [rsp+0x28]; lea rcx, [rbp+0x28]; mov edx, 0x1; call qword ptr [rbp+0x40]; 
0x0000000010b370: mov rdi, [rbp+0x18]; mov rsi, [rsp+0x28]; lea rcx, [rbp+0x28]; mov edx, 0x2; call qword ptr [rbp+0x40]; 
0x0000000010b2f0: mov rdi, [rbp+0x18]; mov rsi, [rsp+0x28]; lea rcx, [rbp+0x28]; mov edx, 0x5; call qword ptr [rbp+0x40]; 
0x00000000045469: mov rdi, [rbp+0x8]; call rax; 
0x0000000010b7a8: mov rdi, [rbp-0x118]; mov rsi, r9; call qword ptr [rbp-0xf0]; 
0x000000000feed4: mov rdi, [rbp-0x1b0]; mov rdx, [r12]; mov rax, [rbp-0x1e0]; call rax; 
0x000000000ff0c4: mov rdi, [rbp-0x1b0]; push rax; mov rax, [rbp-0x1e0]; mov rcx, [r12]; call rax; 
0x000000000ff0c3: mov rdi, [rbp-0x1b0]; push rax; mov rax, [rbp-0x1e0]; mov rcx, [r12]; call rax; 
0x000000000e332d: mov rdi, [rbp-0x4c0]; lea rsi, [rbp-0x450]; call qword ptr [rbx+0x40]; 
0x00000000144840: mov rdi, [rbp]; add rbx, rax; sub edx, eax; mov rsi, rbx; call qword ptr [rbp+0x40]; 
0x00000000114ad2: mov rdi, [rbp]; call rbx; 
0x0000000014c341: mov rdi, [rbp]; mov rax, [rdi+0x8]; call qword ptr [rax+0x20]; 
0x00000000141ba6: mov rdi, [rbp]; test rdi, rdi; je short 0x0000000000141bb6; mov rax, [rdi+0x8]; call qword ptr [rax+0x20]; 
0x0000000010abfa: mov rdi, [rbx+0x18]; lea rcx, [rbx+0x28]; mov rsi, r14; mov edx, [rdx+rax]; call qword ptr [rbx+0x40]; 
0x0000000009b900: mov rdi, [rbx+0x48]; call rax; 
0x0000000009b871: mov rdi, [rbx+0x48]; mov rsi, r14; call rax; 
0x000000001329ec: mov rdi, [rbx+0x48]; test rdi, rdi; jne short 0x00000000001329e0; pop rbx; ret; 
0x000000001077b5: mov rdi, [rbx+0x80]; call qword ptr [rax+0x88]; 
0x0000000014b614: mov rdi, [rbx]; lea rdx, [rsp+0x18]; mov esi, 0x6; mov rax, [rdi+0x8]; call qword ptr [rax+0x28]; 
0x0000000014b580: mov rdi, [rbx]; mov rax, [rdi+0x8]; call qword ptr [rax+0x20]; 
0x00000000147c44: mov rdi, [rdi+0x40]; mov eax, [rdi]; test eax, eax; jne short 0x0000000000147c50; ret; 
0x0000000014e154: mov rdi, [rdi+0x40]; mov eax, [rdi]; test eax, eax; jne short 0x000000000014e160; ret; 
0x0000000009b6dc: mov rdi, [rdi+0x48]; mov rsi, rbp; call rax; 
0x00000000159855: mov rdi, [rdi+0x8]; push 0x0; lea rcx, [rsi+0x398]; push 0x0; call qword ptr [rax+0x270]; 
0x00000000159804: mov rdi, [rdi+0x8]; push 0x0; lea rcx, [rsi+0x398]; push 0x2; call qword ptr [rax+0x270]; 
0x0000000007f3d9: mov rdi, [rdi+0xe0]; call rax; 
0x0000000007f39d: mov rdi, [rdi+0xe0]; jmp rax; 
0x0000000007f426: mov rdi, [rdi+0xe0]; lea rsi, [rsp+0x8]; call rax; 
0x000000001597c8: mov rdi, [rdi]; call qword ptr [rax+0x278]; 
0x00000000125a83: mov rdi, [rdx+0x50]; mov rsi, rdx; call rax; 
0x0000000013e5f9: mov rdi, [rip+0xaa640]; ror rdi, 0x11; xor rdi, fs:[0x30]; call rax; 
0x000000001122c4: mov rdi, [rip+0xd549d]; test rdi, rdi; jne short 0x00000000001122e0; mov eax, 0x1; ret; 
0x00000000042cd7: mov rdi, [rsp+0x10]; mov rdx, rbp; mov rsi, r12; call rbx; 
0x00000000132fe0: mov rdi, [rsp+0x10]; mov rsi, r12; call qword ptr [rsp+0x58]; 
0x0000000015a4fe: mov rdi, [rsp+0x18]; call rax; 
0x0000000015a4a1: mov rdi, [rsp+0x18]; call rcx; 
0x000000000cc1c5: mov rdi, [rsp+0x18]; sub rdi, fs:[0x28]; jne short 0x00000000000cc1e9; add rsp, 0x28; ret; 
0x00000000059a25: mov rdi, [rsp+0x28]; sub rdi, fs:[0x28]; jne short 0x0000000000059a72; add rsp, 0x38; ret; 
0x000000000fd483: mov rdi, [rsp+0x28]; sub rdi, fs:[0x28]; jne short 0x00000000000fd4e6; add rsp, 0x38; ret; 
0x0000000013fd97: mov rdi, [rsp+0x38]; call qword ptr [rsp+0x68]; 
0x00000000033be4: mov rdi, [rsp+0x38]; call r15; 
0x00000000033d40: mov rdi, [rsp+0x38]; lea r8, [rsp+0xa0]; call r15; 
0x0000000002fd36: mov rdi, [rsp+0x48]; mov rax, [rsp+0x28]; call rax; 
0x0000000002ed87: mov rdi, [rsp+0x50]; call r14; 
0x000000000323ce: mov rdi, [rsp+0x50]; mov rax, [rsp+0x10]; call rax; 
0x0000000002da77: mov rdi, [rsp+0x50]; mov rax, [rsp+0x18]; call rax; 
0x00000000030d27: mov rdi, [rsp+0x50]; mov rax, [rsp+0x20]; call rax; 
0x0000000002e0ee: mov rdi, [rsp+0x58]; call r13; 
0x0000000002d282: mov rdi, [rsp+0x58]; mov rax, [rsp+0x20]; call rax; 
0x0000000002bfe4: mov rdi, [rsp+0x58]; mov rax, [rsp+0x28]; call rax; 
0x0000000002c56c: mov rdi, [rsp+0x60]; mov rax, [rsp+0x20]; call rax; 
0x0000000008e792: mov rdi, [rsp+0x8]; add rsp, 0x20; pop rbx; jmp rax; 
0x00000000046403: mov rdi, [rsp+0x8]; mov eax, 0x13e; syscall; 
0x00000000113953: mov rdi, [rsp+0x8]; mov eax, 0x1a; syscall; 
0x0000000010d663: mov rdi, [rsp+0x8]; mov eax, 0x7; syscall; 
0x00000000041c66: mov rdi, [rsp+0x8]; mov esi, 0x8; mov r8d, eax; mov eax, 0x82; syscall; 
0x00000000142552: mov rdi, [rsp+0x8]; mov r12d, eax; mov rax, [rdi+0x8]; call qword ptr [rax+0x20]; 
0x0000000010d75f: mov rdi, [rsp+0x8]; mov rdx, r12; mov eax, 0x10f; syscall; 
0x0000000008dfd5: mov rdi, [rsp]; add rsp, 0x10; pop rbx; jmp rax; 
0x00000000109695: mov rdi, [rsp]; mov r8d, eax; mov eax, 0x55; syscall; 
0x0000000015973e: mov rdi, [rsp]; mov rax, [rax+0x268]; jmp rax; 
0x0000000011594a: mov rdi, gs:[r12+0x10]; test rdi, rdi; jne short 0x00000000001159a0; mov rdi, [r12]; call rbx; 
0x00000000141e4a: mov rdi, r12; call qword ptr [rax+0x20]; 
0x000000001437a6: mov rdi, r12; call qword ptr [rax+0x28]; 
0x000000001470df: mov rdi, r12; call qword ptr [rax+0x8]; 
0x00000000143999: mov rdi, r12; call qword ptr [rbx]; 
0x0000000012d831: mov rdi, r12; call qword ptr [rsp+0x40]; 
0x0000000014f7b6: mov rdi, r12; call r13; 
0x000000000438ca: mov rdi, r12; call rax; 
0x00000000132f9c: mov rdi, r12; call rbp; 
0x00000000042cca: mov rdi, r12; call rbx; 
0x00000000147113: mov rdi, r12; call rcx; 
0x00000000098de5: mov rdi, r12; call rdx; 
0x0000000005b57c: mov rdi, r12; mov [rbp-0xe8], r8; call rax; 
0x00000000044cc3: mov rdi, r12; mov eax, 0xca; syscall; 
0x00000000129f33: mov rdi, r12; mov edx, [rsp+0x38]; call qword ptr [rsp+0x60]; 
0x00000000042ddb: mov rdi, r12; mov rdx, r14; call rbp; 
0x00000000093880: mov rdi, r12; neg rdi; call qword ptr [r13]; 
0x000000000979b4: mov rdi, r12; pop r12; pop r13; jmp rax; 
0x00000000039f4b: mov rdi, r12; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000005ceec: mov rdi, r12; sub rsi, rax; mov rax, [rip+0x18c3e7]; mov rcx, r14; call qword ptr [rax+r8*8]; 
0x0000000014b310: mov rdi, r13; call qword ptr [rax+0x20]; 
0x0000000014e73d: mov rdi, r13; call qword ptr [rax+0x28]; 
0x00000000143400: mov rdi, r13; call qword ptr [rax+0x30]; 
0x000000000ddb94: mov rdi, r13; call qword ptr [rsp+0x30]; 
0x0000000012aee7: mov rdi, r13; call qword ptr [rsp+0x40]; 
0x0000000012a977: mov rdi, r13; call qword ptr [rsp+0x50]; 
0x0000000013f81c: mov rdi, r13; call r12; 
0x0000000009b0b0: mov rdi, r13; call rax; 
0x00000000042d06: mov rdi, r13; call rbx; 
0x00000000086edb: mov rdi, r13; lea r9, [rsp+0x28]; call rbp; 
0x00000000148f40: mov rdi, r13; mov dword ptr [rsp+0x40], 0x0; mov [rsp+0x10], rax; mov rax, [rsp+0x48]; call qword ptr [rax+0x28]; 
0x000000000452bc: mov rdi, r13; mov eax, 0xca; syscall; 
0x0000000009aecb: mov rdi, r13; mov rdx, rbp; mov rsi, r12; call rax; 
0x00000000132bd8: mov rdi, r13; mov rsi, [rsp+0x8]; call rbp; 
0x00000000132bd7: mov rdi, r13; mov rsi, [rsp+0x8]; call rbp; 
0x000000001412d6: mov rdi, r14; add r8, fs:[0x0]; mov rcx, r15; call rbp; 
0x00000000073088: mov rdi, r14; call qword ptr [r12+0x38]; 
0x0000000014398b: mov rdi, r14; call qword ptr [rax+0x10]; 
0x00000000083c09: mov rdi, r14; call qword ptr [rax+0x18]; 
0x000000001439c5: mov rdi, r14; call qword ptr [rax+0x20]; 
0x00000000073469: mov rdi, r14; call qword ptr [rbx+0x38]; 
0x00000000072cd4: mov rdi, r14; call qword ptr [rcx+0x38]; 
0x000000000dc3e6: mov rdi, r14; call qword ptr [rsp+0x48]; 
0x00000000115b80: mov rdi, r14; call r13; 
0x0000000009b896: mov rdi, r14; call rax; 
0x00000000073858: mov rdi, r14; mov [rbp-0x8f5], r9b; mov [rbp-0x900], r8b; call rax; 
0x00000000044adc: mov rdi, r14; mov eax, 0xca; syscall; 
0x000000001151ab: mov rdi, r14; mov rax, [rbp-0x58]; mov r15d, r13d; call rax; 
0x0000000014a86b: mov rdi, r15; add dword ptr [rax], 0x1; mov rax, [rbx+0x60]; call qword ptr [rax+0x8]; 
0x00000000028d53: mov rdi, r15; add rcx, 0xa08; cmp [rsp+0x18], rcx; cmovne rdi, r14; call rdx; 
0x00000000078581: mov rdi, r15; call qword ptr [r12+0x38]; 
0x000000000fba16: mov rdi, r15; call qword ptr [r12+0x40]; 
0x00000000079317: mov rdi, r15; call qword ptr [r13+0x38]; 
0x00000000085e20: mov rdi, r15; call qword ptr [r13+0x80]; 
0x00000000080538: mov rdi, r15; call qword ptr [r14+0x38]; 
0x00000000085b4a: mov rdi, r15; call qword ptr [r14+0x80]; 
0x00000000085a7c: mov rdi, r15; call qword ptr [r14+0x90]; 
0x0000000008439f: mov rdi, r15; call qword ptr [rax+0x20]; 
0x0000000014a856: mov rdi, r15; call qword ptr [rax+0x28]; 
0x0000000008059d: mov rdi, r15; call qword ptr [rbp+0x38]; 
0x00000000086016: mov rdi, r15; call qword ptr [rbp+0x80]; 
0x00000000086106: mov rdi, r15; call qword ptr [rbx+0x80]; 
0x0000000014ca20: mov rdi, r15; call qword ptr [rdx+0x10]; 
0x0000000008713e: mov rdi, r15; call r12; 
0x00000000115aeb: mov rdi, r15; call r14; 
0x00000000085ba3: mov rdi, r15; call rax; 
0x0000000014a8ab: mov rdi, r15; call rcx; 
0x0000000008e5f7: mov rdi, r15; lea rbx, [rsi+0x1]; movzx esi, byte ptr [rsi]; call qword ptr [rax+0x18]; 
0x00000000078d10: mov rdi, r15; mov [rbp-0x938], r9d; mov [rbp-0x930], r11b; call rax; 
0x00000000142bb4: mov rdi, r15; mov [rsp+0x192], ax; mov rax, [rsp+0x30]; call rax; 
0x0000000013faaf: mov rdi, r15; mov [rsp+0x8], rcx; call rbp; 
0x000000000dac32: mov rdi, r15; mov rsi, [rsp+0x60]; call r12; 
0x0000000008e58b: mov rdi, r15; movzx esi, byte ptr [rsi]; call qword ptr [rax+0x18]; 
0x0000000014f66c: mov rdi, r15; xor eax, eax; add r13, rbx; call rbp; 
0x00000000085804: mov rdi, r8; call qword ptr [rax+0x18]; 
0x0000000014c33b: mov rdi, r8; call qword ptr [rax+0x20]; 
0x000000000e2d15: mov rdi, r8; call qword ptr [rbx+0x40]; 
0x00000000090b12: mov rdi, r8; jmp rax; 
0x00000000141336: mov rdi, r8; mov rax, [rax+0x18]; jmp rax; 
0x0000000015a833: mov rdi, r8; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000045188: mov rdi, r9; call r8; 
0x000000000deab7: mov rdi, r9; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000059852: mov rdi, rax; cmp rdx, rcx; jae short 0x000000000005983c; mov rax, r8; ret; 
0x00000000119223: mov rdi, rax; mov eax, 0x3c; syscall; 
0x00000000041893: mov rdi, rax; mov eax, 0xba; syscall; 
0x000000000b8393: mov rdi, rax; mov eax, [rcx+rax*4]; sub eax, [rcx+rsi*4]; je short 0x00000000000b8380; ret; 
0x000000001430c9: mov rdi, rbp; and esi, 0xfffffffc; call qword ptr [rax+0x30]; 
0x0000000007483e: mov rdi, rbp; call qword ptr [r12+0x38]; 
0x0000000008c0ed: mov rdi, rbp; call qword ptr [r12+0x90]; 
0x000000000886b1: mov rdi, rbp; call qword ptr [r13+0x10]; 
0x00000000075d0f: mov rdi, rbp; call qword ptr [r13+0x38]; 
0x0000000008bed1: mov rdi, rbp; call qword ptr [r13+0x90]; 
0x0000000007acac: mov rdi, rbp; call qword ptr [r14+0x38]; 
0x0000000008b084: mov rdi, rbp; call qword ptr [r15+0x80]; 
0x0000000008abfb: mov rdi, rbp; call qword ptr [r15+0x90]; 
0x0000000014cc6a: mov rdi, rbp; call qword ptr [rax+0x10]; 
0x0000000008bbff: mov rdi, rbp; call qword ptr [rax+0x18]; 
0x0000000014140e: mov rdi, rbp; call qword ptr [rax+0x20]; 
0x00000000159e7b: mov rdi, rbp; call qword ptr [rax+0x270]; 
0x0000000014243b: mov rdi, rbp; call qword ptr [rax+0x28]; 
0x0000000014303a: mov rdi, rbp; call qword ptr [rax+0x30]; 
0x00000000071f36: mov rdi, rbp; call qword ptr [rax+0x38]; 
0x0000000008b6bc: mov rdi, rbp; call qword ptr [rax+0x40]; 
0x000000001486c7: mov rdi, rbp; call qword ptr [rax+0x48]; 
0x0000000008bcf2: mov rdi, rbp; call qword ptr [rax+0x78]; 
0x0000000008afa4: mov rdi, rbp; call qword ptr [rax+0x80]; 
0x00000000141667: mov rdi, rbp; call qword ptr [rax+0x8]; 
0x0000000008ae46: mov rdi, rbp; call qword ptr [rax+0x90]; 
0x00000000143df9: mov rdi, rbp; call qword ptr [rax]; 
0x0000000007e7cb: mov rdi, rbp; call qword ptr [rbx+0x10]; 
0x0000000008e116: mov rdi, rbp; call qword ptr [rbx+0x18]; 
0x00000000075245: mov rdi, rbp; call qword ptr [rbx+0x38]; 
0x0000000007ebbc: mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x0000000008c571: mov rdi, rbp; call qword ptr [rbx+0x88]; 
0x0000000007e65a: mov rdi, rbp; call qword ptr [rbx+0x90]; 
0x00000000074c8a: mov rdi, rbp; call qword ptr [rcx+0x38]; 
0x0000000013260c: mov rdi, rbp; call qword ptr [rsp+0x10]; 
0x000000000da78b: mov rdi, rbp; call r12; 
0x0000000008aff3: mov rdi, rbp; call rax; 
0x000000000c6a47: mov rdi, rbp; call rbx; 
0x00000000141697: mov rdi, rbp; call rcx; 
0x000000001416a8: mov rdi, rbp; lea r15, [rsp+0x50]; call qword ptr [rax+0x20]; 
0x0000000014c040: mov rdi, rbp; lea r8, [rip-0x929a]; lea rdx, [rip+0x389f]; call qword ptr [rax]; 
0x0000000014202b: mov rdi, rbp; lea r9, [rsp+0x20]; call qword ptr [rax]; 
0x000000000b9beb: mov rdi, rbp; lea r9, [rsp+0x30]; call rbx; 
0x0000000014864a: mov rdi, rbp; mov [r12+0x70], edx; call qword ptr [rax+0x30]; 
0x00000000142328: mov rdi, rbp; mov [rbx], rax; xor eax, eax; call qword ptr [rbx+0x18]; 
0x0000000014dbdf: mov rdi, rbp; mov [rsp+0xc8], rdx; mov dword ptr [rsp+0xd0], 0x1; movups [rsp+0xb8], xmm5; call rax; 
0x00000000141742: mov rdi, rbp; mov dword ptr [rbx+0x18], 0x0; call qword ptr [rax+0x28]; 
0x000000001416c3: mov rdi, rbp; mov dword ptr [rbx+0x18], 0x1; call qword ptr [rax+0x28]; 
0x0000000014d9f6: mov rdi, rbp; mov dword ptr [rsp+0xa8], 0x1; mov dword ptr [rsp+0xb0], 0x1; mov dword ptr [rsp+0xb8], 0x1; call qword ptr [rax+0x18]; 
0x00000000107e54: mov rdi, rbp; mov eax, 0x135; syscall; 
0x000000001097c8: mov rdi, rbp; mov eax, 0x4f; syscall; 
0x0000000011381c: mov rdi, rbp; mov eax, 0x9; syscall; 
0x00000000091903: mov rdi, rbp; mov eax, 0xca; syscall; 
0x000000001149c6: mov rdi, rbp; mov edx, r13d; mov esi, 0x1; call r12; 
0x000000001423bc: mov rdi, rbp; mov qword ptr [rsp], 0x0; call qword ptr [rax+0x20]; 
0x000000001379e8: mov rdi, rbp; mov qword ptr [rsp], 0x0; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000001423ea: mov rdi, rbp; mov r12d, eax; xor eax, eax; call qword ptr [rbx+0x28]; 
0x00000000043aca: mov rdi, rbp; mov r13, r15; mov rax, [rsp]; add r15, r12; call rax; 
0x000000001157fe: mov rdi, rbp; mov rax, r12; pop rbp; pop r12; jmp rax; 
0x00000000114a56: mov rdi, rbp; mov rdx, r13; mov esi, 0x1; call r12; 
0x000000000b9d3f: mov rdi, rbp; mov rsi, [rsp+0x18]; call rbx; 
0x00000000086259: mov rdi, rbp; pop rbp; mov rax, [rax+0xe0]; mov rax, [rax+0x20]; jmp rax; 
0x00000000083b73: mov rdi, rbp; pop rbp; pop r12; jmp rax; 
0x00000000084070: mov rdi, rbp; pop rbx; pop rbp; jmp rax; 
0x000000000970e8: mov rdi, rbp; pop rbx; pop rbp; pop r12; jmp rax; 
0x00000000142d4c: mov rdi, rbp; pop rbx; xor eax, eax; pop rbp; jmp rdx; 
0x00000000159d97: mov rdi, rbp; push r8; mov r8, rbx; call qword ptr [rax+0x270]; 
0x00000000137ac3: mov rdi, rbp; ror rax, 0x11; xor rax, fs:[0x30]; mov qword ptr [rsp], 0x0; call rax; 
0x000000001157dd: mov rdi, rbp; xor edx, edx; mov esi, 0x1; call r12; 
0x000000001149b4: mov rdi, rbp; xor esi, esi; call r12; 
0x000000000b9ee9: mov rdi, rbp; xor r8d, r8d; lea r9, [rsp+0x28]; call rbx; 
0x000000000b9eea: mov rdi, rbp; xor r8d, r8d; lea r9, [rsp+0x28]; call rbx; 
0x0000000008faba: mov rdi, rbx; call qword ptr [r12+0x18]; 
0x0000000008cdfe: mov rdi, rbx; call qword ptr [r12+0x48]; 
0x0000000008ba2d: mov rdi, rbx; call qword ptr [r12+0x80]; 
0x0000000008c415: mov rdi, rbx; call qword ptr [r12+0x88]; 
0x0000000007f6f4: mov rdi, rbx; call qword ptr [r13+0x38]; 
0x000000000813ed: mov rdi, rbx; call qword ptr [r13+0x48]; 
0x0000000008155c: mov rdi, rbx; call qword ptr [r13+0x58]; 
0x000000000879f5: mov rdi, rbx; call qword ptr [r13+0x60]; 
0x0000000007710a: mov rdi, rbx; call qword ptr [r14+0x38]; 
0x00000000081142: mov rdi, rbx; call qword ptr [r14+0x48]; 
0x0000000008ceea: mov rdi, rbx; call qword ptr [r14+0x78]; 
0x0000000008f8cb: mov rdi, rbx; call qword ptr [r15+0x18]; 
0x0000000007fd2a: mov rdi, rbx; call qword ptr [r15+0x38]; 
0x0000000008e8ed: mov rdi, rbx; call qword ptr [rax+0x18]; 
0x0000000008e838: mov rdi, rbx; call qword ptr [rax+0x20]; 
0x00000000081586: mov rdi, rbx; call qword ptr [rax+0x58]; 
0x0000000008decf: mov rdi, rbx; call qword ptr [rbp+0x18]; 
0x00000000083af0: mov rdi, rbx; call qword ptr [rbp+0x20]; 
0x00000000084635: mov rdi, rbx; call qword ptr [rbp+0x30]; 
0x0000000007ed50: mov rdi, rbx; call qword ptr [rbp+0x60]; 
0x000000000817f1: mov rdi, rbx; call qword ptr [rbp+0x68]; 
0x0000000008b87b: mov rdi, rbx; call qword ptr [rbp+0x70]; 
0x0000000008699b: mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x00000000029b73: mov rdi, rbx; call r12; 
0x0000000002abc4: mov rdi, rbx; call r14; 
0x000000000e1dbe: mov rdi, rbx; call r15; 
0x0000000007dbb2: mov rdi, rbx; call r8; 
0x0000000002a2c9: mov rdi, rbx; call rax; 
0x0000000002a719: mov rdi, rbx; call rbp; 
0x00000000142b10: mov rdi, rbx; call rcx; 
0x000000000982b0: mov rdi, rbx; mov eax, 0xca; syscall; 
0x0000000008ceaa: mov rdi, rbx; mov edx, 0x1; call qword ptr [r14+0x80]; 
0x0000000013fc11: mov rdi, rbx; mov rcx, r13; call r10; 
0x0000000008537f: mov rdi, rbx; sub rdx, rsi; call qword ptr [rax+0x70]; 
0x0000000008d135: mov rdi, rbx; sub rdx, rsi; call qword ptr [rbp+0x70]; 
0x00000000142bfc: mov rdi, rbx; xor eax, eax; call rcx; 
0x00000000099225: mov rdi, rcx; mov eax, 0xca; syscall; 
0x00000000119013: mov rdi, rcx; sub rsp, 0x8; call rsi; 
0x000000000598d5: mov rdi, rdx; cmp rax, 0x9; ja short 0x00000000000598b0; mov rax, r8; ret; 
0x000000001820de: mov rdi, rsi; bsr eax, eax; lea rax, [rdi+rax-0x20]; vzeroupper; ret; 
0x0000000009b92d: mov rdi, rsi; call rax; 
0x00000000094918: mov rdi, rsi; mov [rsp+0x18], r11; call qword ptr [rax]; 
0x0000000014f8bb: mov rdi, rsp; mov dword ptr [rsp], 0x2; call r8; 
0x0000000014dc08: mov rdi, rsp; mov rsi, rbp; call qword ptr [rax+0x18]; 
0x000000000771c9: mov rdi, rsp; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000007715d: mov rdi, rsp; xor esi, esi; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000040a40: mov rdx, 0x3fe0000000000000; or rax, rdx; movq xmm0, rax; ret; 
0x0000000015a672: mov rdx, 0xfffffffffffffffe; rol rdx, cl; and [rdi+rax*8], rdx; xor eax, eax; ret; 
0x000000000386f7: mov rdx, 0xffffffffffffffff; cmove rax, rdx; ret; 
0x000000000e0b7f: mov rdx, 0xffffffffffffffff; cmp dword ptr fs:[rax], 0x26; mov eax, 0x20; cmovne rax, rdx; ret; 
0x000000000e0a4f: mov rdx, 0xffffffffffffffff; cmp dword ptr fs:[rax], 0x26; mov eax, 0x7f; cmovne rax, rdx; ret; 
0x00000000137787: mov rdx, 0xffffffffffffffff; ret; 
0x000000000feedb: mov rdx, [r12]; mov rax, [rbp-0x1e0]; call rax; 
0x00000000085b97: mov rdx, [r15+0x40]; sub rdx, rsi; mov [rsp+0x8], rcx; mov rdi, r15; call rax; 
0x0000000014ca11: mov rdx, [r15+0x8]; mov dword ptr [rbp], 0xe; lea rsi, [rbp+0x8]; mov rdi, r15; call qword ptr [rdx+0x10]; 
0x0000000013f813: mov rdx, [r15]; mov r8, rbp; mov rcx, r14; mov rdi, r13; call r12; 
0x0000000013f875: mov rdx, [r15]; xor r8d, r8d; mov rcx, r14; mov rdi, r13; call r12; 
0x0000000008964b: mov rdx, [rax+0x18]; mov [rax+0x20], rdx; pop rbx; ret; 
0x00000000107ac3: mov rdx, [rax+0xb0]; call qword ptr [rax+0x88]; 
0x000000000387c9: mov rdx, [rax+0xc0]; mov rax, [rip+0x1aa5d9]; mov [rax], rdx; ret; 
0x00000000028c39: mov rdx, [rax]; call rbp; 
0x000000000453b3: mov rdx, [rax]; mov [rbx+0x18], rdx; mov fs:[rax], rbx; call qword ptr [rbp+0xf88]; 
0x00000000028ca8: mov rdx, [rax]; mov rax, [rsp+0x10]; call rax; 
0x0000000008afe8: mov rdx, [rbp+0x40]; sub rdx, rsi; mov [rsp], rcx; mov rdi, rbp; call rax; 
0x00000000062117: mov rdx, [rbp-0x610]; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x0000000009119b: mov rdx, [rbx+0x28]; and [rdx+0x10], rcx; pop rbx; ret; 
0x0000000008537c: mov rdx, [rbx+0x40]; mov rdi, rbx; sub rdx, rsi; call qword ptr [rax+0x70]; 
0x0000000008d132: mov rdx, [rbx+0x40]; mov rdi, rbx; sub rdx, rsi; call qword ptr [rbp+0x70]; 
0x000000001077a7: mov rdx, [rbx+0xb0]; mov rsi, [rbx+0xa0]; mov rdi, [rbx+0x80]; call qword ptr [rax+0x88]; 
0x000000000de5c3: mov rdx, [rdi+0x10]; mov [rdi+0x10], rdx; mov rdx, [rdi+0x18]; mov [rdi+0x18], rdx; ret; 
0x000000000de5cb: mov rdx, [rdi+0x18]; mov [rdi+0x18], rdx; ret; 
0x000000000eacf8: mov rdx, [rdi+0x70]; xor eax, eax; test byte ptr [rdx+0xc8], 0x40; jne 0x00000000000eac2d; ret; 
0x000000000eaca6: mov rdx, [rdi+0x70]; xor eax, eax; test byte ptr [rdx+0xc8], 0x80; je 0x00000000000eac2d; ret; 
0x00000000061152: mov rdx, [rdi+0x88]; mov [rdx+0x8], rcx; mov dword ptr [rdx+0x4], 0x1; ret; 
0x0000000014b760: mov rdx, [rdi+0x8]; mov [rsp], rax; call qword ptr [rdx+0x20]; 
0x0000000014a663: mov rdx, [rdi+0x90]; bswap eax; mov [rdx+0x10], eax; mov eax, 0x1; ret; 
0x0000000014a563: mov rdx, [rdi+0x90]; bswap eax; mov [rdx+0xc], eax; mov eax, 0x1; ret; 
0x0000000007f163: mov rdx, [rdi+0xa0]; mov [rdx+0xe0], rcx; ret; 
0x0000000008969e: mov rdx, [rdi+0xa0]; mov rax, [rdx+0x20]; sub rax, [rdx+0x18]; sar rax, 0x2; ret; 
0x0000000008956e: mov rdx, [rdi+0xa0]; mov rax, [rdx+0x38]; sub rax, [rdx+0x30]; sar rax, 0x2; ret; 
0x00000000053175: mov rdx, [rdx+0x88]; xor eax, eax; ret; 
0x0000000005390e: mov rdx, [rdx+rcx*8]; mov [rax+rcx*8], rdx; xor eax, eax; ret; 
0x000000000de890: mov rdx, [rip+0x1045b1]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000de770: mov rdx, [rip+0x1046d1]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000de6b0: mov rdx, [rip+0x104791]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000da1b8: mov rdx, [rip+0x108c89]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x000000000d8f80: mov rdx, [rip+0x109ec1]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000d0228: mov rdx, [rip+0x112c19]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000d01f8: mov rdx, [rip+0x112c49]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000cd060: mov rdx, [rip+0x115de1]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000cceb0: mov rdx, [rip+0x115f91]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000ccd98: mov rdx, [rip+0x1160a9]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000061010: mov rdx, [rip+0x181e31]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000060fd8: mov rdx, [rip+0x181e69]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000046430: mov rdx, [rip+0x19ca11]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000041ca0: mov rdx, [rip+0x1a11a1]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000041c10: mov rdx, [rip+0x1a1231]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000039002: mov rdx, [rip+0x1a9ef7]; add rax, 0x200; mov fs:[rdx], rax; ret; 
0x00000000028d86: mov rdx, [rip+0x1ba0ab]; lea rdi, [rip+0x184f6e]; mov rsi, [rax]; xor eax, eax; call qword ptr [rdx+0x260]; 
0x000000000284c7: mov rdx, [rip+0x1ba99a]; cmp [rdx+0xd8], rax; jne short 0x000000000002849b; ret; 
0x0000000015c750: mov rdx, [rip+0x866f1]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000001284a0: mov rdx, [rip+0xba9a1]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000011b328: mov rdx, [rip+0xc7b19]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000011b2f0: mov rdx, [rip+0xc7b51]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000011b2b8: mov rdx, [rip+0xc7b89]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000011b288: mov rdx, [rip+0xc7bb9]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000011b250: mov rdx, [rip+0xc7bf1]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000011b168: mov rdx, [rip+0xc7cd9]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000011b128: mov rdx, [rip+0xc7d19]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000011b0f8: mov rdx, [rip+0xc7d49]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000011b0b0: mov rdx, [rip+0xc7d91]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000011aff0: mov rdx, [rip+0xc7e51]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000011ae50: mov rdx, [rip+0xc7ff1]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000011ad98: mov rdx, [rip+0xc80a9]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000011ace0: mov rdx, [rip+0xc8161]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000011a898: mov rdx, [rip+0xc85a9]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000011a7d0: mov rdx, [rip+0xc8671]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000011a730: mov rdx, [rip+0xc8711]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000011a670: mov rdx, [rip+0xc87d1]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000011a5d0: mov rdx, [rip+0xc8871]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000011a510: mov rdx, [rip+0xc8931]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000011a390: mov rdx, [rip+0xc8ab1]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000011a2c0: mov rdx, [rip+0xc8b81]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000119b98: mov rdx, [rip+0xc92a9]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000119b60: mov rdx, [rip+0xc92e1]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000119b20: mov rdx, [rip+0xc9321]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000119a50: mov rdx, [rip+0xc93f1]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000119a18: mov rdx, [rip+0xc9429]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000119940: mov rdx, [rip+0xc9501]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000119860: mov rdx, [rip+0xc95e1]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000001197b8: mov rdx, [rip+0xc9689]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x000000001196f0: mov rdx, [rip+0xc9751]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000119640: mov rdx, [rip+0xc9801]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000119590: mov rdx, [rip+0xc98b1]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000119400: mov rdx, [rip+0xc9a41]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000001193a8: mov rdx, [rip+0xc9a99]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000119298: mov rdx, [rip+0xc9ba9]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000119268: mov rdx, [rip+0xc9bd9]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000011bdee: mov rdx, [rip+0xcbc83]; add word ptr [rdx+rax*2], 0x1; ret; 
0x00000000116540: mov rdx, [rip+0xcc901]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000113980: mov rdx, [rip+0xcf4c1]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000111c28: mov rdx, [rip+0xd1219]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000111bf8: mov rdx, [rip+0xd1249]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000001102a0: mov rdx, [rip+0xd2ba1]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000110220: mov rdx, [rip+0xd2c21]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000110160: mov rdx, [rip+0xd2ce1]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010ff50: mov rdx, [rip+0xd2ef1]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010f5c8: mov rdx, [rip+0xd3879]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000010f508: mov rdx, [rip+0xd3939]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000010f450: mov rdx, [rip+0xd39f1]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000010f3b0: mov rdx, [rip+0xd3a91]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000010f160: mov rdx, [rip+0xd3ce1]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010ed88: mov rdx, [rip+0xd40b9]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010ed50: mov rdx, [rip+0xd40f1]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010ed10: mov rdx, [rip+0xd4131]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010eb38: mov rdx, [rip+0xd4309]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010e608: mov rdx, [rip+0xd4839]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000010e5d0: mov rdx, [rip+0xd4871]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000010e598: mov rdx, [rip+0xd48a9]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000010e2d8: mov rdx, [rip+0xd4b69]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010e290: mov rdx, [rip+0xd4bb1]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010e1e0: mov rdx, [rip+0xd4c61]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010ddf0: mov rdx, [rip+0xd5051]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010ddb0: mov rdx, [rip+0xd5091]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010dd58: mov rdx, [rip+0xd50e9]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000010d690: mov rdx, [rip+0xd57b1]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000001096c0: mov rdx, [rip+0xd9781]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000109540: mov rdx, [rip+0xd9901]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000108e28: mov rdx, [rip+0xda019]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000108df8: mov rdx, [rip+0xda049]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000108db0: mov rdx, [rip+0xda091]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000108d10: mov rdx, [rip+0xda131]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000108560: mov rdx, [rip+0xda8e1]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000108500: mov rdx, [rip+0xda941]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000001084a0: mov rdx, [rip+0xda9a1]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000108118: mov rdx, [rip+0xdad29]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000001080b8: mov rdx, [rip+0xdad89]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000108058: mov rdx, [rip+0xdade9]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000106dc0: mov rdx, [rip+0xdc081]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000106d10: mov rdx, [rip+0xdc131]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x000000000fd378: mov rdx, [rip+0xe5ac9]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000fd2d8: mov rdx, [rip+0xe5b69]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000167600: mov rdx, [rsi+0x1]; mov rcx, [rsi]; mov [rdi+0x1], rdx; mov [rdi], rcx; ret; 
0x00000000167590: mov rdx, [rsi+0x2]; mov rcx, [rsi]; mov [rdi+0x2], rdx; mov [rdi], rcx; ret; 
0x00000000167520: mov rdx, [rsi+0x3]; mov rcx, [rsi]; mov [rdi+0x3], rdx; mov [rdi], rcx; ret; 
0x000000001674b0: mov rdx, [rsi+0x4]; mov rcx, [rsi]; mov [rdi+0x4], rdx; mov [rdi], rcx; ret; 
0x000000000b4893: mov rdx, [rsi+0x5]; mov [rdi], rcx; mov [rdi+0x5], rdx; lea rax, [rdi+0xc]; ret; 
0x000000000b56f3: mov rdx, [rsi+0x5]; mov [rdi], rcx; mov [rdi+0x5], rdx; lea rax, [rdi+0xd]; ret; 
0x000000000b3213: mov rdx, [rsi+0x5]; mov [rdi], rcx; mov [rdi+0x5], rdx; ret; 
0x00000000167440: mov rdx, [rsi+0x5]; mov rcx, [rsi]; mov [rdi+0x5], rdx; mov [rdi], rcx; ret; 
0x000000000b48b3: mov rdx, [rsi+0x6]; mov [rdi], rcx; mov [rdi+0x6], rdx; lea rax, [rdi+0xd]; ret; 
0x000000000b5713: mov rdx, [rsi+0x6]; mov [rdi], rcx; mov [rdi+0x6], rdx; lea rax, [rdi+0xe]; ret; 
0x000000000b3223: mov rdx, [rsi+0x6]; mov [rdi], rcx; mov [rdi+0x6], rdx; ret; 
0x000000001673d0: mov rdx, [rsi+0x6]; mov rcx, [rsi]; mov [rdi+0x6], rdx; mov [rdi], rcx; ret; 
0x000000000b48d3: mov rdx, [rsi+0x7]; mov [rdi], rcx; mov [rdi+0x7], rdx; lea rax, [rdi+0xe]; ret; 
0x000000000b5733: mov rdx, [rsi+0x7]; mov [rdi], rcx; mov [rdi+0x7], rdx; lea rax, [rdi+0xf]; ret; 
0x000000000b3233: mov rdx, [rsi+0x7]; mov [rdi], rcx; mov [rdi+0x7], rdx; ret; 
0x00000000167360: mov rdx, [rsi+0x7]; mov rcx, [rsi]; mov [rdi+0x7], rdx; mov [rdi], rcx; ret; 
0x00000000184093: mov rdx, [rsi+r8-0x8]; mov [rdi], rcx; mov [rdi+r8-0x8], rdx; vzeroupper; ret; 
0x00000000161394: mov rdx, [rsi-0x8]; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x00000000161ce6: mov rdx, [rsi-0x8]; mov [rdi-0x15], r11; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000161ce8: mov rdx, [rsi-0x8]; mov [rdi-0x15], r11; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000161ee6: mov rdx, [rsi-0x8]; mov [rdi-0x16], r11; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000161ee8: mov rdx, [rsi-0x8]; mov [rdi-0x16], r11; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x000000001620e8: mov rdx, [rsi-0x8]; mov [rdi-0x17], r11; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000161378: mov rdx, [rsi-0x8]; mov [rdi-0x18], r10; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x000000001613b0: mov rdx, [rsi-0x8]; mov [rdi-0x8], rdx; ret; 
0x00000000161d02: mov rdx, [rsi-0x8]; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000161d04: mov rdx, [rsi-0x8]; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000161f04: mov rdx, [rsi-0x8]; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000161f02: mov rdx, [rsi-0x8]; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000162104: mov rdx, [rsi-0x8]; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000166e90: mov rdx, [rsi-0x9]; mov ecx, [rsi-0x4]; mov [rdi-0x9], rdx; mov [rdi-0x4], ecx; ret; 
0x00000000166e10: mov rdx, [rsi-0xa]; mov ecx, [rsi-0x4]; mov [rdi-0xa], rdx; mov [rdi-0x4], ecx; ret; 
0x00000000166d90: mov rdx, [rsi-0xb]; mov ecx, [rsi-0x4]; mov [rdi-0xb], rdx; mov [rdi-0x4], ecx; ret; 
0x00000000166d10: mov rdx, [rsi-0xc]; mov ecx, [rsi-0x4]; mov [rdi-0xc], rdx; mov [rdi-0x4], ecx; ret; 
0x00000000166c80: mov rdx, [rsi-0xd]; mov rcx, [rsi-0x8]; mov [rdi-0xd], rdx; mov [rdi-0x8], rcx; ret; 
0x00000000166bf0: mov rdx, [rsi-0xe]; mov rcx, [rsi-0x8]; mov [rdi-0xe], rdx; mov [rdi-0x8], rcx; ret; 
0x00000000166b60: mov rdx, [rsi-0xf]; mov rcx, [rsi-0x8]; mov [rdi-0xf], rdx; mov [rdi-0x8], rcx; ret; 
0x000000000b4810: mov rdx, [rsi]; mov [rdi], rdx; lea rax, [rdi+0x7]; ret; 
0x000000000b5660: mov rdx, [rsi]; mov [rdi], rdx; lea rax, [rdi+0x8]; ret; 
0x000000000b31c0: mov rdx, [rsi]; mov [rdi], rdx; ret; 
0x000000000b72c0: mov rdx, [rsi]; mov [rdi], rdx; xor ch, ch; mov [rdi+0x8], ch; ret; 
0x000000000a4d78: mov rdx, [rsp+0x10]; mov [rax], rdx; ret; 
0x000000000a4e30: mov rdx, [rsp+0x10]; mov [rdi], rdx; lea rax, [rdi+rax-0x1]; ret; 
0x000000000de73d: mov rdx, [rsp+0x10]; mov eax, 0xf7; syscall; 
0x0000000011c9cc: mov rdx, [rsp+0x10]; mov rcx, [rsp+0x8]; mov rax, [rsp]; add rsp, 0x38; ret; 
0x0000000011ca2d: mov rdx, [rsp+0x10]; mov rcx, [rsp+0x8]; mov rax, [rsp]; add rsp, 0x40; ret; 
0x0000000011a5a6: mov rdx, [rsp+0x10]; mov rsi, [rsp+0x8]; syscall; 
0x0000000011a6f8: mov rdx, [rsp+0x10]; mov rsi, [rsp+0x8]; xor r8d, r8d; mov eax, 0x2c; syscall; 
0x0000000011a4d8: mov rdx, [rsp+0x10]; mov rsi, [rsp+0x8]; xor r8d, r8d; mov eax, 0x2d; syscall; 
0x0000000012181b: mov rdx, [rsp+0x10]; xor esi, esi; mov edi, 0x2000004; call rax; 
0x000000000a4ca0: mov rdx, [rsp+0x18]; mov [rdi], rdx; add rax, rdi; ret; 
0x0000000011a85f: mov rdx, [rsp+0x18]; mov eax, 0x2c; mov rsi, [rsp+0x10]; mov edi, [rsp+0x8]; syscall; 
0x00000000141ac8: mov rdx, [rsp+0x18]; mov rsi, [rsp+0x10]; call qword ptr [rax]; 
0x0000000010ff16: mov rdx, [rsp+0x18]; mov rsi, [rsp+0x10]; mov eax, 0x17; mov edi, [rsp+0xc]; syscall; 
0x0000000011b076: mov rdx, [rsp+0x18]; mov rsi, [rsp+0x10]; mov eax, 0x46; mov edi, [rsp+0x8]; syscall; 
0x00000000052291: mov rdx, [rsp+0x18]; sub rdx, fs:[0x28]; jne short 0x00000000000522a9; add rsp, 0xd8; ret; 
0x0000000005ffc8: mov rdx, [rsp+0x18]; sub rdx, fs:[0x28]; jne short 0x000000000005ffe0; add rsp, 0xd8; ret; 
0x00000000107cbd: mov rdx, [rsp+0x18]; sub rdx, fs:[0x28]; jne short 0x0000000000107ce1; add rsp, 0x28; ret; 
0x0000000010fc10: mov rdx, [rsp+0x18]; sub rdx, fs:[0x28]; jne short 0x000000000010fc25; add rsp, 0x28; ret; 
0x00000000127c25: mov rdx, [rsp+0x18]; sub rdx, fs:[0x28]; jne short 0x0000000000127c45; add rsp, 0xd8; ret; 
0x00000000127d3b: mov rdx, [rsp+0x18]; sub rdx, fs:[0x28]; jne short 0x0000000000127d53; add rsp, 0xd8; ret; 
0x00000000128c45: mov rdx, [rsp+0x18]; sub rdx, fs:[0x28]; jne short 0x0000000000128c65; add rsp, 0xd8; ret; 
0x00000000128d5b: mov rdx, [rsp+0x18]; sub rdx, fs:[0x28]; jne short 0x0000000000128d73; add rsp, 0xd8; ret; 
0x0000000015a990: mov rdx, [rsp+0x18]; sub rdx, fs:[0x28]; jne short 0x000000000015a9a5; add rsp, 0x28; ret; 
0x00000000110031: mov rdx, [rsp+0x20]; mov eax, 0x10e; mov rsi, [rsp+0x18]; mov edi, [rsp+0x14]; syscall; 
0x00000000147328: mov rdx, [rsp+0x20]; mov rdi, r12; call rdx; 
0x000000000daeea: mov rdx, [rsp+0x28]; mov rax, [rsp+0x18]; call rax; 
0x00000000131011: mov rdx, [rsp+0x28]; sub rdx, fs:[0x28]; jne short 0x0000000000131049; add rsp, 0x38; ret; 
0x000000000dac2d: mov rdx, [rsp+0x68]; mov rdi, r15; mov rsi, [rsp+0x60]; call r12; 
0x0000000002c562: mov rdx, [rsp+0x68]; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x60]; mov rax, [rsp+0x20]; call rax; 
0x00000000043a67: mov rdx, [rsp+0x8]; mov rax, [rsp]; mov rsi, r13; mov rdi, r12; call rax; 
0x0000000008b96a: mov rdx, [rsp+0x8]; mov rsi, r13; mov rdi, rbx; call qword ptr [rbp+0x70]; 
0x00000000060f19: mov rdx, [rsp+0x8]; sub rdx, fs:[0x28]; jne short 0x0000000000060f37; add rsp, 0x18; ret; 
0x000000000d652e: mov rdx, [rsp+0x8]; sub rdx, fs:[0x28]; jne short 0x00000000000d6543; add rsp, 0x18; ret; 
0x000000000d8dee: mov rdx, [rsp+0x8]; sub rdx, fs:[0x28]; jne short 0x00000000000d8e03; add rsp, 0x18; ret; 
0x00000000108014: mov rdx, [rsp+0x8]; sub rdx, fs:[0x28]; jne short 0x0000000000108029; add rsp, 0x18; ret; 
0x000000001567f4: mov rdx, [rsp+0x8]; sub rdx, fs:[0x28]; jne short 0x0000000000156834; add rsp, 0x18; ret; 
0x0000000013fd8b: mov rdx, [rsp+0xe0]; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; call qword ptr [rsp+0x68]; 
0x000000000453b2: mov rdx, fs:[rax]; mov [rbx+0x18], rdx; mov fs:[rax], rbx; call qword ptr [rbp+0xf88]; 
0x000000000719f2: mov rdx, r12; call qword ptr [r13+0x38]; 
0x0000000010d705: mov rdx, r12; mov eax, 0x10f; syscall; 
0x0000000013de98: mov rdx, r12; mov eax, 0x81; syscall; 
0x000000000d8ffe: mov rdx, r12; mov esi, ebp; mov eax, 0xe6; syscall; 
0x000000000d9091: mov rdx, r12; mov esi, ebp; mov edi, 0x1; mov eax, 0xe6; syscall; 
0x000000000d90d0: mov rdx, r12; mov r8d, eax; mov esi, ebp; mov eax, 0xe6; syscall; 
0x00000000143988: mov rdx, r12; mov rdi, r14; call qword ptr [rax+0x10]; 
0x000000001439c2: mov rdx, r12; mov rdi, r14; call qword ptr [rax+0x20]; 
0x0000000008a73f: mov rdx, r12; mov rsi, r13; call qword ptr [r14+0x38]; 
0x00000000073d05: mov rdx, r12; mov rsi, r13; mov rdi, r14; call qword ptr [rbx+0x38]; 
0x00000000072cce: mov rdx, r12; mov rsi, r13; mov rdi, r14; call qword ptr [rcx+0x38]; 
0x0000000007fd24: mov rdx, r12; mov rsi, r14; mov rdi, rbx; call qword ptr [r15+0x38]; 
0x0000000007f6ee: mov rdx, r12; mov rsi, rbp; mov rdi, rbx; call qword ptr [r13+0x38]; 
0x00000000081556: mov rdx, r12; mov rsi, rbp; mov rdi, rbx; call qword ptr [r13+0x58]; 
0x00000000081580: mov rdx, r12; mov rsi, rbp; mov rdi, rbx; call qword ptr [rax+0x58]; 
0x00000000144be0: mov rdx, r12; mov rsi, rbp; mov rdi, rbx; call rax; 
0x0000000012639a: mov rdx, r12; movups [rbp-0x78], xmm3; call rax; 
0x0000000012609a: mov rdx, r12; movups [rbp-0x78], xmm4; call rax; 
0x000000001265ca: mov rdx, r12; movups [rbp-0x78], xmm6; call rax; 
0x000000001266a1: mov rdx, r12; movups [rbp-0x78], xmm7; call rax; 
0x0000000009c028: mov rdx, r12; pop r12; pop r13; ret; 
0x000000000c68c0: mov rdx, r13; call rbx; 
0x00000000114a59: mov rdx, r13; mov esi, 0x1; call r12; 
0x000000000b9d37: mov rdx, r13; mov r9, [rsp+0x10]; mov rdi, rbp; mov rsi, [rsp+0x18]; call rbx; 
0x0000000009a371: mov rdx, r13; mov rdi, r12; call rax; 
0x00000000073a23: mov rdx, r13; mov rdi, r14; call qword ptr [r12+0x38]; 
0x00000000073466: mov rdx, r13; mov rdi, r14; call qword ptr [rbx+0x38]; 
0x00000000144aa5: mov rdx, r13; mov rsi, r12; mov rdi, rbp; call rax; 
0x0000000007644f: mov rdx, r13; mov rsi, r14; mov rdi, rbp; call qword ptr [r12+0x38]; 
0x0000000008b6b6: mov rdx, r13; mov rsi, r14; mov rdi, rbp; call qword ptr [rax+0x40]; 
0x0000000007523f: mov rdx, r13; mov rsi, r14; mov rdi, rbp; call qword ptr [rbx+0x38]; 
0x00000000074c84: mov rdx, r13; mov rsi, r14; mov rdi, rbp; call qword ptr [rcx+0x38]; 
0x000000000dbf40: mov rdx, r13; mov rsi, rbp; mov edi, r14d; call qword ptr [rsp+0x48]; 
0x000000000dc3e0: mov rdx, r13; mov rsi, rbp; mov rdi, r14; call qword ptr [rsp+0x48]; 
0x00000000082393: mov rdx, r13; mov rsi, rbp; mov rdi, rbx; call qword ptr [r14+0x38]; 
0x00000000126038: mov rdx, r13; movups [rbp-0x78], xmm5; call rax; 
0x000000000b9be5: mov rdx, r13; xor r8d, r8d; mov rdi, rbp; lea r9, [rsp+0x30]; call rbx; 
0x00000000042dde: mov rdx, r14; call rbp; 
0x000000001592b8: mov rdx, r14; mov esi, 0x40; mov rdi, rbx; call rax; 
0x000000000b9fb7: mov rdx, r14; mov r9, [rsp+0x10]; mov rdi, rbp; mov rsi, [rsp+0x18]; call rbx; 
0x00000000043948: mov rdx, r14; mov rax, [rsp]; call rax; 
0x00000000132bd5: mov rdx, r14; mov rdi, r13; mov rsi, [rsp+0x8]; call rbp; 
0x000000000b9ee7: mov rdx, r14; mov rdi, rbp; xor r8d, r8d; lea r9, [rsp+0x28]; call rbx; 
0x0000000012c41d: mov rdx, r14; mov rsi, r12; call qword ptr [rsp+0x40]; 
0x000000000ddf6e: mov rdx, r14; mov rsi, r12; mov edi, r13d; call qword ptr [rsp+0x30]; 
0x000000000ddb8e: mov rdx, r14; mov rsi, r12; mov rdi, r13; call qword ptr [rsp+0x30]; 
0x00000000071f30: mov rdx, r14; mov rsi, r12; mov rdi, rbp; call qword ptr [rax+0x38]; 
0x000000000438c4: mov rdx, r14; mov rsi, r13; mov rdi, r12; call rax; 
0x0000000007a7ba: mov rdx, r14; mov rsi, r15; mov rdi, rbp; call qword ptr [rbx+0x38]; 
0x00000000061e95: mov rdx, r14; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000ba1c6: mov rdx, r14; xor r8d, r8d; mov rdi, rbp; lea r9, [rsp+0x30]; call rbx; 
0x0000000007bfef: mov rdx, r15; mov rsi, r12; mov rdi, rbp; call qword ptr [r14+0x38]; 
0x000000000720c0: mov rdx, r15; mov rsi, r12; mov rdi, rbp; call qword ptr [rax+0x38]; 
0x0000000009b0aa: mov rdx, r15; mov rsi, r14; mov rdi, r13; call rax; 
0x0000000012f3dd: mov rdx, r15; mov rsi, r14; mov rdi, rbx; call rax; 
0x00000000069ee5: mov rdx, r15; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000119203: mov rdx, r8; mov r8, r9; mov r10, [rsp+0x8]; mov eax, 0x38; syscall; 
0x0000000008bcec: mov rdx, r8; mov rsi, r12; mov rdi, rbp; call qword ptr [rax+0x78]; 
0x0000000005b576: mov rdx, r8; mov rsi, r14; mov rdi, r12; mov [rbp-0xe8], r8; call rax; 
0x00000000098a24: mov rdx, r8; pop r12; pop r13; jmp rax; 
0x0000000012198f: mov rdx, rax; call qword ptr [r12+0x28]; 
0x00000000123e21: mov rdx, rax; call qword ptr [r13+0x28]; 
0x000000001222e6: mov rdx, rax; call qword ptr [rbx+0x28]; 
0x0000000008fb55: mov rdx, rax; mov rax, [rax]; test rax, rax; jne short 0x000000000008fb50; ret; 
0x000000001247d3: mov rdx, rax; mov rsi, r8; call qword ptr [r10+0x28]; 
0x000000000a4948: mov rdx, rax; xor eax, eax; mov [rdi], rdx; ret; 
0x0000000012b9f8: mov rdx, rbp; call qword ptr [rsp+0x60]; 
0x000000000433cf: mov rdx, rbp; mov rdi, r12; call rbx; 
0x0000000009aece: mov rdx, rbp; mov rsi, r12; call rax; 
0x00000000042cdc: mov rdx, rbp; mov rsi, r12; call rbx; 
0x00000000042d00: mov rdx, rbp; mov rsi, r12; mov rdi, r13; call rbx; 
0x0000000008cee4: mov rdx, rbp; mov rsi, r12; mov rdi, rbx; call qword ptr [r14+0x78]; 
0x0000000012ddfb: mov rdx, rbp; mov rsi, r13; mov edi, r12d; call qword ptr [rsp+0x40]; 
0x0000000012d82b: mov rdx, rbp; mov rsi, r13; mov rdi, r12; call qword ptr [rsp+0x40]; 
0x00000000042d1b: mov rdx, rbp; mov rsi, r14; mov rdi, r12; call rbx; 
0x0000000014c740: mov rdx, rbp; mov rsi, rbx; call rax; 
0x00000000074bbe: mov rdx, rbp; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000772d1: mov rdx, rbx; call qword ptr [r13+0x38]; 
0x00000000073085: mov rdx, rbx; mov rdi, r14; call qword ptr [r12+0x38]; 
0x0000000007857e: mov rdx, rbx; mov rdi, r15; call qword ptr [r12+0x38]; 
0x0000000007483b: mov rdx, rbx; mov rdi, rbp; call qword ptr [r12+0x38]; 
0x00000000078f8b: mov rdx, rbx; mov rsi, r10; mov rdi, r15; call qword ptr [r12+0x38]; 
0x00000000079311: mov rdx, rbx; mov rsi, r10; mov rdi, r15; call qword ptr [r13+0x38]; 
0x00000000080e5e: mov rdx, rbx; mov rsi, r12; call qword ptr [r14+0x38]; 
0x0000000008a8a2: mov rdx, rbx; mov rsi, r12; mov rdi, rbp; call qword ptr [r13+0x38]; 
0x00000000082476: mov rdx, rbx; mov rsi, r13; mov rdi, rbp; call qword ptr [r14+0x38]; 
0x0000000010853f: mov rdx, rcx; cmp r9d, 0x1; ja short 0x0000000000108578; mov eax, 0x106; syscall; 
0x0000000011366d: mov rdx, rcx; mov r10, r8; mov r8, r9; mov r9, [rsp+0x8]; syscall; 
0x0000000007aca6: mov rdx, rcx; mov rsi, r12; mov rdi, rbp; call qword ptr [r14+0x38]; 
0x000000000751ad: mov rdx, rcx; mov rsi, r9; mov rdi, rbp; call qword ptr [r12+0x38]; 
0x00000000075d09: mov rdx, rcx; mov rsi, r9; mov rdi, rbp; call qword ptr [r13+0x38]; 
0x000000000b8254: mov rdx, rdi; rep stosb [rdi]; mov rax, rdx; ret; 
0x0000000015c734: mov rdx, rsi; mov eax, 0xcb; mov esi, 0x80; syscall; 
0x0000000015c6c4: mov rdx, rsi; mov eax, 0xcc; mov esi, 0x80; syscall; 
0x000000000d8e46: mov rdx, rsi; mov eax, 0xe5; xor esi, esi; lea edi, [rdi*8+0x2]; syscall; 
0x000000000913a4: mov rdx, rsi; mov edi, [rdi+0x2d0]; mov esi, 0x80; mov eax, 0xcc; syscall; 
0x0000000010da0f: mov rdx, rsi; xor esi, esi; syscall; 
0x0000000010e990: mov rdx, rsp; mov eax, 0x10; syscall; 
0x0000000010e3e8: mov rdx, rsp; mov esi, 0x10; mov eax, 0x48; syscall; 
0x00000000043940: mov rsi, [r13]; mov rdi, [r12]; mov rdx, r14; mov rax, [rsp]; call rax; 
0x00000000114cf0: mov rsi, [r14]; mov rax, [rsp+0x10]; mov rdi, rbp; call rax; 
0x00000000148c4e: mov rsi, [r8+0x40]; mov edx, [rsi+0x1c8]; add rsi, 0x38; jmp qword ptr [rax+0x18]; 
0x00000000044a84: mov rsi, [rax+0x20]; mov edi, ebp; ror rdx, 0x11; xor rdx, fs:[0x30]; call rdx; 
0x000000001151a8: mov rsi, [rax]; mov rdi, r14; mov rax, [rbp-0x58]; mov r15d, r13d; call rax; 
0x00000000028cc4: mov rsi, [rax]; xor eax, eax; call qword ptr [rdx+0x260]; 
0x00000000073a1c: mov rsi, [rbp-0x8c8]; mov rdx, r13; mov rdi, r14; call qword ptr [r12+0x38]; 
0x0000000007345f: mov rsi, [rbp-0x8c8]; mov rdx, r13; mov rdi, r14; call qword ptr [rbx+0x38]; 
0x00000000142324: mov rsi, [rbx+0x10]; mov rdi, rbp; mov [rbx], rax; xor eax, eax; call qword ptr [rbx+0x18]; 
0x00000000085378: mov rsi, [rbx+0x10]; mov rdx, [rbx+0x40]; mov rdi, rbx; sub rdx, rsi; call qword ptr [rax+0x70]; 
0x00000000143984: mov rsi, [rbx+0x10]; mov rdx, r12; mov rdi, r14; call qword ptr [rax+0x10]; 
0x000000001439be: mov rsi, [rbx+0x10]; mov rdx, r12; mov rdi, r14; call qword ptr [rax+0x20]; 
0x000000001423e6: mov rsi, [rbx+0x20]; mov rdi, rbp; mov r12d, eax; xor eax, eax; call qword ptr [rbx+0x28]; 
0x000000001077ae: mov rsi, [rbx+0xa0]; mov rdi, [rbx+0x80]; call qword ptr [rax+0x88]; 
0x000000001150df: mov rsi, [rbx]; mov r13, rbx; mov rdi, rbp; call r12; 
0x0000000007cc4a: mov rsi, [rip+0x1662f7]; mov rdi, rsp; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000771c2: mov rsi, [rip+0x16bd7f]; mov rdi, rsp; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000b7f07: mov rsi, [rsi]; mov [rdi+rdx-0x8], rcx; mov [rdi], rsi; ret; 
0x000000001895ca: mov rsi, [rsi]; mov rcx, [rcx-0x8]; mov [rdi], rsi; mov [r9-0x8], rcx; ret; 
0x00000000141acd: mov rsi, [rsp+0x10]; call qword ptr [rax]; 
0x0000000010ff1b: mov rsi, [rsp+0x10]; mov eax, 0x17; mov edi, [rsp+0xc]; syscall; 
0x0000000011b07b: mov rsi, [rsp+0x10]; mov eax, 0x46; mov edi, [rsp+0x8]; syscall; 
0x00000000108c03: mov rsi, [rsp+0x10]; mov edi, [rsp+0x18]; mov eax, 0x101; syscall; 
0x0000000010dd28: mov rsi, [rsp+0x10]; mov edi, [rsp+0x8]; syscall; 
0x0000000011ae1e: mov rsi, [rsp+0x10]; mov edi, [rsp+0xc]; mov eax, 0x133; syscall; 
0x0000000011955e: mov rsi, [rsp+0x10]; mov edi, [rsp+0xc]; mov eax, 0xe8; syscall; 
0x0000000010f37a: mov rsi, [rsp+0x10]; mov r8d, eax; mov edi, [rsp+0x8]; mov eax, 0x13; syscall; 
0x0000000010f41a: mov rsi, [rsp+0x10]; mov r8d, eax; mov edi, [rsp+0x8]; mov eax, 0x14; syscall; 
0x00000000108d7c: mov rsi, [rsp+0x10]; mov r8d, eax; mov edi, [rsp+0x8]; mov eax, 0x1; syscall; 
0x0000000011a79a: mov rsi, [rsp+0x10]; mov r8d, eax; mov edi, [rsp+0x8]; mov eax, 0x2e; syscall; 
0x0000000011a63a: mov rsi, [rsp+0x10]; mov r8d, eax; mov edi, [rsp+0x8]; mov eax, 0x2f; syscall; 
0x00000000108cdc: mov rsi, [rsp+0x10]; mov r8d, eax; mov edi, [rsp+0x8]; xor eax, eax; syscall; 
0x0000000011a28c: mov rsi, [rsp+0x10]; mov r8d, eax; mov edi, [rsp+0xc]; mov eax, 0x2b; syscall; 
0x000000000463fb: mov rsi, [rsp+0x10]; mov r8d, eax; mov rdi, [rsp+0x8]; mov eax, 0x13e; syscall; 
0x0000000011394b: mov rsi, [rsp+0x10]; mov r8d, eax; mov rdi, [rsp+0x8]; mov eax, 0x1a; syscall; 
0x0000000010d65b: mov rsi, [rsp+0x10]; mov r8d, eax; mov rdi, [rsp+0x8]; mov eax, 0x7; syscall; 
0x0000000014168d: mov rsi, [rsp+0x10]; mov rcx, [rsp+0x8]; mov rdi, rbp; call rcx; 
0x0000000008e78d: mov rsi, [rsp+0x10]; mov rdi, [rsp+0x8]; add rsp, 0x20; pop rbx; jmp rax; 
0x00000000097c08: mov rsi, [rsp+0x18]; add rsp, 0x18; jmp rax; 
0x000000000b9d42: mov rsi, [rsp+0x18]; call rbx; 
0x0000000011003b: mov rsi, [rsp+0x18]; mov edi, [rsp+0x14]; syscall; 
0x000000000c68b8: mov rsi, [rsp+0x18]; mov rcx, r12; mov rdx, r13; call rbx; 
0x000000001470da: mov rsi, [rsp+0x18]; mov rdi, r12; call qword ptr [rax+0x8]; 
0x00000000086ed6: mov rsi, [rsp+0x18]; mov rdi, r13; lea r9, [rsp+0x28]; call rbp; 
0x000000000976d8: mov rsi, [rsp+0x18]; pop rbx; pop rbp; pop r12; jmp rax; 
0x0000000012926a: mov rsi, [rsp+0x18]; sub rsi, fs:[0x28]; jne short 0x0000000000129285; add rsp, 0x28; ret; 
0x000000001292ca: mov rsi, [rsp+0x18]; sub rsi, fs:[0x28]; jne short 0x00000000001292e5; add rsp, 0x28; ret; 
0x0000000015a26b: mov rsi, [rsp+0x18]; sub rsi, fs:[0x28]; jne short 0x000000000015a285; add rsp, 0x28; ret; 
0x00000000029875: mov rsi, [rsp+0x18]; xor r8d, r8d; call rbx; 
0x000000000c6a3f: mov rsi, [rsp+0x18]; xor r8d, r8d; mov rdi, rbp; call rbx; 
0x0000000010b014: mov rsi, [rsp+0x28]; lea rcx, [rbp+0x28]; mov edx, 0x1; call qword ptr [rbp+0x40]; 
0x0000000010b374: mov rsi, [rsp+0x28]; lea rcx, [rbp+0x28]; mov edx, 0x2; call qword ptr [rbp+0x40]; 
0x0000000010b2f4: mov rsi, [rsp+0x28]; lea rcx, [rbp+0x28]; mov edx, 0x5; call qword ptr [rbp+0x40]; 
0x0000000015a015: mov rsi, [rsp+0x28]; mov esi, [rsi]; lea r9, [r11+rsi]; mov esi, [rsp+0x24]; call rax; 
0x00000000098de0: mov rsi, [rsp+0x28]; mov rdi, r12; call rdx; 
0x00000000147109: mov rsi, [rsp+0x30]; mov rcx, [rsp+0x28]; mov rdi, r12; call rcx; 
0x0000000013fd93: mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; call qword ptr [rsp+0x68]; 
0x00000000033be0: mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; call r15; 
0x00000000033d3c: mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; lea r8, [rsp+0xa0]; call r15; 
0x00000000147324: mov rsi, [rsp+0x40]; mov rdx, [rsp+0x20]; mov rdi, r12; call rdx; 
0x0000000002da73: mov rsi, [rsp+0x48]; mov rdi, [rsp+0x50]; mov rax, [rsp+0x18]; call rax; 
0x00000000097e20: mov rsi, [rsp+0x48]; mov rdi, rbp; call rax; 
0x0000000014a8a1: mov rsi, [rsp+0x50]; mov rcx, [rsp+0x20]; mov rdi, r15; call rcx; 
0x0000000002fd30: mov rsi, [rsp+0x50]; mov rdi, [rsp+0x48]; mov rax, [rsp+0x28]; call rax; 
0x0000000002d27d: mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; mov rax, [rsp+0x20]; call rax; 
0x0000000002bfdf: mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; mov rax, [rsp+0x28]; call rax; 
0x0000000002ed81: mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; call r14; 
0x000000000323c9: mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; mov rax, [rsp+0x10]; call rax; 
0x00000000030d22: mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; mov rax, [rsp+0x20]; call rax; 
0x0000000002c567: mov rsi, [rsp+0x58]; mov rdi, [rsp+0x60]; mov rax, [rsp+0x20]; call rax; 
0x000000000dac35: mov rsi, [rsp+0x60]; call r12; 
0x0000000002e0e9: mov rsi, [rsp+0x60]; mov rdi, [rsp+0x58]; call r13; 
0x00000000041f31: mov rsi, [rsp+0x88]; sub rsi, fs:[0x28]; jne short 0x0000000000041f4c; add rsp, 0x98; ret; 
0x00000000132bdb: mov rsi, [rsp+0x8]; call rbp; 
0x00000000119376: mov rsi, [rsp+0x8]; mov eax, 0x119; mov edi, [rsp+0x4]; syscall; 
0x0000000010f4dc: mov rsi, [rsp+0x8]; mov eax, 0x127; syscall; 
0x0000000010f59c: mov rsi, [rsp+0x8]; mov eax, 0x128; syscall; 
0x0000000011ad68: mov rsi, [rsp+0x8]; mov eax, 0x12b; mov edi, [rsp+0x4]; syscall; 
0x000000000de67f: mov rsi, [rsp+0x8]; mov edi, [rsp+0x10]; mov eax, 0x3d; syscall; 
0x0000000010e1b0: mov rsi, [rsp+0x8]; mov edi, [rsp+0x18]; mov eax, 0x115; syscall; 
0x0000000011acb0: mov rsi, [rsp+0x8]; mov edi, [rsp+0x18]; mov eax, 0x120; syscall; 
0x0000000011afc0: mov rsi, [rsp+0x8]; mov edi, [rsp+0x18]; mov eax, 0x45; syscall; 
0x000000001196bf: mov rsi, [rsp+0x8]; mov edi, [rsp]; mov eax, 0x116; syscall; 
0x00000000106ce0: mov rsi, [rsp+0x8]; mov edi, [rsp]; mov eax, 0x11; syscall; 
0x00000000106d90: mov rsi, [rsp+0x8]; mov edi, [rsp]; mov eax, 0x12; syscall; 
0x00000000142b05: mov rsi, [rsp+0x8]; mov rcx, [rsp]; xor eax, eax; mov rdi, rbx; call rcx; 
0x000000000433ca: mov rsi, [rsp+0x8]; mov rdx, rbp; mov rdi, r12; call rbx; 
0x00000000074836: mov rsi, [rsp+0x8]; mov rdx, rbx; mov rdi, rbp; call qword ptr [r12+0x38]; 
0x00000000139892: mov rsi, [rsp+0x8]; sub rsi, fs:[0x28]; jne short 0x00000000001398a7; add rsp, 0x18; ret; 
0x0000000011a5ab: mov rsi, [rsp+0x8]; syscall; 
0x0000000011a6fd: mov rsi, [rsp+0x8]; xor r8d, r8d; mov eax, 0x2c; syscall; 
0x0000000011a4dd: mov rsi, [rsp+0x8]; xor r8d, r8d; mov eax, 0x2d; syscall; 
0x00000000028c31: mov rsi, [rsp]; mov edi, [rsp+0xc]; mov rdx, [rax]; call rbp; 
0x00000000119829: mov rsi, [rsp]; mov r8d, eax; mov edi, [rsp+0x8]; mov eax, 0x130; syscall; 
0x0000000011a359: mov rsi, [rsp]; mov r8d, eax; mov edi, [rsp+0x8]; mov eax, 0x2a; syscall; 
0x00000000028ca4: mov rsi, [rsp]; mov rdx, [rax]; mov rax, [rsp+0x10]; call rax; 
0x0000000007a363: mov rsi, [rsp]; mov rdx, rbx; mov rdi, rbp; call qword ptr [r12+0x38]; 
0x00000000078f8e: mov rsi, r10; mov rdi, r15; call qword ptr [r12+0x38]; 
0x00000000079314: mov rsi, r10; mov rdi, r15; call qword ptr [r13+0x38]; 
0x00000000080e61: mov rsi, r12; call qword ptr [r14+0x38]; 
0x0000000012c41f: mov rsi, r12; call qword ptr [rsp+0x40]; 
0x0000000012c420: mov rsi, r12; call qword ptr [rsp+0x40]; 
0x00000000132fe5: mov rsi, r12; call qword ptr [rsp+0x58]; 
0x00000000099a20: mov rsi, r12; call rax; 
0x00000000042cdf: mov rsi, r12; call rbx; 
0x00000000107ab9: mov rsi, r12; lea rdi, [rip+0xa695c]; mov rdx, [rax+0xb0]; call qword ptr [rax+0x88]; 
0x000000000d8f40: mov rsi, r12; mov edi, ebp; mov eax, 0xe4; syscall; 
0x000000000d8ed0: mov rsi, r12; mov edi, ebp; mov eax, 0xe5; syscall; 
0x000000000ddf70: mov rsi, r12; mov edi, r13d; call qword ptr [rsp+0x30]; 
0x000000000ddf71: mov rsi, r12; mov edi, r13d; call qword ptr [rsp+0x30]; 
0x000000001470f2: mov rsi, r12; mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x8]; 
0x000000000ddb91: mov rsi, r12; mov rdi, r13; call qword ptr [rsp+0x30]; 
0x000000000ddb90: mov rsi, r12; mov rdi, r13; call qword ptr [rsp+0x30]; 
0x00000000042d03: mov rsi, r12; mov rdi, r13; call rbx; 
0x000000001412d2: mov rsi, r12; mov rdi, r14; add r8, fs:[0x0]; mov rcx, r15; call rbp; 
0x000000001412d3: mov rsi, r12; mov rdi, r14; add r8, fs:[0x0]; mov rcx, r15; call rbp; 
0x00000000115b7d: mov rsi, r12; mov rdi, r14; call r13; 
0x00000000115ae8: mov rsi, r12; mov rdi, r15; call r14; 
0x0000000008a8a6: mov rsi, r12; mov rdi, rbp; call qword ptr [r13+0x38]; 
0x0000000007aca9: mov rsi, r12; mov rdi, rbp; call qword ptr [r14+0x38]; 
0x0000000008b081: mov rsi, r12; mov rdi, rbp; call qword ptr [r15+0x80]; 
0x00000000071f33: mov rsi, r12; mov rdi, rbp; call qword ptr [rax+0x38]; 
0x00000000071f32: mov rsi, r12; mov rdi, rbp; call qword ptr [rax+0x38]; 
0x0000000008bcef: mov rsi, r12; mov rdi, rbp; call qword ptr [rax+0x78]; 
0x00000000143df6: mov rsi, r12; mov rdi, rbp; call qword ptr [rax]; 
0x0000000009a19d: mov rsi, r12; mov rdi, rbp; call rax; 
0x00000000107eea: mov rsi, r12; mov rdi, rbp; mov eax, 0x135; syscall; 
0x0000000008cee7: mov rsi, r12; mov rdi, rbx; call qword ptr [r14+0x78]; 
0x00000000151401: mov rsi, r12; mov rdi, rbx; call rcx; 
0x0000000013fc0e: mov rsi, r12; mov rdi, rbx; mov rcx, r13; call r10; 
0x00000000098a21: mov rsi, r12; mov rdx, r8; pop r12; pop r13; jmp rax; 
0x00000000098721: mov rsi, r12; pop r12; pop r13; jmp rax; 
0x00000000159e75: mov rsi, r12; xor r9d, r9d; mov rdi, rbp; call qword ptr [rax+0x270]; 
0x0000000008a742: mov rsi, r13; call qword ptr [r14+0x38]; 
0x000000001443b1: mov rsi, r13; call qword ptr [r14+0x40]; 
0x00000000144080: mov rsi, r13; call qword ptr [r15+0x40]; 
0x000000001417b9: mov rsi, r13; call qword ptr [rax+0x10]; 
0x000000000cc901: mov rsi, r13; call r12; 
0x00000000080742: mov rsi, r13; mov edi, 0x1; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000012ddfe: mov rsi, r13; mov edi, r12d; call qword ptr [rsp+0x40]; 
0x0000000011b639: mov rsi, r13; mov edi, r12d; mov [rbp-0x830], rax; mov eax, ebx; syscall; 
0x000000001417c7: mov rsi, r13; mov rax, [rdi+0x38]; call qword ptr [rax+0x10]; 
0x0000000012d82e: mov rsi, r13; mov rdi, r12; call qword ptr [rsp+0x40]; 
0x000000000438c7: mov rsi, r13; mov rdi, r12; call rax; 
0x000000000438c6: mov rsi, r13; mov rdi, r12; call rax; 
0x000000000979b1: mov rsi, r13; mov rdi, r12; pop r12; pop r13; jmp rax; 
0x00000000073d08: mov rsi, r13; mov rdi, r14; call qword ptr [rbx+0x38]; 
0x00000000072cd1: mov rsi, r13; mov rdi, r14; call qword ptr [rcx+0x38]; 
0x00000000080535: mov rsi, r13; mov rdi, r15; call qword ptr [r14+0x38]; 
0x0000000008059a: mov rsi, r13; mov rdi, r15; call qword ptr [rbp+0x38]; 
0x00000000082479: mov rsi, r13; mov rdi, rbp; call qword ptr [r14+0x38]; 
0x00000000141664: mov rsi, r13; mov rdi, rbp; call qword ptr [rax+0x8]; 
0x0000000008b878: mov rsi, r13; mov rdi, rbx; call qword ptr [rbp+0x70]; 
0x00000000141759: mov rsi, r14; add qword ptr [rbx+0x22a8], 0x1; mov rdi, rbp; call qword ptr [rax+0x18]; 
0x0000000009b874: mov rsi, r14; call rax; 
0x00000000122d11: mov rsi, r14; mov edi, 0x2000003; mov rdx, rax; call qword ptr [rbx+0x28]; 
0x000000001074e5: mov rsi, r14; mov edi, 0x2; mov eax, 0xe; syscall; 
0x0000000010ac02: mov rsi, r14; mov edx, [rdx+rax]; call qword ptr [rbx+0x40]; 
0x0000000014f7b3: mov rsi, r14; mov rdi, r12; call r13; 
0x00000000042d1e: mov rsi, r14; mov rdi, r12; call rbx; 
0x0000000005b579: mov rsi, r14; mov rdi, r12; mov [rbp-0xe8], r8; call rax; 
0x0000000009b0ad: mov rsi, r14; mov rdi, r13; call rax; 
0x00000000078d0d: mov rsi, r14; mov rdi, r15; mov [rbp-0x938], r9d; mov [rbp-0x930], r11b; call rax; 
0x0000000013faac: mov rsi, r14; mov rdi, r15; mov [rsp+0x8], rcx; call rbp; 
0x000000000e2d12: mov rsi, r14; mov rdi, r8; call qword ptr [rbx+0x40]; 
0x00000000076452: mov rsi, r14; mov rdi, rbp; call qword ptr [r12+0x38]; 
0x0000000008b6b9: mov rsi, r14; mov rdi, rbp; call qword ptr [rax+0x40]; 
0x00000000075242: mov rsi, r14; mov rdi, rbp; call qword ptr [rbx+0x38]; 
0x00000000074c87: mov rsi, r14; mov rdi, rbp; call qword ptr [rcx+0x38]; 
0x0000000015152f: mov rsi, r14; mov rdi, rbp; call r12; 
0x0000000007fd27: mov rsi, r14; mov rdi, rbx; call qword ptr [r15+0x38]; 
0x0000000012f3e0: mov rsi, r14; mov rdi, rbx; call rax; 
0x00000000042b93: mov rsi, r15; call r14; 
0x000000001222de: mov rsi, r15; mov edi, 0x2000006; mov rdx, rax; call qword ptr [rbx+0x28]; 
0x0000000014a88d: mov rsi, r15; mov rax, [rdi+0x38]; call qword ptr [rax+0x8]; 
0x00000000133038: mov rsi, r15; mov rdi, r12; call rbp; 
0x00000000042dd8: mov rsi, r15; mov rdi, r12; mov rdx, r14; call rbp; 
0x00000000073855: mov rsi, r15; mov rdi, r14; mov [rbp-0x8f5], r9b; mov [rbp-0x900], r8b; call rax; 
0x0000000007a7bc: mov rsi, r15; mov rdi, rbp; call qword ptr [rbx+0x38]; 
0x0000000007a7bd: mov rsi, r15; mov rdi, rbp; call qword ptr [rbx+0x38]; 
0x000000000cc467: mov rsi, r15; mov rdi, rbp; call rbx; 
0x00000000142bf9: mov rsi, r15; mov rdi, rbx; xor eax, eax; call rcx; 
0x000000001247d6: mov rsi, r8; call qword ptr [r10+0x28]; 
0x00000000091b11: mov rsi, r8; mov eax, 0xe; syscall; 
0x0000000011904b: mov rsi, r8; mov rdi, rbp; call r12; 
0x00000000046485: mov rsi, r8; xor edx, edx; mov eax, r9d; sub rsi, rdi; syscall; 
0x0000000010b7af: mov rsi, r9; call qword ptr [rbp-0xf0]; 
0x000000000418bc: mov rsi, r9; mov edi, 0x2; mov eax, 0xe; syscall; 
0x0000000010e46d: mov rsi, r9; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x0000000011b6cd: mov rsi, r9; mov edi, r12d; mov eax, ebx; syscall; 
0x000000000751b0: mov rsi, r9; mov rdi, rbp; call qword ptr [r12+0x38]; 
0x00000000075d0c: mov rsi, r9; mov rdi, rbp; call qword ptr [r13+0x38]; 
0x00000000159132: mov rsi, rax; shr ecx, 0x3; rep movsq [rdi], [rsi]; ret; 
0x0000000014dc0b: mov rsi, rbp; call qword ptr [rax+0x18]; 
0x0000000009b6df: mov rsi, rbp; call rax; 
0x00000000121987: mov rsi, rbp; mov [rsp+0x10], rax; mov rdx, rax; call qword ptr [r12+0x28]; 
0x000000001089fc: mov rsi, rbp; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x000000000dbf43: mov rsi, rbp; mov edi, r14d; call qword ptr [rsp+0x48]; 
0x00000000108a72: mov rsi, rbp; mov r8d, eax; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x00000000141679: mov rsi, rbp; mov rax, [rdi+0x38]; call qword ptr [rax+0x8]; 
0x000000001472d1: mov rsi, rbp; mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x10]; 
0x0000000009ace8: mov rsi, rbp; mov rdi, r12; call rax; 
0x0000000012aee4: mov rsi, rbp; mov rdi, r13; call qword ptr [rsp+0x40]; 
0x000000000dc3e3: mov rsi, rbp; mov rdi, r14; call qword ptr [rsp+0x48]; 
0x00000000085d49: mov rsi, rbp; mov rdi, r15; call qword ptr [r14+0x80]; 
0x0000000008ba2a: mov rsi, rbp; mov rdi, rbx; call qword ptr [r12+0x80]; 
0x0000000007f6f1: mov rsi, rbp; mov rdi, rbx; call qword ptr [r13+0x38]; 
0x000000000813ea: mov rsi, rbp; mov rdi, rbx; call qword ptr [r13+0x48]; 
0x00000000081559: mov rsi, rbp; mov rdi, rbx; call qword ptr [r13+0x58]; 
0x00000000082396: mov rsi, rbp; mov rdi, rbx; call qword ptr [r14+0x38]; 
0x0000000008113f: mov rsi, rbp; mov rdi, rbx; call qword ptr [r14+0x48]; 
0x00000000081583: mov rsi, rbp; mov rdi, rbx; call qword ptr [rax+0x58]; 
0x00000000144be3: mov rsi, rbp; mov rdi, rbx; call rax; 
0x0000000014484a: mov rsi, rbx; call qword ptr [rbp+0x40]; 
0x0000000014c743: mov rsi, rbx; call rax; 
0x00000000123e19: mov rsi, rbx; mov edi, 0x2000005; mov rdx, rax; call qword ptr [r13+0x28]; 
0x000000000897dd: mov rsi, rbx; mov edi, 0x2; mov eax, r9d; syscall; 
0x000000000426af: mov rsi, rbx; mov r8d, eax; mov r10d, 0x8; mov eax, 0x80; syscall; 
0x000000001486c4: mov rsi, rbx; mov rdi, rbp; call qword ptr [rax+0x48]; 
0x0000000014da3f: mov rsi, rbx; mov rdi, rbp; call qword ptr [rax]; 
0x00000000132609: mov rsi, rbx; mov rdi, rbp; call qword ptr [rsp+0x10]; 
0x00000000111d68: mov rsi, rcx; mov r8, rdi; mov byte ptr [rsi-0x1], 0x0; mov rax, r8; ret; 
0x000000000cd044: mov rsi, rdi; mov eax, 0xa4; xor edi, edi; syscall; 
0x0000000015973b: mov rsi, rdi; mov rdi, [rsp]; mov rax, [rax+0x268]; jmp rax; 
0x00000000147a0d: mov rsi, rdx; add rdi, 0x10; jmp rcx; 
0x00000000125a87: mov rsi, rdx; call rax; 
0x0000000010803a: mov rsi, rdx; cmp r8d, 0x1; ja short 0x0000000000108070; mov eax, 0x4; syscall; 
0x00000000108099: mov rsi, rdx; cmp r8d, 0x1; ja short 0x00000000001080d0; mov eax, 0x5; syscall; 
0x000000001080fa: mov rsi, rdx; cmp r8d, 0x1; ja short 0x0000000000108130; mov eax, 0x6; syscall; 
0x00000000147a2d: mov rsi, rdx; mov dword ptr [rdi+0x10], 0x2; add rdi, 0x10; jmp rcx; 
0x0000000014a50d: mov rsi, rdx; mov dword ptr [rdi+0x58], 0x2; add rdi, 0x58; jmp rcx; 
0x00000000149bdd: mov rsi, rdx; mov dword ptr [rdi+0x68], 0x2; add rdi, 0x68; jmp rcx; 
0x00000000146ded: mov rsi, rdx; mov dword ptr [rdi+0xc8], 0x2; add rdi, 0xc8; jmp rcx; 
0x00000000150aec: mov rsi, rsp; call qword ptr [rax+0x40]; 
0x00000000143d44: mov rsi, rsp; call qword ptr [rax]; 
0x00000000143e1b: mov rsi, rsp; mov [rsp+0x8], rax; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x00000000143d63: mov rsi, rsp; mov [rsp], rax; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x0000000014d7d0: mov rsi, rsp; mov dword ptr [rsp+0x8], 0x1; mov dword ptr [rsp+0x10], 0x1; mov dword ptr [rsp+0x18], 0x1; call qword ptr [rax+0x18]; 
0x00000000052f96: mov rsi, rsp; mov edi, 0x3001; mov eax, 0x9e; syscall; 
0x0000000008c0ea: mov rsi, rsp; mov rdi, rbp; call qword ptr [r12+0x90]; 
0x0000000008bece: mov rsi, rsp; mov rdi, rbp; call qword ptr [r13+0x90]; 
0x0000000008abf8: mov rsi, rsp; mov rdi, rbp; call qword ptr [r15+0x90]; 
0x00000000150811: mov rsi, rsp; mov rdi, rbp; call qword ptr [rax]; 
0x0000000007e657: mov rsi, rsp; mov rdi, rbp; call qword ptr [rbx+0x90]; 
0x000000000416a5: mov rsi, rsp; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000041687: mov rsp, r8; mov rbp, r9; nop; jmp rdx; 
0x00000000059700: mov rsp, rdx; ret; 
0x000000001895ef: mov si, [rsi]; mov cx, [rcx-0x2]; mov [rdi], si; mov [r9-0x2], cx; ret; 
0x000000001136da: mov spl, 0xfc; jmp qword ptr [rsi-0x70]; 
0x000000000ce27b: mov ss, [rcx]; add [rbp+0x1], cl; ret; 
0x00000000081846: mov ss, [rsi+rdi*8+0x3145ffff]; sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; syscall; 
0x000000000409e4: movapd xmm0, xmm1; ret; 
0x000000000cdd9d: movaps [rax], xmm0; add rsp, 0x10; pop rbp; ret; 
0x000000000cdfc8: movaps [rax], xmm0; add rsp, 0x8; pop rbp; pop r12; ret; 
0x0000000015ff77: movaps [rdi+0x10], xmm3; jb short 0x000000000015ff86; movaps [rdi], xmm4; notrack jmp r9; 
0x000000001600c7: movaps [rdi+0x10], xmm3; jb short 0x00000000001600d6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000160217: movaps [rdi+0x10], xmm3; jb short 0x0000000000160226; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000160367: movaps [rdi+0x10], xmm3; jb short 0x0000000000160376; movaps [rdi], xmm4; notrack jmp r9; 
0x000000001604b7: movaps [rdi+0x10], xmm3; jb short 0x00000000001604c6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000160607: movaps [rdi+0x10], xmm3; jb short 0x0000000000160616; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000160757: movaps [rdi+0x10], xmm3; jb short 0x0000000000160766; movaps [rdi], xmm4; notrack jmp r9; 
0x000000001608a7: movaps [rdi+0x10], xmm3; jb short 0x00000000001608b6; movaps [rdi], xmm4; notrack jmp r9; 
0x000000001609f7: movaps [rdi+0x10], xmm3; jb short 0x0000000000160a06; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000160b47: movaps [rdi+0x10], xmm3; jb short 0x0000000000160b56; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000160c97: movaps [rdi+0x10], xmm3; jb short 0x0000000000160ca6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000160de7: movaps [rdi+0x10], xmm3; jb short 0x0000000000160df6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000160f37: movaps [rdi+0x10], xmm3; jb short 0x0000000000160f46; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000161087: movaps [rdi+0x10], xmm3; jb short 0x0000000000161096; movaps [rdi], xmm4; notrack jmp r9; 
0x000000001611d7: movaps [rdi+0x10], xmm3; jb short 0x00000000001611e6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000162957: movaps [rdi+0x10], xmm3; jb short 0x0000000000162966; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000162aa7: movaps [rdi+0x10], xmm3; jb short 0x0000000000162ab6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000162bf7: movaps [rdi+0x10], xmm3; jb short 0x0000000000162c06; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000162d47: movaps [rdi+0x10], xmm3; jb short 0x0000000000162d56; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000162e97: movaps [rdi+0x10], xmm3; jb short 0x0000000000162ea6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000162fe7: movaps [rdi+0x10], xmm3; jb short 0x0000000000162ff6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000163137: movaps [rdi+0x10], xmm3; jb short 0x0000000000163146; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000163287: movaps [rdi+0x10], xmm3; jb short 0x0000000000163296; movaps [rdi], xmm4; notrack jmp r9; 
0x000000001633d7: movaps [rdi+0x10], xmm3; jb short 0x00000000001633e6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000163527: movaps [rdi+0x10], xmm3; jb short 0x0000000000163536; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000163677: movaps [rdi+0x10], xmm3; jb short 0x0000000000163686; movaps [rdi], xmm4; notrack jmp r9; 
0x000000001637c7: movaps [rdi+0x10], xmm3; jb short 0x00000000001637d6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000163917: movaps [rdi+0x10], xmm3; jb short 0x0000000000163926; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000163a67: movaps [rdi+0x10], xmm3; jb short 0x0000000000163a76; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000163bb7: movaps [rdi+0x10], xmm3; jb short 0x0000000000163bc6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000015fed3: movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000015fecf: movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000015fec9: movaps [rdi-0x30], xmm3; jb short 0x000000000015fedd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000160019: movaps [rdi-0x30], xmm3; jb short 0x000000000016002d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000160169: movaps [rdi-0x30], xmm3; jb short 0x000000000016017d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x000000001602b9: movaps [rdi-0x30], xmm3; jb short 0x00000000001602cd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000160409: movaps [rdi-0x30], xmm3; jb short 0x000000000016041d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000160559: movaps [rdi-0x30], xmm3; jb short 0x000000000016056d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x000000001606a9: movaps [rdi-0x30], xmm3; jb short 0x00000000001606bd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x000000001607f7: movaps [rdi-0x30], xmm3; jb short 0x0000000000160810; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000160949: movaps [rdi-0x30], xmm3; jb short 0x000000000016095d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000160a99: movaps [rdi-0x30], xmm3; jb short 0x0000000000160aad; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000160be9: movaps [rdi-0x30], xmm3; jb short 0x0000000000160bfd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000160d39: movaps [rdi-0x30], xmm3; jb short 0x0000000000160d4d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000160e89: movaps [rdi-0x30], xmm3; jb short 0x0000000000160e9d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000160fd9: movaps [rdi-0x30], xmm3; jb short 0x0000000000160fed; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000161129: movaps [rdi-0x30], xmm3; jb short 0x000000000016113d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x000000001628a9: movaps [rdi-0x30], xmm3; jb short 0x00000000001628bd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x000000001629f9: movaps [rdi-0x30], xmm3; jb short 0x0000000000162a0d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000162b49: movaps [rdi-0x30], xmm3; jb short 0x0000000000162b5d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000162c99: movaps [rdi-0x30], xmm3; jb short 0x0000000000162cad; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000162de9: movaps [rdi-0x30], xmm3; jb short 0x0000000000162dfd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000162f39: movaps [rdi-0x30], xmm3; jb short 0x0000000000162f4d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000163089: movaps [rdi-0x30], xmm3; jb short 0x000000000016309d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x000000001631d7: movaps [rdi-0x30], xmm3; jb short 0x00000000001631f0; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000163329: movaps [rdi-0x30], xmm3; jb short 0x000000000016333d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000163479: movaps [rdi-0x30], xmm3; jb short 0x000000000016348d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x000000001635c9: movaps [rdi-0x30], xmm3; jb short 0x00000000001635dd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000163719: movaps [rdi-0x30], xmm3; jb short 0x000000000016372d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000163869: movaps [rdi-0x30], xmm3; jb short 0x000000000016387d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x000000001639b9: movaps [rdi-0x30], xmm3; jb short 0x00000000001639cd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000163b09: movaps [rdi-0x30], xmm3; jb short 0x0000000000163b1d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000015ff7d: movaps [rdi], xmm4; notrack jmp r9; 
0x0000000014b60c: movaps [rsp+0x20], xmm0; call qword ptr [rax+0x28]; 
0x0000000014cc43: movaps [rsp+0x20], xmm0; push 0x0; push 0x3c; lea r9, [rsp+0x2a]; call qword ptr [rax]; 
0x00000000141f6b: movaps [rsp+0x30], xmm0; push qword ptr [rip+0x74be2]; push qword ptr [rip+0x74bd4]; lea r9, [rsp+0x2c]; call qword ptr [rax]; 
0x0000000014c9fb: movaps [rsp+0x30], xmm0; push r13; push r12; lea r9, [rsp+0x3a]; call qword ptr [rax]; 
0x00000000151782: movaps [rsp+0x60], xmm1; movups [rsp+0x18], xmm0; call r8; 
0x00000000151779: movaps [rsp+0x70], xmm0; pxor xmm0, xmm0; movaps [rsp+0x60], xmm1; movups [rsp+0x18], xmm0; call r8; 
0x00000000041868: movaps [rsp+0xc0], xmm0; movaps [rsp+0xd0], xmm0; movaps [rsp+0xe0], xmm0; movaps [rsp+0xf0], xmm0; syscall; 
0x00000000041870: movaps [rsp+0xd0], xmm0; movaps [rsp+0xe0], xmm0; movaps [rsp+0xf0], xmm0; syscall; 
0x00000000041878: movaps [rsp+0xe0], xmm0; movaps [rsp+0xf0], xmm0; syscall; 
0x00000000041880: movaps [rsp+0xf0], xmm0; syscall; 
0x000000000409e5: movaps xmm0, xmm1; ret; 
0x0000000015fe6a: movaps xmm1, [rsi-0x1]; jb short 0x000000000015fe77; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000015ff1a: movaps xmm1, [rsi-0x1]; jb short 0x000000000015ff27; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016284a: movaps xmm1, [rsi-0x1]; jb short 0x0000000000162857; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001628fa: movaps xmm1, [rsi-0x1]; jb short 0x0000000000162907; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000015ffba: movaps xmm1, [rsi-0x2]; jb short 0x000000000015ffc7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016006a: movaps xmm1, [rsi-0x2]; jb short 0x0000000000160077; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016299a: movaps xmm1, [rsi-0x2]; jb short 0x00000000001629a7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000162a4a: movaps xmm1, [rsi-0x2]; jb short 0x0000000000162a57; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016010a: movaps xmm1, [rsi-0x3]; jb short 0x0000000000160117; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001601ba: movaps xmm1, [rsi-0x3]; jb short 0x00000000001601c7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000162aea: movaps xmm1, [rsi-0x3]; jb short 0x0000000000162af7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000162b9a: movaps xmm1, [rsi-0x3]; jb short 0x0000000000162ba7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016025a: movaps xmm1, [rsi-0x4]; jb short 0x0000000000160267; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016030a: movaps xmm1, [rsi-0x4]; jb short 0x0000000000160317; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000162c3a: movaps xmm1, [rsi-0x4]; jb short 0x0000000000162c47; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000162cea: movaps xmm1, [rsi-0x4]; jb short 0x0000000000162cf7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001603aa: movaps xmm1, [rsi-0x5]; jb short 0x00000000001603b7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016045a: movaps xmm1, [rsi-0x5]; jb short 0x0000000000160467; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000162d8a: movaps xmm1, [rsi-0x5]; jb short 0x0000000000162d97; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000162e3a: movaps xmm1, [rsi-0x5]; jb short 0x0000000000162e47; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001604fa: movaps xmm1, [rsi-0x6]; jb short 0x0000000000160507; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001605aa: movaps xmm1, [rsi-0x6]; jb short 0x00000000001605b7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000162eda: movaps xmm1, [rsi-0x6]; jb short 0x0000000000162ee7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000162f8a: movaps xmm1, [rsi-0x6]; jb short 0x0000000000162f97; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016064a: movaps xmm1, [rsi-0x7]; jb short 0x0000000000160657; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001606fa: movaps xmm1, [rsi-0x7]; jb short 0x0000000000160707; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016302a: movaps xmm1, [rsi-0x7]; jb short 0x0000000000163037; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001630da: movaps xmm1, [rsi-0x7]; jb short 0x00000000001630e7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016079a: movaps xmm1, [rsi-0x8]; jb short 0x00000000001607a7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016084a: movaps xmm1, [rsi-0x8]; jb short 0x0000000000160857; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016317a: movaps xmm1, [rsi-0x8]; jb short 0x0000000000163187; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016322a: movaps xmm1, [rsi-0x8]; jb short 0x0000000000163237; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001608ea: movaps xmm1, [rsi-0x9]; jb short 0x00000000001608f7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016099a: movaps xmm1, [rsi-0x9]; jb short 0x00000000001609a7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001632ca: movaps xmm1, [rsi-0x9]; jb short 0x00000000001632d7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016337a: movaps xmm1, [rsi-0x9]; jb short 0x0000000000163387; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000160a3a: movaps xmm1, [rsi-0xa]; jb short 0x0000000000160a47; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000160aea: movaps xmm1, [rsi-0xa]; jb short 0x0000000000160af7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016341a: movaps xmm1, [rsi-0xa]; jb short 0x0000000000163427; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001634ca: movaps xmm1, [rsi-0xa]; jb short 0x00000000001634d7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000160b8a: movaps xmm1, [rsi-0xb]; jb short 0x0000000000160b97; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000160c3a: movaps xmm1, [rsi-0xb]; jb short 0x0000000000160c47; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016356a: movaps xmm1, [rsi-0xb]; jb short 0x0000000000163577; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016361a: movaps xmm1, [rsi-0xb]; jb short 0x0000000000163627; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000160cda: movaps xmm1, [rsi-0xc]; jb short 0x0000000000160ce7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000160d8a: movaps xmm1, [rsi-0xc]; jb short 0x0000000000160d97; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001636ba: movaps xmm1, [rsi-0xc]; jb short 0x00000000001636c7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016376a: movaps xmm1, [rsi-0xc]; jb short 0x0000000000163777; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000160e2a: movaps xmm1, [rsi-0xd]; jb short 0x0000000000160e37; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000160eda: movaps xmm1, [rsi-0xd]; jb short 0x0000000000160ee7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016380a: movaps xmm1, [rsi-0xd]; jb short 0x0000000000163817; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001638ba: movaps xmm1, [rsi-0xd]; jb short 0x00000000001638c7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000160f7a: movaps xmm1, [rsi-0xe]; jb short 0x0000000000160f87; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016102a: movaps xmm1, [rsi-0xe]; jb short 0x0000000000161037; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016395a: movaps xmm1, [rsi-0xe]; jb short 0x0000000000163967; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000163a0a: movaps xmm1, [rsi-0xe]; jb short 0x0000000000163a17; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001610ca: movaps xmm1, [rsi-0xf]; jb short 0x00000000001610d7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016117a: movaps xmm1, [rsi-0xf]; jb short 0x0000000000161187; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000163aaa: movaps xmm1, [rsi-0xf]; jb short 0x0000000000163ab7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000163b5a: movaps xmm1, [rsi-0xf]; jb short 0x0000000000163b67; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000147d3d: movd ecx, mm7; jmp qword ptr [rsi+0xf]; 
0x00000000040790: movd edx, mm0; btr rdx, 0x3f; sub rax, rdx; shr rax, 0x3f; ret; 
0x00000000111c9a: movd mm0, eax; movq xmm1, rsi; punpcklqdq xmm0, xmm1; movups [rdi], xmm0; ret; 
0x000000000409ca: movd mm0, eax; mulsd xmm0, [rip+0x17631b]; ret; 
0x00000000040a4f: movd mm0, eax; ret; 
0x00000000040cc6: movd mm0, ecx; andps xmm0, [rip+0x175a50]; orps xmm0, [rip+0x175a59]; mulss xmm0, [rip+0x1766f9]; ret; 
0x00000000040ca1: movd mm0, ecx; andps xmm0, [rip+0x175a75]; orps xmm0, [rip+0x175a8e]; mulss xmm0, [rip+0x176722]; ret; 
0x00000000040926: movd mm0, ecx; ret; 
0x00000000040d1f: movd mm0, edi; mulss xmm0, [rip+0x1766b6]; ret; 
0x00000000040840: movd mm0, edx; ret; 
0x00000000040be8: movd mm0, esi; ret; 
0x00000000040890: movd mm1, eax; mov [rdi], rax; subsd xmm0, xmm1; ret; 
0x00000000040bf5: movd mm1, edx; mov [rdi], edx; subss xmm0, xmm1; ret; 
0x00000000055d27: movd mm1, edx; punpckldq xmm0, xmm1; movq [rsp-0x18], xmm0; fld st, tbyte ptr [rsp-0x18]; ret; 
0x00000000111c9f: movd mm1, esi; punpcklqdq xmm0, xmm1; movups [rdi], xmm0; ret; 
0x0000000002bda3: movd mm3, eax; punpckldq xmm1, xmm3; punpcklqdq xmm0, xmm1; movups [rdx+0x48], xmm0; ret; 
0x00000000040d9b: movd xmm0, eax; ret; 
0x00000000040cc4: movd xmm0, ecx; andps xmm0, [rip+0x175a50]; orps xmm0, [rip+0x175a59]; mulss xmm0, [rip+0x1766f9]; ret; 
0x00000000040ca0: movd xmm0, ecx; andps xmm0, [rip+0x175a75]; orps xmm0, [rip+0x175a8e]; mulss xmm0, [rip+0x176722]; ret; 
0x00000000040d1e: movd xmm0, edi; mulss xmm0, [rip+0x1766b6]; ret; 
0x00000000040be7: movd xmm0, esi; ret; 
0x00000000040bf4: movd xmm1, edx; mov [rdi], edx; subss xmm0, xmm1; ret; 
0x00000000055d26: movd xmm1, edx; punpckldq xmm0, xmm1; movq [rsp-0x18], xmm0; fld st, tbyte ptr [rsp-0x18]; ret; 
0x0000000002bda2: movd xmm3, eax; punpckldq xmm1, xmm3; punpcklqdq xmm0, xmm1; movups [rdx+0x48], xmm0; ret; 
0x000000000b8315: movdqa [rcx+0x30], xmm0; add rcx, 0x40; cmp rdx, rcx; jne short 0x00000000000b8307; rep ret; 
0x0000000014b604: movdqa xmm0, [rip+0x6b684]; movaps [rsp+0x20], xmm0; call qword ptr [rax+0x28]; 
0x0000000005918f: movdqa xmm0, [rsp-0x18]; ret; 
0x000000000412c0: movdqa xmm0, [rsp]; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x00000000041406: movdqa xmm0, xmm2; mov dword ptr fs:[rax], 0x22; add rsp, 0x20; pop rbp; ret; 
0x00000000041384: movdqa xmm0, xmm2; pop rbp; ret; 
0x0000000004137c: movdqa xmm2, xmm0; add rsp, 0x20; movdqa xmm0, xmm2; pop rbp; ret; 
0x00000000163bcc: movdqu [r8], xmm0; lea r11, [rip+0x53db7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000163a7c: movdqu [r8], xmm0; lea r11, [rip+0x53f07]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016392c: movdqu [r8], xmm0; lea r11, [rip+0x54057]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001637dc: movdqu [r8], xmm0; lea r11, [rip+0x541a7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016368c: movdqu [r8], xmm0; lea r11, [rip+0x542f7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016353c: movdqu [r8], xmm0; lea r11, [rip+0x54447]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001633ec: movdqu [r8], xmm0; lea r11, [rip+0x54597]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016329c: movdqu [r8], xmm0; lea r11, [rip+0x546e7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000163202: movdqu [r8], xmm0; lea r11, [rip+0x54782]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016314c: movdqu [r8], xmm0; lea r11, [rip+0x54837]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162ffc: movdqu [r8], xmm0; lea r11, [rip+0x54987]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162eac: movdqu [r8], xmm0; lea r11, [rip+0x54ad7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162d5c: movdqu [r8], xmm0; lea r11, [rip+0x54c27]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162c0c: movdqu [r8], xmm0; lea r11, [rip+0x54d77]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162abc: movdqu [r8], xmm0; lea r11, [rip+0x54ec7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016296c: movdqu [r8], xmm0; lea r11, [rip+0x55017]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001611ec: movdqu [r8], xmm0; lea r11, [rip+0x565d7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016109c: movdqu [r8], xmm0; lea r11, [rip+0x56727]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160f4c: movdqu [r8], xmm0; lea r11, [rip+0x56877]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160dfc: movdqu [r8], xmm0; lea r11, [rip+0x569c7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160cac: movdqu [r8], xmm0; lea r11, [rip+0x56b17]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160b5c: movdqu [r8], xmm0; lea r11, [rip+0x56c67]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160a0c: movdqu [r8], xmm0; lea r11, [rip+0x56db7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001608bc: movdqu [r8], xmm0; lea r11, [rip+0x56f07]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160822: movdqu [r8], xmm0; lea r11, [rip+0x56fa2]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016076c: movdqu [r8], xmm0; lea r11, [rip+0x57057]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016061c: movdqu [r8], xmm0; lea r11, [rip+0x571a7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001604cc: movdqu [r8], xmm0; lea r11, [rip+0x572f7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016037c: movdqu [r8], xmm0; lea r11, [rip+0x57447]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016022c: movdqu [r8], xmm0; lea r11, [rip+0x57597]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001600dc: movdqu [r8], xmm0; lea r11, [rip+0x576e7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000015ff8c: movdqu [r8], xmm0; lea r11, [rip+0x57837]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001672f1: movdqu [rdi+0x10], xmm0; lddqu xmm0, [rsi]; movdqu [rdi], xmm0; ret; 
0x000000000b82b6: movdqu [rdi+0x10], xmm0; movdqu [rdi+rdx-0x10], xmm0; movdqu [rdi+rdx-0x20], xmm0; ret; 
0x000000000b4add: movdqu [rdi+0x10], xmm2; lea rax, [rdi+0x1f]; ret; 
0x000000000b594d: movdqu [rdi+0x10], xmm2; lea rax, [rdi+0x20]; ret; 
0x000000000b4120: movdqu [rdi+0x10], xmm2; mov [rdi+0x20], cl; ret; 
0x000000000b75d0: movdqu [rdi+0x10], xmm2; mov [rdi+0x20], cl; xor ch, ch; mov [rdi+0x21], ch; ret; 
0x000000000b340d: movdqu [rdi+0x10], xmm2; ret; 
0x000000000b3e0d: movdqu [rdi+0x10], xmm2; sub r8, 0x20; lea rdi, [rdi+0x20]; jne 0x00000000000b4270; ret; 
0x000000000b75ad: movdqu [rdi+0x10], xmm2; xor ch, ch; mov [rdi+0x20], ch; ret; 
0x0000000016796f: movdqu [rdi+0x1], xmm0; movdqu [rdi], xmm1; ret; 
0x000000000b4364: movdqu [rdi+0x20], xmm6; sub r8, 0x10; jb 0x00000000000b3919; movdqu [rdi+0x30], xmm7; ret; 
0x000000001678ff: movdqu [rdi+0x2], xmm0; movdqu [rdi], xmm1; ret; 
0x000000000b5bc3: movdqu [rdi+0x30], xmm7; lea rax, [rdi+0x40]; ret; 
0x000000000b4373: movdqu [rdi+0x30], xmm7; ret; 
0x000000000b7623: movdqu [rdi+0x30], xmm7; xor ch, ch; mov [rdi+0x40], ch; ret; 
0x0000000016788f: movdqu [rdi+0x3], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000016781f: movdqu [rdi+0x4], xmm0; movdqu [rdi], xmm1; ret; 
0x000000001677af: movdqu [rdi+0x5], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000016773f: movdqu [rdi+0x6], xmm0; movdqu [rdi], xmm1; ret; 
0x000000001676cf: movdqu [rdi+0x7], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000016765f: movdqu [rdi+0x8], xmm0; movdqu [rdi], xmm1; ret; 
0x000000001675ef: movdqu [rdi+0x9], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000016757f: movdqu [rdi+0xa], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000016750f: movdqu [rdi+0xb], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000016749f: movdqu [rdi+0xc], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000016742f: movdqu [rdi+0xd], xmm0; movdqu [rdi], xmm1; ret; 
0x000000000b4a7d: movdqu [rdi+0xd], xmm2; lea rax, [rdi+0x1c]; ret; 
0x000000000b58ed: movdqu [rdi+0xd], xmm2; lea rax, [rdi+0x1d]; ret; 
0x000000000b33ad: movdqu [rdi+0xd], xmm2; ret; 
0x000000000b3d7d: movdqu [rdi+0xd], xmm2; sub r8, 0x1d; lea rdi, [rdi+0x1d]; jne 0x00000000000b4270; ret; 
0x000000000b754d: movdqu [rdi+0xd], xmm2; xor ch, ch; mov [rdi+0x1d], ch; ret; 
0x000000001673bf: movdqu [rdi+0xe], xmm0; movdqu [rdi], xmm1; ret; 
0x000000000b4a9d: movdqu [rdi+0xe], xmm2; lea rax, [rdi+0x1d]; ret; 
0x000000000b590d: movdqu [rdi+0xe], xmm2; lea rax, [rdi+0x1e]; ret; 
0x000000000b33cd: movdqu [rdi+0xe], xmm2; ret; 
0x000000000b3dad: movdqu [rdi+0xe], xmm2; sub r8, 0x1e; lea rdi, [rdi+0x1e]; jne 0x00000000000b4270; ret; 
0x000000000b756d: movdqu [rdi+0xe], xmm2; xor ch, ch; mov [rdi+0x1e], ch; ret; 
0x0000000016734f: movdqu [rdi+0xf], xmm0; movdqu [rdi], xmm1; ret; 
0x000000000b4abd: movdqu [rdi+0xf], xmm2; lea rax, [rdi+0x1e]; ret; 
0x000000000b592d: movdqu [rdi+0xf], xmm2; lea rax, [rdi+0x1f]; ret; 
0x000000000b33ed: movdqu [rdi+0xf], xmm2; ret; 
0x000000000b3ddd: movdqu [rdi+0xf], xmm2; sub r8, 0x1f; lea rdi, [rdi+0x1f]; jne 0x00000000000b4270; ret; 
0x000000000b758d: movdqu [rdi+0xf], xmm2; xor ch, ch; mov [rdi+0x1f], ch; ret; 
0x000000000b82bb: movdqu [rdi+rdx-0x10], xmm0; movdqu [rdi+rdx-0x20], xmm0; ret; 
0x000000000b821c: movdqu [rdi+rdx-0x10], xmm0; movdqu [rdi], xmm0; ret; 
0x000000000b82c1: movdqu [rdi+rdx-0x20], xmm0; ret; 
0x00000000166adb: movdqu [rdi-0x10], xmm0; ret; 
0x00000000166b4b: movdqu [rdi-0x10], xmm1; ret; 
0x00000000167286: movdqu [rdi-0x11], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000167206: movdqu [rdi-0x12], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000167176: movdqu [rdi-0x13], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x000000001670f6: movdqu [rdi-0x14], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000167076: movdqu [rdi-0x15], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000166ff6: movdqu [rdi-0x16], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000166f76: movdqu [rdi-0x17], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000166ef6: movdqu [rdi-0x18], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000166e76: movdqu [rdi-0x19], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x000000000b4220: movdqu [rdi-0x1], xmm0; ret; 
0x00000000166df6: movdqu [rdi-0x1a], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000166d76: movdqu [rdi-0x1b], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000166cf6: movdqu [rdi-0x1c], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000166c66: movdqu [rdi-0x1d], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000166bd6: movdqu [rdi-0x1e], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000166b46: movdqu [rdi-0x1f], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000166ad1: movdqu [rdi-0x20], xmm0; lddqu xmm0, [rsi-0x10]; movdqu [rdi-0x10], xmm0; ret; 
0x000000000b5754: movdqu [rdi], xmm0; lea rax, [rdi+0x10]; ret; 
0x000000000b48f4: movdqu [rdi], xmm0; lea rax, [rdi+0xf]; ret; 
0x000000000b5767: movdqu [rdi], xmm0; mov [rdi+0x10], cl; lea rax, [rdi+0x11]; ret; 
0x000000000b3f47: movdqu [rdi], xmm0; mov [rdi+0x10], cl; ret; 
0x000000000b73c7: movdqu [rdi], xmm0; mov [rdi+0x10], cl; xor ch, ch; mov [rdi+0x11], ch; ret; 
0x000000000b4918: movdqu [rdi], xmm0; mov [rdi+0x10], cx; lea rax, [rdi+0x11]; ret; 
0x000000000b5788: movdqu [rdi], xmm0; mov [rdi+0x10], cx; lea rax, [rdi+0x12]; ret; 
0x000000000b3268: movdqu [rdi], xmm0; mov [rdi+0x10], cx; ret; 
0x000000000b73e8: movdqu [rdi], xmm0; mov [rdi+0x10], cx; xor ch, ch; mov [rdi+0x12], ch; ret; 
0x000000000b4904: movdqu [rdi], xmm0; mov [rdi+0x10], dh; lea rax, [rdi+0x10]; ret; 
0x000000000b3254: movdqu [rdi], xmm0; mov [rdi+0x10], dh; ret; 
0x000000000b4957: movdqu [rdi], xmm0; mov [rdi+0x10], ecx; lea rax, [rdi+0x13]; ret; 
0x000000000b57c7: movdqu [rdi], xmm0; mov [rdi+0x10], ecx; lea rax, [rdi+0x14]; ret; 
0x000000000b4977: movdqu [rdi], xmm0; mov [rdi+0x10], ecx; mov [rdi+0x14], dh; lea rax, [rdi+0x14]; ret; 
0x000000000b32a7: movdqu [rdi], xmm0; mov [rdi+0x10], ecx; mov [rdi+0x14], dh; ret; 
0x000000000b57ea: movdqu [rdi], xmm0; mov [rdi+0x10], ecx; mov [rdi+0x14], dl; lea rax, [rdi+0x15]; ret; 
0x000000000b3f9a: movdqu [rdi], xmm0; mov [rdi+0x10], ecx; mov [rdi+0x14], dl; ret; 
0x000000000b3297: movdqu [rdi], xmm0; mov [rdi+0x10], ecx; ret; 
0x000000000b7427: movdqu [rdi], xmm0; mov [rdi+0x10], ecx; xor ch, ch; mov [rdi+0x14], ch; ret; 
0x000000000b49d8: movdqu [rdi], xmm0; mov [rdi+0x10], rcx; lea rax, [rdi+0x17]; ret; 
0x000000000b5848: movdqu [rdi], xmm0; mov [rdi+0x10], rcx; lea rax, [rdi+0x18]; ret; 
0x000000000b49f8: movdqu [rdi], xmm0; mov [rdi+0x10], rcx; mov [rdi+0x18], dh; lea rax, [rdi+0x18]; ret; 
0x000000000b3328: movdqu [rdi], xmm0; mov [rdi+0x10], rcx; mov [rdi+0x18], dh; ret; 
0x000000000b3308: movdqu [rdi], xmm0; mov [rdi+0x10], rcx; ret; 
0x000000000b74a8: movdqu [rdi], xmm0; mov [rdi+0x10], rcx; xor ch, ch; mov [rdi+0x18], ch; ret; 
0x000000000b4a3b: movdqu [rdi], xmm0; mov [rdi+0x10], rdx; mov [rdi+0x17], ecx; lea rax, [rdi+0x1a]; ret; 
0x000000000b58ab: movdqu [rdi], xmm0; mov [rdi+0x10], rdx; mov [rdi+0x17], ecx; lea rax, [rdi+0x1b]; ret; 
0x000000000b336b: movdqu [rdi], xmm0; mov [rdi+0x10], rdx; mov [rdi+0x17], ecx; ret; 
0x000000000b586b: movdqu [rdi], xmm0; mov [rdi+0x10], rdx; mov [rdi+0x18], cl; lea rax, [rdi+0x19]; ret; 
0x000000000b401b: movdqu [rdi], xmm0; mov [rdi+0x10], rdx; mov [rdi+0x18], cl; ret; 
0x000000000b4a1c: movdqu [rdi], xmm0; mov [rdi+0x10], rdx; mov [rdi+0x18], cx; lea rax, [rdi+0x19]; ret; 
0x000000000b588c: movdqu [rdi], xmm0; mov [rdi+0x10], rdx; mov [rdi+0x18], cx; lea rax, [rdi+0x1a]; ret; 
0x000000000b334c: movdqu [rdi], xmm0; mov [rdi+0x10], rdx; mov [rdi+0x18], cx; ret; 
0x000000000b4a5b: movdqu [rdi], xmm0; mov [rdi+0x10], rdx; mov [rdi+0x18], ecx; lea rax, [rdi+0x1b]; ret; 
0x000000000b58cb: movdqu [rdi], xmm0; mov [rdi+0x10], rdx; mov [rdi+0x18], ecx; lea rax, [rdi+0x1c]; ret; 
0x000000000b338b: movdqu [rdi], xmm0; mov [rdi+0x10], rdx; mov [rdi+0x18], ecx; ret; 
0x000000000b4998: movdqu [rdi], xmm0; mov [rdi+0xe], rcx; lea rax, [rdi+0x15]; ret; 
0x000000000b5808: movdqu [rdi], xmm0; mov [rdi+0xe], rcx; lea rax, [rdi+0x16]; ret; 
0x000000000b32c8: movdqu [rdi], xmm0; mov [rdi+0xe], rcx; ret; 
0x000000000b7468: movdqu [rdi], xmm0; mov [rdi+0xe], rcx; xor ch, ch; mov [rdi+0x16], ch; ret; 
0x000000000b4937: movdqu [rdi], xmm0; mov [rdi+0xf], ecx; lea rax, [rdi+0x12]; ret; 
0x000000000b57a7: movdqu [rdi], xmm0; mov [rdi+0xf], ecx; lea rax, [rdi+0x13]; ret; 
0x000000000b3287: movdqu [rdi], xmm0; mov [rdi+0xf], ecx; ret; 
0x000000000b7407: movdqu [rdi], xmm0; mov [rdi+0xf], ecx; xor ch, ch; mov [rdi+0x13], ch; ret; 
0x000000000b49b8: movdqu [rdi], xmm0; mov [rdi+0xf], rcx; lea rax, [rdi+0x16]; ret; 
0x000000000b5828: movdqu [rdi], xmm0; mov [rdi+0xf], rcx; lea rax, [rdi+0x17]; ret; 
0x000000000b32e8: movdqu [rdi], xmm0; mov [rdi+0xf], rcx; ret; 
0x000000000b7488: movdqu [rdi], xmm0; mov [rdi+0xf], rcx; xor ch, ch; mov [rdi+0x17], ch; ret; 
0x000000000b82b2: movdqu [rdi], xmm0; movdqu [rdi+0x10], xmm0; movdqu [rdi+rdx-0x10], xmm0; movdqu [rdi+rdx-0x20], xmm0; ret; 
0x000000000b4ad9: movdqu [rdi], xmm0; movdqu [rdi+0x10], xmm2; lea rax, [rdi+0x1f]; ret; 
0x000000000b5949: movdqu [rdi], xmm0; movdqu [rdi+0x10], xmm2; lea rax, [rdi+0x20]; ret; 
0x000000000b411c: movdqu [rdi], xmm0; movdqu [rdi+0x10], xmm2; mov [rdi+0x20], cl; ret; 
0x000000000b3409: movdqu [rdi], xmm0; movdqu [rdi+0x10], xmm2; ret; 
0x000000000b75a9: movdqu [rdi], xmm0; movdqu [rdi+0x10], xmm2; xor ch, ch; mov [rdi+0x20], ch; ret; 
0x000000000b4a79: movdqu [rdi], xmm0; movdqu [rdi+0xd], xmm2; lea rax, [rdi+0x1c]; ret; 
0x000000000b58e9: movdqu [rdi], xmm0; movdqu [rdi+0xd], xmm2; lea rax, [rdi+0x1d]; ret; 
0x000000000b33a9: movdqu [rdi], xmm0; movdqu [rdi+0xd], xmm2; ret; 
0x000000000b7549: movdqu [rdi], xmm0; movdqu [rdi+0xd], xmm2; xor ch, ch; mov [rdi+0x1d], ch; ret; 
0x000000000b4a99: movdqu [rdi], xmm0; movdqu [rdi+0xe], xmm2; lea rax, [rdi+0x1d]; ret; 
0x000000000b5909: movdqu [rdi], xmm0; movdqu [rdi+0xe], xmm2; lea rax, [rdi+0x1e]; ret; 
0x000000000b33c9: movdqu [rdi], xmm0; movdqu [rdi+0xe], xmm2; ret; 
0x000000000b7569: movdqu [rdi], xmm0; movdqu [rdi+0xe], xmm2; xor ch, ch; mov [rdi+0x1e], ch; ret; 
0x000000000b4ab9: movdqu [rdi], xmm0; movdqu [rdi+0xf], xmm2; lea rax, [rdi+0x1e]; ret; 
0x000000000b5929: movdqu [rdi], xmm0; movdqu [rdi+0xf], xmm2; lea rax, [rdi+0x1f]; ret; 
0x000000000b33e9: movdqu [rdi], xmm0; movdqu [rdi+0xf], xmm2; ret; 
0x000000000b7589: movdqu [rdi], xmm0; movdqu [rdi+0xf], xmm2; xor ch, ch; mov [rdi+0x1f], ch; ret; 
0x000000000b3244: movdqu [rdi], xmm0; ret; 
0x000000000b3b94: movdqu [rdi], xmm0; sub r8, 0x10; lea rdi, [rdi+0x10]; jne 0x00000000000b4270; ret; 
0x000000000b73b4: movdqu [rdi], xmm0; xor ch, ch; mov [rdi+0x10], ch; ret; 
0x00000000167354: movdqu [rdi], xmm1; ret; 
0x00000000149c90: movdqu xmm0, [r8]; mov eax, esi; mov dword ptr [rdi+0x18], 0x1; movups [rdi+0x8], xmm0; ret; 
0x0000000014a578: movdqu xmm0, [r8]; mov eax, esi; movups [rdi+0x30], xmm0; ret; 
0x00000000149bb8: movdqu xmm0, [rax+0x30]; movups [rsi], xmm0; mov rax, [rax+0x40]; mov [rsi+0x10], rax; ret; 
0x0000000014a4e8: movdqu xmm0, [rax+0x40]; movups [rsi], xmm0; mov rax, [rax+0x50]; mov [rsi+0x10], rax; ret; 
0x00000000146dc8: movdqu xmm0, [rax+0x90]; movups [rsi], xmm0; mov rax, [rax+0xa0]; mov [rsi+0x10], rax; ret; 
0x00000000142f40: movdqu xmm0, [rdi+0x38]; mov dword ptr [rsi], 0x9; movups [rsi+0x8], xmm0; ret; 
0x00000000146ea8: movdqu xmm0, [rdx]; mov eax, esi; movups [r8+0x8], xmm0; ret; 
0x000000000b3f40: movdqu xmm0, [rsi]; mov cl, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], cl; ret; 
0x000000000b3260: movdqu xmm0, [rsi]; mov cx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], cx; ret; 
0x000000000b3290: movdqu xmm0, [rsi]; mov ecx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], ecx; ret; 
0x000000000b3280: movdqu xmm0, [rsi]; mov ecx, [rsi+0xf]; movdqu [rdi], xmm0; mov [rdi+0xf], ecx; ret; 
0x000000000b3300: movdqu xmm0, [rsi]; mov rcx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], rcx; ret; 
0x000000000b32c0: movdqu xmm0, [rsi]; mov rcx, [rsi+0xe]; movdqu [rdi], xmm0; mov [rdi+0xe], rcx; ret; 
0x000000000b32e0: movdqu xmm0, [rsi]; mov rcx, [rsi+0xf]; movdqu [rdi], xmm0; mov [rdi+0xf], rcx; ret; 
0x000000000b5750: movdqu xmm0, [rsi]; movdqu [rdi], xmm0; lea rax, [rdi+0x10]; ret; 
0x000000000b48f0: movdqu xmm0, [rsi]; movdqu [rdi], xmm0; lea rax, [rdi+0xf]; ret; 
0x000000000b4900: movdqu xmm0, [rsi]; movdqu [rdi], xmm0; mov [rdi+0x10], dh; lea rax, [rdi+0x10]; ret; 
0x000000000b3250: movdqu xmm0, [rsi]; movdqu [rdi], xmm0; mov [rdi+0x10], dh; ret; 
0x000000000b3240: movdqu xmm0, [rsi]; movdqu [rdi], xmm0; ret; 
0x000000000b73b0: movdqu xmm0, [rsi]; movdqu [rdi], xmm0; xor ch, ch; mov [rdi+0x10], ch; ret; 
0x000000000b3400: movdqu xmm0, [rsi]; movdqu xmm2, [rsi+0x10]; movdqu [rdi], xmm0; movdqu [rdi+0x10], xmm2; ret; 
0x000000000b33a0: movdqu xmm0, [rsi]; movdqu xmm2, [rsi+0xd]; movdqu [rdi], xmm0; movdqu [rdi+0xd], xmm2; ret; 
0x000000000b33c0: movdqu xmm0, [rsi]; movdqu xmm2, [rsi+0xe]; movdqu [rdi], xmm0; movdqu [rdi+0xe], xmm2; ret; 
0x000000000b33e0: movdqu xmm0, [rsi]; movdqu xmm2, [rsi+0xf]; movdqu [rdi], xmm0; movdqu [rdi+0xf], xmm2; ret; 
0x0000000013748f: movdqu xmm0, [rsi]; movups [rdi+rdx+0x8], xmm0; ret; 
0x00000000146eb8: movdqu xmm1, [r8+0x8]; mov eax, 0x1; movups [rdx], xmm1; ret; 
0x00000000125fa8: movdqu xmm1, [rbx+0x30]; mov [rbp-0x80], eax; movups [rbp-0x78], xmm1; call rcx; 
0x00000000142f10: movdqu xmm1, [rdi+0x20]; mov dword ptr [rsi], 0x6; movups [rsi+0x8], xmm1; ret; 
0x0000000014a588: movdqu xmm1, [rdi+0x30]; mov eax, 0x1; movups [r8], xmm1; ret; 
0x00000000149ca8: movdqu xmm1, [rdi+0x8]; mov eax, 0x1; movups [r8], xmm1; ret; 
0x0000000014a5b0: movdqu xmm2, [r8]; mov eax, 0x1; movups [rdi+0x20], xmm2; ret; 
0x00000000126144: movdqu xmm2, [rbx+0x30]; mov [rbp-0x80], eax; movups [rbp-0x78], xmm2; call r8; 
0x00000000149cc0: movdqu xmm2, [rdi+0x1c]; mov eax, 0x1; movups [r8], xmm2; ret; 
0x00000000137531: movdqu xmm2, [rdi+r9+0x8]; movups [rsi+r9+0x8], xmm2; mov [rsi+0x3], r8b; xor eax, eax; ret; 
0x000000000b4ad4: movdqu xmm2, [rsi+0x10]; movdqu [rdi], xmm0; movdqu [rdi+0x10], xmm2; lea rax, [rdi+0x1f]; ret; 
0x000000000b5944: movdqu xmm2, [rsi+0x10]; movdqu [rdi], xmm0; movdqu [rdi+0x10], xmm2; lea rax, [rdi+0x20]; ret; 
0x000000000b3404: movdqu xmm2, [rsi+0x10]; movdqu [rdi], xmm0; movdqu [rdi+0x10], xmm2; ret; 
0x000000000b4a74: movdqu xmm2, [rsi+0xd]; movdqu [rdi], xmm0; movdqu [rdi+0xd], xmm2; lea rax, [rdi+0x1c]; ret; 
0x000000000b58e4: movdqu xmm2, [rsi+0xd]; movdqu [rdi], xmm0; movdqu [rdi+0xd], xmm2; lea rax, [rdi+0x1d]; ret; 
0x000000000b33a4: movdqu xmm2, [rsi+0xd]; movdqu [rdi], xmm0; movdqu [rdi+0xd], xmm2; ret; 
0x000000000b4a94: movdqu xmm2, [rsi+0xe]; movdqu [rdi], xmm0; movdqu [rdi+0xe], xmm2; lea rax, [rdi+0x1d]; ret; 
0x000000000b5904: movdqu xmm2, [rsi+0xe]; movdqu [rdi], xmm0; movdqu [rdi+0xe], xmm2; lea rax, [rdi+0x1e]; ret; 
0x000000000b33c4: movdqu xmm2, [rsi+0xe]; movdqu [rdi], xmm0; movdqu [rdi+0xe], xmm2; ret; 
0x000000000b4ab4: movdqu xmm2, [rsi+0xf]; movdqu [rdi], xmm0; movdqu [rdi+0xf], xmm2; lea rax, [rdi+0x1e]; ret; 
0x000000000b5924: movdqu xmm2, [rsi+0xf]; movdqu [rdi], xmm0; movdqu [rdi+0xf], xmm2; lea rax, [rdi+0x1f]; ret; 
0x000000000b33e4: movdqu xmm2, [rsi+0xf]; movdqu [rdi], xmm0; movdqu [rdi+0xf], xmm2; ret; 
0x00000000126392: movdqu xmm3, [rbx-0x18]; mov [rbp-0x80], edx; mov rdx, r12; movups [rbp-0x78], xmm3; call rax; 
0x0000000014a5c0: movdqu xmm3, [rdi+0x20]; mov eax, 0x1; movups [r8], xmm3; ret; 
0x00000000126092: movdqu xmm4, [rbx+0x78]; mov [rbp-0x80], edx; mov rdx, r12; movups [rbp-0x78], xmm4; call rax; 
0x0000000014a5a0: movdqu xmm4, [rdi+0x8]; mov eax, 0x1; movups [r8], xmm4; ret; 
0x0000000012602e: movdqu xmm5, [r12-0x18]; mov [rbp-0x80], edx; mov rdx, r13; movups [rbp-0x78], xmm5; call rax; 
0x000000001265c2: movdqu xmm6, [rbx+0x78]; mov [rbp-0x80], edx; mov rdx, r12; movups [rbp-0x78], xmm6; call rax; 
0x0000000010723b: movdqu xmm6, [rdi+0x68]; movups [rsi+0x60], xmm6; movdqu xmm7, [rdi+0x78]; movups [rsi+0x70], xmm7; ret; 
0x00000000107b8d: movdqu xmm6, [rdi+0xe8]; movups [rsi+0x60], xmm6; movdqu xmm7, [rdi+0xf8]; movups [rsi+0x70], xmm7; ret; 
0x0000000010728b: movdqu xmm6, [rsi+0x60]; movups [rdi+0x68], xmm6; movdqu xmm7, [rsi+0x70]; movups [rdi+0x78], xmm7; ret; 
0x00000000107c1d: movdqu xmm6, [rsi+0x60]; movups [rdi+0xe8], xmm6; movdqu xmm7, [rsi+0x70]; movups [rdi+0xf8], xmm7; ret; 
0x00000000090e74: movdqu xmm7, [rax+0x80]; xor eax, eax; movups [rsi+0x70], xmm7; ret; 
0x0000000012699e: movdqu xmm7, [rbx+0x78]; mov [rbp-0x80], edx; mov rdx, r12; movups [rbp-0x78], xmm7; call rax; 
0x0000000012621a: movdqu xmm7, [rbx-0x18]; mov dword ptr [rbp-0x80], 0x0; movups [rbp-0x78], xmm7; call rcx; 
0x00000000126699: movdqu xmm7, [rcx+0x30]; mov [rbp-0x80], edx; mov rdx, r12; movups [rbp-0x78], xmm7; call rax; 
0x00000000107244: movdqu xmm7, [rdi+0x78]; movups [rsi+0x70], xmm7; ret; 
0x00000000107b99: movdqu xmm7, [rdi+0xf8]; movups [rsi+0x70], xmm7; ret; 
0x00000000107294: movdqu xmm7, [rsi+0x70]; movups [rdi+0x78], xmm7; ret; 
0x00000000107c29: movdqu xmm7, [rsi+0x70]; movups [rdi+0xf8], xmm7; ret; 
0x000000000afe22: movlpd [rdx+0x5], xmm1; mov rax, rdi; ret; 
0x000000000afe42: movlpd [rdx+0x6], xmm1; mov rax, rdi; ret; 
0x000000000afe62: movlpd [rdx+0x7], xmm1; mov rax, rdi; ret; 
0x000000000afcac: movlpd [rdx+0x8], xmm1; mov rax, rdi; ret; 
0x000000000b2a93: movlpd [rdx+0x8], xmm1; xor ah, ah; mov [rdx+0x10], ah; mov rax, rdi; ret; 
0x000000000afd99: movlpd [rdx], xmm0; mov al, [rcx+0x8]; mov [rdx+0x8], al; mov rax, rdi; ret; 
0x000000000afdb9: movlpd [rdx], xmm0; mov ax, [rcx+0x8]; mov [rdx+0x8], ax; mov rax, rdi; ret; 
0x000000000afdd9: movlpd [rdx], xmm0; mov eax, [rcx+0x7]; mov [rdx+0x7], eax; mov rax, rdi; ret; 
0x000000000afdf9: movlpd [rdx], xmm0; mov eax, [rcx+0x8]; mov [rdx+0x8], eax; mov rax, rdi; ret; 
0x000000000afc56: movlpd [rdx], xmm0; mov rax, rdi; ret; 
0x000000000afca8: movlpd [rdx], xmm0; movlpd [rdx+0x8], xmm1; mov rax, rdi; ret; 
0x000000000afe19: movlpd [rdx], xmm0; movlpd xmm1, [rcx+0x5]; movlpd [rdx+0x5], xmm1; mov rax, rdi; ret; 
0x000000000afe39: movlpd [rdx], xmm0; movlpd xmm1, [rcx+0x6]; movlpd [rdx+0x6], xmm1; mov rax, rdi; ret; 
0x000000000afe59: movlpd [rdx], xmm0; movlpd xmm1, [rcx+0x7]; movlpd [rdx+0x7], xmm1; mov rax, rdi; ret; 
0x000000000b29a9: movlpd [rdx], xmm0; movlpd xmm1, [rcx+0x8]; movlpd [rdx+0x8], xmm1; mov rax, rdi; ret; 
0x000000000b2a2a: movlpd [rdx], xmm0; xor ah, ah; mov [rdx+0x8], ah; mov rax, rdi; ret; 
0x000000000afc52: movlpd xmm0, [rcx]; movlpd [rdx], xmm0; mov rax, rdi; ret; 
0x000000000afe1d: movlpd xmm1, [rcx+0x5]; movlpd [rdx+0x5], xmm1; mov rax, rdi; ret; 
0x000000000afe3d: movlpd xmm1, [rcx+0x6]; movlpd [rdx+0x6], xmm1; mov rax, rdi; ret; 
0x000000000afe5d: movlpd xmm1, [rcx+0x7]; movlpd [rdx+0x7], xmm1; mov rax, rdi; ret; 
0x000000000b29ad: movlpd xmm1, [rcx+0x8]; movlpd [rdx+0x8], xmm1; mov rax, rdi; ret; 
0x000000000afca3: movlpd xmm1, [rcx+0x8]; movlpd [rdx], xmm0; movlpd [rdx+0x8], xmm1; mov rax, rdi; ret; 
0x000000000afe23: movlps [rdx+0x5], xmm1; mov rax, rdi; ret; 
0x000000000afe43: movlps [rdx+0x6], xmm1; mov rax, rdi; ret; 
0x000000000afe63: movlps [rdx+0x7], xmm1; mov rax, rdi; ret; 
0x000000000afcad: movlps [rdx+0x8], xmm1; mov rax, rdi; ret; 
0x000000000b2a94: movlps [rdx+0x8], xmm1; xor ah, ah; mov [rdx+0x10], ah; mov rax, rdi; ret; 
0x000000000afd9a: movlps [rdx], xmm0; mov al, [rcx+0x8]; mov [rdx+0x8], al; mov rax, rdi; ret; 
0x000000000afdba: movlps [rdx], xmm0; mov ax, [rcx+0x8]; mov [rdx+0x8], ax; mov rax, rdi; ret; 
0x000000000afdda: movlps [rdx], xmm0; mov eax, [rcx+0x7]; mov [rdx+0x7], eax; mov rax, rdi; ret; 
0x000000000afdfa: movlps [rdx], xmm0; mov eax, [rcx+0x8]; mov [rdx+0x8], eax; mov rax, rdi; ret; 
0x000000000afc57: movlps [rdx], xmm0; mov rax, rdi; ret; 
0x000000000afca9: movlps [rdx], xmm0; movlpd [rdx+0x8], xmm1; mov rax, rdi; ret; 
0x000000000afe1a: movlps [rdx], xmm0; movlpd xmm1, [rcx+0x5]; movlpd [rdx+0x5], xmm1; mov rax, rdi; ret; 
0x000000000afe3a: movlps [rdx], xmm0; movlpd xmm1, [rcx+0x6]; movlpd [rdx+0x6], xmm1; mov rax, rdi; ret; 
0x000000000afe5a: movlps [rdx], xmm0; movlpd xmm1, [rcx+0x7]; movlpd [rdx+0x7], xmm1; mov rax, rdi; ret; 
0x000000000b29aa: movlps [rdx], xmm0; movlpd xmm1, [rcx+0x8]; movlpd [rdx+0x8], xmm1; mov rax, rdi; ret; 
0x000000000b2a2b: movlps [rdx], xmm0; xor ah, ah; mov [rdx+0x8], ah; mov rax, rdi; ret; 
0x000000000afc53: movlps xmm0, [rcx]; movlpd [rdx], xmm0; mov rax, rdi; ret; 
0x000000000afe1e: movlps xmm1, [rcx+0x5]; movlpd [rdx+0x5], xmm1; mov rax, rdi; ret; 
0x000000000afe3e: movlps xmm1, [rcx+0x6]; movlpd [rdx+0x6], xmm1; mov rax, rdi; ret; 
0x000000000afe5e: movlps xmm1, [rcx+0x7]; movlpd [rdx+0x7], xmm1; mov rax, rdi; ret; 
0x000000000b29ae: movlps xmm1, [rcx+0x8]; movlpd [rdx+0x8], xmm1; mov rax, rdi; ret; 
0x000000000afca4: movlps xmm1, [rcx+0x8]; movlpd [rdx], xmm0; movlpd [rdx+0x8], xmm1; mov rax, rdi; ret; 
0x000000000412f4: movmskps eax, xmm0; and eax, 0x8; ret; 
0x0000000018a821: movnti [r14+0x66], r12d; nop [rax+rax]; nop; lea rax, [rdi]; ret; 
0x000000000b328c: movnti [r8+0x66f0ff3], r10; mov ecx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], ecx; ret; 
0x000000000b328d: movnti [rax+0x66f0ff3], edx; mov ecx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], ecx; ret; 
0x0000000018a822: movnti [rsi+0x66], esp; nop [rax+rax]; nop; lea rax, [rdi]; ret; 
0x0000000008fb98: movntps [rax+0x18], xmm2; mov eax, [rdi+0x10]; sub eax, edx; ret; 
0x00000000163bce: movq [r8], mm0; lea r11, [rip+0x53db7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000163a7e: movq [r8], mm0; lea r11, [rip+0x53f07]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016392e: movq [r8], mm0; lea r11, [rip+0x54057]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001637de: movq [r8], mm0; lea r11, [rip+0x541a7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016368e: movq [r8], mm0; lea r11, [rip+0x542f7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016353e: movq [r8], mm0; lea r11, [rip+0x54447]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001633ee: movq [r8], mm0; lea r11, [rip+0x54597]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016329e: movq [r8], mm0; lea r11, [rip+0x546e7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000163203: movq [r8], mm0; lea r11, [rip+0x54782]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016314e: movq [r8], mm0; lea r11, [rip+0x54837]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162ffe: movq [r8], mm0; lea r11, [rip+0x54987]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162eae: movq [r8], mm0; lea r11, [rip+0x54ad7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162d5e: movq [r8], mm0; lea r11, [rip+0x54c27]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162c0e: movq [r8], mm0; lea r11, [rip+0x54d77]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162abe: movq [r8], mm0; lea r11, [rip+0x54ec7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016296e: movq [r8], mm0; lea r11, [rip+0x55017]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001611ee: movq [r8], mm0; lea r11, [rip+0x565d7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016109e: movq [r8], mm0; lea r11, [rip+0x56727]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160f4e: movq [r8], mm0; lea r11, [rip+0x56877]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160dfe: movq [r8], mm0; lea r11, [rip+0x569c7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160cae: movq [r8], mm0; lea r11, [rip+0x56b17]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160b5e: movq [r8], mm0; lea r11, [rip+0x56c67]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160a0e: movq [r8], mm0; lea r11, [rip+0x56db7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001608be: movq [r8], mm0; lea r11, [rip+0x56f07]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160823: movq [r8], mm0; lea r11, [rip+0x56fa2]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016076e: movq [r8], mm0; lea r11, [rip+0x57057]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016061e: movq [r8], mm0; lea r11, [rip+0x571a7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001604ce: movq [r8], mm0; lea r11, [rip+0x572f7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016037e: movq [r8], mm0; lea r11, [rip+0x57447]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016022e: movq [r8], mm0; lea r11, [rip+0x57597]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001600de: movq [r8], mm0; lea r11, [rip+0x576e7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000015ff8e: movq [r8], mm0; lea r11, [rip+0x57837]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000163bcf: movq [rax], mm0; lea r11, [rip+0x53db7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000163a7f: movq [rax], mm0; lea r11, [rip+0x53f07]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016392f: movq [rax], mm0; lea r11, [rip+0x54057]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001637df: movq [rax], mm0; lea r11, [rip+0x541a7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016368f: movq [rax], mm0; lea r11, [rip+0x542f7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016353f: movq [rax], mm0; lea r11, [rip+0x54447]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001633ef: movq [rax], mm0; lea r11, [rip+0x54597]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016329f: movq [rax], mm0; lea r11, [rip+0x546e7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000163204: movq [rax], mm0; lea r11, [rip+0x54782]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016314f: movq [rax], mm0; lea r11, [rip+0x54837]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162fff: movq [rax], mm0; lea r11, [rip+0x54987]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162eaf: movq [rax], mm0; lea r11, [rip+0x54ad7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162d5f: movq [rax], mm0; lea r11, [rip+0x54c27]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162c0f: movq [rax], mm0; lea r11, [rip+0x54d77]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162abf: movq [rax], mm0; lea r11, [rip+0x54ec7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016296f: movq [rax], mm0; lea r11, [rip+0x55017]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001611ef: movq [rax], mm0; lea r11, [rip+0x565d7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016109f: movq [rax], mm0; lea r11, [rip+0x56727]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160f4f: movq [rax], mm0; lea r11, [rip+0x56877]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160dff: movq [rax], mm0; lea r11, [rip+0x569c7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160caf: movq [rax], mm0; lea r11, [rip+0x56b17]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160b5f: movq [rax], mm0; lea r11, [rip+0x56c67]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160a0f: movq [rax], mm0; lea r11, [rip+0x56db7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001608bf: movq [rax], mm0; lea r11, [rip+0x56f07]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160824: movq [rax], mm0; lea r11, [rip+0x56fa2]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016076f: movq [rax], mm0; lea r11, [rip+0x57057]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016061f: movq [rax], mm0; lea r11, [rip+0x571a7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001604cf: movq [rax], mm0; lea r11, [rip+0x572f7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016037f: movq [rax], mm0; lea r11, [rip+0x57447]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016022f: movq [rax], mm0; lea r11, [rip+0x57597]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001600df: movq [rax], mm0; lea r11, [rip+0x576e7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000015ff8f: movq [rax], mm0; lea r11, [rip+0x57837]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000eddee: movq [rbp+0x2c], xmm0; pop rbx; pop rbp; pop r12; ret; 
0x000000000b8316: movq [rcx+0x30], mm0; add rcx, 0x40; cmp rdx, rcx; jne short 0x00000000000b8307; rep ret; 
0x000000001672f2: movq [rdi+0x10], mm0; lddqu xmm0, [rsi]; movdqu [rdi], xmm0; ret; 
0x000000000b82b7: movq [rdi+0x10], mm0; movdqu [rdi+rdx-0x10], xmm0; movdqu [rdi+rdx-0x20], xmm0; ret; 
0x000000000b4ade: movq [rdi+0x10], mm2; lea rax, [rdi+0x1f]; ret; 
0x000000000b594e: movq [rdi+0x10], mm2; lea rax, [rdi+0x20]; ret; 
0x000000000b4121: movq [rdi+0x10], mm2; mov [rdi+0x20], cl; ret; 
0x000000000b75d1: movq [rdi+0x10], mm2; mov [rdi+0x20], cl; xor ch, ch; mov [rdi+0x21], ch; ret; 
0x000000000b340e: movq [rdi+0x10], mm2; ret; 
0x000000000b3e0e: movq [rdi+0x10], mm2; sub r8, 0x20; lea rdi, [rdi+0x20]; jne 0x00000000000b4270; ret; 
0x000000000b75ae: movq [rdi+0x10], mm2; xor ch, ch; mov [rdi+0x20], ch; ret; 
0x00000000167970: movq [rdi+0x1], mm0; movdqu [rdi], xmm1; ret; 
0x000000000b4365: movq [rdi+0x20], mm6; sub r8, 0x10; jb 0x00000000000b3919; movdqu [rdi+0x30], xmm7; ret; 
0x00000000167900: movq [rdi+0x2], mm0; movdqu [rdi], xmm1; ret; 
0x000000000b5bc4: movq [rdi+0x30], mm7; lea rax, [rdi+0x40]; ret; 
0x000000000b4374: movq [rdi+0x30], mm7; ret; 
0x000000000b7624: movq [rdi+0x30], mm7; xor ch, ch; mov [rdi+0x40], ch; ret; 
0x00000000167890: movq [rdi+0x3], mm0; movdqu [rdi], xmm1; ret; 
0x00000000167820: movq [rdi+0x4], mm0; movdqu [rdi], xmm1; ret; 
0x000000001677b0: movq [rdi+0x5], mm0; movdqu [rdi], xmm1; ret; 
0x00000000167740: movq [rdi+0x6], mm0; movdqu [rdi], xmm1; ret; 
0x000000001676d0: movq [rdi+0x7], mm0; movdqu [rdi], xmm1; ret; 
0x00000000167660: movq [rdi+0x8], mm0; movdqu [rdi], xmm1; ret; 
0x000000001675f0: movq [rdi+0x9], mm0; movdqu [rdi], xmm1; ret; 
0x00000000167580: movq [rdi+0xa], mm0; movdqu [rdi], xmm1; ret; 
0x00000000167510: movq [rdi+0xb], mm0; movdqu [rdi], xmm1; ret; 
0x000000001674a0: movq [rdi+0xc], mm0; movdqu [rdi], xmm1; ret; 
0x00000000167430: movq [rdi+0xd], mm0; movdqu [rdi], xmm1; ret; 
0x000000000b4a7e: movq [rdi+0xd], mm2; lea rax, [rdi+0x1c]; ret; 
0x000000000b58ee: movq [rdi+0xd], mm2; lea rax, [rdi+0x1d]; ret; 
0x000000000b33ae: movq [rdi+0xd], mm2; ret; 
0x000000000b3d7e: movq [rdi+0xd], mm2; sub r8, 0x1d; lea rdi, [rdi+0x1d]; jne 0x00000000000b4270; ret; 
0x000000000b754e: movq [rdi+0xd], mm2; xor ch, ch; mov [rdi+0x1d], ch; ret; 
0x000000001673c0: movq [rdi+0xe], mm0; movdqu [rdi], xmm1; ret; 
0x000000000b4a9e: movq [rdi+0xe], mm2; lea rax, [rdi+0x1d]; ret; 
0x000000000b590e: movq [rdi+0xe], mm2; lea rax, [rdi+0x1e]; ret; 
0x000000000b33ce: movq [rdi+0xe], mm2; ret; 
0x000000000b3dae: movq [rdi+0xe], mm2; sub r8, 0x1e; lea rdi, [rdi+0x1e]; jne 0x00000000000b4270; ret; 
0x000000000b756e: movq [rdi+0xe], mm2; xor ch, ch; mov [rdi+0x1e], ch; ret; 
0x00000000167350: movq [rdi+0xf], mm0; movdqu [rdi], xmm1; ret; 
0x000000000b4abe: movq [rdi+0xf], mm2; lea rax, [rdi+0x1e]; ret; 
0x000000000b592e: movq [rdi+0xf], mm2; lea rax, [rdi+0x1f]; ret; 
0x000000000b33ee: movq [rdi+0xf], mm2; ret; 
0x000000000b3dde: movq [rdi+0xf], mm2; sub r8, 0x1f; lea rdi, [rdi+0x1f]; jne 0x00000000000b4270; ret; 
0x000000000b758e: movq [rdi+0xf], mm2; xor ch, ch; mov [rdi+0x1f], ch; ret; 
0x000000000b82bc: movq [rdi+rdx-0x10], mm0; movdqu [rdi+rdx-0x20], xmm0; ret; 
0x000000000b821d: movq [rdi+rdx-0x10], mm0; movdqu [rdi], xmm0; ret; 
0x000000000b82c2: movq [rdi+rdx-0x20], mm0; ret; 
0x00000000166adc: movq [rdi-0x10], mm0; ret; 
0x00000000166b4c: movq [rdi-0x10], mm1; ret; 
0x00000000167287: movq [rdi-0x11], mm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000167207: movq [rdi-0x12], mm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000167177: movq [rdi-0x13], mm0; movdqu [rdi-0x10], xmm1; ret; 
0x000000001670f7: movq [rdi-0x14], mm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000167077: movq [rdi-0x15], mm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000166ff7: movq [rdi-0x16], mm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000166f77: movq [rdi-0x17], mm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000166ef7: movq [rdi-0x18], mm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000166e77: movq [rdi-0x19], mm0; movdqu [rdi-0x10], xmm1; ret; 
0x000000000b4221: movq [rdi-0x1], mm0; ret; 
0x00000000166df7: movq [rdi-0x1a], mm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000166d77: movq [rdi-0x1b], mm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000166cf7: movq [rdi-0x1c], mm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000166c67: movq [rdi-0x1d], mm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000166bd7: movq [rdi-0x1e], mm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000166b47: movq [rdi-0x1f], mm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000166ad2: movq [rdi-0x20], mm0; lddqu xmm0, [rsi-0x10]; movdqu [rdi-0x10], xmm0; ret; 
0x000000000b5755: movq [rdi], mm0; lea rax, [rdi+0x10]; ret; 
0x000000000b48f5: movq [rdi], mm0; lea rax, [rdi+0xf]; ret; 
0x000000000b5768: movq [rdi], mm0; mov [rdi+0x10], cl; lea rax, [rdi+0x11]; ret; 
0x000000000b3f48: movq [rdi], mm0; mov [rdi+0x10], cl; ret; 
0x000000000b73c8: movq [rdi], mm0; mov [rdi+0x10], cl; xor ch, ch; mov [rdi+0x11], ch; ret; 
0x000000000b4919: movq [rdi], mm0; mov [rdi+0x10], cx; lea rax, [rdi+0x11]; ret; 
0x000000000b5789: movq [rdi], mm0; mov [rdi+0x10], cx; lea rax, [rdi+0x12]; ret; 
0x000000000b3269: movq [rdi], mm0; mov [rdi+0x10], cx; ret; 
0x000000000b73e9: movq [rdi], mm0; mov [rdi+0x10], cx; xor ch, ch; mov [rdi+0x12], ch; ret; 
0x000000000b4905: movq [rdi], mm0; mov [rdi+0x10], dh; lea rax, [rdi+0x10]; ret; 
0x000000000b3255: movq [rdi], mm0; mov [rdi+0x10], dh; ret; 
0x000000000b4958: movq [rdi], mm0; mov [rdi+0x10], ecx; lea rax, [rdi+0x13]; ret; 
0x000000000b57c8: movq [rdi], mm0; mov [rdi+0x10], ecx; lea rax, [rdi+0x14]; ret; 
0x000000000b4978: movq [rdi], mm0; mov [rdi+0x10], ecx; mov [rdi+0x14], dh; lea rax, [rdi+0x14]; ret; 
0x000000000b32a8: movq [rdi], mm0; mov [rdi+0x10], ecx; mov [rdi+0x14], dh; ret; 
0x000000000b57eb: movq [rdi], mm0; mov [rdi+0x10], ecx; mov [rdi+0x14], dl; lea rax, [rdi+0x15]; ret; 
0x000000000b3f9b: movq [rdi], mm0; mov [rdi+0x10], ecx; mov [rdi+0x14], dl; ret; 
0x000000000b3298: movq [rdi], mm0; mov [rdi+0x10], ecx; ret; 
0x000000000b7428: movq [rdi], mm0; mov [rdi+0x10], ecx; xor ch, ch; mov [rdi+0x14], ch; ret; 
0x000000000b49d9: movq [rdi], mm0; mov [rdi+0x10], rcx; lea rax, [rdi+0x17]; ret; 
0x000000000b5849: movq [rdi], mm0; mov [rdi+0x10], rcx; lea rax, [rdi+0x18]; ret; 
0x000000000b49f9: movq [rdi], mm0; mov [rdi+0x10], rcx; mov [rdi+0x18], dh; lea rax, [rdi+0x18]; ret; 
0x000000000b3329: movq [rdi], mm0; mov [rdi+0x10], rcx; mov [rdi+0x18], dh; ret; 
0x000000000b3309: movq [rdi], mm0; mov [rdi+0x10], rcx; ret; 
0x000000000b74a9: movq [rdi], mm0; mov [rdi+0x10], rcx; xor ch, ch; mov [rdi+0x18], ch; ret; 
0x000000000b4a3c: movq [rdi], mm0; mov [rdi+0x10], rdx; mov [rdi+0x17], ecx; lea rax, [rdi+0x1a]; ret; 
0x000000000b58ac: movq [rdi], mm0; mov [rdi+0x10], rdx; mov [rdi+0x17], ecx; lea rax, [rdi+0x1b]; ret; 
0x000000000b336c: movq [rdi], mm0; mov [rdi+0x10], rdx; mov [rdi+0x17], ecx; ret; 
0x000000000b586c: movq [rdi], mm0; mov [rdi+0x10], rdx; mov [rdi+0x18], cl; lea rax, [rdi+0x19]; ret; 
0x000000000b401c: movq [rdi], mm0; mov [rdi+0x10], rdx; mov [rdi+0x18], cl; ret; 
0x000000000b4a1d: movq [rdi], mm0; mov [rdi+0x10], rdx; mov [rdi+0x18], cx; lea rax, [rdi+0x19]; ret; 
0x000000000b588d: movq [rdi], mm0; mov [rdi+0x10], rdx; mov [rdi+0x18], cx; lea rax, [rdi+0x1a]; ret; 
0x000000000b334d: movq [rdi], mm0; mov [rdi+0x10], rdx; mov [rdi+0x18], cx; ret; 
0x000000000b4a5c: movq [rdi], mm0; mov [rdi+0x10], rdx; mov [rdi+0x18], ecx; lea rax, [rdi+0x1b]; ret; 
0x000000000b58cc: movq [rdi], mm0; mov [rdi+0x10], rdx; mov [rdi+0x18], ecx; lea rax, [rdi+0x1c]; ret; 
0x000000000b338c: movq [rdi], mm0; mov [rdi+0x10], rdx; mov [rdi+0x18], ecx; ret; 
0x000000000b4999: movq [rdi], mm0; mov [rdi+0xe], rcx; lea rax, [rdi+0x15]; ret; 
0x000000000b5809: movq [rdi], mm0; mov [rdi+0xe], rcx; lea rax, [rdi+0x16]; ret; 
0x000000000b32c9: movq [rdi], mm0; mov [rdi+0xe], rcx; ret; 
0x000000000b7469: movq [rdi], mm0; mov [rdi+0xe], rcx; xor ch, ch; mov [rdi+0x16], ch; ret; 
0x000000000b4938: movq [rdi], mm0; mov [rdi+0xf], ecx; lea rax, [rdi+0x12]; ret; 
0x000000000b57a8: movq [rdi], mm0; mov [rdi+0xf], ecx; lea rax, [rdi+0x13]; ret; 
0x000000000b3288: movq [rdi], mm0; mov [rdi+0xf], ecx; ret; 
0x000000000b7408: movq [rdi], mm0; mov [rdi+0xf], ecx; xor ch, ch; mov [rdi+0x13], ch; ret; 
0x000000000b49b9: movq [rdi], mm0; mov [rdi+0xf], rcx; lea rax, [rdi+0x16]; ret; 
0x000000000b5829: movq [rdi], mm0; mov [rdi+0xf], rcx; lea rax, [rdi+0x17]; ret; 
0x000000000b32e9: movq [rdi], mm0; mov [rdi+0xf], rcx; ret; 
0x000000000b7489: movq [rdi], mm0; mov [rdi+0xf], rcx; xor ch, ch; mov [rdi+0x17], ch; ret; 
0x000000000b82b3: movq [rdi], mm0; movdqu [rdi+0x10], xmm0; movdqu [rdi+rdx-0x10], xmm0; movdqu [rdi+rdx-0x20], xmm0; ret; 
0x000000000b4ada: movq [rdi], mm0; movdqu [rdi+0x10], xmm2; lea rax, [rdi+0x1f]; ret; 
0x000000000b594a: movq [rdi], mm0; movdqu [rdi+0x10], xmm2; lea rax, [rdi+0x20]; ret; 
0x000000000b411d: movq [rdi], mm0; movdqu [rdi+0x10], xmm2; mov [rdi+0x20], cl; ret; 
0x000000000b340a: movq [rdi], mm0; movdqu [rdi+0x10], xmm2; ret; 
0x000000000b75aa: movq [rdi], mm0; movdqu [rdi+0x10], xmm2; xor ch, ch; mov [rdi+0x20], ch; ret; 
0x000000000b4a7a: movq [rdi], mm0; movdqu [rdi+0xd], xmm2; lea rax, [rdi+0x1c]; ret; 
0x000000000b58ea: movq [rdi], mm0; movdqu [rdi+0xd], xmm2; lea rax, [rdi+0x1d]; ret; 
0x000000000b33aa: movq [rdi], mm0; movdqu [rdi+0xd], xmm2; ret; 
0x000000000b754a: movq [rdi], mm0; movdqu [rdi+0xd], xmm2; xor ch, ch; mov [rdi+0x1d], ch; ret; 
0x000000000b4a9a: movq [rdi], mm0; movdqu [rdi+0xe], xmm2; lea rax, [rdi+0x1d]; ret; 
0x000000000b590a: movq [rdi], mm0; movdqu [rdi+0xe], xmm2; lea rax, [rdi+0x1e]; ret; 
0x000000000b33ca: movq [rdi], mm0; movdqu [rdi+0xe], xmm2; ret; 
0x000000000b756a: movq [rdi], mm0; movdqu [rdi+0xe], xmm2; xor ch, ch; mov [rdi+0x1e], ch; ret; 
0x000000000b4aba: movq [rdi], mm0; movdqu [rdi+0xf], xmm2; lea rax, [rdi+0x1e]; ret; 
0x000000000b592a: movq [rdi], mm0; movdqu [rdi+0xf], xmm2; lea rax, [rdi+0x1f]; ret; 
0x000000000b33ea: movq [rdi], mm0; movdqu [rdi+0xf], xmm2; ret; 
0x000000000b758a: movq [rdi], mm0; movdqu [rdi+0xf], xmm2; xor ch, ch; mov [rdi+0x1f], ch; ret; 
0x000000000b3245: movq [rdi], mm0; ret; 
0x000000000b3b95: movq [rdi], mm0; sub r8, 0x10; lea rdi, [rdi+0x10]; jne 0x00000000000b4270; ret; 
0x000000000b73b5: movq [rdi], mm0; xor ch, ch; mov [rdi+0x10], ch; ret; 
0x00000000167355: movq [rdi], mm1; ret; 
0x00000000055d2e: movq [rsp-0x18], xmm0; fld st, tbyte ptr [rsp-0x18]; ret; 
0x00000000149c91: movq mm0, [r8]; mov eax, esi; mov dword ptr [rdi+0x18], 0x1; movups [rdi+0x8], xmm0; ret; 
0x0000000014a579: movq mm0, [r8]; mov eax, esi; movups [rdi+0x30], xmm0; ret; 
0x00000000149bb9: movq mm0, [rax+0x30]; movups [rsi], xmm0; mov rax, [rax+0x40]; mov [rsi+0x10], rax; ret; 
0x0000000014a4e9: movq mm0, [rax+0x40]; movups [rsi], xmm0; mov rax, [rax+0x50]; mov [rsi+0x10], rax; ret; 
0x00000000146dc9: movq mm0, [rax+0x90]; movups [rsi], xmm0; mov rax, [rax+0xa0]; mov [rsi+0x10], rax; ret; 
0x00000000149c92: movq mm0, [rax]; mov eax, esi; mov dword ptr [rdi+0x18], 0x1; movups [rdi+0x8], xmm0; ret; 
0x0000000014a57a: movq mm0, [rax]; mov eax, esi; movups [rdi+0x30], xmm0; ret; 
0x00000000142f41: movq mm0, [rdi+0x38]; mov dword ptr [rsi], 0x9; movups [rsi+0x8], xmm0; ret; 
0x00000000146ea9: movq mm0, [rdx]; mov eax, esi; movups [r8+0x8], xmm0; ret; 
0x0000000014b605: movq mm0, [rip+0x6b684]; movaps [rsp+0x20], xmm0; call qword ptr [rax+0x28]; 
0x000000000b3f41: movq mm0, [rsi]; mov cl, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], cl; ret; 
0x000000000b3261: movq mm0, [rsi]; mov cx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], cx; ret; 
0x000000000b3291: movq mm0, [rsi]; mov ecx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], ecx; ret; 
0x000000000b3281: movq mm0, [rsi]; mov ecx, [rsi+0xf]; movdqu [rdi], xmm0; mov [rdi+0xf], ecx; ret; 
0x000000000b3301: movq mm0, [rsi]; mov rcx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], rcx; ret; 
0x000000000b32c1: movq mm0, [rsi]; mov rcx, [rsi+0xe]; movdqu [rdi], xmm0; mov [rdi+0xe], rcx; ret; 
0x000000000b32e1: movq mm0, [rsi]; mov rcx, [rsi+0xf]; movdqu [rdi], xmm0; mov [rdi+0xf], rcx; ret; 
0x000000000b5751: movq mm0, [rsi]; movdqu [rdi], xmm0; lea rax, [rdi+0x10]; ret; 
0x000000000b48f1: movq mm0, [rsi]; movdqu [rdi], xmm0; lea rax, [rdi+0xf]; ret; 
0x000000000b4901: movq mm0, [rsi]; movdqu [rdi], xmm0; mov [rdi+0x10], dh; lea rax, [rdi+0x10]; ret; 
0x000000000b3251: movq mm0, [rsi]; movdqu [rdi], xmm0; mov [rdi+0x10], dh; ret; 
0x000000000b3241: movq mm0, [rsi]; movdqu [rdi], xmm0; ret; 
0x000000000b73b1: movq mm0, [rsi]; movdqu [rdi], xmm0; xor ch, ch; mov [rdi+0x10], ch; ret; 
0x000000000b3401: movq mm0, [rsi]; movdqu xmm2, [rsi+0x10]; movdqu [rdi], xmm0; movdqu [rdi+0x10], xmm2; ret; 
0x000000000b33a1: movq mm0, [rsi]; movdqu xmm2, [rsi+0xd]; movdqu [rdi], xmm0; movdqu [rdi+0xd], xmm2; ret; 
0x000000000b33c1: movq mm0, [rsi]; movdqu xmm2, [rsi+0xe]; movdqu [rdi], xmm0; movdqu [rdi+0xe], xmm2; ret; 
0x000000000b33e1: movq mm0, [rsi]; movdqu xmm2, [rsi+0xf]; movdqu [rdi], xmm0; movdqu [rdi+0xf], xmm2; ret; 
0x00000000137490: movq mm0, [rsi]; movups [rdi+rdx+0x8], xmm0; ret; 
0x00000000059190: movq mm0, [rsp-0x18]; ret; 
0x000000000412c1: movq mm0, [rsp]; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x00000000041407: movq mm0, mm2; mov dword ptr fs:[rax], 0x22; add rsp, 0x20; pop rbp; ret; 
0x00000000041385: movq mm0, mm2; pop rbp; ret; 
0x00000000111c99: movq mm0, rax; movq xmm1, rsi; punpcklqdq xmm0, xmm1; movups [rdi], xmm0; ret; 
0x000000000409c9: movq mm0, rax; mulsd xmm0, [rip+0x17631b]; ret; 
0x00000000040a4e: movq mm0, rax; ret; 
0x00000000040925: movq mm0, rcx; ret; 
0x0000000004083f: movq mm0, rdx; ret; 
0x00000000146eb9: movq mm1, [r8+0x8]; mov eax, 0x1; movups [rdx], xmm1; ret; 
0x00000000146eba: movq mm1, [rax+0x8]; mov eax, 0x1; movups [rdx], xmm1; ret; 
0x00000000125fa9: movq mm1, [rbx+0x30]; mov [rbp-0x80], eax; movups [rbp-0x78], xmm1; call rcx; 
0x00000000142f11: movq mm1, [rdi+0x20]; mov dword ptr [rsi], 0x6; movups [rsi+0x8], xmm1; ret; 
0x0000000014a589: movq mm1, [rdi+0x30]; mov eax, 0x1; movups [r8], xmm1; ret; 
0x00000000149ca9: movq mm1, [rdi+0x8]; mov eax, 0x1; movups [r8], xmm1; ret; 
0x0000000004088f: movq mm1, rax; mov [rdi], rax; subsd xmm0, xmm1; ret; 
0x00000000111c9e: movq mm1, rsi; punpcklqdq xmm0, xmm1; movups [rdi], xmm0; ret; 
0x0000000014a5b1: movq mm2, [r8]; mov eax, 0x1; movups [rdi+0x20], xmm2; ret; 
0x0000000014a5b2: movq mm2, [rax]; mov eax, 0x1; movups [rdi+0x20], xmm2; ret; 
0x00000000126145: movq mm2, [rbx+0x30]; mov [rbp-0x80], eax; movups [rbp-0x78], xmm2; call r8; 
0x00000000149cc1: movq mm2, [rdi+0x1c]; mov eax, 0x1; movups [r8], xmm2; ret; 
0x00000000137532: movq mm2, [rdi+r9+0x8]; movups [rsi+r9+0x8], xmm2; mov [rsi+0x3], r8b; xor eax, eax; ret; 
0x00000000137533: movq mm2, [rdi+rcx+0x8]; movups [rsi+r9+0x8], xmm2; mov [rsi+0x3], r8b; xor eax, eax; ret; 
0x000000000b4ad5: movq mm2, [rsi+0x10]; movdqu [rdi], xmm0; movdqu [rdi+0x10], xmm2; lea rax, [rdi+0x1f]; ret; 
0x000000000b5945: movq mm2, [rsi+0x10]; movdqu [rdi], xmm0; movdqu [rdi+0x10], xmm2; lea rax, [rdi+0x20]; ret; 
0x000000000b3405: movq mm2, [rsi+0x10]; movdqu [rdi], xmm0; movdqu [rdi+0x10], xmm2; ret; 
0x000000000b4a75: movq mm2, [rsi+0xd]; movdqu [rdi], xmm0; movdqu [rdi+0xd], xmm2; lea rax, [rdi+0x1c]; ret; 
0x000000000b58e5: movq mm2, [rsi+0xd]; movdqu [rdi], xmm0; movdqu [rdi+0xd], xmm2; lea rax, [rdi+0x1d]; ret; 
0x000000000b33a5: movq mm2, [rsi+0xd]; movdqu [rdi], xmm0; movdqu [rdi+0xd], xmm2; ret; 
0x000000000b4a95: movq mm2, [rsi+0xe]; movdqu [rdi], xmm0; movdqu [rdi+0xe], xmm2; lea rax, [rdi+0x1d]; ret; 
0x000000000b5905: movq mm2, [rsi+0xe]; movdqu [rdi], xmm0; movdqu [rdi+0xe], xmm2; lea rax, [rdi+0x1e]; ret; 
0x000000000b33c5: movq mm2, [rsi+0xe]; movdqu [rdi], xmm0; movdqu [rdi+0xe], xmm2; ret; 
0x000000000b4ab5: movq mm2, [rsi+0xf]; movdqu [rdi], xmm0; movdqu [rdi+0xf], xmm2; lea rax, [rdi+0x1e]; ret; 
0x000000000b5925: movq mm2, [rsi+0xf]; movdqu [rdi], xmm0; movdqu [rdi+0xf], xmm2; lea rax, [rdi+0x1f]; ret; 
0x000000000b33e5: movq mm2, [rsi+0xf]; movdqu [rdi], xmm0; movdqu [rdi+0xf], xmm2; ret; 
0x0000000004137d: movq mm2, mm0; add rsp, 0x20; movdqa xmm0, xmm2; pop rbp; ret; 
0x00000000126393: movq mm3, [rbx-0x18]; mov [rbp-0x80], edx; mov rdx, r12; movups [rbp-0x78], xmm3; call rax; 
0x0000000014a5c1: movq mm3, [rdi+0x20]; mov eax, 0x1; movups [r8], xmm3; ret; 
0x00000000126093: movq mm4, [rbx+0x78]; mov [rbp-0x80], edx; mov rdx, r12; movups [rbp-0x78], xmm4; call rax; 
0x0000000014a5a1: movq mm4, [rdi+0x8]; mov eax, 0x1; movups [r8], xmm4; ret; 
0x0000000012602f: movq mm5, [r12-0x18]; mov [rbp-0x80], edx; mov rdx, r13; movups [rbp-0x78], xmm5; call rax; 
0x00000000126030: movq mm5, [rsp-0x18]; mov [rbp-0x80], edx; mov rdx, r13; movups [rbp-0x78], xmm5; call rax; 
0x000000001265c3: movq mm6, [rbx+0x78]; mov [rbp-0x80], edx; mov rdx, r12; movups [rbp-0x78], xmm6; call rax; 
0x0000000010723c: movq mm6, [rdi+0x68]; movups [rsi+0x60], xmm6; movdqu xmm7, [rdi+0x78]; movups [rsi+0x70], xmm7; ret; 
0x00000000107b8e: movq mm6, [rdi+0xe8]; movups [rsi+0x60], xmm6; movdqu xmm7, [rdi+0xf8]; movups [rsi+0x70], xmm7; ret; 
0x0000000010728c: movq mm6, [rsi+0x60]; movups [rdi+0x68], xmm6; movdqu xmm7, [rsi+0x70]; movups [rdi+0x78], xmm7; ret; 
0x00000000107c1e: movq mm6, [rsi+0x60]; movups [rdi+0xe8], xmm6; movdqu xmm7, [rsi+0x70]; movups [rdi+0xf8], xmm7; ret; 
0x00000000090e75: movq mm7, [rax+0x80]; xor eax, eax; movups [rsi+0x70], xmm7; ret; 
0x0000000012699f: movq mm7, [rbx+0x78]; mov [rbp-0x80], edx; mov rdx, r12; movups [rbp-0x78], xmm7; call rax; 
0x0000000012621b: movq mm7, [rbx-0x18]; mov dword ptr [rbp-0x80], 0x0; movups [rbp-0x78], xmm7; call rcx; 
0x0000000012669a: movq mm7, [rcx+0x30]; mov [rbp-0x80], edx; mov rdx, r12; movups [rbp-0x78], xmm7; call rax; 
0x00000000107245: movq mm7, [rdi+0x78]; movups [rsi+0x70], xmm7; ret; 
0x00000000107b9a: movq mm7, [rdi+0xf8]; movups [rsi+0x70], xmm7; ret; 
0x00000000107295: movq mm7, [rsi+0x70]; movups [rdi+0x78], xmm7; ret; 
0x00000000107c2a: movq mm7, [rsi+0x70]; movups [rdi+0xf8], xmm7; ret; 
0x0000000004078f: movq rdx, mm0; btr rdx, 0x3f; sub rax, rdx; shr rax, 0x3f; ret; 
0x0000000004078e: movq rdx, xmm0; btr rdx, 0x3f; sub rax, rdx; shr rax, 0x3f; ret; 
0x00000000111c98: movq xmm0, rax; movq xmm1, rsi; punpcklqdq xmm0, xmm1; movups [rdi], xmm0; ret; 
0x000000000409c8: movq xmm0, rax; mulsd xmm0, [rip+0x17631b]; ret; 
0x00000000040a4d: movq xmm0, rax; ret; 
0x00000000040924: movq xmm0, rcx; ret; 
0x0000000004083e: movq xmm0, rdx; ret; 
0x0000000004088e: movq xmm1, rax; mov [rdi], rax; subsd xmm0, xmm1; ret; 
0x00000000111c9d: movq xmm1, rsi; punpcklqdq xmm0, xmm1; movups [rdi], xmm0; ret; 
0x000000000f746e: movsb [rdi], [rsi]; add [rax], al; add [rax-0x77], cl; ret far; 
0x000000000f3863: movsb [rdi], [rsi]; add [rax], al; add [rsi+0xf], ah; outsb dx, [rsi]; ret; 
0x000000000f746c: movsb [rdi], [rsi]; and al, 0xa4; add [rax], al; add [rax-0x77], cl; ret far; 
0x000000000b7e5e: movsb [rdi], [rsi]; cld; ret; 
0x00000000122308: movsb [rdi], [rsi]; lock inc dword ptr [rax-0x76b7ffc8]; ret; 
0x00000000108968: movsb [rdi], [rsi]; or eax, 0x64d8f700; mov [rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000b7e50: movsb [rdi], [rsi]; ret; 
0x000000000461b6: movsd [rbx], xmm0; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000004b0e0: movsd [rdi], [rsi]; adc al, 0x0; add [rax-0x80], al; jmp qword ptr [rbp+0xf]; 
0x00000000086da7: movsd [rdi], [rsi]; call qword ptr [rdx]; 
0x00000000128c8f: movsd [rdi], [rsi]; cmc; jmp qword ptr [rsi+0xf]; 
0x0000000006bde2: movsd [rdi], [rsi]; cmp dl, 0xff; jmp qword ptr [rbx+rcx*4]; 
0x000000000543f5: movsd [rdi], [rsi]; enter 0x894c, 0x7; shl r9, cl; mov [rdi-0x8], r9; ret; 
0x000000000ecd13: movsd [rdi], [rsi]; idiv edi; jmp qword ptr [rsi+0xf]; 
0x00000000157947: movsd [rdi], [rsi]; imul edi, ebx, 0x2d8b4cff; div byte ptr [rax+rcx-0x7600cf00]; ret; 
0x00000000108938: movsd [rdi], [rsi]; or eax, 0x64d8f700; mov [rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000012dc97: movsd [rdi], [rsi]; or eax, [rax]; syscall; 
0x0000000013be93: movsd [rdi], [rsi]; out dx, al; dec dword ptr [rax+0x39]; ret; 
0x00000000026587: movsd [rdi], [rsi]; ret far; 
0x00000000054432: movsd [rdi], [rsi]; ret; 
0x000000000387d4: movsd [rdi], [rsi]; sbb al, [rax]; mov [rax], rdx; ret; 
0x00000000040837: movsd [rdi], xmm0; and rdx, rax; movq xmm0, rdx; ret; 
0x0000000004095e: movsd xmm0, [rip+0x17637a]; orpd xmm1, [rip+0x175d92]; mulsd xmm0, xmm1; ret; 
0x00000000040938: movsd xmm0, [rip+0x1763a8]; orpd xmm1, [rip+0x175dc8]; mulsd xmm0, xmm1; ret; 
0x000000000cc27c: movsd xmm0, [rsp-0x10]; ret; 
0x00000000159139: movsq [rdi], [rsi]; ret; 
0x00000000040be3: movss [rdi], xmm0; movd xmm0, esi; ret; 
0x00000000190d0c: movss xmm0, [rip+0x266bc]; divss xmm0, [rip+0x279c8]; ret; 
0x00000000040b94: movss xmm3, [rip+0x161844]; andps xmm0, xmm3; andnps xmm3, xmm1; orps xmm0, xmm3; ret; 
0x000000001214d3: movsx eax, bl; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000151080: movsx eax, byte ptr [rsi]; lea rsi, [rsp+0x4]; mov [rsp+0x4], eax; mov rax, [rdi+0x8]; call qword ptr [rax+0x48]; 
0x00000000150031: movsx eax, ch; mov rsi, rsp; mov [rsp], rax; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x00000000150f60: movsx eax, word ptr [rsi]; lea rsi, [rsp+0x4]; mov [rsp+0x4], eax; mov rax, [rdi+0x8]; call qword ptr [rax+0x48]; 
0x0000000014ff31: movsx eax, word ptr [rsi]; mov rsi, rsp; mov [rsp], rax; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x0000000005cb6e: movsx ecx, byte ptr [rsi]; cmp edi, ecx; ja short 0x000000000005cb58; mov eax, r8d; ret; 
0x0000000009c3a1: movsx edx, al; mov eax, edx; ret; 
0x000000000a4b44: movsx edx, byte ptr [rdi+rax]; cmp edx, esi; je short 0x00000000000a4b40; ret; 
0x00000000150030: movsx rax, bpl; mov rsi, rsp; mov [rsp], rax; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x0000000014ff30: movsx rax, word ptr [rsi]; mov rsi, rsp; mov [rsp], rax; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x000000000784ab: movsxd eax, [rax+rdx*4]; lea rdx, [rip-0x3e9]; add rax, rdx; jmp rax; 
0x0000000011a015: movsxd eax, [rax]; add [rax], al; syscall; 
0x00000000103d76: movsxd eax, [rbx+rax*4]; add rax, rbx; notrack jmp rax; 
0x00000000061659: movsxd eax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x000000000eb790: movsxd eax, [rcx+rbp*4]; add rax, rcx; notrack jmp rax; 
0x00000000149c7a: movsxd eax, [rcx+rdx*4]; add rax, rcx; notrack jmp rax; 
0x00000000140f0e: movsxd eax, [rcx+rsi*4]; shr rdx, 0x3; add rax, rcx; notrack jmp rax; 
0x000000000fc29c: movsxd eax, [rcx-0x77]; ret far; 
0x000000000cb4e9: movsxd eax, [rcx]; add [rax], al; lea rax, [rdi-0x10]; ret; 
0x000000000b7ee1: movsxd eax, [rcx]; add [rax], al; mov rcx, rdx; rep movsb [rdi], [rsi]; ret; 
0x0000000014337a: movsxd eax, [rdi+0x18]; cmp eax, 0x3; jbe short 0x0000000000143390; mov eax, 0x2; ret; 
0x00000000062a17: movsxd eax, [rdi+rax*4]; add rax, rdi; notrack jmp rax; 
0x00000000072c35: movsxd eax, [rdi+rax*4]; add rax, rdx; jmp rax; 
0x00000000146e97: movsxd eax, [rdi+rcx*4]; add rax, rdi; notrack jmp rax; 
0x0000000008c766: movsxd eax, [rdx+rax*4]; add rax, r10; notrack jmp rax; 
0x00000000028880: movsxd eax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000000e0e8c: movsxd eax, [rdx+rbp*4]; add rax, rdx; notrack jmp rax; 
0x0000000018dd0e: movsxd eax, [rdx+rbx*4]; xor edi, r12d; add rax, rdx; notrack jmp rax; 
0x0000000018daed: movsxd eax, [rdx+rbx*4]; xor edi, r12d; movzx r12d, dil; add rax, rdx; notrack jmp rax; 
0x000000000fbb2b: movsxd eax, [rdx+rdi*4]; add rax, rdx; notrack jmp rax; 
0x000000000e04f4: movsxd eax, [rdx+rsi*4]; add rax, rdx; notrack jmp rax; 
0x0000000013338b: movsxd eax, [rdx]; add [rax-0x75], cl; add al, 0x24; mov rdi, r12; call rax; 
0x00000000172129: movsxd eax, [rdx]; add [rax], al; ret; 
0x0000000007d6e9: movsxd eax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x0000000006a98f: movsxd eax, [rsi+rbx*4]; add rax, rsi; notrack jmp rax; 
0x000000000b845a: movsxd eax, [rsi+rdi*4]; add rax, rsi; notrack jmp rax; 
0x000000000b8522: movsxd eax, [rsi+rdx*4]; add rax, rsi; notrack jmp rax; 
0x00000000143e19: movsxd eax, [rsi]; mov rsi, rsp; mov [rsp+0x8], rax; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x00000000143d61: movsxd eax, [rsi]; mov rsi, rsp; mov [rsp], rax; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x000000000ccb05: movsxd eax, [rsp+0xd0]; sub r8, rax; add r15, r8; mov [rsp+0x88], r15; call r12; 
0x000000001055fb: movsxd eax, [rsp+rax*4]; add rax, r12; notrack jmp rax; 
0x0000000017d511: movsxd eax, ecx; add rax, rdi; ret; 
0x0000000017d31f: movsxd eax, ecx; ret; 
0x0000000018dd54: movsxd ebx, [rcx+rbx*4]; add rcx, rbx; notrack jmp rcx; 
0x000000000908c1: movsxd ebx, [rsi+0x15]; add [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; jmp rax; 
0x0000000011bbe6: movsxd ebx, ebx; mov [rip+0xc7791], rbx; pop rbx; ret; 
0x0000000011bbcc: movsxd ebx, ebx; mov [rip+0xc77ab], rbx; pop rbx; ret; 
0x000000000772cf: movsxd ebx, ebx; mov rdx, rbx; call qword ptr [r13+0x38]; 
0x000000000f9266: movsxd ecx, [rax+rcx*4]; add rcx, r8; notrack jmp rcx; 
0x00000000190634: movsxd ecx, [rax-0x77]; ret far; 
0x0000000010eaa9: movsxd ecx, [rax]; add [rax], al; add rsp, 0x18; ret; 
0x000000000b388b: movsxd ecx, [rbx+rax*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000164f4c: movsxd ecx, [rbx+rcx*4]; add r9, r11; notrack jmp r9; 
0x0000000015f99c: movsxd ecx, [rbx+rcx*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x0000000007bdc4: movsxd ecx, [rbx+rcx*4]; lea rbx, [rip-0x15ae]; add rcx, rbx; mov rbx, rsi; jmp rcx; 
0x0000000007b09c: movsxd ecx, [rbx+rcx*4]; lea rbx, [rip-0x886]; add rcx, rbx; mov rbx, rsi; jmp rcx; 
0x0000000007b0ee: movsxd ecx, [rbx+rcx*4]; lea rbx, [rip-0x8d8]; add rcx, rbx; mov rbx, rsi; jmp rcx; 
0x0000000007b132: movsxd ecx, [rbx+rcx*4]; lea rbx, [rip-0x91c]; add rcx, rbx; mov rbx, rsi; jmp rcx; 
0x0000000007b3b5: movsxd ecx, [rbx+rcx*4]; lea rbx, [rip-0xb9f]; add rcx, rbx; mov rbx, [rsp+0x68]; jmp rcx; 
0x0000000007b410: movsxd ecx, [rbx+rcx*4]; lea rbx, [rip-0xbfa]; add rcx, rbx; mov rbx, rsi; jmp rcx; 
0x0000000007b45c: movsxd ecx, [rbx+rcx*4]; lea rbx, [rip-0xc46]; add rcx, rbx; mov rbx, rsi; jmp rcx; 
0x0000000007b4d4: movsxd ecx, [rbx+rcx*4]; lea rbx, [rip-0xcbe]; add rcx, rbx; mov rbx, rsi; jmp rcx; 
0x00000000187012: movsxd ecx, [rbx+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000015f935: movsxd ecx, [rbx+rdx*4]; add rsi, rdx; add rdi, rdx; add r9, r11; notrack jmp r9; 
0x000000000b300a: movsxd ecx, [rbx+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000079e88: movsxd ecx, [rbx+rsi*4]; mov r8, [rip+0x16f456]; mov [rbp-0x8c0], rax; mov [rbp-0x8b0], rsi; call qword ptr [r8+rcx*8-0x40]; 
0x00000000074239: movsxd ecx, [rbx+rsi*4]; mov r8, [rip+0x1750a5]; mov [rbp-0x8b0], rax; mov [rbp-0x8a0], rsi; call qword ptr [r8+rcx*8-0x40]; 
0x0000000018dbad: movsxd ecx, [rcx+rbx*4]; add rcx, r9; notrack jmp rcx; 
0x0000000009a19c: movsxd ecx, [rcx+rcx*4-0x1a]; mov rdi, rbp; call rax; 
0x000000000364bd: movsxd ecx, [rdi+rcx*4]; add rcx, rdi; notrack jmp rcx; 
0x000000000725a8: movsxd ecx, [rdx+rcx*4]; add rcx, rdx; notrack jmp rcx; 
0x000000000a52e2: movsxd ecx, [rdx+rcx*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000177a2e: movsxd ecx, [rdx+rcx*4]; pcmpeqb xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000017ec3e: movsxd ecx, [rdx+rcx*4]; vpcmpeqb xmm0, xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x000000000b8490: movsxd ecx, [rsi+rax*4]; add rcx, rsi; notrack jmp rcx; 
0x0000000007b331: movsxd ecx, [rsi+rcx*4]; add rcx, rdi; jmp rcx; 
0x0000000007ba73: movsxd ecx, [rsi+rcx*4]; lea rsi, [rip-0x125d]; add rcx, rsi; jmp rcx; 
0x0000000017d353: movsxd ecx, ecx; add rax, rcx; sub rax, rdi; ret; 
0x00000000126095: movsxd edi, [rax-0x77]; push rbp; or byte ptr [rcx+rcx*4-0x1e], 0xf; adc [rbp-0x78], esp; call rax; 
0x0000000009d389: movsxd edi, [rbp+0xe]; add [rax-0x73], cl; add eax, 0xe7dcc; cmove rax, rdx; ret; 
0x000000000a50dc: movsxd edi, edi; lea rax, [rip+0x13c9db]; mov rax, [rax+rdi*8]; ret; 
0x000000000a50fc: movsxd edi, edi; lea rax, [rip+0x13cbdb]; mov rax, [rax+rdi*8]; ret; 
0x0000000007cd2f: movsxd edi, edi; lea rax, [rip+0x164948]; mov rax, [rax+rdi*8]; ret; 
0x00000000038f19: movsxd edi, edi; mov eax, [rax+rdi*4]; ret; 
0x0000000003881c: movsxd edi, edi; mov rax, fs:[rax]; mov rax, [rax+rdi*8+0x80]; ret; 
0x00000000038c7c: movsxd edi, edi; mov rax, fs:[rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x1000; ret; 
0x00000000038c5c: movsxd edi, edi; mov rax, fs:[rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x100; ret; 
0x00000000038cfc: movsxd edi, edi; mov rax, fs:[rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x1; ret; 
0x00000000038c3c: movsxd edi, edi; mov rax, fs:[rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x2000; ret; 
0x00000000038bbc: movsxd edi, edi; mov rax, fs:[rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x200; ret; 
0x00000000038b7c: movsxd edi, edi; mov rax, fs:[rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x2; ret; 
0x00000000038bfc: movsxd edi, edi; mov rax, fs:[rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x4000; ret; 
0x00000000038b5c: movsxd edi, edi; mov rax, fs:[rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x400; ret; 
0x00000000038c1c: movsxd edi, edi; mov rax, fs:[rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x4; ret; 
0x00000000038bdc: movsxd edi, edi; mov rax, fs:[rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x8000; ret; 
0x00000000038b9c: movsxd edi, edi; mov rax, fs:[rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x800; ret; 
0x00000000038b3c: movsxd edi, edi; mov rax, fs:[rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x8; ret; 
0x00000000038ef9: movsxd edi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x1000; ret; 
0x00000000038ed9: movsxd edi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x100; ret; 
0x00000000038d99: movsxd edi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x1; ret; 
0x00000000038eb9: movsxd edi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x2000; ret; 
0x00000000038e39: movsxd edi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x200; ret; 
0x00000000038df9: movsxd edi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x2; ret; 
0x00000000038e79: movsxd edi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x4000; ret; 
0x00000000038dd9: movsxd edi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x400; ret; 
0x00000000038e99: movsxd edi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x4; ret; 
0x00000000038e59: movsxd edi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x8000; ret; 
0x00000000038e19: movsxd edi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x800; ret; 
0x00000000038db9: movsxd edi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x8; ret; 
0x00000000081293: movsxd edi, edx; jmp qword ptr [rsi+0x2e]; 
0x0000000009b545: movsxd edi, esi; mov [rbx], rdi; call rcx; 
0x00000000142f2f: movsxd edx, [rax+rcx*4]; add rdx, r8; notrack jmp rdx; 
0x000000000a4e27: movsxd edx, [rax+rdx*4]; add rdx, r8; notrack jmp rdx; 
0x0000000009b53d: movsxd edx, [rax-0x2]; movups [rbx+0x38], xmm0; movsxd rdi, esi; mov [rbx], rdi; call rcx; 
0x000000000f50b9: movsxd edx, [rbp+rdx*4]; add rdx, r13; notrack jmp rdx; 
0x0000000003f2e9: movsxd edx, [rbx+rdx*4]; add r10, r11; notrack jmp r10; 
0x0000000015fa70: movsxd edx, [rbx+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162829: movsxd edx, [rcx+0x5]; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000103f54: movsxd edx, [rcx+rcx*4]; add rdx, rcx; notrack jmp rdx; 
0x00000000050e88: movsxd edx, [rcx+rdx*4]; add rdx, r9; notrack jmp rdx; 
0x0000000007cddc: movsxd edx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x000000000d6794: movsxd edx, [rdi+rcx*4]; add rdx, rdi; notrack jmp rdx; 
0x0000000005328c: movsxd edx, [rdi+rdx*4]; add rdx, rdi; cmp esi, 0x2f; notrack jmp rdx; 
0x000000000a4d6a: movsxd edx, [rdi+rdx*4]; add rdx, rdi; notrack jmp rdx; 
0x000000000d67d7: movsxd edx, [rdi+rsi*4]; add rdx, rdi; notrack jmp rdx; 
0x0000000003f003: movsxd edx, [rsi+rdx*4]; add rdx, rsi; notrack jmp rdx; 
0x00000000134cd9: movsxd edx, [rsi]; out dx, eax; dec dword ptr [rax-0x7d]; ret; 
0x0000000013735d: movsxd edx, eax; add r10, rdx; mov [r9], r10; ret; 
0x00000000077108: movsxd edx, ebp; mov rdi, rbx; call qword ptr [r14+0x38]; 
0x00000000080598: movsxd edx, ebx; mov rsi, r13; mov rdi, r15; call qword ptr [rbp+0x38]; 
0x00000000137776: movsxd edx, ecx; ret; 
0x00000000137189: movsxd edx, edx; mov eax, r8d; mov byte ptr [rdi+rdx], 0x0; ret; 
0x0000000007627e: movsxd esi, [rbx+rsi*4]; lea rbx, [rip-0x14a0]; add rsi, rbx; mov rbx, rdi; jmp rsi; 
0x000000000755a8: movsxd esi, [rbx+rsi*4]; lea rbx, [rip-0x7ca]; add rsi, rbx; mov rbx, rdi; jmp rsi; 
0x00000000075761: movsxd esi, [rbx+rsi*4]; lea rbx, [rip-0x983]; add rsi, rbx; mov rbx, rdi; jmp rsi; 
0x000000000757f1: movsxd esi, [rbx+rsi*4]; lea rbx, [rip-0xa13]; add rsi, rbx; mov rbx, rdi; jmp rsi; 
0x00000000075989: movsxd esi, [rbx+rsi*4]; lea rbx, [rip-0xbab]; add rsi, rbx; mov rbx, rdi; jmp rsi; 
0x00000000075a87: movsxd esi, [rbx+rsi*4]; lea rbx, [rip-0xca9]; add rsi, rbx; mov rbx, [rsp+0x80]; jmp rsi; 
0x00000000075ae1: movsxd esi, [rbx+rsi*4]; lea rbx, [rip-0xd03]; add rsi, rbx; mov rbx, rdi; jmp rsi; 
0x0000000007d787: movsxd esi, [rdi+rsi*4]; add rsi, rdi; notrack jmp rsi; 
0x00000000076115: movsxd esi, [rdi+rsi*4]; lea rdi, [rip-0x1337]; add rsi, rdi; jmp rsi; 
0x0000000007567b: movsxd esi, [rdi+rsi*4]; lea rdi, [rip-0x89d]; add rsi, rdi; jmp rsi; 
0x000000000754ff: movsxd esi, [rdx+rsi*4]; add rsi, rbx; mov rbx, rcx; mov ecx, 0x1; jmp rsi; 
0x00000000074b97: movsxd esi, [rdx+rsi*4]; add rsi, rbx; mov rbx, rcx; xor ecx, ecx; jmp rsi; 
0x0000000007589f: movsxd esi, [rdx+rsi*4]; add rsi, rbx; mov rbx, rdx; xor edx, edx; jmp rsi; 
0x000000000f0261: movsxd esi, ebx; dec dword ptr [rcx-0x77]; ret; 
0x0000000011a65f: movsxd esi, edi; dec dword ptr [rax-0x75]; and al, 0x8; add rsp, 0x28; ret; 
0x0000000015a5fb: movsxd esi, esi; and rax, [rdi+rsi*8]; setne al; movzx eax, al; ret; 
0x0000000009b60c: movsxd esi, esi; movups [rbx+0x38], xmm0; mov [rbx], rsi; call rcx; 
0x000000000719f0: movsxd esp, esp; mov rdx, r12; call qword ptr [r13+0x38]; 
0x0000000003f2e8: movsxd r10, [r11+r10*4]; add r10, r11; notrack jmp r10; 
0x000000000719ef: movsxd r12, r12d; mov rdx, r12; call qword ptr [r13+0x38]; 
0x000000000a52e1: movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000177a2d: movsxd r9, [r10+r9*4]; pcmpeqb xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000017ec3d: movsxd r9, [r10+r9*4]; vpcmpeqb xmm0, xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000164f4b: movsxd r9, [r11+r9*4]; add r9, r11; notrack jmp r9; 
0x0000000015f99b: movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x0000000015f934: movsxd r9, [r11+rdx*4]; add rsi, rdx; add rdi, rdx; add r9, r11; notrack jmp r9; 
0x0000000008c765: movsxd rax, [r10+rax*4]; add rax, r10; notrack jmp rax; 
0x000000001055fa: movsxd rax, [r12+rax*4]; add rax, r12; notrack jmp rax; 
0x000000000784aa: movsxd rax, [rax+rdx*4]; lea rdx, [rip-0x3e9]; add rax, rdx; jmp rax; 
0x00000000103d75: movsxd rax, [rbx+rax*4]; add rax, rbx; notrack jmp rax; 
0x00000000061658: movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x000000000eb78f: movsxd rax, [rcx+rbp*4]; add rax, rcx; notrack jmp rax; 
0x00000000149c79: movsxd rax, [rcx+rdx*4]; add rax, rcx; notrack jmp rax; 
0x00000000149c78: movsxd rax, [rcx+rdx*4]; add rax, rcx; notrack jmp rax; 
0x00000000140f0d: movsxd rax, [rcx+rsi*4]; shr rdx, 0x3; add rax, rcx; notrack jmp rax; 
0x00000000143379: movsxd rax, [rdi+0x18]; cmp eax, 0x3; jbe short 0x0000000000143390; mov eax, 0x2; ret; 
0x00000000062a16: movsxd rax, [rdi+rax*4]; add rax, rdi; notrack jmp rax; 
0x00000000072c34: movsxd rax, [rdi+rax*4]; add rax, rdx; jmp rax; 
0x00000000146e96: movsxd rax, [rdi+rcx*4]; add rax, rdi; notrack jmp rax; 
0x000000000eb87e: movsxd rax, [rdx+r14*4]; add rax, rdx; notrack jmp rax; 
0x00000000104ab7: movsxd rax, [rdx+r15*4]; add rax, rdx; notrack jmp rax; 
0x0000000002887f: movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000000e0e8b: movsxd rax, [rdx+rbp*4]; add rax, rdx; notrack jmp rax; 
0x0000000018dd0d: movsxd rax, [rdx+rbx*4]; xor edi, r12d; add rax, rdx; notrack jmp rax; 
0x0000000018daec: movsxd rax, [rdx+rbx*4]; xor edi, r12d; movzx r12d, dil; add rax, rdx; notrack jmp rax; 
0x000000000fbb2a: movsxd rax, [rdx+rdi*4]; add rax, rdx; notrack jmp rax; 
0x000000000e04f3: movsxd rax, [rdx+rsi*4]; add rax, rdx; notrack jmp rax; 
0x0000000007d6e8: movsxd rax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x0000000006a98e: movsxd rax, [rsi+rbx*4]; add rax, rsi; notrack jmp rax; 
0x000000000b8459: movsxd rax, [rsi+rdi*4]; add rax, rsi; notrack jmp rax; 
0x000000000b8521: movsxd rax, [rsi+rdx*4]; add rax, rsi; notrack jmp rax; 
0x00000000143e18: movsxd rax, [rsi]; mov rsi, rsp; mov [rsp+0x8], rax; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x00000000143d60: movsxd rax, [rsi]; mov rsi, rsp; mov [rsp], rax; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x000000000ccb04: movsxd rax, [rsp+0xd0]; sub r8, rax; add r15, r8; mov [rsp+0x88], r15; call r12; 
0x0000000017d510: movsxd rax, ecx; add rax, rdi; ret; 
0x0000000017d31e: movsxd rax, ecx; ret; 
0x0000000018dd53: movsxd rbx, [rcx+rbx*4]; add rcx, rbx; notrack jmp rcx; 
0x0000000011bbe5: movsxd rbx, ebx; mov [rip+0xc7791], rbx; pop rbx; ret; 
0x0000000011bbcb: movsxd rbx, ebx; mov [rip+0xc77ab], rbx; pop rbx; ret; 
0x000000000772ce: movsxd rbx, ebx; mov rdx, rbx; call qword ptr [r13+0x38]; 
0x000000000b388a: movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000187011: movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x000000000b3009: movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000f9265: movsxd rcx, [r8+rcx*4]; add rcx, r8; notrack jmp rcx; 
0x0000000018dbac: movsxd rcx, [r9+rbx*4]; add rcx, r9; notrack jmp rcx; 
0x00000000079e87: movsxd rcx, [rbx+r14*4]; mov r8, [rip+0x16f456]; mov [rbp-0x8c0], rax; mov [rbp-0x8b0], rsi; call qword ptr [r8+rcx*8-0x40]; 
0x00000000074238: movsxd rcx, [rbx+r14*4]; mov r8, [rip+0x1750a5]; mov [rbp-0x8b0], rax; mov [rbp-0x8a0], rsi; call qword ptr [r8+rcx*8-0x40]; 
0x0000000007bdc3: movsxd rcx, [rbx+rcx*4]; lea rbx, [rip-0x15ae]; add rcx, rbx; mov rbx, rsi; jmp rcx; 
0x0000000007b09b: movsxd rcx, [rbx+rcx*4]; lea rbx, [rip-0x886]; add rcx, rbx; mov rbx, rsi; jmp rcx; 
0x0000000007b0ed: movsxd rcx, [rbx+rcx*4]; lea rbx, [rip-0x8d8]; add rcx, rbx; mov rbx, rsi; jmp rcx; 
0x0000000007b131: movsxd rcx, [rbx+rcx*4]; lea rbx, [rip-0x91c]; add rcx, rbx; mov rbx, rsi; jmp rcx; 
0x0000000007b3b4: movsxd rcx, [rbx+rcx*4]; lea rbx, [rip-0xb9f]; add rcx, rbx; mov rbx, [rsp+0x68]; jmp rcx; 
0x0000000007b40f: movsxd rcx, [rbx+rcx*4]; lea rbx, [rip-0xbfa]; add rcx, rbx; mov rbx, rsi; jmp rcx; 
0x0000000007b45b: movsxd rcx, [rbx+rcx*4]; lea rbx, [rip-0xc46]; add rcx, rbx; mov rbx, rsi; jmp rcx; 
0x0000000007b4d3: movsxd rcx, [rbx+rcx*4]; lea rbx, [rip-0xcbe]; add rcx, rbx; mov rbx, rsi; jmp rcx; 
0x000000000364bc: movsxd rcx, [rdi+r9*4]; add rcx, rdi; notrack jmp rcx; 
0x000000000725a7: movsxd rcx, [rdx+rcx*4]; add rcx, rdx; notrack jmp rcx; 
0x000000000b848f: movsxd rcx, [rsi+rax*4]; add rcx, rsi; notrack jmp rcx; 
0x0000000007b330: movsxd rcx, [rsi+rcx*4]; add rcx, rdi; jmp rcx; 
0x0000000007ba72: movsxd rcx, [rsi+rcx*4]; lea rsi, [rip-0x125d]; add rcx, rsi; jmp rcx; 
0x0000000017d352: movsxd rcx, ecx; add rax, rcx; sub rax, rdi; ret; 
0x000000000a50db: movsxd rdi, edi; lea rax, [rip+0x13c9db]; mov rax, [rax+rdi*8]; ret; 
0x000000000a50fb: movsxd rdi, edi; lea rax, [rip+0x13cbdb]; mov rax, [rax+rdi*8]; ret; 
0x0000000007cd2e: movsxd rdi, edi; lea rax, [rip+0x164948]; mov rax, [rax+rdi*8]; ret; 
0x00000000038f18: movsxd rdi, edi; mov eax, [rax+rdi*4]; ret; 
0x0000000003881b: movsxd rdi, edi; mov rax, fs:[rax]; mov rax, [rax+rdi*8+0x80]; ret; 
0x00000000038c7b: movsxd rdi, edi; mov rax, fs:[rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x1000; ret; 
0x00000000038c5b: movsxd rdi, edi; mov rax, fs:[rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x100; ret; 
0x00000000038cfb: movsxd rdi, edi; mov rax, fs:[rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x1; ret; 
0x00000000038c3b: movsxd rdi, edi; mov rax, fs:[rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x2000; ret; 
0x00000000038bbb: movsxd rdi, edi; mov rax, fs:[rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x200; ret; 
0x00000000038b7b: movsxd rdi, edi; mov rax, fs:[rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x2; ret; 
0x00000000038bfb: movsxd rdi, edi; mov rax, fs:[rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x4000; ret; 
0x00000000038b5b: movsxd rdi, edi; mov rax, fs:[rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x400; ret; 
0x00000000038c1b: movsxd rdi, edi; mov rax, fs:[rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x4; ret; 
0x00000000038bdb: movsxd rdi, edi; mov rax, fs:[rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x8000; ret; 
0x00000000038b9b: movsxd rdi, edi; mov rax, fs:[rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x800; ret; 
0x00000000038b3b: movsxd rdi, edi; mov rax, fs:[rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x8; ret; 
0x00000000038ef8: movsxd rdi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x1000; ret; 
0x00000000038ed8: movsxd rdi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x100; ret; 
0x00000000038d98: movsxd rdi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x1; ret; 
0x00000000038eb8: movsxd rdi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x2000; ret; 
0x00000000038e38: movsxd rdi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x200; ret; 
0x00000000038df8: movsxd rdi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x2; ret; 
0x00000000038e78: movsxd rdi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x4000; ret; 
0x00000000038dd8: movsxd rdi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x400; ret; 
0x00000000038e98: movsxd rdi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x4; ret; 
0x00000000038e58: movsxd rdi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x8000; ret; 
0x00000000038e18: movsxd rdi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x800; ret; 
0x00000000038db8: movsxd rdi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x8; ret; 
0x0000000009b544: movsxd rdi, esi; mov [rbx], rdi; call rcx; 
0x0000000015fa6f: movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000f50b8: movsxd rdx, [r13+rdx*4]; add rdx, r13; notrack jmp rdx; 
0x00000000142f2e: movsxd rdx, [r8+rcx*4]; add rdx, r8; notrack jmp rdx; 
0x000000000a4e26: movsxd rdx, [r8+rdx*4]; add rdx, r8; notrack jmp rdx; 
0x00000000050e87: movsxd rdx, [r9+rdx*4]; add rdx, r9; notrack jmp rdx; 
0x00000000103f53: movsxd rdx, [rcx+r9*4]; add rdx, rcx; notrack jmp rdx; 
0x0000000007cddb: movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x000000000d6793: movsxd rdx, [rdi+rcx*4]; add rdx, rdi; notrack jmp rdx; 
0x0000000005328b: movsxd rdx, [rdi+rdx*4]; add rdx, rdi; cmp esi, 0x2f; notrack jmp rdx; 
0x000000000a4d69: movsxd rdx, [rdi+rdx*4]; add rdx, rdi; notrack jmp rdx; 
0x000000000d67d6: movsxd rdx, [rdi+rsi*4]; add rdx, rdi; notrack jmp rdx; 
0x0000000003f002: movsxd rdx, [rsi+rdx*4]; add rdx, rsi; notrack jmp rdx; 
0x0000000013735c: movsxd rdx, eax; add r10, rdx; mov [r9], r10; ret; 
0x0000000007cba8: movsxd rdx, ebp; mov rdi, rbx; call qword ptr [r14+0x38]; 
0x00000000080597: movsxd rdx, ebx; mov rsi, r13; mov rdi, r15; call qword ptr [rbp+0x38]; 
0x00000000137775: movsxd rdx, ecx; ret; 
0x00000000137188: movsxd rdx, edx; mov eax, r8d; mov byte ptr [rdi+rdx], 0x0; ret; 
0x00000000077107: movsxd rdx, r13d; mov rdi, rbx; call qword ptr [r14+0x38]; 
0x000000000754fe: movsxd rsi, [r10+rsi*4]; add rsi, rbx; mov rbx, rcx; mov ecx, 0x1; jmp rsi; 
0x00000000074b96: movsxd rsi, [r10+rsi*4]; add rsi, rbx; mov rbx, rcx; xor ecx, ecx; jmp rsi; 
0x0000000007589e: movsxd rsi, [r10+rsi*4]; add rsi, rbx; mov rbx, rdx; xor edx, edx; jmp rsi; 
0x0000000007627d: movsxd rsi, [rbx+rsi*4]; lea rbx, [rip-0x14a0]; add rsi, rbx; mov rbx, rdi; jmp rsi; 
0x000000000755a7: movsxd rsi, [rbx+rsi*4]; lea rbx, [rip-0x7ca]; add rsi, rbx; mov rbx, rdi; jmp rsi; 
0x00000000075760: movsxd rsi, [rbx+rsi*4]; lea rbx, [rip-0x983]; add rsi, rbx; mov rbx, rdi; jmp rsi; 
0x000000000757f0: movsxd rsi, [rbx+rsi*4]; lea rbx, [rip-0xa13]; add rsi, rbx; mov rbx, rdi; jmp rsi; 
0x00000000075988: movsxd rsi, [rbx+rsi*4]; lea rbx, [rip-0xbab]; add rsi, rbx; mov rbx, rdi; jmp rsi; 
0x00000000075a86: movsxd rsi, [rbx+rsi*4]; lea rbx, [rip-0xca9]; add rsi, rbx; mov rbx, [rsp+0x80]; jmp rsi; 
0x00000000075ae0: movsxd rsi, [rbx+rsi*4]; lea rbx, [rip-0xd03]; add rsi, rbx; mov rbx, rdi; jmp rsi; 
0x0000000007d786: movsxd rsi, [rdi+rsi*4]; add rsi, rdi; notrack jmp rsi; 
0x00000000076114: movsxd rsi, [rdi+rsi*4]; lea rdi, [rip-0x1337]; add rsi, rdi; jmp rsi; 
0x0000000007567a: movsxd rsi, [rdi+rsi*4]; lea rdi, [rip-0x89d]; add rsi, rdi; jmp rsi; 
0x0000000015a5fa: movsxd rsi, esi; and rax, [rdi+rsi*8]; setne al; movzx eax, al; ret; 
0x0000000009b60a: movsxd rsi, esi; movups [rbx+0x38], xmm0; mov [rbx], rsi; call rcx; 
0x000000000b8043: movups [r11], xmm4; ret; 
0x000000000b80ca: movups [r11], xmm8; ret; 
0x00000000146eae: movups [r8+0x8], xmm0; ret; 
0x00000000149cb2: movups [r8], xmm1; ret; 
0x00000000149cca: movups [r8], xmm2; ret; 
0x0000000014a5ca: movups [r8], xmm3; ret; 
0x0000000014a5aa: movups [r8], xmm4; ret; 
0x000000000845e9: movups [rax+0x40], xmm0; pop rbx; ret; 
0x00000000146eaf: movups [rax+0x8], xmm0; ret; 
0x0000000013c9a7: movups [rax], xmm0; add rsp, 0x8; ret; 
0x000000000837f1: movups [rax], xmm0; ret; 
0x00000000149cb3: movups [rax], xmm1; ret; 
0x00000000149ccb: movups [rax], xmm2; ret; 
0x0000000014a5cb: movups [rax], xmm3; ret; 
0x0000000014a5ab: movups [rax], xmm4; ret; 
0x0000000008ecee: movups [rbp+0x38], xmm0; pop rbp; pop r12; ret; 
0x00000000125fb0: movups [rbp-0x78], xmm1; call rcx; 
0x0000000012614c: movups [rbp-0x78], xmm2; call r8; 
0x0000000012639d: movups [rbp-0x78], xmm3; call rax; 
0x0000000012609d: movups [rbp-0x78], xmm4; call rax; 
0x0000000012603b: movups [rbp-0x78], xmm5; call rax; 
0x000000001265cd: movups [rbp-0x78], xmm6; call rax; 
0x000000001266a4: movups [rbp-0x78], xmm7; call rax; 
0x00000000126226: movups [rbp-0x78], xmm7; call rcx; 
0x0000000008aa82: movups [rbx+0x18], xmm0; movups [rbx+0x28], xmm0; pop rbx; ret; 
0x0000000009b970: movups [rbx+0x18], xmm0; pop rbx; pop rbp; pop r12; ret; 
0x0000000008aa86: movups [rbx+0x28], xmm0; pop rbx; ret; 
0x0000000009b60e: movups [rbx+0x38], xmm0; mov [rbx], rsi; call rcx; 
0x0000000009b540: movups [rbx+0x38], xmm0; movsxd rdi, esi; mov [rbx], rdi; call rcx; 
0x0000000008e475: movups [rbx+0x38], xmm0; pop rbx; pop rbp; pop r12; ret; 
0x0000000008df55: movups [rbx+0x48], xmm0; pop rbx; ret; 
0x0000000008aa7e: movups [rbx+0x8], xmm0; movups [rbx+0x18], xmm0; movups [rbx+0x28], xmm0; pop rbx; ret; 
0x0000000008ab85: movups [rbx+0x8], xmm0; pop rbx; ret; 
0x000000000461b7: movups [rbx], xmm0; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000000b80cb: movups [rbx], xmm0; ret; 
0x000000000b8044: movups [rbx], xmm4; ret; 
0x000000000b8036: movups [rcx-0x10], xmm6; movups [rcx-0x20], xmm7; movups [rcx-0x30], xmm8; movups [r11], xmm4; ret; 
0x000000000b803a: movups [rcx-0x20], xmm7; movups [rcx-0x30], xmm8; movups [r11], xmm4; ret; 
0x000000000b803f: movups [rcx-0x30], xmm0; movups [r11], xmm4; ret; 
0x000000000b803e: movups [rcx-0x30], xmm8; movups [r11], xmm4; ret; 
0x0000000010defd: movups [rdi+0x10], xmm0; mov [rdi+0x8], rax; movups [rdi+0x20], xmm1; ret; 
0x00000000106e3d: movups [rdi+0x10], xmm0; movups [rdi+0x20], xmm0; movups [rdi+0x30], xmm0; movups [rdi+0x40], xmm0; ret; 
0x000000000b7fa4: movups [rdi+0x10], xmm1; movups [rdi+rdx-0x10], xmm2; movups [rdi+rdx-0x20], xmm3; ret; 
0x000000000b80be: movups [rdi+0x10], xmm5; movups [rdi+0x20], xmm6; movups [rdi+0x30], xmm7; movups [r11], xmm8; ret; 
0x0000000015138d: movups [rdi+0x18], xmm0; ret; 
0x00000000106e41: movups [rdi+0x20], xmm0; movups [rdi+0x30], xmm0; movups [rdi+0x40], xmm0; ret; 
0x0000000010df05: movups [rdi+0x20], xmm1; ret; 
0x0000000014a5ba: movups [rdi+0x20], xmm2; ret; 
0x000000000b80c2: movups [rdi+0x20], xmm6; movups [rdi+0x30], xmm7; movups [r11], xmm8; ret; 
0x00000000106e45: movups [rdi+0x30], xmm0; movups [rdi+0x40], xmm0; ret; 
0x0000000014a57f: movups [rdi+0x30], xmm0; ret; 
0x000000000b80c6: movups [rdi+0x30], xmm7; movups [r11], xmm8; ret; 
0x00000000106e49: movups [rdi+0x40], xmm0; ret; 
0x00000000107290: movups [rdi+0x68], xmm6; movdqu xmm7, [rsi+0x70]; movups [rdi+0x78], xmm7; ret; 
0x00000000091046: movups [rdi+0x70], xmm7; pop rbx; pop rbp; pop r12; ret; 
0x00000000107299: movups [rdi+0x78], xmm7; ret; 
0x0000000008de89: movups [rdi+0x8], xmm0; ret; 
0x00000000107c22: movups [rdi+0xe8], xmm6; movdqu xmm7, [rsi+0x70]; movups [rdi+0xf8], xmm7; ret; 
0x00000000107c2e: movups [rdi+0xf8], xmm7; ret; 
0x00000000137493: movups [rdi+rdx+0x8], xmm0; ret; 
0x000000000b7de6: movups [rdi+rdx-0x10], xmm1; ret; 
0x000000000b7fa8: movups [rdi+rdx-0x10], xmm2; movups [rdi+rdx-0x20], xmm3; ret; 
0x000000000b7f7b: movups [rdi+rdx-0x10], xmm4; movups [rdi+rdx-0x20], xmm5; movups [rdi+rdx-0x30], xmm6; movups [rdi+rdx-0x40], xmm7; ret; 
0x000000000b7fad: movups [rdi+rdx-0x20], xmm3; ret; 
0x000000000b7f80: movups [rdi+rdx-0x20], xmm5; movups [rdi+rdx-0x30], xmm6; movups [rdi+rdx-0x40], xmm7; ret; 
0x000000000b7f85: movups [rdi+rdx-0x30], xmm6; movups [rdi+rdx-0x40], xmm7; ret; 
0x000000000b7f8a: movups [rdi+rdx-0x40], xmm7; ret; 
0x00000000040838: movups [rdi], xmm0; and rdx, rax; movq xmm0, rdx; ret; 
0x00000000055df3: movups [rdi], xmm0; mov [rsi], eax; mov eax, 0x2; ret; 
0x00000000040be4: movups [rdi], xmm0; movd xmm0, esi; ret; 
0x000000000b7fa1: movups [rdi], xmm0; movups [rdi+0x10], xmm1; movups [rdi+rdx-0x10], xmm2; movups [rdi+rdx-0x20], xmm3; ret; 
0x000000000b7de3: movups [rdi], xmm0; movups [rdi+rdx-0x10], xmm1; ret; 
0x00000000045e9b: movups [rdi], xmm0; ret; 
0x0000000002bdae: movups [rdx+0x48], xmm0; ret; 
0x00000000146ec3: movups [rdx], xmm1; ret; 
0x00000000090e70: movups [rsi+0x60], xmm6; movdqu xmm7, [rax+0x80]; xor eax, eax; movups [rsi+0x70], xmm7; ret; 
0x00000000107240: movups [rsi+0x60], xmm6; movdqu xmm7, [rdi+0x78]; movups [rsi+0x70], xmm7; ret; 
0x00000000107b95: movups [rsi+0x60], xmm6; movdqu xmm7, [rdi+0xf8]; movups [rsi+0x70], xmm7; ret; 
0x00000000090e7e: movups [rsi+0x70], xmm7; ret; 
0x000000000faf56: movups [rsi+0x8], xmm0; ret; 
0x00000000142f1b: movups [rsi+0x8], xmm1; ret; 
0x00000000137538: movups [rsi+r9+0x8], xmm2; mov [rsi+0x3], r8b; xor eax, eax; ret; 
0x00000000137539: movups [rsi+rcx+0x8], xmm2; mov [rsi+0x3], r8b; xor eax, eax; ret; 
0x00000000149bbd: movups [rsi], xmm0; mov rax, [rax+0x40]; mov [rsi+0x10], rax; ret; 
0x0000000014a4eb: movups [rsi], xmm0; mov rax, [rax+0x50]; mov [rsi+0x10], rax; ret; 
0x00000000146dd0: movups [rsi], xmm0; mov rax, [rax+0xa0]; mov [rsi+0x10], rax; ret; 
0x00000000045b73: movups [rsi], xmm0; sub ecx, 0x1; jns short 0x0000000000045b39; xor eax, eax; ret; 
0x0000000010e82d: movups [rsp+0x11], xmm0; syscall; 
0x0000000014d62f: movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x00000000151787: movups [rsp+0x18], xmm0; call r8; 
0x0000000014d933: movups [rsp+0x18], xmm1; movups [rsp+0x38], xmm0; call qword ptr [rax+0x18]; 
0x0000000014d938: movups [rsp+0x38], xmm0; call qword ptr [rax+0x18]; 
0x00000000041a0c: movups [rsp+0x78], xmm6; movups [rsp+0x88], xmm7; mov r10d, 0x8; mov eax, 0xd; syscall; 
0x00000000041a11: movups [rsp+0x88], xmm7; mov r10d, 0x8; mov eax, 0xd; syscall; 
0x000000000dff74: movups [rsp+0x8], xmm0; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000014db59: movups [rsp+0xb8], xmm3; movups [rsp+0xd8], xmm0; call rax; 
0x0000000014dbf5: movups [rsp+0xb8], xmm5; call rax; 
0x00000000107474: movups [rsp+0xc8], xmm0; mov [rsp+0xe8], eax; mov eax, 0xe; syscall; 
0x0000000014db61: movups [rsp+0xd8], xmm0; call rax; 
0x0000000004095f: movups xmm0, [rip+0x17637a]; orpd xmm1, [rip+0x175d92]; mulsd xmm0, xmm1; ret; 
0x00000000040939: movups xmm0, [rip+0x1763a8]; orpd xmm1, [rip+0x175dc8]; mulsd xmm0, xmm1; ret; 
0x00000000190d0d: movups xmm0, [rip+0x266bc]; divss xmm0, [rip+0x279c8]; ret; 
0x000000000b7ddb: movups xmm0, [rsi]; movups xmm1, [rsi+rdx-0x10]; movups [rdi], xmm0; movups [rdi+rdx-0x10], xmm1; ret; 
0x000000000cc27d: movups xmm0, [rsp-0x10]; ret; 
0x000000000b7dde: movups xmm1, [rsi+rdx-0x10]; movups [rdi], xmm0; movups [rdi+rdx-0x10], xmm1; ret; 
0x00000000040b95: movups xmm3, [rip+0x161844]; andps xmm0, xmm3; andnps xmm3, xmm1; orps xmm0, xmm3; ret; 
0x0000000015182d: movzx eax, al; add rsp, 0x18; ret; 
0x0000000010a845: movzx eax, al; add rsp, 0x58; ret; 
0x00000000144d54: movzx eax, al; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000000ca0a3: movzx eax, al; lea eax, [rax+rax-0x1]; ret; 
0x000000000e0c4e: movzx eax, al; lea rax, [rax+rax-0x1]; ret; 
0x00000000062114: movzx eax, al; mov rdx, [rbp-0x610]; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x0000000008c762: movzx eax, al; movsxd rax, [r10+rax*4]; add rax, r10; notrack jmp rax; 
0x000000001055f7: movzx eax, al; movsxd rax, [r12+rax*4]; add rax, r12; notrack jmp rax; 
0x00000000103d72: movzx eax, al; movsxd rax, [rbx+rax*4]; add rax, rbx; notrack jmp rax; 
0x00000000105c40: movzx eax, al; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x00000000062a13: movzx eax, al; movsxd rax, [rdi+rax*4]; add rax, rdi; notrack jmp rax; 
0x00000000062317: movzx eax, al; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000060fab: movzx eax, al; neg eax; pop rbp; ret; 
0x0000000002930c: movzx eax, al; neg eax; ret; 
0x0000000014498a: movzx eax, al; pop r12; ret; 
0x00000000143833: movzx eax, al; pop rbp; pop r12; ret; 
0x0000000008a50d: movzx eax, al; pop rbx; neg eax; ret; 
0x00000000144cea: movzx eax, al; pop rbx; pop rbp; ret; 
0x000000000423ef: movzx eax, al; ret; 
0x000000000a8bb4: movzx eax, al; sar rdx, cl; movzx edx, dl; sub eax, edx; ret; 
0x0000000010aa32: movzx eax, al; sbb eax, 0x0; ret; 
0x000000000920c1: movzx eax, al; sub eax, 0x2; add rsp, 0x8; ret; 
0x0000000013c041: movzx eax, ax; ret; 
0x0000000008d383: movzx eax, bl; pop rbx; pop rbp; pop r12; ret; 
0x000000001500c0: movzx eax, bpl; mov rsi, rsp; mov [rsp], rax; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x000000000e7e05: movzx eax, byte ptr [r9+rax]; mov byte ptr [rdi+0x8], 0x1; mov [rdi], al; mov eax, 0x1; ret; 
0x0000000017d962: movzx eax, byte ptr [rax+rcx+0x40]; movzx edx, byte ptr [rdx+rcx+0x40]; sub eax, edx; vzeroupper; ret; 
0x0000000017d87c: movzx eax, byte ptr [rax+rcx+0x60]; movzx edx, byte ptr [rdx+rcx+0x60]; sub eax, edx; vzeroupper; ret; 
0x000000000a684d: movzx eax, byte ptr [rax+rcx]; movzx edx, byte ptr [rdx+rcx]; sub eax, edx; ret; 
0x0000000017d817: movzx eax, byte ptr [rax+rcx]; movzx edx, byte ptr [rdx+rcx]; sub eax, edx; vzeroupper; ret; 
0x0000000017d840: movzx eax, byte ptr [rax+rdi+0x20]; movzx edx, byte ptr [rdx+rdi+0x20]; sub eax, edx; vzeroupper; ret; 
0x0000000017d860: movzx eax, byte ptr [rax+rdi+0x40]; movzx edx, byte ptr [rdx+rdi+0x40]; sub eax, edx; vzeroupper; ret; 
0x0000000017dcc7: movzx eax, byte ptr [rax+rdi]; movzx edx, byte ptr [rdx+rdi]; sub eax, edx; vzeroupper; ret; 
0x000000000c2c82: movzx eax, byte ptr [rax+rdx]; cmp r8d, 0xff; je short 0x00000000000c2c93; mov eax, r8d; ret; 
0x00000000145ae2: movzx eax, byte ptr [rax+rdx]; mov [rdi+0x7], al; ret; 
0x0000000008e0d0: movzx eax, byte ptr [rax]; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000008a486: movzx eax, byte ptr [rax]; ret; 
0x000000000e7e06: movzx eax, byte ptr [rcx+rax]; mov byte ptr [rdi+0x8], 0x1; mov [rdi], al; mov eax, 0x1; ret; 
0x000000001366d7: movzx eax, byte ptr [rdi+0x1]; lea rax, [rdi+rax+0x2]; cmp rdx, rax; sbb eax, eax; ret; 
0x0000000013755a: movzx eax, byte ptr [rdi+0x1]; shl eax, 0x3; shr rax, 0x4; and eax, 0x7f; ret; 
0x000000000fd8b0: movzx eax, byte ptr [rdi+0x9]; and eax, 0xf; ret; 
0x0000000017eb04: movzx eax, byte ptr [rdi+rcx+0x20]; movzx edx, byte ptr [rsi+rcx+0x20]; sub eax, edx; vzeroupper; ret; 
0x0000000017eb24: movzx eax, byte ptr [rdi+rcx+0x40]; movzx edx, byte ptr [rsi+rcx+0x40]; sub eax, edx; vzeroupper; ret; 
0x0000000017eaea: movzx eax, byte ptr [rdi+rcx+0x60]; movzx edx, byte ptr [rsi+rcx+0x60]; sub eax, edx; vzeroupper; ret; 
0x00000000177abb: movzx eax, byte ptr [rdi+rcx]; movzx edx, byte ptr [rsi+rcx]; sub eax, edx; ret; 
0x0000000017e874: movzx eax, byte ptr [rdi+rcx]; movzx edx, byte ptr [rsi+rcx]; sub eax, edx; vzeroupper; ret; 
0x0000000017d6b4: movzx eax, byte ptr [rdi+rdx+0x20]; movzx edx, byte ptr [rsi+rdx+0x20]; sub eax, edx; vzeroupper; ret; 
0x0000000017d6d4: movzx eax, byte ptr [rdi+rdx+0x40]; movzx edx, byte ptr [rsi+rdx+0x40]; sub eax, edx; vzeroupper; ret; 
0x0000000017d6f4: movzx eax, byte ptr [rdi+rdx+0x60]; movzx edx, byte ptr [rsi+rdx+0x60]; sub eax, edx; vzeroupper; ret; 
0x0000000009e189: movzx eax, byte ptr [rdi+rdx]; mov [rsi+rdx], cl; mov [rsi+rdx+0x1], al; jne short 0x000000000009e180; ret; 
0x000000000a66e3: movzx eax, byte ptr [rdi+rdx]; movzx edx, byte ptr [rsi+rdx]; sub eax, edx; ret; 
0x0000000017d69a: movzx eax, byte ptr [rdi+rdx]; movzx edx, byte ptr [rsi+rdx]; sub eax, edx; vzeroupper; ret; 
0x000000000a6678: movzx eax, byte ptr [rdi+rdx]; sub eax, ecx; ret; 
0x0000000018bb30: movzx eax, byte ptr [rdi-0x10]; movzx edx, byte ptr [rsi-0x10]; sub eax, edx; ret; 
0x0000000018beea: movzx eax, byte ptr [rdi-0x1]; cmp al, [rsi-0x1]; jne 0x000000000018c065; xor eax, eax; ret; 
0x0000000018c042: movzx eax, byte ptr [rdi-0x1]; cmp al, [rsi-0x1]; jne short 0x000000000018c065; xor eax, eax; ret; 
0x00000000187ec0: movzx eax, byte ptr [rdi-0x1]; movzx ecx, byte ptr [rsi-0x1]; sub eax, ecx; ret; 
0x00000000187c73: movzx eax, byte ptr [rdi-0x1]; movzx edx, byte ptr [rsi-0x1]; sub eax, edx; ret; 
0x0000000018bb17: movzx eax, byte ptr [rdi-0x9]; movzx edx, byte ptr [rsi-0x9]; sub eax, edx; ret; 
0x0000000018bb90: movzx eax, byte ptr [rdi-0xa]; movzx edx, byte ptr [rsi-0xa]; sub eax, edx; ret; 
0x0000000018bb80: movzx eax, byte ptr [rdi-0xb]; movzx edx, byte ptr [rsi-0xb]; sub eax, edx; ret; 
0x0000000018bb70: movzx eax, byte ptr [rdi-0xc]; movzx edx, byte ptr [rsi-0xc]; sub eax, edx; ret; 
0x0000000018bb60: movzx eax, byte ptr [rdi-0xd]; movzx edx, byte ptr [rsi-0xd]; sub eax, edx; ret; 
0x0000000018bb50: movzx eax, byte ptr [rdi-0xe]; movzx edx, byte ptr [rsi-0xe]; sub eax, edx; ret; 
0x0000000018bb40: movzx eax, byte ptr [rdi-0xf]; movzx edx, byte ptr [rsi-0xf]; sub eax, edx; ret; 
0x00000000140f9b: movzx eax, byte ptr [rdi]; add eax, ecx; sub rdx, 0x1; jne short 0x0000000000140f28; ret; 
0x0000000017e8f0: movzx eax, byte ptr [rdi]; movzx ecx, byte ptr [rsi]; sub eax, ecx; ret; 
0x000000000a8b91: movzx eax, byte ptr [rdi]; movzx edx, byte ptr [rsi]; sub eax, edx; ret; 
0x000000000a6693: movzx eax, byte ptr [rdi]; sub eax, ecx; ret; 
0x0000000017dea3: movzx eax, byte ptr [rdi]; sub eax, ecx; vzeroupper; ret; 
0x00000000072c29: movzx eax, byte ptr [rdx+rax]; lea rdx, [rip-0x486]; movsxd rax, [rdi+rax*4]; add rax, rdx; jmp rax; 
0x00000000099310: movzx eax, byte ptr [rsi+rdx]; cmp al, r8b; jne short 0x0000000000099300; lea rax, [rdx-0x10]; ret; 
0x00000000151110: movzx eax, byte ptr [rsi]; lea rsi, [rsp+0x4]; mov [rsp+0x4], eax; mov rax, [rdi+0x8]; call qword ptr [rax+0x48]; 
0x000000001500c1: movzx eax, ch; mov rsi, rsp; mov [rsp], rax; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x000000000b84f0: movzx eax, cl; pop rbx; ret; 
0x000000000b8251: movzx eax, dh; mov rdx, rdi; rep stosb [rdi]; mov rax, rdx; ret; 
0x0000000002be25: movzx eax, dh; test sil, sil; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x000000000b8250: movzx eax, sil; mov rdx, rdi; rep stosb [rdi]; mov rax, rdx; ret; 
0x0000000002be24: movzx eax, sil; test sil, sil; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x00000000146f1d: movzx eax, word ptr [r8+0x88]; mov [rdx+0x6c], ax; mov eax, 0x1; ret; 
0x00000000146f1e: movzx eax, word ptr [rax+0x88]; mov [rdx+0x6c], ax; mov eax, 0x1; ret; 
0x00000000038f47: movzx eax, word ptr [rax+rdi*2+0x100]; and eax, esi; ret; 
0x00000000038c82: movzx eax, word ptr [rax+rdi*2]; and eax, 0x1000; ret; 
0x00000000038c62: movzx eax, word ptr [rax+rdi*2]; and eax, 0x100; ret; 
0x00000000038d02: movzx eax, word ptr [rax+rdi*2]; and eax, 0x1; ret; 
0x00000000038c42: movzx eax, word ptr [rax+rdi*2]; and eax, 0x2000; ret; 
0x00000000038bc2: movzx eax, word ptr [rax+rdi*2]; and eax, 0x200; ret; 
0x00000000038b82: movzx eax, word ptr [rax+rdi*2]; and eax, 0x2; ret; 
0x00000000038c02: movzx eax, word ptr [rax+rdi*2]; and eax, 0x4000; ret; 
0x00000000038b62: movzx eax, word ptr [rax+rdi*2]; and eax, 0x400; ret; 
0x00000000038c22: movzx eax, word ptr [rax+rdi*2]; and eax, 0x4; ret; 
0x00000000038be2: movzx eax, word ptr [rax+rdi*2]; and eax, 0x8000; ret; 
0x00000000038ba2: movzx eax, word ptr [rax+rdi*2]; and eax, 0x800; ret; 
0x00000000038b42: movzx eax, word ptr [rax+rdi*2]; and eax, 0x8; ret; 
0x00000000126b86: movzx eax, word ptr [rax+rdx*2]; shr ax, 0xe; and eax, 0x1; ret; 
0x000000001072a4: movzx eax, word ptr [rdi]; mov [rsi], ax; xor eax, eax; ret; 
0x00000000150ff0: movzx eax, word ptr [rsi]; lea rsi, [rsp+0x4]; mov [rsp+0x4], eax; mov rax, [rdi+0x8]; call qword ptr [rax+0x48]; 
0x0000000014ffc0: movzx eax, word ptr [rsi]; mov rsi, rsp; mov [rsp], rax; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x000000000eb78b: movzx ebp, bpl; movsxd rax, [rcx+rbp*4]; add rax, rcx; notrack jmp rax; 
0x000000000eb720: movzx ebp, bpl; movsxd rax, [rdx+rbp*4]; add rax, rdx; notrack jmp rax; 
0x000000000eb78c: movzx ebp, ch; movsxd rax, [rcx+rbp*4]; add rax, rcx; notrack jmp rax; 
0x000000000eb721: movzx ebp, ch; movsxd rax, [rdx+rbp*4]; add rax, rdx; notrack jmp rax; 
0x0000000013d33d: movzx ebp, di; jmp qword ptr [rsi+0x66]; 
0x000000000f9261: movzx ecx, byte ptr [rdx+0x8]; movsxd rcx, [r8+rcx*4]; add rcx, r8; notrack jmp rcx; 
0x000000000a4929: movzx ecx, byte ptr [rdx]; test cl, cl; jne short 0x00000000000a4920; mov [rdi], rdx; ret; 
0x000000000b77ca: movzx ecx, byte ptr [rsi+rdx+0x3]; test cl, cl; jne short 0x00000000000b77c0; ret; 
0x000000000b787a: movzx ecx, byte ptr [rsi+rdx+0x3]; test cl, cl; jne short 0x00000000000b7870; ret; 
0x000000000b7b3a: movzx ecx, byte ptr [rsi+rdx+0x3]; test cl, cl; jne short 0x00000000000b7b30; sub rax, 0x1; ret; 
0x000000000a6674: movzx ecx, byte ptr [rsi+rdx]; movzx eax, byte ptr [rdi+rdx]; sub eax, ecx; ret; 
0x00000000187ec4: movzx ecx, byte ptr [rsi-0x1]; sub eax, ecx; ret; 
0x000000000b7efc: movzx ecx, byte ptr [rsi]; mov [rdi], cl; ret; 
0x000000000a6690: movzx ecx, byte ptr [rsi]; movzx eax, byte ptr [rdi]; sub eax, ecx; ret; 
0x0000000017dea0: movzx ecx, byte ptr [rsi]; movzx eax, byte ptr [rdi]; sub eax, ecx; vzeroupper; ret; 
0x0000000017e8f3: movzx ecx, byte ptr [rsi]; sub eax, ecx; ret; 
0x000000000b7f20: movzx ecx, word ptr [rsi+rdx-0x2]; movzx esi, word ptr [rsi]; mov [rdi+rdx-0x2], cx; mov [rdi], si; ret; 
0x00000000182c10: movzx ecx, word ptr [rsi]; mov [rdi], cx; mov byte ptr [rdi+0x2], 0x0; vzeroupper; ret; 
0x000000001297d0: movzx edi, bh; and edx, 0xc0000000; cmp edx, 0x80000000; cmovne eax, edi; ret; 
0x0000000011ae8f: movzx edi, di; lea rax, [rip+0x91667]; mov eax, [rax+rdi*4]; ret; 
0x000000001297cf: movzx edi, dil; and edx, 0xc0000000; cmp edx, 0x80000000; cmovne eax, edi; ret; 
0x00000000118f98: movzx edx, bh; shr rax, 0xc; xor al, al; or eax, edx; ret; 
0x000000000f8a57: movzx edx, byte ptr [r15+0x30]; movsxd rdx, [rsi+rdx*4]; add rdx, rsi; notrack jmp rdx; 
0x0000000003f898: movzx edx, byte ptr [rcx]; test dl, dl; jne short 0x000000000003f878; ret; 
0x000000000f8a58: movzx edx, byte ptr [rdi+0x30]; movsxd rdx, [rsi+rdx*4]; add rdx, rsi; notrack jmp rdx; 
0x00000000145adb: movzx edx, byte ptr [rdi+0x7]; and edx, 0x7f; movzx eax, byte ptr [rax+rdx]; mov [rdi+0x7], al; ret; 
0x0000000017d966: movzx edx, byte ptr [rdx+rcx+0x40]; sub eax, edx; vzeroupper; ret; 
0x0000000017d881: movzx edx, byte ptr [rdx+rcx+0x60]; sub eax, edx; vzeroupper; ret; 
0x000000000a6851: movzx edx, byte ptr [rdx+rcx]; sub eax, edx; ret; 
0x0000000017d81b: movzx edx, byte ptr [rdx+rcx]; sub eax, edx; vzeroupper; ret; 
0x0000000017d845: movzx edx, byte ptr [rdx+rdi+0x20]; sub eax, edx; vzeroupper; ret; 
0x0000000017d864: movzx edx, byte ptr [rdx+rdi+0x40]; sub eax, edx; vzeroupper; ret; 
0x0000000017dccb: movzx edx, byte ptr [rdx+rdi]; sub eax, edx; vzeroupper; ret; 
0x000000000b79ea: movzx edx, byte ptr [rsi+rax+0x3]; test dl, dl; jne short 0x00000000000b79e0; lea rax, [rcx-0x1]; ret; 
0x0000000017eb09: movzx edx, byte ptr [rsi+rcx+0x20]; sub eax, edx; vzeroupper; ret; 
0x0000000017eb28: movzx edx, byte ptr [rsi+rcx+0x40]; sub eax, edx; vzeroupper; ret; 
0x0000000017eaef: movzx edx, byte ptr [rsi+rcx+0x60]; sub eax, edx; vzeroupper; ret; 
0x00000000177abf: movzx edx, byte ptr [rsi+rcx]; sub eax, edx; ret; 
0x0000000017e878: movzx edx, byte ptr [rsi+rcx]; sub eax, edx; vzeroupper; ret; 
0x0000000017d6b9: movzx edx, byte ptr [rsi+rdx+0x20]; sub eax, edx; vzeroupper; ret; 
0x0000000017d6d8: movzx edx, byte ptr [rsi+rdx+0x40]; sub eax, edx; vzeroupper; ret; 
0x0000000017d6f9: movzx edx, byte ptr [rsi+rdx+0x60]; sub eax, edx; vzeroupper; ret; 
0x000000000a66e7: movzx edx, byte ptr [rsi+rdx]; sub eax, edx; ret; 
0x0000000017d69e: movzx edx, byte ptr [rsi+rdx]; sub eax, edx; vzeroupper; ret; 
0x0000000018bb34: movzx edx, byte ptr [rsi-0x10]; sub eax, edx; ret; 
0x000000001672a0: movzx edx, byte ptr [rsi-0x1]; mov [rdi-0x1], dl; ret; 
0x00000000187c77: movzx edx, byte ptr [rsi-0x1]; sub eax, edx; ret; 
0x0000000018bb1b: movzx edx, byte ptr [rsi-0x9]; sub eax, edx; ret; 
0x0000000018bb94: movzx edx, byte ptr [rsi-0xa]; sub eax, edx; ret; 
0x0000000018bb84: movzx edx, byte ptr [rsi-0xb]; sub eax, edx; ret; 
0x0000000018bb74: movzx edx, byte ptr [rsi-0xc]; sub eax, edx; ret; 
0x0000000018bb64: movzx edx, byte ptr [rsi-0xd]; sub eax, edx; ret; 
0x0000000018bb62: movzx edx, byte ptr [rsi-0xd]; sub eax, edx; ret; 
0x0000000018bb54: movzx edx, byte ptr [rsi-0xe]; sub eax, edx; ret; 
0x0000000018bb52: movzx edx, byte ptr [rsi-0xe]; sub eax, edx; ret; 
0x0000000018bb44: movzx edx, byte ptr [rsi-0xf]; sub eax, edx; ret; 
0x00000000184d60: movzx edx, byte ptr [rsi]; mov [rdi], dl; lea rax, [rdi+0x1]; vzeroupper; ret; 
0x00000000183480: movzx edx, byte ptr [rsi]; mov [rdi], dl; mov byte ptr [rdi+0x1], 0x0; vzeroupper; ret; 
0x00000000167980: movzx edx, byte ptr [rsi]; mov [rdi], dl; ret; 
0x00000000184030: movzx edx, byte ptr [rsi]; mov [rdi], dl; vzeroupper; ret; 
0x000000000a8b94: movzx edx, byte ptr [rsi]; sub eax, edx; ret; 
0x000000000a4d32: movzx edx, byte ptr [rsp+0x16]; mov [rdi+0x6], dl; ret; 
0x000000000a4def: movzx edx, byte ptr [rsp+0xe]; mov [rax+0x6], dl; ret; 
0x000000000a4ed4: movzx edx, byte ptr [rsp+0xe]; mov [rdi+0x6], dl; ret; 
0x000000000a4da0: movzx edx, byte ptr [rsp-0x6]; mov [rax+0x2], dl; ret; 
0x000000000a4cdb: movzx edx, byte ptr [rsp-0x6]; mov [rdi+0x2], dl; ret; 
0x000000000a4dbe: movzx edx, byte ptr [rsp-0xc]; mov [rax+0x4], dl; ret; 
0x000000000a4cf9: movzx edx, byte ptr [rsp-0xc]; mov [rdi+0x4], dl; ret; 
0x00000000118f97: movzx edx, dil; shr rax, 0xc; xor al, al; or eax, edx; ret; 
0x0000000003f2e5: movzx edx, dl; movsxd r10, [r11+r10*4]; add r10, r11; notrack jmp r10; 
0x00000000050e84: movzx edx, dl; movsxd rdx, [r9+rdx*4]; add rdx, r9; notrack jmp rdx; 
0x0000000007cdd8: movzx edx, dl; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x000000000d421e: movzx edx, dl; movsxd rdx, [rdi+rdx*4]; add rdx, rdi; notrack jmp rdx; 
0x0000000007ce83: movzx edx, dl; movsxd rdx, [rsi+rdx*4]; add rdx, rsi; notrack jmp rdx; 
0x000000000a8bba: movzx edx, dl; sub eax, edx; ret; 
0x000000000d421d: movzx edx, r10b; movsxd rdx, [rdi+rdx*4]; add rdx, rdi; notrack jmp rdx; 
0x000000000d4297: movzx edx, r10b; movsxd rdx, [rsi+rdx*4]; add rdx, rsi; notrack jmp rdx; 
0x00000000184053: movzx edx, word ptr [rsi+r8-0x2]; mov [rdi], cx; mov [rdi+r8-0x2], dx; vzeroupper; ret; 
0x00000000184054: movzx edx, word ptr [rsi+rax-0x2]; mov [rdi], cx; mov [rdi+r8-0x2], dx; vzeroupper; ret; 
0x00000000167220: movzx edx, word ptr [rsi-0x2]; mov [rdi-0x2], dx; ret; 
0x00000000184690: movzx edx, word ptr [rsi]; mov [rdi], dx; lea rax, [rdi+0x1]; vzeroupper; ret; 
0x00000000184d70: movzx edx, word ptr [rsi]; mov [rdi], dx; lea rax, [rdi+0x2]; vzeroupper; ret; 
0x00000000183490: movzx edx, word ptr [rsi]; mov [rdi], dx; mov byte ptr [rdi+0x2], 0x0; vzeroupper; ret; 
0x00000000167910: movzx edx, word ptr [rsi]; mov [rdi], dx; ret; 
0x00000000182c00: movzx edx, word ptr [rsi]; mov [rdi], dx; vzeroupper; ret; 
0x000000000a4d29: movzx edx, word ptr [rsp+0x14]; mov [rdi+0x4], dx; movzx edx, byte ptr [rsp+0x16]; mov [rdi+0x6], dl; ret; 
0x000000000a4de6: movzx edx, word ptr [rsp+0xc]; mov [rax+0x4], dx; movzx edx, byte ptr [rsp+0xe]; mov [rax+0x6], dl; ret; 
0x000000000a4ecb: movzx edx, word ptr [rsp+0xc]; mov [rdi+0x4], dx; movzx edx, byte ptr [rsp+0xe]; mov [rdi+0x6], dl; ret; 
0x000000000a4d11: movzx edx, word ptr [rsp+0xc]; mov [rdi+0x4], dx; ret; 
0x000000000a4dd6: movzx edx, word ptr [rsp-0x14]; mov [rax+0x4], dx; ret; 
0x000000000a4eb3: movzx edx, word ptr [rsp-0x14]; mov [rdi+0x4], dx; ret; 
0x000000000a4d98: movzx edx, word ptr [rsp-0x8]; mov [rax], dx; movzx edx, byte ptr [rsp-0x6]; mov [rax+0x2], dl; ret; 
0x00000000076110: movzx esi, byte ptr [rax+rsi]; movsxd rsi, [rdi+rsi*4]; lea rdi, [rip-0x1337]; add rsi, rdi; jmp rsi; 
0x00000000075676: movzx esi, byte ptr [rax+rsi]; movsxd rsi, [rdi+rsi*4]; lea rdi, [rip-0x89d]; add rsi, rdi; jmp rsi; 
0x0000000008e58e: movzx esi, byte ptr [rsi]; call qword ptr [rax+0x18]; 
0x00000000129838: movzx esi, dh; mov eax, edi; or eax, esi; bswap eax; ret; 
0x000000000eb87b: movzx esi, dh; movsxd rax, [rdx+r14*4]; add rax, rdx; notrack jmp rax; 
0x0000000012981b: movzx esi, si; mov eax, edi; or eax, esi; bswap eax; ret; 
0x00000000129837: movzx esi, sil; mov eax, edi; or eax, esi; bswap eax; ret; 
0x000000000b7f25: movzx esi, word ptr [rsi]; mov [rdi+rdx-0x2], cx; mov [rdi], si; ret; 
0x0000000018daf4: movzx esp, bh; add rax, rdx; notrack jmp rax; 
0x0000000003f2e4: movzx r10d, r10b; movsxd r10, [r11+r10*4]; add r10, r11; notrack jmp r10; 
0x0000000018daf3: movzx r12d, dil; add rax, rdx; notrack jmp rax; 
0x000000000eb87a: movzx r14d, r14b; movsxd rax, [rdx+r14*4]; add rax, rdx; notrack jmp rax; 
0x000000000c2c81: movzx r8d, byte ptr [rax+rdx]; cmp r8d, 0xff; je short 0x00000000000c2c93; mov eax, r8d; ret; 
0x00000000189096: mul ch; add al, [rax]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000010f89f: mul dword ptr [rcx+rax*2-0x77]; add r8b, r13b; cmpsb [rsi], [rdi]; adc eax, edi; jmp qword ptr [rcx+rax*2-0x75]; 
0x00000000186a30: mul dword ptr [rip+0x11111111]; bsr eax, eax; lea rax, [rdi+rax-0x20]; vzeroupper; ret; 
0x000000000409ce: mulps xmm0, [rip+0x17631b]; ret; 
0x00000000040d23: mulps xmm0, [rip+0x1766b6]; ret; 
0x00000000040cd8: mulps xmm0, [rip+0x1766f9]; ret; 
0x00000000040cb3: mulps xmm0, [rip+0x176722]; ret; 
0x00000000040949: mulps xmm0, xmm1; ret; 
0x000000000409cd: mulsd xmm0, [rip+0x17631b]; ret; 
0x00000000040948: mulsd xmm0, xmm1; ret; 
0x00000000040d22: mulss xmm0, [rip+0x1766b6]; ret; 
0x00000000040cd7: mulss xmm0, [rip+0x1766f9]; ret; 
0x00000000040cb2: mulss xmm0, [rip+0x176722]; ret; 
0x0000000010f1f7: neg byte ptr [rbx+0x31]; call far fword ptr [rbp+0x41]; 
0x0000000005cbf5: neg byte ptr [rcx+0x5b010018]; mov eax, r8d; pop rbp; pop r12; ret; 
0x0000000005365c: neg dword ptr [rax]; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x0000000014bcf5: neg dword ptr [rsi+0x1e6affff]; lea rdx, [rip-0x6172]; mov esi, 0x6; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x00000000039005: neg dword ptr [rsi+0x548001a]; add [rdx], al; add [rax], al; mov fs:[rdx], rax; ret; 
0x00000000050c7a: neg eax; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000041bdb: neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000041c17: neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000046437: neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000015c717: neg eax; mov r8d, 0xffffffff; mov fs:[rdx], eax; mov eax, r8d; ret; 
0x000000000fd347: neg eax; mov r9d, 0xffffffff; mov fs:[rdx], eax; mov eax, r9d; ret; 
0x0000000018582f: neg eax; or eax, 0x1; vzeroupper; ret; 
0x00000000060fae: neg eax; pop rbp; ret; 
0x0000000013a323: neg eax; pop rbx; pop rbp; pop r12; ret; 
0x0000000002930f: neg eax; ret; 
0x00000000093884: neg edi; call qword ptr [r13]; 
0x0000000010d7e0: neg edx; cmp eax, 0xfffff000; mov eax, 0x0; cmova eax, edx; ret; 
0x000000000d8e62: neg edx; cmp eax, 0xffffffea; mov eax, 0x3; cmovne eax, edx; ret; 
0x00000000093883: neg rdi; call qword ptr [r13]; 
0x000000000cbaf8: nop [rax+rax]; add rax, 0x3; ret; 
0x000000000cbaf7: nop [rax+rax]; add rax, 0x3; ret; 
0x000000000cbaf5: nop [rax+rax]; add rax, 0x3; ret; 
0x00000000097bf8: nop [rax+rax]; add rsp, 0x18; ret; 
0x00000000097bf7: nop [rax+rax]; add rsp, 0x18; ret; 
0x0000000009f698: nop [rax+rax]; add rsp, 0x8; pop rbp; pop r12; ret; 
0x0000000009f696: nop [rax+rax]; add rsp, 0x8; pop rbp; pop r12; ret; 
0x0000000009f697: nop [rax+rax]; add rsp, 0x8; pop rbp; pop r12; ret; 
0x00000000029a33: nop [rax+rax]; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000029a32: nop [rax+rax]; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000000409d7: nop [rax+rax]; addsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x000000000409d6: nop [rax+rax]; addsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x000000000409d8: nop [rax+rax]; addsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x00000000040d2b: nop [rax+rax]; addss xmm0, xmm0; ret; 
0x000000000a8467: nop [rax+rax]; bsf eax, eax; lea rax, [rax+rdi+0x10]; ret; 
0x000000000a8468: nop [rax+rax]; bsf eax, eax; lea rax, [rax+rdi+0x10]; ret; 
0x0000000017e5f7: nop [rax+rax]; bsr eax, eax; add rax, rdi; vzeroupper; ret; 
0x0000000017e5f5: nop [rax+rax]; bsr eax, eax; add rax, rdi; vzeroupper; ret; 
0x0000000017e5f8: nop [rax+rax]; bsr eax, eax; add rax, rdi; vzeroupper; ret; 
0x000000000a8938: nop [rax+rax]; bsr eax, eax; lea rax, [rax+rdi+0x10]; ret; 
0x000000000a8937: nop [rax+rax]; bsr eax, eax; lea rax, [rax+rdi+0x10]; ret; 
0x00000000055da8: nop [rax+rax]; bts rax, 0x30; mov [rdi+0x8], rax; mov eax, 0x2; ret; 
0x00000000055b9a: nop [rax+rax]; bts rdx, 0x34; mov eax, 0x1; mov [rdi], rdx; ret; 
0x00000000055b9b: nop [rax+rax]; bts rdx, 0x34; mov eax, 0x1; mov [rdi], rdx; ret; 
0x00000000191ba8: nop [rax+rax]; call qword ptr [rbx]; 
0x000000000938cb: nop [rax+rax]; call rax; 
0x000000000938ca: nop [rax+rax]; call rax; 
0x00000000092813: nop [rax+rax]; cmp [rip+0x154669], rdi; jbe short 0x00000000000927c8; add rsp, 0x8; ret; 
0x00000000092812: nop [rax+rax]; cmp [rip+0x154669], rdi; jbe short 0x00000000000927c8; add rsp, 0x8; ret; 
0x0000000009b285: nop [rax+rax]; endbr64; cmp qword ptr [rip+0x14bc74], 0x0; je short 0x000000000009b2a0; ret; 
0x0000000009b288: nop [rax+rax]; endbr64; cmp qword ptr [rip+0x14bc74], 0x0; je short 0x000000000009b2a0; ret; 
0x0000000009b287: nop [rax+rax]; endbr64; cmp qword ptr [rip+0x14bc74], 0x0; je short 0x000000000009b2a0; ret; 
0x00000000028dca: nop [rax+rax]; endbr64; lea rax, [rip+0x18932d]; ret; 
0x00000000028dcb: nop [rax+rax]; endbr64; lea rax, [rip+0x18932d]; ret; 
0x00000000091328: nop [rax+rax]; endbr64; mov dword ptr [rdi], 0x0; xor eax, eax; ret; 
0x00000000091327: nop [rax+rax]; endbr64; mov dword ptr [rdi], 0x0; xor eax, eax; ret; 
0x0000000011024b: nop [rax+rax]; endbr64; mov eax, 0x132; syscall; 
0x0000000011a128: nop [rax+rax]; endbr64; mov eax, 0x134; syscall; 
0x00000000141355: nop [rax+rax]; endbr64; mov eax, 0x1; ret; 
0x00000000141358: nop [rax+rax]; endbr64; mov eax, 0x1; ret; 
0x00000000141357: nop [rax+rax]; endbr64; mov eax, 0x1; ret; 
0x000000001139ab: nop [rax+rax]; endbr64; mov eax, 0x1c; syscall; 
0x0000000010956b: nop [rax+rax]; endbr64; mov eax, 0x20; syscall; 
0x000000000de79b: nop [rax+rax]; endbr64; mov eax, 0x25; syscall; 
0x000000000d020a: nop [rax+rax]; endbr64; mov eax, 0x26; syscall; 
0x000000000d020b: nop [rax+rax]; endbr64; mov eax, 0x26; syscall; 
0x000000001436aa: nop [rax+rax]; endbr64; mov eax, 0x2; ret; 
0x0000000014369b: nop [rax+rax]; endbr64; mov eax, 0x2; ret; 
0x0000000011a8f8: nop [rax+rax]; endbr64; mov eax, 0x30; syscall; 
0x0000000011a2eb: nop [rax+rax]; endbr64; mov eax, 0x31; syscall; 
0x0000000011a448: nop [rax+rax]; endbr64; mov eax, 0x32; syscall; 
0x0000000011a3bb: nop [rax+rax]; endbr64; mov eax, 0x34; syscall; 
0x0000000010e2bb: nop [rax+rax]; endbr64; mov eax, 0x3; syscall; 
0x00000000041bbb: nop [rax+rax]; endbr64; mov eax, 0x3e; syscall; 
0x0000000011b14b: nop [rax+rax]; endbr64; mov eax, 0x40; syscall; 
0x0000000011b10a: nop [rax+rax]; endbr64; mov eax, 0x47; syscall; 
0x0000000011b10b: nop [rax+rax]; endbr64; mov eax, 0x47; syscall; 
0x0000000010924b: nop [rax+rax]; endbr64; mov eax, 0x49; syscall; 
0x0000000010924a: nop [rax+rax]; endbr64; mov eax, 0x49; syscall; 
0x00000000111bdb: nop [rax+rax]; endbr64; mov eax, 0x4c; syscall; 
0x00000000111c0b: nop [rax+rax]; endbr64; mov eax, 0x4d; syscall; 
0x00000000111c0a: nop [rax+rax]; endbr64; mov eax, 0x4d; syscall; 
0x000000001096eb: nop [rax+rax]; endbr64; mov eax, 0x50; syscall; 
0x0000000010a978: nop [rax+rax]; endbr64; mov eax, 0x57; syscall; 
0x0000000010a8b8: nop [rax+rax]; endbr64; mov eax, 0x58; syscall; 
0x0000000011a008: nop [rax+rax]; endbr64; mov eax, 0x63; syscall; 
0x00000000119c48: nop [rax+rax]; endbr64; mov eax, 0x7d; syscall; 
0x000000000421ba: nop [rax+rax]; endbr64; mov eax, 0x83; syscall; 
0x000000000421bb: nop [rax+rax]; endbr64; mov eax, 0x83; syscall; 
0x000000001194d8: nop [rax+rax]; endbr64; mov eax, 0x87; syscall; 
0x0000000010f13a: nop [rax+rax]; endbr64; mov eax, 0x8c; syscall; 
0x0000000010f13b: nop [rax+rax]; endbr64; mov eax, 0x8c; syscall; 
0x00000000113a38: nop [rax+rax]; endbr64; mov eax, 0x95; syscall; 
0x00000000110588: nop [rax+rax]; endbr64; mov eax, 0x99; syscall; 
0x00000000119baa: nop [rax+rax]; endbr64; mov eax, 0x9e; syscall; 
0x00000000119bab: nop [rax+rax]; endbr64; mov eax, 0x9e; syscall; 
0x0000000011018b: nop [rax+rax]; endbr64; mov eax, 0xa2; syscall; 
0x00000000110098: nop [rax+rax]; endbr64; mov eax, 0xa3; syscall; 
0x0000000011924b: nop [rax+rax]; endbr64; mov eax, 0xa6; syscall; 
0x0000000011916b: nop [rax+rax]; endbr64; mov eax, 0xad; syscall; 
0x00000000119d98: nop [rax+rax]; endbr64; mov eax, 0xb1; syscall; 
0x00000000119f48: nop [rax+rax]; endbr64; mov eax, 0xb4; syscall; 
0x0000000011927a: nop [rax+rax]; endbr64; mov eax, 0xbb; syscall; 
0x0000000011927b: nop [rax+rax]; endbr64; mov eax, 0xbb; syscall; 
0x00000000116f08: nop [rax+rax]; endbr64; mov eax, 0xc2; syscall; 
0x00000000116f68: nop [rax+rax]; endbr64; mov eax, 0xc3; syscall; 
0x00000000116e48: nop [rax+rax]; endbr64; mov eax, 0xc4; syscall; 
0x00000000116ff8: nop [rax+rax]; endbr64; mov eax, 0xc5; syscall; 
0x000000000fd358: nop [rax+rax]; endbr64; mov eax, 0xcb; syscall; 
0x000000000fd356: nop [rax+rax]; endbr64; mov eax, 0xcb; syscall; 
0x000000000fd357: nop [rax+rax]; endbr64; mov eax, 0xcb; syscall; 
0x00000000119df8: nop [rax+rax]; endbr64; mov eax, 0xfe; syscall; 
0x0000000008e4a8: nop [rax+rax]; endbr64; mov eax, 0xffffffff; ret; 
0x0000000008e4a7: nop [rax+rax]; endbr64; mov eax, 0xffffffff; ret; 
0x000000000895db: nop [rax+rax]; endbr64; mov eax, [rdi]; and eax, 0x804; ret; 
0x000000000895da: nop [rax+rax]; endbr64; mov eax, [rdi]; and eax, 0x804; ret; 
0x000000000425bb: nop [rax+rax]; endbr64; mov eax, [rip+0x1a0bde]; ret; 
0x0000000015ceea: nop [rax+rax]; endbr64; mov qword ptr [rcx], 0x0; mov eax, 0xffffffff; ret; 
0x0000000015ceeb: nop [rax+rax]; endbr64; mov qword ptr [rcx], 0x0; mov eax, 0xffffffff; ret; 
0x00000000060fea: nop [rax+rax]; endbr64; mov r10, rcx; mov eax, 0x108; syscall; 
0x00000000060feb: nop [rax+rax]; endbr64; mov r10, rcx; mov eax, 0x108; syscall; 
0x00000000119a2a: nop [rax+rax]; endbr64; mov r10, rcx; mov eax, 0x11e; syscall; 
0x00000000119a2b: nop [rax+rax]; endbr64; mov r10, rcx; mov eax, 0x11e; syscall; 
0x00000000119af8: nop [rax+rax]; endbr64; mov r10, rcx; mov eax, 0x136; syscall; 
0x00000000119f18: nop [rax+rax]; endbr64; mov r10, rcx; mov eax, 0x19; syscall; 
0x0000000010dc8b: nop [rax+rax]; endbr64; mov r10, rcx; mov eax, 0x28; syscall; 
0x00000000119fd8: nop [rax+rax]; endbr64; mov r10, rcx; mov eax, 0xb3; syscall; 
0x00000000116ed8: nop [rax+rax]; endbr64; mov r10, rcx; mov eax, 0xbf; syscall; 
0x0000000011b228: nop [rax+rax]; endbr64; mov r10, rcx; mov eax, 0xdc; syscall; 
0x00000000108406: nop [rax+rax]; endbr64; mov r10d, ecx; mov eax, 0x14c; syscall; 
0x00000000108408: nop [rax+rax]; endbr64; mov r10d, ecx; mov eax, 0x14c; syscall; 
0x00000000108407: nop [rax+rax]; endbr64; mov r10d, ecx; mov eax, 0x14c; syscall; 
0x0000000010d7c8: nop [rax+rax]; endbr64; mov r10d, ecx; mov eax, 0xdd; syscall; 
0x0000000008fdfb: nop [rax+rax]; endbr64; mov rax, 0xffffffffffffffff; ret; 
0x0000000008fdfa: nop [rax+rax]; endbr64; mov rax, 0xffffffffffffffff; ret; 
0x00000000151137: nop [rax+rax]; endbr64; mov rax, [rdi+0x18]; sub rax, [rdi+0x20]; ret; 
0x00000000151135: nop [rax+rax]; endbr64; mov rax, [rdi+0x18]; sub rax, [rdi+0x20]; ret; 
0x00000000151138: nop [rax+rax]; endbr64; mov rax, [rdi+0x18]; sub rax, [rdi+0x20]; ret; 
0x0000000008fe58: nop [rax+rax]; endbr64; mov rax, [rdi+0x68]; ret; 
0x0000000008fe57: nop [rax+rax]; endbr64; mov rax, [rdi+0x68]; ret; 
0x0000000008fe35: nop [rax+rax]; endbr64; mov rax, [rip+0x154775]; ret; 
0x0000000008fe37: nop [rax+rax]; endbr64; mov rax, [rip+0x154775]; ret; 
0x0000000008fe38: nop [rax+rax]; endbr64; mov rax, [rip+0x154775]; ret; 
0x00000000038f75: nop [rax+rax]; endbr64; mov rax, [rip+0x1a9f3d]; add rax, fs:[0x0]; ret; 
0x00000000038f78: nop [rax+rax]; endbr64; mov rax, [rip+0x1a9f3d]; add rax, fs:[0x0]; ret; 
0x00000000038f77: nop [rax+rax]; endbr64; mov rax, [rip+0x1a9f3d]; add rax, fs:[0x0]; ret; 
0x00000000038f97: nop [rax+rax]; endbr64; mov rax, [rip+0x1a9f55]; add rax, fs:[0x0]; ret; 
0x00000000038f98: nop [rax+rax]; endbr64; mov rax, [rip+0x1a9f55]; add rax, fs:[0x0]; ret; 
0x00000000038f95: nop [rax+rax]; endbr64; mov rax, [rip+0x1a9f55]; add rax, fs:[0x0]; ret; 
0x0000000002902b: nop [rax+rax]; endbr64; mov rax, [rip+0x1b9e0d]; add rax, fs:[0x0]; ret; 
0x0000000002a6b8: nop [rax+rax]; endbr64; mov rax, [rip+0x1baf9d]; ret; 
0x0000000002a6b6: nop [rax+rax]; endbr64; mov rax, [rip+0x1baf9d]; ret; 
0x0000000002a6b7: nop [rax+rax]; endbr64; mov rax, [rip+0x1baf9d]; ret; 
0x00000000129b5b: nop [rax+rax]; endbr64; mov rax, [rip+0xb92c5]; add rax, fs:[0x0]; ret; 
0x0000000011c96b: nop [rax+rax]; endbr64; mov rax, [rip+0xc64bd]; mov eax, [rax+0x38]; ret; 
0x000000000deada: nop [rax+rax]; endbr64; pop rdi; mov eax, 0x3a; syscall; 
0x000000000deadb: nop [rax+rax]; endbr64; pop rdi; mov eax, 0x3a; syscall; 
0x0000000008fe2b: nop [rax+rax]; endbr64; ret; 
0x00000000141565: nop [rax+rax]; endbr64; ret; 
0x0000000008fe2a: nop [rax+rax]; endbr64; ret; 
0x00000000141567: nop [rax+rax]; endbr64; ret; 
0x000000001274e8: nop [rax+rax]; endbr64; ret; 
0x000000001274e7: nop [rax+rax]; endbr64; ret; 
0x00000000141575: nop [rax+rax]; endbr64; xor eax, eax; ret; 
0x0000000009131a: nop [rax+rax]; endbr64; xor eax, eax; ret; 
0x00000000141578: nop [rax+rax]; endbr64; xor eax, eax; ret; 
0x00000000141577: nop [rax+rax]; endbr64; xor eax, eax; ret; 
0x000000001515d7: nop [rax+rax]; endbr64; xor eax, eax; ret; 
0x0000000009131b: nop [rax+rax]; endbr64; xor eax, eax; ret; 
0x0000000011b2ca: nop [rax+rax]; endbr64; xor r10d, r10d; mov eax, 0x1d; syscall; 
0x0000000011b2cb: nop [rax+rax]; endbr64; xor r10d, r10d; mov eax, 0x1d; syscall; 
0x0000000004069b: nop [rax+rax]; fld st, tbyte ptr [rsp+0x8]; fadd st, st(0); ret; 
0x00000000042608: nop [rax+rax]; lea eax, [rdx-0x1]; mov [rip+0x1a0b8f], eax; mov eax, edx; ret; 
0x00000000042606: nop [rax+rax]; lea eax, [rdx-0x1]; mov [rip+0x1a0b8f], eax; mov eax, edx; ret; 
0x00000000042607: nop [rax+rax]; lea eax, [rdx-0x1]; mov [rip+0x1a0b8f], eax; mov eax, edx; ret; 
0x000000000b6de7: nop [rax+rax]; lea r11, [rip+0xf248d]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6de8: nop [rax+rax]; lea r11, [rip+0xf248d]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b4f2a: nop [rax+rax]; lea r11, [rip+0xf4179]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b4f2b: nop [rax+rax]; lea r11, [rip+0xf4179]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b384a: nop [rax+rax]; lea r11, [rip+0xf5679]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b384b: nop [rax+rax]; lea r11, [rip+0xf5679]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000018a848: nop [rax+rax]; lea rax, [rdi+0x2]; ret; 
0x0000000018a845: nop [rax+rax]; lea rax, [rdi+0x2]; ret; 
0x0000000018a847: nop [rax+rax]; lea rax, [rdi+0x2]; ret; 
0x0000000018a857: nop [rax+rax]; lea rax, [rdi+0x3]; ret; 
0x0000000018a855: nop [rax+rax]; lea rax, [rdi+0x3]; ret; 
0x0000000018a858: nop [rax+rax]; lea rax, [rdi+0x3]; ret; 
0x0000000018a867: nop [rax+rax]; lea rax, [rdi+0x4]; ret; 
0x0000000018a868: nop [rax+rax]; lea rax, [rdi+0x4]; ret; 
0x0000000018a865: nop [rax+rax]; lea rax, [rdi+0x4]; ret; 
0x0000000018a878: nop [rax+rax]; lea rax, [rdi+0x5]; ret; 
0x0000000018a877: nop [rax+rax]; lea rax, [rdi+0x5]; ret; 
0x0000000018a875: nop [rax+rax]; lea rax, [rdi+0x5]; ret; 
0x0000000018a885: nop [rax+rax]; lea rax, [rdi+0x6]; ret; 
0x0000000018a887: nop [rax+rax]; lea rax, [rdi+0x6]; ret; 
0x0000000018a888: nop [rax+rax]; lea rax, [rdi+0x6]; ret; 
0x0000000018a895: nop [rax+rax]; lea rax, [rdi+0x8]; ret; 
0x0000000018a898: nop [rax+rax]; lea rax, [rdi+0x8]; ret; 
0x0000000018a897: nop [rax+rax]; lea rax, [rdi+0x8]; ret; 
0x0000000018a8a5: nop [rax+rax]; lea rax, [rdi+0x9]; ret; 
0x0000000018a8a7: nop [rax+rax]; lea rax, [rdi+0x9]; ret; 
0x0000000018a8a8: nop [rax+rax]; lea rax, [rdi+0x9]; ret; 
0x0000000018a8b7: nop [rax+rax]; lea rax, [rdi+0xa]; ret; 
0x0000000018a8b8: nop [rax+rax]; lea rax, [rdi+0xa]; ret; 
0x0000000018a8b5: nop [rax+rax]; lea rax, [rdi+0xa]; ret; 
0x0000000018a8c5: nop [rax+rax]; lea rax, [rdi+0xb]; ret; 
0x0000000018a8c8: nop [rax+rax]; lea rax, [rdi+0xb]; ret; 
0x0000000018a8c7: nop [rax+rax]; lea rax, [rdi+0xb]; ret; 
0x0000000018a8d8: nop [rax+rax]; lea rax, [rdi+0xc]; ret; 
0x0000000018a8d7: nop [rax+rax]; lea rax, [rdi+0xc]; ret; 
0x0000000018a8d5: nop [rax+rax]; lea rax, [rdi+0xc]; ret; 
0x0000000018a8e5: nop [rax+rax]; lea rax, [rdi+0xd]; ret; 
0x0000000018a8e7: nop [rax+rax]; lea rax, [rdi+0xd]; ret; 
0x0000000018a8e8: nop [rax+rax]; lea rax, [rdi+0xd]; ret; 
0x0000000018a8f8: nop [rax+rax]; lea rax, [rdi+0xe]; ret; 
0x0000000018a8f7: nop [rax+rax]; lea rax, [rdi+0xe]; ret; 
0x0000000018a8f5: nop [rax+rax]; lea rax, [rdi+0xe]; ret; 
0x000000000cb667: nop [rax+rax]; lea rax, [rdi-0x4]; ret; 
0x000000000cb668: nop [rax+rax]; lea rax, [rdi-0x4]; ret; 
0x000000000cb665: nop [rax+rax]; lea rax, [rdi-0x4]; ret; 
0x000000000cb655: nop [rax+rax]; lea rax, [rdi-0x8]; ret; 
0x000000000cb658: nop [rax+rax]; lea rax, [rdi-0x8]; ret; 
0x000000000cb657: nop [rax+rax]; lea rax, [rdi-0x8]; ret; 
0x000000000cb645: nop [rax+rax]; lea rax, [rdi-0xc]; ret; 
0x000000000cb647: nop [rax+rax]; lea rax, [rdi-0xc]; ret; 
0x000000000cb648: nop [rax+rax]; lea rax, [rdi-0xc]; ret; 
0x00000000037376: nop [rax+rax]; lea rax, [rip+0x176e5b]; ret; 
0x00000000037377: nop [rax+rax]; lea rax, [rip+0x176e5b]; ret; 
0x00000000037378: nop [rax+rax]; lea rax, [rip+0x176e5b]; ret; 
0x00000000143388: nop [rax+rax]; lea rdx, [rip+0x9f7a9]; jmp qword ptr [rdx+rax*8]; 
0x0000000010e353: nop [rax+rax]; lea rdx, [rsp+0x8]; mov esi, 0x10; mov eax, 0x48; syscall; 
0x0000000010e352: nop [rax+rax]; lea rdx, [rsp+0x8]; mov esi, 0x10; mov eax, 0x48; syscall; 
0x00000000172257: nop [rax+rax]; mov [rcx], edx; mov [rcx+0x3], edx; ret; 
0x00000000172258: nop [rax+rax]; mov [rcx], edx; mov [rcx+0x3], edx; ret; 
0x00000000172248: nop [rax+rax]; mov [rcx], edx; mov [rcx+0x4], dx; ret; 
0x00000000172247: nop [rax+rax]; mov [rcx], edx; mov [rcx+0x4], dx; ret; 
0x00000000172246: nop [rax+rax]; mov [rcx], edx; mov [rcx+0x4], dx; ret; 
0x00000000172227: nop [rax+rax]; mov [rcx], edx; ret; 
0x00000000172228: nop [rax+rax]; mov [rcx], edx; ret; 
0x000000001722b7: nop [rax+rax]; mov [rcx], rdx; mov [rcx+0x5], rdx; ret; 
0x000000001722b8: nop [rax+rax]; mov [rcx], rdx; mov [rcx+0x5], rdx; ret; 
0x000000001722c8: nop [rax+rax]; mov [rcx], rdx; mov [rcx+0x6], rdx; ret; 
0x00000000172298: nop [rax+rax]; mov [rcx], rdx; mov [rcx+0x7], edx; ret; 
0x000000001722d8: nop [rax+rax]; mov [rcx], rdx; mov [rcx+0x7], rdx; ret; 
0x00000000172287: nop [rax+rax]; mov [rcx], rdx; mov [rcx+0x8], dx; ret; 
0x00000000172288: nop [rax+rax]; mov [rcx], rdx; mov [rcx+0x8], dx; ret; 
0x000000001722a7: nop [rax+rax]; mov [rcx], rdx; mov [rcx+0x8], edx; ret; 
0x000000001722a8: nop [rax+rax]; mov [rcx], rdx; mov [rcx+0x8], edx; ret; 
0x000000001722e8: nop [rax+rax]; mov [rcx], rdx; mov [rcx+0x8], rdx; ret; 
0x00000000172268: nop [rax+rax]; mov [rcx], rdx; ret; 
0x00000000172266: nop [rax+rax]; mov [rcx], rdx; ret; 
0x00000000172267: nop [rax+rax]; mov [rcx], rdx; ret; 
0x000000000b4198: nop [rax+rax]; mov [rdi-0x1], rdx; ret; 
0x000000000b4197: nop [rax+rax]; mov [rdi-0x1], rdx; ret; 
0x000000000b4788: nop [rax+rax]; mov [rdi], dh; lea rax, [rdi]; ret; 
0x000000000b4787: nop [rax+rax]; mov [rdi], dh; lea rax, [rdi]; ret; 
0x000000000b3147: nop [rax+rax]; mov [rdi], dh; ret; 
0x000000000b3148: nop [rax+rax]; mov [rdi], dh; ret; 
0x00000000184127: nop [rax+rax]; mov [rdi], dx; mov [rdi+r8-0x2], dx; vzeroupper; ret; 
0x00000000184128: nop [rax+rax]; mov [rdi], dx; mov [rdi+r8-0x2], dx; vzeroupper; ret; 
0x00000000184117: nop [rax+rax]; mov [rdi], dx; vzeroupper; ret; 
0x00000000184116: nop [rax+rax]; mov [rdi], dx; vzeroupper; ret; 
0x00000000184118: nop [rax+rax]; mov [rdi], dx; vzeroupper; ret; 
0x000000000a4e78: nop [rax+rax]; mov [rdi], ecx; lea rax, [rdi+rax-0x1]; ret; 
0x000000000a4e76: nop [rax+rax]; mov [rdi], ecx; lea rax, [rdi+rax-0x1]; ret; 
0x000000000a4e77: nop [rax+rax]; mov [rdi], ecx; lea rax, [rdi+rax-0x1]; ret; 
0x000000000b4186: nop [rax+rax]; mov [rdi], edx; mov [rdi+0x4], dx; ret; 
0x000000000b4188: nop [rax+rax]; mov [rdi], edx; mov [rdi+0x4], dx; ret; 
0x000000000b4187: nop [rax+rax]; mov [rdi], edx; mov [rdi+0x4], dx; ret; 
0x000000000b41f8: nop [rax+rax]; mov [rdi], rdx; mov [rdi+0x5], rdx; ret; 
0x000000000b41f7: nop [rax+rax]; mov [rdi], rdx; mov [rdi+0x5], rdx; ret; 
0x000000000b4208: nop [rax+rax]; mov [rdi], rdx; mov [rdi+0x6], rdx; ret; 
0x000000000b41d8: nop [rax+rax]; mov [rdi], rdx; mov [rdi+0x7], edx; ret; 
0x000000000b41c7: nop [rax+rax]; mov [rdi], rdx; mov [rdi+0x8], dx; ret; 
0x000000000b41c8: nop [rax+rax]; mov [rdi], rdx; mov [rdi+0x8], dx; ret; 
0x000000000b41e8: nop [rax+rax]; mov [rdi], rdx; mov [rdi+0x8], edx; ret; 
0x000000000b41e7: nop [rax+rax]; mov [rdi], rdx; mov [rdi+0x8], edx; ret; 
0x0000000018414b: nop [rax+rax]; mov [rdi], rdx; mov [rdi+r8-0x8], rdx; vzeroupper; ret; 
0x000000000b41a8: nop [rax+rax]; mov [rdi], rdx; ret; 
0x000000000b41a5: nop [rax+rax]; mov [rdi], rdx; ret; 
0x000000000b41a7: nop [rax+rax]; mov [rdi], rdx; ret; 
0x000000000a4cb7: nop [rax+rax]; mov [rdi], si; add rax, rdi; ret; 
0x000000000a4cb8: nop [rax+rax]; mov [rdi], si; add rax, rdi; ret; 
0x00000000094c7b: nop [rax+rax]; mov [rsp+0x20], r8; mov [rsp+0x18], rsi; mov [rsp+0x10], r11; call rax; 
0x00000000174568: nop [rax+rax]; mov ax, [rcx]; mov [rdx], ax; lea rax, [rdx+0x1]; ret; 
0x00000000170238: nop [rax+rax]; mov ax, [rcx]; mov [rdx], ax; mov rax, rdi; ret; 
0x000000000e7e18: nop [rax+rax]; mov byte ptr [rdi+0x8], 0x1a; mov eax, 0x2; ret; 
0x000000000e7e17: nop [rax+rax]; mov byte ptr [rdi+0x8], 0x1a; mov eax, 0x2; ret; 
0x000000000e7e16: nop [rax+rax]; mov byte ptr [rdi+0x8], 0x1a; mov eax, 0x2; ret; 
0x000000000e7e2b: nop [rax+rax]; mov byte ptr [rdi+0x8], 0x1c; mov eax, 0x2; ret; 
0x000000000e7e2a: nop [rax+rax]; mov byte ptr [rdi+0x8], 0x1c; mov eax, 0x2; ret; 
0x000000000b3167: nop [rax+rax]; mov cx, [rsi]; mov [rdi], cx; mov [rdi+0x2], dh; ret; 
0x000000000b3168: nop [rax+rax]; mov cx, [rsi]; mov [rdi], cx; mov [rdi+0x2], dh; ret; 
0x00000000146f3b: nop [rax+rax]; mov dword ptr [r8+0x4], 0x1; mov eax, 0x1; ret; 
0x00000000149cdb: nop [rax+rax]; mov dword ptr [rdi+0x4], 0x1; mov eax, 0x1; ret; 
0x00000000142f78: nop [rax+rax]; mov dword ptr [rsi], 0x8; ret; 
0x00000000142f77: nop [rax+rax]; mov dword ptr [rsi], 0x8; ret; 
0x00000000142f67: nop [rax+rax]; mov dword ptr [rsi], 0xa; ret; 
0x00000000142f68: nop [rax+rax]; mov dword ptr [rsi], 0xa; ret; 
0x00000000142f57: nop [rax+rax]; mov dword ptr [rsi], 0xb; ret; 
0x00000000142f58: nop [rax+rax]; mov dword ptr [rsi], 0xb; ret; 
0x0000000007be23: nop [rax+rax]; mov dword ptr [rsp+0x50], 0x1; mov rbx, rsi; jmp rcx; 
0x0000000007be22: nop [rax+rax]; mov dword ptr [rsp+0x50], 0x1; mov rbx, rsi; jmp rcx; 
0x00000000076343: nop [rax+rax]; mov dword ptr [rsp+0x68], 0x1; mov rbx, rdi; jmp rsi; 
0x000000000b4798: nop [rax+rax]; mov dx, [rsi]; mov [rdi], dx; lea rax, [rdi+0x1]; ret; 
0x000000000b4796: nop [rax+rax]; mov dx, [rsi]; mov [rdi], dx; lea rax, [rdi+0x1]; ret; 
0x000000000b4797: nop [rax+rax]; mov dx, [rsi]; mov [rdi], dx; lea rax, [rdi+0x1]; ret; 
0x000000000b3e45: nop [rax+rax]; mov dx, [rsi]; mov [rdi], dx; ret; 
0x000000000b3e48: nop [rax+rax]; mov dx, [rsi]; mov [rdi], dx; ret; 
0x000000000b3e47: nop [rax+rax]; mov dx, [rsi]; mov [rdi], dx; ret; 
0x00000000108877: nop [rax+rax]; mov eax, 0x10c; syscall; 
0x00000000108878: nop [rax+rax]; mov eax, 0x10c; syscall; 
0x0000000018c67b: nop [rax+rax]; mov eax, 0x1; jg short 0x000000000018c690; neg eax; ret; 
0x000000000e1553: nop [rax+rax]; mov eax, 0x1; ret; 
0x0000000009b8c8: nop [rax+rax]; mov eax, 0x1; ret; 
0x0000000009b8c7: nop [rax+rax]; mov eax, 0x1; ret; 
0x0000000009b8c6: nop [rax+rax]; mov eax, 0x1; ret; 
0x000000000fa21a: nop [rax+rax]; mov eax, 0x2; ret; 
0x000000000fa21b: nop [rax+rax]; mov eax, 0x2; ret; 
0x000000000edec7: nop [rax+rax]; mov eax, 0xc; ret; 
0x000000000edec8: nop [rax+rax]; mov eax, 0xc; ret; 
0x00000000060fb3: nop [rax+rax]; mov eax, 0xffffffff; pop rbp; ret; 
0x00000000060fb2: nop [rax+rax]; mov eax, 0xffffffff; pop rbp; ret; 
0x00000000137126: nop [rax+rax]; mov eax, 0xffffffff; pop rbx; ret; 
0x00000000137127: nop [rax+rax]; mov eax, 0xffffffff; pop rbx; ret; 
0x00000000137128: nop [rax+rax]; mov eax, 0xffffffff; pop rbx; ret; 
0x000000000425f7: nop [rax+rax]; mov eax, 0xffffffff; ret; 
0x00000000084887: nop [rax+rax]; mov eax, 0xffffffff; ret; 
0x000000000425f8: nop [rax+rax]; mov eax, 0xffffffff; ret; 
0x00000000084886: nop [rax+rax]; mov eax, 0xffffffff; ret; 
0x00000000084dc3: nop [rax+rax]; mov eax, 0xffffffff; ret; 
0x00000000177948: nop [rax+rax]; mov eax, [rcx]; mov [rdx], eax; mov rax, rdi; ret; 
0x00000000177947: nop [rax+rax]; mov eax, [rcx]; mov [rdx], eax; mov rax, rdi; ret; 
0x000000000cafa8: nop [rax+rax]; mov eax, [rdi+0x14]; cmp eax, [rsi+0x14]; jne 0x00000000000cb090; ret; 
0x000000000cb008: nop [rax+rax]; mov eax, [rdi+0x24]; cmp eax, [rsi+0x24]; jne short 0x00000000000cb090; ret; 
0x000000000caf48: nop [rax+rax]; mov eax, [rdi+0x4]; cmp eax, [rsi+0x4]; jne 0x00000000000cb090; ret; 
0x000000000caf47: nop [rax+rax]; mov eax, [rdi+0x4]; cmp eax, [rsi+0x4]; jne 0x00000000000cb090; ret; 
0x000000000caf46: nop [rax+rax]; mov eax, [rdi+0x4]; cmp eax, [rsi+0x4]; jne 0x00000000000cb090; ret; 
0x0000000002bb83: nop [rax+rax]; mov eax, [rip+0x1b9b0e]; test eax, eax; je short 0x000000000002bb98; ret; 
0x0000000002bb82: nop [rax+rax]; mov eax, [rip+0x1b9b0e]; test eax, eax; je short 0x000000000002bb98; ret; 
0x0000000013bae2: nop [rax+rax]; mov eax, [rip+0xace5e]; test eax, eax; je short 0x000000000013baf8; ret; 
0x0000000013bae3: nop [rax+rax]; mov eax, [rip+0xace5e]; test eax, eax; je short 0x000000000013baf8; ret; 
0x000000001297e3: nop [rax+rax]; mov eax, edi; and eax, 0xffffff; ret; 
0x000000000deb38: nop [rax+rax]; mov eax, edx; syscall; 
0x000000000deb37: nop [rax+rax]; mov eax, edx; syscall; 
0x0000000011f6cb: nop [rax+rax]; mov eax, r8d; ret; 
0x0000000011f6ca: nop [rax+rax]; mov eax, r8d; ret; 
0x000000000b3188: nop [rax+rax]; mov ecx, [rsi]; mov [rdi+0x4], dh; mov [rdi], ecx; ret; 
0x000000000b3187: nop [rax+rax]; mov ecx, [rsi]; mov [rdi+0x4], dh; mov [rdi], ecx; ret; 
0x000000000b3185: nop [rax+rax]; mov ecx, [rsi]; mov [rdi+0x4], dh; mov [rdi], ecx; ret; 
0x000000001354e8: nop [rax+rax]; mov edi, [rbx]; mov eax, 0x3; syscall; 
0x000000001354e6: nop [rax+rax]; mov edi, [rbx]; mov eax, 0x3; syscall; 
0x000000001354e7: nop [rax+rax]; mov edi, [rbx]; mov eax, 0x3; syscall; 
0x00000000082713: nop [rax+rax]; mov edx, 0x10; mov rsi, r13; mov rdi, r15; call qword ptr [r14+0x38]; 
0x0000000011b757: nop [rax+rax]; mov edx, 0x40; mov eax, 0x14; syscall; 
0x0000000011b758: nop [rax+rax]; mov edx, 0x40; mov eax, 0x14; syscall; 
0x0000000011b756: nop [rax+rax]; mov edx, 0x40; mov eax, 0x14; syscall; 
0x000000000b317a: nop [rax+rax]; mov edx, [rsi]; mov [rdi], edx; ret; 
0x000000000b317b: nop [rax+rax]; mov edx, [rsi]; mov [rdi], edx; ret; 
0x0000000010df0b: nop [rax+rax]; mov qword ptr [rdi], 0x0; ret; 
0x0000000010df0a: nop [rax+rax]; mov qword ptr [rdi], 0x0; ret; 
0x00000000090e83: nop [rax+rax]; mov qword ptr [rsi], 0x0; mov eax, 0xffffffff; ret; 
0x0000000015a4eb: nop [rax+rax]; mov qword ptr fs:[r12], 0x0; mov rax, [rsp+0x10]; mov rdi, [rsp+0x18]; call rax; 
0x00000000139f1a: nop [rax+rax]; mov r8, r10; mov rax, r10; mov byte ptr [r8], 0x0; ret; 
0x00000000139f1b: nop [rax+rax]; mov r8, r10; mov rax, r10; mov byte ptr [r8], 0x0; ret; 
0x000000000895c8: nop [rax+rax]; mov r8d, 0x1; mov eax, r8d; ret; 
0x00000000150e6b: nop [rax+rax]; mov r8d, 0x1; mov eax, r8d; ret; 
0x000000000895c7: nop [rax+rax]; mov r8d, 0x1; mov eax, r8d; ret; 
0x000000000895c6: nop [rax+rax]; mov r8d, 0x1; mov eax, r8d; ret; 
0x000000000cbb28: nop [rax+rax]; mov rax, 0x2; ret; 
0x000000000cbb38: nop [rax+rax]; mov rax, 0x3; ret; 
0x000000000cbb48: nop [rax+rax]; mov rax, 0x4; ret; 
0x000000000cbb58: nop [rax+rax]; mov rax, 0x5; ret; 
0x000000000cbb68: nop [rax+rax]; mov rax, 0x6; ret; 
0x000000000cbb78: nop [rax+rax]; mov rax, 0x7; ret; 
0x0000000004089b: nop [rax+rax]; mov rax, 0x8000000000000000; and rdx, rax; mov [rdi], rdx; ret; 
0x00000000148767: nop [rax+rax]; mov rax, [rbp+0x8]; lea rsi, [rbx+0x18]; mov rdi, rbp; call qword ptr [rax+0x48]; 
0x00000000148768: nop [rax+rax]; mov rax, [rbp+0x8]; lea rsi, [rbx+0x18]; mov rdi, rbp; call qword ptr [rax+0x48]; 
0x00000000148766: nop [rax+rax]; mov rax, [rbp+0x8]; lea rsi, [rbx+0x18]; mov rdi, rbp; call qword ptr [rax+0x48]; 
0x00000000177958: nop [rax+rax]; mov rax, [rcx]; mov [rdx], rax; mov rax, rdi; ret; 
0x000000000896b3: nop [rax+rax]; mov rax, [rdi+0x28]; sub rax, [rdi+0x20]; ret; 
0x000000000896b2: nop [rax+rax]; mov rax, [rdi+0x28]; sub rax, [rdi+0x20]; ret; 
0x00000000089583: nop [rax+rax]; mov rax, [rdi+0x40]; sub rax, [rdi+0x38]; ret; 
0x00000000089582: nop [rax+rax]; mov rax, [rdi+0x40]; sub rax, [rdi+0x38]; ret; 
0x0000000014f82b: nop [rax+rax]; mov rax, [rdi+0x8]; call qword ptr [rax+0x18]; 
0x0000000014f82a: nop [rax+rax]; mov rax, [rdi+0x8]; call qword ptr [rax+0x18]; 
0x00000000150e7a: nop [rax+rax]; mov rax, [rdi+0x8]; jmp qword ptr [rax+0x40]; 
0x00000000150e7b: nop [rax+rax]; mov rax, [rdi+0x8]; jmp qword ptr [rax+0x40]; 
0x00000000150e88: nop [rax+rax]; mov rax, [rdi+0x8]; jmp qword ptr [rax+0x48]; 
0x00000000150e86: nop [rax+rax]; mov rax, [rdi+0x8]; jmp qword ptr [rax+0x48]; 
0x0000000014fa4b: nop [rax+rax]; mov rax, [rdi+0x8]; jmp qword ptr [rax+0x8]; 
0x000000001503a3: nop [rax+rax]; mov rax, [rdi+0x8]; lea rsi, [rsp+0x10]; call qword ptr [rax]; 
0x00000000143dd7: nop [rax+rax]; mov rax, [rdi+0x8]; mov r12, rsp; lea rsi, [rsp+0x8]; call qword ptr [rax]; 
0x00000000143dd8: nop [rax+rax]; mov rax, [rdi+0x8]; mov r12, rsp; lea rsi, [rsp+0x8]; call qword ptr [rax]; 
0x00000000143dd6: nop [rax+rax]; mov rax, [rdi+0x8]; mov r12, rsp; lea rsi, [rsp+0x8]; call qword ptr [rax]; 
0x00000000150ae3: nop [rax+rax]; mov rax, [rdi+0x8]; mov rsi, rsp; call qword ptr [rax+0x40]; 
0x00000000150ae2: nop [rax+rax]; mov rax, [rdi+0x8]; mov rsi, rsp; call qword ptr [rax+0x40]; 
0x0000000015072b: nop [rax+rax]; mov rax, [rdi+0x8]; mov rsi, rsp; call qword ptr [rax]; 
0x000000000d8f92: nop [rax+rax]; mov rax, [rip+0x109ea9]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000d8f93: nop [rax+rax]; mov rax, [rip+0x109ea9]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000009b678: nop [rax+rax]; mov rax, [rip+0x1478a9]; call qword ptr [rax]; 
0x0000000009b677: nop [rax+rax]; mov rax, [rip+0x1478a9]; call qword ptr [rax]; 
0x00000000094c4b: nop [rax+rax]; mov rax, [rip+0x14e139]; xor edi, edi; call qword ptr [rax]; 
0x00000000094c4a: nop [rax+rax]; mov rax, [rip+0x14e139]; xor edi, edi; call qword ptr [rax]; 
0x000000000464d7: nop [rax+rax]; mov rax, [rip+0x19c961]; mov dword ptr fs:[rax], 0x5; mov eax, 0xffffffff; ret; 
0x000000000464d6: nop [rax+rax]; mov rax, [rip+0x19c961]; mov dword ptr fs:[rax], 0x5; mov eax, 0xffffffff; ret; 
0x000000000464d8: nop [rax+rax]; mov rax, [rip+0x19c961]; mov dword ptr fs:[rax], 0x5; mov eax, 0xffffffff; ret; 
0x00000000042513: nop [rax+rax]; mov rax, [rip+0x1a0929]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000423f3: nop [rax+rax]; mov rax, [rip+0x1a0a49]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000042358: nop [rax+rax]; mov rax, [rip+0x1a0ae1]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000042357: nop [rax+rax]; mov rax, [rip+0x1a0ae1]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000003fb17: nop [rax+rax]; mov rax, [rip+0x1a3321]; mov dword ptr fs:[rax], 0x2a; mov rax, r10; ret; 
0x0000000003fb16: nop [rax+rax]; mov rax, [rip+0x1a3321]; mov dword ptr fs:[rax], 0x2a; mov rax, r10; ret; 
0x0000000003fb18: nop [rax+rax]; mov rax, [rip+0x1a3321]; mov dword ptr fs:[rax], 0x2a; mov rax, r10; ret; 
0x00000000029312: nop [rax+rax]; mov rax, [rip+0x1b9b29]; mov dword ptr fs:[rax], 0x9; mov eax, 0xffffffff; ret; 
0x00000000029313: nop [rax+rax]; mov rax, [rip+0x1b9b29]; mov dword ptr fs:[rax], 0x9; mov eax, 0xffffffff; ret; 
0x00000000159a33: nop [rax+rax]; mov rax, [rip+0x8f889]; call qword ptr [rax+0x8]; 
0x0000000015993b: nop [rax+rax]; mov rax, [rip+0x8f981]; call qword ptr [rax]; 
0x0000000014cfc7: nop [rax+rax]; mov rax, [rip+0x95e11]; pop rbx; ret; 
0x0000000014cfc6: nop [rax+rax]; mov rax, [rip+0x95e11]; pop rbx; ret; 
0x0000000014cfc8: nop [rax+rax]; mov rax, [rip+0x95e11]; pop rbx; ret; 
0x00000000141238: nop [rax+rax]; mov rax, [rip+0xa1c01]; mov dword ptr fs:[rax], 0x16; mov eax, 0x16; ret; 
0x000000001199d7: nop [rax+rax]; mov rax, [rip+0xc9461]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000001199d8: nop [rax+rax]; mov rax, [rip+0xc9461]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000119998: nop [rax+rax]; mov rax, [rip+0xc94a1]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000119996: nop [rax+rax]; mov rax, [rip+0xc94a1]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000119997: nop [rax+rax]; mov rax, [rip+0xc94a1]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000116552: nop [rax+rax]; mov rax, [rip+0xcc8e9]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000116553: nop [rax+rax]; mov rax, [rip+0xcc8e9]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010d5f2: nop [rax+rax]; mov rax, [rip+0xd5849]; mov dword ptr fs:[rax], 0x16; xor eax, eax; ret; 
0x0000000010d5f3: nop [rax+rax]; mov rax, [rip+0xd5849]; mov dword ptr fs:[rax], 0x16; xor eax, eax; ret; 
0x00000000108572: nop [rax+rax]; mov rax, [rip+0xda8c9]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000108573: nop [rax+rax]; mov rax, [rip+0xda8c9]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000108513: nop [rax+rax]; mov rax, [rip+0xda929]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000108512: nop [rax+rax]; mov rax, [rip+0xda929]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000001084b3: nop [rax+rax]; mov rax, [rip+0xda989]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000001084b2: nop [rax+rax]; mov rax, [rip+0xda989]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010812b: nop [rax+rax]; mov rax, [rip+0xdad11]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010812a: nop [rax+rax]; mov rax, [rip+0xdad11]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000001080ca: nop [rax+rax]; mov rax, [rip+0xdad71]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000001080cb: nop [rax+rax]; mov rax, [rip+0xdad71]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010806b: nop [rax+rax]; mov rax, [rip+0xdadd1]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010806a: nop [rax+rax]; mov rax, [rip+0xdadd1]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000037388: nop [rax+rax]; mov rax, [rsi+rax*8+0x80]; ret; 
0x000000001289f7: nop [rax+rax]; mov rax, r8; ret; 
0x000000001278bb: nop [rax+rax]; mov rax, r8; ret; 
0x000000001289f8: nop [rax+rax]; mov rax, r8; ret; 
0x00000000186f1b: nop [rax+rax]; mov rax, r8; shr rax, 0x2; vzeroupper; ret; 
0x00000000182577: nop [rax+rax]; mov rax, r8; vzeroupper; ret; 
0x00000000182578: nop [rax+rax]; mov rax, r8; vzeroupper; ret; 
0x000000000b55b5: nop [rax+rax]; mov rax, rdi; ret; 
0x000000000b55b8: nop [rax+rax]; mov rax, rdi; ret; 
0x000000000b441b: nop [rax+rax]; mov rax, rdi; ret; 
0x000000000b55b7: nop [rax+rax]; mov rax, rdi; ret; 
0x000000001850c7: nop [rax+rax]; mov rax, rdi; vzeroupper; ret; 
0x000000001850c8: nop [rax+rax]; mov rax, rdi; vzeroupper; ret; 
0x00000000074be3: nop [rax+rax]; mov rbx, rcx; mov r13d, 0x1; xor ecx, ecx; jmp rsi; 
0x00000000074be2: nop [rax+rax]; mov rbx, rcx; mov r13d, 0x1; xor ecx, ecx; jmp rsi; 
0x0000000007a6da: nop [rax+rax]; mov rbx, rdx; mov r9d, 0x1; xor edx, edx; jmp rcx; 
0x0000000007a6db: nop [rax+rax]; mov rbx, rdx; mov r9d, 0x1; xor edx, edx; jmp rcx; 
0x0000000007bf58: nop [rax+rax]; mov rbx, rsi; jmp rcx; 
0x000000000b31c8: nop [rax+rax]; mov rcx, [rsi]; mov [rdi+0x8], dh; mov [rdi], rcx; ret; 
0x000000000b31c7: nop [rax+rax]; mov rcx, [rsi]; mov [rdi+0x8], dh; mov [rdi], rcx; ret; 
0x00000000093878: nop [rax+rax]; mov rdi, r12; neg rdi; call qword ptr [r13]; 
0x00000000093877: nop [rax+rax]; mov rdi, r12; neg rdi; call qword ptr [r13]; 
0x0000000009b837: nop [rax+rax]; mov rdi, rbp; call rax; 
0x0000000009b838: nop [rax+rax]; mov rdi, rbp; call rax; 
0x0000000014b758: nop [rax+rax]; mov rdx, [rdi+0x8]; mov [rsp], rax; call qword ptr [rdx+0x20]; 
0x000000000b31bb: nop [rax+rax]; mov rdx, [rsi]; mov [rdi], rdx; ret; 
0x000000000a4d73: nop [rax+rax]; mov rdx, [rsp+0x10]; mov [rax], rdx; ret; 
0x00000000071f28: nop [rax+rax]; mov rdx, r14; mov rsi, r12; mov rdi, rbp; call qword ptr [rax+0x38]; 
0x00000000098dd8: nop [rax+rax]; mov rsi, [rsp+0x28]; mov rdi, r12; call rdx; 
0x00000000098dd7: nop [rax+rax]; mov rsi, [rsp+0x28]; mov rdi, r12; call rdx; 
0x00000000099a17: nop [rax+rax]; mov rsi, r12; call rax; 
0x00000000099a18: nop [rax+rax]; mov rsi, r12; call rax; 
0x000000000b4218: nop [rax+rax]; movdqu [rdi-0x1], xmm0; ret; 
0x000000000b4228: nop [rax+rax]; movdqu [rdi], xmm0; ret; 
0x000000000b4227: nop [rax+rax]; movdqu [rdi], xmm0; ret; 
0x000000000b4226: nop [rax+rax]; movdqu [rdi], xmm0; ret; 
0x00000000142f38: nop [rax+rax]; movdqu xmm0, [rdi+0x38]; mov dword ptr [rsi], 0x9; movups [rsi+0x8], xmm0; ret; 
0x00000000146ea3: nop [rax+rax]; movdqu xmm0, [rdx]; mov eax, esi; movups [r8+0x8], xmm0; ret; 
0x00000000149ca3: nop [rax+rax]; movdqu xmm1, [rdi+0x8]; mov eax, 0x1; movups [r8], xmm1; ret; 
0x00000000149cb8: nop [rax+rax]; movdqu xmm2, [rdi+0x1c]; mov eax, 0x1; movups [r8], xmm2; ret; 
0x00000000149cb7: nop [rax+rax]; movdqu xmm2, [rdi+0x1c]; mov eax, 0x1; movups [r8], xmm2; ret; 
0x0000000014a598: nop [rax+rax]; movdqu xmm4, [rdi+0x8]; mov eax, 0x1; movups [r8], xmm4; ret; 
0x0000000014a597: nop [rax+rax]; movdqu xmm4, [rdi+0x8]; mov eax, 0x1; movups [r8], xmm4; ret; 
0x00000000137183: nop [rax+rax]; movsxd rdx, edx; mov eax, r8d; mov byte ptr [rdi+rdx], 0x0; ret; 
0x0000000018bb8b: nop [rax+rax]; movzx eax, byte ptr [rdi-0xa]; movzx edx, byte ptr [rsi-0xa]; sub eax, edx; ret; 
0x0000000018bb7b: nop [rax+rax]; movzx eax, byte ptr [rdi-0xb]; movzx edx, byte ptr [rsi-0xb]; sub eax, edx; ret; 
0x0000000018bb6b: nop [rax+rax]; movzx eax, byte ptr [rdi-0xc]; movzx edx, byte ptr [rsi-0xc]; sub eax, edx; ret; 
0x0000000018bb5b: nop [rax+rax]; movzx eax, byte ptr [rdi-0xd]; movzx edx, byte ptr [rsi-0xd]; sub eax, edx; ret; 
0x0000000018bb4b: nop [rax+rax]; movzx eax, byte ptr [rdi-0xe]; movzx edx, byte ptr [rsi-0xe]; sub eax, edx; ret; 
0x0000000018bb3b: nop [rax+rax]; movzx eax, byte ptr [rdi-0xf]; movzx edx, byte ptr [rsi-0xf]; sub eax, edx; ret; 
0x0000000017e8eb: nop [rax+rax]; movzx eax, byte ptr [rdi]; movzx ecx, byte ptr [rsi]; sub eax, ecx; ret; 
0x000000000a8198: nop [rax+rax]; movzx ecx, byte ptr [rsi]; movzx eax, byte ptr [rdi]; sub eax, ecx; ret; 
0x000000000a8197: nop [rax+rax]; movzx ecx, byte ptr [rsi]; movzx eax, byte ptr [rdi]; sub eax, ecx; ret; 
0x0000000018402a: nop [rax+rax]; movzx edx, byte ptr [rsi]; mov [rdi], dl; vzeroupper; ret; 
0x0000000018402b: nop [rax+rax]; movzx edx, byte ptr [rsi]; mov [rdi], dl; vzeroupper; ret; 
0x000000001833d7: nop [rax+rax]; movzx edx, word ptr [rsi]; mov [rdi], dx; vzeroupper; ret; 
0x000000001833d8: nop [rax+rax]; movzx edx, word ptr [rsi]; mov [rdi], dx; vzeroupper; ret; 
0x000000001833d6: nop [rax+rax]; movzx edx, word ptr [rsi]; mov [rdi], dx; vzeroupper; ret; 
0x0000000014e653: nop [rax+rax]; nop [rax+rax]; endbr64; mov eax, 0x2; ret; 
0x0000000014e651: nop [rax+rax]; nop [rax+rax]; endbr64; mov eax, 0x2; ret; 
0x0000000014e652: nop [rax+rax]; nop [rax+rax]; endbr64; mov eax, 0x2; ret; 
0x00000000041bb3: nop [rax+rax]; nop [rax+rax]; endbr64; mov eax, 0x3e; syscall; 
0x00000000041bb2: nop [rax+rax]; nop [rax+rax]; endbr64; mov eax, 0x3e; syscall; 
0x00000000041bb1: nop [rax+rax]; nop [rax+rax]; endbr64; mov eax, 0x3e; syscall; 
0x00000000119161: nop [rax+rax]; nop [rax+rax]; endbr64; mov eax, 0xad; syscall; 
0x00000000119162: nop [rax+rax]; nop [rax+rax]; endbr64; mov eax, 0xad; syscall; 
0x00000000119163: nop [rax+rax]; nop [rax+rax]; endbr64; mov eax, 0xad; syscall; 
0x000000000a86a5: nop [rax+rax]; nop [rax]; bsf eax, eax; lea rax, [rax+rdi-0x10]; ret; 
0x000000000a86a2: nop [rax+rax]; nop [rax]; bsf eax, eax; lea rax, [rax+rdi-0x10]; ret; 
0x000000000a86a4: nop [rax+rax]; nop [rax]; bsf eax, eax; lea rax, [rax+rdi-0x10]; ret; 
0x00000000119414: nop [rax+rax]; nop [rax]; endbr64; mov eax, 0x122; syscall; 
0x00000000119413: nop [rax+rax]; nop [rax]; endbr64; mov eax, 0x122; syscall; 
0x00000000119412: nop [rax+rax]; nop [rax]; endbr64; mov eax, 0x122; syscall; 
0x0000000014f8e5: nop [rax+rax]; nop [rax]; endbr64; mov eax, 0x1; ret; 
0x0000000014f8e2: nop [rax+rax]; nop [rax]; endbr64; mov eax, 0x1; ret; 
0x0000000014f8e4: nop [rax+rax]; nop [rax]; endbr64; mov eax, 0x1; ret; 
0x0000000011b262: nop [rax+rax]; nop [rax]; endbr64; mov eax, 0x1e; syscall; 
0x0000000011b263: nop [rax+rax]; nop [rax]; endbr64; mov eax, 0x1e; syscall; 
0x0000000011b264: nop [rax+rax]; nop [rax]; endbr64; mov eax, 0x1e; syscall; 
0x0000000011b302: nop [rax+rax]; nop [rax]; endbr64; mov eax, 0x1f; syscall; 
0x0000000011b304: nop [rax+rax]; nop [rax]; endbr64; mov eax, 0x1f; syscall; 
0x0000000011b303: nop [rax+rax]; nop [rax]; endbr64; mov eax, 0x1f; syscall; 
0x000000000de542: nop [rax+rax]; nop [rax]; endbr64; mov eax, 0x3f; syscall; 
0x000000000de543: nop [rax+rax]; nop [rax]; endbr64; mov eax, 0x3f; syscall; 
0x000000000de544: nop [rax+rax]; nop [rax]; endbr64; mov eax, 0x3f; syscall; 
0x0000000010a853: nop [rax+rax]; nop [rax]; endbr64; mov eax, 0x56; syscall; 
0x0000000010a854: nop [rax+rax]; nop [rax]; endbr64; mov eax, 0x56; syscall; 
0x0000000010a852: nop [rax+rax]; nop [rax]; endbr64; mov eax, 0x56; syscall; 
0x0000000010ed64: nop [rax+rax]; nop [rax]; endbr64; mov eax, 0x62; syscall; 
0x0000000010ed63: nop [rax+rax]; nop [rax]; endbr64; mov eax, 0x62; syscall; 
0x0000000010ed62: nop [rax+rax]; nop [rax]; endbr64; mov eax, 0x62; syscall; 
0x0000000010f174: nop [rax+rax]; nop [rax]; endbr64; mov eax, 0x8d; syscall; 
0x0000000010f172: nop [rax+rax]; nop [rax]; endbr64; mov eax, 0x8d; syscall; 
0x0000000010f173: nop [rax+rax]; nop [rax]; endbr64; mov eax, 0x8d; syscall; 
0x00000000159875: nop [rax+rax]; nop [rax]; endbr64; mov rax, [rip+0x895ad]; jmp qword ptr [rax+0x280]; 
0x00000000159874: nop [rax+rax]; nop [rax]; endbr64; mov rax, [rip+0x895ad]; jmp qword ptr [rax+0x280]; 
0x00000000159872: nop [rax+rax]; nop [rax]; endbr64; mov rax, [rip+0x895ad]; jmp qword ptr [rax+0x280]; 
0x00000000091944: nop [rax+rax]; nop [rax]; endbr64; mov rax, fs:[0x10]; ret; 
0x00000000091943: nop [rax+rax]; nop [rax]; endbr64; mov rax, fs:[0x10]; ret; 
0x00000000091945: nop [rax+rax]; nop [rax]; endbr64; mov rax, fs:[0x10]; ret; 
0x00000000092072: nop [rax+rax]; nop [rax]; endbr64; mov rax, fs:[0x10]; ret; 
0x00000000092074: nop [rax+rax]; nop [rax]; endbr64; mov rax, fs:[0x10]; ret; 
0x00000000092073: nop [rax+rax]; nop [rax]; endbr64; mov rax, fs:[0x10]; ret; 
0x0000000011f322: nop [rax+rax]; nop [rax]; endbr64; ret; 
0x0000000011f323: nop [rax+rax]; nop [rax]; endbr64; ret; 
0x0000000011f324: nop [rax+rax]; nop [rax]; endbr64; ret; 
0x000000001071e3: nop [rax+rax]; nop [rax]; endbr64; xor eax, eax; ret; 
0x00000000126bd4: nop [rax+rax]; nop [rax]; endbr64; xor eax, eax; ret; 
0x00000000126bd2: nop [rax+rax]; nop [rax]; endbr64; xor eax, eax; ret; 
0x000000001071e4: nop [rax+rax]; nop [rax]; endbr64; xor eax, eax; ret; 
0x00000000126bd3: nop [rax+rax]; nop [rax]; endbr64; xor eax, eax; ret; 
0x000000001071e5: nop [rax+rax]; nop [rax]; endbr64; xor eax, eax; ret; 
0x000000001721f4: nop [rax+rax]; nop [rax]; mov [rcx], dl; ret; 
0x000000001721f1: nop [rax+rax]; nop [rax]; mov [rcx], dl; ret; 
0x000000001721f3: nop [rax+rax]; nop [rax]; mov [rcx], dl; ret; 
0x000000000b4133: nop [rax+rax]; nop [rax]; mov [rdi], dl; ret; 
0x000000000b4134: nop [rax+rax]; nop [rax]; mov [rdi], dl; ret; 
0x000000000b4131: nop [rax+rax]; nop [rax]; mov [rdi], dl; ret; 
0x000000000b3e33: nop [rax+rax]; nop [rax]; mov dl, [rsi]; mov [rdi], dl; ret; 
0x000000000b3e31: nop [rax+rax]; nop [rax]; mov dl, [rsi]; mov [rdi], dl; ret; 
0x000000000b3e34: nop [rax+rax]; nop [rax]; mov dl, [rsi]; mov [rdi], dl; ret; 
0x00000000167104: nop [rax+rax]; nop [rax]; mov edx, [rsi-0x4]; mov [rdi-0x4], edx; ret; 
0x00000000167103: nop [rax+rax]; nop [rax]; mov edx, [rsi-0x4]; mov [rdi-0x4], edx; ret; 
0x00000000167101: nop [rax+rax]; nop [rax]; mov edx, [rsi-0x4]; mov [rdi-0x4], edx; ret; 
0x00000000041943: nop [rax+rax]; nop [rax]; mov rax, 0xf; syscall; 
0x00000000041944: nop [rax+rax]; nop [rax]; mov rax, 0xf; syscall; 
0x00000000041941: nop [rax+rax]; nop [rax]; mov rax, 0xf; syscall; 
0x000000000b2aa4: nop [rax+rax]; nop [rax]; mov rax, rdi; ret; 
0x000000000b2aa3: nop [rax+rax]; nop [rax]; mov rax, rdi; ret; 
0x000000000b2aa1: nop [rax+rax]; nop [rax]; mov rax, rdi; ret; 
0x000000001613a1: nop [rax+rax]; nop [rax]; mov rdx, [rsi-0x8]; mov [rdi-0x8], rdx; ret; 
0x000000001613a3: nop [rax+rax]; nop [rax]; mov rdx, [rsi-0x8]; mov [rdi-0x8], rdx; ret; 
0x000000001613a4: nop [rax+rax]; nop [rax]; mov rdx, [rsi-0x8]; mov [rdi-0x8], rdx; ret; 
0x00000000167291: nop [rax+rax]; nop [rax]; movzx edx, byte ptr [rsi-0x1]; mov [rdi-0x1], dl; ret; 
0x00000000167294: nop [rax+rax]; nop [rax]; movzx edx, byte ptr [rsi-0x1]; mov [rdi-0x1], dl; ret; 
0x00000000167293: nop [rax+rax]; nop [rax]; movzx edx, byte ptr [rsi-0x1]; mov [rdi-0x1], dl; ret; 
0x00000000167213: nop [rax+rax]; nop [rax]; movzx edx, word ptr [rsi-0x2]; mov [rdi-0x2], dx; ret; 
0x00000000167211: nop [rax+rax]; nop [rax]; movzx edx, word ptr [rsi-0x2]; mov [rdi-0x2], dx; ret; 
0x00000000167214: nop [rax+rax]; nop [rax]; movzx edx, word ptr [rsi-0x2]; mov [rdi-0x2], dx; ret; 
0x000000000b3e24: nop [rax+rax]; nop [rax]; ret; 
0x000000000b3e23: nop [rax+rax]; nop [rax]; ret; 
0x000000000b3e21: nop [rax+rax]; nop [rax]; ret; 
0x000000000a89d2: nop [rax+rax]; nop [rax]; xor eax, eax; ret; 
0x0000000018c693: nop [rax+rax]; nop [rax]; xor eax, eax; ret; 
0x0000000018c694: nop [rax+rax]; nop [rax]; xor eax, eax; ret; 
0x000000000a89d5: nop [rax+rax]; nop [rax]; xor eax, eax; ret; 
0x000000000a89d4: nop [rax+rax]; nop [rax]; xor eax, eax; ret; 
0x0000000018c691: nop [rax+rax]; nop [rax]; xor eax, eax; ret; 
0x000000001865d4: nop [rax+rax]; nop [rax]; xor eax, eax; vzeroupper; ret; 
0x00000000182154: nop [rax+rax]; nop [rax]; xor eax, eax; vzeroupper; ret; 
0x00000000182155: nop [rax+rax]; nop [rax]; xor eax, eax; vzeroupper; ret; 
0x000000001865d3: nop [rax+rax]; nop [rax]; xor eax, eax; vzeroupper; ret; 
0x000000001865d1: nop [rax+rax]; nop [rax]; xor eax, eax; vzeroupper; ret; 
0x00000000182152: nop [rax+rax]; nop [rax]; xor eax, eax; vzeroupper; ret; 
0x00000000108945: nop [rax+rax]; nop; endbr64; mov eax, 0x102; syscall; 
0x00000000108947: nop [rax+rax]; nop; endbr64; mov eax, 0x102; syscall; 
0x00000000108946: nop [rax+rax]; nop; endbr64; mov eax, 0x102; syscall; 
0x0000000010a9a6: nop [rax+rax]; nop; endbr64; mov eax, 0x107; syscall; 
0x0000000010a9a5: nop [rax+rax]; nop; endbr64; mov eax, 0x107; syscall; 
0x0000000010a9a7: nop [rax+rax]; nop; endbr64; mov eax, 0x107; syscall; 
0x0000000010a8e5: nop [rax+rax]; nop; endbr64; mov eax, 0x10a; syscall; 
0x0000000010a8e6: nop [rax+rax]; nop; endbr64; mov eax, 0x10a; syscall; 
0x0000000010a8e7: nop [rax+rax]; nop; endbr64; mov eax, 0x10a; syscall; 
0x0000000011a037: nop [rax+rax]; nop; endbr64; mov eax, 0x110; syscall; 
0x0000000011a036: nop [rax+rax]; nop; endbr64; mov eax, 0x110; syscall; 
0x0000000011a035: nop [rax+rax]; nop; endbr64; mov eax, 0x110; syscall; 
0x0000000011a097: nop [rax+rax]; nop; endbr64; mov eax, 0x11b; syscall; 
0x0000000011a096: nop [rax+rax]; nop; endbr64; mov eax, 0x11b; syscall; 
0x0000000011a095: nop [rax+rax]; nop; endbr64; mov eax, 0x11b; syscall; 
0x00000000119d36: nop [rax+rax]; nop; endbr64; mov eax, 0x123; syscall; 
0x00000000119d37: nop [rax+rax]; nop; endbr64; mov eax, 0x123; syscall; 
0x00000000119d35: nop [rax+rax]; nop; endbr64; mov eax, 0x123; syscall; 
0x000000001095c6: nop [rax+rax]; nop; endbr64; mov eax, 0x124; syscall; 
0x000000001095c7: nop [rax+rax]; nop; endbr64; mov eax, 0x124; syscall; 
0x000000001095c5: nop [rax+rax]; nop; endbr64; mov eax, 0x124; syscall; 
0x00000000109625: nop [rax+rax]; nop; endbr64; mov eax, 0x125; syscall; 
0x00000000109626: nop [rax+rax]; nop; endbr64; mov eax, 0x125; syscall; 
0x00000000109627: nop [rax+rax]; nop; endbr64; mov eax, 0x125; syscall; 
0x00000000119e57: nop [rax+rax]; nop; endbr64; mov eax, 0x126; syscall; 
0x00000000119e55: nop [rax+rax]; nop; endbr64; mov eax, 0x126; syscall; 
0x00000000119e56: nop [rax+rax]; nop; endbr64; mov eax, 0x126; syscall; 
0x0000000011a0c5: nop [rax+rax]; nop; endbr64; mov eax, 0x12c; syscall; 
0x0000000011a0c7: nop [rax+rax]; nop; endbr64; mov eax, 0x12c; syscall; 
0x0000000011a0c6: nop [rax+rax]; nop; endbr64; mov eax, 0x12c; syscall; 
0x0000000011a157: nop [rax+rax]; nop; endbr64; mov eax, 0x13f; syscall; 
0x0000000011a155: nop [rax+rax]; nop; endbr64; mov eax, 0x13f; syscall; 
0x0000000011a156: nop [rax+rax]; nop; endbr64; mov eax, 0x13f; syscall; 
0x0000000011a185: nop [rax+rax]; nop; endbr64; mov eax, 0x14a; syscall; 
0x0000000011a186: nop [rax+rax]; nop; endbr64; mov eax, 0x14a; syscall; 
0x0000000011a187: nop [rax+rax]; nop; endbr64; mov eax, 0x14a; syscall; 
0x0000000011a1b5: nop [rax+rax]; nop; endbr64; mov eax, 0x14b; syscall; 
0x0000000011a1b7: nop [rax+rax]; nop; endbr64; mov eax, 0x14b; syscall; 
0x0000000011a1b6: nop [rax+rax]; nop; endbr64; mov eax, 0x14b; syscall; 
0x000000001095f7: nop [rax+rax]; nop; endbr64; mov eax, 0x16; syscall; 
0x000000001095f6: nop [rax+rax]; nop; endbr64; mov eax, 0x16; syscall; 
0x000000001095f5: nop [rax+rax]; nop; endbr64; mov eax, 0x16; syscall; 
0x000000000fd225: nop [rax+rax]; nop; endbr64; mov eax, 0x18; syscall; 
0x000000000fd226: nop [rax+rax]; nop; endbr64; mov eax, 0x18; syscall; 
0x000000000fd227: nop [rax+rax]; nop; endbr64; mov eax, 0x18; syscall; 
0x000000001139d7: nop [rax+rax]; nop; endbr64; mov eax, 0x1b; syscall; 
0x000000001139d6: nop [rax+rax]; nop; endbr64; mov eax, 0x1b; syscall; 
0x000000001139d5: nop [rax+rax]; nop; endbr64; mov eax, 0x1b; syscall; 
0x00000000109597: nop [rax+rax]; nop; endbr64; mov eax, 0x21; syscall; 
0x00000000109596: nop [rax+rax]; nop; endbr64; mov eax, 0x21; syscall; 
0x00000000109595: nop [rax+rax]; nop; endbr64; mov eax, 0x21; syscall; 
0x0000000011a925: nop [rax+rax]; nop; endbr64; mov eax, 0x29; syscall; 
0x0000000011a927: nop [rax+rax]; nop; endbr64; mov eax, 0x29; syscall; 
0x0000000011a926: nop [rax+rax]; nop; endbr64; mov eax, 0x29; syscall; 
0x0000000011a3e7: nop [rax+rax]; nop; endbr64; mov eax, 0x33; syscall; 
0x0000000011a3e6: nop [rax+rax]; nop; endbr64; mov eax, 0x33; syscall; 
0x0000000011a3e5: nop [rax+rax]; nop; endbr64; mov eax, 0x33; syscall; 
0x00000000109716: nop [rax+rax]; nop; endbr64; mov eax, 0x51; syscall; 
0x00000000109715: nop [rax+rax]; nop; endbr64; mov eax, 0x51; syscall; 
0x00000000109717: nop [rax+rax]; nop; endbr64; mov eax, 0x51; syscall; 
0x0000000010a9d7: nop [rax+rax]; nop; endbr64; mov eax, 0x54; syscall; 
0x0000000010a9d5: nop [rax+rax]; nop; endbr64; mov eax, 0x54; syscall; 
0x0000000010a9d6: nop [rax+rax]; nop; endbr64; mov eax, 0x54; syscall; 
0x0000000010a916: nop [rax+rax]; nop; endbr64; mov eax, 0x59; syscall; 
0x0000000010a915: nop [rax+rax]; nop; endbr64; mov eax, 0x59; syscall; 
0x0000000010a917: nop [rax+rax]; nop; endbr64; mov eax, 0x59; syscall; 
0x00000000108715: nop [rax+rax]; nop; endbr64; mov eax, 0x5b; syscall; 
0x00000000108717: nop [rax+rax]; nop; endbr64; mov eax, 0x5b; syscall; 
0x00000000108716: nop [rax+rax]; nop; endbr64; mov eax, 0x5b; syscall; 
0x0000000010a006: nop [rax+rax]; nop; endbr64; mov eax, 0x5c; syscall; 
0x0000000010a007: nop [rax+rax]; nop; endbr64; mov eax, 0x5c; syscall; 
0x0000000010a005: nop [rax+rax]; nop; endbr64; mov eax, 0x5c; syscall; 
0x0000000010a037: nop [rax+rax]; nop; endbr64; mov eax, 0x5d; syscall; 
0x0000000010a036: nop [rax+rax]; nop; endbr64; mov eax, 0x5d; syscall; 
0x0000000010a035: nop [rax+rax]; nop; endbr64; mov eax, 0x5d; syscall; 
0x0000000010a066: nop [rax+rax]; nop; endbr64; mov eax, 0x5e; syscall; 
0x0000000010a067: nop [rax+rax]; nop; endbr64; mov eax, 0x5e; syscall; 
0x0000000010a065: nop [rax+rax]; nop; endbr64; mov eax, 0x5e; syscall; 
0x000000000de577: nop [rax+rax]; nop; endbr64; mov eax, 0x64; syscall; 
0x000000000de576: nop [rax+rax]; nop; endbr64; mov eax, 0x64; syscall; 
0x000000000de575: nop [rax+rax]; nop; endbr64; mov eax, 0x64; syscall; 
0x00000000119eb6: nop [rax+rax]; nop; endbr64; mov eax, 0x67; syscall; 
0x00000000119eb5: nop [rax+rax]; nop; endbr64; mov eax, 0x67; syscall; 
0x00000000119eb7: nop [rax+rax]; nop; endbr64; mov eax, 0x67; syscall; 
0x000000000dfdd6: nop [rax+rax]; nop; endbr64; mov eax, 0x6d; syscall; 
0x000000000dfdd7: nop [rax+rax]; nop; endbr64; mov eax, 0x6d; syscall; 
0x000000000dfdd5: nop [rax+rax]; nop; endbr64; mov eax, 0x6d; syscall; 
0x000000000dfe05: nop [rax+rax]; nop; endbr64; mov eax, 0x6f; syscall; 
0x000000000dfe07: nop [rax+rax]; nop; endbr64; mov eax, 0x6f; syscall; 
0x000000000dfe06: nop [rax+rax]; nop; endbr64; mov eax, 0x6f; syscall; 
0x000000000dfe66: nop [rax+rax]; nop; endbr64; mov eax, 0x70; syscall; 
0x000000000dfe67: nop [rax+rax]; nop; endbr64; mov eax, 0x70; syscall; 
0x000000000dfe65: nop [rax+rax]; nop; endbr64; mov eax, 0x70; syscall; 
0x000000000dfe96: nop [rax+rax]; nop; endbr64; mov eax, 0x76; syscall; 
0x000000000dfe97: nop [rax+rax]; nop; endbr64; mov eax, 0x76; syscall; 
0x000000000dfe95: nop [rax+rax]; nop; endbr64; mov eax, 0x76; syscall; 
0x000000000dfec5: nop [rax+rax]; nop; endbr64; mov eax, 0x78; syscall; 
0x000000000dfec7: nop [rax+rax]; nop; endbr64; mov eax, 0x78; syscall; 
0x000000000dfec6: nop [rax+rax]; nop; endbr64; mov eax, 0x78; syscall; 
0x000000001192d6: nop [rax+rax]; nop; endbr64; mov eax, 0x7b; syscall; 
0x000000001192d5: nop [rax+rax]; nop; endbr64; mov eax, 0x7b; syscall; 
0x000000001192d7: nop [rax+rax]; nop; endbr64; mov eax, 0x7b; syscall; 
0x00000000119c77: nop [rax+rax]; nop; endbr64; mov eax, 0x7e; syscall; 
0x00000000119c76: nop [rax+rax]; nop; endbr64; mov eax, 0x7e; syscall; 
0x00000000119c75: nop [rax+rax]; nop; endbr64; mov eax, 0x7e; syscall; 
0x0000000011a066: nop [rax+rax]; nop; endbr64; mov eax, 0x86; syscall; 
0x0000000011a067: nop [rax+rax]; nop; endbr64; mov eax, 0x86; syscall; 
0x0000000011a065: nop [rax+rax]; nop; endbr64; mov eax, 0x86; syscall; 
0x000000001085b5: nop [rax+rax]; nop; endbr64; mov eax, 0x8a; syscall; 
0x000000001085b6: nop [rax+rax]; nop; endbr64; mov eax, 0x8a; syscall; 
0x000000001085b7: nop [rax+rax]; nop; endbr64; mov eax, 0x8a; syscall; 
0x000000000fd196: nop [rax+rax]; nop; endbr64; mov eax, 0x8f; syscall; 
0x000000000fd197: nop [rax+rax]; nop; endbr64; mov eax, 0x8f; syscall; 
0x000000000fd195: nop [rax+rax]; nop; endbr64; mov eax, 0x8f; syscall; 
0x000000000fd1c7: nop [rax+rax]; nop; endbr64; mov eax, 0x90; syscall; 
0x000000000fd1c6: nop [rax+rax]; nop; endbr64; mov eax, 0x90; syscall; 
0x000000000fd1c5: nop [rax+rax]; nop; endbr64; mov eax, 0x90; syscall; 
0x000000000fd1f6: nop [rax+rax]; nop; endbr64; mov eax, 0x91; syscall; 
0x000000000fd1f5: nop [rax+rax]; nop; endbr64; mov eax, 0x91; syscall; 
0x000000000fd1f7: nop [rax+rax]; nop; endbr64; mov eax, 0x91; syscall; 
0x000000000fd257: nop [rax+rax]; nop; endbr64; mov eax, 0x92; syscall; 
0x000000000fd256: nop [rax+rax]; nop; endbr64; mov eax, 0x92; syscall; 
0x000000000fd255: nop [rax+rax]; nop; endbr64; mov eax, 0x92; syscall; 
0x000000000fd286: nop [rax+rax]; nop; endbr64; mov eax, 0x93; syscall; 
0x000000000fd287: nop [rax+rax]; nop; endbr64; mov eax, 0x93; syscall; 
0x000000000fd285: nop [rax+rax]; nop; endbr64; mov eax, 0x93; syscall; 
0x000000000fd2b5: nop [rax+rax]; nop; endbr64; mov eax, 0x94; syscall; 
0x000000000fd2b6: nop [rax+rax]; nop; endbr64; mov eax, 0x94; syscall; 
0x000000000fd2b7: nop [rax+rax]; nop; endbr64; mov eax, 0x94; syscall; 
0x00000000113a66: nop [rax+rax]; nop; endbr64; mov eax, 0x96; syscall; 
0x00000000113a65: nop [rax+rax]; nop; endbr64; mov eax, 0x96; syscall; 
0x00000000113a67: nop [rax+rax]; nop; endbr64; mov eax, 0x96; syscall; 
0x00000000113a95: nop [rax+rax]; nop; endbr64; mov eax, 0x97; syscall; 
0x00000000113a96: nop [rax+rax]; nop; endbr64; mov eax, 0x97; syscall; 
0x00000000113a97: nop [rax+rax]; nop; endbr64; mov eax, 0x97; syscall; 
0x00000000113ac6: nop [rax+rax]; nop; endbr64; mov eax, 0x98; syscall; 
0x00000000113ac7: nop [rax+rax]; nop; endbr64; mov eax, 0x98; syscall; 
0x00000000113ac5: nop [rax+rax]; nop; endbr64; mov eax, 0x98; syscall; 
0x00000000119bd7: nop [rax+rax]; nop; endbr64; mov eax, 0x9a; syscall; 
0x00000000119bd5: nop [rax+rax]; nop; endbr64; mov eax, 0x9a; syscall; 
0x00000000119bd6: nop [rax+rax]; nop; endbr64; mov eax, 0x9a; syscall; 
0x00000000119f76: nop [rax+rax]; nop; endbr64; mov eax, 0x9b; syscall; 
0x00000000119f75: nop [rax+rax]; nop; endbr64; mov eax, 0x9b; syscall; 
0x00000000119f77: nop [rax+rax]; nop; endbr64; mov eax, 0x9b; syscall; 
0x000000001100c7: nop [rax+rax]; nop; endbr64; mov eax, 0xa1; syscall; 
0x000000001100c6: nop [rax+rax]; nop; endbr64; mov eax, 0xa1; syscall; 
0x000000001100c5: nop [rax+rax]; nop; endbr64; mov eax, 0xa1; syscall; 
0x000000001105b5: nop [rax+rax]; nop; endbr64; mov eax, 0xa7; syscall; 
0x000000001105b6: nop [rax+rax]; nop; endbr64; mov eax, 0xa7; syscall; 
0x000000001105b7: nop [rax+rax]; nop; endbr64; mov eax, 0xa7; syscall; 
0x000000001105e6: nop [rax+rax]; nop; endbr64; mov eax, 0xa8; syscall; 
0x000000001105e5: nop [rax+rax]; nop; endbr64; mov eax, 0xa8; syscall; 
0x000000001105e7: nop [rax+rax]; nop; endbr64; mov eax, 0xa8; syscall; 
0x000000001138d6: nop [rax+rax]; nop; endbr64; mov eax, 0xa; syscall; 
0x000000001138d5: nop [rax+rax]; nop; endbr64; mov eax, 0xa; syscall; 
0x000000001138d7: nop [rax+rax]; nop; endbr64; mov eax, 0xa; syscall; 
0x00000000119197: nop [rax+rax]; nop; endbr64; mov eax, 0xac; syscall; 
0x00000000119195: nop [rax+rax]; nop; endbr64; mov eax, 0xac; syscall; 
0x00000000119196: nop [rax+rax]; nop; endbr64; mov eax, 0xac; syscall; 
0x00000000119ca5: nop [rax+rax]; nop; endbr64; mov eax, 0xae; syscall; 
0x00000000119ca7: nop [rax+rax]; nop; endbr64; mov eax, 0xae; syscall; 
0x00000000119ca6: nop [rax+rax]; nop; endbr64; mov eax, 0xae; syscall; 
0x00000000119cd5: nop [rax+rax]; nop; endbr64; mov eax, 0xb0; syscall; 
0x00000000119cd7: nop [rax+rax]; nop; endbr64; mov eax, 0xb0; syscall; 
0x00000000119cd6: nop [rax+rax]; nop; endbr64; mov eax, 0xb0; syscall; 
0x000000001138a7: nop [rax+rax]; nop; endbr64; mov eax, 0xb; syscall; 
0x000000001138a6: nop [rax+rax]; nop; endbr64; mov eax, 0xb; syscall; 
0x000000001138a5: nop [rax+rax]; nop; endbr64; mov eax, 0xb; syscall; 
0x0000000011a1e6: nop [rax+rax]; nop; endbr64; mov eax, 0xba; syscall; 
0x0000000011a1e5: nop [rax+rax]; nop; endbr64; mov eax, 0xba; syscall; 
0x0000000011a1e7: nop [rax+rax]; nop; endbr64; mov eax, 0xba; syscall; 
0x00000000116f96: nop [rax+rax]; nop; endbr64; mov eax, 0xc6; syscall; 
0x00000000116f95: nop [rax+rax]; nop; endbr64; mov eax, 0xc6; syscall; 
0x00000000116f97: nop [rax+rax]; nop; endbr64; mov eax, 0xc6; syscall; 
0x00000000116e77: nop [rax+rax]; nop; endbr64; mov eax, 0xc7; syscall; 
0x00000000116e75: nop [rax+rax]; nop; endbr64; mov eax, 0xc7; syscall; 
0x00000000116e76: nop [rax+rax]; nop; endbr64; mov eax, 0xc7; syscall; 
0x00000000119d07: nop [rax+rax]; nop; endbr64; mov eax, 0xd5; syscall; 
0x00000000119d05: nop [rax+rax]; nop; endbr64; mov eax, 0xd5; syscall; 
0x00000000119d06: nop [rax+rax]; nop; endbr64; mov eax, 0xd5; syscall; 
0x00000000119c05: nop [rax+rax]; nop; endbr64; mov eax, 0xe4; syscall; 
0x00000000119c06: nop [rax+rax]; nop; endbr64; mov eax, 0xe4; syscall; 
0x00000000119c07: nop [rax+rax]; nop; endbr64; mov eax, 0xe4; syscall; 
0x00000000119e26: nop [rax+rax]; nop; endbr64; mov eax, 0xfd; syscall; 
0x00000000119e27: nop [rax+rax]; nop; endbr64; mov eax, 0xfd; syscall; 
0x00000000119e25: nop [rax+rax]; nop; endbr64; mov eax, 0xfd; syscall; 
0x00000000119e87: nop [rax+rax]; nop; endbr64; mov eax, 0xff; syscall; 
0x00000000119e85: nop [rax+rax]; nop; endbr64; mov eax, 0xff; syscall; 
0x00000000119e86: nop [rax+rax]; nop; endbr64; mov eax, 0xff; syscall; 
0x00000000028ba5: nop [rax+rax]; nop; endbr64; ret; 
0x00000000028ba6: nop [rax+rax]; nop; endbr64; ret; 
0x00000000028ba7: nop [rax+rax]; nop; endbr64; ret; 
0x0000000018a834: nop [rax+rax]; nop; lea rax, [rdi+0x1]; ret; 
0x0000000018a837: nop [rax+rax]; nop; lea rax, [rdi+0x1]; ret; 
0x0000000018a836: nop [rax+rax]; nop; lea rax, [rdi+0x1]; ret; 
0x0000000018a824: nop [rax+rax]; nop; lea rax, [rdi]; ret; 
0x0000000018a826: nop [rax+rax]; nop; lea rax, [rdi]; ret; 
0x0000000018a827: nop [rax+rax]; nop; lea rax, [rdi]; ret; 
0x00000000172217: nop [rax+rax]; nop; mov [rcx], dx; mov [rcx+0x2], dl; ret; 
0x00000000172216: nop [rax+rax]; nop; mov [rcx], dx; mov [rcx+0x2], dl; ret; 
0x00000000172214: nop [rax+rax]; nop; mov [rcx], dx; mov [rcx+0x2], dl; ret; 
0x00000000172276: nop [rax+rax]; nop; mov [rcx], rdx; mov [rcx+0x8], dl; ret; 
0x00000000172277: nop [rax+rax]; nop; mov [rcx], rdx; mov [rcx+0x8], dl; ret; 
0x00000000172274: nop [rax+rax]; nop; mov [rcx], rdx; mov [rcx+0x8], dl; ret; 
0x000000000b4154: nop [rax+rax]; nop; mov [rdi-0x1], edx; ret; 
0x000000000b4157: nop [rax+rax]; nop; mov [rdi-0x1], edx; ret; 
0x000000000b4156: nop [rax+rax]; nop; mov [rdi-0x1], edx; ret; 
0x000000000b4166: nop [rax+rax]; nop; mov [rdi], edx; ret; 
0x000000000b4164: nop [rax+rax]; nop; mov [rdi], edx; ret; 
0x000000000b4167: nop [rax+rax]; nop; mov [rdi], edx; ret; 
0x000000000b41b4: nop [rax+rax]; nop; mov [rdi], rdx; mov [rdi+0x8], dl; ret; 
0x000000000b41b6: nop [rax+rax]; nop; mov [rdi], rdx; mov [rdi+0x8], dl; ret; 
0x000000000b41b7: nop [rax+rax]; nop; mov [rdi], rdx; mov [rdi+0x8], dl; ret; 
0x000000000cbb16: nop [rax+rax]; nop; mov rax, 0x1; ret; 
0x000000000cbb14: nop [rax+rax]; nop; mov rax, 0x1; ret; 
0x000000000cbb17: nop [rax+rax]; nop; mov rax, 0x1; ret; 
0x00000000184386: nop [rax+rax]; nop; mov rax, rdi; vzeroupper; ret; 
0x00000000184384: nop [rax+rax]; nop; mov rax, rdi; vzeroupper; ret; 
0x00000000184387: nop [rax+rax]; nop; mov rax, rdi; vzeroupper; ret; 
0x0000000017e226: nop [rax+rax]; nop; vzeroupper; xor eax, eax; ret; 
0x0000000017e227: nop [rax+rax]; nop; vzeroupper; xor eax, eax; ret; 
0x0000000017e224: nop [rax+rax]; nop; vzeroupper; xor eax, eax; ret; 
0x0000000008ab8b: nop [rax+rax]; or dword ptr [rbx], 0x20; mov eax, 0xffffffff; pop rbx; ret; 
0x0000000009b4a3: nop [rax+rax]; pop rbp; ret; 
0x0000000009b4a2: nop [rax+rax]; pop rbp; ret; 
0x00000000111caa: nop [rax+rax]; pxor xmm0, xmm0; movups [rdi], xmm0; ret; 
0x00000000111cab: nop [rax+rax]; pxor xmm0, xmm0; movups [rdi], xmm0; ret; 
0x000000000eace7: nop [rax+rax]; ret; 
0x000000000eace6: nop [rax+rax]; ret; 
0x000000000347e3: nop [rax+rax]; ret; 
0x00000000038688: nop [rax+rax]; ret; 
0x000000000eacba: nop [rax+rax]; ret; 
0x00000000038687: nop [rax+rax]; ret; 
0x0000000008767a: nop [rax+rax]; shr edx, 0x4; and edx, 0x1; mov eax, edx; ret; 
0x0000000008767b: nop [rax+rax]; shr edx, 0x4; and edx, 0x1; mov eax, edx; ret; 
0x0000000008777b: nop [rax+rax]; shr edx, 0x5; and edx, 0x1; mov eax, edx; ret; 
0x0000000008777a: nop [rax+rax]; shr edx, 0x5; and edx, 0x1; mov eax, edx; ret; 
0x00000000156f67: nop [rax+rax]; sub ecx, 0x5; cmp cx, 0x3; jbe short 0x0000000000156f80; ret; 
0x00000000156f68: nop [rax+rax]; sub ecx, 0x5; cmp cx, 0x3; jbe short 0x0000000000156f80; ret; 
0x00000000156f66: nop [rax+rax]; sub ecx, 0x5; cmp cx, 0x3; jbe short 0x0000000000156f80; ret; 
0x0000000008fba3: nop [rax+rax]; sub edx, [rax+0x10]; mov eax, [rdi+0x10]; sub eax, edx; ret; 
0x0000000008fba2: nop [rax+rax]; sub edx, [rax+0x10]; mov eax, [rdi+0x10]; sub eax, edx; ret; 
0x0000000008f053: nop [rax+rax]; sub rcx, rax; lea eax, [rcx-0x1]; ret; 
0x0000000008f052: nop [rax+rax]; sub rcx, rax; lea eax, [rcx-0x1]; ret; 
0x00000000084713: nop [rax+rax]; sub rcx, rax; sar rcx, 0x2; lea eax, [rcx-0x1]; ret; 
0x00000000084712: nop [rax+rax]; sub rcx, rax; sar rcx, 0x2; lea eax, [rcx-0x1]; ret; 
0x0000000017e238: nop [rax+rax]; tzcnt eax, eax; add rax, rdi; vzeroupper; ret; 
0x0000000017e236: nop [rax+rax]; tzcnt eax, eax; add rax, rdi; vzeroupper; ret; 
0x0000000017e237: nop [rax+rax]; tzcnt eax, eax; add rax, rdi; vzeroupper; ret; 
0x00000000183697: nop [rax+rax]; vzeroupper; ret; 
0x00000000183698: nop [rax+rax]; vzeroupper; ret; 
0x0000000017e677: nop [rax+rax]; vzeroupper; xor eax, eax; ret; 
0x0000000017e678: nop [rax+rax]; vzeroupper; xor eax, eax; ret; 
0x0000000017e676: nop [rax+rax]; vzeroupper; xor eax, eax; ret; 
0x0000000008d598: nop [rax+rax]; xchg [rip+0x1590ca], eax; cmp eax, 0x1; jg short 0x000000000008d5db; ret; 
0x000000001199f6: nop [rax+rax]; xchg ax, ax; endbr64; mov eax, 0x11f; syscall; 
0x000000001199f5: nop [rax+rax]; xchg ax, ax; endbr64; mov eax, 0x11f; syscall; 
0x000000001199f4: nop [rax+rax]; xchg ax, ax; endbr64; mov eax, 0x11f; syscall; 
0x00000000119b76: nop [rax+rax]; xchg ax, ax; endbr64; mov eax, 0x131; syscall; 
0x00000000119b74: nop [rax+rax]; xchg ax, ax; endbr64; mov eax, 0x131; syscall; 
0x00000000119b75: nop [rax+rax]; xchg ax, ax; endbr64; mov eax, 0x131; syscall; 
0x0000000010e5e6: nop [rax+rax]; xchg ax, ax; endbr64; mov eax, 0x1; syscall; 
0x0000000010e5e4: nop [rax+rax]; xchg ax, ax; endbr64; mov eax, 0x1; syscall; 
0x0000000010e5e5: nop [rax+rax]; xchg ax, ax; endbr64; mov eax, 0x1; syscall; 
0x000000000d01d4: nop [rax+rax]; xchg ax, ax; endbr64; mov eax, 0x24; syscall; 
0x000000000d01d6: nop [rax+rax]; xchg ax, ax; endbr64; mov eax, 0x24; syscall; 
0x000000000d01d5: nop [rax+rax]; xchg ax, ax; endbr64; mov eax, 0x24; syscall; 
0x000000000dfaf5: nop [rax+rax]; xchg ax, ax; endbr64; mov eax, 0x27; syscall; 
0x000000000dfaf4: nop [rax+rax]; xchg ax, ax; endbr64; mov eax, 0x27; syscall; 
0x000000000dfaf6: nop [rax+rax]; xchg ax, ax; endbr64; mov eax, 0x27; syscall; 
0x000000000dfda6: nop [rax+rax]; xchg ax, ax; endbr64; mov eax, 0x79; syscall; 
0x000000000dfda4: nop [rax+rax]; xchg ax, ax; endbr64; mov eax, 0x79; syscall; 
0x000000000dfda5: nop [rax+rax]; xchg ax, ax; endbr64; mov eax, 0x79; syscall; 
0x000000000ccd74: nop [rax+rax]; xchg ax, ax; endbr64; mov eax, 0xc9; syscall; 
0x000000000ccd76: nop [rax+rax]; xchg ax, ax; endbr64; mov eax, 0xc9; syscall; 
0x000000000ccd75: nop [rax+rax]; xchg ax, ax; endbr64; mov eax, 0xc9; syscall; 
0x0000000009b275: nop [rax+rax]; xchg ax, ax; endbr64; ret; 
0x0000000009b273: nop [rax+rax]; xchg ax, ax; endbr64; ret; 
0x0000000009b276: nop [rax+rax]; xchg ax, ax; endbr64; ret; 
0x00000000172206: nop [rax+rax]; xchg ax, ax; mov [rcx], dx; ret; 
0x00000000172203: nop [rax+rax]; xchg ax, ax; mov [rcx], dx; ret; 
0x00000000172205: nop [rax+rax]; xchg ax, ax; mov [rcx], dx; ret; 
0x00000000172236: nop [rax+rax]; xchg ax, ax; mov [rcx], edx; mov [rcx+0x4], dl; ret; 
0x00000000172235: nop [rax+rax]; xchg ax, ax; mov [rcx], edx; mov [rcx+0x4], dl; ret; 
0x00000000172233: nop [rax+rax]; xchg ax, ax; mov [rcx], edx; mov [rcx+0x4], dl; ret; 
0x000000000b4146: nop [rax+rax]; xchg ax, ax; mov [rdi], dx; ret; 
0x000000000b4145: nop [rax+rax]; xchg ax, ax; mov [rdi], dx; ret; 
0x000000000b4143: nop [rax+rax]; xchg ax, ax; mov [rdi], dx; ret; 
0x000000000b4173: nop [rax+rax]; xchg ax, ax; mov [rdi], edx; mov [rdi+0x4], dl; ret; 
0x000000000b4175: nop [rax+rax]; xchg ax, ax; mov [rdi], edx; mov [rdi+0x4], dl; ret; 
0x000000000b4176: nop [rax+rax]; xchg ax, ax; mov [rdi], edx; mov [rdi+0x4], dl; ret; 
0x000000000b3156: nop [rax+rax]; xchg ax, ax; mov dx, [rsi]; mov [rdi], dx; ret; 
0x000000000b3153: nop [rax+rax]; xchg ax, ax; mov dx, [rsi]; mov [rdi], dx; ret; 
0x000000000b3155: nop [rax+rax]; xchg ax, ax; mov dx, [rsi]; mov [rdi], dx; ret; 
0x000000000b7216: nop [rax+rax]; xchg ax, ax; xor ch, ch; mov [rdi], ch; ret; 
0x000000000b7213: nop [rax+rax]; xchg ax, ax; xor ch, ch; mov [rdi], ch; ret; 
0x000000000b7215: nop [rax+rax]; xchg ax, ax; xor ch, ch; mov [rdi], ch; ret; 
0x000000000cb353: nop [rax+rax]; xchg ax, ax; xor rax, rax; ret; 
0x000000000cb355: nop [rax+rax]; xchg ax, ax; xor rax, rax; ret; 
0x000000000cb356: nop [rax+rax]; xchg ax, ax; xor rax, rax; ret; 
0x0000000011223b: nop [rax+rax]; xor eax, eax; add rsp, 0x8; ret; 
0x0000000011223a: nop [rax+rax]; xor eax, eax; add rsp, 0x8; ret; 
0x000000000b8463: nop [rax+rax]; xor eax, eax; pop rbx; ret; 
0x00000000044948: nop [rax+rax]; xor eax, eax; ret; 
0x0000000015a947: nop [rax+rax]; xor eax, eax; ret; 
0x000000000c5fca: nop [rax+rax]; xor eax, eax; ret; 
0x00000000044946: nop [rax+rax]; xor eax, eax; ret; 
0x00000000044947: nop [rax+rax]; xor eax, eax; ret; 
0x0000000008ce2b: nop [rax+rax]; xor eax, eax; ret; 
0x0000000017de8b: nop [rax+rax]; xor eax, eax; vzeroupper; ret; 
0x0000000017de8a: nop [rax+rax]; xor eax, eax; vzeroupper; ret; 
0x00000000040a53: nop [rax+rax]; xor ecx, ecx; addsd xmm0, xmm0; mov [rdi], ecx; ret; 
0x0000000009c3e3: nop [rax+rax]; xor edx, edx; mov eax, edx; ret; 
0x0000000009c3e2: nop [rax+rax]; xor edx, edx; mov eax, edx; ret; 
0x000000000b83f7: nop [rax+rax]; xor edx, edx; mov eax, edx; ret; 
0x000000000b83f8: nop [rax+rax]; xor edx, edx; mov eax, edx; ret; 
0x000000000b83f6: nop [rax+rax]; xor edx, edx; mov eax, edx; ret; 
0x000000000cc047: nop [rax+rax]; xor r12d, r12d; mov rax, r12; pop r12; ret; 
0x000000000cc048: nop [rax+rax]; xor r12d, r12d; mov rax, r12; pop r12; ret; 
0x00000000128f9b: nop [rax+rax]; xor r8d, r8d; mov rax, r8; ret; 
0x00000000128368: nop [rax+rax]; xor r8d, r8d; mov rax, r8; ret; 
0x000000000cb678: nop [rax+rax]; xor rax, rax; ret; 
0x000000000cb09b: nop [rax+rax]; xor rax, rax; ret; 
0x000000000cb677: nop [rax+rax]; xor rax, rax; ret; 
0x000000000cb09a: nop [rax+rax]; xor rax, rax; ret; 
0x000000000cb675: nop [rax+rax]; xor rax, rax; ret; 
0x000000000a2c1c: nop [rax], eax; add bh, dh; ret; 
0x000000000cbaec: nop [rax]; add rax, 0x1; ret; 
0x00000000191d49: nop [rax]; add rsp, 0x8; ret; 
0x00000000091169: nop [rax]; and dword ptr [rdi+0x8], 0xfffffffb; xor eax, eax; ret; 
0x0000000018861c: nop [rax]; and eax, 0xff; and ecx, 0xff; sub eax, ecx; ret; 
0x00000000040c2c: nop [rax]; and esi, 0x80000000; movd xmm0, esi; ret; 
0x000000000a8459: nop [rax]; bsf eax, eax; add rax, rdi; ret; 
0x000000000a8479: nop [rax]; bsf eax, eax; lea rax, [rax+rdi+0x20]; ret; 
0x000000000a86ad: nop [rax]; bsf eax, eax; lea rax, [rax+rdi-0x10]; ret; 
0x000000000a844c: nop [rax]; bsf eax, eax; lea rax, [rax+rdi-0x10]; ret; 
0x0000000017e62d: nop [rax]; bsr eax, eax; add eax, 0x60; add rax, rdi; ret; 
0x000000000a8aad: nop [rax]; bsr eax, eax; lea rax, [rax+rdi+0x10]; ret; 
0x000000000a8949: nop [rax]; bsr eax, eax; lea rax, [rax+rdi+0x20]; ret; 
0x000000000a8959: nop [rax]; bsr eax, eax; lea rax, [rax+rdi+0x30]; ret; 
0x000000000e1a64: nop [rax]; call qword ptr [r12+0x28]; 
0x00000000044b4d: nop [rax]; call qword ptr [rbx]; 
0x00000000159f14: nop [rax]; call r14; 
0x0000000015169c: nop [rax]; endbr64; add dword ptr [rdi+0x28], 0x4; mov eax, 0x1; ret; 
0x0000000008e3e9: nop [rax]; endbr64; cmp qword ptr [rdi+0x38], 0x0; je short 0x000000000008e400; ret; 
0x00000000028ddc: nop [rax]; endbr64; lea rax, [rip+0x186cbd]; ret; 
0x000000001072dc: nop [rax]; endbr64; mov [rdi+0x4], esi; xor eax, eax; ret; 
0x0000000011941c: nop [rax]; endbr64; mov eax, 0x122; syscall; 
0x00000000108e0c: nop [rax]; endbr64; mov eax, 0x15; syscall; 
0x000000000920cc: nop [rax]; endbr64; mov eax, 0x18; syscall; 
0x0000000014f8ed: nop [rax]; endbr64; mov eax, 0x1; ret; 
0x0000000011b26c: nop [rax]; endbr64; mov eax, 0x1e; syscall; 
0x0000000011b30c: nop [rax]; endbr64; mov eax, 0x1f; syscall; 
0x0000000014df0c: nop [rax]; endbr64; mov eax, 0x2; ret; 
0x000000000de54c: nop [rax]; endbr64; mov eax, 0x3f; syscall; 
0x0000000011b29c: nop [rax]; endbr64; mov eax, 0x43; syscall; 
0x0000000011b0dd: nop [rax]; endbr64; mov eax, 0x44; syscall; 
0x0000000010a85c: nop [rax]; endbr64; mov eax, 0x56; syscall; 
0x000000001086ec: nop [rax]; endbr64; mov eax, 0x5a; syscall; 
0x000000001086dc: nop [rax]; endbr64; mov eax, 0x5f; syscall; 
0x0000000010ed6c: nop [rax]; endbr64; mov eax, 0x62; syscall; 
0x000000000dfb1c: nop [rax]; endbr64; mov eax, 0x66; syscall; 
0x000000000dfb3c: nop [rax]; endbr64; mov eax, 0x68; syscall; 
0x000000000dfb2c: nop [rax]; endbr64; mov eax, 0x6b; syscall; 
0x000000000dfb4c: nop [rax]; endbr64; mov eax, 0x6c; syscall; 
0x000000000dfb0c: nop [rax]; endbr64; mov eax, 0x6e; syscall; 
0x000000000dfb5c: nop [rax]; endbr64; mov eax, 0x73; syscall; 
0x000000001192ac: nop [rax]; endbr64; mov eax, 0x7a; syscall; 
0x000000000dfe3d: nop [rax]; endbr64; mov eax, 0x7c; syscall; 
0x0000000010858c: nop [rax]; endbr64; mov eax, 0x89; syscall; 
0x00000000108ddd: nop [rax]; endbr64; mov eax, 0x8; syscall; 
0x0000000010f17c: nop [rax]; endbr64; mov eax, 0x8d; syscall; 
0x000000000fd16c: nop [rax]; endbr64; mov eax, 0x8e; syscall; 
0x0000000010fe8c: nop [rax]; endbr64; mov eax, 0xab; syscall; 
0x0000000011a1fc: nop [rax]; endbr64; mov eax, 0xea; syscall; 
0x0000000008fdec: nop [rax]; endbr64; mov eax, 0xffffffff; ret; 
0x0000000008fb6c: nop [rax]; endbr64; mov eax, [rdi+0x10]; sub eax, [rsi+0x10]; ret; 
0x000000001515bd: nop [rax]; endbr64; mov eax, [rdi+0x28]; ret; 
0x0000000010e61c: nop [rax]; endbr64; mov eax, [rdi+0x8]; and eax, 0x100f; ret; 
0x0000000008960d: nop [rax]; endbr64; mov eax, [rdi]; and eax, 0x200; ret; 
0x000000000da1cc: nop [rax]; endbr64; mov eax, [rdi]; ret; 
0x000000000425ac: nop [rax]; endbr64; mov eax, [rip+0x1a0bf2]; ret; 
0x00000000038d6c: nop [rax]; endbr64; mov eax, edi; and eax, 0x7f; ret; 
0x0000000012979c: nop [rax]; endbr64; mov eax, edi; bswap eax; ret; 
0x000000001297a9: nop [rax]; endbr64; mov eax, edi; rol ax, 0x8; ret; 
0x0000000010e5ac: nop [rax]; endbr64; mov r10, rcx; mov eax, 0x11; syscall; 
0x00000000119c1c: nop [rax]; endbr64; mov r10, rcx; mov eax, 0x12d; syscall; 
0x000000001194ad: nop [rax]; endbr64; mov r10, rcx; mov eax, 0x12e; syscall; 
0x00000000116e19: nop [rax]; endbr64; mov r10, rcx; mov eax, 0xc1; syscall; 
0x0000000002a6cc: nop [rax]; endbr64; mov rax, [rip+0x1baf95]; ret; 
0x0000000015987d: nop [rax]; endbr64; mov rax, [rip+0x895ad]; jmp qword ptr [rax+0x280]; 
0x0000000009207c: nop [rax]; endbr64; mov rax, fs:[0x10]; ret; 
0x0000000009194d: nop [rax]; endbr64; mov rax, fs:[0x10]; ret; 
0x0000000008fe69: nop [rax]; endbr64; mov rax, rdi; ret; 
0x00000000040a8c: nop [rax]; endbr64; pmovmskb eax, xmm0; and eax, 0x80; ret; 
0x0000000011f32c: nop [rax]; endbr64; ret; 
0x00000000149bed: nop [rax]; endbr64; ret; 
0x00000000141559: nop [rax]; endbr64; ret; 
0x0000000008fe0c: nop [rax]; endbr64; xor eax, eax; ret; 
0x000000001071ed: nop [rax]; endbr64; xor eax, eax; ret; 
0x0000000009c215: nop [rax]; lea rax, [rip+0xe1441]; test dh, 0x1; je short 0x000000000009c1ef; ret; 
0x0000000009c165: nop [rax]; lea rax, [rip+0xe64c1]; test dh, 0x1; je short 0x000000000009c13f; ret; 
0x0000000009c5f5: nop [rax]; lea rax, [rip+0xe66a1]; test dh, 0x1; je short 0x000000000009c5cf; ret; 
0x0000000009d4b5: nop [rax]; lea rax, [rip+0xe6ee1]; test dh, 0x1; je short 0x000000000009d48f; ret; 
0x0000000009d515: nop [rax]; lea rax, [rip+0xe7231]; test dh, 0x1; je short 0x000000000009d4ef; ret; 
0x0000000009c6c5: nop [rax]; lea rax, [rip+0xe7371]; test dh, 0x1; je short 0x000000000009c69f; ret; 
0x0000000009c295: nop [rax]; lea rax, [rip+0xe7411]; test dh, 0x1; je short 0x000000000009c26f; ret; 
0x000000000ccf94: nop [rax]; lea rax, [rip-0x10f]; add rsp, 0x58; ret; 
0x000000000cce84: nop [rax]; lea rax, [rip-0x10f]; ret; 
0x000000000ccfa4: nop [rax]; lea rax, [rip-0x11f]; ret; 
0x000000000cce74: nop [rax]; lea rax, [rip-0xff]; add rsp, 0x58; ret; 
0x000000000a4da9: nop [rax]; mov [rax], ecx; ret; 
0x000000000a4d8c: nop [rax]; mov [rax], si; ret; 
0x000000001721fc: nop [rax]; mov [rcx], dl; ret; 
0x000000000b413c: nop [rax]; mov [rdi], dl; ret; 
0x0000000018410c: nop [rax]; mov [rdi], dl; vzeroupper; ret; 
0x0000000018413d: nop [rax]; mov [rdi], edx; mov [rdi+r8-0x4], edx; vzeroupper; ret; 
0x000000000a4cac: nop [rax]; mov [rdi], r10b; add rax, rdi; ret; 
0x000000000a4ce4: nop [rax]; mov [rdi], r8d; add rax, rdi; ret; 
0x000000000a4e49: nop [rax]; mov [rdi], si; lea rax, [rdi+rax-0x1]; ret; 
0x0000000017022d: nop [rax]; mov al, [rcx]; mov [rdx], al; mov rax, rdi; ret; 
0x000000000a4d81: nop [rax]; mov byte ptr [rax], 0x0; ret; 
0x000000000e7de9: nop [rax]; mov byte ptr [rdi+0x8], 0x15; mov eax, 0x1; ret; 
0x000000000a4934: nop [rax]; mov byte ptr [rdx-0x1], 0x0; mov [rdi], rdx; ret; 
0x000000000b3e3c: nop [rax]; mov dl, [rsi]; mov [rdi], dl; ret; 
0x00000000149ced: nop [rax]; mov dword ptr [rdi+0x4], 0x0; mov eax, 0x1; ret; 
0x0000000007be35: nop [rax]; mov dword ptr [rsp+0x34], 0x1; mov rbx, rsi; jmp rcx; 
0x0000000007bf31: nop [rax]; mov dword ptr [rsp+0x3c], 0x1; mov rbx, rsi; jmp rcx; 
0x00000000076295: nop [rax]; mov dword ptr [rsp+0x40], 0x1; mov rbx, rdi; jmp rsi; 
0x00000000076229: nop [rax]; mov dword ptr [rsp+0x54], 0x1; mov rbx, rdi; jmp rsi; 
0x000000000763ed: nop [rax]; mov dword ptr [rsp+0x58], 0x1; mov rbx, rdi; jmp rsi; 
0x000000000b55d9: nop [rax]; mov dx, [rsi]; mov [rdi], dx; lea rax, [rdi+0x2]; ret; 
0x00000000061165: nop [rax]; mov eax, 0x10; ret; 
0x000000000cb089: nop [rax]; mov eax, 0x1; jg short 0x00000000000cb099; neg eax; ret; 
0x000000001070bc: nop [rax]; mov eax, 0x1; pop rbx; ret; 
0x000000001112cc: nop [rax]; mov eax, 0x1; ret; 
0x00000000136fc9: nop [rax]; mov eax, 0x2; ret; 
0x000000001377f9: nop [rax]; mov eax, 0x7fffffff; ret; 
0x000000001198c1: nop [rax]; mov eax, 0x95; syscall; 
0x000000000e0a64: nop [rax]; mov eax, 0xfc17; ret; 
0x000000000e0b94: nop [rax]; mov eax, 0xff; ret; 
0x00000000045b9d: nop [rax]; mov eax, 0xffffffff; ret; 
0x0000000008d2dc: nop [rax]; mov eax, 0xffffffff; ret; 
0x00000000137499: nop [rax]; mov eax, 0xffffffff; ret; 
0x0000000017459c: nop [rax]; mov eax, [rcx]; mov [rdx], eax; lea rax, [rdx+0x3]; ret; 
0x000000000cafdd: nop [rax]; mov eax, [rdi+0x1c]; cmp eax, [rsi+0x1c]; jne 0x00000000000cb090; ret; 
0x000000000caf7d: nop [rax]; mov eax, [rdi+0xc]; cmp eax, [rsi+0xc]; jne 0x00000000000cb090; ret; 
0x0000000018c58d: nop [rax]; mov eax, [rdi-0x4]; cmp eax, [rsi-0x4]; jne 0x000000000018c680; ret; 
0x00000000129874: nop [rax]; mov eax, edi; shr eax, 0x18; ret; 
0x0000000008052c: nop [rax]; mov edx, 0x10; mov rsi, r13; mov rdi, r15; call qword ptr [r14+0x38]; 
0x0000000016710c: nop [rax]; mov edx, [rsi-0x4]; mov [rdi-0x4], edx; ret; 
0x000000000b560c: nop [rax]; mov edx, [rsi]; mov [rdi], edx; lea rax, [rdi+0x4]; ret; 
0x00000000167829: nop [rax]; mov edx, [rsi]; mov [rdi], edx; ret; 
0x000000000b3e6d: nop [rax]; mov edx, [rsi]; mov [rdi], edx; ret; 
0x000000000918c4: nop [rax]; mov r8d, 0x3; mov eax, r8d; ret; 
0x0000000004086c: nop [rax]; mov rax, 0x8000000000000000; and rdx, rax; movq xmm0, rdx; ret; 
0x0000000004194c: nop [rax]; mov rax, 0xf; syscall; 
0x00000000137779: nop [rax]; mov rax, 0xffffffffffffffff; mov rdx, 0xffffffffffffffff; ret; 
0x00000000044a5c: nop [rax]; mov rax, [rax+0x18]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000001170bd: nop [rax]; mov rax, [rax+0x258]; ret; 
0x000000001170b1: nop [rax]; mov rax, [rax+0x58]; ret; 
0x0000000014db7d: nop [rax]; mov rax, [rbp+0x8]; mov rdi, rbp; call qword ptr [rax+0x28]; 
0x0000000014da1d: nop [rax]; mov rax, [rbp+0x8]; mov rdi, rbp; call qword ptr [rax+0x8]; 
0x000000001744ed: nop [rax]; mov rax, [rcx]; mov [rdx], rax; lea rax, [rdx+0x7]; ret; 
0x000000001701bd: nop [rax]; mov rax, [rcx]; mov [rdx], rax; mov rax, rdi; ret; 
0x0000000014f86d: nop [rax]; mov rax, [rdi+0x8]; call qword ptr [rax+0x10]; 
0x0000000015027d: nop [rax]; mov rax, [rdi+0x8]; call qword ptr [rax+0x18]; 
0x00000000150544: nop [rax]; mov rax, [rdi+0x8]; lea rsi, [rsp+0x10]; call qword ptr [rax]; 
0x00000000150f39: nop [rax]; mov rax, [rdi+0x8]; lea rsi, [rsp+0x4]; call qword ptr [rax+0x40]; 
0x00000000143d39: nop [rax]; mov rax, [rdi+0x8]; mov rsi, rsp; call qword ptr [rax]; 
0x00000000089bc9: nop [rax]; mov rax, [rip+0x159271]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000877f4: nop [rax]; mov rax, [rip+0x15b649]; mov dword ptr fs:[rax], 0x9; mov eax, 0xffffffff; ret; 
0x00000000081085: nop [rax]; mov rax, [rip+0x161db9]; mov dword ptr fs:[rax], 0x16; mov rax, 0xffffffffffffffff; ret; 
0x00000000045e05: nop [rax]; mov rax, [rip+0x19d039]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000042595: nop [rax]; mov rax, [rip+0x1a08a9]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000042555: nop [rax]; mov rax, [rip+0x1a08e9]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000423a9: nop [rax]; mov rax, [rip+0x1a0a91]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000041b59: nop [rax]; mov rax, [rip+0x1a12e1]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000014d169: nop [rax]; mov rax, [rip+0x95c11]; pop rbx; ret; 
0x0000000014d099: nop [rax]; mov rax, [rip+0x95d81]; pop rbx; ret; 
0x0000000014d239: nop [rax]; mov rax, [rip+0x95d99]; pop rbx; ret; 
0x000000001290e9: nop [rax]; mov rax, [rip+0xb9d51]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000011c0b9: nop [rax]; mov rax, [rip+0xcb9d1]; mov rax, [rax+0x18]; add word ptr [rax], 0x1; ret; 
0x00000000113831: nop [rax]; mov rax, [rip+0xcf609]; mov dword ptr fs:[rax], 0x16; mov rax, 0xffffffffffffffff; ret; 
0x000000001106b1: nop [rax]; mov rax, [rip+0xd2789]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010f265: nop [rax]; mov rax, [rip+0xd3bd9]; mov dword ptr fs:[rax], 0xc; mov eax, 0xffffffff; ret; 
0x0000000010de34: nop [rax]; mov rax, [rip+0xd5009]; mov dword ptr fs:[rax], 0x9; mov eax, 0xffffffff; ret; 
0x00000000148d51: nop [rax]; mov rax, [rsp+0x8]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x000000000b2aac: nop [rax]; mov rax, rdi; ret; 
0x000000000b855d: nop [rax]; mov rax, rdx; pop rbx; ret; 
0x0000000007bf8c: nop [rax]; mov rbx, [rsp+0x68]; jmp rcx; 
0x000000000763fd: nop [rax]; mov rbx, [rsp+0x80]; jmp rsi; 
0x0000000007623d: nop [rax]; mov rbx, rcx; mov r13d, 0x1; mov ecx, 0x1; jmp rsi; 
0x0000000007bf45: nop [rax]; mov rbx, rdx; mov r9d, 0x1; mov edx, 0x1; jmp rcx; 
0x000000000762a5: nop [rax]; mov rbx, rdx; mov r9d, 0x1; xor edx, edx; jmp rsi; 
0x0000000007bf65: nop [rax]; mov rbx, rsi; mov r10d, 0x1; jmp rcx; 
0x0000000007bd9c: nop [rax]; mov rbx, rsi; mov r12d, 0x1; jmp rcx; 
0x0000000009b8f8: nop [rax]; mov rdi, [rbx+0x48]; call rax; 
0x0000000014dc04: nop [rax]; mov rdi, rsp; mov rsi, rbp; call qword ptr [rax+0x18]; 
0x000000001613ac: nop [rax]; mov rdx, [rsi-0x8]; mov [rdi-0x8], rdx; ret; 
0x00000000167669: nop [rax]; mov rdx, [rsi]; mov [rdi], rdx; ret; 
0x00000000077785: nop [rax]; mov rdx, r14; mov rsi, r12; mov rdi, rbp; call qword ptr [rax+0x38]; 
0x000000000a4945: nop [rax]; mov rdx, rax; xor eax, eax; mov [rdi], rdx; ret; 
0x0000000010e3e1: nop [rax]; mov rdx, rsp; mov esi, 0x10; mov eax, 0x48; syscall; 
0x00000000114cec: nop [rax]; mov rsi, [r14]; mov rax, [rsp+0x10]; mov rdi, rbp; call rax; 
0x00000000097c05: nop [rax]; mov rsi, [rsp+0x18]; add rsp, 0x18; jmp rax; 
0x00000000097e1c: nop [rax]; mov rsi, [rsp+0x48]; mov rdi, rbp; call rax; 
0x00000000042dd1: nop [rax]; mov rsi, r15; mov rdi, r12; mov rdx, r14; call rbp; 
0x0000000014a575: nop [rax]; movdqu xmm0, [r8]; mov eax, esi; movups [rdi+0x30], xmm0; ret; 
0x000000000b3249: nop [rax]; movdqu xmm0, [rsi]; movdqu [rdi], xmm0; mov [rdi+0x10], dh; ret; 
0x00000000146eb4: nop [rax]; movdqu xmm1, [r8+0x8]; mov eax, 0x1; movups [rdx], xmm1; ret; 
0x00000000142f0d: nop [rax]; movdqu xmm1, [rdi+0x20]; mov dword ptr [rsi], 0x6; movups [rsi+0x8], xmm1; ret; 
0x0000000014a584: nop [rax]; movdqu xmm1, [rdi+0x30]; mov eax, 0x1; movups [r8], xmm1; ret; 
0x0000000017d50d: nop [rax]; movsxd rax, ecx; add rax, rdi; ret; 
0x000000000fd8ad: nop [rax]; movzx eax, byte ptr [rdi+0x9]; and eax, 0xf; ret; 
0x0000000018bb2d: nop [rax]; movzx eax, byte ptr [rdi-0x10]; movzx edx, byte ptr [rsi-0x10]; sub eax, edx; ret; 
0x0000000018701d: nop [rax]; movzx eax, byte ptr [rdi]; movzx ecx, byte ptr [rsi]; sub eax, ecx; ret; 
0x000000000b84e9: nop [rax]; movzx eax, cl; pop rbx; ret; 
0x000000000a668d: nop [rax]; movzx ecx, byte ptr [rsi]; movzx eax, byte ptr [rdi]; sub eax, ecx; ret; 
0x0000000016729c: nop [rax]; movzx edx, byte ptr [rsi-0x1]; mov [rdi-0x1], dl; ret; 
0x00000000167979: nop [rax]; movzx edx, byte ptr [rsi]; mov [rdi], dl; ret; 
0x0000000016721c: nop [rax]; movzx edx, word ptr [rsi-0x2]; mov [rdi-0x2], dx; ret; 
0x00000000167909: nop [rax]; movzx edx, word ptr [rsi]; mov [rdi], dx; ret; 
0x00000000182bf9: nop [rax]; movzx edx, word ptr [rsi]; mov [rdi], dx; vzeroupper; ret; 
0x00000000091074: nop [rax]; or dword ptr [rdi+0x8], 0x1; xor eax, eax; ret; 
0x0000000009843c: nop [rax]; pop rbp; pop r12; pop r13; jmp rax; 
0x0000000008ef05: nop [rax]; pop rbp; ret; 
0x000000000c60b1: nop [rax]; pop rbp; ret; 
0x000000001913ec: nop [rax]; pop rbx; pop rbp; pop r12; ret; 
0x00000000052461: nop [rax]; ret; 
0x0000000009efcc: nop [rax]; ret; 
0x00000000090b5d: nop [rax]; ret; 
0x000000000ca099: nop [rax]; setg al; movzx eax, al; lea eax, [rax+rax-0x1]; ret; 
0x000000000b8785: nop [rax]; shr ebx, 0x16; lea eax, [rbx+0x1]; pop rbx; ret; 
0x000000000cb60d: nop [rax]; test rax, 0x1; je short 0x00000000000cb680; lea rax, [rdi-0x10]; ret; 
0x00000000181f3d: nop [rax]; tzcnt eax, eax; add rax, rdi; vzeroupper; ret; 
0x0000000018415c: nop [rax]; vmovdqu [rdi], xmm0; vmovdqu [rdi+r8-0x10], xmm0; vzeroupper; ret; 
0x0000000008ff14: nop [rax]; xchg [rip+0x156752], eax; cmp eax, 0x1; jg short 0x000000000008ff24; ret; 
0x000000000808b4: nop [rax]; xchg [rip+0x165d72], eax; cmp eax, 0x1; jg short 0x00000000000808c4; ret; 
0x000000000cc145: nop [rax]; xor eax, eax; add rsp, 0x8; ret; 
0x000000000f975c: nop [rax]; xor eax, eax; add rsp, 0x8; ret; 
0x000000000eacc1: nop [rax]; xor eax, eax; cmp [rsi], cl; je 0x00000000000eac2d; ret; 
0x000000000b8734: nop [rax]; xor eax, eax; pop rbx; ret; 
0x0000000003f8a1: nop [rax]; xor eax, eax; ret; 
0x000000000a89dd: nop [rax]; xor eax, eax; ret; 
0x000000000608f4: nop [rax]; xor eax, eax; ret; 
0x0000000018215d: nop [rax]; xor eax, eax; vzeroupper; ret; 
0x000000001865dc: nop [rax]; xor eax, eax; vzeroupper; ret; 
0x00000000028d0d: nop [rax]; xor edi, edi; mov eax, edx; syscall; 
0x00000000139e81: nop [rax]; xor r10d, r10d; mov eax, r10d; ret; 
0x0000000015118c: nop [rax]; xor r8d, r8d; mov eax, r8d; ret; 
0x0000000008a831: nop [rax]; xor r8d, r8d; mov rax, r8; ret; 
0x0000000007f0bd: nop [rax]; xor r8d, r8d; mov rax, r8; ret; 
0x00000000082294: nop [rax]; xor r8d, r8d; mov rax, r8; ret; 
0x000000001515b1: nop edx, edi; add [rdi+0x28], edx; mov eax, 0x1; ret; 
0x000000001515a1: nop edx, edi; add dword ptr [rdi+0x28], 0x4; mov eax, 0x1; ret; 
0x0000000008a411: nop edx, edi; and dword ptr [rdi], 0xffffffcf; ret; 
0x000000000407d1: nop edx, edi; andpd xmm0, [rip+0x175f14]; andpd xmm1, [rip+0x175efc]; orpd xmm0, xmm1; ret; 
0x00000000125a61: nop edx, edi; cmp edi, 0x56; je short 0x0000000000125a70; mov eax, 0x7; ret; 
0x000000000d8e11: nop edx, edi; cmp esi, 0x1; je short 0x00000000000d8e20; xor eax, eax; ret; 
0x00000000090d71: nop edx, edi; cmp qword ptr [rdi+0x28], 0x0; je short 0x0000000000090d80; xor eax, eax; ret; 
0x0000000008e3f1: nop edx, edi; cmp qword ptr [rdi+0x38], 0x0; je short 0x000000000008e400; ret; 
0x0000000009b291: nop edx, edi; cmp qword ptr [rip+0x14bc74], 0x0; je short 0x000000000009b2a0; ret; 
0x000000000d8f61: nop edx, edi; cmp qword ptr [rsi+0x8], 0x3b9ac9ff; ja short 0x00000000000d8f98; mov eax, 0xe3; syscall; 
0x00000000128481: nop edx, edi; cmp rdx, rcx; ja short 0x00000000001284b4; xor eax, eax; syscall; 
0x00000000136231: nop edx, edi; lea eax, [rdi+0x9]; and eax, 0xfffffff8; add eax, 0x10; ret; 
0x00000000028de1: nop edx, edi; lea rax, [rip+0x186cbd]; ret; 
0x00000000028dd1: nop edx, edi; lea rax, [rip+0x18932d]; ret; 
0x000000001072e1: nop edx, edi; mov [rdi+0x4], esi; xor eax, eax; ret; 
0x00000000091331: nop edx, edi; mov dword ptr [rdi], 0x0; xor eax, eax; ret; 
0x00000000108951: nop edx, edi; mov eax, 0x102; syscall; 
0x0000000010a9b1: nop edx, edi; mov eax, 0x107; syscall; 
0x0000000010f311: nop edx, edi; mov eax, 0x10; syscall; 
0x0000000010a8f1: nop edx, edi; mov eax, 0x10a; syscall; 
0x0000000011a041: nop edx, edi; mov eax, 0x110; syscall; 
0x0000000011a0a1: nop edx, edi; mov eax, 0x11b; syscall; 
0x00000000119a01: nop edx, edi; mov eax, 0x11f; syscall; 
0x00000000119421: nop edx, edi; mov eax, 0x122; syscall; 
0x00000000119d41: nop edx, edi; mov eax, 0x123; syscall; 
0x000000001095d1: nop edx, edi; mov eax, 0x124; syscall; 
0x00000000109631: nop edx, edi; mov eax, 0x125; syscall; 
0x00000000119e61: nop edx, edi; mov eax, 0x126; syscall; 
0x0000000011a0d1: nop edx, edi; mov eax, 0x12c; syscall; 
0x00000000119b81: nop edx, edi; mov eax, 0x131; syscall; 
0x00000000110251: nop edx, edi; mov eax, 0x132; syscall; 
0x0000000011a131: nop edx, edi; mov eax, 0x134; syscall; 
0x0000000011a161: nop edx, edi; mov eax, 0x13f; syscall; 
0x0000000011a191: nop edx, edi; mov eax, 0x14a; syscall; 
0x0000000011a1c1: nop edx, edi; mov eax, 0x14b; syscall; 
0x00000000108e11: nop edx, edi; mov eax, 0x15; syscall; 
0x00000000091131: nop edx, edi; mov eax, 0x16; cmp esi, 0x2; jbe short 0x0000000000091140; ret; 
0x00000000109601: nop edx, edi; mov eax, 0x16; syscall; 
0x000000000920d1: nop edx, edi; mov eax, 0x18; syscall; 
0x00000000141361: nop edx, edi; mov eax, 0x1; ret; 
0x0000000010e5f1: nop edx, edi; mov eax, 0x1; syscall; 
0x000000000e0c61: nop edx, edi; mov eax, 0x1; test edi, edi; js short 0x00000000000e0c70; ret; 
0x000000001139e1: nop edx, edi; mov eax, 0x1b; syscall; 
0x000000001139b1: nop edx, edi; mov eax, 0x1c; syscall; 
0x0000000011b271: nop edx, edi; mov eax, 0x1e; syscall; 
0x0000000011b311: nop edx, edi; mov eax, 0x1f; syscall; 
0x00000000109571: nop edx, edi; mov eax, 0x20; syscall; 
0x000000001095a1: nop edx, edi; mov eax, 0x21; syscall; 
0x000000000d01e1: nop edx, edi; mov eax, 0x24; syscall; 
0x000000000de7a1: nop edx, edi; mov eax, 0x25; syscall; 
0x000000000d0211: nop edx, edi; mov eax, 0x26; syscall; 
0x000000000dfb01: nop edx, edi; mov eax, 0x27; syscall; 
0x0000000011a931: nop edx, edi; mov eax, 0x29; syscall; 
0x000000001436a1: nop edx, edi; mov eax, 0x2; ret; 
0x0000000011a901: nop edx, edi; mov eax, 0x30; syscall; 
0x0000000011a2f1: nop edx, edi; mov eax, 0x31; syscall; 
0x0000000011a451: nop edx, edi; mov eax, 0x32; syscall; 
0x0000000011a3f1: nop edx, edi; mov eax, 0x33; syscall; 
0x0000000011a3c1: nop edx, edi; mov eax, 0x34; syscall; 
0x0000000010e2c1: nop edx, edi; mov eax, 0x3; syscall; 
0x000000000deb71: nop edx, edi; mov eax, 0x3b; syscall; 
0x00000000041bc1: nop edx, edi; mov eax, 0x3e; syscall; 
0x000000000de551: nop edx, edi; mov eax, 0x3f; syscall; 
0x0000000011b151: nop edx, edi; mov eax, 0x40; syscall; 
0x0000000011b2a1: nop edx, edi; mov eax, 0x43; syscall; 
0x0000000011b0e1: nop edx, edi; mov eax, 0x44; syscall; 
0x0000000011b111: nop edx, edi; mov eax, 0x47; syscall; 
0x00000000109251: nop edx, edi; mov eax, 0x49; syscall; 
0x00000000111be1: nop edx, edi; mov eax, 0x4c; syscall; 
0x00000000111c11: nop edx, edi; mov eax, 0x4d; syscall; 
0x000000001096f1: nop edx, edi; mov eax, 0x50; syscall; 
0x00000000109721: nop edx, edi; mov eax, 0x51; syscall; 
0x00000000060fc1: nop edx, edi; mov eax, 0x52; syscall; 
0x00000000108921: nop edx, edi; mov eax, 0x53; syscall; 
0x0000000010a9e1: nop edx, edi; mov eax, 0x54; syscall; 
0x0000000010a861: nop edx, edi; mov eax, 0x56; syscall; 
0x0000000010a981: nop edx, edi; mov eax, 0x57; syscall; 
0x0000000010a8c1: nop edx, edi; mov eax, 0x58; syscall; 
0x0000000010a921: nop edx, edi; mov eax, 0x59; syscall; 
0x000000001086f1: nop edx, edi; mov eax, 0x5a; syscall; 
0x00000000108721: nop edx, edi; mov eax, 0x5b; syscall; 
0x0000000010a011: nop edx, edi; mov eax, 0x5c; syscall; 
0x0000000010a041: nop edx, edi; mov eax, 0x5d; syscall; 
0x0000000010a071: nop edx, edi; mov eax, 0x5e; syscall; 
0x000000001086e1: nop edx, edi; mov eax, 0x5f; syscall; 
0x0000000010ed71: nop edx, edi; mov eax, 0x62; syscall; 
0x0000000011a011: nop edx, edi; mov eax, 0x63; syscall; 
0x000000000de581: nop edx, edi; mov eax, 0x64; syscall; 
0x000000000dfb21: nop edx, edi; mov eax, 0x66; syscall; 
0x00000000119ec1: nop edx, edi; mov eax, 0x67; syscall; 
0x000000000dfb41: nop edx, edi; mov eax, 0x68; syscall; 
0x000000000dfb31: nop edx, edi; mov eax, 0x6b; syscall; 
0x000000000dfb51: nop edx, edi; mov eax, 0x6c; syscall; 
0x000000000dfde1: nop edx, edi; mov eax, 0x6d; syscall; 
0x000000000dfb11: nop edx, edi; mov eax, 0x6e; syscall; 
0x000000000dfe11: nop edx, edi; mov eax, 0x6f; syscall; 
0x000000000dfe71: nop edx, edi; mov eax, 0x70; syscall; 
0x000000000dfb61: nop edx, edi; mov eax, 0x73; syscall; 
0x000000000dfea1: nop edx, edi; mov eax, 0x76; syscall; 
0x000000000dfed1: nop edx, edi; mov eax, 0x78; syscall; 
0x000000000dfdb1: nop edx, edi; mov eax, 0x79; syscall; 
0x000000001192b1: nop edx, edi; mov eax, 0x7a; syscall; 
0x000000001192e1: nop edx, edi; mov eax, 0x7b; syscall; 
0x000000000dfe41: nop edx, edi; mov eax, 0x7c; syscall; 
0x00000000119c51: nop edx, edi; mov eax, 0x7d; syscall; 
0x00000000119c81: nop edx, edi; mov eax, 0x7e; syscall; 
0x000000000421c1: nop edx, edi; mov eax, 0x83; syscall; 
0x0000000011a071: nop edx, edi; mov eax, 0x86; syscall; 
0x000000001194e1: nop edx, edi; mov eax, 0x87; syscall; 
0x00000000108591: nop edx, edi; mov eax, 0x89; syscall; 
0x00000000108de1: nop edx, edi; mov eax, 0x8; syscall; 
0x000000001085c1: nop edx, edi; mov eax, 0x8a; syscall; 
0x0000000010f141: nop edx, edi; mov eax, 0x8c; syscall; 
0x0000000010f181: nop edx, edi; mov eax, 0x8d; syscall; 
0x000000000fd171: nop edx, edi; mov eax, 0x8e; syscall; 
0x000000000fd1a1: nop edx, edi; mov eax, 0x8f; syscall; 
0x000000000fd1d1: nop edx, edi; mov eax, 0x90; syscall; 
0x000000000fd201: nop edx, edi; mov eax, 0x91; syscall; 
0x000000000fd261: nop edx, edi; mov eax, 0x92; syscall; 
0x000000000fd291: nop edx, edi; mov eax, 0x93; syscall; 
0x000000000fd2c1: nop edx, edi; mov eax, 0x94; syscall; 
0x00000000113a41: nop edx, edi; mov eax, 0x95; syscall; 
0x00000000113a71: nop edx, edi; mov eax, 0x96; syscall; 
0x00000000113aa1: nop edx, edi; mov eax, 0x97; syscall; 
0x00000000113ad1: nop edx, edi; mov eax, 0x98; syscall; 
0x00000000110591: nop edx, edi; mov eax, 0x99; syscall; 
0x00000000119be1: nop edx, edi; mov eax, 0x9a; syscall; 
0x00000000119f81: nop edx, edi; mov eax, 0x9b; syscall; 
0x00000000119bb1: nop edx, edi; mov eax, 0x9e; syscall; 
0x000000001100d1: nop edx, edi; mov eax, 0xa1; syscall; 
0x00000000110191: nop edx, edi; mov eax, 0xa2; syscall; 
0x000000001100a1: nop edx, edi; mov eax, 0xa3; syscall; 
0x00000000119251: nop edx, edi; mov eax, 0xa6; syscall; 
0x000000001105c1: nop edx, edi; mov eax, 0xa7; syscall; 
0x000000001105f1: nop edx, edi; mov eax, 0xa8; syscall; 
0x000000001138e1: nop edx, edi; mov eax, 0xa; syscall; 
0x0000000010fd51: nop edx, edi; mov eax, 0xaa; syscall; 
0x0000000010fe91: nop edx, edi; mov eax, 0xab; syscall; 
0x000000001191a1: nop edx, edi; mov eax, 0xac; syscall; 
0x00000000119171: nop edx, edi; mov eax, 0xad; syscall; 
0x00000000119cb1: nop edx, edi; mov eax, 0xae; syscall; 
0x00000000119ce1: nop edx, edi; mov eax, 0xb0; syscall; 
0x00000000119da1: nop edx, edi; mov eax, 0xb1; syscall; 
0x00000000119f51: nop edx, edi; mov eax, 0xb4; syscall; 
0x000000001138b1: nop edx, edi; mov eax, 0xb; syscall; 
0x0000000011a1f1: nop edx, edi; mov eax, 0xba; syscall; 
0x00000000119281: nop edx, edi; mov eax, 0xbb; syscall; 
0x00000000116f11: nop edx, edi; mov eax, 0xc2; syscall; 
0x00000000116f71: nop edx, edi; mov eax, 0xc3; syscall; 
0x00000000116e51: nop edx, edi; mov eax, 0xc4; syscall; 
0x00000000117001: nop edx, edi; mov eax, 0xc5; syscall; 
0x00000000116fa1: nop edx, edi; mov eax, 0xc6; syscall; 
0x00000000116e81: nop edx, edi; mov eax, 0xc7; syscall; 
0x000000000ccd81: nop edx, edi; mov eax, 0xc9; syscall; 
0x0000000010f221: nop edx, edi; mov eax, 0xc; syscall; 
0x000000000fd361: nop edx, edi; mov eax, 0xcb; syscall; 
0x00000000119d11: nop edx, edi; mov eax, 0xd5; syscall; 
0x00000000119c11: nop edx, edi; mov eax, 0xe4; syscall; 
0x0000000011a201: nop edx, edi; mov eax, 0xea; syscall; 
0x00000000119e31: nop edx, edi; mov eax, 0xfd; syscall; 
0x00000000119e01: nop edx, edi; mov eax, 0xfe; syscall; 
0x00000000119e91: nop edx, edi; mov eax, 0xff; syscall; 
0x0000000008e4b1: nop edx, edi; mov eax, 0xffffffff; ret; 
0x00000000107bc1: nop edx, edi; mov eax, [rdi+0x108]; mov [rsi], eax; xor eax, eax; ret; 
0x0000000008fb71: nop edx, edi; mov eax, [rdi+0x10]; sub eax, [rsi+0x10]; ret; 
0x00000000107bb1: nop edx, edi; mov eax, [rdi+0x10c]; mov [rsi], eax; xor eax, eax; ret; 
0x000000001515c1: nop edx, edi; mov eax, [rdi+0x28]; ret; 
0x00000000090df1: nop edx, edi; mov eax, [rdi+0x4]; mov [rsi], eax; xor eax, eax; ret; 
0x0000000010e621: nop edx, edi; mov eax, [rdi+0x8]; and eax, 0x100f; ret; 
0x00000000089611: nop edx, edi; mov eax, [rdi]; and eax, 0x200; ret; 
0x000000000895e1: nop edx, edi; mov eax, [rdi]; and eax, 0x804; ret; 
0x00000000090de1: nop edx, edi; mov eax, [rdi]; mov [rsi], eax; xor eax, eax; ret; 
0x000000000da1d1: nop edx, edi; mov eax, [rdi]; ret; 
0x0000000008a421: nop edx, edi; mov eax, [rdi]; shr eax, 0x4; and eax, 0x1; ret; 
0x0000000008a431: nop edx, edi; mov eax, [rdi]; shr eax, 0x5; and eax, 0x1; ret; 
0x000000000425c1: nop edx, edi; mov eax, [rip+0x1a0bde]; ret; 
0x000000000425b1: nop edx, edi; mov eax, [rip+0x1a0bf2]; ret; 
0x00000000141bd1: nop edx, edi; mov eax, [rip+0xa7126]; test eax, eax; je short 0x0000000000141be0; ret; 
0x00000000107c61: nop edx, edi; mov eax, [rsi]; mov [rdi+0x108], eax; xor eax, eax; ret; 
0x00000000038d71: nop edx, edi; mov eax, edi; and eax, 0x7f; ret; 
0x000000001297a1: nop edx, edi; mov eax, edi; bswap eax; ret; 
0x000000001297b1: nop edx, edi; mov eax, edi; rol ax, 0x8; ret; 
0x00000000108ca1: nop edx, edi; mov eax, fs:[0x18]; test eax, eax; jne short 0x0000000000108cc0; syscall; 
0x00000000135431: nop edx, edi; mov edi, [rdi]; mov eax, 0x3; syscall; 
0x00000000157de1: nop edx, edi; mov edi, [rip+0x8b662]; test edi, edi; jns short 0x0000000000157df0; ret; 
0x00000000041bf1: nop edx, edi; mov esi, 0x8; mov eax, 0x7f; syscall; 
0x0000000015cef1: nop edx, edi; mov qword ptr [rcx], 0x0; mov eax, 0xffffffff; ret; 
0x0000000008ff41: nop edx, edi; mov qword ptr [rip+0x156721], 0x0; mov qword ptr [rip+0x15671e], 0x0; ret; 
0x0000000010a0a1: nop edx, edi; mov r10, rcx; mov eax, 0x104; syscall; 
0x00000000060ff1: nop edx, edi; mov r10, rcx; mov eax, 0x108; syscall; 
0x0000000010a891: nop edx, edi; mov r10, rcx; mov eax, 0x109; syscall; 
0x0000000010a951: nop edx, edi; mov r10, rcx; mov eax, 0x10b; syscall; 
0x0000000010e5b1: nop edx, edi; mov r10, rcx; mov eax, 0x11; syscall; 
0x00000000119a31: nop edx, edi; mov r10, rcx; mov eax, 0x11e; syscall; 
0x00000000119c21: nop edx, edi; mov r10, rcx; mov eax, 0x12d; syscall; 
0x000000001194b1: nop edx, edi; mov r10, rcx; mov eax, 0x12e; syscall; 
0x0000000011a101: nop edx, edi; mov r10, rcx; mov eax, 0x12f; syscall; 
0x00000000119b01: nop edx, edi; mov r10, rcx; mov eax, 0x136; syscall; 
0x00000000119b41: nop edx, edi; mov r10, rcx; mov eax, 0x137; syscall; 
0x00000000119f21: nop edx, edi; mov r10, rcx; mov eax, 0x19; syscall; 
0x0000000010dc91: nop edx, edi; mov r10, rcx; mov eax, 0x28; syscall; 
0x0000000011a961: nop edx, edi; mov r10, rcx; mov eax, 0x35; syscall; 
0x0000000011a8d1: nop edx, edi; mov r10, rcx; mov eax, 0x36; syscall; 
0x0000000011a421: nop edx, edi; mov r10, rcx; mov eax, 0x37; syscall; 
0x00000000119ef1: nop edx, edi; mov r10, rcx; mov eax, 0xa5; syscall; 
0x00000000119dd1: nop edx, edi; mov r10, rcx; mov eax, 0xaf; syscall; 
0x00000000119fb1: nop edx, edi; mov r10, rcx; mov eax, 0xb2; syscall; 
0x00000000119fe1: nop edx, edi; mov r10, rcx; mov eax, 0xb3; syscall; 
0x00000000117031: nop edx, edi; mov r10, rcx; mov eax, 0xbc; syscall; 
0x00000000116fd1: nop edx, edi; mov r10, rcx; mov eax, 0xbd; syscall; 
0x00000000116eb1: nop edx, edi; mov r10, rcx; mov eax, 0xbe; syscall; 
0x00000000116ee1: nop edx, edi; mov r10, rcx; mov eax, 0xbf; syscall; 
0x00000000116f41: nop edx, edi; mov r10, rcx; mov eax, 0xc0; syscall; 
0x00000000116e21: nop edx, edi; mov r10, rcx; mov eax, 0xc1; syscall; 
0x00000000113a11: nop edx, edi; mov r10, rcx; mov eax, 0xd8; syscall; 
0x0000000011b231: nop edx, edi; mov r10, rcx; mov eax, 0xdc; syscall; 
0x00000000119d71: nop edx, edi; mov r10, rcx; mov eax, 0xe9; syscall; 
0x0000000010dd91: nop edx, edi; mov r10d, ecx; mov eax, 0x118; syscall; 
0x00000000108411: nop edx, edi; mov r10d, ecx; mov eax, 0x14c; syscall; 
0x0000000010d7d1: nop edx, edi; mov r10d, ecx; mov eax, 0xdd; syscall; 
0x000000001193e1: nop edx, edi; mov r10d, edx; mov eax, 0x121; mov edx, 0x8; syscall; 
0x0000000008ef21: nop edx, edi; mov rax, 0xffffffffffffffff; ret; 
0x00000000151141: nop edx, edi; mov rax, [rdi+0x18]; sub rax, [rdi+0x20]; ret; 
0x0000000008fe61: nop edx, edi; mov rax, [rdi+0x68]; ret; 
0x00000000083df1: nop edx, edi; mov rax, [rdi+0xa0]; cmp qword ptr [rax+0x30], 0x0; je short 0x0000000000083e08; ret; 
0x000000000923c1: nop edx, edi; mov rax, [rdi]; cmp rax, 0x2000000; jbe short 0x00000000000923d0; ret; 
0x00000000092101: nop edx, edi; mov rax, [rdi]; cmp rax, 0x408; jbe short 0x0000000000092110; ret; 
0x00000000092421: nop edx, edi; mov rax, [rdi]; cmp rax, 0xa0; jbe short 0x0000000000092430; ret; 
0x00000000092141: nop edx, edi; mov rax, [rdi]; cmp rax, 0xffff; jbe short 0x0000000000092150; ret; 
0x00000000092161: nop edx, edi; mov rax, [rdi]; nop; mov [rip+0x151179], rax; ret; 
0x000000000920f1: nop edx, edi; mov rax, [rdi]; nop; mov [rip+0x151199], rax; ret; 
0x000000000920e1: nop edx, edi; mov rax, [rdi]; nop; mov [rip+0x1511b1], rax; ret; 
0x00000000092411: nop edx, edi; mov rax, [rdi]; nop; mov [rip+0x154a66], eax; ret; 
0x0000000008fe41: nop edx, edi; mov rax, [rip+0x154775]; ret; 
0x00000000042411: nop edx, edi; mov rax, [rip+0x1a0a2d]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x00000000038f61: nop edx, edi; mov rax, [rip+0x1a9e65]; add rax, fs:[0x0]; ret; 
0x00000000038f81: nop edx, edi; mov rax, [rip+0x1a9f3d]; add rax, fs:[0x0]; ret; 
0x00000000038fa1: nop edx, edi; mov rax, [rip+0x1a9f55]; add rax, fs:[0x0]; ret; 
0x00000000034021: nop edx, edi; mov rax, [rip+0x1b1685]; ret; 
0x00000000029031: nop edx, edi; mov rax, [rip+0x1b9e0d]; add rax, fs:[0x0]; ret; 
0x0000000002a6d1: nop edx, edi; mov rax, [rip+0x1baf95]; ret; 
0x0000000002a6c1: nop edx, edi; mov rax, [rip+0x1baf9d]; ret; 
0x0000000015cec1: nop edx, edi; mov rax, [rip+0x85f7d]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x0000000015cea1: nop edx, edi; mov rax, [rip+0x85f9d]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x0000000015cd71: nop edx, edi; mov rax, [rip+0x860cd]; mov dword ptr fs:[rax], 0x26; mov rax, 0xffffffffffffffff; ret; 
0x0000000015c871: nop edx, edi; mov rax, [rip+0x865cd]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x0000000015c851: nop edx, edi; mov rax, [rip+0x865ed]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x0000000015c811: nop edx, edi; mov rax, [rip+0x8662d]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x0000000015c7f1: nop edx, edi; mov rax, [rip+0x8664d]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x0000000015c7d1: nop edx, edi; mov rax, [rip+0x8666d]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x0000000015c7b1: nop edx, edi; mov rax, [rip+0x8668d]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x0000000015a851: nop edx, edi; mov rax, [rip+0x885ed]; mov dword ptr fs:[rax], 0x26; xor eax, eax; ret; 
0x00000000159881: nop edx, edi; mov rax, [rip+0x895ad]; jmp qword ptr [rax+0x280]; 
0x00000000156781: nop edx, edi; mov rax, [rip+0x8c6bd]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x0000000014cdb1: nop edx, edi; mov rax, [rip+0x95fad]; lea rdx, [rip+0x9c13e]; mov fs:[rax], rdx; ret; 
0x0000000013c021: nop edx, edi; mov rax, [rip+0xa6fbd]; mov rax, fs:[rax]; ret; 
0x0000000013dd51: nop edx, edi; mov rax, [rip+0xaae45]; test rax, rax; jne short 0x000000000013dd68; ret; 
0x00000000129b61: nop edx, edi; mov rax, [rip+0xb92c5]; add rax, fs:[0x0]; ret; 
0x0000000011c971: nop edx, edi; mov rax, [rip+0xc64bd]; mov eax, [rax+0x38]; ret; 
0x0000000011a231: nop edx, edi; mov rax, [rip+0xc8c0d]; mov dword ptr fs:[rax], 0x26; mov rax, 0xffffffffffffffff; ret; 
0x00000000110571: nop edx, edi; mov rax, [rip+0xd28cd]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x00000000038f11: nop edx, edi; mov rax, [rsi+0x70]; movsxd rdi, edi; mov eax, [rax+rdi*4]; ret; 
0x00000000038f21: nop edx, edi; mov rax, [rsi+0x78]; movsxd rdi, edi; mov eax, [rax+rdi*4]; ret; 
0x00000000091951: nop edx, edi; mov rax, fs:[0x10]; ret; 
0x000000000454f1: nop edx, edi; mov rax, rdi; cqo; idiv rsi; ret; 
0x0000000008fe71: nop edx, edi; mov rax, rdi; ret; 
0x0000000015c731: nop edx, edi; mov rdx, rsi; mov eax, 0xcb; mov esi, 0x80; syscall; 
0x0000000015c6c1: nop edx, edi; mov rdx, rsi; mov eax, 0xcc; mov esi, 0x80; syscall; 
0x000000000cd041: nop edx, edi; mov rsi, rdi; mov eax, 0xa4; xor edi, edi; syscall; 
0x000000000412f1: nop edx, edi; movmskps eax, xmm0; and eax, 0x8; ret; 
0x000000001072a1: nop edx, edi; movzx eax, word ptr [rdi]; mov [rsi], ax; xor eax, eax; ret; 
0x00000000040f01: nop edx, edi; pand xmm1, [rip+0x175854]; pand xmm0, [rip+0x17585c]; por xmm0, xmm1; ret; 
0x00000000040a91: nop edx, edi; pmovmskb eax, xmm0; and eax, 0x80; ret; 
0x00000000040db1: nop edx, edi; pmovmskb eax, xmm0; and eax, 0x8; ret; 
0x000000000deae1: nop edx, edi; pop rdi; mov eax, 0x3a; syscall; 
0x00000000028bb1: nop edx, edi; ret; 
0x00000000119891: nop edx, edi; test edx, edx; je short 0x00000000001198c8; mov eax, 0x145; syscall; 
0x000000000b8241: nop edx, edi; test rdx, rdx; jne short 0x00000000000b824d; mov rax, rdi; ret; 
0x000000000ae051: nop edx, edi; test rsi, rsi; jne short 0x00000000000ae05d; xor rax, rax; ret; 
0x000000000cb691: nop edx, edi; test rsi, rsi; jne short 0x00000000000cb69d; xor rax, rax; ret; 
0x000000000cce91: nop edx, edi; test rsi, rsi; jne short 0x00000000000ccec8; mov eax, 0x60; syscall; 
0x00000000038d81: nop edx, edi; xor eax, eax; and edi, 0xffffff80; sete al; ret; 
0x00000000091341: nop edx, edi; xor eax, eax; cmp rdi, rsi; sete al; ret; 
0x0000000008eea1: nop edx, edi; xor eax, eax; ret; 
0x0000000010e581: nop edx, edi; xor eax, eax; syscall; 
0x000000000895f1: nop edx, edi; xor eax, eax; test byte ptr [rdi], 0x4; sete al; ret; 
0x00000000089601: nop edx, edi; xor eax, eax; test byte ptr [rdi], 0x8; sete al; ret; 
0x0000000008ce41: nop edx, edi; xor eax, eax; test rdx, rdx; jne short 0x000000000008ce50; ret; 
0x0000000011b2d1: nop edx, edi; xor r10d, r10d; mov eax, 0x1d; syscall; 
0x0000000008d5a3: nop; adc eax, 0x1f88300; jg short 0x000000000008d5db; ret; 
0x000000000e7451: nop; add [rax], al; add [rax-0x77], cl; ret far; 
0x00000000041d3f: nop; add [rax], al; add [rbx+0x5d], bl; pop r12; ret; 
0x00000000085399: nop; add [rax], al; add [rcx+0x1], cl; ret; 
0x00000000086230: nop; add [rax], al; add cl, ch; ret far; 
0x0000000009c206: nop; add [rax], al; lea rdx, [rip+0xc0d00]; cmovne rax, rdx; ret; 
0x0000000018db8c: nop; add [rax], eax; add [rax-0x7d], cl; ret far; 
0x0000000010fe35: nop; add [rax], eax; add [rbx+0x5d], bl; pop r12; ret; 
0x00000000156f05: nop; add [rax], eax; add [rcx+rcx*4-0x40], cl; pop rbp; ret; 
0x000000000d57fc: nop; add [rax], eax; add cl, ch; ret far; 
0x0000000018e2cc: nop; add al, [rax]; add [rcx-0x7d], al; ret far; 
0x0000000006116f: nop; add dword ptr [rdx+0x4], 0x1; xor eax, eax; ret; 
0x000000000a4e29: nop; add rdx, r8; notrack jmp rdx; 
0x000000000910af: nop; and eax, 0xfffffffd; mov [rdi+0x8], eax; xor eax, eax; ret; 
0x00000000040bff: nop; and esi, 0x80000000; mov [rdi], esi; ret; 
0x000000000a892f: nop; bsr eax, eax; add rax, rdi; ret; 
0x0000000014fa3f: nop; cmp eax, 0x1; jne short 0x000000000014fa35; mov rax, [rdi+0x8]; jmp qword ptr [rax]; 
0x000000000e0b2f: nop; cmp rax, 0x517b; jne short 0x00000000000e0b40; mov eax, 0x40; ret; 
0x000000001515af: nop; endbr64; add [rdi+0x28], edx; mov eax, 0x1; ret; 
0x0000000015159f: nop; endbr64; add dword ptr [rdi+0x28], 0x4; mov eax, 0x1; ret; 
0x0000000008a40f: nop; endbr64; and dword ptr [rdi], 0xffffffcf; ret; 
0x0000000010894f: nop; endbr64; mov eax, 0x102; syscall; 
0x0000000010a9af: nop; endbr64; mov eax, 0x107; syscall; 
0x0000000010a8ef: nop; endbr64; mov eax, 0x10a; syscall; 
0x0000000011a03f: nop; endbr64; mov eax, 0x110; syscall; 
0x0000000011a09f: nop; endbr64; mov eax, 0x11b; syscall; 
0x000000001199ff: nop; endbr64; mov eax, 0x11f; syscall; 
0x00000000119d3f: nop; endbr64; mov eax, 0x123; syscall; 
0x000000001095cf: nop; endbr64; mov eax, 0x124; syscall; 
0x0000000010962f: nop; endbr64; mov eax, 0x125; syscall; 
0x00000000119e5f: nop; endbr64; mov eax, 0x126; syscall; 
0x0000000011a0cf: nop; endbr64; mov eax, 0x12c; syscall; 
0x00000000119b7f: nop; endbr64; mov eax, 0x131; syscall; 
0x0000000011a15f: nop; endbr64; mov eax, 0x13f; syscall; 
0x0000000011a18f: nop; endbr64; mov eax, 0x14a; syscall; 
0x0000000011a1bf: nop; endbr64; mov eax, 0x14b; syscall; 
0x000000001095ff: nop; endbr64; mov eax, 0x16; syscall; 
0x000000000fd22f: nop; endbr64; mov eax, 0x18; syscall; 
0x0000000010e5ef: nop; endbr64; mov eax, 0x1; syscall; 
0x000000001139df: nop; endbr64; mov eax, 0x1b; syscall; 
0x0000000010959f: nop; endbr64; mov eax, 0x21; syscall; 
0x000000000d01df: nop; endbr64; mov eax, 0x24; syscall; 
0x000000000dfaff: nop; endbr64; mov eax, 0x27; syscall; 
0x0000000011a92f: nop; endbr64; mov eax, 0x29; syscall; 
0x000000001479ef: nop; endbr64; mov eax, 0x2; ret; 
0x0000000011a3ef: nop; endbr64; mov eax, 0x33; syscall; 
0x0000000010971f: nop; endbr64; mov eax, 0x51; syscall; 
0x00000000060fbf: nop; endbr64; mov eax, 0x52; syscall; 
0x0000000010891f: nop; endbr64; mov eax, 0x53; syscall; 
0x0000000010a9df: nop; endbr64; mov eax, 0x54; syscall; 
0x0000000010a91f: nop; endbr64; mov eax, 0x59; syscall; 
0x0000000010871f: nop; endbr64; mov eax, 0x5b; syscall; 
0x0000000010a00f: nop; endbr64; mov eax, 0x5c; syscall; 
0x0000000010a03f: nop; endbr64; mov eax, 0x5d; syscall; 
0x0000000010a06f: nop; endbr64; mov eax, 0x5e; syscall; 
0x000000000de57f: nop; endbr64; mov eax, 0x64; syscall; 
0x00000000119ebf: nop; endbr64; mov eax, 0x67; syscall; 
0x000000000dfddf: nop; endbr64; mov eax, 0x6d; syscall; 
0x000000000dfe0f: nop; endbr64; mov eax, 0x6f; syscall; 
0x000000000dfe6f: nop; endbr64; mov eax, 0x70; syscall; 
0x000000000dfe9f: nop; endbr64; mov eax, 0x76; syscall; 
0x000000000dfecf: nop; endbr64; mov eax, 0x78; syscall; 
0x000000000dfdaf: nop; endbr64; mov eax, 0x79; syscall; 
0x000000001192df: nop; endbr64; mov eax, 0x7b; syscall; 
0x00000000119c7f: nop; endbr64; mov eax, 0x7e; syscall; 
0x0000000011a06f: nop; endbr64; mov eax, 0x86; syscall; 
0x000000001085bf: nop; endbr64; mov eax, 0x8a; syscall; 
0x000000000fd19f: nop; endbr64; mov eax, 0x8f; syscall; 
0x000000000fd1cf: nop; endbr64; mov eax, 0x90; syscall; 
0x000000000fd1ff: nop; endbr64; mov eax, 0x91; syscall; 
0x000000000fd25f: nop; endbr64; mov eax, 0x92; syscall; 
0x000000000fd28f: nop; endbr64; mov eax, 0x93; syscall; 
0x000000000fd2bf: nop; endbr64; mov eax, 0x94; syscall; 
0x00000000113a6f: nop; endbr64; mov eax, 0x96; syscall; 
0x00000000113a9f: nop; endbr64; mov eax, 0x97; syscall; 
0x00000000113acf: nop; endbr64; mov eax, 0x98; syscall; 
0x00000000119bdf: nop; endbr64; mov eax, 0x9a; syscall; 
0x00000000119f7f: nop; endbr64; mov eax, 0x9b; syscall; 
0x000000001100cf: nop; endbr64; mov eax, 0xa1; syscall; 
0x000000001105bf: nop; endbr64; mov eax, 0xa7; syscall; 
0x000000001105ef: nop; endbr64; mov eax, 0xa8; syscall; 
0x000000001138df: nop; endbr64; mov eax, 0xa; syscall; 
0x0000000010fd4f: nop; endbr64; mov eax, 0xaa; syscall; 
0x0000000011919f: nop; endbr64; mov eax, 0xac; syscall; 
0x00000000119caf: nop; endbr64; mov eax, 0xae; syscall; 
0x00000000119cdf: nop; endbr64; mov eax, 0xb0; syscall; 
0x000000001138af: nop; endbr64; mov eax, 0xb; syscall; 
0x0000000011a1ef: nop; endbr64; mov eax, 0xba; syscall; 
0x00000000116f9f: nop; endbr64; mov eax, 0xc6; syscall; 
0x00000000116e7f: nop; endbr64; mov eax, 0xc7; syscall; 
0x000000000ccd7f: nop; endbr64; mov eax, 0xc9; syscall; 
0x0000000010f21f: nop; endbr64; mov eax, 0xc; syscall; 
0x00000000119d0f: nop; endbr64; mov eax, 0xd5; syscall; 
0x00000000119c0f: nop; endbr64; mov eax, 0xe4; syscall; 
0x00000000119e2f: nop; endbr64; mov eax, 0xfd; syscall; 
0x00000000119e8f: nop; endbr64; mov eax, 0xff; syscall; 
0x0000000013542f: nop; endbr64; mov edi, [rdi]; mov eax, 0x3; syscall; 
0x00000000041bef: nop; endbr64; mov esi, 0x8; mov eax, 0x7f; syscall; 
0x0000000010a09f: nop; endbr64; mov r10, rcx; mov eax, 0x104; syscall; 
0x0000000010a88f: nop; endbr64; mov r10, rcx; mov eax, 0x109; syscall; 
0x0000000010a94f: nop; endbr64; mov r10, rcx; mov eax, 0x10b; syscall; 
0x0000000011a0ff: nop; endbr64; mov r10, rcx; mov eax, 0x12f; syscall; 
0x00000000119b3f: nop; endbr64; mov r10, rcx; mov eax, 0x137; syscall; 
0x0000000011a95f: nop; endbr64; mov r10, rcx; mov eax, 0x35; syscall; 
0x0000000011a8cf: nop; endbr64; mov r10, rcx; mov eax, 0x36; syscall; 
0x0000000011a41f: nop; endbr64; mov r10, rcx; mov eax, 0x37; syscall; 
0x00000000119eef: nop; endbr64; mov r10, rcx; mov eax, 0xa5; syscall; 
0x00000000119dcf: nop; endbr64; mov r10, rcx; mov eax, 0xaf; syscall; 
0x00000000119faf: nop; endbr64; mov r10, rcx; mov eax, 0xb2; syscall; 
0x0000000011702f: nop; endbr64; mov r10, rcx; mov eax, 0xbc; syscall; 
0x00000000116fcf: nop; endbr64; mov r10, rcx; mov eax, 0xbd; syscall; 
0x00000000116eaf: nop; endbr64; mov r10, rcx; mov eax, 0xbe; syscall; 
0x00000000116f3f: nop; endbr64; mov r10, rcx; mov eax, 0xc0; syscall; 
0x00000000113a0f: nop; endbr64; mov r10, rcx; mov eax, 0xd8; syscall; 
0x00000000119d6f: nop; endbr64; mov r10, rcx; mov eax, 0xe9; syscall; 
0x0000000010dd8f: nop; endbr64; mov r10d, ecx; mov eax, 0x118; syscall; 
0x0000000008ef1f: nop; endbr64; mov rax, 0xffffffffffffffff; ret; 
0x00000000038f5f: nop; endbr64; mov rax, [rip+0x1a9e65]; add rax, fs:[0x0]; ret; 
0x0000000013c01f: nop; endbr64; mov rax, [rip+0xa6fbd]; mov rax, fs:[rax]; ret; 
0x000000000412ef: nop; endbr64; movmskps eax, xmm0; and eax, 0x8; ret; 
0x00000000040daf: nop; endbr64; pmovmskb eax, xmm0; and eax, 0x8; ret; 
0x00000000028baf: nop; endbr64; ret; 
0x0000000008ee9f: nop; endbr64; xor eax, eax; ret; 
0x000000001592a4: nop; fwait; or [rax], al; call qword ptr [rax+0x288]; 
0x000000000313bc: nop; jbe short 0x00000000000313bf; add [rbp-0x77], cl; ret; 
0x0000000004168d: nop; jmp rdx; 
0x0000000018a83f: nop; lea rax, [rdi+0x1]; ret; 
0x0000000018a82f: nop; lea rax, [rdi]; ret; 
0x000000000784ad: nop; lea rdx, [rip-0x3e9]; add rax, rdx; jmp rax; 
0x00000000084846: nop; mov [rax], rdx; xor eax, eax; ret; 
0x0000000017221f: nop; mov [rcx], dx; mov [rcx+0x2], dl; ret; 
0x0000000017220f: nop; mov [rcx], dx; ret; 
0x0000000017223f: nop; mov [rcx], edx; mov [rcx+0x4], dl; ret; 
0x0000000017227f: nop; mov [rcx], rdx; mov [rcx+0x8], dl; ret; 
0x000000000b415f: nop; mov [rdi-0x1], edx; ret; 
0x000000000b414f: nop; mov [rdi], dx; ret; 
0x000000000b417f: nop; mov [rdi], edx; mov [rdi+0x4], dl; ret; 
0x000000000b416f: nop; mov [rdi], edx; ret; 
0x000000000b41bf: nop; mov [rdi], rdx; mov [rdi+0x8], dl; ret; 
0x00000000092167: nop; mov [rip+0x151179], rax; ret; 
0x00000000092150: nop; mov [rip+0x151188], rax; ret; 
0x000000000920f7: nop; mov [rip+0x151199], rax; ret; 
0x000000000920e7: nop; mov [rip+0x1511b1], rax; ret; 
0x00000000092417: nop; mov [rip+0x154a66], eax; ret; 
0x00000000107ac5: nop; mov al, 0x0; add [rax], al; call qword ptr [rax+0x88]; 
0x0000000017455f: nop; mov al, [rcx]; mov [rdx], al; lea rax, [rdx]; ret; 
0x000000000e7daf: nop; mov byte ptr [rdi+0x8], 0x2; xor eax, eax; ret; 
0x000000000a4e3f: nop; mov byte ptr [rdi], 0x0; lea rax, [rdi+rax-0x1]; ret; 
0x0000000016157f: nop; mov dl, [rsi-0x1]; mov [rdi-0x1], dl; ret; 
0x000000000b55cf: nop; mov dl, [rsi]; mov [rdi], dl; lea rax, [rdi+0x1]; ret; 
0x00000000146f4f: nop; mov dword ptr [r8+0x4], 0x0; mov eax, 0x1; ret; 
0x000000000923f7: nop; mov dword ptr [rip+0x150eb2], 0x1; mov [rip+0x150ea4], eax; ret; 
0x000000000923d0: nop; mov dword ptr [rip+0x150ed9], 0x1; mov [rip+0x150eae], rax; ret; 
0x000000000923a7: nop; mov dword ptr [rip+0x150f02], 0x1; mov [rip+0x150ecf], rax; ret; 
0x00000000092387: nop; mov dword ptr [rip+0x150f22], 0x1; mov [rip+0x150ee7], rax; ret; 
0x0000000016175f: nop; mov dx, [rsi-0x2]; mov [rdi-0x2], dx; ret; 
0x000000000b315f: nop; mov dx, [rsi]; mov [rdi], dx; ret; 
0x0000000009107f: nop; mov eax, 0x16; ret; 
0x000000000e0a6f: nop; mov eax, 0x7e; ret; 
0x0000000013711f: nop; mov eax, 0xffffffff; ret; 
0x00000000146f2f: nop; mov eax, [r8]; mov [rdx], eax; mov eax, 0x1; ret; 
0x00000000142eff: nop; mov eax, [rdi+0x20]; mov dword ptr [rsi], 0x7; mov [rsi+0x8], eax; ret; 
0x000000000cb02f: nop; mov eax, [rdi+0x2c]; cmp eax, [rsi+0x2c]; jne short 0x00000000000cb090; ret; 
0x000000000cb05f: nop; mov eax, [rdi+0x34]; cmp eax, [rsi+0x34]; jne short 0x00000000000cb090; ret; 
0x000000000cb07f: nop; mov eax, [rdi+0x3c]; cmp eax, [rsi+0x3c]; jne short 0x00000000000cb090; ret; 
0x0000000018c55f: nop; mov eax, [rdi-0xc]; cmp eax, [rsi-0xc]; jne 0x000000000018c680; ret; 
0x00000000149ccf: nop; mov eax, [rdi]; mov [r8], eax; mov eax, 0x1; ret; 
0x00000000161b1f: nop; mov edx, [rsi-0x4]; mov [rdi-0x4], edx; ret; 
0x000000000b47bf: nop; mov edx, [rsi]; mov [rdi], edx; lea rax, [rdi+0x3]; ret; 
0x00000000182c1f: nop; mov edx, [rsi]; mov [rdi], edx; vzeroupper; ret; 
0x000000000cbb1f: nop; mov rax, 0x1; ret; 
0x0000000014205f: nop; mov rax, [rbp+0x8]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x0000000014165f: nop; mov rax, [rbx+0x20]; mov rsi, r13; mov rdi, rbp; call qword ptr [rax+0x8]; 
0x000000001502af: nop; mov rax, [rdi+0x8]; call qword ptr [rax+0x10]; 
0x0000000014fb4f: nop; mov rax, [rdi+0x8]; lea rsi, [rsp+0x8]; call qword ptr [rax]; 
0x0000000014fadf: nop; mov rax, [rdi+0x8]; mov rsi, rsp; call qword ptr [rax]; 
0x000000000cc14f: nop; mov rax, [rip+0x116cf1]; mov dword ptr fs:[rax], 0x16; xor eax, eax; ret; 
0x0000000009b5af: nop; mov rax, [rip+0x147979]; call qword ptr [rax]; 
0x0000000004191f: nop; mov rax, [rip+0x1a1521]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000417df: nop; mov rax, [rip+0x1a1661]; mov dword ptr fs:[rax], 0x16; mov rax, 0xffffffffffffffff; ret; 
0x0000000015a6bf: nop; mov rax, [rip+0x88781]; mov dword ptr fs:[rax], 0x16; xor eax, eax; ret; 
0x0000000011709f: nop; mov rax, [rip+0xcbda1]; mov dword ptr fs:[rax], 0x2; xor eax, eax; ret; 
0x0000000011471f: nop; mov rax, [rip+0xce721]; mov dword ptr fs:[rax], 0x16; ret; 
0x000000001106df: nop; mov rax, [rip+0xd2761]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010ba3f: nop; mov rax, [rip+0xd7401]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000018438f: nop; mov rax, rdi; vzeroupper; ret; 
0x0000000002a2c8: nop; mov rdi, rbx; call rax; 
0x000000000b480f: nop; mov rdx, [rsi]; mov [rdi], rdx; lea rax, [rdi+0x7]; ret; 
0x000000000b565f: nop; mov rdx, [rsi]; mov [rdi], rdx; lea rax, [rdi+0x8]; ret; 
0x000000000720bf: nop; mov rdx, r15; mov rsi, r12; mov rdi, rbp; call qword ptr [rax+0x38]; 
0x00000000042cff: nop; mov rdx, rbp; mov rsi, r12; mov rdi, r13; call rbx; 
0x00000000089a4f: nop; mov rsi, rbx; mov edi, 0x2; mov eax, r9d; syscall; 
0x000000000b574f: nop; movdqu xmm0, [rsi]; movdqu [rdi], xmm0; lea rax, [rdi+0x10]; ret; 
0x000000000b48ef: nop; movdqu xmm0, [rsi]; movdqu [rdi], xmm0; lea rax, [rdi+0xf]; ret; 
0x000000000b323f: nop; movdqu xmm0, [rsi]; movdqu [rdi], xmm0; ret; 
0x0000000014a5af: nop; movdqu xmm2, [r8]; mov eax, 0x1; movups [rdi+0x20], xmm2; ret; 
0x0000000014a5bf: nop; movdqu xmm3, [rdi+0x20]; mov eax, 0x1; movups [r8], xmm3; ret; 
0x00000000156d71: nop; nop [rax+rax]; nop [rax]; endbr64; ret; 
0x00000000041940: nop; nop [rax+rax]; nop [rax]; mov rax, 0xf; syscall; 
0x0000000009113f: nop; or dword ptr [rdi+0x8], 0x40; xor eax, eax; mov [rdi+0x4], esi; ret; 
0x000000000acbad: nop; or eax, [rax]; add [rbp-0x77], cl; ret far; 
0x00000000141bbf: nop; pop rbp; ret; 
0x0000000019204f: nop; pop rbx; pop rbp; pop r12; ret; 
0x000000000b7b5f: nop; rep ret; 
0x000000000e97ec: nop; ret far; 
0x000000000363cf: nop; ret; 
0x000000000b8cbc: nop; ror byte ptr [rax+rax], 0x1; cmovne rax, rdx; ret; 
0x0000000004d8c7: nop; std; jmp qword ptr [rsi+0xf]; 
0x0000000012355f: nop; sub eax, edx; ret; 
0x000000000cb55f: nop; test rax, 0x1; je 0x00000000000cb4c5; lea rax, [rdi-0x10]; ret; 
0x0000000017e22f: nop; vzeroupper; xor eax, eax; ret; 
0x000000000611cf: nop; xchg [rdi], eax; cmp eax, 0x1; jg short 0x00000000000611d8; ret; 
0x000000000b721f: nop; xor ch, ch; mov [rdi], ch; ret; 
0x00000000110b7f: nop; xor eax, eax; add rsp, 0x8; ret; 
0x00000000053c9f: nop; xor eax, eax; ret; 
0x0000000012907f: nop; xor r8d, r8d; mov rax, r8; ret; 
0x000000000cb35f: nop; xor rax, rax; ret; 
0x000000001622d6: not byte ptr [rbp+rax]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000144356: not byte ptr [rbx-0x2]; jmp qword ptr [rsi+0xf]; 
0x0000000012144f: not dword ptr [rbx-0x18]; sub dl, [rax-0x10]; dec dword ptr [rax-0x77]; ret; 
0x000000000403f1: not eax; and eax, ecx; ret; 
0x00000000040771: not eax; and eax, edx; ret; 
0x000000001519a9: not eax; shr eax, 0x1f; ret; 
0x0000000003f008: notrack bnd jmp rdx; 
0x0000000003f2ef: notrack jmp r10; 
0x0000000015f941: notrack jmp r9; 
0x00000000028886: notrack jmp rax; 
0x000000000364c3: notrack jmp rcx; 
0x0000000003f009: notrack jmp rdx; 
0x0000000007d78d: notrack jmp rsi; 
0x0000000014a5a3: or [eax+0x1], bh; movups [r8], xmm4; ret; 
0x000000000e7e21: or [r10], r11b; mov eax, 0x2; ret; 
0x000000000e7db1: or [r10], r8b; xor eax, eax; ret; 
0x00000000034828: or [r11+0x1974fdf8], al; pop rbx; ret; 
0x000000000e3ce2: or [r11+0x5d], bl; pop r12; ret; 
0x0000000010d591: or [r11+0x5d], r11b; pop r12; pop r13; pop r14; ret; 
0x00000000099703: or [r11+0x5e7709f8], r8b; lea rdx, [rip+0x10f497]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000090db5: or [r11+0x68901e0], r8b; xor eax, eax; ret; 
0x00000000126ba5: or [r13+0x480d75c0], r8b; cmp dword ptr [rdi], 0x0; je short 0x0000000000126bc0; ret; 
0x00000000143033: or [r14+0x20], r15b; mov rdi, rbp; call qword ptr [rax+0x30]; 
0x000000001430ec: or [r14+0x8], r15b; mov rdi, rbp; call qword ptr [rax+0x30]; 
0x00000000148643: or [r14+0x8], r15b; mov rdi, rbp; mov [r12+0x70], edx; call qword ptr [rax+0x30]; 
0x000000000afca6: or [r14+0xf], spl; adc eax, [rdx]; movlpd [rdx+0x8], xmm1; mov rax, rdi; ret; 
0x000000000b29b0: or [r14+0xf], spl; adc ecx, [rdx+0x8]; mov rax, rdi; ret; 
0x000000000afdbf: or [r14-0x77], spl; or [rax-0x77], cl; clc; ret; 
0x000000000e7da6: or [r14], r10b; mov eax, 0x1; ret; 
0x000000000e7e46: or [r14], r11b; mov eax, 0x2; ret; 
0x0000000008aa80: or [r15], cl; adc [rbx+0x18], eax; movups [rbx+0x28], xmm0; pop rbx; ret; 
0x0000000010df03: or [r15], r9b; adc [rdi+0x20], ecx; ret; 
0x0000000010ec14: or [r8+0x100], r15b; mov [rdi+0x16], ax; ret; 
0x00000000149cab: or [r8+0x1], r15b; movups [r8], xmm1; ret; 
0x0000000014e1c5: or [r8+0x1], r15b; pop rbx; pop rbp; pop r12; ret; 
0x00000000055db7: or [r8+0x2], r15b; ret; 
0x00000000054fbe: or [r8+0x39], r9b; ret; 
0x0000000008ff8c: or [r8+0x39], r9b; shl byte ptr [rbx+0x25], 0x1; movzx eax, byte ptr [rax]; ret; 
0x00000000086665: or [r8+0xf6608cd], r8b; insb [rdi], dx; ret far; 
0x000000000e7e31: or [r8+r15*4], r11b; add al, [rax]; add [rax], al; ret; 
0x00000000055e2b: or [r8-0x3ffe], r15b; sub eax, r8d; mov [rsi], eax; mov eax, 0x2; ret; 
0x00000000148772: or [r8-0x73], r9b; jae short 0x0000000000148790; mov rdi, rbp; call qword ptr [rax+0x48]; 
0x00000000143e30: or [r8-0x73], r9b; je short 0x0000000000143e5a; or [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x8]; 
0x000000001486d3: or [r8-0x73], r9b; je short 0x00000000001486fd; or al, 0x48; mov edi, ebp; call qword ptr [rax+0x48]; 
0x00000000148788: or [r8-0x73], r9b; je short 0x00000000001487b2; or al, 0x48; mov edi, ebp; call qword ptr [rax+0x48]; 
0x0000000014fb61: or [r8-0x73], r9b; je short 0x000000000014fb8b; adc [rax-0x77], cl; out dx, eax; call qword ptr [rax]; 
0x0000000014fbba: or [r8-0x73], r9b; je short 0x000000000014fbe4; adc [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x8]; 
0x0000000014fc51: or [r8-0x73], r9b; je short 0x000000000014fc7b; adc [rax-0x77], cl; out dx, eax; call qword ptr [rax]; 
0x0000000014fcaa: or [r8-0x73], r9b; je short 0x000000000014fcd4; adc [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x8]; 
0x0000000014fd41: or [r8-0x73], r9b; je short 0x000000000014fd6b; adc [rax-0x77], cl; out dx, eax; call qword ptr [rax]; 
0x0000000014fd9a: or [r8-0x73], r9b; je short 0x000000000014fdc4; adc [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x8]; 
0x0000000014fe31: or [r8-0x73], r9b; je short 0x000000000014fe5b; adc [rax-0x77], cl; out dx, eax; call qword ptr [rax]; 
0x0000000014fe8a: or [r8-0x73], r9b; je short 0x000000000014feb4; adc [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x8]; 
0x00000000150af8: or [r8-0x73], r9b; je short 0x0000000000150b22; add al, 0x48; mov edi, ebp; call qword ptr [rax+0x40]; 
0x00000000150b49: or [r8-0x73], r9b; je short 0x0000000000150b73; add al, 0x48; mov edi, ebp; call qword ptr [rax+0x48]; 
0x00000000150be8: or [r8-0x73], r9b; je short 0x0000000000150c12; add al, 0x48; mov edi, ebp; call qword ptr [rax+0x40]; 
0x00000000150c39: or [r8-0x73], r9b; je short 0x0000000000150c63; add al, 0x48; mov edi, ebp; call qword ptr [rax+0x48]; 
0x00000000150cd8: or [r8-0x73], r9b; je short 0x0000000000150d02; add al, 0x48; mov edi, ebp; call qword ptr [rax+0x40]; 
0x00000000150d29: or [r8-0x73], r9b; je short 0x0000000000150d53; add al, 0x48; mov edi, ebp; call qword ptr [rax+0x48]; 
0x00000000150dc8: or [r8-0x73], r9b; je short 0x0000000000150df2; add al, 0x48; mov edi, ebp; call qword ptr [rax+0x40]; 
0x00000000150e19: or [r8-0x73], r9b; je short 0x0000000000150e43; add al, 0x48; mov edi, ebp; call qword ptr [rax+0x48]; 
0x0000000014b64e: or [r8-0x73], r9b; push rsp; and al, 0x18; mov esi, 0x6; call qword ptr [rax+0x28]; 
0x0000000014b6d2: or [r8-0x73], r9b; push rsp; and al, 0xc; mov esi, 0xd; call qword ptr [rax+0x28]; 
0x0000000009b869: or [r8-0x75], r9b; je short 0x000000000009b896; mov rdi, [rbx+0x48]; mov rsi, r14; call rax; 
0x000000000afd9e: or [r8-0x76b7f7be], cl; clc; ret; 
0x00000000170218: or [r8-0x77], cl; or [rax-0x77], cl; clc; ret; 
0x000000001486c2: or [r8-0x77], r9b; fimul st, word ptr [rax-0x77]; out dx, eax; call qword ptr [rax+0x48]; 
0x0000000014da3d: or [r8-0x77], r9b; fimul st, word ptr [rax-0x77]; out dx, eax; call qword ptr [rax]; 
0x00000000151a7f: or [r8-0x77], r9b; ja short 0x0000000000151a9d; mov dword ptr [rdi+0x28], 0x0; mov qword ptr [rdi+0x20], 0x0; ret; 
0x0000000015080f: or [r8-0x77], r9b; out 0x48, al; mov edi, ebp; call qword ptr [rax]; 
0x00000000141f85: or [r8-0x77], r9b; out dx, eax; call qword ptr [rax+0x20]; 
0x0000000014db82: or [r8-0x77], r9b; out dx, eax; call qword ptr [rax+0x28]; 
0x0000000014da22: or [r8-0x77], r9b; out dx, eax; call qword ptr [rax+0x8]; 
0x000000001423ba: or [r8-0x77], r9b; out dx, eax; mov qword ptr [rsp], 0x0; call qword ptr [rax+0x20]; 
0x00000000131731: or [r8-0x7d], r9b; ret; 
0x00000000073081: or [r8], al; add [rax-0x77], cl; fimul st, dword ptr [rcx+rcx*4-0x9]; call qword ptr [r12+0x38]; 
0x0000000005974b: or [r8], r8b; mov [rdi], rax; mov rax, rdi; ret; 
0x0000000014ca28: or [r9+r9*4-0x1], r9b; call qword ptr [rax+0x20]; 
0x00000000143df4: or [r9+rcx*4-0x1a], r9b; mov rdi, rbp; call qword ptr [rax]; 
0x00000000142436: or [r9+rcx*4-0xa], r8b; mov rdi, rbp; call qword ptr [rax+0x28]; 
0x00000000115641: or [r9-0x75], cl; add [rbx+0x94901e0], eax; ret; 
0x00000000148c4c: or [r9-0x75], r9b; jo short 0x0000000000148c92; mov edx, [rsi+0x1c8]; add rsi, 0x38; jmp qword ptr [rax+0x18]; 
0x000000000f9a79: or [r9-0x75], r9b; push rbp; adc [rax+0x63], cl; ret far; 
0x000000000afdfe: or [r9-0x76b7f7be], cl; clc; ret; 
0x00000000143de2: or [r9-0x77], r9b; in al, 0x48; lea esi, [rsp+0x8]; call qword ptr [rax]; 
0x000000000e7d78: or [r9], r11b; mov eax, 0x1; ret; 
0x00000000136258: or [r9], r13b; add [rax], al; add [rcx-0x76b7f3a9], cl; ret; 
0x000000000e7e0b: or [r9], r8b; mov [rdi], al; mov eax, 0x1; ret; 
0x000000000e7ddd: or [r9], r8b; mov eax, 0x1; mov byte ptr [rdi], 0x5b; ret; 
0x000000000e7d96: or [r9], r8b; mov eax, 0x1; ret; 
0x00000000091079: or [r9], r8b; xor eax, eax; ret; 
0x00000000106e1b: or [r9], sil; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x5d], bl; ret; 
0x0000000010ec15: or [rax+0x100], bh; mov [rdi+0x16], ax; ret; 
0x000000001415e3: or [rax+0x10], bh; pop rbx; pop rbp; ret; 
0x00000000119616: or [rax+0x114], bh; syscall; 
0x0000000011937a: or [rax+0x119], bh; mov edi, [rsp+0x4]; syscall; 
0x0000000010e267: or [rax+0x11d], bh; syscall; 
0x0000000010f4e0: or [rax+0x127], bh; syscall; 
0x0000000010f5a0: or [rax+0x128], bh; syscall; 
0x0000000011ad6c: or [rax+0x12b], bh; mov edi, [rsp+0x4]; syscall; 
0x00000000119833: or [rax+0x130], bh; syscall; 
0x0000000010f385: or [rax+0x13], bh; syscall; 
0x00000000046407: or [rax+0x13e], bh; syscall; 
0x0000000010f425: or [rax+0x14], bh; syscall; 
0x00000000149cac: or [rax+0x1], bh; movups [r8], xmm1; ret; 
0x0000000014a5a4: or [rax+0x1], bh; movups [r8], xmm4; ret; 
0x00000000146ebd: or [rax+0x1], bh; movups [rdx], xmm1; ret; 
0x0000000014f863: or [rax+0x1], bh; pop rbp; pop r12; ret; 
0x0000000014e1c6: or [rax+0x1], bh; pop rbx; pop rbp; pop r12; ret; 
0x0000000007fc39: or [rax+0x1], bh; pop rbx; pop rbp; ret; 
0x00000000108d87: or [rax+0x1], bh; syscall; 
0x00000000127839: or [rax+0x1], cl; fcomp st, dword ptr [rbx+0x5d]; pop r12; pop r13; ret; 
0x00000000154332: or [rax+0x1], cl; ret; 
0x00000000146ebc: or [rax+0x1], dil; movups [rdx], xmm1; ret; 
0x00000000113957: or [rax+0x1a], bh; syscall; 
0x00000000107c7a: or [rax+0x1c], edi; syscall; 
0x000000000dcbab: or [rax+0x29], cl; ret; 
0x00000000055db8: or [rax+0x2], bh; ret; 
0x0000000011a363: or [rax+0x2a], bh; syscall; 
0x0000000011a7a5: or [rax+0x2e], bh; syscall; 
0x0000000011a645: or [rax+0x2f], bh; syscall; 
0x00000000145988: or [rax+0x31], cl; ret; 
0x0000000011920d: or [rax+0x38], bh; syscall; 
0x00000000054fbf: or [rax+0x39], cl; ret; 
0x0000000008ff8d: or [rax+0x39], cl; shl byte ptr [rbx+0x25], 0x1; movzx eax, byte ptr [rax]; ret; 
0x00000000158f10: or [rax+0x39], ecx; ret; 
0x000000000e0b37: or [rax+0x40], bh; ret; 
0x000000000599bb: or [rax+0x488d480f], cl; add [rcx+0x39], ecx; ret far; 
0x0000000010920f: or [rax+0x48], bh; syscall; 
0x000000000cfa2e: or [rax+0x63], cl; ret; 
0x0000000010d667: or [rax+0x7], bh; syscall; 
0x0000000013188d: or [rax+0xa], bh; pop rbx; pop rbp; ret; 
0x00000000086666: or [rax+0xf6608cd], al; insb [rdi], dx; ret far; 
0x0000000009e8d7: or [rax+0xf], cl; ret; 
0x0000000009b53b: or [rax+0xffe5063], al; adc [rbx+0x38], eax; movsxd rdi, esi; mov [rbx], rdi; call rcx; 
0x00000000105dbc: or [rax+rax], al; add [rcx-0x80], al; jmp qword ptr [rdx]; 
0x00000000092109: or [rax+rax], al; add [rsi+0x1], dh; ret; 
0x0000000015e4c7: or [rax+rax], edx; add [rbp-0x77], cl; ret far; 
0x0000000010ead6: or [rax+rax], edx; mov eax, 0x10; syscall; 
0x0000000010eb07: or [rax+rax], edx; mov r8d, eax; mov eax, 0x10; syscall; 
0x000000000e7e32: or [rax+rdi*4], bl; add al, [rax]; add [rax], al; ret; 
0x0000000007fc5b: or [rax-0x1], bh; pop rbx; pop rbp; ret; 
0x00000000047bc7: or [rax-0x39], cl; ret; 
0x000000000825b7: or [rax-0x3f], cl; clc; add cl, [rax-0x77]; ret; 
0x000000000dff78: or [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x000000001375a1: or [rax-0x3f], ecx; out 0x4, al; lea r8, [rdi+rsi+0x8]; mov rax, r8; ret; 
0x00000000055e2c: or [rax-0x3ffe], bh; sub eax, r8d; mov [rsi], eax; mov eax, 0x2; ret; 
0x000000000ccf76: or [rax-0x73], cl; adc eax, 0xffffff11; cmove rax, rdx; add rsp, 0x58; ret; 
0x000000000cce56: or [rax-0x73], cl; adc eax, 0xffffff21; cmove rax, rdx; add rsp, 0x58; ret; 
0x000000000ba406: or [rax-0x73], cl; add eax, 0x114a2; lea rdx, [rip+0x1127b]; cmovne rax, rdx; ret; 
0x00000000127700: or [rax-0x73], cl; add eax, 0x381e8; lea rdx, [rip+0x3d771]; cmovne rax, rdx; ret; 
0x00000000127560: or [rax-0x73], cl; add eax, 0x383a8; lea rdx, [rip+0x3d931]; cmovne rax, rdx; ret; 
0x00000000127630: or [rax-0x73], cl; add eax, 0x3acb8; lea rdx, [rip+0x40351]; cmovne rax, rdx; ret; 
0x000000001414c1: or [rax-0x73], cl; add eax, 0xa77d7; ret; 
0x0000000009d730: or [rax-0x73], cl; add eax, 0xc21e8; lea rdx, [rip+0xc7771]; cmovne rax, rdx; ret; 
0x0000000009d3b0: or [rax-0x73], cl; add eax, 0xc2548; lea rdx, [rip+0xc7ad1]; cmovne rax, rdx; ret; 
0x0000000009d250: or [rax-0x73], cl; add eax, 0xc50a8; lea rdx, [rip+0xca741]; cmovne rax, rdx; ret; 
0x00000000119aaf: or [rax-0x73], cl; and al, 0x20; mov [rsp+0x10], rax; mov eax, 0x9d; syscall; 
0x00000000148773: or [rax-0x73], cl; jae short 0x0000000000148790; mov rdi, rbp; call qword ptr [rax+0x48]; 
0x00000000143e31: or [rax-0x73], cl; je short 0x0000000000143e5a; or [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x8]; 
0x000000001486d4: or [rax-0x73], cl; je short 0x00000000001486fd; or al, 0x48; mov edi, ebp; call qword ptr [rax+0x48]; 
0x00000000148789: or [rax-0x73], cl; je short 0x00000000001487b2; or al, 0x48; mov edi, ebp; call qword ptr [rax+0x48]; 
0x0000000014fb62: or [rax-0x73], cl; je short 0x000000000014fb8b; adc [rax-0x77], cl; out dx, eax; call qword ptr [rax]; 
0x0000000014fbbb: or [rax-0x73], cl; je short 0x000000000014fbe4; adc [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x8]; 
0x0000000014fc52: or [rax-0x73], cl; je short 0x000000000014fc7b; adc [rax-0x77], cl; out dx, eax; call qword ptr [rax]; 
0x0000000014fcab: or [rax-0x73], cl; je short 0x000000000014fcd4; adc [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x8]; 
0x0000000014fd42: or [rax-0x73], cl; je short 0x000000000014fd6b; adc [rax-0x77], cl; out dx, eax; call qword ptr [rax]; 
0x0000000014fd9b: or [rax-0x73], cl; je short 0x000000000014fdc4; adc [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x8]; 
0x0000000014fe32: or [rax-0x73], cl; je short 0x000000000014fe5b; adc [rax-0x77], cl; out dx, eax; call qword ptr [rax]; 
0x0000000014fe8b: or [rax-0x73], cl; je short 0x000000000014feb4; adc [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x8]; 
0x00000000150af9: or [rax-0x73], cl; je short 0x0000000000150b22; add al, 0x48; mov edi, ebp; call qword ptr [rax+0x40]; 
0x00000000150b4a: or [rax-0x73], cl; je short 0x0000000000150b73; add al, 0x48; mov edi, ebp; call qword ptr [rax+0x48]; 
0x00000000150be9: or [rax-0x73], cl; je short 0x0000000000150c12; add al, 0x48; mov edi, ebp; call qword ptr [rax+0x40]; 
0x00000000150c3a: or [rax-0x73], cl; je short 0x0000000000150c63; add al, 0x48; mov edi, ebp; call qword ptr [rax+0x48]; 
0x00000000150cd9: or [rax-0x73], cl; je short 0x0000000000150d02; add al, 0x48; mov edi, ebp; call qword ptr [rax+0x40]; 
0x00000000150d2a: or [rax-0x73], cl; je short 0x0000000000150d53; add al, 0x48; mov edi, ebp; call qword ptr [rax+0x48]; 
0x00000000150dc9: or [rax-0x73], cl; je short 0x0000000000150df2; add al, 0x48; mov edi, ebp; call qword ptr [rax+0x40]; 
0x00000000150e1a: or [rax-0x73], cl; je short 0x0000000000150e43; add al, 0x48; mov edi, ebp; call qword ptr [rax+0x48]; 
0x000000000b3a99: or [rax-0x73], cl; jg short 0x00000000000b3aa6; jne 0x00000000000b4270; ret; 
0x000000000b517d: or [rax-0x73], cl; jg short 0x00000000000b518a; jne 0x00000000000b5ac0; ret; 
0x0000000005511c: or [rax-0x73], cl; push rdi; add [rcx-0x77], ecx; push rsp; ret; 
0x0000000005579c: or [rax-0x73], cl; push rsi; add [rcx-0x77], ecx; push rsp; ret; 
0x0000000014b64f: or [rax-0x73], cl; push rsp; and al, 0x18; mov esi, 0x6; call qword ptr [rax+0x28]; 
0x0000000014b6d3: or [rax-0x73], cl; push rsp; and al, 0xc; mov esi, 0xd; call qword ptr [rax+0x28]; 
0x00000000132ad8: or [rax-0x73], ecx; cmp eax, 0xb5a40; call rax; 
0x000000000b3abc: or [rax-0x73], ecx; jg short 0x00000000000b3aca; jne 0x00000000000b4270; ret; 
0x000000000b51a0: or [rax-0x73], ecx; jg short 0x00000000000b51ae; jne 0x00000000000b5ac0; ret; 
0x00000000146e48: or [rax-0x73], ecx; mov ebp, 0xc8; call rax; 
0x00000000172122: or [rax-0x73], ecx; or [rdi], rcx; test [rbx+0x2], esp; add [rax], al; ret; 
0x0000000005390d: or [rax-0x75], cl; adc al, 0xca; mov [rax+rcx*8], rdx; xor eax, eax; ret; 
0x0000000011c9d5: or [rax-0x75], cl; add al, 0x24; add rsp, 0x38; ret; 
0x0000000011ca36: or [rax-0x75], cl; add al, 0x24; add rsp, 0x40; ret; 
0x00000000043a6b: or [rax-0x75], cl; add al, 0x24; mov rsi, r13; mov rdi, r12; call rax; 
0x000000000dfc90: or [rax-0x75], cl; add eax, 0x106b28; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000dfbf0: or [rax-0x75], cl; add eax, 0x106bc8; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000014141e: or [rax-0x75], cl; cmp [rax-0x7b], cl; shl byte ptr [rbp+rax+0x48], 0x89; out dx, eax; call rax; 
0x00000000143432: or [rax-0x75], cl; cmp [rax-0x7b], cl; shl byte ptr [rbp+rax+0x4c], 0x89; out dx, eax; call rax; 
0x00000000143983: or [rax-0x75], cl; jae short 0x0000000000143998; mov rdx, r12; mov rdi, r14; call qword ptr [rax+0x10]; 
0x000000001439bd: or [rax-0x75], cl; jae short 0x00000000001439d2; mov rdx, r12; mov rdi, r14; call qword ptr [rax+0x20]; 
0x0000000009b86a: or [rax-0x75], cl; je short 0x000000000009b896; mov rdi, [rbx+0x48]; mov rsi, r14; call rax; 
0x0000000012af62: or [rax-0x75], cl; jl short 0x000000000012af8b; sbb al, ch; ret; 
0x00000000133186: or [rax-0x75], cl; jl short 0x00000000001331af; cmp al, ch; call far fword ptr [rdx+rax]; 
0x00000000142b09: or [rax-0x75], cl; or al, 0x24; xor eax, eax; mov rdi, rbx; call rcx; 
0x000000000536e5: or [rax-0x75], cl; or al, 0xc1; mov [rdx+rax*8], rcx; xor eax, eax; ret; 
0x000000000963b5: or [rax-0x75], cl; push rbp; or [rax-0x77], cl; ret; 
0x0000000009b922: or [rax-0x75], cl; test byte ptr [rbx+0x50], 0x1; jne short 0x000000000009b900; mov rdi, rsi; call rax; 
0x00000000089ac3: or [rax-0x75], cl; xor ecx, [rax-0x7d]; ret; 
0x0000000007f39c: or [rax-0x75], ecx; mov edi, 0xe0; jmp rax; 
0x00000000143982: or [rax-0x75], r9b; jae short 0x0000000000143998; mov rdx, r12; mov rdi, r14; call qword ptr [rax+0x10]; 
0x000000001439bc: or [rax-0x75], r9b; jae short 0x00000000001439d2; mov rdx, r12; mov rdi, r14; call qword ptr [rax+0x20]; 
0x000000000afd9f: or [rax-0x76b7f7be], cl; clc; ret; 
0x0000000014b763: or [rax-0x77], cl; add al, 0x24; call qword ptr [rdx+0x20]; 
0x000000001125ab: or [rax-0x77], cl; add eax, 0xd51dd; mov rax, r8; add rsp, 0x8; ret; 
0x0000000011257b: or [rax-0x77], cl; add eax, 0xd520d; mov rax, r8; ret; 
0x000000000afcaf: or [rax-0x77], cl; clc; ret; 
0x000000001296cc: or [rax-0x77], cl; clc; sar rax, 0x6; ret; 
0x000000000b3ab5: or [rax-0x77], cl; cmovns eax, [rbx-0x72b7f618]; jg short 0x00000000000b3aca; jne 0x00000000000b4270; ret; 
0x0000000007483a: or [rax-0x77], cl; fimul st, dword ptr [rax-0x77]; out dx, eax; call qword ptr [r12+0x38]; 
0x000000001486c3: or [rax-0x77], cl; fimul st, word ptr [rax-0x77]; out dx, eax; call qword ptr [rax+0x48]; 
0x0000000014da3e: or [rax-0x77], cl; fimul st, word ptr [rax-0x77]; out dx, eax; call qword ptr [rax]; 
0x00000000151a80: or [rax-0x77], cl; ja short 0x0000000000151a9d; mov dword ptr [rdi+0x28], 0x0; mov qword ptr [rdi+0x20], 0x0; ret; 
0x000000000b7335: or [rax-0x77], cl; jns 0xffffffffed3b7b95; mov [rdi+0xc], ch; ret; 
0x000000000b72d5: or [rax-0x77], cl; js 0xffffffffed3b7b35; mov [rdi+0x9], ch; ret; 
0x00000000170219: or [rax-0x77], cl; or [rax-0x77], cl; clc; ret; 
0x00000000150810: or [rax-0x77], cl; out 0x48, al; mov edi, ebp; call qword ptr [rax]; 
0x0000000014cc69: or [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x10]; 
0x0000000014140d: or [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x20]; 
0x0000000014db83: or [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x28]; 
0x00000000143e36: or [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x8]; 
0x00000000141696: or [rax-0x77], cl; out dx, eax; call rcx; 
0x000000001423bb: or [rax-0x77], cl; out dx, eax; mov qword ptr [rsp], 0x0; call qword ptr [rax+0x20]; 
0x000000001502a5: or [rax-0x77], cl; out dx, eax; pop rbp; pop r12; jmp rax; 
0x0000000008406f: or [rax-0x77], cl; out dx, eax; pop rbx; pop rbp; jmp rax; 
0x000000000b72f6: or [rax-0x77], cl; pcmpgtd mm1, [rcx-0x12cff7a9]; mov [rdi+0xa], ch; ret; 
0x0000000005dfb0: or [rax-0x77], cl; ret far; 
0x00000000093b92: or [rax-0x77], cl; ret; 
0x000000001908db: or [rax-0x77], cl; ror dword ptr [rax+0x9], cl; ret far; 
0x00000000093b91: or [rax-0x77], r9b; ret; 
0x0000000009b998: or [rax-0x7b], cl; shl byte ptr [rbp-0xf], 0x44; mov eax, eax; ret; 
0x000000000e5d1e: or [rax-0x7bf0a106], eax; clc; add [rax], eax; add [rax-0x7d], cl; ret; 
0x0000000003b06a: or [rax-0x7d], cl; ret; 
0x000000000cf5c4: or [rax-0x7d], ecx; ret; 
0x00000000099138: or [rax-0x7f], ecx; stc; jmp far fword ptr [rcx]; 
0x000000001903e9: or [rax], al; add [rax-0x75], cl; add al, 0x24; add rsp, 0x38; ret; 
0x00000000073082: or [rax], al; add [rax-0x77], cl; fimul st, dword ptr [rcx+rcx*4-0x9]; call qword ptr [r12+0x38]; 
0x0000000009428c: or [rax], al; add [rax-0x7d], cl; ret far; 
0x000000000970c9: or [rax], al; add [rax], al; add [rbx+0x5d], bl; pop r12; ret; 
0x0000000009bf94: or [rax], al; add [rax], al; add [rcx], dh; ror byte ptr [rcx-0x77], 0x30; ret; 
0x0000000014c108: or [rax], al; add [rax], al; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x00000000119325: or [rax], al; add [rax], al; mov eax, 0x119; syscall; 
0x00000000041bf5: or [rax], al; add [rax], al; mov eax, 0x7f; syscall; 
0x0000000004263d: or [rax], al; add [rax], al; mov eax, 0x80; syscall; 
0x00000000041c41: or [rax], al; add [rax], al; mov eax, 0x82; syscall; 
0x00000000041a1b: or [rax], al; add [rax], al; mov eax, 0xd; syscall; 
0x00000000053006: or [rax], al; add [rax], al; mov eax, 0xe; syscall; 
0x00000000041c6c: or [rax], al; add [rax], al; mov r8d, eax; mov eax, 0x82; syscall; 
0x000000001430ef: or [rax], al; add [rax], al; mov rdi, rbp; call qword ptr [rax+0x30]; 
0x00000000148646: or [rax], al; add [rax], al; mov rdi, rbp; mov [r12+0x70], edx; call qword ptr [rax+0x30]; 
0x0000000010d701: or [rax], al; add [rax], al; mov rdx, r12; mov eax, 0x10f; syscall; 
0x00000000091b0d: or [rax], al; add [rax], al; mov rsi, r8; mov eax, 0xe; syscall; 
0x000000000b8589: or [rax], al; add [rax], al; pop rbx; ret; 
0x00000000142f82: or [rax], al; add [rax], al; ret; 
0x00000000108de5: or [rax], al; add [rax], al; syscall; 
0x000000000a78a8: or [rax], al; add [rbp-0x77], cl; ret far; 
0x00000000187d50: or [rax], al; add [rip+0xffff], ah; and ecx, 0xffff; sub eax, ecx; ret; 
0x000000001122a9: or [rax], al; add byte ptr [rax], 0x0; add rsp, 0x8; mov eax, r8d; ret; 
0x000000001592a6: or [rax], al; call qword ptr [rax+0x288]; 
0x00000000159a3d: or [rax], al; call qword ptr [rax+0x8]; 
0x00000000159945: or [rax], al; call qword ptr [rax]; 
0x00000000159889: or [rax], al; jmp qword ptr [rax+0x280]; 
0x000000001623d3: or [rax], al; lea r11, [rip+0x55734]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x00000000162379: or [rax], al; lea r11, [rip+0x5574e]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x0000000015f9f3: or [rax], al; lea r11, [rip+0x57f54]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x0000000015f992: or [rax], al; lea r11, [rip+0x57f75]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x0000000015a5c1: or [rax], al; mov [rax], bl; pop rbx; ret; 
0x0000000005974c: or [rax], al; mov [rdi], rax; mov rax, rdi; ret; 
0x00000000159373: or [rax], al; mov [rsp+0x8], rcx; lea rdi, [r13+0x988]; call qword ptr [r13+0xf88]; 
0x0000000015a6c5: or [rax], al; mov dword ptr fs:[rax], 0x16; xor eax, eax; ret; 
0x00000000156789: or [rax], al; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x0000000015cd79: or [rax], al; mov dword ptr fs:[rax], 0x26; mov rax, 0xffffffffffffffff; ret; 
0x0000000015a859: or [rax], al; mov dword ptr fs:[rax], 0x26; xor eax, eax; ret; 
0x00000000159d18: or [rax], al; mov r8, [rbx+0x10]; call qword ptr [rax+0x270]; 
0x00000000159cd5: or [rax], al; mov rax, [rax+0x10]; add rsp, 0x38; jmp rax; 
0x000000001597c6: or [rax], al; mov rdi, [rdi]; call qword ptr [rax+0x278]; 
0x0000000015976d: or [rax], al; mov rdi, [rsp]; mov rax, [rax+0x268]; jmp rax; 
0x0000000015a831: or [rax], al; mov rdi, r8; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000159739: or [rax], al; mov rsi, rdi; mov rdi, [rsp]; mov rax, [rax+0x268]; jmp rax; 
0x0000000015c754: or [rax], al; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000009b271: or [rax], al; nop [rax+rax]; xchg ax, ax; endbr64; ret; 
0x0000000015a944: or [rax], al; ret; 
0x0000000015a753: or [rax], al; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000157de8: or [rax], al; test edi, edi; jns short 0x0000000000157df0; ret; 
0x0000000015a93b: or [rax], al; xor eax, eax; mov [rip+0x8c542], rsi; ret; 
0x000000000b72db: or [rax], dh; in eax, dx; mov [rdi+0x9], ch; ret; 
0x000000000b72fd: or [rax], dh; in eax, dx; mov [rdi+0xa], ch; ret; 
0x000000000b733b: or [rax], dh; in eax, dx; mov [rdi+0xc], ch; ret; 
0x0000000007930e: or [rax], eax; add [rax-0x77], cl; fimul st, dword ptr [rcx+rcx*4-0x2a]; mov rdi, r15; call qword ptr [r13+0x38]; 
0x0000000004db71: or [rax], eax; add [rax-0x80], al; jmp far fword ptr [rbx]; 
0x000000001570b3: or [rax], eax; add [rax], al; add [rax], al; add rsp, 0x8; ret; 
0x0000000014b934: or [rax], eax; add [rax], al; call qword ptr [rax]; 
0x0000000003fb8a: or [rax], eax; add [rax], al; mov eax, 0xffffffff; pop rbp; ret; 
0x00000000029322: or [rax], eax; add [rax], al; mov eax, 0xffffffff; ret; 
0x0000000015a81f: or [rax], eax; add [rax], al; mov edi, eax; mov eax, 0x3e; syscall; 
0x00000000142f47: or [rax], eax; add [rax], al; movups [rsi+0x8], xmm0; ret; 
0x0000000010705a: or [rax], eax; add [rax], al; pop rbp; pop r12; ret; 
0x00000000113820: or [rax], eax; add [rax], al; syscall; 
0x000000000acdfd: or [rax], eax; add [rbp-0x77], cl; ret far; 
0x0000000018121f: or [rax], eax; add [rbp-0x77], cl; ret far; 
0x000000000e4a5e: or [rax], eax; add [rbx-0x7ae3db8c], cl; test byte ptr [rdi], 0x85; ret; 
0x000000001569bb: or [rax], eax; add [rcx+rcx*4-0x40], ecx; pop rbp; ret; 
0x00000000105db3: or [rax], eax; add [rcx-0x80], al; jmp qword ptr [rdi]; 
0x0000000014cf6a: or [rax], eax; add al, [rax]; add [rax], al; pop rbx; ret; 
0x0000000014ceb4: or [rax], eax; add al, [rax]; add [rax], al; ret; 
0x000000000b1f05: or [rax], eax; add cl, ch; ret; 
0x0000000014cf2a: or [rax], eax; cmp rax, rdx; je 0x000000000014cfd0; pop rbx; ret; 
0x00000000143395: or [rax], eax; jmp qword ptr [rdx+rax*8]; 
0x0000000014cdb9: or [rax], eax; lea rdx, [rip+0x9c13e]; mov fs:[rax], rdx; ret; 
0x0000000014d1d4: or [rax], eax; mov dword ptr [rip+0x9bd00], 0x2; pop rbx; ret; 
0x0000000014d104: or [rax], eax; mov dword ptr [rip+0x9bdd0], 0x2; pop rbx; ret; 
0x0000000014d034: or [rax], eax; mov dword ptr [rip+0x9bea0], 0x2; pop rbx; ret; 
0x0000000014cf64: or [rax], eax; mov dword ptr [rip+0x9bf70], 0x2; pop rbx; ret; 
0x0000000011ae97: or [rax], eax; mov eax, [rax+rdi*4]; ret; 
0x00000000156342: or [rax], eax; mov edx, 0x0; cmovne rax, rdx; add rsp, 0x8; ret; 
0x0000000014cdc0: or [rax], eax; mov fs:[rax], rdx; ret; 
0x0000000014cea9: or [rax], eax; mov fs:[rbx], rax; pop rbx; mov dword ptr [rip+0x9c026], 0x2; ret; 
0x0000000014cfd5: or [rax], eax; pop rbx; ret; 
0x0000000014ced3: or [rax], eax; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000014b8a4: or [rax], eax; syscall; 
0x00000000156a13: or [rax], eax; syscall; 
0x0000000008a40c: or [rax], eax; xchg ax, ax; endbr64; and dword ptr [rdi], 0xffffffcf; ret; 
0x0000000008a40a: or [rax], eax; xchg ax, ax; endbr64; and dword ptr [rdi], 0xffffffcf; ret; 
0x0000000004db70: or [rax], r8; add [rax-0x80], al; jmp far fword ptr [rbx]; 
0x0000000013657b: or [rbp+0x31], al; rcr byte ptr [rbx+0x4c], 0x89; rcr byte ptr [rbp+0x41], 0x5c; pop r13; ret; 
0x000000000ebe15: or [rbp+0x31], al; rol byte ptr [rcx+rcx*4-0x40], 0x5b; pop rbp; ret; 
0x00000000056a17: or [rbp+0x31], al; ror byte ptr [rax-0x39], cl; ret; 
0x00000000044e27: or [rbp+0x31], al; ror byte ptr [rcx+rcx*4-0x40], 0x5b; pop rbp; ret; 
0x000000000915a1: or [rbp+0x31], al; sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000014f858: or [rbp+0x41], bl; pop rsp; jmp rax; 
0x00000000081d6c: or [rbp+0x41], bl; pop rsp; ret; 
0x00000000126ba6: or [rbp+0x480d75c0], al; cmp dword ptr [rdi], 0x0; je short 0x0000000000126bc0; ret; 
0x00000000143e29: or [rbp+0x488b74c0], al; mov eax, [rbp+0x8]; lea rsi, [rsp+0x8]; mov rdi, rbp; call qword ptr [rax+0x8]; 
0x00000000137243: or [rbp+0x5d5b2b04], cl; ret; 
0x00000000040de7: or [rbp+0x6], dh; addss xmm0, xmm0; ret; 
0x000000000fa435: or [rbp+0xf41ff7b], cl; xchg edi, eax; ret; 
0x00000000143f5b: or [rbp+rcx*4+0x4], al; add bl, [rbx+0x5d]; mov eax, r8d; ret; 
0x000000000f797f: or [rbp-0x49f000b0], cl; ror byte ptr [rax+0x63], cl; adc al, 0x91; add rdx, rcx; notrack jmp rdx; 
0x00000000149e21: or [rbp-0x74b70098], cl; jo short 0x0000000000149db3; imul ecx, [rax+0xf], 0xffffffcd; call qword ptr [rax+0x18]; 
0x00000000126b2c: or [rbp-0xf], dh; mov rax, [rax+0x30]; ret; 
0x000000000b9134: or [rbx+0x11394116], cl; jne short 0x00000000000b90dd; test edx, edx; jne short 0x00000000000b9120; ret; 
0x00000000034829: or [rbx+0x1974fdf8], al; pop rbx; ret; 
0x0000000007d779: or [rbx+0x1c772efe], al; lea rdi, [rip+0x12afd2]; movsxd rsi, [rdi+rsi*4]; add rsi, rdi; notrack jmp rsi; 
0x00000000034807: or [rbx+0x37403fe], al; ret; 
0x000000000955a0: or [rbx+0x3d485bc1], eax; jmp far fword ptr [rcx]; 
0x000000000e7d8c: or [rbx+0x463b01c0], al; jl short 0x00000000000e7e00; mov byte ptr [rdi+0x8], 0x1; mov eax, 0x1; ret; 
0x000000000610f8: or [rbx+0x48010447], al; add esp, 0x8; pop rbx; pop rbp; ret; 
0x0000000008bade: or [rbx+0x48], bl; sub eax, edx; pop rbp; pop r12; ret; 
0x00000000143709: or [rbx+0x5d], bl; jmp rcx; 
0x00000000087dd9: or [rbx+0x5d], bl; mov eax, r8d; ret; 
0x0000000009bab7: or [rbx+0x5d], bl; pop r12; pop r13; pop r14; ret; 
0x0000000005376a: or [rbx+0x5d], bl; pop r12; pop r13; ret; 
0x000000000e3ce3: or [rbx+0x5d], bl; pop r12; ret; 
0x00000000029a3b: or [rbx+0x5d], bl; ret; 
0x00000000099704: or [rbx+0x5e7709f8], al; lea rdx, [rip+0x10f497]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000090db6: or [rbx+0x68901e0], al; xor eax, eax; ret; 
0x00000000082060: or [rbx+0xd], dh; lea rcx, [rdx+0x4]; mov [rax], rcx; mov eax, [rdx]; ret; 
0x0000000010eb3b: or [rbx+0xd], eax; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x2]; mov eax, 0xffffffff; ret; 
0x00000000081ed6: or [rbx+0xf], dh; lea rcx, [rdx+0x4]; mov [rax], rcx; mov eax, [rdx]; ret; 
0x000000000eace1: or [rbx+rax*4+0x5b], dh; ret; 
0x0000000003fb0d: or [rbx+rax+0x57], cl; and [rcx+rcx*4-0x30], cl; ret; 
0x0000000008be13: or [rbx+rcx*4+0x4], cl; and al, 0xe9; ret far; 
0x000000000840a6: or [rbx-0x3b7cb7fe], cl; or [rbx+0x5d], bl; ret; 
0x0000000011acb4: or [rbx-0x47e7db84], cl; and [rcx], al; add [rax], al; syscall; 
0x0000000014132e: or [rbx-0x72b7a3a9], cl; ja short 0x000000000014137f; mov rdi, r8; mov rax, [rax+0x18]; jmp rax; 
0x0000000005efcf: or [rbx-0x76bef791], ecx; ret; 
0x0000000006b6a3: or [rbx-0x7bf00005], al; ret; 
0x0000000005ac43: or [rbx-0x7bf0cf08], eax; ret; 
0x000000001249d4: or [rbx-0xf], cl; dec dword ptr [rax-0x7d]; ret; 
0x000000000f3f4d: or [rcx+0x24848bc3], cl; add [rax], r8d; add [rcx], bh; ret; 
0x00000000143f46: or [rcx+0x29], al; rcr byte ptr [rbx+0x5d], 0x1; mov eax, r8d; ret; 
0x00000000026ab0: or [rcx+0x39], cl; ret far; 
0x000000000c5fbe: or [rcx+0x5bd029d8], cl; pop rbp; pop r12; pop r13; ret; 
0x000000000f9263: or [rcx+0x63], cl; or al, 0x88; add rcx, r8; notrack jmp rcx; 
0x000000000b4717: or [rcx+0xf], ecx; add [rcx+0x63], cl; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000054b90: or [rcx+rax-0x3e], cl; mov rax, rdx; pop rbx; ret; 
0x0000000008b96e: or [rcx+rcx*4-0x12], cl; mov rdi, rbx; call qword ptr [rbp+0x70]; 
0x0000000009c024: or [rcx+rcx*4-0x18], cl; mov rdx, r12; pop r12; pop r13; ret; 
0x00000000141e49: or [rcx+rcx*4-0x19], cl; call qword ptr [rax+0x20]; 
0x0000000014ca29: or [rcx+rcx*4-0x1], cl; call qword ptr [rax+0x20]; 
0x0000000014ca1f: or [rcx+rcx*4-0x1], cl; call qword ptr [rdx+0x10]; 
0x00000000085ba2: or [rcx+rcx*4-0x1], cl; call rax; 
0x00000000142bb3: or [rcx+rcx*4-0x1], cl; mov [rsp+0x192], ax; mov rax, [rsp+0x30]; call rax; 
0x00000000143df5: or [rcx+rcx*4-0x1a], cl; mov rdi, rbp; call qword ptr [rax]; 
0x0000000010d763: or [rcx+rcx*4-0x1e], cl; mov eax, 0x10f; syscall; 
0x000000000dbf3c: or [rcx+rcx*4-0x1f], cl; mov rdx, r13; mov rsi, rbp; mov edi, r14d; call qword ptr [rsp+0x48]; 
0x000000000dc3dc: or [rcx+rcx*4-0x1f], cl; mov rdx, r13; mov rsi, rbp; mov rdi, r14; call qword ptr [rsp+0x48]; 
0x000000000866ee: or [rcx+rcx*4-0x20], al; pop rbp; pop r12; ret; 
0x00000000059b13: or [rcx+rcx*4-0x20], al; pop rbx; pop r12; ret; 
0x000000000b8c45: or [rcx+rcx*4-0x20], cl; pop rbp; pop r12; ret; 
0x0000000009d7d3: or [rcx+rcx*4-0x20], cl; pop rbx; pop r12; ret; 
0x000000000fd33b: or [rcx+rcx*4-0x38], al; ret; 
0x0000000007ed96: or [rcx+rcx*4-0x40], al; pop rbx; pop rbp; ret; 
0x000000001122b1: or [rcx+rcx*4-0x40], al; ret; 
0x00000000045951: or [rcx+rcx*4-0x40], cl; pop rbx; pop rbp; ret; 
0x000000001375aa: or [rcx+rcx*4-0x40], cl; ret; 
0x000000001433fc: or [rcx+rcx*4-0xa], al; mov rdi, r13; call qword ptr [rax+0x30]; 
0x00000000142437: or [rcx+rcx*4-0xa], al; mov rdi, rbp; call qword ptr [rax+0x28]; 
0x00000000053c62: or [rcx-0x2feeb728], cl; pop rbp; pop rbx; ret; 
0x0000000006a060: or [rcx-0x5b773], cl; jmp qword ptr [rdi+rax*8]; 
0x00000000159379: or [rcx-0x73], cl; mov ebp, 0x988; call qword ptr [r13+0xf88]; 
0x000000000fa9ca: or [rcx-0x75], cl; adc [rax+0x63], r9b; ret; 
0x00000000115642: or [rcx-0x75], cl; add [rbx+0x94901e0], eax; ret; 
0x00000000148c4d: or [rcx-0x75], cl; jo short 0x0000000000148c92; mov edx, [rsi+0x1c8]; add rsi, 0x38; jmp qword ptr [rax+0x18]; 
0x000000000f9a7a: or [rcx-0x75], cl; push rbp; adc [rax+0x63], cl; ret far; 
0x00000000085fcb: or [rcx-0x75], cl; sub [r13-0x7b], r8b; shl byte ptr [rbx+rbp*2+0x49], 0x2b; and [r8+0x1], r9b; ret; 
0x00000000077fb3: or [rcx-0x7638763e], cl; ret; 
0x00000000077fb2: or [rcx-0x7638763e], r9b; ret; 
0x000000000afdff: or [rcx-0x76b7f7be], cl; clc; ret; 
0x0000000005efd2: or [rcx-0x77], al; ret; 
0x00000000143de3: or [rcx-0x77], cl; in al, 0x48; lea esi, [rsp+0x8]; call qword ptr [rax]; 
0x0000000011caac: or [rcx-0x7c172c07], cl; loopne 0x000000000011cab5; ret; 
0x0000000011cb3c: or [rcx-0x7c172c07], cl; loopne 0x000000000011cb45; ret; 
0x0000000011cbcc: or [rcx-0x7c172c07], cl; loopne 0x000000000011cbd5; ret; 
0x0000000011cc5c: or [rcx-0x7c172c07], cl; loopne 0x000000000011cc65; ret; 
0x0000000011cd8c: or [rcx-0x7c172c07], cl; loopne 0x000000000011cd95; ret; 
0x0000000011ce1c: or [rcx-0x7c172c07], cl; loopne 0x000000000011ce25; ret; 
0x0000000011ceac: or [rcx-0x7c172c07], cl; loopne 0x000000000011ceb5; ret; 
0x0000000011cf3c: or [rcx-0x7c172c07], cl; loopne 0x000000000011cf45; ret; 
0x0000000011cfcc: or [rcx-0x7c172c07], cl; loopne 0x000000000011cfd5; ret; 
0x0000000011d057: or [rcx-0x7c172c07], cl; loopne 0x000000000011d060; ret; 
0x0000000011d0ec: or [rcx-0x7c172c07], cl; loopne 0x000000000011d0f5; ret; 
0x0000000011d42e: or [rcx-0x7c172c07], cl; loopne 0x000000000011d437; ret; 
0x0000000011d4ae: or [rcx-0x7c172c07], cl; loopne 0x000000000011d4b7; ret; 
0x0000000011d52e: or [rcx-0x7c172c07], cl; loopne 0x000000000011d537; ret; 
0x0000000011d5ae: or [rcx-0x7c172c07], cl; loopne 0x000000000011d5b7; ret; 
0x0000000011d6be: or [rcx-0x7c172c07], cl; loopne 0x000000000011d6c7; ret; 
0x0000000011d73e: or [rcx-0x7c172c07], cl; loopne 0x000000000011d747; ret; 
0x0000000011d7be: or [rcx-0x7c172c07], cl; loopne 0x000000000011d7c7; ret; 
0x0000000011d83e: or [rcx-0x7c172c07], cl; loopne 0x000000000011d847; ret; 
0x0000000011d8be: or [rcx-0x7c172c07], cl; loopne 0x000000000011d8c7; ret; 
0x0000000011d93b: or [rcx-0x7c172c07], cl; loopne 0x000000000011d944; ret; 
0x0000000011d9be: or [rcx-0x7c172c07], cl; loopne 0x000000000011d9c7; ret; 
0x000000000592e9: or [rcx-0x7d], cl; ret; 
0x0000000013a592: or [rcx-0x80], al; jmp qword ptr [rax]; 
0x00000000114d54: or [rcx-0xa], al; ret; 
0x000000000e68f3: or [rcx], al; add [rax], al; add [rax-0x7d], cl; ret; 
0x00000000107bc6: or [rcx], al; add [rax], al; mov [rsi], eax; xor eax, eax; ret; 
0x00000000060ff8: or [rcx], al; add [rax], al; syscall; 
0x00000000107c68: or [rcx], al; add [rax], al; xor eax, eax; ret; 
0x000000000e7e0c: or [rcx], al; mov [rdi], al; mov eax, 0x1; ret; 
0x000000000e7dde: or [rcx], al; mov eax, 0x1; mov byte ptr [rdi], 0x5b; ret; 
0x000000000e7d97: or [rcx], al; mov eax, 0x1; ret; 
0x0000000009107a: or [rcx], al; xor eax, eax; ret; 
0x000000000e7d79: or [rcx], bl; mov eax, 0x1; ret; 
0x00000000136259: or [rcx], ch; add [rax], al; add [rcx-0x76b7f3a9], cl; ret; 
0x000000000ea81e: or [rcx], ch; ror dword ptr [rax+0x63], cl; ror byte ptr [rax+0x63], cl; ret far; 
0x0000000012566e: or [rcx], dh; rcr byte ptr [rbp+0x41], 0x5c; ret; 
0x000000000453f7: or [rcx], dh; rcr byte ptr [rbx+0x5d], 0x41; pop rsp; pop r13; ret; 
0x000000000f9830: or [rcx], dh; rcr byte ptr [rbx+0x5d], 0x41; pop rsp; ret; 
0x00000000106e1c: or [rcx], dh; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x5d], bl; ret; 
0x00000000106f10: or [rcx], dh; ror byte ptr [rcx-0x7cb7fbad], 0xc4; or [rbx+0x5d], bl; ret; 
0x000000000e9445: or [rcx], dh; shl byte ptr [rsi+0xf], 0x6f; shl dword ptr [rsi+0xf], 0xd4; ret far; 
0x00000000077103: or [rcx], eax; add [rax], al; movsxd rdx, r13d; mov rdi, rbx; call qword ptr [r14+0x38]; 
0x0000000010a898: or [rcx], eax; add [rax], al; syscall; 
0x0000000011b58a: or [rcx], eax; sar byte ptr [rax+0x14], cl; syscall; 
0x00000000028c09: or [rcx], esi; shl byte ptr [rcx], cl; imul al; insd [rdi], dx; ret; 
0x00000000099707: or [rdi+0x5e], esi; lea rdx, [rip+0x10f497]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000015a63b: or [rdi+rax*8], edx; xor eax, eax; ret; 
0x0000000015a63a: or [rdi+rax*8], rdx; xor eax, eax; ret; 
0x0000000011087d: or [rdi+rcx+0x43], cl; ror dword ptr [rax-0x77], 0x1; and al, 0x20; mov eax, 0x65; syscall; 
0x00000000087f31: or [rdi+rcx-0x4a], al; add [rbx+0x5d], bl; mov eax, r8d; pop r12; ret; 
0x000000000598db: or [rdi-0x2e], esi; mov rax, r8; ret; 
0x0000000008aa81: or [rdi], cl; adc [rbx+0x18], eax; movups [rbx+0x28], xmm0; pop rbx; ret; 
0x0000000010defc: or [rdi], cl; adc [rdi+0x10], eax; mov [rdi+0x8], rax; movups [rdi+0x20], xmm1; ret; 
0x0000000010df04: or [rdi], cl; adc [rdi+0x20], ecx; ret; 
0x0000000013c040: or [rdi], cl; mov bh, 0xc0; ret; 
0x0000000008a485: or [rdi], cl; mov dh, 0x0; ret; 
0x0000000015182c: or [rdi], cl; mov dh, 0xc0; add rsp, 0x18; ret; 
0x0000000010a844: or [rdi], cl; mov dh, 0xc0; add rsp, 0x58; ret; 
0x0000000002930b: or [rdi], cl; mov dh, 0xc0; neg eax; ret; 
0x00000000143832: or [rdi], cl; mov dh, 0xc0; pop rbp; pop r12; ret; 
0x00000000144ce9: or [rdi], cl; mov dh, 0xc0; pop rbx; pop rbp; ret; 
0x000000000503e8: or [rdi], cl; mov dh, 0xc0; ret; 
0x000000000fd3a0: or [rdi], cl; xchg ebp, eax; ror byte ptr [rdi], 0xb6; shl bh, 0xd8; ret; 
0x0000000011c158: or [rdi], cl; xchg edi, eax; ror byte ptr [rdi], 0xb6; shl bh, 0xd8; ret; 
0x00000000042352: or [rdi], eax; xor eax, eax; ret; 
0x0000000015ff7c: or [rdi], ecx; sub [rdi], esp; notrack jmp r9; 
0x00000000172126: or [rdi], ecx; test [rbx+0x2], esp; add [rax], al; ret; 
0x0000000010defb: or [rdi], r9b; adc [rdi+0x10], eax; mov [rdi+0x8], rax; movups [rdi+0x20], xmm1; ret; 
0x00000000042351: or [rdi], rax; xor eax, eax; ret; 
0x00000000172125: or [rdi], rcx; test [rbx+0x2], esp; add [rax], al; ret; 
0x0000000009bf84: or [rdx+0x9], dh; mov [r8], rsi; ret; 
0x00000000189ca5: or [rdx+0xa], dh; vmovq [rdi], xmm0; vmovq [rsi-0x8], xmm0; ret; 
0x00000000137537: or [rdx+0xf], al; adc [rsi+rcx+0x8], edx; mov [rsi+0x3], r8b; xor eax, eax; ret; 
0x0000000008e8e4: or [rdx], al; add [rax], al; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rax+0x18]; 
0x000000000e7db2: or [rdx], al; xor eax, eax; ret; 
0x000000000e7e22: or [rdx], bl; mov eax, 0x2; ret; 
0x00000000159858: or [rdx], ch; lea rcx, [rsi+0x398]; push 0x0; call qword ptr [rax+0x270]; 
0x00000000159807: or [rdx], ch; lea rcx, [rsi+0x398]; push 0x2; call qword ptr [rax+0x270]; 
0x00000000159d0f: or [rdx], ch; push rax; mov rax, [rip+0x8911e]; mov r8, [rbx+0x10]; call qword ptr [rax+0x270]; 
0x00000000028d59: or [rdx], cl; add [rax], al; cmp [rsp+0x18], rcx; cmovne rdi, r14; call rdx; 
0x0000000005fcbf: or [rip+0x100], ah; or eax, 0x7; mov [rdx], eax; mov eax, 0x1; ret; 
0x0000000010e626: or [rip+0x100f], ah; ret; 
0x0000000010e625: or [rip+0x100f], r12b; ret; 
0x000000001679e6: or [rip+0x14634900], al; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000009292d: or [rip+0x5be97500], edx; mov rax, r8; pop rbp; pop r12; ret; 
0x000000000b6d77: or [rip+0x6349000f], esp; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000010e6b5: or [rip-0x1010], ah; or esi, eax; xor eax, eax; mov [rdi+0x8], esi; ret; 
0x0000000010e6b4: or [rip-0x1010], r12b; or esi, eax; xor eax, eax; mov [rdi+0x8], esi; ret; 
0x0000000010dd43: or [rip-0x74b70008], ebp; and al, 0x8; add rsp, 0x30; pop rbp; ret; 
0x0000000010e35c: or [rsi+0x10], bh; mov eax, 0x48; syscall; 
0x00000000143034: or [rsi+0x20], bh; mov rdi, rbp; call qword ptr [rax+0x30]; 
0x00000000099594: or [rsi+0x39480014], ah; ret; 
0x00000000041c6a: or [rsi+0x8], bh; mov r8d, eax; mov eax, 0x82; syscall; 
0x000000001430ed: or [rsi+0x8], bh; mov rdi, rbp; call qword ptr [rax+0x30]; 
0x00000000148644: or [rsi+0x8], bh; mov rdi, rbp; mov [r12+0x70], edx; call qword ptr [rax+0x30]; 
0x000000000afd74: or [rsi+0xf], ah; adc al, [rcx]; movlpd [rdx], xmm0; mov rax, rdi; ret; 
0x000000000afca7: or [rsi+0xf], ah; adc eax, [rdx]; movlpd [rdx+0x8], xmm1; mov rax, rdi; ret; 
0x000000000b29b1: or [rsi+0xf], ah; adc ecx, [rdx+0x8]; mov rax, rdi; ret; 
0x00000000086669: or [rsi+0xf], ah; insb [rdi], dx; ret far; 
0x000000000857fe: or [rsi-0x1], bh; mov rdi, r8; call qword ptr [rax+0x18]; 
0x000000000afdc0: or [rsi-0x77], ah; or [rax-0x77], cl; clc; ret; 
0x000000000e7e47: or [rsi], bl; mov eax, 0x2; ret; 
0x000000000e7da7: or [rsi], dl; mov eax, 0x1; ret; 
0x00000000086814: or ah, [rsi+0xf]; outsd dx, [rsi]; ret far; 
0x000000000f87a3: or al, 0x0; add [rax-0x75], cl; push rax; or [rax-0x77], cl; ret; 
0x0000000007857b: or al, 0x0; add [rax-0x77], cl; fimul st, dword ptr [rcx+rcx*4-0x1]; call qword ptr [r12+0x38]; 
0x00000000078f88: or al, 0x0; add [rax-0x77], cl; fimul st, dword ptr [rcx+rcx*4-0x2a]; mov rdi, r15; call qword ptr [r12+0x38]; 
0x00000000048240: or al, 0x0; add [rax-0x80], al; jmp far fword ptr [rbx]; 
0x0000000011b99d: or al, 0x0; add [rax], al; add [rax], al; add rsp, 0x8; ret; 
0x0000000011bd14: or al, 0x0; add [rax], al; add [rax], al; ret; 
0x000000000461e0: or al, 0x0; add [rax], al; mov eax, 0xffffffff; ret; 
0x00000000148682: or al, 0x0; add [rax], al; mov esi, 0x8; mov rdi, rbp; call qword ptr [rax+0x30]; 
0x0000000009688a: or al, 0x0; add [rax], al; mov rax, r8; ret; 
0x0000000009549d: or al, 0x0; add [rax], al; mov rax, r9; ret; 
0x000000000ede02: or al, 0x0; add [rax], al; pop rbp; pop r12; ret; 
0x000000000eded1: or al, 0x0; add [rax], al; ret; 
0x0000000010f225: or al, 0x0; add [rax], al; syscall; 
0x000000001146e3: or al, 0x0; add [rax], al; xor eax, eax; pop rbx; ret; 
0x0000000009b9ce: or al, 0x0; add [rax], al; xor eax, eax; ret; 
0x00000000180f1f: or al, 0x0; add [rbp-0x77], cl; ret far; 
0x0000000015ebf8: or al, 0x0; add [rbp-0x77], cl; ret far; 
0x0000000011dcd4: or al, 0x0; add [rcx+rax*2-0x77], esp; sbb [rcx+rcx*4-0x40], ecx; pop rbx; ret; 
0x0000000007523c: or al, 0x0; add [rcx+rcx*4-0x16], cl; mov rsi, r14; mov rdi, rbp; call qword ptr [rbx+0x38]; 
0x0000000011f669: or al, 0x0; add [rcx+rcx*4-0x40], eax; add rsp, 0x8; ret; 
0x00000000056764: or al, 0x0; add [rdi+rax*4-0x17], dh; adc [rdx], eax; std; jmp qword ptr [rsi-0x70]; 
0x0000000011bd3a: or al, 0x0; add al, [rax]; add [rax], al; ret; 
0x0000000011b968: or al, 0x0; add eax, [rax]; add [rax], al; add rsp, 0x8; ret; 
0x0000000011bdf3: or al, 0x0; add word ptr [rdx+rax*2], 0x1; ret; 
0x000000000b91ed: or al, 0x0; and ch, 0x1; je short 0x00000000000b91b5; ret; 
0x0000000009c20e: or al, 0x0; cmovne rax, rdx; ret; 
0x0000000011bdea: or al, 0x0; jae short 0x000000000011bdfa; mov rdx, [rip+0xcbc83]; add word ptr [rdx+rax*2], 0x1; ret; 
0x0000000009d736: or al, 0x0; lea rdx, [rip+0xc7771]; cmovne rax, rdx; ret; 
0x0000000009d3b6: or al, 0x0; lea rdx, [rip+0xc7ad1]; cmovne rax, rdx; ret; 
0x0000000009d256: or al, 0x0; lea rdx, [rip+0xca741]; cmovne rax, rdx; ret; 
0x0000000011bd2d: or al, 0x0; mov [rdi+0x10], rax; jb short 0x000000000011bd48; mov qword ptr [rip+0xc7640], 0x2; ret; 
0x00000000113ea2: or al, 0x0; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000011383d: or al, 0x0; mov dword ptr fs:[rax], 0x16; mov rax, 0xffffffffffffffff; ret; 
0x00000000114725: or al, 0x0; mov dword ptr fs:[rax], 0x16; ret; 
0x000000001146f0: or al, 0x0; mov dword ptr fs:[rax], 0x16; xor eax, eax; ret; 
0x0000000011a239: or al, 0x0; mov dword ptr fs:[rax], 0x26; mov rax, 0xffffffffffffffff; ret; 
0x000000001170a5: or al, 0x0; mov dword ptr fs:[rax], 0x2; xor eax, eax; ret; 
0x000000001146de: or al, 0x0; mov dword ptr fs:[rax], 0xc; xor eax, eax; pop rbx; ret; 
0x000000000debf1: or al, 0x0; mov eax, 0x142; syscall; 
0x0000000011c978: or al, 0x0; mov eax, [rax+0x38]; ret; 
0x0000000011c979: or al, 0x0; mov eax, [rax+0x38]; ret; 
0x000000000e04ef: or al, 0x0; mov esi, esi; movsxd rax, [rdx+rsi*4]; add rax, rdx; notrack jmp rax; 
0x0000000011c0d5: or al, 0x0; mov rax, [rax+0x18]; add dword ptr [rax], 0x1; ret; 
0x0000000011c0c5: or al, 0x0; mov rax, [rax+0x18]; add word ptr [rax], 0x1; ret; 
0x00000000116343: or al, 0x0; mov rax, [rax]; test rax, rax; je 0x0000000000116440; call rax; 
0x00000000116164: or al, 0x0; mov rax, [rax]; test rax, rax; je short 0x00000000001161d0; call rax; 
0x000000000e41d5: or al, 0x0; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000000e0e89: or al, 0x0; movsxd rax, [rdx+rbp*4]; add rax, rdx; notrack jmp rax; 
0x000000000e46f0: or al, 0x0; movsxd rax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x000000000e6403: or al, 0x0; movzx eax, al; movsxd rax, [rdi+rax*4]; add rax, rdi; notrack jmp rax; 
0x00000000113a58: or al, 0x0; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011368b: or al, 0x0; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000113985: or al, 0x0; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000011929d: or al, 0x0; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000126cf0: or al, 0x0; pop rbp; ret; 
0x0000000011bbd3: or al, 0x0; pop rbx; ret; 
0x00000000113652: or al, 0x0; ret; 
0x00000000126dc3: or al, 0x0; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000011dd24: or al, 0x0; syscall; 
0x00000000113648: or al, 0x0; test edi, edi; je short 0x0000000000113654; mov [rip+0xcfd04], edi; ret; 
0x0000000007252d: or al, 0x13; add rdx, r12; call qword ptr [r10+rax*8]; 
0x00000000186120: or al, 0x16; jne 0x0000000000185d99; vzeroupper; ret; 
0x00000000186618: or al, 0x16; jne 0x0000000000186209; vzeroupper; ret; 
0x00000000186237: or al, 0x16; jne short 0x0000000000186209; vzeroupper; ret; 
0x0000000009e18e: or al, 0x16; mov [rsi+rdx+0x1], al; jne short 0x000000000009e180; ret; 
0x000000000a6676: or al, 0x16; movzx eax, byte ptr [rdi+rdx]; sub eax, ecx; ret; 
0x0000000018611d: or al, 0x17; cmp ecx, [rsi+rdx]; jne 0x0000000000185d99; vzeroupper; ret; 
0x00000000186615: or al, 0x17; cmp ecx, [rsi+rdx]; jne 0x0000000000186209; vzeroupper; ret; 
0x00000000186234: or al, 0x17; cmp ecx, [rsi+rdx]; jne short 0x0000000000186209; vzeroupper; ret; 
0x00000000191588: or al, 0x18; add eax, 0x8b486400; adc [rax-0x7d], cl; ret; 
0x00000000096805: or al, 0x18; add rsp, 0x10; mov rax, r8; pop rbx; ret; 
0x00000000107bb6: or al, 0x1; add [rax], al; mov [rsi], eax; xor eax, eax; ret; 
0x00000000108881: or al, 0x1; add [rax], al; syscall; 
0x00000000107c50: or al, 0x1; add [rax], al; xor eax, eax; ret; 
0x000000000421d8: or al, 0x1a; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x00000000060740: or al, 0x24; add [rax-0x7d], cl; in al, dx; sbb [rcx], dh; jmp qword ptr [rax+rcx*2-0x75]; 
0x000000000ff0d5: or al, 0x24; call rax; 
0x0000000008aff1: or al, 0x24; mov rdi, rbp; call rax; 
0x00000000142bf7: or al, 0x24; mov rsi, r15; mov rdi, rbx; xor eax, eax; call rcx; 
0x00000000142b0c: or al, 0x24; xor eax, eax; mov rdi, rbx; call rcx; 
0x000000000969f5: or al, 0x28; add rsp, 0x10; mov rax, r8; pop rbp; ret; 
0x00000000158fe9: or al, 0x30; fisttp dword ptr [rcx], st; ret; 
0x00000000118f9e: or al, 0x30; ror byte ptr [rcx], 0xd0; ret; 
0x0000000011d1c6: or al, 0x31; test ecx, ecx; jne short 0x000000000011d1d0; ret; 
0x0000000011da1d: or al, 0x31; test ecx, ecx; jne short 0x000000000011da28; ret; 
0x0000000011da7a: or al, 0x31; test ecx, ecx; jne short 0x000000000011da88; ret; 
0x0000000015a01f: or al, 0x33; mov esi, [rsp+0x24]; call rax; 
0x000000001863f0: or al, 0x3a; jne 0x0000000000186209; vzeroupper; ret; 
0x000000000caf81: or al, 0x3b; or al, 0xf; test [rcx+rax], eax; add [rax], al; ret; 
0x000000001863ed: or al, 0x3e; cmp ecx, [rdx+rdi]; jne 0x0000000000186209; vzeroupper; ret; 
0x000000001199cf: or al, 0x3f; shr eax, cl; and eax, 0x3; ret; 
0x00000000109510: or al, 0x41; mov eax, eax; mov eax, 0x3; syscall; 
0x00000000110130: or al, 0x41; mov eax, eax; mov eax, 0x4a; syscall; 
0x000000001101f0: or al, 0x41; mov eax, eax; mov eax, 0x4b; syscall; 
0x00000000109208: or al, 0x41; mov eax, eax; mov edi, [rsp+0x8]; mov eax, 0x48; syscall; 
0x00000000090a08: or al, 0x44; mov eax, eax; ret; 
0x000000000de886: or al, 0x48; add esp, 0x18; ret; 
0x000000000de760: or al, 0x48; add esp, 0x28; ret; 
0x0000000010ff42: or al, 0x48; add esp, 0x38; ret; 
0x00000000145c13: or al, 0x48; add esp, 0x8; pop rbx; pop rbp; ret; 
0x00000000172182: or al, 0x48; lea ecx, [rdx+0xc]; jne 0x0000000000172390; ret; 
0x000000000b3b1f: or al, 0x48; lea edi, [rdi+0xc]; jne 0x00000000000b4270; ret; 
0x000000000b5213: or al, 0x48; lea edi, [rdi+0xc]; jne 0x00000000000b5ac0; ret; 
0x00000000136260: or al, 0x48; mov [rsi], edi; ret; 
0x0000000014b695: or al, 0x48; mov eax, [rbx]; mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x20]; 
0x0000000008dfd4: or al, 0x48; mov edi, [rsp]; add rsp, 0x10; pop rbx; jmp rax; 
0x00000000109694: or al, 0x48; mov edi, [rsp]; mov r8d, eax; mov eax, 0x55; syscall; 
0x000000001486d9: or al, 0x48; mov edi, ebp; call qword ptr [rax+0x48]; 
0x00000000028c38: or al, 0x48; mov edx, [rax]; call rbp; 
0x0000000011bded: or al, 0x48; mov edx, [rip+0xcbc83]; add word ptr [rdx+rax*2], 0x1; ret; 
0x00000000028ca3: or al, 0x48; mov esi, [rsp]; mov rdx, [rax]; mov rax, [rsp+0x10]; call rax; 
0x000000000b5230: or al, 0x49; sub eax, 0xd; lea rdi, [rdi+0xd]; jne 0x00000000000b5ac0; ret; 
0x000000000b3d60: or al, 0x5; add [rax], al; ret; 
0x00000000091c79: or al, 0x5b; pop rbp; ret; 
0x00000000125a93: or al, 0x5b; ret; 
0x000000000b3138: or al, 0x5d; str [rcx+0x63]; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000f0260: or al, 0x63; dec dword ptr [rcx-0x77]; ret; 
0x000000000a4dea: or al, 0x66; mov [rax+0x4], edx; movzx edx, byte ptr [rsp+0xe]; mov [rax+0x6], dl; ret; 
0x000000000a4ecf: or al, 0x66; mov [rdi+0x4], edx; movzx edx, byte ptr [rsp+0xe]; mov [rdi+0x6], dl; ret; 
0x000000000a4d15: or al, 0x66; mov [rdi+0x4], edx; ret; 
0x00000000040acb: or al, 0x75; or dh, dl; addps xmm0, xmm0; ret; 
0x0000000007c7b2: or al, 0x7f; and ecx, [rbp-0x76bb76f4]; ret; 
0x000000000b388c: or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b848b: or al, 0x83; loopne 0x00000000000b849e; movsxd rcx, [rsi+rax*4]; add rcx, rsi; notrack jmp rcx; 
0x000000000728b5: or al, 0x83; ret; 
0x000000000955b2: or al, 0x83; shr dword ptr [rsi+0x48], 0x3d; jmp far fword ptr [rdi+0x32760000]; 
0x000000000b8491: or al, 0x86; add rcx, rsi; notrack jmp rcx; 
0x000000000b8fad: or al, 0x87; test ecx, ecx; jne short 0x00000000000b8f88; mov rax, r8; ret; 
0x000000000f9267: or al, 0x88; add rcx, r8; notrack jmp rcx; 
0x0000000004150b: or al, 0x89; jae short 0x000000000004154f; xor eax, eax; pop rbx; ret; 
0x00000000150e40: or al, 0x89; std; jmp qword ptr [rsi+0x66]; 
0x000000000725a9: or al, 0x8a; add rcx, rdx; notrack jmp rcx; 
0x000000000a52e3: or al, 0x8a; lea r10, [r10+r9]; notrack jmp r10; 
0x000000000ab0e4: or al, 0x8a; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000011d1c3: or al, 0x8a; mov ecx, [rcx+rsi]; test ecx, ecx; jne short 0x000000000011d1d0; ret; 
0x0000000011da1a: or al, 0x8a; mov ecx, [rcx+rsi]; test ecx, ecx; jne short 0x000000000011da28; ret; 
0x0000000011da77: or al, 0x8a; mov ecx, [rcx+rsi]; test ecx, ecx; jne short 0x000000000011da88; ret; 
0x00000000177a2f: or al, 0x8a; pcmpeqb xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000017ec3f: or al, 0x8a; vpcmpeqb xmm0, xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000164f4d: or al, 0x8b; add r9, r11; notrack jmp r9; 
0x0000000010e263: or al, 0x8b; jl short 0x000000000010e28b; or [rax+0x11d], bh; syscall; 
0x0000000015f99d: or al, 0x8b; lea r9, [r11+r9]; notrack jmp r9; 
0x0000000007bdc5: or al, 0x8b; lea rbx, [rip-0x15ae]; add rcx, rbx; mov rbx, rsi; jmp rcx; 
0x0000000007b09d: or al, 0x8b; lea rbx, [rip-0x886]; add rcx, rbx; mov rbx, rsi; jmp rcx; 
0x0000000007b0ef: or al, 0x8b; lea rbx, [rip-0x8d8]; add rcx, rbx; mov rbx, rsi; jmp rcx; 
0x0000000007b133: or al, 0x8b; lea rbx, [rip-0x91c]; add rcx, rbx; mov rbx, rsi; jmp rcx; 
0x0000000007b3b6: or al, 0x8b; lea rbx, [rip-0xb9f]; add rcx, rbx; mov rbx, [rsp+0x68]; jmp rcx; 
0x0000000007b411: or al, 0x8b; lea rbx, [rip-0xbfa]; add rcx, rbx; mov rbx, rsi; jmp rcx; 
0x0000000007b45d: or al, 0x8b; lea rbx, [rip-0xc46]; add rcx, rbx; mov rbx, rsi; jmp rcx; 
0x0000000007b4d5: or al, 0x8b; lea rbx, [rip-0xcbe]; add rcx, rbx; mov rbx, rsi; jmp rcx; 
0x000000001895dd: or al, 0x8b; mov ecx, [rcx-0x4]; mov [rdi], esi; mov [r9-0x4], ecx; ret; 
0x0000000010712b: or al, 0x8b; push rbx; add al, 0xeb; ret; 
0x00000000116d9f: or al, 0x8d; add [r8-0x7d], ecx; ret; 
0x0000000011d3c7: or al, 0x8e; add eax, [rcx+rdx]; ret; 
0x0000000007b332: or al, 0x8e; add rcx, rdi; jmp rcx; 
0x0000000007ba74: or al, 0x8e; lea rsi, [rip-0x125d]; add rcx, rsi; jmp rcx; 
0x0000000011d3ac: or al, 0x8e; mov edx, [rcx+rdx]; test edx, edx; jne short 0x000000000011d3c0; ret; 
0x0000000011dc4c: or al, 0x8e; mov edx, [rcx+rdx]; test edx, edx; jne short 0x000000000011dc60; ret; 
0x000000000364be: or al, 0x8f; add rcx, rdi; notrack jmp rcx; 
0x00000000187013: or al, 0x93; add rcx, r11; notrack jmp rcx; 
0x0000000015f936: or al, 0x93; add rsi, rdx; add rdi, rdx; add r9, r11; notrack jmp r9; 
0x000000000b300b: or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000018dbae: or al, 0x99; add rcx, r9; notrack jmp rcx; 
0x0000000003aab0: or al, 0xae; sbb al, [rax]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000079e89: or al, 0xb3; mov r8, [rip+0x16f456]; mov [rbp-0x8c0], rax; mov [rbp-0x8b0], rsi; call qword ptr [r8+rcx*8-0x40]; 
0x0000000007423a: or al, 0xb3; mov r8, [rip+0x1750a5]; mov [rbp-0x8b0], rax; mov [rbp-0x8a0], rsi; call qword ptr [r8+rcx*8-0x40]; 
0x0000000014a56d: or al, 0xb8; add [rax], eax; add [rax], al; ret; 
0x0000000011a297: or al, 0xb8; sub eax, [rax]; add [rax], al; syscall; 
0x0000000011ae26: or al, 0xb8; xor eax, [rcx]; add [rax], al; syscall; 
0x0000000015f9a1: or al, 0xb; notrack jmp r9; 
0x000000000b300f: or al, 0xb; notrack jmp rcx; 
0x000000000deafe: or al, 0xbe; add [rax], eax; add [rax], al; incsspq rsi; jmp rdi; 
0x000000000536e8: or al, 0xc1; mov [rdx+rax*8], rcx; xor eax, eax; ret; 
0x000000000536ec: or al, 0xc2; xor eax, eax; ret; 
0x0000000018a8e2: or al, 0xc3; nop [rax+rax]; lea rax, [rdi+0xd]; ret; 
0x00000000148681: or al, 0xc; add [rax], al; add [rsi+0x8], bh; mov rdi, rbp; call qword ptr [rax+0x30]; 
0x0000000015cd40: or al, 0xca; cld; jmp qword ptr [rsi+0x2e]; 
0x00000000109529: or al, 0xe8; and [rbp-0x8], esi; dec dword ptr [rbx+0x480c2444]; add esp, 0x18; ret; 
0x000000000de757: or al, 0xe8; and bh, bl; dec dword ptr [rbx+0x480c2444]; add esp, 0x28; ret; 
0x00000000110127: or al, 0xe8; mov [0x410c247c8bfff808], eax; mov eax, eax; mov eax, 0x4a; syscall; 
0x00000000110209: or al, 0xe8; or r8b, dil; dec dword ptr [rbx+0x480c2444]; add esp, 0x18; ret; 
0x00000000109507: or al, 0xe8; ret; 
0x000000001674a2: or al, 0xf3; movq [rdi], mm1; ret; 
0x0000000011332c: or al, 0xf7; ret; 
0x000000001291bb: or al, 0xf9; jmp qword ptr [rsi-0x70]; 
0x0000000014a680: or al, 0xf; enter 0xc089, 0x49; mov [rax], eax; mov eax, 0x1; ret; 
0x000000000caf84: or al, 0xf; test [rcx+rax], eax; add [rax], al; ret; 
0x000000000b3b23: or al, 0xf; test [rsi+0x7], eax; add [rax], al; ret; 
0x00000000130922: or al, 0xfd; jmp qword ptr [rcx+rax*2-0x75]; 
0x00000000158af3: or al, 0xfd; jmp qword ptr [rsi+0x2e]; 
0x00000000028d5a: or al, [rax]; add [rax+0x39], cl; and al, 0x18; cmovne rdi, r14; call rdx; 
0x0000000014c23c: or al, [rax]; add [rax], al; lea r9, [rsp+0x1c]; call qword ptr [rax]; 
0x0000000013188f: or al, [rax]; add [rax], al; pop rbx; pop rbp; ret; 
0x00000000142f72: or al, [rax]; add [rax], al; ret; 
0x000000001138e5: or al, [rax]; add [rax], al; syscall; 
0x000000000a7728: or al, [rax]; add [rbp-0x77], cl; ret far; 
0x0000000014149b: or al, [rax]; add rsp, 0x8; ret; 
0x00000000141245: or al, [rax]; mov dword ptr fs:[rax], 0x16; mov eax, 0x16; ret; 
0x000000001411ed: or al, [rax]; mov dword ptr fs:[rax], 0x22; mov eax, 0x22; pop rbx; ret; 
0x0000000013bf39: or al, [rax]; mov eax, [rax+0x18]; test eax, eax; jne short 0x000000000013bf48; ret; 
0x000000000fbb7e: or al, [rax]; mov edi, edi; movsxd rax, [rdx+rdi*4]; add rax, rdx; notrack jmp rax; 
0x00000000104ab2: or al, [rax]; mov r15d, eax; movsxd rax, [rdx+r15*4]; add rax, rdx; notrack jmp rax; 
0x0000000013c029: or al, [rax]; mov rax, fs:[rax]; ret; 
0x00000000107ac1: or al, [rax]; mov rdx, [rax+0xb0]; call qword ptr [rax+0x88]; 
0x00000000103b60: or al, [rax]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000000fbb28: or al, [rax]; movsxd rax, [rdx+rdi*4]; add rax, rdx; notrack jmp rax; 
0x00000000103f51: or al, [rax]; movsxd rdx, [rcx+r9*4]; add rdx, rcx; notrack jmp rdx; 
0x00000000107472: or al, [rax]; movups [rsp+0xc8], xmm0; mov [rsp+0xe8], eax; mov eax, 0xe; syscall; 
0x00000000105c3e: or al, [rax]; movzx eax, al; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x00000000104398: or al, [rax]; movzx eax, al; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000001414c7: or al, [rax]; ret; 
0x00000000141485: or al, [rax]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000013bad1: or al, [rax]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000013e5fe: or al, [rax]; ror rdi, 0x11; xor rdi, fs:[0x30]; call rax; 
0x0000000013bda5: or al, [rax]; syscall; 
0x0000000013baec: or al, [rax]; test eax, eax; je short 0x000000000013baf8; ret; 
0x00000000141bd8: or al, [rax]; test eax, eax; je short 0x0000000000141be0; ret; 
0x0000000013c971: or al, [rax]; test rax, rax; je short 0x000000000013c980; add rsp, 0x8; ret; 
0x0000000013dd59: or al, [rax]; test rax, rax; jne short 0x000000000013dd68; ret; 
0x00000000105dcf: or al, [rcx-0x80]; jmp qword ptr [rdi+rcx]; 
0x0000000010a8f5: or al, [rcx]; add [rax], al; syscall; 
0x0000000011012a: or al, bh; dec dword ptr [rbx+0x410c247c]; mov eax, eax; mov eax, 0x4a; syscall; 
0x0000000011020c: or al, bh; dec dword ptr [rbx+0x480c2444]; add esp, 0x18; ret; 
0x0000000018a8c3: or al, bl; nop [rax+rax]; lea rax, [rdi+0xb]; ret; 
0x00000000119849: or al, ch; add [rdx-0x9], esi; dec dword ptr [rbx+0x48082444]; add esp, 0x18; ret; 
0x00000000071dcf: or al, ch; jnp short 0x0000000000071e3f; cld; jmp qword ptr [rsi+0x66]; 
0x00000000050b91: or al, ch; mov [rdi-0x2], esp; dec dword ptr [rax-0x77]; ret; 
0x00000000147d3b: or al, ch; movd ecx, mm7; jmp qword ptr [rsi+0xf]; 
0x000000001288bb: or al, ch; pop rdi; idiv edi; jmp qword ptr [rsi+0x2e]; 
0x0000000012910b: or al, ch; pxor mm7, mm7; jmp qword ptr [rsi+0x2e]; 
0x000000000415bf: or al, ch; ret far; 
0x0000000007ff77: or al, ch; ret; 
0x0000000011962d: or al, ch; sbb eax, 0x48fff774; mov eax, [rsp+0x8]; add rsp, 0x28; ret; 
0x0000000007762f: or al, ch; sbb edx, [rsp+rdi*8]; jmp qword ptr [rsi+0x66]; 
0x0000000011a379: or al, ch; shl dword ptr [rsi-0x9], 0x1; dec dword ptr [rbx+0x48082444]; add esp, 0x18; ret; 
0x000000000ed360: or al, ch; stosb [rdi]; ret; 
0x00000000105c3d: or al, fs:[rax]; movzx eax, al; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x0000000010e6de: or ax, 0x6400; mov dword ptr [rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000a52e8: or bh, [rsi]; jmp r10; 
0x0000000014d77c: or bh, al; and al, 0x30; add eax, 0xf000000; adc [rsp+0x18], eax; call qword ptr [rax+0x18]; 
0x00000000138f0e: or bh, bh; jmp qword ptr [rsi+0x66]; 
0x00000000138f0f: or bh, bh; jmp qword ptr [rsi+0x66]; 
0x0000000007f431: or bh, bh; rol byte ptr [rbx+0xf74fff8], 0x1; mov rax, [rsp+0x8]; add rsp, 0x18; ret; 
0x000000001597be: or bh, bh; xor [rax-0x75], cl; add eax, 0x89670; mov rdi, [rdi]; call qword ptr [rax+0x278]; 
0x000000001277c6: or bh, cl; dec dword ptr [rax-0x73]; add eax, 0xfff90a10; cmovne rax, rdx; ret; 
0x000000000f185f: or bh, dh; ret; 
0x00000000115855: or bl, [rbp+0x41]; pop rsp; pop r13; ret; 
0x00000000090bc2: or bl, [rbp+rdx]; pop rbx; mov dword ptr [rip+0x155aef], 0x1; ret; 
0x0000000014c83d: or bl, [rbx+0x31]; rcr byte ptr [rbp+0x41], 0x5c; ret; 
0x000000000fd0a2: or bl, [rdx+0x59]; pop rbx; ret; 
0x00000000044b45: or bl, [rdx]; add [rcx+rdi-0x1d], cl; jae short 0x0000000000044b5b; nop [rax]; call qword ptr [rbx]; 
0x00000000042418: or bl, [rdx]; add [rdi+rax*8], ah; add [rax], al; add [rax-0x1], bh; ret; 
0x00000000142f4e: or bl, al; mov dword ptr [rsi], 0xc; ret; 
0x0000000010e678: or bl, al; mov rax, [rip+0xd47c7]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000018a8a3: or bl, al; nop [rax+rax]; lea rax, [rdi+0x9]; ret; 
0x000000001722b5: or bl, al; nop [rax+rax]; mov [rcx], rdx; mov [rcx+0x5], rdx; ret; 
0x00000000172296: or bl, al; nop [rax+rax]; mov [rcx], rdx; mov [rcx+0x7], edx; ret; 
0x00000000172285: or bl, al; nop [rax+rax]; mov [rcx], rdx; mov [rcx+0x8], dx; ret; 
0x000000000b41f5: or bl, al; nop [rax+rax]; mov [rdi], rdx; mov [rdi+0x5], rdx; ret; 
0x000000000b41d6: or bl, al; nop [rax+rax]; mov [rdi], rdx; mov [rdi+0x7], edx; ret; 
0x000000000b41c5: or bl, al; nop [rax+rax]; mov [rdi], rdx; mov [rdi+0x8], dx; ret; 
0x0000000011b9a6: or bl, al; nop [rax+rax]; ret; 
0x0000000012b4f1: or bl, al; nop [rax+rax]; ret; 
0x000000000920ca: or bl, al; nop [rax]; endbr64; mov eax, 0x18; syscall; 
0x000000001112ca: or bl, al; nop [rax]; mov eax, 0x1; ret; 
0x00000000137497: or bl, al; nop [rax]; mov eax, 0xffffffff; ret; 
0x00000000110e17: or bl, al; nop [rax]; ret; 
0x000000000cc143: or bl, al; nop [rax]; xor eax, eax; add rsp, 0x8; ret; 
0x000000000dbbfe: or bl, al; ret; 
0x00000000091171: or bl, bh; xor eax, eax; ret; 
0x0000000012f692: or bl, dh; call far fword ptr [rax+0x4c]; 
0x00000000167663: or bl, dh; movq [rdi], mm1; ret; 
0x00000000142f4d: or bl, r8b; mov dword ptr [rsi], 0xc; ret; 
0x000000000408a9: or byte ptr [rax+0x21], 0xc2; mov [rdi], rdx; ret; 
0x00000000040879: or byte ptr [rax+0x21], 0xc2; movq xmm0, rdx; ret; 
0x00000000107eaa: or byte ptr [rax+0x2], 0x0; add [rax-0x7b], cl; shl byte ptr [rsp+rsi+0x31], 0xd2; call rax; 
0x00000000146f20: or byte ptr [rax+0x66000000], 0x89; insb [rdi], dx; mov eax, 0x1; ret; 
0x0000000011ad9c: or byte ptr [rax+rax], 0xf7; fsub st, dword ptr [rcx+rcx*4+0x2]; mov eax, 0xffffffff; ret; 
0x0000000011fd49: or byte ptr [rax+rax], 0xf; add eax, 0xffff33e9; jmp qword ptr [rbp+rax*2-0x75]; 
0x00000000126037: or byte ptr [rcx+rcx*4-0x16], 0xf; adc [rbp-0x78], ebp; call rax; 
0x00000000126399: or byte ptr [rcx+rcx*4-0x1e], 0xf; adc [rbp-0x78], ebx; call rax; 
0x000000001266a0: or byte ptr [rcx+rcx*4-0x1e], 0xf; adc [rbp-0x78], edi; call rax; 
0x000000001265c9: or byte ptr [rcx+rcx*4-0x1e], 0xf; adc [rbp-0x78], esi; call rax; 
0x00000000126099: or byte ptr [rcx+rcx*4-0x1e], 0xf; adc [rbp-0x78], esp; call rax; 
0x0000000010e6d5: or byte ptr [rcx-0x3c3fcef9], 0x48; mov eax, [rip+0xd4766]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000055c79: or byte ptr [rcx-0x77], 0x0; mov eax, 0x1; mov dword ptr [rdx], 0xffffc002; ret; 
0x0000000012986f: or byte ptr [rdi], 0x45; mov ebx, 0x401f0f; mov eax, edi; shr eax, 0x18; ret; 
0x000000001297de: or byte ptr [rdi], 0x45; mov ebx, 0x441f0f; add [rcx-0xda08], cl; inc dword ptr [rax]; ret; 
0x0000000002d516: or byte ptr [rdi], 0x87; ret far; 
0x000000000f7abf: or ch, al; ret far; 
0x00000000188d82: or ch, cl; add al, [rax]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000002c8d2: or ch, cl; ret; 
0x000000000b3ae1: or cl, [rax-0x73]; jg short 0x00000000000b3af0; jne 0x00000000000b4270; ret; 
0x000000000b51c5: or cl, [rax-0x73]; jg short 0x00000000000b51d4; jne 0x00000000000b5ac0; ret; 
0x00000000172142: or cl, [rax-0x73]; or cl, [rdi]; test [rbx+0x2], eax; add [rax], al; ret; 
0x00000000080e89: or cl, [rax-0x7d]; ret; 
0x00000000045f20: or cl, [rcx+0x10e9c117]; and ecx, 0x3ff; xor eax, ecx; ret; 
0x00000000149982: or cl, [rcx-0xd]; jmp qword ptr [rsi+0x2e]; 
0x00000000119f3a: or cl, [rdi-0x2708fff4]; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000bd8fb: or cl, [rdi]; add al, ch; mov r9b, 0xf7; jmp qword ptr [rsi+0x66]; 
0x00000000172145: or cl, [rdi]; test [rbx+0x2], eax; add [rax], al; ret; 
0x00000000176536: or cl, [rdi]; test [rdx-0x7ffffffe], esp; cmp [rcx], al; sbb rax, 0xffffffffffffffff; ret; 
0x0000000011a43a: or cl, [rdx-0x2708fff4]; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000148413: or cl, [rdx]; add [rdi], cl; add eax, 0x31e88beb; adc edi, esi; call qword ptr [rax-0x5e1f00d]; 
0x00000000090e06: or cl, al; clc; add al, [rbx+0x68901e0]; xor eax, eax; ret; 
0x000000001291fb: or cl, bh; jmp qword ptr [rsi-0x70]; 
0x0000000012921a: or cl, bh; jmp qword ptr [rsi-0x70]; 
0x000000000406b7: or cl, bl; in eax, 0xdf; loopne 0x000000000004069a; fsub st, dword ptr [rip+0x200]; ret; 
0x000000000405ff: or cl, bl; std; fstp st(1), st; ret; 
0x00000000149980: or cl, ch; or cl, [rcx-0xd]; jmp qword ptr [rsi+0x2e]; 
0x000000000c9f70: or cl, ch; pop rdx; fdiv st(7), st; jmp qword ptr [rsi+0x2e]; 
0x00000000192077: or cl, ch; ret; 
0x000000000b7cd5: or cl, cl; cmove rax, rdx; ret; 
0x000000000406f5: or dh, [rbp+0x8]; fadd st, st(0); add rsp, 0x8; ret; 
0x000000000eab4b: or dh, [rbp+rdi+0x48]; add esp, 0x8; pop rbx; pop rbp; ret; 
0x000000000395d9: or dh, [rdi+0x27]; lea rdx, [rip+0x16897d]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000084706: or dh, [rdi+rcx+0x48]; cmp eax, esi; ja short 0x0000000000084700; lea eax, [rdx+rdi]; ret; 
0x0000000008f046: or dh, [rdi+rcx+0x48]; cmp eax, esi; ja short 0x000000000008f040; lea eax, [rdx+rdi]; ret; 
0x00000000090a06: or dh, [rsp+rcx+0x44]; mov eax, eax; ret; 
0x00000000177ab9: or dh, al; movzx eax, byte ptr [rdi+rcx]; movzx edx, byte ptr [rsi+rcx]; sub eax, edx; ret; 
0x0000000009106e: or dh, bh; xor eax, eax; ret; 
0x00000000167583: or dh, bl; movq [rdi], mm1; ret; 
0x00000000040acd: or dh, dl; addps xmm0, xmm0; ret; 
0x00000000119c3a: or dl, [rdx-0x2708fff4]; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000103d78: or dword ptr [rax+0x1], 0xffffffd8; notrack jmp rax; 
0x0000000008ed48: or dword ptr [rax+0x74], 0x80; mov rax, [rax+0x68]; test rax, rax; jne short 0x000000000008ed48; ret; 
0x0000000011ace4: or dword ptr [rax+rax], 0x8964d8f7; add bh, [rax-0x1]; ret; 
0x00000000053937: or dword ptr [rax-0x7d], 0xffffffee; add [rbp-0x1e], esi; mov eax, 0x1; ret; 
0x0000000003fb0c: or dword ptr [rax], 0x2057034c; mov rax, r10; ret; 
0x000000001122a8: or dword ptr [rax], 0x8000; add rsp, 0x8; mov eax, r8d; ret; 
0x0000000018fa81: or dword ptr [rbp-0x4], 0xffffffff; dec dword ptr [rcx-0x7d]; ret; 
0x00000000073080: or dword ptr [rbx+0x8], 0x0; add [rax-0x77], cl; fimul st, dword ptr [rcx+rcx*4-0x9]; call qword ptr [r12+0x38]; 
0x0000000007f3e7: or dword ptr [rbx], 0x20; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000141207: or dword ptr [rbx], 0x20; mov dword ptr fs:[rax], 0x1d; mov eax, 0x1d; pop rbx; ret; 
0x0000000008ab90: or dword ptr [rbx], 0x20; mov eax, 0xffffffff; pop rbx; ret; 
0x0000000009048c: or dword ptr [rbx], 0x8; pop rbx; ret; 
0x000000000b469d: or dword ptr [rcx+0xf], 0x0; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000189287: or dword ptr [rcx+rax+0x4e8b0000], 0xfffffffc; cmp ecx, [rdi-0x4]; jne 0x0000000000189446; xor eax, eax; ret; 
0x000000000b388d: or dword ptr [rcx-0x73], 0xc; or edi, [rsi]; jmp rcx; 
0x000000000f9829: or dword ptr [rcx], 0xffffffff; inc dword ptr [rax+0x3108384b]; rcr byte ptr [rbx+0x5d], 0x41; pop rsp; ret; 
0x00000000091078: or dword ptr [rdi+0x8], 0x1; xor eax, eax; ret; 
0x00000000091140: or dword ptr [rdi+0x8], 0x40; xor eax, eax; mov [rdi+0x4], esi; ret; 
0x0000000002bba1: or dword ptr [rip+0x1b9af4], 0x2; add rsp, 0x8; ret; 
0x000000001414b7: or dword ptr [rip+0xa77c2], 0x2; add rsp, 0x8; lea rax, [rip+0xa77d7]; ret; 
0x0000000013bb01: or dword ptr [rip+0xace44], 0x2; add rsp, 0x8; ret; 
0x00000000112b3e: or eax, 0x1000d4d; ret; 
0x000000000dfee6: or eax, 0x102f5d; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000dfeb6: or eax, 0x102f8d; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000dfe86: or eax, 0x102fbd; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000dfe56: or eax, 0x102fed; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000dfdf6: or eax, 0x10304d; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000dfdc6: or eax, 0x10307d; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000dfb76: or eax, 0x1032cd; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000a4c8f: or eax, 0x103f48; mov edx, eax; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x000000000deb86: or eax, 0x1042bd; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000de7b6: or eax, 0x10468d; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000de566: or eax, 0x1048dd; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000181b0f: or eax, 0x129ac; mov edx, [rcx+rdx*4]; mov eax, [rcx+rax*4]; sub eax, edx; ret; 
0x0000000007d7d8: or eax, 0x12b037; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x0000000006a16f: or eax, 0x13ca48; mov r11d, [rbp-0x5c0]; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x0000000018042e: or eax, 0x1408d; mov eax, [rcx+rax*4]; mov edx, [rcx+rdx*4]; sub eax, edx; ret; 
0x0000000018015a: or eax, 0x14361; mov edx, [rcx+rdx*4]; mov eax, [rcx+rax*4]; sub eax, edx; ret; 
0x00000000061723: or eax, 0x144ac0; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x00000000061653: or eax, 0x144b28; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x0000000017ed45: or eax, 0x15776; mov eax, [rcx+rax*4]; mov edx, [rcx+rdx*4]; sub eax, edx; ret; 
0x0000000008aae7: or eax, 0x15a3d4; mov [rdx+0xe0], rcx; pop rbx; ret; 
0x0000000017d23f: or eax, 0x1727c; mov edx, [rcx+rdx*4]; mov eax, [rcx+rax*4]; sub eax, edx; ret; 
0x00000000040f07: or eax, 0x175854; pand xmm0, [rip+0x17585c]; por xmm0, xmm1; ret; 
0x00000000040959: or eax, 0x175d82; movsd xmm0, [rip+0x17637a]; orpd xmm1, [rip+0x175d92]; mulsd xmm0, xmm1; ret; 
0x00000000040969: or eax, 0x175d92; mulsd xmm0, xmm1; ret; 
0x00000000040933: or eax, 0x175da8; movsd xmm0, [rip+0x1763a8]; orpd xmm1, [rip+0x175dc8]; mulsd xmm0, xmm1; ret; 
0x00000000040943: or eax, 0x175dc8; mulsd xmm0, xmm1; ret; 
0x000000000407df: or eax, 0x175efc; orpd xmm0, xmm1; ret; 
0x0000000017b5ae: or eax, 0x18f0d; mov eax, [rcx+rax*4]; mov edx, [rcx+rdx*4]; sub eax, edx; ret; 
0x0000000005365a: or eax, 0x18f7e9; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000053181: or eax, 0x18fcc2; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000005301e: or eax, 0x18fe25; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000017b27a: or eax, 0x19241; mov edx, [rcx+rdx*4]; mov eax, [rcx+rax*4]; sub eax, edx; ret; 
0x0000000013717a: or eax, 0x1975c085; mov eax, r8d; ret; 
0x0000000017e8b9: or eax, 0x1; ret; 
0x00000000185831: or eax, 0x1; vzeroupper; ret; 
0x000000000421d6: or eax, 0x1a0c6d; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000041bd6: or eax, 0x1a126d; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001799a5: or eax, 0x1ab16; mov eax, [rcx+rax*4]; mov edx, [rcx+rdx*4]; sub eax, edx; ret; 
0x00000000110a55: or eax, 0x1b800; add [rax], al; add rsp, 0x8; ret; 
0x000000000b4a81: or eax, 0x1c478d48; ret; 
0x000000000b5511: or eax, 0x1c478d48; sub r8, 0x1d; lea rdi, [rdi+0x1d]; jne 0x00000000000b5ac0; ret; 
0x000000000b58f1: or eax, 0x1d478d48; ret; 
0x000000000b3d81: or eax, 0x1de88349; lea rdi, [rdi+0x1d]; jne 0x00000000000b4270; ret; 
0x000000001721a8: or eax, 0x1e1850f; add [rax], al; ret; 
0x00000000028dc8: or eax, 0x1f0f6600; add [rax], r8b; endbr64; lea rax, [rip+0x18932d]; ret; 
0x00000000112b4e: or eax, 0x1f88300; jg short 0x0000000000112b60; ret; 
0x000000001765c9: or eax, 0x210850f; add [rax], al; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x0000000010f238: or eax, 0x2894800; cmp rdi, rax; ja short 0x000000000010f268; xor eax, eax; ret; 
0x000000000faf4e: or eax, 0x2; mov [rdi+0x38], al; mov [rsi], edx; movups [rsi+0x8], xmm0; ret; 
0x000000000910a5: or eax, 0x2; mov [rdi+0x8], eax; xor eax, eax; ret; 
0x0000000018dd4e: or eax, 0x2a91d; movsxd rbx, [rcx+rbx*4]; add rcx, rbx; notrack jmp rcx; 
0x0000000018dba7: or eax, 0x2aa58; movsxd rcx, [r9+rbx*4]; add rcx, r9; notrack jmp rcx; 
0x0000000018a8f2: or eax, 0x2e6666c3; nop [rax+rax]; lea rax, [rdi+0xe]; ret; 
0x00000000113bc3: or eax, 0x2f6e800; add [rax], al; lea rax, [rip+0xd3c9f]; add rsp, 0x8; ret; 
0x0000000010ec10: or eax, 0x30; mov [rdi+0x8], eax; mov eax, 0x100; mov [rdi+0x16], ax; ret; 
0x0000000004c290: or eax, 0x36b90000; add [rax], al; add [rax+0x63], cl; ret; 
0x000000000d01c6: or eax, 0x3d8d4800; add dword ptr [rsi+rcx], 0xf6887ce8; jmp qword ptr [rsi+0x2e]; 
0x00000000040d94: or eax, 0x3f000000; mov [rdi], edx; movd xmm0, eax; ret; 
0x00000000126baa: or eax, 0x3f8348; je short 0x0000000000126bc0; ret; 
0x000000001140d7: or eax, 0x415c4100; pop rbp; ret; 
0x0000000011409e: or eax, 0x415d5900; pop rsp; pop r13; ret; 
0x0000000010f92b: or eax, 0x44110f00; and al, 0x8; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000082062: or eax, 0x44a8d48; mov [rax], rcx; mov eax, [rdx]; ret; 
0x000000001512da: or eax, 0x44c03145; mov eax, eax; ret; 
0x000000000e44db: or eax, 0x456ee800; cmc; jmp qword ptr [rsi+0xf]; 
0x00000000044dc0: or eax, 0x4801001a; add esp, 0x8; pop rbx; pop rbp; ret; 
0x000000000d678f: or eax, 0x48c18900; movsxd edx, [rdi+rcx*4]; add rdx, rdi; notrack jmp rdx; 
0x000000000d67d2: or eax, 0x48c68900; movsxd edx, [rdi+rsi*4]; add rdx, rdi; notrack jmp rdx; 
0x000000000d6724: or eax, 0x48ca8900; movsxd eax, [rsi+rdx*4]; add rax, rsi; notrack jmp rax; 
0x000000000ae155: or eax, 0x48fad348; test edx, edx; je short 0x00000000000ae180; bsf rax, rdx; ret; 
0x0000000011ae8e: or eax, 0x48ffb70f; lea eax, [rip+0x91667]; mov eax, [rax+rdi*4]; ret; 
0x0000000011257f: or eax, 0x4c000d52; mov eax, eax; ret; 
0x0000000010e84c: or eax, 0x5401be00; add [rax], al; mov eax, r8d; mov ebx, fs:[r10]; syscall; 
0x00000000110b02: or eax, 0x5894800; xchg ebp, eax; imul ecx, [rip+0x58d4800], 0x66; imul ecx, [rip-0x3b7cb800], 0x8; ret; 
0x00000000110b09: or eax, 0x58d4800; imul cx, [rip-0x3b7cb800], 0x8; ret; 
0x0000000008a0d2: or eax, 0x5bd88948; pop rbp; pop r12; ret; 
0x00000000039602: or eax, 0x5be43145; pop rbp; mov rax, r12; pop r12; ret; 
0x00000000113b74: or eax, 0x5c415d00; pop r13; ret; 
0x00000000074fa4: or eax, 0x63490000; ret; 
0x0000000014a546: or eax, 0x63759; mov edx, esi; movsxd rax, [rcx+rdx*4]; add rax, rcx; notrack jmp rax; 
0x00000000149c72: or eax, 0x63fed; mov edx, esi; movsxd rax, [rcx+rdx*4]; add rax, rcx; notrack jmp rax; 
0x0000000011a237: or eax, 0x64000c8c; mov dword ptr [rax], 0x26; mov rax, 0xffffffffffffffff; ret; 
0x00000000029037: or eax, 0x64001b9e; add rax, [0x0]; ret; 
0x000000001085a9: or eax, 0x64d8f700; mov [rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010ff54: or eax, 0x64d8f700; mov [rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010805d: or eax, 0x64d8f700; mov [rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000106d15: or eax, 0x64d8f700; mov [rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x000000000b3b45: or eax, 0x724850f; add [rax], al; ret; 
0x000000000b8bf2: or eax, 0x7402f883; adc [rbx+0x137403f8], al; xor eax, eax; ret; 
0x00000000113326: or eax, 0x74db8500; or al, 0xf7; ret; 
0x0000000010f8dc: or eax, 0x75c08500; mov eax, 0x71; syscall; 
0x0000000010f97c: or eax, 0x75c08500; mov eax, 0x72; syscall; 
0x000000000b4a78: or eax, 0x77f0ff3; movdqu [rdi+0xd], xmm2; lea rax, [rdi+0x1c]; ret; 
0x000000000b58e8: or eax, 0x77f0ff3; movdqu [rdi+0xd], xmm2; lea rax, [rdi+0x1d]; ret; 
0x000000000b33a8: or eax, 0x77f0ff3; movdqu [rdi+0xd], xmm2; ret; 
0x000000000b7548: or eax, 0x77f0ff3; movdqu [rdi+0xd], xmm2; xor ch, ch; mov [rdi+0x1d], ch; ret; 
0x0000000005fcc5: or eax, 0x7; mov [rdx], eax; mov eax, 0x1; ret; 
0x0000000010e6d1: or eax, 0x80000000; mov [rdi], eax; xor eax, eax; ret; 
0x000000000c71e0: or eax, 0x80000000; mov [rdx+0x4], r8d; mov [rdx], eax; xor eax, eax; ret; 
0x00000000107ea6: or eax, 0x808b4800; add al, [rax]; add [rax-0x7b], cl; shl byte ptr [rsp+rsi+0x31], 0xd2; call rax; 
0x000000001623d0: or eax, 0x80f6b; lea r11, [rip+0x55734]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x00000000162376: or eax, 0x80fc5; lea r11, [rip+0x5574e]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x0000000015f9f0: or eax, 0x8394b; lea r11, [rip+0x57f54]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x0000000015f98f: or eax, 0x839ac; lea r11, [rip+0x57f75]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x000000000baa56: or eax, 0x841f0f66; add [rax], al; add [rax], al; add [rax-0x7d], cl; ret; 
0x0000000003572b: or eax, 0x8548ffff; ror byte ptr [rdi], 0x84; ret; 
0x000000000b5239: or eax, 0x880850f; add [rax], al; ret; 
0x0000000007b6b6: or eax, 0x894c0000; cli; mov rsi, r12; mov rdi, rbp; call qword ptr [rax+0x38]; 
0x00000000111dea: or eax, 0x894c2300; rol dh, 0x46; inc dword ptr [rax]; ret; 
0x000000000a7428: or eax, 0x894d0000; ret far; 
0x0000000017b5af: or eax, 0x8b00018f; add al, 0x81; mov edx, [rcx+rdx*4]; sub eax, edx; ret; 
0x0000000017b2af: or eax, 0x8b000192; or al, 0x8a; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000010aff3: or eax, 0x8b446400; xor ebp, eax; mov bl, 0xf1; jmp qword ptr [rsp+rax*2-0x77]; 
0x00000000108432: or eax, 0x8b6400; cmp eax, 0x26; je short 0x0000000000108440; mov eax, r9d; ret; 
0x000000000a061e: or eax, 0x8d28eb00; inc qword ptr [r9-0x7d]; ret; 
0x00000000105c3b: or eax, 0xa64e8; movzx eax, al; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x00000000103f4e: or eax, 0xa7fcd; movsxd rdx, [rcx+r9*4]; add rdx, rcx; notrack jmp rdx; 
0x000000000f7cc1: or eax, 0xb366e; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x000000000f7904: or eax, 0xb36bf; mov rax, rdx; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x000000000f79d1: or eax, 0xb38ce; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x000000000d4295: or eax, 0xb60f4100; ror byte ptr [rax+0x63], cl; adc al, 0x96; add rdx, rsi; notrack jmp rdx; 
0x000000000d421b: or eax, 0xb60f4100; ror byte ptr [rax+0x63], cl; adc al, 0x97; add rdx, rdi; notrack jmp rdx; 
0x000000000eb786: or eax, 0xbf5ad; movzx ebp, bpl; movsxd rax, [rcx+rbp*4]; add rax, rcx; notrack jmp rax; 
0x000000001125b1: or eax, 0xc0894c00; add rsp, 0x8; ret; 
0x00000000112581: or eax, 0xc0894c00; ret; 
0x000000000d0e16: or eax, 0xc0b60f00; movsxd rax, [rdi+rax*4]; add rax, rdi; notrack jmp rax; 
0x000000000cb7b2: or eax, 0xc2bc0f48; shr rax, 0x2; ret; 
0x00000000113b39: or eax, 0xc4834800; adc [rbp+0x41], bl; pop rsp; pop r13; ret; 
0x000000000fca3f: or eax, 0xc70002cd; mov al, [0xfffad1e900000001]; call qword ptr [rax-0x5e1f00d]; 
0x00000000110579: or eax, 0xc76400; add [rax], al; add [rax-0x1], bh; ret; 
0x0000000010de3d: or eax, 0xc76400; or [rax], eax; add [rax], al; mov eax, 0xffffffff; ret; 
0x0000000010f26d: or eax, 0xc76400; or al, 0x0; add [rax], al; mov eax, 0xffffffff; ret; 
0x0000000011a979: or eax, 0xc84ca; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011a946: or eax, 0xc84fd; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011a916: or eax, 0xc852d; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011a8e9: or eax, 0xc855a; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011a466: or eax, 0xc89dd; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011a439: or eax, 0xc8a0a; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011a406: or eax, 0xc8a3d; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011a3d6: or eax, 0xc8a6d; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011a306: or eax, 0xc8b3d; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011a216: or eax, 0xc8c2d; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011a1d6: or eax, 0xc8c6d; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011a1a6: or eax, 0xc8c9d; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011a176: or eax, 0xc8ccd; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011a146: or eax, 0xc8cfd; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011a119: or eax, 0xc8d2a; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011a0e6: or eax, 0xc8d5d; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011a0b6: or eax, 0xc8d8d; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011a086: or eax, 0xc8dbd; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011a056: or eax, 0xc8ded; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011a026: or eax, 0xc8e1d; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000119ff9: or eax, 0xc8e4a; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000119fc9: or eax, 0xc8e7a; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000119f96: or eax, 0xc8ead; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000119f66: or eax, 0xc8edd; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000119f39: or eax, 0xc8f0a; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000119f09: or eax, 0xc8f3a; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000119ed6: or eax, 0xc8f6d; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000119ea6: or eax, 0xc8f9d; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000119e76: or eax, 0xc8fcd; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000119e46: or eax, 0xc8ffd; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000119e16: or eax, 0xc902d; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000119de9: or eax, 0xc905a; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000119db6: or eax, 0xc908d; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000119d89: or eax, 0xc90ba; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000119d56: or eax, 0xc90ed; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000119d26: or eax, 0xc911d; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000119cf6: or eax, 0xc914d; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000119cc6: or eax, 0xc917d; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000119c96: or eax, 0xc91ad; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000119c66: or eax, 0xc91dd; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000119c39: or eax, 0xc920a; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000119bf6: or eax, 0xc924d; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000119bc6: or eax, 0xc927d; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001194f6: or eax, 0xc994d; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001194c9: or eax, 0xc997a; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000119436: or eax, 0xc9a0d; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001192f6: or eax, 0xc9b4d; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001192c6: or eax, 0xc9b7d; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011922f: or eax, 0xc9c14; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001191b6: or eax, 0xc9c8d; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000119186: or eax, 0xc9cbd; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000117049: or eax, 0xcbdfa; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000117016: or eax, 0xcbe2d; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000116fe9: or eax, 0xcbe5a; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000116fb6: or eax, 0xcbe8d; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000116f86: or eax, 0xcbebd; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000116f59: or eax, 0xcbeea; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000116f26: or eax, 0xcbf1d; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000116ef9: or eax, 0xcbf4a; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000116ec9: or eax, 0xcbf7a; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000116e96: or eax, 0xcbfad; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000116e66: or eax, 0xcbfdd; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000116e39: or eax, 0xcc00a; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000113ae6: or eax, 0xcf35d; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000113ab6: or eax, 0xcf38d; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000113a86: or eax, 0xcf3bd; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000113a56: or eax, 0xcf3ed; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000113a29: or eax, 0xcf41a; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001139f6: or eax, 0xcf44d; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001139c6: or eax, 0xcf47d; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001138f6: or eax, 0xcf54d; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001138c6: or eax, 0xcf57d; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000113688: or eax, 0xcf7bb; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000110606: or eax, 0xd283d; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001105d6: or eax, 0xd286d; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001105a6: or eax, 0xd289d; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000110266: or eax, 0xd2bdd; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001101a6: or eax, 0xd2c9d; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001100e6: or eax, 0xd2d5d; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001100b6: or eax, 0xd2d8d; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010fea6: or eax, 0xd2f9d; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010fd66: or eax, 0xd30dd; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010f326: or eax, 0xd3b1d; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010f196: or eax, 0xd3cad; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001721a4: or eax, 0xd4a8d48; jne 0x0000000000172390; ret; 
0x000000001765c5: or eax, 0xd4a8d48; jne 0x00000000001767e0; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x0000000010dca9: or eax, 0xd519a; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000b3b41: or eax, 0xd7f8d48; jne 0x00000000000b4270; ret; 
0x000000000b5235: or eax, 0xd7f8d48; jne 0x00000000000b5ac0; ret; 
0x0000000010a9f6: or eax, 0xd844d; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010a9c6: or eax, 0xd847d; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010a996: or eax, 0xd84ad; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010a969: or eax, 0xd84da; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010a936: or eax, 0xd850d; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010a906: or eax, 0xd853d; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010a8d6: or eax, 0xd856d; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010a8a9: or eax, 0xd859a; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010a876: or eax, 0xd85cd; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010a0b9: or eax, 0xd8d8a; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010a086: or eax, 0xd8dbd; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010a056: or eax, 0xd8ded; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010a026: or eax, 0xd8e1d; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000109736: or eax, 0xd970d; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000109706: or eax, 0xd973d; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000109646: or eax, 0xd97fd; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000109616: or eax, 0xd982d; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001095e6: or eax, 0xd985d; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001095b6: or eax, 0xd988d; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000109586: or eax, 0xd98bd; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000109266: or eax, 0xd9bdd; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000108966: or eax, 0xda4dd; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000108936: or eax, 0xda50d; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000108736: or eax, 0xda70d; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000108706: or eax, 0xda73d; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001085d6: or eax, 0xda86d; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001085a6: or eax, 0xda89d; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000cec09: or eax, 0xe100e800; cld; dec dword ptr [rax-0x7b]; ror byte ptr [rdi], 0x84; ret; 
0x000000000fd2a6: or eax, 0xe5b9d; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000fd276: or eax, 0xe5bcd; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000fd246: or eax, 0xe5bfd; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000fd216: or eax, 0xe5c2d; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000fd1e6: or eax, 0xe5c5d; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000fd1b6: or eax, 0xe5c8d; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000fd186: or eax, 0xe5cbd; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000132f93: or eax, 0xe8c78948; mov ah, 0x67; add al, [rax]; mov rdi, r12; call rbp; 
0x000000000df451: or eax, 0xe9000000; ret far; 
0x000000000b5260: or eax, 0xee88349; lea rdi, [rdi+0xe]; jne 0x00000000000b5ac0; ret; 
0x00000000167429: or eax, 0xef00ff2; movdqu [rdi+0xd], xmm0; movdqu [rdi], xmm1; ret; 
0x00000000111c6c: or eax, 0xf0e78300; add edi, 0x26; mov fs:[rax], edi; mov eax, 0xffffffff; ret; 
0x00000000119437: or eax, 0xf7000c9a; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x0000000010a937: or eax, 0xf7000d85; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x00000000109737: or eax, 0xf7000d97; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x00000000108937: or eax, 0xf7000da5; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x00000000108737: or eax, 0xf7000da7; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x00000000167432: or eax, 0xf7f0ff3; ret; 
0x000000001122c9: or eax, 0xff854800; jne short 0x00000000001122e0; mov eax, 0x1; ret; 
0x00000000040448: or eax, 0xffff8000; inc eax; shr eax, 0x1f; ret; 
0x0000000007b48b: or eax, 0xfffff390; mov dword ptr [rsp+0x38], 0x1; mov rbx, rsi; jmp rcx; 
0x00000000041be1: or eax, 0xffffffff; ret; 
0x000000000794b5: or eax, [rax]; add [rax-0x77], cl; fimul st, dword ptr [rcx+rcx*4-0x2a]; mov rdi, r15; call qword ptr [r13+0x38]; 
0x0000000004b021: or eax, [rax]; add [rax-0x80], al; jmp far fword ptr [rbx]; 
0x00000000142f62: or eax, [rax]; add [rax], al; ret; 
0x000000001138b5: or eax, [rax]; add [rax], al; syscall; 
0x000000000462c2: or eax, [rax]; add [rax], eax; ret; 
0x000000000a75a8: or eax, [rax]; add [rbp-0x77], cl; ret far; 
0x0000000012b321: or eax, [rax]; add [rcx+rax*2-0x77], esp; sbb [rcx+rcx*4-0x40], ecx; pop rbx; ret; 
0x0000000013289d: or eax, [rax]; add [rcx+rcx*4-0x40], eax; pop rbp; ret; 
0x0000000007bba8: or eax, [rax]; add [rcx+rcx*4-0x6], cl; mov rsi, r12; mov rdi, rbp; call qword ptr [rax+0x38]; 
0x00000000129b69: or eax, [rax]; add rax, fs:[0x0]; ret; 
0x000000001333d7: or eax, [rax]; add rsp, 0x8; ret; 
0x00000000132ade: or eax, [rax]; call rax; 
0x000000001290f5: or eax, [rax]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000f7907: or eax, [rax]; mov rax, rdx; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x000000000f7906: or eax, [rax]; mov rax, rdx; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x000000000f59fe: or eax, [rax]; movsxd rax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x000000000f79d4: or eax, [rax]; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x000000000f7cc3: or eax, [rax]; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x000000000eb789: or eax, [rax]; movzx ebp, bpl; movsxd rax, [rcx+rbp*4]; add rax, rcx; notrack jmp rax; 
0x000000000eb71e: or eax, [rax]; movzx ebp, bpl; movsxd rax, [rdx+rbp*4]; add rax, rdx; notrack jmp rax; 
0x000000000eb878: or eax, [rax]; movzx r14d, r14b; movsxd rax, [rdx+r14*4]; add rax, rdx; notrack jmp rax; 
0x000000001284a5: or eax, [rax]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000013340f: or eax, [rax]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000129d78: or eax, [rax]; syscall; 
0x000000000b8ce0: or eax, [rax]; test byte ptr [rax+0x95], 0x2; lea rax, [rip+0x124c0]; cmovne rax, rdx; ret; 
0x0000000003d811: or eax, [rbp+0x31]; rcr byte ptr [rbx+0x5d], 0x4c; mov eax, eax; pop r12; ret; 
0x000000000cb164: or eax, [rbp+0x31]; sar byte ptr [rcx], 0xd0; jne short 0x00000000000cb170; mov eax, r8d; ret; 
0x00000000034823: or eax, [rbx+0x438901e8]; or [rbx+0x1974fdf8], al; pop rbx; ret; 
0x0000000010a958: or eax, [rcx]; add [rax], al; syscall; 
0x0000000004258d: or eax, [rdx]; mov [rdi], rax; xor eax, eax; ret; 
0x00000000050a7e: or eax, eax; mov rax, r8; ret; 
0x0000000014ced1: or eax, eax; or [rax], eax; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000018a8d3: or eax, ebx; nop [rax+rax]; lea rax, [rdi+0xc]; ret; 
0x000000000409c6: or eax, ecx; movq xmm0, rax; mulsd xmm0, [rip+0x17631b]; ret; 
0x00000000040b3d: or eax, ecx; sar eax, 0x1f; not eax; and eax, edx; ret; 
0x0000000004076b: or eax, ecx; sar rax, 0x3f; not eax; and eax, edx; ret; 
0x00000000040434: or eax, ecx; sub edx, eax; mov eax, edx; sar eax, 0x10; ret; 
0x000000000974dd: or eax, edi; add eax, 0x14f988; add [rax], al; add [rax], al; ret; 
0x0000000011014c: or eax, edi; dec dword ptr [rbx+0x480c2444]; add esp, 0x18; ret; 
0x000000000adafe: or eax, edx; bsf rax, rax; lea rax, [rdi+rax]; ret; 
0x00000000040477: or eax, edx; mov [rsp+0x10], eax; fld st, tbyte ptr [rsp+0x8]; ret; 
0x00000000059188: or eax, edx; mov [rsp-0x10], rax; movdqa xmm0, [rsp-0x18]; ret; 
0x00000000040a4b: or eax, edx; movq xmm0, rax; ret; 
0x000000000454de: or eax, edx; ret; 
0x00000000040e76: or eax, edx; sar rax, 0x3f; not eax; and eax, ecx; ret; 
0x00000000129804: or eax, esi; bswap eax; ret; 
0x00000000055cf0: or eax, esi; movq xmm0, rax; ret; 
0x00000000118ff6: or eax, esi; ret; 
0x0000000011998e: or eax, esi; wrpkru; xor eax, eax; ret; 
0x00000000158d8f: or ebp, edi; jmp qword ptr [rsi+0x66]; 
0x0000000002887b: or ebx, [r8]; add [rax+0x63], cl; add al, 0x82; add rax, rdx; notrack jmp rax; 
0x0000000002887c: or ebx, [rax]; add [rax+0x63], cl; add al, 0x82; add rax, rdx; notrack jmp rax; 
0x00000000086e41: or ebx, [rbx+rdi*8]; jmp qword ptr [rsi+0x66]; 
0x000000000457ac: or ebx, [rdx]; add [rcx], al; pop rbp; ret; 
0x000000000425f3: or ebx, [rdx]; add bl, al; nop [rax+rax]; mov eax, 0xffffffff; ret; 
0x0000000018a8b3: or ebx, eax; nop [rax+rax]; lea rax, [rdi+0xa]; ret; 
0x000000001675f3: or ebx, esi; movq [rdi], mm1; ret; 
0x00000000085a72: or ecx, 0x6; add [rax], al; lea rsi, [rsp+0x30]; mov rdi, r15; call qword ptr [r14+0x90]; 
0x00000000093ab0: or ecx, [rax+0x29]; ret far; 
0x00000000117094: or ecx, [rax+0x39]; xlat [rbx]; jne short 0x0000000000117088; mov rax, [rax+0x8]; ret; 
0x000000000b3aff: or ecx, [rax-0x73]; jg short 0x00000000000b3b0f; jne 0x00000000000b4270; ret; 
0x000000000b51f3: or ecx, [rax-0x73]; jg short 0x00000000000b5203; jne 0x00000000000b5ac0; ret; 
0x000000000dcda6: or ecx, [rax-0x7d]; ret; 
0x00000000112577: or ecx, [rax-0x7d]; ror byte ptr [rax], 0x48; mov [rip+0xd520d], eax; mov rax, r8; ret; 
0x0000000009048d: or ecx, [rax]; pop rbx; ret; 
0x000000000cb024: or ecx, [rbx+0x463b2847]; sub [rbp+0x63], dh; ret; 
0x000000000cb074: or ecx, [rbx+0x463b3847]; cmp [rbp+0x13], dh; ret; 
0x000000000b3b03: or ecx, [rdi]; test [rsi+0x7], esp; add [rax], al; ret; 
0x0000000014834e: or ecx, [rdx]; add [rax-0x77], cl; in eax, 0x89; ret; 
0x0000000014838a: or ecx, [rdx]; add al, ch; fsubp st(7), st; jmp qword ptr [rbx+rcx*4+0x4]; 
0x00000000040922: or ecx, eax; movq xmm0, rcx; ret; 
0x00000000107945: or edi, 0xffffffff; mov esi, eax; mov eax, 0x75; syscall; 
0x0000000010796e: or edi, 0xffffffff; mov esi, eax; mov eax, 0x77; syscall; 
0x000000000e09cc: or edi, [rax+0x7f]; mov edx, 0xfde8; cmove rax, rdx; ret; 
0x00000000136777: or edi, [rax-0x1]; ret; 
0x00000000136b27: or edi, [rdx+0x29]; mov eax, 0x104; cmovne eax, edx; ret; 
0x000000000e0b1f: or edi, [rdx+0x40]; mov eax, 0x20; cmove rax, rdx; ret; 
0x0000000015f9a2: or edi, [rsi]; jmp r9; 
0x000000000b3010: or edi, [rsi]; jmp rcx; 
0x0000000010ff3c: or edi, eax; dec dword ptr [rbx+0x480c2444]; add esp, 0x38; ret; 
0x000000000f982a: or edi, edi; inc dword ptr [rax+0x3108384b]; rcr byte ptr [rbx+0x5d], 0x41; pop rsp; ret; 
0x0000000018c686: or edi, esi; fadd st, st(3); nop [rax+rax]; ret; 
0x000000000619f0: or edi, esi; jmp far fword ptr [rbx]; 
0x00000000040d1c: or edi, esi; movd xmm0, edi; mulss xmm0, [rip+0x1766b6]; ret; 
0x00000000113870: or edx, 0x40; mov eax, ecx; syscall; 
0x00000000107942: or edx, 0xffffffff; or edi, 0xffffffff; mov esi, eax; mov eax, 0x75; syscall; 
0x0000000010796b: or edx, 0xffffffff; or edi, 0xffffffff; mov esi, eax; mov eax, 0x77; syscall; 
0x00000000040eb9: or edx, eax; mov rax, 0x7fff000000000000; sub rax, rdx; shr rax, 0x3f; ret; 
0x000000000e09ca: or edx, eax; or edi, [rax+0x7f]; mov edx, 0xfde8; cmove rax, rdx; ret; 
0x000000000e0b1d: or edx, eax; or edi, [rdx+0x40]; mov eax, 0x20; cmove rax, rdx; ret; 
0x000000000ae03f: or edx, ecx; bsf rdx, rdx; add rax, rdx; sub rax, rdi; ret; 
0x000000000405d9: or edx, esi; je 0x0000000000040528; ret; 
0x00000000055ca9: or esi, eax; or esi, edx; movd xmm0, esi; ret; 
0x0000000010e672: or esi, eax; xor eax, eax; mov [rdi+0x8], esi; ret; 
0x000000000b8297: or esi, ebx; movq [rdi+rdx-0x10], mm0; movdqu [rdi], xmm0; ret; 
0x00000000167513: or esi, ebx; movq [rdi], mm1; ret; 
0x00000000148d6f: or esi, edi; jmp qword ptr [rsi+0x66]; 
0x00000000040c94: or esi, edi; movd xmm0, esi; ret; 
0x00000000055cab: or esi, edx; movd xmm0, esi; ret; 
0x00000000055ce9: or esi, edx; shl rsi, 0x20; or rax, rsi; movq xmm0, rax; ret; 
0x00000000127c6f: or esi, esi; jmp qword ptr [rsi+0xf]; 
0x0000000011383b: or esi, esi; or al, 0x0; mov dword ptr fs:[rax], 0x16; mov rax, 0xffffffffffffffff; ret; 
0x0000000007f3e8: or esp, [rax]; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000141208: or esp, [rax]; mov dword ptr fs:[rax], 0x1d; mov eax, 0x1d; pop rbx; ret; 
0x0000000008ab91: or esp, [rax]; mov eax, 0xffffffff; pop rbx; ret; 
0x0000000015c858: or gs:[rax], al; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x0000000011386f: or r10d, 0x40; mov eax, ecx; syscall; 
0x00000000167662: or r11b, r14b; movq [rdi], mm1; ret; 
0x0000000018a8a2: or r11b, r8b; nop [rax+rax]; lea rax, [rdi+0x9]; ret; 
0x000000001675f2: or r11d, r14d; movq [rdi], mm1; ret; 
0x0000000018a8b2: or r11d, r8d; nop [rax+rax]; lea rax, [rdi+0xa]; ret; 
0x00000000177ab8: or r14b, al; movzx eax, byte ptr [rdi+rcx]; movzx edx, byte ptr [rsi+rcx]; sub eax, edx; ret; 
0x00000000167582: or r14b, r11b; movq [rdi], mm1; ret; 
0x00000000167512: or r14d, r11d; movq [rdi], mm1; ret; 
0x0000000014d77b: or r15b, r8b; and al, 0x30; add eax, 0xf000000; adc [rsp+0x18], eax; call qword ptr [rax+0x18]; 
0x0000000013361b: or r8, [r8]; syscall; 
0x000000001337d3: or r8, [rax]; add [rcx+rax*2-0x77], esp; sbb [rcx+rcx*4-0x40], ecx; pop rbx; ret; 
0x0000000013375b: or r8, [rax]; syscall; 
0x000000001339e6: or r8, [rax]; syscall; 
0x00000000107471: or r8b, [r8]; movups [rsp+0xc8], xmm0; mov [rsp+0xe8], eax; mov eax, 0xe; syscall; 
0x0000000011020b: or r8b, dil; dec dword ptr [rbx+0x480c2444]; add esp, 0x18; ret; 
0x0000000018a8c2: or r8b, r11b; nop [rax+rax]; lea rax, [rdi+0xb]; ret; 
0x00000000133f67: or r8d, [rax]; syscall; 
0x00000000050a7d: or r8d, eax; mov rax, r8; ret; 
0x0000000018a8d2: or r8d, r11d; nop [rax+rax]; lea rax, [rdi+0xc]; ret; 
0x000000000bd8fa: or r9b, [r15]; add al, ch; mov r9b, 0xf7; jmp qword ptr [rsi+0x66]; 
0x00000000090e05: or r9b, r8b; clc; add al, [rbx+0x68901e0]; xor eax, eax; ret; 
0x000000001721a7: or rax, 0x1e1850f; add [rax], al; ret; 
0x00000000112b4d: or rax, 0x1f88300; jg short 0x0000000000112b60; ret; 
0x000000001765c8: or rax, 0x210850f; add [rax], al; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x0000000010e1e4: or rax, 0x64d8f700; mov [rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010e59c: or rax, 0x64d8f700; mov [rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x000000000c71df: or rax, 0xffffffff80000000; mov [rdx+0x4], r8d; mov [rdx], eax; xor eax, eax; ret; 
0x00000000041be0: or rax, 0xffffffffffffffff; ret; 
0x00000000178bc7: or rax, [r8]; add [rbp-0x77], cl; ret far; 
0x0000000004258c: or rax, [rdx]; mov [rdi], rax; xor eax, eax; ret; 
0x000000000409c5: or rax, rcx; movq xmm0, rax; mulsd xmm0, [rip+0x17631b]; ret; 
0x0000000004076a: or rax, rcx; sar rax, 0x3f; not eax; and eax, edx; ret; 
0x000000000adafd: or rax, rdx; bsf rax, rax; lea rax, [rdi+rax]; ret; 
0x00000000059187: or rax, rdx; mov [rsp-0x10], rax; movdqa xmm0, [rsp-0x18]; ret; 
0x00000000040a4a: or rax, rdx; movq xmm0, rax; ret; 
0x000000000454dd: or rax, rdx; ret; 
0x00000000040e75: or rax, rdx; sar rax, 0x3f; not eax; and eax, ecx; ret; 
0x00000000055cef: or rax, rsi; movq xmm0, rax; ret; 
0x00000000118ff5: or rax, rsi; ret; 
0x00000000040921: or rcx, rax; movq xmm0, rcx; ret; 
0x00000000040eb8: or rdx, rax; mov rax, 0x7fff000000000000; sub rax, rdx; shr rax, 0x3f; ret; 
0x000000000ae03e: or rdx, rcx; bsf rdx, rdx; add rax, rdx; sub rax, rdi; ret; 
0x000000000407e4: orpd xmm0, xmm1; ret; 
0x00000000040966: orpd xmm1, [rip+0x175d92]; mulsd xmm0, xmm1; ret; 
0x00000000040940: orpd xmm1, [rip+0x175dc8]; mulsd xmm0, xmm1; ret; 
0x00000000040cd0: orps xmm0, [rip+0x175a59]; mulss xmm0, [rip+0x1766f9]; ret; 
0x00000000040cab: orps xmm0, [rip+0x175a8e]; mulss xmm0, [rip+0x176722]; ret; 
0x000000000407e5: orps xmm0, xmm1; ret; 
0x00000000040ba2: orps xmm0, xmm3; ret; 
0x00000000040967: orps xmm1, [rip+0x175d92]; mulsd xmm0, xmm1; ret; 
0x00000000040941: orps xmm1, [rip+0x175dc8]; mulsd xmm0, xmm1; ret; 
0x0000000007f258: out 0x0, al; add [rax-0x77], cl; fucomip st, st(0); fnsave [rax-0x6]; call far fword ptr [rbx+0x4c]; 
0x0000000017e596: out 0x0, al; add [rax], al; add rax, rdi; vzeroupper; ret; 
0x00000000028e6e: out 0x0, al; add [rax], al; add rsp, 0x98; ret; 
0x000000000d9004: out 0x0, al; add [rax], al; syscall; 
0x00000000040d1a: out 0x17, eax; or edi, esi; movd xmm0, edi; mulss xmm0, [rip+0x1766b6]; ret; 
0x00000000040c92: out 0x17, eax; or esi, edi; movd xmm0, esi; ret; 
0x00000000188f8e: out 0x2, al; add [rcx+0x63], cl; or al, 0x93; add rcx, r11; notrack jmp rcx; 
0x000000000b91c5: out 0x2, al; lea rax, [rip+0x10e62]; lea rdx, [rip+0xd2eab]; cmovne rax, rdx; ret; 
0x000000001277ea: out 0x2, al; lea rax, [rip+0x62c8d]; lea rdx, [rip+0x62c16]; cmove rax, rdx; ret; 
0x0000000009c65e: out 0x2, al; lea rax, [rip+0xa2e9]; lea rdx, [rip+0xc1b12]; cmovne rax, rdx; ret; 
0x0000000009d609: out 0x2, al; lea rax, [rip+0xb8ce]; lea rdx, [rip+0xccec7]; cmovne rax, rdx; ret; 
0x0000000009d1b5: out 0x2, al; lea rax, [rip+0xb902]; lea rdx, [rip+0xed74b]; cmovne rax, rdx; ret; 
0x0000000009d569: out 0x2, al; lea rax, [rip+0xb94e]; lea rdx, [rip+0xccf47]; cmovne rax, rdx; ret; 
0x0000000009d659: out 0x2, al; lea rax, [rip+0xdace]; lea rdx, [rip+0xcefd7]; cmovne rax, rdx; ret; 
0x0000000009d5b9: out 0x2, al; lea rax, [rip+0xdb4e]; lea rdx, [rip+0xcf057]; cmovne rax, rdx; ret; 
0x0000000009d33a: out 0x2, al; lea rax, [rip+0xed14d]; lea rdx, [rip+0xed0d6]; cmove rax, rdx; ret; 
0x00000000055ced: out 0x20, al; or rax, rsi; movq xmm0, rax; ret; 
0x00000000190d08: out 0x20, eax; je short 0x0000000000190d1c; movss xmm0, [rip+0x266bc]; divss xmm0, [rip+0x279c8]; ret; 
0x0000000016a5de: out 0x3, eax; add [rdi+0x63], cl; or al, 0x8a; lea r10, [r10+r9]; notrack jmp r10; 
0x000000001538ad: out 0x31, eax; fucomi st, st(0); ret far; 
0x000000001249a4: out 0x31, eax; ror byte ptr [rax-0x73], 0x35; sahf; ret; 
0x00000000124f03: out 0x31, eax; shr al, 0x25; ret; 
0x000000001375a4: out 0x4, al; lea r8, [rdi+rsi+0x8]; mov rax, r8; ret; 
0x00000000128b6b: out 0x40, al; lea rax, [rip+0x6186c]; cmove r8, rax; mov rax, r8; ret; 
0x000000000b925b: out 0x40, al; lea rax, [rip+0xd118c]; cmove r8, rax; mov rax, r8; ret; 
0x00000000080e63: out 0x41, al; call qword ptr [rsi+0x38]; 
0x00000000098723: out 0x41, al; pop rsp; pop r13; jmp rax; 
0x0000000014f7b8: out 0x41, eax; call rbp; 
0x000000000979b6: out 0x41, eax; pop rsp; pop r13; jmp rax; 
0x00000000155366: out 0x43, al; std; jmp qword ptr [rsi+0xf]; 
0x00000000139e7c: out 0x44, al; mov eax, edx; ret; 
0x000000000ddf73: out 0x44, al; mov edi, ebp; call qword ptr [rsp+0x30]; 
0x0000000003fb08: out 0x44, eax; mov edx, [rcx+rax*4+0x8]; add r10, [rdi+0x20]; mov rax, r10; ret; 
0x0000000018daf2: out 0x44, eax; movzx esp, bh; add rax, rdx; notrack jmp rax; 
0x000000000974d8: out 0x45, al; test al, al; jne short 0x00000000000974e9; mov dword ptr [rip+0x14f988], 0x0; ret; 
0x00000000159e77: out 0x45, al; xor ecx, ecx; mov rdi, rbp; call qword ptr [rax+0x270]; 
0x00000000091d55: out 0x45, eax; stc; jmp qword ptr [rsi+0xf]; 
0x000000001632a5: out 0x46, eax; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001255d9: out 0x48, al; add esp, 0x8; pop rbx; pop rbp; ret; 
0x00000000107abb: out 0x48, al; lea edi, [rip+0xa695c]; mov rdx, [rax+0xb0]; call qword ptr [rax+0x88]; 
0x00000000143e1d: out 0x48, al; mov [rsp+0x8], eax; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x00000000143d65: out 0x48, al; mov [rsp], eax; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x0000000007628f: out 0x48, al; mov ebx, edi; jmp rsi; 
0x0000000007624f: out 0x48, al; mov ebx, edx; mov edx, 0x1; jmp rsi; 
0x000000001470f4: out 0x48, al; mov edi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x8]; 
0x0000000008c0ec: out 0x48, al; mov edi, ebp; call qword ptr [r12+0x90]; 
0x0000000008a8a8: out 0x48, al; mov edi, ebp; call qword ptr [r13+0x38]; 
0x0000000008bed0: out 0x48, al; mov edi, ebp; call qword ptr [r13+0x90]; 
0x0000000007acab: out 0x48, al; mov edi, ebp; call qword ptr [r14+0x38]; 
0x0000000008b083: out 0x48, al; mov edi, ebp; call qword ptr [r15+0x80]; 
0x0000000008abfa: out 0x48, al; mov edi, ebp; call qword ptr [r15+0x90]; 
0x00000000071f35: out 0x48, al; mov edi, ebp; call qword ptr [rax+0x38]; 
0x0000000008bcf1: out 0x48, al; mov edi, ebp; call qword ptr [rax+0x78]; 
0x00000000143df8: out 0x48, al; mov edi, ebp; call qword ptr [rax]; 
0x0000000007e659: out 0x48, al; mov edi, ebp; call qword ptr [rbx+0x90]; 
0x0000000009a19f: out 0x48, al; mov edi, ebp; call rax; 
0x00000000107eec: out 0x48, al; mov edi, ebp; mov eax, 0x135; syscall; 
0x0000000008cee9: out 0x48, al; mov edi, ebx; call qword ptr [r14+0x78]; 
0x00000000151403: out 0x48, al; mov edi, ebx; call rcx; 
0x0000000013fc10: out 0x48, al; mov edi, ebx; mov rcx, r13; call r10; 
0x000000000416a7: out 0x48, al; ror eax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000018daf6: out 0x48, eax; add eax, edx; notrack jmp rax; 
0x00000000099318: out 0x48, eax; lea eax, [rdx-0x10]; ret; 
0x0000000011b63e: out 0x48, eax; mov [rbp-0x830], eax; mov eax, ebx; syscall; 
0x0000000014dc0a: out 0x48, eax; mov esi, ebp; call qword ptr [rax+0x18]; 
0x00000000093882: out 0x48, eax; neg edi; call qword ptr [r13]; 
0x00000000039f4d: out 0x48, eax; ror eax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000005ceee: out 0x48, eax; sub esi, eax; mov rax, [rip+0x18c3e7]; mov rcx, r14; call qword ptr [rax+r8*8]; 
0x0000000018a392: out 0x49, eax; jmp qword ptr [rdx-0x2f]; 
0x000000001615c6: out 0x4c, al; mov [rdi-0x12], ebx; mov [rdi-0xa], rcx; mov [rdi-0x4], edx; ret; 
0x000000000ddb93: out 0x4c, al; mov edi, ebp; call qword ptr [rsp+0x30]; 
0x00000000042d05: out 0x4c, al; mov edi, ebp; call rbx; 
0x00000000115aea: out 0x4c, al; mov edi, edi; call r14; 
0x000000001412d5: out 0x4c, al; mov edi, esi; add r8, fs:[0x0]; mov rcx, r15; call rbp; 
0x00000000083c08: out 0x4c, al; mov edi, esi; call qword ptr [rax+0x18]; 
0x00000000115b7f: out 0x4c, al; mov edi, esi; call r13; 
0x00000000098a23: out 0x4c, al; mov edx, eax; pop r12; pop r13; jmp rax; 
0x0000000005b57e: out 0x4c, eax; mov [rbp-0xe8], eax; call rax; 
0x000000001613f6: out 0x4c, eax; mov [rdi-0x11], ebx; mov [rdi-0x9], r8; mov [rdi-0x4], edx; ret; 
0x000000001614f2: out 0x4c, eax; mov [rdi-0x11], ebx; mov [rdi-0x9], rcx; mov [rdi-0x1], dl; ret; 
0x0000000016143e: out 0x4c, eax; mov [rdi-0x11], ebx; mov [rdi-0x9], rcx; mov [rdi-0x4], edx; ret; 
0x00000000042ddd: out 0x4c, eax; mov edx, esi; call rbp; 
0x000000000deb0a: out 0x57, eax; ret; 
0x00000000083b71: out 0x5b, al; mov rdi, rbp; pop rbp; pop r12; jmp rax; 
0x000000000d9678: out 0x5b, eax; pop rbp; pop r12; ret; 
0x000000000b305d: out 0x5d, eax; str [rcx+0x63]; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000153866: out 0x5e, al; std; jmp qword ptr [rsi+0xf]; 
0x00000000140f0b: out 0x7, al; movsxd rax, [rcx+rsi*4]; shr rdx, 0x3; add rax, rcx; notrack jmp rax; 
0x0000000011bd92: out 0x75, al; or al, 0x0; add [rax], al; add [rax], al; ret; 
0x000000001600e5: out 0x76, eax; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000038d87: out 0x80, eax; sete al; ret; 
0x0000000007294f: out 0x83, al; ret; 
0x000000000d8f42: out 0x89, al; out dx, eax; mov eax, 0xe4; syscall; 
0x000000000d8ed2: out 0x89, al; out dx, eax; mov eax, 0xe5; syscall; 
0x000000000c5fad: out 0x89, al; ret; 
0x00000000129f35: out 0x8b, eax; push rsp; and al, 0x38; call qword ptr [rsp+0x60]; 
0x0000000014c4a6: out 0x9f, al; in eax, dx; dec dword ptr [rax-0x77]; ret; 
0x0000000003abd5: out 0xaa, eax; sbb al, [rax]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000015cf9d: out 0xbc, eax; add al, 0x0; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000052f98: out 0xbf, al; add [rax], esi; add [rax], al; mov eax, 0x9e; syscall; 
0x0000000005cef5: out 0xc3, eax; sbb [rax], al; mov rcx, r14; call qword ptr [rax+r8*8]; 
0x0000000012b886: out 0xc7, al; or eax, [rax]; syscall; 
0x0000000014f8bd: out 0xc7, eax; add al, 0x24; add al, [rax]; add [rax], al; call r8; 
0x0000000011b3d9: out 0xc7, eax; test eax, esi; idiv edi; jmp qword ptr [rdi+0x6d]; 
0x000000001117e6: out 0xe4, al; hlt; call far fword ptr [rdx+0x59]; 
0x0000000011668d: out 0xe8, al; in eax, dx; jle short 0x0000000000116691; dec dword ptr [rax-0x77]; ret; 
0x0000000013dfcc: out 0xe8, al; out dx, al; test esi, ebp; jmp qword ptr [rsi+0xf]; 
0x00000000033fca: out 0xe8, eax; adc byte ptr [rdi+0x12], 0x0; mov rdi, rbx; call r12; 
0x0000000014331b: out 0xe8, eax; jmp far fword ptr [rdi]; 
0x00000000139652: out 0xe8, eax; js short 0x0000000000139623; out dx, al; dec dword ptr [rax-0x77]; ret; 
0x0000000012f68f: out 0xe8, eax; mov ecx, [rax]; call far fword ptr [rax+0x4c]; 
0x0000000014c4a4: out 0xe8, eax; out 0x9f, al; in eax, dx; dec dword ptr [rax-0x77]; ret; 
0x0000000002a4db: out 0xe8, eax; outsd dx, [rsi]; adc al, [rax]; mov rdi, rbx; call r12; 
0x000000000e7be6: out 0xe8, eax; push rsp; out 0xf3, eax; call far fword ptr [rsi-0x75]; 
0x00000000034ab9: out 0xe8, eax; rcr dword ptr [rcx], 0xff; jmp qword ptr [rax+rcx*2-0x75]; 
0x00000000114157: out 0xe8, eax; ret; 
0x0000000009f433: out 0xe8, eax; xlat [rbx]; fdivr st, st(7); dec dword ptr [rax-0x77]; ret; 
0x000000001565a3: out 0xe8, eax; xlat [rbx]; jg short 0x00000000001565a3; dec dword ptr [rax-0x77]; ret; 
0x00000000046301: out 0xec, al; fiadd st, word ptr [rip+0x48000000]; mov [rsi+0x10], eax; xor eax, eax; ret; 
0x000000000b84a4: out 0xf0, al; mov edx, 0x0; pop rbx; cmove rax, rdx; ret; 
0x00000000111c6f: out 0xf0, eax; add edi, 0x26; mov fs:[rax], edi; mov eax, 0xffffffff; ret; 
0x00000000151dea: out 0xf0, eax; call far fword ptr [rbx+0x48]; 
0x00000000166df9: out 0xf3, al; movq [rdi-0x10], mm1; ret; 
0x000000000e7be9: out 0xf3, eax; call far fword ptr [rsi-0x75]; 
0x00000000166e79: out 0xf3, eax; movq [rdi-0x10], mm1; ret; 
0x000000000d7c74: out 0xf4, eax; jmp far fword ptr [rcx]; 
0x000000000ba3c0: out 0xf7, al; jmp qword ptr [rsi+0x2e]; 
0x00000000187a66: out 0xfa, al; add al, [rax]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x000000001430cd: out 0xfc, al; call qword ptr [rax+0x30]; 
0x000000001284cb: out 0xfd, eax; call qword ptr [rax-0x18]; 
0x000000000fb865: out 0xfd, eax; jmp qword ptr [rsp+rax*2-0x77]; 
0x000000001252f0: out 0xff, al; jmp qword ptr [rsi+0x66]; 
0x00000000058a83: out 0xff, al; jmp qword ptr [rsi+0xf]; 
0x0000000005cb1c: out 0xff, eax; call qword ptr [rax-0x5e1f00d]; 
0x000000000639a3: out 0xff, eax; jmp qword ptr [rsi+0x2e]; 
0x0000000007609f: out 0xff, eax; jmp qword ptr [rsi+0xf]; 
0x00000000085a5b: out dx, al; adc eax, 0x1d8d4800; ret; 
0x00000000136fc2: out dx, al; add [rax-0x78], eax; ja short 0x0000000000136fc9; ret; 
0x00000000053712: out dx, al; add [rbp-0x1e], esi; mov eax, 0x1; ret; 
0x00000000169247: out dx, al; add al, 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000018887b: out dx, al; add al, [rax]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000136fba: out dx, al; add edi, [rax+0x2]; sub esi, 0x1; mov [rdi+0x1], sil; ret; 
0x0000000008a744: out dx, al; call qword ptr [r14+0x38]; 
0x000000001443b3: out dx, al; call qword ptr [r14+0x40]; 
0x00000000144082: out dx, al; call qword ptr [r15+0x40]; 
0x000000001417bb: out dx, al; call qword ptr [rax+0x10]; 
0x0000000014dc0d: out dx, al; call qword ptr [rax+0x18]; 
0x00000000141bbc: out dx, al; call qword ptr [rax+0x2e66c35d]; 
0x0000000014992d: out dx, al; call qword ptr [rax-0x5e1f00d]; 
0x000000000cc903: out dx, al; call r12; 
0x0000000009b6e2: out dx, al; call rax; 
0x0000000013be5e: out dx, al; dec dword ptr [rax+0x39]; ret; 
0x000000001430e8: out dx, al; dec dword ptr [rax-0x75]; or [r14+0x8], r15b; mov rdi, rbp; call qword ptr [rax+0x30]; 
0x00000000139656: out dx, al; dec dword ptr [rax-0x77]; ret; 
0x00000000141946: out dx, al; dec dword ptr [rax-0x77]; ret; 
0x000000000d9a4e: out dx, al; enter 0xfff4, 0x66; nop [rax+rax]; pop rbp; ret; 
0x000000001285fe: out dx, al; jge short 0x00000000001285f3; call qword ptr [rax-0x18]; 
0x0000000013c44b: out dx, al; jmp qword ptr [rbp+rax*2-0x77]; 
0x00000000137dd4: out dx, al; jmp qword ptr [rsi+0x2e]; 
0x00000000155a01: out dx, al; jmp qword ptr [rsi+0x66]; 
0x00000000136ec4: out dx, al; jmp qword ptr [rsi+0xf]; 
0x0000000013c888: out dx, al; jmp qword ptr [rsp+rax*2-0x77]; 
0x000000000deb08: out dx, al; jmp rdi; 
0x000000001671ff: out dx, al; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x12], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x000000001199cd: out dx, al; lea ecx, [rdi+rdi]; shr eax, cl; and eax, 0x3; ret; 
0x000000001615ca: out dx, al; mov [rdi-0xa], rcx; mov [rdi-0x4], edx; ret; 
0x00000000121989: out dx, al; mov [rsp+0x10], rax; mov rdx, rax; call qword ptr [r12+0x28]; 
0x0000000004279c: out dx, al; mov [rsp+0x14], eax; mov edi, r12d; mov eax, 0x81; syscall; 
0x0000000013de93: out dx, al; mov [rsp+0x14], eax; mov rdx, r12; mov eax, 0x81; syscall; 
0x000000000d9002: out dx, al; mov eax, 0xe6; syscall; 
0x000000000d9095: out dx, al; mov edi, 0x1; mov eax, 0xe6; syscall; 
0x00000000080744: out dx, al; mov edi, 0x1; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000001089fe: out dx, al; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x0000000012de00: out dx, al; mov edi, r12d; call qword ptr [rsp+0x40]; 
0x0000000011b63b: out dx, al; mov edi, r12d; mov [rbp-0x830], rax; mov eax, ebx; syscall; 
0x000000000dbf45: out dx, al; mov edi, r14d; call qword ptr [rsp+0x48]; 
0x000000000d9176: out dx, al; mov r8d, eax; mov edi, 0x1; mov eax, 0xe6; syscall; 
0x00000000108a74: out dx, al; mov r8d, eax; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x00000000117099: out dx, al; mov rax, [rax+0x8]; ret; 
0x000000001417c9: out dx, al; mov rax, [rdi+0x38]; call qword ptr [rax+0x10]; 
0x0000000014167b: out dx, al; mov rax, [rdi+0x38]; call qword ptr [rax+0x8]; 
0x000000001472d3: out dx, al; mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x10]; 
0x0000000012d830: out dx, al; mov rdi, r12; call qword ptr [rsp+0x40]; 
0x000000000438c9: out dx, al; mov rdi, r12; call rax; 
0x000000000979b3: out dx, al; mov rdi, r12; pop r12; pop r13; jmp rax; 
0x0000000012aee6: out dx, al; mov rdi, r13; call qword ptr [rsp+0x40]; 
0x00000000073d0a: out dx, al; mov rdi, r14; call qword ptr [rbx+0x38]; 
0x00000000072cd3: out dx, al; mov rdi, r14; call qword ptr [rcx+0x38]; 
0x000000000dc3e5: out dx, al; mov rdi, r14; call qword ptr [rsp+0x48]; 
0x00000000080537: out dx, al; mov rdi, r15; call qword ptr [r14+0x38]; 
0x00000000085d4b: out dx, al; mov rdi, r15; call qword ptr [r14+0x80]; 
0x0000000008059c: out dx, al; mov rdi, r15; call qword ptr [rbp+0x38]; 
0x0000000008247b: out dx, al; mov rdi, rbp; call qword ptr [r14+0x38]; 
0x00000000141666: out dx, al; mov rdi, rbp; call qword ptr [rax+0x8]; 
0x0000000008ba2c: out dx, al; mov rdi, rbx; call qword ptr [r12+0x80]; 
0x0000000007f6f3: out dx, al; mov rdi, rbx; call qword ptr [r13+0x38]; 
0x000000000813ec: out dx, al; mov rdi, rbx; call qword ptr [r13+0x48]; 
0x0000000008155b: out dx, al; mov rdi, rbx; call qword ptr [r13+0x58]; 
0x00000000082398: out dx, al; mov rdi, rbx; call qword ptr [r14+0x38]; 
0x00000000081141: out dx, al; mov rdi, rbx; call qword ptr [r14+0x48]; 
0x00000000081585: out dx, al; mov rdi, rbx; call qword ptr [rax+0x58]; 
0x0000000008b87a: out dx, al; mov rdi, rbx; call qword ptr [rbp+0x70]; 
0x00000000144be5: out dx, al; mov rdi, rbx; call rax; 
0x00000000167209: out dx, al; movdqu [rdi-0x10], xmm1; ret; 
0x0000000012dc96: out dx, al; movsd [rdi], [rsi]; or eax, [rax]; syscall; 
0x00000000132986: out dx, al; pop rbx; or eax, [rax]; syscall; 
0x0000000011b59e: out dx, al; ret; 
0x00000000044a47: out dx, al; ror rdx, 0x11; xor rdx, fs:[0x30]; call rdx; 
0x00000000155e5e: out dx, al; sub ebp, esi; jmp qword ptr [rsi+0x66]; 
0x0000000013dfce: out dx, al; test esi, ebp; jmp qword ptr [rsi+0xf]; 
0x000000000b90b1: out dx, al; xor eax, eax; ret; 
0x000000000cb34d: out dx, eax; adc [rax+0x1], cl; clc; ret; 
0x000000000c6687: out dx, eax; adc [rax], eax; syscall; 
0x00000000097ec6: out dx, eax; adc al, 0x0; syscall; 
0x0000000005bb62: out dx, eax; add [rax+0x39], ecx; ret; 
0x000000001690c7: out dx, eax; add al, 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000188748: out dx, eax; add al, [rax]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000135aea: out dx, eax; add ecx, [rax-0x7d]; call qword ptr [rcx]; 
0x00000000084642: out dx, eax; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000008469e: out dx, eax; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000001430cb: out dx, eax; and esi, 0xfffffffc; call qword ptr [rax+0x30]; 
0x00000000074840: out dx, eax; call qword ptr [r12+0x38]; 
0x0000000008c0ef: out dx, eax; call qword ptr [r12+0x90]; 
0x000000000886b3: out dx, eax; call qword ptr [r13+0x10]; 
0x00000000075d11: out dx, eax; call qword ptr [r13+0x38]; 
0x0000000008bed3: out dx, eax; call qword ptr [r13+0x90]; 
0x0000000007acae: out dx, eax; call qword ptr [r14+0x38]; 
0x0000000008b086: out dx, eax; call qword ptr [r15+0x80]; 
0x0000000008abfd: out dx, eax; call qword ptr [r15+0x90]; 
0x0000000014cc6c: out dx, eax; call qword ptr [rax+0x10]; 
0x0000000008bc01: out dx, eax; call qword ptr [rax+0x18]; 
0x00000000141410: out dx, eax; call qword ptr [rax+0x20]; 
0x00000000159e7d: out dx, eax; call qword ptr [rax+0x270]; 
0x0000000014243d: out dx, eax; call qword ptr [rax+0x28]; 
0x0000000014303c: out dx, eax; call qword ptr [rax+0x30]; 
0x00000000071f38: out dx, eax; call qword ptr [rax+0x38]; 
0x0000000008b6be: out dx, eax; call qword ptr [rax+0x40]; 
0x000000001486c9: out dx, eax; call qword ptr [rax+0x48]; 
0x0000000008bcf4: out dx, eax; call qword ptr [rax+0x78]; 
0x0000000008afa6: out dx, eax; call qword ptr [rax+0x80]; 
0x00000000141669: out dx, eax; call qword ptr [rax+0x8]; 
0x0000000008ae48: out dx, eax; call qword ptr [rax+0x90]; 
0x00000000143dfb: out dx, eax; call qword ptr [rax]; 
0x0000000007e7cd: out dx, eax; call qword ptr [rbx+0x10]; 
0x0000000008e118: out dx, eax; call qword ptr [rbx+0x18]; 
0x00000000075247: out dx, eax; call qword ptr [rbx+0x38]; 
0x0000000007ebbe: out dx, eax; call qword ptr [rbx+0x80]; 
0x0000000008c573: out dx, eax; call qword ptr [rbx+0x88]; 
0x0000000007e65c: out dx, eax; call qword ptr [rbx+0x90]; 
0x00000000074c8c: out dx, eax; call qword ptr [rcx+0x38]; 
0x0000000013260e: out dx, eax; call qword ptr [rsp+0x10]; 
0x000000000ddb96: out dx, eax; call qword ptr [rsp+0x30]; 
0x0000000012aee9: out dx, eax; call qword ptr [rsp+0x40]; 
0x0000000012a979: out dx, eax; call qword ptr [rsp+0x50]; 
0x000000000da78d: out dx, eax; call r12; 
0x0000000008aff5: out dx, eax; call rax; 
0x00000000042d08: out dx, eax; call rbx; 
0x00000000141699: out dx, eax; call rcx; 
0x00000000159071: out dx, eax; cld; jmp qword ptr [rsi+0x2e]; 
0x0000000010b068: out dx, eax; cld; jmp qword ptr [rsp+rax*2-0x77]; 
0x000000000debef: out dx, eax; cmc; or al, 0x0; mov eax, 0x142; syscall; 
0x00000000122d0d: out dx, eax; cmp eax, 0x894c0000; idiv byte ptr [rdi+0x2000003]; mov rdx, rax; call qword ptr [rbx+0x28]; 
0x000000001333d0: out dx, eax; dec dword ptr [rax-0x77]; add eax, 0xb6047; add rsp, 0x8; ret; 
0x00000000133231: out dx, eax; dec dword ptr [rax-0x77]; ret; 
0x00000000134cdb: out dx, eax; dec dword ptr [rax-0x7d]; ret; 
0x000000000bb05d: out dx, eax; fincstp; jmp qword ptr [rsi+0x66]; 
0x00000000133e5c: out dx, eax; jmp qword ptr [rbx+rcx*4+0x4]; 
0x00000000128782: out dx, eax; jmp qword ptr [rsi+0x2e]; 
0x0000000013c9f3: out dx, eax; jmp qword ptr [rsi+0x66]; 
0x00000000128ff4: out dx, eax; jmp qword ptr [rsi+0xf]; 
0x000000001283c5: out dx, eax; jmp qword ptr [rsi+0xf]; 
0x00000000127a3c: out dx, eax; jmp qword ptr [rsi-0x70]; 
0x0000000016727f: out dx, eax; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x11], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000162733: out dx, eax; lea r11, [rip+0x55254]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162674: out dx, eax; lea r11, [rip+0x55313]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000015fd53: out dx, eax; lea r11, [rip+0x57a74]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000015fc94: out dx, eax; lea r11, [rip+0x57b33]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001416aa: out dx, eax; lea r15, [rsp+0x50]; call qword ptr [rax+0x20]; 
0x0000000014c042: out dx, eax; lea r8, [rip-0x929a]; lea rdx, [rip+0x389f]; call qword ptr [rax]; 
0x0000000014202d: out dx, eax; lea r9, [rsp+0x20]; call qword ptr [rax]; 
0x00000000086edd: out dx, eax; lea r9, [rsp+0x28]; call rbp; 
0x000000000b9bed: out dx, eax; lea r9, [rsp+0x30]; call rbx; 
0x0000000014864c: out dx, eax; mov [r12+0x70], edx; call qword ptr [rax+0x30]; 
0x0000000014232a: out dx, eax; mov [rbx], rax; xor eax, eax; call qword ptr [rbx+0x18]; 
0x000000001613fa: out dx, eax; mov [rdi-0x9], r8; mov [rdi-0x4], edx; ret; 
0x000000001614f6: out dx, eax; mov [rdi-0x9], rcx; mov [rdi-0x1], dl; ret; 
0x00000000161442: out dx, eax; mov [rdi-0x9], rcx; mov [rdi-0x4], edx; ret; 
0x0000000014dbe1: out dx, eax; mov [rsp+0xc8], rdx; mov dword ptr [rsp+0xd0], 0x1; movups [rsp+0xb8], xmm5; call rax; 
0x00000000096f5d: out dx, eax; mov ah, 0xff; jmp qword ptr [rsi+0x66]; 
0x00000000141744: out dx, eax; mov dword ptr [rbx+0x18], 0x0; call qword ptr [rax+0x28]; 
0x000000001416c5: out dx, eax; mov dword ptr [rbx+0x18], 0x1; call qword ptr [rax+0x28]; 
0x00000000148f42: out dx, eax; mov dword ptr [rsp+0x40], 0x0; mov [rsp+0x10], rax; mov rax, [rsp+0x48]; call qword ptr [rax+0x28]; 
0x0000000014d9f8: out dx, eax; mov dword ptr [rsp+0xa8], 0x1; mov dword ptr [rsp+0xb0], 0x1; mov dword ptr [rsp+0xb8], 0x1; call qword ptr [rax+0x18]; 
0x00000000107e56: out dx, eax; mov eax, 0x135; syscall; 
0x0000000010f6dd: out dx, eax; mov eax, 0x147; syscall; 
0x0000000010f83d: out dx, eax; mov eax, 0x148; syscall; 
0x000000001097ca: out dx, eax; mov eax, 0x4f; syscall; 
0x0000000011381e: out dx, eax; mov eax, 0x9; syscall; 
0x000000000452be: out dx, eax; mov eax, 0xca; syscall; 
0x000000000d8f44: out dx, eax; mov eax, 0xe4; syscall; 
0x000000000d8ed4: out dx, eax; mov eax, 0xe5; syscall; 
0x000000000fd860: out dx, eax; mov eax, [rdx+0x8]; ret; 
0x000000001149c8: out dx, eax; mov edx, r13d; mov esi, 0x1; call r12; 
0x000000001356c0: out dx, eax; mov fs:[rbx], r13d; mov eax, 0x3; mov edi, [rbp-0x60]; syscall; 
0x000000001423be: out dx, eax; mov qword ptr [rsp], 0x0; call qword ptr [rax+0x20]; 
0x000000001379ea: out dx, eax; mov qword ptr [rsp], 0x0; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000001423ec: out dx, eax; mov r12d, eax; xor eax, eax; call qword ptr [rbx+0x28]; 
0x00000000043acc: out dx, eax; mov r13, r15; mov rax, [rsp]; add r15, r12; call rax; 
0x00000000115800: out dx, eax; mov rax, r12; pop rbp; pop r12; jmp rax; 
0x000000000a4aa0: out dx, eax; mov rax, r8; ret; 
0x00000000114a58: out dx, eax; mov rdx, r13; mov esi, 0x1; call r12; 
0x0000000009aecd: out dx, eax; mov rdx, rbp; mov rsi, r12; call rax; 
0x000000000b9d41: out dx, eax; mov rsi, [rsp+0x18]; call rbx; 
0x00000000132bda: out dx, eax; mov rsi, [rsp+0x8]; call rbp; 
0x00000000167289: out dx, eax; movdqu [rdi-0x10], xmm1; ret; 
0x00000000081292: out dx, eax; movsxd edi, edx; jmp qword ptr [rsi+0x2e]; 
0x0000000009d666: out dx, eax; or al, 0x0; cmovne rax, rdx; ret; 
0x00000000113ea1: out dx, eax; or al, 0x0; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000008625b: out dx, eax; pop rbp; mov rax, [rax+0xe0]; mov rax, [rax+0x20]; jmp rax; 
0x00000000083b75: out dx, eax; pop rbp; pop r12; jmp rax; 
0x00000000084072: out dx, eax; pop rbx; pop rbp; jmp rax; 
0x000000000970ea: out dx, eax; pop rbx; pop rbp; pop r12; jmp rax; 
0x00000000142d4e: out dx, eax; pop rbx; xor eax, eax; pop rbp; jmp rdx; 
0x00000000159d99: out dx, eax; push r8; mov r8, rbx; call qword ptr [rax+0x270]; 
0x0000000008fc77: out dx, eax; ror byte ptr [rdi], 0x11; pop rbx; ret; 
0x00000000151780: out dx, eax; ror byte ptr [rdi], 0x29; and al, 0x60; movups [rsp+0x18], xmm0; call r8; 
0x000000000689b0: out dx, eax; ror byte ptr [rdi], 0x29; test [rax-0x16000005], edx; ret; 
0x000000000f526d: out dx, eax; ror byte ptr [rdi], 0x84; ret far; 
0x000000001303e2: out dx, eax; ror byte ptr [rdi], 0xb7; ret far; 
0x00000000137ac5: out dx, eax; ror rax, 0x11; xor rax, fs:[0x30]; mov qword ptr [rsp], 0x0; call rax; 
0x00000000044a89: out dx, eax; ror rdx, 0x11; xor rdx, fs:[0x30]; call rdx; 
0x000000000a2c28: out dx, eax; sbb [rax], eax; add bh, dh; ret; 
0x00000000119992: out dx, eax; xor eax, eax; ret; 
0x000000001157df: out dx, eax; xor edx, edx; mov esi, 0x1; call r12; 
0x000000001149b6: out dx, eax; xor esi, esi; call r12; 
0x000000000b9eec: out dx, eax; xor r8d, r8d; lea r9, [rsp+0x28]; call rbx; 
0x000000000d6992: outsb dx, [rsi]; add [rax], eax; add [rcx-0x12f43], al; jmp far fword ptr [rax]; 
0x000000000e4d0d: outsb dx, [rsi]; add al, 0x83; call far fword ptr [rbp+0xf]; 
0x00000000160978: outsb dx, [rsi]; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000157917: outsb dx, [rsi]; clc; jmp qword ptr [rsi+0xf]; 
0x000000000e44de: outsb dx, [rsi]; cmc; jmp qword ptr [rsi+0xf]; 
0x0000000011247f: outsb dx, [rsi]; enter 0x4866, 0xf; outsb dx, [rsi]; ret; 
0x00000000040891: outsb dx, [rsi]; enter 0x8948, 0x7; subsd xmm0, xmm1; ret; 
0x00000000069f20: outsb dx, [rsi]; fmul st, dword ptr [rbx+0xf660441]; insb [rdi], dx; ret; 
0x00000000061f10: outsb dx, [rsi]; fsub st, dword ptr [rsi+0xf]; insb [rdi], dx; ret; 
0x00000000176a7e: outsb dx, [rsi]; idiv edi; jmp qword ptr [rsi+0x66]; 
0x000000000e940b: outsb dx, [rsi]; jmp qword ptr [rsi+0xf]; 
0x000000001418a1: outsb dx, [rsi]; mov rax, [rbx+0x20]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x00000000128c8e: outsb dx, [rsi]; movsd [rdi], [rsi]; cmc; jmp qword ptr [rsi+0xf]; 
0x000000000f7cc2: outsb dx, [rsi]; or eax, [rax]; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x00000000090400: outsb dx, [rsi]; ret far; 
0x00000000029fa3: outsb dx, [rsi]; ret; 
0x00000000040d9d: outsb dx, [rsi]; rol bl, 0xf3; addps xmm0, xmm0; ret; 
0x000000000f9d73: outsb dx, [rsi]; rol byte ptr [rcx-0x77], 0x55; add [rcx+0x6c0f66d0], cl; ret; 
0x0000000014f8de: outsb dx, [rsi]; sahf; std; jmp qword ptr [rsi+0x66]; 
0x00000000028d90: outsb dx, [rsi]; sbb [r8], r8b; mov rsi, [rax]; xor eax, eax; call qword ptr [rdx+0x260]; 
0x000000000409cb: outsb dx, [rsi]; shl dl, 0xf; pop rcx; add eax, 0x17631b; ret; 
0x0000000011f956: outsb dx, [rsi]; test [rax+rax], cl; syscall; 
0x0000000004d6fe: outsb dx, [rsi]; xchg edx, eax; std; jmp qword ptr [rsi+0xf]; 
0x0000000014a5b3: outsd dx, [rsi]; adc [rax+0x1], bh; movups [rdi+0x20], xmm2; ret; 
0x00000000059fdf: outsd dx, [rsi]; adc [rax-0xdf6b], ecx; jmp qword ptr [rsi+0xf]; 
0x0000000002a4dd: outsd dx, [rsi]; adc al, [rax]; mov rdi, rbx; call r12; 
0x0000000009a36d: outsd dx, [rsi]; add [rax], eax; add [rcx+rcx*4-0x16], cl; mov rdi, r12; call rax; 
0x0000000018a1e0: outsd dx, [rsi]; add [rdx-0xf], esp; dec byte ptr [rax+0x6f]; jmp qword ptr [r10-0xf]; 
0x000000000b85dd: outsd dx, [rsi]; add al, 0xf8; jmp qword ptr [rsi+0x66]; 
0x0000000016082b: outsd dx, [rsi]; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000011c070: outsd dx, [rsi]; add eax, 0x1; mov [rdx], eax; ret; 
0x0000000014b606: outsd dx, [rsi]; add eax, 0x6b684; movaps [rsp+0x20], xmm0; call qword ptr [rax+0x28]; 
0x000000000dd29c: outsd dx, [rsi]; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x00000000059191: outsd dx, [rsi]; and al, 0xe8; ret; 
0x0000000010eee8: outsd dx, [rsi]; call qword ptr [rbx+0x48]; 
0x00000000189a20: outsd dx, [rsi]; cli; vmovups [rdi-0x1c0], zmm14; vmovups [rdi-0x200], zmm15; ret; 
0x00000000161b87: outsd dx, [rsi]; data64 ret far; 
0x000000000a547e: outsd dx, [rsi]; fsub st(1), st; imul edi, 0xffffffff; jmp qword ptr [rsi+0x66]; 
0x000000000fbadd: outsd dx, [rsi]; iretd; jmp qword ptr [rsi+0x2e]; 
0x00000000107246: outsd dx, [rsi]; jg short 0x00000000001072c1; movups [rsi+0x70], xmm7; ret; 
0x00000000107296: outsd dx, [rsi]; jle short 0x0000000000107309; movups [rdi+0x78], xmm7; ret; 
0x00000000107c2b: outsd dx, [rsi]; jle short 0x0000000000107c9e; movups [rdi+0xf8], xmm7; ret; 
0x0000000018a1e6: outsd dx, [rsi]; jmp qword ptr [r10-0xf]; 
0x0000000012621c: outsd dx, [rsi]; jnp short 0x0000000000126207; mov dword ptr [rbp-0x80], 0x0; movups [rbp-0x78], xmm7; call rcx; 
0x00000000090e76: outsd dx, [rsi]; mov eax, 0x80; xor eax, eax; movups [rsi+0x70], xmm7; ret; 
0x00000000161b82: outsd dx, [rsi]; mov ebx, 0x4e6f0ff3; ret far; 
0x00000000107b9b: outsd dx, [rsi]; mov edi, 0xf8; movups [rsi+0x70], xmm7; ret; 
0x0000000014a4ea: outsd dx, [rsi]; movups [rsi], xmm0; mov rax, [rax+0x50]; mov [rsi+0x10], rax; ret; 
0x0000000014a5a2: outsd dx, [rsi]; or [eax+0x1], bh; movups [r8], xmm4; ret; 
0x00000000149caa: outsd dx, [rsi]; or [r8+0x1], r15b; movups [r8], xmm1; ret; 
0x00000000146ebb: outsd dx, [rsi]; or [rax+0x1], dil; movups [rdx], xmm1; ret; 
0x0000000005efd1: outsd dx, [rsi]; or [rcx-0x77], al; ret; 
0x0000000013c028: outsd dx, [rsi]; or al, [rax]; mov rax, fs:[rax]; ret; 
0x00000000189b77: outsd dx, [rsi]; pop rcx; jmp qword ptr [rdx-0x2f]; 
0x0000000014a5c2: outsd dx, [rsi]; pop rdi; and [rax+0x1], bh; movups [r8], xmm3; ret; 
0x00000000187f72: outsd dx, [rsi]; push rdi; ret far; 
0x000000001883ad: outsd dx, [rsi]; push rdi; ret; 
0x000000000adcea: outsd dx, [rsi]; push rdi; xor [rsi+0xf], ah; outsd dx, [rsi]; ret; 
0x000000000b33a6: outsd dx, [rsi]; push rsi; or eax, 0x77f0ff3; movdqu [rdi+0xd], xmm2; ret; 
0x0000000004101f: outsd dx, [rsi]; ret far; 
0x000000000867f7: outsd dx, [rsi]; ret; 
0x000000000e944a: outsd dx, [rsi]; shl dword ptr [rsi+0xf], 0xd4; ret far; 
0x000000000b5b4d: outsd dx, [rsi]; str [rbx+0x63]; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000014b976: outsd dx, [rsi]; sub rsp, 0xffffffffffffff80; mov eax, r8d; pop rbp; ret; 
0x0000000014a58a: outsd dx, [rsi]; xor [r8+0x1], r15b; movups [r8], xmm1; ret; 
0x000000000d076e: paddb mm7, mm7; jmp qword ptr [rsi+0xf]; 
0x0000000005278b: paddd mm7, mm7; call qword ptr [rax+0x587c031]; 
0x0000000008580b: paddw mm7, mm7; call qword ptr [rax-0x76df377d]; 
0x000000001333b1: paddw mm7, mm7; jmp qword ptr [rsi+0x2e]; 
0x0000000010b9ee: paddw mm7, mm7; jmp qword ptr [rsi+0x66]; 
0x00000000040f0d: pand mm0, [rip+0x17585c]; por xmm0, xmm1; ret; 
0x00000000040f05: pand mm1, [rip+0x175854]; pand xmm0, [rip+0x17585c]; por xmm0, xmm1; ret; 
0x00000000040f0c: pand xmm0, [rip+0x17585c]; por xmm0, xmm1; ret; 
0x00000000040f04: pand xmm1, [rip+0x175854]; pand xmm0, [rip+0x17585c]; por xmm0, xmm1; ret; 
0x00000000177a32: pcmpeqb mm0, mm1; lea r10, [r10+r9]; notrack jmp r10; 
0x000000000cb022: pcmpeqb mm1, [rbx]; mov eax, [rdi+0x28]; cmp eax, [rsi+0x28]; jne short 0x00000000000cb090; ret; 
0x000000000cb072: pcmpeqb mm1, [rbx]; mov eax, [rdi+0x38]; cmp eax, [rsi+0x38]; jne short 0x00000000000cb090; ret; 
0x000000000cb048: pcmpeqb mm2, [rip+0x3b30478b]; xor [rbp+0x3d], r14b; ret; 
0x000000000caf38: pcmpeqb mm2, [rip+0x63b078b]; jne 0x00000000000cb090; ret; 
0x000000000cafc2: pcmpeqb mm3, [rbx]; mov eax, [rdi+0x18]; cmp eax, [rsi+0x18]; jne 0x00000000000cb090; ret; 
0x000000000caf62: pcmpeqb mm3, [rbx]; mov eax, [rdi+0x8]; cmp eax, [rsi+0x8]; jne 0x00000000000cb090; ret; 
0x0000000018c572: pcmpeqb mm3, [rbx]; mov eax, [rdi-0x8]; cmp eax, [rsi-0x8]; jne 0x000000000018c680; ret; 
0x000000000cbae4: pcmpeqb mm3, [rcx]; add rax, 0x2; ret; 
0x0000000018c544: pcmpeqb mm3, [rcx]; mov eax, [rdi-0x10]; cmp eax, [rsi-0x10]; jne 0x000000000018c680; ret; 
0x000000000cbacf: pcmpeqb mm3, [rsi]; ret; 
0x00000000177a31: pcmpeqb xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000011bd69: pcmpeqd mm1, [rax+rax]; add [rax], al; add [rax], al; ret; 
0x000000000cb5e1: pcmpeqw mm1, [rax+rcx*2+0x25]; call far fword ptr [rdi]; 
0x000000000b72f9: pcmpgtd mm1, [rcx-0x12cff7a9]; mov [rdi+0xa], ch; ret; 
0x000000000b7297: pcmpgtd mm1, [rcx-0x12cffba9]; mov [rdi+0x6], ch; ret; 
0x000000000b5137: pcmpgtd mm1, [rcx-0x72b7fba9]; add eax, 0x6e88349; lea rdi, [rdi+0x6]; jne 0x00000000000b5ac0; ret; 
0x00000000189cc8: pcmpgtd mm1, [rcx-0x7f3c01b2]; cli; add [rdx+0x2], esi; mov [rdi], cl; ret; 
0x000000000a88f3: pcmpgtd mm1, [rdi]; xlat [rbx]; rol dword ptr [rbp+0x317475c0], 0xc0; ret; 
0x0000000017d596: pcmpistri xmm1, xmm1, 0x3a; cmp edx, ecx; jle 0x000000000017d640; ret; 
0x0000000017d3c8: pcmpistri xmm3, xmm3, 0x3a; movsxd rcx, ecx; add rax, rcx; sub rax, rdi; ret; 
0x000000001856da: pextrw edi, mm0, 0x77; ret; 
0x00000000182a14: pextrw edi, mm5, 0x74; ret far; 
0x00000000040a95: pmovmskb eax, mm0; and eax, 0x80; ret; 
0x00000000040db5: pmovmskb eax, mm0; and eax, 0x8; ret; 
0x000000000a83ac: pmovmskb eax, mm1; bsf eax, eax; lea rax, [rdi+rax+0x30]; ret; 
0x000000000a8893: pmovmskb eax, mm1; bsr eax, eax; add rax, rdi; ret; 
0x000000000a8412: pmovmskb eax, mm1; test eax, eax; jne 0x00000000000a84c0; xor eax, eax; ret; 
0x000000000ca312: pmovmskb eax, mm1; test eax, eax; jne 0x00000000000ca3c0; xor eax, eax; ret; 
0x000000000a8442: pmovmskb eax, mm1; test eax, eax; jne short 0x00000000000a84a0; xor eax, eax; ret; 
0x000000000a88f5: pmovmskb eax, mm1; test eax, eax; jne short 0x00000000000a8970; xor eax, eax; ret; 
0x000000000a8924: pmovmskb eax, mm1; test eax, eax; jne short 0x00000000000a89a0; xor eax, eax; ret; 
0x000000000ca342: pmovmskb eax, mm1; test eax, eax; jne short 0x00000000000ca3a0; xor eax, eax; ret; 
0x00000000040a94: pmovmskb eax, xmm0; and eax, 0x80; ret; 
0x00000000040db4: pmovmskb eax, xmm0; and eax, 0x8; ret; 
0x000000000a83ab: pmovmskb eax, xmm1; bsf eax, eax; lea rax, [rdi+rax+0x30]; ret; 
0x000000000a8892: pmovmskb eax, xmm1; bsr eax, eax; add rax, rdi; ret; 
0x000000000a8411: pmovmskb eax, xmm1; test eax, eax; jne 0x00000000000a84c0; xor eax, eax; ret; 
0x000000000ca311: pmovmskb eax, xmm1; test eax, eax; jne 0x00000000000ca3c0; xor eax, eax; ret; 
0x000000000a8441: pmovmskb eax, xmm1; test eax, eax; jne short 0x00000000000a84a0; xor eax, eax; ret; 
0x000000000a88f4: pmovmskb eax, xmm1; test eax, eax; jne short 0x00000000000a8970; xor eax, eax; ret; 
0x000000000a8923: pmovmskb eax, xmm1; test eax, eax; jne short 0x00000000000a89a0; xor eax, eax; ret; 
0x000000000ca341: pmovmskb eax, xmm1; test eax, eax; jne short 0x00000000000ca3a0; xor eax, eax; ret; 
0x000000000adee3: pmovmskb edx, mm4; test edx, edx; je short 0x00000000000adeee; bsf eax, edx; ret; 
0x000000000adee2: pmovmskb edx, xmm4; test edx, edx; je short 0x00000000000adeee; bsf eax, edx; ret; 
0x0000000008e2e5: pop qword ptr [rax]; add [rax], al; mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rbx+0x18]; 
0x000000000fd1a5: pop qword ptr [rax]; add [rax], al; syscall; 
0x00000000087e26: pop qword ptr [rbp+0x31]; sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; syscall; 
0x000000000f86da: pop qword ptr [rcx-0x2d]; jrcxz 0x00000000000f8668; sub [rcx+0x63], cl; ret far; 
0x0000000017b5b0: pop qword ptr [rcx]; add [rbx+0x148b8104], cl; xchg ecx, eax; sub eax, edx; ret; 
0x000000001020ad: pop qword ptr [rdx-0xe]; jmp qword ptr [rsi+0xf]; 
0x000000000c60ad: pop qword ptr [rdx]; idiv bh; nop [rax]; pop rbp; ret; 
0x000000000d0269: pop qword ptr [rdx]; jbe short 0x00000000000d0270; ret; 
0x000000001444c8: pop r11; mov eax, r8d; pop rbp; pop r12; ret; 
0x00000000083b77: pop r12; jmp rax; 
0x000000000979a4: pop r12; mov rax, r8; pop r13; ret; 
0x00000000081002: pop r12; pop r13; jmp rax; 
0x00000000077453: pop r12; pop r13; mov rax, r9; pop r14; ret; 
0x000000001506f4: pop r12; pop r13; pop r14; jmp rcx; 
0x0000000002c29e: pop r12; pop r13; pop r14; pop r15; jmp rax; 
0x00000000028588: pop r12; pop r13; pop r14; pop r15; ret; 
0x0000000002ac3a: pop r12; pop r13; pop r14; ret; 
0x00000000044231: pop r12; pop r13; pop rbp; ret; 
0x0000000002a7bb: pop r12; pop r13; ret; 
0x000000000deea5: pop r12; pop rbp; ret; 
0x00000000034189: pop r12; ret; 
0x00000000081004: pop r13; jmp rax; 
0x00000000077455: pop r13; mov rax, r9; pop r14; ret; 
0x000000000cd269: pop r13; pop r14; add rax, rdx; mov [rdi+0x20], rax; ret; 
0x000000000d925c: pop r13; pop r14; jmp rax; 
0x000000001506f6: pop r13; pop r14; jmp rcx; 
0x0000000002c2a0: pop r13; pop r14; pop r15; jmp rax; 
0x0000000002951d: pop r13; pop r14; pop r15; pop rbp; ret; 
0x0000000002858a: pop r13; pop r14; pop r15; ret; 
0x0000000002ac3c: pop r13; pop r14; ret; 
0x00000000044233: pop r13; pop rbp; ret; 
0x0000000002a7bd: pop r13; ret; 
0x000000000b3103: pop r13; str [rcx+0x63]; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000cd26b: pop r14; add rax, rdx; mov [rdi+0x20], rax; ret; 
0x000000000d925e: pop r14; jmp rax; 
0x000000001506f8: pop r14; jmp rcx; 
0x0000000002c2a2: pop r14; pop r15; jmp rax; 
0x0000000002951f: pop r14; pop r15; pop rbp; ret; 
0x0000000002858c: pop r14; pop r15; ret; 
0x0000000002ac3e: pop r14; ret; 
0x0000000002c2a4: pop r15; jmp rax; 
0x00000000029521: pop r15; pop rbp; ret; 
0x0000000002858e: pop r15; ret; 
0x0000000014a511: pop r8; add al, [rax]; add [rax], al; add rdi, 0x58; jmp rcx; 
0x00000000149d46: pop r8; mov eax, 0x1; ret; 
0x000000000763f3: pop rax; add [rax], eax; add [rax], al; mov rbx, rdi; jmp rsi; 
0x0000000009d4a6: pop rax; add [rax], eax; lea rdx, [rip+0xd5a10]; cmovne rax, rdx; ret; 
0x0000000014a512: pop rax; add al, [rax]; add [rax], al; add rdi, 0x58; jmp rcx; 
0x000000000a13e1: pop rax; add al, [rax]; add bh, dh; ret; 
0x0000000002e0f2: pop rax; call r13; 
0x0000000014a6c9: pop rax; call rax; 
0x000000000f407b: pop rax; cmp dh, dh; ret; 
0x000000000f0d03: pop rax; dec dword ptr [rcx-0x77]; ret; 
0x0000000007948a: pop rax; idiv edi; inc dword ptr [rbp-0x7b]; ror byte ptr [rdi], 0x88; ret; 
0x0000000007380e: pop rax; idiv edi; jmp qword ptr [rsi+0xf]; 
0x00000000079fb3: pop rax; idiv edi; jmp qword ptr [rsi-0x77]; 
0x0000000014a51a: pop rax; jmp rcx; 
0x000000000e0999: pop rax; jne short 0x00000000000e09a0; ret; 
0x00000000143ea4: pop rax; mov [rdx+0x68], rcx; ret; 
0x00000000149d47: pop rax; mov eax, 0x1; ret; 
0x00000000038d27: pop rax; mov eax, [rax+rdi*4+0x200]; ret; 
0x00000000038cb7: pop rax; mov eax, [rax+rdx*4]; ret; 
0x000000000e0af0: pop rax; mov edx, 0x40; mov eax, 0x20; cmove rax, rdx; ret; 
0x0000000014c058: pop rax; mov rax, [rbp+0x8]; pop rdx; call qword ptr [rax+0x20]; 
0x0000000002d286: pop rax; mov rax, [rsp+0x20]; call rax; 
0x0000000002bfe8: pop rax; mov rax, [rsp+0x28]; call rax; 
0x0000000011415d: pop rax; mov rax, r12; pop rdx; pop r12; ret; 
0x0000000002ed86: pop rax; mov rdi, [rsp+0x50]; call r14; 
0x000000000323cd: pop rax; mov rdi, [rsp+0x50]; mov rax, [rsp+0x10]; call rax; 
0x00000000030d26: pop rax; mov rdi, [rsp+0x50]; mov rax, [rsp+0x20]; call rax; 
0x0000000002c56b: pop rax; mov rdi, [rsp+0x60]; mov rax, [rsp+0x20]; call rax; 
0x0000000014909f: pop rax; mov rdi, r12; call qword ptr [rax+0x20]; 
0x0000000007ed4f: pop rax; mov rdi, rbx; call qword ptr [rbp+0x60]; 
0x00000000039000: pop rax; mov rdx, [rip+0x1a9ef7]; add rax, 0x200; mov fs:[rdx], rax; ret; 
0x000000000b1f04: pop rax; or [rax], eax; add cl, ch; ret; 
0x000000000f185e: pop rax; or bh, dh; ret; 
0x000000000266de: pop rax; pop rbx; pop rbp; ret; 
0x0000000011921f: pop rax; pop rdi; call rax; 
0x000000001597d5: pop rax; pop rdx; pop rbx; ret; 
0x0000000004557f: pop rax; ret; 
0x00000000026854: pop rax; sbb eax, [rax]; syscall; 
0x00000000159a11: pop rax; sub rcx, fs:[0x28]; jne short 0x0000000000159a64; add rsp, 0x68; ret; 
0x00000000159baa: pop rax; sub rcx, fs:[0x28]; jne short 0x0000000000159c14; add rsp, 0x68; ret; 
0x000000000cdcc4: pop rax; xchg ch, dh; dec dword ptr [rax-0x77]; ret; 
0x0000000010e7b1: pop rax; xor eax, eax; lea rdx, [rsp+0x30]; mov eax, 0x10; syscall; 
0x000000000cc347: pop rax; xor eax, eax; mov [rsp+0x50], r12; call rbx; 
0x000000000868d2: pop rbp; adc [rsi+0xf], ah; outsd dx, [rsi]; ret far; 
0x00000000115b79: pop rbp; add [rsi+0x2b], dh; mov rsi, r12; mov rdi, r14; call r13; 
0x0000000013a25b: pop rbp; add cl, ch; imul edi, esi, 0xffffffff; jmp qword ptr [rsi+0xf]; 
0x00000000074794: pop rbp; add dh, dh; ret; 
0x0000000012149f: pop rbp; cmp [rcx], dh; rcr byte ptr [rbx+0x5d], 0x41; pop rsp; ret; 
0x000000000867f3: pop rbp; cmp [rsi+0xf], ah; outsd dx, [rsi]; ret; 
0x00000000052867: pop rbp; cmp eax, 0xc1480019; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x0000000011acd1: pop rbp; idiv edi; mov eax, [rsp+0x18]; add rsp, 0x28; ret; 
0x00000000081005: pop rbp; jmp rax; 
0x000000001415d9: pop rbp; jmp rcx; 
0x00000000142d52: pop rbp; jmp rdx; 
0x000000000d95b9: pop rbp; lea rax, [rax+rdx*8]; ret; 
0x000000001140d1: pop rbp; lea rax, [rip+0xd3827]; pop r12; pop r13; ret; 
0x0000000012f5fa: pop rbp; mov byte ptr [rcx], 0x0; pop r12; pop r13; ret; 
0x0000000004463b: pop rbp; mov eax, 0xfffd97e9; jmp qword ptr [rbx+rcx*4+0x4]; 
0x00000000107d7c: pop rbp; mov eax, r12d; pop r12; ret; 
0x00000000087f37: pop rbp; mov eax, r8d; pop r12; ret; 
0x00000000087ddb: pop rbp; mov eax, r8d; ret; 
0x00000000191d94: pop rbp; mov qword ptr [rip+0x56110], 0x0; ret; 
0x0000000004263a: pop rbp; mov r10d, 0x8; mov eax, 0x80; syscall; 
0x0000000008a6c2: pop rbp; mov r12, rax; mov rax, r12; pop r12; ret; 
0x0000000008625c: pop rbp; mov rax, [rax+0xe0]; mov rax, [rax+0x20]; jmp rax; 
0x0000000009d107: pop rbp; mov rax, r12; pop r12; pop r13; ret; 
0x00000000039607: pop rbp; mov rax, r12; pop r12; ret; 
0x00000000097938: pop rbp; mov rax, r8; pop r12; pop r13; ret; 
0x0000000003d816: pop rbp; mov rax, r8; pop r12; ret; 
0x00000000077456: pop rbp; mov rax, r9; pop r14; ret; 
0x00000000098720: pop rbp; mov rsi, r12; pop r12; pop r13; jmp rax; 
0x00000000144989: pop rbp; movzx eax, al; pop r12; ret; 
0x0000000014d033: pop rbp; or [rax], eax; mov dword ptr [rip+0x9bea0], 0x2; pop rbx; ret; 
0x0000000014d032: pop rbp; or [rax], eax; mov dword ptr [rip+0x9bea0], 0x2; pop rbx; ret; 
0x0000000014d0a4: pop rbp; or [rax], eax; pop rbx; ret; 
0x000000001252ef: pop rbp; out 0xff, al; jmp qword ptr [rsi+0x66]; 
0x0000000015a6bb: pop rbp; out dx, eax; jmp qword ptr [rsi-0x70]; 
0x00000000083b76: pop rbp; pop r12; jmp rax; 
0x000000000979a3: pop rbp; pop r12; mov rax, r8; pop r13; ret; 
0x0000000008130b: pop rbp; pop r12; pop r13; jmp rax; 
0x00000000150722: pop rbp; pop r12; pop r13; pop r14; jmp rcx; 
0x0000000002ac39: pop rbp; pop r12; pop r13; pop r14; ret; 
0x0000000002a7ba: pop rbp; pop r12; pop r13; ret; 
0x00000000034188: pop rbp; pop r12; ret; 
0x00000000130e7e: pop rbp; pop r13; pop r14; pop r15; ret; 
0x000000000e8217: pop rbp; pop r13; ret; 
0x000000000cd26a: pop rbp; pop r14; add rax, rdx; mov [rdi+0x20], rax; ret; 
0x000000000d925d: pop rbp; pop r14; jmp rax; 
0x000000001506f7: pop rbp; pop r14; jmp rcx; 
0x0000000002c2a1: pop rbp; pop r14; pop r15; jmp rax; 
0x0000000002951e: pop rbp; pop r14; pop r15; pop rbp; ret; 
0x0000000002858b: pop rbp; pop r14; pop r15; ret; 
0x0000000002ac3d: pop rbp; pop r14; ret; 
0x00000000044234: pop rbp; pop rbp; ret; 
0x00000000053c68: pop rbp; pop rbx; ret; 
0x00000000026617: pop rbp; ret far; 
0x000000000266e0: pop rbp; ret; 
0x000000000b305e: pop rbp; str [rcx+0x63]; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000001100e7: pop rbp; sub eax, 0xd8f7000d; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000c5ed0: pop rbp; sub eax, edx; pop r12; ret; 
0x0000000009d6be: pop rbp; xor eax, eax; pop r12; pop r13; ret; 
0x0000000014374d: pop rbx; add rdi, 0x23b0; pop rbp; jmp rcx; 
0x000000000b8556: pop rbx; and eax, 0x7ff80000; ret; 
0x0000000011bf97: pop rbx; bnd jmp qword ptr [rsi+0xf]; 
0x00000000093261: pop rbx; cld; adc al, 0x0; mov [rax], rdx; ret; 
0x000000000b84ab: pop rbx; cmove rax, rdx; ret; 
0x0000000009f9bc: pop rbx; cmovne rax, rdi; ret; 
0x000000000b853b: pop rbx; cmovne rax, rdx; ret; 
0x000000000b7691: pop rbx; idiv bh; jmp qword ptr [rsi+0xf]; 
0x000000000b8768: pop rbx; imul eax, ecx; ret; 
0x0000000008011d: pop rbx; je short 0x000000000008011a; jmp qword ptr [rsi+0x2e]; 
0x0000000008dfb8: pop rbx; jmp rax; 
0x0000000013738b: pop rbx; mov [r9], rax; mov eax, ecx; ret; 
0x00000000090bc6: pop rbx; mov dword ptr [rip+0x155aef], 0x1; ret; 
0x0000000014ceaf: pop rbx; mov dword ptr [rip+0x9c026], 0x2; ret; 
0x000000001437c8: pop rbx; mov eax, 0x1; pop rbp; pop r12; ret; 
0x00000000126c5e: pop rbx; mov eax, 0x5; pop r12; pop rbp; ret; 
0x00000000101a86: pop rbx; mov eax, 0x5; pop rbp; pop r12; ret; 
0x00000000107058: pop rbx; mov eax, 0x9; pop rbp; pop r12; ret; 
0x000000000ede00: pop rbx; mov eax, 0xc; pop rbp; pop r12; ret; 
0x00000000083f18: pop rbx; mov eax, 0xffffffff; pop rbp; pop r12; ret; 
0x0000000004557d: pop rbx; mov eax, [rax+0x58]; ret; 
0x00000000090da7: pop rbx; mov eax, fs:[rax]; ret; 
0x00000000044c7b: pop rbx; mov eax, r8d; pop rbp; pop r12; ret; 
0x0000000015a7b1: pop rbx; mov edi, 0xc1480008; enter 0x6411, 0x48; xor eax, [0x30]; jmp rax; 
0x0000000008fab4: pop rbx; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [r12+0x18]; 
0x0000000009ee5d: pop rbx; mov qword ptr [rbp], 0x0; pop rbp; pop r12; ret; 
0x0000000004572b: pop rbx; mov qword ptr [rip+0x1a0c29], 0x0; mov eax, [rax+0x58]; ret; 
0x00000000191936: pop rbx; mov qword ptr [rip+0x5419e], 0x0; ret; 
0x00000000191c5b: pop rbx; mov qword ptr [rip+0x55469], 0x0; ret; 
0x000000000857f9: pop rbx; mov rax, [rsp+0x8]; mov esi, 0xffffffff; mov rdi, r8; call qword ptr [rax+0x18]; 
0x00000000082265: pop rbx; mov rax, r8; pop rbp; pop r12; ret; 
0x00000000083b72: pop rbx; mov rdi, rbp; pop rbp; pop r12; jmp rax; 
0x0000000013735b: pop rbx; movsxd rdx, eax; add r10, rdx; mov [r9], r10; ret; 
0x0000000008a510: pop rbx; neg eax; ret; 
0x00000000026aaf: pop rbx; or [rcx+0x39], cl; ret far; 
0x00000000132987: pop rbx; or eax, [rax]; syscall; 
0x00000000081001: pop rbx; pop r12; pop r13; jmp rax; 
0x0000000010ab60: pop rbx; pop r12; pop r13; pop r14; ret; 
0x00000000044230: pop rbx; pop r12; pop r13; pop rbp; ret; 
0x000000000606ea: pop rbx; pop r12; pop r13; ret; 
0x000000000deea4: pop rbx; pop r12; pop rbp; ret; 
0x00000000059b17: pop rbx; pop r12; ret; 
0x000000001906fa: pop rbx; pop r14; ret; 
0x00000000084073: pop rbx; pop rbp; jmp rax; 
0x000000001415d8: pop rbx; pop rbp; jmp rcx; 
0x000000000d95b8: pop rbx; pop rbp; lea rax, [rax+rdx*8]; ret; 
0x00000000107d7b: pop rbx; pop rbp; mov eax, r12d; pop r12; ret; 
0x00000000087f36: pop rbx; pop rbp; mov eax, r8d; pop r12; ret; 
0x00000000087dda: pop rbx; pop rbp; mov eax, r8d; ret; 
0x00000000039606: pop rbx; pop rbp; mov rax, r12; pop r12; ret; 
0x0000000003d815: pop rbx; pop rbp; mov rax, r8; pop r12; ret; 
0x00000000144988: pop rbx; pop rbp; movzx eax, al; pop r12; ret; 
0x000000000970eb: pop rbx; pop rbp; pop r12; jmp rax; 
0x0000000008bf59: pop rbx; pop rbp; pop r12; pop r13; jmp rax; 
0x0000000002a7b9: pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000342b0: pop rbx; pop rbp; pop r12; ret; 
0x00000000091f0d: pop rbx; pop rbp; pop r12; ret; 
0x000000000e8216: pop rbx; pop rbp; pop r13; ret; 
0x000000000266df: pop rbx; pop rbp; ret; 
0x000000000c5ecf: pop rbx; pop rbp; sub eax, edx; pop r12; ret; 
0x0000000003482f: pop rbx; ret; 
0x0000000013621c: pop rbx; ret; 
0x000000001070ae: pop rbx; setl al; ret; 
0x000000001146be: pop rbx; setne al; movzx eax, al; ret; 
0x000000000b8505: pop rbx; shr eax, 0x6; and eax, 0x3fffc00; ret; 
0x000000000b84ba: pop rbx; shr eax, 0xe; and eax, 0x3fc00; ret; 
0x000000000b4e51: pop rbx; str [rcx+0x63]; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000008badf: pop rbx; sub rax, rdx; pop rbp; pop r12; ret; 
0x0000000004554c: pop rbx; test eax, eax; cmovs eax, edx; ret; 
0x00000000126c4d: pop rbx; xor eax, eax; pop r12; pop rbp; ret; 
0x00000000142d4f: pop rbx; xor eax, eax; pop rbp; jmp rdx; 
0x0000000008c670: pop rbx; xor eax, eax; pop rbp; pop r12; ret; 
0x0000000015f777: pop rcx; add [rax], eax; add [rbp-0x77], cl; ret far; 
0x000000000409cf: pop rcx; add eax, 0x17631b; ret; 
0x00000000040d24: pop rcx; add eax, 0x1766b6; ret; 
0x00000000040cd9: pop rcx; add eax, 0x1766f9; ret; 
0x00000000040cb4: pop rcx; add eax, 0x176722; ret; 
0x000000000ab2e4: pop rcx; and al, 0x0; add [rbp-0x77], cl; ret far; 
0x000000000c7273: pop rcx; and al, 0xff; jmp qword ptr [rsi+0xf]; 
0x000000001028e3: pop rcx; cmp dh, dl; jmp qword ptr [rsi+0xf]; 
0x0000000011b09d: pop rcx; idiv edi; mov rax, [rsp+0x8]; add rsp, 0x38; ret; 
0x000000000a0af3: pop rcx; jg short 0x00000000000a0aef; jmp qword ptr [rsi+0xf]; 
0x00000000189b79: pop rcx; jmp qword ptr [rdx-0x2f]; 
0x0000000018954c: pop rcx; jmp qword ptr [rdx-0xf]; 
0x00000000140b43: pop rcx; jrcxz 0x0000000000140b45; jmp qword ptr [rsi+0xf]; 
0x0000000008e586: pop rcx; lea rbx, [rsi+0x1]; mov rdi, r15; movzx esi, byte ptr [rsi]; call qword ptr [rax+0x18]; 
0x0000000009584b: pop rcx; loope 0x000000000009585f; add al, ch; cld; ret far; 
0x0000000013ade3: pop rcx; mov ch, 0xee; jmp qword ptr [rsi+0xf]; 
0x00000000142551: pop rcx; mov rdi, [rsp+0x8]; mov r12d, eax; mov rax, [rdi+0x8]; call qword ptr [rax+0x20]; 
0x0000000008a73e: pop rcx; mov rdx, r12; mov rsi, r13; call qword ptr [r14+0x38]; 
0x00000000178cb7: pop rcx; or al, [rax]; add [rbp-0x77], cl; ret far; 
0x00000000111de9: pop rcx; or eax, 0x894c2300; rol dh, 0x46; inc dword ptr [rax]; ret; 
0x000000001140a0: pop rcx; pop rbp; pop r12; pop r13; ret; 
0x000000000fd0a4: pop rcx; pop rbx; ret; 
0x00000000191dfa: pop rcx; push 0x5d010005; ret; 
0x00000000131a8a: pop rcx; ret; 
0x00000000050b30: pop rcx; sbb [rax], eax; mov byte ptr [r8+rax], 0x0; mov rax, r8; ret; 
0x0000000009b3e3: pop rcx; scasd [rdi]; clc; jmp qword ptr [rsi+0xf]; 
0x000000000b5b63: pop rcx; str [rbx+0x63]; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000edc26: pop rcx; xor eax, eax; pop rbp; ret; 
0x0000000015ff79: pop rdi; adc [rdx+0x9], dh; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000009115c: pop rdi; add [rax], al; add [rax+0x16], bh; cmove eax, edx; ret; 
0x0000000008e945: pop rdi; add [rax], eax; add al, ch; bnd jns short 0x000000000008e946; jmp qword ptr [rsi+0xf]; 
0x0000000012f342: pop rdi; add ebx, ebp; xchg edi, eax; xor eax, eax; ret; 
0x0000000014fa9b: pop rdi; add rsp, 0x10; pop rbp; ret; 
0x0000000004fcdb: pop rdi; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000cd16e: pop rdi; add rsp, 0xe0; mov eax, r8d; pop rbx; ret; 
0x0000000014a5c3: pop rdi; and [rax+0x1], bh; movups [r8], xmm3; ret; 
0x0000000017e472: pop rdi; and ch, al; std; xlat [rbx]; ret; 
0x00000000119220: pop rdi; call rax; 
0x00000000081874: pop rdi; cli; jmp qword ptr [rsi+0xf]; 
0x00000000058d1d: pop rdi; fdivr st, st(4); dec dword ptr [rcx-0x77]; ret; 
0x000000001288bd: pop rdi; idiv edi; jmp qword ptr [rsi+0x2e]; 
0x00000000161999: pop rdi; in al, dx; mov [rdi-0xc], rcx; mov [rdi-0x4], edx; ret; 
0x000000001617a9: pop rdi; in eax, dx; mov [rdi-0xb], rcx; mov [rdi-0x4], edx; ret; 
0x0000000002c2a5: pop rdi; jmp rax; 
0x000000000cc8f0: pop rdi; mov [rsp+0xd0], rax; lea rdi, [rsp+0xd0]; mov rsi, r13; call r12; 
0x000000000deae4: pop rdi; mov eax, 0x3a; syscall; 
0x00000000115980: pop rdi; mov rdi, [r12]; call rbx; 
0x0000000015cea8: pop rdi; or [rax], al; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x0000000014cdb8: pop rdi; or [rax], eax; lea rdx, [rip+0x9c13e]; mov fs:[rax], rdx; ret; 
0x000000001615c9: pop rdi; out dx, al; mov [rdi-0xa], rcx; mov [rdi-0x4], edx; ret; 
0x000000001613f9: pop rdi; out dx, eax; mov [rdi-0x9], r8; mov [rdi-0x4], edx; ret; 
0x000000001614f5: pop rdi; out dx, eax; mov [rdi-0x9], rcx; mov [rdi-0x1], dl; ret; 
0x00000000161441: pop rdi; out dx, eax; mov [rdi-0x9], rcx; mov [rdi-0x4], edx; ret; 
0x00000000029522: pop rdi; pop rbp; ret; 
0x0000000002858f: pop rdi; ret; 
0x000000000503ab: pop rdi; sbb [rax], eax; syscall; 
0x000000000503aa: pop rdi; sbb [rax], eax; syscall; 
0x000000001607f9: pop rdi; shl byte ptr [rdx+0x13], 0x1; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000015fecb: pop rdi; shl byte ptr [rdx+0xe], 0x1; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x000000000c6362: pop rdx; adc [rax], eax; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000004fda9: pop rdx; add rsp, 0x38; pop rbx; pop rbp; ret; 
0x0000000010f900: pop rdx; add rsp, 0x38; ret; 
0x00000000191452: pop rdx; and al, 0xf8; jmp qword ptr [rsi+0x2e]; 
0x0000000014c05d: pop rdx; call qword ptr [rax+0x20]; 
0x000000000e951a: pop rdx; dec dword ptr [rcx+0x29]; ret; 
0x000000000c9f72: pop rdx; fdiv st(7), st; jmp qword ptr [rsi+0x2e]; 
0x0000000012bef2: pop rdx; fdivr st, st(7); jmp qword ptr [rsi+0x2e]; 
0x0000000011afe1: pop rdx; idiv edi; mov eax, [rsp+0x18]; add rsp, 0x28; ret; 
0x0000000014c7f2: pop rdx; iretd; std; jmp qword ptr [rsi+0x2e]; 
0x00000000157542: pop rdx; jb short 0x000000000015753d; jmp qword ptr [rsi+0xf]; 
0x00000000116fea: pop rdx; mov esi, 0xd8f7000c; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000114d53: pop rdx; or [rcx-0xa], al; ret; 
0x0000000007857a: pop rdx; or al, 0x0; add [rax-0x77], cl; fimul st, dword ptr [rcx+rcx*4-0x1]; call qword ptr [r12+0x38]; 
0x00000000158af2: pop rdx; or al, 0xfd; jmp qword ptr [rsi+0x2e]; 
0x00000000132adc: pop rdx; or eax, [rax]; call rax; 
0x00000000132b43: pop rdx; or eax, [rax]; syscall; 
0x00000000114161: pop rdx; pop r12; ret; 
0x000000001597d6: pop rdx; pop rbx; ret; 
0x000000000fd0a3: pop rdx; pop rcx; pop rbx; ret; 
0x000000000dd842: pop rdx; pushfq; adc [rax], al; syscall; 
0x000000000313da: pop rdx; ret far; 
0x000000001361f2: pop rdx; sub al, dh; jmp qword ptr [rsi+0x2e]; 
0x000000000cb625: pop rdx; test al, 0xf0; jne short 0x00000000000cb650; lea rax, [rdi-0x10]; ret; 
0x0000000009c439: pop rdx; xor eax, eax; pop rbp; pop r12; ret; 
0x0000000008e589: pop rsi; add [rcx+rcx*4-0x1], ecx; movzx esi, byte ptr [rsi]; call qword ptr [rax+0x18]; 
0x0000000008e5fc: pop rsi; add [rdi], ecx; mov dh, 0x36; call qword ptr [rax+0x18]; 
0x00000000190d16: pop rsi; add eax, 0x279c8; ret; 
0x000000000cd26c: pop rsi; add rax, rdx; mov [rdi+0x20], rax; ret; 
0x00000000159bb5: pop rsi; add rsp, 0x68; ret; 
0x00000000072ba4: pop rsi; cld; jmp qword ptr [rsi+0xf]; 
0x000000000e2b5b: pop rsi; cmc; jmp qword ptr [rsi-0x70]; 
0x000000000e2b5a: pop rsi; cmc; jmp qword ptr [rsi-0x70]; 
0x0000000004803e: pop rsi; dec dword ptr [rax-0x77]; fimul st, word ptr [rax+0xf]; mov esi, 0x83480143; ret; 
0x000000001288de: pop rsi; fucomp st, st(7); jmp qword ptr [rsi+0xf]; 
0x000000000d925f: pop rsi; jmp rax; 
0x000000001506f9: pop rsi; jmp rcx; 
0x000000000e7d74: pop rsi; jne short 0x00000000000e7da0; mov byte ptr [rdi+0x8], 0x19; mov eax, 0x1; ret; 
0x00000000099709: pop rsi; lea rdx, [rip+0x10f497]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000008dec9: pop rsi; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp+0x18]; 
0x0000000014d1d3: pop rsi; or [rax], eax; mov dword ptr [rip+0x9bd00], 0x2; pop rbx; ret; 
0x0000000014cf63: pop rsi; or [rax], eax; mov dword ptr [rip+0x9bf70], 0x2; pop rbx; ret; 
0x0000000014cfd4: pop rsi; or [rax], eax; pop rbx; ret; 
0x00000000127c6e: pop rsi; or esi, esi; jmp qword ptr [rsi+0xf]; 
0x0000000002c2a3: pop rsi; pop r15; jmp rax; 
0x00000000029520: pop rsi; pop r15; pop rbp; ret; 
0x0000000002858d: pop rsi; pop r15; ret; 
0x00000000029a2e: pop rsi; ret far; 
0x0000000002ac3f: pop rsi; ret; 
0x0000000013068e: pop rsi; stc; call far fword ptr [rsi+0x5f]; 
0x00000000153867: pop rsi; std; jmp qword ptr [rsi+0xf]; 
0x0000000012d6c6: pop rsi; stosd [rdi]; or eax, [rax]; syscall; 
0x0000000002aafe: pop rsi; stosd [rdi]; sbb eax, [rax]; syscall; 
0x000000000b3006: pop rsi; str [rcx+0x63]; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000a1e13: pop rsp; add [rdx+0x38], eax; pop rsp; syscall; 
0x00000000105f20: pop rsp; add al, 0xf2; dec dword ptr [rax-0x7b]; ror byte ptr [rdi], 0x84; ret far; 
0x00000000094c8c: pop rsp; and al, 0x10; call rax; 
0x0000000009491d: pop rsp; and al, 0x18; call qword ptr [rax]; 
0x0000000007b3c4: pop rsp; and al, 0x68; jmp rcx; 
0x000000000cc279: pop rsp; and al, 0xf0; movsd xmm0, [rsp-0x10]; ret; 
0x0000000011ad89: pop rsp; idiv edi; mov eax, [rsp+0x4]; add rsp, 0x28; ret; 
0x0000000011ae3f: pop rsp; idiv edi; mov eax, [rsp+0xc]; add rsp, 0x28; ret; 
0x00000000107abf: pop rsp; imul ecx, [rdx], 0x908b4800; mov al, 0x0; add [rax], al; call qword ptr [rax+0x88]; 
0x00000000083b78: pop rsp; jmp rax; 
0x00000000141332: pop rsp; lea rsi, [rdi+0x48]; mov rdi, r8; mov rax, [rax+0x18]; jmp rax; 
0x000000000979a5: pop rsp; mov rax, r8; pop r13; ret; 
0x0000000014d103: pop rsp; or [rax], eax; mov dword ptr [rip+0x9bdd0], 0x2; pop rbx; ret; 
0x0000000014d174: pop rsp; or [rax], eax; pop rbx; ret; 
0x0000000004b020: pop rsp; or eax, [rax]; add [rax-0x80], al; jmp far fword ptr [rbx]; 
0x0000000013289c: pop rsp; or eax, [rax]; add [rcx+rcx*4-0x40], eax; pop rbp; ret; 
0x000000000d0268: pop rsp; pop qword ptr [rdx]; jbe short 0x00000000000d0270; ret; 
0x00000000081003: pop rsp; pop r13; jmp rax; 
0x00000000077454: pop rsp; pop r13; mov rax, r9; pop r14; ret; 
0x000000001506f5: pop rsp; pop r13; pop r14; jmp rcx; 
0x0000000002c29f: pop rsp; pop r13; pop r14; pop r15; jmp rax; 
0x00000000028589: pop rsp; pop r13; pop r14; pop r15; ret; 
0x0000000002ac3b: pop rsp; pop r13; pop r14; ret; 
0x00000000044232: pop rsp; pop r13; pop rbp; ret; 
0x0000000002a7bc: pop rsp; pop r13; ret; 
0x000000000deea6: pop rsp; pop rbp; ret; 
0x0000000003418a: pop rsp; ret; 
0x00000000040bfc: pop rsp; rol ebx, 0x90; and esi, 0x80000000; mov [rdi], esi; ret; 
0x0000000011f440: pop rsp; sti; jmp qword ptr [rsi+0xf]; 
0x000000000a1e18: pop rsp; syscall; 
0x000000000dd766: popfq; adc [rax], al; syscall; 
0x000000000dd767: popfq; adc [rax], al; syscall; 
0x0000000013f98e: popfq; add [rax], eax; mov edi, [r13]; call qword ptr [rsp+0x20]; 
0x0000000013fa26: popfq; add [rax], eax; xor edi, edi; call qword ptr [rsp+0x20]; 
0x0000000011a2af: popfq; idiv edi; mov eax, [rsp+0xc]; add rsp, 0x28; ret; 
0x000000000b6e52: popfq; lea r11, [rip+0xf24aa]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b4f92: popfq; lea r11, [rip+0xf4196]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b38b2: popfq; lea r11, [rip+0xf5696]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000069782: popfq; mov al, [0x830ffb394cfffff9]; ret; 
0x0000000006ee9f: popfq; mov al, [0xd4e9c58941fffffa]; ret far; 
0x0000000006ef0a: popfq; mov al, [0xfffad085c7fffffa]; jmp qword ptr [rbp]; 
0x0000000011dee6: popfq; or al, 0x0; syscall; 
0x000000001290f4: popfq; or eax, [rax]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000072c82: popfq; push rax; idiv edi; jmp far fword ptr [rcx]; 
0x00000000026597: popfq; ret far; 
0x0000000006c34d: popfq; sar dl, 0xff; jmp qword ptr [rbx+rcx*4]; 
0x0000000002a6c7: popfq; scasd [rdi]; sbb eax, [rax]; ret; 
0x00000000154baf: popfq; std; jmp qword ptr [rsi+0x2e]; 
0x0000000014fa14: popfq; std; jmp qword ptr [rsi+0xf]; 
0x000000001105a7: popfq; sub [rip+0x64d8f700], cl; mov [rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000040f15: por mm0, mm1; ret; 
0x00000000040f14: por xmm0, xmm1; ret; 
0x00000000167352: psllq mm1, [r15]; jg short 0x0000000000167367; ret; 
0x00000000169e82: psllq mm1, [r15]; jg short 0x0000000000169e97; ret; 
0x000000000b3285: psllq mm1, [rdi]; jg short 0x00000000000b3292; mov [rdi+0xf], ecx; ret; 
0x000000000b32e6: psllq mm1, [rdi]; jg short 0x00000000000b32f3; mov [rdi+0xf], rcx; ret; 
0x000000000b33e8: psllq mm1, [rdi]; jg short 0x00000000000b33f4; movdqu [rdi+0xf], xmm2; ret; 
0x000000000b3f75: psllq mm1, [rdi]; jg short 0x00000000000b3f82; mov [rdi+0xf], ecx; ret; 
0x000000000b3fd6: psllq mm1, [rdi]; jg short 0x00000000000b3fe3; mov [rdi+0xf], rcx; ret; 
0x000000000b40d8: psllq mm1, [rdi]; jg short 0x00000000000b40e4; movdqu [rdi+0xf], xmm2; ret; 
0x000000000b4935: psllq mm1, [rdi]; jg short 0x00000000000b4942; mov [rdi+0xf], ecx; lea rax, [rdi+0x12]; ret; 
0x000000000b49b6: psllq mm1, [rdi]; jg short 0x00000000000b49c3; mov [rdi+0xf], rcx; lea rax, [rdi+0x16]; ret; 
0x000000000b4ab8: psllq mm1, [rdi]; jg short 0x00000000000b4ac4; movdqu [rdi+0xf], xmm2; lea rax, [rdi+0x1e]; ret; 
0x000000000b57a5: psllq mm1, [rdi]; jg short 0x00000000000b57b2; mov [rdi+0xf], ecx; lea rax, [rdi+0x13]; ret; 
0x000000000b5826: psllq mm1, [rdi]; jg short 0x00000000000b5833; mov [rdi+0xf], rcx; lea rax, [rdi+0x17]; ret; 
0x000000000b5928: psllq mm1, [rdi]; jg short 0x00000000000b5934; movdqu [rdi+0xf], xmm2; lea rax, [rdi+0x1f]; ret; 
0x000000000b6595: psllq mm1, [rdi]; jg short 0x00000000000b65a2; mov [rdi+0xf], ecx; ret; 
0x000000000b65f6: psllq mm1, [rdi]; jg short 0x00000000000b6603; mov [rdi+0xf], rcx; ret; 
0x000000000b66f8: psllq mm1, [rdi]; jg short 0x00000000000b6704; movdqu [rdi+0xf], xmm2; ret; 
0x000000000b7085: psllq mm1, [rdi]; jg short 0x00000000000b7092; mov [rdi+0xf], ecx; ret; 
0x000000000b70e6: psllq mm1, [rdi]; jg short 0x00000000000b70f3; mov [rdi+0xf], rcx; ret; 
0x000000000b71e8: psllq mm1, [rdi]; jg short 0x00000000000b71f4; movdqu [rdi+0xf], xmm2; ret; 
0x00000000167353: psllq mm1, [rdi]; jg short 0x0000000000167367; ret; 
0x00000000169e83: psllq mm1, [rdi]; jg short 0x0000000000169e97; ret; 
0x00000000044940: psubsw mm3, [rdx]; idiv edi; jmp qword ptr [rsi+0x2e]; 
0x000000000837e6: punpckhqdq xmm0, xmm0; mov [rax+0x10], rcx; mov [rax+0x40], rdx; movups [rax], xmm0; ret; 
0x0000000008de7f: punpckhqdq xmm0, xmm0; mov [rdi+0x18], rdx; mov [rdi+0x48], rax; movups [rdi+0x8], xmm0; ret; 
0x00000000055d2b: punpckldq mm0, mm1; movq [rsp-0x18], xmm0; fld st, tbyte ptr [rsp-0x18]; ret; 
0x0000000002bda7: punpckldq mm1, mm3; punpcklqdq xmm0, xmm1; movups [rdx+0x48], xmm0; ret; 
0x00000000055d2a: punpckldq xmm0, xmm1; movq [rsp-0x18], xmm0; fld st, tbyte ptr [rsp-0x18]; ret; 
0x0000000002bda6: punpckldq xmm1, xmm3; punpcklqdq xmm0, xmm1; movups [rdx+0x48], xmm0; ret; 
0x00000000151382: punpcklqdq xmm0, xmm0; mov [rdi+0x8], rax; mov [rdi+0x28], edx; movups [rdi+0x18], xmm0; ret; 
0x0000000008ab81: punpcklqdq xmm0, xmm0; movups [rbx+0x8], xmm0; pop rbx; ret; 
0x00000000045e94: punpcklqdq xmm0, xmm1; mov eax, r8d; movups [rdi], xmm0; ret; 
0x00000000055def: punpcklqdq xmm0, xmm1; movups [rdi], xmm0; mov [rsi], eax; mov eax, 0x2; ret; 
0x00000000111ca2: punpcklqdq xmm0, xmm1; movups [rdi], xmm0; ret; 
0x0000000002bdaa: punpcklqdq xmm0, xmm1; movups [rdx+0x48], xmm0; ret; 
0x000000000dfc53: push 0x0; add [rax], al; syscall; 
0x00000000159862: push 0x0; call qword ptr [rax+0x270]; 
0x000000000cce2c: push 0x0; lea r8, [rsp+0x40]; call qword ptr [rax+0x270]; 
0x000000000b97ac: push 0x0; lea r9, [rsp+0x18]; call r13; 
0x000000000b949f: push 0x0; lea rcx, [rax+0x1]; mov rdi, [r12]; lea r9, [rsp+0x28]; call rbx; 
0x000000000b9609: push 0x0; lea rcx, [rax+0x4]; lea r9, [rsp+0x18]; call rbx; 
0x000000000b9a2b: push 0x0; lea rcx, [rax+0x4]; lea r9, [rsp+0x20]; call rbx; 
0x00000000159859: push 0x0; lea rcx, [rsi+0x398]; push 0x0; call qword ptr [rax+0x270]; 
0x00000000159808: push 0x0; lea rcx, [rsi+0x398]; push 0x2; call qword ptr [rax+0x270]; 
0x000000000c6fe7: push 0x0; mov r9, [rsp+0x10]; call r13; 
0x0000000002ed7b: push 0x0; mov r9, [rsp+0x40]; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; call r14; 
0x00000000029870: push 0x0; mov r9, r14; mov rsi, [rsp+0x18]; xor r8d, r8d; call rbx; 
0x00000000159d95: push 0x0; mov rdi, rbp; push r8; mov r8, rbx; call qword ptr [rax+0x270]; 
0x0000000002d27b: push 0x0; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; mov rax, [rsp+0x20]; call rax; 
0x0000000002bfdd: push 0x0; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; mov rax, [rsp+0x28]; call rax; 
0x000000000cce2a: push 0x0; push 0x0; lea r8, [rsp+0x40]; call qword ptr [rax+0x270]; 
0x0000000014cc48: push 0x0; push 0x3c; lea r9, [rsp+0x2a]; call qword ptr [rax]; 
0x00000000159d10: push 0x0; push rax; mov rax, [rip+0x8911e]; mov r8, [rbx+0x10]; call qword ptr [rax+0x270]; 
0x000000000dfc4b: push 0x10; add [rbp-0x47d18a40], al; push 0x0; add [rax], al; syscall; 
0x000000000b99b2: push 0x1; lea r9, [rsp+0x20]; call rbx; 
0x0000000007634b: push 0x1; mov rbx, rdi; jmp rsi; 
0x000000000b9607: push 0x1; push 0x0; lea rcx, [rax+0x4]; lea r9, [rsp+0x18]; call rbx; 
0x000000000b9a29: push 0x1; push 0x0; lea rcx, [rax+0x4]; lea r9, [rsp+0x20]; call rbx; 
0x000000000c6fe5: push 0x1; push 0x0; mov r9, [rsp+0x10]; call r13; 
0x000000000b99ae: push 0x1; xor edx, edx; push 0x1; lea r9, [rsp+0x20]; call rbx; 
0x000000000b97a7: push 0x1; xor r8d, r8d; push 0x0; lea r9, [rsp+0x18]; call r13; 
0x0000000014b7ec: push 0x1e; lea r8, [rip-0x5d05]; lea rdx, [rip-0x5cec]; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x0000000014b927: push 0x1e; lea rdx, [rip+0x3fc0]; mov r9, rbp; mov esi, 0x9; call qword ptr [rax]; 
0x0000000014ba5c: push 0x1e; lea rdx, [rip-0x5f15]; mov esi, 0x2; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x0000000014bb9c: push 0x1e; lea rdx, [rip-0x6055]; mov esi, 0x3; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x0000000014bcf9: push 0x1e; lea rdx, [rip-0x6172]; mov esi, 0x6; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x0000000014be99: push 0x1e; lea rdx, [rip-0x6312]; mov esi, 0x7; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x0000000014c0fe: push 0x1e; lea rdx, [rip-0x63c7]; mov esi, 0x8; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x0000000014c232: push 0x1e; lea rdx, [rip-0x672b]; mov esi, 0xa; lea r9, [rsp+0x1c]; call qword ptr [rax]; 
0x00000000143ea7: push 0x1f0f66c3; add [rax], r8b; xor eax, eax; ret; 
0x00000000149bea: push 0x1f0fe1ff; add bl, dh; nop edx, edi; ret; 
0x0000000002c566: push 0x24748b48; pop rax; mov rdi, [rsp+0x60]; mov rax, [rsp+0x20]; call rax; 
0x0000000013ad85: push 0x247c3b48; adc [rbp+rax-0x18], dh; scasb [rdi]; mov ch, 0xee; jmp qword ptr [rsi+0xf]; 
0x00000000149be1: push 0x2; add rdi, 0x68; jmp rcx; 
0x00000000159811: push 0x2; call qword ptr [rax+0x270]; 
0x00000000164ee2: push 0x2c; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000014cc4a: push 0x3c; lea r9, [rsp+0x2a]; call qword ptr [rax]; 
0x0000000014d6b1: push 0x42b4864; and eax, 0x28; jne short 0x000000000014d6c2; add rsp, 0x78; ret; 
0x0000000014d721: push 0x42b4864; and eax, 0x28; jne short 0x000000000014d732; add rsp, 0x78; ret; 
0x0000000014d791: push 0x42b4864; and eax, 0x28; jne short 0x000000000014d7a2; add rsp, 0x78; ret; 
0x0000000014d7f2: push 0x42b4864; and eax, 0x28; jne short 0x000000000014d803; add rsp, 0x78; ret; 
0x0000000014d856: push 0x42b4864; and eax, 0x28; jne short 0x000000000014d867; add rsp, 0x78; ret; 
0x0000000014d8c1: push 0x42b4864; and eax, 0x28; jne short 0x000000000014d8d2; add rsp, 0x78; ret; 
0x0000000014d944: push 0x42b4864; and eax, 0x28; jne short 0x000000000014d955; add rsp, 0x78; ret; 
0x00000000149e23: push 0x438b48ff; jo short 0x0000000000149db3; imul ecx, [rax+0xf], 0xffffffcd; call qword ptr [rax+0x18]; 
0x000000000f8841: push 0x441f0f; add [rax-0x77], cl; ret; 
0x0000000011b994: push 0x48000004; mov dword ptr [rip+0xc79dd], 0x0; add rsp, 0x8; ret; 
0x000000001472d0: push 0x48ee8948; mov edi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x10]; 
0x000000000dac31: push 0x48ff894c; mov esi, [rsp+0x60]; call r12; 
0x0000000014a889: push 0x4c388b48; mov esi, edi; mov rax, [rdi+0x38]; call qword ptr [rax+0x8]; 
0x000000000f0d02: push 0x58; dec dword ptr [rcx-0x77]; ret; 
0x000000000b3d02: push 0x5; add [rax], al; ret; 
0x00000000160d68: push 0x5; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160d67: push 0x5; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000138ac2: push 0x5b000001; pop rbp; pop r12; pop r13; ret; 
0x0000000002cf73: push 0x5c415d5b; pop r13; pop r14; pop r15; jmp rax; 
0x00000000054022: push 0x5c415d5b; pop r13; pop r14; pop r15; ret; 
0x000000000b940c: push 0x5c415d5b; pop r13; ret; 
0x00000000191dfb: push 0x5d010005; ret; 
0x0000000014a844: push 0x60438b48; mov dword ptr [rbx+0x58], 0x0; mov esi, [rbx+0x88]; mov rdi, r15; call qword ptr [rax+0x28]; 
0x0000000010723f: push 0x6076110f; movdqu xmm7, [rdi+0x78]; movups [rsi+0x70], xmm7; ret; 
0x00000000160f56: push 0x63490005; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001146dc: push 0x64000ce7; mov dword ptr [rax], 0xc; xor eax, eax; pop rbx; ret; 
0x000000000453cc: push 0x640019d9; mov rax, [r12]; lock add qword ptr [rax+0x460], 0x1; lea rdi, [rbp+0x988]; call qword ptr [rbp+0xf90]; 
0x000000000957d0: push 0x6e0f4966; ret; 
0x000000000b8bec: push 0x7401f883; or eax, 0x7402f883; adc [rbx+0x137403f8], al; xor eax, eax; ret; 
0x000000000fc297: push 0x7601fb83; movsxd eax, [rcx-0x77]; ret far; 
0x00000000107293: push 0x7e6f0ff3; jo short 0x00000000001072a9; adc [rdi+0x78], edi; ret; 
0x0000000012a730: push 0xbec; add [rax], al; add bl, ch; ret far; 
0x0000000014d63b: push 0xc2b4864; and eax, 0x28; jne short 0x000000000014d64c; add rsp, 0x78; ret; 
0x00000000110e0d: push 0xd; add [rax], al; add rsp, 0x8; ret; 
0x00000000100aee: push 0xe; add [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x00000000038d96: push 0xfff6348; mov bh, 0x4; js short 0x0000000000038d23; loopne 0x0000000000038da3; ret; 
0x00000000038db6: push 0xfff6348; mov bh, 0x4; js short 0x0000000000038d43; loopne 0x0000000000038dca; ret; 
0x00000000038df6: push 0xfff6348; mov bh, 0x4; js short 0x0000000000038d83; loopne 0x0000000000038e04; ret; 
0x00000000038e96: push 0xfff6348; mov bh, 0x4; js short 0x0000000000038e23; loopne 0x0000000000038ea6; ret; 
0x00000000176174: push 0xffffffff80000006; cmp [rcx], al; sbb rax, 0xffffffffffffffff; ret; 
0x00000000057ed6: push 0xffffffff8348ed01; ret; 
0x000000000bdbba: push 0xffffffff8348fff9; ret; 
0x000000001479bb: push 0xffffffff89480006; ret; 
0x000000001400e8: push 0xffffffff894cd231; out 0x48, al; mov edi, ebx; mov rcx, r13; call r10; 
0x0000000007aa2e: push 0xffffffff8a058d48; mov dh, 0x12; add [rcx-0x7d], al; call far fword ptr [rax+0x48]; 
0x0000000016eb54: push 0xffffffff8b000259; or al, 0x8a; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x00000000086da2: push 0xffffffffa5058b48; call qword ptr [rdx]; 
0x0000000011d9d2: push 0xffffffffb70fff89; add al, 0x78; and eax, 0x1000; ret; 
0x0000000011d94a: push 0xffffffffb70fff89; add al, 0x78; and eax, 0x100; ret; 
0x0000000011d542: push 0xffffffffb70fff89; add al, 0x78; and eax, 0x1; ret; 
0x0000000011d8d2: push 0xffffffffb70fff89; add al, 0x78; and eax, 0x2000; ret; 
0x0000000011d6d2: push 0xffffffffb70fff89; add al, 0x78; and eax, 0x200; ret; 
0x0000000011d5c2: push 0xffffffffb70fff89; add al, 0x78; and eax, 0x2; ret; 
0x0000000011d7d2: push 0xffffffffb70fff89; add al, 0x78; and eax, 0x4000; ret; 
0x0000000011d4c2: push 0xffffffffb70fff89; add al, 0x78; and eax, 0x400; ret; 
0x0000000011d852: push 0xffffffffb70fff89; add al, 0x78; and eax, 0x4; ret; 
0x0000000011d752: push 0xffffffffb70fff89; add al, 0x78; and eax, 0x8000; ret; 
0x0000000011d442: push 0xffffffffb70fff89; add al, 0x78; and eax, 0x8; ret; 
0x000000000e0977: push 0xffffffffe1e9ce89; idiv bh; call qword ptr [rax+0x73fa8148]; 
0x000000000f06e8: push 0xffffffffe8ffffff; call far fword ptr [rbp-0xd]; 
0x00000000067255: push 0xffffffffe9fffff9; ret far; 
0x000000000cb617: push 0xfffffffff0478d48; ret; 
0x0000000004935c: push 0xfffffffffff711e9; jmp qword ptr [rsi+0xf]; 
0x0000000004c05c: push 0xfffffffffff7d1e9; jmp qword ptr [rsi+0xf]; 
0x00000000053338: push 0xffffffffffff7ae9; jmp qword ptr [rsi-0x70]; 
0x000000000d8fe5: push 0xffffffffffffff85; dec dword ptr [rdi]; xchg esp, eax; ret; 
0x0000000009b412: push 0xffffffffffffff9b; cli; jmp qword ptr [rsi+0x2e]; 
0x00000000137dd2: push 0xffffffffffffffe5; out dx, al; jmp qword ptr [rsi+0x2e]; 
0x0000000013f89c: push 0xffffffffffffffee; jmp qword ptr [rsp+rax*2-0x77]; 
0x00000000159ce2: push 0xfffffffffffffffa; cld; jmp qword ptr [rsi+0x2e]; 
0x0000000003f90e: push 0xfffffffffffffffe; call far fword ptr [rbp+0x4c]; 
0x0000000012914b: push 0xfffffffffffffffe; call qword ptr [rax-0x18]; 
0x0000000003f9a2: push 0xfffffffffffffffe; jmp qword ptr [rsi+0xf]; 
0x00000000112a02: push 0xffffffffffffffff; jmp qword ptr [rsp+rax*2-0x77]; 
0x000000000b290f: push qword ptr [rax]; leave; mov [rax], cl; mov rax, rdi; ret; 
0x000000001597bf: push qword ptr [rax]; mov rax, [rip+0x89670]; mov rdi, [rdi]; call qword ptr [rax+0x278]; 
0x000000001122cd: push qword ptr [rbp+0x10]; mov eax, 0x1; ret; 
0x0000000018c047: push qword ptr [rbp+0x1a]; xor eax, eax; ret; 
0x00000000115a20: push qword ptr [rbp+0x1d]; mov rdi, [r13]; call rbx; 
0x000000000424cf: push qword ptr [rbp+0x1e]; mov rax, [rip+0x1a096f]; mov dword ptr fs:[rax], 0x16; mov rax, 0xffffffffffffffff; ret; 
0x0000000017e869: push qword ptr [rbp+0x4]; vzeroupper; ret; 
0x00000000115952: push qword ptr [rbp+0x4b]; mov rdi, [r12]; call rbx; 
0x00000000114bf0: push qword ptr [rbp+0x4d]; mov rdi, [r13]; call rbx; 
0x000000001072bd: push qword ptr [rbp+0x5]; mov [rdi], si; xor eax, eax; ret; 
0x000000001159f4: push qword ptr [rbp+0x69]; mov rdi, [r13]; call rbx; 
0x00000000061050: push qword ptr [rbp+rcx+0x44]; mov eax, eax; ret; 
0x00000000191611: push qword ptr [rbp+rdx+0x48]; mov eax, [rdi+0x20]; test rax, rax; je short 0x0000000000191624; call rax; 
0x000000001329f2: push qword ptr [rbp-0x15]; pop rbx; ret; 
0x0000000013bf83: push qword ptr [rbp-0x16]; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000001255d7: push qword ptr [rbp-0x1a]; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000008f010: push qword ptr [rbp-0x40]; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000041bd0: push qword ptr [rbx+0x1]; ret; 
0x00000000053016: push qword ptr [rbx+0x3]; xor eax, eax; ret; 
0x00000000028c07: push qword ptr [rcx+rcx+0x31]; shl byte ptr [rcx], cl; imul al; insd [rdi], dx; ret; 
0x000000000b88a8: push qword ptr [rcx]; rcr byte ptr [rbx+0x5d], 0x41; pop rsp; ret; 
0x00000000090d51: push qword ptr [rcx]; rcr byte ptr [rbx-0x3d], 0x66; nop [rax+rax]; xor eax, eax; ret; 
0x0000000012563d: push qword ptr [rcx]; ror byte ptr [rax-0x7d], 0xc4; or [rbp+0x41], bl; pop rsp; ret; 
0x0000000014997a: push qword ptr [rcx]; ror byte ptr [rax-0x7d], 0xc4; or cl, ch; or cl, [rcx-0xd]; jmp qword ptr [rsi+0x2e]; 
0x0000000008a986: push qword ptr [rcx]; ror byte ptr [rax-0x7d], 0xc4; sbb [rbx+0x5d], bl; ret; 
0x0000000014f66e: push qword ptr [rcx]; ror byte ptr [rcx+0x1], 0xdd; call rbp; 
0x000000000c39da: push qword ptr [rcx]; shr cl, 0xbd; idiv bh; jmp qword ptr [rsi+0xf]; 
0x0000000011029c: push qword ptr [rdi+0x1]; ret; 
0x000000000deb49: push qword ptr [rdi+0x1c]; hlt; mov eax, esi; syscall; 
0x000000001198d4: push qword ptr [rdi+0x31]; mov r8d, eax; mov eax, r8d; ret; 
0x000000000de85c: push qword ptr [rdi+0x31]; ret; 
0x000000000d8f7a: push qword ptr [rdi+0x3]; ret; 
0x000000001094fc: push qword ptr [rdi+0x41]; ret; 
0x0000000010ed09: push qword ptr [rdi+0x4]; ret; 
0x00000000041c51: push qword ptr [rdi+0x4c]; ret; 
0x0000000010eae6: push qword ptr [rdi+0x4f]; ret; 
0x000000000463dc: push qword ptr [rdi+0x51]; ret; 
0x00000000108cb7: push qword ptr [rdi+0x56]; ret; 
0x00000000060fd0: push qword ptr [rdi+0x5]; ret; 
0x000000000de64f: push qword ptr [rdi+0x5e]; ret; 
0x0000000011382b: push qword ptr [rdi+0x62]; pop rbx; pop rbp; ret; 
0x0000000010f4a2: push qword ptr [rdi+0x63]; ret; 
0x0000000011ad2f: push qword ptr [rdi+0x66]; ret; 
0x0000000011a4a5: push qword ptr [rdi+0x68]; ret; 
0x0000000010804f: push qword ptr [rdi+0x6]; ret; 
0x000000000de702: push qword ptr [rdi+0x6b]; ret; 
0x0000000010fedf: push qword ptr [rdi+0x6e]; ret; 
0x00000000119335: push qword ptr [rdi+0x70]; ret; 
0x0000000010dcdf: push qword ptr [rdi+0x76]; ret; 
0x000000001080ae: push qword ptr [rdi+0x7]; ret; 
0x00000000041c05: push qword ptr [rdi+0x8]; ret; 
0x00000000108554: push qword ptr [rdi+0x9]; ret; 
0x00000000061003: push qword ptr [rdi+0xa]; ret; 
0x00000000128492: push qword ptr [rdi+0xb]; ret; 
0x00000000141bac: push qword ptr [rdi+rax+0x48]; mov eax, [rdi+0x8]; call qword ptr [rax+0x20]; 
0x00000000141a0a: push qword ptr [rdi+rcx+0x48]; mov eax, [rdi+0x8]; call qword ptr [rax+0x20]; 
0x0000000007f436: push qword ptr [rdi+rcx+0x48]; mov eax, [rsp+0x8]; add rsp, 0x18; ret; 
0x000000001140ce: push qword ptr [rdi+rcx+0x5d]; lea rax, [rip+0xd3827]; pop r12; pop r13; ret; 
0x0000000014172e: push qword ptr [rdi+rdi*2+0x48]; mov eax, [rdi+0x38]; call qword ptr [rax+0x18]; 
0x00000000113816: push qword ptr [rdi+rsi+0x41]; mov edx, ebx; mov rdi, rbp; mov eax, 0x9; syscall; 
0x000000000d8ee4: push qword ptr [rdi-0x30]; add rsp, 0x8; pop rbp; pop r12; ret; 
0x00000000107eff: push qword ptr [rdi-0x38]; add rsp, 0x8; pop rbp; pop r12; ret; 
0x0000000015fe6c: push qword ptr [rdx+0x7]; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000000422d6: push qword ptr [rdx+rcx+0x48]; mov dword ptr [rdi], 0x0; xor eax, eax; ret; 
0x000000000e1dbb: push qword ptr [rdx+rcx+0x48]; mov edi, ebx; call r15; 
0x00000000141f76: push qword ptr [rip+0x74bd4]; lea r9, [rsp+0x2c]; call qword ptr [rax]; 
0x00000000141f70: push qword ptr [rip+0x74be2]; push qword ptr [rip+0x74bd4]; lea r9, [rsp+0x2c]; call qword ptr [rax]; 
0x00000000141e32: push qword ptr [rip+0x74d18]; lea r9, [rsp+0x2c]; call qword ptr [rax]; 
0x00000000141e2c: push qword ptr [rip+0x74d26]; push qword ptr [rip+0x74d18]; lea r9, [rsp+0x2c]; call qword ptr [rax]; 
0x0000000010da1a: push qword ptr [rsi+0x1b]; cmp eax, 0xffffffa1; je short 0x000000000010da28; neg eax; ret; 
0x0000000010dc6a: push qword ptr [rsi+0x1b]; cmp eax, 0xffffffa1; je short 0x000000000010dc78; neg eax; ret; 
0x00000000091378: push qword ptr [rsi+0x5]; neg eax; ret; 
0x000000000913bd: push qword ptr [rsi+0x8]; neg eax; ret; 
0x0000000011364b: push qword ptr [rsi+rax-0x77]; cmp eax, 0xcfd04; ret; 
0x0000000011c0af: push qword ptr [rsi+rbp-0x7d]; rol byte ptr [rcx], 0x66; mov [rdx], eax; ret; 
0x00000000045517: push qword ptr [rsi+rdi+0x31]; rol byte ptr [rax+0x775003f], 0x5b; ret; 
0x0000000014253d: push qword ptr [rsp+0xe8]; mov [rsp+0x18], rdi; lea r9, [rsp+0x40]; call qword ptr [rax]; 
0x00000000142536: push qword ptr [rsp+0xe8]; push qword ptr [rsp+0xe8]; mov [rsp+0x18], rdi; lea r9, [rsp+0x40]; call qword ptr [rax]; 
0x000000001097c2: push qword ptr [rsp+rbx*8+0x48]; mov ebp, edi; mov rdi, rbp; mov eax, 0x4f; syscall; 
0x00000000053150: push r10; ret; 
0x0000000014ca02: push r12; lea r9, [rsp+0x3a]; call qword ptr [rax]; 
0x00000000149d66: push r12; mov eax, 0x1; ret; 
0x0000000016244b: push r13; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000014ca00: push r13; push r12; lea r9, [rsp+0x3a]; call qword ptr [rax]; 
0x000000000b3781: push r15; str [rcx+0x63]; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000009b928: push r8; add [rbp-0x2d], esi; mov rdi, rsi; call rax; 
0x00000000159d9a: push r8; mov r8, rbx; call qword ptr [rax+0x270]; 
0x0000000014cc6e: push rax; adc [rax-0x75], cl; or [r8-0x77], r9b; out dx, eax; call qword ptr [rax+0x20]; 
0x000000000837ae: push rax; adc [rax-0x77], cl; ret; 
0x0000000014398f: push rax; adc [rbp+0x28840fc0], al; add [rax], eax; add [rcx+rcx*4-0x19], cl; call qword ptr [rbx]; 
0x0000000008fba9: push rax; adc [rbx-0x2fd6efb9], cl; ret; 
0x00000000092135: push rax; add [rax-0x77], ecx; adc eax, 0x151192; ret; 
0x000000000b928e: push rax; add [rax-0x77], ecx; ret; 
0x000000000e83ff: push rax; add [rax-0x7d], ecx; ret; 
0x0000000007be2b: push rax; add [rax], eax; add [rax], al; mov rbx, rsi; jmp rcx; 
0x0000000009b929: push rax; add [rbp-0x2d], esi; mov rdi, rsi; call rax; 
0x00000000137447: push rax; add [rcx+rcx*4-0x40], ecx; mov byte ptr [r8+0x2], 0x0; ret; 
0x000000000ad4ed: push rax; add al, [rax]; add [rbp-0x77], cl; ret far; 
0x000000000a4da6: push rax; add al, bl; nop [rax]; mov [rax], ecx; ret; 
0x000000001628d8: push rax; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000014c33f: push rax; and [rax-0x75], cl; jge short 0x000000000014c345; mov rax, [rdi+0x8]; call qword ptr [rax+0x20]; 
0x000000001416af: push rax; call qword ptr [rax+0x20]; 
0x0000000002ed8b: push rax; call r14; 
0x000000000298ef: push rax; call rbx; 
0x000000001511f8: push rax; cld; mov [rdi+0x18], rax; mov eax, r8d; ret; 
0x0000000009bf2c: push rax; cmpsb [rsi], [rdi]; clc; call far fword ptr [rbx+0x44]; 
0x000000000a4714: push rax; enter 0xffff, 0x89; ret; 
0x00000000072c83: push rax; idiv edi; jmp far fword ptr [rcx]; 
0x0000000010c044: push rax; jmp qword ptr [rsi-0x7d]; 
0x00000000121453: push rax; lock dec dword ptr [rax-0x77]; ret; 
0x0000000014a4f2: push rax; mov [rsi+0x10], rax; ret; 
0x0000000010e144: push rax; mov [rsi+0x50], rcx; xor rax, 0x20; mov [rsi+0x48], rax; ret; 
0x00000000159d9b: push rax; mov r8, rbx; call qword ptr [rax+0x270]; 
0x000000000ff0cb: push rax; mov rax, [rbp-0x1e0]; mov rcx, [r12]; call rax; 
0x00000000159d12: push rax; mov rax, [rip+0x8911e]; mov r8, [rbx+0x10]; call qword ptr [rax+0x270]; 
0x000000000323d2: push rax; mov rax, [rsp+0x10]; call rax; 
0x0000000002da7c: push rax; mov rax, [rsp+0x18]; call rax; 
0x00000000030d2b: push rax; mov rax, [rsp+0x20]; call rax; 
0x0000000014a8a5: push rax; mov rcx, [rsp+0x20]; mov rdi, r15; call rcx; 
0x0000000002fd35: push rax; mov rdi, [rsp+0x48]; mov rax, [rsp+0x28]; call rax; 
0x0000000002d281: push rax; mov rdi, [rsp+0x58]; mov rax, [rsp+0x20]; call rax; 
0x0000000002bfe3: push rax; mov rdi, [rsp+0x58]; mov rax, [rsp+0x28]; call rax; 
0x0000000013fd8a: push rax; mov rdx, [rsp+0xe0]; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; call qword ptr [rsp+0x68]; 
0x000000000cc466: push rax; mov rsi, r15; mov rdi, rbp; call rbx; 
0x00000000125a86: push rax; mov rsi, rdx; call rax; 
0x000000000837f0: push rax; movups [rax], xmm0; ret; 
0x000000000f87a8: push rax; or [rax-0x77], cl; ret; 
0x0000000009d255: push rax; or al, 0x0; lea rdx, [rip+0xca741]; cmovne rax, rdx; ret; 
0x0000000010ddb4: push rax; or eax, 0x64d8f700; mov [rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010dd5c: push rax; or eax, 0x64d8f700; mov [rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000133563: push rax; or eax, [rax]; syscall; 
0x00000000148701: push rax; pop rbx; pop rbp; pop r12; ret; 
0x000000000408f7: push rax; ret; 
0x00000000028cc1: push rax; sbb [rax], al; mov rsi, [rax]; xor eax, eax; call qword ptr [rdx+0x260]; 
0x0000000008fb9a: push rax; sbb [rbx-0x2fd6efb9], cl; ret; 
0x00000000083f45: push rax; sbb [rsi+0x1f], dh; mov rax, [rax+0xe0]; mov esi, 0xffffffff; call qword ptr [rax+0x18]; 
0x00000000085808: push rax; sbb cl, ch; paddw mm7, mm7; call qword ptr [rax-0x76df377d]; 
0x00000000126b89: push rax; shr ax, 0xe; and eax, 0x1; ret; 
0x00000000082d42: push rax; sub [rax-0x78], al; cmp [rcx+rcx*4-0x38], al; ret; 
0x00000000111dc9: push rax; test dword ptr [rax-0xf89fe06], 0xec74203c; mov byte ptr [rsi-0x1], 0x0; mov rax, r8; ret; 
0x0000000015929b: push rax; test rax, rax; je short 0x00000000001592b3; mov rax, [rip+0x89b90]; call qword ptr [rax+0x288]; 
0x0000000010e148: push rax; xor rax, 0x20; mov [rsi+0x48], rax; ret; 
0x000000000f9a7d: push rbp; adc [rax+0x63], cl; ret far; 
0x0000000013c21b: push rbp; adc [rax-0x7d], cl; ret; 
0x00000000047f7e: push rbp; add [rax-0x39], cl; ret; 
0x000000000f9d77: push rbp; add [rcx+0x6c0f66d0], cl; ret; 
0x000000001621fd: push rbp; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000163b37: push rbp; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000547ed: push rbp; call qword ptr [rax+0x48068b48]; 
0x000000000794c3: push rbp; cmp [rax+0x39], cl; ret; 
0x00000000038fa7: push rbp; lahf; sbb al, [rax]; add rax, fs:[0x0]; ret; 
0x0000000010c087: push rbp; loope 0x000000000010c086; dec dword ptr [rax-0x77]; ret; 
0x000000000f08ef: push rbp; mov eax, 0xfffa7be9; jmp qword ptr [rsi+0xf]; 
0x000000000963b8: push rbp; or [rax-0x77], cl; ret; 
0x00000000126036: push rbp; or byte ptr [rcx+rcx*4-0x16], 0xf; adc [rbp-0x78], ebp; call rax; 
0x00000000126398: push rbp; or byte ptr [rcx+rcx*4-0x1e], 0xf; adc [rbp-0x78], ebx; call rax; 
0x0000000012669f: push rbp; or byte ptr [rcx+rcx*4-0x1e], 0xf; adc [rbp-0x78], edi; call rax; 
0x000000001265c8: push rbp; or byte ptr [rcx+rcx*4-0x1e], 0xf; adc [rbp-0x78], esi; call rax; 
0x00000000126098: push rbp; or byte ptr [rcx+rcx*4-0x1e], 0xf; adc [rbp-0x78], esp; call rax; 
0x000000000f59fd: push rbp; or eax, [rax]; movsxd rax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x0000000014ca01: push rbp; push r12; lea r9, [rsp+0x3a]; call qword ptr [rax]; 
0x00000000026627: push rbp; ret far; 
0x00000000078567: push rbp; ret; 
0x000000000b4fd7: push rbp; str [r11+0x63]; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b3950: push rbp; str [rbx+0x63]; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000124792: push rbp; sub [rax-0x77], cl; ret; 
0x0000000005f804: push rbp; sub dh, al; add [rip-0x13317], ch; jmp qword ptr [rsi-0x70]; 
0x0000000005db64: push rbp; sub dh, al; add [rip-0x4e117], ch; jmp qword ptr [rsi-0x70]; 
0x0000000005e4e4: push rbp; sub dh, al; add [rip-0x6ea17], ch; jmp qword ptr [rsi-0x70]; 
0x0000000008afea: push rbp; sub rdx, rsi; mov [rsp], rcx; mov rdi, rbp; call rax; 
0x00000000034853: push rbx; adc al, [rax]; mov qword ptr [rbx+0x10], 0x0; pop rbx; ret; 
0x0000000003616d: push rbx; add [rax-0x7d], ecx; ret; 
0x000000000e6f5d: push rbx; add [rcx-0x7f], ecx; ret; 
0x0000000010712d: push rbx; add al, 0xeb; ret; 
0x000000000e5f22: push rbx; add cl, [rax-0x7d]; ret; 
0x00000000162610: push rbx; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000fd492: push rbx; add rsp, 0x38; ret; 
0x00000000189f79: push rbx; jb short 0x0000000000189f81; movzx ecx, byte ptr [rsi]; mov [rdi], cl; ret; 
0x00000000083e5f: push rbx; je short 0x0000000000083ebd; pop rbp; pop r12; ret; 
0x000000000cb5fc: push rbx; lea rax, [rdi-0x10]; ret; 
0x0000000014cf89: push rbx; mov edi, 0xc1480009; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x0000000011900f: push rbx; mov rbx, rdi; mov rdi, rcx; sub rsp, 0x8; call rsi; 
0x000000001157dc: push rbx; mov rdi, rbp; xor edx, edx; mov esi, 0x1; call r12; 
0x0000000008537e: push rbx; mov rdi, rbx; sub rdx, rsi; call qword ptr [rax+0x70]; 
0x0000000008d134: push rbx; mov rdi, rbx; sub rdx, rsi; call qword ptr [rbp+0x70]; 
0x000000000b5bc2: push rbx; movq [rdi+0x30], mm7; lea rax, [rdi+0x40]; ret; 
0x000000000b4372: push rbx; movq [rdi+0x30], mm7; ret; 
0x000000000b7622: push rbx; movq [rdi+0x30], mm7; xor ch, ch; mov [rdi+0x40], ch; ret; 
0x00000000089ac2: push rbx; or [rax-0x75], cl; xor ecx, [rax-0x7d]; ret; 
0x000000000e41e9: push rbx; or [rax-0x7d], cl; ret; 
0x000000000e0997: push rbx; pop rax; jne short 0x00000000000e09a0; ret; 
0x00000000053337: push rbx; push 0xffffffffffff7ae9; jmp qword ptr [rsi-0x70]; 
0x0000000010c489: push rbx; sar bh, 0x1; jmp qword ptr [rsp+rax*2-0x77]; 
0x000000001261f1: push rbx; sbb [rax-0x7d], cl; ret; 
0x00000000142331: push rbx; sbb bl, ch; mov edx, 0xfe7416e8; jmp qword ptr [rsi+0xf]; 
0x000000000e0bfa: push rbx; setne al; ret; 
0x000000000e0b33: push rcx; add [rax], al; jne short 0x00000000000e0b40; mov eax, 0x40; ret; 
0x00000000172224: push rcx; add al, bl; nop [rax+rax]; mov [rcx], edx; ret; 
0x0000000016282a: push rcx; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000012763b: push rcx; add eax, [rax+rax]; cmovne rax, rdx; ret; 
0x00000000172263: push rcx; add eax, ebx; nop [rax+rax]; mov [rcx], rdx; ret; 
0x0000000015a4dd: push rcx; add rsp, 0x110; mov eax, r12d; pop r12; ret; 
0x00000000045a18: push rcx; add rsp, 0x18; ret; 
0x0000000018dfa5: push rcx; dec byte ptr [rax-0x77]; ret far; 
0x0000000018975a: push rcx; jl short 0x00000000001897a5; adc [rcx-0x2], esi; vmovups [r9-0x40], zmm15; ret; 
0x00000000189761: push rcx; jl short 0x00000000001897ac; adc [rcx-0x1], edi; ret; 
0x000000001898c1: push rcx; jl short 0x000000000018990c; adc [rcx+0x6], esi; vmovups [r9+0x1c0], zmm15; ret; 
0x000000001898c8: push rcx; jl short 0x0000000000189913; adc [rcx+0x7], edi; ret; 
0x000000000f3782: push rcx; jmp far fword ptr [rcx]; 
0x00000000122e2b: push rcx; lock dec dword ptr [rax-0x77]; ret; 
0x0000000010dcab: push rcx; or eax, 0x64d8f700; mov [rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001125b0: push rcx; or eax, 0xc0894c00; add rsp, 0x8; ret; 
0x0000000013340e: push rcx; or eax, [rax]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000463de: push rcx; ret; 
0x000000000b63af: push rcx; str [rcx+0x63]; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000886ae: push rcx; xor esi, esi; mov rdi, rbp; call qword ptr [r13+0x10]; 
0x000000000b75d3: push rdi; adc [rax-0x12cfdfb1], cl; mov [rdi+0x21], ch; ret; 
0x000000000b74d1: push rdi; adc [rax-0x12cfe7b1], cl; mov [rdi+0x19], ch; ret; 
0x000000000b75b0: push rdi; adc [rax], dh; in eax, dx; mov [rdi+0x20], ch; ret; 
0x000000000b7531: push rdi; adc [rcx-0x12cfe7b1], cl; mov [rdi+0x1c], ch; ret; 
0x000000000b7511: push rdi; adc [rcx-0x12cfe8b1], cl; mov [rdi+0x1b], ch; ret; 
0x000000000b7452: push rdi; adc al, 0x30; in eax, dx; mov [rdi+0x15], ch; ret; 
0x000000000b57f2: push rdi; adc al, 0x48; lea eax, [rdi+0x15]; ret; 
0x00000000033fcd: push rdi; adc al, [rax]; mov rdi, rbx; call r12; 
0x0000000007e7c5: push rdi; add [rax], eax; add [rcx], dh; test byte ptr [rax-0x77], 0xef; call qword ptr [rbx+0x10]; 
0x0000000005511f: push rdi; add [rcx-0x77], ecx; push rsp; ret; 
0x000000000b7288: push rdi; add al, 0x30; in eax, dx; mov [rdi+0x5], ch; ret; 
0x000000000b729a: push rdi; add al, 0x30; in eax, dx; mov [rdi+0x6], ch; ret; 
0x000000000b47ea: push rdi; add al, 0x48; lea eax, [rdi+0x5]; ret; 
0x000000000b563a: push rdi; add al, 0x48; lea eax, [rdi+0x6]; ret; 
0x000000001674b9: push rdi; add al, 0x48; mov [rdi], ecx; ret; 
0x000000000b4194: push rdi; add al, 0xc3; nop [rax+rax]; mov [rdi-0x1], rdx; ret; 
0x00000000051050: push rdi; add al, [rcx-0x77]; ret; 
0x000000000b725a: push rdi; add dh, [rax]; in eax, dx; mov [rdi+0x3], ch; ret; 
0x00000000163935: push rdi; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000019144d: push rdi; add eax, 0x245ae900; clc; jmp qword ptr [rsi+0x2e]; 
0x000000000b489c: push rdi; add eax, 0xc478d48; ret; 
0x0000000016237e: push rdi; add eax, 0xc634f00; mov ecx, [rdi-0x73]; or al, 0xb; notrack jmp r9; 
0x000000000b56fc: push rdi; add eax, 0xd478d48; ret; 
0x000000000b3b3c: push rdi; add eax, 0xde88349; lea rdi, [rdi+0xd]; jne 0x00000000000b4270; ret; 
0x000000000b72b8: push rdi; add esi, [rax]; in eax, dx; mov [rdi+0x7], ch; ret; 
0x0000000017e1d8: push rdi; add rax, 0x20; add rax, rdi; vzeroupper; ret; 
0x0000000009b398: push rdi; add rsp, 0x8; pop rbp; pop r12; ret; 
0x0000000003fb10: push rdi; and [rcx+rcx*4-0x30], cl; ret; 
0x00000000091314: push rdi; and al, 0x90; xor eax, eax; ret; 
0x00000000161288: push rdi; clc; ret; 
0x00000000161400: push rdi; cld; ret; 
0x00000000161f27: push rdi; cli; mov [rdi-0x4], ecx; ret; 
0x00000000166d99: push rdi; cmc; mov [rdi-0x4], ecx; ret; 
0x000000000b3de0: push rdi; cmovns eax, [rbx-0x72b7e018]; jg short 0x00000000000b3e09; jne 0x00000000000b4270; ret; 
0x000000000e0ce4: push rdi; hlt; dec dword ptr [rax-0x77]; ret; 
0x00000000166d19: push rdi; hlt; mov [rdi-0x4], ecx; ret; 
0x000000000b41a2: push rdi; inc ebx; nop [rax+rax]; mov [rdi], rdx; ret; 
0x00000000028c2d: push rdi; mov [0x7c8b24348b48001b], al; and al, 0xc; mov rdx, [rax]; call rbp; 
0x0000000008de54: push rdi; mov [rdi+0x18], rax; mov [rdi+0x8], rax; ret; 
0x00000000166bfa: push rdi; mov [rdi-0x8], rcx; ret; 
0x000000000373f8: push rdi; mov dword ptr [rax-0x20], 0x850fffff; ret far; 
0x0000000014b762: push rdi; or [rax-0x77], cl; add al, 0x24; call qword ptr [rdx+0x20]; 
0x000000000b72da: push rdi; or [rax], dh; in eax, dx; mov [rdi+0x9], ch; ret; 
0x000000000b72fc: push rdi; or [rax], dh; in eax, dx; mov [rdi+0xa], ch; ret; 
0x000000000b733a: push rdi; or [rax], dh; in eax, dx; mov [rdi+0xc], ch; ret; 
0x00000000053c61: push rdi; or [rcx-0x2feeb728], cl; pop rbp; pop rbx; ret; 
0x0000000008a484: push rdi; or [rdi], cl; mov dh, 0x0; ret; 
0x0000000013625f: push rdi; or al, 0x48; mov [rsi], edi; ret; 
0x000000000b4a80: push rdi; or eax, 0x1c478d48; ret; 
0x000000000b58f0: push rdi; or eax, 0x1d478d48; ret; 
0x000000000b3d80: push rdi; or eax, 0x1de88349; lea rdi, [rdi+0x1d]; jne 0x00000000000b4270; ret; 
0x0000000010d694: push rdi; or eax, 0x64d8f700; mov [rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000132e73: push rdi; or eax, [rax]; syscall; 
0x0000000014834d: push rdi; or ecx, [rdx]; add [rax-0x77], cl; in eax, 0x89; ret; 
0x00000000139a25: push rdi; ret far; 
0x000000000deb0b: push rdi; ret; 
0x0000000008de85: push rdi; sbb [rax-0x77], cl; movups [rdi+0x8], xmm0; ret; 
0x000000001512be: push rdi; sbb [rcx+rcx*4-0x40], al; ret; 
0x0000000008f8d0: push rdi; sbb cl, ch; imul edi, 0xffffffff; jmp qword ptr [rsi+0xf]; 
0x00000000162127: push rdi; stc; mov [rdi-0x4], ecx; ret; 
0x0000000016194a: push rdi; std; mov [rdi-0x2], cx; ret; 
0x00000000161d27: push rdi; sti; mov [rdi-0x4], ecx; ret; 
0x000000000b372b: push rdi; str [rcx+0x63]; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000001515b5: push rdi; sub [rax+0x1], bh; ret; 
0x0000000015138b: push rdi; sub [rdi], cl; adc [rdi+0x18], eax; ret; 
0x00000000085b99: push rdi; sub rdx, rsi; mov [rsp+0x8], rcx; mov rdi, r15; call rax; 
0x000000000e2d80: push rdi; test [rbx+rdi*8-0x1], ecx; call qword ptr [rax]; 
0x000000000b7590: push rdi; wrmsr; in eax, dx; mov [rdi+0x1f], ch; ret; 
0x000000000f8a5a: push rdi; xor [rax+0x63], cl; adc al, 0x96; add rdx, rsi; notrack jmp rdx; 
0x000000000adceb: push rdi; xor [rsi+0xf], ah; outsd dx, [rsi]; ret; 
0x000000000a8448: push rdi; xor eax, eax; ret; 
0x00000000166c8a: push rdi; xrelease mov [rdi-0x8], rcx; ret; 
0x0000000014ca24: push rdx; adc [rcx-0x75], cl; or [r9+r9*4-0x1], r9b; call qword ptr [rax+0x20]; 
0x000000001582fa: push rdx; adc al, 0xfd; jmp qword ptr [rsi-0x70]; 
0x0000000008ff1a: push rdx; adc eax, 0x1f88300; jg short 0x000000000008ff24; ret; 
0x00000000162739: push rdx; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000db300: push rdx; add rsp, 0x38; ret; 
0x000000000e0b65: push rdx; mov edx, 0x40; mov eax, 0x20; cmove rax, rdx; ret; 
0x000000000e0b63: push rdx; mov edx, 0x40; mov eax, 0x20; cmove rax, rdx; ret; 
0x000000000daee4: push rdx; mov r9, [rsp+0x20]; mov rdx, [rsp+0x28]; mov rax, [rsp+0x18]; call rax; 
0x000000001291ba: push rdx; or al, 0xf9; jmp qword ptr [rsi-0x70]; 
0x0000000011409d: push rdx; or eax, 0x415d5900; pop rsp; pop r13; ret; 
0x00000000112580: push rdx; or eax, 0xc0894c00; ret; 
0x00000000053151: push rdx; ret; 
0x0000000012e502: push rdx; sahf; or eax, [rax]; syscall; 
0x0000000015fe79: push rdx; sar byte ptr [rsi], 0x41; jmp rcx; 
0x000000000f08eb: push rdx; sbb [rax+0x9], cl; push rbp; mov eax, 0xfffa7be9; jmp qword ptr [rsi+0xf]; 
0x0000000007bdfc: push rsi; adc [rcx-0x41f0b7fa], cl; add cl, [rax-0x7b]; ror byte ptr [rdi], 0x88; ret; 
0x000000000b3407: push rsi; adc bl, dh; movq [rdi], mm0; movdqu [rdi+0x10], xmm2; ret; 
0x00000000107da1: push rsi; adc byte ptr [rsi-0x80000000], 0x48; lea eax, [rip-0xc0]; cmove rax, rdx; ret; 
0x000000001677c1: push rsi; add [rbx+0x157890e], ecx; mov [rdi], ecx; ret; 
0x0000000005579f: push rsi; add [rcx-0x77], ecx; push rsp; ret; 
0x00000000189dad: push rsi; add ah, [rdx-0xf]; jl short 0x0000000000189dfb; adc [rsi+0x3], edx; ret; 
0x000000000b7254: push rsi; add ah, [rsi-0x77]; js 0xffffffffed3b74b5; mov [rdi+0x3], ch; ret; 
0x000000000b7283: push rsi; add al, 0x89; js 0xffffffffed3b76e3; mov [rdi+0x5], ch; ret; 
0x000000000b7294: push rsi; add al, 0x89; pcmpgtd mm1, [rcx-0x12cffba9]; mov [rdi+0x6], ch; ret; 
0x00000000167751: push rsi; add cl, [rbx+0x257890e]; mov [rdi], ecx; ret; 
0x00000000040cd1: push rsi; add eax, 0x175a59; mulss xmm0, [rip+0x1766f9]; ret; 
0x00000000040cac: push rsi; add eax, 0x175a8e; mulss xmm0, [rip+0x176722]; ret; 
0x00000000167442: push rsi; add eax, 0x480e8b48; mov [rdi+0x5], edx; mov [rdi], rcx; ret; 
0x000000000b4895: push rsi; add eax, 0x480f8948; mov [rdi+0x5], edx; lea rax, [rdi+0xc]; ret; 
0x000000000b56f5: push rsi; add eax, 0x480f8948; mov [rdi+0x5], edx; lea rax, [rdi+0xd]; ret; 
0x000000000b3215: push rsi; add eax, 0x480f8948; mov [rdi+0x5], edx; ret; 
0x00000000189e43: push rsi; add eax, 0x487cf162; adc [rsi+0x6], edx; vmovups [rsi+0x1c0], zmm2; ret; 
0x000000001676e1: push rsi; add ecx, [rbx+0x357890e]; mov [rdi], ecx; ret; 
0x000000000b4803: push rsi; add ecx, [rcx+0x357890f]; lea rax, [rdi+0x6]; ret; 
0x000000000b5653: push rsi; add ecx, [rcx+0x357890f]; lea rax, [rdi+0x7]; ret; 
0x000000000b31b3: push rsi; add ecx, [rcx+0x357890f]; ret; 
0x000000000b72b3: push rsi; add ecx, [rcx+0x357890f]; xor ch, ch; mov [rdi+0x7], ch; ret; 
0x00000000137afa: push rsi; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x00000000072b9e: push rsi; call qword ptr [rbx]; 
0x00000000161396: push rsi; clc; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x000000001613b2: push rsi; clc; mov [rdi-0x8], rdx; ret; 
0x00000000161d06: push rsi; clc; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000161f06: push rsi; clc; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000162106: push rsi; clc; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000161b21: push rsi; cld; mov [rdi-0x4], edx; ret; 
0x00000000161575: push rsi; cld; mov [rdi-0x9], rcx; mov [rdi-0x4], edx; ret; 
0x00000000161755: push rsi; cld; mov [rdi-0xa], rcx; mov [rdi-0x4], edx; ret; 
0x00000000161935: push rsi; cld; mov [rdi-0xb], rcx; mov [rdi-0x4], edx; ret; 
0x00000000161b15: push rsi; cld; mov [rdi-0xc], rcx; mov [rdi-0x4], edx; ret; 
0x0000000018bb86: push rsi; cmc; sub eax, edx; ret; 
0x00000000080e66: push rsi; cmp [rax+0x39], cl; ret; 
0x0000000007a1f6: push rsi; fdiv st(7), st; jmp qword ptr [rsi+0xf]; 
0x0000000018bb76: push rsi; hlt; sub eax, edx; ret; 
0x00000000125a66: push rsi; je short 0x0000000000125a70; mov eax, 0x7; ret; 
0x00000000187c79: push rsi; jmp far fword ptr [rcx]; 
0x0000000002aa06: push rsi; lodsb [rsi]; sbb eax, [rax]; syscall; 
0x00000000189c96: push rsi; loopne 0x0000000000189c5c; vmovdqu [rdi], xmm0; vmovdqu [rsi-0x10], xmm0; ret; 
0x00000000166c82: push rsi; mov rcx, [rsi-0x8]; mov [rdi-0xd], rdx; mov [rdi-0x8], rcx; ret; 
0x00000000166bf2: push rsi; mov rcx, [rsi-0x8]; mov [rdi-0xe], rdx; mov [rdi-0x8], rcx; ret; 
0x000000000faacf: push rsi; or [rax+0x63], cl; ret; 
0x000000000b7334: push rsi; or [rax-0x77], cl; jns 0xffffffffed3b7b95; mov [rdi+0xc], ch; ret; 
0x000000000b72d4: push rsi; or [rax-0x77], cl; js 0xffffffffed3b7b35; mov [rdi+0x9], ch; ret; 
0x000000000b72f5: push rsi; or [rax-0x77], cl; pcmpgtd mm1, [rcx-0x12cff7a9]; mov [rdi+0xa], ch; ret; 
0x000000000fa9c9: push rsi; or [rcx-0x75], cl; adc [rax+0x63], r9b; ret; 
0x00000000040968: push rsi; or eax, 0x175d92; mulsd xmm0, xmm1; ret; 
0x00000000040942: push rsi; or eax, 0x175dc8; mulsd xmm0, xmm1; ret; 
0x000000000b4a77: push rsi; or eax, 0x77f0ff3; movdqu [rdi+0xd], xmm2; lea rax, [rdi+0x1c]; ret; 
0x000000000b58e7: push rsi; or eax, 0x77f0ff3; movdqu [rdi+0xd], xmm2; lea rax, [rdi+0x1d]; ret; 
0x000000000b33a7: push rsi; or eax, 0x77f0ff3; movdqu [rdi+0xd], xmm2; ret; 
0x000000000b33e7: push rsi; psllq mm1, [rdi]; jg short 0x00000000000b33f4; movdqu [rdi+0xf], xmm2; ret; 
0x000000000b40d7: push rsi; psllq mm1, [rdi]; jg short 0x00000000000b40e4; movdqu [rdi+0xf], xmm2; ret; 
0x000000000b66f7: push rsi; psllq mm1, [rdi]; jg short 0x00000000000b6704; movdqu [rdi+0xf], xmm2; ret; 
0x000000000b71e7: push rsi; psllq mm1, [rdi]; jg short 0x00000000000b71f4; movdqu [rdi+0xf], xmm2; ret; 
0x0000000003143c: push rsi; ret far; 
0x00000000040ba3: push rsi; ret; 
0x0000000010b563: push rsi; ret; 
0x00000000189c45: push rsi; std; vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x000000000b3887: push rsi; str [rbx+0x63]; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b3926: push rsi; str [rbx+0x63]; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b3854: push rsi; str [rcx+0x63]; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000072900: push rsi; sub dh, al; add [rcx-0x7d], cl; ret; 
0x0000000018bb56: push rsi; sub eax, edx; ret; 
0x0000000018bb66: push rsi; sub eax, edx; ret; 
0x000000000e2403: push rsi; test [rbx+rdi*8-0x1], ecx; call qword ptr [rax]; 
0x00000000166e92: push rsi; test dword ptr [rbx-0x76b703b2], 0x4f89f757; cld; ret; 
0x0000000010d4bb: push rsi; xor ax, ax; ret; 
0x0000000010f4f8: push rsp; adc eax, 0x8b48fff8; add al, 0x24; add rsp, 0x28; ret; 
0x000000000749b3: push rsp; add [rax], al; add [rax], al; mov byte ptr [rsp+0x38], 0x20; jmp rsi; 
0x0000000010ead7: push rsp; add [rax], al; mov eax, 0x10; syscall; 
0x0000000010e851: push rsp; add [rax], al; mov eax, r8d; mov ebx, fs:[r10]; syscall; 
0x0000000010eb08: push rsp; add [rax], al; mov r8d, eax; mov eax, 0x10; syscall; 
0x00000000076233: push rsp; add [rax], eax; add [rax], al; mov rbx, rdi; jmp rsi; 
0x000000000fa320: push rsp; add al, [rax]; add [rbx+0x634c01c3], al; ret; 
0x000000001622d7: push rsp; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000040cca: push rsp; add eax, 0x175a50; orps xmm0, [rip+0x175a59]; mulss xmm0, [rip+0x1766f9]; ret; 
0x00000000040ca5: push rsp; add eax, 0x175a75; orps xmm0, [rip+0x175a8e]; mulss xmm0, [rip+0x176722]; ret; 
0x000000000407d6: push rsp; add eax, 0x175f14; andpd xmm1, [rip+0x175efc]; orpd xmm0, xmm1; ret; 
0x00000000159c8c: push rsp; add rsp, 0x38; ret; 
0x000000000a4d7a: push rsp; and al, 0x10; mov [rax], rdx; ret; 
0x000000000a4e32: push rsp; and al, 0x10; mov [rdi], rdx; lea rax, [rdi+rax-0x1]; ret; 
0x000000000de73f: push rsp; and al, 0x10; mov eax, 0xf7; syscall; 
0x0000000011a5a8: push rsp; and al, 0x10; mov rsi, [rsp+0x8]; syscall; 
0x0000000012181d: push rsp; and al, 0x10; xor esi, esi; mov edi, 0x2000004; call rax; 
0x0000000010f4d9: push rsp; and al, 0x14; mov rsi, [rsp+0x8]; mov eax, 0x127; syscall; 
0x0000000010f599: push rsp; and al, 0x14; mov rsi, [rsp+0x8]; mov eax, 0x128; syscall; 
0x000000000a4d34: push rsp; and al, 0x16; mov [rdi+0x6], dl; ret; 
0x000000000a4ca2: push rsp; and al, 0x18; mov [rdi], rdx; add rax, rdi; ret; 
0x0000000014b652: push rsp; and al, 0x18; mov esi, 0x6; call qword ptr [rax+0x28]; 
0x0000000014b619: push rsp; and al, 0x18; mov esi, 0x6; mov rax, [rdi+0x8]; call qword ptr [rax+0x28]; 
0x00000000141aca: push rsp; and al, 0x18; mov rsi, [rsp+0x10]; call qword ptr [rax]; 
0x000000000de73a: push rsp; and al, 0x1c; mov rdx, [rsp+0x10]; mov eax, 0xf7; syscall; 
0x0000000014732b: push rsp; and al, 0x20; mov rdi, r12; call rdx; 
0x000000000daeec: push rsp; and al, 0x28; mov rax, [rsp+0x18]; call rax; 
0x0000000010e7b6: push rsp; and al, 0x30; mov eax, 0x10; syscall; 
0x00000000129f37: push rsp; and al, 0x38; call qword ptr [rsp+0x60]; 
0x0000000014d62c: push rsp; and al, 0x38; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x000000000dac2f: push rsp; and al, 0x68; mov rdi, r15; mov rsi, [rsp+0x60]; call r12; 
0x0000000014864f: push rsp; and al, 0x70; call qword ptr [rax+0x30]; 
0x0000000014fbaa: push rsp; and al, 0x8; call qword ptr [rax+0x8]; 
0x0000000011920b: push rsp; and al, 0x8; mov eax, 0x38; syscall; 
0x0000000010e35a: push rsp; and al, 0x8; mov esi, 0x10; mov eax, 0x48; syscall; 
0x0000000008b96c: push rsp; and al, 0x8; mov rsi, r13; mov rdi, rbx; call qword ptr [rbp+0x70]; 
0x000000000a4d13: push rsp; and al, 0xc; mov [rdi+0x4], dx; ret; 
0x0000000014b6d6: push rsp; and al, 0xc; mov esi, 0xd; call qword ptr [rax+0x28]; 
0x000000000a4df1: push rsp; and al, 0xe; mov [rax+0x6], dl; ret; 
0x000000000a4ed6: push rsp; and al, 0xe; mov [rdi+0x6], dl; ret; 
0x000000000a4dd8: push rsp; and al, 0xec; mov [rax+0x4], dx; ret; 
0x000000000a4eb5: push rsp; and al, 0xec; mov [rdi+0x4], dx; ret; 
0x000000000a4dc0: push rsp; and al, 0xf4; mov [rax+0x4], dl; ret; 
0x000000000a4cfb: push rsp; and al, 0xf4; mov [rdi+0x4], dl; ret; 
0x000000000a4da2: push rsp; and al, 0xfa; mov [rax+0x2], dl; ret; 
0x000000000a4cdd: push rsp; and al, 0xfa; mov [rdi+0x2], dl; ret; 
0x0000000017d847: push rsp; cmp ah, [rax]; sub eax, edx; vzeroupper; ret; 
0x0000000014ca03: push rsp; lea r9, [rsp+0x3a]; call qword ptr [rax]; 
0x000000000a898b: push rsp; lea rax, [rdi+rax+0x10]; ret; 
0x00000000149d67: push rsp; mov eax, 0x1; ret; 
0x000000000e0a23: push rsp; mov eax, 0x7f; mov edx, 0x7d00; cmove rax, rdx; ret; 
0x0000000003fb0b: push rsp; or dword ptr [rax], 0x2057034c; mov rax, r10; ret; 
0x000000000407de: push rsp; or eax, 0x175efc; orpd xmm0, xmm1; ret; 
0x0000000017c529: push rsp; or eax, 0x894d0000; ret far; 
0x000000001122c8: push rsp; or eax, 0xff854800; jne short 0x00000000001122e0; mov eax, 0x1; ret; 
0x000000000e7be8: push rsp; out 0xf3, eax; call far fword ptr [rsi-0x75]; 
0x000000000e0bf8: push rsp; push rbx; setne al; ret; 
0x0000000009a360: push rsp; ret far; 
0x00000000040b9d: push rsp; ret; 
0x000000000f50ba: push rsp; xchg ebp, eax; add [rcx+rax-0x16], cl; notrack jmp rdx; 
0x000000000dd843: pushfq; adc [rax], al; syscall; 
0x0000000003db88: pushfq; add [rax], al; add [rbx-0x7bf0fe08], al; ret far; 
0x000000000e744f: pushfq; and al, 0x90; add [rax], al; add [rax-0x77], cl; ret far; 
0x0000000013325a: pushfq; and al, 0xa8; add [rax], al; add cl, ch; ret; 
0x0000000014feb0: pushfq; cwde; std; jmp qword ptr [rsi+0x66]; 
0x000000000dd018: pushfq; mov [0xffff33e9050f0010], eax; jmp qword ptr [rbp+rax*2-0x75]; 
0x0000000005e9cb: pushfq; mov byte ptr [rcx+0xf], 0x9c; ret; 
0x00000000045b9c: pushfq; nop [rax]; mov eax, 0xffffffff; ret; 
0x0000000012e6c7: pushfq; or eax, [rax]; syscall; 
0x0000000013c69a: pushfq; out dx, al; jmp qword ptr [rbp+rax*2-0x77]; 
0x0000000005e9cf: pushfq; ret; 
0x0000000018582d: pushfq; shl bh, 0xd8; or eax, 0x1; vzeroupper; ret; 
0x000000000faf61: pxor mm0, mm0; and byte ptr [rdi+0x38], 0xf9; mov dword ptr [rsi], 0x0; movups [rsi+0x8], xmm0; ret; 
0x0000000013c99c: pxor mm0, mm0; mov qword ptr [rax+0x10], 0x0; movups [rax], xmm0; add rsp, 0x8; ret; 
0x000000000845de: pxor mm0, mm0; mov qword ptr [rax+0x50], 0x0; movups [rax+0x40], xmm0; pop rbx; ret; 
0x0000000008df4a: pxor mm0, mm0; mov qword ptr [rbx+0x58], 0x0; movups [rbx+0x48], xmm0; pop rbx; ret; 
0x0000000015177f: pxor mm0, mm0; movaps [rsp+0x60], xmm1; movups [rsp+0x18], xmm0; call r8; 
0x0000000008fc76: pxor mm0, mm0; movups [rbx+0x48], xmm0; pop rbx; ret; 
0x00000000111cb1: pxor mm0, mm0; movups [rdi], xmm0; ret; 
0x0000000012910d: pxor mm7, mm7; jmp qword ptr [rsi+0x2e]; 
0x000000000faf60: pxor xmm0, xmm0; and byte ptr [rdi+0x38], 0xf9; mov dword ptr [rsi], 0x0; movups [rsi+0x8], xmm0; ret; 
0x0000000013c99b: pxor xmm0, xmm0; mov qword ptr [rax+0x10], 0x0; movups [rax], xmm0; add rsp, 0x8; ret; 
0x000000000845dd: pxor xmm0, xmm0; mov qword ptr [rax+0x50], 0x0; movups [rax+0x40], xmm0; pop rbx; ret; 
0x0000000008df49: pxor xmm0, xmm0; mov qword ptr [rbx+0x58], 0x0; movups [rbx+0x48], xmm0; pop rbx; ret; 
0x0000000015177e: pxor xmm0, xmm0; movaps [rsp+0x60], xmm1; movups [rsp+0x18], xmm0; call r8; 
0x0000000008fc75: pxor xmm0, xmm0; movups [rbx+0x48], xmm0; pop rbx; ret; 
0x00000000111cb0: pxor xmm0, xmm0; movups [rdi], xmm0; ret; 
0x000000000ac26d: rcl byte ptr [rax+rax], 0x1; add [rbp-0x77], cl; ret far; 
0x00000000096ac7: rcl byte ptr [rax+rax], 0x1; syscall; 
0x0000000017d316: rcl byte ptr [rax], 0x29; cmp edx, ecx; jle short 0x000000000017d334; movsxd rax, ecx; ret; 
0x000000000b5b5e: rcl byte ptr [rax], 0x4c; lea ebx, [rip+0xf3659]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b430e: rcl byte ptr [rax], 0x4c; lea ebx, [rip+0xf4cc9]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000fb15a: rcl byte ptr [rax], cl; cli; jmp qword ptr [rsi-0x70]; 
0x000000001621fc: rcl byte ptr [rbp+0x5], 0x1; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000d0a62: rcl byte ptr [rbx-0x3e6db6dc], cl; call far fword ptr [rdi]; 
0x000000000284ad: rcl byte ptr [rcx], 0x48; mov [rip+0x1be192], eax; ret; 
0x0000000002d279: rcl byte ptr [rsi+0x6a], 0x0; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; mov rax, [rsp+0x20]; call rax; 
0x00000000096866: rcl dword ptr [rax+rax], cl; syscall; 
0x00000000096867: rcl dword ptr [rax+rax], cl; syscall; 
0x0000000011a9cb: rcl esi, 0xfe; jmp qword ptr [rsp+rax*2-0x77]; 
0x000000000f7a98: rcr ah, 0xff; jmp qword ptr [rsi+0xf]; 
0x0000000004055f: rcr bl, 0x3f; fld st, tbyte ptr [rsp+0x8]; fsubrp; ret; 
0x0000000016d29d: rcr byte ptr [rax], 0x0; add [rbp-0x77], cl; ret far; 
0x0000000008bae2: rcr byte ptr [rbp+0x41], 0x1; pop rsp; ret; 
0x000000000979a2: rcr byte ptr [rbp+0x41], 0x5c; mov rax, r8; pop r13; ret; 
0x00000000150721: rcr byte ptr [rbp+0x41], 0x5c; pop r13; pop r14; jmp rcx; 
0x0000000002ac38: rcr byte ptr [rbp+0x41], 0x5c; pop r13; pop r14; ret; 
0x00000000136582: rcr byte ptr [rbp+0x41], 0x5c; pop r13; ret; 
0x00000000034187: rcr byte ptr [rbp+0x41], 0x5c; ret; 
0x0000000008130a: rcr byte ptr [rbp+0x41], cl; pop rsp; pop r13; jmp rax; 
0x00000000053c67: rcr byte ptr [rbp+0x5b], 0x1; ret; 
0x0000000012f5f9: rcr byte ptr [rbp-0x3a], 0x1; add [rcx+0x5c], al; pop r13; ret; 
0x0000000009a020: rcr byte ptr [rbx+0x41], 0x5c; ret; 
0x0000000013657e: rcr byte ptr [rbx+0x4c], 0x89; rcr byte ptr [rbp+0x41], 0x5c; pop r13; ret; 
0x00000000143f49: rcr byte ptr [rbx+0x5d], 0x1; mov eax, r8d; ret; 
0x000000000c5fc2: rcr byte ptr [rbx+0x5d], 0x1; pop r12; pop r13; ret; 
0x0000000009d910: rcr byte ptr [rbx+0x5d], 0x1; pop r12; ret; 
0x0000000005954b: rcr byte ptr [rbx+0x5d], 0x1; ret; 
0x000000000e8215: rcr byte ptr [rbx+0x5d], 0x41; pop rbp; ret; 
0x00000000081778: rcr byte ptr [rbx+0x5d], 0x41; pop rsp; pop r13; pop r14; ret; 
0x000000000447b1: rcr byte ptr [rbx+0x5d], 0x41; pop rsp; pop r13; ret; 
0x0000000003d7d2: rcr byte ptr [rbx+0x5d], 0x41; pop rsp; ret; 
0x0000000003d814: rcr byte ptr [rbx+0x5d], 0x4c; mov eax, eax; pop r12; ret; 
0x00000000144987: rcr byte ptr [rbx+0x5d], 0xf; mov dh, 0xc0; pop r12; ret; 
0x000000000b8562: rcr byte ptr [rbx-0x3d], 0x1; mov eax, 0x60; pop rbx; ret; 
0x000000000c2d35: rcr byte ptr [rbx-0x3d], 0x45; xor eax, eax; mov eax, r8d; ret; 
0x00000000090d9d: rcr byte ptr [rbx-0x3d], 0x48; mov eax, [rip+0x1520a1]; pop rbx; mov eax, fs:[rax]; ret; 
0x000000001146e8: rcr byte ptr [rbx-0x3d], 0x48; mov eax, [rip+0xce756]; mov dword ptr fs:[rax], 0x16; xor eax, eax; ret; 
0x00000000090d53: rcr byte ptr [rbx-0x3d], 0x66; nop [rax+rax]; xor eax, eax; ret; 
0x0000000008a50f: rcr byte ptr [rbx-0x9], 0xd8; ret; 
0x000000000abb7d: rcr byte ptr [rbx], 0x0; add [rbp-0x77], cl; ret far; 
0x00000000183dce: rcr byte ptr [rdi+0x49], 0x29; ror byte ptr [rax-0x73], 0x1; jl short 0x0000000000183dee; and ecx, ebp; ret; 
0x00000000038438: rcr byte ptr [rdx], cl; add [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x00000000110d7c: rcr dword ptr [rbx+0x31], cl; rcr byte ptr [rbp+0x41], 0x5c; ret; 
0x000000000955a2: rcr dword ptr [rbx+0x48], 0x3d; jmp far fword ptr [rcx]; 
0x0000000012312e: rcr dword ptr [rbx+0x5d], 0x1; pop r12; pop r13; pop r14; ret; 
0x00000000053c95: rcr dword ptr [rcx], 0xc0; and eax, 0x2; sub eax, 0x1; ret; 
0x00000000034abb: rcr dword ptr [rcx], 0xff; jmp qword ptr [rax+rcx*2-0x75]; 
0x0000000003a594: rcr dword ptr [rdx], 0x0; lea rdi, [rip+0x1ab122]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003a664: rcr dword ptr [rdx], 0x0; lea rdi, [rip+0x1ab2d2]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003a5bb: rcr dword ptr [rdx], 0x0; lea rdi, [rip+0x1ab2fb]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003a61e: rcr dword ptr [rdx], 0x0; lea rdi, [rip+0x1ab317]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000038588: rcr dword ptr [rdx], 0x1; add [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x0000000003839c: rcr dword ptr [rdx], cl; add [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x000000000d8f83: rcr dword ptr [rsi-0x2708fff0], 0x64; mov [rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000795bb: rcr edx, 0x13; add cl, ch; mov eax, [0x2949e8894dfffffe]; ror byte ptr [rbp+0xf], 0x48; ret; 
0x000000001199cb: rdpkru; lea ecx, [rdi+rdi]; shr eax, cl; and eax, 0x3; ret; 
0x000000001414e8: rdtsc; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x5d], bl; ret; 
0x000000000b7e5d: rep movsb [rdi], [rsi]; cld; ret; 
0x000000000b7e4f: rep movsb [rdi], [rsi]; ret; 
0x00000000159138: rep movsq [rdi], [rsi]; ret; 
0x000000000b7b60: rep ret; 
0x000000000b8257: rep stosb [rdi]; mov rax, rdx; ret; 
0x00000000137442: rep stosq [rdi]; mov [r8+0x1], dl; mov rax, r8; mov byte ptr [r8+0x2], 0x0; ret; 
0x00000000095e44: rep stosq [rdi]; pop rbp; ret; 
0x000000001071df: rep stosq [rdi]; ret; 
0x0000000013dca1: repe scasb [rdi]; or al, [rax]; syscall; 
0x0000000012b4e5: ret far; 
0x00000000026607: ret far; 
0x00000000116341: ret far; 
0x00000000116332: ret far; 
0x000000000264d8: ret far; 
0x00000000136263: ret; 
0x000000000f21a6: ret; 
0x00000000026699: ret; 
0x000000000717ba: ret; 
0x00000000105856: ret; 
0x00000000142bb0: rol ax, 0x8; mov rdi, r15; mov [rsp+0x192], ax; mov rax, [rsp+0x30]; call rax; 
0x000000001297b6: rol ax, 0x8; ret; 
0x00000000136256: rol bh, 0x47; or [rcx], ch; add [rax], al; add [rcx-0x76b7f3a9], cl; ret; 
0x0000000008fbaf: rol bl, 0x1; mov eax, 0xffffffff; ret; 
0x000000000b83f4: rol bl, 0x1; nop [rax+rax]; xor edx, edx; mov eax, edx; ret; 
0x00000000139e7f: rol bl, 0x1; nop [rax]; xor r10d, r10d; mov eax, r10d; ret; 
0x0000000007cd6c: rol bl, 0x1; xchg ax, ax; xor eax, eax; ret; 
0x000000000a8bbe: rol bl, 0x1; xor eax, eax; ret; 
0x00000000042317: rol bl, 0x48; mov eax, [rip+0x1a0b28]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000422e1: rol bl, 0x48; mov eax, [rip+0x1a0b5e]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010e6d9: rol bl, 0x48; mov eax, [rip+0xd4766]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010d4be: rol bl, 0x48; mov eax, [rip+0xd5981]; mov dword ptr fs:[rax], 0x16; mov eax, 0x1; ret; 
0x000000000b7885: rol bl, 0x48; mov eax, edi; ret; 
0x0000000008fe15: rol bl, 0x66; nop [rax+rax]; endbr64; mov eax, 0xffffffff; ret; 
0x0000000008fe55: rol bl, 0x66; nop [rax+rax]; endbr64; mov rax, [rdi+0x68]; ret; 
0x00000000141585: rol bl, 0x66; nop [rax+rax]; endbr64; ret; 
0x000000001515d5: rol bl, 0x66; nop [rax+rax]; endbr64; xor eax, eax; ret; 
0x00000000091318: rol bl, 0x66; nop [rax+rax]; endbr64; xor eax, eax; ret; 
0x0000000009b8c4: rol bl, 0x66; nop [rax+rax]; mov eax, 0x1; ret; 
0x00000000084884: rol bl, 0x66; nop [rax+rax]; mov eax, 0xffffffff; ret; 
0x000000000895c4: rol bl, 0x66; nop [rax+rax]; mov r8d, 0x1; mov eax, r8d; ret; 
0x00000000150e78: rol bl, 0x66; nop [rax+rax]; mov rax, [rdi+0x8]; jmp qword ptr [rax+0x40]; 
0x000000000cbb12: rol bl, 0x66; nop [rax+rax]; nop; mov rax, 0x1; ret; 
0x00000000141341: rol bl, 0x66; nop [rax+rax]; xchg ax, ax; endbr64; ret; 
0x000000000a892c: rol bl, 0x66; nop; bsr eax, eax; add rax, rdi; ret; 
0x0000000014fa3d: rol bl, 0x90; cmp eax, 0x1; jne short 0x000000000014fa35; mov rax, [rdi+0x8]; jmp qword ptr [rax]; 
0x0000000009107d: rol bl, 0x90; mov eax, 0x16; ret; 
0x00000000136b67: rol bl, 0xb8; add [rcx], eax; add [rax], al; ret; 
0x00000000040d9e: rol bl, 0xf3; addps xmm0, xmm0; ret; 
0x00000000087136: rol byte ptr [r13+0x31], 0xc0; mov rcx, r14; mov rdi, r15; call r12; 
0x000000000b8041: rol byte ptr [r9+0xf], 0x1; adc [rbx], esp; ret; 
0x000000000b90ac: rol byte ptr [rax*4+0x31ee75d2], 0xc0; ret; 
0x0000000011b349: rol byte ptr [rax+0x1740039], 0xc3; mov rax, [rdi]; mov [rdx], rax; mov eax, 0x1; ret; 
0x000000001822b6: rol byte ptr [rax+0x48], 0x1; clc; sub rax, rdx; vzeroupper; ret; 
0x0000000017e1fb: rol byte ptr [rax+0x48], 0x1; clc; vzeroupper; ret; 
0x000000000ce81d: rol byte ptr [rax+0x49000151], 0x29; fmul st, dword ptr [rbp+0x1]; ret; 
0x000000000ce5ab: rol byte ptr [rax+0x49000151], 0x29; fmul st, dword ptr [rcx+0x118b4f05]; add [rbp+0x1], cl; ret; 
0x0000000004551b: rol byte ptr [rax+0x775003f], 0x5b; ret; 
0x00000000114eaa: rol byte ptr [rax+0xf], cl; lahf; vpand ymm1, ymm15, [rdi]; lahf; ret; 
0x000000000cbb52: rol byte ptr [rax+rax], 0x0; add bl, al; nop [rax+rax]; mov rax, 0x5; ret; 
0x00000000033ba0: rol byte ptr [rax+rcx*2], 0x83; ret; 
0x0000000002e06f: rol byte ptr [rax+rcx*2], 0x89; test [rax+rax*4], ah; add [rax], al; add [rax+0x39], cl; ret; 
0x000000000faf63: rol byte ptr [rax-0x3806c799], 0x6; add [rax], al; add [rax], al; movups [rsi+0x8], xmm0; ret; 
0x000000000387cc: rol byte ptr [rax], 0x0; add [rax-0x75], cl; add eax, 0x1aa5d9; mov [rax], rdx; ret; 
0x000000000fd8c5: rol byte ptr [rax], 0x0; setne al; lea eax, [rax+rax*8+0x5]; ret; 
0x00000000106a38: rol byte ptr [rax], 0x1; add [rax], al; add [rbp-0x76b7febd], cl; ret; 
0x000000000cc8f5: rol byte ptr [rax], 0x1; add [rax], al; lea rdi, [rsp+0xd0]; mov rsi, r13; call r12; 
0x0000000014786e: rol byte ptr [rax], 0x1; add [rax], al; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x000000001470d6: rol byte ptr [rax], 0x1; add [rax], al; mov rsi, [rsp+0x18]; mov rdi, r12; call qword ptr [rax+0x8]; 
0x000000000cc8fd: rol byte ptr [rax], 0x1; add [rax], al; mov rsi, r13; call r12; 
0x00000000041874: rol byte ptr [rax], 0x1; add [rax], al; movaps [rsp+0xe0], xmm0; movaps [rsp+0xf0], xmm0; syscall; 
0x00000000087137: rol byte ptr [rbp+0x31], 0xc0; mov rcx, r14; mov rdi, r15; call r12; 
0x00000000045e90: rol byte ptr [rbp+0x31], 0xc0; punpcklqdq xmm0, xmm1; mov eax, r8d; movups [rdi], xmm0; ret; 
0x0000000017e6f5: rol byte ptr [rbp+0xf8674c0], 0x1; mov ebp, 0xf80148c0; add rax, r8; vzeroupper; ret; 
0x000000000a8a09: rol byte ptr [rbp+0xfd274c0], 0x1; mov ebp, 0xf80148c0; ret; 
0x0000000017e6a7: rol byte ptr [rbp+0xfd474c0], 0x1; mov ebp, 0xf80148c0; vzeroupper; ret; 
0x0000000010e637: rol byte ptr [rbp-0x74f7872e], 0x47; or [rip+0x100f], ah; ret; 
0x000000001904d1: rol byte ptr [rbp-0x7b], 0xc0; jne 0x00000000001903e0; add rsp, 0x38; ret; 
0x0000000017e612: rol byte ptr [rbx+0x14820c0], 0xf8; vzeroupper; ret; 
0x0000000017e622: rol byte ptr [rbx+0x14840c0], 0xf8; vzeroupper; ret; 
0x0000000017e632: rol byte ptr [rbx+0x14860c0], 0xf8; ret; 
0x0000000006253c: rol byte ptr [rbx+0x14], 0x0; movzx eax, al; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000000eab48: rol byte ptr [rbx+0x3d740afb], 0x48; add esp, 0x8; pop rbx; pop rbp; ret; 
0x00000000107c75: rol byte ptr [rbx+0x97404fa], 0xb8; sbb al, 0x0; add [rax], al; syscall; 
0x0000000006104d: rol byte ptr [rbx+0xd74fff8], 0x44; mov eax, eax; ret; 
0x000000000a50d5: rol byte ptr [rbx+0xe7740ff], 0x48; movsxd edi, edi; lea rax, [rip+0x13c9db]; mov rax, [rax+rdi*8]; ret; 
0x000000000a50f5: rol byte ptr [rbx+0xe7740ff], 0x48; movsxd edi, edi; lea rax, [rip+0x13cbdb]; mov rax, [rax+rdi*8]; ret; 
0x0000000007f433: rol byte ptr [rbx+0xf74fff8], 0x1; mov rax, [rsp+0x8]; add rsp, 0x18; ret; 
0x0000000018c066: rol byte ptr [rbx+0xfc3ffd8], 0x1f; add [rax], r8b; xor eax, eax; ret; 
0x00000000053c97: rol byte ptr [rbx-0x177cfd20], 0x1; ret; 
0x00000000110800: rol byte ptr [rbx-0x3f7c0f20], 0x26; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000038d85: rol byte ptr [rbx-0x6bf07f19], 0xc0; ret; 
0x00000000090abf: rol byte ptr [rbx-0x77cf320], 0x4; je short 0x0000000000090a9c; pop rbx; ret; 
0x000000000cbb42: rol byte ptr [rbx], 0x0; add [rax], al; ret; 
0x000000000cbb02: rol byte ptr [rbx], 0xc3; nop [rax+rax]; xor rax, rax; ret; 
0x00000000107d14: rol byte ptr [rcx+0x1], 0xc0; cmp rdi, rsi; ja short 0x0000000000107d08; mov eax, r8d; ret; 
0x000000000c5f55: rol byte ptr [rcx+0x5c], 0x1; pop r13; pop r14; ret; 
0x000000000c5ed2: rol byte ptr [rcx+0x5c], 0x1; ret; 
0x000000001506f3: rol byte ptr [rcx+0x5c], 0x41; pop rbp; pop r14; jmp rcx; 
0x000000000dba17: rol byte ptr [rcx+0x5c], 0x41; pop rbp; pop r14; ret; 
0x0000000009793b: rol byte ptr [rcx+0x5c], 0x41; pop rbp; ret; 
0x00000000126c4f: rol byte ptr [rcx+0x5c], 0x5d; ret; 
0x000000000fd8c1: rol byte ptr [rcx+0xc0fef9], 0x0; setne al; lea eax, [rax+rax*8+0x5]; ret; 
0x000000000b8042: rol byte ptr [rcx+0xf], 0x1; adc [rbx], esp; ret; 
0x0000000007dd2f: rol byte ptr [rcx+0xf], 0x1; data64 ret far; 
0x000000000fa457: rol byte ptr [rcx+0xf], 0x93; ret; 
0x000000001297d8: rol byte ptr [rcx+0xfa], 0x80; cmovne eax, edi; ret; 
0x00000000123297: rol byte ptr [rcx+rbp-0x3e], 0x1; shr ecx, 0x1f; cmp sil, cl; cmove eax, edx; ret; 
0x00000000081d65: rol byte ptr [rcx+rcx*4+0x22], 0x48; add esp, 0x8; pop rbp; pop r12; ret; 
0x00000000139e8a: rol byte ptr [rcx+rcx*4-0x30], cl; ret; 
0x00000000046489: rol byte ptr [rcx+rcx*4-0x38], cl; sub rsi, rdi; syscall; 
0x0000000011998a: rol byte ptr [rcx+rcx*4-0x3e], 0x1; or eax, esi; wrpkru; xor eax, eax; ret; 
0x00000000090a9e: rol byte ptr [rcx+rcx*4-0x3e], cl; mov esi, 0x80; mov eax, r9d; syscall; 
0x000000000ebe18: rol byte ptr [rcx+rcx*4-0x40], 0x5b; pop rbp; ret; 
0x000000000895c1: rol byte ptr [rcx+rcx*4-0x40], 0xc3; nop [rax+rax]; mov r8d, 0x1; mov eax, r8d; ret; 
0x0000000013718a: rol byte ptr [rcx+rcx*4-0x40], cl; mov byte ptr [rdi+rdx], 0x0; ret; 
0x00000000151276: rol byte ptr [rcx+rcx*4], 0x50; cld; mov [rdi+0x18], rax; mov eax, r8d; ret; 
0x000000000ba435: rol byte ptr [rcx+rdi], 0xf2; je short 0x00000000000ba43f; test edx, edx; jne short 0x00000000000ba430; ret; 
0x0000000007c7ac: rol byte ptr [rcx-0x33333307], 0x1; or al, 0x7f; and ecx, [rbp-0x76bb76f4]; ret; 
0x00000000139f25: rol byte ptr [rcx-0x3a], 0x1; add [rax], al; ret; 
0x0000000013744b: rol byte ptr [rcx-0x3a], 0x40; add al, [rax]; ret; 
0x000000000426b4: rol byte ptr [rcx-0x46], 0x8; add [rax], al; add [rax+0x80], bh; syscall; 
0x000000000d0274: rol byte ptr [rcx-0x5c28f401], 0x0; setb al; add eax, 0x16d; ret; 
0x000000000fa714: rol byte ptr [rcx-0x77], 0x14; and al, 0x89; shl byte ptr [rsi+0xf], 0x1; insb [rdi], dx; ret; 
0x00000000045cb4: rol byte ptr [rcx-0x77], 0x1b; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000000f9d74: rol byte ptr [rcx-0x77], 0x55; add [rcx+0x6c0f66d0], cl; ret; 
0x0000000010f4d4: rol byte ptr [rcx-0x77], 0xc1; mov edx, [rsp+0x14]; mov rsi, [rsp+0x8]; mov eax, 0x127; syscall; 
0x0000000010f594: rol byte ptr [rcx-0x77], 0xc1; mov edx, [rsp+0x14]; mov rsi, [rsp+0x8]; mov eax, 0x128; syscall; 
0x000000000de734: rol byte ptr [rcx-0x77], 0xc1; mov r10d, [rsp+0x1c]; mov rdx, [rsp+0x10]; mov eax, 0xf7; syscall; 
0x00000000123353: rol byte ptr [rcx-0x7d], 0xc0; add [rbp+0x440f45c9], eax; ror dword ptr [rax-0x7d], 0x1; ret; 
0x000000001233fe: rol byte ptr [rcx-0x7d], 0xc0; add [rbp+0x440f45f6], eax; ret far; 
0x000000000505ed: rol byte ptr [rcx-0x80], 0x7f; jmp far fword ptr [rdi]; 
0x000000000cbb22: rol byte ptr [rcx], 0x0; add [rax], al; ret; 
0x0000000014d435: rol byte ptr [rcx], 0x39; ret; 
0x000000000e7d8e: rol byte ptr [rcx], 0x3b; jl short 0x00000000000e7e00; mov byte ptr [rdi+0x8], 0x1; mov eax, 0x1; ret; 
0x0000000011c0b3: rol byte ptr [rcx], 0x66; mov [rdx], eax; ret; 
0x00000000052482: rol byte ptr [rcx], 0x80; js short 0x0000000000052488; add [rbp-0xa], dh; pop rbx; ret; 
0x0000000009f652: rol byte ptr [rcx], 0x84; sar byte ptr [rdx], cl; cmove rax, rdx; ret; 
0x000000000a4bfb: rol byte ptr [rcx], 0x84; shl byte ptr [rdi+rcx+0x39], 0xf0; jne short 0x00000000000a4bf0; mov rax, r8; ret; 
0x00000000123401: rol byte ptr [rcx], 0x85; test byte ptr [rbp+0xf], 0x44; ret far; 
0x0000000014dc8a: rol byte ptr [rcx], 0x89; ret; 
0x0000000002c882: rol byte ptr [rcx], 0x89; xor [rax-0x7d], ecx; ret; 
0x000000000cbaf2: rol byte ptr [rcx], 0xc3; nop [rax+rax]; add rax, 0x3; ret; 
0x00000000050f72: rol byte ptr [rcx], 0xc6; jmp qword ptr [rax]; 
0x0000000005ba4a: rol byte ptr [rcx], 0xc7; test [rdi+rdi*8-0x1], esp; jmp qword ptr [rsi]; 
0x00000000086f3a: rol byte ptr [rcx], 0xeb; ret far; 
0x000000000a4b42: rol byte ptr [rcx], 0xf; mov esi, 0xf2390714; je short 0x00000000000a4b40; ret; 
0x00000000112b49: rol byte ptr [rdi+0xd4d0005], 0x0; cmp eax, 0x1; jg short 0x0000000000112b60; ret; 
0x000000001511f3: rol byte ptr [rdi+rcx], 0xca; mov [rax-0x4], edx; mov [rdi+0x18], rax; mov eax, r8d; ret; 
0x00000000151233: rol byte ptr [rdi+rcx], 0xca; mov [rsi], edx; mov [rdi+0x18], rax; mov eax, r8d; ret; 
0x00000000127b6f: rol byte ptr [rdi-0x73], 0x44; add [rcx+rbp*8], al; sahf; cmc; call qword ptr [rax-0x18]; 
0x000000000cbb82: rol byte ptr [rdi], 0x0; add [rax], al; ret; 
0x000000000cbb32: rol byte ptr [rdx], 0x0; add [rax], al; ret; 
0x000000000834ea: rol byte ptr [rdx], 0x0; add [rbp+0x41], bl; pop rsp; pop r13; ret; 
0x000000000913a9: rol byte ptr [rdx], 0x1; add [rax], al; mov esi, 0x80; mov eax, 0xcc; syscall; 
0x000000001372b5: rol byte ptr [rdx], 0x41; mov [rax], edx; mov [r9], rax; mov eax, ecx; ret; 
0x000000000cbae9: rol byte ptr [rdx], 0xc3; nop [rax]; add rax, 0x1; ret; 
0x0000000017650a: rol byte ptr [rdx], cl; add [rax], al; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x000000000cbb72: rol byte ptr [rsi], 0x0; add [rax], al; ret; 
0x0000000016e49d: rol byte ptr [rsi], 0x0; add [rbp-0x77], cl; ret far; 
0x0000000017e27f: rol ch, 0x1; std; xlat [rbx]; ret; 
0x00000000185386: rol ch, 0x7e; jg short 0x00000000001853cc; mov al, [0x77f8c5237f7ec1c4]; ret; 
0x000000001854b9: rol ch, 0x7e; jg short 0x00000000001854ff; mov al, [0x77f8c5237f7ec1c4]; ret; 
0x00000000182582: rol ch, 0xf8; ja short 0x000000000018254a; nop [rax+rax]; xor eax, eax; ret; 
0x00000000182026: rol ch, cl; std; xlat [rbx]; ret; 
0x00000000111def: rol dh, 0x46; inc dword ptr [rax]; ret; 
0x000000000cbacc: rol dword ptr [rax+0x1e740fe1], 0x1; ret; 
0x0000000015912d: rol dword ptr [rax+0x48000001], 0x89; mov cl, 0xe9; add esi, ebx; movsq [rdi], [rsi]; ret; 
0x0000000017de30: rol dword ptr [rax+0x49], 0x29; ret far; 
0x00000000132ad1: rol dword ptr [rax], 0x0; test rax, rax; je short 0x0000000000132ae2; lea rdi, [rip+0xb5a40]; call rax; 
0x00000000099e59: rol dword ptr [rax], cl; add [rax], al; call rax; 
0x00000000126da6: rol dword ptr [rax], cl; add [rax], al; leave; ret; 
0x0000000017e1b0: rol dword ptr [rbp+0x311b75c0], 0xc0; vzeroupper; ret; 
0x000000000a8444: rol dword ptr [rbp+0x315775c0], 0xc0; ret; 
0x000000000a88f7: rol dword ptr [rbp+0x317475c0], 0xc0; ret; 
0x000000000a8926: rol dword ptr [rbp+0x317575c0], 0xc0; ret; 
0x000000000829b6: rol dword ptr [rbp+0x31], 0xd2; mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x000000001908a7: rol dword ptr [rbp+0x31], cl; ror byte ptr [rax+0x9], cl; ret far; 
0x000000000a8414: rol dword ptr [rbp-0x5c7af040], 0x0; add [rax], al; xor eax, eax; ret; 
0x000000001824b7: rol dword ptr [rbp-0x5f7af040], 0x0; add [rax], al; mov rax, r8; vzeroupper; ret; 
0x0000000017e173: rol dword ptr [rbp-0x6b7af040], 0x0; add [rax], al; xor eax, eax; vzeroupper; ret; 
0x000000000de737: rol dword ptr [rbx+rcx*4+0x54], 0x24; sbb al, 0x48; mov edx, [rsp+0x10]; mov eax, 0xf7; syscall; 
0x0000000017b40a: rol dword ptr [rbx], 0x0; movsxd r9, [r10+r9*4]; pcmpeqb xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000077452: rol dword ptr [rcx+0x5c], 0x41; pop rbp; mov rax, r9; pop r14; ret; 
0x0000000018e86b: rol dword ptr [rcx+0xf], cl; xchg edx, eax; ret; 
0x000000000f304d: rol dword ptr [rcx+rcx*2], 0x39; ret far; 
0x000000000a3480: rol dword ptr [rcx+rcx*4-0x39], 0xc1; call far fword ptr [rax]; 
0x000000000a3466: rol dword ptr [rcx+rcx*4-0x39], 0xc1; call qword ptr [rdx]; 
0x00000000045e97: rol dword ptr [rcx+rcx*4-0x40], 0xf; adc [rdi], eax; ret; 
0x0000000007bf4a: rol dword ptr [rcx-0x47], cl; add [rax], eax; add [rax], al; mov edx, 0x1; jmp rcx; 
0x0000000007a6e2: rol dword ptr [rcx-0x47], cl; add [rax], eax; add [rax], al; xor edx, edx; jmp rcx; 
0x000000000762aa: rol dword ptr [rcx-0x47], cl; add [rax], eax; add [rax], al; xor edx, edx; jmp rsi; 
0x0000000011a673: rol dword ptr [rdi-0x2708fff4], 0x1; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x000000000b52e9: rol dword ptr [rdi], cl; add [rax], al; ret; 
0x00000000077deb: rol dword ptr [rip+0x63480000], 0xc; mov cl, [rax+0x1]; sar dword ptr [rsi], 0x1; jmp rcx; 
0x000000001106db: rol dword ptr [rsi*8-0x74b76f01], 0x1; add eax, 0xd2761; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000de773: rol dword ptr [rsi+0x10], 0x1; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x2]; mov eax, 0xffffffff; ret; 
0x000000000284ac: rol eax, 0x11; mov [rip+0x1be192], rax; ret; 
0x00000000142bb1: rol eax, 0x8; mov rdi, r15; mov [rsp+0x192], ax; mov rax, [rsp+0x30]; call rax; 
0x000000001297b7: rol eax, 0x8; ret; 
0x000000000423a1: rol eax, cl; and [rdi], rax; xor eax, eax; ret; 
0x00000000137777: rol ebx, 0x1; nop [rax]; mov rax, 0xffffffffffffffff; mov rdx, 0xffffffffffffffff; ret; 
0x00000000040bfd: rol ebx, 0x90; and esi, 0x80000000; mov [rdi], esi; ret; 
0x0000000015a67a: rol edx, cl; and [rdi+rax*8], rdx; xor eax, eax; ret; 
0x000000001351ae: rol esi, 0x45; ret; 
0x000000001351ad: rol r14, 0x45; ret; 
0x000000000284ab: rol rax, 0x11; mov [rip+0x1be192], rax; ret; 
0x000000000423a0: rol rax, cl; and [rdi], rax; xor eax, eax; ret; 
0x0000000015a679: rol rdx, cl; and [rdi+rax*8], rdx; xor eax, eax; ret; 
0x0000000014c2f2: ror bl, cl; or [rax], eax; syscall; 
0x0000000016272f: ror byte ptr [r8-0x7d], 0xef; lea r11, [rip+0x55254]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000015fd4f: ror byte ptr [r8-0x7d], 0xef; lea r11, [rip+0x57a74]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000003d3ab: ror byte ptr [rax+0x1], 0x1; ret; 
0x00000000181e26: ror byte ptr [rax+0x1], 0xc8; add rax, rdi; vzeroupper; ret; 
0x0000000017e6fc: ror byte ptr [rax+0x1], 0xf8; add rax, r8; vzeroupper; ret; 
0x000000000a854c: ror byte ptr [rax+0x1], 0xf8; add rax, rcx; ret; 
0x000000001821c8: ror byte ptr [rax+0x1], 0xf8; add rax, rcx; sub rax, rdx; vzeroupper; ret; 
0x0000000017e2f8: ror byte ptr [rax+0x1], 0xf8; add rax, rcx; vzeroupper; ret; 
0x000000000a8a68: ror byte ptr [rax+0x1], 0xf8; add rax, rsi; ret; 
0x000000000a8462: ror byte ptr [rax+0x1], 0xf8; ret; 
0x00000000186bf3: ror byte ptr [rax+0x1], 0xf8; sub rax, rdx; shr rax, 0x2; vzeroupper; ret; 
0x00000000182283: ror byte ptr [rax+0x1], 0xf8; sub rax, rdx; vzeroupper; ret; 
0x0000000017e243: ror byte ptr [rax+0x1], 0xf8; vzeroupper; ret; 
0x000000000ae044: ror byte ptr [rax+0x1], cl; ror byte ptr [rax+0x29], 0x1; clc; ret; 
0x000000000cb849: ror byte ptr [rax+0x1], cl; ror byte ptr [rax+0x29], 0x1; clc; shr rax, 0x2; ret; 
0x000000000423a2: ror byte ptr [rax+0x21], 0x7; xor eax, eax; ret; 
0x000000000407b6: ror byte ptr [rax+0x23], 0x1; and al, 0xf8; sub rax, rdx; shr rax, 0x3f; ret; 
0x000000000ae047: ror byte ptr [rax+0x29], 0x1; clc; ret; 
0x000000000cb84c: ror byte ptr [rax+0x29], 0x1; clc; shr rax, 0x2; ret; 
0x000000000a822b: ror byte ptr [rax+0x29], 0xc2; jbe 0x00000000000a84d0; add rax, rdi; add rax, rcx; ret; 
0x000000000ca12b: ror byte ptr [rax+0x29], 0xc2; jbe 0x00000000000ca3d0; add rax, rdi; add rax, rcx; ret; 
0x000000000a8492: ror byte ptr [rax+0x29], 0xc2; jbe short 0x00000000000a84d0; add rax, rdi; ret; 
0x000000000a84a2: ror byte ptr [rax+0x29], 0xc2; jbe short 0x00000000000a84d0; lea rax, [rdi+rax+0x10]; ret; 
0x000000000a84b2: ror byte ptr [rax+0x29], 0xc2; jbe short 0x00000000000a84d0; lea rax, [rdi+rax+0x20]; ret; 
0x000000000a84c2: ror byte ptr [rax+0x29], 0xc2; jbe short 0x00000000000a84d0; lea rax, [rdi+rax+0x30]; ret; 
0x000000000ca392: ror byte ptr [rax+0x29], 0xc2; jbe short 0x00000000000ca3d0; add rax, rdi; ret; 
0x000000000ca3a2: ror byte ptr [rax+0x29], 0xc2; jbe short 0x00000000000ca3d0; lea rax, [rdi+rax+0x10]; ret; 
0x000000000ca3b2: ror byte ptr [rax+0x29], 0xc2; jbe short 0x00000000000ca3d0; lea rax, [rdi+rax+0x20]; ret; 
0x000000000ca3c2: ror byte ptr [rax+0x29], 0xc2; jbe short 0x00000000000ca3d0; lea rax, [rdi+rax+0x30]; ret; 
0x0000000017e1c3: ror byte ptr [rax+0x39], 0xc2; jbe short 0x000000000017e230; add rax, rdi; vzeroupper; ret; 
0x00000000185c73: ror byte ptr [rax+0x39], 0xc2; jbe short 0x0000000000185ce0; add rax, rdi; vzeroupper; ret; 
0x0000000010de74: ror byte ptr [rax+0x39], 0xca; je short 0x000000000010de80; ret; 
0x00000000107d17: ror byte ptr [rax+0x39], 0xf7; ja short 0x0000000000107d08; mov eax, r8d; ret; 
0x00000000091345: ror byte ptr [rax+0x39], 0xf7; sete al; ret; 
0x000000000907a0: ror byte ptr [rax+0x39], 0xfa; setae al; ret; 
0x000000000f790b: ror byte ptr [rax+0x63], 0x1; adc al, 0x91; add rdx, rcx; notrack jmp rdx; 
0x00000000103d74: ror byte ptr [rax+0x63], 0x4; or dword ptr [rax+0x1], 0xffffffd8; notrack jmp rax; 
0x00000000062a15: ror byte ptr [rax+0x63], 0x4; xchg [rax+0x1], ecx; clc; notrack jmp rax; 
0x0000000007cdda: ror byte ptr [rax+0x63], cl; adc al, 0x91; add rdx, rcx; notrack jmp rdx; 
0x0000000003f001: ror byte ptr [rax+0x63], cl; adc al, 0x96; add rdx, rsi; notrack jmp rdx; 
0x000000000a4d68: ror byte ptr [rax+0x63], cl; adc al, 0x97; add rdx, rdi; notrack jmp rdx; 
0x000000000ea823: ror byte ptr [rax+0x63], cl; ret far; 
0x000000001908aa: ror byte ptr [rax+0x9], cl; ret far; 
0x000000000cb8d6: ror byte ptr [rax+0xf], cl; ret; 
0x000000000b8cbd: ror byte ptr [rax+rax], 0x1; cmovne rax, rdx; ret; 
0x00000000116e08: ror byte ptr [rax+rax], 0xba; add fs:[rax], al; add [rbx-0x3f7ac7c0], cl; cmove eax, edx; ret; 
0x00000000116e3b: ror byte ptr [rax+rax], 0xf7; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x000000000b7c18: ror byte ptr [rax-0x1], 0xc0; add rsp, 0x100; sub rax, rdx; ret; 
0x000000000b7c15: ror byte ptr [rax-0x1], 0xc0; inc rax; add rsp, 0x100; sub rax, rdx; ret; 
0x000000000a8bb6: ror byte ptr [rax-0x2d], 0xfa; movzx edx, dl; sub eax, edx; ret; 
0x000000000adf86: ror byte ptr [rax-0x2d], 0xfa; test rdx, rdx; je short 0x00000000000adfa0; bsf rax, rdx; ret; 
0x000000000adf29: ror byte ptr [rax-0x2d], 0xfa; test rdx, rdx; je short 0x00000000000adfb0; bsf rax, rdx; ret; 
0x00000000156ca8: ror byte ptr [rax-0x39], 0x2; add [rax], al; add [rax], al; ret; 
0x00000000056a1a: ror byte ptr [rax-0x39], cl; ret; 
0x000000001318f9: ror byte ptr [rax-0x73], 0x15; jmp far fword ptr [rdi+rax-0x3dbb7500]; 
0x00000000141495: ror byte ptr [rax-0x73], 0x1; add eax, 0xa7803; add rsp, 0x8; ret; 
0x00000000183dd2: ror byte ptr [rax-0x73], 0x1; jl short 0x0000000000183dee; and ecx, ebp; ret; 
0x00000000144bf5: ror byte ptr [rax-0x73], 0x35; push rsi; ret far; 
0x000000001249a6: ror byte ptr [rax-0x73], 0x35; sahf; ret; 
0x000000000e0c50: ror byte ptr [rax-0x73], 0x44; add bh, bh; ret; 
0x000000000a8482: ror byte ptr [rax-0x73], 0x44; cmp [rax], ah; ret; 
0x000000000a8962: ror byte ptr [rax-0x73], 0x44; cmp [rax], dh; ret; 
0x000000000a8472: ror byte ptr [rax-0x73], 0x44; cmp [rax], dl; ret; 
0x000000000a8452: ror byte ptr [rax-0x73], 0x44; cmp al, dh; ret; 
0x0000000010e7b3: ror byte ptr [rax-0x73], 0x54; and al, 0x30; mov eax, 0x10; syscall; 
0x0000000008061c: ror byte ptr [rax-0x73], cl; xor eax, 0x25c; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000008f76d: ror byte ptr [rax-0x73], cl; xor eax, 0xffffdddb; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000008f3d9: ror byte ptr [rax-0x73], cl; xor eax, 0xffffe16f; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000008f0a1: ror byte ptr [rax-0x73], cl; xor eax, 0xffffe4a7; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000008db4b: ror byte ptr [rax-0x73], cl; xor eax, 0xfffff9fd; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000080c1d: ror byte ptr [rax-0x73], cl; xor eax, 0xfffffc5b; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000008d664: ror byte ptr [rax-0x73], cl; xor eax, 0xfffffee4; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000040729: ror byte ptr [rax-0x75], 0x1; add eax, 0x1a2717; mov dword ptr fs:[rax], 0x22; add rsp, 0x8; ret; 
0x0000000014db6a: ror byte ptr [rax-0x75], 0x1; or [r8-0x77], r9b; out dx, eax; call qword ptr [rax+0x8]; 
0x0000000009b995: ror byte ptr [rax-0x75], 0x40; or [rax-0x7b], cl; shl byte ptr [rbp-0xf], 0x44; mov eax, eax; ret; 
0x000000000d897b: ror byte ptr [rax-0x75], 0x4c; ret; 
0x000000000d89e6: ror byte ptr [rax-0x75], 0x5c; ret; 
0x00000000108c02: ror byte ptr [rax-0x75], 0x74; and al, 0x10; mov edi, [rsp+0x18]; mov eax, 0x101; syscall; 
0x0000000011ae1d: ror byte ptr [rax-0x75], 0x74; and al, 0x10; mov edi, [rsp+0xc]; mov eax, 0x133; syscall; 
0x0000000011955d: ror byte ptr [rax-0x75], 0x74; and al, 0x10; mov edi, [rsp+0xc]; mov eax, 0xe8; syscall; 
0x0000000014168c: ror byte ptr [rax-0x75], 0x74; and al, 0x10; mov rcx, [rsp+0x8]; mov rdi, rbp; call rcx; 
0x00000000086ed5: ror byte ptr [rax-0x75], 0x74; and al, 0x18; mov rdi, r13; lea r9, [rsp+0x28]; call rbp; 
0x00000000147108: ror byte ptr [rax-0x75], 0x74; and al, 0x30; mov rcx, [rsp+0x28]; mov rdi, r12; call rcx; 
0x00000000147323: ror byte ptr [rax-0x75], 0x74; and al, 0x40; mov rdx, [rsp+0x20]; mov rdi, r12; call rdx; 
0x0000000014a8a0: ror byte ptr [rax-0x75], 0x74; and al, 0x50; mov rcx, [rsp+0x20]; mov rdi, r15; call rcx; 
0x000000000de67e: ror byte ptr [rax-0x75], 0x74; and al, 0x8; mov edi, [rsp+0x10]; mov eax, 0x3d; syscall; 
0x0000000010e1af: ror byte ptr [rax-0x75], 0x74; and al, 0x8; mov edi, [rsp+0x18]; mov eax, 0x115; syscall; 
0x0000000011acaf: ror byte ptr [rax-0x75], 0x74; and al, 0x8; mov edi, [rsp+0x18]; mov eax, 0x120; syscall; 
0x0000000011afbf: ror byte ptr [rax-0x75], 0x74; and al, 0x8; mov edi, [rsp+0x18]; mov eax, 0x45; syscall; 
0x000000001196be: ror byte ptr [rax-0x75], 0x74; and al, 0x8; mov edi, [rsp]; mov eax, 0x116; syscall; 
0x00000000106cdf: ror byte ptr [rax-0x75], 0x74; and al, 0x8; mov edi, [rsp]; mov eax, 0x11; syscall; 
0x00000000106d8f: ror byte ptr [rax-0x75], 0x74; and al, 0x8; mov edi, [rsp]; mov eax, 0x12; syscall; 
0x000000000d6c85: ror byte ptr [rax-0x75], 0x74; ret; 
0x00000000046402: ror byte ptr [rax-0x75], 0x7c; and al, 0x8; mov eax, 0x13e; syscall; 
0x00000000113952: ror byte ptr [rax-0x75], 0x7c; and al, 0x8; mov eax, 0x1a; syscall; 
0x0000000010d662: ror byte ptr [rax-0x75], 0x7c; and al, 0x8; mov eax, 0x7; syscall; 
0x00000000159803: ror byte ptr [rax-0x75], 0x7f; or [rdx], ch; lea rcx, [rsi+0x398]; push 0x2; call qword ptr [rax+0x270]; 
0x000000000a494c: ror byte ptr [rax-0x77], 0x17; ret; 
0x00000000059189: ror byte ptr [rax-0x77], 0x1; and al, 0xf0; movdqa xmm0, [rsp-0x18]; ret; 
0x0000000003cb3e: ror byte ptr [rax-0x77], 0x1; fisttp word ptr [rdi], st; mov dh, 0x43; add [rax-0x7d], ecx; ret; 
0x00000000108179: ror byte ptr [rax-0x77], 0x1; ret far; 
0x000000000861f9: ror byte ptr [rax-0x77], 0x1; ret; 
0x00000000146f6a: ror byte ptr [rax-0x77], 0x2; mov eax, 0x1; ret; 
0x000000001146ba: ror byte ptr [rax-0x77], 0x3; pop rbx; setne al; movzx eax, al; ret; 
0x000000000837e9: ror byte ptr [rax-0x77], 0x48; adc [rax-0x77], cl; push rax; movups [rax], xmm0; ret; 
0x0000000015083f: ror byte ptr [rax-0x77], 0x4; and al, 0x48; mov eax, [rbp+0x8]; call qword ptr [rax+0x8]; 
0x0000000015017b: ror byte ptr [rax-0x77], 0x4; and al, 0x48; mov eax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x0000000008de82: ror byte ptr [rax-0x77], 0x57; sbb [rax-0x77], cl; movups [rdi+0x8], xmm0; ret; 
0x00000000112295: ror byte ptr [rax-0x77], 0x5; ret far; 
0x00000000147a0c: ror byte ptr [rax-0x77], 0xd6; add rdi, 0x10; jmp rcx; 
0x00000000147a2c: ror byte ptr [rax-0x77], 0xd6; mov dword ptr [rdi+0x10], 0x2; add rdi, 0x10; jmp rcx; 
0x0000000014a50c: ror byte ptr [rax-0x77], 0xd6; mov dword ptr [rdi+0x58], 0x2; add rdi, 0x58; jmp rcx; 
0x00000000149bdc: ror byte ptr [rax-0x77], 0xd6; mov dword ptr [rdi+0x68], 0x2; add rdi, 0x68; jmp rcx; 
0x00000000146dec: ror byte ptr [rax-0x77], 0xd6; mov dword ptr [rdi+0xc8], 0x2; add rdi, 0xc8; jmp rcx; 
0x0000000009f9b8: ror byte ptr [rax-0x77], 0xd8; pop rbx; cmovne rax, rdi; ret; 
0x000000000608e5: ror byte ptr [rax-0x77], 0xd8; test r8d, r8d; jne short 0x00000000000608f0; pop rbx; ret; 
0x00000000142b0f: ror byte ptr [rax-0x77], 0xdf; call rcx; 
0x0000000010e98f: ror byte ptr [rax-0x77], 0xe2; mov eax, 0x10; syscall; 
0x0000000014f8ba: ror byte ptr [rax-0x77], 0xe7; mov dword ptr [rsp], 0x2; call r8; 
0x000000000c6a46: ror byte ptr [rax-0x77], 0xef; call rbx; 
0x000000000b9bea: ror byte ptr [rax-0x77], 0xef; lea r9, [rsp+0x30]; call rbx; 
0x0000000008ba29: ror byte ptr [rax-0x77], cl; out dx, al; mov rdi, rbx; call qword ptr [r12+0x80]; 
0x000000000813e9: ror byte ptr [rax-0x77], cl; out dx, al; mov rdi, rbx; call qword ptr [r13+0x48]; 
0x0000000008afa3: ror byte ptr [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x80]; 
0x0000000008b2ad: ror byte ptr [rax-0x77], cl; out dx, eax; call qword ptr [rbx+0x80]; 
0x0000000008ce45: ror byte ptr [rax-0x7b], 0xd2; jne short 0x000000000008ce50; ret; 
0x00000000045610: ror byte ptr [rax-0x7b], 0xff; je short 0x000000000004561c; mov dword ptr [rdi], 0x0; pop rbx; ret; 
0x0000000002966b: ror byte ptr [rax-0x7d], 0x1; ret; 
0x0000000011463f: ror byte ptr [rax-0x7d], 0x3e; add [rax-0x77], cl; je short 0x0000000000114650; pop rbx; ret; 
0x000000000895b8: ror byte ptr [rax-0x7d], 0x7f; sbb [rax], al; setne r8b; mov eax, r8d; ret; 
0x000000001822b3: ror byte ptr [rax-0x7d], 0xc0; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x0000000017e263: ror byte ptr [rax-0x7d], 0xc0; add rax, rdi; vzeroupper; ret; 
0x0000000017e253: ror byte ptr [rax-0x7d], 0xc0; and [rax+0x1], cl; clc; vzeroupper; ret; 
0x000000000fafff: ror byte ptr [rax-0x7d], 0xc4; adc [rbx+0x5d], bl; pop r12; ret; 
0x0000000012563f: ror byte ptr [rax-0x7d], 0xc4; or [rbp+0x41], bl; pop rsp; ret; 
0x00000000053766: ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x5d], bl; pop r12; pop r13; ret; 
0x00000000045c2c: ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x5d], bl; ret; 
0x00000000151a0d: ror byte ptr [rax-0x7d], 0xc4; or [rcx+rcx*4-0x40], al; ret; 
0x000000000d94ea: ror byte ptr [rax-0x7d], 0xc4; or [rcx+rcx*4-0x40], cl; pop rbx; pop rbp; ret; 
0x00000000029307: ror byte ptr [rax-0x7d], 0xc4; or [rdi], cl; mov dh, 0xc0; neg eax; ret; 
0x000000000503e4: ror byte ptr [rax-0x7d], 0xc4; or [rdi], cl; mov dh, 0xc0; ret; 
0x0000000014068e: ror byte ptr [rax-0x7d], 0xc4; or bl, al; nop [rax]; mov eax, 0x1; ret; 
0x0000000014997c: ror byte ptr [rax-0x7d], 0xc4; or cl, ch; or cl, [rcx-0xd]; jmp qword ptr [rsi+0x2e]; 
0x0000000010a847: ror byte ptr [rax-0x7d], 0xc4; pop rax; ret; 
0x00000000091c72: ror byte ptr [rax-0x7d], 0xc4; sbb [rbx+0x5d5b0ce0], al; ret; 
0x0000000008a988: ror byte ptr [rax-0x7d], 0xc4; sbb [rbx+0x5d], bl; ret; 
0x0000000009a019: ror byte ptr [rax-0x7d], 0xc4; sbb [rcx+rcx*4-0x40], cl; pop rbx; pop r12; ret; 
0x00000000060f68: ror byte ptr [rax-0x7d], 0xc4; sbb [rdi], cl; mov dh, 0xc0; neg eax; ret; 
0x000000000a8972: ror byte ptr [rax-0x7d], 0xea; add rdx, rax; jl short 0x00000000000a89e0; add rax, rdi; ret; 
0x00000000164e5f: ror byte ptr [rax-0x7d], 0xea; lea r11, [rip+0x52b25]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162730: ror byte ptr [rax-0x7d], 0xef; lea r11, [rip+0x55254]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000015fd50: ror byte ptr [rax-0x7d], 0xef; lea r11, [rip+0x57a74]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000b7c1b: ror byte ptr [rax-0x7f], 0xc4; add [rcx], al; add [rax], al; sub rax, rdx; ret; 
0x000000000418e0: ror byte ptr [rax-0x7f], 0xc4; sbb [rcx], al; add [rax], al; ret; 
0x000000000e0bf4: ror byte ptr [rax-0x7f], 0xfa; push rsp; push rbx; setne al; ret; 
0x000000001125aa: ror byte ptr [rax], 0x48; mov [rip+0xd51dd], eax; mov rax, r8; add rsp, 0x8; ret; 
0x0000000011257a: ror byte ptr [rax], 0x48; mov [rip+0xd520d], eax; mov rax, r8; ret; 
0x00000000142bb2: ror byte ptr [rax], 0x4c; mov edi, edi; mov [rsp+0x192], ax; mov rax, [rsp+0x30]; call rax; 
0x000000000b7cd4: ror byte ptr [rax], cl; leave; cmove rax, rdx; ret; 
0x000000000ccb0e: ror byte ptr [rbp+0x1], 0xc7; mov [rsp+0x88], r15; call r12; 
0x000000000f0922: ror byte ptr [rbp+0x21], 0x1; ret far; 
0x000000000795c9: ror byte ptr [rbp+0xf], 0x48; ret; 
0x000000000b6d16: ror byte ptr [rbp+rcx*4+0x1d], cl; and ax, 0xf; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6cf9: ror byte ptr [rbp+rcx*4+0x1d], cl; and dword ptr [rip+0x6349000f], 0xc; xchg ebx, eax; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6d3b: ror byte ptr [rbp+rcx*4+0x1d], cl; and eax, 0x6349000f; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b3726: ror byte ptr [rbp+rcx*4+0x1d], cl; mov [0x49930c6349000f57], al; lea ecx, [rbx+rcx]; notrack jmp rcx; 
0x000000000b6d73: ror byte ptr [rbp+rcx*4+0x1d], cl; or [rip+0x6349000f], esp; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b4699: ror byte ptr [rbp+rcx*4+0x1d], cl; or dword ptr [rcx+0xf], 0x0; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b46b6: ror byte ptr [rbp+rcx*4+0x1d], cl; str [r9+0x63]; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000cd80a: ror byte ptr [rbp+rcx*4+0x44], 0x24; and al, ch; fwait; cmp edi, ecx; call far fword ptr [rcx+0x5e]; 
0x000000000cd727: ror byte ptr [rbp+rcx*4+0x44], 0x24; and al, ch; jle short 0x00000000000cd76c; stc; call far fword ptr [rdx+0x59]; 
0x000000000dffc7: ror byte ptr [rbx+0x1066f205], 0x0; test eax, eax; jne short 0x00000000000e0000; mov eax, 0x77; syscall; 
0x000000000dff17: ror byte ptr [rbx+0x1067a205], 0x0; test eax, eax; jne short 0x00000000000dff50; mov eax, 0x75; syscall; 
0x000000000dfc47: ror byte ptr [rbx+0x106a7205], 0x0; test eax, eax; jne short 0x00000000000dfc80; mov eax, 0x6a; syscall; 
0x000000000dfba7: ror byte ptr [rbx+0x106b1205], 0x0; test eax, eax; jne short 0x00000000000dfbe0; mov eax, 0x69; syscall; 
0x000000000db2d7: ror byte ptr [rbx+0x10b3e205], 0x0; test eax, eax; jne short 0x00000000000db310; mov eax, 0x74; syscall; 
0x00000000108ce3: ror byte ptr [rbx+0x3108247c], 0xc0; syscall; 
0x00000000186467: ror byte ptr [rbx+0x343b0e34], 0xa; jne 0x0000000000186209; vzeroupper; ret; 
0x00000000185f54: ror byte ptr [rbx+0x3b203e4c], 0x4c; cmp ah, [rax]; jne 0x0000000000185d99; vzeroupper; ret; 
0x00000000185f22: ror byte ptr [rbx+0x3c3b0e3c], 0xa; jne 0x0000000000185d99; vzeroupper; ret; 
0x000000001863a8: ror byte ptr [rbx+0x3c3b0e3c], 0xa; jne 0x0000000000186209; vzeroupper; ret; 
0x00000000185841: ror byte ptr [rbx+0x75163b17], 0xe4; ret; 
0x0000000018611b: ror byte ptr [rbx+0xc3b170c], 0x16; jne 0x0000000000185d99; vzeroupper; ret; 
0x00000000186613: ror byte ptr [rbx+0xc3b170c], 0x16; jne 0x0000000000186209; vzeroupper; ret; 
0x00000000186232: ror byte ptr [rbx+0xc3b170c], 0x16; jne short 0x0000000000186209; vzeroupper; ret; 
0x000000001863eb: ror byte ptr [rbx+0xc3b3e0c], 0x3a; jne 0x0000000000186209; vzeroupper; ret; 
0x0000000010f977: ror byte ptr [rbx+0xd6d4205], 0x0; test eax, eax; jne short 0x000000000010f9b0; mov eax, 0x72; syscall; 
0x0000000010f8d7: ror byte ptr [rbx+0xd6de205], 0x0; test eax, eax; jne short 0x000000000010f910; mov eax, 0x71; syscall; 
0x0000000011960e: ror byte ptr [rbx-0x74e7db8c], 0x7c; and al, 0x8; mov eax, 0x114; syscall; 
0x0000000010e25f: ror byte ptr [rbx-0x74f3db8c], 0x7c; and al, 0x8; mov eax, 0x11d; syscall; 
0x00000000077565: ror byte ptr [rbx-0x76bf29ac], cl; adc [rax+0x39], ecx; ret; 
0x0000000012c0b3: ror byte ptr [rbx], 0x0; syscall; 
0x000000000e09cb: ror byte ptr [rbx], 0x1; mov eax, 0x7f; mov edx, 0xfde8; cmove rax, rdx; ret; 
0x000000000e0b1e: ror byte ptr [rbx], 0x1; mov edx, 0x40; mov eax, 0x20; cmove rax, rdx; ret; 
0x0000000010ecf8: ror byte ptr [rcx+0x12eb8fe], cl; add [rax], al; xor edi, edi; syscall; 
0x0000000014f670: ror byte ptr [rcx+0x1], 0xdd; call rbp; 
0x00000000150166: ror byte ptr [rcx+0x1b803], 0x0; add bl, ch; ret; 
0x000000001212b4: ror byte ptr [rcx+0x2b], 0x1; cmp [r8+0x39], r9b; ret; 
0x0000000011452f: ror byte ptr [rcx+0x312b0102], 0xc0; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000010e675: ror byte ptr [rcx+0x48c30877], 0x8b; add eax, 0xd47c7; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000f50b7: ror byte ptr [rcx+0x63], 0x1; push rsp; xchg ebp, eax; add [rcx+rax-0x16], cl; notrack jmp rdx; 
0x0000000005f093: ror byte ptr [rcx+0x63], 0x1; ret far; 
0x000000001055f9: ror byte ptr [rcx+0x63], 0x4; test [rcx+rax-0x20], cl; notrack jmp rax; 
0x00000000050e86: ror byte ptr [rcx+0x63], cl; adc al, 0x91; add rdx, r9; notrack jmp rdx; 
0x00000000059547: ror byte ptr [rcx+r9*4-0x30], 0x1; pop rbx; pop rbp; ret; 
0x00000000142411: ror byte ptr [rcx+rbp-0x20], 0x48; mov [rbx+0x18], eax; mov rax, [rbp+0x8]; call qword ptr [rax+0x28]; 
0x0000000005eff1: ror byte ptr [rcx+rcx*4+0x2b], 0x5b; pop rbp; pop r12; pop r13; ret; 
0x000000000cc349: ror byte ptr [rcx+rcx*4+0x64], 0x24; push rax; call rbx; 
0x00000000085b49: ror byte ptr [rcx+rcx*4-0x1], cl; call qword ptr [r14+0x80]; 
0x00000000086105: ror byte ptr [rcx+rcx*4-0x1], cl; call qword ptr [rbx+0x80]; 
0x00000000107ee9: ror byte ptr [rcx+rcx*4-0x1a], cl; mov rdi, rbp; mov eax, 0x135; syscall; 
0x0000000013fc0d: ror byte ptr [rcx+rcx*4-0x1a], cl; mov rdi, rbx; mov rcx, r13; call r10; 
0x0000000003d0d3: ror byte ptr [rcx+rcx*4-0x20], 0x1; pop rbp; pop r12; pop r13; ret; 
0x000000000d96f3: ror byte ptr [rcx+rcx*4-0x20], 0x1; pop rbx; pop rbp; pop r12; ret; 
0x00000000073854: ror byte ptr [rcx+rcx*4-0x2], cl; mov rdi, r14; mov [rbp-0x8f5], r9b; mov [rbp-0x900], r8b; call rax; 
0x00000000139f22: ror byte ptr [rcx+rcx*4-0x30], 0x1; mov byte ptr [r8], 0x0; ret; 
0x00000000059548: ror byte ptr [rcx+rcx*4-0x30], 0x1; pop rbx; pop rbp; ret; 
0x000000000418bb: ror byte ptr [rcx+rcx*4-0x32], cl; mov edi, 0x2; mov eax, 0xe; syscall; 
0x00000000044e2a: ror byte ptr [rcx+rcx*4-0x40], 0x5b; pop rbp; ret; 
0x000000000598dd: ror byte ptr [rcx+rcx*4-0x40], cl; ret; 
0x000000001074e4: ror byte ptr [rcx+rcx*4-0xa], cl; mov edi, 0x2; mov eax, 0xe; syscall; 
0x00000000078d0c: ror byte ptr [rcx+rcx*4-0xa], cl; mov rdi, r15; mov [rbp-0x938], r9d; mov [rbp-0x930], r11b; call rax; 
0x0000000013faab: ror byte ptr [rcx+rcx*4-0xa], cl; mov rdi, r15; mov [rsp+0x8], rcx; call rbp; 
0x0000000013f87a: ror byte ptr [rcx+rcx*4-0xf], 0x4c; mov edi, ebp; call r12; 
0x0000000008713a: ror byte ptr [rcx+rcx*4-0xf], 0x4c; mov edi, edi; call r12; 
0x0000000005e685: ror byte ptr [rcx-0x16efdbbc], 0x62; idiv bh; call qword ptr [rax+0x23ffbe8]; 
0x00000000040478: ror byte ptr [rcx-0x24efdbbc], 0x1; insb [rdi], dx; and al, 0x8; ret; 
0x000000000d0ae9: ror byte ptr [rcx-0x3f76b3fe], 0x48; add esp, 0x8; ret; 
0x00000000149d06: ror byte ptr [rcx-0x77], 0x0; mov eax, 0x1; ret; 
0x0000000011563e: ror byte ptr [rcx-0x77], 0x1; or [r9-0x75], cl; add [rbx+0x94901e0], eax; ret; 
0x0000000009bf9b: ror byte ptr [rcx-0x77], 0x30; ret; 
0x00000000106f12: ror byte ptr [rcx-0x7cb7fbad], 0xc4; or [rbx+0x5d], bl; ret; 
0x000000001270db: ror byte ptr [rcx-0x7d], 0xc7; add eax, ebp; cmp ecx, [rsi-0x7cb7000d]; ret; 
0x00000000081806: ror byte ptr [rcx-0xc916ed], 0xff; jmp qword ptr [rsi-0x70]; 
0x0000000014ceb3: ror byte ptr [rcx], 0x0; add al, [rax]; add [rax], al; ret; 
0x0000000014ceb2: ror byte ptr [rcx], 0x0; add al, [rax]; add [rax], al; ret; 
0x0000000014cea8: ror byte ptr [rcx], 0x0; mov fs:[rbx], rax; pop rbx; mov dword ptr [rip+0x9c026], 0x2; ret; 
0x0000000014ced2: ror byte ptr [rcx], 0x0; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000118fa0: ror byte ptr [rcx], 0xd0; ret; 
0x0000000003f2e7: ror byte ptr [rdi+0x63], cl; adc al, 0x93; add r10, r11; notrack jmp r10; 
0x00000000041952: ror byte ptr [rdi], 0x0; add [rax], al; syscall; 
0x0000000016db9d: ror byte ptr [rdi], 0x0; add [rbp-0x77], cl; ret far; 
0x0000000010e82c: ror byte ptr [rdi], 0x11; and al, 0x11; syscall; 
0x00000000090e7d: ror byte ptr [rdi], 0x11; jle short 0x0000000000090ef2; ret; 
0x0000000008fc78: ror byte ptr [rdi], 0x11; pop rbx; ret; 
0x000000000957cd: ror byte ptr [rdi], 0x11; push 0x6e0f4966; ret; 
0x000000000b7f89: ror byte ptr [rdi], 0x1; adc [rdi+rdx-0x40], edi; ret; 
0x0000000003f897: ror byte ptr [rdi], 0x1; mov dh, 0x11; test dl, dl; jne short 0x000000000003f878; ret; 
0x0000000014d0ce: ror byte ptr [rdi], 0x1; test [rbx+0x48000000], bl; add eax, 0xa0; pop rbx; ret; 
0x0000000014d19e: ror byte ptr [rdi], 0x1; test [rbx+0x48000000], bl; add eax, 0xa8; pop rbx; ret; 
0x0000000014cffe: ror byte ptr [rdi], 0x1; test [rbx+0x48000000], bl; sub eax, 0xffffff80; pop rbx; ret; 
0x0000000014cf2e: ror byte ptr [rdi], 0x1; test [rbx+0x5b000000], bl; ret; 
0x000000001096ea: ror byte ptr [rdi], 0x1f; add [rax], r8b; endbr64; mov eax, 0x50; syscall; 
0x000000000b06e0: ror byte ptr [rdi], 0x28; jmp qword ptr [r14+0x66]; 
0x00000000151781: ror byte ptr [rdi], 0x29; and al, 0x60; movups [rsp+0x18], xmm0; call r8; 
0x0000000015ff76: ror byte ptr [rdi], 0x29; pop rdi; adc [rdx+0x9], dh; movaps [rdi], xmm4; notrack jmp r9; 
0x000000000689b1: ror byte ptr [rdi], 0x29; test [rax-0x16000005], edx; ret; 
0x0000000010e585: ror byte ptr [rdi], 0x5; cmp rax, 0xfffffffffffff000; ja short 0x000000000010e598; ret; 
0x0000000012848a: ror byte ptr [rdi], 0x5; cmp rax, 0xfffffffffffff000; ja short 0x00000000001284a0; ret; 
0x000000000d5776: ror byte ptr [rdi], 0x83; ret; 
0x00000000147864: ror byte ptr [rdi], 0x84; and eax, 0x49000001; mov eax, [rbp+0xd0]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x000000000a8a9c: ror byte ptr [rdi], 0x84; cmp eax, 0xfffffff; mov ebp, 0xf80148c0; add rax, rsi; ret; 
0x000000001592c6: ror byte ptr [rdi], 0x84; imul edi, 0xffffffff; dec dword ptr [rcx+0x49082444]; lea edi, [rsp+0x9b0]; call qword ptr [r12+0xf90]; 
0x000000000d87e9: ror byte ptr [rdi], 0x84; jmp rax; 
0x0000000007f1a1: ror byte ptr [rdi], 0x84; mov dword ptr [rax], 0x89480000; ret; 
0x0000000002b21e: ror byte ptr [rdi], 0x84; ret far; 
0x00000000035730: ror byte ptr [rdi], 0x84; ret; 
0x00000000099e56: ror byte ptr [rdi], 0x84; rol dword ptr [rax], cl; add [rax], al; call rax; 
0x00000000113d2a: ror byte ptr [rdi], 0x84; scasd [rdi]; add [rax], al; add [rax+0x39], cl; ret; 
0x0000000013e3b6: ror byte ptr [rdi], 0x84; sti; add [rax], al; add [rax-0x77], cl; ret; 
0x00000000143992: ror byte ptr [rdi], 0x84; sub [rcx], al; add [rax], al; mov rdi, r12; call qword ptr [rbx]; 
0x000000000a8866: ror byte ptr [rdi], 0x85; add [rax], al; add [rsi+0xf], ah; xlat [rbx]; ret; 
0x000000001904d4: ror byte ptr [rdi], 0x85; add eax, 0x48ffffff; add esp, 0x38; ret; 
0x00000000176a62: ror byte ptr [rdi], 0x85; cmpsd [rsi], [rdi]; idiv bh; jmp qword ptr [rsi+0xf]; 
0x000000001448ac: ror byte ptr [rdi], 0x85; imul edi, 0x315bffff; rcr byte ptr [rbp+0x41], 0x5c; ret; 
0x00000000176a1c: ror byte ptr [rdi], 0x85; in eax, dx; idiv bh; jmp qword ptr [rsi+0xf]; 
0x000000000b1f01: ror byte ptr [rdi], 0x85; pop rax; or [rax], eax; add cl, ch; ret; 
0x00000000074b08: ror byte ptr [rdi], 0x85; ret far; 
0x0000000002fb66: ror byte ptr [rdi], 0x85; ret; 
0x0000000017e4fc: ror byte ptr [rdi], 0x85; sub eax, 0xc5000001; std; xlat [rbx]; ret; 
0x00000000079490: ror byte ptr [rdi], 0x88; ret; 
0x00000000076972: ror byte ptr [rdi], 0x89; ret far; 
0x00000000034f48: ror byte ptr [rdi], 0x94; ret; 
0x000000000faffc: ror byte ptr [rdi], 0x94; ror byte ptr [rax-0x7d], 0xc4; adc [rbx+0x5d], bl; pop r12; ret; 
0x000000000503e1: ror byte ptr [rdi], 0x94; ror byte ptr [rax-0x7d], 0xc4; or [rdi], cl; mov dh, 0xc0; ret; 
0x00000000145afe: ror byte ptr [rdi], 0x95; ror byte ptr [rax-0x7d], 0xc4; or [rdi], cl; mov dh, 0xc0; ret; 
0x00000000144d50: ror byte ptr [rdi], 0x95; ror byte ptr [rdi], 0xb6; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x5d], bl; ret; 
0x00000000060fa7: ror byte ptr [rdi], 0x95; ror byte ptr [rdi], 0xb6; shl bh, 0xd8; pop rbp; ret; 
0x000000000e0c4d: ror byte ptr [rdi], 0xb6; ror byte ptr [rax-0x73], 0x44; add bh, bh; ret; 
0x00000000144d53: ror byte ptr [rdi], 0xb6; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x5d], bl; ret; 
0x00000000060faa: ror byte ptr [rdi], 0xb6; shl bh, 0xd8; pop rbp; ret; 
0x000000000fd3a3: ror byte ptr [rdi], 0xb6; shl bh, 0xd8; ret; 
0x00000000141553: ror byte ptr [rdi], 0xb6; shr bl, 0x92; nop [rax]; endbr64; ret; 
0x000000001303e3: ror byte ptr [rdi], 0xb7; ret far; 
0x000000000a8a0d: ror byte ptr [rdi], cl; mov ebp, 0xf80148c0; ret; 
0x000000000cb72f: ror byte ptr [rdi], cl; test [rdx+0x48000000], bl; bsf eax, edx; shr rax, 0x2; ret; 
0x000000000ae0eb: ror byte ptr [rdi], cl; test [rsi+0x48000000], bl; bsf eax, edx; ret; 
0x000000000ec00f: ror byte ptr [rdi], cl; test [rsi+rdi*8-0x1], cl; jmp far fword ptr [rax+0x410a7508]; 
0x00000000061724: ror byte ptr [rdx+0x14], 0x0; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x00000000110880: ror dword ptr [r8-0x77], 0x1; and al, 0x20; mov eax, 0x65; syscall; 
0x0000000017d512: ror dword ptr [rax+0x1], 0xf8; ret; 
0x000000000adc9a: ror dword ptr [rax+0x21], 0xce; je 0x00000000000addd0; bsr rsi, rsi; lea rax, [rdi+rsi]; ret; 
0x0000000008e4ea: ror dword ptr [rax+0x39], 0x1; enter 0x2876, 0x48; mov edi, ebx; call qword ptr [rbp+0x20]; 
0x0000000008462f: ror dword ptr [rax+0x39], 0x1; enter 0x2b76, 0x48; mov edi, ebx; call qword ptr [rbp+0x30]; 
0x0000000008ef6a: ror dword ptr [rax+0x39], 0x1; enter 0x3076, 0x48; mov edi, ebx; call qword ptr [rbp+0x30]; 
0x0000000008c56b: ror dword ptr [rax+0x39], 0x1; enter 0x3776, 0x48; mov edi, ebp; call qword ptr [rbx+0x88]; 
0x00000000083aea: ror dword ptr [rax+0x39], 0x1; enter 0x3876, 0x48; mov edi, ebx; call qword ptr [rbp+0x20]; 
0x000000000886a9: ror dword ptr [rax+0x39], 0x1; enter 0x5176, 0x31; test byte ptr [rax-0x77], 0xef; call qword ptr [r13+0x10]; 
0x0000000007ed4a: ror dword ptr [rax+0x39], 0x1; enter 0x5876, 0x48; mov edi, ebx; call qword ptr [rbp+0x60]; 
0x0000000008a739: ror dword ptr [rax+0x39], 0x1; enter 0x5976, 0x4c; mov edx, esp; mov rsi, r13; call qword ptr [r14+0x38]; 
0x000000000719e9: ror dword ptr [rax+0x39], 0x1; enter 0x6176, 0x4d; movsxd esp, esp; mov rdx, r12; call qword ptr [r13+0x38]; 
0x0000000008c624: ror dword ptr [rax+0x39], 0x1; enter 0x6676, 0x31; idiv byte ptr [rdx+0x2]; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x0000000008e434: ror dword ptr [rax+0x39], 0x1; enter 0x6676, 0x48; mov edi, ebx; call qword ptr [rbp+0x68]; 
0x000000000817eb: ror dword ptr [rax+0x39], 0x1; enter 0x7376, 0x48; mov edi, ebx; call qword ptr [rbp+0x68]; 
0x000000000772c8: ror dword ptr [rax+0x39], 0x1; enter 0x7a76, 0x48; movsxd ebx, ebx; mov rdx, rbx; call qword ptr [r13+0x38]; 
0x000000001595fb: ror dword ptr [rax+0x39], 0x1; ret far; 
0x000000000ea820: ror dword ptr [rax+0x63], cl; ror byte ptr [rax+0x63], cl; ret far; 
0x000000000d70e9: ror dword ptr [rax+0x69], cl; call far fword ptr [rdi]; 
0x000000001908de: ror dword ptr [rax+0x9], cl; ret far; 
0x000000000b8e6d: ror dword ptr [rax+rax], cl; cmovne rax, rdx; ret; 
0x0000000014d5cb: ror dword ptr [rax-0x1], 0x1; call qword ptr [rax-0x177e76b8]; 
0x0000000009559c: ror dword ptr [rax-0x3f], 0xe9; or [rbx+0x3d485bc1], eax; jmp far fword ptr [rcx]; 
0x000000000955ae: ror dword ptr [rax-0x3f], 0xe9; or al, 0x83; shr dword ptr [rsi+0x48], 0x3d; jmp far fword ptr [rdi+0x32760000]; 
0x00000000109b77: ror dword ptr [rax-0x73], 0x40; inc esi; jmp far fword ptr [r15]; 
0x000000001905ae: ror dword ptr [rax-0x75], 0x1; je short 0x00000000001905d7; adc [rcx-0x77], cl; ret; 
0x00000000094c5d: ror dword ptr [rax-0x75], 0x5; ret; 
0x0000000010d75e: ror dword ptr [rax-0x75], 0x7c; and al, 0x8; mov rdx, r12; mov eax, 0x10f; syscall; 
0x0000000015080c: ror dword ptr [rax-0x75], cl; or [r8-0x77], r9b; out 0x48, al; mov edi, ebp; call qword ptr [rax]; 
0x000000000ed7bc: ror dword ptr [rax-0x75], cl; sub cl, [rax-0x7d]; ret; 
0x00000000110881: ror dword ptr [rax-0x77], 0x1; and al, 0x20; mov eax, 0x65; syscall; 
0x000000001116ce: ror dword ptr [rax-0x7d], 0x1; ret; 
0x00000000028d58: ror dword ptr [rax], 0xa; add [rax], al; cmp [rsp+0x18], rcx; cmovne rdi, r14; call rdx; 
0x000000000f04c6: ror dword ptr [rbp+0x21], 0x1; ret far; 
0x0000000011ad63: ror dword ptr [rbx+0x48102454], 0x8b; je short 0x000000000011ad90; or [rax+0x12b], bh; mov edi, [rsp+0x4]; syscall; 
0x0000000010f4d7: ror dword ptr [rbx+0x48142454], 0x8b; je short 0x000000000010f504; or [rax+0x127], bh; syscall; 
0x0000000010f597: ror dword ptr [rbx+0x48142454], 0x8b; je short 0x000000000010f5c4; or [rax+0x128], bh; syscall; 
0x00000000035ab3: ror dword ptr [rbx+rbx], 0x0; lea rdi, [rip+0x1afc02]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000012bf70: ror dword ptr [rbx], 0x0; add [rcx+rax*2-0x77], esp; sbb [rcx+rcx*4-0x40], ecx; pop rbx; ret; 
0x0000000012bee7: ror dword ptr [rbx], 0x0; syscall; 
0x0000000002c8cf: ror dword ptr [rcx+0x29], 0x1; or ch, cl; ret; 
0x000000000a372b: ror dword ptr [rcx+0x29], cl; ret; 
0x00000000142f2d: ror dword ptr [rcx+0x63], 0x14; mov [rcx+rax-0x3e], cl; notrack jmp rdx; 
0x000000000b84d5: ror dword ptr [rcx+0xe181d0], 0xfc; add eax, [rax]; cmp edx, 0xff; cmove rax, rcx; ret; 
0x00000000080599: ror dword ptr [rcx+rcx*4-0x12], cl; mov rdi, r15; call qword ptr [rbp+0x38]; 
0x00000000110efb: ror dword ptr [rcx+rcx*4-0x40], cl; ret; 
0x0000000010f62f: ror dword ptr [rcx-0x77], 0xca; xor r8d, r8d; mov eax, 0x147; syscall; 
0x0000000010f78f: ror dword ptr [rcx-0x77], 0xca; xor r8d, r8d; mov eax, 0x148; syscall; 
0x0000000014cdbf: ror dword ptr [rcx], 0x0; mov fs:[rax], rdx; ret; 
0x0000000014cdbe: ror dword ptr [rcx], 0x0; mov fs:[rax], rdx; ret; 
0x00000000177a34: ror dword ptr [rdi-0x73], 0x14; or bh, [rsi]; jmp r10; 
0x0000000008e474: ror dword ptr [rdi], 0x11; cmp [r11+0x5d], bl; pop r12; ret; 
0x0000000002bdad: ror dword ptr [rdi], 0x11; ret; 
0x00000000083e59: ror dword ptr [rdi], 0x11; xor [rcx+0x5d5b7453], cl; pop r12; ret; 
0x00000000040cc8: ror dword ptr [rdi], 0x54; add eax, 0x175a50; orps xmm0, [rip+0x175a59]; mulss xmm0, [rip+0x1766f9]; ret; 
0x00000000040ca3: ror dword ptr [rdi], 0x54; add eax, 0x175a75; orps xmm0, [rip+0x175a8e]; mulss xmm0, [rip+0x176722]; ret; 
0x000000000d6aca: ror dword ptr [rdi], 0x84; sbb [r8], r8; add [rcx], ch; ret; 
0x00000000187be8: ror dword ptr [rdi], 0x85; adc [rdx], cl; add [rax], al; xor eax, eax; ret; 
0x000000001882f4: ror dword ptr [rdi], 0x85; add al, 0x3; add [rax], al; xor eax, eax; ret; 
0x000000001880c6: ror dword ptr [rdi], 0x85; add eax, 0xc0310000; ret; 
0x000000001891f0: ror dword ptr [rdi], 0x85; cmp al, 0x2; add [rax], al; xor eax, eax; ret; 
0x00000000188046: ror dword ptr [rdi], 0x85; cmpsb [rsi], [rdi]; add eax, 0xc0310000; ret; 
0x00000000188384: ror dword ptr [rdi], 0x85; je short 0x000000000018838b; add [rax], al; xor eax, eax; ret; 
0x00000000187e7b: ror dword ptr [rdi], 0x85; jno short 0x0000000000187e87; add [rax], al; xor eax, eax; ret; 
0x00000000187f43: ror dword ptr [rdi], 0x85; mov ch, 0x6; add [rax], al; xor eax, eax; ret; 
0x00000000187bc0: ror dword ptr [rdi], 0x85; sub al, 0xa; add [rax], al; xor eax, eax; ret; 
0x0000000013703c: ror dword ptr [rdi], 0x87; in eax, dx; add [rax], al; add [rcx-0x77], al; ret far; 
0x000000000a8895: ror dword ptr [rdi], 0xbd; ror byte ptr [rax+0x1], 0xf8; ret; 
0x0000000017e51e: ror dword ptr [rdi], 0xbd; ror byte ptr [rax+0x1], 0xf8; vzeroupper; ret; 
0x00000000032911: ror dword ptr [rdi], cl; test [rdi+rdi*8-0x1], al; dec dword ptr [rcx-0x73]; add cl, [rax+0x39]; ret far; 
0x00000000083bff: ror dword ptr [rdi], cl; xchg [rdx+0x44000001], cl; mov esi, esp; mov rdi, r14; call qword ptr [rax+0x18]; 
0x000000000a061b: ror dword ptr [rdx-0x73], cl; or eax, 0x8d28eb00; inc qword ptr [r9-0x7d]; ret; 
0x0000000007aa1b: ror dword ptr [rip+0x63490000], 0x1; ret; 
0x0000000009d340: ror dword ptr [rsi], 0x1; add [rax-0x73], cl; adc eax, 0xed0d6; cmove rax, rdx; ret; 
0x00000000028cdc: ror eax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000002901d: ror eax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000045459: ror eax, 0x11; xor rax, fs:[0x30]; mov fs:[rbx], rdx; mov rdi, [rbp+0x8]; call rax; 
0x00000000137ac7: ror eax, 0x11; xor rax, fs:[0x30]; mov qword ptr [rsp], 0x0; call rax; 
0x000000000d9250: ror eax, 0x11; xor rax, fs:[0x30]; pop r13; pop r14; jmp rax; 
0x0000000013e601: ror edi, 0x11; xor rdi, fs:[0x30]; call rax; 
0x00000000044a49: ror edx, 0x11; xor rdx, fs:[0x30]; call rdx; 
0x000000000d0262: ror edx, 0x2; cmp edx, 0x28f5c28; jbe short 0x00000000000d0270; ret; 
0x0000000009d33f: ror qword ptr [r14], 0x1; add [rax-0x73], cl; adc eax, 0xed0d6; cmove rax, rdx; ret; 
0x000000000d70e8: ror qword ptr [r8+0x69], cl; call far fword ptr [rdi]; 
0x00000000061e97: ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000028cdb: ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000002901c: ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000045458: ror rax, 0x11; xor rax, fs:[0x30]; mov fs:[rbx], rdx; mov rdi, [rbp+0x8]; call rax; 
0x00000000137ac6: ror rax, 0x11; xor rax, fs:[0x30]; mov qword ptr [rsp], 0x0; call rax; 
0x000000000d924f: ror rax, 0x11; xor rax, fs:[0x30]; pop r13; pop r14; jmp rax; 
0x0000000013e600: ror rdi, 0x11; xor rdi, fs:[0x30]; call rax; 
0x00000000044a48: ror rdx, 0x11; xor rdx, fs:[0x30]; call rdx; 
0x000000000596ef: rstorssp [r8-0x8]; saveprevssp; mov [r9+0x3a8], rdi; mov rsp, rdx; ret; 
0x000000000d8f9c: sahf; adc [rax], al; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000dd597: sahf; adc [rax], al; syscall; 
0x000000001364fe: sahf; add [rax], al; add [rax+0x63], cl; fisttp dword ptr [rax+0x1], st; ret; 
0x0000000006a991: sahf; add rax, rsi; notrack jmp rax; 
0x00000000127b77: sahf; cmc; call qword ptr [rax-0x18]; 
0x00000000127b76: sahf; cmc; call qword ptr [rax-0x18]; 
0x000000000ed99e: sahf; mov ebx, esi; call far fword ptr [rbx+0x4c]; 
0x00000000099a16: sahf; nop [rax+rax]; mov rsi, r12; call rax; 
0x0000000011dd23: sahf; or al, 0x0; syscall; 
0x0000000013ee2f: sahf; or al, [rax]; syscall; 
0x0000000013ee2e: sahf; or al, [rax]; syscall; 
0x0000000012e43b: sahf; or eax, [rax]; syscall; 
0x0000000013c44a: sahf; out dx, al; jmp qword ptr [rbp+rax*2-0x77]; 
0x0000000013c449: sahf; out dx, al; jmp qword ptr [rbp+rax*2-0x77]; 
0x000000001249aa: sahf; ret; 
0x00000000039006: sahf; sbb al, [rax]; add rax, 0x200; mov fs:[rdx], rax; ret; 
0x00000000038f67: sahf; sbb al, [rax]; add rax, fs:[0x0]; ret; 
0x00000000038f68: sahf; sbb al, [rax]; add rax, fs:[0x0]; ret; 
0x00000000029038: sahf; sbb eax, [rax]; add rax, fs:[0x0]; ret; 
0x0000000014f8df: sahf; std; jmp qword ptr [rsi+0x66]; 
0x00000000124577: sar bh, 0x1; dec dword ptr [rcx]; ret; 
0x0000000012c721: sar bh, 0x1; jmp qword ptr [rsi+0x2e]; 
0x0000000010c48a: sar bh, 0x1; jmp qword ptr [rsp+rax*2-0x77]; 
0x0000000014232f: sar bh, 0x53; sbb bl, ch; mov edx, 0xfe7416e8; jmp qword ptr [rsi+0xf]; 
0x000000000b053b: sar bh, 0xff; call qword ptr [rax+0xf11280f]; 
0x00000000170631: sar bh, 0xff; jmp qword ptr [rsi+0x66]; 
0x00000000055c85: sar bh, 0xff; ret; 
0x00000000055c62: sar bh, 0xff; sub eax, ecx; mov [rdx], eax; mov eax, 0x1; ret; 
0x00000000055e2f: sar bh, 0xff; sub eax, r8d; mov [rsi], eax; mov eax, 0x2; ret; 
0x000000000d3a68: sar bh, cl; jmp qword ptr [rsi-0x7f]; 
0x000000000da1a2: sar byte ptr [r8+0xd9], 0x1; syscall; 
0x0000000014101d: sar byte ptr [rax+0x10], 0x4c; mov eax, esp; pop r12; ret; 
0x0000000010da09: sar byte ptr [rax+0x11d], cl; mov rdx, rsi; xor esi, esi; syscall; 
0x000000001193e6: sar byte ptr [rax+0x121], cl; mov edx, 0x8; syscall; 
0x0000000011b58c: sar byte ptr [rax+0x14], cl; syscall; 
0x000000001070a8: sar byte ptr [rax+0x15], 0x48; cmp ebx, eax; pop rbx; setl al; ret; 
0x0000000011b2d6: sar byte ptr [rax+0x1d], cl; syscall; 
0x0000000010e639: sar byte ptr [rax+0x8], cl; mov eax, [rdi+0x8]; and eax, 0x100f; ret; 
0x000000000da1a3: sar byte ptr [rax+0xd9], 0x1; syscall; 
0x000000000d43ef: sar byte ptr [rax+0xd], 0x8b; jl short 0x00000000000d4419; xor [rcx-0x77], al; ret; 
0x00000000156757: sar byte ptr [rax+0xe], 0x48; add esp, 0x8; pop rbp; pop r12; ret; 
0x0000000013776f: sar byte ptr [rax+0xe], cl; mov rax, rdx; movsxd rdx, ecx; ret; 
0x00000000110677: sar byte ptr [rax], 0x48; cmove eax, ebx; pop rbx; ret; 
0x000000000eacc9: sar byte ptr [rax], 0xe; je 0x00000000000eac2d; ret; 
0x0000000014d108: sar byte ptr [rbp+0x20009], 0x1; add [rax], al; pop rbx; ret; 
0x00000000119217: sar byte ptr [rbx+rdx+0x74], 0x1; ret; 
0x00000000110638: sar byte ptr [rcx+0x5], 0x41; mov byte ptr [rsp], 0x0; mov rax, r12; pop r12; ret; 
0x000000000cb167: sar byte ptr [rcx], 0xd0; jne short 0x00000000000cb170; mov eax, r8d; ret; 
0x000000000d9179: sar byte ptr [rdi+0x1], 0xb8; out 0x0, al; add [rax], al; syscall; 
0x0000000012170a: sar byte ptr [rdi+0x2000001], 0x21; enter 0x4c88, 0x24; and [rax+0x411f2444], cl; call qword ptr [rsp+0x28]; 
0x0000000005303d: sar byte ptr [rdi+0x2], cl; mov r10d, 0x8; mov eax, 0xe; syscall; 
0x00000000108a77: sar byte ptr [rdi-0x64], 0xb8; add [rcx], eax; add [rax], al; syscall; 
0x000000000e0ab6: sar byte ptr [rdx+0x100], 0x1; mov eax, 0x20; cmove rax, rdx; ret; 
0x000000000dda27: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x109a62]; syscall; 
0x000000000dd8e7: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x109ba2]; syscall; 
0x000000000dd82f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x109c5a]; syscall; 
0x000000000dd753: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x109d2e]; syscall; 
0x000000000dd583: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x109ebe]; syscall; 
0x000000000dd3bf: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10a03a]; syscall; 
0x000000000dd005: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10a39c]; syscall; 
0x000000000dbd57: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10b5c2]; syscall; 
0x000000000dbc17: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10b702]; syscall; 
0x000000000dbb5f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10b7ba]; syscall; 
0x000000000db793: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10bb7e]; syscall; 
0x000000000db5c3: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10bd0e]; syscall; 
0x000000000db3ff: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10be8a]; syscall; 
0x000000000dab07: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10c72a]; syscall; 
0x000000000ceb33: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1185f6]; syscall; 
0x000000000ce93f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1187ea]; syscall; 
0x000000000c6673: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x11efd6]; syscall; 
0x00000000099893: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x14a2f6]; syscall; 
0x0000000009b223: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x14bcce]; syscall; 
0x0000000009af9f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x14bf52]; syscall; 
0x0000000009adbf: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x14c132]; syscall; 
0x0000000009abd3: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x14c31e]; syscall; 
0x0000000009ab63: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x14c38e]; syscall; 
0x00000000096ee3: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x14cca6]; syscall; 
0x00000000096e83: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x14cd06]; syscall; 
0x00000000096ab3: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x14d0d6]; syscall; 
0x00000000096853: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x14d336]; syscall; 
0x0000000009620b: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x14d97e]; syscall; 
0x000000000961d3: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x14d9b6]; syscall; 
0x00000000097eb2: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x14efb7]; syscall; 
0x00000000097417: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x14fa42]; syscall; 
0x000000000930ee: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x153d7b]; syscall; 
0x00000000093072: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x153de7]; syscall; 
0x00000000092dcb: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x15409e]; syscall; 
0x00000000092b1f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x15434a]; syscall; 
0x00000000092054: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x154795]; syscall; 
0x00000000091eaf: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x15493a]; syscall; 
0x00000000091d23: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x154ac6]; syscall; 
0x0000000008ff26: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x156733]; syscall; 
0x0000000008f9e5: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x156c74]; syscall; 
0x0000000008f655: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x157004]; syscall; 
0x0000000008f2f5: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x157364]; syscall; 
0x0000000008dbd1: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x158a88]; syscall; 
0x0000000008d8e1: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x158d78]; syscall; 
0x0000000008d5dd: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x15907c]; syscall; 
0x00000000080cc2: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x165957]; syscall; 
0x000000000808c6: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x165d53]; syscall; 
0x0000000008081a: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x165dff]; syscall; 
0x0000000007e973: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x166cd6]; syscall; 
0x0000000005f197: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x18745a]; syscall; 
0x0000000005ef13: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1876da]; syscall; 
0x0000000005cd8f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x18984a]; syscall; 
0x0000000005cc4f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x18998a]; syscall; 
0x00000000052e77: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x193742]; syscall; 
0x00000000052cb3: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x193906]; syscall; 
0x000000000527a3: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x193e16]; syscall; 
0x00000000050397: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x195ff2]; syscall; 
0x00000000050213: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x196176]; syscall; 
0x000000000501b3: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1961d6]; syscall; 
0x00000000045a4f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1a0902]; syscall; 
0x0000000004598f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1a09c2]; syscall; 
0x000000000458c7: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1a0a8a]; syscall; 
0x000000000457ef: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1a0b62]; syscall; 
0x000000000448e7: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1a11ea]; syscall; 
0x00000000044822: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1a12af]; syscall; 
0x0000000004467f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1a1452]; syscall; 
0x000000000445a6: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1a152b]; syscall; 
0x0000000003d010: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1a89e1]; syscall; 
0x0000000003b685: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1aa334]; syscall; 
0x0000000003a4d4: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1ab435]; syscall; 
0x0000000003a4b4: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1ab455]; syscall; 
0x0000000003a34a: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1ab5bf]; syscall; 
0x0000000002ac57: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1ba9f2]; syscall; 
0x0000000002aaeb: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1bab5e]; syscall; 
0x0000000002a9f3: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1bac56]; syscall; 
0x00000000026841: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1bf258]; syscall; 
0x0000000019196f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x54162]; syscall; 
0x00000000191b2f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x54cba]; syscall; 
0x00000000191e4f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x567f2]; syscall; 
0x0000000015804f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9107e]; syscall; 
0x00000000156d57: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x92376]; syscall; 
0x00000000156c77: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x92456]; syscall; 
0x00000000156a8f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9263e]; syscall; 
0x000000001569ff: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x926ce]; syscall; 
0x0000000015695f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9276e]; syscall; 
0x000000001568af: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9281e]; syscall; 
0x000000001564df: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x92bee]; syscall; 
0x0000000014c2df: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9cbd2]; syscall; 
0x0000000014c17f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9cd32]; syscall; 
0x0000000014bf73: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9cf3e]; syscall; 
0x0000000014bdd3: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9d0de]; syscall; 
0x0000000014bc3f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9d272]; syscall; 
0x0000000014baff: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9d3b2]; syscall; 
0x0000000014b99f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9d512]; syscall; 
0x0000000014b88f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9d622]; syscall; 
0x000000001483ff: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa0a96]; syscall; 
0x0000000013f4cb: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa977e]; syscall; 
0x0000000013f19b: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa9aae]; syscall; 
0x0000000013ee1b: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa9e2e]; syscall; 
0x0000000013ec1d: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xaa02c]; syscall; 
0x0000000013ea93: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xaa1b6]; syscall; 
0x0000000013e856: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xaa3f3]; syscall; 
0x0000000013de0f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xaad72]; syscall; 
0x0000000013dc8e: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xaaef3]; syscall; 
0x0000000013dc54: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xaaf2d]; syscall; 
0x0000000013db47: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xab03a]; syscall; 
0x0000000013d307: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xab87a]; syscall; 
0x0000000013d23f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xab942]; syscall; 
0x0000000013d123: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xaba5e]; syscall; 
0x0000000013bd90: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xacba1]; syscall; 
0x0000000013850f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb0132]; syscall; 
0x00000000138233: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb040e]; syscall; 
0x00000000133f53: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb46da]; syscall; 
0x000000001339d3: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb4c3e]; syscall; 
0x0000000013380f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb4dba]; syscall; 
0x00000000133747: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb4e22]; syscall; 
0x00000000133607: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb4f62]; syscall; 
0x0000000013354f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb501a]; syscall; 
0x00000000132e5f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb5702]; syscall; 
0x00000000132b2f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb5a32]; syscall; 
0x00000000132973: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb5bee]; syscall; 
0x00000000132459: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb6064]; syscall; 
0x0000000012eb67: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb983a]; syscall; 
0x0000000012ea27: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb997a]; syscall; 
0x0000000012e96f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb9a32]; syscall; 
0x0000000012e883: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb9b16]; syscall; 
0x0000000012e6b3: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb9cb6]; syscall; 
0x0000000012e4ef: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb9e52]; syscall; 
0x0000000012e427: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb9eca]; syscall; 
0x0000000012e2e7: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xba00a]; syscall; 
0x0000000012e22f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xba0c2]; syscall; 
0x0000000012e14f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xba19a]; syscall; 
0x0000000012dc83: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xba5ee]; syscall; 
0x0000000012d6b3: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbab5e]; syscall; 
0x0000000012d193: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbb036]; syscall; 
0x0000000012cfc7: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbb1c2]; syscall; 
0x0000000012ce87: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbb302]; syscall; 
0x0000000012cdcf: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbb3ba]; syscall; 
0x0000000012ccef: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbb492]; syscall; 
0x0000000012c8d3: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbb866]; syscall; 
0x0000000012c2b7: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbbe22]; syscall; 
0x0000000012c15f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbbf7a]; syscall; 
0x0000000012c09f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbc03a]; syscall; 
0x0000000012bfb7: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbc11a]; syscall; 
0x0000000012bed3: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbc1c6]; syscall; 
0x0000000012b873: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbc7e6]; syscall; 
0x0000000012b667: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbc9aa]; syscall; 
0x0000000012b50f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbcb02]; syscall; 
0x0000000012b44f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbcbc2]; syscall; 
0x0000000012b367: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbcca2]; syscall; 
0x0000000012a753: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbd83e]; syscall; 
0x0000000012a4e3: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbda6e]; syscall; 
0x00000000129d63: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbe18e]; syscall; 
0x00000000120307: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc7b32]; syscall; 
0x000000001201c7: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc7c72]; syscall; 
0x0000000012010f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc7d2a]; syscall; 
0x0000000011fd35: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc80fc]; syscall; 
0x0000000011fb0b: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc82ee]; syscall; 
0x0000000011f943: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc846e]; syscall; 
0x0000000011f77f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc85ea]; syscall; 
0x0000000011f6af: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc8666]; syscall; 
0x0000000011f5df: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc8736]; syscall; 
0x0000000011f543: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc87d2]; syscall; 
0x0000000011eaa7: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc923a]; syscall; 
0x0000000011e967: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc937a]; syscall; 
0x0000000011e8af: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc9432]; syscall; 
0x0000000011e2b5: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc9a24]; syscall; 
0x0000000011e0b3: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc9bce]; syscall; 
0x0000000011ded3: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc9d46]; syscall; 
0x0000000011dd0f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc9ea2]; syscall; 
0x0000000011360f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xd422a]; syscall; 
0x000000001134f3: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xd4346]; syscall; 
0x00000000113093: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xd47a6]; syscall; 
0x00000000112b62: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xd4cd7]; syscall; 
0x00000000101553: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xe6056]; syscall; 
0x000000000272b8: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; syscall; 
0x000000000973ec: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, ebx; syscall; 
0x00000000044cb8: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov rdi, r12; mov eax, 0xca; syscall; 
0x000000000452b1: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov rdi, r13; mov eax, 0xca; syscall; 
0x00000000044ad1: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov rdi, r14; mov eax, 0xca; syscall; 
0x000000000918f8: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov rdi, rbp; mov eax, 0xca; syscall; 
0x000000000982a5: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov rdi, rbx; mov eax, 0xca; syscall; 
0x0000000009921a: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov rdi, rcx; mov eax, 0xca; syscall; 
0x00000000090b49: sar byte ptr [rdx+0x2], cl; mov esi, 0x80; mov eax, 0xca; syscall; 
0x000000001377ed: sar byte ptr [rdx+0x7fffffff], 0x1; add eax, ecx; cmovs eax, edx; ret; 
0x0000000014f7ad: sar byte ptr [rdx-0x1], 0x4c; mov esi, esi; mov rdi, r12; call r13; 
0x00000000151529: sar byte ptr [rdx-0x1], 0x4c; mov esi, esi; mov rdi, rbp; call r12; 
0x000000001513fb: sar byte ptr [rdx-0x1], 0x4c; mov esi, esp; mov rdi, rbx; call rcx; 
0x000000000ad7b9: sar byte ptr [rdx], 0x48; lea eax, [rdi+rax]; cmp [rax], sil; cmovne rax, rdx; ret; 
0x0000000009f655: sar byte ptr [rdx], cl; cmove rax, rdx; ret; 
0x000000001157e1: sar byte ptr [rsi+0x1], cl; call r12; 
0x00000000091293: sar byte ptr [rsi+0x80], cl; mov eax, r8d; syscall; 
0x00000000028885: sar byte ptr [rsi], 0x1; jmp rax; 
0x0000000015fe7a: sar byte ptr [rsi], 0x41; jmp rcx; 
0x00000000189b5b: sar ch, 0xff; jmp qword ptr [rdx-0xf]; 
0x0000000009a4f6: sar ch, 0xff; jmp qword ptr [rsi+0xf]; 
0x000000000d086c: sar dh, 0xff; jmp far fword ptr [rbx]; 
0x0000000011ffb2: sar dh, 0xff; jmp qword ptr [rsi+0x2e]; 
0x0000000006c41e: sar dl, 0xff; dec dword ptr [rax-0x77]; ret; 
0x00000000067afc: sar dl, 0xff; inc dword ptr [rcx-0x77]; ret; 
0x0000000006c34e: sar dl, 0xff; jmp qword ptr [rbx+rcx*4]; 
0x00000000189519: sar dword ptr [rax+rcx*2+0x11], 0x1; imul edi, ebp, 0x487cd162; adc [rcx-0x2], esi; vmovups [r9-0x40], zmm7; ret; 
0x000000001899b1: sar dword ptr [rax+rcx*2+0x11], 0x1; jmp qword ptr [r10-0x2f]; 
0x00000000189520: sar dword ptr [rax+rcx*2+0x11], 0x1; jno short 0x0000000000189524; vmovups [r9-0x40], zmm7; ret; 
0x00000000189527: sar dword ptr [rax+rcx*2+0x11], 0x1; jns short 0x000000000018952c; ret; 
0x000000000b8532: sar dword ptr [rax], 0x1; and ch, 0xf0; pop rbx; cmovne rax, rdx; ret; 
0x0000000018a390: sar dword ptr [rbp+0x48], 0x1; out 0x49, eax; jmp qword ptr [rdx-0x2f]; 
0x0000000011c0c3: sar dword ptr [rcx-0x74b7fff4], 0x1; sbb [rsi-0x7d], spl; add [rcx], al; ret; 
0x0000000011c0d3: sar dword ptr [rcx-0x74b7fff4], 0x40; sbb [rbx-0x6f3cff00], al; ret; 
0x00000000137286: sar dword ptr [rcx], 0x1; iretd; ja short 0x0000000000137274; mov eax, 0xffffffff; ret; 
0x0000000015a631: sar dword ptr [rdx+0x1], 0x1; shl rdx, cl; or [rdi+rax*8], rdx; xor eax, eax; ret; 
0x0000000007b269: sar dword ptr [rdx+0x1], cl; jmp rcx; 
0x000000000758f8: sar dword ptr [rdx+0x1], cl; jmp rsi; 
0x0000000011aed9: sar dword ptr [rdx], 0x1; cmovb rax, rdx; ret; 
0x0000000018538d: sar dword ptr [rsi+0x7f], 0x23; vzeroupper; ret; 
0x000000000725ad: sar dword ptr [rsi], 0x1; jmp rcx; 
0x0000000004043a: sar eax, 0x10; ret; 
0x00000000090dc7: sar eax, 0x1; and eax, 0x1; mov [rsi], eax; xor eax, eax; ret; 
0x00000000040b3f: sar eax, 0x1f; not eax; and eax, edx; ret; 
0x0000000015c848: sar eax, 0x1f; ret; 
0x000000000403ec: sar eax, 0x1f; sub ecx, edx; not eax; and eax, ecx; ret; 
0x00000000090e07: sar eax, 0x2; and eax, 0x1; mov [rsi], eax; xor eax, eax; ret; 
0x00000000087356: sar eax, 0x2; mov [rcx], rax; xor eax, eax; pop rbx; ret; 
0x000000000847c3: sar eax, 0x2; mov r8d, [rdi+0x10]; sub r8d, eax; mov eax, r8d; ret; 
0x00000000084efd: sar eax, 0x2; ret; 
0x00000000040e79: sar eax, 0x3f; not eax; and eax, ecx; ret; 
0x0000000004076e: sar eax, 0x3f; not eax; and eax, edx; ret; 
0x000000001296d1: sar eax, 0x6; ret; 
0x0000000018a20d: sar ebp, 0x1; jg short 0x000000000018a25b; jmp qword ptr [rdx-0x2f]; 
0x0000000002623b: sar ebp, 0xff; call qword ptr [rax-0x5e1f00d]; 
0x0000000014c447: sar ebp, cl; jmp qword ptr [rsi+0xf]; 
0x000000000caaab: sar ebx, 0xff; call qword ptr [rax+0x166f0ff3]; 
0x0000000008471c: sar ecx, 0x2; lea eax, [rcx-0x1]; ret; 
0x0000000002603b: sar edi, 0xff; call qword ptr [rax-0x5e1f00d]; 
0x0000000006930a: sar edi, cl; jmp qword ptr [rsi+0xf]; 
0x0000000014fba5: sar edx, 0x20; mov [rsp+0x8], rdx; call qword ptr [rax+0x8]; 
0x00000000150b3a: sar edx, 0x20; mov [rsp], edx; call qword ptr [rax+0x48]; 
0x00000000138ca0: sar edx, 0x4; mov [rbx+0x10], rax; mov eax, 0x14; add edx, 0x1; syscall; 
0x000000000a8bb8: sar edx, cl; movzx edx, dl; sub eax, edx; ret; 
0x000000000ae0e7: sar edx, cl; test rdx, rdx; je 0x00000000000ae190; bsf rax, rdx; ret; 
0x000000000adf88: sar edx, cl; test rdx, rdx; je short 0x00000000000adfa0; bsf rax, rdx; ret; 
0x000000000adf2b: sar edx, cl; test rdx, rdx; je short 0x00000000000adfb0; bsf rax, rdx; ret; 
0x000000000ae157: sar edx, cl; test rdx, rdx; je short 0x00000000000ae180; bsf rax, rdx; ret; 
0x0000000018a187: sar esi, 0x1; jg short 0x000000000018a1af; vzeroupper; ret; 
0x0000000018a312: sar esi, 0x1; jg short 0x000000000018a33a; vzeroupper; ret; 
0x000000000cac6b: sar esi, 0xff; call qword ptr [rax+0xf6f0ff3]; 
0x0000000002613b: sar esi, 0xff; call qword ptr [rax-0x5e1f00d]; 
0x00000000047452: sar esi, 0xff; jmp qword ptr [rsi+0x2e]; 
0x000000000b9a7e: sar esi, 0xff; jmp qword ptr [rsi+0xf]; 
0x000000000f6449: sar esi, cl; bnd jmp qword ptr [rsi+0xf]; 
0x00000000087355: sar rax, 0x2; mov [rcx], rax; xor eax, eax; pop rbx; ret; 
0x000000000847c2: sar rax, 0x2; mov r8d, [rdi+0x10]; sub r8d, eax; mov eax, r8d; ret; 
0x00000000084efc: sar rax, 0x2; ret; 
0x00000000040e78: sar rax, 0x3f; not eax; and eax, ecx; ret; 
0x0000000004076d: sar rax, 0x3f; not eax; and eax, edx; ret; 
0x000000001296d0: sar rax, 0x6; ret; 
0x0000000008471b: sar rcx, 0x2; lea eax, [rcx-0x1]; ret; 
0x0000000014fba4: sar rdx, 0x20; mov [rsp+0x8], rdx; call qword ptr [rax+0x8]; 
0x00000000150b39: sar rdx, 0x20; mov [rsp], edx; call qword ptr [rax+0x48]; 
0x00000000138c9f: sar rdx, 0x4; mov [rbx+0x10], rax; mov eax, 0x14; add edx, 0x1; syscall; 
0x000000000a8bb7: sar rdx, cl; movzx edx, dl; sub eax, edx; ret; 
0x000000000ae0e6: sar rdx, cl; test rdx, rdx; je 0x00000000000ae190; bsf rax, rdx; ret; 
0x000000000adf87: sar rdx, cl; test rdx, rdx; je short 0x00000000000adfa0; bsf rax, rdx; ret; 
0x000000000adf2a: sar rdx, cl; test rdx, rdx; je short 0x00000000000adfb0; bsf rax, rdx; ret; 
0x000000000ae166: sar rdx, cl; test rdx, rdx; je short 0x00000000000ae180; bsf rax, rdx; ret; 
0x000000000ae156: sar rdx, cl; test rdx, rdx; je short 0x00000000000ae180; bsf rax, rdx; ret; 
0x000000000596f5: saveprevssp; mov [r9+0x3a8], rdi; mov rsp, rdx; ret; 
0x000000000e83fa: sbb [r10+rdx*2-0x73], r14b; push rax; add [rax-0x7d], ecx; ret; 
0x0000000008dfcf: sbb [r11+0x480c2474], cl; mov edi, [rsp]; add rsp, 0x10; pop rbx; jmp rax; 
0x0000000009b972: sbb [r11+0x5d], bl; pop r12; ret; 
0x0000000014337b: sbb [r11+0xe7603f8], r8b; mov eax, 0x2; ret; 
0x0000000008aa84: sbb [r15], cl; adc [rbx+0x28], eax; pop rbx; ret; 
0x000000001597d3: sbb [r8+0x5a], bl; pop rbx; ret; 
0x000000000b74d4: sbb [r8], r14b; in eax, dx; mov [rdi+0x19], ch; ret; 
0x000000000b74f6: sbb [r8], r14b; in eax, dx; mov [rdi+0x1a], ch; ret; 
0x000000000b7534: sbb [r8], r14b; in eax, dx; mov [rdi+0x1c], ch; ret; 
0x000000000d6acd: sbb [r8], r8; add [rcx], ch; ret; 
0x00000000028d91: sbb [r8], r8b; mov rsi, [rax]; xor eax, eax; call qword ptr [rdx+0x260]; 
0x000000000889ef: sbb [r9+r9*4-0x20], al; pop rbx; pop rbp; pop r12; ret; 
0x000000001511fc: sbb [r9+r9*4-0x40], r8b; ret; 
0x0000000014e75c: sbb [r9+rcx*4-0x11], r9b; call qword ptr [rax+0x20]; 
0x00000000159506: sbb [r9-0x73], r9b; mov ebp, 0x988; call qword ptr [r13+0xf90]; 
0x00000000190d87: sbb [r9-0x75], r9b; push rbp; adc [rax-0x7d], cl; ret; 
0x00000000149c98: sbb [r9], r8b; add [rax], al; add [rdi], cl; adc [rdi+0x8], eax; ret; 
0x00000000108c0b: sbb [rax+0x101], bh; syscall; 
0x0000000010e1b8: sbb [rax+0x115], bh; syscall; 
0x0000000011acb8: sbb [rax+0x120], bh; syscall; 
0x000000000e7d7a: sbb [rax+0x1], edi; ret; 
0x000000000438be: sbb [rax+0x24048b48], dl; mov rdx, r14; mov rsi, r13; mov rdi, r12; call rax; 
0x0000000011a863: sbb [rax+0x2c], bh; mov rsi, [rsp+0x10]; mov edi, [rsp+0x8]; syscall; 
0x0000000011afc8: sbb [rax+0x45], bh; syscall; 
0x000000001597d4: sbb [rax+0x5a], bl; pop rbx; ret; 
0x0000000004393e: sbb [rax+0x758b49], dl; mov rdi, [r12]; mov rdx, r14; mov rax, [rsp]; call rax; 
0x000000000f08ec: sbb [rax+0x9], cl; push rbp; mov eax, 0xfffa7be9; jmp qword ptr [rsi+0xf]; 
0x000000000b85d8: sbb [rax+0xf], dh; add al, ch; outsd dx, [rsi]; add al, 0xf8; jmp qword ptr [rsi+0x66]; 
0x00000000064cea: sbb [rax+rax], ah; add [rbx-0x5a76b], cl; inc dword ptr [rbx-0x78f0d006]; ret far; 
0x000000000e0a22: sbb [rax+rdi*4+0x7f], edx; add [rax], al; add [rdx+0x7d00], bh; cmove rax, rdx; ret; 
0x00000000108e2b: sbb [rax-0x2708fff3], esp; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000044a62: sbb [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x000000000b3ca3: sbb [rax-0x73], cl; jg short 0x00000000000b3cc0; jne 0x00000000000b4270; ret; 
0x000000000b5427: sbb [rax-0x73], cl; jg short 0x00000000000b5444; jne 0x00000000000b5ac0; ret; 
0x0000000010abfd: sbb [rax-0x73], cl; sub [r9+r9*4-0xa], cl; mov edx, [rdx+rax]; call qword ptr [rbx+0x40]; 
0x000000000fbb22: sbb [rax-0x73], ecx; adc eax, 0xafb56; movsxd rax, [rdx+rdi*4]; add rax, rdx; notrack jmp rax; 
0x000000000b3cc6: sbb [rax-0x73], ecx; jg short 0x00000000000b3ce4; jne 0x00000000000b4270; ret; 
0x000000000b545a: sbb [rax-0x73], ecx; jg short 0x00000000000b5478; jne 0x00000000000b5ac0; ret; 
0x00000000159767: sbb [rax-0x75], cl; add eax, 0x896c9; mov rdi, [rsp]; mov rax, [rax+0x268]; jmp rax; 
0x000000000f031f: sbb [rax-0x75], cl; cmp ecx, [rax-0x7d]; ret; 
0x00000000033bdf: sbb [rax-0x75], cl; je short 0x0000000000033c08; mov rdi, [rsp+0x38]; call r15; 
0x00000000108cdb: sbb [rax-0x75], cl; je short 0x0000000000108d04; adc [rcx-0x77], al; ror byte ptr [rbx+0x3108247c], 0xc0; syscall; 
0x0000000010b013: sbb [rax-0x75], cl; je short 0x000000000010b03c; sub [rax-0x73], cl; sub [r10+0x1], r15b; call qword ptr [rbp+0x40]; 
0x0000000010b2f3: sbb [rax-0x75], cl; je short 0x000000000010b31c; sub [rax-0x73], cl; sub [r10+0x5], r15b; call qword ptr [rbp+0x40]; 
0x0000000010b373: sbb [rax-0x75], cl; je short 0x000000000010b39c; sub [rax-0x73], cl; sub [r10+0x2], r15b; call qword ptr [rbp+0x40]; 
0x0000000010ff1a: sbb [rax-0x75], cl; je short 0x000000000010ff43; adc [rax+0x17], bh; mov edi, [rsp+0xc]; syscall; 
0x0000000011b07a: sbb [rax-0x75], cl; je short 0x000000000011b0a3; adc [rax+0x46], bh; mov edi, [rsp+0x8]; syscall; 
0x00000000045726: sbb [rax-0x75], ecx; adc [rbx+0x48], bl; mov dword ptr [rip+0x1a0c29], 0x0; mov eax, [rax+0x58]; ret; 
0x00000000110a4f: sbb [rax-0x77], cl; add eax, 0xd6be9; mov eax, 0x1; add rsp, 0x8; ret; 
0x0000000008de86: sbb [rax-0x77], cl; movups [rdi+0x8], xmm0; ret; 
0x00000000148777: sbb [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x48]; 
0x00000000085fae: sbb [rax-0x77], cl; ret far; 
0x00000000077291: sbb [rax-0x77], cl; ret; 
0x00000000055c16: sbb [rax-0x7b], ecx; div byte ptr [rbp+0x2c]; mov dword ptr [rdx], 0x0; mov eax, 0x1; ret; 
0x00000000108646: sbb [rax-0x7d], cl; in al, dx; sbb byte ptr [rbp+0x41], 0x5c; pop r13; ret; 
0x0000000002c0f2: sbb [rax-0x7d], cl; ret; 
0x00000000156078: sbb [rax-0x7d], ecx; ret; 
0x000000000cbae6: sbb [rax-0x7d], ecx; rol byte ptr [rdx], 0xc3; nop [rax]; add rax, 0x1; ret; 
0x000000000920d5: sbb [rax], al; add [rax], al; syscall; 
0x00000000108ca8: sbb [rax], al; add [rax], al; test eax, eax; jne short 0x0000000000108cc0; syscall; 
0x0000000016d29e: sbb [rax], al; add [rbp-0x77], cl; ret far; 
0x0000000005f156: sbb [rax], al; add [rcx+rcx*4-0x40], eax; pop rbx; ret; 
0x0000000008f32b: sbb [rax], al; add cl, ch; ret far; 
0x0000000005cef7: sbb [rax], al; mov rcx, r14; call qword ptr [rax+r8*8]; 
0x00000000028cc2: sbb [rax], al; mov rsi, [rax]; xor eax, eax; call qword ptr [rdx+0x260]; 
0x0000000002887d: sbb [rax], al; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000053021: sbb [rax], al; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000060fdd: sbb [rax], al; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000028dd9: sbb [rax], al; ret; 
0x000000000895bc: sbb [rax], al; setne r8b; mov eax, r8d; ret; 
0x0000000005cc64: sbb [rax], al; syscall; 
0x000000000b74d5: sbb [rax], dh; in eax, dx; mov [rdi+0x19], ch; ret; 
0x000000000b74f7: sbb [rax], dh; in eax, dx; mov [rdi+0x1a], ch; ret; 
0x000000000b7535: sbb [rax], dh; in eax, dx; mov [rdi+0x1c], ch; ret; 
0x00000000141406: sbb [rax], eax; add [rax-0x75], cl; and al, 0x8; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x00000000119f28: sbb [rax], eax; add [rax], al; syscall; 
0x000000000abdce: sbb [rax], eax; add [rbp-0x77], cl; ret far; 
0x000000000d6ace: sbb [rax], eax; add [rcx], ch; ret; 
0x000000000a2c29: sbb [rax], eax; add bh, dh; ret; 
0x00000000050b31: sbb [rax], eax; mov byte ptr [r8+rax], 0x0; mov rax, r8; ret; 
0x00000000045e0d: sbb [rax], eax; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000464e5: sbb [rax], eax; mov dword ptr fs:[rax], 0x5; mov eax, 0xffffffff; ret; 
0x000000000453ce: sbb [rax], eax; mov rax, fs:[r12]; lock add qword ptr [rax+0x460], 0x1; lea rdi, [rbp+0x988]; call qword ptr [rbp+0xf90]; 
0x00000000046435: sbb [rax], eax; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000052869: sbb [rax], eax; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000527b7: sbb [rax], eax; syscall; 
0x000000000501c8: sbb [rax], eax; syscall; 
0x000000000c6a43: sbb [rbp+0x31], al; ror byte ptr [rax-0x77], 0xef; call rbx; 
0x000000000da4e8: sbb [rbp+0x31], al; sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; syscall; 
0x00000000045874: sbb [rbp+0x4c], bl; mov eax, esp; pop r12; ret; 
0x00000000141e34: sbb [rbp+0x7], cl; add [rbp+rcx*4+0x4c], cl; and al, 0x2c; call qword ptr [rax]; 
0x0000000011b12b: sbb [rbp+0xc], edi; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x2]; mov eax, 0xffffffff; ret; 
0x0000000013a58d: sbb [rbp+0xf], eax; mov dh, 0x7d; or [rcx-0x80], al; jmp qword ptr [rax]; 
0x00000000142548: sbb [rbp+rcx*4+0x4c], cl; and al, 0x40; call qword ptr [rax]; 
0x000000000d99a4: sbb [rbp-0x3eb7fff0], bh; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x000000000e1db8: sbb [rbp-0x7b], cl; push qword ptr [rdx+rcx+0x48]; mov edi, ebx; call r15; 
0x000000000dd8bf: sbb [rbx+0x109bd92d], al; add [rcx], al; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x000000000dbbef: sbb [rbx+0x10b7392d], al; add [rcx], al; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x0000000008dfd0: sbb [rbx+0x480c2474], cl; mov edi, [rsp]; add rsp, 0x10; pop rbx; jmp rax; 
0x0000000013738a: sbb [rbx+0x49], bl; mov [rcx], eax; mov eax, ecx; ret; 
0x00000000091c76: sbb [rbx+0x5d5b0ce0], al; ret; 
0x000000000976dc: sbb [rbx+0x5d], bl; pop r12; jmp rax; 
0x00000000088965: sbb [rbx+0x5d], bl; pop r12; pop r13; pop r14; ret; 
0x0000000007733a: sbb [rbx+0x5d], bl; pop r12; pop r13; ret; 
0x0000000009b973: sbb [rbx+0x5d], bl; pop r12; ret; 
0x000000000412c8: sbb [rbx+0x5d], bl; ret; 
0x00000000091157: sbb [rbx+0x5fba01fe], al; add [rax], al; add [rax+0x16], bh; cmove eax, edx; ret; 
0x000000000f385f: sbb [rbx+0xa4ba], cl; add [rsi+0xf], ah; outsb dx, [rsi]; ret; 
0x000000001335df: sbb [rbx+0xb4f992d], al; add [rcx], al; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x0000000012e9ff: sbb [rbx+0xb99b12d], al; add [rcx], al; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x0000000012e2bf: sbb [rbx+0xba0412d], al; add [rcx], al; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x0000000012ce5f: sbb [rbx+0xbb3392d], al; add [rcx], al; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x0000000012019f: sbb [rbx+0xc7ca92d], al; add [rcx], al; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x0000000011e93f: sbb [rbx+0xc93b12d], al; add [rcx], al; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x0000000011b32b: sbb [rbx+0xc], edi; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x2]; mov eax, 0xffffffff; ret; 
0x0000000014337c: sbb [rbx+0xe7603f8], al; mov eax, 0x2; ret; 
0x0000000014b304: sbb [rbx-0x1], bh; inc dword ptr [rbp+0x487474c0]; mov eax, [rbp+0x60]; mov rdi, r13; call qword ptr [rax+0x20]; 
0x0000000008fb9b: sbb [rbx-0x2fd6efb9], cl; ret; 
0x00000000152433: sbb [rbx-0x3], esi; jmp qword ptr [rsi+0xf]; 
0x00000000119612: sbb [rbx-0x47f7db84], cl; adc al, 0x1; add [rax], al; syscall; 
0x0000000011c0d9: sbb [rbx-0x6f3cff00], al; ret; 
0x00000000094c89: sbb [rcx+rcx*4+0x5c], cl; and al, 0x10; call rax; 
0x0000000014e75d: sbb [rcx+rcx*4-0x11], cl; call qword ptr [rax+0x20]; 
0x00000000086eda: sbb [rcx+rcx*4-0x11], cl; lea r9, [rsp+0x28]; call rbp; 
0x000000001470de: sbb [rcx+rcx*4-0x19], cl; call qword ptr [rax+0x8]; 
0x0000000005ceeb: sbb [rcx+rcx*4-0x19], cl; sub rsi, rax; mov rax, [rip+0x18c3e7]; mov rcx, r14; call qword ptr [rax+r8*8]; 
0x000000000c68bc: sbb [rcx+rcx*4-0x1f], cl; mov rdx, r13; call rbx; 
0x00000000141d28: sbb [rcx+rcx*4-0x20], al; pop rbx; pop r12; ret; 
0x000000000889f0: sbb [rcx+rcx*4-0x20], al; pop rbx; pop rbp; pop r12; ret; 
0x00000000089d77: sbb [rcx+rcx*4-0x20], cl; pop rbx; pop rbp; pop r12; ret; 
0x000000001379bd: sbb [rcx+rcx*4-0x40], al; pop rbx; pop rbp; ret; 
0x00000000151187: sbb [rcx+rcx*4-0x40], al; ret; 
0x0000000009a01d: sbb [rcx+rcx*4-0x40], cl; pop rbx; pop r12; ret; 
0x000000001511bf: sbb [rcx+rcx*4-0x40], cl; ret; 
0x0000000013717e: sbb [rcx+rcx*4-0x40], eax; ret; 
0x000000000db3ca: sbb [rcx+rcx*4-0x40], ecx; pop rbx; ret; 
0x000000001592b7: sbb [rcx+rcx*4-0xe], cl; mov esi, 0x40; mov rdi, rbx; call rax; 
0x000000000d022b: sbb [rcx+rdx], ebp; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x2]; mov eax, 0xffffffff; ret; 
0x00000000110123: sbb [rcx-0x17f3db84], cl; mov [0x410c247c8bfff808], eax; mov eax, eax; mov eax, 0x4a; syscall; 
0x00000000109503: sbb [rcx-0x17f3db84], cl; ret; 
0x00000000153633: sbb [rcx-0x3], esp; jmp qword ptr [rsi+0xf]; 
0x0000000003ae54: sbb [rcx-0x72b7ffe6], bh; cmp eax, 0x1aaae1; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000159507: sbb [rcx-0x73], cl; mov ebp, 0x988; call qword ptr [r13+0xf90]; 
0x00000000190d88: sbb [rcx-0x75], cl; push rbp; adc [rax-0x7d], cl; ret; 
0x000000000e9581: sbb [rcx-0x7d], ecx; ret; 
0x00000000149c99: sbb [rcx], al; add [rax], al; add [rdi], cl; adc [rdi+0x8], eax; ret; 
0x000000000f7abb: sbb [rcx], al; add [rax], al; or ch, al; ret far; 
0x000000000418e4: sbb [rcx], al; add [rax], al; ret; 
0x0000000010dd98: sbb [rcx], al; add [rax], al; syscall; 
0x000000000e5896: sbb [rcx], bh; ret; 
0x00000000060746: sbb [rcx], dh; jmp qword ptr [rax+rcx*2-0x75]; 
0x000000000869ce: sbb [rcx], dh; rcr byte ptr [rbx+0x5d], 0x41; pop rsp; pop r13; ret; 
0x000000000e09e4: sbb [rcx], eax; add [rax+0x7f], bh; mov edx, 0x7d00; cmove rax, rdx; ret; 
0x0000000011937c: sbb [rcx], eax; add [rax], al; mov edi, [rsp+0x4]; syscall; 
0x0000000011932a: sbb [rcx], eax; add [rax], al; syscall; 
0x00000000159a2e: sbb [rcx], esi; shr bl, 0xda; nop [rax+rax]; mov rax, [rip+0x8f889]; call qword ptr [rax+0x8]; 
0x00000000159936: sbb [rcx], esi; shr bl, 0xdb; nop [rax+rax]; mov rax, [rip+0x8f981]; call qword ptr [rax]; 
0x0000000009f612: sbb [rdi*1-0x3fceea8c], edi; ret; 
0x000000000cc00a: sbb [rdi+0x23], edi; mov rax, r12; pop r12; ret; 
0x000000001559fa: sbb [rdi+0x4de80005], edi; xor dh, ch; jmp qword ptr [rsi+0x66]; 
0x0000000014d3be: sbb [rdi+rcx+0x5b], dh; pop rbp; pop r12; ret; 
0x0000000008aa85: sbb [rdi], cl; adc [rbx+0x28], eax; pop rbx; ret; 
0x0000000014d937: sbb [rdi], cl; adc [rsp+0x38], eax; call qword ptr [rax+0x18]; 
0x00000000060f6c: sbb [rdi], cl; mov dh, 0xc0; neg eax; ret; 
0x000000001214d2: sbb [rdi], cl; mov esi, 0xc48348c3; or [rbx+0x5d], bl; ret; 
0x000000001055f6: sbb [rdi], ecx; mov dh, 0xc0; movsxd rax, [r12+rax*4]; add rax, r12; notrack jmp rax; 
0x000000000b545e: sbb [rdi], ecx; test [rbx+0x6], ebx; add [rax], al; ret; 
0x000000000e83fb: sbb [rdx+rdx*2-0x73], dh; push rax; add [rax-0x7d], ecx; ret; 
0x00000000111c2b: sbb [rdx], edx; or eax, 0x64d8f700; mov [rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000110288: sbb [rdx], edx; sub [rdi-0x11e2153], bh; mov eax, 0xa9; syscall; 
0x000000001662c7: sbb [rip+0x14634900], al; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000191589: sbb [rip-0x74b79c00], al; adc [rax-0x7d], cl; ret; 
0x00000000083f46: sbb [rsi+0x1f], dh; mov rax, [rax+0xe0]; mov esi, 0xffffffff; call qword ptr [rax+0x18]; 
0x0000000014b654: sbb [rsi+0x6], bh; call qword ptr [rax+0x28]; 
0x0000000014b61b: sbb [rsi+0x6], bh; mov rax, [rdi+0x8]; call qword ptr [rax+0x28]; 
0x00000000041c3f: sbb [rsi+0x8], bh; mov eax, 0x82; syscall; 
0x0000000011c0ca: sbb [rsi-0x7d], ah; add [rcx], al; ret; 
0x0000000011c0c9: sbb [rsi-0x7d], spl; add [rcx], al; ret; 
0x000000000d2b69: sbb [rsi-0x7f], ah; loop 0x00000000000d2b6e; and [rax-0x80], al; call qword ptr [rax]; 
0x00000000040b99: sbb [rsi], dl; add [rdi], cl; push rsp; ret; 
0x000000000b63e7: sbb [rsi], ebp; str [rcx+0x63]; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000040b98: sbb [rsi], r10b; add [rdi], cl; push rsp; ret; 
0x00000000141e86: sbb al, 0x0; add [rax], al; add bl, ch; mov eax, 0xfe78bee8; jmp qword ptr [rsi+0x66]; 
0x00000000107c7c: sbb al, 0x0; add [rax], al; syscall; 
0x0000000017b639: sbb al, 0x0; add [rbp-0x77], cl; ret far; 
0x0000000017b593: sbb al, 0x0; add [rcx+0x29], cl; ret far; 
0x00000000125a8f: sbb al, 0x20; je short 0x0000000000125aa0; pop rbx; ret; 
0x000000000f50b3: sbb al, 0x24; mov rax, rdx; movsxd rdx, [r13+rdx*4]; add rdx, r13; notrack jmp rdx; 
0x000000000f7949: sbb al, 0x24; mov rax, rdx; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x0000000014b4f4: sbb al, 0x48; add esp, 0x10; pop rbx; ret; 
0x0000000004284a: sbb al, 0x48; add esp, 0x98; pop rbp; pop r12; ret; 
0x000000000b3d59: sbb al, 0x48; lea edi, [rdi+0x1c]; jne 0x00000000000b4270; ret; 
0x000000000b54ed: sbb al, 0x48; lea edi, [rdi+0x1c]; jne 0x00000000000b5ac0; ret; 
0x0000000007d77e: sbb al, 0x48; lea edi, [rip+0x12afd2]; movsxd rsi, [rdi+rsi*4]; add rsi, rdi; notrack jmp rsi; 
0x000000000de73c: sbb al, 0x48; mov edx, [rsp+0x10]; mov eax, 0xf7; syscall; 
0x000000000b5514: sbb al, 0x49; sub eax, 0x1d; lea rdi, [rdi+0x1d]; jne 0x00000000000b5ac0; ret; 
0x000000000e4a64: sbb al, 0x85; test byte ptr [rdi], 0x85; ret; 
0x000000000e3ff3: sbb al, 0x8b; add ecx, [rax-0x77]; fimul st, dword ptr [rax-0x7d]; ret; 
0x0000000018dd55: sbb al, 0x99; add rcx, rbx; notrack jmp rcx; 
0x00000000141203: sbb al, 0xa; add [rbx-0x389bdff5], al; add [rip-0x48000000], bl; sbb eax, 0x5b000000; ret; 
0x00000000149cc4: sbb al, 0xb8; add [rax], eax; add [rax], al; movups [r8], xmm2; ret; 
0x000000000e7e33: sbb al, 0xb8; add al, [rax]; add [rax], al; ret; 
0x0000000015a530: sbb al, 0xf2; cld; jmp qword ptr [rsi+0x66]; 
0x000000000deb4b: sbb al, 0xf4; mov eax, esi; syscall; 
0x000000000b76bc: sbb al, 0xf; add [rbx+0x63], cl; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000158830: sbb al, 0xf; std; jmp qword ptr [rsi+0x2e]; 
0x00000000086e42: sbb al, 0xfb; jmp qword ptr [rsi+0x66]; 
0x000000000da584: sbb al, 0xfc; jmp qword ptr [rsi+0xf]; 
0x00000000137a7e: sbb al, 0xff; jmp qword ptr [rsi+0x66]; 
0x00000000045731: sbb al, [rax]; add [rax], al; add [rax], al; mov eax, [rax+0x58]; ret; 
0x00000000113921: sbb al, [rax]; add [rax], al; syscall; 
0x0000000017b81a: sbb al, [rax]; add [rbp-0x77], cl; ret far; 
0x000000000a2c1d: sbb al, [rax]; add bh, dh; ret; 
0x00000000039007: sbb al, [rax]; add rax, 0x200; mov fs:[rdx], rax; ret; 
0x00000000038f69: sbb al, [rax]; add rax, fs:[0x0]; ret; 
0x00000000046139: sbb al, [rax]; add rsp, 0x8; ret; 
0x00000000044b46: sbb al, [rax]; cmp rbx, r12; jae short 0x0000000000044b5b; nop [rax]; call qword ptr [rbx]; 
0x00000000037310: sbb al, [rax]; lea rax, [rip+0x1ae547]; ret; 
0x00000000039aa7: sbb al, [rax]; lea rdi, [r13+0x80]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003d0bc: sbb al, [rax]; lea rdi, [rip+0x1a87fb]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003d05b: sbb al, [rax]; lea rdi, [rip+0x1a885c]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003b187: sbb al, [rax]; lea rdi, [rip+0x1aa7f0]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003b11e: sbb al, [rax]; lea rdi, [rip+0x1aa859]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003afef: sbb al, [rax]; lea rdi, [rip+0x1aa988]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003af8f: sbb al, [rax]; lea rdi, [rip+0x1aa9e8]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003aead: sbb al, [rax]; lea rdi, [rip+0x1aaa8a]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003ae56: sbb al, [rax]; lea rdi, [rip+0x1aaae1]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003abd0: sbb al, [rax]; lea rdi, [rip+0x1aaae7]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003aad2: sbb al, [rax]; lea rdi, [rip+0x1aabe5]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003aba9: sbb al, [rax]; lea rdi, [rip+0x1aad0e]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003a963: sbb al, [rax]; lea rdi, [rip+0x1aad54]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003aaab: sbb al, [rax]; lea rdi, [rip+0x1aae0c]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003a938: sbb al, [rax]; lea rdi, [rip+0x1aaf7f]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003a595: sbb al, [rax]; lea rdi, [rip+0x1ab122]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003a665: sbb al, [rax]; lea rdi, [rip+0x1ab2d2]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003a5bc: sbb al, [rax]; lea rdi, [rip+0x1ab2fb]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003a620: sbb al, [rax]; lea rdi, [rip+0x1ab317]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000039046: sbb al, [rax]; lea rdi, [rip+0x1ac871]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000038582: sbb al, [rax]; lea rdi, [rip+0x1ad135]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000384a7: sbb al, [rax]; lea rdi, [rip+0x1ad210]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000038432: sbb al, [rax]; lea rdi, [rip+0x1ad285]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000038396: sbb al, [rax]; lea rdi, [rip+0x1ad321]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000038118: sbb al, [rax]; lea rdi, [rip+0x1ad59f]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000037d8f: sbb al, [rax]; lea rdi, [rip+0x1ad928]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000037b90: sbb al, [rax]; lea rdi, [rip+0x1adb27]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000387d5: sbb al, [rax]; mov [rax], rdx; ret; 
0x00000000041925: sbb al, [rax]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000417e5: sbb al, [rax]; mov dword ptr fs:[rax], 0x16; mov rax, 0xffffffffffffffff; ret; 
0x0000000004072f: sbb al, [rax]; mov dword ptr fs:[rax], 0x22; add rsp, 0x8; ret; 
0x00000000042419: sbb al, [rax]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x0000000003fb25: sbb al, [rax]; mov dword ptr fs:[rax], 0x2a; mov rax, r10; ret; 
0x0000000003fb85: sbb al, [rax]; mov dword ptr fs:[rax], 0x9; mov eax, 0xffffffff; pop rbp; ret; 
0x00000000042617: sbb al, [rax]; mov eax, edx; ret; 
0x000000000358cc: sbb al, [rax]; mov rax, [rax+rbx*8]; test rax, rax; je short 0x00000000000358d9; call rax; 
0x000000000373a9: sbb al, [rax]; mov rax, fs:[rax]; mov rax, [rax]; mov eax, [rax+0xa8]; ret; 
0x00000000039f49: sbb al, [rax]; mov rdi, r12; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000416a3: sbb al, [rax]; mov rsi, rsp; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000038819: sbb al, [rax]; movsxd rdi, edi; mov rax, fs:[rax]; mov rax, [rax+rdi*8+0x80]; ret; 
0x00000000041bd9: sbb al, [rax]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000041c15: sbb al, [rax]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000037317: sbb al, [rax]; ret; 
0x000000000356c0: sbb al, [rax]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000088a32: sbb al, [rax]; sti; jmp qword ptr [rsi+0x2e]; 
0x0000000003a35f: sbb al, [rax]; syscall; 
0x00000000103685: sbb al, [rbp+0x7a840fdb]; add [rax], eax; add [rbx-0x6af0fe05], al; ret; 
0x000000001233f5: sbb al, [rbx-0x17cfd1a]; add [rbp+0x19], eax; rol byte ptr [rcx-0x7d], 0xc0; add [rbp+0x440f45f6], eax; ret far; 
0x0000000013a9ad: sbb al, [rcx-0x80]; jmp far fword ptr [rdi]; 
0x00000000166147: sbb al, [rip+0x14634900]; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000102b26: sbb al, ch; adc al, 0x38; call far fword ptr [rax+0x5a]; 
0x000000000de863: sbb al, ch; and ebx, edi; dec dword ptr [rcx+0x22b8c7]; add [rax], al; syscall; 
0x0000000013b14d: sbb al, ch; in eax, dx; mov cl, 0xee; jmp qword ptr [rsi+0xf]; 
0x00000000059db7: sbb al, ch; ret; 
0x0000000012bfca: sbb al, cl; or eax, [rax]; syscall; 
0x0000000017b819: sbb al, fs:[rax]; add [rbp-0x77], cl; ret far; 
0x000000000e7e23: sbb bh, [rax+0x2]; ret; 
0x00000000113b72: sbb bh, [rip+0x415d000d]; pop rsp; pop r13; ret; 
0x00000000147a5c: sbb bh, ah; jmp qword ptr [rsi-0x7d]; 
0x000000000fb864: sbb bh, ah; std; jmp qword ptr [rsp+rax*2-0x77]; 
0x00000000137c63: sbb bh, bh; jmp qword ptr [rsi+0x2e]; 
0x000000000c71a0: sbb bh, dh; jmp qword ptr [rsi+0x2e]; 
0x00000000113c04: sbb bl, al; hlt; dec dword ptr [rcx+rcx*4-0x20]; pop r12; ret; 
0x000000000fd16a: sbb bl, al; nop [rax]; endbr64; mov eax, 0x8e; syscall; 
0x00000000097c03: sbb bl, al; nop [rax]; mov rsi, [rsp+0x18]; add rsp, 0x18; jmp rax; 
0x00000000142332: sbb bl, ch; mov edx, 0xfe7416e8; jmp qword ptr [rsi+0xf]; 
0x000000000f4a4b: sbb bl, dh; jmp qword ptr [rsi+0xf]; 
0x000000000f4a4a: sbb bl, dh; jmp qword ptr [rsi+0xf]; 
0x000000000b401a: sbb bl, dh; movq [rdi], mm0; mov [rdi+0x10], rdx; mov [rdi+0x18], cl; ret; 
0x000000000b334b: sbb bl, dh; movq [rdi], mm0; mov [rdi+0x10], rdx; mov [rdi+0x18], cx; ret; 
0x000000000b338a: sbb bl, dh; movq [rdi], mm0; mov [rdi+0x10], rdx; mov [rdi+0x18], ecx; ret; 
0x00000000125fa7: sbb bl, dh; movq mm1, [rbx+0x30]; mov [rbp-0x80], eax; movups [rbp-0x78], xmm1; call rcx; 
0x00000000126143: sbb bl, dh; movq mm2, [rbx+0x30]; mov [rbp-0x80], eax; movups [rbp-0x78], xmm2; call r8; 
0x000000000b4019: sbb bl, r14b; movq [rdi], mm0; mov [rdi+0x10], rdx; mov [rdi+0x18], cl; ret; 
0x000000000b334a: sbb bl, r14b; movq [rdi], mm0; mov [rdi+0x10], rdx; mov [rdi+0x18], cx; ret; 
0x000000000b3389: sbb bl, r14b; movq [rdi], mm0; mov [rdi+0x10], rdx; mov [rdi+0x18], ecx; ret; 
0x0000000010864a: sbb byte ptr [rbp+0x41], 0x5c; pop r13; ret; 
0x0000000009d073: sbb byte ptr [rcx+rax], 0x0; adc [rax-0x73], cl; add eax, 0x1a660; cmove rax, rdx; ret; 
0x0000000016cbdd: sbb byte ptr [rdi], 0x0; add [rbp-0x77], cl; ret far; 
0x0000000015c6fc: sbb byte ptr [rsi+0x3145ffec], 0xc0; add rsp, 0x8; mov eax, r8d; ret; 
0x000000001567b1: sbb ch, bh; jmp qword ptr [rsi+0x2e]; 
0x000000000b3cfb: sbb cl, [rax-0x73]; jg short 0x00000000000b3d1a; jne 0x00000000000b4270; ret; 
0x000000000b548f: sbb cl, [rax-0x73]; jg short 0x00000000000b54ae; jne 0x00000000000b5ac0; ret; 
0x000000000909ad: sbb cl, [rax-0x75]; add eax, 0x155d9b; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009097d: sbb cl, [rax-0x75]; add eax, 0x155dc3; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009094d: sbb cl, [rax-0x75]; add eax, 0x155deb; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009091d: sbb cl, [rax-0x75]; add eax, 0x155e13; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000908ed: sbb cl, [rax-0x75]; add eax, 0x155e3b; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000908bd: sbb cl, [rax-0x75]; add eax, 0x155e63; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009084d: sbb cl, [rax-0x75]; add eax, 0x155ea3; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009081d: sbb cl, [rax-0x75]; add eax, 0x155ecb; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000907ed: sbb cl, [rax-0x75]; add eax, 0x155ef3; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000907bd: sbb cl, [rax-0x75]; add eax, 0x155f1b; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000015a7dd: sbb cl, [rax-0x75]; add eax, 0x8bf33; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000015a7ad: sbb cl, [rax-0x75]; add eax, 0x8bf5b; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000015a77d: sbb cl, [rax-0x75]; add eax, 0x8bf83; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000015a74d: sbb cl, [rax-0x75]; add eax, 0x8bfab; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000006b6a0: sbb cl, [rax-0x77]; or [rbx-0x7bf00005], al; ret; 
0x000000000311f9: sbb cl, [rcx-0x73]; add cl, [rax+0x39]; ret far; 
0x000000000b3cff: sbb cl, [rdi]; test [rdx+0x5], ebp; add [rax], al; ret; 
0x000000000e5893: sbb cl, al; clc; sbb [rcx], bh; ret; 
0x0000000008f8d1: sbb cl, ch; imul edi, 0xffffffff; jmp qword ptr [rsi+0xf]; 
0x00000000085809: sbb cl, ch; paddw mm7, mm7; call qword ptr [rax-0x76df377d]; 
0x000000000a06c6: sbb cl, ch; ret far; 
0x00000000097bf1: sbb cl, ch; test eax, 0x66ffffab; nop [rax+rax]; add rsp, 0x18; ret; 
0x00000000044b00: sbb dh, bh; jmp qword ptr [rbx+rcx*4+0x4]; 
0x0000000013ab7e: sbb dh, dh; dec dword ptr [rax-0x77]; ret; 
0x00000000071403: sbb dl, [r15]; add [rbx-0x51f43], cl; jmp qword ptr [rcx+rcx*4+0x38]; 
0x00000000140032: sbb dl, [rdi-0xceffff]; call qword ptr [rsp+0x70]; 
0x00000000071404: sbb dl, [rdi]; add [rbx-0x51f43], cl; jmp qword ptr [rcx+rcx*4+0x38]; 
0x00000000166509: sbb dword ptr [rax], 0x5; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000b30c1: sbb dword ptr [rbp+0xf], 0x0; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000eace3: sbb dword ptr [rbx-0x3d], 0x66; nop [rax+rax]; ret; 
0x000000000524d9: sbb dword ptr [rbx], 0xffffffff; dec dword ptr [rax-0x77]; ret; 
0x00000000111de8: sbb dword ptr [rcx+0xd], 0x0; and ecx, [rcx+rcx*4-0x40]; mov byte ptr [rsi-0x1], 0x0; ret; 
0x00000000078579: sbb dword ptr [rdx+0xc], 0x0; add [rax-0x77], cl; fimul st, dword ptr [rcx+rcx*4-0x1]; call qword ptr [r12+0x38]; 
0x000000001857de: sbb dword ptr [rip+0x31000002], 0xffffffc0; vzeroupper; ret; 
0x0000000011cf4b: sbb dword ptr [rsi+0xc], 0x64ff8900; mov rax, [rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x4; ret; 
0x00000000127b1b: sbb dword ptr [rsi-0x74b7000b], 0x6418244c; sub rcx, [0x28]; jne short 0x0000000000127b3c; add rsp, 0xd8; ret; 
0x00000000165f09: sbb dword ptr [rsi], 0x5; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000010aa35: sbb eax, 0x0; ret; 
0x0000000009617e: sbb eax, 0x10014da; pop rbp; ret; 
0x0000000008feb1: sbb eax, 0x1567c2; add dword ptr [rip+0x1567b7], 0x1; pop rbx; ret; 
0x00000000040b97: sbb eax, 0x161844; andps xmm0, xmm3; andnps xmm3, xmm1; orps xmm0, xmm3; ret; 
0x0000000003f2df: sbb eax, 0x162cf4; movzx r10d, r10b; movsxd r10, [r11+r10*4]; add r10, r11; notrack jmp r10; 
0x0000000007a68f: sbb eax, 0x18c; add rcx, rbx; mov rbx, rdx; xor edx, edx; jmp rcx; 
0x000000000b3d85: sbb eax, 0x1d7f8d48; jne 0x00000000000b4270; ret; 
0x000000000b5519: sbb eax, 0x1d7f8d48; jne 0x00000000000b5ac0; ret; 
0x000000000b5544: sbb eax, 0x1ee88349; lea rdi, [rdi+0x1e]; jne 0x00000000000b5ac0; ret; 
0x000000001150c1: sbb eax, 0x1f0f3ceb; add [rax-0x73], cl; push rbx; or [rax-0x7d], cl; ret; 
0x00000000189095: sbb eax, 0x2e5f6; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018901b: sbb eax, 0x2e670; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000188f8c: sbb eax, 0x2e6ff; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000188d81: sbb eax, 0x2e90a; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000188c4f: sbb eax, 0x2ea3c; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000188b89: sbb eax, 0x2eb02; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000188b0b: sbb eax, 0x2eb80; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000188a76: sbb eax, 0x2ec15; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000188879: sbb eax, 0x2ee12; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000188747: sbb eax, 0x2ef44; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018864a: sbb eax, 0x2f041; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000187a65: sbb eax, 0x2fae6; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x000000001879eb: sbb eax, 0x2fb60; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018795c: sbb eax, 0x2fbef; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000187751: sbb eax, 0x2fdfa; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018761f: sbb eax, 0x2ff2c; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000187559: sbb eax, 0x2fff2; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x000000001874db: sbb eax, 0x30070; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000187446: sbb eax, 0x30105; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000187249: sbb eax, 0x30302; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000187117: sbb eax, 0x30434; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018700c: sbb eax, 0x3053f; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000011a6b2: sbb eax, 0x45c93145; xor eax, eax; mov eax, 0x2c; syscall; 
0x0000000011a492: sbb eax, 0x45c93145; xor eax, eax; mov eax, 0x2d; syscall; 
0x00000000167424: sbb eax, 0x46f00ff2; or eax, 0xef00ff2; movdqu [rdi+0xd], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000010da0b: sbb eax, 0x48000001; mov edx, esi; xor esi, esi; syscall; 
0x000000000e03fb: sbb eax, 0x48000005; add esp, 0xb8; pop rbx; pop rbp; ret; 
0x0000000018dd4f: sbb eax, 0x480002a9; movsxd ebx, [rcx+rbx*4]; add rcx, rbx; notrack jmp rcx; 
0x00000000157305: sbb eax, 0x488d0009; jmp qword ptr [rsi-0x7d]; 
0x0000000011962f: sbb eax, 0x48fff774; mov eax, [rsp+0x8]; add rsp, 0x28; ret; 
0x00000000114b5f: sbb eax, 0x49000001; mov edi, [rbp]; call rbx; 
0x0000000003a157: sbb eax, 0x49001ac6; lea edi, [rbp+0x80]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000f9777: sbb eax, 0x4c000e98; mov eax, [rax]; mov [rax], rdi; mov rax, r8; ret; 
0x000000000b3d89: sbb eax, 0x4e0850f; add [rax], al; ret; 
0x000000001695a3: sbb eax, 0x4eaa8; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169245: sbb eax, 0x4ee06; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001693f0: sbb eax, 0x4ee9b; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001690c5: sbb eax, 0x4ef86; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169188: sbb eax, 0x4f103; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168f45: sbb eax, 0x4f106; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169008: sbb eax, 0x4f283; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168dc5: sbb eax, 0x4f286; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168e88: sbb eax, 0x4f403; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168c45: sbb eax, 0x4f406; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168d09: sbb eax, 0x4f582; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168ac5: sbb eax, 0x4f586; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168b88: sbb eax, 0x4f703; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168945: sbb eax, 0x4f706; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168a08: sbb eax, 0x4f883; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001687c5: sbb eax, 0x4f886; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168888: sbb eax, 0x4fa03; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168645: sbb eax, 0x4fa06; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168708: sbb eax, 0x4fb83; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001684c5: sbb eax, 0x4fb86; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168588: sbb eax, 0x4fd03; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168345: sbb eax, 0x4fd06; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168408: sbb eax, 0x4fe83; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001681c5: sbb eax, 0x4fe86; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168288: sbb eax, 0x50003; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168045: sbb eax, 0x50006; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168108: sbb eax, 0x50183; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000167ec5: sbb eax, 0x50186; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000167f88: sbb eax, 0x50303; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000167d45: sbb eax, 0x50306; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000167bcc: sbb eax, 0x5047f; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000167e08: sbb eax, 0x50483; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000167c88: sbb eax, 0x50603; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001679c1: sbb eax, 0x5068a; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000167b4b: sbb eax, 0x50740; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001679e4: sbb eax, 0x508a7; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000167aa1: sbb eax, 0x50a6a; sub rdx, 0x80; movsxd r9, [r11+r9*4]; add r9, r11; notrack jmp r9; 
0x00000000167a3a: sbb eax, 0x50a91; sub rdx, 0x80; movsxd r9, [r11+r9*4]; add r9, r11; notrack jmp r9; 
0x00000000166a6f: sbb eax, 0x510dc; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166745: sbb eax, 0x51406; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001668dc: sbb eax, 0x514af; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001665c5: sbb eax, 0x51586; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166688: sbb eax, 0x51703; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166445: sbb eax, 0x51706; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166508: sbb eax, 0x51883; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001662c5: sbb eax, 0x51886; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166388: sbb eax, 0x51a03; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166145: sbb eax, 0x51a06; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166209: sbb eax, 0x51b82; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165fc5: sbb eax, 0x51b86; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166088: sbb eax, 0x51d03; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165e45: sbb eax, 0x51d06; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165f08: sbb eax, 0x51e83; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165cc5: sbb eax, 0x51e86; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165d88: sbb eax, 0x52003; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165b45: sbb eax, 0x52006; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165c08: sbb eax, 0x52183; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001659c5: sbb eax, 0x52186; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165a88: sbb eax, 0x52303; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165845: sbb eax, 0x52306; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165908: sbb eax, 0x52483; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001656c5: sbb eax, 0x52486; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165788: sbb eax, 0x52603; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165545: sbb eax, 0x52606; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165608: sbb eax, 0x52783; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001653c5: sbb eax, 0x52786; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165488: sbb eax, 0x52903; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165245: sbb eax, 0x52906; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001650cc: sbb eax, 0x52a7f; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165308: sbb eax, 0x52a83; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000164e66: sbb eax, 0x52b25; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000164da9: sbb eax, 0x52be2; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165188: sbb eax, 0x52c03; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000164ee1: sbb eax, 0x52c6a; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000164cbe: sbb eax, 0x52ccd; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016504b: sbb eax, 0x52d40; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000164bf3: sbb eax, 0x52d98; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000164ecd: sbb eax, 0x52ebe; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000164fa1: sbb eax, 0x5306a; sub rdx, 0x80; movsxd r9, [r11+r9*4]; add r9, r11; notrack jmp r9; 
0x00000000164f3f: sbb eax, 0x5308c; sub rdx, 0x80; movsxd r9, [r11+r9*4]; add r9, r11; notrack jmp r9; 
0x00000000163bd4: sbb eax, 0x53db7; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000163b36: sbb eax, 0x53e55; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000163a84: sbb eax, 0x53f07; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001639e6: sbb eax, 0x53fa5; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000163934: sbb eax, 0x54057; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000163896: sbb eax, 0x540f5; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001637e4: sbb eax, 0x541a7; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000163746: sbb eax, 0x54245; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000163694: sbb eax, 0x542f7; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001635f6: sbb eax, 0x54395; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000163544: sbb eax, 0x54447; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001634a6: sbb eax, 0x544e5; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001633f4: sbb eax, 0x54597; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000163356: sbb eax, 0x54635; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001632a4: sbb eax, 0x546e7; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000163209: sbb eax, 0x54782; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000163154: sbb eax, 0x54837; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001630b6: sbb eax, 0x548d5; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000163004: sbb eax, 0x54987; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162f66: sbb eax, 0x54a25; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162eb4: sbb eax, 0x54ad7; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162e16: sbb eax, 0x54b75; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000191a85: sbb eax, 0x54bc6; test rbx, rbx; jne short 0x0000000000191a70; pop rbx; ret; 
0x00000000162d64: sbb eax, 0x54c27; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162cc6: sbb eax, 0x54cc5; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162c14: sbb eax, 0x54d77; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162b76: sbb eax, 0x54e15; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162ac4: sbb eax, 0x54ec7; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162a26: sbb eax, 0x54f65; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162974: sbb eax, 0x55017; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001628d6: sbb eax, 0x550b5; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162828: sbb eax, 0x55163; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162737: sbb eax, 0x55254; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162678: sbb eax, 0x55313; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016260e: sbb eax, 0x5537d; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016250f: sbb eax, 0x5547c; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001622d5: sbb eax, 0x554f6; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016244a: sbb eax, 0x55541; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001621fb: sbb eax, 0x555d0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001623d7: sbb eax, 0x55734; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x0000000016237d: sbb eax, 0x5574e; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x000000001611f4: sbb eax, 0x565d7; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000161156: sbb eax, 0x56675; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001610a4: sbb eax, 0x56727; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000161006: sbb eax, 0x567c5; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160f54: sbb eax, 0x56877; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160eb6: sbb eax, 0x56915; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160e04: sbb eax, 0x569c7; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160d66: sbb eax, 0x56a65; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160cb4: sbb eax, 0x56b17; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160c16: sbb eax, 0x56bb5; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160b64: sbb eax, 0x56c67; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160ac6: sbb eax, 0x56d05; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160a14: sbb eax, 0x56db7; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160976: sbb eax, 0x56e55; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001608c4: sbb eax, 0x56f07; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160829: sbb eax, 0x56fa2; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160774: sbb eax, 0x57057; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001606d6: sbb eax, 0x570f5; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160624: sbb eax, 0x571a7; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160586: sbb eax, 0x57245; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001604d4: sbb eax, 0x572f7; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160436: sbb eax, 0x57395; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160384: sbb eax, 0x57447; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001602e6: sbb eax, 0x574e5; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160234: sbb eax, 0x57597; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160196: sbb eax, 0x57635; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001600e4: sbb eax, 0x576e7; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160046: sbb eax, 0x57785; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000015ff94: sbb eax, 0x57837; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000015fef6: sbb eax, 0x578d5; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000015fe48: sbb eax, 0x57983; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000015fd57: sbb eax, 0x57a74; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000015fc98: sbb eax, 0x57b33; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000015fc2e: sbb eax, 0x57b9d; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000015fb2f: sbb eax, 0x57c9c; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000015fa6a: sbb eax, 0x57d61; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000015f9f7: sbb eax, 0x57f54; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x0000000015f996: sbb eax, 0x57f75; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x000000000b551d: sbb eax, 0x59c850f; add [rax], al; ret; 
0x00000000141212: sbb eax, 0x5b000000; ret; 
0x00000000165e47: sbb eax, 0x63490005; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000115a22: sbb eax, 0x7d8b49; call rbx; 
0x00000000044636: sbb eax, 0x8948fffe; pop rbp; mov eax, 0xfffd97e9; jmp qword ptr [rbx+rcx*4+0x4]; 
0x0000000016ce1d: sbb eax, 0x894d0000; ret far; 
0x00000000061064: sbb eax, 0x8b640018; add al, [rbx+0x277426f8]; mov r8d, 0xffffffff; mov eax, r8d; ret; 
0x00000000119322: sbb eax, 0x8b941; add [rax], al; mov eax, 0x119; syscall; 
0x00000000103d6f: sbb eax, 0xb60f0e77; ror byte ptr [rax+0x63], 0x4; or dword ptr [rax+0x1], 0xffffffd8; notrack jmp rax; 
0x0000000014120d: sbb eax, 0xb8000000; sbb eax, 0x5b000000; ret; 
0x000000001437ba: sbb eax, 0xb8838b48; and eax, [rax]; add [rcx+rcx*4-0x19], cl; call qword ptr [rax+0x20]; 
0x0000000010f552: sbb eax, 0xb8c03145; sub [rcx], al; add [rax], al; syscall; 
0x000000000de6f2: sbb eax, 0xb8c03145; test dword ptr [rax], 0x50f0000; cmp rax, 0xfffffffffffff000; ja short 0x00000000000de770; ret; 
0x00000000181e22: sbb eax, 0xc0bc0ff3; add rax, rcx; add rax, rdi; vzeroupper; ret; 
0x0000000011bbea: sbb eax, 0xc7791; pop rbx; ret; 
0x0000000011bbd0: sbb eax, 0xc77ab; pop rbx; ret; 
0x0000000008ce26: sbb eax, 0xe9ebe374; nop [rax+rax]; xor eax, eax; ret; 
0x000000000b76bb: sbb eax, 0xf1c44; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6f37: sbb eax, 0xf23c8; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6f0e: sbb eax, 0xf23f1; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6eee: sbb eax, 0xf2411; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6ec5: sbb eax, 0xf243a; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6e96: sbb eax, 0xf2469; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6e77: sbb eax, 0xf2488; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6df2: sbb eax, 0xf248d; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6dd7: sbb eax, 0xf24a8; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6e55: sbb eax, 0xf24aa; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6e25: sbb eax, 0xf24da; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6da2: sbb eax, 0xf24dd; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6d76: sbb eax, 0xf2509; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6d60: sbb eax, 0xf251f; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6d3e: sbb eax, 0xf2541; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6d19: sbb eax, 0xf2566; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6cfc: sbb eax, 0xf2583; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6c85: sbb eax, 0xf25fa; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6447: sbb eax, 0xf2db8; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6412: sbb eax, 0xf2ded; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b63e6: sbb eax, 0xf2e19; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b63d0: sbb eax, 0xf2e2f; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b63ae: sbb eax, 0xf2e51; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6389: sbb eax, 0xf2e76; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b636c: sbb eax, 0xf2e93; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6314: sbb eax, 0xf2eeb; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b5c5b: sbb eax, 0xf34d0; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b5b62: sbb eax, 0xf3659; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b5b4c: sbb eax, 0xf366f; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b5b2c: sbb eax, 0xf368f; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b5077: sbb eax, 0xf40b4; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b504e: sbb eax, 0xf40dd; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b502e: sbb eax, 0xf40fd; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b5005: sbb eax, 0xf4126; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b4fd6: sbb eax, 0xf4155; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b4fb7: sbb eax, 0xf4174; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b4f32: sbb eax, 0xf4179; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b4f95: sbb eax, 0xf4196; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b4f65: sbb eax, 0xf41c6; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b4e50: sbb eax, 0xf425b; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b4e22: sbb eax, 0xf4289; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b4df9: sbb eax, 0xf42b2; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b4777: sbb eax, 0xf48a8; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b4742: sbb eax, 0xf48dd; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b4716: sbb eax, 0xf4909; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b4700: sbb eax, 0xf491f; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b46de: sbb eax, 0xf4941; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b46b9: sbb eax, 0xf4966; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b469c: sbb eax, 0xf4983; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b4644: sbb eax, 0xf49db; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b440b: sbb eax, 0xf4b40; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b4312: sbb eax, 0xf4cc9; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b42fc: sbb eax, 0xf4cdf; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b42dc: sbb eax, 0xf4cff; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b3997: sbb eax, 0xf55b4; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b396e: sbb eax, 0xf55dd; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b394e: sbb eax, 0xf55fd; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b3925: sbb eax, 0xf5626; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b38f6: sbb eax, 0xf5655; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b38d7: sbb eax, 0xf5674; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b3852: sbb eax, 0xf5679; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b38b5: sbb eax, 0xf5696; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b3885: sbb eax, 0xf56c6; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b3780: sbb eax, 0xf574b; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b3752: sbb eax, 0xf5779; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b3729: sbb eax, 0xf57a2; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b3137: sbb eax, 0xf5d0c; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b3102: sbb eax, 0xf5d41; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b30d6: sbb eax, 0xf5d6d; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b30c0: sbb eax, 0xf5d83; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b309e: sbb eax, 0xf5da5; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b3079: sbb eax, 0xf5dca; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b305c: sbb eax, 0xf5de7; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b3004: sbb eax, 0xf5e3f; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000011a027: sbb eax, 0xf7000c8e; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x00000000119d27: sbb eax, 0xf7000c91; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x00000000116f27: sbb eax, 0xf7000cbf; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x0000000010f327: sbb eax, 0xf7000d3b; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x0000000010a027: sbb eax, 0xf7000d8e; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x0000000007bdc9: sbb eax, 0xffffea52; add rcx, rbx; mov rbx, rsi; jmp rcx; 
0x00000000076283: sbb eax, 0xffffeb60; add rsi, rbx; mov rbx, rdi; jmp rsi; 
0x00000000075b32: sbb eax, 0xfffff2b1; add rsi, rbx; mov rbx, rdi; mov r13d, 0x1; jmp rsi; 
0x00000000075ae6: sbb eax, 0xfffff2fd; add rsi, rbx; mov rbx, rdi; jmp rsi; 
0x0000000007b4d9: sbb eax, 0xfffff342; add rcx, rbx; mov rbx, rsi; jmp rcx; 
0x00000000075a8c: sbb eax, 0xfffff357; add rsi, rbx; mov rbx, [rsp+0x80]; jmp rsi; 
0x0000000007b461: sbb eax, 0xfffff3ba; add rcx, rbx; mov rbx, rsi; jmp rcx; 
0x0000000007b415: sbb eax, 0xfffff406; add rcx, rbx; mov rbx, rsi; jmp rcx; 
0x0000000007598e: sbb eax, 0xfffff455; add rsi, rbx; mov rbx, rdi; jmp rsi; 
0x0000000007b3ba: sbb eax, 0xfffff461; add rcx, rbx; mov rbx, [rsp+0x68]; jmp rcx; 
0x000000000758ee: sbb eax, 0xfffff4f5; add rsi, rbx; mov rbx, rdx; mov edx, 0x1; jmp rsi; 
0x0000000007b25f: sbb eax, 0xfffff5bc; add rcx, rbx; mov rbx, rdx; mov edx, 0x1; jmp rcx; 
0x000000000757f6: sbb eax, 0xfffff5ed; add rsi, rbx; mov rbx, rdi; jmp rsi; 
0x0000000007b1c5: sbb eax, 0xfffff656; add rcx, rbx; mov rbx, rsi; mov r9d, 0x1; jmp rcx; 
0x00000000075766: sbb eax, 0xfffff67d; add rsi, rbx; mov rbx, rdi; jmp rsi; 
0x0000000007b137: sbb eax, 0xfffff6e4; add rcx, rbx; mov rbx, rsi; jmp rcx; 
0x0000000007b0f3: sbb eax, 0xfffff728; add rcx, rbx; mov rbx, rsi; jmp rcx; 
0x0000000007b0a1: sbb eax, 0xfffff77a; add rcx, rbx; mov rbx, rsi; jmp rcx; 
0x000000000755ad: sbb eax, 0xfffff836; add rsi, rbx; mov rbx, rdi; jmp rsi; 
0x00000000147c65: sbb eax, 0xffffffff; add rsp, 0x8; ret; 
0x0000000017617c: sbb eax, 0xffffffff; ret; 
0x000000000b290d: sbb eax, 0xffffffff; xor cl, cl; mov [rax], cl; mov rax, rdi; ret; 
0x000000001139e5: sbb eax, [rax]; add [rax], al; syscall; 
0x000000000abb7e: sbb eax, [rax]; add [rbp-0x77], cl; ret far; 
0x00000000074ea1: sbb eax, [rax]; add [rcx+rcx*4-0x16], cl; mov rsi, r14; mov rdi, rbp; call qword ptr [rcx+0x38]; 
0x00000000029039: sbb eax, [rax]; add rax, fs:[0x0]; ret; 
0x000000000284cc: sbb eax, [rax]; cmp [rdx+0xd8], rax; jne short 0x000000000002849b; ret; 
0x00000000028d8b: sbb eax, [rax]; lea rdi, [rip+0x184f6e]; mov rsi, [rax]; xor eax, eax; call qword ptr [rdx+0x260]; 
0x00000000035ab5: sbb eax, [rax]; lea rdi, [rip+0x1afc02]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000356b9: sbb eax, [rax]; lea rdi, [rip+0x1afffe]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003555f: sbb eax, [rax]; lea rdi, [rip+0x1b0158]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003547f: sbb eax, [rax]; lea rdi, [rip+0x1b0238]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000353fe: sbb eax, [rax]; lea rdi, [rip+0x1b02b9]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000351e0: sbb eax, [rax]; lea rdi, [rip+0x1b04d7]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000351a4: sbb eax, [rax]; lea rdi, [rip+0x1b0513]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000002931d: sbb eax, [rax]; mov dword ptr fs:[rax], 0x9; mov eax, 0xffffffff; ret; 
0x00000000028c2f: sbb eax, [rax]; mov rsi, [rsp]; mov edi, [rsp+0xc]; mov rdx, [rax]; call rbp; 
0x000000000266dc: sbb eax, [rax]; pop rax; pop rbx; pop rbp; ret; 
0x000000000284b4: sbb eax, [rax]; ret; 
0x00000000028cd9: sbb eax, [rax]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000002bb71: sbb eax, [rax]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000026855: sbb eax, [rax]; syscall; 
0x00000000026856: sbb eax, [rax]; syscall; 
0x0000000002bb8c: sbb eax, [rax]; test eax, eax; je short 0x000000000002bb98; ret; 
0x0000000010da1c: sbb eax, [rbx+0x674a1f8]; neg eax; ret; 
0x00000000073330: sbb eax, [rbx-0x8f343]; call qword ptr [rax]; 
0x0000000011a0a5: sbb eax, [rcx]; add [rax], al; syscall; 
0x00000000165fc7: sbb eax, [rip+0x14634900]; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000053c96: sbb eax, eax; and eax, 0x2; sub eax, 0x1; ret; 
0x0000000017e8b7: sbb eax, eax; or eax, 0x1; ret; 
0x000000001366e3: sbb eax, eax; ret; 
0x0000000018c065: sbb eax, eax; sbb eax, 0xffffffff; ret; 
0x0000000014d733: sbb eax, eax; std; jmp qword ptr [rsi+0xf]; 
0x0000000009d2a1: sbb ebp, [rbx-0x72b7ffff]; add eax, 0x1abf4; cmove rax, rdx; ret; 
0x0000000009b8f6: sbb ebp, ebx; nop [rax]; mov rdi, [rbx+0x48]; call rax; 
0x00000000144806: sbb ebp, esi; jmp qword ptr [rsi+0xf]; 
0x00000000144807: sbb ebp, esi; jmp qword ptr [rsi+0xf]; 
0x000000000907c1: sbb ebx, [rdi+0x15]; add [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; jmp rax; 
0x0000000009c66b: sbb ecx, [rax+rax]; cmovne rax, rdx; ret; 
0x000000000b3d29: sbb ecx, [rax-0x73]; jg short 0x00000000000b3d49; jne 0x00000000000b4270; ret; 
0x000000000b54bd: sbb ecx, [rax-0x73]; jg short 0x00000000000b54dd; jne 0x00000000000b5ac0; ret; 
0x000000000ff661: sbb ecx, [rbp-0x77]; fmul st, qword ptr [rcx-0x7d]; ret; 
0x0000000018c574: sbb ecx, [rbx+0x463bf847]; clc; jne 0x000000000018c680; ret; 
0x00000000141e44: sbb ecx, [rcx-0x75]; and al, 0x8; mov rdi, r12; call qword ptr [rax+0x20]; 
0x000000000d9961: sbb ecx, ebx; hlt; dec dword ptr [rax-0x77]; ret; 
0x000000000524da: sbb edi, edi; dec dword ptr [rax-0x77]; ret; 
0x00000000034abc: sbb edi, edi; jmp qword ptr [rax+rcx*2-0x75]; 
0x00000000137b53: sbb edi, edi; jmp qword ptr [rsi+0x2e]; 
0x00000000077631: sbb edx, [rsp+rdi*8]; jmp qword ptr [rsi+0x66]; 
0x000000000559f5: sbb edx, ebx; mov [rdi+0x8], r10; mov eax, ecx; adc eax, eax; ret; 
0x0000000012cd80: sbb esi, [rbx+rcx+0x45640100]; mov [rax], ecx; add rsp, 0x18; ret; 
0x00000000147e3b: sbb esi, edi; jmp qword ptr [rsi-0x70]; 
0x000000000559f3: sbb r10, r11; mov [rdi+0x8], r10; mov eax, ecx; adc eax, eax; ret; 
0x00000000125fa6: sbb r11b, sil; movq mm1, [rbx+0x30]; mov [rbp-0x80], eax; movups [rbp-0x78], xmm1; call rcx; 
0x00000000126142: sbb r11b, sil; movq mm2, [rbx+0x30]; mov [rbp-0x80], eax; movups [rbp-0x78], xmm2; call r8; 
0x0000000017617b: sbb rax, 0xffffffffffffffff; ret; 
0x000000000b290c: sbb rax, 0xffffffffffffffff; xor cl, cl; mov [rax], cl; mov rax, rdi; ret; 
0x00000000180a9f: scasb [rdi]; adc [rax], al; add [rbp-0x77], cl; ret far; 
0x000000000cc114: scasb [rdi]; adc [rax], eax; add rsp, 0x8; ret; 
0x0000000018079f: scasb [rdi]; adc eax, [rax]; add [rbp-0x77], cl; ret far; 
0x0000000018199f: scasb [rdi]; add [rax], eax; add [rbp-0x77], cl; ret far; 
0x0000000009d31d: scasb [rdi]; add [rax], eax; cmovne rax, rdx; ret; 
0x0000000018169f: scasb [rdi]; add al, 0x0; add [rbp-0x77], cl; ret far; 
0x0000000013ba9e: scasb [rdi]; fdiv st(6), st; jmp qword ptr [rsi+0x66]; 
0x00000000076d7e: scasb [rdi]; fdiv st(7), st; jmp qword ptr [rsi+0xf]; 
0x0000000012890e: scasb [rdi]; fsub st(7), st; jmp qword ptr [rsi+0xf]; 
0x0000000009efae: scasb [rdi]; jae short 0x000000000009efa9; dec dword ptr [rax+0x29]; ret; 
0x00000000099ade: scasb [rdi]; mov bh, bh; jmp qword ptr [rsi+0xf]; 
0x0000000013ad8e: scasb [rdi]; mov ch, 0xee; jmp qword ptr [rsi+0xf]; 
0x00000000081974: scasb [rdi]; mov r8d, 0xffffffff; mov eax, r8d; ret; 
0x0000000018109f: scasb [rdi]; or al, [rax]; add [rbp-0x77], cl; ret far; 
0x0000000013dca2: scasb [rdi]; or al, [rax]; syscall; 
0x0000000013dd57: scasb [rdi]; or al, [rax]; test rax, rax; jne short 0x000000000013dd68; ret; 
0x00000000180d9f: scasb [rdi]; or eax, 0x894d0000; ret far; 
0x000000000deb07: scasb [rdi]; out dx, al; jmp rdi; 
0x0000000003aab1: scasb [rdi]; sbb al, [rax]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000cf7ce: scasb [rdi]; sti; dec dword ptr [rax+0x39]; ret; 
0x0000000018625a: scasb [rdi]; vzeroupper; ret; 
0x0000000007d783: scasd [rdi]; adc al, [rax]; movsxd rsi, [rdi+rsi*4]; add rsi, rdi; notrack jmp rsi; 
0x00000000113d2d: scasd [rdi]; add [rax], al; add [rax+0x39], cl; ret; 
0x0000000009d316: scasd [rdi]; add [rax], eax; lea rax, [rip+0x1aed0]; cmovne rax, rdx; ret; 
0x0000000019192d: scasd [rdi]; add eax, 0x3fbae800; clc; call far fword ptr [rbx+0x48]; 
0x0000000009b3e4: scasd [rdi]; clc; jmp qword ptr [rsi+0xf]; 
0x000000000b8763: scasd [rdi]; enter 0x438d, 0x1; pop rbx; imul eax, ecx; ret; 
0x0000000003bd13: scasd [rdi]; idiv edi; jmp qword ptr [rsi+0xf]; 
0x0000000012b29d: scasd [rdi]; in al, 0xff; jmp qword ptr [rsi+0x2e]; 
0x00000000128ac0: scasd [rdi]; mov rax, r8; ret; 
0x0000000013dc68: scasd [rdi]; or al, [rax]; syscall; 
0x00000000156295: scasd [rdi]; ret far; 
0x00000000085ea0: scasd [rdi]; ret; 
0x0000000003a93e: scasd [rdi]; sbb al, [rax]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000002a6c8: scasd [rdi]; sbb eax, [rax]; ret; 
0x000000000cf7cd: scasd [rdi]; scasb [rdi]; sti; dec dword ptr [rax+0x39]; ret; 
0x00000000042b8d: scasd [rdi]; sti; add r15, [rsp]; mov rsi, r15; call r14; 
0x0000000014059d: scasd [rdi]; test bh, ch; jmp qword ptr [rsi+0x66]; 
0x0000000011c159: seta al; movzx eax, al; neg eax; ret; 
0x0000000010aa2f: seta al; movzx eax, al; sbb eax, 0x0; ret; 
0x000000000907a4: setae al; ret; 
0x000000000d027b: setb al; add eax, 0x16d; ret; 
0x0000000011cd0a: setbe al; mov eax, r8d; ret; 
0x0000000011cd09: setbe r8b; mov eax, r8d; ret; 
0x00000000060f66: sete al; add rsp, 0x18; movzx eax, al; neg eax; ret; 
0x00000000151a0b: sete al; add rsp, 0x8; mov eax, r8d; ret; 
0x000000000503e2: sete al; add rsp, 0x8; movzx eax, al; ret; 
0x0000000014068c: sete al; add rsp, 0x8; ret; 
0x000000000e0c4a: sete al; movzx eax, al; lea rax, [rax+rax-0x1]; ret; 
0x000000000e0c4b: sete al; movzx eax, al; lea rax, [rax+rax-0x1]; ret; 
0x0000000014fa38: sete al; movzx eax, al; ret; 
0x000000000920be: sete al; movzx eax, al; sub eax, 0x2; add rsp, 0x8; ret; 
0x00000000038d89: sete al; ret; 
0x0000000004152a: sete dh; xor eax, eax; mov [rbx+0x40], esi; pop rbx; ret; 
0x0000000015a705: sete dl; mov [rbx], edx; pop rbx; ret; 
0x00000000151a0a: sete r8b; add rsp, 0x8; mov eax, r8d; ret; 
0x00000000041529: sete sil; xor eax, eax; mov [rbx+0x40], esi; pop rbx; ret; 
0x000000000ca0a0: setg al; movzx eax, al; lea eax, [rax+rax-0x1]; ret; 
0x0000000018582c: setl al; neg eax; or eax, 0x1; vzeroupper; ret; 
0x000000001070af: setl al; ret; 
0x000000001194a0: setne al; add rsp, 0x18; movzx eax, al; neg eax; ret; 
0x00000000029305: setne al; add rsp, 0x8; movzx eax, al; neg eax; ret; 
0x000000001122f7: setne al; add rsp, 0x8; movzx eax, al; ret; 
0x000000000fd8c8: setne al; lea eax, [rax+rax*8+0x5]; ret; 
0x00000000150179: setne al; mov [rsp], rax; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x000000000895bf: setne al; mov eax, r8d; ret; 
0x00000000060fa8: setne al; movzx eax, al; neg eax; pop rbp; ret; 
0x000000000fd3a1: setne al; movzx eax, al; neg eax; ret; 
0x000000000423ec: setne al; movzx eax, al; ret; 
0x000000000e0be0: setne al; ret; 
0x000000000a4b1a: setne dl; test cl, dl; jne short 0x00000000000a4b00; mov rax, r8; ret; 
0x000000000a4c59: setne dl; test cl, dl; jne short 0x00000000000a4c40; mov rax, r8; ret; 
0x000000000895be: setne r8b; mov eax, r8d; ret; 
0x00000000164da3: sfence; lea r11, [rip+0x52be2]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000164bee: sfence; lea r11, [rip+0x52d98]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001622cf: sfence; lea r11, [rip+0x554f6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001621f6: sfence; lea r11, [rip+0x555d0]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000113970: shl bh, 0x1; dec dword ptr [rbx+0x48082444]; add esp, 0x28; ret; 
0x0000000010816a: shl bh, 0xc2; jmp rsi; 
0x00000000050c79: shl bh, 0xd8; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000018582e: shl bh, 0xd8; or eax, 0x1; vzeroupper; ret; 
0x00000000060fad: shl bh, 0xd8; pop rbp; ret; 
0x0000000002930e: shl bh, 0xd8; ret; 
0x0000000017e38f: shl bl, 0x1; bsf eax, eax; add rax, rdi; vzeroupper; ret; 
0x0000000017e634: shl byte ptr [rax+0x48], 0x1; clc; ret; 
0x00000000182302: shl byte ptr [rax+0x48], 0x1; clc; sub rax, rdx; vzeroupper; ret; 
0x0000000017e21b: shl byte ptr [rax+0x48], 0x1; clc; vzeroupper; ret; 
0x000000001426d5: shl byte ptr [rax+rax*2+0x41], 0x83; call qword ptr [rbx]; 
0x00000000110a4d: shl byte ptr [rax+rbx+0x48], 0x89; add eax, 0xd6be9; mov eax, 0x1; add rsp, 0x8; ret; 
0x000000001417c0: shl byte ptr [rax+rcx*2+0x49], 0x8b; cmp al, 0x24; mov rsi, r13; mov rax, [rdi+0x38]; call qword ptr [rax+0x10]; 
0x00000000038cdd: shl byte ptr [rax+rcx*2-0x75], cl; add [rax-0x75], cl; add [rax-0x75], cl; mov rax, [rax+rdx*4]; ret; 
0x000000000c9f6c: shl byte ptr [rax+rcx*2-0x75], cl; or cl, ch; pop rdx; fdiv st(7), st; jmp qword ptr [rsi+0x2e]; 
0x00000000116c77: shl byte ptr [rax+rdi+0x48], 0x39; ret; 
0x00000000143def: shl byte ptr [rax+rdx+0x48], 0x8b; or [r9+rcx*4-0x1a], r9b; mov rdi, rbp; call qword ptr [rax]; 
0x000000000c297a: shl byte ptr [rax-0x9], cl; jmp qword ptr [rsi-0x70]; 
0x00000000182296: shl byte ptr [rax], 0x48; add eax, edi; sub rax, rdx; vzeroupper; ret; 
0x0000000017e1db: shl byte ptr [rax], 0x48; add eax, edi; vzeroupper; ret; 
0x0000000010f3ed: shl byte ptr [rbp+0x10], 0xb8; adc al, 0x0; add [rax], al; syscall; 
0x0000000010f34d: shl byte ptr [rbp+0x10], 0xb8; adc eax, [rax]; add [rax], al; syscall; 
0x00000000108d4d: shl byte ptr [rbp+0x10], 0xb8; add [rax], eax; add [rax], al; syscall; 
0x000000001094ed: shl byte ptr [rbp+0x10], 0xb8; add eax, [rax]; add [rax], al; syscall; 
0x000000000de84d: shl byte ptr [rbp+0x10], 0xb8; and al, [rax]; add [rax], al; syscall; 
0x0000000011391d: shl byte ptr [rbp+0x10], 0xb8; sbb al, [rax]; add [rax], al; syscall; 
0x0000000011a32d: shl byte ptr [rbp+0x10], 0xb8; sub al, [rax]; add [rax], al; syscall; 
0x0000000011a25d: shl byte ptr [rbp+0x10], 0xb8; sub eax, [rax]; add [rax], al; syscall; 
0x000000001197fd: shl byte ptr [rbp+0x10], 0xb8; xor [rcx], al; add [rax], al; syscall; 
0x000000001519d5: shl byte ptr [rbp+0x10], cl; mov r8d, 0x1; mov eax, r8d; ret; 
0x0000000008d58d: shl byte ptr [rbp+0x10], cl; sub dword ptr [rip+0x1590d9], 0x1; ret; 
0x000000000d0acc: shl byte ptr [rbp+0x11], 0x4c; mov eax, eax; add rsp, 0x8; ret; 
0x00000000040bda: shl byte ptr [rbp+0x13], 0x1; and esi, 0x80000000; movss [rdi], xmm0; movd xmm0, esi; ret; 
0x000000001420f5: shl byte ptr [rbp+0x14], 0x48; mov eax, [rbp+0x8]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x00000000106ca0: shl byte ptr [rbp+0x15], 0xb8; adc [rax], eax; add [rax], al; syscall; 
0x000000001195d0: shl byte ptr [rbp+0x15], 0xb8; adc al, 0x1; add [rax], al; syscall; 
0x00000000106d50: shl byte ptr [rbp+0x15], 0xb8; adc al, [rax]; add [rax], al; syscall; 
0x00000000119730: shl byte ptr [rbp+0x15], 0xb8; adc eax, [rcx]; add [rax], al; syscall; 
0x0000000011ac70: shl byte ptr [rbp+0x15], 0xb8; and [rcx], al; add [rax], al; syscall; 
0x0000000011a810: shl byte ptr [rbp+0x15], 0xb8; sub al, 0x0; add [rax], al; syscall; 
0x0000000011ad20: shl byte ptr [rbp+0x15], 0xb8; sub eax, [rcx]; add [rax], al; syscall; 
0x0000000011ade0: shl byte ptr [rbp+0x15], 0xb8; xor eax, [rcx]; add [rax], al; syscall; 
0x0000000006114f: shl byte ptr [rbp+0x16], 0x48; mov edx, [rdi+0x88]; mov [rdx+0x8], rcx; mov dword ptr [rdx+0x4], 0x1; ret; 
0x00000000041c3d: shl byte ptr [rbp+0x18], 0xbe; or [rax], al; add [rax], al; mov eax, 0x82; syscall; 
0x0000000013717c: shl byte ptr [rbp+0x19], 0x44; mov eax, eax; ret; 
0x00000000141e42: shl byte ptr [rbp+0x1b], 0x49; mov eax, [rsp+0x8]; mov rdi, r12; call qword ptr [rax+0x20]; 
0x00000000119320: shl byte ptr [rbp+0x1d], 0x41; mov ecx, 0x8; mov eax, 0x119; syscall; 
0x0000000010f490: shl byte ptr [rbp+0x1d], 0x45; xor eax, eax; mov eax, 0x127; syscall; 
0x0000000010f550: shl byte ptr [rbp+0x1d], 0x45; xor eax, eax; mov eax, 0x128; syscall; 
0x000000000de6f0: shl byte ptr [rbp+0x1d], 0x45; xor eax, eax; mov eax, 0xf7; syscall; 
0x0000000011a6b0: shl byte ptr [rbp+0x1d], 0x45; xor ecx, ecx; xor r8d, r8d; mov eax, 0x2c; syscall; 
0x0000000011a490: shl byte ptr [rbp+0x1d], 0x45; xor ecx, ecx; xor r8d, r8d; mov eax, 0x2d; syscall; 
0x00000000055b8b: shl byte ptr [rbp+0x22], cl; mov dword ptr [rsi], 0x0; mov eax, 0x1; ret; 
0x000000000608eb: shl byte ptr [rbp+0x2], 0x5b; ret; 
0x00000000186e92: shl byte ptr [rbp+0x2b], 0x4c; mov eax, eax; shr rax, 0x2; vzeroupper; ret; 
0x000000001824f2: shl byte ptr [rbp+0x2b], 0x4c; mov eax, eax; vzeroupper; ret; 
0x000000000da0a8: shl byte ptr [rbp+0x2d], 0x83; imul eax, [rcx+rax], 0x5b; pop rbp; pop r12; ret; 
0x000000000dffcf: shl byte ptr [rbp+0x2e], 0xb8; ja short 0x00000000000dffd5; add [rax], al; syscall; 
0x0000000010f97f: shl byte ptr [rbp+0x2e], 0xb8; jb short 0x000000000010f985; add [rax], al; syscall; 
0x000000000db2df: shl byte ptr [rbp+0x2e], 0xb8; je short 0x00000000000db2e5; add [rax], al; syscall; 
0x000000000dff1f: shl byte ptr [rbp+0x2e], 0xb8; jne short 0x00000000000dff25; add [rax], al; syscall; 
0x0000000010f8df: shl byte ptr [rbp+0x2e], 0xb8; jno short 0x000000000010f8e5; add [rax], al; syscall; 
0x000000000dfc4f: shl byte ptr [rbp+0x2e], 0xb8; push 0x0; add [rax], al; syscall; 
0x000000001908fd: shl byte ptr [rbp+0x31], cl; add rsp, 0x38; pop rbx; pop r14; ret; 
0x0000000005f14f: shl byte ptr [rbp+0x36], 0x83; sub eax, 0x1874af; add [rcx+rcx*4-0x40], eax; pop rbx; ret; 
0x0000000010d6fc: shl byte ptr [rbp+0x39], 0x41; mov eax, 0x8; mov rdx, r12; mov eax, 0x10f; syscall; 
0x000000001569b4: shl byte ptr [rbp+0x39], 0x83; sub eax, 0x92726; add [rcx+rcx*4-0x40], ecx; pop rbp; ret; 
0x0000000011f662: shl byte ptr [rbp+0x3b], 0x83; sub eax, 0xc86c0; add [rcx+rcx*4-0x40], eax; add rsp, 0x8; ret; 
0x000000000cb169: shl byte ptr [rbp+0x4], 0x1; mov eax, r8d; ret; 
0x000000000b8246: shl byte ptr [rbp+0x4], cl; mov rax, rdi; ret; 
0x000000000a8692: shl byte ptr [rbp+0x4b], 0x66; pmovmskb eax, mm1; bsf eax, eax; lea rax, [rdi+rax+0x30]; ret; 
0x000000001906f3: shl byte ptr [rbp+0x4d], cl; add rsp, 0x38; pop rbx; pop r14; ret; 
0x000000000de8d8: shl byte ptr [rbp+0x5], 0x48; add esp, 0x8; ret; 
0x0000000008ce48: shl byte ptr [rbp+0x5], cl; ret; 
0x00000000042638: shl byte ptr [rbp+0x5d], 0x41; mov edx, 0x8; mov eax, 0x80; syscall; 
0x00000000108b7c: shl byte ptr [rbp+0x61], 0xb8; add [rcx], eax; add [rax], al; syscall; 
0x000000000611c7: shl byte ptr [rbp+0x6], cl; sub dword ptr [rdi], 0x1; ret; 
0x0000000017d4a3: shl byte ptr [rbp+0x6a], cl; test esi, esi; je short 0x000000000017d488; xor eax, eax; ret; 
0x0000000003885e: shl byte ptr [rbp+0x7], 0x44; mov eax, eax; ret; 
0x00000000190b14: shl byte ptr [rbp+0x7b], cl; add rsp, 0x30; mov rax, r12; pop r12; ret; 
0x0000000013c06d: shl byte ptr [rbp+0x8], 0x5b; pop rbp; pop r12; ret; 
0x000000000974db: shl byte ptr [rbp+0xb], 0xc7; add eax, 0x14f988; add [rax], al; add [rax], al; ret; 
0x0000000011d3b2: shl byte ptr [rbp+0xb], cl; ret; 
0x00000000107129: shl byte ptr [rbp+0xc], 0x8b; push rbx; add al, 0xeb; ret; 
0x0000000008ff09: shl byte ptr [rbp+0xc], cl; sub dword ptr [rip+0x15675d], 0x1; ret; 
0x000000000808a9: shl byte ptr [rbp+0xc], cl; sub dword ptr [rip+0x165d7d], 0x1; ret; 
0x00000000126ba8: shl byte ptr [rbp+0xd], 0x48; cmp dword ptr [rdi], 0x0; je short 0x0000000000126bc0; ret; 
0x0000000011d15f: shl byte ptr [rbp+0xe], cl; mov eax, r8d; ret; 
0x000000001414e6: shl byte ptr [rbp+0xf], 0x31; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x5d], bl; ret; 
0x00000000041b8e: shl byte ptr [rbp+0xf], 0x48; add esp, 0x8; ret; 
0x000000000f8880: shl byte ptr [rbp+rax+0x48], 0x39; ret; 
0x00000000141425: shl byte ptr [rbp+rax+0x48], 0x89; out dx, eax; call rax; 
0x00000000143439: shl byte ptr [rbp+rax+0x4c], 0x89; out dx, eax; call rax; 
0x00000000125a80: shl byte ptr [rbp+rbp+0x48], 0x8b; jp short 0x0000000000125ad7; mov rsi, rdx; call rax; 
0x00000000181e20: shl byte ptr [rbp+rbx-0xd], 0xf; mov esp, 0xc80148c0; add rax, rdi; vzeroupper; ret; 
0x0000000007cd60: shl byte ptr [rbp+rcx+0x48], 0x8d; adc eax, 0x12a9b6; add rax, rdx; ret; 
0x000000000cb7b0: shl byte ptr [rbp+rcx+0x48], cl; bsf eax, edx; shr rax, 0x2; ret; 
0x000000000cbac8: shl byte ptr [rbp+rdx-0x78], cl; rol dword ptr [rax+0x1e740fe1], 0x1; ret; 
0x0000000008fb5d: shl byte ptr [rbp-0x10], 0xc3; add rdx, 0x60; mov rax, [rdi]; mov [rdx], rax; ret; 
0x000000000b90af: shl byte ptr [rbp-0x12], cl; xor eax, eax; ret; 
0x0000000009b8c0: shl byte ptr [rbp-0x13], 0x31; rol bl, 0x66; nop [rax+rax]; mov eax, 0x1; ret; 
0x00000000083770: shl byte ptr [rbp-0x13], 0x4c; mov eax, eax; ret; 
0x000000000b79f0: shl byte ptr [rbp-0x13], cl; lea rax, [rcx-0x1]; ret; 
0x000000000a4ad2: shl byte ptr [rbp-0x15], 0x1; mov rax, r8; ret; 
0x00000000099316: shl byte ptr [rbp-0x19], 0x48; lea eax, [rdx-0x10]; ret; 
0x00000000139e7a: shl byte ptr [rbp-0x1a], 0x44; mov eax, edx; ret; 
0x000000001860da: shl byte ptr [rbp-0x1d], 0x29; enter 0xf8c5, 0x77; ret; 
0x000000000e6bba: shl byte ptr [rbp-0x1d], 0xe9; xabort 0xff; jmp qword ptr [rsi+0xf]; 
0x000000000a693b: shl byte ptr [rbp-0x1e], 0x31; shr byte ptr [rcx], 0xc8; ret; 
0x0000000017d99c: shl byte ptr [rbp-0x1f], 0x29; enter 0xf8c5, 0x77; ret; 
0x000000000b913d: shl byte ptr [rbp-0x20], cl; ret; 
0x000000001190db: shl byte ptr [rbp-0x21], 0x4c; mov eax, eax; ret; 
0x0000000009227e: shl byte ptr [rbp-0x21], cl; nop [rax]; xor r8d, r8d; mov rax, r8; ret; 
0x000000001865af: shl byte ptr [rbp-0x22], 0x29; enter 0xf8c5, 0x77; ret; 
0x0000000017de81: shl byte ptr [rbp-0x24], 0x29; enter 0xf8c5, 0x77; ret; 
0x0000000003f89c: shl byte ptr [rbp-0x27], cl; ret; 
0x00000000110c99: shl byte ptr [rbp-0x2c], 0x5b; xor eax, eax; pop rbp; pop r12; ret; 
0x00000000110d7a: shl byte ptr [rbp-0x2d], 0x5b; xor eax, eax; pop rbp; pop r12; ret; 
0x0000000017e27d: shl byte ptr [rbp-0x30], 0xc5; std; xlat [rbx]; ret; 
0x00000000040727: shl byte ptr [rbp-0x30], cl; mov rax, [rip+0x1a2717]; mov dword ptr fs:[rax], 0x22; add rsp, 0x8; ret; 
0x00000000070c1b: shl byte ptr [rbp-0x48], 0xeb; ret; 
0x00000000181d7d: shl byte ptr [rbp-0x50], 0xc5; std; xlat [rbx]; ret; 
0x000000001279c7: shl byte ptr [rbp-0x59], 0x4c; mov eax, ecx; ret; 
0x000000000e6192: shl byte ptr [rbp-0x5e], 0xe9; ret far; 
0x000000000ecdca: shl byte ptr [rbp-0x68], 0x48; add esp, 0x8; pop rbx; pop rbp; ret; 
0x000000000fd89a: shl byte ptr [rbp-0x69], cl; cmp dword ptr [rdi+0x14], 0x1000000; mov edx, 0x2; cmove eax, edx; ret; 
0x0000000019099f: shl byte ptr [rbp-0x71], cl; add rsp, 0x38; pop rbx; pop r14; ret; 
0x0000000005370d: shl byte ptr [rbp-0x7a], 0x48; sub esi, 0x1; jne short 0x00000000000536f8; mov eax, 0x1; ret; 
0x0000000009b99c: shl byte ptr [rbp-0xf], 0x44; mov eax, eax; ret; 
0x000000000ba43c: shl byte ptr [rbp-0xf], cl; ret; 
0x0000000008ff90: shl byte ptr [rbx+0x25], 0x1; movzx eax, byte ptr [rax]; ret; 
0x000000000a4bd2: shl byte ptr [rbx+0x4c], 0x1; mov eax, eax; ret; 
0x0000000009a19a: shl byte ptr [rbx+0x4c], 0x89; out 0x48, al; mov edi, ebp; call rax; 
0x000000001512d8: shl byte ptr [rbx+0xd], 0x1; xor r8d, r8d; mov eax, r8d; ret; 
0x00000000126b26: shl byte ptr [rbx+0xf], 0x1; cmp [rax+0x8], rdi; jne short 0x0000000000126b20; mov rax, [rax+0x30]; ret; 
0x0000000008ce21: shl byte ptr [rbx+rax*4+0x7d], 0x0; sbb eax, 0xe9ebe374; nop [rax+rax]; xor eax, eax; ret; 
0x00000000085fd2: shl byte ptr [rbx+rbp*2+0x49], 0x2b; and [r8+0x1], r9b; ret; 
0x000000000d95f6: shl byte ptr [rbx+rbp+0x5b], 0x5d; pop r12; ret; 
0x0000000017e2f2: shl byte ptr [rbx+rbx-0xd], 0xf; mov esp, 0xf80148c0; add rax, rcx; vzeroupper; ret; 
0x000000000cb162: shl byte ptr [rbx+rcx+0x45], 0x31; sar byte ptr [rcx], 0xd0; jne short 0x00000000000cb170; mov eax, r8d; ret; 
0x00000000112575: shl byte ptr [rbx+rcx+0x48], 0x83; ror byte ptr [rax], 0x48; mov [rip+0xd520d], eax; mov rax, r8; ret; 
0x00000000117092: shl byte ptr [rbx+rcx+0x48], cl; cmp edi, edx; jne short 0x0000000000117088; mov rax, [rax+0x8]; ret; 
0x00000000135eb2: shl byte ptr [rbx+rcx-0x3a], 0x2; jmp far fword ptr [rax-0x27af0fe]; 
0x000000000da780: shl byte ptr [rbx+rdi*2+0x4d], 0x85; in al, 0x74; adc eax, 0x48eb894c; mov edi, ebp; call r12; 
0x000000001423d9: shl byte ptr [rbx+rdx*4+0x48], 0x8b; or [r8-0x77], r9b; out dx, eax; call qword ptr [rax+0x20]; 
0x0000000007f47a: shl byte ptr [rbx+rdx+0x48], 0x8b; mov edi, 0xe0; jmp rax; 
0x0000000009d50c: shl byte ptr [rcx+0xd], 0x0; cmovne rax, rdx; ret; 
0x0000000010e856: shl byte ptr [rcx+rax*2-0x75], 0x1a; syscall; 
0x0000000014cf01: shl byte ptr [rcx+rax*4+0x64], 0x48; mov [rbx], eax; pop rbx; ret; 
0x000000000b8cec: shl byte ptr [rcx+rax], 0x0; cmovne rax, rdx; ret; 
0x0000000009f610: shl byte ptr [rcx+rbx+0x3c], 0x3d; je short 0x000000000009f62c; xor eax, eax; ret; 
0x00000000045724: shl byte ptr [rcx+rbx+0x48], 0x8b; adc [rbx+0x48], bl; mov dword ptr [rip+0x1a0c29], 0x0; mov eax, [rax+0x58]; ret; 
0x0000000011b588: shl byte ptr [rcx+rcx+0x1], cl; sar byte ptr [rax+0x14], cl; syscall; 
0x0000000007f39a: shl byte ptr [rcx+rcx+0x48], 0x8b; mov edi, 0xe0; jmp rax; 
0x00000000132ad6: shl byte ptr [rcx+rcx+0x48], 0x8d; cmp eax, 0xb5a40; call rax; 
0x00000000146e46: shl byte ptr [rcx+rcx+0x48], 0x8d; mov ebp, 0xc8; call rax; 
0x000000000f879a: shl byte ptr [rcx+rcx+0x4c], 0x39; ret; 
0x000000000adf8c: shl byte ptr [rcx+rdx+0x48], cl; bsf eax, edx; ret; 
0x00000000107e1c: shl byte ptr [rcx+rsi+0x31], 0xd2; xor esi, esi; mov rdi, rbp; call rax; 
0x0000000016c99d: shl byte ptr [rcx], 0x0; add [rbp-0x77], cl; ret far; 
0x0000000009079d: shl byte ptr [rcx], 0x1; ror byte ptr [rax+0x39], 0xfa; setae al; ret; 
0x000000000b85b5: shl byte ptr [rcx], 0x1; shl byte ptr [rip+0x3fffc00], cl; div ecx; mov eax, eax; ret; 
0x00000000110ea3: shl byte ptr [rcx], 0xc0; pop rbp; ret; 
0x000000000298ea: shl byte ptr [rcx], 0xc9; xor edx, edx; push rax; call rbx; 
0x000000000de940: shl byte ptr [rcx], cl; idiv byte ptr [rdi+0x1200011]; mov eax, 0x38; syscall; 
0x00000000028c0b: shl byte ptr [rcx], cl; imul al; insd [rdi], dx; ret; 
0x00000000029259: shl byte ptr [rcx], cl; imul al; syscall; 
0x0000000008f504: shl byte ptr [rcx], cl; test byte ptr [rax-0x77], 0xdf; call qword ptr [rax+0x58]; 
0x00000000107e20: shl byte ptr [rcx], cl; test byte ptr [rax-0x77], 0xef; call rax; 
0x00000000107e51: shl byte ptr [rcx], cl; test byte ptr [rax-0x77], 0xef; mov eax, 0x135; syscall; 
0x000000000b8d36: shl byte ptr [rdi+0x4c], 0x89; loopne 0x00000000000b8d98; pop rbp; pop r12; ret; 
0x00000000101a83: shl byte ptr [rdi+0x5b], 0xb8; add eax, 0x5d000000; pop r12; ret; 
0x00000000096886: shl byte ptr [rdi+rax*8], 0xc; add [rax], al; add [rcx+rcx*4-0x40], cl; ret; 
0x00000000142e36: shl byte ptr [rdi+rax+0x31], 0xc0; ret; 
0x000000000a4bfe: shl byte ptr [rdi+rcx+0x39], 0xf0; jne short 0x00000000000a4bf0; mov rax, r8; ret; 
0x000000000b5c5c: shl byte ptr [rdi+rcx], 0x1; add [rbx+0x63], cl; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000001423b5: shl byte ptr [rdi+rsi*4+0x48], 0x8b; or [r8-0x77], r9b; out dx, eax; mov qword ptr [rsp], 0x0; call qword ptr [rax+0x20]; 
0x000000001607fa: shl byte ptr [rdx+0x13], 0x1; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000007f423: shl byte ptr [rdx+0x48], 0x8b; mov edi, 0xe0; lea rsi, [rsp+0x8]; call rax; 
0x000000000ae15b: shl byte ptr [rdx+0x48], cl; bsf eax, edx; ret; 
0x000000000cb79b: shl byte ptr [rdx+0x48], cl; bsf eax, edx; shr rax, 0x2; ret; 
0x0000000015fecc: shl byte ptr [rdx+0xe], 0x1; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x000000000909ab: shl byte ptr [rdx+rbx+0x48], 0x8b; add eax, 0x155d9b; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009097b: shl byte ptr [rdx+rbx+0x48], 0x8b; add eax, 0x155dc3; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009094b: shl byte ptr [rdx+rbx+0x48], 0x8b; add eax, 0x155deb; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009091b: shl byte ptr [rdx+rbx+0x48], 0x8b; add eax, 0x155e13; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000908eb: shl byte ptr [rdx+rbx+0x48], 0x8b; add eax, 0x155e3b; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000908bb: shl byte ptr [rdx+rbx+0x48], 0x8b; add eax, 0x155e63; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009084b: shl byte ptr [rdx+rbx+0x48], 0x8b; add eax, 0x155ea3; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009081b: shl byte ptr [rdx+rbx+0x48], 0x8b; add eax, 0x155ecb; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000907eb: shl byte ptr [rdx+rbx+0x48], 0x8b; add eax, 0x155ef3; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000907bb: shl byte ptr [rdx+rbx+0x48], 0x8b; add eax, 0x155f1b; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000015a7db: shl byte ptr [rdx+rbx+0x48], 0x8b; add eax, 0x8bf33; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000015a7ab: shl byte ptr [rdx+rbx+0x48], 0x8b; add eax, 0x8bf5b; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000015a77b: shl byte ptr [rdx+rbx+0x48], 0x8b; add eax, 0x8bf83; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000015a74b: shl byte ptr [rdx+rbx+0x48], 0x8b; add eax, 0x8bfab; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000a8a0b: shl byte ptr [rdx+rdx*8+0xf], 0xbd; ror byte ptr [rax+0x1], 0xf8; ret; 
0x0000000015929e: shl byte ptr [rdx+rdx+0x48], 0x8b; add eax, 0x89b90; call qword ptr [rax+0x288]; 
0x0000000003a66a: shl byte ptr [rdx-0x3eb7ffe6], cl; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x00000000141755: shl byte ptr [rdx], 0x0; add [rcx+rcx*4-0xa], cl; add qword ptr [rbx+0x22a8], 0x1; mov rdi, rbp; call qword ptr [rax+0x18]; 
0x000000000b85b7: shl byte ptr [rip+0x3fffc00], cl; div ecx; mov eax, eax; ret; 
0x0000000010e506: shl byte ptr [rip+0x410000], cl; cmp eax, 0x410000; je short 0x000000000010e540; mov eax, 0x101; syscall; 
0x0000000008e759: shl byte ptr [rsi+0x14], 0x48; mov eax, [rbx+0x40]; add rsp, 0x20; pop rbx; jmp rax; 
0x00000000040a4c: shl byte ptr [rsi+0x48], 0x1; movd mm0, eax; ret; 
0x0000000004088d: shl byte ptr [rsi+0x48], 0x1; movd mm1, eax; mov [rdi], rax; subsd xmm0, xmm1; ret; 
0x000000000f9d7a: shl byte ptr [rsi+0xf], 0x1; insb [rdi], dx; ret; 
0x000000000add26: shl byte ptr [rsi+0xf], 0x1; outsd dx, [rsi]; ret; 
0x00000000045e93: shl byte ptr [rsi+0xf], 0x6c; rol dword ptr [rcx+rcx*4-0x40], 0xf; adc [rdi], eax; ret; 
0x000000000e9447: shl byte ptr [rsi+0xf], 0x6f; shl dword ptr [rsi+0xf], 0xd4; ret far; 
0x0000000017e6f7: shl byte ptr [rsi+rax*4+0xf], 0xbd; ror byte ptr [rax+0x1], 0xf8; add rax, r8; vzeroupper; ret; 
0x00000000149c23: shl byte ptr [rsi+rax+0x48], 0x8d; jge short 0x0000000000149c92; call rax; 
0x0000000014a6c3: shl byte ptr [rsi+rax+0x48], 0x8d; jge short 0x000000000014a722; call rax; 
0x0000000014189f: shl byte ptr [rsi+rbp*2+0x48], 0x8b; and [r8-0x77], cl; out dx, eax; call qword ptr [rax+0x20]; 
0x0000000014c334: shl byte ptr [rsi+rcx+0x49], 0x8b; cmp [rcx+rcx*4-0x39], cl; call qword ptr [rax+0x20]; 
0x000000000adf2f: shl byte ptr [rsi+rdi*2+0x48], cl; bsf eax, edx; ret; 
0x0000000017d34f: shl byte ptr [rsi+rdx*8+0x48], cl; movsxd ecx, ecx; add rax, rcx; sub rax, rdi; ret; 
0x00000000090881: shl byte ptr [rsi+rdx+0x48], 0x8b; add eax, 0x155e95; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000013e5f6: shl byte ptr [rsi+rdx+0x48], 0x8b; cmp eax, 0xaa640; ror rdi, 0x11; xor rdi, fs:[0x30]; call rax; 
0x000000000a8547: shl byte ptr [rsi+rdx+0xf], 0xbc; ror byte ptr [rax+0x1], 0xf8; add rax, rcx; ret; 
0x0000000014e757: shl byte ptr [rsi+rsi+0x48], 0x8b; sbb [r9+rcx*4-0x11], r9b; call qword ptr [rax+0x20]; 
0x00000000110805: shl byte ptr [rsi], 0x64; mov [rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000002b2c9: shl byte ptr [rsp+0xf], 0x1f; add [rax-0x77], cl; ret far; 
0x00000000099def: shl byte ptr [rsp+rax*8+0x48], 0x89; ret; 
0x00000000090d99: shl byte ptr [rsp+rax+0x31], 0xc0; pop rbx; ret; 
0x000000000a4ace: shl byte ptr [rsp+rax+0x39], 0xd0; jne short 0x00000000000a4ac0; mov rax, r8; ret; 
0x000000000a4a9a: shl byte ptr [rsp+rax+0x39], 0xf0; jne short 0x00000000000a4a90; mov rax, r8; ret; 
0x000000000d9871: shl byte ptr [rsp+rbp+0x48], 0x89; ret; 
0x00000000126d66: shl byte ptr [rsp+rbp+0x48], 0x8d; jne short 0x0000000000126d4d; lea rdi, [rip-0x184]; call rax; 
0x000000000e5d41: shl byte ptr [rsp+rbx+0xf], 0xb6; add ecx, [rax-0x77]; fimul st, dword ptr [rax-0x7d]; ret; 
0x00000000145c11: shl byte ptr [rsp+rcx+0x48], cl; add esp, 0x8; pop rbx; pop rbp; ret; 
0x00000000080d51: shl byte ptr [rsp+rcx+0x4c], 0x89; loopne 0x0000000000080db5; pop r12; pop r13; ret; 
0x00000000141739: shl byte ptr [rsp+rdi+0x48], 0x8b; and [r9], sil; test byte ptr [rax-0x77], 0xef; mov dword ptr [rbx+0x18], 0x0; call qword ptr [rax+0x28]; 
0x0000000017e6a9: shl byte ptr [rsp+rdx*8+0xf], 0xbd; ror byte ptr [rax+0x1], 0xf8; vzeroupper; ret; 
0x00000000107eb1: shl byte ptr [rsp+rsi+0x31], 0xd2; call rax; 
0x00000000125a8d: shl dh, 0x43; sbb al, 0x20; je short 0x0000000000125aa0; pop rbx; ret; 
0x000000000eacfd: shl dh, 0x82; enter 0x0, 0x0; jne 0x00000000000eac2d; ret; 
0x000000000409cc: shl dl, 0xf; pop rcx; add eax, 0x17631b; ret; 
0x0000000017dd38: shl dword ptr [rax+0x49], 0x39; ret far; 
0x000000000e425b: shl dword ptr [rax], 0xf4; dec dword ptr [rax-0x77]; ret; 
0x000000000a49f4: shl dword ptr [rbp-0x17], 0x1; mov byte ptr [rdi], 0x0; mov [r8], rax; mov rax, r9; ret; 
0x000000000a4bcd: shl dword ptr [rbp-0x18], 0x1; cmp eax, r10d; je short 0x00000000000a4bb8; mov rax, r8; ret; 
0x000000000a4c5d: shl dword ptr [rbp-0x20], 0x1; mov rax, r8; ret; 
0x000000000a4b1e: shl dword ptr [rbp-0x21], 0x1; mov rax, r8; ret; 
0x00000000084da5: shl dword ptr [rbx-0x5d17ffee], 0x1; cmp al, 0xfb; jmp qword ptr [rsi-0x70]; 
0x0000000011d3c1: shl dword ptr [rbx], 0x4e; adc [rax-0x73], cl; or al, 0x8e; add eax, [rcx+rdx]; ret; 
0x00000000186119: shl dword ptr [rcx], 0x1; ror byte ptr [rbx+0xc3b170c], 0x16; jne 0x0000000000185d99; vzeroupper; ret; 
0x000000000bd6a6: shl dword ptr [rcx], 0x1; shr cl, cl; fdivp st(7), st; jmp qword ptr [rsi-0x70]; 
0x000000000c2986: shl dword ptr [rcx], 0x1; shr cl, cl; xchg edx, eax; fdiv st(7), st; jmp qword ptr [rsi-0x70]; 
0x0000000008feab: shl dword ptr [rdi+0x15], 0x0; mov [rip+0x1567c2], rbx; add dword ptr [rip+0x1567b7], 0x1; pop rbx; ret; 
0x000000000a8186: shl dword ptr [rsi+0xb], cl; movzx ecx, byte ptr [rsi+rdx]; movzx eax, byte ptr [rdi+rdx]; sub eax, ecx; ret; 
0x000000000e944b: shl dword ptr [rsi+0xf], 0xd4; ret far; 
0x00000000055d2d: shl dword ptr [rsi+0xf], 0xd6; and al, 0xe8; fld st, tbyte ptr [rsp-0x18]; ret; 
0x00000000086661: shl dword ptr [rsi+0xf], 0xd6; or [r8+0xf6608cd], r8b; insb [rdi], dx; ret far; 
0x000000000add22: shl dword ptr [rsi+0xf], 0xd7; shl byte ptr [rsi+0xf], 0x1; outsd dx, [rsi]; ret; 
0x000000000b776f: shl dword ptr [rsi+0xf], 0xda; ret; 
0x000000000e2ea6: shl dword ptr [rsi+rax-0x80], 0x78; call far fword ptr [rsp+rsi*2-0xf]; 
0x0000000009c16b: shl dword ptr [rsi+rcx], 0xf6; mov byte ptr [rcx], 0x74; ret far; 
0x0000000011a37b: shl dword ptr [rsi-0x9], 0x1; dec dword ptr [rbx+0x48082444]; add esp, 0x18; ret; 
0x00000000118fef: shl eax, 0x20; and rax, rdi; or rax, rsi; ret; 
0x0000000004091b: shl eax, 0x34; and rcx, rdx; or rcx, rax; movq xmm0, rcx; ret; 
0x0000000013755e: shl eax, 0x3; shr rax, 0x4; and eax, 0x7f; ret; 
0x0000000010b7a2: shl eax, 0x4; mov edx, [rdx+rax]; mov rdi, [rbp-0x118]; mov rsi, r9; call qword ptr [rbp-0xf0]; 
0x000000000423e7: shl eax, cl; and rax, [rdi]; setne al; movzx eax, al; ret; 
0x0000000004234f: shl eax, cl; or [rdi], rax; xor eax, eax; ret; 
0x0000000011b1ad: shl eax, cl; test eax, 0xf200e; jne short 0x000000000011b1e0; mov eax, 0x42; syscall; 
0x000000000b7ee7: shl ebx, 0x1; movsb [rdi], [rsi]; ret; 
0x0000000005447c: shl ecx, cl; mov [rdi-0x10], r9; ret; 
0x000000000543fb: shl ecx, cl; mov [rdi-0x8], r9; ret; 
0x000000000543ca: shl ecx, cl; mov [rdi], r9; ret; 
0x00000000040d19: shl edi, 0x17; or edi, esi; movd xmm0, edi; mulss xmm0, [rip+0x1766b6]; ret; 
0x00000000040c91: shl edi, 0x17; or esi, edi; movd xmm0, esi; ret; 
0x00000000050a77: shl edx, 0x1e; mov r8d, edx; or r8d, eax; mov rax, r8; ret; 
0x000000000454da: shl edx, 0x20; or rax, rdx; ret; 
0x00000000072528: shl edx, 0x2; lea rcx, [rbx+rdx]; add rdx, r12; call qword ptr [r10+rax*8]; 
0x000000000adafa: shl edx, 0x30; or rax, rdx; bsf rax, rax; lea rax, [rdi+rax]; ret; 
0x000000001373db: shl edx, 0x4; add edx, 0x8; cmp esi, 0x80; cmovb eax, edx; ret; 
0x000000001373dc: shl edx, 0x4; add edx, 0x8; cmp esi, 0x80; cmovb eax, edx; ret; 
0x00000000145226: shl edx, 0x4; xor rax, rdx; mov [r8], rsi; mov [r8+0x8], rax; ret; 
0x00000000055bc3: shl edx, cl; mov [rdi], rdx; mov [rsi], eax; mov eax, 0x1; ret; 
0x0000000015a638: shl edx, cl; or [rdi+rax*8], rdx; xor eax, eax; ret; 
0x00000000055cec: shl esi, 0x20; or rax, rsi; movq xmm0, rax; ret; 
0x000000001375a3: shl esi, 0x4; lea r8, [rdi+rsi+0x8]; mov rax, r8; ret; 
0x00000000113983: shl esp, 0xc; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x2]; mov eax, 0xffffffff; ret; 
0x0000000005447b: shl r9, cl; mov [rdi-0x10], r9; ret; 
0x000000000543fa: shl r9, cl; mov [rdi-0x8], r9; ret; 
0x000000000543c9: shl r9, cl; mov [rdi], r9; ret; 
0x00000000118fee: shl rax, 0x20; and rax, rdi; or rax, rsi; ret; 
0x0000000004091a: shl rax, 0x34; and rcx, rdx; or rcx, rax; movq xmm0, rcx; ret; 
0x0000000010b7a1: shl rax, 0x4; mov edx, [rdx+rax]; mov rdi, [rbp-0x118]; mov rsi, r9; call qword ptr [rbp-0xf0]; 
0x000000000423e6: shl rax, cl; and rax, [rdi]; setne al; movzx eax, al; ret; 
0x0000000004234e: shl rax, cl; or [rdi], rax; xor eax, eax; ret; 
0x0000000011b1ac: shl rax, cl; test eax, 0xf200e; jne short 0x000000000011b1e0; mov eax, 0x42; syscall; 
0x000000000454d9: shl rdx, 0x20; or rax, rdx; ret; 
0x00000000072526: shl rdx, 0x2; lea rcx, [rbx+rdx]; add rdx, r12; call qword ptr [r10+rax*8]; 
0x000000000adaf9: shl rdx, 0x30; or rax, rdx; bsf rax, rax; lea rax, [rdi+rax]; ret; 
0x00000000145225: shl rdx, 0x4; xor rax, rdx; mov [r8], rsi; mov [r8+0x8], rax; ret; 
0x00000000055bc2: shl rdx, cl; mov [rdi], rdx; mov [rsi], eax; mov eax, 0x1; ret; 
0x0000000015a637: shl rdx, cl; or [rdi+rax*8], rdx; xor eax, eax; ret; 
0x00000000055ceb: shl rsi, 0x20; or rax, rsi; movq xmm0, rax; ret; 
0x000000001375a2: shl rsi, 0x4; lea r8, [rdi+rsi+0x8]; mov rax, r8; ret; 
0x00000000054474: shld eax, ecx, cl; mov [rdi-0x8], r8; shl r9, cl; mov [rdi-0x10], r9; ret; 
0x000000000543f4: shld eax, ecx, cl; mov [rdi], r8; shl r9, cl; mov [rdi-0x8], r9; ret; 
0x00000000054473: shld r8, r9, cl; mov [rdi-0x8], r8; shl r9, cl; mov [rdi-0x10], r9; ret; 
0x000000000543f2: shld r8, r9, cl; mov [rdi], r8; shl r9, cl; mov [rdi-0x8], r9; ret; 
0x00000000124f05: shr al, 0x25; ret; 
0x00000000071ac3: shr al, 0x27; mov eax, 0x2ebf000a; add [rax], al; add [rax-0x77], cl; ret; 
0x00000000143cbb: shr al, 0x2f; ret; 
0x0000000013068c: shr al, 0x5e; stc; call far fword ptr [rsi+0x5f]; 
0x000000001246b1: shr al, 0x79; ret far; 
0x0000000010c629: shr al, 0x81; ret; 
0x000000001298c5: shr al, 0x95; call far fword ptr gs:[rax+0x4c]; 
0x0000000009332a: shr al, 0xa0; leave; cld; jmp qword ptr [rbx+rcx*4+0x4]; 
0x000000000442d4: shr al, 0xa6; and esi, edi; dec dword ptr [rax-0x77]; ret; 
0x00000000143c0f: shr al, 0xdb; ret; 
0x000000001117e4: shr al, 0xe6; in al, 0xf4; call far fword ptr [rdx+0x59]; 
0x000000000d8956: shr al, 0xff; jmp qword ptr [rsi+0xf]; 
0x00000000126b8a: shr ax, 0xe; and eax, 0x1; ret; 
0x000000001486bd: shr bl, 0x2a; mov rax, [rbp+0x8]; mov rsi, rbx; mov rdi, rbp; call qword ptr [rax+0x48]; 
0x00000000141556: shr bl, 0x92; nop [rax]; endbr64; ret; 
0x00000000159a30: shr bl, 0xda; nop [rax+rax]; mov rax, [rip+0x8f889]; call qword ptr [rax+0x8]; 
0x00000000159938: shr bl, 0xdb; nop [rax+rax]; mov rax, [rip+0x8f981]; call qword ptr [rax]; 
0x000000000ccf91: shr bl, 0xe0; nop [rax]; lea rax, [rip-0x10f]; add rsp, 0x58; ret; 
0x000000000cce71: shr bl, 0xe0; nop [rax]; lea rax, [rip-0xff]; add rsp, 0x58; ret; 
0x000000000a693f: shr byte ptr [rcx], 0xc8; ret; 
0x000000000a8bbc: shr byte ptr [rcx], cl; rol bl, 0x1; xor eax, eax; ret; 
0x0000000007d782: shr byte ptr [rdi+0x63480012], cl; xor al, 0xb7; add rsi, rdi; notrack jmp rsi; 
0x000000000c6c1a: shr byte ptr [rdi], cl; cli; jmp qword ptr [rsi-0x70]; 
0x000000000c6fe4: shr byte ptr [rdx+0x1], 0x6a; add [rbx+rcx*4+0x4c], cl; and al, 0x10; call r13; 
0x000000000b99b1: shr byte ptr [rdx+0x1], cl; lea r9, [rsp+0x20]; call rbx; 
0x000000000b97ab: shr byte ptr [rdx], 0x4c; lea ecx, [rsp+0x18]; call r13; 
0x00000000081871: shr cl, 0x15; pop rdi; cli; jmp qword ptr [rsi+0xf]; 
0x0000000007f8fb: shr cl, 0x23; jnp short 0x000000000007f8fa; jmp qword ptr [rsi+0x2e]; 
0x000000000c8fa0: shr cl, 0x26; idiv bh; jmp qword ptr [rsi+0xf]; 
0x000000000883ab: shr cl, 0x43; cli; stc; jmp qword ptr [rsi+0x2e]; 
0x00000000087bf0: shr cl, 0x4d; add dl, bh; jmp qword ptr [rsi+0x2e]; 
0x0000000008011b: shr cl, 0x5b; je short 0x000000000008011a; jmp qword ptr [rsi+0x2e]; 
0x00000000127c6c: shr cl, 0x5e; or esi, esi; jmp qword ptr [rsi+0xf]; 
0x000000000717b8: shr cl, 0x64; ret; 
0x0000000005dcf8: shr cl, 0x66; idiv bh; jmp qword ptr [rsi-0x70]; 
0x00000000128c8c: shr cl, 0x6e; movsd [rdi], [rsi]; cmc; jmp qword ptr [rsi+0xf]; 
0x000000000858b4: shr cl, 0x85; and bh, dl; jmp qword ptr [rsi+0xf]; 
0x000000000bc8c0: shr cl, 0x86; idiv bh; jmp qword ptr [rsi+0xf]; 
0x00000000128014: shr cl, 0x8b; add eax, esi; jmp qword ptr [rsi+0xf]; 
0x000000000c1a4d: shr cl, 0x8e; idiv bh; jmp qword ptr [rsi+0xf]; 
0x00000000128ff1: shr cl, 0xb3; out dx, eax; jmp qword ptr [rsi+0xf]; 
0x000000000c39dc: shr cl, 0xbd; idiv bh; jmp qword ptr [rsi+0xf]; 
0x000000001498be: shr cl, 0xcc; jmp qword ptr [rsi+0x66]; 
0x0000000012877e: shr cl, 0xcf; cli; out dx, eax; jmp qword ptr [rsi+0x2e]; 
0x0000000007fe34: shr cl, 0xec; jbe short 0x000000000007fe33; jmp qword ptr [rsi+0xf]; 
0x00000000149b9e: shr cl, 0xec; jmp qword ptr [rsi+0x2e]; 
0x00000000081290: shr cl, 0xef; movsxd edi, edx; jmp qword ptr [rsi+0x2e]; 
0x00000000051a41: shr cl, 0xfd; idiv edi; jmp qword ptr [rsi+0xf]; 
0x0000000007fbcc: shr cl, 0xfe; js short 0x000000000007fbcb; jmp qword ptr [rsi+0x2e]; 
0x000000000bd6a8: shr cl, cl; fdivp st(7), st; jmp qword ptr [rsi-0x70]; 
0x000000000c2988: shr cl, cl; xchg edx, eax; fdiv st(7), st; jmp qword ptr [rsi-0x70]; 
0x000000000bdbb9: shr dword ptr [rax-0x7], cl; dec dword ptr [rax-0x7d]; ret; 
0x00000000108073: shr dword ptr [rbp-0x389bfff3], 0x1; add [rsi], dl; add [rax], al; add [rax-0x1], bh; ret; 
0x0000000005ed79: shr dword ptr [rcx+0x7e9000c], cl; jl short 0x000000000005ed7d; jmp qword ptr [rsi+0x2e]; 
0x00000000100aed: shr dword ptr [rdx+0xe], cl; add [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x000000000955b4: shr dword ptr [rsi+0x48], 0x3d; jmp far fword ptr [rdi+0x32760000]; 
0x00000000129867: shr eax, 0x10; cmp edx, 0x80000000; cmovne eax, edi; ret; 
0x0000000012987a: shr eax, 0x18; ret; 
0x00000000123226: shr eax, 0x1f; cmp dil, al; mov eax, edx; cmove eax, esi; ret; 
0x0000000004044f: shr eax, 0x1f; ret; 
0x00000000118f71: shr eax, 0x20; and edx, 0xfff; and eax, 0xfffff000; or eax, edx; ret; 
0x0000000018943c: shr eax, 0x20; cmp ecx, eax; jne short 0x0000000000189446; xor eax, eax; ret; 
0x00000000046395: shr eax, 0x20; mov [rdi+0x4], ax; xor eax, eax; ret; 
0x000000000cb73b: shr eax, 0x2; ret; 
0x00000000186b43: shr eax, 0x2; vzeroupper; ret; 
0x0000000018c70a: shr eax, 0x38; ret; 
0x0000000004079c: shr eax, 0x3f; ret; 
0x0000000008a426: shr eax, 0x4; and eax, 0x1; ret; 
0x00000000137562: shr eax, 0x4; and eax, 0x7f; ret; 
0x00000000092130: shr eax, 0x4; lea rdx, [rax+0x1]; mov [rip+0x151192], rdx; ret; 
0x0000000008a436: shr eax, 0x5; and eax, 0x1; ret; 
0x000000000b8506: shr eax, 0x6; and eax, 0x3fffc00; ret; 
0x000000000b8489: shr eax, 0xc; and eax, 0xf; movsxd rcx, [rsi+rax*4]; add rcx, rsi; notrack jmp rcx; 
0x00000000118f9c: shr eax, 0xc; xor al, al; or eax, edx; ret; 
0x00000000126b8b: shr eax, 0xe; and eax, 0x1; ret; 
0x000000000b84bb: shr eax, 0xe; and eax, 0x3fc00; ret; 
0x0000000011caaf: shr eax, cl; and eax, 0x1; ret; 
0x000000001199d1: shr eax, cl; and eax, 0x3; ret; 
0x0000000011cced: shr eax, cl; and r8d, 0x1; mov eax, r8d; ret; 
0x00000000157494: shr eax, cl; mov dh, 0x22; std; jmp qword ptr [rsi+0xf]; 
0x0000000015b74b: shr ebp, cl; jmp qword ptr [rsi-0x70]; 
0x000000000b8788: shr ebx, 0x16; lea eax, [rbx+0x1]; pop rbx; ret; 
0x00000000042b89: shr ebx, 0x1; imul r15, rbx; add r15, [rsp]; mov rsi, r15; call r14; 
0x00000000045f23: shr ecx, 0x10; and ecx, 0x3ff; xor eax, ecx; ret; 
0x0000000012329b: shr ecx, 0x1f; cmp sil, cl; cmove eax, edx; ret; 
0x00000000159135: shr ecx, 0x3; rep movsq [rdi], [rsi]; ret; 
0x00000000095e41: shr ecx, 0x3; rep stosq [rdi]; pop rbp; ret; 
0x000000001071dc: shr ecx, 0x3; rep stosq [rdi]; ret; 
0x0000000018fe40: shr ecx, 0x7a; idiv bh; jmp qword ptr [rsi+0x2e]; 
0x0000000005458c: shr ecx, cl; mov [rdi+0x10], r9; ret; 
0x00000000054515: shr ecx, cl; mov [rdi+0x8], r9; ret; 
0x000000000544e4: shr ecx, cl; mov [rdi], r9; ret; 
0x00000000043a1c: shr ecx, cl; ret far; 
0x00000000075ff2: shr edi, 0xff; jmp qword ptr [rsi+0x2e]; 
0x0000000014fc95: shr edx, 0x20; mov [rsp+0x8], rdx; call qword ptr [rax+0x8]; 
0x00000000150d1a: shr edx, 0x20; mov [rsp], edx; call qword ptr [rax+0x48]; 
0x00000000140f12: shr edx, 0x3; add rax, rcx; notrack jmp rax; 
0x00000000087680: shr edx, 0x4; and edx, 0x1; mov eax, edx; ret; 
0x00000000087780: shr edx, 0x5; and edx, 0x1; mov eax, edx; ret; 
0x000000001232c9: shr esi, 0x1f; cmp dil, sil; cmovne eax, edx; ret; 
0x00000000123263: shr esi, 0x1f; cmp r8b, sil; cmovne eax, edi; ret; 
0x00000000136fb9: shr esi, 0x3; mov eax, 0x2; sub esi, 0x1; mov [rdi+0x1], sil; ret; 
0x0000000011ccec: shr r8d, cl; and r8d, 0x1; mov eax, r8d; ret; 
0x0000000005458b: shr r9, cl; mov [rdi+0x10], r9; ret; 
0x00000000054514: shr r9, cl; mov [rdi+0x8], r9; ret; 
0x000000000544e3: shr r9, cl; mov [rdi], r9; ret; 
0x00000000118f70: shr rax, 0x20; and edx, 0xfff; and eax, 0xfffff000; or eax, edx; ret; 
0x0000000018943b: shr rax, 0x20; cmp ecx, eax; jne short 0x0000000000189446; xor eax, eax; ret; 
0x00000000046394: shr rax, 0x20; mov [rdi+0x4], ax; xor eax, eax; ret; 
0x000000000cb73a: shr rax, 0x2; ret; 
0x00000000186b42: shr rax, 0x2; vzeroupper; ret; 
0x0000000018c709: shr rax, 0x38; ret; 
0x0000000004079b: shr rax, 0x3f; ret; 
0x00000000137561: shr rax, 0x4; and eax, 0x7f; ret; 
0x0000000009212f: shr rax, 0x4; lea rdx, [rax+0x1]; mov [rip+0x151192], rdx; ret; 
0x00000000118f9b: shr rax, 0xc; xor al, al; or eax, edx; ret; 
0x00000000042b88: shr rbx, 0x1; imul r15, rbx; add r15, [rsp]; mov rsi, r15; call r14; 
0x0000000014fc94: shr rdx, 0x20; mov [rsp+0x8], rdx; call qword ptr [rax+0x8]; 
0x00000000150d19: shr rdx, 0x20; mov [rsp], edx; call qword ptr [rax+0x48]; 
0x00000000140f11: shr rdx, 0x3; add rax, rcx; notrack jmp rax; 
0x00000000054584: shrd eax, ecx, cl; mov [rdi+0x8], r8; shr r9, cl; mov [rdi+0x10], r9; ret; 
0x0000000005450e: shrd eax, ecx, cl; mov [rdi], r8; shr r9, cl; mov [rdi+0x8], r9; ret; 
0x00000000054583: shrd r8, r9, cl; mov [rdi+0x8], r8; shr r9, cl; mov [rdi+0x10], r9; ret; 
0x0000000005450c: shrd r8, r9, cl; mov [rdi], r8; shr r9, cl; mov [rdi+0x8], r9; ret; 
0x0000000005450d: shrd r8, r9, cl; mov [rdi], r8; shr r9, cl; mov [rdi+0x8], r9; ret; 
0x000000001846a5: shufps xmm0, [rdi+0x2], 0x0; lea rax, [rdi+0x2]; vzeroupper; ret; 
0x00000000182c15: shufps xmm0, [rdi+0x2], 0x0; vzeroupper; ret; 
0x0000000011f43b: sldt [rax]; add al, ch; pop rsp; sti; jmp qword ptr [rsi+0xf]; 
0x00000000118f77: sldt [rax]; and eax, 0xfffff000; or eax, edx; ret; 
0x000000000b86c8: sldt [rax]; lea rax, [rbx+0x1]; pop rbx; ret; 
0x000000000974e1: stc; adc al, 0x0; add [rax], al; add [rax], al; ret; 
0x00000000179617: stc; add [rax], al; add [rbp-0x77], cl; ret far; 
0x000000000a33fd: stc; add [rbp+0x19], eax; fild st, dword ptr [rcx-0x7d]; ret; 
0x000000000cc666: stc; add [rcx-0x1da25], eax; dec dword ptr [rax+0x63]; ret; 
0x00000000108544: stc; add [rdi+0x30], esi; mov eax, 0x106; syscall; 
0x000000000f9aa6: stc; add al, [rcx+0xf]; xchg edi, eax; ret; 
0x000000000d7509: stc; add ch, [rcx]; ret far; 
0x000000001071d5: stc; add ecx, 0x150; shr ecx, 0x3; rep stosq [rdi]; ret; 
0x00000000156f75: stc; add esi, [rsi+0x7]; ret; 
0x000000000cd813: stc; call far fword ptr [rcx+0x5e]; 
0x000000000cd730: stc; call far fword ptr [rdx+0x59]; 
0x0000000013068f: stc; call far fword ptr [rsi+0x5f]; 
0x000000001291a0: stc; call qword ptr [rax-0x18]; 
0x000000001412e4: stc; call rbp; 
0x00000000053d01: stc; clc; jne short 0x0000000000053cf0; mov rax, rdx; ret; 
0x00000000127753: stc; dec dword ptr [rax-0x73]; add eax, 0xfff90714; cmove rax, rdx; ret; 
0x00000000127683: stc; dec dword ptr [rax-0x73]; add eax, 0xfff90804; cmove rax, rdx; ret; 
0x000000001275b3: stc; dec dword ptr [rax-0x73]; add eax, 0xfff908d4; cmove rax, rdx; ret; 
0x000000001277c7: stc; dec dword ptr [rax-0x73]; add eax, 0xfff90a10; cmovne rax, rdx; ret; 
0x0000000008a867: stc; dec dword ptr [rax-0x77]; ret; 
0x000000000bb343: stc; dec dword ptr [rax-0x7d]; ret; 
0x00000000147d36: stc; dec dword ptr [rcx-0x17f7dbbc]; movd ecx, mm7; jmp qword ptr [rsi+0xf]; 
0x00000000136775: stc; jae short 0x0000000000136783; mov eax, 0xffffffff; ret; 
0x00000000137329: stc; jb short 0x0000000000137315; mov eax, 0xffffffff; pop rbx; ret; 
0x0000000016064c: stc; jb short 0x0000000000160657; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001606fc: stc; jb short 0x0000000000160707; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016302c: stc; jb short 0x0000000000163037; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001630dc: stc; jb short 0x00000000001630e7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000017ec42: stc; je short 0x000000000017ec06; lea r10, [r10+r9]; notrack jmp r10; 
0x000000001802e2: stc; je short 0x00000000001802a6; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000139f0f: stc; jg short 0x0000000000139ecd; mov byte ptr [r8], 0x0; mov rax, r10; ret; 
0x0000000009913b: stc; jmp far fword ptr [rcx]; 
0x0000000009914b: stc; jmp far fword ptr [rdi-0x78f10000]; 
0x00000000091519: stc; jmp qword ptr [rbx+rcx*4+0x4]; 
0x000000000883af: stc; jmp qword ptr [rsi+0x2e]; 
0x000000000925e6: stc; jmp qword ptr [rsi+0xf]; 
0x0000000008df47: stc; jmp qword ptr [rsi+0xf]; 
0x0000000012897c: stc; jmp qword ptr [rsi-0x70]; 
0x000000000a5007: stc; jmp qword ptr [rsp+rax*2-0x77]; 
0x000000000a5008: stc; jmp qword ptr [rsp+rax*2-0x77]; 
0x0000000007b336: stc; jmp rcx; 
0x000000001846ff: stc; lea rax, [rdi+rdx]; vzeroupper; ret; 
0x00000000162128: stc; mov [rdi-0x4], ecx; ret; 
0x00000000182c47: stc; mov [rdi], rcx; mov [rdi+rdx-0x7], r9; vzeroupper; ret; 
0x000000000faf67: stc; mov dword ptr [rsi], 0x0; movups [rsi+0x8], xmm0; ret; 
0x00000000162122: stc; mov ecx, [rsi-0x4]; mov [rdi-0x7], edx; mov [rdi-0x4], ecx; ret; 
0x0000000012b9f0: stc; mov edi, [rsp+0x38]; mov r8, rbx; mov rdx, rbp; call qword ptr [rsp+0x60]; 
0x0000000012a96e: stc; mov rcx, [rsp+0x38]; mov esi, r14d; mov rdi, r13; call qword ptr [rsp+0x50]; 
0x000000000364c2: stc; notrack jmp rcx; 
0x00000000159944: stc; or [rax], al; call qword ptr [rax]; 
0x0000000015eed7: stc; or [rax], eax; add [rbp-0x77], cl; ret far; 
0x0000000011caae: stc; shr eax, cl; and eax, 0x1; ret; 
0x00000000189a28: stc; vmovups [rdi-0x200], zmm15; ret; 
0x00000000182c4f: stc; vzeroupper; ret; 
0x0000000019011a: std; add [rax], al; add [rcx-0x77], cl; ret; 
0x000000000e09d4: std; add [rax], al; cmove rax, rdx; ret; 
0x00000000168347: std; add al, 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000d8e52: std; add al, [rax]; add [rax], al; syscall; 
0x00000000187753: std; add al, [rax]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x000000001284cc: std; call qword ptr [rax-0x18]; 
0x0000000014b1ad: std; call qword ptr [rax-0x5e1f00d]; 
0x00000000159960: std; cld; jmp qword ptr [rsi+0x66]; 
0x00000000040601: std; fstp st(1), st; ret; 
0x00000000051a43: std; idiv edi; jmp qword ptr [rsi+0xf]; 
0x000000001465a7: std; in eax, dx; jmp qword ptr [rsi+0xf]; 
0x00000000107940: std; inc dword ptr [rbx-0x307c0036]; dec dword ptr [rcx+0x75b8c6]; add [rax], al; syscall; 
0x00000000107969: std; inc dword ptr [rbx-0x307c0036]; dec dword ptr [rcx+0x77b8c6]; add [rax], al; syscall; 
0x0000000016010c: std; jb short 0x0000000000160117; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001601bc: std; jb short 0x00000000001601c7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000162aec: std; jb short 0x0000000000162af7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000162b9c: std; jb short 0x0000000000162ba7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000003482c: std; je short 0x0000000000034848; pop rbx; ret; 
0x0000000018a20e: std; jg short 0x000000000018a25b; jmp qword ptr [rdx-0x2f]; 
0x00000000130923: std; jmp qword ptr [rcx+rax*2-0x75]; 
0x00000000130334: std; jmp qword ptr [rdi+rax*8+0x45]; 
0x0000000014b514: std; jmp qword ptr [rsi+0x2e]; 
0x0000000014a081: std; jmp qword ptr [rsi+0x66]; 
0x00000000047e08: std; jmp qword ptr [rsi+0xf]; 
0x0000000005676c: std; jmp qword ptr [rsi-0x70]; 
0x000000000fb866: std; jmp qword ptr [rsp+rax*2-0x77]; 
0x000000001846db: std; lea rax, [rdi+rdx]; vzeroupper; ret; 
0x000000000910b2: std; mov [rdi+0x8], eax; xor eax, eax; ret; 
0x000000001846d7: std; mov [rdi+rdx-0x3], ecx; lea rax, [rdi+rdx]; vzeroupper; ret; 
0x00000000182c37: std; mov [rdi+rdx-0x3], ecx; vzeroupper; ret; 
0x0000000016194b: std; mov [rdi-0x2], cx; ret; 
0x00000000161943: std; mov cx, [rsi-0x2]; mov [rdi-0x3], dx; mov [rdi-0x2], cx; ret; 
0x00000000043acf: std; mov rax, [rsp]; add r15, r12; call rax; 
0x000000001097c7: std; mov rdi, rbp; mov eax, 0x4f; syscall; 
0x00000000113651: std; or al, 0x0; ret; 
0x000000000b7e5c: std; rep movsb [rdi], [rsi]; cld; ret; 
0x000000000264d7: std; ret far; 
0x0000000009a17f: std; ret; 
0x000000000b502f: std; str [rbx+0x63]; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000a8fdd: std; str [rdi+0x63]; or al, 0x8a; lea r10, [r10+r9]; notrack jmp r10; 
0x000000000369fb: std; test rax, rax; je short 0x0000000000036a03; call rax; 
0x00000000094c00: std; test rdi, rdi; js 0x0000000000094d94; mov rax, [rip+0x14e17f]; call qword ptr [rax]; 
0x0000000018a184: std; vmovdqu64 [r11], zmm4; vzeroupper; ret; 
0x0000000018a06e: std; vmovdqu64 [rdi+rdx-0x100], zmm7; vzeroupper; ret; 
0x00000000189758: std; vmovups [r9-0x80], zmm14; vmovups [r9-0x40], zmm15; ret; 
0x0000000018951e: std; vmovups [r9-0x80], zmm6; vmovups [r9-0x40], zmm7; ret; 
0x00000000189c46: std; vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x00000000182c3b: std; vzeroupper; ret; 
0x0000000017d723: std; xlat [rbx]; ret far; 
0x0000000017e281: std; xlat [rbx]; ret; 
0x0000000017e1ae: std; xlat [rbx]; rol dword ptr [rbp+0x311b75c0], 0xc0; vzeroupper; ret; 
0x00000000029b70: sti; adc al, [rax]; mov rdi, rbx; call r12; 
0x00000000138451: sti; adc bh, bh; jmp qword ptr [rsi+0x66]; 
0x0000000013e3b9: sti; add [rax], al; add [rax-0x77], cl; ret; 
0x0000000010368f: sti; add [rdi], ecx; xchg ebp, eax; ret; 
0x000000001684c7: sti; add al, 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000f86cd: sti; add al, 0x75; fisttp word ptr [rax+0x63], st; sub [rbp-0x77], al; ret far; 
0x0000000018795e: sti; add al, [rax]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x000000000e40dc: sti; add cl, [rax-0x7d]; ret; 
0x000000001036f1: sti; add cl, [rdi]; xchg ebp, eax; ret; 
0x000000001763e1: sti; add eax, [rax]; add [rax-0x7cb7fec8], al; fdivr st, st(7); ret; 
0x00000000042b8e: sti; add r15, [rsp]; mov rsi, r15; call r14; 
0x000000000cf3c1: sti; dec dword ptr [rax+0x39]; ret; 
0x000000001565a7: sti; dec dword ptr [rax-0x77]; ret; 
0x000000000de881: sti; dec dword ptr [rbx+0x480c2444]; add esp, 0x18; ret; 
0x000000000de75b: sti; dec dword ptr [rbx+0x480c2444]; add esp, 0x28; ret; 
0x000000000de6a1: sti; dec dword ptr [rbx+0x48102444]; add esp, 0x28; ret; 
0x00000000157949: sti; dec dword ptr [rbx+rcx*4+0x2d]; div byte ptr [rax+rcx-0x7600cf00]; ret; 
0x00000000155c1c: sti; dec dword ptr [rbx-0x17b7b]; jmp qword ptr [rcx+rcx*4+0x3]; 
0x000000000de867: sti; dec dword ptr [rcx+0x22b8c7]; add [rax], al; syscall; 
0x0000000015708f: sti; dec dword ptr [rcx-0x4cfa7639]; ret; 
0x00000000115ae5: sti; jae short 0x0000000000115b08; mov rsi, r12; mov rdi, r15; call r14; 
0x000000001603ac: sti; jb short 0x00000000001603b7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016045c: sti; jb short 0x0000000000160467; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000162d8c: sti; jb short 0x0000000000162d97; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000162e3c: sti; jb short 0x0000000000162e47; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000157ba1: sti; jmp qword ptr [rcx+rax*2-0x39]; 
0x00000000088a34: sti; jmp qword ptr [rsi+0x2e]; 
0x00000000086e43: sti; jmp qword ptr [rsi+0x66]; 
0x0000000011f442: sti; jmp qword ptr [rsi+0xf]; 
0x0000000011f441: sti; jmp qword ptr [rsi+0xf]; 
0x00000000084dac: sti; jmp qword ptr [rsi-0x70]; 
0x0000000014df7d: sti; jmp qword ptr [rsi-0x7d]; 
0x000000000755b7: sti; jmp rsi; 
0x0000000014b7f1: sti; mov [0xffa314158d48ffff], al; dec dword ptr [rbp+rcx*4+0x4c]; and al, 0x14; call qword ptr [rax]; 
0x00000000161d28: sti; mov [rdi-0x4], ecx; ret; 
0x000000000759e9: sti; mov dword ptr [rsp+0x28], 0x1; jmp rsi; 
0x00000000161d22: sti; mov ecx, [rsi-0x4]; mov [rdi-0x5], edx; mov [rdi-0x4], ecx; ret; 
0x00000000075b3c: sti; mov r13d, 0x1; jmp rsi; 
0x00000000119012: sti; mov rdi, rcx; sub rsp, 0x8; call rsi; 
0x000000000fbb27: sti; or al, [rax]; movsxd rax, [rdx+rdi*4]; add rax, rdx; notrack jmp rax; 
0x0000000014992c: sti; out dx, al; call qword ptr [rax-0x5e1f00d]; 
0x00000000149904: sti; out dx, al; jmp qword ptr [rsi+0xf]; 
0x0000000004110c: sti; push rax; ret; 
0x00000000039ac1: sti; ret far; 
0x000000000e5892: sti; sbb cl, al; clc; sbb [rcx], bh; ret; 
0x00000000083e0e: sti; test byte ptr [rdi], 0x2; jne short 0x0000000000083e88; mov rax, [rax+0xe0]; call qword ptr [rax+0x68]; 
0x00000000189a19: sti; vmovups [rdi-0x180], zmm13; vmovups [rdi-0x1c0], zmm14; vmovups [rdi-0x200], zmm15; ret; 
0x00000000091173: sti; xor eax, eax; ret; 
0x0000000009d409: stosb [rdi]; add [rax], eax; cmove rax, rdx; ret; 
0x0000000015e22e: stosb [rdi]; add al, 0x0; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000018dba9: stosb [rdi]; add al, [rax]; movsxd rcx, [r9+rbx*4]; add rcx, r9; notrack jmp rcx; 
0x000000000e0e8e: stosb [rdi]; add rax, rdx; notrack jmp rax; 
0x000000000fdf93: stosb [rdi]; jmp qword ptr [rsi+0x2e]; 
0x000000000f9992: stosb [rdi]; leave; bnd jmp qword ptr [rbx+rcx*4+0x4]; 
0x0000000012b67a: stosb [rdi]; leave; or eax, [rax]; syscall; 
0x000000000b8258: stosb [rdi]; mov rax, rdx; ret; 
0x000000000966b6: stosb [rdi]; ret far; 
0x000000000ed362: stosb [rdi]; ret; 
0x0000000003abd6: stosb [rdi]; sbb al, [rax]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000130332: stosb [rdi]; xchg ecx, eax; std; jmp qword ptr [rdi+rax*8+0x45]; 
0x00000000051d0d: stosd [rdi]; add [rax], al; add [rcx-0x7d], cl; ret; 
0x0000000009d2a9: stosd [rdi]; add [rax], eax; cmove rax, rdx; ret; 
0x0000000009d2a2: stosd [rdi]; add [rax], eax; lea rax, [rip+0x1abf4]; cmove rax, rdx; ret; 
0x000000000d01c4: stosd [rdi]; cmc; or eax, 0x3d8d4800; add dword ptr [rsi+rcx], 0xf6887ce8; jmp qword ptr [rsi+0x2e]; 
0x000000000ae204: stosd [rdi]; fimul st, dword ptr [rax+0xf]; mov esp, 0xd00148d2; sub rax, rdi; ret; 
0x0000000003730e: stosd [rdi]; in eax, 0x1a; add [rax-0x73], cl; add eax, 0x1ae547; ret; 
0x0000000014b73a: stosd [rdi]; in eax, dx; dec dword ptr [rax-0x77]; ret; 
0x00000000137444: stosd [rdi]; mov [r8+0x1], dl; mov rax, r8; mov byte ptr [r8+0x2], 0x0; ret; 
0x0000000015a751: stosd [rdi]; mov edi, 0xc1480008; enter 0x6411, 0x48; xor eax, [0x30]; jmp rax; 
0x00000000149f67: stosd [rdi]; mov rax, [rsp+0x10]; mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x18]; 
0x00000000130921: stosd [rdi]; or al, 0xfd; jmp qword ptr [rcx+rax*2-0x75]; 
0x0000000012d6c7: stosd [rdi]; or eax, [rax]; syscall; 
0x00000000095e46: stosd [rdi]; pop rbp; ret; 
0x00000000095e51: stosd [rdi]; ret far; 
0x000000001071e1: stosd [rdi]; ret; 
0x0000000003aad8: stosd [rdi]; sbb al, [rax]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000002aaff: stosd [rdi]; sbb eax, [rax]; syscall; 
0x00000000137443: stosq [rdi]; mov [r8+0x1], dl; mov rax, r8; mov byte ptr [r8+0x2], 0x0; ret; 
0x00000000095e45: stosq [rdi]; pop rbp; ret; 
0x000000001071e0: stosq [rdi]; ret; 
0x000000000b5006: str [r11+0x63]; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b4f67: str [r11+0x63]; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b440c: str [r11+0x63]; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b4646: str [r9+0x63]; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b4f34: str [r9+0x63]; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8457: str [rax+0x63]; add al, 0xbe; add rax, rsi; notrack jmp rax; 
0x000000000b3888: str [rbx+0x63]; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b5b2e: str [rbx+0x63]; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b42de: str [rbx+0x63]; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6316: str [rcx+0x63]; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b3007: str [rcx+0x63]; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b4744: str [rcx+0x63]; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000a8fdf: str [rdi+0x63]; or al, 0x8a; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000010b01b: sub [r10+0x1], r15b; call qword ptr [rbp+0x40]; 
0x0000000010b37b: sub [r10+0x2], r15b; call qword ptr [rbp+0x40]; 
0x0000000010b2fb: sub [r10+0x5], r15b; call qword ptr [rbp+0x40]; 
0x000000000cb026: sub [r11], r15b; sub [rbp+0x63], r14b; ret; 
0x00000000085fce: sub [r13-0x7b], r8b; shl byte ptr [rbx+rbp*2+0x49], 0x2b; and [r8+0x1], r9b; ret; 
0x00000000071a22: sub [r15+rcx-0x4a], r8b; ret; 
0x000000001515a5: sub [r8+r15*4], r8b; add [rax], eax; add [rax], al; ret; 
0x00000000151182: sub [r8-0x77], r9b; ja short 0x00000000001511a0; mov eax, r8d; ret; 
0x000000000f85b5: sub [r8-0x77], r9b; ret; 
0x00000000090d95: sub [r8-0x7b], cl; shl byte ptr [rsp+rax+0x31], 0xc0; pop rbx; ret; 
0x000000001511b7: sub [r9+r8-0x3a], r9b; mov [rdi+0x18], rsi; mov rax, r8; ret; 
0x0000000010ac00: sub [r9+r9*4-0xa], cl; mov edx, [rdx+rax]; call qword ptr [rbx+0x40]; 
0x000000001512d5: sub [r9], r15b; shl byte ptr [rbx+0xd], 0x1; xor r8d, r8d; mov eax, r8d; ret; 
0x00000000119782: sub [rax+0x113], bh; mov rsi, [rsp+0x10]; mov edi, [rsp+0x8]; syscall; 
0x0000000010dd22: sub [rax+0x146], bh; mov rsi, [rsp+0x10]; mov edi, [rsp+0x8]; syscall; 
0x000000000e82b2: sub [rax+0x1], bh; pop rbx; pop rbp; pop r12; ret; 
0x000000001515b6: sub [rax+0x1], bh; ret; 
0x00000000049989: sub [rax+0x39], cl; ret; 
0x000000000e098e: sub [rax+0x7fffffff], edi; cmp rdx, 0x58465342; jne short 0x00000000000e09a0; ret; 
0x000000000bd28a: sub [rax+0xf], ecx; fucompp; ret; 
0x000000000e5dcd: sub [rax+rbp+0xf], esi; mov dh, 0x43; add [rax-0x7d], ecx; ret; 
0x000000001515a6: sub [rax+rdi*4], al; add [rax], eax; add [rax], al; ret; 
0x0000000008a45e: sub [rax-0x3f76bbfe], cl; ret; 
0x0000000008a45d: sub [rax-0x3f76bbfe], r9b; ret; 
0x0000000002901b: sub [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; jmp rax; 
0x0000000010b018: sub [rax-0x73], cl; sub [r10+0x1], r15b; call qword ptr [rbp+0x40]; 
0x0000000010b378: sub [rax-0x73], cl; sub [r10+0x2], r15b; call qword ptr [rbp+0x40]; 
0x0000000010b2f8: sub [rax-0x73], cl; sub [r10+0x5], r15b; call qword ptr [rbp+0x40]; 
0x000000000daeee: sub [rax-0x75], cl; and al, 0x18; call rax; 
0x00000000141ac2: sub [rax-0x75], cl; and al, 0x20; mov rdx, [rsp+0x18]; mov rsi, [rsp+0x10]; call qword ptr [rax]; 
0x0000000002da72: sub [rax-0x75], cl; je short 0x000000000002da9b; mov rdi, [rsp+0x50]; mov rax, [rsp+0x18]; call rax; 
0x000000000f385b: sub [rax-0x75], cl; sbb [rbx+0xa4ba], cl; add [rsi+0xf], ah; outsb dx, [rsi]; ret; 
0x00000000151183: sub [rax-0x77], cl; ja short 0x00000000001511a0; mov eax, r8d; ret; 
0x00000000045395: sub [rax-0x77], cl; ret; 
0x00000000082d43: sub [rax-0x78], al; cmp [rcx+rcx*4-0x38], al; ret; 
0x00000000121811: sub [rax-0x7b], cl; ror byte ptr [rdi], 0x84; ret; 
0x00000000090d96: sub [rax-0x7b], cl; shl byte ptr [rsp+rax+0x31], 0xc0; pop rbx; ret; 
0x00000000069a80: sub [rax-0x7d], cl; ret; 
0x0000000006ef8d: sub [rax], al; add [rax-0x7d], cl; ret; 
0x0000000009a69b: sub [rax], al; add [rax], al; jne 0x000000000009a752; add rsp, 0x18; ret; 
0x00000000108b9c: sub [rax], al; add [rax], al; jne 0x0000000000108c63; add rsp, 0x78; ret; 
0x000000001091a2: sub [rax], al; add [rax], al; jne 0x0000000000109245; add rsp, 0x68; ret; 
0x00000000126da0: sub [rax], al; add [rax], al; jne 0x0000000000126e7d; leave; ret; 
0x00000000041461: sub [rax], al; add [rax], al; jne short 0x000000000004146c; add rsp, 0x18; ret; 
0x000000000417a4: sub [rax], al; add [rax], al; jne short 0x00000000000417b2; add rsp, 0x148; ret; 
0x00000000041db0: sub [rax], al; add [rax], al; jne short 0x0000000000041dc5; add rsp, 0x118; ret; 
0x00000000041e33: sub [rax], al; add [rax], al; jne short 0x0000000000041e48; add rsp, 0x118; ret; 
0x00000000041f3e: sub [rax], al; add [rax], al; jne short 0x0000000000041f4c; add rsp, 0x98; ret; 
0x000000000424a1: sub [rax], al; add [rax], al; jne short 0x00000000000424af; add rsp, 0x148; ret; 
0x00000000042941: sub [rax], al; add [rax], al; jne short 0x000000000004294f; add rsp, 0xa8; ret; 
0x000000000455ef: sub [rax], al; add [rax], al; jne short 0x00000000000455fa; add rsp, 0x28; ret; 
0x000000000456df: sub [rax], al; add [rax], al; jne short 0x00000000000456ea; add rsp, 0x28; ret; 
0x00000000045a13: sub [rax], al; add [rax], al; jne short 0x0000000000045a6a; add rsp, 0x18; ret; 
0x00000000045f69: sub [rax], al; add [rax], al; jne short 0x0000000000045f74; add rsp, 0x18; ret; 
0x00000000045fb6: sub [rax], al; add [rax], al; jne short 0x0000000000045fc1; add rsp, 0x18; ret; 
0x00000000046008: sub [rax], al; add [rax], al; jne short 0x0000000000046013; add rsp, 0x18; ret; 
0x00000000046055: sub [rax], al; add [rax], al; jne short 0x0000000000046060; add rsp, 0x18; ret; 
0x000000000460a8: sub [rax], al; add [rax], al; jne short 0x00000000000460b3; add rsp, 0x18; ret; 
0x000000000460f5: sub [rax], al; add [rax], al; jne short 0x0000000000046100; add rsp, 0x18; ret; 
0x00000000050d41: sub [rax], al; add [rax], al; jne short 0x0000000000050d4f; add rsp, 0xd8; ret; 
0x0000000005229b: sub [rax], al; add [rax], al; jne short 0x00000000000522a9; add rsp, 0xd8; ret; 
0x00000000055916: sub [rax], al; add [rax], al; jne short 0x0000000000055995; leave; ret; 
0x00000000059a2f: sub [rax], al; add [rax], al; jne short 0x0000000000059a72; add rsp, 0x38; ret; 
0x0000000005fd74: sub [rax], al; add [rax], al; jne short 0x000000000005fd82; add rsp, 0xd8; ret; 
0x0000000005fe49: sub [rax], al; add [rax], al; jne short 0x000000000005fe57; add rsp, 0xd8; ret; 
0x0000000005ff00: sub [rax], al; add [rax], al; jne short 0x000000000005ff0e; add rsp, 0xd8; ret; 
0x0000000005ffd2: sub [rax], al; add [rax], al; jne short 0x000000000005ffe0; add rsp, 0xd8; ret; 
0x00000000060094: sub [rax], al; add [rax], al; jne short 0x00000000000600a2; add rsp, 0xd8; ret; 
0x00000000060154: sub [rax], al; add [rax], al; jne short 0x0000000000060162; add rsp, 0xd8; ret; 
0x00000000060242: sub [rax], al; add [rax], al; jne short 0x0000000000060250; add rsp, 0xd8; ret; 
0x00000000060319: sub [rax], al; add [rax], al; jne short 0x0000000000060327; add rsp, 0xd8; ret; 
0x00000000060f23: sub [rax], al; add [rax], al; jne short 0x0000000000060f37; add rsp, 0x18; ret; 
0x000000000612ac: sub [rax], al; add [rax], al; jne short 0x00000000000612ba; add rsp, 0xd8; ret; 
0x00000000061387: sub [rax], al; add [rax], al; jne short 0x0000000000061395; add rsp, 0xd8; ret; 
0x00000000082e04: sub [rax], al; add [rax], al; jne short 0x0000000000082e12; add rsp, 0xd8; ret; 
0x00000000082ec0: sub [rax], al; add [rax], al; jne short 0x0000000000082ece; add rsp, 0xd8; ret; 
0x00000000082fb9: sub [rax], al; add [rax], al; jne short 0x0000000000082fc7; add rsp, 0xd8; ret; 
0x00000000083089: sub [rax], al; add [rax], al; jne short 0x0000000000083097; add rsp, 0xd8; ret; 
0x00000000083142: sub [rax], al; add [rax], al; jne short 0x0000000000083150; add rsp, 0xd8; ret; 
0x0000000008a3f2: sub [rax], al; add [rax], al; jne short 0x000000000008a409; add rsp, 0x48; ret; 
0x00000000091b39: sub [rax], al; add [rax], al; jne short 0x0000000000091bb7; add rsp, 0x98; ret; 
0x000000000c6bec: sub [rax], al; add [rax], al; jne short 0x00000000000c6bfa; add rsp, 0xd8; ret; 
0x000000000c6cc7: sub [rax], al; add [rax], al; jne short 0x00000000000c6cd5; add rsp, 0xd8; ret; 
0x000000000cc1cf: sub [rax], al; add [rax], al; jne short 0x00000000000cc1e9; add rsp, 0x28; ret; 
0x000000000ccff5: sub [rax], al; add [rax], al; jne short 0x00000000000cd036; add rsp, 0x28; ret; 
0x000000000d6538: sub [rax], al; add [rax], al; jne short 0x00000000000d6543; add rsp, 0x18; ret; 
0x000000000d8df8: sub [rax], al; add [rax], al; jne short 0x00000000000d8e03; add rsp, 0x18; ret; 
0x000000000db2fb: sub [rax], al; add [rax], al; jne short 0x00000000000db353; add rsp, 0x38; ret; 
0x000000000dfbcb: sub [rax], al; add [rax], al; jne short 0x00000000000dfc23; add rsp, 0x38; ret; 
0x000000000dfc6b: sub [rax], al; add [rax], al; jne short 0x00000000000dfcc3; add rsp, 0x38; ret; 
0x000000000dff3b: sub [rax], al; add [rax], al; jne short 0x00000000000dffa3; add rsp, 0x38; ret; 
0x000000000dffeb: sub [rax], al; add [rax], al; jne short 0x00000000000e0053; add rsp, 0x38; ret; 
0x000000000fd48d: sub [rax], al; add [rax], al; jne short 0x00000000000fd4e6; add rsp, 0x38; ret; 
0x00000000107cc7: sub [rax], al; add [rax], al; jne short 0x0000000000107ce1; add rsp, 0x28; ret; 
0x00000000107f71: sub [rax], al; add [rax], al; jne short 0x0000000000107f7c; add rsp, 0x38; ret; 
0x00000000107fcc: sub [rax], al; add [rax], al; jne short 0x0000000000107fd7; add rsp, 0x18; ret; 
0x0000000010801e: sub [rax], al; add [rax], al; jne short 0x0000000000108029; add rsp, 0x18; ret; 
0x0000000010e347: sub [rax], al; add [rax], al; jne short 0x000000000010e393; add rsp, 0x68; ret; 
0x0000000010e3d6: sub [rax], al; add [rax], al; jne short 0x000000000010e423; add rsp, 0x18; ret; 
0x0000000010e48e: sub [rax], al; add [rax], al; jne short 0x000000000010e4db; add rsp, 0x58; ret; 
0x0000000010e52c: sub [rax], al; add [rax], al; jne short 0x000000000010e57b; add rsp, 0x58; ret; 
0x0000000010ea79: sub [rax], al; add [rax], al; jne short 0x000000000010ea8b; add rsp, 0x18; ret; 
0x0000000010f8fb: sub [rax], al; add [rax], al; jne short 0x000000000010f95b; add rsp, 0x38; ret; 
0x0000000010f99b: sub [rax], al; add [rax], al; jne short 0x000000000010f9fb; add rsp, 0x38; ret; 
0x0000000010fa50: sub [rax], al; add [rax], al; jne short 0x000000000010facb; add rsp, 0x38; ret; 
0x0000000010fb20: sub [rax], al; add [rax], al; jne short 0x000000000010fb9b; add rsp, 0x38; ret; 
0x0000000010fc1a: sub [rax], al; add [rax], al; jne short 0x000000000010fc25; add rsp, 0x28; ret; 
0x00000000110760: sub [rax], al; add [rax], al; jne short 0x0000000000110777; add rsp, 0x58; ret; 
0x000000001107d3: sub [rax], al; add [rax], al; jne short 0x00000000001107de; add rsp, 0x28; ret; 
0x000000001108ab: sub [rax], al; add [rax], al; jne short 0x00000000001108ed; add rsp, 0x68; ret; 
0x00000000111a69: sub [rax], al; add [rax], al; jne short 0x0000000000111a74; add rsp, 0x38; ret; 
0x00000000111aec: sub [rax], al; add [rax], al; jne short 0x0000000000111af7; add rsp, 0x38; ret; 
0x00000000111b60: sub [rax], al; add [rax], al; jne short 0x0000000000111b6b; add rsp, 0x38; ret; 
0x00000000111bcb: sub [rax], al; add [rax], al; jne short 0x0000000000111bd6; add rsp, 0x38; ret; 
0x000000001131d4: sub [rax], al; add [rax], al; jne short 0x00000000001131e2; add rsp, 0xd8; ret; 
0x000000001132ad: sub [rax], al; add [rax], al; jne short 0x00000000001132bb; add rsp, 0xd8; ret; 
0x00000000114605: sub [rax], al; add [rax], al; jne short 0x0000000000114610; add rsp, 0x18; ret; 
0x00000000115d99: sub [rax], al; add [rax], al; jne short 0x0000000000115da7; add rsp, 0xd8; ret; 
0x00000000115e59: sub [rax], al; add [rax], al; jne short 0x0000000000115e67; add rsp, 0xd8; ret; 
0x00000000116037: sub [rax], al; add [rax], al; jne short 0x0000000000116045; add rsp, 0x418; ret; 
0x000000001162a0: sub [rax], al; add [rax], al; jne short 0x00000000001162ae; add rsp, 0xd8; ret; 
0x0000000011650d: sub [rax], al; add [rax], al; jne short 0x000000000011651b; add rsp, 0xd8; ret; 
0x00000000119ad3: sub [rax], al; add [rax], al; jne short 0x0000000000119af3; add rsp, 0x58; ret; 
0x0000000011ac4a: sub [rax], al; add [rax], al; jne short 0x000000000011ac55; add rsp, 0x18; ret; 
0x0000000011b1cf: sub [rax], al; add [rax], al; jne short 0x000000000011b223; add rsp, 0x58; ret; 
0x0000000012393b: sub [rax], al; add [rax], al; jne short 0x0000000000123949; add rsp, 0xd8; ret; 
0x00000000125544: sub [rax], al; add [rax], al; jne short 0x0000000000125552; add rsp, 0xd8; ret; 
0x00000000127b29: sub [rax], al; add [rax], al; jne short 0x0000000000127b3c; add rsp, 0xd8; ret; 
0x00000000127c2f: sub [rax], al; add [rax], al; jne short 0x0000000000127c45; add rsp, 0xd8; ret; 
0x00000000127d45: sub [rax], al; add [rax], al; jne short 0x0000000000127d53; add rsp, 0xd8; ret; 
0x00000000127e0d: sub [rax], al; add [rax], al; jne short 0x0000000000127e1b; add rsp, 0xd8; ret; 
0x00000000128c4f: sub [rax], al; add [rax], al; jne short 0x0000000000128c65; add rsp, 0xd8; ret; 
0x00000000128d65: sub [rax], al; add [rax], al; jne short 0x0000000000128d73; add rsp, 0xd8; ret; 
0x00000000128e2d: sub [rax], al; add [rax], al; jne short 0x0000000000128e3b; add rsp, 0xd8; ret; 
0x00000000129274: sub [rax], al; add [rax], al; jne short 0x0000000000129285; add rsp, 0x28; ret; 
0x000000001292d4: sub [rax], al; add [rax], al; jne short 0x00000000001292e5; add rsp, 0x28; ret; 
0x0000000012939d: sub [rax], al; add [rax], al; jne short 0x00000000001293ab; add rsp, 0xd8; ret; 
0x0000000012947d: sub [rax], al; add [rax], al; jne short 0x000000000012948b; add rsp, 0xd8; ret; 
0x0000000012955d: sub [rax], al; add [rax], al; jne short 0x000000000012956b; add rsp, 0xd8; ret; 
0x0000000013101b: sub [rax], al; add [rax], al; jne short 0x0000000000131049; add rsp, 0x38; ret; 
0x000000001310b8: sub [rax], al; add [rax], al; jne short 0x00000000001310c3; add rsp, 0x38; ret; 
0x00000000131125: sub [rax], al; add [rax], al; jne short 0x0000000000131130; add rsp, 0x28; ret; 
0x00000000138fba: sub [rax], al; add [rax], al; jne short 0x0000000000138fc5; add rsp, 0x18; ret; 
0x0000000013900d: sub [rax], al; add [rax], al; jne short 0x0000000000139018; add rsp, 0x28; ret; 
0x0000000013989c: sub [rax], al; add [rax], al; jne short 0x00000000001398a7; add rsp, 0x18; ret; 
0x0000000014d641: sub [rax], al; add [rax], al; jne short 0x000000000014d64c; add rsp, 0x78; ret; 
0x0000000014d6b7: sub [rax], al; add [rax], al; jne short 0x000000000014d6c2; add rsp, 0x78; ret; 
0x0000000014d727: sub [rax], al; add [rax], al; jne short 0x000000000014d732; add rsp, 0x78; ret; 
0x0000000014d797: sub [rax], al; add [rax], al; jne short 0x000000000014d7a2; add rsp, 0x78; ret; 
0x0000000014d7f8: sub [rax], al; add [rax], al; jne short 0x000000000014d803; add rsp, 0x78; ret; 
0x0000000014d85c: sub [rax], al; add [rax], al; jne short 0x000000000014d867; add rsp, 0x78; ret; 
0x0000000014d8c7: sub [rax], al; add [rax], al; jne short 0x000000000014d8d2; add rsp, 0x78; ret; 
0x0000000014d94a: sub [rax], al; add [rax], al; jne short 0x000000000014d955; add rsp, 0x78; ret; 
0x0000000014de6d: sub [rax], al; add [rax], al; jne short 0x000000000014de98; add rsp, 0x28; ret; 
0x0000000014f8d2: sub [rax], al; add [rax], al; jne short 0x000000000014f8dd; add rsp, 0x48; ret; 
0x000000001567fe: sub [rax], al; add [rax], al; jne short 0x0000000000156834; add rsp, 0x18; ret; 
0x00000000159920: sub [rax], al; add [rax], al; jne short 0x000000000015995e; add rsp, 0x58; ret; 
0x00000000159a17: sub [rax], al; add [rax], al; jne short 0x0000000000159a64; add rsp, 0x68; ret; 
0x00000000159bb0: sub [rax], al; add [rax], al; jne short 0x0000000000159c14; add rsp, 0x68; ret; 
0x00000000159c87: sub [rax], al; add [rax], al; jne short 0x0000000000159ce1; add rsp, 0x38; ret; 
0x0000000015a275: sub [rax], al; add [rax], al; jne short 0x000000000015a285; add rsp, 0x28; ret; 
0x0000000015a99a: sub [rax], al; add [rax], al; jne short 0x000000000015a9a5; add rsp, 0x28; ret; 
0x0000000015916e: sub [rax], al; add [rax], al; mov [rsp+0x68], rax; xor eax, eax; call qword ptr [r12+0xf88]; 
0x0000000010dc98: sub [rax], al; add [rax], al; syscall; 
0x00000000090d77: sub [rax], al; je short 0x0000000000090d80; xor eax, eax; ret; 
0x00000000121609: sub [rax], al; mov eax, 0x0; cmovns rax, [rbx+0x28]; pop rbx; ret; 
0x0000000013625a: sub [rax], eax; add [rax], al; mov [rdi+0xc], edx; mov [rsi], rdi; ret; 
0x00000000136b29: sub [rax], eax; add [rax], al; mov eax, 0x104; cmovne eax, edx; ret; 
0x00000000136b70: sub [rax], eax; add [rax], al; ret; 
0x0000000011a935: sub [rax], eax; add [rax], al; syscall; 
0x000000000cdd9e: sub [rax], eax; add rsp, 0x10; pop rbp; ret; 
0x000000000cdfc9: sub [rax], eax; add rsp, 0x8; pop rbp; pop r12; ret; 
0x00000000105a23: sub [rax], esi; jmp qword ptr [rsi+0xf]; 
0x000000000f9cc7: sub [rbp+0x31], al; sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; syscall; 
0x00000000141c64: sub [rbp+0x41], bl; pop rsp; pop r13; pop r14; ret; 
0x000000000d95f4: sub [rbp+0x5b2b74c0], al; pop rbp; pop r12; ret; 
0x000000000cb02a: sub [rbp+0x63], dh; ret; 
0x000000000cb029: sub [rbp+0x63], r14b; ret; 
0x0000000010811b: sub [rbp-0x2708fff3], ebp; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000f86d3: sub [rbp-0x77], al; ret far; 
0x00000000085fcf: sub [rbp-0x7b], al; shl byte ptr [rbx+rbp*2+0x49], 0x2b; and [r8+0x1], r9b; ret; 
0x000000000a0622: sub [rbp-0x7cbe00b5], cl; ret; 
0x000000000dfc94: sub [rbx+0x10], ch; add [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x000000000829fc: sub [rbx+0x11], dh; lea rsi, [rcx+0x4]; mov [rdx+0x20], rsi; mov [rcx], eax; ret; 
0x000000000829fb: sub [rbx+0x11], sil; lea rsi, [rcx+0x4]; mov [rdx+0x20], rsi; mov [rcx], eax; ret; 
0x00000000082ba3: sub [rbx+0x12], dh; lea rsi, [rcx+0x4]; mov [rdx+0x20], rsi; mov [rcx], eax; ret; 
0x00000000082ba2: sub [rbx+0x12], sil; lea rsi, [rcx+0x4]; mov [rdx+0x20], rsi; mov [rcx], eax; ret; 
0x00000000142ee6: sub [rbx+0x147401f8], eax; mov dword ptr [rsi], 0x10; mov qword ptr [rsi+0x8], 0x1; mov [rsi+0x10], rax; ret; 
0x00000000061654: sub [rbx+0x14], cl; add [rax+0x63], cl; add al, 0x81; add rax, rcx; notrack jmp rax; 
0x0000000014c297: sub [rbx+0x41], bl; pop rsp; ret; 
0x00000000191af6: sub [rbx+0x54d022d], eax; add [rcx], al; pop rbx; ret; 
0x00000000040fa5: sub [rbx+0x5d], bl; pop r12; pop r13; ret; 
0x00000000061b11: sub [rbx+0x5d], bl; pop r12; ret; 
0x000000000590cf: sub [rbx+0x5d], bl; ret; 
0x00000000159718: sub [rbx-0x1b], dh; mov eax, 0x1; ret; 
0x00000000159717: sub [rbx-0x1b], sil; mov eax, 0x1; ret; 
0x0000000002931b: sub [rbx-0x389bffe5], ebx; add [rcx], cl; add [rax], al; add [rax-0x1], bh; ret; 
0x0000000002bb6f: sub [rbx-0x3eb7ffe5], ebx; enter 0x6411, 0x48; xor eax, [0x30]; jmp rax; 
0x000000000cb027: sub [rbx], bh; sub [rbp+0x63], r14b; ret; 
0x0000000004231c: sub [rbx], cl; sbb al, [rax]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000172063: sub [rbx], eax; add [rax], al; ret; 
0x000000000f86df: sub [rcx+0x63], cl; ret far; 
0x000000001511b8: sub [rcx+rax-0x3a], cl; mov [rdi+0x18], rsi; mov rax, r8; ret; 
0x00000000147112: sub [rcx+rcx*4-0x19], cl; call rcx; 
0x00000000098de4: sub [rcx+rcx*4-0x19], cl; call rdx; 
0x0000000014c8eb: sub [rcx+rcx*4-0x20], al; pop rbp; pop r12; ret; 
0x0000000006086d: sub [rcx+rcx*4-0x20], cl; pop rbx; pop r12; ret; 
0x00000000150e66: sub [rcx+rcx*4-0x40], eax; ret; 
0x0000000010ac01: sub [rcx+rcx*4-0xa], cl; mov edx, [rdx+rax]; call qword ptr [rbx+0x40]; 
0x0000000010851b: sub [rcx-0x389bfff3], ebp; add [rsi], dl; add [rax], al; add [rax-0x1], bh; ret; 
0x00000000041684: sub [rcx-0x3b76b310], cl; mov rbp, r9; nop; jmp rdx; 
0x00000000077334: sub [rcx-0x3b7cb718], cl; sbb [rbx+0x5d], bl; pop r12; pop r13; ret; 
0x00000000143995: sub [rcx], al; add [rax], al; mov rdi, r12; call qword ptr [rbx]; 
0x0000000010f557: sub [rcx], al; add [rax], al; syscall; 
0x000000001512d6: sub [rcx], bh; shl byte ptr [rbx+0xd], 0x1; xor r8d, r8d; mov eax, r8d; ret; 
0x00000000156874: sub [rcx], cl; add [rcx], al; add rsp, 0x8; ret; 
0x0000000010e98d: sub [rcx], dh; ror byte ptr [rax-0x77], 0xe2; mov eax, 0x10; syscall; 
0x0000000004251b: sub [rcx], ecx; sbb al, [rax]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000015ff78: sub [rdi+0x10], ebx; jb short 0x000000000015ff86; movaps [rdi], xmm4; notrack jmp r9; 
0x000000001600c8: sub [rdi+0x10], ebx; jb short 0x00000000001600d6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000160218: sub [rdi+0x10], ebx; jb short 0x0000000000160226; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000160368: sub [rdi+0x10], ebx; jb short 0x0000000000160376; movaps [rdi], xmm4; notrack jmp r9; 
0x000000001604b8: sub [rdi+0x10], ebx; jb short 0x00000000001604c6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000160608: sub [rdi+0x10], ebx; jb short 0x0000000000160616; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000160758: sub [rdi+0x10], ebx; jb short 0x0000000000160766; movaps [rdi], xmm4; notrack jmp r9; 
0x000000001608a8: sub [rdi+0x10], ebx; jb short 0x00000000001608b6; movaps [rdi], xmm4; notrack jmp r9; 
0x000000001609f8: sub [rdi+0x10], ebx; jb short 0x0000000000160a06; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000160b48: sub [rdi+0x10], ebx; jb short 0x0000000000160b56; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000160c98: sub [rdi+0x10], ebx; jb short 0x0000000000160ca6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000160de8: sub [rdi+0x10], ebx; jb short 0x0000000000160df6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000160f38: sub [rdi+0x10], ebx; jb short 0x0000000000160f46; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000161088: sub [rdi+0x10], ebx; jb short 0x0000000000161096; movaps [rdi], xmm4; notrack jmp r9; 
0x000000001611d8: sub [rdi+0x10], ebx; jb short 0x00000000001611e6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000162958: sub [rdi+0x10], ebx; jb short 0x0000000000162966; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000162aa8: sub [rdi+0x10], ebx; jb short 0x0000000000162ab6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000162bf8: sub [rdi+0x10], ebx; jb short 0x0000000000162c06; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000162d48: sub [rdi+0x10], ebx; jb short 0x0000000000162d56; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000162e98: sub [rdi+0x10], ebx; jb short 0x0000000000162ea6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000162fe8: sub [rdi+0x10], ebx; jb short 0x0000000000162ff6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000163138: sub [rdi+0x10], ebx; jb short 0x0000000000163146; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000163288: sub [rdi+0x10], ebx; jb short 0x0000000000163296; movaps [rdi], xmm4; notrack jmp r9; 
0x000000001633d8: sub [rdi+0x10], ebx; jb short 0x00000000001633e6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000163528: sub [rdi+0x10], ebx; jb short 0x0000000000163536; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000163678: sub [rdi+0x10], ebx; jb short 0x0000000000163686; movaps [rdi], xmm4; notrack jmp r9; 
0x000000001637c8: sub [rdi+0x10], ebx; jb short 0x00000000001637d6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000163918: sub [rdi+0x10], ebx; jb short 0x0000000000163926; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000163a68: sub [rdi+0x10], ebx; jb short 0x0000000000163a76; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000163bb8: sub [rdi+0x10], ebx; jb short 0x0000000000163bc6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000007d6e5: sub [rdi+0x10], esi; movsxd rax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x0000000007cdd5: sub [rdi+0x28], esi; movzx edx, dl; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x000000000d0267: sub [rdi+rcx*4+0x2], bl; jbe short 0x00000000000d0270; ret; 
0x00000000071a23: sub [rdi+rcx-0x4a], al; ret; 
0x0000000015fed4: sub [rdi-0x10], ebp; notrack jmp r9; 
0x0000000011028a: sub [rdi-0x11e2153], bh; mov eax, 0xa9; syscall; 
0x00000000143ec4: sub [rdi-0x17], dh; mov [rdx+0x20], rsi; ret; 
0x0000000015fed0: sub [rdi-0x20], esp; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000015feca: sub [rdi-0x30], ebx; jb short 0x000000000015fedd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000016001a: sub [rdi-0x30], ebx; jb short 0x000000000016002d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000016016a: sub [rdi-0x30], ebx; jb short 0x000000000016017d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x000000001602ba: sub [rdi-0x30], ebx; jb short 0x00000000001602cd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000016040a: sub [rdi-0x30], ebx; jb short 0x000000000016041d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000016055a: sub [rdi-0x30], ebx; jb short 0x000000000016056d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x000000001606aa: sub [rdi-0x30], ebx; jb short 0x00000000001606bd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x000000001607f8: sub [rdi-0x30], ebx; jb short 0x0000000000160810; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000016094a: sub [rdi-0x30], ebx; jb short 0x000000000016095d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000160a9a: sub [rdi-0x30], ebx; jb short 0x0000000000160aad; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000160bea: sub [rdi-0x30], ebx; jb short 0x0000000000160bfd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000160d3a: sub [rdi-0x30], ebx; jb short 0x0000000000160d4d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000160e8a: sub [rdi-0x30], ebx; jb short 0x0000000000160e9d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000160fda: sub [rdi-0x30], ebx; jb short 0x0000000000160fed; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000016112a: sub [rdi-0x30], ebx; jb short 0x000000000016113d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x000000001628aa: sub [rdi-0x30], ebx; jb short 0x00000000001628bd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x000000001629fa: sub [rdi-0x30], ebx; jb short 0x0000000000162a0d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000162b4a: sub [rdi-0x30], ebx; jb short 0x0000000000162b5d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000162c9a: sub [rdi-0x30], ebx; jb short 0x0000000000162cad; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000162dea: sub [rdi-0x30], ebx; jb short 0x0000000000162dfd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000162f3a: sub [rdi-0x30], ebx; jb short 0x0000000000162f4d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000016308a: sub [rdi-0x30], ebx; jb short 0x000000000016309d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x000000001631d8: sub [rdi-0x30], ebx; jb short 0x00000000001631f0; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000016332a: sub [rdi-0x30], ebx; jb short 0x000000000016333d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000016347a: sub [rdi-0x30], ebx; jb short 0x000000000016348d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x000000001635ca: sub [rdi-0x30], ebx; jb short 0x00000000001635dd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000016371a: sub [rdi-0x30], ebx; jb short 0x000000000016372d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000016386a: sub [rdi-0x30], ebx; jb short 0x000000000016387d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x000000001639ba: sub [rdi-0x30], ebx; jb short 0x00000000001639cd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000163b0a: sub [rdi-0x30], ebx; jb short 0x0000000000163b1d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000015138c: sub [rdi], cl; adc [rdi+0x18], eax; ret; 
0x000000000e5dcf: sub [rdi], cl; mov dh, 0x43; add [rax-0x7d], ecx; ret; 
0x0000000007cdd7: sub [rdi], cl; mov dh, 0xd2; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x0000000015ff7e: sub [rdi], esp; notrack jmp r9; 
0x0000000010b01c: sub [rdx+0x1], bh; call qword ptr [rbp+0x40]; 
0x0000000010b37c: sub [rdx+0x2], bh; call qword ptr [rbp+0x40]; 
0x0000000010b2fc: sub [rdx+0x5], bh; call qword ptr [rbp+0x40]; 
0x00000000189219: sub [rdx], eax; add [rax], al; xor eax, eax; ret; 
0x00000000156523: sub [rdx], esi; std; jmp qword ptr [rsi+0xf]; 
0x00000000165247: sub [rip+0x14634900], eax; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001105a8: sub [rip+0x64d8f700], cl; mov [rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000110578: sub [rip+0xc76400], cl; add [rax], al; add [rax-0x1], bh; ret; 
0x000000001789e7: sub [rip-0x76b30000], ecx; ret far; 
0x0000000015fe6b: sub [rsi-0x1], cl; jb short 0x000000000015fe77; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000015ff1b: sub [rsi-0x1], cl; jb short 0x000000000015ff27; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016284b: sub [rsi-0x1], cl; jb short 0x0000000000162857; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001628fb: sub [rsi-0x1], cl; jb short 0x0000000000162907; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000015ffbb: sub [rsi-0x2], cl; jb short 0x000000000015ffc7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016006b: sub [rsi-0x2], cl; jb short 0x0000000000160077; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016299b: sub [rsi-0x2], cl; jb short 0x00000000001629a7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000162a4b: sub [rsi-0x2], cl; jb short 0x0000000000162a57; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016010b: sub [rsi-0x3], cl; jb short 0x0000000000160117; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001601bb: sub [rsi-0x3], cl; jb short 0x00000000001601c7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000162aeb: sub [rsi-0x3], cl; jb short 0x0000000000162af7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000162b9b: sub [rsi-0x3], cl; jb short 0x0000000000162ba7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016025b: sub [rsi-0x4], cl; jb short 0x0000000000160267; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016030b: sub [rsi-0x4], cl; jb short 0x0000000000160317; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000162c3b: sub [rsi-0x4], cl; jb short 0x0000000000162c47; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000162ceb: sub [rsi-0x4], cl; jb short 0x0000000000162cf7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001603ab: sub [rsi-0x5], cl; jb short 0x00000000001603b7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016045b: sub [rsi-0x5], cl; jb short 0x0000000000160467; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000162d8b: sub [rsi-0x5], cl; jb short 0x0000000000162d97; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000162e3b: sub [rsi-0x5], cl; jb short 0x0000000000162e47; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001604fb: sub [rsi-0x6], cl; jb short 0x0000000000160507; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001605ab: sub [rsi-0x6], cl; jb short 0x00000000001605b7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000162edb: sub [rsi-0x6], cl; jb short 0x0000000000162ee7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000162f8b: sub [rsi-0x6], cl; jb short 0x0000000000162f97; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000000389d4: sub [rsi-0x76b7fff3], ch; ret; 
0x0000000016064b: sub [rsi-0x7], cl; jb short 0x0000000000160657; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001606fb: sub [rsi-0x7], cl; jb short 0x0000000000160707; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016302b: sub [rsi-0x7], cl; jb short 0x0000000000163037; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001630db: sub [rsi-0x7], cl; jb short 0x00000000001630e7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016079b: sub [rsi-0x8], cl; jb short 0x00000000001607a7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016084b: sub [rsi-0x8], cl; jb short 0x0000000000160857; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016317b: sub [rsi-0x8], cl; jb short 0x0000000000163187; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016322b: sub [rsi-0x8], cl; jb short 0x0000000000163237; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001608eb: sub [rsi-0x9], cl; jb short 0x00000000001608f7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016099b: sub [rsi-0x9], cl; jb short 0x00000000001609a7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001632cb: sub [rsi-0x9], cl; jb short 0x00000000001632d7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016337b: sub [rsi-0x9], cl; jb short 0x0000000000163387; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000160a3b: sub [rsi-0xa], cl; jb short 0x0000000000160a47; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000160aeb: sub [rsi-0xa], cl; jb short 0x0000000000160af7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016341b: sub [rsi-0xa], cl; jb short 0x0000000000163427; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001634cb: sub [rsi-0xa], cl; jb short 0x00000000001634d7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000160b8b: sub [rsi-0xb], cl; jb short 0x0000000000160b97; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000160c3b: sub [rsi-0xb], cl; jb short 0x0000000000160c47; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016356b: sub [rsi-0xb], cl; jb short 0x0000000000163577; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016361b: sub [rsi-0xb], cl; jb short 0x0000000000163627; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000160cdb: sub [rsi-0xc], cl; jb short 0x0000000000160ce7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000160d8b: sub [rsi-0xc], cl; jb short 0x0000000000160d97; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001636bb: sub [rsi-0xc], cl; jb short 0x00000000001636c7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016376b: sub [rsi-0xc], cl; jb short 0x0000000000163777; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000160e2b: sub [rsi-0xd], cl; jb short 0x0000000000160e37; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000160edb: sub [rsi-0xd], cl; jb short 0x0000000000160ee7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016380b: sub [rsi-0xd], cl; jb short 0x0000000000163817; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001638bb: sub [rsi-0xd], cl; jb short 0x00000000001638c7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000160f7b: sub [rsi-0xe], cl; jb short 0x0000000000160f87; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016102b: sub [rsi-0xe], cl; jb short 0x0000000000161037; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016395b: sub [rsi-0xe], cl; jb short 0x0000000000163967; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000163a0b: sub [rsi-0xe], cl; jb short 0x0000000000163a17; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001610cb: sub [rsi-0xf], cl; jb short 0x00000000001610d7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016117b: sub [rsi-0xf], cl; jb short 0x0000000000161187; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000163aab: sub [rsi-0xf], cl; jb short 0x0000000000163ab7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000163b5b: sub [rsi-0xf], cl; jb short 0x0000000000163b67; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000127663: sub [rsi], al; add [rax-0x73], cl; add eax, 0x62883; cmove rax, rdx; ret; 
0x00000000127593: sub [rsi], al; add [rax-0x73], cl; add eax, 0x62953; cmove rax, rdx; ret; 
0x0000000014b60d: sub [rsp+0x20], eax; call qword ptr [rax+0x28]; 
0x0000000014cc44: sub [rsp+0x20], eax; push 0x0; push 0x3c; lea r9, [rsp+0x2a]; call qword ptr [rax]; 
0x00000000141f6c: sub [rsp+0x30], eax; push qword ptr [rip+0x74be2]; push qword ptr [rip+0x74bd4]; lea r9, [rsp+0x2c]; call qword ptr [rax]; 
0x0000000014c9fc: sub [rsp+0x30], eax; push r13; push r12; lea r9, [rsp+0x3a]; call qword ptr [rax]; 
0x00000000151783: sub [rsp+0x60], ecx; movups [rsp+0x18], xmm0; call r8; 
0x0000000015177a: sub [rsp+0x70], eax; pxor xmm0, xmm0; movaps [rsp+0x60], xmm1; movups [rsp+0x18], xmm0; call r8; 
0x00000000041869: sub [rsp+0xc0], eax; movaps [rsp+0xd0], xmm0; movaps [rsp+0xe0], xmm0; movaps [rsp+0xf0], xmm0; syscall; 
0x00000000041871: sub [rsp+0xd0], eax; movaps [rsp+0xe0], xmm0; movaps [rsp+0xf0], xmm0; syscall; 
0x00000000041879: sub [rsp+0xe0], eax; movaps [rsp+0xf0], xmm0; syscall; 
0x00000000041881: sub [rsp+0xf0], eax; syscall; 
0x00000000119a1b: sub [rsp+rcx+0x64d8f700], edx; mov [rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000e5dc9: sub [rsp+rdx+0x3c], dh; sub [rax+rbp+0xf], esi; mov dh, 0x43; add [rax-0x7d], ecx; ret; 
0x000000000903c2: sub ah, [rdx-0x7]; dec dword ptr [rax-0x77]; ret; 
0x0000000010144c: sub ah, dh; jmp qword ptr [rbx+rcx*4+0x4]; 
0x00000000123e16: sub al, 0x0; add [rax-0x77], cl; fidivr st, word ptr [rdi+0x2000005]; mov rdx, rax; call qword ptr [r13+0x28]; 
0x0000000011a865: sub al, 0x0; add [rax], al; mov rsi, [rsp+0x10]; mov edi, [rsp+0x8]; syscall; 
0x0000000011a6ba: sub al, 0x0; add [rax], al; syscall; 
0x000000000d01fb: sub al, 0x11; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x2]; mov eax, 0xffffffff; ret; 
0x000000000bac26: sub al, 0x1; add [rax], al; add [rax-0x7d], cl; ret; 
0x000000000adca0: sub al, 0x1; add [rax], al; bsr rsi, rsi; lea rax, [rdi+rsi]; ret; 
0x0000000011a0d5: sub al, 0x1; add [rax], al; syscall; 
0x000000000cb031: sub al, 0x3b; sub al, 0x75; pop rax; ret; 
0x00000000126d68: sub al, 0x48; lea esi, [rbp-0x20]; lea rdi, [rip-0x184]; call rax; 
0x00000000164cc0: sub al, 0x5; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000eddf1: sub al, 0x5b; pop rbp; pop r12; ret; 
0x000000001277f0: sub al, 0x6; add [rax-0x73], cl; adc eax, 0x62c16; cmove rax, rdx; ret; 
0x000000001856d6: sub al, 0x72; add cl, [rax+0x77f8c50f]; ret; 
0x000000000cb034: sub al, 0x75; pop rax; ret; 
0x0000000013ec30: sub al, 0xa0; or al, [rax]; syscall; 
0x00000000046420: sub al, 0xa6; add al, 0x0; mov rax, [rsp+0x8]; add rsp, 0x28; ret; 
0x00000000187bc3: sub al, 0xa; add [rax], al; xor eax, eax; ret; 
0x00000000055c1b: sub al, 0xc7; add al, [rax]; add [rax], al; add [rax+0x1], bh; ret; 
0x000000001101a8: sub al, 0xd; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x00000000110164: sub al, 0xd; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x2]; mov eax, 0xffffffff; ret; 
0x00000000156b2e: sub al, 0xfd; jmp qword ptr [rsi+0x2e]; 
0x00000000141f80: sub al, 0xff; adc [rax-0x75], cl; or [r8-0x77], r9b; out dx, eax; call qword ptr [rax+0x20]; 
0x00000000187620: sub al, 0xff; add al, [rax]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x000000000caf95: sub al, [rax+0x15740fe2]; mov eax, [rdi+0x10]; cmp eax, [rsi+0x10]; jne 0x00000000000cb090; ret; 
0x000000000caff5: sub al, [rax+0x15740fe2]; mov eax, [rdi+0x20]; cmp eax, [rsi+0x20]; jne 0x00000000000cb090; ret; 
0x000000000cb045: sub al, [rax+0x15740fe2]; mov eax, [rdi+0x30]; cmp eax, [rsi+0x30]; jne short 0x00000000000cb090; ret; 
0x000000000caf35: sub al, [rax+0x15740fe2]; mov eax, [rdi]; cmp eax, [rsi]; jne 0x00000000000cb090; ret; 
0x0000000003fb2a: sub al, [rax]; add [rax], al; mov rax, r10; ret; 
0x0000000011a331: sub al, [rax]; add [rax], al; syscall; 
0x0000000008beca: sub al, [rcx]; add [rax], al; mov rsi, rsp; mov rdi, rbp; call qword ptr [r13+0x90]; 
0x000000001650ce: sub al, [rip+0x14634900]; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000dab1a: sub al, bh; adc [rax], al; syscall; 
0x0000000010e1d1: sub al, bh; dec dword ptr [rbx+0x48182444]; add esp, 0x28; ret; 
0x0000000010c085: sub al, ch; push rbp; loope 0x000000000010c086; dec dword ptr [rax-0x77]; ret; 
0x000000000f814f: sub al, ch; ret far; 
0x0000000008c487: sub al, ch; ret; 
0x0000000017ead5: sub al, ch; std; xlat [rbx]; ret; 
0x000000001361f3: sub al, dh; jmp qword ptr [rsi+0x2e]; 
0x000000001084ed: sub bh, [rax+0x103]; syscall; 
0x0000000011b1b5: sub bh, [rax+0x42]; syscall; 
0x0000000010e32d: sub bh, [rax+0x48]; syscall; 
0x000000000d8f6d: sub bh, [rax+0xe3]; syscall; 
0x000000001290bb: sub bh, ch; jmp qword ptr [rsi-0x70]; 
0x00000000188b0c: sub bl, 0x2; add [rcx+0x63], cl; or al, 0x93; add rcx, r11; notrack jmp rcx; 
0x000000001515c6: sub bl, al; nop [rax+rax]; endbr64; xor eax, eax; ret; 
0x000000000e6e47: sub bl, ch; ret far; 
0x00000000146f62: sub byte ptr [rax+0xf000000], 0xc8; mov eax, eax; mov [rdx], rax; mov eax, 0x1; ret; 
0x00000000156e93: sub ch, bh; jmp qword ptr [rsi+0x2e]; 
0x00000000156f37: sub ch, bh; jmp qword ptr [rsi+0xf]; 
0x00000000061720: sub cl, [rax-0x73]; or eax, 0x144ac0; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x000000000feed3: sub cl, [rax-0x75]; mov ebp, 0xfffffe50; mov rdx, [r12]; mov rax, [rbp-0x1e0]; call rax; 
0x000000001486bf: sub cl, [rax-0x75]; or [r8-0x77], r9b; fimul st, word ptr [rax-0x77]; out dx, eax; call qword ptr [rax+0x48]; 
0x000000000ed7bf: sub cl, [rax-0x7d]; ret; 
0x0000000011a11a: sub cl, [rbp-0x2708fff4]; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010774a: sub cl, [rbx+0x4634901]; test [rcx+rax-0x20], cl; notrack jmp rax; 
0x0000000009e385: sub cl, [rcx+rcx*4-0x40]; ret; 
0x000000000409e6: sub cl, al; ret; 
0x00000000037d94: sub cl, bl; sbb al, [rax]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000072901: sub dh, al; add [rcx-0x7d], cl; ret; 
0x0000000005f805: sub dh, al; add [rip-0x13317], ch; jmp qword ptr [rsi-0x70]; 
0x0000000005db65: sub dh, al; add [rip-0x4e117], ch; jmp qword ptr [rsi-0x70]; 
0x0000000005e4e5: sub dh, al; add [rip-0x6ea17], ch; jmp qword ptr [rsi-0x70]; 
0x00000000136ec2: sub dh, dh; out dx, al; jmp qword ptr [rsi+0xf]; 
0x00000000121452: sub dl, [rax-0x10]; dec dword ptr [rax-0x77]; ret; 
0x00000000045181: sub dword ptr [r13], 0x1; xor esi, esi; mov rdi, r9; call r8; 
0x0000000014175e: sub dword ptr [rax+0x1000022], 0x48; mov edi, ebp; call qword ptr [rax+0x18]; 
0x0000000008cedf: sub dword ptr [rax+rax-0x76b80000], 0xffffffea; mov rsi, r12; mov rdi, rbx; call qword ptr [r14+0x78]; 
0x00000000045182: sub dword ptr [rbp], 0x1; xor esi, esi; mov rdi, r9; call r8; 
0x000000000da004: sub dword ptr [rbx+0x4], 0x1; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000000da0ab: sub dword ptr [rbx+0x4], 0x1; pop rbx; pop rbp; pop r12; ret; 
0x000000000b8398: sub dword ptr [rbx], 0xe274b104; ret; 
0x0000000008757f: sub dword ptr [rdi], 0x1; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000000611ca: sub dword ptr [rdi], 0x1; ret; 
0x00000000165309: sub dword ptr [rdx], 0x5; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000dd8c0: sub dword ptr [rip+0x109bd9], 0x1; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x000000000dd7e8: sub dword ptr [rip+0x109cb1], 0x1; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x000000000dd380: sub dword ptr [rip+0x10a089], 0x1; mov fs:[r9], ebx; mov rax, r8; pop rbx; ret; 
0x000000000dbbf0: sub dword ptr [rip+0x10b739], 0x1; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x000000000dbb18: sub dword ptr [rip+0x10b811], 0x1; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x000000000db3c0: sub dword ptr [rip+0x10bed9], 0x1; mov fs:[r9], ebx; mov rax, r8; pop rbx; ret; 
0x000000000ce8fc: sub dword ptr [rip+0x11883d], 0x1; add rsp, 0x8; ret; 
0x0000000009617c: sub dword ptr [rip+0x14da1d], 0x1; pop rbp; ret; 
0x000000000973cf: sub dword ptr [rip+0x14fa9a], 0x1; pop rbx; ret; 
0x00000000091e5b: sub dword ptr [rip+0x15499d], 0x1; pop rbx; ret; 
0x0000000008ff0c: sub dword ptr [rip+0x15675d], 0x1; ret; 
0x0000000008d590: sub dword ptr [rip+0x1590d9], 0x1; ret; 
0x000000000808ac: sub dword ptr [rip+0x165d7d], 0x1; ret; 
0x0000000005f151: sub dword ptr [rip+0x1874af], 0x1; mov eax, r8d; pop rbx; ret; 
0x0000000005f152: sub dword ptr [rip+0x1874af], 0x1; mov eax, r8d; pop rbx; ret; 
0x000000000457a9: sub dword ptr [rip+0x1a0bb8], 0x1; pop rbp; ret; 
0x000000000448ac: sub dword ptr [rip+0x1a1235], 0x1; xor eax, eax; pop rbx; ret; 
0x00000000191af7: sub dword ptr [rip+0x54d02], 0x1; pop rbx; ret; 
0x00000000191df8: sub dword ptr [rip+0x56859], 0x1; pop rbp; ret; 
0x00000000156cfb: sub dword ptr [rip+0x923e2], 0x1; add rsp, 0x10; mov eax, r8d; pop rbp; ret; 
0x00000000156c1b: sub dword ptr [rip+0x924c2], 0x1; add rsp, 0x10; mov eax, r8d; pop rbp; ret; 
0x00000000156a51: sub dword ptr [rip+0x9268c], 0x1; add rsp, 0x8; ret; 
0x000000001569b7: sub dword ptr [rip+0x92726], 0x1; mov rax, r8; pop rbp; ret; 
0x0000000015690a: sub dword ptr [rip+0x927d2], 0x1; add rsp, 0x10; mov eax, r8d; pop rbp; ret; 
0x00000000156871: sub dword ptr [rip+0x9286c], 0x1; add rsp, 0x8; ret; 
0x0000000013d1e8: sub dword ptr [rip+0xab9a9], 0x1; pop rbp; ret; 
0x000000001384ad: sub dword ptr [rip+0xb01a4], 0x1; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000001337d0: sub dword ptr [rip+0xb4e09], 0x1; mov fs:[r9], ebx; mov rax, r8; pop rbx; ret; 
0x000000001335e0: sub dword ptr [rip+0xb4f99], 0x1; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x00000000133508: sub dword ptr [rip+0xb5071], 0x1; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x00000000132def: sub dword ptr [rip+0xb5782], 0x1; add rsp, 0x20; mov eax, r8d; pop rbp; ret; 
0x00000000132ab7: sub dword ptr [rip+0xb5aba], 0x1; add rsp, 0x8; ret; 
0x00000000132899: sub dword ptr [rip+0xb5cd8], 0x1; mov eax, r8d; pop rbp; ret; 
0x0000000012ea00: sub dword ptr [rip+0xb99b1], 0x1; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x0000000012e91d: sub dword ptr [rip+0xb9a93], 0x1; mov fs:[r8], r9d; add rsp, 0x18; ret; 
0x0000000012e4b0: sub dword ptr [rip+0xb9ea1], 0x1; mov fs:[r9], ebx; mov rax, r8; pop rbx; ret; 
0x0000000012e2c0: sub dword ptr [rip+0xba041], 0x1; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x0000000012e1dd: sub dword ptr [rip+0xba123], 0x1; mov fs:[r8], r9d; add rsp, 0x18; ret; 
0x0000000012e110: sub dword ptr [rip+0xba1e9], 0x1; mov fs:[r9], ebx; mov rax, r8; pop rbx; ret; 
0x0000000012ce60: sub dword ptr [rip+0xbb339], 0x1; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x0000000012cd7d: sub dword ptr [rip+0xbb41b], 0x1; mov fs:[r8], r9d; add rsp, 0x18; ret; 
0x0000000012ccb0: sub dword ptr [rip+0xbb4e1], 0x1; mov fs:[r9], ebx; mov rax, r8; pop rbx; ret; 
0x0000000012c133: sub dword ptr [rip+0xbbfb6], 0x1; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x0000000012c04d: sub dword ptr [rip+0xbc09b], 0x1; mov fs:[r8], r9d; add rsp, 0x18; ret; 
0x0000000012bf6d: sub dword ptr [rip+0xbc174], 0x1; mov fs:[r9], ebx; mov rax, r8; pop rbx; ret; 
0x0000000012b4e3: sub dword ptr [rip+0xbcb3e], 0x1; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x0000000012b3fd: sub dword ptr [rip+0xbcc23], 0x1; mov fs:[r8], r9d; add rsp, 0x18; ret; 
0x0000000012b31d: sub dword ptr [rip+0xbccfc], 0x1; mov fs:[r9], ebx; mov rax, r8; pop rbx; ret; 
0x000000001201a0: sub dword ptr [rip+0xc7ca9], 0x1; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x000000001200c8: sub dword ptr [rip+0xc7d81], 0x1; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x0000000011f740: sub dword ptr [rip+0xc8639], 0x1; mov fs:[r9], ebx; mov rax, r8; pop rbx; ret; 
0x0000000011f665: sub dword ptr [rip+0xc86c0], 0x1; mov eax, r8d; add rsp, 0x8; ret; 
0x0000000011e940: sub dword ptr [rip+0xc93b1], 0x1; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x0000000011e868: sub dword ptr [rip+0xc9489], 0x1; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x0000000011dcd0: sub dword ptr [rip+0xc9ef1], 0x1; mov fs:[r9], ebx; mov rax, r8; pop rbx; ret; 
0x0000000011359b: sub dword ptr [rip+0xd42ae], 0x1; add rsp, 0x8; ret; 
0x00000000112b3c: sub dword ptr [rip+0xd4d0d], 0x1; ret; 
0x000000001883a6: sub dword ptr [rip-0xcfffffe], 0xf; outsd dx, [rsi]; push rdi; ret; 
0x000000001788a1: sub dword ptr [rsi+0xe], 0x0; add [rcx+0x29], cl; ret far; 
0x0000000013a319: sub dword ptr [rsi], 0x0; add [rbx-0x49f0fe0d], al; ret; 
0x0000000008af9d: sub dword ptr [rsi], 0x3; add [rax], al; xor edx, edx; mov rdi, rbp; call qword ptr [rax+0x80]; 
0x0000000011359a: sub dword ptr gs:[rip+0xd42ae], 0x1; add rsp, 0x8; ret; 
0x000000000da0aa: sub eax, 0x1046b83; pop rbx; pop rbp; pop r12; ret; 
0x000000000b436a: sub eax, 0x10; jb 0x00000000000b3919; movdqu [rdi+0x30], xmm7; ret; 
0x000000000b5bba: sub eax, 0x10; jb 0x00000000000b4ff9; movdqu [rdi+0x30], xmm7; lea rax, [rdi+0x40]; ret; 
0x00000000171e42: sub eax, 0x10; lea rcx, [rdx+0x10]; jne 0x0000000000172390; ret; 
0x000000000b3b99: sub eax, 0x10; lea rdi, [rdi+0x10]; jne 0x00000000000b4270; ret; 
0x000000000b52bd: sub eax, 0x10; lea rdi, [rdi+0x10]; jne 0x00000000000b5ac0; ret; 
0x000000000dd381: sub eax, 0x10a089; add [rcx+rax*2-0x77], esp; sbb [rcx+rcx*4-0x40], ecx; pop rbx; ret; 
0x000000000db3c1: sub eax, 0x10bed9; add [rcx+rax*2-0x77], esp; sbb [rcx+rcx*4-0x40], ecx; pop rbx; ret; 
0x000000000b3bbc: sub eax, 0x11; lea rdi, [rdi+0x11]; jne 0x00000000000b4270; ret; 
0x000000000b52e0: sub eax, 0x11; lea rdi, [rdi+0x11]; jne 0x00000000000b5ac0; ret; 
0x0000000009212c: sub eax, 0x11; shr rax, 0x4; lea rdx, [rax+0x1]; mov [rip+0x151192], rdx; ret; 
0x000000000b3be1: sub eax, 0x12; lea rdi, [rdi+0x12]; jne 0x00000000000b4270; ret; 
0x000000000b5305: sub eax, 0x12; lea rdi, [rdi+0x12]; jne 0x00000000000b5ac0; ret; 
0x000000000b3bff: sub eax, 0x13; lea rdi, [rdi+0x13]; jne 0x00000000000b4270; ret; 
0x000000000b5333: sub eax, 0x13; lea rdi, [rdi+0x13]; jne 0x00000000000b5ac0; ret; 
0x000000000b3c1f: sub eax, 0x14; lea rdi, [rdi+0x14]; jne 0x00000000000b4270; ret; 
0x000000000b5363: sub eax, 0x14; lea rdi, [rdi+0x14]; jne 0x00000000000b5ac0; ret; 
0x0000000009617d: sub eax, 0x14da1d; add [rbp-0x3d], ebx; nop [rax]; ret; 
0x0000000009384d: sub eax, 0x14f53e; xor edi, edi; call qword ptr [r13]; 
0x000000000b3c42: sub eax, 0x15; lea rdi, [rdi+0x15]; jne 0x00000000000b4270; ret; 
0x000000000b5396: sub eax, 0x15; lea rdi, [rdi+0x15]; jne 0x00000000000b5ac0; ret; 
0x000000000b3c61: sub eax, 0x16; lea rdi, [rdi+0x16]; jne 0x00000000000b4270; ret; 
0x000000000b53c5: sub eax, 0x16; lea rdi, [rdi+0x16]; jne 0x00000000000b5ac0; ret; 
0x000000000b3c81: sub eax, 0x17; lea rdi, [rdi+0x17]; jne 0x00000000000b4270; ret; 
0x000000000b53f5: sub eax, 0x17; lea rdi, [rdi+0x17]; jne 0x00000000000b5ac0; ret; 
0x0000000005f153: sub eax, 0x1874af; add [rcx+rcx*4-0x40], eax; pop rbx; ret; 
0x000000000b3ca1: sub eax, 0x18; lea rdi, [rdi+0x18]; jne 0x00000000000b4270; ret; 
0x000000000b5425: sub eax, 0x18; lea rdi, [rdi+0x18]; jne 0x00000000000b5ac0; ret; 
0x000000000b3cc4: sub eax, 0x19; lea rdi, [rdi+0x19]; jne 0x00000000000b4270; ret; 
0x000000000b5458: sub eax, 0x19; lea rdi, [rdi+0x19]; jne 0x00000000000b5ac0; ret; 
0x00000000146f7b: sub eax, 0x1; bswap eax; mov [r8+0xa8], eax; mov eax, 0x1; ret; 
0x00000000149d13: sub eax, 0x1; bswap eax; mov [rdi+0x48], eax; mov eax, 0x1; ret; 
0x0000000014a62a: sub eax, 0x1; bswap eax; mov [rdx], eax; mov eax, 0x1; ret; 
0x00000000172038: sub eax, 0x1; lea rcx, [rdx+0x1]; jne 0x0000000000172390; ret; 
0x000000000b39b3: sub eax, 0x1; lea rdi, [rdi+0x1]; jne 0x00000000000b4270; ret; 
0x000000000b5096: sub eax, 0x1; lea rdi, [rdi+0x1]; jne 0x00000000000b5ac0; ret; 
0x00000000183d69: sub eax, 0x1; lea rdi, [rdi+0x1]; jne 0x00000000001841a0; vzeroupper; ret; 
0x00000000184a81: sub eax, 0x1; lea rdi, [rdi+0x1]; jne 0x0000000000184ed0; vzeroupper; ret; 
0x00000000183f80: sub eax, 0x1; lea rdi, [rdi+rdx+0x1]; jne 0x00000000001841a0; vzeroupper; ret; 
0x00000000184cb4: sub eax, 0x1; lea rdi, [rdi+rdx+0x1]; jne 0x0000000000184ed0; vzeroupper; ret; 
0x0000000003483c: sub eax, 0x1; mov [rdx+0x8], eax; pop rbx; ret; 
0x00000000053c9b: sub eax, 0x1; ret; 
0x000000000b3cf9: sub eax, 0x1a; lea rdi, [rdi+0x1a]; jne 0x00000000000b4270; ret; 
0x000000000b548d: sub eax, 0x1a; lea rdi, [rdi+0x1a]; jne 0x00000000000b5ac0; ret; 
0x000000000b3d27: sub eax, 0x1b; lea rdi, [rdi+0x1b]; jne 0x00000000000b4270; ret; 
0x000000000b54bb: sub eax, 0x1b; lea rdi, [rdi+0x1b]; jne 0x00000000000b5ac0; ret; 
0x000000000b3d57: sub eax, 0x1c; lea rdi, [rdi+0x1c]; jne 0x00000000000b4270; ret; 
0x000000000b54eb: sub eax, 0x1c; lea rdi, [rdi+0x1c]; jne 0x00000000000b5ac0; ret; 
0x000000000b3d83: sub eax, 0x1d; lea rdi, [rdi+0x1d]; jne 0x00000000000b4270; ret; 
0x000000000b5517: sub eax, 0x1d; lea rdi, [rdi+0x1d]; jne 0x00000000000b5ac0; ret; 
0x000000000b3db3: sub eax, 0x1e; lea rdi, [rdi+0x1e]; jne 0x00000000000b4270; ret; 
0x000000000b5547: sub eax, 0x1e; lea rdi, [rdi+0x1e]; jne 0x00000000000b5ac0; ret; 
0x000000000b3de3: sub eax, 0x1f; lea rdi, [rdi+0x1f]; jne 0x00000000000b4270; ret; 
0x000000000b5577: sub eax, 0x1f; lea rdi, [rdi+0x1f]; jne 0x00000000000b5ac0; ret; 
0x0000000018429d: sub eax, 0x20; jb 0x0000000000183eb5; vmovdqu [rdi+0x60], ymm7; vzeroupper; ret; 
0x000000000b3e13: sub eax, 0x20; lea rdi, [rdi+0x20]; jne 0x00000000000b4270; ret; 
0x000000000b55a7: sub eax, 0x20; lea rdi, [rdi+0x20]; jne 0x00000000000b5ac0; ret; 
0x000000000920c4: sub eax, 0x2; add rsp, 0x8; ret; 
0x0000000017205a: sub eax, 0x2; lea rcx, [rdx+0x2]; jne 0x0000000000172390; ret; 
0x000000000b39d7: sub eax, 0x2; lea rdi, [rdi+0x2]; jne 0x00000000000b4270; ret; 
0x000000000b50bb: sub eax, 0x2; lea rdi, [rdi+0x2]; jne 0x00000000000b5ac0; ret; 
0x00000000183f17: sub eax, 0x2; lea rdi, [rdi+0x2]; jne 0x00000000001841a0; vzeroupper; ret; 
0x00000000184c4b: sub eax, 0x2; lea rdi, [rdi+0x2]; jne 0x0000000000184ed0; vzeroupper; ret; 
0x00000000172080: sub eax, 0x3; lea rcx, [rdx+0x3]; jne 0x0000000000172390; ret; 
0x000000000b39fa: sub eax, 0x3; lea rdi, [rdi+0x3]; jne 0x00000000000b4270; ret; 
0x000000000b50de: sub eax, 0x3; lea rdi, [rdi+0x3]; jne 0x00000000000b5ac0; ret; 
0x00000000183f3b: sub eax, 0x3; lea rdi, [rdi+0x3]; jne 0x00000000001841a0; vzeroupper; ret; 
0x00000000184c6f: sub eax, 0x3; lea rdi, [rdi+0x3]; jne 0x0000000000184ed0; vzeroupper; ret; 
0x00000000042187: sub eax, 0x40c48348; pop rbx; ret; 
0x000000000e7da2: sub eax, 0x47c6f075; or [rsi], dl; mov eax, 0x1; ret; 
0x0000000011a5a2: sub eax, 0x48000000; mov edx, [rsp+0x10]; mov rsi, [rsp+0x8]; syscall; 
0x0000000013c96f: sub eax, 0x48000ac2; test eax, eax; je short 0x000000000013c980; add rsp, 0x8; ret; 
0x000000001445c5: sub eax, 0x4; bswap eax; mov [rdx], eax; mov edx, ebx; call qword ptr [r13+0x10]; 
0x00000000172098: sub eax, 0x4; lea rcx, [rdx+0x4]; jne 0x0000000000172390; ret; 
0x000000000b3a15: sub eax, 0x4; lea rdi, [rdi+0x4]; jne 0x00000000000b4270; ret; 
0x000000000b50f9: sub eax, 0x4; lea rdi, [rdi+0x4]; jne 0x00000000000b5ac0; ret; 
0x00000000183f55: sub eax, 0x4; lea rdi, [rdi+0x4]; jne 0x00000000001841a0; vzeroupper; ret; 
0x00000000184c89: sub eax, 0x4; lea rdi, [rdi+0x4]; jne 0x0000000000184ed0; vzeroupper; ret; 
0x00000000039f47: sub eax, 0x4c001ac8; mov edi, esp; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000125a82: sub eax, 0x507a8b48; mov rsi, rdx; call rax; 
0x000000001720be: sub eax, 0x5; lea rcx, [rdx+0x5]; jne 0x0000000000172390; ret; 
0x000000000b3a38: sub eax, 0x5; lea rdi, [rdi+0x5]; jne 0x00000000000b4270; ret; 
0x000000000b511c: sub eax, 0x5; lea rdi, [rdi+0x5]; jne 0x00000000000b5ac0; ret; 
0x00000000082872: sub eax, 0x5b012f83; mov eax, r8d; pop rbp; pop r12; ret; 
0x00000000164bf5: sub eax, 0x63490005; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000b6414: sub eax, 0x6349000f; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000015c817: sub eax, 0x64000866; mov dword ptr [rax], 0x26; mov eax, 0xffffffff; ret; 
0x00000000042417: sub eax, 0x64001a0a; mov dword ptr [rax], 0x26; mov eax, 0xffffffff; ret; 
0x000000001720e0: sub eax, 0x6; lea rcx, [rdx+0x6]; jne 0x0000000000172390; ret; 
0x000000000b3a5d: sub eax, 0x6; lea rdi, [rdi+0x6]; jne 0x00000000000b4270; ret; 
0x000000000b5141: sub eax, 0x6; lea rdi, [rdi+0x6]; jne 0x00000000000b5ac0; ret; 
0x000000001720fe: sub eax, 0x7; lea rcx, [rdx+0x7]; jne 0x0000000000172390; ret; 
0x000000000b3a7b: sub eax, 0x7; lea rdi, [rdi+0x7]; jne 0x00000000000b4270; ret; 
0x000000000b515f: sub eax, 0x7; lea rdi, [rdi+0x7]; jne 0x00000000000b5ac0; ret; 
0x00000000040b83: sub eax, 0x7f800000; shr eax, 0x1f; ret; 
0x00000000078226: sub eax, 0x83000000; ret; 
0x00000000159370: sub eax, 0x89a43; mov [rsp+0x8], rcx; lea rdi, [r13+0x988]; call qword ptr [r13+0xf88]; 
0x00000000171dda: sub eax, 0x8; lea rcx, [rdx+0x8]; jne 0x0000000000172390; ret; 
0x000000000b3a97: sub eax, 0x8; lea rdi, [rdi+0x8]; jne 0x00000000000b4270; ret; 
0x000000000b517b: sub eax, 0x8; lea rdi, [rdi+0x8]; jne 0x00000000000b5ac0; ret; 
0x0000000018018f: sub eax, 0x8b000143; or al, 0x8a; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000010dd44: sub eax, 0x8b48fff8; and al, 0x8; add rsp, 0x30; pop rbp; ret; 
0x000000001569b8: sub eax, 0x92726; add [rcx+rcx*4-0x40], ecx; pop rbp; ret; 
0x00000000172120: sub eax, 0x9; lea rcx, [rdx+0x9]; jne 0x0000000000172390; ret; 
0x000000000b3aba: sub eax, 0x9; lea rdi, [rdi+0x9]; jne 0x00000000000b4270; ret; 
0x000000000b519e: sub eax, 0x9; lea rdi, [rdi+0x9]; jne 0x00000000000b5ac0; ret; 
0x00000000172140: sub eax, 0xa; lea rcx, [rdx+0xa]; jne 0x0000000000172390; ret; 
0x000000000b3adf: sub eax, 0xa; lea rdi, [rdi+0xa]; jne 0x00000000000b4270; ret; 
0x000000000b51c3: sub eax, 0xa; lea rdi, [rdi+0xa]; jne 0x00000000000b5ac0; ret; 
0x000000001337d1: sub eax, 0xb4e09; add [rcx+rax*2-0x77], esp; sbb [rcx+rcx*4-0x40], ecx; pop rbx; ret; 
0x0000000013289a: sub eax, 0xb5cd8; add [rcx+rcx*4-0x40], eax; pop rbp; ret; 
0x0000000012e4b1: sub eax, 0xb9ea1; add [rcx+rax*2-0x77], esp; sbb [rcx+rcx*4-0x40], ecx; pop rbx; ret; 
0x00000000172160: sub eax, 0xb; lea rcx, [rdx+0xb]; jne 0x0000000000172390; ret; 
0x000000000b3afd: sub eax, 0xb; lea rdi, [rdi+0xb]; jne 0x00000000000b4270; ret; 
0x000000000b51f1: sub eax, 0xb; lea rdi, [rdi+0xb]; jne 0x00000000000b5ac0; ret; 
0x00000000116e07: sub eax, 0xba000cc0; add fs:[rax], al; add [rbx-0x3f7ac7c0], cl; cmove eax, edx; ret; 
0x0000000012e111: sub eax, 0xba1e9; add [rcx+rax*2-0x77], esp; sbb [rcx+rcx*4-0x40], ecx; pop rbx; ret; 
0x0000000012ccb1: sub eax, 0xbb4e1; add [rcx+rax*2-0x77], esp; sbb [rcx+rcx*4-0x40], ecx; pop rbx; ret; 
0x0000000012bf6e: sub eax, 0xbc174; add [rcx+rax*2-0x77], esp; sbb [rcx+rcx*4-0x40], ecx; pop rbx; ret; 
0x0000000012b31e: sub eax, 0xbccfc; add [rcx+rax*2-0x77], esp; sbb [rcx+rcx*4-0x40], ecx; pop rbx; ret; 
0x00000000028dd7: sub eax, 0xc3001893; nop [rax]; endbr64; lea rax, [rip+0x186cbd]; ret; 
0x0000000017e4ff: sub eax, 0xc5000001; std; xlat [rbx]; ret; 
0x0000000011f741: sub eax, 0xc8639; add [rcx+rax*2-0x77], esp; sbb [rcx+rcx*4-0x40], ecx; pop rbx; ret; 
0x0000000011f666: sub eax, 0xc86c0; add [rcx+rcx*4-0x40], eax; add rsp, 0x8; ret; 
0x0000000011dcd1: sub eax, 0xc9ef1; add [rcx+rax*2-0x77], esp; sbb [rcx+rcx*4-0x40], ecx; pop rbx; ret; 
0x00000000172180: sub eax, 0xc; lea rcx, [rdx+0xc]; jne 0x0000000000172390; ret; 
0x000000000b3b1d: sub eax, 0xc; lea rdi, [rdi+0xc]; jne 0x00000000000b4270; ret; 
0x000000000b5211: sub eax, 0xc; lea rdi, [rdi+0xc]; jne 0x00000000000b5ac0; ret; 
0x000000001100b8: sub eax, 0xd8f7000d; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001721a2: sub eax, 0xd; lea rcx, [rdx+0xd]; jne 0x0000000000172390; ret; 
0x000000000b3b3f: sub eax, 0xd; lea rdi, [rdi+0xd]; jne 0x00000000000b4270; ret; 
0x000000000b5233: sub eax, 0xd; lea rdi, [rdi+0xd]; jne 0x00000000000b5ac0; ret; 
0x000000000ff76c: sub eax, 0xe36d7; add rbx, fs:[0x0]; mov r9, rbx; add r8, r13; call r14; 
0x00000000088dcb: sub eax, 0xe8001264; jl short 0x0000000000088dce; cli; jmp qword ptr [rsi+0x66]; 
0x00000000097ac4: sub eax, 0xe8f63120; ret; 
0x0000000005f606: sub eax, 0xe9000000; ret far; 
0x000000001721c2: sub eax, 0xe; lea rcx, [rdx+0xe]; jne 0x0000000000172390; ret; 
0x000000000b3b5f: sub eax, 0xe; lea rdi, [rdi+0xe]; jne 0x00000000000b4270; ret; 
0x000000000b5263: sub eax, 0xe; lea rdi, [rdi+0xe]; jne 0x00000000000b5ac0; ret; 
0x00000000062313: sub eax, 0xf001445; mov dh, 0xc0; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000011a917: sub eax, 0xf7000c85; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x0000000011a217: sub eax, 0xf7000c8c; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x00000000119e17: sub eax, 0xf7000c90; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x00000000117017: sub eax, 0xf7000cbe; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x00000000109617: sub eax, 0xf7000d98; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x000000000fd217: sub eax, 0xf7000e5c; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x000000001721e2: sub eax, 0xf; lea rcx, [rdx+0xf]; jne 0x0000000000172390; ret; 
0x000000000b3b7f: sub eax, 0xf; lea rdi, [rdi+0xf]; jne 0x00000000000b4270; ret; 
0x000000000b5293: sub eax, 0xf; lea rdi, [rdi+0xf]; jne 0x00000000000b5ac0; ret; 
0x0000000005e4e8: sub eax, 0xfff915e9; jmp qword ptr [rsi-0x70]; 
0x0000000005db68: sub eax, 0xfffb1ee9; jmp qword ptr [rsi-0x70]; 
0x0000000005f808: sub eax, 0xfffecce9; jmp qword ptr [rsi-0x70]; 
0x0000000017e95f: sub eax, 0xffff; jne 0x000000000017e870; ret; 
0x0000000018589d: sub eax, 0xffff; jne 0x0000000000185820; ret; 
0x0000000014d006: sub eax, 0xffffff80; pop rbx; ret; 
0x0000000017eaac: sub eax, 0xffffffff; jne 0x000000000017e870; vzeroupper; ret; 
0x000000001859ec: sub eax, 0xffffffff; jne 0x0000000000185820; vzeroupper; ret; 
0x0000000017e867: sub eax, 0xffffffff; jne short 0x000000000017e870; vzeroupper; ret; 
0x00000000185817: sub eax, 0xffffffff; jne short 0x0000000000185820; vzeroupper; ret; 
0x0000000005031f: sub eax, [0x28]; jne 0x00000000000503b5; add rsp, 0x10; pop rbx; ret; 
0x0000000004145e: sub eax, [0x28]; jne short 0x000000000004146c; add rsp, 0x18; ret; 
0x000000000418d5: sub eax, [0x28]; jne short 0x0000000000041904; mov eax, r8d; add rsp, 0x118; ret; 
0x00000000041ae9: sub eax, [0x28]; jne short 0x0000000000041b34; mov eax, r9d; add rsp, 0x148; ret; 
0x00000000045f66: sub eax, [0x28]; jne short 0x0000000000045f74; add rsp, 0x18; ret; 
0x00000000045fb3: sub eax, [0x28]; jne short 0x0000000000045fc1; add rsp, 0x18; ret; 
0x00000000055913: sub eax, [0x28]; jne short 0x0000000000055995; leave; ret; 
0x0000000008a3ef: sub eax, [0x28]; jne short 0x000000000008a409; add rsp, 0x48; ret; 
0x00000000096664: sub eax, [0x28]; jne short 0x00000000000966a5; add rsp, 0x40; pop rbp; ret; 
0x0000000010ea0d: sub eax, [0x28]; jne short 0x000000000010ea34; mov eax, r9d; add rsp, 0x38; ret; 
0x000000001131d1: sub eax, [0x28]; jne short 0x00000000001131e2; add rsp, 0xd8; ret; 
0x000000001132aa: sub eax, [0x28]; jne short 0x00000000001132bb; add rsp, 0xd8; ret; 
0x00000000115d96: sub eax, [0x28]; jne short 0x0000000000115da7; add rsp, 0xd8; ret; 
0x00000000115e56: sub eax, [0x28]; jne short 0x0000000000115e67; add rsp, 0xd8; ret; 
0x00000000116034: sub eax, [0x28]; jne short 0x0000000000116045; add rsp, 0x418; ret; 
0x0000000011629d: sub eax, [0x28]; jne short 0x00000000001162ae; add rsp, 0xd8; ret; 
0x0000000011650a: sub eax, [0x28]; jne short 0x000000000011651b; add rsp, 0xd8; ret; 
0x00000000123938: sub eax, [0x28]; jne short 0x0000000000123949; add rsp, 0xd8; ret; 
0x00000000125541: sub eax, [0x28]; jne short 0x0000000000125552; add rsp, 0xd8; ret; 
0x0000000013f786: sub eax, [0x28]; jne short 0x000000000013f796; add rsp, 0x10; pop r12; ret; 
0x00000000141434: sub eax, [0x28]; jne short 0x0000000000141443; add rsp, 0x40; pop rbp; ret; 
0x0000000014b4ec: sub eax, [0x28]; jne short 0x000000000014b511; add rsp, 0x10; pop rbx; ret; 
0x0000000014d6b4: sub eax, [0x28]; jne short 0x000000000014d6c2; add rsp, 0x78; ret; 
0x0000000014d724: sub eax, [0x28]; jne short 0x000000000014d732; add rsp, 0x78; ret; 
0x0000000014d794: sub eax, [0x28]; jne short 0x000000000014d7a2; add rsp, 0x78; ret; 
0x0000000014d7f5: sub eax, [0x28]; jne short 0x000000000014d803; add rsp, 0x78; ret; 
0x0000000014d859: sub eax, [0x28]; jne short 0x000000000014d867; add rsp, 0x78; ret; 
0x0000000014d8c4: sub eax, [0x28]; jne short 0x000000000014d8d2; add rsp, 0x78; ret; 
0x0000000014d947: sub eax, [0x28]; jne short 0x000000000014d955; add rsp, 0x78; ret; 
0x0000000014de6a: sub eax, [0x28]; jne short 0x000000000014de98; add rsp, 0x28; ret; 
0x0000000014f8cf: sub eax, [0x28]; jne short 0x000000000014f8dd; add rsp, 0x48; ret; 
0x0000000011a261: sub eax, [rax]; add [rax], al; syscall; 
0x00000000039773: sub eax, [rbx+0x8]; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000000728b1: sub eax, [rcx+0xf]; mov dh, 0x47; or al, 0x83; ret; 
0x000000000b8399: sub eax, [rcx+rsi*4]; je short 0x00000000000b8380; ret; 
0x0000000011ad6e: sub eax, [rcx]; add [rax], al; mov edi, [rsp+0x4]; syscall; 
0x0000000011ad24: sub eax, [rcx]; add [rax], al; syscall; 
0x000000000904b2: sub eax, [rdi+0x18]; ret; 
0x000000000896bd: sub eax, [rdi+0x20]; ret; 
0x00000000121189: sub eax, [rdi+0x38]; cmp rax, rsi; jb short 0x00000000001211a0; mov eax, 0x1; ret; 
0x0000000008958d: sub eax, [rdi+0x38]; ret; 
0x00000000084ef9: sub eax, [rdx+0x10]; sar rax, 0x2; ret; 
0x000000000896aa: sub eax, [rdx+0x18]; sar rax, 0x2; ret; 
0x0000000008957a: sub eax, [rdx+0x30]; sar rax, 0x2; ret; 
0x00000000164dab: sub eax, [rip+0x14634900]; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000008fb77: sub eax, [rsi+0x10]; ret; 
0x000000000ccb0d: sub eax, eax; add r15, r8; mov [rsp+0x88], r15; call r12; 
0x00000000055e33: sub eax, eax; mov [rsi], eax; mov eax, 0x2; ret; 
0x000000000847cb: sub eax, eax; mov eax, r8d; ret; 
0x000000001232c7: sub eax, eax; shr esi, 0x1f; cmp dil, sil; cmovne eax, edx; ret; 
0x0000000017e8b3: sub eax, ecx; je short 0x000000000017e8c0; sbb eax, eax; or eax, 0x1; ret; 
0x00000000055c65: sub eax, ecx; mov [rdx], eax; mov eax, 0x1; ret; 
0x000000000a667c: sub eax, ecx; ret; 
0x0000000017d99f: sub eax, ecx; vzeroupper; ret; 
0x000000000ae049: sub eax, edi; ret; 
0x000000000cb84e: sub eax, edi; shr rax, 0x2; ret; 
0x00000000087fec: sub eax, edx; mov [rcx], rax; xor eax, eax; pop rbx; ret; 
0x000000000c5f54: sub eax, edx; pop r12; pop r13; pop r14; ret; 
0x000000000c5ed1: sub eax, edx; pop r12; ret; 
0x0000000008bae1: sub eax, edx; pop rbp; pop r12; ret; 
0x00000000143f48: sub eax, edx; pop rbx; pop rbp; mov eax, r8d; ret; 
0x0000000018bb57: sub eax, edx; ret; 
0x0000000018bb67: sub eax, edx; ret; 
0x000000000454a9: sub eax, edx; ret; 
0x00000000040b63: sub eax, edx; shr eax, 0x1f; ret; 
0x00000000123261: sub eax, edx; shr esi, 0x1f; cmp r8b, sil; cmovne eax, edi; ret; 
0x00000000186b40: sub eax, edx; shr rax, 0x2; vzeroupper; ret; 
0x00000000040799: sub eax, edx; shr rax, 0x3f; ret; 
0x0000000017d6a2: sub eax, edx; vzeroupper; ret; 
0x00000000142413: sub eax, esp; mov [rbx+0x18], rax; mov rax, [rbp+0x8]; call qword ptr [rax+0x28]; 
0x00000000055e32: sub eax, r8d; mov [rsi], eax; mov eax, 0x2; ret; 
0x000000001232c6: sub eax, r8d; shr esi, 0x1f; cmp dil, sil; cmovne eax, edx; ret; 
0x0000000003f9a1: sub ebp, [rdx-0x2]; jmp qword ptr [rsi+0xf]; 
0x0000000013ae11: sub ebp, eax; cmp r12, rsi; jmp qword ptr [rsp+rax*2-0x77]; 
0x00000000103097: sub ebp, ecx; ret; 
0x000000000d6ee3: sub ebp, esi; hlt; jmp far fword ptr [rcx]; 
0x00000000155e5f: sub ebp, esi; jmp qword ptr [rsi+0x66]; 
0x000000000c610c: sub ebx, [0x28]; jne short 0x00000000000c6134; add rsp, 0x20; pop rbx; ret; 
0x0000000014427b: sub ebx, [0x28]; jne short 0x00000000001442b2; add rsp, 0x10; pop rbx; ret; 
0x00000000144319: sub ebx, [0x28]; jne short 0x0000000000144355; add rsp, 0x10; pop rbx; ret; 
0x00000000144f4e: sub ebx, [0x28]; jne short 0x0000000000144f67; add rsp, 0x40; pop rbx; ret; 
0x000000000da92b: sub ebx, [rbx+0x5d]; pop r12; pop r13; pop r14; ret; 
0x0000000005eff4: sub ebx, [rbx+0x5d]; pop r12; pop r13; ret; 
0x000000000d95f8: sub ebx, [rbx+0x5d]; pop r12; ret; 
0x00000000137246: sub ebx, [rbx+0x5d]; ret; 
0x000000000545d8: sub ecx, 0x1; jae short 0x00000000000545d0; mov rax, rdx; ret; 
0x00000000045b76: sub ecx, 0x1; jns short 0x0000000000045b39; xor eax, eax; ret; 
0x00000000156f70: sub ecx, 0x5; cmp cx, 0x3; jbe short 0x0000000000156f80; ret; 
0x00000000053cfc: sub ecx, 0x8; cmp rcx, 0xfffffffffffffff8; jne short 0x0000000000053cf0; mov rax, rdx; ret; 
0x0000000009a698: sub ecx, [0x28]; jne 0x000000000009a752; add rsp, 0x18; ret; 
0x00000000108b99: sub ecx, [0x28]; jne 0x0000000000108c63; add rsp, 0x78; ret; 
0x0000000010919f: sub ecx, [0x28]; jne 0x0000000000109245; add rsp, 0x68; ret; 
0x000000001092e0: sub ecx, [0x28]; jne 0x000000000010939e; add rsp, 0x30; pop rbx; ret; 
0x00000000109410: sub ecx, [0x28]; jne 0x00000000001094ce; add rsp, 0x30; pop rbx; ret; 
0x0000000010d71e: sub ecx, [0x28]; jne 0x000000000010d7c3; add rsp, 0x40; pop r12; ret; 
0x0000000010ffea: sub ecx, [0x28]; jne 0x0000000000110093; add rsp, 0x60; pop rbp; ret; 
0x00000000126d9d: sub ecx, [0x28]; jne 0x0000000000126e7d; leave; ret; 
0x00000000148498: sub ecx, [0x28]; jne 0x0000000000148523; add rsp, 0x20; pop rbx; ret; 
0x000000000417a1: sub ecx, [0x28]; jne short 0x00000000000417b2; add rsp, 0x148; ret; 
0x00000000041dad: sub ecx, [0x28]; jne short 0x0000000000041dc5; add rsp, 0x118; ret; 
0x00000000041e30: sub ecx, [0x28]; jne short 0x0000000000041e48; add rsp, 0x118; ret; 
0x0000000004217f: sub ecx, [0x28]; jne short 0x00000000000421b5; add rsp, 0x40; pop rbx; ret; 
0x0000000004249e: sub ecx, [0x28]; jne short 0x00000000000424af; add rsp, 0x148; ret; 
0x0000000004293e: sub ecx, [0x28]; jne short 0x000000000004294f; add rsp, 0xa8; ret; 
0x000000000455ec: sub ecx, [0x28]; jne short 0x00000000000455fa; add rsp, 0x28; ret; 
0x000000000456dc: sub ecx, [0x28]; jne short 0x00000000000456ea; add rsp, 0x28; ret; 
0x00000000045a10: sub ecx, [0x28]; jne short 0x0000000000045a6a; add rsp, 0x18; ret; 
0x00000000046005: sub ecx, [0x28]; jne short 0x0000000000046013; add rsp, 0x18; ret; 
0x00000000046052: sub ecx, [0x28]; jne short 0x0000000000046060; add rsp, 0x18; ret; 
0x000000000460a5: sub ecx, [0x28]; jne short 0x00000000000460b3; add rsp, 0x18; ret; 
0x000000000460f2: sub ecx, [0x28]; jne short 0x0000000000046100; add rsp, 0x18; ret; 
0x00000000050d3e: sub ecx, [0x28]; jne short 0x0000000000050d4f; add rsp, 0xd8; ret; 
0x000000000597dc: sub ecx, [0x28]; jne short 0x0000000000059800; add rsp, 0x450; pop rbp; ret; 
0x0000000005fd71: sub ecx, [0x28]; jne short 0x000000000005fd82; add rsp, 0xd8; ret; 
0x0000000005fe46: sub ecx, [0x28]; jne short 0x000000000005fe57; add rsp, 0xd8; ret; 
0x0000000005fefd: sub ecx, [0x28]; jne short 0x000000000005ff0e; add rsp, 0xd8; ret; 
0x00000000060091: sub ecx, [0x28]; jne short 0x00000000000600a2; add rsp, 0xd8; ret; 
0x00000000060151: sub ecx, [0x28]; jne short 0x0000000000060162; add rsp, 0xd8; ret; 
0x0000000006023f: sub ecx, [0x28]; jne short 0x0000000000060250; add rsp, 0xd8; ret; 
0x00000000060316: sub ecx, [0x28]; jne short 0x0000000000060327; add rsp, 0xd8; ret; 
0x000000000612a9: sub ecx, [0x28]; jne short 0x00000000000612ba; add rsp, 0xd8; ret; 
0x00000000061384: sub ecx, [0x28]; jne short 0x0000000000061395; add rsp, 0xd8; ret; 
0x00000000082e01: sub ecx, [0x28]; jne short 0x0000000000082e12; add rsp, 0xd8; ret; 
0x00000000082ebd: sub ecx, [0x28]; jne short 0x0000000000082ece; add rsp, 0xd8; ret; 
0x00000000082fb6: sub ecx, [0x28]; jne short 0x0000000000082fc7; add rsp, 0xd8; ret; 
0x00000000083086: sub ecx, [0x28]; jne short 0x0000000000083097; add rsp, 0xd8; ret; 
0x0000000008313f: sub ecx, [0x28]; jne short 0x0000000000083150; add rsp, 0xd8; ret; 
0x00000000091b36: sub ecx, [0x28]; jne short 0x0000000000091bb7; add rsp, 0x98; ret; 
0x000000000c6be9: sub ecx, [0x28]; jne short 0x00000000000c6bfa; add rsp, 0xd8; ret; 
0x000000000c6cc4: sub ecx, [0x28]; jne short 0x00000000000c6cd5; add rsp, 0xd8; ret; 
0x000000000ccff2: sub ecx, [0x28]; jne short 0x00000000000cd036; add rsp, 0x28; ret; 
0x000000000d9abc: sub ecx, [0x28]; jne short 0x00000000000d9ace; add rsp, 0xe0; pop rbx; ret; 
0x000000000d9b54: sub ecx, [0x28]; jne short 0x00000000000d9b66; add rsp, 0xe0; pop rbx; ret; 
0x000000000db2f8: sub ecx, [0x28]; jne short 0x00000000000db353; add rsp, 0x38; ret; 
0x000000000dfbc8: sub ecx, [0x28]; jne short 0x00000000000dfc23; add rsp, 0x38; ret; 
0x000000000dfc68: sub ecx, [0x28]; jne short 0x00000000000dfcc3; add rsp, 0x38; ret; 
0x000000000dff38: sub ecx, [0x28]; jne short 0x00000000000dffa3; add rsp, 0x38; ret; 
0x000000000dffe8: sub ecx, [0x28]; jne short 0x00000000000e0053; add rsp, 0x38; ret; 
0x00000000107e79: sub ecx, [0x28]; jne short 0x0000000000107e88; add rsp, 0x10; pop rbp; ret; 
0x00000000107f6e: sub ecx, [0x28]; jne short 0x0000000000107f7c; add rsp, 0x38; ret; 
0x00000000107fc9: sub ecx, [0x28]; jne short 0x0000000000107fd7; add rsp, 0x18; ret; 
0x00000000109fae: sub ecx, [0x28]; jne short 0x000000000010a000; add rsp, 0x130; pop rbp; ret; 
0x0000000010df7e: sub ecx, [0x28]; jne short 0x000000000010dff4; add rsp, 0xa0; pop rbx; ret; 
0x0000000010e052: sub ecx, [0x28]; jne short 0x000000000010e0cf; add rsp, 0xa0; pop rbx; ret; 
0x0000000010e344: sub ecx, [0x28]; jne short 0x000000000010e393; add rsp, 0x68; ret; 
0x0000000010e3d3: sub ecx, [0x28]; jne short 0x000000000010e423; add rsp, 0x18; ret; 
0x0000000010e48b: sub ecx, [0x28]; jne short 0x000000000010e4db; add rsp, 0x58; ret; 
0x0000000010e529: sub ecx, [0x28]; jne short 0x000000000010e57b; add rsp, 0x58; ret; 
0x0000000010ea76: sub ecx, [0x28]; jne short 0x000000000010ea8b; add rsp, 0x18; ret; 
0x0000000010f8f8: sub ecx, [0x28]; jne short 0x000000000010f95b; add rsp, 0x38; ret; 
0x0000000010f998: sub ecx, [0x28]; jne short 0x000000000010f9fb; add rsp, 0x38; ret; 
0x0000000010fa4d: sub ecx, [0x28]; jne short 0x000000000010facb; add rsp, 0x38; ret; 
0x0000000010fb1d: sub ecx, [0x28]; jne short 0x000000000010fb9b; add rsp, 0x38; ret; 
0x0000000011075d: sub ecx, [0x28]; jne short 0x0000000000110777; add rsp, 0x58; ret; 
0x000000001107d0: sub ecx, [0x28]; jne short 0x00000000001107de; add rsp, 0x28; ret; 
0x000000001108a8: sub ecx, [0x28]; jne short 0x00000000001108ed; add rsp, 0x68; ret; 
0x00000000111a66: sub ecx, [0x28]; jne short 0x0000000000111a74; add rsp, 0x38; ret; 
0x00000000111ae9: sub ecx, [0x28]; jne short 0x0000000000111af7; add rsp, 0x38; ret; 
0x00000000111b5d: sub ecx, [0x28]; jne short 0x0000000000111b6b; add rsp, 0x38; ret; 
0x00000000111bc8: sub ecx, [0x28]; jne short 0x0000000000111bd6; add rsp, 0x38; ret; 
0x00000000114602: sub ecx, [0x28]; jne short 0x0000000000114610; add rsp, 0x18; ret; 
0x00000000119ad0: sub ecx, [0x28]; jne short 0x0000000000119af3; add rsp, 0x58; ret; 
0x0000000011ac47: sub ecx, [0x28]; jne short 0x000000000011ac55; add rsp, 0x18; ret; 
0x0000000011af46: sub ecx, [0x28]; jne short 0x000000000011af5f; add rsp, 0xa0; pop rbx; ret; 
0x0000000011b1cc: sub ecx, [0x28]; jne short 0x000000000011b223; add rsp, 0x58; ret; 
0x00000000127b26: sub ecx, [0x28]; jne short 0x0000000000127b3c; add rsp, 0xd8; ret; 
0x00000000127e0a: sub ecx, [0x28]; jne short 0x0000000000127e1b; add rsp, 0xd8; ret; 
0x00000000128e2a: sub ecx, [0x28]; jne short 0x0000000000128e3b; add rsp, 0xd8; ret; 
0x0000000012939a: sub ecx, [0x28]; jne short 0x00000000001293ab; add rsp, 0xd8; ret; 
0x0000000012947a: sub ecx, [0x28]; jne short 0x000000000012948b; add rsp, 0xd8; ret; 
0x0000000012955a: sub ecx, [0x28]; jne short 0x000000000012956b; add rsp, 0xd8; ret; 
0x000000001310b5: sub ecx, [0x28]; jne short 0x00000000001310c3; add rsp, 0x38; ret; 
0x00000000131122: sub ecx, [0x28]; jne short 0x0000000000131130; add rsp, 0x28; ret; 
0x000000001376c4: sub ecx, [0x28]; jne short 0x00000000001376e4; add rsp, 0x20; pop rbp; ret; 
0x00000000138f62: sub ecx, [0x28]; jne short 0x0000000000138f85; add rsp, 0x20; pop rbx; ret; 
0x00000000138fb7: sub ecx, [0x28]; jne short 0x0000000000138fc5; add rsp, 0x18; ret; 
0x0000000013900a: sub ecx, [0x28]; jne short 0x0000000000139018; add rsp, 0x28; ret; 
0x00000000143d2a: sub ecx, [0x28]; jne short 0x0000000000143d73; add rsp, 0x10; pop rbx; ret; 
0x0000000014b83e: sub ecx, [0x28]; jne short 0x000000000014b8ba; add rsp, 0x10; pop r12; ret; 
0x0000000014bab5: sub ecx, [0x28]; jne short 0x000000000014bb2a; add rsp, 0x30; pop rbx; ret; 
0x0000000014bbf5: sub ecx, [0x28]; jne short 0x000000000014bc6a; add rsp, 0x30; pop rbx; ret; 
0x0000000014d63e: sub ecx, [0x28]; jne short 0x000000000014d64c; add rsp, 0x78; ret; 
0x0000000014f93a: sub ecx, [0x28]; jne short 0x000000000014f983; add rsp, 0x10; pop rbx; ret; 
0x0000000014f9ca: sub ecx, [0x28]; jne short 0x000000000014fa12; add rsp, 0x10; pop rbx; ret; 
0x0000000014fa93: sub ecx, [0x28]; jne short 0x000000000014fafb; add rsp, 0x10; pop rbp; ret; 
0x0000000014fefa: sub ecx, [0x28]; jne short 0x000000000014ff44; add rsp, 0x10; pop rbx; ret; 
0x0000000014ff8a: sub ecx, [0x28]; jne short 0x000000000014ffd3; add rsp, 0x10; pop rbx; ret; 
0x0000000015013a: sub ecx, [0x28]; jne short 0x0000000000150189; add rsp, 0x10; pop rbx; ret; 
0x000000001501ca: sub ecx, [0x28]; jne short 0x0000000000150213; add rsp, 0x10; pop rbx; ret; 
0x00000000150f2a: sub ecx, [0x28]; jne short 0x0000000000150f75; add rsp, 0x10; pop rbx; ret; 
0x00000000150fba: sub ecx, [0x28]; jne short 0x0000000000151005; add rsp, 0x10; pop rbx; ret; 
0x0000000015104a: sub ecx, [0x28]; jne short 0x0000000000151095; add rsp, 0x10; pop rbx; ret; 
0x000000001510da: sub ecx, [0x28]; jne short 0x0000000000151125; add rsp, 0x10; pop rbx; ret; 
0x00000000156af2: sub ecx, [0x28]; jne short 0x0000000000156b2c; add rsp, 0x10; pop rbp; ret; 
0x00000000156b82: sub ecx, [0x28]; jne short 0x0000000000156bbc; add rsp, 0x10; pop rbp; ret; 
0x0000000015991d: sub ecx, [0x28]; jne short 0x000000000015995e; add rsp, 0x58; ret; 
0x00000000159a14: sub ecx, [0x28]; jne short 0x0000000000159a64; add rsp, 0x68; ret; 
0x00000000159bad: sub ecx, [0x28]; jne short 0x0000000000159c14; add rsp, 0x68; ret; 
0x00000000159be3: sub ecx, [0x28]; jne short 0x0000000000159c14; mov rax, [rax+0x18]; add rsp, 0x68; jmp rax; 
0x00000000159c84: sub ecx, [0x28]; jne short 0x0000000000159ce1; add rsp, 0x38; ret; 
0x00000000159712: sub ecx, [rax+0x10]; cmp rcx, [rax+0x28]; jae short 0x0000000000159700; mov eax, 0x1; ret; 
0x00000000106e18: sub ecx, [rax-0x77]; or [r9], sil; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x5d], bl; ret; 
0x000000000b3a41: sub ecx, [rax]; add [rax], al; ret; 
0x00000000115b7c: sub ecx, [rcx+rcx*4-0x1a]; mov rdi, r14; call r13; 
0x00000000186e94: sub ecx, [rcx+rcx*4-0x40]; shr rax, 0x2; vzeroupper; ret; 
0x000000001824f4: sub ecx, [rcx+rcx*4-0x40]; vzeroupper; ret; 
0x00000000110268: sub ecx, [rip+0x64d8f700]; mov [rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001102a4: sub ecx, [rip+0x64d8f700]; mov [rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000008f059: sub ecx, eax; lea eax, [rcx-0x1]; ret; 
0x00000000084719: sub ecx, eax; sar rcx, 0x2; lea eax, [rcx-0x1]; ret; 
0x000000000a69f8: sub ecx, ecx; lea r10, [rip+0x1022c7]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x000000000a52d8: sub ecx, ecx; lea r10, [rip+0x103967]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000016c758: sub ecx, ecx; lea r10, [rip+0x3c6a7]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000016a5d8: sub ecx, ecx; lea r10, [rip+0x3e7a7]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000015e228: sub ecx, ecx; lea r10, [rip+0x4aad7]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000015cf98: sub ecx, ecx; lea r10, [rip+0x4bce7]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x000000000ab248: sub ecx, ecx; lea r10, [rip+0xfdb77]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x000000000a8fd8: sub ecx, ecx; lea r10, [rip+0xffd67]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x000000001071d4: sub ecx, edi; add ecx, 0x150; shr ecx, 0x3; rep stosq [rdi]; ret; 
0x000000000879ea: sub ecx, edx; cmp rax, rcx; jbe 0x0000000000087b80; mov rdi, rbx; call qword ptr [r13+0x60]; 
0x0000000008935a: sub ecx, edx; cmp rax, rcx; jbe 0x00000000000894e0; mov rdi, rbx; call qword ptr [r13+0x60]; 
0x0000000008c40a: sub ecx, edx; cmp rax, rcx; jbe 0x000000000008c500; mov rdi, rbx; call qword ptr [r12+0x88]; 
0x0000000008eb43: sub ecx, edx; cmp rax, rcx; jbe 0x000000000008ec18; mov rdi, rbx; call qword ptr [r13+0x60]; 
0x0000000007ed49: sub ecx, edx; cmp rax, rcx; jbe short 0x000000000007eda8; mov rdi, rbx; call qword ptr [rbp+0x60]; 
0x000000000817ea: sub ecx, edx; cmp rax, rcx; jbe short 0x0000000000081864; mov rdi, rbx; call qword ptr [rbp+0x68]; 
0x00000000083ae9: sub ecx, edx; cmp rax, rcx; jbe short 0x0000000000083b28; mov rdi, rbx; call qword ptr [rbp+0x20]; 
0x0000000008462e: sub ecx, edx; cmp rax, rcx; jbe short 0x0000000000084660; mov rdi, rbx; call qword ptr [rbp+0x30]; 
0x0000000008a4fa: sub ecx, edx; cmp rax, rcx; jbe short 0x000000000008a520; call qword ptr [rbx+0x60]; 
0x0000000008c56a: sub ecx, edx; cmp rax, rcx; jbe short 0x000000000008c5a8; mov rdi, rbp; call qword ptr [rbx+0x88]; 
0x0000000008e433: sub ecx, edx; cmp rax, rcx; jbe short 0x000000000008e4a0; mov rdi, rbx; call qword ptr [rbp+0x68]; 
0x0000000008e4e9: sub ecx, edx; cmp rax, rcx; jbe short 0x000000000008e518; mov rdi, rbx; call qword ptr [rbp+0x20]; 
0x0000000008ef69: sub ecx, edx; cmp rax, rcx; jbe short 0x000000000008efa0; mov rdi, rbx; call qword ptr [rbp+0x30]; 
0x000000000403ef: sub ecx, edx; not eax; and eax, ecx; ret; 
0x00000000143e9f: sub ecx, esi; mov [rdx+0x58], rdi; mov [rdx+0x68], rcx; ret; 
0x000000000cb34c: sub edi, 0x10; add rax, rdi; ret; 
0x00000000162823: sub edi, 0x20; lea r11, [rip+0x55163]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000015fe43: sub edi, 0x20; lea r11, [rip+0x57983]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162732: sub edi, 0x40; lea r11, [rip+0x55254]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162673: sub edi, 0x40; lea r11, [rip+0x55313]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000015fd52: sub edi, 0x40; lea r11, [rip+0x57a74]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000015fc93: sub edi, 0x40; lea r11, [rip+0x57b33]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000059a2c: sub edi, [0x28]; jne short 0x0000000000059a72; add rsp, 0x38; ret; 
0x000000000cc1cc: sub edi, [0x28]; jne short 0x00000000000cc1e9; add rsp, 0x28; ret; 
0x000000000fd48a: sub edi, [0x28]; jne short 0x00000000000fd4e6; add rsp, 0x38; ret; 
0x000000001356c4: sub edi, [rax+0x3]; mov edi, [rbp-0x60]; syscall; 
0x0000000010e3bc: sub edi, [rax+0x48]; syscall; 
0x00000000156bbe: sub edi, ebp; jmp qword ptr [rsi+0x2e]; 
0x0000000008aa09: sub edi, ecx; cmp rax, rdi; jbe short 0x000000000008aa30; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x0000000016959f: sub edi, edx; lea r11, [rip+0x4eaa8]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166a6b: sub edi, edx; lea r11, [rip+0x510dc]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000a89c4: sub edx, 0x10; add rdx, rax; jl short 0x00000000000a89e0; lea rax, [rdi+rax+0x30]; ret; 
0x00000000140fa1: sub edx, 0x1; jne short 0x0000000000140f28; ret; 
0x000000000a89a4: sub edx, 0x20; add rdx, rax; jl short 0x00000000000a89e0; lea rax, [rdi+rax+0x20]; ret; 
0x000000000a8984: sub edx, 0x30; add rdx, rax; jl short 0x00000000000a89e0; lea rax, [rdi+rax+0x10]; ret; 
0x000000000a8974: sub edx, 0x40; add rdx, rax; jl short 0x00000000000a89e0; add rax, rdi; ret; 
0x00000000164e61: sub edx, 0x40; lea r11, [rip+0x52b25]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000164f45: sub edx, 0x80; movsxd r9, [r11+r9*4]; add r9, r11; notrack jmp r9; 
0x000000000992b6: sub edx, 0x8; and eax, 0x1; cmovne rax, rdx; ret; 
0x00000000052298: sub edx, [0x28]; jne short 0x00000000000522a9; add rsp, 0xd8; ret; 
0x0000000005ffcf: sub edx, [0x28]; jne short 0x000000000005ffe0; add rsp, 0xd8; ret; 
0x0000000006097c: sub edx, [0x28]; jne short 0x000000000006098e; add rsp, 0x1010; pop rbp; ret; 
0x00000000060f20: sub edx, [0x28]; jne short 0x0000000000060f37; add rsp, 0x18; ret; 
0x000000000cc246: sub edx, [0x28]; jne short 0x00000000000cc255; add rsp, 0x40; pop rbp; ret; 
0x000000000d6535: sub edx, [0x28]; jne short 0x00000000000d6543; add rsp, 0x18; ret; 
0x000000000d8df5: sub edx, [0x28]; jne short 0x00000000000d8e03; add rsp, 0x18; ret; 
0x00000000107cc4: sub edx, [0x28]; jne short 0x0000000000107ce1; add rsp, 0x28; ret; 
0x0000000010801b: sub edx, [0x28]; jne short 0x0000000000108029; add rsp, 0x18; ret; 
0x0000000010a83c: sub edx, [0x28]; jne short 0x000000000010a84d; movzx eax, al; add rsp, 0x58; ret; 
0x0000000010fc17: sub edx, [0x28]; jne short 0x000000000010fc25; add rsp, 0x28; ret; 
0x00000000127c2c: sub edx, [0x28]; jne short 0x0000000000127c45; add rsp, 0xd8; ret; 
0x00000000127d42: sub edx, [0x28]; jne short 0x0000000000127d53; add rsp, 0xd8; ret; 
0x00000000128c4c: sub edx, [0x28]; jne short 0x0000000000128c65; add rsp, 0xd8; ret; 
0x00000000128d62: sub edx, [0x28]; jne short 0x0000000000128d73; add rsp, 0xd8; ret; 
0x00000000131018: sub edx, [0x28]; jne short 0x0000000000131049; add rsp, 0x38; ret; 
0x000000001517b0: sub edx, [0x28]; jne short 0x00000000001517c2; add rsp, 0x90; pop rbx; ret; 
0x00000000151824: sub edx, [0x28]; jne short 0x0000000000151835; movzx eax, al; add rsp, 0x18; ret; 
0x00000000151885: sub edx, [0x28]; jne short 0x0000000000151896; movzx eax, al; add rsp, 0x18; ret; 
0x000000001518f3: sub edx, [0x28]; jne short 0x0000000000151902; add rsp, 0x10; pop rbx; ret; 
0x00000000151966: sub edx, [0x28]; jne short 0x0000000000151975; add rsp, 0x10; pop rbx; ret; 
0x000000001567fb: sub edx, [0x28]; jne short 0x0000000000156834; add rsp, 0x18; ret; 
0x0000000015a997: sub edx, [0x28]; jne short 0x000000000015a9a5; add rsp, 0x28; ret; 
0x0000000015ce04: sub edx, [0x28]; jne short 0x000000000015ce13; add rsp, 0x10; pop rbx; ret; 
0x0000000015ce8a: sub edx, [0x28]; jne short 0x000000000015ce99; add rsp, 0x10; pop rbx; ret; 
0x0000000008fba8: sub edx, [rax+0x10]; mov eax, [rdi+0x10]; sub eax, edx; ret; 
0x0000000008fb99: sub edx, [rax+0x18]; mov eax, [rdi+0x10]; sub eax, edx; ret; 
0x000000000b83ee: sub edx, [rcx+rsi*4]; je short 0x00000000000b83d0; mov eax, edx; ret; 
0x000000000a822d: sub edx, eax; jbe 0x00000000000a84d0; add rax, rdi; add rax, rcx; ret; 
0x000000000ca12d: sub edx, eax; jbe 0x00000000000ca3d0; add rax, rdi; add rax, rcx; ret; 
0x000000000a8494: sub edx, eax; jbe short 0x00000000000a84d0; add rax, rdi; ret; 
0x000000000a84a4: sub edx, eax; jbe short 0x00000000000a84d0; lea rax, [rdi+rax+0x10]; ret; 
0x000000000a84b4: sub edx, eax; jbe short 0x00000000000a84d0; lea rax, [rdi+rax+0x20]; ret; 
0x000000000a84c4: sub edx, eax; jbe short 0x00000000000a84d0; lea rax, [rdi+rax+0x30]; ret; 
0x000000000ca394: sub edx, eax; jbe short 0x00000000000ca3d0; add rax, rdi; ret; 
0x000000000ca3a4: sub edx, eax; jbe short 0x00000000000ca3d0; lea rax, [rdi+rax+0x10]; ret; 
0x000000000ca3b4: sub edx, eax; jbe short 0x00000000000ca3d0; lea rax, [rdi+rax+0x20]; ret; 
0x000000000ca3c4: sub edx, eax; jbe short 0x00000000000ca3d0; lea rax, [rdi+rax+0x30]; ret; 
0x00000000040436: sub edx, eax; mov eax, edx; sar eax, 0x10; ret; 
0x00000000144158: sub edx, eax; mov rsi, r13; call qword ptr [r15+0x40]; 
0x00000000144848: sub edx, eax; mov rsi, rbx; call qword ptr [rbp+0x40]; 
0x00000000123299: sub edx, eax; shr ecx, 0x1f; cmp sil, cl; cmove eax, edx; ret; 
0x0000000010f158: sub edx, eax; test eax, eax; cmovns eax, edx; ret; 
0x000000001443af: sub edx, ebx; mov rsi, r13; call qword ptr [r14+0x40]; 
0x000000000b6d5c: sub edx, ecx; lea r11, [rip+0xf251f]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b63cc: sub edx, ecx; lea r11, [rip+0xf2e2f]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b4e4c: sub edx, ecx; lea r11, [rip+0xf425b]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b46fc: sub edx, ecx; lea r11, [rip+0xf491f]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b377c: sub edx, ecx; lea r11, [rip+0xf574b]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b30bc: sub edx, ecx; lea r11, [rip+0xf5d83]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000014407e: sub edx, ecx; mov rsi, r13; call qword ptr [r15+0x40]; 
0x00000000085384: sub edx, esi; call qword ptr [rax+0x70]; 
0x0000000008d13a: sub edx, esi; call qword ptr [rbp+0x70]; 
0x0000000017d318: sub edx, esi; cmp edx, ecx; jle short 0x000000000017d334; movsxd rax, ecx; ret; 
0x00000000084394: sub edx, esi; cmp r13, rdx; jbe 0x0000000000084558; mov rdi, r15; call qword ptr [rax+0x20]; 
0x0000000008e82d: sub edx, esi; cmp r13, rdx; jbe 0x000000000008ea90; mov rdi, rbx; call qword ptr [rax+0x20]; 
0x00000000085b9c: sub edx, esi; mov [rsp+0x8], rcx; mov rdi, r15; call rax; 
0x0000000008afed: sub edx, esi; mov [rsp], rcx; mov rdi, rbp; call rax; 
0x000000001449f9: sub edx, esi; mov rbp, rdx; call qword ptr [rbx+0x10]; 
0x00000000123298: sub edx, r8d; shr ecx, 0x1f; cmp sil, cl; cmove eax, edx; ret; 
0x00000000053711: sub esi, 0x1; jne short 0x00000000000536f8; mov eax, 0x1; ret; 
0x00000000053939: sub esi, 0x1; jne short 0x0000000000053920; mov eax, 0x1; ret; 
0x00000000136fc1: sub esi, 0x1; mov [rdi+0x1], sil; ret; 
0x00000000041f3b: sub esi, [0x28]; jne short 0x0000000000041f4c; add rsp, 0x98; ret; 
0x00000000129271: sub esi, [0x28]; jne short 0x0000000000129285; add rsp, 0x28; ret; 
0x000000001292d1: sub esi, [0x28]; jne short 0x00000000001292e5; add rsp, 0x28; ret; 
0x00000000139899: sub esi, [0x28]; jne short 0x00000000001398a7; add rsp, 0x18; ret; 
0x0000000015a272: sub esi, [0x28]; jne short 0x000000000015a285; add rsp, 0x28; ret; 
0x00000000113fef: sub esi, [rcx]; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x5d], bl; ret; 
0x00000000128488: sub esi, [rcx]; ror byte ptr [rdi], 0x5; cmp rax, 0xfffffffffffff000; ja short 0x00000000001284a0; ret; 
0x0000000005cef0: sub esi, eax; mov rax, [rip+0x18c3e7]; mov rcx, r14; call qword ptr [rax+r8*8]; 
0x000000000e7d76: sub esi, eax; or [r9], r11b; mov eax, 0x1; ret; 
0x0000000008bca9: sub esi, ecx; mov [rsp], r8; mov edx, 0x1; mov rdi, rbp; call qword ptr [rax+0x80]; 
0x00000000146db3: sub esi, edi; jmp qword ptr [rsi+0x2e]; 
0x0000000004648e: sub esi, edi; syscall; 
0x00000000169241: sub esi, edx; lea r11, [rip+0x4ee06]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001690c1: sub esi, edx; lea r11, [rip+0x4ef86]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168f41: sub esi, edx; lea r11, [rip+0x4f106]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168dc1: sub esi, edx; lea r11, [rip+0x4f286]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168c41: sub esi, edx; lea r11, [rip+0x4f406]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168ac1: sub esi, edx; lea r11, [rip+0x4f586]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168941: sub esi, edx; lea r11, [rip+0x4f706]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001687c1: sub esi, edx; lea r11, [rip+0x4f886]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168641: sub esi, edx; lea r11, [rip+0x4fa06]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001684c1: sub esi, edx; lea r11, [rip+0x4fb86]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168341: sub esi, edx; lea r11, [rip+0x4fd06]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001681c1: sub esi, edx; lea r11, [rip+0x4fe86]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168041: sub esi, edx; lea r11, [rip+0x50006]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000167ec1: sub esi, edx; lea r11, [rip+0x50186]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000167d41: sub esi, edx; lea r11, [rip+0x50306]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000167bc8: sub esi, edx; lea r11, [rip+0x5047f]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166741: sub esi, edx; lea r11, [rip+0x51406]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001665c1: sub esi, edx; lea r11, [rip+0x51586]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166441: sub esi, edx; lea r11, [rip+0x51706]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001662c1: sub esi, edx; lea r11, [rip+0x51886]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166141: sub esi, edx; lea r11, [rip+0x51a06]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165fc1: sub esi, edx; lea r11, [rip+0x51b86]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165e41: sub esi, edx; lea r11, [rip+0x51d06]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165cc1: sub esi, edx; lea r11, [rip+0x51e86]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165b41: sub esi, edx; lea r11, [rip+0x52006]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001659c1: sub esi, edx; lea r11, [rip+0x52186]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165841: sub esi, edx; lea r11, [rip+0x52306]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001656c1: sub esi, edx; lea r11, [rip+0x52486]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165541: sub esi, edx; lea r11, [rip+0x52606]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001653c1: sub esi, edx; lea r11, [rip+0x52786]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165241: sub esi, edx; lea r11, [rip+0x52906]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001650c8: sub esi, edx; lea r11, [rip+0x52a7f]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000008cea8: sub esi, edx; mov rdi, rbx; mov edx, 0x1; call qword ptr [r14+0x80]; 
0x00000000052f93: sub esp, 0x18; mov rsi, rsp; mov edi, 0x3001; mov eax, 0x9e; syscall; 
0x0000000015936b: sub esp, 0x28; mov r13, [rip+0x89a43]; mov [rsp+0x8], rcx; lea rdi, [r13+0x988]; call qword ptr [r13+0xf88]; 
0x00000000119017: sub esp, 0x8; call rsi; 
0x000000001597bc: sub esp, 0x8; push qword ptr [rax]; mov rax, [rip+0x89670]; mov rdi, [rdi]; call qword ptr [rax+0x278]; 
0x0000000014b978: sub esp, 0xffffff80; mov eax, r8d; pop rbp; ret; 
0x00000000108648: sub esp, 0xffffff80; pop rbp; pop r12; pop r13; ret; 
0x00000000191df7: sub qword ptr [rip+0x56859], 0x1; pop rbp; ret; 
0x00000000156cfa: sub qword ptr [rip+0x923e2], 0x1; add rsp, 0x10; mov eax, r8d; pop rbp; ret; 
0x00000000156c1a: sub qword ptr [rip+0x924c2], 0x1; add rsp, 0x10; mov eax, r8d; pop rbp; ret; 
0x0000000013d1e7: sub qword ptr [rip+0xab9a9], 0x1; pop rbp; ret; 
0x000000001515c5: sub r11b, r8b; nop [rax+rax]; endbr64; xor eax, eax; ret; 
0x000000000b4369: sub r8, 0x10; jb 0x00000000000b3919; movdqu [rdi+0x30], xmm7; ret; 
0x000000000b5bb9: sub r8, 0x10; jb 0x00000000000b4ff9; movdqu [rdi+0x30], xmm7; lea rax, [rdi+0x40]; ret; 
0x00000000171e41: sub r8, 0x10; lea rcx, [rdx+0x10]; jne 0x0000000000172390; ret; 
0x000000000b3b98: sub r8, 0x10; lea rdi, [rdi+0x10]; jne 0x00000000000b4270; ret; 
0x000000000b52bc: sub r8, 0x10; lea rdi, [rdi+0x10]; jne 0x00000000000b5ac0; ret; 
0x000000000b3bbb: sub r8, 0x11; lea rdi, [rdi+0x11]; jne 0x00000000000b4270; ret; 
0x000000000b52df: sub r8, 0x11; lea rdi, [rdi+0x11]; jne 0x00000000000b5ac0; ret; 
0x000000000b3be0: sub r8, 0x12; lea rdi, [rdi+0x12]; jne 0x00000000000b4270; ret; 
0x000000000b5304: sub r8, 0x12; lea rdi, [rdi+0x12]; jne 0x00000000000b5ac0; ret; 
0x000000000b3bfe: sub r8, 0x13; lea rdi, [rdi+0x13]; jne 0x00000000000b4270; ret; 
0x000000000b5332: sub r8, 0x13; lea rdi, [rdi+0x13]; jne 0x00000000000b5ac0; ret; 
0x000000000b3c1e: sub r8, 0x14; lea rdi, [rdi+0x14]; jne 0x00000000000b4270; ret; 
0x000000000b5362: sub r8, 0x14; lea rdi, [rdi+0x14]; jne 0x00000000000b5ac0; ret; 
0x000000000b3c41: sub r8, 0x15; lea rdi, [rdi+0x15]; jne 0x00000000000b4270; ret; 
0x000000000b5395: sub r8, 0x15; lea rdi, [rdi+0x15]; jne 0x00000000000b5ac0; ret; 
0x000000000b3c60: sub r8, 0x16; lea rdi, [rdi+0x16]; jne 0x00000000000b4270; ret; 
0x000000000b53c4: sub r8, 0x16; lea rdi, [rdi+0x16]; jne 0x00000000000b5ac0; ret; 
0x000000000b3c80: sub r8, 0x17; lea rdi, [rdi+0x17]; jne 0x00000000000b4270; ret; 
0x000000000b53f4: sub r8, 0x17; lea rdi, [rdi+0x17]; jne 0x00000000000b5ac0; ret; 
0x000000000b3ca0: sub r8, 0x18; lea rdi, [rdi+0x18]; jne 0x00000000000b4270; ret; 
0x000000000b5424: sub r8, 0x18; lea rdi, [rdi+0x18]; jne 0x00000000000b5ac0; ret; 
0x000000000b3cc3: sub r8, 0x19; lea rdi, [rdi+0x19]; jne 0x00000000000b4270; ret; 
0x000000000b5457: sub r8, 0x19; lea rdi, [rdi+0x19]; jne 0x00000000000b5ac0; ret; 
0x00000000172037: sub r8, 0x1; lea rcx, [rdx+0x1]; jne 0x0000000000172390; ret; 
0x000000000b39b2: sub r8, 0x1; lea rdi, [rdi+0x1]; jne 0x00000000000b4270; ret; 
0x000000000b5095: sub r8, 0x1; lea rdi, [rdi+0x1]; jne 0x00000000000b5ac0; ret; 
0x00000000183d68: sub r8, 0x1; lea rdi, [rdi+0x1]; jne 0x00000000001841a0; vzeroupper; ret; 
0x00000000184a80: sub r8, 0x1; lea rdi, [rdi+0x1]; jne 0x0000000000184ed0; vzeroupper; ret; 
0x00000000183f7f: sub r8, 0x1; lea rdi, [rdi+rdx+0x1]; jne 0x00000000001841a0; vzeroupper; ret; 
0x00000000184cb3: sub r8, 0x1; lea rdi, [rdi+rdx+0x1]; jne 0x0000000000184ed0; vzeroupper; ret; 
0x000000000b3cf8: sub r8, 0x1a; lea rdi, [rdi+0x1a]; jne 0x00000000000b4270; ret; 
0x000000000b548c: sub r8, 0x1a; lea rdi, [rdi+0x1a]; jne 0x00000000000b5ac0; ret; 
0x000000000b3d26: sub r8, 0x1b; lea rdi, [rdi+0x1b]; jne 0x00000000000b4270; ret; 
0x000000000b54ba: sub r8, 0x1b; lea rdi, [rdi+0x1b]; jne 0x00000000000b5ac0; ret; 
0x000000000b3d56: sub r8, 0x1c; lea rdi, [rdi+0x1c]; jne 0x00000000000b4270; ret; 
0x000000000b54ea: sub r8, 0x1c; lea rdi, [rdi+0x1c]; jne 0x00000000000b5ac0; ret; 
0x000000000b3d82: sub r8, 0x1d; lea rdi, [rdi+0x1d]; jne 0x00000000000b4270; ret; 
0x000000000b5516: sub r8, 0x1d; lea rdi, [rdi+0x1d]; jne 0x00000000000b5ac0; ret; 
0x000000000b3db2: sub r8, 0x1e; lea rdi, [rdi+0x1e]; jne 0x00000000000b4270; ret; 
0x000000000b5546: sub r8, 0x1e; lea rdi, [rdi+0x1e]; jne 0x00000000000b5ac0; ret; 
0x000000000b3de2: sub r8, 0x1f; lea rdi, [rdi+0x1f]; jne 0x00000000000b4270; ret; 
0x000000000b5576: sub r8, 0x1f; lea rdi, [rdi+0x1f]; jne 0x00000000000b5ac0; ret; 
0x0000000018429b: sub r8, 0x20; jb 0x0000000000183eb5; vmovdqu [rdi+0x60], ymm7; vzeroupper; ret; 
0x000000000b3e12: sub r8, 0x20; lea rdi, [rdi+0x20]; jne 0x00000000000b4270; ret; 
0x000000000b55a6: sub r8, 0x20; lea rdi, [rdi+0x20]; jne 0x00000000000b5ac0; ret; 
0x00000000172059: sub r8, 0x2; lea rcx, [rdx+0x2]; jne 0x0000000000172390; ret; 
0x000000000b39d6: sub r8, 0x2; lea rdi, [rdi+0x2]; jne 0x00000000000b4270; ret; 
0x000000000b50ba: sub r8, 0x2; lea rdi, [rdi+0x2]; jne 0x00000000000b5ac0; ret; 
0x00000000183f16: sub r8, 0x2; lea rdi, [rdi+0x2]; jne 0x00000000001841a0; vzeroupper; ret; 
0x00000000184c4a: sub r8, 0x2; lea rdi, [rdi+0x2]; jne 0x0000000000184ed0; vzeroupper; ret; 
0x0000000017207f: sub r8, 0x3; lea rcx, [rdx+0x3]; jne 0x0000000000172390; ret; 
0x000000000b39f9: sub r8, 0x3; lea rdi, [rdi+0x3]; jne 0x00000000000b4270; ret; 
0x000000000b50dd: sub r8, 0x3; lea rdi, [rdi+0x3]; jne 0x00000000000b5ac0; ret; 
0x00000000183f3a: sub r8, 0x3; lea rdi, [rdi+0x3]; jne 0x00000000001841a0; vzeroupper; ret; 
0x00000000184c6e: sub r8, 0x3; lea rdi, [rdi+0x3]; jne 0x0000000000184ed0; vzeroupper; ret; 
0x00000000172097: sub r8, 0x4; lea rcx, [rdx+0x4]; jne 0x0000000000172390; ret; 
0x000000000b3a14: sub r8, 0x4; lea rdi, [rdi+0x4]; jne 0x00000000000b4270; ret; 
0x000000000b50f8: sub r8, 0x4; lea rdi, [rdi+0x4]; jne 0x00000000000b5ac0; ret; 
0x00000000183f54: sub r8, 0x4; lea rdi, [rdi+0x4]; jne 0x00000000001841a0; vzeroupper; ret; 
0x00000000184c88: sub r8, 0x4; lea rdi, [rdi+0x4]; jne 0x0000000000184ed0; vzeroupper; ret; 
0x000000001720bd: sub r8, 0x5; lea rcx, [rdx+0x5]; jne 0x0000000000172390; ret; 
0x000000000b3a37: sub r8, 0x5; lea rdi, [rdi+0x5]; jne 0x00000000000b4270; ret; 
0x000000000b511b: sub r8, 0x5; lea rdi, [rdi+0x5]; jne 0x00000000000b5ac0; ret; 
0x000000001720df: sub r8, 0x6; lea rcx, [rdx+0x6]; jne 0x0000000000172390; ret; 
0x000000000b3a5c: sub r8, 0x6; lea rdi, [rdi+0x6]; jne 0x00000000000b4270; ret; 
0x000000000b5140: sub r8, 0x6; lea rdi, [rdi+0x6]; jne 0x00000000000b5ac0; ret; 
0x000000001720fd: sub r8, 0x7; lea rcx, [rdx+0x7]; jne 0x0000000000172390; ret; 
0x000000000b3a7a: sub r8, 0x7; lea rdi, [rdi+0x7]; jne 0x00000000000b4270; ret; 
0x000000000b515e: sub r8, 0x7; lea rdi, [rdi+0x7]; jne 0x00000000000b5ac0; ret; 
0x00000000171dd9: sub r8, 0x8; lea rcx, [rdx+0x8]; jne 0x0000000000172390; ret; 
0x000000000b3a96: sub r8, 0x8; lea rdi, [rdi+0x8]; jne 0x00000000000b4270; ret; 
0x000000000b517a: sub r8, 0x8; lea rdi, [rdi+0x8]; jne 0x00000000000b5ac0; ret; 
0x0000000017211f: sub r8, 0x9; lea rcx, [rdx+0x9]; jne 0x0000000000172390; ret; 
0x000000000b3ab9: sub r8, 0x9; lea rdi, [rdi+0x9]; jne 0x00000000000b4270; ret; 
0x000000000b519d: sub r8, 0x9; lea rdi, [rdi+0x9]; jne 0x00000000000b5ac0; ret; 
0x0000000017213f: sub r8, 0xa; lea rcx, [rdx+0xa]; jne 0x0000000000172390; ret; 
0x000000000b3ade: sub r8, 0xa; lea rdi, [rdi+0xa]; jne 0x00000000000b4270; ret; 
0x000000000b51c2: sub r8, 0xa; lea rdi, [rdi+0xa]; jne 0x00000000000b5ac0; ret; 
0x0000000017215f: sub r8, 0xb; lea rcx, [rdx+0xb]; jne 0x0000000000172390; ret; 
0x000000000b3afc: sub r8, 0xb; lea rdi, [rdi+0xb]; jne 0x00000000000b4270; ret; 
0x000000000b51f0: sub r8, 0xb; lea rdi, [rdi+0xb]; jne 0x00000000000b5ac0; ret; 
0x0000000017217f: sub r8, 0xc; lea rcx, [rdx+0xc]; jne 0x0000000000172390; ret; 
0x000000000b3b1c: sub r8, 0xc; lea rdi, [rdi+0xc]; jne 0x00000000000b4270; ret; 
0x000000000b5210: sub r8, 0xc; lea rdi, [rdi+0xc]; jne 0x00000000000b5ac0; ret; 
0x000000001721a1: sub r8, 0xd; lea rcx, [rdx+0xd]; jne 0x0000000000172390; ret; 
0x000000000b3b3e: sub r8, 0xd; lea rdi, [rdi+0xd]; jne 0x00000000000b4270; ret; 
0x000000000b5232: sub r8, 0xd; lea rdi, [rdi+0xd]; jne 0x00000000000b5ac0; ret; 
0x000000001721c1: sub r8, 0xe; lea rcx, [rdx+0xe]; jne 0x0000000000172390; ret; 
0x000000000b3b5e: sub r8, 0xe; lea rdi, [rdi+0xe]; jne 0x00000000000b4270; ret; 
0x000000000b5262: sub r8, 0xe; lea rdi, [rdi+0xe]; jne 0x00000000000b5ac0; ret; 
0x000000001721e1: sub r8, 0xf; lea rcx, [rdx+0xf]; jne 0x0000000000172390; ret; 
0x000000000b3b7e: sub r8, 0xf; lea rdi, [rdi+0xf]; jne 0x00000000000b4270; ret; 
0x000000000b5292: sub r8, 0xf; lea rdi, [rdi+0xf]; jne 0x00000000000b5ac0; ret; 
0x000000000ccb0c: sub r8, rax; add r15, r8; mov [rsp+0x88], r15; call r12; 
0x0000000008c486: sub r8b, bpl; ret; 
0x000000000847ca: sub r8d, eax; mov eax, r8d; ret; 
0x00000000143f47: sub r8d, edx; pop rbx; pop rbp; mov eax, r8d; ret; 
0x000000000a69f7: sub r9, rcx; lea r10, [rip+0x1022c7]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x000000000a52d7: sub r9, rcx; lea r10, [rip+0x103967]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000016c757: sub r9, rcx; lea r10, [rip+0x3c6a7]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000016a5d7: sub r9, rcx; lea r10, [rip+0x3e7a7]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000015e227: sub r9, rcx; lea r10, [rip+0x4aad7]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000015cf97: sub r9, rcx; lea r10, [rip+0x4bce7]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x000000000ab247: sub r9, rcx; lea r10, [rip+0xfdb77]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x000000000a8fd7: sub r9, rcx; lea r10, [rip+0xffd67]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000009212b: sub rax, 0x11; shr rax, 0x4; lea rdx, [rax+0x1]; mov [rip+0x151192], rdx; ret; 
0x000000000b7b43: sub rax, 0x1; ret; 
0x000000001445c4: sub rax, 0x4; bswap eax; mov [rdx], eax; mov edx, ebx; call qword ptr [r13+0x10]; 
0x000000001445c3: sub rax, 0x4; bswap eax; mov [rdx], eax; mov edx, ebx; call qword ptr [r13+0x10]; 
0x0000000014d005: sub rax, 0xffffffffffffff80; pop rbx; ret; 
0x0000000005031e: sub rax, [0x28]; jne 0x00000000000503b5; add rsp, 0x10; pop rbx; ret; 
0x0000000004145d: sub rax, [0x28]; jne short 0x000000000004146c; add rsp, 0x18; ret; 
0x000000000418d4: sub rax, [0x28]; jne short 0x0000000000041904; mov eax, r8d; add rsp, 0x118; ret; 
0x00000000041ae8: sub rax, [0x28]; jne short 0x0000000000041b34; mov eax, r9d; add rsp, 0x148; ret; 
0x00000000045f65: sub rax, [0x28]; jne short 0x0000000000045f74; add rsp, 0x18; ret; 
0x00000000045fb2: sub rax, [0x28]; jne short 0x0000000000045fc1; add rsp, 0x18; ret; 
0x00000000055912: sub rax, [0x28]; jne short 0x0000000000055995; leave; ret; 
0x0000000008a3ee: sub rax, [0x28]; jne short 0x000000000008a409; add rsp, 0x48; ret; 
0x00000000096663: sub rax, [0x28]; jne short 0x00000000000966a5; add rsp, 0x40; pop rbp; ret; 
0x0000000010ea0c: sub rax, [0x28]; jne short 0x000000000010ea34; mov eax, r9d; add rsp, 0x38; ret; 
0x000000001131d0: sub rax, [0x28]; jne short 0x00000000001131e2; add rsp, 0xd8; ret; 
0x000000001132a9: sub rax, [0x28]; jne short 0x00000000001132bb; add rsp, 0xd8; ret; 
0x00000000115d95: sub rax, [0x28]; jne short 0x0000000000115da7; add rsp, 0xd8; ret; 
0x00000000115e55: sub rax, [0x28]; jne short 0x0000000000115e67; add rsp, 0xd8; ret; 
0x00000000116033: sub rax, [0x28]; jne short 0x0000000000116045; add rsp, 0x418; ret; 
0x0000000011629c: sub rax, [0x28]; jne short 0x00000000001162ae; add rsp, 0xd8; ret; 
0x00000000116509: sub rax, [0x28]; jne short 0x000000000011651b; add rsp, 0xd8; ret; 
0x00000000123937: sub rax, [0x28]; jne short 0x0000000000123949; add rsp, 0xd8; ret; 
0x00000000125540: sub rax, [0x28]; jne short 0x0000000000125552; add rsp, 0xd8; ret; 
0x0000000013f785: sub rax, [0x28]; jne short 0x000000000013f796; add rsp, 0x10; pop r12; ret; 
0x00000000141433: sub rax, [0x28]; jne short 0x0000000000141443; add rsp, 0x40; pop rbp; ret; 
0x0000000014b4eb: sub rax, [0x28]; jne short 0x000000000014b511; add rsp, 0x10; pop rbx; ret; 
0x0000000014d6b3: sub rax, [0x28]; jne short 0x000000000014d6c2; add rsp, 0x78; ret; 
0x0000000014d723: sub rax, [0x28]; jne short 0x000000000014d732; add rsp, 0x78; ret; 
0x0000000014d793: sub rax, [0x28]; jne short 0x000000000014d7a2; add rsp, 0x78; ret; 
0x0000000014d7f4: sub rax, [0x28]; jne short 0x000000000014d803; add rsp, 0x78; ret; 
0x0000000014d858: sub rax, [0x28]; jne short 0x000000000014d867; add rsp, 0x78; ret; 
0x0000000014d8c3: sub rax, [0x28]; jne short 0x000000000014d8d2; add rsp, 0x78; ret; 
0x0000000014d946: sub rax, [0x28]; jne short 0x000000000014d955; add rsp, 0x78; ret; 
0x0000000014de69: sub rax, [0x28]; jne short 0x000000000014de98; add rsp, 0x28; ret; 
0x0000000014f8ce: sub rax, [0x28]; jne short 0x000000000014f8dd; add rsp, 0x48; ret; 
0x000000000904b1: sub rax, [rdi+0x18]; ret; 
0x000000000896bc: sub rax, [rdi+0x20]; ret; 
0x00000000121186: sub rax, [rdi+0x38]; cmp rax, rsi; jb short 0x00000000001211a0; mov eax, 0x1; ret; 
0x0000000008958a: sub rax, [rdi+0x38]; ret; 
0x00000000084ef8: sub rax, [rdx+0x10]; sar rax, 0x2; ret; 
0x000000000896a9: sub rax, [rdx+0x18]; sar rax, 0x2; ret; 
0x00000000089579: sub rax, [rdx+0x30]; sar rax, 0x2; ret; 
0x0000000005031d: sub rax, fs:[0x28]; jne 0x00000000000503b5; add rsp, 0x10; pop rbx; ret; 
0x0000000004145c: sub rax, fs:[0x28]; jne short 0x000000000004146c; add rsp, 0x18; ret; 
0x000000000418d3: sub rax, fs:[0x28]; jne short 0x0000000000041904; mov eax, r8d; add rsp, 0x118; ret; 
0x00000000041ae7: sub rax, fs:[0x28]; jne short 0x0000000000041b34; mov eax, r9d; add rsp, 0x148; ret; 
0x00000000045f64: sub rax, fs:[0x28]; jne short 0x0000000000045f74; add rsp, 0x18; ret; 
0x00000000045fb1: sub rax, fs:[0x28]; jne short 0x0000000000045fc1; add rsp, 0x18; ret; 
0x00000000055911: sub rax, fs:[0x28]; jne short 0x0000000000055995; leave; ret; 
0x0000000008a3ed: sub rax, fs:[0x28]; jne short 0x000000000008a409; add rsp, 0x48; ret; 
0x00000000096662: sub rax, fs:[0x28]; jne short 0x00000000000966a5; add rsp, 0x40; pop rbp; ret; 
0x0000000010ea0b: sub rax, fs:[0x28]; jne short 0x000000000010ea34; mov eax, r9d; add rsp, 0x38; ret; 
0x000000001131cf: sub rax, fs:[0x28]; jne short 0x00000000001131e2; add rsp, 0xd8; ret; 
0x000000001132a8: sub rax, fs:[0x28]; jne short 0x00000000001132bb; add rsp, 0xd8; ret; 
0x00000000115d94: sub rax, fs:[0x28]; jne short 0x0000000000115da7; add rsp, 0xd8; ret; 
0x00000000115e54: sub rax, fs:[0x28]; jne short 0x0000000000115e67; add rsp, 0xd8; ret; 
0x00000000116032: sub rax, fs:[0x28]; jne short 0x0000000000116045; add rsp, 0x418; ret; 
0x0000000011629b: sub rax, fs:[0x28]; jne short 0x00000000001162ae; add rsp, 0xd8; ret; 
0x00000000116508: sub rax, fs:[0x28]; jne short 0x000000000011651b; add rsp, 0xd8; ret; 
0x00000000123936: sub rax, fs:[0x28]; jne short 0x0000000000123949; add rsp, 0xd8; ret; 
0x0000000012553f: sub rax, fs:[0x28]; jne short 0x0000000000125552; add rsp, 0xd8; ret; 
0x0000000013f784: sub rax, fs:[0x28]; jne short 0x000000000013f796; add rsp, 0x10; pop r12; ret; 
0x00000000141432: sub rax, fs:[0x28]; jne short 0x0000000000141443; add rsp, 0x40; pop rbp; ret; 
0x0000000014b4ea: sub rax, fs:[0x28]; jne short 0x000000000014b511; add rsp, 0x10; pop rbx; ret; 
0x0000000014d6b2: sub rax, fs:[0x28]; jne short 0x000000000014d6c2; add rsp, 0x78; ret; 
0x0000000014d722: sub rax, fs:[0x28]; jne short 0x000000000014d732; add rsp, 0x78; ret; 
0x0000000014d792: sub rax, fs:[0x28]; jne short 0x000000000014d7a2; add rsp, 0x78; ret; 
0x0000000014d7f3: sub rax, fs:[0x28]; jne short 0x000000000014d803; add rsp, 0x78; ret; 
0x0000000014d857: sub rax, fs:[0x28]; jne short 0x000000000014d867; add rsp, 0x78; ret; 
0x0000000014d8c2: sub rax, fs:[0x28]; jne short 0x000000000014d8d2; add rsp, 0x78; ret; 
0x0000000014d945: sub rax, fs:[0x28]; jne short 0x000000000014d955; add rsp, 0x78; ret; 
0x0000000014de68: sub rax, fs:[0x28]; jne short 0x000000000014de98; add rsp, 0x28; ret; 
0x0000000014f8cd: sub rax, fs:[0x28]; jne short 0x000000000014f8dd; add rsp, 0x48; ret; 
0x00000000142412: sub rax, r12; mov [rbx+0x18], rax; mov rax, [rbp+0x8]; call qword ptr [rax+0x28]; 
0x0000000017e8b2: sub rax, rcx; je short 0x000000000017e8c0; sbb eax, eax; or eax, 0x1; ret; 
0x000000000ae048: sub rax, rdi; ret; 
0x000000000cb84d: sub rax, rdi; shr rax, 0x2; ret; 
0x00000000087feb: sub rax, rdx; mov [rcx], rax; xor eax, eax; pop rbx; ret; 
0x0000000008bae0: sub rax, rdx; pop rbp; pop r12; ret; 
0x000000000454bc: sub rax, rdx; ret; 
0x00000000186b3f: sub rax, rdx; shr rax, 0x2; vzeroupper; ret; 
0x00000000040798: sub rax, rdx; shr rax, 0x3f; ret; 
0x000000001821cf: sub rax, rdx; vzeroupper; ret; 
0x000000000c610b: sub rbx, [0x28]; jne short 0x00000000000c6134; add rsp, 0x20; pop rbx; ret; 
0x0000000014427a: sub rbx, [0x28]; jne short 0x00000000001442b2; add rsp, 0x10; pop rbx; ret; 
0x00000000144318: sub rbx, [0x28]; jne short 0x0000000000144355; add rsp, 0x10; pop rbx; ret; 
0x00000000144f4d: sub rbx, [0x28]; jne short 0x0000000000144f67; add rsp, 0x40; pop rbx; ret; 
0x000000000c610a: sub rbx, fs:[0x28]; jne short 0x00000000000c6134; add rsp, 0x20; pop rbx; ret; 
0x00000000144279: sub rbx, fs:[0x28]; jne short 0x00000000001442b2; add rsp, 0x10; pop rbx; ret; 
0x00000000144317: sub rbx, fs:[0x28]; jne short 0x0000000000144355; add rsp, 0x10; pop rbx; ret; 
0x00000000144f4c: sub rbx, fs:[0x28]; jne short 0x0000000000144f67; add rsp, 0x40; pop rbx; ret; 
0x000000000545d7: sub rcx, 0x1; jae short 0x00000000000545d0; mov rax, rdx; ret; 
0x00000000053cfb: sub rcx, 0x8; cmp rcx, 0xfffffffffffffff8; jne short 0x0000000000053cf0; mov rax, rdx; ret; 
0x0000000009a697: sub rcx, [0x28]; jne 0x000000000009a752; add rsp, 0x18; ret; 
0x00000000108b98: sub rcx, [0x28]; jne 0x0000000000108c63; add rsp, 0x78; ret; 
0x0000000010919e: sub rcx, [0x28]; jne 0x0000000000109245; add rsp, 0x68; ret; 
0x000000001092df: sub rcx, [0x28]; jne 0x000000000010939e; add rsp, 0x30; pop rbx; ret; 
0x0000000010940f: sub rcx, [0x28]; jne 0x00000000001094ce; add rsp, 0x30; pop rbx; ret; 
0x0000000010d71d: sub rcx, [0x28]; jne 0x000000000010d7c3; add rsp, 0x40; pop r12; ret; 
0x0000000010ffe9: sub rcx, [0x28]; jne 0x0000000000110093; add rsp, 0x60; pop rbp; ret; 
0x00000000126d9c: sub rcx, [0x28]; jne 0x0000000000126e7d; leave; ret; 
0x00000000148497: sub rcx, [0x28]; jne 0x0000000000148523; add rsp, 0x20; pop rbx; ret; 
0x000000000417a0: sub rcx, [0x28]; jne short 0x00000000000417b2; add rsp, 0x148; ret; 
0x00000000041dac: sub rcx, [0x28]; jne short 0x0000000000041dc5; add rsp, 0x118; ret; 
0x00000000041e2f: sub rcx, [0x28]; jne short 0x0000000000041e48; add rsp, 0x118; ret; 
0x0000000004217e: sub rcx, [0x28]; jne short 0x00000000000421b5; add rsp, 0x40; pop rbx; ret; 
0x0000000004249d: sub rcx, [0x28]; jne short 0x00000000000424af; add rsp, 0x148; ret; 
0x0000000004293d: sub rcx, [0x28]; jne short 0x000000000004294f; add rsp, 0xa8; ret; 
0x000000000455eb: sub rcx, [0x28]; jne short 0x00000000000455fa; add rsp, 0x28; ret; 
0x000000000456db: sub rcx, [0x28]; jne short 0x00000000000456ea; add rsp, 0x28; ret; 
0x00000000045a0f: sub rcx, [0x28]; jne short 0x0000000000045a6a; add rsp, 0x18; ret; 
0x00000000046004: sub rcx, [0x28]; jne short 0x0000000000046013; add rsp, 0x18; ret; 
0x00000000046051: sub rcx, [0x28]; jne short 0x0000000000046060; add rsp, 0x18; ret; 
0x000000000460a4: sub rcx, [0x28]; jne short 0x00000000000460b3; add rsp, 0x18; ret; 
0x000000000460f1: sub rcx, [0x28]; jne short 0x0000000000046100; add rsp, 0x18; ret; 
0x00000000050d3d: sub rcx, [0x28]; jne short 0x0000000000050d4f; add rsp, 0xd8; ret; 
0x000000000597db: sub rcx, [0x28]; jne short 0x0000000000059800; add rsp, 0x450; pop rbp; ret; 
0x0000000005fd70: sub rcx, [0x28]; jne short 0x000000000005fd82; add rsp, 0xd8; ret; 
0x0000000005fe45: sub rcx, [0x28]; jne short 0x000000000005fe57; add rsp, 0xd8; ret; 
0x0000000005fefc: sub rcx, [0x28]; jne short 0x000000000005ff0e; add rsp, 0xd8; ret; 
0x00000000060090: sub rcx, [0x28]; jne short 0x00000000000600a2; add rsp, 0xd8; ret; 
0x00000000060150: sub rcx, [0x28]; jne short 0x0000000000060162; add rsp, 0xd8; ret; 
0x0000000006023e: sub rcx, [0x28]; jne short 0x0000000000060250; add rsp, 0xd8; ret; 
0x00000000060315: sub rcx, [0x28]; jne short 0x0000000000060327; add rsp, 0xd8; ret; 
0x000000000612a8: sub rcx, [0x28]; jne short 0x00000000000612ba; add rsp, 0xd8; ret; 
0x00000000061383: sub rcx, [0x28]; jne short 0x0000000000061395; add rsp, 0xd8; ret; 
0x00000000082e00: sub rcx, [0x28]; jne short 0x0000000000082e12; add rsp, 0xd8; ret; 
0x00000000082ebc: sub rcx, [0x28]; jne short 0x0000000000082ece; add rsp, 0xd8; ret; 
0x00000000082fb5: sub rcx, [0x28]; jne short 0x0000000000082fc7; add rsp, 0xd8; ret; 
0x00000000083085: sub rcx, [0x28]; jne short 0x0000000000083097; add rsp, 0xd8; ret; 
0x0000000008313e: sub rcx, [0x28]; jne short 0x0000000000083150; add rsp, 0xd8; ret; 
0x00000000091b35: sub rcx, [0x28]; jne short 0x0000000000091bb7; add rsp, 0x98; ret; 
0x000000000c6be8: sub rcx, [0x28]; jne short 0x00000000000c6bfa; add rsp, 0xd8; ret; 
0x000000000c6cc3: sub rcx, [0x28]; jne short 0x00000000000c6cd5; add rsp, 0xd8; ret; 
0x000000000ccff1: sub rcx, [0x28]; jne short 0x00000000000cd036; add rsp, 0x28; ret; 
0x000000000d9abb: sub rcx, [0x28]; jne short 0x00000000000d9ace; add rsp, 0xe0; pop rbx; ret; 
0x000000000d9b53: sub rcx, [0x28]; jne short 0x00000000000d9b66; add rsp, 0xe0; pop rbx; ret; 
0x000000000db2f7: sub rcx, [0x28]; jne short 0x00000000000db353; add rsp, 0x38; ret; 
0x000000000dfbc7: sub rcx, [0x28]; jne short 0x00000000000dfc23; add rsp, 0x38; ret; 
0x000000000dfc67: sub rcx, [0x28]; jne short 0x00000000000dfcc3; add rsp, 0x38; ret; 
0x000000000dff37: sub rcx, [0x28]; jne short 0x00000000000dffa3; add rsp, 0x38; ret; 
0x000000000dffe7: sub rcx, [0x28]; jne short 0x00000000000e0053; add rsp, 0x38; ret; 
0x00000000107e78: sub rcx, [0x28]; jne short 0x0000000000107e88; add rsp, 0x10; pop rbp; ret; 
0x00000000107f6d: sub rcx, [0x28]; jne short 0x0000000000107f7c; add rsp, 0x38; ret; 
0x00000000107fc8: sub rcx, [0x28]; jne short 0x0000000000107fd7; add rsp, 0x18; ret; 
0x00000000109fad: sub rcx, [0x28]; jne short 0x000000000010a000; add rsp, 0x130; pop rbp; ret; 
0x0000000010df7d: sub rcx, [0x28]; jne short 0x000000000010dff4; add rsp, 0xa0; pop rbx; ret; 
0x0000000010e051: sub rcx, [0x28]; jne short 0x000000000010e0cf; add rsp, 0xa0; pop rbx; ret; 
0x0000000010e343: sub rcx, [0x28]; jne short 0x000000000010e393; add rsp, 0x68; ret; 
0x0000000010e3d2: sub rcx, [0x28]; jne short 0x000000000010e423; add rsp, 0x18; ret; 
0x0000000010e48a: sub rcx, [0x28]; jne short 0x000000000010e4db; add rsp, 0x58; ret; 
0x0000000010e528: sub rcx, [0x28]; jne short 0x000000000010e57b; add rsp, 0x58; ret; 
0x0000000010ea75: sub rcx, [0x28]; jne short 0x000000000010ea8b; add rsp, 0x18; ret; 
0x0000000010f8f7: sub rcx, [0x28]; jne short 0x000000000010f95b; add rsp, 0x38; ret; 
0x0000000010f997: sub rcx, [0x28]; jne short 0x000000000010f9fb; add rsp, 0x38; ret; 
0x0000000010fa4c: sub rcx, [0x28]; jne short 0x000000000010facb; add rsp, 0x38; ret; 
0x0000000010fb1c: sub rcx, [0x28]; jne short 0x000000000010fb9b; add rsp, 0x38; ret; 
0x0000000011075c: sub rcx, [0x28]; jne short 0x0000000000110777; add rsp, 0x58; ret; 
0x000000001107cf: sub rcx, [0x28]; jne short 0x00000000001107de; add rsp, 0x28; ret; 
0x000000001108a7: sub rcx, [0x28]; jne short 0x00000000001108ed; add rsp, 0x68; ret; 
0x00000000111a65: sub rcx, [0x28]; jne short 0x0000000000111a74; add rsp, 0x38; ret; 
0x00000000111ae8: sub rcx, [0x28]; jne short 0x0000000000111af7; add rsp, 0x38; ret; 
0x00000000111b5c: sub rcx, [0x28]; jne short 0x0000000000111b6b; add rsp, 0x38; ret; 
0x00000000111bc7: sub rcx, [0x28]; jne short 0x0000000000111bd6; add rsp, 0x38; ret; 
0x00000000114601: sub rcx, [0x28]; jne short 0x0000000000114610; add rsp, 0x18; ret; 
0x00000000119acf: sub rcx, [0x28]; jne short 0x0000000000119af3; add rsp, 0x58; ret; 
0x0000000011ac46: sub rcx, [0x28]; jne short 0x000000000011ac55; add rsp, 0x18; ret; 
0x0000000011af45: sub rcx, [0x28]; jne short 0x000000000011af5f; add rsp, 0xa0; pop rbx; ret; 
0x0000000011b1cb: sub rcx, [0x28]; jne short 0x000000000011b223; add rsp, 0x58; ret; 
0x00000000127b25: sub rcx, [0x28]; jne short 0x0000000000127b3c; add rsp, 0xd8; ret; 
0x00000000127e09: sub rcx, [0x28]; jne short 0x0000000000127e1b; add rsp, 0xd8; ret; 
0x00000000128e29: sub rcx, [0x28]; jne short 0x0000000000128e3b; add rsp, 0xd8; ret; 
0x00000000129399: sub rcx, [0x28]; jne short 0x00000000001293ab; add rsp, 0xd8; ret; 
0x00000000129479: sub rcx, [0x28]; jne short 0x000000000012948b; add rsp, 0xd8; ret; 
0x00000000129559: sub rcx, [0x28]; jne short 0x000000000012956b; add rsp, 0xd8; ret; 
0x000000001310b4: sub rcx, [0x28]; jne short 0x00000000001310c3; add rsp, 0x38; ret; 
0x00000000131121: sub rcx, [0x28]; jne short 0x0000000000131130; add rsp, 0x28; ret; 
0x000000001376c3: sub rcx, [0x28]; jne short 0x00000000001376e4; add rsp, 0x20; pop rbp; ret; 
0x00000000138f61: sub rcx, [0x28]; jne short 0x0000000000138f85; add rsp, 0x20; pop rbx; ret; 
0x00000000138fb6: sub rcx, [0x28]; jne short 0x0000000000138fc5; add rsp, 0x18; ret; 
0x00000000139009: sub rcx, [0x28]; jne short 0x0000000000139018; add rsp, 0x28; ret; 
0x00000000143d29: sub rcx, [0x28]; jne short 0x0000000000143d73; add rsp, 0x10; pop rbx; ret; 
0x0000000014b83d: sub rcx, [0x28]; jne short 0x000000000014b8ba; add rsp, 0x10; pop r12; ret; 
0x0000000014bab4: sub rcx, [0x28]; jne short 0x000000000014bb2a; add rsp, 0x30; pop rbx; ret; 
0x0000000014bbf4: sub rcx, [0x28]; jne short 0x000000000014bc6a; add rsp, 0x30; pop rbx; ret; 
0x0000000014d63d: sub rcx, [0x28]; jne short 0x000000000014d64c; add rsp, 0x78; ret; 
0x0000000014f939: sub rcx, [0x28]; jne short 0x000000000014f983; add rsp, 0x10; pop rbx; ret; 
0x0000000014f9c9: sub rcx, [0x28]; jne short 0x000000000014fa12; add rsp, 0x10; pop rbx; ret; 
0x0000000014fa92: sub rcx, [0x28]; jne short 0x000000000014fafb; add rsp, 0x10; pop rbp; ret; 
0x0000000014fef9: sub rcx, [0x28]; jne short 0x000000000014ff44; add rsp, 0x10; pop rbx; ret; 
0x0000000014ff89: sub rcx, [0x28]; jne short 0x000000000014ffd3; add rsp, 0x10; pop rbx; ret; 
0x00000000150139: sub rcx, [0x28]; jne short 0x0000000000150189; add rsp, 0x10; pop rbx; ret; 
0x000000001501c9: sub rcx, [0x28]; jne short 0x0000000000150213; add rsp, 0x10; pop rbx; ret; 
0x00000000150f29: sub rcx, [0x28]; jne short 0x0000000000150f75; add rsp, 0x10; pop rbx; ret; 
0x00000000150fb9: sub rcx, [0x28]; jne short 0x0000000000151005; add rsp, 0x10; pop rbx; ret; 
0x00000000151049: sub rcx, [0x28]; jne short 0x0000000000151095; add rsp, 0x10; pop rbx; ret; 
0x000000001510d9: sub rcx, [0x28]; jne short 0x0000000000151125; add rsp, 0x10; pop rbx; ret; 
0x00000000156af1: sub rcx, [0x28]; jne short 0x0000000000156b2c; add rsp, 0x10; pop rbp; ret; 
0x00000000156b81: sub rcx, [0x28]; jne short 0x0000000000156bbc; add rsp, 0x10; pop rbp; ret; 
0x0000000015991c: sub rcx, [0x28]; jne short 0x000000000015995e; add rsp, 0x58; ret; 
0x00000000159a13: sub rcx, [0x28]; jne short 0x0000000000159a64; add rsp, 0x68; ret; 
0x00000000159bac: sub rcx, [0x28]; jne short 0x0000000000159c14; add rsp, 0x68; ret; 
0x00000000159be2: sub rcx, [0x28]; jne short 0x0000000000159c14; mov rax, [rax+0x18]; add rsp, 0x68; jmp rax; 
0x00000000159c83: sub rcx, [0x28]; jne short 0x0000000000159ce1; add rsp, 0x38; ret; 
0x00000000159711: sub rcx, [rax+0x10]; cmp rcx, [rax+0x28]; jae short 0x0000000000159700; mov eax, 0x1; ret; 
0x0000000009a696: sub rcx, fs:[0x28]; jne 0x000000000009a752; add rsp, 0x18; ret; 
0x00000000108b97: sub rcx, fs:[0x28]; jne 0x0000000000108c63; add rsp, 0x78; ret; 
0x0000000010919d: sub rcx, fs:[0x28]; jne 0x0000000000109245; add rsp, 0x68; ret; 
0x000000001092de: sub rcx, fs:[0x28]; jne 0x000000000010939e; add rsp, 0x30; pop rbx; ret; 
0x0000000010940e: sub rcx, fs:[0x28]; jne 0x00000000001094ce; add rsp, 0x30; pop rbx; ret; 
0x0000000010d71c: sub rcx, fs:[0x28]; jne 0x000000000010d7c3; add rsp, 0x40; pop r12; ret; 
0x0000000010ffe8: sub rcx, fs:[0x28]; jne 0x0000000000110093; add rsp, 0x60; pop rbp; ret; 
0x00000000126d9b: sub rcx, fs:[0x28]; jne 0x0000000000126e7d; leave; ret; 
0x00000000148496: sub rcx, fs:[0x28]; jne 0x0000000000148523; add rsp, 0x20; pop rbx; ret; 
0x0000000004179f: sub rcx, fs:[0x28]; jne short 0x00000000000417b2; add rsp, 0x148; ret; 
0x00000000041dab: sub rcx, fs:[0x28]; jne short 0x0000000000041dc5; add rsp, 0x118; ret; 
0x00000000041e2e: sub rcx, fs:[0x28]; jne short 0x0000000000041e48; add rsp, 0x118; ret; 
0x0000000004217d: sub rcx, fs:[0x28]; jne short 0x00000000000421b5; add rsp, 0x40; pop rbx; ret; 
0x0000000004249c: sub rcx, fs:[0x28]; jne short 0x00000000000424af; add rsp, 0x148; ret; 
0x0000000004293c: sub rcx, fs:[0x28]; jne short 0x000000000004294f; add rsp, 0xa8; ret; 
0x000000000455ea: sub rcx, fs:[0x28]; jne short 0x00000000000455fa; add rsp, 0x28; ret; 
0x000000000456da: sub rcx, fs:[0x28]; jne short 0x00000000000456ea; add rsp, 0x28; ret; 
0x00000000045a0e: sub rcx, fs:[0x28]; jne short 0x0000000000045a6a; add rsp, 0x18; ret; 
0x00000000046003: sub rcx, fs:[0x28]; jne short 0x0000000000046013; add rsp, 0x18; ret; 
0x00000000046050: sub rcx, fs:[0x28]; jne short 0x0000000000046060; add rsp, 0x18; ret; 
0x000000000460a3: sub rcx, fs:[0x28]; jne short 0x00000000000460b3; add rsp, 0x18; ret; 
0x000000000460f0: sub rcx, fs:[0x28]; jne short 0x0000000000046100; add rsp, 0x18; ret; 
0x00000000050d3c: sub rcx, fs:[0x28]; jne short 0x0000000000050d4f; add rsp, 0xd8; ret; 
0x000000000597da: sub rcx, fs:[0x28]; jne short 0x0000000000059800; add rsp, 0x450; pop rbp; ret; 
0x0000000005fd6f: sub rcx, fs:[0x28]; jne short 0x000000000005fd82; add rsp, 0xd8; ret; 
0x0000000005fe44: sub rcx, fs:[0x28]; jne short 0x000000000005fe57; add rsp, 0xd8; ret; 
0x0000000005fefb: sub rcx, fs:[0x28]; jne short 0x000000000005ff0e; add rsp, 0xd8; ret; 
0x0000000006008f: sub rcx, fs:[0x28]; jne short 0x00000000000600a2; add rsp, 0xd8; ret; 
0x0000000006014f: sub rcx, fs:[0x28]; jne short 0x0000000000060162; add rsp, 0xd8; ret; 
0x0000000006023d: sub rcx, fs:[0x28]; jne short 0x0000000000060250; add rsp, 0xd8; ret; 
0x00000000060314: sub rcx, fs:[0x28]; jne short 0x0000000000060327; add rsp, 0xd8; ret; 
0x000000000612a7: sub rcx, fs:[0x28]; jne short 0x00000000000612ba; add rsp, 0xd8; ret; 
0x00000000061382: sub rcx, fs:[0x28]; jne short 0x0000000000061395; add rsp, 0xd8; ret; 
0x00000000082dff: sub rcx, fs:[0x28]; jne short 0x0000000000082e12; add rsp, 0xd8; ret; 
0x00000000082ebb: sub rcx, fs:[0x28]; jne short 0x0000000000082ece; add rsp, 0xd8; ret; 
0x00000000082fb4: sub rcx, fs:[0x28]; jne short 0x0000000000082fc7; add rsp, 0xd8; ret; 
0x00000000083084: sub rcx, fs:[0x28]; jne short 0x0000000000083097; add rsp, 0xd8; ret; 
0x0000000008313d: sub rcx, fs:[0x28]; jne short 0x0000000000083150; add rsp, 0xd8; ret; 
0x00000000091b34: sub rcx, fs:[0x28]; jne short 0x0000000000091bb7; add rsp, 0x98; ret; 
0x000000000c6be7: sub rcx, fs:[0x28]; jne short 0x00000000000c6bfa; add rsp, 0xd8; ret; 
0x000000000c6cc2: sub rcx, fs:[0x28]; jne short 0x00000000000c6cd5; add rsp, 0xd8; ret; 
0x000000000ccff0: sub rcx, fs:[0x28]; jne short 0x00000000000cd036; add rsp, 0x28; ret; 
0x000000000d9aba: sub rcx, fs:[0x28]; jne short 0x00000000000d9ace; add rsp, 0xe0; pop rbx; ret; 
0x000000000d9b52: sub rcx, fs:[0x28]; jne short 0x00000000000d9b66; add rsp, 0xe0; pop rbx; ret; 
0x000000000db2f6: sub rcx, fs:[0x28]; jne short 0x00000000000db353; add rsp, 0x38; ret; 
0x000000000dfbc6: sub rcx, fs:[0x28]; jne short 0x00000000000dfc23; add rsp, 0x38; ret; 
0x000000000dfc66: sub rcx, fs:[0x28]; jne short 0x00000000000dfcc3; add rsp, 0x38; ret; 
0x000000000dff36: sub rcx, fs:[0x28]; jne short 0x00000000000dffa3; add rsp, 0x38; ret; 
0x000000000dffe6: sub rcx, fs:[0x28]; jne short 0x00000000000e0053; add rsp, 0x38; ret; 
0x00000000107e77: sub rcx, fs:[0x28]; jne short 0x0000000000107e88; add rsp, 0x10; pop rbp; ret; 
0x00000000107f6c: sub rcx, fs:[0x28]; jne short 0x0000000000107f7c; add rsp, 0x38; ret; 
0x00000000107fc7: sub rcx, fs:[0x28]; jne short 0x0000000000107fd7; add rsp, 0x18; ret; 
0x00000000109fac: sub rcx, fs:[0x28]; jne short 0x000000000010a000; add rsp, 0x130; pop rbp; ret; 
0x0000000010df7c: sub rcx, fs:[0x28]; jne short 0x000000000010dff4; add rsp, 0xa0; pop rbx; ret; 
0x0000000010e050: sub rcx, fs:[0x28]; jne short 0x000000000010e0cf; add rsp, 0xa0; pop rbx; ret; 
0x0000000010e342: sub rcx, fs:[0x28]; jne short 0x000000000010e393; add rsp, 0x68; ret; 
0x0000000010e3d1: sub rcx, fs:[0x28]; jne short 0x000000000010e423; add rsp, 0x18; ret; 
0x0000000010e489: sub rcx, fs:[0x28]; jne short 0x000000000010e4db; add rsp, 0x58; ret; 
0x0000000010e527: sub rcx, fs:[0x28]; jne short 0x000000000010e57b; add rsp, 0x58; ret; 
0x0000000010ea74: sub rcx, fs:[0x28]; jne short 0x000000000010ea8b; add rsp, 0x18; ret; 
0x0000000010f8f6: sub rcx, fs:[0x28]; jne short 0x000000000010f95b; add rsp, 0x38; ret; 
0x0000000010f996: sub rcx, fs:[0x28]; jne short 0x000000000010f9fb; add rsp, 0x38; ret; 
0x0000000010fa4b: sub rcx, fs:[0x28]; jne short 0x000000000010facb; add rsp, 0x38; ret; 
0x0000000010fb1b: sub rcx, fs:[0x28]; jne short 0x000000000010fb9b; add rsp, 0x38; ret; 
0x0000000011075a: sub rcx, fs:[0x28]; jne short 0x0000000000110777; add rsp, 0x58; ret; 
0x000000001107ce: sub rcx, fs:[0x28]; jne short 0x00000000001107de; add rsp, 0x28; ret; 
0x000000001108a6: sub rcx, fs:[0x28]; jne short 0x00000000001108ed; add rsp, 0x68; ret; 
0x00000000111a64: sub rcx, fs:[0x28]; jne short 0x0000000000111a74; add rsp, 0x38; ret; 
0x00000000111ae7: sub rcx, fs:[0x28]; jne short 0x0000000000111af7; add rsp, 0x38; ret; 
0x00000000111b5b: sub rcx, fs:[0x28]; jne short 0x0000000000111b6b; add rsp, 0x38; ret; 
0x00000000111bc6: sub rcx, fs:[0x28]; jne short 0x0000000000111bd6; add rsp, 0x38; ret; 
0x00000000114600: sub rcx, fs:[0x28]; jne short 0x0000000000114610; add rsp, 0x18; ret; 
0x00000000119ace: sub rcx, fs:[0x28]; jne short 0x0000000000119af3; add rsp, 0x58; ret; 
0x0000000011ac45: sub rcx, fs:[0x28]; jne short 0x000000000011ac55; add rsp, 0x18; ret; 
0x0000000011af44: sub rcx, fs:[0x28]; jne short 0x000000000011af5f; add rsp, 0xa0; pop rbx; ret; 
0x0000000011b1ca: sub rcx, fs:[0x28]; jne short 0x000000000011b223; add rsp, 0x58; ret; 
0x00000000127b24: sub rcx, fs:[0x28]; jne short 0x0000000000127b3c; add rsp, 0xd8; ret; 
0x00000000127e08: sub rcx, fs:[0x28]; jne short 0x0000000000127e1b; add rsp, 0xd8; ret; 
0x00000000128e28: sub rcx, fs:[0x28]; jne short 0x0000000000128e3b; add rsp, 0xd8; ret; 
0x00000000129398: sub rcx, fs:[0x28]; jne short 0x00000000001293ab; add rsp, 0xd8; ret; 
0x00000000129478: sub rcx, fs:[0x28]; jne short 0x000000000012948b; add rsp, 0xd8; ret; 
0x00000000129558: sub rcx, fs:[0x28]; jne short 0x000000000012956b; add rsp, 0xd8; ret; 
0x000000001310b3: sub rcx, fs:[0x28]; jne short 0x00000000001310c3; add rsp, 0x38; ret; 
0x00000000131120: sub rcx, fs:[0x28]; jne short 0x0000000000131130; add rsp, 0x28; ret; 
0x000000001376c2: sub rcx, fs:[0x28]; jne short 0x00000000001376e4; add rsp, 0x20; pop rbp; ret; 
0x00000000138f60: sub rcx, fs:[0x28]; jne short 0x0000000000138f85; add rsp, 0x20; pop rbx; ret; 
0x00000000138fb5: sub rcx, fs:[0x28]; jne short 0x0000000000138fc5; add rsp, 0x18; ret; 
0x00000000139008: sub rcx, fs:[0x28]; jne short 0x0000000000139018; add rsp, 0x28; ret; 
0x00000000143d28: sub rcx, fs:[0x28]; jne short 0x0000000000143d73; add rsp, 0x10; pop rbx; ret; 
0x0000000014b83c: sub rcx, fs:[0x28]; jne short 0x000000000014b8ba; add rsp, 0x10; pop r12; ret; 
0x0000000014bab3: sub rcx, fs:[0x28]; jne short 0x000000000014bb2a; add rsp, 0x30; pop rbx; ret; 
0x0000000014bbf3: sub rcx, fs:[0x28]; jne short 0x000000000014bc6a; add rsp, 0x30; pop rbx; ret; 
0x0000000014d63c: sub rcx, fs:[0x28]; jne short 0x000000000014d64c; add rsp, 0x78; ret; 
0x0000000014f938: sub rcx, fs:[0x28]; jne short 0x000000000014f983; add rsp, 0x10; pop rbx; ret; 
0x0000000014f9c8: sub rcx, fs:[0x28]; jne short 0x000000000014fa12; add rsp, 0x10; pop rbx; ret; 
0x0000000014fa91: sub rcx, fs:[0x28]; jne short 0x000000000014fafb; add rsp, 0x10; pop rbp; ret; 
0x0000000014fef8: sub rcx, fs:[0x28]; jne short 0x000000000014ff44; add rsp, 0x10; pop rbx; ret; 
0x0000000014ff88: sub rcx, fs:[0x28]; jne short 0x000000000014ffd3; add rsp, 0x10; pop rbx; ret; 
0x00000000150138: sub rcx, fs:[0x28]; jne short 0x0000000000150189; add rsp, 0x10; pop rbx; ret; 
0x000000001501c8: sub rcx, fs:[0x28]; jne short 0x0000000000150213; add rsp, 0x10; pop rbx; ret; 
0x00000000150f28: sub rcx, fs:[0x28]; jne short 0x0000000000150f75; add rsp, 0x10; pop rbx; ret; 
0x00000000150fb8: sub rcx, fs:[0x28]; jne short 0x0000000000151005; add rsp, 0x10; pop rbx; ret; 
0x00000000151048: sub rcx, fs:[0x28]; jne short 0x0000000000151095; add rsp, 0x10; pop rbx; ret; 
0x000000001510d8: sub rcx, fs:[0x28]; jne short 0x0000000000151125; add rsp, 0x10; pop rbx; ret; 
0x00000000156af0: sub rcx, fs:[0x28]; jne short 0x0000000000156b2c; add rsp, 0x10; pop rbp; ret; 
0x00000000156b80: sub rcx, fs:[0x28]; jne short 0x0000000000156bbc; add rsp, 0x10; pop rbp; ret; 
0x0000000015991a: sub rcx, fs:[0x28]; jne short 0x000000000015995e; add rsp, 0x58; ret; 
0x00000000159a12: sub rcx, fs:[0x28]; jne short 0x0000000000159a64; add rsp, 0x68; ret; 
0x00000000159bab: sub rcx, fs:[0x28]; jne short 0x0000000000159c14; add rsp, 0x68; ret; 
0x00000000159be1: sub rcx, fs:[0x28]; jne short 0x0000000000159c14; mov rax, [rax+0x18]; add rsp, 0x68; jmp rax; 
0x00000000159c82: sub rcx, fs:[0x28]; jne short 0x0000000000159ce1; add rsp, 0x38; ret; 
0x0000000008f058: sub rcx, rax; lea eax, [rcx-0x1]; ret; 
0x00000000084718: sub rcx, rax; sar rcx, 0x2; lea eax, [rcx-0x1]; ret; 
0x000000001071d3: sub rcx, rdi; add ecx, 0x150; shr ecx, 0x3; rep stosq [rdi]; ret; 
0x000000000879e9: sub rcx, rdx; cmp rax, rcx; jbe 0x0000000000087b80; mov rdi, rbx; call qword ptr [r13+0x60]; 
0x00000000089359: sub rcx, rdx; cmp rax, rcx; jbe 0x00000000000894e0; mov rdi, rbx; call qword ptr [r13+0x60]; 
0x0000000008c409: sub rcx, rdx; cmp rax, rcx; jbe 0x000000000008c500; mov rdi, rbx; call qword ptr [r12+0x88]; 
0x0000000008eb42: sub rcx, rdx; cmp rax, rcx; jbe 0x000000000008ec18; mov rdi, rbx; call qword ptr [r13+0x60]; 
0x0000000007ed48: sub rcx, rdx; cmp rax, rcx; jbe short 0x000000000007eda8; mov rdi, rbx; call qword ptr [rbp+0x60]; 
0x000000000817e9: sub rcx, rdx; cmp rax, rcx; jbe short 0x0000000000081864; mov rdi, rbx; call qword ptr [rbp+0x68]; 
0x00000000083ae8: sub rcx, rdx; cmp rax, rcx; jbe short 0x0000000000083b28; mov rdi, rbx; call qword ptr [rbp+0x20]; 
0x0000000008462d: sub rcx, rdx; cmp rax, rcx; jbe short 0x0000000000084660; mov rdi, rbx; call qword ptr [rbp+0x30]; 
0x0000000008a4f9: sub rcx, rdx; cmp rax, rcx; jbe short 0x000000000008a520; call qword ptr [rbx+0x60]; 
0x0000000008c569: sub rcx, rdx; cmp rax, rcx; jbe short 0x000000000008c5a8; mov rdi, rbp; call qword ptr [rbx+0x88]; 
0x0000000008e432: sub rcx, rdx; cmp rax, rcx; jbe short 0x000000000008e4a0; mov rdi, rbx; call qword ptr [rbp+0x68]; 
0x0000000008e4e8: sub rcx, rdx; cmp rax, rcx; jbe short 0x000000000008e518; mov rdi, rbx; call qword ptr [rbp+0x20]; 
0x0000000008ef68: sub rcx, rdx; cmp rax, rcx; jbe short 0x000000000008efa0; mov rdi, rbx; call qword ptr [rbp+0x30]; 
0x00000000143e9e: sub rcx, rsi; mov [rdx+0x58], rdi; mov [rdx+0x68], rcx; ret; 
0x000000000cb34b: sub rdi, 0x10; add rax, rdi; ret; 
0x00000000162822: sub rdi, 0x20; lea r11, [rip+0x55163]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000015fe42: sub rdi, 0x20; lea r11, [rip+0x57983]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162731: sub rdi, 0x40; lea r11, [rip+0x55254]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162671: sub rdi, 0x40; lea r11, [rip+0x55313]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000015fd51: sub rdi, 0x40; lea r11, [rip+0x57a74]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000015fc91: sub rdi, 0x40; lea r11, [rip+0x57b33]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000059a2b: sub rdi, [0x28]; jne short 0x0000000000059a72; add rsp, 0x38; ret; 
0x000000000cc1cb: sub rdi, [0x28]; jne short 0x00000000000cc1e9; add rsp, 0x28; ret; 
0x000000000fd489: sub rdi, [0x28]; jne short 0x00000000000fd4e6; add rsp, 0x38; ret; 
0x00000000059a2a: sub rdi, fs:[0x28]; jne short 0x0000000000059a72; add rsp, 0x38; ret; 
0x000000000cc1ca: sub rdi, fs:[0x28]; jne short 0x00000000000cc1e9; add rsp, 0x28; ret; 
0x000000000fd488: sub rdi, fs:[0x28]; jne short 0x00000000000fd4e6; add rsp, 0x38; ret; 
0x0000000008aa08: sub rdi, rcx; cmp rax, rdi; jbe short 0x000000000008aa30; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x0000000016959e: sub rdi, rdx; lea r11, [rip+0x4eaa8]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166a6a: sub rdi, rdx; lea r11, [rip+0x510dc]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000a89c3: sub rdx, 0x10; add rdx, rax; jl short 0x00000000000a89e0; lea rax, [rdi+rax+0x30]; ret; 
0x00000000140fa0: sub rdx, 0x1; jne short 0x0000000000140f28; ret; 
0x000000000a89a3: sub rdx, 0x20; add rdx, rax; jl short 0x00000000000a89e0; lea rax, [rdi+rax+0x20]; ret; 
0x000000000a8983: sub rdx, 0x30; add rdx, rax; jl short 0x00000000000a89e0; lea rax, [rdi+rax+0x10]; ret; 
0x000000000a8973: sub rdx, 0x40; add rdx, rax; jl short 0x00000000000a89e0; add rax, rdi; ret; 
0x00000000164e60: sub rdx, 0x40; lea r11, [rip+0x52b25]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000164f44: sub rdx, 0x80; movsxd r9, [r11+r9*4]; add r9, r11; notrack jmp r9; 
0x000000000992b5: sub rdx, 0x8; and eax, 0x1; cmovne rax, rdx; ret; 
0x00000000052297: sub rdx, [0x28]; jne short 0x00000000000522a9; add rsp, 0xd8; ret; 
0x0000000005ffce: sub rdx, [0x28]; jne short 0x000000000005ffe0; add rsp, 0xd8; ret; 
0x0000000006097b: sub rdx, [0x28]; jne short 0x000000000006098e; add rsp, 0x1010; pop rbp; ret; 
0x00000000060f1f: sub rdx, [0x28]; jne short 0x0000000000060f37; add rsp, 0x18; ret; 
0x000000000cc245: sub rdx, [0x28]; jne short 0x00000000000cc255; add rsp, 0x40; pop rbp; ret; 
0x000000000d6534: sub rdx, [0x28]; jne short 0x00000000000d6543; add rsp, 0x18; ret; 
0x000000000d8df4: sub rdx, [0x28]; jne short 0x00000000000d8e03; add rsp, 0x18; ret; 
0x00000000107cc3: sub rdx, [0x28]; jne short 0x0000000000107ce1; add rsp, 0x28; ret; 
0x0000000010801a: sub rdx, [0x28]; jne short 0x0000000000108029; add rsp, 0x18; ret; 
0x0000000010a83b: sub rdx, [0x28]; jne short 0x000000000010a84d; movzx eax, al; add rsp, 0x58; ret; 
0x0000000010fc16: sub rdx, [0x28]; jne short 0x000000000010fc25; add rsp, 0x28; ret; 
0x00000000127c2b: sub rdx, [0x28]; jne short 0x0000000000127c45; add rsp, 0xd8; ret; 
0x00000000127d41: sub rdx, [0x28]; jne short 0x0000000000127d53; add rsp, 0xd8; ret; 
0x00000000128c4b: sub rdx, [0x28]; jne short 0x0000000000128c65; add rsp, 0xd8; ret; 
0x00000000128d61: sub rdx, [0x28]; jne short 0x0000000000128d73; add rsp, 0xd8; ret; 
0x00000000131017: sub rdx, [0x28]; jne short 0x0000000000131049; add rsp, 0x38; ret; 
0x000000001517af: sub rdx, [0x28]; jne short 0x00000000001517c2; add rsp, 0x90; pop rbx; ret; 
0x00000000151823: sub rdx, [0x28]; jne short 0x0000000000151835; movzx eax, al; add rsp, 0x18; ret; 
0x00000000151884: sub rdx, [0x28]; jne short 0x0000000000151896; movzx eax, al; add rsp, 0x18; ret; 
0x000000001518f2: sub rdx, [0x28]; jne short 0x0000000000151902; add rsp, 0x10; pop rbx; ret; 
0x00000000151965: sub rdx, [0x28]; jne short 0x0000000000151975; add rsp, 0x10; pop rbx; ret; 
0x000000001567fa: sub rdx, [0x28]; jne short 0x0000000000156834; add rsp, 0x18; ret; 
0x0000000015a996: sub rdx, [0x28]; jne short 0x000000000015a9a5; add rsp, 0x28; ret; 
0x0000000015ce03: sub rdx, [0x28]; jne short 0x000000000015ce13; add rsp, 0x10; pop rbx; ret; 
0x0000000015ce89: sub rdx, [0x28]; jne short 0x000000000015ce99; add rsp, 0x10; pop rbx; ret; 
0x00000000052296: sub rdx, fs:[0x28]; jne short 0x00000000000522a9; add rsp, 0xd8; ret; 
0x0000000005ffcd: sub rdx, fs:[0x28]; jne short 0x000000000005ffe0; add rsp, 0xd8; ret; 
0x0000000006097a: sub rdx, fs:[0x28]; jne short 0x000000000006098e; add rsp, 0x1010; pop rbp; ret; 
0x00000000060f1e: sub rdx, fs:[0x28]; jne short 0x0000000000060f37; add rsp, 0x18; ret; 
0x000000000cc244: sub rdx, fs:[0x28]; jne short 0x00000000000cc255; add rsp, 0x40; pop rbp; ret; 
0x000000000d6533: sub rdx, fs:[0x28]; jne short 0x00000000000d6543; add rsp, 0x18; ret; 
0x000000000d8df3: sub rdx, fs:[0x28]; jne short 0x00000000000d8e03; add rsp, 0x18; ret; 
0x00000000107cc2: sub rdx, fs:[0x28]; jne short 0x0000000000107ce1; add rsp, 0x28; ret; 
0x00000000108019: sub rdx, fs:[0x28]; jne short 0x0000000000108029; add rsp, 0x18; ret; 
0x0000000010a839: sub rdx, fs:[0x28]; jne short 0x000000000010a84d; movzx eax, al; add rsp, 0x58; ret; 
0x0000000010fc15: sub rdx, fs:[0x28]; jne short 0x000000000010fc25; add rsp, 0x28; ret; 
0x00000000127c2a: sub rdx, fs:[0x28]; jne short 0x0000000000127c45; add rsp, 0xd8; ret; 
0x00000000127d40: sub rdx, fs:[0x28]; jne short 0x0000000000127d53; add rsp, 0xd8; ret; 
0x00000000128c4a: sub rdx, fs:[0x28]; jne short 0x0000000000128c65; add rsp, 0xd8; ret; 
0x00000000128d60: sub rdx, fs:[0x28]; jne short 0x0000000000128d73; add rsp, 0xd8; ret; 
0x00000000131016: sub rdx, fs:[0x28]; jne short 0x0000000000131049; add rsp, 0x38; ret; 
0x000000001517ae: sub rdx, fs:[0x28]; jne short 0x00000000001517c2; add rsp, 0x90; pop rbx; ret; 
0x00000000151822: sub rdx, fs:[0x28]; jne short 0x0000000000151835; movzx eax, al; add rsp, 0x18; ret; 
0x00000000151883: sub rdx, fs:[0x28]; jne short 0x0000000000151896; movzx eax, al; add rsp, 0x18; ret; 
0x000000001518f1: sub rdx, fs:[0x28]; jne short 0x0000000000151902; add rsp, 0x10; pop rbx; ret; 
0x00000000151964: sub rdx, fs:[0x28]; jne short 0x0000000000151975; add rsp, 0x10; pop rbx; ret; 
0x000000001567f9: sub rdx, fs:[0x28]; jne short 0x0000000000156834; add rsp, 0x18; ret; 
0x0000000015a995: sub rdx, fs:[0x28]; jne short 0x000000000015a9a5; add rsp, 0x28; ret; 
0x0000000015ce02: sub rdx, fs:[0x28]; jne short 0x000000000015ce13; add rsp, 0x10; pop rbx; ret; 
0x0000000015ce88: sub rdx, fs:[0x28]; jne short 0x000000000015ce99; add rsp, 0x10; pop rbx; ret; 
0x00000000084393: sub rdx, r14; cmp r13, rdx; jbe 0x0000000000084558; mov rdi, r15; call qword ptr [rax+0x20]; 
0x0000000008e82c: sub rdx, r14; cmp r13, rdx; jbe 0x000000000008ea90; mov rdi, rbx; call qword ptr [rax+0x20]; 
0x000000000a822c: sub rdx, rax; jbe 0x00000000000a84d0; add rax, rdi; add rax, rcx; ret; 
0x000000000ca12c: sub rdx, rax; jbe 0x00000000000ca3d0; add rax, rdi; add rax, rcx; ret; 
0x000000000a8493: sub rdx, rax; jbe short 0x00000000000a84d0; add rax, rdi; ret; 
0x000000000a84a3: sub rdx, rax; jbe short 0x00000000000a84d0; lea rax, [rdi+rax+0x10]; ret; 
0x000000000a84b3: sub rdx, rax; jbe short 0x00000000000a84d0; lea rax, [rdi+rax+0x20]; ret; 
0x000000000a84c3: sub rdx, rax; jbe short 0x00000000000a84d0; lea rax, [rdi+rax+0x30]; ret; 
0x000000000ca393: sub rdx, rax; jbe short 0x00000000000ca3d0; add rax, rdi; ret; 
0x000000000ca3a3: sub rdx, rax; jbe short 0x00000000000ca3d0; lea rax, [rdi+rax+0x10]; ret; 
0x000000000ca3b3: sub rdx, rax; jbe short 0x00000000000ca3d0; lea rax, [rdi+rax+0x20]; ret; 
0x000000000ca3c3: sub rdx, rax; jbe short 0x00000000000ca3d0; lea rax, [rdi+rax+0x30]; ret; 
0x000000000b6d5b: sub rdx, rcx; lea r11, [rip+0xf251f]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b63cb: sub rdx, rcx; lea r11, [rip+0xf2e2f]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b4e4b: sub rdx, rcx; lea r11, [rip+0xf425b]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b46fb: sub rdx, rcx; lea r11, [rip+0xf491f]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b377b: sub rdx, rcx; lea r11, [rip+0xf574b]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b30bb: sub rdx, rcx; lea r11, [rip+0xf5d83]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000085383: sub rdx, rsi; call qword ptr [rax+0x70]; 
0x0000000008d139: sub rdx, rsi; call qword ptr [rbp+0x70]; 
0x00000000085b9a: sub rdx, rsi; mov [rsp+0x8], rcx; mov rdi, r15; call rax; 
0x0000000008afeb: sub rdx, rsi; mov [rsp], rcx; mov rdi, rbp; call rax; 
0x000000001449f8: sub rdx, rsi; mov rbp, rdx; call qword ptr [rbx+0x10]; 
0x00000000053710: sub rsi, 0x1; jne short 0x00000000000536f8; mov eax, 0x1; ret; 
0x00000000053938: sub rsi, 0x1; jne short 0x0000000000053920; mov eax, 0x1; ret; 
0x00000000041f3a: sub rsi, [0x28]; jne short 0x0000000000041f4c; add rsp, 0x98; ret; 
0x00000000129270: sub rsi, [0x28]; jne short 0x0000000000129285; add rsp, 0x28; ret; 
0x000000001292d0: sub rsi, [0x28]; jne short 0x00000000001292e5; add rsp, 0x28; ret; 
0x00000000139898: sub rsi, [0x28]; jne short 0x00000000001398a7; add rsp, 0x18; ret; 
0x0000000015a271: sub rsi, [0x28]; jne short 0x000000000015a285; add rsp, 0x28; ret; 
0x00000000041f39: sub rsi, fs:[0x28]; jne short 0x0000000000041f4c; add rsp, 0x98; ret; 
0x0000000012926f: sub rsi, fs:[0x28]; jne short 0x0000000000129285; add rsp, 0x28; ret; 
0x000000001292cf: sub rsi, fs:[0x28]; jne short 0x00000000001292e5; add rsp, 0x28; ret; 
0x00000000139897: sub rsi, fs:[0x28]; jne short 0x00000000001398a7; add rsp, 0x18; ret; 
0x0000000015a270: sub rsi, fs:[0x28]; jne short 0x000000000015a285; add rsp, 0x28; ret; 
0x0000000005ceef: sub rsi, rax; mov rax, [rip+0x18c3e7]; mov rcx, r14; call qword ptr [rax+r8*8]; 
0x0000000008bca8: sub rsi, rcx; mov [rsp], r8; mov edx, 0x1; mov rdi, rbp; call qword ptr [rax+0x80]; 
0x0000000004648d: sub rsi, rdi; syscall; 
0x00000000169240: sub rsi, rdx; lea r11, [rip+0x4ee06]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001690c0: sub rsi, rdx; lea r11, [rip+0x4ef86]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168f40: sub rsi, rdx; lea r11, [rip+0x4f106]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168dc0: sub rsi, rdx; lea r11, [rip+0x4f286]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168c40: sub rsi, rdx; lea r11, [rip+0x4f406]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168ac0: sub rsi, rdx; lea r11, [rip+0x4f586]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168940: sub rsi, rdx; lea r11, [rip+0x4f706]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001687c0: sub rsi, rdx; lea r11, [rip+0x4f886]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168640: sub rsi, rdx; lea r11, [rip+0x4fa06]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001684c0: sub rsi, rdx; lea r11, [rip+0x4fb86]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168340: sub rsi, rdx; lea r11, [rip+0x4fd06]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001681c0: sub rsi, rdx; lea r11, [rip+0x4fe86]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168040: sub rsi, rdx; lea r11, [rip+0x50006]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000167ec0: sub rsi, rdx; lea r11, [rip+0x50186]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000167d40: sub rsi, rdx; lea r11, [rip+0x50306]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000167bc7: sub rsi, rdx; lea r11, [rip+0x5047f]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166740: sub rsi, rdx; lea r11, [rip+0x51406]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001665c0: sub rsi, rdx; lea r11, [rip+0x51586]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166440: sub rsi, rdx; lea r11, [rip+0x51706]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001662c0: sub rsi, rdx; lea r11, [rip+0x51886]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166140: sub rsi, rdx; lea r11, [rip+0x51a06]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165fc0: sub rsi, rdx; lea r11, [rip+0x51b86]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165e40: sub rsi, rdx; lea r11, [rip+0x51d06]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165cc0: sub rsi, rdx; lea r11, [rip+0x51e86]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165b40: sub rsi, rdx; lea r11, [rip+0x52006]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001659c0: sub rsi, rdx; lea r11, [rip+0x52186]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165840: sub rsi, rdx; lea r11, [rip+0x52306]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001656c0: sub rsi, rdx; lea r11, [rip+0x52486]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165540: sub rsi, rdx; lea r11, [rip+0x52606]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001653c0: sub rsi, rdx; lea r11, [rip+0x52786]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165240: sub rsi, rdx; lea r11, [rip+0x52906]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001650c7: sub rsi, rdx; lea r11, [rip+0x52a7f]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000008cea7: sub rsi, rdx; mov rdi, rbx; mov edx, 0x1; call qword ptr [r14+0x80]; 
0x00000000052f91: sub rsp, 0x18; mov rsi, rsp; mov edi, 0x3001; mov eax, 0x9e; syscall; 
0x00000000052f92: sub rsp, 0x18; mov rsi, rsp; mov edi, 0x3001; mov eax, 0x9e; syscall; 
0x0000000015936a: sub rsp, 0x28; mov r13, [rip+0x89a43]; mov [rsp+0x8], rcx; lea rdi, [r13+0x988]; call qword ptr [r13+0xf88]; 
0x00000000119016: sub rsp, 0x8; call rsi; 
0x000000001597bb: sub rsp, 0x8; push qword ptr [rax]; mov rax, [rip+0x89670]; mov rdi, [rdi]; call qword ptr [rax+0x278]; 
0x0000000014b977: sub rsp, 0xffffffffffffff80; mov eax, r8d; pop rbp; ret; 
0x00000000108647: sub rsp, 0xffffffffffffff80; pop rbp; pop r12; pop r13; ret; 
0x00000000040897: subps xmm0, xmm1; ret; 
0x00000000040896: subsd xmm0, xmm1; ret; 
0x00000000040bfa: subss xmm0, xmm1; ret; 
0x0000000019201f: syscall; 
0x00000000026858: syscall; 
0x000000000b55af: test [rax*1+0x66c30000], ecx; nop [rax+rax]; mov rax, rdi; ret; 
0x00000000086d97: test [rax+0x1000000], ecx; add [rax], al; add [rax-0x77], cl; push 0xffffffffa5058b48; call qword ptr [rdx]; 
0x000000000912c7: test [rax+0x1f0fffff], ecx; add [rax], r8b; xor eax, eax; ret; 
0x00000000038d2a: test [rax+0x200], bh; ret; 
0x00000000183f43: test [rax+0x2], ebx; add [rax], al; vzeroupper; ret; 
0x00000000184c53: test [rax+0x2], edi; add [rax], al; vzeroupper; ret; 
0x0000000009ace3: test [rax+0x48000000], ch; mov esi, ebp; mov rdi, r12; call rax; 
0x0000000014b6cb: test [rax+0x48000000], dl; mov eax, [rdi+0x8]; lea rdx, [rsp+0xc]; mov esi, 0xd; call qword ptr [rax+0x28]; 
0x00000000108a26: test [rax+0x48000000], ebp; add esp, 0x68; pop rbp; pop r12; ret; 
0x0000000014fb42: test [rax+0x48000000], ebx; add esp, 0x28; pop rbx; pop rbp; ret; 
0x0000000010d726: test [rax+0x48000000], ebx; add esp, 0x40; pop r12; ret; 
0x000000001850bb: test [rax+0x48fffffc], ah; mov eax, edi; vzeroupper; ret; 
0x0000000009b84c: test [rax+0x48fffffe], esp; mov eax, [rip+0x1476d8]; call qword ptr [rax]; 
0x000000000b3e1b: test [rax+0x4], edx; add [rax], al; ret; 
0x000000001824bb: test [rax+0x4c000000], esp; mov eax, eax; vzeroupper; ret; 
0x00000000107ab4: test [rax+0x4cfffffe], ebx; mov esi, esp; lea rdi, [rip+0xa695c]; mov rdx, [rax+0xb0]; call qword ptr [rax+0x88]; 
0x00000000176173: test [rax+0x6], ebp; add [rax], al; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x000000000b536b: test [rax+0x7], edx; add [rax], al; ret; 
0x000000000b526b: test [rax+0x8], edx; add [rax], al; ret; 
0x00000000187c6e: test [rax+0xf000009], eax; mov dh, 0x47; dec dword ptr [rdi]; mov dh, 0x56; jmp far fword ptr [rcx]; 
0x0000000002e073: test [rax+rax*4], ah; add [rax], al; add [rax+0x39], cl; ret; 
0x0000000018a7bf: test [rax+rax+0x40a80000], edi; jne 0x000000000018a890; lea rax, [rdi+0x7]; ret; 
0x0000000017e177: test [rax+rax-0x3fcf0000], edx; vzeroupper; ret; 
0x000000000dc900: test [rax+rax-0x7cb80000], ebp; ret; 
0x000000000cb5af: test [rax+rax-0xf580000], ebp; jne 0x00000000000cb650; lea rax, [rdi-0x10]; ret; 
0x0000000011a948: test [rax+rax], cl; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011f957: test [rax+rax], cl; syscall; 
0x0000000011a8eb: test [rax+rax], ecx; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011a89c: test [rax+rax], ecx; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000011f793: test [rax+rax], ecx; syscall; 
0x0000000015a497: test [rax+rax], edi; add [rax-0x75], cl; and al, 0x10; mov rdi, [rsp+0x18]; call rcx; 
0x00000000096177: test [rax+rax], edi; add [rbx+0x14da1d2d], al; add [rcx], al; pop rbp; ret; 
0x0000000010747d: test [rax+rbp*8], ah; add [rax], al; add [rax+0xe], bh; syscall; 
0x00000000108163: test [rax+rbx*4], ah; add [rax], eax; add [rcx], dh; shl bh, 0xc2; jmp rsi; 
0x0000000017b9f8: test [rax+rbx-0x76b30000], al; ret far; 
0x00000000148d65: test [rax+rcx*8], ah; add [rax], eax; add bl, ch; mov eax, 0xfe09dee8; jmp qword ptr [rsi+0x66]; 
0x0000000007536b: test [rax+rdx*8], ah; add [rax], al; add cl, ch; xor dh, 0xff; jmp qword ptr [rsi+0x2e]; 
0x000000000f38e3: test [rax+rsi*2], ah; add [rax], eax; add [rax+0x9], cl; ret far; 
0x000000000689b4: test [rax-0x16000005], edx; ret; 
0x0000000004c28e: test [rax-0x46fffff3], ecx; add [rax], al; add [rax+0x63], cl; ret; 
0x000000000e48bb: test [rax-0x7cfffffd], dh; call far fword ptr [rbp+0xf]; 
0x0000000017662b: test [rax-0x7fffffff], esi; cmp [rcx], al; sbb rax, 0xffffffffffffffff; ret; 
0x0000000004187a: test [rax], ah; add [rax], al; add [rdi], cl; sub [rsp+0xf0], eax; syscall; 
0x00000000142bea: test [rax], ah; add [rax], eax; add al, ch; ret far; 
0x0000000016d95c: test [rax], al; adc al, [rax]; add [rbp-0x77], cl; ret far; 
0x000000000cbafa: test [rax], al; add [rax], al; add [rax], al; add rax, 0x3; ret; 
0x00000000097bfa: test [rax], al; add [rax], al; add [rax], al; add rsp, 0x18; ret; 
0x00000000191baa: test [rax], al; add [rax], al; add [rax], al; call qword ptr [rbx]; 
0x000000001274ea: test [rax], al; add [rax], al; add [rax], al; endbr64; ret; 
0x0000000018a84a: test [rax], al; add [rax], al; add [rax], al; lea rax, [rdi+0x2]; ret; 
0x0000000018a85a: test [rax], al; add [rax], al; add [rax], al; lea rax, [rdi+0x3]; ret; 
0x0000000018a86a: test [rax], al; add [rax], al; add [rax], al; lea rax, [rdi+0x4]; ret; 
0x0000000018a87a: test [rax], al; add [rax], al; add [rax], al; lea rax, [rdi+0x5]; ret; 
0x0000000018a88a: test [rax], al; add [rax], al; add [rax], al; lea rax, [rdi+0x6]; ret; 
0x0000000018a89a: test [rax], al; add [rax], al; add [rax], al; lea rax, [rdi+0x8]; ret; 
0x0000000018a8aa: test [rax], al; add [rax], al; add [rax], al; lea rax, [rdi+0x9]; ret; 
0x0000000018a8ba: test [rax], al; add [rax], al; add [rax], al; lea rax, [rdi+0xa]; ret; 
0x0000000018a8ca: test [rax], al; add [rax], al; add [rax], al; lea rax, [rdi+0xb]; ret; 
0x0000000018a8da: test [rax], al; add [rax], al; add [rax], al; lea rax, [rdi+0xc]; ret; 
0x0000000018a8ea: test [rax], al; add [rax], al; add [rax], al; lea rax, [rdi+0xd]; ret; 
0x0000000018a8fa: test [rax], al; add [rax], al; add [rax], al; lea rax, [rdi+0xe]; ret; 
0x000000000cb66a: test [rax], al; add [rax], al; add [rax], al; lea rax, [rdi-0x4]; ret; 
0x000000000cb65a: test [rax], al; add [rax], al; add [rax], al; lea rax, [rdi-0x8]; ret; 
0x000000000cb64a: test [rax], al; add [rax], al; add [rax], al; lea rax, [rdi-0xc]; ret; 
0x0000000003737a: test [rax], al; add [rax], al; add [rax], al; lea rax, [rip+0x176e5b]; ret; 
0x0000000014338a: test [rax], al; add [rax], al; add [rax], al; lea rdx, [rip+0x9f7a9]; jmp qword ptr [rdx+rax*8]; 
0x0000000017222a: test [rax], al; add [rax], al; add [rax], al; mov [rcx], edx; ret; 
0x0000000017226a: test [rax], al; add [rax], al; add [rax], al; mov [rcx], rdx; ret; 
0x000000000b419a: test [rax], al; add [rax], al; add [rax], al; mov [rdi-0x1], rdx; ret; 
0x000000000b314a: test [rax], al; add [rax], al; add [rax], al; mov [rdi], dh; ret; 
0x000000000b41aa: test [rax], al; add [rax], al; add [rax], al; mov [rdi], rdx; ret; 
0x00000000142f7a: test [rax], al; add [rax], al; add [rax], al; mov dword ptr [rsi], 0x8; ret; 
0x00000000142f6a: test [rax], al; add [rax], al; add [rax], al; mov dword ptr [rsi], 0xa; ret; 
0x00000000142f5a: test [rax], al; add [rax], al; add [rax], al; mov dword ptr [rsi], 0xb; ret; 
0x0000000010887a: test [rax], al; add [rax], al; add [rax], al; mov eax, 0x10c; syscall; 
0x0000000009b8ca: test [rax], al; add [rax], al; add [rax], al; mov eax, 0x1; ret; 
0x000000000edeca: test [rax], al; add [rax], al; add [rax], al; mov eax, 0xc; ret; 
0x000000000425fa: test [rax], al; add [rax], al; add [rax], al; mov eax, 0xffffffff; ret; 
0x000000000deb3a: test [rax], al; add [rax], al; add [rax], al; mov eax, edx; syscall; 
0x000000000cbb2a: test [rax], al; add [rax], al; add [rax], al; mov rax, 0x2; ret; 
0x000000000cbb3a: test [rax], al; add [rax], al; add [rax], al; mov rax, 0x3; ret; 
0x000000000cbb4a: test [rax], al; add [rax], al; add [rax], al; mov rax, 0x4; ret; 
0x000000000cbb5a: test [rax], al; add [rax], al; add [rax], al; mov rax, 0x5; ret; 
0x000000000cbb6a: test [rax], al; add [rax], al; add [rax], al; mov rax, 0x6; ret; 
0x000000000cbb7a: test [rax], al; add [rax], al; add [rax], al; mov rax, 0x7; ret; 
0x00000000150e8a: test [rax], al; add [rax], al; add [rax], al; mov rax, [rdi+0x8]; jmp qword ptr [rax+0x48]; 
0x0000000009b67a: test [rax], al; add [rax], al; add [rax], al; mov rax, [rip+0x1478a9]; call qword ptr [rax]; 
0x0000000003738a: test [rax], al; add [rax], al; add [rax], al; mov rax, [rsi+rax*8+0x80]; ret; 
0x000000001289fa: test [rax], al; add [rax], al; add [rax], al; mov rax, r8; ret; 
0x000000000b55ba: test [rax], al; add [rax], al; add [rax], al; mov rax, rdi; ret; 
0x0000000007bf5a: test [rax], al; add [rax], al; add [rax], al; mov rbx, rsi; jmp rcx; 
0x0000000009b83a: test [rax], al; add [rax], al; add [rax], al; mov rdi, rbp; call rax; 
0x00000000099a1a: test [rax], al; add [rax], al; add [rax], al; mov rsi, r12; call rax; 
0x000000000b421a: test [rax], al; add [rax], al; add [rax], al; movdqu [rdi-0x1], xmm0; ret; 
0x000000000b422a: test [rax], al; add [rax], al; add [rax], al; movdqu [rdi], xmm0; ret; 
0x000000000b3e26: test [rax], al; add [rax], al; add [rax], al; nop [rax]; ret; 
0x0000000003868a: test [rax], al; add [rax], al; add [rax], al; ret; 
0x0000000018369a: test [rax], al; add [rax], al; add [rax], al; vzeroupper; ret; 
0x0000000004494a: test [rax], al; add [rax], al; add [rax], al; xor eax, eax; ret; 
0x000000000cb67a: test [rax], al; add [rax], al; add [rax], al; xor rax, rax; ret; 
0x0000000016e25c: test [rax], al; or [rax], eax; add [rbp-0x77], cl; ret far; 
0x0000000016d05c: test [rax], al; sbb eax, [rax]; add [rbp-0x77], cl; ret far; 
0x00000000143994: test [rax], ch; add [rax], eax; add [rcx+rcx*4-0x19], cl; call qword ptr [rbx]; 
0x000000001116b3: test [rax], ch; add al, [rax]; add [rax-0x3d7cb7fe], cl; add [rax-0x7d], ecx; ret; 
0x000000001036eb: test [rax], cl; add [rax], eax; add [rbx-0x6af0fd05], al; ret; 
0x00000000105dbb: test [rax], cl; add al, 0x0; add [rcx-0x80], al; jmp qword ptr [rdx]; 
0x000000000ac70c: test [rax], dh; adc [rax], al; add [rbp-0x77], cl; ret far; 
0x000000000772fa: test [rax], eax; add [rax], al; add [rax+0x29], cl; ret; 
0x000000000ef514: test [rax], eax; add [rax], al; add [rax-0x77], cl; fucomip st, st(0); jmp far fword ptr [rbp-0xd]; 
0x0000000010848c: test [rax], eax; add [rax], al; syscall; 
0x00000000064ce9: test [rax], ebx; and al, 0x0; add [rbx-0x5a76b], cl; inc dword ptr [rbx-0x78f0d006]; ret far; 
0x00000000102d31: test [rax], ebx; idiv edi; jmp qword ptr [rax+rcx*2-0x75]; 
0x00000000063e83: test [rax], edi; add eax, [rax]; add [rax-0x77], cl; fimul st, word ptr [rax-0x7d]; ret; 
0x000000001765cb: test [rax], edx; add al, [rax]; add [rax-0x7cb7fec8], al; fdivr st, st(7); ret; 
0x000000001362e3: test [rax], esp; add [rax], eax; add [rax+0x63], cl; ret; 
0x0000000009a57d: test [rbp+0x48000000], ebp; add esp, 0x10; mov eax, r12d; pop r12; ret; 
0x0000000009a6a0: test [rbp+0x48000000], ebp; add esp, 0x18; ret; 
0x00000000108ba1: test [rbp+0x48000000], edi; add esp, 0x78; ret; 
0x000000001470ce: test [rbp+0x48000001], ch; mov eax, [rbx+0xd0]; mov rsi, [rsp+0x18]; mov rdi, r12; call qword ptr [rax+0x8]; 
0x00000000172546: test [rbp+0x48fffffb], ah; mov eax, [rcx]; mov [rdx], rax; mov rax, rdi; ret; 
0x00000000114bc6: test [rbp+0x49000000], edx; mov edi, [rbp]; call rbx; 
0x000000001159c6: test [rbp+0x49000000], esi; mov edi, [rbp]; call rbx; 
0x0000000009aec6: test [rbp+0x4c000000], ah; mov edi, ebp; mov rdx, rbp; mov rsi, r12; call rax; 
0x0000000009aa7e: test [rbp+0x4c000000], ch; mov esi, esp; mov rdi, rbp; call rax; 
0x00000000186e5e: test [rbp+0x4c000000], ebx; mov eax, eax; shr rax, 0x2; vzeroupper; ret; 
0x0000000017c528: test [rbp+rcx], dl; add [rbp-0x77], cl; ret far; 
0x000000001249ce: test [rbp-0x17ffffff], bh; or [rbx-0xf], cl; dec dword ptr [rax-0x7d]; ret; 
0x00000000046d4e: test [rbp-0x7cffffff], cl; jmp qword ptr [rdi+rcx]; 
0x0000000010168b: test [rbp-0x7d000000], ch; call far fword ptr [rbx-0x7c9d8c]; 
0x000000000caf40: test [rbx+0x1], ecx; add [rax], al; ret; 
0x000000000cb4e8: test [rbx+0x1], esp; add [rax], al; lea rax, [rdi-0x10]; ret; 
0x00000000172148: test [rbx+0x2], eax; add [rax], al; ret; 
0x00000000172128: test [rbx+0x2], esp; add [rax], al; ret; 
0x00000000172040: test [rbx+0x3], ecx; add [rax], al; ret; 
0x0000000014d0d0: test [rbx+0x48000000], bl; add eax, 0xa0; pop rbx; ret; 
0x0000000014d1a0: test [rbx+0x48000000], bl; add eax, 0xa8; pop rbx; ret; 
0x0000000014d000: test [rbx+0x48000000], bl; sub eax, 0xffffff80; pop rbx; ret; 
0x0000000014cf30: test [rbx+0x5b000000], bl; ret; 
0x000000000b5460: test [rbx+0x6], ebx; add [rax], al; ret; 
0x00000000187ea7: test [rbx+0x7], edx; add [rax], al; xor eax, eax; ret; 
0x000000001764d7: test [rbx+rax], eax; add [rax], al; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x000000001882f6: test [rbx+rax], eax; add [rax], al; xor eax, eax; ret; 
0x00000000176477: test [rbx+rax], esp; add [rax-0x7cb7fec8], al; fdivr st, st(7); ret; 
0x00000000051d0b: test [rbx+rbp*4], ah; add [rax], al; add [rcx-0x7d], cl; ret; 
0x0000000004b01f: test [rbx+rcx], bl; add [rax-0x80], al; jmp far fword ptr [rbx]; 
0x00000000056d5f: test [rbx+rcx], ch; add [rax-0x80], al; jmp far fword ptr [rbx]; 
0x0000000017c708: test [rbx+rcx], dh; add [rbp-0x77], cl; ret far; 
0x000000000e2405: test [rbx+rdi*8-0x1], ecx; call qword ptr [rax]; 
0x0000000009b148: test [rbx-0x4], cl; jmp qword ptr [rbx+rcx*4+0x4]; 
0x000000000787f4: test [rbx], ebx; idiv edi; jmp qword ptr [rax]; 
0x000000001091a7: test [rcx+0x48000000], ebx; add esp, 0x68; ret; 
0x00000000050327: test [rcx+0x48000000], ecx; add esp, 0x10; pop rbx; ret; 
0x000000001092e8: test [rcx+0x48000000], esi; add esp, 0x30; pop rbx; ret; 
0x000000000fbb5f: test [rcx+0x48000005], ebp; add esp, 0x68; pop rbx; pop rbp; ret; 
0x00000000171e4a: test [rcx+0x5], eax; add [rax], al; ret; 
0x00000000187e7d: test [rcx+0x7], esi; add [rax], al; xor eax, eax; ret; 
0x000000000b3a02: test [rcx+0x8], ebp; add [rax], al; ret; 
0x00000000187d8d: test [rcx+0x8], esp; add [rax], al; xor eax, eax; ret; 
0x00000000187c9d: test [rcx+0x9], edx; add [rax], al; xor eax, eax; ret; 
0x000000000fb85e: test [rcx+rax+0x18e80000], ecx; out 0xfd, eax; jmp qword ptr [rsp+rax*2-0x77]; 
0x000000001055fd: test [rcx+rax-0x20], cl; notrack jmp rax; 
0x0000000009b6d7: test [rcx+rax], ah; add [rax-0x75], cl; jg short 0x000000000009b728; mov rsi, rbp; call rax; 
0x000000000adc9f: test [rcx+rax], ch; add [rax], al; bsr rsi, rsi; lea rax, [rdi+rsi]; ret; 
0x000000000caf87: test [rcx+rax], eax; add [rax], al; ret; 
0x0000000018c567: test [rcx+rax], edx; add [rax], al; ret; 
0x000000000caf57: test [rcx+rax], esi; add [rax], al; ret; 
0x0000000017c8e8: test [rcx+rcx-0x76b30000], dl; ret far; 
0x0000000004db6f: test [rcx+rcx], cl; add [rax-0x80], al; jmp far fword ptr [rbx]; 
0x000000001721ea: test [rcx-0x3cffffff], esp; ret; 
0x0000000015f496: test [rcx], bh; add al, 0x0; add [rbp-0x77], cl; ret far; 
0x00000000178ad6: test [rcx], bh; or al, 0x0; add [rbp-0x77], cl; ret far; 
0x0000000014300a: test [rcx], bl; add al, [rax]; add [rax+0x5d5bc031], dl; pop r12; ret; 
0x00000000112bf3: test [rcx], bl; add al, [rax]; add bh, dh; ret; 
0x0000000015e7a6: test [rcx], ch; adc [rax], eax; add [rbp-0x77], cl; ret far; 
0x000000001789e6: test [rcx], ch; or eax, 0x894d0000; ret far; 
0x0000000015e4c6: test [rcx], cl; adc al, 0x0; add [rbp-0x77], cl; ret far; 
0x000000000e3fda: test [rcx], cl; add al, [rax]; add [rax-0x7d], cl; ret; 
0x00000000096f59: test [rcx], dl; add al, ch; out dx, eax; mov ah, 0xff; jmp qword ptr [rsi+0x66]; 
0x0000000009a36c: test [rdi+0x1], ch; add [rax], al; mov rdx, r13; mov rdi, r12; call rax; 
0x0000000014bd5e: test [rdi+0x48000000], ebx; add esp, 0x48; pop rbx; pop rbp; ret; 
0x000000000c65ed: test [rdi+0x48000000], ebx; add esp, 0x8; pop rbx; pop rbp; ret; 
0x00000000138cc0: test [rdi+0x48000000], ecx; add esp, 0x58; pop rbx; pop rbp; ret; 
0x00000000141eec: test [rdi+0x48000000], esp; add esp, 0x68; pop rbx; pop rbp; ret; 
0x00000000149e34: test [rdi+0x48000001], dl; mov eax, [rbx+0x70]; mov rsi, [rsp+0x18]; mov rdi, r12; call qword ptr [rax+0x8]; 
0x000000000f59f4: test [rdi+0x48000017], dl; lea esi, [rip+0xb55b4]; movsxd rax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x00000000160047: test [rdi+0x5], esi; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000009b93f: test [rdi+0x5bfff8c6], esi; pop rbp; pop r12; ret; 
0x0000000017cac8: test [rdi+rax-0x76b30000], dh; ret far; 
0x000000000b3b67: test [rdi+rax], eax; add [rax], al; ret; 
0x000000000b3b47: test [rdi+rax], esp; add [rax], al; ret; 
0x00000000032913: test [rdi+rdi*8-0x1], al; dec dword ptr [rcx-0x73]; add cl, [rax+0x39]; ret far; 
0x000000000eacb4: test [rdi+rdi*8-0x1], dh; inc ebx; nop [rax+rax]; ret; 
0x00000000035399: test [rdi+rdi*8-0x1], ebp; jmp qword ptr [rsi-0x70]; 
0x00000000137ed0: test [rdi+rdi*8-0x1], edx; inc dword ptr [rax]; add [rax], al; add dh, al; ret; 
0x000000000f062d: test [rdi+rdi*8-0x1], esi; jmp qword ptr [rsi+0x48]; 
0x0000000002f3b6: test [rdi+rdi*8-0x1], esp; dec dword ptr [rcx+0x39]; ret; 
0x000000000f1887: test [rdi+rdi*8-0x1], esp; jmp far fword ptr [rax+0x65840f08]; 
0x0000000005a9ac: test [rdi+rdi*8-0x1], esp; jmp qword ptr [rsi]; 
0x00000000101682: test [rdi-0x7d000000], ch; call far fword ptr [rdi+rcx+0xad84]; 
0x000000000e2d7c: test [rdi-0x800000d], edi; test [rbx+rdi*8-0x1], ecx; call qword ptr [rax]; 
0x000000000b3ae8: test [rdi], al; add [rax], al; ret; 
0x0000000006ef8b: test [rdi], al; sub [rax], al; add [rax-0x7d], cl; ret; 
0x000000000ed794: test [rdi], bl; add al, [rax]; add [rax-0x7d], cl; ret; 
0x000000000a2c1b: test [rdi], cl; sbb al, [rax]; add bh, dh; ret; 
0x00000000184021: test [rdx+0x1], edi; add [rax], al; vzeroupper; ret; 
0x00000000176599: test [rdx+0x2], eax; add [rax], al; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x00000000176569: test [rdx+0x2], esi; add [rax], al; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x000000000cb731: test [rdx+0x48000000], bl; bsf eax, edx; shr rax, 0x2; ret; 
0x00000000114b91: test [rdx+0x49000000], ecx; mov edi, [rbp]; call rbx; 
0x00000000184a89: test [rdx+0x4], eax; add [rax], al; vzeroupper; ret; 
0x000000000b3d01: test [rdx+0x5], ebp; add [rax], al; ret; 
0x00000000097601: test [rdx+0x5b000001], edi; mov rax, r8; pop rbp; pop r12; ret; 
0x000000000b5149: test [rdx+0x9], esi; add [rax], al; ret; 
0x000000000fa31f: test [rdx+rax], dl; add [rbx+0x634c01c3], al; ret; 
0x000000001891f2: test [rdx+rax], edi; add [rax], al; xor eax, eax; ret; 
0x0000000017b818: test [rdx+rbx], ah; add [rbp-0x77], cl; ret far; 
0x00000000187bc2: test [rdx+rcx], ebp; add [rax], al; xor eax, eax; ret; 
0x00000000142bb9: test [rdx+rdx*4], ah; add [rax], eax; add [rax-0x75], cl; and al, 0x30; call rax; 
0x00000000176b49: test [rdx-0x1600000a], esp; in eax, dx; idiv edi; jmp qword ptr [rsi+0x66]; 
0x00000000176451: test [rdx-0x7ffffffd], ecx; cmp [rcx], al; sbb rax, 0xffffffffffffffff; ret; 
0x00000000176429: test [rdx-0x7ffffffd], esi; cmp [rcx], al; sbb rax, 0xffffffffffffffff; ret; 
0x00000000176539: test [rdx-0x7ffffffe], esp; cmp [rcx], al; sbb rax, 0xffffffffffffffff; ret; 
0x00000000032982: test [rdx], al; add [rax], eax; add [rcx-0x73], cl; add cl, [rax+0x39]; ret far; 
0x000000000e1f18: test [rdx], dh; adc al, 0x0; add [rax-0x77], cl; ret far; 
0x000000000b9a93: test [rdx], dl; add [rax+0x39], cl; ret; 
0x000000000baa2b: test [rdx], dl; add [rbp+0x31], al; jmp qword ptr [rdi+rax*8]; 
0x00000000172107: test [rdx], eax; add [rax], al; ret; 
0x0000000003a909: test [rdx], ebx; add [rbx-0xd373], cl; jmp qword ptr [rcx+rcx*4+0x8]; 
0x00000000055601: test [rdx], ecx; add al, [rax]; add [rcx-0x73], cl; or [r8+0x39], r9b; ret; 
0x000000001764a9: test [rdx], esi; add eax, [rax]; add [rax-0x7cb7fec8], al; fdivr st, st(7); ret; 
0x000000000858b6: test [rdx], esp; cli; jmp qword ptr [rsi+0xf]; 
0x000000000e03fa: test [rip+0x48000005], ebx; add esp, 0xb8; pop rbx; pop rbp; ret; 
0x000000001904d6: test [rip+0x48ffffff], eax; add esp, 0x38; ret; 
0x00000000147866: test [rip+0x49000001], ah; mov eax, [rbp+0xd0]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x00000000114b5e: test [rip+0x49000001], ebx; mov edi, [rbp]; call rbx; 
0x0000000010a96b: test [rip+0x64d8f700], cl; mov [rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010a878: test [rip+0x64d8f700], ecx; mov [rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010a9f7: test [rip+0x64d8f700], r9b; mov [rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000a8a9e: test [rip+0xfffffff], bh; mov ebp, 0xf80148c0; add rax, rsi; ret; 
0x0000000017e4fe: test [rip-0x3affffff], ebp; std; xlat [rbx]; ret; 
0x00000000048300: test [rip-0x7fc00000], edx; jmp qword ptr [rbp+0xf]; 
0x0000000018bef2: test [rsi+0x1], ebp; add [rax], al; xor eax, eax; ret; 
0x00000000184d55: test [rsi+0x1], esi; add [rax], al; vzeroupper; ret; 
0x0000000014b608: test [rsi+0x290f0006], dh; and al, 0x20; call qword ptr [rax+0x28]; 
0x0000000017dfbd: test [rsi+0x29fffffe], ebx; enter 0xf8c5, 0x77; ret; 
0x00000000051a3b: test [rsi+0x31000004], eax; shr cl, 0xfd; idiv edi; jmp qword ptr [rsi+0xf]; 
0x000000000ae0ed: test [rsi+0x48000000], bl; bsf eax, edx; ret; 
0x00000000094d6d: test [rsi+0x48000000], dl; mov eax, [rip+0x14e017]; mov [rsp+0x8], r8; xor edi, edi; call qword ptr [rax]; 
0x000000000cb58d: test [rsi+0x48000000], edi; lea eax, [rdi-0x10]; ret; 
0x0000000014a8b3: test [rsi+0x5], dl; add [rax], al; mov rax, [rbx+0x60]; mov rdi, r15; call qword ptr [rax+0x20]; 
0x000000000a888d: test [rsi+0x66000000], ebp; pmovmskb eax, mm1; bsr eax, eax; add rax, rdi; ret; 
0x000000000b3b25: test [rsi+0x7], eax; add [rax], al; ret; 
0x000000000b3b05: test [rsi+0x7], esp; add [rax], al; ret; 
0x000000000b3a1d: test [rsi+0x8], ecx; add [rax], al; ret; 
0x000000000de111: test [rsi+rdi*8+0x3d80ffff], bh; ret far; 
0x000000000ec011: test [rsi+rdi*8-0x1], cl; jmp far fword ptr [rax+0x410a7508]; 
0x0000000017bbc8: test [rsi+rdx-0x76b30000], dh; ret far; 
0x0000000007fe68: test [rsi-0x74fffffe], cl; adc [rax-0x77], ecx; ret far; 
0x00000000101699: test [rsi-0x7d000000], ah; call far fword ptr [rcx+0xa4840f]; 
0x0000000018091e: test [rsi], ch; adc al, [rax]; add [rbp-0x77], cl; ret far; 
0x0000000018061e: test [rsi], ch; adc eax, 0x894d0000; ret far; 
0x0000000018181e: test [rsi], ch; add eax, [rax]; add [rbp-0x77], cl; ret far; 
0x0000000018121e: test [rsi], ch; or [rax], eax; add [rbp-0x77], cl; ret far; 
0x00000000180f1e: test [rsi], ch; or al, 0x0; add [rbp-0x77], cl; ret far; 
0x000000000c719b: test [rsi], cl; add al, ch; lodsd [rsi]; sbb bh, dh; jmp qword ptr [rsi+0x2e]; 
0x000000001484a0: test [rsi], edi; add [rax], al; add rsp, 0x20; pop rbx; ret; 
0x00000000034027: test [rsi], edx; sbb eax, [rax]; ret; 
0x000000001880c8: test [rsi], esp; add eax, 0xc0310000; ret; 
0x000000000f3f51: test [rsp+rax*2], ah; add [rax], eax; add [rcx], bh; ret; 
0x0000000017b638: test [rsp+rbx], al; add [rbp-0x77], cl; ret far; 
0x0000000011bde8: test [rsp+rcx+0x480c7300], bh; mov edx, [rip+0xcbc83]; add word ptr [rdx+rax*2], 0x1; ret; 
0x0000000004823f: test [rsp+rcx], cl; add [rax-0x80], al; jmp far fword ptr [rbx]; 
0x000000000f45d9: test [rsp+rdi], ah; add [rax], eax; add [rcx], bh; ret; 
0x0000000018a816: test ah, 0x40; jne 0x000000000018a900; lea rax, [rdi+0xf]; ret; 
0x0000000017bf88: test ah, dh; adc al, [rax]; add [rbp-0x77], cl; ret far; 
0x0000000017ce88: test ah, dh; add eax, [rax]; add [rbp-0x77], cl; ret far; 
0x0000000017bda8: test ah, dl; adc al, 0x0; add [rbp-0x77], cl; ret far; 
0x000000000f0626: test ah, dl; add [rax], al; add [rax+0x63], cl; test [rdi+rdi*8-0x1], esi; jmp qword ptr [rsi+0x48]; 
0x0000000017cca8: test ah, dl; add eax, 0x894d0000; ret far; 
0x000000001470c0: test al, 0x0; add [rax], al; bswap ebp; mov ebp, ebp; call qword ptr [rax+0x18]; 
0x00000000146f83: test al, 0x0; add [rax], al; mov eax, 0x1; ret; 
0x0000000009ace4: test al, 0x0; add [rax], al; mov rsi, rbp; mov rdi, r12; call rax; 
0x000000000da638: test al, 0x0; add [rax], al; pop rbp; pop r12; ret; 
0x0000000014d1a7: test al, 0x0; add [rax], al; pop rbx; ret; 
0x000000000373b4: test al, 0x0; add [rax], al; ret; 
0x000000001105f5: test al, 0x0; add [rax], al; syscall; 
0x00000000068643: test al, 0x17; add [rbx-0x5ff7b], cl; jmp qword ptr [rcx+rcx*4+0x2]; 
0x0000000003b124: test al, 0x1a; add [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x0000000014175f: test al, 0x22; add [rax], al; add [rax-0x77], ecx; out dx, eax; call qword ptr [rax+0x18]; 
0x000000000b6dd8: test al, 0x24; str [rcx+0x63]; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000596fc: test al, 0x3; add [rax], al; mov rsp, rdx; ret; 
0x0000000018a7c4: test al, 0x40; jne 0x000000000018a890; lea rax, [rdi+0x7]; ret; 
0x000000001151b0: test al, 0x45; mov edi, ebp; call rax; 
0x000000000b4778: test al, 0x48; str [rcx+0x63]; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000009d254: test al, 0x50; or al, 0x0; lea rdx, [rip+0xca741]; cmovne rax, rdx; ret; 
0x00000000127564: test al, 0x83; add eax, [rax]; lea rdx, [rip+0x3d931]; cmovne rax, rdx; ret; 
0x000000000eacde: test al, 0x83; jrcxz 0x00000000000eacea; je short 0x00000000000eac67; pop rbx; ret; 
0x000000000d9f9c: test al, 0x8e; adc [rax], al; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000008ef1e: test al, 0x90; endbr64; mov rax, 0xffffffffffffffff; ret; 
0x000000001085a8: test al, 0xd; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x00000000108564: test al, 0xd; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x2]; mov eax, 0xffffffff; ret; 
0x000000001695a4: test al, 0xea; add al, 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000cb4e5: test al, 0xf0; jne 0x00000000000cb650; lea rax, [rdi-0x10]; ret; 
0x000000000cb5f8: test al, 0xf0; jne short 0x00000000000cb650; lea rax, [rdi-0x10]; ret; 
0x0000000013ee94: test al, 0xfe; jmp qword ptr [rsi+0xf]; 
0x000000000703a0: test al, 0xff; jmp qword ptr [rsi+0xf]; 
0x000000000ac95c: test al, ah; or eax, 0x894d0000; ret far; 
0x0000000016c99c: test al, al; and [rax], eax; add [rbp-0x77], cl; ret far; 
0x000000000974da: test al, al; jne short 0x00000000000974e9; mov dword ptr [rip+0x14f988], 0x0; ret; 
0x000000000a693a: test al, al; jne short 0x00000000000a6920; xor eax, eax; sub eax, ecx; ret; 
0x000000000e3b91: test al, al; jne short 0x00000000000e3b41; xor eax, eax; ret; 
0x000000001279c6: test al, al; jne short 0x0000000000127971; mov rax, r9; ret; 
0x00000000139e79: test al, al; jne short 0x0000000000139e63; mov eax, r10d; ret; 
0x0000000016d29c: test al, al; sbb [rax], al; add [rbp-0x77], cl; ret far; 
0x000000000abb7c: test al, al; sbb eax, [rax]; add [rbp-0x77], cl; ret far; 
0x000000000e5d23: test al, bh; add [rax], eax; add [rax-0x7d], cl; ret; 
0x0000000019001a: test al, bl; add [rax], al; add [rcx-0x77], cl; ret; 
0x000000000fa863: test al, bl; add eax, [rax]; add [rbp+0x634c0158], cl; ret far; 
0x00000000153864: test al, ch; out 0x5e, al; std; jmp qword ptr [rsi+0xf]; 
0x0000000013a9b3: test al, cl; add [rax], al; add [rcx-0x80], al; jmp qword ptr [rsi]; 
0x000000000f374b: test al, dh; add al, 0x0; add [rbx+0xf4801e2], al; ret; 
0x000000000ac26c: test al, dl; adc al, 0x0; add [rbp-0x77], cl; ret far; 
0x000000000f10b3: test al, dl; add al, [rax]; add [rax-0x7d], cl; ret; 
0x0000000007cd5e: test ax, ax; je short 0x000000000007cd70; lea rdx, [rip+0x12a9b6]; add rax, rdx; ret; 
0x0000000014eac1: test bh, 0x43; adc [rcx], al; add [rax], al; add [rcx+rcx*4-0x11], cl; call qword ptr [rax+0x28]; 
0x0000000007f1a3: test bh, al; add [rax], al; add [rax-0x77], cl; ret; 
0x0000000014059e: test bh, ch; jmp qword ptr [rsi+0x66]; 
0x000000000a2c27: test bh, ch; sbb [rax], eax; add bh, dh; ret; 
0x000000000ed864: test bh, dh; add [rax], al; add [rax-0x77], cl; fmul st, dword ptr [rax-0x7d]; ret; 
0x0000000013e3b8: test bl, bh; add [rax], al; add [rax-0x77], cl; ret; 
0x00000000161759: test byte ptr [r9-0x6f3c03a9], 0x66; mov edx, [rsi-0x2]; mov [rdi-0x2], dx; ret; 
0x0000000009d072: test byte ptr [rax+0x15c], 0x10; lea rax, [rip+0x1a660]; cmove rax, rdx; ret; 
0x00000000143ebd: test byte ptr [rax+0x1], 0xc6; cmp rsi, [rdx+0x28]; ja short 0x0000000000143eb0; mov [rdx+0x20], rsi; ret; 
0x000000000e04f2: test byte ptr [rax+0x63], 0x4; mov dl, 0x48; add eax, edx; notrack jmp rax; 
0x000000000b8ce2: test byte ptr [rax+0x95], 0x2; lea rax, [rip+0x124c0]; cmovne rax, rdx; ret; 
0x0000000009c862: test byte ptr [rax+0x96], 0x10; lea rax, [rip+0x1b470]; cmovne rax, rdx; ret; 
0x0000000009c732: test byte ptr [rax+0x96], 0x10; lea rax, [rip+0x1b4f0]; cmovne rax, rdx; ret; 
0x0000000009c2c2: test byte ptr [rax+0x96], 0x10; lea rax, [rip+0x1b8b0]; cmovne rax, rdx; ret; 
0x00000000107da2: test byte ptr [rax+0x96], 0x80; lea rax, [rip-0xc0]; cmove rax, rdx; ret; 
0x0000000011383c: test byte ptr [rax+rax], 0x64; mov dword ptr [rax], 0x16; mov rax, 0xffffffffffffffff; ret; 
0x000000000e9821: test byte ptr [rax-0x77], 0x4; and al, 0xe8; push rbp; ret far; 
0x0000000007fd29: test byte ptr [rax-0x77], 0xdf; call qword ptr [r15+0x38]; 
0x0000000008f506: test byte ptr [rax-0x77], 0xdf; call qword ptr [rax+0x58]; 
0x0000000012f3e2: test byte ptr [rax-0x77], 0xdf; call rax; 
0x00000000076454: test byte ptr [rax-0x77], 0xef; call qword ptr [r12+0x38]; 
0x000000000886b0: test byte ptr [rax-0x77], 0xef; call qword ptr [r13+0x10]; 
0x0000000014243a: test byte ptr [rax-0x77], 0xef; call qword ptr [rax+0x28]; 
0x0000000008b6bb: test byte ptr [rax-0x77], 0xef; call qword ptr [rax+0x40]; 
0x0000000007e7ca: test byte ptr [rax-0x77], 0xef; call qword ptr [rbx+0x10]; 
0x00000000075244: test byte ptr [rax-0x77], 0xef; call qword ptr [rbx+0x38]; 
0x00000000074c89: test byte ptr [rax-0x77], 0xef; call qword ptr [rcx+0x38]; 
0x00000000151531: test byte ptr [rax-0x77], 0xef; call r12; 
0x00000000107e22: test byte ptr [rax-0x77], 0xef; call rax; 
0x00000000141741: test byte ptr [rax-0x77], 0xef; mov dword ptr [rbx+0x18], 0x0; call qword ptr [rax+0x28]; 
0x000000001416c2: test byte ptr [rax-0x77], 0xef; mov dword ptr [rbx+0x18], 0x1; call qword ptr [rax+0x28]; 
0x00000000107e53: test byte ptr [rax-0x77], 0xef; mov eax, 0x135; syscall; 
0x000000000545d6: test byte ptr [rax-0x7d], 0xe9; add [rbx-0xd], esi; mov rax, rdx; ret; 
0x0000000003d919: test byte ptr [rax], 0x0; add [rax-0x7d], cl; ret; 
0x000000000d7bb0: test byte ptr [rbp+0x1b8db], 0x0; add [rdi], cl; ret; 
0x0000000017d34d: test byte ptr [rbp+0x48d674d2], 0x63; leave; add rax, rcx; sub rax, rdi; ret; 
0x00000000123404: test byte ptr [rbp+0xf], 0x44; ret far; 
0x00000000041526: test byte ptr [rbp-0x6bf0bf40], 0xc6; xor eax, eax; mov [rbx+0x40], esi; pop rbx; ret; 
0x0000000017d4a1: test byte ptr [rbp-0x7a958a2e], 0xf6; je short 0x000000000017d488; xor eax, eax; ret; 
0x00000000125a8e: test byte ptr [rbx+0x1c], 0x20; je short 0x0000000000125aa0; pop rbx; ret; 
0x0000000009b925: test byte ptr [rbx+0x50], 0x1; jne short 0x000000000009b900; mov rdi, rsi; call rax; 
0x00000000161736: test byte ptr [rbx-0x76b303aa], 0x5f; out dx, al; mov [rdi-0xa], rcx; mov [rdi-0x4], edx; ret; 
0x00000000161752: test byte ptr [rbx-0x76b703aa], 0x4f; test byte ptr [rcx-0x6f3c03a9], 0x66; mov edx, [rsi-0x2]; mov [rdi-0x2], dx; ret; 
0x000000001511b5: test byte ptr [rcx+0x14c2847], 0xc6; mov [rdi+0x18], rsi; mov rax, r8; ret; 
0x000000000f2ce8: test byte ptr [rcx+0x486c245c], 0x89; ret; 
0x0000000009d49b: test byte ptr [rcx+0x95], 0x2; lea rax, [rip+0x15857]; lea rdx, [rip+0xd5a10]; cmovne rax, rdx; ret; 
0x0000000009c27b: test byte ptr [rcx+0x95], 0x2; lea rax, [rip+0x16987]; lea rdx, [rip+0xd2900]; cmovne rax, rdx; ret; 
0x0000000009c14b: test byte ptr [rcx+0x95], 0x2; lea rax, [rip+0x19b27]; lea rdx, [rip+0x12110]; cmovne rax, rdx; ret; 
0x0000000009d4fb: test byte ptr [rcx+0x95], 0x2; lea rax, [rip+0x7c77]; lea rdx, [rip+0xd71c0]; cmovne rax, rdx; ret; 
0x0000000009c6ab: test byte ptr [rcx+0x95], 0x2; lea rax, [rip+0x8b37]; lea rdx, [rip+0xd3c80]; cmovne rax, rdx; ret; 
0x0000000009c5db: test byte ptr [rcx+0x95], 0x2; lea rax, [rip+0x8b47]; lea rdx, [rip+0x138a0]; cmovne rax, rdx; ret; 
0x0000000009c1fb: test byte ptr [rcx+0x95], 0x2; lea rax, [rip+0x9047]; lea rdx, [rip+0xc0d00]; cmovne rax, rdx; ret; 
0x0000000012981d: test byte ptr [rcx+0xff009f8], 0xc8; ret; 
0x0000000012bd9f: test byte ptr [rcx+rcx*4+0x35], 0x1; ret; 
0x0000000003a02a: test byte ptr [rcx+rcx*4+0x35], 0xde; mov eax, 0x49e8001a; ret; 
0x000000000903bd: test byte ptr [rcx+rcx*4-0x11], 0xe8; sub ah, [rdx-0x7]; dec dword ptr [rax-0x77]; ret; 
0x0000000014f7b5: test byte ptr [rcx+rcx*4-0x19], 0x41; call rbp; 
0x0000000005b57b: test byte ptr [rcx+rcx*4-0x19], 0x4c; mov [rbp-0xe8], eax; call rax; 
0x00000000078d0f: test byte ptr [rcx+rcx*4-0x1], 0x44; mov [rbp-0x938], ecx; mov [rbp-0x930], r11b; call rax; 
0x0000000013faae: test byte ptr [rcx+rcx*4-0x1], 0x48; mov [rsp+0x8], ecx; call rbp; 
0x00000000045187: test byte ptr [rcx+rcx*4-0x31], 0x41; call rax; 
0x0000000016175a: test byte ptr [rcx-0x6f3c03a9], 0x66; mov edx, [rsi-0x2]; mov [rdi-0x2], dx; ret; 
0x0000000008c0e6: test byte ptr [rcx], 0x0; add [rax-0x77], cl; out 0x48, al; mov edi, ebp; call qword ptr [r12+0x90]; 
0x0000000009b6d2: test byte ptr [rdi+0x50], 0x1; je 0x000000000009b840; mov rdi, [rdi+0x48]; mov rsi, rbp; call rax; 
0x00000000083e0f: test byte ptr [rdi], 0x2; jne short 0x0000000000083e88; mov rax, [rax+0xe0]; call qword ptr [rax+0x68]; 
0x000000000895f6: test byte ptr [rdi], 0x4; sete al; ret; 
0x000000000f8e72: test byte ptr [rdi], 0x84; ret; 
0x000000000e4a66: test byte ptr [rdi], 0x85; ret; 
0x00000000089606: test byte ptr [rdi], 0x8; sete al; ret; 
0x000000000eb87d: test byte ptr [rdx+0x63], 0x4; mov dl, 0x48; add eax, edx; notrack jmp rax; 
0x000000000ba400: test byte ptr [rdx+0x96], 0x8; lea rax, [rip+0x114a2]; lea rdx, [rip+0x1127b]; cmovne rax, rdx; ret; 
0x000000000eacfe: test byte ptr [rdx+0xc8], 0x40; jne 0x00000000000eac2d; ret; 
0x000000000eacac: test byte ptr [rdx+0xc8], 0x80; je 0x00000000000eac2d; ret; 
0x00000000113bc6: test byte ptr [rdx], 0x0; add [rax-0x73], cl; add eax, 0xd3c9f; add rsp, 0x8; ret; 
0x00000000056e1f: test ch, ah; adc al, 0x0; add [rax-0x80], al; jmp qword ptr [rbp+0xf]; 
0x00000000190119: test ch, bh; add [rax], al; add [rcx-0x77], cl; ret; 
0x0000000004dc2f: test ch, bl; adc eax, [rax]; add [rax-0x80], al; jmp qword ptr [rbp+0xf]; 
0x0000000003233c: test ch, bl; add al, [rax]; add [rax-0x73], cl; add cl, [rax+0x39]; ret; 
0x00000000032454: test ch, ch; add eax, [rax]; add [rax-0x73], cl; add cl, [rax+0x39]; ret; 
0x000000000e4a5c: test ch, dh; or [rax], eax; add [rbx-0x7ae3db8c], cl; test byte ptr [rdi], 0x85; ret; 
0x0000000017b49b: test cl, ah; sbb eax, 0x894d0000; ret far; 
0x00000000074fa2: test cl, al; or eax, 0x63490000; ret; 
0x00000000179616: test cl, bh; add [rax], al; add [rbp-0x77], cl; ret far; 
0x0000000015eed6: test cl, bh; or [rax], eax; add [rbp-0x77], cl; ret far; 
0x00000000179436: test cl, bl; add al, [rax]; add [rbp-0x77], cl; ret far; 
0x0000000015ebf6: test cl, bl; or al, 0x0; add [rbp-0x77], cl; ret far; 
0x000000000a6fa6: test cl, ch; adc [rax], eax; add [rbp-0x77], cl; ret far; 
0x000000000a6ca6: test cl, ch; adc al, 0x0; add [rbp-0x77], cl; ret far; 
0x00000000179526: test cl, ch; add [rax], eax; add [rbp-0x77], cl; ret far; 
0x000000000a7ea6: test cl, ch; add al, [rax]; add [rbp-0x77], cl; ret far; 
0x000000000a7ba6: test cl, ch; add eax, 0x894d0000; ret far; 
0x000000000a78a6: test cl, ch; or [rax], al; add [rbp-0x77], cl; ret far; 
0x000000000a75a6: test cl, ch; or eax, [rax]; add [rbp-0x77], cl; ret far; 
0x0000000015f606: test cl, cl; add al, [rax]; add [rbp-0x77], cl; ret far; 
0x00000000179346: test cl, cl; add eax, [rax]; add [rbp-0x77], cl; ret far; 
0x000000000a492c: test cl, cl; jne short 0x00000000000a4920; mov [rdi], rdx; ret; 
0x000000000b77cf: test cl, cl; jne short 0x00000000000b77c0; ret; 
0x000000000b787f: test cl, cl; jne short 0x00000000000b7870; ret; 
0x000000000b7b3f: test cl, cl; jne short 0x00000000000b7b30; sub rax, 0x1; ret; 
0x000000000a4b1d: test cl, dl; jne short 0x00000000000a4b00; mov rax, r8; ret; 
0x000000000a4c5c: test cl, dl; jne short 0x00000000000a4c40; mov rax, r8; ret; 
0x0000000007aa1a: test cl, dl; or eax, 0x63490000; ret; 
0x0000000009c16f: test dh, 0x1; je short 0x000000000009c13f; ret; 
0x0000000009c21f: test dh, 0x1; je short 0x000000000009c1ef; ret; 
0x0000000009c29f: test dh, 0x1; je short 0x000000000009c26f; ret; 
0x0000000009c5ff: test dh, 0x1; je short 0x000000000009c5cf; ret; 
0x0000000009c6cf: test dh, 0x1; je short 0x000000000009c69f; ret; 
0x0000000009d4bf: test dh, 0x1; je short 0x000000000009d48f; ret; 
0x0000000009d51f: test dh, 0x1; je short 0x000000000009d4ef; ret; 
0x0000000018a737: test dh, 0x40; jne 0x000000000018a670; lea rax, [rdi+0xf]; ret; 
0x0000000018a77d: test dh, 0x4; jne 0x000000000018a670; lea rax, [rdi+0xb]; ret; 
0x000000000adc05: test dh, al; add [rax], eax; add [rax+0xf], cl; mov ebp, 0xf80148c0; ret; 
0x0000000002ae24: test dh, bh; add [rax], eax; add [rax-0x7d], cl; ret; 
0x0000000014131b: test dh, bh; jmp qword ptr [rsi-0x70]; 
0x0000000002be29: test dh, dh; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x0000000018a6b4: test dl, 0x40; jne short 0x000000000018a670; lea rax, [rdi+0x7]; ret; 
0x0000000018a6e2: test dl, 0x4; jne short 0x000000000018a670; lea rax, [rdi+0x3]; ret; 
0x000000000fc451: test dl, al; add [rax], eax; add [rbx+rcx*4+0x63], cl; and [rax-0x7d], cl; ret; 
0x00000000134259: test dl, bl; add [rax], al; add [rcx-0xa], al; ret; 
0x0000000007f2a2: test dl, cl; add [rax], al; add [rax-0x77], cl; ret; 
0x0000000003f89b: test dl, dl; jne short 0x000000000003f878; ret; 
0x000000000b79ef: test dl, dl; jne short 0x00000000000b79e0; lea rax, [rcx-0x1]; ret; 
0x0000000009f654: test dl, dl; mov edx, 0x0; cmove rax, rdx; ret; 
0x00000000168947: test dword ptr [rax+rax], 0x93146349; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000007385a: test dword ptr [rax+rcx*4-0x73], 0xfffff70b; mov [rbp-0x900], r8b; call rax; 
0x000000001151ad: test dword ptr [rax-0x75], 0x8945a845; out dx, eax; call rax; 
0x00000000148c49: test dword ptr [rax-0x75], 0x8b490847; jo short 0x0000000000148c92; mov edx, [rsi+0x1c8]; add rsi, 0x38; jmp qword ptr [rax+0x18]; 
0x0000000006b8fe: test dword ptr [rax-0x75], 0xfffa8085; dec dword ptr [rbx-0x51f73]; jmp qword ptr [rcx+rcx*4+0x8]; 
0x000000001097a3: test dword ptr [rax-0x77], 0x73e82434; ret far; 
0x000000000e4251: test dword ptr [rax-0x77], 0x8948a875; mov r8b, 0xe8; shl dword ptr [rax], 0xf4; dec dword ptr [rax-0x77]; ret; 
0x0000000010853b: test dword ptr [rax-0x77], 0xca8948d6; cmp r9d, 0x1; ja short 0x0000000000108578; mov eax, 0x106; syscall; 
0x00000000113669: test dword ptr [rax-0x77], 0xca8948d6; mov r10, r8; mov r8, r9; mov r9, [rsp+0x8]; syscall; 
0x00000000108039: test dword ptr [rax-0x77], 0xf88341d6; add [rdi+0x2d], esi; mov eax, 0x4; syscall; 
0x000000001080f9: test dword ptr [rax-0x77], 0xf88341d6; add [rdi+0x2d], esi; mov eax, 0x6; syscall; 
0x00000000108098: test dword ptr [rax-0x77], 0xf88341d6; add [rdi+0x2e], esi; mov eax, 0x5; syscall; 
0x00000000111dca: test dword ptr [rax-0xf89fe06], 0xec74203c; mov byte ptr [rsi-0x1], 0x0; mov rax, r8; ret; 
0x000000000de6f7: test dword ptr [rax], 0x50f0000; cmp rax, 0xfffffffffffff000; ja short 0x00000000000de770; ret; 
0x000000000ed865: test dword ptr [rax], 0x89480000; fmul st, dword ptr [rax-0x7d]; ret; 
0x000000000a69f2: test dword ptr [rbp+rcx*4+0x48], 0xc929490f; lea r10, [rip+0x1022c7]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x000000000a52d2: test dword ptr [rbp+rcx*4+0x48], 0xc929490f; lea r10, [rip+0x103967]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000016c752: test dword ptr [rbp+rcx*4+0x48], 0xc929490f; lea r10, [rip+0x3c6a7]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000016a5d2: test dword ptr [rbp+rcx*4+0x48], 0xc929490f; lea r10, [rip+0x3e7a7]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000015e222: test dword ptr [rbp+rcx*4+0x48], 0xc929490f; lea r10, [rip+0x4aad7]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000015cf92: test dword ptr [rbp+rcx*4+0x48], 0xc929490f; lea r10, [rip+0x4bce7]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x000000000ab242: test dword ptr [rbp+rcx*4+0x48], 0xc929490f; lea r10, [rip+0xfdb77]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x000000000a8fd2: test dword ptr [rbp+rcx*4+0x48], 0xc929490f; lea r10, [rip+0xffd67]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000191d45: test dword ptr [rbp-0x17], 0x801f0fff; add [rax], al; add [rax], al; add rsp, 0x8; ret; 
0x0000000006bddc: test dword ptr [rbp-0x77], 0xa58b44e6; cmp dl, 0xff; jmp qword ptr [rbx+rcx*4]; 
0x00000000161573: test dword ptr [rbx-0x76b703aa], 0x5789f74f; cld; ret; 
0x00000000166e93: test dword ptr [rbx-0x76b703b2], 0x4f89f757; cld; ret; 
0x00000000108479: test dword ptr [rcx-0x3f7aba2a], 0x8b483775; adc [rcx-0x3dc6b730], ecx; jne short 0x00000000001084b8; mov eax, 0x85; syscall; 
0x000000000d0a5b: test dword ptr [rcx-0x77], 0x6948144f; rcl byte ptr [rbx-0x3e6db6dc], cl; call far fword ptr [rdi]; 
0x000000000faeaf: test dword ptr [rcx-0x77], 0xb488e8c4; call far fword ptr [rax+0x5a]; 
0x000000000fadad: test dword ptr [rcx-0x77], 0xb58ae8c4; call far fword ptr [rax+0x5a]; 
0x000000000983fc: test dword ptr [rcx], 0x20bd0000; add [rax], al; add [rax-0x7d], cl; jmp qword ptr [rax]; 
0x0000000011c49d: test dword ptr [rdi], 0x37c86; add [rax-0x7d], cl; ret; 
0x00000000163695: test dword ptr [rdx+0x5], 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000013d1ea: test eax, 0x1000ab9; pop rbp; ret; 
0x000000001201a2: test eax, 0x1000c7c; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x0000000007cd67: test eax, 0x1480012; rol bl, 0x1; xchg ax, ax; xor eax, eax; ret; 
0x000000000cb561: test eax, 0x1; je 0x00000000000cb4c5; lea rax, [rdi-0x10]; ret; 
0x000000000cb611: test eax, 0x1; je short 0x00000000000cb680; lea rax, [rdi-0x10]; ret; 
0x000000000eb792: test eax, 0x3ec80148; jmp rax; 
0x000000000fbb60: test eax, 0x48000005; add esp, 0x68; pop rbx; pop rbp; ret; 
0x000000000e0e87: test eax, 0x48000c96; movsxd eax, [rdx+rbp*4]; add rax, rdx; notrack jmp rax; 
0x000000001197a3: test eax, 0x48fff772; mov eax, [rsp+0x8]; add rsp, 0x30; pop rbp; ret; 
0x0000000018dd50: test eax, 0x63480002; sbb al, 0x99; add rcx, rbx; notrack jmp rcx; 
0x000000000d8f9b: test eax, 0x6400109e; mov dword ptr [rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000004259b: test eax, 0x64001a08; mov dword ptr [rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000097bf3: test eax, 0x66ffffab; nop [rax+rax]; add rsp, 0x18; ret; 
0x0000000005ed7a: test eax, 0x7e9000c; jl short 0x000000000005ed7d; jmp qword ptr [rsi+0x2e]; 
0x00000000040c24: test eax, 0x7fffff; je short 0x0000000000040c30; ret; 
0x0000000018dd04: test eax, 0x83480002; ret far; 
0x0000000009b9c1: test eax, 0x8b48fff8; add eax, 0x14747d; mov dword ptr fs:[rax], 0xc; xor eax, eax; ret; 
0x0000000009d402: test eax, 0x8d480001; add eax, 0x1aa74; cmove rax, rdx; ret; 
0x0000000003af95: test eax, 0xc148001a; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x000000001084bc: test eax, 0xc764000d; add [rsi], dl; add [rax], al; add [rax-0x1], bh; ret; 
0x000000001284a4: test eax, 0xd8f7000b; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x000000001084a4: test eax, 0xd8f7000d; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000011b1af: test eax, 0xf200e; jne short 0x000000000011b1e0; mov eax, 0x42; syscall; 
0x0000000011ad9b: test eax, 0xf7000c80; fsub st, dword ptr [rcx+rcx*4+0x2]; mov eax, 0xffffffff; ret; 
0x0000000011a89b: test eax, 0xf7000c85; fsub st, dword ptr [rcx+rcx*4+0x2]; mov rax, 0xffffffffffffffff; ret; 
0x00000000119b9b: test eax, 0xf7000c92; fsub st, dword ptr [rcx+rcx*4+0x2]; mov eax, 0xffffffff; ret; 
0x0000000011929b: test eax, 0xf7000c9b; fsub st, dword ptr [rcx+rcx*4+0x2]; mov rax, 0xffffffffffffffff; ret; 
0x0000000010e59b: test eax, 0xf7000d48; fsub st, dword ptr [rcx+rcx*4+0x2]; mov rax, 0xffffffffffffffff; ret; 
0x000000000ccd9b: test eax, 0xf7001160; fsub st, dword ptr [rcx+rcx*4+0x2]; mov rax, 0xffffffffffffffff; ret; 
0x000000000b7b58: test eax, 0xfffd3be9; jmp qword ptr [rsi-0x70]; 
0x00000000116e13: test eax, eax; cmove eax, edx; ret; 
0x00000000126ce5: test eax, eax; cmove rax, rdx; mov [rip+0xc11c6], rax; pop rbp; ret; 
0x00000000090c19: test eax, eax; cmovne eax, edx; ret; 
0x0000000010f15a: test eax, eax; cmovns eax, edx; ret; 
0x0000000004554d: test eax, eax; cmovs eax, edx; ret; 
0x00000000028fe0: test eax, eax; je 0x00000000000266e2; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000149093: test eax, eax; je 0x0000000000028387; mov rax, [rsp+0x58]; mov rdi, r12; call qword ptr [rax+0x20]; 
0x00000000099e55: test eax, eax; je 0x0000000000099f30; call rax; 
0x00000000099f8d: test eax, eax; je 0x000000000009a060; call rax; 
0x0000000009a369: test eax, eax; je 0x000000000009a4e0; mov rdx, r13; mov rdi, r12; call rax; 
0x0000000009aa7b: test eax, eax; je 0x000000000009ab30; mov rsi, r12; mov rdi, rbp; call rax; 
0x0000000009ace0: test eax, eax; je 0x000000000009ad90; mov rsi, rbp; mov rdi, r12; call rax; 
0x00000000116349: test eax, eax; je 0x0000000000116440; call rax; 
0x000000001423f5: test eax, eax; je 0x000000000014236f; mov rax, [rbp+0x8]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x00000000142b22: test eax, eax; je 0x00000000001429ae; mov rdi, rbx; call rax; 
0x00000000143991: test eax, eax; je 0x0000000000143ac1; mov rdi, r12; call qword ptr [rbx]; 
0x00000000147863: test eax, eax; je 0x0000000000147990; mov rax, [r13+0xd0]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x0000000014a32b: test eax, eax; je 0x000000000014a430; mov rax, [r14+0x70]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x0000000014a8b0: test eax, eax; je 0x000000000014ae0e; mov rax, [rbx+0x60]; mov rdi, r15; call qword ptr [rax+0x20]; 
0x0000000014cfb8: test eax, eax; je 0x000000000014cf35; mov fs:[rbx], rax; pop rbx; ret; 
0x000000001592c5: test eax, eax; je 0x0000000000159238; mov [rsp+0x8], eax; lea rdi, [r12+0x9b0]; call qword ptr [r12+0xf90]; 
0x0000000002bb8e: test eax, eax; je short 0x000000000002bb98; ret; 
0x00000000035652: test eax, eax; je short 0x0000000000035658; call rax; 
0x000000000358d3: test eax, eax; je short 0x00000000000358d9; call rax; 
0x000000000369fd: test eax, eax; je short 0x0000000000036a03; call rax; 
0x00000000061038: test eax, eax; je short 0x0000000000061080; mov eax, 0x13c; syscall; 
0x0000000007cd5f: test eax, eax; je short 0x000000000007cd70; lea rdx, [rip+0x12a9b6]; add rax, rdx; ret; 
0x0000000007f399: test eax, eax; je short 0x000000000007f3a6; mov rdi, [rdi+0xe0]; jmp rax; 
0x0000000007f3d2: test eax, eax; je short 0x000000000007f3e7; mov rbp, rdx; mov rdi, [rdi+0xe0]; call rax; 
0x0000000007f422: test eax, eax; je short 0x000000000007f448; mov rdi, [rdi+0xe0]; lea rsi, [rsp+0x8]; call rax; 
0x0000000007f479: test eax, eax; je short 0x000000000007f490; mov rdi, [rdi+0xe0]; jmp rax; 
0x0000000008aac1: test eax, eax; je short 0x000000000008aad0; pop rbx; ret; 
0x0000000008edb9: test eax, eax; je short 0x000000000008edcc; mov qword ptr [rax], 0x0; mov qword ptr [rax+0x8], 0x0; ret; 
0x00000000090d98: test eax, eax; je short 0x0000000000090da0; xor eax, eax; pop rbx; ret; 
0x00000000091f2a: test eax, eax; je short 0x0000000000091f30; call rax; 
0x00000000091fa3: test eax, eax; je short 0x0000000000091fa9; call rax; 
0x00000000091fe3: test eax, eax; je short 0x0000000000091fe9; call rax; 
0x0000000009664d: test eax, eax; je short 0x0000000000096653; call rax; 
0x0000000009a199: test eax, eax; je short 0x000000000009a200; mov rsi, r12; mov rdi, rbp; call rax; 
0x000000000a8a0a: test eax, eax; je short 0x00000000000a89e0; bsr eax, eax; add rax, rdi; ret; 
0x000000000ad9e3: test eax, eax; je short 0x00000000000ad9f0; bsf eax, eax; lea rax, [rdi+rax]; ret; 
0x000000000d8e9f: test eax, eax; je short 0x00000000000d8ed0; call rax; 
0x000000000d8f0f: test eax, eax; je short 0x00000000000d8f40; call rax; 
0x00000000107eb0: test eax, eax; je short 0x0000000000107ee8; xor edx, edx; call rax; 
0x0000000010fbb0: test eax, eax; je short 0x000000000010fbb5; ret; 
0x00000000111cd5: test eax, eax; je short 0x0000000000111cdc; mov [rax], rdx; ret; 
0x0000000011616a: test eax, eax; je short 0x00000000001161d0; call rax; 
0x00000000125a7f: test eax, eax; je short 0x0000000000125ab0; mov rdi, [rdx+0x50]; mov rsi, rdx; call rax; 
0x00000000126d65: test eax, eax; je short 0x0000000000126d95; lea rsi, [rbp-0x20]; lea rdi, [rip-0x184]; call rax; 
0x0000000012859e: test eax, eax; je short 0x00000000001285b0; add rsp, 0x8; ret; 
0x000000001326ed: test eax, eax; je short 0x00000000001326f6; mov rdi, rbx; call rax; 
0x00000000132a0d: test eax, eax; je short 0x0000000000132a16; mov rdi, rbx; call rax; 
0x00000000132ad5: test eax, eax; je short 0x0000000000132ae2; lea rdi, [rip+0xb5a40]; call rax; 
0x0000000013baee: test eax, eax; je short 0x000000000013baf8; ret; 
0x0000000013c974: test eax, eax; je short 0x000000000013c980; add rsp, 0x8; ret; 
0x00000000141424: test eax, eax; je short 0x000000000014142d; mov rdi, rbp; call rax; 
0x000000001418bb: test eax, eax; je short 0x00000000001418c4; mov rdi, rbp; call rax; 
0x0000000014189e: test eax, eax; je short 0x0000000000141910; mov rax, [rbx+0x20]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x00000000141bda: test eax, eax; je short 0x0000000000141be0; ret; 
0x000000001423d8: test eax, eax; je short 0x000000000014236f; mov rax, [rbp+0x8]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x00000000142898: test eax, eax; je short 0x000000000014283f; mov rax, [rsp+0xc8]; mov rdi, rbx; call qword ptr [rax+0x20]; 
0x000000001428ba: test eax, eax; je short 0x00000000001428c3; mov rdi, rbx; call rax; 
0x00000000142c10: test eax, eax; je short 0x0000000000142c19; mov rdi, rbx; call rax; 
0x00000000142e35: test eax, eax; je short 0x0000000000142e40; xor eax, eax; ret; 
0x00000000143438: test eax, eax; je short 0x0000000000143441; mov rdi, r13; call rax; 
0x000000001437b7: test eax, eax; je short 0x00000000001437d8; mov rax, [rbx+0x23b8]; mov rdi, r12; call qword ptr [rax+0x20]; 
0x00000000146e45: test eax, eax; je short 0x0000000000146e52; lea rdi, [rbp+0xc8]; call rax; 
0x0000000014788b: test eax, eax; je short 0x0000000000147894; mov rdi, rbp; call rax; 
0x00000000147a70: test eax, eax; je short 0x0000000000147a7b; lea rdi, [r12+0x10]; call rax; 
0x00000000148d2f: test eax, eax; je short 0x0000000000148d38; mov rdi, rbp; call rax; 
0x00000000148f04: test eax, eax; je short 0x0000000000148f0d; mov rdi, r13; call rax; 
0x00000000149c22: test eax, eax; je short 0x0000000000149c2c; lea rdi, [rbp+0x68]; call rax; 
0x0000000014a34a: test eax, eax; je short 0x000000000014a353; mov rdi, rbp; call rax; 
0x0000000014a6c2: test eax, eax; je short 0x000000000014a6cc; lea rdi, [rbp+0x58]; call rax; 
0x0000000014b053: test eax, eax; je short 0x000000000014b0d0; mov rax, [r15+0x60]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x0000000014b308: test eax, eax; je short 0x000000000014b380; mov rax, [rbp+0x60]; mov rdi, r13; call qword ptr [rax+0x20]; 
0x0000000014c333: test eax, eax; je short 0x000000000014c345; mov rax, [r8+0x38]; mov rdi, r8; call qword ptr [rax+0x20]; 
0x0000000014cf00: test eax, eax; je short 0x000000000014ce85; mov fs:[rbx], rax; pop rbx; ret; 
0x0000000014ce81: test eax, eax; je short 0x000000000014ce90; pop rbx; ret; 
0x0000000014df90: test eax, eax; je short 0x000000000014df9b; lea rdi, [r12+0x10]; call rax; 
0x0000000014e6d9: test eax, eax; je short 0x000000000014e6e4; lea rdi, [r12+0x10]; call rax; 
0x0000000014e756: test eax, eax; je short 0x000000000014e790; mov rax, [rbp+0x18]; mov rdi, r13; call qword ptr [rax+0x20]; 
0x00000000150e63: test eax, eax; je short 0x0000000000150e90; mov eax, r8d; ret; 
0x00000000150eb3: test eax, eax; je short 0x0000000000150ee0; mov eax, r8d; ret; 
0x0000000015929d: test eax, eax; je short 0x00000000001592b3; mov rax, [rip+0x89b90]; call qword ptr [rax+0x288]; 
0x00000000178703: test eax, eax; je short 0x0000000000178708; xchg edx, eax; sub eax, edx; ret; 
0x000000001796e8: test eax, eax; je short 0x00000000001796ed; xchg edx, eax; sub eax, edx; ret; 
0x0000000019152a: test eax, eax; je short 0x0000000000191530; call rax; 
0x00000000191619: test eax, eax; je short 0x0000000000191624; call rax; 
0x00000000119216: test eax, eax; jl short 0x000000000011922d; je short 0x000000000011921d; ret; 
0x00000000096174: test eax, eax; jne 0x00000000000961f8; sub dword ptr [rip+0x14da1d], 0x1; pop rbp; ret; 
0x000000000a8415: test eax, eax; jne 0x00000000000a84c0; xor eax, eax; ret; 
0x000000000ca315: test eax, eax; jne 0x00000000000ca3c0; xor eax, eax; ret; 
0x0000000015a494: test eax, eax; jne 0x000000000015a518; mov rcx, [rsp+0x10]; mov rdi, [rsp+0x18]; call rcx; 
0x0000000017da91: test eax, eax; jne 0x000000000017d980; sub eax, ecx; vzeroupper; ret; 
0x0000000017dfba: test eax, eax; jne 0x000000000017de60; sub eax, ecx; vzeroupper; ret; 
0x0000000017e174: test eax, eax; jne 0x000000000017e210; xor eax, eax; vzeroupper; ret; 
0x000000001824b8: test eax, eax; jne 0x0000000000182560; mov rax, r8; vzeroupper; ret; 
0x00000000185c24: test eax, eax; jne 0x0000000000185cc0; xor eax, eax; vzeroupper; ret; 
0x0000000018618a: test eax, eax; jne 0x00000000001860c0; sub eax, ecx; vzeroupper; ret; 
0x000000001866a5: test eax, eax; jne 0x0000000000186590; sub eax, ecx; vzeroupper; ret; 
0x000000001904d3: test eax, eax; jne 0x00000000001903e0; add rsp, 0x38; ret; 
0x0000000003885d: test eax, eax; jne short 0x0000000000038868; mov eax, r8d; ret; 
0x00000000041b8d: test eax, eax; jne short 0x0000000000041ba0; add rsp, 0x8; ret; 
0x00000000041c3c: test eax, eax; jne short 0x0000000000041c58; mov esi, 0x8; mov eax, 0x82; syscall; 
0x00000000042637: test eax, eax; jne short 0x0000000000042698; mov r10d, 0x8; mov eax, 0x80; syscall; 
0x000000000457a5: test eax, eax; jne short 0x00000000000457e0; sub dword ptr [rip+0x1a0bb8], 0x1; pop rbp; ret; 
0x000000000463cc: test eax, eax; jne short 0x00000000000463e0; mov eax, 0x13e; syscall; 
0x00000000055d98: test eax, eax; jne short 0x0000000000055e00; mov dword ptr [rsi], 0x0; mov eax, 0x2; ret; 
0x000000000608ea: test eax, eax; jne short 0x00000000000608f0; pop rbx; ret; 
0x0000000008376f: test eax, eax; jne short 0x0000000000083760; mov rax, r8; ret; 
0x0000000008dc77: test eax, eax; jne short 0x000000000008dc68; mov rax, r8; ret; 
0x0000000008ed54: test eax, eax; jne short 0x000000000008ed48; ret; 
0x0000000008fb5c: test eax, eax; jne short 0x000000000008fb50; ret; 
0x00000000091e58: test eax, eax; jne short 0x0000000000091ea0; sub dword ptr [rip+0x15499d], 0x1; pop rbx; ret; 
0x00000000093895: test eax, eax; jne short 0x00000000000938d0; xor edi, edi; call qword ptr [r13]; 
0x000000000973cb: test eax, eax; jne short 0x0000000000097408; sub dword ptr [rip+0x14fa9a], 0x1; pop rbx; ret; 
0x0000000009b8bf: test eax, eax; jne short 0x000000000009b8b0; xor eax, eax; ret; 
0x0000000009b99b: test eax, eax; jne short 0x000000000009b990; mov eax, r8d; ret; 
0x000000000a8445: test eax, eax; jne short 0x00000000000a84a0; xor eax, eax; ret; 
0x000000000a88f8: test eax, eax; jne short 0x00000000000a8970; xor eax, eax; ret; 
0x000000000a8927: test eax, eax; jne short 0x00000000000a89a0; xor eax, eax; ret; 
0x000000000ca345: test eax, eax; jne short 0x00000000000ca3a0; xor eax, eax; ret; 
0x000000000ce8f8: test eax, eax; jne short 0x00000000000ce930; sub dword ptr [rip+0x11883d], 0x1; add rsp, 0x8; ret; 
0x000000000d0acb: test eax, eax; jne short 0x00000000000d0ae0; mov rax, r8; add rsp, 0x8; ret; 
0x000000000db2de: test eax, eax; jne short 0x00000000000db310; mov eax, 0x74; syscall; 
0x000000000de63f: test eax, eax; jne short 0x00000000000de658; mov eax, 0x3d; syscall; 
0x000000000de6ef: test eax, eax; jne short 0x00000000000de710; xor r8d, r8d; mov eax, 0xf7; syscall; 
0x000000000de84c: test eax, eax; jne short 0x00000000000de860; mov eax, 0x22; syscall; 
0x000000000de8d7: test eax, eax; jne short 0x00000000000de8e0; add rsp, 0x8; ret; 
0x000000000dfbae: test eax, eax; jne short 0x00000000000dfbe0; mov eax, 0x69; syscall; 
0x000000000dfc4e: test eax, eax; jne short 0x00000000000dfc80; mov eax, 0x6a; syscall; 
0x000000000dff1e: test eax, eax; jne short 0x00000000000dff50; mov eax, 0x75; syscall; 
0x000000000dffce: test eax, eax; jne short 0x00000000000e0000; mov eax, 0x77; syscall; 
0x00000000106c9f: test eax, eax; jne short 0x0000000000106cb8; mov eax, 0x11; syscall; 
0x00000000106d4f: test eax, eax; jne short 0x0000000000106d68; mov eax, 0x12; syscall; 
0x00000000108b7b: test eax, eax; jne short 0x0000000000108be0; mov eax, 0x101; syscall; 
0x00000000108cac: test eax, eax; jne short 0x0000000000108cc0; syscall; 
0x00000000108d4c: test eax, eax; jne short 0x0000000000108d60; mov eax, 0x1; syscall; 
0x000000001091c0: test eax, eax; jne short 0x00000000001091f0; mov eax, 0x48; syscall; 
0x000000001094ec: test eax, eax; jne short 0x0000000000109500; mov eax, 0x3; syscall; 
0x0000000010966c: test eax, eax; jne short 0x0000000000109680; mov eax, 0x55; syscall; 
0x0000000010d62c: test eax, eax; jne short 0x000000000010d640; mov eax, 0x7; syscall; 
0x0000000010dccf: test eax, eax; jne short 0x000000000010dce8; mov eax, 0x146; syscall; 
0x0000000010e16f: test eax, eax; jne short 0x000000000010e188; mov eax, 0x115; syscall; 
0x0000000010e21f: test eax, eax; jne short 0x000000000010e238; mov eax, 0x11d; syscall; 
0x0000000010f34c: test eax, eax; jne short 0x000000000010f360; mov eax, 0x13; syscall; 
0x0000000010f3ec: test eax, eax; jne short 0x000000000010f400; mov eax, 0x14; syscall; 
0x0000000010f48f: test eax, eax; jne short 0x000000000010f4b0; xor r8d, r8d; mov eax, 0x127; syscall; 
0x0000000010f54f: test eax, eax; jne short 0x000000000010f570; xor r8d, r8d; mov eax, 0x128; syscall; 
0x0000000010f8de: test eax, eax; jne short 0x000000000010f910; mov eax, 0x71; syscall; 
0x0000000010f97e: test eax, eax; jne short 0x000000000010f9b0; mov eax, 0x72; syscall; 
0x0000000010fecf: test eax, eax; jne short 0x000000000010fee8; mov eax, 0x17; syscall; 
0x0000000010ffcf: test eax, eax; jne short 0x0000000000110000; mov eax, 0x10e; syscall; 
0x0000000011010c: test eax, eax; jne short 0x0000000000110120; mov eax, 0x4a; syscall; 
0x000000001101cc: test eax, eax; jne short 0x00000000001101e0; mov eax, 0x4b; syscall; 
0x00000000110ea0: test eax, eax; jne short 0x0000000000110e64; xor eax, eax; pop rbp; ret; 
0x00000000112b38: test eax, eax; jne short 0x0000000000112b48; sub dword ptr [rip+0xd4d0d], 0x1; ret; 
0x00000000113597: test eax, eax; jne short 0x0000000000113600; sub dword ptr [rip+0xd42ae], 0x1; add rsp, 0x8; ret; 
0x0000000011391c: test eax, eax; jne short 0x0000000000113930; mov eax, 0x1a; syscall; 
0x000000001190da: test eax, eax; jne short 0x00000000001190bd; mov rax, r8; ret; 
0x0000000011931f: test eax, eax; jne short 0x0000000000119340; mov r9d, 0x8; mov eax, 0x119; syscall; 
0x0000000011951f: test eax, eax; jne short 0x0000000000119538; mov eax, 0xe8; syscall; 
0x000000001195cf: test eax, eax; jne short 0x00000000001195e8; mov eax, 0x114; syscall; 
0x0000000011967f: test eax, eax; jne short 0x0000000000119698; mov eax, 0x116; syscall; 
0x0000000011972f: test eax, eax; jne short 0x0000000000119748; mov eax, 0x113; syscall; 
0x000000001197fc: test eax, eax; jne short 0x0000000000119810; mov eax, 0x130; syscall; 
0x0000000011a25c: test eax, eax; jne short 0x000000000011a270; mov eax, 0x2b; syscall; 
0x0000000011a32c: test eax, eax; jne short 0x000000000011a340; mov eax, 0x2a; syscall; 
0x0000000011a54f: test eax, eax; jne short 0x000000000011a568; mov eax, 0x2d; syscall; 
0x0000000011a60c: test eax, eax; jne short 0x000000000011a620; mov eax, 0x2f; syscall; 
0x0000000011a76c: test eax, eax; jne short 0x000000000011a780; mov eax, 0x2e; syscall; 
0x0000000011a80f: test eax, eax; jne short 0x000000000011a828; mov eax, 0x2c; syscall; 
0x0000000011ac6f: test eax, eax; jne short 0x000000000011ac88; mov eax, 0x120; syscall; 
0x0000000011ad1f: test eax, eax; jne short 0x000000000011ad38; mov eax, 0x12b; syscall; 
0x0000000011addf: test eax, eax; jne short 0x000000000011adf8; mov eax, 0x133; syscall; 
0x0000000011af7f: test eax, eax; jne short 0x000000000011af98; mov eax, 0x45; syscall; 
0x0000000011b02f: test eax, eax; jne short 0x000000000011b048; mov eax, 0x46; syscall; 
0x00000000126ba7: test eax, eax; jne short 0x0000000000126bb8; cmp qword ptr [rdi], 0x0; je short 0x0000000000126bc0; ret; 
0x00000000132ab3: test eax, eax; jne short 0x0000000000132b20; sub dword ptr [rip+0xb5aba], 0x1; add rsp, 0x8; ret; 
0x0000000013717b: test eax, eax; jne short 0x0000000000137198; mov eax, r8d; ret; 
0x0000000013bf3e: test eax, eax; jne short 0x000000000013bf48; ret; 
0x0000000013d1e4: test eax, eax; jne short 0x000000000013d230; sub dword ptr [rip+0xab9a9], 0x1; pop rbp; ret; 
0x0000000013dd5c: test eax, eax; jne short 0x000000000013dd68; ret; 
0x00000000141e41: test eax, eax; jne short 0x0000000000141e60; mov rax, [r12+0x8]; mov rdi, r12; call qword ptr [rax+0x20]; 
0x000000001420f4: test eax, eax; jne short 0x000000000014210c; mov rax, [rbp+0x8]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x00000000142ed3: test eax, eax; jne short 0x0000000000142f20; mov dword ptr [rsi], 0x0; ret; 
0x00000000147c4a: test eax, eax; jne short 0x0000000000147c50; ret; 
0x0000000014e15a: test eax, eax; jne short 0x000000000014e160; ret; 
0x0000000015686d: test eax, eax; jne short 0x00000000001568a0; sub dword ptr [rip+0x9286c], 0x1; add rsp, 0x8; ret; 
0x00000000156a4d: test eax, eax; jne short 0x0000000000156a80; sub dword ptr [rip+0x9268c], 0x1; add rsp, 0x8; ret; 
0x0000000015a813: test eax, eax; jne short 0x000000000015a82c; mov eax, 0x27; syscall; 
0x0000000017d99b: test eax, eax; jne short 0x000000000017d980; sub eax, ecx; vzeroupper; ret; 
0x0000000017de80: test eax, eax; jne short 0x000000000017de60; sub eax, ecx; vzeroupper; ret; 
0x0000000017e1b1: test eax, eax; jne short 0x000000000017e1d0; xor eax, eax; vzeroupper; ret; 
0x000000001824f1: test eax, eax; jne short 0x0000000000182520; mov rax, r8; vzeroupper; ret; 
0x00000000185c61: test eax, eax; jne short 0x0000000000185c80; xor eax, eax; vzeroupper; ret; 
0x000000001860d9: test eax, eax; jne short 0x00000000001860c0; sub eax, ecx; vzeroupper; ret; 
0x000000001865ae: test eax, eax; jne short 0x0000000000186590; sub eax, ecx; vzeroupper; ret; 
0x0000000018a664: test eax, eax; jne short 0x000000000018a674; nop [rax+rax]; xor rax, rax; ret; 
0x00000000191af3: test eax, eax; jne short 0x0000000000191b20; sub dword ptr [rip+0x54d02], 0x1; pop rbx; ret; 
0x00000000191df4: test eax, eax; jne short 0x0000000000191e40; sub dword ptr [rip+0x56859], 0x1; pop rbp; ret; 
0x000000000877ef: test eax, eax; js short 0x00000000000877f8; ret; 
0x0000000014101c: test eax, eax; js short 0x0000000000141030; mov rax, r12; pop r12; ret; 
0x0000000009d310: test eax, eax; lea rdx, [rip+0x1af57]; lea rax, [rip+0x1aed0]; cmovne rax, rdx; ret; 
0x000000001277a7: test eax, eax; lea rdx, [rip+0x5dde0]; lea rax, [rip+0x5de39]; cmove rax, rdx; ret; 
0x0000000009d2f7: test eax, eax; lea rdx, [rip+0xe82a0]; lea rax, [rip+0xe82f9]; cmove rax, rdx; ret; 
0x000000001277c0: test eax, eax; lea rdx, [rip-0x6f569]; lea rax, [rip-0x6f5f0]; cmovne rax, rdx; ret; 
0x00000000110676: test eax, eax; mov eax, 0x0; cmove rax, rbx; pop rbx; ret; 
0x0000000009f9b7: test eax, eax; mov rax, rbx; pop rbx; cmovne rax, rdi; ret; 
0x000000000503e0: test eax, eax; sete al; add rsp, 0x8; movzx eax, al; ret; 
0x0000000014068a: test eax, eax; sete al; add rsp, 0x8; ret; 
0x00000000145afd: test eax, eax; setne al; add rsp, 0x8; movzx eax, al; ret; 
0x00000000098933: test eax, ebp; add [rax], al; add [rax-0x7d], cl; call qword ptr [rax]; 
0x00000000176403: test eax, ebx; add eax, [rax]; add [rax-0x7cb7fec8], al; fdivr st, st(7); ret; 
0x00000000077b32: test eax, edi; idiv bh; jmp qword ptr [rax+rcx*2-0x75]; 
0x0000000014786d: test eax, edx; add [rax], al; add [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x20]; 
0x000000000787ea: test eax, edx; idiv bh; call qword ptr [rax]; 
0x0000000011b3db: test eax, esi; idiv edi; jmp qword ptr [rdi+0x6d]; 
0x000000001765fb: test eax, esp; add [rax], eax; add [rax-0x7cb7fec8], al; fdivr st, st(7); ret; 
0x00000000176a1e: test ebp, ebp; idiv bh; jmp qword ptr [rsi+0xf]; 
0x0000000009b849: test ebp, ebp; jne 0x000000000009b6f1; mov rax, [rip+0x1476d8]; call qword ptr [rax]; 
0x00000000114b01: test ebp, ebp; jne short 0x0000000000114b7b; mov rdi, [r12]; call rbx; 
0x00000000114b31: test ebp, ebp; jne short 0x0000000000114bb0; mov rdi, [r12]; call rbx; 
0x0000000011597d: test ebp, ebp; jne short 0x00000000001159e0; mov rdi, [r12]; call rbx; 
0x0000000015a6f0: test ebx, ebx; jne short 0x000000000015a700; pop rbx; ret; 
0x0000000015a720: test ebx, ebx; jne short 0x000000000015a730; pop rbx; ret; 
0x000000001919e9: test ebx, ebx; jne short 0x00000000001919d5; pop rbx; ret; 
0x00000000191a8b: test ebx, ebx; jne short 0x0000000000191a70; pop rbx; ret; 
0x000000001763e0: test ebx, edi; add eax, [rax]; add [rax-0x7cb7fec8], al; fdivr st, st(7); ret; 
0x00000000126da5: test ebx, edx; add [rax], al; add cl, cl; ret; 
0x000000000a8868: test ebx, esi; add [rax], al; add [rsi+0xf], ah; xlat [rbx]; ret; 
0x00000000098638: test ebx, esp; add [rax], al; add [rax-0x7d], cl; call qword ptr [rax]; 
0x000000000b8faf: test ecx, ecx; jne short 0x00000000000b8f88; mov rax, r8; ret; 
0x0000000011d1c8: test ecx, ecx; jne short 0x000000000011d1d0; ret; 
0x0000000011da1f: test ecx, ecx; jne short 0x000000000011da28; ret; 
0x0000000011da7c: test ecx, ecx; jne short 0x000000000011da88; ret; 
0x00000000128abd: test ecx, ecx; jne short 0x0000000000128a70; mov rax, r8; ret; 
0x000000000422d5: test edi, edi; je short 0x00000000000422e3; mov qword ptr [rdi], 0x0; xor eax, eax; ret; 
0x000000000425e9: test edi, edi; je short 0x0000000000042610; lea edx, [rax+0x1]; mov [rip+0x1a0bb6], edx; ret; 
0x00000000045612: test edi, edi; je short 0x000000000004561c; mov dword ptr [rdi], 0x0; pop rbx; ret; 
0x000000000e1dba: test edi, edi; je short 0x00000000000e1dc8; mov rdi, rbx; call r15; 
0x000000000fb9ca: test edi, edi; je short 0x00000000000fb9d8; mov rdi, rbx; call r15; 
0x0000000011364a: test edi, edi; je short 0x0000000000113654; mov [rip+0xcfd04], edi; ret; 
0x0000000014172d: test edi, edi; je short 0x00000000001417b0; mov rax, [rdi+0x38]; call qword ptr [rax+0x18]; 
0x00000000141a09: test edi, edi; je short 0x0000000000141a1c; mov rax, [rdi+0x8]; call qword ptr [rax+0x20]; 
0x00000000141bab: test edi, edi; je short 0x0000000000141bb6; mov rax, [rdi+0x8]; call qword ptr [rax+0x20]; 
0x00000000114b8e: test edi, edi; jne 0x0000000000114c20; mov rdi, [r13]; call rbx; 
0x00000000114bc3: test edi, edi; jne 0x0000000000114c60; mov rdi, [r13]; call rbx; 
0x00000000114b5b: test edi, edi; jne 0x0000000000114c80; mov rdi, [r13]; call rbx; 
0x000000001159c3: test edi, edi; jne 0x0000000000115a80; mov rdi, [r13]; call rbx; 
0x000000001122cc: test edi, edi; jne short 0x00000000001122e0; mov eax, 0x1; ret; 
0x00000000114bef: test edi, edi; jne short 0x0000000000114c40; mov rdi, [r13]; call rbx; 
0x00000000115951: test edi, edi; jne short 0x00000000001159a0; mov rdi, [r12]; call rbx; 
0x00000000115a1f: test edi, edi; jne short 0x0000000000115a40; mov rdi, [r13]; call rbx; 
0x000000001159f3: test edi, edi; jne short 0x0000000000115a60; mov rdi, [r13]; call rbx; 
0x000000001329f1: test edi, edi; jne short 0x00000000001329e0; pop rbx; ret; 
0x00000000157dea: test edi, edi; jns short 0x0000000000157df0; ret; 
0x00000000094c02: test edi, edi; js 0x0000000000094d94; mov rax, [rip+0x14e17f]; call qword ptr [rax]; 
0x000000000e0c69: test edi, edi; js short 0x00000000000e0c70; ret; 
0x00000000040867: test edx, eax; je short 0x0000000000040870; ret; 
0x000000000940d6: test edx, ebx; add eax, [rax]; add [rax-0x7d], cl; ret far; 
0x00000000176a41: test edx, ecx; idiv bh; jmp qword ptr [rsi+0xf]; 
0x00000000176509: test edx, edx; add al, [rax]; add [rax-0x7cb7fec8], al; fdivr st, st(7); ret; 
0x000000000ae0ea: test edx, edx; je 0x00000000000ae190; bsf rax, rdx; ret; 
0x000000000cb72e: test edx, edx; je 0x00000000000cb7d0; bsf rax, rdx; shr rax, 0x2; ret; 
0x00000000089b83: test edx, edx; je short 0x0000000000089b90; ret; 
0x00000000089fa3: test edx, edx; je short 0x0000000000089fb0; ret; 
0x000000000adee6: test edx, edx; je short 0x00000000000adeee; bsf eax, edx; ret; 
0x000000000adf8b: test edx, edx; je short 0x00000000000adfa0; bsf rax, rdx; ret; 
0x000000000adf2e: test edx, edx; je short 0x00000000000adfb0; bsf rax, rdx; ret; 
0x000000000ae15a: test edx, edx; je short 0x00000000000ae180; bsf rax, rdx; ret; 
0x000000000cb79a: test edx, edx; je short 0x00000000000cb7c0; bsf rax, rdx; shr rax, 0x2; ret; 
0x00000000119894: test edx, edx; je short 0x00000000001198c8; mov eax, 0x145; syscall; 
0x0000000011b587: test edx, edx; je short 0x000000000011b594; add edx, edx; mov eax, 0x14; syscall; 
0x00000000055b8a: test edx, edx; jne short 0x0000000000055bb0; mov dword ptr [rsi], 0x0; mov eax, 0x1; ret; 
0x000000000611c6: test edx, edx; jne short 0x00000000000611d0; sub dword ptr [rdi], 0x1; ret; 
0x000000000808a8: test edx, edx; jne short 0x00000000000808b8; sub dword ptr [rip+0x165d7d], 0x1; ret; 
0x0000000008ce47: test edx, edx; jne short 0x000000000008ce50; ret; 
0x0000000008d58c: test edx, edx; jne short 0x000000000008d5a0; sub dword ptr [rip+0x1590d9], 0x1; ret; 
0x0000000008ff08: test edx, edx; jne short 0x000000000008ff18; sub dword ptr [rip+0x15675d], 0x1; ret; 
0x000000000b8245: test edx, edx; jne short 0x00000000000b824d; mov rax, rdi; ret; 
0x000000000b90ae: test edx, edx; jne short 0x00000000000b90a0; xor eax, eax; ret; 
0x000000000b913c: test edx, edx; jne short 0x00000000000b9120; ret; 
0x000000000ba43b: test edx, edx; jne short 0x00000000000ba430; ret; 
0x0000000011d15e: test edx, edx; jne short 0x000000000011d170; mov eax, r8d; ret; 
0x0000000011d3b1: test edx, edx; jne short 0x000000000011d3c0; ret; 
0x0000000011dc51: test edx, edx; jne short 0x000000000011dc60; ret; 
0x000000001519d4: test edx, edx; jne short 0x00000000001519e8; mov r8d, 0x1; mov eax, r8d; ret; 
0x00000000151a24: test edx, edx; jne short 0x0000000000151a38; mov r8d, 0x1; mov eax, r8d; ret; 
0x0000000010e638: test edx, edx; js short 0x000000000010e644; mov eax, [rdi+0x8]; and eax, 0x100f; ret; 
0x0000000013776e: test edx, edx; js short 0x0000000000137780; mov rax, rdx; movsxd rdx, ecx; ret; 
0x00000000038437: test edx, edx; sbb al, [rax]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000004250d: test edx, edx; sete al; ret; 
0x00000000150177: test edx, edx; setne al; mov [rsp], rax; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x000000001072ba: test esi, 0x575ff00; mov [rdi], si; xor eax, eax; ret; 
0x0000000013dfcf: test esi, ebp; jmp qword ptr [rsi+0xf]; 
0x0000000003d918: test esi, esi; add [rax], al; add [rax-0x7d], cl; ret; 
0x00000000034804: test esi, esi; je short 0x0000000000034810; cmp esi, 0x3; je short 0x0000000000034810; ret; 
0x000000000deafb: test esi, esi; je short 0x00000000000deb0b; mov esi, 0x1; incsspq rsi; jmp rdi; 
0x0000000010ddd8: test esi, esi; je short 0x000000000010de02; mov eax, 0x118; syscall; 
0x0000000017d4a6: test esi, esi; je short 0x000000000017d488; xor eax, eax; ret; 
0x00000000115c7b: test esi, esi; jmp qword ptr [rbp+rax*2-0x77]; 
0x00000000115cc1: test esi, esi; jmp qword ptr [rsi+0x66]; 
0x00000000055c18: test esi, esi; jne short 0x0000000000055c48; mov dword ptr [rdx], 0x0; mov eax, 0x1; ret; 
0x00000000091069: test esi, esi; jne short 0x0000000000091080; and dword ptr [rdi+0x8], 0xfffffffe; xor eax, eax; ret; 
0x000000000ae055: test esi, esi; jne short 0x00000000000ae05d; xor rax, rax; ret; 
0x000000000cb695: test esi, esi; jne short 0x00000000000cb69d; xor rax, rax; ret; 
0x000000000cce95: test esi, esi; jne short 0x00000000000ccec8; mov eax, 0x60; syscall; 
0x0000000009835f: test esp, ebx; add [rax], al; add [rax-0x7d], cl; call qword ptr [rax]; 
0x000000000e5bff: test esp, ecx; add [rax], eax; add [rbp-0x7b], al; ror byte ptr [rdi], 0x85; ret; 
0x0000000007a87f: test esp, edx; adc al, [rax]; add [rcx-0x7d], al; call qword ptr [rbx+0xf]; 
0x000000000da784: test esp, esp; je short 0x00000000000da79d; mov rbx, r13; mov rdi, rbp; call r12; 
0x00000000119047: test esp, esp; je short 0x0000000000119059; mov rsi, r8; mov rdi, rbp; call r12; 
0x00000000114acf: test esp, esp; jne short 0x0000000000114b1c; mov rdi, [rbp]; call rbx; 
0x00000000115918: test esp, esp; jne short 0x0000000000115940; mov rdi, [rbp]; call rbx; 
0x00000000161572: test qword ptr [rbx-0x76b703aa], 0x5789f74f; cld; ret; 
0x000000000da783: test r12, r12; je short 0x00000000000da79d; mov rbx, r13; mov rdi, rbp; call r12; 
0x00000000119046: test r12, r12; je short 0x0000000000119059; mov rsi, r8; mov rdi, rbp; call r12; 
0x00000000114ace: test r12, r12; jne short 0x0000000000114b1c; mov rdi, [rbp]; call rbx; 
0x00000000115917: test r12, r12; jne short 0x0000000000115940; mov rdi, [rbp]; call rbx; 
0x0000000009b848: test r13, r13; jne 0x000000000009b6f1; mov rax, [rip+0x1476d8]; call qword ptr [rax]; 
0x00000000114b00: test r13, r13; jne short 0x0000000000114b7b; mov rdi, [r12]; call rbx; 
0x00000000114b30: test r13, r13; jne short 0x0000000000114bb0; mov rdi, [r12]; call rbx; 
0x0000000011597c: test r13, r13; jne short 0x00000000001159e0; mov rdi, [r12]; call rbx; 
0x000000000e1db9: test r15, r15; je short 0x00000000000e1dc8; mov rdi, rbx; call r15; 
0x000000000fb9c9: test r15, r15; je short 0x00000000000fb9d8; mov rdi, rbx; call r15; 
0x0000000014172c: test r15d, r15d; je short 0x00000000001417b0; mov rax, [rdi+0x38]; call qword ptr [rax+0x18]; 
0x0000000014c332: test r8, r8; je short 0x000000000014c345; mov rax, [r8+0x38]; mov rdi, r8; call qword ptr [rax+0x20]; 
0x000000000974d9: test r8b, r8b; jne short 0x00000000000974e9; mov dword ptr [rip+0x14f988], 0x0; ret; 
0x00000000061037: test r8d, r8d; je short 0x0000000000061080; mov eax, 0x13c; syscall; 
0x00000000178702: test r8d, r8d; je short 0x0000000000178708; xchg edx, eax; sub eax, edx; ret; 
0x000000001796e7: test r8d, r8d; je short 0x00000000001796ed; xchg edx, eax; sub eax, edx; ret; 
0x000000001904d2: test r8d, r8d; jne 0x00000000001903e0; add rsp, 0x38; ret; 
0x000000000608e9: test r8d, r8d; jne short 0x00000000000608f0; pop rbx; ret; 
0x000000000cb560: test rax, 0x1; je 0x00000000000cb4c5; lea rax, [rdi-0x10]; ret; 
0x000000000cb610: test rax, 0x1; je short 0x00000000000cb680; lea rax, [rdi-0x10]; ret; 
0x00000000126ce4: test rax, rax; cmove rax, rdx; mov [rip+0xc11c6], rax; pop rbp; ret; 
0x00000000028fdf: test rax, rax; je 0x00000000000266e2; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000099e54: test rax, rax; je 0x0000000000099f30; call rax; 
0x00000000099f8c: test rax, rax; je 0x000000000009a060; call rax; 
0x0000000009a368: test rax, rax; je 0x000000000009a4e0; mov rdx, r13; mov rdi, r12; call rax; 
0x0000000009aa7a: test rax, rax; je 0x000000000009ab30; mov rsi, r12; mov rdi, rbp; call rax; 
0x0000000009acdf: test rax, rax; je 0x000000000009ad90; mov rsi, rbp; mov rdi, r12; call rax; 
0x00000000116348: test rax, rax; je 0x0000000000116440; call rax; 
0x00000000142b21: test rax, rax; je 0x00000000001429ae; mov rdi, rbx; call rax; 
0x0000000014cfb7: test rax, rax; je 0x000000000014cf35; mov fs:[rbx], rax; pop rbx; ret; 
0x00000000035651: test rax, rax; je short 0x0000000000035658; call rax; 
0x000000000358d2: test rax, rax; je short 0x00000000000358d9; call rax; 
0x000000000369fc: test rax, rax; je short 0x0000000000036a03; call rax; 
0x0000000007f398: test rax, rax; je short 0x000000000007f3a6; mov rdi, [rdi+0xe0]; jmp rax; 
0x0000000007f3d1: test rax, rax; je short 0x000000000007f3e7; mov rbp, rdx; mov rdi, [rdi+0xe0]; call rax; 
0x0000000007f421: test rax, rax; je short 0x000000000007f448; mov rdi, [rdi+0xe0]; lea rsi, [rsp+0x8]; call rax; 
0x0000000007f478: test rax, rax; je short 0x000000000007f490; mov rdi, [rdi+0xe0]; jmp rax; 
0x0000000008aac0: test rax, rax; je short 0x000000000008aad0; pop rbx; ret; 
0x0000000008edb8: test rax, rax; je short 0x000000000008edcc; mov qword ptr [rax], 0x0; mov qword ptr [rax+0x8], 0x0; ret; 
0x00000000090d97: test rax, rax; je short 0x0000000000090da0; xor eax, eax; pop rbx; ret; 
0x00000000091f29: test rax, rax; je short 0x0000000000091f30; call rax; 
0x00000000091fa2: test rax, rax; je short 0x0000000000091fa9; call rax; 
0x00000000091fe2: test rax, rax; je short 0x0000000000091fe9; call rax; 
0x0000000009664c: test rax, rax; je short 0x0000000000096653; call rax; 
0x0000000009a198: test rax, rax; je short 0x000000000009a200; mov rsi, r12; mov rdi, rbp; call rax; 
0x000000000d8e9e: test rax, rax; je short 0x00000000000d8ed0; call rax; 
0x000000000d8f0e: test rax, rax; je short 0x00000000000d8f40; call rax; 
0x00000000107eaf: test rax, rax; je short 0x0000000000107ee8; xor edx, edx; call rax; 
0x0000000010fbaf: test rax, rax; je short 0x000000000010fbb5; ret; 
0x00000000111cd4: test rax, rax; je short 0x0000000000111cdc; mov [rax], rdx; ret; 
0x00000000116169: test rax, rax; je short 0x00000000001161d0; call rax; 
0x00000000125a7e: test rax, rax; je short 0x0000000000125ab0; mov rdi, [rdx+0x50]; mov rsi, rdx; call rax; 
0x00000000126d64: test rax, rax; je short 0x0000000000126d95; lea rsi, [rbp-0x20]; lea rdi, [rip-0x184]; call rax; 
0x0000000012859d: test rax, rax; je short 0x00000000001285b0; add rsp, 0x8; ret; 
0x000000001326ec: test rax, rax; je short 0x00000000001326f6; mov rdi, rbx; call rax; 
0x00000000132a0c: test rax, rax; je short 0x0000000000132a16; mov rdi, rbx; call rax; 
0x00000000132ad4: test rax, rax; je short 0x0000000000132ae2; lea rdi, [rip+0xb5a40]; call rax; 
0x0000000013c973: test rax, rax; je short 0x000000000013c980; add rsp, 0x8; ret; 
0x00000000141423: test rax, rax; je short 0x000000000014142d; mov rdi, rbp; call rax; 
0x000000001418ba: test rax, rax; je short 0x00000000001418c4; mov rdi, rbp; call rax; 
0x000000001428b9: test rax, rax; je short 0x00000000001428c3; mov rdi, rbx; call rax; 
0x00000000142c0f: test rax, rax; je short 0x0000000000142c19; mov rdi, rbx; call rax; 
0x00000000143437: test rax, rax; je short 0x0000000000143441; mov rdi, r13; call rax; 
0x00000000146e44: test rax, rax; je short 0x0000000000146e52; lea rdi, [rbp+0xc8]; call rax; 
0x0000000014788a: test rax, rax; je short 0x0000000000147894; mov rdi, rbp; call rax; 
0x00000000147a6f: test rax, rax; je short 0x0000000000147a7b; lea rdi, [r12+0x10]; call rax; 
0x00000000148d2e: test rax, rax; je short 0x0000000000148d38; mov rdi, rbp; call rax; 
0x00000000148f03: test rax, rax; je short 0x0000000000148f0d; mov rdi, r13; call rax; 
0x00000000149c21: test rax, rax; je short 0x0000000000149c2c; lea rdi, [rbp+0x68]; call rax; 
0x0000000014a349: test rax, rax; je short 0x000000000014a353; mov rdi, rbp; call rax; 
0x0000000014a6c1: test rax, rax; je short 0x000000000014a6cc; lea rdi, [rbp+0x58]; call rax; 
0x0000000014ceff: test rax, rax; je short 0x000000000014ce85; mov fs:[rbx], rax; pop rbx; ret; 
0x0000000014ce80: test rax, rax; je short 0x000000000014ce90; pop rbx; ret; 
0x0000000014df8f: test rax, rax; je short 0x000000000014df9b; lea rdi, [r12+0x10]; call rax; 
0x0000000014e6d8: test rax, rax; je short 0x000000000014e6e4; lea rdi, [r12+0x10]; call rax; 
0x0000000015929c: test rax, rax; je short 0x00000000001592b3; mov rax, [rip+0x89b90]; call qword ptr [rax+0x288]; 
0x00000000191529: test rax, rax; je short 0x0000000000191530; call rax; 
0x00000000191618: test rax, rax; je short 0x0000000000191624; call rax; 
0x00000000119215: test rax, rax; jl short 0x000000000011922d; je short 0x000000000011921d; ret; 
0x00000000055d97: test rax, rax; jne short 0x0000000000055e00; mov dword ptr [rsi], 0x0; mov eax, 0x2; ret; 
0x0000000008376e: test rax, rax; jne short 0x0000000000083760; mov rax, r8; ret; 
0x0000000008dc76: test rax, rax; jne short 0x000000000008dc68; mov rax, r8; ret; 
0x0000000008ed53: test rax, rax; jne short 0x000000000008ed48; ret; 
0x0000000008fb5b: test rax, rax; jne short 0x000000000008fb50; ret; 
0x00000000093894: test rax, rax; jne short 0x00000000000938d0; xor edi, edi; call qword ptr [r13]; 
0x0000000009b8be: test rax, rax; jne short 0x000000000009b8b0; xor eax, eax; ret; 
0x0000000009b99a: test rax, rax; jne short 0x000000000009b990; mov eax, r8d; ret; 
0x00000000110e9f: test rax, rax; jne short 0x0000000000110e64; xor eax, eax; pop rbp; ret; 
0x0000000013dd5b: test rax, rax; jne short 0x000000000013dd68; ret; 
0x0000000009f9b6: test rax, rax; mov rax, rbx; pop rbx; cmovne rax, rdi; ret; 
0x00000000140689: test rax, rax; sete al; add rsp, 0x8; ret; 
0x0000000015a6ef: test rbx, rbx; jne short 0x000000000015a700; pop rbx; ret; 
0x0000000015a71f: test rbx, rbx; jne short 0x000000000015a730; pop rbx; ret; 
0x000000001919e8: test rbx, rbx; jne short 0x00000000001919d5; pop rbx; ret; 
0x00000000191a8a: test rbx, rbx; jne short 0x0000000000191a70; pop rbx; ret; 
0x000000000422d4: test rdi, rdi; je short 0x00000000000422e3; mov qword ptr [rdi], 0x0; xor eax, eax; ret; 
0x00000000045611: test rdi, rdi; je short 0x000000000004561c; mov dword ptr [rdi], 0x0; pop rbx; ret; 
0x00000000141a08: test rdi, rdi; je short 0x0000000000141a1c; mov rax, [rdi+0x8]; call qword ptr [rax+0x20]; 
0x00000000141baa: test rdi, rdi; je short 0x0000000000141bb6; mov rax, [rdi+0x8]; call qword ptr [rax+0x20]; 
0x00000000114b8d: test rdi, rdi; jne 0x0000000000114c20; mov rdi, [r13]; call rbx; 
0x00000000114bc2: test rdi, rdi; jne 0x0000000000114c60; mov rdi, [r13]; call rbx; 
0x00000000114b5a: test rdi, rdi; jne 0x0000000000114c80; mov rdi, [r13]; call rbx; 
0x000000001159c2: test rdi, rdi; jne 0x0000000000115a80; mov rdi, [r13]; call rbx; 
0x000000001122cb: test rdi, rdi; jne short 0x00000000001122e0; mov eax, 0x1; ret; 
0x00000000114bee: test rdi, rdi; jne short 0x0000000000114c40; mov rdi, [r13]; call rbx; 
0x00000000115950: test rdi, rdi; jne short 0x00000000001159a0; mov rdi, [r12]; call rbx; 
0x00000000115a1e: test rdi, rdi; jne short 0x0000000000115a40; mov rdi, [r13]; call rbx; 
0x000000001159f2: test rdi, rdi; jne short 0x0000000000115a60; mov rdi, [r13]; call rbx; 
0x000000001329ef: test rdi, rdi; jne short 0x00000000001329e0; pop rbx; ret; 
0x00000000094c01: test rdi, rdi; js 0x0000000000094d94; mov rax, [rip+0x14e17f]; call qword ptr [rax]; 
0x00000000040866: test rdx, rax; je short 0x0000000000040870; ret; 
0x000000000ae0e9: test rdx, rdx; je 0x00000000000ae190; bsf rax, rdx; ret; 
0x000000000cb72d: test rdx, rdx; je 0x00000000000cb7d0; bsf rax, rdx; shr rax, 0x2; ret; 
0x000000000adf8a: test rdx, rdx; je short 0x00000000000adfa0; bsf rax, rdx; ret; 
0x000000000adf2d: test rdx, rdx; je short 0x00000000000adfb0; bsf rax, rdx; ret; 
0x000000000ae159: test rdx, rdx; je short 0x00000000000ae180; bsf rax, rdx; ret; 
0x000000000cb799: test rdx, rdx; je short 0x00000000000cb7c0; bsf rax, rdx; shr rax, 0x2; ret; 
0x00000000055b89: test rdx, rdx; jne short 0x0000000000055bb0; mov dword ptr [rsi], 0x0; mov eax, 0x1; ret; 
0x0000000008ce46: test rdx, rdx; jne short 0x000000000008ce50; ret; 
0x000000000b8244: test rdx, rdx; jne short 0x00000000000b824d; mov rax, rdi; ret; 
0x0000000013776d: test rdx, rdx; js short 0x0000000000137780; mov rax, rdx; movsxd rdx, ecx; ret; 
0x000000000deafa: test rsi, rsi; je short 0x00000000000deb0b; mov esi, 0x1; incsspq rsi; jmp rdi; 
0x0000000010ddd7: test rsi, rsi; je short 0x000000000010de02; mov eax, 0x118; syscall; 
0x00000000055c17: test rsi, rsi; jne short 0x0000000000055c48; mov dword ptr [rdx], 0x0; mov eax, 0x1; ret; 
0x000000000ae054: test rsi, rsi; jne short 0x00000000000ae05d; xor rax, rax; ret; 
0x000000000cb694: test rsi, rsi; jne short 0x00000000000cb69d; xor rax, rax; ret; 
0x000000000cce94: test rsi, rsi; jne short 0x00000000000ccec8; mov eax, 0x60; syscall; 
0x000000001072b9: test si, 0xff00; jne short 0x00000000001072c5; mov [rdi], si; xor eax, eax; ret; 
0x0000000002be28: test sil, sil; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x0000000017e250: tzcnt eax, eax; add rax, 0x20; add rax, rdi; vzeroupper; ret; 
0x0000000017e260: tzcnt eax, eax; add rax, 0x40; add rax, rdi; vzeroupper; ret; 
0x0000000017e28e: tzcnt eax, eax; add rax, 0x60; add rax, rdi; vzeroupper; ret; 
0x00000000181e23: tzcnt eax, eax; add rax, rcx; add rax, rdi; vzeroupper; ret; 
0x0000000017e2f5: tzcnt eax, eax; add rax, rdi; add rax, rcx; vzeroupper; ret; 
0x00000000182280: tzcnt eax, eax; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x0000000017e240: tzcnt eax, eax; add rax, rdi; vzeroupper; ret; 
0x00000000040ac6: ucomisd xmm0, xmm4; jp short 0x0000000000040ad8; jne short 0x0000000000040ad8; addsd xmm0, xmm0; ret; 
0x00000000040ac7: ucomiss xmm0, xmm4; jp short 0x0000000000040ad8; jne short 0x0000000000040ad8; addsd xmm0, xmm0; ret; 
0x00000000040de3: ucomiss xmm0, xmm4; jp short 0x0000000000040df0; jne short 0x0000000000040df0; addss xmm0, xmm0; ret; 
0x000000001589fb: ud0 edi, edi; call qword ptr [rax+0x1903c764]; 
0x0000000013ab1b: ud0 edi, edi; call qword ptr [rax+0x200045f6]; 
0x0000000011188b: ud0 edi, edi; call qword ptr [rax+0x305c02c7]; 
0x0000000013298d: ud0 edi, edi; jmp qword ptr [rsi+0x66]; 
0x00000000164edd: ud2; lea r11, [rip+0x52c6a]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000923ab: unpckhps xmm0, [rax]; add [rax], eax; add [rax], al; mov [rip+0x150ecf], rax; ret; 
0x0000000009238b: unpckhps xmm0, [rax]; add [rax], eax; add [rax], al; mov [rip+0x150ee7], rax; ret; 
0x00000000144157: vcmppd xmm9, xmm10, [rcx+rcx*4-0x12], 0x41; call qword ptr [rdi+0x40]; 
0x0000000002a6b4: verr [rsi+0x2e]; nop [rax+rax]; endbr64; mov rax, [rip+0x1baf9d]; ret; 
0x000000000bd8fc: verw ax; mov r9b, 0xf7; jmp qword ptr [rsi+0x66]; 
0x000000000bb05a: verw ax; out dx, eax; fincstp; jmp qword ptr [rsi+0x66]; 
0x000000000b85da: verw ax; outsd dx, [rsi]; add al, 0xf8; jmp qword ptr [rsi+0x66]; 
0x0000000018538c: vmovdqu [r11], ymm4; vzeroupper; ret; 
0x00000000185433: vmovdqu [r11], ymm8; vzeroupper; ret; 
0x000000001895be: vmovdqu [r9-0x10], xmm1; ret; 
0x000000001895aa: vmovdqu [r9-0x20], ymm1; ret; 
0x00000000189591: vmovdqu [r9-0x20], ymm3; ret; 
0x0000000018958b: vmovdqu [r9-0x40], ymm2; vmovdqu [r9-0x20], ymm3; ret; 
0x00000000185382: vmovdqu [rcx-0x40], ymm7; vmovdqu [rcx-0x60], ymm8; vmovdqu [r11], ymm4; vzeroupper; ret; 
0x00000000185387: vmovdqu [rcx-0x60], ymm8; vmovdqu [r11], ymm4; vzeroupper; ret; 
0x00000000185644: vmovdqu [rdi+0x20], ymm0; vmovdqu [rdi+rdx-0x20], ymm0; vmovdqu [rdi+rdx-0x40], ymm0; vzeroupper; ret; 
0x00000000189586: vmovdqu [rdi+0x20], ymm1; vmovdqu [r9-0x40], ymm2; vmovdqu [r9-0x20], ymm3; ret; 
0x000000001852cc: vmovdqu [rdi+0x20], ymm1; vmovdqu [rdi+rdx-0x20], ymm2; vmovdqu [rdi+rdx-0x40], ymm3; vzeroupper; ret; 
0x00000000184e30: vmovdqu [rdi+0x20], ymm3; mov [rdi+0x40], cl; lea rax, [rdi+0x41]; vzeroupper; ret; 
0x00000000183550: vmovdqu [rdi+0x20], ymm3; mov [rdi+0x40], cl; mov byte ptr [rdi+0x41], 0x0; vzeroupper; ret; 
0x00000000184100: vmovdqu [rdi+0x20], ymm3; mov [rdi+0x40], cl; vzeroupper; ret; 
0x00000000185429: vmovdqu [rdi+0x40], ymm6; vmovdqu [rdi+0x60], ymm7; vmovdqu [r11], ymm8; vzeroupper; ret; 
0x00000000184fd6: vmovdqu [rdi+0x60], ymm7; lea rax, [rdi+0x80]; vzeroupper; ret; 
0x000000001835a6: vmovdqu [rdi+0x60], ymm7; mov byte ptr [rdi+0x80], 0x0; vzeroupper; ret; 
0x0000000018542e: vmovdqu [rdi+0x60], ymm7; vmovdqu [r11], ymm8; vzeroupper; ret; 
0x000000001842a6: vmovdqu [rdi+0x60], ymm7; vzeroupper; ret; 
0x00000000184164: vmovdqu [rdi+r8-0x10], xmm0; vzeroupper; ret; 
0x00000000184def: vmovdqu [rdi+r8-0x10], xmm3; lea rax, [rdi+r8]; vzeroupper; ret; 
0x0000000018350f: vmovdqu [rdi+r8-0x10], xmm3; mov byte ptr [rdi+r8], 0x0; vzeroupper; ret; 
0x000000001840bf: vmovdqu [rdi+r8-0x10], xmm3; vzeroupper; ret; 
0x00000000184e0f: vmovdqu [rdi+r8-0x20], ymm3; lea rax, [rdi+r8]; vzeroupper; ret; 
0x0000000018352f: vmovdqu [rdi+r8-0x20], ymm3; mov byte ptr [rdi+r8], 0x0; vzeroupper; ret; 
0x000000001840df: vmovdqu [rdi+r8-0x20], ymm3; vzeroupper; ret; 
0x000000001856df: vmovdqu [rdi+rdx-0x10], xmm0; vmovdqu [rdi], xmm0; vzeroupper; ret; 
0x00000000185200: vmovdqu [rdi+rdx-0x10], xmm1; ret; 
0x0000000018473e: vmovdqu [rdi+rdx-0x1f], ymm3; lea rax, [rdi+rdx]; vzeroupper; ret; 
0x00000000182c8e: vmovdqu [rdi+rdx-0x1f], ymm3; vzeroupper; ret; 
0x00000000185649: vmovdqu [rdi+rdx-0x20], ymm0; vmovdqu [rdi+rdx-0x40], ymm0; vzeroupper; ret; 
0x000000001855c0: vmovdqu [rdi+rdx-0x20], ymm0; vmovdqu [rdi], ymm0; vzeroupper; ret; 
0x00000000185139: vmovdqu [rdi+rdx-0x20], ymm1; vzeroupper; ret; 
0x000000001852d1: vmovdqu [rdi+rdx-0x20], ymm2; vmovdqu [rdi+rdx-0x40], ymm3; vzeroupper; ret; 
0x0000000018564f: vmovdqu [rdi+rdx-0x40], ymm0; vzeroupper; ret; 
0x000000001852d7: vmovdqu [rdi+rdx-0x40], ymm3; vzeroupper; ret; 
0x0000000018529d: vmovdqu [rdi+rdx-0x40], ymm5; vmovdqu [rdi+rdx-0x60], ymm6; vmovdqu [rdi+rdx-0x80], ymm7; vzeroupper; ret; 
0x000000001852a3: vmovdqu [rdi+rdx-0x60], ymm6; vmovdqu [rdi+rdx-0x80], ymm7; vzeroupper; ret; 
0x000000001852a9: vmovdqu [rdi+rdx-0x80], ymm7; vzeroupper; ret; 
0x0000000018471e: vmovdqu [rdi+rdx-0xf], xmm3; lea rax, [rdi+rdx]; vzeroupper; ret; 
0x00000000182c6e: vmovdqu [rdi+rdx-0xf], xmm3; vzeroupper; ret; 
0x000000001895ba: vmovdqu [rdi], xmm0; vmovdqu [r9-0x10], xmm1; ret; 
0x00000000184160: vmovdqu [rdi], xmm0; vmovdqu [rdi+r8-0x10], xmm0; vzeroupper; ret; 
0x000000001851fc: vmovdqu [rdi], xmm0; vmovdqu [rdi+rdx-0x10], xmm1; ret; 
0x00000000189c99: vmovdqu [rdi], xmm0; vmovdqu [rsi-0x10], xmm0; ret; 
0x000000001856e5: vmovdqu [rdi], xmm0; vzeroupper; ret; 
0x00000000184deb: vmovdqu [rdi], xmm2; vmovdqu [rdi+r8-0x10], xmm3; lea rax, [rdi+r8]; vzeroupper; ret; 
0x0000000018350b: vmovdqu [rdi], xmm2; vmovdqu [rdi+r8-0x10], xmm3; mov byte ptr [rdi+r8], 0x0; vzeroupper; ret; 
0x000000001840bb: vmovdqu [rdi], xmm2; vmovdqu [rdi+r8-0x10], xmm3; vzeroupper; ret; 
0x0000000018471a: vmovdqu [rdi], xmm2; vmovdqu [rdi+rdx-0xf], xmm3; lea rax, [rdi+rdx]; vzeroupper; ret; 
0x00000000182c6a: vmovdqu [rdi], xmm2; vmovdqu [rdi+rdx-0xf], xmm3; vzeroupper; ret; 
0x000000001895a6: vmovdqu [rdi], ymm0; vmovdqu [r9-0x20], ymm1; ret; 
0x00000000189582: vmovdqu [rdi], ymm0; vmovdqu [rdi+0x20], ymm1; vmovdqu [r9-0x40], ymm2; vmovdqu [r9-0x20], ymm3; ret; 
0x00000000185135: vmovdqu [rdi], ymm0; vmovdqu [rdi+rdx-0x20], ymm1; vzeroupper; ret; 
0x000000001855c6: vmovdqu [rdi], ymm0; vzeroupper; ret; 
0x000000001840fc: vmovdqu [rdi], ymm2; vmovdqu [rdi+0x20], ymm3; mov [rdi+0x40], cl; vzeroupper; ret; 
0x00000000184e0b: vmovdqu [rdi], ymm2; vmovdqu [rdi+r8-0x20], ymm3; lea rax, [rdi+r8]; vzeroupper; ret; 
0x0000000018352b: vmovdqu [rdi], ymm2; vmovdqu [rdi+r8-0x20], ymm3; mov byte ptr [rdi+r8], 0x0; vzeroupper; ret; 
0x000000001840db: vmovdqu [rdi], ymm2; vmovdqu [rdi+r8-0x20], ymm3; vzeroupper; ret; 
0x0000000018473a: vmovdqu [rdi], ymm2; vmovdqu [rdi+rdx-0x1f], ymm3; lea rax, [rdi+rdx]; vzeroupper; ret; 
0x00000000182c8a: vmovdqu [rdi], ymm2; vmovdqu [rdi+rdx-0x1f], ymm3; vzeroupper; ret; 
0x00000000189c8f: vmovdqu [rdi], ymm2; vmovdqu [rsi-0x20], ymm2; ret; 
0x00000000189c9d: vmovdqu [rsi-0x10], xmm0; ret; 
0x00000000189c93: vmovdqu [rsi-0x20], ymm2; ret; 
0x000000001895b1: vmovdqu xmm0, [rsi]; vmovdqu xmm1, [rcx-0x10]; vmovdqu [rdi], xmm0; vmovdqu [r9-0x10], xmm1; ret; 
0x000000001851f2: vmovdqu xmm0, [rsi]; vmovdqu xmm1, [rsi+rdx-0x10]; vmovdqu [rdi], xmm0; vmovdqu [rdi+rdx-0x10], xmm1; ret; 
0x000000001895b5: vmovdqu xmm1, [rcx-0x10]; vmovdqu [rdi], xmm0; vmovdqu [r9-0x10], xmm1; ret; 
0x000000001851f6: vmovdqu xmm1, [rsi+rdx-0x10]; vmovdqu [rdi], xmm0; vmovdqu [rdi+rdx-0x10], xmm1; ret; 
0x000000001840b4: vmovdqu xmm3, [rsi+r8-0x10]; vmovdqu [rdi], xmm2; vmovdqu [rdi+r8-0x10], xmm3; vzeroupper; ret; 
0x00000000182c64: vmovdqu xmm3, [rsi+rdx-0xf]; vmovdqu [rdi], xmm2; vmovdqu [rdi+rdx-0xf], xmm3; vzeroupper; ret; 
0x0000000018959d: vmovdqu ymm0, [rsi]; vmovdqu ymm1, [rcx-0x20]; vmovdqu [rdi], ymm0; vmovdqu [r9-0x20], ymm1; ret; 
0x000000001895a1: vmovdqu ymm1, [rcx-0x20]; vmovdqu [rdi], ymm0; vmovdqu [r9-0x20], ymm1; ret; 
0x0000000018512f: vmovdqu ymm1, [rsi+rdx-0x20]; vmovdqu [rdi], ymm0; vmovdqu [rdi+rdx-0x20], ymm1; vzeroupper; ret; 
0x000000001840d4: vmovdqu ymm3, [rsi+r8-0x20]; vmovdqu [rdi], ymm2; vmovdqu [rdi+r8-0x20], ymm3; vzeroupper; ret; 
0x00000000182c84: vmovdqu ymm3, [rsi+rdx-0x1f]; vmovdqu [rdi], ymm2; vmovdqu [rdi+rdx-0x1f], ymm3; vzeroupper; ret; 
0x0000000018a186: vmovdqu64 [r11], zmm4; vzeroupper; ret; 
0x0000000018a24c: vmovdqu64 [r11], zmm8; vzeroupper; ret; 
0x0000000018a178: vmovdqu64 [rcx-0x80], zmm7; vmovdqu64 [rcx-0xc0], zmm8; vmovdqu64 [r11], zmm4; vzeroupper; ret; 
0x0000000018a17f: vmovdqu64 [rcx-0xc0], zmm8; vmovdqu64 [r11], zmm4; vzeroupper; ret; 
0x0000000018a4e3: vmovdqu64 [rdi+0x40], zmm0; vmovdqu64 [rdi+rdx-0x40], zmm0; vmovdqu64 [rdi+rdx-0x80], zmm0; vzeroupper; ret; 
0x0000000018a09e: vmovdqu64 [rdi+0x40], zmm1; vmovdqu64 [rdi+rdx-0x40], zmm2; vmovdqu64 [rdi+rdx-0x80], zmm3; vzeroupper; ret; 
0x0000000018a23e: vmovdqu64 [rdi+0x80], zmm6; vmovdqu64 [rdi+0xc0], zmm7; vmovdqu64 [r11], zmm8; vzeroupper; ret; 
0x0000000018a245: vmovdqu64 [rdi+0xc0], zmm7; vmovdqu64 [r11], zmm8; vzeroupper; ret; 
0x0000000018a06f: vmovdqu64 [rdi+rdx-0x100], zmm7; vzeroupper; ret; 
0x0000000018a4ea: vmovdqu64 [rdi+rdx-0x40], zmm0; vmovdqu64 [rdi+rdx-0x80], zmm0; vzeroupper; ret; 
0x0000000018a44d: vmovdqu64 [rdi+rdx-0x40], zmm0; vmovdqu64 [rdi], zmm0; vzeroupper; ret; 
0x00000000189ec2: vmovdqu64 [rdi+rdx-0x40], zmm1; vzeroupper; ret; 
0x0000000018a0a5: vmovdqu64 [rdi+rdx-0x40], zmm2; vmovdqu64 [rdi+rdx-0x80], zmm3; vzeroupper; ret; 
0x0000000018a4f2: vmovdqu64 [rdi+rdx-0x80], zmm0; vzeroupper; ret; 
0x0000000018a0ad: vmovdqu64 [rdi+rdx-0x80], zmm3; vzeroupper; ret; 
0x0000000018a05f: vmovdqu64 [rdi+rdx-0x80], zmm5; vmovdqu64 [rdi+rdx-0xc0], zmm6; vmovdqu64 [rdi+rdx-0x100], zmm7; vzeroupper; ret; 
0x0000000018a067: vmovdqu64 [rdi+rdx-0xc0], zmm6; vmovdqu64 [rdi+rdx-0x100], zmm7; vzeroupper; ret; 
0x00000000189ebc: vmovdqu64 [rdi], zmm0; vmovdqu64 [rdi+rdx-0x40], zmm1; vzeroupper; ret; 
0x0000000018a455: vmovdqu64 [rdi], zmm0; vzeroupper; ret; 
0x00000000189eb4: vmovdqu64 zmm1, [rsi+rdx-0x40]; vmovdqu64 [rdi], zmm0; vmovdqu64 [rdi+rdx-0x40], zmm1; vzeroupper; ret; 
0x00000000189ca8: vmovq [rdi], xmm0; vmovq [rsi-0x8], xmm0; ret; 
0x00000000189cac: vmovq [rsi-0x8], xmm0; ret; 
0x000000001898b2: vmovups [r9+0x100], zmm12; vmovups [r9+0x140], zmm13; vmovups [r9+0x180], zmm14; vmovups [r9+0x1c0], zmm15; ret; 
0x000000001898b9: vmovups [r9+0x140], zmm13; vmovups [r9+0x180], zmm14; vmovups [r9+0x1c0], zmm15; ret; 
0x000000001898c0: vmovups [r9+0x180], zmm14; vmovups [r9+0x1c0], zmm15; ret; 
0x000000001898c7: vmovups [r9+0x1c0], zmm15; ret; 
0x0000000018974b: vmovups [r9-0x100], zmm12; vmovups [r9-0xc0], zmm13; vmovups [r9-0x80], zmm14; vmovups [r9-0x40], zmm15; ret; 
0x00000000189511: vmovups [r9-0x100], zmm4; vmovups [r9-0xc0], zmm5; vmovups [r9-0x80], zmm6; vmovups [r9-0x40], zmm7; ret; 
0x00000000189760: vmovups [r9-0x40], zmm15; ret; 
0x00000000189562: vmovups [r9-0x40], zmm3; ret; 
0x00000000189526: vmovups [r9-0x40], zmm7; ret; 
0x00000000189759: vmovups [r9-0x80], zmm14; vmovups [r9-0x40], zmm15; ret; 
0x0000000018955b: vmovups [r9-0x80], zmm2; vmovups [r9-0x40], zmm3; ret; 
0x0000000018951f: vmovups [r9-0x80], zmm6; vmovups [r9-0x40], zmm7; ret; 
0x00000000189752: vmovups [r9-0xc0], zmm13; vmovups [r9-0x80], zmm14; vmovups [r9-0x40], zmm15; ret; 
0x00000000189518: vmovups [r9-0xc0], zmm5; vmovups [r9-0x80], zmm6; vmovups [r9-0x40], zmm7; ret; 
0x00000000189554: vmovups [rdi+0x40], zmm1; vmovups [r9-0x80], zmm2; vmovups [r9-0x40], zmm3; ret; 
0x00000000189c61: vmovups [rdi+0x40], zmm2; vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x00000000189a14: vmovups [rdi-0x140], zmm12; vmovups [rdi-0x180], zmm13; vmovups [rdi-0x1c0], zmm14; vmovups [rdi-0x200], zmm15; ret; 
0x00000000189a1b: vmovups [rdi-0x180], zmm13; vmovups [rdi-0x1c0], zmm14; vmovups [rdi-0x200], zmm15; ret; 
0x00000000189a22: vmovups [rdi-0x1c0], zmm14; vmovups [rdi-0x200], zmm15; ret; 
0x00000000189a29: vmovups [rdi-0x200], zmm15; ret; 
0x0000000018954e: vmovups [rdi], zmm0; vmovups [rdi+0x40], zmm1; vmovups [r9-0x80], zmm2; vmovups [r9-0x40], zmm3; ret; 
0x00000000189c5b: vmovups [rdi], zmm2; vmovups [rdi+0x40], zmm2; vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x00000000189c7c: vmovups [rdi], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x00000000189e37: vmovups [rsi+0x100], zmm2; vmovups [rsi+0x140], zmm2; vmovups [rsi+0x180], zmm2; vmovups [rsi+0x1c0], zmm2; ret; 
0x00000000189e3e: vmovups [rsi+0x140], zmm2; vmovups [rsi+0x180], zmm2; vmovups [rsi+0x1c0], zmm2; ret; 
0x00000000189e45: vmovups [rsi+0x180], zmm2; vmovups [rsi+0x1c0], zmm2; ret; 
0x00000000189e4c: vmovups [rsi+0x1c0], zmm2; ret; 
0x00000000189da1: vmovups [rsi+0x40], zmm2; vmovups [rsi+0x80], zmm2; vmovups [rsi+0xc0], zmm2; ret; 
0x00000000189da8: vmovups [rsi+0x80], zmm2; vmovups [rsi+0xc0], zmm2; ret; 
0x00000000189daf: vmovups [rsi+0xc0], zmm2; ret; 
0x00000000189c39: vmovups [rsi-0x100], zmm2; vmovups [rsi-0xc0], zmm2; vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x00000000189c4e: vmovups [rsi-0x40], zmm2; ret; 
0x00000000189c47: vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x00000000189c40: vmovups [rsi-0xc0], zmm2; vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x00000000189d9b: vmovups [rsi], zmm2; vmovups [rsi+0x40], zmm2; vmovups [rsi+0x80], zmm2; vmovups [rsi+0xc0], zmm2; ret; 
0x00000000114eae: vpand ymm1, ymm15, [rdi]; lahf; ret; 
0x0000000017ec41: vpcmpeqb xmm0, xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000017e995: vpcmpeqb xmm2, xmm2, [rdi]; vpmovmskb eax, xmm2; sub eax, 0xffff; jne 0x000000000017e870; ret; 
0x0000000017e957: vpcmpeqb xmm2, xmm2, xmm1; vpmovmskb eax, xmm2; sub eax, 0xffff; jne 0x000000000017e870; ret; 
0x000000001858d5: vpcmpeqd xmm2, xmm2, [rdi]; vpmovmskb eax, xmm2; sub eax, 0xffff; jne 0x0000000000185820; ret; 
0x00000000185895: vpcmpeqd xmm2, xmm2, xmm1; vpmovmskb eax, xmm2; sub eax, 0xffff; jne 0x0000000000185820; ret; 
0x0000000017e95b: vpmovmskb eax, xmm2; sub eax, 0xffff; jne 0x000000000017e870; ret; 
0x00000000185899: vpmovmskb eax, xmm2; sub eax, 0xffff; jne 0x0000000000185820; ret; 
0x0000000017e51b: vpmovmskb eax, ymm1; bsr eax, eax; add rax, rdi; vzeroupper; ret; 
0x0000000017eaa8: vpmovmskb eax, ymm2; sub eax, 0xffffffff; jne 0x000000000017e870; vzeroupper; ret; 
0x000000001859e8: vpmovmskb eax, ymm2; sub eax, 0xffffffff; jne 0x0000000000185820; vzeroupper; ret; 
0x0000000017e863: vpmovmskb eax, ymm2; sub eax, 0xffffffff; jne short 0x000000000017e870; vzeroupper; ret; 
0x00000000185813: vpmovmskb eax, ymm2; sub eax, 0xffffffff; jne short 0x0000000000185820; vzeroupper; ret; 
0x0000000017e824: vptest ymm5, ymm0; jae 0x000000000017eac0; xor eax, eax; vzeroupper; ret; 
0x000000001857d8: vptest ymm5, ymm0; jae 0x0000000000185a00; xor eax, eax; vzeroupper; ret; 
0x0000000017d6a4: vzeroupper; ret; 
0x0000000017e230: vzeroupper; xor eax, eax; ret; 
0x000000000b740c: wrmsr; in eax, dx; mov [rdi+0x13], ch; ret; 
0x000000000b748e: wrmsr; in eax, dx; mov [rdi+0x17], ch; ret; 
0x000000000b7591: wrmsr; in eax, dx; mov [rdi+0x1f], ch; ret; 
0x00000000119990: wrpkru; xor eax, eax; ret; 
0x000000000e6bbe: xabort 0xff; jmp qword ptr [rsi+0xf]; 
0x0000000009b941: xabort 0xff; pop rbx; pop rbp; pop r12; ret; 
0x000000001656c6: xchg [rax*1+0x14634900], ah; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000062a19: xchg [rax+0x1], ecx; clc; notrack jmp rax; 
0x0000000008e833: xchg [rax+0x2], bl; add [rax], al; mov rdi, rbx; call qword ptr [rax+0x20]; 
0x0000000018e76f: xchg [rax+0x48000000], edi; lea edx, [rip+0x29f25]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000083df6: xchg [rax+0x48000000], esp; cmp dword ptr [rax+0x30], 0x0; je short 0x0000000000083e08; ret; 
0x00000000073a17: xchg [rax+0x48000006], bh; mov esi, [rbp-0x8c8]; mov rdx, r13; mov rdi, r14; call qword ptr [r12+0x38]; 
0x0000000008b2a7: xchg [rax+rax-0x2dcf0000], ah; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x00000000051a3c: xchg [rax+rax], al; add [rcx], dh; shr cl, 0xfd; idiv edi; jmp qword ptr [rsi+0xf]; 
0x0000000011f743: xchg [rax+rax], cl; add [rcx+rax*2-0x77], esp; sbb [rcx+rcx*4-0x40], ecx; pop rbx; ret; 
0x0000000011f668: xchg [rax+rax], cl; add [rcx+rcx*4-0x40], eax; add rsp, 0x8; ret; 
0x0000000011a7d4: xchg [rax+rax], cl; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000011f6c2: xchg [rax+rax], cl; syscall; 
0x0000000011a674: xchg [rax+rax], ecx; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000011f557: xchg [rax+rax], ecx; syscall; 
0x0000000011f5f2: xchg [rax+rax], ecx; syscall; 
0x0000000005370f: xchg [rax-0x7d], cl; out dx, al; add [rbp-0x1e], esi; mov eax, 0x1; ret; 
0x000000000b8217: xchg [rax-0xd000000], edx; movq [rdi+rdx-0x10], mm0; movdqu [rdi], xmm0; ret; 
0x0000000011a075: xchg [rax], al; add [rax], al; syscall; 
0x000000001662c6: xchg [rax], bl; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000008e8e3: xchg [rax], cl; add al, [rax]; add [rsi-0x1], bh; mov rdi, rbx; call qword ptr [rax+0x18]; 
0x00000000079f7b: xchg [rax], eax; add [rax+0x39], cl; ret; 
0x0000000008e10d: xchg [rax], eax; add [rax], al; mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rbx+0x18]; 
0x000000001194e5: xchg [rax], eax; add [rax], al; syscall; 
0x000000001835ac: xchg [rax], eax; vzeroupper; ret; 
0x0000000008b4a6: xchg [rbp+0x2], ah; add [rax], al; lea rsi, [rsp+0x20]; mov rdi, rbp; call qword ptr [rax+0x90]; 
0x0000000008f4fe: xchg [rbp+0x31000001], cl; shl byte ptr [rcx], cl; test byte ptr [rax-0x77], 0xdf; call qword ptr [rax+0x58]; 
0x000000000b8fae: xchg [rbp+0x4cd575c9], eax; mov eax, eax; ret; 
0x00000000089360: xchg [rbx+0x1], bh; add [rax], al; mov rdi, rbx; call qword ptr [r13+0x60]; 
0x000000000879f0: xchg [rbx+0x48000001], cl; mov edi, ebx; call qword ptr [r13+0x60]; 
0x0000000018dd47: xchg [rbx+0x48000001], ebp; lea ecx, [rip+0x2a91d]; movsxd rbx, [rcx+rbx*4]; add rcx, rbx; notrack jmp rcx; 
0x000000000a8230: xchg [rbx+0x48000002], bl; add eax, edi; add rax, rcx; ret; 
0x0000000007ced0: xchg [rbx+0x48000002], ebp; lea edx, [rip+0x12b6f4]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000011c49f: xchg [rbx+rax], bh; add [rax-0x7d], cl; ret; 
0x0000000011d2d7: xchg [rbx-0x172ceffc], cl; and eax, 0x1; ret; 
0x00000000165fc6: xchg [rbx], bl; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000008f152: xchg [rcx+0x1], bh; add [rax], al; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rax+0x18]; 
0x0000000009c285: xchg [rcx+0x1], ebp; add [rax-0x73], cl; adc eax, 0xd2900; cmovne rax, rdx; ret; 
0x0000000007345a: xchg [rcx+0x4800000c], ah; mov esi, [rbp-0x8c8]; mov rdx, r13; mov rdi, r14; call qword ptr [rbx+0x38]; 
0x0000000008439a: xchg [rcx+0x4c000001], bh; mov edi, edi; call qword ptr [rax+0x20]; 
0x0000000007644a: xchg [rcx+0x4c000002], bl; mov edx, ebp; mov rsi, r14; mov rdi, rbp; call qword ptr [r12+0x38]; 
0x0000000007bfea: xchg [rcx+0x4c000002], dh; mov edx, edi; mov rsi, r12; mov rdi, rbp; call qword ptr [r14+0x38]; 
0x000000000725a2: xchg [rcx+0x5], ecx; add [rax], al; movsxd rcx, [rdx+rcx*4]; add rcx, rdx; notrack jmp rcx; 
0x00000000163005: xchg [rcx+0x5], ecx; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000860ff: xchg [rcx+rax], ah; add [rax], al; xor edx, edx; mov rdi, r15; call qword ptr [rbx+0x80]; 
0x000000000364b7: xchg [rcx+rax], eax; add [rdx+0x63], cl; or al, 0x8f; add rcx, rdi; notrack jmp rcx; 
0x00000000107bb5: xchg [rcx+rax], ecx; add [rax], al; mov [rsi], eax; xor eax, eax; ret; 
0x000000000bf650: xchg [rcx-0x41], eax; add [rax], al; add [rcx-0x39], cl; ret; 
0x000000001659c6: xchg [rcx], ah; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000167ec6: xchg [rcx], al; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000ceb25: xchg [rcx], dl; add [rbx-0x71f0fe08], al; ret; 
0x0000000007e7c4: xchg [rdi+0x1], dl; add [rax], al; xor esi, esi; mov rdi, rbp; call qword ptr [rbx+0x10]; 
0x0000000006164c: xchg [rdi+0x48000000], edi; lea ecx, [rip+0x144b28]; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x0000000007930c: xchg [rdi+0x48000009], bh; mov edx, ebx; mov rsi, r10; mov rdi, r15; call qword ptr [r13+0x38]; 
0x0000000003afed: xchg [rdi-0x72b7ffe6], esi; cmp eax, 0x1aa988; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000001653c6: xchg [rdi], ah; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000017e6f9: xchg [rdi], cl; mov ebp, 0xf80148c0; add rax, r8; vzeroupper; ret; 
0x000000000611d0: xchg [rdi], eax; cmp eax, 0x1; jg short 0x00000000000611d8; ret; 
0x00000000083c01: xchg [rdx+0x44000001], cl; mov esi, esp; mov rdi, r14; call qword ptr [rax+0x18]; 
0x00000000080e59: xchg [rdx+0x48000000], dl; mov edx, ebx; mov rsi, r12; call qword ptr [r14+0x38]; 
0x0000000007f6e9: xchg [rdx+0x4c000000], ah; mov edx, esp; mov rsi, rbp; mov rdi, rbx; call qword ptr [r13+0x38]; 
0x00000000072ef1: xchg [rdx+0x4c000013], dh; mov edx, esp; mov rsi, r13; mov rdi, r14; call qword ptr [rcx+0x38]; 
0x00000000103b5e: xchg [rdx+0x6348000a], al; add al, 0x82; add rax, rdx; notrack jmp rax; 
0x000000001918b5: xchg [rdx-0x17], ecx; call far fword ptr [rbx+0x4c]; 
0x0000000003d0c2: xchg [rdx], ebx; add [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x0000000008ff18: xchg [rip+0x156752], eax; cmp eax, 0x1; jg short 0x000000000008ff24; ret; 
0x0000000008d5a0: xchg [rip+0x1590ca], eax; cmp eax, 0x1; jg short 0x000000000008d5db; ret; 
0x000000000808b8: xchg [rip+0x165d72], eax; cmp eax, 0x1; jg short 0x00000000000808c4; ret; 
0x0000000007bba6: xchg [rip+0x4c00000b], dl; mov edx, edi; mov rsi, r12; mov rdi, rbp; call qword ptr [rax+0x38]; 
0x000000001665c6: xchg [rip+0x63490005], dl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000112b4a: xchg [rip+0xd4d00], eax; cmp eax, 0x1; jg short 0x0000000000112b60; ret; 
0x000000001850b5: xchg [rsi+0xffffffc], esi; test [rax+0x48fffffc], ah; mov eax, edi; vzeroupper; ret; 
0x00000000028e65: xchg [rsi+rcx], edx; cmp eax, 0xffffffff; je 0x0000000000028f58; add rsp, 0x98; ret; 
0x00000000157916: xchg [rsi-0x8], ch; jmp qword ptr [rsi+0xf]; 
0x00000000165cc6: xchg [rsi], bl; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000102cb6: xchg [rsi], dh; bnd jmp qword ptr [rsi+0xf]; 
0x000000000a354c: xchg ah, cl; adc al, [rax]; add [rax-0x77], cl; ret far; 
0x000000001687c6: xchg al, bh; add al, 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000008b873: xchg al, ch; add [rax], al; add [rcx+rcx*4-0x12], cl; mov rdi, rbx; call qword ptr [rbp+0x70]; 
0x000000000a3e8a: xchg al, cl; ret far; 
0x00000000135603: xchg al, dh; add [rax], al; add [rcx-0x77], al; ret; 
0x0000000006116e: xchg ax, ax; add dword ptr [rdx+0x4], 0x1; xor eax, eax; ret; 
0x000000000910ae: xchg ax, ax; and eax, 0xfffffffd; mov [rdi+0x8], eax; xor eax, eax; ret; 
0x000000000a892e: xchg ax, ax; bsr eax, eax; add rax, rdi; ret; 
0x000000001515ae: xchg ax, ax; endbr64; add [rdi+0x28], edx; mov eax, 0x1; ret; 
0x0000000008a40e: xchg ax, ax; endbr64; and dword ptr [rdi], 0xffffffcf; ret; 
0x000000001199fe: xchg ax, ax; endbr64; mov eax, 0x11f; syscall; 
0x00000000119b7e: xchg ax, ax; endbr64; mov eax, 0x131; syscall; 
0x0000000010e5ee: xchg ax, ax; endbr64; mov eax, 0x1; syscall; 
0x000000000d01de: xchg ax, ax; endbr64; mov eax, 0x24; syscall; 
0x000000000dfafe: xchg ax, ax; endbr64; mov eax, 0x27; syscall; 
0x0000000010891e: xchg ax, ax; endbr64; mov eax, 0x53; syscall; 
0x000000000dfdae: xchg ax, ax; endbr64; mov eax, 0x79; syscall; 
0x0000000010fd4e: xchg ax, ax; endbr64; mov eax, 0xaa; syscall; 
0x000000000ccd7e: xchg ax, ax; endbr64; mov eax, 0xc9; syscall; 
0x00000000119b3e: xchg ax, ax; endbr64; mov r10, rcx; mov eax, 0x137; syscall; 
0x00000000038f5e: xchg ax, ax; endbr64; mov rax, [rip+0x1a9e65]; add rax, fs:[0x0]; ret; 
0x0000000013c01e: xchg ax, ax; endbr64; mov rax, [rip+0xa6fbd]; mov rax, fs:[rax]; ret; 
0x0000000009b27e: xchg ax, ax; endbr64; ret; 
0x0000000008ee9e: xchg ax, ax; endbr64; xor eax, eax; ret; 
0x0000000017220e: xchg ax, ax; mov [rcx], dx; ret; 
0x0000000017223e: xchg ax, ax; mov [rcx], edx; mov [rcx+0x4], dl; ret; 
0x000000000b414e: xchg ax, ax; mov [rdi], dx; ret; 
0x000000000b417e: xchg ax, ax; mov [rdi], edx; mov [rdi+0x4], dl; ret; 
0x0000000017455e: xchg ax, ax; mov al, [rcx]; mov [rdx], al; lea rax, [rdx]; ret; 
0x000000000a4e3e: xchg ax, ax; mov byte ptr [rdi], 0x0; lea rax, [rdi+rax-0x1]; ret; 
0x00000000146f4e: xchg ax, ax; mov dword ptr [r8+0x4], 0x0; mov eax, 0x1; ret; 
0x000000000b315e: xchg ax, ax; mov dx, [rsi]; mov [rdi], dx; ret; 
0x000000000e0a6e: xchg ax, ax; mov eax, 0x7e; ret; 
0x000000000cb02e: xchg ax, ax; mov eax, [rdi+0x2c]; cmp eax, [rsi+0x2c]; jne short 0x00000000000cb090; ret; 
0x000000000cb07e: xchg ax, ax; mov eax, [rdi+0x3c]; cmp eax, [rsi+0x3c]; jne short 0x00000000000cb090; ret; 
0x000000000b47be: xchg ax, ax; mov edx, [rsi]; mov [rdi], edx; lea rax, [rdi+0x3]; ret; 
0x00000000182c1e: xchg ax, ax; mov edx, [rsi]; mov [rdi], edx; vzeroupper; ret; 
0x0000000014205e: xchg ax, ax; mov rax, [rbp+0x8]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x0000000014165e: xchg ax, ax; mov rax, [rbx+0x20]; mov rsi, r13; mov rdi, rbp; call qword ptr [rax+0x8]; 
0x000000001502ae: xchg ax, ax; mov rax, [rdi+0x8]; call qword ptr [rax+0x10]; 
0x0000000014fb4e: xchg ax, ax; mov rax, [rdi+0x8]; lea rsi, [rsp+0x8]; call qword ptr [rax]; 
0x0000000015a6be: xchg ax, ax; mov rax, [rip+0x88781]; mov dword ptr fs:[rax], 0x16; xor eax, eax; ret; 
0x0000000011471e: xchg ax, ax; mov rax, [rip+0xce721]; mov dword ptr fs:[rax], 0x16; ret; 
0x0000000010ba3e: xchg ax, ax; mov rax, [rip+0xd7401]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000720be: xchg ax, ax; mov rdx, r15; mov rsi, r12; mov rdi, rbp; call qword ptr [rax+0x38]; 
0x00000000042cfe: xchg ax, ax; mov rdx, rbp; mov rsi, r12; mov rdi, r13; call rbx; 
0x00000000089a4e: xchg ax, ax; mov rsi, rbx; mov edi, 0x2; mov eax, r9d; syscall; 
0x000000000b574e: xchg ax, ax; movdqu xmm0, [rsi]; movdqu [rdi], xmm0; lea rax, [rdi+0x10]; ret; 
0x000000000b48ee: xchg ax, ax; movdqu xmm0, [rsi]; movdqu [rdi], xmm0; lea rax, [rdi+0xf]; ret; 
0x000000000b7b5e: xchg ax, ax; rep ret; 
0x000000000363ce: xchg ax, ax; ret; 
0x0000000012355e: xchg ax, ax; sub eax, edx; ret; 
0x000000000611ce: xchg ax, ax; xchg [rdi], eax; cmp eax, 0x1; jg short 0x00000000000611d8; ret; 
0x000000000b721e: xchg ax, ax; xor ch, ch; mov [rdi], ch; ret; 
0x00000000110b7e: xchg ax, ax; xor eax, eax; add rsp, 0x8; ret; 
0x0000000007cd6e: xchg ax, ax; xor eax, eax; ret; 
0x000000000cb35e: xchg ax, ax; xor rax, rax; ret; 
0x00000000131132: xchg bh, bh; jmp qword ptr [rsi+0x2e]; 
0x000000001690c6: xchg bh, ch; add al, 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001684c6: xchg bl, bh; add al, 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000151097: xchg ch, bh; jmp qword ptr [rsi+0xf]; 
0x00000000151126: xchg ch, bh; jmp qword ptr [rsi+0xf]; 
0x00000000168ac6: xchg ch, dh; add al, 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000cdcc5: xchg ch, dh; dec dword ptr [rax-0x77]; ret; 
0x000000001681c6: xchg dh, bh; add al, 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000115c17: xchg dh, dh; jmp qword ptr [rsi+0xf]; 
0x00000000086991: xchg dl, bl; add [rax], al; add [rdx+0x1], bh; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x0000000008f8c1: xchg dl, bl; add [rax], al; add [rsi-0x1], bh; mov rdi, rbx; call qword ptr [r15+0x18]; 
0x00000000168dc6: xchg dl, dh; add al, 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000114bc7: xchg ebp, eax; add [rax], al; add [rcx-0x75], cl; jge short 0x0000000000114bcf; call rbx; 
0x000000000f50bb: xchg ebp, eax; add [rcx+rax-0x16], cl; notrack jmp rdx; 
0x000000001635f7: xchg ebp, eax; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000e5f87: xchg ebp, eax; add esi, esp; dec dword ptr [rax-0x77]; ret; 
0x000000001298c7: xchg ebp, eax; call far fword ptr gs:[rax+0x4c]; 
0x000000000c896a: xchg ebp, eax; idiv bh; jmp qword ptr [rsi-0x70]; 
0x00000000110b07: xchg ebp, eax; imul ecx, [rip+0x58d4800], 0x66; imul ecx, [rip-0x3b7cb800], 0x8; ret; 
0x000000000fa219: xchg ebp, eax; nop [rax+rax]; mov eax, 0x2; ret; 
0x00000000159888: xchg ebp, eax; or [rax], al; jmp qword ptr [rax+0x280]; 
0x000000000265a7: xchg ebp, eax; ret far; 
0x00000000048418: xchg ebp, eax; ret; 
0x0000000015017a: xchg ebp, eax; ror byte ptr [rax-0x77], 0x4; and al, 0x48; mov eax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x000000001122f8: xchg ebp, eax; ror byte ptr [rax-0x7d], 0xc4; or [rdi], cl; mov dh, 0xc0; ret; 
0x00000000150165: xchg ebp, eax; ror byte ptr [rcx+0x1b803], 0x0; add bl, ch; ret; 
0x0000000005e684: xchg ebp, eax; ror byte ptr [rcx-0x16efdbbc], 0x62; idiv bh; call qword ptr [rax+0x23ffbe8]; 
0x00000000144d52: xchg ebp, eax; ror byte ptr [rdi], 0xb6; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x5d], bl; ret; 
0x00000000060fa9: xchg ebp, eax; ror byte ptr [rdi], 0xb6; shl bh, 0xd8; pop rbp; ret; 
0x000000000fd3a2: xchg ebp, eax; ror byte ptr [rdi], 0xb6; shl bh, 0xd8; ret; 
0x00000000121709: xchg ebp, eax; sar byte ptr [rdi+0x2000001], 0x21; enter 0x4c88, 0x24; and [rax+0x411f2444], cl; call qword ptr [rsp+0x28]; 
0x0000000002a6d7: xchg ebp, eax; scasd [rdi]; sbb eax, [rax]; ret; 
0x0000000015018b: xchg ebp, eax; std; jmp qword ptr [rsi-0x70]; 
0x000000000f38e2: xchg ebp, eax; test [rax+rsi*2], ah; add [rax], eax; add [rax+0x9], cl; ret far; 
0x0000000013703e: xchg ebp, ebp; add [rax], al; add [rcx-0x77], al; ret far; 
0x00000000150f77: xchg ebp, edi; jmp qword ptr [rsi+0xf]; 
0x000000000d3a66: xchg ebp, esp; sar bh, cl; jmp qword ptr [rsi-0x7f]; 
0x00000000151006: xchg ebp, r15d; jmp qword ptr [rsi+0xf]; 
0x0000000003f2eb: xchg ebx, eax; add r10, r11; notrack jmp r10; 
0x00000000187014: xchg ebx, eax; add rcx, r11; notrack jmp rcx; 
0x0000000015f937: xchg ebx, eax; add rsi, rdx; add rdi, rdx; add r9, r11; notrack jmp r9; 
0x000000000dd02d: xchg ebx, eax; hlt; jmp qword ptr [rbp+rax*2-0x77]; 
0x000000000b300c: xchg ebx, eax; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000015fa72: xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001423db: xchg ebx, eax; mov rax, [rbp+0x8]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x0000000008e4a6: xchg ebx, eax; nop [rax+rax]; endbr64; mov eax, 0xffffffff; ret; 
0x00000000085398: xchg ebx, eax; nop; add [rax], al; add [rcx+0x1], cl; ret; 
0x0000000011e97b: xchg ebx, eax; or al, 0x0; syscall; 
0x000000000e952c: xchg ebx, eax; ret; 
0x00000000028dd8: xchg ebx, eax; sbb [rax], al; ret; 
0x000000000b636d: xchg ebx, eax; str [rcx+0x63]; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000008219f: xchg ebx, eax; xor r8d, r8d; mov rax, r8; ret; 
0x00000000077dea: xchg ecx, eax; add eax, 0x63480000; or al, 0x8a; add rcx, rdx; notrack jmp rcx; 
0x00000000149c7c: xchg ecx, eax; add rax, rcx; notrack jmp rax; 
0x00000000050e8a: xchg ecx, eax; add rdx, r9; notrack jmp rdx; 
0x0000000007cdde: xchg ecx, eax; add rdx, rcx; notrack jmp rdx; 
0x000000000fd3e3: xchg ecx, eax; bnd jmp qword ptr [rsi+0x2e]; 
0x00000000086dc3: xchg ecx, eax; call qword ptr [rdx]; 
0x0000000010f3b3: xchg ecx, eax; cmp cl, [rip+0x64d8f700]; mov [rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000017d3eb: xchg ecx, eax; cmpsd [rsi], [rdi]; call qword ptr [rax-0x5e1f00d]; 
0x0000000014b8bb: xchg ecx, eax; fdivp st(5), st; call qword ptr [rax-0x5e1f00d]; 
0x00000000108db3: xchg ecx, eax; mov al, [0x48028964d8f7000d]; mov eax, 0xffffffff; ret; 
0x0000000017b281: xchg ecx, eax; mov eax, [rcx+rax*4]; sub eax, edx; ret; 
0x00000000159d17: xchg ecx, eax; or [rax], al; mov r8, [rbx+0x10]; call qword ptr [rax+0x270]; 
0x000000000299fb: xchg ecx, eax; ret far; 
0x00000000189b5a: xchg ecx, eax; sar ch, 0xff; jmp qword ptr [rdx-0xf]; 
0x000000000bb342: xchg ecx, eax; stc; dec dword ptr [rax-0x7d]; ret; 
0x0000000015062c: xchg ecx, eax; std; call qword ptr [rax-0x5e1f00d]; 
0x00000000130333: xchg ecx, eax; std; jmp qword ptr [rdi+rax*8+0x45]; 
0x000000001799af: xchg ecx, eax; sub eax, edx; ret; 
0x000000000b83ed: xchg ecx, eax; sub edx, [rcx+rsi*4]; je short 0x00000000000b83d0; mov eax, edx; ret; 
0x00000000056768: xchg ecx, ebp; adc [rdx], eax; std; jmp qword ptr [rsi-0x70]; 
0x000000001473cb: xchg ecx, edi; jmp qword ptr [rsi+0xf]; 
0x00000000140033: xchg edi, eax; add [rax], eax; xor edi, edi; call qword ptr [rsp+0x70]; 
0x000000001633f5: xchg edi, eax; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000005328e: xchg edi, eax; add rdx, rdi; cmp esi, 0x2f; notrack jmp rdx; 
0x000000000a4d6c: xchg edi, eax; add rdx, rdi; notrack jmp rdx; 
0x000000000fd89c: xchg edi, eax; cmp dword ptr [rdi+0x14], 0x1000000; mov edx, 0x2; cmove eax, edx; ret; 
0x000000000896a0: xchg edi, eax; mov al, [0x4820428b48000000]; sub eax, [rdx+0x18]; sar rax, 0x2; ret; 
0x00000000089570: xchg edi, eax; mov al, [0x4838428b48000000]; sub eax, [rdx+0x30]; sar rax, 0x2; ret; 
0x0000000007f165: xchg edi, eax; mov al, [0xe08a8948000000]; add [rax], al; ret; 
0x000000000f9aa2: xchg edi, eax; mov byte ptr [rcx-0x7d], 0xf9; add al, [rcx+0xf]; xchg edi, eax; ret; 
0x000000000e7e44: xchg edi, eax; mov byte ptr [rdi+0x8], 0x1e; mov eax, 0x2; ret; 
0x0000000013f4df: xchg edi, eax; or al, [rax]; syscall; 
0x00000000109648: xchg edi, eax; or eax, 0x64d8f700; mov [rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001096c4: xchg edi, eax; or eax, 0x64d8f700; mov [rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000a3ebc: xchg edi, eax; ret far; 
0x000000000f9aaa: xchg edi, eax; ret; 
0x0000000011c15a: xchg edi, eax; ror byte ptr [rdi], 0xb6; shl bh, 0xd8; ret; 
0x0000000012f345: xchg edi, eax; xor eax, eax; ret; 
0x00000000130f9c: xchg edi, edi; call qword ptr [rax-0x5e1f00d]; 
0x0000000013104b: xchg edi, edi; jmp qword ptr [rsi-0x70]; 
0x00000000080e5a: xchg edx, eax; add [rax], al; add [rax-0x77], cl; fimul st, dword ptr [rcx+rcx*4-0x1a]; call qword ptr [r14+0x38]; 
0x000000000a0b3c: xchg edx, eax; add [rax], al; add [rcx-0x77], cl; ret; 
0x00000000142bbb: xchg edx, eax; add [rax], eax; add [rax-0x75], cl; and al, 0x30; call rax; 
0x000000000c298a: xchg edx, eax; fdiv st(7), st; jmp qword ptr [rsi-0x70]; 
0x0000000007afe2: xchg edx, eax; idiv edi; jmp qword ptr [rsi+0x2e]; 
0x0000000011d233: xchg edx, eax; lock dec dword ptr [rax-0x77]; ret; 
0x00000000053177: xchg edx, eax; mov [rax], al; add [rax], al; xor eax, eax; ret; 
0x00000000141558: xchg edx, eax; nop [rax]; endbr64; ret; 
0x0000000011eabb: xchg edx, eax; or al, 0x0; syscall; 
0x00000000129b68: xchg edx, eax; or eax, [rax]; add rax, fs:[0x0]; ret; 
0x0000000018e86e: xchg edx, eax; ret; 
0x0000000015048c: xchg edx, eax; std; call qword ptr [rax-0x5e1f00d]; 
0x0000000004d6ff: xchg edx, eax; std; jmp qword ptr [rsi+0xf]; 
0x00000000178707: xchg edx, eax; sub eax, edx; ret; 
0x0000000005a9a7: xchg esi, eax; adc al, 0x0; add bh, al; test [rdi+rdi*8-0x1], esp; jmp qword ptr [rsi]; 
0x0000000014007f: xchg esi, eax; add [rax], eax; xor edi, edi; call qword ptr [rsp+0x70]; 
0x000000000b8524: xchg esi, eax; add rax, rsi; notrack jmp rax; 
0x0000000003f005: xchg esi, eax; add rdx, rsi; notrack jmp rdx; 
0x0000000009b4f0: xchg esi, eax; cli; jmp qword ptr [rsi+0x66]; 
0x00000000148c53: xchg esi, eax; enter 0x1, 0x0; add rsi, 0x38; jmp qword ptr [rax+0x18]; 
0x00000000156e06: xchg esi, eax; jns short 0x0000000000156e01; jmp qword ptr [rsi+0xf]; 
0x0000000007f0bc: xchg esi, eax; nop [rax]; xor r8d, r8d; mov rax, r8; ret; 
0x000000001597c5: xchg esi, eax; or [rax], al; mov rdi, [rdi]; call qword ptr [rax+0x278]; 
0x0000000015976c: xchg esi, eax; or [rax], al; mov rdi, [rsp]; mov rax, [rax+0x268]; jmp rax; 
0x000000000e0e88: xchg esi, eax; or al, 0x0; movsxd rax, [rdx+rbp*4]; add rax, rdx; notrack jmp rax; 
0x000000000a5006: xchg esi, eax; stc; jmp qword ptr [rsp+rax*2-0x77]; 
0x000000000b4f96: xchg esi, eax; str [r11+0x63]; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000003db5f: xchg esi, edi; jmp qword ptr [rsi+0xf]; 
0x000000000318b1: xchg esp, eax; add [rax], al; add [rax+0x39], cl; ret far; 
0x0000000003e918: xchg esp, eax; add [rax], al; add [rbx-0x7bf0fe08], al; ret; 
0x0000000003161d: xchg esp, eax; and al, 0x80; add [rax], al; add [rax+0x39], cl; ret; 
0x0000000005141d: xchg esp, eax; and al, 0x98; add [rax], al; add [rcx+0x1], cl; ret; 
0x000000000f4411: xchg esp, eax; and al, 0xa0; add [rax], eax; add [rcx], al; ret; 
0x0000000014ce5e: xchg esp, eax; in eax, dx; jmp qword ptr [rax+rcx*2-0x39]; 
0x0000000014ba58: xchg esp, eax; mov eax, [0xeb158d481e6affff]; mov al, [0x4c00000002beffff]; lea ecx, [rsp+0x14]; call qword ptr [rax]; 
0x0000000017c8e9: xchg esp, eax; or [rax], eax; add [rbp-0x77], cl; ret far; 
0x000000001199a4: xchg esp, eax; or al, 0x0; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000011e8c3: xchg esp, eax; or al, 0x0; syscall; 
0x0000000007609e: xchg esp, eax; out 0xff, eax; jmp qword ptr [rsi+0xf]; 
0x00000000144986: xchg esp, eax; rcr byte ptr [rbx+0x5d], 0xf; mov dh, 0xc0; pop r12; ret; 
0x00000000034f4a: xchg esp, eax; ret; 
0x000000000faffe: xchg esp, eax; ror byte ptr [rax-0x7d], 0xc4; adc [rbx+0x5d], bl; pop r12; ret; 
0x00000000151a0c: xchg esp, eax; ror byte ptr [rax-0x7d], 0xc4; or [rcx+rcx*4-0x40], al; ret; 
0x000000000503e3: xchg esp, eax; ror byte ptr [rax-0x7d], 0xc4; or [rdi], cl; mov dh, 0xc0; ret; 
0x000000000e0c4c: xchg esp, eax; ror byte ptr [rdi], 0xb6; ror byte ptr [rax-0x73], 0x44; add bh, bh; ret; 
0x0000000005dcf7: xchg esp, eax; shr cl, 0x66; idiv bh; jmp qword ptr [rsi-0x70]; 
0x0000000009c205: xchg r8d, eax; add [rax], al; lea rdx, [rip+0xc0d00]; cmovne rax, rdx; ret; 
0x0000000002a2c7: xchg r8d, eax; mov rdi, rbx; call rax; 
0x000000000bb341: xchg r9, rax; stc; dec dword ptr [rax-0x7d]; ret; 
0x0000000011d232: xchg rdx, rax; lock dec dword ptr [rax-0x77]; ret; 
0x000000001611f5: xlat [rbx]; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000012770c: xlat [rbx]; add eax, [rax]; cmovne rax, rdx; ret; 
0x0000000015f93d: xlat [rbx]; add r9, r11; notrack jmp r9; 
0x00000000162eb5: xlat [rbx]; add rax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000598d7: xlat [rbx]; cmp rax, 0x9; ja short 0x00000000000598b0; mov rax, r8; ret; 
0x0000000009f435: xlat [rbx]; fdivr st, st(7); dec dword ptr [rax-0x77]; ret; 
0x000000000b7e4c: xlat [rbx]; jb short 0x00000000000b7e52; rep movsb [rdi], [rsi]; ret; 
0x000000001565a5: xlat [rbx]; jg short 0x00000000001565a3; dec dword ptr [rax-0x77]; ret; 
0x00000000117097: xlat [rbx]; jne short 0x0000000000117088; mov rax, [rax+0x8]; ret; 
0x00000000189092: xlat [rbx]; lea r11, [rip+0x2e5f6]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000189018: xlat [rbx]; lea r11, [rip+0x2e670]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000188f89: xlat [rbx]; lea r11, [rip+0x2e6ff]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000188d7e: xlat [rbx]; lea r11, [rip+0x2e90a]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000188c4c: xlat [rbx]; lea r11, [rip+0x2ea3c]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000188b86: xlat [rbx]; lea r11, [rip+0x2eb02]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000188b08: xlat [rbx]; lea r11, [rip+0x2eb80]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000188a73: xlat [rbx]; lea r11, [rip+0x2ec15]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000188876: xlat [rbx]; lea r11, [rip+0x2ee12]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000188744: xlat [rbx]; lea r11, [rip+0x2ef44]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000188647: xlat [rbx]; lea r11, [rip+0x2f041]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000187a62: xlat [rbx]; lea r11, [rip+0x2fae6]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x000000001879e8: xlat [rbx]; lea r11, [rip+0x2fb60]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000187959: xlat [rbx]; lea r11, [rip+0x2fbef]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018774e: xlat [rbx]; lea r11, [rip+0x2fdfa]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018761c: xlat [rbx]; lea r11, [rip+0x2ff2c]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000187556: xlat [rbx]; lea r11, [rip+0x2fff2]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x000000001874d8: xlat [rbx]; lea r11, [rip+0x30070]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000187443: xlat [rbx]; lea r11, [rip+0x30105]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000187246: xlat [rbx]; lea r11, [rip+0x30302]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000187114: xlat [rbx]; lea r11, [rip+0x30434]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000187009: xlat [rbx]; lea r11, [rip+0x3053f]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x000000001695a0: xlat [rbx]; lea r11, [rip+0x4eaa8]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001693ed: xlat [rbx]; lea r11, [rip+0x4ee9b]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000167b48: xlat [rbx]; lea r11, [rip+0x50740]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001679e1: xlat [rbx]; lea r11, [rip+0x508a7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166a6c: xlat [rbx]; lea r11, [rip+0x510dc]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001668d9: xlat [rbx]; lea r11, [rip+0x514af]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000164cbb: xlat [rbx]; lea r11, [rip+0x52ccd]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165048: xlat [rbx]; lea r11, [rip+0x52d40]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000164eca: xlat [rbx]; lea r11, [rip+0x52ebe]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016250c: xlat [rbx]; lea r11, [rip+0x5547c]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162447: xlat [rbx]; lea r11, [rip+0x55541]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000015fb2c: xlat [rbx]; lea r11, [rip+0x57c9c]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000015fa67: xlat [rbx]; lea r11, [rip+0x57d61]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000009d665: xlat [rbx]; out dx, eax; or al, 0x0; cmovne rax, rdx; ret; 
0x000000000ad95d: xlat [rbx]; ret far; 
0x000000000a8294: xlat [rbx]; ret; 
0x00000000182025: xlat [rbx]; rol ch, cl; std; xlat [rbx]; ret; 
0x0000000017e1af: xlat [rbx]; rol dword ptr [rbp+0x311b75c0], 0xc0; vzeroupper; ret; 
0x000000000a8443: xlat [rbx]; rol dword ptr [rbp+0x315775c0], 0xc0; ret; 
0x000000000a88f6: xlat [rbx]; rol dword ptr [rbp+0x317475c0], 0xc0; ret; 
0x000000000a8925: xlat [rbx]; rol dword ptr [rbp+0x317575c0], 0xc0; ret; 
0x000000000a8413: xlat [rbx]; rol dword ptr [rbp-0x5c7af040], 0x0; add [rax], al; xor eax, eax; ret; 
0x000000000a8894: xlat [rbx]; ror dword ptr [rdi], 0xbd; ror byte ptr [rax+0x1], 0xf8; ret; 
0x0000000017e51d: xlat [rbx]; ror dword ptr [rdi], 0xbd; ror byte ptr [rax+0x1], 0xf8; vzeroupper; ret; 
0x000000000add25: xlat [rbx]; shl byte ptr [rsi+0xf], 0x1; outsd dx, [rsi]; ret; 
0x00000000118f9a: xlat [rbx]; shr rax, 0xc; xor al, al; or eax, edx; ret; 
0x0000000014bfa4: xlat [rbx]; std; jmp qword ptr [rsi+0xf]; 
0x000000000cb04c: xor [r11], r15b; xor [rbp+0x3d], r14b; ret; 
0x000000000a839d: xor [r14+0xf], r12b; xlat [rbx]; ret; 
0x00000000106e47: xor [r15], r9b; adc [rdi+0x40], eax; ret; 
0x0000000012120d: xor [r8+0x1], dil; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000014a58b: xor [r8+0x1], r15b; movups [r8], xmm1; ret; 
0x0000000008df02: xor [r8-0x77], cl; and [r9], sil; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x5d], bl; ret; 
0x000000000dfdf7: xor [r8], r10b; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x0000000008665e: xor [r9-0x29f0993f], r9b; or [r8+0xf6608cd], r8b; insb [rdi], dx; ret far; 
0x00000000108547: xor [rax+0x106], bh; syscall; 
0x0000000010e7b8: xor [rax+0x10], bh; syscall; 
0x00000000119897: xor [rax+0x145], bh; syscall; 
0x0000000012120e: xor [rax+0x1], bh; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000014a58c: xor [rax+0x1], bh; movups [r8], xmm1; ret; 
0x000000000e3b77: xor [rax+0x1], edi; ret; 
0x000000001554b6: xor [rax+0x39], ecx; ret; 
0x000000000f8a5b: xor [rax+0x63], cl; adc al, 0x96; add rdx, rsi; notrack jmp rdx; 
0x0000000011c545: xor [rax+0x63], cl; ret; 
0x00000000076113: xor [rax+0x63], cl; xor al, 0xb7; lea rdi, [rip-0x1337]; add rsi, rdi; jmp rsi; 
0x00000000075679: xor [rax+0x63], cl; xor al, 0xb7; lea rdi, [rip-0x89d]; add rsi, rdi; jmp rsi; 
0x00000000080596: xor [rax+0x63], ecx; ror dword ptr [rcx+rcx*4-0x12], cl; mov rdi, r15; call qword ptr [rbp+0x38]; 
0x0000000014d710: xor [rax+rax], al; add [rax], al; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x000000000b5bc7: xor [rax-0x73], cl; ret; 
0x00000000069abf: xor [rax-0x73], ecx; add [rax-0x77], rcx; lea edx, [rax-0x77000005]; add cl, [rax-0x7d]; ret; 
0x00000000097547: xor [rax-0x75], cl; add eax, 0x14b971; mov [rax], rdi; ret; 
0x0000000009325d: xor [rax-0x75], cl; add eax, 0x14fc5b; mov [rax], rdx; ret; 
0x000000001597c0: xor [rax-0x75], cl; add eax, 0x89670; mov rdi, [rdi]; call qword ptr [rax+0x278]; 
0x0000000014710d: xor [rax-0x75], cl; and al, 0x28; mov rdi, r12; call rcx; 
0x0000000008df03: xor [rax-0x77], cl; and [r9], sil; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x5d], bl; ret; 
0x00000000055db4: xor [rax-0x77], cl; or [r8+0x2], r15b; ret; 
0x00000000099f88: xor [rax-0x77], ecx; add ecx, [rax-0x7b]; ror byte ptr [rdi], 0x84; ret far; 
0x000000001149b3: xor [rax-0x77], ecx; out dx, eax; xor esi, esi; call r12; 
0x000000001190d4: xor [rax-0x78], al; cmp cl, [rcx+0x75c085c7]; fisttp word ptr [rcx+rcx*4-0x40], st; ret; 
0x00000000094af5: xor [rax-0x7b], cl; ror byte ptr [rdi], 0x84; ret; 
0x0000000005df3f: xor [rax-0x7d], cl; ret; 
0x0000000002c885: xor [rax-0x7d], ecx; ret; 
0x00000000040e14: xor [rax], ah; sbb al, [rax]; mov dword ptr fs:[rax], 0x22; add rsp, 0x8; ret; 
0x00000000052f9b: xor [rax], al; add [rax+0x9e], bh; syscall; 
0x00000000028ce4: xor [rax], al; add [rax], al; call rax; 
0x00000000044a51: xor [rax], al; add [rax], al; call rdx; 
0x00000000029025: xor [rax], al; add [rax], al; jmp rax; 
0x00000000045461: xor [rax], al; add [rax], al; mov fs:[rbx], rdx; mov rdi, [rbp+0x8]; call rax; 
0x00000000137acf: xor [rax], al; add [rax], al; mov qword ptr [rsp], 0x0; call rax; 
0x000000000d9258: xor [rax], al; add [rax], al; pop r13; pop r14; jmp rax; 
0x000000000b8574: xor [rax], al; add [rax], al; pop rbx; ret; 
0x000000000284a7: xor [rax], al; add [rax], al; rol rax, 0x11; mov [rip+0x1be192], rax; ret; 
0x0000000011a905: xor [rax], al; add [rax], al; syscall; 
0x00000000045e44: xor [rax], al; add [rcx-0x1e], al; jg short 0x0000000000045dd7; adc [rcx-0x3f76bbea], cl; ret; 
0x00000000083dfe: xor [rax], al; je short 0x0000000000083e08; ret; 
0x000000000b7627: xor [rax], dh; in eax, dx; mov [rdi+0x40], ch; ret; 
0x000000000dfdc8: xor [rax], dl; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x0000000011a2f5: xor [rax], eax; add [rax], al; syscall; 
0x000000000c6fe1: xor [rbp+0x31], al; shr byte ptr [rdx+0x1], 0x6a; add [rbx+rcx*4+0x4c], cl; and al, 0x10; call r13; 
0x000000000cb050: xor [rbp+0x3d], dh; ret; 
0x000000000cb04f: xor [rbp+0x3d], r14b; ret; 
0x000000000b80c9: xor [rbp+0xf], al; adc [rbx], eax; ret; 
0x000000000cf653: xor [rbx+0x11], edi; add bl, ch; or [rax-0x7d], ecx; ret; 
0x000000000e1db3: xor [rbx+0x187414fe], al; test r15, r15; je short 0x00000000000e1dc8; mov rdi, rbx; call r15; 
0x000000000fb9c3: xor [rbx+0x187414fe], al; test r15, r15; je short 0x00000000000fb9d8; mov rdi, rbx; call r15; 
0x0000000003f836: xor [rbx+0x5d], bl; pop r12; pop r13; pop r14; ret; 
0x0000000008d87e: xor [rbx+0x5d], bl; pop r12; ret; 
0x0000000011087a: xor [rbx+0xf4c0870], cl; ror dword ptr [r8-0x77], 0x1; and al, 0x20; mov eax, 0x65; syscall; 
0x00000000157175: xor [rbx+rcx*4+0x2d], cl; ret far; 
0x0000000008f00d: xor [rbx-0x3f8a0008], al; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000007d023: xor [rbx-0x79f0f607], al; ret far; 
0x000000000d290c: xor [rbx-0x79f0f608], al; add [r8], eax; add [rax-0x41], cl; ret; 
0x0000000014d6a0: xor [rbx], al; add [rax], al; add [rdi], cl; adc [rsp+0x18], eax; call qword ptr [rax+0x18]; 
0x000000000cb04d: xor [rbx], bh; xor [rbp+0x3d], r14b; ret; 
0x0000000014c9ff: xor [rcx+0x55], al; push r12; lea r9, [rsp+0x3a]; call qword ptr [rax]; 
0x00000000083e5c: xor [rcx+0x5d5b7453], cl; pop r12; ret; 
0x0000000010ed13: xor [rcx+0xd], eax; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x2]; mov eax, 0xffffffff; ret; 
0x00000000085a7b: xor [rcx+rcx*4-0x1], cl; call qword ptr [r14+0x90]; 
0x00000000190b1a: xor [rcx+rcx*4-0x20], cl; pop r12; ret; 
0x000000001151aa: xor [rcx+rcx*4-0x9], cl; mov rax, [rbp-0x58]; mov r15d, r13d; call rax; 
0x00000000108d13: xor [rcx-0x2708fff3], esp; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000011a513: xor [rcx-0x2708fff4], ecx; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000008665f: xor [rcx-0x29f0993f], cl; or [r8+0xf6608cd], r8b; insb [rdi], dx; ret far; 
0x000000000c9205: xor [rcx-0x43], al; add [rax], al; add [rax-0x77], cl; ret; 
0x0000000012669d: xor [rcx-0x76b37fab], cl; loop 0x00000000001266b4; adc [rbp-0x78], edi; call rax; 
0x0000000012686f: xor [rcx-0x76b37fab], cl; loop 0x0000000000126886; adc [rbp-0x78], edi; call rax; 
0x000000000d43f5: xor [rcx-0x77], al; ret; 
0x0000000005dbba: xor [rcx-0x77], cl; ret; 
0x0000000018dd03: xor [rcx-0x7cb7fffe], ebp; ret far; 
0x0000000014d8b0: xor [rcx], al; add [rax], al; add [rdi], cl; adc [rsp+0x18], eax; call qword ptr [rax+0x18]; 
0x0000000008abf4: xor [rcx], al; add [rax], al; mov rsi, rsp; mov rdi, rbp; call qword ptr [r15+0x90]; 
0x00000000109fba: xor [rcx], al; add [rax], al; pop rbp; ret; 
0x00000000119801: xor [rcx], al; add [rax], al; syscall; 
0x00000000119b85: xor [rcx], eax; add [rax], al; syscall; 
0x00000000107e1e: xor [rcx], esi; shl byte ptr [rcx], cl; test byte ptr [rax-0x77], 0xef; call rax; 
0x0000000003401c: xor [rdi+0xf], dl; add bl, dh; nop edx, edi; mov rax, [rip+0x1b1685]; ret; 
0x00000000106e48: xor [rdi], cl; adc [rdi+0x40], eax; ret; 
0x00000000149bbb: xor [rdi], cl; adc [rsi], eax; mov rax, [rax+0x40]; mov [rsi+0x10], rax; ret; 
0x0000000015790c: xor [rdx+0xabfffee], ah; add [rax], al; add al, ch; xchg [rsi-0x8], ch; jmp qword ptr [rsi+0xf]; 
0x0000000009d51b: xor [rdx+0xe], esi; add dh, dh; mov byte ptr [rcx], 0x74; ret far; 
0x000000000d8f0a: xor [rdx], al; add [rax], al; test rax, rax; je short 0x00000000000d8f40; call rax; 
0x0000000010fd68: xor [rip+0x64d8f700], cl; mov [rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000014d780: xor [rip+0xf000000], al; adc [rsp+0x18], eax; call qword ptr [rax+0x18]; 
0x000000000adcec: xor [rsi+0xf], ah; outsd dx, [rsi]; ret; 
0x000000000a839e: xor [rsi+0xf], ah; xlat [rbx]; ret; 
0x0000000014b16a: xor [rsi], eax; add [rax-0x77], cl; ret; 
0x000000000b2a98: xor ah, ah; mov [rdx+0x10], ah; mov rax, rdi; ret; 
0x000000000b2a2e: xor ah, ah; mov [rdx+0x8], ah; mov rax, rdi; ret; 
0x0000000011a3c5: xor al, 0x0; add [rax], al; syscall; 
0x0000000007be3b: xor al, 0x1; add [rax], al; add [rax-0x77], cl; jmp rcx; 
0x000000000caf58: xor al, 0x1; add [rax], al; ret; 
0x0000000011a135: xor al, 0x1; add [rax], al; syscall; 
0x00000000028c33: xor al, 0x24; mov edi, [rsp+0xc]; mov rdx, [rax]; call rbp; 
0x0000000011982b: xor al, 0x24; mov r8d, eax; mov edi, [rsp+0x8]; mov eax, 0x130; syscall; 
0x0000000011a35b: xor al, 0x24; mov r8d, eax; mov edi, [rsp+0x8]; mov eax, 0x2a; syscall; 
0x00000000028ca6: xor al, 0x24; mov rdx, [rax]; mov rax, [rsp+0x10]; call rax; 
0x0000000007a365: xor al, 0x24; mov rdx, rbx; mov rdi, rbp; call qword ptr [r12+0x38]; 
0x0000000009ed13: xor al, 0x24; pop r12; pop r13; pop r14; ret; 
0x00000000076112: xor al, 0x30; movsxd rsi, [rdi+rsi*4]; lea rdi, [rip-0x1337]; add rsi, rdi; jmp rsi; 
0x00000000075678: xor al, 0x30; movsxd rsi, [rdi+rsi*4]; lea rdi, [rip-0x89d]; add rsi, rdi; jmp rsi; 
0x00000000093328: xor al, 0x31; shr al, 0xa0; leave; cld; jmp qword ptr [rbx+rcx*4+0x4]; 
0x0000000004091d: xor al, 0x48; and ecx, edx; or rcx, rax; movq xmm0, rcx; ret; 
0x000000000a89ab: xor al, 0x48; lea eax, [rdi+rax+0x20]; ret; 
0x0000000007dba8: xor al, 0x48; lea ecx, [rbx+0x40]; mov esi, 0x1; mov rdi, rbx; call r8; 
0x00000000187118: xor al, 0x4; add eax, [rax]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x000000001623d8: xor al, 0x57; add eax, 0xc634f00; mov ecx, [rdi-0x73]; or al, 0xb; notrack jmp r9; 
0x000000000ee5b8: xor al, 0x7f; call far fword ptr [rbx+0x31]; 
0x0000000017e64b: xor al, 0x83; shl byte ptr [rax], 0x48; add eax, edi; vzeroupper; ret; 
0x0000000003b698: xor al, 0xa3; sbb al, [rax]; syscall; 
0x0000000018646c: xor al, 0xa; jne 0x0000000000186209; vzeroupper; ret; 
0x00000000075500: xor al, 0xb2; add rsi, rbx; mov rbx, rcx; mov ecx, 0x1; jmp rsi; 
0x00000000074b98: xor al, 0xb2; add rsi, rbx; mov rbx, rcx; xor ecx, ecx; jmp rsi; 
0x000000000758a0: xor al, 0xb2; add rsi, rbx; mov rbx, rdx; xor edx, edx; jmp rsi; 
0x0000000007627f: xor al, 0xb3; lea rbx, [rip-0x14a0]; add rsi, rbx; mov rbx, rdi; jmp rsi; 
0x000000000755a9: xor al, 0xb3; lea rbx, [rip-0x7ca]; add rsi, rbx; mov rbx, rdi; jmp rsi; 
0x00000000075762: xor al, 0xb3; lea rbx, [rip-0x983]; add rsi, rbx; mov rbx, rdi; jmp rsi; 
0x000000000757f2: xor al, 0xb3; lea rbx, [rip-0xa13]; add rsi, rbx; mov rbx, rdi; jmp rsi; 
0x0000000007598a: xor al, 0xb3; lea rbx, [rip-0xbab]; add rsi, rbx; mov rbx, rdi; jmp rsi; 
0x00000000075a88: xor al, 0xb3; lea rbx, [rip-0xca9]; add rsi, rbx; mov rbx, [rsp+0x80]; jmp rsi; 
0x00000000075ae2: xor al, 0xb3; lea rbx, [rip-0xd03]; add rsi, rbx; mov rbx, rdi; jmp rsi; 
0x0000000007d788: xor al, 0xb7; add rsi, rdi; notrack jmp rsi; 
0x00000000076116: xor al, 0xb7; lea rdi, [rip-0x1337]; add rsi, rdi; jmp rsi; 
0x0000000007567c: xor al, 0xb7; lea rdi, [rip-0x89d]; add rsi, rdi; jmp rsi; 
0x00000000055ba4: xor al, 0xb8; add [rax], eax; add [rax], al; mov [rdi], rdx; ret; 
0x0000000007d4eb: xor al, 0xbe; add [rax], eax; add [rax], al; mov rdi, rbx; call rax; 
0x0000000013ab19: xor al, 0xe9; ud0 edi, edi; call qword ptr [rax+0x200045f6]; 
0x00000000186469: xor al, 0xe; cmp esi, [rdx+rcx]; jne 0x0000000000186209; vzeroupper; ret; 
0x000000001430e7: xor al, 0xee; dec dword ptr [rax-0x75]; or [r14+0x8], r15b; mov rdi, rbp; call qword ptr [rax+0x30]; 
0x000000000b5c5d: xor al, 0xf; add [rbx+0x63], cl; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000156311: xor al, 0xfd; jmp qword ptr [rsi+0x66]; 
0x0000000011a455: xor al, [rax]; add [rax], al; syscall; 
0x0000000006114d: xor al, [rbp+0x481675c0]; mov edx, [rdi+0x88]; mov [rdx+0x8], rcx; mov dword ptr [rdx+0x4], 0x1; ret; 
0x000000001764aa: xor al, [rbx]; add [rax], al; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x00000000110255: xor al, [rcx]; add [rax], al; syscall; 
0x00000000138522: xor al, [rcx]; or eax, [rax]; syscall; 
0x00000000118f9f: xor al, al; or eax, edx; ret; 
0x000000000935f2: xor al, ch; fadd st, st(6); cld; call far fword ptr [rax+0x5a]; 
0x000000001438b1: xor al, ch; mov ecx, 0x4c0000da; mov eax, esp; pop r12; ret; 
0x00000000105854: xor al, ch; ret; 
0x000000000d5ab7: xor al, ch; ret; 
0x0000000009add2: xor al, cl; adc al, 0x0; syscall; 
0x0000000010d4bc: xor ax, ax; ret; 
0x000000000e3b56: xor bh, [rax+0x1]; ret; 
0x00000000089b7d: xor bh, [rax-0x1]; test edx, edx; je short 0x0000000000089b90; ret; 
0x00000000089f9d: xor bh, [rax-0x1]; test edx, edx; je short 0x0000000000089fb0; ret; 
0x0000000012031a: xor bh, [rbx+0xc]; add [rdi], cl; add eax, 0xffff75e9; jmp qword ptr [rsi+0x2e]; 
0x00000000141f6f: xor bh, bh; xor eax, 0x74be2; push qword ptr [rip+0x74bd4]; lea r9, [rsp+0x2c]; call qword ptr [rax]; 
0x00000000133230: xor bh, ch; dec dword ptr [rax-0x77]; ret; 
0x00000000156524: xor bh, ch; jmp qword ptr [rsi+0xf]; 
0x0000000009b49f: xor bh, dh; jmp qword ptr [rsi+0xf]; 
0x00000000040be2: xor bl, 0xf; adc [rdi], eax; movd xmm0, esi; ret; 
0x0000000015a6ba: xor bl, [rbp-0x11]; jmp qword ptr [rsi-0x70]; 
0x000000000a89d0: xor bl, al; nop [rax+rax]; nop [rax]; xor eax, eax; ret; 
0x00000000126b31: xor bl, al; nop [rax]; xor eax, eax; ret; 
0x000000000a84cc: xor bl, al; xchg ax, ax; xor eax, eax; ret; 
0x00000000105a24: xor bl, dh; jmp qword ptr [rsi+0xf]; 
0x000000000b8e6c: xor bl, dl; or al, 0x0; cmovne rax, rdx; ret; 
0x00000000143809: xor byte ptr [rax+0x1000023], 0x0; add [rax], al; mov rax, [rax+0x23b8]; mov rdi, r12; call qword ptr [rax+0x28]; 
0x0000000009e382: xor byte ptr [rax+0x6], 0x2a; mov rax, r8; ret; 
0x00000000146fdf: xor byte ptr [rax+rax+0x1b80000], 0x0; add [rax], al; ret; 
0x00000000146fc2: xor byte ptr [rax+rax-0x37f10000], 0x89; ror byte ptr [rax-0x77], 0x2; mov eax, 0x1; ret; 
0x000000000d8f09: xor byte ptr [rax], 0x2; add [rax], al; test rax, rax; je short 0x00000000000d8f40; call rax; 
0x0000000010ccc9: xor byte ptr [rcx+rsi*8-0x4b841601], 0xf1; jmp qword ptr [rsi+0x66]; 
0x0000000018d3c2: xor ch, 0xff; jmp qword ptr [rsi+0x2e]; 
0x000000001290ba: xor ch, [rdx]; std; jmp qword ptr [rsi-0x70]; 
0x000000000b73b8: xor ch, ch; mov [rdi+0x10], ch; ret; 
0x000000000b73ce: xor ch, ch; mov [rdi+0x11], ch; ret; 
0x000000000b73f0: xor ch, ch; mov [rdi+0x12], ch; ret; 
0x000000000b740e: xor ch, ch; mov [rdi+0x13], ch; ret; 
0x000000000b742e: xor ch, ch; mov [rdi+0x14], ch; ret; 
0x000000000b7454: xor ch, ch; mov [rdi+0x15], ch; ret; 
0x000000000b7470: xor ch, ch; mov [rdi+0x16], ch; ret; 
0x000000000b7490: xor ch, ch; mov [rdi+0x17], ch; ret; 
0x000000000b74b0: xor ch, ch; mov [rdi+0x18], ch; ret; 
0x000000000b74d6: xor ch, ch; mov [rdi+0x19], ch; ret; 
0x000000000b7234: xor ch, ch; mov [rdi+0x1], ch; ret; 
0x000000000b74f8: xor ch, ch; mov [rdi+0x1a], ch; ret; 
0x000000000b7516: xor ch, ch; mov [rdi+0x1b], ch; ret; 
0x000000000b7536: xor ch, ch; mov [rdi+0x1c], ch; ret; 
0x000000000b7552: xor ch, ch; mov [rdi+0x1d], ch; ret; 
0x000000000b7572: xor ch, ch; mov [rdi+0x1e], ch; ret; 
0x000000000b7592: xor ch, ch; mov [rdi+0x1f], ch; ret; 
0x000000000b75b2: xor ch, ch; mov [rdi+0x20], ch; ret; 
0x000000000b75d8: xor ch, ch; mov [rdi+0x21], ch; ret; 
0x000000000b7246: xor ch, ch; mov [rdi+0x2], ch; ret; 
0x000000000b725c: xor ch, ch; mov [rdi+0x3], ch; ret; 
0x000000000b7628: xor ch, ch; mov [rdi+0x40], ch; ret; 
0x000000000b7274: xor ch, ch; mov [rdi+0x4], ch; ret; 
0x000000000b728a: xor ch, ch; mov [rdi+0x5], ch; ret; 
0x000000000b729c: xor ch, ch; mov [rdi+0x6], ch; ret; 
0x000000000b72ba: xor ch, ch; mov [rdi+0x7], ch; ret; 
0x000000000b72c6: xor ch, ch; mov [rdi+0x8], ch; ret; 
0x000000000b72dc: xor ch, ch; mov [rdi+0x9], ch; ret; 
0x000000000b72fe: xor ch, ch; mov [rdi+0xa], ch; ret; 
0x000000000b731c: xor ch, ch; mov [rdi+0xb], ch; ret; 
0x000000000b733c: xor ch, ch; mov [rdi+0xc], ch; ret; 
0x000000000b735e: xor ch, ch; mov [rdi+0xd], ch; ret; 
0x000000000b737e: xor ch, ch; mov [rdi+0xe], ch; ret; 
0x000000000b739e: xor ch, ch; mov [rdi+0xf], ch; ret; 
0x000000000b7220: xor ch, ch; mov [rdi], ch; ret; 
0x0000000017791d: xor cl, [rax-0x75]; add [rax-0x77], ecx; add cl, [rax-0x77]; clc; ret; 
0x000000001149c5: xor cl, [rax-0x77]; out dx, eax; mov edx, r13d; mov esi, 0x1; call r12; 
0x00000000114a55: xor cl, [rax-0x77]; out dx, eax; mov rdx, r13; mov esi, 0x1; call r12; 
0x000000000a3d92: xor cl, [rbp-0x77]; ret far; 
0x00000000101779: xor cl, [rbx]; add [rax-0x7d], cl; in al, dx; or al, ch; ret far; 
0x000000000bb059: xor cl, [rdi]; add al, ch; out dx, eax; fincstp; jmp qword ptr [rsi+0x66]; 
0x000000000f3047: xor cl, [rdi]; fimul st, word ptr [rax-0x7d]; rol dword ptr [rcx+rcx*2], 0x39; ret far; 
0x0000000009d6ba: xor cl, [rsi+0x315dfff8]; rol byte ptr [rcx+0x5c], 0x41; pop rbp; ret; 
0x000000000a047c: xor cl, ch; in eax, dx; idiv edi; jmp qword ptr [rsi+0xf]; 
0x0000000014c192: xor cl, ch; or [rax], eax; syscall; 
0x000000000bfb17: xor cl, ch; ret far; 
0x000000000b2910: xor cl, cl; mov [rax], cl; mov rax, rdi; ret; 
0x00000000075372: xor dh, 0xff; jmp qword ptr [rsi+0x2e]; 
0x000000000412da: xor dh, [rsp+rdx-0x3b7cb800]; sbb [rbx+0x5d], bl; ret; 
0x00000000155a00: xor dh, ch; jmp qword ptr [rsi+0x66]; 
0x00000000040836: xor dl, 0xf; adc [rdi], eax; and rdx, rax; movq xmm0, rdx; ret; 
0x000000000e1f19: xor dl, [rax+rax]; add [rax-0x77], cl; ret far; 
0x000000000dfb78: xor dl, [rax]; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x00000000026694: xor dl, [rbx]; add [rax-0x77], cl; ret; 
0x0000000014379d: xor dword ptr [rax+0x23], 0x0; add [rax], al; mov rdi, r12; call qword ptr [rax+0x28]; 
0x000000000448ae: xor eax, 0x1001a12; xor eax, eax; pop rbx; ret; 
0x0000000007ce7e: xor eax, 0x12b691; movzx edx, dl; movsxd rdx, [rsi+rdx*4]; add rdx, rsi; notrack jmp rdx; 
0x0000000007ba6d: xor eax, 0x12bb4e; movsxd rcx, [rsi+rcx*4]; lea rsi, [rip-0x125d]; add rcx, rsi; jmp rcx; 
0x0000000007b324: xor eax, 0x12c217; lea rdi, [rip-0xb10]; movsxd rcx, [rsi+rcx*4]; add rcx, rdi; jmp rcx; 
0x0000000006a989: xor eax, 0x13c42e; movsxd rax, [rsi+rbx*4]; add rax, rsi; notrack jmp rax; 
0x0000000009929f: xor eax, 0x14dbe4; jae short 0x0000000000099319; lea rax, [rax-0x8]; ret; 
0x000000000500db: xor eax, 0x160; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003effb: xor eax, 0x162fa0; mov edx, edx; movsxd rdx, [rsi+rdx*4]; add rdx, rsi; notrack jmp rdx; 
0x0000000007cc4c: xor eax, 0x1662f7; mov rdi, rsp; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000771c4: xor eax, 0x16bd7f; mov rdi, rsp; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000010e14b: xor eax, 0x20; mov [rsi+0x48], rax; ret; 
0x0000000008061f: xor eax, 0x25c; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000189f57: xor eax, 0x48000002; mov ecx, edx; rep movsb [rdi], [rsi]; ret; 
0x00000000038587: xor eax, 0x48001ad1; ror eax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000163357: xor eax, 0x49000546; movsxd edx, [rbx+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160197: xor eax, 0x49000576; movsxd edx, [rbx+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000141f77: xor eax, 0x74bd4; lea r9, [rsp+0x2c]; call qword ptr [rax]; 
0x00000000141f71: xor eax, 0x74be2; push qword ptr [rip+0x74bd4]; lea r9, [rsp+0x2c]; call qword ptr [rax]; 
0x00000000141e33: xor eax, 0x74d18; lea r9, [rsp+0x2c]; call qword ptr [rax]; 
0x00000000141e2d: xor eax, 0x74d26; push qword ptr [rip+0x74d18]; lea r9, [rsp+0x2c]; call qword ptr [rax]; 
0x0000000018a599: xor eax, 0x7701fa80; cmp dh, [rdx+0x2]; mov [rdi], cl; vzeroupper; ret; 
0x0000000015a941: xor eax, 0x8c542; ret; 
0x00000000041eb2: xor eax, 0x98c48148; add [rax], al; add [rbp+0x41], bl; pop rsp; ret; 
0x0000000010746f: xor eax, 0xa4dec; movups [rsp+0xc8], xmm0; mov [rsp+0xe8], eax; mov eax, 0xe; syscall; 
0x000000000da634: xor eax, 0xa8c48148; add [rax], al; add [rbp+0x41], bl; pop rsp; ret; 
0x000000000f59fb: xor eax, 0xb55b4; movsxd rax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x000000000e46ed: xor eax, 0xc62f2; movsxd rax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x000000000debee: xor eax, 0xcf5ef; mov eax, 0x142; syscall; 
0x000000000d6721: xor eax, 0xd37f6; mov edx, ecx; movsxd rax, [rsi+rdx*4]; add rax, rsi; notrack jmp rax; 
0x000000000d4292: xor eax, 0xd5a99; movzx edx, r10b; movsxd rdx, [rsi+rdx*4]; add rdx, rsi; notrack jmp rdx; 
0x000000000b8454: xor eax, 0xf1003; movsxd rax, [rsi+rdi*4]; add rax, rsi; notrack jmp rax; 
0x0000000008f770: xor eax, 0xffffdddb; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000008f3dc: xor eax, 0xffffe16f; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000008f0a4: xor eax, 0xffffe4a7; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000007ba78: xor eax, 0xffffeda3; add rcx, rsi; jmp rcx; 
0x00000000100ae5: xor eax, 0xfffff216; lea rdi, [rip+0xe6ad3]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000075796: xor eax, 0xfffff64d; mov dword ptr [rsp+0x48], 0x1; mov rbx, rdi; jmp rsi; 
0x0000000002bb67: xor eax, 0xfffff9e4; lea rdi, [rip+0x1b9b29]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000008db4e: xor eax, 0xfffff9fd; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000014d1f1: xor eax, 0xfffffbba; lea rdi, [rip+0x9bce3]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000013bac7: xor eax, 0xfffffbc4; lea rdi, [rip+0xace79]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000005285f: xor eax, 0xfffffc3c; lea rdi, [rip+0x193d5d]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000080c20: xor eax, 0xfffffc5b; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000014d121: xor eax, 0xfffffc8a; lea rdi, [rip+0x9bdb3]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000014d051: xor eax, 0xfffffd5a; lea rdi, [rip+0x9be83]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000014cf81: xor eax, 0xfffffe2a; lea rdi, [rip+0x9bf53]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000126db9: xor eax, 0xfffffeb2; lea rdi, [rip+0xc10e3]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000014cec9: xor eax, 0xfffffee2; lea rdi, [rip+0x9c00b]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000008d667: xor eax, 0xfffffee4; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000014147b: xor eax, 0xffffff00; lea rdi, [rip+0xa77f9]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000133405: xor eax, 0xffffffb6; lea rdi, [rip+0xb516b]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000028ce1: xor eax, [0x30]; call rax; 
0x00000000029022: xor eax, [0x30]; jmp rax; 
0x0000000004545e: xor eax, [0x30]; mov fs:[rbx], rdx; mov rdi, [rbp+0x8]; call rax; 
0x00000000137acc: xor eax, [0x30]; mov qword ptr [rsp], 0x0; call rax; 
0x000000000d9255: xor eax, [0x30]; pop r13; pop r14; jmp rax; 
0x000000000284a4: xor eax, [0x30]; rol rax, 0x11; mov [rip+0x1be192], rax; ret; 
0x0000000007f391: xor eax, [0x30]; test rax, rax; je short 0x000000000007f3a6; mov rdi, [rdi+0xe0]; jmp rax; 
0x0000000007f471: xor eax, [0x30]; test rax, rax; je short 0x000000000007f490; mov rdi, [rdi+0xe0]; jmp rax; 
0x000000001851e4: xor eax, [rax+0x3b7701fa]; jb short 0x00000000001851f1; movzx ecx, byte ptr [rsi]; mov [rdi], cl; ret; 
0x0000000011a3f5: xor eax, [rax]; add [rax], al; syscall; 
0x00000000112a08: xor eax, [rcx-0x7d]; call far fword ptr [rbx+0xf]; 
0x0000000011ade4: xor eax, [rcx]; add [rax], al; syscall; 
0x0000000014f66f: xor eax, eax; add r13, rbx; call rbp; 
0x0000000008a987: xor eax, eax; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000015c701: xor eax, eax; add rsp, 0x8; mov eax, r8d; ret; 
0x0000000012563e: xor eax, eax; add rsp, 0x8; pop rbp; pop r12; ret; 
0x00000000045c2b: xor eax, eax; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000090bf0: xor eax, eax; add rsp, 0x8; ret; 
0x00000000038d84: xor eax, eax; and edi, 0xffffff80; sete al; ret; 
0x00000000159177: xor eax, eax; call qword ptr [r12+0xf88]; 
0x0000000014232e: xor eax, eax; call qword ptr [rbx+0x18]; 
0x000000001423f0: xor eax, eax; call qword ptr [rbx+0x28]; 
0x00000000028cc7: xor eax, eax; call qword ptr [rdx+0x260]; 
0x0000000002987b: xor eax, eax; call rbx; 
0x00000000142bff: xor eax, eax; call rcx; 
0x000000000eacc8: xor eax, eax; cmp [rsi], cl; je 0x00000000000eac2d; ret; 
0x0000000011b348: xor eax, eax; cmp byte ptr [rcx], 0x0; je short 0x000000000011b350; ret; 
0x0000000004551a: xor eax, eax; cmp byte ptr [rdi], 0x0; jne short 0x0000000000045528; pop rbx; ret; 
0x00000000045519: xor eax, eax; cmp byte ptr [rdi], 0x0; jne short 0x0000000000045528; pop rbx; ret; 
0x000000000cb166: xor eax, eax; cmp eax, edx; jne short 0x00000000000cb170; mov eax, r8d; ret; 
0x000000000fd8c0: xor eax, eax; cmp ecx, 0xc0fe; setne al; lea eax, [rax+rax*8+0x5]; ret; 
0x0000000011cd04: xor eax, eax; cmp edi, 0x9; setbe r8b; mov eax, r8d; ret; 
0x000000000d0273: xor eax, eax; cmp edi, 0xa3d70b; setb al; add eax, 0x16d; ret; 
0x00000000141230: xor eax, eax; cmp edx, 0x1; jne short 0x0000000000141258; ret; 
0x00000000107c74: xor eax, eax; cmp edx, 0x4; je short 0x0000000000107c84; mov eax, 0x1c; syscall; 
0x0000000010e3b6: xor eax, eax; cmp esi, 0x9; je short 0x000000000010e3e8; mov eax, 0x48; syscall; 
0x000000000895b7: xor eax, eax; cmp qword ptr [rdi+0x18], 0x0; setne r8b; mov eax, r8d; ret; 
0x00000000091344: xor eax, eax; cmp rdi, rsi; sete al; ret; 
0x000000000e0c0b: xor eax, eax; cmp rdx, 0x1badface; setne al; ret; 
0x000000000e0c26: xor eax, eax; cmp rdx, 0x1cd1; setne al; ret; 
0x000000000e0bf3: xor eax, eax; cmp rdx, 0x5346544e; setne al; ret; 
0x000000000e0bd7: xor eax, eax; cmp rdx, 0xadf5; setne al; ret; 
0x0000000010de73: xor eax, eax; cmp rdx, rcx; je short 0x000000000010de80; ret; 
0x0000000009079f: xor eax, eax; cmp rdx, rdi; setae al; ret; 
0x000000000b9eee: xor eax, eax; lea r9, [rsp+0x28]; call rbx; 
0x0000000010e7b2: xor eax, eax; lea rdx, [rsp+0x30]; mov eax, 0x10; syscall; 
0x0000000009bf9a: xor eax, eax; mov [r8], rsi; ret; 
0x0000000004152d: xor eax, eax; mov [rbx+0x40], esi; pop rbx; ret; 
0x00000000083f8f: xor eax, eax; mov [rbx], ecx; pop rbx; ret; 
0x0000000013748a: xor eax, eax; mov [rdi+0x3], cl; movdqu xmm0, [rsi]; movups [rdi+rdx+0x8], xmm0; ret; 
0x00000000091143: xor eax, eax; mov [rdi+0x4], esi; ret; 
0x0000000010e674: xor eax, eax; mov [rdi+0x8], esi; ret; 
0x000000000a494b: xor eax, eax; mov [rdi], rdx; ret; 
0x000000000d0ae8: xor eax, eax; mov [rdx], eax; mov rax, r8; add rsp, 0x8; ret; 
0x0000000015a93d: xor eax, eax; mov [rip+0x8c542], rsi; ret; 
0x000000000cc348: xor eax, eax; mov [rsp+0x50], r12; call rbx; 
0x00000000136255: xor eax, eax; mov dword ptr [rdi+0x8], 0x29; mov [rdi+0xc], edx; mov [rsi], rdi; ret; 
0x000000000462bd: xor eax, eax; mov dword ptr [rsi+0xc], 0x1000b; ret; 
0x00000000096885: xor eax, eax; mov dword ptr fs:[rax], 0xc; mov rax, r8; ret; 
0x0000000010f494: xor eax, eax; mov eax, 0x127; syscall; 
0x0000000010f554: xor eax, eax; mov eax, 0x128; syscall; 
0x0000000010f634: xor eax, eax; mov eax, 0x147; syscall; 
0x0000000010f794: xor eax, eax; mov eax, 0x148; syscall; 
0x0000000011a6b7: xor eax, eax; mov eax, 0x2c; syscall; 
0x0000000011a497: xor eax, eax; mov eax, 0x2d; syscall; 
0x00000000050262: xor eax, eax; mov eax, 0x3e; syscall; 
0x000000000de6f4: xor eax, eax; mov eax, 0xf7; syscall; 
0x000000000ebe17: xor eax, eax; mov eax, r8d; pop rbx; pop rbp; ret; 
0x000000000c2d39: xor eax, eax; mov eax, r8d; ret; 
0x000000001513fa: xor eax, eax; mov edx, 0xffffffff; mov rsi, r12; mov rdi, rbx; call rcx; 
0x000000001513f9: xor eax, eax; mov edx, 0xffffffff; mov rsi, r12; mov rdi, rbx; call rcx; 
0x0000000014f7ac: xor eax, eax; mov edx, 0xffffffff; mov rsi, r14; mov rdi, r12; call r13; 
0x00000000151528: xor eax, eax; mov edx, 0xffffffff; mov rsi, r14; mov rdi, rbp; call r12; 
0x00000000185840: xor eax, eax; mov edx, [rdi]; cmp edx, [rsi]; jne short 0x000000000018582c; ret; 
0x000000001495d5: xor eax, eax; mov rax, [rdi+0x8]; lea rsi, [rsp+0x10]; call qword ptr [rax+0x10]; 
0x00000000044e29: xor eax, eax; mov rax, r8; pop rbx; pop rbp; ret; 
0x00000000044e1e: xor eax, eax; mov rax, r8; ret; 
0x0000000013f879: xor eax, eax; mov rcx, r14; mov rdi, r13; call r12; 
0x00000000087139: xor eax, eax; mov rcx, r14; mov rdi, r15; call r12; 
0x000000000c6a45: xor eax, eax; mov rdi, rbp; call rbx; 
0x000000000b9be9: xor eax, eax; mov rdi, rbp; lea r9, [rsp+0x30]; call rbx; 
0x00000000142b0e: xor eax, eax; mov rdi, rbx; call rcx; 
0x0000000014f8b9: xor eax, eax; mov rdi, rsp; mov dword ptr [rsp], 0x2; call r8; 
0x0000000010e98e: xor eax, eax; mov rdx, rsp; mov eax, 0x10; syscall; 
0x0000000014168b: xor eax, eax; mov rsi, [rsp+0x10]; mov rcx, [rsp+0x8]; mov rdi, rbp; call rcx; 
0x00000000086ed4: xor eax, eax; mov rsi, [rsp+0x18]; mov rdi, r13; lea r9, [rsp+0x28]; call rbp; 
0x00000000147107: xor eax, eax; mov rsi, [rsp+0x30]; mov rcx, [rsp+0x28]; mov rdi, r12; call rcx; 
0x00000000147322: xor eax, eax; mov rsi, [rsp+0x40]; mov rdx, [rsp+0x20]; mov rdi, r12; call rdx; 
0x0000000014a89f: xor eax, eax; mov rsi, [rsp+0x50]; mov rcx, [rsp+0x20]; mov rdi, r15; call rcx; 
0x00000000147a0b: xor eax, eax; mov rsi, rdx; add rdi, 0x10; jmp rcx; 
0x00000000147a2b: xor eax, eax; mov rsi, rdx; mov dword ptr [rdi+0x10], 0x2; add rdi, 0x10; jmp rcx; 
0x0000000014a50b: xor eax, eax; mov rsi, rdx; mov dword ptr [rdi+0x58], 0x2; add rdi, 0x58; jmp rcx; 
0x00000000149bdb: xor eax, eax; mov rsi, rdx; mov dword ptr [rdi+0x68], 0x2; add rdi, 0x68; jmp rcx; 
0x00000000146deb: xor eax, eax; mov rsi, rdx; mov dword ptr [rdi+0xc8], 0x2; add rdi, 0xc8; jmp rcx; 
0x00000000090e7c: xor eax, eax; movups [rsi+0x70], xmm7; ret; 
0x000000001506f2: xor eax, eax; pop r12; pop r13; pop r14; jmp rcx; 
0x0000000009d6bf: xor eax, eax; pop r12; pop r13; ret; 
0x00000000126c4e: xor eax, eax; pop r12; pop rbp; ret; 
0x00000000142d50: xor eax, eax; pop rbp; jmp rdx; 
0x0000000008c671: xor eax, eax; pop rbp; pop r12; ret; 
0x0000000003fb6a: xor eax, eax; pop rbp; ret; 
0x0000000014374b: xor eax, eax; pop rbx; add rdi, 0x23b0; pop rbp; jmp rcx; 
0x000000001415d6: xor eax, eax; pop rbx; pop rbp; jmp rcx; 
0x0000000008a12e: xor eax, eax; pop rbx; pop rbp; pop r12; ret; 
0x0000000008fbf6: xor eax, eax; pop rbx; pop rbp; ret; 
0x0000000004150e: xor eax, eax; pop rbx; ret; 
0x0000000008ab7f: xor eax, eax; punpcklqdq xmm0, xmm0; movups [rbx+0x8], xmm0; pop rbx; ret; 
0x00000000045e92: xor eax, eax; punpcklqdq xmm0, xmm1; mov eax, r8d; movups [rdi], xmm0; ret; 
0x000000000b97aa: xor eax, eax; push 0x0; lea r9, [rsp+0x18]; call r13; 
0x000000000c6fe3: xor eax, eax; push 0x1; push 0x0; mov r9, [rsp+0x10]; call r13; 
0x0000000010f241: xor eax, eax; ret; 
0x0000000003f8a8: xor eax, eax; ret; 
0x000000000a693e: xor eax, eax; sub eax, ecx; ret; 
0x00000000108ce8: xor eax, eax; syscall; 
0x00000000125a8c: xor eax, eax; test byte ptr [rbx+0x1c], 0x20; je short 0x0000000000125aa0; pop rbx; ret; 
0x000000000895f4: xor eax, eax; test byte ptr [rdi], 0x4; sete al; ret; 
0x00000000089604: xor eax, eax; test byte ptr [rdi], 0x8; sete al; ret; 
0x000000000eacfc: xor eax, eax; test byte ptr [rdx+0xc8], 0x40; jne 0x00000000000eac2d; ret; 
0x000000000eacaa: xor eax, eax; test byte ptr [rdx+0xc8], 0x80; je 0x00000000000eac2d; ret; 
0x00000000150e61: xor eax, eax; test eax, eax; je short 0x0000000000150e90; mov eax, r8d; ret; 
0x00000000150eb1: xor eax, eax; test eax, eax; je short 0x0000000000150ee0; mov eax, r8d; ret; 
0x0000000004250b: xor eax, eax; test edx, edx; sete al; ret; 
0x000000001904d0: xor eax, eax; test r8d, r8d; jne 0x00000000001903e0; add rsp, 0x38; ret; 
0x0000000008ce44: xor eax, eax; test rdx, rdx; jne short 0x000000000008ce50; ret; 
0x0000000017de90: xor eax, eax; vzeroupper; ret; 
0x00000000112b48: xor eax, eax; xchg [rip+0xd4d00], eax; cmp eax, 0x1; jg short 0x0000000000112b60; ret; 
0x000000000298e9: xor eax, eax; xor ecx, ecx; xor edx, edx; push rax; call rbx; 
0x00000000045f2c: xor eax, ecx; ret; 
0x0000000014522a: xor eax, edx; mov [r8], rsi; mov [r8+0x8], rax; ret; 
0x0000000003f896: xor eax, edx; movzx edx, byte ptr [rcx]; test dl, dl; jne short 0x000000000003f878; ret; 
0x000000000454a7: xor eax, edx; sub eax, edx; ret; 
0x000000000454ba: xor eax, edx; sub rax, rdx; ret; 
0x0000000010aff8: xor ebp, eax; mov bl, 0xf1; jmp qword ptr [rsp+rax*2-0x77]; 
0x0000000011921d: xor ebp, ebp; pop rax; pop rdi; call rax; 
0x0000000007f577: xor ebx, [rbx+0x5d]; pop r12; ret; 
0x000000000552be: xor ecx, [rax-0x7d]; ret; 
0x00000000067e0f: xor ecx, [rbx-0x6377b]; jmp qword ptr [rdi+rdi*2]; 
0x000000001150e1: xor ecx, [rcx-0x77]; fisttp qword ptr [rax-0x77], st; out dx, eax; call r12; 
0x000000000311ad: xor ecx, [rcx-0x77]; ret far; 
0x0000000018e2c9: xor ecx, [rdi]; adc dword ptr [rax+0x41000002], 0xffffff83; ret far; 
0x0000000018fa7f: xor ecx, [rdi]; or dword ptr [rbp-0x4], 0xffffffff; dec dword ptr [rcx-0x7d]; ret; 
0x00000000106d13: xor ecx, eax; or eax, 0x64d8f700; mov [rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000012756b: xor ecx, ebx; add eax, [rax]; cmovne rax, rdx; ret; 
0x000000000fd336: xor ecx, ecx; add rsp, 0x8; mov eax, r9d; ret; 
0x00000000040a58: xor ecx, ecx; addsd xmm0, xmm0; mov [rdi], ecx; ret; 
0x00000000074ba0: xor ecx, ecx; jmp rsi; 
0x000000001420e2: xor ecx, ecx; lea rdx, [rip+0xd805]; lea r9, [rsp+0x20]; call qword ptr [rax]; 
0x00000000095498: xor ecx, ecx; mov dword ptr fs:[rax], 0xc; mov rax, r9; ret; 
0x00000000159e79: xor ecx, ecx; mov rdi, rbp; call qword ptr [rax+0x270]; 
0x00000000033d3a: xor ecx, ecx; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; lea r8, [rsp+0xa0]; call r15; 
0x000000000298eb: xor ecx, ecx; xor edx, edx; push rax; call rbx; 
0x0000000011a6b4: xor ecx, ecx; xor r8d, r8d; mov eax, 0x2c; syscall; 
0x0000000011a494: xor ecx, ecx; xor r8d, r8d; mov eax, 0x2d; syscall; 
0x0000000013e606: xor edi, [0x30]; call rax; 
0x0000000015fc99: xor edi, [rbx+0x5]; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000015a7e1: xor edi, [rdi-0x3eb7fff8]; enter 0x6411, 0x48; xor eax, [0x30]; jmp rax; 
0x0000000010fa2c: xor edi, [rdx-0x1]; mov edi, 0xffffffff; mov eax, 0x75; syscall; 
0x0000000010fafc: xor edi, [rdx-0x1]; mov edi, 0xffffffff; mov eax, 0x77; syscall; 
0x0000000010d680: xor edi, eax; dec dword ptr [rbx+0x48082444]; add esp, 0x28; ret; 
0x00000000093852: xor edi, edi; call qword ptr [r13]; 
0x00000000094c57: xor edi, edi; call qword ptr [rax]; 
0x0000000013fa29: xor edi, edi; call qword ptr [rsp+0x20]; 
0x00000000140036: xor edi, edi; call qword ptr [rsp+0x70]; 
0x00000000129621: xor edi, edi; lea rsi, [rsp-0x18]; mov eax, 0x83; syscall; 
0x00000000129620: xor edi, edi; lea rsi, [rsp-0x18]; mov eax, 0x83; syscall; 
0x00000000028d10: xor edi, edi; mov eax, edx; syscall; 
0x00000000053002: xor edi, edi; mov r10d, 0x8; mov eax, 0xe; syscall; 
0x0000000011386d: xor edi, edi; or r10d, 0x40; mov eax, ecx; syscall; 
0x000000000cd04c: xor edi, edi; syscall; 
0x0000000018dd12: xor edi, esp; add rax, rdx; notrack jmp rax; 
0x000000001460f9: xor edi, esp; jmp qword ptr [rsp+rax*2-0x77]; 
0x0000000018daf1: xor edi, esp; movzx r12d, dil; add rax, rdx; notrack jmp rax; 
0x0000000018dd11: xor edi, r12d; add rax, rdx; notrack jmp rax; 
0x0000000018daf0: xor edi, r12d; movzx r12d, dil; add rax, rdx; notrack jmp rax; 
0x00000000169009: xor edx, 0x4; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000044a4e: xor edx, [0x30]; call rdx; 
0x000000000b85b6: xor edx, edx; and eax, 0x3fffc00; div ecx; mov eax, eax; ret; 
0x00000000107eb4: xor edx, edx; call rax; 
0x0000000005cb83: xor edx, edx; div ecx; add r8d, eax; mov eax, r8d; ret; 
0x0000000007a69a: xor edx, edx; jmp rcx; 
0x000000000758a8: xor edx, edx; jmp rsi; 
0x0000000008061b: xor edx, edx; lea rsi, [rip+0x25c]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000008d663: xor edx, edx; lea rsi, [rip-0x11c]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000008f0a0: xor edx, edx; lea rsi, [rip-0x1b59]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000008f3d8: xor edx, edx; lea rsi, [rip-0x1e91]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000008f76c: xor edx, edx; lea rsi, [rip-0x2225]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000080c1c: xor edx, edx; lea rsi, [rip-0x3a5]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000008db4a: xor edx, edx; lea rsi, [rip-0x603]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000011b2d5: xor edx, edx; mov eax, 0x1d; syscall; 
0x0000000009c3e8: xor edx, edx; mov eax, edx; ret; 
0x00000000139e89: xor edx, edx; mov eax, r10d; ret; 
0x00000000046488: xor edx, edx; mov eax, r9d; sub rsi, rdi; syscall; 
0x0000000005303c: xor edx, edx; mov edi, 0x2; mov r10d, 0x8; mov eax, 0xe; syscall; 
0x000000000272b7: xor edx, edx; mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x000000000973eb: xor edx, edx; mov edx, 0x1; mov esi, 0x81; mov eax, ebx; syscall; 
0x00000000090b48: xor edx, edx; mov edx, 0x2; mov esi, 0x80; mov eax, 0xca; syscall; 
0x00000000090a9d: xor edx, edx; mov edx, r8d; mov esi, 0x80; mov eax, r9d; syscall; 
0x000000001157e0: xor edx, edx; mov esi, 0x1; call r12; 
0x00000000091292: xor edx, edx; mov esi, 0x80; mov eax, r8d; syscall; 
0x0000000010ecf6: xor edx, edx; mov esi, edi; mov eax, 0x12e; xor edi, edi; syscall; 
0x0000000010ecf7: xor edx, edx; mov esi, edi; mov eax, 0x12e; xor edi, edi; syscall; 
0x00000000085b48: xor edx, edx; mov rdi, r15; call qword ptr [r14+0x80]; 
0x00000000086104: xor edx, edx; mov rdi, r15; call qword ptr [rbx+0x80]; 
0x0000000008afa2: xor edx, edx; mov rdi, rbp; call qword ptr [rax+0x80]; 
0x0000000008b2ac: xor edx, edx; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x00000000107ee8: xor edx, edx; mov rsi, r12; mov rdi, rbp; mov eax, 0x135; syscall; 
0x0000000013fc0c: xor edx, edx; mov rsi, r12; mov rdi, rbx; mov rcx, r13; call r10; 
0x000000001074e3: xor edx, edx; mov rsi, r14; mov edi, 0x2; mov eax, 0xe; syscall; 
0x0000000013faaa: xor edx, edx; mov rsi, r14; mov rdi, r15; mov [rsp+0x8], rcx; call rbp; 
0x000000000418ba: xor edx, edx; mov rsi, r9; mov edi, 0x2; mov eax, 0xe; syscall; 
0x0000000008ba28: xor edx, edx; mov rsi, rbp; mov rdi, rbx; call qword ptr [r12+0x80]; 
0x000000000813e8: xor edx, edx; mov rsi, rbp; mov rdi, rbx; call qword ptr [r13+0x48]; 
0x000000000b7cd3: xor edx, edx; or cl, cl; cmove rax, rdx; ret; 
0x00000000081309: xor edx, edx; pop rbp; pop r12; pop r13; jmp rax; 
0x0000000008ec66: xor edx, edx; pop rbx; jmp rax; 
0x000000000b99b0: xor edx, edx; push 0x1; lea r9, [rsp+0x20]; call rbx; 
0x000000000298ed: xor edx, edx; push rax; call rbx; 
0x000000000de93f: xor edx, edx; xor esi, esi; mov edi, 0x1200011; mov eax, 0x38; syscall; 
0x00000000107e1f: xor edx, edx; xor esi, esi; mov rdi, rbp; call rax; 
0x00000000107e50: xor edx, edx; xor esi, esi; mov rdi, rbp; mov eax, 0x135; syscall; 
0x0000000008f503: xor edx, edx; xor esi, esi; mov rdi, rbx; call qword ptr [rax+0x58]; 
0x000000001149b7: xor esi, esi; call r12; 
0x000000000d8e4e: xor esi, esi; lea edi, [rdi*8+0x2]; syscall; 
0x00000000143793: xor esi, esi; lea r12, [rbx+0x23b0]; mov dword ptr [rbx+0x23b0], 0x0; mov rdi, r12; call qword ptr [rax+0x28]; 
0x00000000143806: xor esi, esi; mov dword ptr [rax+0x23b0], 0x1; mov rax, [rax+0x23b8]; mov rdi, r12; call qword ptr [rax+0x28]; 
0x0000000014eac0: xor esi, esi; mov dword ptr [rbx+0x10], 0x1; mov rdi, r13; call qword ptr [rax+0x28]; 
0x0000000008cdf2: xor esi, esi; mov ecx, 0x3; mov edx, 0x1; mov rdi, rbx; call qword ptr [r12+0x48]; 
0x000000000de941: xor esi, esi; mov edi, 0x1200011; mov eax, 0x38; syscall; 
0x00000000038910: xor esi, esi; mov edi, 0x1; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000121820: xor esi, esi; mov edi, 0x2000004; call rax; 
0x0000000008600f: xor esi, esi; mov edx, 0x1; mov rdi, r15; call qword ptr [rbp+0x80]; 
0x0000000008b207: xor esi, esi; mov edx, 0x1; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x00000000085e19: xor esi, esi; mov edx, 0x2; mov rdi, r15; call qword ptr [r13+0x80]; 
0x0000000007ebb5: xor esi, esi; mov edx, 0x2; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x0000000008c62a: xor esi, esi; mov edx, 0x2; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x0000000009bf90: xor esi, esi; mov qword ptr [r8+0x8], 0x0; xor eax, eax; mov [r8], rsi; ret; 
0x00000000045186: xor esi, esi; mov rdi, r9; call r8; 
0x000000000886af: xor esi, esi; mov rdi, rbp; call qword ptr [r13+0x10]; 
0x0000000007e7c9: xor esi, esi; mov rdi, rbp; call qword ptr [rbx+0x10]; 
0x00000000107e21: xor esi, esi; mov rdi, rbp; call rax; 
0x00000000141740: xor esi, esi; mov rdi, rbp; mov dword ptr [rbx+0x18], 0x0; call qword ptr [rax+0x28]; 
0x000000001416c1: xor esi, esi; mov rdi, rbp; mov dword ptr [rbx+0x18], 0x1; call qword ptr [rax+0x28]; 
0x00000000107e52: xor esi, esi; mov rdi, rbp; mov eax, 0x135; syscall; 
0x0000000008f505: xor esi, esi; mov rdi, rbx; call qword ptr [rax+0x58]; 
0x0000000005003d: xor esi, esi; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000010da12: xor esi, esi; syscall; 
0x0000000010da11: xor esi, esi; syscall; 
0x00000000053000: xor esi, esi; xor edi, edi; mov r10d, 0x8; mov eax, 0xe; syscall; 
0x0000000008cdf1: xor esi, r14d; mov ecx, 0x3; mov edx, 0x1; mov rdi, rbx; call qword ptr [r12+0x48]; 
0x0000000007b221: xor esp, esp; jmp rcx; 
0x000000000cc038: xor esp, esp; mov dword ptr fs:[rax], 0x4b; mov rax, r12; pop r12; ret; 
0x000000000cc051: xor esp, esp; mov rax, r12; pop r12; ret; 
0x0000000011b2d4: xor r10d, r10d; mov eax, 0x1d; syscall; 
0x00000000139e88: xor r10d, r10d; mov eax, r10d; ret; 
0x000000000272b6: xor r10d, r10d; mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x000000000973ea: xor r10d, r10d; mov edx, 0x1; mov esi, 0x81; mov eax, ebx; syscall; 
0x00000000090b47: xor r10d, r10d; mov edx, 0x2; mov esi, 0x80; mov eax, 0xca; syscall; 
0x00000000090a9c: xor r10d, r10d; mov edx, r8d; mov esi, 0x80; mov eax, r9d; syscall; 
0x00000000091291: xor r10d, r10d; mov esi, 0x80; mov eax, r8d; syscall; 
0x0000000010ed37: xor r10d, r10d; mov esi, edi; mov eax, 0x12e; xor edi, edi; syscall; 
0x0000000010ed36: xor r10d, r10d; mov esi, edi; mov eax, 0x12e; xor edi, edi; syscall; 
0x0000000007b220: xor r12d, r12d; jmp rcx; 
0x0000000007b21f: xor r12d, r12d; jmp rcx; 
0x000000000cc037: xor r12d, r12d; mov dword ptr fs:[rax], 0x4b; mov rax, r12; pop r12; ret; 
0x000000000cc050: xor r12d, r12d; mov rax, r12; pop r12; ret; 
0x000000001559ff: xor r14b, r13b; jmp qword ptr [rsi+0x66]; 
0x0000000015c700: xor r8d, r8d; add rsp, 0x8; mov eax, r8d; ret; 
0x0000000002987a: xor r8d, r8d; call rbx; 
0x000000000cb165: xor r8d, r8d; cmp eax, edx; jne short 0x00000000000cb170; mov eax, r8d; ret; 
0x0000000011cd03: xor r8d, r8d; cmp edi, 0x9; setbe r8b; mov eax, r8d; ret; 
0x000000000895b6: xor r8d, r8d; cmp qword ptr [rdi+0x18], 0x0; setne r8b; mov eax, r8d; ret; 
0x000000000b9eed: xor r8d, r8d; lea r9, [rsp+0x28]; call rbx; 
0x000000000d0ae7: xor r8d, r8d; mov [rdx], eax; mov rax, r8; add rsp, 0x8; ret; 
0x00000000096884: xor r8d, r8d; mov dword ptr fs:[rax], 0xc; mov rax, r8; ret; 
0x0000000010f493: xor r8d, r8d; mov eax, 0x127; syscall; 
0x0000000010f553: xor r8d, r8d; mov eax, 0x128; syscall; 
0x0000000010f633: xor r8d, r8d; mov eax, 0x147; syscall; 
0x0000000010f793: xor r8d, r8d; mov eax, 0x148; syscall; 
0x0000000011a6b6: xor r8d, r8d; mov eax, 0x2c; syscall; 
0x0000000011a496: xor r8d, r8d; mov eax, 0x2d; syscall; 
0x000000000de6f3: xor r8d, r8d; mov eax, 0xf7; syscall; 
0x000000000ebe16: xor r8d, r8d; mov eax, r8d; pop rbx; pop rbp; ret; 
0x000000000c2d38: xor r8d, r8d; mov eax, r8d; ret; 
0x00000000044e28: xor r8d, r8d; mov rax, r8; pop rbx; pop rbp; ret; 
0x00000000044e1d: xor r8d, r8d; mov rax, r8; ret; 
0x0000000013f878: xor r8d, r8d; mov rcx, r14; mov rdi, r13; call r12; 
0x00000000087138: xor r8d, r8d; mov rcx, r14; mov rdi, r15; call r12; 
0x000000000c6a44: xor r8d, r8d; mov rdi, rbp; call rbx; 
0x000000000ba1c8: xor r8d, r8d; mov rdi, rbp; lea r9, [rsp+0x30]; call rbx; 
0x000000000b9be8: xor r8d, r8d; mov rdi, rbp; lea r9, [rsp+0x30]; call rbx; 
0x00000000086ed3: xor r8d, r8d; mov rsi, [rsp+0x18]; mov rdi, r13; lea r9, [rsp+0x28]; call rbp; 
0x00000000045e91: xor r8d, r8d; punpcklqdq xmm0, xmm1; mov eax, r8d; movups [rdi], xmm0; ret; 
0x000000000b97a9: xor r8d, r8d; push 0x0; lea r9, [rsp+0x18]; call r13; 
0x000000000c6fe2: xor r8d, r8d; push 0x1; push 0x0; mov r9, [rsp+0x10]; call r13; 
0x00000000150e60: xor r8d, r8d; test eax, eax; je short 0x0000000000150e90; mov eax, r8d; ret; 
0x00000000150eb0: xor r8d, r8d; test eax, eax; je short 0x0000000000150ee0; mov eax, r8d; ret; 
0x000000000298e8: xor r8d, r8d; xor ecx, ecx; xor edx, edx; push rax; call rbx; 
0x000000000fd335: xor r9d, r9d; add rsp, 0x8; mov eax, r9d; ret; 
0x00000000095497: xor r9d, r9d; mov dword ptr fs:[rax], 0xc; mov rax, r9; ret; 
0x00000000159e78: xor r9d, r9d; mov rdi, rbp; call qword ptr [rax+0x270]; 
0x00000000033d39: xor r9d, r9d; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; lea r8, [rsp+0xa0]; call r15; 
0x0000000011a6b3: xor r9d, r9d; xor r8d, r8d; mov eax, 0x2c; syscall; 
0x0000000011a493: xor r9d, r9d; xor r8d, r8d; mov eax, 0x2d; syscall; 
0x0000000010e14a: xor rax, 0x20; mov [rsi+0x48], rax; ret; 
0x00000000028ce0: xor rax, [0x30]; call rax; 
0x00000000029021: xor rax, [0x30]; jmp rax; 
0x0000000004545d: xor rax, [0x30]; mov fs:[rbx], rdx; mov rdi, [rbp+0x8]; call rax; 
0x00000000137acb: xor rax, [0x30]; mov qword ptr [rsp], 0x0; call rax; 
0x000000000d9254: xor rax, [0x30]; pop r13; pop r14; jmp rax; 
0x000000000284a3: xor rax, [0x30]; rol rax, 0x11; mov [rip+0x1be192], rax; ret; 
0x0000000007f390: xor rax, [0x30]; test rax, rax; je short 0x000000000007f3a6; mov rdi, [rdi+0xe0]; jmp rax; 
0x0000000007f470: xor rax, [0x30]; test rax, rax; je short 0x000000000007f490; mov rdi, [rdi+0xe0]; jmp rax; 
0x00000000028cdf: xor rax, fs:[0x30]; call rax; 
0x00000000029020: xor rax, fs:[0x30]; jmp rax; 
0x0000000004545c: xor rax, fs:[0x30]; mov fs:[rbx], rdx; mov rdi, [rbp+0x8]; call rax; 
0x00000000137aca: xor rax, fs:[0x30]; mov qword ptr [rsp], 0x0; call rax; 
0x000000000d9253: xor rax, fs:[0x30]; pop r13; pop r14; jmp rax; 
0x000000000284a2: xor rax, fs:[0x30]; rol rax, 0x11; mov [rip+0x1be192], rax; ret; 
0x0000000007f38f: xor rax, fs:[0x30]; test rax, rax; je short 0x000000000007f3a6; mov rdi, [rdi+0xe0]; jmp rax; 
0x0000000007f46f: xor rax, fs:[0x30]; test rax, rax; je short 0x000000000007f490; mov rdi, [rdi+0xe0]; jmp rax; 
0x000000000ae059: xor rax, rax; ret; 
0x00000000145229: xor rax, rdx; mov [r8], rsi; mov [r8+0x8], rax; ret; 
0x0000000003f895: xor rax, rdx; movzx edx, byte ptr [rcx]; test dl, dl; jne short 0x000000000003f878; ret; 
0x000000000454b9: xor rax, rdx; sub rax, rdx; ret; 
0x0000000013e605: xor rdi, [0x30]; call rax; 
0x0000000013e604: xor rdi, fs:[0x30]; call rax; 
0x00000000044a4d: xor rdx, [0x30]; call rdx; 
0x00000000044a4c: xor rdx, fs:[0x30]; call rdx; 
0x0000000008c629: xor si, si; mov edx, 0x2; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x00000000166c8b: xrelease mov [rdi-0x8], rcx; ret; 
0x00000000161b6e: xrelease mov [rdi-0x8], rdx; ret; 
0x0000000007b187: xrelease mov dword ptr [rsp+0x28], 0x20; jmp rcx; 

CONFIG [ search: ROP-JOP-SYS (default), x_match: none, max_len: 5, syntax: Intel, regex_filter: none ]
RESULT [ unique_gadgets: 42612, search_time: 566.750232ms, print_time: 504.116228ms ]
