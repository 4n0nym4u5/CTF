TARGET 0 - 'chall2': ELF-X64, 0x00000000401060 entry, 541/1 executable bytes/segments 

0x000000004010ee: adc [rax], edi; test rax, rax; je short 0x0000000000401100; mov edi, 0x404040; jmp rax; 
0x00000000401085: adc eax, 0x2f66; hlt; nop [rax+rax]; ret; 
0x000000004010ac: adc edi, [rax]; test rax, rax; je short 0x00000000004010c0; mov edi, 0x404040; jmp rax; 
0x0000000040100a: add [rax-0x7b], cl; shl byte ptr [rdx+rax-0x1], 0xd0; add rsp, 0x8; ret; 
0x000000004011a4: add [rax], al; add [rax], al; pop rbp; ret; 
0x00000000401126: add [rax], al; add [rbp-0x3d], ebx; nop [rax+rax]; ret; 
0x00000000401088: add [rax], al; hlt; nop [rax+rax]; ret; 
0x000000004011a6: add [rax], al; pop rbp; ret; 
0x0000000040108e: add [rax], al; ret; 
0x00000000401212: add [rax], al; sub rsp, 0x8; add rsp, 0x8; ret; 
0x00000000401009: add [rax], al; test rax, rax; je short 0x0000000000401012; call rax; 
0x000000004010b0: add [rax], al; test rax, rax; je short 0x00000000004010c0; mov edi, 0x404040; jmp rax; 
0x000000004010f2: add [rax], al; test rax, rax; je short 0x0000000000401100; mov edi, 0x404040; jmp rax; 
0x0000000040108d: add [rax], r8b; ret; 
0x00000000401128: add [rbp-0x3d], ebx; nop [rax+rax]; ret; 
0x000000004011e7: add [rcx+rcx*4-0xe], cl; mov rsi, r13; mov edi, r12d; call qword ptr [r15+rbx*8]; 
0x00000000401127: add [rcx], al; pop rbp; ret; 
0x00000000401089: add ah, dh; nop [rax+rax]; ret; 
0x00000000401083: add bh, bh; adc eax, 0x2f66; hlt; nop [rax+rax]; ret; 
0x000000004010bb: add bh, bh; loopne 0x0000000000401125; nop; ret; 
0x00000000401082: add dil, dil; adc eax, 0x2f66; hlt; nop [rax+rax]; ret; 
0x000000004010b8: add dil, dil; loopne 0x0000000000401125; nop; ret; 
0x00000000401123: add eax, 0x2f17; add [rbp-0x3d], ebx; nop [rax+rax]; ret; 
0x00000000401006: add eax, 0x2fed; test rax, rax; je short 0x0000000000401012; call rax; 
0x00000000401013: add esp, 0x8; ret; 
0x00000000401012: add rsp, 0x8; ret; 
0x000000004011f1: call qword ptr [r15+rbx*8]; 
0x00000000401191: call qword ptr [rax+0x4855c3c9]; 
0x000000004011f2: call qword ptr [rdi+rbx*8]; 
0x00000000401010: call rax; 
0x000000004011f4: fisttp word ptr [rax-0x7d], st; ret; 
0x0000000040108a: hlt; nop [rax+rax]; ret; 
0x00000000401121: inc esi; add eax, 0x2f17; add [rbp-0x3d], ebx; nop [rax+rax]; ret; 
0x0000000040100e: je short 0x0000000000401012; call rax; 
0x000000004010b5: je short 0x00000000004010c0; mov edi, 0x404040; jmp rax; 
0x000000004010f7: je short 0x0000000000401100; mov edi, 0x404040; jmp rax; 
0x000000004010bc: jmp rax; 
0x00000000401193: leave; ret; 
0x000000004010bd: loopne 0x0000000000401125; nop; ret; 
0x00000000401122: mov byte ptr [rip+0x2f17], 0x1; pop rbp; ret; 
0x000000004011a3: mov eax, 0x0; pop rbp; ret; 
0x000000004010ad: mov eax, 0x0; test rax, rax; je short 0x00000000004010c0; mov edi, 0x404040; jmp rax; 
0x000000004010ef: mov eax, 0x0; test rax, rax; je short 0x0000000000401100; mov edi, 0x404040; jmp rax; 
0x00000000401005: mov eax, [rip+0x2fed]; test rax, rax; je short 0x0000000000401012; call rax; 
0x000000004010b7: mov edi, 0x404040; jmp rax; 
0x000000004011ef: mov edi, esp; call qword ptr [r15+rbx*8]; 
0x000000004011ee: mov edi, r12d; call qword ptr [r15+rbx*8]; 
0x000000004011e9: mov edx, esi; mov rsi, r13; mov edi, r12d; call qword ptr [r15+rbx*8]; 
0x000000004011ec: mov esi, ebp; mov edi, r12d; call qword ptr [r15+rbx*8]; 
0x00000000401004: mov rax, [rip+0x2fed]; test rax, rax; je short 0x0000000000401012; call rax; 
0x000000004011e8: mov rdx, r14; mov rsi, r13; mov edi, r12d; call qword ptr [r15+rbx*8]; 
0x000000004011ea: mov rsi, r13; mov edi, r12d; call qword ptr [r15+rbx*8]; 
0x000000004011eb: mov rsi, r13; mov edi, r12d; call qword ptr [r15+rbx*8]; 
0x0000000040108b: nop [rax+rax]; ret; 
0x000000004011e5: nop [rax]; mov rdx, r14; mov rsi, r13; mov edi, r12d; call qword ptr [r15+rbx*8]; 
0x0000000040120d: nop [rax]; ret; 
0x00000000401192: nop; leave; ret; 
0x000000004010bf: nop; ret; 
0x00000000401003: or [rax-0x75], cl; add eax, 0x2fed; test rax, rax; je short 0x0000000000401012; call rax; 
0x000000004010b6: or [rdi+0x404040], edi; jmp rax; 
0x000000004011f0: out 0x41, eax; call qword ptr [rdi+rbx*8]; 
0x000000004011ed: out dx, al; mov edi, r12d; call qword ptr [r15+rbx*8]; 
0x00000000401204: pop r12; pop r13; pop r14; pop r15; ret; 
0x00000000401206: pop r13; pop r14; pop r15; ret; 
0x00000000401208: pop r14; pop r15; ret; 
0x0000000040120a: pop r15; ret; 
0x00000000401207: pop rbp; pop r14; pop r15; ret; 
0x00000000401129: pop rbp; ret; 
0x0000000040120b: pop rdi; ret; 
0x00000000401209: pop rsi; pop r15; ret; 
0x00000000401205: pop rsp; pop r13; pop r14; pop r15; ret; 
0x00000000401016: ret; 
0x000000004010b4: shl byte ptr [rcx+rcx-0x41], 0x40; add dil, dil; loopne 0x0000000000401125; nop; ret; 
0x0000000040100d: shl byte ptr [rdx+rax-0x1], 0xd0; add rsp, 0x8; ret; 
0x00000000401215: sub esp, 0x8; add rsp, 0x8; ret; 
0x00000000401001: sub esp, 0x8; mov rax, [rip+0x2fed]; test rax, rax; je short 0x0000000000401012; call rax; 
0x00000000401214: sub rsp, 0x8; add rsp, 0x8; ret; 
0x00000000401000: sub rsp, 0x8; mov rax, [rip+0x2fed]; test rax, rax; je short 0x0000000000401012; call rax; 
0x0000000040100c: test eax, eax; je short 0x0000000000401012; call rax; 
0x000000004010b3: test eax, eax; je short 0x00000000004010c0; mov edi, 0x404040; jmp rax; 
0x000000004010f5: test eax, eax; je short 0x0000000000401100; mov edi, 0x404040; jmp rax; 
0x0000000040100b: test rax, rax; je short 0x0000000000401012; call rax; 
0x000000004010b2: test rax, rax; je short 0x00000000004010c0; mov edi, 0x404040; jmp rax; 
0x000000004010f4: test rax, rax; je short 0x0000000000401100; mov edi, 0x404040; jmp rax; 
0x000000004010be: xchg ax, ax; ret; 

CONFIG [ search: ROP-JOP-SYS (default), x_match: none, max_len: 5, syntax: Intel, regex_filter: none ]
RESULT [ unique_gadgets: 85, search_time: 11.681703ms, print_time: 8.501359ms ]
