TARGET 0 - 'libc.so.6': ELF-X64, 0x000000000241f0 entry, 1537332/1 executable bytes/segments 

0x00000000121c71: adc [r10+0x13], r14b; mov qword ptr [rip+0xca6e0], 0x2; ret; 
0x0000000008d33a: adc [r10+0x32], r14b; mov [rdi+0x18], rax; mov [rsi], rax; xor eax, eax; ret; 
0x0000000008d79a: adc [r10+0x42], r14b; mov [rdi+0x18], rax; mov [rsi], rax; xor eax, eax; ret; 
0x0000000008dfb4: adc [r11+0x10], r14b; lea rdx, [rax+0x1]; mov [rdi+0x8], rdx; movzx eax, byte ptr [rax]; ret; 
0x0000000008df7a: adc [r11+0x12], r14b; lea rdx, [rax+0x1]; mov [rdi+0x8], rdx; movzx eax, byte ptr [rax]; ret; 
0x0000000011a587: adc [r11+0x94801e0], al; ror byte ptr [rcx-0x77], 0x1; or [r9-0x75], cl; add [rbx+0x94901e0], eax; ret; 
0x00000000112973: adc [r13+0x41], r11b; pop rsp; pop r13; pop r14; ret; 
0x000000000946d5: adc [r13+0x4c1574c0], r8b; mov eax, [rdi+0x8]; mov rax, [rdi]; mov rdi, r8; jmp rax; 
0x0000000014115a: adc [r13+0x5b0875c0], r8b; pop rbp; pop r12; ret; 
0x0000000011acc3: adc [r13-0x7b], r9b; ror byte ptr [rdi], 0x85; adc eax, 0x49000007; mov edi, [rdi]; call rbx; 
0x0000000011ada0: adc [r13-0x7b], r9b; shl byte ptr [rbp+0x3b], 0x49; mov edi, [rdi]; call rbx; 
0x0000000011adc9: adc [r13-0x7b], r9b; shl byte ptr [rbp+0x7d], 0x49; mov edi, [rdi]; call rbx; 
0x000000000ac16f: adc [r14+0xf], r12b; xlat [rbx]; rol dword ptr [rbp+0x315775c0], 0xc0; ret; 
0x0000000010c32f: adc [r15], r9b; adc [rdi+0x20], eax; movups [rdi+0x30], xmm0; movups [rdi+0x40], xmm0; ret; 
0x000000000bbcd6: adc [r15], r9b; adc [rdi+rdx-0x10], edx; movups [rdi+rdx-0x20], xmm3; ret; 
0x0000000013de95: adc [r8+0x14], dil; add edx, 0x1; syscall; 
0x000000000e8172: adc [r8+0x1], r9b; fmul st, dword ptr [rax-0x7d]; ret; 
0x00000000089772: adc [r8+0x1], r9b; ret; 
0x000000000f1de4: adc [r8+0x39], r9b; ret far; 
0x0000000015f82b: adc [r8+0x5a], bl; pop rbx; ret; 
0x000000000ecb30: adc [r8+0x63], r9b; ret; 
0x000000000bb17f: adc [r8-0x12cfeba9], r9b; mov [rdi+0x15], ch; ret; 
0x00000000088eb2: adc [r8-0x77], cl; or [r8-0x77], cl; sbb r9b, bpl; ret far; 
0x000000001411d9: adc [r8-0x7d], r9b; ret; 
0x000000000bb0fc: adc [r8], r14b; in eax, dx; mov [rdi+0x11], ch; ret; 
0x000000000bb11e: adc [r8], r14b; in eax, dx; mov [rdi+0x12], ch; ret; 
0x000000000bb15c: adc [r8], r14b; in eax, dx; mov [rdi+0x14], ch; ret; 
0x000000000bb1de: adc [r8], r14b; in eax, dx; mov [rdi+0x18], ch; ret; 
0x00000000154d17: adc [r8], r8b; add [rax], al; add [rcx+rcx*4-0x11], cl; call qword ptr [rax+0x28]; 
0x00000000154b13: adc [r9], al; add [rax], al; add [rcx+rcx*4-0x11], cl; call qword ptr [rax+0x28]; 
0x000000000935cc: adc [r9], r13b; rol bl, 0x1; mov eax, 0xffffffff; ret; 
0x0000000011f72f: adc [rax+0x130], bh; syscall; 
0x0000000011440f: adc [rax+0x13], bh; syscall; 
0x0000000004824f: adc [rax+0x13e], bh; syscall; 
0x0000000013de96: adc [rax+0x14], bh; add edx, 0x1; syscall; 
0x000000001144af: adc [rax+0x14], bh; syscall; 
0x00000000114fef: adc [rax+0x17], bh; mov edi, [rsp+0xc]; syscall; 
0x00000000149298: adc [rax+0x1], bh; pop rbx; pop rbp; pop r12; ret; 
0x000000001173cf: adc [rax+0x1], bh; ret; 
0x0000000010e09f: adc [rax+0x1], bh; syscall; 
0x000000000cf37e: adc [rax+0x1], cl; clc; ret; 
0x000000000e8173: adc [rax+0x1], cl; fmul st, dword ptr [rax-0x7d]; ret; 
0x000000001971ee: adc [rax+0x1], cl; out dx, eax; call r12; 
0x00000000056ade: adc [rax+0x1], cl; ret; 
0x0000000015079d: adc [rax+0x1], dil; ret; 
0x00000000118a0f: adc [rax+0x1a], bh; syscall; 
0x000000001506eb: adc [rax+0x20], edx; ret; 
0x000000000e2e6f: adc [rax+0x22], bh; syscall; 
0x000000001201cf: adc [rax+0x2a], bh; syscall; 
0x000000001200ff: adc [rax+0x2b], bh; syscall; 
0x0000000012060f: adc [rax+0x2e], bh; syscall; 
0x000000001204af: adc [rax+0x2f], bh; syscall; 
0x000000001506b8: adc [rax+0x30], eax; ret; 
0x000000000c8f38: adc [rax+0x39], cl; fisttp word ptr [rdi], st; xchg ebx, eax; ret; 
0x000000000f1de5: adc [rax+0x39], cl; ret far; 
0x000000000e5ca1: adc [rax+0x39], cl; ret; 
0x0000000010e83f: adc [rax+0x3], bh; syscall; 
0x0000000015f723: adc [rax+0x3b], cl; sub [rbx-0x1b], sil; mov eax, 0x1; ret; 
0x000000000e2ca7: adc [rax+0x3d], bh; syscall; 
0x00000000087cfa: adc [rax+0x40], eax; pop rbx; ret; 
0x00000000120fdf: adc [rax+0x46], bh; mov edi, [rsp+0x8]; syscall; 
0x000000001151cf: adc [rax+0x4a], bh; syscall; 
0x0000000011528f: adc [rax+0x4b], bh; syscall; 
0x0000000010e9bf: adc [rax+0x55], bh; syscall; 
0x0000000015f82c: adc [rax+0x5a], bl; pop rbx; ret; 
0x000000000fefee: adc [rax+0x63], cl; ret far; 
0x000000000ecb31: adc [rax+0x63], cl; ret; 
0x0000000004a96f: adc [rax+0x63], ecx; ret far; 
0x000000001786a2: adc [rax+0x66c30251], ecx; nop [rax+rax]; mov [rcx], edx; ret; 
0x000000001786c1: adc [rax+0x66c30451], ecx; nop [rax+rax]; mov [rcx], edx; mov [rcx+0x4], dx; ret; 
0x00000000178702: adc [rax+0x66c30851], ecx; nop [rax+rax]; mov [rcx], rdx; mov [rcx+0x8], dx; ret; 
0x0000000011298f: adc [rax+0x7], bh; syscall; 
0x0000000014cf90: adc [rax+0x8], eax; ret; 
0x0000000009f34a: adc [rax+0xe7402fa], eax; cmp dl, 0x3; je short 0x000000000009f360; movsx eax, dl; ret; 
0x000000000a042c: adc [rax+0xe], al; add [rax-0x73], cl; add eax, 0xbaa9; cmove rax, rdx; ret; 
0x000000000e2d61: adc [rax+0xf7], bh; syscall; 
0x00000000062415: adc [rax+rax], al; add [rbp+0x41], bl; pop rsp; pop r13; ret; 
0x000000000468cb: adc [rax+rcx*2+0x33], esp; adc al, 0x25; xor [rax], al; add [rax], al; call rdx; 
0x000000000240e0: adc [rax+rcx*2+0x33], esp; add al, 0x25; xor [rax], al; add [rax], al; call rax; 
0x0000000002441f: adc [rax+rcx*2+0x33], esp; add al, 0x25; xor [rax], al; add [rax], al; jmp rax; 
0x0000000014374e: adc [rax+rcx*2+0x33], esp; cmp al, 0x25; xor [rax], al; add [rax], al; call rax; 
0x000000000bb304: adc [rax-0x12cfdfb1], cl; mov [rdi+0x21], ch; ret; 
0x000000000bb202: adc [rax-0x12cfe7b1], cl; mov [rdi+0x19], ch; ret; 
0x000000000bb180: adc [rax-0x12cfeba9], cl; mov [rdi+0x15], ch; ret; 
0x0000000014f19d: adc [rax-0x13], cl; dec dword ptr [rax-0x75]; and al, 0x58; mov rdi, r12; call qword ptr [rax+0x20]; 
0x0000000009e94e: adc [rax-0x2fd6fdfd], edx; mov rdx, [rdx+0x8]; test rdx, rdx; jne short 0x000000000009e950; ret; 
0x000000000df46a: adc [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x000000001782c4: adc [rax-0x73], cl; adc [rdi], cl; test [rcx+0x5], eax; add [rax], al; ret; 
0x0000000012313c: adc [rax-0x73], cl; adc al, 0xb2; add eax, [rdx+rcx]; ret; 
0x00000000033e26: adc [rax-0x73], cl; adc al, 0xb7; mov r8d, [rdx+rax]; mov eax, r8d; ret; 
0x000000000a0338: adc [rax-0x73], cl; add eax, 0x1b0d0; cmove rax, rdx; ret; 
0x0000000009fb25: adc [rax-0x73], cl; add eax, 0x1bee3; cmovne rax, rdx; ret; 
0x0000000009f865: adc [rax-0x73], cl; add eax, 0x1c0f3; cmovne rax, rdx; ret; 
0x0000000009f275: adc [rax-0x73], cl; add eax, 0x1c633; cmovne rax, rdx; ret; 
0x0000000014f74c: adc [rax-0x73], cl; add eax, 0x642ac; movsxd rdx, [rax+rdx*4]; add rdx, rax; notrack jmp rdx; 
0x000000000b78cb: adc [rax-0x73], cl; jg short 0x00000000000b78e0; jne 0x00000000000b7fa0; ret; 
0x000000000b8fef: adc [rax-0x73], cl; jg short 0x00000000000b9004; jne 0x00000000000b97f0; ret; 
0x00000000123394: adc [rax-0x73], cl; or al, 0x8e; add eax, [rcx+rdx]; ret; 
0x00000000051f59: adc [rax-0x73], cl; xor eax, 0x1df; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000008df56: adc [rax-0x73], ecx; add [rax-0x77], rcx; sub [rax-0x3f76bbfe], r9b; ret; 
0x000000000b78ee: adc [rax-0x73], ecx; jg short 0x00000000000b7904; jne 0x00000000000b7fa0; ret; 
0x000000000b9012: adc [rax-0x73], ecx; jg short 0x00000000000b9028; jne 0x00000000000b97f0; ret; 
0x000000000860ee: adc [rax-0x73], ecx; jno short 0x00000000000860f7; mov [rdx+0x20], rsi; mov [rcx], eax; ret; 
0x00000000123393: adc [rax-0x73], r9b; or al, 0x8e; add eax, [rcx+rdx]; ret; 
0x000000000240ab: adc [rax-0x75], cl; and al, 0x18; call rax; 
0x0000000014ef6f: adc [rax-0x75], cl; and al, 0x48; call qword ptr [rax+0x28]; 
0x00000000122940: adc [rax-0x75], cl; and al, 0x8; mov rax, [rsp]; add rsp, 0x38; ret; 
0x000000001229a1: adc [rax-0x75], cl; and al, 0x8; mov rax, [rsp]; add rsp, 0x40; ret; 
0x00000000146961: adc [rax-0x75], cl; and al, 0x8; mov rdi, rbp; call rcx; 
0x0000000011f2b5: adc [rax-0x75], cl; je short 0x000000000011f2de; or [rax+0x119], bh; mov edi, [rsp+0x4]; syscall; 
0x00000000120c07: adc [rax-0x75], cl; je short 0x0000000000120c30; or [rax+0x12b], bh; mov edi, [rsp+0x4]; syscall; 
0x00000000147282: adc [rax-0x75], cl; or [r8-0x77], r9b; out dx, eax; call qword ptr [rax+0x20]; 
0x000000001490e1: adc [rax-0x75], cl; or [r9+rcx*4-0x1a], r9b; mov rdi, rbp; call qword ptr [rax]; 
0x00000000088a9b: adc [rax-0x75], cl; push rbx; mov rdi, rbx; sub rdx, rsi; call qword ptr [rax+0x70]; 
0x00000000086e87: adc [rax-0x77], cl; adc [rax-0x77], cl; push rax; adc [rax-0x77], cl; ret; 
0x000000000a8a6c: adc [rax-0x77], cl; adc bl, al; nop [rax]; mov byte ptr [rax], 0x0; ret; 
0x00000000156646: adc [rax-0x77], cl; and al, 0x10; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x000000000b67cc: adc [rax-0x77], cl; clc; ret; 
0x0000000004826c: adc [rax-0x77], cl; jl short 0x0000000000048295; or al, ch; cdq; ret; 
0x00000000087f8b: adc [rax-0x77], cl; jo short 0x0000000000087fd0; mov [rax], rdx; xor eax, eax; ret; 
0x00000000088eb3: adc [rax-0x77], cl; or [r8-0x77], cl; sbb r9b, bpl; ret far; 
0x00000000155e90: adc [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x8]; 
0x0000000008e945: adc [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x90]; 
0x00000000155e37: adc [rax-0x77], cl; out dx, eax; call qword ptr [rax]; 
0x00000000147627: adc [rax-0x77], cl; out dx, eax; mov [rbx], rax; xor eax, eax; call qword ptr [rbx+0x18]; 
0x00000000086e8b: adc [rax-0x77], cl; push rax; adc [rax-0x77], cl; ret; 
0x00000000086ecc: adc [rax-0x77], cl; push rax; movups [rax], xmm0; ret; 
0x00000000086e8f: adc [rax-0x77], cl; ret; 
0x00000000023a4e: adc [rax-0x77], ecx; add eax, 0x1cd8d2; ret; 
0x0000000008352e: adc [rax-0x77], ecx; ret far; 
0x00000000119ba9: adc [rax-0x7b], cl; push qword ptr [rbp+0x27]; mov rdi, [rbp]; call rbx; 
0x0000000011b48d: adc [rax-0x7b], cl; push qword ptr [rbp+0x44]; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011b45e: adc [rax-0x7b], cl; push qword ptr [rbp+0x4b]; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000009948b: adc [rax-0x7d], cl; call qword ptr [rax]; 
0x00000000024170: adc [rax-0x7d], cl; ret; 
0x00000000153702: adc [rax-0x7d], cl; rol byte ptr [rcx], 0x39; ret; 
0x000000000a882f: adc [rax-0x7d], cl; rol byte ptr [rcx], 0xf; mov esi, 0xf2390714; je short 0x00000000000a8830; ret; 
0x00000000118eb4: adc [rax-0x7d], ecx; ret; 
0x000000000f4cf4: adc [rax], al; add [rax-0x7d], cl; ret; 
0x00000000154d18: adc [rax], al; add [rax], al; add [rcx+rcx*4-0x11], cl; call qword ptr [rax+0x28]; 
0x0000000009529d: adc [rax], al; add [rax], al; cmovne rax, rdx; mov [rip+0x159bf4], rax; ret; 
0x000000001481c2: adc [rax], al; add [rax], al; mov [rsi+0x8], rax; ret; 
0x0000000011340e: adc [rax], al; add [rax], al; mov eax, 0x48; syscall; 
0x0000000014825c: adc [rax], al; add [rax], al; mov qword ptr [rsi+0x8], 0x0; mov [rsi+0x10], rax; ret; 
0x0000000014821e: adc [rax], al; add [rax], al; mov qword ptr [rsi+0x8], 0x1; mov [rsi+0x10], rax; ret; 
0x00000000083bf1: adc [rax], al; add [rax], al; mov rsi, r13; mov rdi, r15; call qword ptr [r14+0x38]; 
0x000000001468b5: adc [rax], al; add [rax], al; pop rbx; pop rbp; ret; 
0x000000000bc202: adc [rax], al; add [rax], al; pop rbx; ret; 
0x00000000063059: adc [rax], al; add [rax], al; ret; 
0x0000000011386a: adc [rax], al; add [rax], al; syscall; 
0x000000000aae58: adc [rax], al; add [rbp-0x77], cl; ret far; 
0x000000000df504: adc [rax], al; add [rcx+rax*2-0x77], esp; sbb [rcx+rcx*4-0x40], ecx; pop rbx; ret; 
0x00000000074f4c: adc [rax], al; add [rcx+rcx*4-0x16], cl; mov rsi, r10; mov rdi, r15; call qword ptr [rbx+0x38]; 
0x00000000062684: adc [rax], al; add [rcx+rcx*4-0x20], cl; pop rbp; pop r12; ret; 
0x0000000006e1c0: adc [rax], al; add [rcx-0x77], al; ret; 
0x000000000dd17d: adc [rax], al; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000a8b12: adc [rax], al; mov eax, edx; movsxd rax, [r8+rax*4]; add rax, r8; notrack jmp rax; 
0x000000000a897d: adc [rax], al; mov ecx, eax; movsxd rcx, [r9+rcx*4]; add rcx, r9; notrack jmp rcx; 
0x000000000a8a55: adc [rax], al; mov edx, edx; movsxd rdx, [rdi+rdx*4]; add rdx, rdi; notrack jmp rdx; 
0x000000000dd0d5: adc [rax], al; mov rax, [rax+0x1a0]; test rax, rax; je short 0x00000000000dd118; call rax; 
0x000000000dd055: adc [rax], al; mov rax, [rax+0x1c0]; test rax, rax; je short 0x00000000000dd098; call rax; 
0x000000000e30e5: adc [rax], al; mov rdi, r9; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000a900f: adc [rax], al; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x000000000e2b89: adc [rax], al; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000dd165: adc [rax], al; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000de2fd: adc [rax], al; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000002f5c6: adc [rax], al; nop [rax+rax]; endbr64; mov rax, [rip+0x1be38d]; ret; 
0x00000000052a31: adc [rax], al; ret; 
0x000000000dd9a5: adc [rax], al; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000df554: adc [rax], al; syscall; 
0x000000000e419c: adc [rax], al; test eax, eax; jne short 0x00000000000e41d0; mov eax, 0x69; syscall; 
0x000000000e423c: adc [rax], al; test eax, eax; jne short 0x00000000000e4270; mov eax, 0x6a; syscall; 
0x000000000e450c: adc [rax], al; test eax, eax; jne short 0x00000000000e4540; mov eax, 0x75; syscall; 
0x000000000e45bc: adc [rax], al; test eax, eax; jne short 0x00000000000e45f0; mov eax, 0x77; syscall; 
0x000000001924ce: adc [rax], bh; enter 0x275, 0x39; enter 0xc019, 0x83; fdivr st, st(7); ret; 
0x00000000055068: adc [rax], bh; jne short 0x0000000000055073; push r10; ret; 
0x00000000055571: adc [rax], bh; jne short 0x000000000005557c; push r10; ret; 
0x000000001482c7: adc [rax], ch; mov rax, [rdi+0x8]; call qword ptr [rax+0x30]; 
0x000000000bb0fd: adc [rax], dh; in eax, dx; mov [rdi+0x11], ch; ret; 
0x000000000bb11f: adc [rax], dh; in eax, dx; mov [rdi+0x12], ch; ret; 
0x000000000bb15d: adc [rax], dh; in eax, dx; mov [rdi+0x14], ch; ret; 
0x000000000bb1df: adc [rax], dh; in eax, dx; mov [rdi+0x18], ch; ret; 
0x000000000bb2e1: adc [rax], dh; in eax, dx; mov [rdi+0x20], ch; ret; 
0x00000000062878: adc [rax], dl; add [rax], al; pop rbp; ret; 
0x0000000010c194: adc [rax], eax; add [rax], al; syscall; 
0x000000000aacd8: adc [rax], eax; add [rbp-0x77], cl; ret far; 
0x000000000a424c: adc [rax], eax; add [rbp-0x77], cl; ret; 
0x000000000df1a3: adc [rax], eax; add [rbx+rcx*4+0x3d], ecx; ret; 
0x0000000005c7b6: adc [rax], eax; add [rbx-0x70f0fb08], al; cmp eax, 0xc7000015; test [rdi+rdi*8-0x1], esp; jmp qword ptr [rsi]; 
0x0000000005c7b7: adc [rax], eax; add [rbx-0x70f0fb08], al; cmp eax, 0xc7000015; test [rdi+rdi*8-0x1], esp; jmp qword ptr [rsi]; 
0x000000000a4472: adc [rax], eax; add [rcx-0x9], al; ret; 
0x000000000d0165: adc [rax], eax; add rsp, 0x8; ret; 
0x000000000e2f64: adc [rax], eax; and [rcx], al; mov eax, 0x38; syscall; 
0x000000000ddbb5: adc [rax], eax; lea rdi, [rip+0x10fdc2]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000ddb6f: adc [rax], eax; lea rdi, [rip+0x10fe08]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000dd9cd: adc [rax], eax; lea rdi, [rip+0x10ffaa]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000dd99e: adc [rax], eax; lea rdi, [rip+0x10ffd9]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000dd8d5: adc [rax], eax; lea rdi, [rip+0x1100a2]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000dd8ac: adc [rax], eax; lea rdi, [rip+0x1100cb]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000dd3d9: adc [rax], eax; lea rdi, [rip+0x11059d]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000d01a5: adc [rax], eax; mov dword ptr fs:[rax], 0x16; xor eax, eax; ret; 
0x000000000d0185: adc [rax], eax; mov dword ptr fs:[rax], 0x4b; xor eax, eax; add rsp, 0x8; ret; 
0x000000000d1df0: adc [rax], eax; movaps [rax], xmm0; add rsp, 0x10; pop rbp; ret; 
0x0000000009c68f: adc [rax], eax; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000000901d0: adc [rax], eax; movzx eax, al; movsxd rax, [r10+rax*4]; add rax, r10; notrack jmp rax; 
0x00000000090202: adc [rax], eax; movzx eax, al; movsxd rax, [r11+rax*4]; add rax, r11; notrack jmp rax; 
0x000000000d41f9: adc [rax], eax; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000d0f25: adc [rax], eax; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000d0e0d: adc [rax], eax; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000086ed3: adc [rax], eax; ret; 
0x000000000dd3e1: adc [rax], eax; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000d2994: adc [rax], eax; syscall; 
0x000000000df41c: adc [rax], eax; test eax, eax; jne short 0x00000000000df450; mov eax, 0x74; syscall; 
0x0000000010c7db: adc [rax], ecx; add [rax], al; add rsp, 0x18; ret; 
0x00000000148c90: adc [rbp+0x28840fc0], al; add [rax], eax; add [rcx+rcx*4-0x19], cl; call qword ptr [rbx]; 
0x00000000116c44: adc [rbp+0x31], al; shl byte ptr [rcx], cl; idiv byte ptr [rax+0x118]; syscall; 
0x000000000926ef: adc [rbp+0x38], eax; pop rbp; pop r12; ret; 
0x000000000a47b3: adc [rbp+0x39], cl; fiadd st, dword ptr [rcx+0xf]; xchg ebx, eax; ret; 
0x00000000112974: adc [rbp+0x41], bl; pop rsp; pop r13; pop r14; ret; 
0x0000000002ff3a: adc [rbp+0x41], bl; pop rsp; pop r13; ret; 
0x000000001490dd: adc [rbp+0x481074c0], al; mov eax, [rbp+0x8]; mov rsi, r12; mov rdi, rbp; call qword ptr [rax]; 
0x00000000155e2a: adc [rbp+0x487974c0], al; mov eax, [rbp+0x8]; lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax]; 
0x00000000146a8e: adc [rbp+0x494874c0], al; mov edi, [rsp]; mov rsi, r13; mov rax, [rdi+0x38]; call qword ptr [rax+0x10]; 
0x000000000946d6: adc [rbp+0x4c1574c0], al; mov eax, [rdi+0x8]; mov rax, [rdi]; mov rdi, r8; jmp rax; 
0x0000000014115b: adc [rbp+0x5b0875c0], al; pop rbp; pop r12; ret; 
0x000000000b9879: adc [rbp+rcx*4+0x1d], cl; call far fword ptr [rbx+0xf]; 
0x000000000b6e2f: adc [rbp+rcx*4+0x1d], cl; rol dword ptr [rdx+0x6349000f], 0x1; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000117c3c: adc [rbp+rcx], bh; cmp eax, 0x1; jg short 0x0000000000117c46; ret; 
0x00000000155d86: adc [rbp-0x3d], bl; nop [rax]; mov rax, [rdi+0x8]; mov rsi, rsp; call qword ptr [rax]; 
0x000000000bccfd: adc [rbp-0x6b], esi; test edx, edx; jne short 0x00000000000bcce0; ret; 
0x0000000012c3a1: adc [rbp-0x78], ebp; call rax; 
0x0000000012c4bc: adc [rbp-0x78], ebx; call r9; 
0x0000000012c6ee: adc [rbp-0x78], ecx; call rax; 
0x0000000012c9e4: adc [rbp-0x78], edi; call rax; 
0x0000000012c58f: adc [rbp-0x78], edi; call rcx; 
0x0000000012c314: adc [rbp-0x78], edx; call rcx; 
0x0000000012c916: adc [rbp-0x78], esi; call rax; 
0x0000000012c406: adc [rbp-0x78], esp; call rax; 
0x0000000011aa21: adc [rbp-0x7b], cl; dec dword ptr [rdi]; test [rbp+0x49000002], esi; mov edi, [rsi]; call rbx; 
0x0000000011aa81: adc [rbp-0x7b], cl; dec dword ptr [rdi]; test [rcx+0x49000001], esp; mov edi, [rsi]; call rbx; 
0x0000000011a98d: adc [rbp-0x7b], cl; div byte ptr [rbp+0x1d]; mov rdi, [r13]; call rbx; 
0x0000000011a85a: adc [rbp-0x7b], cl; in al, 0x75; sub [rax-0x75], cl; jge short 0x000000000011a864; call rbx; 
0x0000000011a89b: adc [rbp-0x7b], cl; in eax, dx; jne short 0x000000000011a8f0; mov rdi, [r12]; call rbx; 
0x0000000011a8cb: adc [rbp-0x7b], cl; in eax, dx; jne short 0x000000000011a950; mov rdi, [r12]; call rbx; 
0x0000000011aadd: adc [rbp-0x7b], cl; push qword ptr [rbp+0x3e]; mov rdi, [r14]; call rbx; 
0x0000000011ab09: adc [rbp-0x7b], cl; push qword ptr [rbp+0x69]; mov rdi, [r14]; call rbx; 
0x0000000011acc4: adc [rbp-0x7b], cl; ror byte ptr [rdi], 0x85; adc eax, 0x49000007; mov edi, [rdi]; call rbx; 
0x0000000011ada1: adc [rbp-0x7b], cl; shl byte ptr [rbp+0x3b], 0x49; mov edi, [rdi]; call rbx; 
0x0000000011adca: adc [rbp-0x7b], cl; shl byte ptr [rbp+0x7d], 0x49; mov edi, [rdi]; call rbx; 
0x0000000011a931: adc [rbp-0x7b], cl; test byte ptr [rdi], 0x85; xor eax, 0x49000001; mov edi, [rbp]; call rbx; 
0x0000000008dfb5: adc [rbx+0x10], dh; lea rdx, [rax+0x1]; mov [rdi+0x8], rdx; movzx eax, byte ptr [rax]; ret; 
0x0000000008df7b: adc [rbx+0x12], dh; lea rdx, [rax+0x1]; mov [rdi+0x8], rdx; movzx eax, byte ptr [rax]; ret; 
0x0000000009101f: adc [rbx+0x15d7992d], al; add [rcx], al; ret; 
0x0000000008e583: adc [rbx+0x18], eax; movups [rbx+0x28], xmm0; pop rbx; ret; 
0x0000000009e931: adc [rbx+0x18], eax; pop rbx; pop rbp; pop r12; ret; 
0x0000000008e587: adc [rbx+0x28], eax; pop rbx; ret; 
0x0000000009e5af: adc [rbx+0x38], eax; mov [rbx], rsi; call rcx; 
0x0000000009e4d5: adc [rbx+0x38], eax; movsxd rdi, esi; mov [rbx], rdi; call rcx; 
0x00000000091f36: adc [rbx+0x38], eax; pop rbx; pop rbp; pop r12; ret; 
0x00000000062598: adc [rbx+0x41], bl; pop rsp; pop r13; ret; 
0x00000000192adf: adc [rbx+0x463bfc47], cl; cld; jne short 0x0000000000192af0; xor eax, eax; ret; 
0x000000000475a9: adc [rbx+0x48], bl; mov dword ptr [rip+0x1a9d39], 0x0; mov eax, [rax+0x58]; ret; 
0x000000000919f6: adc [rbx+0x48], eax; pop rbx; ret; 
0x000000000df64c: adc [rbx+0x5d], bl; pop r12; pop r13; pop r14; ret; 
0x000000000ef1c1: adc [rbx+0x5d], bl; pop r12; pop r13; pop r15; ret; 
0x00000000081157: adc [rbx+0x5d], bl; pop r12; ret; 
0x0000000008e57f: adc [rbx+0x8], eax; movups [rbx+0x18], xmm0; movups [rbx+0x28], xmm0; pop rbx; ret; 
0x0000000008e686: adc [rbx+0x8], eax; pop rbx; ret; 
0x0000000011a588: adc [rbx+0x94801e0], al; ror byte ptr [rcx-0x77], 0x1; or [r9-0x75], cl; add [rbx+0x94901e0], eax; ret; 
0x000000000b7097: adc [rbx+0xff3174e], cl; jg short 0x00000000000b70a6; mov [rdi+0x10], rdx; mov [rdi+0x17], ecx; ret; 
0x000000000b7d87: adc [rbx+0xff3174e], cl; jg short 0x00000000000b7d96; mov [rdi+0x10], rdx; mov [rdi+0x17], ecx; ret; 
0x000000000ba3a7: adc [rbx+0xff3174e], cl; jg short 0x00000000000ba3b6; mov [rdi+0x10], rdx; mov [rdi+0x17], ecx; ret; 
0x000000000bae97: adc [rbx+0xff3174e], cl; jg short 0x00000000000baea6; mov [rdi+0x10], rdx; mov [rdi+0x17], ecx; ret; 
0x000000000b70b7: adc [rbx+0xff3184e], cl; jg short 0x00000000000b70c6; mov [rdi+0x10], rdx; mov [rdi+0x18], ecx; ret; 
0x000000000b7da7: adc [rbx+0xff3184e], cl; jg short 0x00000000000b7db6; mov [rdi+0x10], rdx; mov [rdi+0x18], ecx; ret; 
0x000000000ba3c7: adc [rbx+0xff3184e], cl; jg short 0x00000000000ba3d6; mov [rdi+0x10], rdx; mov [rdi+0x18], ecx; ret; 
0x000000000baeb7: adc [rbx+0xff3184e], cl; jg short 0x00000000000baec6; mov [rdi+0x10], rdx; mov [rdi+0x18], ecx; ret; 
0x00000000111d6e: adc [rbx+r9*4+0x63], r9b; or [rax-0x7d], cl; ret; 
0x00000000111d6f: adc [rbx+rcx*4+0x63], cl; or [rax-0x7d], cl; ret; 
0x000000000935ca: adc [rbx-0x2fd6efb9], cl; ret; 
0x0000000008777e: adc [rbx-0x3b7cb7ff], cl; or [rbx+0x5d], bl; ret; 
0x000000001571b6: adc [rbx-0x3d], bl; nop [rax]; mov rax, [rdi+0x8]; lea rsi, [rsp+0x4]; call qword ptr [rax+0x40]; 
0x00000000149026: adc [rbx-0x3d], bl; nop [rax]; mov rax, [rdi+0x8]; mov rsi, rsp; call qword ptr [rax]; 
0x0000000010df67: adc [rbx-0x47e7db84], cl; add [rcx], eax; add [rax], al; syscall; 
0x00000000120cb2: adc [rbx-0x47f3db84], cl; xor eax, [rcx]; add [rax], al; syscall; 
0x0000000013c26e: adc [rbx-0x73], al; add [rdx], r8d; pop rbx; ret; 
0x00000000048038: adc [rbx], eax; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000000bbdfc: adc [rbx], eax; ret; 
0x000000000bbd75: adc [rbx], esp; ret; 
0x00000000142fd1: adc [rcx+0x244489ee], cl; adc al, 0x4c; mov edx, esp; mov eax, 0x81; syscall; 
0x0000000005fd2a: adc [rcx+0x39], cl; ret; 
0x0000000018fd26: adc [rcx+0x4], esp; vmovups [r9+0x140], zmm13; vmovups [r9+0x180], zmm14; vmovups [r9+0x1c0], zmm15; ret; 
0x0000000018fd25: adc [rcx+0x4], rsp; vmovups [r9+0x140], zmm13; vmovups [r9+0x180], zmm14; vmovups [r9+0x1c0], zmm15; ret; 
0x0000000013c599: adc [rcx+0x4e2c1f2], ecx; add edx, 0x8; cmp esi, 0x80; cmovb eax, edx; ret; 
0x0000000018fd2d: adc [rcx+0x5], ebp; vmovups [r9+0x180], zmm14; vmovups [r9+0x1c0], zmm15; ret; 
0x0000000018fd2c: adc [rcx+0x5], rbp; vmovups [r9+0x180], zmm14; vmovups [r9+0x1c0], zmm15; ret; 
0x000000001448e2: adc [rcx+0x5c], al; ret; 
0x000000001786e1: adc [rcx+0x66c30351], ecx; nop [rax+rax]; mov [rcx], rdx; ret; 
0x00000000178722: adc [rcx+0x66c30751], ecx; nop [rax+rax]; mov [rcx], rdx; mov [rcx+0x8], edx; ret; 
0x00000000178732: adc [rcx+0x66c30851], ecx; nop [rax+rax]; mov [rcx], rdx; mov [rcx+0x5], rdx; ret; 
0x0000000018fd34: adc [rcx+0x6], esi; vmovups [r9+0x1c0], zmm15; ret; 
0x0000000018fd33: adc [rcx+0x6], rsi; vmovups [r9+0x1c0], zmm15; ret; 
0x0000000018fd3b: adc [rcx+0x7], edi; ret; 
0x0000000018fd3a: adc [rcx+0x7], rdi; ret; 
0x000000000c8593: adc [rcx+rcx*4+0x45], cl; mov eax, 0xfd83949; xchg ebx, eax; ret; 
0x0000000003f433: adc [rcx+rcx*4+0x4], cl; and al, 0xe8; ret; 
0x00000000050efb: adc [rcx+rcx*4+0xc], cl; and al, 0xe8; ret far; 
0x00000000149db4: adc [rcx+rcx*4-0x16], cl; mov rsi, r12; mov rdi, rbp; call rax; 
0x000000000bd8ee: adc [rcx+rcx*4-0x19], cl; mov rsi, [rsp+0x18]; call rbx; 
0x000000001509e3: adc [rcx+rcx*4-0x1], cl; call rcx; 
0x00000000138164: adc [rcx+rcx*4-0x1a], cl; call qword ptr [rsp+0x58]; 
0x0000000014d1d1: adc [rcx+rcx*4-0x1a], cl; mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x8]; 
0x00000000148c87: adc [rcx+rcx*4-0x1e], cl; mov rdi, r14; call qword ptr [rax+0x10]; 
0x00000000148cc1: adc [rcx+rcx*4-0x1e], cl; mov rdi, r14; call qword ptr [rax+0x20]; 
0x0000000009d515: adc [rcx+rcx*4-0x20], al; pop r12; ret; 
0x00000000044184: adc [rcx+rcx*4-0x20], al; pop rbx; pop rbp; pop r12; ret; 
0x0000000002ff62: adc [rcx+rcx*4-0x20], cl; pop rbp; pop r12; pop r13; ret; 
0x0000000008130b: adc [rcx+rcx*4-0x20], cl; pop rbx; pop rbp; pop r12; ret; 
0x0000000010d985: adc [rcx+rcx*4-0x30], al; cmp r10, rax; jne short 0x000000000010d9b8; mov eax, 0x103; syscall; 
0x000000001522a8: adc [rcx+rcx*4-0x40], al; pop r12; ret; 
0x0000000015caf5: adc [rcx+rcx*4-0x40], al; pop rbp; ret; 
0x00000000046d5f: adc [rcx+rcx*4-0x40], al; pop rbx; pop rbp; pop r12; ret; 
0x000000000995d2: adc [rcx+rcx*4-0x40], cl; pop rbp; ret; 
0x0000000009ce77: adc [rcx+rcx*4-0x40], cl; pop rbx; pop rbp; pop r12; ret; 
0x000000000993db: adc [rcx+rcx*4-0x40], cl; pop rbx; ret; 
0x000000000d4abe: adc [rcx+rcx*4-0x40], ecx; add rsp, 0x8; ret; 
0x00000000137d64: adc [rcx+rcx*4-0xe], cl; mov rdi, r15; mov rsi, [rsp+0x8]; call rbp; 
0x000000000bbd67: adc [rcx-0x10], esi; movups [rcx-0x20], xmm7; movups [rcx-0x30], xmm8; movups [r11], xmm4; ret; 
0x000000000bb262: adc [rcx-0x12cfe7b1], cl; mov [rdi+0x1c], ch; ret; 
0x000000000bb242: adc [rcx-0x12cfe8b1], cl; mov [rdi+0x1b], ch; ret; 
0x0000000018f9d6: adc [rcx-0x1], ebx; ret; 
0x0000000018f99a: adc [rcx-0x1], edi; ret; 
0x0000000018f9d5: adc [rcx-0x1], rbx; ret; 
0x0000000018f999: adc [rcx-0x1], rdi; ret; 
0x000000000bbd6b: adc [rcx-0x20], edi; movups [rcx-0x30], xmm8; movups [r11], xmm4; ret; 
0x0000000004c6ab: adc [rcx-0x2], edi; call qword ptr [rax+0x56415741]; 
0x0000000018f9cf: adc [rcx-0x2], edx; vmovups [r9-0x40], zmm3; ret; 
0x0000000018fbcd: adc [rcx-0x2], esi; vmovups [r9-0x40], zmm15; ret; 
0x0000000018f993: adc [rcx-0x2], esi; vmovups [r9-0x40], zmm7; ret; 
0x0000000018f9ce: adc [rcx-0x2], rdx; vmovups [r9-0x40], zmm3; ret; 
0x0000000018fbcc: adc [rcx-0x2], rsi; vmovups [r9-0x40], zmm15; ret; 
0x0000000018f992: adc [rcx-0x2], rsi; vmovups [r9-0x40], zmm7; ret; 
0x000000000bbd70: adc [rcx-0x30], eax; movups [r11], xmm4; ret; 
0x0000000018fbc6: adc [rcx-0x3], ebp; vmovups [r9-0x80], zmm14; vmovups [r9-0x40], zmm15; ret; 
0x0000000018f98c: adc [rcx-0x3], ebp; vmovups [r9-0x80], zmm6; vmovups [r9-0x40], zmm7; ret; 
0x0000000018fbc5: adc [rcx-0x3], rbp; vmovups [r9-0x80], zmm14; vmovups [r9-0x40], zmm15; ret; 
0x0000000018f98b: adc [rcx-0x3], rbp; vmovups [r9-0x80], zmm6; vmovups [r9-0x40], zmm7; ret; 
0x0000000010d923: adc [rcx-0x3dc6b730], ecx; jne short 0x000000000010d958; mov eax, 0x85; syscall; 
0x00000000047cce: adc [rcx-0x3f76bbea], cl; ret; 
0x00000000157c57: adc [rcx-0x48], al; add [rax], eax; add [rax], al; mov eax, r8d; ret; 
0x0000000018fbbf: adc [rcx-0x4], esp; vmovups [r9-0xc0], zmm13; vmovups [r9-0x80], zmm14; vmovups [r9-0x40], zmm15; ret; 
0x0000000018f985: adc [rcx-0x4], esp; vmovups [r9-0xc0], zmm5; vmovups [r9-0x80], zmm6; vmovups [r9-0x40], zmm7; ret; 
0x0000000018fbbe: adc [rcx-0x4], rsp; vmovups [r9-0xc0], zmm13; vmovups [r9-0x80], zmm14; vmovups [r9-0x40], zmm15; ret; 
0x0000000018f984: adc [rcx-0x4], rsp; vmovups [r9-0xc0], zmm5; vmovups [r9-0x80], zmm6; vmovups [r9-0x40], zmm7; ret; 
0x0000000004827f: adc [rcx-0x77], al; ror byte ptr [rax-0x75], 0x7c; and al, 0x8; mov eax, 0x13e; syscall; 
0x00000000118a3f: adc [rcx-0x77], al; ror byte ptr [rax-0x75], 0x7c; and al, 0x8; mov eax, 0x1a; syscall; 
0x000000001129bf: adc [rcx-0x77], al; ror byte ptr [rax-0x75], 0x7c; and al, 0x8; mov eax, 0x7; syscall; 
0x0000000010e030: adc [rcx-0x77], al; ror byte ptr [rbx+0x3108247c], 0xc0; syscall; 
0x0000000011f53b: adc [rcx-0x77], al; ror byte ptr [rbx-0x74e7db8c], 0x7c; and al, 0x8; mov eax, 0x114; syscall; 
0x0000000011330c: adc [rcx-0x77], al; ror byte ptr [rbx-0x74f3db8c], 0x7c; and al, 0x8; mov eax, 0x11d; syscall; 
0x0000000015a33c: adc [rcx-0x77], cl; ret; 
0x00000000053c5f: adc [rcx-0x7d], cl; ret; 
0x00000000154b14: adc [rcx], al; add [rax], al; add [rcx+rcx*4-0x11], cl; call qword ptr [rax+0x28]; 
0x00000000160871: adc [rcx], al; add [rax], al; mov eax, r12d; pop r12; ret; 
0x0000000011fe25: adc [rcx], al; add [rax], al; syscall; 
0x000000001578bf: adc [rcx], al; imul ebp, [rax], 0x5b; pop rbp; pop r12; ret; 
0x000000000eb01a: adc [rcx], bh; ret far; 
0x00000000183797: adc [rcx], ch; cmp edx, ecx; jle short 0x00000000001837b4; movsxd rax, ecx; ret; 
0x000000000935cd: adc [rcx], ch; rol bl, 0x1; mov eax, 0xffffffff; ret; 
0x00000000127d1f: adc [rcx], dh; idiv byte ptr [rdi+0x2000004]; call rax; 
0x00000000087f92: adc [rcx], dh; rol bl, 0x66; nop [rax+rax]; mov eax, 0xffffffff; ret; 
0x00000000089267: adc [rcx], dh; ror byte ptr [rcx+rcx*4-0x1], cl; call qword ptr [r14+0x80]; 
0x00000000144d5b: adc [rcx], dh; ror byte ptr [rcx+rcx*4-0x1a], cl; mov rdi, rbx; mov rcx, r13; call r10; 
0x0000000018cea4: adc [rcx], edx; bsr eax, eax; lea rax, [rdi+rax-0x20]; vzeroupper; ret; 
0x0000000010c32e: adc [rdi+0x10], eax; movups [rdi+0x20], xmm0; movups [rdi+0x30], xmm0; movups [rdi+0x40], xmm0; ret; 
0x000000000bbdef: adc [rdi+0x10], ebp; movups [rdi+0x20], xmm6; movups [rdi+0x30], xmm7; movups [r11], xmm8; ret; 
0x000000000bbcd5: adc [rdi+0x10], ecx; movups [rdi+rdx-0x10], xmm2; movups [rdi+rdx-0x20], xmm3; ret; 
0x0000000015760e: adc [rdi+0x18], eax; ret; 
0x0000000018f9c8: adc [rdi+0x1], ecx; vmovups [r9-0x80], zmm2; vmovups [r9-0x40], zmm3; ret; 
0x000000001900d5: adc [rdi+0x1], edx; vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x0000000018f9c7: adc [rdi+0x1], rcx; vmovups [r9-0x80], zmm2; vmovups [r9-0x40], zmm3; ret; 
0x000000001900d4: adc [rdi+0x1], rdx; vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x0000000010c332: adc [rdi+0x20], eax; movups [rdi+0x30], xmm0; movups [rdi+0x40], xmm0; ret; 
0x000000000bbdf3: adc [rdi+0x20], esi; movups [rdi+0x30], xmm7; movups [r11], xmm8; ret; 
0x0000000010c336: adc [rdi+0x30], eax; movups [rdi+0x40], xmm0; ret; 
0x000000000bbdf7: adc [rdi+0x30], edi; movups [r11], xmm8; ret; 
0x00000000043b71: adc [rdi+0x38], eax; movups [rdi+0x48], xmm0; movups [rdi+0x58], xmm0; movups [rdi+0x68], xmm0; ret; 
0x0000000010c33a: adc [rdi+0x40], eax; ret; 
0x00000000043b75: adc [rdi+0x48], eax; movups [rdi+0x58], xmm0; movups [rdi+0x68], xmm0; ret; 
0x00000000043b79: adc [rdi+0x58], eax; movups [rdi+0x68], xmm0; ret; 
0x00000000043b7d: adc [rdi+0x68], eax; ret; 
0x0000000010c771: adc [rdi+0x68], esi; movdqu xmm7, [rsi+0x70]; movups [rdi+0x78], xmm7; ret; 
0x0000000010c77a: adc [rdi+0x78], edi; ret; 
0x0000000009192c: adc [rdi+0x8], eax; ret; 
0x0000000010d103: adc [rdi+0xe8], esi; movdqu xmm7, [rsi+0x70]; movups [rdi+0xf8], xmm7; ret; 
0x0000000010d10f: adc [rdi+0xf8], edi; ret; 
0x0000000013c654: adc [rdi+rdx+0x8], eax; ret; 
0x000000000bbb17: adc [rdi+rdx-0x10], ecx; ret; 
0x000000000bbcd9: adc [rdi+rdx-0x10], edx; movups [rdi+rdx-0x20], xmm3; ret; 
0x000000000bbcac: adc [rdi+rdx-0x10], esp; movups [rdi+rdx-0x20], xmm5; movups [rdi+rdx-0x30], xmm6; movups [rdi+rdx-0x40], xmm7; ret; 
0x000000000bbcb1: adc [rdi+rdx-0x20], ebp; movups [rdi+rdx-0x30], xmm6; movups [rdi+rdx-0x40], xmm7; ret; 
0x000000000bbcde: adc [rdi+rdx-0x20], ebx; ret; 
0x000000000bbcb6: adc [rdi+rdx-0x30], esi; movups [rdi+rdx-0x40], xmm7; ret; 
0x000000000bbcbb: adc [rdi+rdx-0x40], edi; ret; 
0x0000000018fe88: adc [rdi-0x5], esp; vmovups [rdi-0x180], zmm13; vmovups [rdi-0x1c0], zmm14; vmovups [rdi-0x200], zmm15; ret; 
0x0000000018fe87: adc [rdi-0x5], rsp; vmovups [rdi-0x180], zmm13; vmovups [rdi-0x1c0], zmm14; vmovups [rdi-0x200], zmm15; ret; 
0x0000000018fe8f: adc [rdi-0x6], ebp; vmovups [rdi-0x1c0], zmm14; vmovups [rdi-0x200], zmm15; ret; 
0x0000000018fe8e: adc [rdi-0x6], rbp; vmovups [rdi-0x1c0], zmm14; vmovups [rdi-0x200], zmm15; ret; 
0x0000000003651c: adc [rdi-0x72b7ffe5], ch; cmp eax, 0x1b7699; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000018fe96: adc [rdi-0x7], esi; vmovups [rdi-0x200], zmm15; ret; 
0x0000000018fe95: adc [rdi-0x7], rsi; vmovups [rdi-0x200], zmm15; ret; 
0x0000000018fe9d: adc [rdi-0x8], edi; ret; 
0x0000000018fe9c: adc [rdi-0x8], rdi; ret; 
0x0000000002e074: adc [rdi], al; add [rax], al; add cl, ch; ret; 
0x0000000010c330: adc [rdi], cl; adc [rdi+0x20], eax; movups [rdi+0x30], xmm0; movups [rdi+0x40], xmm0; ret; 
0x000000000bbdf1: adc [rdi], cl; adc [rdi+0x20], esi; movups [rdi+0x30], xmm7; movups [r11], xmm8; ret; 
0x000000000bbcd7: adc [rdi], cl; adc [rdi+rdx-0x10], edx; movups [rdi+rdx-0x20], xmm3; ret; 
0x00000000150778: adc [rdi], cl; enter 0xc089, 0x48; mov [rdx], eax; mov eax, 0x1; ret; 
0x000000000a8ac5: adc [rdi], cl; mov bh, 0x54; and al, 0xec; mov [rax+0x4], dx; ret; 
0x000000000341f9: adc [rdi], cl; mov bh, 0xc0; ret; 
0x000000000a8aad: adc [rdi], cl; mov dh, 0x54; and al, 0xf4; mov [rax+0x4], dl; ret; 
0x000000000a8a8f: adc [rdi], cl; mov dh, 0x54; and al, 0xfa; mov [rax+0x2], dl; ret; 
0x0000000008e00c: adc [rdi], cl; mov dh, 0xc0; pop rbx; neg eax; ret; 
0x000000001782c7: adc [rdi], cl; test [rcx+0x5], eax; add [rax], al; ret; 
0x00000000041f89: adc [rdi], eax; and rdx, rax; movq xmm0, rdx; ret; 
0x00000000057dd5: adc [rdi], eax; mov [rdx], eax; mov eax, 0x2; ret; 
0x00000000042335: adc [rdi], eax; movd xmm0, esi; ret; 
0x000000000bbcd2: adc [rdi], eax; movups [rdi+0x10], xmm1; movups [rdi+rdx-0x10], xmm2; movups [rdi+rdx-0x20], xmm3; ret; 
0x000000000bbb14: adc [rdi], eax; movups [rdi+rdx-0x10], xmm1; ret; 
0x00000000043f66: adc [rdi], eax; ret; 
0x0000000018f9c2: adc [rdi], eax; vmovups [rdi+0x40], zmm1; vmovups [r9-0x80], zmm2; vmovups [r9-0x40], zmm3; ret; 
0x000000001900cf: adc [rdi], edx; vmovups [rdi+0x40], zmm2; vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x000000001900f0: adc [rdi], edx; vmovups [rsi-0x40], zmm2; ret; 
0x0000000013ee4b: adc [rdi], esi; out dx, al; jmp qword ptr [rsi+0xf]; 
0x0000000018f9c1: adc [rdi], rax; vmovups [rdi+0x40], zmm1; vmovups [r9-0x80], zmm2; vmovups [r9-0x40], zmm3; ret; 
0x000000001900ce: adc [rdi], rdx; vmovups [rdi+0x40], zmm2; vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x000000001900ef: adc [rdi], rdx; vmovups [rsi-0x40], zmm2; ret; 
0x00000000121c72: adc [rdx+0x13], dh; mov qword ptr [rip+0xca6e0], 0x2; ret; 
0x000000000bd5c8: adc [rdx+0x1], ch; push 0x0; lea rcx, [rax+0x4]; lea r9, [rsp+0x20]; call rbx; 
0x000000000bd55a: adc [rdx+0x1], ch; xor edx, edx; push 0x1; lea r9, [rsp+0x20]; call rbx; 
0x0000000008d33b: adc [rdx+0x32], dh; mov [rdi+0x18], rax; mov [rsi], rax; xor eax, eax; ret; 
0x0000000008d79b: adc [rdx+0x42], dh; mov [rdi+0x18], rax; mov [rsi], rax; xor eax, eax; ret; 
0x000000000271af: adc [rdx+0x48], eax; ret; 
0x0000000014784f: adc [rdx+0x59], bl; mov rdi, [rsp+0x8]; mov r12d, eax; mov rax, [rdi+0x8]; call qword ptr [rax+0x20]; 
0x00000000052a1c: adc [rdx+0x6], bh; mov [rip+0x19bc3d], al; lea rax, [rip+0x19bc31]; mov byte ptr [rax+rdx], 0x0; ret; 
0x00000000122086: adc [rdx+0x8], dh; seta al; movzx eax, al; neg eax; ret; 
0x000000001028de: adc [rdx+0x8], dh; setne al; movzx eax, al; neg eax; ret; 
0x000000001663fa: adc [rdx+0x9], dh; movaps [rdi], xmm4; notrack jmp r9; 
0x000000000b7cc6: adc [rdx+0xff31456], cl; jg short 0x00000000000b7cd5; mov [rdi+0x10], ecx; mov [rdi+0x14], dl; ret; 
0x000000000b7cc5: adc [rdx+0xff31456], r9b; jg short 0x00000000000b7cd5; mov [rdi+0x10], ecx; mov [rdi+0x14], dl; ret; 
0x000000000b7d47: adc [rdx+0xff3184e], cl; jg short 0x00000000000b7d56; mov [rdi+0x10], rdx; mov [rdi+0x18], cl; ret; 
0x000000000b7e48: adc [rdx+0xff3204e], cl; jg short 0x00000000000b7e57; movdqu [rdi+0x10], xmm2; mov [rdi+0x20], cl; ret; 
0x000000000b9698: adc [rdx+0xff3204e], cl; jg short 0x00000000000b96a7; movdqu [rdi+0x10], xmm2; mov [rdi+0x20], cl; ret; 
0x00000000040fea: adc [rdx+rdx*8-0x3c3c268b], eax; nop [rax]; xor eax, eax; ret; 
0x0000000017ca4c: adc [rdx], al; add [rax], al; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x0000000018e05b: adc [rdx], cl; add [rax], al; xor eax, eax; ret; 
0x000000001506fc: adc [rdx], ebx; ret; 
0x0000000014cfa4: adc [rdx], ecx; ret; 
0x0000000014fdec: adc [rdx], edx; ret; 
0x000000001506dc: adc [rdx], esp; ret; 
0x000000000e3220: adc [rip+0x142b800], ecx; add [rax], al; syscall; 
0x0000000016ca47: adc [rip+0x14634900], al; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000422e6: adc [rip+0x1670f4], bl; andps xmm0, xmm3; andnps xmm3, xmm1; orps xmm0, xmm3; ret; 
0x000000000420b0: adc [rip+0x17ac2a], al; orpd xmm1, [rip+0x17a642]; mulsd xmm0, xmm1; ret; 
0x0000000004208a: adc [rip+0x17ac58], al; orpd xmm1, [rip+0x17a678]; mulsd xmm0, xmm1; ret; 
0x0000000019717e: adc [rip+0x261fc], al; divss xmm0, [rip+0x27508]; ret; 
0x00000000140f4c: adc [rip+0x3948ffee], dl; ret; 
0x00000000041ba7: adc [rip-0x8000], cl; inc eax; shr eax, 0x1f; ret; 
0x00000000190215: adc [rsi+0x1], edx; vmovups [rsi+0x80], zmm2; vmovups [rsi+0xc0], zmm2; ret; 
0x00000000190214: adc [rsi+0x1], rdx; vmovups [rsi+0x80], zmm2; vmovups [rsi+0xc0], zmm2; ret; 
0x0000000019021c: adc [rsi+0x2], edx; vmovups [rsi+0xc0], zmm2; ret; 
0x0000000019021b: adc [rsi+0x2], rdx; vmovups [rsi+0xc0], zmm2; ret; 
0x00000000190223: adc [rsi+0x3], edx; ret; 
0x00000000190222: adc [rsi+0x3], rdx; ret; 
0x000000001902ab: adc [rsi+0x4], edx; vmovups [rsi+0x140], zmm2; vmovups [rsi+0x180], zmm2; vmovups [rsi+0x1c0], zmm2; ret; 
0x000000001902aa: adc [rsi+0x4], rdx; vmovups [rsi+0x140], zmm2; vmovups [rsi+0x180], zmm2; vmovups [rsi+0x1c0], zmm2; ret; 
0x000000001902b2: adc [rsi+0x5], edx; vmovups [rsi+0x180], zmm2; vmovups [rsi+0x1c0], zmm2; ret; 
0x000000001902b1: adc [rsi+0x5], rdx; vmovups [rsi+0x180], zmm2; vmovups [rsi+0x1c0], zmm2; ret; 
0x0000000010c721: adc [rsi+0x60], esi; movdqu xmm7, [rdi+0x78]; movups [rsi+0x70], xmm7; ret; 
0x0000000010d076: adc [rsi+0x60], esi; movdqu xmm7, [rdi+0xf8]; movups [rsi+0x70], xmm7; ret; 
0x000000001902b9: adc [rsi+0x6], edx; vmovups [rsi+0x1c0], zmm2; ret; 
0x000000001902b8: adc [rsi+0x6], rdx; vmovups [rsi+0x1c0], zmm2; ret; 
0x0000000010c72a: adc [rsi+0x70], edi; ret; 
0x000000001902c0: adc [rsi+0x7], edx; ret; 
0x000000001902bf: adc [rsi+0x7], rdx; ret; 
0x00000000100487: adc [rsi+0x8], eax; ret; 
0x0000000014824c: adc [rsi+0x8], ecx; ret; 
0x0000000018df0a: adc [rsi+0xf], ah; cmp [rdi], dl; ret; 
0x000000000a91ab: adc [rsi+0xf], ah; outsd dx, [rsi]; fsub st(1), st; imul edi, 0xffffffff; jmp qword ptr [rsi+0x66]; 
0x000000000ac170: adc [rsi+0xf], ah; xlat [rbx]; rol dword ptr [rbp+0x315775c0], 0xc0; ret; 
0x000000000bbb0f: adc [rsi+rdx-0x10], cl; movups [rdi], xmm0; movups [rdi+rdx-0x10], xmm1; ret; 
0x000000001900c2: adc [rsi-0x1], edx; ret; 
0x000000001900c1: adc [rsi-0x1], rdx; ret; 
0x0000000012105b: adc [rsi-0x2708fff4], ebp; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000001900bb: adc [rsi-0x2], edx; vmovups [rsi-0x40], zmm2; ret; 
0x000000001900ba: adc [rsi-0x2], rdx; vmovups [rsi-0x40], zmm2; ret; 
0x000000001900b4: adc [rsi-0x3], edx; vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x000000001900b3: adc [rsi-0x3], rdx; vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x000000001900ad: adc [rsi-0x4], edx; vmovups [rsi-0xc0], zmm2; vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x000000001900ac: adc [rsi-0x4], rdx; vmovups [rsi-0xc0], zmm2; vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x0000000018fa5e: adc [rsi-0x75], ah; mov cx, [rcx-0x2]; mov [rdi], si; mov [r9-0x2], cx; ret; 
0x000000000bb223: adc [rsi-0x77], ah; sbb [r8], r14b; in eax, dx; mov [rdi+0x1a], ch; ret; 
0x000000000bbb0c: adc [rsi], al; movups xmm1, [rsi+rdx-0x10]; movups [rdi], xmm0; movups [rdi+rdx-0x10], xmm1; ret; 
0x0000000014fcee: adc [rsi], eax; mov rax, [rax+0x40]; mov [rsi+0x10], rax; ret; 
0x0000000015062e: adc [rsi], eax; mov rax, [rax+0x50]; mov [rsi+0x10], rax; ret; 
0x0000000014ceb1: adc [rsi], eax; mov rax, [rax+0xa0]; mov [rsi+0x10], rax; ret; 
0x000000000479f4: adc [rsi], eax; sub ecx, 0x1; jns short 0x00000000000479b9; xor eax, eax; ret; 
0x0000000019020f: adc [rsi], edx; vmovups [rsi+0x40], zmm2; vmovups [rsi+0x80], zmm2; vmovups [rsi+0xc0], zmm2; ret; 
0x0000000019020e: adc [rsi], rdx; vmovups [rsi+0x40], zmm2; vmovups [rsi+0x80], zmm2; vmovups [rsi+0xc0], zmm2; ret; 
0x000000001138de: adc [rsp+0x11], eax; syscall; 
0x000000001538f0: adc [rsp+0x18], eax; call qword ptr [rax+0x18]; 
0x00000000157a0a: adc [rsp+0x18], eax; call r8; 
0x00000000153bf4: adc [rsp+0x18], ecx; movups [rsp+0x38], xmm0; call qword ptr [rax+0x18]; 
0x00000000153bf9: adc [rsp+0x38], eax; call qword ptr [rax+0x18]; 
0x0000000004317d: adc [rsp+0x78], esi; movups [rsp+0x88], xmm7; mov r10d, 0x8; mov eax, 0xd; syscall; 
0x00000000043182: adc [rsp+0x88], edi; mov r10d, 0x8; mov eax, 0xd; syscall; 
0x000000001149ee: adc [rsp+0x8], eax; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000153eb6: adc [rsp+0xb8], ebp; call rax; 
0x00000000153e1a: adc [rsp+0xb8], ebx; movups [rsp+0xd8], xmm0; call rax; 
0x0000000010c955: adc [rsp+0xc8], eax; mov [rsp+0xe8], eax; mov eax, 0xe; syscall; 
0x00000000153e22: adc [rsp+0xd8], eax; call rax; 
0x000000000d02ce: adc [rsp-0x10], al; ret; 
0x0000000016b22a: adc ah, [rdi]; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000018ea7d: adc ah, [rip+0xffff]; and ecx, 0xffff; sub eax, ecx; ret; 
0x00000000102aaf: adc al, 0x0; add [rax], al; add [rdx+0x2], edi; cmove eax, edx; ret; 
0x0000000013de98: adc al, 0x0; add [rax], al; add edx, 0x1; syscall; 
0x000000001144b1: adc al, 0x0; add [rax], al; syscall; 
0x000000000aa9d8: adc al, 0x0; add [rbp-0x77], cl; ret far; 
0x00000000074ca9: adc al, 0x0; add [rcx+rcx*4-0x16], cl; mov rsi, r12; mov rdi, r15; call qword ptr [rax+0x38]; 
0x0000000009f8d8: adc al, 0x0; add rsp, 0x8; ret; 
0x0000000009e555: adc al, 0x0; call qword ptr [rax]; 
0x0000000009f8d1: adc al, 0x0; mov [rip+0x14f66e], rax; add rsp, 0x8; ret; 
0x0000000009f893: adc al, 0x0; mov [rip+0x14f6ac], rax; ret; 
0x0000000009e989: adc al, 0x0; mov dword ptr fs:[rax], 0xc; xor eax, eax; ret; 
0x0000000009fadd: adc al, 0x0; mov rsi, r13; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000063546: adc al, 0x0; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x0000000006c67a: adc al, 0x0; movsxd rax, [rdi+r12*4]; add rax, rdi; notrack jmp rax; 
0x0000000006c909: adc al, 0x0; movsxd rax, [rsi+rcx*4]; add rax, rsi; notrack jmp rax; 
0x00000000064236: adc al, 0x0; movzx eax, al; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000064956: adc al, 0x0; movzx edx, dl; movsxd rax, [rcx+rdx*4]; add rax, rcx; notrack jmp rax; 
0x0000000006461c: adc al, 0x0; movzx r12d, r12b; movsxd rax, [rdi+r12*4]; add rax, rdi; notrack jmp rax; 
0x0000000009f89a: adc al, 0x0; ret; 
0x0000000009f8b7: adc al, 0x0; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000012337f: adc al, 0x11; test edx, edx; jne short 0x0000000000123390; ret; 
0x00000000123caf: adc al, 0x11; test edx, edx; jne short 0x0000000000123cc0; ret; 
0x00000000165ef5: adc al, 0x13; notrack jmp rdx; 
0x000000000aa419: adc al, 0x16; sub eax, edx; ret; 
0x00000000183b20: adc al, 0x16; sub eax, edx; vzeroupper; ret; 
0x00000000048e27: adc al, 0x1; add [rax], al; add [rax-0x7d], cl; ret; 
0x000000001929d8: adc al, 0x1; add [rax], al; ret; 
0x0000000011f504: adc al, 0x1; add [rax], al; syscall; 
0x0000000009c29a: adc al, 0x1; cmp dl, r8b; jne short 0x000000000009c288; sub rax, 0x10; ret; 
0x00000000156dbe: adc al, 0x24; call qword ptr [rax+0x48]; 
0x00000000104434: adc al, 0x24; mov rax, [rbp-0x1e0]; call rax; 
0x000000000468cf: adc al, 0x25; xor [rax], al; add [rax], al; call rdx; 
0x0000000010ff86: adc al, 0x2; call qword ptr [rbx+0x40]; 
0x00000000110b36: adc al, 0x2; mov rdi, [rbp-0x118]; mov rsi, r9; call qword ptr [rbp-0xf0]; 
0x000000000bb183: adc al, 0x30; in eax, dx; mov [rdi+0x15], ch; ret; 
0x000000000787da: adc al, 0x3; lea rax, [rip+0x1359dd]; movsxd rax, [rax+rdx*4]; add rax, rbx; jmp rax; 
0x00000000077eb6: adc al, 0x3; lea rax, [rip+0x136301]; movsxd rax, [rax+rdx*4]; add rax, rbx; jmp rax; 
0x000000000778cd: adc al, 0x3; lea rax, [rip+0x13686a]; movsxd rax, [rax+rdx*4]; add rax, rbx; jmp rax; 
0x0000000018414d: adc al, 0x3a; sub eax, edx; vzeroupper; ret; 
0x000000000ea44b: adc al, 0x3c; sub [rax+rbp+0xf], esi; mov dh, 0x43; add [rax-0x7d], ecx; ret; 
0x000000000442a0: adc al, 0x44; mov edi, esp; mov eax, 0x81; syscall; 
0x000000000d0224: adc al, 0x48; add esp, 0x28; ret; 
0x0000000012df80: adc al, 0x48; add esp, 0xd8; ret; 
0x000000000b86b0: adc al, 0x48; lea eax, [rdi+0x14]; ret; 
0x000000000b9523: adc al, 0x48; lea eax, [rdi+0x15]; ret; 
0x000000000ac6fb: adc al, 0x48; lea eax, [rdi+rax+0x30]; ret; 
0x000000000b7951: adc al, 0x48; lea edi, [rdi+0x14]; jne 0x00000000000b7fa0; ret; 
0x000000000b9095: adc al, 0x48; lea edi, [rdi+0x14]; jne 0x00000000000b97f0; ret; 
0x000000001473f7: adc al, 0x48; mov eax, [rbp+0x8]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x000000000921ab: adc al, 0x48; mov eax, [rbx+0x40]; add rsp, 0x20; pop rbx; jmp rax; 
0x0000000002403a: adc al, 0x48; mov edx, [rax]; call rbx; 
0x000000000240a8: adc al, 0x48; mov edx, [rax]; mov rax, [rsp+0x18]; call rax; 
0x0000000011459b: adc al, 0x48; mov esi, [rsp+0x8]; mov eax, 0x127; syscall; 
0x0000000011465b: adc al, 0x48; mov esi, [rsp+0x8]; mov eax, 0x128; syscall; 
0x000000000b7970: adc al, 0x49; sub eax, 0x15; lea rdi, [rdi+0x15]; jne 0x00000000000b7fa0; ret; 
0x000000000b90c3: adc al, 0x49; sub eax, 0x15; lea rdi, [rdi+0x15]; jne 0x00000000000b97f0; ret; 
0x00000000142fd7: adc al, 0x4c; mov edx, esp; mov eax, 0x81; syscall; 
0x0000000012cfa9: adc al, 0x5b; xor eax, eax; pop r12; pop rbp; ret; 
0x000000000a8a1d: adc al, 0x66; mov [rdi+0x4], edx; movzx edx, byte ptr [rsp+0x16]; mov [rdi+0x6], dl; ret; 
0x000000000e6363: adc al, 0x74; sbb [rbp-0x7b], cl; push qword ptr [rdx+rcx+0x48]; mov edi, ebx; call r15; 
0x000000000a8836: adc al, 0x7; cmp edx, esi; je short 0x00000000000a8830; ret; 
0x000000000f6a1d: adc al, 0x83; ret; 
0x00000000184adb: adc al, 0x83; shl byte ptr [rax+0x48], 0x1; clc; vzeroupper; ret; 
0x000000000298e4: adc al, 0x85; add [rax], al; add [rax+0x39], cl; ret far; 
0x00000000109100: adc al, 0x8d; fidivr st, word ptr [r11*1-0x49f0f289]; ror byte ptr [rcx+0x63], 0x4; test [rcx+rax-0x20], cl; notrack jmp rax; 
0x0000000014f756: adc al, 0x90; add rdx, rax; notrack jmp rdx; 
0x00000000087f55: adc al, 0x90; mov [rax], rdx; xor eax, eax; ret; 
0x00000000080f14: adc al, 0x91; add rdx, rcx; notrack jmp rdx; 
0x00000000181700: adc al, 0x91; mov eax, [rcx+rax*4]; sub eax, edx; ret; 
0x0000000017fe2e: adc al, 0x91; sub eax, edx; ret; 
0x00000000040aae: adc al, 0x93; add r10, r11; notrack jmp r10; 
0x00000000165ef1: adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000551bd: adc al, 0x96; add rdx, rsi; cmp ecx, 0x2f; notrack jmp rdx; 
0x000000000407ab: adc al, 0x96; add rdx, rsi; notrack jmp rdx; 
0x00000000052d79: adc al, 0x97; add rdx, rdi; notrack jmp rdx; 
0x00000000194150: adc al, 0xa1; xor r8d, r13d; add rdx, rcx; notrack jmp rdx; 
0x00000000193f37: adc al, 0xa2; xor r8d, r13d; movzx ecx, r8b; add rdx, r10; notrack jmp rdx; 
0x000000000a9017: adc al, 0xa; notrack jmp r10; 
0x000000000aa583: adc al, 0xa; sub eax, edx; ret; 
0x00000000183c9d: adc al, 0xa; sub eax, edx; vzeroupper; ret; 
0x0000000012313f: adc al, 0xb2; add eax, [rdx+rcx]; ret; 
0x000000000d83ba: adc al, 0xb7; add rdx, rdi; notrack jmp rdx; 
0x00000000033e29: adc al, 0xb7; mov r8d, [rdx+rax]; mov eax, r8d; ret; 
0x000000000d8340: adc al, 0xb9; add rdx, r9; notrack jmp rdx; 
0x00000000055631: adc al, 0xc0; mov [rsi+rax*8], rdx; xor eax, eax; ret; 
0x00000000058382: adc al, 0xc2; adc eax, 0x3d8d4800; push rsi; rcl dword ptr [rip-0x43d11800], 0xfd; jmp qword ptr [rsi+0x66]; 
0x00000000055635: adc al, 0xc6; xor eax, eax; ret; 
0x00000000160958: adc al, 0xc7; setne al; movzx eax, al; ret; 
0x00000000160988: adc al, 0xc7; xor eax, eax; ret; 
0x0000000014e7e4: adc al, 0xe9; ud0 edi, edi; jmp qword ptr [rsi+0xf]; 
0x000000000eb481: adc al, 0xe9; xchg ecx, eax; idiv bh; jmp qword ptr [rsi+0xf]; 
0x000000000bbb78: adc al, 0xe; cmp rdi, rdx; jb short 0x00000000000bbb82; rep movsb [rdi], [rsi]; ret; 
0x0000000017df41: adc al, 0xe; sub eax, edx; ret; 
0x00000000184cea: adc al, 0xe; sub eax, edx; vzeroupper; ret; 
0x00000000140f68: adc al, 0xee; dec dword ptr [rax+0x39]; ret; 
0x000000000b7cc9: adc al, 0xf3; movq [rdi], mm0; mov [rdi+0x10], ecx; mov [rdi+0x14], dl; ret; 
0x00000000030ecc: adc al, 0xf8; test rdx, rdx; je short 0x0000000000030ed5; call rdx; 
0x000000000b9099: adc al, 0xf; test [rax+0x7], edx; add [rax], al; ret; 
0x000000000c7f28: adc al, 0xf; xchg ebx, eax; ret; 
0x00000000030ec8: adc al, 0xfb; mov rdx, [rax+r15*8]; test rdx, rdx; je short 0x0000000000030ed5; call rdx; 
0x0000000012e8cb: adc al, 0xfe; call qword ptr [rax-0x18]; 
0x000000000dd786: adc al, 0xff; pop rbx; pop rbp; lea rax, [rax+rdx*8]; ret; 
0x0000000010c244: adc al, [rax]; add [rax], al; syscall; 
0x000000000b01ee: adc al, [rax]; add [rbp-0x77], cl; ret far; 
0x00000000186d8f: adc al, [rax]; add [rbp-0x77], cl; ret far; 
0x000000000ca32d: adc al, [rax]; lea rdi, [rip+0x12364a]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000ca14a: adc al, [rax]; lea rdi, [rip+0x12382d]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000002fe04: adc al, [rax]; mov qword ptr [rbx+0x10], 0x0; pop rbx; ret; 
0x0000000007f375: adc al, [rax]; movsxd rax, [rax+rcx*4]; add rax, rdx; jmp rax; 
0x0000000007f377: adc al, [rax]; movsxd rax, [rax+rcx*4]; add rax, rdx; jmp rax; 
0x0000000008075c: adc al, [rax]; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x00000000080eac: adc al, [rax]; movsxd rcx, [rdi+rcx*4]; add rcx, rdi; notrack jmp rcx; 
0x00000000080f10: adc al, [rax]; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x00000000080700: adc al, [rax]; movzx eax, al; movsxd rax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x000000000ca151: adc al, [rax]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000ca332: adc al, [rax]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000ca668: adc al, [rax]; syscall; 
0x0000000013bcdd: adc al, [rbx+0x7ba14fe]; add [rax], eax; add [rax-0x1], bh; cmove eax, edx; ret; 
0x000000000bcd8b: adc al, [rcx]; add [rax-0x73], cl; adc eax, 0xd575b; cmovne rax, rdx; ret; 
0x000000000b3984: adc al, [rcx]; movlpd [rdx], xmm0; mov rax, rdi; ret; 
0x00000000036759: adc al, [rdx*4-0x763f6af1]; ret; 
0x0000000018a3fa: adc al, [rdx]; add [rax], al; vzeroupper; ret; 
0x0000000016c8c6: adc al, [rip+0x14634900]; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016c8c7: adc al, [rip+0x14634900]; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000012ddba: adc al, [rsi-0x11]; jmp qword ptr [rsi-0x70]; 
0x00000000142be2: adc al, ch; imul rbp; jmp qword ptr [rsi+0xf]; 
0x000000000c4bde: adc al, ch; jl short 0x00000000000c4bbb; cmc; dec dword ptr [rbp-0x7cbe00bd]; call far fword ptr [rax]; 
0x000000001986e3: adc al, ch; mov bh, 0x2; clc; call far fword ptr [rbx+0x4c]; 
0x000000001355ef: adc al, ch; ret far; 
0x0000000003c337: adc al, ch; ret; 
0x000000001506e3: adc bh, [rax+0x1]; movups [r8+0x20], xmm2; ret; 
0x0000000011ff5a: adc bh, [rdi-0x2708fff4]; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000154d15: adc bh, al; adc [r8], r8b; add [rax], al; add [rcx+rcx*4-0x11], cl; call qword ptr [rax+0x28]; 
0x0000000013e9b3: adc bh, bh; jmp qword ptr [rsi+0x2e]; 
0x0000000015e861: adc bh, ch; jmp qword ptr [rsi+0x2e]; 
0x0000000015e7e4: adc bh, ch; jmp qword ptr [rsi+0xf]; 
0x0000000004105e: adc bh, dh; call far fword ptr [rbp+0x4c]; 
0x000000000410f2: adc bh, dh; jmp qword ptr [rsi+0xf]; 
0x0000000006ac11: adc bl, [rax]; add [rbx-0x5ff7b], cl; jmp qword ptr [rcx+rcx*4+0x2]; 
0x00000000125325: adc bl, [rbx+0x5d]; pop r12; ret; 
0x000000001609da: adc bl, [rcx]; out dx, eax; jmp qword ptr [rsi-0x70]; 
0x0000000014826b: adc bl, al; mov dword ptr [rsi], 0x8; ret; 
0x000000000ac1a7: adc bl, al; nop [rax]; bsf eax, eax; lea rax, [rax+rdi+0x20]; ret; 
0x000000000ac677: adc bl, al; nop [rax]; bsr eax, eax; lea rax, [rax+rdi+0x20]; ret; 
0x000000000a8a6f: adc bl, al; nop [rax]; mov byte ptr [rax], 0x0; ret; 
0x00000000041bdc: adc bl, bl; insb [rdi], dx; and al, 0x8; ret; 
0x0000000008d7d3: adc bl, ch; in eax, 0x66; nop [rax+rax]; mov eax, 0xffffffff; ret; 
0x00000000056346: adc bl, ch; jge short 0x0000000000056393; shl ecx, cl; mov [rdi], r9; ret; 
0x0000000015f958: adc bl, ch; ret far; 
0x0000000016d770: adc bl, dh; movq [rdi+0x10], mm0; lddqu xmm0, [rsi]; movdqu [rdi], xmm0; ret; 
0x000000000bbfea: adc bl, dh; movq [rdi+rdx-0x10], mm0; movdqu [rdi+rdx-0x20], xmm0; ret; 
0x000000000b9496: adc bl, dh; movq [rdi], mm0; mov [rdi+0x10], cl; lea rax, [rdi+0x11]; ret; 
0x000000000b7c76: adc bl, dh; movq [rdi], mm0; mov [rdi+0x10], cl; ret; 
0x000000000b8647: adc bl, dh; movq [rdi], mm0; mov [rdi+0x10], cx; lea rax, [rdi+0x11]; ret; 
0x000000000b94b7: adc bl, dh; movq [rdi], mm0; mov [rdi+0x10], cx; lea rax, [rdi+0x12]; ret; 
0x000000000b6f97: adc bl, dh; movq [rdi], mm0; mov [rdi+0x10], cx; ret; 
0x000000000b8686: adc bl, dh; movq [rdi], mm0; mov [rdi+0x10], ecx; lea rax, [rdi+0x13]; ret; 
0x000000000b94f6: adc bl, dh; movq [rdi], mm0; mov [rdi+0x10], ecx; lea rax, [rdi+0x14]; ret; 
0x000000000b6fd6: adc bl, dh; movq [rdi], mm0; mov [rdi+0x10], ecx; mov [rdi+0x14], dh; ret; 
0x000000000b6fc6: adc bl, dh; movq [rdi], mm0; mov [rdi+0x10], ecx; ret; 
0x000000000b8707: adc bl, dh; movq [rdi], mm0; mov [rdi+0x10], rcx; lea rax, [rdi+0x17]; ret; 
0x000000000b9577: adc bl, dh; movq [rdi], mm0; mov [rdi+0x10], rcx; lea rax, [rdi+0x18]; ret; 
0x000000000b7057: adc bl, dh; movq [rdi], mm0; mov [rdi+0x10], rcx; mov [rdi+0x18], dh; ret; 
0x000000000b7037: adc bl, dh; movq [rdi], mm0; mov [rdi+0x10], rcx; ret; 
0x000000000b8808: adc bl, dh; movq [rdi], mm0; movdqu [rdi+0x10], xmm2; lea rax, [rdi+0x1f]; ret; 
0x000000000b9678: adc bl, dh; movq [rdi], mm0; movdqu [rdi+0x10], xmm2; lea rax, [rdi+0x20]; ret; 
0x000000000b7138: adc bl, dh; movq [rdi], mm0; movdqu [rdi+0x10], xmm2; ret; 
0x0000000019717b: adc bl, dh; movups xmm0, [rip+0x261fc]; divss xmm0, [rip+0x27508]; ret; 
0x0000000016d76f: adc bl, r14b; movq [rdi+0x10], mm0; lddqu xmm0, [rsi]; movdqu [rdi], xmm0; ret; 
0x000000000b9495: adc bl, r14b; movq [rdi], mm0; mov [rdi+0x10], cl; lea rax, [rdi+0x11]; ret; 
0x000000000b7c75: adc bl, r14b; movq [rdi], mm0; mov [rdi+0x10], cl; ret; 
0x000000000b8646: adc bl, r14b; movq [rdi], mm0; mov [rdi+0x10], cx; lea rax, [rdi+0x11]; ret; 
0x000000000b94b6: adc bl, r14b; movq [rdi], mm0; mov [rdi+0x10], cx; lea rax, [rdi+0x12]; ret; 
0x000000000b6f96: adc bl, r14b; movq [rdi], mm0; mov [rdi+0x10], cx; ret; 
0x000000000b8685: adc bl, r14b; movq [rdi], mm0; mov [rdi+0x10], ecx; lea rax, [rdi+0x13]; ret; 
0x000000000b94f5: adc bl, r14b; movq [rdi], mm0; mov [rdi+0x10], ecx; lea rax, [rdi+0x14]; ret; 
0x000000000b6fd5: adc bl, r14b; movq [rdi], mm0; mov [rdi+0x10], ecx; mov [rdi+0x14], dh; ret; 
0x000000000b6fc5: adc bl, r14b; movq [rdi], mm0; mov [rdi+0x10], ecx; ret; 
0x000000000b8706: adc bl, r14b; movq [rdi], mm0; mov [rdi+0x10], rcx; lea rax, [rdi+0x17]; ret; 
0x000000000b9576: adc bl, r14b; movq [rdi], mm0; mov [rdi+0x10], rcx; lea rax, [rdi+0x18]; ret; 
0x000000000b7056: adc bl, r14b; movq [rdi], mm0; mov [rdi+0x10], rcx; mov [rdi+0x18], dh; ret; 
0x000000000b7036: adc bl, r14b; movq [rdi], mm0; mov [rdi+0x10], rcx; ret; 
0x0000000014826a: adc bl, r8b; mov dword ptr [rsi], 0x8; ret; 
0x000000000b01ed: adc byte ptr [rdx], 0x0; add [rbp-0x77], cl; ret far; 
0x0000000017395d: adc byte ptr [rsi], 0x0; add [rbp-0x77], cl; ret far; 
0x000000001462c9: adc ch, [rax+0x4802000a]; add esp, 0x8; lea rax, [rip+0xaa827]; ret; 
0x00000000115349: adc ch, [rax]; mov edi, 0xfee1dead; mov eax, 0xa9; syscall; 
0x000000001552bf: adc ch, al; ret far; 
0x000000000de15c: adc ch, bl; adc [rax], al; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000001316ca: adc ch, cl; or eax, [rax]; syscall; 
0x000000000a8f49: adc cl, [rax+0x29]; ret; 
0x00000000086e46: adc cl, [rax+0x39]; enter 0xf48, 0x4f; ror dword ptr [rax-0x7b], 0xd2; jne short 0x0000000000086e40; ret; 
0x0000000009170e: adc cl, [rax+0x39]; enter 0xf48, 0x4f; ror dword ptr [rax-0x7b], 0xd2; jne short 0x0000000000091708; ret; 
0x0000000009f88d: adc cl, [rax-0x73]; add eax, 0x14f6cb; mov [rip+0x14f6ac], rax; ret; 
0x000000000b7913: adc cl, [rax-0x73]; jg short 0x00000000000b792a; jne 0x00000000000b7fa0; ret; 
0x000000000b9037: adc cl, [rax-0x73]; jg short 0x00000000000b904e; jne 0x00000000000b97f0; ret; 
0x00000000086295: adc cl, [rax-0x73]; jno short 0x000000000008629e; mov [rdx+0x20], rsi; mov [rcx], eax; ret; 
0x0000000003424f: adc cl, [rax-0x75]; adc cl, [rax-0x75]; push rdx; mov rax, [rdx+rax*4+0x200]; ret; 
0x0000000015f2d0: adc cl, [rax-0x75]; add eax, 0x8cb88; call qword ptr [rax+0x1f8]; 
0x0000000009265d: adc cl, [rax-0x75]; add rsp, 0x20; xor edx, edx; pop rbx; jmp rax; 
0x00000000034252: adc cl, [rax-0x75]; push rdx; mov rax, [rdx+rax*4+0x200]; ret; 
0x00000000034222: adc cl, [rax-0x75]; push rdx; pop rax; mov eax, [rdx+rax*4+0x200]; ret; 
0x000000000552a0: adc cl, [rax-0x77]; push rbx; push 0xffffffffffff3ee9; jmp qword ptr [rsi+0xf]; 
0x0000000013da23: adc cl, [rbp-0x2ff6f]; jmp qword ptr [rsi-0x7d]; 
0x0000000008a74d: adc cl, [rbx+0x42394c42]; cmovne rax, rcx; ret; 
0x000000000b3b4f: adc cl, [rcx+0x5]; movlpd [rdx+0x5], xmm1; mov rax, rdi; ret; 
0x000000000b3b6f: adc cl, [rcx+0x6]; movlpd [rdx+0x6], xmm1; mov rax, rdi; ret; 
0x000000000b3b8f: adc cl, [rcx+0x7]; movlpd [rdx+0x7], xmm1; mov rax, rdi; ret; 
0x000000000b66df: adc cl, [rcx+0x8]; movlpd [rdx+0x8], xmm1; mov rax, rdi; ret; 
0x000000000b39d5: adc cl, [rcx+0x8]; movlpd [rdx], xmm0; movlpd [rdx+0x8], xmm1; mov rax, rdi; ret; 
0x0000000005ea4d: adc cl, [rdi]; mov esi, 0x77cf390e; jrcxz 0x000000000005ea9a; mov eax, eax; ret; 
0x000000000f1294: adc cl, al; call far fword ptr [rax]; 
0x000000000f1295: adc cl, al; call far fword ptr [rax]; 
0x0000000005f3ec: adc cl, bl; in eax, 0xdf; loopne 0x000000000005f37b; ret; 
0x0000000009c1cd: adc cl, ch; cmp ebp, 0xffffffff; jmp qword ptr [rsi+0x66]; 
0x000000000e6386: adc cl, ch; push 0x41ffffff; call qword ptr [rsp+0x20]; 
0x0000000011136c: adc cl, dh; jmp qword ptr [rsi+0x3]; 
0x00000000183aa9: adc dh, [rbx-0xc]; movsxd rcx, ecx; add rax, rcx; sub rax, rdi; ret; 
0x00000000120dec: adc dh, [rdi+0xd]; movzx edi, di; lea rax, [rip+0x91887]; mov eax, [rax+rdi*4]; ret; 
0x0000000014e99f: adc dh, bh; jmp qword ptr [rsi+0x66]; 
0x00000000030b6c: adc dh, cl; sbb eax, [rax]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000cabea: adc dl, [rax]; cli; jmp qword ptr [rsi-0x70]; 
0x000000000cabeb: adc dl, bh; jmp qword ptr [rsi-0x70]; 
0x000000000c5d54: adc dword ptr [rax+0x1], 0x0; add [rax+0x29], cl; ret far; 
0x00000000142769: adc dword ptr [rax+0x4ee80007], 0x18; out dx, eax; jmp qword ptr [rsi+0xf]; 
0x00000000090c97: adc dword ptr [rax+rax-0x74b80000], 0x44; and al, 0x8; mov esi, 0xffffffff; mov rdi, r8; call qword ptr [rax+0x18]; 
0x00000000116aeb: adc dword ptr [rbx+0xd], 0x64d8f700; mov [rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000184c9a: adc dword ptr [rcx+0x31000002], 0xffffffc0; vzeroupper; ret; 
0x0000000014d1b5: adc eax, 0x0; add [rax], al; mov rsi, [rsp+0x18]; mov rdi, r12; call qword ptr [rax+0x8]; 
0x000000000aef7c: adc eax, 0x100107; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000095235: adc eax, 0x100; add [rax-0x77], cl; add eax, 0x15704e; ret; 
0x0000000009520c: adc eax, 0x100; add [rax-0x77], cl; add eax, 0x15706f; ret; 
0x000000000951ec: adc eax, 0x100; add [rax-0x77], cl; add eax, 0x157087; ret; 
0x0000000009d743: adc eax, 0x100; add [rcx+rcx*4-0x20], al; pop r12; ret; 
0x000000000acd0c: adc eax, 0x1022f7; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x000000000aa72c: adc eax, 0x104857; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x000000000a900c: adc eax, 0x105ef7; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000096203: adc eax, 0x10894800; ret; 
0x000000000e2eb2: adc eax, 0x108fb9; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000e2d92: adc eax, 0x1090d9; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000e2cd2: adc eax, 0x109199; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000de2fa: adc eax, 0x10db71; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x000000000dd162: adc eax, 0x10ed09; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000cf37a: adc eax, 0x10ef8348; add rax, rdi; ret; 
0x0000000009c68c: adc eax, 0x1127d7; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000000bdfbf: adc eax, 0x116fc; cmovne rax, rdx; ret; 
0x000000000d10c2: adc eax, 0x11ada9; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000d0f22: adc eax, 0x11af49; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000d0e0a: adc eax, 0x11b061; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x000000000901cd: adc eax, 0x11ea6e; movzx eax, al; movsxd rax, [r10+rax*4]; add rax, r10; notrack jmp rax; 
0x000000000902c7: adc eax, 0x11eb40; movzx eax, al; movsxd rax, [r10+rax*4]; add rax, r10; notrack jmp rax; 
0x0000000009f11f: adc eax, 0x12e7c; cmovne rax, rdx; ret; 
0x00000000187fd8: adc eax, 0x134e3; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x00000000187fb3: adc eax, 0x13508; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000009f72f: adc eax, 0x1448c; cmovne rax, rdx; ret; 
0x00000000064233: adc eax, 0x14960c; movzx eax, al; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000186618: adc eax, 0x14ea3; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x000000001865fe: adc eax, 0x14ebd; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000009d73a: adc eax, 0x151779; mov dword ptr [rip+0x151763], 0x1; mov eax, r12d; pop r12; ret; 
0x000000000960e4: adc eax, 0x156a97; lea rax, [rip+0x156a90]; add rsp, 0x10; pop rbp; ret; 
0x00000000094ea9: adc eax, 0x157422; ret; 
0x000000000b7974: adc eax, 0x157f8d48; jne 0x00000000000b7fa0; ret; 
0x000000000b90c8: adc eax, 0x157f8d48; jne 0x00000000000b97f0; ret; 
0x000000000938ca: adc eax, 0x15aef1; mov [rip+0x15aef2], rbx; add dword ptr [rip+0x15aee7], 0x1; pop rbx; ret; 
0x000000000b90f2: adc eax, 0x16e88349; lea rdi, [rdi+0x16]; jne 0x00000000000b97f0; ret; 
0x00000000034b4f: adc eax, 0x17440c; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000002458a: adc eax, 0x175a71; mov eax, eax; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000183718: adc eax, 0x17da3; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x000000001836f3: adc eax, 0x17dc8; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x00000000062f02: adc eax, 0x188f69; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000062eca: adc eax, 0x188fa1; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000023e84: adc eax, 0x18b89b; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000015e849: adc eax, 0x18c48348; pop rbx; pop rbp; ret; 
0x00000000181748: adc eax, 0x19d73; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000018172e: adc eax, 0x19d8d; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x000000000482b2: adc eax, 0x1a3bb9; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000044101: adc eax, 0x1a80a6; ret; 
0x000000000434e2: adc eax, 0x1a8989; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000043452: adc eax, 0x1a8a19; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000a0a2d: adc eax, 0x1b0be; cmove rax, rdx; ret; 
0x000000000a06bd: adc eax, 0x1b40e; cmove rax, rdx; ret; 
0x000000000a055d: adc eax, 0x1b58e; cmove rax, rdx; ret; 
0x00000000034574: adc eax, 0x1b79af; add rax, 0x200; mov fs:[rdx], rax; ret; 
0x000000000a05d4: adc eax, 0x1b9c7; lea rax, [rip+0x1b940]; cmovne rax, rdx; ret; 
0x00000000032884: adc eax, 0x1bb274; ret; 
0x00000000024187: adc eax, 0x1c7cd4; lea rdi, [rip+0x18fcef]; mov rsi, [rax]; xor eax, eax; call qword ptr [rdx+0x1d0]; 
0x00000000023a69: adc eax, 0x1c8422; cmp [rdx+0xd8], rax; jne short 0x0000000000023a3b; ret; 
0x000000000226b9: adc eax, 0x1ceae2; pop rax; pop rbx; pop rbp; ret; 
0x00000000093869: adc eax, 0x1f0fc300; add bl, sil; nop edx, edi; xor eax, eax; ret; 
0x00000000198483: adc eax, 0x20478b48; test rax, rax; je short 0x0000000000198494; call rax; 
0x00000000174ff8: adc eax, 0x264c3; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x00000000174fd3: adc eax, 0x264e8; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000009e229: adc eax, 0x2740000; ret; 
0x00000000172a88: adc eax, 0x28a33; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x00000000172a6e: adc eax, 0x28a4d; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x00000000194b65: adc eax, 0x29ae6; movsxd rax, [rdx+rax*4]; add rdx, rax; notrack jmp rdx; 
0x0000000009a0f3: adc eax, 0x30894800; mov rax, [rip+0x151de1]; mov [rax], rdi; ret; 
0x000000000961f9: adc eax, 0x30894800; mov rax, [rip+0x155cdb]; mov [rax], rdx; ret; 
0x00000000186748: adc eax, 0x37df3; movsxd r9, [r10+r9*4]; vpcmpeqb xmm0, xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000009a0fd: adc eax, 0x38894800; ret; 
0x000000001850a8: adc eax, 0x39453; movsxd r9, [r10+r9*4]; vpcmpeqb xmm0, xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000140f4d: adc eax, 0x3948ffee; ret; 
0x0000000015219e: adc eax, 0x3a2d; call qword ptr [rax]; 
0x000000000cf06a: adc eax, 0x3b30478b; xor [rbp+0x3d], r14b; ret; 
0x00000000181888: adc eax, 0x3bc33; movsxd r9, [r10+r9*4]; pcmpeqb xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000172bdc: adc eax, 0x3c4e7; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000017fcb8: adc eax, 0x3d7c3; movsxd r9, [r10+r9*4]; pcmpeqb xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000012da67: adc eax, 0x3d894; cmovne rax, rdx; ret; 
0x00000000058384: adc eax, 0x3d8d4800; push rsi; rcl dword ptr [rip-0x43d11800], 0xfd; jmp qword ptr [rsi+0x66]; 
0x0000000012d8e7: adc eax, 0x3da34; cmovne rax, rdx; ret; 
0x00000000170a5c: adc eax, 0x3e5e7; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000017ec78: adc eax, 0x3e7c3; movsxd r9, [r10+r9*4]; pcmpeqb xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000017dea8: adc eax, 0x3f553; movsxd r9, [r10+r9*4]; pcmpeqb xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000012d9a7: adc eax, 0x40464; cmovne rax, rdx; ret; 
0x00000000151a7b: adc eax, 0x4150; mov r9, rbp; mov esi, 0x9; call qword ptr [rax]; 
0x000000000967e0: adc eax, 0x41ff3100; call qword ptr [rbp]; 
0x000000000e63bc: adc eax, 0x41ffffff; call qword ptr [rsp+0x30]; 
0x000000000e3159: adc eax, 0x441f0f66; add [rax], al; mov edi, edx; mov eax, esi; syscall; 
0x00000000097a01: adc eax, 0x44894c00; and al, 0x8; xor edi, edi; call qword ptr [rax]; 
0x0000000016dc24: adc eax, 0x46f00ff2; add eax, 0xef00ff2; movdqu [rdi+0x5], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000015f747: adc eax, 0x480008c7; mov esi, edi; mov rdi, [rsp]; mov rax, [rax+0x1d8]; jmp rax; 
0x000000000bcd83: adc eax, 0x4802e580; lea eax, [rip+0x112c2]; lea rdx, [rip+0xd575b]; cmovne rax, rdx; ret; 
0x000000000a08b5: adc eax, 0x4802e580; lea eax, [rip+0xc350]; lea rdx, [rip+0xd0099]; cmovne rax, rdx; ret; 
0x000000000a0473: adc eax, 0x4802e580; lea eax, [rip+0xc372]; lea rdx, [rip+0xf08fb]; cmovne rax, rdx; ret; 
0x000000000a0815: adc eax, 0x4802e580; lea eax, [rip+0xc3d0]; lea rdx, [rip+0xd0119]; cmovne rax, rdx; ret; 
0x000000000a0905: adc eax, 0x4802e580; lea eax, [rip+0xe550]; lea rdx, [rip+0xd21a9]; cmovne rax, rdx; ret; 
0x000000000a0865: adc eax, 0x4802e580; lea eax, [rip+0xe5d0]; lea rdx, [rip+0xd2229]; cmovne rax, rdx; ret; 
0x0000000009f78c: adc eax, 0x4802e680; lea eax, [rip+0xaee9]; lea rdx, [rip+0xc4e62]; cmovne rax, rdx; ret; 
0x0000000009c21a: adc eax, 0x48227300; lea eax, [rax-0x8]; ret; 
0x0000000009c211: adc eax, 0x482b7200; cmp ecx, [rip+0x152c74]; jae short 0x000000000009c240; lea rax, [rax-0x8]; ret; 
0x0000000009555d: adc eax, 0x48a77600; add esp, 0x8; ret; 
0x0000000009ef4a: adc eax, 0x48c0894c; cmp [rdi+0x8], esi; jb short 0x000000000009ef60; mov [rdi], rsi; ret; 
0x00000000121b0a: adc eax, 0x48db6348; mov [rip+0xca84b], ebx; pop rbx; ret; 
0x000000000de8c7: adc eax, 0x48eb894c; mov edi, ebp; call r12; 
0x0000000011acca: adc eax, 0x49000007; mov edi, [rdi]; call rbx; 
0x00000000169927: adc eax, 0x49000540; movsxd edx, [rbx+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166767: adc eax, 0x49000570; movsxd edx, [rbx+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000010ab16: adc eax, 0x49c0b60f; movsxd eax, [rsp+rax*4]; add rax, r12; notrack jmp rax; 
0x000000001646ac: adc eax, 0x4a917; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000016341c: adc eax, 0x4bb27; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x000000000986fa: adc eax, 0x4c834a00; xor [rax], ecx; add [rax+0x39], ecx; ret; 
0x000000000fe03a: adc eax, 0x4eb60f41; xor [rax+0x63], cl; or al, 0x8e; add rcx, rsi; notrack jmp rcx; 
0x00000000098149: adc eax, 0x51894900; or [rax+0x39], cl; ret; 
0x0000000008caa2: adc eax, 0x58d4800; pop rbp; ret far; 
0x00000000094a84: adc eax, 0x5b050f00; ret; 
0x0000000010c58a: adc eax, 0x5bc33948; setl al; ret; 
0x0000000009566b: adc eax, 0x5be97500; mov rax, r8; pop rbp; pop r12; ret; 
0x00000000097594: adc eax, 0x5c894c00; and al, 0x18; mov rdi, r13; mov [rsp+0x10], r10; call qword ptr [rax]; 
0x00000000098de0: adc eax, 0x5d050f00; ret; 
0x0000000012da46: adc eax, 0x5db05; cmove rax, rdx; ret; 
0x0000000012d986: adc eax, 0x5dbe5; cmove rax, rdx; ret; 
0x0000000012d8c6: adc eax, 0x5dca5; cmove rax, rdx; ret; 
0x0000000012db09: adc eax, 0x5def2; lea rax, [rip+0x5df4b]; cmove rax, rdx; ret; 
0x000000000b7978: adc eax, 0x621850f; add [rax], al; ret; 
0x0000000012da91: adc eax, 0x6283a; cmove rax, rdx; ret; 
0x0000000012d9d1: adc eax, 0x6291a; cmove rax, rdx; ret; 
0x0000000012d911: adc eax, 0x629da; cmove rax, rdx; ret; 
0x0000000012db51: adc eax, 0x62d2a; cmove rax, rdx; ret; 
0x0000000006c908: adc eax, 0x63480014; add al, 0x8e; add rax, rsi; notrack jmp rax; 
0x0000000016c5c7: adc eax, 0x63490005; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016c5c6: adc eax, 0x63490005; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000cef5a: adc eax, 0x63b078b; jne 0x00000000000cf0b0; ret; 
0x000000000951c8: adc eax, 0x6b894100; and al, 0x5d; mov [r11+0x10], eax; mov dword ptr [r11+0x14], 0x0; ret; 
0x000000000d2c58: adc eax, 0x70e8000e; sar esp, cl; dec dword ptr [rax-0x7b]; ror byte ptr [rdi], 0x84; ret far; 
0x000000000b90cc: adc eax, 0x71d850f; add [rax], al; ret; 
0x000000001481ba: adc eax, 0x7401f883; push rax; mov dword ptr [rsi], 0x10; mov [rsi+0x8], rax; ret; 
0x0000000009f888: adc eax, 0x75c08500; adc cl, [rax-0x73]; add eax, 0x14f6cb; mov [rip+0x14f6ac], rax; ret; 
0x00000000160eb5: adc eax, 0x8041ffec; jl short 0x0000000000160ec0; jmp far fword ptr [rdi]; 
0x000000000946da: adc eax, 0x8478b4c; mov rax, [rdi]; mov rdi, r8; jmp rax; 
0x0000000004a9f5: adc eax, 0x860f0000; call qword ptr [rax+rax]; 
0x000000001647d8: adc eax, 0x894d0000; ret far; 
0x00000000186a8f: adc eax, 0x894d0000; ret far; 
0x0000000008e5ea: adc eax, 0x8a894800; loopne 0x000000000008e5f1; add [rax], al; pop rbx; ret; 
0x00000000094af4: adc eax, 0x8b4800; test rax, rax; je short 0x0000000000094b00; call rax; 
0x0000000009920b: adc eax, 0x8b4800; test rax, rax; je short 0x0000000000099217; call rax; 
0x0000000009681f: adc eax, 0x8b4800; test rax, rax; jne short 0x0000000000096860; xor edi, edi; call qword ptr [r13]; 
0x00000000113084: adc eax, 0x8b48fff8; and al, 0x8; add rsp, 0x30; pop rbp; ret; 
0x000000000fa0fe: adc eax, 0x8d480000; xor eax, 0xb716c; movsxd rax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x0000000015309d: adc eax, 0x9dd9e; mov fs:[rax], rdx; ret; 
0x00000000148682: adc eax, 0xa34d9; jmp qword ptr [rdx+rax*8]; 
0x0000000010a0c1: adc eax, 0xa809a; movsxd rax, [rdx+rbp*4]; add rax, rdx; notrack jmp rax; 
0x0000000010994f: adc eax, 0xa8798; movzx eax, al; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000001092d5: adc eax, 0xa8dc6; movsxd rax, [rdx+rbx*4]; add rax, rdx; notrack jmp rax; 
0x0000000010108d: adc eax, 0xb076e; movsxd rax, [rdx+rdi*4]; add rax, rdx; notrack jmp rax; 
0x00000000101157: adc eax, 0xb08fc; mov edi, edi; movsxd rax, [rdx+rdi*4]; add rax, rdx; notrack jmp rax; 
0x000000000fcf74: adc eax, 0xb4473; movzx esi, sil; movsxd rax, [rdx+rsi*4]; add rax, rdx; notrack jmp rax; 
0x000000000f98d0: adc eax, 0xb790b; mov rcx, rax; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000112059: adc eax, 0xb9e9; add [rax-0xefd3418], dl; jmp qword ptr [rsi-0x7d]; 
0x0000000005838b: adc eax, 0xbc2ee800; std; jmp qword ptr [rsi+0x66]; 
0x0000000012e7f2: adc eax, 0xbd679; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x000000000980c5: adc eax, 0xc0314500; mov dword ptr fs:[rax], 0xc; mov rax, r8; ret; 
0x00000000146b6b: adc eax, 0xc0850000; je short 0x0000000000146be0; mov rax, [rbx+0x20]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x000000000bc89d: adc eax, 0xc0efe; test byte ptr [rax+0x71], 0x2; lea rax, [rip+0x12933]; cmovne rax, rdx; ret; 
0x000000000eff8d: adc eax, 0xc0f8e; movzx ebx, bl; movsxd rax, [rdx+rbx*4]; add rax, rdx; notrack jmp rax; 
0x000000000f00dd: adc eax, 0xc0fa2; movzx r14d, r14b; movsxd rax, [rdx+r14*4]; add rax, rdx; notrack jmp rax; 
0x000000000f002d: adc eax, 0xc0fc6; movzx ebx, bl; movsxd rax, [rdx+rbx*4]; add rax, rdx; notrack jmp rax; 
0x00000000098d3f: adc eax, 0xc35d0100; nop [rax]; ret; 
0x00000000098d40: adc eax, 0xc35d0100; nop [rax]; ret; 
0x0000000009f1cf: adc eax, 0xc41bc; cmovne rax, rdx; ret; 
0x00000000042a3c: adc eax, 0xc4834800; sbb [rbx+0x5d], bl; ret; 
0x00000000042784: adc eax, 0xc4834800; sub [rbx+0x5d], bl; pop r12; pop r13; ret; 
0x0000000009f799: adc eax, 0xc4e62; cmovne rax, rdx; ret; 
0x000000000ea58c: adc eax, 0xc6803; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000000e8853: adc eax, 0xc83cc; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000000a09e7: adc eax, 0xca944; cmovne rax, rdx; ret; 
0x0000000012127a: adc eax, 0xcabf1; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000121242: adc eax, 0xcac29; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000012120a: adc eax, 0xcac61; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000001211da: adc eax, 0xcac91; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x000000000a0677: adc eax, 0xcac94; cmovne rax, rdx; ret; 
0x000000001211a2: adc eax, 0xcacc9; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000001210ca: adc eax, 0xcada1; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000012108a: adc eax, 0xcade1; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000012105a: adc eax, 0xcae11; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000121012: adc eax, 0xcae59; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000120f52: adc eax, 0xcaf19; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000120ce2: adc eax, 0xcb189; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000120c3a: adc eax, 0xcb231; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000120b82: adc eax, 0xcb2e9; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000e5863: adc eax, 0xcb368; mov esi, esi; movsxd rax, [rdx+rsi*4]; add rax, rdx; notrack jmp rax; 
0x000000000e5472: adc eax, 0xcb37d; movsxd rax, [rdx+rbp*4]; add rax, rdx; notrack jmp rax; 
0x0000000012073a: adc eax, 0xcb731; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000120672: adc eax, 0xcb7f9; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x000000001205d2: adc eax, 0xcb899; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000120512: adc eax, 0xcb959; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000120472: adc eax, 0xcb9f9; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x000000001203b2: adc eax, 0xcbab9; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000120232: adc eax, 0xcbc39; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000e4adc: adc eax, 0xcbcbf; mov esi, esi; movsxd rax, [rdx+rsi*4]; add rax, rdx; notrack jmp rax; 
0x00000000120162: adc eax, 0xcbd09; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000011f872: adc eax, 0xcc5f9; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000011f792: adc eax, 0xcc6d9; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000011f6ea: adc eax, 0xcc781; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000011f622: adc eax, 0xcc849; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000011f572: adc eax, 0xcc8f9; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000011f4c2: adc eax, 0xcc9a9; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000011f332: adc eax, 0xccb39; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000011f2ea: adc eax, 0xccb81; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000011f1da: adc eax, 0xccc91; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x000000000a0517: adc eax, 0xcd904; cmovne rax, rdx; ret; 
0x00000000121d30: adc eax, 0xcdd23; add word ptr [rdx+rax*2], 0x1; ret; 
0x000000000bcd3b: adc eax, 0xcf1b0; lea rax, [rip+0x11389]; cmove rax, rdx; ret; 
0x000000000bc87b: adc eax, 0xcf940; lea rax, [rip+0x11b79]; cmove rax, rdx; ret; 
0x0000000011c502: adc eax, 0xcf969; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000bca2b: adc eax, 0xcfbe0; lea rax, [rip+0x12699]; cmove rax, rdx; ret; 
0x000000000a08c2: adc eax, 0xd0099; cmovne rax, rdx; ret; 
0x000000000a0822: adc eax, 0xd0119; cmovne rax, rdx; ret; 
0x000000000bcb1b: adc eax, 0xd0240; lea rax, [rip+0x12879]; cmove rax, rdx; ret; 
0x000000000bc83b: adc eax, 0xd02f0; lea rax, [rip+0x129c9]; cmove rax, rdx; ret; 
0x000000000bc98b: adc eax, 0xd05c0; lea rax, [rip+0x12f89]; cmove rax, rdx; ret; 
0x000000000a0912: adc eax, 0xd21a9; cmovne rax, rdx; ret; 
0x000000000a0872: adc eax, 0xd2229; cmovne rax, rdx; ret; 
0x00000000118a72: adc eax, 0xd33f9; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000116d3a: adc eax, 0xd5131; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000116d0a: adc eax, 0xd5161; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000116cd2: adc eax, 0xd5199; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000116aea: adc eax, 0xd5381; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000bcd90: adc eax, 0xd575b; cmovne rax, rdx; ret; 
0x0000000009f24f: adc eax, 0xd5dbc; cmovne rax, rdx; ret; 
0x00000000115362: adc eax, 0xd6b09; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000001152e2: adc eax, 0xd6b89; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000115222: adc eax, 0xd6c49; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000115022: adc eax, 0xd6e49; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000009f7ff: adc eax, 0xd6fbc; cmovne rax, rdx; ret; 
0x0000000011468a: adc eax, 0xd77e1; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x000000001145ca: adc eax, 0xd78a1; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000114512: adc eax, 0xd7959; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000114472: adc eax, 0xd79f9; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x000000001141f2: adc eax, 0xd7c79; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000113df2: adc eax, 0xd8079; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000113db2: adc eax, 0xd80b9; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000113bea: adc eax, 0xd8281; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000001138fa: adc eax, 0xd8571; mov esi, 0x5401; mov eax, r8d; mov ebx, fs:[r10]; syscall; 
0x000000001136ba: adc eax, 0xd87b1; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000113682: adc eax, 0xd87e9; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000011364a: adc eax, 0xd8821; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000011338a: adc eax, 0xd8ae1; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000113342: adc eax, 0xd8b29; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000a076f: adc eax, 0xd8bcc; cmovne rax, rdx; ret; 
0x00000000113292: adc eax, 0xd8bd9; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000113132: adc eax, 0xd8d39; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000001130f2: adc eax, 0xd8d79; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000011309a: adc eax, 0xd8dd1; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x000000001129f2: adc eax, 0xd9479; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000a07cf: adc eax, 0xda37c; cmovne rax, rdx; ret; 
0x000000000d4669: adc eax, 0xdb4a6; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000000a8bfb: adc eax, 0xdbc60; lea rax, [rip+0x3819]; cmove rax, rdx; ret; 
0x0000000010ea12: adc eax, 0xdd459; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010e892: adc eax, 0xdd5d9; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010e17a: adc eax, 0xddcf1; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010e14a: adc eax, 0xddd21; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000010e102: adc eax, 0xddd69; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000010e062: adc eax, 0xdde09; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000010dc3a: adc eax, 0xde231; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010da02: adc eax, 0xde469; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010d9a2: adc eax, 0xde4c9; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010d942: adc eax, 0xde529; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010d5ba: adc eax, 0xde8b1; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010d55a: adc eax, 0xde911; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010d4fa: adc eax, 0xde971; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010c2b2: adc eax, 0xdfbb9; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000010c202: adc eax, 0xdfc69; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x000000000cfafa: adc eax, 0xe180d188; pcmpeqb mm3, [rsi]; ret; 
0x000000000a1cab: adc eax, 0xe2a60; lea rax, [rip+0xa559]; cmove rax, rdx; ret; 
0x0000000009fb1d: adc eax, 0xe3e8e; test byte ptr [rax+0x72], 0x10; lea rax, [rip+0x1bee3]; cmovne rax, rdx; ret; 
0x0000000009f85d: adc eax, 0xe400e; test byte ptr [rax+0x72], 0x10; lea rax, [rip+0x1c0f3]; cmovne rax, rdx; ret; 
0x000000000a042b: adc eax, 0xe4010; lea rax, [rip+0xbaa9]; cmove rax, rdx; ret; 
0x0000000009f26d: adc eax, 0xe44be; test byte ptr [rax+0x72], 0x10; lea rax, [rip+0x1c633]; cmovne rax, rdx; ret; 
0x000000000a1ceb: adc eax, 0xe6530; lea rax, [rip+0xf9d9]; cmove rax, rdx; ret; 
0x000000000915a3: adc eax, 0xe7894800; xor esi, esi; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000001473e6: adc eax, 0xe7e5; lea r9, [rsp+0x20]; call qword ptr [rax]; 
0x0000000009f83b: adc eax, 0xe8bd0; lea rax, [rip+0x12099]; cmove rax, rdx; ret; 
0x0000000009f68b: adc eax, 0xe8f50; lea rax, [rip+0x12549]; cmove rax, rdx; ret; 
0x0000000009f6cb: adc eax, 0xe90b0; lea rax, [rip+0x126a9]; cmove rax, rdx; ret; 
0x000000000b1488: adc eax, 0xea033; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x000000000b1463: adc eax, 0xea058; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x000000000a09c6: adc eax, 0xeabb5; cmove rax, rdx; ret; 
0x000000000a0656: adc eax, 0xeaf05; cmove rax, rdx; ret; 
0x000000000a04f6: adc eax, 0xeb085; cmove rax, rdx; ret; 
0x000000000a05b9: adc eax, 0xeb452; lea rax, [rip+0xeb4ab]; cmove rax, rdx; ret; 
0x000000000aee28: adc eax, 0xec693; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x000000000aee0e: adc eax, 0xec6ad; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x000000000a0a11: adc eax, 0xef8ea; cmove rax, rdx; ret; 
0x000000000a06a1: adc eax, 0xefc3a; cmove rax, rdx; ret; 
0x000000000a0541: adc eax, 0xefdba; cmove rax, rdx; ret; 
0x000000000a0601: adc eax, 0xf028a; cmove rax, rdx; ret; 
0x000000000a0480: adc eax, 0xf08fb; cmovne rax, rdx; ret; 
0x0000000009f172: adc eax, 0xf18e9; cmovne rax, rdx; ret; 
0x0000000014e4ec: adc eax, 0xf390fffe; nop edx, edi; ret; 
0x0000000011fc57: adc eax, 0xf7000cc2; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x0000000011f057: adc eax, 0xf7000cce; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x0000000011cf57: adc eax, 0xf7000cef; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x0000000010fc57: adc eax, 0xf7000dc2; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x0000000010ea57: adc eax, 0xf7000dd4; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x00000000102757: adc eax, 0xf7000e97; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x000000000bc068: adc eax, 0xf880272; ret; 
0x00000000100688: adc eax, 0xf9eb52e9; jmp qword ptr [rsi-0x70]; 
0x000000000e5ab8: adc eax, 0xfb9722e9; jmp qword ptr [rsi-0x70]; 
0x0000000012daad: adc eax, 0xfff8e00e; cmove rax, rdx; ret; 
0x0000000012d9ed: adc eax, 0xfff8e0ee; cmove rax, rdx; ret; 
0x0000000012d92d: adc eax, 0xfff8e1ae; cmove rax, rdx; ret; 
0x0000000012db24: adc eax, 0xfff8e467; lea rax, [rip-0x71c20]; cmovne rax, rdx; ret; 
0x00000000152386: adc eax, 0xffff8a55; mov esi, 0xa; lea r9, [rsp+0x1c]; call qword ptr [rax]; 
0x00000000152252: adc eax, 0xffff8db9; mov esi, 0x8; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x00000000151fed: adc eax, 0xffff8e6e; mov esi, 0x7; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x00000000151e4d: adc eax, 0xffff900e; mov esi, 0x6; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x00000000151cf0: adc eax, 0xffff912b; mov esi, 0x3; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x00000000151bb0: adc eax, 0xffff926b; mov esi, 0x2; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x00000000151947: adc eax, 0xffff9494; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x0000000007b1c8: adc eax, 0xfffffb2c; add rax, rdx; jmp rax; 
0x000000000748f7: adc eax, 0xfffffb5e; movsxd rax, [rcx+rax*4]; add rax, rdx; jmp rax; 
0x000000000a032d: adc eax, 0xfffffc9e; test byte ptr [rax+0xcc], 0x10; lea rax, [rip+0x1b0d0]; cmove rax, rdx; ret; 
0x000000000d0fea: adc eax, 0xffffff11; cmove rax, rdx; add rsp, 0x58; ret; 
0x000000000d0eca: adc eax, 0xffffff21; cmove rax, rdx; add rsp, 0x58; ret; 
0x0000000010d27d: adc eax, 0xffffff8e; test byte ptr [rax+0x72], 0x80; lea rax, [rip-0xbd]; cmove rax, rdx; ret; 
0x000000000bc063: adc eax, [rax+0x157701fa]; jb short 0x00000000000bc06d; mov [rdi], cl; ret; 
0x000000000639fe: adc eax, [rax-0x78]; sub [rbx+0x5d], bl; pop r12; ret; 
0x000000000900b5: adc eax, [rax]; add [rax-0x77], cl; fcomp st, dword ptr [rbx+0x5d]; pop r12; ret; 
0x00000000114411: adc eax, [rax]; add [rax], al; syscall; 
0x000000000cd086: adc eax, [rax]; add [rbp+0x31], al; shr cl, 0x38; idiv bh; jmp qword ptr [rsi+0xf]; 
0x000000000aab58: adc eax, [rax]; add [rbp-0x77], cl; ret far; 
0x0000000007af06: adc eax, [rax]; add [rcx-0x8ef63], cl; dec dword ptr [rax-0x77]; ret far; 
0x000000000e5017: adc eax, [rax]; add [rdx+0x7f], bh; cmovne rax, rdx; ret; 
0x0000000007e502: adc eax, [rax]; mov r9, [rbp-0x508]; movsxd rax, [rax+rcx*4]; add rax, rdx; jmp rax; 
0x0000000007dfa3: adc eax, [rax]; mov r9, rsi; movsxd rax, [rcx+rax*4]; add rax, rdx; jmp rax; 
0x00000000024f72: adc eax, [rax]; mov rdi, rbx; call r12; 
0x00000000025fd2: adc eax, [rax]; mov rdi, rbx; call r14; 
0x00000000025b27: adc eax, [rax]; mov rdi, rbx; call rbp; 
0x000000000256c5: adc eax, [rax]; mov rsi, [rbp-0x70]; mov rdi, rbx; call rsi; 
0x00000000077879: adc eax, [rax]; movsxd rax, [rax+rcx*4]; add rax, rbx; jmp rax; 
0x0000000007e048: adc eax, [rax]; movsxd rax, [rax+rcx*4]; add rax, rdx; jmp rax; 
0x000000000778d4: adc eax, [rax]; movsxd rax, [rax+rdx*4]; add rax, rbx; jmp rax; 
0x0000000007b1c0: adc eax, [rax]; movsxd rax, [rax+rdx*4]; lea rdx, [rip-0x4d4]; add rax, rdx; jmp rax; 
0x000000000951a8: adc eax, [rbp+0x1]; sbb [r8+0x39], cl; ret; 
0x000000000b6df1: adc eax, [rbx+0x6349000f]; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000004232c: adc eax, [rcx+0xe6]; xor bl, 0xf; adc [rdi], eax; movd xmm0, esi; ret; 
0x0000000011f6b4: adc eax, [rcx]; add [rax], al; mov rsi, [rsp+0x10]; mov edi, [rsp+0x8]; syscall; 
0x0000000011f664: adc eax, [rcx]; add [rax], al; syscall; 
0x000000000b3acb: adc eax, [rdx]; mov al, [rcx+0x8]; mov [rdx+0x8], al; mov rax, rdi; ret; 
0x000000000b3aeb: adc eax, [rdx]; mov ax, [rcx+0x8]; mov [rdx+0x8], ax; mov rax, rdi; ret; 
0x000000000b3b0b: adc eax, [rdx]; mov eax, [rcx+0x7]; mov [rdx+0x7], eax; mov rax, rdi; ret; 
0x000000000b3b2b: adc eax, [rdx]; mov eax, [rcx+0x8]; mov [rdx+0x8], eax; mov rax, rdi; ret; 
0x000000000b3988: adc eax, [rdx]; mov rax, rdi; ret; 
0x000000000b39da: adc eax, [rdx]; movlpd [rdx+0x8], xmm1; mov rax, rdi; ret; 
0x000000000b3b4b: adc eax, [rdx]; movlpd xmm1, [rcx+0x5]; movlpd [rdx+0x5], xmm1; mov rax, rdi; ret; 
0x000000000b3b6b: adc eax, [rdx]; movlpd xmm1, [rcx+0x6]; movlpd [rdx+0x6], xmm1; mov rax, rdi; ret; 
0x000000000b3b8b: adc eax, [rdx]; movlpd xmm1, [rcx+0x7]; movlpd [rdx+0x7], xmm1; mov rax, rdi; ret; 
0x000000000b66db: adc eax, [rdx]; movlpd xmm1, [rcx+0x8]; movlpd [rdx+0x8], xmm1; mov rax, rdi; ret; 
0x000000000b675c: adc eax, [rdx]; xor ah, ah; mov [rdx+0x8], ah; mov rax, rdi; ret; 
0x0000000016c747: adc eax, [rip+0x14634900]; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000055aad: adc eax, eax; ret; 
0x000000000e64e2: adc eax, ebp; js short 0x00000000000e64a5; inc dword ptr [rcx-0x80]; jl short 0x00000000000e64f0; jmp far fword ptr [rdi]; 
0x00000000055be6: adc eax, edx; pop rbp; pop rbx; ret; 
0x000000000b83cd: adc ebp, [rdi+0xf]; add [rcx+0x63], cl; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000085971: adc ebp, ebx; ret far; 
0x000000000de6c1: adc ebp, ecx; sbb [rbx], ecx; cld; jmp qword ptr [rsi+0xf]; 
0x0000000009ca59: adc ebx, 0x11; add al, ch; mov dil, r15b; jmp qword ptr [rsi+0xf]; 
0x0000000006aac8: adc ebx, [rax]; add [rbx-0x5ff7b], cl; jmp qword ptr [rcx+rcx*4+0x2]; 
0x00000000178681: adc ebx, eax; nop [rax+rax]; xchg ax, ax; mov [rcx], dx; ret; 
0x00000000048b7f: adc ecx, [rax+0xf]; mov esi, 0x83480143; ret; 
0x00000000121c74: adc ecx, [rax-0x39]; add eax, 0xca6e0; add al, [rax]; add [rax], al; ret; 
0x000000000b7931: adc ecx, [rax-0x73]; jg short 0x00000000000b7949; jne 0x00000000000b7fa0; ret; 
0x000000000b9065: adc ecx, [rax-0x73]; jg short 0x00000000000b907d; jne 0x00000000000b97f0; ret; 
0x000000000472e8: adc ecx, [rax-0x75]; jge short 0x00000000000472f5; call rax; 
0x00000000082b3c: adc ecx, [rax-0x75]; mov edi, 0xe0; jmp rax; 
0x0000000010db63: adc ecx, [rax-0x7d]; in al, dx; sbb byte ptr [rbp+0x41], 0x5c; pop r13; ret; 
0x000000000469e1: adc ecx, [rax-0x7d]; ret; 
0x000000000baa2d: adc ecx, [rbx+0xf]; add [rcx+0x63], cl; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000002f284: adc ecx, [rcx+0x29d231fb]; ret; 
0x0000000006bbd2: adc ecx, [rcx+0x415d5b28]; pop rsp; ret; 
0x000000000ffc6c: adc ecx, [rcx+0x6c0f66d0]; ret; 
0x00000000074056: adc ecx, [rcx+rax-0x6]; call qword ptr [rax+r9*8]; 
0x00000000166c7c: adc ecx, [rdi]; sub [rdi-0x20], esp; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x000000000b3b54: adc ecx, [rdx+0x5]; mov rax, rdi; ret; 
0x000000000b3b74: adc ecx, [rdx+0x6]; mov rax, rdi; ret; 
0x000000000b3b94: adc ecx, [rdx+0x7]; mov rax, rdi; ret; 
0x000000000b39de: adc ecx, [rdx+0x8]; mov rax, rdi; ret; 
0x000000000b67c5: adc ecx, [rdx+0x8]; xor ah, ah; mov [rdx+0x10], ah; mov rax, rdi; ret; 
0x00000000119239: adc ecx, [rsp+rsi*8-0x76b3a701]; loopne 0x000000000011929c; pop r12; ret; 
0x0000000010d55b: adc ecx, ebp; or eax, 0x64d8f700; mov [rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000089194: adc edi, 0x6; add [rax], al; lea rsi, [rsp+0x30]; mov rdi, r15; call qword ptr [r14+0x90]; 
0x0000000013b93f: adc edi, [rax-0x1]; ret; 
0x0000000002c7a9: adc edi, [rax]; add [rcx-0x77], cl; ret far; 
0x00000000165ef6: adc edi, [rsi]; jmp rdx; 
0x00000000113330: adc edi, eax; dec dword ptr [rbx+0x48082444]; add esp, 0x28; ret; 
0x00000000113281: adc edi, eax; dec dword ptr [rbx+0x48182444]; add esp, 0x28; ret; 
0x0000000012e8aa: adc edi, esi; call qword ptr [rax-0x18]; 
0x0000000012e8ab: adc edi, esi; call qword ptr [rax-0x18]; 
0x00000000055aa5: adc edx, ebx; mov [rdi+0x8], r10; mov eax, ecx; adc eax, eax; ret; 
0x000000001439b9: adc edx, ecx; or al, [rax]; syscall; 
0x0000000011f159: adc esi, [rcx+rax-0x3d]; xor ebp, ebp; pop rax; pop rdi; call rax; 
0x000000000a8a54: adc fs:[rax], al; mov edx, edx; movsxd rdx, [rdi+rdx*4]; add rdx, rdi; notrack jmp rdx; 
0x000000000a897c: adc gs:[rax], al; mov ecx, eax; movsxd rcx, [r9+rcx*4]; add rcx, r9; notrack jmp rcx; 
0x0000000011a859: adc gs:[rbp-0x7b], cl; in al, 0x75; sub [rax-0x75], cl; jge short 0x000000000011a864; call rbx; 
0x00000000055aa3: adc r10, r11; mov [rdi+0x8], r10; mov eax, ecx; adc eax, eax; ret; 
0x0000000008d7d2: adc r11b, r13b; in eax, 0x66; nop [rax+rax]; mov eax, 0xffffffff; ret; 
0x000000000bbfe9: adc r11b, r14b; movq [rdi+rdx-0x10], mm0; movdqu [rdi+rdx-0x20], xmm0; ret; 
0x000000000cd085: adc r8d, [r8]; add [rbp+0x31], al; shr cl, 0x38; idiv bh; jmp qword ptr [rsi+0xf]; 
0x0000000013da22: adc r9b, [rbp-0x2ff6f]; jmp qword ptr [rsi-0x7d]; 
0x00000000098148: adc rax, 0x51894900; or [rax+0x39], cl; ret; 
0x00000000099fdb: adc rax, 0x5b050f00; ret; 
0x00000000097593: adc rax, 0x5c894c00; and al, 0x18; mov rdi, r13; mov [rsp+0x10], r10; call qword ptr [rax]; 
0x00000000055be5: adc rax, rdx; pop rbp; pop rbx; ret; 
0x00000000087466: add [eax], al; mov rax, [rsp]; mov esi, r12d; mov rdi, r14; call qword ptr [rax+0x18]; 
0x0000000018f9c9: add [r10-0x2f], r12; jl short 0x000000000018fa17; adc [rcx-0x2], edx; vmovups [r9-0x40], zmm3; ret; 
0x000000000f598a: add [r11+0x5d], r11b; pop r12; pop r13; pop r14; ret; 
0x000000001135bf: add [r13+rbp-0x48], sil; add [rcx], eax; add [rax], al; syscall; 
0x000000000926e7: add [r8+0x1], r15b; movups [rbp+0x38], xmm0; pop rbp; pop r12; ret; 
0x0000000002c7e7: add [r8+0x39], r9d; ret; 
0x0000000012d43d: add [r8+0x3b], ecx; pop rbp; mov eax, 0x89483e74; ret; 
0x0000000005b3f3: add [r8+r8*8-0x7cb6f78c], eax; ret; 
0x0000000010bf2e: add [r8-0x77], ecx; ret; 
0x00000000093495: add [r8-0x77], r9b; imul esp, [rax+0x5b], 0x5d; pop r12; ret; 
0x0000000009cde2: add [r8-0x7b], r9b; ror byte ptr [rdi], 0x84; rol dword ptr [rax], cl; add [rax], al; call rax; 
0x00000000038024: add [r8-0x7d], ecx; ret; 
0x000000000666cf: add [r8-0x7d], r9b; ret; 
0x000000000e820b: add [r8-0x7d], r9d; mov dword ptr [rcx], 0xac75c084; xor eax, eax; ret; 
0x00000000048d3a: add [r8-0x7d], rcx; ret; 
0x000000000f06b1: add [r8-0x80], eax; call far fword ptr [rsi]; 
0x000000000d008d: add [r8], al; add [rcx+rcx*4-0x20], cl; pop r12; ret; 
0x00000000151a7d: add [r8], al; mov r9, rbp; mov esi, 0x9; call qword ptr [rax]; 
0x000000000a20f0: add [r8], r8b; add [rax], al; add [rbp+0x41], bl; pop rsp; ret; 
0x0000000014dd82: add [r8], r8b; add [rax], al; add [rbx+0x5d], bl; pop r12; ret; 
0x00000000144d18: add [r8], r8b; add [rax], al; add al, ch; std; ret far; 
0x000000000a1fca: add [r8], r8b; add [rax], al; add bl, ch; ret far; 
0x0000000012887b: add [r8], r8b; mov rsi, r15; mov edi, 0x2000006; mov rdx, rax; call qword ptr [rbx+0x28]; 
0x000000001898f6: add [r8], r8d; vzeroupper; ret; 
0x000000000a03af: add [r9+rcx*4-0x20], r9b; pop rbp; pop r12; pop r13; ret; 
0x000000000eb5d9: add [r9-0x73], ecx; push rbx; add [rcx-0x7f], ecx; ret; 
0x000000000480a0: add [r9], r14b; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x5d], bl; ret; 
0x0000000013bd26: add [rax+0x102], bh; cmovne eax, edx; ret; 
0x00000000063057: add [rax+0x10], bh; ret; 
0x00000000113b89: add [rax+0x10], bh; syscall; 
0x0000000011f268: add [rax+0x119], bh; syscall; 
0x000000000e3222: add [rax+0x142], bh; syscall; 
0x00000000190cae: add [rax+0x1478d48], dl; ret; 
0x000000000b92fe: add [rax+0x1788168a], dl; lea rax, [rdi+0x1]; ret; 
0x00000000052a21: add [rax+0x19bc3d05], cl; add [rax-0x73], cl; add eax, 0x19bc31; mov byte ptr [rax+rdx], 0x0; ret; 
0x000000000dcfed: add [rax+0x1], bh; add rsp, 0x8; ret; 
0x000000000cf0af: add [rax+0x1], bh; jg short 0x00000000000cf0b9; neg eax; ret; 
0x00000000192aef: add [rax+0x1], bh; jg short 0x0000000000192b00; neg eax; ret; 
0x00000000057c5c: add [rax+0x1], bh; mov dword ptr [rdx], 0xffffc002; ret; 
0x000000000926e8: add [rax+0x1], bh; movups [rbp+0x38], xmm0; pop rbp; pop r12; ret; 
0x00000000149bb6: add [rax+0x1], bh; pop rbx; pop rbp; pop r12; ret; 
0x0000000010c59f: add [rax+0x1], bh; pop rbx; ret; 
0x00000000057b70: add [rax+0x1], bh; ret; 
0x000000000abf64: add [rax+0x1], cl; clc; add rax, rcx; ret; 
0x000000001844c1: add [rax+0x1], cl; clc; add rax, rcx; vzeroupper; ret; 
0x00000000184a09: add [rax+0x1], cl; clc; vzeroupper; ret; 
0x00000000046224: add [rax+0x1], cl; ret far; 
0x00000000095654: add [rax+0x1], cl; ret; 
0x0000000010c59e: add [rax+0x1], dil; pop rbx; ret; 
0x0000000011638e: add [rax+0x1], dil; ret; 
0x0000000015960b: add [rax+0x1], ecx; ret far; 
0x00000000064e63: add [rax+0x1], ecx; ret; 
0x000000000ec46f: add [rax+0x1], edi; mov byte ptr [rdi], 0x5b; ret; 
0x000000000ec420: add [rax+0x1], edi; ret; 
0x000000000cf58e: add [rax+0x1a948], dl; add [rax], al; je 0x00000000000cf4f5; lea rax, [rdi-0x10]; ret; 
0x000000000cefdf: add [rax+0x1b740fe6], al; mov eax, [rdi+0x18]; cmp eax, [rsi+0x18]; jne 0x00000000000cf0b0; ret; 
0x000000000cef7f: add [rax+0x1b740fe6], al; mov eax, [rdi+0x8]; cmp eax, [rsi+0x8]; jne 0x00000000000cf0b0; ret; 
0x000000001929df: add [rax+0x1b740fe6], al; mov eax, [rdi-0x8]; cmp eax, [rsi-0x8]; jne 0x0000000000192af0; ret; 
0x000000000ec49d: add [rax+0x1b807], ecx; add [rax], al; ret; 
0x000000000422cf: add [rax+0x1fe8c17f], al; ret; 
0x000000000e509b: add [rax+0x20], bh; cmove rax, rdx; ret; 
0x0000000017a9e1: add [rax+0x28d4802], ecx; ret; 
0x00000000092a57: add [rax+0x29], cl; enter 0xe883, 0x1; ret; 
0x0000000003568a: add [rax+0x29], cl; ret far; 
0x0000000007a3ee: add [rax+0x29], cl; ret; 
0x000000000993cb: add [rax+0x29], cl; ror byte ptr [rax+0x39], 0x1; ret; 
0x00000000149d07: add [rax+0x29], ecx; mov rbp, rdx; call qword ptr [rbx+0x10]; 
0x00000000057d83: add [rax+0x2], bh; ret; 
0x000000000ec3fe: add [rax+0x2c755ef9], al; mov byte ptr [rdi+0x8], 0x19; mov eax, 0x1; ret; 
0x000000000e2f67: add [rax+0x38], edi; syscall; 
0x0000000002c834: add [rax+0x39480751], ecx; ret; 
0x00000000095557: add [rax+0x39], cl; cmp eax, 0x159931; jbe short 0x0000000000095508; add rsp, 0x8; ret; 
0x000000000298e8: add [rax+0x39], cl; ret far; 
0x0000000002a5db: add [rax+0x39], cl; ret; 
0x000000000c82f8: add [rax+0x39], ecx; ret far; 
0x0000000002c47e: add [rax+0x39], ecx; ret; 
0x0000000012d43e: add [rax+0x3b], ecx; pop rbp; mov eax, 0x89483e74; ret; 
0x000000001929ce: add [rax+0x3bf4478b], dl; hlt; jne 0x0000000000192af0; ret; 
0x000000000cb1b3: add [rax+0x4428944], al; mov [rdx], eax; xor eax, eax; ret; 
0x000000000bc1b7: add [rax+0x485bf0e5], al; cmovne eax, edx; ret; 
0x0000000009f167: add [rax+0x48], al; lea eax, [rip+0x12330]; lea rdx, [rip+0xf18e9]; cmovne rax, rdx; ret; 
0x00000000113411: add [rax+0x48], bh; syscall; 
0x0000000015fd01: add [rax+0x48], dl; mov eax, [rip+0x8c156]; mov r8, [rbx+0x10]; call qword ptr [rax+0x1e0]; 
0x00000000041ff8: add [rax+0x48c22148], al; mov [rdi], edx; ret; 
0x00000000136d3c: add [rax+0x578b4803], cl; or [rax-0x7d], cl; ret; 
0x00000000034578: add [rax+0x5], cl; add [rdx], al; add [rax], al; mov fs:[rdx], rax; ret; 
0x000000000226bd: add [rax+0x5b], bl; pop rbp; ret; 
0x000000001482fe: add [rax+0x5d5bc031], dl; pop r12; ret; 
0x0000000014f753: add [rax+0x63], cl; adc al, 0x90; add rdx, rax; notrack jmp rdx; 
0x00000000080f11: add [rax+0x63], cl; adc al, 0x91; add rdx, rcx; notrack jmp rdx; 
0x00000000063547: add [rax+0x63], cl; add al, 0x81; add rax, rcx; notrack jmp rax; 
0x0000000007df4d: add [rax+0x63], cl; add al, 0x81; add rax, rdx; jmp rax; 
0x00000000023e88: add [rax+0x63], cl; add al, 0x82; add rax, rdx; notrack jmp rax; 
0x00000000194b69: add [rax+0x63], cl; add al, 0x82; add rdx, rax; notrack jmp rdx; 
0x0000000007f1e8: add [rax+0x63], cl; add al, 0x86; add rax, rdx; jmp rax; 
0x000000000e8d73: add [rax+0x63], cl; add al, 0x86; add rax, rsi; notrack jmp rax; 
0x0000000007787a: add [rax+0x63], cl; add al, 0x88; add rax, rbx; jmp rax; 
0x0000000007e049: add [rax+0x63], cl; add al, 0x88; add rax, rdx; jmp rax; 
0x0000000006c90a: add [rax+0x63], cl; add al, 0x8e; add rax, rsi; notrack jmp rax; 
0x000000000778d5: add [rax+0x63], cl; add al, 0x90; add rax, rbx; jmp rax; 
0x0000000007b1c1: add [rax+0x63], cl; add al, 0x90; lea rdx, [rip-0x4d4]; add rax, rdx; jmp rax; 
0x000000001092d9: add [rax+0x63], cl; add al, 0x9a; add rax, rdx; notrack jmp rax; 
0x000000000e5476: add [rax+0x63], cl; add al, 0xaa; add rax, rdx; notrack jmp rax; 
0x00000000101091: add [rax+0x63], cl; add al, 0xba; add rax, rdx; notrack jmp rax; 
0x000000000bc0d8: add [rax+0x63], cl; add al, 0xbe; add rax, rsi; notrack jmp rax; 
0x00000000047891: add [rax+0x63], cl; and al, 0x4; jne short 0x00000000000478ea; add rsp, 0x18; ret; 
0x0000000013b6e1: add [rax+0x63], cl; fisttp dword ptr [rax+0x1], st; ret; 
0x00000000033d8a: add [rax+0x63], cl; jmp qword ptr [rax+rcx*2-0x75]; 
0x00000000080ead: add [rax+0x63], cl; or al, 0x8f; add rcx, rdi; notrack jmp rcx; 
0x0000000004a88e: add [rax+0x63], cl; ret far; 
0x0000000006254e: add [rax+0x63], cl; ret; 
0x0000000013c367: add [rax+0x63], cl; rol byte ptr [rcx+rcx*4-0x40], cl; mov byte ptr [rdi+rdx], 0x0; ret; 
0x0000000018398f: add [rax+0x63], cl; ror dword ptr [rax+0x1], 0xf8; ret; 
0x00000000148668: add [rax+0x63], cl; sbb [r11+0xe7603f8], r8b; mov eax, 0x2; ret; 
0x00000000127846: add [rax+0x63], ecx; fmul st, dword ptr [rax-0x77]; ror byte ptr [rcx+0x2b], 0x1; cmp [r8+0x39], r9b; ret; 
0x000000000ff899: add [rax+0x63], ecx; ret far; 
0x000000000edf9b: add [rax+0x63], ecx; ret; 
0x0000000017867e: add [rax+0x6666c311], cl; nop [rax+rax]; xchg ax, ax; mov [rcx], dx; ret; 
0x000000000b7e6e: add [rax+0x6666c317], cl; nop [rax+rax]; xchg ax, ax; mov [rdi], dx; ret; 
0x00000000041fc8: add [rax+0x66c22148], al; movq mm0, rdx; ret; 
0x000000000bb0de: add [rax+0x66f0ff3], dl; movdqu [rdi], xmm0; xor ch, ch; mov [rdi+0x10], ch; ret; 
0x00000000041f85: add [rax+0x7110ff2], al; and rdx, rax; movq xmm0, rdx; ret; 
0x00000000042331: add [rax+0x7110ff3], al; movd xmm0, esi; ret; 
0x0000000018a57e: add [rax+0x77f8c517], cl; ret; 
0x000000000b84bf: add [rax+0x78d4837], cl; ret; 
0x000000000b8dbf: add [rax+0x78d4837], cl; sub r8, 0x1; lea rdi, [rdi+0x1]; jne 0x00000000000b97f0; ret; 
0x000000000e4fb1: add [rax+0x7f], bh; cmove rax, rdx; ret; 
0x00000000043438: add [rax+0x7f], bh; syscall; 
0x0000000013c9ef: add [rax+0x7fffffff], bh; ret; 
0x00000000044157: add [rax+0x80], bh; syscall; 
0x00000000043484: add [rax+0x82], bh; syscall; 
0x0000000014802e: add [rax+0x8c48348], dl; mov eax, 0x1; pop rbx; pop rbp; ret; 
0x0000000011f7f7: add [rax+0x95], bh; syscall; 
0x0000000011a58b: add [rax+0x9], ecx; ror byte ptr [rcx-0x77], 0x1; or [r9-0x75], cl; add [rbx+0x94901e0], eax; ret; 
0x00000000054ebd: add [rax+0x9e], bh; syscall; 
0x000000000cf03f: add [rax+0xb740fe6], al; mov eax, [rdi+0x28]; cmp eax, [rsi+0x28]; jne short 0x00000000000cf0b0; ret; 
0x000000000cf08f: add [rax+0xb740fe6], al; mov eax, [rdi+0x38]; cmp eax, [rsi+0x38]; jne short 0x00000000000cf0b0; ret; 
0x000000000f24cf: add [rax+0xc], bh; ret; 
0x000000000e1dd1: add [rax+0xca], bh; lea rdi, [rip+0x10d702]; syscall; 
0x000000000e1c91: add [rax+0xca], bh; lea rdi, [rip+0x10d842]; syscall; 
0x000000000e1bd9: add [rax+0xca], bh; lea rdi, [rip+0x10d8fa]; syscall; 
0x000000000e1afd: add [rax+0xca], bh; lea rdi, [rip+0x10d9ce]; syscall; 
0x000000000e192d: add [rax+0xca], bh; lea rdi, [rip+0x10db5e]; syscall; 
0x000000000e1769: add [rax+0xca], bh; lea rdi, [rip+0x10dcda]; syscall; 
0x000000000e13af: add [rax+0xca], bh; lea rdi, [rip+0x10e03c]; syscall; 
0x000000000dfea1: add [rax+0xca], bh; lea rdi, [rip+0x10f4c2]; syscall; 
0x000000000dfd61: add [rax+0xca], bh; lea rdi, [rip+0x10f602]; syscall; 
0x000000000dfca9: add [rax+0xca], bh; lea rdi, [rip+0x10f6ba]; syscall; 
0x000000000df8dd: add [rax+0xca], bh; lea rdi, [rip+0x10fa7e]; syscall; 
0x000000000df70d: add [rax+0xca], bh; lea rdi, [rip+0x10fc0e]; syscall; 
0x000000000df549: add [rax+0xca], bh; lea rdi, [rip+0x10fd8a]; syscall; 
0x000000000dec61: add [rax+0xca], bh; lea rdi, [rip+0x11061a]; syscall; 
0x000000000d2bbd: add [rax+0xca], bh; lea rdi, [rip+0x11c5d6]; syscall; 
0x000000000d2989: add [rax+0xca], bh; lea rdi, [rip+0x11c80a]; syscall; 
0x000000000ca65d: add [rax+0xca], bh; lea rdi, [rip+0x126b46]; syscall; 
0x0000000009c81d: add [rax+0xca], bh; lea rdi, [rip+0x150356]; syscall; 
0x0000000009e1c9: add [rax+0xca], bh; lea rdi, [rip+0x150d32]; syscall; 
0x0000000009dfe9: add [rax+0xca], bh; lea rdi, [rip+0x150f12]; syscall; 
0x0000000009ddfd: add [rax+0xca], bh; lea rdi, [rip+0x1510fe]; syscall; 
0x0000000009dd8d: add [rax+0xca], bh; lea rdi, [rip+0x15116e]; syscall; 
0x0000000009db5d: add [rax+0xca], bh; lea rdi, [rip+0x15139e]; syscall; 
0x00000000099abd: add [rax+0xca], bh; lea rdi, [rip+0x1530b6]; syscall; 
0x00000000099a5d: add [rax+0xca], bh; lea rdi, [rip+0x153116]; syscall; 
0x0000000009969d: add [rax+0xca], bh; lea rdi, [rip+0x1534d6]; syscall; 
0x0000000009943d: add [rax+0xca], bh; lea rdi, [rip+0x153736]; syscall; 
0x00000000098dd5: add [rax+0xca], bh; lea rdi, [rip+0x153d9e]; syscall; 
0x00000000098d9d: add [rax+0xca], bh; lea rdi, [rip+0x153dd6]; syscall; 
0x0000000009aa6d: add [rax+0xca], bh; lea rdi, [rip+0x15440e]; syscall; 
0x00000000099fd1: add [rax+0xca], bh; lea rdi, [rip+0x154e9a]; syscall; 
0x0000000009603e: add [rax+0xca], bh; lea rdi, [rip+0x158e2d]; syscall; 
0x0000000009600d: add [rax+0xca], bh; lea rdi, [rip+0x158e6e]; syscall; 
0x00000000095d8d: add [rax+0xca], bh; lea rdi, [rip+0x1590ee]; syscall; 
0x00000000095869: add [rax+0xca], bh; lea rdi, [rip+0x159612]; syscall; 
0x00000000094c4e: add [rax+0xca], bh; lea rdi, [rip+0x159ba5]; syscall; 
0x00000000094a79: add [rax+0xca], bh; lea rdi, [rip+0x159d7a]; syscall; 
0x000000000948dd: add [rax+0xca], bh; lea rdi, [rip+0x159f16]; syscall; 
0x0000000009394f: add [rax+0xca], bh; lea rdi, [rip+0x15ae64]; syscall; 
0x0000000009340f: add [rax+0xca], bh; lea rdi, [rip+0x15b3a4]; syscall; 
0x0000000009306b: add [rax+0xca], bh; lea rdi, [rip+0x15b748]; syscall; 
0x00000000092cff: add [rax+0xca], bh; lea rdi, [rip+0x15bab4]; syscall; 
0x0000000009167b: add [rax+0xca], bh; lea rdi, [rip+0x15d138]; syscall; 
0x000000000913bb: add [rax+0xca], bh; lea rdi, [rip+0x15d3f8]; syscall; 
0x00000000091047: add [rax+0xca], bh; lea rdi, [rip+0x15d76c]; syscall; 
0x0000000008438c: add [rax+0xca], bh; lea rdi, [rip+0x16a3e7]; syscall; 
0x00000000083f8f: add [rax+0xca], bh; lea rdi, [rip+0x16a7e4]; syscall; 
0x00000000083ee4: add [rax+0xca], bh; lea rdi, [rip+0x16a88f]; syscall; 
0x0000000008201d: add [rax+0xca], bh; lea rdi, [rip+0x16f186]; syscall; 
0x000000000610d1: add [rax+0xca], bh; lea rdi, [rip+0x18d672]; syscall; 
0x00000000060e4d: add [rax+0xca], bh; lea rdi, [rip+0x18d8f2]; syscall; 
0x0000000005ec79: add [rax+0xca], bh; lea rdi, [rip+0x18fabe]; syscall; 
0x0000000005eb39: add [rax+0xca], bh; lea rdi, [rip+0x18fbfe]; syscall; 
0x00000000054d9d: add [rax+0xca], bh; lea rdi, [rip+0x199986]; syscall; 
0x00000000054bbd: add [rax+0xca], bh; lea rdi, [rip+0x199b66]; syscall; 
0x0000000005468d: add [rax+0xca], bh; lea rdi, [rip+0x19a096]; syscall; 
0x000000000522a1: add [rax+0xca], bh; lea rdi, [rip+0x19c252]; syscall; 
0x00000000052125: add [rax+0xca], bh; lea rdi, [rip+0x19c3ce]; syscall; 
0x000000000520ed: add [rax+0xca], bh; lea rdi, [rip+0x19c406]; syscall; 
0x000000000478d9: add [rax+0xca], bh; lea rdi, [rip+0x1a6bfa]; syscall; 
0x00000000047819: add [rax+0xca], bh; lea rdi, [rip+0x1a6cba]; syscall; 
0x00000000047751: add [rax+0xca], bh; lea rdi, [rip+0x1a6d82]; syscall; 
0x00000000047679: add [rax+0xca], bh; lea rdi, [rip+0x1a6e5a]; syscall; 
0x00000000046771: add [rax+0xca], bh; lea rdi, [rip+0x1a750a]; syscall; 
0x000000000466ac: add [rax+0xca], bh; lea rdi, [rip+0x1a75cf]; syscall; 
0x0000000004650a: add [rax+0xca], bh; lea rdi, [rip+0x1a7771]; syscall; 
0x00000000046430: add [rax+0xca], bh; lea rdi, [rip+0x1a784b]; syscall; 
0x000000000384fa: add [rax+0xca], bh; lea rdi, [rip+0x1b5731]; syscall; 
0x00000000036b77: add [rax+0xca], bh; lea rdi, [rip+0x1b707c]; syscall; 
0x0000000003583c: add [rax+0xca], bh; lea rdi, [rip+0x1b830f]; syscall; 
0x0000000003581f: add [rax+0xca], bh; lea rdi, [rip+0x1b832c]; syscall; 
0x00000000035757: add [rax+0xca], bh; lea rdi, [rip+0x1b83f4]; syscall; 
0x00000000026071: add [rax+0xca], bh; lea rdi, [rip+0x1cb132]; syscall; 
0x00000000025f05: add [rax+0xca], bh; lea rdi, [rip+0x1cb29e]; syscall; 
0x00000000025de5: add [rax+0xca], bh; lea rdi, [rip+0x1cb3be]; syscall; 
0x00000000022840: add [rax+0xca], bh; lea rdi, [rip+0x1cb403]; syscall; 
0x000000001987e9: add [rax+0xca], bh; lea rdi, [rip+0x55492]; syscall; 
0x000000001989a9: add [rax+0xca], bh; lea rdi, [rip+0x55e4a]; syscall; 
0x00000000198cd9: add [rax+0xca], bh; lea rdi, [rip+0x57832]; syscall; 
0x0000000015e079: add [rax+0xca], bh; lea rdi, [rip+0x935d2]; syscall; 
0x0000000015cf41: add [rax+0xca], bh; lea rdi, [rip+0x9470a]; syscall; 
0x0000000015ce61: add [rax+0xca], bh; lea rdi, [rip+0x947ea]; syscall; 
0x0000000015cc79: add [rax+0xca], bh; lea rdi, [rip+0x949d2]; syscall; 
0x0000000015cbe9: add [rax+0xca], bh; lea rdi, [rip+0x94a62]; syscall; 
0x0000000015cb49: add [rax+0xca], bh; lea rdi, [rip+0x94b02]; syscall; 
0x0000000015ca99: add [rax+0xca], bh; lea rdi, [rip+0x94bb2]; syscall; 
0x0000000015c6c9: add [rax+0xca], bh; lea rdi, [rip+0x94f82]; syscall; 
0x00000000152439: add [rax+0xca], bh; lea rdi, [rip+0x9e9aa]; syscall; 
0x000000001522d9: add [rax+0xca], bh; lea rdi, [rip+0x9eb0a]; syscall; 
0x000000001520cd: add [rax+0xca], bh; lea rdi, [rip+0x9ed16]; syscall; 
0x00000000151f2d: add [rax+0xca], bh; lea rdi, [rip+0x9eeb6]; syscall; 
0x00000000151d99: add [rax+0xca], bh; lea rdi, [rip+0x9f04a]; syscall; 
0x00000000151c59: add [rax+0xca], bh; lea rdi, [rip+0x9f18a]; syscall; 
0x00000000151af9: add [rax+0xca], bh; lea rdi, [rip+0x9f2ea]; syscall; 
0x000000001519e9: add [rax+0xca], bh; lea rdi, [rip+0x9f3fa]; syscall; 
0x0000000014e4d9: add [rax+0xca], bh; lea rdi, [rip+0xa2906]; syscall; 
0x0000000014c7e1: add [rax+0xca], bh; lea rdi, [rip+0xa453a]; syscall; 
0x0000000014c6a1: add [rax+0xca], bh; lea rdi, [rip+0xa467a]; syscall; 
0x0000000014c5e9: add [rax+0xca], bh; lea rdi, [rip+0xa4732]; syscall; 
0x0000000014c4fd: add [rax+0xca], bh; lea rdi, [rip+0xa4816]; syscall; 
0x0000000014c32d: add [rax+0xca], bh; lea rdi, [rip+0xa49b6]; syscall; 
0x0000000014c169: add [rax+0xca], bh; lea rdi, [rip+0xa4b52]; syscall; 
0x000000001467cb: add [rax+0xca], bh; lea rdi, [rip+0xaa38c]; syscall; 
0x0000000014462d: add [rax+0xca], bh; lea rdi, [rip+0xac496]; syscall; 
0x000000001442f5: add [rax+0xca], bh; lea rdi, [rip+0xac7ce]; syscall; 
0x00000000143f75: add [rax+0xca], bh; lea rdi, [rip+0xacb4e]; syscall; 
0x00000000143d4f: add [rax+0xca], bh; lea rdi, [rip+0xacd74]; syscall; 
0x00000000143bed: add [rax+0xca], bh; lea rdi, [rip+0xaced6]; syscall; 
0x000000001439b0: add [rax+0xca], bh; lea rdi, [rip+0xad113]; syscall; 
0x00000000142f59: add [rax+0xca], bh; lea rdi, [rip+0xadab2]; syscall; 
0x00000000142dd7: add [rax+0xca], bh; lea rdi, [rip+0xadc34]; syscall; 
0x00000000142d9d: add [rax+0xca], bh; lea rdi, [rip+0xadc6e]; syscall; 
0x00000000142c85: add [rax+0xca], bh; lea rdi, [rip+0xadd86]; syscall; 
0x00000000142441: add [rax+0xca], bh; lea rdi, [rip+0xae5ca]; syscall; 
0x00000000142379: add [rax+0xca], bh; lea rdi, [rip+0xae692]; syscall; 
0x0000000014225d: add [rax+0xca], bh; lea rdi, [rip+0xae7ae]; syscall; 
0x00000000140e8a: add [rax+0xca], bh; lea rdi, [rip+0xaf929]; syscall; 
0x0000000013d709: add [rax+0xca], bh; lea rdi, [rip+0xb2e02]; syscall; 
0x0000000013d40d: add [rax+0xca], bh; lea rdi, [rip+0xb30fe]; syscall; 
0x000000001390dd: add [rax+0xca], bh; lea rdi, [rip+0xb741a]; syscall; 
0x00000000138b5d: add [rax+0xca], bh; lea rdi, [rip+0xb797e]; syscall; 
0x00000000138999: add [rax+0xca], bh; lea rdi, [rip+0xb7afa]; syscall; 
0x000000001388d1: add [rax+0xca], bh; lea rdi, [rip+0xb7b62]; syscall; 
0x00000000138791: add [rax+0xca], bh; lea rdi, [rip+0xb7ca2]; syscall; 
0x000000001386d9: add [rax+0xca], bh; lea rdi, [rip+0xb7d5a]; syscall; 
0x00000000137fe9: add [rax+0xca], bh; lea rdi, [rip+0xb8442]; syscall; 
0x00000000137cc9: add [rax+0xca], bh; lea rdi, [rip+0xb8762]; syscall; 
0x00000000137b0d: add [rax+0xca], bh; lea rdi, [rip+0xb891e]; syscall; 
0x00000000134781: add [rax+0xca], bh; lea rdi, [rip+0xbbb3a]; syscall; 
0x00000000134641: add [rax+0xca], bh; lea rdi, [rip+0xbbc7a]; syscall; 
0x00000000134589: add [rax+0xca], bh; lea rdi, [rip+0xbbd32]; syscall; 
0x000000001344a9: add [rax+0xca], bh; lea rdi, [rip+0xbbe0a]; syscall; 
0x00000000133fdd: add [rax+0xca], bh; lea rdi, [rip+0xbc25e]; syscall; 
0x00000000133a0d: add [rax+0xca], bh; lea rdi, [rip+0xbc7ce]; syscall; 
0x000000001334ed: add [rax+0xca], bh; lea rdi, [rip+0xbcca6]; syscall; 
0x00000000133321: add [rax+0xca], bh; lea rdi, [rip+0xbce32]; syscall; 
0x000000001331e1: add [rax+0xca], bh; lea rdi, [rip+0xbcf72]; syscall; 
0x00000000133129: add [rax+0xca], bh; lea rdi, [rip+0xbd02a]; syscall; 
0x00000000133049: add [rax+0xca], bh; lea rdi, [rip+0xbd102]; syscall; 
0x00000000132c2d: add [rax+0xca], bh; lea rdi, [rip+0xbd4d6]; syscall; 
0x00000000132611: add [rax+0xca], bh; lea rdi, [rip+0xbda92]; syscall; 
0x000000001324b9: add [rax+0xca], bh; lea rdi, [rip+0xbdbea]; syscall; 
0x000000001323f9: add [rax+0xca], bh; lea rdi, [rip+0xbdcaa]; syscall; 
0x00000000132311: add [rax+0xca], bh; lea rdi, [rip+0xbdd8a]; syscall; 
0x0000000013222d: add [rax+0xca], bh; lea rdi, [rip+0xbde36]; syscall; 
0x00000000131bcd: add [rax+0xca], bh; lea rdi, [rip+0xbe456]; syscall; 
0x000000001319c1: add [rax+0xca], bh; lea rdi, [rip+0xbe61a]; syscall; 
0x00000000131869: add [rax+0xca], bh; lea rdi, [rip+0xbe772]; syscall; 
0x000000001317a9: add [rax+0xca], bh; lea rdi, [rip+0xbe832]; syscall; 
0x000000001316c1: add [rax+0xca], bh; lea rdi, [rip+0xbe912]; syscall; 
0x00000000130aad: add [rax+0xca], bh; lea rdi, [rip+0xbf4ae]; syscall; 
0x0000000013083d: add [rax+0xca], bh; lea rdi, [rip+0xbf6de]; syscall; 
0x000000001300bd: add [rax+0xca], bh; lea rdi, [rip+0xbfdfe]; syscall; 
0x000000001265c1: add [rax+0xca], bh; lea rdi, [rip+0xc9862]; syscall; 
0x00000000126481: add [rax+0xca], bh; lea rdi, [rip+0xc99a2]; syscall; 
0x000000001263c9: add [rax+0xca], bh; lea rdi, [rip+0xc9a5a]; syscall; 
0x00000000125fef: add [rax+0xca], bh; lea rdi, [rip+0xc9e2c]; syscall; 
0x00000000125ded: add [rax+0xca], bh; lea rdi, [rip+0xc9ff6]; syscall; 
0x00000000125c0d: add [rax+0xca], bh; lea rdi, [rip+0xca18e]; syscall; 
0x00000000125a49: add [rax+0xca], bh; lea rdi, [rip+0xca30a]; syscall; 
0x00000000125979: add [rax+0xca], bh; lea rdi, [rip+0xca386]; syscall; 
0x000000001258af: add [rax+0xca], bh; lea rdi, [rip+0xca450]; syscall; 
0x0000000012581a: add [rax+0xca], bh; lea rdi, [rip+0xca4e5]; syscall; 
0x00000000124b11: add [rax+0xca], bh; lea rdi, [rip+0xcb1ba]; syscall; 
0x000000001249d1: add [rax+0xca], bh; lea rdi, [rip+0xcb2fa]; syscall; 
0x00000000124919: add [rax+0xca], bh; lea rdi, [rip+0xcb3b2]; syscall; 
0x0000000012431f: add [rax+0xca], bh; lea rdi, [rip+0xcb9a4]; syscall; 
0x0000000012411d: add [rax+0xca], bh; lea rdi, [rip+0xcbb4e]; syscall; 
0x00000000123f3d: add [rax+0xca], bh; lea rdi, [rip+0xcbcc6]; syscall; 
0x00000000123d79: add [rax+0xca], bh; lea rdi, [rip+0xcbe22]; syscall; 
0x00000000118709: add [rax+0xca], bh; lea rdi, [rip+0xd713a]; syscall; 
0x000000001185ed: add [rax+0xca], bh; lea rdi, [rip+0xd7256]; syscall; 
0x0000000011818d: add [rax+0xca], bh; lea rdi, [rip+0xd76b6]; syscall; 
0x00000000117c52: add [rax+0xca], bh; lea rdi, [rip+0xd7bf1]; syscall; 
0x00000000106abd: add [rax+0xca], bh; lea rdi, [rip+0xe8af6]; syscall; 
0x000000000229f5: add [rax+0xca], bh; syscall; 
0x000000000946ac: add [rax+0xca], bh; xor r10, r10; add rdi, 0x308; mov esi, 0x80; syscall; 
0x0000000004318e: add [rax+0xd], bh; syscall; 
0x000000000dd2b2: add [rax+0xe6], bh; syscall; 
0x00000000043033: add [rax+0xe], bh; syscall; 
0x00000000092a43: add [rax+0xf740a39], eax; cmp rcx, rsi; ja short 0x0000000000092a40; lea eax, [rdx+rdi]; ret; 
0x00000000034178: add [rax+0xf], al; mov bh, 0xc0; ret; 
0x000000000fcf78: add [rax+0xf], al; mov dh, 0xf6; movsxd rax, [rdx+rsi*4]; add rax, rdx; notrack jmp rax; 
0x000000000b1939: add [rax+0xf], cl; mov ebp, 0xf80148c0; ret; 
0x000000001561ff: add [rax+0xf], cl; mov edi, 0xe6894806; mov [rsp], rax; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x00000000057d8f: add [rax+0xf], cl; mov edx, 0x894830e8; or [r8+0x2], r15b; ret; 
0x0000000012b33f: add [rax+0xf], cl; mov esi, 0x83480143; ret; 
0x0000000012a4cf: add [rax+0xf], cl; mov esi, 0x8348014b; ret; 
0x000000000e0977: add [rax+0xf], cl; mov esi, 0x83480153; ret; 
0x0000000015631f: add [rax+0xf], cl; mov esi, 0xe68948c5; mov [rsp], rax; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x000000000df340: add [rax+0xf], cl; ret; 
0x000000000941ba: add [rax+0xf], cl; shl byte ptr [rcx], 0x1; ror byte ptr [rax+0x39], 0xfa; setae al; ret; 
0x000000000e5047: add [rax+0xfc17], bh; ret; 
0x000000000e5046: add [rax+0xfc17], dil; ret; 
0x000000000e5177: add [rax+0xff], bh; ret; 
0x000000000e5176: add [rax+0xff], dil; ret; 
0x000000000a28be: add [rax+rax*8+0x3d3cd074], eax; mov eax, 0x0; cmovne r8, rax; mov rax, r8; ret; 
0x000000000e8210: add [rax+rax*8-0x3fce538b], eax; ret; 
0x000000000ea3bf: add [rax+rax*8-0x49f0e38c], al; add ecx, [rax-0x77]; fimul st, dword ptr [rax-0x7d]; ret; 
0x000000000a8747: add [rax+rax*8-0x76b2d38c], al; ret; 
0x0000000005b3f4: add [rax+rax*8-0x7cb6f78c], eax; ret; 
0x000000001381b4: add [rax+rax], al; add [rcx+rcx*4-0x2], cl; mov rdi, r12; call rbp; 
0x00000000134949: add [rax+rax], al; add [rcx+rcx*4-0x6], cl; mov rsi, r14; mov rdi, rbx; call rax; 
0x00000000130a3c: add [rax+rax], al; add al, ch; ret far; 
0x00000000114301: add [rax+rax], cl; add [rax], al; mov eax, 0xffffffff; ret; 
0x000000000980cc: add [rax+rax], cl; add [rax], al; mov rax, r8; ret; 
0x000000001197c2: add [rax+rax], cl; add [rax], al; xor eax, eax; pop rbx; ret; 
0x0000000009e98d: add [rax+rax], cl; add [rax], al; xor eax, eax; ret; 
0x000000000cb843: add [rax+rax], cl; add [rdi+rax*4-0x17], dh; hlt; jle short 0x00000000000cb842; jmp qword ptr [rsi-0x70]; 
0x00000000113900: add [rax+rax], edx; mov eax, r8d; mov ebx, fs:[r10]; syscall; 
0x000000000cf645: add [rax+rbp*2+0x48], dh; lea eax, [rdi-0x10]; ret; 
0x0000000015f775: add [rax+rbx+0x48], dh; mov eax, [rip+0x8c6e1]; mov rdi, [rsp]; mov rax, [rax+0x1d8]; jmp rax; 
0x0000000002443a: add [rax+rcx*2+0x3], ah; add al, 0x25; add [rax], al; add [rax], al; ret; 
0x000000001983f3: add [rax+rcx*2-0x75], ah; add [rax-0x7d], cl; ret; 
0x000000000472e4: add [rax+rcx*2-0x77], ah; adc ecx, [rax-0x75]; jge short 0x00000000000472f5; call rax; 
0x0000000002ce41: add [rax+rcx*4-0x7c], eax; adc al, 0x85; add [rax], al; add [rax+0x39], cl; ret far; 
0x00000000055874: add [rax+rcx+0x48], esi; mov eax, [rax+rcx*8]; mov [r9+rcx*8], rax; xor eax, eax; ret; 
0x0000000005562c: add [rax+rcx+0x49], esi; mov edx, [rax+rax*8]; mov [rsi+rax*8], rdx; xor eax, eax; ret; 
0x000000000ee48c: add [rax+rdi*4-0x7d], esi; jrcxz 0x00000000000ee49a; je short 0x00000000000ee427; pop rbx; ret; 
0x0000000019742b: add [rax+rdi*8], esi; call qword ptr [rax+0x30658b4c]; 
0x000000000a5682: add [rax+rdi+0x5c], eax; syscall; 
0x0000000009c29b: add [rax+rdi-0x3e], eax; jne short 0x000000000009c288; sub rax, 0x10; ret; 
0x000000000a2085: add [rax+rdx+0x5b], dh; pop rbp; pop r12; ret; 
0x0000000005c77a: add [rax-0x13b43], al; jmp qword ptr [rsi+0xf]; 
0x000000000b76df: add [rax-0x177cb6c9], cl; add [rax-0x73], ecx; jg short 0x00000000000b76eb; jne 0x00000000000b7fa0; ret; 
0x000000000ec42f: add [rax-0x178ad207], al; mov byte ptr [rdi+0x8], 0x16; mov eax, 0x1; ret; 
0x0000000013bce5: add [rax-0x1], bh; cmove eax, edx; ret; 
0x0000000004656d: add [rax-0x1], bh; pop rbp; pop r12; pop r13; ret; 
0x000000000412ed: add [rax-0x1], bh; pop rbp; ret; 
0x00000000024725: add [rax-0x1], bh; ret; 
0x00000000090d6e: add [rax-0x1], dil; ret; 
0x00000000043bbd: add [rax-0x2d], cl; loopne 0x0000000000043c0a; or [rdi], eax; xor eax, eax; ret; 
0x0000000002410e: add [rax-0x2f7600cf], dl; syscall; 
0x00000000042394: add [rax-0x3991f09a], al; ret; 
0x0000000013cca4: add [rax-0x39], cl; add al, 0x24; add [rax], al; add [rax], al; call rax; 
0x0000000009396e: add [rax-0x39], cl; add eax, 0x15ae4e; add [rax], al; add [rax], al; ret; 
0x00000000121cce: add [rax-0x39], cl; add eax, 0xca686; add [rax], al; add [rax], al; ret; 
0x00000000121ca5: add [rax-0x39], cl; add eax, 0xca6af; add [rax], al; add [rax], al; ret; 
0x00000000121c4e: add [rax-0x39], cl; add eax, 0xca706; add [rax], al; add [rax], al; ret; 
0x00000000049d5f: add [rax-0x39], cl; ret; 
0x000000000cfb6f: add [rax-0x39], cl; rol byte ptr [rbx], 0x0; add [rax], al; ret; 
0x000000000cfbaf: add [rax-0x39], cl; rol byte ptr [rdi], 0x0; add [rax], al; ret; 
0x000000000cfb5f: add [rax-0x39], cl; rol byte ptr [rdx], 0x0; add [rax], al; ret; 
0x000000000cfb9f: add [rax-0x39], cl; rol byte ptr [rsi], 0x0; add [rax], al; ret; 
0x000000000430be: add [rax-0x39], cl; ror byte ptr [rdi], 0x0; add [rax], al; syscall; 
0x000000000b7e8e: add [rax-0x3c00a877], dl; nop [rax+rax]; nop; mov [rdi], edx; ret; 
0x0000000012fb2d: add [rax-0x3c38baf1], al; nop [rax+rax]; mov eax, edi; and eax, 0xffffff; ret; 
0x0000000012fbbe: add [rax-0x3c38baf1], al; nop [rax]; mov eax, edi; shr eax, 0x18; ret; 
0x00000000190c9e: add [rax-0x3cf872b8], dl; nop [rax+rax]; nop; lea rax, [rdi+0x1]; ret; 
0x00000000116787: add [rax-0x3d7cb7fe], cl; add [rax-0x7d], ecx; ret; 
0x00000000041ba9: add [rax-0x3f000001], al; shr eax, 0x1f; ret; 
0x000000001886ee: add [rax-0x3f43f00d], dl; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x000000000240dc: add [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x00000000026f72: add [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; jmp rax; 
0x0000000007404e: add [rax-0x3f], cl; loop 0x0000000000074055; lea rcx, [rbx+rdx]; add rdx, r15; call qword ptr [rax+r9*8]; 
0x0000000007a6fe: add [rax-0x3f], cl; loop 0x000000000007a705; lea rcx, [rbx+rdx]; add rdx, r15; call qword ptr [rax+r9*8]; 
0x00000000023a4a: add [rax-0x3f], cl; rcl byte ptr [rcx], 0x48; mov [rip+0x1cd8d2], eax; ret; 
0x0000000007e948: add [rax-0x3f], cl; stc; add cl, [rcx+0x29]; ret far; 
0x00000000113784: add [rax-0x3fcef877], al; ret; 
0x00000000057c3f: add [rax-0x3ffe], bh; sub eax, ecx; mov [rdx], eax; mov eax, 0x1; ret; 
0x000000000d6f0f: add [rax-0x41], cl; ret; 
0x00000000057c58: add [rax-0x47ff76b7], al; add [rax], eax; add [rax], al; mov dword ptr [rdx], 0xffffc002; ret; 
0x000000001970e7: add [rax-0x48], cl; add [rax], al; add [rax], al; add [rax-0x7ab70000], al; ret; 
0x0000000003178f: add [rax-0x49f000b9], ecx; push rbx; add [rax-0x7d], ecx; ret; 
0x000000000776cd: add [rax-0x50743], eax; jmp qword ptr [rax]; 
0x0000000010dcae: add [rax-0x5e1f00d], dl; mov eax, 0x102; syscall; 
0x0000000010fd2e: add [rax-0x5e1f00d], dl; mov eax, 0x107; syscall; 
0x0000000010fc6e: add [rax-0x5e1f00d], dl; mov eax, 0x10a; syscall; 
0x0000000011fe1e: add [rax-0x5e1f00d], dl; mov eax, 0x110; syscall; 
0x0000000011fe7e: add [rax-0x5e1f00d], dl; mov eax, 0x11b; syscall; 
0x0000000011faee: add [rax-0x5e1f00d], dl; mov eax, 0x123; syscall; 
0x0000000010e91e: add [rax-0x5e1f00d], dl; mov eax, 0x124; syscall; 
0x0000000010e97e: add [rax-0x5e1f00d], dl; mov eax, 0x125; syscall; 
0x0000000011fc0e: add [rax-0x5e1f00d], dl; mov eax, 0x126; syscall; 
0x0000000011ff0e: add [rax-0x5e1f00d], dl; mov eax, 0x12c; syscall; 
0x0000000011fa2e: add [rax-0x5e1f00d], dl; mov eax, 0x131; syscall; 
0x0000000011530e: add [rax-0x5e1f00d], dl; mov eax, 0x132; syscall; 
0x0000000012002e: add [rax-0x5e1f00d], dl; mov eax, 0x14a; syscall; 
0x0000000012005e: add [rax-0x5e1f00d], dl; mov eax, 0x14b; syscall; 
0x0000000010e94e: add [rax-0x5e1f00d], dl; mov eax, 0x16; syscall; 
0x0000000010273e: add [rax-0x5e1f00d], dl; mov eax, 0x18; syscall; 
0x00000000118ace: add [rax-0x5e1f00d], dl; mov eax, 0x1b; syscall; 
0x00000000118a9e: add [rax-0x5e1f00d], dl; mov eax, 0x1c; syscall; 
0x0000000010e8be: add [rax-0x5e1f00d], dl; mov eax, 0x20; syscall; 
0x0000000010e8ee: add [rax-0x5e1f00d], dl; mov eax, 0x21; syscall; 
0x000000000e2dbe: add [rax-0x5e1f00d], dl; mov eax, 0x25; syscall; 
0x000000000d420e: add [rax-0x5e1f00d], dl; mov eax, 0x26; syscall; 
0x000000001207ce: add [rax-0x5e1f00d], dl; mov eax, 0x29; syscall; 
0x0000000012018e: add [rax-0x5e1f00d], dl; mov eax, 0x31; syscall; 
0x0000000012028e: add [rax-0x5e1f00d], dl; mov eax, 0x33; syscall; 
0x0000000012025e: add [rax-0x5e1f00d], dl; mov eax, 0x34; syscall; 
0x0000000011336e: add [rax-0x5e1f00d], dl; mov eax, 0x3; syscall; 
0x0000000010ea3e: add [rax-0x5e1f00d], dl; mov eax, 0x50; syscall; 
0x0000000010ea6e: add [rax-0x5e1f00d], dl; mov eax, 0x51; syscall; 
0x0000000010fd5e: add [rax-0x5e1f00d], dl; mov eax, 0x54; syscall; 
0x0000000010fc9e: add [rax-0x5e1f00d], dl; mov eax, 0x59; syscall; 
0x0000000010dbbe: add [rax-0x5e1f00d], dl; mov eax, 0x5b; syscall; 
0x0000000010f38e: add [rax-0x5e1f00d], dl; mov eax, 0x5c; syscall; 
0x0000000010f3be: add [rax-0x5e1f00d], dl; mov eax, 0x5d; syscall; 
0x0000000010f3ee: add [rax-0x5e1f00d], dl; mov eax, 0x5e; syscall; 
0x000000000e2b9e: add [rax-0x5e1f00d], dl; mov eax, 0x64; syscall; 
0x0000000011fc6e: add [rax-0x5e1f00d], dl; mov eax, 0x67; syscall; 
0x000000000e43ce: add [rax-0x5e1f00d], dl; mov eax, 0x6d; syscall; 
0x000000000e43fe: add [rax-0x5e1f00d], dl; mov eax, 0x6f; syscall; 
0x000000000e445e: add [rax-0x5e1f00d], dl; mov eax, 0x70; syscall; 
0x000000000e448e: add [rax-0x5e1f00d], dl; mov eax, 0x76; syscall; 
0x000000000e44be: add [rax-0x5e1f00d], dl; mov eax, 0x78; syscall; 
0x0000000011f21e: add [rax-0x5e1f00d], dl; mov eax, 0x7b; syscall; 
0x0000000011f9fe: add [rax-0x5e1f00d], dl; mov eax, 0x7e; syscall; 
0x0000000011fe4e: add [rax-0x5e1f00d], dl; mov eax, 0x86; syscall; 
0x0000000010da5e: add [rax-0x5e1f00d], dl; mov eax, 0x8a; syscall; 
0x000000001026ae: add [rax-0x5e1f00d], dl; mov eax, 0x8f; syscall; 
0x000000001026de: add [rax-0x5e1f00d], dl; mov eax, 0x90; syscall; 
0x0000000010270e: add [rax-0x5e1f00d], dl; mov eax, 0x91; syscall; 
0x0000000010276e: add [rax-0x5e1f00d], dl; mov eax, 0x92; syscall; 
0x0000000010279e: add [rax-0x5e1f00d], dl; mov eax, 0x93; syscall; 
0x000000001027ce: add [rax-0x5e1f00d], dl; mov eax, 0x94; syscall; 
0x00000000118b5e: add [rax-0x5e1f00d], dl; mov eax, 0x96; syscall; 
0x00000000118b8e: add [rax-0x5e1f00d], dl; mov eax, 0x97; syscall; 
0x00000000118bbe: add [rax-0x5e1f00d], dl; mov eax, 0x98; syscall; 
0x0000000011f95e: add [rax-0x5e1f00d], dl; mov eax, 0x9a; syscall; 
0x0000000011fd2e: add [rax-0x5e1f00d], dl; mov eax, 0x9b; syscall; 
0x0000000011518e: add [rax-0x5e1f00d], dl; mov eax, 0xa1; syscall; 
0x0000000011524e: add [rax-0x5e1f00d], dl; mov eax, 0xa2; syscall; 
0x0000000011567e: add [rax-0x5e1f00d], dl; mov eax, 0xa7; syscall; 
0x000000001156ae: add [rax-0x5e1f00d], dl; mov eax, 0xa8; syscall; 
0x000000001189ce: add [rax-0x5e1f00d], dl; mov eax, 0xa; syscall; 
0x0000000011f03e: add [rax-0x5e1f00d], dl; mov eax, 0xac; syscall; 
0x0000000011fa5e: add [rax-0x5e1f00d], dl; mov eax, 0xae; syscall; 
0x0000000011fa8e: add [rax-0x5e1f00d], dl; mov eax, 0xb0; syscall; 
0x0000000011899e: add [rax-0x5e1f00d], dl; mov eax, 0xb; syscall; 
0x0000000012008e: add [rax-0x5e1f00d], dl; mov eax, 0xba; syscall; 
0x0000000011f1be: add [rax-0x5e1f00d], dl; mov eax, 0xbb; syscall; 
0x0000000011cf3e: add [rax-0x5e1f00d], dl; mov eax, 0xc6; syscall; 
0x0000000011ce1e: add [rax-0x5e1f00d], dl; mov eax, 0xc7; syscall; 
0x0000000011fabe: add [rax-0x5e1f00d], dl; mov eax, 0xd5; syscall; 
0x0000000011f98e: add [rax-0x5e1f00d], dl; mov eax, 0xe4; syscall; 
0x0000000011fbde: add [rax-0x5e1f00d], dl; mov eax, 0xfd; syscall; 
0x0000000011fc3e: add [rax-0x5e1f00d], dl; mov eax, 0xff; syscall; 
0x0000000004342e: add [rax-0x5e1f00d], dl; mov esi, 0x8; mov eax, 0x7f; syscall; 
0x0000000010f41e: add [rax-0x5e1f00d], dl; mov r10, rcx; mov eax, 0x104; syscall; 
0x0000000010fc0e: add [rax-0x5e1f00d], dl; mov r10, rcx; mov eax, 0x109; syscall; 
0x0000000010fcce: add [rax-0x5e1f00d], dl; mov r10, rcx; mov eax, 0x10b; syscall; 
0x0000000011feae: add [rax-0x5e1f00d], dl; mov r10, rcx; mov eax, 0x11e; syscall; 
0x0000000011ff3e: add [rax-0x5e1f00d], dl; mov r10, rcx; mov eax, 0x12f; syscall; 
0x0000000011ff9e: add [rax-0x5e1f00d], dl; mov r10, rcx; mov eax, 0x136; syscall; 
0x000000001207fe: add [rax-0x5e1f00d], dl; mov r10, rcx; mov eax, 0x35; syscall; 
0x000000001202be: add [rax-0x5e1f00d], dl; mov r10, rcx; mov eax, 0x37; syscall; 
0x0000000011fd5e: add [rax-0x5e1f00d], dl; mov r10, rcx; mov eax, 0x9d; syscall; 
0x0000000011fc9e: add [rax-0x5e1f00d], dl; mov r10, rcx; mov eax, 0xa5; syscall; 
0x0000000011fb7e: add [rax-0x5e1f00d], dl; mov r10, rcx; mov eax, 0xaf; syscall; 
0x0000000011cfce: add [rax-0x5e1f00d], dl; mov r10, rcx; mov eax, 0xbc; syscall; 
0x0000000011cf6e: add [rax-0x5e1f00d], dl; mov r10, rcx; mov eax, 0xbd; syscall; 
0x0000000011ce4e: add [rax-0x5e1f00d], dl; mov r10, rcx; mov eax, 0xbe; syscall; 
0x0000000011cede: add [rax-0x5e1f00d], dl; mov r10, rcx; mov eax, 0xc0; syscall; 
0x00000000118afe: add [rax-0x5e1f00d], dl; mov r10, rcx; mov eax, 0xd8; syscall; 
0x0000000011fb1e: add [rax-0x5e1f00d], dl; mov r10, rcx; mov eax, 0xe9; syscall; 
0x00000000160bce: add [rax-0x5e1f00d], dl; mov rax, [rip+0x8b295]; mov dword ptr fs:[rax], 0x26; xor eax, eax; ret; 
0x000000001200ce: add [rax-0x5e1f00d], dl; mov rax, [rip+0xcbd95]; mov dword ptr fs:[rax], 0x26; mov rax, 0xffffffffffffffff; ret; 
0x0000000010dbee: add [rax-0x5e1f00d], dl; mov rax, [rip+0xde275]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x00000000042a4e: add [rax-0x5e1f00d], dl; movmskps eax, xmm0; and eax, 0x8; ret; 
0x0000000004250e: add [rax-0x5e1f00d], dl; pmovmskb eax, xmm0; and eax, 0x8; ret; 
0x0000000011f7be: add [rax-0x5e1f00d], dl; test edx, edx; je short 0x000000000011f7f8; mov eax, 0x145; syscall; 
0x00000000094d33: add [rax-0x68], cl; mov [rbx+0x10], rax; xor eax, eax; pop rbx; ret; 
0x000000000bdfbc: add [rax-0x73], cl; adc eax, 0x116fc; cmovne rax, rdx; ret; 
0x0000000009f11c: add [rax-0x73], cl; adc eax, 0x12e7c; cmovne rax, rdx; ret; 
0x0000000009f72c: add [rax-0x73], cl; adc eax, 0x1448c; cmovne rax, rdx; ret; 
0x000000000a0a2a: add [rax-0x73], cl; adc eax, 0x1b0be; cmove rax, rdx; ret; 
0x000000000a06ba: add [rax-0x73], cl; adc eax, 0x1b40e; cmove rax, rdx; ret; 
0x000000000a055a: add [rax-0x73], cl; adc eax, 0x1b58e; cmove rax, rdx; ret; 
0x00000000194b62: add [rax-0x73], cl; adc eax, 0x29ae6; movsxd rax, [rdx+rax*4]; add rdx, rax; notrack jmp rdx; 
0x0000000012da64: add [rax-0x73], cl; adc eax, 0x3d894; cmovne rax, rdx; ret; 
0x0000000012d8e4: add [rax-0x73], cl; adc eax, 0x3da34; cmovne rax, rdx; ret; 
0x0000000012d9a4: add [rax-0x73], cl; adc eax, 0x40464; cmovne rax, rdx; ret; 
0x0000000012da43: add [rax-0x73], cl; adc eax, 0x5db05; cmove rax, rdx; ret; 
0x0000000012d983: add [rax-0x73], cl; adc eax, 0x5dbe5; cmove rax, rdx; ret; 
0x0000000012d8c3: add [rax-0x73], cl; adc eax, 0x5dca5; cmove rax, rdx; ret; 
0x0000000012da8e: add [rax-0x73], cl; adc eax, 0x6283a; cmove rax, rdx; ret; 
0x0000000012d9ce: add [rax-0x73], cl; adc eax, 0x6291a; cmove rax, rdx; ret; 
0x0000000012d90e: add [rax-0x73], cl; adc eax, 0x629da; cmove rax, rdx; ret; 
0x0000000012db4e: add [rax-0x73], cl; adc eax, 0x62d2a; cmove rax, rdx; ret; 
0x0000000015309a: add [rax-0x73], cl; adc eax, 0x9dd9e; mov fs:[rax], rdx; ret; 
0x0000000014867f: add [rax-0x73], cl; adc eax, 0xa34d9; jmp qword ptr [rdx+rax*8]; 
0x000000001092d2: add [rax-0x73], cl; adc eax, 0xa8dc6; movsxd rax, [rdx+rbx*4]; add rax, rdx; notrack jmp rax; 
0x0000000010108a: add [rax-0x73], cl; adc eax, 0xb076e; movsxd rax, [rdx+rdi*4]; add rax, rdx; notrack jmp rax; 
0x0000000009f1cc: add [rax-0x73], cl; adc eax, 0xc41bc; cmovne rax, rdx; ret; 
0x0000000009f796: add [rax-0x73], cl; adc eax, 0xc4e62; cmovne rax, rdx; ret; 
0x000000000ea589: add [rax-0x73], cl; adc eax, 0xc6803; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000000e8850: add [rax-0x73], cl; adc eax, 0xc83cc; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000000a09e4: add [rax-0x73], cl; adc eax, 0xca944; cmovne rax, rdx; ret; 
0x000000000a0674: add [rax-0x73], cl; adc eax, 0xcac94; cmovne rax, rdx; ret; 
0x000000000a0514: add [rax-0x73], cl; adc eax, 0xcd904; cmovne rax, rdx; ret; 
0x000000000a08bf: add [rax-0x73], cl; adc eax, 0xd0099; cmovne rax, rdx; ret; 
0x000000000a081f: add [rax-0x73], cl; adc eax, 0xd0119; cmovne rax, rdx; ret; 
0x000000000a090f: add [rax-0x73], cl; adc eax, 0xd21a9; cmovne rax, rdx; ret; 
0x000000000a086f: add [rax-0x73], cl; adc eax, 0xd2229; cmovne rax, rdx; ret; 
0x000000000bcd8d: add [rax-0x73], cl; adc eax, 0xd575b; cmovne rax, rdx; ret; 
0x0000000009f24c: add [rax-0x73], cl; adc eax, 0xd5dbc; cmovne rax, rdx; ret; 
0x0000000009f7fc: add [rax-0x73], cl; adc eax, 0xd6fbc; cmovne rax, rdx; ret; 
0x000000000a076c: add [rax-0x73], cl; adc eax, 0xd8bcc; cmovne rax, rdx; ret; 
0x000000000a07cc: add [rax-0x73], cl; adc eax, 0xda37c; cmovne rax, rdx; ret; 
0x000000000a09c3: add [rax-0x73], cl; adc eax, 0xeabb5; cmove rax, rdx; ret; 
0x000000000a0653: add [rax-0x73], cl; adc eax, 0xeaf05; cmove rax, rdx; ret; 
0x000000000a04f3: add [rax-0x73], cl; adc eax, 0xeb085; cmove rax, rdx; ret; 
0x000000000a0a0e: add [rax-0x73], cl; adc eax, 0xef8ea; cmove rax, rdx; ret; 
0x000000000a069e: add [rax-0x73], cl; adc eax, 0xefc3a; cmove rax, rdx; ret; 
0x000000000a053e: add [rax-0x73], cl; adc eax, 0xefdba; cmove rax, rdx; ret; 
0x000000000a05fe: add [rax-0x73], cl; adc eax, 0xf028a; cmove rax, rdx; ret; 
0x000000000a047d: add [rax-0x73], cl; adc eax, 0xf08fb; cmovne rax, rdx; ret; 
0x0000000009f16f: add [rax-0x73], cl; adc eax, 0xf18e9; cmovne rax, rdx; ret; 
0x000000000bd059: add [rax-0x73], cl; add [rbp+rcx*4+0x4c], rcx; and al, 0x28; call rbx; 
0x000000000bd1b3: add [rax-0x73], cl; add al, 0x4c; lea ecx, [rsp+0x18]; call rbx; 
0x000000000bd5cc: add [rax-0x73], cl; add al, 0x4c; lea ecx, [rsp+0x20]; call rbx; 
0x000000000b14ee: add [rax-0x73], cl; add al, 0x7; cmp [rax], sil; cmovne rax, rdx; ret; 
0x00000000190cdf: add [rax-0x73], cl; add al, 0xc3; nop [rax+rax]; lea rax, [rdi+0x5]; ret; 
0x000000000bcd3f: add [rax-0x73], cl; add eax, 0x11389; cmove rax, rdx; ret; 
0x000000000bc87f: add [rax-0x73], cl; add eax, 0x11b79; cmove rax, rdx; ret; 
0x0000000009f83f: add [rax-0x73], cl; add eax, 0x12099; cmove rax, rdx; ret; 
0x0000000009f68f: add [rax-0x73], cl; add eax, 0x12549; cmove rax, rdx; ret; 
0x000000000bca2f: add [rax-0x73], cl; add eax, 0x12699; cmove rax, rdx; ret; 
0x0000000009f6cf: add [rax-0x73], cl; add eax, 0x126a9; cmove rax, rdx; ret; 
0x000000000bcb1f: add [rax-0x73], cl; add eax, 0x12879; cmove rax, rdx; ret; 
0x000000000bc83f: add [rax-0x73], cl; add eax, 0x129c9; cmove rax, rdx; ret; 
0x000000000bc98f: add [rax-0x73], cl; add eax, 0x12f89; cmove rax, rdx; ret; 
0x000000000960e8: add [rax-0x73], cl; add eax, 0x156a90; add rsp, 0x10; pop rbp; ret; 
0x000000000328ef: add [rax-0x73], cl; add eax, 0x181a86; ret; 
0x00000000052a27: add [rax-0x73], cl; add eax, 0x19bc31; mov byte ptr [rax+rdx], 0x0; ret; 
0x00000000047fb3: add [rax-0x73], cl; add eax, 0x1a934b; add rsp, 0x8; ret; 
0x000000000a05d8: add [rax-0x73], cl; add eax, 0x1b940; cmovne rax, rdx; ret; 
0x00000000190cef: add [rax-0x73], cl; add eax, 0x2e6666c3; nop [rax+rax]; lea rax, [rdi+0x6]; ret; 
0x000000000a8bff: add [rax-0x73], cl; add eax, 0x3819; cmove rax, rdx; ret; 
0x0000000012db0d: add [rax-0x73], cl; add eax, 0x5df4b; cmove rax, rdx; ret; 
0x000000000a1caf: add [rax-0x73], cl; add eax, 0xa559; cmove rax, rdx; ret; 
0x000000000a042f: add [rax-0x73], cl; add eax, 0xbaa9; cmove rax, rdx; ret; 
0x00000000119201: add [rax-0x73], cl; add eax, 0xd66b7; add rsp, 0x18; ret; 
0x00000000118cb9: add [rax-0x73], cl; add eax, 0xd6baf; add rsp, 0x8; ret; 
0x00000000115bca: add [rax-0x73], cl; add eax, 0xd9aa6; add rsp, 0x8; ret; 
0x000000000a05bd: add [rax-0x73], cl; add eax, 0xeb4ab; cmove rax, rdx; ret; 
0x000000000a1cef: add [rax-0x73], cl; add eax, 0xf9d9; cmove rax, rdx; ret; 
0x00000000077c18: add [rax-0x73], cl; add eax, 0xffffef23; mov r10, rdx; mov dword ptr [rbp-0x51c], 0x1; jmp rax; 
0x0000000007e1ff: add [rax-0x73], cl; add eax, 0xfffff054; mov r9, rcx; mov dword ptr [rbp-0x510], 0x1; jmp rax; 
0x000000000d1016: add [rax-0x73], cl; add eax, 0xfffffee1; ret; 
0x000000000d1006: add [rax-0x73], cl; add eax, 0xfffffef1; add rsp, 0x58; ret; 
0x000000000d0ef6: add [rax-0x73], cl; add eax, 0xfffffef1; ret; 
0x000000000d0ee6: add [rax-0x73], cl; add eax, 0xffffff01; add rsp, 0x58; ret; 
0x00000000190cbf: add [rax-0x73], cl; add r8b, r11b; nop [rax+rax]; lea rax, [rdi+0x3]; ret; 
0x00000000190ccf: add [rax-0x73], cl; add r8d, r11d; nop [rax+rax]; lea rax, [rdi+0x4]; ret; 
0x000000000cf68f: add [rax-0x73], cl; clc; ret; 
0x000000000cf69f: add [rax-0x73], cl; cld; ret; 
0x000000000e1dd6: add [rax-0x73], cl; cmp eax, 0x10d702; syscall; 
0x000000000e1c96: add [rax-0x73], cl; cmp eax, 0x10d842; syscall; 
0x000000000e1bde: add [rax-0x73], cl; cmp eax, 0x10d8fa; syscall; 
0x000000000e1b02: add [rax-0x73], cl; cmp eax, 0x10d9ce; syscall; 
0x000000000e1932: add [rax-0x73], cl; cmp eax, 0x10db5e; syscall; 
0x000000000e176e: add [rax-0x73], cl; cmp eax, 0x10dcda; syscall; 
0x000000000e13b4: add [rax-0x73], cl; cmp eax, 0x10e03c; syscall; 
0x000000000dfea6: add [rax-0x73], cl; cmp eax, 0x10f4c2; syscall; 
0x000000000dfd66: add [rax-0x73], cl; cmp eax, 0x10f602; syscall; 
0x000000000dfcae: add [rax-0x73], cl; cmp eax, 0x10f6ba; syscall; 
0x000000000df8e2: add [rax-0x73], cl; cmp eax, 0x10fa7e; syscall; 
0x000000000df712: add [rax-0x73], cl; cmp eax, 0x10fc0e; syscall; 
0x000000000df54e: add [rax-0x73], cl; cmp eax, 0x10fd8a; syscall; 
0x000000000ddbb6: add [rax-0x73], cl; cmp eax, 0x10fdc2; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000ddb70: add [rax-0x73], cl; cmp eax, 0x10fe08; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000dd9ce: add [rax-0x73], cl; cmp eax, 0x10ffaa; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000dd99f: add [rax-0x73], cl; cmp eax, 0x10ffd9; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000dd8d6: add [rax-0x73], cl; cmp eax, 0x1100a2; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000dd8ad: add [rax-0x73], cl; cmp eax, 0x1100cb; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000dd3db: add [rax-0x73], cl; cmp eax, 0x11059d; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000dec66: add [rax-0x73], cl; cmp eax, 0x11061a; syscall; 
0x000000000d2bc2: add [rax-0x73], cl; cmp eax, 0x11c5d6; syscall; 
0x000000000d298e: add [rax-0x73], cl; cmp eax, 0x11c80a; syscall; 
0x000000000ca32e: add [rax-0x73], cl; cmp eax, 0x12364a; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000ca14b: add [rax-0x73], cl; cmp eax, 0x12382d; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000ca662: add [rax-0x73], cl; cmp eax, 0x126b46; syscall; 
0x0000000006c674: add [rax-0x73], cl; cmp eax, 0x141690; movsxd rax, [rdi+r12*4]; add rax, rdi; notrack jmp rax; 
0x0000000009f8b1: add [rax-0x73], cl; cmp eax, 0x14f70b; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000009c822: add [rax-0x73], cl; cmp eax, 0x150356; syscall; 
0x0000000009e1ce: add [rax-0x73], cl; cmp eax, 0x150d32; syscall; 
0x0000000009dfee: add [rax-0x73], cl; cmp eax, 0x150f12; syscall; 
0x0000000009de02: add [rax-0x73], cl; cmp eax, 0x1510fe; syscall; 
0x0000000009dd92: add [rax-0x73], cl; cmp eax, 0x15116e; syscall; 
0x0000000009db62: add [rax-0x73], cl; cmp eax, 0x15139e; syscall; 
0x00000000099ac2: add [rax-0x73], cl; cmp eax, 0x1530b6; syscall; 
0x00000000099a62: add [rax-0x73], cl; cmp eax, 0x153116; syscall; 
0x000000000996a2: add [rax-0x73], cl; cmp eax, 0x1534d6; syscall; 
0x00000000099442: add [rax-0x73], cl; cmp eax, 0x153736; syscall; 
0x00000000098dda: add [rax-0x73], cl; cmp eax, 0x153d9e; syscall; 
0x00000000098da2: add [rax-0x73], cl; cmp eax, 0x153dd6; syscall; 
0x0000000009aa72: add [rax-0x73], cl; cmp eax, 0x15440e; syscall; 
0x00000000099fd6: add [rax-0x73], cl; cmp eax, 0x154e9a; syscall; 
0x00000000096043: add [rax-0x73], cl; cmp eax, 0x158e2d; syscall; 
0x00000000096012: add [rax-0x73], cl; cmp eax, 0x158e6e; syscall; 
0x00000000095d92: add [rax-0x73], cl; cmp eax, 0x1590ee; syscall; 
0x0000000009586e: add [rax-0x73], cl; cmp eax, 0x159612; syscall; 
0x00000000094c53: add [rax-0x73], cl; cmp eax, 0x159ba5; syscall; 
0x00000000094a7e: add [rax-0x73], cl; cmp eax, 0x159d7a; syscall; 
0x000000000948e2: add [rax-0x73], cl; cmp eax, 0x159f16; syscall; 
0x00000000093954: add [rax-0x73], cl; cmp eax, 0x15ae64; syscall; 
0x00000000093414: add [rax-0x73], cl; cmp eax, 0x15b3a4; syscall; 
0x00000000093070: add [rax-0x73], cl; cmp eax, 0x15b748; syscall; 
0x00000000092d04: add [rax-0x73], cl; cmp eax, 0x15bab4; syscall; 
0x00000000091680: add [rax-0x73], cl; cmp eax, 0x15d138; syscall; 
0x000000000913c0: add [rax-0x73], cl; cmp eax, 0x15d3f8; syscall; 
0x0000000009104c: add [rax-0x73], cl; cmp eax, 0x15d76c; syscall; 
0x00000000084391: add [rax-0x73], cl; cmp eax, 0x16a3e7; syscall; 
0x00000000083f94: add [rax-0x73], cl; cmp eax, 0x16a7e4; syscall; 
0x00000000083ee9: add [rax-0x73], cl; cmp eax, 0x16a88f; syscall; 
0x00000000082022: add [rax-0x73], cl; cmp eax, 0x16f186; syscall; 
0x000000000610d6: add [rax-0x73], cl; cmp eax, 0x18d672; syscall; 
0x00000000060e52: add [rax-0x73], cl; cmp eax, 0x18d8f2; syscall; 
0x0000000005ec7e: add [rax-0x73], cl; cmp eax, 0x18fabe; syscall; 
0x0000000005eb3e: add [rax-0x73], cl; cmp eax, 0x18fbfe; syscall; 
0x0000000002418b: add [rax-0x73], cl; cmp eax, 0x18fcef; mov rsi, [rax]; xor eax, eax; call qword ptr [rdx+0x1d0]; 
0x00000000054da2: add [rax-0x73], cl; cmp eax, 0x199986; syscall; 
0x00000000054bc2: add [rax-0x73], cl; cmp eax, 0x199b66; syscall; 
0x00000000054692: add [rax-0x73], cl; cmp eax, 0x19a096; syscall; 
0x000000000522a6: add [rax-0x73], cl; cmp eax, 0x19c252; syscall; 
0x0000000005212a: add [rax-0x73], cl; cmp eax, 0x19c3ce; syscall; 
0x000000000520f2: add [rax-0x73], cl; cmp eax, 0x19c406; syscall; 
0x000000000478de: add [rax-0x73], cl; cmp eax, 0x1a6bfa; syscall; 
0x0000000004781e: add [rax-0x73], cl; cmp eax, 0x1a6cba; syscall; 
0x00000000047756: add [rax-0x73], cl; cmp eax, 0x1a6d82; syscall; 
0x0000000004767e: add [rax-0x73], cl; cmp eax, 0x1a6e5a; syscall; 
0x00000000046776: add [rax-0x73], cl; cmp eax, 0x1a750a; syscall; 
0x000000000466b1: add [rax-0x73], cl; cmp eax, 0x1a75cf; syscall; 
0x0000000004650f: add [rax-0x73], cl; cmp eax, 0x1a7771; syscall; 
0x00000000046435: add [rax-0x73], cl; cmp eax, 0x1a784b; syscall; 
0x0000000003859d: add [rax-0x73], cl; cmp eax, 0x1b555b; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003853c: add [rax-0x73], cl; cmp eax, 0x1b55bc; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000384ff: add [rax-0x73], cl; cmp eax, 0x1b5731; syscall; 
0x00000000036b7c: add [rax-0x73], cl; cmp eax, 0x1b707c; syscall; 
0x00000000036588: add [rax-0x73], cl; cmp eax, 0x1b7630; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003651f: add [rax-0x73], cl; cmp eax, 0x1b7699; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000363f0: add [rax-0x73], cl; cmp eax, 0x1b77c8; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000036390: add [rax-0x73], cl; cmp eax, 0x1b7828; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000036282: add [rax-0x73], cl; cmp eax, 0x1b78f6; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000036216: add [rax-0x73], cl; cmp eax, 0x1b7962; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035f7f: add [rax-0x73], cl; cmp eax, 0x1b79f9; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035e73: add [rax-0x73], cl; cmp eax, 0x1b7b05; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035f51: add [rax-0x73], cl; cmp eax, 0x1b7ba7; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035d05: add [rax-0x73], cl; cmp eax, 0x1b7c73; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035e4c: add [rax-0x73], cl; cmp eax, 0x1b7cac; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035cd3: add [rax-0x73], cl; cmp eax, 0x1b7e25; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035902: add [rax-0x73], cl; cmp eax, 0x1b8076; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000359cb: add [rax-0x73], cl; cmp eax, 0x1b81ad; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035929: add [rax-0x73], cl; cmp eax, 0x1b81cf; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035986: add [rax-0x73], cl; cmp eax, 0x1b81f2; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035841: add [rax-0x73], cl; cmp eax, 0x1b830f; syscall; 
0x00000000035824: add [rax-0x73], cl; cmp eax, 0x1b832c; syscall; 
0x0000000003575c: add [rax-0x73], cl; cmp eax, 0x1b83f4; syscall; 
0x000000000345b7: add [rax-0x73], cl; cmp eax, 0x1b9541; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000033ae3: add [rax-0x73], cl; cmp eax, 0x1b9e95; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000033a08: add [rax-0x73], cl; cmp eax, 0x1b9f70; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000033991: add [rax-0x73], cl; cmp eax, 0x1b9fe7; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000338f7: add [rax-0x73], cl; cmp eax, 0x1ba081; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003335d: add [rax-0x73], cl; cmp eax, 0x1ba61b; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000332f3: add [rax-0x73], cl; cmp eax, 0x1ba685; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000330f3: add [rax-0x73], cl; cmp eax, 0x1ba885; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000310c2: add [rax-0x73], cl; cmp eax, 0x1bc8b6; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000030cba: add [rax-0x73], cl; cmp eax, 0x1bccbe; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000030b68: add [rax-0x73], cl; cmp eax, 0x1bce10; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000030a80: add [rax-0x73], cl; cmp eax, 0x1bcef8; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000309f3: add [rax-0x73], cl; cmp eax, 0x1bcf85; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000307be: add [rax-0x73], cl; cmp eax, 0x1bd1ba; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000030776: add [rax-0x73], cl; cmp eax, 0x1bd202; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000026076: add [rax-0x73], cl; cmp eax, 0x1cb132; syscall; 
0x00000000025f0a: add [rax-0x73], cl; cmp eax, 0x1cb29e; syscall; 
0x00000000025dea: add [rax-0x73], cl; cmp eax, 0x1cb3be; syscall; 
0x00000000022845: add [rax-0x73], cl; cmp eax, 0x1cb403; syscall; 
0x0000000019418d: add [rax-0x73], cl; cmp eax, 0x2a48b; movsxd r12, [rdi+r12*4]; add rdi, r12; notrack jmp rdi; 
0x00000000193f74: add [rax-0x73], cl; cmp eax, 0x2a638; movsxd rcx, [rdi+r12*4]; add rcx, rdi; notrack jmp rcx; 
0x000000001987ee: add [rax-0x73], cl; cmp eax, 0x55492; syscall; 
0x000000001989ae: add [rax-0x73], cl; cmp eax, 0x55e4a; syscall; 
0x00000000198cde: add [rax-0x73], cl; cmp eax, 0x57832; syscall; 
0x0000000015e07e: add [rax-0x73], cl; cmp eax, 0x935d2; syscall; 
0x0000000015cf46: add [rax-0x73], cl; cmp eax, 0x9470a; syscall; 
0x0000000015ce66: add [rax-0x73], cl; cmp eax, 0x947ea; syscall; 
0x0000000015cc7e: add [rax-0x73], cl; cmp eax, 0x949d2; syscall; 
0x0000000015cbee: add [rax-0x73], cl; cmp eax, 0x94a62; syscall; 
0x0000000015cb4e: add [rax-0x73], cl; cmp eax, 0x94b02; syscall; 
0x0000000015ca9e: add [rax-0x73], cl; cmp eax, 0x94bb2; syscall; 
0x0000000015c6ce: add [rax-0x73], cl; cmp eax, 0x94f82; syscall; 
0x0000000015243e: add [rax-0x73], cl; cmp eax, 0x9e9aa; syscall; 
0x000000001522de: add [rax-0x73], cl; cmp eax, 0x9eb0a; syscall; 
0x000000001520d2: add [rax-0x73], cl; cmp eax, 0x9ed16; syscall; 
0x00000000151f32: add [rax-0x73], cl; cmp eax, 0x9eeb6; syscall; 
0x00000000151d9e: add [rax-0x73], cl; cmp eax, 0x9f04a; syscall; 
0x00000000151c5e: add [rax-0x73], cl; cmp eax, 0x9f18a; syscall; 
0x00000000151afe: add [rax-0x73], cl; cmp eax, 0x9f2ea; syscall; 
0x000000001519ee: add [rax-0x73], cl; cmp eax, 0x9f3fa; syscall; 
0x0000000014e4de: add [rax-0x73], cl; cmp eax, 0xa2906; syscall; 
0x0000000014c7e6: add [rax-0x73], cl; cmp eax, 0xa453a; syscall; 
0x0000000014c6a6: add [rax-0x73], cl; cmp eax, 0xa467a; syscall; 
0x0000000014c5ee: add [rax-0x73], cl; cmp eax, 0xa4732; syscall; 
0x0000000014c502: add [rax-0x73], cl; cmp eax, 0xa4816; syscall; 
0x0000000014c332: add [rax-0x73], cl; cmp eax, 0xa49b6; syscall; 
0x0000000014c16e: add [rax-0x73], cl; cmp eax, 0xa4b52; syscall; 
0x000000001467d0: add [rax-0x73], cl; cmp eax, 0xaa38c; syscall; 
0x00000000144632: add [rax-0x73], cl; cmp eax, 0xac496; syscall; 
0x000000001442fa: add [rax-0x73], cl; cmp eax, 0xac7ce; syscall; 
0x00000000143f7a: add [rax-0x73], cl; cmp eax, 0xacb4e; syscall; 
0x00000000143d54: add [rax-0x73], cl; cmp eax, 0xacd74; syscall; 
0x00000000143bf2: add [rax-0x73], cl; cmp eax, 0xaced6; syscall; 
0x000000001439b5: add [rax-0x73], cl; cmp eax, 0xad113; syscall; 
0x00000000142f5e: add [rax-0x73], cl; cmp eax, 0xadab2; syscall; 
0x00000000142ddc: add [rax-0x73], cl; cmp eax, 0xadc34; syscall; 
0x00000000142da2: add [rax-0x73], cl; cmp eax, 0xadc6e; syscall; 
0x00000000142c8a: add [rax-0x73], cl; cmp eax, 0xadd86; syscall; 
0x00000000142446: add [rax-0x73], cl; cmp eax, 0xae5ca; syscall; 
0x0000000014237e: add [rax-0x73], cl; cmp eax, 0xae692; syscall; 
0x00000000142262: add [rax-0x73], cl; cmp eax, 0xae7ae; syscall; 
0x00000000140e8f: add [rax-0x73], cl; cmp eax, 0xaf929; syscall; 
0x0000000013d70e: add [rax-0x73], cl; cmp eax, 0xb2e02; syscall; 
0x0000000013d412: add [rax-0x73], cl; cmp eax, 0xb30fe; syscall; 
0x000000001390e2: add [rax-0x73], cl; cmp eax, 0xb741a; syscall; 
0x00000000138b62: add [rax-0x73], cl; cmp eax, 0xb797e; syscall; 
0x0000000013899e: add [rax-0x73], cl; cmp eax, 0xb7afa; syscall; 
0x000000001388d6: add [rax-0x73], cl; cmp eax, 0xb7b62; syscall; 
0x00000000138796: add [rax-0x73], cl; cmp eax, 0xb7ca2; syscall; 
0x000000001386de: add [rax-0x73], cl; cmp eax, 0xb7d5a; syscall; 
0x00000000137fee: add [rax-0x73], cl; cmp eax, 0xb8442; syscall; 
0x00000000137cce: add [rax-0x73], cl; cmp eax, 0xb8762; syscall; 
0x00000000137b12: add [rax-0x73], cl; cmp eax, 0xb891e; syscall; 
0x00000000134786: add [rax-0x73], cl; cmp eax, 0xbbb3a; syscall; 
0x00000000134646: add [rax-0x73], cl; cmp eax, 0xbbc7a; syscall; 
0x0000000013458e: add [rax-0x73], cl; cmp eax, 0xbbd32; syscall; 
0x000000001344ae: add [rax-0x73], cl; cmp eax, 0xbbe0a; syscall; 
0x00000000133fe2: add [rax-0x73], cl; cmp eax, 0xbc25e; syscall; 
0x00000000133a12: add [rax-0x73], cl; cmp eax, 0xbc7ce; syscall; 
0x000000001334f2: add [rax-0x73], cl; cmp eax, 0xbcca6; syscall; 
0x00000000133326: add [rax-0x73], cl; cmp eax, 0xbce32; syscall; 
0x000000001331e6: add [rax-0x73], cl; cmp eax, 0xbcf72; syscall; 
0x0000000013312e: add [rax-0x73], cl; cmp eax, 0xbd02a; syscall; 
0x0000000013304e: add [rax-0x73], cl; cmp eax, 0xbd102; syscall; 
0x00000000132c32: add [rax-0x73], cl; cmp eax, 0xbd4d6; syscall; 
0x00000000132616: add [rax-0x73], cl; cmp eax, 0xbda92; syscall; 
0x000000001324be: add [rax-0x73], cl; cmp eax, 0xbdbea; syscall; 
0x000000001323fe: add [rax-0x73], cl; cmp eax, 0xbdcaa; syscall; 
0x00000000132316: add [rax-0x73], cl; cmp eax, 0xbdd8a; syscall; 
0x00000000132232: add [rax-0x73], cl; cmp eax, 0xbde36; syscall; 
0x00000000131bd2: add [rax-0x73], cl; cmp eax, 0xbe456; syscall; 
0x000000001319c6: add [rax-0x73], cl; cmp eax, 0xbe61a; syscall; 
0x0000000013186e: add [rax-0x73], cl; cmp eax, 0xbe772; syscall; 
0x000000001317ae: add [rax-0x73], cl; cmp eax, 0xbe832; syscall; 
0x000000001316c6: add [rax-0x73], cl; cmp eax, 0xbe912; syscall; 
0x00000000130ab2: add [rax-0x73], cl; cmp eax, 0xbf4ae; syscall; 
0x00000000130842: add [rax-0x73], cl; cmp eax, 0xbf6de; syscall; 
0x000000001300c2: add [rax-0x73], cl; cmp eax, 0xbfdfe; syscall; 
0x000000001265c6: add [rax-0x73], cl; cmp eax, 0xc9862; syscall; 
0x00000000126486: add [rax-0x73], cl; cmp eax, 0xc99a2; syscall; 
0x000000001263ce: add [rax-0x73], cl; cmp eax, 0xc9a5a; syscall; 
0x00000000125ff4: add [rax-0x73], cl; cmp eax, 0xc9e2c; syscall; 
0x00000000125df2: add [rax-0x73], cl; cmp eax, 0xc9ff6; syscall; 
0x00000000125c12: add [rax-0x73], cl; cmp eax, 0xca18e; syscall; 
0x00000000125a4e: add [rax-0x73], cl; cmp eax, 0xca30a; syscall; 
0x0000000012597e: add [rax-0x73], cl; cmp eax, 0xca386; syscall; 
0x000000001258b4: add [rax-0x73], cl; cmp eax, 0xca450; syscall; 
0x0000000012581f: add [rax-0x73], cl; cmp eax, 0xca4e5; syscall; 
0x00000000124b16: add [rax-0x73], cl; cmp eax, 0xcb1ba; syscall; 
0x000000001249d6: add [rax-0x73], cl; cmp eax, 0xcb2fa; syscall; 
0x0000000012491e: add [rax-0x73], cl; cmp eax, 0xcb3b2; syscall; 
0x00000000124324: add [rax-0x73], cl; cmp eax, 0xcb9a4; syscall; 
0x00000000124122: add [rax-0x73], cl; cmp eax, 0xcbb4e; syscall; 
0x00000000123f42: add [rax-0x73], cl; cmp eax, 0xcbcc6; syscall; 
0x00000000123d7e: add [rax-0x73], cl; cmp eax, 0xcbe22; syscall; 
0x0000000011870e: add [rax-0x73], cl; cmp eax, 0xd713a; syscall; 
0x000000001185f2: add [rax-0x73], cl; cmp eax, 0xd7256; syscall; 
0x00000000118192: add [rax-0x73], cl; cmp eax, 0xd76b6; syscall; 
0x00000000117c57: add [rax-0x73], cl; cmp eax, 0xd7bf1; syscall; 
0x00000000106ac2: add [rax-0x73], cl; cmp eax, 0xe8af6; syscall; 
0x00000000054307: add [rax-0x73], cl; dec dword ptr [rax+0x39]; ret; 
0x000000000cf67f: add [rax-0x73], cl; hlt; ret; 
0x00000000089198: add [rax-0x73], cl; je short 0x00000000000891c1; xor [rcx+rcx*4-0x1], cl; call qword ptr [r14+0x90]; 
0x0000000008e940: add [rax-0x73], cl; je short 0x000000000008e969; adc [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x90]; 
0x0000000008efaa: add [rax-0x73], cl; je short 0x000000000008efd3; adc [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x90]; 
0x000000000d0962: add [rax-0x73], cl; mov esp, 0xd024; add [rcx+rcx*4-0x12], cl; call rbp; 
0x00000000190d4f: add [rax-0x73], cl; or al, 0xc3; nop [rax+rax]; lea rax, [rdi+0xd]; ret; 
0x00000000080f0a: add [rax-0x73], cl; or eax, 0x12dbb2; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x00000000080756: add [rax-0x73], cl; or eax, 0x12e122; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x0000000006364c: add [rax-0x73], cl; or eax, 0x149b94; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x00000000063540: add [rax-0x73], cl; or eax, 0x149c38; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x0000000008e5e4: add [rax-0x73], cl; or eax, 0x15a8b4; mov [rdx+0xe0], rcx; pop rbx; ret; 
0x00000000190d5f: add [rax-0x73], cl; or eax, 0x2e6666c3; nop [rax+rax]; lea rax, [rdi+0xe]; ret; 
0x00000000190d0f: add [rax-0x73], cl; or r11b, r8b; nop [rax+rax]; lea rax, [rdi+0x9]; ret; 
0x00000000190d1f: add [rax-0x73], cl; or r11d, r8d; nop [rax+rax]; lea rax, [rdi+0xa]; ret; 
0x00000000190d2f: add [rax-0x73], cl; or r8b, r11b; nop [rax+rax]; lea rax, [rdi+0xb]; ret; 
0x00000000190d3f: add [rax-0x73], cl; or r8d, r11d; nop [rax+rax]; lea rax, [rdi+0xc]; ret; 
0x0000000011a006: add [rax-0x73], cl; push rbx; or [rax-0x7d], cl; ret; 
0x00000000115fb8: add [rax-0x73], cl; push rsi; add [rbp-0x2f], esi; ret; 
0x00000000115fb7: add [rax-0x73], cl; push rsi; add [rbp-0x2f], esi; ret; 
0x000000000fa100: add [rax-0x73], cl; xor eax, 0xb716c; movsxd rax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x000000000bc0d1: add [rax-0x73], cl; xor eax, 0xf35a7; movsxd rax, [rsi+rdi*4]; add rax, rsi; notrack jmp rax; 
0x000000001784ba: add [rax-0x73], ecx; add [rdi], rcx; test [rbx+0x3], ecx; add [rax], al; ret; 
0x000000000b76e5: add [rax-0x73], ecx; jg short 0x00000000000b76eb; jne 0x00000000000b7fa0; ret; 
0x000000000b8dc8: add [rax-0x73], ecx; jg short 0x00000000000b8dce; jne 0x00000000000b97f0; ret; 
0x0000000018a1db: add [rax-0x73], ecx; jg short 0x000000000018a1e1; jne 0x000000000018a610; vzeroupper; ret; 
0x0000000018aef3: add [rax-0x73], ecx; jg short 0x000000000018aef9; jne 0x000000000018b340; vzeroupper; ret; 
0x0000000004725d: add [rax-0x73], ecx; mov ebp, 0x908; call qword ptr [rbp+0xf10]; 
0x0000000011ba97: add [rax-0x75], cl; add [r8-0x7d], r9b; ret; 
0x000000000342c1: add [rax-0x75], cl; add [rax-0x75], cl; mov rax, [rax+rdi*4+0x200]; ret; 
0x000000000344b1: add [rax-0x75], cl; add [rax-0x75], cl; movzx eax, word ptr [rax+rdi*2+0x100]; and eax, esi; ret; 
0x00000000034291: add [rax-0x75], cl; add [rax-0x75], cl; pop rax; mov eax, [rax+rdi*4+0x200]; ret; 
0x0000000017663f: add [rax-0x75], cl; add [rax-0x77], ecx; add cl, [rax-0x77]; clc; ret; 
0x000000001479cf: add [rax-0x75], cl; add [rax-0x7b], cl; shl byte ptr [rax+rax*2+0x41], 0x83; call qword ptr [rbx]; 
0x000000000473f9: add [rax-0x75], cl; add [rbx-0x75], bl; pop rax; ret; 
0x0000000019684b: add [rax-0x75], cl; add al, 0x24; add rsp, 0x38; ret; 
0x00000000087468: add [rax-0x75], cl; add al, 0x24; mov esi, r12d; mov rdi, r14; call qword ptr [rax+0x18]; 
0x0000000013850d: add [rax-0x75], cl; add al, 0x24; mov rdi, r12; call rax; 
0x0000000014fe37: add [rax-0x75], cl; add al, [rbx-0x37f0fe18]; mov [r8+0x48], eax; mov eax, 0x1; ret; 
0x0000000014d056: add [rax-0x75], cl; add al, [rbx-0x37f0fe18]; mov [r8+0xa8], eax; mov eax, 0x1; ret; 
0x000000000de158: add [rax-0x75], cl; add eax, 0x10dd10; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000dd177: add [rax-0x75], cl; add eax, 0x10ecf1; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000009e54f: add [rax-0x75], cl; add eax, 0x14d9f9; call qword ptr [rax]; 
0x000000000979fc: add [rax-0x75], cl; add eax, 0x1543bc; mov [rsp+0x8], r8; xor edi, edi; call qword ptr [rax]; 
0x000000000978e7: add [rax-0x75], cl; add eax, 0x1544d1; xor edi, edi; call qword ptr [rax]; 
0x000000000978a1: add [rax-0x75], cl; add eax, 0x154517; call qword ptr [rax]; 
0x0000000008d36f: add [rax-0x75], cl; add eax, 0x15eaf9; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000008aee6: add [rax-0x75], cl; add eax, 0x160f81; mov dword ptr fs:[rax], 0x9; mov eax, 0xffffffff; ret; 
0x0000000008475f: add [rax-0x75], cl; add eax, 0x167709; mov dword ptr fs:[rax], 0x16; mov rax, 0xffffffffffffffff; ret; 
0x0000000004835f: add [rax-0x75], cl; add eax, 0x1a3b09; mov dword ptr fs:[rax], 0x5; mov eax, 0xffffffff; ret; 
0x00000000047c87: add [rax-0x75], cl; add eax, 0x1a41e1; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000043e1f: add [rax-0x75], cl; add eax, 0x1a8049; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000043d5f: add [rax-0x75], cl; add eax, 0x1a8109; mov dword ptr fs:[rax], 0x16; mov rax, 0xffffffffffffffff; ret; 
0x00000000043c67: add [rax-0x75], cl; add eax, 0x1a8201; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000043c1f: add [rax-0x75], cl; add eax, 0x1a8249; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000043bcf: add [rax-0x75], cl; add eax, 0x1a8299; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000432cf: add [rax-0x75], cl; add eax, 0x1a8b99; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000004127f: add [rax-0x75], cl; add eax, 0x1aabe9; mov dword ptr fs:[rax], 0x2a; mov rax, r11; ret; 
0x00000000033d3f: add [rax-0x75], cl; add eax, 0x1b80a1; mov [rax], rdx; ret; 
0x00000000024717: add [rax-0x75], cl; add eax, 0x1c7751; mov dword ptr fs:[rax], 0x9; mov eax, 0xffffffff; ret; 
0x0000000015fcbf: add [rax-0x75], cl; add eax, 0x914c1; call qword ptr [rax+0x10]; 
0x0000000015fbdf: add [rax-0x75], cl; add eax, 0x91599; test rax, rax; je short 0x000000000015fbd7; call qword ptr [rax+0x18]; 
0x0000000015fa47: add [rax-0x75], cl; add eax, 0x91739; call qword ptr [rax+0x8]; 
0x0000000015f94f: add [rax-0x75], cl; add eax, 0x91831; call qword ptr [rax]; 
0x0000000012f43f: add [rax-0x75], cl; add eax, 0xbca29; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000011f90f: add [rax-0x75], cl; add eax, 0xcc559; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000011f8cf: add [rax-0x75], cl; add eax, 0xcc599; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000121fef: add [rax-0x75], cl; add eax, 0xcda81; mov rax, [rax+0x18]; add word ptr [rax], 0x1; ret; 
0x0000000011c517: add [rax-0x75], cl; add eax, 0xcf951; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000118927: add [rax-0x75], cl; add eax, 0xd3541; mov dword ptr fs:[rax], 0x16; mov rax, 0xffffffffffffffff; ret; 
0x00000000115777: add [rax-0x75], cl; add eax, 0xd66f1; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000001142f7: add [rax-0x75], cl; add eax, 0xd7b71; mov dword ptr fs:[rax], 0xc; mov eax, 0xffffffff; ret; 
0x00000000113176: add [rax-0x75], cl; add eax, 0xd8cf1; mov dword ptr fs:[rax], 0x9; mov eax, 0xffffffff; ret; 
0x00000000112957: add [rax-0x75], cl; add eax, 0xd9511; mov dword ptr fs:[rax], 0x16; xor eax, eax; ret; 
0x0000000010dc66: add [rax-0x75], cl; add eax, 0xde201; mov dword ptr fs:[rax], 0x5f; mov eax, 0xffffffff; ret; 
0x0000000010dc4f: add [rax-0x75], cl; add eax, 0xde219; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010da17: add [rax-0x75], cl; add eax, 0xde451; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010d9b7: add [rax-0x75], cl; add eax, 0xde4b1; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010d957: add [rax-0x75], cl; add eax, 0xde511; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010d5cf: add [rax-0x75], cl; add eax, 0xde899; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010d56f: add [rax-0x75], cl; add eax, 0xde8f9; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010d50f: add [rax-0x75], cl; add eax, 0xde959; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000896d6: add [rax-0x75], cl; and [r11+rcx*4+0x6d], r9b; sbb [rax-0x77], cl; ret far; 
0x00000000146973: add [rax-0x75], cl; and [r8-0x77], cl; out dx, eax; lea r15, [rsp+0x50]; call qword ptr [rax+0x20]; 
0x0000000014698c: add [rax-0x75], cl; and [r9], sil; test byte ptr [rax-0x77], 0xef; mov dword ptr [rbx+0x18], 0x1; call qword ptr [rax+0x28]; 
0x00000000160888: add [rax-0x75], cl; and al, 0x10; mov rdi, [rsp+0x18]; call rax; 
0x0000000016082b: add [rax-0x75], cl; and al, 0x10; mov rdi, [rsp+0x18]; call rcx; 
0x0000000002974d: add [rax-0x75], cl; and al, 0x20; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x48]; call r13; 
0x00000000147ec5: add [rax-0x75], cl; and al, 0x30; call rax; 
0x000000000482a3: add [rax-0x75], cl; and al, 0x8; add rsp, 0x28; ret; 
0x00000000090c9b: add [rax-0x75], cl; and al, 0x8; mov esi, 0xffffffff; mov rdi, r8; call qword ptr [rax+0x18]; 
0x000000001486e7: add [rax-0x75], cl; and al, 0x8; mov esi, r14d; mov rdi, r13; call qword ptr [rax+0x30]; 
0x00000000146218: add [rax-0x75], cl; and al, 0x8; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x000000001377ee: add [rax-0x75], cl; and al, 0x8; mov rdi, rbx; call rax; 
0x0000000014d955: add [rax-0x75], cl; cmp [rax-0x7b], cl; shl byte ptr [rbp+rax+0x48], 0x89; out dx, eax; call rax; 
0x0000000014cf1f: add [rax-0x75], cl; cmp [rax-0x7b], cl; shl byte ptr [rcx+rcx+0x48], 0x8d; mov ebp, 0xc8; call rax; 
0x0000000015f77e: add [rax-0x75], cl; cmp al, 0x24; mov rax, [rax+0x1d8]; jmp rax; 
0x0000000010d387: add [rax-0x75], cl; cmp byte ptr [rax+0x48000001], 0x85; shl byte ptr [rsp+rdi+0x31], 0xd2; call rax; 
0x000000000cabe5: add [rax-0x75], cl; cmp cl, ch; adc dl, [rax]; cli; jmp qword ptr [rsi-0x70]; 
0x00000000151857: add [rax-0x75], cl; cmp ebp, ebx; ret; 
0x000000000f4e07: add [rax-0x75], cl; cmp ecx, [rax-0x7d]; ret; 
0x000000001449e1: add [rax-0x75], cl; cmp esp, [rsp+rax*2-0x75]; add al, ch; fldln2; jmp qword ptr [rsp+rax*2-0x77]; 
0x00000000024031: add [rax-0x75], cl; je short 0x000000000002405a; or [rbx+0x4814247c], cl; mov edx, [rax]; call rbx; 
0x0000000009a27f: add [rax-0x75], cl; je short 0x000000000009a2a8; sbb [rbx+0x5d], bl; pop r12; jmp rax; 
0x0000000009a9e7: add [rax-0x75], cl; je short 0x000000000009aa10; mov rdi, r13; call rax; 
0x0000000009bd0f: add [rax-0x75], cl; je short 0x000000000009bd38; sub [rcx+rcx*4-0x19], cl; call rdx; 
0x00000000144ee2: add [rax-0x75], cl; je short 0x0000000000144f0b; mov rdi, [rsp+0x38]; call qword ptr [rsp+0x68]; 
0x0000000014d1b9: add [rax-0x75], cl; je short 0x000000000014d1e2; sbb [rcx+rcx*4-0x19], cl; call qword ptr [rax+0x8]; 
0x00000000196c8c: add [rax-0x75], cl; je short 0x0000000000196cb5; adc [rcx-0x77], cl; ret; 
0x0000000009e67b: add [rax-0x75], cl; jg short 0x000000000009e6c8; mov rsi, rbp; call rax; 
0x0000000013815f: add [rax-0x75], cl; jl short 0x0000000000138188; adc [rcx+rcx*4-0x1a], cl; call qword ptr [rsp+0x58]; 
0x00000000144fc7: add [rax-0x75], cl; jl short 0x0000000000144ff0; jo short 0x0000000000144fb6; mov fs, [rdi-0xceffff]; call qword ptr [rsp+0x70]; 
0x000000000256c6: add [rax-0x75], cl; jne short 0x000000000002565b; mov rdi, rbx; call rsi; 
0x0000000009e8bf: add [rax-0x75], cl; jnp short 0x000000000009e90c; call rax; 
0x0000000014ff78: add [rax-0x75], cl; jo short 0x000000000014ffc6; mov esi, [rsp+0x18]; mov rdi, r12; call qword ptr [rax+0x8]; 
0x0000000010cc94: add [rax-0x75], cl; mov ebx, 0x80; call qword ptr [rax+0x88]; 
0x000000000342c4: add [rax-0x75], cl; mov rax, [rax+rdi*4+0x200]; ret; 
0x0000000016817f: add [rax-0x75], cl; mov rdx, [rsi-0x8]; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000016837f: add [rax-0x75], cl; mov rdx, [rsi-0x8]; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x000000000344b4: add [rax-0x75], cl; movzx eax, word ptr [rax+rdi*2+0x100]; and eax, esi; ret; 
0x0000000010cf9a: add [rax-0x75], cl; nop; mov al, 0x0; add [rax], al; call qword ptr [rax+0x88]; 
0x00000000148320: add [rax-0x75], cl; or [r14+0x20], r15b; mov rdi, rbp; call qword ptr [rax+0x30]; 
0x0000000014e82f: add [rax-0x75], cl; or [r8-0x73], r9b; jae short 0x000000000014e850; mov rdi, rbp; call qword ptr [rax+0x48]; 
0x0000000014e77e: add [rax-0x75], cl; or [r8-0x77], r9b; fimul st, word ptr [rax-0x77]; out dx, eax; call qword ptr [rax+0x48]; 
0x00000000153cfa: add [rax-0x75], cl; or [r8-0x77], r9b; fimul st, word ptr [rax-0x77]; out dx, eax; call qword ptr [rax]; 
0x00000000153e3f: add [rax-0x75], cl; or [r8-0x77], r9b; out dx, eax; call qword ptr [rax+0x28]; 
0x00000000153cdf: add [rax-0x75], cl; or [r8-0x77], r9b; out dx, eax; call qword ptr [rax+0x8]; 
0x000000001490cf: add [rax-0x75], cl; or [r9-0x77], r9b; in al, 0x48; lea esi, [rsp+0x8]; call qword ptr [rax]; 
0x0000000011d05f: add [rax-0x75], cl; or al, 0x1; add [rax], al; ret; 
0x00000000034294: add [rax-0x75], cl; pop rax; mov eax, [rax+rdi*4+0x200]; ret; 
0x0000000011d057: add [rax-0x75], cl; pop rax; ret; 
0x0000000012352f: add [rax-0x75], cl; push 0xffffffffb70fff89; add al, 0x78; and eax, 0x1; ret; 
0x00000000090bc1: add [rax-0x75], cl; push rbx; mov rdi, rbx; sub rdx, rsi; call qword ptr [rbp+0x70]; 
0x0000000008d267: add [rax-0x75], cl; push rbx; or [rax-0x75], cl; xor ecx, [rax-0x7d]; ret; 
0x000000001518af: add [rax-0x75], cl; push rdi; or [rax-0x77], cl; add al, 0x24; call qword ptr [rdx+0x20]; 
0x0000000016782e: add [rax-0x75], cl; push rsi; clc; mov [rdi-0x8], rdx; ret; 
0x0000000016d30e: add [rax-0x75], cl; push rsi; test dword ptr [rbx-0x76b703b2], 0x4f89f757; cld; ret; 
0x000000000a8a67: add [rax-0x75], cl; push rsp; and al, 0x10; mov [rax], rdx; ret; 
0x00000000120445: add [rax-0x75], cl; push rsp; and al, 0x10; mov rsi, [rsp+0x8]; syscall; 
0x000000000468de: add [rax-0x75], cl; sbb [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x000000000bda3c: add [rax-0x75], cl; sbb [rax-0x75], cl; sub [r8-0x7b], cl; ror byte ptr [rdi], 0x84; ret; 
0x00000000122006: add [rax-0x75], cl; sbb [rbx-0x6f3cff00], al; ret; 
0x00000000121ff6: add [rax-0x75], cl; sbb [rsi-0x7d], spl; add [rcx], al; ret; 
0x0000000008cd27: add [rax-0x75], cl; sub rax, [rdi+0x38]; ret; 
0x000000001679ef: add [rax-0x75], cl; test qword ptr [rbx-0x76b703aa], 0x5789f74f; cld; ret; 
0x00000000082822: add [rax-0x75], cl; xchg edi, eax; mov al, [0xe08a8948000000]; add [rax], al; ret; 
0x0000000011a0e7: add [rax-0x75], cl; xor [rcx+rcx*4-0x9], cl; mov rax, [rbp-0x58]; mov r15d, r13d; call rax; 
0x0000000008af5d: add [rax-0x75], ecx; sub [r15+rcx-0x4a], r8b; ret; 
0x000000000b39f6: add [rax-0x776b7fe], ecx; ret; 
0x000000001784b1: add [rax-0x776b7fe], ecx; sub r8, 0x1; lea rcx, [rdx+0x1]; jne 0x0000000000178810; ret; 
0x00000000121c6e: add [rax-0x77], cl; adc [r10+0x13], r14b; mov qword ptr [rip+0xca6e0], 0x2; ret; 
0x0000000015f828: add [rax-0x77], cl; adc [r8+0x5a], bl; pop rbx; ret; 
0x00000000148267: add [rax-0x77], cl; adc bl, r8b; mov dword ptr [rsi], 0x8; ret; 
0x0000000009f8d2: add [rax-0x77], cl; add eax, 0x14f66e; add rsp, 0x8; ret; 
0x0000000009f894: add [rax-0x77], cl; add eax, 0x14f6ac; ret; 
0x0000000009523a: add [rax-0x77], cl; add eax, 0x15704e; ret; 
0x00000000095211: add [rax-0x77], cl; add eax, 0x15706f; ret; 
0x000000000951f1: add [rax-0x77], cl; add eax, 0x157087; ret; 
0x00000000115bc3: add [rax-0x77], cl; add eax, 0xd9ad5; lea rax, [rip+0xd9aa6]; add rsp, 0x8; ret; 
0x0000000015fd13: add [rax-0x77], cl; add ebx, [rax+0x5a]; pop rbx; ret; 
0x0000000014ef6a: add [rax-0x77], cl; and al, 0x10; mov rax, [rsp+0x48]; call qword ptr [rax+0x28]; 
0x00000000089262: add [rax-0x77], cl; and al, 0x10; xor edx, edx; mov rdi, r15; call qword ptr [r14+0x80]; 
0x000000000d0392: add [rax-0x77], cl; and al, 0x58; xor eax, eax; mov [rsp+0x50], r12; call rbx; 
0x0000000015f1a1: add [rax-0x77], cl; and al, 0x68; xor eax, eax; call qword ptr [r12+0xf08]; 
0x0000000015f3a4: add [rax-0x77], cl; and al, 0x8; lea rdi, [r15+0x908]; call qword ptr [r15+0xf08]; 
0x0000000005215c: add [rax-0x77], cl; and al, 0x8; xor eax, eax; mov eax, 0x3e; syscall; 
0x000000000b67de: add [rax-0x77], cl; clc; ret; 
0x0000000018b53f: add [rax-0x77], cl; clc; vzeroupper; ret; 
0x000000000feccd: add [rax-0x77], cl; cmp [rcx+rcx*4-0x40], cl; ret; 
0x0000000015f74a: add [rax-0x77], cl; dec byte ptr [rax-0x75]; cmp al, 0x24; mov rax, [rax+0x1d8]; jmp rax; 
0x0000000011c6e9: add [rax-0x77], cl; enter 0xc031, 0xe8; ret far; 
0x000000000900b7: add [rax-0x77], cl; fcomp st, dword ptr [rbx+0x5d]; pop r12; ret; 
0x0000000012a05a: add [rax-0x77], cl; fidivr st, word ptr [rdi+0x2000005]; mov rdx, rax; call qword ptr [r13+0x28]; 
0x0000000008cf7c: add [rax-0x77], cl; fidivr st, word ptr [rdi+0x2]; mov eax, r9d; syscall; 
0x0000000008451d: add [rax-0x77], cl; fimul st, dword ptr [rcx+rcx*4-0x1a]; call qword ptr [r14+0x38]; 
0x000000000753e0: add [rax-0x77], cl; fimul st, dword ptr [rcx+rcx*4-0x1a]; mov rdi, r15; call qword ptr [rax+0x38]; 
0x0000000007597f: add [rax-0x77], cl; fimul st, dword ptr [rcx+rcx*4-0x1a]; mov rdi, r15; call qword ptr [rcx+0x38]; 
0x00000000049e27: add [rax-0x77], cl; fimul st, word ptr [rax+0xf]; mov esi, 0x83480143; ret; 
0x00000000137798: add [rax-0x77], cl; fimul st, word ptr [rax-0x77]; out dx, eax; call qword ptr [rsp+0x10]; 
0x0000000006683f: add [rax-0x77], cl; fimul st, word ptr [rax-0x7d]; ret; 
0x0000000009ae6f: add [rax-0x77], cl; fistp qword ptr [rax+0xca], st; syscall; 
0x000000000f1e48: add [rax-0x77], cl; fmul st, dword ptr [rax-0x7d]; ret; 
0x0000000015da98: add [rax-0x77], cl; fsubp st(0), st; call far fword ptr [rbx-0x5]; 
0x0000000013fb3c: add [rax-0x77], cl; fsubp st(0), st; ret far; 
0x00000000124744: add [rax-0x77], cl; fucomip st, st(0); ret; 
0x00000000093496: add [rax-0x77], cl; imul esp, [rax+0x5b], 0x5d; pop r12; ret; 
0x0000000014e420: add [rax-0x77], cl; in eax, 0x89; ret; 
0x000000000fb506: add [rax-0x77], cl; je short 0x00000000000fb52f; or al, ch; jmp far fword ptr [rbp-0xe]; 
0x00000000119723: add [rax-0x77], cl; je short 0x0000000000119730; pop rbx; ret; 
0x00000000119722: add [rax-0x77], cl; je short 0x0000000000119730; pop rbx; ret; 
0x00000000147843: add [rax-0x77], cl; jl short 0x000000000014786c; sbb [rbp+rcx*4+0x4c], cl; and al, 0x40; call qword ptr [rax]; 
0x000000000f9215: add [rax-0x77], cl; jo short 0x00000000000f9204; ret far; 
0x0000000015f161: add [rax-0x77], cl; mov cl, 0xe9; add esi, ebx; movsq [rdi], [rsi]; ret; 
0x000000000696d5: add [rax-0x77], cl; mov ebp, ds; sar dl, 0xff; dec dword ptr [rax-0x7d]; ret; 
0x0000000008f97d: add [rax-0x77], cl; out 0x48, al; mov edi, ebp; call qword ptr [r13+0x90]; 
0x0000000008e6f7: add [rax-0x77], cl; out 0x48, al; mov edi, ebp; call qword ptr [r15+0x90]; 
0x00000000081cf6: add [rax-0x77], cl; out 0x48, al; mov edi, ebp; call qword ptr [rbx+0x90]; 
0x00000000042e04: add [rax-0x77], cl; out 0x48, al; ror eax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000153ec6: add [rax-0x77], cl; out 0x48, eax; mov esi, ebp; call qword ptr [rax+0x18]; 
0x0000000007a020: add [rax-0x77], cl; out 0x48, eax; ror eax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000150fd0: add [rax-0x77], cl; out dx, al; mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x10]; 
0x0000000009df07: add [rax-0x77], cl; out dx, al; mov rdi, r12; call rax; 
0x0000000008f9e3: add [rax-0x77], cl; out dx, eax; call qword ptr [r13+0x20]; 
0x0000000014d941: add [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x20]; 
0x00000000148329: add [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x30]; 
0x0000000008f793: add [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x80]; 
0x0000000008225b: add [rax-0x77], cl; out dx, eax; call qword ptr [rbx+0x80]; 
0x00000000152191: add [rax-0x77], cl; out dx, eax; lea r8, [rip-0xa0ec]; lea rdx, [rip+0x3a2d]; call qword ptr [rax]; 
0x0000000014732a: add [rax-0x77], cl; out dx, eax; lea r9, [rsp+0x20]; call qword ptr [rax]; 
0x0000000014e705: add [rax-0x77], cl; out dx, eax; mov [r12+0x70], edx; call qword ptr [rax+0x30]; 
0x00000000046da9: add [rax-0x77], cl; out dx, eax; mov eax, 0xca; syscall; 
0x0000000006e266: add [rax-0x77], cl; popfq; cmp dl, 0xff; dec dword ptr [rbx-0x53f63]; jmp qword ptr [rbx+rcx*4]; 
0x000000001538e9: add [rax-0x77], cl; push rsp; and al, 0x38; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x000000000bc1df: add [rax-0x77], cl; rcr byte ptr [rbx-0x3d], 0x1; mov eax, 0x60; pop rbx; ret; 
0x000000000446e5: add [rax-0x77], cl; ret far; 
0x00000000022676: add [rax-0x77], cl; ret; 
0x00000000117d61: add [rax-0x77], cl; ror dword ptr [rax-0x73], 0x15; ret far; 
0x0000000015f7e0: add [rax-0x77], cl; sbb [r8+0x5a], bl; pop rbx; ret; 
0x000000000938ce: add [rax-0x77], cl; sbb eax, 0x15aef2; add dword ptr [rip+0x15aee7], 0x1; pop rbx; ret; 
0x000000000a8657: add [rax-0x77], cl; shl dword ptr [rcx], 0xc0; mov [rdx], rcx; ret; 
0x000000000bbc14: add [rax-0x77], cl; shl ebx, 0x1; movsb [rdi], [rsi]; ret; 
0x0000000009a0f4: add [rax-0x77], cl; xor [rax-0x75], cl; add eax, 0x151de1; mov [rax], rdi; ret; 
0x000000000961fa: add [rax-0x77], cl; xor [rax-0x75], cl; add eax, 0x155cdb; mov [rax], rdx; ret; 
0x00000000112d4e: add [rax-0x77], cl; xor esi, esi; syscall; 
0x00000000094ea6: add [rax-0x77], ecx; adc eax, 0x157422; ret; 
0x000000000639fb: add [rax-0x77], ecx; adc eax, [rax-0x78]; sub [rbx+0x5d], bl; pop r12; ret; 
0x0000000017aaf2: add [rax-0x77], ecx; add cl, [rax-0x75]; add eax, 0x5428948; lea rax, [rdx+0xc]; ret; 
0x00000000176762: add [rax-0x77], ecx; add cl, [rax-0x75]; add eax, 0x5428948; mov rax, rdi; ret; 
0x00000000176642: add [rax-0x77], ecx; add cl, [rax-0x77]; clc; ret; 
0x0000000017aa72: add [rax-0x77], ecx; add cl, [rbx+0x42890541]; add eax, 0x8428d48; ret; 
0x00000000176752: add [rax-0x77], ecx; add cl, [rbx+0x42890841]; or [rax-0x77], cl; clc; ret; 
0x0000000006ab88: add [rax-0x77], ecx; lea edx, [rax-0x77000005]; add cl, [rax-0x7d]; ret; 
0x00000000146a33: add [rax-0x77], ecx; out dx, eax; call qword ptr [rax+0x18]; 
0x000000000605a1: add [rax-0x77], ecx; push rbp; sub dh, al; add [rip-0xb9517], ch; jmp qword ptr [rsi-0x70]; 
0x00000000061721: add [rax-0x77], ecx; push rbp; sub dh, al; add [rip-0xfd17], ch; jmp qword ptr [rsi-0x70]; 
0x0000000008df81: add [rax-0x77], ecx; push rdi; or [rdi], cl; mov dh, 0x0; ret; 
0x000000000a5631: add [rax-0x77], ecx; ret; 
0x0000000008df5a: add [rax-0x77], ecx; sub [rax-0x3f76bbfe], r9b; ret; 
0x0000000006ab87: add [rax-0x77], rcx; lea edx, [rax-0x77000005]; add cl, [rax-0x7d]; ret; 
0x0000000008df59: add [rax-0x77], rcx; sub [rax-0x3f76bbfe], r9b; ret; 
0x0000000013c1a3: add [rax-0x78], eax; ja short 0x000000000013c1a9; ret; 
0x000000000298e0: add [rax-0x78], eax; mov esp, 0x8514; add [rax+0x39], cl; ret far; 
0x000000001970ee: add [rax-0x7ab70000], al; ret; 
0x000000001173ca: add [rax-0x7b], cl; push qword ptr [rbp+0x10]; mov eax, 0x1; ret; 
0x00000000146e89: add [rax-0x7b], cl; push qword ptr [rdi+rax+0x48]; mov eax, [rdi+0x8]; call qword ptr [rax+0x20]; 
0x00000000146cd7: add [rax-0x7b], cl; push qword ptr [rdi+rcx+0x48]; mov eax, [rdi+0x8]; call qword ptr [rax+0x20]; 
0x0000000006d386: add [rax-0x7b], cl; ror byte ptr [rdi], 0x84; call qword ptr [rax+rax]; 
0x000000000fda43: add [rax-0x7b], cl; ror byte ptr [rdi], 0x84; ret far; 
0x00000000194c63: add [rax-0x7b], cl; ror byte ptr [rdi], 0x84; ret; 
0x0000000009cde3: add [rax-0x7b], cl; ror byte ptr [rdi], 0x84; rol dword ptr [rax], cl; add [rax], al; call rax; 
0x000000000b4243: add [rax-0x7b], cl; ror byte ptr [rdi], 0x85; ret; 
0x000000001479d2: add [rax-0x7b], cl; shl byte ptr [rax+rax*2+0x41], 0x83; call qword ptr [rbx]; 
0x0000000009f442: add [rax-0x7b], cl; shl byte ptr [rax+rcx+0x5b], 0x5d; pop r12; ret; 
0x0000000012bddd: add [rax-0x7b], cl; shl byte ptr [rbp+rbp+0x48], 0x8b; jp short 0x000000000012be37; mov rsi, rdx; call rax; 
0x00000000150bcf: add [rax-0x7b], cl; shl byte ptr [rbp-0x1d], 0xe8; test al, 0xfe; jmp qword ptr [rsi+0xf]; 
0x00000000082b37: add [rax-0x7b], cl; shl byte ptr [rbx+rdx+0x48], 0x8b; mov edi, 0xe0; jmp rax; 
0x00000000082a57: add [rax-0x7b], cl; shl byte ptr [rcx+rcx+0x48], 0x8b; mov edi, 0xe0; jmp rax; 
0x00000000137c63: add [rax-0x7b], cl; shl byte ptr [rcx+rcx+0x48], 0x8d; cmp eax, 0xb8770; call rax; 
0x0000000010d2fb: add [rax-0x7b], cl; shl byte ptr [rdi+rbp+0x31], 0xd2; xor esi, esi; mov rdi, rbp; call rax; 
0x0000000011cc55: add [rax-0x7b], cl; shl byte ptr [rdx+0x48], 0x39; ret; 
0x00000000082ae0: add [rax-0x7b], cl; shl byte ptr [rdx+0x48], 0x8b; mov edi, 0xe0; lea rsi, [rsp+0x8]; call rax; 
0x0000000012d0c3: add [rax-0x7b], cl; shl byte ptr [rsp+rbp+0x48], 0x8d; jne short 0x000000000012d0ad; lea rdi, [rip-0x184]; call rax; 
0x0000000010d38e: add [rax-0x7b], cl; shl byte ptr [rsp+rdi+0x31], 0xd2; call rax; 
0x000000000a2c65: add [rax-0x7b], ecx; ror byte ptr [rax-0x77], 0xd8; pop rbx; cmovne rax, rdi; ret; 
0x0000000013c95c: add [rax-0x7b], ecx; sar byte ptr [rax+0xe], cl; mov rax, rdx; movsxd rdx, ecx; ret; 
0x0000000017c5f7: add [rax-0x7cb7fec8], al; fdivr st, st(7); ret; 
0x000000000f6a17: add [rax-0x7d], cl; and al, 0x30; adc al, 0x83; ret; 
0x00000000099495: add [rax-0x7d], cl; call far fword ptr [rdi]; 
0x0000000009b2a3: add [rax-0x7d], cl; call qword ptr [rax]; 
0x0000000004209f: add [rax-0x7d], cl; clc; ret far; 
0x0000000002a5d1: add [rax-0x7d], cl; cli; add ecx, [rdi]; xchg [rax*1+0x39480000], esp; ret; 
0x00000000106cdb: add [rax-0x7d], cl; in al, dx; or al, ch; fcmovnbe st, st(2); bnd jmp qword ptr [rsi+0x66]; 
0x0000000012f456: add [rax-0x7d], cl; in al, dx; or al, ch; pxor mm7, mm7; jmp qword ptr [rsi+0x2e]; 
0x00000000062632: add [rax-0x7d], cl; in al, dx; sbb [rcx], dh; jmp qword ptr [rax+rcx*2-0x75]; 
0x0000000009960f: add [rax-0x7d], cl; jmp qword ptr [rax]; 
0x00000000148e32: add [rax-0x7d], cl; mov eax, 0x100; add [rax-0x77], cl; ret; 
0x0000000013acc7: add [rax-0x7d], cl; out dx, eax; add ecx, [rax-0x7d]; call qword ptr [rcx]; 
0x0000000009684a: add [rax-0x7d], cl; ret far; 
0x00000000026238: add [rax-0x7d], cl; ret; 
0x0000000002f13d: add [rax-0x7d], cl; rol byte ptr [rax+rcx*2], 0x83; ret; 
0x000000000cfb2f: add [rax-0x7d], cl; rol byte ptr [rbx], 0xc3; nop [rax+rax]; xor rax, rax; ret; 
0x000000000cfb1e: add [rax-0x7d], cl; rol byte ptr [rcx], 0xc3; nop [rax+rax]; add rax, 0x3; ret; 
0x00000000053277: add [rax-0x7d], cl; rol byte ptr [rcx], 0xc6; jmp qword ptr [rax]; 
0x0000000017c5fa: add [rax-0x7d], ecx; fdivr st, st(7); ret; 
0x000000000e820c: add [rax-0x7d], ecx; mov dword ptr [rcx], 0xac75c084; xor eax, eax; ret; 
0x00000000025908: add [rax-0x7d], ecx; ret; 
0x00000000052441: add [rax-0x7f], ecx; ret; 
0x0000000004a023: add [rax-0x80], al; jmp far fword ptr [rbx]; 
0x0000000004a0e3: add [rax-0x80], al; jmp qword ptr [rbp+0xf]; 
0x00000000076e18: add [rax-0x80], al; jmp qword ptr [rdi+rcx]; 
0x000000000f06b2: add [rax-0x80], eax; call far fword ptr [rsi]; 
0x0000000005b4f2: add [rax-0x8], ebp; saveprevssp; mov [r9+0x3a8], rdi; mov rsp, rdx; ret; 
0x00000000074e52: add [rax-0x8ff43], eax; jmp qword ptr [rax]; 
0x0000000007baba: add [rax-0x93b43], eax; jmp qword ptr [rax]; 
0x00000000038888: add [rax-0x9], ecx; ror byte ptr [rax+0x1], 0x1; ret; 
0x0000000011205e: add [rax-0xefd3418], dl; jmp qword ptr [rsi-0x7d]; 
0x000000000e2f65: add [rax], ah; add [rax+0x38], edi; syscall; 
0x000000001280f6: add [rax], ah; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000000341b8: add [rax], ah; movzx eax, ax; ret; 
0x000000000a0336: add [rax], al; adc [rax-0x73], cl; add eax, 0x1b0d0; cmove rax, rdx; ret; 
0x000000001135bd: add [rax], al; add [r13+rbp-0x48], sil; add [rcx], eax; add [rax], al; syscall; 
0x0000000013bd24: add [rax], al; add [rax+0x102], bh; cmovne eax, edx; ret; 
0x0000000011f266: add [rax], al; add [rax+0x119], bh; syscall; 
0x00000000190cac: add [rax], al; add [rax+0x1478d48], dl; ret; 
0x000000000b92fc: add [rax], al; add [rax+0x1788168a], dl; lea rax, [rdi+0x1]; ret; 
0x000000000dcfeb: add [rax], al; add [rax+0x1], bh; add rsp, 0x8; ret; 
0x000000000cf0ad: add [rax], al; add [rax+0x1], bh; jg short 0x00000000000cf0b9; neg eax; ret; 
0x00000000057b6e: add [rax], al; add [rax+0x1], bh; ret; 
0x000000000cf2b4: add [rax], al; add [rax+0x1], cl; clc; add rax, rcx; ret; 
0x00000000184a07: add [rax], al; add [rax+0x1], cl; clc; vzeroupper; ret; 
0x0000000012e42f: add [rax], al; add [rax+0x1], cl; ret far; 
0x000000000e50d3: add [rax], al; add [rax+0x20], bh; cmove rax, rdx; ret; 
0x00000000051383: add [rax], al; add [rax+0x29], cl; ret far; 
0x0000000007a3ec: add [rax], al; add [rax+0x29], cl; ret; 
0x00000000057d81: add [rax], al; add [rax+0x2], bh; ret; 
0x000000000ec3fc: add [rax], al; add [rax+0x2c755ef9], al; mov byte ptr [rdi+0x8], 0x19; mov eax, 0x1; ret; 
0x000000000298e6: add [rax], al; add [rax+0x39], cl; ret far; 
0x0000000007d0f2: add [rax], al; add [rax+0x39], cl; ret; 
0x000000001929cc: add [rax], al; add [rax+0x3bf4478b], dl; hlt; jne 0x0000000000192af0; ret; 
0x000000000cb1b1: add [rax], al; add [rax+0x4428944], al; mov [rdx], eax; xor eax, eax; ret; 
0x000000000bc1b5: add [rax], al; add [rax+0x485bf0e5], al; cmovne eax, edx; ret; 
0x0000000011340f: add [rax], al; add [rax+0x48], bh; syscall; 
0x00000000041ff6: add [rax], al; add [rax+0x48c22148], al; mov [rdi], edx; ret; 
0x0000000007df4b: add [rax], al; add [rax+0x63], cl; add al, 0x81; add rax, rdx; jmp rax; 
0x0000000007f1e6: add [rax], al; add [rax+0x63], cl; add al, 0x86; add rax, rdx; jmp rax; 
0x0000000007e305: add [rax], al; add [rax+0x63], cl; add al, 0x88; add rax, rdx; jmp rax; 
0x0000000013b6df: add [rax], al; add [rax+0x63], cl; fisttp dword ptr [rax+0x1], st; ret; 
0x0000000004a88c: add [rax], al; add [rax+0x63], cl; ret far; 
0x0000000004a88b: add [rax], al; add [rax+0x63], cl; ret far; 
0x000000000c037d: add [rax], al; add [rax+0x63], cl; ret; 
0x00000000148666: add [rax], al; add [rax+0x63], cl; sbb [r11+0xe7603f8], r8b; mov eax, 0x2; ret; 
0x00000000041fc6: add [rax], al; add [rax+0x66c22148], al; movq mm0, rdx; ret; 
0x00000000041f83: add [rax], al; add [rax+0x7110ff2], al; and rdx, rax; movq xmm0, rdx; ret; 
0x0000000004232f: add [rax], al; add [rax+0x7110ff3], al; movd xmm0, esi; ret; 
0x000000000b84bd: add [rax], al; add [rax+0x78d4837], cl; ret; 
0x00000000043436: add [rax], al; add [rax+0x7f], bh; syscall; 
0x0000000013c9ed: add [rax], al; add [rax+0x7fffffff], bh; ret; 
0x00000000044155: add [rax], al; add [rax+0x80], bh; syscall; 
0x00000000043482: add [rax], al; add [rax+0x82], bh; syscall; 
0x0000000011f7f5: add [rax], al; add [rax+0x95], bh; syscall; 
0x000000000f24cd: add [rax], al; add [rax+0xc], bh; ret; 
0x000000000e1dcf: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x10d702]; syscall; 
0x000000000e1c8f: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x10d842]; syscall; 
0x000000000e1bd7: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x10d8fa]; syscall; 
0x000000000e1afb: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x10d9ce]; syscall; 
0x000000000e192b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x10db5e]; syscall; 
0x000000000e1767: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x10dcda]; syscall; 
0x000000000e13ad: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x10e03c]; syscall; 
0x000000000dfe9f: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x10f4c2]; syscall; 
0x000000000dfd5f: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x10f602]; syscall; 
0x000000000dfca7: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x10f6ba]; syscall; 
0x000000000df8db: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x10fa7e]; syscall; 
0x000000000df70b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x10fc0e]; syscall; 
0x000000000df547: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x10fd8a]; syscall; 
0x000000000dec5f: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x11061a]; syscall; 
0x000000000d2bbb: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x11c5d6]; syscall; 
0x000000000d2987: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x11c80a]; syscall; 
0x000000000ca65b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x126b46]; syscall; 
0x0000000009c81b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x150356]; syscall; 
0x0000000009e1c7: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x150d32]; syscall; 
0x0000000009dfe7: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x150f12]; syscall; 
0x0000000009ddfb: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x1510fe]; syscall; 
0x0000000009dd8b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x15116e]; syscall; 
0x0000000009db5b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x15139e]; syscall; 
0x00000000099abb: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x1530b6]; syscall; 
0x00000000099a5b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x153116]; syscall; 
0x0000000009969b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x1534d6]; syscall; 
0x0000000009943b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x153736]; syscall; 
0x00000000098dd3: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x153d9e]; syscall; 
0x00000000098d9b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x153dd6]; syscall; 
0x0000000009aa6b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x15440e]; syscall; 
0x00000000099fcf: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x154e9a]; syscall; 
0x0000000009603c: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x158e2d]; syscall; 
0x0000000009600b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x158e6e]; syscall; 
0x00000000095d8b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x1590ee]; syscall; 
0x00000000095867: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x159612]; syscall; 
0x00000000094c4c: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x159ba5]; syscall; 
0x00000000094a77: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x159d7a]; syscall; 
0x000000000948db: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x159f16]; syscall; 
0x0000000009394d: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x15ae64]; syscall; 
0x0000000009340d: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x15b3a4]; syscall; 
0x00000000093069: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x15b748]; syscall; 
0x00000000092cfd: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x15bab4]; syscall; 
0x00000000091679: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x15d138]; syscall; 
0x000000000913b9: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x15d3f8]; syscall; 
0x00000000091045: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x15d76c]; syscall; 
0x0000000008438a: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x16a3e7]; syscall; 
0x00000000083f8d: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x16a7e4]; syscall; 
0x00000000083ee2: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x16a88f]; syscall; 
0x0000000008201b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x16f186]; syscall; 
0x000000000610cf: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x18d672]; syscall; 
0x00000000060e4b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x18d8f2]; syscall; 
0x0000000005ec77: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x18fabe]; syscall; 
0x0000000005eb37: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x18fbfe]; syscall; 
0x00000000054d9b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x199986]; syscall; 
0x00000000054bbb: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x199b66]; syscall; 
0x0000000005468b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x19a096]; syscall; 
0x0000000005229f: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x19c252]; syscall; 
0x00000000052123: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x19c3ce]; syscall; 
0x000000000520eb: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x19c406]; syscall; 
0x000000000478d7: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x1a6bfa]; syscall; 
0x00000000047817: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x1a6cba]; syscall; 
0x0000000004774f: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x1a6d82]; syscall; 
0x00000000047677: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x1a6e5a]; syscall; 
0x0000000004676f: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x1a750a]; syscall; 
0x000000000466aa: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x1a75cf]; syscall; 
0x00000000046508: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x1a7771]; syscall; 
0x0000000004642e: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x1a784b]; syscall; 
0x000000000384f8: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x1b5731]; syscall; 
0x00000000036b75: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x1b707c]; syscall; 
0x0000000003583a: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x1b830f]; syscall; 
0x0000000003581d: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x1b832c]; syscall; 
0x00000000035755: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x1b83f4]; syscall; 
0x0000000002606f: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x1cb132]; syscall; 
0x00000000025f03: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x1cb29e]; syscall; 
0x00000000025de3: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x1cb3be]; syscall; 
0x0000000002283e: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x1cb403]; syscall; 
0x000000001987e7: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x55492]; syscall; 
0x000000001989a7: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x55e4a]; syscall; 
0x00000000198cd7: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x57832]; syscall; 
0x0000000015e077: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x935d2]; syscall; 
0x0000000015cf3f: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x9470a]; syscall; 
0x0000000015ce5f: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x947ea]; syscall; 
0x0000000015cc77: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x949d2]; syscall; 
0x0000000015cbe7: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x94a62]; syscall; 
0x0000000015cb47: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x94b02]; syscall; 
0x0000000015ca97: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x94bb2]; syscall; 
0x0000000015c6c7: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x94f82]; syscall; 
0x00000000152437: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x9e9aa]; syscall; 
0x000000001522d7: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x9eb0a]; syscall; 
0x000000001520cb: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x9ed16]; syscall; 
0x00000000151f2b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x9eeb6]; syscall; 
0x00000000151d97: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x9f04a]; syscall; 
0x00000000151c57: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x9f18a]; syscall; 
0x00000000151af7: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x9f2ea]; syscall; 
0x000000001519e7: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x9f3fa]; syscall; 
0x0000000014e4d7: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xa2906]; syscall; 
0x0000000014c7df: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xa453a]; syscall; 
0x0000000014c69f: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xa467a]; syscall; 
0x0000000014c5e7: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xa4732]; syscall; 
0x0000000014c4fb: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xa4816]; syscall; 
0x0000000014c32b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xa49b6]; syscall; 
0x0000000014c167: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xa4b52]; syscall; 
0x000000001467c9: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xaa38c]; syscall; 
0x0000000014462b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xac496]; syscall; 
0x000000001442f3: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xac7ce]; syscall; 
0x00000000143f73: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xacb4e]; syscall; 
0x00000000143d4d: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xacd74]; syscall; 
0x00000000143beb: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xaced6]; syscall; 
0x000000001439ae: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xad113]; syscall; 
0x00000000142f57: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xadab2]; syscall; 
0x00000000142dd5: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xadc34]; syscall; 
0x00000000142d9b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xadc6e]; syscall; 
0x00000000142c83: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xadd86]; syscall; 
0x0000000014243f: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xae5ca]; syscall; 
0x00000000142377: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xae692]; syscall; 
0x0000000014225b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xae7ae]; syscall; 
0x00000000140e88: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xaf929]; syscall; 
0x0000000013d707: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xb2e02]; syscall; 
0x0000000013d40b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xb30fe]; syscall; 
0x000000001390db: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xb741a]; syscall; 
0x00000000138b5b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xb797e]; syscall; 
0x00000000138997: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xb7afa]; syscall; 
0x000000001388cf: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xb7b62]; syscall; 
0x0000000013878f: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xb7ca2]; syscall; 
0x000000001386d7: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xb7d5a]; syscall; 
0x00000000137fe7: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xb8442]; syscall; 
0x00000000137cc7: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xb8762]; syscall; 
0x00000000137b0b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xb891e]; syscall; 
0x0000000013477f: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xbbb3a]; syscall; 
0x0000000013463f: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xbbc7a]; syscall; 
0x00000000134587: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xbbd32]; syscall; 
0x000000001344a7: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xbbe0a]; syscall; 
0x00000000133fdb: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xbc25e]; syscall; 
0x00000000133a0b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xbc7ce]; syscall; 
0x000000001334eb: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xbcca6]; syscall; 
0x0000000013331f: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xbce32]; syscall; 
0x000000001331df: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xbcf72]; syscall; 
0x00000000133127: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xbd02a]; syscall; 
0x00000000133047: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xbd102]; syscall; 
0x00000000132c2b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xbd4d6]; syscall; 
0x0000000013260f: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xbda92]; syscall; 
0x000000001324b7: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xbdbea]; syscall; 
0x000000001323f7: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xbdcaa]; syscall; 
0x0000000013230f: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xbdd8a]; syscall; 
0x0000000013222b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xbde36]; syscall; 
0x00000000131bcb: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xbe456]; syscall; 
0x000000001319bf: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xbe61a]; syscall; 
0x00000000131867: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xbe772]; syscall; 
0x000000001317a7: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xbe832]; syscall; 
0x000000001316bf: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xbe912]; syscall; 
0x00000000130aab: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xbf4ae]; syscall; 
0x0000000013083b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xbf6de]; syscall; 
0x000000001300bb: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xbfdfe]; syscall; 
0x000000001265bf: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xc9862]; syscall; 
0x0000000012647f: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xc99a2]; syscall; 
0x000000001263c7: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xc9a5a]; syscall; 
0x00000000125fed: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xc9e2c]; syscall; 
0x00000000125deb: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xc9ff6]; syscall; 
0x00000000125c0b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xca18e]; syscall; 
0x00000000125a47: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xca30a]; syscall; 
0x00000000125977: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xca386]; syscall; 
0x000000001258ad: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xca450]; syscall; 
0x00000000125818: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xca4e5]; syscall; 
0x00000000124b0f: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xcb1ba]; syscall; 
0x000000001249cf: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xcb2fa]; syscall; 
0x00000000124917: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xcb3b2]; syscall; 
0x0000000012431d: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xcb9a4]; syscall; 
0x0000000012411b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xcbb4e]; syscall; 
0x00000000123f3b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xcbcc6]; syscall; 
0x00000000123d77: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xcbe22]; syscall; 
0x00000000118707: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xd713a]; syscall; 
0x000000001185eb: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xd7256]; syscall; 
0x0000000011818b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xd76b6]; syscall; 
0x00000000117c50: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xd7bf1]; syscall; 
0x00000000106abb: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xe8af6]; syscall; 
0x000000000229f3: add [rax], al; add [rax+0xca], bh; syscall; 
0x0000000004318c: add [rax], al; add [rax+0xd], bh; syscall; 
0x000000000dd2b0: add [rax], al; add [rax+0xe6], bh; syscall; 
0x00000000043031: add [rax], al; add [rax+0xe], bh; syscall; 
0x0000000012a4cd: add [rax], al; add [rax+0xf], cl; mov esi, 0x8348014b; ret; 
0x0000000012505d: add [rax], al; add [rax+0xf], cl; mov esi, 0x83480153; ret; 
0x000000000df33d: add [rax], al; add [rax+0xf], cl; ret; 
0x000000000ea3bd: add [rax], al; add [rax+rax*8-0x49f0e38c], al; add ecx, [rax-0x77]; fimul st, dword ptr [rax-0x7d]; ret; 
0x000000000cf643: add [rax], al; add [rax+rbp*2+0x48], dh; lea eax, [rdi-0x10]; ret; 
0x000000000472e2: add [rax], al; add [rax+rcx*2-0x77], ah; adc ecx, [rax-0x75]; jge short 0x00000000000472f5; call rax; 
0x000000000ec42d: add [rax], al; add [rax-0x178ad207], al; mov byte ptr [rdi+0x8], 0x16; mov eax, 0x1; ret; 
0x000000000412eb: add [rax], al; add [rax-0x1], bh; pop rbp; ret; 
0x00000000043c8e: add [rax], al; add [rax-0x1], bh; ret; 
0x00000000024723: add [rax], al; add [rax-0x1], bh; ret; 
0x0000000002410c: add [rax], al; add [rax-0x2f7600cf], dl; syscall; 
0x00000000042392: add [rax], al; add [rax-0x3991f09a], al; ret; 
0x000000000bfa85: add [rax], al; add [rax-0x39], cl; ret; 
0x000000000cfb6d: add [rax], al; add [rax-0x39], cl; rol byte ptr [rbx], 0x0; add [rax], al; ret; 
0x000000000cfbad: add [rax], al; add [rax-0x39], cl; rol byte ptr [rdi], 0x0; add [rax], al; ret; 
0x000000000cfb5d: add [rax], al; add [rax-0x39], cl; rol byte ptr [rdx], 0x0; add [rax], al; ret; 
0x000000000cfb9d: add [rax], al; add [rax-0x39], cl; rol byte ptr [rsi], 0x0; add [rax], al; ret; 
0x00000000033e84: add [rax], al; add [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x00000000023a48: add [rax], al; add [rax-0x3f], cl; rcl byte ptr [rcx], 0x48; mov [rip+0x1cd8d2], eax; ret; 
0x0000000007e946: add [rax], al; add [rax-0x3f], cl; stc; add cl, [rcx+0x29]; ret far; 
0x00000000113782: add [rax], al; add [rax-0x3fcef877], al; ret; 
0x000000000d70c5: add [rax], al; add [rax-0x41], cl; ret; 
0x0000000010dcac: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x102; syscall; 
0x0000000010fd2c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x107; syscall; 
0x0000000010fc6c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x10a; syscall; 
0x0000000011fe1c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x110; syscall; 
0x0000000011fe7c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x11b; syscall; 
0x0000000011faec: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x123; syscall; 
0x0000000010e91c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x124; syscall; 
0x0000000010e97c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x125; syscall; 
0x0000000011fc0c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x126; syscall; 
0x0000000011ff0c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x12c; syscall; 
0x0000000011fa2c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x131; syscall; 
0x0000000011530c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x132; syscall; 
0x0000000012002c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x14a; syscall; 
0x0000000012005c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x14b; syscall; 
0x0000000010e94c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x16; syscall; 
0x0000000010273c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x18; syscall; 
0x00000000118acc: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x1b; syscall; 
0x00000000118a9c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x1c; syscall; 
0x0000000010e8bc: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x20; syscall; 
0x0000000010e8ec: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x21; syscall; 
0x000000000e2dbc: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x25; syscall; 
0x000000000d420c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x26; syscall; 
0x000000001207cc: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x29; syscall; 
0x0000000012018c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x31; syscall; 
0x0000000012028c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x33; syscall; 
0x0000000012025c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x34; syscall; 
0x0000000011336c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x3; syscall; 
0x0000000010ea3c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x50; syscall; 
0x0000000010ea6c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x51; syscall; 
0x0000000010fd5c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x54; syscall; 
0x0000000010fc9c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x59; syscall; 
0x0000000010dbbc: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x5b; syscall; 
0x0000000010f38c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x5c; syscall; 
0x0000000010f3bc: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x5d; syscall; 
0x0000000010f3ec: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x5e; syscall; 
0x000000000e2b9c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x64; syscall; 
0x0000000011fc6c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x67; syscall; 
0x000000000e43cc: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x6d; syscall; 
0x000000000e43fc: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x6f; syscall; 
0x000000000e445c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x70; syscall; 
0x000000000e448c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x76; syscall; 
0x000000000e44bc: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x78; syscall; 
0x0000000011f21c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x7b; syscall; 
0x0000000011f9fc: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x7e; syscall; 
0x0000000011fe4c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x86; syscall; 
0x0000000010da5c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x8a; syscall; 
0x000000001026ac: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x8f; syscall; 
0x000000001026dc: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x90; syscall; 
0x0000000010270c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x91; syscall; 
0x0000000010276c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x92; syscall; 
0x0000000010279c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x93; syscall; 
0x000000001027cc: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x94; syscall; 
0x00000000118b5c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x96; syscall; 
0x00000000118b8c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x97; syscall; 
0x00000000118bbc: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x98; syscall; 
0x0000000011f95c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x9a; syscall; 
0x0000000011fd2c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x9b; syscall; 
0x0000000011518c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0xa1; syscall; 
0x0000000011524c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0xa2; syscall; 
0x0000000011567c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0xa7; syscall; 
0x000000001156ac: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0xa8; syscall; 
0x000000001189cc: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0xa; syscall; 
0x0000000011f03c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0xac; syscall; 
0x0000000011fa5c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0xae; syscall; 
0x0000000011fa8c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0xb0; syscall; 
0x0000000011899c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0xb; syscall; 
0x0000000012008c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0xba; syscall; 
0x0000000011f1bc: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0xbb; syscall; 
0x0000000011cf3c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0xc6; syscall; 
0x0000000011ce1c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0xc7; syscall; 
0x0000000011fabc: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0xd5; syscall; 
0x0000000011f98c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0xe4; syscall; 
0x0000000011fbdc: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0xfd; syscall; 
0x0000000011fc3c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0xff; syscall; 
0x0000000004342c: add [rax], al; add [rax-0x5e1f00d], dl; mov esi, 0x8; mov eax, 0x7f; syscall; 
0x0000000010f41c: add [rax], al; add [rax-0x5e1f00d], dl; mov r10, rcx; mov eax, 0x104; syscall; 
0x0000000010fc0c: add [rax], al; add [rax-0x5e1f00d], dl; mov r10, rcx; mov eax, 0x109; syscall; 
0x0000000010fccc: add [rax], al; add [rax-0x5e1f00d], dl; mov r10, rcx; mov eax, 0x10b; syscall; 
0x0000000011feac: add [rax], al; add [rax-0x5e1f00d], dl; mov r10, rcx; mov eax, 0x11e; syscall; 
0x0000000011ff3c: add [rax], al; add [rax-0x5e1f00d], dl; mov r10, rcx; mov eax, 0x12f; syscall; 
0x0000000011ff9c: add [rax], al; add [rax-0x5e1f00d], dl; mov r10, rcx; mov eax, 0x136; syscall; 
0x000000001207fc: add [rax], al; add [rax-0x5e1f00d], dl; mov r10, rcx; mov eax, 0x35; syscall; 
0x000000001202bc: add [rax], al; add [rax-0x5e1f00d], dl; mov r10, rcx; mov eax, 0x37; syscall; 
0x0000000011fd5c: add [rax], al; add [rax-0x5e1f00d], dl; mov r10, rcx; mov eax, 0x9d; syscall; 
0x0000000011fc9c: add [rax], al; add [rax-0x5e1f00d], dl; mov r10, rcx; mov eax, 0xa5; syscall; 
0x0000000011fb7c: add [rax], al; add [rax-0x5e1f00d], dl; mov r10, rcx; mov eax, 0xaf; syscall; 
0x0000000011cfcc: add [rax], al; add [rax-0x5e1f00d], dl; mov r10, rcx; mov eax, 0xbc; syscall; 
0x0000000011cf6c: add [rax], al; add [rax-0x5e1f00d], dl; mov r10, rcx; mov eax, 0xbd; syscall; 
0x0000000011ce4c: add [rax], al; add [rax-0x5e1f00d], dl; mov r10, rcx; mov eax, 0xbe; syscall; 
0x0000000011cedc: add [rax], al; add [rax-0x5e1f00d], dl; mov r10, rcx; mov eax, 0xc0; syscall; 
0x00000000118afc: add [rax], al; add [rax-0x5e1f00d], dl; mov r10, rcx; mov eax, 0xd8; syscall; 
0x0000000011fb1c: add [rax], al; add [rax-0x5e1f00d], dl; mov r10, rcx; mov eax, 0xe9; syscall; 
0x00000000042a4c: add [rax], al; add [rax-0x5e1f00d], dl; movmskps eax, xmm0; and eax, 0x8; ret; 
0x0000000004250c: add [rax], al; add [rax-0x5e1f00d], dl; pmovmskb eax, xmm0; and eax, 0x8; ret; 
0x0000000014867d: add [rax], al; add [rax-0x73], cl; adc eax, 0xa34d9; jmp qword ptr [rdx+rax*8]; 
0x000000000328ed: add [rax], al; add [rax-0x73], cl; add eax, 0x181a86; ret; 
0x000000000cf68d: add [rax], al; add [rax-0x73], cl; clc; ret; 
0x000000000cf69d: add [rax], al; add [rax-0x73], cl; cld; ret; 
0x000000000e1dd4: add [rax], al; add [rax-0x73], cl; cmp eax, 0x10d702; syscall; 
0x000000000e1c94: add [rax], al; add [rax-0x73], cl; cmp eax, 0x10d842; syscall; 
0x000000000e1bdc: add [rax], al; add [rax-0x73], cl; cmp eax, 0x10d8fa; syscall; 
0x000000000e1b00: add [rax], al; add [rax-0x73], cl; cmp eax, 0x10d9ce; syscall; 
0x000000000e1930: add [rax], al; add [rax-0x73], cl; cmp eax, 0x10db5e; syscall; 
0x000000000e176c: add [rax], al; add [rax-0x73], cl; cmp eax, 0x10dcda; syscall; 
0x000000000e13b2: add [rax], al; add [rax-0x73], cl; cmp eax, 0x10e03c; syscall; 
0x000000000dfea4: add [rax], al; add [rax-0x73], cl; cmp eax, 0x10f4c2; syscall; 
0x000000000dfd64: add [rax], al; add [rax-0x73], cl; cmp eax, 0x10f602; syscall; 
0x000000000dfcac: add [rax], al; add [rax-0x73], cl; cmp eax, 0x10f6ba; syscall; 
0x000000000df8e0: add [rax], al; add [rax-0x73], cl; cmp eax, 0x10fa7e; syscall; 
0x000000000df710: add [rax], al; add [rax-0x73], cl; cmp eax, 0x10fc0e; syscall; 
0x000000000df54c: add [rax], al; add [rax-0x73], cl; cmp eax, 0x10fd8a; syscall; 
0x000000000dec64: add [rax], al; add [rax-0x73], cl; cmp eax, 0x11061a; syscall; 
0x000000000d2bc0: add [rax], al; add [rax-0x73], cl; cmp eax, 0x11c5d6; syscall; 
0x000000000d298c: add [rax], al; add [rax-0x73], cl; cmp eax, 0x11c80a; syscall; 
0x000000000ca660: add [rax], al; add [rax-0x73], cl; cmp eax, 0x126b46; syscall; 
0x0000000009c820: add [rax], al; add [rax-0x73], cl; cmp eax, 0x150356; syscall; 
0x0000000009e1cc: add [rax], al; add [rax-0x73], cl; cmp eax, 0x150d32; syscall; 
0x0000000009dfec: add [rax], al; add [rax-0x73], cl; cmp eax, 0x150f12; syscall; 
0x0000000009de00: add [rax], al; add [rax-0x73], cl; cmp eax, 0x1510fe; syscall; 
0x0000000009dd90: add [rax], al; add [rax-0x73], cl; cmp eax, 0x15116e; syscall; 
0x0000000009db60: add [rax], al; add [rax-0x73], cl; cmp eax, 0x15139e; syscall; 
0x00000000099ac0: add [rax], al; add [rax-0x73], cl; cmp eax, 0x1530b6; syscall; 
0x00000000099a60: add [rax], al; add [rax-0x73], cl; cmp eax, 0x153116; syscall; 
0x000000000996a0: add [rax], al; add [rax-0x73], cl; cmp eax, 0x1534d6; syscall; 
0x00000000099440: add [rax], al; add [rax-0x73], cl; cmp eax, 0x153736; syscall; 
0x00000000098dd8: add [rax], al; add [rax-0x73], cl; cmp eax, 0x153d9e; syscall; 
0x00000000098da0: add [rax], al; add [rax-0x73], cl; cmp eax, 0x153dd6; syscall; 
0x0000000009aa70: add [rax], al; add [rax-0x73], cl; cmp eax, 0x15440e; syscall; 
0x00000000099fd4: add [rax], al; add [rax-0x73], cl; cmp eax, 0x154e9a; syscall; 
0x00000000096041: add [rax], al; add [rax-0x73], cl; cmp eax, 0x158e2d; syscall; 
0x00000000096010: add [rax], al; add [rax-0x73], cl; cmp eax, 0x158e6e; syscall; 
0x00000000095d90: add [rax], al; add [rax-0x73], cl; cmp eax, 0x1590ee; syscall; 
0x0000000009586c: add [rax], al; add [rax-0x73], cl; cmp eax, 0x159612; syscall; 
0x00000000094c51: add [rax], al; add [rax-0x73], cl; cmp eax, 0x159ba5; syscall; 
0x00000000094a7c: add [rax], al; add [rax-0x73], cl; cmp eax, 0x159d7a; syscall; 
0x000000000948e0: add [rax], al; add [rax-0x73], cl; cmp eax, 0x159f16; syscall; 
0x00000000093952: add [rax], al; add [rax-0x73], cl; cmp eax, 0x15ae64; syscall; 
0x00000000093412: add [rax], al; add [rax-0x73], cl; cmp eax, 0x15b3a4; syscall; 
0x0000000009306e: add [rax], al; add [rax-0x73], cl; cmp eax, 0x15b748; syscall; 
0x00000000092d02: add [rax], al; add [rax-0x73], cl; cmp eax, 0x15bab4; syscall; 
0x0000000009167e: add [rax], al; add [rax-0x73], cl; cmp eax, 0x15d138; syscall; 
0x000000000913be: add [rax], al; add [rax-0x73], cl; cmp eax, 0x15d3f8; syscall; 
0x0000000009104a: add [rax], al; add [rax-0x73], cl; cmp eax, 0x15d76c; syscall; 
0x0000000008438f: add [rax], al; add [rax-0x73], cl; cmp eax, 0x16a3e7; syscall; 
0x00000000083f92: add [rax], al; add [rax-0x73], cl; cmp eax, 0x16a7e4; syscall; 
0x00000000083ee7: add [rax], al; add [rax-0x73], cl; cmp eax, 0x16a88f; syscall; 
0x00000000082020: add [rax], al; add [rax-0x73], cl; cmp eax, 0x16f186; syscall; 
0x000000000610d4: add [rax], al; add [rax-0x73], cl; cmp eax, 0x18d672; syscall; 
0x00000000060e50: add [rax], al; add [rax-0x73], cl; cmp eax, 0x18d8f2; syscall; 
0x0000000005ec7c: add [rax], al; add [rax-0x73], cl; cmp eax, 0x18fabe; syscall; 
0x0000000005eb3c: add [rax], al; add [rax-0x73], cl; cmp eax, 0x18fbfe; syscall; 
0x00000000054da0: add [rax], al; add [rax-0x73], cl; cmp eax, 0x199986; syscall; 
0x00000000054bc0: add [rax], al; add [rax-0x73], cl; cmp eax, 0x199b66; syscall; 
0x00000000054690: add [rax], al; add [rax-0x73], cl; cmp eax, 0x19a096; syscall; 
0x000000000522a4: add [rax], al; add [rax-0x73], cl; cmp eax, 0x19c252; syscall; 
0x00000000052128: add [rax], al; add [rax-0x73], cl; cmp eax, 0x19c3ce; syscall; 
0x000000000520f0: add [rax], al; add [rax-0x73], cl; cmp eax, 0x19c406; syscall; 
0x000000000478dc: add [rax], al; add [rax-0x73], cl; cmp eax, 0x1a6bfa; syscall; 
0x0000000004781c: add [rax], al; add [rax-0x73], cl; cmp eax, 0x1a6cba; syscall; 
0x00000000047754: add [rax], al; add [rax-0x73], cl; cmp eax, 0x1a6d82; syscall; 
0x0000000004767c: add [rax], al; add [rax-0x73], cl; cmp eax, 0x1a6e5a; syscall; 
0x00000000046774: add [rax], al; add [rax-0x73], cl; cmp eax, 0x1a750a; syscall; 
0x000000000466af: add [rax], al; add [rax-0x73], cl; cmp eax, 0x1a75cf; syscall; 
0x0000000004650d: add [rax], al; add [rax-0x73], cl; cmp eax, 0x1a7771; syscall; 
0x00000000046433: add [rax], al; add [rax-0x73], cl; cmp eax, 0x1a784b; syscall; 
0x000000000384fd: add [rax], al; add [rax-0x73], cl; cmp eax, 0x1b5731; syscall; 
0x00000000036b7a: add [rax], al; add [rax-0x73], cl; cmp eax, 0x1b707c; syscall; 
0x0000000003583f: add [rax], al; add [rax-0x73], cl; cmp eax, 0x1b830f; syscall; 
0x00000000035822: add [rax], al; add [rax-0x73], cl; cmp eax, 0x1b832c; syscall; 
0x0000000003575a: add [rax], al; add [rax-0x73], cl; cmp eax, 0x1b83f4; syscall; 
0x00000000026074: add [rax], al; add [rax-0x73], cl; cmp eax, 0x1cb132; syscall; 
0x00000000025f08: add [rax], al; add [rax-0x73], cl; cmp eax, 0x1cb29e; syscall; 
0x00000000025de8: add [rax], al; add [rax-0x73], cl; cmp eax, 0x1cb3be; syscall; 
0x00000000022843: add [rax], al; add [rax-0x73], cl; cmp eax, 0x1cb403; syscall; 
0x000000001987ec: add [rax], al; add [rax-0x73], cl; cmp eax, 0x55492; syscall; 
0x000000001989ac: add [rax], al; add [rax-0x73], cl; cmp eax, 0x55e4a; syscall; 
0x00000000198cdc: add [rax], al; add [rax-0x73], cl; cmp eax, 0x57832; syscall; 
0x0000000015e07c: add [rax], al; add [rax-0x73], cl; cmp eax, 0x935d2; syscall; 
0x0000000015cf44: add [rax], al; add [rax-0x73], cl; cmp eax, 0x9470a; syscall; 
0x0000000015ce64: add [rax], al; add [rax-0x73], cl; cmp eax, 0x947ea; syscall; 
0x0000000015cc7c: add [rax], al; add [rax-0x73], cl; cmp eax, 0x949d2; syscall; 
0x0000000015cbec: add [rax], al; add [rax-0x73], cl; cmp eax, 0x94a62; syscall; 
0x0000000015cb4c: add [rax], al; add [rax-0x73], cl; cmp eax, 0x94b02; syscall; 
0x0000000015ca9c: add [rax], al; add [rax-0x73], cl; cmp eax, 0x94bb2; syscall; 
0x0000000015c6cc: add [rax], al; add [rax-0x73], cl; cmp eax, 0x94f82; syscall; 
0x0000000015243c: add [rax], al; add [rax-0x73], cl; cmp eax, 0x9e9aa; syscall; 
0x000000001522dc: add [rax], al; add [rax-0x73], cl; cmp eax, 0x9eb0a; syscall; 
0x000000001520d0: add [rax], al; add [rax-0x73], cl; cmp eax, 0x9ed16; syscall; 
0x00000000151f30: add [rax], al; add [rax-0x73], cl; cmp eax, 0x9eeb6; syscall; 
0x00000000151d9c: add [rax], al; add [rax-0x73], cl; cmp eax, 0x9f04a; syscall; 
0x00000000151c5c: add [rax], al; add [rax-0x73], cl; cmp eax, 0x9f18a; syscall; 
0x00000000151afc: add [rax], al; add [rax-0x73], cl; cmp eax, 0x9f2ea; syscall; 
0x000000001519ec: add [rax], al; add [rax-0x73], cl; cmp eax, 0x9f3fa; syscall; 
0x0000000014e4dc: add [rax], al; add [rax-0x73], cl; cmp eax, 0xa2906; syscall; 
0x0000000014c7e4: add [rax], al; add [rax-0x73], cl; cmp eax, 0xa453a; syscall; 
0x0000000014c6a4: add [rax], al; add [rax-0x73], cl; cmp eax, 0xa467a; syscall; 
0x0000000014c5ec: add [rax], al; add [rax-0x73], cl; cmp eax, 0xa4732; syscall; 
0x0000000014c500: add [rax], al; add [rax-0x73], cl; cmp eax, 0xa4816; syscall; 
0x0000000014c330: add [rax], al; add [rax-0x73], cl; cmp eax, 0xa49b6; syscall; 
0x0000000014c16c: add [rax], al; add [rax-0x73], cl; cmp eax, 0xa4b52; syscall; 
0x000000001467ce: add [rax], al; add [rax-0x73], cl; cmp eax, 0xaa38c; syscall; 
0x00000000144630: add [rax], al; add [rax-0x73], cl; cmp eax, 0xac496; syscall; 
0x000000001442f8: add [rax], al; add [rax-0x73], cl; cmp eax, 0xac7ce; syscall; 
0x00000000143f78: add [rax], al; add [rax-0x73], cl; cmp eax, 0xacb4e; syscall; 
0x00000000143d52: add [rax], al; add [rax-0x73], cl; cmp eax, 0xacd74; syscall; 
0x00000000143bf0: add [rax], al; add [rax-0x73], cl; cmp eax, 0xaced6; syscall; 
0x000000001439b3: add [rax], al; add [rax-0x73], cl; cmp eax, 0xad113; syscall; 
0x00000000142f5c: add [rax], al; add [rax-0x73], cl; cmp eax, 0xadab2; syscall; 
0x00000000142dda: add [rax], al; add [rax-0x73], cl; cmp eax, 0xadc34; syscall; 
0x00000000142da0: add [rax], al; add [rax-0x73], cl; cmp eax, 0xadc6e; syscall; 
0x00000000142c88: add [rax], al; add [rax-0x73], cl; cmp eax, 0xadd86; syscall; 
0x00000000142444: add [rax], al; add [rax-0x73], cl; cmp eax, 0xae5ca; syscall; 
0x0000000014237c: add [rax], al; add [rax-0x73], cl; cmp eax, 0xae692; syscall; 
0x00000000142260: add [rax], al; add [rax-0x73], cl; cmp eax, 0xae7ae; syscall; 
0x00000000140e8d: add [rax], al; add [rax-0x73], cl; cmp eax, 0xaf929; syscall; 
0x0000000013d70c: add [rax], al; add [rax-0x73], cl; cmp eax, 0xb2e02; syscall; 
0x0000000013d410: add [rax], al; add [rax-0x73], cl; cmp eax, 0xb30fe; syscall; 
0x000000001390e0: add [rax], al; add [rax-0x73], cl; cmp eax, 0xb741a; syscall; 
0x00000000138b60: add [rax], al; add [rax-0x73], cl; cmp eax, 0xb797e; syscall; 
0x0000000013899c: add [rax], al; add [rax-0x73], cl; cmp eax, 0xb7afa; syscall; 
0x000000001388d4: add [rax], al; add [rax-0x73], cl; cmp eax, 0xb7b62; syscall; 
0x00000000138794: add [rax], al; add [rax-0x73], cl; cmp eax, 0xb7ca2; syscall; 
0x000000001386dc: add [rax], al; add [rax-0x73], cl; cmp eax, 0xb7d5a; syscall; 
0x00000000137fec: add [rax], al; add [rax-0x73], cl; cmp eax, 0xb8442; syscall; 
0x00000000137ccc: add [rax], al; add [rax-0x73], cl; cmp eax, 0xb8762; syscall; 
0x00000000137b10: add [rax], al; add [rax-0x73], cl; cmp eax, 0xb891e; syscall; 
0x00000000134784: add [rax], al; add [rax-0x73], cl; cmp eax, 0xbbb3a; syscall; 
0x00000000134644: add [rax], al; add [rax-0x73], cl; cmp eax, 0xbbc7a; syscall; 
0x0000000013458c: add [rax], al; add [rax-0x73], cl; cmp eax, 0xbbd32; syscall; 
0x000000001344ac: add [rax], al; add [rax-0x73], cl; cmp eax, 0xbbe0a; syscall; 
0x00000000133fe0: add [rax], al; add [rax-0x73], cl; cmp eax, 0xbc25e; syscall; 
0x00000000133a10: add [rax], al; add [rax-0x73], cl; cmp eax, 0xbc7ce; syscall; 
0x000000001334f0: add [rax], al; add [rax-0x73], cl; cmp eax, 0xbcca6; syscall; 
0x00000000133324: add [rax], al; add [rax-0x73], cl; cmp eax, 0xbce32; syscall; 
0x000000001331e4: add [rax], al; add [rax-0x73], cl; cmp eax, 0xbcf72; syscall; 
0x0000000013312c: add [rax], al; add [rax-0x73], cl; cmp eax, 0xbd02a; syscall; 
0x0000000013304c: add [rax], al; add [rax-0x73], cl; cmp eax, 0xbd102; syscall; 
0x00000000132c30: add [rax], al; add [rax-0x73], cl; cmp eax, 0xbd4d6; syscall; 
0x00000000132614: add [rax], al; add [rax-0x73], cl; cmp eax, 0xbda92; syscall; 
0x000000001324bc: add [rax], al; add [rax-0x73], cl; cmp eax, 0xbdbea; syscall; 
0x000000001323fc: add [rax], al; add [rax-0x73], cl; cmp eax, 0xbdcaa; syscall; 
0x00000000132314: add [rax], al; add [rax-0x73], cl; cmp eax, 0xbdd8a; syscall; 
0x00000000132230: add [rax], al; add [rax-0x73], cl; cmp eax, 0xbde36; syscall; 
0x00000000131bd0: add [rax], al; add [rax-0x73], cl; cmp eax, 0xbe456; syscall; 
0x000000001319c4: add [rax], al; add [rax-0x73], cl; cmp eax, 0xbe61a; syscall; 
0x0000000013186c: add [rax], al; add [rax-0x73], cl; cmp eax, 0xbe772; syscall; 
0x000000001317ac: add [rax], al; add [rax-0x73], cl; cmp eax, 0xbe832; syscall; 
0x000000001316c4: add [rax], al; add [rax-0x73], cl; cmp eax, 0xbe912; syscall; 
0x00000000130ab0: add [rax], al; add [rax-0x73], cl; cmp eax, 0xbf4ae; syscall; 
0x00000000130840: add [rax], al; add [rax-0x73], cl; cmp eax, 0xbf6de; syscall; 
0x000000001300c0: add [rax], al; add [rax-0x73], cl; cmp eax, 0xbfdfe; syscall; 
0x000000001265c4: add [rax], al; add [rax-0x73], cl; cmp eax, 0xc9862; syscall; 
0x00000000126484: add [rax], al; add [rax-0x73], cl; cmp eax, 0xc99a2; syscall; 
0x000000001263cc: add [rax], al; add [rax-0x73], cl; cmp eax, 0xc9a5a; syscall; 
0x00000000125ff2: add [rax], al; add [rax-0x73], cl; cmp eax, 0xc9e2c; syscall; 
0x00000000125df0: add [rax], al; add [rax-0x73], cl; cmp eax, 0xc9ff6; syscall; 
0x00000000125c10: add [rax], al; add [rax-0x73], cl; cmp eax, 0xca18e; syscall; 
0x00000000125a4c: add [rax], al; add [rax-0x73], cl; cmp eax, 0xca30a; syscall; 
0x0000000012597c: add [rax], al; add [rax-0x73], cl; cmp eax, 0xca386; syscall; 
0x000000001258b2: add [rax], al; add [rax-0x73], cl; cmp eax, 0xca450; syscall; 
0x0000000012581d: add [rax], al; add [rax-0x73], cl; cmp eax, 0xca4e5; syscall; 
0x00000000124b14: add [rax], al; add [rax-0x73], cl; cmp eax, 0xcb1ba; syscall; 
0x000000001249d4: add [rax], al; add [rax-0x73], cl; cmp eax, 0xcb2fa; syscall; 
0x0000000012491c: add [rax], al; add [rax-0x73], cl; cmp eax, 0xcb3b2; syscall; 
0x00000000124322: add [rax], al; add [rax-0x73], cl; cmp eax, 0xcb9a4; syscall; 
0x00000000124120: add [rax], al; add [rax-0x73], cl; cmp eax, 0xcbb4e; syscall; 
0x00000000123f40: add [rax], al; add [rax-0x73], cl; cmp eax, 0xcbcc6; syscall; 
0x00000000123d7c: add [rax], al; add [rax-0x73], cl; cmp eax, 0xcbe22; syscall; 
0x0000000011870c: add [rax], al; add [rax-0x73], cl; cmp eax, 0xd713a; syscall; 
0x000000001185f0: add [rax], al; add [rax-0x73], cl; cmp eax, 0xd7256; syscall; 
0x00000000118190: add [rax], al; add [rax-0x73], cl; cmp eax, 0xd76b6; syscall; 
0x00000000117c55: add [rax], al; add [rax-0x73], cl; cmp eax, 0xd7bf1; syscall; 
0x00000000106ac0: add [rax], al; add [rax-0x73], cl; cmp eax, 0xe8af6; syscall; 
0x000000000cf67d: add [rax], al; add [rax-0x73], cl; hlt; ret; 
0x000000000d0960: add [rax], al; add [rax-0x73], cl; mov esp, 0xd024; add [rcx+rcx*4-0x12], cl; call rbp; 
0x0000000004725b: add [rax], al; add [rax-0x73], ecx; mov ebp, 0x908; call qword ptr [rbp+0xf10]; 
0x000000001479cd: add [rax], al; add [rax-0x75], cl; add [rax-0x7b], cl; shl byte ptr [rax+rax*2+0x41], 0x83; call qword ptr [rbx]; 
0x000000000473f7: add [rax], al; add [rax-0x75], cl; add [rbx-0x75], bl; pop rax; ret; 
0x0000000009e54d: add [rax], al; add [rax-0x75], cl; add eax, 0x14d9f9; call qword ptr [rax]; 
0x00000000033d3d: add [rax], al; add [rax-0x75], cl; add eax, 0x1b80a1; mov [rax], rdx; ret; 
0x000000000896d4: add [rax], al; add [rax-0x75], cl; and [r11+rcx*4+0x6d], r9b; sbb [rax-0x77], cl; ret far; 
0x00000000160886: add [rax], al; add [rax-0x75], cl; and al, 0x10; mov rdi, [rsp+0x18]; call rax; 
0x00000000160829: add [rax], al; add [rax-0x75], cl; and al, 0x10; mov rdi, [rsp+0x18]; call rcx; 
0x0000000014ee6d: add [rax], al; add [rax-0x75], cl; and al, 0x8; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x000000000f4e05: add [rax], al; add [rax-0x75], cl; cmp ecx, [rax-0x7d]; ret; 
0x0000000009a9e5: add [rax], al; add [rax-0x75], cl; je short 0x000000000009aa10; mov rdi, r13; call rax; 
0x0000000009bd0d: add [rax], al; add [rax-0x75], cl; je short 0x000000000009bd38; sub [rcx+rcx*4-0x19], cl; call rdx; 
0x00000000144ee0: add [rax], al; add [rax-0x75], cl; je short 0x0000000000144f0b; mov rdi, [rsp+0x38]; call qword ptr [rsp+0x68]; 
0x0000000014d1b7: add [rax], al; add [rax-0x75], cl; je short 0x000000000014d1e2; sbb [rcx+rcx*4-0x19], cl; call qword ptr [rax+0x8]; 
0x0000000009e8bd: add [rax], al; add [rax-0x75], cl; jnp short 0x000000000009e90c; call rax; 
0x0000000010cc92: add [rax], al; add [rax-0x75], cl; mov ebx, 0x80; call qword ptr [rax+0x88]; 
0x0000000011d055: add [rax], al; add [rax-0x75], cl; pop rax; ret; 
0x000000001679ed: add [rax], al; add [rax-0x75], cl; test qword ptr [rbx-0x76b703aa], 0x5789f74f; cld; ret; 
0x00000000148265: add [rax], al; add [rax-0x77], cl; adc bl, r8b; mov dword ptr [rsi], 0x8; ret; 
0x00000000095238: add [rax], al; add [rax-0x77], cl; add eax, 0x15704e; ret; 
0x0000000009520f: add [rax], al; add [rax-0x77], cl; add eax, 0x15706f; ret; 
0x000000000951ef: add [rax], al; add [rax-0x77], cl; add eax, 0x157087; ret; 
0x0000000014ef68: add [rax], al; add [rax-0x77], cl; and al, 0x10; mov rax, [rsp+0x48]; call qword ptr [rax+0x28]; 
0x0000000015f19f: add [rax], al; add [rax-0x77], cl; and al, 0x68; xor eax, eax; call qword ptr [r12+0xf08]; 
0x000000000b92ed: add [rax], al; add [rax-0x77], cl; clc; ret; 
0x0000000018b53d: add [rax], al; add [rax-0x77], cl; clc; vzeroupper; ret; 
0x0000000011c6e7: add [rax], al; add [rax-0x77], cl; enter 0xc031, 0xe8; ret far; 
0x0000000008cf7a: add [rax], al; add [rax-0x77], cl; fidivr st, word ptr [rdi+0x2]; mov eax, r9d; syscall; 
0x0000000008451b: add [rax], al; add [rax-0x77], cl; fimul st, dword ptr [rcx+rcx*4-0x1a]; call qword ptr [r14+0x38]; 
0x0000000004f85d: add [rax], al; add [rax-0x77], cl; fimul st, word ptr [rax+0xf]; mov esi, 0x83480143; ret; 
0x0000000009ae6d: add [rax], al; add [rax-0x77], cl; fistp qword ptr [rax+0xca], st; syscall; 
0x000000000f1e46: add [rax], al; add [rax-0x77], cl; fmul st, dword ptr [rax-0x7d]; ret; 
0x00000000124742: add [rax], al; add [rax-0x77], cl; fucomip st, st(0); ret; 
0x000000000f9213: add [rax], al; add [rax-0x77], cl; jo short 0x00000000000f9204; ret far; 
0x00000000081cf4: add [rax], al; add [rax-0x77], cl; out 0x48, al; mov edi, ebp; call qword ptr [rbx+0x90]; 
0x0000000009df05: add [rax], al; add [rax-0x77], cl; out dx, al; mov rdi, r12; call rax; 
0x0000000008f9e1: add [rax], al; add [rax-0x77], cl; out dx, eax; call qword ptr [r13+0x20]; 
0x0000000014d93f: add [rax], al; add [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x20]; 
0x00000000148327: add [rax], al; add [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x30]; 
0x0000000008f791: add [rax], al; add [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x80]; 
0x00000000082259: add [rax], al; add [rax-0x77], cl; out dx, eax; call qword ptr [rbx+0x80]; 
0x00000000147328: add [rax], al; add [rax-0x77], cl; out dx, eax; lea r9, [rsp+0x20]; call qword ptr [rax]; 
0x0000000014e703: add [rax], al; add [rax-0x77], cl; out dx, eax; mov [r12+0x70], edx; call qword ptr [rax+0x30]; 
0x00000000046da7: add [rax], al; add [rax-0x77], cl; out dx, eax; mov eax, 0xca; syscall; 
0x000000000446e3: add [rax], al; add [rax-0x77], cl; ret far; 
0x0000000005ba8a: add [rax], al; add [rax-0x77], cl; ret; 
0x000000000406b9: add [rax], al; add [rax-0x77], cl; ret; 
0x00000000146a31: add [rax], al; add [rax-0x77], ecx; out dx, eax; call qword ptr [rax+0x18]; 
0x000000001970ec: add [rax], al; add [rax-0x7ab70000], al; ret; 
0x0000000006d384: add [rax], al; add [rax-0x7b], cl; ror byte ptr [rdi], 0x84; call qword ptr [rax+rax]; 
0x0000000009f440: add [rax], al; add [rax-0x7b], cl; shl byte ptr [rax+rcx+0x5b], 0x5d; pop r12; ret; 
0x00000000082b35: add [rax], al; add [rax-0x7b], cl; shl byte ptr [rbx+rdx+0x48], 0x8b; mov edi, 0xe0; jmp rax; 
0x00000000082a55: add [rax], al; add [rax-0x7b], cl; shl byte ptr [rcx+rcx+0x48], 0x8b; mov edi, 0xe0; jmp rax; 
0x0000000009b2ab: add [rax], al; add [rax-0x7d], cl; call far fword ptr [rdi]; 
0x0000000009b2a1: add [rax], al; add [rax-0x7d], cl; call qword ptr [rax]; 
0x0000000009960d: add [rax], al; add [rax-0x7d], cl; jmp qword ptr [rax]; 
0x000000000323fd: add [rax], al; add [rax-0x7d], cl; ret; 
0x0000000011205c: add [rax], al; add [rax-0xefd3418], dl; jmp qword ptr [rsi-0x7d]; 
0x00000000190caa: add [rax], al; add [rax], al; add [rax+0x1478d48], dl; ret; 
0x000000000b92fa: add [rax], al; add [rax], al; add [rax+0x1788168a], dl; lea rax, [rdi+0x1]; ret; 
0x0000000009e88b: add [rax], al; add [rax], al; add [rax+0x1], bh; ret; 
0x00000000041ff4: add [rax], al; add [rax], al; add [rax+0x48c22148], al; mov [rdi], edx; ret; 
0x000000000c2ceb: add [rax], al; add [rax], al; add [rax+0x63], cl; ret; 
0x00000000041fc4: add [rax], al; add [rax], al; add [rax+0x66c22148], al; movq mm0, rdx; ret; 
0x000000000b84bb: add [rax], al; add [rax], al; add [rax+0x78d4837], cl; ret; 
0x000000000f24cb: add [rax], al; add [rax], al; add [rax+0xc], bh; ret; 
0x0000000012a4cb: add [rax], al; add [rax], al; add [rax+0xf], cl; mov esi, 0x8348014b; ret; 
0x0000000004410b: add [rax], al; add [rax], al; add [rax-0x1], bh; ret; 
0x0000000010dcaa: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x102; syscall; 
0x0000000010fd2a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x107; syscall; 
0x0000000010fc6a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x10a; syscall; 
0x0000000011fe1a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x110; syscall; 
0x0000000011fe7a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x11b; syscall; 
0x0000000011faea: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x123; syscall; 
0x0000000010e91a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x124; syscall; 
0x0000000010e97a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x125; syscall; 
0x0000000011fc0a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x126; syscall; 
0x0000000011ff0a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x12c; syscall; 
0x0000000011fa2a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x131; syscall; 
0x0000000011530a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x132; syscall; 
0x0000000012002a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x14a; syscall; 
0x0000000012005a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x14b; syscall; 
0x0000000010e94a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x16; syscall; 
0x0000000010273a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x18; syscall; 
0x00000000118aca: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x1b; syscall; 
0x00000000118a9a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x1c; syscall; 
0x0000000010e8ba: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x20; syscall; 
0x0000000010e8ea: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x21; syscall; 
0x000000000e2dba: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x25; syscall; 
0x000000000d420a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x26; syscall; 
0x000000001207ca: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x29; syscall; 
0x0000000012018a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x31; syscall; 
0x0000000012028a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x33; syscall; 
0x0000000012025a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x34; syscall; 
0x0000000011336a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x3; syscall; 
0x0000000010ea3a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x50; syscall; 
0x0000000010ea6a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x51; syscall; 
0x0000000010fd5a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x54; syscall; 
0x0000000010fc9a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x59; syscall; 
0x0000000010dbba: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x5b; syscall; 
0x0000000010f38a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x5c; syscall; 
0x0000000010f3ba: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x5d; syscall; 
0x0000000010f3ea: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x5e; syscall; 
0x000000000e2b9a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x64; syscall; 
0x0000000011fc6a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x67; syscall; 
0x000000000e43ca: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x6d; syscall; 
0x000000000e43fa: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x6f; syscall; 
0x000000000e445a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x70; syscall; 
0x000000000e448a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x76; syscall; 
0x000000000e44ba: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x78; syscall; 
0x0000000011f21a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x7b; syscall; 
0x0000000011f9fa: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x7e; syscall; 
0x0000000011fe4a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x86; syscall; 
0x0000000010da5a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x8a; syscall; 
0x000000001026aa: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x8f; syscall; 
0x000000001026da: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x90; syscall; 
0x0000000010270a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x91; syscall; 
0x0000000010276a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x92; syscall; 
0x0000000010279a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x93; syscall; 
0x000000001027ca: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x94; syscall; 
0x00000000118b5a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x96; syscall; 
0x00000000118b8a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x97; syscall; 
0x00000000118bba: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x98; syscall; 
0x0000000011f95a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x9a; syscall; 
0x0000000011fd2a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x9b; syscall; 
0x0000000011518a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0xa1; syscall; 
0x0000000011524a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0xa2; syscall; 
0x0000000011567a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0xa7; syscall; 
0x000000001156aa: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0xa8; syscall; 
0x000000001189ca: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0xa; syscall; 
0x0000000011f03a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0xac; syscall; 
0x0000000011fa5a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0xae; syscall; 
0x0000000011fa8a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0xb0; syscall; 
0x0000000011899a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0xb; syscall; 
0x0000000012008a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0xba; syscall; 
0x0000000011f1ba: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0xbb; syscall; 
0x0000000011cf3a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0xc6; syscall; 
0x0000000011ce1a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0xc7; syscall; 
0x0000000011faba: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0xd5; syscall; 
0x0000000011f98a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0xe4; syscall; 
0x0000000011fbda: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0xfd; syscall; 
0x0000000011fc3a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0xff; syscall; 
0x0000000014867b: add [rax], al; add [rax], al; add [rax-0x73], cl; adc eax, 0xa34d9; jmp qword ptr [rdx+rax*8]; 
0x000000000328eb: add [rax], al; add [rax], al; add [rax-0x73], cl; add eax, 0x181a86; ret; 
0x000000000cf68b: add [rax], al; add [rax], al; add [rax-0x73], cl; clc; ret; 
0x000000000cf69b: add [rax], al; add [rax], al; add [rax-0x73], cl; cld; ret; 
0x000000000cf67b: add [rax], al; add [rax], al; add [rax-0x73], cl; hlt; ret; 
0x0000000009e54b: add [rax], al; add [rax], al; add [rax-0x75], cl; add eax, 0x14d9f9; call qword ptr [rax]; 
0x000000000f550b: add [rax], al; add [rax], al; add [rax-0x75], cl; cmp ecx, [rax-0x7d]; ret; 
0x000000000b92eb: add [rax], al; add [rax], al; add [rax-0x77], cl; clc; ret; 
0x000000001940cb: add [rax], al; add [rax], al; add [rax-0x77], cl; ret; 
0x000000001970ea: add [rax], al; add [rax], al; add [rax-0x7ab70000], al; ret; 
0x000000000323fb: add [rax], al; add [rax], al; add [rax-0x7d], cl; ret; 
0x0000000010289b: add [rax], al; add [rax], al; add [rax], al; add [rcx+rcx*4-0x40], al; ret; 
0x0000000010289d: add [rax], al; add [rax], al; add [rax], al; mov eax, r8d; ret; 
0x00000000148aa0: add [rax], al; add [rax], al; add [rax], al; mov rdi, r12; call qword ptr [rax+0x28]; 
0x000000000a20f1: add [rax], al; add [rax], al; add [rbp+0x41], bl; pop rsp; ret; 
0x0000000013a68b: add [rax], al; add [rax], al; add [rbx+0x3b83b], cl; add [rax], al; syscall; 
0x000000000b6ebb: add [rax], al; add [rax], al; add [rbx+0x477880e], cl; mov [rdi], ecx; ret; 
0x0000000017ddcb: add [rax], al; add [rax], al; add [rbx+0x48028901], cl; mov eax, edi; ret; 
0x0000000014dd83: add [rax], al; add [rax], al; add [rbx+0x5d], bl; pop r12; ret; 
0x00000000045f1b: add [rax], al; add [rax], al; add [rbx+rcx*4+0x63], cl; or [rax-0x7d], cl; ret; 
0x00000000141305: add [rax], al; add [rax], al; add [rbx-0x7cb7efab], cl; ret; 
0x000000001411d3: add [rax], al; add [rax], al; add [rbx-0x7cb7efbb], cl; ret; 
0x000000000bcabb: add [rax], al; add [rax], al; add [rbx-0x7cb7fb8d], cl; ret; 
0x000000000bb72b: add [rax], al; add [rax], al; add [rcx+0x1], cl; ret; 
0x000000001786db: add [rax], al; add [rax], al; add [rcx+0x3518911], cl; ret; 
0x0000000013c27b: add [rax], al; add [rax], al; add [rcx+0x63], cl; ret; 
0x00000000148aa1: add [rax], al; add [rax], al; add [rcx+rcx*4-0x19], cl; call qword ptr [rax+0x28]; 
0x0000000009680b: add [rax], al; add [rax], al; add [rcx+rcx*4-0x19], cl; neg rdi; call qword ptr [r13]; 
0x0000000009c99b: add [rax], al; add [rax], al; add [rcx+rcx*4-0x1a], cl; call rax; 
0x0000000010289e: add [rax], al; add [rax], al; add [rcx+rcx*4-0x40], al; ret; 
0x000000001889eb: add [rax], al; add [rax], al; add [rcx+rcx*4-0x40], cl; vzeroupper; ret; 
0x000000000f2d3b: add [rax], al; add [rax], al; add [rcx-0x75], cl; sbb [r9], al; ret far; 
0x000000000bff7b: add [rax], al; add [rax], al; add [rcx-0x7d], cl; ret; 
0x0000000012c4fb: add [rax], al; add [rax], al; add [rcx-0x877b], cl; dec dword ptr [rax-0x7d]; ret; 
0x0000000018bcab: add [rax], al; add [rax], al; add [rcx], dh; ror byte ptr [rbx+0x75163b17], 0xe4; ret; 
0x000000001255d9: add [rax], al; add [rax], al; add [rsi-0x70], ah; endbr64; ret; 
0x00000000178689: add [rax], al; add [rax], al; add [rsi-0x70], ah; mov [rcx], dx; ret; 
0x000000000b7e79: add [rax], al; add [rax], al; add [rsi-0x70], ah; mov [rdi], dx; ret; 
0x000000000cf389: add [rax], al; add [rax], al; add [rsi-0x70], ah; xor rax, rax; ret; 
0x00000000081fbb: add [rax], al; add [rax], al; add al, ch; ret far; 
0x00000000144d19: add [rax], al; add [rax], al; add al, ch; std; ret far; 
0x00000000198a2b: add [rax], al; add [rax], al; add bh, bh; adc ecx, [rax-0x7d]; ret; 
0x000000001951ef: add [rax], al; add [rax], al; add bh, bh; dec dword ptr [rcx+0x21]; ret; 
0x00000000198c1b: add [rax], al; add [rax], al; add bl, al; nop [rax]; ret; 
0x000000000a1fcb: add [rax], al; add [rax], al; add bl, ch; ret far; 
0x000000000b7f4b: add [rax], al; add [rax], al; add bl, dh; movq [rdi-0x1], mm0; ret; 
0x000000000b7f5b: add [rax], al; add [rax], al; add bl, dh; movq [rdi], mm0; ret; 
0x0000000012d86b: add [rax], al; add [rax], al; add bl, dh; nop edx, edi; ret; 
0x000000000cfb2c: add [rax], al; add [rax], al; add rax, 0x3; ret; 
0x0000000009a78c: add [rax], al; add [rax], al; add rsp, 0x18; ret; 
0x0000000009f91c: add [rax], al; add [rax], al; add rsp, 0x8; ret; 
0x0000000004212c: add [rax], al; add [rax], al; addsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x0000000004235c: add [rax], al; add [rax], al; and esi, 0x80000000; mov [rdi], esi; ret; 
0x000000000ac18c: add [rax], al; add [rax], al; bsf eax, eax; add rax, rdi; ret; 
0x000000000ac19c: add [rax], al; add [rax], al; bsf eax, eax; lea rax, [rax+rdi+0x10]; ret; 
0x000000000ac1ac: add [rax], al; add [rax], al; bsf eax, eax; lea rax, [rax+rdi+0x20]; ret; 
0x000000000ac66c: add [rax], al; add [rax], al; bsr eax, eax; lea rax, [rax+rdi+0x10]; ret; 
0x000000000ac67c: add [rax], al; add [rax], al; bsr eax, eax; lea rax, [rax+rdi+0x20]; ret; 
0x000000000ac68c: add [rax], al; add [rax], al; bsr eax, eax; lea rax, [rax+rdi+0x30]; ret; 
0x000000001476c3: add [rax], al; add [rax], al; call qword ptr [rax+0x20]; 
0x00000000146a18: add [rax], al; add [rax], al; call qword ptr [rax+0x28]; 
0x00000000198a2c: add [rax], al; add [rax], al; call qword ptr [rbx]; 
0x0000000013cca9: add [rax], al; add [rax], al; call rax; 
0x00000000112b28: add [rax], al; add [rax], al; cmova eax, edx; ret; 
0x00000000120e3b: add [rax], al; add [rax], al; cmovb rax, rdx; ret; 
0x00000000115739: add [rax], al; add [rax], al; cmove rax, rbx; pop rbx; ret; 
0x000000000a2907: add [rax], al; add [rax], al; cmove rax, rdx; ret; 
0x000000000a28c6: add [rax], al; add [rax], al; cmovne r8, rax; mov rax, r8; ret; 
0x0000000015c525: add [rax], al; add [rax], al; cmovne rax, rdx; add rsp, 0x8; ret; 
0x00000000127b0c: add [rax], al; add [rax], al; cmovns rax, [rbx+0x28]; pop rbx; ret; 
0x0000000011fedc: add [rax], al; add [rax], al; endbr64; mov eax, 0x11f; syscall; 
0x0000000011ff6c: add [rax], al; add [rax], al; endbr64; mov eax, 0x134; syscall; 
0x0000000011fffc: add [rax], al; add [rax], al; endbr64; mov eax, 0x13f; syscall; 
0x0000000014616c: add [rax], al; add [rax], al; endbr64; mov eax, 0x1; ret; 
0x0000000012079c: add [rax], al; add [rax], al; endbr64; mov eax, 0x30; syscall; 
0x000000001202ec: add [rax], al; add [rax], al; endbr64; mov eax, 0x32; syscall; 
0x000000000e319c: add [rax], al; add [rax], al; endbr64; mov eax, 0x3b; syscall; 
0x0000000012103c: add [rax], al; add [rax], al; endbr64; mov eax, 0x44; syscall; 
0x0000000010fcfc: add [rax], al; add [rax], al; endbr64; mov eax, 0x57; syscall; 
0x0000000010fc3c: add [rax], al; add [rax], al; endbr64; mov eax, 0x58; syscall; 
0x0000000011fdec: add [rax], al; add [rax], al; endbr64; mov eax, 0x63; syscall; 
0x0000000011f9cc: add [rax], al; add [rax], al; endbr64; mov eax, 0x7d; syscall; 
0x000000000439ec: add [rax], al; add [rax], al; endbr64; mov eax, 0x83; syscall; 
0x0000000011f40c: add [rax], al; add [rax], al; endbr64; mov eax, 0x87; syscall; 
0x0000000010e12c: add [rax], al; add [rax], al; endbr64; mov eax, 0x8; syscall; 
0x00000000118b2c: add [rax], al; add [rax], al; endbr64; mov eax, 0x95; syscall; 
0x0000000011564c: add [rax], al; add [rax], al; endbr64; mov eax, 0x99; syscall; 
0x0000000011fb4c: add [rax], al; add [rax], al; endbr64; mov eax, 0xb1; syscall; 
0x0000000011fcfc: add [rax], al; add [rax], al; endbr64; mov eax, 0xb4; syscall; 
0x0000000011ceac: add [rax], al; add [rax], al; endbr64; mov eax, 0xc2; syscall; 
0x0000000011cf0c: add [rax], al; add [rax], al; endbr64; mov eax, 0xc3; syscall; 
0x0000000011cdec: add [rax], al; add [rax], al; endbr64; mov eax, 0xc4; syscall; 
0x0000000011cf9c: add [rax], al; add [rax], al; endbr64; mov eax, 0xc5; syscall; 
0x0000000010286c: add [rax], al; add [rax], al; endbr64; mov eax, 0xcb; syscall; 
0x0000000011fbac: add [rax], al; add [rax], al; endbr64; mov eax, 0xfe; syscall; 
0x00000000091f6c: add [rax], al; add [rax], al; endbr64; mov eax, 0xffffffff; ret; 
0x0000000009387c: add [rax], al; add [rax], al; endbr64; mov rax, [rdi+0x68]; ret; 
0x0000000009385c: add [rax], al; add [rax], al; endbr64; mov rax, [rip+0x159d35]; ret; 
0x0000000002f5cc: add [rax], al; add [rax], al; endbr64; mov rax, [rip+0x1be38d]; ret; 
0x00000000025acc: add [rax], al; add [rax], al; endbr64; mov rax, [rip+0x1cb6dd]; ret; 
0x0000000009388c: add [rax], al; add [rax], al; endbr64; mov rax, rdi; ret; 
0x0000000012d86c: add [rax], al; add [rax], al; endbr64; ret; 
0x0000000014684c: add [rax], al; add [rax], al; endbr64; xor eax, eax; ret; 
0x00000000041c98: add [rax], al; add [rax], al; fld st, tbyte ptr [rsp-0x18]; ret; 
0x0000000007d425: add [rax], al; add [rax], al; jmp rax; 
0x0000000005506a: add [rax], al; add [rax], al; jne short 0x0000000000055073; push r10; ret; 
0x00000000055573: add [rax], al; add [rax], al; jne short 0x000000000005557c; push r10; ret; 
0x00000000190cbc: add [rax], al; add [rax], al; lea rax, [rdi+0x2]; ret; 
0x00000000190ccc: add [rax], al; add [rax], al; lea rax, [rdi+0x3]; ret; 
0x00000000190cdc: add [rax], al; add [rax], al; lea rax, [rdi+0x4]; ret; 
0x00000000190cec: add [rax], al; add [rax], al; lea rax, [rdi+0x5]; ret; 
0x00000000190cfc: add [rax], al; add [rax], al; lea rax, [rdi+0x6]; ret; 
0x00000000190d0c: add [rax], al; add [rax], al; lea rax, [rdi+0x8]; ret; 
0x00000000190d1c: add [rax], al; add [rax], al; lea rax, [rdi+0x9]; ret; 
0x00000000190d2c: add [rax], al; add [rax], al; lea rax, [rdi+0xa]; ret; 
0x00000000190d3c: add [rax], al; add [rax], al; lea rax, [rdi+0xb]; ret; 
0x00000000190d4c: add [rax], al; add [rax], al; lea rax, [rdi+0xc]; ret; 
0x00000000190d5c: add [rax], al; add [rax], al; lea rax, [rdi+0xd]; ret; 
0x00000000190d6c: add [rax], al; add [rax], al; lea rax, [rdi+0xe]; ret; 
0x000000000cf69c: add [rax], al; add [rax], al; lea rax, [rdi-0x4]; ret; 
0x000000000cf68c: add [rax], al; add [rax], al; lea rax, [rdi-0x8]; ret; 
0x000000000cf67c: add [rax], al; add [rax], al; lea rax, [rdi-0xc]; ret; 
0x0000000009c23c: add [rax], al; add [rax], al; lea rax, [rdx-0x10]; ret; 
0x000000000328ec: add [rax], al; add [rax], al; lea rax, [rip+0x181a86]; ret; 
0x0000000014867c: add [rax], al; add [rax], al; lea rdx, [rip+0xa34d9]; jmp qword ptr [rdx+rax*8]; 
0x000000000a8a9c: add [rax], al; add [rax], al; mov [rax], ecx; ret; 
0x000000001786dc: add [rax], al; add [rax], al; mov [rcx], edx; mov [rcx+0x3], edx; ret; 
0x000000001786cc: add [rax], al; add [rax], al; mov [rcx], edx; mov [rcx+0x4], dx; ret; 
0x000000001786ac: add [rax], al; add [rax], al; mov [rcx], edx; ret; 
0x0000000017873c: add [rax], al; add [rax], al; mov [rcx], rdx; mov [rcx+0x5], rdx; ret; 
0x0000000017874c: add [rax], al; add [rax], al; mov [rcx], rdx; mov [rcx+0x6], rdx; ret; 
0x0000000017871c: add [rax], al; add [rax], al; mov [rcx], rdx; mov [rcx+0x7], edx; ret; 
0x0000000017875c: add [rax], al; add [rax], al; mov [rcx], rdx; mov [rcx+0x7], rdx; ret; 
0x0000000017870c: add [rax], al; add [rax], al; mov [rcx], rdx; mov [rcx+0x8], dx; ret; 
0x0000000017872c: add [rax], al; add [rax], al; mov [rcx], rdx; mov [rcx+0x8], edx; ret; 
0x0000000017876c: add [rax], al; add [rax], al; mov [rcx], rdx; mov [rcx+0x8], rdx; ret; 
0x000000001786ec: add [rax], al; add [rax], al; mov [rcx], rdx; ret; 
0x000000000b7ecc: add [rax], al; add [rax], al; mov [rdi-0x1], rdx; ret; 
0x000000000b84bc: add [rax], al; add [rax], al; mov [rdi], dh; lea rax, [rdi]; ret; 
0x000000000b6e7c: add [rax], al; add [rax], al; mov [rdi], dh; ret; 
0x000000000a89ac: add [rax], al; add [rax], al; mov [rdi], dx; add rax, rdi; ret; 
0x0000000018a58c: add [rax], al; add [rax], al; mov [rdi], dx; vzeroupper; ret; 
0x000000000a8b6c: add [rax], al; add [rax], al; mov [rdi], ecx; lea rax, [rdi+rdx-0x1]; ret; 
0x000000000b7ebc: add [rax], al; add [rax], al; mov [rdi], edx; mov [rdi+0x4], dx; ret; 
0x000000000b7f2c: add [rax], al; add [rax], al; mov [rdi], rdx; mov [rdi+0x5], rdx; ret; 
0x000000000b7f3c: add [rax], al; add [rax], al; mov [rdi], rdx; mov [rdi+0x6], rdx; ret; 
0x000000000b7f0c: add [rax], al; add [rax], al; mov [rdi], rdx; mov [rdi+0x7], edx; ret; 
0x000000000b7efc: add [rax], al; add [rax], al; mov [rdi], rdx; mov [rdi+0x8], dx; ret; 
0x000000000b7f1c: add [rax], al; add [rax], al; mov [rdi], rdx; mov [rdi+0x8], edx; ret; 
0x000000000b7edc: add [rax], al; add [rax], al; mov [rdi], rdx; ret; 
0x000000000a8b3c: add [rax], al; add [rax], al; mov [rdi], si; lea rax, [rdi+rdx-0x1]; ret; 
0x00000000148264: add [rax], al; add [rax], al; mov [rsi+0x10], rax; ret; 
0x0000000014ef66: add [rax], al; add [rax], al; mov [rsp+0x10], rax; mov rax, [rsp+0x48]; call qword ptr [rax+0x28]; 
0x000000001538e6: add [rax], al; add [rax], al; mov [rsp+0x38], rdx; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x000000000a8a74: add [rax], al; add [rax], al; mov byte ptr [rax], 0x0; ret; 
0x00000000076b03: add [rax], al; add [rax], al; mov byte ptr [rbp-0x508], 0x20; mov [rbp-0x500], rsi; jmp rax; 
0x0000000012176f: add [rax], al; add [rax], al; mov byte ptr [rbp-0x7ca], 0x0; mov byte ptr [rbp-0x7c9], 0x73; syscall; 
0x000000000ec47c: add [rax], al; add [rax], al; mov byte ptr [rdi+0x8], 0x15; mov eax, 0x1; ret; 
0x000000000ec4ac: add [rax], al; add [rax], al; mov byte ptr [rdi+0x8], 0x1a; mov eax, 0x2; ret; 
0x0000000007d23a: add [rax], al; add [rax], al; mov dword ptr [rbp-0x4f8], 0x20; jmp rax; 
0x0000000007f19c: add [rax], al; add [rax], al; mov dword ptr [rbp-0x51c], 0x1; mov r9, rsi; jmp rax; 
0x0000000007f20c: add [rax], al; add [rax], al; mov dword ptr [rbp-0x528], 0x1; mov r9, rsi; jmp rax; 
0x00000000078a9c: add [rax], al; add [rax], al; mov dword ptr [rbp-0x538], 0x1; mov r10, rdx; jmp rax; 
0x00000000102893: add [rax], al; add [rax], al; mov dword ptr fs:[0x40], 0x0; mov eax, r8d; ret; 
0x000000000b7b7c: add [rax], al; add [rax], al; mov dx, [rsi]; mov [rdi], dx; ret; 
0x0000000013bd23: add [rax], al; add [rax], al; mov eax, 0x102; cmovne eax, edx; ret; 
0x00000000057b6d: add [rax], al; add [rax], al; mov eax, 0x1; ret; 
0x00000000057d80: add [rax], al; add [rax], al; mov eax, 0x2; ret; 
0x0000000013c9ec: add [rax], al; add [rax], al; mov eax, 0x7fffffff; ret; 
0x0000000011f7f4: add [rax], al; add [rax], al; mov eax, 0x95; syscall; 
0x000000000f24cc: add [rax], al; add [rax], al; mov eax, 0xc; ret; 
0x0000000004410c: add [rax], al; add [rax], al; mov eax, 0xffffffff; ret; 
0x000000000475b3: add [rax], al; add [rax], al; mov eax, [rax+0x58]; ret; 
0x0000000010289f: add [rax], al; add [rax], al; mov eax, r8d; ret; 
0x0000000013a68c: add [rax], al; add [rax], al; mov edi, [rbx]; mov eax, 0x3; syscall; 
0x0000000016dcac: add [rax], al; add [rax], al; mov edx, [rsi]; mov [rdi], edx; ret; 
0x00000000150985: add [rax], al; add [rax], al; mov esi, [rbx+0x88]; mov rdi, r15; call qword ptr [rax+0x28]; 
0x000000000927c0: add [rax], al; add [rax], al; mov qword ptr [rax+0x8], 0x0; ret; 
0x0000000007d22f: add [rax], al; add [rax], al; mov qword ptr [rbp-0x4d8], 0x0; mov dword ptr [rbp-0x4f8], 0x20; jmp rax; 
0x00000000157d08: add [rax], al; add [rax], al; mov qword ptr [rdi+0x20], 0x0; ret; 
0x0000000009396b: add [rax], al; add [rax], al; mov qword ptr [rip+0x15ae4e], 0x0; ret; 
0x00000000121ca2: add [rax], al; add [rax], al; mov qword ptr [rip+0xca6af], 0x0; ret; 
0x000000001176f2: add [rax], al; add [rax], al; mov qword ptr [rip+0xd808f], 0x0; add rsp, 0x8; ret; 
0x00000000078b04: add [rax], al; add [rax], al; mov r10, [rbp-0x518]; jmp rax; 
0x0000000013f0bc: add [rax], al; add [rax], al; mov r10, rax; mov byte ptr [r10], 0x0; ret; 
0x00000000076d23: add [rax], al; add [rax], al; mov r10, rdx; mov dword ptr [rbp-0x4e0], 0x1; jmp rax; 
0x0000000007800f: add [rax], al; add [rax], al; mov r10, rdx; mov dword ptr [rbp-0x54c], 0x1; jmp rax; 
0x0000000008cd6c: add [rax], al; add [rax], al; mov r8d, 0x1; mov eax, r8d; ret; 
0x0000000007f39c: add [rax], al; add [rax], al; mov r9, [rbp-0x508]; jmp rax; 
0x00000000104dea: add [rax], al; add [rax], al; mov r9, rbx; add r8, r15; call r13; 
0x000000000cfb5c: add [rax], al; add [rax], al; mov rax, 0x2; ret; 
0x000000000cfb6c: add [rax], al; add [rax], al; mov rax, 0x3; ret; 
0x000000000cfb7c: add [rax], al; add [rax], al; mov rax, 0x4; ret; 
0x000000000cfb8c: add [rax], al; add [rax], al; mov rax, 0x5; ret; 
0x000000000cfb9c: add [rax], al; add [rax], al; mov rax, 0x6; ret; 
0x000000000cfbac: add [rax], al; add [rax], al; mov rax, 0x7; ret; 
0x0000000013c96c: add [rax], al; add [rax], al; mov rax, 0xffffffffffffffff; mov rdx, 0xffffffffffffffff; ret; 
0x0000000011d054: add [rax], al; add [rax], al; mov rax, [rax+0x58]; ret; 
0x0000000015710c: add [rax], al; add [rax], al; mov rax, [rdi+0x8]; jmp qword ptr [rax+0x48]; 
0x000000001571bc: add [rax], al; add [rax], al; mov rax, [rdi+0x8]; lea rsi, [rsp+0x4]; call qword ptr [rax+0x40]; 
0x0000000014902c: add [rax], al; add [rax], al; mov rax, [rdi+0x8]; mov rsi, rsp; call qword ptr [rax]; 
0x0000000009e54c: add [rax], al; add [rax], al; mov rax, [rip+0x14d9f9]; call qword ptr [rax]; 
0x000000000328fc: add [rax], al; add [rax], al; mov rax, [rsi+rax*8+0x80]; ret; 
0x00000000160885: add [rax], al; add [rax], al; mov rax, [rsp+0x10]; mov rdi, [rsp+0x18]; call rax; 
0x0000000014ee6c: add [rax], al; add [rax], al; mov rax, [rsp+0x8]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x000000001889ec: add [rax], al; add [rax], al; mov rax, r8; vzeroupper; ret; 
0x000000000b92ec: add [rax], al; add [rax], al; mov rax, rdi; ret; 
0x0000000018b53c: add [rax], al; add [rax], al; mov rax, rdi; vzeroupper; ret; 
0x0000000009e8bc: add [rax], al; add [rax], al; mov rdi, [rbx+0x48]; call rax; 
0x00000000148aa2: add [rax], al; add [rax], al; mov rdi, r12; call qword ptr [rax+0x28]; 
0x0000000009680c: add [rax], al; add [rax], al; mov rdi, r12; neg rdi; call qword ptr [r13]; 
0x00000000154d19: add [rax], al; add [rax], al; mov rdi, r13; call qword ptr [rax+0x28]; 
0x000000001518ac: add [rax], al; add [rax], al; mov rdx, [rdi+0x8]; mov [rsp], rax; call qword ptr [rdx+0x20]; 
0x0000000016daec: add [rax], al; add [rax], al; mov rdx, [rsi]; mov [rdi], rdx; ret; 
0x0000000009bd0c: add [rax], al; add [rax], al; mov rsi, [rsp+0x28]; mov rdi, r12; call rdx; 
0x0000000009a9e4: add [rax], al; add [rax], al; mov rsi, [rsp+0x48]; mov rdi, r13; call rax; 
0x0000000009c99c: add [rax], al; add [rax], al; mov rsi, r12; call rax; 
0x000000000b7f4c: add [rax], al; add [rax], al; movdqu [rdi-0x1], xmm0; ret; 
0x000000000b7f5c: add [rax], al; add [rax], al; movdqu [rdi], xmm0; ret; 
0x00000000087cf5: add [rax], al; add [rax], al; movups [rax+0x40], xmm0; pop rbx; ret; 
0x00000000141a93: add [rax], al; add [rax], al; movups [rax], xmm0; add rsp, 0x8; ret; 
0x0000000012c58a: add [rax], al; add [rax], al; movups [rbp-0x78], xmm7; call rcx; 
0x000000000919f1: add [rax], al; add [rax], al; movups [rbx+0x48], xmm0; pop rbx; ret; 
0x0000000010049a: add [rax], al; add [rax], al; movups [rsi+0x8], xmm0; ret; 
0x000000000bc16c: add [rax], al; add [rax], al; movzx eax, cl; pop rbx; ret; 
0x0000000016ddfc: add [rax], al; add [rax], al; movzx edx, byte ptr [rsi]; mov [rdi], dl; ret; 
0x0000000016dd8c: add [rax], al; add [rax], al; movzx edx, word ptr [rsi]; mov [rdi], dx; ret; 
0x00000000146829: add [rax], al; add [rax], al; nop [rax]; endbr64; ret; 
0x00000000023f18: add [rax], al; add [rax], al; nop [rax]; endbr64; ret; 
0x00000000178678: add [rax], al; add [rax], al; nop [rax]; mov [rcx], dl; ret; 
0x000000000b7e68: add [rax], al; add [rax], al; nop [rax]; mov [rdi], dl; ret; 
0x000000000430b8: add [rax], al; add [rax], al; nop [rax]; mov rax, 0xf; syscall; 
0x000000000b67d8: add [rax], al; add [rax], al; nop [rax]; mov rax, rdi; ret; 
0x000000000b7b58: add [rax], al; add [rax], al; nop [rax]; ret; 
0x00000000192b08: add [rax], al; add [rax], al; nop [rax]; xor eax, eax; ret; 
0x000000000ac709: add [rax], al; add [rax], al; nop [rax]; xor eax, eax; ret; 
0x00000000190cab: add [rax], al; add [rax], al; nop; lea rax, [rdi+0x1]; ret; 
0x00000000190c9b: add [rax], al; add [rax], al; nop; lea rax, [rdi]; ret; 
0x000000000b7e8b: add [rax], al; add [rax], al; nop; mov [rdi-0x1], edx; ret; 
0x000000000b7e9b: add [rax], al; add [rax], al; nop; mov [rdi], edx; ret; 
0x000000000cfb4b: add [rax], al; add [rax], al; nop; mov rax, 0x1; ret; 
0x00000000041ff5: add [rax], al; add [rax], al; or byte ptr [rax+0x21], 0xc2; mov [rdi], rdx; ret; 
0x00000000041fc5: add [rax], al; add [rax], al; or byte ptr [rax+0x21], 0xc2; movq xmm0, rdx; ret; 
0x000000000a20f2: add [rax], al; add [rax], al; pop rbp; pop r12; ret; 
0x000000000ca084: add [rax], al; add [rax], al; pop rbp; ret; 
0x000000000bc127: add [rax], al; add [rax], al; pop rbx; cmove rax, rdx; ret; 
0x0000000002fe0a: add [rax], al; add [rax], al; pop rbx; ret; 
0x00000000024440: add [rax], al; add [rax], al; ret; 
0x0000000013cbbf: add [rax], al; add [rax], al; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000189a1e: add [rax], al; add [rax], al; vzeroupper; ret; 
0x00000000184aec: add [rax], al; add [rax], al; vzeroupper; xor eax, eax; ret; 
0x000000001255da: add [rax], al; add [rax], al; xchg ax, ax; endbr64; ret; 
0x0000000017868a: add [rax], al; add [rax], al; xchg ax, ax; mov [rcx], dx; ret; 
0x000000000b7e7a: add [rax], al; add [rax], al; xchg ax, ax; mov [rdi], dx; ret; 
0x000000000cf38a: add [rax], al; add [rax], al; xchg ax, ax; xor rax, rax; ret; 
0x0000000009ef66: add [rax], al; add [rax], al; xor eax, eax; mov [rdi], rsi; ret; 
0x00000000040ff4: add [rax], al; add [rax], al; xor eax, eax; ret; 
0x0000000008e334: add [rax], al; add [rax], al; xor r8d, r8d; mov rax, r8; ret; 
0x000000000cf6ac: add [rax], al; add [rax], al; xor rax, rax; ret; 
0x000000000a0335: add [rax], al; add [rax], dl; lea rax, [rip+0x1b0d0]; cmove rax, rdx; ret; 
0x00000000153cd4: add [rax], al; add [rax], eax; add [rax], al; call qword ptr [rax+0x18]; 
0x00000000153cc9: add [rax], al; add [rax], eax; add [rax], al; mov dword ptr [rsp+0xb8], 0x1; call qword ptr [rax+0x18]; 
0x00000000153eaf: add [rax], al; add [rax], eax; add [rax], al; movups [rsp+0xb8], xmm5; call rax; 
0x0000000014a242: add [rax], al; add [rbp+0x10], dh; add rsp, 0x40; pop rbx; ret; 
0x00000000120eaa: add [rax], al; add [rbp+0x10], dh; add rsp, 0xa0; pop rbx; ret; 
0x0000000008dc05: add [rax], al; add [rbp+0x11], dh; add rsp, 0x48; ret; 
0x00000000115821: add [rax], al; add [rbp+0x11], dh; add rsp, 0x58; ret; 
0x000000000d0220: add [rax], al; add [rbp+0x14], dh; add rsp, 0x28; ret; 
0x0000000012df7c: add [rax], al; add [rbp+0x14], dh; add rsp, 0xd8; ret; 
0x0000000011f0e6: add [rax], al; add [rbp+0x18], dh; add rsp, 0x68; ret; 
0x0000000013e156: add [rax], al; add [rbp+0x1a], dh; add rsp, 0x20; pop rbx; ret; 
0x000000000439c3: add [rax], al; add [rbp+0x1a], dh; add rsp, 0x40; pop rbx; ret; 
0x0000000005b5e0: add [rax], al; add [rbp+0x1b], dh; add rsp, 0x450; pop rbp; ret; 
0x00000000151640: add [rax], al; add [rbp+0x1c], dh; add rsp, 0x10; pop rbx; ret; 
0x0000000005b8a2: add [rax], al; add [rbp+0x1e], dh; add rsp, 0x38; ret; 
0x000000000ca0e0: add [rax], al; add [rbp+0x1f], dh; add rsp, 0x20; pop rbx; ret; 
0x0000000013b4bd: add [rax], al; add [rbp+0x20850fdb], al; add [rax], eax; add [rax+0x63], cl; ret; 
0x00000000154140: add [rax], al; add [rbp+0x23], dh; add rsp, 0x28; ret; 
0x00000000113aba: add [rax], al; add [rbp+0x25], dh; mov eax, r9d; add rsp, 0x38; ret; 
0x00000000043049: add [rax], al; add [rbp+0x26], dh; mov eax, r8d; add rsp, 0x118; ret; 
0x000000001365fc: add [rax], al; add [rbp+0x28], dh; add rsp, 0x38; ret; 
0x000000000d2500: add [rax], al; add [rbp+0x29], al; ret far; 
0x000000000d276b: add [rax], al; add [rbp+0x29], al; ret; 
0x000000000d1066: add [rax], al; add [rbp+0x29], dh; add rsp, 0x28; ret; 
0x00000000149591: add [rax], al; add [rbp+0x2c], dh; add rsp, 0x10; pop rbx; ret; 
0x0000000015c9df: add [rax], al; add [rbp+0x30], dh; add rsp, 0x18; ret; 
0x000000000c05c7: add [rax], al; add [rbp+0x31], al; imul cl; ret; 
0x000000000a0b2e: add [rax], al; add [rbp+0x31], al; ror byte ptr [rcx-0x39], cl; ret; 
0x0000000015ccd6: add [rax], al; add [rbp+0x31], dh; add rsp, 0x10; pop rbp; ret; 
0x0000000014962f: add [rax], al; add [rbp+0x31], dh; add rsp, 0x10; pop rbx; ret; 
0x00000000115971: add [rax], al; add [rbp+0x37], dh; add rsp, 0x68; ret; 
0x0000000015f931: add [rax], al; add [rbp+0x38], dh; add rsp, 0x58; ret; 
0x0000000013f055: add [rax], al; add [rbp+0x39], al; ret far; 
0x000000001970ab: add [rax], al; add [rbp+0x39], cl; ret; 
0x0000000005506b: add [rax], al; add [rbp+0x3], dh; push r10; ret; 
0x00000000116b95: add [rax], al; add [rbp+0x3b], dh; add rsp, 0x38; ret; 
0x00000000116c64: add [rax], al; add [rbp+0x3c], dh; add rsp, 0x38; ret; 
0x0000000015fc8a: add [rax], al; add [rbp+0x3d], dh; add rsp, 0x38; ret; 
0x00000000155cae: add [rax], al; add [rbp+0x3f], dh; add rsp, 0x10; pop rbx; ret; 
0x0000000014901e: add [rax], al; add [rbp+0x40], dh; add rsp, 0x10; pop rbx; ret; 
0x0000000011f25c: add [rax], al; add [rbp+0x411d75c0], al; mov ecx, 0x8; mov eax, 0x119; syscall; 
0x00000000060f3b: add [rax], al; add [rbp+0x41], bl; pop rsp; pop r13; ret; 
0x000000000436f7: add [rax], al; add [rbp+0x41], bl; pop rsp; ret; 
0x000000001561ce: add [rax], al; add [rbp+0x41], dh; add rsp, 0x10; pop rbx; ret; 
0x0000000009922c: add [rax], al; add [rbp+0x41], dh; add rsp, 0x40; pop rbp; ret; 
0x000000000e3693: add [rax], al; add [rbp+0x41], dh; mov rbx, [rbp-0x8]; leave; ret; 
0x00000000155d7e: add [rax], al; add [rbp+0x42], dh; add rsp, 0x10; pop rbp; ret; 
0x000000001571ae: add [rax], al; add [rbp+0x42], dh; add rsp, 0x10; pop rbx; ret; 
0x0000000004325d: add [rax], al; add [rbp+0x42], dh; mov eax, r9d; add rsp, 0x148; ret; 
0x0000000011454c: add [rax], al; add [rbp+0x451d75c0], al; xor eax, eax; mov eax, 0x127; syscall; 
0x0000000011460c: add [rax], al; add [rbp+0x451d75c0], al; xor eax, eax; mov eax, 0x128; syscall; 
0x000000000e2d0c: add [rax], al; add [rbp+0x451d75c0], al; xor eax, eax; mov eax, 0xf7; syscall; 
0x0000000015642e: add [rax], al; add [rbp+0x46], dh; add rsp, 0x10; pop rbx; ret; 
0x00000000121130: add [rax], al; add [rbp+0x46], dh; add rsp, 0x58; ret; 
0x000000001133f8: add [rax], al; add [rbp+0x46], dh; add rsp, 0x68; ret; 
0x00000000113487: add [rax], al; add [rbp+0x47], dh; add rsp, 0x18; ret; 
0x0000000011353f: add [rax], al; add [rbp+0x47], dh; add rsp, 0x58; ret; 
0x0000000015fa28: add [rax], al; add [rbp+0x47], dh; add rsp, 0x68; ret; 
0x0000000010f332: add [rax], al; add [rbp+0x49], dh; add rsp, 0x130; pop rbp; ret; 
0x000000001135dd: add [rax], al; add [rbp+0x49], dh; add rsp, 0x58; ret; 
0x0000000015fbc1: add [rax], al; add [rbp+0x4e], dh; add rsp, 0x68; ret; 
0x000000000df43c: add [rax], al; add [rbp+0x52], dh; add rsp, 0x38; ret; 
0x000000001029ce: add [rax], al; add [rbp+0x53], dh; add rsp, 0x38; ret; 
0x00000000042bc2: add [rax], al; add [rbp+0x5], dh; add rsp, 0x18; ret; 
0x00000000047470: add [rax], al; add [rbp+0x5], dh; add rsp, 0x28; ret; 
0x00000000136699: add [rax], al; add [rbp+0x5], dh; add rsp, 0x38; ret; 
0x00000000155bb3: add [rax], al; add [rbp+0x5], dh; add rsp, 0x48; ret; 
0x00000000153902: add [rax], al; add [rbp+0x5], dh; add rsp, 0x78; ret; 
0x000000001149bc: add [rax], al; add [rbp+0x5a], dh; add rsp, 0x38; ret; 
0x000000000e452c: add [rax], al; add [rbp+0x62], dh; add rsp, 0x38; ret; 
0x0000000010d35d: add [rax], al; add [rbp+0x6], dh; add rsp, 0x10; pop rbp; ret; 
0x00000000157b77: add [rax], al; add [rbp+0x6], dh; add rsp, 0x10; pop rbx; ret; 
0x000000000d029a: add [rax], al; add [rbp+0x6], dh; add rsp, 0x40; pop rbp; ret; 
0x00000000151c09: add [rax], al; add [rbp+0x6c], dh; add rsp, 0x30; pop rbx; ret; 
0x00000000151992: add [rax], al; add [rbp+0x73], dh; add rsp, 0x10; pop r12; ret; 
0x00000000114b11: add [rax], al; add [rbp+0x75], dh; add rsp, 0x38; ret; 
0x0000000013e38e: add [rax], al; add [rbp+0x7850fff], al; add al, 0x0; add [rcx-0x7d], al; ret; 
0x000000001448da: add [rax], al; add [rbp+0x7], dh; add rsp, 0x10; pop r12; ret; 
0x00000000112a82: add [rax], al; add [rbp+0x7f], dh; add rsp, 0x40; pop r12; ret; 
0x00000000042f1c: add [rax], al; add [rbp+0x8], dh; add rsp, 0x148; ret; 
0x0000000011bff8: add [rax], al; add [rbp+0x8], dh; add rsp, 0x418; ret; 
0x0000000004377f: add [rax], al; add [rbp+0x8], dh; add rsp, 0x98; ret; 
0x0000000004444f: add [rax], al; add [rbp+0x8], dh; add rsp, 0xa8; ret; 
0x00000000052c32: add [rax], al; add [rbp+0x8], dh; add rsp, 0xd8; ret; 
0x00000000157aaa: add [rax], al; add [rbp+0x8], dh; movzx eax, al; add rsp, 0x18; ret; 
0x0000000010fbc0: add [rax], al; add [rbp+0x8], dh; movzx eax, al; add rsp, 0x58; ret; 
0x00000000062870: add [rax], al; add [rbp+0x9], dh; add rsp, 0x1010; pop rbp; ret; 
0x00000000157a36: add [rax], al; add [rbp+0x9], dh; add rsp, 0x90; pop rbx; ret; 
0x000000000ddc82: add [rax], al; add [rbp+0x9], dh; add rsp, 0xe0; pop rbx; ret; 
0x0000000012f5c5: add [rax], al; add [rbp+0xb], dh; add rsp, 0x28; ret; 
0x00000000113b2a: add [rax], al; add [rbp+0xc], dh; add rsp, 0x18; ret; 
0x0000000004237f: add [rax], al; add [rbp+0xc], dh; test eax, 0x7fffff; je short 0x0000000000042390; ret; 
0x0000000012de86: add [rax], al; add [rbp+0xd], dh; add rsp, 0xd8; ret; 
0x00000000062e14: add [rax], al; add [rbp+0xe], dh; add rsp, 0x18; ret; 
0x00000000143cf7: add [rax], al; add [rbp+0xf7175c0], al; mov cl, 0x15; ret far; 
0x000000000435f1: add [rax], al; add [rbp+0xf], dh; add rsp, 0x118; ret; 
0x00000000151bb7: add [rax], al; add [rbp+rcx*4+0x4c], cl; and al, 0x14; call qword ptr [rax]; 
0x0000000015238d: add [rax], al; add [rbp+rcx*4+0x4c], cl; and al, 0x1c; call qword ptr [rax]; 
0x00000000023a72: add [rax], al; add [rbp-0x3c], dh; ret; 
0x0000000010ded8: add [rax], al; add [rbp-0x479e8a40], al; add [rcx], eax; add [rax], al; syscall; 
0x0000000010c18c: add [rax], al; add [rbp-0x47ea8a40], al; adc [rax], eax; add [rax], al; syscall; 
0x0000000011f4fc: add [rax], al; add [rbp-0x47ea8a40], al; adc al, 0x1; add [rax], al; syscall; 
0x0000000010c23c: add [rax], al; add [rbp-0x47ea8a40], al; adc al, [rax]; add [rax], al; syscall; 
0x0000000011f65c: add [rax], al; add [rbp-0x47ea8a40], al; adc eax, [rcx]; add [rax], al; syscall; 
0x00000000120b0c: add [rax], al; add [rbp-0x47ea8a40], al; and [rcx], al; add [rax], al; syscall; 
0x000000001206ac: add [rax], al; add [rbp-0x47ea8a40], al; sub al, 0x0; add [rax], al; syscall; 
0x00000000120bbc: add [rax], al; add [rbp-0x47ea8a40], al; sub eax, [rcx]; add [rax], al; syscall; 
0x00000000120c6c: add [rax], al; add [rbp-0x47ea8a40], al; xor eax, [rcx]; add [rax], al; syscall; 
0x000000001144a9: add [rax], al; add [rbp-0x47ef8a40], al; adc al, 0x0; add [rax], al; syscall; 
0x00000000114409: add [rax], al; add [rbp-0x47ef8a40], al; adc eax, [rax]; add [rax], al; syscall; 
0x0000000010e099: add [rax], al; add [rbp-0x47ef8a40], al; add [rax], eax; add [rax], al; syscall; 
0x0000000010e839: add [rax], al; add [rbp-0x47ef8a40], al; add eax, [rax]; add [rax], al; syscall; 
0x000000000e2e69: add [rax], al; add [rbp-0x47ef8a40], al; and al, [rax]; add [rax], al; syscall; 
0x00000000118a09: add [rax], al; add [rbp-0x47ef8a40], al; sbb al, [rax]; add [rax], al; syscall; 
0x000000001201c9: add [rax], al; add [rbp-0x47ef8a40], al; sub al, [rax]; add [rax], al; syscall; 
0x000000001200f9: add [rax], al; add [rbp-0x47ef8a40], al; sub eax, [rax]; add [rax], al; syscall; 
0x0000000011f729: add [rax], al; add [rbp-0x47ef8a40], al; xor [rcx], al; add [rax], al; syscall; 
0x0000000010bf2a: add [rax], al; add [rbp-0x76b7febd], cl; ret; 
0x000000000ea015: add [rax], al; add [rbp-0x77], cl; fmul st, qword ptr [rax-0x77]; ret far; 
0x0000000017fa98: add [rax], al; add [rbp-0x77], cl; ret far; 
0x0000000015598e: add [rax], al; add [rbp-0x7b], al; in al, 0x74; ret; 
0x00000000077559: add [rax], al; add [rbp-0x7b], al; ror byte ptr [rdi], 0x88; ret far; 
0x00000000049b69: add [rax], al; add [rbp-0x7b], al; test byte ptr [rdi], 0x84; ret; 
0x00000000184a58: add [rax], al; add [rbx+0x14840c0], al; clc; vzeroupper; ret; 
0x00000000098d39: add [rax], al; add [rbx+0x153e3d2d], al; add [rcx], al; pop rbp; ret; 
0x000000000900dd: add [rax], al; add [rbx+0x31], bl; rcr byte ptr [rbp+0x41], 0x5c; ret; 
0x0000000013a68d: add [rax], al; add [rbx+0x3b83b], cl; add [rax], al; syscall; 
0x000000000b7bad: add [rax], al; add [rbx+0x4568a0e], cl; mov [rdi], ecx; mov [rdi+0x4], dl; ret; 
0x000000000b84fd: add [rax], al; add [rbx+0x477880e], cl; mov [rdi], ecx; lea rax, [rdi+0x4]; ret; 
0x000000000b6ebd: add [rax], al; add [rbx+0x477880e], cl; mov [rdi], ecx; ret; 
0x0000000017ddcd: add [rax], al; add [rbx+0x48028901], cl; mov eax, edi; ret; 
0x000000000bc128: add [rax], al; add [rbx+0x48], bl; cmove eax, edx; ret; 
0x000000000ec840: add [rax], al; add [rbx+0x5b010447], al; pop rbp; pop r12; ret; 
0x000000000442ca: add [rax], al; add [rbx+0x5d], bl; pop r12; pop r13; ret; 
0x00000000043580: add [rax], al; add [rbx+0x5d], bl; pop r12; ret; 
0x000000000832fc: add [rax], al; add [rbx+0x5d], bl; ret; 
0x0000000010d126: add [rax], al; add [rbx+0x87702fe], al; mov [rdi+0x10c], esi; xor eax, eax; ret; 
0x00000000150986: add [rax], al; add [rbx+0x88b3], cl; add [rcx+rcx*4-0x1], cl; call qword ptr [rax+0x28]; 
0x0000000016dc3d: add [rax], al; add [rbx+0xe8b0156], cl; mov [rdi+0x1], edx; mov [rdi], ecx; ret; 
0x0000000016dbcd: add [rax], al; add [rbx+0xe8b0256], cl; mov [rdi+0x2], edx; mov [rdi], ecx; ret; 
0x0000000016db5d: add [rax], al; add [rbx+0xe8b0356], cl; mov [rdi+0x3], edx; mov [rdi], ecx; ret; 
0x0000000018f8b8: add [rax], al; add [rbx+rax-0x9], bh; fadd st, st(3); ret; 
0x00000000045f1d: add [rax], al; add [rbx+rcx*4+0x63], cl; or [rax-0x7d], cl; ret; 
0x000000000d4857: add [rax], al; add [rbx-0x13f7b], cl; jmp far fword ptr [rbx]; 
0x000000000edf92: add [rax], al; add [rbx-0x157cfe15], al; add [rax+0x63], ecx; ret; 
0x000000000edf93: add [rax], al; add [rbx-0x157cfe15], al; add [rax+0x63], ecx; ret; 
0x00000000156c05: add [rax], al; add [rbx-0x2c8afe08], al; mov rax, [rdi+0x8]; mov rsi, rsp; call qword ptr [rax]; 
0x00000000150757: add [rax], al; add [rbx-0x37f0fe18], al; mov [rdx], eax; mov eax, 0x1; ret; 
0x000000000bc1fc: add [rax], al; add [rbx-0x3d], bl; mov eax, 0x10; pop rbx; ret; 
0x000000000bc1f5: add [rax], al; add [rbx-0x3d], bl; mov eax, 0x20; pop rbx; ret; 
0x000000000bc1ed: add [rax], al; add [rbx-0x3d], bl; mov eax, 0x30; pop rbx; ret; 
0x000000000bc1e7: add [rax], al; add [rbx-0x3d], bl; mov eax, 0x40; pop rbx; ret; 
0x000000000bc20a: add [rax], al; add [rbx-0x3d], bl; mov eax, 0x80; pop rbx; ret; 
0x000000000bc203: add [rax], al; add [rbx-0x3d], bl; mov eax, 0x8; pop rbx; ret; 
0x0000000011cdad: add [rax], al; add [rbx-0x3f7ac7c0], cl; cmove eax, edx; ret; 
0x0000000007e776: add [rax], al; add [rbx-0x50743], al; call qword ptr [rax]; 
0x00000000150734: add [rax], al; add [rbx-0x7637f100], cl; ror byte ptr [rax-0x77], 0x2; mov eax, 0x1; ret; 
0x0000000013c21f: add [rax], al; add [rbx-0x77], dl; ret far; 
0x0000000013c19e: add [rax], al; add [rbx-0x77bffe12], al; ja short 0x000000000013c1a9; ret; 
0x00000000102e75: add [rax], al; add [rbx-0x7bf00001], al; ret; 
0x000000000bf211: add [rax], al; add [rbx-0x7bf0cf03], al; ret; 
0x0000000015d14d: add [rax], al; add [rbx-0x7c99fa17], al; stc; add esi, [rsi+0x7]; ret; 
0x00000000141307: add [rax], al; add [rbx-0x7cb7efab], cl; ret; 
0x000000001411d5: add [rax], al; add [rbx-0x7cb7efbb], cl; ret; 
0x000000000bcabd: add [rax], al; add [rbx-0x7cb7fb8d], cl; ret; 
0x00000000188fd1: add [rax], al; add [rbx-0x7cf0fb06], al; ret; 
0x0000000006dc9e: add [rax], al; add [rbx-0x9bef71d], al; ret; 
0x0000000012338d: add [rax], al; add [rcx+0x104e23c1], cl; lea rcx, [rsi+rcx*4]; add eax, [rcx+rdx]; ret; 
0x00000000123ae5: add [rax], al; add [rcx+0x107223c6], cl; lea rdx, [rdx+rsi*4]; add eax, [rdx+rcx]; ret; 
0x000000000531dd: add [rax], al; add [rcx+0x1], cl; ret; 
0x00000000194c0f: add [rax], al; add [rcx+0x21], cl; ret; 
0x000000000d6c19: add [rax], al; add [rcx+0x29], al; ret; 
0x0000000007dd16: add [rax], al; add [rcx+0x29], cl; ret far; 
0x000000001190a0: add [rax], al; add [rcx+0x312b0102], cl; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x5d], bl; ret; 
0x000000001786dd: add [rax], al; add [rcx+0x3518911], cl; ret; 
0x000000000f8789: add [rax], al; add [rcx+0x39], al; ret; 
0x0000000005f399: add [rax], al; add [rcx+0x39], cl; ret; 
0x00000000160ba0: add [rax], al; add [rcx+0x3eb8c7], cl; add [rax], al; syscall; 
0x00000000042ffc: add [rax], al; add [rcx+0x48050fc8], cl; mov edi, eax; mov eax, 0xba; syscall; 
0x0000000012cfc1: add [rax], al; add [rcx+0x5c], al; pop rbp; ret; 
0x000000000dd429: add [rax], al; add [rcx+0x5d], al; pop r14; jmp rax; 
0x000000000cd848: add [rax], al; add [rcx+0x63], cl; ret; 
0x0000000010c959: add [rax], al; add [rcx+0xe82484], cl; add [rax], al; mov eax, 0xe; syscall; 
0x000000001506e6: add [rax], al; add [rcx+0xf], al; adc [rax+0x20], edx; ret; 
0x0000000014fdc3: add [rax], al; add [rcx+0xf], al; adc [rax+0x8], eax; ret; 
0x000000000eb78d: add [rax], al; add [rcx+0xf], al; mov dh, 0x43; add cl, [rcx-0x7d]; ret; 
0x0000000011b3fb: add [rax], al; add [rcx+rcx*4+0x44], cl; and al, 0x8; mov rdi, [r8]; call rbx; 
0x00000000154b16: add [rax], al; add [rcx+rcx*4-0x11], cl; call qword ptr [rax+0x28]; 
0x00000000047139: add [rax], al; add [rcx+rcx*4-0x11], cl; mov eax, 0xca; syscall; 
0x0000000009e0e8: add [rax], al; add [rcx+rcx*4-0x11], cl; mov rdx, rbp; mov rsi, r12; call rax; 
0x000000000d0968: add [rax], al; add [rcx+rcx*4-0x12], cl; call rbp; 
0x00000000083bf2: add [rax], al; add [rcx+rcx*4-0x12], cl; mov rdi, r15; call qword ptr [r14+0x38]; 
0x0000000008f32c: add [rax], al; add [rcx+rcx*4-0x12], cl; mov rdi, rbx; call qword ptr [rbp+0x70]; 
0x0000000008e75b: add [rax], al; add [rcx+rcx*4-0x16], cl; mov rsi, r12; mov rdi, rbp; call qword ptr [r15+0x40]; 
0x0000000008f18e: add [rax], al; add [rcx+rcx*4-0x16], cl; mov rsi, r15; mov rdi, rbp; call qword ptr [rax+0x40]; 
0x000000001214b9: add [rax], al; add [rcx+rcx*4-0x19], al; mov eax, 0x14; syscall; 
0x00000000148aa3: add [rax], al; add [rcx+rcx*4-0x19], cl; call qword ptr [rax+0x28]; 
0x00000000046b50: add [rax], al; add [rcx+rcx*4-0x19], cl; mov eax, 0xca; syscall; 
0x0000000009680d: add [rax], al; add [rcx+rcx*4-0x19], cl; neg rdi; call qword ptr [r13]; 
0x000000001509a1: add [rax], al; add [rcx+rcx*4-0x1], cl; add dword ptr [rax], 0x1; mov rax, [rbx+0x60]; call qword ptr [rax+0x8]; 
0x0000000008954d: add [rax], al; add [rcx+rcx*4-0x1], cl; call qword ptr [r13+0x80]; 
0x0000000015098c: add [rax], al; add [rcx+rcx*4-0x1], cl; call qword ptr [rax+0x28]; 
0x00000000089743: add [rax], al; add [rcx+rcx*4-0x1], cl; call qword ptr [rbp+0x80]; 
0x0000000009c168: add [rax], al; add [rcx+rcx*4-0x1], cl; mov eax, 0xca; syscall; 
0x0000000009c99d: add [rax], al; add [rcx+rcx*4-0x1a], cl; call rax; 
0x0000000009dca0: add [rax], al; add [rcx+rcx*4-0x1a], cl; mov rdi, rbp; call rax; 
0x00000000112a62: add [rax], al; add [rcx+rcx*4-0x1e], cl; mov eax, 0x10f; syscall; 
0x000000000833e1: add [rax], al; add [rcx+rcx*4-0x1e], cl; mov rsi, r14; mov rdi, rbx; call qword ptr [r15+0x38]; 
0x00000000082dab: add [rax], al; add [rcx+rcx*4-0x1e], cl; mov rsi, rbp; mov rdi, rbx; call qword ptr [r13+0x38]; 
0x00000000084e05: add [rax], al; add [rcx+rcx*4-0x1e], cl; mov rsi, rbp; mov rdi, rbx; call qword ptr [r13+0x58]; 
0x00000000084c5d: add [rax], al; add [rcx+rcx*4-0x1e], cl; mov rsi, rbp; mov rdi, rbx; call qword ptr [rax+0x58]; 
0x0000000009d746: add [rax], al; add [rcx+rcx*4-0x20], al; pop r12; ret; 
0x0000000015e252: add [rax], al; add [rcx+rcx*4-0x20], al; pop rbp; pop r12; ret; 
0x000000000d008e: add [rax], al; add [rcx+rcx*4-0x20], cl; pop r12; ret; 
0x0000000004128b: add [rax], al; add [rcx+rcx*4-0x28], cl; ret; 
0x0000000008cf82: add [rax], al; add [rcx+rcx*4-0x38], al; syscall; 
0x0000000004332e: add [rax], al; add [rcx+rcx*4-0x3a], cl; mov eax, 0xe; syscall; 
0x0000000011736c: add [rax], al; add [rcx+rcx*4-0x40], al; add rsp, 0x8; ret; 
0x0000000015ce83: add [rax], al; add [rcx+rcx*4-0x40], al; mov qword ptr [rdx], 0x0; ret; 
0x0000000002f732: add [rax], al; add [rcx+rcx*4-0x40], al; pop rbp; pop r12; ret; 
0x00000000081a70: add [rax], al; add [rcx+rcx*4-0x40], al; pop rbx; pop rbp; ret; 
0x000000000d11d1: add [rax], al; add [rcx+rcx*4-0x40], al; pop rbx; ret; 
0x0000000008cd73: add [rax], al; add [rcx+rcx*4-0x40], al; ret; 
0x000000001532dc: add [rax], al; add [rcx+rcx*4-0x40], cl; pop rbx; ret; 
0x000000000980ce: add [rax], al; add [rcx+rcx*4-0x40], cl; ret; 
0x0000000018d2d0: add [rax], al; add [rcx+rcx*4-0x40], cl; shr rax, 0x2; vzeroupper; ret; 
0x0000000018892d: add [rax], al; add [rcx+rcx*4-0x40], cl; vzeroupper; ret; 
0x00000000046959: add [rax], al; add [rcx+rcx*4-0x9], cl; mov eax, 0xca; syscall; 
0x00000000119a8f: add [rax], al; add [rcx+rsi+0x48], dh; mov edi, ebp; xor esi, esi; call r12; 
0x0000000005d8fb: add [rax], al; add [rcx-0x1177b], cl; jmp far fword ptr [rcx]; 
0x000000000f8659: add [rax], al; add [rcx-0x17f7dbbc], cl; ret far; 
0x00000000051475: add [rax], al; add [rcx-0x39], cl; ret; 
0x0000000007baff: add [rax], al; add [rcx-0x5], al; jg short 0x000000000007bb18; test [rbp-0x7c000012], dh; ret; 
0x00000000152ce5: add [rax], al; add [rcx-0x73], cl; jb short 0x0000000000152cf4; mov rdi, rbp; call qword ptr [rdx+0x10]; 
0x00000000152f35: add [rax], al; add [rcx-0x73], cl; jne short 0x0000000000152f44; mov rdi, rbp; call qword ptr [rax+0x10]; 
0x000000000fa31e: add [rax], al; add [rcx-0x75], al; sub cl, [rbp-0xff7b]; jmp far fword ptr [rcx-0x101]; 
0x0000000011a968: add [rax], al; add [rcx-0x75], cl; jge short 0x000000000011a96f; call rbx; 
0x000000000f2d3d: add [rax], al; add [rcx-0x75], cl; sbb [r9], al; ret far; 
0x000000001573fe: add [rax], al; add [rcx-0x76b7d7b9], cl; ja short 0x0000000000157420; mov eax, r8d; ret; 
0x0000000013b43b: add [rax], al; add [rcx-0x76b7f3a9], cl; ret; 
0x000000000d6c80: add [rax], al; add [rcx-0x77], al; ret far; 
0x00000000029b7a: add [rax], al; add [rcx-0x77], al; ret; 
0x00000000028915: add [rax], al; add [rcx-0x77], cl; add ecx, [rax-0x77]; ror dword ptr [rax+0x39], 0x1; ret; 
0x0000000019645b: add [rax], al; add [rcx-0x77], cl; ret; 
0x0000000015f52b: add [rax], al; add [rcx-0x77], cl; sbb [r9-0x73], r9b; mov edi, 0x908; call qword ptr [r15+0xf10]; 
0x000000000d916b: add [rax], al; add [rcx-0x7d], al; call far fword ptr [rdi+0xf]; 
0x000000001139b4: add [rax], al; add [rcx-0x7d], al; ret far; 
0x00000000053c17: add [rax], al; add [rcx-0x7d], cl; ret; 
0x0000000012c4fd: add [rax], al; add [rcx-0x877b], cl; dec dword ptr [rax-0x7d]; ret; 
0x0000000006c6e7: add [rax], al; add [rcx-0x9], al; ret; 
0x0000000015919d: add [rax], al; add [rcx-0xa37b], cl; jmp far fword ptr [rax+0x412e7501]; 
0x000000001393db: add [rax], al; add [rcx-0xa], al; ret; 
0x00000000149d03: add [rax], al; add [rcx-0xdd6b7ff], cl; mov rbp, rdx; call qword ptr [rbx+0x10]; 
0x000000000a04a2: add [rax], al; add [rcx], al; je short 0x00000000000a0465; ret; 
0x000000000bcdb2: add [rax], al; add [rcx], al; je short 0x00000000000bcd75; ret; 
0x00000000102ab0: add [rax], al; add [rcx], al; mov edx, 0x2; cmove eax, edx; ret; 
0x00000000031602: add [rax], al; add [rcx], ch; ret far; 
0x000000000ca025: add [rax], al; add [rcx], ch; ret; 
0x00000000038c1a: add [rax], al; add [rcx], dh; call qword ptr [rax+0x480ab60f]; 
0x0000000008d90b: add [rax], al; add [rcx], dh; rcr byte ptr [rbx+0x5d], 0x41; pop rsp; ret; 
0x00000000097cce: add [rax], al; add [rcx], dh; ror byte ptr [rax-0x73], 0x34; ret; 
0x0000000009ef67: add [rax], al; add [rcx], dh; ror byte ptr [rax-0x77], 0x37; ret; 
0x0000000008eda1: add [rax], al; add [rcx], dh; ror byte ptr [rax-0x77], cl; out dx, eax; call qword ptr [rbx+0x80]; 
0x0000000018bcad: add [rax], al; add [rcx], dh; ror byte ptr [rbx+0x75163b17], 0xe4; ret; 
0x000000000ee4a5: add [rax], al; add [rcx], dh; sar byte ptr [rax], 0xe; je 0x00000000000ee3ed; ret; 
0x000000000cf0b2: add [rax], al; add [rdi+0x2], bh; neg eax; ret; 
0x0000000016b3c8: add [rax], al; add [rdi+0x63], cl; or al, 0x8b; add r9, r11; notrack jmp r9; 
0x00000000192af2: add [rax], al; add [rdi+0x9], bh; neg eax; ret; 
0x0000000011a706: add [rax], al; add [rdi+rbp+0x48], dh; mov edi, ebp; xor esi, esi; call r12; 
0x000000000cf1a0: add [rax], al; add [rdi+rcx+0x4c], al; enter 0x8944, 0xc8; ret; 
0x000000000cf1c2: add [rax], al; add [rdi+rcx+0x4f], al; enter 0x8944, 0xc8; ret; 
0x000000000424f5: add [rax], al; add [rdi], bh; mov [rdi], edx; movd xmm0, eax; ret; 
0x00000000087cf6: add [rax], al; add [rdi], cl; adc [rax+0x40], eax; pop rbx; ret; 
0x00000000141a94: add [rax], al; add [rdi], cl; adc [rax], eax; add rsp, 0x8; ret; 
0x0000000012c58b: add [rax], al; add [rdi], cl; adc [rbp-0x78], edi; call rcx; 
0x000000000919f2: add [rax], al; add [rdi], cl; adc [rbx+0x48], eax; pop rbx; ret; 
0x000000001506f8: add [rax], al; add [rdi], cl; adc [rdx], ebx; ret; 
0x0000000014cfa0: add [rax], al; add [rdi], cl; adc [rdx], ecx; ret; 
0x0000000014fde8: add [rax], al; add [rdi], cl; adc [rdx], edx; ret; 
0x000000001506d8: add [rax], al; add [rdi], cl; adc [rdx], esp; ret; 
0x0000000010d07e: add [rax], al; add [rdi], cl; adc [rsi+0x70], edi; ret; 
0x0000000010049b: add [rax], al; add [rdi], cl; adc [rsi+0x8], eax; ret; 
0x00000000148248: add [rax], al; add [rdi], cl; adc [rsi+0x8], ecx; ret; 
0x00000000153962: add [rax], al; add [rdi], cl; adc [rsp+0x18], eax; call qword ptr [rax+0x18]; 
0x00000000153bf0: add [rax], al; add [rdi], cl; adc [rsp+0x18], ecx; movups [rsp+0x38], xmm0; call qword ptr [rax+0x18]; 
0x00000000153eb2: add [rax], al; add [rdi], cl; adc [rsp+0xb8], ebp; call rax; 
0x00000000153e16: add [rax], al; add [rdi], cl; adc [rsp+0xb8], ebx; movups [rsp+0xd8], xmm0; call rax; 
0x00000000153e1e: add [rax], al; add [rdi], cl; adc [rsp+0xd8], eax; call rax; 
0x0000000012484a: add [rax], al; add [rdi], cl; add eax, 0xfffd2ae9; jmp qword ptr [rsi+0x2e]; 
0x000000000e0dcd: add [rax], al; add [rdi], cl; add eax, 0xfffea1e9; jmp qword ptr [rsi+0xf]; 
0x0000000009c170: add [rax], al; add [rdi], cl; add eax, 0xfffebee9; jmp qword ptr [rsi+0xf]; 
0x00000000098ac0: add [rax], al; add [rdi], cl; add eax, 0xffff01e9; jmp qword ptr [rsi+0xf]; 
0x000000000ff805: add [rax], al; add [rdi], cl; add eax, 0xffff41e9; call qword ptr [rax-0x5e1f00d]; 
0x000000000910aa: add [rax], al; add [rdi], cl; add eax, 0xffff44e9; jmp qword ptr [rsi+0x66]; 
0x0000000004716c: add [rax], al; add [rdi], cl; add eax, 0xffff4ae9; jmp qword ptr [rsi+0x2e]; 
0x00000000125565: add [rax], al; add [rdi], cl; add eax, 0xffff4ce9; call qword ptr [rax+0x1ba]; 
0x000000001255ca: add [rax], al; add [rdi], cl; add eax, 0xffff4de9; jmp qword ptr [rsi+0x2e]; 
0x00000000096198: add [rax], al; add [rdi], cl; add eax, 0xffff70e9; jmp qword ptr [rsi+0x66]; 
0x00000000150797: add [rax], al; add [rdi], cl; enter 0x4289, 0x10; mov eax, 0x1; ret; 
0x0000000015069f: add [rax], al; add [rdi], cl; enter 0x4289, 0xc; mov eax, 0x1; ret; 
0x0000000016dd8d: add [rax], al; add [rdi], cl; mov bh, 0x16; mov [rdi], dx; ret; 
0x00000000131613: add [rax], al; add [rdi], cl; mov cl, 0x15; ret; 
0x0000000016ddfd: add [rax], al; add [rdi], cl; mov dh, 0x16; mov [rdi], dl; ret; 
0x00000000038e05: add [rax], al; add [rdi], cl; mov dh, 0x43; add [rax-0x7d], ecx; ret; 
0x0000000004924d: add [rax], al; add [rdi], cl; mov dh, 0x4b; add [rax-0x7d], ecx; ret; 
0x000000000bc16d: add [rax], al; add [rdi], cl; mov dh, 0xc1; pop rbx; ret; 
0x000000000ac67d: add [rax], al; add [rdi], cl; mov ebp, 0x448d48c0; cmp [rax], ah; ret; 
0x000000000ac68d: add [rax], al; add [rdi], cl; mov ebp, 0x448d48c0; cmp [rax], dh; ret; 
0x000000000ac66d: add [rax], al; add [rdi], cl; mov ebp, 0x448d48c0; cmp [rax], dl; ret; 
0x00000000184a6d: add [rax], al; add [rdi], cl; mov ebp, 0xf80148c0; vzeroupper; ret; 
0x000000000ac1ad: add [rax], al; add [rdi], cl; mov esp, 0x448d48c0; cmp [rax], ah; ret; 
0x000000000ac19d: add [rax], al; add [rdi], cl; mov esp, 0x448d48c0; cmp [rax], dl; ret; 
0x000000000ac18d: add [rax], al; add [rdi], cl; mov esp, 0xf80148c0; ret; 
0x000000000e1627: add [rax], al; add [rdi], cl; ret; 
0x00000000042fe5: add [rax], al; add [rdi], cl; sub [rsp+0xe0], eax; movaps [rsp+0xf0], xmm0; syscall; 
0x00000000042fed: add [rax], al; add [rdi], cl; sub [rsp+0xf0], eax; syscall; 
0x00000000043355: add [rax], al; add [rdi], cl; test [rax+0x48000000], ebx; add esp, 0x98; ret; 
0x0000000009d62c: add [rax], al; add [rdi], cl; test [rbp+0x48000000], ebp; add esp, 0x18; ret; 
0x0000000010defd: add [rax], al; add [rdi], cl; test [rbx+0x48000000], esi; add esp, 0x78; ret; 
0x0000000010e4f3: add [rax], al; add [rdi], cl; test [rcx+0x48000000], ebx; add esp, 0x68; ret; 
0x0000000014f36d: add [rax], al; add [rdi], cl; xchg edi, eax; ret; 
0x00000000090886: add [rax], al; add [rdx+0x1], bh; mov rdi, rbx; call qword ptr [r12+0x48]; 
0x0000000008a098: add [rax], al; add [rdx+0x1], bh; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x00000000102ab1: add [rax], al; add [rdx+0x2], edi; cmove eax, edx; ret; 
0x000000000baf5d: add [rax], al; add [rdx+0x30178816], cl; in eax, dx; mov [rdi+0x1], ch; ret; 
0x00000000095229: add [rax], al; add [rdx], al; jbe short 0x0000000000095230; ret; 
0x000000000d0e97: add [rax], al; add [rdx], ch; push 0x0; lea r8, [rsp+0x40]; call qword ptr [rax+0x1e0]; 
0x000000001135b8: add [rax], al; add [rip+0x410000], dil; je short 0x00000000001135f0; mov eax, 0x101; syscall; 
0x0000000009528a: add [rax], al; add [rsi+0x1], dh; ret; 
0x00000000113b82: add [rax], al; add [rsi+0x5409], bh; mov eax, 0x10; syscall; 
0x00000000113bb3: add [rax], al; add [rsi+0x5409], bh; mov r8d, eax; mov eax, 0x10; syscall; 
0x00000000031ad6: add [rax], al; add [rsi+0x63], cl; add al, 0x8a; add r8, rdx; notrack jmp r8; 
0x000000000945ec: add [rax], al; add [rsi+0x80], bh; mov eax, 0xca; syscall; 
0x00000000162b1c: add [rax], al; add [rsi+0x80], bh; syscall; 
0x000000000e1dca: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x10d702]; syscall; 
0x000000000e1c8a: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x10d842]; syscall; 
0x000000000e1bd2: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x10d8fa]; syscall; 
0x000000000e1af6: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x10d9ce]; syscall; 
0x000000000e1926: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x10db5e]; syscall; 
0x000000000e1762: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x10dcda]; syscall; 
0x000000000e13a8: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x10e03c]; syscall; 
0x000000000dfe9a: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x10f4c2]; syscall; 
0x000000000dfd5a: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x10f602]; syscall; 
0x000000000dfca2: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x10f6ba]; syscall; 
0x000000000df8d6: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x10fa7e]; syscall; 
0x000000000df706: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x10fc0e]; syscall; 
0x000000000df542: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x10fd8a]; syscall; 
0x000000000dec5a: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x11061a]; syscall; 
0x000000000d2bb6: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x11c5d6]; syscall; 
0x000000000d2982: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x11c80a]; syscall; 
0x000000000ca656: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x126b46]; syscall; 
0x0000000009c816: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x150356]; syscall; 
0x0000000009e1c2: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x150d32]; syscall; 
0x0000000009dfe2: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x150f12]; syscall; 
0x0000000009ddf6: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1510fe]; syscall; 
0x0000000009dd86: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x15116e]; syscall; 
0x0000000009db56: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x15139e]; syscall; 
0x00000000099ab6: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1530b6]; syscall; 
0x00000000099a56: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x153116]; syscall; 
0x00000000099696: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1534d6]; syscall; 
0x00000000099436: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x153736]; syscall; 
0x00000000098dce: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x153d9e]; syscall; 
0x00000000098d96: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x153dd6]; syscall; 
0x0000000009aa66: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x15440e]; syscall; 
0x00000000099fca: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x154e9a]; syscall; 
0x00000000096037: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x158e2d]; syscall; 
0x00000000096006: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x158e6e]; syscall; 
0x00000000095d86: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1590ee]; syscall; 
0x00000000095862: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x159612]; syscall; 
0x00000000094c47: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x159ba5]; syscall; 
0x00000000094a72: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x159d7a]; syscall; 
0x000000000948d6: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x159f16]; syscall; 
0x00000000093948: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x15ae64]; syscall; 
0x00000000093408: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x15b3a4]; syscall; 
0x00000000093064: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x15b748]; syscall; 
0x00000000092cf8: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x15bab4]; syscall; 
0x00000000091674: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x15d138]; syscall; 
0x000000000913b4: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x15d3f8]; syscall; 
0x00000000091040: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x15d76c]; syscall; 
0x00000000084385: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x16a3e7]; syscall; 
0x00000000083f88: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x16a7e4]; syscall; 
0x00000000083edd: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x16a88f]; syscall; 
0x00000000082016: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x16f186]; syscall; 
0x000000000610ca: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x18d672]; syscall; 
0x00000000060e46: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x18d8f2]; syscall; 
0x0000000005ec72: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x18fabe]; syscall; 
0x0000000005eb32: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x18fbfe]; syscall; 
0x00000000054d96: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x199986]; syscall; 
0x00000000054bb6: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x199b66]; syscall; 
0x00000000054686: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x19a096]; syscall; 
0x0000000005229a: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x19c252]; syscall; 
0x0000000005211e: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x19c3ce]; syscall; 
0x000000000520e6: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x19c406]; syscall; 
0x000000000478d2: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1a6bfa]; syscall; 
0x00000000047812: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1a6cba]; syscall; 
0x0000000004774a: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1a6d82]; syscall; 
0x00000000047672: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1a6e5a]; syscall; 
0x0000000004676a: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1a750a]; syscall; 
0x000000000466a5: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1a75cf]; syscall; 
0x00000000046503: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1a7771]; syscall; 
0x00000000046429: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1a784b]; syscall; 
0x000000000384f3: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1b5731]; syscall; 
0x00000000036b70: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1b707c]; syscall; 
0x00000000035835: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1b830f]; syscall; 
0x00000000035818: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1b832c]; syscall; 
0x00000000035750: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1b83f4]; syscall; 
0x0000000002606a: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1cb132]; syscall; 
0x00000000025efe: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1cb29e]; syscall; 
0x00000000025dde: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1cb3be]; syscall; 
0x00000000022839: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1cb403]; syscall; 
0x000000001987e2: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x55492]; syscall; 
0x000000001989a2: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x55e4a]; syscall; 
0x00000000198cd2: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x57832]; syscall; 
0x0000000015e072: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x935d2]; syscall; 
0x0000000015cf3a: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x9470a]; syscall; 
0x0000000015ce5a: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x947ea]; syscall; 
0x0000000015cc72: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x949d2]; syscall; 
0x0000000015cbe2: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x94a62]; syscall; 
0x0000000015cb42: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x94b02]; syscall; 
0x0000000015ca92: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x94bb2]; syscall; 
0x0000000015c6c2: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x94f82]; syscall; 
0x00000000152432: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x9e9aa]; syscall; 
0x000000001522d2: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x9eb0a]; syscall; 
0x000000001520c6: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x9ed16]; syscall; 
0x00000000151f26: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x9eeb6]; syscall; 
0x00000000151d92: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x9f04a]; syscall; 
0x00000000151c52: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x9f18a]; syscall; 
0x00000000151af2: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x9f2ea]; syscall; 
0x000000001519e2: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x9f3fa]; syscall; 
0x0000000014e4d2: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xa2906]; syscall; 
0x0000000014c7da: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xa453a]; syscall; 
0x0000000014c69a: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xa467a]; syscall; 
0x0000000014c5e2: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xa4732]; syscall; 
0x0000000014c4f6: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xa4816]; syscall; 
0x0000000014c326: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xa49b6]; syscall; 
0x0000000014c162: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xa4b52]; syscall; 
0x000000001467c4: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xaa38c]; syscall; 
0x00000000144626: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xac496]; syscall; 
0x000000001442ee: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xac7ce]; syscall; 
0x00000000143f6e: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xacb4e]; syscall; 
0x00000000143d48: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xacd74]; syscall; 
0x00000000143be6: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xaced6]; syscall; 
0x000000001439a9: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xad113]; syscall; 
0x00000000142f52: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xadab2]; syscall; 
0x00000000142dd0: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xadc34]; syscall; 
0x00000000142d96: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xadc6e]; syscall; 
0x00000000142c7e: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xadd86]; syscall; 
0x0000000014243a: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xae5ca]; syscall; 
0x00000000142372: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xae692]; syscall; 
0x00000000142256: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xae7ae]; syscall; 
0x00000000140e83: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xaf929]; syscall; 
0x0000000013d702: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb2e02]; syscall; 
0x0000000013d406: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb30fe]; syscall; 
0x000000001390d6: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb741a]; syscall; 
0x00000000138b56: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb797e]; syscall; 
0x00000000138992: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb7afa]; syscall; 
0x000000001388ca: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb7b62]; syscall; 
0x0000000013878a: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb7ca2]; syscall; 
0x000000001386d2: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb7d5a]; syscall; 
0x00000000137fe2: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb8442]; syscall; 
0x00000000137cc2: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb8762]; syscall; 
0x00000000137b06: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb891e]; syscall; 
0x0000000013477a: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbbb3a]; syscall; 
0x0000000013463a: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbbc7a]; syscall; 
0x00000000134582: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbbd32]; syscall; 
0x000000001344a2: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbbe0a]; syscall; 
0x00000000133fd6: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbc25e]; syscall; 
0x00000000133a06: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbc7ce]; syscall; 
0x000000001334e6: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbcca6]; syscall; 
0x0000000013331a: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbce32]; syscall; 
0x000000001331da: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbcf72]; syscall; 
0x00000000133122: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbd02a]; syscall; 
0x00000000133042: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbd102]; syscall; 
0x00000000132c26: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbd4d6]; syscall; 
0x0000000013260a: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbda92]; syscall; 
0x000000001324b2: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbdbea]; syscall; 
0x000000001323f2: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbdcaa]; syscall; 
0x0000000013230a: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbdd8a]; syscall; 
0x00000000132226: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbde36]; syscall; 
0x00000000131bc6: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbe456]; syscall; 
0x000000001319ba: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbe61a]; syscall; 
0x00000000131862: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbe772]; syscall; 
0x000000001317a2: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbe832]; syscall; 
0x000000001316ba: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbe912]; syscall; 
0x00000000130aa6: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbf4ae]; syscall; 
0x00000000130836: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbf6de]; syscall; 
0x000000001300b6: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbfdfe]; syscall; 
0x000000001265ba: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xc9862]; syscall; 
0x0000000012647a: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xc99a2]; syscall; 
0x000000001263c2: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xc9a5a]; syscall; 
0x00000000125fe8: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xc9e2c]; syscall; 
0x00000000125de6: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xc9ff6]; syscall; 
0x00000000125c06: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xca18e]; syscall; 
0x00000000125a42: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xca30a]; syscall; 
0x00000000125972: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xca386]; syscall; 
0x000000001258a8: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xca450]; syscall; 
0x00000000125813: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xca4e5]; syscall; 
0x00000000124b0a: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xcb1ba]; syscall; 
0x000000001249ca: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xcb2fa]; syscall; 
0x00000000124912: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xcb3b2]; syscall; 
0x00000000124318: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xcb9a4]; syscall; 
0x00000000124116: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xcbb4e]; syscall; 
0x00000000123f36: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xcbcc6]; syscall; 
0x00000000123d72: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xcbe22]; syscall; 
0x00000000118702: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xd713a]; syscall; 
0x000000001185e6: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xd7256]; syscall; 
0x00000000118186: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xd76b6]; syscall; 
0x00000000117c4b: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xd7bf1]; syscall; 
0x00000000106ab6: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xe8af6]; syscall; 
0x000000000229ee: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; syscall; 
0x00000000099f9f: add [rax], al; add [rsi+0x81], bh; mov eax, ebx; syscall; 
0x00000000046b4b: add [rax], al; add [rsi+0x81], bh; mov rdi, r12; mov eax, 0xca; syscall; 
0x00000000047134: add [rax], al; add [rsi+0x81], bh; mov rdi, r13; mov eax, 0xca; syscall; 
0x00000000046954: add [rax], al; add [rsi+0x81], bh; mov rdi, r14; mov eax, 0xca; syscall; 
0x0000000009c163: add [rax], al; add [rsi+0x81], bh; mov rdi, r15; mov eax, 0xca; syscall; 
0x00000000046da2: add [rax], al; add [rsi+0x81], bh; mov rdi, rbp; mov eax, 0xca; syscall; 
0x0000000009ae68: add [rax], al; add [rsi+0x81], bh; mov rdi, rbx; mov eax, 0xca; syscall; 
0x0000000014e73f: add [rax], al; add [rsi+0x8], bh; mov rdi, rbp; call qword ptr [rax+0x30]; 
0x000000000ac599: add [rax], al; add [rsi+0xf], ah; xlat [rbx]; ret; 
0x000000000ac59a: add [rax], al; add [rsi+0xf], ah; xlat [rbx]; ret; 
0x0000000008761d: add [rax], al; add [rsi-0x1], bh; call qword ptr [rax+0x18]; 
0x00000000091bbe: add [rax], al; add [rsi-0x1], bh; mov rdi, rbp; call qword ptr [rbx+0x18]; 
0x000000000932e3: add [rax], al; add [rsi-0x1], bh; mov rdi, rbx; call qword ptr [r15+0x18]; 
0x0000000011369b: add [rax], al; add [rsi-0x70], ah; endbr64; mov eax, 0x1; syscall; 
0x000000000e40eb: add [rax], al; add [rsi-0x70], ah; endbr64; mov eax, 0x27; syscall; 
0x0000000011f92b: add [rax], al; add [rsi-0x70], ah; endbr64; mov eax, 0x9e; syscall; 
0x00000000114f5b: add [rax], al; add [rsi-0x70], ah; endbr64; mov eax, 0xab; syscall; 
0x000000000d0deb: add [rax], al; add [rsi-0x70], ah; endbr64; mov eax, 0xc9; syscall; 
0x000000001255db: add [rax], al; add [rsi-0x70], ah; endbr64; ret; 
0x0000000017868b: add [rax], al; add [rsi-0x70], ah; mov [rcx], dx; ret; 
0x000000001786bb: add [rax], al; add [rsi-0x70], ah; mov [rcx], edx; mov [rcx+0x4], dl; ret; 
0x000000000b7e7b: add [rax], al; add [rsi-0x70], ah; mov [rdi], dx; ret; 
0x000000000b7eab: add [rax], al; add [rsi-0x70], ah; mov [rdi], edx; mov [rdi+0x4], dl; ret; 
0x000000000b6e8b: add [rax], al; add [rsi-0x70], ah; mov dx, [rsi]; mov [rdi], dx; ret; 
0x000000000baf4b: add [rax], al; add [rsi-0x70], ah; xor ch, ch; mov [rdi], ch; ret; 
0x000000000cf38b: add [rax], al; add [rsi-0x70], ah; xor rax, rax; ret; 
0x0000000014d002: add [rax], al; add [rsi-0x77], ah; insb [rdi], dx; mov eax, 0x1; ret; 
0x000000000c6aca: add [rax], al; add [rsp+rax+0x44], dh; mov eax, eax; ret; 
0x00000000127c0d: add [rax], al; add ah, [rcx]; enter 0x4c88, 0x24; and [rax+0x411f2444], cl; call qword ptr [rsp+0x28]; 
0x0000000014ced4: add [rax], al; add al, [rax]; add [rax], al; add rdi, 0xc8; jmp rcx; 
0x0000000012fb25: add [rax], al; add al, al; cmp edx, 0x80000000; cmovne eax, edi; ret; 
0x000000001069a7: add [rax], al; add al, ch; add ecx, esi; jmp qword ptr [rbx+rcx*4+0x4]; 
0x0000000015c5cf: add [rax], al; add al, ch; cmp [rax-0x14], esp; jmp qword ptr [rbx+rcx*4+0x4]; 
0x000000000d2cc9: add [rax], al; add al, ch; jmp qword ptr [rdi-0x3f7afffd]; 
0x000000000e7c69: add [rax], al; add al, ch; jmp qword ptr [rdi-0x76b7000d]; 
0x000000000923ae: add [rax], al; add al, ch; jp short 0x00000000000923b3; clc; jmp qword ptr [rsi+0xf]; 
0x0000000008e5b8: add [rax], al; add al, ch; mov al, [0xb74c08548ffffff]; pop rbx; ret; 
0x0000000015ea78: add [rax], al; add al, ch; nop; ret far; 
0x00000000081fbd: add [rax], al; add al, ch; ret far; 
0x000000000465a5: add [rax], al; add al, ch; ret; 
0x000000001397c0: add [rax], al; add al, ch; sbb [rcx-0x1], ch; call far fword ptr [rdi+0x41]; 
0x000000000f4d2d: add [rax], al; add al, ch; sbb ebx, eax; dec dword ptr [rax-0x77]; ret; 
0x000000000f1f7a: add [rax], al; add al, ch; scasb [rdi]; add esi, ebx; call far fword ptr [rbx+0x4c]; 
0x00000000144d1b: add [rax], al; add al, ch; std; ret far; 
0x00000000057c5f: add [rax], al; add bh, al; add al, [rdx]; sar bh, 0xff; ret; 
0x00000000198a2d: add [rax], al; add bh, bh; adc ecx, [rax-0x7d]; ret; 
0x000000001951f1: add [rax], al; add bh, bh; dec dword ptr [rcx+0x21]; ret; 
0x00000000042e12: add [rax], al; add bh, bh; loopne 0x0000000000042e7e; nop [rax+rax]; ret; 
0x00000000082a61: add [rax], al; add bh, bh; loopne 0x0000000000082aaf; mov eax, 0xffffffff; ret; 
0x000000000ee3f3: add [rax], al; add bh, dh; ret; 
0x00000000148270: add [rax], al; add bl, al; mov dword ptr [rsi], 0xa; ret; 
0x00000000148277: add [rax], al; add bl, al; mov dword ptr [rsi], 0xb; ret; 
0x000000000e5aca: add [rax], al; add bl, al; mov eax, 0xffffffff; ret; 
0x000000001489b6: add [rax], al; add bl, al; nop [rax+rax]; endbr64; ret; 
0x00000000148674: add [rax], al; add bl, al; nop [rax+rax]; lea rdx, [rip+0xa34d9]; jmp qword ptr [rdx+rax*8]; 
0x0000000013c1b2: add [rax], al; add bl, al; nop [rax+rax]; mov eax, 0xffffffff; ret; 
0x000000000cfb54: add [rax], al; add bl, al; nop [rax+rax]; mov rax, 0x2; ret; 
0x000000000cfb64: add [rax], al; add bl, al; nop [rax+rax]; mov rax, 0x3; ret; 
0x000000000cfb74: add [rax], al; add bl, al; nop [rax+rax]; mov rax, 0x4; ret; 
0x000000000cfb84: add [rax], al; add bl, al; nop [rax+rax]; mov rax, 0x5; ret; 
0x000000000cfb94: add [rax], al; add bl, al; nop [rax+rax]; mov rax, 0x6; ret; 
0x000000000cfba4: add [rax], al; add bl, al; nop [rax+rax]; mov rax, 0x7; ret; 
0x00000000063051: add [rax], al; add bl, al; nop [rax]; mov eax, 0x10; ret; 
0x00000000198c1d: add [rax], al; add bl, al; nop [rax]; ret; 
0x0000000015f72d: add [rax], al; add bl, al; nop [rax]; xor eax, eax; ret; 
0x000000001507bb: add [rax], al; add bl, al; nop; xor eax, eax; ret; 
0x0000000009e892: add [rax], al; add bl, al; ret; 
0x00000000041c99: add [rax], al; add bl, bl; insb [rdi], dx; and al, 0xe8; ret; 
0x00000000147188: add [rax], al; add bl, ch; mov ecx, 0xfe890ee8; jmp qword ptr [rsi+0x66]; 
0x00000000149660: add [rax], al; add bl, ch; mov edi, 0xfe6436e8; jmp qword ptr [rsi+0xf]; 
0x0000000015d110: add [rax], al; add bl, ch; mov edx, 0xfd2986e8; jmp qword ptr [rsi+0xf]; 
0x00000000081318: add [rax], al; add bl, ch; ret far; 
0x000000000e327b: add [rax], al; add bl, ch; ret; 
0x000000000e3121: add [rax], al; add bl, dh; lfence; jmp rdi; 
0x000000000bbf49: add [rax], al; add bl, dh; movq [rdi+rdx-0x10], mm0; movdqu [rdi], xmm0; ret; 
0x000000000b7f4d: add [rax], al; add bl, dh; movq [rdi-0x1], mm0; ret; 
0x000000000b7f5d: add [rax], al; add bl, dh; movq [rdi], mm0; ret; 
0x0000000010d106: add [rax], al; add bl, dh; movq mm7, [rsi+0x70]; movups [rdi+0xf8], xmm7; ret; 
0x0000000011fedd: add [rax], al; add bl, dh; nop edx, edi; mov eax, 0x11f; syscall; 
0x0000000011ff6d: add [rax], al; add bl, dh; nop edx, edi; mov eax, 0x134; syscall; 
0x0000000011fffd: add [rax], al; add bl, dh; nop edx, edi; mov eax, 0x13f; syscall; 
0x0000000014616d: add [rax], al; add bl, dh; nop edx, edi; mov eax, 0x1; ret; 
0x0000000012079d: add [rax], al; add bl, dh; nop edx, edi; mov eax, 0x30; syscall; 
0x000000001202ed: add [rax], al; add bl, dh; nop edx, edi; mov eax, 0x32; syscall; 
0x000000000e319d: add [rax], al; add bl, dh; nop edx, edi; mov eax, 0x3b; syscall; 
0x0000000012103d: add [rax], al; add bl, dh; nop edx, edi; mov eax, 0x44; syscall; 
0x0000000010fcfd: add [rax], al; add bl, dh; nop edx, edi; mov eax, 0x57; syscall; 
0x0000000010fc3d: add [rax], al; add bl, dh; nop edx, edi; mov eax, 0x58; syscall; 
0x0000000011fded: add [rax], al; add bl, dh; nop edx, edi; mov eax, 0x63; syscall; 
0x0000000011f9cd: add [rax], al; add bl, dh; nop edx, edi; mov eax, 0x7d; syscall; 
0x000000000439ed: add [rax], al; add bl, dh; nop edx, edi; mov eax, 0x83; syscall; 
0x0000000011f40d: add [rax], al; add bl, dh; nop edx, edi; mov eax, 0x87; syscall; 
0x0000000010e12d: add [rax], al; add bl, dh; nop edx, edi; mov eax, 0x8; syscall; 
0x00000000118b2d: add [rax], al; add bl, dh; nop edx, edi; mov eax, 0x95; syscall; 
0x0000000011564d: add [rax], al; add bl, dh; nop edx, edi; mov eax, 0x99; syscall; 
0x0000000011fb4d: add [rax], al; add bl, dh; nop edx, edi; mov eax, 0xb1; syscall; 
0x0000000011fcfd: add [rax], al; add bl, dh; nop edx, edi; mov eax, 0xb4; syscall; 
0x0000000011cead: add [rax], al; add bl, dh; nop edx, edi; mov eax, 0xc2; syscall; 
0x0000000011cf0d: add [rax], al; add bl, dh; nop edx, edi; mov eax, 0xc3; syscall; 
0x0000000011cded: add [rax], al; add bl, dh; nop edx, edi; mov eax, 0xc4; syscall; 
0x0000000011cf9d: add [rax], al; add bl, dh; nop edx, edi; mov eax, 0xc5; syscall; 
0x0000000010286d: add [rax], al; add bl, dh; nop edx, edi; mov eax, 0xcb; syscall; 
0x0000000011fbad: add [rax], al; add bl, dh; nop edx, edi; mov eax, 0xfe; syscall; 
0x00000000091f6d: add [rax], al; add bl, dh; nop edx, edi; mov eax, 0xffffffff; ret; 
0x0000000009387d: add [rax], al; add bl, dh; nop edx, edi; mov rax, [rdi+0x68]; ret; 
0x0000000009385d: add [rax], al; add bl, dh; nop edx, edi; mov rax, [rip+0x159d35]; ret; 
0x0000000002f5cd: add [rax], al; add bl, dh; nop edx, edi; mov rax, [rip+0x1be38d]; ret; 
0x00000000025acd: add [rax], al; add bl, dh; nop edx, edi; mov rax, [rip+0x1cb6dd]; ret; 
0x0000000009388d: add [rax], al; add bl, dh; nop edx, edi; mov rax, rdi; ret; 
0x0000000012d86d: add [rax], al; add bl, dh; nop edx, edi; ret; 
0x0000000014684d: add [rax], al; add bl, dh; nop edx, edi; xor eax, eax; ret; 
0x000000000cb1b2: add [rax], al; add byte ptr [rcx+rcx*4+0x42], 0x4; mov [rdx], eax; xor eax, eax; ret; 
0x00000000194a42: add [rax], al; add cl, ch; cmp edx, 0xffffffff; jmp qword ptr [rsi+0xf]; 
0x00000000193712: add [rax], al; add cl, ch; idiv dil; jmp qword ptr [rsi+0xf]; 
0x000000000f1576: add [rax], al; add cl, ch; idiv r15; jmp qword ptr [rsi-0x70]; 
0x0000000011ee96: add [rax], al; add cl, ch; imul esp, edi, 0xffffffff; jmp qword ptr [rsi-0x70]; 
0x0000000007f47a: add [rax], al; add cl, ch; push rdx; out 0xff, eax; jmp qword ptr [rsi+0xf]; 
0x0000000002e955: add [rax], al; add cl, ch; ret far; 
0x0000000002e076: add [rax], al; add cl, ch; ret; 
0x0000000009d482: add [rax], al; add cl, ch; sar ch, 0xff; jmp qword ptr [rsi+0xf]; 
0x00000000061867: add [rax], al; add cl, ch; sar ebp, 0xff; call qword ptr [rax+0x222ebe8]; 
0x000000000578f5: add [rax], al; add cl, cl; ret; 
0x0000000009522a: add [rax], al; add dh, [rsi+0x1]; ret; 
0x000000000a8a75: add [rax], al; add dh, al; add [rax], al; ret; 
0x000000000ec4ad: add [rax], al; add dh, al; or [r10], r11b; mov eax, 0x2; ret; 
0x0000000013d0a5: add [rax], al; add dh, al; ret; 
0x00000000075112: add [rax], al; add dh, al; test [rax], eax; idiv edi; jmp qword ptr [rax]; 
0x0000000007bdbf: add [rax], al; add dh, al; test esp, eax; idiv bh; jmp qword ptr [rax]; 
0x00000000063c38: add [rax], al; add dh, dh; ret; 
0x0000000004212d: add [rax], al; add dl, dh; addps xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x00000000184a59: add [rax], al; add eax, 0x40; add rax, rdi; vzeroupper; ret; 
0x0000000013de9a: add [rax], al; add edx, 0x1; syscall; 
0x000000000cfb2e: add [rax], al; add rax, 0x3; ret; 
0x000000000abf63: add [rax], al; add rax, rdi; add rax, rcx; ret; 
0x000000001844c0: add [rax], al; add rax, rdi; add rax, rcx; vzeroupper; ret; 
0x00000000184a08: add [rax], al; add rax, rdi; vzeroupper; ret; 
0x0000000014db05: add [rax], al; add rdi, 0x10; jmp rcx; 
0x00000000150655: add [rax], al; add rdi, 0x58; jmp rcx; 
0x0000000014fd15: add [rax], al; add rdi, 0x68; jmp rcx; 
0x0000000014ced8: add [rax], al; add rdi, 0xc8; jmp rcx; 
0x00000000024159: add [rax], al; add rdx, 0x988; cmp r15, rdx; je short 0x0000000000024177; call rax; 
0x0000000014ed66: add [rax], al; add rsi, 0x38; jmp qword ptr [rax+0x18]; 
0x0000000009d510: add [rax], al; add rsp, 0x10; mov eax, r12d; pop r12; ret; 
0x0000000009964f: add [rax], al; add rsp, 0x10; mov rax, r8; pop rbp; ret; 
0x0000000005222a: add [rax], al; add rsp, 0x10; pop rbx; ret; 
0x00000000089a84: add [rax], al; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000009a78e: add [rax], al; add rsp, 0x18; ret; 
0x0000000010d64b: add [rax], al; add rsp, 0x1a0; mov eax, r8d; pop rbx; ret; 
0x00000000042b6f: add [rax], al; add rsp, 0x20; pop rbp; ret; 
0x0000000014e573: add [rax], al; add rsp, 0x20; pop rbx; ret; 
0x00000000155e15: add [rax], al; add rsp, 0x28; pop rbx; pop rbp; ret; 
0x00000000197008: add [rax], al; add rsp, 0x30; mov rax, r12; pop r12; ret; 
0x0000000010e63b: add [rax], al; add rsp, 0x30; pop rbx; ret; 
0x0000000008a431: add [rax], al; add rsp, 0x38; pop rbx; pop rbp; ret; 
0x00000000151eb1: add [rax], al; add rsp, 0x48; pop rbx; pop rbp; ret; 
0x0000000013deb3: add [rax], al; add rsp, 0x58; pop rbx; pop rbp; ret; 
0x0000000011393c: add [rax], al; add rsp, 0x60; mov eax, r11d; pop rbx; ret; 
0x00000000113eb5: add [rax], al; add rsp, 0x60; mov rax, r12; pop r12; ret; 
0x000000001150c5: add [rax], al; add rsp, 0x60; pop rbp; ret; 
0x0000000010dd89: add [rax], al; add rsp, 0x68; pop rbp; pop r12; ret; 
0x0000000010111a: add [rax], al; add rsp, 0x68; pop rbx; pop rbp; ret; 
0x0000000010e4fa: add [rax], al; add rsp, 0x68; ret; 
0x0000000010df04: add [rax], al; add rsp, 0x78; ret; 
0x000000001173ac: add [rax], al; add rsp, 0x8; mov eax, r8d; ret; 
0x000000000a294e: add [rax], al; add rsp, 0x8; pop rbp; pop r12; ret; 
0x00000000148a04: add [rax], al; add rsp, 0x8; pop rbx; pop rbp; jmp rcx; 
0x00000000024e36: add [rax], al; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000041e96: add [rax], al; add rsp, 0x8; ret; 
0x00000000024270: add [rax], al; add rsp, 0x98; ret; 
0x000000000e49e8: add [rax], al; add rsp, 0xb8; pop rbx; pop rbp; ret; 
0x0000000004212e: add [rax], al; addsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x0000000004248e: add [rax], al; addss xmm0, xmm0; ret; 
0x000000000bc1b6: add [rax], al; and ch, 0xf0; pop rbx; cmovne rax, rdx; ret; 
0x0000000018e1c1: add [rax], al; and eax, 0xffff; and ecx, 0xffff; sub eax, ecx; ret; 
0x0000000011eeb8: add [rax], al; and eax, 0xfffff000; or eax, edx; ret; 
0x000000000344bf: add [rax], al; and eax, esi; ret; 
0x0000000018ea93: add [rax], al; and ecx, 0xff; sub eax, ecx; ret; 
0x0000000018e1c6: add [rax], al; and ecx, 0xffff; sub eax, ecx; ret; 
0x0000000004235e: add [rax], al; and esi, 0x80000000; mov [rdi], esi; ret; 
0x000000000ac18e: add [rax], al; bsf eax, eax; add rax, rdi; ret; 
0x000000000ac19e: add [rax], al; bsf eax, eax; lea rax, [rax+rdi+0x10]; ret; 
0x000000000ac1ae: add [rax], al; bsf eax, eax; lea rax, [rax+rdi+0x20]; ret; 
0x000000000b1e20: add [rax], al; bsf rax, rdx; ret; 
0x000000000cf764: add [rax], al; bsf rax, rdx; shr rax, 0x2; ret; 
0x00000000184a6e: add [rax], al; bsr eax, eax; add rax, rdi; vzeroupper; ret; 
0x000000000ac66e: add [rax], al; bsr eax, eax; lea rax, [rax+rdi+0x10]; ret; 
0x000000000ac67e: add [rax], al; bsr eax, eax; lea rax, [rax+rdi+0x20]; ret; 
0x000000000ac68e: add [rax], al; bsr eax, eax; lea rax, [rax+rdi+0x30]; ret; 
0x000000000b1938: add [rax], al; bsr rax, rax; add rax, rdi; ret; 
0x000000000b19d2: add [rax], al; bsr rsi, rsi; lea rax, [rdi+rsi]; ret; 
0x00000000150798: add [rax], al; bswap eax; mov [rdx+0x10], eax; mov eax, 0x1; ret; 
0x000000001506a0: add [rax], al; bswap eax; mov [rdx+0xc], eax; mov eax, 0x1; ret; 
0x0000000014d1a2: add [rax], al; bswap ebp; mov ebp, ebp; call qword ptr [rax+0x18]; 
0x00000000057d8e: add [rax], al; bts rax, 0x30; mov [rdi+0x8], rax; mov eax, 0x2; ret; 
0x00000000057b7e: add [rax], al; bts rsi, 0x34; mov eax, 0x1; mov [rdi], rsi; ret; 
0x0000000015f307: add [rax], al; call qword ptr [r12+0xf10]; 
0x00000000090940: add [rax], al; call qword ptr [r14+0x80]; 
0x0000000015f3af: add [rax], al; call qword ptr [r15+0xf08]; 
0x0000000015f537: add [rax], al; call qword ptr [r15+0xf10]; 
0x00000000153aa9: add [rax], al; call qword ptr [rax+0x18]; 
0x000000001476c5: add [rax], al; call qword ptr [rax+0x20]; 
0x0000000014699b: add [rax], al; call qword ptr [rax+0x28]; 
0x000000000874e9: add [rax], al; call qword ptr [rax+0x68]; 
0x0000000010cc9a: add [rax], al; call qword ptr [rax+0x88]; 
0x00000000151a86: add [rax], al; call qword ptr [rax]; 
0x000000001103a0: add [rax], al; call qword ptr [rbp+0x40]; 
0x00000000047263: add [rax], al; call qword ptr [rbp+0xf10]; 
0x00000000198a2e: add [rax], al; call qword ptr [rbx]; 
0x00000000119aaf: add [rax], al; call r12; 
0x0000000002f2f5: add [rax], al; call r15; 
0x00000000155ba3: add [rax], al; call r8; 
0x000000000240e8: add [rax], al; call rax; 
0x000000000d0b86: add [rax], al; call rbp; 
0x000000000468d3: add [rax], al; call rdx; 
0x00000000112b2a: add [rax], al; cmova eax, edx; ret; 
0x0000000013c5a6: add [rax], al; cmovb eax, edx; ret; 
0x00000000120e3d: add [rax], al; cmovb rax, rdx; ret; 
0x00000000102816: add [rax], al; cmovbe rsi, r8; syscall; 
0x00000000043e10: add [rax], al; cmove eax, edx; ret; 
0x0000000011573b: add [rax], al; cmove rax, rbx; pop rbx; ret; 
0x000000000bc162: add [rax], al; cmove rax, rcx; ret; 
0x000000000a0435: add [rax], al; cmove rax, rdx; ret; 
0x000000000cf1c3: add [rax], al; cmovg r9d, eax; mov eax, r9d; ret; 
0x000000000cf1a1: add [rax], al; cmovl r9d, eax; mov eax, r9d; ret; 
0x000000000ee442: add [rax], al; cmovne eax, edx; pop rbx; ret; 
0x000000000dd02a: add [rax], al; cmovne eax, edx; ret; 
0x000000000a28c8: add [rax], al; cmovne r8, rax; mov rax, r8; ret; 
0x0000000015c527: add [rax], al; cmovne rax, rdx; add rsp, 0x8; ret; 
0x0000000009529f: add [rax], al; cmovne rax, rdx; mov [rip+0x159bf4], rax; ret; 
0x000000000e501d: add [rax], al; cmovne rax, rdx; ret; 
0x00000000127b0e: add [rax], al; cmovns rax, [rbx+0x28]; pop rbx; ret; 
0x0000000017c5f6: add [rax], al; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x000000000422c9: add [rax], al; cmp byte ptr [rdi+0x2d], 0x0; add [rax+0x1fe8c17f], al; ret; 
0x00000000102a3c: add [rax], al; cmp dx, 0x2; je short 0x0000000000102a48; ret; 
0x00000000192418: add [rax], al; cmp eax, ecx; jne 0x00000000001924d5; xor eax, eax; ret; 
0x000000000874c9: add [rax], al; cmp qword ptr [rax+0x30], 0x0; je short 0x00000000000874d8; ret; 
0x00000000024160: add [rax], al; cmp r15, rdx; je short 0x0000000000024177; call rax; 
0x0000000009cbc0: add [rax], al; cmp rax, 0xffffffffffffffff; cmove rax, rdx; add rsp, 0x8; ret; 
0x0000000018bb23: add [rax], al; cmp rdx, rcx; jne short 0x000000000018bb0b; vzeroupper; ret; 
0x000000001909e6: add [rax], al; cmp rdx, rcx; jne short 0x00000000001909c6; vzeroupper; ret; 
0x00000000091eae: add [rax], al; endbr64; cmp qword ptr [rdi+0x38], 0x0; je short 0x0000000000091ec0; ret; 
0x0000000009e21e: add [rax], al; endbr64; cmp qword ptr [rip+0x150ce4], 0x0; je short 0x000000000009e230; ret; 
0x000000000241ce: add [rax], al; endbr64; lea rax, [rip+0x18fcc3]; ret; 
0x000000001143ce: add [rax], al; endbr64; mov eax, 0x10; syscall; 
0x0000000011fede: add [rax], al; endbr64; mov eax, 0x11f; syscall; 
0x0000000011ff6e: add [rax], al; endbr64; mov eax, 0x134; syscall; 
0x0000000011fffe: add [rax], al; endbr64; mov eax, 0x13f; syscall; 
0x0000000014616e: add [rax], al; endbr64; mov eax, 0x1; ret; 
0x0000000014899e: add [rax], al; endbr64; mov eax, 0x2; ret; 
0x0000000012079e: add [rax], al; endbr64; mov eax, 0x30; syscall; 
0x000000001202ee: add [rax], al; endbr64; mov eax, 0x32; syscall; 
0x000000000e319e: add [rax], al; endbr64; mov eax, 0x3b; syscall; 
0x000000000433fe: add [rax], al; endbr64; mov eax, 0x3e; syscall; 
0x000000001210ae: add [rax], al; endbr64; mov eax, 0x40; syscall; 
0x0000000012103e: add [rax], al; endbr64; mov eax, 0x44; syscall; 
0x0000000012106e: add [rax], al; endbr64; mov eax, 0x47; syscall; 
0x0000000010e59e: add [rax], al; endbr64; mov eax, 0x49; syscall; 
0x00000000116d1e: add [rax], al; endbr64; mov eax, 0x4d; syscall; 
0x0000000010fcfe: add [rax], al; endbr64; mov eax, 0x57; syscall; 
0x0000000010fc3e: add [rax], al; endbr64; mov eax, 0x58; syscall; 
0x0000000011fdee: add [rax], al; endbr64; mov eax, 0x63; syscall; 
0x0000000011f9ce: add [rax], al; endbr64; mov eax, 0x7d; syscall; 
0x000000000439ee: add [rax], al; endbr64; mov eax, 0x83; syscall; 
0x0000000011f40e: add [rax], al; endbr64; mov eax, 0x87; syscall; 
0x0000000010e12e: add [rax], al; endbr64; mov eax, 0x8; syscall; 
0x000000001141ce: add [rax], al; endbr64; mov eax, 0x8c; syscall; 
0x00000000118b2e: add [rax], al; endbr64; mov eax, 0x95; syscall; 
0x0000000011564e: add [rax], al; endbr64; mov eax, 0x99; syscall; 
0x0000000011f18e: add [rax], al; endbr64; mov eax, 0xa6; syscall; 
0x0000000011f00e: add [rax], al; endbr64; mov eax, 0xad; syscall; 
0x0000000011fb4e: add [rax], al; endbr64; mov eax, 0xb1; syscall; 
0x0000000011fcfe: add [rax], al; endbr64; mov eax, 0xb4; syscall; 
0x0000000011ceae: add [rax], al; endbr64; mov eax, 0xc2; syscall; 
0x0000000011cf0e: add [rax], al; endbr64; mov eax, 0xc3; syscall; 
0x0000000011cdee: add [rax], al; endbr64; mov eax, 0xc4; syscall; 
0x0000000011cf9e: add [rax], al; endbr64; mov eax, 0xc5; syscall; 
0x0000000010286e: add [rax], al; endbr64; mov eax, 0xcb; syscall; 
0x0000000011fbae: add [rax], al; endbr64; mov eax, 0xfe; syscall; 
0x00000000091f6e: add [rax], al; endbr64; mov eax, 0xffffffff; ret; 
0x0000000008cd7e: add [rax], al; endbr64; mov eax, [rdi]; and eax, 0x804; ret; 
0x000000000440ce: add [rax], al; endbr64; mov eax, [rip+0x1a80ce]; ret; 
0x0000000012fafe: add [rax], al; endbr64; mov eax, edi; rol ax, 0x8; ret; 
0x0000000016336e: add [rax], al; endbr64; mov qword ptr [rcx], 0x0; mov eax, 0xffffffff; ret; 
0x00000000062ede: add [rax], al; endbr64; mov r10, rcx; mov eax, 0x108; syscall; 
0x0000000011ffce: add [rax], al; endbr64; mov r10, rcx; mov eax, 0x137; syscall; 
0x0000000011fcce: add [rax], al; endbr64; mov r10, rcx; mov eax, 0x19; syscall; 
0x00000000112fce: add [rax], al; endbr64; mov r10, rcx; mov eax, 0x28; syscall; 
0x0000000012076e: add [rax], al; endbr64; mov r10, rcx; mov eax, 0x36; syscall; 
0x0000000011fd8e: add [rax], al; endbr64; mov r10, rcx; mov eax, 0xb2; syscall; 
0x0000000011fdbe: add [rax], al; endbr64; mov r10, rcx; mov eax, 0xb3; syscall; 
0x0000000011ce7e: add [rax], al; endbr64; mov r10, rcx; mov eax, 0xbf; syscall; 
0x0000000011cdbe: add [rax], al; endbr64; mov r10, rcx; mov eax, 0xc1; syscall; 
0x0000000012117e: add [rax], al; endbr64; mov r10, rcx; mov eax, 0xdc; syscall; 
0x000000001130ce: add [rax], al; endbr64; mov r10d, ecx; mov eax, 0x118; syscall; 
0x0000000010d8ae: add [rax], al; endbr64; mov r10d, ecx; mov eax, 0x14c; syscall; 
0x00000000112b0e: add [rax], al; endbr64; mov r10d, ecx; mov eax, 0xdd; syscall; 
0x0000000009381e: add [rax], al; endbr64; mov rax, 0xffffffffffffffff; ret; 
0x000000001573be: add [rax], al; endbr64; mov rax, [rdi+0x18]; sub rax, [rdi+0x20]; ret; 
0x000000000de2be: add [rax], al; endbr64; mov rax, [rdi+0x20]; ret; 
0x0000000009387e: add [rax], al; endbr64; mov rax, [rdi+0x68]; ret; 
0x0000000009385e: add [rax], al; endbr64; mov rax, [rip+0x159d35]; ret; 
0x000000000344ee: add [rax], al; endbr64; mov rax, [rip+0x1b79ed]; add rax, fs:[0x0]; ret; 
0x0000000003450e: add [rax], al; endbr64; mov rax, [rip+0x1b7a0d]; add rax, fs:[0x0]; ret; 
0x0000000002f5ce: add [rax], al; endbr64; mov rax, [rip+0x1be38d]; ret; 
0x0000000002442e: add [rax], al; endbr64; mov rax, [rip+0x1c7a35]; add rax, fs:[0x0]; ret; 
0x00000000025ace: add [rax], al; endbr64; mov rax, [rip+0x1cb6dd]; ret; 
0x0000000012feae: add [rax], al; endbr64; mov rax, [rip+0xbbf9d]; add rax, fs:[0x0]; ret; 
0x000000001228de: add [rax], al; endbr64; mov rax, [rip+0xc9575]; mov eax, [rax+0x38]; ret; 
0x0000000009388e: add [rax], al; endbr64; mov rax, rdi; ret; 
0x0000000009384e: add [rax], al; endbr64; ret; 
0x0000000014617e: add [rax], al; endbr64; xor eax, eax; ret; 
0x0000000012121e: add [rax], al; endbr64; xor r10d, r10d; mov eax, 0x1d; syscall; 
0x00000000041dfe: add [rax], al; fld st, tbyte ptr [rsp+0x8]; fadd st, st(0); ret; 
0x00000000041c9a: add [rax], al; fld st, tbyte ptr [rsp-0x18]; ret; 
0x000000000e3122: add [rax], al; incsspq rsi; jmp rdi; 
0x0000000012fa19: add [rax], al; ja short 0x000000000012fa25; mov rax, rdi; sar rax, 0x6; ret; 
0x00000000094e7b: add [rax], al; jbe short 0x0000000000094e80; ret; 
0x00000000094ebb: add [rax], al; jbe short 0x0000000000094ec0; ret; 
0x0000000009528b: add [rax], al; jbe short 0x0000000000095290; ret; 
0x000000000cf594: add [rax], al; je 0x00000000000cf4f5; lea rax, [rdi-0x10]; ret; 
0x0000000018970d: add [rax], al; je 0x0000000000189850; mov byte ptr [rdi], 0x0; vzeroupper; ret; 
0x0000000009e22a: add [rax], al; je short 0x000000000009e230; ret; 
0x000000000c6acb: add [rax], al; je short 0x00000000000c6ad3; mov eax, r8d; ret; 
0x000000000cf644: add [rax], al; je short 0x00000000000cf6b0; lea rax, [rdi-0x10]; ret; 
0x00000000119a90: add [rax], al; je short 0x0000000000119ac5; mov rdi, rbp; xor esi, esi; call r12; 
0x00000000119b20: add [rax], al; je short 0x0000000000119b55; mov rdi, rbp; xor esi, esi; call r12; 
0x0000000011a707: add [rax], al; je short 0x000000000011a73a; mov rdi, rbp; xor esi, esi; call r12; 
0x0000000011a7b8: add [rax], al; je short 0x000000000011a7ed; mov rdi, rbp; xor esi, esi; call r12; 
0x00000000188fed: add [rax], al; je short 0x0000000000189070; mov byte ptr [rdi], 0x0; vzeroupper; ret; 
0x00000000189d8d: add [rax], al; je short 0x0000000000189e10; mov byte ptr [rdi], 0x0; vzeroupper; ret; 
0x000000000cf0b3: add [rax], al; jg short 0x00000000000cf0b9; neg eax; ret; 
0x00000000192af3: add [rax], al; jg short 0x0000000000192b00; neg eax; ret; 
0x0000000018f8b9: add [rax], al; jl short 0x000000000018f8c0; neg eax; ret; 
0x00000000024427: add [rax], al; jmp rax; 
0x0000000014cedf: add [rax], al; jmp rcx; 
0x00000000043356: add [rax], al; jne 0x00000000000433f6; add rsp, 0x98; ret; 
0x00000000052224: add [rax], al; jne 0x00000000000522b5; add rsp, 0x10; pop rbx; ret; 
0x000000000578f0: add [rax], al; jne 0x0000000000057975; leave; ret; 
0x0000000009d62d: add [rax], al; jne 0x000000000009d6e2; add rsp, 0x18; ret; 
0x000000000ee4c2: add [rax], al; jne 0x00000000000ee3ed; ret; 
0x0000000010defe: add [rax], al; jne 0x000000000010dfb9; add rsp, 0x78; ret; 
0x0000000010e4f4: add [rax], al; jne 0x000000000010e595; add rsp, 0x68; ret; 
0x0000000010e635: add [rax], al; jne 0x000000000010e6ef; add rsp, 0x30; pop rbx; ret; 
0x0000000010e765: add [rax], al; jne 0x000000000010e81f; add rsp, 0x30; pop rbx; ret; 
0x000000001150bf: add [rax], al; jne 0x0000000000115159; add rsp, 0x60; pop rbp; ret; 
0x0000000012d102: add [rax], al; jne 0x000000000012d1dd; leave; ret; 
0x0000000014e56d: add [rax], al; jne 0x000000000014e5f3; add rsp, 0x20; pop rbx; ret; 
0x00000000184dd2: add [rax], al; jne 0x0000000000184ce0; ret; 
0x0000000018bd10: add [rax], al; jne 0x000000000018bc90; ret; 
0x00000000023a73: add [rax], al; jne short 0x0000000000023a3b; ret; 
0x00000000042380: add [rax], al; jne short 0x0000000000042390; test eax, 0x7fffff; je short 0x0000000000042390; ret; 
0x00000000042bc3: add [rax], al; jne short 0x0000000000042bcc; add rsp, 0x18; ret; 
0x00000000042f1d: add [rax], al; jne short 0x0000000000042f29; add rsp, 0x148; ret; 
0x0000000004304a: add [rax], al; jne short 0x0000000000043074; mov eax, r8d; add rsp, 0x118; ret; 
0x0000000004325e: add [rax], al; jne short 0x00000000000432a4; mov eax, r9d; add rsp, 0x148; ret; 
0x000000000435f2: add [rax], al; jne short 0x0000000000043605; add rsp, 0x118; ret; 
0x00000000043675: add [rax], al; jne short 0x0000000000043688; add rsp, 0x118; ret; 
0x00000000043780: add [rax], al; jne short 0x000000000004378c; add rsp, 0x98; ret; 
0x000000000439c4: add [rax], al; jne short 0x00000000000439e2; add rsp, 0x40; pop rbx; ret; 
0x00000000043d20: add [rax], al; jne short 0x0000000000043d2c; add rsp, 0x148; ret; 
0x00000000044450: add [rax], al; jne short 0x000000000004445c; add rsp, 0xa8; ret; 
0x00000000047471: add [rax], al; jne short 0x000000000004747a; add rsp, 0x28; ret; 
0x00000000047561: add [rax], al; jne short 0x000000000004756a; add rsp, 0x28; ret; 
0x00000000047deb: add [rax], al; jne short 0x0000000000047df4; add rsp, 0x18; ret; 
0x00000000047e38: add [rax], al; jne short 0x0000000000047e41; add rsp, 0x18; ret; 
0x00000000047e8a: add [rax], al; jne short 0x0000000000047e93; add rsp, 0x18; ret; 
0x00000000047ed7: add [rax], al; jne short 0x0000000000047ee0; add rsp, 0x18; ret; 
0x00000000047f2a: add [rax], al; jne short 0x0000000000047f33; add rsp, 0x18; ret; 
0x00000000047f77: add [rax], al; jne short 0x0000000000047f80; add rsp, 0x18; ret; 
0x00000000052c33: add [rax], al; jne short 0x0000000000052c3f; add rsp, 0xd8; ret; 
0x0000000005417d: add [rax], al; jne short 0x0000000000054189; add rsp, 0xd8; ret; 
0x0000000005506c: add [rax], al; jne short 0x0000000000055073; push r10; ret; 
0x00000000055575: add [rax], al; jne short 0x000000000005557c; push r10; ret; 
0x0000000005b5e1: add [rax], al; jne short 0x000000000005b600; add rsp, 0x450; pop rbp; ret; 
0x0000000005b8a3: add [rax], al; jne short 0x000000000005b8c5; add rsp, 0x38; ret; 
0x00000000061ca6: add [rax], al; jne short 0x0000000000061cb2; add rsp, 0xd8; ret; 
0x00000000061d7b: add [rax], al; jne short 0x0000000000061d87; add rsp, 0xd8; ret; 
0x00000000061e32: add [rax], al; jne short 0x0000000000061e3e; add rsp, 0xd8; ret; 
0x00000000061f04: add [rax], al; jne short 0x0000000000061f10; add rsp, 0xd8; ret; 
0x00000000061fc6: add [rax], al; jne short 0x0000000000061fd2; add rsp, 0xd8; ret; 
0x00000000062086: add [rax], al; jne short 0x0000000000062092; add rsp, 0xd8; ret; 
0x00000000062174: add [rax], al; jne short 0x0000000000062180; add rsp, 0xd8; ret; 
0x0000000006224b: add [rax], al; jne short 0x0000000000062257; add rsp, 0xd8; ret; 
0x00000000062871: add [rax], al; jne short 0x000000000006287e; add rsp, 0x1010; pop rbp; ret; 
0x00000000062e15: add [rax], al; jne short 0x0000000000062e27; add rsp, 0x18; ret; 
0x0000000006319e: add [rax], al; jne short 0x00000000000631aa; add rsp, 0xd8; ret; 
0x00000000063279: add [rax], al; jne short 0x0000000000063285; add rsp, 0xd8; ret; 
0x000000000864f6: add [rax], al; jne short 0x0000000000086502; add rsp, 0xd8; ret; 
0x000000000865b2: add [rax], al; jne short 0x00000000000865be; add rsp, 0xd8; ret; 
0x000000000866ab: add [rax], al; jne short 0x00000000000866b7; add rsp, 0xd8; ret; 
0x0000000008677b: add [rax], al; jne short 0x0000000000086787; add rsp, 0xd8; ret; 
0x00000000086834: add [rax], al; jne short 0x0000000000086840; add rsp, 0xd8; ret; 
0x0000000008dc06: add [rax], al; jne short 0x000000000008dc1b; add rsp, 0x48; ret; 
0x0000000009922d: add [rax], al; jne short 0x0000000000099272; add rsp, 0x40; pop rbp; ret; 
0x000000000ca0e1: add [rax], al; jne short 0x00000000000ca104; add rsp, 0x20; pop rbx; ret; 
0x000000000cabbe: add [rax], al; jne short 0x00000000000cabca; add rsp, 0xd8; ret; 
0x000000000cac99: add [rax], al; jne short 0x00000000000caca5; add rsp, 0xd8; ret; 
0x000000000d0221: add [rax], al; jne short 0x00000000000d0239; add rsp, 0x28; ret; 
0x000000000d029b: add [rax], al; jne short 0x00000000000d02a5; add rsp, 0x40; pop rbp; ret; 
0x000000000d1067: add [rax], al; jne short 0x00000000000d1094; add rsp, 0x28; ret; 
0x000000000da6ea: add [rax], al; jne short 0x00000000000da6f3; add rsp, 0x18; ret; 
0x000000000dcfba: add [rax], al; jne short 0x00000000000dcfc3; add rsp, 0x18; ret; 
0x000000000ddc83: add [rax], al; jne short 0x00000000000ddc90; add rsp, 0xe0; pop rbx; ret; 
0x000000000ddd17: add [rax], al; jne short 0x00000000000ddd24; add rsp, 0xe0; pop rbx; ret; 
0x000000000df43d: add [rax], al; jne short 0x00000000000df493; add rsp, 0x38; ret; 
0x000000000e3694: add [rax], al; jne short 0x00000000000e36d9; mov rbx, [rbp-0x8]; leave; ret; 
0x000000000e3864: add [rax], al; jne short 0x00000000000e38a9; mov rbx, [rbp-0x8]; leave; ret; 
0x000000000e41bd: add [rax], al; jne short 0x00000000000e4213; add rsp, 0x38; ret; 
0x000000000e425d: add [rax], al; jne short 0x00000000000e42b3; add rsp, 0x38; ret; 
0x000000000e452d: add [rax], al; jne short 0x00000000000e4593; add rsp, 0x38; ret; 
0x000000000e45dd: add [rax], al; jne short 0x00000000000e4643; add rsp, 0x38; ret; 
0x000000000e4ff3: add [rax], al; jne short 0x00000000000e5013; mov eax, 0xfffa; ret; 
0x000000000e5114: add [rax], al; jne short 0x00000000000e5120; mov eax, 0x40; ret; 
0x000000001029cf: add [rax], al; jne short 0x0000000000102a26; add rsp, 0x38; ret; 
0x0000000010d1a9: add [rax], al; jne short 0x000000000010d1c1; add rsp, 0x28; ret; 
0x0000000010d35e: add [rax], al; jne short 0x000000000010d368; add rsp, 0x10; pop rbp; ret; 
0x0000000010d46e: add [rax], al; jne short 0x000000000010d477; add rsp, 0x18; ret; 
0x0000000010d4c0: add [rax], al; jne short 0x000000000010d4c9; add rsp, 0x18; ret; 
0x0000000010f333: add [rax], al; jne short 0x000000000010f380; add rsp, 0x130; pop rbp; ret; 
0x0000000010fbc1: add [rax], al; jne short 0x000000000010fbcd; movzx eax, al; add rsp, 0x58; ret; 
0x00000000112a83: add [rax], al; jne short 0x0000000000112b06; add rsp, 0x40; pop r12; ret; 
0x000000001133f9: add [rax], al; jne short 0x0000000000113443; add rsp, 0x68; ret; 
0x00000000113488: add [rax], al; jne short 0x00000000001134d3; add rsp, 0x18; ret; 
0x00000000113540: add [rax], al; jne short 0x000000000011358b; add rsp, 0x58; ret; 
0x000000001135de: add [rax], al; jne short 0x000000000011362b; add rsp, 0x58; ret; 
0x00000000113abb: add [rax], al; jne short 0x0000000000113ae4; mov eax, r9d; add rsp, 0x38; ret; 
0x00000000113b2b: add [rax], al; jne short 0x0000000000113b3b; add rsp, 0x18; ret; 
0x000000001149bd: add [rax], al; jne short 0x0000000000114a1b; add rsp, 0x38; ret; 
0x00000000114a5d: add [rax], al; jne short 0x0000000000114abb; add rsp, 0x38; ret; 
0x00000000114b12: add [rax], al; jne short 0x0000000000114b8b; add rsp, 0x38; ret; 
0x00000000114be2: add [rax], al; jne short 0x0000000000114c5b; add rsp, 0x38; ret; 
0x00000000114cdc: add [rax], al; jne short 0x0000000000114ce5; add rsp, 0x28; ret; 
0x00000000115822: add [rax], al; jne short 0x0000000000115837; add rsp, 0x58; ret; 
0x0000000011589b: add [rax], al; jne short 0x00000000001158a4; add rsp, 0x28; ret; 
0x00000000115972: add [rax], al; jne short 0x00000000001159ad; add rsp, 0x68; ret; 
0x00000000116b96: add [rax], al; jne short 0x0000000000116bd5; add rsp, 0x38; ret; 
0x00000000116c65: add [rax], al; jne short 0x0000000000116ca5; add rsp, 0x38; ret; 
0x000000001182c6: add [rax], al; jne short 0x00000000001182d2; add rsp, 0xd8; ret; 
0x0000000011839f: add [rax], al; jne short 0x00000000001183ab; add rsp, 0xd8; ret; 
0x000000001196e7: add [rax], al; jne short 0x00000000001196f0; add rsp, 0x18; ret; 
0x0000000011bd5b: add [rax], al; jne short 0x000000000011bd67; add rsp, 0xd8; ret; 
0x0000000011be1b: add [rax], al; jne short 0x000000000011be27; add rsp, 0xd8; ret; 
0x0000000011bff9: add [rax], al; jne short 0x000000000011c005; add rsp, 0x418; ret; 
0x0000000011c262: add [rax], al; jne short 0x000000000011c26e; add rsp, 0xd8; ret; 
0x0000000011c4cf: add [rax], al; jne short 0x000000000011c4db; add rsp, 0xd8; ret; 
0x0000000011f0e7: add [rax], al; jne short 0x000000000011f103; add rsp, 0x68; ret; 
0x00000000120aec: add [rax], al; jne short 0x0000000000120af5; add rsp, 0x18; ret; 
0x00000000120eab: add [rax], al; jne short 0x0000000000120ebf; add rsp, 0xa0; pop rbx; ret; 
0x00000000121131: add [rax], al; jne short 0x000000000012117b; add rsp, 0x58; ret; 
0x00000000129b7d: add [rax], al; jne short 0x0000000000129b89; add rsp, 0xd8; ret; 
0x0000000012b8a6: add [rax], al; jne short 0x000000000012b8b2; add rsp, 0xd8; ret; 
0x0000000012de87: add [rax], al; jne short 0x000000000012de98; add rsp, 0xd8; ret; 
0x0000000012df7d: add [rax], al; jne short 0x000000000012df95; add rsp, 0xd8; ret; 
0x0000000012e097: add [rax], al; jne short 0x000000000012e0a3; add rsp, 0xd8; ret; 
0x0000000012e15f: add [rax], al; jne short 0x000000000012e16b; add rsp, 0xd8; ret; 
0x0000000012ef9d: add [rax], al; jne short 0x000000000012efb5; add rsp, 0xd8; ret; 
0x0000000012f0b7: add [rax], al; jne short 0x000000000012f0c3; add rsp, 0xd8; ret; 
0x0000000012f17f: add [rax], al; jne short 0x000000000012f18b; add rsp, 0xd8; ret; 
0x0000000012f5c6: add [rax], al; jne short 0x000000000012f5d5; add rsp, 0x28; ret; 
0x0000000012f626: add [rax], al; jne short 0x000000000012f635; add rsp, 0x28; ret; 
0x0000000012f6ef: add [rax], al; jne short 0x000000000012f6fb; add rsp, 0xd8; ret; 
0x0000000012f7cf: add [rax], al; jne short 0x000000000012f7db; add rsp, 0xd8; ret; 
0x0000000012f8af: add [rax], al; jne short 0x000000000012f8bb; add rsp, 0xd8; ret; 
0x000000001365fd: add [rax], al; jne short 0x0000000000136629; add rsp, 0x38; ret; 
0x0000000013669a: add [rax], al; jne short 0x00000000001366a3; add rsp, 0x38; ret; 
0x00000000136707: add [rax], al; jne short 0x0000000000136710; add rsp, 0x28; ret; 
0x0000000013c720: add [rax], al; jne short 0x000000000013c730; add rsp, 0x18; ret; 
0x0000000013e157: add [rax], al; jne short 0x000000000013e175; add rsp, 0x20; pop rbx; ret; 
0x0000000013e1ac: add [rax], al; jne short 0x000000000013e1b5; add rsp, 0x18; ret; 
0x0000000013e1ff: add [rax], al; jne short 0x000000000013e208; add rsp, 0x28; ret; 
0x0000000013ea8e: add [rax], al; jne short 0x000000000013ea97; add rsp, 0x18; ret; 
0x000000001448db: add [rax], al; jne short 0x00000000001448e6; add rsp, 0x10; pop r12; ret; 
0x00000000146249: add [rax], al; jne short 0x0000000000146253; add rsp, 0x40; pop rbp; ret; 
0x0000000014901f: add [rax], al; jne short 0x0000000000149063; add rsp, 0x10; pop rbx; ret; 
0x00000000149592: add [rax], al; jne short 0x00000000001495c2; add rsp, 0x10; pop rbx; ret; 
0x00000000149630: add [rax], al; jne short 0x0000000000149665; add rsp, 0x10; pop rbx; ret; 
0x0000000014a243: add [rax], al; jne short 0x000000000014a257; add rsp, 0x40; pop rbx; ret; 
0x00000000151641: add [rax], al; jne short 0x0000000000151661; add rsp, 0x10; pop rbx; ret; 
0x00000000151993: add [rax], al; jne short 0x0000000000151a0a; add rsp, 0x10; pop r12; ret; 
0x00000000151c0a: add [rax], al; jne short 0x0000000000151c7a; add rsp, 0x30; pop rbx; ret; 
0x00000000151d4a: add [rax], al; jne short 0x0000000000151dba; add rsp, 0x30; pop rbx; ret; 
0x00000000153903: add [rax], al; jne short 0x000000000015390c; add rsp, 0x78; ret; 
0x00000000153979: add [rax], al; jne short 0x0000000000153982; add rsp, 0x78; ret; 
0x000000001539e9: add [rax], al; jne short 0x00000000001539f2; add rsp, 0x78; ret; 
0x00000000153a59: add [rax], al; jne short 0x0000000000153a62; add rsp, 0x78; ret; 
0x00000000153aba: add [rax], al; jne short 0x0000000000153ac3; add rsp, 0x78; ret; 
0x00000000153b1e: add [rax], al; jne short 0x0000000000153b27; add rsp, 0x78; ret; 
0x00000000153b89: add [rax], al; jne short 0x0000000000153b92; add rsp, 0x78; ret; 
0x00000000153c0c: add [rax], al; jne short 0x0000000000153c15; add rsp, 0x78; ret; 
0x00000000154141: add [rax], al; jne short 0x0000000000154168; add rsp, 0x28; ret; 
0x00000000155bb4: add [rax], al; jne short 0x0000000000155bbd; add rsp, 0x48; ret; 
0x00000000155c1f: add [rax], al; jne short 0x0000000000155c63; add rsp, 0x10; pop rbx; ret; 
0x00000000155caf: add [rax], al; jne short 0x0000000000155cf2; add rsp, 0x10; pop rbx; ret; 
0x00000000155d7f: add [rax], al; jne short 0x0000000000155dc5; add rsp, 0x10; pop rbp; ret; 
0x000000001561cf: add [rax], al; jne short 0x0000000000156214; add rsp, 0x10; pop rbx; ret; 
0x0000000015625f: add [rax], al; jne short 0x00000000001562a3; add rsp, 0x10; pop rbx; ret; 
0x0000000015642f: add [rax], al; jne short 0x0000000000156479; add rsp, 0x10; pop rbx; ret; 
0x000000001564bf: add [rax], al; jne short 0x0000000000156503; add rsp, 0x10; pop rbx; ret; 
0x000000001571af: add [rax], al; jne short 0x00000000001571f5; add rsp, 0x10; pop rbx; ret; 
0x0000000015723f: add [rax], al; jne short 0x0000000000157285; add rsp, 0x10; pop rbx; ret; 
0x000000001572cf: add [rax], al; jne short 0x0000000000157315; add rsp, 0x10; pop rbx; ret; 
0x0000000015735f: add [rax], al; jne short 0x00000000001573a5; add rsp, 0x10; pop rbx; ret; 
0x00000000157a37: add [rax], al; jne short 0x0000000000157a44; add rsp, 0x90; pop rbx; ret; 
0x00000000157aab: add [rax], al; jne short 0x0000000000157ab7; movzx eax, al; add rsp, 0x18; ret; 
0x00000000157b0c: add [rax], al; jne short 0x0000000000157b18; movzx eax, al; add rsp, 0x18; ret; 
0x00000000157b78: add [rax], al; jne short 0x0000000000157b82; add rsp, 0x10; pop rbx; ret; 
0x00000000157beb: add [rax], al; jne short 0x0000000000157bf5; add rsp, 0x10; pop rbx; ret; 
0x0000000015c9e0: add [rax], al; jne short 0x000000000015ca14; add rsp, 0x18; ret; 
0x0000000015ccd7: add [rax], al; jne short 0x000000000015cd0c; add rsp, 0x10; pop rbp; ret; 
0x0000000015cd67: add [rax], al; jne short 0x000000000015cd9c; add rsp, 0x10; pop rbp; ret; 
0x0000000015f932: add [rax], al; jne short 0x000000000015f96e; add rsp, 0x58; ret; 
0x0000000015fa29: add [rax], al; jne short 0x000000000015fa74; add rsp, 0x68; ret; 
0x0000000015fbc2: add [rax], al; jne short 0x000000000015fc14; add rsp, 0x68; ret; 
0x0000000015fc8b: add [rax], al; jne short 0x000000000015fccc; add rsp, 0x38; ret; 
0x00000000160d1e: add [rax], al; jne short 0x0000000000160d27; add rsp, 0x28; ret; 
0x000000001632a9: add [rax], al; jne short 0x00000000001632b3; add rsp, 0x10; pop rbx; ret; 
0x0000000016332f: add [rax], al; jne short 0x0000000000163339; add rsp, 0x10; pop rbx; ret; 
0x0000000004411e: add [rax], al; lea eax, [rdx-0x1]; mov [rip+0x1a807f], eax; mov eax, edx; ret; 
0x0000000016de3d: add [rax], al; lea r11, [rip+0x501ba]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000bab1e: add [rax], al; lea r11, [rip+0xf4a1d]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8c5e: add [rax], al; lea r11, [rip+0xf6709]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b757e: add [rax], al; lea r11, [rip+0xf7c09]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000015fdda: add [rax], al; lea r8, [rsp+0x30]; call qword ptr [rax+0x1e0]; 
0x00000000151bb8: add [rax], al; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x0000000015238e: add [rax], al; lea r9, [rsp+0x1c]; call qword ptr [rax]; 
0x000000001473e9: add [rax], al; lea r9, [rsp+0x20]; call qword ptr [rax]; 
0x00000000190cbe: add [rax], al; lea rax, [rdi+0x2]; ret; 
0x00000000190cce: add [rax], al; lea rax, [rdi+0x3]; ret; 
0x00000000190cde: add [rax], al; lea rax, [rdi+0x4]; ret; 
0x00000000190cee: add [rax], al; lea rax, [rdi+0x5]; ret; 
0x00000000190cfe: add [rax], al; lea rax, [rdi+0x6]; ret; 
0x00000000190c3a: add [rax], al; lea rax, [rdi+0x7]; ret; 
0x00000000190d0e: add [rax], al; lea rax, [rdi+0x8]; ret; 
0x00000000190d1e: add [rax], al; lea rax, [rdi+0x9]; ret; 
0x00000000190d2e: add [rax], al; lea rax, [rdi+0xa]; ret; 
0x00000000190d3e: add [rax], al; lea rax, [rdi+0xb]; ret; 
0x00000000190d4e: add [rax], al; lea rax, [rdi+0xc]; ret; 
0x00000000190d5e: add [rax], al; lea rax, [rdi+0xd]; ret; 
0x00000000190d6e: add [rax], al; lea rax, [rdi+0xe]; ret; 
0x00000000190c8d: add [rax], al; lea rax, [rdi+0xf]; ret; 
0x000000000b14ed: add [rax], al; lea rax, [rdi+rax]; cmp [rax], sil; cmovne rax, rdx; ret; 
0x000000000cf51b: add [rax], al; lea rax, [rdi-0x10]; ret; 
0x000000000cf69e: add [rax], al; lea rax, [rdi-0x4]; ret; 
0x000000000cf68e: add [rax], al; lea rax, [rdi-0x8]; ret; 
0x000000000cf67e: add [rax], al; lea rax, [rdi-0xc]; ret; 
0x0000000009c23e: add [rax], al; lea rax, [rdx-0x10]; ret; 
0x0000000009f166: add [rax], al; lea rax, [rip+0x12330]; lea rdx, [rip+0xf18e9]; cmovne rax, rdx; ret; 
0x000000000328ee: add [rax], al; lea rax, [rip+0x181a86]; ret; 
0x00000000047fb2: add [rax], al; lea rax, [rip+0x1a934b]; add rsp, 0x8; ret; 
0x00000000119200: add [rax], al; lea rax, [rip+0xd66b7]; add rsp, 0x18; ret; 
0x00000000118cb8: add [rax], al; lea rax, [rip+0xd6baf]; add rsp, 0x8; ret; 
0x00000000077c17: add [rax], al; lea rax, [rip-0x10dd]; mov r10, rdx; mov dword ptr [rbp-0x51c], 0x1; jmp rax; 
0x0000000007e1fe: add [rax], al; lea rax, [rip-0xfac]; mov r9, rcx; mov dword ptr [rbp-0x510], 0x1; jmp rax; 
0x00000000080f09: add [rax], al; lea rcx, [rip+0x12dbb2]; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x00000000080755: add [rax], al; lea rcx, [rip+0x12e122]; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x0000000006364b: add [rax], al; lea rcx, [rip+0x149b94]; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x0000000006353f: add [rax], al; lea rcx, [rip+0x149c38]; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x0000000008e5e3: add [rax], al; lea rcx, [rip+0x15a8b4]; mov [rdx+0xe0], rcx; pop rbx; ret; 
0x000000000e1dd5: add [rax], al; lea rdi, [rip+0x10d702]; syscall; 
0x000000000e1c95: add [rax], al; lea rdi, [rip+0x10d842]; syscall; 
0x000000000e1bdd: add [rax], al; lea rdi, [rip+0x10d8fa]; syscall; 
0x000000000e1b01: add [rax], al; lea rdi, [rip+0x10d9ce]; syscall; 
0x000000000e1931: add [rax], al; lea rdi, [rip+0x10db5e]; syscall; 
0x000000000e176d: add [rax], al; lea rdi, [rip+0x10dcda]; syscall; 
0x000000000e13b3: add [rax], al; lea rdi, [rip+0x10e03c]; syscall; 
0x000000000dfea5: add [rax], al; lea rdi, [rip+0x10f4c2]; syscall; 
0x000000000dfd65: add [rax], al; lea rdi, [rip+0x10f602]; syscall; 
0x000000000dfcad: add [rax], al; lea rdi, [rip+0x10f6ba]; syscall; 
0x000000000df8e1: add [rax], al; lea rdi, [rip+0x10fa7e]; syscall; 
0x000000000df711: add [rax], al; lea rdi, [rip+0x10fc0e]; syscall; 
0x000000000df54d: add [rax], al; lea rdi, [rip+0x10fd8a]; syscall; 
0x000000000dec65: add [rax], al; lea rdi, [rip+0x11061a]; syscall; 
0x000000000d2bc1: add [rax], al; lea rdi, [rip+0x11c5d6]; syscall; 
0x000000000d298d: add [rax], al; lea rdi, [rip+0x11c80a]; syscall; 
0x000000000ca661: add [rax], al; lea rdi, [rip+0x126b46]; syscall; 
0x0000000006c673: add [rax], al; lea rdi, [rip+0x141690]; movsxd rax, [rdi+r12*4]; add rax, rdi; notrack jmp rax; 
0x0000000009c821: add [rax], al; lea rdi, [rip+0x150356]; syscall; 
0x0000000009e1cd: add [rax], al; lea rdi, [rip+0x150d32]; syscall; 
0x0000000009dfed: add [rax], al; lea rdi, [rip+0x150f12]; syscall; 
0x0000000009de01: add [rax], al; lea rdi, [rip+0x1510fe]; syscall; 
0x0000000009dd91: add [rax], al; lea rdi, [rip+0x15116e]; syscall; 
0x0000000009db61: add [rax], al; lea rdi, [rip+0x15139e]; syscall; 
0x00000000099ac1: add [rax], al; lea rdi, [rip+0x1530b6]; syscall; 
0x00000000099a61: add [rax], al; lea rdi, [rip+0x153116]; syscall; 
0x000000000996a1: add [rax], al; lea rdi, [rip+0x1534d6]; syscall; 
0x00000000099441: add [rax], al; lea rdi, [rip+0x153736]; syscall; 
0x00000000098dd9: add [rax], al; lea rdi, [rip+0x153d9e]; syscall; 
0x00000000098da1: add [rax], al; lea rdi, [rip+0x153dd6]; syscall; 
0x0000000009aa71: add [rax], al; lea rdi, [rip+0x15440e]; syscall; 
0x00000000099fd5: add [rax], al; lea rdi, [rip+0x154e9a]; syscall; 
0x00000000096042: add [rax], al; lea rdi, [rip+0x158e2d]; syscall; 
0x00000000096011: add [rax], al; lea rdi, [rip+0x158e6e]; syscall; 
0x00000000095d91: add [rax], al; lea rdi, [rip+0x1590ee]; syscall; 
0x0000000009586d: add [rax], al; lea rdi, [rip+0x159612]; syscall; 
0x00000000094c52: add [rax], al; lea rdi, [rip+0x159ba5]; syscall; 
0x00000000094a7d: add [rax], al; lea rdi, [rip+0x159d7a]; syscall; 
0x000000000948e1: add [rax], al; lea rdi, [rip+0x159f16]; syscall; 
0x00000000093953: add [rax], al; lea rdi, [rip+0x15ae64]; syscall; 
0x00000000093413: add [rax], al; lea rdi, [rip+0x15b3a4]; syscall; 
0x0000000009306f: add [rax], al; lea rdi, [rip+0x15b748]; syscall; 
0x00000000092d03: add [rax], al; lea rdi, [rip+0x15bab4]; syscall; 
0x0000000009167f: add [rax], al; lea rdi, [rip+0x15d138]; syscall; 
0x000000000913bf: add [rax], al; lea rdi, [rip+0x15d3f8]; syscall; 
0x0000000009104b: add [rax], al; lea rdi, [rip+0x15d76c]; syscall; 
0x00000000084390: add [rax], al; lea rdi, [rip+0x16a3e7]; syscall; 
0x00000000083f93: add [rax], al; lea rdi, [rip+0x16a7e4]; syscall; 
0x00000000083ee8: add [rax], al; lea rdi, [rip+0x16a88f]; syscall; 
0x00000000082021: add [rax], al; lea rdi, [rip+0x16f186]; syscall; 
0x000000000610d5: add [rax], al; lea rdi, [rip+0x18d672]; syscall; 
0x00000000060e51: add [rax], al; lea rdi, [rip+0x18d8f2]; syscall; 
0x0000000005ec7d: add [rax], al; lea rdi, [rip+0x18fabe]; syscall; 
0x0000000005eb3d: add [rax], al; lea rdi, [rip+0x18fbfe]; syscall; 
0x00000000054da1: add [rax], al; lea rdi, [rip+0x199986]; syscall; 
0x00000000054bc1: add [rax], al; lea rdi, [rip+0x199b66]; syscall; 
0x00000000054691: add [rax], al; lea rdi, [rip+0x19a096]; syscall; 
0x000000000522a5: add [rax], al; lea rdi, [rip+0x19c252]; syscall; 
0x00000000052129: add [rax], al; lea rdi, [rip+0x19c3ce]; syscall; 
0x000000000520f1: add [rax], al; lea rdi, [rip+0x19c406]; syscall; 
0x000000000478dd: add [rax], al; lea rdi, [rip+0x1a6bfa]; syscall; 
0x0000000004781d: add [rax], al; lea rdi, [rip+0x1a6cba]; syscall; 
0x00000000047755: add [rax], al; lea rdi, [rip+0x1a6d82]; syscall; 
0x0000000004767d: add [rax], al; lea rdi, [rip+0x1a6e5a]; syscall; 
0x00000000046775: add [rax], al; lea rdi, [rip+0x1a750a]; syscall; 
0x000000000466b0: add [rax], al; lea rdi, [rip+0x1a75cf]; syscall; 
0x0000000004650e: add [rax], al; lea rdi, [rip+0x1a7771]; syscall; 
0x00000000046434: add [rax], al; lea rdi, [rip+0x1a784b]; syscall; 
0x000000000384fe: add [rax], al; lea rdi, [rip+0x1b5731]; syscall; 
0x00000000036b7b: add [rax], al; lea rdi, [rip+0x1b707c]; syscall; 
0x00000000035840: add [rax], al; lea rdi, [rip+0x1b830f]; syscall; 
0x00000000035823: add [rax], al; lea rdi, [rip+0x1b832c]; syscall; 
0x0000000003575b: add [rax], al; lea rdi, [rip+0x1b83f4]; syscall; 
0x00000000026075: add [rax], al; lea rdi, [rip+0x1cb132]; syscall; 
0x00000000025f09: add [rax], al; lea rdi, [rip+0x1cb29e]; syscall; 
0x00000000025de9: add [rax], al; lea rdi, [rip+0x1cb3be]; syscall; 
0x00000000022844: add [rax], al; lea rdi, [rip+0x1cb403]; syscall; 
0x0000000019418c: add [rax], al; lea rdi, [rip+0x2a48b]; movsxd r12, [rdi+r12*4]; add rdi, r12; notrack jmp rdi; 
0x00000000193f73: add [rax], al; lea rdi, [rip+0x2a638]; movsxd rcx, [rdi+r12*4]; add rcx, rdi; notrack jmp rcx; 
0x000000001987ed: add [rax], al; lea rdi, [rip+0x55492]; syscall; 
0x000000001989ad: add [rax], al; lea rdi, [rip+0x55e4a]; syscall; 
0x00000000198cdd: add [rax], al; lea rdi, [rip+0x57832]; syscall; 
0x0000000015e07d: add [rax], al; lea rdi, [rip+0x935d2]; syscall; 
0x0000000015cf45: add [rax], al; lea rdi, [rip+0x9470a]; syscall; 
0x0000000015ce65: add [rax], al; lea rdi, [rip+0x947ea]; syscall; 
0x0000000015cc7d: add [rax], al; lea rdi, [rip+0x949d2]; syscall; 
0x0000000015cbed: add [rax], al; lea rdi, [rip+0x94a62]; syscall; 
0x0000000015cb4d: add [rax], al; lea rdi, [rip+0x94b02]; syscall; 
0x0000000015ca9d: add [rax], al; lea rdi, [rip+0x94bb2]; syscall; 
0x0000000015c6cd: add [rax], al; lea rdi, [rip+0x94f82]; syscall; 
0x0000000015243d: add [rax], al; lea rdi, [rip+0x9e9aa]; syscall; 
0x000000001522dd: add [rax], al; lea rdi, [rip+0x9eb0a]; syscall; 
0x000000001520d1: add [rax], al; lea rdi, [rip+0x9ed16]; syscall; 
0x00000000151f31: add [rax], al; lea rdi, [rip+0x9eeb6]; syscall; 
0x00000000151d9d: add [rax], al; lea rdi, [rip+0x9f04a]; syscall; 
0x00000000151c5d: add [rax], al; lea rdi, [rip+0x9f18a]; syscall; 
0x00000000151afd: add [rax], al; lea rdi, [rip+0x9f2ea]; syscall; 
0x000000001519ed: add [rax], al; lea rdi, [rip+0x9f3fa]; syscall; 
0x0000000014e4dd: add [rax], al; lea rdi, [rip+0xa2906]; syscall; 
0x0000000014c7e5: add [rax], al; lea rdi, [rip+0xa453a]; syscall; 
0x0000000014c6a5: add [rax], al; lea rdi, [rip+0xa467a]; syscall; 
0x0000000014c5ed: add [rax], al; lea rdi, [rip+0xa4732]; syscall; 
0x0000000014c501: add [rax], al; lea rdi, [rip+0xa4816]; syscall; 
0x0000000014c331: add [rax], al; lea rdi, [rip+0xa49b6]; syscall; 
0x0000000014c16d: add [rax], al; lea rdi, [rip+0xa4b52]; syscall; 
0x000000001467cf: add [rax], al; lea rdi, [rip+0xaa38c]; syscall; 
0x00000000144631: add [rax], al; lea rdi, [rip+0xac496]; syscall; 
0x000000001442f9: add [rax], al; lea rdi, [rip+0xac7ce]; syscall; 
0x00000000143f79: add [rax], al; lea rdi, [rip+0xacb4e]; syscall; 
0x00000000143d53: add [rax], al; lea rdi, [rip+0xacd74]; syscall; 
0x00000000143bf1: add [rax], al; lea rdi, [rip+0xaced6]; syscall; 
0x000000001439b4: add [rax], al; lea rdi, [rip+0xad113]; syscall; 
0x00000000142f5d: add [rax], al; lea rdi, [rip+0xadab2]; syscall; 
0x00000000142ddb: add [rax], al; lea rdi, [rip+0xadc34]; syscall; 
0x00000000142da1: add [rax], al; lea rdi, [rip+0xadc6e]; syscall; 
0x00000000142c89: add [rax], al; lea rdi, [rip+0xadd86]; syscall; 
0x00000000142445: add [rax], al; lea rdi, [rip+0xae5ca]; syscall; 
0x0000000014237d: add [rax], al; lea rdi, [rip+0xae692]; syscall; 
0x00000000142261: add [rax], al; lea rdi, [rip+0xae7ae]; syscall; 
0x00000000140e8e: add [rax], al; lea rdi, [rip+0xaf929]; syscall; 
0x0000000013d70d: add [rax], al; lea rdi, [rip+0xb2e02]; syscall; 
0x0000000013d411: add [rax], al; lea rdi, [rip+0xb30fe]; syscall; 
0x000000001390e1: add [rax], al; lea rdi, [rip+0xb741a]; syscall; 
0x00000000138b61: add [rax], al; lea rdi, [rip+0xb797e]; syscall; 
0x0000000013899d: add [rax], al; lea rdi, [rip+0xb7afa]; syscall; 
0x000000001388d5: add [rax], al; lea rdi, [rip+0xb7b62]; syscall; 
0x00000000138795: add [rax], al; lea rdi, [rip+0xb7ca2]; syscall; 
0x000000001386dd: add [rax], al; lea rdi, [rip+0xb7d5a]; syscall; 
0x00000000137fed: add [rax], al; lea rdi, [rip+0xb8442]; syscall; 
0x00000000137ccd: add [rax], al; lea rdi, [rip+0xb8762]; syscall; 
0x00000000137b11: add [rax], al; lea rdi, [rip+0xb891e]; syscall; 
0x00000000134785: add [rax], al; lea rdi, [rip+0xbbb3a]; syscall; 
0x00000000134645: add [rax], al; lea rdi, [rip+0xbbc7a]; syscall; 
0x0000000013458d: add [rax], al; lea rdi, [rip+0xbbd32]; syscall; 
0x000000001344ad: add [rax], al; lea rdi, [rip+0xbbe0a]; syscall; 
0x00000000133fe1: add [rax], al; lea rdi, [rip+0xbc25e]; syscall; 
0x00000000133a11: add [rax], al; lea rdi, [rip+0xbc7ce]; syscall; 
0x000000001334f1: add [rax], al; lea rdi, [rip+0xbcca6]; syscall; 
0x00000000133325: add [rax], al; lea rdi, [rip+0xbce32]; syscall; 
0x000000001331e5: add [rax], al; lea rdi, [rip+0xbcf72]; syscall; 
0x0000000013312d: add [rax], al; lea rdi, [rip+0xbd02a]; syscall; 
0x0000000013304d: add [rax], al; lea rdi, [rip+0xbd102]; syscall; 
0x00000000132c31: add [rax], al; lea rdi, [rip+0xbd4d6]; syscall; 
0x00000000132615: add [rax], al; lea rdi, [rip+0xbda92]; syscall; 
0x000000001324bd: add [rax], al; lea rdi, [rip+0xbdbea]; syscall; 
0x000000001323fd: add [rax], al; lea rdi, [rip+0xbdcaa]; syscall; 
0x00000000132315: add [rax], al; lea rdi, [rip+0xbdd8a]; syscall; 
0x00000000132231: add [rax], al; lea rdi, [rip+0xbde36]; syscall; 
0x00000000131bd1: add [rax], al; lea rdi, [rip+0xbe456]; syscall; 
0x000000001319c5: add [rax], al; lea rdi, [rip+0xbe61a]; syscall; 
0x0000000013186d: add [rax], al; lea rdi, [rip+0xbe772]; syscall; 
0x000000001317ad: add [rax], al; lea rdi, [rip+0xbe832]; syscall; 
0x000000001316c5: add [rax], al; lea rdi, [rip+0xbe912]; syscall; 
0x00000000130ab1: add [rax], al; lea rdi, [rip+0xbf4ae]; syscall; 
0x00000000130841: add [rax], al; lea rdi, [rip+0xbf6de]; syscall; 
0x000000001300c1: add [rax], al; lea rdi, [rip+0xbfdfe]; syscall; 
0x000000001265c5: add [rax], al; lea rdi, [rip+0xc9862]; syscall; 
0x00000000126485: add [rax], al; lea rdi, [rip+0xc99a2]; syscall; 
0x000000001263cd: add [rax], al; lea rdi, [rip+0xc9a5a]; syscall; 
0x00000000125ff3: add [rax], al; lea rdi, [rip+0xc9e2c]; syscall; 
0x00000000125df1: add [rax], al; lea rdi, [rip+0xc9ff6]; syscall; 
0x00000000125c11: add [rax], al; lea rdi, [rip+0xca18e]; syscall; 
0x00000000125a4d: add [rax], al; lea rdi, [rip+0xca30a]; syscall; 
0x0000000012597d: add [rax], al; lea rdi, [rip+0xca386]; syscall; 
0x000000001258b3: add [rax], al; lea rdi, [rip+0xca450]; syscall; 
0x0000000012581e: add [rax], al; lea rdi, [rip+0xca4e5]; syscall; 
0x00000000124b15: add [rax], al; lea rdi, [rip+0xcb1ba]; syscall; 
0x000000001249d5: add [rax], al; lea rdi, [rip+0xcb2fa]; syscall; 
0x0000000012491d: add [rax], al; lea rdi, [rip+0xcb3b2]; syscall; 
0x00000000124323: add [rax], al; lea rdi, [rip+0xcb9a4]; syscall; 
0x00000000124121: add [rax], al; lea rdi, [rip+0xcbb4e]; syscall; 
0x00000000123f41: add [rax], al; lea rdi, [rip+0xcbcc6]; syscall; 
0x00000000123d7d: add [rax], al; lea rdi, [rip+0xcbe22]; syscall; 
0x0000000011870d: add [rax], al; lea rdi, [rip+0xd713a]; syscall; 
0x000000001185f1: add [rax], al; lea rdi, [rip+0xd7256]; syscall; 
0x00000000118191: add [rax], al; lea rdi, [rip+0xd76b6]; syscall; 
0x00000000117c56: add [rax], al; lea rdi, [rip+0xd7bf1]; syscall; 
0x00000000106ac1: add [rax], al; lea rdi, [rip+0xe8af6]; syscall; 
0x000000000d0961: add [rax], al; lea rdi, [rsp+0xd0]; mov rsi, r13; call rbp; 
0x0000000009f72b: add [rax], al; lea rdx, [rip+0x1448c]; cmovne rax, rdx; ret; 
0x00000000194b61: add [rax], al; lea rdx, [rip+0x29ae6]; movsxd rax, [rdx+rax*4]; add rdx, rax; notrack jmp rdx; 
0x0000000014867e: add [rax], al; lea rdx, [rip+0xa34d9]; jmp qword ptr [rdx+rax*8]; 
0x000000001092d1: add [rax], al; lea rdx, [rip+0xa8dc6]; movsxd rax, [rdx+rbx*4]; add rax, rdx; notrack jmp rax; 
0x00000000101089: add [rax], al; lea rdx, [rip+0xb076e]; movsxd rax, [rdx+rdi*4]; add rax, rdx; notrack jmp rax; 
0x0000000009f1cb: add [rax], al; lea rdx, [rip+0xc41bc]; cmovne rax, rdx; ret; 
0x0000000009f795: add [rax], al; lea rdx, [rip+0xc4e62]; cmovne rax, rdx; ret; 
0x000000000ea588: add [rax], al; lea rdx, [rip+0xc6803]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000000e884f: add [rax], al; lea rdx, [rip+0xc83cc]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000000a08be: add [rax], al; lea rdx, [rip+0xd0099]; cmovne rax, rdx; ret; 
0x000000000a081e: add [rax], al; lea rdx, [rip+0xd0119]; cmovne rax, rdx; ret; 
0x000000000a090e: add [rax], al; lea rdx, [rip+0xd21a9]; cmovne rax, rdx; ret; 
0x000000000a086e: add [rax], al; lea rdx, [rip+0xd2229]; cmovne rax, rdx; ret; 
0x0000000009f7fb: add [rax], al; lea rdx, [rip+0xd6fbc]; cmovne rax, rdx; ret; 
0x000000000a07cb: add [rax], al; lea rdx, [rip+0xda37c]; cmovne rax, rdx; ret; 
0x000000000a047c: add [rax], al; lea rdx, [rip+0xf08fb]; cmovne rax, rdx; ret; 
0x00000000113406: add [rax], al; lea rdx, [rsp+0x8]; mov esi, 0x10; mov eax, 0x48; syscall; 
0x00000000152ce6: add [rax], al; lea rsi, [r10+0x8]; mov rdi, rbp; call qword ptr [rdx+0x10]; 
0x00000000152f36: add [rax], al; lea rsi, [r13+0x8]; mov rdi, rbp; call qword ptr [rax+0x10]; 
0x000000000fa0ff: add [rax], al; lea rsi, [rip+0xb716c]; movsxd rax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x000000000bc0d0: add [rax], al; lea rsi, [rip+0xf35a7]; movsxd rax, [rsi+rdi*4]; add rax, rsi; notrack jmp rax; 
0x0000000008e93f: add [rax], al; lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax+0x90]; 
0x00000000089197: add [rax], al; lea rsi, [rsp+0x30]; mov rdi, r15; call qword ptr [r14+0x90]; 
0x00000000082aeb: add [rax], al; lea rsi, [rsp+0x8]; call rax; 
0x000000000578f6: add [rax], al; leave; ret; 
0x00000000042196: add [rax], al; loopne 0x00000000000421d9; or rax, rdx; movq xmm0, rax; ret; 
0x0000000015f52c: add [rax], al; mov [r13+0x18], rax; lea rdi, [r15+0x908]; call qword ptr [r15+0xf10]; 
0x000000000a8a9e: add [rax], al; mov [rax], ecx; ret; 
0x0000000014d19c: add [rax], al; mov [rbx+0xa8], ebp; bswap ebp; mov ebp, ebp; call qword ptr [rax+0x18]; 
0x00000000149d04: add [rax], al; mov [rcx], eax; sub rdx, rsi; mov rbp, rdx; call qword ptr [rbx+0x10]; 
0x000000001786de: add [rax], al; mov [rcx], edx; mov [rcx+0x3], edx; ret; 
0x000000001786ce: add [rax], al; mov [rcx], edx; mov [rcx+0x4], dx; ret; 
0x000000001786ae: add [rax], al; mov [rcx], edx; ret; 
0x0000000017873e: add [rax], al; mov [rcx], rdx; mov [rcx+0x5], rdx; ret; 
0x0000000017874e: add [rax], al; mov [rcx], rdx; mov [rcx+0x6], rdx; ret; 
0x0000000017871e: add [rax], al; mov [rcx], rdx; mov [rcx+0x7], edx; ret; 
0x0000000017875e: add [rax], al; mov [rcx], rdx; mov [rcx+0x7], rdx; ret; 
0x0000000017870e: add [rax], al; mov [rcx], rdx; mov [rcx+0x8], dx; ret; 
0x0000000017872e: add [rax], al; mov [rcx], rdx; mov [rcx+0x8], edx; ret; 
0x0000000017876e: add [rax], al; mov [rcx], rdx; mov [rcx+0x8], rdx; ret; 
0x000000001786ee: add [rax], al; mov [rcx], rdx; ret; 
0x00000000113cb9: add [rax], al; mov [rdi+0x16], ax; ret; 
0x000000001573ff: add [rax], al; mov [rdi+0x28], eax; mov [rdi+0x18], rsi; mov eax, r8d; ret; 
0x0000000013b43c: add [rax], al; mov [rdi+0xc], edx; mov [rsi], rdi; ret; 
0x000000000b7ece: add [rax], al; mov [rdi-0x1], rdx; ret; 
0x000000000b84be: add [rax], al; mov [rdi], dh; lea rax, [rdi]; ret; 
0x000000000b6e7e: add [rax], al; mov [rdi], dh; ret; 
0x000000000a89ae: add [rax], al; mov [rdi], dx; add rax, rdi; ret; 
0x0000000018a59e: add [rax], al; mov [rdi], dx; mov [rdi+r8-0x2], dx; vzeroupper; ret; 
0x0000000018a58e: add [rax], al; mov [rdi], dx; vzeroupper; ret; 
0x000000000a8b6e: add [rax], al; mov [rdi], ecx; lea rax, [rdi+rdx-0x1]; ret; 
0x000000000b7ebe: add [rax], al; mov [rdi], edx; mov [rdi+0x4], dx; ret; 
0x000000000a8709: add [rax], al; mov [rdi], rax; mov rax, r9; ret; 
0x000000000b7f2e: add [rax], al; mov [rdi], rdx; mov [rdi+0x5], rdx; ret; 
0x000000000b7f3e: add [rax], al; mov [rdi], rdx; mov [rdi+0x6], rdx; ret; 
0x000000000b7f0e: add [rax], al; mov [rdi], rdx; mov [rdi+0x7], edx; ret; 
0x000000000b7efe: add [rax], al; mov [rdi], rdx; mov [rdi+0x8], dx; ret; 
0x000000000b7f1e: add [rax], al; mov [rdi], rdx; mov [rdi+0x8], edx; ret; 
0x0000000018a5be: add [rax], al; mov [rdi], rdx; mov [rdi+r8-0x8], rdx; vzeroupper; ret; 
0x000000000b7ede: add [rax], al; mov [rdi], rdx; ret; 
0x00000000057b88: add [rax], al; mov [rdi], rsi; ret; 
0x000000000a8b3e: add [rax], al; mov [rdi], si; lea rax, [rdi+rdx-0x1]; ret; 
0x0000000014d003: add [rax], al; mov [rdx+0x6c], ax; mov eax, 0x1; ret; 
0x00000000063047: add [rax], al; mov [rdx+0x8], rcx; mov dword ptr [rdx+0x4], 0x1; ret; 
0x00000000082828: add [rax], al; mov [rdx+0xe0], rcx; ret; 
0x00000000095260: add [rax], al; mov [rip+0x157044], eax; ret; 
0x00000000095239: add [rax], al; mov [rip+0x15704e], rax; ret; 
0x00000000095210: add [rax], al; mov [rip+0x15706f], rax; ret; 
0x000000000951f0: add [rax], al; mov [rip+0x157087], rax; ret; 
0x00000000052a20: add [rax], al; mov [rip+0x19bc3d], al; lea rax, [rip+0x19bc31]; mov byte ptr [rax+rdx], 0x0; ret; 
0x00000000148228: add [rax], al; mov [rsi+0x10], rax; ret; 
0x00000000048137: add [rax], al; mov [rsi+0x10], rax; xor eax, eax; mov dword ptr [rsi+0xc], 0x1000b; ret; 
0x00000000048186: add [rax], al; mov [rsi+0x10], rax; xor eax, eax; ret; 
0x00000000148237: add [rax], al; mov [rsi+0x8], eax; ret; 
0x000000001481c4: add [rax], al; mov [rsi+0x8], rax; ret; 
0x000000000481c8: add [rax], al; mov [rsi+0xe], ax; xor eax, eax; ret; 
0x0000000010d098: add [rax], al; mov [rsi], eax; xor eax, eax; ret; 
0x0000000014ef69: add [rax], al; mov [rsp+0x10], rax; mov rax, [rsp+0x48]; call qword ptr [rax+0x28]; 
0x00000000089261: add [rax], al; mov [rsp+0x10], rcx; xor edx, edx; mov rdi, r15; call qword ptr [r14+0x80]; 
0x000000000df464: add [rax], al; mov [rsp+0x10], rsi; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000147842: add [rax], al; mov [rsp+0x18], rdi; lea r9, [rsp+0x40]; call qword ptr [rax]; 
0x000000001538e8: add [rax], al; mov [rsp+0x38], rdx; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x000000000d0391: add [rax], al; mov [rsp+0x58], rax; xor eax, eax; mov [rsp+0x50], r12; call rbx; 
0x0000000015f1a0: add [rax], al; mov [rsp+0x68], rax; xor eax, eax; call qword ptr [r12+0xf08]; 
0x0000000011adfb: add [rax], al; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000005215b: add [rax], al; mov [rsp+0x8], rax; xor eax, eax; mov eax, 0x3e; syscall; 
0x0000000010c95a: add [rax], al; mov [rsp+0xe8], eax; mov eax, 0xe; syscall; 
0x00000000041c43: add [rax], al; mov [rsp-0x10], ax; fstp tbyte ptr [rdi], st; fld st, tbyte ptr [rsp-0x18]; ret; 
0x0000000017a9ee: add [rax], al; mov ax, [rcx]; mov [rdx], ax; lea rax, [rdx+0x1]; ret; 
0x000000001766be: add [rax], al; mov ax, [rcx]; mov [rdx], ax; mov rax, rdi; ret; 
0x000000000a8a76: add [rax], al; mov byte ptr [rax], 0x0; ret; 
0x00000000076b05: add [rax], al; mov byte ptr [rbp-0x508], 0x20; mov [rbp-0x500], rsi; jmp rax; 
0x00000000121771: add [rax], al; mov byte ptr [rbp-0x7ca], 0x0; mov byte ptr [rbp-0x7c9], 0x73; syscall; 
0x000000000ec47e: add [rax], al; mov byte ptr [rdi+0x8], 0x15; mov eax, 0x1; ret; 
0x000000000ec4ae: add [rax], al; mov byte ptr [rdi+0x8], 0x1a; mov eax, 0x2; ret; 
0x000000000ec4be: add [rax], al; mov byte ptr [rdi+0x8], 0x1c; mov eax, 0x2; ret; 
0x00000000189713: add [rax], al; mov byte ptr [rdi], 0x0; vzeroupper; ret; 
0x000000000ec473: add [rax], al; mov byte ptr [rdi], 0x5b; ret; 
0x000000000b6e9e: add [rax], al; mov cx, [rsi]; mov [rdi], cx; mov [rdi+0x2], dh; ret; 
0x0000000014d01e: add [rax], al; mov dword ptr [r8+0x4], 0x1; mov eax, 0x1; ret; 
0x0000000007d23c: add [rax], al; mov dword ptr [rbp-0x4f8], 0x20; jmp rax; 
0x0000000007d227: add [rax], al; mov dword ptr [rbp-0x51c], 0x0; mov qword ptr [rbp-0x4d8], 0x0; mov dword ptr [rbp-0x4f8], 0x20; jmp rax; 
0x0000000007f19e: add [rax], al; mov dword ptr [rbp-0x51c], 0x1; mov r9, rsi; jmp rax; 
0x0000000007892e: add [rax], al; mov dword ptr [rbp-0x528], 0x1; mov r10, rdx; jmp rax; 
0x0000000007f20e: add [rax], al; mov dword ptr [rbp-0x528], 0x1; mov r9, rsi; jmp rax; 
0x00000000078a9e: add [rax], al; mov dword ptr [rbp-0x538], 0x1; mov r10, rdx; jmp rax; 
0x00000000121767: add [rax], al; mov dword ptr [rbp-0x7d0], 0x0; mov byte ptr [rbp-0x7ca], 0x0; mov byte ptr [rbp-0x7c9], 0x73; syscall; 
0x00000000148a9a: add [rax], al; mov dword ptr [rbx+0x23b0], 0x0; mov rdi, r12; call qword ptr [rax+0x28]; 
0x0000000008fdbc: add [rax], al; mov dword ptr [rbx+0x70], 0xffffffff; pop rbx; ret; 
0x00000000057c60: add [rax], al; mov dword ptr [rdx], 0xffffc002; ret; 
0x00000000153a99: add [rax], al; mov dword ptr [rsp+0x10], 0x1; mov dword ptr [rsp+0x18], 0x1; call qword ptr [rax+0x18]; 
0x00000000153af5: add [rax], al; mov dword ptr [rsp+0x10], 0x1; mov dword ptr [rsp+0x18], 0x1; mov dword ptr [rsp+0x20], 0x5; call qword ptr [rax+0x18]; 
0x00000000153aa1: add [rax], al; mov dword ptr [rsp+0x18], 0x1; call qword ptr [rax+0x18]; 
0x00000000153afd: add [rax], al; mov dword ptr [rsp+0x18], 0x1; mov dword ptr [rsp+0x20], 0x5; call qword ptr [rax+0x18]; 
0x00000000153b05: add [rax], al; mov dword ptr [rsp+0x20], 0x5; call qword ptr [rax+0x18]; 
0x000000001538e0: add [rax], al; mov dword ptr [rsp+0x30], 0x0; mov [rsp+0x38], rdx; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x00000000153be9: add [rax], al; mov dword ptr [rsp+0x30], 0x2; movups [rsp+0x18], xmm1; movups [rsp+0x38], xmm0; call qword ptr [rax+0x18]; 
0x00000000153cc2: add [rax], al; mov dword ptr [rsp+0xb0], 0x1; mov dword ptr [rsp+0xb8], 0x1; call qword ptr [rax+0x18]; 
0x00000000153ccd: add [rax], al; mov dword ptr [rsp+0xb8], 0x1; call qword ptr [rax+0x18]; 
0x00000000153ea8: add [rax], al; mov dword ptr [rsp+0xd0], 0x1; movups [rsp+0xb8], xmm5; call rax; 
0x00000000153e0c: add [rax], al; mov dword ptr [rsp+0xd0], 0x2; movups [rsp+0xb8], xmm3; movups [rsp+0xd8], xmm0; call rax; 
0x00000000102895: add [rax], al; mov dword ptr fs:[0x40], 0x0; mov eax, r8d; ret; 
0x000000000b84ce: add [rax], al; mov dx, [rsi]; mov [rdi], dx; lea rax, [rdi+0x1]; ret; 
0x000000000b930e: add [rax], al; mov dx, [rsi]; mov [rdi], dx; lea rax, [rdi+0x2]; ret; 
0x000000000b7b7e: add [rax], al; mov dx, [rsi]; mov [rdi], dx; ret; 
0x0000000013bd25: add [rax], al; mov eax, 0x102; cmovne eax, edx; ret; 
0x00000000113b88: add [rax], al; mov eax, 0x10; syscall; 
0x0000000011f267: add [rax], al; mov eax, 0x119; syscall; 
0x000000000dcfec: add [rax], al; mov eax, 0x1; add rsp, 0x8; ret; 
0x000000000cf0ae: add [rax], al; mov eax, 0x1; jg short 0x00000000000cf0b9; neg eax; ret; 
0x00000000192aee: add [rax], al; mov eax, 0x1; jg short 0x0000000000192b00; neg eax; ret; 
0x00000000057b6f: add [rax], al; mov eax, 0x1; ret; 
0x000000000e509a: add [rax], al; mov eax, 0x20; cmove rax, rdx; ret; 
0x00000000057d82: add [rax], al; mov eax, 0x2; ret; 
0x00000000113410: add [rax], al; mov eax, 0x48; syscall; 
0x000000000e4fb0: add [rax], al; mov eax, 0x7f; cmove rax, rdx; ret; 
0x00000000043437: add [rax], al; mov eax, 0x7f; syscall; 
0x0000000013c9ee: add [rax], al; mov eax, 0x7fffffff; ret; 
0x00000000044156: add [rax], al; mov eax, 0x80; syscall; 
0x00000000043483: add [rax], al; mov eax, 0x82; syscall; 
0x0000000011f7f6: add [rax], al; mov eax, 0x95; syscall; 
0x00000000054ebc: add [rax], al; mov eax, 0x9e; syscall; 
0x000000000f24ce: add [rax], al; mov eax, 0xc; ret; 
0x000000000e1dd0: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x10d702]; syscall; 
0x000000000e1c90: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x10d842]; syscall; 
0x000000000e1bd8: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x10d8fa]; syscall; 
0x000000000e1afc: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x10d9ce]; syscall; 
0x000000000e192c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x10db5e]; syscall; 
0x000000000e1768: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x10dcda]; syscall; 
0x000000000e13ae: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x10e03c]; syscall; 
0x000000000dfea0: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x10f4c2]; syscall; 
0x000000000dfd60: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x10f602]; syscall; 
0x000000000dfca8: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x10f6ba]; syscall; 
0x000000000df8dc: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x10fa7e]; syscall; 
0x000000000df70c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x10fc0e]; syscall; 
0x000000000df548: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x10fd8a]; syscall; 
0x000000000dec60: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x11061a]; syscall; 
0x000000000d2bbc: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x11c5d6]; syscall; 
0x000000000d2988: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x11c80a]; syscall; 
0x000000000ca65c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x126b46]; syscall; 
0x0000000009c81c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x150356]; syscall; 
0x0000000009e1c8: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x150d32]; syscall; 
0x0000000009dfe8: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x150f12]; syscall; 
0x0000000009ddfc: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x1510fe]; syscall; 
0x0000000009dd8c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x15116e]; syscall; 
0x0000000009db5c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x15139e]; syscall; 
0x00000000099abc: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x1530b6]; syscall; 
0x00000000099a5c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x153116]; syscall; 
0x0000000009969c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x1534d6]; syscall; 
0x0000000009943c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x153736]; syscall; 
0x00000000098dd4: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x153d9e]; syscall; 
0x00000000098d9c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x153dd6]; syscall; 
0x0000000009aa6c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x15440e]; syscall; 
0x00000000099fd0: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x154e9a]; syscall; 
0x0000000009603d: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x158e2d]; syscall; 
0x0000000009600c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x158e6e]; syscall; 
0x00000000095d8c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x1590ee]; syscall; 
0x00000000095868: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x159612]; syscall; 
0x00000000094c4d: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x159ba5]; syscall; 
0x00000000094a78: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x159d7a]; syscall; 
0x000000000948dc: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x159f16]; syscall; 
0x0000000009394e: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x15ae64]; syscall; 
0x0000000009340e: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x15b3a4]; syscall; 
0x0000000009306a: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x15b748]; syscall; 
0x00000000092cfe: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x15bab4]; syscall; 
0x0000000009167a: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x15d138]; syscall; 
0x000000000913ba: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x15d3f8]; syscall; 
0x00000000091046: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x15d76c]; syscall; 
0x0000000008438b: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x16a3e7]; syscall; 
0x00000000083f8e: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x16a7e4]; syscall; 
0x00000000083ee3: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x16a88f]; syscall; 
0x0000000008201c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x16f186]; syscall; 
0x000000000610d0: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x18d672]; syscall; 
0x00000000060e4c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x18d8f2]; syscall; 
0x0000000005ec78: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x18fabe]; syscall; 
0x0000000005eb38: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x18fbfe]; syscall; 
0x00000000054d9c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x199986]; syscall; 
0x00000000054bbc: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x199b66]; syscall; 
0x0000000005468c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x19a096]; syscall; 
0x000000000522a0: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x19c252]; syscall; 
0x00000000052124: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x19c3ce]; syscall; 
0x000000000520ec: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x19c406]; syscall; 
0x000000000478d8: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x1a6bfa]; syscall; 
0x00000000047818: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x1a6cba]; syscall; 
0x00000000047750: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x1a6d82]; syscall; 
0x00000000047678: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x1a6e5a]; syscall; 
0x00000000046770: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x1a750a]; syscall; 
0x000000000466ab: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x1a75cf]; syscall; 
0x00000000046509: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x1a7771]; syscall; 
0x0000000004642f: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x1a784b]; syscall; 
0x000000000384f9: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x1b5731]; syscall; 
0x00000000036b76: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x1b707c]; syscall; 
0x0000000003583b: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x1b830f]; syscall; 
0x0000000003581e: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x1b832c]; syscall; 
0x00000000035756: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x1b83f4]; syscall; 
0x00000000026070: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x1cb132]; syscall; 
0x00000000025f04: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x1cb29e]; syscall; 
0x00000000025de4: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x1cb3be]; syscall; 
0x0000000002283f: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x1cb403]; syscall; 
0x000000001987e8: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x55492]; syscall; 
0x000000001989a8: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x55e4a]; syscall; 
0x00000000198cd8: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x57832]; syscall; 
0x0000000015e078: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x935d2]; syscall; 
0x0000000015cf40: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x9470a]; syscall; 
0x0000000015ce60: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x947ea]; syscall; 
0x0000000015cc78: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x949d2]; syscall; 
0x0000000015cbe8: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x94a62]; syscall; 
0x0000000015cb48: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x94b02]; syscall; 
0x0000000015ca98: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x94bb2]; syscall; 
0x0000000015c6c8: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x94f82]; syscall; 
0x00000000152438: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x9e9aa]; syscall; 
0x000000001522d8: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x9eb0a]; syscall; 
0x000000001520cc: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x9ed16]; syscall; 
0x00000000151f2c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x9eeb6]; syscall; 
0x00000000151d98: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x9f04a]; syscall; 
0x00000000151c58: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x9f18a]; syscall; 
0x00000000151af8: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x9f2ea]; syscall; 
0x000000001519e8: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x9f3fa]; syscall; 
0x0000000014e4d8: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xa2906]; syscall; 
0x0000000014c7e0: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xa453a]; syscall; 
0x0000000014c6a0: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xa467a]; syscall; 
0x0000000014c5e8: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xa4732]; syscall; 
0x0000000014c4fc: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xa4816]; syscall; 
0x0000000014c32c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xa49b6]; syscall; 
0x0000000014c168: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xa4b52]; syscall; 
0x000000001467ca: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xaa38c]; syscall; 
0x0000000014462c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xac496]; syscall; 
0x000000001442f4: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xac7ce]; syscall; 
0x00000000143f74: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xacb4e]; syscall; 
0x00000000143d4e: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xacd74]; syscall; 
0x00000000143bec: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xaced6]; syscall; 
0x000000001439af: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xad113]; syscall; 
0x00000000142f58: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xadab2]; syscall; 
0x00000000142dd6: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xadc34]; syscall; 
0x00000000142d9c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xadc6e]; syscall; 
0x00000000142c84: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xadd86]; syscall; 
0x00000000142440: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xae5ca]; syscall; 
0x00000000142378: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xae692]; syscall; 
0x0000000014225c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xae7ae]; syscall; 
0x00000000140e89: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xaf929]; syscall; 
0x0000000013d708: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xb2e02]; syscall; 
0x0000000013d40c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xb30fe]; syscall; 
0x000000001390dc: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xb741a]; syscall; 
0x00000000138b5c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xb797e]; syscall; 
0x00000000138998: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xb7afa]; syscall; 
0x000000001388d0: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xb7b62]; syscall; 
0x00000000138790: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xb7ca2]; syscall; 
0x000000001386d8: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xb7d5a]; syscall; 
0x00000000137fe8: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xb8442]; syscall; 
0x00000000137cc8: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xb8762]; syscall; 
0x00000000137b0c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xb891e]; syscall; 
0x00000000134780: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xbbb3a]; syscall; 
0x00000000134640: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xbbc7a]; syscall; 
0x00000000134588: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xbbd32]; syscall; 
0x000000001344a8: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xbbe0a]; syscall; 
0x00000000133fdc: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xbc25e]; syscall; 
0x00000000133a0c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xbc7ce]; syscall; 
0x000000001334ec: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xbcca6]; syscall; 
0x00000000133320: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xbce32]; syscall; 
0x000000001331e0: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xbcf72]; syscall; 
0x00000000133128: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xbd02a]; syscall; 
0x00000000133048: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xbd102]; syscall; 
0x00000000132c2c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xbd4d6]; syscall; 
0x00000000132610: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xbda92]; syscall; 
0x000000001324b8: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xbdbea]; syscall; 
0x000000001323f8: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xbdcaa]; syscall; 
0x00000000132310: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xbdd8a]; syscall; 
0x0000000013222c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xbde36]; syscall; 
0x00000000131bcc: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xbe456]; syscall; 
0x000000001319c0: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xbe61a]; syscall; 
0x00000000131868: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xbe772]; syscall; 
0x000000001317a8: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xbe832]; syscall; 
0x000000001316c0: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xbe912]; syscall; 
0x00000000130aac: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xbf4ae]; syscall; 
0x0000000013083c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xbf6de]; syscall; 
0x000000001300bc: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xbfdfe]; syscall; 
0x000000001265c0: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xc9862]; syscall; 
0x00000000126480: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xc99a2]; syscall; 
0x000000001263c8: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xc9a5a]; syscall; 
0x00000000125fee: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xc9e2c]; syscall; 
0x00000000125dec: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xc9ff6]; syscall; 
0x00000000125c0c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xca18e]; syscall; 
0x00000000125a48: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xca30a]; syscall; 
0x00000000125978: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xca386]; syscall; 
0x000000001258ae: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xca450]; syscall; 
0x00000000125819: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xca4e5]; syscall; 
0x00000000124b10: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xcb1ba]; syscall; 
0x000000001249d0: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xcb2fa]; syscall; 
0x00000000124918: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xcb3b2]; syscall; 
0x0000000012431e: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xcb9a4]; syscall; 
0x0000000012411c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xcbb4e]; syscall; 
0x00000000123f3c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xcbcc6]; syscall; 
0x00000000123d78: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xcbe22]; syscall; 
0x00000000118708: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xd713a]; syscall; 
0x000000001185ec: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xd7256]; syscall; 
0x0000000011818c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xd76b6]; syscall; 
0x00000000117c51: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xd7bf1]; syscall; 
0x00000000106abc: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xe8af6]; syscall; 
0x000000000229f4: add [rax], al; mov eax, 0xca; syscall; 
0x0000000004318d: add [rax], al; mov eax, 0xd; syscall; 
0x000000000dd2b1: add [rax], al; mov eax, 0xe6; syscall; 
0x00000000043032: add [rax], al; mov eax, 0xe; syscall; 
0x0000000013bce4: add [rax], al; mov eax, 0xffffffff; cmove eax, edx; ret; 
0x000000000412ec: add [rax], al; mov eax, 0xffffffff; pop rbp; ret; 
0x00000000024724: add [rax], al; mov eax, 0xffffffff; ret; 
0x0000000011cdae: add [rax], al; mov eax, [rax+0x38]; test eax, eax; cmove eax, edx; ret; 
0x000000000475b5: add [rax], al; mov eax, [rax+0x58]; ret; 
0x0000000017ddce: add [rax], al; mov eax, [rcx]; mov [rdx], eax; mov rax, rdi; ret; 
0x000000000cefce: add [rax], al; mov eax, [rdi+0x14]; cmp eax, [rsi+0x14]; jne 0x00000000000cf0b0; ret; 
0x000000000cf02e: add [rax], al; mov eax, [rdi+0x24]; cmp eax, [rsi+0x24]; jne short 0x00000000000cf0b0; ret; 
0x000000000cef6e: add [rax], al; mov eax, [rdi+0x4]; cmp eax, [rsi+0x4]; jne 0x00000000000cf0b0; ret; 
0x00000000026f86: add [rax], al; mov eax, [rip+0x1c69c6]; test eax, eax; je short 0x0000000000026f98; ret; 
0x00000000140bd6: add [rax], al; mov eax, [rip+0xafbe6]; test eax, eax; je short 0x0000000000140be8; ret; 
0x00000000099fa5: add [rax], al; mov eax, ebx; syscall; 
0x00000000042ffd: add [rax], al; mov eax, ecx; syscall; 
0x0000000012fb36: add [rax], al; mov eax, edi; and eax, 0xffffff; ret; 
0x0000000009d747: add [rax], al; mov eax, r12d; pop r12; ret; 
0x0000000015e253: add [rax], al; mov eax, r12d; pop rbp; pop r12; ret; 
0x0000000011736d: add [rax], al; mov eax, r8d; add rsp, 0x8; ret; 
0x00000000113902: add [rax], al; mov eax, r8d; mov ebx, fs:[r10]; syscall; 
0x0000000015ce84: add [rax], al; mov eax, r8d; mov qword ptr [rdx], 0x0; ret; 
0x0000000002f733: add [rax], al; mov eax, r8d; pop rbp; pop r12; ret; 
0x00000000081a71: add [rax], al; mov eax, r8d; pop rbx; pop rbp; ret; 
0x0000000004391d: add [rax], al; mov eax, r8d; pop rbx; ret; 
0x0000000008cd74: add [rax], al; mov eax, r8d; ret; 
0x0000000008cf83: add [rax], al; mov eax, r9d; syscall; 
0x000000000b6ebe: add [rax], al; mov ecx, [rsi]; mov [rdi+0x4], dh; mov [rdi], ecx; ret; 
0x0000000005540d: add [rax], al; mov edi, 0x2; mov r10d, 0x8; mov eax, 0xe; syscall; 
0x0000000005b4bf: add [rax], al; mov edi, 0x3004; mov eax, 0x9e; syscall; 
0x00000000116b74: add [rax], al; mov edi, 0xffffff9c; mov eax, 0x118; syscall; 
0x0000000013a877: add [rax], al; mov edi, [rbp-0x60]; syscall; 
0x0000000013a68e: add [rax], al; mov edi, [rbx]; mov eax, 0x3; syscall; 
0x0000000011f2be: add [rax], al; mov edi, [rsp+0x4]; syscall; 
0x00000000120fe3: add [rax], al; mov edi, [rsp+0x8]; syscall; 
0x00000000114ff3: add [rax], al; mov edi, [rsp+0xc]; syscall; 
0x00000000160ba1: add [rax], al; mov edi, eax; mov eax, 0x3e; syscall; 
0x000000000e315e: add [rax], al; mov edi, edx; mov eax, esi; syscall; 
0x000000001214bb: add [rax], al; mov edi, r12d; mov eax, 0x14; syscall; 
0x00000000085e06: add [rax], al; mov edx, 0x10; mov rsi, r13; mov rdi, r15; call qword ptr [r14+0x38]; 
0x00000000090887: add [rax], al; mov edx, 0x1; mov rdi, rbx; call qword ptr [r12+0x48]; 
0x0000000008a099: add [rax], al; mov edx, 0x1; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x000000000e5124: add [rax], al; mov edx, 0x40; mov eax, 0x20; cmove rax, rdx; ret; 
0x000000001214b6: add [rax], al; mov edx, 0x40; mov edi, r12d; mov eax, 0x14; syscall; 
0x000000000e5018: add [rax], al; mov edx, 0x7f; cmovne rax, rdx; ret; 
0x0000000011f31a: add [rax], al; mov edx, 0x8; syscall; 
0x000000000b6eae: add [rax], al; mov edx, [rsi]; mov [rdi], edx; ret; 
0x00000000089474: add [rax], al; mov edx, r12d; mov rsi, rbp; mov rdi, r15; call qword ptr [r14+0x80]; 
0x0000000008eb7c: add [rax], al; mov edx, r13d; mov rsi, r12; mov rdi, rbp; call qword ptr [r15+0x80]; 
0x00000000147324: add [rax], al; mov esi, 0x4; mov rdi, rbp; lea r9, [rsp+0x20]; call qword ptr [rax]; 
0x00000000113b83: add [rax], al; mov esi, 0x5409; mov eax, 0x10; syscall; 
0x00000000113bb4: add [rax], al; mov esi, 0x5409; mov r8d, eax; mov eax, 0x10; syscall; 
0x000000000945ed: add [rax], al; mov esi, 0x80; mov eax, 0xca; syscall; 
0x000000000946ba: add [rax], al; mov esi, 0x80; syscall; 
0x000000000e1dcb: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10d702]; syscall; 
0x000000000e1c8b: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10d842]; syscall; 
0x000000000e1bd3: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10d8fa]; syscall; 
0x000000000e1af7: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10d9ce]; syscall; 
0x000000000e1927: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10db5e]; syscall; 
0x000000000e1763: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10dcda]; syscall; 
0x000000000e13a9: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10e03c]; syscall; 
0x000000000dfe9b: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10f4c2]; syscall; 
0x000000000dfd5b: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10f602]; syscall; 
0x000000000dfca3: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10f6ba]; syscall; 
0x000000000df8d7: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10fa7e]; syscall; 
0x000000000df707: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10fc0e]; syscall; 
0x000000000df543: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10fd8a]; syscall; 
0x000000000dec5b: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x11061a]; syscall; 
0x000000000d2bb7: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x11c5d6]; syscall; 
0x000000000d2983: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x11c80a]; syscall; 
0x000000000ca657: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x126b46]; syscall; 
0x0000000009c817: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x150356]; syscall; 
0x0000000009e1c3: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x150d32]; syscall; 
0x0000000009dfe3: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x150f12]; syscall; 
0x0000000009ddf7: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1510fe]; syscall; 
0x0000000009dd87: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x15116e]; syscall; 
0x0000000009db57: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x15139e]; syscall; 
0x00000000099ab7: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1530b6]; syscall; 
0x00000000099a57: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x153116]; syscall; 
0x00000000099697: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1534d6]; syscall; 
0x00000000099437: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x153736]; syscall; 
0x00000000098dcf: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x153d9e]; syscall; 
0x00000000098d97: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x153dd6]; syscall; 
0x0000000009aa67: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x15440e]; syscall; 
0x00000000099fcb: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x154e9a]; syscall; 
0x00000000096038: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x158e2d]; syscall; 
0x00000000096007: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x158e6e]; syscall; 
0x00000000095d87: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1590ee]; syscall; 
0x00000000095863: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x159612]; syscall; 
0x00000000094c48: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x159ba5]; syscall; 
0x00000000094a73: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x159d7a]; syscall; 
0x000000000948d7: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x159f16]; syscall; 
0x00000000093949: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x15ae64]; syscall; 
0x00000000093409: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x15b3a4]; syscall; 
0x00000000093065: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x15b748]; syscall; 
0x00000000092cf9: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x15bab4]; syscall; 
0x00000000091675: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x15d138]; syscall; 
0x000000000913b5: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x15d3f8]; syscall; 
0x00000000091041: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x15d76c]; syscall; 
0x00000000084386: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x16a3e7]; syscall; 
0x00000000083f89: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x16a7e4]; syscall; 
0x00000000083ede: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x16a88f]; syscall; 
0x00000000082017: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x16f186]; syscall; 
0x000000000610cb: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x18d672]; syscall; 
0x00000000060e47: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x18d8f2]; syscall; 
0x0000000005ec73: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x18fabe]; syscall; 
0x0000000005eb33: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x18fbfe]; syscall; 
0x00000000054d97: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x199986]; syscall; 
0x00000000054bb7: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x199b66]; syscall; 
0x00000000054687: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x19a096]; syscall; 
0x0000000005229b: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x19c252]; syscall; 
0x0000000005211f: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x19c3ce]; syscall; 
0x000000000520e7: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x19c406]; syscall; 
0x000000000478d3: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1a6bfa]; syscall; 
0x00000000047813: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1a6cba]; syscall; 
0x0000000004774b: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1a6d82]; syscall; 
0x00000000047673: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1a6e5a]; syscall; 
0x0000000004676b: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1a750a]; syscall; 
0x000000000466a6: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1a75cf]; syscall; 
0x00000000046504: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1a7771]; syscall; 
0x0000000004642a: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1a784b]; syscall; 
0x000000000384f4: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1b5731]; syscall; 
0x00000000036b71: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1b707c]; syscall; 
0x00000000035836: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1b830f]; syscall; 
0x00000000035819: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1b832c]; syscall; 
0x00000000035751: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1b83f4]; syscall; 
0x0000000002606b: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1cb132]; syscall; 
0x00000000025eff: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1cb29e]; syscall; 
0x00000000025ddf: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1cb3be]; syscall; 
0x0000000002283a: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1cb403]; syscall; 
0x000000001987e3: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x55492]; syscall; 
0x000000001989a3: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x55e4a]; syscall; 
0x00000000198cd3: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x57832]; syscall; 
0x0000000015e073: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x935d2]; syscall; 
0x0000000015cf3b: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9470a]; syscall; 
0x0000000015ce5b: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x947ea]; syscall; 
0x0000000015cc73: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x949d2]; syscall; 
0x0000000015cbe3: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x94a62]; syscall; 
0x0000000015cb43: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x94b02]; syscall; 
0x0000000015ca93: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x94bb2]; syscall; 
0x0000000015c6c3: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x94f82]; syscall; 
0x00000000152433: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9e9aa]; syscall; 
0x000000001522d3: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9eb0a]; syscall; 
0x000000001520c7: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9ed16]; syscall; 
0x00000000151f27: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9eeb6]; syscall; 
0x00000000151d93: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9f04a]; syscall; 
0x00000000151c53: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9f18a]; syscall; 
0x00000000151af3: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9f2ea]; syscall; 
0x000000001519e3: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9f3fa]; syscall; 
0x0000000014e4d3: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa2906]; syscall; 
0x0000000014c7db: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa453a]; syscall; 
0x0000000014c69b: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa467a]; syscall; 
0x0000000014c5e3: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa4732]; syscall; 
0x0000000014c4f7: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa4816]; syscall; 
0x0000000014c327: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa49b6]; syscall; 
0x0000000014c163: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa4b52]; syscall; 
0x000000001467c5: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xaa38c]; syscall; 
0x00000000144627: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xac496]; syscall; 
0x000000001442ef: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xac7ce]; syscall; 
0x00000000143f6f: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xacb4e]; syscall; 
0x00000000143d49: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xacd74]; syscall; 
0x00000000143be7: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xaced6]; syscall; 
0x000000001439aa: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xad113]; syscall; 
0x00000000142f53: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xadab2]; syscall; 
0x00000000142dd1: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xadc34]; syscall; 
0x00000000142d97: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xadc6e]; syscall; 
0x00000000142c7f: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xadd86]; syscall; 
0x0000000014243b: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xae5ca]; syscall; 
0x00000000142373: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xae692]; syscall; 
0x00000000142257: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xae7ae]; syscall; 
0x00000000140e84: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xaf929]; syscall; 
0x0000000013d703: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb2e02]; syscall; 
0x0000000013d407: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb30fe]; syscall; 
0x000000001390d7: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb741a]; syscall; 
0x00000000138b57: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb797e]; syscall; 
0x00000000138993: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb7afa]; syscall; 
0x000000001388cb: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb7b62]; syscall; 
0x0000000013878b: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb7ca2]; syscall; 
0x000000001386d3: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb7d5a]; syscall; 
0x00000000137fe3: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb8442]; syscall; 
0x00000000137cc3: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb8762]; syscall; 
0x00000000137b07: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb891e]; syscall; 
0x0000000013477b: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbbb3a]; syscall; 
0x0000000013463b: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbbc7a]; syscall; 
0x00000000134583: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbbd32]; syscall; 
0x000000001344a3: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbbe0a]; syscall; 
0x00000000133fd7: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbc25e]; syscall; 
0x00000000133a07: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbc7ce]; syscall; 
0x000000001334e7: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbcca6]; syscall; 
0x0000000013331b: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbce32]; syscall; 
0x000000001331db: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbcf72]; syscall; 
0x00000000133123: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbd02a]; syscall; 
0x00000000133043: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbd102]; syscall; 
0x00000000132c27: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbd4d6]; syscall; 
0x0000000013260b: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbda92]; syscall; 
0x000000001324b3: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbdbea]; syscall; 
0x000000001323f3: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbdcaa]; syscall; 
0x0000000013230b: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbdd8a]; syscall; 
0x00000000132227: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbde36]; syscall; 
0x00000000131bc7: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbe456]; syscall; 
0x000000001319bb: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbe61a]; syscall; 
0x00000000131863: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbe772]; syscall; 
0x000000001317a3: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbe832]; syscall; 
0x000000001316bb: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbe912]; syscall; 
0x00000000130aa7: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbf4ae]; syscall; 
0x00000000130837: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbf6de]; syscall; 
0x000000001300b7: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbfdfe]; syscall; 
0x000000001265bb: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc9862]; syscall; 
0x0000000012647b: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc99a2]; syscall; 
0x000000001263c3: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc9a5a]; syscall; 
0x00000000125fe9: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc9e2c]; syscall; 
0x00000000125de7: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc9ff6]; syscall; 
0x00000000125c07: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xca18e]; syscall; 
0x00000000125a43: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xca30a]; syscall; 
0x00000000125973: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xca386]; syscall; 
0x000000001258a9: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xca450]; syscall; 
0x00000000125814: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xca4e5]; syscall; 
0x00000000124b0b: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xcb1ba]; syscall; 
0x000000001249cb: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xcb2fa]; syscall; 
0x00000000124913: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xcb3b2]; syscall; 
0x00000000124319: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xcb9a4]; syscall; 
0x00000000124117: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xcbb4e]; syscall; 
0x00000000123f37: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xcbcc6]; syscall; 
0x00000000123d73: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xcbe22]; syscall; 
0x00000000118703: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xd713a]; syscall; 
0x000000001185e7: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xd7256]; syscall; 
0x00000000118187: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xd76b6]; syscall; 
0x00000000117c4c: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xd7bf1]; syscall; 
0x00000000106ab7: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xe8af6]; syscall; 
0x000000000229ef: add [rax], al; mov esi, 0x81; mov eax, 0xca; syscall; 
0x00000000099fa0: add [rax], al; mov esi, 0x81; mov eax, ebx; syscall; 
0x00000000046b4c: add [rax], al; mov esi, 0x81; mov rdi, r12; mov eax, 0xca; syscall; 
0x00000000047135: add [rax], al; mov esi, 0x81; mov rdi, r13; mov eax, 0xca; syscall; 
0x00000000046955: add [rax], al; mov esi, 0x81; mov rdi, r14; mov eax, 0xca; syscall; 
0x0000000009c164: add [rax], al; mov esi, 0x81; mov rdi, r15; mov eax, 0xca; syscall; 
0x00000000046da3: add [rax], al; mov esi, 0x81; mov rdi, rbp; mov eax, 0xca; syscall; 
0x0000000009ae69: add [rax], al; mov esi, 0x81; mov rdi, rbx; mov eax, 0xca; syscall; 
0x0000000014e740: add [rax], al; mov esi, 0x8; mov rdi, rbp; call qword ptr [rax+0x30]; 
0x0000000008761e: add [rax], al; mov esi, 0xffffffff; call qword ptr [rax+0x18]; 
0x0000000008f6d8: add [rax], al; mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rax+0x18]; 
0x00000000091bbf: add [rax], al; mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rbx+0x18]; 
0x000000000932e4: add [rax], al; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [r15+0x18]; 
0x0000000009234e: add [rax], al; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rax+0x18]; 
0x00000000150987: add [rax], al; mov esi, [rbx+0x88]; mov rdi, r15; call qword ptr [rax+0x28]; 
0x000000000468c4: add [rax], al; mov esi, ebp; ror rdx, 0x11; xor rdx, fs:[0x30]; call rdx; 
0x000000000872d4: add [rax], al; mov esi, r12d; mov rdi, r14; call qword ptr [rax+0x18]; 
0x000000000472e3: add [rax], al; mov fs:[rbx], rdx; mov rdi, [rbp+0x8]; call rax; 
0x0000000003457d: add [rax], al; mov fs:[rdx], rax; ret; 
0x00000000121c9c: add [rax], al; mov qword ptr [rax+0x10], 0x0; mov qword ptr [rip+0xca6af], 0x0; ret; 
0x000000000927c2: add [rax], al; mov qword ptr [rax+0x8], 0x0; ret; 
0x0000000007d231: add [rax], al; mov qword ptr [rbp-0x4d8], 0x0; mov dword ptr [rbp-0x4f8], 0x20; jmp rax; 
0x00000000076afa: add [rax], al; mov qword ptr [rbp-0x4e8], 0x0; mov byte ptr [rbp-0x508], 0x20; mov [rbp-0x500], rsi; jmp rax; 
0x00000000157d0a: add [rax], al; mov qword ptr [rdi+0x20], 0x0; ret; 
0x0000000009396d: add [rax], al; mov qword ptr [rip+0x15ae4e], 0x0; ret; 
0x0000000015d28c: add [rax], al; mov qword ptr [rip+0x93ea7], 0x0; add rsp, 0x8; ret; 
0x00000000121ca4: add [rax], al; mov qword ptr [rip+0xca6af], 0x0; ret; 
0x000000001218d6: add [rax], al; mov qword ptr [rip+0xcaa7d], 0x0; add rsp, 0x8; ret; 
0x000000001218a1: add [rax], al; mov qword ptr [rip+0xcaab2], 0x3; add rsp, 0x8; ret; 
0x000000001176f4: add [rax], al; mov qword ptr [rip+0xd808f], 0x0; add rsp, 0x8; ret; 
0x00000000115ec7: add [rax], al; mov qword ptr [rip+0xd976c], 0x0; add rsp, 0x8; ret; 
0x0000000014825e: add [rax], al; mov qword ptr [rsi+0x8], 0x0; mov [rsi+0x10], rax; ret; 
0x00000000148220: add [rax], al; mov qword ptr [rsi+0x8], 0x1; mov [rsi+0x10], rax; ret; 
0x0000000013cca3: add [rax], al; mov qword ptr [rsp], 0x0; call rax; 
0x0000000016087e: add [rax], al; mov qword ptr fs:[r12], 0x0; mov rax, [rsp+0x10]; mov rdi, [rsp+0x18]; call rax; 
0x00000000078b06: add [rax], al; mov r10, [rbp-0x518]; jmp rax; 
0x000000000e3217: add [rax], al; mov r10, r12; lea rsi, [rip+0xd115a]; mov eax, 0x142; syscall; 
0x0000000013f0be: add [rax], al; mov r10, rax; mov byte ptr [r10], 0x0; ret; 
0x00000000077f79: add [rax], al; mov r10, rdx; jmp rax; 
0x00000000076d25: add [rax], al; mov r10, rdx; mov dword ptr [rbp-0x4e0], 0x1; jmp rax; 
0x00000000077be9: add [rax], al; mov r10, rdx; mov dword ptr [rbp-0x510], 0x1; jmp rax; 
0x00000000078011: add [rax], al; mov r10, rdx; mov dword ptr [rbp-0x54c], 0x1; jmp rax; 
0x00000000043187: add [rax], al; mov r10d, 0x8; mov eax, 0xd; syscall; 
0x00000000054f61: add [rax], al; mov r10d, 0x8; mov eax, 0xe; syscall; 
0x0000000008cd6e: add [rax], al; mov r8d, 0x1; mov eax, r8d; ret; 
0x00000000113bb9: add [rax], al; mov r8d, eax; mov eax, 0x10; syscall; 
0x000000000434ae: add [rax], al; mov r8d, eax; mov eax, 0x82; syscall; 
0x0000000007f39e: add [rax], al; mov r9, [rbp-0x508]; jmp rax; 
0x00000000151a7e: add [rax], al; mov r9, rbp; mov esi, 0x9; call qword ptr [rax]; 
0x00000000104dec: add [rax], al; mov r9, rbx; add r8, r15; call r13; 
0x0000000007e5e6: add [rax], al; mov r9, rsi; jmp rax; 
0x0000000007d41a: add [rax], al; mov r9, rsi; mov dword ptr [rbp-0x4f0], 0x0; jmp rax; 
0x0000000007da0e: add [rax], al; mov r9, rsi; mov dword ptr [rbp-0x4f0], 0x1; jmp rax; 
0x0000000007e3ae: add [rax], al; mov r9, rsi; mov dword ptr [rbp-0x4f8], 0x20; jmp rax; 
0x0000000007e2be: add [rax], al; mov r9, rsi; mov dword ptr [rbp-0x530], 0x0; jmp rax; 
0x000000000cfb5e: add [rax], al; mov rax, 0x2; ret; 
0x000000000cfb6e: add [rax], al; mov rax, 0x3; ret; 
0x000000000cfb7e: add [rax], al; mov rax, 0x4; ret; 
0x000000000cfb8e: add [rax], al; mov rax, 0x5; ret; 
0x000000000cfb9e: add [rax], al; mov rax, 0x6; ret; 
0x000000000cfbae: add [rax], al; mov rax, 0x7; ret; 
0x00000000041fee: add [rax], al; mov rax, 0x8000000000000000; and rdx, rax; mov [rdi], rdx; ret; 
0x0000000013c96e: add [rax], al; mov rax, 0xffffffffffffffff; mov rdx, 0xffffffffffffffff; ret; 
0x00000000042f5c: add [rax], al; mov rax, 0xffffffffffffffff; ret; 
0x0000000014d939: add [rax], al; mov rax, [r13+0xd0]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x00000000150471: add [rax], al; mov rax, [r14+0x70]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x00000000089992: add [rax], al; mov rax, [rax+0x20]; jmp rax; 
0x00000000148b10: add [rax], al; mov rax, [rax+0x23b8]; mov rdi, r12; call qword ptr [rax+0x28]; 
0x0000000011d056: add [rax], al; mov rax, [rax+0x58]; ret; 
0x0000000009274d: add [rax], al; mov rax, [rax+0x68]; test rax, rax; jne short 0x0000000000092748; ret; 
0x000000000473f8: add [rax], al; mov rax, [rax]; pop rbx; mov eax, [rax+0x58]; ret; 
0x0000000014e82e: add [rax], al; mov rax, [rbp+0x8]; lea rsi, [rbx+0x18]; mov rdi, rbp; call qword ptr [rax+0x48]; 
0x0000000014831f: add [rax], al; mov rax, [rbp+0x8]; mov esi, 0x20; mov rdi, rbp; call qword ptr [rax+0x30]; 
0x00000000153cf9: add [rax], al; mov rax, [rbp+0x8]; mov rsi, rbx; mov rdi, rbp; call qword ptr [rax]; 
0x00000000146972: add [rax], al; mov rax, [rbx+0x20]; mov rdi, rbp; lea r15, [rsp+0x50]; call qword ptr [rax+0x20]; 
0x000000001509ef: add [rax], al; mov rax, [rbx+0x60]; mov rdi, r15; call qword ptr [rax+0x20]; 
0x0000000014ff77: add [rax], al; mov rax, [rbx+0x70]; mov rsi, [rsp+0x18]; mov rdi, r12; call qword ptr [rax+0x8]; 
0x0000000014d1b1: add [rax], al; mov rax, [rbx+0xd0]; mov rsi, [rsp+0x18]; mov rdi, r12; call qword ptr [rax+0x8]; 
0x000000001516c1: add [rax], al; mov rax, [rbx]; mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x20]; 
0x0000000017ddde: add [rax], al; mov rax, [rcx]; mov [rdx], rax; mov rax, rdi; ret; 
0x0000000008ce56: add [rax], al; mov rax, [rdi+0x28]; sub rax, [rdi+0x20]; ret; 
0x0000000008cd26: add [rax], al; mov rax, [rdi+0x40]; sub rax, [rdi+0x38]; ret; 
0x00000000155b0e: add [rax], al; mov rax, [rdi+0x8]; call qword ptr [rax+0x18]; 
0x0000000015176f: add [rax], al; mov rax, [rdi+0x8]; call qword ptr [rax+0x28]; 
0x000000001570fe: add [rax], al; mov rax, [rdi+0x8]; jmp qword ptr [rax+0x40]; 
0x0000000015710e: add [rax], al; mov rax, [rdi+0x8]; jmp qword ptr [rax+0x48]; 
0x00000000155d2e: add [rax], al; mov rax, [rdi+0x8]; jmp qword ptr [rax+0x8]; 
0x0000000015181e: add [rax], al; mov rax, [rdi+0x8]; lea rdx, [rsp+0xc]; mov esi, 0xd; call qword ptr [rax+0x28]; 
0x00000000156696: add [rax], al; mov rax, [rdi+0x8]; lea rsi, [rsp+0x10]; call qword ptr [rax]; 
0x000000001571be: add [rax], al; mov rax, [rdi+0x8]; lea rsi, [rsp+0x4]; call qword ptr [rax+0x40]; 
0x000000001490ce: add [rax], al; mov rax, [rdi+0x8]; mov r12, rsp; lea rsi, [rsp+0x8]; call qword ptr [rax]; 
0x00000000156d66: add [rax], al; mov rax, [rdi+0x8]; mov rsi, rsp; call qword ptr [rax+0x40]; 
0x0000000014902e: add [rax], al; mov rax, [rdi+0x8]; mov rsi, rsp; call qword ptr [rax]; 
0x0000000008ce43: add [rax], al; mov rax, [rdx+0x20]; sub rax, [rdx+0x18]; sar rax, 0x2; ret; 
0x0000000008cd13: add [rax], al; mov rax, [rdx+0x38]; sub rax, [rdx+0x30]; sar rax, 0x2; ret; 
0x000000000dd176: add [rax], al; mov rax, [rip+0x10ecf1]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000009e54e: add [rax], al; mov rax, [rip+0x14d9f9]; call qword ptr [rax]; 
0x000000000979fb: add [rax], al; mov rax, [rip+0x1543bc]; mov [rsp+0x8], r8; xor edi, edi; call qword ptr [rax]; 
0x000000000978e6: add [rax], al; mov rax, [rip+0x1544d1]; xor edi, edi; call qword ptr [rax]; 
0x000000000978a0: add [rax], al; mov rax, [rip+0x154517]; call qword ptr [rax]; 
0x0000000008d36e: add [rax], al; mov rax, [rip+0x15eaf9]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000008475e: add [rax], al; mov rax, [rip+0x167709]; mov dword ptr fs:[rax], 0x16; mov rax, 0xffffffffffffffff; ret; 
0x0000000004835e: add [rax], al; mov rax, [rip+0x1a3b09]; mov dword ptr fs:[rax], 0x5; mov eax, 0xffffffff; ret; 
0x00000000043e1e: add [rax], al; mov rax, [rip+0x1a8049]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000043d5e: add [rax], al; mov rax, [rip+0x1a8109]; mov dword ptr fs:[rax], 0x16; mov rax, 0xffffffffffffffff; ret; 
0x00000000043c66: add [rax], al; mov rax, [rip+0x1a8201]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000043c1e: add [rax], al; mov rax, [rip+0x1a8249]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000043bce: add [rax], al; mov rax, [rip+0x1a8299]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000432ce: add [rax], al; mov rax, [rip+0x1a8b99]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000004127e: add [rax], al; mov rax, [rip+0x1aabe9]; mov dword ptr fs:[rax], 0x2a; mov rax, r11; ret; 
0x00000000033d3e: add [rax], al; mov rax, [rip+0x1b80a1]; mov [rax], rdx; ret; 
0x00000000024716: add [rax], al; mov rax, [rip+0x1c7751]; mov dword ptr fs:[rax], 0x9; mov eax, 0xffffffff; ret; 
0x0000000015fcbe: add [rax], al; mov rax, [rip+0x914c1]; call qword ptr [rax+0x10]; 
0x0000000015fbde: add [rax], al; mov rax, [rip+0x91599]; test rax, rax; je short 0x000000000015fbd7; call qword ptr [rax+0x18]; 
0x0000000015fa46: add [rax], al; mov rax, [rip+0x91739]; call qword ptr [rax+0x8]; 
0x0000000015f94e: add [rax], al; mov rax, [rip+0x91831]; call qword ptr [rax]; 
0x0000000012f43e: add [rax], al; mov rax, [rip+0xbca29]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000011f90e: add [rax], al; mov rax, [rip+0xcc559]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000011f8ce: add [rax], al; mov rax, [rip+0xcc599]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000121fee: add [rax], al; mov rax, [rip+0xcda81]; mov rax, [rax+0x18]; add word ptr [rax], 0x1; ret; 
0x0000000011c516: add [rax], al; mov rax, [rip+0xcf951]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000118926: add [rax], al; mov rax, [rip+0xd3541]; mov dword ptr fs:[rax], 0x16; mov rax, 0xffffffffffffffff; ret; 
0x00000000115776: add [rax], al; mov rax, [rip+0xd66f1]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000112956: add [rax], al; mov rax, [rip+0xd9511]; mov dword ptr fs:[rax], 0x16; xor eax, eax; ret; 
0x0000000010dc4e: add [rax], al; mov rax, [rip+0xde219]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010da16: add [rax], al; mov rax, [rip+0xde451]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010d9b6: add [rax], al; mov rax, [rip+0xde4b1]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010d956: add [rax], al; mov rax, [rip+0xde511]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010d5ce: add [rax], al; mov rax, [rip+0xde899]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010d56e: add [rax], al; mov rax, [rip+0xde8f9]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010d50e: add [rax], al; mov rax, [rip+0xde959]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000328fe: add [rax], al; mov rax, [rsi+rax*8+0x80]; ret; 
0x00000000160887: add [rax], al; mov rax, [rsp+0x10]; mov rdi, [rsp+0x18]; call rax; 
0x00000000147ec4: add [rax], al; mov rax, [rsp+0x30]; call rax; 
0x00000000090c9a: add [rax], al; mov rax, [rsp+0x8]; mov esi, 0xffffffff; mov rdi, r8; call qword ptr [rax+0x18]; 
0x000000001486e6: add [rax], al; mov rax, [rsp+0x8]; mov esi, r14d; mov rdi, r13; call qword ptr [rax+0x30]; 
0x00000000146217: add [rax], al; mov rax, [rsp+0x8]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x0000000019684a: add [rax], al; mov rax, [rsp]; add rsp, 0x38; ret; 
0x00000000087467: add [rax], al; mov rax, [rsp]; mov esi, r12d; mov rdi, r14; call qword ptr [rax+0x18]; 
0x0000000015f197: add [rax], al; mov rax, fs:[0x28]; mov [rsp+0x68], rax; xor eax, eax; call qword ptr [r12+0xf08]; 
0x0000000004128c: add [rax], al; mov rax, r11; ret; 
0x000000000d008f: add [rax], al; mov rax, r12; pop r12; ret; 
0x00000000062685: add [rax], al; mov rax, r12; pop rbp; pop r12; ret; 
0x0000000015d0e7: add [rax], al; mov rax, r8; pop rbp; ret; 
0x000000001532dd: add [rax], al; mov rax, r8; pop rbx; ret; 
0x000000000980cf: add [rax], al; mov rax, r8; ret; 
0x0000000018d2d1: add [rax], al; mov rax, r8; shr rax, 0x2; vzeroupper; ret; 
0x0000000018892e: add [rax], al; mov rax, r8; vzeroupper; ret; 
0x000000000b814e: add [rax], al; mov rax, rdi; ret; 
0x0000000018b53e: add [rax], al; mov rax, rdi; vzeroupper; ret; 
0x000000000b6efe: add [rax], al; mov rcx, [rsi]; mov [rdi+0x8], dh; mov [rdi], rcx; ret; 
0x0000000016082a: add [rax], al; mov rcx, [rsp+0x10]; mov rdi, [rsp+0x18]; call rcx; 
0x000000000bbc13: add [rax], al; mov rcx, rdx; rep movsb [rdi], [rsi]; ret; 
0x00000000146943: add [rax], al; mov rdi, [r12]; mov rsi, rbp; mov rax, [rdi+0x38]; call qword ptr [rax+0x8]; 
0x0000000011a909: add [rax], al; mov rdi, [r13]; call rbx; 
0x0000000011a9c9: add [rax], al; mov rdi, [r14]; call rbx; 
0x0000000011ab3a: add [rax], al; mov rdi, [r15]; call rbx; 
0x0000000009e8be: add [rax], al; mov rdi, [rbx+0x48]; call rax; 
0x0000000010cc93: add [rax], al; mov rdi, [rbx+0x80]; call qword ptr [rax+0x88]; 
0x0000000009e67a: add [rax], al; mov rdi, [rdi+0x48]; mov rsi, rbp; call rax; 
0x00000000044846: add [rax], al; mov rdi, [rsp+0x18]; mov rdx, rbp; mov rsi, r12; call rbx; 
0x00000000148ac0: add [rax], al; mov rdi, r12; call qword ptr [rax+0x20]; 
0x00000000148aa4: add [rax], al; mov rdi, r12; call qword ptr [rax+0x28]; 
0x00000000148c97: add [rax], al; mov rdi, r12; call qword ptr [rbx]; 
0x00000000046b51: add [rax], al; mov rdi, r12; mov eax, 0xca; syscall; 
0x0000000009680e: add [rax], al; mov rdi, r12; neg rdi; call qword ptr [r13]; 
0x00000000154b17: add [rax], al; mov rdi, r13; call qword ptr [rax+0x28]; 
0x0000000004713a: add [rax], al; mov rdi, r13; mov eax, 0xca; syscall; 
0x0000000009e0e9: add [rax], al; mov rdi, r13; mov rdx, rbp; mov rsi, r12; call rax; 
0x0000000004695a: add [rax], al; mov rdi, r14; mov eax, 0xca; syscall; 
0x000000001509a2: add [rax], al; mov rdi, r15; add dword ptr [rax], 0x1; mov rax, [rbx+0x60]; call qword ptr [rax+0x8]; 
0x0000000008954e: add [rax], al; mov rdi, r15; call qword ptr [r13+0x80]; 
0x00000000087a95: add [rax], al; mov rdi, r15; call qword ptr [rax+0x20]; 
0x0000000015098d: add [rax], al; mov rdi, r15; call qword ptr [rax+0x28]; 
0x00000000089744: add [rax], al; mov rdi, r15; call qword ptr [rbp+0x80]; 
0x0000000009c169: add [rax], al; mov rdi, r15; mov eax, 0xca; syscall; 
0x0000000008f9e2: add [rax], al; mov rdi, rbp; call qword ptr [r13+0x20]; 
0x0000000014d940: add [rax], al; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x00000000148328: add [rax], al; mov rdi, rbp; call qword ptr [rax+0x30]; 
0x0000000008f792: add [rax], al; mov rdi, rbp; call qword ptr [rax+0x80]; 
0x0000000008225a: add [rax], al; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x00000000152190: add [rax], al; mov rdi, rbp; lea r8, [rip-0xa0ec]; lea rdx, [rip+0x3a2d]; call qword ptr [rax]; 
0x00000000147329: add [rax], al; mov rdi, rbp; lea r9, [rsp+0x20]; call qword ptr [rax]; 
0x0000000014e704: add [rax], al; mov rdi, rbp; mov [r12+0x70], edx; call qword ptr [rax+0x30]; 
0x00000000046da8: add [rax], al; mov rdi, rbp; mov eax, 0xca; syscall; 
0x0000000009088c: add [rax], al; mov rdi, rbx; call qword ptr [r12+0x48]; 
0x0000000008fe83: add [rax], al; mov rdi, rbx; call qword ptr [r12+0x88]; 
0x0000000009254c: add [rax], al; mov rdi, rbx; call qword ptr [r13+0x60]; 
0x000000000922bc: add [rax], al; mov rdi, rbx; call qword ptr [rax+0x20]; 
0x0000000008b0eb: add [rax], al; mov rdi, rbx; call qword ptr [rbp+0x60]; 
0x0000000008a09e: add [rax], al; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x00000000081275: add [rax], al; mov rdi, rbx; call r8; 
0x00000000080c7f: add [rax], al; mov rdi, rbx; call rax; 
0x0000000009ae6e: add [rax], al; mov rdi, rbx; mov eax, 0xca; syscall; 
0x00000000090bc0: add [rax], al; mov rdx, [rbx+0x40]; mov rdi, rbx; sub rdx, rsi; call qword ptr [rbp+0x70]; 
0x000000001518ae: add [rax], al; mov rdx, [rdi+0x8]; mov [rsp], rax; call qword ptr [rdx+0x20]; 
0x00000000082821: add [rax], al; mov rdx, [rdi+0xa0]; mov [rdx+0xe0], rcx; ret; 
0x000000000b6eee: add [rax], al; mov rdx, [rsi]; mov [rdi], rdx; ret; 
0x000000000a8a66: add [rax], al; mov rdx, [rsp+0x10]; mov [rax], rdx; ret; 
0x00000000120444: add [rax], al; mov rdx, [rsp+0x10]; mov rsi, [rsp+0x8]; syscall; 
0x00000000127d19: add [rax], al; mov rdx, [rsp+0x10]; xor esi, esi; mov edi, 0x2000004; call rax; 
0x000000000a898e: add [rax], al; mov rdx, [rsp+0x18]; mov [rdi], rdx; add rax, rdi; ret; 
0x00000000047230: add [rax], al; mov rdx, fs:[rax]; mov [rbx+0x18], rdx; mov fs:[rax], rbx; call qword ptr [rbp+0xf08]; 
0x00000000112a63: add [rax], al; mov rdx, r12; mov eax, 0x10f; syscall; 
0x000000000833e2: add [rax], al; mov rdx, r12; mov rsi, r14; mov rdi, rbx; call qword ptr [r15+0x38]; 
0x00000000082dac: add [rax], al; mov rdx, r12; mov rsi, rbp; mov rdi, rbx; call qword ptr [r13+0x38]; 
0x00000000084e06: add [rax], al; mov rdx, r12; mov rsi, rbp; mov rdi, rbx; call qword ptr [r13+0x58]; 
0x00000000084c5e: add [rax], al; mov rdx, r12; mov rsi, rbp; mov rdi, rbx; call qword ptr [rax+0x58]; 
0x0000000009d2ff: add [rax], al; mov rdx, r13; mov rdi, r12; call rax; 
0x000000000756ae: add [rax], al; mov rdx, r13; mov rsi, r10; mov rdi, r15; call qword ptr [rax+0x38]; 
0x00000000074f4d: add [rax], al; mov rdx, r13; mov rsi, r10; mov rdi, r15; call qword ptr [rbx+0x38]; 
0x00000000074caa: add [rax], al; mov rdx, r13; mov rsi, r12; mov rdi, r15; call qword ptr [rax+0x38]; 
0x0000000008e75c: add [rax], al; mov rdx, r13; mov rsi, r12; mov rdi, rbp; call qword ptr [r15+0x40]; 
0x0000000008f18f: add [rax], al; mov rdx, r13; mov rsi, r15; mov rdi, rbp; call qword ptr [rax+0x40]; 
0x0000000009d9d8: add [rax], al; mov rdx, r15; mov rsi, r14; mov rdi, r13; call rax; 
0x0000000013494b: add [rax], al; mov rdx, r15; mov rsi, r14; mov rdi, rbx; call rax; 
0x00000000090972: add [rax], al; mov rdx, rbp; mov rsi, r12; mov rdi, rbx; call qword ptr [r14+0x78]; 
0x0000000008451c: add [rax], al; mov rdx, rbx; mov rsi, r12; call qword ptr [r14+0x38]; 
0x000000000753df: add [rax], al; mov rdx, rbx; mov rsi, r12; mov rdi, r15; call qword ptr [rax+0x38]; 
0x0000000007597e: add [rax], al; mov rdx, rbx; mov rsi, r12; mov rdi, r15; call qword ptr [rcx+0x38]; 
0x00000000112d4d: add [rax], al; mov rdx, rsi; xor esi, esi; syscall; 
0x00000000113496: add [rax], al; mov rdx, rsp; mov esi, 0x10; mov eax, 0x48; syscall; 
0x00000000119c43: add [rax], al; mov rsi, [r14]; mov rax, [rsp+0x8]; mov rdi, r13; call rax; 
0x0000000010cc8c: add [rax], al; mov rsi, [rbx+0xa0]; mov rdi, [rbx+0x80]; call qword ptr [rax+0x88]; 
0x00000000113066: add [rax], al; mov rsi, [rsp+0x10]; mov edi, [rsp+0x8]; syscall; 
0x00000000115109: add [rax], al; mov rsi, [rsp+0x18]; mov edi, [rsp+0x14]; syscall; 
0x0000000014d1b8: add [rax], al; mov rsi, [rsp+0x18]; mov rdi, r12; call qword ptr [rax+0x8]; 
0x0000000009bd0e: add [rax], al; mov rsi, [rsp+0x28]; mov rdi, r12; call rdx; 
0x00000000144ee1: add [rax], al; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; call qword ptr [rsp+0x68]; 
0x0000000009a9e6: add [rax], al; mov rsi, [rsp+0x48]; mov rdi, r13; call rax; 
0x0000000009c99e: add [rax], al; mov rsi, r12; call rax; 
0x0000000009dca1: add [rax], al; mov rsi, r12; mov rdi, rbp; call rax; 
0x000000000d0969: add [rax], al; mov rsi, r13; call rbp; 
0x00000000083bf3: add [rax], al; mov rsi, r13; mov rdi, r15; call qword ptr [r14+0x38]; 
0x0000000008f32d: add [rax], al; mov rsi, r13; mov rdi, rbx; call qword ptr [rbp+0x70]; 
0x00000000146a27: add [rax], al; mov rsi, r14; add qword ptr [rbx+0x22a8], 0x1; mov rdi, rbp; call qword ptr [rax+0x18]; 
0x00000000128f3f: add [rax], al; mov rsi, r14; mov edi, 0x2000003; mov rdx, rax; call qword ptr [rbx+0x28]; 
0x0000000012887c: add [rax], al; mov rsi, r15; mov edi, 0x2000006; mov rdx, rax; call qword ptr [rbx+0x28]; 
0x000000001381b6: add [rax], al; mov rsi, r15; mov rdi, r12; call rbp; 
0x0000000004332f: add [rax], al; mov rsi, r8; mov eax, 0xe; syscall; 
0x0000000012163b: add [rax], al; mov rsi, r9; mov edi, r12d; mov eax, r14d; syscall; 
0x0000000015f160: add [rax], al; mov rsi, rax; shr ecx, 0x3; rep movsq [rdi], [rsi]; ret; 
0x00000000150fcf: add [rax], al; mov rsi, rbp; mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x10]; 
0x0000000009df06: add [rax], al; mov rsi, rbp; mov rdi, r12; call rax; 
0x0000000012a059: add [rax], al; mov rsi, rbx; mov edi, 0x2000005; mov rdx, rax; call qword ptr [r13+0x28]; 
0x0000000012a058: add [rax], al; mov rsi, rbx; mov edi, 0x2000005; mov rdx, rax; call qword ptr [r13+0x28]; 
0x0000000008cf7b: add [rax], al; mov rsi, rbx; mov edi, 0x2; mov eax, r9d; syscall; 
0x0000000008f97c: add [rax], al; mov rsi, rsp; mov rdi, rbp; call qword ptr [r13+0x90]; 
0x0000000008e6f6: add [rax], al; mov rsi, rsp; mov rdi, rbp; call qword ptr [r15+0x90]; 
0x00000000081cf5: add [rax], al; mov rsi, rsp; mov rdi, rbp; call qword ptr [rbx+0x90]; 
0x0000000005b4fe: add [rax], al; mov rsp, rdx; ret; 
0x00000000042fde: add [rax], al; movaps [rsp+0xd0], xmm0; movaps [rsp+0xe0], xmm0; movaps [rsp+0xf0], xmm0; syscall; 
0x00000000042fe6: add [rax], al; movaps [rsp+0xe0], xmm0; movaps [rsp+0xf0], xmm0; syscall; 
0x00000000042fee: add [rax], al; movaps [rsp+0xf0], xmm0; syscall; 
0x00000000151752: add [rax], al; movdqa xmm0, [rip+0x6b534]; movaps [rsp+0x20], xmm0; call qword ptr [rax+0x28]; 
0x000000000bbf4a: add [rax], al; movdqu [rdi+rdx-0x10], xmm0; movdqu [rdi], xmm0; ret; 
0x000000000b7f4e: add [rax], al; movdqu [rdi-0x1], xmm0; ret; 
0x000000000b7f5e: add [rax], al; movdqu [rdi], xmm0; ret; 
0x0000000014cf86: add [rax], al; movdqu xmm0, [rdx]; mov eax, esi; movups [r8+0x8], xmm0; ret; 
0x000000000b6f7e: add [rax], al; movdqu xmm0, [rsi]; movdqu [rdi], xmm0; mov [rdi+0x10], dh; ret; 
0x0000000010d107: add [rax], al; movdqu xmm7, [rsi+0x70]; movups [rdi+0xf8], xmm7; ret; 
0x000000000b3980: add [rax], al; movlpd xmm0, [rcx]; movlpd [rdx], xmm0; mov rax, rdi; ret; 
0x00000000031ad7: add [rax], al; movsxd r8, [rdx+r9*4]; add r8, rdx; notrack jmp r8; 
0x0000000016b3c9: add [rax], al; movsxd r9, [r11+r9*4]; add r9, r11; notrack jmp r9; 
0x000000000740bd: add [rax], al; movsxd rax, [r14+rax*4]; add rax, r14; notrack jmp rax; 
0x0000000007e306: add [rax], al; movsxd rax, [rax+rcx*4]; add rax, rdx; jmp rax; 
0x0000000007df4c: add [rax], al; movsxd rax, [rcx+rax*4]; add rax, rdx; jmp rax; 
0x0000000007f1e7: add [rax], al; movsxd rax, [rsi+rax*4]; add rax, rdx; jmp rax; 
0x00000000047890: add [rax], al; movsxd rax, [rsp+0x4]; jne short 0x00000000000478ea; add rsp, 0x18; ret; 
0x00000000080486: add [rax], al; movsxd rdx, ebp; mov rdi, rbx; call qword ptr [r14+0x38]; 
0x0000000013c366: add [rax], al; movsxd rdx, edx; mov eax, r8d; mov byte ptr [rdi+rdx], 0x0; ret; 
0x00000000079f77: add [rax], al; movsxd rdx, r13d; mov rdi, rbx; call qword ptr [r14+0x38]; 
0x000000001506e7: add [rax], al; movups [r8+0x20], xmm2; ret; 
0x0000000014fdc4: add [rax], al; movups [r8+0x8], xmm0; ret; 
0x00000000087cf7: add [rax], al; movups [rax+0x40], xmm0; pop rbx; ret; 
0x00000000141a95: add [rax], al; movups [rax], xmm0; add rsp, 0x8; ret; 
0x000000000926ec: add [rax], al; movups [rbp+0x38], xmm0; pop rbp; pop r12; ret; 
0x0000000012c58c: add [rax], al; movups [rbp-0x78], xmm7; call rcx; 
0x000000000919f3: add [rax], al; movups [rbx+0x48], xmm0; pop rbx; ret; 
0x0000000014cfa1: add [rax], al; movups [rdx], xmm1; ret; 
0x0000000014fde9: add [rax], al; movups [rdx], xmm2; ret; 
0x000000001506f9: add [rax], al; movups [rdx], xmm3; ret; 
0x000000001506d9: add [rax], al; movups [rdx], xmm4; ret; 
0x0000000010d073: add [rax], al; movups [rsi+0x60], xmm6; movdqu xmm7, [rdi+0xf8]; movups [rsi+0x70], xmm7; ret; 
0x0000000010d07f: add [rax], al; movups [rsi+0x70], xmm7; ret; 
0x0000000010049c: add [rax], al; movups [rsi+0x8], xmm0; ret; 
0x00000000148249: add [rax], al; movups [rsi+0x8], xmm1; ret; 
0x0000000014ceae: add [rax], al; movups [rsi], xmm0; mov rax, [rax+0xa0]; mov [rsi+0x10], rax; ret; 
0x00000000153963: add [rax], al; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x00000000153bf1: add [rax], al; movups [rsp+0x18], xmm1; movups [rsp+0x38], xmm0; call qword ptr [rax+0x18]; 
0x00000000153e17: add [rax], al; movups [rsp+0xb8], xmm3; movups [rsp+0xd8], xmm0; call rax; 
0x00000000153eb3: add [rax], al; movups [rsp+0xb8], xmm5; call rax; 
0x00000000153e1f: add [rax], al; movups [rsp+0xd8], xmm0; call rax; 
0x0000000018e32e: add [rax], al; movzx eax, byte ptr [rdi-0x1]; movzx ecx, byte ptr [rsi-0x1]; sub eax, ecx; ret; 
0x0000000018e0e1: add [rax], al; movzx eax, byte ptr [rdi-0x1]; movzx edx, byte ptr [rsi-0x1]; sub eax, edx; ret; 
0x00000000191ffe: add [rax], al; movzx eax, byte ptr [rdi-0xa]; movzx edx, byte ptr [rsi-0xa]; sub eax, edx; ret; 
0x00000000191fee: add [rax], al; movzx eax, byte ptr [rdi-0xb]; movzx edx, byte ptr [rsi-0xb]; sub eax, edx; ret; 
0x00000000191fde: add [rax], al; movzx eax, byte ptr [rdi-0xc]; movzx edx, byte ptr [rsi-0xc]; sub eax, edx; ret; 
0x00000000191fce: add [rax], al; movzx eax, byte ptr [rdi-0xd]; movzx edx, byte ptr [rsi-0xd]; sub eax, edx; ret; 
0x00000000191fbe: add [rax], al; movzx eax, byte ptr [rdi-0xe]; movzx edx, byte ptr [rsi-0xe]; sub eax, edx; ret; 
0x00000000191fae: add [rax], al; movzx eax, byte ptr [rdi-0xf]; movzx edx, byte ptr [rsi-0xf]; sub eax, edx; ret; 
0x00000000184d5e: add [rax], al; movzx eax, byte ptr [rdi]; movzx ecx, byte ptr [rsi]; sub eax, ecx; ret; 
0x0000000019906e: add [rax], al; movzx eax, byte ptr [rsp+0xf]; add rsp, 0x10; pop rbx; ret; 
0x000000000bc16e: add [rax], al; movzx eax, cl; pop rbx; ret; 
0x000000000abece: add [rax], al; movzx ecx, byte ptr [rsi]; movzx eax, byte ptr [rdi]; sub eax, ecx; ret; 
0x0000000016ddfe: add [rax], al; movzx edx, byte ptr [rsi]; mov [rdi], dl; ret; 
0x0000000018a49e: add [rax], al; movzx edx, byte ptr [rsi]; mov [rdi], dl; vzeroupper; ret; 
0x00000000052d72: add [rax], al; movzx edx, dl; movsxd rdx, [rdi+rdx*4]; add rdx, rdi; notrack jmp rdx; 
0x0000000016dd8e: add [rax], al; movzx edx, word ptr [rsi]; mov [rdi], dx; ret; 
0x0000000018906e: add [rax], al; movzx edx, word ptr [rsi]; mov [rdi], dx; vzeroupper; ret; 
0x00000000154929: add [rax], al; nop [rax+rax]; endbr64; mov eax, 0x2; ret; 
0x000000001210a9: add [rax], al; nop [rax+rax]; endbr64; mov eax, 0x40; syscall; 
0x000000001141c9: add [rax], al; nop [rax+rax]; endbr64; mov eax, 0x8c; syscall; 
0x0000000011f189: add [rax], al; nop [rax+rax]; endbr64; mov eax, 0xa6; syscall; 
0x0000000011f009: add [rax], al; nop [rax+rax]; endbr64; mov eax, 0xad; syscall; 
0x0000000012d865: add [rax], al; nop [rax+rax]; endbr64; ret; 
0x0000000012dc18: add [rax], al; nop [rax+rax]; ret; 
0x000000001989d1: add [rax], al; nop [rax+rax]; ret; 
0x000000000ac3db: add [rax], al; nop [rax]; bsf eax, eax; lea rax, [rax+rdi-0x10]; ret; 
0x0000000011f34a: add [rax], al; nop [rax]; endbr64; mov eax, 0x122; syscall; 
0x00000000155bcb: add [rax], al; nop [rax]; endbr64; mov eax, 0x1; ret; 
0x000000001211ba: add [rax], al; nop [rax]; endbr64; mov eax, 0x1e; syscall; 
0x0000000012125a: add [rax], al; nop [rax]; endbr64; mov eax, 0x1f; syscall; 
0x0000000010fbda: add [rax], al; nop [rax]; endbr64; mov eax, 0x56; syscall; 
0x00000000113e0a: add [rax], al; nop [rax]; endbr64; mov eax, 0x62; syscall; 
0x0000000010d3fa: add [rax], al; nop [rax]; endbr64; mov eax, 0x84; syscall; 
0x0000000011420a: add [rax], al; nop [rax]; endbr64; mov eax, 0x8d; syscall; 
0x0000000015f88b: add [rax], al; nop [rax]; endbr64; mov rax, [rip+0x8c5c5]; jmp qword ptr [rax+0x1f0]; 
0x00000000094c6a: add [rax], al; nop [rax]; endbr64; mov rax, fs:[0x10]; ret; 
0x0000000014682b: add [rax], al; nop [rax]; endbr64; ret; 
0x00000000023f1a: add [rax], al; nop [rax]; endbr64; ret; 
0x0000000012cf3a: add [rax], al; nop [rax]; endbr64; xor eax, eax; ret; 
0x0000000010c6cb: add [rax], al; nop [rax]; endbr64; xor eax, eax; ret; 
0x0000000017867a: add [rax], al; nop [rax]; mov [rcx], dl; ret; 
0x000000000b7e6a: add [rax], al; nop [rax]; mov [rdi], dl; ret; 
0x000000000b7b6a: add [rax], al; nop [rax]; mov dl, [rsi]; mov [rdi], dl; ret; 
0x0000000016d58a: add [rax], al; nop [rax]; mov edx, [rsi-0x4]; mov [rdi-0x4], edx; ret; 
0x000000000430ba: add [rax], al; nop [rax]; mov rax, 0xf; syscall; 
0x000000000b67da: add [rax], al; nop [rax]; mov rax, rdi; ret; 
0x0000000016782a: add [rax], al; nop [rax]; mov rdx, [rsi-0x8]; mov [rdi-0x8], rdx; ret; 
0x0000000016d71a: add [rax], al; nop [rax]; movzx edx, byte ptr [rsi-0x1]; mov [rdi-0x1], dl; ret; 
0x0000000016d69a: add [rax], al; nop [rax]; movzx edx, word ptr [rsi-0x2]; mov [rdi-0x2], dx; ret; 
0x000000000b7b5a: add [rax], al; nop [rax]; ret; 
0x000000000ac70b: add [rax], al; nop [rax]; xor eax, eax; ret; 
0x00000000192b0a: add [rax], al; nop [rax]; xor eax, eax; ret; 
0x000000001885cb: add [rax], al; nop [rax]; xor eax, eax; vzeroupper; ret; 
0x0000000018ca4a: add [rax], al; nop [rax]; xor eax, eax; vzeroupper; ret; 
0x0000000010dcad: add [rax], al; nop; endbr64; mov eax, 0x102; syscall; 
0x0000000010fd2d: add [rax], al; nop; endbr64; mov eax, 0x107; syscall; 
0x0000000010fc6d: add [rax], al; nop; endbr64; mov eax, 0x10a; syscall; 
0x0000000011fe1d: add [rax], al; nop; endbr64; mov eax, 0x110; syscall; 
0x0000000011fe7d: add [rax], al; nop; endbr64; mov eax, 0x11b; syscall; 
0x0000000011faed: add [rax], al; nop; endbr64; mov eax, 0x123; syscall; 
0x0000000010e91d: add [rax], al; nop; endbr64; mov eax, 0x124; syscall; 
0x0000000010e97d: add [rax], al; nop; endbr64; mov eax, 0x125; syscall; 
0x0000000011fc0d: add [rax], al; nop; endbr64; mov eax, 0x126; syscall; 
0x0000000011ff0d: add [rax], al; nop; endbr64; mov eax, 0x12c; syscall; 
0x0000000011fa2d: add [rax], al; nop; endbr64; mov eax, 0x131; syscall; 
0x0000000011530d: add [rax], al; nop; endbr64; mov eax, 0x132; syscall; 
0x0000000012002d: add [rax], al; nop; endbr64; mov eax, 0x14a; syscall; 
0x0000000012005d: add [rax], al; nop; endbr64; mov eax, 0x14b; syscall; 
0x0000000010e94d: add [rax], al; nop; endbr64; mov eax, 0x16; syscall; 
0x0000000010273d: add [rax], al; nop; endbr64; mov eax, 0x18; syscall; 
0x00000000118acd: add [rax], al; nop; endbr64; mov eax, 0x1b; syscall; 
0x00000000118a9d: add [rax], al; nop; endbr64; mov eax, 0x1c; syscall; 
0x0000000010e8bd: add [rax], al; nop; endbr64; mov eax, 0x20; syscall; 
0x0000000010e8ed: add [rax], al; nop; endbr64; mov eax, 0x21; syscall; 
0x000000000e2dbd: add [rax], al; nop; endbr64; mov eax, 0x25; syscall; 
0x000000000d420d: add [rax], al; nop; endbr64; mov eax, 0x26; syscall; 
0x000000001207cd: add [rax], al; nop; endbr64; mov eax, 0x29; syscall; 
0x0000000012018d: add [rax], al; nop; endbr64; mov eax, 0x31; syscall; 
0x0000000012028d: add [rax], al; nop; endbr64; mov eax, 0x33; syscall; 
0x0000000012025d: add [rax], al; nop; endbr64; mov eax, 0x34; syscall; 
0x0000000011336d: add [rax], al; nop; endbr64; mov eax, 0x3; syscall; 
0x0000000010ea3d: add [rax], al; nop; endbr64; mov eax, 0x50; syscall; 
0x0000000010ea6d: add [rax], al; nop; endbr64; mov eax, 0x51; syscall; 
0x0000000010fd5d: add [rax], al; nop; endbr64; mov eax, 0x54; syscall; 
0x0000000010fc9d: add [rax], al; nop; endbr64; mov eax, 0x59; syscall; 
0x0000000010dbbd: add [rax], al; nop; endbr64; mov eax, 0x5b; syscall; 
0x0000000010f38d: add [rax], al; nop; endbr64; mov eax, 0x5c; syscall; 
0x0000000010f3bd: add [rax], al; nop; endbr64; mov eax, 0x5d; syscall; 
0x0000000010f3ed: add [rax], al; nop; endbr64; mov eax, 0x5e; syscall; 
0x000000000e2b9d: add [rax], al; nop; endbr64; mov eax, 0x64; syscall; 
0x0000000011fc6d: add [rax], al; nop; endbr64; mov eax, 0x67; syscall; 
0x000000000e43cd: add [rax], al; nop; endbr64; mov eax, 0x6d; syscall; 
0x000000000e43fd: add [rax], al; nop; endbr64; mov eax, 0x6f; syscall; 
0x000000000e445d: add [rax], al; nop; endbr64; mov eax, 0x70; syscall; 
0x000000000e448d: add [rax], al; nop; endbr64; mov eax, 0x76; syscall; 
0x000000000e44bd: add [rax], al; nop; endbr64; mov eax, 0x78; syscall; 
0x0000000011f21d: add [rax], al; nop; endbr64; mov eax, 0x7b; syscall; 
0x0000000011f9fd: add [rax], al; nop; endbr64; mov eax, 0x7e; syscall; 
0x0000000011fe4d: add [rax], al; nop; endbr64; mov eax, 0x86; syscall; 
0x0000000010da5d: add [rax], al; nop; endbr64; mov eax, 0x8a; syscall; 
0x000000001026ad: add [rax], al; nop; endbr64; mov eax, 0x8f; syscall; 
0x000000001026dd: add [rax], al; nop; endbr64; mov eax, 0x90; syscall; 
0x0000000010270d: add [rax], al; nop; endbr64; mov eax, 0x91; syscall; 
0x0000000010276d: add [rax], al; nop; endbr64; mov eax, 0x92; syscall; 
0x0000000010279d: add [rax], al; nop; endbr64; mov eax, 0x93; syscall; 
0x000000001027cd: add [rax], al; nop; endbr64; mov eax, 0x94; syscall; 
0x00000000118b5d: add [rax], al; nop; endbr64; mov eax, 0x96; syscall; 
0x00000000118b8d: add [rax], al; nop; endbr64; mov eax, 0x97; syscall; 
0x00000000118bbd: add [rax], al; nop; endbr64; mov eax, 0x98; syscall; 
0x0000000011f95d: add [rax], al; nop; endbr64; mov eax, 0x9a; syscall; 
0x0000000011fd2d: add [rax], al; nop; endbr64; mov eax, 0x9b; syscall; 
0x0000000011518d: add [rax], al; nop; endbr64; mov eax, 0xa1; syscall; 
0x0000000011524d: add [rax], al; nop; endbr64; mov eax, 0xa2; syscall; 
0x0000000011567d: add [rax], al; nop; endbr64; mov eax, 0xa7; syscall; 
0x000000001156ad: add [rax], al; nop; endbr64; mov eax, 0xa8; syscall; 
0x000000001189cd: add [rax], al; nop; endbr64; mov eax, 0xa; syscall; 
0x0000000011f03d: add [rax], al; nop; endbr64; mov eax, 0xac; syscall; 
0x0000000011fa5d: add [rax], al; nop; endbr64; mov eax, 0xae; syscall; 
0x0000000011fa8d: add [rax], al; nop; endbr64; mov eax, 0xb0; syscall; 
0x0000000011899d: add [rax], al; nop; endbr64; mov eax, 0xb; syscall; 
0x0000000012008d: add [rax], al; nop; endbr64; mov eax, 0xba; syscall; 
0x0000000011f1bd: add [rax], al; nop; endbr64; mov eax, 0xbb; syscall; 
0x0000000011cf3d: add [rax], al; nop; endbr64; mov eax, 0xc6; syscall; 
0x0000000011ce1d: add [rax], al; nop; endbr64; mov eax, 0xc7; syscall; 
0x0000000011fabd: add [rax], al; nop; endbr64; mov eax, 0xd5; syscall; 
0x0000000011f98d: add [rax], al; nop; endbr64; mov eax, 0xe4; syscall; 
0x0000000011fbdd: add [rax], al; nop; endbr64; mov eax, 0xfd; syscall; 
0x0000000011fc3d: add [rax], al; nop; endbr64; mov eax, 0xff; syscall; 
0x00000000190cad: add [rax], al; nop; lea rax, [rdi+0x1]; ret; 
0x00000000190c9d: add [rax], al; nop; lea rax, [rdi]; ret; 
0x0000000017869d: add [rax], al; nop; mov [rcx], dx; mov [rcx+0x2], dl; ret; 
0x000000001786fd: add [rax], al; nop; mov [rcx], rdx; mov [rcx+0x8], dl; ret; 
0x000000000b7e8d: add [rax], al; nop; mov [rdi-0x1], edx; ret; 
0x000000000b7e9d: add [rax], al; nop; mov [rdi], edx; ret; 
0x000000000b7eed: add [rax], al; nop; mov [rdi], rdx; mov [rdi+0x8], dl; ret; 
0x000000000cfb4d: add [rax], al; nop; mov rax, 0x1; ret; 
0x0000000018a7fd: add [rax], al; nop; mov rax, rdi; vzeroupper; ret; 
0x0000000018469d: add [rax], al; nop; vzeroupper; xor eax, eax; ret; 
0x0000000002410d: add [rax], al; nop; xor edi, edi; mov eax, edx; syscall; 
0x00000000041ff7: add [rax], al; or byte ptr [rax+0x21], 0xc2; mov [rdi], rdx; ret; 
0x00000000041fc7: add [rax], al; or byte ptr [rax+0x21], 0xc2; movq xmm0, rdx; ret; 
0x00000000057c57: add [rax], al; or byte ptr [rcx-0x77], 0x0; mov eax, 0x1; mov dword ptr [rdx], 0xffffc002; ret; 
0x000000001173a6: add [rax], al; or dword ptr [rax], 0x8000; add rsp, 0x8; mov eax, r8d; ret; 
0x0000000008e68e: add [rax], al; or dword ptr [rbx], 0x20; mov eax, 0xffffffff; pop rbx; ret; 
0x00000000061bf3: add [rax], al; or eax, 0x7; mov [rdx], eax; mov eax, 0x1; ret; 
0x00000000041bd5: add [rax], al; or eax, edx; mov [rsp+0x10], eax; fld st, tbyte ptr [rsp+0x8]; ret; 
0x000000000ac0d9: add [rax], al; pmovmskb eax, xmm1; bsf eax, eax; lea rax, [rdi+rax+0x30]; ret; 
0x000000000ac5c0: add [rax], al; pmovmskb eax, xmm1; bsr eax, eax; add rax, rdi; ret; 
0x0000000012cfc2: add [rax], al; pop r12; pop rbp; ret; 
0x000000000dd42a: add [rax], al; pop r13; pop r14; jmp rax; 
0x00000000148a53: add [rax], al; pop rbp; jmp rcx; 
0x00000000060f3c: add [rax], al; pop rbp; pop r12; pop r13; ret; 
0x000000000436f8: add [rax], al; pop rbp; pop r12; ret; 
0x0000000005b5ea: add [rax], al; pop rbp; ret; 
0x000000000bc129: add [rax], al; pop rbx; cmove rax, rdx; ret; 
0x00000000043581: add [rax], al; pop rbx; pop rbp; pop r12; ret; 
0x000000000832fd: add [rax], al; pop rbx; pop rbp; ret; 
0x0000000002fe0c: add [rax], al; pop rbx; ret; 
0x0000000015f870: add [rax], al; push 0x0; call qword ptr [rax+0x1e0]; 
0x000000000d0e98: add [rax], al; push 0x0; push 0x0; lea r8, [rsp+0x40]; call qword ptr [rax+0x1e0]; 
0x0000000015f81f: add [rax], al; push 0x2; call qword ptr [rax+0x1e0]; 
0x0000000014783b: add [rax], al; push qword ptr [rsp+0xe8]; mov [rsp+0x18], rdi; lea r9, [rsp+0x40]; call qword ptr [rax]; 
0x00000000093693: add [rax], al; pxor xmm0, xmm0; movups [rbx+0x48], xmm0; pop rbx; ret; 
0x00000000116dbe: add [rax], al; pxor xmm0, xmm0; movups [rdi], xmm0; ret; 
0x00000000024277: add [rax], al; ret; 
0x0000000012fb26: add [rax], al; rol byte ptr [rcx+0xfa], 0x80; cmovne eax, edi; ret; 
0x00000000023a49: add [rax], al; rol rax, 0x11; mov [rip+0x1cd8d2], rax; ret; 
0x00000000033e85: add [rax], al; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000ce0be: add [rax], al; setg al; movzx eax, al; lea eax, [rax+rax-0x1]; ret; 
0x00000000102ad6: add [rax], al; setne al; lea eax, [rax+rax*8+0x5]; ret; 
0x000000000e51be: add [rax], al; setne al; ret; 
0x00000000043bbc: add [rax], al; shl rax, cl; or [rdi], rax; xor eax, eax; ret; 
0x000000000989ff: add [rax], al; shr ecx, 0x3; rep stosq [rdi]; pop rbp; ret; 
0x0000000010c6ba: add [rax], al; shr ecx, 0x3; rep stosq [rdi]; ret; 
0x0000000008ad6e: add [rax], al; shr edx, 0x4; and edx, 0x1; mov eax, edx; ret; 
0x0000000008ae6e: add [rax], al; shr edx, 0x5; and edx, 0x1; mov eax, edx; ret; 
0x00000000046fff: add [rax], al; sub dword ptr [r13], 0x1; xor esi, esi; mov rdi, r9; call r8; 
0x00000000098d3a: add [rax], al; sub dword ptr [rip+0x153e3d], 0x1; pop rbp; ret; 
0x00000000137a27: add [rax], al; sub dword ptr [rip+0xb8a08], 0x1; mov eax, r8d; pop rbp; ret; 
0x0000000018e1cc: add [rax], al; sub eax, ecx; ret; 
0x00000000041b98: add [rax], al; sub eax, edx; sar eax, 0x10; ret; 
0x0000000015d14e: add [rax], al; sub ecx, 0x5; cmp cx, 0x3; jbe short 0x000000000015d160; ret; 
0x000000000935c6: add [rax], al; sub edx, [rax+0x10]; mov eax, [rdi+0x10]; sub eax, edx; ret; 
0x000000001141e6: add [rax], al; sub edx, eax; test eax, eax; cmovns eax, edx; ret; 
0x0000000013c19f: add [rax], al; sub esi, 0x1; mov [rdi+0x1], sil; ret; 
0x00000000092a56: add [rax], al; sub rax, rcx; sub eax, 0x1; ret; 
0x000000000bb951: add [rax], al; sub rax, rdx; ret; 
0x00000000087e26: add [rax], al; sub rcx, rax; sar rcx, 0x2; lea eax, [rcx-0x1]; ret; 
0x00000000090935: add [rax], al; sub rsi, rdx; mov rdi, rbx; mov edx, 0x1; call qword ptr [r14+0x80]; 
0x000000000229f9: add [rax], al; syscall; 
0x00000000190c84: add [rax], al; test ah, 0x40; jne 0x0000000000190d70; lea rax, [rdi+0xf]; ret; 
0x00000000190c32: add [rax], al; test al, 0x40; jne 0x0000000000190d00; lea rax, [rdi+0x7]; ret; 
0x000000000cf513: add [rax], al; test al, 0xf0; jne 0x00000000000cf680; lea rax, [rdi-0x10]; ret; 
0x00000000190ba5: add [rax], al; test dh, 0x40; jne 0x0000000000190ae0; lea rax, [rdi+0xf]; ret; 
0x00000000190beb: add [rax], al; test dh, 0x4; jne 0x0000000000190ae0; lea rax, [rdi+0xb]; ret; 
0x00000000190b22: add [rax], al; test dl, 0x40; jne short 0x0000000000190ae0; lea rax, [rdi+0x7]; ret; 
0x00000000190b50: add [rax], al; test dl, 0x4; jne short 0x0000000000190ae0; lea rax, [rdi+0x3]; ret; 
0x00000000148133: add [rax], al; test eax, eax; je short 0x0000000000148140; xor eax, eax; ret; 
0x0000000004824a: add [rax], al; test eax, eax; jne short 0x0000000000048260; mov eax, 0x13e; syscall; 
0x000000000e2c5d: add [rax], al; test eax, eax; jne short 0x00000000000e2c78; mov eax, 0x3d; syscall; 
0x000000000e2e6a: add [rax], al; test eax, eax; jne short 0x00000000000e2e80; mov eax, 0x22; syscall; 
0x0000000010c18d: add [rax], al; test eax, eax; jne short 0x000000000010c1a8; mov eax, 0x11; syscall; 
0x0000000010c23d: add [rax], al; test eax, eax; jne short 0x000000000010c258; mov eax, 0x12; syscall; 
0x0000000010ded9: add [rax], al; test eax, eax; jne short 0x000000000010df40; mov eax, 0x101; syscall; 
0x0000000010dffa: add [rax], al; test eax, eax; jne short 0x000000000010e010; syscall; 
0x0000000010e09a: add [rax], al; test eax, eax; jne short 0x000000000010e0b0; mov eax, 0x1; syscall; 
0x0000000010e50e: add [rax], al; test eax, eax; jne short 0x000000000010e540; mov eax, 0x48; syscall; 
0x0000000010e83a: add [rax], al; test eax, eax; jne short 0x000000000010e850; mov eax, 0x3; syscall; 
0x0000000010e9ba: add [rax], al; test eax, eax; jne short 0x000000000010e9d0; mov eax, 0x55; syscall; 
0x0000000011298a: add [rax], al; test eax, eax; jne short 0x00000000001129a0; mov eax, 0x7; syscall; 
0x0000000011300d: add [rax], al; test eax, eax; jne short 0x0000000000113028; mov eax, 0x146; syscall; 
0x0000000011321d: add [rax], al; test eax, eax; jne short 0x0000000000113238; mov eax, 0x115; syscall; 
0x000000001132cd: add [rax], al; test eax, eax; jne short 0x00000000001132e8; mov eax, 0x11d; syscall; 
0x0000000011440a: add [rax], al; test eax, eax; jne short 0x0000000000114420; mov eax, 0x13; syscall; 
0x000000001144aa: add [rax], al; test eax, eax; jne short 0x00000000001144c0; mov eax, 0x14; syscall; 
0x00000000114f9d: add [rax], al; test eax, eax; jne short 0x0000000000114fb8; mov eax, 0x17; syscall; 
0x000000001151ca: add [rax], al; test eax, eax; jne short 0x00000000001151e0; mov eax, 0x4a; syscall; 
0x0000000011528a: add [rax], al; test eax, eax; jne short 0x00000000001152a0; mov eax, 0x4b; syscall; 
0x00000000117c26: add [rax], al; test eax, eax; jne short 0x0000000000117c38; sub dword ptr [rip+0xd7c1d], 0x1; ret; 
0x00000000118a0a: add [rax], al; test eax, eax; jne short 0x0000000000118a20; mov eax, 0x1a; syscall; 
0x0000000011f44d: add [rax], al; test eax, eax; jne short 0x000000000011f468; mov eax, 0xe8; syscall; 
0x0000000011f4fd: add [rax], al; test eax, eax; jne short 0x000000000011f518; mov eax, 0x114; syscall; 
0x0000000011f5ad: add [rax], al; test eax, eax; jne short 0x000000000011f5c8; mov eax, 0x116; syscall; 
0x0000000011f65d: add [rax], al; test eax, eax; jne short 0x000000000011f678; mov eax, 0x113; syscall; 
0x0000000011f72a: add [rax], al; test eax, eax; jne short 0x000000000011f740; mov eax, 0x130; syscall; 
0x000000001200fa: add [rax], al; test eax, eax; jne short 0x0000000000120110; mov eax, 0x2b; syscall; 
0x000000001201ca: add [rax], al; test eax, eax; jne short 0x00000000001201e0; mov eax, 0x2a; syscall; 
0x000000001203ed: add [rax], al; test eax, eax; jne short 0x0000000000120408; mov eax, 0x2d; syscall; 
0x000000001204aa: add [rax], al; test eax, eax; jne short 0x00000000001204c0; mov eax, 0x2f; syscall; 
0x0000000012060a: add [rax], al; test eax, eax; jne short 0x0000000000120620; mov eax, 0x2e; syscall; 
0x000000001206ad: add [rax], al; test eax, eax; jne short 0x00000000001206c8; mov eax, 0x2c; syscall; 
0x00000000120b0d: add [rax], al; test eax, eax; jne short 0x0000000000120b28; mov eax, 0x120; syscall; 
0x00000000120bbd: add [rax], al; test eax, eax; jne short 0x0000000000120bd8; mov eax, 0x12b; syscall; 
0x00000000120c6d: add [rax], al; test eax, eax; jne short 0x0000000000120c88; mov eax, 0x133; syscall; 
0x00000000120edd: add [rax], al; test eax, eax; jne short 0x0000000000120ef8; mov eax, 0x45; syscall; 
0x00000000120f8d: add [rax], al; test eax, eax; jne short 0x0000000000120fa8; mov eax, 0x46; syscall; 
0x000000000e5247: add [rax], al; test edi, edi; js short 0x00000000000e5250; ret; 
0x000000000630b4: add [rax], al; test edx, edx; jne short 0x00000000000630c0; sub dword ptr [rdi], 0x1; ret; 
0x00000000083f66: add [rax], al; test edx, edx; jne short 0x0000000000083f78; sub dword ptr [rip+0x16a80d], 0x1; ret; 
0x0000000009101a: add [rax], al; test edx, edx; jne short 0x0000000000091030; sub dword ptr [rip+0x15d799], 0x1; ret; 
0x00000000093926: add [rax], al; test edx, edx; jne short 0x0000000000093938; sub dword ptr [rip+0x15ae8d], 0x1; ret; 
0x00000000082a56: add [rax], al; test rax, rax; je short 0x0000000000082a66; mov rdi, [rdi+0xe0]; jmp rax; 
0x00000000082b36: add [rax], al; test rax, rax; je short 0x0000000000082b50; mov rdi, [rdi+0xe0]; jmp rax; 
0x000000000dd05c: add [rax], al; test rax, rax; je short 0x00000000000dd098; call rax; 
0x000000000dd0dc: add [rax], al; test rax, rax; je short 0x00000000000dd118; call rax; 
0x0000000010d38d: add [rax], al; test rax, rax; je short 0x000000000010d3d0; xor edx, edx; call rax; 
0x0000000013787a: add [rax], al; test rax, rax; je short 0x0000000000137886; mov rdi, rbx; call rax; 
0x00000000137b9a: add [rax], al; test rax, rax; je short 0x0000000000137ba6; mov rdi, rbx; call rax; 
0x00000000137c62: add [rax], al; test rax, rax; je short 0x0000000000137c72; lea rdi, [rip+0xb8770]; call rax; 
0x000000001846ae: add [rax], al; tzcnt eax, eax; add rax, rdi; vzeroupper; ret; 
0x000000001908bb: add [rax], al; vmovdqu64 [rdi+rdx-0x40], zmm0; vmovdqu64 [rdi], zmm0; vzeroupper; ret; 
0x00000000189a20: add [rax], al; vzeroupper; ret; 
0x00000000184aee: add [rax], al; vzeroupper; xor eax, eax; ret; 
0x0000000011369c: add [rax], al; xchg ax, ax; endbr64; mov eax, 0x1; syscall; 
0x000000000e40ec: add [rax], al; xchg ax, ax; endbr64; mov eax, 0x27; syscall; 
0x0000000011f92c: add [rax], al; xchg ax, ax; endbr64; mov eax, 0x9e; syscall; 
0x00000000114f5c: add [rax], al; xchg ax, ax; endbr64; mov eax, 0xab; syscall; 
0x000000000d0dec: add [rax], al; xchg ax, ax; endbr64; mov eax, 0xc9; syscall; 
0x000000001255dc: add [rax], al; xchg ax, ax; endbr64; ret; 
0x0000000017868c: add [rax], al; xchg ax, ax; mov [rcx], dx; ret; 
0x000000001786bc: add [rax], al; xchg ax, ax; mov [rcx], edx; mov [rcx+0x4], dl; ret; 
0x000000000b7e7c: add [rax], al; xchg ax, ax; mov [rdi], dx; ret; 
0x000000000b7eac: add [rax], al; xchg ax, ax; mov [rdi], edx; mov [rdi+0x4], dl; ret; 
0x000000000b6e8c: add [rax], al; xchg ax, ax; mov dx, [rsi]; mov [rdi], dx; ret; 
0x0000000014735c: add [rax], al; xchg ax, ax; mov rax, [rbp+0x8]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x000000000319ec: add [rax], al; xchg ax, ax; ret; 
0x000000000baf4c: add [rax], al; xchg ax, ax; xor ch, ch; mov [rdi], ch; ret; 
0x000000000cf38c: add [rax], al; xchg ax, ax; xor rax, rax; ret; 
0x00000000042330: add [rax], al; xor bl, 0xf; adc [rdi], eax; movd xmm0, esi; ret; 
0x0000000013fe97: add [rax], al; xor eax, 0xfffbc2e9; call qword ptr [rax+0x244c8b44]; 
0x000000000d018c: add [rax], al; xor eax, eax; add rsp, 0x8; ret; 
0x000000000ee4a6: add [rax], al; xor eax, eax; cmp [rsi], cl; je 0x00000000000ee3ed; ret; 
0x0000000009ef68: add [rax], al; xor eax, eax; mov [rdi], rsi; ret; 
0x0000000014f6f3: add [rax], al; xor eax, eax; mov rax, [rdi+0x8]; lea rsi, [rsp+0x10]; call qword ptr [rax+0x10]; 
0x000000000bc0e6: add [rax], al; xor eax, eax; pop rbx; ret; 
0x00000000040ff6: add [rax], al; xor eax, eax; ret; 
0x000000001842fe: add [rax], al; xor eax, eax; vzeroupper; ret; 
0x00000000047daa: add [rax], al; xor eax, ecx; ret; 
0x000000000421a6: add [rax], al; xor ecx, ecx; addsd xmm0, xmm0; mov [rdi], ecx; ret; 
0x000000001473e0: add [rax], al; xor ecx, ecx; lea rdx, [rip+0xe7e5]; lea r9, [rsp+0x20]; call qword ptr [rax]; 
0x0000000011895b: add [rax], al; xor edi, edi; or r10d, 0x40; mov eax, ecx; syscall; 
0x000000000d10aa: add [rax], al; xor edi, edi; syscall; 
0x00000000089832: add [rax], al; xor edx, edx; mov rdi, r15; call qword ptr [rbx+0x80]; 
0x0000000008eaa0: add [rax], al; xor edx, edx; mov rdi, rbp; call qword ptr [rax+0x80]; 
0x0000000008eda2: add [rax], al; xor edx, edx; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x0000000008f4f6: add [rax], al; xor edx, edx; mov rsi, rbp; mov rdi, rbx; call qword ptr [r12+0x80]; 
0x000000000bba01: add [rax], al; xor edx, edx; or cl, cl; cmove rax, rdx; ret; 
0x00000000092f08: add [rax], al; xor edx, edx; xor esi, esi; mov rdi, r15; call qword ptr [rax+0x58]; 
0x000000000dd00c: add [rax], al; xor esi, esi; lea edi, [rdi*8+0x2]; syscall; 
0x0000000008973d: add [rax], al; xor esi, esi; mov edx, 0x1; mov rdi, r15; call qword ptr [rbp+0x80]; 
0x0000000008ed05: add [rax], al; xor esi, esi; mov edx, 0x1; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x00000000089547: add [rax], al; xor esi, esi; mov edx, 0x2; mov rdi, r15; call qword ptr [r13+0x80]; 
0x00000000082253: add [rax], al; xor esi, esi; mov edx, 0x2; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x00000000081e67: add [rax], al; xor esi, esi; mov rdi, rbp; call qword ptr [rbx+0x10]; 
0x000000000946b0: add [rax], al; xor r10, r10; add rdi, 0x308; mov esi, 0x80; syscall; 
0x000000000d009e: add [rax], al; xor r12d, r12d; mov rax, r12; pop r12; ret; 
0x0000000008e336: add [rax], al; xor r8d, r8d; mov rax, r8; ret; 
0x0000000011bff0: add [rax], al; xor rax, fs:[0x28]; jne short 0x000000000011c005; add rsp, 0x418; ret; 
0x000000000cf0be: add [rax], al; xor rax, rax; ret; 
0x0000000004334d: add [rax], al; xor rcx, fs:[0x28]; jne 0x00000000000433f6; add rsp, 0x98; ret; 
0x00000000042f14: add [rax], al; xor rcx, fs:[0x28]; jne short 0x0000000000042f29; add rsp, 0x148; ret; 
0x000000000435e9: add [rax], al; xor rcx, fs:[0x28]; jne short 0x0000000000043605; add rsp, 0x118; ret; 
0x0000000004366c: add [rax], al; xor rcx, fs:[0x28]; jne short 0x0000000000043688; add rsp, 0x118; ret; 
0x00000000043d17: add [rax], al; xor rcx, fs:[0x28]; jne short 0x0000000000043d2c; add rsp, 0x148; ret; 
0x00000000044447: add [rax], al; xor rcx, fs:[0x28]; jne short 0x000000000004445c; add rsp, 0xa8; ret; 
0x00000000043777: add [rax], al; xor rsi, fs:[0x28]; jne short 0x000000000004378c; add rsp, 0x98; ret; 
0x00000000127b0a: add [rax], bh; cmovns rax, [rbx+0x28]; pop rbx; ret; 
0x00000000097118: add [rax], cl; add [rcx], dh; shr al, 0xbe; ret; 
0x0000000013b3cb: add [rax], cl; add al, ch; in eax, dx; mov ebp, edi; jmp qword ptr [rsi+0x66]; 
0x00000000034118: add [rax], cl; movzx eax, ax; ret; 
0x000000000a0337: add [rax], dl; lea rax, [rip+0x1b0d0]; cmove rax, rdx; ret; 
0x000000000341f8: add [rax], dl; movzx eax, ax; ret; 
0x000000000e5099: add [rax], eax; add [rax+0x20], bh; cmove rax, rdx; ret; 
0x000000000c0aa6: add [rax], eax; add [rax+0x29], cl; ret far; 
0x0000000013b4c5: add [rax], eax; add [rax+0x63], cl; ret; 
0x000000000b1937: add [rax], eax; add [rax+0xf], cl; mov ebp, 0xf80148c0; ret; 
0x0000000013bce3: add [rax], eax; add [rax-0x1], bh; cmove eax, edx; ret; 
0x00000000051f5e: add [rax], eax; add [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x000000000d6f0d: add [rax], eax; add [rax-0x41], cl; ret; 
0x00000000047fb1: add [rax], eax; add [rax-0x73], cl; add eax, 0x1a934b; add rsp, 0x8; ret; 
0x0000000009789f: add [rax], eax; add [rax-0x75], cl; add eax, 0x154517; call qword ptr [rax]; 
0x00000000147ec3: add [rax], eax; add [rax-0x75], cl; and al, 0x30; call rax; 
0x0000000009e679: add [rax], eax; add [rax-0x75], cl; jg short 0x000000000009e6c8; mov rsi, rbp; call rax; 
0x0000000014831e: add [rax], eax; add [rax-0x75], cl; or [r14+0x20], r15b; mov rdi, rbp; call qword ptr [rax+0x30]; 
0x0000000015f826: add [rax], eax; add [rax-0x77], cl; adc [r8+0x5a], bl; pop rbx; ret; 
0x0000000015fd11: add [rax], eax; add [rax-0x77], cl; add ebx, [rax+0x5a]; pop rbx; ret; 
0x0000000015da96: add [rax], eax; add [rax-0x77], cl; fsubp st(0), st; call far fword ptr [rbx-0x5]; 
0x0000000008f97b: add [rax], eax; add [rax-0x77], cl; out 0x48, al; mov edi, ebp; call qword ptr [r13+0x90]; 
0x0000000008e6f5: add [rax], eax; add [rax-0x77], cl; out 0x48, al; mov edi, ebp; call qword ptr [r15+0x90]; 
0x000000001965ae: add [rax], eax; add [rax-0x77], cl; ret far; 
0x000000001434fa: add [rax], eax; add [rax-0x77], cl; ret; 
0x0000000015f7de: add [rax], eax; add [rax-0x77], cl; sbb [r8+0x5a], bl; pop rbx; ret; 
0x000000000bbc12: add [rax], eax; add [rax-0x77], cl; shl ebx, 0x1; movsb [rdi], [rsi]; ret; 
0x00000000112d4c: add [rax], eax; add [rax-0x77], cl; xor esi, esi; syscall; 
0x0000000010d38c: add [rax], eax; add [rax-0x7b], cl; shl byte ptr [rsp+rdi+0x31], 0xd2; call rax; 
0x0000000017ca7d: add [rax], eax; add [rax-0x7cb7fec8], al; fdivr st, st(7); ret; 
0x00000000099493: add [rax], eax; add [rax-0x7d], cl; call far fword ptr [rdi]; 
0x00000000026236: add [rax], eax; add [rax-0x7d], cl; ret; 
0x00000000163376: add [rax], eax; add [rax], al; add [rax-0x1], bh; ret; 
0x000000000dcfef: add [rax], eax; add [rax], al; add rsp, 0x8; ret; 
0x0000000009093e: add [rax], eax; add [rax], al; call qword ptr [r14+0x80]; 
0x00000000153aa7: add [rax], eax; add [rax], al; call qword ptr [rax+0x18]; 
0x00000000146999: add [rax], eax; add [rax], al; call qword ptr [rax+0x28]; 
0x0000000011039e: add [rax], eax; add [rax], al; call qword ptr [rbp+0x40]; 
0x00000000119aad: add [rax], eax; add [rax], al; call r12; 
0x00000000043e0e: add [rax], eax; add [rax], al; cmove eax, edx; ret; 
0x000000000cf1c1: add [rax], eax; add [rax], al; cmovg r9d, eax; mov eax, r9d; ret; 
0x000000000cf19f: add [rax], eax; add [rax], al; cmovl r9d, eax; mov eax, r9d; ret; 
0x000000000e3120: add [rax], eax; add [rax], al; incsspq rsi; jmp rdi; 
0x000000000cf592: add [rax], eax; add [rax], al; je 0x00000000000cf4f5; lea rax, [rdi-0x10]; ret; 
0x000000000cf642: add [rax], eax; add [rax], al; je short 0x00000000000cf6b0; lea rax, [rdi-0x10]; ret; 
0x000000000cf0b1: add [rax], eax; add [rax], al; jg short 0x00000000000cf0b9; neg eax; ret; 
0x00000000192af1: add [rax], eax; add [rax], al; jg short 0x0000000000192b00; neg eax; ret; 
0x0000000018f8b7: add [rax], eax; add [rax], al; jl short 0x000000000018f8c0; neg eax; ret; 
0x00000000076d30: add [rax], eax; add [rax], al; jmp rax; 
0x0000000015f52a: add [rax], eax; add [rax], al; mov [r13+0x18], rax; lea rdi, [r15+0x908]; call qword ptr [r15+0xf10]; 
0x00000000057b86: add [rax], eax; add [rax], al; mov [rdi], rsi; ret; 
0x0000000009525e: add [rax], eax; add [rax], al; mov [rip+0x157044], eax; ret; 
0x00000000095237: add [rax], eax; add [rax], al; mov [rip+0x15704e], rax; ret; 
0x0000000009520e: add [rax], eax; add [rax], al; mov [rip+0x15706f], rax; ret; 
0x000000000951ee: add [rax], eax; add [rax], al; mov [rip+0x157087], rax; ret; 
0x00000000148226: add [rax], eax; add [rax], al; mov [rsi+0x10], rax; ret; 
0x000000000481c6: add [rax], eax; add [rax], al; mov [rsi+0xe], ax; xor eax, eax; ret; 
0x000000000ec471: add [rax], eax; add [rax], al; mov byte ptr [rdi], 0x5b; ret; 
0x00000000057c5e: add [rax], eax; add [rax], al; mov dword ptr [rdx], 0xffffc002; ret; 
0x00000000153a97: add [rax], eax; add [rax], al; mov dword ptr [rsp+0x10], 0x1; mov dword ptr [rsp+0x18], 0x1; call qword ptr [rax+0x18]; 
0x00000000153a9f: add [rax], eax; add [rax], al; mov dword ptr [rsp+0x18], 0x1; call qword ptr [rax+0x18]; 
0x00000000153afb: add [rax], eax; add [rax], al; mov dword ptr [rsp+0x18], 0x1; mov dword ptr [rsp+0x20], 0x5; call qword ptr [rax+0x18]; 
0x00000000153b03: add [rax], eax; add [rax], al; mov dword ptr [rsp+0x20], 0x5; call qword ptr [rax+0x18]; 
0x00000000153cc0: add [rax], eax; add [rax], al; mov dword ptr [rsp+0xb0], 0x1; mov dword ptr [rsp+0xb8], 0x1; call qword ptr [rax+0x18]; 
0x00000000153ccb: add [rax], eax; add [rax], al; mov dword ptr [rsp+0xb8], 0x1; call qword ptr [rax+0x18]; 
0x0000000014d024: add [rax], eax; add [rax], al; mov eax, 0x1; ret; 
0x000000000dd2af: add [rax], eax; add [rax], al; mov eax, 0xe6; syscall; 
0x0000000009d745: add [rax], eax; add [rax], al; mov eax, r12d; pop r12; ret; 
0x0000000011736b: add [rax], eax; add [rax], al; mov eax, r8d; add rsp, 0x8; ret; 
0x0000000008cd72: add [rax], eax; add [rax], al; mov eax, r8d; ret; 
0x00000000113b81: add [rax], eax; add [rax], al; mov esi, 0x5409; mov eax, 0x10; syscall; 
0x000000000229ed: add [rax], eax; add [rax], al; mov esi, 0x81; mov eax, 0xca; syscall; 
0x00000000099f9e: add [rax], eax; add [rax], al; mov esi, 0x81; mov eax, ebx; syscall; 
0x00000000121c9a: add [rax], eax; add [rax], al; mov qword ptr [rax+0x10], 0x0; mov qword ptr [rip+0xca6af], 0x0; ret; 
0x0000000015d28a: add [rax], eax; add [rax], al; mov qword ptr [rip+0x93ea7], 0x0; add rsp, 0x8; ret; 
0x00000000077f77: add [rax], eax; add [rax], al; mov r10, rdx; jmp rax; 
0x00000000077be7: add [rax], eax; add [rax], al; mov r10, rdx; mov dword ptr [rbp-0x510], 0x1; jmp rax; 
0x0000000007e5e4: add [rax], eax; add [rax], al; mov r9, rsi; jmp rax; 
0x0000000007d418: add [rax], eax; add [rax], al; mov r9, rsi; mov dword ptr [rbp-0x4f0], 0x0; jmp rax; 
0x0000000007da0c: add [rax], eax; add [rax], al; mov r9, rsi; mov dword ptr [rbp-0x4f0], 0x1; jmp rax; 
0x0000000007e3ac: add [rax], eax; add [rax], al; mov r9, rsi; mov dword ptr [rbp-0x4f8], 0x20; jmp rax; 
0x0000000007e2bc: add [rax], eax; add [rax], al; mov r9, rsi; mov dword ptr [rbp-0x530], 0x0; jmp rax; 
0x00000000148b0e: add [rax], eax; add [rax], al; mov rax, [rax+0x23b8]; mov rdi, r12; call qword ptr [rax+0x28]; 
0x00000000154b15: add [rax], eax; add [rax], al; mov rdi, r13; call qword ptr [rax+0x28]; 
0x00000000089742: add [rax], eax; add [rax], al; mov rdi, r15; call qword ptr [rbp+0x80]; 
0x0000000008f790: add [rax], eax; add [rax], al; mov rdi, rbp; call qword ptr [rax+0x80]; 
0x0000000008ed0a: add [rax], eax; add [rax], al; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x0000000009088a: add [rax], eax; add [rax], al; mov rdi, rbx; call qword ptr [r12+0x48]; 
0x0000000008a09c: add [rax], eax; add [rax], al; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x00000000081273: add [rax], eax; add [rax], al; mov rdi, rbx; call r8; 
0x00000000080c7d: add [rax], eax; add [rax], al; mov rdi, rbx; call rax; 
0x0000000007e304: add [rax], eax; add [rax], al; movsxd rax, [rax+rcx*4]; add rax, rdx; jmp rax; 
0x0000000007df4a: add [rax], eax; add [rax], al; movsxd rax, [rcx+rax*4]; add rax, rdx; jmp rax; 
0x0000000007f1e5: add [rax], eax; add [rax], al; movsxd rax, [rsi+rax*4]; add rax, rdx; jmp rax; 
0x000000001506e5: add [rax], eax; add [rax], al; movups [r8+0x20], xmm2; ret; 
0x0000000014fdc2: add [rax], eax; add [rax], al; movups [r8+0x8], xmm0; ret; 
0x0000000014cf9f: add [rax], eax; add [rax], al; movups [rdx], xmm1; ret; 
0x0000000014fde7: add [rax], eax; add [rax], al; movups [rdx], xmm2; ret; 
0x000000001506f7: add [rax], eax; add [rax], al; movups [rdx], xmm3; ret; 
0x000000001506d7: add [rax], eax; add [rax], al; movups [rdx], xmm4; ret; 
0x00000000153b71: add [rax], eax; add [rax], al; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x00000000153eb1: add [rax], eax; add [rax], al; movups [rsp+0xb8], xmm5; call rax; 
0x000000000875c5: add [rax], eax; add [rax], al; pop rbp; pop r12; ret; 
0x000000000832fb: add [rax], eax; add [rax], al; pop rbx; pop rbp; ret; 
0x0000000010c5a1: add [rax], eax; add [rax], al; pop rbx; ret; 
0x0000000005565f: add [rax], eax; add [rax], al; ret; 
0x00000000033e83: add [rax], eax; add [rax], al; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000010e0a1: add [rax], eax; add [rax], al; syscall; 
0x000000000e5245: add [rax], eax; add [rax], al; test edi, edi; js short 0x00000000000e5250; ret; 
0x000000000c05f3: add [rax], eax; add [rbp+0x31], al; shr cl, 0x73; idiv bh; jmp qword ptr [rsi+0xf]; 
0x00000000062386: add [rax], eax; add [rbp+0x41], bl; pop rsp; pop r13; ret; 
0x000000000abd58: add [rax], eax; add [rbp-0x77], cl; ret far; 
0x000000000ea279: add [rax], eax; add [rbp-0x7b], al; ror byte ptr [rdi], 0x85; ret far; 
0x00000000028267: add [rax], eax; add [rbp-0x7b], al; ror byte ptr [rdi], 0x85; ret; 
0x00000000061bf2: add [rax], eax; add [rbx+0x28907c8], al; mov eax, 0x1; ret; 
0x0000000004ba7e: add [rax], eax; add [rbx+0x29482404], cl; ret far; 
0x0000000013dcb3: add [rax], eax; add [rbx+0x5d], bl; pop r12; pop r13; ret; 
0x00000000114ef6: add [rax], eax; add [rbx+0x5d], bl; pop r12; ret; 
0x00000000101963: add [rax], eax; add [rbx+rcx*4+0x63], cl; and [rax-0x7d], cl; ret; 
0x0000000015c165: add [rax], eax; add [rbx+rdi+0x3c], cl; and al, 0x72; mov [0xffff51e924048b49], al; jmp qword ptr [rsi+0xf]; 
0x0000000002c169: add [rax], eax; add [rcx+0x3948fc51], cl; ret; 
0x0000000011b38d: add [rax], eax; add [rcx+rcx*4+0x44], cl; and al, 0x8; mov rdi, [r8]; call rbx; 
0x0000000009d2fe: add [rax], eax; add [rcx+rcx*4-0x16], cl; mov rdi, r12; call rax; 
0x00000000148c96: add [rax], eax; add [rcx+rcx*4-0x19], cl; call qword ptr [rbx]; 
0x00000000087a94: add [rax], eax; add [rcx+rcx*4-0x1], cl; call qword ptr [rax+0x20]; 
0x000000000872d3: add [rax], eax; add [rcx+rcx*4-0x1a], al; mov rdi, r14; call qword ptr [rax+0x18]; 
0x00000000160872: add [rax], eax; add [rcx+rcx*4-0x20], al; pop r12; ret; 
0x0000000004391b: add [rax], eax; add [rcx+rcx*4-0x40], al; pop rbx; ret; 
0x0000000015d0e6: add [rax], eax; add [rcx+rcx*4-0x40], cl; pop rbp; ret; 
0x0000000009d9d7: add [rax], eax; add [rcx+rcx*4-0x6], cl; mov rsi, r14; mov rdi, r13; call rax; 
0x000000000db0c5: add [rax], eax; add [rcx-0x12f43], al; jmp far fword ptr [rax]; 
0x0000000002dec0: add [rax], eax; add [rcx-0x73], cl; add cl, [rax+0x39]; ret far; 
0x0000000011a908: add [rax], eax; add [rcx-0x75], cl; jge short 0x000000000011a90f; call rbx; 
0x0000000011a938: add [rax], eax; add [rcx-0x75], cl; jge short 0x000000000011a93f; call rbx; 
0x00000000150470: add [rax], eax; add [rcx-0x75], cl; jo short 0x00000000001504c0; mov edi, ebp; call qword ptr [rax+0x20]; 
0x0000000011aa88: add [rax], eax; add [rcx-0x75], cl; notrack call rbx; 
0x000000000e8aa3: add [rax], eax; add [rcx-0x77], al; ret; 
0x00000000194aa0: add [rax], eax; add [rcx-0x77], cl; ret; 
0x0000000006ea90: add [rax], eax; add [rcx-0x7d], cl; ret; 
0x000000000a45ef: add [rax], eax; add [rcx-0x9], al; ret; 
0x0000000008973c: add [rax], eax; add [rcx], dh; idiv byte ptr [rdx+0x1]; mov rdi, r15; call qword ptr [rbp+0x80]; 
0x0000000008ed04: add [rax], eax; add [rcx], dh; idiv byte ptr [rdx+0x1]; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x00000000082252: add [rax], eax; add [rcx], dh; idiv byte ptr [rdx+0x2]; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x00000000029612: add [rax], eax; add [rcx], dh; ror byte ptr [rcx+rcx*4+0x5c], 0x24; sub [rcx-0x77], cl; ret; 
0x00000000029611: add [rax], eax; add [rcx], dh; ror byte ptr [rcx+rcx*4+0x5c], 0x24; sub [rcx-0x77], cl; ret; 
0x00000000089831: add [rax], eax; add [rcx], dh; ror byte ptr [rcx+rcx*4-0x1], cl; call qword ptr [rbx+0x80]; 
0x00000000121806: add [rax], eax; add [rcx], dh; sar byte ptr [rsi+0x20241], 0xe8; ret far; 
0x0000000010d606: add [rax], eax; add [rcx], dh; shl bh, 0xc2; jmp rsi; 
0x00000000081e66: add [rax], eax; add [rcx], dh; test byte ptr [rax-0x77], 0xef; call qword ptr [rbx+0x10]; 
0x0000000005540c: add [rax], eax; add [rdi+0x2], bh; mov r10d, 0x8; mov eax, 0xe; syscall; 
0x00000000116b73: add [rax], eax; add [rdi-0x64], bh; mov eax, 0x118; syscall; 
0x0000000011f319: add [rax], eax; add [rdx+0x8], bh; syscall; 
0x00000000147323: add [rax], eax; add [rsi+0x4], bh; mov rdi, rbp; lea r9, [rsp+0x20]; call qword ptr [rax]; 
0x0000000008f6d7: add [rax], eax; add [rsi-0x1], bh; mov rdi, rbp; call qword ptr [rax+0x18]; 
0x0000000009234d: add [rax], eax; add [rsi-0x1], bh; mov rdi, rbx; call qword ptr [rax+0x18]; 
0x000000000e61f0: add [rax], eax; add al, ch; jg short 0x00000000000e61f6; jmp qword ptr [rsp+rax*2-0x77]; 
0x00000000100dc0: add [rax], eax; add al, ch; js short 0x0000000000100d99; std; jmp qword ptr [rsp+rax*2-0x77]; 
0x0000000014b899: add [rax], eax; add al, ch; outsd dx, [rsi]; push 0xffffffffffffffed; jmp qword ptr [rsi+0xf]; 
0x0000000013bd3b: add [rax], eax; add bl, al; ret; 
0x0000000013bd32: add [rax], eax; add bl, al; xor eax, eax; ret; 
0x00000000184970: add [rax], eax; add ch, al; std; xlat [rbx]; ret; 
0x000000000d126d: add [rax], eax; add cl, al; stc; add cl, [rax-0x77]; ret; 
0x00000000052af9: add [rax], eax; add eax, 0xfd8ee800; std; dec dword ptr [rax-0x77]; ret; 
0x00000000144cfd: add [rax], eax; call qword ptr [rsp+0x10]; 
0x0000000009f6d4: add [rax], eax; cmove rax, rdx; ret; 
0x0000000009f695: add [rax], eax; cmove rax, rdx; ret; 
0x0000000009f121: add [rax], eax; cmovne rax, rdx; ret; 
0x0000000009f122: add [rax], eax; cmovne rax, rdx; ret; 
0x0000000011362e: add [rax], eax; endbr64; xor eax, eax; syscall; 
0x00000000054366: add [rax], eax; jne short 0x0000000000054360; pop rbx; ret; 
0x000000000a05d7: add [rax], eax; lea rax, [rip+0x1b940]; cmovne rax, rdx; ret; 
0x000000000bdfbb: add [rax], eax; lea rdx, [rip+0x116fc]; cmovne rax, rdx; ret; 
0x0000000009f11b: add [rax], eax; lea rdx, [rip+0x12e7c]; cmovne rax, rdx; ret; 
0x000000000a0a29: add [rax], eax; lea rdx, [rip+0x1b0be]; cmove rax, rdx; ret; 
0x000000000a06b9: add [rax], eax; lea rdx, [rip+0x1b40e]; cmove rax, rdx; ret; 
0x000000000a0559: add [rax], eax; lea rdx, [rip+0x1b58e]; cmove rax, rdx; ret; 
0x000000000bcd8c: add [rax], eax; lea rdx, [rip+0xd575b]; cmovne rax, rdx; ret; 
0x0000000009f24b: add [rax], eax; lea rdx, [rip+0xd5dbc]; cmovne rax, rdx; ret; 
0x000000000a076b: add [rax], eax; lea rdx, [rip+0xd8bcc]; cmovne rax, rdx; ret; 
0x0000000009f16e: add [rax], eax; lea rdx, [rip+0xf18e9]; cmovne rax, rdx; ret; 
0x0000000017fe28: add [rax], eax; mov eax, [rcx+rax*4]; mov edx, [rcx+rdx*4]; sub eax, edx; ret; 
0x00000000181731: add [rax], eax; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x00000000144adf: add [rax], eax; mov edi, [r13]; call qword ptr [rsp+0x20]; 
0x00000000145060: add [rax], eax; mov edi, [r15]; call qword ptr [rsp+0x70]; 
0x000000000e4fc5: add [rax], eax; mov edx, 0x7d00; mov eax, 0x7f; cmove rax, rdx; ret; 
0x000000001816fd: add [rax], eax; mov edx, [rcx+rdx*4]; mov eax, [rcx+rax*4]; sub eax, edx; ret; 
0x00000000048144: add [rax], eax; ret; 
0x000000001898f7: add [rax], eax; vzeroupper; ret; 
0x0000000011515c: add [rax], eax; xchg ax, ax; endbr64; mov eax, 0xa3; syscall; 
0x00000000114e0c: add [rax], eax; xchg ax, ax; endbr64; mov eax, 0xaa; syscall; 
0x00000000144b77: add [rax], eax; xor edi, edi; call qword ptr [rsp+0x20]; 
0x00000000144fd0: add [rax], eax; xor edi, edi; call qword ptr [rsp+0x70]; 
0x0000000009c22b: add [rax], ecx; sub rdx, 0x8; and eax, 0x1; cmovne rax, rdx; ret; 
0x000000000aef7e: add [rax], edx; add [rdi+0x63], cl; or al, 0x8a; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000054eba: add [rax], esi; add [rax], al; mov eax, 0x9e; syscall; 
0x000000000a45ee: add [rax], r8; add [rcx-0x9], al; ret; 
0x000000001868a0: add [rax], r8; mov eax, [rcx+rax*4]; mov edx, [rcx+rdx*4]; sub eax, edx; ret; 
0x00000000186600: add [rax], r8; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x000000001865cc: add [rax], r8; mov edx, [rcx+rdx*4]; mov eax, [rcx+rax*4]; sub eax, edx; ret; 
0x00000000024e35: add [rax], r8b; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000000445f1: add [rax], r8b; add rsp, 0x8; ret; 
0x0000000004248d: add [rax], r8b; addss xmm0, xmm0; ret; 
0x00000000057d8d: add [rax], r8b; bts rax, 0x30; mov [rdi+0x8], rax; mov eax, 0x2; ret; 
0x0000000009685d: add [rax], r8b; call rax; 
0x000000000241cd: add [rax], r8b; endbr64; lea rax, [rip+0x18fcc3]; ret; 
0x000000001143cd: add [rax], r8b; endbr64; mov eax, 0x10; syscall; 
0x0000000014899d: add [rax], r8b; endbr64; mov eax, 0x2; ret; 
0x000000000433fd: add [rax], r8b; endbr64; mov eax, 0x3e; syscall; 
0x000000001210ad: add [rax], r8b; endbr64; mov eax, 0x40; syscall; 
0x0000000012106d: add [rax], r8b; endbr64; mov eax, 0x47; syscall; 
0x0000000010e59d: add [rax], r8b; endbr64; mov eax, 0x49; syscall; 
0x00000000116d1d: add [rax], r8b; endbr64; mov eax, 0x4d; syscall; 
0x000000001141cd: add [rax], r8b; endbr64; mov eax, 0x8c; syscall; 
0x0000000011f18d: add [rax], r8b; endbr64; mov eax, 0xa6; syscall; 
0x0000000011f00d: add [rax], r8b; endbr64; mov eax, 0xad; syscall; 
0x0000000008cd7d: add [rax], r8b; endbr64; mov eax, [rdi]; and eax, 0x804; ret; 
0x000000000440cd: add [rax], r8b; endbr64; mov eax, [rip+0x1a80ce]; ret; 
0x0000000016336d: add [rax], r8b; endbr64; mov qword ptr [rcx], 0x0; mov eax, 0xffffffff; ret; 
0x00000000062edd: add [rax], r8b; endbr64; mov r10, rcx; mov eax, 0x108; syscall; 
0x00000000112fcd: add [rax], r8b; endbr64; mov r10, rcx; mov eax, 0x28; syscall; 
0x0000000012076d: add [rax], r8b; endbr64; mov r10, rcx; mov eax, 0x36; syscall; 
0x000000001130cd: add [rax], r8b; endbr64; mov r10d, ecx; mov eax, 0x118; syscall; 
0x00000000112b0d: add [rax], r8b; endbr64; mov r10d, ecx; mov eax, 0xdd; syscall; 
0x0000000009381d: add [rax], r8b; endbr64; mov rax, 0xffffffffffffffff; ret; 
0x000000000de2bd: add [rax], r8b; endbr64; mov rax, [rdi+0x20]; ret; 
0x0000000002442d: add [rax], r8b; endbr64; mov rax, [rip+0x1c7a35]; add rax, fs:[0x0]; ret; 
0x0000000012fead: add [rax], r8b; endbr64; mov rax, [rip+0xbbf9d]; add rax, fs:[0x0]; ret; 
0x000000001228dd: add [rax], r8b; endbr64; mov rax, [rip+0xc9575]; mov eax, [rax+0x38]; ret; 
0x0000000009384d: add [rax], r8b; endbr64; ret; 
0x0000000014617d: add [rax], r8b; endbr64; xor eax, eax; ret; 
0x0000000012121d: add [rax], r8b; endbr64; xor r10d, r10d; mov eax, 0x1d; syscall; 
0x00000000041dfd: add [rax], r8b; fld st, tbyte ptr [rsp+0x8]; fadd st, st(0); ret; 
0x000000000b8c5d: add [rax], r8b; lea r11, [rip+0xf6709]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b757d: add [rax], r8b; lea r11, [rip+0xf7c09]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000113405: add [rax], r8b; lea rdx, [rsp+0x8]; mov esi, 0x10; mov eax, 0x48; syscall; 
0x0000000018a5bd: add [rax], r8b; mov [rdi], rdx; mov [rdi+r8-0x8], rdx; vzeroupper; ret; 
0x000000000ec4bd: add [rax], r8b; mov byte ptr [rdi+0x8], 0x1c; mov eax, 0x2; ret; 
0x0000000014d01d: add [rax], r8b; mov dword ptr [r8+0x4], 0x1; mov eax, 0x1; ret; 
0x0000000007892d: add [rax], r8b; mov dword ptr [rbp-0x528], 0x1; mov r10, rdx; jmp rax; 
0x00000000192aed: add [rax], r8b; mov eax, 0x1; jg short 0x0000000000192b00; neg eax; ret; 
0x000000000e5ac5: add [rax], r8b; mov eax, 0x1; ret; 
0x000000000ff78d: add [rax], r8b; mov eax, 0x2; ret; 
0x00000000062ea5: add [rax], r8b; mov eax, 0xffffffff; pop rbp; ret; 
0x000000000884e5: add [rax], r8b; mov eax, 0xffffffff; ret; 
0x00000000026f85: add [rax], r8b; mov eax, [rip+0x1c69c6]; test eax, eax; je short 0x0000000000026f98; ret; 
0x00000000140bd5: add [rax], r8b; mov eax, [rip+0xafbe6]; test eax, eax; je short 0x0000000000140be8; ret; 
0x0000000012fb35: add [rax], r8b; mov eax, edi; and eax, 0xffffff; ret; 
0x0000000012598d: add [rax], r8b; mov eax, r8d; ret; 
0x000000000e315d: add [rax], r8b; mov edi, edx; mov eax, esi; syscall; 
0x00000000085e05: add [rax], r8b; mov edx, 0x10; mov rsi, r13; mov rdi, r15; call qword ptr [r14+0x38]; 
0x000000001214b5: add [rax], r8b; mov edx, 0x40; mov edi, r12d; mov eax, 0x14; syscall; 
0x000000000b6ead: add [rax], r8b; mov edx, [rsi]; mov [rdi], edx; ret; 
0x0000000016087d: add [rax], r8b; mov qword ptr fs:[r12], 0x0; mov rax, [rsp+0x10]; mov rdi, [rsp+0x18]; call rax; 
0x000000001570ed: add [rax], r8b; mov r8d, 0x1; mov eax, r8d; ret; 
0x00000000041fed: add [rax], r8b; mov rax, 0x8000000000000000; and rdx, rax; mov [rdi], rdx; ret; 
0x0000000008ce55: add [rax], r8b; mov rax, [rdi+0x28]; sub rax, [rdi+0x20]; ret; 
0x0000000008cd25: add [rax], r8b; mov rax, [rdi+0x40]; sub rax, [rdi+0x38]; ret; 
0x00000000155b0d: add [rax], r8b; mov rax, [rdi+0x8]; call qword ptr [rax+0x18]; 
0x000000001570fd: add [rax], r8b; mov rax, [rdi+0x8]; jmp qword ptr [rax+0x40]; 
0x00000000155d2d: add [rax], r8b; mov rax, [rdi+0x8]; jmp qword ptr [rax+0x8]; 
0x00000000156695: add [rax], r8b; mov rax, [rdi+0x8]; lea rsi, [rsp+0x10]; call qword ptr [rax]; 
0x00000000156d65: add [rax], r8b; mov rax, [rdi+0x8]; mov rsi, rsp; call qword ptr [rax+0x40]; 
0x000000000dd175: add [rax], r8b; mov rax, [rip+0x10ecf1]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000978e5: add [rax], r8b; mov rax, [rip+0x1544d1]; xor edi, edi; call qword ptr [rax]; 
0x00000000043c65: add [rax], r8b; mov rax, [rip+0x1a8201]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000024715: add [rax], r8b; mov rax, [rip+0x1c7751]; mov dword ptr fs:[rax], 0x9; mov eax, 0xffffffff; ret; 
0x0000000015fcbd: add [rax], r8b; mov rax, [rip+0x914c1]; call qword ptr [rax+0x10]; 
0x0000000015fbdd: add [rax], r8b; mov rax, [rip+0x91599]; test rax, rax; je short 0x000000000015fbd7; call qword ptr [rax+0x18]; 
0x0000000015fa45: add [rax], r8b; mov rax, [rip+0x91739]; call qword ptr [rax+0x8]; 
0x0000000015f94d: add [rax], r8b; mov rax, [rip+0x91831]; call qword ptr [rax]; 
0x0000000011c515: add [rax], r8b; mov rax, [rip+0xcf951]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000112955: add [rax], r8b; mov rax, [rip+0xd9511]; mov dword ptr fs:[rax], 0x16; xor eax, eax; ret; 
0x0000000010dc4d: add [rax], r8b; mov rax, [rip+0xde219]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010da15: add [rax], r8b; mov rax, [rip+0xde451]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010d9b5: add [rax], r8b; mov rax, [rip+0xde4b1]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010d955: add [rax], r8b; mov rax, [rip+0xde511]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010d5cd: add [rax], r8b; mov rax, [rip+0xde899]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010d56d: add [rax], r8b; mov rax, [rip+0xde8f9]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010d50d: add [rax], r8b; mov rax, [rip+0xde959]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000011cc85: add [rax], r8b; mov rax, r8; ret; 
0x0000000018d38d: add [rax], r8b; mov rax, r8; shr rax, 0x2; vzeroupper; ret; 
0x000000000b814d: add [rax], r8b; mov rax, rdi; ret; 
0x000000000b6eed: add [rax], r8b; mov rdx, [rsi]; mov [rdi], rdx; ret; 
0x000000000a8a65: add [rax], r8b; mov rdx, [rsp+0x10]; mov [rax], rdx; ret; 
0x000000000a898d: add [rax], r8b; mov rdx, [rsp+0x18]; mov [rdi], rdx; add rax, rdi; ret; 
0x0000000014cf85: add [rax], r8b; movdqu xmm0, [rdx]; mov eax, esi; movups [r8+0x8], xmm0; ret; 
0x0000000013c365: add [rax], r8b; movsxd rdx, edx; mov eax, r8d; mov byte ptr [rdi+rdx], 0x0; ret; 
0x00000000191ffd: add [rax], r8b; movzx eax, byte ptr [rdi-0xa]; movzx edx, byte ptr [rsi-0xa]; sub eax, edx; ret; 
0x00000000191fed: add [rax], r8b; movzx eax, byte ptr [rdi-0xb]; movzx edx, byte ptr [rsi-0xb]; sub eax, edx; ret; 
0x00000000191fdd: add [rax], r8b; movzx eax, byte ptr [rdi-0xc]; movzx edx, byte ptr [rsi-0xc]; sub eax, edx; ret; 
0x00000000191fcd: add [rax], r8b; movzx eax, byte ptr [rdi-0xd]; movzx edx, byte ptr [rsi-0xd]; sub eax, edx; ret; 
0x00000000191fbd: add [rax], r8b; movzx eax, byte ptr [rdi-0xe]; movzx edx, byte ptr [rsi-0xe]; sub eax, edx; ret; 
0x00000000191fad: add [rax], r8b; movzx eax, byte ptr [rdi-0xf]; movzx edx, byte ptr [rsi-0xf]; sub eax, edx; ret; 
0x00000000184d5d: add [rax], r8b; movzx eax, byte ptr [rdi]; movzx ecx, byte ptr [rsi]; sub eax, ecx; ret; 
0x0000000018a49d: add [rax], r8b; movzx edx, byte ptr [rsi]; mov [rdi], dl; vzeroupper; ret; 
0x0000000008e68d: add [rax], r8b; or dword ptr [rbx], 0x20; mov eax, 0xffffffff; pop rbx; ret; 
0x0000000009e435: add [rax], r8b; pop rbp; ret; 
0x00000000116dbd: add [rax], r8b; pxor xmm0, xmm0; movups [rdi], xmm0; ret; 
0x0000000002fd95: add [rax], r8b; ret; 
0x0000000008ad6d: add [rax], r8b; shr edx, 0x4; and edx, 0x1; mov eax, edx; ret; 
0x0000000008ae6d: add [rax], r8b; shr edx, 0x5; and edx, 0x1; mov eax, edx; ret; 
0x000000000935c5: add [rax], r8b; sub edx, [rax+0x10]; mov eax, [rdi+0x10]; sub eax, edx; ret; 
0x00000000092a55: add [rax], r8b; sub rax, rcx; sub eax, 0x1; ret; 
0x00000000087e25: add [rax], r8b; sub rcx, rax; sar rcx, 0x2; lea eax, [rcx-0x1]; ret; 
0x000000000bc0e5: add [rax], r8b; xor eax, eax; pop rbx; ret; 
0x00000000055c25: add [rax], r8b; xor eax, eax; ret; 
0x000000001842fd: add [rax], r8b; xor eax, eax; vzeroupper; ret; 
0x000000000421a5: add [rax], r8b; xor ecx, ecx; addsd xmm0, xmm0; mov [rdi], ecx; ret; 
0x000000000a288d: add [rax], r8b; xor r8d, r8d; mov rax, r8; ret; 
0x000000000cf0bd: add [rax], r8b; xor rax, rax; ret; 
0x00000000028266: add [rax], r8d; add [rbp-0x7b], al; ror byte ptr [rdi], 0x85; ret; 
0x0000000009d9d6: add [rax], r8d; add [rcx+rcx*4-0x6], cl; mov rsi, r14; mov rdi, r13; call rax; 
0x0000000009f731: add [rax], r8d; cmovne rax, rdx; ret; 
0x0000000009c22a: add [rax], r9d; sub rdx, 0x8; and eax, 0x1; cmovne rax, rdx; ret; 
0x0000000014a244: add [rbp+0x10], dh; add rsp, 0x40; pop rbx; ret; 
0x00000000120eac: add [rbp+0x10], dh; add rsp, 0xa0; pop rbx; ret; 
0x0000000008dc07: add [rbp+0x11], dh; add rsp, 0x48; ret; 
0x00000000115823: add [rbp+0x11], dh; add rsp, 0x58; ret; 
0x000000000d0222: add [rbp+0x14], dh; add rsp, 0x28; ret; 
0x0000000012df7e: add [rbp+0x14], dh; add rsp, 0xd8; ret; 
0x00000000041fa9: add [rbp+0x14], dh; mov rax, 0xfffffffffffff; test rdx, rax; je short 0x0000000000041fc0; ret; 
0x0000000015e847: add [rbp+0x15], dh; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000011f0e8: add [rbp+0x18], dh; add rsp, 0x68; ret; 
0x000000000437fc: add [rbp+0x18], dh; add rsp, 0x98; pop rbp; pop r12; ret; 
0x000000000443cb: add [rbp+0x19], dh; add rsp, 0x98; pop rbp; pop r12; ret; 
0x00000000129590: add [rbp+0x19], eax; rol byte ptr [rcx-0x7d], 0xc0; add [rbp+0x440f45c9], eax; ror dword ptr [rax-0x7d], 0x1; ret; 
0x0000000012963b: add [rbp+0x19], eax; rol byte ptr [rcx-0x7d], 0xc0; add [rbp+0x440f45f6], eax; ret far; 
0x00000000044886: add [rbp+0x1], cl; test dword ptr [rax-0x77], 0xfe894cea; mov rdi, r12; call rbx; 
0x0000000013e158: add [rbp+0x1a], dh; add rsp, 0x20; pop rbx; ret; 
0x000000000439c5: add [rbp+0x1a], dh; add rsp, 0x40; pop rbx; ret; 
0x0000000005b5e2: add [rbp+0x1b], dh; add rsp, 0x450; pop rbp; ret; 
0x00000000151642: add [rbp+0x1c], dh; add rsp, 0x10; pop rbx; ret; 
0x00000000044348: add [rbp+0x1c], dh; add rsp, 0x98; pop rbp; pop r12; ret; 
0x000000000e4ff4: add [rbp+0x1c], dh; mov eax, 0xfffa; ret; 
0x0000000005b8a4: add [rbp+0x1e], dh; add rsp, 0x38; ret; 
0x000000000ca0e2: add [rbp+0x1f], dh; add rsp, 0x20; pop rbx; ret; 
0x0000000015c4cd: add [rbp+0x1f], dh; add rsp, 0x520; mov rax, r12; pop r12; ret; 
0x0000000013b4bf: add [rbp+0x20850fdb], al; add [rax], eax; add [rax+0x63], cl; ret; 
0x00000000154142: add [rbp+0x23], dh; add rsp, 0x28; ret; 
0x00000000121113: add [rbp+0x24], dh; mov eax, 0x42; syscall; 
0x00000000113abc: add [rbp+0x25], dh; mov eax, r9d; add rsp, 0x38; ret; 
0x0000000004304b: add [rbp+0x26], dh; mov eax, r8d; add rsp, 0x118; ret; 
0x00000000043915: add [rbp+0x27], dh; add rsp, 0x140; mov eax, r8d; pop rbx; ret; 
0x0000000013a67c: add [rbp+0x28], dh; add rsp, 0x28; pop rbx; pop rbp; ret; 
0x000000001365fe: add [rbp+0x28], dh; add rsp, 0x38; ret; 
0x000000000d2502: add [rbp+0x29], al; ret far; 
0x000000000d276d: add [rbp+0x29], al; ret; 
0x000000000d1068: add [rbp+0x29], dh; add rsp, 0x28; ret; 
0x000000000c9eb6: add [rbp+0x29dd75db], al; ret; 
0x00000000149593: add [rbp+0x2c], dh; add rsp, 0x10; pop rbx; ret; 
0x0000000012b6af: add [rbp+0x2e], dh; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000051b19: add [rbp+0x30], dh; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000015c9e1: add [rbp+0x30], dh; add rsp, 0x18; ret; 
0x000000001462f4: add [rbp+0x310f75c0], al; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x5d], bl; ret; 
0x000000000c05c9: add [rbp+0x31], al; imul cl; ret; 
0x000000000d009f: add [rbp+0x31], al; in al, 0x4c; mov eax, esp; pop r12; ret; 
0x000000000be5dd: add [rbp+0x31], al; jmp qword ptr [rdi+rax*8]; 
0x0000000009a52f: add [rbp+0x31], al; rcr byte ptr [rbp+0x41], 0x5c; mov rax, r8; pop r13; ret; 
0x00000000099cbf: add [rbp+0x31], al; rcr byte ptr [rbx+0x5d], 0x4c; mov eax, eax; pop r12; ret; 
0x0000000013f00f: add [rbp+0x31], al; rol byte ptr [rcx+rcx*4-0x30], cl; ret; 
0x000000000a0b30: add [rbp+0x31], al; ror byte ptr [rcx-0x39], cl; ret; 
0x000000000d4ad6: add [rbp+0x31], al; ror byte ptr [rcx-0x3f76b3fe], 0x48; add esp, 0x8; ret; 
0x000000000980c6: add [rbp+0x31], al; shl byte ptr [rdi+rax*8], 0xc; add [rax], al; add [rcx+rcx*4-0x40], cl; ret; 
0x000000000cd088: add [rbp+0x31], al; shr cl, 0x38; idiv bh; jmp qword ptr [rsi+0xf]; 
0x000000000c05f5: add [rbp+0x31], al; shr cl, 0x73; idiv bh; jmp qword ptr [rsi+0xf]; 
0x0000000015ccd8: add [rbp+0x31], dh; add rsp, 0x10; pop rbp; ret; 
0x00000000149631: add [rbp+0x31], dh; add rsp, 0x10; pop rbx; ret; 
0x000000000bd355: add [rbp+0x31], eax; shr byte ptr [rdx], 0x4c; lea ecx, [rsp+0x18]; call r13; 
0x0000000017dd9b: add [rbp+0x32], esi; mov rax, [rcx]; mov [rdx], rax; mov rax, rdi; ret; 
0x0000000015d0df: add [rbp+0x33], dh; add rsp, 0x190; mov rax, r8; pop rbp; ret; 
0x000000001475fe: add [rbp+0x34], dh; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000244b8: add [rbp+0x35], dh; add rsp, 0x38; pop rbx; pop rbp; ret; 
0x000000000436f0: add [rbp+0x35], dh; add rsp, 0x98; pop rbp; pop r12; ret; 
0x000000000de772: add [rbp+0x35], dh; add rsp, 0xa8; pop rbp; pop r12; ret; 
0x00000000115973: add [rbp+0x37], dh; add rsp, 0x68; ret; 
0x0000000015f933: add [rbp+0x38], dh; add rsp, 0x58; ret; 
0x000000000c9f12: add [rbp+0x391974db], al; ret; 
0x000000000ca007: add [rbp+0x391c74db], al; ret; 
0x0000000013f057: add [rbp+0x39], al; ret far; 
0x000000001970ad: add [rbp+0x39], cl; ret; 
0x0000000005506d: add [rbp+0x3], dh; push r10; ret; 
0x00000000116b97: add [rbp+0x3b], dh; add rsp, 0x38; ret; 
0x00000000116c66: add [rbp+0x3c], dh; add rsp, 0x38; ret; 
0x0000000015fc8c: add [rbp+0x3d], dh; add rsp, 0x38; ret; 
0x00000000155cb0: add [rbp+0x3f], dh; add rsp, 0x10; pop rbx; ret; 
0x00000000149020: add [rbp+0x40], dh; add rsp, 0x10; pop rbx; ret; 
0x0000000011f25e: add [rbp+0x411d75c0], al; mov ecx, 0x8; mov eax, 0x119; syscall; 
0x00000000112a5a: add [rbp+0x413175c0], al; mov eax, 0x8; mov rdx, r12; mov eax, 0x10f; syscall; 
0x0000000009b37e: add [rbp+0x41], bl; pop rsp; pop r13; jmp rax; 
0x0000000006347e: add [rbp+0x41], bl; pop rsp; pop r13; pop r14; ret; 
0x00000000060f3d: add [rbp+0x41], bl; pop rsp; pop r13; ret; 
0x000000000436f9: add [rbp+0x41], bl; pop rsp; ret; 
0x000000001561d0: add [rbp+0x41], dh; add rsp, 0x10; pop rbx; ret; 
0x0000000009922e: add [rbp+0x41], dh; add rsp, 0x40; pop rbp; ret; 
0x000000000e3695: add [rbp+0x41], dh; mov rbx, [rbp-0x8]; leave; ret; 
0x00000000155d80: add [rbp+0x42], dh; add rsp, 0x10; pop rbp; ret; 
0x000000001571b0: add [rbp+0x42], dh; add rsp, 0x10; pop rbx; ret; 
0x0000000004325f: add [rbp+0x42], dh; mov eax, r9d; add rsp, 0x148; ret; 
0x00000000129597: add [rbp+0x440f45c9], eax; ror dword ptr [rax-0x7d], 0x1; ret; 
0x00000000129642: add [rbp+0x440f45f6], eax; ret far; 
0x0000000011454e: add [rbp+0x451d75c0], al; xor eax, eax; mov eax, 0x127; syscall; 
0x0000000011460e: add [rbp+0x451d75c0], al; xor eax, eax; mov eax, 0x128; syscall; 
0x000000000e2d0e: add [rbp+0x451d75c0], al; xor eax, eax; mov eax, 0xf7; syscall; 
0x0000000012054e: add [rbp+0x451d75c0], al; xor ecx, ecx; xor r8d, r8d; mov eax, 0x2c; syscall; 
0x0000000012032e: add [rbp+0x451d75c0], al; xor ecx, ecx; xor r8d, r8d; mov eax, 0x2d; syscall; 
0x0000000013f0a7: add [rbp+0x45ac74c9], eax; cmp ebx, ecx; jg short 0x000000000013f066; mov byte ptr [r10], 0x0; ret; 
0x00000000156430: add [rbp+0x46], dh; add rsp, 0x10; pop rbx; ret; 
0x0000000013c81c: add [rbp+0x46], dh; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x00000000121132: add [rbp+0x46], dh; add rsp, 0x58; ret; 
0x000000001133fa: add [rbp+0x46], dh; add rsp, 0x68; ret; 
0x00000000113489: add [rbp+0x47], dh; add rsp, 0x18; ret; 
0x00000000113541: add [rbp+0x47], dh; add rsp, 0x58; ret; 
0x0000000015fa2a: add [rbp+0x47], dh; add rsp, 0x68; ret; 
0x0000000010dc1e: add [rbp+0x47], esi; mov eax, 0x10c; syscall; 
0x0000000014aedf: add [rbp+0x480c74d2], al; add esp, 0x8; pop rbx; pop rbp; ret; 
0x0000000009f889: add [rbp+0x481275c0], al; lea eax, [rip+0x14f6cb]; mov [rip+0x14f6ac], rax; ret; 
0x00000000121b06: add [rbp+0x481574db], al; movsxd ebx, ebx; mov [rip+0xca84b], rbx; pop rbx; ret; 
0x0000000009441f: add [rbp+0x481674c0], al; mov eax, [rip+0x15cfa5]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000945a9: add [rbp+0x481a74c0], al; mov eax, [rip+0x15ce5b]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000094579: add [rbp+0x481a74c0], al; mov eax, [rip+0x15ce83]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000094549: add [rbp+0x481a74c0], al; mov eax, [rip+0x15ceab]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000094519: add [rbp+0x481a74c0], al; mov eax, [rip+0x15ced3]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000944e9: add [rbp+0x481a74c0], al; mov eax, [rip+0x15cefb]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000944b9: add [rbp+0x481a74c0], al; mov eax, [rip+0x15cf23]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000094489: add [rbp+0x481a74c0], al; mov eax, [rip+0x15cf4b]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000094459: add [rbp+0x481a74c0], al; mov eax, [rip+0x15cf73]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000943e9: add [rbp+0x481a74c0], al; mov eax, [rip+0x15cfa3]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000943b9: add [rbp+0x481a74c0], al; mov eax, [rip+0x15cfcb]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000094389: add [rbp+0x481a74c0], al; mov eax, [rip+0x15cff3]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000094359: add [rbp+0x481a74c0], al; mov eax, [rip+0x15d01b]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000094329: add [rbp+0x481a74c0], al; mov eax, [rip+0x15d043]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000942f9: add [rbp+0x481a74c0], al; mov eax, [rip+0x15d06b]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000942c9: add [rbp+0x481a74c0], al; mov eax, [rip+0x15d093]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000094299: add [rbp+0x481a74c0], al; mov eax, [rip+0x15d0bb]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000094269: add [rbp+0x481a74c0], al; mov eax, [rip+0x15d0e3]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000094239: add [rbp+0x481a74c0], al; mov eax, [rip+0x15d10b]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000094209: add [rbp+0x481a74c0], al; mov eax, [rip+0x15d133]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000941d9: add [rbp+0x481a74c0], al; mov eax, [rip+0x15d15b]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000160b59: add [rbp+0x481a74c0], al; mov eax, [rip+0x90863]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000160b29: add [rbp+0x481a74c0], al; mov eax, [rip+0x9088b]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000160af9: add [rbp+0x481a74c0], al; mov eax, [rip+0x908b3]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000160ac9: add [rbp+0x481a74c0], al; mov eax, [rip+0x908db]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000160a99: add [rbp+0x481a74c0], al; mov eax, [rip+0x90903]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000160a69: add [rbp+0x481a74c0], al; mov eax, [rip+0x9092b]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009e324: add [rbp+0x485774c0], al; add esp, 0x8; pop rbp; pop r12; ret; 
0x00000000146b6d: add [rbp+0x486e74c0], al; mov eax, [rbx+0x20]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x000000001476d7: add [rbp+0x489374c0], al; mov eax, [rbp+0x8]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x000000001476b3: add [rbp+0x48b774c0], al; mov eax, [rbp+0x8]; mov rdi, rbp; mov qword ptr [rsp], 0x0; call qword ptr [rax+0x20]; 
0x0000000010f334: add [rbp+0x49], dh; add rsp, 0x130; pop rbp; ret; 
0x000000001135df: add [rbp+0x49], dh; add rsp, 0x58; ret; 
0x000000001155d8: add [rbp+0x4a], dh; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000d4aba: add [rbp+0x4c1175c0], al; mov eax, eax; add rsp, 0x8; ret; 
0x0000000009a4c8: add [rbp+0x4c], bl; mov eax, eax; pop r12; pop r13; ret; 
0x0000000009b65e: add [rbp+0x4c], bl; mov esi, esp; pop r12; pop r13; jmp rax; 
0x000000001562ef: add [rbp+0x4e], dh; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000015fbc3: add [rbp+0x4e], dh; add rsp, 0x68; ret; 
0x0000000016086b: add [rbp+0x51], dh; add rsp, 0x110; mov eax, r12d; pop r12; ret; 
0x0000000005b089: add [rbp+0x51], dh; add rsp, 0x28; pop rbx; pop rbp; ret; 
0x000000000df43e: add [rbp+0x52], dh; add rsp, 0x38; ret; 
0x000000001029d0: add [rbp+0x53], dh; add rsp, 0x38; ret; 
0x0000000013ccca: add [rbp+0x54], dh; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000004411f: add [rbp+0x589ff42], cl; jg short 0x00000000000440a7; sbb al, [rax]; mov eax, edx; ret; 
0x00000000042bc4: add [rbp+0x5], dh; add rsp, 0x18; ret; 
0x00000000047472: add [rbp+0x5], dh; add rsp, 0x28; ret; 
0x0000000013669b: add [rbp+0x5], dh; add rsp, 0x38; ret; 
0x00000000155bb5: add [rbp+0x5], dh; add rsp, 0x48; ret; 
0x00000000153904: add [rbp+0x5], dh; add rsp, 0x78; ret; 
0x00000000051c97: add [rbp+0x5a], dh; add rsp, 0x38; pop rbx; pop rbp; ret; 
0x000000001149be: add [rbp+0x5a], dh; add rsp, 0x38; ret; 
0x00000000051bc9: add [rbp+0x5f], dh; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000d11ca: add [rbp+0x61], dh; add rsp, 0xe0; mov eax, r8d; pop rbx; ret; 
0x000000000e452e: add [rbp+0x62], dh; add rsp, 0x38; ret; 
0x0000000010d35f: add [rbp+0x6], dh; add rsp, 0x10; pop rbp; ret; 
0x00000000157b79: add [rbp+0x6], dh; add rsp, 0x10; pop rbx; ret; 
0x000000000d029c: add [rbp+0x6], dh; add rsp, 0x40; pop rbp; ret; 
0x00000000151c0b: add [rbp+0x6c], dh; add rsp, 0x30; pop rbx; ret; 
0x000000000e163a: add [rbp+0x6f], dh; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x00000000151ac4: add [rbp+0x6f], dh; sub rsp, 0xffffffffffffff80; mov eax, r8d; pop rbp; ret; 
0x000000001522a2: add [rbp+0x71], dh; add rsp, 0x10; mov eax, r8d; pop r12; ret; 
0x00000000151994: add [rbp+0x73], dh; add rsp, 0x10; pop r12; ret; 
0x00000000114b13: add [rbp+0x75], dh; add rsp, 0x38; ret; 
0x000000001523e1: add [rbp+0x76], dh; add rsp, 0x28; pop rbx; pop r12; ret; 
0x0000000014738d: add [rbp+0x77], dh; add rsp, 0x28; pop rbx; pop rbp; ret; 
0x0000000013e390: add [rbp+0x7850fff], al; add al, 0x0; add [rcx-0x7d], al; ret; 
0x000000001448dc: add [rbp+0x7], dh; add rsp, 0x10; pop r12; ret; 
0x0000000004739e: add [rbp+0x7], dh; pop rbx; ret; 
0x00000000112a84: add [rbp+0x7f], dh; add rsp, 0x40; pop r12; ret; 
0x00000000042f1e: add [rbp+0x8], dh; add rsp, 0x148; ret; 
0x000000000d4315: add [rbp+0x8], dh; add rsp, 0x20; xor eax, eax; pop rbx; ret; 
0x0000000011bffa: add [rbp+0x8], dh; add rsp, 0x418; ret; 
0x00000000043781: add [rbp+0x8], dh; add rsp, 0x98; ret; 
0x00000000044451: add [rbp+0x8], dh; add rsp, 0xa8; ret; 
0x00000000052c34: add [rbp+0x8], dh; add rsp, 0xd8; ret; 
0x000000000e5115: add [rbp+0x8], dh; mov eax, 0x40; ret; 
0x00000000157aac: add [rbp+0x8], dh; movzx eax, al; add rsp, 0x18; ret; 
0x0000000010fbc2: add [rbp+0x8], dh; movzx eax, al; add rsp, 0x58; ret; 
0x00000000062872: add [rbp+0x9], dh; add rsp, 0x1010; pop rbp; ret; 
0x00000000157a38: add [rbp+0x9], dh; add rsp, 0x90; pop rbx; ret; 
0x000000000ddc84: add [rbp+0x9], dh; add rsp, 0xe0; pop rbx; ret; 
0x0000000011cb49: add [rbp+0xa], dh; add rsp, 0x88; pop rbx; pop rbp; ret; 
0x0000000012f5c7: add [rbp+0xb], dh; add rsp, 0x28; ret; 
0x00000000113b2c: add [rbp+0xc], dh; add rsp, 0x18; ret; 
0x00000000042381: add [rbp+0xc], dh; test eax, 0x7fffff; je short 0x0000000000042390; ret; 
0x0000000012de88: add [rbp+0xd], dh; add rsp, 0xd8; ret; 
0x00000000062e16: add [rbp+0xe], dh; add rsp, 0x18; ret; 
0x000000000e2e44: add [rbp+0xe], dh; add rsp, 0x28; pop rbx; pop rbp; ret; 
0x000000001521d2: add [rbp+0xe], dh; add rsp, 0x38; pop rbx; pop rbp; ret; 
0x00000000143cf9: add [rbp+0xf7175c0], al; mov cl, 0x15; ret far; 
0x00000000040aa7: add [rbp+0xf], al; mov dh, 0xd2; movsxd r10, [r11+r10*4]; add r10, r11; notrack jmp r10; 
0x0000000006461d: add [rbp+0xf], al; mov dh, 0xe4; movsxd rax, [rdi+r12*4]; add rax, rdi; notrack jmp rax; 
0x000000000f00e1: add [rbp+0xf], al; mov dh, 0xf6; movsxd rax, [rdx+r14*4]; add rax, rdx; notrack jmp rax; 
0x000000000564bf: add [rbp+0xf], cl; lodsd [rsi]; ret; 
0x000000000563af: add [rbp+0xf], cl; movsd [rdi], [rsi]; ret; 
0x000000000435f3: add [rbp+0xf], dh; add rsp, 0x118; ret; 
0x000000000935b6: add [rbp+0xf], dh; sub edx, [rax+0x18]; mov eax, [rdi+0x10]; sub eax, edx; ret; 
0x00000000042388: add [rbp+rax-0x3d], dh; nop [rax]; and esi, 0x80000000; movd xmm0, esi; ret; 
0x000000001135c0: add [rbp+rbp-0x48], dh; add [rcx], eax; add [rax], al; syscall; 
0x000000000d6ccf: add [rbp+rcx*4+0x14], eax; ret; 
0x00000000167131: add [rbp+rcx*4+0x1d], cl; add ax, 0x4900; movsxd edx, [rbx+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001695d1: add [rbp+rcx*4+0x1d], cl; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168df1: add [rbp+rcx*4+0x1d], cl; add rax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169871: add [rbp+rcx*4+0x1d], cl; mov dword ptr [rax+0x5], 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016de3e: add [rbp+rcx*4+0x1d], cl; mov edx, 0x49000501; movsxd edx, [rbx+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000167281: add [rbp+rcx*4+0x1d], cl; mul dword ptr [rbp+rax]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000b757f: add [rbp+rcx*4+0x1d], cl; or [rdi+rcx], edi; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000078d5a: add [rbp+rcx*4+0x1d], cl; sahf; mov edx, 0x77e90013; jrcxz 0x0000000000078d65; jmp qword ptr [rsi+0xf]; 
0x000000000bab1f: add [rbp+rcx*4+0x1d], cl; sbb eax, 0x49000f4a; movsxd ecx, [rbx+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000168f41: add [rbp+rcx*4+0x1d], cl; test dword ptr [rcx+0x5], 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000007a3e6: add [rbp+rcx*4+0x2c], cl; test [rax], eax; add [rax], al; add [rax+0x29], cl; ret; 
0x0000000015fddb: add [rbp+rcx*4+0x44], cl; and al, 0x30; call qword ptr [rax+0x1e0]; 
0x000000000d0e9d: add [rbp+rcx*4+0x44], cl; and al, 0x40; call qword ptr [rax+0x1e0]; 
0x00000000151bb9: add [rbp+rcx*4+0x4c], cl; and al, 0x14; call qword ptr [rax]; 
0x000000000bd35a: add [rbp+rcx*4+0x4c], cl; and al, 0x18; call r13; 
0x0000000015238f: add [rbp+rcx*4+0x4c], cl; and al, 0x1c; call qword ptr [rax]; 
0x000000001473ea: add [rbp+rcx*4+0x4c], cl; and al, 0x20; call qword ptr [rax]; 
0x00000000147138: add [rbp+rcx*4+0x4c], cl; and al, 0x2c; call qword ptr [rax]; 
0x000000000bd560: add [rbp+rcx*4+0x4c], ecx; and al, 0x20; call rbx; 
0x000000000bd05d: add [rbp+rcx*4+0x4c], ecx; and al, 0x28; call rbx; 
0x000000000bd05c: add [rbp+rcx*4+0x4c], rcx; and al, 0x28; call rbx; 
0x00000000192fbe: add [rbp+rcx*4+0x5f], cl; add [rcx-0x9], eax; ret; 
0x0000000015ae47: add [rbp+rcx*4+0x68], cl; add eax, ebp; call qword ptr [rcx]; 
0x00000000024ae1: add [rbp+rcx*4+0x7b], cl; jmp qword ptr [rbp+rax*2-0x75]; 
0x000000000bcda5: add [rbp+rcx*8+0x48], dh; lea eax, [rip+0xcedd1]; test byte ptr [rdx+0xcd], 0x1; je short 0x00000000000bcd75; ret; 
0x000000000a0495: add [rbp+rcx*8+0x48], dh; lea eax, [rip+0xe4731]; test byte ptr [rdx+0xcd], 0x1; je short 0x00000000000a0465; ret; 
0x000000000bcda4: add [rbp+rcx*8+0x48], sil; lea eax, [rip+0xcedd1]; test byte ptr [rdx+0xcd], 0x1; je short 0x00000000000bcd75; ret; 
0x000000000a0494: add [rbp+rcx*8+0x48], sil; lea eax, [rip+0xe4731]; test byte ptr [rdx+0xcd], 0x1; je short 0x00000000000a0465; ret; 
0x0000000013c358: add [rbp+rcx-0x7b], esi; shl byte ptr [rbp+0x19], 0x44; mov eax, eax; ret; 
0x00000000155d22: add [rbp-0x10], esi; mov rax, [rdi+0x8]; jmp qword ptr [rax]; 
0x000000000a1423: add [rbp-0x16], esi; ret; 
0x00000000094632: add [rbp-0x19], dh; and r11d, 0xffffffbb; cmp r11d, 0xa; je short 0x0000000000094640; ret; 
0x0000000005565b: add [rbp-0x1e], esi; mov eax, 0x1; ret; 
0x0000000006d7e4: add [rbp-0x297af040], al; add [rax], al; add [rcx-0x9], al; ret; 
0x00000000023a64: add [rbp-0x2c], dh; mov rdx, [rip+0x1c8422]; cmp [rdx+0xd8], rax; jne short 0x0000000000023a3b; ret; 
0x00000000156aaa: add [rbp-0x2d], esi; mov rax, [rbp+0x8]; mov rsi, rsp; mov rdi, rbp; call qword ptr [rax]; 
0x00000000156c0a: add [rbp-0x2d], esi; mov rax, [rdi+0x8]; mov rsi, rsp; call qword ptr [rax]; 
0x0000000009e8ea: add [rbp-0x2d], esi; mov rdi, rsi; call rax; 
0x0000000005ea5f: add [rbp-0x2dce00b9], cl; div ecx; add r8d, eax; mov eax, r8d; ret; 
0x00000000115fbc: add [rbp-0x2f], esi; ret; 
0x000000000df19a: add [rbp-0x39e58740], al; add eax, 0x1100e6; add [rbx+rcx*4+0x3d], ecx; ret; 
0x00000000023a74: add [rbp-0x3c], dh; ret; 
0x00000000098d42: add [rbp-0x3d], ebx; nop [rax]; ret; 
0x00000000024702: add [rbp-0x3f6af040], al; add rsp, 0x8; movzx eax, al; neg eax; ret; 
0x0000000014adcc: add [rbp-0x3f6af040], al; add rsp, 0x8; movzx eax, al; ret; 
0x00000000062e95: add [rbp-0x3f6af040], al; movzx eax, al; neg eax; pop rbp; ret; 
0x0000000004347b: add [rbp-0x41e78a40], al; or [rax], al; add [rax], al; mov eax, 0x82; syscall; 
0x0000000010deda: add [rbp-0x479e8a40], al; add [rcx], eax; add [rax], al; syscall; 
0x000000000e45bd: add [rbp-0x47d18a40], al; ja short 0x00000000000e45c5; add [rax], al; syscall; 
0x00000000114a3d: add [rbp-0x47d18a40], al; jb short 0x0000000000114a45; add [rax], al; syscall; 
0x000000000df41d: add [rbp-0x47d18a40], al; je short 0x00000000000df425; add [rax], al; syscall; 
0x000000000e450d: add [rbp-0x47d18a40], al; jne short 0x00000000000e4515; add [rax], al; syscall; 
0x0000000011499d: add [rbp-0x47d18a40], al; jno short 0x00000000001149a5; add [rax], al; syscall; 
0x000000000e423d: add [rbp-0x47d18a40], al; push 0x0; add [rax], al; syscall; 
0x0000000010c18e: add [rbp-0x47ea8a40], al; adc [rax], eax; add [rax], al; syscall; 
0x0000000011f4fe: add [rbp-0x47ea8a40], al; adc al, 0x1; add [rax], al; syscall; 
0x0000000010c23e: add [rbp-0x47ea8a40], al; adc al, [rax]; add [rax], al; syscall; 
0x0000000011f65e: add [rbp-0x47ea8a40], al; adc eax, [rcx]; add [rax], al; syscall; 
0x00000000120b0e: add [rbp-0x47ea8a40], al; and [rcx], al; add [rax], al; syscall; 
0x000000001206ae: add [rbp-0x47ea8a40], al; sub al, 0x0; add [rax], al; syscall; 
0x00000000120bbe: add [rbp-0x47ea8a40], al; sub eax, [rcx]; add [rax], al; syscall; 
0x00000000120c6e: add [rbp-0x47ea8a40], al; xor eax, [rcx]; add [rax], al; syscall; 
0x000000001144ab: add [rbp-0x47ef8a40], al; adc al, 0x0; add [rax], al; syscall; 
0x0000000011440b: add [rbp-0x47ef8a40], al; adc eax, [rax]; add [rax], al; syscall; 
0x0000000010e09b: add [rbp-0x47ef8a40], al; add [rax], eax; add [rax], al; syscall; 
0x0000000010e83b: add [rbp-0x47ef8a40], al; add eax, [rax]; add [rax], al; syscall; 
0x000000000e2e6b: add [rbp-0x47ef8a40], al; and al, [rax]; add [rax], al; syscall; 
0x00000000118a0b: add [rbp-0x47ef8a40], al; sbb al, [rax]; add [rax], al; syscall; 
0x000000001201cb: add [rbp-0x47ef8a40], al; sub al, [rax]; add [rax], al; syscall; 
0x000000001200fb: add [rbp-0x47ef8a40], al; sub eax, [rax]; add [rax], al; syscall; 
0x0000000011f72b: add [rbp-0x47ef8a40], al; xor [rcx], al; add [rax], al; syscall; 
0x000000000ed884: add [rbp-0x73], cl; jmp qword ptr [rsi+0x41]; 
0x0000000011adc6: add [rbp-0x75], cl; adc [r13-0x7b], r9b; shl byte ptr [rbp+0x7d], 0x49; mov edi, [rdi]; call rbx; 
0x00000000193537: add [rbp-0x76b23fb6], cl; ret far; 
0x00000000192f16: add [rbp-0x76b33fb6], cl; ret far; 
0x0000000010bf2c: add [rbp-0x76b7febd], cl; ret; 
0x00000000118739: add [rbp-0x76f98b01], al; cmp eax, 0xd3c04; ret; 
0x000000001146ec: add [rbp-0x77], al; ror dword ptr [rcx-0x77], 0xca; xor r8d, r8d; mov eax, 0x147; syscall; 
0x0000000011484c: add [rbp-0x77], al; ror dword ptr [rcx-0x77], 0xca; xor r8d, r8d; mov eax, 0x148; syscall; 
0x000000000ea017: add [rbp-0x77], cl; fmul st, qword ptr [rax-0x77]; ret far; 
0x000000000e3218: add [rbp-0x77], cl; loop 0x00000000000e3265; lea esi, [rip+0xd115a]; mov eax, 0x142; syscall; 
0x000000000aa77d: add [rbp-0x77], cl; ret far; 
0x0000000002ca34: add [rbp-0x77], cl; ret; 
0x0000000009d608: add [rbp-0x7acc812e], al; ror byte ptr [rdi], 0x84; ret; 
0x00000000155990: add [rbp-0x7b], al; in al, 0x74; ret; 
0x000000000ea27b: add [rbp-0x7b], al; ror byte ptr [rdi], 0x85; ret far; 
0x00000000028269: add [rbp-0x7b], al; ror byte ptr [rdi], 0x85; ret; 
0x0000000007755b: add [rbp-0x7b], al; ror byte ptr [rdi], 0x88; ret far; 
0x00000000049b6b: add [rbp-0x7b], al; test byte ptr [rdi], 0x84; ret; 
0x00000000064bc4: add [rbp-0x7b], eax; in al, 0x74; and al, [rbx-0x61f43]; call qword ptr [rax]; 
0x00000000125920: add [rbp-0x7cc48a40], al; sub eax, 0xca3e0; add [rcx+rcx*4-0x40], eax; add rsp, 0x8; ret; 
0x0000000015cb92: add [rbp-0x7cc68a40], al; sub eax, 0x94aba; add [rcx+rcx*4-0x40], ecx; pop rbp; ret; 
0x0000000006107d: add [rbp-0x7cc98a40], al; sub eax, 0x18d6c7; add [rcx+rcx*4-0x40], eax; pop rbx; ret; 
0x000000000de266: add [rbp-0x7cd28a40], al; imul eax, [rcx+rax], 0x5b; pop rbp; pop r12; ret; 
0x000000001460e3: add [rbp-0x7e], esi; ret; 
0x00000000118418: add [rbp-0x8f38b25], al; ret; 
0x00000000054367: add [rbp-0xa], dh; pop rbx; ret; 
0x000000000e4fc8: add [rbp], bh; add [rax+0x7f], bh; cmove rax, rdx; ret; 
0x000000000e4832: add [rbp], bh; add cl, ch; ret; 
0x00000000077ebb: add [rbx+0x13], esp; add [rax+0x63], cl; add al, 0x90; add rax, rbx; jmp rax; 
0x00000000184a5a: add [rbx+0x14840c0], al; clc; vzeroupper; ret; 
0x0000000017fe29: add [rbx+0x148b8104], cl; xchg ecx, eax; sub eax, edx; ret; 
0x0000000009fad8: add [rbx+0x14f4e53d], cl; add [rcx+rcx*4-0x12], cl; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000009fa90: add [rbx+0x14f52d3d], cl; add [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x00000000098d3b: add [rbx+0x153e3d2d], al; add [rcx], al; pop rbp; ret; 
0x0000000016dc42: add [rbx+0x157890e], ecx; mov [rdi], ecx; ret; 
0x000000000938d5: add [rbx+0x15aee705], al; add [rcx], al; pop rbx; ret; 
0x0000000008ac7f: add [rbx+0x1789cfe2], al; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000117c3f: add [rbx+0x17f01f8], al; ret; 
0x000000000f8783: add [rbx+0x1be01ea], eax; add [rax], al; add [rcx+0x39], al; ret; 
0x0000000009c21b: add [rbx+0x22], dh; lea rax, [rax-0x8]; ret; 
0x00000000061bf4: add [rbx+0x28907c8], al; mov eax, 0x1; ret; 
0x000000001578c0: add [rbx+0x28], ebp; pop rbx; pop rbp; pop r12; ret; 
0x0000000004ba80: add [rbx+0x29482404], cl; ret far; 
0x000000000baf9f: add [rbx+0x30178916], cl; in eax, dx; mov [rdi+0x4], ch; ret; 
0x00000000094d66: add [rbx+0x3101084f], al; rol bl, 0x90; mov eax, 0x16; ret; 
0x0000000013b542: add [rbx+0x31], bl; rcr byte ptr [rbp+0x41], 0x5c; pop r13; pop r14; ret; 
0x000000000900df: add [rbx+0x31], bl; rcr byte ptr [rbp+0x41], 0x5c; ret; 
0x00000000026045: add [rbx+0x31], ebx; rcr byte ptr [rbp+0x41], 0x5c; pop r13; pop r14; ret; 
0x000000000b852e: add [rbx+0x3568b0e], cl; mov [rdi], ecx; mov [rdi+0x3], edx; lea rax, [rdi+0x6]; ret; 
0x000000000b937e: add [rbx+0x3568b0e], cl; mov [rdi], ecx; mov [rdi+0x3], edx; lea rax, [rdi+0x7]; ret; 
0x000000000b6edf: add [rbx+0x3568b0e], cl; mov [rdi], ecx; mov [rdi+0x3], edx; ret; 
0x0000000013a68f: add [rbx+0x3b83b], cl; add [rax], al; syscall; 
0x0000000010fedf: add [rbx+0x41], bl; pop rsp; pop r13; pop r14; ret; 
0x0000000008257e: add [rbx+0x445b012f], al; mov eax, eax; pop rbp; pop r12; ret; 
0x00000000046b0a: add [rbx+0x44], ebx; mov eax, eax; pop rbp; pop r12; ret; 
0x000000000b934f: add [rbx+0x4568a0e], cl; mov [rdi], ecx; mov [rdi+0x4], dl; lea rax, [rdi+0x5]; ret; 
0x000000000b7baf: add [rbx+0x4568a0e], cl; mov [rdi], ecx; mov [rdi+0x4], dl; ret; 
0x0000000013bcf4: add [rbx+0x45740aff], al; cmp edi, 0xb; mov edx, 0x104; cmove eax, edx; ret; 
0x000000000cef6f: add [rbx+0x463b0447], cl; add al, 0xf; test [rcx+rax], esi; add [rax], al; ret; 
0x000000000cef9f: add [rbx+0x463b0c47], cl; or al, 0xf; test [rcx+rax], eax; add [rax], al; ret; 
0x000000001929ff: add [rbx+0x463bfc47], cl; cld; jne 0x0000000000192af0; ret; 
0x0000000010d8d6: add [rbx+0x47426f8], al; mov eax, r9d; ret; 
0x000000000b84ff: add [rbx+0x477880e], cl; mov [rdi], ecx; lea rax, [rdi+0x4]; ret; 
0x000000000b6ebf: add [rbx+0x477880e], cl; mov [rdi], ecx; ret; 
0x0000000017aa1e: add [rbx+0x48028901], cl; lea eax, [rdx+0x3]; ret; 
0x0000000017ddcf: add [rbx+0x48028901], cl; mov eax, edi; ret; 
0x00000000136f08: add [rbx+0x4804c244], cl; add esp, 0x8; pop rbx; pop rbp; ret; 
0x000000000434cd: add [rbx+0x48082444], cl; add esp, 0x18; ret; 
0x0000000014f748: add [rbx+0x48102454], cl; lea eax, [rip+0x642ac]; movsxd rdx, [rax+rdx*4]; add rdx, rax; notrack jmp rdx; 
0x0000000018ab2f: add [rbx+0x48178916], cl; lea eax, [rdi+0x3]; vzeroupper; ret; 
0x000000000b933e: add [rbx+0x48178916], cl; lea eax, [rdi+0x4]; ret; 
0x000000000bc12a: add [rbx+0x48], bl; cmove eax, edx; ret; 
0x0000000013c532: add [rbx+0x48], bl; movsxd edx, eax; add rdi, rdx; mov [r9], rdi; ret; 
0x000000000b773f: add [rbx+0x49178916], cl; sub eax, 0x4; lea rdi, [rdi+0x4]; jne 0x00000000000b7fa0; ret; 
0x00000000029b74: add [rbx+0x4be02e0], al; add [rax], al; add [rcx-0x77], al; ret; 
0x00000000099c03: add [rbx+0x4c], bl; mov eax, eax; pop rbp; pop r12; ret; 
0x0000000016859e: add [rbx+0x4e8bf956], cl; cld; mov [rdi-0x7], edx; mov [rdi-0x4], ecx; ret; 
0x0000000016839e: add [rbx+0x4e8bfa56], cl; cld; mov [rdi-0x6], edx; mov [rdi-0x4], ecx; ret; 
0x0000000016819e: add [rbx+0x4e8bfb56], cl; cld; mov [rdi-0x5], edx; mov [rdi-0x4], ecx; ret; 
0x0000000018f680: add [rbx+0x4f3bfc4e], cl; cld; jne 0x000000000018f8b6; xor eax, eax; ret; 
0x0000000004242c: add [rbx+0x560f0017], ah; add eax, 0x17a2e9; mulss xmm0, [rip+0x17af49]; ret; 
0x0000000016d58e: add [rbx+0x5789fc56], cl; cld; ret; 
0x000000000ec842: add [rbx+0x5b010447], al; pop rbp; pop r12; ret; 
0x0000000008b675: add [rbx+0x5d], bl; mov eax, r8d; pop r12; ret; 
0x00000000063604: add [rbx+0x5d], bl; pop r12; pop r13; pop r14; ret; 
0x000000000442cc: add [rbx+0x5d], bl; pop r12; pop r13; ret; 
0x000000000300b0: add [rbx+0x5d], bl; pop r12; ret; 
0x000000000832fe: add [rbx+0x5d], bl; ret; 
0x000000000de26e: add [rbx+0x5d], ebx; pop r12; ret; 
0x000000000ff896: add [rbx+0x634801c3], al; ret far; 
0x000000000edf98: add [rbx+0x634801ea], eax; ret; 
0x00000000146049: add [rbx+0x634807e6], al; add al, 0xb1; shr rdx, 0x3; add rax, rcx; notrack jmp rax; 
0x000000000ffda3: add [rbx+0x634c01c3], al; ret far; 
0x000000000b75b9: add [rbx+0x63], cl; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000015663f: add [rbx+0x748d4802], cl; and al, 0x10; mov [rsp+0x10], rax; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x000000001567cf: add [rbx+0x748d4806], cl; and al, 0x10; mov [rsp+0x10], rax; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x000000000467ba: add [rbx+0x75c08500], cl; psubsw mm1, [rdx]; idiv edi; jmp qword ptr [rsi+0x2e]; 
0x0000000010d128: add [rbx+0x87702fe], al; mov [rdi+0x10c], esi; xor eax, eax; ret; 
0x00000000150988: add [rbx+0x88b3], cl; add [rcx+rcx*4-0x1], cl; call qword ptr [rax+0x28]; 
0x0000000011a595: add [rbx+0x94901e0], eax; ret; 
0x000000000bc720: add [rbx+0xa7401f8], al; cmp eax, 0x2; je short 0x00000000000bc738; xor eax, eax; ret; 
0x00000000137a28: add [rbx+0xb8a082d], al; add [rcx], al; mov eax, r8d; pop rbp; ret; 
0x00000000121d2b: add [rbx+0xc], dh; mov rdx, [rip+0xcdd23]; add word ptr [rdx+rax*2], 0x1; ret; 
0x0000000013c355: add [rbx+0xd7401f8], al; test eax, eax; jne short 0x000000000013c378; mov eax, r8d; ret; 
0x0000000016dc3f: add [rbx+0xe8b0156], cl; mov [rdi+0x1], edx; mov [rdi], ecx; ret; 
0x0000000016dbcf: add [rbx+0xe8b0256], cl; mov [rdi+0x2], edx; mov [rdi], ecx; ret; 
0x0000000016db5f: add [rbx+0xe8b0356], cl; mov [rdi+0x3], edx; mov [rdi], ecx; ret; 
0x000000001025a4: add [rbx+0xecfdd0d], cl; add [rcx+0x5b595a0a], cl; ret; 
0x0000000014e086: add [rbx+rax*4+0x38], ah; add al, 0x75; ret; 
0x000000000e5226: add [rbx+rax*4+0x38], ah; sete al; movzx eax, al; lea rax, [rax+rax-0x1]; ret; 
0x0000000018f8ba: add [rbx+rax-0x9], bh; fadd st, st(3); ret; 
0x000000001500a5: add [rbx+rbp*4+0x48], esi; mov eax, [rsp+0x10]; mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x18]; 
0x000000000e17c5: add [rbx+rcx*4+0x25], cl; ret; 
0x0000000011f7e4: add [rbx+rcx*4+0x2], ah; cmp eax, 0x26; je short 0x000000000011f824; mov eax, r8d; ret; 
0x0000000012953d: add [rbx+rcx*4+0x35], cl; ret; 
0x000000000df1a5: add [rbx+rcx*4+0x3d], ecx; ret; 
0x000000000cafbb: add [rbx+rcx*4+0x4c], cl; and al, 0x10; call r14; 
0x00000000101965: add [rbx+rcx*4+0x63], cl; and [rax-0x7d], cl; ret; 
0x00000000045f1f: add [rbx+rcx*4+0x63], cl; or [rax-0x7d], cl; ret; 
0x0000000007b9db: add [rbx+rcx*4-0x5b], cl; clc; idiv bh; dec dword ptr [rbp+0x63]; ret; 
0x000000000531d7: add [rbx+rcx*4-0x74], cl; and al, 0xa0; add [rax], al; add [rcx+0x1], cl; ret; 
0x0000000010d8d3: add [rbx+rcx*4], ah; cmp eax, 0x26; je short 0x000000000010d8e0; mov eax, r9d; ret; 
0x00000000048336: add [rbx+rcx*4], ah; cmp eax, 0x4; je short 0x0000000000048300; mov eax, 0xffffffff; ret; 
0x000000000fecca: add [rbx+rcx*4], cl; mov [rax], rdi; mov rax, r8; ret; 
0x0000000015c167: add [rbx+rdi+0x3c], cl; and al, 0x72; mov [0xffff51e924048b49], al; jmp qword ptr [rsi+0xf]; 
0x000000000d4859: add [rbx-0x13f7b], cl; jmp far fword ptr [rbx]; 
0x000000000edf95: add [rbx-0x157cfe15], al; add [rax+0x63], ecx; ret; 
0x00000000155cdf: add [rbx-0x1976b7fa], cl; mov [rsp], rax; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x00000000156aa7: add [rbx-0x2c8afe08], al; mov rax, [rbp+0x8]; mov rsi, rsp; mov rdi, rbp; call qword ptr [rax]; 
0x00000000156c07: add [rbx-0x2c8afe08], al; mov rax, [rdi+0x8]; mov rsi, rsp; call qword ptr [rax]; 
0x000000000e6336: add [rbx-0x30373], al; call qword ptr [rax]; 
0x00000000150776: add [rbx-0x37f0efc0], cl; mov eax, eax; mov [rdx], rax; mov eax, 0x1; ret; 
0x000000001507ae: add [rbx-0x37f0f3c0], cl; mov eax, eax; mov [rdx], rax; mov eax, 0x1; ret; 
0x00000000150759: add [rbx-0x37f0fe18], al; mov [rdx], eax; mov eax, 0x1; ret; 
0x00000000116d7d: add [rbx-0x387c0f19], al; mov fs:[rax], edi; mov eax, 0xffffffff; ret; 
0x00000000094755: add [rbx-0x39], bl; add eax, 0x15cd2f; add [rax], eax; add [rax], al; ret; 
0x000000000878ff: add [rbx-0x3b7cb7ff], cl; or [rbx+0x5d], bl; ret; 
0x000000000bc1fe: add [rbx-0x3d], bl; mov eax, 0x10; pop rbx; ret; 
0x000000000bc1f7: add [rbx-0x3d], bl; mov eax, 0x20; pop rbx; ret; 
0x000000000bc1f0: add [rbx-0x3d], bl; mov eax, 0x30; pop rbx; ret; 
0x000000000bc1e9: add [rbx-0x3d], bl; mov eax, 0x40; pop rbx; ret; 
0x000000000bc20c: add [rbx-0x3d], bl; mov eax, 0x80; pop rbx; ret; 
0x000000000bc205: add [rbx-0x3d], bl; mov eax, 0x8; pop rbx; ret; 
0x000000001197fb: add [rbx-0x3d], bl; xchg ax, ax; mov rax, [rip+0xd2669]; mov dword ptr fs:[rax], 0x16; ret; 
0x00000000048339: add [rbx-0x3e8bfb08], al; mov eax, 0xffffffff; ret; 
0x0000000011cdaf: add [rbx-0x3f7ac7c0], cl; cmove eax, edx; ret; 
0x0000000014102a: add [rbx-0x3f7ae7c0], cl; jne short 0x0000000000141038; ret; 
0x0000000013f4bc: add [rbx-0x49f0fe0d], al; ret; 
0x0000000007dd30: add [rbx-0x4df43], cl; dec dword ptr [rcx-0x4e773]; jmp far fword ptr [rcx]; 
0x00000000077077: add [rbx-0x4df73], cl; inc dword ptr [rbp-0x557af037]; sbb al, [rax]; add [rcx-0x80], al; call qword ptr [rbx+0xf]; 
0x0000000007767b: add [rbx-0x4ef7b], cl; dec dword ptr [rcx-0x4f773]; jmp far fword ptr [rcx]; 
0x0000000007dd87: add [rbx-0x4f743], eax; jmp qword ptr [rax]; 
0x0000000007e778: add [rbx-0x50743], al; call qword ptr [rax]; 
0x0000000007dd58: add [rbx-0x50743], eax; call qword ptr [rax]; 
0x000000000776a1: add [rbx-0x51743], eax; call qword ptr [rax]; 
0x0000000006e0fc: add [rbx-0x51f4b], cl; jmp qword ptr [rcx+rcx*4+0x30]; 
0x0000000006c1ce: add [rbx-0x51f73], cl; jmp qword ptr [rcx+rcx*4+0x8]; 
0x00000000066d3a: add [rbx-0x5ff7b], cl; jmp qword ptr [rcx+rcx*4+0x2]; 
0x0000000006a74c: add [rbx-0x64f7b], ecx; dec dword ptr [rax-0x7d]; ret; 
0x0000000006620d: add [rbx-0x65f7b], cl; jmp far fword ptr [rbx]; 
0x00000000077b8e: add [rbx-0x67b7df18], al; movzx eax, byte ptr [r11+rax]; movsxd rax, [rdi+rax*4]; add rax, rbx; jmp rax; 
0x00000000077b30: add [rbx-0x67b7df18], al; movzx eax, byte ptr [r11+rax]; movsxd rax, [rsi+rax*4]; add rax, rbx; jmp rax; 
0x000000000ec4cf: add [rbx-0x688bfb1e], al; mov byte ptr [rdi+0x8], 0x1e; mov eax, 0x2; ret; 
0x000000001173f3: add [rbx-0x6af00008], al; ror byte ptr [rax-0x7d], 0xc4; or [rdi], cl; mov dh, 0xc0; ret; 
0x000000001955db: add [rbx-0x70f08b06], al; ret far; 
0x00000000192c6b: add [rbx-0x70f0c006], al; ret; 
0x0000000005c7b9: add [rbx-0x70f0fb08], al; cmp eax, 0xc7000015; test [rdi+rdi*8-0x1], esp; jmp qword ptr [rsi]; 
0x000000000f0b34: add [rbx-0x72bed3a7], cl; add [rcx], edi; ret; 
0x000000000473fc: add [rbx-0x75], bl; pop rax; ret; 
0x0000000017aa2f: add [rbx-0x75fd76ff], cl; add al, 0x88; add al, 0x48; lea eax, [rdx+0x4]; ret; 
0x000000001766ef: add [rbx-0x75fd76ff], cl; add al, 0x88; add al, 0x48; mov eax, edi; ret; 
0x00000000150736: add [rbx-0x7637f100], cl; ror byte ptr [rax-0x77], 0x2; mov eax, 0x1; ret; 
0x000000000c9f87: add [rbx-0x76b30383], cl; out 0x89, al; ret; 
0x0000000013c221: add [rbx-0x77], dl; ret far; 
0x0000000013c1a0: add [rbx-0x77bffe12], al; ja short 0x000000000013c1a9; ret; 
0x0000000009e47b: add [rbx-0x7a1217c8], cl; cli; jmp qword ptr [rsi+0x66]; 
0x0000000007cd1c: add [rbx-0x7af00008], al; jmp rax; 
0x0000000012c69b: add [rbx-0x7af0fe05], al; ret far; 
0x00000000102e77: add [rbx-0x7bf00001], al; ret; 
0x00000000024268: add [rbx-0x7bf00008], al; out 0x0, al; add [rax], al; add rsp, 0x98; ret; 
0x000000000bf213: add [rbx-0x7bf0cf03], al; ret; 
0x0000000003e1f7: add [rbx-0x7bf0fc08], al; xchg esi, eax; sbb eax, [rax]; add [rbx-0x7bf0fe08], al; ret; 
0x000000000ef98d: add [rbx-0x7bf0fd02], al; mov [rax+rax], eax; add [rax-0x7d], cl; ret; 
0x0000000003a9a3: add [rbx-0x7bf0fd08], al; call qword ptr [rcx]; 
0x0000000003e290: add [rbx-0x7bf0fe08], al; ret far; 
0x00000000039f5b: add [rbx-0x7bf0fe08], al; ret; 
0x0000000015d14f: add [rbx-0x7c99fa17], al; stc; add esi, [rsi+0x7]; ret; 
0x0000000012c557: add [rbx-0x7cb7e7ad], cl; ret; 
0x00000000141309: add [rbx-0x7cb7efab], cl; ret; 
0x000000001411d7: add [rbx-0x7cb7efbb], cl; ret; 
0x000000000e8867: add [rbx-0x7cb7f7bd], cl; ret; 
0x000000000bcabf: add [rbx-0x7cb7fb8d], cl; ret; 
0x00000000060cde: add [rbx-0x7cb7fbbd], cl; ret; 
0x000000001499eb: add [rbx-0x7cbe0320], al; jmp qword ptr [rbx+0xf]; 
0x00000000188fd3: add [rbx-0x7cf0fb06], al; ret; 
0x00000000026cf7: add [rbx-0x8b63], cl; jmp qword ptr [rcx+rcx*4+0x18]; 
0x0000000006dca0: add [rbx-0x9bef71d], al; ret; 
0x00000000035c9e: add [rbx-0xd363], cl; jmp qword ptr [rcx+rcx*4+0x18]; 
0x00000000035e90: add [rbx-0xd373], cl; jmp qword ptr [rcx+rcx*4+0x8]; 
0x00000000116f03: add [rbx], ah; mov rax, r8; mov byte ptr [rsi-0x1], 0x0; ret; 
0x0000000018d47e: add [rbx], al; add [rcx+0x63], cl; or al, 0x93; add rcx, r11; notrack jmp rcx; 
0x000000000935c7: add [rbx], ch; push rax; adc [rbx-0x2fd6efb9], cl; ret; 
0x000000000d008c: add [rbx], cl; add [rax], al; mov rax, r12; pop r12; ret; 
0x000000000d0189: add [rbx], cl; add [rax], al; xor eax, eax; add rsp, 0x8; ret; 
0x000000000a05fb: add [rbx], eax; str [rax-0x73]; adc eax, 0xf028a; cmove rax, rdx; ret; 
0x000000000ec417: add [rbx], edi; jl short 0x00000000000ec490; mov byte ptr [rdi+0x8], 0x1; mov eax, 0x1; ret; 
0x0000000012338f: add [rcx+0x104e23c1], cl; lea rcx, [rsi+rcx*4]; add eax, [rcx+rdx]; ret; 
0x00000000123136: add [rcx+0x107223c6], cl; lea rdx, [rdx+rsi*4]; add eax, [rdx+rcx]; ret; 
0x000000000551b8: add [rcx+0x146348c2], cl; xchg esi, eax; add rdx, rsi; cmp ecx, 0x2f; notrack jmp rdx; 
0x000000000db265: add [rcx+0x146348c6], cl; mov bh, 0x48; add edx, edi; notrack jmp rdx; 
0x000000000a8a56: add [rcx+0x146348d2], cl; xchg edi, eax; add rdx, rdi; notrack jmp rdx; 
0x000000000407a6: add [rcx+0x146348d2], cl; xchg esi, eax; add rdx, rsi; notrack jmp rdx; 
0x0000000012fbc6: add [rcx+0x18e8c1f8], cl; ret; 
0x000000000951a5: add [rcx+0x1], al; adc eax, [rbp+0x1]; sbb [r8+0x39], cl; ret; 
0x000000001496bc: add [rcx+0x1], cl; fsubr st, qword ptr [rcx]; fimul st, dword ptr [rcx+rcx*4-0x1a]; call qword ptr [rbp+0x40]; 
0x000000000531df: add [rcx+0x1], cl; ret; 
0x000000000440ff: add [rcx+0x1a80a615], ecx; add bl, al; nop [rax+rax]; mov eax, 0xffffffff; ret; 
0x0000000014d012: add [rcx+0x1b802], cl; add [rax], al; ret; 
0x000000000d4259: add [rcx+0x1eb850c7], al; add eax, 0xcac1fa89; add al, [rcx-0x70a3d706]; add dh, [rsi+0x3]; ret; 
0x00000000194c11: add [rcx+0x21], cl; ret; 
0x000000000d6c1b: add [rcx+0x29], al; ret; 
0x0000000007dd18: add [rcx+0x29], cl; ret far; 
0x0000000008976f: add [rcx+0x2b], cl; adc [r8+0x1], r9b; ret; 
0x000000001190a2: add [rcx+0x312b0102], cl; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x5d], bl; ret; 
0x0000000017aa61: add [rcx+0x3418b02], ecx; mov [rdx+0x3], eax; lea rax, [rdx+0x6]; ret; 
0x000000000b3a86: add [rcx+0x3418b02], ecx; mov [rdx+0x3], eax; mov rax, rdi; ret; 
0x000000001786df: add [rcx+0x3518911], cl; ret; 
0x0000000002c16b: add [rcx+0x3948fc51], cl; ret; 
0x000000000f878b: add [rcx+0x39], al; ret; 
0x0000000005f39b: add [rcx+0x39], cl; ret; 
0x00000000024161: add [rcx+0x39], cl; xlat [rbx]; je short 0x0000000000024177; call rax; 
0x000000000a0ba6: add [rcx+0x39], ecx; ret; 
0x00000000160ba2: add [rcx+0x3eb8c7], cl; add [rax], al; syscall; 
0x0000000015d05f: add [rcx+0x415d5bd8], cl; pop rsp; pop r13; pop r14; ret; 
0x0000000017aa41: add [rcx+0x418b6602], ecx; add al, 0x66; mov [rdx+0x4], eax; lea rax, [rdx+0x5]; ret; 
0x000000000b3a66: add [rcx+0x418b6602], ecx; add al, 0x66; mov [rdx+0x4], eax; mov rax, rdi; ret; 
0x0000000017aa31: add [rcx+0x4418a02], ecx; mov [rdx+0x4], al; lea rax, [rdx+0x4]; ret; 
0x000000000b3a46: add [rcx+0x4418a02], ecx; mov [rdx+0x4], al; mov rax, rdi; ret; 
0x00000000109088: add [rcx+0x46348ea], cl; xchg ecx, eax; add rax, rcx; notrack jmp rax; 
0x000000000e4ae0: add [rcx+0x46348f6], cl; mov dl, 0x48; add eax, edx; notrack jmp rax; 
0x0000000010115b: add [rcx+0x46348ff], cl; mov edx, 0x3ed00148; jmp rax; 
0x000000000a8b13: add [rcx+0x46349d0], cl; or byte ptr [rcx+rax-0x40], 0x3e; jmp rax; 
0x00000000042ffe: add [rcx+0x48050fc8], cl; mov edi, eax; mov eax, 0xba; syscall; 
0x0000000011f0bd: add [rcx+0x4c082474], cl; mov [rsp+0x20], eax; mov [rsp+0x28], r9; movaps [rsp+0x10], xmm0; syscall; 
0x000000000b7ebf: add [rcx+0x57896617], cl; add al, 0xc3; nop [rax+rax]; mov [rdi-0x1], rdx; ret; 
0x0000000016867c: add [rcx+0x5], dl; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001025aa: add [rcx+0x5b595a0a], cl; ret; 
0x00000000034725: add [rcx+0x5c], al; pop r13; pop r14; pop r15; jmp rax; 
0x000000001191b8: add [rcx+0x5c], al; pop r13; ret; 
0x0000000012cfc3: add [rcx+0x5c], al; pop rbp; ret; 
0x000000000dd42b: add [rcx+0x5d], al; pop r14; jmp rax; 
0x0000000011917f: add [rcx+0x5d], bl; pop r12; pop r13; ret; 
0x00000000165eee: add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000740be: add [rcx+0x63], cl; add al, 0x86; add rax, r14; notrack jmp rax; 
0x0000000018d480: add [rcx+0x63], cl; or al, 0x93; add rcx, r11; notrack jmp rcx; 
0x000000000b6d38: add [rcx+0x63], cl; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000cd84a: add [rcx+0x63], cl; ret; 
0x0000000010cc34: add [rcx+0x63], ecx; add al, 0x84; add rax, r12; notrack jmp rax; 
0x000000000ff2ec: add [rcx+0x6c0f66d0], cl; ret; 
0x00000000114ae6: add [rcx+0x75c085fe], cl; xor edi, [rdx-0x1]; mov edi, 0xffffffff; mov eax, 0x75; syscall; 
0x00000000114bb6: add [rcx+0x75c085fe], cl; xor edi, [rdx-0x1]; mov edi, 0xffffffff; mov eax, 0x77; syscall; 
0x000000000d6b81: add [rcx+0x76bc3], al; add [rdi], cl; ret; 
0x0000000011a598: add [rcx+0x9], ecx; ret; 
0x000000000a897e: add [rcx+0xc6349c1], cl; mov [rcx+rax-0x37], ecx; notrack jmp rcx; 
0x0000000010c95b: add [rcx+0xe82484], cl; add [rax], al; mov eax, 0xe; syscall; 
0x000000001506e8: add [rcx+0xf], al; adc [rax+0x20], edx; ret; 
0x0000000014fdc5: add [rcx+0xf], al; adc [rax+0x8], eax; ret; 
0x0000000005b3ef: add [rcx+0xf], al; mov dh, 0x43; add [rax+rax*8-0x7cb6f78c], eax; ret; 
0x000000000eb78f: add [rcx+0xf], al; mov dh, 0x43; add cl, [rcx-0x7d]; ret; 
0x00000000157c89: add [rcx+0xf], eax; xchg esp, eax; ror byte ptr [rax-0x7d], 0xc4; or [rcx+rcx*4-0x40], al; ret; 
0x0000000010d00e: add [rcx+0xf], ecx; ret; 
0x000000000df506: add [rcx+rax*2-0x77], esp; sbb [rcx+rcx*4-0x40], ecx; pop rbx; ret; 
0x0000000012129c: add [rcx+rax-0x3d], dh; mov rax, [rdi]; mov [rdx], rax; mov eax, 0x1; ret; 
0x0000000012dec3: add [rcx+rbp*8], al; mov dh, 0x71; cmc; call qword ptr [rax-0x18]; 
0x0000000012dec2: add [rcx+rbp*8], r8b; mov dh, 0x71; cmc; call qword ptr [rax-0x18]; 
0x00000000106f8a: add [rcx+rbx*2+0x5b], dh; xor eax, eax; pop rbp; pop r12; ret; 
0x0000000004724f: add [rcx+rcx*2-0x75], ah; add al, 0x24; lock add qword ptr [rax+0x460], 0x1; lea rdi, [rbp+0x908]; call qword ptr [rbp+0xf10]; 
0x00000000118411: add [rcx+rcx*4+0x25], al; je short 0x0000000000118425; add [rbp-0x8f38b25], al; ret; 
0x0000000011adfc: add [rcx+rcx*4+0x44], cl; and al, 0x8; mov rdi, [r8]; call rbx; 
0x00000000097a03: add [rcx+rcx*4+0x44], cl; and al, 0x8; xor edi, edi; call qword ptr [rax]; 
0x00000000097595: add [rcx+rcx*4+0x5c], cl; and al, 0x18; mov rdi, r13; mov [rsp+0x10], r10; call qword ptr [rax]; 
0x000000000a89d6: add [rcx+rcx*4+0x7], al; add rax, rdi; ret; 
0x000000000a8768: add [rcx+rcx*4+0x7], cl; mov rax, r12; pop r12; ret; 
0x00000000154b18: add [rcx+rcx*4-0x11], cl; call qword ptr [rax+0x28]; 
0x0000000004713b: add [rcx+rcx*4-0x11], cl; mov eax, 0xca; syscall; 
0x0000000009e0ea: add [rcx+rcx*4-0x11], cl; mov rdx, rbp; mov rsi, r12; call rax; 
0x000000000d096a: add [rcx+rcx*4-0x12], cl; call rbp; 
0x00000000083e01: add [rcx+rcx*4-0x12], cl; mov edi, 0x1; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000001215a8: add [rcx+rcx*4-0x12], cl; mov edi, r12d; mov [rbp-0x830], rax; mov eax, r14d; syscall; 
0x0000000004494e: add [rcx+rcx*4-0x12], cl; mov rdi, r14; mov rdx, r12; call rbp; 
0x00000000083bf4: add [rcx+rcx*4-0x12], cl; mov rdi, r15; call qword ptr [r14+0x38]; 
0x0000000008f32e: add [rcx+rcx*4-0x12], cl; mov rdi, rbx; call qword ptr [rbp+0x70]; 
0x0000000009fade: add [rcx+rcx*4-0x12], cl; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000015ff2a: add [rcx+rcx*4-0x12], cl; xor r9d, r9d; mov rdi, r12; lea r8, [rsp+0x30]; call qword ptr [rax+0x1e0]; 
0x0000000016034a: add [rcx+rcx*4-0x12], cl; xor r9d, r9d; xor r8d, r8d; mov rdi, r12; call qword ptr [rax+0x1e0]; 
0x0000000008eb7d: add [rcx+rcx*4-0x16], al; mov rsi, r12; mov rdi, rbp; call qword ptr [r15+0x80]; 
0x000000000bd8e6: add [rcx+rcx*4-0x16], cl; mov r9, [rsp+0x10]; mov rdi, r12; mov rsi, [rsp+0x18]; call rbx; 
0x0000000009d300: add [rcx+rcx*4-0x16], cl; mov rdi, r12; call rax; 
0x000000000756af: add [rcx+rcx*4-0x16], cl; mov rsi, r10; mov rdi, r15; call qword ptr [rax+0x38]; 
0x00000000074f4e: add [rcx+rcx*4-0x16], cl; mov rsi, r10; mov rdi, r15; call qword ptr [rbx+0x38]; 
0x00000000074cab: add [rcx+rcx*4-0x16], cl; mov rsi, r12; mov rdi, r15; call qword ptr [rax+0x38]; 
0x0000000008e75d: add [rcx+rcx*4-0x16], cl; mov rsi, r12; mov rdi, rbp; call qword ptr [r15+0x40]; 
0x0000000008f190: add [rcx+rcx*4-0x16], cl; mov rsi, r15; mov rdi, rbp; call qword ptr [rax+0x40]; 
0x000000000bd792: add [rcx+rcx*4-0x16], cl; xor r8d, r8d; mov rdi, r12; lea r9, [rsp+0x30]; call rbx; 
0x00000000084818: add [rcx+rcx*4-0x17], al; mov edx, r12d; mov rsi, rbp; mov rdi, rbx; call qword ptr [r14+0x48]; 
0x000000001381af: add [rcx+rcx*4-0x17], cl; mov edx, 0x400; mov rsi, r15; mov rdi, r12; call rbp; 
0x000000001214bc: add [rcx+rcx*4-0x19], al; mov eax, 0x14; syscall; 
0x00000000148ac1: add [rcx+rcx*4-0x19], cl; call qword ptr [rax+0x20]; 
0x00000000148aa5: add [rcx+rcx*4-0x19], cl; call qword ptr [rax+0x28]; 
0x00000000148c98: add [rcx+rcx*4-0x19], cl; call qword ptr [rbx]; 
0x0000000013811b: add [rcx+rcx*4-0x19], cl; call rbp; 
0x0000000013840b: add [rcx+rcx*4-0x19], cl; call rbx; 
0x00000000046b52: add [rcx+rcx*4-0x19], cl; mov eax, 0xca; syscall; 
0x0000000009680f: add [rcx+rcx*4-0x19], cl; neg rdi; call qword ptr [r13]; 
0x00000000160274: add [rcx+rcx*4-0x19], cl; push 0x2; xor r13d, r13d; call qword ptr [rax+0x1e0]; 
0x00000000035392: add [rcx+rcx*4-0x19], cl; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000015fdce: add [rcx+rcx*4-0x19], cl; xor r13d, r13d; lea rcx, [r10+0x398]; lea r8, [rsp+0x30]; call qword ptr [rax+0x1e0]; 
0x000000001509a3: add [rcx+rcx*4-0x1], cl; add dword ptr [rax], 0x1; mov rax, [rbx+0x60]; call qword ptr [rax+0x8]; 
0x0000000008954f: add [rcx+rcx*4-0x1], cl; call qword ptr [r13+0x80]; 
0x00000000087a96: add [rcx+rcx*4-0x1], cl; call qword ptr [rax+0x20]; 
0x0000000015098e: add [rcx+rcx*4-0x1], cl; call qword ptr [rax+0x28]; 
0x00000000089745: add [rcx+rcx*4-0x1], cl; call qword ptr [rbp+0x80]; 
0x0000000009c16a: add [rcx+rcx*4-0x1], cl; mov eax, 0xca; syscall; 
0x0000000009204a: add [rcx+rcx*4-0x1], ecx; movzx esi, byte ptr [rsi]; call qword ptr [rax+0x18]; 
0x000000000872d5: add [rcx+rcx*4-0x1a], al; mov rdi, r14; call qword ptr [rax+0x18]; 
0x0000000009c99f: add [rcx+rcx*4-0x1a], cl; call rax; 
0x000000000dd116: add [rcx+rcx*4-0x1a], cl; mov edi, ebp; mov eax, 0xe4; syscall; 
0x000000000dd096: add [rcx+rcx*4-0x1a], cl; mov edi, ebp; mov eax, 0xe5; syscall; 
0x0000000009dca2: add [rcx+rcx*4-0x1a], cl; mov rdi, rbp; call rax; 
0x00000000089475: add [rcx+rcx*4-0x1e], al; mov rsi, rbp; mov rdi, r15; call qword ptr [r14+0x80]; 
0x00000000112a64: add [rcx+rcx*4-0x1e], cl; mov eax, 0x10f; syscall; 
0x000000000833e3: add [rcx+rcx*4-0x1e], cl; mov rsi, r14; mov rdi, rbx; call qword ptr [r15+0x38]; 
0x00000000082dad: add [rcx+rcx*4-0x1e], cl; mov rsi, rbp; mov rdi, rbx; call qword ptr [r13+0x38]; 
0x00000000084e07: add [rcx+rcx*4-0x1e], cl; mov rsi, rbp; mov rdi, rbx; call qword ptr [r13+0x58]; 
0x00000000084c5f: add [rcx+rcx*4-0x1e], cl; mov rsi, rbp; mov rdi, rbx; call qword ptr [rax+0x58]; 
0x0000000009d748: add [rcx+rcx*4-0x20], al; pop r12; ret; 
0x000000001257b6: add [rcx+rcx*4-0x20], al; pop rbp; pop r12; pop r13; ret; 
0x0000000015e254: add [rcx+rcx*4-0x20], al; pop rbp; pop r12; ret; 
0x000000001141ab: add [rcx+rcx*4-0x20], al; pop rbx; pop rbp; pop r12; ret; 
0x000000000d0090: add [rcx+rcx*4-0x20], cl; pop r12; ret; 
0x00000000082c73: add [rcx+rcx*4-0x20], cl; pop rbp; pop r12; pop r13; ret; 
0x00000000062686: add [rcx+rcx*4-0x20], cl; pop rbp; pop r12; ret; 
0x000000001172b4: add [rcx+rcx*4-0x20], cl; pop rbx; pop rbp; pop r12; ret; 
0x0000000015e034: add [rcx+rcx*4-0x20], eax; pop rbp; pop r12; pop r13; ret; 
0x0000000004128d: add [rcx+rcx*4-0x28], cl; ret; 
0x0000000012887d: add [rcx+rcx*4-0x2], cl; mov edi, 0x2000006; mov rdx, rax; call qword ptr [rbx+0x28]; 
0x000000001381b7: add [rcx+rcx*4-0x2], cl; mov rdi, r12; call rbp; 
0x000000000e30e6: add [rcx+rcx*4-0x31], cl; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000012163c: add [rcx+rcx*4-0x32], cl; mov edi, r12d; mov eax, r14d; syscall; 
0x0000000008cf84: add [rcx+rcx*4-0x38], al; syscall; 
0x00000000038ca6: add [rcx+rcx*4-0x38], cl; pop rbx; pop rbp; pop r12; ret; 
0x00000000160bb2: add [rcx+rcx*4-0x39], cl; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000043330: add [rcx+rcx*4-0x3a], cl; mov eax, 0xe; syscall; 
0x000000000da968: add [rcx+rcx*4-0x3e], al; movsxd rax, [rcx+rdx*4]; add rax, rcx; notrack jmp rax; 
0x0000000011736e: add [rcx+rcx*4-0x40], al; add rsp, 0x8; ret; 
0x00000000113903: add [rcx+rcx*4-0x40], al; mov ebx, fs:[r10]; syscall; 
0x0000000015ce85: add [rcx+rcx*4-0x40], al; mov qword ptr [rdx], 0x0; ret; 
0x0000000002f734: add [rcx+rcx*4-0x40], al; pop rbp; pop r12; ret; 
0x00000000081a72: add [rcx+rcx*4-0x40], al; pop rbx; pop rbp; ret; 
0x0000000004391e: add [rcx+rcx*4-0x40], al; pop rbx; ret; 
0x00000000088074: add [rcx+rcx*4-0x40], al; ret; 
0x000000001176b2: add [rcx+rcx*4-0x40], cl; add rsp, 0x8; ret; 
0x0000000015d0e8: add [rcx+rcx*4-0x40], cl; pop rbp; ret; 
0x00000000099ce0: add [rcx+rcx*4-0x40], cl; pop rbx; pop rbp; pop r12; ret; 
0x000000001532de: add [rcx+rcx*4-0x40], cl; pop rbx; ret; 
0x000000000980d0: add [rcx+rcx*4-0x40], cl; ret; 
0x0000000018d2d2: add [rcx+rcx*4-0x40], cl; shr rax, 0x2; vzeroupper; ret; 
0x0000000018892f: add [rcx+rcx*4-0x40], cl; vzeroupper; ret; 
0x0000000012592b: add [rcx+rcx*4-0x40], eax; add rsp, 0x8; ret; 
0x00000000137a2f: add [rcx+rcx*4-0x40], eax; pop rbp; ret; 
0x000000000856b2: add [rcx+rcx*4-0x40], eax; pop rbx; pop rbp; pop r12; ret; 
0x00000000061088: add [rcx+rcx*4-0x40], eax; pop rbx; ret; 
0x00000000122c72: add [rcx+rcx*4-0x40], eax; ret; 
0x0000000013c608: add [rcx+rcx*4-0x40], ecx; mov byte ptr [r8+0x2], 0x0; ret; 
0x0000000015cb9d: add [rcx+rcx*4-0x40], ecx; pop rbp; ret; 
0x000000001091dd: add [rcx+rcx*4-0x4c], cl; and al, 0x80; add [rax], al; add [rax-0x7d], cl; ret; 
0x0000000009d9d9: add [rcx+rcx*4-0x6], cl; mov rsi, r14; mov rdi, r13; call rax; 
0x0000000013494c: add [rcx+rcx*4-0x6], cl; mov rsi, r14; mov rdi, rbx; call rax; 
0x000000000dee94: add [rcx+rcx*4-0x8], cl; call rax; 
0x0000000004695b: add [rcx+rcx*4-0x9], cl; mov eax, 0xca; syscall; 
0x00000000146a28: add [rcx+rcx*4-0xa], cl; add qword ptr [rbx+0x22a8], 0x1; mov rdi, rbp; call qword ptr [rax+0x18]; 
0x00000000128f40: add [rcx+rcx*4-0xa], cl; mov edi, 0x2000003; mov rdx, rax; call qword ptr [rbx+0x28]; 
0x000000000bdb86: add [rcx+rcx*4-0xe], cl; mov r9, [rsp+0x10]; mov rdi, r12; mov rsi, [rsp+0x18]; call rbx; 
0x000000000bde66: add [rcx+rcx*4-0xe], cl; mov r9, [rsp+0x18]; mov rdi, r12; mov rsi, [rsp+0x10]; call rbx; 
0x00000000045897: add [rcx+rcx*4-0xe], cl; mov rax, [rsp]; mov rsi, r12; mov rdi, r13; call rax; 
0x000000000bda94: add [rcx+rcx*4-0xe], cl; mov rdi, r12; xor r8d, r8d; lea r9, [rsp+0x28]; call rbx; 
0x000000000bdd73: add [rcx+rcx*4-0xe], cl; xor r8d, r8d; mov rdi, r12; lea r9, [rsp+0x30]; call rbx; 
0x0000000005ede0: add [rcx+rcx*4-0xf], cl; call qword ptr [rax+r8*8]; 
0x0000000014557e: add [rcx+rcx*8+0x7880cd75], eax; jmp far fword ptr [rsi]; 
0x0000000012dd1b: add [rcx+rcx*8-0x76b7578b], eax; clc; ret; 
0x0000000012dd1a: add [rcx+rcx*8-0x76b7578b], rax; clc; ret; 
0x000000000a88eb: add [rcx+rcx*8-0xec6f78c], eax; jne short 0x00000000000a88e0; ret; 
0x0000000008564e: add [rcx+rdi+0x5b], dh; mov eax, r8d; pop rbp; pop r12; ret; 
0x00000000119a91: add [rcx+rsi+0x48], dh; mov edi, ebp; xor esi, esi; call r12; 
0x0000000005d8fe: add [rcx-0x1177b], cl; jmp far fword ptr [rcx]; 
0x000000000db0c7: add [rcx-0x12f43], al; jmp far fword ptr [rax]; 
0x000000000f865b: add [rcx-0x17f7dbbc], cl; ret far; 
0x00000000047cc6: add [rcx-0x1e], al; jg short 0x0000000000047c57; adc [rcx-0x3f76bbea], cl; ret; 
0x000000000e5b05: add [rcx-0x3036b], cl; jmp qword ptr [rax+rcx*2-0x75]; 
0x0000000014d01f: add [rcx-0x39], al; add al, 0x1; add [rax], al; add [rax+0x1], bh; ret; 
0x00000000051478: add [rcx-0x39], cl; ret; 
0x000000000479f8: add [rcx-0x42], edi; xor eax, eax; ret; 
0x00000000043188: add [rcx-0x46], al; or [rax], al; add [rax], al; mov eax, 0xd; syscall; 
0x00000000054f62: add [rcx-0x46], al; or [rax], al; add [rax], al; mov eax, 0xe; syscall; 
0x0000000008cd6f: add [rcx-0x48], al; add [rax], eax; add [rax], al; mov eax, r8d; ret; 
0x0000000007cfd5: add [rcx-0x4af73], cl; jmp qword ptr [rax+rcx*2-0x75]; 
0x000000000768b0: add [rcx-0x4bf73], cl; jmp qword ptr [rax+rcx*2-0x75]; 
0x00000000076a35: add [rcx-0x55b4b], ecx; dec dword ptr [rax-0x55063]; dec dword ptr [rax-0x77]; ret far; 
0x0000000007bb01: add [rcx-0x5], al; jg short 0x000000000007bb18; test [rbp-0x7c000012], dh; ret; 
0x0000000002dc62: add [rcx-0x73], cl; add cl, [rax+0x39]; ret far; 
0x0000000002c120: add [rcx-0x73], cl; add r9b, [r8+0x39]; ret; 
0x00000000152ce7: add [rcx-0x73], cl; jb short 0x0000000000152cf4; mov rdi, rbp; call qword ptr [rdx+0x10]; 
0x00000000152f37: add [rcx-0x73], cl; jne short 0x0000000000152f44; mov rdi, rbp; call qword ptr [rax+0x10]; 
0x00000000035070: add [rcx-0x73], cl; mov ebp, 0x80; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000eb5da: add [rcx-0x73], ecx; push rbx; add [rcx-0x7f], ecx; ret; 
0x00000000144ae0: add [rcx-0x75], al; jge short 0x0000000000144ae5; call qword ptr [rsp+0x20]; 
0x000000000ffac7: add [rcx-0x75], al; or ecx, [rax+0x39]; ret far; 
0x000000000fa320: add [rcx-0x75], al; sub cl, [rbp-0xff7b]; jmp far fword ptr [rcx-0x101]; 
0x0000000014d09f: add [rcx-0x75], al; xor byte ptr [rax+rax-0x37f10000], 0x89; ror byte ptr [rax-0x77], 0x2; mov eax, 0x1; ret; 
0x000000000ecb2d: add [rcx-0x75], cl; adc [r8+0x63], r9b; ret; 
0x000000000457a3: add [rcx-0x75], cl; cmp al, 0x24; mov rdx, r14; mov rax, [rsp]; call rax; 
0x00000000146944: add [rcx-0x75], cl; cmp al, 0x24; mov rsi, rbp; mov rax, [rdi+0x38]; call qword ptr [rax+0x8]; 
0x000000000bcf8f: add [rcx-0x75], cl; cmp al, 0x24; movzx esi, bl; call rbp; 
0x0000000011a90a: add [rcx-0x75], cl; jge short 0x000000000011a90f; call rbx; 
0x0000000011a93a: add [rcx-0x75], cl; jge short 0x000000000011a93f; call rbx; 
0x0000000011a96a: add [rcx-0x75], cl; jge short 0x000000000011a96f; call rbx; 
0x00000000150472: add [rcx-0x75], cl; jo short 0x00000000001504c0; mov edi, ebp; call qword ptr [rax+0x20]; 
0x0000000008995c: add [rcx-0x75], cl; mov bh, 0x90; add [rax], al; add cl, ch; ret far; 
0x00000000119c44: add [rcx-0x75], cl; mov rax, [rsp+0x8]; mov rdi, r13; call rax; 
0x0000000011a9ca: add [rcx-0x75], cl; notrack call rbx; 
0x000000000ff975: add [rcx-0x75], cl; or [r9-0x75], cl; push rbx; adc [rax+0x63], cl; ret far; 
0x000000000fefe6: add [rcx-0x75], cl; or [r9-0x75], r9b; push rbp; adc [rax+0x63], cl; ret far; 
0x000000000fff06: add [rcx-0x75], cl; or [r9-0x75], r9b; push rdi; adc [rax+0x63], cl; ret far; 
0x000000000f2d3f: add [rcx-0x75], cl; sbb [r9], al; ret far; 
0x00000000157400: add [rcx-0x76b7d7b9], cl; ja short 0x0000000000157420; mov eax, r8d; ret; 
0x0000000013b43d: add [rcx-0x76b7f3a9], cl; ret; 
0x000000000b3a36: add [rcx-0x776b7fe], ecx; ret; 
0x00000000178511: add [rcx-0x776b7fe], ecx; sub r8, 0x4; lea rcx, [rdx+0x4]; jne 0x0000000000178810; ret; 
0x000000000951c9: add [rcx-0x77], al; imul esp, [rbx*2+0x10438941], 0x41; mov dword ptr [rbx+0x14], 0x0; ret; 
0x000000000d6c82: add [rcx-0x77], al; ret far; 
0x00000000023d43: add [rcx-0x77], al; ret; 
0x0000000010d616: add [rcx-0x77], al; ror byte ptr [rax-0x77], 0x1; ret far; 
0x0000000002c68d: add [rcx-0x77], al; xor ecx, [rcx-0x77]; ret far; 
0x00000000028917: add [rcx-0x77], cl; add ecx, [rax-0x77]; ror dword ptr [rax+0x39], 0x1; ret; 
0x000000000ff837: add [rcx-0x77], cl; dec dword ptr [rbp-0x77]; ret; 
0x00000000038e47: add [rcx-0x77], cl; fisttp word ptr [rax-0x7d], st; ret; 
0x0000000011cc79: add [rcx-0x77], cl; fmul st, dword ptr [rcx+rcx*4-0x40]; pop rbx; ret; 
0x000000001169de: add [rcx-0x77], cl; fsubp; ret far; 
0x0000000011c821: add [rcx-0x77], cl; jmp qword ptr [rax+rcx*2-0x75]; 
0x0000000009814a: add [rcx-0x77], cl; push rcx; or [rax+0x39], cl; ret; 
0x0000000002c7ac: add [rcx-0x77], cl; ret far; 
0x0000000007dd10: add [rcx-0x77], cl; ret; 
0x00000000078012: add [rcx-0x77], cl; rol bh, cl; test [rdx+rdi*8+0x1ffff], esi; add [rax], al; jmp rax; 
0x00000000078ac9: add [rcx-0x77], cl; sar bh, cl; loopne 0x0000000000078a60; mov r10, rdx; jmp rax; 
0x0000000015f52d: add [rcx-0x77], cl; sbb [r9-0x73], r9b; mov edi, 0x908; call qword ptr [r15+0xf10]; 
0x0000000008642f: add [rcx-0x77], ecx; push rax; sub [rax-0x78], al; cmp [rcx+rcx*4-0x38], al; ret; 
0x000000000745ad: add [rcx-0x77], ecx; push rdi; sub dh, al; add [rcx-0x7d], cl; ret; 
0x000000000570e0: add [rcx-0x77], ecx; push rsp; ret; 
0x00000000193750: add [rcx-0x77], ecx; ret far; 
0x0000000002fdd6: add [rcx-0x77cf7bd], ecx; std; je short 0x000000000002fdf8; pop rbx; ret; 
0x00000000053240: add [rcx-0x78], eax; add ecx, [rcx-0x7d]; ret; 
0x000000001970f1: add [rcx-0x7b], cl; ret; 
0x000000000d916d: add [rcx-0x7d], al; call far fword ptr [rdi+0xf]; 
0x00000000074e4e: add [rcx-0x7d], al; in al, dx; add [rax-0x8ff43], eax; jmp qword ptr [rax]; 
0x0000000005da0f: add [rcx-0x7d], al; in eax, dx; add [rax+0x39], ecx; ret; 
0x0000000007bab6: add [rcx-0x7d], al; out dx, eax; add [rax-0x93b43], eax; jmp qword ptr [rax]; 
0x0000000006c45e: add [rcx-0x7d], al; ret far; 
0x0000000013e398: add [rcx-0x7d], al; ret; 
0x00000000119cf0: add [rcx-0x7d], cl; ret far; 
0x00000000053c19: add [rcx-0x7d], cl; ret; 
0x000000000ddb59: add [rcx-0x7d], ecx; jmp qword ptr [rbp+rsi*2-0x38]; 
0x0000000002a06b: add [rcx-0x7d], ecx; ret; 
0x0000000007f510: add [rcx-0x7f], al; clc; fdivp st(7), st; call far fword ptr [rdi]; 
0x0000000006c44f: add [rcx-0x7f], al; ret far; 
0x000000000eb5de: add [rcx-0x7f], ecx; ret; 
0x0000000010b2ee: add [rcx-0x80], al; call far fword ptr [rdi+rcx-0x7b]; 
0x000000000fcc4c: add [rcx-0x80], al; call far fword ptr [rdi+rcx-0x7c]; 
0x00000000077085: add [rcx-0x80], al; call qword ptr [rbx+0xf]; 
0x00000000062907: add [rcx-0x80], al; jl short 0x0000000000062921; jmp far fword ptr [rdi]; 
0x0000000010b2ca: add [rcx-0x80], al; jmp qword ptr [rdi]; 
0x0000000010b2d4: add [rcx-0x80], al; jmp qword ptr [rdx]; 
0x000000000fd039: add [rcx-0x80], eax; call far fword ptr [rdi+0xf]; 
0x0000000015a6af: add [rcx-0x837b], cl; jmp far fword ptr [rax-0x7cc98aff]; 
0x0000000018854b: add [rcx-0x876b730], cl; bsr eax, eax; lea rax, [rdi+rax-0x20]; vzeroupper; ret; 
0x0000000012c4ff: add [rcx-0x877b], cl; dec dword ptr [rax-0x7d]; ret; 
0x0000000007af08: add [rcx-0x8ef63], cl; dec dword ptr [rax-0x77]; ret far; 
0x0000000006c6e9: add [rcx-0x9], al; ret; 
0x00000000192fc3: add [rcx-0x9], eax; ret; 
0x0000000015919f: add [rcx-0xa37b], cl; jmp far fword ptr [rax+0x412e7501]; 
0x000000001393dd: add [rcx-0xa], al; ret; 
0x0000000012fb37: add [rcx-0xda08], cl; inc dword ptr [rax]; ret; 
0x00000000149d05: add [rcx-0xdd6b7ff], cl; mov rbp, rdx; call qword ptr [rbx+0x10]; 
0x00000000095236: add [rcx], al; add [rax], al; add [rax-0x77], cl; add eax, 0x15704e; ret; 
0x0000000009520d: add [rcx], al; add [rax], al; add [rax-0x77], cl; add eax, 0x15706f; ret; 
0x000000000951ed: add [rcx], al; add [rax], al; add [rax-0x77], cl; add eax, 0x157087; ret; 
0x00000000148e36: add [rcx], al; add [rax], al; add [rax-0x77], cl; ret; 
0x0000000009d744: add [rcx], al; add [rax], al; add [rcx+rcx*4-0x20], al; pop r12; ret; 
0x00000000153eb0: add [rcx], al; add [rax], al; add [rdi], cl; adc [rsp+0xb8], ebp; call rax; 
0x000000000344bd: add [rcx], al; add [rax], al; and eax, esi; ret; 
0x00000000113cb7: add [rcx], al; add [rax], al; mov [rdi+0x16], ax; ret; 
0x000000000e5098: add [rcx], al; add [rax], al; mov eax, 0x20; cmove rax, rdx; ret; 
0x00000000116b72: add [rcx], al; add [rax], al; mov edi, 0xffffff9c; mov eax, 0x118; syscall; 
0x0000000013bd3a: add [rcx], al; add [rax], al; ret; 
0x000000000bb94f: add [rcx], al; add [rax], al; sub rax, rdx; ret; 
0x0000000015caf0: add [rcx], al; add rsp, 0x10; mov eax, r8d; pop rbp; ret; 
0x00000000137f74: add [rcx], al; add rsp, 0x20; mov eax, r8d; pop rbp; ret; 
0x00000000046c52: add [rcx], al; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000000d2941: add [rcx], al; add rsp, 0x8; ret; 
0x000000001135b9: add [rcx], al; cmp eax, 0x410000; je short 0x00000000001135f0; mov eax, 0x101; syscall; 
0x000000000a04a4: add [rcx], al; je short 0x00000000000a0465; ret; 
0x000000000bcdb4: add [rcx], al; je short 0x00000000000bcd75; ret; 
0x000000001135be: add [rcx], al; je short 0x00000000001135f0; mov eax, 0x101; syscall; 
0x0000000004725c: add [rcx], al; lea rdi, [rbp+0x908]; call qword ptr [rbp+0xf10]; 
0x0000000012592a: add [rcx], al; mov eax, r8d; add rsp, 0x8; ret; 
0x00000000137a2e: add [rcx], al; mov eax, r8d; pop rbp; ret; 
0x00000000061087: add [rcx], al; mov eax, r8d; pop rbx; ret; 
0x00000000102ab2: add [rcx], al; mov edx, 0x2; cmove eax, edx; ret; 
0x00000000131753: add [rcx], al; mov fs:[r8], r9d; add rsp, 0x18; ret; 
0x000000000dfc5d: add [rcx], al; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x000000000df505: add [rcx], al; mov fs:[r9], ebx; mov rax, r8; pop rbx; ret; 
0x000000001509a8: add [rcx], al; mov rax, [rbx+0x60]; call qword ptr [rax+0x8]; 
0x0000000015cb9c: add [rcx], al; mov rax, r8; pop rbp; ret; 
0x00000000146a32: add [rcx], al; mov rdi, rbp; call qword ptr [rax+0x18]; 
0x000000000341d8: add [rcx], al; movzx eax, ax; ret; 
0x0000000004762e: add [rcx], al; pop rbp; ret; 
0x000000000938db: add [rcx], al; pop rbx; ret; 
0x00000000083f71: add [rcx], al; ret; 
0x00000000046731: add [rcx], al; xor eax, eax; pop rbx; ret; 
0x00000000047004: add [rcx], al; xor esi, esi; mov rdi, r9; call r8; 
0x000000000328da: add [rcx], bh; jp short 0x0000000000032916; jbe short 0x00000000000328f7; mov rax, [rdx+rdi*8+0x40]; ret; 
0x000000000eb13f: add [rcx], bh; ret far; 
0x000000000c9e97: add [rcx], bh; ret; 
0x000000001158be: add [rcx], bl; rol byte ptr [rbx-0x3f7c0f20], 0x26; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000031604: add [rcx], ch; ret far; 
0x000000000ca027: add [rcx], ch; ret; 
0x000000000412e9: add [rcx], cl; add [rax], al; add [rax-0x1], bh; pop rbp; ret; 
0x00000000024721: add [rcx], cl; add [rax], al; add [rax-0x1], bh; ret; 
0x00000000041bd6: add [rcx], cl; ror byte ptr [rcx-0x24efdbbc], 0x1; insb [rdi], dx; and al, 0x8; ret; 
0x00000000038c1c: add [rcx], dh; call qword ptr [rax+0x480ab60f]; 
0x00000000026168: add [rcx], dh; div byte ptr [rcx]; jmp qword ptr [rsi+0xf]; 
0x0000000011cd3b: add [rcx], dh; fucomi st, st(3); or al, 0x8d; add [r8-0x7d], ecx; ret; 
0x00000000033e7f: add [rcx], dh; idiv byte ptr [rdi+0x1]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000008973e: add [rcx], dh; idiv byte ptr [rdx+0x1]; mov rdi, r15; call qword ptr [rbp+0x80]; 
0x0000000008ed06: add [rcx], dh; idiv byte ptr [rdx+0x1]; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x00000000089548: add [rcx], dh; idiv byte ptr [rdx+0x2]; mov rdi, r15; call qword ptr [r13+0x80]; 
0x00000000082254: add [rcx], dh; idiv byte ptr [rdx+0x2]; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x000000000445ec: add [rcx], dh; imul al; fadd st, qword ptr [rax+rax]; add rsp, 0x8; ret; 
0x000000000421a7: add [rcx], dh; leave; addsd xmm0, xmm0; mov [rdi], ecx; ret; 
0x000000001473e1: add [rcx], dh; leave; lea rdx, [rip+0xe7e5]; lea r9, [rsp+0x20]; call qword ptr [rax]; 
0x0000000008d90d: add [rcx], dh; rcr byte ptr [rbx+0x5d], 0x41; pop rsp; ret; 
0x000000001968e7: add [rcx], dh; rol byte ptr [rbp-0x7b], 0xc0; jne 0x0000000000196840; add rsp, 0x38; ret; 
0x00000000102acf: add [rcx], dh; rol byte ptr [rcx+0xc0fef9], 0x0; setne al; lea eax, [rax+rax*8+0x5]; ret; 
0x00000000117c37: add [rcx], dh; rol byte ptr [rdi+0xd7c1005], 0x0; cmp eax, 0x1; jg short 0x0000000000117c46; ret; 
0x00000000097cd0: add [rcx], dh; ror byte ptr [rax-0x73], 0x34; ret; 
0x0000000009ef69: add [rcx], dh; ror byte ptr [rax-0x77], 0x37; ret; 
0x0000000008f4f7: add [rcx], dh; ror byte ptr [rax-0x77], cl; out dx, al; mov rdi, rbx; call qword ptr [r12+0x80]; 
0x0000000008eaa1: add [rcx], dh; ror byte ptr [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x80]; 
0x0000000008eda3: add [rcx], dh; ror byte ptr [rax-0x77], cl; out dx, eax; call qword ptr [rbx+0x80]; 
0x000000000480a1: add [rcx], dh; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x5d], bl; ret; 
0x000000000bba02: add [rcx], dh; ror byte ptr [rax], cl; leave; cmove rax, rdx; ret; 
0x0000000018bcaf: add [rcx], dh; ror byte ptr [rbx+0x75163b17], 0xe4; ret; 
0x0000000018c6a0: add [rcx], dh; ror byte ptr [rbx+0xc3b170c], 0x16; jne short 0x000000000018c679; vzeroupper; ret; 
0x00000000029614: add [rcx], dh; ror byte ptr [rcx+rcx*4+0x5c], 0x24; sub [rcx-0x77], cl; ret; 
0x00000000089833: add [rcx], dh; ror byte ptr [rcx+rcx*4-0x1], cl; call qword ptr [rbx+0x80]; 
0x0000000010d3cf: add [rcx], dh; ror byte ptr [rcx+rcx*4-0x1a], cl; mov rdi, rbp; mov eax, 0x135; syscall; 
0x00000000043029: add [rcx], dh; ror byte ptr [rcx+rcx*4-0x32], cl; mov edi, 0x2; mov eax, 0xe; syscall; 
0x0000000010c9c2: add [rcx], dh; ror byte ptr [rcx+rcx*4-0xa], cl; mov edi, 0x2; mov eax, 0xe; syscall; 
0x000000000ee4a7: add [rcx], dh; sar byte ptr [rax], 0xe; je 0x00000000000ee3ed; ret; 
0x00000000054f5b: add [rcx], dh; sar byte ptr [rdi+0x2], cl; mov r10d, 0x8; mov eax, 0xe; syscall; 
0x00000000121808: add [rcx], dh; sar byte ptr [rsi+0x20241], 0xe8; ret far; 
0x0000000010d608: add [rcx], dh; shl bh, 0xc2; jmp rsi; 
0x000000000e2f5e: add [rcx], dh; shl byte ptr [rcx], cl; idiv byte ptr [rdi+0x1200011]; mov eax, 0x38; syscall; 
0x0000000011198c: add [rcx], dh; shr al, 0x7c; ret; 
0x0000000009711a: add [rcx], dh; shr al, 0xbe; ret; 
0x00000000053907: add [rcx], dh; shr cl, 0xf8; idiv bh; call qword ptr [rax+0x20247c83]; 
0x0000000015dd27: add [rcx], dh; test byte ptr [rax-0x73], 0x3d; ret; 
0x00000000081e68: add [rcx], dh; test byte ptr [rax-0x77], 0xef; call qword ptr [rbx+0x10]; 
0x000000000dd8b2: add [rcx], dl; add [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x000000000cf57b: add [rcx], eax; add [rax], al; lea rax, [rdi-0x10]; ret; 
0x0000000013bd31: add [rcx], eax; add [rax], al; ret; 
0x0000000010dd65: add [rcx], eax; add [rax], al; syscall; 
0x00000000192b71: add [rcx], eax; add [rcx], eax; imul rax, rdi; shr rax, 0x38; ret; 
0x00000000192b73: add [rcx], eax; imul rax, rdi; shr rax, 0x38; ret; 
0x0000000007b355: add [rcx], eax; ret; 
0x000000000f0b3a: add [rcx], edi; ret; 
0x00000000094d6b: add [rcx], esi; rol bl, 0x90; mov eax, 0x16; ret; 
0x000000000bd55c: add [rcx], esi; shr byte ptr [rdx+0x1], cl; lea r9, [rsp+0x20]; call rbx; 
0x00000000047005: add [rcx], esi; test byte ptr [rcx+rcx*4-0x31], 0x41; call rax; 
0x00000000117c36: add [rcx], sil; rol byte ptr [rdi+0xd7c1005], 0x0; cmp eax, 0x1; jg short 0x0000000000117c46; ret; 
0x00000000190926: add [rdi+0x12], dh; vmovdqu64 [rdi+rdx-0x40], zmm0; vmovdqu64 [rdi], zmm0; vzeroupper; ret; 
0x000000000bc066: add [rdi+0x15], esi; jb short 0x00000000000bc06d; mov [rdi], cl; ret; 
0x00000000117c42: add [rdi+0x1], edi; ret; 
0x000000000bbc27: add [rdi+0x26], esi; jb short 0x00000000000bbc31; movzx ecx, byte ptr [rsi]; mov [rdi], cl; ret; 
0x00000000157834: add [rdi+0x28], edx; mov eax, 0x1; ret; 
0x0000000005540e: add [rdi+0x2], bh; mov r10d, 0x8; mov eax, 0xe; syscall; 
0x000000000cf0b4: add [rdi+0x2], bh; neg eax; ret; 
0x0000000018bb44: add [rdi+0x2c], esi; jb short 0x000000000018bb4b; mov [rdi], cl; vzeroupper; ret; 
0x0000000010d4e0: add [rdi+0x2d], esi; mov eax, 0x4; syscall; 
0x0000000010d5a0: add [rdi+0x2d], esi; mov eax, 0x6; syscall; 
0x0000000010d53f: add [rdi+0x2e], esi; mov eax, 0x5; syscall; 
0x0000000005b4c0: add [rdi+0x3004], bh; mov eax, 0x9e; syscall; 
0x0000000010d9e5: add [rdi+0x30], esi; mov eax, 0x106; syscall; 
0x00000000190a0c: add [rdi+0x3a], esi; jb short 0x0000000000190a13; mov [rdi], cl; vzeroupper; ret; 
0x0000000018b657: add [rdi+0x3b], esi; jb short 0x000000000018b661; movzx ecx, byte ptr [rsi]; mov [rdi], cl; ret; 
0x0000000014d2ec: add [rdi+0x48], esi; mov eax, [rsp+0x10]; mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x18]; 
0x000000001903e7: add [rdi+0x53], esi; jb short 0x00000000001903f1; movzx ecx, byte ptr [rsi]; mov [rdi], cl; ret; 
0x000000000a9010: add [rdi+0x63], cl; or al, 0x8a; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000017deac: add [rdi+0x63], cl; or al, 0x8a; pcmpeqb xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x000000001850ac: add [rdi+0x63], cl; or al, 0x8a; vpcmpeqb xmm0, xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000016b3ca: add [rdi+0x63], cl; or al, 0x8b; add r9, r11; notrack jmp r9; 
0x00000000165e1a: add [rdi+0x63], cl; or al, 0x8b; lea r9, [r11+r9]; notrack jmp r9; 
0x000000000e546d: add [rdi+0x68], dh; lea rdx, [rip+0xcb37d]; movsxd rax, [rdx+rbp*4]; add rax, rdx; notrack jmp rax; 
0x0000000012fa1a: add [rdi+0x8], dh; mov rax, rdi; sar rax, 0x6; ret; 
0x00000000192af4: add [rdi+0x9], bh; neg eax; ret; 
0x000000000cb846: add [rdi+rax*4-0x17], dh; hlt; jle short 0x00000000000cb842; jmp qword ptr [rsi-0x70]; 
0x00000000043c8a: add [rdi+rax*8], ah; add [rax], al; add [rax-0x1], bh; ret; 
0x0000000011d046: add [rdi+rax*8], ah; add al, [rax]; add [rax], al; xor eax, eax; ret; 
0x00000000041e90: add [rdi+rax*8], ah; and al, [rax]; add [rax], al; add rsp, 0x8; ret; 
0x0000000002471e: add [rdi+rax*8], ah; or [rax], eax; add [rax], al; mov eax, 0xffffffff; ret; 
0x000000001142fe: add [rdi+rax*8], ah; or al, 0x0; add [rax], al; mov eax, 0xffffffff; ret; 
0x0000000009e98a: add [rdi+rax*8], ah; or al, 0x0; add [rax], al; xor eax, eax; ret; 
0x0000000010dc6e: add [rdi+rax*8], ah; pop rdi; add [rax], al; add [rax-0x1], bh; ret; 
0x00000000041286: add [rdi+rax*8], ah; sub al, [rax]; add [rax], al; mov rax, r11; ret; 
0x0000000011a708: add [rdi+rbp+0x48], dh; mov edi, ebp; xor esi, esi; call r12; 
0x0000000012ba16: add [rdi+rbx*2+0x31], esi; ror byte ptr [rax-0x7d], 0xc4; or [rbp+0x41], bl; pop rsp; ret; 
0x000000000e4feb: add [rdi+rcx*4+0x49], dh; cmp eax, 0x2468; jne short 0x00000000000e5013; mov eax, 0xfffa; ret; 
0x000000000cf1a2: add [rdi+rcx+0x4c], al; enter 0x8944, 0xc8; ret; 
0x000000000cf1c4: add [rdi+rcx+0x4f], al; enter 0x8944, 0xc8; ret; 
0x0000000012cf0e: add [rdi+rcx-0x3d], dh; nop [rax+rax]; xor eax, eax; ret; 
0x000000000d23e7: add [rdi+rcx-0x49], al; ret far; 
0x00000000094d56: add [rdi+rcx-0x7b], esi; div byte ptr [rbp+0x13]; and dword ptr [rdi+0x8], 0xfffffffe; xor eax, eax; ret; 
0x000000000340d8: add [rdi+rcx], al; mov bh, 0xc0; ret; 
0x000000000606ba: add [rdi+rcx], cl; test [rdi-0x1600000f], bl; fsub st, qword ptr [rdx]; cld; jmp qword ptr [rsi+0xf]; 
0x00000000032876: add [rdi+rdi*8], bh; cmovne edx, eax; lea rax, [rip+0x1bb21d]; mov [rip+0x1bb274], dl; ret; 
0x000000000a2254: add [rdi-0x27], esi; pop rbx; pop rbp; pop r12; ret; 
0x00000000116b75: add [rdi-0x64], bh; mov eax, 0x118; syscall; 
0x000000000424f7: add [rdi], bh; mov [rdi], edx; movd xmm0, eax; ret; 
0x0000000010dc71: add [rdi], bl; add [rax], al; mov eax, 0xffffffff; ret; 
0x00000000087cf8: add [rdi], cl; adc [rax+0x40], eax; pop rbx; ret; 
0x00000000141a96: add [rdi], cl; adc [rax], eax; add rsp, 0x8; ret; 
0x000000000926ed: add [rdi], cl; adc [rbp+0x38], eax; pop rbp; pop r12; ret; 
0x0000000012c58d: add [rdi], cl; adc [rbp-0x78], edi; call rcx; 
0x000000000919f4: add [rdi], cl; adc [rbx+0x48], eax; pop rbx; ret; 
0x000000001506fa: add [rdi], cl; adc [rdx], ebx; ret; 
0x0000000014cfa2: add [rdi], cl; adc [rdx], ecx; ret; 
0x0000000014fdea: add [rdi], cl; adc [rdx], edx; ret; 
0x000000001506da: add [rdi], cl; adc [rdx], esp; ret; 
0x0000000010d074: add [rdi], cl; adc [rsi+0x60], esi; movdqu xmm7, [rdi+0xf8]; movups [rsi+0x70], xmm7; ret; 
0x0000000010d080: add [rdi], cl; adc [rsi+0x70], edi; ret; 
0x0000000010049d: add [rdi], cl; adc [rsi+0x8], eax; ret; 
0x0000000014824a: add [rdi], cl; adc [rsi+0x8], ecx; ret; 
0x0000000014ceaf: add [rdi], cl; adc [rsi], eax; mov rax, [rax+0xa0]; mov [rsi+0x10], rax; ret; 
0x00000000153964: add [rdi], cl; adc [rsp+0x18], eax; call qword ptr [rax+0x18]; 
0x00000000153bf2: add [rdi], cl; adc [rsp+0x18], ecx; movups [rsp+0x38], xmm0; call qword ptr [rax+0x18]; 
0x000000001149ec: add [rdi], cl; adc [rsp+0x8], eax; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000153eb4: add [rdi], cl; adc [rsp+0xb8], ebp; call rax; 
0x00000000153e18: add [rdi], cl; adc [rsp+0xb8], ebx; movups [rsp+0xd8], xmm0; call rax; 
0x0000000010c953: add [rdi], cl; adc [rsp+0xc8], eax; mov [rsp+0xe8], eax; mov eax, 0xe; syscall; 
0x00000000153e20: add [rdi], cl; adc [rsp+0xd8], eax; call rax; 
0x00000000142385: add [rdi], cl; add eax, 0x31e8c35d; idiv edi; call qword ptr [rax-0x5e1f00d]; 
0x00000000160b9b: add [rdi], cl; add eax, 0x9be; add [rcx+0x3eb8c7], cl; add [rax], al; syscall; 
0x0000000014e4e5: add [rdi], cl; add eax, 0xb1e88beb; adc eax, 0xf390fffe; nop edx, edi; ret; 
0x0000000012484c: add [rdi], cl; add eax, 0xfffd2ae9; jmp qword ptr [rsi+0x2e]; 
0x00000000094c5a: add [rdi], cl; add eax, 0xfffe7ce9; jmp qword ptr [rsi+0x2e]; 
0x00000000140e96: add [rdi], cl; add eax, 0xfffe86e9; jmp qword ptr [rsi-0x70]; 
0x000000000e0dcf: add [rdi], cl; add eax, 0xfffea1e9; jmp qword ptr [rsi+0xf]; 
0x0000000009c172: add [rdi], cl; add eax, 0xfffebee9; jmp qword ptr [rsi+0xf]; 
0x00000000038506: add [rdi], cl; add eax, 0xfffefbe9; jmp qword ptr [rsi-0x70]; 
0x00000000098ac2: add [rdi], cl; add eax, 0xffff01e9; jmp qword ptr [rsi+0xf]; 
0x00000000091687: add [rdi], cl; add eax, 0xffff0be9; call qword ptr [rax+0xff0c889]; 
0x00000000137b19: add [rdi], cl; add eax, 0xffff0fe9; jmp qword ptr [rsi+0x66]; 
0x00000000093077: add [rdi], cl; add eax, 0xffff2ee9; call qword ptr [rax+0x1b9c031]; 
0x000000000e13bb: add [rdi], cl; add eax, 0xffff33e9; jmp qword ptr [rbp+rax*2-0x75]; 
0x000000000ff807: add [rdi], cl; add eax, 0xffff41e9; call qword ptr [rax-0x5e1f00d]; 
0x000000000910ac: add [rdi], cl; add eax, 0xffff44e9; jmp qword ptr [rsi+0x66]; 
0x0000000004716e: add [rdi], cl; add eax, 0xffff4ae9; jmp qword ptr [rsi+0x2e]; 
0x00000000125567: add [rdi], cl; add eax, 0xffff4ce9; call qword ptr [rax+0x1ba]; 
0x000000001255cc: add [rdi], cl; add eax, 0xffff4de9; jmp qword ptr [rsi+0x2e]; 
0x00000000125826: add [rdi], cl; add eax, 0xffff6be9; jmp qword ptr [rbx+rcx*4+0x4]; 
0x0000000009619a: add [rdi], cl; add eax, 0xffff70e9; jmp qword ptr [rsi+0x66]; 
0x000000000dfead: add [rdi], cl; add eax, 0xffff75e9; jmp qword ptr [rsi+0x2e]; 
0x000000001319cd: add [rdi], cl; add eax, 0xffff7ae9; jmp qword ptr [rsi+0x2e]; 
0x0000000013332d: add [rdi], cl; add eax, 0xffff7be9; jmp qword ptr [rsi+0x2e]; 
0x00000000150799: add [rdi], cl; enter 0x4289, 0x10; mov eax, 0x1; ret; 
0x000000001506a1: add [rdi], cl; enter 0x4289, 0xc; mov eax, 0x1; ret; 
0x0000000014d046: add [rdi], cl; enter 0xc089, 0x48; mov [rdx], eax; mov eax, 0x1; ret; 
0x0000000016dd8f: add [rdi], cl; mov bh, 0x16; mov [rdi], dx; ret; 
0x0000000018906f: add [rdi], cl; mov bh, 0x16; mov [rdi], dx; vzeroupper; ret; 
0x00000000034271: add [rdi], cl; mov bh, 0x4; js short 0x00000000000341fa; loopne 0x000000000003427a; ret; 
0x00000000122b64: add [rdi], cl; mov bh, 0x4; js short 0x0000000000122aed; loopne 0x0000000000122b6d; ret; 
0x0000000013da1f: add [rdi], cl; mov bh, 0x4e; adc cl, [rbp-0x2ff6f]; jmp qword ptr [rsi-0x7d]; 
0x00000000131615: add [rdi], cl; mov cl, 0x15; ret; 
0x0000000016ddff: add [rdi], cl; mov dh, 0x16; mov [rdi], dl; ret; 
0x0000000018a49f: add [rdi], cl; mov dh, 0x16; mov [rdi], dl; vzeroupper; ret; 
0x00000000038e07: add [rdi], cl; mov dh, 0x43; add [rax-0x7d], ecx; ret; 
0x000000000ea59f: add [rdi], cl; mov dh, 0x43; add cl, [rax-0x7d]; ret; 
0x0000000018e32f: add [rdi], cl; mov dh, 0x47; dec dword ptr [rdi]; mov dh, 0x4e; jmp far fword ptr [rcx]; 
0x0000000018e0e2: add [rdi], cl; mov dh, 0x47; dec dword ptr [rdi]; mov dh, 0x56; jmp far fword ptr [rcx]; 
0x00000000191fcf: add [rdi], cl; mov dh, 0x47; movzx edx, byte ptr [rsi-0xd]; sub eax, edx; ret; 
0x00000000191fbf: add [rdi], cl; mov dh, 0x47; movzx edx, byte ptr [rsi-0xe]; sub eax, edx; ret; 
0x00000000048d37: add [rdi], cl; mov dh, 0x4b; add [rax-0x7d], ecx; ret; 
0x000000000e6d7f: add [rdi], cl; mov dh, 0x53; add [rax-0x7d], ecx; ret; 
0x0000000013f3f8: add [rdi], cl; mov dh, 0x5d; add cl, ch; imul edi, esi, 0xffffffff; jmp qword ptr [rsi+0xf]; 
0x000000000d4ee9: add [rdi], cl; mov dh, 0x73; add [rax-0x7d], ecx; ret; 
0x00000000184d5f: add [rdi], cl; mov dh, 0x7; movzx ecx, byte ptr [rsi]; sub eax, ecx; ret; 
0x000000000901d1: add [rdi], cl; mov dh, 0xc0; movsxd rax, [r10+rax*4]; add rax, r10; notrack jmp rax; 
0x00000000090203: add [rdi], cl; mov dh, 0xc0; movsxd rax, [r11+rax*4]; add rax, r11; notrack jmp rax; 
0x0000000010b14d: add [rdi], cl; mov dh, 0xc0; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x000000000d4f11: add [rdi], cl; mov dh, 0xc0; movsxd rax, [rdi+rax*4]; add rax, rdi; notrack jmp rax; 
0x00000000064237: add [rdi], cl; mov dh, 0xc0; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000080701: add [rdi], cl; mov dh, 0xc0; movsxd rax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x000000000bc16f: add [rdi], cl; mov dh, 0xc1; pop rbx; ret; 
0x00000000064957: add [rdi], cl; mov dh, 0xd2; movsxd rax, [rcx+rdx*4]; add rax, rcx; notrack jmp rax; 
0x00000000052d73: add [rdi], cl; mov dh, 0xd2; movsxd rdx, [rdi+rdx*4]; add rdx, rdi; notrack jmp rdx; 
0x000000000eff91: add [rdi], cl; mov dh, 0xdb; movsxd rax, [rdx+rbx*4]; add rax, rdx; notrack jmp rax; 
0x000000000aa3bf: add [rdi], cl; mov dh, 0xe; movzx eax, byte ptr [rdi]; sub eax, ecx; ret; 
0x000000000d83b4: add [rdi], cl; mov dh, 0xf1; movsxd rdx, [rdi+rsi*4]; add rdx, rdi; notrack jmp rdx; 
0x000000000d833a: add [rdi], cl; mov dh, 0xf9; movsxd rdx, [r9+rdi*4]; add rdx, r9; notrack jmp rdx; 
0x00000000184a7f: add [rdi], cl; mov ebp, 0x20c083c0; add rax, rdi; vzeroupper; ret; 
0x00000000184a8f: add [rdi], cl; mov ebp, 0x40c083c0; add rax, rdi; vzeroupper; ret; 
0x000000000ac67f: add [rdi], cl; mov ebp, 0x448d48c0; cmp [rax], ah; ret; 
0x000000000ac68f: add [rdi], cl; mov ebp, 0x448d48c0; cmp [rax], dh; ret; 
0x000000000ac66f: add [rdi], cl; mov ebp, 0x448d48c0; cmp [rax], dl; ret; 
0x00000000184a9f: add [rdi], cl; mov ebp, 0x60c083c0; add rax, rdi; ret; 
0x00000000184a6f: add [rdi], cl; mov ebp, 0xf80148c0; vzeroupper; ret; 
0x000000000ac1af: add [rdi], cl; mov esp, 0x448d48c0; cmp [rax], ah; ret; 
0x000000000ac19f: add [rdi], cl; mov esp, 0x448d48c0; cmp [rax], dl; ret; 
0x000000000ac17e: add [rdi], cl; mov esp, 0x448d48c0; cmp al, dh; ret; 
0x000000000ac1bf: add [rdi], cl; mov esp, 0xc22948c0; jbe short 0x00000000000ac200; add rax, rdi; ret; 
0x000000000ac1ce: add [rdi], cl; mov esp, 0xc22948c0; jbe short 0x00000000000ac200; lea rax, [rdi+rax+0x10]; ret; 
0x000000000ce3af: add [rdi], cl; mov esp, 0xc22948c0; jbe short 0x00000000000ce3f0; add rax, rdi; ret; 
0x000000000ce3be: add [rdi], cl; mov esp, 0xc22948c0; jbe short 0x00000000000ce3f0; lea rax, [rdi+rax+0x10]; ret; 
0x000000000ac18f: add [rdi], cl; mov esp, 0xf80148c0; ret; 
0x0000000004242f: add [rdi], cl; push rsi; add eax, 0x17a2e9; mulss xmm0, [rip+0x17af49]; ret; 
0x0000000004240a: add [rdi], cl; push rsi; add eax, 0x17a32e; mulss xmm0, [rip+0x17af72]; ret; 
0x000000000422eb: add [rdi], cl; push rsp; ret; 
0x000000000d6b87: add [rdi], cl; ret; 
0x000000000d1df1: add [rdi], cl; sub [rax], eax; add rsp, 0x10; pop rbp; ret; 
0x0000000015175b: add [rdi], cl; sub [rsp+0x20], eax; call qword ptr [rax+0x28]; 
0x00000000042fdf: add [rdi], cl; sub [rsp+0xd0], eax; movaps [rsp+0xe0], xmm0; movaps [rsp+0xf0], xmm0; syscall; 
0x00000000042fe7: add [rdi], cl; sub [rsp+0xe0], eax; movaps [rsp+0xf0], xmm0; syscall; 
0x00000000042fef: add [rdi], cl; sub [rsp+0xf0], eax; syscall; 
0x0000000017ed1f: add [rdi], cl; sub dword ptr [rsi+0xe], 0x0; add [rcx+0x29], cl; ret far; 
0x00000000043357: add [rdi], cl; test [rax+0x48000000], ebx; add esp, 0x98; ret; 
0x0000000009d62e: add [rdi], cl; test [rbp+0x48000000], ebp; add esp, 0x18; ret; 
0x000000000578f1: add [rdi], cl; test [rbp], edi; add [rax], al; leave; ret; 
0x0000000010deff: add [rdi], cl; test [rbx+0x48000000], esi; add esp, 0x78; ret; 
0x00000000058716: add [rdi], cl; test [rbx-0x16000001], al; ja short 0x00000000000586c2; cld; jmp qword ptr [rsi+0xf]; 
0x0000000010e4f5: add [rdi], cl; test [rcx+0x48000000], ebx; add esp, 0x68; ret; 
0x00000000052225: add [rdi], cl; test [rcx+0x48000000], ecx; add esp, 0x10; pop rbx; ret; 
0x000000000e61ec: add [rdi], cl; test [rcx-0x17ffffff], ebx; jg short 0x00000000000e61f6; jmp qword ptr [rsp+rax*2-0x77]; 
0x00000000100dbc: add [rdi], cl; test [rcx-0x17ffffff], ebx; js short 0x0000000000100d99; std; jmp qword ptr [rsp+rax*2-0x77]; 
0x000000001150c0: add [rdi], cl; test [rdx+0x48000000], edx; add esp, 0x60; pop rbp; ret; 
0x0000000010e636: add [rdi], cl; test [rdx+0x48000000], esi; add esp, 0x30; pop rbx; ret; 
0x0000000017cfc7: add [rdi], cl; test [rdx-0x1600000a], esp; in eax, dx; idiv edi; jmp qword ptr [rsi+0x66]; 
0x00000000133d2f: add [rdi], cl; test [rsi+rdi*8+0x3d80ffff], ch; ret; 
0x000000000a3daf: add [rdi], cl; test [rsi], bh; sbb [rax], al; add [rcx-0x77], cl; ret; 
0x00000000196457: add [rdi], cl; test bh, ch; add [rax], al; add [rcx-0x77], cl; ret; 
0x0000000012d103: add [rdi], cl; test ebx, edx; add [rax], al; add cl, cl; ret; 
0x00000000070671: add [rdi], cl; test esp, esi; ret far; 
0x00000000156453: add [rdi], cl; xchg ebp, eax; ror byte ptr [rcx+0x1b803], 0x0; add bl, ch; ret; 
0x0000000014f36f: add [rdi], cl; xchg edi, eax; ret; 
0x00000000043f64: add [rdi], ecx; adc [rdi], eax; ret; 
0x0000000015075c: add [rdi], ecx; enter 0x289, 0xb8; add [rax], eax; add [rax], al; ret; 
0x000000000341d9: add [rdi], ecx; mov bh, 0xc0; ret; 
0x000000000920bd: add [rdi], ecx; mov dh, 0x36; call qword ptr [rax+0x18]; 
0x000000000a8833: add [rdi], ecx; mov esi, 0xf2390714; je short 0x00000000000a8830; ret; 
0x000000001784be: add [rdi], ecx; test [rbx+0x3], ecx; add [rax], al; ret; 
0x000000000eb27e: add [rdi], ecx; test [rbx+0xffffff8], ecx; mov dh, 0x55; add bh, [rcx]; ret far; 
0x00000000066207: add [rdi], ecx; test [rbx+rsi], eax; add [rbx-0x65f7b], cl; jmp far fword ptr [rbx]; 
0x00000000117ce1: add [rdi], ecx; test [rcx], bl; add al, [rax]; add bh, dh; ret; 
0x0000000018a48f: add [rdi], ecx; test [rdx+0x1], edi; add [rax], al; vzeroupper; ret; 
0x0000000018aef7: add [rdi], ecx; test [rdx+0x4], eax; add [rax], al; vzeroupper; ret; 
0x0000000018b1c3: add [rdi], ecx; test [rsi+0x1], esi; add [rax], al; vzeroupper; ret; 
0x000000001784bd: add [rdi], rcx; test [rbx+0x3], ecx; add [rax], al; ret; 
0x00000000083bef: add [rdx+0x10], bh; mov rsi, r13; mov rdi, r15; call qword ptr [r14+0x38]; 
0x00000000083bee: add [rdx+0x10], dil; mov rsi, r13; mov rdi, r15; call qword ptr [r14+0x38]; 
0x00000000090888: add [rdx+0x1], bh; mov rdi, rbx; call qword ptr [r12+0x48]; 
0x0000000008a09a: add [rdx+0x1], bh; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x0000000008cf77: add [rdx+0x1], bh; mov rsi, rbx; mov edi, 0x2; mov eax, r9d; syscall; 
0x0000000008cf76: add [rdx+0x1], dil; mov rsi, rbx; mov edi, 0x2; mov eax, r9d; syscall; 
0x0000000015193b: add [rdx+0x1e], ch; lea r8, [rip-0x6b85]; lea rdx, [rip-0x6b6c]; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x0000000015f820: add [rdx+0x2], ch; call qword ptr [rax+0x1e0]; 
0x00000000102ab3: add [rdx+0x2], edi; cmove eax, edx; ret; 
0x00000000190140: add [rdx+0x2], esi; mov [rdi], cl; ret; 
0x0000000009c212: add [rdx+0x2b], dh; cmp rcx, [rip+0x152c74]; jae short 0x000000000009c240; lea rax, [rax-0x8]; ret; 
0x000000000baf5f: add [rdx+0x30178816], cl; in eax, dx; mov [rdi+0x1], ch; ret; 
0x00000000152f1c: add [rdx+0x3c], ch; lea r9, [rsp+0x3a]; call qword ptr [rax]; 
0x000000000e5125: add [rdx+0x40], bh; mov eax, 0x20; cmove rax, rdx; ret; 
0x000000001214b7: add [rdx+0x40], bh; mov edi, r12d; mov eax, 0x14; syscall; 
0x000000001766af: add [rdx+0x48028801], cl; mov eax, edi; ret; 
0x000000000b39f4: add [rdx+0x48028801], ecx; mov eax, edi; ret; 
0x0000000018fa71: add [rdx+0x4], esi; mov cl, [rsi]; mov [rdi], cl; ret; 
0x000000000df023: add [rdx+0x4c], dl; mov ecx, [rsp+0x20]; mov rdx, [rsp+0x28]; mov rax, [rsp+0x18]; call rax; 
0x0000000006c67b: add [rdx+0x63], cl; add al, 0xa7; add rax, rdi; notrack jmp rax; 
0x00000000193f7b: add [rdx+0x63], cl; or al, 0xa7; add rcx, rdi; notrack jmp rcx; 
0x0000000011cdaa: add [rdx+0x64], bh; mov eax, [rax+0x38]; test eax, eax; cmove eax, edx; ret; 
0x000000000e4fc6: add [rdx+0x7d00], bh; mov eax, 0x7f; cmove rax, rdx; ret; 
0x000000000e5019: add [rdx+0x7f], bh; cmovne rax, rdx; ret; 
0x0000000011f31b: add [rdx+0x8], bh; syscall; 
0x0000000002fd8b: add [rdx+rcx-0x17], dh; popfq; and eax, 0x1f0fffff; add [rax], r8b; ret; 
0x000000001569bf: add [rdx-0x1], bh; mov rsi, r13; mov rdi, rbp; xor eax, eax; call rcx; 
0x000000000473c6: add [rdx-0x1], bh; pop rbx; test eax, eax; cmovs eax, edx; ret; 
0x000000001907fe: add [rdx-0x2f], esp; jge short 0x000000000019084b; out 0x49, eax; jmp qword ptr [rdx-0x2f]; 
0x0000000018f9ca: add [rdx-0x2f], esp; jl short 0x000000000018fa17; adc [rcx-0x2], edx; vmovups [r9-0x40], zmm3; ret; 
0x0000000019067b: add [rdx-0x2f], esp; std; jg short 0x00000000001906cb; jmp qword ptr [rdx-0x2f]; 
0x00000000043c6b: add [rdx-0x389bffe6], eax; add [rsi], dl; add [rax], al; add [rax-0x1], bh; ret; 
0x000000000b7b6e: add [rdx-0x3ce877ea], cl; nop [rax+rax]; mov dx, [rsi]; mov [rdi], dx; ret; 
0x000000000986fc: add [rdx-0x7d], cl; xor [rax], r9; add [rax+0x39], ecx; ret; 
0x0000000019064c: add [rdx-0xf], ah; dec byte ptr [rax+0x6f]; add [rdx-0xf], esp; dec byte ptr [rax+0x6f]; jmp qword ptr [r10-0xf]; 
0x00000000190652: add [rdx-0xf], esp; dec byte ptr [rax+0x6f]; jmp qword ptr [r10-0xf]; 
0x000000001900d7: add [rdx-0xf], esp; jl short 0x0000000000190124; adc [rsi-0x2], edx; vmovups [rsi-0x40], zmm2; ret; 
0x00000000190217: add [rdx-0xf], esp; jl short 0x0000000000190264; adc [rsi+0x2], edx; vmovups [rsi+0xc0], zmm2; ret; 
0x00000000049b67: add [rdx], ah; add [rax], al; add [rbp-0x7b], al; test byte ptr [rdi], 0x84; ret; 
0x0000000003457b: add [rdx], al; add [rax], al; mov fs:[rdx], rax; ret; 
0x0000000003422a: add [rdx], al; add [rax], al; ret; 
0x0000000013fe95: add [rdx], al; add [rax], al; xor eax, 0xfffbc2e9; call qword ptr [rax+0x244c8b44]; 
0x000000001462cc: add [rdx], al; add rsp, 0x8; lea rax, [rip+0xaa827]; ret; 
0x00000000026fa6: add [rdx], al; add rsp, 0x8; ret; 
0x00000000127c0e: add [rdx], al; and eax, ecx; mov [rsp+0x20], cl; mov [rsp+0x1f], al; call qword ptr [r12+0x28]; 
0x00000000127d25: add [rdx], al; call rax; 
0x0000000009522b: add [rdx], al; jbe short 0x0000000000095230; ret; 
0x0000000012a061: add [rdx], al; mov rdx, rax; call qword ptr [r13+0x28]; 
0x00000000128884: add [rdx], al; mov rdx, rax; call qword ptr [rbx+0x28]; 
0x00000000127e85: add [rdx], al; mov rsi, rbp; mov [rsp+0x10], rax; mov rdx, rax; call qword ptr [r12+0x28]; 
0x00000000034138: add [rdx], al; movzx eax, ax; ret; 
0x0000000015c523: add [rdx], bh; cmovne rax, rdx; add rsp, 0x8; ret; 
0x0000000009cbbc: add [rdx], bh; cmp rax, 0xffffffffffffffff; cmove rax, rdx; add rsp, 0x8; ret; 
0x00000000041289: add [rdx], ch; add [rax], al; add [rcx+rcx*4-0x28], cl; ret; 
0x0000000015f871: add [rdx], ch; call qword ptr [rax+0x1e0]; 
0x000000000d0e9b: add [rdx], ch; lea r8, [rsp+0x40]; call qword ptr [rax+0x1e0]; 
0x00000000160272: add [rdx], ch; mov rdi, r12; push 0x2; xor r13d, r13d; call qword ptr [rax+0x1e0]; 
0x000000000d0e99: add [rdx], ch; push 0x0; lea r8, [rsp+0x40]; call qword ptr [rax+0x1e0]; 
0x000000001280db: add [rdx], cl; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000013c272: add [rdx], eax; pop rbx; ret; 
0x000000000bd1b1: add [rdx], ebp; lea rcx, [rax+0x4]; lea r9, [rsp+0x18]; call rbx; 
0x000000000bd5ca: add [rdx], ebp; lea rcx, [rax+0x4]; lea r9, [rsp+0x20]; call rbx; 
0x000000000cafb9: add [rdx], ebp; mov r9, [rsp+0x10]; call r14; 
0x0000000013c271: add [rdx], r8d; pop rbx; ret; 
0x0000000016de43: add [rip+0x14634900], eax; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001135bb: add [rip+0x410000], bh; je short 0x00000000001135f0; mov eax, 0x101; syscall; 
0x000000001135ba: add [rip+0x410000], dil; je short 0x00000000001135f0; mov eax, 0x101; syscall; 
0x00000000041bd1: add [rip+0x7fff], ah; or eax, edx; mov [rsp+0x10], eax; fld st, tbyte ptr [rsp+0x8]; ret; 
0x0000000018ea8f: add [rip+0xff], ah; and ecx, 0xff; sub eax, ecx; ret; 
0x0000000018ea8e: add [rip+0xff], spl; and ecx, 0xff; sub eax, ecx; ret; 
0x0000000018e1c2: add [rip+0xffff], ah; and ecx, 0xffff; sub eax, ecx; ret; 
0x0000000011eeb9: add [rip-0x1000], ah; or eax, edx; ret; 
0x000000000908b5: add [rip-0x16141c8c], bl; nop [rax+rax]; xor eax, eax; ret; 
0x00000000052afa: add [rip-0x2711800], al; std; dec dword ptr [rax-0x77]; ret; 
0x00000000042a3a: add [rip-0x3b7cb800], edx; sbb [rbx+0x5d], bl; ret; 
0x0000000013fe98: add [rip-0x43d17], dh; call qword ptr [rax+0x244c8b44]; 
0x0000000007bab3: add [rip-0x7cbf0000], al; out dx, eax; add [rax-0x93b43], eax; jmp qword ptr [rax]; 
0x000000000605a7: add [rip-0xb9517], ch; jmp qword ptr [rsi-0x70]; 
0x00000000061727: add [rip-0xfd17], ch; jmp qword ptr [rsi-0x70]; 
0x00000000094e7c: add [rsi+0x1], dh; ret; 
0x000000000e4f6c: add [rsi+0x29], bh; mov eax, 0x7fffffff; cmp r8, 0x58465342; jne short 0x00000000000e4f80; ret; 
0x0000000013815c: add [rsi+0x2], dh; add [rax-0x75], cl; jl short 0x0000000000138188; adc [rcx+rcx*4-0x1a], cl; call qword ptr [rsp+0x58]; 
0x0000000011bb3a: add [rsi+0x2b], dh; mov rsi, r12; mov rdi, r14; call r13; 
0x00000000119a8c: add [rsi+0x3], bh; je short 0x0000000000119ac5; mov rdi, rbp; xor esi, esi; call r12; 
0x00000000119b1c: add [rsi+0x3], bh; je short 0x0000000000119b55; mov rdi, rbp; xor esi, esi; call r12; 
0x0000000011a703: add [rsi+0x3], bh; je short 0x000000000011a73a; mov rdi, rbp; xor esi, esi; call r12; 
0x0000000011a7b4: add [rsi+0x3], bh; je short 0x000000000011a7ed; mov rdi, rbp; xor esi, esi; call r12; 
0x0000000015218c: add [rsi+0x4], bh; mov rdi, rbp; lea r8, [rip-0xa0ec]; lea rdx, [rip+0x3a2d]; call qword ptr [rax]; 
0x00000000147325: add [rsi+0x4], bh; mov rdi, rbp; lea r9, [rsp+0x20]; call qword ptr [rax]; 
0x000000001138fe: add [rsi+0x5401], bh; mov eax, r8d; mov ebx, fs:[r10]; syscall; 
0x00000000113b84: add [rsi+0x5409], bh; mov eax, 0x10; syscall; 
0x00000000113bb5: add [rsi+0x5409], bh; mov r8d, eax; mov eax, 0x10; syscall; 
0x00000000031ad8: add [rsi+0x63], cl; add al, 0x8a; add r8, rdx; notrack jmp r8; 
0x00000000194194: add [rsi+0x63], cl; and al, 0xa7; add rdi, r12; notrack jmp rdi; 
0x000000000945ee: add [rsi+0x80], bh; mov eax, 0xca; syscall; 
0x000000000946bb: add [rsi+0x80], bh; syscall; 
0x000000000e1dcc: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x10d702]; syscall; 
0x000000000e1c8c: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x10d842]; syscall; 
0x000000000e1bd4: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x10d8fa]; syscall; 
0x000000000e1af8: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x10d9ce]; syscall; 
0x000000000e1928: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x10db5e]; syscall; 
0x000000000e1764: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x10dcda]; syscall; 
0x000000000e13aa: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x10e03c]; syscall; 
0x000000000dfe9c: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x10f4c2]; syscall; 
0x000000000dfd5c: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x10f602]; syscall; 
0x000000000dfca4: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x10f6ba]; syscall; 
0x000000000df8d8: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x10fa7e]; syscall; 
0x000000000df708: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x10fc0e]; syscall; 
0x000000000df544: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x10fd8a]; syscall; 
0x000000000dec5c: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x11061a]; syscall; 
0x000000000d2bb8: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x11c5d6]; syscall; 
0x000000000d2984: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x11c80a]; syscall; 
0x000000000ca658: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x126b46]; syscall; 
0x0000000009c818: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x150356]; syscall; 
0x0000000009e1c4: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x150d32]; syscall; 
0x0000000009dfe4: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x150f12]; syscall; 
0x0000000009ddf8: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1510fe]; syscall; 
0x0000000009dd88: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x15116e]; syscall; 
0x0000000009db58: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x15139e]; syscall; 
0x00000000099ab8: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1530b6]; syscall; 
0x00000000099a58: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x153116]; syscall; 
0x00000000099698: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1534d6]; syscall; 
0x00000000099438: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x153736]; syscall; 
0x00000000098dd0: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x153d9e]; syscall; 
0x00000000098d98: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x153dd6]; syscall; 
0x0000000009aa68: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x15440e]; syscall; 
0x00000000099fcc: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x154e9a]; syscall; 
0x00000000096039: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x158e2d]; syscall; 
0x00000000096008: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x158e6e]; syscall; 
0x00000000095d88: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1590ee]; syscall; 
0x00000000095864: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x159612]; syscall; 
0x00000000094c49: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x159ba5]; syscall; 
0x00000000094a74: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x159d7a]; syscall; 
0x000000000948d8: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x159f16]; syscall; 
0x0000000009394a: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x15ae64]; syscall; 
0x0000000009340a: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x15b3a4]; syscall; 
0x00000000093066: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x15b748]; syscall; 
0x00000000092cfa: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x15bab4]; syscall; 
0x00000000091676: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x15d138]; syscall; 
0x000000000913b6: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x15d3f8]; syscall; 
0x00000000091042: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x15d76c]; syscall; 
0x00000000084387: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x16a3e7]; syscall; 
0x00000000083f8a: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x16a7e4]; syscall; 
0x00000000083edf: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x16a88f]; syscall; 
0x00000000082018: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x16f186]; syscall; 
0x000000000610cc: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x18d672]; syscall; 
0x00000000060e48: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x18d8f2]; syscall; 
0x0000000005ec74: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x18fabe]; syscall; 
0x0000000005eb34: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x18fbfe]; syscall; 
0x00000000054d98: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x199986]; syscall; 
0x00000000054bb8: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x199b66]; syscall; 
0x00000000054688: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x19a096]; syscall; 
0x0000000005229c: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x19c252]; syscall; 
0x00000000052120: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x19c3ce]; syscall; 
0x000000000520e8: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x19c406]; syscall; 
0x000000000478d4: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1a6bfa]; syscall; 
0x00000000047814: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1a6cba]; syscall; 
0x0000000004774c: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1a6d82]; syscall; 
0x00000000047674: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1a6e5a]; syscall; 
0x0000000004676c: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1a750a]; syscall; 
0x000000000466a7: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1a75cf]; syscall; 
0x00000000046505: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1a7771]; syscall; 
0x0000000004642b: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1a784b]; syscall; 
0x000000000384f5: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1b5731]; syscall; 
0x00000000036b72: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1b707c]; syscall; 
0x00000000035837: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1b830f]; syscall; 
0x0000000003581a: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1b832c]; syscall; 
0x00000000035752: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1b83f4]; syscall; 
0x0000000002606c: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1cb132]; syscall; 
0x00000000025f00: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1cb29e]; syscall; 
0x00000000025de0: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1cb3be]; syscall; 
0x0000000002283b: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x1cb403]; syscall; 
0x000000001987e4: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x55492]; syscall; 
0x000000001989a4: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x55e4a]; syscall; 
0x00000000198cd4: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x57832]; syscall; 
0x0000000015e074: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x935d2]; syscall; 
0x0000000015cf3c: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x9470a]; syscall; 
0x0000000015ce5c: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x947ea]; syscall; 
0x0000000015cc74: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x949d2]; syscall; 
0x0000000015cbe4: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x94a62]; syscall; 
0x0000000015cb44: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x94b02]; syscall; 
0x0000000015ca94: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x94bb2]; syscall; 
0x0000000015c6c4: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x94f82]; syscall; 
0x00000000152434: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x9e9aa]; syscall; 
0x000000001522d4: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x9eb0a]; syscall; 
0x000000001520c8: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x9ed16]; syscall; 
0x00000000151f28: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x9eeb6]; syscall; 
0x00000000151d94: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x9f04a]; syscall; 
0x00000000151c54: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x9f18a]; syscall; 
0x00000000151af4: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x9f2ea]; syscall; 
0x000000001519e4: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x9f3fa]; syscall; 
0x0000000014e4d4: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xa2906]; syscall; 
0x0000000014c7dc: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xa453a]; syscall; 
0x0000000014c69c: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xa467a]; syscall; 
0x0000000014c5e4: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xa4732]; syscall; 
0x0000000014c4f8: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xa4816]; syscall; 
0x0000000014c328: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xa49b6]; syscall; 
0x0000000014c164: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xa4b52]; syscall; 
0x000000001467c6: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xaa38c]; syscall; 
0x00000000144628: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xac496]; syscall; 
0x000000001442f0: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xac7ce]; syscall; 
0x00000000143f70: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xacb4e]; syscall; 
0x00000000143d4a: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xacd74]; syscall; 
0x00000000143be8: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xaced6]; syscall; 
0x000000001439ab: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xad113]; syscall; 
0x00000000142f54: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xadab2]; syscall; 
0x00000000142dd2: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xadc34]; syscall; 
0x00000000142d98: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xadc6e]; syscall; 
0x00000000142c80: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xadd86]; syscall; 
0x0000000014243c: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xae5ca]; syscall; 
0x00000000142374: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xae692]; syscall; 
0x00000000142258: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xae7ae]; syscall; 
0x00000000140e85: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xaf929]; syscall; 
0x0000000013d704: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb2e02]; syscall; 
0x0000000013d408: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb30fe]; syscall; 
0x000000001390d8: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb741a]; syscall; 
0x00000000138b58: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb797e]; syscall; 
0x00000000138994: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb7afa]; syscall; 
0x000000001388cc: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb7b62]; syscall; 
0x0000000013878c: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb7ca2]; syscall; 
0x000000001386d4: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb7d5a]; syscall; 
0x00000000137fe4: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb8442]; syscall; 
0x00000000137cc4: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb8762]; syscall; 
0x00000000137b08: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb891e]; syscall; 
0x0000000013477c: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbbb3a]; syscall; 
0x0000000013463c: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbbc7a]; syscall; 
0x00000000134584: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbbd32]; syscall; 
0x000000001344a4: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbbe0a]; syscall; 
0x00000000133fd8: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbc25e]; syscall; 
0x00000000133a08: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbc7ce]; syscall; 
0x000000001334e8: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbcca6]; syscall; 
0x0000000013331c: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbce32]; syscall; 
0x000000001331dc: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbcf72]; syscall; 
0x00000000133124: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbd02a]; syscall; 
0x00000000133044: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbd102]; syscall; 
0x00000000132c28: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbd4d6]; syscall; 
0x0000000013260c: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbda92]; syscall; 
0x000000001324b4: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbdbea]; syscall; 
0x000000001323f4: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbdcaa]; syscall; 
0x0000000013230c: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbdd8a]; syscall; 
0x00000000132228: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbde36]; syscall; 
0x00000000131bc8: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbe456]; syscall; 
0x000000001319bc: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbe61a]; syscall; 
0x00000000131864: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbe772]; syscall; 
0x000000001317a4: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbe832]; syscall; 
0x000000001316bc: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbe912]; syscall; 
0x00000000130aa8: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbf4ae]; syscall; 
0x00000000130838: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbf6de]; syscall; 
0x000000001300b8: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbfdfe]; syscall; 
0x000000001265bc: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xc9862]; syscall; 
0x0000000012647c: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xc99a2]; syscall; 
0x000000001263c4: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xc9a5a]; syscall; 
0x00000000125fea: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xc9e2c]; syscall; 
0x00000000125de8: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xc9ff6]; syscall; 
0x00000000125c08: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xca18e]; syscall; 
0x00000000125a44: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xca30a]; syscall; 
0x00000000125974: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xca386]; syscall; 
0x000000001258aa: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xca450]; syscall; 
0x00000000125815: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xca4e5]; syscall; 
0x00000000124b0c: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xcb1ba]; syscall; 
0x000000001249cc: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xcb2fa]; syscall; 
0x00000000124914: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xcb3b2]; syscall; 
0x0000000012431a: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xcb9a4]; syscall; 
0x00000000124118: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xcbb4e]; syscall; 
0x00000000123f38: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xcbcc6]; syscall; 
0x00000000123d74: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xcbe22]; syscall; 
0x00000000118704: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xd713a]; syscall; 
0x000000001185e8: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xd7256]; syscall; 
0x00000000118188: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xd76b6]; syscall; 
0x00000000117c4d: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xd7bf1]; syscall; 
0x00000000106ab8: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xe8af6]; syscall; 
0x000000000229f0: add [rsi+0x81], bh; mov eax, 0xca; syscall; 
0x00000000099fa1: add [rsi+0x81], bh; mov eax, ebx; syscall; 
0x00000000046b4d: add [rsi+0x81], bh; mov rdi, r12; mov eax, 0xca; syscall; 
0x00000000047136: add [rsi+0x81], bh; mov rdi, r13; mov eax, 0xca; syscall; 
0x00000000046956: add [rsi+0x81], bh; mov rdi, r14; mov eax, 0xca; syscall; 
0x0000000009c165: add [rsi+0x81], bh; mov rdi, r15; mov eax, 0xca; syscall; 
0x00000000046da4: add [rsi+0x81], bh; mov rdi, rbp; mov eax, 0xca; syscall; 
0x0000000009ae6a: add [rsi+0x81], bh; mov rdi, rbx; mov eax, 0xca; syscall; 
0x0000000014e741: add [rsi+0x8], bh; mov rdi, rbp; call qword ptr [rax+0x30]; 
0x000000000b3981: add [rsi+0xf], ah; adc al, [rcx]; movlpd [rdx], xmm0; mov rax, rdi; ret; 
0x0000000004266b: add [rsi+0xf], ah; fild st, dword ptr [rip+0x17a0ec]; por xmm0, xmm1; ret; 
0x00000000093694: add [rsi+0xf], ah; out dx, eax; ror byte ptr [rdi], 0x11; pop rbx; ret; 
0x00000000151753: add [rsi+0xf], ah; outsd dx, [rsi]; add eax, 0x6b534; movaps [rsp+0x20], xmm0; call qword ptr [rax+0x28]; 
0x000000000420b5: add [rsi+0xf], ah; push rsi; or eax, 0x17a642; mulsd xmm0, xmm1; ret; 
0x0000000004208f: add [rsi+0xf], ah; push rsi; or eax, 0x17a678; mulsd xmm0, xmm1; ret; 
0x00000000041f2b: add [rsi+0xf], ah; push rsp; or eax, 0x17a7ac; orpd xmm0, xmm1; ret; 
0x000000000ac59c: add [rsi+0xf], ah; xlat [rbx]; ret; 
0x000000000ac5c1: add [rsi+0xf], ah; xlat [rbx]; ror dword ptr [rdi], 0xbd; ror byte ptr [rax+0x1], 0xf8; ret; 
0x000000000b3985: add [rsi+0xf], esp; adc eax, [rdx]; mov rax, rdi; ret; 
0x00000000043f5b: add [rsi+0xf], esp; fcmovnb st, st(1); shufpd xmm0, xmm0, 0x1; movups [rdi], xmm0; ret; 
0x0000000008761f: add [rsi-0x1], bh; call qword ptr [rax+0x18]; 
0x0000000008f6d9: add [rsi-0x1], bh; mov rdi, rbp; call qword ptr [rax+0x18]; 
0x00000000091bc0: add [rsi-0x1], bh; mov rdi, rbp; call qword ptr [rbx+0x18]; 
0x000000000932e5: add [rsi-0x1], bh; mov rdi, rbx; call qword ptr [r15+0x18]; 
0x0000000009234f: add [rsi-0x1], bh; mov rdi, rbx; call qword ptr [rax+0x18]; 
0x0000000009555e: add [rsi-0x59], dh; add rsp, 0x8; ret; 
0x0000000011369d: add [rsi-0x70], ah; endbr64; mov eax, 0x1; syscall; 
0x000000000e40ed: add [rsi-0x70], ah; endbr64; mov eax, 0x27; syscall; 
0x0000000011f92d: add [rsi-0x70], ah; endbr64; mov eax, 0x9e; syscall; 
0x0000000011515d: add [rsi-0x70], ah; endbr64; mov eax, 0xa3; syscall; 
0x00000000114e0d: add [rsi-0x70], ah; endbr64; mov eax, 0xaa; syscall; 
0x00000000114f5d: add [rsi-0x70], ah; endbr64; mov eax, 0xab; syscall; 
0x000000000d0ded: add [rsi-0x70], ah; endbr64; mov eax, 0xc9; syscall; 
0x000000000344cd: add [rsi-0x70], ah; endbr64; mov rax, [rip+0x1b792d]; add rax, fs:[0x0]; ret; 
0x0000000014110d: add [rsi-0x70], ah; endbr64; mov rax, [rip+0xaaed5]; mov rax, fs:[rax]; ret; 
0x000000001255dd: add [rsi-0x70], ah; endbr64; ret; 
0x0000000017868d: add [rsi-0x70], ah; mov [rcx], dx; ret; 
0x000000001786bd: add [rsi-0x70], ah; mov [rcx], edx; mov [rcx+0x4], dl; ret; 
0x000000000b7e7d: add [rsi-0x70], ah; mov [rdi], dx; ret; 
0x000000000b7ead: add [rsi-0x70], ah; mov [rdi], edx; mov [rdi+0x4], dl; ret; 
0x0000000017a9dd: add [rsi-0x70], ah; mov al, [rcx]; mov [rdx], al; lea rax, [rdx]; ret; 
0x000000000b6e8d: add [rsi-0x70], ah; mov dx, [rsi]; mov [rdi], dx; ret; 
0x0000000014735d: add [rsi-0x70], ah; mov rax, [rbp+0x8]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x0000000014692d: add [rsi-0x70], ah; mov rax, [rbx+0x20]; mov rsi, r13; mov rdi, rbp; call qword ptr [rax+0x8]; 
0x000000000b947d: add [rsi-0x70], ah; movdqu xmm0, [rsi]; movdqu [rdi], xmm0; lea rax, [rdi+0x10]; ret; 
0x000000000b861d: add [rsi-0x70], ah; movdqu xmm0, [rsi]; movdqu [rdi], xmm0; lea rax, [rdi+0xf]; ret; 
0x000000000319ed: add [rsi-0x70], ah; ret; 
0x000000000baf4d: add [rsi-0x70], ah; xor ch, ch; mov [rdi], ch; ret; 
0x000000000cf38d: add [rsi-0x70], ah; xor rax, rax; ret; 
0x000000001766bf: add [rsi-0x75], ah; add [rsi-0x77], esp; add cl, [rax-0x77]; clc; ret; 
0x00000000041c44: add [rsi-0x77], ah; and al, 0xf0; fstp tbyte ptr [rdi], st; fld st, tbyte ptr [rsp-0x18]; ret; 
0x0000000014d004: add [rsi-0x77], ah; insb [rdi], dx; mov eax, 0x1; ret; 
0x0000000013a32a: add [rsi-0x77], ah; rol r14, 0x45; ret; 
0x00000000157f00: add [rsi-0x77], ah; shl byte ptr [rsi+0xf], 0xc5; ret far; 
0x000000000b3a07: add [rsi-0x77], esp; add cl, [rax-0x77]; clc; ret; 
0x000000000b3a17: add [rsi-0x77], esp; add cl, [rdx+0x42880241]; add cl, [rax-0x77]; clc; ret; 
0x00000000043c8d: add [rsi], ah; add [rax], al; add [rax-0x1], bh; ret; 
0x0000000017c65c: add [rsi], al; add [rax], al; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x00000000112829: add [rsi], dl; add [rax], al; add [rax+0x1], bh; ret; 
0x00000000043099: add [rsi], dl; add [rax], al; add [rax-0x1], bh; ret; 
0x0000000015ce81: add [rsi], dl; add [rax], al; add [rcx+rcx*4-0x40], al; mov qword ptr [rdx], 0x0; ret; 
0x000000000e3279: add [rsi], dl; add [rax], al; add bl, ch; ret; 
0x000000000c6acc: add [rsp+rax+0x44], dh; mov eax, eax; ret; 
0x00000000061865: add ah, [rax]; add [rax], al; add cl, ch; sar ebp, 0xff; call qword ptr [rax+0x222ebe8]; 
0x00000000127c0f: add ah, [rcx]; enter 0x4c88, 0x24; and [rax+0x411f2444], cl; call qword ptr [rsp+0x28]; 
0x0000000019021e: add ah, [rdx-0xf]; jl short 0x000000000019026b; adc [rsi+0x3], edx; ret; 
0x000000000b3b4c: add ah, [rsi+0xf]; adc cl, [rcx+0x5]; movlpd [rdx+0x5], xmm1; mov rax, rdi; ret; 
0x000000000b3b6c: add ah, [rsi+0xf]; adc cl, [rcx+0x6]; movlpd [rdx+0x6], xmm1; mov rax, rdi; ret; 
0x000000000b3b8c: add ah, [rsi+0xf]; adc cl, [rcx+0x7]; movlpd [rdx+0x7], xmm1; mov rax, rdi; ret; 
0x000000000b66dc: add ah, [rsi+0xf]; adc cl, [rcx+0x8]; movlpd [rdx+0x8], xmm1; mov rax, rdi; ret; 
0x000000000b39db: add ah, [rsi+0xf]; adc ecx, [rdx+0x8]; mov rax, rdi; ret; 
0x000000000b3a04: add ah, [rsi-0x75]; add [rsi-0x77], esp; add cl, [rax-0x77]; clc; ret; 
0x0000000017aa43: add ah, [rsi-0x75]; add al, 0x66; mov [rdx+0x4], eax; lea rax, [rdx+0x5]; ret; 
0x000000000b3a68: add ah, [rsi-0x75]; add al, 0x66; mov [rdx+0x4], eax; mov rax, rdi; ret; 
0x000000000b3aec: add ah, [rsi-0x75]; or [r14-0x77], spl; or [rax-0x77], cl; clc; ret; 
0x000000000baf85: add ah, [rsi-0x77]; js 0xffffffffed3bb1e5; mov [rdi+0x3], ch; ret; 
0x000000000bc15a: add ah, bh; add eax, [rax]; cmp edx, 0xff; cmove rax, rcx; ret; 
0x000000000bc13f: add ah, bh; add eax, [rax]; ret; 
0x000000000bc239: add ah, bh; inc dword ptr [rbx]; div ecx; mov eax, eax; ret; 
0x000000000bc18a: add ah, bh; inc dword ptr [rbx]; ret; 
0x0000000002e5b1: add al, 0x0; add [rax+0x39], cl; ret far; 
0x00000000096d9a: add al, 0x0; add [rax-0x7d], cl; ret far; 
0x000000000ef994: add al, 0x0; add [rax-0x7d], cl; ret; 
0x00000000076e16: add al, 0x0; add [rax-0x80], al; jmp qword ptr [rdi+rcx]; 
0x0000000014d032: add al, 0x0; add [rax], al; add [rax+0x1], bh; ret; 
0x00000000147327: add al, 0x0; add [rax], al; mov rdi, rbp; lea r9, [rsp+0x20]; call qword ptr [rax]; 
0x00000000151750: add al, 0x0; add [rax], al; movdqa xmm0, [rip+0x6b534]; movaps [rsp+0x20], xmm0; call qword ptr [rax+0x28]; 
0x000000001539d1: add al, 0x0; add [rax], al; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x000000000cfb83: add al, 0x0; add [rax], al; ret; 
0x0000000010d4e4: add al, 0x0; add [rax], al; syscall; 
0x00000000062416: add al, 0x0; add [rbp+0x41], bl; pop rsp; pop r13; ret; 
0x000000000aba58: add al, 0x0; add [rbp-0x77], cl; ret far; 
0x000000000ef98b: add al, 0x0; add [rbx-0x7bf0fd02], al; mov [rax+rax], eax; add [rax-0x7d], cl; ret; 
0x0000000011b167: add al, 0x0; add [rcx+rcx*4+0x44], cl; and al, 0x8; mov rdi, [r8]; call rbx; 
0x000000001381b5: add al, 0x0; add [rcx+rcx*4-0x2], cl; mov rdi, r12; call rbp; 
0x0000000013494a: add al, 0x0; add [rcx+rcx*4-0x6], cl; mov rsi, r14; mov rdi, rbx; call rax; 
0x000000000ecb2b: add al, 0x0; add [rcx-0x75], cl; adc [r8+0x63], r9b; ret; 
0x0000000013e396: add al, 0x0; add [rcx-0x7d], al; ret; 
0x0000000004725a: add al, 0x0; add [rcx], al; lea rdi, [rbp+0x908]; call qword ptr [rbp+0xf10]; 
0x00000000053905: add al, 0x0; add [rcx], dh; shr cl, 0xf8; idiv bh; call qword ptr [rax+0x20247c83]; 
0x0000000013f785: add al, 0x0; add [rdi], cl; mov dh, 0x53; add [rax-0x7d], ecx; ret; 
0x00000000127d23: add al, 0x0; add [rdx], al; call rax; 
0x00000000094e7a: add al, 0x0; add [rsi+0x1], dh; ret; 
0x00000000130a3d: add al, 0x0; add al, ch; ret far; 
0x000000000b7b4d: add al, 0x0; add bl, al; nop [rax+rax]; nop [rax]; ret; 
0x0000000005d137: add al, 0x0; add dh, dh; ret; 
0x0000000012d9aa: add al, 0x0; cmovne rax, rdx; ret; 
0x000000000482a2: add al, 0x0; mov rax, [rsp+0x8]; add rsp, 0x28; ret; 
0x0000000016341f: add al, 0x0; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000016e04f: add al, 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016ec47: add al, 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016edc6: add al, 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016edc7: add al, 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000e439a: add al, 0x0; nop [rax]; endbr64; mov eax, 0x79; syscall; 
0x000000000c6ac4: add al, 0x10; cmp r8d, 0xff; je short 0x00000000000c6ad3; mov eax, r8d; ret; 
0x0000000014adb4: add al, 0x10; mov [rdi+0x7], al; ret; 
0x000000001232a9: add al, 0x10; shr eax, cl; and eax, 0x1; ret; 
0x00000000122c6a: add al, 0x10; shr r8d, cl; and r8d, 0x1; mov eax, r8d; ret; 
0x0000000012339a: add al, 0x11; ret; 
0x000000000bc1d4: add al, 0x12; pop rbx; and eax, 0x7ff80000; ret; 
0x0000000007e047: add al, 0x13; add [rax+0x63], cl; add al, 0x88; add rax, rdx; jmp rax; 
0x000000000a141b: add al, 0x17; mov [rsi+rdx], cl; mov [rsi+rdx+0x1], al; jne short 0x00000000000a1410; ret; 
0x000000000aa415: add al, 0x17; movzx edx, byte ptr [rsi+rdx]; sub eax, edx; ret; 
0x00000000183b1c: add al, 0x17; movzx edx, byte ptr [rsi+rdx]; sub eax, edx; vzeroupper; ret; 
0x000000000aa3aa: add al, 0x17; sub eax, ecx; ret; 
0x0000000018ab4e: add al, 0x17; vzeroupper; ret; 
0x0000000014d022: add al, 0x1; add [rax], al; add [rax+0x1], bh; ret; 
0x0000000013bcfe: add al, 0x1; add [rax], al; cmove eax, edx; ret; 
0x000000000cefa8: add al, 0x1; add [rax], al; ret; 
0x0000000010f428: add al, 0x1; add [rax], al; syscall; 
0x000000000dd059: add al, 0x1; add [rax], al; test rax, rax; je short 0x00000000000dd098; call rax; 
0x00000000062fea: add al, 0x1; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000000ec498: add al, 0x1; mov byte ptr [rdi+0x8], 0x1; mov [rdi], al; mov eax, 0x1; ret; 
0x000000000de26d: add al, 0x1; pop rbx; pop rbp; pop r12; ret; 
0x00000000063061: add al, 0x1; xor eax, eax; ret; 
0x000000001476c1: add al, 0x24; add [rax], al; add [rax], al; call qword ptr [rax+0x20]; 
0x0000000013cca7: add al, 0x24; add [rax], al; add [rax], al; call rax; 
0x000000000300ae: add al, 0x24; add [rbx+0x5d], bl; pop r12; ret; 
0x000000001156fd: add al, 0x24; add [rcx+rcx*4-0x20], cl; pop r12; ret; 
0x00000000155b9f: add al, 0x24; add al, [rax]; add [rax], al; call r8; 
0x00000000042a23: add al, 0x24; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000010ea07: add al, 0x24; add rsp, 0x18; ret; 
0x000000001203a1: add al, 0x24; add rsp, 0x20; pop rbp; ret; 
0x0000000010c1f5: add al, 0x24; add rsp, 0x28; ret; 
0x00000000120467: add al, 0x24; add rsp, 0x30; pop rbp; ret; 
0x00000000122948: add al, 0x24; add rsp, 0x38; ret; 
0x000000001229a9: add al, 0x24; add rsp, 0x40; ret; 
0x0000000014911e: add al, 0x24; call qword ptr [rax+0x8]; 
0x000000001518b6: add al, 0x24; call qword ptr [rdx+0x20]; 
0x000000000457ad: add al, 0x24; call rax; 
0x00000000047253: add al, 0x24; lock add qword ptr [rax+0x460], 0x1; lea rdi, [rbp+0x908]; call qword ptr [rbp+0xf10]; 
0x0000000008f78d: add al, 0x24; mov edx, 0x1; mov rdi, rbp; call qword ptr [rax+0x80]; 
0x0000000008746b: add al, 0x24; mov esi, r12d; mov rdi, r14; call qword ptr [rax+0x18]; 
0x00000000045912: add al, 0x24; mov r13, r15; add r15, r12; call rax; 
0x00000000156ae2: add al, 0x24; mov rax, [rbp+0x8]; call qword ptr [rax+0x8]; 
0x00000000149058: add al, 0x24; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x00000000138510: add al, 0x24; mov rdi, r12; call rax; 
0x000000000920b5: add al, 0x24; mov rdi, r15; lea rbx, [rsi+0x1]; movzx esi, byte ptr [rsi]; call qword ptr [rax+0x18]; 
0x00000000045712: add al, 0x24; mov rdx, r14; mov rsi, r13; mov rdi, r12; call rax; 
0x0000000008f7ca: add al, 0x24; mov rdx, r8; mov rsi, r12; mov rdi, rbp; call qword ptr [rax+0x78]; 
0x0000000004589d: add al, 0x24; mov rsi, r12; mov rdi, r13; call rax; 
0x0000000012533b: add al, 0x24; pop rbx; pop rbp; pop r12; ret; 
0x00000000094c77: add al, 0x25; adc [rax], al; add [rax], al; ret; 
0x0000000002443e: add al, 0x25; add [rax], al; add [rax], al; ret; 
0x000000000240e4: add al, 0x25; xor [rax], al; add [rax], al; call rax; 
0x00000000024423: add al, 0x25; xor [rax], al; add [rax], al; jmp rax; 
0x0000000013cc9f: add al, 0x25; xor [rax], al; add [rax], al; mov qword ptr [rsp], 0x0; call rax; 
0x000000000748f3: add al, 0x2; lea rdx, [rip-0x4a2]; movsxd rax, [rcx+rax*4]; add rax, rdx; jmp rax; 
0x00000000033e2d: add al, 0x2; mov eax, r8d; ret; 
0x0000000014925e: add al, 0x2; pop rbx; pop rbp; mov eax, r8d; ret; 
0x00000000033dcb: add al, 0x2; test eax, eax; jne short 0x0000000000033dd8; mov eax, r8d; ret; 
0x0000000013c425: add al, 0x2b; pop rbx; pop rbp; ret; 
0x0000000005f396: add al, 0x30; add [rax], al; add [rcx+0x39], cl; ret; 
0x0000000005b4c2: add al, 0x30; add [rax], al; mov eax, 0x9e; syscall; 
0x000000000bafb9: add al, 0x30; in eax, dx; mov [rdi+0x5], ch; ret; 
0x000000000bafcb: add al, 0x30; in eax, dx; mov [rdi+0x6], ch; ret; 
0x000000000b1ade: add al, 0x31; ret; 
0x000000000d4272: add al, 0x31; rol byte ptr [rcx-0x5c28f401], 0x0; setb al; add eax, 0x16d; ret; 
0x000000001012d5: add al, 0x34; add cl, ch; ret far; 
0x000000000b19da: add al, 0x37; ret; 
0x00000000184149: add al, 0x38; movzx edx, byte ptr [rdx+rdi]; sub eax, edx; vzeroupper; ret; 
0x000000000bdfe6: add al, 0x39; bnd je short 0x00000000000bdfef; test edx, edx; jne short 0x00000000000bdfe0; ret; 
0x000000000ebe81: add al, 0x39; ret far; 
0x000000000ebe82: add al, 0x39; ret far; 
0x0000000009699c: add al, 0x39; ret; 
0x000000000a87d0: add al, 0x39; shl byte ptr [rbp-0x15], 0x1; mov rax, r8; ret; 
0x0000000017c958: add al, 0x3; add [rax], al; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x0000000018e767: add al, 0x3; add [rax], al; xor eax, eax; ret; 
0x00000000077b97: add al, 0x3; movsxd rax, [rdi+rax*4]; add rax, rbx; jmp rax; 
0x00000000077b39: add al, 0x3; movsxd rax, [rsi+rax*4]; add rax, rbx; jmp rax; 
0x00000000104429: add al, 0x3a; mov rdi, [rbp-0x1b0]; mov rdx, [r12]; mov rax, [rbp-0x1e0]; call rax; 
0x00000000087e1f: add al, 0x3a; ret; 
0x000000000cef71: add al, 0x3b; add al, 0xf; test [rcx+rax], esi; add [rax], al; ret; 
0x000000000c6ace: add al, 0x44; mov eax, eax; ret; 
0x000000000cf18b: add al, 0x44; mov eax, ecx; ret; 
0x0000000011f2dc: add al, 0x48; add esp, 0x20; pop rbp; ret; 
0x00000000120c2f: add al, 0x48; add esp, 0x28; ret; 
0x0000000010c405: add al, 0x48; add esp, 0x8; pop rbx; pop rbp; ret; 
0x0000000005b361: add al, 0x48; cmp edi, eax; jbe short 0x000000000005b35a; mov rax, r10; ret; 
0x000000000b851b: add al, 0x48; lea eax, [rdi+0x5]; ret; 
0x000000000b936b: add al, 0x48; lea eax, [rdi+0x6]; ret; 
0x000000000a8b8c: add al, 0x48; lea eax, [rdi+rdx-0x1]; ret; 
0x0000000017aa38: add al, 0x48; lea eax, [rdx+0x4]; ret; 
0x0000000017aa4a: add al, 0x48; lea eax, [rdx+0x5]; ret; 
0x0000000017851a: add al, 0x48; lea ecx, [rdx+0x4]; jne 0x0000000000178810; ret; 
0x000000000b7747: add al, 0x48; lea edi, [rdi+0x4]; jne 0x00000000000b7fa0; ret; 
0x000000000b8e2b: add al, 0x48; lea edi, [rdi+0x4]; jne 0x00000000000b97f0; ret; 
0x0000000018a3c7: add al, 0x48; lea edi, [rdi+0x4]; jne 0x000000000018a610; vzeroupper; ret; 
0x0000000018b0fb: add al, 0x48; lea edi, [rdi+0x4]; jne 0x000000000018b340; vzeroupper; ret; 
0x00000000094ea2: add al, 0x48; lea edx, [rax+0x1]; mov [rip+0x157422], rdx; ret; 
0x000000000855bb: add al, 0x48; mov [rax], ecx; mov eax, [rdx]; ret; 
0x0000000013de92: add al, 0x48; mov [rbx+0x10], eax; mov eax, 0x14; add edx, 0x1; syscall; 
0x0000000016d93a: add al, 0x48; mov [rdi], ecx; ret; 
0x000000000860f2: add al, 0x48; mov [rdx+0x20], esi; mov [rcx], eax; ret; 
0x000000001571eb: add al, 0x48; mov eax, [rdi+0x8]; call qword ptr [rax+0x48]; 
0x00000000156db4: add al, 0x48; mov eax, [rdi+0x8]; sar rdx, 0x20; mov [rsp], edx; call qword ptr [rax+0x48]; 
0x00000000156f94: add al, 0x48; mov eax, [rdi+0x8]; shr rdx, 0x20; mov [rsp], edx; call qword ptr [rax+0x48]; 
0x000000000b3a4d: add al, 0x48; mov eax, edi; ret; 
0x0000000016d933: add al, 0x48; mov ecx, [rsi]; mov [rdi+0x4], rdx; mov [rdi], rcx; ret; 
0x00000000156d7e: add al, 0x48; mov edi, ebp; call qword ptr [rax+0x40]; 
0x00000000156dcf: add al, 0x48; mov edi, ebp; call qword ptr [rax+0x48]; 
0x000000000b1d88: add al, 0x48; xor eax, eax; ret; 
0x0000000014a51a: add al, 0x48; xor eax, edx; mov [rdi], r8; mov [rdi+0x8], rax; ret; 
0x000000000b8e49: add al, 0x49; sub eax, 0x5; lea rdi, [rdi+0x5]; jne 0x00000000000b97f0; ret; 
0x000000000b778b: add al, 0x49; sub eax, 0x6; lea rdi, [rdi+0x6]; jne 0x00000000000b7fa0; ret; 
0x000000000bce33: add al, 0x4c; cmovne eax, eax; mov rax, r8; ret; 
0x0000000013c795: add al, 0x4c; lea eax, [rdi+rsi+0x8]; mov rax, r8; ret; 
0x000000000bd1b6: add al, 0x4c; lea ecx, [rsp+0x18]; call rbx; 
0x000000000bd5cf: add al, 0x4c; lea ecx, [rsp+0x20]; call rbx; 
0x0000000012cee8: add al, 0x50; shr ax, 0xe; and eax, 0x1; ret; 
0x0000000010c52d: add al, 0x5b; pop rbp; pop r12; ret; 
0x0000000017aa46: add al, 0x66; mov [rdx+0x4], eax; lea rax, [rdx+0x5]; ret; 
0x000000000b3a6b: add al, 0x66; mov [rdx+0x4], eax; mov rax, rdi; ret; 
0x000000000b8ce8: add al, 0x67; str [rbx+0x63]; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000002f282: add al, 0x72; adc ecx, [rcx+0x29d231fb]; ret; 
0x000000000bc061: add al, 0x73; adc eax, [rax+0x157701fa]; jb short 0x00000000000bc06d; mov [rdi], cl; ret; 
0x0000000010d158: add al, 0x74; or [rax+0x1c], edi; syscall; 
0x000000000ec4d2: add al, 0x74; xchg edi, eax; mov byte ptr [rdi+0x8], 0x1e; mov eax, 0x2; ret; 
0x00000000047896: add al, 0x75; push rcx; add rsp, 0x18; ret; 
0x0000000014e08a: add al, 0x75; ret; 
0x000000000341f4: add al, 0x78; and ax, 0x1000; movzx eax, ax; ret; 
0x000000000341d4: add al, 0x78; and ax, 0x100; movzx eax, ax; ret; 
0x000000000341b4: add al, 0x78; and ax, 0x2000; movzx eax, ax; ret; 
0x00000000034134: add al, 0x78; and ax, 0x200; movzx eax, ax; ret; 
0x00000000034174: add al, 0x78; and ax, 0x4000; movzx eax, ax; ret; 
0x000000000340d4: add al, 0x78; and ax, 0x400; movzx eax, ax; ret; 
0x00000000034154: add al, 0x78; and ax, 0x8000; movzx eax, ax; ret; 
0x00000000034114: add al, 0x78; and ax, 0x800; movzx eax, ax; ret; 
0x00000000034274: add al, 0x78; and eax, 0x1; ret; 
0x000000000340f4: add al, 0x78; and eax, 0x2; movzx eax, ax; ret; 
0x00000000034194: add al, 0x78; and eax, 0x4; movzx eax, ax; ret; 
0x000000000340b4: add al, 0x78; and eax, 0x8; movzx eax, ax; ret; 
0x000000000b7898: add al, 0x7; add [rax], al; ret; 
0x000000000b14f1: add al, 0x7; cmp [rax], sil; cmovne rax, rdx; ret; 
0x0000000018cbae: add al, 0x7; cmp esi, [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x0000000018806e: add al, 0x7; cmp sil, [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x000000000b171c: add al, 0x7; ret; 
0x0000000018b204: add al, 0x7; vzeroupper; ret; 
0x000000000b7608: add al, 0x7c; str [rbx+0x63]; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000a8b18: add al, 0x80; add rax, r8; notrack jmp rax; 
0x000000000a1629: add al, 0x80; jb short 0x00000000000a163b; sub al, bl; ret; 
0x000000000bc7cc: add al, 0x80; sub eax, [r8+r9*4]; je short 0x00000000000bc7b0; ret; 
0x0000000006354a: add al, 0x81; add rax, rcx; notrack jmp rax; 
0x000000000748fe: add al, 0x81; add rax, rdx; jmp rax; 
0x000000000bc772: add al, 0x81; je short 0x00000000000bc758; ret; 
0x00000000047c5d: add al, 0x81; mov [rsi+0x10], r9; mov [rsi+0x28], rax; xor eax, eax; ret; 
0x0000000017fe2b: add al, 0x81; mov edx, [rcx+rdx*4]; sub eax, edx; ret; 
0x000000000bc76e: add al, 0x81; sub eax, [rcx+r8*4]; je short 0x00000000000bc758; ret; 
0x00000000181703: add al, 0x81; sub eax, edx; ret; 
0x000000000901d7: add al, 0x82; add rax, r10; notrack jmp rax; 
0x00000000023e8b: add al, 0x82; add rax, rdx; notrack jmp rax; 
0x00000000194b6c: add al, 0x82; add rdx, rax; notrack jmp rdx; 
0x000000000aee17: add al, 0x82; sub eax, ecx; ret; 
0x00000000090209: add al, 0x83; add rax, r11; notrack jmp rax; 
0x000000000e939e: add al, 0x83; call far fword ptr [rbp+0xf]; 
0x00000000155516: add al, 0x83; call far fword ptr [rdx]; 
0x0000000008ad72: add al, 0x83; loop 0x000000000008ad77; mov eax, edx; ret; 
0x0000000008df28: add al, 0x83; loopne 0x000000000008df2d; ret; 
0x0000000013c754: add al, 0x83; loopne 0x000000000013c7d7; ret; 
0x0000000005f4dc: add al, 0x83; ret; 
0x0000000010910d: add al, 0x84; add rax, r12; notrack jmp rax; 
0x000000000bcc65: add al, 0x85; shl byte ptr [rbp-0x12], cl; xor eax, eax; ret; 
0x0000000012edfa: add al, 0x85; shl byte ptr [rbp-0x57], 0x48; mov eax, edi; ret; 
0x000000000bdfea: add al, 0x85; shl byte ptr [rbp-0xf], cl; ret; 
0x000000000740c1: add al, 0x86; add rax, r14; notrack jmp rax; 
0x00000000077b3d: add al, 0x86; add rax, rbx; jmp rax; 
0x0000000007f1eb: add al, 0x86; add rax, rdx; jmp rax; 
0x0000000008065c: add al, 0x86; add rax, rsi; notrack jmp rax; 
0x000000001232a6: add al, 0x86; mov eax, [rax+rdx]; shr eax, cl; and eax, 0x1; ret; 
0x00000000077b9b: add al, 0x87; add rax, rbx; jmp rax; 
0x00000000080e14: add al, 0x87; add rax, rdi; notrack jmp rax; 
0x0000000017aa35: add al, 0x88; add al, 0x48; lea eax, [rdx+0x4]; ret; 
0x000000000b3a4a: add al, 0x88; add al, 0x48; mov eax, edi; ret; 
0x0000000007787d: add al, 0x88; add rax, rbx; jmp rax; 
0x00000000077f6c: add al, 0x88; add rax, rbx; mov dword ptr [rbp-0x4e0], 0x1; mov r10, rdx; jmp rax; 
0x0000000007e04c: add al, 0x88; add rax, rdx; jmp rax; 
0x0000000007e5d9: add al, 0x88; add rax, rdx; mov dword ptr [rbp-0x4d0], 0x1; mov r9, rsi; jmp rax; 
0x000000000bc7d0: add al, 0x88; je short 0x00000000000bc7b0; ret; 
0x000000001571e7: add al, 0x89; and al, 0x4; mov rax, [rdi+0x8]; call qword ptr [rax+0x48]; 
0x000000000b7764: add al, 0x89; cmovns eax, [rbx-0x72b7fa18]; jg short 0x00000000000b7774; jne 0x00000000000b7fa0; ret; 
0x000000000bafb4: add al, 0x89; js 0xffffffffed3bb413; mov [rdi+0x5], ch; ret; 
0x000000000bafc5: add al, 0x89; pcmpgtd mm1, [rcx-0x12cffba9]; mov [rdi+0x6], ch; ret; 
0x0000000008cd87: add al, 0x8; add [rax], al; ret; 
0x00000000122a1b: add al, 0x8; mov ecx, edi; shr eax, cl; and eax, 0x1; ret; 
0x000000000aa57f: add al, 0x8; movzx edx, byte ptr [rdx+rcx]; sub eax, edx; ret; 
0x00000000183c99: add al, 0x8; movzx edx, byte ptr [rdx+rcx]; sub eax, edx; vzeroupper; ret; 
0x00000000031adb: add al, 0x8a; add r8, rdx; notrack jmp r8; 
0x00000000110b34: add al, 0x8b; adc al, 0x2; mov rdi, [rbp-0x118]; mov rsi, r9; call qword ptr [rbp-0xf0]; 
0x000000000b3a34: add al, 0x8b; add [rcx-0x776b7fe], ecx; ret; 
0x0000000006c90d: add al, 0x8e; add rax, rsi; notrack jmp rax; 
0x0000000014cf78: add al, 0x8f; add rax, rdi; notrack jmp rax; 
0x000000000778d8: add al, 0x90; add rax, rbx; jmp rax; 
0x0000000007b1c4: add al, 0x90; lea rdx, [rip-0x4d4]; add rax, rdx; jmp rax; 
0x0000000006495d: add al, 0x91; add rax, rcx; notrack jmp rax; 
0x000000000bc1a3: add al, 0x96; add rax, rsi; notrack jmp rax; 
0x000000000bce6a: add al, 0x98; pop rbx; pop rbp; pop r12; ret; 
0x000000000ff3e1: add al, 0x9; ret; 
0x000000000eff97: add al, 0x9a; add rax, rdx; notrack jmp rax; 
0x00000000064040: add al, 0xa1; add rax, rcx; notrack jmp rax; 
0x0000000006c197: add al, 0xa1; mov r11d, [rbp-0x5c8]; add rax, rcx; notrack jmp rax; 
0x00000000064624: add al, 0xa7; add rax, rdi; notrack jmp rax; 
0x00000000123142: add al, 0xa; ret; 
0x000000000e5479: add al, 0xaa; add rax, rdx; notrack jmp rax; 
0x0000000014604f: add al, 0xb1; shr rdx, 0x3; add rax, rcx; notrack jmp rax; 
0x000000000e4ae5: add al, 0xb2; add rax, rdx; notrack jmp rax; 
0x00000000157827: add al, 0xb8; add [rax], eax; add [rax], al; ret; 
0x0000000003448c: add al, 0xb8; ret; 
0x000000000fce24: add al, 0xba; add rax, r10; notrack jmp rax; 
0x00000000101094: add al, 0xba; add rax, rdx; notrack jmp rax; 
0x000000000fccc2: add al, 0xbe; add rax, r14; notrack jmp rax; 
0x000000000bc0db: add al, 0xbe; add rax, rsi; notrack jmp rax; 
0x00000000190ce2: add al, 0xc3; nop [rax+rax]; lea rax, [rdi+0x5]; ret; 
0x000000001786d5: add al, 0xc3; nop [rax+rax]; mov [rcx], edx; mov [rcx+0x3], edx; ret; 
0x000000001786c4: add al, 0xc3; nop [rax+rax]; mov [rcx], edx; mov [rcx+0x4], dx; ret; 
0x000000000b7ec5: add al, 0xc3; nop [rax+rax]; mov [rdi-0x1], rdx; ret; 
0x000000000b7eb4: add al, 0xc3; nop [rax+rax]; mov [rdi], edx; mov [rdi+0x4], dx; ret; 
0x0000000013fe93: add al, 0xc7; add [rdx], al; add [rax], al; xor eax, 0xfffbc2e9; call qword ptr [rax+0x244c8b44]; 
0x0000000005f394: add al, 0xc7; add al, 0x30; add [rax], al; add [rcx+0x39], cl; ret; 
0x00000000055879: add al, 0xc8; mov [r9+rcx*8], rax; xor eax, eax; ret; 
0x0000000005587d: add al, 0xc9; xor eax, eax; ret; 
0x000000000dd78c: add al, 0xd0; ret; 
0x000000001609ab: add al, 0xd7; xor eax, eax; ret; 
0x00000000198389: add al, 0xd8; test rax, rax; je short 0x0000000000198392; call rax; 
0x000000000a0518: add al, 0xd9; or al, 0x0; cmovne rax, rdx; ret; 
0x00000000030c4f: add al, 0xe0; test rax, rax; je short 0x0000000000030c58; call rax; 
0x00000000120c26: add al, 0xe8; cmp r14b, dil; dec dword ptr [rbx+0x48042444]; add esp, 0x28; ret; 
0x000000000c7249: add al, 0xe8; push rcx; ret far; 
0x0000000012dec4: add al, 0xe9; mov dh, 0x71; cmc; call qword ptr [rax-0x18]; 
0x0000000013546f: add al, 0xe9; ret far; 
0x00000000116959: add al, 0xe9; ud0 edi, edi; call qword ptr [rax+0x305c02c7]; 
0x0000000010c60e: add al, 0xeb; ret; 
0x0000000016dca2: add al, 0xf3; movq [rdi], mm1; ret; 
0x000000000a3b0b: add al, 0xf9; jmp qword ptr [rsi-0x70]; 
0x000000000340d9: add al, 0xf; mov bh, 0xc0; ret; 
0x000000000a8a21: add al, 0xf; mov dh, 0x54; and al, 0x16; mov [rdi+0x6], dl; ret; 
0x000000000a8ade: add al, 0xf; mov dh, 0x54; and al, 0xe; mov [rax+0x6], dl; ret; 
0x0000000017df3d: add al, 0xf; movzx edx, byte ptr [rsi+rcx]; sub eax, edx; ret; 
0x00000000184ce6: add al, 0xf; movzx edx, byte ptr [rsi+rcx]; sub eax, edx; vzeroupper; ret; 
0x000000000cef74: add al, 0xf; test [rcx+rax], esi; add [rax], al; ret; 
0x000000000ff890: add al, 0xf; test [rcx], dh; add al, [rax]; add [rbx+0x634801c3], al; ret far; 
0x0000000017c8ce: add al, 0xf; test [rdx-0x7ffffffd], ecx; cmp [rcx], al; sbb rax, 0xffffffffffffffff; ret; 
0x000000000b774b: add al, 0xf; test [rsi+0x8], ecx; add [rax], al; ret; 
0x000000000ffd9d: add al, 0xf; test ah, cl; add eax, [rax]; add [rbx+0x634c01c3], al; ret far; 
0x0000000012180c: add al, [r10]; add al, ch; ret far; 
0x000000000abf62: add al, [rax]; add [rax+0x1], cl; clc; add rax, rcx; ret; 
0x000000001482fc: add al, [rax]; add [rax+0x5d5bc031], dl; pop r12; ret; 
0x000000000f08cc: add al, [rax]; add [rax+0x63], cl; ret; 
0x00000000116785: add al, [rax]; add [rax-0x3d7cb7fe], cl; add [rax-0x7d], ecx; ret; 
0x00000000083ce1: add al, [rax]; add [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x000000001191ff: add al, [rax]; add [rax-0x73], cl; add eax, 0xd66b7; add rsp, 0x18; ret; 
0x00000000118cb7: add al, [rax]; add [rax-0x73], cl; add eax, 0xd6baf; add rsp, 0x8; ret; 
0x000000000d4462: add al, [rax]; add [rax-0x77], cl; ret far; 
0x0000000010f8ca: add al, [rax]; add [rax-0x77], cl; ret; 
0x000000001903c8: add al, [rax]; add [rax-0x77], cl; shl ebx, 0x1; movsb [rdi], [rsi]; ret; 
0x00000000194c61: add al, [rax]; add [rax-0x7b], cl; ror byte ptr [rdi], 0x84; ret; 
0x0000000017c98b: add al, [rax]; add [rax-0x7cb7fec8], al; fdivr st, st(7); ret; 
0x0000000006e413: add al, [rax]; add [rax-0x7d], cl; ret; 
0x00000000057b6c: add al, [rax]; add [rax], al; add [rax+0x1], bh; ret; 
0x00000000057d7f: add al, [rax]; add [rax], al; add [rax+0x2], bh; ret; 
0x00000000141303: add al, [rax]; add [rax], al; add [rax], al; add [rbx-0x7cb7efab], cl; ret; 
0x000000001411d1: add al, [rax]; add [rax], al; add [rax], al; add [rbx-0x7cb7efbb], cl; ret; 
0x0000000014db03: add al, [rax]; add [rax], al; add rdi, 0x10; jmp rcx; 
0x00000000150653: add al, [rax]; add [rax], al; add rdi, 0x58; jmp rcx; 
0x0000000014fd13: add al, [rax]; add [rax], al; add rdi, 0x68; jmp rcx; 
0x0000000014ced6: add al, [rax]; add [rax], al; add rdi, 0xc8; jmp rcx; 
0x000000001106fe: add al, [rax]; add [rax], al; call qword ptr [rbp+0x40]; 
0x00000000155ba1: add al, [rax]; add [rax], al; call r8; 
0x00000000102ab5: add al, [rax]; add [rax], al; cmove eax, edx; ret; 
0x00000000151bb6: add al, [rax]; add [rax], al; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x00000000043030: add al, [rax]; add [rax], al; mov eax, 0xe; syscall; 
0x0000000008cf81: add al, [rax]; add [rax], al; mov eax, r9d; syscall; 
0x000000000945eb: add al, [rax]; add [rax], al; mov esi, 0x80; mov eax, 0xca; syscall; 
0x00000000054f5f: add al, [rax]; add [rax], al; mov r10d, 0x8; mov eax, 0xe; syscall; 
0x0000000008954c: add al, [rax]; add [rax], al; mov rdi, r15; call qword ptr [r13+0x80]; 
0x00000000082258: add al, [rax]; add [rax], al; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x0000000009009d: add al, [rax]; add [rax], al; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x00000000153bef: add al, [rax]; add [rax], al; movups [rsp+0x18], xmm1; movups [rsp+0x38], xmm0; call qword ptr [rax+0x18]; 
0x00000000153e15: add al, [rax]; add [rax], al; movups [rsp+0xb8], xmm3; movups [rsp+0xd8], xmm0; call rax; 
0x00000000057d85: add al, [rax]; add [rax], al; ret; 
0x0000000013c19d: add al, [rax]; add [rax], al; sub esi, 0x1; mov [rdi+0x1], sil; ret; 
0x000000000dd013: add al, [rax]; add [rax], al; syscall; 
0x0000000011d04a: add al, [rax]; add [rax], al; xor eax, eax; ret; 
0x00000000086bdb: add al, [rax]; add [rbp+0x41], bl; pop rsp; pop r13; ret; 
0x000000000ed882: add al, [rax]; add [rbp-0x73], cl; jmp qword ptr [rsi+0x41]; 
0x000000000abbd8: add al, [rax]; add [rbp-0x77], cl; ret far; 
0x000000000445b5: add al, [rax]; add [rbx+0x5d], bl; pop r12; pop r13; ret; 
0x000000000ff894: add al, [rax]; add [rbx+0x634801c3], al; ret far; 
0x000000000f0b32: add al, [rax]; add [rbx-0x72bed3a7], cl; add [rcx], edi; ret; 
0x0000000012c699: add al, [rax]; add [rbx-0x7af0fe05], al; ret far; 
0x0000000011b31e: add al, [rax]; add [rcx+rcx*4+0x44], cl; and al, 0x8; mov rdi, [r8]; call rbx; 
0x0000000011b2b1: add al, [rax]; add [rcx+rcx*4+0x44], cl; and al, 0x8; mov rdi, [r8]; call rbx; 
0x0000000008eb7a: add al, [rax]; add [rcx+rcx*4-0x16], al; mov rsi, r12; mov rdi, rbp; call qword ptr [r15+0x80]; 
0x00000000089473: add al, [rax]; add [rcx+rcx*4-0x1e], al; mov rsi, rbp; mov rdi, r15; call qword ptr [r14+0x80]; 
0x0000000012163a: add al, [rax]; add [rcx+rcx*4-0x32], cl; mov edi, r12d; mov eax, r14d; syscall; 
0x0000000011a9c8: add al, [rax]; add [rcx-0x75], cl; notrack call rbx; 
0x0000000010d614: add al, [rax]; add [rcx-0x77], al; ror byte ptr [rax-0x77], 0x1; ret far; 
0x0000000002c68b: add al, [rax]; add [rcx-0x77], al; xor ecx, [rcx-0x77]; ret far; 
0x00000000119cee: add al, [rax]; add [rcx-0x7d], cl; ret far; 
0x0000000007c366: add al, [rax]; add [rcx-0x8ef63], cl; dec dword ptr [rax-0x77]; ret far; 
0x000000000a4465: add al, [rax]; add [rcx-0x9], al; ret; 
0x0000000008ec30: add al, [rax]; add [rcx], dh; idiv byte ptr [rdx+0x2]; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x000000000e61ea: add al, [rax]; add [rdi], cl; test [rcx-0x17ffffff], ebx; jg short 0x00000000000e61f6; jmp qword ptr [rsp+rax*2-0x77]; 
0x0000000013fe96: add al, [rax]; add [rip-0x43d17], dh; call qword ptr [rax+0x244c8b44]; 
0x000000000a5de2: add al, [rax]; add bh, dh; ret; 
0x000000000d686a: add al, [rax]; add dh, dh; rol dword ptr [rdi+rcx], 0x84; ret; 
0x00000000197182: add al, [rax]; divss xmm0, [rip+0x27508]; ret; 
0x0000000018ab18: add al, [rax]; lea rax, [rdi+0x2]; vzeroupper; ret; 
0x00000000172a71: add al, [rax]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000011cc78: add al, [rax]; mov r8, rbx; mov rax, r8; pop rbx; ret; 
0x000000001377ed: add al, [rax]; mov rax, [rsp+0x8]; mov rdi, rbx; call rax; 
0x0000000013850c: add al, [rax]; mov rax, [rsp]; mov rdi, r12; call rax; 
0x0000000013815e: add al, [rax]; mov rdi, [rsp+0x10]; mov rsi, r12; call qword ptr [rsp+0x58]; 
0x0000000013811a: add al, [rax]; mov rdi, r12; call rbp; 
0x0000000013840a: add al, [rax]; mov rdi, r12; call rbx; 
0x00000000137797: add al, [rax]; mov rsi, rbx; mov rdi, rbp; call qword ptr [rsp+0x10]; 
0x00000000194193: add al, [rax]; movsxd r12, [rdi+r12*4]; add rdi, r12; notrack jmp rdi; 
0x00000000194b68: add al, [rax]; movsxd rax, [rdx+rax*4]; add rdx, rax; notrack jmp rdx; 
0x0000000018d58a: add al, [rax]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000193f7a: add al, [rax]; movsxd rcx, [rdi+r12*4]; add rcx, rdi; notrack jmp rcx; 
0x0000000010e598: add al, [rax]; nop [rax+rax]; endbr64; mov eax, 0x49; syscall; 
0x0000000010db7a: add al, [rax]; nop [rax]; endbr64; mov eax, 0x5f; syscall; 
0x00000000134b7b: add al, [rax]; pop r12; pop r13; ret; 
0x0000000013c60e: add al, [rax]; ret; 
0x00000000189088: add al, [rax]; vzeroupper; ret; 
0x00000000160279: add al, [rbp+0x31]; in eax, dx; call qword ptr [rax+0x1e0]; 
0x00000000033dcc: add al, [rbp+0x440775c0]; mov eax, eax; ret; 
0x0000000013c557: add al, [rbp-0x77]; sbb [rbx+0x49], bl; mov [rcx], ecx; ret; 
0x0000000013c267: add al, [rbp-0x78]; dec dword ptr [rcx+r9*4+0x10]; lea eax, [r9+r8+0x2]; pop rbx; ret; 
0x0000000012958d: add al, [rbx+0x194501f9]; rol byte ptr [rcx-0x7d], 0xc0; add [rbp+0x440f45c9], eax; ror dword ptr [rax-0x7d], 0x1; ret; 
0x00000000129638: add al, [rbx+0x194501fe]; rol byte ptr [rcx-0x7d], 0xc0; add [rbp+0x440f45f6], eax; ret far; 
0x00000000062f59: add al, [rbx+0x277426f8]; mov r8d, 0xffffffff; mov eax, r8d; ret; 
0x0000000011f7e7: add al, [rbx+0x377426f8]; mov eax, r8d; ret; 
0x00000000121f9b: add al, [rbx+0x6f74fff8]; add eax, 0x1; mov [rdx], eax; ret; 
0x0000000014fe3a: add al, [rbx-0x37f0fe18]; mov [r8+0x48], eax; mov eax, 0x1; ret; 
0x0000000014d05a: add al, [rbx-0x37f0fe18]; mov [r8+0xa8], eax; mov eax, 0x1; ret; 
0x00000000080e09: add al, [rbx-0x77cdf18]; sub [rdi+0xe], esi; movsxd rax, [rdi+rax*4]; add rax, rdi; notrack jmp rax; 
0x0000000013a7a6: add al, [rbx-0x79f0f008]; clc; add [rax], al; add [rcx-0x77], al; ret; 
0x00000000094622: add al, [rcx+0x39]; ret; 
0x00000000102861: add al, [rcx+rcx*4-0x38]; ret; 
0x00000000033e2e: add al, [rcx+rcx*4-0x40]; ret; 
0x000000000d4264: add al, [rcx-0x70a3d706]; add dh, [rsi+0x3]; ret; 
0x0000000006fdcd: add al, [rcx-0x9]; ret; 
0x0000000013bd28: add al, [rcx]; add [rax], al; cmovne eax, edx; ret; 
0x0000000010dcb5: add al, [rcx]; add [rax], al; syscall; 
0x000000000d13ef: add al, [rcx]; ret; 
0x000000001190a4: add al, [rcx]; sub esi, [rcx]; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x5d], bl; ret; 
0x000000000cfaf6: add al, [rdx+rdx*8-0x2e77ea8c]; and cl, 0xf; je short 0x00000000000cfb20; ret; 
0x0000000012180d: add al, [rdx]; add al, ch; ret far; 
0x00000000057c63: add al, [rdx]; sar bh, 0xff; ret; 
0x0000000016dfcd: add al, [rip+0x14634900]; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000b799a: add al, [rsi]; add [rax], al; ret; 
0x0000000012fb27: add al, al; cmp edx, 0x80000000; cmovne eax, edi; ret; 
0x0000000012fbb5: add al, al; shr eax, 0x10; cmp edx, 0x80000000; cmovne eax, edi; ret; 
0x000000001145b9: add al, bh; dec dword ptr [rax-0x75]; add al, 0x24; add rsp, 0x28; ret; 
0x00000000190cc3: add al, bl; nop [rax+rax]; lea rax, [rdi+0x3]; ret; 
0x000000001786a5: add al, bl; nop [rax+rax]; mov [rcx], edx; ret; 
0x000000000b6ea8: add al, bl; nop [rax+rax]; mov edx, [rsi]; mov [rdi], edx; ret; 
0x0000000008ce50: add al, bl; nop [rax+rax]; mov rax, [rdi+0x28]; sub rax, [rdi+0x20]; ret; 
0x0000000008cd20: add al, bl; nop [rax+rax]; mov rax, [rdi+0x40]; sub rax, [rdi+0x38]; ret; 
0x000000000cfb1a: add al, bl; nop [rax]; add rax, 0x1; ret; 
0x000000000a8a97: add al, bl; nop [rax]; mov [rax], ecx; ret; 
0x000000000a89d2: add al, bl; nop [rax]; mov [rdi], r8d; add rax, rdi; ret; 
0x000000000b7b9b: add al, bl; nop [rax]; mov edx, [rsi]; mov [rdi], edx; ret; 
0x0000000019815e: add al, bpl; ret far; 
0x0000000010c7d9: add al, ch; adc [rax], ecx; add [rax], al; add rsp, 0x18; ret; 
0x0000000004c6a9: add al, ch; adc [rcx-0x2], edi; call qword ptr [rax+0x56415741]; 
0x0000000002c7a7: add al, ch; adc edi, [rax]; add [rcx-0x77], cl; ret far; 
0x000000001069a9: add al, ch; add ecx, esi; jmp qword ptr [rbx+rcx*4+0x4]; 
0x000000001161ba: add al, ch; and dl, al; lock dec dword ptr [rax+0x1]; ret; 
0x000000000cb4be: add al, ch; cld; mov dh, dh; jmp qword ptr [rsi+0x66]; 
0x000000001096c0: add al, ch; cli; test al, 0xf2; jmp qword ptr [rsi+0x2e]; 
0x0000000015c5d1: add al, ch; cmp [rax-0x14], esp; jmp qword ptr [rbx+rcx*4+0x4]; 
0x0000000008c180: add al, ch; cmp bh, [rsi-0x6]; jmp qword ptr [rsi+0x2e]; 
0x000000000bd7dc: add al, ch; fisub st, word ptr [rdi-0x9]; jmp qword ptr [rsi+0xf]; 
0x000000001456e1: add al, ch; fld1; out dx, al; jmp qword ptr [rsi+0xf]; 
0x000000001449e8: add al, ch; fldln2; jmp qword ptr [rsp+rax*2-0x77]; 
0x000000001449e9: add al, ch; fldln2; jmp qword ptr [rsp+rax*2-0x77]; 
0x0000000013b3cd: add al, ch; in eax, dx; mov ebp, edi; jmp qword ptr [rsi+0x66]; 
0x0000000013fa1d: add al, ch; in eax, dx; sub dh, ch; dec dword ptr [rax-0x77]; ret; 
0x00000000054664: add al, ch; inc word ptr [rbx]; add cl, ch; paddd mm7, mm7; call qword ptr [rax+0x587c031]; 
0x00000000113b57: add al, ch; jae short 0x0000000000113b63; add [rax], al; add rsp, 0x18; ret; 
0x00000000162056: add al, ch; je short 0x0000000000162098; out dx, al; dec dword ptr [rax-0x77]; ret; 
0x000000000e61f2: add al, ch; jg short 0x00000000000e61f6; jmp qword ptr [rsp+rax*2-0x77]; 
0x000000000ff5ab: add al, ch; jg short 0x00000000000ff5dc; bnd jmp qword ptr [rsi+0xf]; 
0x0000000010c171: add al, ch; jle short 0x000000000010c168; jmp qword ptr [rsi+0xf]; 
0x0000000015c03c: add al, ch; jle short 0x000000000015c0bf; in eax, dx; jmp qword ptr [rsi+0x66]; 
0x000000000351cb: add al, ch; jmp far fword ptr [rbp-0x7ab7fffa]; 
0x000000000e1acb: add al, ch; jmp far fword ptr [rdx]; 
0x000000001323cb: add al, ch; jmp qword ptr [rcx]; 
0x000000000d2ccb: add al, ch; jmp qword ptr [rdi-0x3f7afffd]; 
0x000000000e7c6b: add al, ch; jmp qword ptr [rdi-0x76b7000d]; 
0x000000000923b0: add al, ch; jp short 0x00000000000923b3; clc; jmp qword ptr [rsi+0xf]; 
0x00000000139e47: add al, ch; jrcxz 0x0000000000139dcf; out dx, al; dec dword ptr [rax-0x7d]; ret; 
0x00000000100dc2: add al, ch; js short 0x0000000000100d99; std; jmp qword ptr [rsp+rax*2-0x77]; 
0x000000000781d8: add al, ch; loop 0x0000000000078199; sti; jmp qword ptr [rsi-0x70]; 
0x00000000154249: add al, ch; loope 0x00000000001541f2; sti; jmp qword ptr [rsi-0x7d]; 
0x000000000e8b54: add al, ch; mov ah, 0xf4; jmp qword ptr [rsi+0xf]; 
0x000000001987a0: add al, ch; mov ah, [rax]; clc; call far fword ptr [rbx+0x48]; 
0x0000000011612a: add al, ch; mov al, 0xc2; lock dec dword ptr [rax+0x1]; ret; 
0x0000000008e5ba: add al, ch; mov al, [0xb74c08548ffffff]; pop rbx; ret; 
0x0000000009ca5c: add al, ch; mov dil, r15b; jmp qword ptr [rsi+0xf]; 
0x000000000a3b08: add al, ch; mov dl, 0x4; stc; jmp qword ptr [rsi-0x70]; 
0x000000000e2ff9: add al, ch; mov eax, [0x415de88944fffb1a]; pop rsp; pop r13; ret; 
0x0000000015205f: add al, ch; mov ebx, 0x48fff920; lea esi, [rsp+0x10]; mov edi, eax; call rbp; 
0x0000000013854c: add al, ch; mov esi, 0x48ffee9d; mov [rip+0xb5387], eax; add rsp, 0x8; ret; 
0x0000000002ca2f: add al, ch; mov esi, [rbp]; add [rbp-0x77], cl; ret; 
0x0000000013b66d: add al, ch; mov r15, r13; jmp qword ptr [rsi+0x66]; 
0x00000000052ae5: add al, ch; movsd [rdi], [rsi]; ret far; 
0x000000000bdc94: add al, ch; movsxd esi, edi; jmp qword ptr [rsi+0xf]; 
0x0000000008d298: add al, ch; nop; push rsp; stc; jmp qword ptr [rsi-0x70]; 
0x0000000015ea7a: add al, ch; nop; ret far; 
0x0000000014e45c: add al, ch; out dx, al; fwait; out dx, eax; jmp qword ptr [rbx+rcx*4+0x4]; 
0x0000000014b89b: add al, ch; outsd dx, [rsi]; push 0xffffffffffffffed; jmp qword ptr [rsi+0xf]; 
0x000000000bc25b: add al, ch; pop rdi; jge short 0x00000000000bc257; jmp qword ptr [rsi+0x66]; 
0x00000000108f5c: add al, ch; pop rsi; mov al, 0xf2; jmp qword ptr [rsi+0xf]; 
0x0000000010af1d: add al, ch; popfq; nop; bnd jmp qword ptr [rsi+0x66]; 
0x000000001218d2: add al, ch; push 0x48000004; mov dword ptr [rip+0xcaa7d], 0x0; add rsp, 0x8; ret; 
0x0000000012a2da: add al, ch; push rax; fdivr st, st(7); dec dword ptr [rcx]; ret; 
0x0000000012a7da: add al, ch; push rax; sar edi, cl; dec dword ptr [rcx]; ret; 
0x0000000008c51e: add al, ch; pushfq; jp short 0x000000000008c51d; jmp qword ptr [rsi+0x66]; 
0x0000000004eeef: add al, ch; ret far; 
0x00000000052b5c: add al, ch; ret far; 
0x000000000465a7: add al, ch; ret; 
0x00000000120869: add al, ch; ror esp, 0xfe; jmp qword ptr [rsp+rax*2-0x77]; 
0x00000000120868: add al, ch; ror esp, 0xfe; jmp qword ptr [rsp+rax*2-0x77]; 
0x00000000025067: add al, ch; sar edi, cl; jmp qword ptr [rsi+0xf]; 
0x00000000025068: add al, ch; sar edi, cl; jmp qword ptr [rsi+0xf]; 
0x000000001397c2: add al, ch; sbb [rcx-0x1], ch; call far fword ptr [rdi+0x41]; 
0x0000000014276c: add al, ch; sbb dil, r13b; jmp qword ptr [rsi+0xf]; 
0x000000000f4d2f: add al, ch; sbb ebx, eax; dec dword ptr [rax-0x77]; ret; 
0x0000000009290f: add al, ch; sbb edi, edx; clc; jmp qword ptr [rsi+0xf]; 
0x0000000014246b: add al, ch; sbb r13, r15; jmp qword ptr [rsi+0x66]; 
0x000000000f1f7c: add al, ch; scasb [rdi]; add esi, ebx; call far fword ptr [rbx+0x4c]; 
0x0000000013b80b: add al, ch; scasd [rdi]; xchg edi, ebp; jmp qword ptr [rsi+0x66]; 
0x00000000144d1d: add al, ch; std; ret far; 
0x00000000128810: add al, ch; stosb [rdi]; mov bh, 0xf0; jmp qword ptr [rsi+0x2e]; 
0x0000000009e14f: add al, ch; stosd [rdi]; cmp bh, ah; jmp qword ptr [rbx+rcx*4+0x4]; 
0x0000000009da76: add al, ch; test [rcx-0x4], al; jmp qword ptr [rbx+rcx*4+0x4]; 
0x000000000f9784: add al, ch; xchg [rbx-0x76b7000e], cl; ret; 
0x000000000fac84: add al, ch; xchg [rsi-0xe], dh; jmp qword ptr [rsi+0xf]; 
0x0000000009df69: add al, ch; xchg ecx, eax; cmp al, 0xfc; jmp qword ptr [rbx+rcx*4+0x4]; 
0x000000001383f6: add al, ch; xchg esp, eax; mov ecx, 0x89480000; ret; 
0x000000000e7696: add al, ch; xor al, 0xe8; cmc; dec dword ptr [rax-0x77]; ret; 
0x000000001012d3: add al, dh; add al, 0x34; add cl, ch; ret far; 
0x00000000174fd5: add al, fs:[rax]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x00000000167098: add ax, 0x4900; movsxd edx, [rbx+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000057ba9: add bh, [rax+0x1]; ret; 
0x00000000057dd8: add bh, [rax+0x2]; ret; 
0x0000000004345b: add bh, [rax-0x1]; ret; 
0x000000001924d2: add bh, [rcx]; enter 0xc019, 0x83; fdivr st, st(7); ret; 
0x000000000eb288: add bh, [rcx]; ret far; 
0x00000000057c61: add bh, al; add al, [rdx]; sar bh, 0xff; ret; 
0x00000000153aa2: add bh, al; and al, 0x18; add [rax], eax; add [rax], al; call qword ptr [rax+0x18]; 
0x000000001986e6: add bh, al; call far fword ptr [rbx+0x4c]; 
0x0000000011445f: add bh, al; dec dword ptr [rax-0x75]; and al, 0x8; add rsp, 0x28; ret; 
0x00000000101f52: add bh, al; mov al, [0xfffad1e900000001]; call qword ptr [rax-0x5e1f00d]; 
0x0000000005c7c2: add bh, al; test [rdi+rdi*8-0x1], esp; jmp qword ptr [rsi]; 
0x00000000148a9b: add bh, al; xor dword ptr [rax+0x23], 0x0; add [rax], al; mov rdi, r12; call qword ptr [rax+0x28]; 
0x0000000015f956: add bh, bh; adc bl, ch; ret far; 
0x000000000469df: add bh, bh; adc ecx, [rax-0x7d]; ret; 
0x000000001951f3: add bh, bh; dec dword ptr [rcx+0x21]; ret; 
0x00000000042622: add bh, bh; jg short 0x000000000004266e; sub eax, edx; shr rax, 0x3f; ret; 
0x0000000010c79c: add bh, bh; jne short 0x000000000010c7a5; mov [rdi], si; xor eax, eax; ret; 
0x00000000042e14: add bh, bh; loopne 0x0000000000042e7e; nop [rax+rax]; ret; 
0x00000000082a63: add bh, bh; loopne 0x0000000000082aaf; mov eax, 0xffffffff; ret; 
0x00000000082b43: add bh, bh; loopne 0x0000000000082bad; nop [rax+rax]; xor eax, eax; ret; 
0x000000000ce0c8: add bh, bh; ret; 
0x000000001462a3: add bh, bh; ror byte ptr [rax-0x73], 0x1; add eax, 0xaa853; add rsp, 0x8; ret; 
0x00000000153e28: add bh, bh; ror byte ptr [rax-0x75], 0x1; or [r8-0x77], r9b; out dx, eax; call qword ptr [rax+0x8]; 
0x00000000147275: add bh, bh; xor eax, 0x758d4; lea r9, [rsp+0x2c]; call qword ptr [rax]; 
0x00000000147132: add bh, bh; xor eax, 0x75a17; lea r9, [rsp+0x2c]; call qword ptr [rax]; 
0x0000000004341a: add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x00000000043456: add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x2]; mov eax, 0xffffffff; ret; 
0x000000000482b6: add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x2]; mov rax, 0xffffffffffffffff; ret; 
0x000000000a5de4: add bh, dh; ret; 
0x000000000e8462: add bl, [r11+0x5d]; pop r12; ret; 
0x0000000014925f: add bl, [rbx+0x5d]; mov eax, r8d; ret; 
0x000000000e8463: add bl, [rbx+0x5d]; pop r12; ret; 
0x000000000627dd: add bl, [rbx-0x3d]; xor eax, eax; pop rbx; ret; 
0x00000000094ede: add bl, al; endbr64; xor eax, eax; ret; 
0x00000000148272: add bl, al; mov dword ptr [rsi], 0xa; ret; 
0x00000000148279: add bl, al; mov dword ptr [rsi], 0xb; ret; 
0x000000000e5acc: add bl, al; mov eax, 0xffffffff; ret; 
0x00000000042124: add bl, al; nop [rax+rax]; addsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x00000000042489: add bl, al; nop [rax+rax]; addss xmm0, xmm0; ret; 
0x000000001489a8: add bl, al; nop [rax+rax]; endbr64; mov eax, 0x2; ret; 
0x000000000440c9: add bl, al; nop [rax+rax]; endbr64; mov eax, [rip+0x1a80ce]; ret; 
0x000000001489b8: add bl, al; nop [rax+rax]; endbr64; ret; 
0x00000000146178: add bl, al; nop [rax+rax]; endbr64; xor eax, eax; ret; 
0x00000000148676: add bl, al; nop [rax+rax]; lea rdx, [rip+0xa34d9]; jmp qword ptr [rdx+rax*8]; 
0x000000000ec4a4: add bl, al; nop [rax+rax]; mov byte ptr [rdi+0x8], 0x1a; mov eax, 0x2; ret; 
0x000000000ec4b8: add bl, al; nop [rax+rax]; mov byte ptr [rdi+0x8], 0x1c; mov eax, 0x2; ret; 
0x0000000014d019: add bl, al; nop [rax+rax]; mov dword ptr [r8+0x4], 0x1; mov eax, 0x1; ret; 
0x00000000044105: add bl, al; nop [rax+rax]; mov eax, 0xffffffff; ret; 
0x0000000013c1b4: add bl, al; nop [rax+rax]; mov eax, 0xffffffff; ret; 
0x0000000013f0b4: add bl, al; nop [rax+rax]; mov r10, rax; mov byte ptr [r10], 0x0; ret; 
0x000000000cfb56: add bl, al; nop [rax+rax]; mov rax, 0x2; ret; 
0x000000000cfb66: add bl, al; nop [rax+rax]; mov rax, 0x3; ret; 
0x000000000cfb76: add bl, al; nop [rax+rax]; mov rax, 0x4; ret; 
0x000000000cfb86: add bl, al; nop [rax+rax]; mov rax, 0x5; ret; 
0x000000000cfb96: add bl, al; nop [rax+rax]; mov rax, 0x6; ret; 
0x000000000cfba6: add bl, al; nop [rax+rax]; mov rax, 0x7; ret; 
0x000000000328f6: add bl, al; nop [rax+rax]; mov rax, [rsi+rax*8+0x80]; ret; 
0x000000000b92e3: add bl, al; nop [rax+rax]; mov rax, rdi; ret; 
0x0000000017cabf: add bl, al; nop [rax+rax]; nop [rax]; mov [rcx], dl; ret; 
0x000000000b7e5f: add bl, al; nop [rax+rax]; nop [rax]; mov [rdi], dl; ret; 
0x000000000b7b4f: add bl, al; nop [rax+rax]; nop [rax]; ret; 
0x00000000192aff: add bl, al; nop [rax+rax]; nop [rax]; xor eax, eax; ret; 
0x00000000160cc5: add bl, al; nop [rax+rax]; xor eax, eax; ret; 
0x000000000241da: add bl, al; nop [rax]; endbr64; lea rax, [rip+0x191a8c]; ret; 
0x0000000015783b: add bl, al; nop [rax]; endbr64; mov eax, [rdi+0x28]; ret; 
0x00000000025ada: add bl, al; nop [rax]; endbr64; mov rax, [rip+0x1cb6bd]; ret; 
0x0000000009386a: add bl, al; nop [rax]; endbr64; xor eax, eax; ret; 
0x000000000a8a7a: add bl, al; nop [rax]; mov [rax], si; ret; 
0x00000000063053: add bl, al; nop [rax]; mov eax, 0x10; ret; 
0x00000000198c1f: add bl, al; nop [rax]; ret; 
0x0000000015f72f: add bl, al; nop [rax]; xor eax, eax; ret; 
0x000000000ec43d: add bl, al; nop; mov byte ptr [rdi+0x8], 0x2; xor eax, eax; ret; 
0x000000001507bd: add bl, al; nop; xor eax, eax; ret; 
0x0000000009e894: add bl, al; ret; 
0x0000000006305c: add bl, al; xchg ax, ax; add dword ptr [rdx+0x4], 0x1; xor eax, eax; ret; 
0x00000000094c7c: add bl, al; xchg ax, ax; endbr64; mov rax, fs:[0x10]; ret; 
0x0000000014d02c: add bl, al; xchg ax, ax; mov dword ptr [r8+0x4], 0x0; mov eax, 0x1; ret; 
0x000000000e504c: add bl, al; xchg ax, ax; mov eax, 0x7e; ret; 
0x0000000013bd34: add bl, al; xor eax, eax; ret; 
0x00000000041dff: add bl, bl; insb [rdi], dx; and al, 0x8; fadd st, st(0); ret; 
0x00000000041c9b: add bl, bl; insb [rdi], dx; and al, 0xe8; ret; 
0x0000000014718a: add bl, ch; mov ecx, 0xfe890ee8; jmp qword ptr [rsi+0x66]; 
0x00000000149662: add bl, ch; mov edi, 0xfe6436e8; jmp qword ptr [rsi+0xf]; 
0x0000000015d112: add bl, ch; mov edx, 0xfd2986e8; jmp qword ptr [rsi+0xf]; 
0x000000000d35bb: add bl, ch; or [rax-0x7d], ecx; ret; 
0x0000000008131a: add bl, ch; ret far; 
0x000000000e327d: add bl, ch; ret; 
0x0000000009c994: add bl, ch; sahf; nop [rax+rax]; mov rsi, r12; call rax; 
0x0000000004248f: add bl, dh; addps xmm0, xmm0; ret; 
0x000000001846af: add bl, dh; bsf eax, eax; add rax, rdi; vzeroupper; ret; 
0x00000000197183: add bl, dh; divps xmm0, [rip+0x27508]; ret; 
0x000000000f2238: add bl, dh; jmp qword ptr [rsi+0xf]; 
0x000000000e3123: add bl, dh; lfence; jmp rdi; 
0x000000000bbf4b: add bl, dh; movq [rdi+rdx-0x10], mm0; movdqu [rdi], xmm0; ret; 
0x000000000b7f4f: add bl, dh; movq [rdi-0x1], mm0; ret; 
0x000000000b7f5f: add bl, dh; movq [rdi], mm0; ret; 
0x000000001506af: add bl, dh; movq mm0, [rdx]; mov eax, esi; movups [r8+0x30], xmm0; ret; 
0x0000000014cf87: add bl, dh; movq mm0, [rdx]; mov eax, esi; movups [r8+0x8], xmm0; ret; 
0x000000000b6f7f: add bl, dh; movq mm0, [rsi]; movdqu [rdi], xmm0; mov [rdi+0x10], dh; ret; 
0x000000001506bf: add bl, dh; movq mm1, [r8+0x30]; mov eax, 0x1; movups [rdx], xmm1; ret; 
0x0000000014cf97: add bl, dh; movq mm1, [r8+0x8]; mov eax, 0x1; movups [rdx], xmm1; ret; 
0x0000000014823f: add bl, dh; movq mm1, [rdi+0x20]; mov dword ptr [rsi], 0x6; movups [rsi+0x8], xmm1; ret; 
0x0000000010d108: add bl, dh; movq mm7, [rsi+0x70]; movups [rdi+0xf8], xmm7; ret; 
0x00000000042436: add bl, dh; mulps xmm0, [rip+0x17af49]; ret; 
0x00000000042411: add bl, dh; mulps xmm0, [rip+0x17af72]; ret; 
0x0000000015791f: add bl, dh; nop edx, edi; add dword ptr [rdi+0x28], 0x4; mov eax, 0x1; ret; 
0x00000000091eaf: add bl, dh; nop edx, edi; cmp qword ptr [rdi+0x38], 0x0; je short 0x0000000000091ec0; ret; 
0x0000000009e21f: add bl, dh; nop edx, edi; cmp qword ptr [rip+0x150ce4], 0x0; je short 0x000000000009e230; ret; 
0x000000000241cf: add bl, dh; nop edx, edi; lea rax, [rip+0x18fcc3]; ret; 
0x000000000241df: add bl, dh; nop edx, edi; lea rax, [rip+0x191a8c]; ret; 
0x0000000010c7bf: add bl, dh; nop edx, edi; mov [rdi+0x4], esi; xor eax, eax; ret; 
0x000000001143cf: add bl, dh; nop edx, edi; mov eax, 0x10; syscall; 
0x0000000011fedf: add bl, dh; nop edx, edi; mov eax, 0x11f; syscall; 
0x0000000011f34f: add bl, dh; nop edx, edi; mov eax, 0x122; syscall; 
0x0000000011ff6f: add bl, dh; nop edx, edi; mov eax, 0x134; syscall; 
0x0000000011ffff: add bl, dh; nop edx, edi; mov eax, 0x13f; syscall; 
0x0000000010e15f: add bl, dh; nop edx, edi; mov eax, 0x15; syscall; 
0x00000000094ccf: add bl, dh; nop edx, edi; mov eax, 0x18; syscall; 
0x0000000014616f: add bl, dh; nop edx, edi; mov eax, 0x1; ret; 
0x000000001211bf: add bl, dh; nop edx, edi; mov eax, 0x1e; syscall; 
0x0000000012125f: add bl, dh; nop edx, edi; mov eax, 0x1f; syscall; 
0x000000000d41df: add bl, dh; nop edx, edi; mov eax, 0x24; syscall; 
0x0000000014899f: add bl, dh; nop edx, edi; mov eax, 0x2; ret; 
0x0000000012079f: add bl, dh; nop edx, edi; mov eax, 0x30; syscall; 
0x000000001202ef: add bl, dh; nop edx, edi; mov eax, 0x32; syscall; 
0x000000000e319f: add bl, dh; nop edx, edi; mov eax, 0x3b; syscall; 
0x000000000433ff: add bl, dh; nop edx, edi; mov eax, 0x3e; syscall; 
0x000000000e2b6f: add bl, dh; nop edx, edi; mov eax, 0x3f; syscall; 
0x000000001210af: add bl, dh; nop edx, edi; mov eax, 0x40; syscall; 
0x000000001211ef: add bl, dh; nop edx, edi; mov eax, 0x43; syscall; 
0x0000000012103f: add bl, dh; nop edx, edi; mov eax, 0x44; syscall; 
0x0000000012106f: add bl, dh; nop edx, edi; mov eax, 0x47; syscall; 
0x0000000010e59f: add bl, dh; nop edx, edi; mov eax, 0x49; syscall; 
0x00000000116d1f: add bl, dh; nop edx, edi; mov eax, 0x4d; syscall; 
0x0000000010dc7f: add bl, dh; nop edx, edi; mov eax, 0x53; syscall; 
0x0000000010fbdf: add bl, dh; nop edx, edi; mov eax, 0x56; syscall; 
0x0000000010fcff: add bl, dh; nop edx, edi; mov eax, 0x57; syscall; 
0x0000000010fc3f: add bl, dh; nop edx, edi; mov eax, 0x58; syscall; 
0x0000000010db8f: add bl, dh; nop edx, edi; mov eax, 0x5a; syscall; 
0x0000000010db7f: add bl, dh; nop edx, edi; mov eax, 0x5f; syscall; 
0x00000000113e0f: add bl, dh; nop edx, edi; mov eax, 0x62; syscall; 
0x0000000011fdef: add bl, dh; nop edx, edi; mov eax, 0x63; syscall; 
0x000000000e410f: add bl, dh; nop edx, edi; mov eax, 0x66; syscall; 
0x000000000e412f: add bl, dh; nop edx, edi; mov eax, 0x68; syscall; 
0x000000000e411f: add bl, dh; nop edx, edi; mov eax, 0x6b; syscall; 
0x000000000e413f: add bl, dh; nop edx, edi; mov eax, 0x6c; syscall; 
0x000000000e40ff: add bl, dh; nop edx, edi; mov eax, 0x6e; syscall; 
0x000000000e414f: add bl, dh; nop edx, edi; mov eax, 0x73; syscall; 
0x000000000e439f: add bl, dh; nop edx, edi; mov eax, 0x79; syscall; 
0x0000000011f1ef: add bl, dh; nop edx, edi; mov eax, 0x7a; syscall; 
0x000000000e442f: add bl, dh; nop edx, edi; mov eax, 0x7c; syscall; 
0x0000000011f9cf: add bl, dh; nop edx, edi; mov eax, 0x7d; syscall; 
0x000000000439ef: add bl, dh; nop edx, edi; mov eax, 0x83; syscall; 
0x0000000010d3ff: add bl, dh; nop edx, edi; mov eax, 0x84; syscall; 
0x0000000011f40f: add bl, dh; nop edx, edi; mov eax, 0x87; syscall; 
0x0000000010da2f: add bl, dh; nop edx, edi; mov eax, 0x89; syscall; 
0x0000000010e12f: add bl, dh; nop edx, edi; mov eax, 0x8; syscall; 
0x000000001141cf: add bl, dh; nop edx, edi; mov eax, 0x8c; syscall; 
0x0000000011420f: add bl, dh; nop edx, edi; mov eax, 0x8d; syscall; 
0x0000000010267f: add bl, dh; nop edx, edi; mov eax, 0x8e; syscall; 
0x00000000118b2f: add bl, dh; nop edx, edi; mov eax, 0x95; syscall; 
0x0000000011564f: add bl, dh; nop edx, edi; mov eax, 0x99; syscall; 
0x0000000011f18f: add bl, dh; nop edx, edi; mov eax, 0xa6; syscall; 
0x0000000011f00f: add bl, dh; nop edx, edi; mov eax, 0xad; syscall; 
0x0000000011fb4f: add bl, dh; nop edx, edi; mov eax, 0xb1; syscall; 
0x0000000011fcff: add bl, dh; nop edx, edi; mov eax, 0xb4; syscall; 
0x0000000011ceaf: add bl, dh; nop edx, edi; mov eax, 0xc2; syscall; 
0x0000000011cf0f: add bl, dh; nop edx, edi; mov eax, 0xc3; syscall; 
0x0000000011cdef: add bl, dh; nop edx, edi; mov eax, 0xc4; syscall; 
0x0000000011cf9f: add bl, dh; nop edx, edi; mov eax, 0xc5; syscall; 
0x0000000010286f: add bl, dh; nop edx, edi; mov eax, 0xcb; syscall; 
0x0000000012009f: add bl, dh; nop edx, edi; mov eax, 0xea; syscall; 
0x0000000011fbaf: add bl, dh; nop edx, edi; mov eax, 0xfe; syscall; 
0x00000000047a1f: add bl, dh; nop edx, edi; mov eax, 0xffffffff; ret; 
0x0000000009358f: add bl, dh; nop edx, edi; mov eax, [rdi+0x10]; sub eax, [rsi+0x10]; ret; 
0x0000000015783f: add bl, dh; nop edx, edi; mov eax, [rdi+0x28]; ret; 
0x000000001136cf: add bl, dh; nop edx, edi; mov eax, [rdi+0x8]; and eax, 0x100f; ret; 
0x0000000008cdaf: add bl, dh; nop edx, edi; mov eax, [rdi]; and eax, 0x200; ret; 
0x0000000008cd7f: add bl, dh; nop edx, edi; mov eax, [rdi]; and eax, 0x804; ret; 
0x000000000de30f: add bl, dh; nop edx, edi; mov eax, [rdi]; ret; 
0x000000000440cf: add bl, dh; nop edx, edi; mov eax, [rip+0x1a80ce]; ret; 
0x000000000440bf: add bl, dh; nop edx, edi; mov eax, [rip+0x1a80e2]; ret; 
0x000000000342df: add bl, dh; nop edx, edi; mov eax, edi; and eax, 0x7f; ret; 
0x0000000012faef: add bl, dh; nop edx, edi; mov eax, edi; bswap eax; ret; 
0x0000000012faff: add bl, dh; nop edx, edi; mov eax, edi; rol ax, 0x8; ret; 
0x0000000013a5cf: add bl, dh; nop edx, edi; mov edi, [rdi]; mov eax, 0x3; syscall; 
0x0000000016336f: add bl, dh; nop edx, edi; mov qword ptr [rcx], 0x0; mov eax, 0xffffffff; ret; 
0x00000000062edf: add bl, dh; nop edx, edi; mov r10, rcx; mov eax, 0x108; syscall; 
0x0000000011365f: add bl, dh; nop edx, edi; mov r10, rcx; mov eax, 0x11; syscall; 
0x0000000011f99f: add bl, dh; nop edx, edi; mov r10, rcx; mov eax, 0x12d; syscall; 
0x0000000011f3df: add bl, dh; nop edx, edi; mov r10, rcx; mov eax, 0x12e; syscall; 
0x0000000011ffcf: add bl, dh; nop edx, edi; mov r10, rcx; mov eax, 0x137; syscall; 
0x0000000011fccf: add bl, dh; nop edx, edi; mov r10, rcx; mov eax, 0x19; syscall; 
0x00000000112fcf: add bl, dh; nop edx, edi; mov r10, rcx; mov eax, 0x28; syscall; 
0x0000000012076f: add bl, dh; nop edx, edi; mov r10, rcx; mov eax, 0x36; syscall; 
0x0000000011fd8f: add bl, dh; nop edx, edi; mov r10, rcx; mov eax, 0xb2; syscall; 
0x0000000011fdbf: add bl, dh; nop edx, edi; mov r10, rcx; mov eax, 0xb3; syscall; 
0x0000000011ce7f: add bl, dh; nop edx, edi; mov r10, rcx; mov eax, 0xbf; syscall; 
0x0000000011cdbf: add bl, dh; nop edx, edi; mov r10, rcx; mov eax, 0xc1; syscall; 
0x0000000012117f: add bl, dh; nop edx, edi; mov r10, rcx; mov eax, 0xdc; syscall; 
0x000000001130cf: add bl, dh; nop edx, edi; mov r10d, ecx; mov eax, 0x118; syscall; 
0x0000000010d8af: add bl, dh; nop edx, edi; mov r10d, ecx; mov eax, 0x14c; syscall; 
0x00000000112b0f: add bl, dh; nop edx, edi; mov r10d, ecx; mov eax, 0xdd; syscall; 
0x0000000009381f: add bl, dh; nop edx, edi; mov rax, 0xffffffffffffffff; ret; 
0x000000001573bf: add bl, dh; nop edx, edi; mov rax, [rdi+0x18]; sub rax, [rdi+0x20]; ret; 
0x000000000de2bf: add bl, dh; nop edx, edi; mov rax, [rdi+0x20]; ret; 
0x0000000009387f: add bl, dh; nop edx, edi; mov rax, [rdi+0x68]; ret; 
0x0000000009385f: add bl, dh; nop edx, edi; mov rax, [rip+0x159d35]; ret; 
0x000000000344ef: add bl, dh; nop edx, edi; mov rax, [rip+0x1b79ed]; add rax, fs:[0x0]; ret; 
0x0000000003450f: add bl, dh; nop edx, edi; mov rax, [rip+0x1b7a0d]; add rax, fs:[0x0]; ret; 
0x0000000002f5cf: add bl, dh; nop edx, edi; mov rax, [rip+0x1be38d]; ret; 
0x0000000002442f: add bl, dh; nop edx, edi; mov rax, [rip+0x1c7a35]; add rax, fs:[0x0]; ret; 
0x00000000025adf: add bl, dh; nop edx, edi; mov rax, [rip+0x1cb6bd]; ret; 
0x00000000025acf: add bl, dh; nop edx, edi; mov rax, [rip+0x1cb6dd]; ret; 
0x0000000015f88f: add bl, dh; nop edx, edi; mov rax, [rip+0x8c5c5]; jmp qword ptr [rax+0x1f0]; 
0x0000000012feaf: add bl, dh; nop edx, edi; mov rax, [rip+0xbbf9d]; add rax, fs:[0x0]; ret; 
0x000000001228df: add bl, dh; nop edx, edi; mov rax, [rip+0xc9575]; mov eax, [rax+0x38]; ret; 
0x00000000094c6f: add bl, dh; nop edx, edi; mov rax, fs:[0x10]; ret; 
0x0000000009388f: add bl, dh; nop edx, edi; mov rax, rdi; ret; 
0x000000000421df: add bl, dh; nop edx, edi; pmovmskb eax, xmm0; and eax, 0x80; ret; 
0x00000000023f1f: add bl, dh; nop edx, edi; ret; 
0x0000000009382f: add bl, dh; nop edx, edi; xor eax, eax; ret; 
0x0000000011362f: add bl, dh; nop edx, edi; xor eax, eax; syscall; 
0x0000000012121f: add bl, dh; nop edx, edi; xor r10d, r10d; mov eax, 0x1d; syscall; 
0x000000001506be: add bl, sil; movq mm1, [r8+0x30]; mov eax, 0x1; movups [rdx], xmm1; ret; 
0x0000000014cf96: add bl, sil; movq mm1, [r8+0x8]; mov eax, 0x1; movups [rdx], xmm1; ret; 
0x0000000015791e: add bl, sil; nop edx, edi; add dword ptr [rdi+0x28], 0x4; mov eax, 0x1; ret; 
0x000000000241de: add bl, sil; nop edx, edi; lea rax, [rip+0x191a8c]; ret; 
0x0000000010c7be: add bl, sil; nop edx, edi; mov [rdi+0x4], esi; xor eax, eax; ret; 
0x0000000011f34e: add bl, sil; nop edx, edi; mov eax, 0x122; syscall; 
0x0000000010e15e: add bl, sil; nop edx, edi; mov eax, 0x15; syscall; 
0x00000000094cce: add bl, sil; nop edx, edi; mov eax, 0x18; syscall; 
0x000000001211be: add bl, sil; nop edx, edi; mov eax, 0x1e; syscall; 
0x0000000012125e: add bl, sil; nop edx, edi; mov eax, 0x1f; syscall; 
0x000000000d41de: add bl, sil; nop edx, edi; mov eax, 0x24; syscall; 
0x000000001541de: add bl, sil; nop edx, edi; mov eax, 0x2; ret; 
0x000000000e2b6e: add bl, sil; nop edx, edi; mov eax, 0x3f; syscall; 
0x000000001211ee: add bl, sil; nop edx, edi; mov eax, 0x43; syscall; 
0x0000000010dc7e: add bl, sil; nop edx, edi; mov eax, 0x53; syscall; 
0x0000000010fbde: add bl, sil; nop edx, edi; mov eax, 0x56; syscall; 
0x0000000010db8e: add bl, sil; nop edx, edi; mov eax, 0x5a; syscall; 
0x0000000010db7e: add bl, sil; nop edx, edi; mov eax, 0x5f; syscall; 
0x00000000113e0e: add bl, sil; nop edx, edi; mov eax, 0x62; syscall; 
0x000000000e410e: add bl, sil; nop edx, edi; mov eax, 0x66; syscall; 
0x000000000e412e: add bl, sil; nop edx, edi; mov eax, 0x68; syscall; 
0x000000000e411e: add bl, sil; nop edx, edi; mov eax, 0x6b; syscall; 
0x000000000e413e: add bl, sil; nop edx, edi; mov eax, 0x6c; syscall; 
0x000000000e40fe: add bl, sil; nop edx, edi; mov eax, 0x6e; syscall; 
0x000000000e414e: add bl, sil; nop edx, edi; mov eax, 0x73; syscall; 
0x000000000e439e: add bl, sil; nop edx, edi; mov eax, 0x79; syscall; 
0x0000000011f1ee: add bl, sil; nop edx, edi; mov eax, 0x7a; syscall; 
0x0000000010d3fe: add bl, sil; nop edx, edi; mov eax, 0x84; syscall; 
0x0000000010da2e: add bl, sil; nop edx, edi; mov eax, 0x89; syscall; 
0x0000000011420e: add bl, sil; nop edx, edi; mov eax, 0x8d; syscall; 
0x0000000010267e: add bl, sil; nop edx, edi; mov eax, 0x8e; syscall; 
0x0000000012009e: add bl, sil; nop edx, edi; mov eax, 0xea; syscall; 
0x0000000009380e: add bl, sil; nop edx, edi; mov eax, 0xffffffff; ret; 
0x0000000009358e: add bl, sil; nop edx, edi; mov eax, [rdi+0x10]; sub eax, [rsi+0x10]; ret; 
0x000000001136ce: add bl, sil; nop edx, edi; mov eax, [rdi+0x8]; and eax, 0x100f; ret; 
0x000000000de30e: add bl, sil; nop edx, edi; mov eax, [rdi]; ret; 
0x000000000342de: add bl, sil; nop edx, edi; mov eax, edi; and eax, 0x7f; ret; 
0x0000000012faee: add bl, sil; nop edx, edi; mov eax, edi; bswap eax; ret; 
0x0000000013a5ce: add bl, sil; nop edx, edi; mov edi, [rdi]; mov eax, 0x3; syscall; 
0x0000000011365e: add bl, sil; nop edx, edi; mov r10, rcx; mov eax, 0x11; syscall; 
0x0000000011f99e: add bl, sil; nop edx, edi; mov r10, rcx; mov eax, 0x12d; syscall; 
0x00000000025ade: add bl, sil; nop edx, edi; mov rax, [rip+0x1cb6bd]; ret; 
0x00000000094c6e: add bl, sil; nop edx, edi; mov rax, fs:[0x10]; ret; 
0x000000000421de: add bl, sil; nop edx, edi; pmovmskb eax, xmm0; and eax, 0x80; ret; 
0x00000000023f1e: add bl, sil; nop edx, edi; ret; 
0x0000000009382e: add bl, sil; nop edx, edi; xor eax, eax; ret; 
0x0000000012c588: add byte ptr [r8], 0x0; add [rax], al; movups [rbp-0x78], xmm7; call rcx; 
0x000000000a4017: add byte ptr [r9+0xf], 0x93; ret; 
0x0000000014cff5: add byte ptr [rax+rax+0x42890000], 0x68; movzx eax, word ptr [r8+0x88]; mov [rdx+0x6c], ax; mov eax, 0x1; ret; 
0x00000000024157: add byte ptr [rax+rax], 0x0; add rdx, 0x988; cmp r15, rdx; je short 0x0000000000024177; call rax; 
0x000000000b7b1c: add byte ptr [rax+rax], 0x0; ret; 
0x0000000008ce89: add byte ptr [rax-0x17c801b], 0x2; cmovne edx, ecx; mov [rdi], edx; ret; 
0x000000000945f0: add byte ptr [rax], 0x0; add [rax+0xca], bh; syscall; 
0x00000000035074: add byte ptr [rax], 0x0; add [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x000000001091e2: add byte ptr [rax], 0x0; add [rax-0x7d], cl; ret; 
0x0000000009f91b: add byte ptr [rax], 0x0; add [rax], al; add rsp, 0x8; ret; 
0x000000000ac18b: add byte ptr [rax], 0x0; add [rax], al; bsf eax, eax; add rax, rdi; ret; 
0x000000000ac1ab: add byte ptr [rax], 0x0; add [rax], al; bsf eax, eax; lea rax, [rax+rdi+0x20]; ret; 
0x000000000ac67b: add byte ptr [rax], 0x0; add [rax], al; bsr eax, eax; lea rax, [rax+rdi+0x20]; ret; 
0x000000000ac68b: add byte ptr [rax], 0x0; add [rax], al; bsr eax, eax; lea rax, [rax+rdi+0x30]; ret; 
0x0000000012103b: add byte ptr [rax], 0x0; add [rax], al; endbr64; mov eax, 0x44; syscall; 
0x0000000010e12b: add byte ptr [rax], 0x0; add [rax], al; endbr64; mov eax, 0x8; syscall; 
0x0000000009388b: add byte ptr [rax], 0x0; add [rax], al; endbr64; mov rax, rdi; ret; 
0x00000000157a4b: add byte ptr [rax], 0x0; add [rax], al; endbr64; xor eax, eax; ret; 
0x0000000009c23b: add byte ptr [rax], 0x0; add [rax], al; lea rax, [rdx-0x10]; ret; 
0x000000000a8a9b: add byte ptr [rax], 0x0; add [rax], al; mov [rax], ecx; ret; 
0x000000000a8b3b: add byte ptr [rax], 0x0; add [rax], al; mov [rdi], si; lea rax, [rdi+rdx-0x1]; ret; 
0x000000000a8a73: add byte ptr [rax], 0x0; add [rax], al; mov byte ptr [rax], 0x0; ret; 
0x000000000ec47b: add byte ptr [rax], 0x0; add [rax], al; mov byte ptr [rdi+0x8], 0x15; mov eax, 0x1; ret; 
0x0000000007f20b: add byte ptr [rax], 0x0; add [rax], al; mov dword ptr [rbp-0x528], 0x1; mov r9, rsi; jmp rax; 
0x0000000013c1ab: add byte ptr [rax], 0x0; add [rax], al; mov eax, 0x2; ret; 
0x0000000013c9eb: add byte ptr [rax], 0x0; add [rax], al; mov eax, 0x7fffffff; ret; 
0x0000000011f7f3: add byte ptr [rax], 0x0; add [rax], al; mov eax, 0x95; syscall; 
0x0000000013c65b: add byte ptr [rax], 0x0; add [rax], al; mov eax, 0xffffffff; ret; 
0x0000000016dcab: add byte ptr [rax], 0x0; add [rax], al; mov edx, [rsi]; mov [rdi], edx; ret; 
0x00000000078b03: add byte ptr [rax], 0x0; add [rax], al; mov r10, [rbp-0x518]; jmp rax; 
0x0000000007f39b: add byte ptr [rax], 0x0; add [rax], al; mov r9, [rbp-0x508]; jmp rax; 
0x0000000013c96b: add byte ptr [rax], 0x0; add [rax], al; mov rax, 0xffffffffffffffff; mov rdx, 0xffffffffffffffff; ret; 
0x0000000011d053: add byte ptr [rax], 0x0; add [rax], al; mov rax, [rax+0x58]; ret; 
0x000000001571bb: add byte ptr [rax], 0x0; add [rax], al; mov rax, [rdi+0x8]; lea rsi, [rsp+0x4]; call qword ptr [rax+0x40]; 
0x0000000014902b: add byte ptr [rax], 0x0; add [rax], al; mov rax, [rdi+0x8]; mov rsi, rsp; call qword ptr [rax]; 
0x0000000009e8bb: add byte ptr [rax], 0x0; add [rax], al; mov rdi, [rbx+0x48]; call rax; 
0x0000000016daeb: add byte ptr [rax], 0x0; add [rax], al; mov rdx, [rsi]; mov [rdi], rdx; ret; 
0x0000000009a9e3: add byte ptr [rax], 0x0; add [rax], al; mov rsi, [rsp+0x48]; mov rdi, r13; call rax; 
0x0000000012c589: add byte ptr [rax], 0x0; add [rax], al; movups [rbp-0x78], xmm7; call rcx; 
0x000000000bc16b: add byte ptr [rax], 0x0; add [rax], al; movzx eax, cl; pop rbx; ret; 
0x0000000016ddfb: add byte ptr [rax], 0x0; add [rax], al; movzx edx, byte ptr [rsi]; mov [rdi], dl; ret; 
0x0000000016dd8b: add byte ptr [rax], 0x0; add [rax], al; movzx edx, word ptr [rsi]; mov [rdi], dx; ret; 
0x000000000ca083: add byte ptr [rax], 0x0; add [rax], al; pop rbp; ret; 
0x00000000054343: add byte ptr [rax], 0x0; add [rax], al; ret; 
0x00000000189a1d: add byte ptr [rax], 0x0; add [rax], al; vzeroupper; ret; 
0x00000000040ff3: add byte ptr [rax], 0x0; add [rax], al; xor eax, eax; ret; 
0x0000000008e333: add byte ptr [rax], 0x0; add [rax], al; xor r8d, r8d; mov rax, r8; ret; 
0x0000000004237e: add byte ptr [rax], 0x0; add [rbp+0xc], dh; test eax, 0x7fffff; je short 0x0000000000042390; ret; 
0x000000000ea014: add byte ptr [rax], 0x0; add [rbp-0x77], cl; fmul st, qword ptr [rax-0x77]; ret far; 
0x0000000006dc9d: add byte ptr [rax], 0x0; add [rbx-0x9bef71d], al; ret; 
0x000000001532db: add byte ptr [rax], 0x0; add [rcx+rcx*4-0x40], cl; pop rbx; ret; 
0x0000000016b3c7: add byte ptr [rax], 0x0; add [rdi+0x63], cl; or al, 0x8b; add r9, r11; notrack jmp r9; 
0x000000001173ab: add byte ptr [rax], 0x0; add rsp, 0x8; mov eax, r8d; ret; 
0x000000000bc7cd: add byte ptr [rbx+0x2b], 0x4; mov [rsp+rbx*8-0x3d], dh; nop [rax]; xor eax, eax; ret; 
0x000000000a7adb: add byte ptr [rbx-0x71f08005], 0x45; add al, [rax]; add bh, dh; ret; 
0x000000000a5ddb: add byte ptr [rbx-0x71f08005], 0x53; add al, [rax]; add bh, dh; ret; 
0x000000000a4018: add byte ptr [rcx+0xf], 0x93; ret; 
0x000000000cb1b4: add byte ptr [rcx+rcx*4+0x42], 0x4; mov [rdx], eax; xor eax, eax; ret; 
0x00000000151aca: add byte ptr [rcx+rcx*4-0x40], 0x5d; ret; 
0x0000000015da95: add byte ptr [rcx], 0x0; add [rax-0x77], cl; fsubp st(0), st; call far fword ptr [rbx-0x5]; 
0x00000000041266: add byte ptr [rsi*2+0x5c8b45e6], 0x80; or [rbx+rax+0x5f], cl; and [rcx+rcx*4-0x28], cl; ret; 
0x00000000120d55: add ch, [rax+0x31467502]; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x5d], bl; ret; 
0x00000000087eea: add ch, [rcx]; rol bl, 0x1; mov eax, 0xffffffff; ret; 
0x0000000013d712: add ch, [rsi]; or eax, [rax]; syscall; 
0x000000000ee09f: add ch, al; ret far; 
0x00000000184972: add ch, al; std; xlat [rbx]; ret; 
0x00000000113ae1: add ch, bl; ret far; 
0x0000000012ec5c: add ch, cl; cmp edi, ebp; jmp qword ptr [rsi+0xf]; 
0x0000000012ec2c: add ch, cl; out dx, al; cmp edi, ebp; jmp qword ptr [rsi+0xf]; 
0x00000000043b1a: add cl, 0xe9; add esi, ebx; stosq [rdi]; ret; 
0x000000000b3a1c: add cl, [r8-0x76b7fdbe]; clc; ret; 
0x000000000480fb: add cl, [r8-0x77]; add [r9], r14b; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x5d], bl; ret; 
0x000000000ea5a2: add cl, [r8-0x7d]; ret; 
0x000000000eb793: add cl, [r9-0x7d]; ret; 
0x00000000100480: add cl, [rax+0x16893847]; movups [rsi+0x8], xmm0; ret; 
0x0000000002c8fe: add cl, [rax+0x39]; ret far; 
0x0000000002c124: add cl, [rax+0x39]; ret; 
0x0000000018bb48: add cl, [rax+0x77f8c50f]; ret; 
0x000000000895cd: add cl, [rax+0xf]; scasd [rdi]; ret; 
0x000000000748f4: add cl, [rax-0x73]; adc eax, 0xfffffb5e; movsxd rax, [rcx+rax*4]; add rax, rdx; jmp rax; 
0x000000000bcd86: add cl, [rax-0x73]; add eax, 0x112c2; lea rdx, [rip+0xd575b]; cmovne rax, rdx; ret; 
0x000000000bc8a5: add cl, [rax-0x73]; add eax, 0x12933; cmovne rax, rdx; ret; 
0x0000000007f371: add cl, [rax-0x73]; add eax, 0x12f247; movsxd rax, [rax+rcx*4]; add rax, rdx; jmp rax; 
0x0000000007e042: add cl, [rax-0x73]; add eax, 0x1304f6; movsxd rax, [rax+rcx*4]; add rax, rdx; jmp rax; 
0x000000000a0765: add cl, [rax-0x73]; add eax, 0x162c3; lea rdx, [rip+0xd8bcc]; cmovne rax, rdx; ret; 
0x0000000009f245: add cl, [rax-0x73]; add eax, 0x176f3; lea rdx, [rip+0xd5dbc]; cmovne rax, rdx; ret; 
0x0000000009f115: add cl, [rax-0x73]; add eax, 0x1a893; lea rdx, [rip+0x12e7c]; cmovne rax, rdx; ret; 
0x000000000a0a23: add cl, [rax-0x73]; add eax, 0x1b1a5; lea rdx, [rip+0x1b0be]; cmove rax, rdx; ret; 
0x000000000a06b3: add cl, [rax-0x73]; add eax, 0x1b4f5; lea rdx, [rip+0x1b40e]; cmove rax, rdx; ret; 
0x000000000a0553: add cl, [rax-0x73]; add eax, 0x1b675; lea rdx, [rip+0x1b58e]; cmove rax, rdx; ret; 
0x0000000012da3c: add cl, [rax-0x73]; add eax, 0x5db7c; lea rdx, [rip+0x5db05]; cmove rax, rdx; ret; 
0x0000000012d97c: add cl, [rax-0x73]; add eax, 0x5dc5c; lea rdx, [rip+0x5dbe5]; cmove rax, rdx; ret; 
0x0000000012d8bc: add cl, [rax-0x73]; add eax, 0x5dd1c; lea rdx, [rip+0x5dca5]; cmove rax, rdx; ret; 
0x0000000012da87: add cl, [rax-0x73]; add eax, 0x628b1; lea rdx, [rip+0x6283a]; cmove rax, rdx; ret; 
0x0000000012d9c7: add cl, [rax-0x73]; add eax, 0x62991; lea rdx, [rip+0x6291a]; cmove rax, rdx; ret; 
0x0000000012d907: add cl, [rax-0x73]; add eax, 0x62a51; lea rdx, [rip+0x629da]; cmove rax, rdx; ret; 
0x0000000012db47: add cl, [rax-0x73]; add eax, 0x62da1; lea rdx, [rip+0x62d2a]; cmove rax, rdx; ret; 
0x000000000a07c5: add cl, [rax-0x73]; add eax, 0x86e3; lea rdx, [rip+0xda37c]; cmovne rax, rdx; ret; 
0x0000000009f7f5: add cl, [rax-0x73]; add eax, 0x9723; lea rdx, [rip+0xd6fbc]; cmovne rax, rdx; ret; 
0x0000000009f725: add cl, [rax-0x73]; add eax, 0x9733; lea rdx, [rip+0x1448c]; cmovne rax, rdx; ret; 
0x0000000009f1c5: add cl, [rax-0x73]; add eax, 0x9db3; lea rdx, [rip+0xc41bc]; cmovne rax, rdx; ret; 
0x0000000009f78f: add cl, [rax-0x73]; add eax, 0xaee9; lea rdx, [rip+0xc4e62]; cmovne rax, rdx; ret; 
0x000000000a08b8: add cl, [rax-0x73]; add eax, 0xc350; lea rdx, [rip+0xd0099]; cmovne rax, rdx; ret; 
0x000000000a0476: add cl, [rax-0x73]; add eax, 0xc372; lea rdx, [rip+0xf08fb]; cmovne rax, rdx; ret; 
0x000000000a0818: add cl, [rax-0x73]; add eax, 0xc3d0; lea rdx, [rip+0xd0119]; cmovne rax, rdx; ret; 
0x000000000a0908: add cl, [rax-0x73]; add eax, 0xe550; lea rdx, [rip+0xd21a9]; cmovne rax, rdx; ret; 
0x000000000a0868: add cl, [rax-0x73]; add eax, 0xe5d0; lea rdx, [rip+0xd2229]; cmovne rax, rdx; ret; 
0x000000000a09bc: add cl, [rax-0x73]; add eax, 0xeac2c; lea rdx, [rip+0xeabb5]; cmove rax, rdx; ret; 
0x000000000a064c: add cl, [rax-0x73]; add eax, 0xeaf7c; lea rdx, [rip+0xeaf05]; cmove rax, rdx; ret; 
0x000000000a04ec: add cl, [rax-0x73]; add eax, 0xeb0fc; lea rdx, [rip+0xeb085]; cmove rax, rdx; ret; 
0x000000000a0a07: add cl, [rax-0x73]; add eax, 0xef961; lea rdx, [rip+0xef8ea]; cmove rax, rdx; ret; 
0x000000000a0697: add cl, [rax-0x73]; add eax, 0xefcb1; lea rdx, [rip+0xefc3a]; cmove rax, rdx; ret; 
0x000000000a0537: add cl, [rax-0x73]; add eax, 0xefe31; lea rdx, [rip+0xefdba]; cmove rax, rdx; ret; 
0x000000000a05f7: add cl, [rax-0x73]; add eax, 0xf0301; lea rdx, [rip+0xf028a]; cmove rax, rdx; ret; 
0x0000000012daa3: add cl, [rax-0x73]; add eax, 0xfff8e0f5; lea rdx, [rip-0x71ff2]; cmove rax, rdx; ret; 
0x0000000012d9e3: add cl, [rax-0x73]; add eax, 0xfff8e1d5; lea rdx, [rip-0x71f12]; cmove rax, rdx; ret; 
0x0000000012d923: add cl, [rax-0x73]; add eax, 0xfff8e295; lea rdx, [rip-0x71e52]; cmove rax, rdx; ret; 
0x000000000b7709: add cl, [rax-0x73]; jg short 0x00000000000b7710; jne 0x00000000000b7fa0; ret; 
0x000000000b8ded: add cl, [rax-0x73]; jg short 0x00000000000b8df4; jne 0x00000000000b97f0; ret; 
0x0000000018a389: add cl, [rax-0x73]; jg short 0x000000000018a390; jne 0x000000000018a610; vzeroupper; ret; 
0x0000000018b0bd: add cl, [rax-0x73]; jg short 0x000000000018b0c4; jne 0x000000000018b340; vzeroupper; ret; 
0x00000000074052: add cl, [rax-0x73]; or al, 0x13; add rdx, r15; call qword ptr [rax+r9*8]; 
0x000000000986ce: add cl, [rax-0x73]; push rsp; ret; 
0x0000000017aaf5: add cl, [rax-0x75]; add eax, 0x5428948; lea rax, [rdx+0xc]; ret; 
0x00000000176765: add cl, [rax-0x75]; add eax, 0x5428948; mov rax, rdi; ret; 
0x000000001142e3: add cl, [rax-0x75]; add eax, 0xd7bdd; mov qword ptr [rax], 0xffffffffffffffff; xor eax, eax; ret; 
0x00000000110b37: add cl, [rax-0x75]; mov ebp, 0xfffffee8; mov rsi, r9; call qword ptr [rbp-0xf0]; 
0x00000000176695: add cl, [rax-0x75]; or [r8-0x77], cl; or [rax-0x77], cl; clc; ret; 
0x000000000b3a1d: add cl, [rax-0x76b7fdbe]; clc; ret; 
0x000000000480fc: add cl, [rax-0x77]; add [r9], r14b; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x5d], bl; ret; 
0x000000000b3989: add cl, [rax-0x77]; clc; ret; 
0x00000000127e86: add cl, [rax-0x77]; out dx, al; mov [rsp+0x10], rax; mov rdx, rax; call qword ptr [r12+0x28]; 
0x000000000a41e4: add cl, [rax-0x77]; ret far; 
0x000000000a41e3: add cl, [rax-0x77]; ret far; 
0x000000000a4c37: add cl, [rax-0x77]; ret far; 
0x00000000085c9f: add cl, [rax-0x77]; ret; 
0x000000000cf903: add cl, [rax-0x7b]; ror byte ptr [rax+0xf], cl; ret; 
0x0000000006ab91: add cl, [rax-0x7d]; ret; 
0x000000000ebe7e: add cl, [rbp-0x73]; add al, 0x39; ret far; 
0x0000000016dbd2: add cl, [rbx+0x257890e]; mov [rdi], ecx; ret; 
0x000000000b3a88: add cl, [rbx+0x42890341]; add ecx, [rax-0x77]; clc; ret; 
0x0000000017aa75: add cl, [rbx+0x42890541]; add eax, 0x8428d48; ret; 
0x000000000b3b2c: add cl, [rbx+0x42890841]; or [rax-0x77], cl; clc; ret; 
0x000000000780e3: add cl, [rbx-0x4ef7b]; inc dword ptr [rcx]; ret far; 
0x0000000007e94c: add cl, [rcx+0x29]; ret far; 
0x0000000013b93a: add cl, [rcx+0x39]; clc; jae short 0x000000000013b953; mov eax, 0xffffffff; ret; 
0x0000000007d0db: add cl, [rcx+rcx*4-0x16]; call qword ptr [rax+0x38]; 
0x000000000d4adb: add cl, [rcx+rcx*4-0x40]; add rsp, 0x8; ret; 
0x00000000094db7: add cl, [rcx-0x3fcef7b9]; ret; 
0x00000000086c2c: add cl, [rcx-0x77]; ret; 
0x000000000eb794: add cl, [rcx-0x7d]; ret; 
0x0000000014fe6a: add cl, [rdi]; enter 0x8941, 0x40; pop rax; mov eax, 0x1; ret; 
0x0000000014fe9a: add cl, [rdi]; enter 0x8941, 0x40; push rsp; mov eax, 0x1; ret; 
0x000000000340f8: add cl, [rdi]; mov bh, 0xc0; ret; 
0x0000000018b0c1: add cl, [rdi]; test [rax+0x2], edi; add [rax], al; vzeroupper; ret; 
0x000000000b3a1a: add cl, [rdx+0x42880241]; add cl, [rax-0x77]; clc; ret; 
0x0000000017aa33: add cl, [rdx+0x42880441]; add al, 0x48; lea eax, [rdx+0x4]; ret; 
0x000000000b3a48: add cl, [rdx+0x42880441]; add al, 0x48; mov eax, edi; ret; 
0x000000000b3acc: add cl, [rdx+0x42880841]; or [rax-0x77], cl; clc; ret; 
0x000000000bcb1c: add cl, [rip+0x58d4800]; jns short 0x00000000000bcb4d; add [rax], eax; cmove rax, rdx; ret; 
0x000000000fb94f: add cl, al; call far fword ptr [rax]; 
0x000000000d126f: add cl, al; stc; add cl, [rax-0x77]; ret; 
0x0000000013b61c: add cl, ch; cmp dh, 0xff; jmp qword ptr [rsi+0xf]; 
0x00000000194a44: add cl, ch; cmp edx, 0xffffffff; jmp qword ptr [rsi+0xf]; 
0x0000000013ff5c: add cl, ch; idiv bh; jmp qword ptr [rsi+0xf]; 
0x00000000193714: add cl, ch; idiv dil; jmp qword ptr [rsi+0xf]; 
0x000000000f1578: add cl, ch; idiv r15; jmp qword ptr [rsi-0x70]; 
0x0000000013f3fc: add cl, ch; imul edi, esi, 0xffffffff; jmp qword ptr [rsi+0xf]; 
0x0000000011ee98: add cl, ch; imul esp, edi, 0xffffffff; jmp qword ptr [rsi-0x70]; 
0x00000000037244: add cl, ch; insb [rdi], dx; idiv bh; jmp qword ptr [rsi+0xf]; 
0x000000000be557: add cl, ch; mov al, [0xeb8087b8bfffffc]; add [rax], al; add [rax-0x7d], cl; ret; 
0x000000000319e8: add cl, ch; mov dl, 0x5; add [rax], al; xchg ax, ax; ret; 
0x00000000054669: add cl, ch; paddd mm7, mm7; call qword ptr [rax+0x587c031]; 
0x000000000fde30: add cl, ch; push rax; idiv edi; jmp qword ptr [rsi+0x2e]; 
0x0000000007f47c: add cl, ch; push rdx; out 0xff, eax; jmp qword ptr [rsi+0xf]; 
0x000000000db1a9: add cl, ch; push rsp; idiv bh; call qword ptr [rax+0x4cc50149]; 
0x0000000002e957: add cl, ch; ret far; 
0x0000000002e078: add cl, ch; ret; 
0x0000000009d484: add cl, ch; sar ch, 0xff; jmp qword ptr [rsi+0xf]; 
0x00000000061869: add cl, ch; sar ebp, 0xff; call qword ptr [rax+0x222ebe8]; 
0x0000000014fa31: add cl, ch; sbb [rax-0x12], edx; jmp qword ptr [rsi+0xf]; 
0x000000000578f7: add cl, cl; ret; 
0x000000000baf8b: add dh, [rax]; in eax, dx; mov [rdi+0x3], ch; ret; 
0x000000000bb4f7: add dh, [rbp+0x16]; movzx ecx, byte ptr [rsi+rdx+0x3]; test cl, cl; jne short 0x00000000000bb4f0; ret; 
0x000000000bb5a7: add dh, [rbp+0x16]; movzx ecx, byte ptr [rsi+rdx+0x3]; test cl, cl; jne short 0x00000000000bb5a0; ret; 
0x000000000874e1: add dh, [rbp+0x74]; mov rax, [rax+0xe0]; call qword ptr [rax+0x68]; 
0x0000000010d12b: add dh, [rdi+0x8]; mov [rdi+0x10c], esi; xor eax, eax; ret; 
0x00000000190133: add dh, [rdx+0x8]; mov [rdi], cx; mov [rsi-0x2], cx; ret; 
0x0000000009522c: add dh, [rsi+0x1]; ret; 
0x000000000d426a: add dh, [rsi+0x3]; ret; 
0x000000000dd1c1: add dh, [rsp+rbx*2-0x7b]; dec dword ptr [rdi]; xchg esp, eax; ret; 
0x000000000a8a77: add dh, al; add [rax], al; ret; 
0x00000000116efd: add dh, al; add eax, 0xd886b; and ecx, [rcx+rcx*4-0x40]; mov byte ptr [rsi-0x1], 0x0; ret; 
0x0000000013ff57: add dh, al; and al, 0x1b; add cl, ch; idiv bh; jmp qword ptr [rsi+0xf]; 
0x000000000a8647: add dh, al; inc dword ptr [r8]; mov [rdx], rcx; ret; 
0x000000001273d7: add dh, al; jmp qword ptr [rax]; 
0x000000000ec4af: add dh, al; or [r10], r11b; mov eax, 0x2; ret; 
0x000000000ec4bf: add dh, al; or [r8+r15*4], r11b; add al, [rax]; add [rax], al; ret; 
0x0000000013d0a7: add dh, al; ret; 
0x00000000075114: add dh, al; test [rax], eax; idiv edi; jmp qword ptr [rax]; 
0x0000000007bdc1: add dh, al; test esp, eax; idiv bh; jmp qword ptr [rax]; 
0x000000000cf0b6: add dh, bh; fadd st, st(3); nop [rax+rax]; xor rax, rax; ret; 
0x0000000016dd83: add dh, bl; movq [rdi], mm1; ret; 
0x00000000112125: add dh, cl; jmp qword ptr [rcx+rcx*4+0x2b]; 
0x00000000112062: add dh, cl; jmp qword ptr [rsi-0x7d]; 
0x000000001120f8: add dh, cl; push qword ptr [rcx]; rcr byte ptr [rbx+0x5d], 0x41; pop rsp; ret; 
0x000000000dfd6a: add dh, dh; adc [rax], al; syscall; 
0x0000000009f271: add dh, dh; jb short 0x000000000009f286; lea rax, [rip+0x1c633]; cmovne rax, rdx; ret; 
0x0000000009f861: add dh, dh; jb short 0x000000000009f876; lea rax, [rip+0x1c0f3]; cmovne rax, rdx; ret; 
0x0000000009fb21: add dh, dh; jb short 0x000000000009fb36; lea rax, [rip+0x1bee3]; cmovne rax, rdx; ret; 
0x000000000bc8a1: add dh, dh; jno short 0x00000000000bc8a8; lea rax, [rip+0x12933]; cmovne rax, rdx; ret; 
0x0000000005c05f: add dh, dh; ret; 
0x000000000d686c: add dh, dh; rol dword ptr [rdi+rcx], 0x84; ret; 
0x000000000e69a7: add dh, dh; test [rbx+rdi*8-0x1], ecx; call qword ptr [rax]; 
0x0000000005d856: add dil, al; test [rdi+rdi*8-0x1], esp; jmp qword ptr [rsi]; 
0x000000000ce0c7: add dil, r15b; ret; 
0x00000000038644: add dl, [rbx-0x77]; ret far; 
0x0000000012e8ca: add dl, [rsi+rdi*8]; call qword ptr [rax-0x18]; 
0x000000001139b2: add dl, [rsi]; add [rax], al; add [rcx-0x7d], al; ret far; 
0x000000000e1dda: add dl, bh; adc [rax], al; syscall; 
0x00000000133052: add dl, cl; or eax, [rax]; syscall; 
0x0000000004212f: add dl, dh; addps xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x000000000420ad: add dl, dh; movups xmm0, [rip+0x17ac2a]; orpd xmm1, [rip+0x17a642]; mulsd xmm0, xmm1; ret; 
0x00000000042087: add dl, dh; movups xmm0, [rip+0x17ac58]; orpd xmm1, [rip+0x17a678]; mulsd xmm0, xmm1; ret; 
0x00000000042097: add dl, dh; mulps xmm0, xmm1; ret; 
0x0000000003077a: add dl, dl; sbb eax, [rax]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000047257: add dword ptr [rax+0x460], 0x1; lea rdi, [rbp+0x908]; call qword ptr [rbp+0xf10]; 
0x000000001509a7: add dword ptr [rax], 0x1; mov rax, [rbx+0x60]; call qword ptr [rax+0x8]; 
0x00000000121ffc: add dword ptr [rax], 0x1; ret; 
0x0000000009ae6c: add dword ptr [rax], 0x89480000; fistp qword ptr [rax+0xca], st; syscall; 
0x00000000046da6: add dword ptr [rax], 0x89480000; out dx, eax; mov eax, 0xca; syscall; 
0x00000000046958: add dword ptr [rax], 0x894c0000; idiv dword ptr [rax+0xca]; syscall; 
0x00000000047138: add dword ptr [rax], 0x894c0000; out dx, eax; mov eax, 0xca; syscall; 
0x000000000e1dce: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x10d702; syscall; 
0x000000000e1c8e: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x10d842; syscall; 
0x000000000e1bd6: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x10d8fa; syscall; 
0x000000000e1afa: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x10d9ce; syscall; 
0x000000000e192a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x10db5e; syscall; 
0x000000000e1766: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x10dcda; syscall; 
0x000000000e13ac: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x10e03c; syscall; 
0x000000000dfe9e: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x10f4c2; syscall; 
0x000000000dfd5e: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x10f602; syscall; 
0x000000000dfca6: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x10f6ba; syscall; 
0x000000000df8da: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x10fa7e; syscall; 
0x000000000df70a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x10fc0e; syscall; 
0x000000000df546: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x10fd8a; syscall; 
0x000000000dec5e: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x11061a; syscall; 
0x000000000d2bba: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x11c5d6; syscall; 
0x000000000d2986: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x11c80a; syscall; 
0x000000000ca65a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x126b46; syscall; 
0x0000000009c81a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x150356; syscall; 
0x0000000009e1c6: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x150d32; syscall; 
0x0000000009dfe6: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x150f12; syscall; 
0x0000000009ddfa: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x1510fe; syscall; 
0x0000000009dd8a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x15116e; syscall; 
0x0000000009db5a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x15139e; syscall; 
0x00000000099aba: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x1530b6; syscall; 
0x00000000099a5a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x153116; syscall; 
0x0000000009969a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x1534d6; syscall; 
0x0000000009943a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x153736; syscall; 
0x00000000098dd2: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x153d9e; syscall; 
0x00000000098d9a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x153dd6; syscall; 
0x0000000009aa6a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x15440e; syscall; 
0x00000000099fce: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x154e9a; syscall; 
0x0000000009603b: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x158e2d; syscall; 
0x0000000009600a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x158e6e; syscall; 
0x00000000095d8a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x1590ee; syscall; 
0x00000000095866: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x159612; syscall; 
0x00000000094c4b: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x159ba5; syscall; 
0x00000000094a76: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x159d7a; syscall; 
0x000000000948da: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x159f16; syscall; 
0x0000000009394c: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x15ae64; syscall; 
0x0000000009340c: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x15b3a4; syscall; 
0x00000000093068: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x15b748; syscall; 
0x00000000092cfc: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x15bab4; syscall; 
0x00000000091678: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x15d138; syscall; 
0x000000000913b8: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x15d3f8; syscall; 
0x00000000091044: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x15d76c; syscall; 
0x00000000084389: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x16a3e7; syscall; 
0x00000000083f8c: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x16a7e4; syscall; 
0x00000000083ee1: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x16a88f; syscall; 
0x0000000008201a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x16f186; syscall; 
0x000000000610ce: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x18d672; syscall; 
0x00000000060e4a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x18d8f2; syscall; 
0x0000000005ec76: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x18fabe; syscall; 
0x0000000005eb36: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x18fbfe; syscall; 
0x00000000054d9a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x199986; syscall; 
0x00000000054bba: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x199b66; syscall; 
0x0000000005468a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x19a096; syscall; 
0x0000000005229e: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x19c252; syscall; 
0x00000000052122: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x19c3ce; syscall; 
0x000000000520ea: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x19c406; syscall; 
0x000000000478d6: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x1a6bfa; syscall; 
0x00000000047816: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x1a6cba; syscall; 
0x0000000004774e: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x1a6d82; syscall; 
0x00000000047676: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x1a6e5a; syscall; 
0x0000000004676e: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x1a750a; syscall; 
0x000000000466a9: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x1a75cf; syscall; 
0x00000000046507: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x1a7771; syscall; 
0x0000000004642d: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x1a784b; syscall; 
0x000000000384f7: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x1b5731; syscall; 
0x00000000036b74: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x1b707c; syscall; 
0x00000000035839: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x1b830f; syscall; 
0x0000000003581c: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x1b832c; syscall; 
0x00000000035754: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x1b83f4; syscall; 
0x0000000002606e: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x1cb132; syscall; 
0x00000000025f02: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x1cb29e; syscall; 
0x00000000025de2: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x1cb3be; syscall; 
0x0000000002283d: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x1cb403; syscall; 
0x000000001987e6: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x55492; syscall; 
0x000000001989a6: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x55e4a; syscall; 
0x00000000198cd6: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x57832; syscall; 
0x0000000015e076: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x935d2; syscall; 
0x0000000015cf3e: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x9470a; syscall; 
0x0000000015ce5e: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x947ea; syscall; 
0x0000000015cc76: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x949d2; syscall; 
0x0000000015cbe6: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x94a62; syscall; 
0x0000000015cb46: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x94b02; syscall; 
0x0000000015ca96: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x94bb2; syscall; 
0x0000000015c6c6: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x94f82; syscall; 
0x00000000152436: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x9e9aa; syscall; 
0x000000001522d6: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x9eb0a; syscall; 
0x000000001520ca: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x9ed16; syscall; 
0x00000000151f2a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x9eeb6; syscall; 
0x00000000151d96: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x9f04a; syscall; 
0x00000000151c56: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x9f18a; syscall; 
0x00000000151af6: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x9f2ea; syscall; 
0x000000001519e6: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x9f3fa; syscall; 
0x0000000014e4d6: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xa2906; syscall; 
0x0000000014c7de: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xa453a; syscall; 
0x0000000014c69e: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xa467a; syscall; 
0x0000000014c5e6: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xa4732; syscall; 
0x0000000014c4fa: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xa4816; syscall; 
0x0000000014c32a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xa49b6; syscall; 
0x0000000014c166: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xa4b52; syscall; 
0x000000001467c8: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xaa38c; syscall; 
0x0000000014462a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xac496; syscall; 
0x000000001442f2: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xac7ce; syscall; 
0x00000000143f72: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xacb4e; syscall; 
0x00000000143d4c: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xacd74; syscall; 
0x00000000143bea: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xaced6; syscall; 
0x000000001439ad: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xad113; syscall; 
0x00000000142f56: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xadab2; syscall; 
0x00000000142dd4: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xadc34; syscall; 
0x00000000142d9a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xadc6e; syscall; 
0x00000000142c82: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xadd86; syscall; 
0x0000000014243e: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xae5ca; syscall; 
0x00000000142376: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xae692; syscall; 
0x0000000014225a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xae7ae; syscall; 
0x00000000140e87: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xaf929; syscall; 
0x0000000013d706: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xb2e02; syscall; 
0x0000000013d40a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xb30fe; syscall; 
0x000000001390da: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xb741a; syscall; 
0x00000000138b5a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xb797e; syscall; 
0x00000000138996: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xb7afa; syscall; 
0x000000001388ce: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xb7b62; syscall; 
0x0000000013878e: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xb7ca2; syscall; 
0x000000001386d6: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xb7d5a; syscall; 
0x00000000137fe6: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xb8442; syscall; 
0x00000000137cc6: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xb8762; syscall; 
0x00000000137b0a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xb891e; syscall; 
0x0000000013477e: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xbbb3a; syscall; 
0x0000000013463e: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xbbc7a; syscall; 
0x00000000134586: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xbbd32; syscall; 
0x000000001344a6: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xbbe0a; syscall; 
0x00000000133fda: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xbc25e; syscall; 
0x00000000133a0a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xbc7ce; syscall; 
0x000000001334ea: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xbcca6; syscall; 
0x0000000013331e: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xbce32; syscall; 
0x000000001331de: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xbcf72; syscall; 
0x00000000133126: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xbd02a; syscall; 
0x00000000133046: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xbd102; syscall; 
0x00000000132c2a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xbd4d6; syscall; 
0x0000000013260e: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xbda92; syscall; 
0x000000001324b6: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xbdbea; syscall; 
0x000000001323f6: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xbdcaa; syscall; 
0x0000000013230e: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xbdd8a; syscall; 
0x0000000013222a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xbde36; syscall; 
0x00000000131bca: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xbe456; syscall; 
0x000000001319be: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xbe61a; syscall; 
0x00000000131866: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xbe772; syscall; 
0x000000001317a6: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xbe832; syscall; 
0x000000001316be: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xbe912; syscall; 
0x00000000130aaa: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xbf4ae; syscall; 
0x0000000013083a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xbf6de; syscall; 
0x000000001300ba: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xbfdfe; syscall; 
0x000000001265be: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xc9862; syscall; 
0x0000000012647e: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xc99a2; syscall; 
0x000000001263c6: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xc9a5a; syscall; 
0x00000000125fec: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xc9e2c; syscall; 
0x00000000125dea: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xc9ff6; syscall; 
0x00000000125c0a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xca18e; syscall; 
0x00000000125a46: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xca30a; syscall; 
0x00000000125976: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xca386; syscall; 
0x000000001258ac: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xca450; syscall; 
0x00000000125817: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xca4e5; syscall; 
0x00000000124b0e: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xcb1ba; syscall; 
0x000000001249ce: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xcb2fa; syscall; 
0x00000000124916: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xcb3b2; syscall; 
0x0000000012431c: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xcb9a4; syscall; 
0x0000000012411a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xcbb4e; syscall; 
0x00000000123f3a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xcbcc6; syscall; 
0x00000000123d76: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xcbe22; syscall; 
0x00000000118706: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xd713a; syscall; 
0x000000001185ea: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xd7256; syscall; 
0x0000000011818a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xd76b6; syscall; 
0x00000000117c4f: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xd7bf1; syscall; 
0x00000000106aba: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xe8af6; syscall; 
0x00000000124844: add dword ptr [rax], 0xcab80000; add [rax], al; add [rdi], cl; add eax, 0xfffd2ae9; jmp qword ptr [rsi+0x2e]; 
0x000000000e0dc7: add dword ptr [rax], 0xcab80000; add [rax], al; add [rdi], cl; add eax, 0xfffea1e9; jmp qword ptr [rsi+0xf]; 
0x000000000910a4: add dword ptr [rax], 0xcab80000; add [rax], al; add [rdi], cl; add eax, 0xffff44e9; jmp qword ptr [rsi+0x66]; 
0x0000000012555f: add dword ptr [rax], 0xcab80000; add [rax], al; add [rdi], cl; add eax, 0xffff4ce9; call qword ptr [rax+0x1ba]; 
0x000000001255c4: add dword ptr [rax], 0xcab80000; add [rax], al; add [rdi], cl; add eax, 0xffff4de9; jmp qword ptr [rsi+0x2e]; 
0x00000000096192: add dword ptr [rax], 0xcab80000; add [rax], al; add [rdi], cl; add eax, 0xffff70e9; jmp qword ptr [rsi+0x66]; 
0x00000000099fa3: add dword ptr [rax], 0xd8890000; syscall; 
0x0000000008b026: add dword ptr [rbp+0x31], 0x1bad2; add [rax], al; mov esi, 0x81; mov eax, 0xca; syscall; 
0x000000000830f6: add dword ptr [rbp+0x31], 0xffffffd2; mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x00000000146a2d: add dword ptr [rbx+0x22a8], 0x1; mov rdi, rbp; call qword ptr [rax+0x18]; 
0x0000000010b2d1: add dword ptr [rbx], 0x0; add [rcx-0x80], al; jmp qword ptr [rdx]; 
0x0000000012da62: add dword ptr [rbx], 0x0; lea rdx, [rip+0x3d894]; cmovne rax, rdx; ret; 
0x00000000157824: add dword ptr [rdi+0x28], 0x4; mov eax, 0x1; ret; 
0x00000000062fe9: add dword ptr [rdi+0x4], 0x1; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000000ec843: add dword ptr [rdi+0x4], 0x1; pop rbx; pop rbp; pop r12; ret; 
0x000000000bc76f: add dword ptr [rdx+0x2b], 0xe2748104; ret; 
0x00000000063060: add dword ptr [rdx+0x4], 0x1; xor eax, eax; ret; 
0x00000000121d36: add dword ptr [rdx+rax*2], 0x1; ret; 
0x0000000015781b: add dword ptr [rdx-0xc6f0003], 0x83fa1e0f; sub [r8+r15*4], r8b; add [rax], eax; add [rax], al; ret; 
0x000000000938d6: add dword ptr [rip+0x15aee7], 0x1; pop rbx; ret; 
0x00000000046c4d: add dword ptr [rip+0x1aa68c], 0x1; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000198c1a: add eax, 0x0; add bl, al; nop [rax]; ret; 
0x000000000a8b0f: add eax, 0x1063d0; mov eax, edx; movsxd rax, [r8+rax*4]; add rax, r8; notrack jmp rax; 
0x000000000b988d: add eax, 0x10; lea r11, [rip+0xf5be9]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b803d: add eax, 0x10; lea r11, [rip+0xf7259]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000013b41a: add eax, 0x10; ret; 
0x000000000e4611: add eax, 0x10ce6a; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000e45b9: add eax, 0x10ced2; test eax, eax; jne short 0x00000000000e45f0; mov eax, 0x77; syscall; 
0x000000000e4561: add eax, 0x10cf1a; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000e4509: add eax, 0x10cf82; test eax, eax; jne short 0x00000000000e4540; mov eax, 0x75; syscall; 
0x000000000e4283: add eax, 0x10d1f8; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000e4239: add eax, 0x10d252; test eax, eax; jne short 0x00000000000e4270; mov eax, 0x6a; syscall; 
0x000000000e41e3: add eax, 0x10d298; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000e4199: add eax, 0x10d2f2; test eax, eax; jne short 0x00000000000e41d0; mov eax, 0x69; syscall; 
0x000000000de15b: add eax, 0x10dd10; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000e30e2: add eax, 0x10e3a1; mov rdi, r9; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000dd17a: add eax, 0x10ecf1; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000dd0d2: add eax, 0x10ed89; mov rax, [rax+0x1a0]; test rax, rax; je short 0x00000000000dd118; call rax; 
0x000000000dd052: add eax, 0x10ee09; mov rax, [rax+0x1c0]; test rax, rax; je short 0x00000000000dd098; call rax; 
0x000000000df1a0: add eax, 0x1100e6; add [rbx+rcx*4+0x3d], ecx; ret; 
0x000000000df419: add eax, 0x112072; test eax, eax; jne short 0x00000000000df450; mov eax, 0x74; syscall; 
0x000000000bcd89: add eax, 0x112c2; lea rdx, [rip+0xd575b]; cmovne rax, rdx; ret; 
0x000000000ddbb2: add eax, 0x113879; lea rdi, [rip+0x10fdc2]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000bcd42: add eax, 0x11389; cmove rax, rdx; ret; 
0x000000000ddb6c: add eax, 0x1138c7; lea rdi, [rip+0x10fe08]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000dd9ca: add eax, 0x113a61; lea rdi, [rip+0x10ffaa]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000dd99b: add eax, 0x113a98; lea rdi, [rip+0x10ffd9]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000dd8d2: add eax, 0x113b59; lea rdi, [rip+0x1100a2]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000dd8a9: add eax, 0x113b8a; lea rdi, [rip+0x1100cb]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000dd3d7: add eax, 0x114054; lea rdi, [rip+0x11059d]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000bdfb8: add eax, 0x11923; lea rdx, [rip+0x116fc]; cmovne rax, rdx; ret; 
0x000000000d1ded: add eax, 0x11a056; movaps [rax], xmm0; add rsp, 0x10; pop rbp; ret; 
0x000000000bc882: add eax, 0x11b79; cmove rax, rdx; ret; 
0x000000000d01a2: add eax, 0x11bcc9; mov dword ptr fs:[rax], 0x16; xor eax, eax; ret; 
0x000000000d0182: add eax, 0x11bce9; mov dword ptr fs:[rax], 0x4b; xor eax, eax; add rsp, 0x8; ret; 
0x000000000d0162: add eax, 0x11ef39; add rsp, 0x8; ret; 
0x0000000009f842: add eax, 0x12099; cmove rax, rdx; ret; 
0x0000000009f16b: add eax, 0x12330; lea rdx, [rip+0xf18e9]; cmovne rax, rdx; ret; 
0x0000000009f692: add eax, 0x12549; cmove rax, rdx; ret; 
0x000000000bca32: add eax, 0x12699; cmove rax, rdx; ret; 
0x0000000009f6d2: add eax, 0x126a9; cmove rax, rdx; ret; 
0x000000000ca32a: add eax, 0x127109; lea rdi, [rip+0x12364a]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000ca147: add eax, 0x1272e4; lea rdi, [rip+0x12382d]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000bcb22: add eax, 0x12879; cmove rax, rdx; ret; 
0x000000000bc8a8: add eax, 0x12933; cmovne rax, rdx; ret; 
0x000000000bc842: add eax, 0x129c9; cmove rax, rdx; ret; 
0x0000000007f374: add eax, 0x12f247; movsxd rax, [rax+rcx*4]; add rax, rdx; jmp rax; 
0x000000000bc992: add eax, 0x12f89; cmove rax, rdx; ret; 
0x0000000007e4ff: add eax, 0x1300bc; mov r9, [rbp-0x508]; movsxd rax, [rax+rcx*4]; add rax, rdx; jmp rax; 
0x0000000007e045: add eax, 0x1304f6; movsxd rax, [rax+rcx*4]; add rax, rdx; jmp rax; 
0x0000000007b1bd: add eax, 0x13317e; movsxd rax, [rax+rdx*4]; lea rdx, [rip-0x4d4]; add rax, rdx; jmp rax; 
0x000000000787de: add eax, 0x1359dd; movsxd rax, [rax+rdx*4]; add rax, rbx; jmp rax; 
0x00000000077eba: add eax, 0x136301; movsxd rax, [rax+rdx*4]; add rax, rbx; jmp rax; 
0x00000000077876: add eax, 0x136845; movsxd rax, [rax+rcx*4]; add rax, rbx; jmp rax; 
0x000000000778d1: add eax, 0x13686a; movsxd rax, [rax+rdx*4]; add rax, rbx; jmp rax; 
0x00000000165eed: add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000167286: add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001671e8: add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169a78: add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b2e8: add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000009e986: add eax, 0x14d4e5; mov dword ptr fs:[rax], 0xc; xor eax, eax; ret; 
0x0000000009e803: add eax, 0x14d748; call qword ptr [rax]; 
0x0000000009e622: add eax, 0x14d929; call qword ptr [rax]; 
0x0000000009e552: add eax, 0x14d9f9; call qword ptr [rax]; 
0x0000000009f8d5: add eax, 0x14f66e; add rsp, 0x8; ret; 
0x0000000009f8ce: add eax, 0x14f68d; mov [rip+0x14f66e], rax; add rsp, 0x8; ret; 
0x0000000009f897: add eax, 0x14f6ac; ret; 
0x0000000009f890: add eax, 0x14f6cb; mov [rip+0x14f6ac], rax; ret; 
0x0000000009fa8c: add eax, 0x1519b7; mov edi, [rip+0x14f52d]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000009f8ad: add eax, 0x151b8e; lea rdi, [rip+0x14f70b]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000009a0fa: add eax, 0x151de1; mov [rax], rdi; ret; 
0x0000000009a0f0: add eax, 0x151eeb; mov [rax], rsi; mov rax, [rip+0x151de1]; mov [rax], rdi; ret; 
0x0000000009945f: add eax, 0x152a0c; xor r8d, r8d; mov dword ptr fs:[rax], 0xc; mov rax, r8; ret; 
0x00000000099208: add eax, 0x152c5b; mov rax, [rax]; test rax, rax; je short 0x0000000000099217; call rax; 
0x000000000980c2: add eax, 0x153da9; xor r8d, r8d; mov dword ptr fs:[rax], 0xc; mov rax, r8; ret; 
0x000000000979ff: add eax, 0x1543bc; mov [rsp+0x8], r8; xor edi, edi; call qword ptr [rax]; 
0x000000000978ea: add eax, 0x1544d1; xor edi, edi; call qword ptr [rax]; 
0x000000000978a4: add eax, 0x154517; call qword ptr [rax]; 
0x00000000097591: add eax, 0x15482a; mov [rsp+0x18], r11; mov rdi, r13; mov [rsp+0x10], r10; call qword ptr [rax]; 
0x0000000009a08f: add eax, 0x154de0; add [rax], al; add [rax], al; ret; 
0x00000000096200: add eax, 0x155cdb; mov [rax], rdx; ret; 
0x000000000961f6: add eax, 0x155de5; mov [rax], rsi; mov rax, [rip+0x155cdb]; mov [rax], rdx; ret; 
0x000000000960eb: add eax, 0x156a90; add rsp, 0x10; pop rbp; ret; 
0x00000000095263: add eax, 0x157044; ret; 
0x0000000009523d: add eax, 0x15704e; ret; 
0x00000000095259: add eax, 0x157052; add [rax], eax; add [rax], al; mov [rip+0x157044], eax; ret; 
0x00000000095214: add eax, 0x15706f; ret; 
0x00000000095232: add eax, 0x157079; add [rax], eax; add [rax], al; mov [rip+0x15704e], rax; ret; 
0x000000000951f4: add eax, 0x157087; ret; 
0x00000000095209: add eax, 0x1570a2; add [rax], eax; add [rax], al; mov [rip+0x15706f], rax; ret; 
0x000000000951e9: add eax, 0x1570c2; add [rax], eax; add [rax], al; mov [rip+0x157087], rax; ret; 
0x00000000094eda: add eax, 0x157409; ret; 
0x00000000094ec3: add eax, 0x157418; ret; 
0x00000000094e6a: add eax, 0x157429; ret; 
0x00000000094e5a: add eax, 0x157441; ret; 
0x0000000012da42: add eax, 0x158d4800; add eax, 0x480005db; cmove eax, edx; ret; 
0x000000000952a7: add eax, 0x159bf4; ret; 
0x00000000095279: add eax, 0x159c0e; ret; 
0x00000000094be9: add eax, 0x159c42; mov rax, [rax+0x8]; test rax, rax; je short 0x0000000000094bf9; call rax; 
0x00000000094b79: add eax, 0x159cb2; mov rax, [rax+0x10]; test rax, rax; je short 0x0000000000094b89; call rax; 
0x00000000093866: add eax, 0x159d35; ret; 
0x00000000094af1: add eax, 0x159d3a; mov rax, [rax]; test rax, rax; je short 0x0000000000094b00; call rax; 
0x00000000093971: add eax, 0x15ae4e; add [rax], al; add [rax], al; ret; 
0x00000000093966: add eax, 0x15ae51; add [rax], al; add [rax], al; mov qword ptr [rip+0x15ae4e], 0x0; ret; 
0x00000000094758: add eax, 0x15cd2f; add [rax], eax; add [rax], al; ret; 
0x00000000094751: add eax, 0x15cd4a; pop rbx; mov dword ptr [rip+0x15cd2f], 0x1; ret; 
0x000000000945b0: add eax, 0x15ce5b; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000094580: add eax, 0x15ce83; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000094550: add eax, 0x15ceab; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000094520: add eax, 0x15ced3; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000944f0: add eax, 0x15cefb; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000944c0: add eax, 0x15cf23; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000094490: add eax, 0x15cf4b; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000094460: add eax, 0x15cf73; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000943f0: add eax, 0x15cfa3; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000094426: add eax, 0x15cfa5; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000943c0: add eax, 0x15cfcb; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000094390: add eax, 0x15cff3; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000094360: add eax, 0x15d01b; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000094330: add eax, 0x15d043; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000094300: add eax, 0x15d06b; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000942d0: add eax, 0x15d093; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000942a0: add eax, 0x15d0bb; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000094270: add eax, 0x15d0e3; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000094240: add eax, 0x15d10b; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000094210: add eax, 0x15d133; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000941e0: add eax, 0x15d15b; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000008d372: add eax, 0x15eaf9; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000008aeea: add eax, 0x160f81; mov dword ptr fs:[rax], 0x9; mov eax, 0xffffffff; ret; 
0x000000000a0768: add eax, 0x162c3; lea rdx, [rip+0xd8bcc]; cmovne rax, rdx; ret; 
0x00000000084762: add eax, 0x167709; mov dword ptr fs:[rax], 0x16; mov rax, 0xffffffffffffffff; ret; 
0x000000000d427e: add eax, 0x16d; ret; 
0x0000000007a6fa: add eax, 0x1730b1; shl rdx, 0x2; lea rcx, [rbx+rdx]; add rdx, r15; call qword ptr [rax+r9*8]; 
0x0000000009f248: add eax, 0x176f3; lea rdx, [rip+0xd5dbc]; cmovne rax, rdx; ret; 
0x0000000007404a: add eax, 0x179761; shl rdx, 0x2; lea rcx, [rbx+rdx]; add rdx, r15; call qword ptr [rax+r9*8]; 
0x0000000004266f: add eax, 0x17a0ec; por xmm0, xmm1; ret; 
0x00000000042432: add eax, 0x17a2e9; mulss xmm0, [rip+0x17af49]; ret; 
0x0000000004242b: add eax, 0x17a300; orps xmm0, [rip+0x17a2e9]; mulss xmm0, [rip+0x17af49]; ret; 
0x00000000042406: add eax, 0x17a325; orps xmm0, [rip+0x17a32e]; mulss xmm0, [rip+0x17af72]; ret; 
0x0000000004240d: add eax, 0x17a32e; mulss xmm0, [rip+0x17af72]; ret; 
0x00000000041f27: add eax, 0x17a7c4; andpd xmm1, [rip+0x17a7ac]; orpd xmm0, xmm1; ret; 
0x00000000147321: add eax, 0x17a; mov esi, 0x4; mov rdi, rbp; lea r9, [rsp+0x20]; call qword ptr [rax]; 
0x00000000042120: add eax, 0x17abcb; ret; 
0x000000000420b1: add eax, 0x17ac2a; orpd xmm1, [rip+0x17a642]; mulsd xmm0, xmm1; ret; 
0x0000000004208b: add eax, 0x17ac58; orpd xmm1, [rip+0x17a678]; mulsd xmm0, xmm1; ret; 
0x00000000042485: add eax, 0x17af06; ret; 
0x0000000004243a: add eax, 0x17af49; ret; 
0x00000000042415: add eax, 0x17af72; ret; 
0x000000000328f2: add eax, 0x181a86; ret; 
0x000000000328d6: add eax, 0x181aa2; cmp [rdx+0x38], edi; jbe short 0x00000000000328f7; mov rax, [rdx+rdi*8+0x40]; ret; 
0x00000000042bc6: add eax, 0x18c48348; ret; 
0x0000000005eddc: add eax, 0x18e9cf; mov rcx, r14; call qword ptr [rax+r8*8]; 
0x000000000241d6: add eax, 0x18fcc3; ret; 
0x000000000241e6: add eax, 0x191a8c; ret; 
0x00000000052a2a: add eax, 0x19bc31; mov byte ptr [rax+rdx], 0x0; ret; 
0x00000000052a23: add eax, 0x19bc3d; lea rax, [rip+0x19bc31]; mov byte ptr [rax+rdx], 0x0; ret; 
0x00000000054361: add eax, 0x1; cmp byte ptr [rax+0x1], 0x0; jne short 0x0000000000054360; pop rbx; ret; 
0x00000000121fe2: add eax, 0x1; mov [rdx], ax; ret; 
0x00000000121fe1: add eax, 0x1; mov [rdx], ax; ret; 
0x00000000121fa1: add eax, 0x1; mov [rdx], eax; ret; 
0x000000000a8831: add eax, 0x1; movsx edx, byte ptr [rdi+rax]; cmp edx, esi; je short 0x00000000000a8830; ret; 
0x00000000024ced: add eax, 0x1; push rax; call rbx; 
0x000000000a06ef: add eax, 0x1; ret; 
0x000000000a2901: add eax, 0x1; test dl, dl; mov edx, 0x0; cmove rax, rdx; ret; 
0x00000000048362: add eax, 0x1a3b09; mov dword ptr fs:[rax], 0x5; mov eax, 0xffffffff; ret; 
0x00000000047c8a: add eax, 0x1a41e1; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000440ab: add eax, 0x1a7dc0; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000043f6b: add eax, 0x1a7f00; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000043e22: add eax, 0x1a8049; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000044124: add eax, 0x1a807f; mov eax, edx; ret; 
0x000000000440d5: add eax, 0x1a80ce; ret; 
0x000000000440c5: add eax, 0x1a80e2; ret; 
0x00000000043d62: add eax, 0x1a8109; mov dword ptr fs:[rax], 0x16; mov rax, 0xffffffffffffffff; ret; 
0x00000000043c86: add eax, 0x1a81e5; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x00000000043c6a: add eax, 0x1a8201; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000043c22: add eax, 0x1a8249; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000043bd2: add eax, 0x1a8299; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000043b83: add eax, 0x1a82e8; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000043b24: add eax, 0x1a8347; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000009f118: add eax, 0x1a893; lea rdx, [rip+0x12e7c]; cmovne rax, rdx; ret; 
0x000000000432d2: add eax, 0x1a8b99; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000043092: add eax, 0x1a8dd9; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000042f52: add eax, 0x1a8f19; mov dword ptr fs:[rax], 0x16; mov rax, 0xffffffffffffffff; ret; 
0x00000000047fb6: add eax, 0x1a934b; add rsp, 0x8; ret; 
0x00000000042573: add eax, 0x1a98f8; mov dword ptr fs:[rax], 0x22; add rsp, 0x8; ret; 
0x0000000004224d: add eax, 0x1a9c1e; mov dword ptr fs:[rax], 0x22; add rsp, 0x8; ret; 
0x000000000475ae: add eax, 0x1a9d39; add [rax], al; add [rax], al; mov eax, [rax+0x58]; ret; 
0x00000000041e8c: add eax, 0x1a9fdf; mov dword ptr fs:[rax], 0x22; add rsp, 0x8; ret; 
0x000000000412e2: add eax, 0x1aab89; mov dword ptr fs:[rax], 0x9; mov eax, 0xffffffff; pop rbp; ret; 
0x00000000041282: add eax, 0x1aabe9; mov dword ptr fs:[rax], 0x2a; mov rax, r11; ret; 
0x00000000042e00: add eax, 0x1ae613; mov rsi, rsp; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000a033b: add eax, 0x1b0d0; cmove rax, rdx; ret; 
0x000000000a0a26: add eax, 0x1b1a5; lea rdx, [rip+0x1b0be]; cmove rax, rdx; ret; 
0x000000000a06b6: add eax, 0x1b4f5; lea rdx, [rip+0x1b40e]; cmove rax, rdx; ret; 
0x000000000a0556: add eax, 0x1b675; lea rdx, [rip+0x1b58e]; cmove rax, rdx; ret; 
0x000000000344d6: add eax, 0x1b792d; add rax, fs:[0x0]; ret; 
0x000000000344f6: add eax, 0x1b79ed; add rax, fs:[0x0]; ret; 
0x00000000034516: add eax, 0x1b7a0d; add rax, fs:[0x0]; ret; 
0x00000000033d86: add eax, 0x1b803d; movsxd rdi, edi; mov rax, fs:[rax]; mov rax, [rax+rdi*8+0x80]; ret; 
0x00000000033d42: add eax, 0x1b80a1; mov [rax], rdx; ret; 
0x00000000038599: add eax, 0x1b8e9a; lea rdi, [rip+0x1b555b]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000038538: add eax, 0x1b8ef3; lea rdi, [rip+0x1b55bc]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000a05db: add eax, 0x1b940; cmovne rax, rdx; ret; 
0x00000000032916: add eax, 0x1b94ad; mov rax, fs:[rax]; mov rax, [rax]; mov eax, [rax+0xa8]; ret; 
0x00000000036584: add eax, 0x1baeaf; lea rdi, [rip+0x1b7630]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003651b: add eax, 0x1baf10; lea rdi, [rip+0x1b7699]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000363ec: add eax, 0x1bb047; lea rdi, [rip+0x1b77c8]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003638c: add eax, 0x1bb097; lea rdi, [rip+0x1b7828]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003627e: add eax, 0x1bb1b5; lea rdi, [rip+0x1b78f6]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000036212: add eax, 0x1bb219; lea rdi, [rip+0x1b7962]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003287e: add eax, 0x1bb21d; mov [rip+0x1bb274], dl; ret; 
0x00000000035f7b: add eax, 0x1bb4b8; lea rdi, [rip+0x1b79f9]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035f4d: add eax, 0x1bb4e6; lea rdi, [rip+0x1b7ba7]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035e6f: add eax, 0x1bb5c4; lea rdi, [rip+0x1b7b05]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035e48: add eax, 0x1bb5eb; lea rdi, [rip+0x1b7cac]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035d01: add eax, 0x1bb732; lea rdi, [rip+0x1b7c73]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035ccf: add eax, 0x1bb764; lea rdi, [rip+0x1b7e25]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000359c7: add eax, 0x1bba6c; lea rdi, [rip+0x1b81ad]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035982: add eax, 0x1bbaa1; lea rdi, [rip+0x1b81f2]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035925: add eax, 0x1bbafe; lea rdi, [rip+0x1b81cf]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000358fe: add eax, 0x1bbb25; lea rdi, [rip+0x1b8076]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035704: add eax, 0x1bbd2f; lea rdi, [r13+0x80]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003559c: add eax, 0x1bbe97; lea rdi, [r13+0x80]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000353b1: add eax, 0x1bc07a; mov rdi, r12; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003538e: add eax, 0x1bc0a5; mov rdi, r12; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035365: add eax, 0x1bc0ce; lea rdi, [r13+0x80]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003506c: add eax, 0x1bc3b7; lea rdi, [r13+0x80]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000345b3: add eax, 0x1bce78; lea rdi, [rip+0x1b9541]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000033adf: add eax, 0x1bd954; lea rdi, [rip+0x1b9e95]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000033a04: add eax, 0x1bda27; lea rdi, [rip+0x1b9f70]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003398d: add eax, 0x1bdaa6; lea rdi, [rip+0x1b9fe7]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000338f3: add eax, 0x1bdb38; lea rdi, [rip+0x1ba081]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000033359: add eax, 0x1be0da; lea rdi, [rip+0x1ba61b]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000332ef: add eax, 0x1be144; lea rdi, [rip+0x1ba685]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000330ef: add eax, 0x1be33c; lea rdi, [rip+0x1ba885]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000002f5d6: add eax, 0x1be38d; ret; 
0x0000000009fb28: add eax, 0x1bee3; cmovne rax, rdx; ret; 
0x000000000310be: add eax, 0x1c0375; lea rdi, [rip+0x1bc8b6]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000030cb6: add eax, 0x1c077d; lea rdi, [rip+0x1bccbe]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000030b64: add eax, 0x1c08cf; lea rdi, [rip+0x1bce10]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000030a7c: add eax, 0x1c09b7; lea rdi, [rip+0x1bcef8]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000309ef: add eax, 0x1c0a44; lea rdi, [rip+0x1bcf85]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000307ba: add eax, 0x1c0c79; lea rdi, [rip+0x1bd1ba]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000030772: add eax, 0x1c0cb9; lea rdi, [rip+0x1bd202]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000009f868: add eax, 0x1c0f3; cmovne rax, rdx; ret; 
0x0000000009f278: add eax, 0x1c633; cmovne rax, rdx; ret; 
0x00000000026f89: add eax, 0x1c69c6; test eax, eax; je short 0x0000000000026f98; ret; 
0x0000000002471a: add eax, 0x1c7751; mov dword ptr fs:[rax], 0x9; mov eax, 0xffffffff; ret; 
0x00000000024436: add eax, 0x1c7a35; add rax, fs:[0x0]; ret; 
0x0000000002402d: add eax, 0x1c7e7e; mov rsi, [rsp+0x8]; mov edi, [rsp+0x14]; mov rdx, [rax]; call rbx; 
0x00000000025ae6: add eax, 0x1cb6bd; ret; 
0x00000000025ad6: add eax, 0x1cb6dd; ret; 
0x000000000240d8: add eax, 0x1cd39b; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000023a51: add eax, 0x1cd8d2; ret; 
0x000000000de2b8: add eax, 0x1f0fb4eb; add [rax], r8b; endbr64; mov rax, [rdi+0x20]; ret; 
0x0000000003457a: add eax, 0x200; mov fs:[rdx], rax; ret; 
0x0000000019879f: add eax, 0x208ae800; clc; call far fword ptr [rbx+0x48]; 
0x00000000188705: add eax, 0x20; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x0000000018464a: add eax, 0x20; add rax, rdi; vzeroupper; ret; 
0x000000001156fa: add eax, 0x2404c641; add [rcx+rcx*4-0x20], cl; pop r12; ret; 
0x0000000019717f: add eax, 0x261fc; divss xmm0, [rip+0x27508]; ret; 
0x000000001158c4: add eax, 0x26; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000197187: add eax, 0x27508; ret; 
0x00000000042ff9: add eax, 0x27b9; add [rcx+0x48050fc8], cl; mov edi, eax; mov eax, 0xba; syscall; 
0x000000000b3a44: add eax, 0x289018b; mov al, [rcx+0x4]; mov [rdx+0x4], al; mov rax, rdi; ret; 
0x00000000047474: add eax, 0x28c48348; ret; 
0x000000000cfb18: add eax, 0x2; ret; 
0x00000000178544: add eax, 0x2c5850f; add [rax], al; ret; 
0x00000000190cf2: add eax, 0x2e6666c3; nop [rax+rax]; lea rax, [rdi+0x6]; ret; 
0x0000000015cf4f: add eax, 0x2e6690eb; nop [rax+rax]; nop [rax]; endbr64; ret; 
0x00000000142387: add eax, 0x31e8c35d; idiv edi; call qword ptr [rax-0x5e1f00d]; 
0x0000000017c8f5: add eax, 0x364850f; add [rax], al; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x000000000a8c02: add eax, 0x3819; cmove rax, rdx; ret; 
0x0000000012da60: add eax, 0x3830b; lea rdx, [rip+0x3d894]; cmovne rax, rdx; ret; 
0x0000000012d8e0: add eax, 0x384ab; lea rdx, [rip+0x3da34]; cmovne rax, rdx; ret; 
0x0000000013669d: add eax, 0x38c48348; ret; 
0x0000000002a5d9: add eax, 0x39480000; ret; 
0x000000000cfb31: add eax, 0x3; ret; 
0x0000000012d9a0: add eax, 0x3adcb; lea rdx, [rip+0x40464]; cmovne rax, rdx; ret; 
0x00000000162055: add eax, 0x3e74e800; out dx, al; dec dword ptr [rax-0x77]; ret; 
0x0000000015d152: add eax, 0x3f98366; jbe short 0x000000000015d160; ret; 
0x00000000123132: add eax, 0x401f0fc3; add [rcx+0x107223c6], cl; lea rdx, [rdx+rsi*4]; add eax, [rdx+rcx]; ret; 
0x0000000010db8a: add eax, 0x401f0fc3; add bl, dh; nop edx, edi; mov eax, 0x5a; syscall; 
0x000000000e410a: add eax, 0x401f0fc3; add bl, dh; nop edx, edi; mov eax, 0x66; syscall; 
0x000000000e412a: add eax, 0x401f0fc3; add bl, dh; nop edx, edi; mov eax, 0x68; syscall; 
0x000000000e411a: add eax, 0x401f0fc3; add bl, dh; nop edx, edi; mov eax, 0x6b; syscall; 
0x000000000e413a: add eax, 0x401f0fc3; add bl, dh; nop edx, edi; mov eax, 0x6c; syscall; 
0x000000000e40fa: add eax, 0x401f0fc3; add bl, dh; nop edx, edi; mov eax, 0x6e; syscall; 
0x000000000e414a: add eax, 0x401f0fc3; add bl, dh; nop edx, edi; mov eax, 0x73; syscall; 
0x0000000012009a: add eax, 0x401f0fc3; add bl, dh; nop edx, edi; mov eax, 0xea; syscall; 
0x00000000188725: add eax, 0x40; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x0000000018466a: add eax, 0x40; add rax, rdi; vzeroupper; ret; 
0x0000000012cfc0: add eax, 0x41000000; pop rsp; pop rbp; ret; 
0x00000000048135: add eax, 0x48000000; mov [rsi+0x10], eax; xor eax, eax; mov dword ptr [rsi+0xc], 0x1000b; ret; 
0x00000000048184: add eax, 0x48000000; mov [rsi+0x10], eax; xor eax, eax; ret; 
0x0000000012a057: add eax, 0x4800002e; mov esi, ebx; mov edi, 0x2000005; mov rdx, rax; call qword ptr [r13+0x28]; 
0x0000000012da47: add eax, 0x480005db; cmove eax, edx; ret; 
0x00000000153097: add eax, 0x4800098d; lea edx, [rip+0x9dd9e]; mov fs:[rax], rdx; ret; 
0x000000000a0657: add eax, 0x48000eaf; cmove eax, edx; ret; 
0x00000000035e77: add eax, 0x48001b7b; ror eax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000012a05f: add eax, 0x48020000; mov edx, eax; call qword ptr [r13+0x28]; 
0x0000000017aa77: add eax, 0x48054289; lea eax, [rdx+0x8]; ret; 
0x00000000176727: add eax, 0x48054289; mov eax, edi; ret; 
0x0000000016d8c3: add eax, 0x480e8b48; mov [rdi+0x5], edx; mov [rdi], rcx; ret; 
0x000000000b85c6: add eax, 0x480f8948; mov [rdi+0x5], edx; lea rax, [rdi+0xc]; ret; 
0x000000000b9426: add eax, 0x480f8948; mov [rdi+0x5], edx; lea rax, [rdi+0xd]; ret; 
0x000000000b6f46: add eax, 0x480f8948; mov [rdi+0x5], edx; ret; 
0x000000000bb086: add eax, 0x480f8948; mov [rdi+0x5], edx; xor ch, ch; mov [rdi+0xd], ch; ret; 
0x0000000018fd2f: add eax, 0x487c5162; adc [rcx+0x6], esi; vmovups [r9+0x1c0], zmm15; ret; 
0x000000001902b4: add eax, 0x487cf162; adc [rsi+0x6], edx; vmovups [rsi+0x1c0], zmm2; ret; 
0x00000000155bb7: add eax, 0x48c48348; ret; 
0x00000000169537: add eax, 0x49000544; movsxd edx, [rbx+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166377: add eax, 0x49000574; movsxd edx, [rbx+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000017859a: add eax, 0x49f88948; sub eax, 0x9; lea rcx, [rdx+0x9]; jne 0x0000000000178810; ret; 
0x0000000017861c: add eax, 0x49f88948; sub eax, 0xd; lea rcx, [rdx+0xd]; jne 0x0000000000178810; ret; 
0x000000001574f5: add eax, 0x4; mov [rax-0x4], edx; mov [rdi+0x18], rax; mov eax, r8d; ret; 
0x000000000bcc63: add eax, 0x4; test edx, edx; jne short 0x00000000000bcc58; xor eax, eax; ret; 
0x0000000017aaf8: add eax, 0x5428948; lea rax, [rdx+0xc]; ret; 
0x00000000176768: add eax, 0x5428948; mov rax, rdi; ret; 
0x00000000178540: add eax, 0x54a8d48; jne 0x0000000000178810; ret; 
0x0000000017c8f1: add eax, 0x54a8d48; jne 0x000000000017cc60; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x000000001987a9: add eax, 0x554ce; add [rax], al; add [rax], al; ret; 
0x0000000019830d: add eax, 0x5565a; add [rax], al; add [rax], al; add rsp, 0x8; ret; 
0x00000000198ade: add eax, 0x56649; add [rax], al; add [rax], al; ret; 
0x00000000198b44: add eax, 0x56a1b; add [rax], al; add [rax], al; add rsp, 0x8; ret; 
0x00000000198c17: add eax, 0x57250; add [rax], al; add [rax], al; ret; 
0x00000000198d49: add eax, 0x57cce; add [rax], al; add [rax], al; pop rbx; ret; 
0x000000000b776a: add eax, 0x57f8d48; jne 0x00000000000b7fa0; ret; 
0x000000000b8e4e: add eax, 0x57f8d48; jne 0x00000000000b97f0; ret; 
0x0000000019840d: add eax, 0x58d4800; ret; 
0x00000000198a5e: add eax, 0x58d4800; ror dword ptr [rsi+0x5], 0x1; add [rax+0x39], cl; ret; 
0x000000001989b4: add eax, 0x5b050f00; ret; 
0x000000001348a0: add eax, 0x5bf08948; ret; 
0x0000000012eebb: add eax, 0x5cb10; cmp rdx, 0x4; cmovne r8, rax; mov rax, r8; ret; 
0x00000000106fe8: add eax, 0x5d000000; pop r12; ret; 
0x00000000198ce4: add eax, 0x5d050f00; ret; 
0x00000000153e61: add eax, 0x5d5b0000; pop r12; pop r13; ret; 
0x0000000012da3f: add eax, 0x5db7c; lea rdx, [rip+0x5db05]; cmove rax, rdx; ret; 
0x0000000012d97f: add eax, 0x5dc5c; lea rdx, [rip+0x5dbe5]; cmove rax, rdx; ret; 
0x0000000012d8bf: add eax, 0x5dd1c; lea rdx, [rip+0x5dca5]; cmove rax, rdx; ret; 
0x0000000012db10: add eax, 0x5df4b; cmove rax, rdx; ret; 
0x00000000184aa3: add eax, 0x60; add rax, rdi; ret; 
0x00000000188771: add eax, 0x60; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x0000000018468a: add eax, 0x60; add rax, rdi; vzeroupper; ret; 
0x0000000012da8a: add eax, 0x628b1; lea rdx, [rip+0x6283a]; cmove rax, rdx; ret; 
0x0000000012d9ca: add eax, 0x62991; lea rdx, [rip+0x6291a]; cmove rax, rdx; ret; 
0x0000000012d90a: add eax, 0x62a51; lea rdx, [rip+0x629da]; cmove rax, rdx; ret; 
0x0000000012db4a: add eax, 0x62da1; lea rdx, [rip+0x62d2a]; cmove rax, rdx; ret; 
0x0000000004a92b: add eax, 0x63485374; ret far; 
0x00000000162c67: add eax, 0x64000892; mov dword ptr [rax], 0x26; mov eax, 0xffffffff; ret; 
0x0000000015c967: add eax, 0x640008f5; mov dword ptr [rax], 0x26; mov eax, 0xffffffff; ret; 
0x0000000014f74f: add eax, 0x642ac; movsxd rdx, [rax+rdx*4]; add rdx, rax; notrack jmp rdx; 
0x000000000b92e1: add eax, 0x66c30000; nop [rax+rax]; mov rax, rdi; ret; 
0x0000000015ae46: add eax, 0x688d4c00; add eax, ebp; call qword ptr [rcx]; 
0x00000000023a3d: add eax, 0x6a14e; xor rax, fs:[0x30]; rol rax, 0x11; mov [rip+0x1cd8d2], rax; ret; 
0x00000000151757: add eax, 0x6b534; movaps [rsp+0x20], xmm0; call qword ptr [rax+0x28]; 
0x000000000b8e6e: add eax, 0x6e88349; lea rdi, [rdi+0x6]; jne 0x00000000000b97f0; ret; 
0x000000001982af: add eax, 0x6eae900; clc; jmp qword ptr [rsi+0x2e]; 
0x000000000e4f81: add eax, 0x72f52011; cmp r8, rax; jne short 0x00000000000e4ffd; mov eax, 0x7d00; ret; 
0x000000000c9f11: add eax, 0x74db8500; sbb [rcx], edi; ret; 
0x000000000ca006: add eax, 0x74db8500; sbb al, 0x39; ret; 
0x00000000153906: add eax, 0x78c48348; ret; 
0x000000000f2b0d: add eax, 0x7b8b4828; adc [rax-0x7d], cl; ret; 
0x000000000f2b0e: add eax, 0x7b8b4828; adc [rax-0x7d], cl; ret; 
0x0000000015c03b: add eax, 0x7f7ee800; in eax, dx; jmp qword ptr [rsi+0x66]; 
0x000000000b776e: add eax, 0x82b850f; add [rax], al; ret; 
0x0000000007bab4: add eax, 0x83410000; out dx, eax; add [rax-0x93b43], eax; jmp qword ptr [rax]; 
0x0000000006f650: add eax, 0x83480000; ret; 
0x0000000015bbdc: add eax, 0x83dde800; in eax, dx; jmp qword ptr [rsi+0x66]; 
0x0000000017aa7a: add eax, 0x8428d48; ret; 
0x000000000a07c8: add eax, 0x86e3; lea rdx, [rip+0xda37c]; cmovne rax, rdx; ret; 
0x00000000163346: add eax, 0x88b25; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x00000000162ce6: add eax, 0x89185; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x00000000162cc6: add eax, 0x891a5; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x00000000162c86: add eax, 0x891e5; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x00000000162c66: add eax, 0x89205; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x00000000162c46: add eax, 0x89225; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x00000000162c26: add eax, 0x89245; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x00000000089260: add eax, 0x89480000; and al, 0x10; xor edx, edx; mov rdi, r15; call qword ptr [r14+0x80]; 
0x000000000d4515: add eax, 0x89480000; ret; 
0x000000000c94a6: add eax, 0x89490000; ret; 
0x0000000011b08b: add eax, 0x894c0000; and al, 0x8; mov rdi, [r8]; call rbx; 
0x0000000015c4d4: add eax, 0x894c0000; loopne 0x000000000015c51c; pop rsp; ret; 
0x000000000ab8d8: add eax, 0x894d0000; ret far; 
0x000000001176a9: add eax, 0x8; mov [rip+0xd80dd], rax; mov rax, r8; add rsp, 0x8; ret; 
0x00000000117679: add eax, 0x8; mov [rip+0xd810d], rax; mov rax, r8; ret; 
0x00000000160bd6: add eax, 0x8b295; mov dword ptr fs:[rax], 0x26; xor eax, eax; ret; 
0x000000001983f2: add eax, 0x8b486400; add [rax-0x7d], cl; ret; 
0x000000001609e2: add eax, 0x8b489; mov dword ptr fs:[rax], 0x16; xor eax, eax; ret; 
0x000000000f1ddf: add eax, 0x8b49fff3; adc [r8+0x39], r9b; ret far; 
0x0000000015fd05: add eax, 0x8c156; mov r8, [rbx+0x10]; call qword ptr [rax+0x1e0]; 
0x000000000e2efa: add eax, 0x8c48348; ret; 
0x0000000015f896: add eax, 0x8c5c5; jmp qword ptr [rax+0x1f0]; 
0x0000000015f7d3: add eax, 0x8c688; mov rdi, [rdi]; call qword ptr [rax+0x1e8]; 
0x0000000015f77a: add eax, 0x8c6e1; mov rdi, [rsp]; mov rax, [rax+0x1d8]; jmp rax; 
0x0000000015f746: add eax, 0x8c715; mov rsi, rdi; mov rdi, [rsp]; mov rax, [rax+0x1d8]; jmp rax; 
0x0000000015f2d3: add eax, 0x8cb88; call qword ptr [rax+0x1f8]; 
0x000000000bc98d: add eax, 0x8d48000d; add eax, 0x12f89; cmove rax, rdx; ret; 
0x00000000160cb8: add eax, 0x8e1db; xor eax, eax; mov [rip+0x8e1ca], rsi; ret; 
0x0000000015c966: add eax, 0x8f505; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x000000000319eb: add eax, 0x90660000; ret; 
0x00000000160b60: add eax, 0x90863; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000160b30: add eax, 0x9088b; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000160b00: add eax, 0x908b3; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000160bae: add eax, 0x908bd; mov rdi, r8; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000160ad0: add eax, 0x908db; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000160aa0: add eax, 0x90903; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000160a70: add eax, 0x9092b; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000015fcc2: add eax, 0x914c1; call qword ptr [rax+0x10]; 
0x0000000015fbe2: add eax, 0x91599; test rax, rax; je short 0x000000000015fbd7; call qword ptr [rax+0x18]; 
0x0000000015fa4a: add eax, 0x91739; call qword ptr [rax+0x8]; 
0x0000000015f952: add eax, 0x91831; call qword ptr [rax]; 
0x00000000120df4: add eax, 0x91887; mov eax, [rax+rdi*4]; ret; 
0x0000000015d290: add eax, 0x93ea7; add [rax], al; add [rax], al; add rsp, 0x8; ret; 
0x0000000015c51f: add eax, 0x94a5c; mov edx, 0x0; cmovne rax, rdx; add rsp, 0x8; ret; 
0x0000000009f7f8: add eax, 0x9723; lea rdx, [rip+0xd6fbc]; cmovne rax, rdx; ret; 
0x0000000009f728: add eax, 0x9733; lea rdx, [rip+0x1448c]; cmovne rax, rdx; ret; 
0x00000000153096: add eax, 0x98d05; lea rdx, [rip+0x9dd9e]; mov fs:[rax], rdx; ret; 
0x000000000b8e52: add eax, 0x997850f; add [rax], al; ret; 
0x00000000160b9d: add eax, 0x9be; add [rcx+0x3eb8c7], cl; add [rax], al; syscall; 
0x0000000009f1c8: add eax, 0x9db3; lea rdx, [rip+0xc41bc]; cmovne rax, rdx; ret; 
0x00000000153191: add eax, 0x9dc86; add al, [rax]; add [rax], al; ret; 
0x00000000153186: add eax, 0x9dcb5; mov fs:[rbx], rax; pop rbx; mov dword ptr [rip+0x9dc86], 0x2; ret; 
0x000000000a1cb2: add eax, 0xa559; cmove rax, rdx; ret; 
0x00000000146eca: add eax, 0xa9cad; add rsp, 0x8; ret; 
0x00000000146eb5: add eax, 0xa9cc2; test eax, eax; je short 0x0000000000146ec0; ret; 
0x000000001462d4: add eax, 0xaa827; ret; 
0x000000001462a8: add eax, 0xaa853; add rsp, 0x8; ret; 
0x00000000141026: add eax, 0xaadfd; mov eax, [rax+0x18]; test eax, eax; jne short 0x0000000000141038; ret; 
0x00000000141116: add eax, 0xaaed5; mov rax, fs:[rax]; ret; 
0x00000000142e96: add eax, 0xadb85; test rax, rax; jne short 0x0000000000142ea8; ret; 
0x0000000009f792: add eax, 0xaee9; lea rdx, [rip+0xc4e62]; cmovne rax, rdx; ret; 
0x00000000141a5e: add eax, 0xaefbd; test rax, rax; je short 0x0000000000141a70; add rsp, 0x8; ret; 
0x00000000140bd9: add eax, 0xafbe6; test eax, eax; je short 0x0000000000140be8; ret; 
0x0000000014e4e7: add eax, 0xb1e88beb; adc eax, 0xf390fffe; nop edx, edi; ret; 
0x00000000138554: add eax, 0xb5387; add rsp, 0x8; ret; 
0x00000000052d71: add eax, 0xb60f0000; ror byte ptr [rax+0x63], cl; adc al, 0x97; add rdx, rdi; notrack jmp rdx; 
0x0000000013bd21: add eax, 0xba; add [rax+0x102], bh; cmovne eax, edx; ret; 
0x000000000a0432: add eax, 0xbaa9; cmove rax, rdx; ret; 
0x0000000012feb6: add eax, 0xbbf9d; add rax, fs:[0x0]; ret; 
0x0000000012f442: add eax, 0xbca29; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000120a5c: add eax, 0xbd000800; add eax, 0xeb000000; ret; 
0x000000001473dd: add eax, 0xbe; xor ecx, ecx; lea rdx, [rip+0xe7e5]; lea r9, [rsp+0x20]; call qword ptr [rax]; 
0x000000001509d5: add eax, 0xc0310000; mov rsi, [rsp+0x50]; mov rcx, [rsp+0x10]; mov rdi, r15; call rcx; 
0x0000000018e4ba: add eax, 0xc0310000; ret; 
0x0000000018e539: add eax, 0xc0310000; ret; 
0x000000000dd3e0: add eax, 0xc1480011; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x0000000012d04d: add eax, 0xc2e26; pop rbp; ret; 
0x000000000cfb93: add eax, 0xc3000000; nop [rax+rax]; mov rax, 0x6; ret; 
0x000000000a08bb: add eax, 0xc350; lea rdx, [rip+0xd0099]; cmovne rax, rdx; ret; 
0x000000000a0479: add eax, 0xc372; lea rdx, [rip+0xf08fb]; cmovne rax, rdx; ret; 
0x000000000a081b: add eax, 0xc3d0; lea rdx, [rip+0xd0119]; cmovne rax, rdx; ret; 
0x0000000017aafc: add eax, 0xc428d48; ret; 
0x000000000b85cd: add eax, 0xc478d48; ret; 
0x000000000b8f5d: add eax, 0xc478d48; sub r8, 0xd; lea rdi, [rdi+0xd]; jne 0x00000000000b97f0; ret; 
0x000000000a09e0: add eax, 0xc53bb; lea rdx, [rip+0xca944]; cmovne rax, rdx; ret; 
0x000000000a0670: add eax, 0xc570b; lea rdx, [rip+0xcac94]; cmovne rax, rdx; ret; 
0x00000000165e19: add eax, 0xc634f00; mov ecx, [rdi-0x73]; or al, 0xb; notrack jmp r9; 
0x000000000a0510: add eax, 0xc826b; lea rdx, [rip+0xcd904]; cmovne rax, rdx; ret; 
0x000000001228e6: add eax, 0xc9575; mov eax, [rax+0x38]; ret; 
0x00000000121cd1: add eax, 0xca686; add [rax], al; add [rax], al; ret; 
0x00000000121ca8: add eax, 0xca6af; add [rax], al; add [rax], al; ret; 
0x00000000121c77: add eax, 0xca6e0; add al, [rax]; add [rax], al; ret; 
0x00000000121c51: add eax, 0xca706; add [rax], al; add [rax], al; ret; 
0x00000000121c6a: add eax, 0xca729; mov [rdi+0x10], rax; jb short 0x0000000000121c88; mov qword ptr [rip+0xca6e0], 0x2; ret; 
0x000000001218da: add eax, 0xcaa7d; add [rax], al; add [rax], al; add rsp, 0x8; ret; 
0x000000001218a5: add eax, 0xcaab2; add eax, [rax]; add [rax], al; add rsp, 0x8; ret; 
0x000000000d425f: add eax, 0xcac1fa89; add al, [rcx-0x70a3d706]; add dh, [rsi+0x3]; ret; 
0x000000001200d6: add eax, 0xcbd95; mov dword ptr fs:[rax], 0x26; mov rax, 0xffffffffffffffff; ret; 
0x0000000011f912: add eax, 0xcc559; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000011f8d2: add eax, 0xcc599; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000122002: add eax, 0xcda71; mov rax, [rax+0x18]; add dword ptr [rax], 0x1; ret; 
0x00000000121ff2: add eax, 0xcda81; mov rax, [rax+0x18]; add word ptr [rax], 0x1; ret; 
0x00000000121d27: add eax, 0xcdd24; jae short 0x0000000000121d3a; mov rdx, [rip+0xcdd23]; add word ptr [rdx+rax*2], 0x1; ret; 
0x000000000bce2b: add eax, 0xcebb0; cmp rdx, 0x4; cmovne r8, rax; mov rax, r8; ret; 
0x000000000bcdaa: add eax, 0xcedd1; test byte ptr [rdx+0xcd], 0x1; je short 0x00000000000bcd75; ret; 
0x0000000011d042: add eax, 0xcee29; mov dword ptr fs:[rax], 0x2; xor eax, eax; ret; 
0x0000000011c51a: add eax, 0xcf951; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000011c302: add eax, 0xcfc51; mov rax, [rax]; test rax, rax; je 0x000000000011c400; call rax; 
0x0000000011c121: add eax, 0xcfe32; mov rax, [rax]; test rax, rax; je short 0x000000000011c190; call rax; 
0x00000000119802: add eax, 0xd2669; mov dword ptr fs:[rax], 0x16; ret; 
0x000000001197cd: add eax, 0xd269e; mov dword ptr fs:[rax], 0x16; xor eax, eax; ret; 
0x000000001197bb: add eax, 0xd26b0; mov dword ptr fs:[rax], 0xc; xor eax, eax; pop rbx; ret; 
0x00000000118f8f: add eax, 0xd2edc; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000011892a: add eax, 0xd3541; mov dword ptr fs:[rax], 0x16; mov rax, 0xffffffffffffffff; ret; 
0x00000000118735: add eax, 0xd3c0e; test edi, edi; je short 0x0000000000118744; mov [rip+0xd3c04], edi; ret; 
0x000000000b942d: add eax, 0xd478d48; ret; 
0x00000000119204: add eax, 0xd66b7; add rsp, 0x18; ret; 
0x000000001157a2: add eax, 0xd66c9; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000011577a: add eax, 0xd66f1; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000001191b4: add eax, 0xd6747; pop r12; pop r13; ret; 
0x00000000115636: add eax, 0xd6835; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x00000000118cbc: add eax, 0xd6baf; add rsp, 0x8; ret; 
0x00000000118c61: add eax, 0xd6c2a; pop rbp; pop r12; pop r13; ret; 
0x00000000114c66: add eax, 0xd71f5; mov rax, [rax+0x18]; test rax, rax; je short 0x0000000000114c75; ret; 
0x000000001143b6: add eax, 0xd7ab5; mov dword ptr fs:[rax], 0x26; mov rax, 0xffffffffffffffff; ret; 
0x000000001142fa: add eax, 0xd7b71; mov dword ptr fs:[rax], 0xc; mov eax, 0xffffffff; ret; 
0x000000001142e6: add eax, 0xd7bdd; mov qword ptr [rax], 0xffffffffffffffff; xor eax, eax; ret; 
0x00000000117c3b: add eax, 0xd7c10; cmp eax, 0x1; jg short 0x0000000000117c46; ret; 
0x0000000011771f: add eax, 0xd806c; add rsp, 0x8; ret; 
0x000000001176f8: add eax, 0xd808f; add [rax], al; add [rax], al; add rsp, 0x8; ret; 
0x000000001176ae: add eax, 0xd80dd; mov rax, r8; add rsp, 0x8; ret; 
0x0000000011767e: add eax, 0xd810d; mov rax, r8; ret; 
0x0000000011378d: add eax, 0xd86de; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000011372c: add eax, 0xd873f; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000116eff: add eax, 0xd886b; and ecx, [rcx+rcx*4-0x40]; mov byte ptr [rsi-0x1], 0x0; ret; 
0x0000000011317a: add eax, 0xd8cf1; mov dword ptr fs:[rax], 0x9; mov eax, 0xffffffff; ret; 
0x00000000113144: add eax, 0xd8d27; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000011295a: add eax, 0xd9511; mov dword ptr fs:[rax], 0x16; xor eax, eax; ret; 
0x00000000112822: add eax, 0xd9649; mov dword ptr fs:[rax], 0x16; mov eax, 0x1; ret; 
0x00000000115ecb: add eax, 0xd976c; add [rax], al; add [rax], al; add rsp, 0x8; ret; 
0x00000000115bcd: add eax, 0xd9aa6; add rsp, 0x8; ret; 
0x00000000115bbf: add eax, 0xd9aac; mov [rip+0xd9ad5], rax; lea rax, [rip+0xd9aa6]; add rsp, 0x8; ret; 
0x00000000115bc6: add eax, 0xd9ad5; lea rax, [rip+0xd9aa6]; add rsp, 0x8; ret; 
0x00000000115b12: add eax, 0xd9b29; mov eax, 0x1; add rsp, 0x8; ret; 
0x00000000112b1d: add eax, 0xdaf7c289; cmp eax, 0xfffff000; mov eax, 0x0; cmova eax, edx; ret; 
0x00000000110dd2: add eax, 0xdb099; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000001988f8: add eax, 0xdb854800; jne short 0x00000000001988e0; pop rbx; ret; 
0x00000000114a88: add eax, 0xdc9f3; movups [rsp+0x8], xmm0; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000114a39: add eax, 0xdca52; test eax, eax; jne short 0x0000000000114a70; mov eax, 0x72; syscall; 
0x000000001149e8: add eax, 0xdca93; movups [rsp+0x8], xmm0; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000114999: add eax, 0xdcaf2; test eax, eax; jne short 0x00000000001149d0; mov eax, 0x71; syscall; 
0x0000000010dc6a: add eax, 0xde201; mov dword ptr fs:[rax], 0x5f; mov eax, 0xffffffff; ret; 
0x0000000010dc52: add eax, 0xde219; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010dbf6: add eax, 0xde275; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x0000000010da1a: add eax, 0xde451; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010d9ba: add eax, 0xde4b1; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010d95a: add eax, 0xde511; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000b786d: add eax, 0xde88349; lea rdi, [rdi+0xd]; jne 0x00000000000b7fa0; ret; 
0x0000000010d5d2: add eax, 0xde899; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010d572: add eax, 0xde8f9; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010d512: add eax, 0xde959; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000a049a: add eax, 0xe4731; test byte ptr [rdx+0xcd], 0x1; je short 0x00000000000a0465; ret; 
0x000000000a090b: add eax, 0xe550; lea rdx, [rip+0xd21a9]; cmovne rax, rdx; ret; 
0x000000000a086b: add eax, 0xe5d0; lea rdx, [rip+0xd2229]; cmovne rax, rdx; ret; 
0x0000000019893f: add eax, 0xe899ebe8; jmp qword ptr [rsi+0xf]; 
0x000000000f1575: add eax, 0xe9000000; idiv r15; jmp qword ptr [rsi-0x70]; 
0x000000000a09bf: add eax, 0xeac2c; lea rdx, [rip+0xeabb5]; cmove rax, rdx; ret; 
0x000000000a064f: add eax, 0xeaf7c; lea rdx, [rip+0xeaf05]; cmove rax, rdx; ret; 
0x00000000120a61: add eax, 0xeb000000; ret; 
0x000000000a04ef: add eax, 0xeb0fc; lea rdx, [rip+0xeb085]; cmove rax, rdx; ret; 
0x000000000a05c0: add eax, 0xeb4ab; cmove rax, rdx; ret; 
0x000000000fecc6: add eax, 0xed2ed; mov r8, [rax]; mov [rax], rdi; mov rax, r8; ret; 
0x00000000140373: add eax, 0xee1fb7e8; jmp qword ptr [rsi+0xf]; 
0x00000000140344: add eax, 0xee1fe6e8; jmp qword ptr [rsi+0xf]; 
0x00000000140313: add eax, 0xee2017e8; jmp qword ptr [rsi+0xf]; 
0x000000001402a2: add eax, 0xee2088e8; jmp qword ptr [rsi+0xf]; 
0x000000001401fd: add eax, 0xee212de8; jmp qword ptr [rsi+0xf]; 
0x000000001401c9: add eax, 0xee2161e8; jmp qword ptr [rsi+0xf]; 
0x00000000138fd8: add eax, 0xee9352e8; jmp qword ptr [rbx+rcx*4+0x4]; 
0x0000000016dc29: add eax, 0xef00ff2; movdqu [rdi+0x5], xmm0; movdqu [rdi], xmm1; ret; 
0x000000000a0a0a: add eax, 0xef961; lea rdx, [rip+0xef8ea]; cmove rax, rdx; ret; 
0x000000000a069a: add eax, 0xefcb1; lea rdx, [rip+0xefc3a]; cmove rax, rdx; ret; 
0x000000000a053a: add eax, 0xefe31; lea rdx, [rip+0xefdba]; cmove rax, rdx; ret; 
0x00000000153a41: add eax, 0xf000000; adc [rsp+0x18], eax; call qword ptr [rax+0x18]; 
0x000000000a05fa: add eax, 0xf0301; lea rdx, [rip+0xf028a]; cmove rax, rdx; ret; 
0x00000000107e41: add eax, 0xf1a4e9e8; jmp qword ptr [rsi+0xf]; 
0x0000000010760b: add eax, 0xf1ad1fe8; jmp qword ptr [rsi+0xf]; 
0x0000000012e94c: add eax, 0xf2399ee9; call qword ptr [rax-0x18]; 
0x0000000011fe67: add eax, 0xf7000cc0; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x0000000011fb67: add eax, 0xf7000cc3; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x0000000011f367: add eax, 0xf7000ccb; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x00000000115667: add eax, 0xf7000d68; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x00000000115267: add eax, 0xf7000d6c; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x0000000010e967: add eax, 0xf7000dd5; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x000000000e4167: add eax, 0xf700107d; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x0000000016dc32: add eax, 0xf7f0ff3; ret; 
0x00000000094903: add eax, 0xf8da27e8; jmp qword ptr [rsi+0xf]; 
0x0000000012f4ec: add eax, 0xf8dfaee9; call qword ptr [rax-0x18]; 
0x000000000a1cf2: add eax, 0xf9d9; cmove rax, rdx; ret; 
0x0000000012eebe: add eax, 0xfa834800; add al, 0x4c; cmovne eax, eax; mov rax, r8; ret; 
0x00000000052afb: add eax, 0xfd8ee800; std; dec dword ptr [rax-0x77]; ret; 
0x0000000012e838: add eax, 0xfdd942e9; call qword ptr [rax-0x18]; 
0x0000000012e818: add eax, 0xfdd962e9; call qword ptr [rax-0x18]; 
0x0000000012e928: add eax, 0xfe0172e9; call qword ptr [rax-0x18]; 
0x0000000012f478: add eax, 0xfe0352e9; call qword ptr [rax-0x18]; 
0x0000000012e8a8: add eax, 0xfe13f2e9; call qword ptr [rax-0x18]; 
0x0000000012e8c8: add eax, 0xfe1402e9; call qword ptr [rax-0x18]; 
0x0000000012fa3c: add eax, 0xfe2f3ee9; call qword ptr [rax-0x18]; 
0x0000000012fa5c: add eax, 0xfe2fbee9; call qword ptr [rax-0x18]; 
0x0000000012f498: add eax, 0xfe5852e9; call qword ptr [rax-0x18]; 
0x0000000012f4b8: add eax, 0xfe5982e9; call qword ptr [rax-0x18]; 
0x0000000012daa6: add eax, 0xfff8e0f5; lea rdx, [rip-0x71ff2]; cmove rax, rdx; ret; 
0x0000000012d9e6: add eax, 0xfff8e1d5; lea rdx, [rip-0x71f12]; cmove rax, rdx; ret; 
0x0000000012d926: add eax, 0xfff8e295; lea rdx, [rip-0x71e52]; cmove rax, rdx; ret; 
0x0000000012db2b: add eax, 0xfff8e3e0; cmovne rax, rdx; ret; 
0x0000000012484e: add eax, 0xfffd2ae9; jmp qword ptr [rsi+0x2e]; 
0x0000000015f098: add eax, 0xfffd32e9; call qword ptr [rax-0x18]; 
0x00000000094c5c: add eax, 0xfffe7ce9; jmp qword ptr [rsi+0x2e]; 
0x00000000140e98: add eax, 0xfffe86e9; jmp qword ptr [rsi-0x70]; 
0x000000000e0dd1: add eax, 0xfffea1e9; jmp qword ptr [rsi+0xf]; 
0x0000000009c174: add eax, 0xfffebee9; jmp qword ptr [rsi+0xf]; 
0x00000000038508: add eax, 0xfffefbe9; jmp qword ptr [rsi-0x70]; 
0x00000000098ac4: add eax, 0xffff01e9; jmp qword ptr [rsi+0xf]; 
0x00000000091689: add eax, 0xffff0be9; call qword ptr [rax+0xff0c889]; 
0x00000000137b1b: add eax, 0xffff0fe9; jmp qword ptr [rsi+0x66]; 
0x00000000093079: add eax, 0xffff2ee9; call qword ptr [rax+0x1b9c031]; 
0x000000000e13bd: add eax, 0xffff33e9; jmp qword ptr [rbp+rax*2-0x75]; 
0x000000000ff809: add eax, 0xffff41e9; call qword ptr [rax-0x5e1f00d]; 
0x000000000910ae: add eax, 0xffff44e9; jmp qword ptr [rsi+0x66]; 
0x00000000047170: add eax, 0xffff4ae9; jmp qword ptr [rsi+0x2e]; 
0x00000000125569: add eax, 0xffff4ce9; call qword ptr [rax+0x1ba]; 
0x000000001255ce: add eax, 0xffff4de9; jmp qword ptr [rsi+0x2e]; 
0x00000000152197: add eax, 0xffff5f14; lea rdx, [rip+0x3a2d]; call qword ptr [rax]; 
0x00000000125828: add eax, 0xffff6be9; jmp qword ptr [rbx+rcx*4+0x4]; 
0x0000000009619c: add eax, 0xffff70e9; jmp qword ptr [rsi+0x66]; 
0x000000000dfeaf: add eax, 0xffff75e9; jmp qword ptr [rsi+0x2e]; 
0x000000001319cf: add eax, 0xffff7ae9; jmp qword ptr [rsi+0x2e]; 
0x0000000013332f: add eax, 0xffff7be9; jmp qword ptr [rsi+0x2e]; 
0x0000000015c988: add eax, 0xffff92e9; call qword ptr [rax-0x18]; 
0x00000000151940: add eax, 0xffff947b; lea rdx, [rip-0x6b6c]; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x00000000077c1b: add eax, 0xffffef23; mov r10, rdx; mov dword ptr [rbp-0x51c], 0x1; jmp rax; 
0x0000000007e202: add eax, 0xfffff054; mov r9, rcx; mov dword ptr [rbp-0x510], 0x1; jmp rax; 
0x000000000d101a: add eax, 0xfffffee1; ret; 
0x000000000d100a: add eax, 0xfffffef1; add rsp, 0x58; ret; 
0x000000000d0efa: add eax, 0xfffffef1; ret; 
0x000000000d0eea: add eax, 0xffffff01; add rsp, 0x58; ret; 
0x0000000010d288: add eax, 0xffffff43; cmove rax, rdx; ret; 
0x0000000002443d: add eax, [0x0]; ret; 
0x0000000006683c: add eax, [rax]; add [rax-0x77], cl; fimul st, word ptr [rax-0x7d]; ret; 
0x000000000fb504: add eax, [rax]; add [rax-0x77], cl; je short 0x00000000000fb52f; or al, ch; jmp far fword ptr [rbp-0xe]; 
0x0000000017c862: add eax, [rax]; add [rax-0x7cb7fec8], al; fdivr st, st(7); ret; 
0x000000001218aa: add eax, [rax]; add [rax], al; add rsp, 0x8; ret; 
0x000000000dd028: add eax, [rax]; add [rax], al; cmovne eax, edx; ret; 
0x00000000151cf6: add eax, [rax]; add [rax], al; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x0000000013a875: add eax, [rax]; add [rax], al; mov edi, [rbp-0x60]; syscall; 
0x00000000090885: add eax, [rax]; add [rax], al; mov edx, 0x1; mov rdi, rbx; call qword ptr [r12+0x48]; 
0x00000000153961: add eax, [rax]; add [rax], al; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x000000000cfb73: add eax, [rax]; add [rax], al; ret; 
0x0000000010e841: add eax, [rax]; add [rax], al; syscall; 
0x0000000015fdd9: add eax, [rax]; add [rbp+rcx*4+0x44], cl; and al, 0x30; call qword ptr [rax+0x1e0]; 
0x00000000187c8f: add eax, [rax]; add [rbp-0x77], cl; ret far; 
0x0000000017f7c8: add eax, [rax]; add [rbp-0x77], cl; ret far; 
0x00000000029b72: add eax, [rax]; add [rbx+0x4be02e0], al; add [rax], al; add [rcx-0x77], al; ret; 
0x00000000051ef4: add eax, [rax]; add [rbx+0x5d], bl; pop r12; pop r13; ret; 
0x000000000ffda1: add eax, [rax]; add [rbx+0x634c01c3], al; ret far; 
0x0000000012953b: add eax, [rax]; add [rbx+rcx*4+0x35], cl; ret; 
0x0000000011b243: add eax, [rax]; add [rcx+rcx*4+0x44], cl; and al, 0x8; mov rdi, [r8]; call rbx; 
0x000000000e5b03: add eax, [rax]; add [rcx-0x3036b], cl; jmp qword ptr [rax+rcx*2-0x75]; 
0x0000000002dc60: add eax, [rax]; add [rcx-0x73], cl; add cl, [rax+0x39]; ret far; 
0x0000000002c11e: add eax, [rax]; add [rcx-0x73], cl; add r9b, [r8+0x39]; ret; 
0x00000000119c42: add eax, [rax]; add [rcx-0x75], cl; mov rax, [rsp+0x8]; mov rdi, r13; call rax; 
0x0000000011a9f8: add eax, [rax]; add [rcx-0x75], cl; notrack call rbx; 
0x00000000023d41: add eax, [rax]; add [rcx-0x77], al; ret; 
0x000000000ff835: add eax, [rax]; add [rcx-0x77], cl; dec dword ptr [rbp-0x77]; ret; 
0x000000000fcc4a: add eax, [rax]; add [rcx-0x80], al; call far fword ptr [rdi+rcx-0x7c]; 
0x0000000010b2d2: add eax, [rax]; add [rcx-0x80], al; jmp qword ptr [rdx]; 
0x00000000089546: add eax, [rax]; add [rcx], dh; idiv byte ptr [rdx+0x2]; mov rdi, r15; call qword ptr [r13+0x80]; 
0x0000000008ea9f: add eax, [rax]; add [rcx], dh; ror byte ptr [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x80]; 
0x0000000008ea9e: add eax, [rax]; add [rcx], dh; ror byte ptr [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x80]; 
0x0000000005b4be: add eax, [rax]; add [rdi+0x3004], bh; mov eax, 0x9e; syscall; 
0x0000000012fa18: add eax, [rax]; add [rdi+0x8], dh; mov rax, rdi; sar rax, 0x6; ret; 
0x0000000015f81e: add eax, [rax]; add [rdx+0x2], ch; call qword ptr [rax+0x1e0]; 
0x00000000128f45: add eax, [rax]; add [rdx], al; mov rdx, rax; call qword ptr [rbx+0x28]; 
0x0000000015f86f: add eax, [rax]; add [rdx], ch; call qword ptr [rax+0x1e0]; 
0x000000000946b9: add eax, [rax]; add [rsi+0x80], bh; syscall; 
0x000000000f9782: add eax, [rax]; add al, ch; xchg [rbx-0x76b7000e], cl; ret; 
0x000000000fac82: add eax, [rax]; add al, ch; xchg [rsi-0xe], dh; jmp qword ptr [rsi+0xf]; 
0x0000000012d8ea: add eax, [rax]; cmovne rax, rdx; ret; 
0x000000000bc15c: add eax, [rax]; cmp edx, 0xff; cmove rax, rcx; ret; 
0x0000000012da63: add eax, [rax]; lea rdx, [rip+0x3d894]; cmovne rax, rdx; ret; 
0x0000000012d8e3: add eax, [rax]; lea rdx, [rip+0x3da34]; cmovne rax, rdx; ret; 
0x0000000012d9a3: add eax, [rax]; lea rdx, [rip+0x40464]; cmovne rax, rdx; ret; 
0x000000000a8767: add eax, [rax]; mov [rdi], r8; mov rax, r12; pop r12; ret; 
0x000000000de157: add eax, [rax]; mov rax, [rip+0x10dd10]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000170a5f: add eax, [rax]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000017deab: add eax, [rax]; movsxd r9, [r10+r9*4]; pcmpeqb xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x000000001850ab: add eax, [rax]; movsxd r9, [r10+r9*4]; vpcmpeqb xmm0, xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000018d47f: add eax, [rax]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x000000000bc141: add eax, [rax]; ret; 
0x00000000034b47: add eax, [rbx+0x26770af8]; lea rdx, [rip+0x17440c]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000088071: add eax, [rbx+rcx*4]; mov eax, r8d; ret; 
0x000000001482be: add eax, [rbx-0x1d7c0320]; cld; lea esi, [rax+rdx+0x28]; mov rax, [rdi+0x8]; call qword ptr [rax+0x30]; 
0x000000000fd036: add eax, [rbx-0x7fbefe20]; call far fword ptr [rdi+0xf]; 
0x00000000178509: add eax, [rbx]; add [rax], al; ret; 
0x0000000005506f: add eax, [rcx+0x52]; ret; 
0x000000000bb5ae: add eax, [rcx+rcx*8+0x31c3ed75]; rol bl, 0x48; mov eax, edi; ret; 
0x00000000123399: add eax, [rcx+rdx]; ret; 
0x000000000fceac: add eax, [rcx-0x80]; call far fword ptr [rdi+0xf]; 
0x0000000010d98f: add eax, [rcx]; add [rax], al; syscall; 
0x000000000d0ec5: add eax, [rdx+0x8]; lea rdx, [rip-0xdf]; cmove rax, rdx; add rsp, 0x58; ret; 
0x000000000d0fe5: add eax, [rdx+0x8]; lea rdx, [rip-0xef]; cmove rax, rdx; add rsp, 0x58; ret; 
0x00000000123141: add eax, [rdx+rcx]; ret; 
0x00000000178609: add eax, [rdx]; add [rax], al; ret; 
0x0000000016de66: add eax, [rip+0x14634900]; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000094be8: add eax, [rip+0x159c42]; mov rax, [rax+0x8]; test rax, rax; je short 0x0000000000094bf9; call rax; 
0x00000000094b78: add eax, [rip+0x159cb2]; mov rax, [rax+0x10]; test rax, rax; je short 0x0000000000094b89; call rax; 
0x00000000094af0: add eax, [rip+0x159d3a]; mov rax, [rax]; test rax, rax; je short 0x0000000000094b00; call rax; 
0x0000000015f524: add eax, [rsp+0x8]; mov r12d, 0x1; mov [r13+0x18], rax; lea rdi, [r15+0x908]; call qword ptr [r15+0xf10]; 
0x0000000010d1f6: add eax, eax; cmp rdi, rsi; ja short 0x000000000010d1e8; mov eax, r8d; ret; 
0x0000000005ea68: add eax, eax; mov eax, r8d; ret; 
0x000000000a8b1b: add eax, eax; notrack jmp rax; 
0x000000000ee358: add eax, eax; pop rbx; pop rbp; ret; 
0x00000000184b71: add eax, eax; vzeroupper; ret; 
0x0000000015ae4b: add eax, ebp; call qword ptr [rcx]; 
0x000000000257d4: add eax, ebp; ret far; 
0x00000000077880: add eax, ebx; jmp rax; 
0x00000000077a27: add eax, ebx; mov byte ptr [rbp-0x508], 0x20; mov r10, rdx; mov dword ptr [rbp-0x4f8], 0x1; jmp rax; 
0x00000000077f6f: add eax, ebx; mov dword ptr [rbp-0x4e0], 0x1; mov r10, rdx; jmp rax; 
0x00000000077bdf: add eax, ebx; mov dword ptr [rbp-0x4e0], 0x1; mov r10, rdx; mov dword ptr [rbp-0x510], 0x1; jmp rax; 
0x00000000076d1b: add eax, ebx; mov dword ptr [rbp-0x510], 0x0; mov r10, rdx; mov dword ptr [rbp-0x4e0], 0x1; jmp rax; 
0x00000000078007: add eax, ebx; mov dword ptr [rbp-0x540], 0x0; mov r10, rdx; mov dword ptr [rbp-0x54c], 0x1; jmp rax; 
0x00000000190cd3: add eax, ebx; nop [rax+rax]; lea rax, [rdi+0x4]; ret; 
0x000000001786e4: add eax, ebx; nop [rax+rax]; mov [rcx], rdx; ret; 
0x000000000b6ee9: add eax, ebx; nop [rax+rax]; mov rdx, [rsi]; mov [rdi], rdx; ret; 
0x000000000cfb33: add eax, ebx; nop [rax+rax]; xor rax, rax; ret; 
0x0000000009020c: add eax, ebx; notrack jmp rax; 
0x00000000188298: add eax, ecx; add rax, rdi; vzeroupper; ret; 
0x0000000013c9e3: add eax, ecx; cmovs eax, edx; ret; 
0x0000000006354d: add eax, ecx; notrack jmp rax; 
0x000000000abf69: add eax, ecx; ret; 
0x000000001837d6: add eax, ecx; sub rax, rdi; ret; 
0x0000000018cfad: add eax, ecx; sub rax, rdx; shr rax, 0x2; vzeroupper; ret; 
0x0000000018863d: add eax, ecx; sub rax, rdx; vzeroupper; ret; 
0x000000001460de: add eax, ecx; sub rdx, 0x1; jne short 0x0000000000146068; ret; 
0x000000001844c6: add eax, ecx; vzeroupper; ret; 
0x00000000184b6e: add eax, edi; add rax, r8; vzeroupper; ret; 
0x000000000abf66: add eax, edi; add rax, rcx; ret; 
0x0000000018863a: add eax, edi; add rax, rcx; sub rax, rdx; vzeroupper; ret; 
0x000000001844c3: add eax, edi; add rax, rcx; vzeroupper; ret; 
0x000000000ac79a: add eax, edi; add rax, rsi; ret; 
0x00000000104df2: add eax, edi; call r13; 
0x000000000a223f: add eax, edi; dec dword ptr [rax+0x29]; ret; 
0x000000001144ff: add eax, edi; dec dword ptr [rax-0x75]; and al, 0x8; add rsp, 0x28; ret; 
0x000000000a89c6: add eax, edi; mov [rdi], dx; movzx edx, byte ptr [rsp-0x6]; mov [rdi+0x2], dl; ret; 
0x000000000a89e5: add eax, edi; mov [rdi], edx; movzx edx, byte ptr [rsp-0xc]; mov [rdi+0x4], dl; ret; 
0x000000000a89fd: add eax, edi; mov [rdi], edx; movzx edx, word ptr [rsp+0xc]; mov [rdi+0x4], dx; ret; 
0x00000000064627: add eax, edi; notrack jmp rax; 
0x000000000a8999: add eax, edi; ret; 
0x0000000018d065: add eax, edi; sub rax, rdx; shr rax, 0x2; vzeroupper; ret; 
0x000000001886f5: add eax, edi; sub rax, rdx; vzeroupper; ret; 
0x0000000018463a: add eax, edi; vzeroupper; ret; 
0x00000000074901: add eax, edx; jmp rax; 
0x0000000007e5dc: add eax, edx; mov dword ptr [rbp-0x4d0], 0x1; mov r9, rsi; jmp rax; 
0x0000000007d410: add eax, edx; mov dword ptr [rbp-0x4d0], 0x1; mov r9, rsi; mov dword ptr [rbp-0x4f0], 0x0; jmp rax; 
0x0000000007da04: add eax, edx; mov dword ptr [rbp-0x4d0], 0x1; mov r9, rsi; mov dword ptr [rbp-0x4f0], 0x1; jmp rax; 
0x0000000007e3a4: add eax, edx; mov dword ptr [rbp-0x4e8], 0x1; mov r9, rsi; mov dword ptr [rbp-0x4f8], 0x20; jmp rax; 
0x0000000007e2b4: add eax, edx; mov dword ptr [rbp-0x540], 0x1; mov r9, rsi; mov dword ptr [rbp-0x530], 0x0; jmp rax; 
0x00000000031ade: add eax, edx; notrack jmp r8; 
0x00000000023e8e: add eax, edx; notrack jmp rax; 
0x000000000b1d76: add eax, edx; sub rax, rdi; ret; 
0x000000000cf87b: add eax, edx; sub rax, rdi; shr rax, 0x2; ret; 
0x0000000006c910: add eax, esi; notrack jmp rax; 
0x000000000ac79d: add eax, esi; ret; 
0x00000000109110: add eax, esp; notrack jmp rax; 
0x0000000017c8f8: add eax, fs:[rax]; add [rax-0x7cb7fec8], al; fdivr st, st(7); ret; 
0x000000000ea58d: add ebp, [rax+0xc]; add [rax+0x63], cl; add al, 0x82; add rax, rdx; notrack jmp rax; 
0x000000000daa20: add ebp, [rbx]; add [rax], al; add [rax-0x7d], cl; ret; 
0x000000000dd5a7: add ebp, eax; ret; 
0x00000000149b35: add ebp, eax; sub edx, eax; mov rsi, rbp; call qword ptr [rbx+0x40]; 
0x00000000155942: add ebp, ebx; call rbp; 
0x000000001939f4: add ebp, ecx; lodsd [rsi]; idiv bh; jmp qword ptr [rsi+0xf]; 
0x0000000015f970: add ebp, edi; jmp qword ptr [rsi+0x66]; 
0x0000000015159b: add ebp, esp; std; call qword ptr [rax-0x5e1f00d]; 
0x00000000104de7: add ebx, [0x0]; mov r9, rbx; add r8, r15; call r13; 
0x0000000015fd16: add ebx, [rax+0x5a]; pop rbx; ret; 
0x000000000310c0: add ebx, [rax+rax]; lea rdi, [rip+0x1bc8b6]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000094e27: add ebx, [rbx+0x31]; rcr byte ptr [rbp+0x41], 0x5c; pop r13; pop r14; ret; 
0x0000000009e9e6: add ebx, [rbx+0x44]; mov eax, eax; pop rbp; pop r12; ret; 
0x0000000009d13e: add ebx, [rbx+0x5d]; pop r12; ret; 
0x000000000951b1: add ebx, [rbx+0x5d]; ret; 
0x0000000015318e: add ebx, [rbx-0x39]; add eax, 0x9dc86; add al, [rax]; add [rax], al; ret; 
0x00000000041270: add ebx, [rdi+0x20]; mov rax, r11; ret; 
0x0000000012129e: add ebx, eax; mov rax, [rdi]; mov [rdx], rax; mov eax, 0x1; ret; 
0x00000000121ffe: add ebx, eax; mov rax, [rip+0xcda71]; mov rax, [rax+0x18]; add dword ptr [rax], 0x1; ret; 
0x000000000cfb23: add ebx, eax; nop [rax+rax]; add rax, 0x3; ret; 
0x00000000190cb3: add ebx, eax; nop [rax+rax]; lea rax, [rdi+0x2]; ret; 
0x0000000012cef0: add ebx, eax; nop [rax+rax]; xor eax, eax; ret; 
0x00000000055c21: add ebx, eax; nop [rax+rax]; xor eax, eax; ret; 
0x0000000013c1a7: add ebx, eax; nop [rax]; mov eax, 0x2; ret; 
0x00000000184d2b: add ebx, eax; nop [rax]; ret; 
0x00000000094ebe: add ebx, eax; nop; mov [rip+0x157418], rax; ret; 
0x0000000009522e: add ebx, eax; nop; mov dword ptr [rip+0x157079], 0x1; mov [rip+0x15704e], rax; ret; 
0x0000000012200d: add ebx, eax; nop; ret; 
0x0000000011f15b: add ebx, eax; xor ebp, ebp; pop rax; pop rdi; call rax; 
0x00000000029197: add ebx, ebp; ret far; 
0x0000000011579b: add ebx, edx; hlt; call qword ptr [rax-0x36fa74b8]; 
0x0000000016ddf3: add ebx, esi; movq [rdi], mm1; ret; 
0x0000000014937e: add ebx, esi; sub edx, r14d; mov rsi, rbx; call qword ptr [r15+0x40]; 
0x000000001909e2: add ecx, 0x100; cmp rdx, rcx; jne short 0x00000000001909c6; vzeroupper; ret; 
0x0000000010c6b6: add ecx, 0x150; shr ecx, 0x3; rep stosq [rdi]; ret; 
0x0000000015f15c: add ecx, 0x180; mov rsi, rax; shr ecx, 0x3; rep movsq [rdi], [rsi]; ret; 
0x0000000013c555: add ecx, 0x2; mov [r8], r11d; pop rbx; mov [r9], rcx; ret; 
0x000000000bc04b: add ecx, 0x40; cmp rdx, rcx; jne short 0x00000000000bc037; rep ret; 
0x0000000018bb1f: add ecx, 0x80; cmp rdx, rcx; jne short 0x000000000018bb0b; vzeroupper; ret; 
0x000000000b3a8a: add ecx, [r9-0x76b7fcbe]; clc; ret; 
0x00000000095a8c: add ecx, [rax+0x29]; ret; 
0x00000000077b3a: add ecx, [rax+0x63]; add al, 0x86; add rax, rbx; jmp rax; 
0x00000000077b98: add ecx, [rax+0x63]; add al, 0x87; add rax, rbx; jmp rax; 
0x000000000787db: add ecx, [rax-0x73]; add eax, 0x1359dd; movsxd rax, [rax+rdx*4]; add rax, rbx; jmp rax; 
0x00000000077eb7: add ecx, [rax-0x73]; add eax, 0x136301; movsxd rax, [rax+rdx*4]; add rax, rbx; jmp rax; 
0x00000000077873: add ecx, [rax-0x73]; add eax, 0x136845; movsxd rax, [rax+rcx*4]; add rax, rbx; jmp rax; 
0x000000000778ce: add ecx, [rax-0x73]; add eax, 0x13686a; movsxd rax, [rax+rdx*4]; add rax, rbx; jmp rax; 
0x00000000198a22: add ecx, [rax-0x73]; insb [rdi], dx; ret; 
0x000000000b772c: add ecx, [rax-0x73]; jg short 0x00000000000b7734; jne 0x00000000000b7fa0; ret; 
0x000000000b8e10: add ecx, [rax-0x73]; jg short 0x00000000000b8e18; jne 0x00000000000b97f0; ret; 
0x0000000018a3ad: add ecx, [rax-0x73]; jg short 0x000000000018a3b5; jne 0x000000000018a610; vzeroupper; ret; 
0x0000000018b0e1: add ecx, [rax-0x73]; jg short 0x000000000018b0e9; jne 0x000000000018b340; vzeroupper; ret; 
0x00000000136d3e: add ecx, [rax-0x75]; push rdi; or [rax-0x7d], cl; ret; 
0x000000000b3a8d: add ecx, [rax-0x77]; clc; ret; 
0x000000000e8675: add ecx, [rax-0x77]; fimul st, dword ptr [rax-0x7d]; ret; 
0x000000001483b7: add ecx, [rax-0x77]; out dx, eax; and esi, 0xfffffffc; call qword ptr [rax+0x30]; 
0x0000000002891a: add ecx, [rax-0x77]; ror dword ptr [rax+0x39], 0x1; ret; 
0x0000000009cf1b: add ecx, [rax-0x7b]; ror byte ptr [rdi], 0x84; ret far; 
0x0000000009d127: add ecx, [rax-0x7b]; shl byte ptr [rbx+0x4c], 0x89; out 0x48, al; mov edi, ebp; call rax; 
0x0000000013accb: add ecx, [rax-0x7d]; call qword ptr [rcx]; 
0x00000000064333: add ecx, [rax-0x7d]; ret; 
0x000000000a70e1: add ecx, [rbp+0x39]; ret; 
0x000000000469d7: add ecx, [rbp+rcx*4+0x64]; ret; 
0x0000000019630d: add ecx, [rbp-0x77]; ret far; 
0x0000000016db62: add ecx, [rbx+0x357890e]; mov [rdi], ecx; ret; 
0x00000000149b2d: add ecx, [rbx-0x74b7b7ad]; cmp ecx, [rax+0x1]; vcmppd xmm9, xmm10, [rax-0x77], 0xee; call qword ptr [rbx+0x40]; 
0x000000000b8534: add ecx, [rcx+0x357890f]; lea rax, [rdi+0x6]; ret; 
0x000000000b9384: add ecx, [rcx+0x357890f]; lea rax, [rdi+0x7]; ret; 
0x000000000b6ee4: add ecx, [rcx+0x357890f]; ret; 
0x000000000b77a4: add ecx, [rcx+0x357890f]; sub r8, 0x7; lea rdi, [rdi+0x7]; jne 0x00000000000b7fa0; ret; 
0x000000000bafe4: add ecx, [rcx+0x357890f]; xor ch, ch; mov [rdi+0x7], ch; ret; 
0x000000000b3a8b: add ecx, [rcx-0x76b7fcbe]; clc; ret; 
0x00000000153217: add ecx, [rcx-0x77]; ror byte ptr [rcx+rcx*4-0x40], 0x5b; ret; 
0x00000000053243: add ecx, [rcx-0x7d]; ret; 
0x000000000dba17: add ecx, [rcx]; add [rax], al; add [rax-0x7d], cl; ret; 
0x00000000160aa1: add ecx, [rcx]; or [rax], eax; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000a05fc: add ecx, [rdi]; add [rax-0x73], cl; adc eax, 0xf028a; cmove rax, rdx; ret; 
0x0000000018a3b1: add ecx, [rdi]; test [rax+0x2], ebx; add [rax], al; vzeroupper; ret; 
0x000000000b7730: add ecx, [rdi]; test [rcx+0x8], ebp; add [rax], al; ret; 
0x000000000f1d72: add ecx, [rdi]; test [rdi], bl; add al, [rax]; add [rax-0x7d], cl; ret; 
0x0000000017c8a7: add ecx, [rdi]; test [rdx-0x7ffffffd], esi; cmp [rcx], al; sbb rax, 0xffffffffffffffff; ret; 
0x0000000002a5d5: add ecx, [rdi]; xchg [rax*1+0x39480000], esp; ret; 
0x000000000c977e: add ecx, [rdi]; xchg bh, cl; add eax, 0x89490000; ret; 
0x000000000c94a2: add ecx, [rdi]; xchg dl, bh; add eax, 0x89490000; ret; 
0x0000000002e5ad: add ecx, [rdi]; xchg ebp, ecx; add al, 0x0; add [rax+0x39], cl; ret far; 
0x000000000db6b2: add ecx, [rdx]; add [rax], al; add [rax-0x7d], cl; ret; 
0x0000000013c74d: add ecx, eax; loopne 0x000000000013c754; shr rax, 0x4; and eax, 0x7f; ret; 
0x00000000126260: add ecx, ebp; sar dh, 0xff; jmp qword ptr [rsi+0x2e]; 
0x00000000165dbf: add ecx, ebx; notrack jmp r9; 
0x0000000018d486: add ecx, ebx; notrack jmp rcx; 
0x00000000119674: add ecx, ebx; ret; 
0x000000000a8986: add ecx, ecx; notrack jmp rcx; 
0x00000000080eb3: add ecx, edi; notrack jmp rcx; 
0x000000001069ab: add ecx, esi; jmp qword ptr [rbx+rcx*4+0x4]; 
0x000000001121c5: add ecx, esi; jmp qword ptr [rsi+0x41]; 
0x0000000011247f: add ecx, esi; jmp qword ptr [rsi+0x45]; 
0x000000001121fb: add ecx, esi; jmp qword ptr [rsi-0x7d]; 
0x000000000bc114: add ecx, esi; notrack jmp rcx; 
0x0000000014dae1: add edi, 0x10; jmp rcx; 
0x000000000baacd: add edi, 0x10; lea r11, [rip+0xf4a6d]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000ba13d: add edi, 0x10; lea r11, [rip+0xf537d]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b9877: add edi, 0x10; lea r11, [rip+0xf5bff]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b9857: add edi, 0x10; lea r11, [rip+0xf5c1f]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b846d: add edi, 0x10; lea r11, [rip+0xf6e6d]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8027: add edi, 0x10; lea r11, [rip+0xf726f]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8007: add edi, 0x10; lea r11, [rip+0xf728f]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6e2d: add edi, 0x10; lea r11, [rip+0xf82d1]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000e820e: add edi, 0x1; test al, al; jne short 0x00000000000e81c1; xor eax, eax; ret; 
0x00000000160196: add edi, 0x1c; mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x000000000bab02: add edi, 0x20; lea r11, [rip+0xf4a38]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000ba172: add edi, 0x20; lea r11, [rip+0xf5348]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b84a2: add edi, 0x20; lea r11, [rip+0xf6e38]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6e62: add edi, 0x20; lea r11, [rip+0xf829c]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000148a4f: add edi, 0x23b0; pop rbp; jmp rcx; 
0x00000000116d81: add edi, 0x26; mov fs:[rax], edi; mov eax, 0xffffffff; ret; 
0x000000000946b6: add edi, 0x308; mov esi, 0x80; syscall; 
0x000000000ba9b0: add edi, 0x30; lea r11, [rip+0xf4b8a]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000ba03f: add edi, 0x30; lea r11, [rip+0xf547b]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b836f: add edi, 0x30; lea r11, [rip+0xf6f6b]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6d2f: add edi, 0x30; lea r11, [rip+0xf83cf]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000008e93c: add edi, 0x4; add [rax], al; lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax+0x90]; 
0x00000000150658: add edi, 0x58; jmp rcx; 
0x0000000014fd18: add edi, 0x68; jmp rcx; 
0x0000000014cedb: add edi, 0xc8; jmp rcx; 
0x0000000011f6eb: add edi, 0xd8f7000c; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000009eb42: add edi, [rax+0x1]; pop rbx; pop rbp; pop r12; ret; 
0x0000000013c19b: add edi, [rax+0x2]; sub esi, 0x1; mov [rdi+0x1], sil; ret; 
0x000000001179c9: add edi, [rsi-0x1]; inc dword ptr [rbp-0x7cc08b40]; ret; 
0x0000000004466f: add edi, [rsp]; mov rsi, r15; call r14; 
0x00000000048322: add edi, eax; cmp rdi, r8; jb short 0x0000000000048305; xor eax, eax; ret; 
0x0000000005d8f4: add edi, eax; test [rdi+rdi*8-0x1], esp; jmp qword ptr [rsi]; 
0x000000001971f0: add edi, ebp; call r12; 
0x0000000011f8c1: add edi, ebp; xor eax, eax; ret; 
0x00000000031fe3: add edi, edi; jmp qword ptr [rsi+0x2e]; 
0x00000000165dbc: add edi, edx; add r9, r11; notrack jmp r9; 
0x0000000018f501: add edi, edx; lea r11, [rip+0x2e136]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018f487: add edi, edx; lea r11, [rip+0x2e1b0]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018f3f8: add edi, edx; lea r11, [rip+0x2e23f]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018f1ed: add edi, edx; lea r11, [rip+0x2e44a]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018f0bb: add edi, edx; lea r11, [rip+0x2e57c]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018eff5: add edi, edx; lea r11, [rip+0x2e642]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018ef77: add edi, edx; lea r11, [rip+0x2e6c0]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018eee2: add edi, edx; lea r11, [rip+0x2e755]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018ece5: add edi, edx; lea r11, [rip+0x2e952]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018ebb3: add edi, edx; lea r11, [rip+0x2ea84]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018eab6: add edi, edx; lea r11, [rip+0x2eb81]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018ded1: add edi, edx; lea r11, [rip+0x2f626]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018de57: add edi, edx; lea r11, [rip+0x2f6a0]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018ddc8: add edi, edx; lea r11, [rip+0x2f72f]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018dbbd: add edi, edx; lea r11, [rip+0x2f93a]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018da8b: add edi, edx; lea r11, [rip+0x2fa6c]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018d9c5: add edi, edx; lea r11, [rip+0x2fb32]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018d947: add edi, edx; lea r11, [rip+0x2fbb0]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018d8b2: add edi, edx; lea r11, [rip+0x2fc45]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018d6b5: add edi, edx; lea r11, [rip+0x2fe42]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018d583: add edi, edx; lea r11, [rip+0x2ff74]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018d478: add edi, edx; lea r11, [rip+0x3007f]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000016f86c: add edi, edx; lea r11, [rip+0x4e9cb]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016dfc7: add edi, edx; lea r11, [rip+0x50270]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016de60: add edi, edx; lea r11, [rip+0x503d7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016cd58: add edi, edx; lea r11, [rip+0x50fdf]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b13a: add edi, edx; lea r11, [rip+0x527fd]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b4c7: add edi, edx; lea r11, [rip+0x52870]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b349: add edi, edx; lea r11, [rip+0x529ee]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016898b: add edi, edx; lea r11, [rip+0x54fac]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001688c6: add edi, edx; lea r11, [rip+0x55071]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165fab: add edi, edx; lea r11, [rip+0x577cc]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165ee6: add edi, edx; lea r11, [rip+0x57891]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000013c538: add edi, edx; mov [r9], rdi; ret; 
0x0000000012f47b: add edi, esi; call qword ptr [rax-0x18]; 
0x000000000c3dde: add edi, esi; jmp qword ptr [rsi+0x66]; 
0x0000000014f6cb: add edi, esi; jmp qword ptr [rsi-0x70]; 
0x00000000044889: add edi, esi; mov rdx, rbp; mov rsi, r15; mov rdi, r12; call rbx; 
0x00000000045918: add edi, esp; call rax; 
0x0000000019419a: add edi, esp; notrack jmp rdi; 
0x0000000013de9c: add edx, 0x1; syscall; 
0x0000000013c48e: add edx, 0x2; mov [r8], edx; mov [r9], r10; ret; 
0x00000000093582: add edx, 0x60; mov rax, [rdi]; mov [rdx], rax; ret; 
0x0000000013c59f: add edx, 0x8; cmp esi, 0x80; cmovb eax, edx; ret; 
0x0000000002415c: add edx, 0x988; cmp r15, rdx; je short 0x0000000000024177; call rax; 
0x00000000120e35: add edx, eax; cmp rcx, rdx; mov edx, 0x0; cmovb rax, rdx; ret; 
0x00000000184a02: add edx, eax; jl 0x0000000000184af0; add rax, rdi; vzeroupper; ret; 
0x000000000ac6a8: add edx, eax; jl short 0x00000000000ac710; add rax, rdi; ret; 
0x000000000ac6b8: add edx, eax; jl short 0x00000000000ac710; lea rax, [rdi+rax+0x10]; ret; 
0x000000000ac6d8: add edx, eax; jl short 0x00000000000ac710; lea rax, [rdi+rax+0x20]; ret; 
0x000000000ac6f8: add edx, eax; jl short 0x00000000000ac710; lea rax, [rdi+rax+0x30]; ret; 
0x00000000056b22: add edx, eax; mov rax, rdx; pop rbx; ret; 
0x0000000014f759: add edx, eax; notrack jmp rdx; 
0x0000000005b4f7: add edx, ebp; mov [r9+0x3a8], rdi; mov rsp, rdx; ret; 
0x00000000040ab1: add edx, ebx; notrack jmp r10; 
0x00000000080f17: add edx, ecx; notrack jmp rdx; 
0x00000000074058: add edx, edi; call qword ptr [rax+r9*8]; 
0x00000000052d7c: add edx, edi; notrack jmp rdx; 
0x000000001214f7: add edx, edx; mov edi, r12d; mov eax, 0x14; syscall; 
0x00000000193f41: add edx, edx; notrack jmp rdx; 
0x000000000551c0: add edx, esi; cmp ecx, 0x2f; notrack jmp rdx; 
0x000000000407ae: add edx, esi; notrack jmp rdx; 
0x0000000014ed69: add esi, 0x38; jmp qword ptr [rax+0x18]; 
0x000000000bafe9: add esi, [rax]; in eax, dx; mov [rdi+0x7], ch; ret; 
0x0000000014762d: add esi, [rcx]; sar bh, 0x53; sbb bl, ch; mov esp, 0xfe8466e8; jmp qword ptr [rsi+0xf]; 
0x0000000015d13c: add esi, [rdi+0x11]; cmp dx, cx; sete al; ret; 
0x0000000015d156: add esi, [rsi+0x7]; ret; 
0x0000000014866f: add esi, [rsi+0xe]; mov eax, 0x2; ret; 
0x00000000115fb1: add esi, eax; call far fword ptr [r8+rax*4+0x3e]; 
0x000000001491bf: add esi, eax; cmp rsi, [rdx+0x28]; ja short 0x00000000001491b0; mov [rdx+0x20], rsi; ret; 
0x0000000005327b: add esi, eax; jmp qword ptr [rax]; 
0x0000000015743a: add esi, eax; mov [rdi+0x18], rsi; mov rax, r8; ret; 
0x000000000d0b7e: add esi, eax; mov [rsp+0x88], r14; call rbp; 
0x000000000ec499: add esi, eax; or [r9], r8b; mov [rdi], al; mov eax, 0x1; ret; 
0x0000000011f8fc: add esi, ebp; lea ecx, [rdi+rdi]; shr eax, cl; and eax, 0x3; ret; 
0x000000000f1f7f: add esi, ebx; call far fword ptr [rbx+0x4c]; 
0x000000000f1f8f: add esi, ebx; jmp qword ptr [rsi+0xf]; 
0x0000000016dd13: add esi, ebx; movq [rdi], mm1; ret; 
0x0000000013c64e: add esi, ebx; movq mm0, [rsi]; movups [rdi+rdx+0x8], xmm0; ret; 
0x000000000bbb7e: add esi, ebx; movsb [rdi], [rsi]; ret; 
0x0000000015f167: add esi, ebx; movsq [rdi], [rsi]; ret; 
0x00000000098a03: add esi, ebx; stosq [rdi]; pop rbp; ret; 
0x00000000043b1d: add esi, ebx; stosq [rdi]; ret; 
0x000000000bac3a: add esi, ecx; lea r11, [rip+0xf4981]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000bac1a: add esi, ecx; lea r11, [rip+0xf49a1]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000babf1: add esi, ecx; lea r11, [rip+0xf49ca]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8d7a: add esi, ecx; lea r11, [rip+0xf666d]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8d5a: add esi, ecx; lea r11, [rip+0xf668d]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8d31: add esi, ecx; lea r11, [rip+0xf66b6]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b769a: add esi, ecx; lea r11, [rip+0xf7b6d]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b767a: add esi, ecx; lea r11, [rip+0xf7b8d]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b7651: add esi, ecx; lea r11, [rip+0xf7bb6]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000012e92b: add esi, edi; call qword ptr [rax-0x18]; 
0x0000000018f8bc: add esi, edi; fadd st, st(3); ret; 
0x00000000165db9: add esi, edx; add rdi, rdx; add r9, r11; notrack jmp r9; 
0x0000000016f604: add esi, edx; lea r11, [rip+0x4ec33]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016f484: add esi, edx; lea r11, [rip+0x4edb3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016f304: add esi, edx; lea r11, [rip+0x4ef33]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016f185: add esi, edx; lea r11, [rip+0x4f0b2]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016f004: add esi, edx; lea r11, [rip+0x4f233]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016ee84: add esi, edx; lea r11, [rip+0x4f3b3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016ed04: add esi, edx; lea r11, [rip+0x4f533]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016eb84: add esi, edx; lea r11, [rip+0x4f6b3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016ea04: add esi, edx; lea r11, [rip+0x4f833]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016e884: add esi, edx; lea r11, [rip+0x4f9b3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016e704: add esi, edx; lea r11, [rip+0x4fb33]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016e584: add esi, edx; lea r11, [rip+0x4fcb3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016e404: add esi, edx; lea r11, [rip+0x4fe33]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016e284: add esi, edx; lea r11, [rip+0x4ffb3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016e104: add esi, edx; lea r11, [rip+0x50133]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016cb04: add esi, edx; lea r11, [rip+0x51233]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016c984: add esi, edx; lea r11, [rip+0x513b3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016c804: add esi, edx; lea r11, [rip+0x51533]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016c685: add esi, edx; lea r11, [rip+0x516b2]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016c504: add esi, edx; lea r11, [rip+0x51833]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016c384: add esi, edx; lea r11, [rip+0x519b3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016c204: add esi, edx; lea r11, [rip+0x51b33]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016c084: add esi, edx; lea r11, [rip+0x51cb3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016bf04: add esi, edx; lea r11, [rip+0x51e33]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016bd84: add esi, edx; lea r11, [rip+0x51fb3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016bc04: add esi, edx; lea r11, [rip+0x52133]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016ba84: add esi, edx; lea r11, [rip+0x522b3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b904: add esi, edx; lea r11, [rip+0x52433]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b784: add esi, edx; lea r11, [rip+0x525b3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b604: add esi, edx; lea r11, [rip+0x52733]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169fb2: add esi, edx; lea r11, [rip+0x53985]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169e62: add esi, edx; lea r11, [rip+0x53ad5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169d12: add esi, edx; lea r11, [rip+0x53c25]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169bc2: add esi, edx; lea r11, [rip+0x53d75]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169a72: add esi, edx; lea r11, [rip+0x53ec5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169922: add esi, edx; lea r11, [rip+0x54015]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001697d2: add esi, edx; lea r11, [rip+0x54165]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169532: add esi, edx; lea r11, [rip+0x54405]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001693e2: add esi, edx; lea r11, [rip+0x54555]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169292: add esi, edx; lea r11, [rip+0x546a5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169142: add esi, edx; lea r11, [rip+0x547f5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168ff2: add esi, edx; lea r11, [rip+0x54945]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168ea2: add esi, edx; lea r11, [rip+0x54a95]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168d52: add esi, edx; lea r11, [rip+0x54be5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168a8a: add esi, edx; lea r11, [rip+0x54ead]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001675d2: add esi, edx; lea r11, [rip+0x561a5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000167482: add esi, edx; lea r11, [rip+0x562f5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000167332: add esi, edx; lea r11, [rip+0x56445]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001671e2: add esi, edx; lea r11, [rip+0x56595]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000167092: add esi, edx; lea r11, [rip+0x566e5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166f42: add esi, edx; lea r11, [rip+0x56835]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166df2: add esi, edx; lea r11, [rip+0x56985]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166b52: add esi, edx; lea r11, [rip+0x56c25]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166a02: add esi, edx; lea r11, [rip+0x56d75]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001668b2: add esi, edx; lea r11, [rip+0x56ec5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166762: add esi, edx; lea r11, [rip+0x57015]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166612: add esi, edx; lea r11, [rip+0x57165]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001664c2: add esi, edx; lea r11, [rip+0x572b5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166372: add esi, edx; lea r11, [rip+0x57405]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001660aa: add esi, edx; lea r11, [rip+0x576cd]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000013f26c: add esi, esi; ret; 
0x000000000ee414: add esi, esi; ret; 
0x000000000bb94d: add esp, 0x100; sub rax, rdx; ret; 
0x000000000bb9fd: add esp, 0x100; xor edx, edx; or cl, cl; cmove rax, rdx; ret; 
0x00000000062876: add esp, 0x1010; pop rbp; ret; 
0x00000000062681: add esp, 0x1018; mov rax, r12; pop rbp; pop r12; ret; 
0x0000000009d513: add esp, 0x10; mov eax, r12d; pop r12; ret; 
0x000000001522a6: add esp, 0x10; mov eax, r8d; pop r12; ret; 
0x0000000015caf3: add esp, 0x10; mov eax, r8d; pop rbp; ret; 
0x000000000995d0: add esp, 0x10; mov rax, r8; pop rbp; ret; 
0x000000000993d9: add esp, 0x10; mov rax, r8; pop rbx; ret; 
0x0000000008e00a: add esp, 0x10; movzx eax, al; pop rbx; neg eax; ret; 
0x000000001448e0: add esp, 0x10; pop r12; ret; 
0x0000000002ff38: add esp, 0x10; pop rbp; pop r12; pop r13; ret; 
0x000000000960f1: add esp, 0x10; pop rbp; ret; 
0x00000000091a55: add esp, 0x10; pop rbx; jmp rax; 
0x00000000062596: add esp, 0x10; pop rbx; pop r12; pop r13; ret; 
0x00000000081155: add esp, 0x10; pop rbx; pop rbp; pop r12; ret; 
0x000000000428c5: add esp, 0x10; pop rbx; ret; 
0x0000000016086f: add esp, 0x110; mov eax, r12d; pop r12; ret; 
0x0000000015258e: add esp, 0x110; pop rbx; pop rbp; pop r12; ret; 
0x00000000043052: add esp, 0x118; ret; 
0x0000000010f338: add esp, 0x130; pop rbp; ret; 
0x00000000043919: add esp, 0x140; mov eax, r8d; pop rbx; ret; 
0x00000000042f22: add esp, 0x148; ret; 
0x0000000009a79e: add esp, 0x18; jmp rax; 
0x00000000147016: add esp, 0x18; mov eax, r12d; pop rbx; pop r12; ret; 
0x00000000046e9c: add esp, 0x18; mov eax, r8d; pop rbx; pop rbp; ret; 
0x0000000009cfab: add esp, 0x18; mov rax, r8; pop rbx; pop r12; ret; 
0x00000000062e5a: add esp, 0x18; movzx eax, al; neg eax; ret; 
0x000000000476f2: add esp, 0x18; pop rbp; mov rax, r12; pop r12; ret; 
0x00000000042a26: add esp, 0x18; pop rbx; pop rbp; ret; 
0x00000000034a1b: add esp, 0x18; ret; 
0x0000000015d0e3: add esp, 0x190; mov rax, r8; pop rbp; ret; 
0x00000000114ef3: add esp, 0x190; pop rbx; pop rbp; pop r12; ret; 
0x0000000010d64e: add esp, 0x1a0; mov eax, r8d; pop rbx; ret; 
0x00000000062383: add esp, 0x1d0; pop rbp; pop r12; pop r13; ret; 
0x00000000094828: add esp, 0x20; and eax, 0xc; pop rbx; ret; 
0x00000000137f77: add esp, 0x20; mov eax, r8d; pop rbp; ret; 
0x000000000dfe2f: add esp, 0x20; mov eax, r8d; pop rbx; ret; 
0x00000000042ae1: add esp, 0x20; movdqa xmm0, xmm2; pop rbp; ret; 
0x00000000042b72: add esp, 0x20; pop rbp; ret; 
0x000000000921b1: add esp, 0x20; pop rbx; jmp rax; 
0x0000000002f85d: add esp, 0x20; pop rbx; pop rbp; pop r12; ret; 
0x000000000ca0e6: add esp, 0x20; pop rbx; ret; 
0x000000000d4319: add esp, 0x20; xor eax, eax; pop rbx; ret; 
0x00000000092663: add esp, 0x20; xor edx, edx; pop rbx; jmp rax; 
0x00000000152ba9: add esp, 0x28; mov eax, r12d; pop rbp; pop r12; ret; 
0x000000000818a8: add esp, 0x28; mov eax, r8d; pop rbx; pop rbp; ret; 
0x000000000846b8: add esp, 0x28; mov edx, r12d; pop rbx; pop r12; jmp rax; 
0x0000000008abce: add esp, 0x28; mov rax, r12; pop rbp; pop r12; ret; 
0x0000000006275b: add esp, 0x28; mov rax, r12; pop rbx; pop r12; ret; 
0x000000001523e5: add esp, 0x28; pop rbx; pop r12; ret; 
0x0000000005b08d: add esp, 0x28; pop rbx; pop rbp; ret; 
0x00000000047476: add esp, 0x28; ret; 
0x00000000024419: add esp, 0x28; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000086bd8: add esp, 0x2c0; pop rbp; pop r12; pop r13; ret; 
0x00000000196f88: add esp, 0x30; mov rax, r12; pop r12; ret; 
0x0000000011308d: add esp, 0x30; pop rbp; ret; 
0x00000000091289: add esp, 0x30; pop rbx; pop rbp; pop r12; ret; 
0x00000000196b6f: add esp, 0x30; pop rbx; pop rbp; pop r14; ret; 
0x0000000010e63e: add esp, 0x30; pop rbx; ret; 
0x000000000244bc: add esp, 0x38; pop rbx; pop rbp; ret; 
0x0000000005b8a8: add esp, 0x38; ret; 
0x00000000112a88: add esp, 0x40; pop r12; ret; 
0x00000000099232: add esp, 0x40; pop rbp; ret; 
0x000000000439c9: add esp, 0x40; pop rbx; ret; 
0x000000001229ac: add esp, 0x40; ret; 
0x00000000062413: add esp, 0x410; pop rbp; pop r12; pop r13; ret; 
0x0000000011bffe: add esp, 0x418; ret; 
0x0000000005b5e6: add esp, 0x450; pop rbp; ret; 
0x00000000151eb4: add esp, 0x48; pop rbx; pop rbp; ret; 
0x0000000008dc0b: add esp, 0x48; ret; 
0x0000000014e7bf: add esp, 0x50; pop rbx; pop rbp; pop r12; ret; 
0x0000000015c4d1: add esp, 0x520; mov rax, r12; pop r12; ret; 
0x0000000013deb6: add esp, 0x58; pop rbx; pop rbp; ret; 
0x000000000d0ed4: add esp, 0x58; ret; 
0x0000000011393f: add esp, 0x60; mov eax, r11d; pop rbx; ret; 
0x00000000113eb8: add esp, 0x60; mov rax, r12; pop r12; ret; 
0x000000001150c8: add esp, 0x60; pop rbp; ret; 
0x0000000010dd8c: add esp, 0x68; pop rbp; pop r12; ret; 
0x0000000010111d: add esp, 0x68; pop rbx; pop rbp; ret; 
0x0000000010e4fd: add esp, 0x68; ret; 
0x000000000bd103: add esp, 0x70; pop rbx; pop rbp; pop r12; ret; 
0x0000000010df07: add esp, 0x78; ret; 
0x0000000015e24f: add esp, 0x88; mov eax, r12d; pop rbp; pop r12; ret; 
0x0000000011cb4d: add esp, 0x88; pop rbx; pop rbp; ret; 
0x000000000ee355: add esp, 0x8; add eax, eax; pop rbx; pop rbp; ret; 
0x0000000013c421: add esp, 0x8; lea eax, [rbx+rbp]; pop rbx; pop rbp; ret; 
0x000000001462cf: add esp, 0x8; lea rax, [rip+0xaa827]; ret; 
0x000000001468b1: add esp, 0x8; mov eax, 0x10; pop rbx; pop rbp; ret; 
0x00000000155b41: add esp, 0x8; mov eax, 0x1; pop rbp; pop r12; ret; 
0x000000000832f7: add esp, 0x8; mov eax, 0x1; pop rbx; pop rbp; ret; 
0x00000000136e97: add esp, 0x8; mov eax, 0xa; pop rbx; pop rbp; ret; 
0x00000000083319: add esp, 0x8; mov eax, 0xffffffff; pop rbx; pop rbp; ret; 
0x00000000089e2b: add esp, 0x8; mov eax, ebx; pop rbx; pop rbp; ret; 
0x0000000014dd0a: add esp, 0x8; mov eax, r12d; pop rbp; pop r12; ret; 
0x0000000005b961: add esp, 0x8; mov eax, r12d; pop rbx; pop r12; ret; 
0x00000000082434: add esp, 0x8; mov eax, r8d; pop rbx; pop rbp; ret; 
0x000000001173af: add esp, 0x8; mov eax, r8d; ret; 
0x00000000102849: add esp, 0x8; mov eax, r9d; ret; 
0x000000000477cf: add esp, 0x8; mov rax, r12; pop rbp; pop r12; ret; 
0x000000000a0a71: add esp, 0x8; mov rax, r12; pop rbx; pop r12; ret; 
0x0000000009fa15: add esp, 0x8; mov rax, r13; pop r12; pop r13; ret; 
0x000000000831e2: add esp, 0x8; mov rax, r8; pop rbx; pop rbp; ret; 
0x00000000156593: add esp, 0x8; mov rdi, rbp; pop rbp; pop r12; jmp rax; 
0x00000000087749: add esp, 0x8; mov rdi, rbp; pop rbx; pop rbp; jmp rax; 
0x0000000014dd43: add esp, 0x8; movzx eax, al; add eax, 0x1; ret; 
0x00000000024709: add esp, 0x8; movzx eax, al; neg eax; ret; 
0x00000000148b30: add esp, 0x8; movzx eax, al; pop rbp; pop r12; ret; 
0x00000000149ff7: add esp, 0x8; movzx eax, al; pop rbx; pop rbp; ret; 
0x000000000522e6: add esp, 0x8; movzx eax, al; ret; 
0x0000000014112e: add esp, 0x8; movzx eax, ax; ret; 
0x00000000157c26: add esp, 0x8; not eax; shr eax, 0x1f; ret; 
0x00000000155b36: add esp, 0x8; pop rbp; pop r12; jmp rax; 
0x0000000008544a: add esp, 0x8; pop rbp; pop r12; ret; 
0x00000000148a07: add esp, 0x8; pop rbx; pop rbp; jmp rcx; 
0x0000000008b517: add esp, 0x8; pop rbx; pop rbp; mov eax, r8d; ret; 
0x00000000024e39: add esp, 0x8; pop rbx; pop rbp; ret; 
0x00000000026fa9: add esp, 0x8; ret; 
0x0000000009f907: add esp, 0x8; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000162cb5: add esp, 0x8; sar eax, 0x1f; ret; 
0x0000000012b9cc: add esp, 0x8; xor eax, eax; pop rbp; pop r12; ret; 
0x00000000093613: add esp, 0x8; xor eax, eax; pop rbx; pop rbp; ret; 
0x0000000004357d: add esp, 0x90; pop rbx; pop rbp; pop r12; ret; 
0x00000000157a3c: add esp, 0x90; pop rbx; ret; 
0x000000000436f4: add esp, 0x98; pop rbp; pop r12; ret; 
0x00000000024273: add esp, 0x98; ret; 
0x00000000043abd: add esp, 0xa0; pop rbx; pop rbp; pop r12; ret; 
0x00000000120eb0: add esp, 0xa0; pop rbx; ret; 
0x000000000de776: add esp, 0xa8; pop rbp; pop r12; ret; 
0x00000000044455: add esp, 0xa8; ret; 
0x0000000002f72f: add esp, 0xb8; mov eax, r8d; pop rbp; pop r12; ret; 
0x000000000e49eb: add esp, 0xb8; pop rbx; pop rbp; ret; 
0x00000000052c38: add esp, 0xd8; ret; 
0x000000000d11ce: add esp, 0xe0; mov eax, r8d; pop rbx; ret; 
0x000000000ddc88: add esp, 0xe0; pop rbx; ret; 
0x00000000081a6d: add esp, 0xe8; mov eax, r8d; pop rbx; pop rbp; ret; 
0x0000000014945d: add esp, eax; sub edx, eax; mov rsi, r12; call qword ptr [r15+0x40]; 
0x00000000044ba9: add esp, ebp; mov rdx, r15; mov rsi, r12; mov rdi, r14; call rbp; 
0x000000001496be: add esp, ebx; sub edx, ebx; mov rsi, r12; call qword ptr [rbp+0x40]; 
0x00000000140bbf: add esp, edi; or al, [rax]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000011cdac: add fs:[rax], al; add [rbx-0x3f7ac7c0], cl; cmove eax, edx; ret; 
0x0000000013a243: add gs:[rbx+0x5d], bl; pop r12; ret; 
0x00000000047256: add qword ptr [rax+0x460], 0x1; lea rdi, [rbp+0x908]; call qword ptr [rbp+0xf10]; 
0x00000000146a2c: add qword ptr [rbx+0x22a8], 0x1; mov rdi, rbp; call qword ptr [rax+0x18]; 
0x00000000046c4c: add qword ptr [rip+0x1aa68c], 0x1; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000013c48d: add r10, 0x2; mov [r8], edx; mov [r9], r10; ret; 
0x00000000040ab0: add r10, r11; notrack jmp r10; 
0x0000000004126f: add r11, [rdi+0x20]; mov rax, r11; ret; 
0x0000000016ddf2: add r11d, r14d; movq [rdi], mm1; ret; 
0x00000000190cb2: add r11d, r8d; nop [rax+rax]; lea rax, [rdi+0x2]; ret; 
0x00000000044ba8: add r12, r13; mov rdx, r15; mov rsi, r12; mov rdi, r14; call rbp; 
0x0000000014945c: add r12, rax; sub edx, eax; mov rsi, r12; call qword ptr [r15+0x40]; 
0x000000001496bd: add r12, rbx; sub edx, ebx; mov rsi, r12; call qword ptr [rbp+0x40]; 
0x00000000155941: add r13, rbx; call rbp; 
0x0000000013c64d: add r14, r11; movq mm0, [rsi]; movups [rdi+rdx+0x8], xmm0; ret; 
0x000000000d0b7d: add r14, r8; mov [rsp+0x88], r14; call rbp; 
0x0000000016dd82: add r14b, r11b; movq [rdi], mm1; ret; 
0x0000000016dd12: add r14d, r11d; movq [rdi], mm1; ret; 
0x0000000004466e: add r15, [rsp]; mov rsi, r15; call r14; 
0x00000000045917: add r15, r12; call rax; 
0x00000000044888: add r15, r14; mov rdx, rbp; mov rsi, r15; mov rdi, r12; call rbx; 
0x000000000b988c: add r8, 0x10; lea r11, [rip+0xf5be9]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b803c: add r8, 0x10; lea r11, [rip+0xf7259]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000104df1: add r8, r15; call r13; 
0x00000000031add: add r8, rdx; notrack jmp r8; 
0x000000000a7ae1: add r8b, [r8]; add bh, dh; ret; 
0x0000000018ab17: add r8b, [r8]; lea rax, [rdi+0x2]; vzeroupper; ret; 
0x00000000189087: add r8b, [r8]; vzeroupper; ret; 
0x00000000190cc2: add r8b, r11b; nop [rax+rax]; lea rax, [rdi+0x3]; ret; 
0x0000000010d1f5: add r8d, eax; cmp rdi, rsi; ja short 0x000000000010d1e8; mov eax, r8d; ret; 
0x0000000005ea67: add r8d, eax; mov eax, r8d; ret; 
0x00000000190cd2: add r8d, r11d; nop [rax+rax]; lea rax, [rdi+0x4]; ret; 
0x00000000165dbe: add r9, r11; notrack jmp r9; 
0x0000000002c123: add r9b, [r8+0x39]; ret; 
0x0000000013c74c: add r9d, r8d; loopne 0x000000000013c754; shr rax, 0x4; and eax, 0x7f; ret; 
0x00000000168991: add rax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000054360: add rax, 0x1; cmp byte ptr [rax+0x1], 0x0; jne short 0x0000000000054360; pop rbx; ret; 
0x000000000a8830: add rax, 0x1; movsx edx, byte ptr [rdi+rax]; cmp edx, esi; je short 0x00000000000a8830; ret; 
0x000000000cfb20: add rax, 0x1; ret; 
0x000000000a2900: add rax, 0x1; test dl, dl; mov edx, 0x0; cmove rax, rdx; ret; 
0x00000000034579: add rax, 0x200; mov fs:[rdx], rax; ret; 
0x00000000188704: add rax, 0x20; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x00000000184649: add rax, 0x20; add rax, rdi; vzeroupper; ret; 
0x000000000cfb17: add rax, 0x2; ret; 
0x00000000178543: add rax, 0x2c5850f; add [rax], al; ret; 
0x0000000017c8f4: add rax, 0x364850f; add [rax], al; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x000000000cfb30: add rax, 0x3; ret; 
0x00000000188724: add rax, 0x40; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x00000000184669: add rax, 0x40; add rax, rdi; vzeroupper; ret; 
0x000000001574f4: add rax, 0x4; mov [rax-0x4], edx; mov [rdi+0x18], rax; mov eax, r8d; ret; 
0x000000000bcc62: add rax, 0x4; test edx, edx; jne short 0x00000000000bcc58; xor eax, eax; ret; 
0x00000000198a5c: add rax, 0x58d4800; ror dword ptr [rsi+0x5], 0x1; add [rax+0x39], cl; ret; 
0x00000000188770: add rax, 0x60; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x00000000184689: add rax, 0x60; add rax, rdi; vzeroupper; ret; 
0x000000000e4f80: add rax, 0x72f52011; cmp r8, rax; jne short 0x00000000000e4ffd; mov eax, 0x7d00; ret; 
0x000000001176a8: add rax, 0x8; mov [rip+0xd80dd], rax; mov rax, r8; add rsp, 0x8; ret; 
0x00000000117678: add rax, 0x8; mov [rip+0xd810d], rax; mov rax, r8; ret; 
0x000000000f1dde: add rax, 0xffffffff8b49fff3; adc [r8+0x39], r9b; ret far; 
0x0000000002443c: add rax, [0x0]; ret; 
0x0000000015f523: add rax, [r12+0x8]; mov r12d, 0x1; mov [r13+0x18], rax; lea rdi, [r15+0x908]; call qword ptr [r15+0xf10]; 
0x000000000d0ec4: add rax, [rdx+0x8]; lea rdx, [rip-0xdf]; cmove rax, rdx; add rsp, 0x58; ret; 
0x000000000d0fe4: add rax, [rdx+0x8]; lea rdx, [rip-0xef]; cmove rax, rdx; add rsp, 0x58; ret; 
0x00000000094be7: add rax, [rip+0x159c42]; mov rax, [rax+0x8]; test rax, rax; je short 0x0000000000094bf9; call rax; 
0x00000000094b77: add rax, [rip+0x159cb2]; mov rax, [rax+0x10]; test rax, rax; je short 0x0000000000094b89; call rax; 
0x00000000094aef: add rax, [rip+0x159d3a]; mov rax, [rax]; test rax, rax; je short 0x0000000000094b00; call rax; 
0x0000000002443b: add rax, fs:[0x0]; ret; 
0x000000000901d9: add rax, r10; notrack jmp rax; 
0x0000000009020b: add rax, r11; notrack jmp rax; 
0x0000000010910f: add rax, r12; notrack jmp rax; 
0x000000000740c3: add rax, r14; notrack jmp rax; 
0x000000000a8b1a: add rax, r8; notrack jmp rax; 
0x00000000184b70: add rax, r8; vzeroupper; ret; 
0x0000000007787f: add rax, rbx; jmp rax; 
0x00000000077a26: add rax, rbx; mov byte ptr [rbp-0x508], 0x20; mov r10, rdx; mov dword ptr [rbp-0x4f8], 0x1; jmp rax; 
0x00000000077f6e: add rax, rbx; mov dword ptr [rbp-0x4e0], 0x1; mov r10, rdx; jmp rax; 
0x00000000077bde: add rax, rbx; mov dword ptr [rbp-0x4e0], 0x1; mov r10, rdx; mov dword ptr [rbp-0x510], 0x1; jmp rax; 
0x00000000076d1a: add rax, rbx; mov dword ptr [rbp-0x510], 0x0; mov r10, rdx; mov dword ptr [rbp-0x4e0], 0x1; jmp rax; 
0x00000000078006: add rax, rbx; mov dword ptr [rbp-0x540], 0x0; mov r10, rdx; mov dword ptr [rbp-0x54c], 0x1; jmp rax; 
0x00000000188297: add rax, rcx; add rax, rdi; vzeroupper; ret; 
0x0000000006354c: add rax, rcx; notrack jmp rax; 
0x000000000abf68: add rax, rcx; ret; 
0x000000001837d5: add rax, rcx; sub rax, rdi; ret; 
0x0000000018cfac: add rax, rcx; sub rax, rdx; shr rax, 0x2; vzeroupper; ret; 
0x0000000018863c: add rax, rcx; sub rax, rdx; vzeroupper; ret; 
0x000000001844c5: add rax, rcx; vzeroupper; ret; 
0x00000000184b6d: add rax, rdi; add rax, r8; vzeroupper; ret; 
0x000000000abf65: add rax, rdi; add rax, rcx; ret; 
0x00000000188639: add rax, rdi; add rax, rcx; sub rax, rdx; vzeroupper; ret; 
0x000000001844c2: add rax, rdi; add rax, rcx; vzeroupper; ret; 
0x000000000ac799: add rax, rdi; add rax, rsi; ret; 
0x000000000a89c5: add rax, rdi; mov [rdi], dx; movzx edx, byte ptr [rsp-0x6]; mov [rdi+0x2], dl; ret; 
0x000000000a89e4: add rax, rdi; mov [rdi], edx; movzx edx, byte ptr [rsp-0xc]; mov [rdi+0x4], dl; ret; 
0x000000000a89fc: add rax, rdi; mov [rdi], edx; movzx edx, word ptr [rsp+0xc]; mov [rdi+0x4], dx; ret; 
0x00000000064626: add rax, rdi; notrack jmp rax; 
0x000000000a8998: add rax, rdi; ret; 
0x000000000ac6ab: add rax, rdi; ret; 
0x0000000018d064: add rax, rdi; sub rax, rdx; shr rax, 0x2; vzeroupper; ret; 
0x000000001886f4: add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x00000000184638: add rax, rdi; vzeroupper; ret; 
0x00000000074900: add rax, rdx; jmp rax; 
0x0000000007e5db: add rax, rdx; mov dword ptr [rbp-0x4d0], 0x1; mov r9, rsi; jmp rax; 
0x0000000007d40f: add rax, rdx; mov dword ptr [rbp-0x4d0], 0x1; mov r9, rsi; mov dword ptr [rbp-0x4f0], 0x0; jmp rax; 
0x0000000007da03: add rax, rdx; mov dword ptr [rbp-0x4d0], 0x1; mov r9, rsi; mov dword ptr [rbp-0x4f0], 0x1; jmp rax; 
0x0000000007e3a3: add rax, rdx; mov dword ptr [rbp-0x4e8], 0x1; mov r9, rsi; mov dword ptr [rbp-0x4f8], 0x20; jmp rax; 
0x0000000007e2b3: add rax, rdx; mov dword ptr [rbp-0x540], 0x1; mov r9, rsi; mov dword ptr [rbp-0x530], 0x0; jmp rax; 
0x00000000023e8d: add rax, rdx; notrack jmp rax; 
0x000000000b1d75: add rax, rdx; sub rax, rdi; ret; 
0x000000000cf87a: add rax, rdx; sub rax, rdi; shr rax, 0x2; ret; 
0x0000000006c90f: add rax, rsi; notrack jmp rax; 
0x000000000ac79c: add rax, rsi; ret; 
0x00000000149b34: add rbp, rax; sub edx, eax; mov rsi, rbp; call qword ptr [rbx+0x40]; 
0x00000000104de6: add rbx, [0x0]; mov r9, rbx; add r8, r15; call r13; 
0x00000000104de5: add rbx, fs:[0x0]; mov r9, rbx; add r8, r15; call r13; 
0x0000000014937d: add rbx, r14; sub edx, r14d; mov rsi, rbx; call qword ptr [r15+0x40]; 
0x000000001909e1: add rcx, 0x100; cmp rdx, rcx; jne short 0x00000000001909c6; vzeroupper; ret; 
0x0000000013c554: add rcx, 0x2; mov [r8], r11d; pop rbx; mov [r9], rcx; ret; 
0x000000000bc04a: add rcx, 0x40; cmp rdx, rcx; jne short 0x00000000000bc037; rep ret; 
0x0000000018bb1e: add rcx, 0x80; cmp rdx, rcx; jne short 0x000000000018bb0b; vzeroupper; ret; 
0x0000000017c8a6: add rcx, [rdi]; test [rdx-0x7ffffffd], esi; cmp [rcx], al; sbb rax, 0xffffffffffffffff; ret; 
0x0000000018d485: add rcx, r11; notrack jmp rcx; 
0x000000000a8985: add rcx, r9; notrack jmp rcx; 
0x00000000080eb2: add rcx, rdi; notrack jmp rcx; 
0x000000000bc113: add rcx, rsi; notrack jmp rcx; 
0x0000000014dae0: add rdi, 0x10; jmp rcx; 
0x000000000baacc: add rdi, 0x10; lea r11, [rip+0xf4a6d]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000ba13c: add rdi, 0x10; lea r11, [rip+0xf537d]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b9876: add rdi, 0x10; lea r11, [rip+0xf5bff]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b9856: add rdi, 0x10; lea r11, [rip+0xf5c1f]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b846c: add rdi, 0x10; lea r11, [rip+0xf6e6d]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8026: add rdi, 0x10; lea r11, [rip+0xf726f]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8006: add rdi, 0x10; lea r11, [rip+0xf728f]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6e2c: add rdi, 0x10; lea r11, [rip+0xf82d1]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000e820d: add rdi, 0x1; test al, al; jne short 0x00000000000e81c1; xor eax, eax; ret; 
0x00000000160195: add rdi, 0x1c; mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x000000000bab01: add rdi, 0x20; lea r11, [rip+0xf4a38]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000ba171: add rdi, 0x20; lea r11, [rip+0xf5348]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b84a1: add rdi, 0x20; lea r11, [rip+0xf6e38]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6e61: add rdi, 0x20; lea r11, [rip+0xf829c]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000148a4e: add rdi, 0x23b0; pop rbp; jmp rcx; 
0x000000000946b5: add rdi, 0x308; mov esi, 0x80; syscall; 
0x000000000ba9af: add rdi, 0x30; lea r11, [rip+0xf4b8a]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000ba03e: add rdi, 0x30; lea r11, [rip+0xf547b]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b836e: add rdi, 0x30; lea r11, [rip+0xf6f6b]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6d2e: add rdi, 0x30; lea r11, [rip+0xf83cf]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000150657: add rdi, 0x58; jmp rcx; 
0x0000000014fd17: add rdi, 0x68; jmp rcx; 
0x0000000014ceda: add rdi, 0xc8; jmp rcx; 
0x00000000194199: add rdi, r12; notrack jmp rdi; 
0x00000000048321: add rdi, rax; cmp rdi, r8; jb short 0x0000000000048305; xor eax, eax; ret; 
0x000000001971ef: add rdi, rbp; call r12; 
0x00000000031fe2: add rdi, rdi; jmp qword ptr [rsi+0x2e]; 
0x00000000165dbb: add rdi, rdx; add r9, r11; notrack jmp r9; 
0x0000000018f500: add rdi, rdx; lea r11, [rip+0x2e136]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018f486: add rdi, rdx; lea r11, [rip+0x2e1b0]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018f3f7: add rdi, rdx; lea r11, [rip+0x2e23f]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018f1ec: add rdi, rdx; lea r11, [rip+0x2e44a]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018f0ba: add rdi, rdx; lea r11, [rip+0x2e57c]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018eff4: add rdi, rdx; lea r11, [rip+0x2e642]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018ef76: add rdi, rdx; lea r11, [rip+0x2e6c0]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018eee1: add rdi, rdx; lea r11, [rip+0x2e755]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018ece4: add rdi, rdx; lea r11, [rip+0x2e952]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018ebb2: add rdi, rdx; lea r11, [rip+0x2ea84]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018eab5: add rdi, rdx; lea r11, [rip+0x2eb81]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018ded0: add rdi, rdx; lea r11, [rip+0x2f626]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018de56: add rdi, rdx; lea r11, [rip+0x2f6a0]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018ddc7: add rdi, rdx; lea r11, [rip+0x2f72f]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018dbbc: add rdi, rdx; lea r11, [rip+0x2f93a]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018da8a: add rdi, rdx; lea r11, [rip+0x2fa6c]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018d9c4: add rdi, rdx; lea r11, [rip+0x2fb32]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018d946: add rdi, rdx; lea r11, [rip+0x2fbb0]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018d8b1: add rdi, rdx; lea r11, [rip+0x2fc45]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018d6b4: add rdi, rdx; lea r11, [rip+0x2fe42]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018d582: add rdi, rdx; lea r11, [rip+0x2ff74]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018d477: add rdi, rdx; lea r11, [rip+0x3007f]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000016f86b: add rdi, rdx; lea r11, [rip+0x4e9cb]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016dfc6: add rdi, rdx; lea r11, [rip+0x50270]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016de5f: add rdi, rdx; lea r11, [rip+0x503d7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016cd57: add rdi, rdx; lea r11, [rip+0x50fdf]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b139: add rdi, rdx; lea r11, [rip+0x527fd]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b4c6: add rdi, rdx; lea r11, [rip+0x52870]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b348: add rdi, rdx; lea r11, [rip+0x529ee]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016898a: add rdi, rdx; lea r11, [rip+0x54fac]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001688c5: add rdi, rdx; lea r11, [rip+0x55071]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165faa: add rdi, rdx; lea r11, [rip+0x577cc]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165ee5: add rdi, rdx; lea r11, [rip+0x57891]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000013c537: add rdi, rdx; mov [r9], rdi; ret; 
0x00000000093581: add rdx, 0x60; mov rax, [rdi]; mov [rdx], rax; ret; 
0x0000000002415b: add rdx, 0x988; cmp r15, rdx; je short 0x0000000000024177; call rax; 
0x00000000193f40: add rdx, r10; notrack jmp rdx; 
0x00000000074057: add rdx, r15; call qword ptr [rax+r9*8]; 
0x00000000056b21: add rdx, r8; mov rax, rdx; pop rbx; ret; 
0x000000000d8342: add rdx, r9; notrack jmp rdx; 
0x00000000120e34: add rdx, rax; cmp rcx, rdx; mov edx, 0x0; cmovb rax, rdx; ret; 
0x00000000184a01: add rdx, rax; jl 0x0000000000184af0; add rax, rdi; vzeroupper; ret; 
0x000000000ac6a6: add rdx, rax; jl short 0x00000000000ac710; add rax, rdi; ret; 
0x000000000ac6b7: add rdx, rax; jl short 0x00000000000ac710; lea rax, [rdi+rax+0x10]; ret; 
0x000000000ac6d7: add rdx, rax; jl short 0x00000000000ac710; lea rax, [rdi+rax+0x20]; ret; 
0x000000000ac6f7: add rdx, rax; jl short 0x00000000000ac710; lea rax, [rdi+rax+0x30]; ret; 
0x0000000014f758: add rdx, rax; notrack jmp rdx; 
0x00000000080f16: add rdx, rcx; notrack jmp rdx; 
0x00000000052d7b: add rdx, rdi; notrack jmp rdx; 
0x000000000551bf: add rdx, rsi; cmp ecx, 0x2f; notrack jmp rdx; 
0x000000000407ad: add rdx, rsi; notrack jmp rdx; 
0x0000000014ed68: add rsi, 0x38; jmp qword ptr [rax+0x18]; 
0x00000000157439: add rsi, r8; mov [rdi+0x18], rsi; mov rax, r8; ret; 
0x000000001491be: add rsi, rax; cmp rsi, [rdx+0x28]; ja short 0x00000000001491b0; mov [rdx+0x20], rsi; ret; 
0x000000000bac39: add rsi, rcx; lea r11, [rip+0xf4981]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000bac19: add rsi, rcx; lea r11, [rip+0xf49a1]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000babf0: add rsi, rcx; lea r11, [rip+0xf49ca]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8d79: add rsi, rcx; lea r11, [rip+0xf666d]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8d59: add rsi, rcx; lea r11, [rip+0xf668d]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8d30: add rsi, rcx; lea r11, [rip+0xf66b6]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b7699: add rsi, rcx; lea r11, [rip+0xf7b6d]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b7679: add rsi, rcx; lea r11, [rip+0xf7b8d]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b7650: add rsi, rcx; lea r11, [rip+0xf7bb6]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000165db8: add rsi, rdx; add rdi, rdx; add r9, r11; notrack jmp r9; 
0x0000000016f603: add rsi, rdx; lea r11, [rip+0x4ec33]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016f483: add rsi, rdx; lea r11, [rip+0x4edb3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016f303: add rsi, rdx; lea r11, [rip+0x4ef33]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016f184: add rsi, rdx; lea r11, [rip+0x4f0b2]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016f003: add rsi, rdx; lea r11, [rip+0x4f233]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016ee83: add rsi, rdx; lea r11, [rip+0x4f3b3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016ed03: add rsi, rdx; lea r11, [rip+0x4f533]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016eb83: add rsi, rdx; lea r11, [rip+0x4f6b3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016ea03: add rsi, rdx; lea r11, [rip+0x4f833]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016e883: add rsi, rdx; lea r11, [rip+0x4f9b3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016e703: add rsi, rdx; lea r11, [rip+0x4fb33]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016e583: add rsi, rdx; lea r11, [rip+0x4fcb3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016e403: add rsi, rdx; lea r11, [rip+0x4fe33]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016e283: add rsi, rdx; lea r11, [rip+0x4ffb3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016e103: add rsi, rdx; lea r11, [rip+0x50133]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016cb03: add rsi, rdx; lea r11, [rip+0x51233]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016c983: add rsi, rdx; lea r11, [rip+0x513b3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016c803: add rsi, rdx; lea r11, [rip+0x51533]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016c684: add rsi, rdx; lea r11, [rip+0x516b2]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016c503: add rsi, rdx; lea r11, [rip+0x51833]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016c383: add rsi, rdx; lea r11, [rip+0x519b3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016c203: add rsi, rdx; lea r11, [rip+0x51b33]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016c083: add rsi, rdx; lea r11, [rip+0x51cb3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016bf03: add rsi, rdx; lea r11, [rip+0x51e33]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016bd83: add rsi, rdx; lea r11, [rip+0x51fb3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016bc03: add rsi, rdx; lea r11, [rip+0x52133]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016ba83: add rsi, rdx; lea r11, [rip+0x522b3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b903: add rsi, rdx; lea r11, [rip+0x52433]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b783: add rsi, rdx; lea r11, [rip+0x525b3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b603: add rsi, rdx; lea r11, [rip+0x52733]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169fb1: add rsi, rdx; lea r11, [rip+0x53985]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169e61: add rsi, rdx; lea r11, [rip+0x53ad5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169d11: add rsi, rdx; lea r11, [rip+0x53c25]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169bc1: add rsi, rdx; lea r11, [rip+0x53d75]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169a71: add rsi, rdx; lea r11, [rip+0x53ec5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169921: add rsi, rdx; lea r11, [rip+0x54015]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001697d1: add rsi, rdx; lea r11, [rip+0x54165]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169531: add rsi, rdx; lea r11, [rip+0x54405]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001693e1: add rsi, rdx; lea r11, [rip+0x54555]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169291: add rsi, rdx; lea r11, [rip+0x546a5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169141: add rsi, rdx; lea r11, [rip+0x547f5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168ff1: add rsi, rdx; lea r11, [rip+0x54945]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168ea1: add rsi, rdx; lea r11, [rip+0x54a95]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168d51: add rsi, rdx; lea r11, [rip+0x54be5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168a89: add rsi, rdx; lea r11, [rip+0x54ead]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001675d1: add rsi, rdx; lea r11, [rip+0x561a5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000167481: add rsi, rdx; lea r11, [rip+0x562f5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000167331: add rsi, rdx; lea r11, [rip+0x56445]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001671e1: add rsi, rdx; lea r11, [rip+0x56595]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000167091: add rsi, rdx; lea r11, [rip+0x566e5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166f41: add rsi, rdx; lea r11, [rip+0x56835]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166df1: add rsi, rdx; lea r11, [rip+0x56985]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166b51: add rsi, rdx; lea r11, [rip+0x56c25]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166a01: add rsi, rdx; lea r11, [rip+0x56d75]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001668b1: add rsi, rdx; lea r11, [rip+0x56ec5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166761: add rsi, rdx; lea r11, [rip+0x57015]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166611: add rsi, rdx; lea r11, [rip+0x57165]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001664c1: add rsi, rdx; lea r11, [rip+0x572b5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166371: add rsi, rdx; lea r11, [rip+0x57405]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001660a9: add rsi, rdx; lea r11, [rip+0x576cd]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000bb94c: add rsp, 0x100; sub rax, rdx; ret; 
0x000000000bb9fc: add rsp, 0x100; xor edx, edx; or cl, cl; cmove rax, rdx; ret; 
0x00000000062875: add rsp, 0x1010; pop rbp; ret; 
0x00000000062680: add rsp, 0x1018; mov rax, r12; pop rbp; pop r12; ret; 
0x0000000009d512: add rsp, 0x10; mov eax, r12d; pop r12; ret; 
0x000000001522a5: add rsp, 0x10; mov eax, r8d; pop r12; ret; 
0x0000000015caf2: add rsp, 0x10; mov eax, r8d; pop rbp; ret; 
0x000000000995cf: add rsp, 0x10; mov rax, r8; pop rbp; ret; 
0x000000000993d8: add rsp, 0x10; mov rax, r8; pop rbx; ret; 
0x0000000008e009: add rsp, 0x10; movzx eax, al; pop rbx; neg eax; ret; 
0x000000001448df: add rsp, 0x10; pop r12; ret; 
0x0000000002ff37: add rsp, 0x10; pop rbp; pop r12; pop r13; ret; 
0x000000000960f0: add rsp, 0x10; pop rbp; ret; 
0x00000000091a54: add rsp, 0x10; pop rbx; jmp rax; 
0x00000000062595: add rsp, 0x10; pop rbx; pop r12; pop r13; ret; 
0x00000000081154: add rsp, 0x10; pop rbx; pop rbp; pop r12; ret; 
0x000000000428c4: add rsp, 0x10; pop rbx; ret; 
0x0000000016086e: add rsp, 0x110; mov eax, r12d; pop r12; ret; 
0x0000000015258c: add rsp, 0x110; pop rbx; pop rbp; pop r12; ret; 
0x00000000043051: add rsp, 0x118; ret; 
0x0000000010f336: add rsp, 0x130; pop rbp; ret; 
0x00000000043918: add rsp, 0x140; mov eax, r8d; pop rbx; ret; 
0x00000000042f21: add rsp, 0x148; ret; 
0x0000000009a79d: add rsp, 0x18; jmp rax; 
0x00000000147015: add rsp, 0x18; mov eax, r12d; pop rbx; pop r12; ret; 
0x00000000046e9b: add rsp, 0x18; mov eax, r8d; pop rbx; pop rbp; ret; 
0x0000000009cfaa: add rsp, 0x18; mov rax, r8; pop rbx; pop r12; ret; 
0x00000000062e59: add rsp, 0x18; movzx eax, al; neg eax; ret; 
0x000000000476f1: add rsp, 0x18; pop rbp; mov rax, r12; pop r12; ret; 
0x00000000042a25: add rsp, 0x18; pop rbx; pop rbp; ret; 
0x00000000034a1a: add rsp, 0x18; ret; 
0x0000000015d0e2: add rsp, 0x190; mov rax, r8; pop rbp; ret; 
0x00000000114ef2: add rsp, 0x190; pop rbx; pop rbp; pop r12; ret; 
0x0000000010d64d: add rsp, 0x1a0; mov eax, r8d; pop rbx; ret; 
0x00000000062382: add rsp, 0x1d0; pop rbp; pop r12; pop r13; ret; 
0x00000000094827: add rsp, 0x20; and eax, 0xc; pop rbx; ret; 
0x00000000137f76: add rsp, 0x20; mov eax, r8d; pop rbp; ret; 
0x000000000dfe2e: add rsp, 0x20; mov eax, r8d; pop rbx; ret; 
0x00000000042ae0: add rsp, 0x20; movdqa xmm0, xmm2; pop rbp; ret; 
0x00000000042b71: add rsp, 0x20; pop rbp; ret; 
0x000000000921ae: add rsp, 0x20; pop rbx; jmp rax; 
0x0000000002f85c: add rsp, 0x20; pop rbx; pop rbp; pop r12; ret; 
0x000000000ca0e5: add rsp, 0x20; pop rbx; ret; 
0x000000000d4318: add rsp, 0x20; xor eax, eax; pop rbx; ret; 
0x00000000092660: add rsp, 0x20; xor edx, edx; pop rbx; jmp rax; 
0x00000000152ba8: add rsp, 0x28; mov eax, r12d; pop rbp; pop r12; ret; 
0x000000000818a7: add rsp, 0x28; mov eax, r8d; pop rbx; pop rbp; ret; 
0x000000000846b5: add rsp, 0x28; mov edx, r12d; pop rbx; pop r12; jmp rax; 
0x0000000008abcd: add rsp, 0x28; mov rax, r12; pop rbp; pop r12; ret; 
0x0000000006275a: add rsp, 0x28; mov rax, r12; pop rbx; pop r12; ret; 
0x000000001523e4: add rsp, 0x28; pop rbx; pop r12; ret; 
0x0000000005b08c: add rsp, 0x28; pop rbx; pop rbp; ret; 
0x00000000047475: add rsp, 0x28; ret; 
0x00000000024418: add rsp, 0x28; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000086bd7: add rsp, 0x2c0; pop rbp; pop r12; pop r13; ret; 
0x00000000196f87: add rsp, 0x30; mov rax, r12; pop r12; ret; 
0x0000000011308c: add rsp, 0x30; pop rbp; ret; 
0x00000000091288: add rsp, 0x30; pop rbx; pop rbp; pop r12; ret; 
0x00000000196b6e: add rsp, 0x30; pop rbx; pop rbp; pop r14; ret; 
0x0000000010e63d: add rsp, 0x30; pop rbx; ret; 
0x000000000244bb: add rsp, 0x38; pop rbx; pop rbp; ret; 
0x0000000005b8a7: add rsp, 0x38; ret; 
0x00000000112a87: add rsp, 0x40; pop r12; ret; 
0x00000000099230: add rsp, 0x40; pop rbp; ret; 
0x000000000439c8: add rsp, 0x40; pop rbx; ret; 
0x000000001229ab: add rsp, 0x40; ret; 
0x00000000062412: add rsp, 0x410; pop rbp; pop r12; pop r13; ret; 
0x0000000011bffd: add rsp, 0x418; ret; 
0x0000000005b5e5: add rsp, 0x450; pop rbp; ret; 
0x00000000151eb3: add rsp, 0x48; pop rbx; pop rbp; ret; 
0x0000000008dc0a: add rsp, 0x48; ret; 
0x0000000014e7be: add rsp, 0x50; pop rbx; pop rbp; pop r12; ret; 
0x0000000015c4d0: add rsp, 0x520; mov rax, r12; pop r12; ret; 
0x0000000013deb5: add rsp, 0x58; pop rbx; pop rbp; ret; 
0x000000000d0ed3: add rsp, 0x58; ret; 
0x0000000011393e: add rsp, 0x60; mov eax, r11d; pop rbx; ret; 
0x00000000113eb7: add rsp, 0x60; mov rax, r12; pop r12; ret; 
0x000000001150c7: add rsp, 0x60; pop rbp; ret; 
0x0000000010dd8b: add rsp, 0x68; pop rbp; pop r12; ret; 
0x0000000010111c: add rsp, 0x68; pop rbx; pop rbp; ret; 
0x0000000010e4fc: add rsp, 0x68; ret; 
0x000000000bd102: add rsp, 0x70; pop rbx; pop rbp; pop r12; ret; 
0x0000000010df06: add rsp, 0x78; ret; 
0x0000000015e24e: add rsp, 0x88; mov eax, r12d; pop rbp; pop r12; ret; 
0x0000000011cb4c: add rsp, 0x88; pop rbx; pop rbp; ret; 
0x000000000ee354: add rsp, 0x8; add eax, eax; pop rbx; pop rbp; ret; 
0x0000000013c420: add rsp, 0x8; lea eax, [rbx+rbp]; pop rbx; pop rbp; ret; 
0x000000001462ce: add rsp, 0x8; lea rax, [rip+0xaa827]; ret; 
0x000000001468b0: add rsp, 0x8; mov eax, 0x10; pop rbx; pop rbp; ret; 
0x00000000155b40: add rsp, 0x8; mov eax, 0x1; pop rbp; pop r12; ret; 
0x000000000832f6: add rsp, 0x8; mov eax, 0x1; pop rbx; pop rbp; ret; 
0x00000000136e96: add rsp, 0x8; mov eax, 0xa; pop rbx; pop rbp; ret; 
0x00000000083318: add rsp, 0x8; mov eax, 0xffffffff; pop rbx; pop rbp; ret; 
0x00000000089e2a: add rsp, 0x8; mov eax, ebx; pop rbx; pop rbp; ret; 
0x0000000014dd09: add rsp, 0x8; mov eax, r12d; pop rbp; pop r12; ret; 
0x0000000005b960: add rsp, 0x8; mov eax, r12d; pop rbx; pop r12; ret; 
0x00000000082433: add rsp, 0x8; mov eax, r8d; pop rbx; pop rbp; ret; 
0x000000001173ae: add rsp, 0x8; mov eax, r8d; ret; 
0x00000000102848: add rsp, 0x8; mov eax, r9d; ret; 
0x000000000477ce: add rsp, 0x8; mov rax, r12; pop rbp; pop r12; ret; 
0x000000000a0a70: add rsp, 0x8; mov rax, r12; pop rbx; pop r12; ret; 
0x0000000009fa14: add rsp, 0x8; mov rax, r13; pop r12; pop r13; ret; 
0x000000000831e0: add rsp, 0x8; mov rax, r8; pop rbx; pop rbp; ret; 
0x00000000156592: add rsp, 0x8; mov rdi, rbp; pop rbp; pop r12; jmp rax; 
0x00000000087748: add rsp, 0x8; mov rdi, rbp; pop rbx; pop rbp; jmp rax; 
0x0000000014dd42: add rsp, 0x8; movzx eax, al; add eax, 0x1; ret; 
0x00000000024708: add rsp, 0x8; movzx eax, al; neg eax; ret; 
0x00000000148b2f: add rsp, 0x8; movzx eax, al; pop rbp; pop r12; ret; 
0x00000000149ff6: add rsp, 0x8; movzx eax, al; pop rbx; pop rbp; ret; 
0x000000000522e5: add rsp, 0x8; movzx eax, al; ret; 
0x0000000014112d: add rsp, 0x8; movzx eax, ax; ret; 
0x00000000157c25: add rsp, 0x8; not eax; shr eax, 0x1f; ret; 
0x00000000155b35: add rsp, 0x8; pop rbp; pop r12; jmp rax; 
0x00000000085449: add rsp, 0x8; pop rbp; pop r12; ret; 
0x00000000148a06: add rsp, 0x8; pop rbx; pop rbp; jmp rcx; 
0x0000000008b516: add rsp, 0x8; pop rbx; pop rbp; mov eax, r8d; ret; 
0x00000000024e38: add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000012b6b1: add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000026fa8: add rsp, 0x8; ret; 
0x0000000009f906: add rsp, 0x8; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000162cb4: add rsp, 0x8; sar eax, 0x1f; ret; 
0x0000000012b9cb: add rsp, 0x8; xor eax, eax; pop rbp; pop r12; ret; 
0x00000000093612: add rsp, 0x8; xor eax, eax; pop rbx; pop rbp; ret; 
0x00000000142ffc: add rsp, 0x90; pop rbx; pop rbp; pop r12; ret; 
0x0000000004357c: add rsp, 0x90; pop rbx; pop rbp; pop r12; ret; 
0x00000000157a3b: add rsp, 0x90; pop rbx; ret; 
0x000000000436f3: add rsp, 0x98; pop rbp; pop r12; ret; 
0x00000000024272: add rsp, 0x98; ret; 
0x00000000043abc: add rsp, 0xa0; pop rbx; pop rbp; pop r12; ret; 
0x00000000120eaf: add rsp, 0xa0; pop rbx; ret; 
0x000000000de775: add rsp, 0xa8; pop rbp; pop r12; ret; 
0x00000000044454: add rsp, 0xa8; ret; 
0x0000000002f72e: add rsp, 0xb8; mov eax, r8d; pop rbp; pop r12; ret; 
0x000000000e49ea: add rsp, 0xb8; pop rbx; pop rbp; ret; 
0x00000000052c37: add rsp, 0xd8; ret; 
0x000000000d11cd: add rsp, 0xe0; mov eax, r8d; pop rbx; ret; 
0x000000000ddc87: add rsp, 0xe0; pop rbx; ret; 
0x00000000081a6c: add rsp, 0xe8; mov eax, r8d; pop rbx; pop rbp; ret; 
0x000000000e69a6: add sil, sil; test [rbx+rdi*8-0x1], ecx; call qword ptr [rax]; 
0x00000000121ffb: add word ptr [rax], 0x1; ret; 
0x00000000121d35: add word ptr [rdx+rax*2], 0x1; ret; 
0x000000000421ab: addps xmm0, xmm0; mov [rdi], ecx; ret; 
0x0000000004221f: addps xmm0, xmm0; ret; 
0x00000000042131: addps xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x00000000166351: addr32 loopne 0x0000000000166363; sub [rdi-0x10], ebp; notrack jmp r9; 
0x000000001664a1: addr32 loopne 0x00000000001664b3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x000000001665f1: addr32 loopne 0x0000000000166603; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000166741: addr32 loopne 0x0000000000166753; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000166891: addr32 loopne 0x00000000001668a3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x000000001669e1: addr32 loopne 0x00000000001669f3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000166b31: addr32 loopne 0x0000000000166b43; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000166c7f: addr32 loopne 0x0000000000166c91; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000166dd1: addr32 loopne 0x0000000000166de3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000166f21: addr32 loopne 0x0000000000166f33; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000167071: addr32 loopne 0x0000000000167083; sub [rdi-0x10], ebp; notrack jmp r9; 
0x000000001671c1: addr32 loopne 0x00000000001671d3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000167311: addr32 loopne 0x0000000000167323; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000167461: addr32 loopne 0x0000000000167473; sub [rdi-0x10], ebp; notrack jmp r9; 
0x000000001675b1: addr32 loopne 0x00000000001675c3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000168d31: addr32 loopne 0x0000000000168d43; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000168e81: addr32 loopne 0x0000000000168e93; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000168fd1: addr32 loopne 0x0000000000168fe3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000169121: addr32 loopne 0x0000000000169133; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000169271: addr32 loopne 0x0000000000169283; sub [rdi-0x10], ebp; notrack jmp r9; 
0x000000001693c1: addr32 loopne 0x00000000001693d3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000169511: addr32 loopne 0x0000000000169523; sub [rdi-0x10], ebp; notrack jmp r9; 
0x0000000016965f: addr32 loopne 0x0000000000169671; sub [rdi-0x10], ebp; notrack jmp r9; 
0x000000001697b1: addr32 loopne 0x00000000001697c3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000169901: addr32 loopne 0x0000000000169913; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000169a51: addr32 loopne 0x0000000000169a63; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000169ba1: addr32 loopne 0x0000000000169bb3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000169cf1: addr32 loopne 0x0000000000169d03; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000169e41: addr32 loopne 0x0000000000169e53; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000169f91: addr32 loopne 0x0000000000169fa3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x000000000421aa: addsd xmm0, xmm0; mov [rdi], ecx; ret; 
0x0000000004221e: addsd xmm0, xmm0; ret; 
0x00000000042130: addsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x00000000042490: addss xmm0, xmm0; ret; 
0x00000000146a21: and [r11+0x22c093], cl; add [rcx+rcx*4-0xa], cl; add qword ptr [rbx+0x22a8], 0x1; mov rdi, rbp; call qword ptr [rax+0x18]; 
0x000000000d12bc: and [r11+0x5d], r11b; pop r12; pop r13; ret; 
0x000000000896d9: and [r11+rcx*4+0x6d], r9b; sbb [rax-0x77], cl; ret far; 
0x000000000ac651: and [r14+0xf], r12b; xlat [rbx]; rol dword ptr [rbp+0x317575c0], 0xc0; ret; 
0x0000000010c333: and [r15], r9b; adc [rdi+0x30], eax; movups [rdi+0x40], xmm0; ret; 
0x00000000089707: and [r8+0x1], r9b; ret; 
0x0000000011d602: and [r8+0x2], dil; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000146b84: and [r8-0x75], cl; cmp [rax-0x7b], cl; shl byte ptr [rbp+rax+0x48], 0x89; out dx, eax; call rax; 
0x00000000146b74: and [r8-0x77], cl; out dx, eax; call qword ptr [rax+0x20]; 
0x00000000146976: and [r8-0x77], cl; out dx, eax; lea r15, [rsp+0x50]; call qword ptr [rax+0x20]; 
0x00000000031fa7: and [r8-0x77], r9b; std; test rax, rax; je short 0x0000000000031fb3; call rax; 
0x000000000bb306: and [r8], r14b; in eax, dx; mov [rdi+0x21], ch; ret; 
0x00000000146932: and [r9+r9*4-0x12], cl; mov rdi, rbp; call qword ptr [rax+0x8]; 
0x000000000919a6: and [r9], sil; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x5d], bl; ret; 
0x00000000146a0e: and [r9], sil; test byte ptr [rax-0x77], 0xef; mov dword ptr [rbx+0x18], 0x0; call qword ptr [rax+0x28]; 
0x0000000014698f: and [r9], sil; test byte ptr [rax-0x77], 0xef; mov dword ptr [rbx+0x18], 0x1; call qword ptr [rax+0x28]; 
0x00000000115105: and [rax+0x10e], bh; mov rsi, [rsp+0x18]; mov edi, [rsp+0x14]; syscall; 
0x000000001506f5: and [rax+0x1], bh; movups [rdx], xmm3; ret; 
0x00000000188707: and [rax+0x1], cl; clc; sub rax, rdx; vzeroupper; ret; 
0x0000000018464c: and [rax+0x1], cl; clc; vzeroupper; ret; 
0x00000000089708: and [rax+0x1], cl; ret; 
0x0000000011ef31: and [rax+0x21], cl; clc; or rax, rsi; ret; 
0x0000000004570e: and [rax+0x24048b48], dl; mov rdx, r14; mov rsi, r13; mov rdi, r12; call rax; 
0x0000000011d603: and [rax+0x2], bh; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000127c15: and [rax+0x411f2444], cl; call qword ptr [rsp+0x28]; 
0x000000001138d5: and [rax+0x44232444], ecx; mov eax, eax; movups [rsp+0x11], xmm0; syscall; 
0x0000000011594b: and [rax+0x65], bh; syscall; 
0x0000000004735e: and [rax+0x9], cl; clc; ret; 
0x00000000197179: and [rax+rdx-0xd], dh; movups xmm0, [rip+0x261fc]; divss xmm0, [rip+0x27508]; ret; 
0x0000000008e692: and [rax-0x1], bh; pop rbx; ret; 
0x0000000011364b: and [rax-0x2708fff3], ecx; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000077b91: and [rax-0x68], cl; movzx eax, byte ptr [r11+rax]; movsxd rax, [rdi+rax*4]; add rax, rbx; jmp rax; 
0x00000000077b33: and [rax-0x68], cl; movzx eax, byte ptr [r11+rax]; movsxd rax, [rsi+rax*4]; add rax, rbx; jmp rax; 
0x000000000d015f: and [rax-0x73], cl; add eax, 0x11ef39; add rsp, 0x8; ret; 
0x000000000b7b45: and [rax-0x73], cl; jg short 0x00000000000b7b6a; jne 0x00000000000b7fa0; ret; 
0x000000000b92d9: and [rax-0x73], cl; jg short 0x00000000000b92fe; jne 0x00000000000b97f0; ret; 
0x00000000146b85: and [rax-0x75], cl; cmp [rax-0x7b], cl; shl byte ptr [rbp+rax+0x48], 0x89; out dx, eax; call rax; 
0x000000000284b6: and [rax-0x75], cl; je short 0x00000000000284df; push rax; mov rdi, [rsp+0x58]; call rbx; 
0x00000000029752: and [rax-0x75], cl; je short 0x000000000002977b; push rax; mov rdi, [rsp+0x48]; call r13; 
0x0000000002ddb6: and [rax-0x75], cl; je short 0x000000000002dddf; pop rax; mov rdi, [rsp+0x50]; call rbx; 
0x00000000152490: and [rax-0x75], cl; jge short 0x0000000000152495; mov rax, [rdi+0x8]; call qword ptr [rax+0x20]; 
0x00000000146da2: and [rax-0x75], cl; push rsp; and al, 0x18; mov rsi, [rsp+0x10]; call qword ptr [rax]; 
0x000000000df029: and [rax-0x75], cl; push rsp; and al, 0x28; mov rax, [rsp+0x18]; call rax; 
0x0000000011a01e: and [rax-0x75], ecx; xor ecx, [rcx-0x77]; fisttp qword ptr [rax-0x77], st; out dx, eax; call r12; 
0x00000000146b75: and [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x20]; 
0x00000000146977: and [rax-0x77], cl; out dx, eax; lea r15, [rsp+0x50]; call qword ptr [rax+0x20]; 
0x000000001476e9: and [rax-0x77], cl; out dx, eax; mov r12d, eax; xor eax, eax; call qword ptr [rbx+0x28]; 
0x000000000caa16: and [rax-0x77], cl; out dx, eax; mov rsi, [rsp+0x18]; call rbx; 
0x00000000155e77: and [rax-0x77], cl; push rsp; and al, 0x8; call qword ptr [rax+0x8]; 
0x00000000025114: and [rax-0x77], cl; ret; 
0x00000000031fa8: and [rax-0x77], cl; std; test rax, rax; je short 0x0000000000031fb3; call rax; 
0x000000000dd4e9: and [rax-0x7d], cl; ret; 
0x000000000d4d06: and [rax-0x80], al; call qword ptr [rax]; 
0x0000000006e438: and [rax], al; add [rax-0x7d], cl; ret; 
0x000000000e509d: and [rax], al; add [rax], al; cmove rax, rdx; ret; 
0x000000000e516b: and [rax], al; add [rax], al; cmovne rax, rdx; ret; 
0x0000000007d244: and [rax], al; add [rax], al; jmp rax; 
0x00000000148326: and [rax], al; add [rax], al; mov rdi, rbp; call qword ptr [rax+0x30]; 
0x000000000bc1fb: and [rax], al; add [rax], al; pop rbx; ret; 
0x0000000010e8c5: and [rax], al; add [rax], al; syscall; 
0x000000000af40e: and [rax], al; add [rbp-0x77], cl; ret far; 
0x000000000b8fcc: and [rax], cl; add [rax], al; ret; 
0x000000000bb307: and [rax], dh; in eax, dx; mov [rdi+0x21], ch; ret; 
0x0000000010e8f5: and [rax], eax; add [rax], al; syscall; 
0x00000000172e1e: and [rax], eax; add [rbp-0x77], cl; ret far; 
0x000000000257d0: and [rbp+rcx*4+0x60], ecx; add eax, ebp; ret far; 
0x000000000a8977: and [rbp+rcx*4+0xd], cl; sbb eax, 0x89001065; ror dword ptr [rcx+0x63], 0xc; mov [rcx+rax-0x37], ecx; notrack jmp rcx; 
0x0000000018c22d: and [rbp-0x27], dh; vzeroupper; ret; 
0x0000000019730b: and [rbp-0x7b], cl; test byte ptr [rdi], 0x84; ret far; 
0x00000000146a22: and [rbx+0x22c093], cl; add [rcx+rcx*4-0xa], cl; add qword ptr [rbx+0x22a8], 0x1; mov rdi, rbp; call qword ptr [rax+0x18]; 
0x000000001133d8: and [rbx+0x2a7409fe], al; mov eax, 0x48; syscall; 
0x000000000d1a37: and [rbx+0x5d], bl; pop r12; pop r13; pop r14; ret; 
0x000000000d12bd: and [rbx+0x5d], bl; pop r12; pop r13; ret; 
0x0000000002f85f: and [rbx+0x5d], bl; pop r12; ret; 
0x00000000080e0c: and [rbx+0xe7729f8], al; movsxd rax, [rdi+rax*4]; add rax, rdi; notrack jmp rax; 
0x000000000896da: and [rbx+rcx*4+0x6d], cl; sbb [rax-0x77], cl; ret far; 
0x00000000042de0: and [rbx+rcx*4+0x7f], cl; sub [rcx-0x3b76b310], cl; mov rbp, r9; nop; jmp rdx; 
0x0000000018c3c6: and [rbx], bh; cmp r12b, [rax]; jne 0x000000000018c209; vzeroupper; ret; 
0x0000000018c3c8: and [rbx], bh; cmp r12b, [rax]; jne 0x000000000018c209; vzeroupper; ret; 
0x0000000005f0bc: and [rcx+0x9], cl; ret; 
0x0000000011eeb3: and [rcx+0xfffe2], al; add [rip-0x1000], ah; or eax, edx; ret; 
0x00000000097914: and [rcx+rcx*4+0x44], cl; and al, 0x18; call rax; 
0x0000000011f0c6: and [rcx+rcx*4+0x4c], cl; and al, 0x28; movaps [rsp+0x10], xmm0; syscall; 
0x0000000007b316: and [rcx+rcx*4-0x11], cl; sub rdx, rsi; sar rdx, 0x2; call qword ptr [r12+0x38]; 
0x00000000146933: and [rcx+rcx*4-0x12], cl; mov rdi, rbp; call qword ptr [rax+0x8]; 
0x00000000149eec: and [rcx+rcx*4-0x17], cl; mov rdx, r12; mov rsi, rbp; mov rdi, rbx; call rax; 
0x0000000014d40d: and [rcx+rcx*4-0x19], cl; call rdx; 
0x00000000074a9d: and [rcx+rcx*4-0x1], cl; sub rdx, rsi; call qword ptr [rbx+0x38]; 
0x0000000011baa7: and [rcx+rcx*4-0x1a], cl; mov rdi, r15; call r14; 
0x000000000df3d3: and [rcx+rcx*4-0x20], al; pop rbx; pop rbp; pop r12; ret; 
0x00000000082cdb: and [rcx+rcx*4-0x20], cl; pop rbp; pop r12; pop r13; ret; 
0x00000000041272: and [rcx+rcx*4-0x28], cl; ret; 
0x00000000137f79: and [rcx+rcx*4-0x40], al; pop rbp; ret; 
0x000000000dfe31: and [rcx+rcx*4-0x40], al; pop rbx; ret; 
0x0000000013546b: and [rcx-0x16fbdbbc], cl; ret far; 
0x000000001491ba: and [rcx-0x39feb70a], cl; cmp rsi, [rdx+0x28]; ja short 0x00000000001491b0; mov [rdx+0x20], rsi; ret; 
0x000000000ac8ce: and [rcx-0x77], ecx; ret; 
0x00000000053ce3: and [rcx-0x7d], cl; ret; 
0x00000000120b14: and [rcx], al; add [rax], al; syscall; 
0x000000000e2f66: and [rcx], al; mov eax, 0x38; syscall; 
0x000000000ec9c8: and [rcx], bh; push rbp; sbb [rdx+rdx*2-0x73], dh; add [rax-0x7d], ecx; ret; 
0x000000000919a7: and [rcx], dh; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x5d], bl; ret; 
0x00000000144bf9: and [rcx], dh; ror byte ptr [rcx+rcx*4-0xa], cl; mov rdi, r15; mov [rsp+0x8], rcx; call rbp; 
0x00000000146a0f: and [rcx], dh; test byte ptr [rax-0x77], 0xef; mov dword ptr [rbx+0x18], 0x0; call qword ptr [rax+0x28]; 
0x00000000146990: and [rcx], dh; test byte ptr [rax-0x77], 0xef; mov dword ptr [rbx+0x18], 0x1; call qword ptr [rax+0x28]; 
0x000000000df41b: and [rcx], dl; add [rbp-0x47d18a40], al; je short 0x00000000000df425; add [rax], al; syscall; 
0x0000000011f318: and [rcx], eax; add [rax], al; mov edx, 0x8; syscall; 
0x0000000010ab14: and [rdi+0x15], esi; movzx eax, al; movsxd rax, [r12+rax*4]; add rax, r12; notrack jmp rax; 
0x000000000bbfc5: and [rdi+0xb], dh; movdqu [rdi+rdx-0x10], xmm0; movdqu [rdi], xmm0; ret; 
0x000000001609aa: and [rdi+rdx*8], eax; xor eax, eax; ret; 
0x000000001609a9: and [rdi+rdx*8], rax; xor eax, eax; ret; 
0x000000001456df: and [rdi], al; add al, ch; fld1; out dx, al; jmp qword ptr [rsi+0xf]; 
0x0000000010c334: and [rdi], cl; adc [rdi+0x30], eax; movups [rdi+0x40], xmm0; ret; 
0x000000000bbdf5: and [rdi], cl; adc [rdi+0x30], edi; movups [r11], xmm8; ret; 
0x00000000121111: and [rdi], cl; add [rbp+0x24], dh; mov eax, 0x42; syscall; 
0x000000000341b9: and [rdi], cl; mov bh, 0xc0; ret; 
0x000000000b92dd: and [rdi], cl; test [rax*1+0x66c30000], ecx; nop [rax+rax]; mov rax, rdi; ret; 
0x000000000b7b49: and [rdi], cl; test [rax+0x4], edx; add [rax], al; ret; 
0x00000000190c2d: and [rdi], cl; test [rax+rax+0x40a80000], edi; jne 0x0000000000190d00; lea rax, [rdi+0x7]; ret; 
0x000000000bbf45: and [rdi], cl; xchg [rax-0xd000000], edx; movq [rdi+rdx-0x10], mm0; movdqu [rdi], xmm0; ret; 
0x0000000013f895: and [rdi], cl; xchg esp, eax; ret; 
0x00000000043c14: and [rdi], eax; xor eax, eax; ret; 
0x00000000043c13: and [rdi], rax; xor eax, eax; ret; 
0x00000000113b7f: and [rdx+0x1], bh; mov esi, 0x5409; mov eax, 0x10; syscall; 
0x000000000bd1af: and [rdx+0x1], ch; push 0x0; lea rcx, [rax+0x4]; lea r9, [rsp+0x18]; call rbx; 
0x000000000bd353: and [rdx+0x1], ch; xor r8d, r8d; push 0x0; lea r9, [rsp+0x18]; call r13; 
0x0000000015cc33: and [rdx+0x9], cl; add [rcx], al; add rsp, 0x8; ret; 
0x000000001900fc: and [rdx+0xa], dh; vmovdqu [rdi], ymm2; vmovdqu [rsi-0x20], ymm2; ret; 
0x0000000016b9c6: and [rip+0x14634900], eax; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b9c7: and [rip+0x14634900], eax; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000015c4d3: and [rip-0x76b40000], al; loopne 0x000000000015c51c; pop rsp; ret; 
0x0000000015174e: and [rsi+0x4], bh; movdqa xmm0, [rip+0x6b534]; movaps [rsp+0x20], xmm0; call qword ptr [rax+0x28]; 
0x000000000ac652: and [rsi+0xf], ah; xlat [rbx]; rol dword ptr [rbp+0x317575c0], 0xc0; ret; 
0x000000000b797b: and [rsi], eax; add [rax], al; ret; 
0x000000000db1a7: and [rsi], ecx; add cl, ch; push rsp; idiv bh; call qword ptr [rax+0x4cc50149]; 
0x00000000116ee9: and [rsp+rbp*8-0x3a], dh; inc dword ptr [rax]; mov rax, r8; ret; 
0x0000000012bdf1: and [rsp+rcx+0x5b], dh; ret; 
0x0000000008075a: and ah, cl; adc al, [rax]; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x000000000b4241: and al, 0x0; add [rax-0x7b], cl; ror byte ptr [rdi], 0x85; ret; 
0x000000000a20a4: and al, 0x0; add [rax], al; add [rbx+0x5d], bl; pop r12; ret; 
0x000000000874e6: and al, 0x0; add [rax], al; call qword ptr [rax+0x68]; 
0x0000000008761b: and al, 0x0; add [rax], al; mov esi, 0xffffffff; call qword ptr [rax+0x18]; 
0x0000000008998f: and al, 0x0; add [rax], al; mov rax, [rax+0x20]; jmp rax; 
0x000000000d41e5: and al, 0x0; add [rax], al; syscall; 
0x000000000e4ff2: and al, 0x0; add [rbp+0x1c], dh; mov eax, 0xfffa; ret; 
0x000000000af015: and al, 0x0; add [rbp-0x77], cl; ret far; 
0x000000000a5dee: and al, 0x0; add bh, dh; ret; 
0x000000001156fe: and al, 0x0; mov rax, r12; pop r12; ret; 
0x000000000300af: and al, 0x0; pop rbx; pop rbp; pop r12; ret; 
0x00000000128591: and al, 0x10; add [rax-0x77], cl; ret; 
0x00000000153a9c: and al, 0x10; add [rax], eax; add [rax], al; mov dword ptr [rsp+0x18], 0x1; call qword ptr [rax+0x18]; 
0x000000000e2cc4: and al, 0x10; add rsp, 0x28; ret; 
0x0000000014f6fe: and al, 0x10; call qword ptr [rax+0x10]; 
0x000000000975a1: and al, 0x10; call qword ptr [rax]; 
0x000000000cafbe: and al, 0x10; call r14; 
0x0000000014db47: and al, 0x10; call rax; 
0x000000000bde75: and al, 0x10; call rbx; 
0x00000000041bda: and al, 0x10; fld st, tbyte ptr [rsp+0x8]; ret; 
0x0000000014f74b: and al, 0x10; lea rax, [rip+0x642ac]; movsxd rdx, [rax+rdx*4]; add rdx, rax; notrack jmp rdx; 
0x00000000051f58: and al, 0x10; lea rsi, [rip+0x1df]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000a8a6b: and al, 0x10; mov [rax], rdx; ret; 
0x000000000a8b22: and al, 0x10; mov [rdi], rax; lea rax, [rdi+rdx-0x1]; ret; 
0x00000000156645: and al, 0x10; mov [rsp+0x10], rax; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x00000000114fee: and al, 0x10; mov eax, 0x17; mov edi, [rsp+0xc]; syscall; 
0x000000000e2ca6: and al, 0x10; mov eax, 0x3d; syscall; 
0x00000000120fde: and al, 0x10; mov eax, 0x46; mov edi, [rsp+0x8]; syscall; 
0x000000000e2d60: and al, 0x10; mov eax, 0xf7; syscall; 
0x0000000010df66: and al, 0x10; mov edi, [rsp+0x18]; mov eax, 0x101; syscall; 
0x0000000011306b: and al, 0x10; mov edi, [rsp+0x8]; syscall; 
0x00000000120cb1: and al, 0x10; mov edi, [rsp+0xc]; mov eax, 0x133; syscall; 
0x0000000011f491: and al, 0x10; mov edi, [rsp+0xc]; mov eax, 0xe8; syscall; 
0x00000000151ec8: and al, 0x10; mov edi, eax; call rbp; 
0x0000000011443d: and al, 0x10; mov r8d, eax; mov edi, [rsp+0x8]; mov eax, 0x13; syscall; 
0x000000001144dd: and al, 0x10; mov r8d, eax; mov edi, [rsp+0x8]; mov eax, 0x14; syscall; 
0x0000000010e0cf: and al, 0x10; mov r8d, eax; mov edi, [rsp+0x8]; mov eax, 0x1; syscall; 
0x0000000012063d: and al, 0x10; mov r8d, eax; mov edi, [rsp+0x8]; mov eax, 0x2e; syscall; 
0x000000001204dd: and al, 0x10; mov r8d, eax; mov edi, [rsp+0x8]; mov eax, 0x2f; syscall; 
0x0000000010e02f: and al, 0x10; mov r8d, eax; mov edi, [rsp+0x8]; xor eax, eax; syscall; 
0x0000000012012f: and al, 0x10; mov r8d, eax; mov edi, [rsp+0xc]; mov eax, 0x2b; syscall; 
0x0000000004827e: and al, 0x10; mov r8d, eax; mov rdi, [rsp+0x8]; mov eax, 0x13e; syscall; 
0x00000000118a3e: and al, 0x10; mov r8d, eax; mov rdi, [rsp+0x8]; mov eax, 0x1a; syscall; 
0x000000001129be: and al, 0x10; mov r8d, eax; mov rdi, [rsp+0x8]; mov eax, 0x7; syscall; 
0x00000000156649: and al, 0x10; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x00000000155e6d: and al, 0x10; mov rax, [rdi+0x8]; sar rdx, 0x20; mov [rsp+0x8], rdx; call qword ptr [rax+0x8]; 
0x00000000155f5d: and al, 0x10; mov rax, [rdi+0x8]; shr rdx, 0x20; mov [rsp+0x8], rdx; call qword ptr [rax+0x8]; 
0x0000000014ef6d: and al, 0x10; mov rax, [rsp+0x48]; call qword ptr [rax+0x28]; 
0x0000000012293f: and al, 0x10; mov rcx, [rsp+0x8]; mov rax, [rsp]; add rsp, 0x38; ret; 
0x000000001229a0: and al, 0x10; mov rcx, [rsp+0x8]; mov rax, [rsp]; add rsp, 0x40; ret; 
0x00000000146960: and al, 0x10; mov rcx, [rsp+0x8]; mov rdi, rbp; call rcx; 
0x0000000014d2f1: and al, 0x10; mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x18]; 
0x0000000016088b: and al, 0x10; mov rdi, [rsp+0x18]; call rax; 
0x0000000016082e: and al, 0x10; mov rdi, [rsp+0x18]; call rcx; 
0x000000000921e0: and al, 0x10; mov rdi, [rsp+0x8]; add rsp, 0x20; pop rbx; jmp rax; 
0x000000000bd8ec: and al, 0x10; mov rdi, r12; mov rsi, [rsp+0x18]; call rbx; 
0x000000001509e1: and al, 0x10; mov rdi, r15; call rcx; 
0x00000000155e8f: and al, 0x10; mov rdi, rbp; call qword ptr [rax+0x8]; 
0x0000000008e944: and al, 0x10; mov rdi, rbp; call qword ptr [rax+0x90]; 
0x00000000155e36: and al, 0x10; mov rdi, rbp; call qword ptr [rax]; 
0x00000000149db2: and al, 0x10; mov rdx, r13; mov rsi, r12; mov rdi, rbp; call rax; 
0x00000000137d62: and al, 0x10; mov rdx, r14; mov rdi, r15; mov rsi, [rsp+0x8]; call rbp; 
0x00000000127e8c: and al, 0x10; mov rdx, rax; call qword ptr [r12+0x28]; 
0x00000000045150: and al, 0x10; mov rdx, rbp; mov rdi, r12; call rbx; 
0x0000000011f2b4: and al, 0x10; mov rsi, [rsp+0x8]; mov eax, 0x119; mov edi, [rsp+0x4]; syscall; 
0x00000000120c06: and al, 0x10; mov rsi, [rsp+0x8]; mov eax, 0x12b; mov edi, [rsp+0x4]; syscall; 
0x00000000120449: and al, 0x10; mov rsi, [rsp+0x8]; syscall; 
0x0000000012059b: and al, 0x10; mov rsi, [rsp+0x8]; xor r8d, r8d; mov eax, 0x2c; syscall; 
0x0000000012037b: and al, 0x10; mov rsi, [rsp+0x8]; xor r8d, r8d; mov eax, 0x2d; syscall; 
0x00000000138163: and al, 0x10; mov rsi, r12; call qword ptr [rsp+0x58]; 
0x0000000014d1cf: and al, 0x10; mov rsi, r12; mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x8]; 
0x00000000041ba5: and al, 0x10; or eax, 0xffff8000; inc eax; shr eax, 0x1f; ret; 
0x000000000df469: and al, 0x10; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000011f0ce: and al, 0x10; syscall; 
0x0000000011a89a: and al, 0x10; test r13, r13; jne short 0x000000000011a8f0; mov rdi, [r12]; call rbx; 
0x0000000011a8ca: and al, 0x10; test r13, r13; jne short 0x000000000011a950; mov rdi, [r12]; call rbx; 
0x00000000089265: and al, 0x10; xor edx, edx; mov rdi, r15; call qword ptr [r14+0x80]; 
0x00000000127d1e: and al, 0x10; xor esi, esi; mov edi, 0x2000004; call rax; 
0x00000000083da0: and al, 0x10; xor esi, esi; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000116c42: and al, 0x10; xor r10d, r10d; xor esi, esi; mov eax, 0x118; syscall; 
0x000000001138df: and al, 0x11; syscall; 
0x0000000015194e: and al, 0x14; call qword ptr [rax]; 
0x000000000a8a1c: and al, 0x14; mov [rdi+0x4], dx; movzx edx, byte ptr [rsp+0x16]; mov [rdi+0x6], dl; ret; 
0x0000000004429e: and al, 0x14; mov edi, r12d; mov eax, 0x81; syscall; 
0x00000000024039: and al, 0x14; mov rdx, [rax]; call rbx; 
0x000000000240a7: and al, 0x14; mov rdx, [rax]; mov rax, [rsp+0x18]; call rax; 
0x00000000142fd5: and al, 0x14; mov rdx, r12; mov eax, 0x81; syscall; 
0x0000000011459a: and al, 0x14; mov rsi, [rsp+0x8]; mov eax, 0x127; syscall; 
0x0000000011465a: and al, 0x14; mov rsi, [rsp+0x8]; mov eax, 0x128; syscall; 
0x00000000115112: and al, 0x14; syscall; 
0x000000000a8a25: and al, 0x16; mov [rdi+0x6], dl; ret; 
0x00000000153aa4: and al, 0x18; add [rax], eax; add [rax], al; call qword ptr [rax+0x18]; 
0x00000000153b00: and al, 0x18; add [rax], eax; add [rax], al; mov dword ptr [rsp+0x20], 0x5; call qword ptr [rax+0x18]; 
0x0000000009a79b: and al, 0x18; add rsp, 0x18; jmp rax; 
0x00000000113285: and al, 0x18; add rsp, 0x28; ret; 
0x000000001538f1: and al, 0x18; call qword ptr [rax+0x18]; 
0x000000000bd35d: and al, 0x18; call r13; 
0x00000000157a0b: and al, 0x18; call r8; 
0x000000000240ae: and al, 0x18; call rax; 
0x0000000008a5e3: and al, 0x18; call rbp; 
0x000000000bd1ba: and al, 0x18; call rbx; 
0x00000000160834: and al, 0x18; call rcx; 
0x00000000147847: and al, 0x18; lea r9, [rsp+0x40]; call qword ptr [rax]; 
0x000000000a8993: and al, 0x18; mov [rdi], rdx; add rax, rdi; ret; 
0x0000000010df6a: and al, 0x18; mov eax, 0x101; syscall; 
0x00000000113267: and al, 0x18; mov eax, 0x115; syscall; 
0x00000000120b57: and al, 0x18; mov eax, 0x120; syscall; 
0x00000000120702: and al, 0x18; mov eax, 0x2c; mov rsi, [rsp+0x10]; mov edi, [rsp+0x8]; syscall; 
0x00000000120f27: and al, 0x18; mov eax, 0x45; syscall; 
0x0000000011510e: and al, 0x18; mov edi, [rsp+0x14]; syscall; 
0x0000000011f541: and al, 0x18; mov edi, [rsp+0x8]; mov eax, 0x114; syscall; 
0x000000001517a3: and al, 0x18; mov esi, 0x6; call qword ptr [rax+0x28]; 
0x0000000015176a: and al, 0x18; mov esi, 0x6; mov rax, [rdi+0x8]; call qword ptr [rax+0x28]; 
0x00000000160099: and al, 0x18; mov esi, [rsi]; lea r9, [r11+rsi]; mov esi, [rsp+0x8]; call rax; 
0x000000000e460c: and al, 0x18; mov rax, [rip+0x10ce6a]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000e455c: and al, 0x18; mov rax, [rip+0x10cf1a]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000002cc2b: and al, 0x18; mov rcx, [rsp+0x28]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x48]; call r13; 
0x000000000ca893: and al, 0x18; mov rcx, r12; mov rdx, r13; call rbx; 
0x0000000014d1bd: and al, 0x18; mov rdi, r12; call qword ptr [rax+0x8]; 
0x000000000bde6c: and al, 0x18; mov rdi, r12; mov rsi, [rsp+0x10]; call rbx; 
0x00000000097599: and al, 0x18; mov rdi, r13; mov [rsp+0x10], r10; call qword ptr [rax]; 
0x0000000015f2e5: and al, 0x18; mov rdx, r14; mov esi, 0x40; mov rdi, rbx; call rax; 
0x0000000004484b: and al, 0x18; mov rdx, rbp; mov rsi, r12; call rbx; 
0x00000000146da6: and al, 0x18; mov rsi, [rsp+0x10]; call qword ptr [rax]; 
0x00000000114fe9: and al, 0x18; mov rsi, [rsp+0x10]; mov eax, 0x17; mov edi, [rsp+0xc]; syscall; 
0x00000000120fd9: and al, 0x18; mov rsi, [rsp+0x10]; mov eax, 0x46; mov edi, [rsp+0x8]; syscall; 
0x0000000002f17d: and al, 0x18; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; call r15; 
0x0000000002a343: and al, 0x18; mov rsi, [rsp+0x48]; mov rdi, [rsp+0x40]; call r14; 
0x0000000002769a: and al, 0x18; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; call r14; 
0x00000000029331: and al, 0x18; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; call rbx; 
0x0000000002c64f: and al, 0x18; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; call rbx; 
0x00000000027dff: and al, 0x18; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x60]; call rbx; 
0x00000000153bf5: and al, 0x18; movups [rsp+0x38], xmm0; call qword ptr [rax+0x18]; 
0x0000000009a283: and al, 0x18; pop rbx; pop rbp; pop r12; jmp rax; 
0x00000000024c78: and al, 0x18; xor r8d, r8d; call rbx; 
0x000000001182bc: and al, 0x18; xor rax, fs:[0x28]; jne short 0x00000000001182d2; add rsp, 0xd8; ret; 
0x00000000118395: and al, 0x18; xor rax, fs:[0x28]; jne short 0x00000000001183ab; add rsp, 0xd8; ret; 
0x0000000011bd51: and al, 0x18; xor rax, fs:[0x28]; jne short 0x000000000011bd67; add rsp, 0xd8; ret; 
0x0000000011be11: and al, 0x18; xor rax, fs:[0x28]; jne short 0x000000000011be27; add rsp, 0xd8; ret; 
0x0000000011c258: and al, 0x18; xor rax, fs:[0x28]; jne short 0x000000000011c26e; add rsp, 0xd8; ret; 
0x0000000011c4c5: and al, 0x18; xor rax, fs:[0x28]; jne short 0x000000000011c4db; add rsp, 0xd8; ret; 
0x00000000129b73: and al, 0x18; xor rax, fs:[0x28]; jne short 0x0000000000129b89; add rsp, 0xd8; ret; 
0x0000000012b89c: and al, 0x18; xor rax, fs:[0x28]; jne short 0x000000000012b8b2; add rsp, 0xd8; ret; 
0x00000000154137: and al, 0x18; xor rax, fs:[0x28]; jne short 0x0000000000154168; add rsp, 0x28; ret; 
0x00000000047467: and al, 0x18; xor rcx, fs:[0x28]; jne short 0x000000000004747a; add rsp, 0x28; ret; 
0x00000000047557: and al, 0x18; xor rcx, fs:[0x28]; jne short 0x000000000004756a; add rsp, 0x28; ret; 
0x00000000052c29: and al, 0x18; xor rcx, fs:[0x28]; jne short 0x0000000000052c3f; add rsp, 0xd8; ret; 
0x00000000061c9c: and al, 0x18; xor rcx, fs:[0x28]; jne short 0x0000000000061cb2; add rsp, 0xd8; ret; 
0x00000000061d71: and al, 0x18; xor rcx, fs:[0x28]; jne short 0x0000000000061d87; add rsp, 0xd8; ret; 
0x00000000061e28: and al, 0x18; xor rcx, fs:[0x28]; jne short 0x0000000000061e3e; add rsp, 0xd8; ret; 
0x00000000061fbc: and al, 0x18; xor rcx, fs:[0x28]; jne short 0x0000000000061fd2; add rsp, 0xd8; ret; 
0x0000000006207c: and al, 0x18; xor rcx, fs:[0x28]; jne short 0x0000000000062092; add rsp, 0xd8; ret; 
0x0000000006216a: and al, 0x18; xor rcx, fs:[0x28]; jne short 0x0000000000062180; add rsp, 0xd8; ret; 
0x00000000062241: and al, 0x18; xor rcx, fs:[0x28]; jne short 0x0000000000062257; add rsp, 0xd8; ret; 
0x00000000063194: and al, 0x18; xor rcx, fs:[0x28]; jne short 0x00000000000631aa; add rsp, 0xd8; ret; 
0x0000000006326f: and al, 0x18; xor rcx, fs:[0x28]; jne short 0x0000000000063285; add rsp, 0xd8; ret; 
0x000000000864ec: and al, 0x18; xor rcx, fs:[0x28]; jne short 0x0000000000086502; add rsp, 0xd8; ret; 
0x000000000865a8: and al, 0x18; xor rcx, fs:[0x28]; jne short 0x00000000000865be; add rsp, 0xd8; ret; 
0x000000000866a1: and al, 0x18; xor rcx, fs:[0x28]; jne short 0x00000000000866b7; add rsp, 0xd8; ret; 
0x00000000086771: and al, 0x18; xor rcx, fs:[0x28]; jne short 0x0000000000086787; add rsp, 0xd8; ret; 
0x0000000008682a: and al, 0x18; xor rcx, fs:[0x28]; jne short 0x0000000000086840; add rsp, 0xd8; ret; 
0x000000000cabb4: and al, 0x18; xor rcx, fs:[0x28]; jne short 0x00000000000cabca; add rsp, 0xd8; ret; 
0x000000000cac8f: and al, 0x18; xor rcx, fs:[0x28]; jne short 0x00000000000caca5; add rsp, 0xd8; ret; 
0x00000000113536: and al, 0x18; xor rcx, fs:[0x28]; jne short 0x000000000011358b; add rsp, 0x58; ret; 
0x000000001135d4: and al, 0x18; xor rcx, fs:[0x28]; jne short 0x000000000011362b; add rsp, 0x58; ret; 
0x00000000121127: and al, 0x18; xor rcx, fs:[0x28]; jne short 0x000000000012117b; add rsp, 0x58; ret; 
0x0000000012de7d: and al, 0x18; xor rcx, fs:[0x28]; jne short 0x000000000012de98; add rsp, 0xd8; ret; 
0x0000000012e155: and al, 0x18; xor rcx, fs:[0x28]; jne short 0x000000000012e16b; add rsp, 0xd8; ret; 
0x0000000012f175: and al, 0x18; xor rcx, fs:[0x28]; jne short 0x000000000012f18b; add rsp, 0xd8; ret; 
0x0000000012f6e5: and al, 0x18; xor rcx, fs:[0x28]; jne short 0x000000000012f6fb; add rsp, 0xd8; ret; 
0x0000000012f7c5: and al, 0x18; xor rcx, fs:[0x28]; jne short 0x000000000012f7db; add rsp, 0xd8; ret; 
0x0000000012f8a5: and al, 0x18; xor rcx, fs:[0x28]; jne short 0x000000000012f8bb; add rsp, 0xd8; ret; 
0x000000001366fd: and al, 0x18; xor rcx, fs:[0x28]; jne short 0x0000000000136710; add rsp, 0x28; ret; 
0x0000000013e1f5: and al, 0x18; xor rcx, fs:[0x28]; jne short 0x000000000013e208; add rsp, 0x28; ret; 
0x000000000d0218: and al, 0x18; xor rdi, fs:[0x28]; jne short 0x00000000000d0239; add rsp, 0x28; ret; 
0x00000000054174: and al, 0x18; xor rdx, fs:[0x28]; jne short 0x0000000000054189; add rsp, 0xd8; ret; 
0x00000000061efb: and al, 0x18; xor rdx, fs:[0x28]; jne short 0x0000000000061f10; add rsp, 0xd8; ret; 
0x000000000d105e: and al, 0x18; xor rdx, fs:[0x28]; jne short 0x00000000000d1094; add rsp, 0x28; ret; 
0x0000000010d1a0: and al, 0x18; xor rdx, fs:[0x28]; jne short 0x000000000010d1c1; add rsp, 0x28; ret; 
0x00000000114cd3: and al, 0x18; xor rdx, fs:[0x28]; jne short 0x0000000000114ce5; add rsp, 0x28; ret; 
0x00000000115892: and al, 0x18; xor rdx, fs:[0x28]; jne short 0x00000000001158a4; add rsp, 0x28; ret; 
0x0000000012df74: and al, 0x18; xor rdx, fs:[0x28]; jne short 0x000000000012df95; add rsp, 0xd8; ret; 
0x0000000012e08e: and al, 0x18; xor rdx, fs:[0x28]; jne short 0x000000000012e0a3; add rsp, 0xd8; ret; 
0x0000000012ef94: and al, 0x18; xor rdx, fs:[0x28]; jne short 0x000000000012efb5; add rsp, 0xd8; ret; 
0x0000000012f0ae: and al, 0x18; xor rdx, fs:[0x28]; jne short 0x000000000012f0c3; add rsp, 0xd8; ret; 
0x00000000160d15: and al, 0x18; xor rdx, fs:[0x28]; jne short 0x0000000000160d27; add rsp, 0x28; ret; 
0x0000000012f5bd: and al, 0x18; xor rsi, fs:[0x28]; jne short 0x000000000012f5d5; add rsp, 0x28; ret; 
0x0000000012f61d: and al, 0x18; xor rsi, fs:[0x28]; jne short 0x000000000012f635; add rsp, 0x28; ret; 
0x000000000be3be: and al, 0x1; add [rax], al; add [rax-0x7d], cl; ret; 
0x0000000010e925: and al, 0x1; add [rax], al; syscall; 
0x00000000089830: and al, 0x1; add [rax], al; xor edx, edx; mov rdi, r15; call qword ptr [rbx+0x80]; 
0x00000000044836: and al, 0x1; mov r13, rax; mov rdi, r12; call rbx; 
0x0000000013ff59: and al, 0x1b; add cl, ch; idiv bh; jmp qword ptr [rsi+0xf]; 
0x00000000152392: and al, 0x1c; call qword ptr [rax]; 
0x000000000e2d5b: and al, 0x1c; mov rdx, [rsp+0x10]; mov eax, 0xf7; syscall; 
0x00000000127c17: and al, 0x1f; call qword ptr [r12+0x28]; 
0x0000000015175e: and al, 0x20; call qword ptr [rax+0x28]; 
0x00000000147330: and al, 0x20; call qword ptr [rax]; 
0x000000000279f6: and al, 0x20; call rax; 
0x000000000bd563: and al, 0x20; call rbx; 
0x000000001133d6: and al, 0x20; cmp esi, 0x9; je short 0x0000000000113408; mov eax, 0x48; syscall; 
0x00000000097913: and al, 0x20; mov [rsp+0x18], r8; call rax; 
0x00000000127c13: and al, 0x20; mov [rsp+0x1f], al; call qword ptr [r12+0x28]; 
0x0000000011f0c4: and al, 0x20; mov [rsp+0x28], r9; movaps [rsp+0x10], xmm0; syscall; 
0x00000000115104: and al, 0x20; mov eax, 0x10e; mov rsi, [rsp+0x18]; mov edi, [rsp+0x14]; syscall; 
0x00000000115949: and al, 0x20; mov eax, 0x65; syscall; 
0x0000000015174d: and al, 0x20; mov esi, 0x4; movdqa xmm0, [rip+0x6b534]; movaps [rsp+0x20], xmm0; call qword ptr [rax+0x28]; 
0x0000000014d40c: and al, 0x20; mov rdi, r12; call rdx; 
0x000000000caa14: and al, 0x20; mov rdi, rbp; mov rsi, [rsp+0x18]; call rbx; 
0x00000000146da0: and al, 0x20; mov rdx, [rsp+0x18]; mov rsi, [rsp+0x10]; call qword ptr [rax]; 
0x000000000df027: and al, 0x20; mov rdx, [rsp+0x28]; mov rax, [rsp+0x18]; call rax; 
0x00000000029750: and al, 0x20; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x48]; call r13; 
0x000000000284b4: and al, 0x20; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; call rbx; 
0x0000000002823e: and al, 0x20; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; mov rax, [rsp+0x30]; call rax; 
0x0000000002ddb4: and al, 0x20; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; call rbx; 
0x000000001138d3: and al, 0x21; mov [rsp+0x23], al; mov eax, r8d; movups [rsp+0x11], xmm0; syscall; 
0x000000001138d7: and al, 0x23; mov eax, r8d; movups [rsp+0x11], xmm0; syscall; 
0x000000000547ba: and al, 0x24; mov edi, 0x1; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000054989: and al, 0x24; xor esi, esi; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000273fa: and al, 0x28; call rax; 
0x000000000bd060: and al, 0x28; call rbx; 
0x00000000110397: and al, 0x28; lea rcx, [rbp+0x28]; mov edx, 0x1; call qword ptr [rbp+0x40]; 
0x000000001106f7: and al, 0x28; lea rcx, [rbp+0x28]; mov edx, 0x2; call qword ptr [rbp+0x40]; 
0x00000000110677: and al, 0x28; lea rcx, [rbp+0x28]; mov edx, 0x5; call qword ptr [rbp+0x40]; 
0x0000000011f6b1: and al, 0x28; mov eax, 0x113; mov rsi, [rsp+0x10]; mov edi, [rsp+0x8]; syscall; 
0x00000000113061: and al, 0x28; mov eax, 0x146; mov rsi, [rsp+0x10]; mov edi, [rsp+0x8]; syscall; 
0x00000000153b66: and al, 0x28; mov rax, [rdi+0x8]; mov dword ptr [rsp+0x30], 0x1; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x00000000153956: and al, 0x28; mov rax, [rdi+0x8]; mov dword ptr [rsp+0x30], 0x3; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x000000001539c6: and al, 0x28; mov rax, [rdi+0x8]; mov dword ptr [rsp+0x30], 0x4; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x00000000153a36: and al, 0x28; mov rax, [rdi+0x8]; mov dword ptr [rsp+0x30], 0x5; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x000000000df02d: and al, 0x28; mov rax, [rsp+0x18]; call rax; 
0x00000000146d9b: and al, 0x28; mov rcx, [rsp+0x20]; mov rdx, [rsp+0x18]; mov rsi, [rsp+0x10]; call qword ptr [rax]; 
0x0000000014d1f0: and al, 0x28; mov rdi, r12; call rcx; 
0x0000000009bd13: and al, 0x28; mov rdi, r12; call rdx; 
0x0000000002cc30: and al, 0x28; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x48]; call r13; 
0x0000000011f0c9: and al, 0x28; movaps [rsp+0x10], xmm0; syscall; 
0x00000000113a3b: and al, 0x28; xor eax, eax; mov rdx, rsp; mov eax, 0x10; syscall; 
0x0000000010e4ea: and al, 0x28; xor rcx, fs:[0x28]; jne 0x000000000010e595; add rsp, 0x68; ret; 
0x0000000005b899: and al, 0x28; xor rcx, fs:[0x28]; jne short 0x000000000005b8c5; add rsp, 0x38; ret; 
0x000000000df433: and al, 0x28; xor rcx, fs:[0x28]; jne short 0x00000000000df493; add rsp, 0x38; ret; 
0x000000000e41b3: and al, 0x28; xor rcx, fs:[0x28]; jne short 0x00000000000e4213; add rsp, 0x38; ret; 
0x000000000e4253: and al, 0x28; xor rcx, fs:[0x28]; jne short 0x00000000000e42b3; add rsp, 0x38; ret; 
0x000000000e4523: and al, 0x28; xor rcx, fs:[0x28]; jne short 0x00000000000e4593; add rsp, 0x38; ret; 
0x000000000e45d3: and al, 0x28; xor rcx, fs:[0x28]; jne short 0x00000000000e4643; add rsp, 0x38; ret; 
0x000000001133ef: and al, 0x28; xor rcx, fs:[0x28]; jne short 0x0000000000113443; add rsp, 0x68; ret; 
0x000000001149b3: and al, 0x28; xor rcx, fs:[0x28]; jne short 0x0000000000114a1b; add rsp, 0x38; ret; 
0x00000000114a53: and al, 0x28; xor rcx, fs:[0x28]; jne short 0x0000000000114abb; add rsp, 0x38; ret; 
0x00000000114b08: and al, 0x28; xor rcx, fs:[0x28]; jne short 0x0000000000114b8b; add rsp, 0x38; ret; 
0x00000000114bd8: and al, 0x28; xor rcx, fs:[0x28]; jne short 0x0000000000114c5b; add rsp, 0x38; ret; 
0x00000000115968: and al, 0x28; xor rcx, fs:[0x28]; jne short 0x00000000001159ad; add rsp, 0x68; ret; 
0x00000000116b8c: and al, 0x28; xor rcx, fs:[0x28]; jne short 0x0000000000116bd5; add rsp, 0x38; ret; 
0x00000000116c5b: and al, 0x28; xor rcx, fs:[0x28]; jne short 0x0000000000116ca5; add rsp, 0x38; ret; 
0x00000000136690: and al, 0x28; xor rcx, fs:[0x28]; jne short 0x00000000001366a3; add rsp, 0x38; ret; 
0x0000000015fc81: and al, 0x28; xor rcx, fs:[0x28]; jne short 0x000000000015fccc; add rsp, 0x38; ret; 
0x000000001029c6: and al, 0x28; xor rdi, fs:[0x28]; jne short 0x0000000000102a26; add rsp, 0x38; ret; 
0x000000001365f4: and al, 0x28; xor rdx, fs:[0x28]; jne short 0x0000000000136629; add rsp, 0x38; ret; 
0x0000000014713b: and al, 0x2c; call qword ptr [rax]; 
0x0000000010ca3a: and al, 0x2c; mov edi, 0x1; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000010c9e7: and al, 0x2c; xor esi, esi; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000f6a1a: and al, 0x30; adc al, 0x83; ret; 
0x00000000153b6e: and al, 0x30; add [rax], eax; add [rax], al; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x000000001539ce: and al, 0x30; add al, 0x0; add [rax], al; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x00000000153a3e: and al, 0x30; add eax, 0xf000000; adc [rsp+0x18], eax; call qword ptr [rax+0x18]; 
0x0000000015395e: and al, 0x30; add eax, [rax]; add [rax], al; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x0000000015fdde: and al, 0x30; call qword ptr [rax+0x1e0]; 
0x0000000002824d: and al, 0x30; call rax; 
0x000000000bd79e: and al, 0x30; call rbx; 
0x00000000113867: and al, 0x30; mov eax, 0x10; syscall; 
0x0000000002a33e: and al, 0x30; mov rcx, [rsp+0x18]; mov rsi, [rsp+0x48]; mov rdi, [rsp+0x40]; call r14; 
0x0000000014d1ec: and al, 0x30; mov rcx, [rsp+0x28]; mov rdi, r12; call rcx; 
0x0000000008919c: and al, 0x30; mov rdi, r15; call qword ptr [r14+0x90]; 
0x0000000002b8c5: and al, 0x30; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; call r15; 
0x0000000002b2d1: and al, 0x30; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; mov rax, [rsp+0x20]; call rax; 
0x0000000002a891: and al, 0x30; mov rsi, [rsp+0x48]; mov rdi, [rsp+0x40]; call rbx; 
0x000000000290bc: and al, 0x30; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; mov rax, [rsp+0x20]; call rax; 
0x0000000002d962: and al, 0x30; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; mov rax, [rsp+0x18]; call rax; 
0x0000000002c265: and al, 0x30; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; mov rax, [rsp+0x20]; call rax; 
0x00000000152f18: and al, 0x30; push 0x0; push 0x3c; lea r9, [rsp+0x3a]; call qword ptr [rax]; 
0x0000000014726d: and al, 0x30; push qword ptr [rip+0x758e2]; push qword ptr [rip+0x758d4]; lea r9, [rsp+0x2c]; call qword ptr [rax]; 
0x0000000014712a: and al, 0x30; push qword ptr [rip+0x75a25]; push qword ptr [rip+0x75a17]; lea r9, [rsp+0x2c]; call qword ptr [rax]; 
0x00000000152cc4: and al, 0x30; push r13; push r12; lea r9, [rsp+0x3a]; call qword ptr [rax]; 
0x00000000051fbf: and al, 0x30; xor esi, esi; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000009cf17: and al, 0x31; mov [rbx], rax; test rax, rax; je 0x000000000009cff0; call rax; 
0x00000000147e0d: and al, 0x31; ror byte ptr [rax-0x77], 0xdf; call rcx; 
0x00000000155a8b: and al, 0x31; sar byte ptr [rdx-0x1], 0x4c; mov esi, esi; mov rdi, r12; call r13; 
0x00000000153bfa: and al, 0x38; call qword ptr [rax+0x18]; 
0x00000000130288: and al, 0x38; call qword ptr [rsp+0x60]; 
0x00000000144eeb: and al, 0x38; call qword ptr [rsp+0x68]; 
0x0000000002b8d0: and al, 0x38; call r15; 
0x0000000002f2ed: and al, 0x38; lea r8, [rsp+0xa0]; call r15; 
0x00000000130cc1: and al, 0x38; mov esi, r14d; mov rdi, r13; call qword ptr [rsp+0x50]; 
0x00000000131d43: and al, 0x38; mov r8, rbx; mov rdx, rbp; call qword ptr [rsp+0x60]; 
0x0000000002b2dc: and al, 0x38; mov rax, [rsp+0x20]; call rax; 
0x00000000147b4f: and al, 0x38; mov rdi, r12; call qword ptr [rax+0x20]; 
0x000000001538ed: and al, 0x38; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x00000000155b96: and al, 0x38; xor eax, eax; mov rdi, rsp; mov dword ptr [rsp], 0x2; call r8; 
0x0000000008dbfc: and al, 0x38; xor rax, fs:[0x28]; jne short 0x000000000008dc1b; add rsp, 0x48; ret; 
0x00000000155baa: and al, 0x38; xor rax, fs:[0x28]; jne short 0x0000000000155bbd; add rsp, 0x48; ret; 
0x0000000010def4: and al, 0x38; xor rcx, fs:[0x28]; jne 0x000000000010dfb9; add rsp, 0x78; ret; 
0x000000001483b6: and al, 0x3; mov rdi, rbp; and esi, 0xfffffffc; call qword ptr [rax+0x30]; 
0x00000000152ccd: and al, 0x3a; call qword ptr [rax]; 
0x000000000d0ea0: and al, 0x40; call qword ptr [rax+0x1e0]; 
0x0000000014784b: and al, 0x40; call qword ptr [rax]; 
0x0000000002a34e: and al, 0x40; call r14; 
0x0000000002a89c: and al, 0x40; call rbx; 
0x00000000144ee6: and al, 0x40; mov rdi, [rsp+0x38]; call qword ptr [rsp+0x68]; 
0x0000000002b8cb: and al, 0x40; mov rdi, [rsp+0x38]; call r15; 
0x0000000002f2e8: and al, 0x40; mov rdi, [rsp+0x38]; lea r8, [rsp+0xa0]; call r15; 
0x0000000002b2d7: and al, 0x40; mov rdi, [rsp+0x38]; mov rax, [rsp+0x20]; call rax; 
0x0000000014d407: and al, 0x40; mov rdx, [rsp+0x20]; mov rdi, r12; call rdx; 
0x0000000011509d: and al, 0x40; test eax, eax; jne short 0x00000000001150d0; mov eax, 0x10e; syscall; 
0x0000000010e9e8: and al, 0x41; mov eax, eax; mov eax, 0x55; syscall; 
0x0000000011f75c: and al, 0x41; mov eax, eax; mov edi, [rsp+0x8]; mov eax, 0x130; syscall; 
0x000000001201fc: and al, 0x41; mov eax, eax; mov edi, [rsp+0x8]; mov eax, 0x2a; syscall; 
0x000000000a1fa4: and al, 0x41; pop rsp; pop r13; pop r14; ret; 
0x0000000008746c: and al, 0x44; mov esi, esp; mov rdi, r14; call qword ptr [rax+0x18]; 
0x000000001469fb: and al, 0x45; test edi, edi; je short 0x0000000000146a80; mov rax, [rdi+0x38]; call qword ptr [rax+0x18]; 
0x00000000091a78: and al, 0x48; add esp, 0x10; pop rbx; jmp rax; 
0x00000000042a24: and al, 0x48; add esp, 0x18; pop rbx; pop rbp; ret; 
0x0000000010ea08: and al, 0x48; add esp, 0x18; ret; 
0x000000001203a2: and al, 0x48; add esp, 0x20; pop rbp; ret; 
0x0000000010c1f6: and al, 0x48; add esp, 0x28; ret; 
0x00000000120468: and al, 0x48; add esp, 0x30; pop rbp; ret; 
0x00000000122949: and al, 0x48; add esp, 0x38; ret; 
0x000000001229aa: and al, 0x48; add esp, 0x40; ret; 
0x0000000014ef72: and al, 0x48; call qword ptr [rax+0x28]; 
0x0000000002975b: and al, 0x48; call r13; 
0x00000000029c5b: and al, 0x48; call rbx; 
0x0000000015f751: and al, 0x48; mov eax, [rax+0x1d8]; jmp rax; 
0x00000000156ae3: and al, 0x48; mov eax, [rbp+0x8]; call qword ptr [rax+0x8]; 
0x00000000104435: and al, 0x48; mov eax, [rbp-0x1e0]; call rax; 
0x00000000149059: and al, 0x48; mov eax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x0000000008eaf2: and al, 0x48; mov edi, ebp; call rax; 
0x00000000146948: and al, 0x48; mov esi, ebp; mov rax, [rdi+0x38]; call qword ptr [rax+0x8]; 
0x0000000002f178: and al, 0x48; mov rcx, [rsp+0x18]; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; call r15; 
0x00000000150e3b: and al, 0x48; mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x18]; 
0x0000000002a349: and al, 0x48; mov rdi, [rsp+0x40]; call r14; 
0x0000000002a897: and al, 0x48; mov rdi, [rsp+0x40]; call rbx; 
0x0000000009a9eb: and al, 0x48; mov rdi, r13; call rax; 
0x00000000115818: and al, 0x48; xor rcx, fs:[0x28]; jne short 0x0000000000115837; add rsp, 0x58; ret; 
0x0000000015f928: and al, 0x48; xor rcx, fs:[0x28]; jne short 0x000000000015f96e; add rsp, 0x58; ret; 
0x0000000011f2da: and al, 0x4; add rsp, 0x20; pop rbp; ret; 
0x00000000120c2d: and al, 0x4; add rsp, 0x28; ret; 
0x000000001571c7: and al, 0x4; call qword ptr [rax+0x40]; 
0x00000000047894: and al, 0x4; jne short 0x00000000000478ea; add rsp, 0x18; ret; 
0x000000001571e6: and al, 0x4; mov [rsp+0x4], eax; mov rax, [rdi+0x8]; call qword ptr [rax+0x48]; 
0x0000000005217f: and al, 0x4; mov edi, 0x1; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000001571e9: and al, 0x4; mov rax, [rdi+0x8]; call qword ptr [rax+0x48]; 
0x00000000156db2: and al, 0x4; mov rax, [rdi+0x8]; sar rdx, 0x20; mov [rsp], edx; call qword ptr [rax+0x48]; 
0x00000000156f92: and al, 0x4; mov rax, [rdi+0x8]; shr rdx, 0x20; mov [rsp], edx; call qword ptr [rax+0x48]; 
0x00000000156d7d: and al, 0x4; mov rdi, rbp; call qword ptr [rax+0x40]; 
0x00000000156dce: and al, 0x4; mov rdi, rbp; call qword ptr [rax+0x48]; 
0x0000000011f2c2: and al, 0x4; syscall; 
0x000000000521d1: and al, 0x4; xor esi, esi; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000920b6: and al, 0x4c; mov edi, edi; lea rbx, [rsi+0x1]; movzx esi, byte ptr [rsi]; call qword ptr [rax+0x18]; 
0x00000000138511: and al, 0x4c; mov edi, esp; call rax; 
0x0000000008f7cb: and al, 0x4c; mov edx, eax; mov rsi, r12; mov rdi, rbp; call qword ptr [rax+0x78]; 
0x000000000457a7: and al, 0x4c; mov edx, esi; mov rax, [rsp]; call rax; 
0x00000000045713: and al, 0x4c; mov edx, esi; mov rsi, r13; mov rdi, r12; call rax; 
0x00000000146a96: and al, 0x4c; mov esi, ebp; mov rax, [rdi+0x38]; call qword ptr [rax+0x10]; 
0x00000000044671: and al, 0x4c; mov esi, edi; call r14; 
0x00000000147eff: and al, 0x4c; mov esi, edi; mov rdi, rbx; xor eax, eax; call rcx; 
0x0000000004589e: and al, 0x4c; mov esi, esp; mov rdi, r13; call rax; 
0x00000000045913: and al, 0x4d; mov ebp, edi; add r15, r12; call rax; 
0x0000000014697e: and al, 0x50; call qword ptr [rax+0x20]; 
0x0000000002c65a: and al, 0x50; call rbx; 
0x000000000d039c: and al, 0x50; call rbx; 
0x0000000002d96d: and al, 0x50; mov rax, [rsp+0x18]; call rax; 
0x0000000002c270: and al, 0x50; mov rax, [rsp+0x20]; call rax; 
0x000000001509dd: and al, 0x50; mov rcx, [rsp+0x10]; mov rdi, r15; call rcx; 
0x00000000029756: and al, 0x50; mov rdi, [rsp+0x48]; call r13; 
0x00000000029c56: and al, 0x50; mov rdi, [rsp+0x48]; call rbx; 
0x000000000276a0: and al, 0x50; mov rdi, [rsp+0x58]; call r14; 
0x000000000284ba: and al, 0x50; mov rdi, [rsp+0x58]; call rbx; 
0x000000000290c2: and al, 0x50; mov rdi, [rsp+0x58]; mov rax, [rsp+0x20]; call rax; 
0x000000000273f1: and al, 0x50; mov rdi, [rsp+0x58]; mov rax, [rsp+0x28]; call rax; 
0x00000000028244: and al, 0x50; mov rdi, [rsp+0x58]; mov rax, [rsp+0x30]; call rax; 
0x00000000144ed8: and al, 0x50; mov rdx, [rsp+0xe0]; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; call qword ptr [rsp+0x68]; 
0x000000000d04b5: and al, 0x50; mov rsi, r15; mov rdi, rbp; call rbx; 
0x000000000d04b4: and al, 0x50; mov rsi, r15; mov rdi, rbp; call rbx; 
0x0000000015f2c9: and al, 0x50; test rax, rax; je short 0x000000000015f2e3; mov rax, [rip+0x8cb88]; call qword ptr [rax+0x1f8]; 
0x000000000276a5: and al, 0x58; call r14; 
0x000000000284bf: and al, 0x58; call rbx; 
0x000000000290c7: and al, 0x58; mov rax, [rsp+0x20]; call rax; 
0x000000000273f6: and al, 0x58; mov rax, [rsp+0x28]; call rax; 
0x00000000028249: and al, 0x58; mov rax, [rsp+0x30]; call rax; 
0x0000000002c655: and al, 0x58; mov rdi, [rsp+0x50]; call rbx; 
0x0000000002d968: and al, 0x58; mov rdi, [rsp+0x50]; mov rax, [rsp+0x18]; call rax; 
0x0000000002c26b: and al, 0x58; mov rdi, [rsp+0x50]; mov rax, [rsp+0x20]; call rax; 
0x00000000027e05: and al, 0x58; mov rdi, [rsp+0x60]; call rbx; 
0x000000000279ed: and al, 0x58; mov rdi, [rsp+0x60]; mov rax, [rsp+0x20]; call rax; 
0x0000000014f1a3: and al, 0x58; mov rdi, r12; call qword ptr [rax+0x20]; 
0x0000000011385f: and al, 0x58; xor eax, eax; lea rdx, [rsp+0x30]; mov eax, 0x10; syscall; 
0x000000000d0395: and al, 0x58; xor eax, eax; mov [rsp+0x50], r12; call rbx; 
0x0000000011f0dd: and al, 0x58; xor rcx, fs:[0x28]; jne short 0x000000000011f103; add rsp, 0x68; ret; 
0x0000000015fa1f: and al, 0x58; xor rcx, fs:[0x28]; jne short 0x000000000015fa74; add rsp, 0x68; ret; 
0x0000000015fbb8: and al, 0x58; xor rcx, fs:[0x28]; jne short 0x000000000015fc14; add rsp, 0x68; ret; 
0x0000000016b6c6: and al, 0x5; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b6c7: and al, 0x5; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000012533c: and al, 0x5b; pop rbp; pop r12; ret; 
0x000000000951cd: and al, 0x5d; mov [r11+0x10], eax; mov dword ptr [r11+0x14], 0x0; ret; 
0x000000000a2c3b: and al, 0x5d; pop r12; pop r13; pop r14; ret; 
0x000000000ded88: and al, 0x60; call r12; 
0x00000000027e0a: and al, 0x60; call rbx; 
0x000000000279f2: and al, 0x60; mov rax, [rsp+0x20]; call rax; 
0x00000000157a06: and al, 0x60; movups [rsp+0x18], xmm0; call r8; 
0x000000001509c1: and al, 0x68; mov rdi, [rax]; mov rsi, r15; mov rax, [rdi+0x38]; call qword ptr [rax+0x8]; 
0x000000000ded80: and al, 0x68; mov rdi, r15; mov rsi, [rsp+0x60]; call r12; 
0x000000000279e8: and al, 0x68; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x60]; mov rax, [rsp+0x20]; call rax; 
0x00000000146a87: and al, 0x68; mov rsi, r13; call qword ptr [rax+0x10]; 
0x0000000014d3af: and al, 0x68; mov rsi, rbp; mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x10]; 
0x0000000015f1a4: and al, 0x68; xor eax, eax; call qword ptr [r12+0xf08]; 
0x0000000015396f: and al, 0x68; xor rax, fs:[0x28]; jne short 0x0000000000153982; add rsp, 0x78; ret; 
0x000000001539df: and al, 0x68; xor rax, fs:[0x28]; jne short 0x00000000001539f2; add rsp, 0x78; ret; 
0x00000000153a4f: and al, 0x68; xor rax, fs:[0x28]; jne short 0x0000000000153a62; add rsp, 0x78; ret; 
0x00000000153ab0: and al, 0x68; xor rax, fs:[0x28]; jne short 0x0000000000153ac3; add rsp, 0x78; ret; 
0x00000000153b14: and al, 0x68; xor rax, fs:[0x28]; jne short 0x0000000000153b27; add rsp, 0x78; ret; 
0x00000000153b7f: and al, 0x68; xor rax, fs:[0x28]; jne short 0x0000000000153b92; add rsp, 0x78; ret; 
0x00000000153c02: and al, 0x68; xor rax, fs:[0x28]; jne short 0x0000000000153c15; add rsp, 0x78; ret; 
0x000000001538f9: and al, 0x68; xor rcx, fs:[0x28]; jne short 0x000000000015390c; add rsp, 0x78; ret; 
0x000000000bd057: and al, 0x6a; add [rax-0x73], cl; add [rbp+rcx*4+0x4c], rcx; and al, 0x28; call rbx; 
0x0000000014e70c: and al, 0x70; call qword ptr [rax+0x30]; 
0x000000001579fd: and al, 0x70; pxor xmm0, xmm0; movaps [rsp+0x60], xmm1; movups [rsp+0x18], xmm0; call r8; 
0x0000000015c16b: and al, 0x72; mov [0xffff51e924048b49], al; jmp qword ptr [rsi+0xf]; 
0x0000000004317f: and al, 0x78; movups [rsp+0x88], xmm7; mov r10d, 0x8; mov eax, 0xd; syscall; 
0x000000000b7878: and al, 0x7; add [rax], al; ret; 
0x000000001091e1: and al, 0x80; add [rax], al; add [rax-0x7d], cl; ret; 
0x000000000ea013: and al, 0x80; add [rax], al; add [rbp-0x77], cl; fmul st, qword ptr [rax-0x77]; ret far; 
0x0000000015a438: and al, 0x80; in al, dx; dec dword ptr [rax-0x77]; ret; 
0x0000000005f508: and al, 0x83; ret; 
0x00000000053c15: and al, 0x87; add [rax], al; add [rcx-0x7d], cl; ret; 
0x000000000be4d4: and al, 0x89; ret; 
0x00000000034a17: and al, 0x8; add rsp, 0x18; ret; 
0x000000000921e5: and al, 0x8; add rsp, 0x20; pop rbx; jmp rax; 
0x000000000482a6: and al, 0x8; add rsp, 0x28; ret; 
0x00000000113089: and al, 0x8; add rsp, 0x30; pop rbp; ret; 
0x00000000121002: and al, 0x8; add rsp, 0x38; ret; 
0x00000000155e7b: and al, 0x8; call qword ptr [rax+0x8]; 
0x000000001490da: and al, 0x8; call qword ptr [rax]; 
0x00000000082af0: and al, 0x8; call rax; 
0x00000000137d6e: and al, 0x8; call rbp; 
0x00000000097932: and al, 0x8; call rdx; 
0x00000000041e02: and al, 0x8; fadd st, st(0); ret; 
0x00000000041d5e: and al, 0x8; fscale; fstp st(1), st; ret; 
0x00000000041cc4: and al, 0x8; fsubrp; ret; 
0x0000000013c8b9: and al, 0x8; jne short 0x000000000013c8d4; add rsp, 0x20; pop rbp; ret; 
0x0000000015f2fe: and al, 0x8; lea rdi, [r12+0x930]; call qword ptr [r12+0xf10]; 
0x0000000015f3a7: and al, 0x8; lea rdi, [r15+0x908]; call qword ptr [r15+0xf08]; 
0x000000000240bc: and al, 0x8; lea rdi, [rip+0x18fda2]; mov rsi, [rax]; xor eax, eax; call qword ptr [rdx+0x1d0]; 
0x0000000011f0c0: and al, 0x8; mov [rsp+0x20], r8; mov [rsp+0x28], r9; movaps [rsp+0x10], xmm0; syscall; 
0x0000000011f545: and al, 0x8; mov eax, 0x114; syscall; 
0x0000000011f2b9: and al, 0x8; mov eax, 0x119; mov edi, [rsp+0x4]; syscall; 
0x00000000113316: and al, 0x8; mov eax, 0x11d; syscall; 
0x0000000011459f: and al, 0x8; mov eax, 0x127; syscall; 
0x0000000011465f: and al, 0x8; mov eax, 0x128; syscall; 
0x00000000120c0b: and al, 0x8; mov eax, 0x12b; mov edi, [rsp+0x4]; syscall; 
0x0000000011f762: and al, 0x8; mov eax, 0x130; syscall; 
0x00000000114444: and al, 0x8; mov eax, 0x13; syscall; 
0x00000000048286: and al, 0x8; mov eax, 0x13e; syscall; 
0x000000001144e4: and al, 0x8; mov eax, 0x14; syscall; 
0x0000000010e0d6: and al, 0x8; mov eax, 0x1; syscall; 
0x00000000118a46: and al, 0x8; mov eax, 0x1a; syscall; 
0x00000000120202: and al, 0x8; mov eax, 0x2a; syscall; 
0x00000000120644: and al, 0x8; mov eax, 0x2e; syscall; 
0x000000001204e4: and al, 0x8; mov eax, 0x2f; syscall; 
0x0000000011f14c: and al, 0x8; mov eax, 0x38; syscall; 
0x0000000010e55e: and al, 0x8; mov eax, 0x48; syscall; 
0x000000001129c6: and al, 0x8; mov eax, 0x7; syscall; 
0x000000000e2ca2: and al, 0x8; mov edi, [rsp+0x10]; mov eax, 0x3d; syscall; 
0x00000000024035: and al, 0x8; mov edi, [rsp+0x14]; mov rdx, [rax]; call rbx; 
0x000000000240a3: and al, 0x8; mov edi, [rsp+0x14]; mov rdx, [rax]; mov rax, [rsp+0x18]; call rax; 
0x00000000113263: and al, 0x8; mov edi, [rsp+0x18]; mov eax, 0x115; syscall; 
0x00000000120b53: and al, 0x8; mov edi, [rsp+0x18]; mov eax, 0x120; syscall; 
0x00000000120f23: and al, 0x8; mov edi, [rsp+0x18]; mov eax, 0x45; syscall; 
0x0000000011f5f2: and al, 0x8; mov edi, [rsp]; mov eax, 0x116; syscall; 
0x0000000010c1d3: and al, 0x8; mov edi, [rsp]; mov eax, 0x11; syscall; 
0x0000000010c283: and al, 0x8; mov edi, [rsp]; mov eax, 0x12; syscall; 
0x0000000011340b: and al, 0x8; mov esi, 0x10; mov eax, 0x48; syscall; 
0x000000000434a9: and al, 0x8; mov esi, 0x8; mov r8d, eax; mov eax, 0x82; syscall; 
0x00000000088f1c: and al, 0x8; mov esi, 0xffffffff; mov rdi, r8; call qword ptr [rax+0x18]; 
0x000000001486ea: and al, 0x8; mov esi, r14d; mov rdi, r13; call qword ptr [rax+0x30]; 
0x0000000015f525: and al, 0x8; mov r12d, 0x1; mov [r13+0x18], rax; lea rdi, [r15+0x908]; call qword ptr [r15+0xf10]; 
0x00000000147855: and al, 0x8; mov r12d, eax; mov rax, [rdi+0x8]; call qword ptr [rax+0x20]; 
0x000000000e427e: and al, 0x8; mov rax, [rip+0x10d1f8]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000e41de: and al, 0x8; mov rax, [rip+0x10d298]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000122943: and al, 0x8; mov rax, [rsp]; add rsp, 0x38; ret; 
0x000000001229a4: and al, 0x8; mov rax, [rsp]; add rsp, 0x40; ret; 
0x00000000147e08: and al, 0x8; mov rcx, [rsp]; xor eax, eax; mov rdi, rbx; call rcx; 
0x0000000011adff: and al, 0x8; mov rdi, [r8]; call rbx; 
0x00000000119c4a: and al, 0x8; mov rdi, r13; call rax; 
0x000000000892c0: and al, 0x8; mov rdi, r15; call rax; 
0x0000000014621b: and al, 0x8; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x0000000014912e: and al, 0x8; mov rdi, rbp; call qword ptr [rax+0x8]; 
0x00000000146964: and al, 0x8; mov rdi, rbp; call rcx; 
0x000000001377f1: and al, 0x8; mov rdi, rbx; call rax; 
0x000000000ded7a: and al, 0x8; mov rdx, [rsp+0x68]; mov rdi, r15; mov rsi, [rsp+0x60]; call r12; 
0x00000000112aba: and al, 0x8; mov rdx, r12; mov eax, 0x10f; syscall; 
0x0000000008f41d: and al, 0x8; mov rsi, r13; mov rdi, rbx; call qword ptr [rbp+0x70]; 
0x00000000041bdf: and al, 0x8; ret; 
0x000000001149ef: and al, 0x8; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000011306f: and al, 0x8; syscall; 
0x0000000005215f: and al, 0x8; xor eax, eax; mov eax, 0x3e; syscall; 
0x0000000010e036: and al, 0x8; xor eax, eax; syscall; 
0x00000000097a06: and al, 0x8; xor edi, edi; call qword ptr [rax]; 
0x000000001205a0: and al, 0x8; xor r8d, r8d; mov eax, 0x2c; syscall; 
0x00000000120380: and al, 0x8; xor r8d, r8d; mov eax, 0x2d; syscall; 
0x00000000042bb9: and al, 0x8; xor rax, fs:[0x28]; jne short 0x0000000000042bcc; add rsp, 0x18; ret; 
0x00000000047de1: and al, 0x8; xor rax, fs:[0x28]; jne short 0x0000000000047df4; add rsp, 0x18; ret; 
0x00000000047e2e: and al, 0x8; xor rax, fs:[0x28]; jne short 0x0000000000047e41; add rsp, 0x18; ret; 
0x0000000009d623: and al, 0x8; xor rcx, fs:[0x28]; jne 0x000000000009d6e2; add rsp, 0x18; ret; 
0x00000000047e80: and al, 0x8; xor rcx, fs:[0x28]; jne short 0x0000000000047e93; add rsp, 0x18; ret; 
0x00000000047ecd: and al, 0x8; xor rcx, fs:[0x28]; jne short 0x0000000000047ee0; add rsp, 0x18; ret; 
0x00000000047f20: and al, 0x8; xor rcx, fs:[0x28]; jne short 0x0000000000047f33; add rsp, 0x18; ret; 
0x00000000047f6d: and al, 0x8; xor rcx, fs:[0x28]; jne short 0x0000000000047f80; add rsp, 0x18; ret; 
0x0000000010d464: and al, 0x8; xor rcx, fs:[0x28]; jne short 0x000000000010d477; add rsp, 0x18; ret; 
0x0000000011347e: and al, 0x8; xor rcx, fs:[0x28]; jne short 0x00000000001134d3; add rsp, 0x18; ret; 
0x00000000113b21: and al, 0x8; xor rcx, fs:[0x28]; jne short 0x0000000000113b3b; add rsp, 0x18; ret; 
0x000000001196dd: and al, 0x8; xor rcx, fs:[0x28]; jne short 0x00000000001196f0; add rsp, 0x18; ret; 
0x00000000120ae2: and al, 0x8; xor rcx, fs:[0x28]; jne short 0x0000000000120af5; add rsp, 0x18; ret; 
0x0000000013c716: and al, 0x8; xor rcx, fs:[0x28]; jne short 0x000000000013c730; add rsp, 0x18; ret; 
0x0000000013e1a2: and al, 0x8; xor rcx, fs:[0x28]; jne short 0x000000000013e1b5; add rsp, 0x18; ret; 
0x00000000062e0c: and al, 0x8; xor rdx, fs:[0x28]; jne short 0x0000000000062e27; add rsp, 0x18; ret; 
0x000000000da6e1: and al, 0x8; xor rdx, fs:[0x28]; jne short 0x00000000000da6f3; add rsp, 0x18; ret; 
0x000000000dcfb1: and al, 0x8; xor rdx, fs:[0x28]; jne short 0x00000000000dcfc3; add rsp, 0x18; ret; 
0x0000000010d4b7: and al, 0x8; xor rdx, fs:[0x28]; jne short 0x000000000010d4c9; add rsp, 0x18; ret; 
0x0000000013ea85: and al, 0x8; xor rdx, fs:[0x28]; jne short 0x000000000013ea97; add rsp, 0x18; ret; 
0x0000000015c9d7: and al, 0x8; xor rdx, fs:[0x28]; jne short 0x000000000015ca14; add rsp, 0x18; ret; 
0x00000000141158: and al, 0x8b; adc [r13+0x5b0875c0], r8b; pop rbp; pop r12; ret; 
0x0000000010982c: and al, 0x90; add [rax], al; add [rax-0x77], cl; ret; 
0x00000000147ec1: and al, 0x92; add [rax], eax; add [rax-0x75], cl; and al, 0x30; call rax; 
0x0000000010d604: and al, 0x98; add [rax], eax; add [rcx], dh; shl bh, 0xc2; jmp rsi; 
0x000000000531db: and al, 0xa0; add [rax], al; add [rcx+0x1], cl; ret; 
0x00000000194197: and al, 0xa7; add rdi, r12; notrack jmp rdi; 
0x000000000e9d50: and al, 0xa8; add [rax], al; add [rax-0x77], cl; ret far; 
0x000000001383db: and al, 0xa8; add [rax], al; add cl, ch; ret; 
0x0000000010c1d7: and al, 0xb8; adc [rax], eax; add [rax], al; syscall; 
0x0000000010c287: and al, 0xb8; adc al, [rax]; add [rax], al; syscall; 
0x00000000153e1c: and al, 0xb8; add [rax], al; add [rdi], cl; adc [rsp+0xd8], eax; call rax; 
0x00000000120440: and al, 0xb8; sub eax, 0x48000000; mov edx, [rsp+0x10]; mov rsi, [rsp+0x8]; syscall; 
0x0000000008f78e: and al, 0xba; add [rax], eax; add [rax], al; mov rdi, rbp; call qword ptr [rax+0x80]; 
0x000000000e2ea4: and al, 0xc; add rsp, 0x18; ret; 
0x000000000e2d7e: and al, 0xc; add rsp, 0x28; ret; 
0x00000000115010: and al, 0xc; add rsp, 0x38; ret; 
0x000000000a8ad9: and al, 0xc; mov [rax+0x4], dx; movzx edx, byte ptr [rsp+0xe]; mov [rax+0x6], dl; ret; 
0x000000000a8a04: and al, 0xc; mov [rdi+0x4], dx; ret; 
0x00000000120cb5: and al, 0xc; mov eax, 0x133; syscall; 
0x00000000120136: and al, 0xc; mov eax, 0x2b; syscall; 
0x0000000011f495: and al, 0xc; mov eax, 0xe8; syscall; 
0x00000000113312: and al, 0xc; mov edi, [rsp+0x8]; mov eax, 0x11d; syscall; 
0x00000000151827: and al, 0xc; mov esi, 0xd; call qword ptr [rax+0x28]; 
0x0000000010e85f: and al, 0xc; mov r8d, eax; mov eax, 0x3; syscall; 
0x000000001151ef: and al, 0xc; mov r8d, eax; mov eax, 0x4a; syscall; 
0x000000001152af: and al, 0xc; mov r8d, eax; mov eax, 0x4b; syscall; 
0x0000000010e557: and al, 0xc; mov r8d, eax; mov edi, [rsp+0x8]; mov eax, 0x48; syscall; 
0x00000000091a73: and al, 0xc; mov rdi, [rsp]; add rsp, 0x10; pop rbx; jmp rax; 
0x0000000010e9e3: and al, 0xc; mov rdi, [rsp]; mov r8d, eax; mov eax, 0x55; syscall; 
0x0000000014e798: and al, 0xc; mov rdi, rbp; call qword ptr [rax+0x48]; 
0x00000000114ff7: and al, 0xc; syscall; 
0x000000000d0966: and al, 0xd0; add [rax], al; add [rcx+rcx*4-0x12], cl; call rbp; 
0x00000000053a93: and al, 0xd0; add [rax], al; add al, ch; ret; 
0x00000000095306: and al, 0xd4; clc; jmp qword ptr [rsi+0xf]; 
0x00000000042feb: and al, 0xe0; add [rax], al; add [rdi], cl; sub [rsp+0xf0], eax; syscall; 
0x0000000010c95e: and al, 0xe8; add [rax], al; add [rax+0xe], bh; syscall; 
0x00000000041c95: and al, 0xe8; add [rax], al; add [rax], al; fld st, tbyte ptr [rsp-0x18]; ret; 
0x00000000041d0c: and al, 0xe8; fstp tbyte ptr [rdi], st; fld st, tbyte ptr [rsp+0x8]; ret; 
0x00000000144adb: and al, 0xe8; jg short 0x0000000000144a8b; add [rax], eax; mov edi, [r13]; call qword ptr [rsp+0x20]; 
0x00000000093e00: and al, 0xe8; loopne 0x0000000000093e04; jmp qword ptr [rsi+0xf]; 
0x000000000a8ac2: and al, 0xe8; mov [rax], edx; movzx edx, word ptr [rsp-0x14]; mov [rax+0x4], dx; ret; 
0x0000000013fe7e: and al, 0xe8; mov [rsi+rbp*8], fs; dec dword ptr [rax-0x77]; ret; 
0x00000000041dc6: and al, 0xe8; mov [rsp-0x10], ax; fld st, tbyte ptr [rsp-0x18]; ret; 
0x00000000057cf8: and al, 0xe8; mov [rsp-0x10], si; fld st, tbyte ptr [rsp-0x18]; ret; 
0x0000000012f976: and al, 0xe8; mov eax, 0x83; syscall; 
0x00000000057dd1: and al, 0xe8; movups [rdi], xmm0; mov [rdx], eax; mov eax, 0x2; ret; 
0x00000000144b73: and al, 0xe8; out 0xab, eax; add [rax], eax; xor edi, edi; call qword ptr [rsp+0x20]; 
0x0000000005b154: and al, 0xe8; pinsrw xmm0, eax, 0x6; ret; 
0x0000000003c3aa: and al, 0xe8; push rax; ret far; 
0x00000000096777: and al, 0xe8; push rbx; fdivp st(7), st; jmp qword ptr [rsi+0xf]; 
0x0000000003b62f: and al, 0xe8; ret far; 
0x000000000301d7: and al, 0xe8; ret; 
0x00000000039c8c: and al, 0xe9; idiv edi; jmp qword ptr [rsi+0xf]; 
0x0000000003c2c1: and al, 0xe9; ret far; 
0x00000000039e7c: and al, 0xe9; xchg edi, eax; idiv edi; jmp qword ptr [rsi+0xf]; 
0x000000000a8ae2: and al, 0xe; mov [rax+0x6], dl; ret; 
0x000000000a8bc1: and al, 0xe; mov [rdi+0x6], al; lea rax, [rdi+rdx-0x1]; ret; 
0x000000000a8ac9: and al, 0xec; mov [rax+0x4], dx; ret; 
0x000000000a8ba0: and al, 0xec; mov [rdi+0x4], ax; lea rax, [rdi+rdx-0x1]; ret; 
0x0000000013fe81: and al, 0xee; dec dword ptr [rax-0x77]; ret; 
0x00000000141ae2: and al, 0xef; jmp qword ptr [rsi+0x66]; 
0x000000000f8657: and al, 0xf0; add [rax], al; add [rcx-0x17f7dbbc], cl; ret far; 
0x00000000047254: and al, 0xf0; add qword ptr [rax+0x460], 0x1; lea rdi, [rbp+0x908]; call qword ptr [rbp+0xf10]; 
0x00000000042645: and al, 0xf0; and rax, rdx; sub rax, rdx; shr rax, 0x3f; ret; 
0x00000000041d07: and al, 0xf0; fld st, tbyte ptr [rsp-0x18]; fstp tbyte ptr [rdi], st; fld st, tbyte ptr [rsp+0x8]; ret; 
0x00000000041dca: and al, 0xf0; fld st, tbyte ptr [rsp-0x18]; ret; 
0x00000000041c47: and al, 0xf0; fstp tbyte ptr [rdi], st; fld st, tbyte ptr [rsp-0x18]; ret; 
0x000000000d02c4: and al, 0xf0; fsubp; fstp qword ptr [rsp-0x10], st; movsd xmm0, [rsp-0x10]; ret; 
0x000000000a8aaa: and al, 0xf0; mov [rax], edx; movzx edx, byte ptr [rsp-0xc]; mov [rax+0x4], dl; ret; 
0x00000000041c90: and al, 0xf0; mov qword ptr [rsp-0x18], 0x0; fld st, tbyte ptr [rsp-0x18]; ret; 
0x0000000005b14f: and al, 0xf0; movdqa xmm0, [rsp-0x18]; pinsrw xmm0, eax, 0x6; ret; 
0x000000000d02ca: and al, 0xf0; movsd xmm0, [rsp-0x10]; ret; 
0x000000000d02cf: and al, 0xf0; ret; 
0x000000000a8ab1: and al, 0xf4; mov [rax+0x4], dl; ret; 
0x000000000a8b88: and al, 0xf4; mov [rdi+0x4], al; lea rax, [rdi+rdx-0x1]; ret; 
0x000000000a89ec: and al, 0xf4; mov [rdi+0x4], dl; ret; 
0x000000000a8a8b: and al, 0xf8; mov [rax], dx; movzx edx, byte ptr [rsp-0x6]; mov [rax+0x2], dl; ret; 
0x00000000199072: and al, 0xf; add rsp, 0x10; pop rbx; ret; 
0x000000000bcf93: and al, 0xf; mov dh, 0xf3; call rbp; 
0x000000000a8a93: and al, 0xfa; mov [rax+0x2], dl; ret; 
0x000000000a8b5a: and al, 0xfa; mov [rdi+0x2], al; lea rax, [rdi+rdx-0x1]; ret; 
0x000000000a89ce: and al, 0xfa; mov [rdi+0x2], dl; ret; 
0x00000000041d59: and al, 0xfc; fld st, tbyte ptr [rsp+0x8]; fscale; fstp st(1), st; ret; 
0x0000000015d676: and al, 0xfd; jmp qword ptr [rsi+0xf]; 
0x0000000015d677: and al, 0xfd; jmp qword ptr [rsi+0xf]; 
0x0000000013d63f: and al, 0xff; jmp qword ptr [rsi+0x66]; 
0x00000000042b6d: and al, [rax]; add [rax], al; add rsp, 0x20; pop rbp; ret; 
0x00000000041e94: and al, [rax]; add [rax], al; add rsp, 0x8; ret; 
0x000000000e2e71: and al, [rax]; add [rax], al; syscall; 
0x000000000af1be: and al, [rax]; add [rbp-0x77], cl; ret far; 
0x00000000146a26: and al, [rax]; add [rcx+rcx*4-0xa], cl; add qword ptr [rbx+0x22a8], 0x1; mov rdi, rbp; call qword ptr [rax+0x18]; 
0x00000000146a30: and al, [rax]; add [rcx], al; mov rdi, rbp; call qword ptr [rax+0x18]; 
0x00000000064bc9: and al, [rbx-0x61f43]; call qword ptr [rax]; 
0x0000000008f97a: and al, [rcx]; add [rax], al; mov rsi, rsp; mov rdi, rbp; call qword ptr [r13+0x90]; 
0x0000000011f355: and al, [rcx]; add [rax], al; syscall; 
0x0000000016b847: and al, [rip+0x14634900]; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000023a6a: and al, [rsp+rbx-0x7dc6b800]; fadd st, dword ptr [rax]; add [rax], al; jne short 0x0000000000023a3b; ret; 
0x000000001987a3: and al, bh; call far fword ptr [rbx+0x48]; 
0x000000000d185f: and al, ch; cmp ebx, [rdx]; stc; call far fword ptr [rcx+0x5e]; 
0x000000000f2f67: and al, ch; ret; 
0x000000000341f6: and ax, 0x1000; movzx eax, ax; ret; 
0x000000000341d6: and ax, 0x100; movzx eax, ax; ret; 
0x000000000341b6: and ax, 0x2000; movzx eax, ax; ret; 
0x00000000034136: and ax, 0x200; movzx eax, ax; ret; 
0x00000000034176: and ax, 0x4000; movzx eax, ax; ret; 
0x000000000340d6: and ax, 0x400; movzx eax, ax; ret; 
0x00000000041c8a: and ax, 0x8000; mov [rsp-0x10], ax; mov qword ptr [rsp-0x18], 0x0; fld st, tbyte ptr [rsp-0x18]; ret; 
0x00000000034156: and ax, 0x8000; movzx eax, ax; ret; 
0x00000000034116: and ax, 0x800; movzx eax, ax; ret; 
0x000000000606c4: and bh, ah; jmp qword ptr [rsi+0xf]; 
0x000000000cb21e: and bh, bh; jmp qword ptr [rsi+0x2e]; 
0x000000000cb244: and bh, bh; jmp qword ptr [rsi+0xf]; 
0x000000000cb264: and bh, bh; jmp qword ptr [rsi+0xf]; 
0x0000000014d7ec: and bh, dh; call qword ptr [rax-0x5e1f00d]; 
0x000000000ac687: and bl, al; nop [rax]; bsr eax, eax; lea rax, [rax+rdi+0x30]; ret; 
0x000000000b7e57: and bl, al; nop [rax]; ret; 
0x0000000012600c: and bl, al; out dx, eax; jmp qword ptr [rbp+rax*2-0x77]; 
0x000000000b7e4b: and bl, dh; movq [rdi], mm0; movdqu [rdi+0x10], xmm2; mov [rdi+0x20], cl; ret; 
0x000000000b7e4a: and bl, r14b; movq [rdi], mm0; movdqu [rdi+0x10], xmm2; mov [rdi+0x20], cl; ret; 
0x0000000006d382: and byte ptr [rax+0x48000000], 0x85; ror byte ptr [rdi], 0x84; call qword ptr [rax+rax]; 
0x00000000047258: and byte ptr [rax+0x4], 0x0; add [rcx], al; lea rdi, [rbp+0x908]; call qword ptr [rbp+0xf10]; 
0x0000000009e4d0: and byte ptr [rbx+0x50], 0xfe; movups [rbx+0x38], xmm0; movsxd rdi, esi; mov [rbx], rdi; call rcx; 
0x00000000100494: and byte ptr [rdi+0x38], 0xf9; mov dword ptr [rsi], 0x0; movups [rsi+0x8], xmm0; ret; 
0x00000000041c8d: and byte ptr [rsi-0x77], 0x44; and al, 0xf0; mov qword ptr [rsp-0x18], 0x0; fld st, tbyte ptr [rsp-0x18]; ret; 
0x0000000010dc1c: and ch, 0x1; jne short 0x000000000010dc68; mov eax, 0x10c; syscall; 
0x000000000bcd84: and ch, 0x2; lea rax, [rip+0x112c2]; lea rdx, [rip+0xd575b]; cmovne rax, rdx; ret; 
0x000000000a08b6: and ch, 0x2; lea rax, [rip+0xc350]; lea rdx, [rip+0xd0099]; cmovne rax, rdx; ret; 
0x000000000a0474: and ch, 0x2; lea rax, [rip+0xc372]; lea rdx, [rip+0xf08fb]; cmovne rax, rdx; ret; 
0x000000000a0816: and ch, 0x2; lea rax, [rip+0xc3d0]; lea rdx, [rip+0xd0119]; cmovne rax, rdx; ret; 
0x000000000a0906: and ch, 0x2; lea rax, [rip+0xe550]; lea rdx, [rip+0xd21a9]; cmovne rax, rdx; ret; 
0x000000000a0866: and ch, 0x2; lea rax, [rip+0xe5d0]; lea rdx, [rip+0xd2229]; cmovne rax, rdx; ret; 
0x0000000008ce8a: and ch, 0x7f; cmp esi, 0x2; cmovne edx, ecx; mov [rdi], edx; ret; 
0x000000000bc1b8: and ch, 0xf0; pop rbx; cmovne rax, rdx; ret; 
0x000000000cfb12: and ch, 0xf; je short 0x00000000000cfb30; add rax, 0x2; ret; 
0x0000000015d07a: and ch, [rdx]; std; jmp qword ptr [rsi-0x70]; 
0x000000001848e3: and ch, al; std; xlat [rbx]; ret; 
0x000000000cfafd: and cl, 0xf; je short 0x00000000000cfb20; ret; 
0x0000000011cc5a: and cl, [rax+0x39]; ret; 
0x0000000009c21d: and cl, [rax-0x73]; clc; ret; 
0x00000000082ae5: and cl, [rax-0x75]; mov edi, 0xe0; lea rsi, [rsp+0x8]; call rax; 
0x00000000085b55: and cl, [rax-0x77]; fimul st, dword ptr [rcx+rcx*4-0x12]; mov rdi, rbp; call qword ptr [r14+0x38]; 
0x0000000010cc32: and cl, [rbx+0x4634901]; test [rcx+rax-0x20], cl; notrack jmp rax; 
0x000000000a0bae: and cl, [rcx+rcx*4-0x28]; pop rbx; pop rbp; pop r12; ret; 
0x000000000fbdd8: and cl, bpl; ret; 
0x0000000006178f: and cl, ch; ret far; 
0x000000000fbdd9: and cl, ch; ret; 
0x000000000ceac9: and cl, ch; sar ebx, 0xff; call qword ptr [rax+0x166f0ff3]; 
0x000000000cec89: and cl, ch; sar esi, 0xff; call qword ptr [rax+0xf6f0ff3]; 
0x0000000009f78d: and dh, 0x2; lea rax, [rip+0xaee9]; lea rdx, [rip+0xc4e62]; cmovne rax, rdx; ret; 
0x000000000bc123: and dh, 0xf0; mov edx, 0x0; pop rbx; cmove rax, rdx; ret; 
0x00000000094eaa: and dh, [rbp+rdx]; ret; 
0x000000000e316d: and dh, ah; mov edi, edx; mov eax, r8d; syscall; 
0x00000000140272: and dh, ch; jmp qword ptr [rsi+0xf]; 
0x000000000acd0e: and dl, [rax]; add [rdi+0x63], cl; or al, 0x8a; lea r10, [r10+r9]; notrack jmp r10; 
0x000000000e5aba: and dl, [rdi-0x6f990005]; xor eax, eax; ret; 
0x000000001161bc: and dl, al; lock dec dword ptr [rax+0x1]; ret; 
0x000000001002e3: and dl, dh; call far fword ptr [rax+0x5a]; 
0x000000001002e2: and dl, sil; call far fword ptr [rax+0x5a]; 
0x000000000338fb: and dword ptr [rax-0x3eb7ffe5], 0x486411c8; xor eax, [0x30]; call rax; 
0x00000000087d50: and dword ptr [rbx], 0xffffffef; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x00000000087dac: and dword ptr [rbx], 0xffffffef; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000016de3a: and dword ptr [rcx+0x4c000000], 0xffffff8d; sbb eax, 0x501ba; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000094d5d: and dword ptr [rdi+0x8], 0xfffffffe; xor eax, eax; ret; 
0x0000000008df14: and dword ptr [rdi], 0xffffffcf; ret; 
0x00000000088567: and dword ptr [rsi+0x48], 0xf; outsb dx, [rsi]; ret; 
0x00000000104de9: and eax, 0x0; mov r9, rbx; add r8, r15; call r13; 
0x0000000002443f: and eax, 0x0; ret; 
0x00000000061bf0: and eax, 0x100; or eax, 0x7; mov [rdx], eax; mov eax, 0x1; ret; 
0x000000001136d7: and eax, 0x100f; ret; 
0x00000000094c78: and eax, 0x10; ret; 
0x0000000018cea1: and eax, 0x11111111; bsr eax, eax; lea rax, [rdi+rax-0x20]; vzeroupper; ret; 
0x00000000048247: and eax, 0x18; test eax, eax; jne short 0x0000000000048260; mov eax, 0x13e; syscall; 
0x000000000e2c5a: and eax, 0x18; test eax, eax; jne short 0x00000000000e2c78; mov eax, 0x3d; syscall; 
0x000000000e2e67: and eax, 0x18; test eax, eax; jne short 0x00000000000e2e80; mov eax, 0x22; syscall; 
0x0000000010c18a: and eax, 0x18; test eax, eax; jne short 0x000000000010c1a8; mov eax, 0x11; syscall; 
0x0000000010c23a: and eax, 0x18; test eax, eax; jne short 0x000000000010c258; mov eax, 0x12; syscall; 
0x0000000010ded6: and eax, 0x18; test eax, eax; jne short 0x000000000010df40; mov eax, 0x101; syscall; 
0x0000000010dff7: and eax, 0x18; test eax, eax; jne short 0x000000000010e010; syscall; 
0x0000000010e097: and eax, 0x18; test eax, eax; jne short 0x000000000010e0b0; mov eax, 0x1; syscall; 
0x0000000010e50b: and eax, 0x18; test eax, eax; jne short 0x000000000010e540; mov eax, 0x48; syscall; 
0x0000000010e837: and eax, 0x18; test eax, eax; jne short 0x000000000010e850; mov eax, 0x3; syscall; 
0x0000000010e9b7: and eax, 0x18; test eax, eax; jne short 0x000000000010e9d0; mov eax, 0x55; syscall; 
0x00000000112987: and eax, 0x18; test eax, eax; jne short 0x00000000001129a0; mov eax, 0x7; syscall; 
0x0000000011300a: and eax, 0x18; test eax, eax; jne short 0x0000000000113028; mov eax, 0x146; syscall; 
0x0000000011321a: and eax, 0x18; test eax, eax; jne short 0x0000000000113238; mov eax, 0x115; syscall; 
0x000000001132ca: and eax, 0x18; test eax, eax; jne short 0x00000000001132e8; mov eax, 0x11d; syscall; 
0x00000000114407: and eax, 0x18; test eax, eax; jne short 0x0000000000114420; mov eax, 0x13; syscall; 
0x000000001144a7: and eax, 0x18; test eax, eax; jne short 0x00000000001144c0; mov eax, 0x14; syscall; 
0x00000000114f9a: and eax, 0x18; test eax, eax; jne short 0x0000000000114fb8; mov eax, 0x17; syscall; 
0x000000001151c7: and eax, 0x18; test eax, eax; jne short 0x00000000001151e0; mov eax, 0x4a; syscall; 
0x00000000115287: and eax, 0x18; test eax, eax; jne short 0x00000000001152a0; mov eax, 0x4b; syscall; 
0x00000000117c23: and eax, 0x18; test eax, eax; jne short 0x0000000000117c38; sub dword ptr [rip+0xd7c1d], 0x1; ret; 
0x00000000118a07: and eax, 0x18; test eax, eax; jne short 0x0000000000118a20; mov eax, 0x1a; syscall; 
0x0000000011f44a: and eax, 0x18; test eax, eax; jne short 0x000000000011f468; mov eax, 0xe8; syscall; 
0x0000000011f4fa: and eax, 0x18; test eax, eax; jne short 0x000000000011f518; mov eax, 0x114; syscall; 
0x0000000011f5aa: and eax, 0x18; test eax, eax; jne short 0x000000000011f5c8; mov eax, 0x116; syscall; 
0x0000000011f65a: and eax, 0x18; test eax, eax; jne short 0x000000000011f678; mov eax, 0x113; syscall; 
0x0000000011f727: and eax, 0x18; test eax, eax; jne short 0x000000000011f740; mov eax, 0x130; syscall; 
0x000000001200f7: and eax, 0x18; test eax, eax; jne short 0x0000000000120110; mov eax, 0x2b; syscall; 
0x000000001201c7: and eax, 0x18; test eax, eax; jne short 0x00000000001201e0; mov eax, 0x2a; syscall; 
0x000000001203ea: and eax, 0x18; test eax, eax; jne short 0x0000000000120408; mov eax, 0x2d; syscall; 
0x000000001204a7: and eax, 0x18; test eax, eax; jne short 0x00000000001204c0; mov eax, 0x2f; syscall; 
0x00000000120607: and eax, 0x18; test eax, eax; jne short 0x0000000000120620; mov eax, 0x2e; syscall; 
0x000000001206aa: and eax, 0x18; test eax, eax; jne short 0x00000000001206c8; mov eax, 0x2c; syscall; 
0x00000000120b0a: and eax, 0x18; test eax, eax; jne short 0x0000000000120b28; mov eax, 0x120; syscall; 
0x00000000120bba: and eax, 0x18; test eax, eax; jne short 0x0000000000120bd8; mov eax, 0x12b; syscall; 
0x00000000120c6a: and eax, 0x18; test eax, eax; jne short 0x0000000000120c88; mov eax, 0x133; syscall; 
0x00000000120eda: and eax, 0x18; test eax, eax; jne short 0x0000000000120ef8; mov eax, 0x45; syscall; 
0x00000000120f8a: and eax, 0x18; test eax, eax; jne short 0x0000000000120fa8; mov eax, 0x46; syscall; 
0x000000000630b1: and eax, 0x18; test edx, edx; jne short 0x00000000000630c0; sub dword ptr [rdi], 0x1; ret; 
0x00000000083f63: and eax, 0x18; test edx, edx; jne short 0x0000000000083f78; sub dword ptr [rip+0x16a80d], 0x1; ret; 
0x00000000091017: and eax, 0x18; test edx, edx; jne short 0x0000000000091030; sub dword ptr [rip+0x15d799], 0x1; ret; 
0x00000000093923: and eax, 0x18; test edx, edx; jne short 0x0000000000093938; sub dword ptr [rip+0x15ae8d], 0x1; ret; 
0x0000000009c231: and eax, 0x1; cmovne rax, rdx; ret; 
0x00000000094d47: and eax, 0x1; mov [rsi], eax; xor eax, eax; ret; 
0x00000000122c70: and eax, 0x1; mov eax, r8d; ret; 
0x00000000034276: and eax, 0x1; ret; 
0x0000000004724b: and eax, 0x1a4b18; mov rax, fs:[r12]; lock add qword ptr [rax+0x460], 0x1; lea rdi, [rbp+0x908]; call qword ptr [rbp+0xf10]; 
0x0000000002fd90: and eax, 0x1f0fffff; add [rax], r8b; ret; 
0x00000000041e1e: and eax, 0x200; ret; 
0x00000000043353: and eax, 0x28; jne 0x00000000000433f6; add rsp, 0x98; ret; 
0x00000000052221: and eax, 0x28; jne 0x00000000000522b5; add rsp, 0x10; pop rbx; ret; 
0x000000000578ed: and eax, 0x28; jne 0x0000000000057975; leave; ret; 
0x0000000009d62a: and eax, 0x28; jne 0x000000000009d6e2; add rsp, 0x18; ret; 
0x0000000010defb: and eax, 0x28; jne 0x000000000010dfb9; add rsp, 0x78; ret; 
0x0000000010e4f1: and eax, 0x28; jne 0x000000000010e595; add rsp, 0x68; ret; 
0x0000000010e632: and eax, 0x28; jne 0x000000000010e6ef; add rsp, 0x30; pop rbx; ret; 
0x0000000010e762: and eax, 0x28; jne 0x000000000010e81f; add rsp, 0x30; pop rbx; ret; 
0x000000001150bc: and eax, 0x28; jne 0x0000000000115159; add rsp, 0x60; pop rbp; ret; 
0x0000000012d0ff: and eax, 0x28; jne 0x000000000012d1dd; leave; ret; 
0x0000000014e56a: and eax, 0x28; jne 0x000000000014e5f3; add rsp, 0x20; pop rbx; ret; 
0x00000000042bc0: and eax, 0x28; jne short 0x0000000000042bcc; add rsp, 0x18; ret; 
0x00000000042f1a: and eax, 0x28; jne short 0x0000000000042f29; add rsp, 0x148; ret; 
0x00000000043047: and eax, 0x28; jne short 0x0000000000043074; mov eax, r8d; add rsp, 0x118; ret; 
0x0000000004325b: and eax, 0x28; jne short 0x00000000000432a4; mov eax, r9d; add rsp, 0x148; ret; 
0x000000000435ef: and eax, 0x28; jne short 0x0000000000043605; add rsp, 0x118; ret; 
0x00000000043672: and eax, 0x28; jne short 0x0000000000043688; add rsp, 0x118; ret; 
0x0000000004377d: and eax, 0x28; jne short 0x000000000004378c; add rsp, 0x98; ret; 
0x000000000439c1: and eax, 0x28; jne short 0x00000000000439e2; add rsp, 0x40; pop rbx; ret; 
0x00000000043d1d: and eax, 0x28; jne short 0x0000000000043d2c; add rsp, 0x148; ret; 
0x0000000004444d: and eax, 0x28; jne short 0x000000000004445c; add rsp, 0xa8; ret; 
0x0000000004746e: and eax, 0x28; jne short 0x000000000004747a; add rsp, 0x28; ret; 
0x0000000004755e: and eax, 0x28; jne short 0x000000000004756a; add rsp, 0x28; ret; 
0x00000000047de8: and eax, 0x28; jne short 0x0000000000047df4; add rsp, 0x18; ret; 
0x00000000047e35: and eax, 0x28; jne short 0x0000000000047e41; add rsp, 0x18; ret; 
0x00000000047e87: and eax, 0x28; jne short 0x0000000000047e93; add rsp, 0x18; ret; 
0x00000000047ed4: and eax, 0x28; jne short 0x0000000000047ee0; add rsp, 0x18; ret; 
0x00000000047f27: and eax, 0x28; jne short 0x0000000000047f33; add rsp, 0x18; ret; 
0x00000000047f74: and eax, 0x28; jne short 0x0000000000047f80; add rsp, 0x18; ret; 
0x00000000052c30: and eax, 0x28; jne short 0x0000000000052c3f; add rsp, 0xd8; ret; 
0x0000000005417a: and eax, 0x28; jne short 0x0000000000054189; add rsp, 0xd8; ret; 
0x0000000005b5de: and eax, 0x28; jne short 0x000000000005b600; add rsp, 0x450; pop rbp; ret; 
0x0000000005b8a0: and eax, 0x28; jne short 0x000000000005b8c5; add rsp, 0x38; ret; 
0x00000000061ca3: and eax, 0x28; jne short 0x0000000000061cb2; add rsp, 0xd8; ret; 
0x00000000061d78: and eax, 0x28; jne short 0x0000000000061d87; add rsp, 0xd8; ret; 
0x00000000061e2f: and eax, 0x28; jne short 0x0000000000061e3e; add rsp, 0xd8; ret; 
0x00000000061f01: and eax, 0x28; jne short 0x0000000000061f10; add rsp, 0xd8; ret; 
0x00000000061fc3: and eax, 0x28; jne short 0x0000000000061fd2; add rsp, 0xd8; ret; 
0x00000000062083: and eax, 0x28; jne short 0x0000000000062092; add rsp, 0xd8; ret; 
0x00000000062171: and eax, 0x28; jne short 0x0000000000062180; add rsp, 0xd8; ret; 
0x00000000062248: and eax, 0x28; jne short 0x0000000000062257; add rsp, 0xd8; ret; 
0x0000000006286e: and eax, 0x28; jne short 0x000000000006287e; add rsp, 0x1010; pop rbp; ret; 
0x00000000062e12: and eax, 0x28; jne short 0x0000000000062e27; add rsp, 0x18; ret; 
0x0000000006319b: and eax, 0x28; jne short 0x00000000000631aa; add rsp, 0xd8; ret; 
0x00000000063276: and eax, 0x28; jne short 0x0000000000063285; add rsp, 0xd8; ret; 
0x000000000864f3: and eax, 0x28; jne short 0x0000000000086502; add rsp, 0xd8; ret; 
0x000000000865af: and eax, 0x28; jne short 0x00000000000865be; add rsp, 0xd8; ret; 
0x000000000866a8: and eax, 0x28; jne short 0x00000000000866b7; add rsp, 0xd8; ret; 
0x00000000086778: and eax, 0x28; jne short 0x0000000000086787; add rsp, 0xd8; ret; 
0x00000000086831: and eax, 0x28; jne short 0x0000000000086840; add rsp, 0xd8; ret; 
0x0000000008dc03: and eax, 0x28; jne short 0x000000000008dc1b; add rsp, 0x48; ret; 
0x0000000009922a: and eax, 0x28; jne short 0x0000000000099272; add rsp, 0x40; pop rbp; ret; 
0x000000000ca0de: and eax, 0x28; jne short 0x00000000000ca104; add rsp, 0x20; pop rbx; ret; 
0x000000000cabbb: and eax, 0x28; jne short 0x00000000000cabca; add rsp, 0xd8; ret; 
0x000000000cac96: and eax, 0x28; jne short 0x00000000000caca5; add rsp, 0xd8; ret; 
0x000000000d021e: and eax, 0x28; jne short 0x00000000000d0239; add rsp, 0x28; ret; 
0x000000000d0298: and eax, 0x28; jne short 0x00000000000d02a5; add rsp, 0x40; pop rbp; ret; 
0x000000000d1064: and eax, 0x28; jne short 0x00000000000d1094; add rsp, 0x28; ret; 
0x000000000da6e7: and eax, 0x28; jne short 0x00000000000da6f3; add rsp, 0x18; ret; 
0x000000000dcfb7: and eax, 0x28; jne short 0x00000000000dcfc3; add rsp, 0x18; ret; 
0x000000000ddc80: and eax, 0x28; jne short 0x00000000000ddc90; add rsp, 0xe0; pop rbx; ret; 
0x000000000ddd14: and eax, 0x28; jne short 0x00000000000ddd24; add rsp, 0xe0; pop rbx; ret; 
0x000000000df43a: and eax, 0x28; jne short 0x00000000000df493; add rsp, 0x38; ret; 
0x000000000e3691: and eax, 0x28; jne short 0x00000000000e36d9; mov rbx, [rbp-0x8]; leave; ret; 
0x000000000e3861: and eax, 0x28; jne short 0x00000000000e38a9; mov rbx, [rbp-0x8]; leave; ret; 
0x000000000e41ba: and eax, 0x28; jne short 0x00000000000e4213; add rsp, 0x38; ret; 
0x000000000e425a: and eax, 0x28; jne short 0x00000000000e42b3; add rsp, 0x38; ret; 
0x000000000e452a: and eax, 0x28; jne short 0x00000000000e4593; add rsp, 0x38; ret; 
0x000000000e45da: and eax, 0x28; jne short 0x00000000000e4643; add rsp, 0x38; ret; 
0x000000001029cc: and eax, 0x28; jne short 0x0000000000102a26; add rsp, 0x38; ret; 
0x0000000010d1a6: and eax, 0x28; jne short 0x000000000010d1c1; add rsp, 0x28; ret; 
0x0000000010d35b: and eax, 0x28; jne short 0x000000000010d368; add rsp, 0x10; pop rbp; ret; 
0x0000000010d46b: and eax, 0x28; jne short 0x000000000010d477; add rsp, 0x18; ret; 
0x0000000010d4bd: and eax, 0x28; jne short 0x000000000010d4c9; add rsp, 0x18; ret; 
0x0000000010f330: and eax, 0x28; jne short 0x000000000010f380; add rsp, 0x130; pop rbp; ret; 
0x0000000010fbbe: and eax, 0x28; jne short 0x000000000010fbcd; movzx eax, al; add rsp, 0x58; ret; 
0x00000000112a80: and eax, 0x28; jne short 0x0000000000112b06; add rsp, 0x40; pop r12; ret; 
0x000000001133f6: and eax, 0x28; jne short 0x0000000000113443; add rsp, 0x68; ret; 
0x00000000113485: and eax, 0x28; jne short 0x00000000001134d3; add rsp, 0x18; ret; 
0x0000000011353d: and eax, 0x28; jne short 0x000000000011358b; add rsp, 0x58; ret; 
0x000000001135db: and eax, 0x28; jne short 0x000000000011362b; add rsp, 0x58; ret; 
0x00000000113ab8: and eax, 0x28; jne short 0x0000000000113ae4; mov eax, r9d; add rsp, 0x38; ret; 
0x00000000113b28: and eax, 0x28; jne short 0x0000000000113b3b; add rsp, 0x18; ret; 
0x000000001149ba: and eax, 0x28; jne short 0x0000000000114a1b; add rsp, 0x38; ret; 
0x00000000114a5a: and eax, 0x28; jne short 0x0000000000114abb; add rsp, 0x38; ret; 
0x00000000114b0f: and eax, 0x28; jne short 0x0000000000114b8b; add rsp, 0x38; ret; 
0x00000000114bdf: and eax, 0x28; jne short 0x0000000000114c5b; add rsp, 0x38; ret; 
0x00000000114cd9: and eax, 0x28; jne short 0x0000000000114ce5; add rsp, 0x28; ret; 
0x0000000011581f: and eax, 0x28; jne short 0x0000000000115837; add rsp, 0x58; ret; 
0x00000000115898: and eax, 0x28; jne short 0x00000000001158a4; add rsp, 0x28; ret; 
0x0000000011596f: and eax, 0x28; jne short 0x00000000001159ad; add rsp, 0x68; ret; 
0x00000000116b93: and eax, 0x28; jne short 0x0000000000116bd5; add rsp, 0x38; ret; 
0x00000000116c62: and eax, 0x28; jne short 0x0000000000116ca5; add rsp, 0x38; ret; 
0x000000001182c3: and eax, 0x28; jne short 0x00000000001182d2; add rsp, 0xd8; ret; 
0x0000000011839c: and eax, 0x28; jne short 0x00000000001183ab; add rsp, 0xd8; ret; 
0x000000001196e4: and eax, 0x28; jne short 0x00000000001196f0; add rsp, 0x18; ret; 
0x0000000011bd58: and eax, 0x28; jne short 0x000000000011bd67; add rsp, 0xd8; ret; 
0x0000000011be18: and eax, 0x28; jne short 0x000000000011be27; add rsp, 0xd8; ret; 
0x0000000011bff6: and eax, 0x28; jne short 0x000000000011c005; add rsp, 0x418; ret; 
0x0000000011c25f: and eax, 0x28; jne short 0x000000000011c26e; add rsp, 0xd8; ret; 
0x0000000011c4cc: and eax, 0x28; jne short 0x000000000011c4db; add rsp, 0xd8; ret; 
0x0000000011f0e4: and eax, 0x28; jne short 0x000000000011f103; add rsp, 0x68; ret; 
0x00000000120ae9: and eax, 0x28; jne short 0x0000000000120af5; add rsp, 0x18; ret; 
0x00000000120ea8: and eax, 0x28; jne short 0x0000000000120ebf; add rsp, 0xa0; pop rbx; ret; 
0x0000000012112e: and eax, 0x28; jne short 0x000000000012117b; add rsp, 0x58; ret; 
0x00000000129b7a: and eax, 0x28; jne short 0x0000000000129b89; add rsp, 0xd8; ret; 
0x0000000012b8a3: and eax, 0x28; jne short 0x000000000012b8b2; add rsp, 0xd8; ret; 
0x0000000012de84: and eax, 0x28; jne short 0x000000000012de98; add rsp, 0xd8; ret; 
0x0000000012df7a: and eax, 0x28; jne short 0x000000000012df95; add rsp, 0xd8; ret; 
0x0000000012e094: and eax, 0x28; jne short 0x000000000012e0a3; add rsp, 0xd8; ret; 
0x0000000012e15c: and eax, 0x28; jne short 0x000000000012e16b; add rsp, 0xd8; ret; 
0x0000000012ef9a: and eax, 0x28; jne short 0x000000000012efb5; add rsp, 0xd8; ret; 
0x0000000012f0b4: and eax, 0x28; jne short 0x000000000012f0c3; add rsp, 0xd8; ret; 
0x0000000012f17c: and eax, 0x28; jne short 0x000000000012f18b; add rsp, 0xd8; ret; 
0x0000000012f5c3: and eax, 0x28; jne short 0x000000000012f5d5; add rsp, 0x28; ret; 
0x0000000012f623: and eax, 0x28; jne short 0x000000000012f635; add rsp, 0x28; ret; 
0x0000000012f6ec: and eax, 0x28; jne short 0x000000000012f6fb; add rsp, 0xd8; ret; 
0x0000000012f7cc: and eax, 0x28; jne short 0x000000000012f7db; add rsp, 0xd8; ret; 
0x0000000012f8ac: and eax, 0x28; jne short 0x000000000012f8bb; add rsp, 0xd8; ret; 
0x000000001365fa: and eax, 0x28; jne short 0x0000000000136629; add rsp, 0x38; ret; 
0x00000000136697: and eax, 0x28; jne short 0x00000000001366a3; add rsp, 0x38; ret; 
0x00000000136704: and eax, 0x28; jne short 0x0000000000136710; add rsp, 0x28; ret; 
0x0000000013c71d: and eax, 0x28; jne short 0x000000000013c730; add rsp, 0x18; ret; 
0x0000000013e154: and eax, 0x28; jne short 0x000000000013e175; add rsp, 0x20; pop rbx; ret; 
0x0000000013e1a9: and eax, 0x28; jne short 0x000000000013e1b5; add rsp, 0x18; ret; 
0x0000000013e1fc: and eax, 0x28; jne short 0x000000000013e208; add rsp, 0x28; ret; 
0x0000000013ea8b: and eax, 0x28; jne short 0x000000000013ea97; add rsp, 0x18; ret; 
0x000000001448d8: and eax, 0x28; jne short 0x00000000001448e6; add rsp, 0x10; pop r12; ret; 
0x00000000146246: and eax, 0x28; jne short 0x0000000000146253; add rsp, 0x40; pop rbp; ret; 
0x0000000014901c: and eax, 0x28; jne short 0x0000000000149063; add rsp, 0x10; pop rbx; ret; 
0x0000000014958f: and eax, 0x28; jne short 0x00000000001495c2; add rsp, 0x10; pop rbx; ret; 
0x0000000014962d: and eax, 0x28; jne short 0x0000000000149665; add rsp, 0x10; pop rbx; ret; 
0x0000000014a240: and eax, 0x28; jne short 0x000000000014a257; add rsp, 0x40; pop rbx; ret; 
0x0000000015163e: and eax, 0x28; jne short 0x0000000000151661; add rsp, 0x10; pop rbx; ret; 
0x00000000151990: and eax, 0x28; jne short 0x0000000000151a0a; add rsp, 0x10; pop r12; ret; 
0x00000000151c07: and eax, 0x28; jne short 0x0000000000151c7a; add rsp, 0x30; pop rbx; ret; 
0x00000000151d47: and eax, 0x28; jne short 0x0000000000151dba; add rsp, 0x30; pop rbx; ret; 
0x00000000153900: and eax, 0x28; jne short 0x000000000015390c; add rsp, 0x78; ret; 
0x00000000153976: and eax, 0x28; jne short 0x0000000000153982; add rsp, 0x78; ret; 
0x000000001539e6: and eax, 0x28; jne short 0x00000000001539f2; add rsp, 0x78; ret; 
0x00000000153a56: and eax, 0x28; jne short 0x0000000000153a62; add rsp, 0x78; ret; 
0x00000000153ab7: and eax, 0x28; jne short 0x0000000000153ac3; add rsp, 0x78; ret; 
0x00000000153b1b: and eax, 0x28; jne short 0x0000000000153b27; add rsp, 0x78; ret; 
0x00000000153b86: and eax, 0x28; jne short 0x0000000000153b92; add rsp, 0x78; ret; 
0x00000000153c09: and eax, 0x28; jne short 0x0000000000153c15; add rsp, 0x78; ret; 
0x0000000015413e: and eax, 0x28; jne short 0x0000000000154168; add rsp, 0x28; ret; 
0x00000000155bb1: and eax, 0x28; jne short 0x0000000000155bbd; add rsp, 0x48; ret; 
0x00000000155c1c: and eax, 0x28; jne short 0x0000000000155c63; add rsp, 0x10; pop rbx; ret; 
0x00000000155cac: and eax, 0x28; jne short 0x0000000000155cf2; add rsp, 0x10; pop rbx; ret; 
0x00000000155d7c: and eax, 0x28; jne short 0x0000000000155dc5; add rsp, 0x10; pop rbp; ret; 
0x000000001561cc: and eax, 0x28; jne short 0x0000000000156214; add rsp, 0x10; pop rbx; ret; 
0x0000000015625c: and eax, 0x28; jne short 0x00000000001562a3; add rsp, 0x10; pop rbx; ret; 
0x0000000015642c: and eax, 0x28; jne short 0x0000000000156479; add rsp, 0x10; pop rbx; ret; 
0x000000001564bc: and eax, 0x28; jne short 0x0000000000156503; add rsp, 0x10; pop rbx; ret; 
0x000000001571ac: and eax, 0x28; jne short 0x00000000001571f5; add rsp, 0x10; pop rbx; ret; 
0x0000000015723c: and eax, 0x28; jne short 0x0000000000157285; add rsp, 0x10; pop rbx; ret; 
0x000000001572cc: and eax, 0x28; jne short 0x0000000000157315; add rsp, 0x10; pop rbx; ret; 
0x0000000015735c: and eax, 0x28; jne short 0x00000000001573a5; add rsp, 0x10; pop rbx; ret; 
0x00000000157a34: and eax, 0x28; jne short 0x0000000000157a44; add rsp, 0x90; pop rbx; ret; 
0x00000000157aa8: and eax, 0x28; jne short 0x0000000000157ab7; movzx eax, al; add rsp, 0x18; ret; 
0x00000000157b09: and eax, 0x28; jne short 0x0000000000157b18; movzx eax, al; add rsp, 0x18; ret; 
0x00000000157b75: and eax, 0x28; jne short 0x0000000000157b82; add rsp, 0x10; pop rbx; ret; 
0x00000000157be8: and eax, 0x28; jne short 0x0000000000157bf5; add rsp, 0x10; pop rbx; ret; 
0x0000000015c9dd: and eax, 0x28; jne short 0x000000000015ca14; add rsp, 0x18; ret; 
0x0000000015ccd4: and eax, 0x28; jne short 0x000000000015cd0c; add rsp, 0x10; pop rbp; ret; 
0x0000000015cd64: and eax, 0x28; jne short 0x000000000015cd9c; add rsp, 0x10; pop rbp; ret; 
0x0000000015f92f: and eax, 0x28; jne short 0x000000000015f96e; add rsp, 0x58; ret; 
0x0000000015fa26: and eax, 0x28; jne short 0x000000000015fa74; add rsp, 0x68; ret; 
0x0000000015fbbf: and eax, 0x28; jne short 0x000000000015fc14; add rsp, 0x68; ret; 
0x0000000015fc88: and eax, 0x28; jne short 0x000000000015fccc; add rsp, 0x38; ret; 
0x00000000160d1b: and eax, 0x28; jne short 0x0000000000160d27; add rsp, 0x28; ret; 
0x000000001632a6: and eax, 0x28; jne short 0x00000000001632b3; add rsp, 0x10; pop rbx; ret; 
0x0000000016332c: and eax, 0x28; jne short 0x0000000000163339; add rsp, 0x10; pop rbx; ret; 
0x000000000d038e: and eax, 0x28; mov [rsp+0x58], rax; xor eax, eax; mov [rsp+0x50], r12; call rbx; 
0x0000000015f19d: and eax, 0x28; mov [rsp+0x68], rax; xor eax, eax; call qword ptr [r12+0xf08]; 
0x00000000052158: and eax, 0x28; mov [rsp+0x8], rax; xor eax, eax; mov eax, 0x3e; syscall; 
0x0000000004788d: and eax, 0x28; movsxd rax, [rsp+0x4]; jne short 0x00000000000478ea; add rsp, 0x18; ret; 
0x000000000340f6: and eax, 0x2; movzx eax, ax; ret; 
0x00000000055c1c: and eax, 0x2; sub eax, 0x1; ret; 
0x00000000057b6a: and eax, 0x2c7; add [rax], al; mov eax, 0x1; ret; 
0x000000000240e5: and eax, 0x30; call rax; 
0x000000000468d0: and eax, 0x30; call rdx; 
0x00000000024424: and eax, 0x30; jmp rax; 
0x000000000472e0: and eax, 0x30; mov fs:[rbx], rdx; mov rdi, [rbp+0x8]; call rax; 
0x0000000013cca0: and eax, 0x30; mov qword ptr [rsp], 0x0; call rax; 
0x000000000dd427: and eax, 0x30; pop r13; pop r14; jmp rax; 
0x00000000023a46: and eax, 0x30; rol rax, 0x11; mov [rip+0x1cd8d2], rax; ret; 
0x00000000082a53: and eax, 0x30; test rax, rax; je short 0x0000000000082a66; mov rdi, [rdi+0xe0]; jmp rax; 
0x00000000082b33: and eax, 0x30; test rax, rax; je short 0x0000000000082b50; mov rdi, [rdi+0xe0]; jmp rax; 
0x0000000011f903: and eax, 0x3; ret; 
0x000000000bc13e: and eax, 0x3fc00; ret; 
0x000000000bc238: and eax, 0x3fffc00; div ecx; mov eax, eax; ret; 
0x000000000bc189: and eax, 0x3fffc00; ret; 
0x0000000010289a: and eax, 0x40; add [rax], al; add [rax], al; mov eax, r8d; ret; 
0x000000001135b7: and eax, 0x410000; cmp eax, 0x410000; je short 0x00000000001135f0; mov eax, 0x101; syscall; 
0x00000000085e02: and eax, 0x441f0f; add [rdx+0x10], bh; mov rsi, r13; mov rdi, r15; call qword ptr [r14+0x38]; 
0x00000000080f07: and eax, 0x48000002; lea ecx, [rip+0x12dbb2]; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x0000000008efa7: and eax, 0x48000002; lea esi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax+0x90]; 
0x00000000035cd7: and eax, 0x48001b7e; ror eax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000358ff: and eax, 0x48001bbb; lea edi, [rip+0x1b8076]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000113abe: and eax, 0x48c88944; add esp, 0x38; ret; 
0x00000000198307: and eax, 0x48fff825; mov dword ptr [rip+0x5565a], 0x0; add rsp, 0x8; ret; 
0x0000000009f957: and eax, 0x48ffffff; lea edi, [rip+0x14f5de]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000014d937: and eax, 0x49000001; mov eax, [rbp+0xd0]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x00000000169d17: and eax, 0x4900053c; movsxd edx, [rbx+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166b57: and eax, 0x4900056c; movsxd edx, [rbx+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000034196: and eax, 0x4; movzx eax, ax; ret; 
0x0000000016b54e: and eax, 0x63490005; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000163347: and eax, 0x6400088b; mov dword ptr [rax], 0x26; mov eax, 0xffffffff; ret; 
0x00000000162c47: and eax, 0x64000892; mov dword ptr [rax], 0x26; mov eax, 0xffffffff; ret; 
0x000000000875aa: and eax, 0x6e0f4866; ret; 
0x000000000422c8: and eax, 0x7f800000; sub eax, 0x7f800000; shr eax, 0x1f; ret; 
0x000000000342e6: and eax, 0x7f; ret; 
0x000000000bc221: and eax, 0x7ff80000; div esi; mov eax, eax; ret; 
0x000000000bc1d7: and eax, 0x7ff80000; ret; 
0x00000000041bd2: and eax, 0x7fff; or eax, edx; mov [rsp+0x10], eax; fld st, tbyte ptr [rsp+0x8]; ret; 
0x00000000057c84: and eax, 0x7fffff; or esi, eax; or esi, edx; movd xmm0, esi; ret; 
0x0000000008cd86: and eax, 0x804; ret; 
0x000000000421e8: and eax, 0x80; ret; 
0x000000000df197: and eax, 0x85000646; sar byte ptr [rax+0x1a], 0xc6; add eax, 0x1100e6; add [rbx+rcx*4+0x3d], ecx; ret; 
0x00000000041c8b: and eax, 0x89668000; and al, 0xf0; mov qword ptr [rsp-0x18], 0x0; fld st, tbyte ptr [rsp-0x18]; ret; 
0x000000000340b6: and eax, 0x8; movzx eax, ax; ret; 
0x00000000042518: and eax, 0x8; ret; 
0x0000000009469b: and eax, 0xc; cmp eax, 0x4; je short 0x00000000000946a4; ret; 
0x0000000009482b: and eax, 0xc; pop rbx; ret; 
0x0000000008c17d: and eax, 0xe8001292; cmp bh, [rsi-0x6]; jmp qword ptr [rsi+0x2e]; 
0x00000000042407: and eax, 0xf0017a3; push rsi; add eax, 0x17a32e; mulss xmm0, [rip+0x17af72]; ret; 
0x00000000120047: and eax, 0xf7000cbe; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x0000000011fd47: and eax, 0xf7000cc1; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x0000000011fa47: and eax, 0xf7000cc4; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x0000000011f947: and eax, 0xf7000cc5; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x00000000118b47: and eax, 0xf7000d33; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x0000000010fd47: and eax, 0xf7000dc1; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x0000000010da47: and eax, 0xf7000de4; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x000000000e4447: and eax, 0xf700107a; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x000000000bc10c: and eax, 0xf; movsxd rcx, [rsi+rax*4]; add rcx, rsi; notrack jmp rcx; 
0x00000000102ac4: and eax, 0xf; ret; 
0x0000000014712f: and eax, 0xff00075a; xor eax, 0x75a17; lea r9, [rsp+0x2c]; call qword ptr [rax]; 
0x0000000018ea90: and eax, 0xff; and ecx, 0xff; sub eax, ecx; ret; 
0x0000000018e1c3: and eax, 0xffff; and ecx, 0xffff; sub eax, ecx; ret; 
0x0000000011371d: and eax, 0xffffeff0; or esi, eax; xor eax, eax; mov [rdi+0x8], esi; ret; 
0x0000000011eeba: and eax, 0xfffff000; or eax, edx; ret; 
0x0000000012fb3a: and eax, 0xffffff; ret; 
0x000000001158c1: and eax, 0xfffffff0; add eax, 0x26; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000013b417: and eax, 0xfffffff8; add eax, 0x10; ret; 
0x000000001482bf: and eax, 0xfffffffc; and edx, 0xfffffffc; lea esi, [rax+rdx+0x28]; mov rax, [rdi+0x8]; call qword ptr [rax+0x30]; 
0x00000000094dc0: and eax, 0xfffffffd; mov [rdi+0x8], eax; xor eax, eax; ret; 
0x00000000156c56: and eax, 0xffffffff; mov [rsp], rax; mov rax, [rbp+0x8]; call qword ptr [rax+0x8]; 
0x00000000148a9f: and eax, [rax]; add [rax], al; add [rax], al; add [rcx+rcx*4-0x19], cl; call qword ptr [rax+0x28]; 
0x00000000172c75: and eax, [rax]; add [rbp-0x77], cl; ret far; 
0x00000000148abf: and eax, [rax]; add [rcx+rcx*4-0x19], cl; call qword ptr [rax+0x20]; 
0x00000000148b16: and eax, [rax]; add [rcx+rcx*4-0x19], cl; call qword ptr [rax+0x28]; 
0x000000000c7a10: and eax, [rax]; add dh, dh; ret; 
0x000000001138d9: and eax, [rcx+rcx*4-0x40]; movups [rsp+0x11], xmm0; syscall; 
0x0000000009f16d: and eax, [rcx]; add [rax-0x73], cl; adc eax, 0xf18e9; cmovne rax, rdx; ret; 
0x0000000011faf5: and eax, [rcx]; add [rax], al; syscall; 
0x0000000009cdde: and eax, [rcx]; mov [rbp], rax; test rax, rax; je 0x000000000009cec0; call rax; 
0x000000001785e9: and eax, [rdx]; add [rax], al; ret; 
0x000000000b1932: and eax, ecx; je 0x00000000000b1b00; bsr rax, rax; add rax, rdi; ret; 
0x00000000127c10: and eax, ecx; mov [rsp+0x20], cl; mov [rsp+0x1f], al; call qword ptr [r12+0x28]; 
0x00000000041b53: and eax, ecx; ret; 
0x00000000192b69: and eax, edi; mov rdi, 0x101010101010101; imul rax, rdi; shr rax, 0x38; ret; 
0x0000000011ef33: and eax, edi; or rax, rsi; ret; 
0x0000000004218e: and eax, edx; mov rdx, 0x3fe0000000000000; or rax, rdx; movq xmm0, rax; ret; 
0x00000000041fdc: and eax, edx; movq xmm1, rax; mov [rdi], rax; subsd xmm0, xmm1; ret; 
0x00000000041ed3: and eax, edx; ret; 
0x00000000041f14: and eax, edx; sub rax, rdx; shr rax, 0x3f; ret; 
0x000000000344c1: and eax, esi; ret; 
0x0000000010e14b: and ebp, ebx; or eax, 0x64d8f700; mov [rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000087d51: and ebp, edi; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x00000000087dad: and ebp, edi; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000015d8b2: and ebp, edi; jmp qword ptr [rsi+0x66]; 
0x000000000ee48f: and ebx, 0x8; je short 0x00000000000ee427; pop rbx; ret; 
0x00000000094636: and ebx, 0xffffffbb; cmp r11d, 0xa; je short 0x0000000000094640; ret; 
0x00000000085944: and ebx, [rbx+0x4c]; mov eax, eax; pop rbp; pop r12; ret; 
0x0000000014197d: and ebx, [rbx+0x5d]; pop r12; ret; 
0x000000000bdfb9: and ebx, [rcx]; add [rax], eax; lea rdx, [rip+0x116fc]; cmovne rax, rdx; ret; 
0x00000000121d31: and ebx, ebp; or al, 0x0; add word ptr [rdx+rax*2], 0x1; ret; 
0x0000000012fc18: and ebx, esi; call far fword ptr [rax+0x4c]; 
0x000000000bc158: and ecx, 0x3fc00; cmp edx, 0xff; cmove rax, rcx; ret; 
0x00000000047da6: and ecx, 0x3ff; xor eax, ecx; ret; 
0x000000000ee43e: and ecx, 0x80; cmovne eax, edx; pop rbx; ret; 
0x0000000012da5b: and ecx, 0x8; lea rax, [rip+0x3830b]; lea rdx, [rip+0x3d894]; cmovne rax, rdx; ret; 
0x0000000012d8db: and ecx, 0x8; lea rax, [rip+0x384ab]; lea rdx, [rip+0x3da34]; cmovne rax, rdx; ret; 
0x0000000012d99b: and ecx, 0x8; lea rax, [rip+0x3adcb]; lea rdx, [rip+0x40464]; cmovne rax, rdx; ret; 
0x000000000a09db: and ecx, 0x8; lea rax, [rip+0xc53bb]; lea rdx, [rip+0xca944]; cmovne rax, rdx; ret; 
0x000000000a066b: and ecx, 0x8; lea rax, [rip+0xc570b]; lea rdx, [rip+0xcac94]; cmovne rax, rdx; ret; 
0x000000000a050b: and ecx, 0x8; lea rax, [rip+0xc826b]; lea rdx, [rip+0xcd904]; cmovne rax, rdx; ret; 
0x0000000018ea95: and ecx, 0xff; sub eax, ecx; ret; 
0x0000000018e1c8: and ecx, 0xffff; sub eax, ecx; ret; 
0x000000000e8d6c: and ecx, [rax-0x73]; xor eax, 0xc7f30; movsxd rax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x000000000440fc: and ecx, [rbp+0x15890150]; cmpsb [rsi], [rdi]; sbb byte ptr [rdx], 0x0; ret; 
0x000000000d005c: and ecx, [rcx+rcx*4-0x20]; pop r12; ret; 
0x00000000095805: and ecx, [rcx+rcx*4-0x20]; pop rbx; pop rbp; pop r12; ret; 
0x00000000116f04: and ecx, [rcx+rcx*4-0x40]; mov byte ptr [rsi-0x1], 0x0; ret; 
0x00000000123392: and ecx, [rsi+0x10]; lea rcx, [rsi+rcx*4]; add eax, [rcx+rdx]; ret; 
0x0000000018a247: and ecx, ebp; ret; 
0x00000000042113: and ecx, edx; or rax, rcx; movq xmm0, rax; mulsd xmm0, [rip+0x17abcb]; ret; 
0x0000000004206f: and ecx, edx; or rcx, rax; movq xmm0, rcx; ret; 
0x00000000102a6a: and ecx, esi; cmp ecx, [rax-0xc]; jne short 0x0000000000102a60; mov eax, [rdx+0x8]; ret; 
0x00000000197177: and edi, 0x20; je short 0x000000000019718c; movss xmm0, [rip+0x261fc]; divss xmm0, [rip+0x27508]; ret; 
0x000000000342f6: and edi, 0xffffff80; sete al; ret; 
0x00000000116d7e: and edi, 0xfffffff0; add edi, 0x26; mov fs:[rax], edi; mov eax, 0xffffffff; ret; 
0x00000000052b59: and edi, [rbx+0x2ee80019]; ret far; 
0x000000000c40a2: and edi, ecx; dec dword ptr [rax-0x7d]; ret; 
0x0000000003006c: and edi, edi; jmp qword ptr [rax+rcx*2-0x75]; 
0x000000000ee43b: and edx, 0x1; and ecx, 0x80; cmovne eax, edx; pop rbx; ret; 
0x0000000008ad73: and edx, 0x1; mov eax, edx; ret; 
0x000000000ec4d0: and edx, 0x4; je short 0x00000000000ec46c; mov byte ptr [rdi+0x8], 0x1e; mov eax, 0x2; ret; 
0x0000000014adaf: and edx, 0x7f; movzx eax, byte ptr [rax+rdx]; mov [rdi+0x7], al; ret; 
0x00000000047cc7: and edx, 0x7fffffff; mov [rax], edx; mov [rsi], edx; mov eax, r8d; ret; 
0x00000000041d33: and edx, 0x7fffffff; or edx, esi; je 0x0000000000041c88; ret; 
0x000000000422ad: and edx, 0x7fffffff; sub eax, edx; shr eax, 0x1f; ret; 
0x0000000012fb23: and edx, 0xc0000000; cmp edx, 0x80000000; cmovne eax, edi; ret; 
0x0000000012fbb1: and edx, 0xc0000000; shr eax, 0x10; cmp edx, 0x80000000; cmovne eax, edi; ret; 
0x000000000bc19e: and edx, 0xf; movsxd rax, [rsi+rdx*4]; add rax, rsi; notrack jmp rax; 
0x0000000011eeb4: and edx, 0xfff; and eax, 0xfffff000; or eax, edx; ret; 
0x000000001482c2: and edx, 0xfffffffc; lea esi, [rax+rdx+0x28]; mov rax, [rdi+0x8]; call qword ptr [rax+0x30]; 
0x0000000010d32e: and edx, [rax-0x9ce2dcf]; mov rdi, rbp; mov eax, 0x135; syscall; 
0x000000000ba09d: and edx, [rdi+rcx]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000009f7f9: and edx, [rdi-0x72b80000]; adc eax, 0xd6fbc; cmovne rax, rdx; ret; 
0x00000000041ffb: and edx, eax; mov [rdi], rdx; ret; 
0x00000000041f8c: and edx, eax; movq xmm0, rdx; ret; 
0x0000000014604a: and esi, 0x7; movsxd rax, [rcx+rsi*4]; shr rdx, 0x3; add rax, rcx; notrack jmp rax; 
0x00000000042360: and esi, 0x80000000; mov [rdi], esi; ret; 
0x00000000042390: and esi, 0x80000000; movd xmm0, esi; ret; 
0x0000000004232d: and esi, 0x80000000; movss [rdi], xmm0; movd xmm0, esi; ret; 
0x000000000d4d03: and esi, 0x80402000; call qword ptr [rax]; 
0x000000000423e6: and esi, 0x807fffff; shl eax, 0x17; or esi, eax; movd xmm0, esi; ret; 
0x00000000057cf0: and esi, 0xd6097fff; mov [rsp-0x18], rax; mov [rsp-0x10], si; fld st, tbyte ptr [rsp-0x18]; ret; 
0x0000000012fb4c: and esi, 0xffffff; mov eax, edi; or eax, esi; bswap eax; ret; 
0x000000001483bb: and esi, 0xfffffffc; call qword ptr [rax+0x30]; 
0x00000000114285: and esi, [rcx]; neg byte ptr [rbx+0x31]; call far fword ptr [rbp+0x41]; 
0x00000000033e24: and esi, [rdi+0x10]; lea rdx, [rdi+rsi*4]; mov r8d, [rdx+rax]; mov eax, r8d; ret; 
0x0000000012313a: and esi, [rdx+0x10]; lea rdx, [rdx+rsi*4]; add eax, [rdx+rcx]; ret; 
0x000000000b1bc2: and esi, eax; je 0x00000000000b1b00; bsr rax, rsi; add rax, rdi; ret; 
0x000000001401cc: and esi, ebp; jmp qword ptr [rsi+0xf]; 
0x00000000151c7b: and esi, ebx; std; call qword ptr [rax-0x5e1f00d]; 
0x000000000b19cc: and esi, ecx; je 0x00000000000b1b00; bsr rsi, rsi; lea rax, [rdi+rsi]; ret; 
0x000000000b7e56: and r11b, r8b; nop [rax]; ret; 
0x00000000094635: and r11d, 0xffffffbb; cmp r11d, 0xa; je short 0x0000000000094640; ret; 
0x00000000122c6f: and r8d, 0x1; mov eax, r8d; ret; 
0x0000000012da5a: and r9d, 0x8; lea rax, [rip+0x3830b]; lea rdx, [rip+0x3d894]; cmovne rax, rdx; ret; 
0x0000000012d8da: and r9d, 0x8; lea rax, [rip+0x384ab]; lea rdx, [rip+0x3da34]; cmovne rax, rdx; ret; 
0x0000000012d99a: and r9d, 0x8; lea rax, [rip+0x3adcb]; lea rdx, [rip+0x40464]; cmovne rax, rdx; ret; 
0x000000000a09da: and r9d, 0x8; lea rax, [rip+0xc53bb]; lea rdx, [rip+0xca944]; cmovne rax, rdx; ret; 
0x000000000a066a: and r9d, 0x8; lea rax, [rip+0xc570b]; lea rdx, [rip+0xcac94]; cmovne rax, rdx; ret; 
0x000000000a050a: and r9d, 0x8; lea rax, [rip+0xc826b]; lea rdx, [rip+0xcd904]; cmovne rax, rdx; ret; 
0x000000000b1931: and rax, rcx; je 0x00000000000b1b00; bsr rax, rax; add rax, rdi; ret; 
0x00000000192b68: and rax, rdi; mov rdi, 0x101010101010101; imul rax, rdi; shr rax, 0x38; ret; 
0x0000000011ef32: and rax, rdi; or rax, rsi; ret; 
0x0000000004218d: and rax, rdx; mov rdx, 0x3fe0000000000000; or rax, rdx; movq xmm0, rax; ret; 
0x00000000041fdb: and rax, rdx; movq xmm1, rax; mov [rdi], rax; subsd xmm0, xmm1; ret; 
0x00000000041f13: and rax, rdx; sub rax, rdx; shr rax, 0x3f; ret; 
0x00000000042112: and rcx, rdx; or rax, rcx; movq xmm0, rax; mulsd xmm0, [rip+0x17abcb]; ret; 
0x0000000004206e: and rcx, rdx; or rcx, rax; movq xmm0, rcx; ret; 
0x00000000041ffa: and rdx, rax; mov [rdi], rdx; ret; 
0x00000000041f8b: and rdx, rax; movq xmm0, rdx; ret; 
0x000000000b1bc1: and rsi, rax; je 0x00000000000b1b00; bsr rax, rsi; add rax, rdi; ret; 
0x000000000b19cb: and rsi, rcx; je 0x00000000000b1b00; bsr rsi, rsi; lea rax, [rdi+rsi]; ret; 
0x000000000422ef: andnps xmm3, xmm1; orps xmm0, xmm3; ret; 
0x00000000041f24: andpd xmm0, [rip+0x17a7c4]; andpd xmm1, [rip+0x17a7ac]; orpd xmm0, xmm1; ret; 
0x000000000420a6: andpd xmm1, [rip+0x17a632]; movsd xmm0, [rip+0x17ac2a]; orpd xmm1, [rip+0x17a642]; mulsd xmm0, xmm1; ret; 
0x00000000042080: andpd xmm1, [rip+0x17a658]; movsd xmm0, [rip+0x17ac58]; orpd xmm1, [rip+0x17a678]; mulsd xmm0, xmm1; ret; 
0x00000000041f2c: andpd xmm1, [rip+0x17a7ac]; orpd xmm0, xmm1; ret; 
0x00000000042429: andps xmm0, [rip+0x17a300]; orps xmm0, [rip+0x17a2e9]; mulss xmm0, [rip+0x17af49]; ret; 
0x00000000042404: andps xmm0, [rip+0x17a325]; orps xmm0, [rip+0x17a32e]; mulss xmm0, [rip+0x17af72]; ret; 
0x00000000041f25: andps xmm0, [rip+0x17a7c4]; andpd xmm1, [rip+0x17a7ac]; orpd xmm0, xmm1; ret; 
0x000000000422ec: andps xmm0, xmm3; andnps xmm3, xmm1; orps xmm0, xmm3; ret; 
0x000000000420a7: andps xmm1, [rip+0x17a632]; movsd xmm0, [rip+0x17ac2a]; orpd xmm1, [rip+0x17a642]; mulsd xmm0, xmm1; ret; 
0x00000000042081: andps xmm1, [rip+0x17a658]; movsd xmm0, [rip+0x17ac58]; orpd xmm1, [rip+0x17a678]; mulsd xmm0, xmm1; ret; 
0x00000000041f2d: andps xmm1, [rip+0x17a7ac]; orpd xmm0, xmm1; ret; 
0x00000000088aa5: bnd call qword ptr [rax+0x70]; 
0x0000000012e950: bnd call qword ptr [rax-0x18]; 
0x00000000090bcb: bnd call qword ptr [rbp+0x70]; 
0x00000000074aa3: bnd call qword ptr [rbx+0x38]; 
0x000000001673fc: bnd jb short 0x0000000000167407; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001674ac: bnd jb short 0x00000000001674b7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000169ddc: bnd jb short 0x0000000000169de7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000169e8c: bnd jb short 0x0000000000169e97; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000041d3a: bnd je 0x0000000000041c88; ret; 
0x000000000a8839: bnd je short 0x00000000000a8830; ret; 
0x000000000bdfe8: bnd je short 0x00000000000bdfef; test edx, edx; jne short 0x00000000000bdfe0; ret; 
0x000000000fef04: bnd jmp qword ptr [rbx+rcx*4+0x4]; 
0x000000001096c4: bnd jmp qword ptr [rsi+0x2e]; 
0x00000000106ce3: bnd jmp qword ptr [rsi+0x66]; 
0x000000000f83e5: bnd jmp qword ptr [rsi+0xf]; 
0x0000000012ac8a: bnd ret; 
0x000000001846c1: bsf eax, eax; add rax, 0x20; add rax, rdi; vzeroupper; ret; 
0x000000001846d1: bsf eax, eax; add rax, 0x40; add rax, rdi; vzeroupper; ret; 
0x000000001846ff: bsf eax, eax; add rax, 0x60; add rax, rdi; vzeroupper; ret; 
0x00000000188294: bsf eax, eax; add rax, rcx; add rax, rdi; vzeroupper; ret; 
0x000000000ac27a: bsf eax, eax; add rax, rdi; add rax, rcx; ret; 
0x00000000184766: bsf eax, eax; add rax, rdi; add rax, rcx; vzeroupper; ret; 
0x000000000ac190: bsf eax, eax; add rax, rdi; ret; 
0x000000001886f1: bsf eax, eax; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x000000001846b1: bsf eax, eax; add rax, rdi; vzeroupper; ret; 
0x000000000ac1a0: bsf eax, eax; lea rax, [rax+rdi+0x10]; ret; 
0x000000000ac1b0: bsf eax, eax; lea rax, [rax+rdi+0x20]; ret; 
0x000000000ac180: bsf eax, eax; lea rax, [rax+rdi-0x10]; ret; 
0x000000000ac0df: bsf eax, eax; lea rax, [rdi+rax+0x30]; ret; 
0x000000000b1717: bsf eax, eax; lea rax, [rdi+rax]; ret; 
0x000000000ac1c0: bsf eax, eax; sub rdx, rax; jbe short 0x00000000000ac200; add rax, rdi; ret; 
0x000000000ac1d0: bsf eax, eax; sub rdx, rax; jbe short 0x00000000000ac200; lea rax, [rdi+rax+0x10]; ret; 
0x000000000ac1e0: bsf eax, eax; sub rdx, rax; jbe short 0x00000000000ac200; lea rax, [rdi+rax+0x20]; ret; 
0x000000000ac1f0: bsf eax, eax; sub rdx, rax; jbe short 0x00000000000ac200; lea rax, [rdi+rax+0x30]; ret; 
0x000000000ce3b0: bsf eax, eax; sub rdx, rax; jbe short 0x00000000000ce3f0; add rax, rdi; ret; 
0x000000000ce3c0: bsf eax, eax; sub rdx, rax; jbe short 0x00000000000ce3f0; lea rax, [rdi+rax+0x10]; ret; 
0x000000000ce3d0: bsf eax, eax; sub rdx, rax; jbe short 0x00000000000ce3f0; lea rax, [rdi+rax+0x20]; ret; 
0x000000000ce3e0: bsf eax, eax; sub rdx, rax; jbe short 0x00000000000ce3f0; lea rax, [rdi+rax+0x30]; ret; 
0x000000000a06e9: bsf eax, edi; cmove eax, edx; add eax, 0x1; ret; 
0x000000000a070a: bsf eax, edi; cmove rax, rdx; add eax, 0x1; ret; 
0x000000000b1c1a: bsf eax, edx; ret; 
0x000000000cf767: bsf eax, edx; shr rax, 0x2; ret; 
0x000000000aa57a: bsf ecx, ecx; movzx eax, byte ptr [rax+rcx]; movzx edx, byte ptr [rdx+rcx]; sub eax, edx; ret; 
0x000000000aa640: bsf ecx, edi; movzx eax, byte ptr [rax+rcx]; movzx edx, byte ptr [rdx+rcx]; sub eax, edx; ret; 
0x000000000aa410: bsf edx, eax; movzx eax, byte ptr [rdi+rdx]; movzx edx, byte ptr [rsi+rdx]; sub eax, edx; ret; 
0x000000000b1d72: bsf edx, edx; add rax, rdx; sub rax, rdi; ret; 
0x000000000cf877: bsf edx, edx; add rax, rdx; sub rax, rdi; shr rax, 0x2; ret; 
0x000000000baaa1: bsf edx, edx; lea r11, [rip+0xf4a99]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000baa69: bsf edx, edx; lea r11, [rip+0xf4ad1]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000baa44: bsf edx, edx; lea r11, [rip+0xf4af6]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000baa27: bsf edx, edx; lea r11, [rip+0xf4b13]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000ba111: bsf edx, edx; lea r11, [rip+0xf53a9]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000ba0d9: bsf edx, edx; lea r11, [rip+0xf53e1]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000ba0b4: bsf edx, edx; lea r11, [rip+0xf5406]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000ba097: bsf edx, edx; lea r11, [rip+0xf5423]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8b4d: bsf edx, edx; lea r11, [rip+0xf6819]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8b24: bsf edx, edx; lea r11, [rip+0xf6842]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8441: bsf edx, edx; lea r11, [rip+0xf6e99]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8409: bsf edx, edx; lea r11, [rip+0xf6ed1]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b83e4: bsf edx, edx; lea r11, [rip+0xf6ef6]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b83c7: bsf edx, edx; lea r11, [rip+0xf6f13]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b747d: bsf edx, edx; lea r11, [rip+0xf7d09]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b7454: bsf edx, edx; lea r11, [rip+0xf7d32]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6e01: bsf edx, edx; lea r11, [rip+0xf82fd]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6dc9: bsf edx, edx; lea r11, [rip+0xf8335]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6da4: bsf edx, edx; lea r11, [rip+0xf835a]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6d87: bsf edx, edx; lea r11, [rip+0xf8377]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000aa3a1: bsf edx, edx; movzx ecx, byte ptr [rsi+rdx]; movzx eax, byte ptr [rdi+rdx]; sub eax, ecx; ret; 
0x000000000b1830: bsf rax, rax; lea rax, [rdi+rax]; ret; 
0x000000000a0709: bsf rax, rdi; cmove rax, rdx; add eax, 0x1; ret; 
0x000000000b1c62: bsf rax, rdx; ret; 
0x000000000cf766: bsf rax, rdx; shr rax, 0x2; ret; 
0x000000000aa579: bsf rcx, rcx; movzx eax, byte ptr [rax+rcx]; movzx edx, byte ptr [rdx+rcx]; sub eax, edx; ret; 
0x000000000aa63f: bsf rcx, rdi; movzx eax, byte ptr [rax+rcx]; movzx edx, byte ptr [rdx+rcx]; sub eax, edx; ret; 
0x000000000aa40f: bsf rdx, rax; movzx eax, byte ptr [rdi+rdx]; movzx edx, byte ptr [rsi+rdx]; sub eax, edx; ret; 
0x000000000b1d71: bsf rdx, rdx; add rax, rdx; sub rax, rdi; ret; 
0x000000000cf876: bsf rdx, rdx; add rax, rdx; sub rax, rdi; shr rax, 0x2; ret; 
0x000000000baaa0: bsf rdx, rdx; lea r11, [rip+0xf4a99]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000baa68: bsf rdx, rdx; lea r11, [rip+0xf4ad1]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000baa43: bsf rdx, rdx; lea r11, [rip+0xf4af6]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000baa26: bsf rdx, rdx; lea r11, [rip+0xf4b13]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000ba110: bsf rdx, rdx; lea r11, [rip+0xf53a9]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000ba0d8: bsf rdx, rdx; lea r11, [rip+0xf53e1]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000ba0b3: bsf rdx, rdx; lea r11, [rip+0xf5406]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000ba096: bsf rdx, rdx; lea r11, [rip+0xf5423]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8b4c: bsf rdx, rdx; lea r11, [rip+0xf6819]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8b23: bsf rdx, rdx; lea r11, [rip+0xf6842]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8440: bsf rdx, rdx; lea r11, [rip+0xf6e99]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8408: bsf rdx, rdx; lea r11, [rip+0xf6ed1]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b83e3: bsf rdx, rdx; lea r11, [rip+0xf6ef6]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b83c6: bsf rdx, rdx; lea r11, [rip+0xf6f13]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b747c: bsf rdx, rdx; lea r11, [rip+0xf7d09]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b7453: bsf rdx, rdx; lea r11, [rip+0xf7d32]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6e00: bsf rdx, rdx; lea r11, [rip+0xf82fd]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6dc8: bsf rdx, rdx; lea r11, [rip+0xf8335]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6da3: bsf rdx, rdx; lea r11, [rip+0xf835a]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6d86: bsf rdx, rdx; lea r11, [rip+0xf8377]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000aa3a0: bsf rdx, rdx; movzx ecx, byte ptr [rsi+rdx]; movzx eax, byte ptr [rdi+rdx]; sub eax, ecx; ret; 
0x00000000184a80: bsr eax, eax; add eax, 0x20; add rax, rdi; vzeroupper; ret; 
0x00000000184a90: bsr eax, eax; add eax, 0x40; add rax, rdi; vzeroupper; ret; 
0x00000000184aa0: bsr eax, eax; add eax, 0x60; add rax, rdi; ret; 
0x00000000184b6a: bsr eax, eax; add rax, rdi; add rax, r8; vzeroupper; ret; 
0x000000000ac796: bsr eax, eax; add rax, rdi; add rax, rsi; ret; 
0x000000000ac5c6: bsr eax, eax; add rax, rdi; ret; 
0x0000000018498f: bsr eax, eax; add rax, rdi; vzeroupper; ret; 
0x000000000ac670: bsr eax, eax; lea rax, [rax+rdi+0x10]; ret; 
0x000000000ac680: bsr eax, eax; lea rax, [rax+rdi+0x20]; ret; 
0x000000000ac690: bsr eax, eax; lea rax, [rax+rdi+0x30]; ret; 
0x00000000188551: bsr eax, eax; lea rax, [rdi+rax-0x20]; vzeroupper; ret; 
0x000000000b1bcb: bsr eax, esi; add rax, rdi; ret; 
0x000000000b1ad9: bsr esi, esi; lea rax, [rcx+rsi]; ret; 
0x000000000b19d5: bsr esi, esi; lea rax, [rdi+rsi]; ret; 
0x000000000b193a: bsr rax, rax; add rax, rdi; ret; 
0x000000000b1bca: bsr rax, rsi; add rax, rdi; ret; 
0x000000000b1ad8: bsr rsi, rsi; lea rax, [rcx+rsi]; ret; 
0x000000000b1ad6: bsr rsi, rsi; lea rax, [rcx+rsi]; ret; 
0x000000000b19d4: bsr rsi, rsi; lea rax, [rdi+rsi]; ret; 
0x0000000014fe3e: bswap eax; mov [r8+0x48], eax; mov eax, 0x1; ret; 
0x0000000014fe9b: bswap eax; mov [r8+0x54], eax; mov eax, 0x1; ret; 
0x0000000014fe6b: bswap eax; mov [r8+0x58], eax; mov eax, 0x1; ret; 
0x0000000014d05e: bswap eax; mov [r8+0xa8], eax; mov eax, 0x1; ret; 
0x0000000014d0bb: bswap eax; mov [r8+0xb4], eax; mov eax, 0x1; ret; 
0x0000000014d08b: bswap eax; mov [r8+0xb8], eax; mov eax, 0x1; ret; 
0x0000000015079a: bswap eax; mov [rdx+0x10], eax; mov eax, 0x1; ret; 
0x000000001506a2: bswap eax; mov [rdx+0xc], eax; mov eax, 0x1; ret; 
0x0000000015075d: bswap eax; mov [rdx], eax; mov eax, 0x1; ret; 
0x000000001498d8: bswap eax; mov [rdx], eax; mov edx, ebx; call qword ptr [r13+0x10]; 
0x0000000014d047: bswap eax; mov eax, eax; mov [rdx], rax; mov eax, 0x1; ret; 
0x0000000012faf6: bswap eax; ret; 
0x0000000014ff6c: bswap ebp; call qword ptr [rax+0x18]; 
0x0000000014d1a4: bswap ebp; mov ebp, ebp; call qword ptr [rax+0x18]; 
0x00000000184d4e: bswap ecx; mov al, [rdi+rdx-0x1]; mov cl, [rsi+rdx-0x1]; sub eax, ecx; ret; 
0x00000000157475: bswap edx; mov [rax-0x4], edx; mov [rdi+0x18], rax; mov eax, r8d; ret; 
0x000000001492ce: bswap edx; mov [rcx], edx; mov edx, eax; call qword ptr [rbx+0x10]; 
0x000000001574b5: bswap edx; mov [rsi], edx; mov [rdi+0x18], rax; mov eax, r8d; ret; 
0x0000000014fe22: bswap rax; mov eax, eax; mov [rdx], rax; mov eax, 0x1; ret; 
0x0000000014ff6b: bswap rbp; call qword ptr [rax+0x18]; 
0x00000000041ef4: btr edx, 0x3f; sub rax, rdx; shr rax, 0x3f; ret; 
0x00000000041ef3: btr rdx, 0x3f; sub rax, rdx; shr rax, 0x3f; ret; 
0x00000000057d91: bts eax, 0x30; mov [rdi+0x8], rax; mov eax, 0x2; ret; 
0x000000000b1f33: bts edx, ebx; bsf rdx, rdx; add rax, rdx; sub rax, rdi; ret; 
0x00000000057b81: bts esi, 0x34; mov eax, 0x1; mov [rdi], rsi; ret; 
0x00000000057d90: bts rax, 0x30; mov [rdi+0x8], rax; mov eax, 0x2; ret; 
0x000000000b1f32: bts rdx, r11; bsf rdx, rdx; add rax, rdx; sub rax, rdi; ret; 
0x00000000057b80: bts rsi, 0x34; mov eax, 0x1; mov [rdi], rsi; ret; 
0x00000000115fb3: call far fword ptr [r8+rax*4+0x3e]; 
0x00000000116007: call far fword ptr [r8+rcx*2-0x73]; 
0x00000000075137: call far fword ptr [rax+0x44]; 
0x0000000007757f: call far fword ptr [rax+0x48]; 
0x00000000134c03: call far fword ptr [rax+0x4c]; 
0x0000000012fc19: call far fword ptr [rax+0x4c]; 
0x0000000011923c: call far fword ptr [rax+0x4c]; 
0x000000001002e4: call far fword ptr [rax+0x5a]; 
0x00000000041e6b: call far fword ptr [rax+0x5a]; 
0x00000000036955: call far fword ptr [rax+0x74]; 
0x00000000115fb4: call far fword ptr [rax+rax*4+0x3e]; 
0x0000000006c823: call far fword ptr [rax+rax]; 
0x00000000116008: call far fword ptr [rax+rcx*2-0x73]; 
0x000000000da84a: call far fword ptr [rax-0x48]; 
0x00000000106c08: call far fword ptr [rax-0x72b7dd8c]; 
0x00000000028068: call far fword ptr [rax]; 
0x000000000326ad: call far fword ptr [rbp+0x18]; 
0x000000000a096d: call far fword ptr [rbp+0x31]; 
0x00000000046572: call far fword ptr [rbp+0x41]; 
0x00000000198c13: call far fword ptr [rbp+0x48]; 
0x00000000041060: call far fword ptr [rbp+0x4c]; 
0x000000000e8f41: call far fword ptr [rbp+0xf]; 
0x0000000014860d: call far fword ptr [rbp+rbp*8+0x438948ff]; 
0x000000000e8f4a: call far fword ptr [rbp+rsi*2+0xb]; 
0x000000000412f2: call far fword ptr [rbp-0x3d]; 
0x000000000f59c8: call far fword ptr [rbx+0x31]; 
0x000000000f2437: call far fword ptr [rbx+0x31]; 
0x000000000e3930: call far fword ptr [rbx+0x41]; 
0x00000000084dbe: call far fword ptr [rbx+0x44]; 
0x00000000090e9c: call far fword ptr [rbx+0x48]; 
0x00000000082922: call far fword ptr [rbx+0x4c]; 
0x000000000f1f80: call far fword ptr [rbx+0x4c]; 
0x0000000002f43f: call far fword ptr [rbx+0x5d]; 
0x000000000b987d: call far fword ptr [rbx+0xf]; 
0x0000000008e697: call far fword ptr [rbx-0x3d]; 
0x00000000134b22: call far fword ptr [rbx-0x48]; 
0x0000000015da9d: call far fword ptr [rbx-0x5]; 
0x0000000010c167: call far fword ptr [rbx-0x72b7fff6]; 
0x000000000473cb: call far fword ptr [rbx-0x7b]; 
0x00000000106bf1: call far fword ptr [rbx-0x7c998c]; 
0x0000000007672d: call far fword ptr [rcx+0x14]; 
0x000000000dbeb7: call far fword ptr [rcx+0x25ffc148]; 
0x000000000d1864: call far fword ptr [rcx+0x5e]; 
0x00000000106bff: call far fword ptr [rcx+0xa8840f]; 
0x000000000748bd: call far fword ptr [rcx-0x72b7ffed]; 
0x000000000eb926: call far fword ptr [rdi+0x41]; 
0x000000001174a5: call far fword ptr [rdi+0x4c]; 
0x00000000108eb2: call far fword ptr [rdi+0x74]; 
0x000000000d9170: call far fword ptr [rdi+0xf]; 
0x00000000106be8: call far fword ptr [rdi+rcx+0xb184]; 
0x0000000010b2f1: call far fword ptr [rdi+rcx-0x7b]; 
0x000000000fcc4f: call far fword ptr [rdi+rcx-0x7c]; 
0x00000000045e22: call far fword ptr [rdi]; 
0x0000000009f3d8: call far fword ptr [rdx+0x31]; 
0x000000000d1781: call far fword ptr [rdx+0x59]; 
0x0000000011931c: call far fword ptr [rdx+0x5e]; 
0x00000000106bf6: call far fword ptr [rdx+0xaa840f]; 
0x000000000af96e: call far fword ptr [rdx]; 
0x00000000135c08: call far fword ptr [rsi+0x5f]; 
0x000000000df168: call far fword ptr [rsi+0x5f]; 
0x000000000ec280: call far fword ptr [rsi-0x75]; 
0x000000000ec281: call far fword ptr [rsi-0x75]; 
0x000000000a4539: call far fword ptr [rsi]; 
0x000000000fce92: call far fword ptr [rsp+rsi*2+0x42]; 
0x000000000e74cf: call far fword ptr [rsp+rsi*2-0x13]; 
0x000000000e784b: call far fword ptr [rsp+rsi*2-0xf]; 
0x000000000f062b: call far fword ptr [rsp+rsi*2]; 
0x00000000028093: call far tbyte ptr [r8]; 
0x0000000012aa33: call qword ptr [r10+0x28]; 
0x00000000075b80: call qword ptr [r11+rax*8-0x40]; 
0x000000000934dd: call qword ptr [r12+0x18]; 
0x000000000e638c: call qword ptr [r12+0x20]; 
0x000000000e5fe0: call qword ptr [r12+0x28]; 
0x000000000e63c0: call qword ptr [r12+0x30]; 
0x0000000007b321: call qword ptr [r12+0x38]; 
0x00000000100f86: call qword ptr [r12+0x40]; 
0x00000000090891: call qword ptr [r12+0x48]; 
0x0000000008f500: call qword ptr [r12+0x80]; 
0x0000000008fe88: call qword ptr [r12+0x88]; 
0x0000000015f1a9: call qword ptr [r12+0xf08]; 
0x0000000015f309: call qword ptr [r12+0xf10]; 
0x0000000008bdf9: call qword ptr [r13+0x10]; 
0x0000000008f9e7: call qword ptr [r13+0x20]; 
0x0000000012a066: call qword ptr [r13+0x28]; 
0x00000000073d35: call qword ptr [r13+0x38]; 
0x00000000084ad0: call qword ptr [r13+0x48]; 
0x00000000084c3f: call qword ptr [r13+0x58]; 
0x00000000092551: call qword ptr [r13+0x60]; 
0x00000000089553: call qword ptr [r13+0x80]; 
0x0000000008f984: call qword ptr [r13+0x90]; 
0x000000000967e4: call qword ptr [r13]; 
0x00000000079f7f: call qword ptr [r14+0x38]; 
0x00000000084825: call qword ptr [r14+0x48]; 
0x0000000009097d: call qword ptr [r14+0x78]; 
0x0000000008926d: call qword ptr [r14+0x80]; 
0x000000000891a1: call qword ptr [r14+0x90]; 
0x000000000932ee: call qword ptr [r15+0x18]; 
0x0000000007bbcd: call qword ptr [r15+0x38]; 
0x0000000008e767: call qword ptr [r15+0x40]; 
0x0000000008eb87: call qword ptr [r15+0x80]; 
0x0000000008e6fe: call qword ptr [r15+0x90]; 
0x0000000015f3b1: call qword ptr [r15+0xf08]; 
0x0000000015f539: call qword ptr [r15+0xf10]; 
0x0000000007d85e: call qword ptr [r8+0x38]; 
0x00000000146a8c: call qword ptr [rax+0x10]; 
0x00000000121b7e: call qword ptr [rax+0x13d8b48]; 
0x0000000008089e: call qword ptr [rax+0x1428d4c]; 
0x0000000015b7ae: call qword ptr [rax+0x144c8348]; 
0x000000001171ae: call qword ptr [rax+0x145be0f]; 
0x0000000002538e: call qword ptr [rax+0x14673945]; 
0x0000000013ec1e: call qword ptr [rax+0x1578d48]; 
0x000000000ceace: call qword ptr [rax+0x166f0ff3]; 
0x0000000011c91e: call qword ptr [rax+0x17f8d4c]; 
0x0000000005370e: call qword ptr [rax+0x18247c83]; 
0x000000000eea0e: call qword ptr [rax+0x18738b4c]; 
0x00000000066d6d: call qword ptr [rax+0x18]; 
0x00000000092050: call qword ptr [rax+0x18]; 
0x0000000015ea2e: call qword ptr [rax+0x1903c764]; 
0x00000000042f4e: call qword ptr [rax+0x19058b48]; 
0x00000000081a8e: call qword ptr [rax+0x1b9]; 
0x0000000009307e: call qword ptr [rax+0x1b9c031]; 
0x0000000012556e: call qword ptr [rax+0x1ba]; 
0x00000000095d3e: call qword ptr [rax+0x1bac031]; 
0x0000000007842e: call qword ptr [rax+0x1bb]; 
0x0000000008427e: call qword ptr [rax+0x1be]; 
0x000000000cb8ce: call qword ptr [rax+0x1c1c748]; 
0x000000000f1f3e: call qword ptr [rax+0x1c38348]; 
0x000000000d0ea2: call qword ptr [rax+0x1e0]; 
0x0000000015f7db: call qword ptr [rax+0x1e8]; 
0x0000000015f2d8: call qword ptr [rax+0x1f8]; 
0x0000000019477e: call qword ptr [rax+0x1fe8349]; 
0x0000000005390e: call qword ptr [rax+0x20247c83]; 
0x0000000012a9be: call qword ptr [rax+0x204d8b4d]; 
0x00000000089ede: call qword ptr [rax+0x20758b48]; 
0x00000000087a9a: call qword ptr [rax+0x20]; 
0x0000000009c78d: call qword ptr [rax+0x21d8948]; 
0x0000000006186e: call qword ptr [rax+0x222ebe8]; 
0x0000000014ac1e: call qword ptr [rax+0x24048b4c]; 
0x0000000008db1e: call qword ptr [rax+0x2404c641]; 
0x00000000194e9e: call qword ptr [rax+0x242c8b4c]; 
0x0000000005718e: call qword ptr [rax+0x24348b48]; 
0x000000001154ce: call qword ptr [rax+0x24446348]; 
0x000000000924ee: call qword ptr [rax+0x24448948]; 
0x000000000cd16e: call qword ptr [rax+0x24448b48]; 
0x000000000f60ae: call qword ptr [rax+0x244c894c]; 
0x000000000eb2ee: call qword ptr [rax+0x244c8b44]; 
0x0000000013fc2e: call qword ptr [rax+0x24548b44]; 
0x000000000eb4ee: call qword ptr [rax+0x24548b4c]; 
0x000000000e965e: call qword ptr [rax+0x24648b44]; 
0x00000000147e7e: call qword ptr [rax+0x24648b4c]; 
0x0000000008747e: call qword ptr [rax+0x246c294c]; 
0x000000000fde4e: call qword ptr [rax+0x246c8944]; 
0x000000001450de: call qword ptr [rax+0x24743948]; 
0x0000000003ce6e: call qword ptr [rax+0x24748b4d]; 
0x00000000030a2e: call qword ptr [rax+0x24748d4c]; 
0x00000000131dbe: call qword ptr [rax+0x247c8348]; 
0x000000000e97ce: call qword ptr [rax+0x247c8b44]; 
0x000000000fe90e: call qword ptr [rax+0x247c8b48]; 
0x00000000053e6e: call qword ptr [rax+0x24948b48]; 
0x000000000deebe: call qword ptr [rax+0x24bc8348]; 
0x0000000009ad8e: call qword ptr [rax+0x25048b64]; 
0x0000000005ffde: call qword ptr [rax+0x28458b48]; 
0x0000000007ecce: call qword ptr [rax+0x28858948]; 
0x0000000007972e: call qword ptr [rax+0x288d8944]; 
0x0000000014699d: call qword ptr [rax+0x28]; 
0x000000000a21ee: call qword ptr [rax+0x28c48348]; 
0x0000000009963e: call qword ptr [rax+0x29058b48]; 
0x00000000195ace: call qword ptr [rax+0x2c247c8b]; 
0x00000000146e9e: call qword ptr [rax+0x2e66c35d]; 
0x000000000e4c6e: call qword ptr [rax+0x2ff88348]; 
0x0000000011690e: call qword ptr [rax+0x305c02c7]; 
0x0000000019742e: call qword ptr [rax+0x30658b4c]; 
0x000000001482cd: call qword ptr [rax+0x30]; 
0x000000000766de: call qword ptr [rax+0x30be]; 
0x0000000019474e: call qword ptr [rax+0x31d08945]; 
0x0000000008960e: call qword ptr [rax+0x31ee8948]; 
0x000000001384ae: call qword ptr [rax+0x342444c7]; 
0x0000000014859e: call qword ptr [rax+0x38738b48]; 
0x00000000074cb5: call qword ptr [rax+0x38]; 
0x0000000011102e: call qword ptr [rax+0x39258b4c]; 
0x0000000014343e: call qword ptr [rax+0x3bb]; 
0x000000000f921e: call qword ptr [rax+0x3c8bf]; 
0x0000000014f5ee: call qword ptr [rax+0x3cbbe8]; 
0x000000000a137e: call qword ptr [rax+0x3d7c8d4b]; 
0x0000000019494e: call qword ptr [rax+0x3eec148]; 
0x0000000013d22e: call qword ptr [rax+0x3fe8366]; 
0x000000000ecfbe: call qword ptr [rax+0x40478b41]; 
0x0000000012cc9e: call qword ptr [rax+0x408d8b48]; 
0x0000000008f19a: call qword ptr [rax+0x40]; 
0x000000000c322e: call qword ptr [rax+0x40ba]; 
0x0000000009812e: call qword ptr [rax+0x413d8d48]; 
0x00000000178ace: call qword ptr [rax+0x416f0ff3]; 
0x0000000009c12e: call qword ptr [rax+0x41f0c031]; 
0x000000000c59de: call qword ptr [rax+0x41f5894d]; 
0x00000000178b4e: call qword ptr [rax+0x44318b48]; 
0x000000000877be: call qword ptr [rax+0x44a8d48]; 
0x00000000024abe: call qword ptr [rax+0x44c8348]; 
0x000000001585de: call qword ptr [rax+0x44ef8948]; 
0x00000000098a9e: call qword ptr [rax+0x4587c031]; 
0x0000000008371e: call qword ptr [rax+0x458b48]; 
0x000000000d5dee: call qword ptr [rax+0x45b60f41]; 
0x0000000005676e: call qword ptr [rax+0x48068b48]; 
0x000000000811de: call qword ptr [rax+0x48087e8b]; 
0x00000000096f7e: call qword ptr [rax+0x48098b48]; 
0x00000000038c1e: call qword ptr [rax+0x480ab60f]; 
0x0000000008793e: call qword ptr [rax+0x487d8348]; 
0x0000000005d7de: call qword ptr [rax+0x48858b48]; 
0x00000000076de7: call qword ptr [rax+0x48]; 
0x0000000004971e: call qword ptr [rax+0x48b60f41]; 
0x000000000f7f5e: call qword ptr [rax+0x48c48949]; 
0x0000000019496e: call qword ptr [rax+0x48c78948]; 
0x00000000088dae: call qword ptr [rax+0x48c7894c]; 
0x00000000195f0e: call qword ptr [rax+0x48c93145]; 
0x00000000109f3e: call qword ptr [rax+0x48dc8949]; 
0x0000000012178e: call qword ptr [rax+0x48e7894c]; 
0x0000000009b34e: call qword ptr [rax+0x48ed0148]; 
0x0000000012b7de: call qword ptr [rax+0x49058b48]; 
0x000000000e799e: call qword ptr [rax+0x49178b49]; 
0x0000000012877e: call qword ptr [rax+0x493a8841]; 
0x00000000195ede: call qword ptr [rax+0x49c04a8d]; 
0x000000001963ae: call qword ptr [rax+0x49f88948]; 
0x000000000e69ee: call qword ptr [rax+0x4b60f41]; 
0x000000000d5c9e: call qword ptr [rax+0x4be0f49]; 
0x0000000012b4ee: call qword ptr [rax+0x4cc2be0f]; 
0x000000000db1ae: call qword ptr [rax+0x4cc50149]; 
0x0000000008734e: call qword ptr [rax+0x4ce2894c]; 
0x00000000045a3e: call qword ptr [rax+0x4cee894c]; 
0x0000000009bd4d: call qword ptr [rax+0x4cef8948]; 
0x00000000096eae: call qword ptr [rax+0x4cef894c]; 
0x0000000002843e: call qword ptr [rax+0x4cf1894c]; 
0x000000001600ee: call qword ptr [rax+0x4d288b4c]; 
0x0000000019492e: call qword ptr [rax+0x4dc03145]; 
0x00000000107b3e: call qword ptr [rax+0x502444c7]; 
0x0000000009351e: call qword ptr [rax+0x50738b48]; 
0x0000000004cb2e: call qword ptr [rax+0x5100ff2]; 
0x0000000015f57e: call qword ptr [rax+0x51b60f41]; 
0x0000000004988e: call qword ptr [rax+0x56415741]; 
0x0000000005466e: call qword ptr [rax+0x587c031]; 
0x0000000003503e: call qword ptr [rax+0x58858b48]; 
0x00000000084c69: call qword ptr [rax+0x58]; 
0x0000000011697e: call qword ptr [rax+0x5c5cb941]; 
0x0000000005db8e: call qword ptr [rax+0x5c958b44]; 
0x000000000fce8e: call qword ptr [rax+0x5cff8041]; 
0x000000001498fe: call qword ptr [rax+0x5dc0315b]; 
0x000000000289de: call qword ptr [rax+0x5fa8341]; 
0x0000000002742e: call qword ptr [rax+0x5fd8341]; 
0x000000000c8efe: call qword ptr [rax+0x608d8b4c]; 
0x00000000073ebe: call qword ptr [rax+0x688d8b48]; 
0x000000000874eb: call qword ptr [rax+0x68]; 
0x000000000d3e6e: call qword ptr [rax+0x69358b4c]; 
0x00000000096b4e: call qword ptr [rax+0x6a3d8d48]; 
0x000000000e6f6e: call qword ptr [rax+0x6b60f41]; 
0x0000000014553e: call qword ptr [rax+0x70247c83]; 
0x00000000078b2e: call qword ptr [rax+0x709d894c]; 
0x00000000088aa6: call qword ptr [rax+0x70]; 
0x000000000252ce: call qword ptr [rax+0x70b58b48]; 
0x0000000015a35e: call qword ptr [rax+0x72a605c7]; 
0x0000000009aefe: call qword ptr [rax+0x74ff8548]; 
0x0000000014ebfe: call qword ptr [rax+0x75b60f41]; 
0x0000000002fc4e: call qword ptr [rax+0x76148d48]; 
0x0000000009617e: call qword ptr [rax+0x787c031]; 
0x0000000008f7d5: call qword ptr [rax+0x78]; 
0x000000000f55de: call qword ptr [rax+0x78a5634c]; 
0x0000000012a7be: call qword ptr [rax+0x78b58b48]; 
0x000000000e485e: call qword ptr [rax+0x7d00bd41]; 
0x00000000109ebe: call qword ptr [rax+0x7d80]; 
0x0000000019422e: call qword ptr [rax+0x7fffba]; 
0x0000000008eaa7: call qword ptr [rax+0x80]; 
0x0000000009e80e: call qword ptr [rax+0x8468b49]; 
0x000000000810ae: call qword ptr [rax+0x8578b44]; 
0x0000000007ef1e: call qword ptr [rax+0x8578b49]; 
0x0000000010f6de: call qword ptr [rax+0x8788141]; 
0x0000000014d33e: call qword ptr [rax+0x87b8348]; 
0x0000000010cc9c: call qword ptr [rax+0x88]; 
0x0000000012c7ee: call qword ptr [rax+0x88d8d4c]; 
0x0000000014693a: call qword ptr [rax+0x8]; 
0x00000000060dfe: call qword ptr [rax+0x8be]; 
0x0000000008e949: call qword ptr [rax+0x90]; 
0x0000000006c41e: call qword ptr [rax+0x9be48]; 
0x0000000011602e: call qword ptr [rax+0x9ff41c6]; 
0x00000000089e9e: call qword ptr [rax+0xc08d8b]; 
0x000000000613ce: call qword ptr [rax+0xc53b60f]; 
0x000000001869fe: call qword ptr [rax+0xea8149]; 
0x000000000fd7ae: call qword ptr [rax+0xf01ff83]; 
0x000000000b426e: call qword ptr [rax+0xf11280f]; 
0x00000000033bfe: call qword ptr [rax+0xf2e66c3]; 
0x000000000f24ee: call qword ptr [rax+0xf665741]; 
0x000000000571ee: call qword ptr [rax+0xf66c031]; 
0x000000000cec8e: call qword ptr [rax+0xf6f0ff3]; 
0x0000000011a65e: call qword ptr [rax+0xfc98548]; 
0x0000000013d5ce: call qword ptr [rax+0xfc9854d]; 
0x00000000158bde: call qword ptr [rax+0xfd28548]; 
0x00000000130f5e: call qword ptr [rax+0xfe48445]; 
0x0000000010b83e: call qword ptr [rax+0xfe48545]; 
0x00000000045a8e: call qword ptr [rax+0xfef894c]; 
0x0000000009168e: call qword ptr [rax+0xff0c889]; 
0x000000000fde6e: call qword ptr [rax+0xff68548]; 
0x0000000010efde: call qword ptr [rax+0xffb094c]; 
0x0000000009230e: call qword ptr [rax+0xffff883]; 
0x0000000005ede4: call qword ptr [rax+r8*8]; 
0x0000000007405a: call qword ptr [rax+r9*8]; 
0x0000000005ede5: call qword ptr [rax+rax*8]; 
0x0000000004a9fa: call qword ptr [rax+rax]; 
0x000000001038c6: call qword ptr [rax+rcx*2]; 
0x0000000007405b: call qword ptr [rax+rcx*8]; 
0x0000000009b4be: call qword ptr [rax-0x1076b370]; 
0x0000000005d5ae: call qword ptr [rax-0x1374a75]; 
0x000000001592de: call qword ptr [rax-0x140bf]; 
0x000000001500be: call qword ptr [rax-0x14cfbc75]; 
0x0000000011c68e: call qword ptr [rax-0x1600cebb]; 
0x0000000005bcee: call qword ptr [rax-0x161176b3]; 
0x0000000006175e: call qword ptr [rax-0x1612cebb]; 
0x000000000dda6e: call qword ptr [rax-0x161bcebb]; 
0x0000000010e47e: call qword ptr [rax-0x16fa74b8]; 
0x000000000f896e: call qword ptr [rax-0x170076b4]; 
0x0000000005ff4e: call qword ptr [rax-0x171076b8]; 
0x000000000e01be: call qword ptr [rax-0x171876b4]; 
0x00000000133cee: call qword ptr [rax-0x172076b8]; 
0x0000000016039e: call qword ptr [rax-0x172876b8]; 
0x00000000110cce: call qword ptr [rax-0x174a74b4]; 
0x0000000015388e: call qword ptr [rax-0x177776b8]; 
0x0000000009ba7e: call qword ptr [rax-0x1876b370]; 
0x0000000007d49a: call qword ptr [rax-0x18]; 
0x00000000076def: call qword ptr [rax-0x1]; 
0x000000000ea1de: call qword ptr [rax-0x1a76b7ab]; 
0x0000000008fd8e: call qword ptr [rax-0x220418]; 
0x0000000008ff6e: call qword ptr [rax-0x23e418]; 
0x000000001945be: call qword ptr [rax-0x2942f0b8]; 
0x0000000009c7c5: call qword ptr [rax-0x2de276b8]; 
0x0000000011579e: call qword ptr [rax-0x36fa74b8]; 
0x000000000e6a4e: call qword ptr [rax-0x3ac372b8]; 
0x0000000012ebde: call qword ptr [rax-0x3c0776b8]; 
0x00000000042046: call qword ptr [rax-0x3d]; 
0x0000000015d84e: call qword ptr [rax-0x3f10f09a]; 
0x00000000049d3e: call qword ptr [rax-0x3f38b8]; 
0x0000000007485e: call qword ptr [rax-0x3f7c3977]; 
0x000000000f2d4e: call qword ptr [rax-0x3f7cf975]; 
0x0000000003189e: call qword ptr [rax-0x3f8274b8]; 
0x00000000054b1e: call qword ptr [rax-0x40bf]; 
0x00000000098fbe: call qword ptr [rax-0x40c272b8]; 
0x0000000012741e: call qword ptr [rax-0x4115d6b8]; 
0x00000000148f3e: call qword ptr [rax-0x41]; 
0x0000000008230e: call qword ptr [rax-0x41fb3380]; 
0x000000000df3ee: call qword ptr [rax-0x43bf]; 
0x0000000009c10e: call qword ptr [rax-0x46f272b8]; 
0x0000000013908e: call qword ptr [rax-0x474a74b8]; 
0x000000001962be: call qword ptr [rax-0x47eb7]; 
0x0000000009304e: call qword ptr [rax-0x4895fa79]; 
0x0000000013c2fe: call qword ptr [rax-0x48]; 
0x000000000e305e: call qword ptr [rax-0x4907418]; 
0x000000000786de: call qword ptr [rax-0x4ef7277]; 
0x0000000007ebbe: call qword ptr [rax-0x4ff7a75]; 
0x0000000007846e: call qword ptr [rax-0x5074280]; 
0x0000000014f60e: call qword ptr [rax-0x52163fcf]; 
0x000000000782be: call qword ptr [rax-0x54b7275]; 
0x000000000f309e: call qword ptr [rax-0x578274b8]; 
0x0000000018386d: call qword ptr [rax-0x5e1f00d]; 
0x0000000002201e: call qword ptr [rax-0x5e1f00d]; 
0x0000000006004e: call qword ptr [rax-0x5f7a74b8]; 
0x000000001409ae: call qword ptr [rax-0x66ea72b8]; 
0x00000000066dae: call qword ptr [rax-0x6b77a75]; 
0x000000000f2ede: call qword ptr [rax-0x6f827cb8]; 
0x00000000030a9e: call qword ptr [rax-0x6fa72b8]; 
0x000000000a74ae: call qword ptr [rax-0x72b336cf]; 
0x000000001227ee: call qword ptr [rax-0x72b62d77]; 
0x0000000008107e: call qword ptr [rax-0x72fbb975]; 
0x0000000007d478: call qword ptr [rax-0x75]; 
0x0000000015df4e: call qword ptr [rax-0x761976b4]; 
0x000000000eca8e: call qword ptr [rax-0x76b6a8bf]; 
0x00000000088f2e: call qword ptr [rax-0x76df377d]; 
0x0000000005387e: call qword ptr [rax-0x776e74b7]; 
0x000000000788ee: call qword ptr [rax-0x77cf879]; 
0x000000001214ee: call qword ptr [rax-0x7a0e76b7]; 
0x0000000008748e: call qword ptr [rax-0x7af372b4]; 
0x0000000013f77e: call qword ptr [rax-0x7bf03f7c]; 
0x0000000016193e: call qword ptr [rax-0x7bfc49f1]; 
0x000000000facde: call qword ptr [rax-0x7f4074bf]; 
0x00000000096bee: call qword ptr [rax-0x8c272b8]; 
0x0000000012c89e: call qword ptr [rax-0x974275]; 
0x0000000015953e: call qword ptr [rax-0xbf427d]; 
0x0000000012b22e: call qword ptr [rax-0xf67e418]; 
0x00000000064bcf: call qword ptr [rax]; 
0x0000000008bdfa: call qword ptr [rbp+0x10]; 
0x00000000091972: call qword ptr [rbp+0x18]; 
0x000000000871c3: call qword ptr [rbp+0x20]; 
0x0000000012a067: call qword ptr [rbp+0x28]; 
0x00000000087d48: call qword ptr [rbp+0x30]; 
0x00000000073d36: call qword ptr [rbp+0x38]; 
0x000000001103a2: call qword ptr [rbp+0x40]; 
0x00000000084ad1: call qword ptr [rbp+0x48]; 
0x000000001252d3: call qword ptr [rbp+0x4c]; 
0x0000000015cf7a: call qword ptr [rbp+0x53]; 
0x00000000084c40: call qword ptr [rbp+0x58]; 
0x000000000823f3: call qword ptr [rbp+0x60]; 
0x00000000084ed4: call qword ptr [rbp+0x68]; 
0x0000000008f335: call qword ptr [rbp+0x70]; 
0x00000000089554: call qword ptr [rbp+0x80]; 
0x0000000008f985: call qword ptr [rbp+0x90]; 
0x00000000101080: call qword ptr [rbp+0xf000000]; 
0x0000000004723e: call qword ptr [rbp+0xf08]; 
0x00000000047265: call qword ptr [rbp+0xf10]; 
0x00000000110b42: call qword ptr [rbp-0xf0]; 
0x000000000967e5: call qword ptr [rbp]; 
0x00000000081e6e: call qword ptr [rbx+0x10]; 
0x00000000097780: call qword ptr [rbx+0x15]; 
0x00000000091bc9: call qword ptr [rbx+0x18]; 
0x00000000198f2d: call qword ptr [rbx+0x1f0fffe8]; 
0x00000000128889: call qword ptr [rbx+0x28]; 
0x00000000074aa4: call qword ptr [rbx+0x38]; 
0x0000000010ff88: call qword ptr [rbx+0x40]; 
0x000000000d8cca: call qword ptr [rbx+0x48924924]; 
0x00000000093e9a: call qword ptr [rbx+0x48]; 
0x0000000008e001: call qword ptr [rbx+0x60]; 
0x0000000008225f: call qword ptr [rbx+0x80]; 
0x0000000008ffe4: call qword ptr [rbx+0x88]; 
0x00000000081cfd: call qword ptr [rbx+0x90]; 
0x00000000077088: call qword ptr [rbx+0xf]; 
0x00000000075b81: call qword ptr [rbx+rax*8-0x40]; 
0x00000000076df6: call qword ptr [rbx-0x18]; 
0x000000000d9ebd: call qword ptr [rbx-0x3e6db6dc]; 
0x000000000469e0: call qword ptr [rbx]; 
0x000000000c689d: call qword ptr [rcx+0x2e660006]; 
0x00000000075989: call qword ptr [rcx+0x38]; 
0x0000000003a9a9: call qword ptr [rcx]; 
0x000000000932ef: call qword ptr [rdi+0x18]; 
0x0000000007bbce: call qword ptr [rdi+0x38]; 
0x0000000008e768: call qword ptr [rdi+0x40]; 
0x00000000106c19: call qword ptr [rdi+0x5ba1b74]; 
0x0000000008eb88: call qword ptr [rdi+0x80]; 
0x0000000008e6ff: call qword ptr [rdi+0x90]; 
0x0000000015f3b2: call qword ptr [rdi+0xf08]; 
0x0000000015f53a: call qword ptr [rdi+0xf10]; 
0x00000000157ec2: call qword ptr [rdi+rcx]; 
0x0000000003799e: call qword ptr [rdi]; 
0x00000000152cef: call qword ptr [rdx+0x10]; 
0x000000000240cb: call qword ptr [rdx+0x1d0]; 
0x000000001518b8: call qword ptr [rdx+0x20]; 
0x0000000012aa34: call qword ptr [rdx+0x28]; 
0x000000001526c9: call qword ptr [rdx+0x6]; 
0x0000000014d67d: call qword ptr [rdx-0x4]; 
0x0000000007b7ca: call qword ptr [rdx]; 
0x00000000079f80: call qword ptr [rsi+0x38]; 
0x00000000084826: call qword ptr [rsi+0x48]; 
0x0000000012bdc5: call qword ptr [rsi+0x74]; 
0x0000000009097e: call qword ptr [rsi+0x78]; 
0x0000000008926e: call qword ptr [rsi+0x80]; 
0x000000000891a2: call qword ptr [rsi+0x90]; 
0x0000000013929d: call qword ptr [rsi-0xa]; 
0x0000000004c11a: call qword ptr [rsi]; 
0x0000000013779f: call qword ptr [rsp+0x10]; 
0x000000000934de: call qword ptr [rsp+0x18]; 
0x000000000e638d: call qword ptr [rsp+0x20]; 
0x000000000e5fe1: call qword ptr [rsp+0x28]; 
0x000000000e1f3f: call qword ptr [rsp+0x30]; 
0x0000000007b322: call qword ptr [rsp+0x38]; 
0x00000000100f87: call qword ptr [rsp+0x40]; 
0x00000000090892: call qword ptr [rsp+0x48]; 
0x00000000130cca: call qword ptr [rsp+0x50]; 
0x00000000138168: call qword ptr [rsp+0x58]; 
0x0000000013028a: call qword ptr [rsp+0x60]; 
0x00000000144eed: call qword ptr [rsp+0x68]; 
0x00000000144fd4: call qword ptr [rsp+0x70]; 
0x0000000008f501: call qword ptr [rsp+0x80]; 
0x0000000008fe89: call qword ptr [rsp+0x88]; 
0x0000000015f1aa: call qword ptr [rsp+0xf08]; 
0x0000000015f30a: call qword ptr [rsp+0xf10]; 
0x00000000144d67: call r10; 
0x00000000024f77: call r12; 
0x0000000002975c: call r13; 
0x00000000025fd7: call r14; 
0x0000000002b8d2: call r15; 
0x0000000004700b: call r8; 
0x0000000012c4bf: call r9; 
0x000000000240b1: call rax; 
0x000000000bcf96: call rbp; 
0x00000000025b2c: call rbp; 
0x0000000002403e: call rbx; 
0x0000000009e4de: call rcx; 
0x0000000002b8d3: call rdi; 
0x00000000030ed3: call rdx; 
0x000000000256ce: call rsi; 
0x00000000024f78: call rsp; 
0x00000000164ab7: cdq; adc al, [rax]; add [rbp-0x77], cl; ret far; 
0x0000000009555c: cdq; adc eax, 0x48a77600; add esp, 0x8; ret; 
0x0000000004a8e4: cdq; add [rax], al; add [rax+0x63], cl; ret far; 
0x000000000e61ef: cdq; add [rax], eax; add al, ch; jg short 0x00000000000e61f6; jmp qword ptr [rsp+rax*2-0x77]; 
0x000000000bca33: cdq; add [rax], eax; cmove rax, rdx; ret; 
0x00000000047378: cdq; idiv rsi; ret; 
0x00000000198c7a: cdq; js short 0x0000000000198c82; add [rcx], al; pop rbp; ret; 
0x00000000145f53: cdq; loopne 0x0000000000145f55; jmp qword ptr [rsi+0xf]; 
0x000000001205d3: cdq; mov eax, 0xd8f7000c; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000012648b: cdq; or al, 0x0; syscall; 
0x00000000048273: cdq; ret; 
0x0000000006f053: cdq; sar edi, 0x1; jmp qword ptr [rsi+0xf]; 
0x00000000054da7: cdq; sbb [rax], eax; syscall; 
0x00000000156181: cdq; std; jmp qword ptr [rsi+0x66]; 
0x000000000baaa7: cdq; str [rcx+0x63]; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000018c26f: cdq; vzeroupper; ret; 
0x00000000047326: cdq; xor eax, edx; sub eax, edx; ret; 
0x0000000015c703: cdq; xor edi, ebp; jmp qword ptr [rsi+0xf]; 
0x00000000047338: cdq; xor rax, rdx; sub rax, rdx; ret; 
0x00000000094d34: cdqe; mov [rbx+0x10], rax; xor eax, eax; pop rbx; ret; 
0x00000000157537: cdqe; mov [rsi], rax; mov [rdi+0x18], rdx; mov eax, r8d; ret; 
0x00000000077b92: cdqe; movzx eax, byte ptr [r11+rax]; movsxd rax, [rdi+rax*4]; add rax, rbx; jmp rax; 
0x00000000077b34: cdqe; movzx eax, byte ptr [r11+rax]; movsxd rax, [rsi+rax*4]; add rax, rbx; jmp rax; 
0x0000000013a7ac: clc; add [rax], al; add [rcx-0x77], al; ret; 
0x0000000010d07d: clc; add [rax], al; add [rdi], cl; adc [rsi+0x70], edi; ret; 
0x0000000013c357: clc; add [rbp+rcx-0x7b], esi; shl byte ptr [rbp+0x19], 0x44; mov eax, eax; ret; 
0x00000000155d21: clc; add [rbp-0x10], esi; mov rax, [rdi+0x8]; jmp qword ptr [rax]; 
0x00000000156c09: clc; add [rbp-0x2d], esi; mov rax, [rdi+0x8]; mov rsi, rsp; call qword ptr [rax]; 
0x00000000117c41: clc; add [rdi+0x1], edi; ret; 
0x0000000010d4df: clc; add [rdi+0x2d], esi; mov eax, 0x4; syscall; 
0x0000000010d59f: clc; add [rdi+0x2d], esi; mov eax, 0x6; syscall; 
0x0000000010d53e: clc; add [rdi+0x2e], esi; mov eax, 0x5; syscall; 
0x00000000066206: clc; add [rdi], ecx; test [rbx+rsi], eax; add [rbx-0x65f7b], cl; jmp far fword ptr [rbx]; 
0x0000000016e7c7: clc; add al, 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016e7c6: clc; add al, 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000006fdcc: clc; add al, [rcx-0x9]; ret; 
0x000000000895cc: clc; add cl, [rax+0xf]; scasd [rdi]; ret; 
0x00000000085c9e: clc; add cl, [rax-0x77]; ret; 
0x000000000cf902: clc; add cl, [rax-0x7b]; ror byte ptr [rax+0xf], cl; ret; 
0x0000000013b419: clc; add eax, 0x10; ret; 
0x0000000014866e: clc; add esi, [rsi+0xe]; mov eax, 0x2; ret; 
0x00000000184b6f: clc; add rax, r8; vzeroupper; ret; 
0x000000000abf67: clc; add rax, rcx; ret; 
0x0000000018863b: clc; add rax, rcx; sub rax, rdx; vzeroupper; ret; 
0x000000001844c4: clc; add rax, rcx; vzeroupper; ret; 
0x000000000ac79b: clc; add rax, rsi; ret; 
0x00000000094d88: clc; and eax, 0x1; mov [rsi], eax; xor eax, eax; ret; 
0x000000000342e5: clc; and eax, 0x7f; ret; 
0x0000000012fb39: clc; and eax, 0xffffff; ret; 
0x0000000012faf5: clc; bswap eax; ret; 
0x000000000a096c: clc; call far fword ptr [rbp+0x31]; 
0x0000000009eefd: clc; call far fword ptr [rbx+0x44]; 
0x0000000009eefe: clc; call far fword ptr [rbx+0x44]; 
0x000000001987a4: clc; call far fword ptr [rbx+0x48]; 
0x000000001986e7: clc; call far fword ptr [rbx+0x4c]; 
0x0000000009e901: clc; call far fword ptr [rbx+0x5d]; 
0x0000000009f3d7: clc; call far fword ptr [rdx+0x31]; 
0x0000000019742d: clc; call qword ptr [rax+0x30658b4c]; 
0x0000000012f4f0: clc; call qword ptr [rax-0x18]; 
0x00000000104df3: clc; call r13; 
0x000000000dee97: clc; call rax; 
0x00000000047325: clc; cdq; xor eax, edx; sub eax, edx; ret; 
0x00000000055c71: clc; clc; jne short 0x0000000000055c60; mov rax, rdx; ret; 
0x0000000013b3f9: clc; cmc; je short 0x000000000013b3f0; pop rbx; ret; 
0x000000001945a5: clc; cmp al, 0xf; mov es, [rdx+rdi*8-0x76b30001]; fild st, word ptr [rcx-0x73]; ret; 
0x000000001929e6: clc; cmp eax, [rsi-0x8]; jne 0x0000000000192af0; ret; 
0x0000000018e02c: clc; cmp rcx, rax; jne 0x000000000018ea63; xor eax, eax; ret; 
0x0000000018f65c: clc; cmp rcx, rax; jne 0x000000000018f8a3; xor eax, eax; ret; 
0x0000000018ea38: clc; cmp rcx, rax; jne short 0x000000000018ea63; xor eax, eax; ret; 
0x0000000018f878: clc; cmp rcx, rax; jne short 0x000000000018f8a3; xor eax, eax; ret; 
0x0000000011c4e5: clc; cmp rdi, rax; jne short 0x000000000011c518; mov eax, 0x88; syscall; 
0x00000000047376: clc; cqo; idiv rsi; ret; 
0x00000000047336: clc; cqo; xor rax, rdx; sub rax, rdx; ret; 
0x000000000a2240: clc; dec dword ptr [rax+0x29]; ret; 
0x0000000012daa9: clc; dec dword ptr [rax-0x73]; adc eax, 0xfff8e00e; cmove rax, rdx; ret; 
0x0000000012d9e9: clc; dec dword ptr [rax-0x73]; adc eax, 0xfff8e0ee; cmove rax, rdx; ret; 
0x0000000012d929: clc; dec dword ptr [rax-0x73]; adc eax, 0xfff8e1ae; cmove rax, rdx; ret; 
0x0000000012db27: clc; dec dword ptr [rax-0x73]; add eax, 0xfff8e3e0; cmovne rax, rdx; ret; 
0x0000000010c1f1: clc; dec dword ptr [rax-0x75]; add al, 0x24; add rsp, 0x28; ret; 
0x0000000010e0f1: clc; dec dword ptr [rax-0x75]; and al, 0x8; add rsp, 0x28; ret; 
0x0000000010e04e: clc; dec dword ptr [rax-0x75]; and al, 0x8; add rsp, 0x28; ret; 
0x00000000075cfa: clc; dec dword ptr [rax-0x77]; ret; 
0x000000000cb76b: clc; dec dword ptr [rax-0x7d]; ret; 
0x0000000010e85b: clc; dec dword ptr [rbx+0x410c247c]; mov eax, eax; mov eax, 0x3; syscall; 
0x000000001129e1: clc; dec dword ptr [rbx+0x48082444]; add esp, 0x28; ret; 
0x0000000010e87d: clc; dec dword ptr [rbx+0x480c2444]; add esp, 0x18; ret; 
0x00000000113282: clc; dec dword ptr [rbx+0x48182444]; add esp, 0x28; ret; 
0x0000000007992d: clc; dec dword ptr [rdi]; test [rsi-0x16000028], edx; sar bh, cl; jmp qword ptr [rsi+0xf]; 
0x0000000007f513: clc; fdivp st(7), st; call far fword ptr [rdi]; 
0x0000000005390b: clc; idiv bh; call qword ptr [rax+0x20247c83]; 
0x00000000074ea2: clc; idiv bh; call qword ptr [rax]; 
0x0000000007b9df: clc; idiv bh; dec dword ptr [rbp+0x63]; ret; 
0x0000000007c159: clc; idiv bh; inc dword ptr [rcx]; ret far; 
0x0000000007c09a: clc; idiv bh; jmp qword ptr [rsi-0x70]; 
0x000000001889f4: clc; ja short 0x00000000001889ba; nop [rax+rax]; xor eax, eax; ret; 
0x00000000189b04: clc; ja short 0x0000000000189aca; nop [rax+rax]; vzeroupper; ret; 
0x0000000018b2ad: clc; ja short 0x000000000018b273; mov [rdi], dl; vzeroupper; ret; 
0x0000000018d398: clc; ja short 0x000000000018d35e; nop [rax+rax]; xor eax, eax; ret; 
0x0000000005b3cf: clc; jae short 0x000000000005b380; mov rax, r10; pop rbx; ret; 
0x0000000013b93d: clc; jae short 0x000000000013b953; mov eax, 0xffffffff; ret; 
0x00000000166c1c: clc; jb short 0x0000000000166c27; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000166ccc: clc; jb short 0x0000000000166cd7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001695fc: clc; jb short 0x0000000000169607; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001696ac: clc; jb short 0x00000000001696b7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000008982d: clc; jbe 0x0000000000089958; xor edx, edx; mov rdi, r15; call qword ptr [rbx+0x80]; 
0x0000000008ed9d: clc; jbe 0x000000000008ee50; xor edx, edx; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x0000000008e50d: clc; jbe short 0x000000000008e530; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x000000000934d2: clc; jbe short 0x0000000000093530; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [r12+0x18]; 
0x00000000062f5b: clc; je short 0x0000000000062f86; mov r8d, 0xffffffff; mov eax, r8d; ret; 
0x0000000010d8d8: clc; je short 0x000000000010d8e0; mov eax, r9d; ret; 
0x0000000011f7e9: clc; je short 0x000000000011f824; mov eax, r8d; ret; 
0x0000000009bd34: clc; jmp qword ptr [rsi+0x2e]; 
0x000000000923b4: clc; jmp qword ptr [rsi+0xf]; 
0x0000000012eccc: clc; jmp qword ptr [rsi-0x70]; 
0x000000001929e9: clc; jne 0x0000000000192af0; ret; 
0x00000000055c72: clc; jne short 0x0000000000055c60; mov rax, rdx; ret; 
0x0000000016b226: clc; lea r11, [rip+0x52712]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b070: clc; lea r11, [rip+0x528c8]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168752: clc; lea r11, [rip+0x55026]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168678: clc; lea r11, [rip+0x55100]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000018b23f: clc; lea rax, [rdi+r8]; vzeroupper; ret; 
0x000000000e369b: clc; leave; ret; 
0x000000000a8a8c: clc; mov [rax], dx; movzx edx, byte ptr [rsp-0x6]; mov [rax+0x2], dl; ret; 
0x00000000167817: clc; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x0000000016816b: clc; mov [rdi-0x15], r11; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000016836b: clc; mov [rdi-0x16], r11; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000016856b: clc; mov [rdi-0x17], r11; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x000000001677fb: clc; mov [rdi-0x18], r10; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x00000000167833: clc; mov [rdi-0x8], rdx; ret; 
0x00000000168187: clc; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000016d106: clc; mov [rdi-0xd], rdx; mov [rdi-0x8], rcx; ret; 
0x00000000168387: clc; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000016d076: clc; mov [rdi-0xe], rdx; mov [rdi-0x8], rcx; ret; 
0x00000000168587: clc; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000016cfe6: clc; mov [rdi-0xf], rdx; mov [rdi-0x8], rcx; ret; 
0x000000000a89c7: clc; mov [rdi], dx; movzx edx, byte ptr [rsp-0x6]; mov [rdi+0x2], dl; ret; 
0x000000000a89e6: clc; mov [rdi], edx; movzx edx, byte ptr [rsp-0xc]; mov [rdi+0x4], dl; ret; 
0x000000000a89fe: clc; mov [rdi], edx; movzx edx, word ptr [rsp+0xc]; mov [rdi+0x4], dx; ret; 
0x0000000018a507: clc; mov [rdi], rcx; mov [rdi+r8-0x8], rdx; vzeroupper; ret; 
0x000000000bc072: clc; mov [rdi], rcx; ret; 
0x0000000018bb61: clc; mov [rdi], rcx; vzeroupper; ret; 
0x0000000018fa3f: clc; mov [rdi], rsi; mov [r9-0x8], rcx; ret; 
0x000000000bbc3e: clc; mov [rdi], rsi; ret; 
0x0000000018995f: clc; mov byte ptr [rdi+r8], 0x0; vzeroupper; ret; 
0x00000000116e85: clc; mov byte ptr [rsi-0x1], 0x0; mov rax, r8; ret; 
0x00000000132769: clc; mov rcx, rbp; mov rdx, r14; mov rsi, r12; call qword ptr [rsp+0x40]; 
0x00000000192b6a: clc; mov rdi, 0x101010101010101; imul rax, rdi; shr rax, 0x38; ret; 
0x00000000130282: clc; mov rdi, r12; mov edx, [rsp+0x38]; call qword ptr [rsp+0x60]; 
0x000000000bbc36: clc; mov rsi, [rsi]; mov [rdi+rdx-0x8], rcx; mov [rdi], rsi; ret; 
0x00000000064628: clc; notrack jmp rax; 
0x0000000005b6db: clc; or [rdi-0x2f], esi; mov rax, r8; ret; 
0x0000000012fb53: clc; or eax, esi; bswap eax; ret; 
0x0000000011ef34: clc; or rax, rsi; ret; 
0x00000000062f3f: clc; push qword ptr [rbp+rcx+0x44]; mov eax, eax; ret; 
0x00000000082af5: clc; push qword ptr [rdi+rcx+0x48]; mov eax, [rsp+0x8]; add rsp, 0x18; ret; 
0x00000000121fde: clc; push qword ptr [rsi+rbp-0x7d]; rol byte ptr [rcx], 0x66; mov [rdx], eax; ret; 
0x000000000e4f76: clc; push rbx; pop rax; jne short 0x00000000000e4f80; ret; 
0x000000000420a2: clc; ret far; 
0x00000000047361: clc; ret; 
0x0000000012fb05: clc; rol ax, 0x8; ret; 
0x0000000012fa1f: clc; sar rax, 0x6; ret; 
0x0000000005b4f4: clc; saveprevssp; mov [r9+0x3a8], rdi; mov rsp, rdx; ret; 
0x000000000e9ef5: clc; sbb [rcx], bh; ret; 
0x000000000d0059: clc; sbb [rdi+0x23], edi; mov rax, r12; pop r12; ret; 
0x000000000563f9: clc; shl r9, cl; mov [rdi-0x10], r9; ret; 
0x0000000012fbc9: clc; shr eax, 0x18; ret; 
0x000000000cf87f: clc; shr rax, 0x2; ret; 
0x0000000002fddb: clc; std; je short 0x000000000002fdf8; pop rbx; ret; 
0x000000001501c0: clc; std; jmp qword ptr [rsi+0x66]; 
0x00000000080e0e: clc; sub [rdi+0xe], esi; movsxd rax, [rdi+rax*4]; add rax, rdi; notrack jmp rax; 
0x000000001782c0: clc; sub r8, 0x10; lea rcx, [rdx+0x10]; jne 0x0000000000178810; ret; 
0x000000001784b6: clc; sub r8, 0x1; lea rcx, [rdx+0x1]; jne 0x0000000000178810; ret; 
0x000000001784d8: clc; sub r8, 0x2; lea rcx, [rdx+0x2]; jne 0x0000000000178810; ret; 
0x000000001784fe: clc; sub r8, 0x3; lea rcx, [rdx+0x3]; jne 0x0000000000178810; ret; 
0x00000000178516: clc; sub r8, 0x4; lea rcx, [rdx+0x4]; jne 0x0000000000178810; ret; 
0x0000000017853c: clc; sub r8, 0x5; lea rcx, [rdx+0x5]; jne 0x0000000000178810; ret; 
0x0000000017855e: clc; sub r8, 0x6; lea rcx, [rdx+0x6]; jne 0x0000000000178810; ret; 
0x0000000017857c: clc; sub r8, 0x7; lea rcx, [rdx+0x7]; jne 0x0000000000178810; ret; 
0x00000000178258: clc; sub r8, 0x8; lea rcx, [rdx+0x8]; jne 0x0000000000178810; ret; 
0x0000000017859e: clc; sub r8, 0x9; lea rcx, [rdx+0x9]; jne 0x0000000000178810; ret; 
0x000000001785be: clc; sub r8, 0xa; lea rcx, [rdx+0xa]; jne 0x0000000000178810; ret; 
0x000000001785de: clc; sub r8, 0xb; lea rcx, [rdx+0xb]; jne 0x0000000000178810; ret; 
0x000000001785fe: clc; sub r8, 0xc; lea rcx, [rdx+0xc]; jne 0x0000000000178810; ret; 
0x00000000178620: clc; sub r8, 0xd; lea rcx, [rdx+0xd]; jne 0x0000000000178810; ret; 
0x00000000178640: clc; sub r8, 0xe; lea rcx, [rdx+0xe]; jne 0x0000000000178810; ret; 
0x00000000178660: clc; sub r8, 0xf; lea rcx, [rdx+0xf]; jne 0x0000000000178810; ret; 
0x0000000018d066: clc; sub rax, rdx; shr rax, 0x2; vzeroupper; ret; 
0x000000001886f6: clc; sub rax, rdx; vzeroupper; ret; 
0x00000000160b92: clc; test eax, eax; jne short 0x0000000000160bac; mov eax, 0x27; syscall; 
0x00000000030ecd: clc; test rdx, rdx; je short 0x0000000000030ed5; call rdx; 
0x0000000018463b: clc; vzeroupper; ret; 
0x000000000578e7: clc; xor rax, fs:[0x28]; jne 0x0000000000057975; leave; ret; 
0x0000000012d0f9: clc; xor rcx, fs:[0x28]; jne 0x000000000012d1dd; leave; ret; 
0x000000000df717: cld; adc [rax], al; syscall; 
0x000000000e504a: cld; add [rax], al; ret; 
0x0000000016e347: cld; add al, 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000018d8b7: cld; add al, [rax]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x000000000bc15b: cld; add eax, [rax]; cmp edx, 0xff; cmove rax, rcx; ret; 
0x000000000bc140: cld; add eax, [rax]; ret; 
0x000000001482c1: cld; and edx, 0xfffffffc; lea esi, [rax+rdx+0x28]; mov rax, [rdi+0x8]; call qword ptr [rax+0x30]; 
0x0000000009659d: cld; call far fword ptr [rax+0x5a]; 
0x00000000198c12: cld; call far fword ptr [rbp+0x48]; 
0x000000001483bd: cld; call qword ptr [rax+0x30]; 
0x00000000120b70: cld; cmp dh, bh; dec dword ptr [rbx+0x48182444]; add esp, 0x28; ret; 
0x00000000192a01: cld; cmp eax, [rsi-0x4]; jne 0x0000000000192af0; ret; 
0x00000000192ae1: cld; cmp eax, [rsi-0x4]; jne short 0x0000000000192af0; xor eax, eax; ret; 
0x000000001922b0: cld; cmp eax, ecx; jne 0x00000000001924c0; xor eax, eax; ret; 
0x0000000018f682: cld; cmp ecx, [rdi-0x4]; jne 0x000000000018f8b6; xor eax, eax; ret; 
0x0000000018e055: cld; cmp ecx, eax; jne 0x000000000018ea6f; xor eax, eax; ret; 
0x00000000111407: cld; dec dword ptr [rax-0x77]; ret; 
0x000000000d2c5e: cld; dec dword ptr [rax-0x7b]; ror byte ptr [rdi], 0x84; ret far; 
0x00000000147b4b: cld; dec dword ptr [rcx-0x75]; and al, 0x38; mov rdi, r12; call qword ptr [rax+0x20]; 
0x000000001971e9: cld; dec dword ptr [rcx-0x75]; jge short 0x00000000001971ff; add rdi, rbp; call r12; 
0x0000000005b18e: cld; dec dword ptr [rcx-0x77]; ret; 
0x00000000041d5b: cld; fld st, tbyte ptr [rsp+0x8]; fscale; fstp st(1), st; ret; 
0x000000000bc23a: cld; inc dword ptr [rbx]; div ecx; mov eax, eax; ret; 
0x000000000bc18b: cld; inc dword ptr [rbx]; ret; 
0x000000001666dc: cld; jb short 0x00000000001666e7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016678c: cld; jb short 0x0000000000166797; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001690bc: cld; jb short 0x00000000001690c7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016916c: cld; jb short 0x0000000000169177; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000000962de: cld; jmp qword ptr [rbx+rcx*4+0x4]; 
0x0000000015f0a1: cld; jmp qword ptr [rsi+0x2e]; 
0x0000000015f0a2: cld; jmp qword ptr [rsi+0x2e]; 
0x000000001608c2: cld; jmp qword ptr [rsi+0x66]; 
0x00000000058720: cld; jmp qword ptr [rsi+0xf]; 
0x000000001187cc: cld; jmp qword ptr [rsi-0x70]; 
0x0000000014db2d: cld; jmp qword ptr [rsi-0x7d]; 
0x0000000005d4ee: cld; jmp qword ptr [rsi-0x7f]; 
0x000000001103e9: cld; jmp qword ptr [rsp+rax*2-0x77]; 
0x0000000018f685: cld; jne 0x000000000018f8b6; xor eax, eax; ret; 
0x00000000192a04: cld; jne 0x0000000000192af0; ret; 
0x00000000192ae4: cld; jne short 0x0000000000192af0; xor eax, eax; ret; 
0x000000001482c4: cld; lea esi, [rax+rdx+0x28]; mov rax, [rdi+0x8]; call qword ptr [rax+0x30]; 
0x0000000018b21d: cld; lea rax, [rdi+r8]; vzeroupper; ret; 
0x00000000157479: cld; mov [rdi+0x18], rax; mov eax, r8d; ret; 
0x000000001679da: cld; mov [rdi-0x11], r11; mov [rdi-0x9], rcx; mov [rdi-0x4], edx; ret; 
0x00000000167bba: cld; mov [rdi-0x12], r11; mov [rdi-0xa], rcx; mov [rdi-0x4], edx; ret; 
0x00000000167d9a: cld; mov [rdi-0x13], r11; mov [rdi-0xb], rcx; mov [rdi-0x4], edx; ret; 
0x00000000167f7a: cld; mov [rdi-0x14], r11; mov [rdi-0xc], rcx; mov [rdi-0x4], edx; ret; 
0x00000000167fa2: cld; mov [rdi-0x4], edx; ret; 
0x000000001681a4: cld; mov [rdi-0x5], edx; mov [rdi-0x4], ecx; ret; 
0x000000001683a4: cld; mov [rdi-0x6], edx; mov [rdi-0x4], ecx; ret; 
0x000000001685a4: cld; mov [rdi-0x7], edx; mov [rdi-0x4], ecx; ret; 
0x000000001679f6: cld; mov [rdi-0x9], rcx; mov [rdi-0x4], edx; ret; 
0x0000000016d315: cld; mov [rdi-0x9], rdx; mov [rdi-0x4], ecx; ret; 
0x00000000167bd6: cld; mov [rdi-0xa], rcx; mov [rdi-0x4], edx; ret; 
0x0000000016d295: cld; mov [rdi-0xa], rdx; mov [rdi-0x4], ecx; ret; 
0x00000000167db6: cld; mov [rdi-0xb], rcx; mov [rdi-0x4], edx; ret; 
0x0000000016d215: cld; mov [rdi-0xb], rdx; mov [rdi-0x4], ecx; ret; 
0x00000000167f96: cld; mov [rdi-0xc], rcx; mov [rdi-0x4], edx; ret; 
0x0000000016d195: cld; mov [rdi-0xc], rdx; mov [rdi-0x4], ecx; ret; 
0x0000000018a4e6: cld; mov [rdi], ecx; mov [rdi+r8-0x4], edx; vzeroupper; ret; 
0x000000000bc07a: cld; mov [rdi], ecx; ret; 
0x0000000018bb6c: cld; mov [rdi], ecx; vzeroupper; ret; 
0x0000000018fa51: cld; mov [rdi], esi; mov [r9-0x4], ecx; ret; 
0x000000000bbc4c: cld; mov [rdi], esi; ret; 
0x0000000018993d: cld; mov byte ptr [rdi+r8], 0x0; vzeroupper; ret; 
0x000000000cb4c0: cld; mov dh, dh; jmp qword ptr [rsi+0x66]; 
0x000000000bbc46: cld; mov esi, [rsi]; mov [rdi+rdx-0x4], ecx; mov [rdi], esi; ret; 
0x000000000a1b66: cld; or [rax+0xf], cl; ret; 
0x00000000101158: cld; or [rbx], cl; add [rcx+0x46348ff], cl; mov edx, 0x3ed00148; jmp rax; 
0x00000000140bc0: cld; or al, [rax]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000010c204: cld; or eax, 0x64d8f700; mov [rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x000000000d2f9b: cld; push qword ptr [rcx]; dec dword ptr [rax-0x7b]; ror byte ptr [rdi], 0x85; ret; 
0x0000000009892e: cld; ret far; 
0x000000000bbb8f: cld; ret; 
0x00000000024190: cld; sbb [rax], al; mov rsi, [rax]; xor eax, eax; call qword ptr [rdx+0x1d0]; 
0x000000000241d8: cld; sbb [rax], al; ret; 
0x0000000018fbc1: cld; vmovups [r9-0xc0], zmm13; vmovups [r9-0x80], zmm14; vmovups [r9-0x40], zmm15; ret; 
0x0000000018f987: cld; vmovups [r9-0xc0], zmm5; vmovups [r9-0x80], zmm6; vmovups [r9-0x40], zmm7; ret; 
0x000000001900af: cld; vmovups [rsi-0xc0], zmm2; vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x0000000018a4ed: cld; vzeroupper; ret; 
0x000000000a4fa8: cld; xor al, 0x0; add [rcx-0x9], al; ret; 
0x000000000df8e7: cli; adc [rax], al; syscall; 
0x000000000ea3a2: cli; add [rax], eax; add [rax-0x7d], cl; ret; 
0x000000000bc065: cli; add [rdi+0x15], esi; jb short 0x00000000000bc06d; mov [rdi], cl; ret; 
0x00000000157833: cli; add [rdi+0x28], edx; mov eax, 0x1; ret; 
0x0000000019013f: cli; add [rdx+0x2], esi; mov [rdi], cl; ret; 
0x0000000018fa70: cli; add [rdx+0x4], esi; mov cl, [rsi]; mov [rdi], cl; ret; 
0x000000000bce32: cli; add al, 0x4c; cmovne eax, eax; mov rax, r8; ret; 
0x0000000010d157: cli; add al, 0x74; or [rax+0x1c], edi; syscall; 
0x0000000018da91: cli; add al, [rax]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000087ee9: cli; add ch, [rcx]; rol bl, 0x1; mov eax, 0xffffffff; ret; 
0x00000000190132: cli; add dh, [rdx+0x8]; mov [rdi], cx; mov [rsi-0x2], cx; ret; 
0x00000000157823: cli; add dword ptr [rdi+0x28], 0x4; mov eax, 0x1; ret; 
0x0000000004a92a: cli; add eax, 0x63485374; ret far; 
0x000000000c94a5: cli; add eax, 0x89490000; ret; 
0x0000000002a5d4: cli; add ecx, [rdi]; xchg [rax*1+0x39480000], esp; ret; 
0x000000000dd08b: cli; add rsp, 0x8; pop rbp; pop r12; ret; 
0x00000000155e76: cli; and [rax-0x77], cl; push rsp; and al, 0x8; call qword ptr [rax+0x8]; 
0x000000000bbfc4: cli; and [rdi+0xb], dh; movdqu [rdi+rdx-0x10], xmm0; movdqu [rdi], xmm0; ret; 
0x0000000013f894: cli; and [rdi], cl; xchg esp, eax; ret; 
0x000000001900fb: cli; and [rdx+0xa], dh; vmovdqu [rdi], ymm2; vmovdqu [rsi-0x20], ymm2; ret; 
0x0000000008df13: cli; and dword ptr [rdi], 0xffffffcf; ret; 
0x00000000041f23: cli; andpd xmm0, [rip+0x17a7c4]; andpd xmm1, [rip+0x17a7ac]; orpd xmm0, xmm1; ret; 
0x0000000007a19c: cli; call far fword ptr [rbx+0x5d]; 
0x0000000007699e: cli; call qword ptr [rax+0x38]; 
0x00000000074059: cli; call qword ptr [rax+r9*8]; 
0x0000000008a55d: cli; call qword ptr [rax-0x5e1f00d]; 
0x00000000092912: cli; clc; jmp qword ptr [rsi+0xf]; 
0x000000001945d5: cli; cmp al, 0xf; mov gs, [rdi-0x72000006]; ret; 
0x0000000012bdc3: cli; cmp edi, 0x56; je short 0x000000000012bdd0; mov eax, 0x7; ret; 
0x000000000dcfd3: cli; cmp esi, 0x1; je short 0x00000000000dcfe0; xor eax, eax; ret; 
0x00000000091eb3: cli; cmp qword ptr [rdi+0x38], 0x0; je short 0x0000000000091ec0; ret; 
0x0000000009e223: cli; cmp qword ptr [rip+0x150ce4], 0x0; je short 0x000000000009e230; ret; 
0x000000000dd143: cli; cmp qword ptr [rsi+0x8], 0x3b9ac9ff; ja short 0x00000000000dd178; mov eax, 0xe3; syscall; 
0x0000000012e7d3: cli; cmp rdx, rcx; ja short 0x000000000012e804; xor eax, eax; syscall; 
0x00000000079d2c: cli; dec dword ptr [rcx-0x77]; ret; 
0x0000000007ea91: cli; emms; jrcxz 0x000000000007ea7f; ret; 
0x000000000a2942: cli; idiv bh; jmp qword ptr [rsi+0x2e]; 
0x000000000478e2: cli; imul ebx, [rdx], 0x0; syscall; 
0x00000000078a92: cli; in al, 0xff; jmp qword ptr [rsi+0x2e]; 
0x000000000bc15f: cli; inc dword ptr [rax]; add [rax], al; cmove rax, rcx; ret; 
0x0000000016697c: cli; jb short 0x0000000000166987; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000166a2c: cli; jb short 0x0000000000166a37; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016935c: cli; jb short 0x0000000000169367; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016940c: cli; jb short 0x0000000000169417; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001900e8: cli; jb short 0x00000000001900fa; vmovups [rdi], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x000000001890db: cli; jg short 0x00000000001890f5; vmovdqu [rdi+rdx-0xf], xmm3; vzeroupper; ret; 
0x000000001898bb: cli; jg short 0x00000000001898d5; vmovdqu [rdi+rdx-0xf], xmm3; vzeroupper; ret; 
0x00000000189e7b: cli; jg short 0x0000000000189e95; vmovdqu [rdi+rdx-0xf], xmm3; vzeroupper; ret; 
0x0000000018a52c: cli; jg short 0x000000000018a546; vmovdqu [rdi+r8-0x10], xmm3; vzeroupper; ret; 
0x0000000018a5d1: cli; jg short 0x000000000018a5db; vmovdqu [rdi+r8-0x10], xmm0; vzeroupper; ret; 
0x0000000018b301: cli; jg short 0x000000000018b30b; vmovdqu [rdi+r8-0x10], xmm0; vzeroupper; ret; 
0x0000000018b66d: cli; jg short 0x000000000018b677; vmovdqu [rdi+rdx-0x10], xmm1; ret; 
0x0000000018bb56: cli; jg short 0x000000000018bb60; vzeroupper; ret; 
0x0000000018fa2b: cli; jg short 0x000000000018fa35; vmovdqu [r9-0x10], xmm1; ret; 
0x0000000019010a: cli; jg short 0x0000000000190114; vmovdqu [rsi-0x10], xmm0; ret; 
0x00000000190415: cli; jg short 0x000000000019041f; vmovdqu [rdi+rdx-0x10], xmm1; ret; 
0x00000000190a2c: cli; jg short 0x0000000000190a36; vzeroupper; ret; 
0x00000000081eb1: cli; jmp qword ptr [rbx+rcx*4+0x4]; 
0x00000000076b74: cli; jmp qword ptr [rsi+0x2e]; 
0x000000000884c0: cli; jmp qword ptr [rsi+0x66]; 
0x0000000007a9d5: cli; jmp qword ptr [rsi+0xf]; 
0x0000000007d28c: cli; jmp qword ptr [rsi-0x70]; 
0x0000000013b413: cli; lea eax, [rdi+0x9]; and eax, 0xfffffff8; add eax, 0x10; ret; 
0x000000000241d3: cli; lea rax, [rip+0x18fcc3]; ret; 
0x000000000241e3: cli; lea rax, [rip+0x191a8c]; ret; 
0x000000000a8a94: cli; mov [rax+0x2], dl; ret; 
0x000000000a8b5c: cli; mov [rdi+0x2], al; lea rax, [rdi+rdx-0x1]; ret; 
0x000000000a89cf: cli; mov [rdi+0x2], dl; ret; 
0x0000000010c7c3: cli; mov [rdi+0x4], esi; xor eax, eax; ret; 
0x000000001683a8: cli; mov [rdi-0x4], ecx; ret; 
0x0000000010dcb3: cli; mov eax, 0x102; syscall; 
0x0000000010fd33: cli; mov eax, 0x107; syscall; 
0x000000001143d3: cli; mov eax, 0x10; syscall; 
0x0000000010fc73: cli; mov eax, 0x10a; syscall; 
0x0000000011fe23: cli; mov eax, 0x110; syscall; 
0x0000000011fe83: cli; mov eax, 0x11b; syscall; 
0x0000000011fee3: cli; mov eax, 0x11f; syscall; 
0x0000000011f353: cli; mov eax, 0x122; syscall; 
0x0000000011faf3: cli; mov eax, 0x123; syscall; 
0x0000000010e923: cli; mov eax, 0x124; syscall; 
0x0000000010e983: cli; mov eax, 0x125; syscall; 
0x0000000011fc13: cli; mov eax, 0x126; syscall; 
0x0000000011ff13: cli; mov eax, 0x12c; syscall; 
0x0000000011fa33: cli; mov eax, 0x131; syscall; 
0x00000000115313: cli; mov eax, 0x132; syscall; 
0x0000000011ff73: cli; mov eax, 0x134; syscall; 
0x00000000120003: cli; mov eax, 0x13f; syscall; 
0x00000000120033: cli; mov eax, 0x14a; syscall; 
0x00000000120063: cli; mov eax, 0x14b; syscall; 
0x0000000010e163: cli; mov eax, 0x15; syscall; 
0x0000000010e953: cli; mov eax, 0x16; syscall; 
0x00000000094cd3: cli; mov eax, 0x18; syscall; 
0x00000000146173: cli; mov eax, 0x1; ret; 
0x000000001136a3: cli; mov eax, 0x1; syscall; 
0x000000000e5243: cli; mov eax, 0x1; test edi, edi; js short 0x00000000000e5250; ret; 
0x00000000118ad3: cli; mov eax, 0x1b; syscall; 
0x00000000118aa3: cli; mov eax, 0x1c; syscall; 
0x000000001211c3: cli; mov eax, 0x1e; syscall; 
0x00000000121263: cli; mov eax, 0x1f; syscall; 
0x0000000010e8c3: cli; mov eax, 0x20; syscall; 
0x0000000010e8f3: cli; mov eax, 0x21; syscall; 
0x000000000d41e3: cli; mov eax, 0x24; syscall; 
0x000000000e2dc3: cli; mov eax, 0x25; syscall; 
0x000000000d4213: cli; mov eax, 0x26; syscall; 
0x000000000e40f3: cli; mov eax, 0x27; syscall; 
0x000000001207d3: cli; mov eax, 0x29; syscall; 
0x000000001489a3: cli; mov eax, 0x2; ret; 
0x000000001207a3: cli; mov eax, 0x30; syscall; 
0x00000000120193: cli; mov eax, 0x31; syscall; 
0x000000001202f3: cli; mov eax, 0x32; syscall; 
0x00000000120293: cli; mov eax, 0x33; syscall; 
0x00000000120263: cli; mov eax, 0x34; syscall; 
0x00000000113373: cli; mov eax, 0x3; syscall; 
0x000000000e31a3: cli; mov eax, 0x3b; syscall; 
0x00000000043403: cli; mov eax, 0x3e; syscall; 
0x000000000e2b73: cli; mov eax, 0x3f; syscall; 
0x000000001210b3: cli; mov eax, 0x40; syscall; 
0x000000001211f3: cli; mov eax, 0x43; syscall; 
0x00000000121043: cli; mov eax, 0x44; syscall; 
0x00000000121073: cli; mov eax, 0x47; syscall; 
0x0000000010e5a3: cli; mov eax, 0x49; syscall; 
0x00000000116cf3: cli; mov eax, 0x4c; syscall; 
0x00000000116d23: cli; mov eax, 0x4d; syscall; 
0x0000000010ea43: cli; mov eax, 0x50; syscall; 
0x0000000010ea73: cli; mov eax, 0x51; syscall; 
0x00000000062eb3: cli; mov eax, 0x52; syscall; 
0x0000000010dc83: cli; mov eax, 0x53; syscall; 
0x0000000010fd63: cli; mov eax, 0x54; syscall; 
0x0000000010fbe3: cli; mov eax, 0x56; syscall; 
0x0000000010fd03: cli; mov eax, 0x57; syscall; 
0x0000000010fc43: cli; mov eax, 0x58; syscall; 
0x0000000010fca3: cli; mov eax, 0x59; syscall; 
0x0000000010db93: cli; mov eax, 0x5a; syscall; 
0x0000000010dbc3: cli; mov eax, 0x5b; syscall; 
0x0000000010f393: cli; mov eax, 0x5c; syscall; 
0x0000000010f3c3: cli; mov eax, 0x5d; syscall; 
0x0000000010f3f3: cli; mov eax, 0x5e; syscall; 
0x0000000010db83: cli; mov eax, 0x5f; syscall; 
0x00000000113e13: cli; mov eax, 0x62; syscall; 
0x0000000011fdf3: cli; mov eax, 0x63; syscall; 
0x000000000e2ba3: cli; mov eax, 0x64; syscall; 
0x000000000e4113: cli; mov eax, 0x66; syscall; 
0x0000000011fc73: cli; mov eax, 0x67; syscall; 
0x000000000e4133: cli; mov eax, 0x68; syscall; 
0x000000000e4123: cli; mov eax, 0x6b; syscall; 
0x000000000e4143: cli; mov eax, 0x6c; syscall; 
0x000000000e43d3: cli; mov eax, 0x6d; syscall; 
0x000000000e4103: cli; mov eax, 0x6e; syscall; 
0x000000000e4403: cli; mov eax, 0x6f; syscall; 
0x000000000e4463: cli; mov eax, 0x70; syscall; 
0x000000000e4153: cli; mov eax, 0x73; syscall; 
0x000000000e4493: cli; mov eax, 0x76; syscall; 
0x000000000e44c3: cli; mov eax, 0x78; syscall; 
0x000000000e43a3: cli; mov eax, 0x79; syscall; 
0x0000000011f1f3: cli; mov eax, 0x7a; syscall; 
0x0000000011f223: cli; mov eax, 0x7b; syscall; 
0x000000000e4433: cli; mov eax, 0x7c; syscall; 
0x0000000011f9d3: cli; mov eax, 0x7d; syscall; 
0x0000000011fa03: cli; mov eax, 0x7e; syscall; 
0x000000000439f3: cli; mov eax, 0x83; syscall; 
0x0000000010d403: cli; mov eax, 0x84; syscall; 
0x0000000011fe53: cli; mov eax, 0x86; syscall; 
0x0000000011f413: cli; mov eax, 0x87; syscall; 
0x0000000010da33: cli; mov eax, 0x89; syscall; 
0x0000000010e133: cli; mov eax, 0x8; syscall; 
0x0000000010da63: cli; mov eax, 0x8a; syscall; 
0x000000001141d3: cli; mov eax, 0x8c; syscall; 
0x00000000114213: cli; mov eax, 0x8d; syscall; 
0x00000000102683: cli; mov eax, 0x8e; syscall; 
0x000000001026b3: cli; mov eax, 0x8f; syscall; 
0x000000001026e3: cli; mov eax, 0x90; syscall; 
0x00000000102713: cli; mov eax, 0x91; syscall; 
0x00000000102773: cli; mov eax, 0x92; syscall; 
0x000000001027a3: cli; mov eax, 0x93; syscall; 
0x000000001027d3: cli; mov eax, 0x94; syscall; 
0x00000000118b33: cli; mov eax, 0x95; syscall; 
0x00000000118b63: cli; mov eax, 0x96; syscall; 
0x00000000118b93: cli; mov eax, 0x97; syscall; 
0x00000000118bc3: cli; mov eax, 0x98; syscall; 
0x00000000115653: cli; mov eax, 0x99; syscall; 
0x0000000011f963: cli; mov eax, 0x9a; syscall; 
0x0000000011fd33: cli; mov eax, 0x9b; syscall; 
0x0000000011f933: cli; mov eax, 0x9e; syscall; 
0x00000000115193: cli; mov eax, 0xa1; syscall; 
0x00000000115253: cli; mov eax, 0xa2; syscall; 
0x00000000115163: cli; mov eax, 0xa3; syscall; 
0x0000000011f193: cli; mov eax, 0xa6; syscall; 
0x00000000115683: cli; mov eax, 0xa7; syscall; 
0x000000001156b3: cli; mov eax, 0xa8; syscall; 
0x000000001189d3: cli; mov eax, 0xa; syscall; 
0x00000000114e13: cli; mov eax, 0xaa; syscall; 
0x00000000114f63: cli; mov eax, 0xab; syscall; 
0x0000000011f043: cli; mov eax, 0xac; syscall; 
0x0000000011f013: cli; mov eax, 0xad; syscall; 
0x0000000011fa63: cli; mov eax, 0xae; syscall; 
0x0000000011fa93: cli; mov eax, 0xb0; syscall; 
0x0000000011fb53: cli; mov eax, 0xb1; syscall; 
0x0000000011fd03: cli; mov eax, 0xb4; syscall; 
0x000000001189a3: cli; mov eax, 0xb; syscall; 
0x00000000120093: cli; mov eax, 0xba; syscall; 
0x0000000011f1c3: cli; mov eax, 0xbb; syscall; 
0x0000000011ceb3: cli; mov eax, 0xc2; syscall; 
0x0000000011cf13: cli; mov eax, 0xc3; syscall; 
0x0000000011cdf3: cli; mov eax, 0xc4; syscall; 
0x0000000011cfa3: cli; mov eax, 0xc5; syscall; 
0x0000000011cf43: cli; mov eax, 0xc6; syscall; 
0x0000000011ce23: cli; mov eax, 0xc7; syscall; 
0x000000000d0df3: cli; mov eax, 0xc9; syscall; 
0x000000001142b3: cli; mov eax, 0xc; syscall; 
0x00000000102873: cli; mov eax, 0xcb; syscall; 
0x0000000011fac3: cli; mov eax, 0xd5; syscall; 
0x0000000011f993: cli; mov eax, 0xe4; syscall; 
0x000000001200a3: cli; mov eax, 0xea; syscall; 
0x00000000116ad3: cli; mov eax, 0xeb; syscall; 
0x0000000011fbe3: cli; mov eax, 0xfd; syscall; 
0x0000000011fbb3: cli; mov eax, 0xfe; syscall; 
0x0000000011fc43: cli; mov eax, 0xff; syscall; 
0x00000000047a23: cli; mov eax, 0xffffffff; ret; 
0x0000000010d0a3: cli; mov eax, [rdi+0x108]; mov [rsi], eax; xor eax, eax; ret; 
0x00000000093593: cli; mov eax, [rdi+0x10]; sub eax, [rsi+0x10]; ret; 
0x0000000010d093: cli; mov eax, [rdi+0x10c]; mov [rsi], eax; xor eax, eax; ret; 
0x00000000157843: cli; mov eax, [rdi+0x28]; ret; 
0x0000000010c7b3: cli; mov eax, [rdi+0x4]; mov [rsi], eax; xor eax, eax; ret; 
0x000000001136d3: cli; mov eax, [rdi+0x8]; and eax, 0x100f; ret; 
0x0000000008cdb3: cli; mov eax, [rdi]; and eax, 0x200; ret; 
0x0000000008cd83: cli; mov eax, [rdi]; and eax, 0x804; ret; 
0x00000000094dd3: cli; mov eax, [rdi]; mov [rsi], eax; xor eax, eax; ret; 
0x000000000de313: cli; mov eax, [rdi]; ret; 
0x0000000008df23: cli; mov eax, [rdi]; shr eax, 0x4; and eax, 0x1; ret; 
0x0000000008df33: cli; mov eax, [rdi]; shr eax, 0x5; and eax, 0x1; ret; 
0x000000000440d3: cli; mov eax, [rip+0x1a80ce]; ret; 
0x000000000440c3: cli; mov eax, [rip+0x1a80e2]; ret; 
0x00000000146eb3: cli; mov eax, [rip+0xa9cc2]; test eax, eax; je short 0x0000000000146ec0; ret; 
0x0000000010d143: cli; mov eax, [rsi]; mov [rdi+0x108], eax; xor eax, eax; ret; 
0x000000000342e3: cli; mov eax, edi; and eax, 0x7f; ret; 
0x0000000012faf3: cli; mov eax, edi; bswap eax; ret; 
0x0000000012fb03: cli; mov eax, edi; rol ax, 0x8; ret; 
0x0000000010dff3: cli; mov eax, fs:[0x18]; test eax, eax; jne short 0x000000000010e010; syscall; 
0x00000000052ae2: cli; mov ebx, 0xa5e80019; ret far; 
0x000000001683a2: cli; mov ecx, [rsi-0x4]; mov [rdi-0x6], edx; mov [rdi-0x4], ecx; ret; 
0x0000000013a5d3: cli; mov edi, [rdi]; mov eax, 0x3; syscall; 
0x0000000015de03: cli; mov edi, [rip+0x8e626]; test edi, edi; jns short 0x000000000015de10; ret; 
0x00000000115345: cli; mov esi, 0x28121969; mov edi, 0xfee1dead; mov eax, 0xa9; syscall; 
0x00000000043433: cli; mov esi, 0x8; mov eax, 0x7f; syscall; 
0x00000000163373: cli; mov qword ptr [rcx], 0x0; mov eax, 0xffffffff; ret; 
0x00000000093963: cli; mov qword ptr [rip+0x15ae51], 0x0; mov qword ptr [rip+0x15ae4e], 0x0; ret; 
0x0000000010f423: cli; mov r10, rcx; mov eax, 0x104; syscall; 
0x00000000062ee3: cli; mov r10, rcx; mov eax, 0x108; syscall; 
0x0000000010fc13: cli; mov r10, rcx; mov eax, 0x109; syscall; 
0x0000000010fcd3: cli; mov r10, rcx; mov eax, 0x10b; syscall; 
0x00000000113663: cli; mov r10, rcx; mov eax, 0x11; syscall; 
0x0000000011feb3: cli; mov r10, rcx; mov eax, 0x11e; syscall; 
0x0000000011f9a3: cli; mov r10, rcx; mov eax, 0x12d; syscall; 
0x0000000011f3e3: cli; mov r10, rcx; mov eax, 0x12e; syscall; 
0x0000000011ff43: cli; mov r10, rcx; mov eax, 0x12f; syscall; 
0x0000000011ffa3: cli; mov r10, rcx; mov eax, 0x136; syscall; 
0x0000000011ffd3: cli; mov r10, rcx; mov eax, 0x137; syscall; 
0x0000000011fcd3: cli; mov r10, rcx; mov eax, 0x19; syscall; 
0x00000000112fd3: cli; mov r10, rcx; mov eax, 0x28; syscall; 
0x00000000120803: cli; mov r10, rcx; mov eax, 0x35; syscall; 
0x00000000120773: cli; mov r10, rcx; mov eax, 0x36; syscall; 
0x000000001202c3: cli; mov r10, rcx; mov eax, 0x37; syscall; 
0x0000000011fd63: cli; mov r10, rcx; mov eax, 0x9d; syscall; 
0x0000000011fca3: cli; mov r10, rcx; mov eax, 0xa5; syscall; 
0x0000000011fb83: cli; mov r10, rcx; mov eax, 0xaf; syscall; 
0x0000000011fd93: cli; mov r10, rcx; mov eax, 0xb2; syscall; 
0x0000000011fdc3: cli; mov r10, rcx; mov eax, 0xb3; syscall; 
0x0000000011cfd3: cli; mov r10, rcx; mov eax, 0xbc; syscall; 
0x0000000011cf73: cli; mov r10, rcx; mov eax, 0xbd; syscall; 
0x0000000011ce53: cli; mov r10, rcx; mov eax, 0xbe; syscall; 
0x0000000011ce83: cli; mov r10, rcx; mov eax, 0xbf; syscall; 
0x0000000011cee3: cli; mov r10, rcx; mov eax, 0xc0; syscall; 
0x0000000011cdc3: cli; mov r10, rcx; mov eax, 0xc1; syscall; 
0x00000000118b03: cli; mov r10, rcx; mov eax, 0xd8; syscall; 
0x00000000121183: cli; mov r10, rcx; mov eax, 0xdc; syscall; 
0x0000000011fb23: cli; mov r10, rcx; mov eax, 0xe9; syscall; 
0x000000001130d3: cli; mov r10d, ecx; mov eax, 0x118; syscall; 
0x0000000010d8b3: cli; mov r10d, ecx; mov eax, 0x14c; syscall; 
0x00000000112b13: cli; mov r10d, ecx; mov eax, 0xdd; syscall; 
0x0000000011f313: cli; mov r10d, edx; mov eax, 0x121; mov edx, 0x8; syscall; 
0x00000000092923: cli; mov rax, 0xffffffffffffffff; ret; 
0x000000001573c3: cli; mov rax, [rdi+0x18]; sub rax, [rdi+0x20]; ret; 
0x000000000de2c3: cli; mov rax, [rdi+0x20]; ret; 
0x00000000093883: cli; mov rax, [rdi+0x68]; ret; 
0x000000000874c3: cli; mov rax, [rdi+0xa0]; cmp qword ptr [rax+0x30], 0x0; je short 0x00000000000874d8; ret; 
0x00000000095223: cli; mov rax, [rdi]; cmp rax, 0x2000000; jbe short 0x0000000000095230; ret; 
0x00000000094e73: cli; mov rax, [rdi]; cmp rax, 0x408; jbe short 0x0000000000094e80; ret; 
0x00000000095283: cli; mov rax, [rdi]; cmp rax, 0xa0; jbe short 0x0000000000095290; ret; 
0x00000000094eb3: cli; mov rax, [rdi]; cmp rax, 0xffff; jbe short 0x0000000000094ec0; ret; 
0x00000000094ed3: cli; mov rax, [rdi]; nop; mov [rip+0x157409], rax; ret; 
0x00000000094e63: cli; mov rax, [rdi]; nop; mov [rip+0x157429], rax; ret; 
0x00000000094e53: cli; mov rax, [rdi]; nop; mov [rip+0x157441], rax; ret; 
0x00000000095273: cli; mov rax, [rdi]; nop; mov [rip+0x159c0e], eax; ret; 
0x00000000093863: cli; mov rax, [rip+0x159d35]; ret; 
0x00000000043c83: cli; mov rax, [rip+0x1a81e5]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x000000000344d3: cli; mov rax, [rip+0x1b792d]; add rax, fs:[0x0]; ret; 
0x000000000344f3: cli; mov rax, [rip+0x1b79ed]; add rax, fs:[0x0]; ret; 
0x00000000034513: cli; mov rax, [rip+0x1b7a0d]; add rax, fs:[0x0]; ret; 
0x0000000002f5d3: cli; mov rax, [rip+0x1be38d]; ret; 
0x00000000024433: cli; mov rax, [rip+0x1c7a35]; add rax, fs:[0x0]; ret; 
0x00000000025ae3: cli; mov rax, [rip+0x1cb6bd]; ret; 
0x00000000025ad3: cli; mov rax, [rip+0x1cb6dd]; ret; 
0x00000000163343: cli; mov rax, [rip+0x88b25]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x00000000162ce3: cli; mov rax, [rip+0x89185]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x00000000162cc3: cli; mov rax, [rip+0x891a5]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x00000000162c83: cli; mov rax, [rip+0x891e5]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x00000000162c63: cli; mov rax, [rip+0x89205]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x00000000162c43: cli; mov rax, [rip+0x89225]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x00000000162c23: cli; mov rax, [rip+0x89245]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x00000000160bd3: cli; mov rax, [rip+0x8b295]; mov dword ptr fs:[rax], 0x26; xor eax, eax; ret; 
0x0000000015f893: cli; mov rax, [rip+0x8c5c5]; jmp qword ptr [rax+0x1f0]; 
0x0000000015c963: cli; mov rax, [rip+0x8f505]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x00000000153093: cli; mov rax, [rip+0x98d05]; lea rdx, [rip+0x9dd9e]; mov fs:[rax], rdx; ret; 
0x00000000141113: cli; mov rax, [rip+0xaaed5]; mov rax, fs:[rax]; ret; 
0x00000000142e93: cli; mov rax, [rip+0xadb85]; test rax, rax; jne short 0x0000000000142ea8; ret; 
0x0000000012feb3: cli; mov rax, [rip+0xbbf9d]; add rax, fs:[0x0]; ret; 
0x000000001228e3: cli; mov rax, [rip+0xc9575]; mov eax, [rax+0x38]; ret; 
0x000000001200d3: cli; mov rax, [rip+0xcbd95]; mov dword ptr fs:[rax], 0x26; mov rax, 0xffffffffffffffff; ret; 
0x00000000115633: cli; mov rax, [rip+0xd6835]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x000000001143b3: cli; mov rax, [rip+0xd7ab5]; mov dword ptr fs:[rax], 0x26; mov rax, 0xffffffffffffffff; ret; 
0x0000000010dbf3: cli; mov rax, [rip+0xde275]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x00000000034483: cli; mov rax, [rsi+0x70]; movsxd rdi, edi; mov eax, [rax+rdi*4]; ret; 
0x00000000034493: cli; mov rax, [rsi+0x78]; movsxd rdi, edi; mov eax, [rax+rdi*4]; ret; 
0x00000000094c73: cli; mov rax, fs:[0x10]; ret; 
0x00000000047373: cli; mov rax, rdi; cqo; idiv rsi; ret; 
0x00000000093893: cli; mov rax, rdi; ret; 
0x00000000162b83: cli; mov rdx, rsi; mov eax, 0xcb; mov esi, 0x80; syscall; 
0x0000000007711b: cli; mov rsi, r11; mov rdi, r12; mov [rbp-0x4e0], r10; call qword ptr [rcx+0x38]; 
0x00000000044bad: cli; mov rsi, r12; mov rdi, r14; call rbp; 
0x0000000009d9dc: cli; mov rsi, r14; mov rdi, r13; call rax; 
0x0000000013494f: cli; mov rsi, r14; mov rdi, rbx; call rax; 
0x00000000076f34: cli; mov rsi, r8; mov rdi, r12; mov [rbp-0x4f0], r10; call qword ptr [rax+0x38]; 
0x000000000d10a3: cli; mov rsi, rdi; mov eax, 0xa4; xor edi, edi; syscall; 
0x00000000042a53: cli; movmskps eax, xmm0; and eax, 0x8; ret; 
0x0000000012c6ec: cli; movups [rbp-0x78], xmm1; call rax; 
0x0000000010c783: cli; movzx eax, word ptr [rdi]; mov [rsi], ax; xor eax, eax; ret; 
0x000000000ac8e9: cli; movzx edx, dl; sub eax, edx; ret; 
0x00000000052d7d: cli; notrack jmp rdx; 
0x000000001519f2: cli; or [rax], eax; syscall; 
0x00000000190114: cli; or [rdx+0xa], dh; vmovq [rdi], xmm0; vmovq [rsi-0x8], xmm0; ret; 
0x00000000042663: cli; pand xmm1, [rip+0x17a104]; pand xmm0, [rip+0x17a0ec]; por xmm0, xmm1; ret; 
0x000000000421e3: cli; pmovmskb eax, xmm0; and eax, 0x80; ret; 
0x00000000042513: cli; pmovmskb eax, xmm0; and eax, 0x8; ret; 
0x0000000005b48e: cli; pop rbx; cmovb r10, rdi; mov rax, r10; ret; 
0x000000000e3103: cli; pop rdi; mov eax, 0x3a; syscall; 
0x0000000014f952: cli; push rax; out dx, al; dec dword ptr [rax-0x77]; ret; 
0x0000000008df0e: cli; push rbx; nop edx, edi; and dword ptr [rdi], 0xffffffcf; ret; 
0x000000000e51d7: cli; push rsp; push rbx; setne al; ret; 
0x000000000bbf86: cli; rep stosb [rdi]; mov rax, rdx; ret; 
0x00000000023f23: cli; ret; 
0x000000000d4261: cli; ror edx, 0x2; cmp edx, 0x28f5c28; jbe short 0x00000000000d4270; ret; 
0x0000000005ec83: cli; sbb [rax], al; syscall; 
0x000000000941c3: cli; setae al; ret; 
0x00000000082920: cli; stc; call far fword ptr [rbx+0x4c]; 
0x000000000d4266: cli; sub [rdi+rcx*4+0x2], bl; jbe short 0x00000000000d4270; ret; 
0x000000001096c2: cli; test al, 0xf2; jmp qword ptr [rsi+0x2e]; 
0x0000000011f7c3: cli; test edx, edx; je short 0x000000000011f7f8; mov eax, 0x145; syscall; 
0x000000000b1e18: cli; test rdx, rdx; je 0x00000000000b1ec0; bsf rax, rdx; ret; 
0x000000000b1cb9: cli; test rdx, rdx; je short 0x00000000000b1cd0; bsf rax, rdx; ret; 
0x000000000b1c5c: cli; test rdx, rdx; je short 0x00000000000b1ce0; bsf rax, rdx; ret; 
0x000000000b1e88: cli; test rdx, rdx; je short 0x00000000000b1eb0; bsf rax, rdx; ret; 
0x000000000bbf73: cli; test rdx, rdx; jne short 0x00000000000bbf7d; mov rax, rdi; ret; 
0x00000000116cb3: cli; test rsi, rsi; je short 0x0000000000116ce8; mov eax, 0x105; syscall; 
0x000000000b1d83: cli; test rsi, rsi; jne short 0x00000000000b1d8d; xor rax, rax; ret; 
0x000000000cf6c3: cli; test rsi, rsi; jne short 0x00000000000cf6cd; xor rax, rax; ret; 
0x000000000d0f03: cli; test rsi, rsi; jne short 0x00000000000d0f38; mov eax, 0x60; syscall; 
0x0000000018fe91: cli; vmovups [rdi-0x1c0], zmm14; vmovups [rdi-0x200], zmm15; ret; 
0x000000000342f3: cli; xor eax, eax; and edi, 0xffffff80; sete al; ret; 
0x00000000094c93: cli; xor eax, eax; cmp rdi, rsi; sete al; ret; 
0x000000000928a3: cli; xor eax, eax; ret; 
0x00000000113633: cli; xor eax, eax; syscall; 
0x0000000008cd93: cli; xor eax, eax; test byte ptr [rdi], 0x4; sete al; ret; 
0x0000000008cda3: cli; xor eax, eax; test byte ptr [rdi], 0x8; sete al; ret; 
0x000000000908d3: cli; xor eax, eax; test rdx, rdx; jne short 0x00000000000908e0; ret; 
0x00000000121223: cli; xor r10d, r10d; mov eax, 0x1d; syscall; 
0x0000000009f95f: cmc; adc al, 0x0; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000140f67: cmc; adc al, 0xee; dec dword ptr [rax+0x39]; ret; 
0x0000000016eac7: cmc; add al, 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016eac6: cmc; add al, 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000f2237: cmc; add bl, dh; jmp qword ptr [rsi+0xf]; 
0x00000000169147: cmc; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000cfb11: cmc; and ch, 0xf; je short 0x00000000000cfb30; add rax, 0x2; ret; 
0x0000000012dec8: cmc; call qword ptr [rax-0x18]; 
0x000000000c4147: cmc; cmc; jmp qword ptr [rsi+0xf]; 
0x000000000c4146: cmc; cmc; jmp qword ptr [rsi+0xf]; 
0x000000000e769a: cmc; dec dword ptr [rax-0x77]; ret; 
0x000000000c4be2: cmc; dec dword ptr [rbp-0x7cbe00bd]; call far fword ptr [rax]; 
0x000000000bffda: cmc; idiv edi; jmp qword ptr [rsi-0x70]; 
0x0000000016700c: cmc; jb short 0x0000000000167017; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001670bc: cmc; jb short 0x00000000001670c7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001699ec: cmc; jb short 0x00000000001699f7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000169a9c: cmc; jb short 0x0000000000169aa7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000013b3fa: cmc; je short 0x000000000013b3f0; pop rbx; ret; 
0x000000000c4148: cmc; jmp qword ptr [rsi+0xf]; 
0x000000000cb84c: cmc; jmp qword ptr [rsi-0x70]; 
0x000000000e51bc: cmc; lodsd [rsi]; add [rax], al; setne al; ret; 
0x0000000016d21a: cmc; mov [rdi-0x4], ecx; ret; 
0x00000000167c2d: cmc; mov [rdi-0x4], edx; ret; 
0x0000000009b1dd: cmc; mov eax, [0x11ec503d8d480011]; add al, ch; ret; 
0x00000000120077: cmc; mov ebp, 0xd8f7000c; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000120277: cmc; mov ebx, 0xd8f7000c; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000016d213: cmc; mov ecx, [rsi-0x4]; mov [rdi-0xb], rdx; mov [rdi-0x4], ecx; ret; 
0x00000000167db2: cmc; mov edx, [rsi-0x4]; mov [rdi-0xb], rcx; mov [rdi-0x4], edx; ret; 
0x00000000191ff2: cmc; movzx edx, byte ptr [rsi-0xb]; sub eax, edx; ret; 
0x0000000015c968: cmc; or [rax], al; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x0000000009f267: cmc; ret far; 
0x00000000065f77: cmc; ret; 
0x00000000191ff7: cmc; sub eax, edx; ret; 
0x00000000118b77: cmc; xor cl, [rip+0x64d8f700]; mov [rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000112b2c: cmova eax, edx; ret; 
0x000000000de2e1: cmova edx, eax; mov eax, 0xd9; syscall; 
0x000000000de2e0: cmova rdx, rax; mov eax, 0xd9; syscall; 
0x00000000093ecd: cmovae eax, [rdi+0x10]; sub rax, [rdi+0x18]; ret; 
0x00000000088614: cmovae eax, [rdx+0x8]; sub rax, [rdx+0x10]; sar rax, 0x2; ret; 
0x00000000115943: cmovae edx, [rax+0x18]; mov [rsp+0x20], rax; mov eax, 0x65; syscall; 
0x00000000115942: cmovae r10, [rax+0x18]; mov [rsp+0x20], rax; mov eax, 0x65; syscall; 
0x00000000093ecc: cmovae rax, [rdi+0x10]; sub rax, [rdi+0x18]; ret; 
0x00000000088613: cmovae rax, [rdx+0x8]; sub rax, [rdx+0x10]; sar rax, 0x2; ret; 
0x00000000120e40: cmovb eax, edx; ret; 
0x00000000189938: cmovb ecx, [rcx+0x42fc0754]; mov byte ptr [rdi+rax], 0x0; vzeroupper; ret; 
0x0000000018b218: cmovb ecx, [rcx+0x4afc0754]; lea eax, [rdi+rax]; vzeroupper; ret; 
0x0000000005b491: cmovb edx, edi; mov rax, r10; ret; 
0x0000000005b490: cmovb r10, rdi; mov rax, r10; ret; 
0x00000000120e3f: cmovb rax, rdx; ret; 
0x0000000009f38d: cmovbe eax, edx; ret; 
0x000000000941bc: cmovbe edx, eax; xor eax, eax; cmp rdx, rdi; setae al; ret; 
0x00000000102819: cmovbe esi, eax; syscall; 
0x000000000941bb: cmovbe rdx, rax; xor eax, eax; cmp rdx, rdi; setae al; ret; 
0x00000000102818: cmovbe rsi, r8; syscall; 
0x000000000cf908: cmove eax, ebx; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000011573e: cmove eax, ebx; pop rbx; ret; 
0x000000000bc165: cmove eax, ecx; ret; 
0x000000000a06ec: cmove eax, edx; add eax, 0x1; ret; 
0x000000000d0ed0: cmove eax, edx; add rsp, 0x58; ret; 
0x0000000009cbc7: cmove eax, edx; add rsp, 0x8; ret; 
0x0000000012d048: cmove eax, edx; mov [rip+0xc2e26], rax; pop rbp; ret; 
0x00000000033c6f: cmove eax, edx; ret; 
0x000000000cf907: cmove rax, rbx; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000011573d: cmove rax, rbx; pop rbx; ret; 
0x000000000bc164: cmove rax, rcx; ret; 
0x000000000a070d: cmove rax, rdx; add eax, 0x1; ret; 
0x000000000d0ecf: cmove rax, rdx; add rsp, 0x58; ret; 
0x0000000009cbc6: cmove rax, rdx; add rsp, 0x8; ret; 
0x0000000012d047: cmove rax, rdx; mov [rip+0xc2e26], rax; pop rbp; ret; 
0x00000000033c6e: cmove rax, rdx; ret; 
0x00000000086e4b: cmovg eax, ecx; test rdx, rdx; jne short 0x0000000000086e40; ret; 
0x00000000091713: cmovg eax, ecx; test rdx, rdx; jne short 0x0000000000091708; ret; 
0x000000000cf1c6: cmovg ecx, eax; mov eax, r9d; ret; 
0x00000000082819: cmovg edx, ecx; mov [rdi+0xd8], rdx; mov rdx, [rdi+0xa0]; mov [rdx+0xe0], rcx; ret; 
0x000000000cf1c5: cmovg r9d, eax; mov eax, r9d; ret; 
0x00000000086e4a: cmovg rax, rcx; test rdx, rdx; jne short 0x0000000000086e40; ret; 
0x00000000091712: cmovg rax, rcx; test rdx, rdx; jne short 0x0000000000091708; ret; 
0x00000000082818: cmovg rdx, rcx; mov [rdi+0xd8], rdx; mov rdx, [rdi+0xa0]; mov [rdx+0xe0], rcx; ret; 
0x0000000012eb10: cmovl ecx, [rcx+0x415d5be0]; pop rsp; ret; 
0x0000000018ab6a: cmovl ecx, [rcx+0x48f9174c]; lea eax, [rdi+rdx]; vzeroupper; ret; 
0x000000000cf1a4: cmovl ecx, eax; mov eax, r9d; ret; 
0x000000000cf1a3: cmovl r9d, eax; mov eax, r9d; ret; 
0x000000000a28cb: cmovne eax, eax; mov rax, r8; ret; 
0x0000000008a754: cmovne eax, ecx; ret; 
0x000000000a2027: cmovne eax, edi; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000000a2c6e: cmovne eax, edi; ret; 
0x0000000015c52a: cmovne eax, edx; add rsp, 0x8; ret; 
0x000000000952a2: cmovne eax, edx; mov [rip+0x159bf4], rax; ret; 
0x000000000ee444: cmovne eax, edx; pop rbx; ret; 
0x0000000009c235: cmovne eax, edx; ret; 
0x00000000188074: cmovne eax, edx; vzeroupper; ret; 
0x000000001294e3: cmovne eax, esi; ret; 
0x000000000b1ad1: cmovne ecx, edi; cmovne rsi, rdx; bsr rsi, rsi; lea rax, [rcx+rsi]; ret; 
0x00000000032879: cmovne edx, eax; lea rax, [rip+0x1bb21d]; mov [rip+0x1bb274], dl; ret; 
0x0000000008ce90: cmovne edx, ecx; mov [rdi], edx; ret; 
0x000000000b1ad5: cmovne esi, edx; bsr rsi, rsi; lea rax, [rcx+rsi]; ret; 
0x000000000a28ca: cmovne r8, rax; mov rax, r8; ret; 
0x0000000008a752: cmovne rax, rcx; ret; 
0x000000000a2026: cmovne rax, rdi; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000000a2c6d: cmovne rax, rdi; ret; 
0x0000000015c529: cmovne rax, rdx; add rsp, 0x8; ret; 
0x000000000952a1: cmovne rax, rdx; mov [rip+0x159bf4], rax; ret; 
0x0000000009c234: cmovne rax, rdx; ret; 
0x00000000188073: cmovne rax, rdx; vzeroupper; ret; 
0x000000000b1ad0: cmovne rcx, rdi; cmovne rsi, rdx; bsr rsi, rsi; lea rax, [rcx+rsi]; ret; 
0x000000000b1ad4: cmovne rsi, rdx; bsr rsi, rsi; lea rax, [rcx+rsi]; ret; 
0x00000000127b11: cmovns eax, [rbx+0x28]; pop rbx; ret; 
0x000000000e5c9d: cmovns eax, [rbx+0x394810c1]; ret; 
0x000000000b7b11: cmovns eax, [rbx-0x72b7e018]; jg short 0x00000000000b7b39; jne 0x00000000000b7fa0; ret; 
0x000000000b79af: cmovns eax, [rbx-0x72b7e818]; jg short 0x00000000000b79cf; jne 0x00000000000b7fa0; ret; 
0x000000000b792d: cmovns eax, [rbx-0x72b7ec18]; jg short 0x00000000000b7949; jne 0x00000000000b7fa0; ret; 
0x000000000b8feb: cmovns eax, [rbx-0x72b7ef18]; jg short 0x00000000000b9004; jne 0x00000000000b97f0; ret; 
0x000000000b77e8: cmovns eax, [rbx-0x72b7f618]; jg short 0x00000000000b77fa; jne 0x00000000000b7fa0; ret; 
0x000000000b7766: cmovns eax, [rbx-0x72b7fa18]; jg short 0x00000000000b7774; jne 0x00000000000b7fa0; ret; 
0x00000000078bee: cmovns eax, [rbx-0x76b20f20]; ret; 
0x000000001141ec: cmovns eax, edx; ret; 
0x000000000b79ae: cmovns r8, [r11-0x72b7e818]; jg short 0x00000000000b79cf; jne 0x00000000000b7fa0; ret; 
0x000000000b792c: cmovns r8, [r11-0x72b7ec18]; jg short 0x00000000000b7949; jne 0x00000000000b7fa0; ret; 
0x000000000b8fea: cmovns r8d, [r11-0x72b7ef18]; jg short 0x00000000000b9004; jne 0x00000000000b97f0; ret; 
0x00000000127b10: cmovns rax, [rbx+0x28]; pop rbx; ret; 
0x0000000018995a: cmovp ecx, [rcx+0x42f80754]; mov byte ptr [rdi+rax], 0x0; vzeroupper; ret; 
0x0000000018b23a: cmovp ecx, [rcx+0x4af80754]; lea eax, [rdi+rax]; vzeroupper; ret; 
0x0000000007f350: cmovs eax, [rbx+0x149f0e0]; ret; 
0x00000000147458: cmovs eax, [rbx-0x3fcef73c]; pop rbx; pop rbp; ret; 
0x000000001041d1: cmovs eax, [rbx-0x76b70f20]; ret; 
0x00000000044180: cmovs eax, [rbx-0x76bbef3c]; loopne 0x00000000000441e4; pop rbp; pop r12; ret; 
0x00000000027230: cmovs eax, edx; ret; 
0x000000000b8fc5: cmovs ecx, [rbp-0x7af0f081]; and [rax], cl; add [rax], al; ret; 
0x000000000b78b1: cmovs ecx, [rbp-0x7af0f081]; in al, 0x6; add [rax], al; ret; 
0x00000000082af8: cmovs ecx, [rbx+0x48082444]; add esp, 0x18; ret; 
0x0000000010fdad: cmovs ecx, [rbx+0x48c03116]; cmp ecx, edx; seta al; sbb eax, 0x0; ret; 
0x0000000018fa39: cmovs ecx, [rbx+0x498b4836]; clc; mov [rdi], rsi; mov [r9-0x8], rcx; ret; 
0x00000000096995: cmovs ecx, [rbx-0x173ef7be]; add al, 0x39; ret; 
0x000000000bb0c9: cmovs ecx, [rcx-0x12cff8a9]; mov [rdi+0xf], ch; ret; 
0x000000000bb0a9: cmovs ecx, [rcx-0x12cff9a9]; mov [rdi+0xe], ch; ret; 
0x000000000bb089: cmovs ecx, [rcx-0x12cffaa9]; mov [rdi+0xd], ch; ret; 
0x000000000b6f69: cmovs ecx, [rcx-0x6f3cf8a9]; movdqu xmm0, [rsi]; movdqu [rdi], xmm0; ret; 
0x000000000b8f89: cmovs ecx, [rcx-0x72b7f9a9]; or eax, 0xee88349; lea rdi, [rdi+0xe]; jne 0x00000000000b97f0; ret; 
0x0000000012ce88: cmovs edi, [rcx]; js short 0x000000000012ce95; jne short 0x000000000012ce80; mov rax, [rax+0x30]; ret; 
0x000000000bc1a0: cmovs esp, [rbx+0x4]; xchg esi, eax; add rax, rsi; notrack jmp rax; 
0x00000000091f37: cmp [r11+0x5d], bl; pop r12; ret; 
0x000000000cf096: cmp [r11], r15b; cmp [rbp+0x13], r14b; ret; 
0x000000000926f0: cmp [r13+0x41], r11b; pop rsp; ret; 
0x00000000146a82: cmp [r13+r9*4+0x6c], r9b; and al, 0x68; mov rsi, r13; call qword ptr [rax+0x10]; 
0x00000000043b72: cmp [r15], r9b; adc [rdi+0x48], eax; movups [rdi+0x58], xmm0; movups [rdi+0x68], xmm0; ret; 
0x000000001277b7: cmp [r8+0x39], r9b; ret; 
0x00000000088eae: cmp [r8-0x77], cl; adc [r8-0x77], cl; or [r8-0x77], cl; sbb r9b, bpl; ret far; 
0x00000000128351: cmp [r8-0x7d], cl; ret; 
0x00000000149d00: cmp [r8], al; add [rax], al; add [rcx-0xdd6b7ff], cl; mov rbp, rdx; call qword ptr [rbx+0x10]; 
0x00000000091e90: cmp [r9-0x3b7cb7fd], cl; sbb [rbx+0x5d], bl; ret; 
0x000000000bccfb: cmp [r9], edx; jne short 0x00000000000bcc95; test edx, edx; jne short 0x00000000000bcce0; ret; 
0x000000000ac1c7: cmp [rax+0x1], cl; clc; ret; 
0x0000000007e859: cmp [rax+0x39], cl; ret; 
0x0000000012ce8a: cmp [rax+0x8], edi; jne short 0x000000000012ce80; mov rax, [rax+0x30]; ret; 
0x0000000012ce89: cmp [rax+0x8], rdi; jne short 0x000000000012ce80; mov rax, [rax+0x30]; ret; 
0x00000000165917: cmp [rax+rax], eax; add [rbp-0x77], cl; ret far; 
0x0000000017ef57: cmp [rax+rax], ecx; add [rbp-0x77], cl; ret far; 
0x0000000015c5d3: cmp [rax-0x14], esp; jmp qword ptr [rbx+rcx*4+0x4]; 
0x00000000116d86: cmp [rax-0x1], bh; ret; 
0x000000001279d0: cmp [rax-0x3c41f0e8], cl; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000002b2dd: cmp [rax-0x75], cl; and al, 0x20; call rax; 
0x00000000088eaf: cmp [rax-0x77], cl; adc [r8-0x77], cl; or [r8-0x77], cl; sbb r9b, bpl; ret far; 
0x000000000926bd: cmp [rax-0x77], cl; ret; 
0x00000000146231: cmp [rax-0x7b], cl; shl byte ptr [rbp+rax+0x48], 0x89; out dx, eax; call rax; 
0x00000000148723: cmp [rax-0x7b], cl; shl byte ptr [rbp+rax+0x4c], 0x89; out dx, eax; call rax; 
0x0000000014cf22: cmp [rax-0x7b], cl; shl byte ptr [rcx+rcx+0x48], 0x8d; mov ebp, 0xc8; call rax; 
0x0000000014fd4f: cmp [rax-0x7b], cl; shl byte ptr [rsi+rax+0x48], 0x8d; jge short 0x000000000014fdc2; call rax; 
0x000000001507ef: cmp [rax-0x7b], cl; shl byte ptr [rsi+rax+0x48], 0x8d; jge short 0x0000000000150852; call rax; 
0x00000000128352: cmp [rax-0x7d], cl; ret; 
0x000000001847f6: cmp [rax-0x7f], ecx; mov dword ptr [rax-0x15000000], 0xbc0ff3d0; ror byte ptr [rax+0x1], 0xf8; vzeroupper; ret; 
0x00000000183cc3: cmp [rax], ah; movzx edx, byte ptr [rdx+rdi+0x20]; sub eax, edx; vzeroupper; ret; 
0x000000000ac1b6: cmp [rax], ah; ret; 
0x00000000149d01: cmp [rax], al; add [rax], al; add [rcx-0xdd6b7ff], cl; mov rbp, rdx; call qword ptr [rbx+0x10]; 
0x000000000e2f69: cmp [rax], al; add [rax], al; syscall; 
0x00000000091eb7: cmp [rax], al; je short 0x0000000000091ec0; ret; 
0x000000000b14f4: cmp [rax], dh; cmovne rax, rdx; ret; 
0x000000000ac696: cmp [rax], dh; ret; 
0x000000000ac1a6: cmp [rax], dl; ret; 
0x0000000012129b: cmp [rax], eax; je short 0x00000000001212a0; ret; 
0x000000000ac1a5: cmp [rax], r10b; ret; 
0x00000000183cc2: cmp [rax], r12b; movzx edx, byte ptr [rdx+rdi+0x20]; sub eax, edx; vzeroupper; ret; 
0x000000000ac1b5: cmp [rax], r12b; ret; 
0x000000000ac695: cmp [rax], r14b; ret; 
0x000000000b14f3: cmp [rax], sil; cmovne rax, rdx; ret; 
0x000000000cf09a: cmp [rbp+0x13], dh; ret; 
0x000000000cf099: cmp [rbp+0x13], r14b; ret; 
0x000000000475af: cmp [rbp+0x1a], ebx; add [rax], al; mov eax, [rax+0x58]; ret; 
0x000000000926f1: cmp [rbp+0x41], bl; pop rsp; ret; 
0x00000000146a83: cmp [rbp+rcx*4+0x6c], cl; and al, 0x68; mov rsi, r13; call qword ptr [rax+0x10]; 
0x00000000113133: cmp [rbp-0x2708fff3], ecx; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000011cdb1: cmp [rbp-0x3dbbf040], al; ret; 
0x0000000011bb38: cmp [rbp], ebx; jbe short 0x000000000011bb68; mov rsi, r12; mov rdi, r14; call r13; 
0x0000000011bb37: cmp [rbp], rbx; jbe short 0x000000000011bb68; mov rsi, r12; mov rdi, r14; call r13; 
0x000000000e1b87: cmp [rbx+0x10d9512d], al; add [rcx], al; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x000000000dfc57: cmp [rbx+0x10f7112d], al; add [rcx], al; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x00000000099f7e: cmp [rbx+0x154ef22d], eax; add [rcx], al; pop rbx; ret; 
0x00000000094a26: cmp [rbx+0x159dd22d], eax; add [rcx], al; pop rbx; ret; 
0x00000000084fff: cmp [rbx+0x445b012f], al; mov eax, eax; pop rbp; pop r12; ret; 
0x00000000085650: cmp [rbx+0x44], ebx; mov eax, eax; pop rbp; pop r12; ret; 
0x00000000025bc8: cmp [rbx+0x5d], bl; pop r12; pop r13; ret; 
0x00000000091f38: cmp [rbx+0x5d], bl; pop r12; ret; 
0x000000000244be: cmp [rbx+0x5d], bl; ret; 
0x0000000011c05f: cmp [rbx+0x5d], ebx; pop r12; ret; 
0x0000000015cb96: cmp [rbx+0x94aba2d], eax; add [rcx], al; mov rax, r8; pop rbp; ret; 
0x00000000138687: cmp [rbx+0xb7db12d], al; add [rcx], al; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x00000000126377: cmp [rbx+0xc9ab12d], al; add [rcx], al; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x000000001248c7: cmp [rbx+0xcb4092d], al; add [rcx], al; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x000000000dc5d0: cmp [rbx-0xfb7b], cl; inc dword ptr [rbp-0x7b]; fild st, dword ptr [rcx+0xf]; ret; 
0x000000000cf097: cmp [rbx], bh; cmp [rbp+0x13], r14b; ret; 
0x00000000127415: cmp [rcx+rcx*4+0x7b], cl; sub cl, ch; paddw mm7, mm7; call qword ptr [rax-0x4115d6b8]; 
0x00000000147b51: cmp [rcx+rcx*4-0x19], cl; call qword ptr [rax+0x20]; 
0x000000001509c5: cmp [rcx+rcx*4-0x2], cl; mov rax, [rdi+0x38]; call qword ptr [rax+0x8]; 
0x00000000086436: cmp [rcx+rcx*4-0x38], al; ret; 
0x00000000152489: cmp [rcx+rcx*4-0x39], cl; call qword ptr [rax+0x20]; 
0x0000000008afc8: cmp [rcx+rcx*4-0x40], al; pop rbx; pop rbp; pop r12; ret; 
0x000000000fecd0: cmp [rcx+rcx*4-0x40], cl; ret; 
0x00000000130cc3: cmp [rcx+rcx*4-0xa], al; mov rdi, r13; call qword ptr [rsp+0x50]; 
0x00000000091e91: cmp [rcx-0x3b7cb7fd], cl; sbb [rbx+0x5d], bl; ret; 
0x00000000139a95: cmp [rcx-0xa], al; ret; 
0x0000000017c5f9: cmp [rcx], al; sbb rax, 0xffffffffffffffff; ret; 
0x000000000b8eb4: cmp [rcx], cl; add [rax], al; ret; 
0x000000001279a0: cmp [rcx], dh; rcr byte ptr [rbx+0x5d], 0x41; pop rsp; ret; 
0x0000000009688e: cmp [rcx], dh; ror byte ptr [rax-0x75], 0x46; or [rax-0x77], cl; ret; 
0x00000000155b98: cmp [rcx], dh; ror byte ptr [rax-0x77], 0xe7; mov dword ptr [rsp], 0x2; call r8; 
0x000000001577a7: cmp [rcx], dh; sar byte ptr [rdx-0x1], 0x4c; mov esi, esi; mov rdi, rbp; call r12; 
0x000000000bccfc: cmp [rcx], edx; jne short 0x00000000000bcc95; test edx, edx; jne short 0x00000000000bcce0; ret; 
0x00000000093ec9: cmp [rdi+0x10], eax; cmovae rax, [rdi+0x10]; sub rax, [rdi+0x18]; ret; 
0x00000000093ec8: cmp [rdi+0x10], rax; cmovae rax, [rdi+0x10]; sub rax, [rdi+0x18]; ret; 
0x000000000fe038: cmp [rdi+0x15], dh; movzx ecx, byte ptr [r14+0x30]; movsxd rcx, [rsi+rcx*4]; add rcx, rsi; notrack jmp rcx; 
0x000000000fe037: cmp [rdi+0x15], r14b; movzx ecx, byte ptr [r14+0x30]; movsxd rcx, [rsi+rcx*4]; add rcx, rsi; notrack jmp rcx; 
0x000000001028fc: cmp [rdi+0x4], edx; ja short 0x0000000000102907; setne al; movzx eax, al; ret; 
0x0000000009ef4f: cmp [rdi+0x8], esi; jb short 0x000000000009ef60; mov [rdi], rsi; ret; 
0x0000000009ef4e: cmp [rdi+0x8], rsi; jb short 0x000000000009ef60; mov [rdi], rsi; ret; 
0x000000000cef3b: cmp [rdi+0xc], ecx; jne 0x00000000000cf0b0; xor eax, eax; ret; 
0x00000000043b73: cmp [rdi], cl; adc [rdi+0x48], eax; movups [rdi+0x58], xmm0; movups [rdi+0x68], xmm0; ret; 
0x000000001538ee: cmp [rdi], cl; adc [rsp+0x18], eax; call qword ptr [rax+0x18]; 
0x000000000f07fe: cmp [rdi], cl; mov dh, 0x14; cmp ch, cl; ret; 
0x0000000018df0d: cmp [rdi], dl; ret; 
0x0000000015fa4b: cmp [rdi], edx; or [rax], eax; call qword ptr [rax+0x8]; 
0x000000000f07fd: cmp [rdi], r9b; mov dh, 0x14; cmp ch, cl; ret; 
0x000000000328db: cmp [rdx+0x38], edi; jbe short 0x00000000000328f7; mov rax, [rdx+rdi*8+0x40]; ret; 
0x0000000008a751: cmp [rdx+0x48], eax; cmovne eax, ecx; ret; 
0x0000000008a74f: cmp [rdx+0x48], r8; cmovne eax, ecx; ret; 
0x00000000088610: cmp [rdx+0x8], eax; cmovae rax, [rdx+0x8]; sub rax, [rdx+0x10]; sar rax, 0x2; ret; 
0x0000000008860f: cmp [rdx+0x8], rax; cmovae rax, [rdx+0x8]; sub rax, [rdx+0x10]; sar rax, 0x2; ret; 
0x00000000023a6f: cmp [rdx+0xd8], eax; jne short 0x0000000000023a3b; ret; 
0x00000000023a6e: cmp [rdx+0xd8], rax; jne short 0x0000000000023a3b; ret; 
0x000000000bab08: cmp [rdx+0xf], cl; add [rcx+0x63], cl; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000e88d3: cmp [rdx-0x76b7000d], ebx; ret; 
0x000000000ca150: cmp [rdx], dl; add [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x0000000012d863: cmp [rdx], esp; add [rax], al; nop [rax+rax]; endbr64; ret; 
0x0000000016a056: cmp [rip+0x14634900], al; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169fb8: cmp [rip+0x14634900], eax; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000095559: cmp [rip+0x159931], edi; jbe short 0x0000000000095508; add rsp, 0x8; ret; 
0x00000000095558: cmp [rip+0x159931], rdi; jbe short 0x0000000000095508; add rsp, 0x8; ret; 
0x0000000011371c: cmp [rip-0x1010], ah; or esi, eax; xor eax, eax; mov [rdi+0x8], esi; ret; 
0x000000001983f1: cmp [rip-0x74b79c00], eax; add [rax-0x7d], cl; ret; 
0x0000000004c6a6: cmp [rsi+0x16], edi; add al, ch; adc [rcx-0x2], edi; call qword ptr [rax+0x56415741]; 
0x000000000328dd: cmp [rsi+0x17], dh; mov rax, [rdx+rdi*8+0x40]; ret; 
0x00000000193f78: cmp [rsi+0x634a0002], ah; or al, 0xa7; add rcx, rdi; notrack jmp rcx; 
0x000000000b84a8: cmp [rsi+0xf], ch; add [rcx+0x63], cl; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000e5168: cmp [rsi], ah; mov eax, 0x20; cmovne rax, rdx; ret; 
0x000000000e5038: cmp [rsi], ah; mov eax, 0x7f; cmovne rax, rdx; ret; 
0x000000000e5229: cmp [rsi], ah; sete al; movzx eax, al; lea rax, [rax+rax-0x1]; ret; 
0x000000000ee4aa: cmp [rsi], cl; je 0x00000000000ee3ed; ret; 
0x00000000120233: cmp [rsp+rcx+0x64d8f700], edi; mov [rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000018c3cb: cmp ah, [rax]; jne 0x000000000018c209; vzeroupper; ret; 
0x00000000183cc8: cmp ah, [rax]; sub eax, edx; vzeroupper; ret; 
0x00000000183a4f: cmp ah, [rbx-0x25]; cmp ch, [rcx]; shl byte ptr [rsi+0xf], 0x1; outsd dx, [rsi]; ret; 
0x00000000149762: cmp ah, [rbx-0x2]; jmp qword ptr [rsi+0x2e]; 
0x00000000151662: cmp ah, ah; std; jmp qword ptr [rsi+0x2e]; 
0x0000000011f167: cmp al, 0x0; add [rax], al; syscall; 
0x0000000015e860: cmp al, 0x12; std; jmp qword ptr [rsi+0x2e]; 
0x00000000062f2d: cmp al, 0x1; add [rax], al; syscall; 
0x0000000014f9f0: cmp al, 0x1f; jmp qword ptr [rsi+0x66]; 
0x00000000116ee8: cmp al, 0x20; je short 0x0000000000116ed8; mov byte ptr [rsi-0x1], 0x0; mov rax, r8; ret; 
0x00000000091a77: cmp al, 0x24; add rsp, 0x10; pop rbx; jmp rax; 
0x0000000011a8a3: cmp al, 0x24; call rbx; 
0x0000000011f5f5: cmp al, 0x24; mov eax, 0x116; syscall; 
0x0000000010c1d6: cmp al, 0x24; mov eax, 0x11; syscall; 
0x0000000010c286: cmp al, 0x24; mov eax, 0x12; syscall; 
0x0000000012043f: cmp al, 0x24; mov eax, 0x2d; mov rdx, [rsp+0x10]; mov rsi, [rsp+0x8]; syscall; 
0x0000000010e9e7: cmp al, 0x24; mov r8d, eax; mov eax, 0x55; syscall; 
0x0000000015f750: cmp al, 0x24; mov rax, [rax+0x1d8]; jmp rax; 
0x000000000457a6: cmp al, 0x24; mov rdx, r14; mov rax, [rsp]; call rax; 
0x00000000146a95: cmp al, 0x24; mov rsi, r13; mov rax, [rdi+0x38]; call qword ptr [rax+0x10]; 
0x00000000044670: cmp al, 0x24; mov rsi, r15; call r14; 
0x00000000146947: cmp al, 0x24; mov rsi, rbp; mov rax, [rdi+0x38]; call qword ptr [rax+0x8]; 
0x000000000bcf92: cmp al, 0x24; movzx esi, bl; call rbp; 
0x000000000bd056: cmp al, 0x24; push 0x0; lea rcx, [rax+0x1]; lea r9, [rsp+0x28]; call rbx; 
0x000000001469fa: cmp al, 0x24; test r15d, r15d; je short 0x0000000000146a80; mov rax, [rdi+0x38]; call qword ptr [rax+0x18]; 
0x00000000143752: cmp al, 0x25; xor [rax], al; add [rax], al; call rax; 
0x0000000018f663: cmp al, 0x2; add [rax], al; xor eax, eax; ret; 
0x0000000004486e: cmp al, 0x30; mov rdx, rbp; mov rsi, r12; mov rdi, r13; call rbx; 
0x000000000a28c3: cmp al, 0x3d; mov eax, 0x0; cmovne r8, rax; mov rax, r8; ret; 
0x000000000e81d3: cmp al, 0x3f; jne short 0x00000000000e8209; mov eax, 0x1; ret; 
0x000000000e81f4: cmp al, 0x3f; jne short 0x00000000000e8229; mov eax, 0x1; ret; 
0x00000000116c68: cmp al, 0x48; add esp, 0x38; ret; 
0x00000000152f1e: cmp al, 0x4c; lea ecx, [rsp+0x3a]; call qword ptr [rax]; 
0x000000000b7a60: cmp al, 0x5; add [rax], al; ret; 
0x00000000169c66: cmp al, 0x5; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000018c397: cmp al, 0xa; jne 0x000000000018c209; vzeroupper; ret; 
0x0000000018c81d: cmp al, 0xa; jne 0x000000000018c679; vzeroupper; ret; 
0x00000000118737: cmp al, 0xd; add [rbp-0x76f98b01], al; cmp eax, 0xd3c04; ret; 
0x000000000e13b8: cmp al, 0xe0; adc [rax], al; syscall; 
0x00000000152eb7: cmp al, 0xe8; in al, 0xff; call far fword ptr [rsi+0x5f]; 
0x00000000152c5e: cmp al, 0xe8; pushfq; out 0xff, al; call far fword ptr [rsi+0x5f]; 
0x0000000018c394: cmp al, 0xe; cmp edi, [rdx+rcx]; jne 0x000000000018c209; vzeroupper; ret; 
0x0000000018c81a: cmp al, 0xe; cmp edi, [rdx+rcx]; jne 0x000000000018c679; vzeroupper; ret; 
0x000000001945a6: cmp al, 0xf; mov es, [rdx+rdi*8-0x76b30001]; fild st, word ptr [rcx-0x73]; ret; 
0x000000001945d6: cmp al, 0xf; mov gs, [rdi-0x72000006]; ret; 
0x00000000081eb0: cmp al, 0xfa; jmp qword ptr [rbx+rcx*4+0x4]; 
0x0000000009df6c: cmp al, 0xfc; jmp qword ptr [rbx+rcx*4+0x4]; 
0x000000000dd011: cmp al, 0xfd; add al, [rax]; add [rax], al; syscall; 
0x00000000032877: cmp al, 0xff; cmovne edx, eax; lea rax, [rip+0x1bb21d]; mov [rip+0x1bb274], dl; ret; 
0x000000000e3106: cmp al, [rax]; add [rax], al; syscall; 
0x0000000014c7ea: cmp al, [rbp+0xa]; add [rdi], cl; add eax, 0xffff7be9; jmp qword ptr [rsi+0x2e]; 
0x0000000018b102: cmp al, [rdx]; add [rax], al; vzeroupper; ret; 
0x00000000169e68: cmp al, [rip+0x14634900]; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000019235e: cmp al, [rsi-0x1]; jne 0x00000000001924d5; xor eax, eax; ret; 
0x000000001924b6: cmp al, [rsi-0x1]; jne short 0x00000000001924d5; xor eax, eax; ret; 
0x00000000092a50: cmp al, bl; nop [rax+rax]; sub rax, rcx; sub eax, 0x1; ret; 
0x0000000009e47d: cmp al, ch; in eax, dx; test edx, edi; jmp qword ptr [rsi+0x66]; 
0x000000000ac186: cmp al, dh; ret; 
0x000000000ac185: cmp al, r14b; ret; 
0x00000000121fdc: cmp ax, 0xffff; je short 0x0000000000122010; add eax, 0x1; mov [rdx], ax; ret; 
0x00000000041baa: cmp bh, 0xff; inc eax; shr eax, 0x1f; ret; 
0x0000000008c182: cmp bh, [rsi-0x6]; jmp qword ptr [rsi+0x2e]; 
0x0000000009e152: cmp bh, ah; jmp qword ptr [rbx+rcx*4+0x4]; 
0x0000000012946a: cmp bh, al; mov eax, edx; cmove eax, ecx; ret; 
0x0000000012ebff: cmp bh, ch; jmp qword ptr [rsi+0xf]; 
0x0000000018dbc2: cmp bh, cl; add al, [rax]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x000000001294e1: cmp bh, cl; cmovne eax, esi; ret; 
0x0000000009291c: cmp bl, ch; test al, 0x90; endbr64; mov rax, 0xffffffffffffffff; ret; 
0x00000000054364: cmp byte ptr [rax+0x1], 0x0; jne short 0x0000000000054360; pop rbx; ret; 
0x0000000010d2f7: cmp byte ptr [rax+0x48000001], 0x85; shl byte ptr [rdi+rbp+0x31], 0xd2; xor esi, esi; mov rdi, rbp; call rax; 
0x0000000010d38a: cmp byte ptr [rax+0x48000001], 0x85; shl byte ptr [rsp+rdi+0x31], 0xd2; call rax; 
0x0000000014d072: cmp byte ptr [rax+0xf000000], 0xc8; mov eax, eax; mov [rdx], rax; mov eax, 0x1; ret; 
0x00000000054339: cmp byte ptr [rax-0x1], 0x2f; jne short 0x0000000000054330; pop rbx; ret; 
0x0000000017c5f8: cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x0000000012129a: cmp byte ptr [rcx], 0x0; je short 0x00000000001212a0; ret; 
0x000000000422cb: cmp byte ptr [rdi+0x2d], 0x0; add [rax+0x1fe8c17f], al; ret; 
0x0000000004739c: cmp byte ptr [rdi], 0x0; jne short 0x00000000000473a8; pop rbx; ret; 
0x00000000115fb6: cmp byte ptr [rsi], 0x0; lea rdx, [rsi+0x1]; jne short 0x0000000000115f90; ret; 
0x000000000782a4: cmp ch, 0xff; dec dword ptr [rbx-0x4ef6b]; dec dword ptr [rcx-0x4f773]; jmp far fword ptr [rcx]; 
0x000000001661fa: cmp ch, 0xff; jmp qword ptr [rsi+0xf]; 
0x00000000157a46: cmp ch, 0xff; nop [rax]; endbr64; xor eax, eax; ret; 
0x00000000183a52: cmp ch, [rcx]; shl byte ptr [rsi+0xf], 0x1; outsd dx, [rsi]; ret; 
0x000000000f0802: cmp ch, cl; ret; 
0x0000000013e8b7: cmp ch, dh; dec dword ptr [rax-0x77]; ret; 
0x000000000ec430: cmp cl, 0x2d; jne short 0x00000000000ec41d; mov byte ptr [rdi+0x8], 0x16; mov eax, 0x1; ret; 
0x00000000134878: cmp cl, 0x5; jbe 0x00000000001347e9; xor eax, eax; pop rbx; ret; 
0x000000000ec3ff: cmp cl, 0x5e; jne short 0x00000000000ec430; mov byte ptr [rdi+0x8], 0x19; mov eax, 0x1; ret; 
0x000000000646f1: cmp cl, 0xff; dec dword ptr [rax-0x77]; ret; 
0x0000000018384d: cmp cl, [rax+0x63]; leave; add rax, rcx; sub rax, rdi; ret; 
0x0000000010442a: cmp cl, [rax-0x75]; mov ebp, 0xfffffe50; mov rdx, [r12]; mov rax, [rbp-0x1e0]; call rax; 
0x0000000013e59b: cmp cl, [rax-0x77]; ret; 
0x0000000013e55c: cmp cl, [rax-0x7d]; ret; 
0x000000000544bc: cmp cl, [rdi]; xchg esp, eax; ret; 
0x000000000bab86: cmp cl, [rdx+0xf]; add [rbx+0x63], cl; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000100495: cmp cl, bh; mov dword ptr [rsi], 0x0; movups [rsi+0x8], xmm0; ret; 
0x000000000cabe8: cmp cl, ch; adc dl, [rax]; cli; jmp qword ptr [rsi-0x70]; 
0x000000000e63ba: cmp cl, ch; adc eax, 0x41ffffff; call qword ptr [rsp+0x30]; 
0x0000000015d153: cmp cx, 0x3; jbe short 0x000000000015d160; ret; 
0x00000000057c15: cmp cx, 0x7fff; jne short 0x0000000000057bfc; mov eax, 0x1; ret; 
0x000000000eea0b: cmp dh, 0xff; call qword ptr [rax+0x18738b4c]; 
0x0000000013b61e: cmp dh, 0xff; jmp qword ptr [rsi+0xf]; 
0x00000000188071: cmp dh, [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x00000000190a0e: cmp dh, [rdx+0x2]; mov [rdi], cl; vzeroupper; ret; 
0x000000001294a7: cmp dh, al; mov eax, edx; cmove eax, ecx; ret; 
0x00000000120c29: cmp dh, bh; dec dword ptr [rbx+0x48042444]; add esp, 0x28; ret; 
0x00000000120b71: cmp dh, bh; dec dword ptr [rbx+0x48182444]; add esp, 0x28; ret; 
0x00000000129518: cmp dh, cl; cmovne eax, edx; ret; 
0x000000000f7e4c: cmp dh, dh; ret; 
0x00000000129469: cmp dil, al; mov eax, edx; cmove eax, ecx; ret; 
0x000000001294e0: cmp dil, cl; cmovne eax, esi; ret; 
0x000000000bc064: cmp dl, 0x1; ja short 0x00000000000bc07e; jb short 0x00000000000bc06d; mov [rdi], cl; ret; 
0x0000000018fa6f: cmp dl, 0x1; jb short 0x000000000018fa78; mov cl, [rsi]; mov [rdi], cl; ret; 
0x0000000019013e: cmp dl, 0x1; jb short 0x0000000000190145; mov [rdi], cl; ret; 
0x000000001900fa: cmp dl, 0x20; jb short 0x0000000000190109; vmovdqu [rdi], ymm2; vmovdqu [rsi-0x20], ymm2; ret; 
0x00000000190131: cmp dl, 0x2; jb short 0x000000000019013e; mov [rdi], cx; mov [rsi-0x2], cx; ret; 
0x0000000009f350: cmp dl, 0x3; je short 0x000000000009f360; movsx eax, dl; ret; 
0x000000001900e7: cmp dl, 0x40; jb short 0x00000000001900fa; vmovups [rdi], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x00000000190126: cmp dl, 0x4; jb short 0x0000000000190131; mov [rdi], ecx; mov [rsi-0x4], ecx; ret; 
0x00000000190113: cmp dl, 0x8; jb short 0x0000000000190122; vmovq [rdi], xmm0; vmovq [rsi-0x8], xmm0; ret; 
0x0000000006e26a: cmp dl, 0xff; dec dword ptr [rbx-0x53f63]; jmp qword ptr [rbx+rcx*4]; 
0x0000000009c29d: cmp dl, al; jne short 0x000000000009c288; sub rax, 0x10; ret; 
0x0000000009c29c: cmp dl, r8b; jne short 0x000000000009c288; sub rax, 0x10; ret; 
0x000000000874cc: cmp dword ptr [rax+0x30], 0x0; je short 0x00000000000874d8; ret; 
0x00000000148a8e: cmp dword ptr [rax+0x31000023], 0xfffffff6; lea r12, [rbx+0x23b0]; mov dword ptr [rbx+0x23b0], 0x0; mov rdi, r12; call qword ptr [rax+0x28]; 
0x000000000fa31c: cmp dword ptr [rax+0x41000000], 0xffffff8b; sub cl, [rbp-0xff7b]; jmp far fword ptr [rcx-0x101]; 
0x000000000e5167: cmp dword ptr [rax], 0x26; mov eax, 0x20; cmovne rax, rdx; ret; 
0x000000000e5037: cmp dword ptr [rax], 0x26; mov eax, 0x7f; cmovne rax, rdx; ret; 
0x000000000e5228: cmp dword ptr [rax], 0x26; sete al; movzx eax, al; lea rax, [rax+rax-0x1]; ret; 
0x00000000127b07: cmp dword ptr [rbx+0x28], 0x0; mov eax, 0x0; cmovns rax, [rbx+0x28]; pop rbx; ret; 
0x00000000102aad: cmp dword ptr [rdi+0x14], 0x1000000; mov edx, 0x2; cmove eax, edx; ret; 
0x0000000008cd5a: cmp dword ptr [rdi+0x18], 0x0; setne r8b; mov eax, r8d; ret; 
0x00000000091eb5: cmp dword ptr [rdi+0x38], 0x0; je short 0x0000000000091ec0; ret; 
0x0000000012cf0c: cmp dword ptr [rdi], 0x0; je short 0x000000000012cf20; ret; 
0x0000000009e225: cmp dword ptr [rip+0x150ce4], 0x0; je short 0x000000000009e230; ret; 
0x000000000dd145: cmp dword ptr [rsi+0x8], 0x3b9ac9ff; ja short 0x00000000000dd178; mov eax, 0xe3; syscall; 
0x00000000119721: cmp dword ptr [rsi], 0x0; mov rbx, rsi; je short 0x0000000000119730; pop rbx; ret; 
0x000000000e5166: cmp dword ptr fs:[rax], 0x26; mov eax, 0x20; cmovne rax, rdx; ret; 
0x000000000e5036: cmp dword ptr fs:[rax], 0x26; mov eax, 0x7f; cmovne rax, rdx; ret; 
0x000000000e5227: cmp dword ptr fs:[rax], 0x26; sete al; movzx eax, al; lea rax, [rax+rax-0x1]; ret; 
0x00000000102a3e: cmp dx, 0x2; je short 0x0000000000102a48; ret; 
0x0000000015d13f: cmp dx, cx; sete al; ret; 
0x00000000098d3e: cmp eax, 0x100153e; pop rbp; ret; 
0x000000000a8a52: cmp eax, 0x106469; mov edx, edx; movsxd rdx, [rdi+rdx*4]; add rdx, rdi; notrack jmp rdx; 
0x000000000e1dd9: cmp eax, 0x10d702; syscall; 
0x000000000e1c99: cmp eax, 0x10d842; syscall; 
0x000000000e1be1: cmp eax, 0x10d8fa; syscall; 
0x000000000e1b05: cmp eax, 0x10d9ce; syscall; 
0x000000000e1935: cmp eax, 0x10db5e; syscall; 
0x000000000e1771: cmp eax, 0x10dcda; syscall; 
0x000000000e13b7: cmp eax, 0x10e03c; syscall; 
0x000000000dfea9: cmp eax, 0x10f4c2; syscall; 
0x000000000dfd69: cmp eax, 0x10f602; syscall; 
0x000000000dfcb1: cmp eax, 0x10f6ba; syscall; 
0x000000000df8e5: cmp eax, 0x10fa7e; syscall; 
0x000000000df715: cmp eax, 0x10fc0e; syscall; 
0x000000000df551: cmp eax, 0x10fd8a; syscall; 
0x000000000ddbb9: cmp eax, 0x10fdc2; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000ddb73: cmp eax, 0x10fe08; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000dd9d1: cmp eax, 0x10ffaa; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000dd9a2: cmp eax, 0x10ffd9; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000dd8d9: cmp eax, 0x1100a2; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000dd8b0: cmp eax, 0x1100cb; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000dd3de: cmp eax, 0x11059d; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000dec69: cmp eax, 0x11061a; syscall; 
0x000000000e4fc1: cmp eax, 0x11954; mov edx, 0x7d00; mov eax, 0x7f; cmove rax, rdx; ret; 
0x000000000d2bc5: cmp eax, 0x11c5d6; syscall; 
0x000000000d2991: cmp eax, 0x11c80a; syscall; 
0x000000000ca331: cmp eax, 0x12364a; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000ca14e: cmp eax, 0x12382d; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000ca665: cmp eax, 0x126b46; syscall; 
0x00000000080ea9: cmp eax, 0x12db5a; movsxd rcx, [rdi+rcx*4]; add rcx, rdi; notrack jmp rcx; 
0x000000000e5014: cmp eax, 0x137f; mov edx, 0x7f; cmovne rax, rdx; ret; 
0x0000000006c677: cmp eax, 0x141690; movsxd rax, [rdi+r12*4]; add rax, rdi; notrack jmp rax; 
0x00000000064619: cmp eax, 0x1492e2; movzx r12d, r12b; movsxd rax, [rdi+r12*4]; add rax, rdi; notrack jmp rax; 
0x0000000009fada: cmp eax, 0x14f4e5; mov rsi, r13; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000009fa92: cmp eax, 0x14f52d; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000009f95d: cmp eax, 0x14f5de; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000009f8b4: cmp eax, 0x14f70b; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000009c825: cmp eax, 0x150356; syscall; 
0x0000000009e1d1: cmp eax, 0x150d32; syscall; 
0x0000000009dff1: cmp eax, 0x150f12; syscall; 
0x0000000009de05: cmp eax, 0x1510fe; syscall; 
0x0000000009dd95: cmp eax, 0x15116e; syscall; 
0x0000000009db65: cmp eax, 0x15139e; syscall; 
0x00000000099ac5: cmp eax, 0x1530b6; syscall; 
0x00000000099a65: cmp eax, 0x153116; syscall; 
0x000000000996a5: cmp eax, 0x1534d6; syscall; 
0x00000000099445: cmp eax, 0x153736; syscall; 
0x00000000098ddd: cmp eax, 0x153d9e; syscall; 
0x00000000098da5: cmp eax, 0x153dd6; syscall; 
0x0000000009aa75: cmp eax, 0x15440e; syscall; 
0x00000000099fd9: cmp eax, 0x154e9a; syscall; 
0x00000000096046: cmp eax, 0x158e2d; syscall; 
0x00000000096015: cmp eax, 0x158e6e; syscall; 
0x00000000095d95: cmp eax, 0x1590ee; syscall; 
0x00000000095871: cmp eax, 0x159612; syscall; 
0x0000000009555a: cmp eax, 0x159931; jbe short 0x0000000000095508; add rsp, 0x8; ret; 
0x00000000094c56: cmp eax, 0x159ba5; syscall; 
0x00000000094a81: cmp eax, 0x159d7a; syscall; 
0x000000000948e5: cmp eax, 0x159f16; syscall; 
0x00000000093957: cmp eax, 0x15ae64; syscall; 
0x00000000093417: cmp eax, 0x15b3a4; syscall; 
0x00000000093073: cmp eax, 0x15b748; syscall; 
0x00000000092d07: cmp eax, 0x15bab4; syscall; 
0x00000000091683: cmp eax, 0x15d138; syscall; 
0x000000000913c3: cmp eax, 0x15d3f8; syscall; 
0x0000000009104f: cmp eax, 0x15d76c; syscall; 
0x00000000084394: cmp eax, 0x16a3e7; syscall; 
0x00000000083f97: cmp eax, 0x16a7e4; syscall; 
0x00000000083eec: cmp eax, 0x16a88f; syscall; 
0x00000000082025: cmp eax, 0x16f186; syscall; 
0x000000000610d9: cmp eax, 0x18d672; syscall; 
0x00000000060e55: cmp eax, 0x18d8f2; syscall; 
0x0000000005ec81: cmp eax, 0x18fabe; syscall; 
0x0000000005eb41: cmp eax, 0x18fbfe; syscall; 
0x0000000002418e: cmp eax, 0x18fcef; mov rsi, [rax]; xor eax, eax; call qword ptr [rdx+0x1d0]; 
0x000000000240c1: cmp eax, 0x18fda2; mov rsi, [rax]; xor eax, eax; call qword ptr [rdx+0x1d0]; 
0x00000000054da5: cmp eax, 0x199986; syscall; 
0x00000000054bc5: cmp eax, 0x199b66; syscall; 
0x00000000054746: cmp eax, 0x199fdd; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000d0058: cmp eax, 0x19; jg short 0x00000000000d0080; mov rax, r12; pop r12; ret; 
0x00000000054695: cmp eax, 0x19a096; syscall; 
0x000000000522a9: cmp eax, 0x19c252; syscall; 
0x0000000005212d: cmp eax, 0x19c3ce; syscall; 
0x000000000520f5: cmp eax, 0x19c406; syscall; 
0x0000000018a7e1: cmp eax, 0x1; ja 0x000000000018a4b0; je 0x000000000018a4a0; vzeroupper; ret; 
0x0000000018a6bd: cmp eax, 0x1; ja 0x000000000018a590; je 0x000000000018a580; vzeroupper; ret; 
0x0000000018b3ed: cmp eax, 0x1; ja 0x000000000018b2c0; je 0x000000000018b2b0; vzeroupper; ret; 
0x0000000010d4de: cmp eax, 0x1; ja short 0x000000000010d510; mov eax, 0x4; syscall; 
0x0000000010d53d: cmp eax, 0x1; ja short 0x000000000010d570; mov eax, 0x5; syscall; 
0x0000000010d59e: cmp eax, 0x1; ja short 0x000000000010d5d0; mov eax, 0x6; syscall; 
0x000000001481bb: cmp eax, 0x1; je short 0x0000000000148210; mov dword ptr [rsi], 0x10; mov [rsi+0x8], rax; ret; 
0x00000000117c40: cmp eax, 0x1; jg short 0x0000000000117c46; ret; 
0x00000000155d20: cmp eax, 0x1; jne short 0x0000000000155d15; mov rax, [rdi+0x8]; jmp qword ptr [rax]; 
0x00000000156c08: cmp eax, 0x1; jne short 0x0000000000156be0; mov rax, [rdi+0x8]; mov rsi, rsp; call qword ptr [rax]; 
0x00000000157c87: cmp eax, 0x1; sete r8b; add rsp, 0x8; mov eax, r8d; ret; 
0x000000000478e1: cmp eax, 0x1a6bfa; syscall; 
0x00000000047821: cmp eax, 0x1a6cba; syscall; 
0x00000000047759: cmp eax, 0x1a6d82; syscall; 
0x00000000047681: cmp eax, 0x1a6e5a; syscall; 
0x00000000046779: cmp eax, 0x1a750a; syscall; 
0x000000000466b4: cmp eax, 0x1a75cf; syscall; 
0x00000000046512: cmp eax, 0x1a7771; syscall; 
0x00000000046438: cmp eax, 0x1a784b; syscall; 
0x000000000385a0: cmp eax, 0x1b555b; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003853f: cmp eax, 0x1b55bc; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000038502: cmp eax, 0x1b5731; syscall; 
0x00000000036b7f: cmp eax, 0x1b707c; syscall; 
0x0000000003658b: cmp eax, 0x1b7630; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000036522: cmp eax, 0x1b7699; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000363f3: cmp eax, 0x1b77c8; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000036393: cmp eax, 0x1b7828; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000036285: cmp eax, 0x1b78f6; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000036219: cmp eax, 0x1b7962; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035f82: cmp eax, 0x1b79f9; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035e76: cmp eax, 0x1b7b05; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035f54: cmp eax, 0x1b7ba7; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035d08: cmp eax, 0x1b7c73; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035e4f: cmp eax, 0x1b7cac; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035cd6: cmp eax, 0x1b7e25; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035905: cmp eax, 0x1b8076; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000359ce: cmp eax, 0x1b81ad; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003592c: cmp eax, 0x1b81cf; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035989: cmp eax, 0x1b81f2; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035844: cmp eax, 0x1b830f; syscall; 
0x00000000035827: cmp eax, 0x1b832c; syscall; 
0x0000000003575f: cmp eax, 0x1b83f4; syscall; 
0x000000000345ba: cmp eax, 0x1b9541; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000033ae6: cmp eax, 0x1b9e95; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000033a0b: cmp eax, 0x1b9f70; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000033994: cmp eax, 0x1b9fe7; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000338fa: cmp eax, 0x1ba081; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000033360: cmp eax, 0x1ba61b; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000332f6: cmp eax, 0x1ba685; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000330f6: cmp eax, 0x1ba885; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000310c5: cmp eax, 0x1bc8b6; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000030cbd: cmp eax, 0x1bccbe; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000030b6b: cmp eax, 0x1bce10; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000030a83: cmp eax, 0x1bcef8; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000309f6: cmp eax, 0x1bcf85; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000307c1: cmp eax, 0x1bd1ba; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000030779: cmp eax, 0x1bd202; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000026f6e: cmp eax, 0x1c69e1; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000026079: cmp eax, 0x1cb132; syscall; 
0x00000000025f0d: cmp eax, 0x1cb29e; syscall; 
0x00000000025ded: cmp eax, 0x1cb3be; syscall; 
0x00000000022848: cmp eax, 0x1cb403; syscall; 
0x00000000095228: cmp eax, 0x2000000; jbe short 0x0000000000095230; ret; 
0x000000000e4fef: cmp eax, 0x2468; jne short 0x00000000000e5013; mov eax, 0xfffa; ret; 
0x00000000062f5a: cmp eax, 0x26; je short 0x0000000000062f86; mov r8d, 0xffffffff; mov eax, r8d; ret; 
0x0000000010d8d7: cmp eax, 0x26; je short 0x000000000010d8e0; mov eax, r9d; ret; 
0x0000000011f7e8: cmp eax, 0x26; je short 0x000000000011f824; mov eax, r8d; ret; 
0x00000000080e0d: cmp eax, 0x29; ja short 0x0000000000080e20; movsxd rax, [rdi+rax*4]; add rax, rdi; notrack jmp rax; 
0x000000000bc726: cmp eax, 0x2; je short 0x00000000000bc738; xor eax, eax; ret; 
0x00000000155d15: cmp eax, 0x2; sete al; movzx eax, al; ret; 
0x00000000194190: cmp eax, 0x2a48b; movsxd r12, [rdi+r12*4]; add rdi, r12; notrack jmp rdi; 
0x00000000193f77: cmp eax, 0x2a638; movsxd rcx, [rdi+r12*4]; add rcx, rdi; notrack jmp rcx; 
0x000000000980c4: cmp eax, 0x31450015; shl byte ptr [rdi+rax*8], 0xc; add [rax], al; add [rcx+rcx*4-0x40], cl; ret; 
0x0000000015fc8e: cmp eax, 0x38c48348; ret; 
0x0000000014866d: cmp eax, 0x3; jbe short 0x0000000000148680; mov eax, 0x2; ret; 
0x000000000f1fc2: cmp eax, 0x3; je short 0x00000000000f2020; xor eax, eax; pop rbp; ret; 
0x00000000094e78: cmp eax, 0x408; jbe short 0x0000000000094e80; ret; 
0x000000001135bc: cmp eax, 0x410000; je short 0x00000000001135f0; mov eax, 0x101; syscall; 
0x00000000052a24: cmp eax, 0x480019bc; lea eax, [rip+0x19bc31]; mov byte ptr [rax+rdx], 0x0; ret; 
0x00000000033d87: cmp eax, 0x48001b80; movsxd edi, edi; mov rax, fs:[rax]; mov rax, [rax+rdi*8+0x80]; ret; 
0x00000000085a72: cmp eax, 0x48ea894c; mov esi, ebp; mov rdi, rbx; call qword ptr [r14+0x38]; 
0x0000000004833a: cmp eax, 0x4; je short 0x0000000000048300; mov eax, 0xffffffff; ret; 
0x0000000009469e: cmp eax, 0x4; je short 0x00000000000946a4; ret; 
0x00000000098ddf: cmp eax, 0x50f0015; pop rbp; ret; 
0x000000000e5111: cmp eax, 0x517b; jne short 0x00000000000e5120; mov eax, 0x40; ret; 
0x000000000e5141: cmp eax, 0x52654973; mov edx, 0x40; mov eax, 0x20; cmove rax, rdx; ret; 
0x000000000e4ffe: cmp eax, 0x54190100; mov edx, 0x7d00; mov eax, 0x7f; cmove rax, rdx; ret; 
0x000000001987f1: cmp eax, 0x55492; syscall; 
0x000000001989b1: cmp eax, 0x55e4a; syscall; 
0x00000000198ce1: cmp eax, 0x57832; syscall; 
0x000000000e4f75: cmp eax, 0x58465342; jne short 0x00000000000e4f80; ret; 
0x000000000e50cd: cmp eax, 0x58465342; mov edx, 0x40; mov eax, 0x20; cmove rax, rdx; ret; 
0x00000000169bc8: cmp eax, 0x63490005; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000150683: cmp eax, 0x6379c; mov ecx, esi; movsxd rax, [rdi+rcx*4]; add rax, rdi; notrack jmp rax; 
0x0000000014fd9f: cmp eax, 0x64040; mov ecx, esi; movsxd rax, [rdi+rcx*4]; add rax, rdi; notrack jmp rax; 
0x0000000014cf6f: cmp eax, 0x66a4c; mov ecx, esi; movsxd rax, [rdi+rcx*4]; add rax, rdi; notrack jmp rax; 
0x000000000d015b: cmp eax, 0x71; jg short 0x00000000000d0180; lea rax, [rip+0x11ef39]; add rsp, 0x8; ret; 
0x000000000740b6: cmp eax, 0x7; ja 0x0000000000074731; movsxd rax, [r14+rax*4]; add rax, r14; notrack jmp rax; 
0x0000000007a766: cmp eax, 0x7; ja 0x000000000007b031; movsxd rax, [r14+rax*4]; add rax, r14; notrack jmp rax; 
0x000000000d015a: cmp eax, 0x7f71f883; and [rax-0x73], cl; add eax, 0x11ef39; add rsp, 0x8; ret; 
0x00000000106cd9: cmp eax, 0x8348000b; in al, dx; or al, ch; fcmovnbe st, st(2); bnd jmp qword ptr [rsi+0x66]; 
0x000000000a28fd: cmp eax, 0x8348f075; rol byte ptr [rcx], 0x84; sar byte ptr [rdx], cl; cmove rax, rdx; ret; 
0x00000000062f3a: cmp eax, 0x83c08941; clc; push qword ptr [rbp+rcx+0x44]; mov eax, eax; ret; 
0x0000000011332f: cmp eax, 0x8bfff813; and al, 0x8; add rsp, 0x28; ret; 
0x000000000ee30d: cmp eax, 0x8c48348; pop rbx; pop rbp; ret; 
0x0000000015f3a0: cmp eax, 0x8ca4b; mov [rsp+0x8], rcx; lea rdi, [r15+0x908]; call qword ptr [r15+0xf08]; 
0x0000000015de05: cmp eax, 0x8e626; test edi, edi; jns short 0x000000000015de10; ret; 
0x0000000015e081: cmp eax, 0x935d2; syscall; 
0x0000000015cf49: cmp eax, 0x9470a; syscall; 
0x0000000015ce69: cmp eax, 0x947ea; syscall; 
0x0000000015cc81: cmp eax, 0x949d2; syscall; 
0x0000000015cbf1: cmp eax, 0x94a62; syscall; 
0x0000000015cb51: cmp eax, 0x94b02; syscall; 
0x0000000015caa1: cmp eax, 0x94bb2; syscall; 
0x0000000015c6d1: cmp eax, 0x94f82; syscall; 
0x0000000005b6da: cmp eax, 0x9; ja short 0x000000000005b6b0; mov rax, r8; ret; 
0x000000001534d0: cmp eax, 0x9d94b; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000153400: cmp eax, 0x9da1b; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000153330: cmp eax, 0x9daeb; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000153268: cmp eax, 0x9dbb3; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000001531b0: cmp eax, 0x9dc6b; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000152441: cmp eax, 0x9e9aa; syscall; 
0x000000001522e1: cmp eax, 0x9eb0a; syscall; 
0x000000001520d5: cmp eax, 0x9ed16; syscall; 
0x00000000151f35: cmp eax, 0x9eeb6; syscall; 
0x00000000151da1: cmp eax, 0x9f04a; syscall; 
0x00000000151c61: cmp eax, 0x9f18a; syscall; 
0x00000000151b01: cmp eax, 0x9f2ea; syscall; 
0x000000001519f1: cmp eax, 0x9f3fa; syscall; 
0x00000000095288: cmp eax, 0xa0; jbe short 0x0000000000095290; ret; 
0x0000000014e4e1: cmp eax, 0xa2906; syscall; 
0x0000000014c7e9: cmp eax, 0xa453a; syscall; 
0x0000000014c6a9: cmp eax, 0xa467a; syscall; 
0x0000000014c5f1: cmp eax, 0xa4732; syscall; 
0x0000000014c505: cmp eax, 0xa4816; syscall; 
0x0000000014c335: cmp eax, 0xa49b6; syscall; 
0x0000000014c171: cmp eax, 0xa4b52; syscall; 
0x0000000010cf96: cmp eax, 0xa7622; mov rdx, [rax+0xb0]; call qword ptr [rax+0x88]; 
0x000000001467d3: cmp eax, 0xaa38c; syscall; 
0x00000000146292: cmp eax, 0xaa849; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000144635: cmp eax, 0xac496; syscall; 
0x000000001442fd: cmp eax, 0xac7ce; syscall; 
0x00000000143f7d: cmp eax, 0xacb4e; syscall; 
0x00000000143d57: cmp eax, 0xacd74; syscall; 
0x00000000143bf5: cmp eax, 0xaced6; syscall; 
0x000000001439b8: cmp eax, 0xad113; syscall; 
0x00000000143746: cmp eax, 0xad365; ror rdi, 0x11; xor rdi, fs:[0x30]; call rax; 
0x00000000142f61: cmp eax, 0xadab2; syscall; 
0x00000000142ddf: cmp eax, 0xadc34; syscall; 
0x00000000142da5: cmp eax, 0xadc6e; syscall; 
0x00000000142c8d: cmp eax, 0xadd86; syscall; 
0x00000000142449: cmp eax, 0xae5ca; syscall; 
0x00000000142381: cmp eax, 0xae692; syscall; 
0x00000000142265: cmp eax, 0xae7ae; syscall; 
0x00000000140e92: cmp eax, 0xaf929; syscall; 
0x00000000140bbe: cmp eax, 0xafc01; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000013d711: cmp eax, 0xb2e02; syscall; 
0x0000000013d415: cmp eax, 0xb30fe; syscall; 
0x000000001390e5: cmp eax, 0xb741a; syscall; 
0x00000000138b65: cmp eax, 0xb797e; syscall; 
0x000000001389a1: cmp eax, 0xb7afa; syscall; 
0x000000001388d9: cmp eax, 0xb7b62; syscall; 
0x00000000138799: cmp eax, 0xb7ca2; syscall; 
0x000000001386e1: cmp eax, 0xb7d5a; syscall; 
0x0000000013858c: cmp eax, 0xb7eab; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000137ff1: cmp eax, 0xb8442; syscall; 
0x00000000137cd1: cmp eax, 0xb8762; syscall; 
0x00000000137c6b: cmp eax, 0xb8770; call rax; 
0x00000000137b15: cmp eax, 0xb891e; syscall; 
0x00000000134789: cmp eax, 0xbbb3a; syscall; 
0x00000000134649: cmp eax, 0xbbc7a; syscall; 
0x00000000134591: cmp eax, 0xbbd32; syscall; 
0x000000001344b1: cmp eax, 0xbbe0a; syscall; 
0x00000000133fe5: cmp eax, 0xbc25e; syscall; 
0x00000000133a15: cmp eax, 0xbc7ce; syscall; 
0x000000001334f5: cmp eax, 0xbcca6; syscall; 
0x00000000133329: cmp eax, 0xbce32; syscall; 
0x000000001331e9: cmp eax, 0xbcf72; syscall; 
0x000000000e50fb: cmp eax, 0xbd00bd0; mov edx, 0x40; mov eax, 0x20; cmove rax, rdx; ret; 
0x000000000e4fa7: cmp eax, 0xbd00bd0; mov edx, 0xfde8; mov eax, 0x7f; cmove rax, rdx; ret; 
0x00000000133131: cmp eax, 0xbd02a; syscall; 
0x00000000133051: cmp eax, 0xbd102; syscall; 
0x00000000132c35: cmp eax, 0xbd4d6; syscall; 
0x00000000132619: cmp eax, 0xbda92; syscall; 
0x000000001324c1: cmp eax, 0xbdbea; syscall; 
0x00000000132401: cmp eax, 0xbdcaa; syscall; 
0x00000000132319: cmp eax, 0xbdd8a; syscall; 
0x00000000132235: cmp eax, 0xbde36; syscall; 
0x00000000131bd5: cmp eax, 0xbe456; syscall; 
0x000000001319c9: cmp eax, 0xbe61a; syscall; 
0x00000000131871: cmp eax, 0xbe772; syscall; 
0x000000001317b1: cmp eax, 0xbe832; syscall; 
0x000000001316c9: cmp eax, 0xbe912; syscall; 
0x00000000130ab5: cmp eax, 0xbf4ae; syscall; 
0x00000000130845: cmp eax, 0xbf6de; syscall; 
0x000000001300c5: cmp eax, 0xbfdfe; syscall; 
0x0000000012d120: cmp eax, 0xc2d43; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000eaa84: cmp eax, 0xc638b; movzx eax, al; movsxd rax, [rdi+rax*4]; add rax, rdi; notrack jmp rax; 
0x0000000005c7bf: cmp eax, 0xc7000015; test [rdi+rdi*8-0x1], esp; jmp qword ptr [rsi]; 
0x000000001265c9: cmp eax, 0xc9862; syscall; 
0x00000000126489: cmp eax, 0xc99a2; syscall; 
0x000000001263d1: cmp eax, 0xc9a5a; syscall; 
0x00000000125ff7: cmp eax, 0xc9e2c; syscall; 
0x00000000125df5: cmp eax, 0xc9ff6; syscall; 
0x00000000125c15: cmp eax, 0xca18e; syscall; 
0x00000000125a51: cmp eax, 0xca30a; syscall; 
0x00000000125981: cmp eax, 0xca386; syscall; 
0x000000001258b7: cmp eax, 0xca450; syscall; 
0x00000000125822: cmp eax, 0xca4e5; syscall; 
0x00000000124b19: cmp eax, 0xcb1ba; syscall; 
0x000000001249d9: cmp eax, 0xcb2fa; syscall; 
0x00000000124921: cmp eax, 0xcb3b2; syscall; 
0x00000000124327: cmp eax, 0xcb9a4; syscall; 
0x00000000124125: cmp eax, 0xcbb4e; syscall; 
0x00000000123f45: cmp eax, 0xcbcc6; syscall; 
0x00000000123d81: cmp eax, 0xcbe22; syscall; 
0x0000000011873f: cmp eax, 0xd3c04; ret; 
0x000000000db261: cmp eax, 0xd5162; mov esi, eax; movsxd rdx, [rdi+rsi*4]; add rdx, rdi; notrack jmp rdx; 
0x000000000db3bd: cmp eax, 0xd51f2; mov esi, eax; movsxd rdx, [rdi+rsi*4]; add rdx, rdi; notrack jmp rdx; 
0x00000000118711: cmp eax, 0xd713a; syscall; 
0x000000001185f5: cmp eax, 0xd7256; syscall; 
0x00000000118195: cmp eax, 0xd76b6; syscall; 
0x00000000117c5a: cmp eax, 0xd7bf1; syscall; 
0x000000000d83b0: cmp eax, 0xd7c3b; movzx esi, cl; movsxd rdx, [rdi+rsi*4]; add rdx, rdi; notrack jmp rdx; 
0x000000001173c6: cmp eax, 0xd839d; test rdi, rdi; jne short 0x00000000001173e0; mov eax, 0x1; ret; 
0x000000000d5e06: cmp eax, 0xd9e91; movzx eax, al; movsxd rax, [rdi+rax*4]; add rax, rdi; notrack jmp rax; 
0x000000000d4f0d: cmp eax, 0xdac32; movzx eax, al; movsxd rax, [rdi+rax*4]; add rax, rdi; notrack jmp rax; 
0x00000000104de0: cmp eax, 0xe708b; add rbx, fs:[0x0]; mov r9, rbx; add r8, r15; call r13; 
0x000000000465a4: cmp eax, 0xe8000000; ret; 
0x00000000106ac5: cmp eax, 0xe8af6; syscall; 
0x0000000010601c: cmp eax, 0xe95a3; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000e5121: cmp eax, 0xef53; mov edx, 0x40; mov eax, 0x20; cmove rax, rdx; ret; 
0x000000000c6ac7: cmp eax, 0xff; je short 0x00000000000c6ad3; mov eax, r8d; ret; 
0x00000000094eb8: cmp eax, 0xffff; jbe short 0x0000000000094ec0; ret; 
0x00000000043441: cmp eax, 0xfffff000; ja short 0x0000000000043450; ret; 
0x0000000004348d: cmp eax, 0xfffff000; ja short 0x00000000000434e0; ret; 
0x00000000048258: cmp eax, 0xfffff000; ja short 0x00000000000482b0; ret; 
0x00000000062ebc: cmp eax, 0xfffff000; ja short 0x0000000000062ec8; ret; 
0x00000000062eef: cmp eax, 0xfffff000; ja short 0x0000000000062f00; ret; 
0x000000000d0dfc: cmp eax, 0xfffff000; ja short 0x00000000000d0e08; ret; 
0x000000000d0f11: cmp eax, 0xfffff000; ja short 0x00000000000d0f20; ret; 
0x000000000d10b1: cmp eax, 0xfffff000; ja short 0x00000000000d10c0; ret; 
0x000000000dd156: cmp eax, 0xfffff000; ja short 0x00000000000dd160; ret; 
0x000000000de2ec: cmp eax, 0xfffff000; ja short 0x00000000000de2f8; ret; 
0x000000000e2c6b: cmp eax, 0xfffff000; ja short 0x00000000000e2cd0; ret; 
0x000000000e2d1e: cmp eax, 0xfffff000; ja short 0x00000000000e2d90; ret; 
0x000000000e2e78: cmp eax, 0xfffff000; ja short 0x00000000000e2eb0; ret; 
0x0000000010c19b: cmp eax, 0xfffff000; ja short 0x000000000010c200; ret; 
0x0000000010c24b: cmp eax, 0xfffff000; ja short 0x000000000010c2b0; ret; 
0x0000000010d4eb: cmp eax, 0xfffff000; ja short 0x000000000010d4f8; ret; 
0x0000000010d54a: cmp eax, 0xfffff000; ja short 0x000000000010d558; ret; 
0x0000000010d5ab: cmp eax, 0xfffff000; ja short 0x000000000010d5b8; ret; 
0x0000000010d933: cmp eax, 0xfffff000; ja short 0x000000000010d940; ret; 
0x0000000010d996: cmp eax, 0xfffff000; ja short 0x000000000010d9a0; ret; 
0x0000000010d9f0: cmp eax, 0xfffff000; ja short 0x000000000010da00; ret; 
0x0000000010dc29: cmp eax, 0xfffff000; ja short 0x000000000010dc38; ret; 
0x0000000010e003: cmp eax, 0xfffff000; ja short 0x000000000010e060; ret; 
0x0000000010e0a8: cmp eax, 0xfffff000; ja short 0x000000000010e100; ret; 
0x0000000010e13c: cmp eax, 0xfffff000; ja short 0x000000000010e148; ret; 
0x0000000010e16c: cmp eax, 0xfffff000; ja short 0x000000000010e178; ret; 
0x0000000010e848: cmp eax, 0xfffff000; ja short 0x000000000010e890; ret; 
0x0000000010e9c8: cmp eax, 0xfffff000; ja short 0x000000000010ea10; ret; 
0x00000000112998: cmp eax, 0xfffff000; ja short 0x00000000001129f0; ret; 
0x0000000011301b: cmp eax, 0xfffff000; ja short 0x0000000000113098; ret; 
0x000000001130df: cmp eax, 0xfffff000; ja short 0x00000000001130f0; ret; 
0x00000000113124: cmp eax, 0xfffff000; ja short 0x0000000000113130; ret; 
0x0000000011322b: cmp eax, 0xfffff000; ja short 0x0000000000113290; ret; 
0x000000001132db: cmp eax, 0xfffff000; ja short 0x0000000000113340; ret; 
0x0000000011337c: cmp eax, 0xfffff000; ja short 0x0000000000113388; ret; 
0x00000000113639: cmp eax, 0xfffff000; ja short 0x0000000000113648; ret; 
0x0000000011366f: cmp eax, 0xfffff000; ja short 0x0000000000113680; ret; 
0x000000001136ac: cmp eax, 0xfffff000; ja short 0x00000000001136b8; ret; 
0x00000000113b92: cmp eax, 0xfffff000; ja short 0x0000000000113be8; ret; 
0x00000000113da5: cmp eax, 0xfffff000; ja short 0x0000000000113db0; ret; 
0x00000000113de6: cmp eax, 0xfffff000; ja short 0x0000000000113df0; ret; 
0x00000000114418: cmp eax, 0xfffff000; ja short 0x0000000000114470; ret; 
0x000000001144b8: cmp eax, 0xfffff000; ja short 0x0000000000114510; ret; 
0x0000000011455e: cmp eax, 0xfffff000; ja short 0x00000000001145c8; ret; 
0x0000000011461e: cmp eax, 0xfffff000; ja short 0x0000000000114688; ret; 
0x00000000114fab: cmp eax, 0xfffff000; ja short 0x0000000000115020; ret; 
0x000000001151d8: cmp eax, 0xfffff000; ja short 0x0000000000115220; ret; 
0x00000000115298: cmp eax, 0xfffff000; ja short 0x00000000001152e0; ret; 
0x00000000115358: cmp eax, 0xfffff000; ja short 0x0000000000115360; ret; 
0x00000000116adc: cmp eax, 0xfffff000; ja short 0x0000000000116ae8; ret; 
0x00000000116cc1: cmp eax, 0xfffff000; ja short 0x0000000000116cd0; ret; 
0x00000000116cfc: cmp eax, 0xfffff000; ja short 0x0000000000116d08; ret; 
0x00000000116d2c: cmp eax, 0xfffff000; ja short 0x0000000000116d38; ret; 
0x00000000118917: cmp eax, 0xfffff000; ja short 0x0000000000118980; pop rbx; pop rbp; ret; 
0x00000000118a18: cmp eax, 0xfffff000; ja short 0x0000000000118a70; ret; 
0x0000000011c4f3: cmp eax, 0xfffff000; ja short 0x000000000011c500; ret; 
0x0000000011f1cc: cmp eax, 0xfffff000; ja short 0x000000000011f1d8; ret; 
0x0000000011f271: cmp eax, 0xfffff000; ja short 0x000000000011f2e8; ret; 
0x0000000011f324: cmp eax, 0xfffff000; ja short 0x000000000011f330; ret; 
0x0000000011f45b: cmp eax, 0xfffff000; ja short 0x000000000011f4c0; ret; 
0x0000000011f50b: cmp eax, 0xfffff000; ja short 0x000000000011f570; ret; 
0x0000000011f5bb: cmp eax, 0xfffff000; ja short 0x000000000011f620; ret; 
0x0000000011f66b: cmp eax, 0xfffff000; ja short 0x000000000011f6e8; ret; 
0x0000000011f738: cmp eax, 0xfffff000; ja short 0x000000000011f790; ret; 
0x0000000011f800: cmp eax, 0xfffff000; ja short 0x000000000011f838; mov r8d, eax; mov eax, r8d; ret; 
0x0000000011f864: cmp eax, 0xfffff000; ja short 0x000000000011f870; ret; 
0x00000000120108: cmp eax, 0xfffff000; ja short 0x0000000000120160; ret; 
0x000000001201d8: cmp eax, 0xfffff000; ja short 0x0000000000120230; ret; 
0x00000000120341: cmp eax, 0xfffff000; ja short 0x00000000001203b0; ret; 
0x000000001203fb: cmp eax, 0xfffff000; ja short 0x0000000000120470; ret; 
0x000000001204b8: cmp eax, 0xfffff000; ja short 0x0000000000120510; ret; 
0x00000000120561: cmp eax, 0xfffff000; ja short 0x00000000001205d0; ret; 
0x00000000120618: cmp eax, 0xfffff000; ja short 0x0000000000120670; ret; 
0x000000001206bb: cmp eax, 0xfffff000; ja short 0x0000000000120738; ret; 
0x00000000120b1b: cmp eax, 0xfffff000; ja short 0x0000000000120b80; ret; 
0x00000000120bcb: cmp eax, 0xfffff000; ja short 0x0000000000120c38; ret; 
0x00000000120c7b: cmp eax, 0xfffff000; ja short 0x0000000000120ce0; ret; 
0x00000000120eeb: cmp eax, 0xfffff000; ja short 0x0000000000120f50; ret; 
0x00000000120f9b: cmp eax, 0xfffff000; ja short 0x0000000000121010; ret; 
0x0000000012104c: cmp eax, 0xfffff000; ja short 0x0000000000121058; ret; 
0x0000000012107c: cmp eax, 0xfffff000; ja short 0x0000000000121088; ret; 
0x000000001210bc: cmp eax, 0xfffff000; ja short 0x00000000001210c8; ret; 
0x0000000012118f: cmp eax, 0xfffff000; ja short 0x00000000001211a0; ret; 
0x000000001211cc: cmp eax, 0xfffff000; ja short 0x00000000001211d8; ret; 
0x000000001211fc: cmp eax, 0xfffff000; ja short 0x0000000000121208; ret; 
0x0000000012122f: cmp eax, 0xfffff000; ja short 0x0000000000121240; ret; 
0x0000000012126c: cmp eax, 0xfffff000; ja short 0x0000000000121278; ret; 
0x0000000012e7de: cmp eax, 0xfffff000; ja short 0x000000000012e7f0; ret; 
0x00000000112b22: cmp eax, 0xfffff000; mov eax, 0x0; cmova eax, edx; ret; 
0x0000000004340c: cmp eax, 0xfffff001; jae short 0x0000000000043414; ret; 
0x000000000439fc: cmp eax, 0xfffff001; jae short 0x0000000000043a04; ret; 
0x00000000054f32: cmp eax, 0xfffff001; jae short 0x0000000000054f3c; xor eax, eax; ret; 
0x000000000d41ec: cmp eax, 0xfffff001; jae short 0x00000000000d41f4; ret; 
0x000000000d421c: cmp eax, 0xfffff001; jae short 0x00000000000d4224; ret; 
0x000000000e2b7c: cmp eax, 0xfffff001; jae short 0x00000000000e2b84; ret; 
0x000000000e2dcc: cmp eax, 0xfffff001; jae short 0x00000000000e2dd4; ret; 
0x000000000e31ac: cmp eax, 0xfffff001; jae short 0x00000000000e31b4; ret; 
0x000000000e415c: cmp eax, 0xfffff001; jae short 0x00000000000e4164; ret; 
0x000000000e43ac: cmp eax, 0xfffff001; jae short 0x00000000000e43b4; ret; 
0x000000000e43dc: cmp eax, 0xfffff001; jae short 0x00000000000e43e4; ret; 
0x000000000e443c: cmp eax, 0xfffff001; jae short 0x00000000000e4444; ret; 
0x000000000e446c: cmp eax, 0xfffff001; jae short 0x00000000000e4474; ret; 
0x000000000e449c: cmp eax, 0xfffff001; jae short 0x00000000000e44a4; ret; 
0x000000000e44cc: cmp eax, 0xfffff001; jae short 0x00000000000e44d4; ret; 
0x0000000010268c: cmp eax, 0xfffff001; jae short 0x0000000000102694; ret; 
0x000000001026bc: cmp eax, 0xfffff001; jae short 0x00000000001026c4; ret; 
0x000000001026ec: cmp eax, 0xfffff001; jae short 0x00000000001026f4; ret; 
0x0000000010271c: cmp eax, 0xfffff001; jae short 0x0000000000102724; ret; 
0x0000000010274c: cmp eax, 0xfffff001; jae short 0x0000000000102754; ret; 
0x0000000010277c: cmp eax, 0xfffff001; jae short 0x0000000000102784; ret; 
0x000000001027ac: cmp eax, 0xfffff001; jae short 0x00000000001027b4; ret; 
0x000000001027dc: cmp eax, 0xfffff001; jae short 0x00000000001027e4; ret; 
0x0000000010d40c: cmp eax, 0xfffff001; jae short 0x000000000010d414; ret; 
0x0000000010da3c: cmp eax, 0xfffff001; jae short 0x000000000010da44; ret; 
0x0000000010da6c: cmp eax, 0xfffff001; jae short 0x000000000010da74; ret; 
0x0000000010db9c: cmp eax, 0xfffff001; jae short 0x000000000010dba4; ret; 
0x0000000010dbcc: cmp eax, 0xfffff001; jae short 0x000000000010dbd4; ret; 
0x0000000010dc8c: cmp eax, 0xfffff001; jae short 0x000000000010dc94; ret; 
0x0000000010dcbc: cmp eax, 0xfffff001; jae short 0x000000000010dcc4; ret; 
0x0000000010e5ac: cmp eax, 0xfffff001; jae short 0x000000000010e5b4; ret; 
0x0000000010e8cc: cmp eax, 0xfffff001; jae short 0x000000000010e8d4; ret; 
0x0000000010e8fc: cmp eax, 0xfffff001; jae short 0x000000000010e904; ret; 
0x0000000010e92c: cmp eax, 0xfffff001; jae short 0x000000000010e934; ret; 
0x0000000010e95c: cmp eax, 0xfffff001; jae short 0x000000000010e964; ret; 
0x0000000010e98c: cmp eax, 0xfffff001; jae short 0x000000000010e994; ret; 
0x0000000010ea4c: cmp eax, 0xfffff001; jae short 0x000000000010ea54; ret; 
0x0000000010ea7c: cmp eax, 0xfffff001; jae short 0x000000000010ea84; ret; 
0x0000000010f39c: cmp eax, 0xfffff001; jae short 0x000000000010f3a4; ret; 
0x0000000010f3cc: cmp eax, 0xfffff001; jae short 0x000000000010f3d4; ret; 
0x0000000010f3fc: cmp eax, 0xfffff001; jae short 0x000000000010f404; ret; 
0x0000000010f42f: cmp eax, 0xfffff001; jae short 0x000000000010f437; ret; 
0x0000000010fbec: cmp eax, 0xfffff001; jae short 0x000000000010fbf4; ret; 
0x0000000010fc1f: cmp eax, 0xfffff001; jae short 0x000000000010fc27; ret; 
0x0000000010fc4c: cmp eax, 0xfffff001; jae short 0x000000000010fc54; ret; 
0x0000000010fc7c: cmp eax, 0xfffff001; jae short 0x000000000010fc84; ret; 
0x0000000010fcac: cmp eax, 0xfffff001; jae short 0x000000000010fcb4; ret; 
0x0000000010fcdf: cmp eax, 0xfffff001; jae short 0x000000000010fce7; ret; 
0x0000000010fd0c: cmp eax, 0xfffff001; jae short 0x000000000010fd14; ret; 
0x0000000010fd3c: cmp eax, 0xfffff001; jae short 0x000000000010fd44; ret; 
0x0000000010fd6c: cmp eax, 0xfffff001; jae short 0x000000000010fd74; ret; 
0x00000000112fdf: cmp eax, 0xfffff001; jae short 0x0000000000112fe7; ret; 
0x00000000113e1c: cmp eax, 0xfffff001; jae short 0x0000000000113e24; ret; 
0x0000000011421c: cmp eax, 0xfffff001; jae short 0x0000000000114224; ret; 
0x000000001143dc: cmp eax, 0xfffff001; jae short 0x00000000001143e4; ret; 
0x00000000114e1c: cmp eax, 0xfffff001; jae short 0x0000000000114e24; ret; 
0x00000000114f6c: cmp eax, 0xfffff001; jae short 0x0000000000114f74; ret; 
0x0000000011516c: cmp eax, 0xfffff001; jae short 0x0000000000115174; ret; 
0x0000000011519c: cmp eax, 0xfffff001; jae short 0x00000000001151a4; ret; 
0x0000000011525c: cmp eax, 0xfffff001; jae short 0x0000000000115264; ret; 
0x0000000011531c: cmp eax, 0xfffff001; jae short 0x0000000000115324; ret; 
0x0000000011565c: cmp eax, 0xfffff001; jae short 0x0000000000115664; ret; 
0x0000000011568c: cmp eax, 0xfffff001; jae short 0x0000000000115694; ret; 
0x000000001156bc: cmp eax, 0xfffff001; jae short 0x00000000001156c4; ret; 
0x0000000011876e: cmp eax, 0xfffff001; jae short 0x0000000000118776; ret; 
0x000000001189ac: cmp eax, 0xfffff001; jae short 0x00000000001189b4; ret; 
0x000000001189dc: cmp eax, 0xfffff001; jae short 0x00000000001189e4; ret; 
0x00000000118aac: cmp eax, 0xfffff001; jae short 0x0000000000118ab4; ret; 
0x00000000118adc: cmp eax, 0xfffff001; jae short 0x0000000000118ae4; ret; 
0x00000000118b0f: cmp eax, 0xfffff001; jae short 0x0000000000118b17; ret; 
0x00000000118b3c: cmp eax, 0xfffff001; jae short 0x0000000000118b44; ret; 
0x00000000118b6c: cmp eax, 0xfffff001; jae short 0x0000000000118b74; ret; 
0x00000000118b9c: cmp eax, 0xfffff001; jae short 0x0000000000118ba4; ret; 
0x00000000118bcc: cmp eax, 0xfffff001; jae short 0x0000000000118bd4; ret; 
0x0000000011cdcf: cmp eax, 0xfffff001; jae short 0x000000000011cdd7; ret; 
0x0000000011cdfc: cmp eax, 0xfffff001; jae short 0x000000000011ce04; ret; 
0x0000000011ce2c: cmp eax, 0xfffff001; jae short 0x000000000011ce34; ret; 
0x0000000011ce5f: cmp eax, 0xfffff001; jae short 0x000000000011ce67; ret; 
0x0000000011ce8f: cmp eax, 0xfffff001; jae short 0x000000000011ce97; ret; 
0x0000000011cebc: cmp eax, 0xfffff001; jae short 0x000000000011cec4; ret; 
0x0000000011ceef: cmp eax, 0xfffff001; jae short 0x000000000011cef7; ret; 
0x0000000011cf1c: cmp eax, 0xfffff001; jae short 0x000000000011cf24; ret; 
0x0000000011cf4c: cmp eax, 0xfffff001; jae short 0x000000000011cf54; ret; 
0x0000000011cf7f: cmp eax, 0xfffff001; jae short 0x000000000011cf87; ret; 
0x0000000011cfac: cmp eax, 0xfffff001; jae short 0x000000000011cfb4; ret; 
0x0000000011cfdf: cmp eax, 0xfffff001; jae short 0x000000000011cfe7; ret; 
0x0000000011f01c: cmp eax, 0xfffff001; jae short 0x000000000011f024; ret; 
0x0000000011f04c: cmp eax, 0xfffff001; jae short 0x000000000011f054; ret; 
0x0000000011f19c: cmp eax, 0xfffff001; jae short 0x000000000011f1a4; ret; 
0x0000000011f1fc: cmp eax, 0xfffff001; jae short 0x000000000011f204; ret; 
0x0000000011f22c: cmp eax, 0xfffff001; jae short 0x000000000011f234; ret; 
0x0000000011f35c: cmp eax, 0xfffff001; jae short 0x000000000011f364; ret; 
0x0000000011f3ef: cmp eax, 0xfffff001; jae short 0x000000000011f3f7; ret; 
0x0000000011f41c: cmp eax, 0xfffff001; jae short 0x000000000011f424; ret; 
0x0000000011f93c: cmp eax, 0xfffff001; jae short 0x000000000011f944; ret; 
0x0000000011f96c: cmp eax, 0xfffff001; jae short 0x000000000011f974; ret; 
0x0000000011f9af: cmp eax, 0xfffff001; jae short 0x000000000011f9b7; ret; 
0x0000000011f9dc: cmp eax, 0xfffff001; jae short 0x000000000011f9e4; ret; 
0x0000000011fa0c: cmp eax, 0xfffff001; jae short 0x000000000011fa14; ret; 
0x0000000011fa3c: cmp eax, 0xfffff001; jae short 0x000000000011fa44; ret; 
0x0000000011fa6c: cmp eax, 0xfffff001; jae short 0x000000000011fa74; ret; 
0x0000000011fa9c: cmp eax, 0xfffff001; jae short 0x000000000011faa4; ret; 
0x0000000011facc: cmp eax, 0xfffff001; jae short 0x000000000011fad4; ret; 
0x0000000011fafc: cmp eax, 0xfffff001; jae short 0x000000000011fb04; ret; 
0x0000000011fb2f: cmp eax, 0xfffff001; jae short 0x000000000011fb37; ret; 
0x0000000011fb5c: cmp eax, 0xfffff001; jae short 0x000000000011fb64; ret; 
0x0000000011fb8f: cmp eax, 0xfffff001; jae short 0x000000000011fb97; ret; 
0x0000000011fbbc: cmp eax, 0xfffff001; jae short 0x000000000011fbc4; ret; 
0x0000000011fbec: cmp eax, 0xfffff001; jae short 0x000000000011fbf4; ret; 
0x0000000011fc1c: cmp eax, 0xfffff001; jae short 0x000000000011fc24; ret; 
0x0000000011fc4c: cmp eax, 0xfffff001; jae short 0x000000000011fc54; ret; 
0x0000000011fc7c: cmp eax, 0xfffff001; jae short 0x000000000011fc84; ret; 
0x0000000011fcaf: cmp eax, 0xfffff001; jae short 0x000000000011fcb7; ret; 
0x0000000011fcdf: cmp eax, 0xfffff001; jae short 0x000000000011fce7; ret; 
0x0000000011fd0c: cmp eax, 0xfffff001; jae short 0x000000000011fd14; ret; 
0x0000000011fd3c: cmp eax, 0xfffff001; jae short 0x000000000011fd44; ret; 
0x0000000011fd6f: cmp eax, 0xfffff001; jae short 0x000000000011fd77; ret; 
0x0000000011fd9f: cmp eax, 0xfffff001; jae short 0x000000000011fda7; ret; 
0x0000000011fdcf: cmp eax, 0xfffff001; jae short 0x000000000011fdd7; ret; 
0x0000000011fdfc: cmp eax, 0xfffff001; jae short 0x000000000011fe04; ret; 
0x0000000011fe2c: cmp eax, 0xfffff001; jae short 0x000000000011fe34; ret; 
0x0000000011fe5c: cmp eax, 0xfffff001; jae short 0x000000000011fe64; ret; 
0x0000000011fe8c: cmp eax, 0xfffff001; jae short 0x000000000011fe94; ret; 
0x0000000011febf: cmp eax, 0xfffff001; jae short 0x000000000011fec7; ret; 
0x0000000011feec: cmp eax, 0xfffff001; jae short 0x000000000011fef4; ret; 
0x0000000011ff1c: cmp eax, 0xfffff001; jae short 0x000000000011ff24; ret; 
0x0000000011ff4f: cmp eax, 0xfffff001; jae short 0x000000000011ff57; ret; 
0x0000000011ff7c: cmp eax, 0xfffff001; jae short 0x000000000011ff84; ret; 
0x0000000011ffaf: cmp eax, 0xfffff001; jae short 0x000000000011ffb7; ret; 
0x0000000011ffdf: cmp eax, 0xfffff001; jae short 0x000000000011ffe7; ret; 
0x0000000012000c: cmp eax, 0xfffff001; jae short 0x0000000000120014; ret; 
0x0000000012003c: cmp eax, 0xfffff001; jae short 0x0000000000120044; ret; 
0x0000000012006c: cmp eax, 0xfffff001; jae short 0x0000000000120074; ret; 
0x000000001200ac: cmp eax, 0xfffff001; jae short 0x00000000001200b4; ret; 
0x0000000012019c: cmp eax, 0xfffff001; jae short 0x00000000001201a4; ret; 
0x0000000012026c: cmp eax, 0xfffff001; jae short 0x0000000000120274; ret; 
0x0000000012029c: cmp eax, 0xfffff001; jae short 0x00000000001202a4; ret; 
0x000000001202cf: cmp eax, 0xfffff001; jae short 0x00000000001202d7; ret; 
0x000000001202fc: cmp eax, 0xfffff001; jae short 0x0000000000120304; ret; 
0x0000000012077f: cmp eax, 0xfffff001; jae short 0x0000000000120787; ret; 
0x000000001207ac: cmp eax, 0xfffff001; jae short 0x00000000001207b4; ret; 
0x000000001207dc: cmp eax, 0xfffff001; jae short 0x00000000001207e4; ret; 
0x0000000012080f: cmp eax, 0xfffff001; jae short 0x0000000000120817; ret; 
0x0000000012d0cf: cmp eax, 0xfffffe7c; call rax; 
0x00000000112d5d: cmp eax, 0xffffffa1; je short 0x0000000000112d68; neg eax; ret; 
0x00000000112fad: cmp eax, 0xffffffa1; je short 0x0000000000112fb8; neg eax; ret; 
0x000000000dd024: cmp eax, 0xffffffea; mov eax, 0x3; cmovne eax, edx; ret; 
0x0000000013b3f8: cmp eax, 0xfffffff5; je short 0x000000000013b3f0; pop rbx; ret; 
0x00000000055c70: cmp eax, 0xfffffff8; jne short 0x0000000000055c60; mov rax, rdx; ret; 
0x000000000ac7cf: cmp eax, 0xfffffff; mov ebp, 0xf80148c0; add rax, rsi; ret; 
0x0000000002fdda: cmp eax, 0xfffffffd; je short 0x000000000002fdf8; pop rbx; ret; 
0x0000000009cbc3: cmp eax, 0xffffffff; cmove rax, rdx; add rsp, 0x8; ret; 
0x00000000024269: cmp eax, 0xffffffff; je 0x0000000000024358; add rsp, 0x98; ret; 
0x00000000062f3e: cmp eax, 0xffffffff; je short 0x0000000000062f50; mov eax, r8d; ret; 
0x00000000082af4: cmp eax, 0xffffffff; je short 0x0000000000082b08; mov rax, [rsp+0x8]; add rsp, 0x18; ret; 
0x00000000121fdd: cmp eax, 0xffffffff; je short 0x0000000000122010; add eax, 0x1; mov [rdx], ax; ret; 
0x00000000121f9c: cmp eax, 0xffffffff; je short 0x0000000000122010; add eax, 0x1; mov [rdx], eax; ret; 
0x000000000e2bbd: cmp eax, 0xffffffff; mov r8d, 0x0; cmovne r8, rax; mov rax, r8; ret; 
0x0000000010c2a0: cmp eax, 0xffffffff; mov rax, [rsp]; add rsp, 0x28; ret; 
0x00000000160a22: cmp eax, 0xffffffff; sete dl; mov [rbx], edx; pop rbx; ret; 
0x000000001173f4: cmp eax, 0xffffffff; setne al; add rsp, 0x8; movzx eax, al; ret; 
0x000000000e31a5: cmp eax, [rax]; add [rax], al; syscall; 
0x00000000086064: cmp eax, [rbx+0x445b012f]; mov eax, eax; pop rbp; pop r12; ret; 
0x00000000125924: cmp eax, [rbx+0xca3e02d]; add [rcx], al; mov eax, r8d; add rsp, 0x8; ret; 
0x00000000113914: cmp eax, [rcx-0x77]; ret; 
0x00000000189711: cmp eax, [rcx]; add [rax], al; mov byte ptr [rdi], 0x0; vzeroupper; ret; 
0x00000000169db6: cmp eax, [rip+0x14634900]; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000162054: cmp eax, [rip+0x3e74e800]; out dx, al; dec dword ptr [rax-0x77]; ret; 
0x00000000121c69: cmp eax, [rip+0xca729]; mov [rdi+0x10], rax; jb short 0x0000000000121c88; mov qword ptr [rip+0xca6e0], 0x2; ret; 
0x00000000121d26: cmp eax, [rip+0xcdd24]; jae short 0x0000000000121d3a; mov rdx, [rip+0xcdd23]; add word ptr [rdx+rax*2], 0x1; ret; 
0x000000000cefbe: cmp eax, [rsi+0x10]; jne 0x00000000000cf0b0; ret; 
0x000000000cefd3: cmp eax, [rsi+0x14]; jne 0x00000000000cf0b0; ret; 
0x000000000cefe8: cmp eax, [rsi+0x18]; jne 0x00000000000cf0b0; ret; 
0x000000000cf003: cmp eax, [rsi+0x1c]; jne 0x00000000000cf0b0; ret; 
0x000000000cf01e: cmp eax, [rsi+0x20]; jne 0x00000000000cf0b0; ret; 
0x000000000cf033: cmp eax, [rsi+0x24]; jne short 0x00000000000cf0b0; ret; 
0x000000000cf048: cmp eax, [rsi+0x28]; jne short 0x00000000000cf0b0; ret; 
0x000000000cf053: cmp eax, [rsi+0x2c]; jne short 0x00000000000cf0b0; ret; 
0x000000000cf06e: cmp eax, [rsi+0x30]; jne short 0x00000000000cf0b0; ret; 
0x000000000cf083: cmp eax, [rsi+0x34]; jne short 0x00000000000cf0b0; ret; 
0x000000000cf098: cmp eax, [rsi+0x38]; jne short 0x00000000000cf0b0; ret; 
0x000000000cf0a3: cmp eax, [rsi+0x3c]; jne short 0x00000000000cf0b0; ret; 
0x000000000ec418: cmp eax, [rsi+0x40]; jl short 0x00000000000ec490; mov byte ptr [rdi+0x8], 0x1; mov eax, 0x1; ret; 
0x000000000cef73: cmp eax, [rsi+0x4]; jne 0x00000000000cf0b0; ret; 
0x000000000cef88: cmp eax, [rsi+0x8]; jne 0x00000000000cf0b0; ret; 
0x000000000cefa3: cmp eax, [rsi+0xc]; jne 0x00000000000cf0b0; ret; 
0x000000001929ba: cmp eax, [rsi-0x10]; jne 0x0000000000192af0; ret; 
0x00000000192a03: cmp eax, [rsi-0x4]; jne 0x0000000000192af0; ret; 
0x00000000192ae3: cmp eax, [rsi-0x4]; jne short 0x0000000000192af0; xor eax, eax; ret; 
0x000000001929e8: cmp eax, [rsi-0x8]; jne 0x0000000000192af0; ret; 
0x000000001929d3: cmp eax, [rsi-0xc]; jne 0x0000000000192af0; ret; 
0x000000000cef5d: cmp eax, [rsi]; jne 0x00000000000cf0b0; ret; 
0x000000000e4f87: cmp eax, eax; jne short 0x00000000000e4ffd; mov eax, 0x7d00; ret; 
0x000000000cf1be: cmp eax, eax; mov eax, 0x1; cmovg r9d, eax; mov eax, r9d; ret; 
0x00000000153a63: cmp eax, eax; std; jmp qword ptr [rsi+0xf]; 
0x00000000089191: cmp eax, ebx; jae 0x0000000000089870; lea rsi, [rsp+0x30]; mov rdi, r15; call qword ptr [r14+0x90]; 
0x0000000008f9dc: cmp eax, ebx; jae 0x000000000008fa90; mov rdi, rbp; call qword ptr [r13+0x20]; 
0x00000000086e48: cmp eax, ecx; cmovg rax, rcx; test rdx, rdx; jne short 0x0000000000086e40; ret; 
0x00000000091710: cmp eax, ecx; cmovg rax, rcx; test rdx, rdx; jne short 0x0000000000091708; ret; 
0x000000000cf377: cmp eax, ecx; ja short 0x00000000000cf390; sub rdi, 0x10; add rax, rdi; ret; 
0x0000000008806e: cmp eax, ecx; jae short 0x0000000000088075; mov r8d, [rax]; mov eax, r8d; ret; 
0x00000000079f71: cmp eax, ecx; jbe 0x000000000007a078; movsxd rdx, r13d; mov rdi, rbx; call qword ptr [r14+0x38]; 
0x00000000080480: cmp eax, ecx; jbe 0x0000000000080580; movsxd rdx, ebp; mov rdi, rbx; call qword ptr [r14+0x38]; 
0x00000000081cef: cmp eax, ecx; jbe 0x0000000000081df0; mov rsi, rsp; mov rdi, rbp; call qword ptr [rbx+0x90]; 
0x00000000081e61: cmp eax, ecx; jbe 0x0000000000081fc0; xor esi, esi; mov rdi, rbp; call qword ptr [rbx+0x10]; 
0x00000000084516: cmp eax, ecx; jbe 0x00000000000845b0; mov rdx, rbx; mov rsi, r12; call qword ptr [r14+0x38]; 
0x0000000008a093: cmp eax, ecx; jbe 0x000000000008a170; mov edx, 0x1; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x0000000008b0e5: cmp eax, ecx; jbe 0x000000000008b2c0; mov rdi, rbx; call qword ptr [rbp+0x60]; 
0x0000000008cab5: cmp eax, ecx; jbe 0x000000000008cc80; mov rdi, rbx; call qword ptr [rbp+0x60]; 
0x0000000008fe7d: cmp eax, ecx; jbe 0x000000000008ff70; mov rdi, rbx; call qword ptr [r12+0x88]; 
0x00000000091bb9: cmp eax, ecx; jbe 0x0000000000091c48; mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rbx+0x18]; 
0x00000000091da9: cmp eax, ecx; jbe 0x0000000000091e38; mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rbx+0x18]; 
0x00000000092546: cmp eax, ecx; jbe 0x0000000000092618; mov rdi, rbx; call qword ptr [r13+0x60]; 
0x00000000073d2b: cmp eax, ecx; jbe short 0x0000000000073d90; movsxd r12, r12d; mov rdx, r12; call qword ptr [r13+0x38]; 
0x0000000007a3ba: cmp eax, ecx; jbe short 0x000000000007a438; movsxd rbx, ebx; mov rdx, rbx; call qword ptr [r13+0x38]; 
0x00000000087d41: cmp eax, ecx; jbe short 0x0000000000087d70; mov rdi, rbx; call qword ptr [rbp+0x30]; 
0x0000000008bdf0: cmp eax, ecx; jbe short 0x000000000008be48; xor esi, esi; mov rdi, rbp; call qword ptr [r13+0x10]; 
0x0000000008dffd: cmp eax, ecx; jbe short 0x000000000008e020; call qword ptr [rbx+0x60]; 
0x0000000008e469: cmp eax, ecx; jbe short 0x000000000008e4c8; mov edx, 0x1; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x0000000008ffdd: cmp eax, ecx; jbe short 0x0000000000090018; mov rdi, rbp; call qword ptr [rbx+0x88]; 
0x00000000091ef6: cmp eax, ecx; jbe short 0x0000000000091f60; mov rdi, rbx; call qword ptr [rbp+0x68]; 
0x00000000091fac: cmp eax, ecx; jbe short 0x0000000000091fd8; mov rdi, rbx; call qword ptr [rbp+0x20]; 
0x0000000009296c: cmp eax, ecx; jbe short 0x00000000000929a0; mov rdi, rbx; call qword ptr [rbp+0x30]; 
0x000000000929ff: cmp eax, ecx; jbe short 0x0000000000092a20; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp+0x30]; 
0x000000000a88c2: cmp eax, ecx; je short 0x00000000000a88a8; mov rax, r8; ret; 
0x000000001922b2: cmp eax, ecx; jne 0x00000000001924c0; xor eax, eax; ret; 
0x0000000019241a: cmp eax, ecx; jne 0x00000000001924d5; xor eax, eax; ret; 
0x000000000cf188: cmp eax, ecx; jne short 0x00000000000cf190; mov eax, r9d; ret; 
0x000000001924d3: cmp eax, ecx; sbb eax, eax; sbb eax, 0xffffffff; ret; 
0x0000000005b3ce: cmp eax, edi; jae short 0x000000000005b380; mov rax, r10; pop rbx; ret; 
0x0000000013b93c: cmp eax, edi; jae short 0x000000000013b953; mov eax, 0xffffffff; ret; 
0x0000000008982c: cmp eax, edi; jbe 0x0000000000089958; xor edx, edx; mov rdi, r15; call qword ptr [rbx+0x80]; 
0x0000000008ed9c: cmp eax, edi; jbe 0x000000000008ee50; xor edx, edx; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x0000000008e50c: cmp eax, edi; jbe short 0x000000000008e530; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x000000000934d1: cmp eax, edi; jbe short 0x0000000000093530; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [r12+0x18]; 
0x000000000cf2af: cmp eax, edx; ja 0x00000000000cf390; add rax, rdi; add rax, rcx; ret; 
0x000000000939af: cmp eax, edx; jae short 0x00000000000939d8; movzx eax, byte ptr [rax]; ret; 
0x00000000157557: cmp eax, edx; jae short 0x0000000000157568; xor r8d, r8d; mov eax, r8d; ret; 
0x000000000a87d1: cmp eax, edx; jne short 0x00000000000a87c0; mov rax, r8; ret; 
0x0000000013b97a: cmp eax, edx; jne short 0x000000000013b950; mov [rsi], rdi; xor eax, eax; ret; 
0x000000000bcd37: cmp eax, edx; lea rdx, [rip+0xcf1b0]; lea rax, [rip+0x11389]; cmove rax, rdx; ret; 
0x000000000bc877: cmp eax, edx; lea rdx, [rip+0xcf940]; lea rax, [rip+0x11b79]; cmove rax, rdx; ret; 
0x000000000bca27: cmp eax, edx; lea rdx, [rip+0xcfbe0]; lea rax, [rip+0x12699]; cmove rax, rdx; ret; 
0x000000000bcb17: cmp eax, edx; lea rdx, [rip+0xd0240]; lea rax, [rip+0x12879]; cmove rax, rdx; ret; 
0x000000000bc837: cmp eax, edx; lea rdx, [rip+0xd02f0]; lea rax, [rip+0x129c9]; cmove rax, rdx; ret; 
0x000000000bc987: cmp eax, edx; lea rdx, [rip+0xd05c0]; lea rax, [rip+0x12f89]; cmove rax, rdx; ret; 
0x000000000a8bf7: cmp eax, edx; lea rdx, [rip+0xdbc60]; lea rax, [rip+0x3819]; cmove rax, rdx; ret; 
0x000000000a1ca7: cmp eax, edx; lea rdx, [rip+0xe2a60]; lea rax, [rip+0xa559]; cmove rax, rdx; ret; 
0x000000000a0427: cmp eax, edx; lea rdx, [rip+0xe4010]; lea rax, [rip+0xbaa9]; cmove rax, rdx; ret; 
0x000000000a1ce7: cmp eax, edx; lea rdx, [rip+0xe6530]; lea rax, [rip+0xf9d9]; cmove rax, rdx; ret; 
0x0000000009f837: cmp eax, edx; lea rdx, [rip+0xe8bd0]; lea rax, [rip+0x12099]; cmove rax, rdx; ret; 
0x0000000009f687: cmp eax, edx; lea rdx, [rip+0xe8f50]; lea rax, [rip+0x12549]; cmove rax, rdx; ret; 
0x0000000009f6c7: cmp eax, edx; lea rdx, [rip+0xe90b0]; lea rax, [rip+0x126a9]; cmove rax, rdx; ret; 
0x000000000e5095: cmp eax, edx; mov edx, 0x100; mov eax, 0x20; cmove rax, rdx; ret; 
0x00000000033c65: cmp eax, edx; mov rdx, 0xffffffffffffffff; cmove rax, rdx; ret; 
0x000000000a8943: cmp eax, edx; setne dil; test r9b, dil; jne short 0x00000000000a8928; ret; 
0x00000000087e1a: cmp eax, esi; ja short 0x0000000000087e10; lea eax, [rdx+rdi]; ret; 
0x0000000012768d: cmp eax, esi; jb short 0x00000000001276a0; mov eax, 0x1; ret; 
0x0000000013c501: cmp eax, esi; jb short 0x000000000013c4ed; mov eax, 0xffffffff; pop rbx; ret; 
0x000000000823ec: cmp eax, esi; jbe short 0x0000000000082448; mov rdi, rbx; call qword ptr [rbp+0x60]; 
0x00000000084ecd: cmp eax, esi; jbe short 0x0000000000084f44; mov rdi, rbx; call qword ptr [rbp+0x68]; 
0x000000000871bc: cmp eax, esi; jbe short 0x00000000000871f8; mov rdi, rbx; call qword ptr [rbp+0x20]; 
0x00000000087ddf: cmp eax, esi; jbe short 0x0000000000087df0; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp+0x30]; 
0x00000000091966: cmp eax, esi; jbe short 0x00000000000919c8; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp+0x18]; 
0x000000000a879d: cmp eax, esi; jne short 0x00000000000a8790; mov rax, r8; ret; 
0x000000000cf1bd: cmp eax, r8d; mov eax, 0x1; cmovg r9d, eax; mov eax, r9d; ret; 
0x00000000031ad0: cmp ebp, 0xc; ja 0x0000000000031bb3; movsxd r8, [rdx+r9*4]; add r8, rdx; notrack jmp r8; 
0x0000000009c1cf: cmp ebp, 0xffffffff; jmp qword ptr [rsi+0x66]; 
0x00000000127eae: cmp ebp, 0xffffffff; jmp qword ptr [rsi+0xf]; 
0x00000000117af1: cmp ebp, [rbp-0x1]; jmp qword ptr [rsp+rax*2-0x77]; 
0x00000000149161: cmp ebp, [rcx-0x2]; jmp qword ptr [rsi+0x2e]; 
0x000000000932de: cmp ebp, eax; jbe 0x00000000000933c0; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [r15+0x18]; 
0x0000000015185a: cmp ebp, ebx; ret; 
0x0000000015c18e: cmp ebp, edi; jmp qword ptr [rsi+0x66]; 
0x00000000087a8f: cmp ebp, edx; jbe 0x0000000000087c60; mov rdi, r15; call qword ptr [rax+0x20]; 
0x0000000008f6d2: cmp ebp, edx; jbe 0x000000000008f880; mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rax+0x18]; 
0x000000000922b6: cmp ebp, edx; jbe 0x0000000000092490; mov rdi, rbx; call qword ptr [rax+0x20]; 
0x00000000092348: cmp ebp, edx; jbe 0x00000000000924f0; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rax+0x18]; 
0x0000000009463a: cmp ebx, 0xa; je short 0x0000000000094640; ret; 
0x000000000482b4: cmp ebx, [rdx]; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x2]; mov rax, 0xffffffffffffffff; ret; 
0x000000000d1861: cmp ebx, [rdx]; stc; call far fword ptr [rcx+0x5e]; 
0x0000000011baa4: cmp ebx, eax; jae short 0x000000000011bac8; mov rsi, r12; mov rdi, r15; call r14; 
0x0000000008e6f0: cmp ebx, eax; jbe 0x000000000008e828; mov rsi, rsp; mov rdi, rbp; call qword ptr [r15+0x90]; 
0x0000000008f976: cmp ebx, eax; jbe 0x000000000008faa0; mov rsi, rsp; mov rdi, rbp; call qword ptr [r13+0x90]; 
0x0000000008fb92: cmp ebx, eax; jbe 0x000000000008fd28; mov rsi, rsp; mov rdi, rbp; call qword ptr [r13+0x90]; 
0x0000000008fce1: cmp ebx, eax; jbe 0x000000000008fd90; mov rdi, rbp; call qword ptr [r13+0x20]; 
0x000000000951ae: cmp ebx, eax; je short 0x00000000000951b5; pop rbx; pop rbp; ret; 
0x0000000010c58c: cmp ebx, eax; pop rbx; setl al; ret; 
0x0000000013f0ad: cmp ebx, ecx; jg short 0x000000000013f066; mov byte ptr [r10], 0x0; ret; 
0x000000000872ce: cmp ebx, edx; jbe 0x0000000000087460; mov esi, r12d; mov rdi, r14; call qword ptr [rax+0x18]; 
0x0000000008efa3: cmp ebx, edx; jbe 0x000000000008f1d0; lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax+0x90]; 
0x0000000010d9e3: cmp ecx, 0x1; ja short 0x000000000010da18; mov eax, 0x106; syscall; 
0x000000000551c1: cmp ecx, 0x2f; notrack jmp rdx; 
0x000000000551c2: cmp ecx, 0x2f; notrack jmp rdx; 
0x0000000015d154: cmp ecx, 0x3; jbe short 0x000000000015d160; ret; 
0x0000000004237c: cmp ecx, 0x80; jne short 0x0000000000042390; test eax, 0x7fffff; je short 0x0000000000042390; ret; 
0x00000000102ad2: cmp ecx, 0xc0fe; setne al; lea eax, [rax+rax*8+0x5]; ret; 
0x000000000a1625: cmp ecx, 0xd; je short 0x00000000000a162e; xor byte ptr [rdx+0xe], 0x2a; ret; 
0x00000000057c16: cmp ecx, 0xe0757fff; mov eax, 0x1; ret; 
0x0000000011f857: cmp ecx, 0xffffffff; je short 0x000000000011f888; mov eax, 0x149; syscall; 
0x00000000056554: cmp ecx, 0xffffffff; jne short 0x0000000000056548; mov rax, rdx; ret; 
0x00000000149b33: cmp ecx, [rax+0x1]; vcmppd xmm9, xmm10, [rax-0x77], 0xee; call qword ptr [rbx+0x40]; 
0x0000000015f726: cmp ecx, [rax+0x28]; jae short 0x000000000015f710; mov eax, 0x1; ret; 
0x00000000153764: cmp ecx, [rax-0x77]; ret far; 
0x00000000024db8: cmp ecx, [rax-0x7d]; ret; 
0x00000000102a6c: cmp ecx, [rax-0xc]; jne short 0x0000000000102a60; mov eax, [rdx+0x8]; ret; 
0x000000000697ef: cmp ecx, [rbx-0x6377b]; jmp qword ptr [rdi+rdi*2]; 
0x0000000018f684: cmp ecx, [rdi-0x4]; jne 0x000000000018f8b6; xor eax, eax; ret; 
0x0000000018c3c9: cmp ecx, [rdx+rdi+0x20]; jne 0x000000000018c209; vzeroupper; ret; 
0x0000000018c3f6: cmp ecx, [rdx+rdi+0x40]; jne 0x000000000018c209; vzeroupper; ret; 
0x0000000018c3f8: cmp ecx, [rdx+rdi+0x40]; jne 0x000000000018c209; vzeroupper; ret; 
0x0000000018c85e: cmp ecx, [rdx+rdi]; jne 0x000000000018c679; vzeroupper; ret; 
0x0000000018c85f: cmp ecx, [rdx+rdi]; jne 0x000000000018c679; vzeroupper; ret; 
0x0000000009c216: cmp ecx, [rip+0x152c74]; jae short 0x000000000009c240; lea rax, [rax-0x8]; ret; 
0x0000000018c22a: cmp ecx, [rsi+rdx+0x20]; jne short 0x000000000018c209; vzeroupper; ret; 
0x0000000018c249: cmp ecx, [rsi+rdx+0x40]; jne short 0x000000000018c209; vzeroupper; ret; 
0x0000000018c26a: cmp ecx, [rsi+rdx+0x60]; jne short 0x000000000018c209; vzeroupper; ret; 
0x0000000018c58f: cmp ecx, [rsi+rdx]; jne 0x000000000018c209; vzeroupper; ret; 
0x0000000018ca87: cmp ecx, [rsi+rdx]; jne 0x000000000018c679; vzeroupper; ret; 
0x0000000018c6a6: cmp ecx, [rsi+rdx]; jne short 0x000000000018c679; vzeroupper; ret; 
0x0000000018ca64: cmp ecx, [rsi]; jne 0x000000000018c679; vzeroupper; ret; 
0x0000000018e02f: cmp ecx, eax; jne 0x000000000018ea63; xor eax, eax; ret; 
0x0000000018e057: cmp ecx, eax; jne 0x000000000018ea6f; xor eax, eax; ret; 
0x0000000018f65f: cmp ecx, eax; jne 0x000000000018f8a3; xor eax, eax; ret; 
0x0000000018ea3b: cmp ecx, eax; jne short 0x000000000018ea63; xor eax, eax; ret; 
0x0000000018f87b: cmp ecx, eax; jne short 0x000000000018f8a3; xor eax, eax; ret; 
0x0000000018f8af: cmp ecx, eax; jne short 0x000000000018f8b6; xor eax, eax; ret; 
0x000000000cf19c: cmp ecx, eax; mov eax, 0x1; cmovl r9d, eax; mov eax, r9d; ret; 
0x00000000055c18: cmp ecx, eax; sbb eax, eax; and eax, 0x2; sub eax, 0x1; ret; 
0x000000000a8870: cmp ecx, edx; je short 0x00000000000a8868; cmp ecx, esi; je short 0x00000000000a8868; ret; 
0x00000000120e38: cmp ecx, edx; mov edx, 0x0; cmovb rax, rdx; ret; 
0x0000000010fdb4: cmp ecx, edx; seta al; sbb eax, 0x0; ret; 
0x00000000092a4a: cmp ecx, esi; ja short 0x0000000000092a40; lea eax, [rdx+rdi]; ret; 
0x000000000a8874: cmp ecx, esi; je short 0x00000000000a8868; ret; 
0x000000000a88f0: cmp ecx, esi; jne short 0x00000000000a88e0; ret; 
0x0000000012fa15: cmp edi, 0x3ff; ja short 0x000000000012fa25; mov rax, rdi; sar rax, 0x6; ret; 
0x0000000012bdc4: cmp edi, 0x56; je short 0x000000000012bdd0; mov eax, 0x7; ret; 
0x0000000013bd1f: cmp edi, 0x5; mov edx, 0x0; mov eax, 0x102; cmovne eax, edx; ret; 
0x00000000122c86: cmp edi, 0x9; setbe r8b; mov eax, r8d; ret; 
0x000000000d4275: cmp edi, 0xa3d70b; setb al; add eax, 0x16d; ret; 
0x0000000013bcfa: cmp edi, 0xb; mov edx, 0x104; cmove eax, edx; ret; 
0x0000000013a691: cmp edi, [rax+0x3]; syscall; 
0x000000000d83b1: cmp edi, [rbp+rcx]; movzx esi, cl; movsxd rdx, [rdi+rsi*4]; add rdx, rdi; notrack jmp rdx; 
0x0000000018c51c: cmp edi, [rdx+rcx+0x40]; jne 0x000000000018c209; vzeroupper; ret; 
0x0000000018c396: cmp edi, [rdx+rcx]; jne 0x000000000018c209; vzeroupper; ret; 
0x0000000018c81c: cmp edi, [rdx+rcx]; jne 0x000000000018c679; vzeroupper; ret; 
0x000000001142ce: cmp edi, eax; ja short 0x00000000001142f8; xor eax, eax; ret; 
0x00000000048325: cmp edi, eax; jb short 0x0000000000048305; xor eax, eax; ret; 
0x0000000005b363: cmp edi, eax; jbe short 0x000000000005b35a; mov rax, r10; ret; 
0x0000000011c4e7: cmp edi, eax; jne short 0x000000000011c518; mov eax, 0x88; syscall; 
0x000000000d0163: cmp edi, ebp; adc [rax], eax; add rsp, 0x8; ret; 
0x0000000012ec2f: cmp edi, ebp; jmp qword ptr [rsi+0xf]; 
0x0000000012ec5e: cmp edi, ebp; jmp qword ptr [rsi+0xf]; 
0x0000000005ea51: cmp edi, ecx; ja short 0x000000000005ea38; mov eax, r8d; ret; 
0x000000000bbc0d: cmp edi, ecx; jb 0x00000000000bbd78; mov rcx, rdx; rep movsb [rdi], [rsi]; ret; 
0x0000000018b638: cmp edi, ecx; jb 0x000000000018b805; mov rcx, rdx; rep movsb [rdi], [rsi]; ret; 
0x000000001903c3: cmp edi, ecx; jb 0x0000000000190600; mov rcx, rdx; rep movsb [rdi], [rsi]; ret; 
0x0000000015388c: cmp edi, edi; call qword ptr [rax-0x177776b8]; 
0x000000000bbb7b: cmp edi, edx; jb short 0x00000000000bbb82; rep movsb [rdi], [rsi]; ret; 
0x00000000024163: cmp edi, edx; je short 0x0000000000024177; call rax; 
0x0000000011d036: cmp edi, edx; jne short 0x000000000011d028; mov rax, [rax+0x8]; ret; 
0x00000000120ccf: cmp edi, esi; dec dword ptr [rbx+0x480c2444]; add esp, 0x28; ret; 
0x0000000010d1f9: cmp edi, esi; ja short 0x000000000010d1e8; mov eax, r8d; ret; 
0x00000000094c97: cmp edi, esi; sete al; ret; 
0x000000000e51ee: cmp edx, 0x1badface; setne al; ret; 
0x000000000e5209: cmp edx, 0x1cd1; setne al; ret; 
0x000000000bbf43: cmp edx, 0x20; ja 0x00000000000bbfdc; movdqu [rdi+rdx-0x10], xmm0; movdqu [rdi], xmm0; ret; 
0x000000000bbfc3: cmp edx, 0x20; ja short 0x00000000000bbfd3; movdqu [rdi+rdx-0x10], xmm0; movdqu [rdi], xmm0; ret; 
0x000000000d4265: cmp edx, 0x28f5c28; jbe short 0x00000000000d4270; ret; 
0x00000000102a3f: cmp edx, 0x2; je short 0x0000000000102a48; ret; 
0x000000000bce31: cmp edx, 0x4; cmovne r8, rax; mov rax, r8; ret; 
0x00000000112814: cmp edx, 0x4; ja short 0x0000000000112820; mov [rsi+0x66], dx; xor eax, eax; ret; 
0x0000000010d156: cmp edx, 0x4; je short 0x000000000010d164; mov eax, 0x1c; syscall; 
0x000000000e51d6: cmp edx, 0x5346544e; setne al; ret; 
0x000000000de2d5: cmp edx, 0x7fffffff; mov eax, 0x7fffffff; cmova rdx, rax; mov eax, 0xd9; syscall; 
0x0000000012fb29: cmp edx, 0x80000000; cmovne eax, edi; ret; 
0x000000000e51ba: cmp edx, 0xadf5; setne al; ret; 
0x000000000bc15e: cmp edx, 0xff; cmove rax, rcx; ret; 
0x00000000194a46: cmp edx, 0xffffffff; jmp qword ptr [rsi+0xf]; 
0x00000000087614: cmp edx, [rax+0x18]; jbe short 0x0000000000087638; mov rax, [rax+0xe0]; mov esi, 0xffffffff; call qword ptr [rax+0x18]; 
0x00000000055067: cmp edx, [rax]; mov eax, 0x0; jne short 0x0000000000055073; push r10; ret; 
0x00000000055570: cmp edx, [rax]; mov eax, 0x0; jne short 0x000000000005557c; push r10; ret; 
0x0000000018bcb4: cmp edx, [rsi]; jne short 0x000000000018bc9c; ret; 
0x00000000184635: cmp edx, eax; jbe short 0x00000000001846a0; add rax, rdi; vzeroupper; ret; 
0x0000000018c0e5: cmp edx, eax; jbe short 0x000000000018c150; add rax, rdi; vzeroupper; ret; 
0x0000000010d927: cmp edx, eax; jne short 0x000000000010d958; mov eax, 0x85; syscall; 
0x0000000010d98a: cmp edx, eax; jne short 0x000000000010d9b8; mov eax, 0x103; syscall; 
0x0000000013b8ba: cmp edx, eax; sbb eax, eax; ret; 
0x00000000148bb3: cmp edx, ebp; add [rax], al; mov rax, r12; pop r12; ret; 
0x0000000008ea9a: cmp edx, ebx; jae 0x000000000008edd0; xor edx, edx; mov rdi, rbp; call qword ptr [rax+0x80]; 
0x0000000008e939: cmp edx, ebx; jae 0x000000000008ee08; lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax+0x90]; 
0x0000000012e7d5: cmp edx, ecx; ja short 0x000000000012e804; xor eax, eax; syscall; 
0x0000000005b656: cmp edx, ecx; jae short 0x000000000005b63c; mov rax, r8; ret; 
0x00000000183a1c: cmp edx, ecx; jle 0x0000000000183ac0; ret; 
0x0000000018379a: cmp edx, ecx; jle short 0x00000000001837b4; movsxd rax, ecx; ret; 
0x00000000183799: cmp edx, ecx; jle short 0x00000000001837b4; movsxd rax, ecx; ret; 
0x000000000bc04f: cmp edx, ecx; jne short 0x00000000000bc037; rep ret; 
0x00000000155db8: cmp edx, ecx; jne short 0x0000000000155d73; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x0000000018bb26: cmp edx, ecx; jne short 0x000000000018bb0b; vzeroupper; ret; 
0x000000001909e9: cmp edx, ecx; jne short 0x00000000001909c6; vzeroupper; ret; 
0x0000000015d140: cmp edx, ecx; sete al; ret; 
0x0000000005b48d: cmp edx, edi; pop rbx; cmovb r10, rdi; mov rax, r10; ret; 
0x000000000941c2: cmp edx, edi; setae al; ret; 
0x0000000012e94f: cmp edx, esi; call qword ptr [rax-0x18]; 
0x000000000a8838: cmp edx, esi; je short 0x00000000000a8830; ret; 
0x000000000bdfe7: cmp edx, esi; je short 0x00000000000bdfef; test edx, edx; jne short 0x00000000000bdfe0; ret; 
0x0000000013bcde: cmp esi, 0x14; mov edx, 0x107; mov eax, 0xffffffff; cmove eax, edx; ret; 
0x000000000dcfd4: cmp esi, 0x1; je short 0x00000000000dcfe0; xor eax, eax; ret; 
0x0000000008ce8d: cmp esi, 0x2; cmovne edx, ecx; mov [rdi], edx; ret; 
0x0000000010d129: cmp esi, 0x2; ja short 0x000000000010d136; mov [rdi+0x10c], esi; xor eax, eax; ret; 
0x0000000015d13a: cmp esi, 0x3; ja short 0x000000000015d150; cmp dx, cx; sete al; ret; 
0x0000000002fdb8: cmp esi, 0x3; je short 0x000000000002fdc0; ret; 
0x00000000102808: cmp esi, 0x7fffffff; mov esi, 0x7fffffff; mov eax, 0xcc; cmovbe rsi, r8; syscall; 
0x0000000013c5a2: cmp esi, 0x80; cmovb eax, edx; ret; 
0x0000000002c162: cmp esi, 0x860f07ff; pushfq; add [rax], eax; add [rcx+0x3948fc51], cl; ret; 
0x0000000002c8f8: cmp esi, 0x8d49ffff; add cl, [rax+0x39]; ret far; 
0x000000001133d9: cmp esi, 0x9; je short 0x0000000000113408; mov eax, 0x48; syscall; 
0x00000000113468: cmp esi, 0x9; je short 0x0000000000113498; mov eax, 0x48; syscall; 
0x0000000009f385: cmp esi, 0x9; mov edx, 0xffffffff; cmovbe eax, edx; ret; 
0x0000000008fd8b: cmp esi, 0xffffffff; call qword ptr [rax-0x220418]; 
0x000000000545d6: cmp esi, 0xffffffff; jmp qword ptr [rsi+0xf]; 
0x0000000018cbb0: cmp esi, [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x000000000e8d6a: cmp esi, [rdi+0x23]; lea rsi, [rip+0xc7f30]; movsxd rax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x000000000dd14b: cmp esi, [rdi+0x2a]; mov eax, 0xe3; syscall; 
0x000000001491c2: cmp esi, [rdx+0x28]; ja short 0x00000000001491b0; mov [rdx+0x20], rsi; ret; 
0x0000000018b659: cmp esi, [rdx+0x5]; movzx ecx, byte ptr [rsi]; mov [rdi], cl; ret; 
0x0000000018c425: cmp esi, [rdx+rcx+0x60]; jne 0x000000000018c209; vzeroupper; ret; 
0x0000000018c8db: cmp esi, [rdx+rcx]; jne 0x000000000018c679; vzeroupper; ret; 
0x0000000013c460: cmp esi, eax; ja short 0x000000000013c44c; mov eax, 0xffffffff; ret; 
0x0000000008f327: cmp esi, eax; jbe 0x000000000008f410; mov rsi, r13; mov rdi, rbx; call qword ptr [rbp+0x70]; 
0x0000000014c0b1: cmp esi, edi; jmp qword ptr [rsi+0x2e]; 
0x0000000009e42f: cmp esi, edi; jmp qword ptr [rsi+0xf]; 
0x000000001449e4: cmp esp, [rsp+rax*2-0x75]; add al, ch; fldln2; jmp qword ptr [rsp+rax*2-0x77]; 
0x00000000092b4f: cmp esp, edx; jbe 0x0000000000092cd0; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rax+0x18]; 
0x000000000874cb: cmp qword ptr [rax+0x30], 0x0; je short 0x00000000000874d8; ret; 
0x00000000127b06: cmp qword ptr [rbx+0x28], 0x0; mov eax, 0x0; cmovns rax, [rbx+0x28]; pop rbx; ret; 
0x0000000008cd59: cmp qword ptr [rdi+0x18], 0x0; setne r8b; mov eax, r8d; ret; 
0x00000000091eb4: cmp qword ptr [rdi+0x38], 0x0; je short 0x0000000000091ec0; ret; 
0x0000000012cf0b: cmp qword ptr [rdi], 0x0; je short 0x000000000012cf20; ret; 
0x0000000009e224: cmp qword ptr [rip+0x150ce4], 0x0; je short 0x000000000009e230; ret; 
0x000000000dd144: cmp qword ptr [rsi+0x8], 0x3b9ac9ff; ja short 0x00000000000dd178; mov eax, 0xe3; syscall; 
0x00000000119720: cmp qword ptr [rsi], 0x0; mov rbx, rsi; je short 0x0000000000119730; pop rbx; ret; 
0x00000000055066: cmp r10, [rax]; mov eax, 0x0; jne short 0x0000000000055073; push r10; ret; 
0x0000000005556f: cmp r10, [rax]; mov eax, 0x0; jne short 0x000000000005557c; push r10; ret; 
0x0000000010d989: cmp r10, rax; jne short 0x000000000010d9b8; mov eax, 0x103; syscall; 
0x0000000005b48c: cmp r10, rdi; pop rbx; cmovb r10, rdi; mov rax, r10; ret; 
0x0000000009291b: cmp r11b, r13b; test al, 0x90; endbr64; mov rax, 0xffffffffffffffff; ret; 
0x00000000094639: cmp r11d, 0xa; je short 0x0000000000094640; ret; 
0x0000000013f0ac: cmp r11d, r9d; jg short 0x000000000013f066; mov byte ptr [r10], 0x0; ret; 
0x00000000092b4e: cmp r12, rdx; jbe 0x0000000000092cd0; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rax+0x18]; 
0x0000000018c3ca: cmp r12b, [rax]; jne 0x000000000018c209; vzeroupper; ret; 
0x00000000087a8d: cmp r13, rdx; jbe 0x0000000000087c60; mov rdi, r15; call qword ptr [rax+0x20]; 
0x00000000087a8e: cmp r13, rdx; jbe 0x0000000000087c60; mov rdi, r15; call qword ptr [rax+0x20]; 
0x0000000008f6d1: cmp r13, rdx; jbe 0x000000000008f880; mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rax+0x18]; 
0x000000000922b4: cmp r13, rdx; jbe 0x0000000000092490; mov rdi, rbx; call qword ptr [rax+0x20]; 
0x000000000922b5: cmp r13, rdx; jbe 0x0000000000092490; mov rdi, rbx; call qword ptr [rax+0x20]; 
0x00000000092347: cmp r13, rdx; jbe 0x00000000000924f0; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rax+0x18]; 
0x00000000092346: cmp r13, rdx; jbe 0x00000000000924f0; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rax+0x18]; 
0x0000000008f326: cmp r14, rax; jbe 0x000000000008f410; mov rsi, r13; mov rdi, rbx; call qword ptr [rbp+0x70]; 
0x00000000120c28: cmp r14b, dil; dec dword ptr [rbx+0x48042444]; add esp, 0x28; ret; 
0x00000000024162: cmp r15, rdx; je short 0x0000000000024177; call rax; 
0x0000000013bcf9: cmp r15d, 0xb; mov edx, 0x104; cmove eax, edx; ret; 
0x000000000e4fc0: cmp r8, 0x11954; mov edx, 0x7d00; mov eax, 0x7f; cmove rax, rdx; ret; 
0x000000000e5013: cmp r8, 0x137f; mov edx, 0x7f; cmovne rax, rdx; ret; 
0x000000000e4fee: cmp r8, 0x2468; jne short 0x00000000000e5013; mov eax, 0xfffa; ret; 
0x000000000e4ffd: cmp r8, 0x54190100; mov edx, 0x7d00; mov eax, 0x7f; cmove rax, rdx; ret; 
0x000000000e4f74: cmp r8, 0x58465342; jne short 0x00000000000e4f80; ret; 
0x000000000e4fa6: cmp r8, 0xbd00bd0; mov edx, 0xfde8; mov eax, 0x7f; cmove rax, rdx; ret; 
0x00000000055c6f: cmp r8, 0xfffffffffffffff8; jne short 0x0000000000055c60; mov rax, rdx; ret; 
0x000000000e4f86: cmp r8, rax; jne short 0x00000000000e4ffd; mov eax, 0x7d00; ret; 
0x0000000013b93b: cmp r8, rdi; jae short 0x000000000013b953; mov eax, 0xffffffff; ret; 
0x0000000018a7e0: cmp r8d, 0x1; ja 0x000000000018a4b0; je 0x000000000018a4a0; vzeroupper; ret; 
0x0000000018a6bc: cmp r8d, 0x1; ja 0x000000000018a590; je 0x000000000018a580; vzeroupper; ret; 
0x0000000018b3ec: cmp r8d, 0x1; ja 0x000000000018b2c0; je 0x000000000018b2b0; vzeroupper; ret; 
0x0000000010d4dd: cmp r8d, 0x1; ja short 0x000000000010d510; mov eax, 0x4; syscall; 
0x0000000010d53c: cmp r8d, 0x1; ja short 0x000000000010d570; mov eax, 0x5; syscall; 
0x0000000010d59d: cmp r8d, 0x1; ja short 0x000000000010d5d0; mov eax, 0x6; syscall; 
0x000000000c6ac6: cmp r8d, 0xff; je short 0x00000000000c6ad3; mov eax, r8d; ret; 
0x000000000a8942: cmp r8d, edx; setne dil; test r9b, dil; jne short 0x00000000000a8928; ret; 
0x0000000010d9e2: cmp r9d, 0x1; ja short 0x000000000010da18; mov eax, 0x106; syscall; 
0x000000000d0057: cmp rax, 0x19; jg short 0x00000000000d0080; mov rax, r12; pop r12; ret; 
0x00000000157c86: cmp rax, 0x1; sete r8b; add rsp, 0x8; mov eax, r8d; ret; 
0x00000000095227: cmp rax, 0x2000000; jbe short 0x0000000000095230; ret; 
0x00000000094e77: cmp rax, 0x408; jbe short 0x0000000000094e80; ret; 
0x000000000e5110: cmp rax, 0x517b; jne short 0x00000000000e5120; mov eax, 0x40; ret; 
0x000000000e5140: cmp rax, 0x52654973; mov edx, 0x40; mov eax, 0x20; cmove rax, rdx; ret; 
0x000000000e50cb: cmp rax, 0x58465342; mov edx, 0x40; mov eax, 0x20; cmove rax, rdx; ret; 
0x0000000005b6d9: cmp rax, 0x9; ja short 0x000000000005b6b0; mov rax, r8; ret; 
0x00000000095287: cmp rax, 0xa0; jbe short 0x0000000000095290; ret; 
0x000000000e50fa: cmp rax, 0xbd00bd0; mov edx, 0x40; mov eax, 0x20; cmove rax, rdx; ret; 
0x000000000e5120: cmp rax, 0xef53; mov edx, 0x40; mov eax, 0x20; cmove rax, rdx; ret; 
0x00000000094eb7: cmp rax, 0xffff; jbe short 0x0000000000094ec0; ret; 
0x00000000043440: cmp rax, 0xfffffffffffff000; ja short 0x0000000000043450; ret; 
0x0000000004348c: cmp rax, 0xfffffffffffff000; ja short 0x00000000000434e0; ret; 
0x00000000048257: cmp rax, 0xfffffffffffff000; ja short 0x00000000000482b0; ret; 
0x00000000062ebb: cmp rax, 0xfffffffffffff000; ja short 0x0000000000062ec8; ret; 
0x00000000062eee: cmp rax, 0xfffffffffffff000; ja short 0x0000000000062f00; ret; 
0x000000000d0dfb: cmp rax, 0xfffffffffffff000; ja short 0x00000000000d0e08; ret; 
0x000000000d0f10: cmp rax, 0xfffffffffffff000; ja short 0x00000000000d0f20; ret; 
0x000000000d10b0: cmp rax, 0xfffffffffffff000; ja short 0x00000000000d10c0; ret; 
0x000000000dd155: cmp rax, 0xfffffffffffff000; ja short 0x00000000000dd160; ret; 
0x000000000de2eb: cmp rax, 0xfffffffffffff000; ja short 0x00000000000de2f8; ret; 
0x000000000e2c6a: cmp rax, 0xfffffffffffff000; ja short 0x00000000000e2cd0; ret; 
0x000000000e2d1d: cmp rax, 0xfffffffffffff000; ja short 0x00000000000e2d90; ret; 
0x000000000e2e77: cmp rax, 0xfffffffffffff000; ja short 0x00000000000e2eb0; ret; 
0x0000000010c19a: cmp rax, 0xfffffffffffff000; ja short 0x000000000010c200; ret; 
0x0000000010c24a: cmp rax, 0xfffffffffffff000; ja short 0x000000000010c2b0; ret; 
0x0000000010d4ea: cmp rax, 0xfffffffffffff000; ja short 0x000000000010d4f8; ret; 
0x0000000010d549: cmp rax, 0xfffffffffffff000; ja short 0x000000000010d558; ret; 
0x0000000010d5aa: cmp rax, 0xfffffffffffff000; ja short 0x000000000010d5b8; ret; 
0x0000000010d932: cmp rax, 0xfffffffffffff000; ja short 0x000000000010d940; ret; 
0x0000000010d995: cmp rax, 0xfffffffffffff000; ja short 0x000000000010d9a0; ret; 
0x0000000010d9ef: cmp rax, 0xfffffffffffff000; ja short 0x000000000010da00; ret; 
0x0000000010dc28: cmp rax, 0xfffffffffffff000; ja short 0x000000000010dc38; ret; 
0x0000000010e002: cmp rax, 0xfffffffffffff000; ja short 0x000000000010e060; ret; 
0x0000000010e0a7: cmp rax, 0xfffffffffffff000; ja short 0x000000000010e100; ret; 
0x0000000010e13b: cmp rax, 0xfffffffffffff000; ja short 0x000000000010e148; ret; 
0x0000000010e16b: cmp rax, 0xfffffffffffff000; ja short 0x000000000010e178; ret; 
0x0000000010e847: cmp rax, 0xfffffffffffff000; ja short 0x000000000010e890; ret; 
0x0000000010e9c7: cmp rax, 0xfffffffffffff000; ja short 0x000000000010ea10; ret; 
0x00000000112997: cmp rax, 0xfffffffffffff000; ja short 0x00000000001129f0; ret; 
0x0000000011301a: cmp rax, 0xfffffffffffff000; ja short 0x0000000000113098; ret; 
0x000000001130de: cmp rax, 0xfffffffffffff000; ja short 0x00000000001130f0; ret; 
0x00000000113123: cmp rax, 0xfffffffffffff000; ja short 0x0000000000113130; ret; 
0x0000000011322a: cmp rax, 0xfffffffffffff000; ja short 0x0000000000113290; ret; 
0x000000001132da: cmp rax, 0xfffffffffffff000; ja short 0x0000000000113340; ret; 
0x0000000011337b: cmp rax, 0xfffffffffffff000; ja short 0x0000000000113388; ret; 
0x00000000113638: cmp rax, 0xfffffffffffff000; ja short 0x0000000000113648; ret; 
0x0000000011366e: cmp rax, 0xfffffffffffff000; ja short 0x0000000000113680; ret; 
0x000000001136ab: cmp rax, 0xfffffffffffff000; ja short 0x00000000001136b8; ret; 
0x00000000113b91: cmp rax, 0xfffffffffffff000; ja short 0x0000000000113be8; ret; 
0x00000000113da4: cmp rax, 0xfffffffffffff000; ja short 0x0000000000113db0; ret; 
0x00000000113de5: cmp rax, 0xfffffffffffff000; ja short 0x0000000000113df0; ret; 
0x00000000114417: cmp rax, 0xfffffffffffff000; ja short 0x0000000000114470; ret; 
0x000000001144b7: cmp rax, 0xfffffffffffff000; ja short 0x0000000000114510; ret; 
0x0000000011455d: cmp rax, 0xfffffffffffff000; ja short 0x00000000001145c8; ret; 
0x0000000011461d: cmp rax, 0xfffffffffffff000; ja short 0x0000000000114688; ret; 
0x00000000114faa: cmp rax, 0xfffffffffffff000; ja short 0x0000000000115020; ret; 
0x000000001151d7: cmp rax, 0xfffffffffffff000; ja short 0x0000000000115220; ret; 
0x00000000115297: cmp rax, 0xfffffffffffff000; ja short 0x00000000001152e0; ret; 
0x00000000115357: cmp rax, 0xfffffffffffff000; ja short 0x0000000000115360; ret; 
0x00000000116adb: cmp rax, 0xfffffffffffff000; ja short 0x0000000000116ae8; ret; 
0x00000000116cc0: cmp rax, 0xfffffffffffff000; ja short 0x0000000000116cd0; ret; 
0x00000000116cfb: cmp rax, 0xfffffffffffff000; ja short 0x0000000000116d08; ret; 
0x00000000116d2b: cmp rax, 0xfffffffffffff000; ja short 0x0000000000116d38; ret; 
0x00000000118916: cmp rax, 0xfffffffffffff000; ja short 0x0000000000118980; pop rbx; pop rbp; ret; 
0x00000000118a17: cmp rax, 0xfffffffffffff000; ja short 0x0000000000118a70; ret; 
0x0000000011c4f2: cmp rax, 0xfffffffffffff000; ja short 0x000000000011c500; ret; 
0x0000000011f1cb: cmp rax, 0xfffffffffffff000; ja short 0x000000000011f1d8; ret; 
0x0000000011f270: cmp rax, 0xfffffffffffff000; ja short 0x000000000011f2e8; ret; 
0x0000000011f323: cmp rax, 0xfffffffffffff000; ja short 0x000000000011f330; ret; 
0x0000000011f45a: cmp rax, 0xfffffffffffff000; ja short 0x000000000011f4c0; ret; 
0x0000000011f50a: cmp rax, 0xfffffffffffff000; ja short 0x000000000011f570; ret; 
0x0000000011f5ba: cmp rax, 0xfffffffffffff000; ja short 0x000000000011f620; ret; 
0x0000000011f66a: cmp rax, 0xfffffffffffff000; ja short 0x000000000011f6e8; ret; 
0x0000000011f737: cmp rax, 0xfffffffffffff000; ja short 0x000000000011f790; ret; 
0x0000000011f7ff: cmp rax, 0xfffffffffffff000; ja short 0x000000000011f838; mov r8d, eax; mov eax, r8d; ret; 
0x0000000011f863: cmp rax, 0xfffffffffffff000; ja short 0x000000000011f870; ret; 
0x00000000120107: cmp rax, 0xfffffffffffff000; ja short 0x0000000000120160; ret; 
0x000000001201d7: cmp rax, 0xfffffffffffff000; ja short 0x0000000000120230; ret; 
0x00000000120340: cmp rax, 0xfffffffffffff000; ja short 0x00000000001203b0; ret; 
0x000000001203fa: cmp rax, 0xfffffffffffff000; ja short 0x0000000000120470; ret; 
0x000000001204b7: cmp rax, 0xfffffffffffff000; ja short 0x0000000000120510; ret; 
0x00000000120560: cmp rax, 0xfffffffffffff000; ja short 0x00000000001205d0; ret; 
0x00000000120617: cmp rax, 0xfffffffffffff000; ja short 0x0000000000120670; ret; 
0x000000001206ba: cmp rax, 0xfffffffffffff000; ja short 0x0000000000120738; ret; 
0x00000000120b1a: cmp rax, 0xfffffffffffff000; ja short 0x0000000000120b80; ret; 
0x00000000120bca: cmp rax, 0xfffffffffffff000; ja short 0x0000000000120c38; ret; 
0x00000000120c7a: cmp rax, 0xfffffffffffff000; ja short 0x0000000000120ce0; ret; 
0x00000000120eea: cmp rax, 0xfffffffffffff000; ja short 0x0000000000120f50; ret; 
0x00000000120f9a: cmp rax, 0xfffffffffffff000; ja short 0x0000000000121010; ret; 
0x0000000012104b: cmp rax, 0xfffffffffffff000; ja short 0x0000000000121058; ret; 
0x0000000012107b: cmp rax, 0xfffffffffffff000; ja short 0x0000000000121088; ret; 
0x000000001210bb: cmp rax, 0xfffffffffffff000; ja short 0x00000000001210c8; ret; 
0x0000000012118e: cmp rax, 0xfffffffffffff000; ja short 0x00000000001211a0; ret; 
0x000000001211cb: cmp rax, 0xfffffffffffff000; ja short 0x00000000001211d8; ret; 
0x000000001211fb: cmp rax, 0xfffffffffffff000; ja short 0x0000000000121208; ret; 
0x0000000012122e: cmp rax, 0xfffffffffffff000; ja short 0x0000000000121240; ret; 
0x0000000012126b: cmp rax, 0xfffffffffffff000; ja short 0x0000000000121278; ret; 
0x0000000012e7dd: cmp rax, 0xfffffffffffff000; ja short 0x000000000012e7f0; ret; 
0x0000000004340b: cmp rax, 0xfffffffffffff001; jae short 0x0000000000043414; ret; 
0x000000000439fb: cmp rax, 0xfffffffffffff001; jae short 0x0000000000043a04; ret; 
0x00000000054f31: cmp rax, 0xfffffffffffff001; jae short 0x0000000000054f3c; xor eax, eax; ret; 
0x000000000d41eb: cmp rax, 0xfffffffffffff001; jae short 0x00000000000d41f4; ret; 
0x000000000d421b: cmp rax, 0xfffffffffffff001; jae short 0x00000000000d4224; ret; 
0x000000000e2b7b: cmp rax, 0xfffffffffffff001; jae short 0x00000000000e2b84; ret; 
0x000000000e2dcb: cmp rax, 0xfffffffffffff001; jae short 0x00000000000e2dd4; ret; 
0x000000000e31ab: cmp rax, 0xfffffffffffff001; jae short 0x00000000000e31b4; ret; 
0x000000000e415b: cmp rax, 0xfffffffffffff001; jae short 0x00000000000e4164; ret; 
0x000000000e43ab: cmp rax, 0xfffffffffffff001; jae short 0x00000000000e43b4; ret; 
0x000000000e43db: cmp rax, 0xfffffffffffff001; jae short 0x00000000000e43e4; ret; 
0x000000000e443b: cmp rax, 0xfffffffffffff001; jae short 0x00000000000e4444; ret; 
0x000000000e446b: cmp rax, 0xfffffffffffff001; jae short 0x00000000000e4474; ret; 
0x000000000e449b: cmp rax, 0xfffffffffffff001; jae short 0x00000000000e44a4; ret; 
0x000000000e44cb: cmp rax, 0xfffffffffffff001; jae short 0x00000000000e44d4; ret; 
0x0000000010268b: cmp rax, 0xfffffffffffff001; jae short 0x0000000000102694; ret; 
0x000000001026bb: cmp rax, 0xfffffffffffff001; jae short 0x00000000001026c4; ret; 
0x000000001026eb: cmp rax, 0xfffffffffffff001; jae short 0x00000000001026f4; ret; 
0x0000000010271b: cmp rax, 0xfffffffffffff001; jae short 0x0000000000102724; ret; 
0x0000000010274b: cmp rax, 0xfffffffffffff001; jae short 0x0000000000102754; ret; 
0x0000000010277b: cmp rax, 0xfffffffffffff001; jae short 0x0000000000102784; ret; 
0x000000001027ab: cmp rax, 0xfffffffffffff001; jae short 0x00000000001027b4; ret; 
0x000000001027db: cmp rax, 0xfffffffffffff001; jae short 0x00000000001027e4; ret; 
0x0000000010d40b: cmp rax, 0xfffffffffffff001; jae short 0x000000000010d414; ret; 
0x0000000010da3b: cmp rax, 0xfffffffffffff001; jae short 0x000000000010da44; ret; 
0x0000000010da6b: cmp rax, 0xfffffffffffff001; jae short 0x000000000010da74; ret; 
0x0000000010db9b: cmp rax, 0xfffffffffffff001; jae short 0x000000000010dba4; ret; 
0x0000000010dbcb: cmp rax, 0xfffffffffffff001; jae short 0x000000000010dbd4; ret; 
0x0000000010dc8b: cmp rax, 0xfffffffffffff001; jae short 0x000000000010dc94; ret; 
0x0000000010dcbb: cmp rax, 0xfffffffffffff001; jae short 0x000000000010dcc4; ret; 
0x0000000010e5ab: cmp rax, 0xfffffffffffff001; jae short 0x000000000010e5b4; ret; 
0x0000000010e8cb: cmp rax, 0xfffffffffffff001; jae short 0x000000000010e8d4; ret; 
0x0000000010e8fb: cmp rax, 0xfffffffffffff001; jae short 0x000000000010e904; ret; 
0x0000000010e92b: cmp rax, 0xfffffffffffff001; jae short 0x000000000010e934; ret; 
0x0000000010e95b: cmp rax, 0xfffffffffffff001; jae short 0x000000000010e964; ret; 
0x0000000010e98b: cmp rax, 0xfffffffffffff001; jae short 0x000000000010e994; ret; 
0x0000000010ea4b: cmp rax, 0xfffffffffffff001; jae short 0x000000000010ea54; ret; 
0x0000000010ea7b: cmp rax, 0xfffffffffffff001; jae short 0x000000000010ea84; ret; 
0x0000000010f39b: cmp rax, 0xfffffffffffff001; jae short 0x000000000010f3a4; ret; 
0x0000000010f3cb: cmp rax, 0xfffffffffffff001; jae short 0x000000000010f3d4; ret; 
0x0000000010f3fb: cmp rax, 0xfffffffffffff001; jae short 0x000000000010f404; ret; 
0x0000000010f42e: cmp rax, 0xfffffffffffff001; jae short 0x000000000010f437; ret; 
0x0000000010fbeb: cmp rax, 0xfffffffffffff001; jae short 0x000000000010fbf4; ret; 
0x0000000010fc1e: cmp rax, 0xfffffffffffff001; jae short 0x000000000010fc27; ret; 
0x0000000010fc4b: cmp rax, 0xfffffffffffff001; jae short 0x000000000010fc54; ret; 
0x0000000010fc7b: cmp rax, 0xfffffffffffff001; jae short 0x000000000010fc84; ret; 
0x0000000010fcab: cmp rax, 0xfffffffffffff001; jae short 0x000000000010fcb4; ret; 
0x0000000010fcde: cmp rax, 0xfffffffffffff001; jae short 0x000000000010fce7; ret; 
0x0000000010fd0b: cmp rax, 0xfffffffffffff001; jae short 0x000000000010fd14; ret; 
0x0000000010fd3b: cmp rax, 0xfffffffffffff001; jae short 0x000000000010fd44; ret; 
0x0000000010fd6b: cmp rax, 0xfffffffffffff001; jae short 0x000000000010fd74; ret; 
0x00000000112fde: cmp rax, 0xfffffffffffff001; jae short 0x0000000000112fe7; ret; 
0x00000000113e1b: cmp rax, 0xfffffffffffff001; jae short 0x0000000000113e24; ret; 
0x0000000011421b: cmp rax, 0xfffffffffffff001; jae short 0x0000000000114224; ret; 
0x000000001143db: cmp rax, 0xfffffffffffff001; jae short 0x00000000001143e4; ret; 
0x00000000114e1b: cmp rax, 0xfffffffffffff001; jae short 0x0000000000114e24; ret; 
0x00000000114f6b: cmp rax, 0xfffffffffffff001; jae short 0x0000000000114f74; ret; 
0x0000000011516b: cmp rax, 0xfffffffffffff001; jae short 0x0000000000115174; ret; 
0x0000000011519b: cmp rax, 0xfffffffffffff001; jae short 0x00000000001151a4; ret; 
0x0000000011525b: cmp rax, 0xfffffffffffff001; jae short 0x0000000000115264; ret; 
0x0000000011531b: cmp rax, 0xfffffffffffff001; jae short 0x0000000000115324; ret; 
0x0000000011565b: cmp rax, 0xfffffffffffff001; jae short 0x0000000000115664; ret; 
0x0000000011568b: cmp rax, 0xfffffffffffff001; jae short 0x0000000000115694; ret; 
0x000000001156bb: cmp rax, 0xfffffffffffff001; jae short 0x00000000001156c4; ret; 
0x0000000011876d: cmp rax, 0xfffffffffffff001; jae short 0x0000000000118776; ret; 
0x000000001189ab: cmp rax, 0xfffffffffffff001; jae short 0x00000000001189b4; ret; 
0x000000001189db: cmp rax, 0xfffffffffffff001; jae short 0x00000000001189e4; ret; 
0x00000000118aab: cmp rax, 0xfffffffffffff001; jae short 0x0000000000118ab4; ret; 
0x00000000118adb: cmp rax, 0xfffffffffffff001; jae short 0x0000000000118ae4; ret; 
0x00000000118b0e: cmp rax, 0xfffffffffffff001; jae short 0x0000000000118b17; ret; 
0x00000000118b3b: cmp rax, 0xfffffffffffff001; jae short 0x0000000000118b44; ret; 
0x00000000118b6b: cmp rax, 0xfffffffffffff001; jae short 0x0000000000118b74; ret; 
0x00000000118b9b: cmp rax, 0xfffffffffffff001; jae short 0x0000000000118ba4; ret; 
0x00000000118bcb: cmp rax, 0xfffffffffffff001; jae short 0x0000000000118bd4; ret; 
0x0000000011cdce: cmp rax, 0xfffffffffffff001; jae short 0x000000000011cdd7; ret; 
0x0000000011cdfb: cmp rax, 0xfffffffffffff001; jae short 0x000000000011ce04; ret; 
0x0000000011ce2b: cmp rax, 0xfffffffffffff001; jae short 0x000000000011ce34; ret; 
0x0000000011ce5e: cmp rax, 0xfffffffffffff001; jae short 0x000000000011ce67; ret; 
0x0000000011ce8e: cmp rax, 0xfffffffffffff001; jae short 0x000000000011ce97; ret; 
0x0000000011cebb: cmp rax, 0xfffffffffffff001; jae short 0x000000000011cec4; ret; 
0x0000000011ceee: cmp rax, 0xfffffffffffff001; jae short 0x000000000011cef7; ret; 
0x0000000011cf1b: cmp rax, 0xfffffffffffff001; jae short 0x000000000011cf24; ret; 
0x0000000011cf4b: cmp rax, 0xfffffffffffff001; jae short 0x000000000011cf54; ret; 
0x0000000011cf7e: cmp rax, 0xfffffffffffff001; jae short 0x000000000011cf87; ret; 
0x0000000011cfab: cmp rax, 0xfffffffffffff001; jae short 0x000000000011cfb4; ret; 
0x0000000011cfde: cmp rax, 0xfffffffffffff001; jae short 0x000000000011cfe7; ret; 
0x0000000011f01b: cmp rax, 0xfffffffffffff001; jae short 0x000000000011f024; ret; 
0x0000000011f04b: cmp rax, 0xfffffffffffff001; jae short 0x000000000011f054; ret; 
0x0000000011f19b: cmp rax, 0xfffffffffffff001; jae short 0x000000000011f1a4; ret; 
0x0000000011f1fb: cmp rax, 0xfffffffffffff001; jae short 0x000000000011f204; ret; 
0x0000000011f22b: cmp rax, 0xfffffffffffff001; jae short 0x000000000011f234; ret; 
0x0000000011f35b: cmp rax, 0xfffffffffffff001; jae short 0x000000000011f364; ret; 
0x0000000011f3ee: cmp rax, 0xfffffffffffff001; jae short 0x000000000011f3f7; ret; 
0x0000000011f41b: cmp rax, 0xfffffffffffff001; jae short 0x000000000011f424; ret; 
0x0000000011f93b: cmp rax, 0xfffffffffffff001; jae short 0x000000000011f944; ret; 
0x0000000011f96b: cmp rax, 0xfffffffffffff001; jae short 0x000000000011f974; ret; 
0x0000000011f9ae: cmp rax, 0xfffffffffffff001; jae short 0x000000000011f9b7; ret; 
0x0000000011f9db: cmp rax, 0xfffffffffffff001; jae short 0x000000000011f9e4; ret; 
0x0000000011fa0b: cmp rax, 0xfffffffffffff001; jae short 0x000000000011fa14; ret; 
0x0000000011fa3b: cmp rax, 0xfffffffffffff001; jae short 0x000000000011fa44; ret; 
0x0000000011fa6b: cmp rax, 0xfffffffffffff001; jae short 0x000000000011fa74; ret; 
0x0000000011fa9b: cmp rax, 0xfffffffffffff001; jae short 0x000000000011faa4; ret; 
0x0000000011facb: cmp rax, 0xfffffffffffff001; jae short 0x000000000011fad4; ret; 
0x0000000011fafb: cmp rax, 0xfffffffffffff001; jae short 0x000000000011fb04; ret; 
0x0000000011fb2e: cmp rax, 0xfffffffffffff001; jae short 0x000000000011fb37; ret; 
0x0000000011fb5b: cmp rax, 0xfffffffffffff001; jae short 0x000000000011fb64; ret; 
0x0000000011fb8e: cmp rax, 0xfffffffffffff001; jae short 0x000000000011fb97; ret; 
0x0000000011fbbb: cmp rax, 0xfffffffffffff001; jae short 0x000000000011fbc4; ret; 
0x0000000011fbeb: cmp rax, 0xfffffffffffff001; jae short 0x000000000011fbf4; ret; 
0x0000000011fc1b: cmp rax, 0xfffffffffffff001; jae short 0x000000000011fc24; ret; 
0x0000000011fc4b: cmp rax, 0xfffffffffffff001; jae short 0x000000000011fc54; ret; 
0x0000000011fc7b: cmp rax, 0xfffffffffffff001; jae short 0x000000000011fc84; ret; 
0x0000000011fcae: cmp rax, 0xfffffffffffff001; jae short 0x000000000011fcb7; ret; 
0x0000000011fcde: cmp rax, 0xfffffffffffff001; jae short 0x000000000011fce7; ret; 
0x0000000011fd0b: cmp rax, 0xfffffffffffff001; jae short 0x000000000011fd14; ret; 
0x0000000011fd3b: cmp rax, 0xfffffffffffff001; jae short 0x000000000011fd44; ret; 
0x0000000011fd6e: cmp rax, 0xfffffffffffff001; jae short 0x000000000011fd77; ret; 
0x0000000011fd9e: cmp rax, 0xfffffffffffff001; jae short 0x000000000011fda7; ret; 
0x0000000011fdce: cmp rax, 0xfffffffffffff001; jae short 0x000000000011fdd7; ret; 
0x0000000011fdfb: cmp rax, 0xfffffffffffff001; jae short 0x000000000011fe04; ret; 
0x0000000011fe2b: cmp rax, 0xfffffffffffff001; jae short 0x000000000011fe34; ret; 
0x0000000011fe5b: cmp rax, 0xfffffffffffff001; jae short 0x000000000011fe64; ret; 
0x0000000011fe8b: cmp rax, 0xfffffffffffff001; jae short 0x000000000011fe94; ret; 
0x0000000011febe: cmp rax, 0xfffffffffffff001; jae short 0x000000000011fec7; ret; 
0x0000000011feeb: cmp rax, 0xfffffffffffff001; jae short 0x000000000011fef4; ret; 
0x0000000011ff1b: cmp rax, 0xfffffffffffff001; jae short 0x000000000011ff24; ret; 
0x0000000011ff4e: cmp rax, 0xfffffffffffff001; jae short 0x000000000011ff57; ret; 
0x0000000011ff7b: cmp rax, 0xfffffffffffff001; jae short 0x000000000011ff84; ret; 
0x0000000011ffae: cmp rax, 0xfffffffffffff001; jae short 0x000000000011ffb7; ret; 
0x0000000011ffde: cmp rax, 0xfffffffffffff001; jae short 0x000000000011ffe7; ret; 
0x0000000012000b: cmp rax, 0xfffffffffffff001; jae short 0x0000000000120014; ret; 
0x0000000012003b: cmp rax, 0xfffffffffffff001; jae short 0x0000000000120044; ret; 
0x0000000012006b: cmp rax, 0xfffffffffffff001; jae short 0x0000000000120074; ret; 
0x000000001200ab: cmp rax, 0xfffffffffffff001; jae short 0x00000000001200b4; ret; 
0x0000000012019b: cmp rax, 0xfffffffffffff001; jae short 0x00000000001201a4; ret; 
0x0000000012026b: cmp rax, 0xfffffffffffff001; jae short 0x0000000000120274; ret; 
0x0000000012029b: cmp rax, 0xfffffffffffff001; jae short 0x00000000001202a4; ret; 
0x000000001202ce: cmp rax, 0xfffffffffffff001; jae short 0x00000000001202d7; ret; 
0x000000001202fb: cmp rax, 0xfffffffffffff001; jae short 0x0000000000120304; ret; 
0x0000000012077e: cmp rax, 0xfffffffffffff001; jae short 0x0000000000120787; ret; 
0x000000001207ab: cmp rax, 0xfffffffffffff001; jae short 0x00000000001207b4; ret; 
0x000000001207db: cmp rax, 0xfffffffffffff001; jae short 0x00000000001207e4; ret; 
0x0000000012080e: cmp rax, 0xfffffffffffff001; jae short 0x0000000000120817; ret; 
0x0000000009cbc2: cmp rax, 0xffffffffffffffff; cmove rax, rdx; add rsp, 0x8; ret; 
0x000000000e2bbc: cmp rax, 0xffffffffffffffff; mov r8d, 0x0; cmovne r8, rax; mov rax, r8; ret; 
0x00000000121c68: cmp rax, [rip+0xca729]; mov [rdi+0x10], rax; jb short 0x0000000000121c88; mov qword ptr [rip+0xca6e0], 0x2; ret; 
0x00000000121d25: cmp rax, [rip+0xcdd24]; jae short 0x0000000000121d3a; mov rdx, [rip+0xcdd23]; add word ptr [rdx+rax*2], 0x1; ret; 
0x00000000089190: cmp rax, rbx; jae 0x0000000000089870; lea rsi, [rsp+0x30]; mov rdi, r15; call qword ptr [r14+0x90]; 
0x0000000008f9db: cmp rax, rbx; jae 0x000000000008fa90; mov rdi, rbp; call qword ptr [r13+0x20]; 
0x00000000086e47: cmp rax, rcx; cmovg rax, rcx; test rdx, rdx; jne short 0x0000000000086e40; ret; 
0x0000000009170f: cmp rax, rcx; cmovg rax, rcx; test rdx, rdx; jne short 0x0000000000091708; ret; 
0x000000000cf376: cmp rax, rcx; ja short 0x00000000000cf390; sub rdi, 0x10; add rax, rdi; ret; 
0x0000000008806d: cmp rax, rcx; jae short 0x0000000000088075; mov r8d, [rax]; mov eax, r8d; ret; 
0x00000000079f70: cmp rax, rcx; jbe 0x000000000007a078; movsxd rdx, r13d; mov rdi, rbx; call qword ptr [r14+0x38]; 
0x0000000008047f: cmp rax, rcx; jbe 0x0000000000080580; movsxd rdx, ebp; mov rdi, rbx; call qword ptr [r14+0x38]; 
0x00000000081cee: cmp rax, rcx; jbe 0x0000000000081df0; mov rsi, rsp; mov rdi, rbp; call qword ptr [rbx+0x90]; 
0x00000000081e60: cmp rax, rcx; jbe 0x0000000000081fc0; xor esi, esi; mov rdi, rbp; call qword ptr [rbx+0x10]; 
0x00000000084515: cmp rax, rcx; jbe 0x00000000000845b0; mov rdx, rbx; mov rsi, r12; call qword ptr [r14+0x38]; 
0x0000000008a092: cmp rax, rcx; jbe 0x000000000008a170; mov edx, 0x1; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x0000000008b0e4: cmp rax, rcx; jbe 0x000000000008b2c0; mov rdi, rbx; call qword ptr [rbp+0x60]; 
0x0000000008cab4: cmp rax, rcx; jbe 0x000000000008cc80; mov rdi, rbx; call qword ptr [rbp+0x60]; 
0x0000000008fe7c: cmp rax, rcx; jbe 0x000000000008ff70; mov rdi, rbx; call qword ptr [r12+0x88]; 
0x00000000091bb8: cmp rax, rcx; jbe 0x0000000000091c48; mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rbx+0x18]; 
0x00000000091da8: cmp rax, rcx; jbe 0x0000000000091e38; mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rbx+0x18]; 
0x00000000092545: cmp rax, rcx; jbe 0x0000000000092618; mov rdi, rbx; call qword ptr [r13+0x60]; 
0x00000000073d2a: cmp rax, rcx; jbe short 0x0000000000073d90; movsxd r12, r12d; mov rdx, r12; call qword ptr [r13+0x38]; 
0x0000000007a3b9: cmp rax, rcx; jbe short 0x000000000007a438; movsxd rbx, ebx; mov rdx, rbx; call qword ptr [r13+0x38]; 
0x00000000087d40: cmp rax, rcx; jbe short 0x0000000000087d70; mov rdi, rbx; call qword ptr [rbp+0x30]; 
0x0000000008bdef: cmp rax, rcx; jbe short 0x000000000008be48; xor esi, esi; mov rdi, rbp; call qword ptr [r13+0x10]; 
0x0000000008dffc: cmp rax, rcx; jbe short 0x000000000008e020; call qword ptr [rbx+0x60]; 
0x0000000008e468: cmp rax, rcx; jbe short 0x000000000008e4c8; mov edx, 0x1; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x0000000008ffdc: cmp rax, rcx; jbe short 0x0000000000090018; mov rdi, rbp; call qword ptr [rbx+0x88]; 
0x00000000091ef5: cmp rax, rcx; jbe short 0x0000000000091f60; mov rdi, rbx; call qword ptr [rbp+0x68]; 
0x00000000091fab: cmp rax, rcx; jbe short 0x0000000000091fd8; mov rdi, rbx; call qword ptr [rbp+0x20]; 
0x0000000009296b: cmp rax, rcx; jbe short 0x00000000000929a0; mov rdi, rbx; call qword ptr [rbp+0x30]; 
0x000000000929fe: cmp rax, rcx; jbe short 0x0000000000092a20; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp+0x30]; 
0x0000000005b3cc: cmp rax, rdi; jae short 0x000000000005b380; mov rax, r10; pop rbx; ret; 
0x0000000005b3cd: cmp rax, rdi; jae short 0x000000000005b380; mov rax, r10; pop rbx; ret; 
0x0000000008982b: cmp rax, rdi; jbe 0x0000000000089958; xor edx, edx; mov rdi, r15; call qword ptr [rbx+0x80]; 
0x0000000008ed9b: cmp rax, rdi; jbe 0x000000000008ee50; xor edx, edx; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x0000000008e50b: cmp rax, rdi; jbe short 0x000000000008e530; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x000000000934d0: cmp rax, rdi; jbe short 0x0000000000093530; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [r12+0x18]; 
0x000000000cf2ae: cmp rax, rdx; ja 0x00000000000cf390; add rax, rdi; add rax, rcx; ret; 
0x000000000939ae: cmp rax, rdx; jae short 0x00000000000939d8; movzx eax, byte ptr [rax]; ret; 
0x000000000bcd36: cmp rax, rdx; lea rdx, [rip+0xcf1b0]; lea rax, [rip+0x11389]; cmove rax, rdx; ret; 
0x000000000bc876: cmp rax, rdx; lea rdx, [rip+0xcf940]; lea rax, [rip+0x11b79]; cmove rax, rdx; ret; 
0x000000000bca26: cmp rax, rdx; lea rdx, [rip+0xcfbe0]; lea rax, [rip+0x12699]; cmove rax, rdx; ret; 
0x000000000bcb16: cmp rax, rdx; lea rdx, [rip+0xd0240]; lea rax, [rip+0x12879]; cmove rax, rdx; ret; 
0x000000000bc836: cmp rax, rdx; lea rdx, [rip+0xd02f0]; lea rax, [rip+0x129c9]; cmove rax, rdx; ret; 
0x000000000bc986: cmp rax, rdx; lea rdx, [rip+0xd05c0]; lea rax, [rip+0x12f89]; cmove rax, rdx; ret; 
0x000000000a8bf6: cmp rax, rdx; lea rdx, [rip+0xdbc60]; lea rax, [rip+0x3819]; cmove rax, rdx; ret; 
0x000000000a1ca6: cmp rax, rdx; lea rdx, [rip+0xe2a60]; lea rax, [rip+0xa559]; cmove rax, rdx; ret; 
0x000000000a0426: cmp rax, rdx; lea rdx, [rip+0xe4010]; lea rax, [rip+0xbaa9]; cmove rax, rdx; ret; 
0x000000000a1ce6: cmp rax, rdx; lea rdx, [rip+0xe6530]; lea rax, [rip+0xf9d9]; cmove rax, rdx; ret; 
0x0000000009f836: cmp rax, rdx; lea rdx, [rip+0xe8bd0]; lea rax, [rip+0x12099]; cmove rax, rdx; ret; 
0x0000000009f686: cmp rax, rdx; lea rdx, [rip+0xe8f50]; lea rax, [rip+0x12549]; cmove rax, rdx; ret; 
0x0000000009f6c6: cmp rax, rdx; lea rdx, [rip+0xe90b0]; lea rax, [rip+0x126a9]; cmove rax, rdx; ret; 
0x000000000e5093: cmp rax, rdx; mov edx, 0x100; mov eax, 0x20; cmove rax, rdx; ret; 
0x000000000e5092: cmp rax, rdx; mov edx, 0x100; mov eax, 0x20; cmove rax, rdx; ret; 
0x00000000033c64: cmp rax, rdx; mov rdx, 0xffffffffffffffff; cmove rax, rdx; ret; 
0x00000000087e19: cmp rax, rsi; ja short 0x0000000000087e10; lea eax, [rdx+rdi]; ret; 
0x0000000012768c: cmp rax, rsi; jb short 0x00000000001276a0; mov eax, 0x1; ret; 
0x000000000823eb: cmp rax, rsi; jbe short 0x0000000000082448; mov rdi, rbx; call qword ptr [rbp+0x60]; 
0x00000000084ecc: cmp rax, rsi; jbe short 0x0000000000084f44; mov rdi, rbx; call qword ptr [rbp+0x68]; 
0x000000000871bb: cmp rax, rsi; jbe short 0x00000000000871f8; mov rdi, rbx; call qword ptr [rbp+0x20]; 
0x00000000087dde: cmp rax, rsi; jbe short 0x0000000000087df0; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp+0x30]; 
0x00000000091965: cmp rax, rsi; jbe short 0x00000000000919c8; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp+0x18]; 
0x000000000932dd: cmp rbp, rax; jbe 0x00000000000933c0; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [r15+0x18]; 
0x0000000011baa3: cmp rbx, rax; jae short 0x000000000011bac8; mov rsi, r12; mov rdi, r15; call r14; 
0x0000000008e6ef: cmp rbx, rax; jbe 0x000000000008e828; mov rsi, rsp; mov rdi, rbp; call qword ptr [r15+0x90]; 
0x0000000008f975: cmp rbx, rax; jbe 0x000000000008faa0; mov rsi, rsp; mov rdi, rbp; call qword ptr [r13+0x90]; 
0x0000000008fb91: cmp rbx, rax; jbe 0x000000000008fd28; mov rsi, rsp; mov rdi, rbp; call qword ptr [r13+0x90]; 
0x0000000008fce0: cmp rbx, rax; jbe 0x000000000008fd90; mov rdi, rbp; call qword ptr [r13+0x20]; 
0x000000000951ad: cmp rbx, rax; je short 0x00000000000951b5; pop rbx; pop rbp; ret; 
0x0000000010c58b: cmp rbx, rax; pop rbx; setl al; ret; 
0x000000000872cd: cmp rbx, rdx; jbe 0x0000000000087460; mov esi, r12d; mov rdi, r14; call qword ptr [rax+0x18]; 
0x0000000008efa1: cmp rbx, rdx; jbe 0x000000000008f1d0; lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax+0x90]; 
0x0000000008efa2: cmp rbx, rdx; jbe 0x000000000008f1d0; lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax+0x90]; 
0x000000000a1624: cmp rcx, 0xd; je short 0x00000000000a162e; xor byte ptr [rdx+0xe], 0x2a; ret; 
0x00000000056553: cmp rcx, 0xffffffffffffffff; jne short 0x0000000000056548; mov rax, rdx; ret; 
0x0000000015f725: cmp rcx, [rax+0x28]; jae short 0x000000000015f710; mov eax, 0x1; ret; 
0x0000000009c215: cmp rcx, [rip+0x152c74]; jae short 0x000000000009c240; lea rax, [rax-0x8]; ret; 
0x0000000018e02e: cmp rcx, rax; jne 0x000000000018ea63; xor eax, eax; ret; 
0x0000000018f65e: cmp rcx, rax; jne 0x000000000018f8a3; xor eax, eax; ret; 
0x0000000018ea3a: cmp rcx, rax; jne short 0x000000000018ea63; xor eax, eax; ret; 
0x0000000018f87a: cmp rcx, rax; jne short 0x000000000018f8a3; xor eax, eax; ret; 
0x00000000055c17: cmp rcx, rax; sbb eax, eax; and eax, 0x2; sub eax, 0x1; ret; 
0x00000000120e37: cmp rcx, rdx; mov edx, 0x0; cmovb rax, rdx; ret; 
0x0000000010fdb3: cmp rcx, rdx; seta al; sbb eax, 0x0; ret; 
0x00000000092a49: cmp rcx, rsi; ja short 0x0000000000092a40; lea eax, [rdx+rdi]; ret; 
0x0000000012fa14: cmp rdi, 0x3ff; ja short 0x000000000012fa25; mov rax, rdi; sar rax, 0x6; ret; 
0x00000000048324: cmp rdi, r8; jb short 0x0000000000048305; xor eax, eax; ret; 
0x000000000bbc0c: cmp rdi, r9; jb 0x00000000000bbd78; mov rcx, rdx; rep movsb [rdi], [rsi]; ret; 
0x0000000018b637: cmp rdi, r9; jb 0x000000000018b805; mov rcx, rdx; rep movsb [rdi], [rsi]; ret; 
0x000000001903c2: cmp rdi, r9; jb 0x0000000000190600; mov rcx, rdx; rep movsb [rdi], [rsi]; ret; 
0x000000001142cd: cmp rdi, rax; ja short 0x00000000001142f8; xor eax, eax; ret; 
0x0000000005b362: cmp rdi, rax; jbe short 0x000000000005b35a; mov rax, r10; ret; 
0x0000000011c4e6: cmp rdi, rax; jne short 0x000000000011c518; mov eax, 0x88; syscall; 
0x000000000bbb7a: cmp rdi, rdx; jb short 0x00000000000bbb82; rep movsb [rdi], [rsi]; ret; 
0x0000000011d035: cmp rdi, rdx; jne short 0x000000000011d028; mov rax, [rax+0x8]; ret; 
0x0000000010d1f8: cmp rdi, rsi; ja short 0x000000000010d1e8; mov eax, r8d; ret; 
0x00000000094c96: cmp rdi, rsi; sete al; ret; 
0x000000000e51ed: cmp rdx, 0x1badface; setne al; ret; 
0x000000000e5208: cmp rdx, 0x1cd1; setne al; ret; 
0x000000000bbf42: cmp rdx, 0x20; ja 0x00000000000bbfdc; movdqu [rdi+rdx-0x10], xmm0; movdqu [rdi], xmm0; ret; 
0x000000000bbfc2: cmp rdx, 0x20; ja short 0x00000000000bbfd3; movdqu [rdi+rdx-0x10], xmm0; movdqu [rdi], xmm0; ret; 
0x000000000bce30: cmp rdx, 0x4; cmovne r8, rax; mov rax, r8; ret; 
0x000000000e51d5: cmp rdx, 0x5346544e; setne al; ret; 
0x000000000de2d4: cmp rdx, 0x7fffffff; mov eax, 0x7fffffff; cmova rdx, rax; mov eax, 0xd9; syscall; 
0x000000000e51b9: cmp rdx, 0xadf5; setne al; ret; 
0x00000000087613: cmp rdx, [rax+0x18]; jbe short 0x0000000000087638; mov rax, [rax+0xe0]; mov esi, 0xffffffff; call qword ptr [rax+0x18]; 
0x00000000184634: cmp rdx, rax; jbe short 0x00000000001846a0; add rax, rdi; vzeroupper; ret; 
0x0000000018c0e4: cmp rdx, rax; jbe short 0x000000000018c150; add rax, rdi; vzeroupper; ret; 
0x0000000010d926: cmp rdx, rax; jne short 0x000000000010d958; mov eax, 0x85; syscall; 
0x0000000013b8b9: cmp rdx, rax; sbb eax, eax; ret; 
0x0000000008ea98: cmp rdx, rbx; jae 0x000000000008edd0; xor edx, edx; mov rdi, rbp; call qword ptr [rax+0x80]; 
0x0000000008ea99: cmp rdx, rbx; jae 0x000000000008edd0; xor edx, edx; mov rdi, rbp; call qword ptr [rax+0x80]; 
0x0000000008e938: cmp rdx, rbx; jae 0x000000000008ee08; lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax+0x90]; 
0x0000000008e937: cmp rdx, rbx; jae 0x000000000008ee08; lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax+0x90]; 
0x0000000012e7d4: cmp rdx, rcx; ja short 0x000000000012e804; xor eax, eax; syscall; 
0x0000000005b655: cmp rdx, rcx; jae short 0x000000000005b63c; mov rax, r8; ret; 
0x000000000bc04d: cmp rdx, rcx; jne short 0x00000000000bc037; rep ret; 
0x00000000155db7: cmp rdx, rcx; jne short 0x0000000000155d73; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x0000000018bb25: cmp rdx, rcx; jne short 0x000000000018bb0b; vzeroupper; ret; 
0x000000001909e8: cmp rdx, rcx; jne short 0x00000000001909c6; vzeroupper; ret; 
0x000000000941c1: cmp rdx, rdi; setae al; ret; 
0x00000000102807: cmp rsi, 0x7fffffff; mov esi, 0x7fffffff; mov eax, 0xcc; cmovbe rsi, r8; syscall; 
0x000000001491c1: cmp rsi, [rdx+0x28]; ja short 0x00000000001491b0; mov [rdx+0x20], rsi; ret; 
0x0000000015d139: cmp si, 0x3; ja short 0x000000000015d150; cmp dx, cx; sete al; ret; 
0x00000000188070: cmp sil, [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x000000001294a6: cmp sil, al; mov eax, edx; cmove eax, ecx; ret; 
0x00000000129517: cmp sil, cl; cmovne eax, edx; ret; 
0x0000000008f6d6: cmpsb [rsi], [rdi]; add [rax], eax; add [rsi-0x1], bh; mov rdi, rbp; call qword ptr [rax+0x18]; 
0x0000000014505f: cmpsb [rsi], [rdi]; add [rax], eax; mov edi, [r15]; call qword ptr [rsp+0x70]; 
0x000000000ed881: cmpsb [rsi], [rdi]; add al, [rax]; add [rbp-0x73], cl; jmp qword ptr [rsi+0x41]; 
0x00000000193f79: cmpsb [rsi], [rdi]; add al, [rax]; movsxd rcx, [rdi+r12*4]; add rcx, rdi; notrack jmp rcx; 
0x0000000018e4b9: cmpsb [rsi], [rdi]; add eax, 0xc0310000; ret; 
0x00000000157bf6: cmpsb [rsi], [rdi]; jle short 0x0000000000157bf6; jmp qword ptr [rsi+0xf]; 
0x000000000d33d6: cmpsb [rsi], [rdi]; lodsd [rsi]; sti; dec dword ptr [rax+0x39]; ret; 
0x000000001571f6: cmpsb [rsi], [rdi]; mov ch, bh; jmp qword ptr [rsi+0xf]; 
0x000000001569f6: cmpsb [rsi], [rdi]; nop; std; jmp qword ptr [rsi+0xf]; 
0x00000000121caa: cmpsb [rsi], [rdi]; or al, 0x0; add [rax], al; add [rax], al; ret; 
0x00000000121c79: cmpsb [rsi], [rdi]; or al, 0x0; add al, [rax]; add [rax], al; ret; 
0x00000000083b26: cmpsb [rsi], [rdi]; or al, [rcx]; add cl, ch; ret far; 
0x00000000044102: cmpsb [rsi], [rdi]; sbb byte ptr [rdx], 0x0; ret; 
0x000000000332f8: cmpsb [rsi], [rdi]; sbb eax, [rax]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000024f71: cmpsd [rsi], [rdi]; adc eax, [rax]; mov rdi, rbx; call r12; 
0x0000000008fce5: cmpsd [rsi], [rdi]; add [rax], al; add [rax-0x77], cl; out dx, eax; call qword ptr [r13+0x20]; 
0x00000000144fcf: cmpsd [rsi], [rdi]; add [rax], eax; xor edi, edi; call qword ptr [rsp+0x70]; 
0x00000000169095: cmpsd [rsi], [rdi]; add rax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000064625: cmpsd [rsi], [rdi]; add rax, rdi; notrack jmp rax; 
0x00000000193f7f: cmpsd [rsi], [rdi]; add rcx, rdi; notrack jmp rcx; 
0x00000000194198: cmpsd [rsi], [rdi]; add rdi, r12; notrack jmp rdi; 
0x00000000095560: cmpsd [rsi], [rdi]; add rsp, 0x8; ret; 
0x000000000b4240: cmpsd [rsi], [rdi]; and al, 0x0; add [rax-0x7b], cl; ror byte ptr [rdi], 0x85; ret; 
0x000000000e7c6e: cmpsd [rsi], [rdi]; dec dword ptr [rax-0x77]; ret; 
0x0000000017cee5: cmpsd [rsi], [rdi]; idiv bh; jmp qword ptr [rsi+0xf]; 
0x0000000014d2ee: cmpsd [rsi], [rdi]; mov rax, [rsp+0x10]; mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x18]; 
0x000000001673d5: cmpsd [rsi], [rdi]; movsxd eax, [rip+0x14634900]; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000121c53: cmpsd [rsi], [rdi]; or al, 0x0; add [rax], al; add [rax], al; ret; 
0x0000000015c785: cmpsd [rsi], [rdi]; outsb dx, [rsi]; sti; dec dword ptr [rax-0x77]; ret; 
0x0000000015535b: cmpsd [rsi], [rdi]; std; call qword ptr [rax-0x5e1f00d]; 
0x000000000bc0d5: cmpsd [rsi], [rdi]; xor eax, 0x6348000f; add al, 0xbe; add rax, rsi; notrack jmp rax; 
0x000000000960e2: cmpxchg [rip+0x156a97], edx; lea rax, [rip+0x156a90]; add rsp, 0x10; pop rbp; ret; 
0x000000000938c8: cmpxchg [rip+0x15aef1], edx; mov [rip+0x15aef2], rbx; add dword ptr [rip+0x15aee7], 0x1; pop rbx; ret; 
0x00000000047377: cqo; idiv rsi; ret; 
0x00000000047337: cqo; xor rax, rdx; sub rax, rdx; ret; 
0x00000000153690: cvtdq2ps xmm3, [rbp+0x41]; pop rsp; ret; 
0x000000000436f6: cwde; add [rax], al; add [rbp+0x41], bl; pop rsp; ret; 
0x0000000010d605: cwde; add [rax], eax; add [rcx], dh; shl bh, 0xc2; jmp rsi; 
0x0000000015fdd8: cwde; add eax, [rax]; add [rbp+rcx*4+0x44], cl; and al, 0x30; call qword ptr [rax+0x1e0]; 
0x0000000015f81d: cwde; add eax, [rax]; add [rdx+0x2], ch; call qword ptr [rax+0x1e0]; 
0x0000000015f86e: cwde; add eax, [rax]; add [rdx], ch; call qword ptr [rax+0x1e0]; 
0x0000000018cefb: cwde; bsr eax, eax; lea rax, [rdi+rax-0x20]; vzeroupper; ret; 
0x00000000094d35: cwde; mov [rbx+0x10], rax; xor eax, eax; pop rbx; ret; 
0x00000000157538: cwde; mov [rsi], rax; mov [rdi+0x18], rdx; mov eax, r8d; ret; 
0x0000000012c580: cwde; movdqu xmm7, [rbx-0x18]; mov dword ptr [rbp-0x80], 0x0; movups [rbp-0x78], xmm7; call rcx; 
0x00000000077b93: cwde; movzx eax, byte ptr [r11+rax]; movsxd rax, [rdi+rax*4]; add rax, rbx; jmp rax; 
0x00000000077b35: cwde; movzx eax, byte ptr [r11+rax]; movsxd rax, [rsi+rax*4]; add rax, rbx; jmp rax; 
0x000000001265cb: cwde; or al, 0x0; syscall; 
0x000000000bce6b: cwde; pop rbx; pop rbp; pop r12; ret; 
0x00000000042575: cwde; sbb al, [rax]; mov dword ptr fs:[rax], 0x22; add rsp, 0x8; ret; 
0x0000000004f5ee: cwde; xor edi, ebp; jmp qword ptr [rsi+0xf]; 
0x00000000068a5c: data16 ret far; 
0x0000000004ea60: data64 ret far; 
0x0000000019064f: dec byte ptr [rax+0x6f]; add [rdx-0xf], esp; dec byte ptr [rax+0x6f]; jmp qword ptr [r10-0xf]; 
0x00000000190655: dec byte ptr [rax+0x6f]; jmp qword ptr [r10-0xf]; 
0x0000000018ffe6: dec byte ptr [rax+0x6f]; pop rcx; jmp qword ptr [rdx-0x2f]; 
0x000000001906b7: dec byte ptr [rax+0x7f]; jg short 0x00000000001906bf; vmovdqu64 [r11], zmm8; vzeroupper; ret; 
0x00000000190841: dec byte ptr [rax+0x7f]; jg short 0x0000000000190849; vmovdqu64 [r11], zmm8; vzeroupper; ret; 
0x000000001904e1: dec byte ptr [rax+0x7f]; jl short 0x00000000001904fd; cld; vzeroupper; ret; 
0x000000001905f1: dec byte ptr [rax+0x7f]; std; vmovdqu64 [r11], zmm4; vzeroupper; ret; 
0x0000000011c123: dec byte ptr [rax+rax]; mov rax, [rax]; test rax, rax; je short 0x000000000011c190; call rax; 
0x00000000098278: dec byte ptr [rax-0x73]; ret; 
0x0000000015f74d: dec byte ptr [rax-0x75]; cmp al, 0x24; mov rax, [rax+0x1d8]; jmp rax; 
0x0000000008f196: dec byte ptr [rax-0x77]; out dx, eax; call qword ptr [rax+0x40]; 
0x000000000d04b9: dec byte ptr [rax-0x77]; out dx, eax; call rbx; 
0x0000000003749d: dec byte ptr [rax-0x77]; ret; 
0x000000000c8c1a: dec byte ptr [rax-0x7b]; test byte ptr [rdi], 0x84; ret far; 
0x000000000dc06c: dec byte ptr [rax-0x7d]; ret; 
0x00000000119cb8: dec byte ptr [rbp-0x75]; pop rdx; or [rcx-0xa], al; ret; 
0x000000000d23f5: dec byte ptr [rbp-0x77]; ret far; 
0x000000001381ba: dec byte ptr [rcx+rcx*4-0x19]; call rbp; 
0x00000000044890: dec byte ptr [rcx+rcx*4-0x19]; call rbx; 
0x0000000008e239: dec byte ptr [rcx+rcx*4-0x1e]; mov rdi, rcx; call qword ptr [r14+0x38]; 
0x00000000047358: dec byte ptr [rcx-0x183eb729]; and [rax+0x9], cl; clc; ret; 
0x000000001133da: dec byte ptr [rcx]; je short 0x0000000000113408; mov eax, 0x48; syscall; 
0x00000000113469: dec byte ptr [rcx]; je short 0x0000000000113498; mov eax, 0x48; syscall; 
0x0000000009f386: dec byte ptr [rcx]; mov edx, 0xffffffff; cmovbe eax, edx; ret; 
0x0000000009e4d3: dec byte ptr [rdi]; adc [rbx+0x38], eax; movsxd rdi, esi; mov [rbx], rdi; call rcx; 
0x000000000bbc54: dec byte ptr [rdi]; mov bh, 0x36; mov [rdi+rdx-0x2], cx; mov [rdi], si; ret; 
0x0000000018b201: dec byte ptr [rdx-0x73]; add al, 0x7; vzeroupper; ret; 
0x000000000a053c: dec byte ptr [rsi]; add [rax-0x73], cl; adc eax, 0xefdba; cmove rax, rdx; ret; 
0x0000000018e332: dec dword ptr [r15]; mov dh, 0x4e; jmp far fword ptr [rcx]; 
0x00000000031791: dec dword ptr [r15]; mov dh, 0x53; add [rax-0x7d], ecx; ret; 
0x0000000018e0e5: dec dword ptr [r15]; mov dh, 0x56; jmp far fword ptr [rcx]; 
0x000000000c7d32: dec dword ptr [rax+0x1]; ret far; 
0x00000000052479: dec dword ptr [rax+0x1]; ret; 
0x00000000074aa0: dec dword ptr [rax+0x29]; bnd call qword ptr [rbx+0x38]; 
0x00000000046037: dec dword ptr [rax+0x29]; ret far; 
0x00000000037e55: dec dword ptr [rax+0x29]; ret; 
0x00000000029e39: dec dword ptr [rax+0x3948074a]; ret; 
0x0000000008806c: dec dword ptr [rax+0x39]; enter 0x373, 0x44; mov eax, [rax]; mov eax, r8d; ret; 
0x00000000055f10: dec dword ptr [rax+0x39]; ret far; 
0x000000000408da: dec dword ptr [rax+0x39]; ret; 
0x000000000748fb: dec dword ptr [rax+0x63]; add al, 0x81; add rax, rdx; jmp rax; 
0x0000000007e50a: dec dword ptr [rax+0x63]; add al, 0x88; add rax, rdx; jmp rax; 
0x0000000010115d: dec dword ptr [rax+0x63]; add al, 0xba; add rax, rdx; notrack jmp rax; 
0x000000000a6eef: dec dword ptr [rax+0x63]; dec dword ptr [rcx-0x77]; ret far; 
0x00000000121b24: dec dword ptr [rax+0x63]; fisttp dword ptr [rax-0x77], st; sbb eax, 0xca831; pop rbx; ret; 
0x00000000031298: dec dword ptr [rax+0x63]; ret; 
0x000000000c8c17: dec dword ptr [rax+0xf]; dec byte ptr [rax-0x7b]; test byte ptr [rdi], 0x84; ret far; 
0x000000000b1bc9: dec dword ptr [rax+0xf]; mov ebp, 0xf80148c6; ret; 
0x00000000043c0f: dec dword ptr [rax-0x2d]; ror byte ptr [rax+0x21], 0x7; xor eax, eax; ret; 
0x000000000a1fc7: dec dword ptr [rax-0x39]; add [r8], r8b; add [rax], al; add bl, ch; ret far; 
0x0000000004f3c8: dec dword ptr [rax-0x39]; ret; 
0x000000000243e7: dec dword ptr [rax-0x3f]; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x0000000011ef2d: dec dword ptr [rax-0x3f]; loopne 0x000000000011ef52; and rax, rdi; or rax, rsi; ret; 
0x00000000076a3b: dec dword ptr [rax-0x55063]; dec dword ptr [rax-0x77]; ret far; 
0x00000000023e81: dec dword ptr [rax-0x73]; adc eax, 0x18b89b; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000015219b: dec dword ptr [rax-0x73]; adc eax, 0x3a2d; call qword ptr [rax]; 
0x0000000010a0be: dec dword ptr [rax-0x73]; adc eax, 0xa809a; movsxd rax, [rdx+rbp*4]; add rax, rdx; notrack jmp rax; 
0x000000000d4666: dec dword ptr [rax-0x73]; adc eax, 0xdb4a6; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000012daaa: dec dword ptr [rax-0x73]; adc eax, 0xfff8e00e; cmove rax, rdx; ret; 
0x0000000012d9ea: dec dword ptr [rax-0x73]; adc eax, 0xfff8e0ee; cmove rax, rdx; ret; 
0x0000000012d92a: dec dword ptr [rax-0x73]; adc eax, 0xfff8e1ae; cmove rax, rdx; ret; 
0x00000000151944: dec dword ptr [rax-0x73]; adc eax, 0xffff9494; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x000000000e845f: dec dword ptr [rax-0x73]; add bl, [r11+0x5d]; pop r12; ret; 
0x00000000120df1: dec dword ptr [rax-0x73]; add eax, 0x91887; mov eax, [rax+rdi*4]; ret; 
0x0000000012db28: dec dword ptr [rax-0x73]; add eax, 0xfff8e3e0; cmovne rax, rdx; ret; 
0x0000000009f95a: dec dword ptr [rax-0x73]; cmp eax, 0x14f5de; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000054743: dec dword ptr [rax-0x73]; cmp eax, 0x199fdd; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000026f6b: dec dword ptr [rax-0x73]; cmp eax, 0x1c69e1; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000001534cd: dec dword ptr [rax-0x73]; cmp eax, 0x9d94b; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000001533fd: dec dword ptr [rax-0x73]; cmp eax, 0x9da1b; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000015332d: dec dword ptr [rax-0x73]; cmp eax, 0x9daeb; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000153265: dec dword ptr [rax-0x73]; cmp eax, 0x9dbb3; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000001531ad: dec dword ptr [rax-0x73]; cmp eax, 0x9dc6b; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000014628f: dec dword ptr [rax-0x73]; cmp eax, 0xaa849; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000140bbb: dec dword ptr [rax-0x73]; cmp eax, 0xafc01; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000138589: dec dword ptr [rax-0x73]; cmp eax, 0xb7eab; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000012d11d: dec dword ptr [rax-0x73]; cmp eax, 0xc2d43; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000106019: dec dword ptr [rax-0x73]; cmp eax, 0xe95a3; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000257cb: dec dword ptr [rax-0x73]; jl short 0x00000000000257d3; and [rbp+rcx*4+0x60], ecx; add eax, ebp; ret far; 
0x00000000080c73: dec dword ptr [rax-0x73]; lea rdx, [rbx+0x34]; mov esi, 0x1; mov rdi, rbx; call rax; 
0x000000000e835f: dec dword ptr [rax-0x73]; or [r11+0x5d], bl; pop r12; ret; 
0x0000000006e8a2: dec dword ptr [rax-0x73]; or [r8-0x77], cl; ret; 
0x0000000006c32a: dec dword ptr [rax-0x73]; or eax, 0x14191e; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x000000000920b9: dec dword ptr [rax-0x73]; pop rsi; add [rdi], ecx; mov dh, 0x36; call qword ptr [rax+0x18]; 
0x000000001662f6: dec dword ptr [rax-0x73]; push rdx; sar byte ptr [rsi], 0x41; jmp rcx; 
0x0000000006c903: dec dword ptr [rax-0x73]; xor eax, 0x141551; movsxd rax, [rsi+rcx*4]; add rax, rsi; notrack jmp rax; 
0x000000001789ca: dec dword ptr [rax-0x75]; add [rax-0x77], ecx; add cl, [rax-0x77]; clc; ret; 
0x0000000012039e: dec dword ptr [rax-0x75]; add al, 0x24; add rsp, 0x20; pop rbp; ret; 
0x0000000010c1f2: dec dword ptr [rax-0x75]; add al, 0x24; add rsp, 0x28; ret; 
0x00000000120464: dec dword ptr [rax-0x75]; add al, 0x24; add rsp, 0x30; pop rbp; ret; 
0x0000000009e983: dec dword ptr [rax-0x75]; add eax, 0x14d4e5; mov dword ptr fs:[rax], 0xc; xor eax, eax; ret; 
0x0000000009e800: dec dword ptr [rax-0x75]; add eax, 0x14d748; call qword ptr [rax]; 
0x000000000240d5: dec dword ptr [rax-0x75]; add eax, 0x1cd39b; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000118f8c: dec dword ptr [rax-0x75]; add eax, 0xd2edc; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000150e38: dec dword ptr [rax-0x75]; and al, 0x48; mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x18]; 
0x0000000014f1a0: dec dword ptr [rax-0x75]; and al, 0x58; mov rdi, r12; call qword ptr [rax+0x20]; 
0x00000000034a14: dec dword ptr [rax-0x75]; and al, 0x8; add rsp, 0x18; ret; 
0x0000000010e050: dec dword ptr [rax-0x75]; and al, 0x8; add rsp, 0x28; ret; 
0x00000000113086: dec dword ptr [rax-0x75]; and al, 0x8; add rsp, 0x30; pop rbp; ret; 
0x00000000120fff: dec dword ptr [rax-0x75]; and al, 0x8; add rsp, 0x38; ret; 
0x0000000006d37f: dec dword ptr [rax-0x75]; and byte ptr [rax+0x48000000], 0x85; ror byte ptr [rdi], 0x84; call qword ptr [rax+rax]; 
0x0000000012b29f: dec dword ptr [rax-0x75]; cmp [rax-0x77], cl; ret; 
0x0000000014517b: dec dword ptr [rax-0x75]; jl short 0x00000000001451a4; jo short 0x000000000014516a; fisub st, dword ptr [rbp-0xceffff]; call qword ptr [rsp+0x70]; 
0x0000000014ff64: dec dword ptr [rax-0x75]; jo short 0x000000000014fef3; imul ecx, [rax+0xf], 0xffffffcd; call qword ptr [rax+0x18]; 
0x000000000e7872: dec dword ptr [rax-0x75]; mov ebp, 0xfffffb38; lea rsi, [rbp-0x450]; call qword ptr [r15+0x40]; 
0x000000000f8653: dec dword ptr [rax-0x75]; mov esp, 0xf024; add [rcx-0x17f7dbbc], cl; ret far; 
0x000000001483d8: dec dword ptr [rax-0x75]; or [r14+0x8], r15b; mov rdi, rbp; call qword ptr [rax+0x30]; 
0x000000001476fc: dec dword ptr [rax-0x75]; or [r8-0x77], r9b; out dx, eax; call qword ptr [rax+0x20]; 
0x00000000147733: dec dword ptr [rax-0x75]; or [r9+rcx*4-0xa], r8b; mov rdi, rbp; call qword ptr [rax+0x28]; 
0x00000000049d5b: dec dword ptr [rax-0x75]; push rbp; add [rax-0x39], cl; ret; 
0x0000000012d319: dec dword ptr [rax-0x75]; push rbp; mov al, [0xc583492b135c8d48]; and [rax+0x1], cl; ret; 
0x00000000156c58: dec dword ptr [rax-0x77]; add al, 0x24; mov rax, [rbp+0x8]; call qword ptr [rax+0x8]; 
0x00000000138551: dec dword ptr [rax-0x77]; add eax, 0xb5387; add rsp, 0x8; ret; 
0x0000000011771c: dec dword ptr [rax-0x77]; add eax, 0xd806c; add rsp, 0x8; ret; 
0x0000000009d13b: dec dword ptr [rax-0x77]; add ebx, [rbx+0x5d]; pop r12; ret; 
0x00000000144c01: dec dword ptr [rax-0x77]; and al, 0x8; call rbp; 
0x0000000009792f: dec dword ptr [rax-0x77]; and al, 0x8; call rdx; 
0x0000000018b52f: dec dword ptr [rax-0x77]; clc; vzeroupper; ret; 
0x0000000004a1a1: dec dword ptr [rax-0x77]; fadd st, dword ptr [rcx+0xf]; xchg esp, eax; ret; 
0x0000000006d12b: dec dword ptr [rax-0x77]; fimul st, dword ptr [rax-0x77]; ret; 
0x0000000007e84d: dec dword ptr [rax-0x77]; fimul st, dword ptr [rcx+rcx*4-0x2a]; mov rdi, r12; call qword ptr [rax+0x38]; 
0x000000000361b1: dec dword ptr [rax-0x77]; fucomip st, st(0); ret; 
0x0000000008f6de: dec dword ptr [rax-0x77]; out dx, eax; call qword ptr [rax+0x18]; 
0x00000000091bc5: dec dword ptr [rax-0x77]; out dx, eax; call qword ptr [rbx+0x18]; 
0x0000000004c2bf: dec dword ptr [rax-0x77]; ret far; 
0x000000000f4d33: dec dword ptr [rax-0x77]; ret; 
0x00000000026873: dec dword ptr [rax-0x77]; ret; 
0x000000000e52c7: dec dword ptr [rax-0x77]; ret; 
0x0000000010eedc: dec dword ptr [rax-0x77]; ror dword ptr [rax-0x73], 0x40; inc esi; jmp far fword ptr [r15]; 
0x0000000006e4fb: dec dword ptr [rax-0x77]; sbb [rax+0x1], cl; ret far; 
0x00000000047212: dec dword ptr [rax-0x77]; sub [rax-0x77], cl; ret; 
0x0000000007a4cf: dec dword ptr [rax-0x77]; test [rax], ebp; idiv edi; jmp qword ptr [rax+rcx*2-0x75]; 
0x00000000073e2a: dec dword ptr [rax-0x77]; test [rax], edi; idiv edi; jmp qword ptr [rax+rcx*2-0x75]; 
0x0000000008285e: dec dword ptr [rax-0x7b]; ror byte ptr [rdi], 0x84; mov dword ptr [rax], 0x89480000; ret; 
0x000000000d2c5f: dec dword ptr [rax-0x7b]; ror byte ptr [rdi], 0x84; ret far; 
0x0000000017cedf: dec dword ptr [rax-0x7b]; ror byte ptr [rdi], 0x85; cmpsd [rsi], [rdi]; idiv bh; jmp qword ptr [rsi+0xf]; 
0x0000000017ce99: dec dword ptr [rax-0x7b]; ror byte ptr [rdi], 0x85; in eax, dx; idiv bh; jmp qword ptr [rsi+0xf]; 
0x000000000d2f9e: dec dword ptr [rax-0x7b]; ror byte ptr [rdi], 0x85; ret; 
0x0000000011cc11: dec dword ptr [rax-0x7b]; shl byte ptr [rax+rdi+0x48], 0x39; ret; 
0x000000001531de: dec dword ptr [rax-0x7b]; shl byte ptr [rcx+rax*4+0x64], 0x48; mov [rbx], eax; pop rbx; ret; 
0x00000000075cf7: dec dword ptr [rax-0x7d]; clc; dec dword ptr [rax-0x77]; ret; 
0x00000000153537: dec dword ptr [rax-0x7d]; mov eax, 0xe0; add [rax-0x77], cl; ret; 
0x00000000070669: dec dword ptr [rax-0x7d]; mov ebp, 0xfffffa68; add [rdi], cl; test esp, esi; ret far; 
0x0000000003819a: dec dword ptr [rax-0x7d]; ret; 
0x0000000011c729: dec dword ptr [rax-0x7f]; ret; 
0x0000000009536d: dec dword ptr [rax-0x9]; fisttp dword ptr [rax+0x21], st; ret; 
0x000000000a6d15: dec dword ptr [rbp+0x39]; ret; 
0x0000000007b9e2: dec dword ptr [rbp+0x63]; ret; 
0x00000000079ced: dec dword ptr [rbp+rcx*4+0x1d]; ret far; 
0x000000000b8da4: dec dword ptr [rbp+rcx*4+0x1d]; str [rbx+0x63]; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000105766: dec dword ptr [rbp+rcx*4+0x25]; xchg edx, eax; ret; 
0x00000000088563: dec dword ptr [rbp+rcx*4+0x2c]; and dword ptr [rsi+0x48], 0xf; outsb dx, [rsi]; ret; 
0x0000000015194b: dec dword ptr [rbp+rcx*4+0x4c]; and al, 0x14; call qword ptr [rax]; 
0x0000000003892b: dec dword ptr [rbp-0x73]; je short 0x0000000000038936; add [rax-0x9], ecx; ror byte ptr [rax+0x1], 0x1; ret; 
0x00000000038883: dec dword ptr [rbp-0x73]; jl short 0x000000000003888f; add [rax-0x9], ecx; ror byte ptr [rax+0x1], 0x1; ret; 
0x000000000f1291: dec dword ptr [rbp-0x75]; adc cl, al; call far fword ptr [rax]; 
0x000000000e34e9: dec dword ptr [rbp-0x77]; ret; 
0x000000000c4be3: dec dword ptr [rbp-0x7cbe00bd]; call far fword ptr [rax]; 
0x0000000010e85c: dec dword ptr [rbx+0x410c247c]; mov eax, eax; mov eax, 0x3; syscall; 
0x000000001151ec: dec dword ptr [rbx+0x410c247c]; mov eax, eax; mov eax, 0x4a; syscall; 
0x000000001152ac: dec dword ptr [rbx+0x410c247c]; mov eax, eax; mov eax, 0x4b; syscall; 
0x0000000011f2d8: dec dword ptr [rbx+0x48042444]; add esp, 0x20; pop rbp; ret; 
0x00000000120c2b: dec dword ptr [rbx+0x48042444]; add esp, 0x28; ret; 
0x0000000011f77e: dec dword ptr [rbx+0x48082444]; add esp, 0x18; ret; 
0x000000001129e2: dec dword ptr [rbx+0x48082444]; add esp, 0x28; ret; 
0x000000000e2ea2: dec dword ptr [rbx+0x480c2444]; add esp, 0x18; ret; 
0x000000000e2d7c: dec dword ptr [rbx+0x480c2444]; add esp, 0x28; ret; 
0x0000000011500e: dec dword ptr [rbx+0x480c2444]; add esp, 0x38; ret; 
0x0000000010e9e0: dec dword ptr [rbx+0x480c2474]; mov edi, [rsp]; mov r8d, eax; mov eax, 0x55; syscall; 
0x000000000e2cc2: dec dword ptr [rbx+0x48102444]; add esp, 0x28; ret; 
0x00000000113283: dec dword ptr [rbx+0x48182444]; add esp, 0x28; ret; 
0x000000000fce21: dec dword ptr [rbx+0x63]; add al, 0xba; add rax, r10; notrack jmp rax; 
0x000000000fccbf: dec dword ptr [rbx+0x63]; add al, 0xbe; add rax, r14; notrack jmp rax; 
0x000000000be55c: dec dword ptr [rbx+0xeb8087b]; add [rax], al; add [rax-0x7d], cl; ret; 
0x00000000084463: dec dword ptr [rbx+rcx*4+0x2d]; fnstsw [rdx+0x16]; add [rax-0x77], cl; ret; 
0x00000000039c88: dec dword ptr [rbx+rcx*4+0x4]; and al, 0xe9; idiv edi; jmp qword ptr [rsi+0xf]; 
0x00000000039e78: dec dword ptr [rbx+rcx*4+0x4]; and al, 0xe9; xchg edi, eax; idiv edi; jmp qword ptr [rsi+0xf]; 
0x000000000dc5cc: dec dword ptr [rbx+rcx*4+0x78]; cmp [rbx-0xfb7b], cl; inc dword ptr [rbp-0x7b]; fild st, dword ptr [rcx+0xf]; ret; 
0x0000000006e45e: dec dword ptr [rbx+rcx*4-0x53]; sar dl, 0xff; jmp qword ptr [rbx+rcx*4]; 
0x0000000006f3e2: dec dword ptr [rbx+rcx*4-0x53]; sar dl, 0xff; jmp qword ptr [rdi+rax*8]; 
0x0000000007c096: dec dword ptr [rbx+rcx*4-0x5b]; clc; idiv bh; jmp qword ptr [rsi-0x70]; 
0x0000000007c155: dec dword ptr [rbx+rcx*4-0x73]; clc; idiv bh; inc dword ptr [rcx]; ret far; 
0x0000000015be05: dec dword ptr [rbx-0x17b7b]; jmp qword ptr [rcx+rcx*4+0x3]; 
0x00000000154246: dec dword ptr [rbx-0x1e17ff83]; movsd [rdi], [rsi]; sti; jmp qword ptr [rsi-0x7d]; 
0x0000000007e964: dec dword ptr [rbx-0x4df43]; dec dword ptr [rcx-0x4e773]; jmp far fword ptr [rcx]; 
0x0000000007ea49: dec dword ptr [rbx-0x4df7b]; inc dword ptr [rcx+0x1]; ret far; 
0x000000000e8059: dec dword ptr [rbx-0x4ef6b]; dec dword ptr [rax-0x77]; ret; 
0x000000000782a7: dec dword ptr [rbx-0x4ef6b]; dec dword ptr [rcx-0x4f773]; jmp far fword ptr [rcx]; 
0x00000000078233: dec dword ptr [rbx-0x4ef7b]; inc dword ptr [rcx]; ret far; 
0x0000000006c69a: dec dword ptr [rbx-0x51f73]; jmp qword ptr [rcx+rcx*4+0x8]; 
0x0000000006e26d: dec dword ptr [rbx-0x53f63]; jmp qword ptr [rbx+rcx*4]; 
0x00000000074f9e: dec dword ptr [rbx-0x8ef4b]; inc dword ptr [rbp-0x7b]; in al, 0xf; lahf; ret; 
0x00000000074f7b: dec dword ptr [rbx-0x8ef7b]; inc dword ptr [rcx]; ret; 
0x0000000013bcfb: dec dword ptr [rbx]; mov edx, 0x104; cmove eax, edx; ret; 
0x000000000c821b: dec dword ptr [rcx+0x1]; ret; 
0x000000001951f5: dec dword ptr [rcx+0x21]; ret; 
0x000000000e2e88: dec dword ptr [rcx+0x22b8c7]; add [rax], al; syscall; 
0x00000000195c9a: dec dword ptr [rcx+0x29]; ret far; 
0x000000000e35db: dec dword ptr [rcx+0x29]; ret; 
0x0000000002c5ac: dec dword ptr [rcx+0x3948fc51]; ret; 
0x00000000196ead: dec dword ptr [rcx+0x39]; ret far; 
0x00000000037743: dec dword ptr [rcx+0x3c8348c9]; ret far; 
0x0000000015f2fc: dec dword ptr [rcx+0x49082444]; lea edi, [rsp+0x930]; call qword ptr [r12+0xf10]; 
0x0000000010ce1f: dec dword ptr [rcx+0x75b8c6]; add [rax], al; syscall; 
0x0000000010ce48: dec dword ptr [rcx+0x77b8c6]; add [rax], al; syscall; 
0x0000000013c26a: dec dword ptr [rcx+r9*4+0x10]; lea eax, [r9+r8+0x2]; pop rbx; ret; 
0x0000000013c26b: dec dword ptr [rcx+rcx*4+0x10]; lea eax, [r9+r8+0x2]; pop rbx; ret; 
0x0000000009790f: dec dword ptr [rcx+rcx*4+0x5c]; and al, 0x20; mov [rsp+0x18], r8; call rax; 
0x000000000464b9: dec dword ptr [rcx+rcx*4+0x65]; mov eax, 0xfffdd4e9; jmp qword ptr [rbx+rcx*4+0x4]; 
0x00000000076992: dec dword ptr [rcx+rcx*4-0x12]; mov rdi, r12; sub r15, r13; mov rdx, r15; call qword ptr [rax+0x38]; 
0x000000001569aa: dec dword ptr [rcx+rcx*4-0x12]; mov rdi, rbp; xor eax, eax; call r14; 
0x000000001569c4: dec dword ptr [rcx+rcx*4-0x12]; mov rdi, rbp; xor eax, eax; call rcx; 
0x0000000006bef4: dec dword ptr [rcx+rcx*4-0x16]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000e63b2: dec dword ptr [rcx+rcx*4-0x1]; call qword ptr [r12+0x38]; 
0x00000000100f82: dec dword ptr [rcx+rcx*4-0x1]; call qword ptr [r12+0x40]; 
0x0000000015593b: dec dword ptr [rcx+rcx*4-0x1]; xor eax, eax; add r13, rbx; call rbp; 
0x0000000010cf90: dec dword ptr [rcx+rcx*4-0x1a]; lea rdi, [rip+0xa7622]; mov rdx, [rax+0xb0]; call qword ptr [rax+0x88]; 
0x00000000157680: dec dword ptr [rcx+rcx*4-0x1a]; mov rdi, rbx; call rcx; 
0x00000000063d5c: dec dword ptr [rcx+rcx*4-0x1e]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000118cf7: dec dword ptr [rcx+rcx*4-0x20]; pop r12; ret; 
0x00000000084432: dec dword ptr [rcx+rcx*4-0x20]; pop rbp; pop r12; pop r13; ret; 
0x0000000011435d: dec dword ptr [rcx+rcx*4-0x20]; pop rbx; pop rbp; pop r12; ret; 
0x00000000077006: dec dword ptr [rcx+rcx*4-0x2a]; mov rdi, r12; sub r15, r10; mov rdx, r15; call qword ptr [rax+0x38]; 
0x00000000110b3e: dec dword ptr [rcx+rcx*4-0x32]; call qword ptr [rbp-0xf0]; 
0x00000000121681: dec dword ptr [rcx+rcx*4-0x32]; mov edi, r12d; mov eax, r14d; syscall; 
0x0000000007a943: dec dword ptr [rcx+rcx*4-0x36]; mov rsi, r12; mov rdi, r13; call qword ptr [rax+0x38]; 
0x00000000088f23: dec dword ptr [rcx+rcx*4-0x39]; call qword ptr [rax+0x18]; 
0x0000000007bbc3: dec dword ptr [rcx+rcx*4-0x3e]; mov rsi, r12; mov rdi, r13; call qword ptr [r15+0x38]; 
0x0000000005d415: dec dword ptr [rcx+rcx*4-0x3e]; mov rsi, r14; mov rdi, r12; mov [rbp-0xe8], r8; call rax; 
0x00000000077118: dec dword ptr [rcx+rcx*4-0x6]; mov rsi, r11; mov rdi, r12; mov [rbp-0x4e0], r10; call qword ptr [rcx+0x38]; 
0x00000000076f31: dec dword ptr [rcx+rcx*4-0x6]; mov rsi, r8; mov rdi, r12; mov [rbp-0x4f0], r10; call qword ptr [rax+0x38]; 
0x0000000009e84d: dec dword ptr [rcx+rcx*4-0x9]; call rax; 
0x00000000155a92: dec dword ptr [rcx+rcx*4-0xa]; mov rdi, r12; call r13; 
0x000000001577ae: dec dword ptr [rcx+rcx*4-0xa]; mov rdi, rbp; call r12; 
0x000000000eb47d: dec dword ptr [rcx-0x16ebdbbc]; xchg ecx, eax; idiv bh; jmp qword ptr [rsi+0xf]; 
0x0000000007dd36: dec dword ptr [rcx-0x4e773]; jmp far fword ptr [rcx]; 
0x00000000077681: dec dword ptr [rcx-0x4f773]; jmp far fword ptr [rcx]; 
0x00000000064a2f: dec dword ptr [rcx-0x60f43]; dec dword ptr [rax+0x39]; ret; 
0x000000000dd4e1: dec dword ptr [rcx-0x72b2bfbd]; je short 0x00000000000dd50d; and [rax-0x7d], cl; ret; 
0x0000000002c8fb: dec dword ptr [rcx-0x73]; add cl, [rax+0x39]; ret far; 
0x000000000f1de1: dec dword ptr [rcx-0x75]; adc [r8+0x39], r9b; ret far; 
0x000000000f1de0: dec dword ptr [rcx-0x75]; adc [r8+0x39], r9b; ret far; 
0x00000000104431: dec dword ptr [rcx-0x75]; adc al, 0x24; mov rax, [rbp-0x1e0]; call rax; 
0x00000000147b4c: dec dword ptr [rcx-0x75]; and al, 0x38; mov rdi, r12; call qword ptr [rax+0x20]; 
0x000000001971ea: dec dword ptr [rcx-0x75]; jge short 0x00000000001971ff; add rdi, rbp; call r12; 
0x00000000142bdd: dec dword ptr [rcx-0x75]; jl short 0x0000000000142c06; adc al, ch; imul rbp; jmp qword ptr [rsi+0xf]; 
0x00000000104624: dec dword ptr [rcx-0x75]; or al, 0x24; call rax; 
0x000000000f2dd4: dec dword ptr [rcx-0x75]; sbb [r9], al; ret far; 
0x0000000006664d: dec dword ptr [rcx-0x77]; fmul st, qword ptr [rax-0x77]; ret; 
0x000000000eb2cc: dec dword ptr [rcx-0x77]; fmul st, qword ptr [rdi]; mov dh, 0x43; add [rax-0x7d], ecx; ret; 
0x0000000007e206: dec dword ptr [rcx-0x77]; leave; mov dword ptr [rbp-0x510], 0x1; jmp rax; 
0x0000000002c779: dec dword ptr [rcx-0x77]; ret far; 
0x0000000005b18f: dec dword ptr [rcx-0x77]; ret; 
0x000000001936ef: dec dword ptr [rcx-0x77]; ror dword ptr [rcx+0x9], cl; ret far; 
0x00000000064bc0: dec dword ptr [rcx-0x7d]; mov dword ptr [rcx], 0x74e48545; and al, [rbx-0x61f43]; call qword ptr [rax]; 
0x0000000002d624: dec dword ptr [rcx-0x7d]; ret; 
0x0000000013a99c: dec dword ptr [rcx-0x8b7b]; inc dword ptr [rbp-0x77]; ret; 
0x00000000094f72: dec dword ptr [rcx-0x9]; ret; 
0x00000000034d43: dec dword ptr [rcx-0x9f73]; jmp qword ptr [rax+rcx*2-0x75]; 
0x0000000012a2df: dec dword ptr [rcx]; ret; 
0x00000000122c87: dec dword ptr [rcx]; setbe r8b; mov eax, r8d; ret; 
0x0000000011eeb6: dec dword ptr [rdi]; add [rax], al; and eax, 0xfffff000; or eax, edx; ret; 
0x00000000042864: dec dword ptr [rdi]; mov [rbp-0x7f000000], es; sti; push rax; ret; 
0x0000000009789b: dec dword ptr [rdi]; mov [rdx+0x1], bh; add [rax], al; mov rax, [rip+0x154517]; call qword ptr [rax]; 
0x0000000003430a: dec dword ptr [rdi]; mov bh, 0x4; js short 0x0000000000034293; loopne 0x0000000000034313; ret; 
0x00000000123535: dec dword ptr [rdi]; mov bh, 0x4; js short 0x00000000001234be; loopne 0x000000000012353e; ret; 
0x00000000076153: dec dword ptr [rdi]; mov bh, 0x9d; pop rsp; idiv edi; jmp qword ptr [rsi-0x77]; 
0x0000000009204d: dec dword ptr [rdi]; mov dh, 0x36; call qword ptr [rax+0x18]; 
0x0000000018e333: dec dword ptr [rdi]; mov dh, 0x4e; jmp far fword ptr [rcx]; 
0x00000000031792: dec dword ptr [rdi]; mov dh, 0x53; add [rax-0x7d], ecx; ret; 
0x000000000eb284: dec dword ptr [rdi]; mov dh, 0x55; add bh, [rcx]; ret far; 
0x000000000ebe7a: dec dword ptr [rdi]; mov dh, 0x55; add cl, [rbp-0x73]; add al, 0x39; ret far; 
0x0000000018e0e6: dec dword ptr [rdi]; mov dh, 0x56; jmp far fword ptr [rcx]; 
0x0000000005d7e6: dec dword ptr [rdi]; mov dh, 0x58; or al, 0x89; fdiv st, st(6); ret; 
0x0000000005c143: dec dword ptr [rdi]; mov dh, 0x58; or al, 0xf6; ret; 
0x000000000d60fe: dec dword ptr [rdi]; mov dh, 0xc0; movsxd rax, [r14+rax*4]; add rax, r14; notrack jmp rax; 
0x00000000184bb3: dec dword ptr [rdi]; mov ebp, 0xf80148c0; add rax, r8; vzeroupper; ret; 
0x000000000ac795: dec dword ptr [rdi]; mov ebp, 0xf80148c0; add rax, rsi; ret; 
0x000000000a06e8: dec dword ptr [rdi]; mov esp, 0xc2440fc7; add eax, 0x1; ret; 
0x00000000104f94: dec dword ptr [rdi]; ret; 
0x00000000032878: dec dword ptr [rdi]; ror byte ptr [r8-0x73], 0x1; add eax, 0x1bb21d; mov [rip+0x1bb274], dl; ret; 
0x0000000018b529: dec dword ptr [rdi]; test [rax+0x48fffffc], ah; mov eax, edi; vzeroupper; ret; 
0x0000000011aa24: dec dword ptr [rdi]; test [rbp+0x49000002], esi; mov edi, [rsi]; call rbx; 
0x0000000011b3c0: dec dword ptr [rdi]; test [rbx+0x4c000005], esi; mov [rsp+0x8], eax; mov rdi, [r8]; call rbx; 
0x0000000011adf6: dec dword ptr [rdi]; test [rbx+0x4c000009], eax; mov [rsp+0x8], eax; mov rdi, [r8]; call rbx; 
0x00000000161d35: dec dword ptr [rdi]; test [rbx+rsi*8-0x1], esi; push rdi; test [rbx+rdi*8-0x1], ecx; call qword ptr [rax]; 
0x000000000e7375: dec dword ptr [rdi]; test [rbx+rsi*8-0x1], esp; push rdi; test [rbx+rdi*8-0x1], ecx; call qword ptr [rax]; 
0x0000000011aa54: dec dword ptr [rdi]; test [rbx], ebp; add al, [rax]; add [rcx-0x75], cl; notrack call rbx; 
0x0000000011aa84: dec dword ptr [rdi]; test [rcx+0x49000001], esp; mov edi, [rsi]; call rbx; 
0x00000000076e12: dec dword ptr [rdi]; test [rdi], dh; add al, 0x0; add [rax-0x80], al; jmp qword ptr [rdi+rcx]; 
0x0000000013e392: dec dword ptr [rdi]; test [rdi], eax; add al, 0x0; add [rcx-0x7d], al; ret; 
0x0000000011a9c4: dec dword ptr [rdi]; test [rdi], eax; add al, [rax]; add [rcx-0x75], cl; notrack call rbx; 
0x0000000011a9f4: dec dword ptr [rdi]; test [rdi], edi; add eax, [rax]; add [rcx-0x75], cl; notrack call rbx; 
0x0000000011b389: dec dword ptr [rdi]; test [rdx+0x4c000001], ebx; mov [rsp+0x8], eax; mov rdi, [r8]; call rbx; 
0x0000000011af3d: dec dword ptr [rdi]; test [rdx+0x4c000007], esi; mov [rsp+0x8], eax; mov rdi, [r8]; call rbx; 
0x000000000a447b: dec dword ptr [rdi]; test [rdx], bh; adc [rax], eax; add [rcx-0x9], al; ret; 
0x0000000011af74: dec dword ptr [rdi]; test [rip+0x4c00000a], ebp; mov [rsp+0x8], eax; mov rdi, [r8]; call rbx; 
0x0000000019235f: dec dword ptr [rdi]; test [rsi+0x1], ebp; add [rax], al; xor eax, eax; ret; 
0x0000000011b163: dec dword ptr [rdi]; test [rsi+0x4c000004], esp; mov [rsp+0x8], eax; mov rdi, [r8]; call rbx; 
0x0000000007992e: dec dword ptr [rdi]; test [rsi-0x16000028], edx; sar bh, cl; jmp qword ptr [rsi+0xf]; 
0x0000000006f64c: dec dword ptr [rdi]; test [rsi], cl; add eax, 0x83480000; ret; 
0x0000000003773d: dec dword ptr [rdi]; test [rsp+rdi*8-0x1], al; dec dword ptr [rcx+0x3c8348c9]; ret far; 
0x000000000a5dea: dec dword ptr [rdi]; test [rsp], dh; add bh, dh; ret; 
0x000000000a4fa5: dec dword ptr [rdi]; test ah, bh; xor al, 0x0; add [rcx-0x9], al; ret; 
0x000000001393d7: dec dword ptr [rdi]; test dl, bl; add [rax], al; add [rcx-0xa], al; ret; 
0x0000000006d18d: dec dword ptr [rdi]; test eax, ebx; add [rax], al; add [rcx-0x9], al; ret; 
0x000000001933c0: dec dword ptr [rdi]; test ecx, ebp; add al, 0x0; add [rbp-0x77], cl; ret far; 
0x0000000011aab4: dec dword ptr [rdi]; test ecx, ebx; add al, [rax]; add [rcx-0x75], cl; notrack call rbx; 
0x00000000105ef2: dec dword ptr [rdi]; xchg ebp, eax; ret; 
0x000000000a47ab: dec dword ptr [rdi]; xchg ebx, eax; ret; 
0x0000000006a4b0: dec dword ptr [rdi]; xchg esp, eax; ret; 
0x0000000006403d: dec dword ptr [rdx+0x63]; add al, 0xa1; add rax, rcx; notrack jmp rax; 
0x0000000006c194: dec dword ptr [rdx+0x63]; add al, 0xa1; mov r11d, [rbp-0x5c8]; add rax, rcx; notrack jmp rax; 
0x000000000ff5a9: dec dword ptr [rsi]; add al, ch; jg short 0x00000000000ff5dc; bnd jmp qword ptr [rsi+0xf]; 
0x00000000029e38: dec qword ptr [rax+0x3948074a]; ret; 
0x0000000011500c: div bh; dec dword ptr [rbx+0x480c2444]; add esp, 0x38; ret; 
0x0000000002fdb5: div byte ptr [rax+rcx-0x7d]; inc byte ptr [rbx]; je short 0x000000000002fdc0; ret; 
0x000000001577a5: div byte ptr [rax+rdi+0x31]; sar byte ptr [rdx-0x1], 0x4c; mov esi, esi; mov rdi, rbp; call r12; 
0x00000000094d5a: div byte ptr [rbp+0x13]; and dword ptr [rdi+0x8], 0xfffffffe; xor eax, eax; ret; 
0x0000000011a990: div byte ptr [rbp+0x1d]; mov rdi, [r13]; call rbx; 
0x00000000057b68: div byte ptr [rbp+0x25]; mov dword ptr [rdx], 0x0; mov eax, 0x1; ret; 
0x00000000057bf9: div byte ptr [rbp+0x2c]; mov dword ptr [rdx], 0x0; mov eax, 0x1; ret; 
0x000000000d0f06: div byte ptr [rbp+0x2f]; mov eax, 0x60; syscall; 
0x000000000b1d86: div byte ptr [rbp+0x4]; xor rax, rax; ret; 
0x0000000011a6e5: div byte ptr [rbp+0x8]; add rsp, 0x8; pop rbp; pop r12; ret; 
0x0000000011a793: div byte ptr [rbp+0xa]; pop rbp; pop r12; pop r13; ret; 
0x00000000042c69: div byte ptr [rbp+0xc]; mov [rbx+0x40], esi; xor eax, eax; pop rbx; ret; 
0x000000000e5ab6: div byte ptr [rbp+rdx-0x17]; and dl, [rdi-0x6f990005]; xor eax, eax; ret; 
0x0000000013a86d: div byte ptr [rbp-0x10]; mov fs:[rbx], r13d; mov eax, 0x3; mov edi, [rbp-0x60]; syscall; 
0x000000000a863e: div byte ptr [rbp-0x11]; mov [rdx], rcx; ret; 
0x00000000057c12: div byte ptr [rbp-0x13]; cmp cx, 0x7fff; jne short 0x0000000000057bfc; mov eax, 0x1; ret; 
0x0000000011377e: div byte ptr [rbp-0x25]; or eax, 0x80000000; mov [rdi], eax; xor eax, eax; ret; 
0x000000000a2887: div byte ptr [rbp-0x6a]; nop [rax+rax]; xor r8d, r8d; mov rax, r8; ret; 
0x0000000002616a: div byte ptr [rcx]; jmp qword ptr [rsi+0xf]; 
0x000000001609d6: div byte ptr [rdi+rax-0x17]; adc bl, [rcx]; out dx, eax; jmp qword ptr [rsi-0x70]; 
0x00000000166ebc: div byte ptr [rdx+0x7]; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000010ce16: div byte ptr [rdx-0x3]; inc dword ptr [rbx-0x307c0036]; dec dword ptr [rcx+0x75b8c6]; add [rax], al; syscall; 
0x00000000113119: div byte ptr [rsi-0x48]; sbb [rcx], al; add [rax], al; syscall; 
0x000000000e311c: div byte ptr [rsp+rcx-0x42]; add [rax], eax; add [rax], al; incsspq rsi; jmp rdi; 
0x0000000009f3d5: div dword ptr [rax]; clc; call far fword ptr [rdx+0x31]; 
0x00000000138fd6: div dword ptr [rbp+rax-0x18]; push rdx; xchg ebx, eax; out dx, al; jmp qword ptr [rbx+rcx*4+0x4]; 
0x0000000010d1fa: div dword ptr [rdi-0x15]; mov eax, r8d; ret; 
0x00000000166d6d: div dword ptr [rdx+0x7]; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000056551: div eax; cmp rcx, 0xffffffffffffffff; jne short 0x0000000000056548; mov rax, rdx; ret; 
0x0000000005ea65: div ecx; add r8d, eax; mov eax, r8d; ret; 
0x000000000bc23d: div ecx; mov eax, eax; ret; 
0x000000000bc226: div esi; mov eax, eax; ret; 
0x00000000166d6c: div qword ptr [rdx+0x7]; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000056550: div r8; cmp rcx, 0xffffffffffffffff; jne short 0x0000000000056548; mov rax, rdx; ret; 
0x00000000197185: divps xmm0, [rip+0x27508]; ret; 
0x00000000197184: divss xmm0, [rip+0x27508]; ret; 
0x0000000007ea92: emms; jrcxz 0x000000000007ea7f; ret; 
0x000000001394aa: emms; mov esp, 0xfffeafe9; jmp qword ptr [rsi+0xf]; 
0x00000000157830: endbr64; add [rdi+0x28], edx; mov eax, 0x1; ret; 
0x00000000157820: endbr64; add dword ptr [rdi+0x28], 0x4; mov eax, 0x1; ret; 
0x000000000dd088: endbr64; add rsp, 0x8; pop rbp; pop r12; ret; 
0x0000000008df10: endbr64; and dword ptr [rdi], 0xffffffcf; ret; 
0x00000000041f20: endbr64; andpd xmm0, [rip+0x17a7c4]; andpd xmm1, [rip+0x17a7ac]; orpd xmm0, xmm1; ret; 
0x0000000012bdc0: endbr64; cmp edi, 0x56; je short 0x000000000012bdd0; mov eax, 0x7; ret; 
0x000000000dcfd0: endbr64; cmp esi, 0x1; je short 0x00000000000dcfe0; xor eax, eax; ret; 
0x00000000091eb0: endbr64; cmp qword ptr [rdi+0x38], 0x0; je short 0x0000000000091ec0; ret; 
0x0000000009e220: endbr64; cmp qword ptr [rip+0x150ce4], 0x0; je short 0x000000000009e230; ret; 
0x000000000dd140: endbr64; cmp qword ptr [rsi+0x8], 0x3b9ac9ff; ja short 0x00000000000dd178; mov eax, 0xe3; syscall; 
0x0000000012e7d0: endbr64; cmp rdx, rcx; ja short 0x000000000012e804; xor eax, eax; syscall; 
0x0000000013b410: endbr64; lea eax, [rdi+0x9]; and eax, 0xfffffff8; add eax, 0x10; ret; 
0x000000000241d0: endbr64; lea rax, [rip+0x18fcc3]; ret; 
0x000000000241e0: endbr64; lea rax, [rip+0x191a8c]; ret; 
0x0000000010c7c0: endbr64; mov [rdi+0x4], esi; xor eax, eax; ret; 
0x0000000010dcb0: endbr64; mov eax, 0x102; syscall; 
0x0000000010fd30: endbr64; mov eax, 0x107; syscall; 
0x000000001143d0: endbr64; mov eax, 0x10; syscall; 
0x0000000010fc70: endbr64; mov eax, 0x10a; syscall; 
0x0000000011fe20: endbr64; mov eax, 0x110; syscall; 
0x0000000011fe80: endbr64; mov eax, 0x11b; syscall; 
0x0000000011fee0: endbr64; mov eax, 0x11f; syscall; 
0x0000000011f350: endbr64; mov eax, 0x122; syscall; 
0x0000000011faf0: endbr64; mov eax, 0x123; syscall; 
0x0000000010e920: endbr64; mov eax, 0x124; syscall; 
0x0000000010e980: endbr64; mov eax, 0x125; syscall; 
0x0000000011fc10: endbr64; mov eax, 0x126; syscall; 
0x0000000011ff10: endbr64; mov eax, 0x12c; syscall; 
0x0000000011fa30: endbr64; mov eax, 0x131; syscall; 
0x00000000115310: endbr64; mov eax, 0x132; syscall; 
0x0000000011ff70: endbr64; mov eax, 0x134; syscall; 
0x00000000120000: endbr64; mov eax, 0x13f; syscall; 
0x00000000120030: endbr64; mov eax, 0x14a; syscall; 
0x00000000120060: endbr64; mov eax, 0x14b; syscall; 
0x0000000010e160: endbr64; mov eax, 0x15; syscall; 
0x0000000010e950: endbr64; mov eax, 0x16; syscall; 
0x00000000094cd0: endbr64; mov eax, 0x18; syscall; 
0x00000000146170: endbr64; mov eax, 0x1; ret; 
0x000000001136a0: endbr64; mov eax, 0x1; syscall; 
0x000000000e5240: endbr64; mov eax, 0x1; test edi, edi; js short 0x00000000000e5250; ret; 
0x00000000118ad0: endbr64; mov eax, 0x1b; syscall; 
0x00000000118aa0: endbr64; mov eax, 0x1c; syscall; 
0x000000001211c0: endbr64; mov eax, 0x1e; syscall; 
0x00000000121260: endbr64; mov eax, 0x1f; syscall; 
0x0000000010e8c0: endbr64; mov eax, 0x20; syscall; 
0x0000000010e8f0: endbr64; mov eax, 0x21; syscall; 
0x000000000d41e0: endbr64; mov eax, 0x24; syscall; 
0x000000000e2dc0: endbr64; mov eax, 0x25; syscall; 
0x000000000d4210: endbr64; mov eax, 0x26; syscall; 
0x000000000e40f0: endbr64; mov eax, 0x27; syscall; 
0x000000001207d0: endbr64; mov eax, 0x29; syscall; 
0x000000001489a0: endbr64; mov eax, 0x2; ret; 
0x000000001207a0: endbr64; mov eax, 0x30; syscall; 
0x00000000120190: endbr64; mov eax, 0x31; syscall; 
0x000000001202f0: endbr64; mov eax, 0x32; syscall; 
0x00000000120290: endbr64; mov eax, 0x33; syscall; 
0x00000000120260: endbr64; mov eax, 0x34; syscall; 
0x00000000113370: endbr64; mov eax, 0x3; syscall; 
0x000000000e31a0: endbr64; mov eax, 0x3b; syscall; 
0x00000000043400: endbr64; mov eax, 0x3e; syscall; 
0x000000000e2b70: endbr64; mov eax, 0x3f; syscall; 
0x000000001210b0: endbr64; mov eax, 0x40; syscall; 
0x000000001211f0: endbr64; mov eax, 0x43; syscall; 
0x00000000121040: endbr64; mov eax, 0x44; syscall; 
0x00000000121070: endbr64; mov eax, 0x47; syscall; 
0x0000000010e5a0: endbr64; mov eax, 0x49; syscall; 
0x00000000116cf0: endbr64; mov eax, 0x4c; syscall; 
0x00000000116d20: endbr64; mov eax, 0x4d; syscall; 
0x0000000010ea40: endbr64; mov eax, 0x50; syscall; 
0x0000000010ea70: endbr64; mov eax, 0x51; syscall; 
0x00000000062eb0: endbr64; mov eax, 0x52; syscall; 
0x0000000010dc80: endbr64; mov eax, 0x53; syscall; 
0x0000000010fd60: endbr64; mov eax, 0x54; syscall; 
0x0000000010fbe0: endbr64; mov eax, 0x56; syscall; 
0x0000000010fd00: endbr64; mov eax, 0x57; syscall; 
0x0000000010fc40: endbr64; mov eax, 0x58; syscall; 
0x0000000010fca0: endbr64; mov eax, 0x59; syscall; 
0x0000000010db90: endbr64; mov eax, 0x5a; syscall; 
0x0000000010dbc0: endbr64; mov eax, 0x5b; syscall; 
0x0000000010f390: endbr64; mov eax, 0x5c; syscall; 
0x0000000010f3c0: endbr64; mov eax, 0x5d; syscall; 
0x0000000010f3f0: endbr64; mov eax, 0x5e; syscall; 
0x0000000010db80: endbr64; mov eax, 0x5f; syscall; 
0x00000000113e10: endbr64; mov eax, 0x62; syscall; 
0x0000000011fdf0: endbr64; mov eax, 0x63; syscall; 
0x000000000e2ba0: endbr64; mov eax, 0x64; syscall; 
0x000000000e4110: endbr64; mov eax, 0x66; syscall; 
0x0000000011fc70: endbr64; mov eax, 0x67; syscall; 
0x000000000e4130: endbr64; mov eax, 0x68; syscall; 
0x000000000e4120: endbr64; mov eax, 0x6b; syscall; 
0x000000000e4140: endbr64; mov eax, 0x6c; syscall; 
0x000000000e43d0: endbr64; mov eax, 0x6d; syscall; 
0x000000000e4100: endbr64; mov eax, 0x6e; syscall; 
0x000000000e4400: endbr64; mov eax, 0x6f; syscall; 
0x000000000e4460: endbr64; mov eax, 0x70; syscall; 
0x000000000e4150: endbr64; mov eax, 0x73; syscall; 
0x000000000e4490: endbr64; mov eax, 0x76; syscall; 
0x000000000e44c0: endbr64; mov eax, 0x78; syscall; 
0x000000000e43a0: endbr64; mov eax, 0x79; syscall; 
0x0000000011f1f0: endbr64; mov eax, 0x7a; syscall; 
0x0000000011f220: endbr64; mov eax, 0x7b; syscall; 
0x000000000e4430: endbr64; mov eax, 0x7c; syscall; 
0x0000000011f9d0: endbr64; mov eax, 0x7d; syscall; 
0x0000000011fa00: endbr64; mov eax, 0x7e; syscall; 
0x000000000439f0: endbr64; mov eax, 0x83; syscall; 
0x0000000010d400: endbr64; mov eax, 0x84; syscall; 
0x0000000011fe50: endbr64; mov eax, 0x86; syscall; 
0x0000000011f410: endbr64; mov eax, 0x87; syscall; 
0x0000000010da30: endbr64; mov eax, 0x89; syscall; 
0x0000000010e130: endbr64; mov eax, 0x8; syscall; 
0x0000000010da60: endbr64; mov eax, 0x8a; syscall; 
0x000000001141d0: endbr64; mov eax, 0x8c; syscall; 
0x00000000114210: endbr64; mov eax, 0x8d; syscall; 
0x00000000102680: endbr64; mov eax, 0x8e; syscall; 
0x000000001026b0: endbr64; mov eax, 0x8f; syscall; 
0x000000001026e0: endbr64; mov eax, 0x90; syscall; 
0x00000000102710: endbr64; mov eax, 0x91; syscall; 
0x00000000102770: endbr64; mov eax, 0x92; syscall; 
0x000000001027a0: endbr64; mov eax, 0x93; syscall; 
0x000000001027d0: endbr64; mov eax, 0x94; syscall; 
0x00000000118b30: endbr64; mov eax, 0x95; syscall; 
0x00000000118b60: endbr64; mov eax, 0x96; syscall; 
0x00000000118b90: endbr64; mov eax, 0x97; syscall; 
0x00000000118bc0: endbr64; mov eax, 0x98; syscall; 
0x00000000115650: endbr64; mov eax, 0x99; syscall; 
0x0000000011f960: endbr64; mov eax, 0x9a; syscall; 
0x0000000011fd30: endbr64; mov eax, 0x9b; syscall; 
0x0000000011f930: endbr64; mov eax, 0x9e; syscall; 
0x00000000115190: endbr64; mov eax, 0xa1; syscall; 
0x00000000115250: endbr64; mov eax, 0xa2; syscall; 
0x00000000115160: endbr64; mov eax, 0xa3; syscall; 
0x0000000011f190: endbr64; mov eax, 0xa6; syscall; 
0x00000000115680: endbr64; mov eax, 0xa7; syscall; 
0x000000001156b0: endbr64; mov eax, 0xa8; syscall; 
0x000000001189d0: endbr64; mov eax, 0xa; syscall; 
0x00000000114e10: endbr64; mov eax, 0xaa; syscall; 
0x00000000114f60: endbr64; mov eax, 0xab; syscall; 
0x0000000011f040: endbr64; mov eax, 0xac; syscall; 
0x0000000011f010: endbr64; mov eax, 0xad; syscall; 
0x0000000011fa60: endbr64; mov eax, 0xae; syscall; 
0x0000000011fa90: endbr64; mov eax, 0xb0; syscall; 
0x0000000011fb50: endbr64; mov eax, 0xb1; syscall; 
0x0000000011fd00: endbr64; mov eax, 0xb4; syscall; 
0x000000001189a0: endbr64; mov eax, 0xb; syscall; 
0x00000000120090: endbr64; mov eax, 0xba; syscall; 
0x0000000011f1c0: endbr64; mov eax, 0xbb; syscall; 
0x0000000011ceb0: endbr64; mov eax, 0xc2; syscall; 
0x0000000011cf10: endbr64; mov eax, 0xc3; syscall; 
0x0000000011cdf0: endbr64; mov eax, 0xc4; syscall; 
0x0000000011cfa0: endbr64; mov eax, 0xc5; syscall; 
0x0000000011cf40: endbr64; mov eax, 0xc6; syscall; 
0x0000000011ce20: endbr64; mov eax, 0xc7; syscall; 
0x000000000d0df0: endbr64; mov eax, 0xc9; syscall; 
0x000000001142b0: endbr64; mov eax, 0xc; syscall; 
0x00000000102870: endbr64; mov eax, 0xcb; syscall; 
0x0000000011fac0: endbr64; mov eax, 0xd5; syscall; 
0x0000000011f990: endbr64; mov eax, 0xe4; syscall; 
0x000000001200a0: endbr64; mov eax, 0xea; syscall; 
0x00000000116ad0: endbr64; mov eax, 0xeb; syscall; 
0x0000000011fbe0: endbr64; mov eax, 0xfd; syscall; 
0x0000000011fbb0: endbr64; mov eax, 0xfe; syscall; 
0x0000000011fc40: endbr64; mov eax, 0xff; syscall; 
0x00000000047a20: endbr64; mov eax, 0xffffffff; ret; 
0x0000000010d0a0: endbr64; mov eax, [rdi+0x108]; mov [rsi], eax; xor eax, eax; ret; 
0x00000000093590: endbr64; mov eax, [rdi+0x10]; sub eax, [rsi+0x10]; ret; 
0x0000000010d090: endbr64; mov eax, [rdi+0x10c]; mov [rsi], eax; xor eax, eax; ret; 
0x00000000157840: endbr64; mov eax, [rdi+0x28]; ret; 
0x0000000010c7b0: endbr64; mov eax, [rdi+0x4]; mov [rsi], eax; xor eax, eax; ret; 
0x000000001136d0: endbr64; mov eax, [rdi+0x8]; and eax, 0x100f; ret; 
0x0000000008cdb0: endbr64; mov eax, [rdi]; and eax, 0x200; ret; 
0x0000000008cd80: endbr64; mov eax, [rdi]; and eax, 0x804; ret; 
0x00000000094dd0: endbr64; mov eax, [rdi]; mov [rsi], eax; xor eax, eax; ret; 
0x000000000de310: endbr64; mov eax, [rdi]; ret; 
0x0000000008df20: endbr64; mov eax, [rdi]; shr eax, 0x4; and eax, 0x1; ret; 
0x0000000008df30: endbr64; mov eax, [rdi]; shr eax, 0x5; and eax, 0x1; ret; 
0x000000000440d0: endbr64; mov eax, [rip+0x1a80ce]; ret; 
0x000000000440c0: endbr64; mov eax, [rip+0x1a80e2]; ret; 
0x00000000146eb0: endbr64; mov eax, [rip+0xa9cc2]; test eax, eax; je short 0x0000000000146ec0; ret; 
0x0000000010d140: endbr64; mov eax, [rsi]; mov [rdi+0x108], eax; xor eax, eax; ret; 
0x000000000342e0: endbr64; mov eax, edi; and eax, 0x7f; ret; 
0x0000000012faf0: endbr64; mov eax, edi; bswap eax; ret; 
0x0000000012fb00: endbr64; mov eax, edi; rol ax, 0x8; ret; 
0x0000000010dff0: endbr64; mov eax, fs:[0x18]; test eax, eax; jne short 0x000000000010e010; syscall; 
0x0000000013a5d0: endbr64; mov edi, [rdi]; mov eax, 0x3; syscall; 
0x0000000015de00: endbr64; mov edi, [rip+0x8e626]; test edi, edi; jns short 0x000000000015de10; ret; 
0x00000000043430: endbr64; mov esi, 0x8; mov eax, 0x7f; syscall; 
0x00000000163370: endbr64; mov qword ptr [rcx], 0x0; mov eax, 0xffffffff; ret; 
0x00000000093960: endbr64; mov qword ptr [rip+0x15ae51], 0x0; mov qword ptr [rip+0x15ae4e], 0x0; ret; 
0x0000000010f420: endbr64; mov r10, rcx; mov eax, 0x104; syscall; 
0x00000000062ee0: endbr64; mov r10, rcx; mov eax, 0x108; syscall; 
0x0000000010fc10: endbr64; mov r10, rcx; mov eax, 0x109; syscall; 
0x0000000010fcd0: endbr64; mov r10, rcx; mov eax, 0x10b; syscall; 
0x00000000113660: endbr64; mov r10, rcx; mov eax, 0x11; syscall; 
0x0000000011feb0: endbr64; mov r10, rcx; mov eax, 0x11e; syscall; 
0x0000000011f9a0: endbr64; mov r10, rcx; mov eax, 0x12d; syscall; 
0x0000000011f3e0: endbr64; mov r10, rcx; mov eax, 0x12e; syscall; 
0x0000000011ff40: endbr64; mov r10, rcx; mov eax, 0x12f; syscall; 
0x0000000011ffa0: endbr64; mov r10, rcx; mov eax, 0x136; syscall; 
0x0000000011ffd0: endbr64; mov r10, rcx; mov eax, 0x137; syscall; 
0x0000000011fcd0: endbr64; mov r10, rcx; mov eax, 0x19; syscall; 
0x00000000112fd0: endbr64; mov r10, rcx; mov eax, 0x28; syscall; 
0x00000000120800: endbr64; mov r10, rcx; mov eax, 0x35; syscall; 
0x00000000120770: endbr64; mov r10, rcx; mov eax, 0x36; syscall; 
0x000000001202c0: endbr64; mov r10, rcx; mov eax, 0x37; syscall; 
0x0000000011fd60: endbr64; mov r10, rcx; mov eax, 0x9d; syscall; 
0x0000000011fca0: endbr64; mov r10, rcx; mov eax, 0xa5; syscall; 
0x0000000011fb80: endbr64; mov r10, rcx; mov eax, 0xaf; syscall; 
0x0000000011fd90: endbr64; mov r10, rcx; mov eax, 0xb2; syscall; 
0x0000000011fdc0: endbr64; mov r10, rcx; mov eax, 0xb3; syscall; 
0x0000000011cfd0: endbr64; mov r10, rcx; mov eax, 0xbc; syscall; 
0x0000000011cf70: endbr64; mov r10, rcx; mov eax, 0xbd; syscall; 
0x0000000011ce50: endbr64; mov r10, rcx; mov eax, 0xbe; syscall; 
0x0000000011ce80: endbr64; mov r10, rcx; mov eax, 0xbf; syscall; 
0x0000000011cee0: endbr64; mov r10, rcx; mov eax, 0xc0; syscall; 
0x0000000011cdc0: endbr64; mov r10, rcx; mov eax, 0xc1; syscall; 
0x00000000118b00: endbr64; mov r10, rcx; mov eax, 0xd8; syscall; 
0x00000000121180: endbr64; mov r10, rcx; mov eax, 0xdc; syscall; 
0x0000000011fb20: endbr64; mov r10, rcx; mov eax, 0xe9; syscall; 
0x000000001130d0: endbr64; mov r10d, ecx; mov eax, 0x118; syscall; 
0x0000000010d8b0: endbr64; mov r10d, ecx; mov eax, 0x14c; syscall; 
0x00000000112b10: endbr64; mov r10d, ecx; mov eax, 0xdd; syscall; 
0x0000000011f310: endbr64; mov r10d, edx; mov eax, 0x121; mov edx, 0x8; syscall; 
0x00000000092920: endbr64; mov rax, 0xffffffffffffffff; ret; 
0x000000001573c0: endbr64; mov rax, [rdi+0x18]; sub rax, [rdi+0x20]; ret; 
0x000000000de2c0: endbr64; mov rax, [rdi+0x20]; ret; 
0x00000000093880: endbr64; mov rax, [rdi+0x68]; ret; 
0x000000000874c0: endbr64; mov rax, [rdi+0xa0]; cmp qword ptr [rax+0x30], 0x0; je short 0x00000000000874d8; ret; 
0x00000000095220: endbr64; mov rax, [rdi]; cmp rax, 0x2000000; jbe short 0x0000000000095230; ret; 
0x00000000094e70: endbr64; mov rax, [rdi]; cmp rax, 0x408; jbe short 0x0000000000094e80; ret; 
0x00000000095280: endbr64; mov rax, [rdi]; cmp rax, 0xa0; jbe short 0x0000000000095290; ret; 
0x00000000094eb0: endbr64; mov rax, [rdi]; cmp rax, 0xffff; jbe short 0x0000000000094ec0; ret; 
0x00000000094ed0: endbr64; mov rax, [rdi]; nop; mov [rip+0x157409], rax; ret; 
0x00000000094e60: endbr64; mov rax, [rdi]; nop; mov [rip+0x157429], rax; ret; 
0x00000000094e50: endbr64; mov rax, [rdi]; nop; mov [rip+0x157441], rax; ret; 
0x00000000095270: endbr64; mov rax, [rdi]; nop; mov [rip+0x159c0e], eax; ret; 
0x00000000093860: endbr64; mov rax, [rip+0x159d35]; ret; 
0x00000000043c80: endbr64; mov rax, [rip+0x1a81e5]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x000000000344d0: endbr64; mov rax, [rip+0x1b792d]; add rax, fs:[0x0]; ret; 
0x000000000344f0: endbr64; mov rax, [rip+0x1b79ed]; add rax, fs:[0x0]; ret; 
0x00000000034510: endbr64; mov rax, [rip+0x1b7a0d]; add rax, fs:[0x0]; ret; 
0x0000000002f5d0: endbr64; mov rax, [rip+0x1be38d]; ret; 
0x00000000024430: endbr64; mov rax, [rip+0x1c7a35]; add rax, fs:[0x0]; ret; 
0x00000000025ae0: endbr64; mov rax, [rip+0x1cb6bd]; ret; 
0x00000000025ad0: endbr64; mov rax, [rip+0x1cb6dd]; ret; 
0x00000000163340: endbr64; mov rax, [rip+0x88b25]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x00000000162ce0: endbr64; mov rax, [rip+0x89185]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x00000000162cc0: endbr64; mov rax, [rip+0x891a5]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x00000000162c80: endbr64; mov rax, [rip+0x891e5]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x00000000162c60: endbr64; mov rax, [rip+0x89205]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x00000000162c40: endbr64; mov rax, [rip+0x89225]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x00000000162c20: endbr64; mov rax, [rip+0x89245]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x00000000160bd0: endbr64; mov rax, [rip+0x8b295]; mov dword ptr fs:[rax], 0x26; xor eax, eax; ret; 
0x0000000015f890: endbr64; mov rax, [rip+0x8c5c5]; jmp qword ptr [rax+0x1f0]; 
0x0000000015c960: endbr64; mov rax, [rip+0x8f505]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x00000000153090: endbr64; mov rax, [rip+0x98d05]; lea rdx, [rip+0x9dd9e]; mov fs:[rax], rdx; ret; 
0x00000000141110: endbr64; mov rax, [rip+0xaaed5]; mov rax, fs:[rax]; ret; 
0x00000000142e90: endbr64; mov rax, [rip+0xadb85]; test rax, rax; jne short 0x0000000000142ea8; ret; 
0x0000000012feb0: endbr64; mov rax, [rip+0xbbf9d]; add rax, fs:[0x0]; ret; 
0x000000001228e0: endbr64; mov rax, [rip+0xc9575]; mov eax, [rax+0x38]; ret; 
0x000000001200d0: endbr64; mov rax, [rip+0xcbd95]; mov dword ptr fs:[rax], 0x26; mov rax, 0xffffffffffffffff; ret; 
0x00000000115630: endbr64; mov rax, [rip+0xd6835]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x000000001143b0: endbr64; mov rax, [rip+0xd7ab5]; mov dword ptr fs:[rax], 0x26; mov rax, 0xffffffffffffffff; ret; 
0x0000000010dbf0: endbr64; mov rax, [rip+0xde275]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x00000000034480: endbr64; mov rax, [rsi+0x70]; movsxd rdi, edi; mov eax, [rax+rdi*4]; ret; 
0x00000000034490: endbr64; mov rax, [rsi+0x78]; movsxd rdi, edi; mov eax, [rax+rdi*4]; ret; 
0x00000000094c70: endbr64; mov rax, fs:[0x10]; ret; 
0x00000000047370: endbr64; mov rax, rdi; cqo; idiv rsi; ret; 
0x00000000093890: endbr64; mov rax, rdi; ret; 
0x00000000162b80: endbr64; mov rdx, rsi; mov eax, 0xcb; mov esi, 0x80; syscall; 
0x000000000d10a0: endbr64; mov rsi, rdi; mov eax, 0xa4; xor edi, edi; syscall; 
0x00000000042a50: endbr64; movmskps eax, xmm0; and eax, 0x8; ret; 
0x0000000010c780: endbr64; movzx eax, word ptr [rdi]; mov [rsi], ax; xor eax, eax; ret; 
0x00000000042660: endbr64; pand xmm1, [rip+0x17a104]; pand xmm0, [rip+0x17a0ec]; por xmm0, xmm1; ret; 
0x000000000421e0: endbr64; pmovmskb eax, xmm0; and eax, 0x80; ret; 
0x00000000042510: endbr64; pmovmskb eax, xmm0; and eax, 0x8; ret; 
0x000000000e3100: endbr64; pop rdi; mov eax, 0x3a; syscall; 
0x00000000023f20: endbr64; ret; 
0x0000000011f7c0: endbr64; test edx, edx; je short 0x000000000011f7f8; mov eax, 0x145; syscall; 
0x000000000bbf70: endbr64; test rdx, rdx; jne short 0x00000000000bbf7d; mov rax, rdi; ret; 
0x00000000116cb0: endbr64; test rsi, rsi; je short 0x0000000000116ce8; mov eax, 0x105; syscall; 
0x000000000b1d80: endbr64; test rsi, rsi; jne short 0x00000000000b1d8d; xor rax, rax; ret; 
0x000000000cf6c0: endbr64; test rsi, rsi; jne short 0x00000000000cf6cd; xor rax, rax; ret; 
0x000000000d0f00: endbr64; test rsi, rsi; jne short 0x00000000000d0f38; mov eax, 0x60; syscall; 
0x000000000342f0: endbr64; xor eax, eax; and edi, 0xffffff80; sete al; ret; 
0x00000000094c90: endbr64; xor eax, eax; cmp rdi, rsi; sete al; ret; 
0x000000000928a0: endbr64; xor eax, eax; ret; 
0x00000000113630: endbr64; xor eax, eax; syscall; 
0x0000000008cd90: endbr64; xor eax, eax; test byte ptr [rdi], 0x4; sete al; ret; 
0x0000000008cda0: endbr64; xor eax, eax; test byte ptr [rdi], 0x8; sete al; ret; 
0x000000000908d0: endbr64; xor eax, eax; test rdx, rdx; jne short 0x00000000000908e0; ret; 
0x00000000121220: endbr64; xor r10d, r10d; mov eax, 0x1d; syscall; 
0x0000000014ced2: enter 0x0, 0x0; add al, [rax]; add [rax], al; add rdi, 0xc8; jmp rcx; 
0x0000000014cf2c: enter 0x0, 0x0; call rax; 
0x0000000014cedd: enter 0x0, 0x0; jmp rcx; 
0x000000000ee4c0: enter 0x0, 0x0; jne 0x00000000000ee3ed; ret; 
0x0000000010c958: enter 0x0, 0x0; mov [rsp+0xe8], eax; mov eax, 0xe; syscall; 
0x00000000153ea6: enter 0x0, 0x0; mov dword ptr [rsp+0xd0], 0x1; movups [rsp+0xb8], xmm5; call rax; 
0x00000000153e0a: enter 0x0, 0x0; mov dword ptr [rsp+0xd0], 0x2; movups [rsp+0xb8], xmm3; movups [rsp+0xd8], xmm0; call rax; 
0x00000000147ba0: enter 0x0, 0x0; mov rdi, rbx; call qword ptr [rax+0x20]; 
0x0000000014ed64: enter 0x1, 0x0; add rsi, 0x38; jmp qword ptr [rax+0x18]; 
0x0000000011d063: enter 0x1, 0x0; ret; 
0x00000000091a4d: enter 0x1076, 0x48; mov eax, [rbx+0x18]; add rsp, 0x10; pop rbx; jmp rax; 
0x000000000d293f: enter 0x11, 0x1; add rsp, 0x8; ret; 
0x00000000188299: enter 0x148, 0xf8; vzeroupper; ret; 
0x00000000193f3f: enter 0x14c, 0xd2; notrack jmp rdx; 
0x000000000cf378: enter 0x1577, 0x48; sub edi, 0x10; add rax, rdi; ret; 
0x000000001836f4: enter 0x17d, 0x0; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x000000000310c7: enter 0x1b, 0x48; ror eax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000363f4: enter 0x1b77, 0x0; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000085b53: enter 0x2276, 0x48; mov edx, ebx; mov rsi, r13; mov rdi, rbp; call qword ptr [r14+0x38]; 
0x0000000015d078: enter 0x22e8, 0x2a; std; jmp qword ptr [rsi-0x70]; 
0x000000001924d0: enter 0x275, 0x39; enter 0xc019, 0x83; fdivr st, st(7); ret; 
0x00000000042351: enter 0x280f, 0xc1; ret; 
0x00000000091fad: enter 0x2876, 0x48; mov edi, ebx; call qword ptr [rbp+0x20]; 
0x00000000057c46: enter 0x289, 0xb8; add [rax], eax; add [rax], al; ret; 
0x0000000018cfae: enter 0x2948, 0xd0; shr rax, 0x2; vzeroupper; ret; 
0x0000000018863e: enter 0x2948, 0xd0; vzeroupper; ret; 
0x000000001837d7: enter 0x2948, 0xf8; ret; 
0x0000000004830c: enter 0x2948, 0xfe; syscall; 
0x00000000087d42: enter 0x2b76, 0x48; mov edi, ebx; call qword ptr [rbp+0x30]; 
0x0000000009296d: enter 0x3076, 0x48; mov edi, ebx; call qword ptr [rbp+0x30]; 
0x000000000aa3ad: enter 0x31c3, 0xc0; ret; 
0x0000000008806f: enter 0x373, 0x44; mov eax, [rax]; mov eax, r8d; ret; 
0x0000000008ffde: enter 0x3776, 0x48; mov edi, ebp; call qword ptr [rbx+0x88]; 
0x00000000055065: enter 0x3b4c, 0x10; mov eax, 0x0; jne short 0x0000000000055073; push r10; ret; 
0x0000000005556e: enter 0x3b4c, 0x10; mov eax, 0x0; jne short 0x000000000005557c; push r10; ret; 
0x00000000085a70: enter 0x3d76, 0x4c; mov edx, ebp; mov rsi, rbp; mov rdi, rbx; call qword ptr [r14+0x38]; 
0x0000000007a0f8: enter 0x415d, 0x5c; pop r13; pop r14; ret; 
0x0000000015079b: enter 0x4289, 0x10; mov eax, 0x1; ret; 
0x000000001506a3: enter 0x4289, 0xc; mov eax, 0x1; ret; 
0x0000000008e3a0: enter 0x4576, 0x48; mov edx, ebx; mov rsi, r12; mov rdi, rbp; call qword ptr [r13+0x38]; 
0x0000000009087f: enter 0x4676, 0x31; idiv byte ptr [rcx+0x3]; mov edx, 0x1; mov rdi, rbx; call qword ptr [r12+0x48]; 
0x000000000cf189: enter 0x475, 0x44; mov eax, ecx; ret; 
0x0000000013c9e4: enter 0x480f, 0xc2; ret; 
0x00000000117580: enter 0x4866, 0xf; outsb dx, [rsi]; ret; 
0x00000000127c11: enter 0x4c88, 0x24; and [rax+0x411f2444], cl; call qword ptr [rsp+0x28]; 
0x000000000b9224: enter 0x5, 0x0; ret; 
0x00000000043000: enter 0x50f, 0x48; mov edi, eax; mov eax, 0xba; syscall; 
0x0000000016b074: enter 0x528, 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000008bdf1: enter 0x5476, 0x31; test byte ptr [rax-0x77], 0xef; call qword ptr [r13+0x10]; 
0x0000000008e46a: enter 0x5b76, 0xba; add [rax], eax; add [rax], al; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x00000000038ca9: enter 0x5d5b, 0x41; pop rsp; ret; 
0x00000000073d2c: enter 0x6176, 0x4d; movsxd esp, esp; mov rdx, r12; call qword ptr [r13+0x38]; 
0x000000000240df: enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x0000000002441e: enter 0x6411, 0x48; xor eax, [0x30]; jmp rax; 
0x000000000472da: enter 0x6411, 0x48; xor eax, [0x30]; mov fs:[rbx], rdx; mov rdi, [rbp+0x8]; call rax; 
0x0000000013cc9a: enter 0x6411, 0x48; xor eax, [0x30]; mov qword ptr [rsp], 0x0; call rax; 
0x000000000dd421: enter 0x6411, 0x48; xor eax, [0x30]; pop r13; pop r14; jmp rax; 
0x00000000090097: enter 0x6676, 0x31; idiv byte ptr [rdx+0x2]; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x00000000091ef7: enter 0x6676, 0x48; mov edi, ebx; call qword ptr [rbp+0x68]; 
0x00000000102864: enter 0x66c3, 0x2e; nop [rax+rax]; endbr64; mov eax, 0xcb; syscall; 
0x0000000007a3bb: enter 0x7a76, 0x48; movsxd ebx, ebx; mov rdx, rbx; call qword ptr [r13+0x38]; 
0x00000000084c33: enter 0x7a76, 0x4c; mov edx, esp; mov rsi, rbp; mov rdi, rbx; call qword ptr [r13+0x58]; 
0x000000000dd0ae: enter 0x8348, 0xc4; or [rbp+0x41], bl; pop rsp; ret; 
0x000000001460df: enter 0x8348, 0xea; add [rbp-0x7e], esi; ret; 
0x000000000b1933: enter 0x840f, 0xc6; add [rax], eax; add [rax+0xf], cl; mov ebp, 0xf80148c0; ret; 
0x00000000081e62: enter 0x860f, 0x57; add [rax], eax; add [rcx], dh; test byte ptr [rax-0x77], 0xef; call qword ptr [rbx+0x10]; 
0x00000000091bba: enter 0x860f, 0x87; add [rax], al; add [rsi-0x1], bh; mov rdi, rbp; call qword ptr [rbx+0x18]; 
0x00000000084517: enter 0x860f, 0x92; add [rax], al; add [rax-0x77], cl; fimul st, dword ptr [rcx+rcx*4-0x1a]; call qword ptr [r14+0x38]; 
0x0000000008a094: enter 0x860f, 0xd5; add [rax], al; add [rdx+0x1], bh; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x00000000061bf6: enter 0x8907, 0x2; mov eax, 0x1; ret; 
0x00000000113cb1: enter 0x8930, 0x47; or [rax+0x100], bh; mov [rdi+0x16], ax; ret; 
0x0000000014fe6c: enter 0x8941, 0x40; pop rax; mov eax, 0x1; ret; 
0x0000000014fe9c: enter 0x8941, 0x40; push rsp; mov eax, 0x1; ret; 
0x0000000014d0bc: enter 0x8941, 0x80; mov ah, 0x0; add [rax], al; mov eax, 0x1; ret; 
0x0000000014d08c: enter 0x8941, 0x80; mov eax, 0xb8000000; add [rax], eax; add [rax], al; ret; 
0x0000000014d05f: enter 0x8941, 0x80; test al, 0x0; add [rax], al; mov eax, 0x1; ret; 
0x000000000cf1a5: enter 0x8944, 0xc8; ret; 
0x00000000041fe2: enter 0x8948, 0x7; subsd xmm0, xmm1; ret; 
0x0000000005587a: enter 0x8949, 0x4; leave; xor eax, eax; ret; 
0x000000000563f6: enter 0x894c, 0x47; clc; shl r9, cl; mov [rdi-0x10], r9; ret; 
0x00000000056376: enter 0x894c, 0x7; shl r9, cl; mov [rdi-0x8], r9; ret; 
0x00000000056490: enter 0x894c, 0x7; shr r9, cl; mov [rdi+0x8], r9; ret; 
0x00000000146a7f: enter 0x8b48, 0x47; cmp [rbp+rcx*4+0x6c], cl; and al, 0x68; mov rsi, r13; call qword ptr [rax+0x10]; 
0x00000000118765: enter 0x8b4c, 0x4c; and al, 0x8; syscall; 
0x0000000011f148: enter 0x8b4c, 0x54; and al, 0x8; mov eax, 0x38; syscall; 
0x00000000087f52: enter 0x8d49, 0x14; nop; mov [rax], rdx; xor eax, eax; ret; 
0x00000000157536: enter 0x9848, 0x48; mov [rsi], eax; mov [rdi+0x18], rdx; mov eax, r8d; ret; 
0x0000000011f574: enter 0xc, 0xf7; fsub st, dword ptr [rcx+rcx*4+0x2]; mov rax, 0xffffffffffffffff; ret; 
0x000000001924d4: enter 0xc019, 0x83; fdivr st, st(7); ret; 
0x0000000011c6ec: enter 0xc031, 0xe8; ret far; 
0x0000000014d048: enter 0xc089, 0x48; mov [rdx], eax; mov eax, 0x1; ret; 
0x000000000cfaf2: enter 0xc148, 0xe8; add al, [rdx+rdx*8-0x2e77ea8c]; and cl, 0xf; je short 0x00000000000cfb20; ret; 
0x000000000c6b7c: enter 0xc35b, 0x45; xor ecx, ecx; mov eax, r9d; ret; 
0x0000000013b977: enter 0xc672, 0x39; shl byte ptr [rbp-0x2e], 0x1; mov [rsi], rdi; xor eax, eax; ret; 
0x0000000010bf24: enter 0xc748, 0x4; rol byte ptr [rax], 0x1; add [rax], al; add [rbp-0x76b7febd], cl; ret; 
0x00000000057ba1: enter 0xd348, 0xe6; mov [rdi], rsi; mov [rdx], eax; mov eax, 0x1; ret; 
0x00000000077241: enter 0xd839, 0xf; or dword ptr [rdi+rdi*8], 0xffffffff; jmp qword ptr [rsi+0xf]; 
0x00000000052977: enter 0xe0c1, 0x1e; or eax, edx; ret; 
0x000000000a88c3: enter 0xe274, 0x4c; mov eax, eax; ret; 
0x00000000092a5a: enter 0xe883, 0x1; ret; 
0x00000000129513: enter 0xe9c1, 0x1f; cmp sil, cl; cmovne eax, edx; ret; 
0x0000000005f6b3: enter 0xf41, 0x94; ret; 
0x000000000a8808: enter 0xf41, 0x95; rol dword ptr [rbp-0x7c], 0xca; jne short 0x00000000000a87f0; mov rax, r8; ret; 
0x00000000086e49: enter 0xf48, 0x4f; ror dword ptr [rax-0x7b], 0xd2; jne short 0x0000000000086e40; ret; 
0x00000000091711: enter 0xf48, 0x4f; ror dword ptr [rax-0x7b], 0xd2; jne short 0x0000000000091708; ret; 
0x000000000b1549: enter 0xf66, 0xeb; ret; 
0x0000000004228e: enter 0xf8c1, 0x1f; not eax; and eax, edx; ret; 
0x00000000183e20: enter 0xf8c5, 0x77; ret; 
0x0000000018ea8a: enter 0xfc3, 0x1f; add [rip+0xff], spl; and ecx, 0xff; sub eax, ecx; ret; 
0x00000000184d67: enter 0xfc3, 0x1f; add byte ptr [rax], 0x0; add [rax], al; xor eax, eax; ret; 
0x000000001481f6: enter 0xff3e, 0xe0; movdqu xmm0, [rdi+0x38]; mov dword ptr [rsi], 0x9; movups [rsi+0x8], xmm0; ret; 
0x00000000078aa2: enter 0xfffa, 0xff; add [rax], eax; add [rax], al; mov r10, rdx; jmp rax; 
0x0000000007f1ba: enter 0xfffa, 0xff; add [rax], eax; add [rax], al; mov r9, rsi; jmp rax; 
0x00000000184e14: enter 0xfffe, 0xff; ret; 
0x000000000bc7d3: fadd st(3), st; nop [rax]; xor eax, eax; ret; 
0x000000000bcd03: fadd st(3), st; ret; 
0x00000000153e25: fadd st, dword ptr [rax]; add [rax], al; call rax; 
0x00000000023a71: fadd st, dword ptr [rax]; add [rax], al; jne short 0x0000000000023a3b; ret; 
0x0000000008281f: fadd st, dword ptr [rax]; add [rax], al; mov rdx, [rdi+0xa0]; mov [rdx+0xe0], rcx; ret; 
0x00000000052c3a: fadd st, dword ptr [rax]; add [rax], al; ret; 
0x00000000118b08: fadd st, dword ptr [rax]; add [rax], al; syscall; 
0x0000000010fdba: fadd st, dword ptr [rax]; ret; 
0x0000000007dd28: fadd st, dword ptr [rbp-0x187af040]; or [rax], eax; add [rbx-0x4df43], cl; dec dword ptr [rcx-0x4e773]; jmp far fword ptr [rcx]; 
0x00000000077673: fadd st, dword ptr [rbp-0x537af040]; or [rax], eax; add [rbx-0x4ef7b], cl; dec dword ptr [rcx-0x4f773]; jmp far fword ptr [rcx]; 
0x000000000627d8: fadd st, dword ptr [rbp-0x7b]; shl byte ptr [rbp+0x2], 0x5b; ret; 
0x0000000006e1ba: fadd st, dword ptr [rbx+0x10df9e0]; adc [rax], al; add [rcx-0x77], al; ret; 
0x00000000158834: fadd st, dword ptr [rbx+0x14807e0]; ret; 
0x0000000015a524: fadd st, dword ptr [rbx-0x76b7f820]; ret; 
0x000000000d6c98: fadd st, dword ptr [rbx-0x76b7f840]; ret; 
0x0000000017c884: fadd st, dword ptr [rbx]; add [rax], al; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x000000000ec80b: fadd st, dword ptr [rcx+0x5c]; pop r13; pop r14; pop r15; ret; 
0x000000000c7e32: fadd st, dword ptr [rcx+0xf]; xchg ebx, eax; ret; 
0x0000000004a1a4: fadd st, dword ptr [rcx+0xf]; xchg esp, eax; ret; 
0x0000000014ac9f: fadd st, dword ptr [rcx-0x77]; ret far; 
0x0000000007ea5b: fadd st, dword ptr [rcx-0x77]; ret; 
0x0000000015f755: fadd st, dword ptr [rcx]; add [rax], al; jmp rax; 
0x000000000d4514: fadd st, dword ptr [rip-0x76b80000]; ret; 
0x000000000445f0: fadd st, qword ptr [rax+rax]; add rsp, 0x8; ret; 
0x00000000121188: fadd st, qword ptr [rax]; add [rax], al; syscall; 
0x00000000041e58: fadd st, st(0); add rsp, 0x8; ret; 
0x00000000041e04: fadd st, st(0); ret; 
0x00000000192af8: fadd st, st(3); nop [rax+rax]; ret; 
0x000000000cf0b8: fadd st, st(3); nop [rax+rax]; xor rax, rax; ret; 
0x0000000018f8be: fadd st, st(3); ret; 
0x000000000a894d: fcmovb st, st(3); nop; ret; 
0x00000000043f5e: fcmovnb st, st(1); shufpd xmm0, xmm0, 0x1; movups [rdi], xmm0; ret; 
0x0000000018875b: fcmovnb st, st(5); std; xlat [rbx]; ret; 
0x00000000106ce1: fcmovnbe st, st(2); bnd jmp qword ptr [rsi+0x66]; 
0x000000000e1772: fcmovu st, st(4); adc [rax], al; syscall; 
0x000000000e1c63: fcom st, dword ptr [rax]; add [rcx], al; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x000000000bd643: fcom st, dword ptr [rdx]; add [rax+0x39], cl; ret; 
0x000000000be5db: fcom st, dword ptr [rdx]; add [rbp+0x31], al; jmp qword ptr [rdi+rax*8]; 
0x0000000012dfbf: fcomip st, st(5); jmp qword ptr [rsi+0xf]; 
0x00000000023a53: fcomp st, dword ptr [rax+rax]; ret; 
0x00000000062e9f: fcomp st, dword ptr [rbp-0x3d]; nop [rax+rax]; mov eax, 0xffffffff; pop rbp; ret; 
0x000000000a2c6b: fcomp st, dword ptr [rbx+0x48]; cmovne eax, edi; ret; 
0x000000000ca02b: fcomp st, dword ptr [rbx+0x5d]; pop r12; pop r13; pop r14; ret; 
0x000000000c9f37: fcomp st, dword ptr [rbx+0x5d]; pop r12; pop r13; ret; 
0x0000000008d8b5: fcomp st, dword ptr [rbx+0x5d]; pop r12; ret; 
0x00000000089e2f: fcomp st, dword ptr [rbx+0x5d]; ret; 
0x00000000197175: fcomp st, dword ptr [rbx+0x7420e783]; adc bl, dh; movups xmm0, [rip+0x261fc]; divss xmm0, [rip+0x27508]; ret; 
0x00000000038880: fcomp st, qword ptr [rbx-0x72b20002]; jl short 0x000000000003888f; add [rax-0x9], ecx; ror byte ptr [rax+0x1], 0x1; ret; 
0x0000000015c990: fcomp st, qword ptr [rcx]; std; jmp qword ptr [rsi+0x2e]; 
0x000000000dd9a3: fcos; adc [rax], al; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000a26c6: fcos; dec dword ptr [rax-0x77]; ret; 
0x0000000006e513: fcos; jmp qword ptr [rsi+0xf]; 
0x0000000004c41b: fcos; jmp qword ptr [rsi-0x70]; 
0x00000000151dbc: fdiv st(5), st; call qword ptr [rax-0x5e1f00d]; 
0x0000000006e41c: fdiv st(7), st; inc dword ptr [rbx+rcx*4+0x63]; or [rcx-0x7d], al; ret far; 
0x00000000076483: fdiv st(7), st; jmp qword ptr [rsi+0x2e]; 
0x000000000cdf51: fdiv st(7), st; jmp qword ptr [rsi+0x66]; 
0x000000000d813f: fdiv st(7), st; jmp qword ptr [rsi+0x66]; 
0x00000000076434: fdiv st(7), st; jmp qword ptr [rsi+0xf]; 
0x000000000cdf3b: fdiv st(7), st; jmp qword ptr [rsi-0x70]; 
0x000000000f4d32: fdiv st, st(2); dec dword ptr [rax-0x77]; ret; 
0x0000000005d7ec: fdiv st, st(6); ret; 
0x00000000151c7c: fdivp st(5), st; call qword ptr [rax-0x5e1f00d]; 
0x0000000007e425: fdivp st(7), st; call far fword ptr [rdi]; 
0x00000000093191: fdivp st(7), st; dec dword ptr [rax-0x3f]; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x00000000131be3: fdivp st(7), st; jmp qword ptr [rsi+0x2e]; 
0x0000000009677a: fdivp st(7), st; jmp qword ptr [rsi+0xf]; 
0x000000001608c0: fdivr st(1), st; cld; jmp qword ptr [rsi+0x66]; 
0x0000000009020d: fdivr st, dword ptr [rsi]; jmp rax; 
0x0000000012a2dd: fdivr st, st(7); dec dword ptr [rcx]; ret; 
0x00000000132243: fdivr st, st(7); jmp qword ptr [rsi+0x2e]; 
0x0000000017c5fd: fdivr st, st(7); ret; 
0x000000000b663e: fdivr st, st(7); xor cl, cl; mov [rax], cl; mov rax, rdi; ret; 
0x0000000009f95e: fdivrp st(5), st; adc al, 0x0; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000130846: fdivrp st(6), st; or eax, [rax]; syscall; 
0x000000000f0555: fdivrp st(6), st; ret; 
0x000000000a4521: ffreep st(1); call far fword ptr [rax]; 
0x000000000a4537: ffreep st(1); call far fword ptr [rsi]; 
0x000000000a4507: ffreep st(1); call qword ptr [rdx]; 
0x00000000183ba1: ffreep st(5); std; xlat [rbx]; ret far; 
0x000000000932e2: fiadd st, dword ptr [rax]; add [rax], al; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [r15+0x18]; 
0x00000000031ad5: fiadd st, dword ptr [rax]; add [rax], al; movsxd r8, [rdx+r9*4]; add r8, rdx; notrack jmp r8; 
0x000000000e0d86: fiadd st, dword ptr [rbp+0x31]; sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000004a886: fiadd st, dword ptr [rbp-0xd77f025]; add [rax], al; add [rax+0x63], cl; ret far; 
0x000000000a47b6: fiadd st, dword ptr [rcx+0xf]; xchg ebx, eax; ret; 
0x000000000c5b78: fiadd st, dword ptr [rcx-0x7d]; call far fword ptr [rax]; 
0x0000000018b162: fiadd st, dword ptr [rcx]; add [rax], al; vzeroupper; ret; 
0x000000000a4013: fiadd st, dword ptr [rdi+rcx-0x4a]; add byte ptr [r9+0xf], 0x93; ret; 
0x000000000c948d: fiadd st, word ptr [rcx+0xf]; xchg ebx, eax; ret; 
0x000000000441c1: fiadd st, word ptr [rcx-0x77]; rol byte ptr [rcx-0x46], 0x8; add [rax], al; add [rax+0x80], bh; syscall; 
0x0000000018a42e: fiadd st, word ptr [rcx]; add [rax], al; vzeroupper; ret; 
0x00000000048134: fiadd st, word ptr [rip+0x48000000]; mov [rsi+0x10], eax; xor eax, eax; mov dword ptr [rsi+0xc], 0x1000b; ret; 
0x00000000048183: fiadd st, word ptr [rip+0x48000000]; mov [rsi+0x10], eax; xor eax, eax; ret; 
0x0000000011b08a: fiadd st, word ptr [rip-0x76b40000]; and al, 0x8; mov rdi, [r8]; call rbx; 
0x0000000011378e: fiadd st, word ptr [rsi-0x389bfff3]; add [rsi], dl; add [rax], al; add [rax-0x1], bh; ret; 
0x000000000e1ac9: ficom st, dword ptr [rax]; add al, ch; jmp far fword ptr [rdx]; 
0x00000000140f82: ficom st, dword ptr [rsi+rbp*8]; dec dword ptr [rax+0x39]; ret; 
0x0000000003cd4e: ficom st, word ptr [rbp-0x2]; jmp qword ptr [rsi+0xf]; 
0x00000000134b75: ficomp st, dword ptr [rbx+0x31]; rcr byte ptr [rbp-0x3a], 0x2; add [rcx+0x5c], al; pop r13; ret; 
0x0000000013ee44: fidiv st, dword ptr [rcx]; test byte ptr [rcx+rcx*4-0x11], 0xe8; adc [rdi], esi; out dx, al; jmp qword ptr [rsi+0xf]; 
0x000000000951a2: fidivr st, dword ptr [rcx+0x15]; add [rcx+0x1], al; adc eax, [rbp+0x1]; sbb [r8+0x39], cl; ret; 
0x00000000112b21: fidivr st, dword ptr [rip-0x1000]; mov eax, 0x0; cmova eax, edx; ret; 
0x00000000040ab2: fidivr st, dword ptr [rsi]; jmp r10; 
0x00000000109102: fidivr st, word ptr [r11*1-0x49f0f289]; ror byte ptr [rcx+0x63], 0x4; test [rcx+rax-0x20], cl; notrack jmp rax; 
0x00000000109103: fidivr st, word ptr [rbx*1-0x49f0f289]; ror byte ptr [rcx+0x63], 0x4; test [rcx+rax-0x20], cl; notrack jmp rax; 
0x0000000012a05d: fidivr st, word ptr [rdi+0x2000005]; mov rdx, rax; call qword ptr [r13+0x28]; 
0x0000000008cf7f: fidivr st, word ptr [rdi+0x2]; mov eax, r9d; syscall; 
0x00000000101f4f: fild st, dword ptr [r10]; add bh, al; mov al, [0xfffad1e900000001]; call qword ptr [rax-0x5e1f00d]; 
0x000000000544b8: fild st, dword ptr [rax+0xf3a007d]; xchg esp, eax; ret; 
0x00000000076028: fild st, dword ptr [rax]; add [rax+0x39], cl; ret; 
0x000000000c5b72: fild st, dword ptr [rbp+0x29]; fisttp word ptr [rcx+0x29], st; fiadd st, dword ptr [rcx-0x7d]; call far fword ptr [rax]; 
0x0000000006dc9a: fild st, dword ptr [rcx+0x80e2]; add [rbx-0x9bef71d], al; ret; 
0x000000000dc5d9: fild st, dword ptr [rcx+0xf]; ret; 
0x000000000a4f4d: fild st, dword ptr [rcx-0x7d]; ret; 
0x00000000198413: fild st, dword ptr [rcx]; add [rax-0x77], cl; ret; 
0x00000000101f50: fild st, dword ptr [rdx]; add bh, al; mov al, [0xfffad1e900000001]; call qword ptr [rax-0x5e1f00d]; 
0x0000000012da41: fild st, dword ptr [rip+0x158d4800]; add eax, 0x480005db; cmove eax, edx; ret; 
0x0000000004266e: fild st, dword ptr [rip+0x17a0ec]; por xmm0, xmm1; ret; 
0x00000000041d58: fild st, dword ptr [rsp-0x4]; fld st, tbyte ptr [rsp+0x8]; fscale; fstp st(1), st; ret; 
0x000000000d02c2: fild st, qword ptr [rsp-0x10]; fsubp; fstp qword ptr [rsp-0x10], st; movsd xmm0, [rsp-0x10]; ret; 
0x00000000036952: fild st, word ptr [rax-0x80]; call far fword ptr [rax+0x74]; 
0x00000000075131: fild st, word ptr [rax-0x8df43]; call far fword ptr [rax+0x44]; 
0x000000000e8d66: fild st, word ptr [rbx+0x23773bf8]; lea rsi, [rip+0xc7f30]; movsxd rax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x000000000932ed: fild st, word ptr [rcx-0x1]; push rdi; sbb cl, ch; imul edi, 0xffffffff; jmp qword ptr [rsi+0xf]; 
0x000000001945af: fild st, word ptr [rcx-0x73]; ret; 
0x00000000051f5d: fild st, word ptr [rcx]; add [rax], al; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000b1f35: fimul st, dword ptr [rax+0xf]; mov esp, 0xd00148d2; sub rax, rdi; ret; 
0x000000000cf875: fimul st, dword ptr [rax+0xf]; mov esp, 0xd00148d2; sub rax, rdi; shr rax, 0x2; ret; 
0x00000000122004: fimul st, dword ptr [rax+rax]; mov rax, [rax+0x18]; add dword ptr [rax], 0x1; ret; 
0x00000000121ff4: fimul st, dword ptr [rax+rax]; mov rax, [rax+0x18]; add word ptr [rax], 0x1; ret; 
0x0000000011890b: fimul st, dword ptr [rax-0x77]; out dx, eax; mov eax, 0x9; syscall; 
0x0000000006d12e: fimul st, dword ptr [rax-0x77]; ret; 
0x000000000c5d4f: fimul st, dword ptr [rax-0x77]; ror dword ptr [rdi], cl; adc dword ptr [rax+0x1], 0x0; add [rax+0x29], cl; ret far; 
0x000000000c0a9f: fimul st, dword ptr [rax-0x77]; ror dword ptr [rdi], cl; sbb dword ptr [rax+0x1], 0x0; add [rax+0x29], cl; ret far; 
0x000000000416b9: fimul st, dword ptr [rax-0x7d]; ret; 
0x00000000193c4d: fimul st, dword ptr [rbp-0x77]; ret far; 
0x0000000013261b: fimul st, dword ptr [rbx]; add [rdi], cl; add eax, 0xffff7ae9; jmp qword ptr [rsi+0x2e]; 
0x00000000085b58: fimul st, dword ptr [rcx+rcx*4-0x12]; mov rdi, rbp; call qword ptr [r14+0x38]; 
0x00000000084520: fimul st, dword ptr [rcx+rcx*4-0x1a]; call qword ptr [r14+0x38]; 
0x000000001496c1: fimul st, dword ptr [rcx+rcx*4-0x1a]; call qword ptr [rbp+0x40]; 
0x000000000753e3: fimul st, dword ptr [rcx+rcx*4-0x1a]; mov rdi, r15; call qword ptr [rax+0x38]; 
0x00000000075982: fimul st, dword ptr [rcx+rcx*4-0x1a]; mov rdi, r15; call qword ptr [rcx+0x38]; 
0x0000000008e3a5: fimul st, dword ptr [rcx+rcx*4-0x1a]; mov rdi, rbp; call qword ptr [r13+0x38]; 
0x0000000007e850: fimul st, dword ptr [rcx+rcx*4-0x2a]; mov rdi, r12; call qword ptr [rax+0x38]; 
0x00000000153332: fimul st, dword ptr [rcx]; add [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x00000000049e2a: fimul st, word ptr [rax+0xf]; mov esi, 0x83480143; ret; 
0x0000000014e786: fimul st, word ptr [rax-0x77]; out dx, eax; call qword ptr [rax+0x48]; 
0x00000000153d01: fimul st, word ptr [rax-0x77]; out dx, eax; call qword ptr [rax]; 
0x0000000013779b: fimul st, word ptr [rax-0x77]; out dx, eax; call qword ptr [rsp+0x10]; 
0x00000000064855: fimul st, word ptr [rax-0x77]; ret; 
0x00000000066842: fimul st, word ptr [rax-0x7d]; ret; 
0x00000000055b7c: fimul st, word ptr [rbp+0x11]; ret far; 
0x000000000f543c: fimul st, word ptr [rcx+rcx*4+0x5d]; mov eax, 0xfffb73e9; jmp qword ptr [rsi+0x2e]; 
0x0000000007711e: fimul st, word ptr [rcx+rcx*4-0x19]; mov [rbp-0x4e0], r10; call qword ptr [rcx+0x38]; 
0x00000000078130: fimul st, word ptr [rcx+rcx*4-0x19]; mov [rbp-0x4f8], r9d; mov [rbp-0x4f0], r10; call qword ptr [rax+0x38]; 
0x000000000777c8: fimul st, word ptr [rcx+rcx*4-0x19]; mov [rbp-0x500], r9d; mov [rbp-0x4f0], r10; call qword ptr [rbx+0x38]; 
0x00000000078398: fimul st, word ptr [rcx+rcx*4-0x19]; mov [rbp-0x510], r10; mov [rbp-0x508], r11; call qword ptr [rax+0x38]; 
0x0000000009b95a: fimul st, word ptr [rcx+rcx*4-0x3e]; pop rbx; pop rbp; pop r12; jmp rax; 
0x000000000a8811: fimul st, word ptr [rcx+rcx*4-0x40]; ret; 
0x0000000010e064: fimul st, word ptr [rip+0x64d8f700]; mov [rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x000000000de2fc: fist dword ptr [rax], st; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x2]; mov rax, 0xffffffffffffffff; ret; 
0x00000000080f0f: fist dword ptr [rdx], st; add [rax+0x63], cl; adc al, 0x91; add rdx, rcx; notrack jmp rdx; 
0x00000000080eab: fist dword ptr [rdx], st; add [rax+0x63], cl; or al, 0x8f; add rcx, rdi; notrack jmp rcx; 
0x00000000096201: fistp dword ptr [rbp+rdx], st; mov [rax], rdx; ret; 
0x0000000009ae72: fistp qword ptr [rax+0xca], st; syscall; 
0x0000000009093c: fistp qword ptr [rdx+0x1], st; call qword ptr [r14+0x80]; 
0x00000000035e8d: fistp word ptr [rdi+0x1b], st; add [rbx-0xd373], cl; jmp qword ptr [rcx+rcx*4+0x8]; 
0x0000000013b6e4: fisttp dword ptr [rax+0x1], st; ret; 
0x00000000095370: fisttp dword ptr [rax+0x21], st; ret; 
0x000000001942a4: fisttp dword ptr [rax+0x39], st; ret far; 
0x000000000eff94: fisttp dword ptr [rax+0x63], st; add al, 0x9a; add rax, rdx; notrack jmp rax; 
0x00000000196b52: fisttp dword ptr [rax+0x9], st; ror dword ptr [rdi], cl; xchg esp, eax; ret; 
0x00000000056a85: fisttp dword ptr [rax-0x77], st; ret; 
0x00000000121b27: fisttp dword ptr [rax-0x77], st; sbb eax, 0xca831; pop rbx; ret; 
0x00000000121b0d: fisttp dword ptr [rax-0x77], st; sbb eax, 0xca84b; pop rbx; ret; 
0x0000000011c722: fisttp dword ptr [rax-0x7f], st; jrcxz 0x000000000011c727; loop 0x000000000011c728; dec dword ptr [rax-0x7f]; ret; 
0x00000000160ad1: fisttp dword ptr [rax], st; or [rax], eax; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000e661b: fisttp dword ptr [rcx-0x77], st; test byte ptr [rdi], 0x94; ret; 
0x0000000015326a: fisttp dword ptr [rcx], st; add [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x0000000015f01b: fisttp dword ptr [rcx], st; ret; 
0x0000000004a888: fisttp dword ptr [rdi], st; mov dl, dh; add [rax], al; add [rax+0x63], cl; ret far; 
0x0000000004a0dd: fisttp dword ptr [rdi], st; test [rax+rbx-0x7fc00000], ch; jmp qword ptr [rbp+0xf]; 
0x0000000013b4c1: fisttp dword ptr [rdi], st; test [rax], esp; add [rax], eax; add [rax+0x63], cl; ret; 
0x00000000042666: fisttp dword ptr [rip+0x17a104], st; pand xmm0, [rip+0x17a0ec]; por xmm0, xmm1; ret; 
0x00000000113780: fisttp dword ptr [rip-0x80000000], st; mov [rdi], eax; xor eax, eax; ret; 
0x00000000121d32: fisttp qword ptr [rax+rax], st; add word ptr [rdx+rax*2], 0x1; ret; 
0x00000000121d29: fisttp qword ptr [rax+rax], st; jae short 0x0000000000121d3a; mov rdx, [rip+0xcdd23]; add word ptr [rdx+rax*2], 0x1; ret; 
0x0000000009c08a: fisttp qword ptr [rax-0x3f], st; in eax, dx; or [rax-0x7f], ecx; sti; jmp far fword ptr [rcx]; 
0x0000000011a024: fisttp qword ptr [rax-0x77], st; out dx, eax; call r12; 
0x000000001323a1: fisttp qword ptr [rbx], st; add [rcx], al; mov fs:[r8], r9d; add rsp, 0x18; ret; 
0x0000000007d0d7: fisttp qword ptr [rcx-0x3f], st; std; add cl, [rcx+rcx*4-0x16]; call qword ptr [rax+0x38]; 
0x000000000eb560: fisttp qword ptr [rcx-0x77], st; ret; 
0x000000000eb516: fisttp qword ptr [rcx-0x7d], st; ret; 
0x0000000014e084: fisttp qword ptr [rcx], st; add [rbx+rax*4+0x38], ah; add al, 0x75; ret; 
0x0000000010e104: fisttp qword ptr [rip+0x64d8f700], st; mov [rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000088aa2: fisttp word ptr [rax+0x29], st; bnd call qword ptr [rax+0x70]; 
0x00000000090bc8: fisttp word ptr [rax+0x29], st; bnd call qword ptr [rbp+0x70]; 
0x00000000038e4a: fisttp word ptr [rax-0x7d], st; ret; 
0x00000000056b1e: fisttp word ptr [rax], st; add rdx, r8; mov rax, rdx; pop rbx; ret; 
0x000000000c5b75: fisttp word ptr [rcx+0x29], st; fiadd st, dword ptr [rcx-0x7d]; call far fword ptr [rax]; 
0x00000000144d63: fisttp word ptr [rcx+rcx*4-0x17], st; call r10; 
0x00000000041a44: fisttp word ptr [rcx-0x77], st; fsub st(0), st; ret; 
0x0000000016cd5d: fisttp word ptr [rdi], st; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000038021: fisttp word ptr [rdi], st; mov dh, 0x43; add [rax-0x7d], ecx; ret; 
0x000000000c8f3b: fisttp word ptr [rdi], st; xchg ebx, eax; ret; 
0x00000000109085: fisttp word ptr [rsi-0x1576fff6], st; movsxd rax, [rcx+rdx*4]; add rax, rcx; notrack jmp rax; 
0x00000000145182: fisub st, dword ptr [rbp-0xceffff]; call qword ptr [rsp+0x70]; 
0x00000000157652: fisub st, dword ptr [rdx-0x3fce000e]; add rsp, 0x8; ret; 
0x000000000bd7de: fisub st, word ptr [rdi-0x9]; jmp qword ptr [rsi+0xf]; 
0x0000000018ca21: fisubr st, word ptr [rcx]; enter 0xf8c5, 0x77; ret; 
0x000000000427ee: fisubr st, word ptr [rdx*1-0x3b7cb800]; sub [rbx+0x5d], bl; pop r12; pop r13; ret; 
0x00000000053904: fld st, dword ptr [rax+rax]; add [rcx], dh; shr cl, 0xf8; idiv bh; call qword ptr [rax+0x20247c83]; 
0x000000000cf2b3: fld st, dword ptr [rax]; add [rax], al; add rax, rdi; add rax, rcx; ret; 
0x000000000de2e5: fld st, dword ptr [rax]; add [rax], al; syscall; 
0x0000000008bace: fld st, dword ptr [rbp+0x31]; sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; syscall; 
0x000000000c7e41: fld st, dword ptr [rcx+0xf]; xchg ebx, eax; ret; 
0x000000000cf1bc: fld st, dword ptr [rcx+rdi-0x40]; mov eax, 0x1; cmovg r9d, eax; mov eax, r9d; ret; 
0x000000000d23f1: fld st, dword ptr [rdi+0xf]; mov bh, 0x4c; dec byte ptr [rbp-0x77]; ret far; 
0x0000000011aab7: fld st, dword ptr [rdx]; add [rax], al; mov rdi, [r14]; call rbx; 
0x00000000112b18: fld st, qword ptr [rax]; add [rax], al; syscall; 
0x00000000041cbe: fld st, st(0); fstp tbyte ptr [rdi], st; fld st, tbyte ptr [rsp+0x8]; fsubrp; ret; 
0x00000000040fee: fld st, st(3); ret; 
0x000000000d6c94: fld st, tbyte ptr [rcx]; ret; 
0x00000000041e00: fld st, tbyte ptr [rsp+0x8]; fadd st, st(0); ret; 
0x00000000041d5c: fld st, tbyte ptr [rsp+0x8]; fscale; fstp st(1), st; ret; 
0x00000000041cc2: fld st, tbyte ptr [rsp+0x8]; fsubrp; ret; 
0x00000000041bdd: fld st, tbyte ptr [rsp+0x8]; ret; 
0x00000000041d0a: fld st, tbyte ptr [rsp-0x18]; fstp tbyte ptr [rdi], st; fld st, tbyte ptr [rsp+0x8]; ret; 
0x00000000041c4c: fld st, tbyte ptr [rsp-0x18]; ret; 
0x000000001456e3: fld1; out dx, al; jmp qword ptr [rsi+0xf]; 
0x000000000ce2b9: fldenv [rsi+0xf]; jbe short 0x00000000000ce30d; xor [rsi+0xf], ah; xlat [rbx]; ret; 
0x000000000ac0c9: fldenv [rsi+0xf]; je short 0x00000000000ac11d; xor [rsi+0xf], ah; xlat [rbx]; ret; 
0x000000000ac3b7: fldenv [rsi+0xf]; je short 0x00000000000ac40b; xor [rsi+0xf], ah; xlat [rbx]; ret; 
0x000000000abfc1: fldenv [rsi+0xf]; xlat [rbx]; ret; 
0x000000001549d1: fldlg2; jmp qword ptr [rsi+0x66]; 
0x000000001449eb: fldln2; jmp qword ptr [rsp+rax*2-0x77]; 
0x000000000ee244: fldpi; leave; nop [rax+rax]; ret; 
0x00000000055be4: fmul st, dword ptr [rax+0x11]; rcr byte ptr [rbp+0x5b], 0x1; ret; 
0x0000000004f6d8: fmul st, dword ptr [rax-0x39]; ret; 
0x0000000008a28e: fmul st, dword ptr [rax-0x77]; ret; 
0x00000000127849: fmul st, dword ptr [rax-0x77]; ror byte ptr [rcx+0x2b], 0x1; cmp [r8+0x39], r9b; ret; 
0x000000000e8176: fmul st, dword ptr [rax-0x7d]; ret; 
0x00000000158831: fmul st, dword ptr [rax-0x9]; fadd st, dword ptr [rbx+0x14807e0]; ret; 
0x0000000006bf31: fmul st, dword ptr [rbx+0xf660446]; insb [rdi], dx; ret; 
0x0000000011cc7c: fmul st, dword ptr [rcx+rcx*4-0x40]; pop rbx; ret; 
0x0000000004228c: fmul st, dword ptr [rcx]; enter 0xf8c1, 0x1f; not eax; and eax, edx; ret; 
0x00000000077243: fmul st, dword ptr [rdi]; or dword ptr [rdi+rdi*8], 0xffffffff; jmp qword ptr [rsi+0xf]; 
0x0000000008f9dd: fmul st, dword ptr [rdi]; sub dword ptr [rax+rax-0x76b80000], 0xffffffef; call qword ptr [r13+0x20]; 
0x00000000074e48: fmul st, dword ptr [rdi]; test [rcx+rcx-0x7cbf0000], ch; in al, dx; add [rax-0x8ff43], eax; jmp qword ptr [rax]; 
0x000000000c859a: fmul st, dword ptr [rdi]; xchg ebx, eax; ret; 
0x0000000010e5b8: fmul st, dword ptr [rip+0x64d8f700]; mov [rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000ea01a: fmul st, qword ptr [rax-0x77]; ret far; 
0x00000000066650: fmul st, qword ptr [rax-0x77]; ret; 
0x0000000010eb14: fmul st, qword ptr [rax-0x77]; std; mov rdi, rbp; mov eax, 0x4f; syscall; 
0x000000000de803: fmul st, qword ptr [rax-0x7d]; ret; 
0x00000000132486: fmul st, qword ptr [rbx]; add [rcx], al; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x00000000132485: fmul st, qword ptr [rbx]; add [rcx], al; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x000000001323c9: fmul st, qword ptr [rbx]; add al, ch; jmp qword ptr [rcx]; 
0x000000001531b2: fmul st, qword ptr [rcx]; add [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x000000000eb2cf: fmul st, qword ptr [rdi]; mov dh, 0x43; add [rax-0x7d], ecx; ret; 
0x0000000010e17c: fmul st, qword ptr [rip+0x64d8f700]; mov [rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000160cb9: fndisi; or [rax], al; xor eax, eax; mov [rip+0x8e1ca], rsi; ret; 
0x00000000198a8e: fnsave [rbp-0x11]; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000000cf19b: fnstcw [rcx]; sar dword ptr [rax+0x1], 0x44; cmovl ecx, eax; mov eax, r9d; ret; 
0x00000000041e53: fnstcw [rdx+0xa]; jne short 0x0000000000041e60; fadd st, st(0); add rsp, 0x8; ret; 
0x00000000165dc0: fnstcw [rsi]; jmp r9; 
0x0000000018d487: fnstcw [rsi]; jmp rcx; 
0x00000000084467: fnstsw [rdx+0x16]; add [rax-0x77], cl; ret; 
0x00000000041e1a: fnstsw ax; fstp st(0), st; and eax, 0x200; ret; 
0x000000000c4be1: fprem1; dec dword ptr [rbp-0x7cbe00bd]; call far fword ptr [rax]; 
0x0000000012e81b: fscale; call qword ptr [rax-0x18]; 
0x00000000041d60: fscale; fstp st(1), st; ret; 
0x000000001520f4: fscale; jmp qword ptr [rsi+0xf]; 
0x0000000009e554: fst dword ptr [rax+rax], st; call qword ptr [rax]; 
0x000000000e2d93: fst dword ptr [rax-0x2708fff0], st; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000e1b8b: fst dword ptr [rax], st; add [rcx], al; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x0000000006e0fa: fst qword ptr [rdi], st; add [rbx-0x51f4b], cl; jmp qword ptr [rcx+rcx*4+0x30]; 
0x00000000141a2e: fstp dword ptr [rbx+0x5d], st; pop r12; pop r13; pop r14; ret; 
0x000000000a2256: fstp dword ptr [rbx+0x5d], st; pop r12; ret; 
0x00000000126452: fstp dword ptr [rcx+0x6401000c], st; mov [r8], r9d; add rsp, 0x8; ret; 
0x0000000012cfbd: fstp qword ptr [rbx-0x48], st; add eax, 0x41000000; pop rsp; pop rbp; ret; 
0x000000000787df: fstp qword ptr [rcx+0x13], st; add [rax+0x63], cl; add al, 0x90; add rax, rbx; jmp rax; 
0x00000000054747: fstp qword ptr [rdi-0x3eb7ffe7], st; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x000000000d02c8: fstp qword ptr [rsp-0x10], st; movsd xmm0, [rsp-0x10]; ret; 
0x00000000041e1c: fstp st(0), st; and eax, 0x200; ret; 
0x00000000041d62: fstp st(1), st; ret; 
0x000000000b74b1: fstp tbyte ptr [rdi+rcx], st; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000041cc0: fstp tbyte ptr [rdi], st; fld st, tbyte ptr [rsp+0x8]; fsubrp; ret; 
0x00000000041d0e: fstp tbyte ptr [rdi], st; fld st, tbyte ptr [rsp+0x8]; ret; 
0x00000000041c4a: fstp tbyte ptr [rdi], st; fld st, tbyte ptr [rsp-0x18]; ret; 
0x0000000018384c: fstp tbyte ptr [rdx], st; movsxd rcx, ecx; add rax, rcx; sub rax, rdi; ret; 
0x00000000041dc4: fstp tbyte ptr [rsp-0x18], st; mov [rsp-0x10], ax; fld st, tbyte ptr [rsp-0x18]; ret; 
0x00000000041a47: fsub st(0), st; ret; 
0x000000000a91af: fsub st(1), st; imul edi, 0xffffffff; jmp qword ptr [rsi+0x66]; 
0x0000000004341c: fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x00000000043458: fsub st, dword ptr [rcx+rcx*4+0x2]; mov eax, 0xffffffff; ret; 
0x000000000482b8: fsub st, dword ptr [rcx+rcx*4+0x2]; mov rax, 0xffffffffffffffff; ret; 
0x000000001142e0: fsub st, dword ptr [rcx+rcx*4+0x2]; mov rax, [rip+0xd7bdd]; mov qword ptr [rax], 0xffffffffffffffff; xor eax, eax; ret; 
0x00000000041e1d: fsub st, dword ptr [rip+0x200]; ret; 
0x00000000063def: fsub st, dword ptr [rsi+0xf]; insb [rdi], dx; ret; 
0x000000000b25e4: fsub st, dword ptr [rsi+0xf]; xlat [rbx]; ret; 
0x000000000606c3: fsub st, qword ptr [rdx]; cld; jmp qword ptr [rsi+0xf]; 
0x000000000b166c: fsub st, qword ptr [rsi+0xf]; xlat [rbx]; ret; 
0x0000000016fa24: fsub st, st(5); add al, 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000015da9b: fsubp st(0), st; call far fword ptr [rbx-0x5]; 
0x0000000013fb3f: fsubp st(0), st; ret far; 
0x0000000015599b: fsubp st(0), st; scasd [rdi]; ret far; 
0x000000000d02c6: fsubp; fstp qword ptr [rsp-0x10], st; movsd xmm0, [rsp-0x10]; ret; 
0x000000001169e2: fsubp; ret far; 
0x000000001842f3: fsubr st, qword ptr [rcx]; enter 0xf8c5, 0x77; ret; 
0x000000001496bf: fsubr st, qword ptr [rcx]; fimul st, dword ptr [rcx+rcx*4-0x1a]; call qword ptr [rbp+0x40]; 
0x00000000041cc6: fsubrp; ret; 
0x0000000012ac88: fucomi st, st(0); bnd ret; 
0x0000000015e85e: fucomi st, st(0); cmp al, 0x12; std; jmp qword ptr [rsi+0x2e]; 
0x00000000127eac: fucomi st, st(1); cmp ebp, 0xffffffff; jmp qword ptr [rsi+0xf]; 
0x000000000ef7f3: fucomi st, st(1); ret; 
0x0000000011cd3d: fucomi st, st(3); or al, 0x8d; add [r8-0x7d], ecx; ret; 
0x000000001179c7: fucomip st, st(0); add edi, [rsi-0x1]; inc dword ptr [rbp-0x7cc08b40]; ret; 
0x00000000138406: fucomip st, st(0); push rsp; jae short 0x000000000013840d; add [rcx+rcx*4-0x19], cl; call rbx; 
0x0000000004ed1f: fucomip st, st(0); ret far; 
0x000000000361b4: fucomip st, st(0); ret; 
0x00000000124747: fucomip st, st(0); ret; 
0x0000000012433d: fucomip st, st(7); jmp qword ptr [rbp+rax*2-0x77]; 
0x00000000063651: fwait; adc al, 0x0; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x00000000023e85: fwait; mov eax, 0x63480018; add al, 0x82; add rax, rdx; notrack jmp rax; 
0x00000000115b14: fwait; or eax, 0x1b800; add [rax], al; add rsp, 0x8; ret; 
0x0000000014e45f: fwait; out dx, eax; jmp qword ptr [rbx+rcx*4+0x4]; 
0x000000000240d9: fwait; rcr dword ptr [rax+rax], cl; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000054bc6: fwait; sbb [rax], eax; syscall; 
0x000000000e8b51: fwait; sbb ecx, [rip-0x4b991800]; hlt; jmp qword ptr [rsi+0xf]; 
0x00000000155eb1: fwait; std; jmp qword ptr [rsi+0x66]; 
0x00000000041e18: fxam; fnstsw ax; fstp st(0), st; and eax, 0x200; ret; 
0x000000000a1cf3: fyl2xp1; add [rax], al; cmove rax, rdx; ret; 
0x0000000006c324: hint-not-taken ja 0x000000000006c020; lea rcx, [rip+0x14191e]; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x00000000080ea4: hint-not-taken ja short 0x0000000000080ed0; lea rdi, [rip+0x12db5a]; movsxd rcx, [rdi+rcx*4]; add rcx, rdi; notrack jmp rcx; 
0x000000000ec469: hint-not-taken je short 0x00000000000ec4b0; mov byte ptr [rdi+0x8], 0x1; mov eax, 0x1; mov byte ptr [rdi], 0x5b; ret; 
0x000000000dfeab: hlt; adc [rax], al; syscall; 
0x00000000182409: hlt; adc al, [rax]; add [rbp-0x77], cl; ret far; 
0x00000000183309: hlt; add eax, [rax]; add [rbp-0x77], cl; ret far; 
0x0000000011923b: hlt; call far fword ptr [rax+0x4c]; 
0x000000001168b8: hlt; call far fword ptr [rdx+0x59]; 
0x0000000011931b: hlt; call far fword ptr [rdx+0x5e]; 
0x0000000011579d: hlt; call qword ptr [rax-0x36fa74b8]; 
0x0000000011571d: hlt; call qword ptr [rax-0x5e1f00d]; 
0x0000000016061e: hlt; cld; jmp qword ptr [rsi+0x2e]; 
0x0000000013fef1: hlt; cmc; dec dword ptr [rax-0x77]; ret; 
0x000000001929d1: hlt; cmp eax, [rsi-0xc]; jne 0x0000000000192af0; ret; 
0x000000000a8873: hlt; cmp ecx, esi; je short 0x00000000000a8868; ret; 
0x000000000d4448: hlt; dec dword ptr [rax-0x77]; ret; 
0x00000000118cf6: hlt; dec dword ptr [rcx+rcx*4-0x20]; pop r12; ret; 
0x0000000011520c: hlt; idiv edi; mov eax, [rsp+0xc]; add rsp, 0x18; ret; 
0x0000000014310f: hlt; in eax, dx; jmp qword ptr [rsi+0xf]; 
0x0000000016715c: hlt; jb short 0x0000000000167167; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016720c: hlt; jb short 0x0000000000167217; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000169b3c: hlt; jb short 0x0000000000169b47; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000169bec: hlt; jb short 0x0000000000169bf7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000000cb84a: hlt; jle short 0x00000000000cb842; jmp qword ptr [rsi-0x70]; 
0x000000000e13ce: hlt; jmp qword ptr [rbp+rax*2-0x77]; 
0x000000000dea30: hlt; jmp qword ptr [rsi+0x2e]; 
0x000000000ddc1f: hlt; jmp qword ptr [rsi+0xf]; 
0x000000001929d4: hlt; jne 0x0000000000192af0; ret; 
0x00000000102a6d: hlt; jne short 0x0000000000102a60; mov eax, [rdx+0x8]; ret; 
0x000000000422e8: hlt; jo short 0x0000000000042301; add [rdi], cl; push rsp; ret; 
0x000000000a8ab2: hlt; mov [rax+0x4], dl; ret; 
0x000000000a8b8a: hlt; mov [rdi+0x4], al; lea rax, [rdi+rdx-0x1]; ret; 
0x000000000a89ed: hlt; mov [rdi+0x4], dl; ret; 
0x0000000016d19a: hlt; mov [rdi-0x4], ecx; ret; 
0x00000000167e1d: hlt; mov [rdi-0x4], edx; ret; 
0x0000000016d193: hlt; mov ecx, [rsi-0x4]; mov [rdi-0xc], rdx; mov [rdi-0x4], ecx; ret; 
0x000000000e316e: hlt; mov edi, edx; mov eax, r8d; syscall; 
0x00000000167f92: hlt; mov edx, [rsi-0x4]; mov [rdi-0xc], rcx; mov [rdi-0x4], edx; ret; 
0x00000000183aab: hlt; movsxd rcx, ecx; add rax, rcx; sub rax, rdi; ret; 
0x00000000191fe2: hlt; movzx edx, byte ptr [rsi-0xc]; sub eax, edx; ret; 
0x00000000130ab7: hlt; or eax, [rax]; syscall; 
0x00000000070674: hlt; ret far; 
0x000000000a883b: hlt; ret; 
0x00000000035760: hlt; sbb dword ptr [rbx], 0x0; syscall; 
0x000000000837de: hlt; stc; jmp qword ptr [rsi+0x2e]; 
0x00000000191fe7: hlt; sub eax, edx; ret; 
0x0000000005390c: idiv bh; call qword ptr [rax+0x20247c83]; 
0x000000000e97cc: idiv bh; call qword ptr [rax+0x247c8b44]; 
0x0000000019496c: idiv bh; call qword ptr [rax+0x48c78948]; 
0x000000001963ac: idiv bh; call qword ptr [rax+0x49f88948]; 
0x000000000db1ac: idiv bh; call qword ptr [rax+0x4cc50149]; 
0x00000000078b2c: idiv bh; call qword ptr [rax+0x709d894c]; 
0x00000000074ea3: idiv bh; call qword ptr [rax]; 
0x000000000d36b7: idiv bh; dec dword ptr [rax-0x7d]; ret; 
0x0000000007b9e0: idiv bh; dec dword ptr [rbp+0x63]; ret; 
0x0000000007c094: idiv bh; dec dword ptr [rbx+rcx*4-0x5b]; clc; idiv bh; jmp qword ptr [rsi-0x70]; 
0x000000000eb47b: idiv bh; dec dword ptr [rcx-0x16ebdbbc]; xchg ecx, eax; idiv bh; jmp qword ptr [rsi+0xf]; 
0x00000000148ab4: idiv bh; inc dword ptr [rbp+0x481d74c0]; mov eax, [rbx+0x23b8]; mov rdi, r12; call qword ptr [rax+0x20]; 
0x0000000007c15a: idiv bh; inc dword ptr [rcx]; ret far; 
0x000000000760ad: idiv bh; inc edi; test eax, edi; idiv bh; call qword ptr [rax]; 
0x0000000007a80d: idiv bh; inc esi; test esp, eax; idiv bh; jmp qword ptr [rax]; 
0x0000000007a813: idiv bh; jmp qword ptr [rax]; 
0x0000000003d933: idiv bh; jmp qword ptr [rsi+0x2e]; 
0x000000000960a0: idiv bh; jmp qword ptr [rsi+0x66]; 
0x00000000037247: idiv bh; jmp qword ptr [rsi+0xf]; 
0x0000000012ed3e: idiv bh; jmp qword ptr [rsi+0xf]; 
0x0000000013ff5e: idiv bh; jmp qword ptr [rsi+0xf]; 
0x0000000007c09b: idiv bh; jmp qword ptr [rsi-0x70]; 
0x00000000116380: idiv bh; mov eax, 0x1; add rsp, 0x8; ret; 
0x00000000116c49: idiv byte ptr [rax+0x118]; syscall; 
0x00000000036286: idiv byte ptr [rax+0x1b]; add [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x00000000090883: idiv byte ptr [rcx+0x3]; mov edx, 0x1; mov rdi, rbx; call qword ptr [r12+0x48]; 
0x000000000e2f62: idiv byte ptr [rdi+0x1200011]; mov eax, 0x38; syscall; 
0x00000000033e81: idiv byte ptr [rdi+0x1]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000128f43: idiv byte ptr [rdi+0x2000003]; mov rdx, rax; call qword ptr [rbx+0x28]; 
0x00000000127d21: idiv byte ptr [rdi+0x2000004]; call rax; 
0x0000000010c9c7: idiv byte ptr [rdi+0x2]; mov eax, 0xe; syscall; 
0x00000000089740: idiv byte ptr [rdx+0x1]; mov rdi, r15; call qword ptr [rbp+0x80]; 
0x0000000008ed08: idiv byte ptr [rdx+0x1]; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x0000000008954a: idiv byte ptr [rdx+0x2]; mov rdi, r15; call qword ptr [r13+0x80]; 
0x00000000082256: idiv byte ptr [rdx+0x2]; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x0000000009009b: idiv byte ptr [rdx+0x2]; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x0000000002722a: idiv byte ptr [rdx-0x1]; cmovs eax, edx; ret; 
0x0000000013e8b6: idiv byte ptr [rdx]; out dx, al; dec dword ptr [rax-0x77]; ret; 
0x0000000006053e: idiv dil; jmp qword ptr [rsi+0xf]; 
0x0000000004695e: idiv dword ptr [rax+0xca]; syscall; 
0x00000000150370: idiv ebp; jmp qword ptr [rsi+0x66]; 
0x0000000007485c: idiv ebx; call qword ptr [rax-0x3f7c3977]; 
0x000000000834f7: idiv ecx; jmp qword ptr [rsi+0xf]; 
0x000000000a8e50: idiv edi; add rsp, 0x8; ret; 
0x00000000075135: idiv edi; call far fword ptr [rax+0x44]; 
0x00000000195f0c: idiv edi; call qword ptr [rax+0x48c93145]; 
0x00000000195edc: idiv edi; call qword ptr [rax+0x49c04a8d]; 
0x00000000073ebc: idiv edi; call qword ptr [rax+0x688d8b48]; 
0x0000000012ebdc: idiv edi; call qword ptr [rax-0x3c0776b8]; 
0x0000000014238c: idiv edi; call qword ptr [rax-0x5e1f00d]; 
0x000000000788ec: idiv edi; call qword ptr [rax-0x77cf879]; 
0x000000000d8b45: idiv edi; dec dword ptr [rax+0x1]; ret; 
0x0000000007af0c: idiv edi; dec dword ptr [rax-0x77]; ret far; 
0x0000000007a4cd: idiv edi; dec dword ptr [rax-0x77]; test [rax], ebp; idiv edi; jmp qword ptr [rax+rcx*2-0x75]; 
0x00000000073e28: idiv edi; dec dword ptr [rax-0x77]; test [rax], edi; idiv edi; jmp qword ptr [rax+rcx*2-0x75]; 
0x00000000075cf5: idiv edi; dec dword ptr [rax-0x7d]; clc; dec dword ptr [rax-0x77]; ret; 
0x0000000007a941: idiv edi; dec dword ptr [rcx+rcx*4-0x36]; mov rsi, r12; mov rdi, r13; call qword ptr [rax+0x38]; 
0x0000000007bbc1: idiv edi; dec dword ptr [rcx+rcx*4-0x3e]; mov rsi, r12; mov rdi, r13; call qword ptr [r15+0x38]; 
0x00000000075371: idiv edi; inc dword ptr [rax]; add [rax], al; add [rax-0x77], cl; ret; 
0x00000000074fa2: idiv edi; inc dword ptr [rbp-0x7b]; in al, 0xf; lahf; ret; 
0x000000001215b3: idiv edi; inc dword ptr [rcx+rcx*4-0x10]; syscall; 
0x00000000075b7d: idiv edi; inc dword ptr [rcx-0x1]; push rsp; ret; 
0x00000000074f7f: idiv edi; inc dword ptr [rcx]; ret; 
0x0000000007592c: idiv edi; jmp far fword ptr [rcx]; 
0x00000000073e2f: idiv edi; jmp qword ptr [rax+rcx*2-0x75]; 
0x00000000074e11: idiv edi; jmp qword ptr [rax]; 
0x0000000012132d: idiv edi; jmp qword ptr [rdi+0x6d]; 
0x000000000467c3: idiv edi; jmp qword ptr [rsi+0x2e]; 
0x000000001097b2: idiv edi; jmp qword ptr [rsi+0x2e]; 
0x000000000ced3e: idiv edi; jmp qword ptr [rsi+0x66]; 
0x0000000003718f: idiv edi; jmp qword ptr [rsi+0xf]; 
0x00000000039c8e: idiv edi; jmp qword ptr [rsi+0xf]; 
0x000000000bffdb: idiv edi; jmp qword ptr [rsi-0x70]; 
0x00000000076158: idiv edi; jmp qword ptr [rsi-0x77]; 
0x00000000115ac1: idiv edi; mov eax, 0x1; add rsp, 0x8; ret; 
0x00000000120b72: idiv edi; mov eax, [rsp+0x18]; add rsp, 0x28; ret; 
0x0000000011f2d7: idiv edi; mov eax, [rsp+0x4]; add rsp, 0x20; pop rbp; ret; 
0x00000000120c2a: idiv edi; mov eax, [rsp+0x4]; add rsp, 0x28; ret; 
0x0000000011f77d: idiv edi; mov eax, [rsp+0x8]; add rsp, 0x18; ret; 
0x00000000118a61: idiv edi; mov eax, [rsp+0x8]; add rsp, 0x28; ret; 
0x0000000011520d: idiv edi; mov eax, [rsp+0xc]; add rsp, 0x18; ret; 
0x000000001152cc: idiv edi; mov eax, [rsp+0xc]; add rsp, 0x18; ret; 
0x0000000011f4b0: idiv edi; mov eax, [rsp+0xc]; add rsp, 0x28; ret; 
0x0000000011500d: idiv edi; mov eax, [rsp+0xc]; add rsp, 0x38; ret; 
0x000000001151eb: idiv edi; mov edi, [rsp+0xc]; mov r8d, eax; mov eax, 0x4a; syscall; 
0x000000001152ab: idiv edi; mov edi, [rsp+0xc]; mov r8d, eax; mov eax, 0x4b; syscall; 
0x000000001152aa: idiv edi; mov edi, [rsp+0xc]; mov r8d, eax; mov eax, 0x4b; syscall; 
0x00000000117366: idiv edi; mov r8d, 0x1; mov eax, r8d; add rsp, 0x8; ret; 
0x0000000011f561: idiv edi; mov rax, [rsp+0x8]; add rsp, 0x28; ret; 
0x0000000011f6d5: idiv edi; mov rax, [rsp+0x8]; add rsp, 0x30; pop rbp; ret; 
0x00000000120ffe: idiv edi; mov rax, [rsp+0x8]; add rsp, 0x38; ret; 
0x00000000120ffd: idiv edi; mov rax, [rsp+0x8]; add rsp, 0x38; ret; 
0x0000000012039c: idiv edi; mov rax, [rsp]; add rsp, 0x20; pop rbp; ret; 
0x0000000011467a: idiv edi; mov rax, [rsp]; add rsp, 0x28; ret; 
0x00000000120462: idiv edi; mov rax, [rsp]; add rsp, 0x30; pop rbp; ret; 
0x00000000047357: idiv esi; mov edi, edx; shl rdi, 0x20; or rax, rdi; ret; 
0x0000000004737a: idiv esi; ret; 
0x000000000f157a: idiv r15; jmp qword ptr [rsi-0x70]; 
0x0000000011f6d4: idiv r15; mov rax, [rsp+0x8]; add rsp, 0x30; pop rbp; ret; 
0x00000000120150: idiv r15d; mov eax, [rsp+0xc]; add rsp, 0x28; ret; 
0x000000001204ff: idiv r15d; mov rax, [rsp+0x8]; add rsp, 0x28; ret; 
0x00000000075b7c: idiv rdi; inc dword ptr [rcx-0x1]; push rsp; ret; 
0x0000000007a562: idiv rdi; jmp qword ptr [rsi+0x2e]; 
0x0000000011f77c: idiv rdi; mov eax, [rsp+0x8]; add rsp, 0x18; ret; 
0x00000000047379: idiv rsi; ret; 
0x000000000445ee: imul al; fadd st, qword ptr [rax+rax]; add rsp, 0x8; ret; 
0x0000000002465b: imul al; syscall; 
0x000000000b83ea: imul byte ptr [rsi+0xf]; add [rcx+0x63], cl; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000c05cc: imul cl; ret; 
0x00000000115759: imul cl; shl r12d, cl; call qword ptr [rax-0x5e1f00d]; 
0x0000000002d693: imul eax, [rax], 0xd8d4800; ret; 
0x000000000de1c5: imul eax, [rcx+rax], 0x48; add esp, 0x8; pop rbx; pop rbp; ret; 
0x000000000de26c: imul eax, [rcx+rax], 0x5b; pop rbp; pop r12; ret; 
0x000000000abd57: imul eax, [rcx], 0x894d0000; ret far; 
0x000000000d23e4: imul eax, [rdi], 0x0; add [rdi+rcx-0x49], al; ret far; 
0x000000000d6b84: imul eax, [rdi], 0x0; add [rdi], cl; ret; 
0x000000000ab757: imul eax, [rdi], 0x894d0000; ret far; 
0x000000000a0511: imul eax, [rdx-0x72b7fff4], 0x15; add al, 0xd9; or al, 0x0; cmovne rax, rdx; ret; 
0x00000000166df8: imul eax, [rip+0x14634900], 0x148d4993; adc edi, [rsi]; jmp rdx; 
0x00000000166bf6: imul eax, [rip+0x14634900], 0xffffff93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000018fd2e: imul eax, [rip+0x487c5162], 0x62067111; push rcx; jl short 0x000000000018fd83; adc [rcx+0x7], edi; ret; 
0x0000000011b355: imul eax, [rip-0x76b40000], 0x49082444; mov edi, [rax]; call rbx; 
0x00000000107a03: imul eax, [rsi+rcx], 0xffffffba; jmp qword ptr [rbx+rax*4+0x38]; 
0x0000000011b19d: imul eax, [rsi], 0x894c0000; and al, 0x8; mov rdi, [r8]; call rbx; 
0x00000000044831: imul eax, edi; lea r12, [rcx+rax]; mov r13, rax; mov rdi, r12; call rbx; 
0x00000000192b76: imul eax, edi; shr rax, 0x38; ret; 
0x0000000012600a: imul eax; and bl, al; out dx, eax; jmp qword ptr [rbp+rax*2-0x77]; 
0x0000000014d67b: imul eax; call qword ptr [rdx-0x4]; 
0x000000000e88d1: imul eax; cmp [rdx-0x76b7000d], ebx; ret; 
0x0000000003cd4c: imul eax; ficom st, word ptr [rbp-0x2]; jmp qword ptr [rsi+0xf]; 
0x00000000031d67: imul eax; ret; 
0x000000000ddb2f: imul eax; sub ecx, [rcx-0xc]; dec dword ptr [rax-0x77]; ret; 
0x000000000f1b93: imul eax; xchg edi, eax; ret; 
0x000000001578c1: imul ebp, [rax], 0x5b; pop rbp; pop r12; ret; 
0x000000000b8375: imul ebp, [rdi+0xf], 0x0; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000142be5: imul ebp; jmp qword ptr [rsi+0xf]; 
0x00000000026f70: imul ebx, [rax+rax], 0x11c8c148; xor rax, fs:[0x30]; jmp rax; 
0x00000000026f8b: imul ebx, [rax+rax], 0x674c085; ret; 
0x00000000127ac4: imul ebx, [rax], 0x48; add esp, 0x8; pop rbx; pop rbp; ret; 
0x000000000478e3: imul ebx, [rdx], 0x0; syscall; 
0x0000000010e103: imul ebx, ebp, 0xd8f7000d; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x000000001531b1: imul ebx, esp, 0x9; add [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x00000000116f00: imul ecx, [rax+0x4c23000d], 0xffffff89; rol dh, 0x46; inc dword ptr [rax]; ret; 
0x0000000014ff6a: imul ecx, [rax+0xf], 0xffffffcd; call qword ptr [rax+0x18]; 
0x00000000081a6b: imul ecx, [rax-0x7f], 0xe8c4; add [rcx+rcx*4-0x40], al; pop rbx; pop rbp; ret; 
0x00000000127a24: imul ecx, [rax], 0x48; add esp, 0x8; pop rbx; pop rbp; ret; 
0x000000001651e7: imul ecx, [rbx], 0x894d0000; ret far; 
0x00000000089704: imul ecx, [rcx+0x2b], 0x47; and [rax+0x1], cl; ret; 
0x0000000017f227: imul ecx, [rcx], 0x894d0000; ret far; 
0x000000000d3236: imul ecx, [rdi], 0xfffd1685; jmp qword ptr [rsi-0x7f]; 
0x000000000ab457: imul ecx, [rdx], 0x894d0000; ret far; 
0x00000000118cb2: imul ecx, [rip+0x2f6e800], 0x0; add [rax-0x73], cl; add eax, 0xd6baf; add rsp, 0x8; ret; 
0x000000001152e4: imul ecx, [rip+0x64d8f700], 0xffffff89; add bh, [rax-0x1]; ret; 
0x00000000118cbe: imul ecx, [rip-0x3b7cb800], 0x8; ret; 
0x000000000e845c: imul edi, 0xffffffff; dec dword ptr [rax-0x73]; add bl, [r11+0x5d]; pop r12; ret; 
0x0000000015f2f9: imul edi, 0xffffffff; dec dword ptr [rcx+0x49082444]; lea edi, [rsp+0x930]; call qword ptr [r12+0xf10]; 
0x000000000f5bd9: imul edi, 0xffffffff; inc dword ptr [rbx-0x7bf0f71e]; imul edi, 0xffffffff; jmp far fword ptr [rax+0x63840f01]; 
0x000000000f5be2: imul edi, 0xffffffff; jmp far fword ptr [rax+0x63840f01]; 
0x0000000012582a: imul edi, 0xffffffff; jmp qword ptr [rbx+rcx*4+0x4]; 
0x000000000c7512: imul edi, 0xffffffff; jmp qword ptr [rsi+0x2e]; 
0x000000000a91b1: imul edi, 0xffffffff; jmp qword ptr [rsi+0x66]; 
0x000000000932f3: imul edi, 0xffffffff; jmp qword ptr [rsi+0xf]; 
0x00000000096746: imul edi, ebp, 0x3145ffff; sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000018fbc7: imul edi, ebp, 0x487c5162; adc [rcx-0x2], esi; vmovups [r9-0x40], zmm15; ret; 
0x0000000018f98d: imul edi, ebp, 0x487cd162; adc [rcx-0x2], esi; vmovups [r9-0x40], zmm7; ret; 
0x0000000009cb5b: imul edi, ebp, 0xffffffff; call qword ptr [rax-0x5e1f00d]; 
0x000000000f128e: imul edi, ebp, 0xffffffff; dec dword ptr [rbp-0x75]; adc cl, al; call far fword ptr [rax]; 
0x0000000012cd62: imul edi, ebx, 0xffffffff; jmp qword ptr [rsi+0x2e]; 
0x0000000004466b: imul edi, ebx; add r15, [rsp]; mov rsi, r15; call r14; 
0x0000000011c503: imul edi, ecx, 0xd8f7000c; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000088f8d: imul edi, edx, 0x3145ffff; sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; syscall; 
0x000000000f53ea: imul edi, edx, 0xffffffff; jmp qword ptr [rsi-0x70]; 
0x0000000013f3fe: imul edi, esi, 0xffffffff; jmp qword ptr [rsi+0xf]; 
0x0000000010c203: imul edi, esp, 0xd8f7000d; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000149b29: imul edx, [rax-0x7d], 0xffffffe0; add ecx, [rbx-0x74b7b7ad]; cmp ecx, [rax+0x1]; vcmppd xmm9, xmm10, [rax-0x77], 0xee; call qword ptr [rbx+0x40]; 
0x00000000127a74: imul edx, [rax], 0x48; add esp, 0x8; pop rbx; pop rbp; ret; 
0x000000000aae57: imul edx, [rax], 0x894d0000; ret far; 
0x000000000aab57: imul edx, [rbx], 0x894d0000; ret far; 
0x00000000151bb1: imul edx, [rdx+0x2beffff], 0x0; add [rax], al; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x000000000ca667: imul edx, [rdx], 0x0; syscall; 
0x000000000aa857: imul edx, [rsi], 0x894d0000; ret far; 
0x00000000094301: imul edx, eax, 0x15; add [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; jmp rax; 
0x0000000013c731: imul esi, [rbx], 0xffffffff; jmp qword ptr [rsi+0x66]; 
0x0000000006e654: imul esi, edx, 0xffffffff; inc dword ptr [rcx-0x9]; ret; 
0x0000000010da03: imul esp, 0xd8f7000d; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000093499: imul esp, [rax+0x5b], 0x5d; pop r12; ret; 
0x000000000a8a53: imul esp, [rax+rdx], 0x6348d289; adc al, 0x97; add rdx, rdi; notrack jmp rdx; 
0x000000000951cc: imul esp, [rbx*2+0x10438941], 0x41; mov dword ptr [rbx+0x14], 0x0; ret; 
0x00000000172c74: imul esp, [rbx], 0x894d0000; ret far; 
0x000000000c40a1: imul esp, [rbx], 0xfffffff9; dec dword ptr [rax-0x7d]; ret; 
0x0000000011ee9a: imul esp, edi, 0xffffffff; jmp qword ptr [rsi-0x70]; 
0x000000000ca666: imul r10d, [rdx], 0x0; syscall; 
0x0000000004466a: imul r15, rbx; add r15, [rsp]; mov rsi, r15; call r14; 
0x00000000044830: imul rax, rdi; lea r12, [rcx+rax]; mov r13, rax; mov rdi, r12; call rbx; 
0x00000000192b75: imul rax, rdi; shr rax, 0x38; ret; 
0x00000000142be4: imul rbp; jmp qword ptr [rsi+0xf]; 
0x00000000192a08: in al, 0x0; add [rax], al; ret; 
0x000000000dd11e: in al, 0x0; add [rax], al; syscall; 
0x00000000029a7f: in al, 0x29; ret; 
0x0000000018f1f2: in al, 0x2; add [rcx+0x63], cl; or al, 0x93; add rcx, r11; notrack jmp rcx; 
0x0000000013f008: in al, 0x44; mov eax, edx; ret; 
0x000000001490d6: in al, 0x48; lea esi, [rsp+0x8]; call qword ptr [rax]; 
0x00000000064621: in al, 0x4a; movsxd eax, [rdi]; add rax, rdi; notrack jmp rax; 
0x00000000167e16: in al, 0x4c; mov [rdi-0x14], ebx; mov [rdi-0xc], rcx; mov [rdi-0x4], edx; ret; 
0x000000000d00a2: in al, 0x4c; mov eax, esp; pop r12; ret; 
0x00000000073d31: in al, 0x4c; mov edx, esp; call qword ptr [r13+0x38]; 
0x0000000010d25a: in al, 0x5b; pop rbp; mov eax, r12d; pop r12; ret; 
0x00000000034b75: in al, 0x5b; pop rbp; mov rax, r12; pop r12; ret; 
0x000000000a03c6: in al, 0x5d; mov rax, r12; pop r12; pop r13; ret; 
0x000000000d0089: in al, 0x64; mov dword ptr [rax], 0x4b; mov rax, r12; pop r12; ret; 
0x000000000b78b8: in al, 0x6; add [rax], al; ret; 
0x000000000de8c5: in al, 0x74; adc eax, 0x48eb894c; mov edi, ebp; call r12; 
0x00000000064bc7: in al, 0x74; and al, [rbx-0x61f43]; call qword ptr [rax]; 
0x00000000155993: in al, 0x74; ret; 
0x0000000012eb0e: in al, 0x75; cmovl ecx, [rcx+0x415d5be0]; pop rsp; ret; 
0x0000000011c05d: in al, 0x75; cmp [rbx+0x5d], ebx; pop r12; ret; 
0x0000000011a85d: in al, 0x75; sub [rax-0x75], cl; jge short 0x000000000011a864; call rbx; 
0x000000000cf626: in al, 0x75; test al, 0xf0; jne short 0x00000000000cf680; lea rax, [rdi-0x10]; ret; 
0x000000001288a8: in al, 0x9a; out dx, eax; inc dword ptr [rax-0x76b7ffc8]; ret; 
0x0000000018bcb7: in al, 0xc3; nop [rax]; xor eax, eax; ret; 
0x0000000009e227: in al, 0xc; adc eax, 0x2740000; ret; 
0x0000000010da48: in al, 0xd; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x0000000010d9a4: in al, 0xd; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x2]; mov eax, 0xffffffff; ret; 
0x0000000013c72f: in al, 0xe8; imul esi, [rbx], 0xffffffff; jmp qword ptr [rsi+0x66]; 
0x000000000de0fb: in al, 0xeb; ret far; 
0x0000000016d179: in al, 0xf3; movq [rdi-0x10], mm1; ret; 
0x000000000bc052: in al, 0xf3; ret; 
0x0000000012db25: in al, 0xf8; dec dword ptr [rax-0x73]; add eax, 0xfff8e3e0; cmovne rax, rdx; ret; 
0x0000000012f50b: in al, 0xf8; jmp qword ptr [rsi-0x70]; 
0x00000000084972: in al, 0xf9; jmp qword ptr [rsi+0x2e]; 
0x00000000074fa7: in al, 0xf; lahf; ret; 
0x000000000cf5dd: in al, 0xf; test [rax+rax-0xf580000], ebp; jne 0x00000000000cf680; lea rax, [rdi-0x10]; ret; 
0x0000000009e8fd: in al, 0xf; test [rdx], ebp; clc; call far fword ptr [rbx+0x5d]; 
0x00000000151663: in al, 0xfd; jmp qword ptr [rsi+0x2e]; 
0x00000000152eb9: in al, 0xff; call far fword ptr [rsi+0x5f]; 
0x00000000078a93: in al, 0xff; jmp qword ptr [rsi+0x2e]; 
0x0000000005aa70: in al, 0xff; jmp qword ptr [rsi+0xf]; 
0x0000000009948a: in al, dx; adc [rax-0x7d], cl; call qword ptr [rax]; 
0x000000000dd17c: in al, dx; adc [rax], al; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000113280: in al, dx; adc edi, eax; dec dword ptr [rbx+0x48182444]; add esp, 0x28; ret; 
0x00000000074e51: in al, dx; add [rax-0x8ff43], eax; jmp qword ptr [rax]; 
0x0000000016f3c6: in al, dx; add al, 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016f3c7: in al, dx; add al, 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000151ac9: in al, dx; add byte ptr [rcx+rcx*4-0x40], 0x5d; ret; 
0x0000000014c0b0: in al, dx; cmp esi, edi; jmp qword ptr [rsi+0x2e]; 
0x00000000024f70: in al, dx; cmpsd [rsi], [rdi]; adc eax, [rax]; mov rdi, rbx; call r12; 
0x0000000015a43a: in al, dx; dec dword ptr [rax-0x77]; ret; 
0x00000000048182: in al, dx; fiadd st, word ptr [rip+0x48000000]; mov [rsi+0x10], eax; xor eax, eax; ret; 
0x00000000155eb0: in al, dx; fwait; std; jmp qword ptr [rsi+0x66]; 
0x00000000153873: in al, dx; inc dword ptr [rbp+0x5b0775db]; pop rbp; pop r12; ret; 
0x0000000015d1b3: in al, dx; inc dword ptr [rbp-0x3f6bf040]; add rsp, 0x8; ret; 
0x00000000160eb6: in al, dx; inc dword ptr [rcx-0x80]; jl short 0x0000000000160ec0; jmp far fword ptr [rdi]; 
0x0000000015313f: in al, dx; jmp qword ptr [rax+rcx*2-0x39]; 
0x0000000015c5d5: in al, dx; jmp qword ptr [rbx+rcx*4+0x4]; 
0x00000000154280: in al, dx; jmp qword ptr [rsi+0x66]; 
0x0000000016d56f: in al, dx; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x14], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x000000000a8aca: in al, dx; mov [rax+0x4], dx; ret; 
0x000000000a8ba2: in al, dx; mov [rdi+0x4], ax; lea rax, [rdi+rdx-0x1]; ret; 
0x00000000167e1a: in al, dx; mov [rdi-0xc], rcx; mov [rdi-0x4], edx; ret; 
0x00000000116eeb: in al, dx; mov byte ptr [rsi-0x1], 0x0; mov rax, r8; ret; 
0x00000000044baa: in al, dx; mov rdx, r15; mov rsi, r12; mov rdi, r14; call rbp; 
0x0000000016d579: in al, dx; movdqu [rdi-0x10], xmm1; ret; 
0x00000000106cde: in al, dx; or al, ch; fcmovnbe st, st(2); bnd jmp qword ptr [rsi+0x66]; 
0x0000000012ed3b: in al, dx; or al, ch; idiv bh; jmp qword ptr [rsi+0xf]; 
0x0000000012ec0a: in al, dx; or al, ch; pop rdi; idiv edi; jmp qword ptr [rsi+0x2e]; 
0x0000000012f45a: in al, dx; or al, ch; pxor mm7, mm7; jmp qword ptr [rsi+0x2e]; 
0x00000000042d1e: in al, dx; or al, ch; ret far; 
0x00000000141126: in al, dx; or al, ch; ret; 
0x0000000012ebd8: in al, dx; or al, ch; xchg ecx, eax; idiv edi; call qword ptr [rax-0x3c0776b8]; 
0x00000000098959: in al, dx; ret far; 
0x000000000a88f3: in al, dx; ret; 
0x00000000062635: in al, dx; sbb [rcx], dh; jmp qword ptr [rax+rcx*2-0x75]; 
0x0000000010dae9: in al, dx; sbb byte ptr [rbp+0x41], 0x5c; pop r13; ret; 
0x0000000002f39c: in al, dx; sub [rbx+rcx*4+0x35], cl; ret; 
0x000000000a090d: in eax, 0x0; add [rax-0x73], cl; adc eax, 0xd21a9; cmovne rax, rdx; ret; 
0x000000000a086d: in eax, 0x0; add [rax-0x73], cl; adc eax, 0xd2229; cmovne rax, rdx; ret; 
0x000000000dd09e: in eax, 0x0; add [rax], al; syscall; 
0x000000000dd00a: in eax, 0x0; add [rax], al; xor esi, esi; lea edi, [rdi*8+0x2]; syscall; 
0x0000000010dc1d: in eax, 0x1; jne short 0x000000000010dc68; mov eax, 0x10c; syscall; 
0x0000000018f0c1: in eax, 0x2; add [rcx+0x63], cl; or al, 0x93; add rcx, r11; notrack jmp rcx; 
0x000000000bcd85: in eax, 0x2; lea rax, [rip+0x112c2]; lea rdx, [rip+0xd575b]; cmovne rax, rdx; ret; 
0x000000000a08b7: in eax, 0x2; lea rax, [rip+0xc350]; lea rdx, [rip+0xd0099]; cmovne rax, rdx; ret; 
0x000000000a0475: in eax, 0x2; lea rax, [rip+0xc372]; lea rdx, [rip+0xf08fb]; cmovne rax, rdx; ret; 
0x000000000a0817: in eax, 0x2; lea rax, [rip+0xc3d0]; lea rdx, [rip+0xd0119]; cmovne rax, rdx; ret; 
0x000000000a0907: in eax, 0x2; lea rax, [rip+0xe550]; lea rdx, [rip+0xd21a9]; cmovne rax, rdx; ret; 
0x000000000a0867: in eax, 0x2; lea rax, [rip+0xe5d0]; lea rdx, [rip+0xd2229]; cmovne rax, rdx; ret; 
0x00000000170a5e: in eax, 0x3; add [rdi+0x63], cl; or al, 0x8a; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000016fa25: in eax, 0x4; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168d57: in eax, 0x4b; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000167c26: in eax, 0x4c; mov [rdi-0x13], ebx; mov [rdi-0xb], rcx; mov [rdi-0x4], edx; ret; 
0x000000000961f7: in eax, 0x5d; adc eax, 0x30894800; mov rax, [rip+0x155cdb]; mov [rax], rdx; ret; 
0x00000000167097: in eax, 0x66; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000008d7d5: in eax, 0x66; nop [rax+rax]; mov eax, 0xffffffff; ret; 
0x000000000b8d07: in eax, 0x66; str [rbx+0x63]; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000183b9f: in eax, 0x74; ffreep st(5); std; xlat [rbx]; ret far; 
0x0000000018c290: in eax, 0x76; ffreep st(5); std; xlat [rbx]; ret far; 
0x000000000b7627: in eax, 0x7b; str [rbx+0x63]; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000008ce8b: in eax, 0x7f; cmp esi, 0x2; cmovne edx, ecx; mov [rdi], edx; ret; 
0x00000000043c87: in eax, 0x81; sbb al, [rax]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x0000000014e423: in eax, 0x89; ret; 
0x00000000162c87: in eax, 0x91; or [rax], al; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x00000000125823: in eax, 0xa4; or al, 0x0; syscall; 
0x0000000015f72a: in eax, 0xb8; add [rax], eax; add [rax], al; ret; 
0x0000000010fc87: in eax, 0xc1; or eax, 0x64d8f700; mov [rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000125d47: in eax, 0xc5; out dx, eax; jmp qword ptr [rsp+rax*2-0x77]; 
0x0000000010ea87: in eax, 0xd3; or eax, 0x64d8f700; mov [rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000009e987: in eax, 0xd4; adc al, 0x0; mov dword ptr fs:[rax], 0xc; xor eax, eax; ret; 
0x0000000010d944: in eax, 0xd; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x2]; mov eax, 0xffffffff; ret; 
0x00000000041e19: in eax, 0xdf; loopne 0x0000000000041dfa; fsub st, dword ptr [rip+0x200]; ret; 
0x0000000005f3ee: in eax, 0xdf; loopne 0x000000000005f37b; ret; 
0x000000001473e7: in eax, 0xe7; add [rax], al; lea r9, [rsp+0x20]; call qword ptr [rax]; 
0x00000000198c0e: in eax, 0xe8; or al, 0x70; cld; call far fword ptr [rbp+0x48]; 
0x000000000bc1b9: in eax, 0xf0; pop rbx; cmovne rax, rdx; ret; 
0x0000000016d1f9: in eax, 0xf3; movq [rdi-0x10], mm1; ret; 
0x000000000cfb13: in eax, 0xf; je short 0x00000000000cfb30; add rax, 0x2; ret; 
0x0000000015159c: in eax, 0xfd; call qword ptr [rax-0x5e1f00d]; 
0x00000000092aa8: in eax, 0xff; dec dword ptr [rax-0x3f]; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x0000000012b650: in eax, 0xff; jmp qword ptr [rsi+0x66]; 
0x0000000004b8ef: in eax, 0xff; jmp qword ptr [rsi+0xf]; 
0x0000000005da12: in eax, dx; add [rax+0x39], ecx; ret; 
0x0000000016f247: in eax, dx; add al, 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000119673: in eax, dx; add ecx, ebx; ret; 
0x0000000014d1a7: in eax, dx; call qword ptr [rax+0x18]; 
0x0000000016027c: in eax, dx; call qword ptr [rax+0x1e0]; 
0x00000000146e9d: in eax, dx; call qword ptr [rax+0x2e66c35d]; 
0x00000000149afd: in eax, dx; call qword ptr [rax-0x5e1f00d]; 
0x00000000057c14: in eax, dx; cmp cx, 0x7fff; jne short 0x0000000000057bfc; mov eax, 0x1; ret; 
0x0000000014f19e: in eax, dx; dec dword ptr [rax-0x75]; and al, 0x58; mov rdi, r12; call qword ptr [rax+0x20]; 
0x000000001483d7: in eax, dx; dec dword ptr [rax-0x75]; or [r14+0x8], r15b; mov rdi, rbp; call qword ptr [rax+0x30]; 
0x00000000146c18: in eax, dx; dec dword ptr [rax-0x77]; ret; 
0x0000000017ce9f: in eax, dx; idiv bh; jmp qword ptr [rsi+0xf]; 
0x0000000017cfcf: in eax, dx; idiv edi; jmp qword ptr [rsi+0x66]; 
0x0000000014f366: in eax, dx; inc dword ptr [rcx+0xfffb]; add [rdi], cl; xchg edi, eax; ret; 
0x0000000014db5f: in eax, dx; jmp qword ptr [rsi+0x66]; 
0x00000000142be6: in eax, dx; jmp qword ptr [rsi+0xf]; 
0x000000001449ed: in eax, dx; jmp qword ptr [rsp+rax*2-0x77]; 
0x0000000009e7fa: in eax, dx; jne 0x000000000009e691; mov rax, [rip+0x14d748]; call qword ptr [rax]; 
0x0000000011a89e: in eax, dx; jne short 0x000000000011a8f0; mov rdi, [r12]; call rbx; 
0x0000000011a8ce: in eax, dx; jne short 0x000000000011a950; mov rdi, [r12]; call rbx; 
0x0000000016d5ef: in eax, dx; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x13], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x000000000bb722: in eax, dx; lea rax, [rcx-0x1]; ret; 
0x0000000015fdd4: in eax, dx; lea rcx, [r10+0x398]; lea r8, [rsp+0x30]; call qword ptr [rax+0x1e0]; 
0x000000000bb0e9: in eax, dx; mov [rdi+0x10], ch; ret; 
0x000000000bb0ff: in eax, dx; mov [rdi+0x11], ch; ret; 
0x000000000bb121: in eax, dx; mov [rdi+0x12], ch; ret; 
0x000000000bb13f: in eax, dx; mov [rdi+0x13], ch; ret; 
0x000000000bb15f: in eax, dx; mov [rdi+0x14], ch; ret; 
0x000000000bb185: in eax, dx; mov [rdi+0x15], ch; ret; 
0x000000000bb1a1: in eax, dx; mov [rdi+0x16], ch; ret; 
0x000000000bb1c1: in eax, dx; mov [rdi+0x17], ch; ret; 
0x000000000bb1e1: in eax, dx; mov [rdi+0x18], ch; ret; 
0x000000000bb207: in eax, dx; mov [rdi+0x19], ch; ret; 
0x000000000baf65: in eax, dx; mov [rdi+0x1], ch; ret; 
0x000000000bb229: in eax, dx; mov [rdi+0x1a], ch; ret; 
0x000000000bb247: in eax, dx; mov [rdi+0x1b], ch; ret; 
0x000000000bb267: in eax, dx; mov [rdi+0x1c], ch; ret; 
0x000000000bb283: in eax, dx; mov [rdi+0x1d], ch; ret; 
0x000000000bb2a3: in eax, dx; mov [rdi+0x1e], ch; ret; 
0x000000000bb2c3: in eax, dx; mov [rdi+0x1f], ch; ret; 
0x000000000bb2e3: in eax, dx; mov [rdi+0x20], ch; ret; 
0x000000000bb309: in eax, dx; mov [rdi+0x21], ch; ret; 
0x000000000baf77: in eax, dx; mov [rdi+0x2], ch; ret; 
0x000000000baf8d: in eax, dx; mov [rdi+0x3], ch; ret; 
0x000000000bb359: in eax, dx; mov [rdi+0x40], ch; ret; 
0x000000000bafa5: in eax, dx; mov [rdi+0x4], ch; ret; 
0x000000000bafbb: in eax, dx; mov [rdi+0x5], ch; ret; 
0x000000000bafcd: in eax, dx; mov [rdi+0x6], ch; ret; 
0x000000000bafeb: in eax, dx; mov [rdi+0x7], ch; ret; 
0x000000000baff7: in eax, dx; mov [rdi+0x8], ch; ret; 
0x000000000bb00d: in eax, dx; mov [rdi+0x9], ch; ret; 
0x000000000bb02f: in eax, dx; mov [rdi+0xa], ch; ret; 
0x000000000bb04d: in eax, dx; mov [rdi+0xb], ch; ret; 
0x000000000bb06d: in eax, dx; mov [rdi+0xc], ch; ret; 
0x000000000bb08f: in eax, dx; mov [rdi+0xd], ch; ret; 
0x000000000bb0af: in eax, dx; mov [rdi+0xe], ch; ret; 
0x000000000bb0cf: in eax, dx; mov [rdi+0xf], ch; ret; 
0x00000000167c2a: in eax, dx; mov [rdi-0xb], rcx; mov [rdi-0x4], edx; ret; 
0x000000000baf51: in eax, dx; mov [rdi], ch; ret; 
0x0000000013b3cf: in eax, dx; mov ebp, edi; jmp qword ptr [rsi+0x66]; 
0x0000000016d5f9: in eax, dx; movdqu [rdi-0x10], xmm1; ret; 
0x0000000009c08d: in eax, dx; or [rax-0x7f], ecx; sti; jmp far fword ptr [rcx]; 
0x000000001520d7: in eax, dx; or [rax], eax; syscall; 
0x000000000bcdac: in eax, dx; or al, 0x0; test byte ptr [rdx+0xcd], 0x1; je short 0x00000000000bcd75; ret; 
0x0000000011f15e: in eax, dx; pop rax; pop rdi; call rax; 
0x00000000086e52: in eax, dx; ret; 
0x0000000013fa1f: in eax, dx; sub dh, ch; dec dword ptr [rax-0x77]; ret; 
0x000000000bb872: in eax, dx; sub rax, 0x1; ret; 
0x0000000009e47f: in eax, dx; test edx, edi; jmp qword ptr [rsi+0x66]; 
0x00000000193c49: in eax, dx; xor cl, [rbp+0x21]; fimul st, dword ptr [rbp-0x77]; ret far; 
0x0000000009e882: in eax, dx; xor eax, eax; ret; 
0x00000000102ad4: inc al; add [rax], al; setne al; lea eax, [rax+rax*8+0x5]; ret; 
0x0000000019013b: inc bl; cmp dl, 0x1; jb short 0x0000000000190145; mov [rdi], cl; ret; 
0x0000000016e1c6: inc byte ptr [rax+rax]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016e1c7: inc byte ptr [rax+rax]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000011b3fa: inc byte ptr [rax]; add [rax], al; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011fbb5: inc byte ptr [rax]; add [rax], al; syscall; 
0x00000000119e26: inc byte ptr [rbp-0x60f0be2e]; vpaddsw ymm0, ymm15, [rcx+0xf]; lahf; ret; 
0x00000000055871: inc byte ptr [rbx+0x87401e2]; mov rax, [rax+rcx*8]; mov [r9+rcx*8], rax; xor eax, eax; ret; 
0x00000000055629: inc byte ptr [rbx+0x87401e2]; mov rdx, [r8+rax*8]; mov [rsi+rax*8], rdx; xor eax, eax; ret; 
0x0000000015d13b: inc byte ptr [rbx]; ja short 0x000000000015d150; cmp dx, cx; sete al; ret; 
0x0000000002fdb9: inc byte ptr [rbx]; je short 0x000000000002fdc0; ret; 
0x000000000bf9cd: inc byte ptr [rcx+0x29]; ret; 
0x000000000dcfd5: inc byte ptr [rcx]; je short 0x00000000000dcfe0; xor eax, eax; ret; 
0x0000000013b66b: inc byte ptr [rdi]; add al, ch; mov r15, r13; jmp qword ptr [rsi+0x66]; 
0x000000001191fe: inc byte ptr [rdx]; add [rax], al; lea rax, [rip+0xd66b7]; add rsp, 0x18; ret; 
0x0000000018d6ba: inc byte ptr [rdx]; add [rcx+0x63], cl; or al, 0x93; add rcx, r11; notrack jmp rcx; 
0x0000000008ce8e: inc byte ptr [rdx]; cmovne edx, ecx; mov [rdi], edx; ret; 
0x0000000010d12a: inc byte ptr [rdx]; ja short 0x000000000010d136; mov [rdi+0x10c], esi; xor eax, eax; ret; 
0x000000000a8649: inc dword ptr [r8]; mov [rdx], rcx; ret; 
0x000000000c4be5: inc dword ptr [r9-0x7d]; call far fword ptr [rax]; 
0x000000000fed96: inc dword ptr [rax+0x3108384b]; rcr byte ptr [rbx+0x5d], 0x41; pop rsp; ret; 
0x00000000084ee0: inc dword ptr [rax+0x3145fde6]; ror byte ptr [rcx-0xc916ed], 0xff; jmp qword ptr [rsi-0x70]; 
0x0000000016e04e: inc dword ptr [rax+rax]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000005e552: inc dword ptr [rax-0x13b43]; jmp qword ptr [rdi+0x75]; 
0x0000000005e1fb: inc dword ptr [rax-0x13b43]; jmp qword ptr [rdi-0x75]; 
0x00000000035a52: inc dword ptr [rax-0x76b7bcc8]; ret; 
0x000000000e8418: inc dword ptr [rax-0x76b7ffc8]; ret; 
0x000000000e559b: inc dword ptr [rax-0x7af0f506]; ret; 
0x00000000064534: inc dword ptr [rax-0x80]; jmp qword ptr [rdi+rcx]; 
0x000000000757fa: inc dword ptr [rax-0x8ff43]; jmp qword ptr [rax]; 
0x0000000007bfb6: inc dword ptr [rax-0x93b43]; jmp qword ptr [rax]; 
0x00000000196c8a: inc dword ptr [rax]; add [rax-0x75], cl; je short 0x0000000000196cb5; adc [rcx-0x77], cl; ret; 
0x00000000075373: inc dword ptr [rax]; add [rax], al; add [rax-0x77], cl; ret; 
0x00000000077557: inc dword ptr [rax]; add [rax], al; add [rbp-0x7b], al; ror byte ptr [rdi], 0x88; ret far; 
0x0000000013d0a3: inc dword ptr [rax]; add [rax], al; add dh, al; ret; 
0x00000000063c36: inc dword ptr [rax]; add [rax], al; add dh, dh; ret; 
0x0000000018ea91: inc dword ptr [rax]; add [rax], al; and ecx, 0xff; sub eax, ecx; ret; 
0x000000000bc160: inc dword ptr [rax]; add [rax], al; cmove rax, rcx; ret; 
0x000000000c6ac9: inc dword ptr [rax]; add [rax], al; je short 0x00000000000c6ad3; mov eax, r8d; ret; 
0x00000000079f75: inc dword ptr [rax]; add [rax], al; movsxd rdx, r13d; mov rdi, rbx; call qword ptr [r14+0x38]; 
0x000000000e5179: inc dword ptr [rax]; add [rax], al; ret; 
0x0000000018ea97: inc dword ptr [rax]; add [rax], al; sub eax, ecx; ret; 
0x0000000011fc45: inc dword ptr [rax]; add [rax], al; syscall; 
0x000000001951a4: inc dword ptr [rax]; add [rbp-0x77], cl; ret far; 
0x00000000094eba: inc dword ptr [rax]; add [rsi+0x1], dh; ret; 
0x000000000a864a: inc dword ptr [rax]; mov [rdx], rcx; ret; 
0x00000000121778: inc dword ptr [rax]; mov byte ptr [rbp-0x7c9], 0x73; syscall; 
0x0000000012fb50: inc dword ptr [rax]; mov eax, edi; or eax, esi; bswap eax; ret; 
0x00000000116e87: inc dword ptr [rax]; mov rax, r8; ret; 
0x00000000116f09: inc dword ptr [rax]; ret; 
0x000000000de0f8: inc dword ptr [rbp+0x31]; in al, 0xeb; ret far; 
0x0000000006e587: inc dword ptr [rbp+0x31]; jmp qword ptr [rbx+rcx*4]; 
0x0000000006f6a7: inc dword ptr [rbp+0x31]; jmp qword ptr [rsi-0x77]; 
0x00000000102844: inc dword ptr [rbp+0x31]; leave; add rsp, 0x8; mov eax, r9d; ret; 
0x00000000117392: inc dword ptr [rbp+0x31]; ror byte ptr [rax-0x77], 0x5; ret far; 
0x0000000006627c: inc dword ptr [rbp+0x31]; sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; syscall; 
0x000000000ed9f5: inc dword ptr [rbp+0x31]; shl byte ptr [rsi+0xf], cl; outsb dx, [rsi]; ret; 
0x000000001156f6: inc dword ptr [rbp+0x410579c0]; mov byte ptr [rsp], 0x0; mov rax, r12; pop r12; ret; 
0x000000000e2ef6: inc dword ptr [rbp+0x480575c0]; add esp, 0x8; ret; 
0x0000000015c935: inc dword ptr [rbp+0x480e78c0]; add esp, 0x8; pop rbp; pop r12; ret; 
0x00000000148ab6: inc dword ptr [rbp+0x481d74c0]; mov eax, [rbx+0x23b8]; mov rdi, r12; call qword ptr [rax+0x20]; 
0x00000000154d35: inc dword ptr [rbp+0x483674c0]; mov eax, [rbp+0x18]; mov rdi, r13; call qword ptr [rax+0x20]; 
0x00000000151457: inc dword ptr [rbp+0x487474c0]; mov eax, [rbp+0x60]; mov rdi, r13; call qword ptr [rax+0x20]; 
0x00000000147b97: inc dword ptr [rbp+0x48a474c0]; mov eax, [rsp+0xc8]; mov rdi, rbx; call qword ptr [rax+0x20]; 
0x000000001511a2: inc dword ptr [rbp+0x497974c0]; mov eax, [rdi+0x60]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x00000000153874: inc dword ptr [rbp+0x5b0775db]; pop rbp; pop r12; ret; 
0x00000000106fe1: inc dword ptr [rbp+0x5ba774c0]; mov eax, 0x5; pop rbp; pop r12; ret; 
0x00000000115735: inc dword ptr [rbp+0xb8c0]; add [rax], al; cmove rax, rbx; pop rbx; ret; 
0x000000000fce1d: inc dword ptr [rbp+0xf]; mov dh, 0xff; movsxd rax, [r10+r15*4]; add rax, r10; notrack jmp rax; 
0x0000000004a8a3: inc dword ptr [rbp-0x2a7bf02e]; add [rax], al; add [rax+0x63], cl; ret far; 
0x0000000014dd3c: inc dword ptr [rbp-0x3f6af040]; add rsp, 0x8; movzx eax, al; add eax, 0x1; ret; 
0x000000000522df: inc dword ptr [rbp-0x3f6bf040]; add rsp, 0x8; movzx eax, al; ret; 
0x0000000015d1b4: inc dword ptr [rbp-0x3f6bf040]; add rsp, 0x8; ret; 
0x0000000007707d: inc dword ptr [rbp-0x557af037]; sbb al, [rax]; add [rcx-0x80], al; call qword ptr [rbx+0xf]; 
0x0000000010c607: inc dword ptr [rbp-0x74f38a40]; push rbx; add al, 0xeb; ret; 
0x0000000013a9a2: inc dword ptr [rbp-0x77]; ret; 
0x000000000dc5d6: inc dword ptr [rbp-0x7b]; fild st, dword ptr [rcx+0xf]; ret; 
0x0000000011c05a: inc dword ptr [rbp-0x7b]; in al, 0x75; cmp [rbx+0x5d], ebx; pop r12; ret; 
0x00000000074fa4: inc dword ptr [rbp-0x7b]; in al, 0xf; lahf; ret; 
0x000000000dadae: inc dword ptr [rbp-0x7b]; ror byte ptr [rdi], 0x85; ret far; 
0x000000001179cc: inc dword ptr [rbp-0x7cc08b40]; ret; 
0x00000000026fa0: inc dword ptr [rbx+0x1c69ac0d]; add [rdx], al; add rsp, 0x8; ret; 
0x00000000113caf: inc dword ptr [rbx+0x478930c8]; or [rax+0x100], bh; mov [rdi+0x16], ax; ret; 
0x000000001462c6: inc dword ptr [rbx+0xaa8120d]; add [rdx], al; add rsp, 0x8; lea rax, [rip+0xaa827]; ret; 
0x00000000140bf0: inc dword ptr [rbx+0xafbcc0d]; add [rdx], al; add rsp, 0x8; ret; 
0x0000000006e41e: inc dword ptr [rbx+rcx*4+0x63]; or [rcx-0x7d], al; ret far; 
0x0000000006e40a: inc dword ptr [rbx+rcx*4+0x63]; or [rcx-0x7f], al; ret far; 
0x0000000007181b: inc dword ptr [rbx+rcx*4-0x63]; mov al, [0x850f6ef883fffffa]; call far fword ptr [rdi]; 
0x0000000006e647: inc dword ptr [rbx+rcx*4-0x73]; mov al, [0x850fc98545fffffa]; imul esi, edx, 0xffffffff; inc dword ptr [rcx-0x9]; ret; 
0x0000000010ce19: inc dword ptr [rbx-0x307c0036]; dec dword ptr [rcx+0x75b8c6]; add [rax], al; syscall; 
0x0000000010ce42: inc dword ptr [rbx-0x307c0036]; dec dword ptr [rcx+0x77b8c6]; add [rax], al; syscall; 
0x0000000010ce1c: inc dword ptr [rbx-0x39760031]; mov eax, 0x75; syscall; 
0x0000000010ce45: inc dword ptr [rbx-0x39760031]; mov eax, 0x77; syscall; 
0x0000000007ebff: inc dword ptr [rbx-0x4f743]; jmp qword ptr [rax]; 
0x000000000a838d: inc dword ptr [rbx-0x76be071f]; ret far; 
0x000000000711b2: inc dword ptr [rbx-0x78f0d008]; ret; 
0x00000000071822: inc dword ptr [rbx-0x7af09108]; call far fword ptr [rdi]; 
0x0000000003f842: inc dword ptr [rbx-0x7af0fe08]; jmp rbx; 
0x0000000003b7e3: inc dword ptr [rbx-0x7af0fe08]; ret far; 
0x000000000f5bdc: inc dword ptr [rbx-0x7bf0f71e]; imul edi, 0xffffffff; jmp far fword ptr [rax+0x63840f01]; 
0x00000000031803: inc dword ptr [rbx-0x80]; jl short 0x000000000003183c; jmp far fword ptr [rsi]; 
0x00000000075244: inc dword ptr [rbx-0x90743]; call qword ptr [rax]; 
0x0000000005dde1: inc dword ptr [rbx-0x9b43]; jmp qword ptr [rsi+0xf]; 
0x0000000013b3f7: inc dword ptr [rbx-0xc8b0a08]; pop rbx; ret; 
0x00000000047da8: inc dword ptr [rbx]; add [rax], al; xor eax, ecx; ret; 
0x00000000054667: inc dword ptr [rbx]; add cl, ch; paddd mm7, mm7; call qword ptr [rax+0x587c031]; 
0x000000000bc23b: inc dword ptr [rbx]; div ecx; mov eax, eax; ret; 
0x000000000bc18c: inc dword ptr [rbx]; ret; 
0x0000000007ea4f: inc dword ptr [rcx+0x1]; ret far; 
0x0000000012fb22: inc dword ptr [rcx+0xe2]; rol byte ptr [rcx+0xfa], 0x80; cmovne eax, edi; ret; 
0x000000000d60e2: inc dword ptr [rcx+0xf]; mov dh, 0x45; add [rax-0x7d], cl; ret; 
0x0000000014f369: inc dword ptr [rcx+0xfffb]; add [rdi], cl; xchg edi, eax; ret; 
0x00000000057e11: inc dword ptr [rcx+rbp-0x40]; mov [rdx], eax; mov eax, 0x2; ret; 
0x000000001215b5: inc dword ptr [rcx+rcx*4-0x10]; syscall; 
0x000000000e2ffe: inc dword ptr [rcx+rcx*4-0x18]; pop rbp; pop r12; pop r13; ret; 
0x00000000081ef2: inc dword ptr [rcx+rcx*4-0x20]; pop rbx; pop rbp; pop r12; ret; 
0x000000000c6b79: inc dword ptr [rcx+rcx*4-0x38]; pop rbx; ret; 
0x00000000041d2f: inc dword ptr [rcx+rcx*4-0x3e]; and edx, 0x7fffffff; or edx, esi; je 0x0000000000041c88; ret; 
0x00000000085461: inc dword ptr [rcx+rcx*4-0x40]; pop rbp; pop r12; ret; 
0x00000000054de5: inc dword ptr [rcx+rcx*4-0x40]; ret; 
0x0000000012aa29: inc dword ptr [rcx+rcx*4-0x9]; mov rdx, rax; mov rsi, r9; call qword ptr [r10+0x28]; 
0x00000000075b7f: inc dword ptr [rcx-0x1]; push rsp; ret; 
0x00000000054f23: inc dword ptr [rcx-0x46]; or [rax], al; add [rax], al; mov eax, 0xe; syscall; 
0x0000000004ea5d: inc dword ptr [rcx-0x73]; data64 ret far; 
0x0000000003a9a0: inc dword ptr [rcx-0x75]; add [rbx-0x7bf0fd08], al; call qword ptr [rcx]; 
0x00000000064852: inc dword ptr [rcx-0x77]; fimul st, word ptr [rax-0x77]; ret; 
0x000000000c4be6: inc dword ptr [rcx-0x7d]; call far fword ptr [rax]; 
0x00000000066068: inc dword ptr [rcx-0x7d]; jmp far fword ptr [rax]; 
0x0000000006c440: inc dword ptr [rcx-0x7d]; ret far; 
0x000000000a471e: inc dword ptr [rcx-0x7d]; ret; 
0x0000000006c612: inc dword ptr [rcx-0x7f]; ret far; 
0x0000000007757c: inc dword ptr [rcx-0x80]; call far fword ptr [rax+0x48]; 
0x000000000e64e7: inc dword ptr [rcx-0x80]; jl short 0x00000000000e64f0; jmp far fword ptr [rdi]; 
0x000000000e64e6: inc dword ptr [rcx-0x80]; jl short 0x00000000000e64f0; jmp far fword ptr [rdi]; 
0x00000000160eb7: inc dword ptr [rcx-0x80]; jl short 0x0000000000160ec0; jmp far fword ptr [rdi]; 
0x000000000787b7: inc dword ptr [rcx-0x80]; jmp qword ptr [rdi+rcx]; 
0x0000000006cf04: inc dword ptr [rcx-0x9]; ret; 
0x0000000006d4f7: inc dword ptr [rcx-0xa]; ret; 
0x0000000007d0f0: inc dword ptr [rcx]; add [rax], al; add [rax+0x39], cl; ret; 
0x0000000015a4da: inc dword ptr [rcx]; add [rax], al; add [rax-0x7d], cl; ret; 
0x000000000e7c41: inc dword ptr [rcx]; add [rax], al; add cl, ch; ret far; 
0x00000000162ad3: inc dword ptr [rcx]; add [rax], al; add cl, ch; ret; 
0x000000000780e9: inc dword ptr [rcx]; ret far; 
0x00000000074f81: inc dword ptr [rcx]; ret; 
0x0000000018d589: inc dword ptr [rdx]; add [rcx+0x63], cl; or al, 0x93; add rcx, r11; notrack jmp rcx; 
0x0000000013bd20: inc dword ptr [rip+0xba]; add [rax+0x102], bh; cmovne eax, edx; ret; 
0x000000000bb94a: inc eax; add rsp, 0x100; sub rax, rdx; ret; 
0x000000000bb947: inc eax; inc rax; add rsp, 0x100; sub rax, rdx; ret; 
0x00000000041bad: inc eax; shr eax, 0x1f; ret; 
0x00000000160cd7: inc ebx; mov eax, 0xfffffffe; ret; 
0x00000000113140: inc ebx; mov rax, [rip+0xd8d27]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000001143c8: inc ebx; nop [rax+rax]; endbr64; mov eax, 0x10; syscall; 
0x0000000011fed6: inc ebx; nop [rax+rax]; endbr64; mov eax, 0x11f; syscall; 
0x0000000011ff66: inc ebx; nop [rax+rax]; endbr64; mov eax, 0x134; syscall; 
0x0000000011fff6: inc ebx; nop [rax+rax]; endbr64; mov eax, 0x13f; syscall; 
0x00000000120796: inc ebx; nop [rax+rax]; endbr64; mov eax, 0x30; syscall; 
0x000000001202e6: inc ebx; nop [rax+rax]; endbr64; mov eax, 0x32; syscall; 
0x00000000121068: inc ebx; nop [rax+rax]; endbr64; mov eax, 0x47; syscall; 
0x00000000116d18: inc ebx; nop [rax+rax]; endbr64; mov eax, 0x4d; syscall; 
0x0000000010fcf6: inc ebx; nop [rax+rax]; endbr64; mov eax, 0x57; syscall; 
0x0000000010fc36: inc ebx; nop [rax+rax]; endbr64; mov eax, 0x58; syscall; 
0x0000000011fde6: inc ebx; nop [rax+rax]; endbr64; mov eax, 0x63; syscall; 
0x0000000011f9c6: inc ebx; nop [rax+rax]; endbr64; mov eax, 0x7d; syscall; 
0x0000000011f406: inc ebx; nop [rax+rax]; endbr64; mov eax, 0x87; syscall; 
0x00000000118b26: inc ebx; nop [rax+rax]; endbr64; mov eax, 0x95; syscall; 
0x00000000115646: inc ebx; nop [rax+rax]; endbr64; mov eax, 0x99; syscall; 
0x0000000011fb46: inc ebx; nop [rax+rax]; endbr64; mov eax, 0xb1; syscall; 
0x0000000011fcf6: inc ebx; nop [rax+rax]; endbr64; mov eax, 0xb4; syscall; 
0x0000000011cea6: inc ebx; nop [rax+rax]; endbr64; mov eax, 0xc2; syscall; 
0x0000000011cf06: inc ebx; nop [rax+rax]; endbr64; mov eax, 0xc3; syscall; 
0x0000000011cde6: inc ebx; nop [rax+rax]; endbr64; mov eax, 0xc4; syscall; 
0x0000000011cf96: inc ebx; nop [rax+rax]; endbr64; mov eax, 0xc5; syscall; 
0x0000000011fba6: inc ebx; nop [rax+rax]; endbr64; mov eax, 0xfe; syscall; 
0x00000000163356: inc ebx; nop [rax+rax]; endbr64; mov eax, 0xffffffff; ret; 
0x00000000093818: inc ebx; nop [rax+rax]; endbr64; mov rax, 0xffffffffffffffff; ret; 
0x00000000093848: inc ebx; nop [rax+rax]; endbr64; ret; 
0x000000000a8b64: inc ebx; nop [rax+rax]; mov [rdi], ecx; lea rax, [rdi+rdx-0x1]; ret; 
0x000000000b7ed3: inc ebx; nop [rax+rax]; mov [rdi], rdx; ret; 
0x000000000b7f54: inc ebx; nop [rax+rax]; movdqu [rdi], xmm0; ret; 
0x000000000b7e92: inc ebx; nop [rax+rax]; nop; mov [rdi], edx; ret; 
0x0000000017cab6: inc ebx; nop [rax+rax]; ret; 
0x000000000ee478: inc ebx; nop [rax+rax]; ret; 
0x000000001924d9: inc ebx; nop [rax+rax]; xor eax, eax; ret; 
0x0000000010e15a: inc ebx; nop [rax]; endbr64; mov eax, 0x15; syscall; 
0x000000001211ea: inc ebx; nop [rax]; endbr64; mov eax, 0x43; syscall; 
0x0000000010dc7a: inc ebx; nop [rax]; endbr64; mov eax, 0x53; syscall; 
0x0000000011f1ea: inc ebx; nop [rax]; endbr64; mov eax, 0x7a; syscall; 
0x0000000010da2a: inc ebx; nop [rax]; endbr64; mov eax, 0x89; syscall; 
0x0000000009380a: inc ebx; nop [rax]; endbr64; mov eax, 0xffffffff; ret; 
0x000000000de30a: inc ebx; nop [rax]; endbr64; mov eax, [rdi]; ret; 
0x000000000440bb: inc ebx; nop [rax]; endbr64; mov eax, [rip+0x1a80e2]; ret; 
0x0000000009382a: inc ebx; nop [rax]; endbr64; xor eax, eax; ret; 
0x000000000a8b37: inc ebx; nop [rax]; mov [rdi], si; lea rax, [rdi+rdx-0x1]; ret; 
0x000000000a8b2c: inc ebx; xchg ax, ax; mov byte ptr [rdi], 0x0; lea rax, [rdi+rdx-0x1]; ret; 
0x000000000ee4ca: inc ebx; xor eax, eax; pop rbx; ret; 
0x000000000daa1e: inc edi; add ebp, [rbx]; add [rax], al; add [rax-0x7d], cl; ret; 
0x000000000dba15: inc edi; add ecx, [rcx]; add [rax], al; add [rax-0x7d], cl; ret; 
0x000000000db6b0: inc edi; add ecx, [rdx]; add [rax], al; add [rax-0x7d], cl; ret; 
0x000000000760af: inc edi; test eax, edi; idiv bh; call qword ptr [rax]; 
0x00000000116005: inc esi; call far fword ptr [r8+rcx*2-0x73]; 
0x0000000010eee2: inc esi; jmp far fword ptr [r15]; 
0x00000000116021: inc esi; jmp qword ptr [r8]; 
0x0000000013d84d: inc esi; ret; 
0x00000000074e0d: inc esi; test [rax], eax; idiv edi; jmp qword ptr [rax]; 
0x0000000007a80f: inc esi; test esp, eax; idiv bh; jmp qword ptr [rax]; 
0x000000000b7f53: inc r11d; nop [rax+rax]; movdqu [rdi], xmm0; ret; 
0x000000000bb949: inc rax; add rsp, 0x100; sub rax, rdx; ret; 
0x000000000bb946: inc rax; inc rax; add rsp, 0x100; sub rax, rdx; ret; 
0x00000000054666: inc word ptr [rbx]; add cl, ch; paddd mm7, mm7; call qword ptr [rax+0x587c031]; 
0x000000000e3124: incsspq rsi; jmp rdi; 
0x00000000166aa6: insb [rdi], dx; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000151c0d: insb [rdi], dx; add rsp, 0x30; pop rbx; ret; 
0x00000000146a86: insb [rdi], dx; and al, 0x68; mov rsi, r13; call qword ptr [rax+0x10]; 
0x00000000041e01: insb [rdi], dx; and al, 0x8; fadd st, st(0); ret; 
0x00000000041d5d: insb [rdi], dx; and al, 0x8; fscale; fstp st(1), st; ret; 
0x00000000041cc3: insb [rdi], dx; and al, 0x8; fsubrp; ret; 
0x00000000041bde: insb [rdi], dx; and al, 0x8; ret; 
0x00000000041d0b: insb [rdi], dx; and al, 0xe8; fstp tbyte ptr [rdi], st; fld st, tbyte ptr [rsp+0x8]; ret; 
0x00000000041c4d: insb [rdi], dx; and al, 0xe8; ret; 
0x00000000037246: insb [rdi], dx; idiv bh; jmp qword ptr [rsi+0xf]; 
0x0000000014d007: insb [rdi], dx; mov eax, 0x1; ret; 
0x00000000117720: insb [rdi], dx; or byte ptr [rip-0x3b7cb800], 0x8; ret; 
0x00000000118c63: insb [rdi], dx; or eax, 0x5c415d00; pop r13; ret; 
0x00000000115178: insb [rdi], dx; or eax, 0x64d8f700; mov [rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000115223: insb [rdi], dx; or eax, 0x64d8f700; mov [rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000089d77: insb [rdi], dx; ret far; 
0x00000000025833: insb [rdi], dx; ret; 
0x00000000047d16: insb [rdi], dx; rol dword ptr [rcx+rcx*4-0x40], 0xf; adc [rdi], eax; ret; 
0x00000000091f33: insb [rdi], dx; ror dword ptr [rdi], 0x11; cmp [r11+0x5d], bl; pop r12; ret; 
0x000000000271ac: insb [rdi], dx; ror dword ptr [rdi], 0x11; ret; 
0x00000000087528: insb [rdi], dx; ror dword ptr [rdi], 0x11; xor [rcx+0x5d5b7453], cl; pop r12; ret; 
0x0000000014911a: insb [rdi], dx; ror dword ptr [rdi], 0x29; add al, 0x24; call qword ptr [rax+0x8]; 
0x00000000047823: insb [rdi], dx; sbb al, [rax]; syscall; 
0x00000000158e14: insb [rdi], dx; std; jmp qword ptr [rsi+0xf]; 
0x00000000079da0: insb [rdi], dx; test edx, edi; dec dword ptr [rcx-0x77]; ret; 
0x00000000047003: insd [rdi], dx; add [rcx], al; xor esi, esi; mov rdi, r9; call r8; 
0x00000000166a08: insd [rdi], dx; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000fb549: insd [rdi], dx; bnd jmp qword ptr [rsi+0xf]; 
0x0000000009609f: insd [rdi], dx; idiv bh; jmp qword ptr [rsi+0x66]; 
0x000000000a74ab: insd [rdi], dx; loope 0x00000000000a74ad; call qword ptr [rax-0x72b336cf]; 
0x00000000091921: insd [rdi], dx; ror byte ptr [rax-0x77], 0x57; sbb [rax-0x77], cl; movups [rdi+0x8], xmm0; ret; 
0x000000000896dd: insd [rdi], dx; sbb [rax-0x77], cl; ret far; 
0x0000000004775b: insd [rdi], dx; sbb al, [rax]; syscall; 
0x000000000b8d7f: insd [rdi], dx; str [rbx+0x63]; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000baad3: insd [rdi], dx; str [rcx+0x63]; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000e4563: iretd; adc [rax], al; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000004105d: iretd; adc bh, dh; call far fword ptr [rbp+0x4c]; 
0x000000000c9781: iretd; add eax, 0x89490000; ret; 
0x0000000008e23f: iretd; call qword ptr [r14+0x38]; 
0x0000000004700a: iretd; call r8; 
0x00000000111406: iretd; cld; dec dword ptr [rax-0x77]; ret; 
0x000000001294e2: iretd; cmovne eax, esi; ret; 
0x000000000b1ad2: iretd; cmovne rsi, rdx; bsr rsi, rsi; lea rax, [rcx+rsi]; ret; 
0x0000000008e50a: iretd; cmp rax, rdi; jbe short 0x000000000008e530; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x0000000010ce1e: iretd; dec dword ptr [rcx+0x75b8c6]; add [rax], al; syscall; 
0x0000000010ce47: iretd; dec dword ptr [rcx+0x77b8c6]; add [rax], al; syscall; 
0x0000000005ea52: iretd; ja short 0x000000000005ea38; mov eax, r8d; ret; 
0x000000000bbc0e: iretd; jb 0x00000000000bbd78; mov rcx, rdx; rep movsb [rdi], [rsi]; ret; 
0x0000000018b639: iretd; jb 0x000000000018b805; mov rcx, rdx; rep movsb [rdi], [rsi]; ret; 
0x000000001903c4: iretd; jb 0x0000000000190600; mov rcx, rdx; rep movsb [rdi], [rsi]; ret; 
0x000000000aa642: iretd; movzx eax, byte ptr [rax+rcx]; movzx edx, byte ptr [rdx+rcx]; sub eax, edx; ret; 
0x000000000b6d35: iretd; or dword ptr [rdi], 0x0; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000001331eb: iretd; or eax, [rax]; syscall; 
0x000000000461ad: iretd; ret; 
0x000000000e30e9: iretd; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000309f8: iretd; sbb eax, [rax]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000015fccd: iretd; std; cld; jmp qword ptr [rsi+0x2e]; 
0x00000000152ab3: iretd; std; jmp qword ptr [rsi+0x2e]; 
0x0000000011ef55: iretd; sub rsp, 0x8; call rsi; 
0x000000000d4661: ja 0x0000000000023747; lea rdx, [rip+0xdb4a6]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000000fe79f: ja 0x0000000000023761; movzx ecx, byte ptr [rdi+0x8]; movsxd rcx, [r9+rcx*4]; add rcx, r9; notrack jmp rcx; 
0x00000000023e7c: ja 0x0000000000023c66; lea rdx, [rip+0x18b89b]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000023e7b: ja 0x0000000000023c66; lea rdx, [rip+0x18b89b]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000031ad3: ja 0x0000000000031bb3; movsxd r8, [rdx+r9*4]; add r8, rdx; notrack jmp r8; 
0x00000000052d6e: ja 0x00000000000532cc; movzx edx, dl; movsxd rdx, [rdi+rdx*4]; add rdx, rdi; notrack jmp rdx; 
0x0000000006353b: ja 0x0000000000063630; lea rcx, [rip+0x149c38]; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x00000000063647: ja 0x00000000000636df; lea rcx, [rip+0x149b94]; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x0000000006c325: ja 0x000000000006c020; lea rcx, [rip+0x14191e]; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x0000000006c66f: ja 0x000000000006e093; lea rdi, [rip+0x141690]; movsxd rax, [rdi+r12*4]; add rax, rdi; notrack jmp rax; 
0x000000000740b9: ja 0x0000000000074731; movsxd rax, [r14+rax*4]; add rax, r14; notrack jmp rax; 
0x0000000007a769: ja 0x000000000007b031; movsxd rax, [r14+rax*4]; add rax, r14; notrack jmp rax; 
0x00000000080751: ja 0x00000000000809a0; lea rcx, [rip+0x12e122]; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x00000000080f05: ja 0x0000000000081130; lea rcx, [rip+0x12dbb2]; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x000000000bbf46: ja 0x00000000000bbfdc; movdqu [rdi+rdx-0x10], xmm0; movdqu [rdi], xmm0; ret; 
0x000000000bc0cc: ja 0x00000000000bc242; lea rsi, [rip+0xf35a7]; movsxd rax, [rsi+rdi*4]; add rax, rsi; notrack jmp rax; 
0x000000000cf2b1: ja 0x00000000000cf390; add rax, rdi; add rax, rcx; ret; 
0x000000000d60f9: ja 0x00000000000d4e65; movzx eax, al; movsxd rax, [r14+rax*4]; add rax, r14; notrack jmp rax; 
0x000000000e884b: ja 0x00000000000e8b3b; lea rdx, [rip+0xc83cc]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000000ea584: ja 0x00000000000ea86d; lea rdx, [rip+0xc6803]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000000fce18: ja 0x00000000000fccd9; movzx r15d, r15b; movsxd rax, [r10+r15*4]; add rax, r10; notrack jmp rax; 
0x00000000101085: ja 0x000000000010113c; lea rdx, [rip+0xb076e]; movsxd rax, [rdx+rdi*4]; add rax, rdx; notrack jmp rax; 
0x0000000010a0b9: ja 0x000000000010951e; lea rdx, [rip+0xa809a]; movsxd rax, [rdx+rbp*4]; add rax, rdx; notrack jmp rax; 
0x000000001092cd: ja 0x000000000010951e; lea rdx, [rip+0xa8dc6]; movsxd rax, [rdx+rbx*4]; add rax, rdx; notrack jmp rax; 
0x00000000188fe9: ja 0x0000000000189080; je short 0x0000000000189070; mov byte ptr [rdi], 0x0; vzeroupper; ret; 
0x00000000189709: ja 0x0000000000189860; je 0x0000000000189850; mov byte ptr [rdi], 0x0; vzeroupper; ret; 
0x00000000189af4: ja 0x0000000000189900; je 0x00000000001898f0; mov byte ptr [rdi], 0x0; vzeroupper; ret; 
0x00000000189d89: ja 0x0000000000189e20; je short 0x0000000000189e10; mov byte ptr [rdi], 0x0; vzeroupper; ret; 
0x0000000018a7e4: ja 0x000000000018a4b0; je 0x000000000018a4a0; vzeroupper; ret; 
0x0000000018a6c0: ja 0x000000000018a590; je 0x000000000018a580; vzeroupper; ret; 
0x0000000018b524: ja 0x000000000018b1e0; je 0x000000000018b1d0; mov rax, rdi; vzeroupper; ret; 
0x0000000018b3f0: ja 0x000000000018b2c0; je 0x000000000018b2b0; vzeroupper; ret; 
0x000000001908b7: ja 0x0000000000190944; vmovdqu64 [rdi+rdx-0x40], zmm0; vmovdqu64 [rdi], zmm0; vzeroupper; ret; 
0x00000000193f6f: ja 0x0000000000194250; lea rdi, [rip+0x2a638]; movsxd rcx, [rdi+r12*4]; add rcx, rdi; notrack jmp rcx; 
0x00000000194188: ja 0x0000000000194326; lea rdi, [rip+0x2a48b]; movsxd r12, [rdi+r12*4]; add rdi, r12; notrack jmp rdi; 
0x00000000194b5d: ja 0x0000000000194d46; lea rdx, [rip+0x29ae6]; movsxd rax, [rdx+rax*4]; add rdx, rax; notrack jmp rdx; 
0x000000000258e5: ja short 0x0000000000025885; adc eax, [rax]; mov rdi, rbx; call r12; 
0x00000000033e25: ja short 0x0000000000033e37; lea rdx, [rdi+rsi*4]; mov r8d, [rdx+rax]; mov eax, r8d; ret; 
0x00000000034b4b: ja short 0x0000000000034b73; lea rdx, [rip+0x17440c]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000000363f5: ja short 0x0000000000036412; add [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x00000000043446: ja short 0x0000000000043450; ret; 
0x00000000043492: ja short 0x00000000000434e0; ret; 
0x0000000004825d: ja short 0x00000000000482b0; ret; 
0x0000000005871e: ja short 0x00000000000586c2; cld; jmp qword ptr [rsi+0xf]; 
0x0000000005b6dd: ja short 0x000000000005b6b0; mov rax, r8; ret; 
0x0000000005ea53: ja short 0x000000000005ea38; mov eax, r8d; ret; 
0x00000000062ec1: ja short 0x0000000000062ec8; ret; 
0x00000000062ef4: ja short 0x0000000000062f00; ret; 
0x00000000080655: ja short 0x0000000000080680; movzx eax, al; movsxd rax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x00000000080e10: ja short 0x0000000000080e20; movsxd rax, [rdi+rax*4]; add rax, rdi; notrack jmp rax; 
0x00000000080ea5: ja short 0x0000000000080ed0; lea rdi, [rip+0x12db5a]; movsxd rcx, [rdi+rcx*4]; add rcx, rdi; notrack jmp rcx; 
0x00000000087e1c: ja short 0x0000000000087e10; lea eax, [rdx+rdi]; ret; 
0x00000000092a4c: ja short 0x0000000000092a40; lea eax, [rdx+rdi]; ret; 
0x0000000009c688: ja short 0x000000000009c6e8; lea rdx, [rip+0x1127d7]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000009df67: ja short 0x000000000009df7a; add al, ch; xchg ecx, eax; cmp al, 0xfc; jmp qword ptr [rbx+rcx*4+0x4]; 
0x0000000009ef50: ja short 0x000000000009ef5a; jb short 0x000000000009ef60; mov [rdi], rsi; ret; 
0x000000000a2255: ja short 0x00000000000a2230; pop rbx; pop rbp; pop r12; ret; 
0x000000000b6d8d: ja short 0x00000000000b6d12; str [rcx+0x63]; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6ea7: ja short 0x00000000000b6eab; ret; 
0x000000000b6ec3: ja short 0x00000000000b6ec9; mov [rdi], ecx; ret; 
0x000000000b6f04: ja short 0x00000000000b6f0e; mov [rdi], rcx; ret; 
0x000000000b6f89: ja short 0x00000000000b6f9b; ret; 
0x000000000b6fdf: ja short 0x00000000000b6ff5; ret; 
0x000000000b7061: ja short 0x00000000000b707b; ret; 
0x000000000b7727: ja short 0x00000000000b772b; sub r8, 0x3; lea rdi, [rdi+0x3]; jne 0x00000000000b7fa0; ret; 
0x000000000b78e9: ja short 0x00000000000b78fb; sub r8, 0x11; lea rdi, [rdi+0x11]; jne 0x00000000000b7fa0; ret; 
0x000000000b796f: ja short 0x00000000000b7985; sub r8, 0x15; lea rdi, [rdi+0x15]; jne 0x00000000000b7fa0; ret; 
0x000000000b79f1: ja short 0x00000000000b7a0b; sub r8, 0x19; lea rdi, [rdi+0x19]; jne 0x00000000000b7fa0; ret; 
0x000000000b8097: ja short 0x00000000000b80b9; sub r8, 0x10; jb 0x00000000000b7649; movdqu [rdi+0x30], xmm7; ret; 
0x000000000b84e7: ja short 0x00000000000b84eb; lea rax, [rdi+0x2]; ret; 
0x000000000b8503: ja short 0x00000000000b8509; mov [rdi], ecx; lea rax, [rdi+0x4]; ret; 
0x000000000b8554: ja short 0x00000000000b855e; mov [rdi], rcx; lea rax, [rdi+0x8]; ret; 
0x000000000b8639: ja short 0x00000000000b864b; lea rax, [rdi+0x10]; ret; 
0x000000000b86af: ja short 0x00000000000b86c5; lea rax, [rdi+0x14]; ret; 
0x000000000b8731: ja short 0x00000000000b874b; lea rax, [rdi+0x18]; ret; 
0x000000000ba1b7: ja short 0x00000000000ba1bb; ret; 
0x000000000ba1d3: ja short 0x00000000000ba1d9; mov [rdi], ecx; ret; 
0x000000000ba214: ja short 0x00000000000ba21e; mov [rdi], rcx; ret; 
0x000000000ba299: ja short 0x00000000000ba2ab; ret; 
0x000000000ba2ef: ja short 0x00000000000ba305; ret; 
0x000000000ba371: ja short 0x00000000000ba38b; ret; 
0x000000000baca7: ja short 0x00000000000bacab; ret; 
0x000000000bacc3: ja short 0x00000000000bacc9; mov [rdi], ecx; ret; 
0x000000000bad04: ja short 0x00000000000bad0e; mov [rdi], rcx; ret; 
0x000000000bad89: ja short 0x00000000000bad9b; ret; 
0x000000000baddf: ja short 0x00000000000badf5; ret; 
0x000000000bae61: ja short 0x00000000000bae7b; ret; 
0x000000000bbc28: ja short 0x00000000000bbc50; jb short 0x00000000000bbc31; movzx ecx, byte ptr [rsi]; mov [rdi], cl; ret; 
0x000000000bbdf4: ja short 0x00000000000bbe16; movups [rdi+0x30], xmm7; movups [r11], xmm8; ret; 
0x000000000bbec2: ja short 0x00000000000bbee4; movups [rdi+0x30], xmm7; movups [r11], xmm8; ret; 
0x000000000bbfc6: ja short 0x00000000000bbfd3; movdqu [rdi+rdx-0x10], xmm0; movdqu [rdi], xmm0; ret; 
0x000000000bc067: ja short 0x00000000000bc07e; jb short 0x00000000000bc06d; mov [rdi], cl; ret; 
0x000000000cf379: ja short 0x00000000000cf390; sub rdi, 0x10; add rax, rdi; ret; 
0x000000000d0e01: ja short 0x00000000000d0e08; ret; 
0x000000000d0f16: ja short 0x00000000000d0f20; ret; 
0x000000000d10b6: ja short 0x00000000000d10c0; ret; 
0x000000000dd0ad: ja short 0x00000000000dd077; add rsp, 0x8; pop rbp; pop r12; ret; 
0x000000000dd12d: ja short 0x00000000000dd0f7; add rsp, 0x8; pop rbp; pop r12; ret; 
0x000000000dd15b: ja short 0x00000000000dd160; ret; 
0x000000000dd14c: ja short 0x00000000000dd178; mov eax, 0xe3; syscall; 
0x000000000de2f1: ja short 0x00000000000de2f8; ret; 
0x000000000e2c70: ja short 0x00000000000e2cd0; ret; 
0x000000000e2d23: ja short 0x00000000000e2d90; ret; 
0x000000000e2e7d: ja short 0x00000000000e2eb0; ret; 
0x000000000e316c: ja short 0x00000000000e3190; hlt; mov edi, edx; mov eax, r8d; syscall; 
0x000000000e45c3: ja short 0x00000000000e45c5; add [rax], al; syscall; 
0x000000000e546e: ja short 0x00000000000e54d8; lea rdx, [rip+0xcb37d]; movsxd rax, [rdx+rbp*4]; add rax, rdx; notrack jmp rax; 
0x000000000e8d6b: ja short 0x00000000000e8d90; lea rsi, [rip+0xc7f30]; movsxd rax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x000000000fccba: ja short 0x00000000000fccd9; movzx r15d, r15b; movsxd rax, [r14+r15*4]; add rax, r14; notrack jmp rax; 
0x000000000fe039: ja short 0x00000000000fe050; movzx ecx, byte ptr [r14+0x30]; movsxd rcx, [rsi+rcx*4]; add rcx, rsi; notrack jmp rcx; 
0x000000001028ff: ja short 0x0000000000102907; setne al; movzx eax, al; ret; 
0x00000000109106: ja short 0x0000000000109115; movzx eax, al; movsxd rax, [r12+rax*4]; add rax, r12; notrack jmp rax; 
0x0000000010ab15: ja short 0x000000000010ab2c; movzx eax, al; movsxd rax, [r12+rax*4]; add rax, r12; notrack jmp rax; 
0x0000000010c1a0: ja short 0x000000000010c200; ret; 
0x0000000010c250: ja short 0x000000000010c2b0; ret; 
0x0000000010c71e: ja short 0x000000000010c788; movups [rsi+0x60], xmm6; movdqu xmm7, [rdi+0x78]; movups [rsi+0x70], xmm7; ret; 
0x0000000010c7c5: ja short 0x000000000010c7cb; xor eax, eax; ret; 
0x0000000010c772: ja short 0x000000000010c7dc; movdqu xmm7, [rsi+0x70]; movups [rdi+0x78], xmm7; ret; 
0x0000000010cc31: ja short 0x000000000010cc55; mov eax, [rcx]; movsxd rax, [r12+rax*4]; add rax, r12; notrack jmp rax; 
0x0000000010ce4c: ja short 0x000000000010ce4e; add [rax], al; syscall; 
0x0000000010d12c: ja short 0x000000000010d136; mov [rdi+0x10c], esi; xor eax, eax; ret; 
0x0000000010d1fb: ja short 0x000000000010d1e8; mov eax, r8d; ret; 
0x0000000010d3e8: ja short 0x000000000010d3aa; add rsp, 0x8; pop rbp; pop r12; ret; 
0x0000000010d4f0: ja short 0x000000000010d4f8; ret; 
0x0000000010d4e1: ja short 0x000000000010d510; mov eax, 0x4; syscall; 
0x0000000010d54f: ja short 0x000000000010d558; ret; 
0x0000000010d540: ja short 0x000000000010d570; mov eax, 0x5; syscall; 
0x0000000010d5b0: ja short 0x000000000010d5b8; ret; 
0x0000000010d5a1: ja short 0x000000000010d5d0; mov eax, 0x6; syscall; 
0x0000000010d938: ja short 0x000000000010d940; ret; 
0x0000000010d99b: ja short 0x000000000010d9a0; ret; 
0x0000000010d9f5: ja short 0x000000000010da00; ret; 
0x0000000010d9e6: ja short 0x000000000010da18; mov eax, 0x106; syscall; 
0x0000000010dc2e: ja short 0x000000000010dc38; ret; 
0x0000000010e008: ja short 0x000000000010e060; ret; 
0x0000000010e0ad: ja short 0x000000000010e100; ret; 
0x0000000010e141: ja short 0x000000000010e148; ret; 
0x0000000010e171: ja short 0x000000000010e178; ret; 
0x0000000010e84d: ja short 0x000000000010e890; ret; 
0x0000000010e9cd: ja short 0x000000000010ea10; ret; 
0x00000000112817: ja short 0x0000000000112820; mov [rsi+0x66], dx; xor eax, eax; ret; 
0x0000000011299d: ja short 0x00000000001129f0; ret; 
0x00000000113020: ja short 0x0000000000113098; ret; 
0x000000001130e4: ja short 0x00000000001130f0; ret; 
0x00000000113129: ja short 0x0000000000113130; ret; 
0x00000000113230: ja short 0x0000000000113290; ret; 
0x000000001132e0: ja short 0x0000000000113340; ret; 
0x00000000113381: ja short 0x0000000000113388; ret; 
0x0000000011363e: ja short 0x0000000000113648; ret; 
0x00000000113674: ja short 0x0000000000113680; ret; 
0x000000001136b1: ja short 0x00000000001136b8; ret; 
0x00000000113727: ja short 0x0000000000113731; ret; 
0x00000000113770: ja short 0x000000000011377a; ret; 
0x00000000113b97: ja short 0x0000000000113be8; ret; 
0x00000000113daa: ja short 0x0000000000113db0; ret; 
0x00000000113deb: ja short 0x0000000000113df0; ret; 
0x000000001142d0: ja short 0x00000000001142f8; xor eax, eax; ret; 
0x0000000011441d: ja short 0x0000000000114470; ret; 
0x000000001144bd: ja short 0x0000000000114510; ret; 
0x00000000114563: ja short 0x00000000001145c8; ret; 
0x00000000114623: ja short 0x0000000000114688; ret; 
0x0000000011468c: ja short 0x000000000011469b; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x2]; mov rax, 0xffffffffffffffff; ret; 
0x00000000114bc8: ja short 0x0000000000114bca; add [rax], al; syscall; 
0x00000000114fb0: ja short 0x0000000000115020; ret; 
0x000000001151dd: ja short 0x0000000000115220; ret; 
0x0000000011529d: ja short 0x00000000001152e0; ret; 
0x0000000011535d: ja short 0x0000000000115360; ret; 
0x00000000116ae1: ja short 0x0000000000116ae8; ret; 
0x00000000116cc6: ja short 0x0000000000116cd0; ret; 
0x00000000116d01: ja short 0x0000000000116d08; ret; 
0x00000000116d31: ja short 0x0000000000116d38; ret; 
0x0000000011891c: ja short 0x0000000000118980; pop rbx; pop rbp; ret; 
0x00000000118a1d: ja short 0x0000000000118a70; ret; 
0x0000000011c4f8: ja short 0x000000000011c500; ret; 
0x0000000011f1d1: ja short 0x000000000011f1d8; ret; 
0x0000000011f276: ja short 0x000000000011f2e8; ret; 
0x0000000011f329: ja short 0x000000000011f330; ret; 
0x0000000011f460: ja short 0x000000000011f4c0; ret; 
0x0000000011f510: ja short 0x000000000011f570; ret; 
0x0000000011f5c0: ja short 0x000000000011f620; ret; 
0x0000000011f670: ja short 0x000000000011f6e8; ret; 
0x0000000011f73d: ja short 0x000000000011f790; ret; 
0x0000000011f805: ja short 0x000000000011f838; mov r8d, eax; mov eax, r8d; ret; 
0x0000000011f869: ja short 0x000000000011f870; ret; 
0x0000000012010d: ja short 0x0000000000120160; ret; 
0x000000001201dd: ja short 0x0000000000120230; ret; 
0x00000000120346: ja short 0x00000000001203b0; ret; 
0x00000000120400: ja short 0x0000000000120470; ret; 
0x000000001204bd: ja short 0x0000000000120510; ret; 
0x00000000120566: ja short 0x00000000001205d0; ret; 
0x0000000012061d: ja short 0x0000000000120670; ret; 
0x000000001206c0: ja short 0x0000000000120738; ret; 
0x00000000120b20: ja short 0x0000000000120b80; ret; 
0x00000000120bd0: ja short 0x0000000000120c38; ret; 
0x00000000120c80: ja short 0x0000000000120ce0; ret; 
0x00000000120ded: ja short 0x0000000000120dfc; movzx edi, di; lea rax, [rip+0x91887]; mov eax, [rax+rdi*4]; ret; 
0x00000000120ef0: ja short 0x0000000000120f50; ret; 
0x00000000120fa0: ja short 0x0000000000121010; ret; 
0x00000000121051: ja short 0x0000000000121058; ret; 
0x00000000121081: ja short 0x0000000000121088; ret; 
0x000000001210c1: ja short 0x00000000001210c8; ret; 
0x00000000121194: ja short 0x00000000001211a0; ret; 
0x000000001211d1: ja short 0x00000000001211d8; ret; 
0x00000000121201: ja short 0x0000000000121208; ret; 
0x00000000121234: ja short 0x0000000000121240; ret; 
0x00000000121271: ja short 0x0000000000121278; ret; 
0x0000000012e7e3: ja short 0x000000000012e7f0; ret; 
0x0000000012e7d7: ja short 0x000000000012e804; xor eax, eax; syscall; 
0x0000000012fa1b: ja short 0x000000000012fa25; mov rax, rdi; sar rax, 0x6; ret; 
0x0000000013c1a6: ja short 0x000000000013c1a9; ret; 
0x0000000013c462: ja short 0x000000000013c44c; mov eax, 0xffffffff; ret; 
0x00000000146145: ja short 0x000000000014618f; mov rdi, r8; mov rax, [rax+0x18]; jmp rax; 
0x0000000014738f: ja short 0x00000000001473d9; add esp, 0x28; pop rbx; pop rbp; ret; 
0x000000001491c5: ja short 0x00000000001491b0; mov [rdx+0x20], rsi; ret; 
0x0000000014919c: ja short 0x00000000001491b0; sub rcx, rsi; mov [rdx+0x58], rdi; mov [rdx+0x68], rcx; ret; 
0x00000000157406: ja short 0x0000000000157420; mov eax, r8d; ret; 
0x0000000015743e: ja short 0x0000000000157458; mov rax, r8; ret; 
0x00000000157d03: ja short 0x0000000000157d1d; mov dword ptr [rdi+0x28], 0x0; mov qword ptr [rdi+0x20], 0x0; ret; 
0x0000000015d13d: ja short 0x000000000015d150; cmp dx, cx; sete al; ret; 
0x00000000165fb1: ja short 0x0000000000165fb8; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166805: ja short 0x0000000000166876; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001699c5: ja short 0x0000000000169a06; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001842f8: ja short 0x00000000001842bd; nop [rax+rax]; xor eax, eax; vzeroupper; ret; 
0x00000000184ae4: ja short 0x0000000000184aa9; nop [rax+rax]; vzeroupper; xor eax, eax; ret; 
0x000000001889e5: ja short 0x00000000001889aa; nop [rax+rax]; mov rax, r8; vzeroupper; ret; 
0x000000001889f5: ja short 0x00000000001889ba; nop [rax+rax]; xor eax, eax; ret; 
0x00000000188978: ja short 0x00000000001889c2; add eax, edi; sub rax, rdx; vzeroupper; ret; 
0x00000000189b05: ja short 0x0000000000189aca; nop [rax+rax]; vzeroupper; ret; 
0x0000000018a57a: ja short 0x000000000018a53f; nop [rax]; mov [rdi], dl; vzeroupper; ret; 
0x0000000018a584: ja short 0x000000000018a549; nop [rax+rax]; mov [rdi], dx; vzeroupper; ret; 
0x0000000018b2ae: ja short 0x000000000018b273; mov [rdi], dl; vzeroupper; ret; 
0x0000000018b2b4: ja short 0x000000000018b279; nop [rax+rax]; mov [rdi], dx; vzeroupper; ret; 
0x0000000018b535: ja short 0x000000000018b4fa; nop [rax+rax]; mov rax, rdi; vzeroupper; ret; 
0x0000000018b658: ja short 0x000000000018b695; jb short 0x000000000018b661; movzx ecx, byte ptr [rsi]; mov [rdi], cl; ret; 
0x0000000018b89c: ja short 0x000000000018b8de; vmovdqu [rdi+0x60], ymm7; vmovdqu [r11], ymm8; vzeroupper; ret; 
0x0000000018b9b8: ja short 0x000000000018b9fa; vmovdqu [rdi+0x60], ymm7; vmovdqu [r11], ymm8; vzeroupper; ret; 
0x0000000018ba8d: ja short 0x000000000018ba9e; vmovdqu [rdi+rdx-0x20], ymm0; vmovdqu [rdi], ymm0; vzeroupper; ret; 
0x0000000018ba2d: ja short 0x000000000018baa7; vmovdqu [rdi+rdx-0x20], ymm0; vmovdqu [rdi], ymm0; vzeroupper; ret; 
0x0000000018bb4d: ja short 0x000000000018bb12; vmovdqu [rdi+rdx-0x10], xmm0; vmovdqu [rdi], xmm0; vzeroupper; ret; 
0x0000000018bb5b: ja short 0x000000000018bb20; mov [rdi+rdx-0x8], rcx; mov [rdi], rcx; vzeroupper; ret; 
0x0000000018bb67: ja short 0x000000000018bb2c; mov [rdi+rdx-0x4], ecx; mov [rdi], ecx; vzeroupper; ret; 
0x0000000018bb71: ja short 0x000000000018bb36; mov [rdi+rdx-0x2], cx; mov [rdi], cx; vzeroupper; ret; 
0x0000000018bb45: ja short 0x000000000018bb73; jb short 0x000000000018bb4b; mov [rdi], cl; vzeroupper; ret; 
0x0000000018cf3b: ja short 0x000000000018cf00; nop [rax]; xor eax, eax; vzeroupper; ret; 
0x0000000018d399: ja short 0x000000000018d35e; nop [rax+rax]; xor eax, eax; ret; 
0x0000000018fe97: ja short 0x000000000018fe92; vmovups [rdi-0x200], zmm15; ret; 
0x000000001903e8: ja short 0x000000000019043d; jb short 0x00000000001903f1; movzx ecx, byte ptr [rsi]; mov [rdi], cl; ret; 
0x000000001906b3: ja short 0x00000000001906b7; vmovdqu64 [rdi+0xc0], zmm7; vmovdqu64 [r11], zmm8; vzeroupper; ret; 
0x0000000019083d: ja short 0x0000000000190841; vmovdqu64 [rdi+0xc0], zmm7; vmovdqu64 [r11], zmm8; vzeroupper; ret; 
0x00000000190927: ja short 0x000000000019093b; vmovdqu64 [rdi+rdx-0x40], zmm0; vmovdqu64 [rdi], zmm0; vzeroupper; ret; 
0x00000000190a15: ja short 0x00000000001909da; vmovdqu [rdi+rdx-0x20], ymm0; vmovdqu [rdi], ymm0; vzeroupper; ret; 
0x00000000190a23: ja short 0x00000000001909e8; vmovdqu [rdi+rdx-0x10], xmm0; vmovdqu [rdi], xmm0; vzeroupper; ret; 
0x00000000190a31: ja short 0x00000000001909f6; mov [rdi+rdx-0x8], rcx; mov [rdi], rcx; vzeroupper; ret; 
0x00000000190a3d: ja short 0x0000000000190a02; mov [rdi+rdx-0x4], ecx; mov [rdi], ecx; vzeroupper; ret; 
0x00000000190a47: ja short 0x0000000000190a0c; mov [rdi+rdx-0x2], cx; mov [rdi], cx; vzeroupper; ret; 
0x00000000190a0d: ja short 0x0000000000190a49; jb short 0x0000000000190a13; mov [rdi], cl; vzeroupper; ret; 
0x0000000006c8fe: jae 0x000000000006c047; lea rsi, [rip+0x141551]; movsxd rax, [rsi+rcx*4]; add rax, rsi; notrack jmp rax; 
0x00000000089470: jae 0x0000000000089760; mov edx, r12d; mov rsi, rbp; mov rdi, r15; call qword ptr [r14+0x80]; 
0x0000000008925d: jae 0x0000000000089850; mov [rsp+0x10], rcx; xor edx, edx; mov rdi, r15; call qword ptr [r14+0x80]; 
0x00000000089193: jae 0x0000000000089870; lea rsi, [rsp+0x30]; mov rdi, r15; call qword ptr [r14+0x90]; 
0x0000000008e758: jae 0x000000000008e818; mov rdx, r13; mov rsi, r12; mov rdi, rbp; call qword ptr [r15+0x40]; 
0x0000000008ea9c: jae 0x000000000008edd0; xor edx, edx; mov rdi, rbp; call qword ptr [rax+0x80]; 
0x0000000008e93b: jae 0x000000000008ee08; lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax+0x90]; 
0x0000000008f18b: jae 0x000000000008f250; mov rdx, r13; mov rsi, r15; mov rdi, rbp; call qword ptr [rax+0x40]; 
0x0000000008f9de: jae 0x000000000008fa90; mov rdi, rbp; call qword ptr [r13+0x20]; 
0x00000000090bbc: jae 0x0000000000090d00; mov rdx, [rbx+0x40]; mov rdi, rbx; sub rdx, rsi; call qword ptr [rbp+0x70]; 
0x00000000090c96: jae 0x0000000000090d30; mov rax, [rsp+0x8]; mov esi, 0xffffffff; mov rdi, r8; call qword ptr [rax+0x18]; 
0x0000000016de39: jae 0x000000000016dee0; lea r11, [rip+0x501ba]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000184c99: jae 0x0000000000184f30; xor eax, eax; vzeroupper; ret; 
0x0000000018bc4d: jae 0x000000000018be70; xor eax, eax; vzeroupper; ret; 
0x00000000024adf: jae short 0x0000000000024afd; add [rbp+rcx*4+0x7b], cl; jmp qword ptr [rbp+rax*2-0x75]; 
0x00000000035d09: jae short 0x0000000000035d87; sbb eax, [rax]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000042249: jae short 0x0000000000042260; mov rax, [rip+0x1a9c1e]; mov dword ptr fs:[rax], 0x22; add rsp, 0x8; ret; 
0x0000000004256f: jae short 0x0000000000042588; mov rax, [rip+0x1a98f8]; mov dword ptr fs:[rax], 0x22; add rsp, 0x8; ret; 
0x00000000042c6d: jae short 0x0000000000042caf; xor eax, eax; pop rbx; ret; 
0x00000000042c90: jae short 0x0000000000042cd2; pop rbx; ret; 
0x00000000043411: jae short 0x0000000000043414; ret; 
0x00000000043a01: jae short 0x0000000000043a04; ret; 
0x00000000054f37: jae short 0x0000000000054f3c; xor eax, eax; ret; 
0x00000000056462: jae short 0x00000000000564ad; shr ecx, cl; mov [rdi], r9; ret; 
0x0000000005b3d0: jae short 0x000000000005b380; mov rax, r10; pop rbx; ret; 
0x0000000005b658: jae short 0x000000000005b63c; mov rax, r8; ret; 
0x00000000084ed0: jae short 0x0000000000084f1a; mov edi, ebx; call qword ptr [rbp+0x68]; 
0x000000000855b7: jae short 0x00000000000855c8; lea rcx, [rdx+0x4]; mov [rax], rcx; mov eax, [rdx]; ret; 
0x00000000085741: jae short 0x0000000000085750; lea rcx, [rdx+0x4]; mov [rax], rcx; mov eax, [rdx]; ret; 
0x000000000860ed: jae short 0x0000000000086100; lea rsi, [rcx+0x4]; mov [rdx+0x20], rsi; mov [rcx], eax; ret; 
0x00000000086294: jae short 0x00000000000862a8; lea rsi, [rcx+0x4]; mov [rdx+0x20], rsi; mov [rcx], eax; ret; 
0x00000000088070: jae short 0x0000000000088075; mov r8d, [rax]; mov eax, r8d; ret; 
0x00000000088a9a: jae short 0x0000000000088aac; mov rdx, [rbx+0x40]; mov rdi, rbx; sub rdx, rsi; call qword ptr [rax+0x70]; 
0x00000000088f18: jae short 0x0000000000088f75; mov rax, [rsp+0x8]; mov esi, 0xffffffff; mov rdi, r8; call qword ptr [rax+0x18]; 
0x0000000008a5d9: jae short 0x000000000008a61b; xor r8d, r8d; mov rdi, r13; lea r9, [rsp+0x18]; call rbp; 
0x0000000008a6c8: jae short 0x000000000008a6d2; xor r8d, r8d; mov rdi, r13; lea r9, [rsp+0x18]; call rbp; 
0x0000000008df7c: jae short 0x000000000008df90; lea rdx, [rax+0x1]; mov [rdi+0x8], rdx; movzx eax, byte ptr [rax]; ret; 
0x0000000008dfb6: jae short 0x000000000008dfc8; lea rdx, [rax+0x1]; mov [rdi+0x8], rdx; movzx eax, byte ptr [rax]; ret; 
0x000000000939b1: jae short 0x00000000000939d8; movzx eax, byte ptr [rax]; ret; 
0x0000000009c21c: jae short 0x000000000009c240; lea rax, [rax-0x8]; ret; 
0x000000000d41f1: jae short 0x00000000000d41f4; ret; 
0x000000000d4221: jae short 0x00000000000d4224; ret; 
0x000000000d4ad4: jae short 0x00000000000d4ae7; add [rbp+0x31], al; ror byte ptr [rcx-0x3f76b3fe], 0x48; add esp, 0x8; ret; 
0x000000000da965: jae short 0x00000000000da9bf; or eax, 0xc2894400; movsxd rax, [rcx+rdx*4]; add rax, rcx; notrack jmp rax; 
0x000000000e2b81: jae short 0x00000000000e2b84; ret; 
0x000000000e2dd1: jae short 0x00000000000e2dd4; ret; 
0x000000000e31b1: jae short 0x00000000000e31b4; ret; 
0x000000000e4155: jae short 0x00000000000e4157; add [rax], al; syscall; 
0x000000000e4161: jae short 0x00000000000e4164; ret; 
0x000000000e43b1: jae short 0x00000000000e43b4; ret; 
0x000000000e43e1: jae short 0x00000000000e43e4; ret; 
0x000000000e4441: jae short 0x00000000000e4444; ret; 
0x000000000e4471: jae short 0x00000000000e4474; ret; 
0x000000000e44a1: jae short 0x00000000000e44a4; ret; 
0x000000000e44d1: jae short 0x00000000000e44d4; ret; 
0x000000000ec41c: jae short 0x00000000000ec3e4; or [r9], r8b; mov eax, 0x1; ret; 
0x00000000102691: jae short 0x0000000000102694; ret; 
0x000000001026c1: jae short 0x00000000001026c4; ret; 
0x000000001026f1: jae short 0x00000000001026f4; ret; 
0x00000000102721: jae short 0x0000000000102724; ret; 
0x00000000102751: jae short 0x0000000000102754; ret; 
0x00000000102781: jae short 0x0000000000102784; ret; 
0x000000001027b1: jae short 0x00000000001027b4; ret; 
0x000000001027e1: jae short 0x00000000001027e4; ret; 
0x0000000010d411: jae short 0x000000000010d414; ret; 
0x0000000010da41: jae short 0x000000000010da44; ret; 
0x0000000010da71: jae short 0x000000000010da74; ret; 
0x0000000010dba1: jae short 0x000000000010dba4; ret; 
0x0000000010dbd1: jae short 0x000000000010dbd4; ret; 
0x0000000010dc91: jae short 0x000000000010dc94; ret; 
0x0000000010dcc1: jae short 0x000000000010dcc4; ret; 
0x0000000010e5b1: jae short 0x000000000010e5b4; ret; 
0x0000000010e8d1: jae short 0x000000000010e8d4; ret; 
0x0000000010e901: jae short 0x000000000010e904; ret; 
0x0000000010e931: jae short 0x000000000010e934; ret; 
0x0000000010e961: jae short 0x000000000010e964; ret; 
0x0000000010e991: jae short 0x000000000010e994; ret; 
0x0000000010ea51: jae short 0x000000000010ea54; ret; 
0x0000000010ea81: jae short 0x000000000010ea84; ret; 
0x0000000010f3a1: jae short 0x000000000010f3a4; ret; 
0x0000000010f3d1: jae short 0x000000000010f3d4; ret; 
0x0000000010f401: jae short 0x000000000010f404; ret; 
0x0000000010f434: jae short 0x000000000010f437; ret; 
0x0000000010fbf1: jae short 0x000000000010fbf4; ret; 
0x0000000010fc24: jae short 0x000000000010fc27; ret; 
0x0000000010fc51: jae short 0x000000000010fc54; ret; 
0x0000000010fc81: jae short 0x000000000010fc84; ret; 
0x0000000010fcb1: jae short 0x000000000010fcb4; ret; 
0x0000000010fce4: jae short 0x000000000010fce7; ret; 
0x0000000010fd11: jae short 0x000000000010fd14; ret; 
0x0000000010fd41: jae short 0x000000000010fd44; ret; 
0x0000000010fd71: jae short 0x000000000010fd74; ret; 
0x00000000112fe4: jae short 0x0000000000112fe7; ret; 
0x00000000113b59: jae short 0x0000000000113b63; add [rax], al; add rsp, 0x18; ret; 
0x00000000113e21: jae short 0x0000000000113e24; ret; 
0x00000000114221: jae short 0x0000000000114224; ret; 
0x000000001143e1: jae short 0x00000000001143e4; ret; 
0x00000000114e21: jae short 0x0000000000114e24; ret; 
0x00000000114f71: jae short 0x0000000000114f74; ret; 
0x00000000115171: jae short 0x0000000000115174; ret; 
0x000000001151a1: jae short 0x00000000001151a4; ret; 
0x00000000115261: jae short 0x0000000000115264; ret; 
0x00000000115321: jae short 0x0000000000115324; ret; 
0x00000000115661: jae short 0x0000000000115664; ret; 
0x00000000115691: jae short 0x0000000000115694; ret; 
0x000000001156c1: jae short 0x00000000001156c4; ret; 
0x00000000118773: jae short 0x0000000000118776; ret; 
0x000000001189b1: jae short 0x00000000001189b4; ret; 
0x000000001189e1: jae short 0x00000000001189e4; ret; 
0x00000000118ab1: jae short 0x0000000000118ab4; ret; 
0x00000000118ae1: jae short 0x0000000000118ae4; ret; 
0x00000000118b14: jae short 0x0000000000118b17; ret; 
0x00000000118b41: jae short 0x0000000000118b44; ret; 
0x00000000118b71: jae short 0x0000000000118b74; ret; 
0x00000000118ba1: jae short 0x0000000000118ba4; ret; 
0x00000000118bd1: jae short 0x0000000000118bd4; ret; 
0x00000000119319: jae short 0x00000000001192a5; hlt; call far fword ptr [rdx+0x5e]; 
0x0000000011baa6: jae short 0x000000000011bac8; mov rsi, r12; mov rdi, r15; call r14; 
0x0000000011cdd4: jae short 0x000000000011cdd7; ret; 
0x0000000011ce01: jae short 0x000000000011ce04; ret; 
0x0000000011ce31: jae short 0x000000000011ce34; ret; 
0x0000000011ce64: jae short 0x000000000011ce67; ret; 
0x0000000011ce94: jae short 0x000000000011ce97; ret; 
0x0000000011cec1: jae short 0x000000000011cec4; ret; 
0x0000000011cef4: jae short 0x000000000011cef7; ret; 
0x0000000011cf21: jae short 0x000000000011cf24; ret; 
0x0000000011cf51: jae short 0x000000000011cf54; ret; 
0x0000000011cf84: jae short 0x000000000011cf87; ret; 
0x0000000011cfb1: jae short 0x000000000011cfb4; ret; 
0x0000000011cfe4: jae short 0x000000000011cfe7; ret; 
0x0000000011f021: jae short 0x000000000011f024; ret; 
0x0000000011f051: jae short 0x000000000011f054; ret; 
0x0000000011f1a1: jae short 0x000000000011f1a4; ret; 
0x0000000011f201: jae short 0x000000000011f204; ret; 
0x0000000011f231: jae short 0x000000000011f234; ret; 
0x0000000011f361: jae short 0x000000000011f364; ret; 
0x0000000011f3f4: jae short 0x000000000011f3f7; ret; 
0x0000000011f421: jae short 0x000000000011f424; ret; 
0x0000000011f941: jae short 0x000000000011f944; ret; 
0x0000000011f971: jae short 0x000000000011f974; ret; 
0x0000000011f9b4: jae short 0x000000000011f9b7; ret; 
0x0000000011f9e1: jae short 0x000000000011f9e4; ret; 
0x0000000011fa11: jae short 0x000000000011fa14; ret; 
0x0000000011fa41: jae short 0x000000000011fa44; ret; 
0x0000000011fa71: jae short 0x000000000011fa74; ret; 
0x0000000011faa1: jae short 0x000000000011faa4; ret; 
0x0000000011fad1: jae short 0x000000000011fad4; ret; 
0x0000000011fb01: jae short 0x000000000011fb04; ret; 
0x0000000011fb34: jae short 0x000000000011fb37; ret; 
0x0000000011fb61: jae short 0x000000000011fb64; ret; 
0x0000000011fb94: jae short 0x000000000011fb97; ret; 
0x0000000011fbc1: jae short 0x000000000011fbc4; ret; 
0x0000000011fbf1: jae short 0x000000000011fbf4; ret; 
0x0000000011fc21: jae short 0x000000000011fc24; ret; 
0x0000000011fc51: jae short 0x000000000011fc54; ret; 
0x0000000011fc81: jae short 0x000000000011fc84; ret; 
0x0000000011fcb4: jae short 0x000000000011fcb7; ret; 
0x0000000011fce4: jae short 0x000000000011fce7; ret; 
0x0000000011fd11: jae short 0x000000000011fd14; ret; 
0x0000000011fd41: jae short 0x000000000011fd44; ret; 
0x0000000011fd74: jae short 0x000000000011fd77; ret; 
0x0000000011fda4: jae short 0x000000000011fda7; ret; 
0x0000000011fdd4: jae short 0x000000000011fdd7; ret; 
0x0000000011fe01: jae short 0x000000000011fe04; ret; 
0x0000000011fe31: jae short 0x000000000011fe34; ret; 
0x0000000011fe61: jae short 0x000000000011fe64; ret; 
0x0000000011fe91: jae short 0x000000000011fe94; ret; 
0x0000000011fec4: jae short 0x000000000011fec7; ret; 
0x0000000011fef1: jae short 0x000000000011fef4; ret; 
0x0000000011ff21: jae short 0x000000000011ff24; ret; 
0x0000000011ff54: jae short 0x000000000011ff57; ret; 
0x0000000011ff81: jae short 0x000000000011ff84; ret; 
0x0000000011ffb4: jae short 0x000000000011ffb7; ret; 
0x0000000011ffe4: jae short 0x000000000011ffe7; ret; 
0x00000000120011: jae short 0x0000000000120014; ret; 
0x00000000120041: jae short 0x0000000000120044; ret; 
0x00000000120071: jae short 0x0000000000120074; ret; 
0x000000001200b1: jae short 0x00000000001200b4; ret; 
0x000000001201a1: jae short 0x00000000001201a4; ret; 
0x00000000120271: jae short 0x0000000000120274; ret; 
0x000000001202a1: jae short 0x00000000001202a4; ret; 
0x000000001202d4: jae short 0x00000000001202d7; ret; 
0x00000000120301: jae short 0x0000000000120304; ret; 
0x00000000120784: jae short 0x0000000000120787; ret; 
0x000000001207b1: jae short 0x00000000001207b4; ret; 
0x000000001207e1: jae short 0x00000000001207e4; ret; 
0x00000000120814: jae short 0x0000000000120817; ret; 
0x00000000121d2c: jae short 0x0000000000121d3a; mov rdx, [rip+0xcdd23]; add word ptr [rdx+rax*2], 0x1; ret; 
0x0000000012c90d: jae short 0x000000000012c987; mov [rbp-0x80], edx; mov rdx, r13; movups [rbp-0x78], xmm6; call rax; 
0x0000000012ce87: jae short 0x000000000012ce98; cmp [rax+0x8], rdi; jne short 0x000000000012ce80; mov rax, [rax+0x30]; ret; 
0x00000000138409: jae short 0x000000000013840d; add [rcx+rcx*4-0x19], cl; call rbx; 
0x0000000013b93e: jae short 0x000000000013b953; mov eax, 0xffffffff; ret; 
0x0000000013c790: jae short 0x000000000013c79b; shl rsi, 0x4; lea r8, [rdi+rsi+0x8]; mov rax, r8; ret; 
0x00000000147626: jae short 0x0000000000147638; mov rdi, rbp; mov [rbx], rax; xor eax, eax; call qword ptr [rbx+0x18]; 
0x000000001476e8: jae short 0x000000000014770a; mov rdi, rbp; mov r12d, eax; xor eax, eax; call qword ptr [rbx+0x28]; 
0x00000000148c86: jae short 0x0000000000148c98; mov rdx, r12; mov rdi, r14; call qword ptr [rax+0x10]; 
0x00000000148cc0: jae short 0x0000000000148cd2; mov rdx, r12; mov rdi, r14; call qword ptr [rax+0x20]; 
0x00000000149ce9: jae short 0x0000000000149d0b; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000014e836: jae short 0x000000000014e850; mov rdi, rbp; call qword ptr [rax+0x48]; 
0x00000000151996: jae short 0x00000000001519e0; add esp, 0x10; pop r12; ret; 
0x00000000157559: jae short 0x0000000000157568; xor r8d, r8d; mov eax, r8d; ret; 
0x000000001586a4: jae short 0x00000000001586a3; jmp qword ptr [rsi+0xf]; 
0x0000000015f729: jae short 0x000000000015f710; mov eax, 0x1; ret; 
0x00000000166415: jae short 0x000000000016641d; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000183aaa: jae short 0x0000000000183aa0; movsxd rcx, ecx; add rax, rcx; sub rax, rdi; ret; 
0x000000000b8133: jb 0x00000000000b7580; lea r11, [rip+0xf70d0]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b761e: jb 0x00000000000b7580; lea r11, [rip+0xf7be5]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b75ff: jb 0x00000000000b7580; lea r11, [rip+0xf7c04]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b809d: jb 0x00000000000b7649; movdqu [rdi+0x30], xmm7; ret; 
0x000000000b9983: jb 0x00000000000b8c60; lea r11, [rip+0xf5a60]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8cfe: jb 0x00000000000b8c60; lea r11, [rip+0xf66e5]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8cdf: jb 0x00000000000b8c60; lea r11, [rip+0xf6704]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b98ed: jb 0x00000000000b8d29; movdqu [rdi+0x30], xmm7; lea rax, [rdi+0x40]; ret; 
0x000000000bb3e3: jb 0x00000000000bab20; lea r11, [rip+0xf41d4]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000babbe: jb 0x00000000000bab20; lea r11, [rip+0xf49f9]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000bab9f: jb 0x00000000000bab20; lea r11, [rip+0xf4a18]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000bb34d: jb 0x00000000000babe9; movdqu [rdi+0x30], xmm7; xor ch, ch; mov [rdi+0x40], ch; ret; 
0x000000000bbc0f: jb 0x00000000000bbd78; mov rcx, rdx; rep movsb [rdi], [rsi]; ret; 
0x0000000012167c: jb 0x00000000001215f8; mov rsi, r9; mov edi, r12d; mov eax, r14d; syscall; 
0x00000000189a10: jb 0x00000000001897f5; vmovdqu [rdi+0x60], ymm7; mov byte ptr [rdi+0x80], 0x0; vzeroupper; ret; 
0x0000000018a710: jb 0x000000000018a325; vmovdqu [rdi+0x60], ymm7; vzeroupper; ret; 
0x0000000018b440: jb 0x000000000018b055; vmovdqu [rdi+0x60], ymm7; lea rax, [rdi+0x80]; vzeroupper; ret; 
0x0000000018b63a: jb 0x000000000018b805; mov rcx, rdx; rep movsb [rdi], [rsi]; ret; 
0x000000001903c5: jb 0x0000000000190600; mov rcx, rdx; rep movsb [rdi], [rsi]; ret; 
0x00000000048327: jb short 0x0000000000048305; xor eax, eax; ret; 
0x0000000005b18d: jb short 0x000000000005b18b; dec dword ptr [rcx-0x77]; ret; 
0x000000000610da: jb short 0x00000000000610b2; sbb [rax], al; syscall; 
0x000000000740bb: jb short 0x00000000000740c3; add [rax], al; movsxd rax, [r14+rax*4]; add rax, r14; notrack jmp rax; 
0x000000000860f5: jb short 0x0000000000086117; mov [rcx], eax; ret; 
0x0000000008629c: jb short 0x00000000000862be; mov [rcx], eax; ret; 
0x0000000008d33c: jb short 0x000000000008d370; mov [rdi+0x18], rax; mov [rsi], rax; xor eax, eax; ret; 
0x0000000008d79c: jb short 0x000000000008d7e0; mov [rdi+0x18], rax; mov [rsi], rax; xor eax, eax; ret; 
0x0000000009c213: jb short 0x000000000009c240; cmp rcx, [rip+0x152c74]; jae short 0x000000000009c240; lea rax, [rax-0x8]; ret; 
0x0000000009ef52: jb short 0x000000000009ef60; mov [rdi], rsi; ret; 
0x0000000009ef93: jb short 0x000000000009ef9c; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000009f273: jb short 0x000000000009f286; lea rax, [rip+0x1c633]; cmovne rax, rdx; ret; 
0x0000000009f863: jb short 0x000000000009f876; lea rax, [rip+0x1c0f3]; cmovne rax, rdx; ret; 
0x0000000009fb23: jb short 0x000000000009fb36; lea rax, [rip+0x1bee3]; cmovne rax, rdx; ret; 
0x000000000a047a: jb short 0x00000000000a043f; add [rax], al; lea rdx, [rip+0xf08fb]; cmovne rax, rdx; ret; 
0x000000000a162b: jb short 0x00000000000a163b; sub al, bl; ret; 
0x000000000b75e1: jb short 0x00000000000b7580; lea r11, [rip+0xf7c26]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b75b1: jb short 0x00000000000b7580; lea r11, [rip+0xf7c56]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b800e: jb short 0x00000000000b801f; add [rbx+0x63], cl; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b802e: jb short 0x00000000000b803f; add [rbx+0x63], cl; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8044: jb short 0x00000000000b8055; add [rbx+0x63], cl; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8cc1: jb short 0x00000000000b8c60; lea r11, [rip+0xf6726]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8c91: jb short 0x00000000000b8c60; lea r11, [rip+0xf6756]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8e7a: jb short 0x00000000000b8e85; add [rax], al; ret; 
0x000000000bab81: jb short 0x00000000000bab20; lea r11, [rip+0xf4a3a]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000bab51: jb short 0x00000000000bab20; lea r11, [rip+0xf4a6a]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000bbb7d: jb short 0x00000000000bbb82; rep movsb [rdi], [rsi]; ret; 
0x000000000bbc2a: jb short 0x00000000000bbc31; movzx ecx, byte ptr [rsi]; mov [rdi], cl; ret; 
0x000000000bbc29: jb short 0x00000000000bbc31; movzx ecx, byte ptr [rsi]; mov [rdi], cl; ret; 
0x000000000bc069: jb short 0x00000000000bc06d; mov [rdi], cl; ret; 
0x000000000bdfb3: jb short 0x00000000000bdfbe; lea rax, [rip+0x11923]; lea rdx, [rip+0x116fc]; cmovne rax, rdx; ret; 
0x000000000c6b72: jb short 0x00000000000c6b10; mov r9d, 0xffffffff; mov eax, r9d; pop rbx; ret; 
0x000000000e4f85: jb short 0x00000000000e4fd0; cmp eax, eax; jne short 0x00000000000e4ffd; mov eax, 0x7d00; ret; 
0x000000001028df: jb short 0x00000000001028e9; setne al; movzx eax, al; neg eax; ret; 
0x0000000010ce17: jb short 0x000000000010ce16; inc dword ptr [rbx-0x307c0036]; dec dword ptr [rcx+0x75b8c6]; add [rax], al; syscall; 
0x0000000010ce40: jb short 0x000000000010ce3f; inc dword ptr [rbx-0x307c0036]; dec dword ptr [rcx+0x77b8c6]; add [rax], al; syscall; 
0x0000000010d283: jb short 0x000000000010d206; lea rax, [rip-0xbd]; cmove rax, rdx; ret; 
0x00000000114a43: jb short 0x0000000000114a45; add [rax], al; syscall; 
0x000000001187ca: jb short 0x0000000000118775; cld; jmp qword ptr [rsi-0x70]; 
0x00000000121c73: jb short 0x0000000000121c88; mov qword ptr [rip+0xca6e0], 0x2; ret; 
0x00000000122087: jb short 0x0000000000122091; seta al; movzx eax, al; neg eax; ret; 
0x0000000012313b: jb short 0x000000000012314d; lea rdx, [rdx+rsi*4]; add eax, [rdx+rcx]; ret; 
0x000000001231a3: jb short 0x00000000001231b5; lea rdx, [rdx+rsi*4]; add eax, [rdx+rcx]; ret; 
0x00000000123a8b: jb short 0x0000000000123a9d; lea rdx, [rdx+rsi*4]; add eax, [rdx+rcx]; ret; 
0x00000000123aeb: jb short 0x0000000000123afd; lea rdx, [rdx+rsi*4]; add eax, [rdx+rcx]; ret; 
0x0000000012768f: jb short 0x00000000001276a0; mov eax, 0x1; ret; 
0x0000000012dd9a: jb short 0x000000000012dde4; out dx, eax; jmp qword ptr [rsi-0x70]; 
0x0000000012ecca: jb short 0x000000000012eca9; clc; jmp qword ptr [rsi-0x70]; 
0x0000000012f52a: jb short 0x000000000012f513; clc; jmp qword ptr [rsi-0x70]; 
0x00000000131872: jb short 0x000000000013185b; or eax, [rax]; syscall; 
0x000000001331ea: jb short 0x00000000001331bb; or eax, [rax]; syscall; 
0x0000000013850b: jb short 0x000000000013850f; add [rax-0x75], cl; add al, 0x24; mov rdi, r12; call rax; 
0x0000000013c503: jb short 0x000000000013c4ed; mov eax, 0xffffffff; pop rbx; ret; 
0x000000001491c9: jb short 0x00000000001491eb; ret; 
0x000000001491c3: jb short 0x00000000001491ed; ja short 0x00000000001491b0; mov [rdx+0x20], rsi; ret; 
0x00000000152cea: jb short 0x0000000000152cf4; mov rdi, rbp; call qword ptr [rdx+0x10]; 
0x00000000156d75: jb short 0x0000000000156dbf; mov eax, [rbp+0x8]; lea rsi, [rsp+0x4]; mov rdi, rbp; call qword ptr [rax+0x40]; 
0x00000000156e65: jb short 0x0000000000156eaf; mov eax, [rbp+0x8]; lea rsi, [rsp+0x4]; mov rdi, rbp; call qword ptr [rax+0x40]; 
0x00000000156f55: jb short 0x0000000000156f9f; mov eax, [rbp+0x8]; lea rsi, [rsp+0x4]; mov rdi, rbp; call qword ptr [rax+0x40]; 
0x00000000157045: jb short 0x000000000015708f; mov eax, [rbp+0x8]; lea rsi, [rsp+0x4]; mov rdi, rbp; call qword ptr [rax+0x40]; 
0x00000000160cb4: jb short 0x0000000000160c95; mov [rip+0x8e1db], r8; xor eax, eax; mov [rip+0x8e1ca], rsi; ret; 
0x000000001662ee: jb short 0x00000000001662f7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016634d: jb short 0x000000000016635d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000016639e: jb short 0x00000000001663a7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001663fb: jb short 0x0000000000166406; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000016643e: jb short 0x0000000000166447; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016649d: jb short 0x00000000001664ad; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x000000001664c8: jb short 0x00000000001664cf; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001664ee: jb short 0x00000000001664f7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016654b: jb short 0x0000000000166556; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000166566: jb short 0x000000000016656d; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016658e: jb short 0x0000000000166597; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001665ed: jb short 0x00000000001665fd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000016663e: jb short 0x0000000000166647; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016669b: jb short 0x00000000001666a6; movaps [rdi], xmm4; notrack jmp r9; 
0x000000001666de: jb short 0x00000000001666e7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016673d: jb short 0x000000000016674d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000016678e: jb short 0x0000000000166797; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001667eb: jb short 0x00000000001667f6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000016682e: jb short 0x0000000000166837; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016688d: jb short 0x000000000016689d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x000000001668de: jb short 0x00000000001668e7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016693b: jb short 0x0000000000166946; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000016697e: jb short 0x0000000000166987; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001669dd: jb short 0x00000000001669ed; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000166a2e: jb short 0x0000000000166a37; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000166a8b: jb short 0x0000000000166a96; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000166ace: jb short 0x0000000000166ad7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000166b2d: jb short 0x0000000000166b3d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000166b7e: jb short 0x0000000000166b87; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000166bdb: jb short 0x0000000000166be6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000166c1e: jb short 0x0000000000166c27; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000166c7b: jb short 0x0000000000166c90; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000166cce: jb short 0x0000000000166cd7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000166d2b: jb short 0x0000000000166d36; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000166d6e: jb short 0x0000000000166d77; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000166dcd: jb short 0x0000000000166ddd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000166e1e: jb short 0x0000000000166e27; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000166e7b: jb short 0x0000000000166e86; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000166ebe: jb short 0x0000000000166ec7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000166f1d: jb short 0x0000000000166f2d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000166f6e: jb short 0x0000000000166f77; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000166fcb: jb short 0x0000000000166fd6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000016700e: jb short 0x0000000000167017; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016706d: jb short 0x000000000016707d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x000000001670be: jb short 0x00000000001670c7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016711b: jb short 0x0000000000167126; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000016715e: jb short 0x0000000000167167; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001671bd: jb short 0x00000000001671cd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000016720e: jb short 0x0000000000167217; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016726b: jb short 0x0000000000167276; movaps [rdi], xmm4; notrack jmp r9; 
0x000000001672ac: jb short 0x00000000001672b7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001672ae: jb short 0x00000000001672b7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016730d: jb short 0x000000000016731d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000016735c: jb short 0x0000000000167367; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016735e: jb short 0x0000000000167367; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001673bb: jb short 0x00000000001673c6; movaps [rdi], xmm4; notrack jmp r9; 
0x000000001673fe: jb short 0x0000000000167407; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016745d: jb short 0x000000000016746d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x000000001674ae: jb short 0x00000000001674b7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016750b: jb short 0x0000000000167516; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000016754e: jb short 0x0000000000167557; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001675ad: jb short 0x00000000001675bd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x000000001675fe: jb short 0x0000000000167607; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016765b: jb short 0x0000000000167666; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000168cce: jb short 0x0000000000168cd7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000168d2d: jb short 0x0000000000168d3d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000168d7e: jb short 0x0000000000168d87; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000168ddb: jb short 0x0000000000168de6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000168e1e: jb short 0x0000000000168e27; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000168e7d: jb short 0x0000000000168e8d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000168ece: jb short 0x0000000000168ed7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000168f2b: jb short 0x0000000000168f36; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000168f6e: jb short 0x0000000000168f77; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000168fcd: jb short 0x0000000000168fdd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000016901e: jb short 0x0000000000169027; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016907b: jb short 0x0000000000169086; movaps [rdi], xmm4; notrack jmp r9; 
0x000000001690be: jb short 0x00000000001690c7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016911d: jb short 0x000000000016912d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000016916e: jb short 0x0000000000169177; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001691cb: jb short 0x00000000001691d6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000016920e: jb short 0x0000000000169217; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016926d: jb short 0x000000000016927d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x000000001692be: jb short 0x00000000001692c7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016931b: jb short 0x0000000000169326; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000016935e: jb short 0x0000000000169367; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001693bd: jb short 0x00000000001693cd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000016940e: jb short 0x0000000000169417; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016946b: jb short 0x0000000000169476; movaps [rdi], xmm4; notrack jmp r9; 
0x000000001694ae: jb short 0x00000000001694b7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016950d: jb short 0x000000000016951d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000016955e: jb short 0x0000000000169567; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001695bb: jb short 0x00000000001695c6; movaps [rdi], xmm4; notrack jmp r9; 
0x000000001695fe: jb short 0x0000000000169607; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016965b: jb short 0x0000000000169670; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x000000001696ae: jb short 0x00000000001696b7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016970b: jb short 0x0000000000169716; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000016974e: jb short 0x0000000000169757; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001697ad: jb short 0x00000000001697bd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x000000001697fe: jb short 0x0000000000169807; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016985b: jb short 0x0000000000169866; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000016989e: jb short 0x00000000001698a7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001698fd: jb short 0x000000000016990d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000016994e: jb short 0x0000000000169957; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001699ab: jb short 0x00000000001699b6; movaps [rdi], xmm4; notrack jmp r9; 
0x000000001699ee: jb short 0x00000000001699f7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000169a4d: jb short 0x0000000000169a5d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000169a9e: jb short 0x0000000000169aa7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000169afb: jb short 0x0000000000169b06; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000169b3e: jb short 0x0000000000169b47; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000169b9d: jb short 0x0000000000169bad; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000169bee: jb short 0x0000000000169bf7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000169c4b: jb short 0x0000000000169c56; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000169c8e: jb short 0x0000000000169c97; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000169c8c: jb short 0x0000000000169c97; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000169ced: jb short 0x0000000000169cfd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000169d3e: jb short 0x0000000000169d47; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000169d3c: jb short 0x0000000000169d47; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000169d9b: jb short 0x0000000000169da6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000169dde: jb short 0x0000000000169de7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000169e3d: jb short 0x0000000000169e4d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000169e8e: jb short 0x0000000000169e97; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000169eeb: jb short 0x0000000000169ef6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000169f2e: jb short 0x0000000000169f37; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000169f8d: jb short 0x0000000000169f9d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000169fde: jb short 0x0000000000169fe7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016a03b: jb short 0x000000000016a046; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000017c9ea: jb short 0x000000000017c9ee; add [rax], al; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x0000000018b65a: jb short 0x000000000018b661; movzx ecx, byte ptr [rsi]; mov [rdi], cl; ret; 
0x0000000018bb47: jb short 0x000000000018bb4b; mov [rdi], cl; vzeroupper; ret; 
0x0000000018fa72: jb short 0x000000000018fa78; mov cl, [rsi]; mov [rdi], cl; ret; 
0x000000001900e9: jb short 0x00000000001900fa; vmovups [rdi], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x000000001900fd: jb short 0x0000000000190109; vmovdqu [rdi], ymm2; vmovdqu [rsi-0x20], ymm2; ret; 
0x00000000190116: jb short 0x0000000000190122; vmovq [rdi], xmm0; vmovq [rsi-0x8], xmm0; ret; 
0x00000000190129: jb short 0x0000000000190131; mov [rdi], ecx; mov [rsi-0x4], ecx; ret; 
0x00000000190134: jb short 0x000000000019013e; mov [rdi], cx; mov [rsi-0x2], cx; ret; 
0x00000000190141: jb short 0x0000000000190145; mov [rdi], cl; ret; 
0x000000001903ea: jb short 0x00000000001903f1; movzx ecx, byte ptr [rsi]; mov [rdi], cl; ret; 
0x00000000190a0f: jb short 0x0000000000190a13; mov [rdi], cl; vzeroupper; ret; 
0x000000000756aa: jbe 0x0000000000075f77; mov rdx, r13; mov rsi, r10; mov rdi, r15; call qword ptr [rax+0x38]; 
0x00000000074f49: jbe 0x0000000000075ffc; mov rdx, r13; mov rsi, r10; mov rdi, r15; call qword ptr [rbx+0x38]; 
0x000000000753db: jbe 0x0000000000076163; mov rdx, rbx; mov rsi, r12; mov rdi, r15; call qword ptr [rax+0x38]; 
0x00000000074ca6: jbe 0x000000000007617b; mov rdx, r13; mov rsi, r12; mov rdi, r15; call qword ptr [rax+0x38]; 
0x0000000007597a: jbe 0x0000000000076390; mov rdx, rbx; mov rsi, r12; mov rdi, r15; call qword ptr [rcx+0x38]; 
0x00000000077c13: jbe 0x0000000000078940; lea rax, [rip-0x10dd]; mov r10, rdx; mov dword ptr [rbp-0x51c], 0x1; jmp rax; 
0x00000000079f73: jbe 0x000000000007a078; movsxd rdx, r13d; mov rdi, rbx; call qword ptr [r14+0x38]; 
0x0000000007e1fa: jbe 0x000000000007f1d0; lea rax, [rip-0xfac]; mov r9, rcx; mov dword ptr [rbp-0x510], 0x1; jmp rax; 
0x00000000080482: jbe 0x0000000000080580; movsxd rdx, ebp; mov rdi, rbx; call qword ptr [r14+0x38]; 
0x00000000081cf1: jbe 0x0000000000081df0; mov rsi, rsp; mov rdi, rbp; call qword ptr [rbx+0x90]; 
0x00000000081e63: jbe 0x0000000000081fc0; xor esi, esi; mov rdi, rbp; call qword ptr [rbx+0x10]; 
0x0000000008224f: jbe 0x000000000008235b; xor esi, esi; mov edx, 0x2; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x00000000082da8: jbe 0x0000000000082e30; mov rdx, r12; mov rsi, rbp; mov rdi, rbx; call qword ptr [r13+0x38]; 
0x000000000833de: jbe 0x00000000000834b8; mov rdx, r12; mov rsi, r14; mov rdi, rbx; call qword ptr [r15+0x38]; 
0x00000000084518: jbe 0x00000000000845b0; mov rdx, rbx; mov rsi, r12; call qword ptr [r14+0x38]; 
0x00000000084e02: jbe 0x0000000000084ef0; mov rdx, r12; mov rsi, rbp; mov rdi, rbx; call qword ptr [r13+0x58]; 
0x000000000872d0: jbe 0x0000000000087460; mov esi, r12d; mov rdi, r14; call qword ptr [rax+0x18]; 
0x00000000087a91: jbe 0x0000000000087c60; mov rdi, r15; call qword ptr [rax+0x20]; 
0x00000000089543: jbe 0x0000000000089932; xor esi, esi; mov edx, 0x2; mov rdi, r15; call qword ptr [r13+0x80]; 
0x00000000089739: jbe 0x000000000008993c; xor esi, esi; mov edx, 0x1; mov rdi, r15; call qword ptr [rbp+0x80]; 
0x0000000008982e: jbe 0x0000000000089958; xor edx, edx; mov rdi, r15; call qword ptr [rbx+0x80]; 
0x0000000008a095: jbe 0x000000000008a170; mov edx, 0x1; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x0000000008b0e7: jbe 0x000000000008b2c0; mov rdi, rbx; call qword ptr [rbp+0x60]; 
0x0000000008cab7: jbe 0x000000000008cc80; mov rdi, rbx; call qword ptr [rbp+0x60]; 
0x0000000008e6f2: jbe 0x000000000008e828; mov rsi, rsp; mov rdi, rbp; call qword ptr [r15+0x90]; 
0x0000000008eb78: jbe 0x000000000008edc0; mov edx, r13d; mov rsi, r12; mov rdi, rbp; call qword ptr [r15+0x80]; 
0x0000000008ec2d: jbe 0x000000000008ee3c; xor esi, esi; mov edx, 0x2; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x0000000008ed01: jbe 0x000000000008ee46; xor esi, esi; mov edx, 0x1; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x0000000008ed9e: jbe 0x000000000008ee50; xor edx, edx; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x0000000008efa5: jbe 0x000000000008f1d0; lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax+0x90]; 
0x0000000008f329: jbe 0x000000000008f410; mov rsi, r13; mov rdi, rbx; call qword ptr [rbp+0x70]; 
0x0000000008f4f2: jbe 0x000000000008f5a0; xor edx, edx; mov rsi, rbp; mov rdi, rbx; call qword ptr [r12+0x80]; 
0x0000000008f6d4: jbe 0x000000000008f880; mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rax+0x18]; 
0x0000000008f978: jbe 0x000000000008faa0; mov rsi, rsp; mov rdi, rbp; call qword ptr [r13+0x90]; 
0x0000000008fb94: jbe 0x000000000008fd28; mov rsi, rsp; mov rdi, rbp; call qword ptr [r13+0x90]; 
0x0000000008fce3: jbe 0x000000000008fd90; mov rdi, rbp; call qword ptr [r13+0x20]; 
0x0000000008fe7f: jbe 0x000000000008ff70; mov rdi, rbx; call qword ptr [r12+0x88]; 
0x0000000009096e: jbe 0x0000000000090a20; mov rdx, rbp; mov rsi, r12; mov rdi, rbx; call qword ptr [r14+0x78]; 
0x00000000090931: jbe 0x0000000000090a30; sub rsi, rdx; mov rdi, rbx; mov edx, 0x1; call qword ptr [r14+0x80]; 
0x00000000091bbb: jbe 0x0000000000091c48; mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rbx+0x18]; 
0x00000000091dab: jbe 0x0000000000091e38; mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rbx+0x18]; 
0x000000000922b8: jbe 0x0000000000092490; mov rdi, rbx; call qword ptr [rax+0x20]; 
0x0000000009234a: jbe 0x00000000000924f0; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rax+0x18]; 
0x00000000092548: jbe 0x0000000000092618; mov rdi, rbx; call qword ptr [r13+0x60]; 
0x00000000092b51: jbe 0x0000000000092cd0; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rax+0x18]; 
0x00000000092f04: jbe 0x00000000000930a0; xor edx, edx; xor esi, esi; mov rdi, r15; call qword ptr [rax+0x58]; 
0x000000000932e0: jbe 0x00000000000933c0; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [r15+0x18]; 
0x000000000abf5f: jbe 0x00000000000ac200; add rax, rdi; add rax, rcx; ret; 
0x000000000ce14f: jbe 0x00000000000ce3f0; add rax, rdi; add rax, rcx; ret; 
0x00000000121637: jbe 0x0000000000121878; mov rsi, r9; mov edi, r12d; mov eax, r14d; syscall; 
0x0000000013487b: jbe 0x00000000001347e9; xor eax, eax; pop rbx; ret; 
0x000000001844bc: jbe 0x00000000001846a0; add rax, rdi; add rax, rcx; vzeroupper; ret; 
0x0000000018bf6c: jbe 0x000000000018c150; add rax, rdi; add rax, rcx; vzeroupper; ret; 
0x0000000002ca2d: jbe short 0x000000000002ca47; add al, ch; mov esi, [rbp]; add [rbp-0x77], cl; ret; 
0x000000000328de: jbe short 0x00000000000328f7; mov rax, [rdx+rdi*8+0x40]; ret; 
0x00000000035906: jbe short 0x0000000000035888; sbb eax, [rax]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000036524: jbe short 0x0000000000036541; add [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x0000000003658d: jbe short 0x00000000000365aa; add [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x000000000464b6: jbe short 0x0000000000046476; std; dec dword ptr [rcx+rcx*4+0x65]; mov eax, 0xfffdd4e9; jmp qword ptr [rbx+rcx*4+0x4]; 
0x0000000005b365: jbe short 0x000000000005b35a; mov rax, r10; ret; 
0x00000000073d2d: jbe short 0x0000000000073d90; movsxd r12, r12d; mov rdx, r12; call qword ptr [r13+0x38]; 
0x00000000074a98: jbe short 0x0000000000074ab2; mov rdx, [r14+0x20]; mov rdi, r15; sub rdx, rsi; call qword ptr [rbx+0x38]; 
0x0000000007a3bc: jbe short 0x000000000007a438; movsxd rbx, ebx; mov rdx, rbx; call qword ptr [r13+0x38]; 
0x000000000823ee: jbe short 0x0000000000082448; mov rdi, rbx; call qword ptr [rbp+0x60]; 
0x00000000083c55: jbe short 0x0000000000083c88; movsxd rdx, ebx; mov rsi, r13; mov rdi, r15; call qword ptr [rbp+0x38]; 
0x00000000084c34: jbe short 0x0000000000084cb0; mov rdx, r12; mov rsi, rbp; mov rdi, rbx; call qword ptr [r13+0x58]; 
0x00000000084ecf: jbe short 0x0000000000084f44; mov rdi, rbx; call qword ptr [rbp+0x68]; 
0x00000000085a71: jbe short 0x0000000000085ab0; mov rdx, r13; mov rsi, rbp; mov rdi, rbx; call qword ptr [r14+0x38]; 
0x00000000085b54: jbe short 0x0000000000085b78; mov rdx, rbx; mov rsi, r13; mov rdi, rbp; call qword ptr [r14+0x38]; 
0x00000000085e75: jbe short 0x0000000000085ea8; movsxd rdx, ebx; mov rsi, r13; mov rdi, r15; call qword ptr [rbp+0x38]; 
0x000000000871be: jbe short 0x00000000000871f8; mov rdi, rbx; call qword ptr [rbp+0x20]; 
0x00000000087617: jbe short 0x0000000000087638; mov rax, [rax+0xe0]; mov esi, 0xffffffff; call qword ptr [rax+0x18]; 
0x00000000087d43: jbe short 0x0000000000087d70; mov rdi, rbx; call qword ptr [rbp+0x30]; 
0x00000000087de1: jbe short 0x0000000000087df0; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp+0x30]; 
0x0000000008bdf2: jbe short 0x000000000008be48; xor esi, esi; mov rdi, rbp; call qword ptr [r13+0x10]; 
0x0000000008dfff: jbe short 0x000000000008e020; call qword ptr [rbx+0x60]; 
0x0000000008e235: jbe short 0x000000000008e288; mov rsi, rdi; mov rdx, r12; mov rdi, rcx; call qword ptr [r14+0x38]; 
0x0000000008e3a1: jbe short 0x000000000008e3e8; mov rdx, rbx; mov rsi, r12; mov rdi, rbp; call qword ptr [r13+0x38]; 
0x0000000008e46b: jbe short 0x000000000008e4c8; mov edx, 0x1; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x0000000008e50e: jbe short 0x000000000008e530; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x0000000008ffdf: jbe short 0x0000000000090018; mov rdi, rbp; call qword ptr [rbx+0x88]; 
0x00000000090098: jbe short 0x0000000000090100; xor esi, esi; mov edx, 0x2; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x00000000091968: jbe short 0x00000000000919c8; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp+0x18]; 
0x00000000091a4e: jbe short 0x0000000000091a60; mov rax, [rbx+0x18]; add rsp, 0x10; pop rbx; jmp rax; 
0x00000000091ef8: jbe short 0x0000000000091f60; mov rdi, rbx; call qword ptr [rbp+0x68]; 
0x00000000091fae: jbe short 0x0000000000091fd8; mov rdi, rbx; call qword ptr [rbp+0x20]; 
0x00000000092045: jbe short 0x00000000000920a0; lea rbx, [rsi+0x1]; mov rdi, r15; movzx esi, byte ptr [rsi]; call qword ptr [rax+0x18]; 
0x000000000921aa: jbe short 0x00000000000921c0; mov rax, [rbx+0x40]; add rsp, 0x20; pop rbx; jmp rax; 
0x0000000009296e: jbe short 0x00000000000929a0; mov rdi, rbx; call qword ptr [rbp+0x30]; 
0x00000000092a01: jbe short 0x0000000000092a20; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp+0x30]; 
0x000000000934d3: jbe short 0x0000000000093530; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [r12+0x18]; 
0x00000000094e7d: jbe short 0x0000000000094e80; ret; 
0x00000000094ebd: jbe short 0x0000000000094ec0; ret; 
0x0000000009522d: jbe short 0x0000000000095230; ret; 
0x0000000009528d: jbe short 0x0000000000095290; ret; 
0x0000000009555f: jbe short 0x0000000000095508; add rsp, 0x8; ret; 
0x0000000009f24a: jbe short 0x000000000009f24d; add [rax-0x73], cl; adc eax, 0xd5dbc; cmovne rax, rdx; ret; 
0x0000000009f249: jbe short 0x000000000009f24d; add [rax-0x73], cl; adc eax, 0xd5dbc; cmovne rax, rdx; ret; 
0x0000000009f383: jbe short 0x000000000009f368; cmp esi, 0x9; mov edx, 0xffffffff; cmovbe eax, edx; ret; 
0x000000000a200d: jbe short 0x00000000000a2031; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000000abeb7: jbe short 0x00000000000abec4; movzx ecx, byte ptr [rsi+rdx]; movzx eax, byte ptr [rdi+rdx]; sub eax, ecx; ret; 
0x000000000ac1c6: jbe short 0x00000000000ac200; add rax, rdi; ret; 
0x000000000ac1d6: jbe short 0x00000000000ac200; lea rax, [rdi+rax+0x10]; ret; 
0x000000000ac1e6: jbe short 0x00000000000ac200; lea rax, [rdi+rax+0x20]; ret; 
0x000000000ac1f6: jbe short 0x00000000000ac200; lea rax, [rdi+rax+0x30]; ret; 
0x000000000ce2bc: jbe short 0x00000000000ce30d; xor [rsi+0xf], ah; xlat [rbx]; ret; 
0x000000000ce35e: jbe short 0x00000000000ce3af; adc [rsi+0xf], ah; xlat [rbx]; rol dword ptr [rbp+0x315775c0], 0xc0; ret; 
0x000000000ce3b6: jbe short 0x00000000000ce3f0; add rax, rdi; ret; 
0x000000000ce3c6: jbe short 0x00000000000ce3f0; lea rax, [rdi+rax+0x10]; ret; 
0x000000000ce3d6: jbe short 0x00000000000ce3f0; lea rax, [rdi+rax+0x20]; ret; 
0x000000000ce3e6: jbe short 0x00000000000ce3f0; lea rax, [rdi+rax+0x30]; ret; 
0x000000000d426b: jbe short 0x00000000000d4270; ret; 
0x000000000e4495: jbe short 0x00000000000e4497; add [rax], al; syscall; 
0x000000000fac87: jbe short 0x00000000000fac7b; jmp qword ptr [rsi+0xf]; 
0x0000000010c722: jbe short 0x000000000010c784; movdqu xmm7, [rdi+0x78]; movups [rsi+0x70], xmm7; ret; 
0x0000000010c76e: jbe short 0x000000000010c7d0; movups [rdi+0x68], xmm6; movdqu xmm7, [rsi+0x70]; movups [rdi+0x78], xmm7; ret; 
0x0000000010d077: jbe short 0x000000000010d0d9; movdqu xmm7, [rdi+0xf8]; movups [rsi+0x70], xmm7; ret; 
0x0000000010d100: jbe short 0x000000000010d162; movups [rdi+0xe8], xmm6; movdqu xmm7, [rsi+0x70]; movups [rdi+0xf8], xmm7; ret; 
0x00000000112d5b: jbe short 0x0000000000112d78; cmp eax, 0xffffffa1; je short 0x0000000000112d68; neg eax; ret; 
0x00000000112fab: jbe short 0x0000000000112fc8; cmp eax, 0xffffffa1; je short 0x0000000000112fb8; neg eax; ret; 
0x0000000011bb3b: jbe short 0x000000000011bb68; mov rsi, r12; mov rdi, r14; call r13; 
0x00000000138118: jbe short 0x000000000013811d; add [rcx+rcx*4-0x19], cl; call rbp; 
0x0000000013815d: jbe short 0x0000000000138161; add [rax-0x75], cl; jl short 0x0000000000138188; adc [rcx+rcx*4-0x1a], cl; call qword ptr [rsp+0x58]; 
0x0000000013c92f: jbe short 0x000000000013c920; jmp qword ptr [rsi+0xf]; 
0x00000000148670: jbe short 0x0000000000148680; mov eax, 0x2; ret; 
0x000000001523e3: jbe short 0x000000000015242d; add esp, 0x28; pop rbx; pop r12; ret; 
0x0000000015d157: jbe short 0x000000000015d160; ret; 
0x00000000165d47: jbe short 0x0000000000165d54; movzx ecx, byte ptr [rsi+rdx]; movzx eax, byte ptr [rdi+rdx]; sub eax, ecx; ret; 
0x000000001660b0: jbe short 0x00000000001660b7; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016611a: jbe short 0x0000000000166121; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000017fb87: jbe short 0x000000000017fb94; movzx ecx, byte ptr [rsi+rdx]; movzx eax, byte ptr [rdi+rdx]; sub eax, ecx; ret; 
0x00000000184647: jbe short 0x00000000001846a0; add rax, 0x20; add rax, rdi; vzeroupper; ret; 
0x00000000184667: jbe short 0x00000000001846a0; add rax, 0x40; add rax, rdi; vzeroupper; ret; 
0x00000000184687: jbe short 0x00000000001846a0; add rax, 0x60; add rax, rdi; vzeroupper; ret; 
0x00000000184637: jbe short 0x00000000001846a0; add rax, rdi; vzeroupper; ret; 
0x00000000188977: jbe short 0x00000000001889f0; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x0000000018b1c6: jbe short 0x000000000018b1c9; add [rax], al; vzeroupper; ret; 
0x0000000018bd07: jbe short 0x000000000018bcda; vpmovmskb eax, xmm2; sub eax, 0xffff; jne 0x000000000018bc90; ret; 
0x0000000018bd47: jbe short 0x000000000018bd60; vpmovmskb eax, xmm2; sub eax, 0xffff; jne 0x000000000018bc90; ret; 
0x0000000018c0f7: jbe short 0x000000000018c150; add rax, 0x20; add rax, rdi; vzeroupper; ret; 
0x0000000018c117: jbe short 0x000000000018c150; add rax, 0x40; add rax, rdi; vzeroupper; ret; 
0x0000000018c137: jbe short 0x000000000018c150; add rax, 0x60; add rax, rdi; vzeroupper; ret; 
0x0000000018c0e7: jbe short 0x000000000018c150; add rax, rdi; vzeroupper; ret; 
0x000000000243e2: je 0x00000000000226c2; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000024412: je 0x00000000000226dd; add rsp, 0x28; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000014f19b: je 0x00000000000239b1; mov rax, [rsp+0x58]; mov rdi, r12; call qword ptr [rax+0x20]; 
0x0000000002426c: je 0x0000000000024358; add rsp, 0x98; ret; 
0x00000000041d3b: je 0x0000000000041c88; ret; 
0x000000000979f7: je 0x0000000000097a90; mov rax, [rip+0x1543bc]; mov [rsp+0x8], r8; xor edi, edi; call qword ptr [rax]; 
0x0000000009cde7: je 0x000000000009cec0; call rax; 
0x0000000009cf1f: je 0x000000000009cff0; call rax; 
0x0000000009d2fb: je 0x000000000009d470; mov rdx, r13; mov rdi, r12; call rax; 
0x0000000009d9d4: je 0x000000000009db20; mov rdx, r15; mov rsi, r14; mov rdi, r13; call rax; 
0x0000000009dc9d: je 0x000000000009dd50; mov rsi, r12; mov rdi, rbp; call rax; 
0x0000000009df02: je 0x000000000009dfb0; mov rsi, rbp; mov rdi, r12; call rax; 
0x0000000009e0e5: je 0x000000000009e190; mov rdi, r13; mov rdx, rbp; mov rsi, r12; call rax; 
0x0000000009e676: je 0x000000000009e7f0; mov rdi, [rdi+0x48]; mov rsi, rbp; call rax; 
0x000000000ac790: je 0x00000000000ac710; bsr eax, eax; add rax, rdi; add rax, rsi; ret; 
0x000000000b1934: je 0x00000000000b1b00; bsr rax, rax; add rax, rdi; ret; 
0x000000000b1bc4: je 0x00000000000b1b00; bsr rax, rsi; add rax, rdi; ret; 
0x000000000b19ce: je 0x00000000000b1b00; bsr rsi, rsi; lea rax, [rdi+rsi]; ret; 
0x000000000b1e1c: je 0x00000000000b1ec0; bsf rax, rdx; ret; 
0x000000000bc1cd: je 0x00000000000bc0ea; lea eax, [rdx+rdx]; pop rbx; and eax, 0x7ff80000; ret; 
0x000000000cf596: je 0x00000000000cf4f5; lea rax, [rdi-0x10]; ret; 
0x000000000cf5b4: je 0x00000000000cf4f5; test al, 0xf0; jne 0x00000000000cf680; lea rax, [rdi-0x10]; ret; 
0x000000000cf760: je 0x00000000000cf800; bsf rax, rdx; shr rax, 0x2; ret; 
0x000000000ee473: je 0x00000000000ee3ed; ret; 
0x000000000fa0fb: je 0x00000000000fb60b; lea rsi, [rip+0xb716c]; movsxd rax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x00000000119c3f: je 0x0000000000119fcd; mov rsi, [r14]; mov rax, [rsp+0x8]; mov rdi, r13; call rax; 
0x0000000011c30d: je 0x000000000011c400; call rax; 
0x00000000127d15: je 0x0000000000127ddf; mov rdx, [rsp+0x10]; xor esi, esi; mov edi, 0x2000004; call rax; 
0x00000000134898: je 0x0000000000134816; mov [rsi+0x5], dl; mov rax, rsi; pop rbx; ret; 
0x0000000014696e: je 0x0000000000146a42; mov rax, [rbx+0x20]; mov rdi, rbp; lea r15, [rsp+0x50]; call qword ptr [rax+0x20]; 
0x0000000014693f: je 0x0000000000146a42; mov rdi, [r12]; mov rsi, rbp; mov rax, [rdi+0x38]; call qword ptr [rax+0x8]; 
0x0000000014772e: je 0x000000000014766f; mov rax, [rbp+0x8]; mov esi, r14d; mov rdi, rbp; call qword ptr [rax+0x28]; 
0x000000001476f7: je 0x000000000014766f; mov rax, [rbp+0x8]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x00000000147e24: je 0x0000000000147cae; mov rdi, rbx; call rax; 
0x00000000148c93: je 0x0000000000148dc1; mov rdi, r12; call qword ptr [rbx]; 
0x0000000014d1ad: je 0x000000000014d360; mov rax, [rbx+0xd0]; mov rsi, [rsp+0x18]; mov rdi, r12; call qword ptr [rax+0x8]; 
0x0000000014d935: je 0x000000000014da60; mov rax, [r13+0xd0]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x0000000014e840: je 0x000000000014e7a8; mov rax, [rbp+0x8]; lea rsi, [rsp+0xc]; mov rdi, rbp; call qword ptr [rax+0x48]; 
0x0000000014ff73: je 0x0000000000150110; mov rax, [rbx+0x70]; mov rsi, [rsp+0x18]; mov rdi, r12; call qword ptr [rax+0x8]; 
0x0000000015046d: je 0x0000000000150608; mov rax, [r14+0x70]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x00000000150e33: je 0x00000000001508d4; mov rax, [rsp+0x48]; mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x18]; 
0x000000001509eb: je 0x0000000000150f5d; mov rax, [rbx+0x60]; mov rdi, r15; call qword ptr [rax+0x20]; 
0x00000000151796: je 0x00000000001516e1; mov rax, [rdi+0x8]; lea rdx, [rsp+0x18]; mov esi, 0x6; call qword ptr [rax+0x28]; 
0x000000001516bd: je 0x0000000000151790; mov rax, [rbx]; mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x20]; 
0x0000000015181a: je 0x00000000001518b0; mov rax, [rdi+0x8]; lea rdx, [rsp+0xc]; mov esi, 0xd; call qword ptr [rax+0x28]; 
0x00000000155e82: je 0x0000000000155e03; mov rax, [rbp+0x8]; lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax+0x8]; 
0x00000000155f72: je 0x0000000000155ef3; mov rax, [rbp+0x8]; lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax+0x8]; 
0x00000000156062: je 0x0000000000155fe3; mov rax, [rbp+0x8]; lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax+0x8]; 
0x00000000156152: je 0x00000000001560d3; mov rax, [rbp+0x8]; lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax+0x8]; 
0x0000000015f2f7: je 0x000000000015f268; mov [rsp+0x8], eax; lea rdi, [r12+0x930]; call qword ptr [r12+0xf10]; 
0x000000001789c5: je 0x0000000000178570; mov rax, [rcx]; mov [rdx], rax; mov rax, rdi; ret; 
0x0000000018970f: je 0x0000000000189850; mov byte ptr [rdi], 0x0; vzeroupper; ret; 
0x00000000189afa: je 0x00000000001898f0; mov byte ptr [rdi], 0x0; vzeroupper; ret; 
0x0000000018a7ea: je 0x000000000018a4a0; vzeroupper; ret; 
0x0000000018a6c6: je 0x000000000018a580; vzeroupper; ret; 
0x0000000018b52a: je 0x000000000018b1d0; mov rax, rdi; vzeroupper; ret; 
0x0000000018b3f6: je 0x000000000018b2b0; vzeroupper; ret; 
0x00000000024034: je short 0x000000000002405a; or [rbx+0x4814247c], cl; mov edx, [rax]; call rbx; 
0x000000000240a2: je short 0x00000000000240c8; or [rbx+0x4814247c], cl; mov edx, [rax]; mov rax, [rsp+0x18]; call rax; 
0x00000000024165: je short 0x0000000000024177; call rax; 
0x00000000026f90: je short 0x0000000000026f98; ret; 
0x000000000273f0: je short 0x0000000000027416; push rax; mov rdi, [rsp+0x58]; mov rax, [rsp+0x28]; call rax; 
0x0000000002769f: je short 0x00000000000276c5; push rax; mov rdi, [rsp+0x58]; call r14; 
0x000000000279ec: je short 0x0000000000027a12; pop rax; mov rdi, [rsp+0x60]; mov rax, [rsp+0x20]; call rax; 
0x00000000027e04: je short 0x0000000000027e2a; pop rax; mov rdi, [rsp+0x60]; call rbx; 
0x00000000028243: je short 0x0000000000028269; push rax; mov rdi, [rsp+0x58]; mov rax, [rsp+0x30]; call rax; 
0x000000000284b9: je short 0x00000000000284df; push rax; mov rdi, [rsp+0x58]; call rbx; 
0x00000000028838: je short 0x000000000002885e; pop rax; mov rdi, [rsp+0x60]; mov rax, [rsp+0x20]; call rax; 
0x00000000028d20: je short 0x0000000000028d46; pop rax; mov rdi, [rsp+0x60]; call rbx; 
0x000000000290c1: je short 0x00000000000290e7; push rax; mov rdi, [rsp+0x58]; mov rax, [rsp+0x20]; call rax; 
0x00000000029336: je short 0x000000000002935c; push rax; mov rdi, [rsp+0x58]; call rbx; 
0x00000000029755: je short 0x000000000002977b; push rax; mov rdi, [rsp+0x48]; call r13; 
0x00000000029c55: je short 0x0000000000029c7b; push rax; mov rdi, [rsp+0x48]; call rbx; 
0x0000000002a348: je short 0x000000000002a36e; mov rdi, [rsp+0x40]; call r14; 
0x0000000002a896: je short 0x000000000002a8bc; mov rdi, [rsp+0x40]; call rbx; 
0x0000000002b2d6: je short 0x000000000002b2fc; mov rdi, [rsp+0x38]; mov rax, [rsp+0x20]; call rax; 
0x0000000002b8ca: je short 0x000000000002b8f0; mov rdi, [rsp+0x38]; call r15; 
0x0000000002c26a: je short 0x000000000002c290; pop rax; mov rdi, [rsp+0x50]; mov rax, [rsp+0x20]; call rax; 
0x0000000002c654: je short 0x000000000002c67a; pop rax; mov rdi, [rsp+0x50]; call rbx; 
0x0000000002cc35: je short 0x000000000002cc5b; push rax; mov rdi, [rsp+0x48]; call r13; 
0x0000000002d1d5: je short 0x000000000002d1fb; push rax; mov rdi, [rsp+0x48]; call rbx; 
0x0000000002d967: je short 0x000000000002d98d; pop rax; mov rdi, [rsp+0x50]; mov rax, [rsp+0x18]; call rax; 
0x0000000002ddb9: je short 0x000000000002dddf; pop rax; mov rdi, [rsp+0x50]; call rbx; 
0x0000000002e395: je short 0x000000000002e3bb; push rax; mov rdi, [rsp+0x48]; call r13; 
0x0000000002e938: je short 0x000000000002e95e; push rax; mov rdi, [rsp+0x48]; call rbx; 
0x0000000002f182: je short 0x000000000002f1a8; mov rdi, [rsp+0x38]; call r15; 
0x0000000002f2e7: je short 0x000000000002f30d; mov rdi, [rsp+0x38]; lea r8, [rsp+0xa0]; call r15; 
0x0000000002fdb6: je short 0x000000000002fdc0; cmp esi, 0x3; je short 0x000000000002fdc0; ret; 
0x0000000002fdbb: je short 0x000000000002fdc0; ret; 
0x0000000002fddd: je short 0x000000000002fdf8; pop rbx; ret; 
0x00000000030c54: je short 0x0000000000030c58; call rax; 
0x00000000030ed1: je short 0x0000000000030ed5; call rdx; 
0x00000000031faf: je short 0x0000000000031fb3; call rax; 
0x00000000032885: je short 0x0000000000032839; sbb eax, [rax]; ret; 
0x0000000003892e: je short 0x0000000000038936; add [rax-0x9], ecx; ror byte ptr [rax+0x1], 0x1; ret; 
0x00000000041fb9: je short 0x0000000000041fc0; ret; 
0x00000000042389: je short 0x0000000000042390; ret; 
0x000000000440fb: je short 0x0000000000044120; lea edx, [rax+0x1]; mov [rip+0x1a80a6], edx; ret; 
0x00000000047494: je short 0x000000000004749c; mov dword ptr [rdi], 0x0; pop rbx; ret; 
0x0000000004833d: je short 0x0000000000048300; mov eax, 0xffffffff; ret; 
0x00000000052973: je short 0x0000000000052983; mov eax, ecx; shl eax, 0x1e; or eax, edx; ret; 
0x00000000054337: je short 0x000000000005433f; cmp byte ptr [rax-0x1], 0x2f; jne short 0x0000000000054330; pop rbx; ret; 
0x0000000005562d: je short 0x0000000000055637; mov rdx, [r8+rax*8]; mov [rsi+rax*8], rdx; xor eax, eax; ret; 
0x00000000055875: je short 0x000000000005587f; mov rax, [rax+rcx*8]; mov [r9+rcx*8], rax; xor eax, eax; ret; 
0x000000000589a5: je short 0x00000000000589cb; or [rbp+0x31], al; ror byte ptr [rax-0x39], cl; ret; 
0x0000000005b548: je short 0x000000000005b5c3; mov byte ptr [rdi+0x8], 0x0; mov [rdi], rax; mov rax, rdi; ret; 
0x00000000062f41: je short 0x0000000000062f50; mov eax, r8d; ret; 
0x00000000062f2a: je short 0x0000000000062f70; mov eax, 0x13c; syscall; 
0x00000000062f5c: je short 0x0000000000062f86; mov r8d, 0xffffffff; mov eax, r8d; ret; 
0x00000000062f5d: je short 0x0000000000062f86; mov r8d, 0xffffffff; mov eax, r8d; ret; 
0x00000000076201: je short 0x0000000000076207; add [rax-0x77], cl; ret; 
0x00000000082a5b: je short 0x0000000000082a66; mov rdi, [rdi+0xe0]; jmp rax; 
0x00000000082a94: je short 0x0000000000082aa7; mov rbp, rdx; mov rdi, [rdi+0xe0]; call rax; 
0x00000000082af7: je short 0x0000000000082b08; mov rax, [rsp+0x8]; add rsp, 0x18; ret; 
0x00000000082ae4: je short 0x0000000000082b08; mov rdi, [rdi+0xe0]; lea rsi, [rsp+0x8]; call rax; 
0x00000000082b3b: je short 0x0000000000082b50; mov rdi, [rdi+0xe0]; jmp rax; 
0x00000000086f2b: je short 0x0000000000086f76; add esp, 0x18; pop rbx; pop rbp; ret; 
0x000000000874d0: je short 0x00000000000874d8; ret; 
0x000000000874e3: je short 0x000000000008752d; mov eax, [rax+0xe0]; call qword ptr [rax+0x68]; 
0x00000000087530: je short 0x000000000008758d; pop rbp; pop r12; ret; 
0x00000000087e17: je short 0x0000000000087e28; cmp rax, rsi; ja short 0x0000000000087e10; lea eax, [rdx+rdi]; ret; 
0x0000000008919b: je short 0x00000000000891c1; xor [rcx+rcx*4-0x1], cl; call qword ptr [r14+0x90]; 
0x0000000008aeda: je short 0x000000000008aee8; mov eax, [rdi+0x70]; test eax, eax; js short 0x000000000008aee8; ret; 
0x0000000008d325: je short 0x000000000008d330; ret; 
0x0000000008d31c: je short 0x000000000008d350; mov eax, 0xffffffff; test edx, edx; je short 0x000000000008d330; ret; 
0x0000000008d785: je short 0x000000000008d790; ret; 
0x0000000008d77c: je short 0x000000000008d7b0; mov eax, 0xffffffff; test edx, edx; je short 0x000000000008d790; ret; 
0x0000000008e5c3: je short 0x000000000008e5d0; pop rbx; ret; 
0x0000000008e943: je short 0x000000000008e969; adc [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x90]; 
0x0000000008efad: je short 0x000000000008efd3; adc [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x90]; 
0x00000000091eb9: je short 0x0000000000091ec0; ret; 
0x000000000927bb: je short 0x00000000000927cc; mov qword ptr [rax], 0x0; mov qword ptr [rax+0x8], 0x0; ret; 
0x00000000092a47: je short 0x0000000000092a58; cmp rcx, rsi; ja short 0x0000000000092a40; lea eax, [rdx+rdi]; ret; 
0x000000000941dc: je short 0x00000000000941f8; mov rax, [rip+0x15d15b]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009420c: je short 0x0000000000094228; mov rax, [rip+0x15d133]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009423c: je short 0x0000000000094258; mov rax, [rip+0x15d10b]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009426c: je short 0x0000000000094288; mov rax, [rip+0x15d0e3]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009429c: je short 0x00000000000942b8; mov rax, [rip+0x15d0bb]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000942cc: je short 0x00000000000942e8; mov rax, [rip+0x15d093]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000942fc: je short 0x0000000000094318; mov rax, [rip+0x15d06b]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009432c: je short 0x0000000000094348; mov rax, [rip+0x15d043]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009435c: je short 0x0000000000094378; mov rax, [rip+0x15d01b]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009438c: je short 0x00000000000943a8; mov rax, [rip+0x15cff3]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000943bc: je short 0x00000000000943d8; mov rax, [rip+0x15cfcb]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000943ec: je short 0x0000000000094408; mov rax, [rip+0x15cfa3]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000094422: je short 0x000000000009443a; mov rax, [rip+0x15cfa5]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000009445c: je short 0x0000000000094478; mov rax, [rip+0x15cf73]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009448c: je short 0x00000000000944a8; mov rax, [rip+0x15cf4b]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000944bc: je short 0x00000000000944d8; mov rax, [rip+0x15cf23]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000944ec: je short 0x0000000000094508; mov rax, [rip+0x15cefb]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009451c: je short 0x0000000000094538; mov rax, [rip+0x15ced3]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009454c: je short 0x0000000000094568; mov rax, [rip+0x15ceab]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009457c: je short 0x0000000000094598; mov rax, [rip+0x15ce83]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000945ac: je short 0x00000000000945c8; mov rax, [rip+0x15ce5b]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009463d: je short 0x0000000000094640; ret; 
0x000000000946a1: je short 0x00000000000946a4; ret; 
0x000000000946d9: je short 0x00000000000946f0; mov r8, [rdi+0x8]; mov rax, [rdi]; mov rdi, r8; jmp rax; 
0x00000000094afc: je short 0x0000000000094b00; call rax; 
0x00000000094b85: je short 0x0000000000094b89; call rax; 
0x00000000094bf5: je short 0x0000000000094bf9; call rax; 
0x00000000094db3: je short 0x0000000000094dc0; or eax, 0x2; mov [rdi+0x8], eax; xor eax, eax; ret; 
0x00000000094edc: je short 0x0000000000094ef3; add bl, al; endbr64; xor eax, eax; ret; 
0x000000000951b0: je short 0x00000000000951b5; pop rbx; pop rbp; ret; 
0x000000000967d9: je short 0x00000000000967fa; mov r13, [rip+0x1555de]; xor edi, edi; call qword ptr [r13]; 
0x00000000098f7c: je short 0x0000000000098f83; add [rax-0x77], cl; ret; 
0x00000000099213: je short 0x0000000000099217; call rax; 
0x0000000009a282: je short 0x000000000009a2a8; sbb [rbx+0x5d], bl; pop r12; jmp rax; 
0x0000000009a9ea: je short 0x000000000009aa10; mov rdi, r13; call rax; 
0x0000000009bd12: je short 0x000000000009bd38; sub [rcx+rcx*4-0x19], cl; call rdx; 
0x0000000009c218: je short 0x000000000009c246; adc eax, 0x48227300; lea eax, [rax-0x8]; ret; 
0x0000000009d12b: je short 0x000000000009d190; mov rsi, r12; mov rdi, rbp; call rax; 
0x0000000009e22c: je short 0x000000000009e230; ret; 
0x0000000009e327: je short 0x000000000009e380; add rsp, 0x8; pop rbp; pop r12; ret; 
0x0000000009e678: je short 0x000000000009e67b; add [rax], al; mov rdi, [rdi+0x48]; mov rsi, rbp; call rax; 
0x0000000009e81d: je short 0x000000000009e84e; mov rdi, [rbx+0x48]; mov rsi, r14; call rax; 
0x0000000009f34e: je short 0x000000000009f35e; cmp dl, 0x3; je short 0x000000000009f360; movsx eax, dl; ret; 
0x0000000009f353: je short 0x000000000009f360; movsx eax, dl; ret; 
0x0000000009f446: je short 0x000000000009f450; pop rbx; pop rbp; pop r12; ret; 
0x0000000009f8ca: je short 0x000000000009f8da; lea rax, [rip+0x14f68d]; mov [rip+0x14f66e], rax; add rsp, 0x8; ret; 
0x000000000a0496: je short 0x00000000000a0465; lea rax, [rip+0xe4731]; test byte ptr [rdx+0xcd], 0x1; je short 0x00000000000a0465; ret; 
0x000000000a04a6: je short 0x00000000000a0465; ret; 
0x000000000a1628: je short 0x00000000000a162e; xor byte ptr [rdx+0xe], 0x2a; ret; 
0x000000000a2086: je short 0x00000000000a2098; pop rbx; pop rbp; pop r12; ret; 
0x000000000a879b: je short 0x00000000000a87a1; cmp eax, esi; jne short 0x00000000000a8790; mov rax, r8; ret; 
0x000000000a87cf: je short 0x00000000000a87d5; cmp eax, edx; jne short 0x00000000000a87c0; mov rax, r8; ret; 
0x000000000a883a: je short 0x00000000000a8830; ret; 
0x000000000a8872: je short 0x00000000000a8868; cmp ecx, esi; je short 0x00000000000a8868; ret; 
0x000000000a8876: je short 0x00000000000a8868; ret; 
0x000000000a88c4: je short 0x00000000000a88a8; mov rax, r8; ret; 
0x000000000a88ee: je short 0x00000000000a88f8; cmp ecx, esi; jne short 0x00000000000a88e0; ret; 
0x000000000ac0cc: je short 0x00000000000ac11d; xor [rsi+0xf], ah; xlat [rbx]; ret; 
0x000000000ac16e: je short 0x00000000000ac1bf; adc [rsi+0xf], ah; xlat [rbx]; rol dword ptr [rbp+0x315775c0], 0xc0; ret; 
0x000000000ac278: je short 0x00000000000ac290; bsf eax, eax; add rax, rdi; add rax, rcx; ret; 
0x000000000ac3ba: je short 0x00000000000ac40b; xor [rsi+0xf], ah; xlat [rbx]; ret; 
0x000000000ac650: je short 0x00000000000ac6a1; and [rsi+0xf], ah; xlat [rbx]; rol dword ptr [rbp+0x317575c0], 0xc0; ret; 
0x000000000ac73c: je short 0x00000000000ac710; bsr eax, eax; add rax, rdi; ret; 
0x000000000b1715: je short 0x00000000000b1720; bsf eax, eax; lea rax, [rdi+rax]; ret; 
0x000000000b1c18: je short 0x00000000000b1c1e; bsf eax, edx; ret; 
0x000000000b1cbd: je short 0x00000000000b1cd0; bsf rax, rdx; ret; 
0x000000000b1c60: je short 0x00000000000b1ce0; bsf rax, rdx; ret; 
0x000000000b1e8c: je short 0x00000000000b1eb0; bsf rax, rdx; ret; 
0x000000000bbcb7: je short 0x00000000000bbcd0; ror byte ptr [rdi], 0x1; adc [rdi+rdx-0x40], edi; ret; 
0x000000000bc724: je short 0x00000000000bc730; cmp eax, 0x2; je short 0x00000000000bc738; xor eax, eax; ret; 
0x000000000bc729: je short 0x00000000000bc738; xor eax, eax; ret; 
0x000000000bc774: je short 0x00000000000bc758; ret; 
0x000000000bc7d2: je short 0x00000000000bc7b0; ret; 
0x000000000bcda6: je short 0x00000000000bcd75; lea rax, [rip+0xcedd1]; test byte ptr [rdx+0xcd], 0x1; je short 0x00000000000bcd75; ret; 
0x000000000bcdb6: je short 0x00000000000bcd75; ret; 
0x000000000bdfe9: je short 0x00000000000bdfef; test edx, edx; jne short 0x00000000000bdfe0; ret; 
0x000000000c6acd: je short 0x00000000000c6ad3; mov eax, r8d; ret; 
0x000000000ca892: je short 0x00000000000ca8b8; sbb [rcx+rcx*4-0x1f], cl; mov rdx, r13; call rbx; 
0x000000000cbac5: je short 0x00000000000cbaeb; or [rbp+0x31], al; ror byte ptr [rax-0x39], cl; ret; 
0x000000000cef59: je short 0x00000000000cef70; mov eax, [rdi]; cmp eax, [rsi]; jne 0x00000000000cf0b0; ret; 
0x000000000cef83: je short 0x00000000000cefa0; mov eax, [rdi+0x8]; cmp eax, [rsi+0x8]; jne 0x00000000000cf0b0; ret; 
0x000000000cefb9: je short 0x00000000000cefd0; mov eax, [rdi+0x10]; cmp eax, [rsi+0x10]; jne 0x00000000000cf0b0; ret; 
0x000000000cefe3: je short 0x00000000000cf000; mov eax, [rdi+0x18]; cmp eax, [rsi+0x18]; jne 0x00000000000cf0b0; ret; 
0x000000000cf019: je short 0x00000000000cf030; mov eax, [rdi+0x20]; cmp eax, [rsi+0x20]; jne 0x00000000000cf0b0; ret; 
0x000000000cf043: je short 0x00000000000cf050; mov eax, [rdi+0x28]; cmp eax, [rsi+0x28]; jne short 0x00000000000cf0b0; ret; 
0x000000000cf069: je short 0x00000000000cf080; mov eax, [rdi+0x30]; cmp eax, [rsi+0x30]; jne short 0x00000000000cf0b0; ret; 
0x000000000cf093: je short 0x00000000000cf0a0; mov eax, [rdi+0x38]; cmp eax, [rsi+0x38]; jne short 0x00000000000cf0b0; ret; 
0x000000000cf646: je short 0x00000000000cf6b0; lea rax, [rdi-0x10]; ret; 
0x000000000cf654: je short 0x00000000000cf6b0; test al, 0xf0; jne short 0x00000000000cf680; lea rax, [rdi-0x10]; ret; 
0x000000000cf7cc: je short 0x00000000000cf7f0; bsf rax, rdx; shr rax, 0x2; ret; 
0x000000000cfaf9: je short 0x00000000000cfb10; mov cl, dl; and cl, 0xf; je short 0x00000000000cfb20; ret; 
0x000000000cfb00: je short 0x00000000000cfb20; ret; 
0x000000000cfb15: je short 0x00000000000cfb30; add rax, 0x2; ret; 
0x000000000d04b0: je short 0x00000000000d04e0; mov [rsp+0x50], r12; mov rsi, r15; mov rdi, rbp; call rbx; 
0x000000000dcfd7: je short 0x00000000000dcfe0; xor eax, eax; ret; 
0x000000000dd061: je short 0x00000000000dd098; call rax; 
0x000000000dd0e1: je short 0x00000000000dd118; call rax; 
0x000000000dd4e7: je short 0x00000000000dd50d; and [rax-0x7d], cl; ret; 
0x000000000dd7c7: je short 0x00000000000dd7f4; pop rbx; pop rbp; pop r12; ret; 
0x000000000de8c6: je short 0x00000000000de8dd; mov rbx, r13; mov rdi, rbp; call r12; 
0x000000000df423: je short 0x00000000000df425; add [rax], al; syscall; 
0x000000000df468: je short 0x00000000000df48e; adc [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x000000000e311d: je short 0x00000000000e312b; mov esi, 0x1; incsspq rsi; jmp rdi; 
0x000000000e4fec: je short 0x00000000000e4f7d; cmp r8, 0x2468; jne short 0x00000000000e5013; mov eax, 0xfffa; ret; 
0x000000000e51e9: je short 0x00000000000e521a; xor eax, eax; cmp rdx, 0x1badface; setne al; ret; 
0x000000000e5204: je short 0x00000000000e521a; xor eax, eax; cmp rdx, 0x1cd1; setne al; ret; 
0x000000000e51b5: je short 0x00000000000e521a; xor eax, eax; cmp rdx, 0xadf5; setne al; ret; 
0x000000000e6369: je short 0x00000000000e6375; mov rdi, rbx; call r15; 
0x000000000e6364: je short 0x00000000000e637e; test r15, r15; je short 0x00000000000e6375; mov rdi, rbx; call r15; 
0x000000000e81d1: je short 0x00000000000e81d7; cmp al, 0x3f; jne short 0x00000000000e8209; mov eax, 0x1; ret; 
0x000000000e81f2: je short 0x00000000000e81d7; cmp al, 0x3f; jne short 0x00000000000e8229; mov eax, 0x1; ret; 
0x000000000ec4d3: je short 0x00000000000ec46c; mov byte ptr [rdi+0x8], 0x1e; mov eax, 0x2; ret; 
0x000000000ec46a: je short 0x00000000000ec4b0; mov byte ptr [rdi+0x8], 0x1; mov eax, 0x1; mov byte ptr [rdi], 0x5b; ret; 
0x000000000edf5d: je short 0x00000000000edf98; ret; 
0x000000000ee30c: je short 0x00000000000ee34b; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000000ee492: je short 0x00000000000ee427; pop rbx; ret; 
0x000000000ee48d: je short 0x00000000000ee447; and ebx, 0x8; je short 0x00000000000ee427; pop rbx; ret; 
0x000000000f1fc5: je short 0x00000000000f2020; xor eax, eax; pop rbp; ret; 
0x000000000fb509: je short 0x00000000000fb52f; or al, ch; jmp far fword ptr [rbp-0xe]; 
0x00000000100f39: je short 0x0000000000100f45; mov rdi, rbx; call r15; 
0x00000000100f34: je short 0x0000000000100f4e; test r15, r15; je short 0x0000000000100f45; mov rdi, rbx; call r15; 
0x00000000102889: je short 0x00000000001028a3; mov dword ptr fs:[0x38], 0x0; mov dword ptr fs:[0x40], 0x0; mov eax, r8d; ret; 
0x00000000102a42: je short 0x0000000000102a48; ret; 
0x00000000102a37: je short 0x0000000000102a78; mov eax, 0xf; cmp dx, 0x2; je short 0x0000000000102a48; ret; 
0x0000000010d159: je short 0x000000000010d164; mov eax, 0x1c; syscall; 
0x0000000010d2ff: je short 0x000000000010d330; xor edx, edx; xor esi, esi; mov rdi, rbp; call rax; 
0x0000000010d392: je short 0x000000000010d3d0; xor edx, edx; call rax; 
0x0000000010d8da: je short 0x000000000010d8e0; mov eax, r9d; ret; 
0x0000000010d8d9: je short 0x000000000010d8e0; mov eax, r9d; ret; 
0x0000000010df65: je short 0x000000000010df8b; adc [rbx-0x47e7db84], cl; add [rcx], eax; add [rax], al; syscall; 
0x0000000010e02e: je short 0x000000000010e054; adc [rcx-0x77], al; ror byte ptr [rbx+0x3108247c], 0xc0; syscall; 
0x0000000010eb13: je short 0x000000000010eaf1; mov rbp, rdi; mov rdi, rbp; mov eax, 0x4f; syscall; 
0x00000000110396: je short 0x00000000001103bc; sub [rax-0x73], cl; sub [r10+0x1], r15b; call qword ptr [rbp+0x40]; 
0x00000000110676: je short 0x000000000011069c; sub [rax-0x73], cl; sub [r10+0x5], r15b; call qword ptr [rbp+0x40]; 
0x000000001106f6: je short 0x000000000011071c; sub [rax-0x73], cl; sub [r10+0x2], r15b; call qword ptr [rbp+0x40]; 
0x00000000112d60: je short 0x0000000000112d68; neg eax; ret; 
0x00000000112fb0: je short 0x0000000000112fb8; neg eax; ret; 
0x0000000011311a: je short 0x0000000000113142; mov eax, 0x118; syscall; 
0x00000000113311: je short 0x0000000000113337; or al, 0x8b; jl short 0x000000000011333b; or [rax+0x11d], bh; syscall; 
0x000000001133dc: je short 0x0000000000113408; mov eax, 0x48; syscall; 
0x0000000011346b: je short 0x0000000000113498; mov eax, 0x48; syscall; 
0x000000001135c1: je short 0x00000000001135f0; mov eax, 0x101; syscall; 
0x0000000011459e: je short 0x00000000001145c4; or [rax+0x127], bh; syscall; 
0x0000000011465e: je short 0x0000000000114684; or [rax+0x128], bh; syscall; 
0x00000000114c72: je short 0x0000000000114c75; ret; 
0x00000000114fed: je short 0x0000000000115013; adc [rax+0x17], bh; mov edi, [rsp+0xc]; syscall; 
0x00000000115b0e: je short 0x0000000000115b28; mov [rip+0xd9b29], rax; mov eax, 0x1; add rsp, 0x8; ret; 
0x00000000116cb7: je short 0x0000000000116ce8; mov eax, 0x105; syscall; 
0x00000000116de7: je short 0x0000000000116dec; mov [rax], rdx; ret; 
0x00000000116eea: je short 0x0000000000116ed8; mov byte ptr [rsi-0x1], 0x0; mov rax, r8; ret; 
0x00000000117676: je short 0x0000000000117683; add rax, 0x8; mov [rip+0xd810d], rax; mov rax, r8; ret; 
0x0000000011840e: je short 0x000000000011841e; add [rcx+rcx*4+0x25], al; je short 0x0000000000118425; add [rbp-0x8f38b25], al; ret; 
0x00000000118415: je short 0x0000000000118425; add [rbp-0x8f38b25], al; ret; 
0x0000000011873c: je short 0x0000000000118744; mov [rip+0xd3c04], edi; ret; 
0x00000000118907: je short 0x0000000000118940; mov r10d, ebx; mov rdi, rbp; mov eax, 0x9; syscall; 
0x00000000119727: je short 0x0000000000119730; pop rbx; ret; 
0x00000000119726: je short 0x0000000000119730; pop rbx; ret; 
0x00000000119a92: je short 0x0000000000119ac5; mov rdi, rbp; xor esi, esi; call r12; 
0x00000000119b22: je short 0x0000000000119b55; mov rdi, rbp; xor esi, esi; call r12; 
0x0000000011a01d: je short 0x000000000011a040; mov rsi, [rbx]; mov r13, rbx; mov rdi, rbp; call r12; 
0x0000000011a709: je short 0x000000000011a73a; mov rdi, rbp; xor esi, esi; call r12; 
0x0000000011a7ba: je short 0x000000000011a7ed; mov rdi, rbp; xor esi, esi; call r12; 
0x0000000011c12c: je short 0x000000000011c190; call rax; 
0x0000000011d033: je short 0x000000000011d040; cmp rdi, rdx; jne short 0x000000000011d028; mov rax, [rax+0x8]; ret; 
0x0000000011ef89: je short 0x000000000011ef99; mov rsi, r8; mov rdi, rbp; call r12; 
0x0000000011f15a: je short 0x000000000011f15d; ret; 
0x0000000011f2b8: je short 0x000000000011f2de; or [rax+0x119], bh; mov edi, [rsp+0x4]; syscall; 
0x0000000011f540: je short 0x000000000011f566; sbb [rbx-0x47f7db84], cl; adc al, 0x1; add [rax], al; syscall; 
0x0000000011f7c6: je short 0x000000000011f7f8; mov eax, 0x145; syscall; 
0x0000000011f7eb: je short 0x000000000011f824; mov eax, r8d; ret; 
0x0000000011f7ea: je short 0x000000000011f824; mov eax, r8d; ret; 
0x0000000011f85a: je short 0x000000000011f888; mov eax, 0x149; syscall; 
0x00000000120b52: je short 0x0000000000120b78; or [rbx-0x47e7db84], cl; and [rcx], al; add [rax], al; syscall; 
0x00000000120c0a: je short 0x0000000000120c30; or [rax+0x12b], bh; mov edi, [rsp+0x4]; syscall; 
0x00000000120cb0: je short 0x0000000000120cd6; adc [rbx-0x47f3db84], cl; xor eax, [rcx]; add [rax], al; syscall; 
0x00000000120fdd: je short 0x0000000000121003; adc [rax+0x46], bh; mov edi, [rsp+0x8]; syscall; 
0x0000000012129d: je short 0x00000000001212a0; ret; 
0x000000001214f5: je short 0x0000000000121503; add edx, edx; mov edi, r12d; mov eax, 0x14; syscall; 
0x00000000121b09: je short 0x0000000000121b20; movsxd rbx, ebx; mov [rip+0xca84b], rbx; pop rbx; ret; 
0x00000000121fe0: je short 0x0000000000122010; add eax, 0x1; mov [rdx], ax; ret; 
0x00000000121f9f: je short 0x0000000000122010; add eax, 0x1; mov [rdx], eax; ret; 
0x00000000125324: je short 0x0000000000125338; pop rbx; pop rbp; pop r12; ret; 
0x0000000012bdc7: je short 0x000000000012bdd0; mov eax, 0x7; ret; 
0x0000000012bdf2: je short 0x000000000012be00; pop rbx; ret; 
0x0000000012bde1: je short 0x000000000012be10; mov rdi, [rdx+0x50]; mov rsi, rdx; call rax; 
0x0000000012cf0f: je short 0x000000000012cf20; ret; 
0x0000000012d0c7: je short 0x000000000012d0f5; lea rsi, [rbp-0x20]; lea rdi, [rip-0x184]; call rax; 
0x0000000012e8f0: je short 0x000000000012e900; add rsp, 0x8; ret; 
0x0000000013787f: je short 0x0000000000137886; mov rdi, rbx; call rax; 
0x00000000137b9f: je short 0x0000000000137ba6; mov rdi, rbx; call rax; 
0x00000000137c67: je short 0x0000000000137c72; lea rdi, [rip+0xb8770]; call rax; 
0x0000000013b3fb: je short 0x000000000013b3f0; pop rbx; ret; 
0x0000000013bcf8: je short 0x000000000013bd3f; cmp edi, 0xb; mov edx, 0x104; cmove eax, edx; ret; 
0x0000000013c359: je short 0x000000000013c368; test eax, eax; jne short 0x000000000013c378; mov eax, r8d; ret; 
0x0000000013f0aa: je short 0x000000000013f058; cmp r11d, r9d; jg short 0x000000000013f066; mov byte ptr [r10], 0x0; ret; 
0x0000000013fe7c: je short 0x000000000013fea2; and al, 0xe8; mov [rsi+rbp*8], fs; dec dword ptr [rax-0x77]; ret; 
0x00000000140be0: je short 0x0000000000140be8; ret; 
0x00000000141a66: je short 0x0000000000141a70; add rsp, 0x8; ret; 
0x0000000014270a: je short 0x00000000001426e9; add [rax-0x7d], cl; ret; 
0x00000000143742: je short 0x000000000014375a; mov rdi, [rip+0xad365]; ror rdi, 0x11; xor rdi, fs:[0x30]; call rax; 
0x00000000143d58: je short 0x0000000000143d27; or al, [rax]; syscall; 
0x00000000144ee5: je short 0x0000000000144f0b; mov rdi, [rsp+0x38]; call qword ptr [rsp+0x68]; 
0x00000000146236: je short 0x000000000014623d; mov rdi, rbp; call rax; 
0x0000000014695f: je short 0x0000000000146985; adc [rax-0x75], cl; and al, 0x8; mov rdi, rbp; call rcx; 
0x000000001469ff: je short 0x0000000000146a80; mov rax, [rdi+0x38]; call qword ptr [rax+0x18]; 
0x00000000146a91: je short 0x0000000000146adb; mov rdi, [r12]; mov rsi, r13; mov rax, [rdi+0x38]; call qword ptr [rax+0x10]; 
0x00000000146b8d: je short 0x0000000000146b94; mov rdi, rbp; call rax; 
0x00000000146b70: je short 0x0000000000146be0; mov rax, [rbx+0x20]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x00000000146cdb: je short 0x0000000000146cec; mov rax, [rdi+0x8]; call qword ptr [rax+0x20]; 
0x00000000146e8d: je short 0x0000000000146e96; mov rax, [rdi+0x8]; call qword ptr [rax+0x20]; 
0x00000000146ebc: je short 0x0000000000146ec0; ret; 
0x000000001476da: je short 0x000000000014766f; mov rax, [rbp+0x8]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x000000001476b6: je short 0x000000000014766f; mov rax, [rbp+0x8]; mov rdi, rbp; mov qword ptr [rsp], 0x0; call qword ptr [rax+0x20]; 
0x00000000147b9a: je short 0x0000000000147b40; mov rax, [rsp+0xc8]; mov rdi, rbx; call qword ptr [rax+0x20]; 
0x00000000147bbc: je short 0x0000000000147bc3; mov rdi, rbx; call rax; 
0x00000000147f19: je short 0x0000000000147f20; mov rdi, rbx; call rax; 
0x00000000148137: je short 0x0000000000148140; xor eax, eax; ret; 
0x000000001481be: je short 0x0000000000148210; mov dword ptr [rsi], 0x10; mov [rsi+0x8], rax; ret; 
0x0000000014821a: je short 0x0000000000148230; mov dword ptr [rsi], 0x10; mov qword ptr [rsi+0x8], 0x1; mov [rsi+0x10], rax; ret; 
0x000000001483b5: je short 0x00000000001483db; add ecx, [rax-0x77]; out dx, eax; and esi, 0xfffffffc; call qword ptr [rax+0x30]; 
0x0000000014842a: je short 0x0000000000148450; add ecx, [rax-0x77]; out dx, eax; and esi, 0xfffffffc; call qword ptr [rax+0x30]; 
0x00000000148728: je short 0x000000000014872f; mov rdi, r13; call rax; 
0x00000000148ab9: je short 0x0000000000148ad8; mov rax, [rbx+0x23b8]; mov rdi, r12; call qword ptr [rax+0x20]; 
0x00000000149125: je short 0x00000000001490a9; mov rax, [rbp+0x8]; lea rsi, [rsp+0x8]; mov rdi, rbp; call qword ptr [rax+0x8]; 
0x000000001490e0: je short 0x00000000001490f2; mov rax, [rbp+0x8]; mov rsi, r12; mov rdi, rbp; call qword ptr [rax]; 
0x0000000014912d: je short 0x0000000000149153; or [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x8]; 
0x0000000014aee2: je short 0x000000000014aef0; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000014afa2: je short 0x000000000014afb0; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000014b0a2: je short 0x000000000014b0b0; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000014cf27: je short 0x000000000014cf32; lea rdi, [rbp+0xc8]; call rax; 
0x0000000014d1bc: je short 0x000000000014d1e2; sbb [rcx+rcx*4-0x19], cl; call qword ptr [rax+0x8]; 
0x0000000014d1eb: je short 0x000000000014d211; xor [rax-0x75], cl; and al, 0x28; mov rdi, r12; call rcx; 
0x0000000014d2ed: je short 0x000000000014d296; mov rax, [rsp+0x10]; mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x18]; 
0x0000000014d406: je short 0x000000000014d42c; mov rdx, [rsp+0x20]; mov rdi, r12; call rdx; 
0x0000000014d95d: je short 0x000000000014d964; mov rdi, rbp; call rax; 
0x0000000014db42: je short 0x000000000014db4b; lea rdi, [r12+0x10]; call rax; 
0x0000000014e78f: je short 0x000000000014e7a8; mov rax, [rbp+0x8]; lea rsi, [rsp+0xc]; mov rdi, rbp; call qword ptr [rax+0x48]; 
0x0000000014e797: je short 0x000000000014e7bd; or al, 0x48; mov edi, ebp; call qword ptr [rax+0x48]; 
0x0000000014e84c: je short 0x000000000014e872; or al, 0x48; mov edi, ebp; call qword ptr [rax+0x48]; 
0x0000000014ee41: je short 0x000000000014ee48; mov rdi, rbp; call rax; 
0x0000000014ef26: je short 0x000000000014ef2d; mov rdi, r13; call rax; 
0x0000000014fd54: je short 0x000000000014fd5c; lea rdi, [rbp+0x68]; call rax; 
0x0000000014ff5f: je short 0x000000000014ff85; or [rbp-0x74b70098], cl; jo short 0x000000000014fef3; imul ecx, [rax+0xf], 0xffffffcd; call qword ptr [rax+0x18]; 
0x0000000014ff7f: je short 0x000000000014ffa5; sbb [rcx+rcx*4-0x19], cl; call qword ptr [rax+0x8]; 
0x0000000014ffae: je short 0x000000000014ffd4; xor [rax-0x75], cl; and al, 0x28; mov rdi, r12; call rcx; 
0x000000001500a6: je short 0x0000000000150053; mov rax, [rsp+0x10]; mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x18]; 
0x0000000015019e: je short 0x00000000001501c4; mov rdx, [rsp+0x20]; mov rdi, r12; call rdx; 
0x0000000015048c: je short 0x0000000000150493; mov rdi, rbp; call rax; 
0x000000001507f4: je short 0x00000000001507fc; lea rdi, [rbp+0x58]; call rax; 
0x000000001509dc: je short 0x0000000000150a02; push rax; mov rcx, [rsp+0x10]; mov rdi, r15; call rcx; 
0x000000001511a5: je short 0x0000000000151220; mov rax, [r15+0x60]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x0000000015145b: je short 0x00000000001514a5; mov eax, [rbp+0x60]; mov rdi, r13; call qword ptr [rax+0x20]; 
0x0000000015145a: je short 0x00000000001514d0; mov rax, [rbp+0x60]; mov rdi, r13; call qword ptr [rax+0x20]; 
0x00000000152485: je short 0x0000000000152495; mov rax, [r8+0x38]; mov rdi, r8; call qword ptr [rax+0x20]; 
0x000000001531e2: je short 0x0000000000153165; mov fs:[rbx], rax; pop rbx; ret; 
0x00000000153163: je short 0x0000000000153170; pop rbx; ret; 
0x00000000153216: je short 0x000000000015321b; mov r8, rax; mov rax, r8; pop rbx; ret; 
0x000000001532d6: je short 0x00000000001532df; lea r8, [rax+0x80]; mov rax, r8; pop rbx; ret; 
0x000000001533a6: je short 0x00000000001533af; lea r8, [rax+0xa0]; mov rax, r8; pop rbx; ret; 
0x00000000153476: je short 0x000000000015347f; lea r8, [rax+0xa8]; mov rax, r8; pop rbx; ret; 
0x0000000015368f: je short 0x00000000001536a0; pop rbx; pop rbp; pop r12; ret; 
0x00000000154262: je short 0x000000000015426b; lea rdi, [r12+0x10]; call rax; 
0x000000001549ab: je short 0x00000000001549b4; lea rdi, [r12+0x10]; call rax; 
0x00000000154d38: je short 0x0000000000154d70; mov rax, [rbp+0x18]; mov rdi, r13; call qword ptr [rax+0x20]; 
0x00000000155d13: je short 0x0000000000155d30; cmp eax, 0x2; sete al; movzx eax, al; ret; 
0x00000000155e35: je short 0x0000000000155e5b; adc [rax-0x77], cl; out dx, eax; call qword ptr [rax]; 
0x00000000155e2d: je short 0x0000000000155ea8; mov rax, [rbp+0x8]; lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax]; 
0x00000000155e8e: je short 0x0000000000155eb4; adc [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x8]; 
0x00000000155f25: je short 0x0000000000155f4b; adc [rax-0x77], cl; out dx, eax; call qword ptr [rax]; 
0x00000000155f1d: je short 0x0000000000155f98; mov rax, [rbp+0x8]; lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax]; 
0x00000000155f7e: je short 0x0000000000155fa4; adc [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x8]; 
0x00000000156015: je short 0x000000000015603b; adc [rax-0x77], cl; out dx, eax; call qword ptr [rax]; 
0x0000000015600d: je short 0x0000000000156088; mov rax, [rbp+0x8]; lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax]; 
0x0000000015606e: je short 0x0000000000156094; adc [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x8]; 
0x00000000156105: je short 0x000000000015612b; adc [rax-0x77], cl; out dx, eax; call qword ptr [rax]; 
0x000000001560fd: je short 0x0000000000156178; mov rax, [rbp+0x8]; lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax]; 
0x0000000015615e: je short 0x0000000000156184; adc [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x8]; 
0x00000000156644: je short 0x000000000015666a; adc [rax-0x77], cl; and al, 0x10; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x000000001567d4: je short 0x00000000001567fa; adc [rax-0x77], cl; and al, 0x10; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x00000000156dc5: je short 0x0000000000156d47; mov rax, [rbp+0x8]; lea rsi, [rsp+0x4]; mov rdi, rbp; call qword ptr [rax+0x48]; 
0x00000000156d7c: je short 0x0000000000156da2; add al, 0x48; mov edi, ebp; call qword ptr [rax+0x40]; 
0x00000000156d74: je short 0x0000000000156de8; mov rax, [rbp+0x8]; lea rsi, [rsp+0x4]; mov rdi, rbp; call qword ptr [rax+0x40]; 
0x00000000156dcd: je short 0x0000000000156df3; add al, 0x48; mov edi, ebp; call qword ptr [rax+0x48]; 
0x00000000156eb5: je short 0x0000000000156e37; mov rax, [rbp+0x8]; lea rsi, [rsp+0x4]; mov rdi, rbp; call qword ptr [rax+0x48]; 
0x00000000156e6c: je short 0x0000000000156e92; add al, 0x48; mov edi, ebp; call qword ptr [rax+0x40]; 
0x00000000156e64: je short 0x0000000000156ed8; mov rax, [rbp+0x8]; lea rsi, [rsp+0x4]; mov rdi, rbp; call qword ptr [rax+0x40]; 
0x00000000156ebd: je short 0x0000000000156ee3; add al, 0x48; mov edi, ebp; call qword ptr [rax+0x48]; 
0x00000000156fa5: je short 0x0000000000156f27; mov rax, [rbp+0x8]; lea rsi, [rsp+0x4]; mov rdi, rbp; call qword ptr [rax+0x48]; 
0x00000000156f5c: je short 0x0000000000156f82; add al, 0x48; mov edi, ebp; call qword ptr [rax+0x40]; 
0x00000000156f54: je short 0x0000000000156fc8; mov rax, [rbp+0x8]; lea rsi, [rsp+0x4]; mov rdi, rbp; call qword ptr [rax+0x40]; 
0x00000000156fad: je short 0x0000000000156fd3; add al, 0x48; mov edi, ebp; call qword ptr [rax+0x48]; 
0x00000000157095: je short 0x0000000000157017; mov rax, [rbp+0x8]; lea rsi, [rsp+0x4]; mov rdi, rbp; call qword ptr [rax+0x48]; 
0x0000000015704c: je short 0x0000000000157072; add al, 0x48; mov edi, ebp; call qword ptr [rax+0x40]; 
0x00000000157044: je short 0x00000000001570b8; mov rax, [rbp+0x8]; lea rsi, [rsp+0x4]; mov rdi, rbp; call qword ptr [rax+0x40]; 
0x0000000015709d: je short 0x00000000001570c3; add al, 0x48; mov edi, ebp; call qword ptr [rax+0x48]; 
0x000000001570e5: je short 0x0000000000157110; mov eax, r8d; ret; 
0x00000000157135: je short 0x0000000000157160; mov eax, r8d; ret; 
0x000000001571e5: je short 0x000000000015720b; add al, 0x89; and al, 0x4; mov rax, [rdi+0x8]; call qword ptr [rax+0x48]; 
0x00000000157275: je short 0x000000000015729b; add al, 0x89; and al, 0x4; mov rax, [rdi+0x8]; call qword ptr [rax+0x48]; 
0x00000000157305: je short 0x000000000015732b; add al, 0x89; and al, 0x4; mov rax, [rdi+0x8]; call qword ptr [rax+0x48]; 
0x00000000157395: je short 0x00000000001573bb; add al, 0x89; and al, 0x4; mov rax, [rdi+0x8]; call qword ptr [rax+0x48]; 
0x0000000015f2cf: je short 0x000000000015f2e3; mov rax, [rip+0x8cb88]; call qword ptr [rax+0x1f8]; 
0x0000000015f776: je short 0x000000000015f790; mov rax, [rip+0x8c6e1]; mov rdi, [rsp]; mov rax, [rax+0x1d8]; jmp rax; 
0x0000000015fbea: je short 0x000000000015fbd7; call qword ptr [rax+0x18]; 
0x00000000160a6c: je short 0x0000000000160a88; mov rax, [rip+0x9092b]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000160a9c: je short 0x0000000000160ab8; mov rax, [rip+0x90903]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000160acc: je short 0x0000000000160ae8; mov rax, [rip+0x908db]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000160afc: je short 0x0000000000160b18; mov rax, [rip+0x908b3]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000160b2c: je short 0x0000000000160b48; mov rax, [rip+0x9088b]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000160b5c: je short 0x0000000000160b78; mov rax, [rip+0x90863]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000162058: je short 0x0000000000162098; out dx, al; dec dword ptr [rax-0x77]; ret; 
0x00000000162ba1: je short 0x0000000000162bbb; mov dword ptr fs:[0x38], 0x0; mov dword ptr fs:[0x40], 0x0; mov eax, r8d; ret; 
0x000000001662ca: je short 0x00000000001662d1; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166378: je short 0x000000000016637f; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000017deb3: je short 0x000000000017de76; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000017eb85: je short 0x000000000017eb88; xchg edx, eax; sub eax, edx; ret; 
0x0000000017ec83: je short 0x000000000017ec46; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000017fb6a: je short 0x000000000017fb6d; xchg edx, eax; sub eax, edx; ret; 
0x0000000017fcc3: je short 0x000000000017fc86; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000181893: je short 0x0000000000181856; lea r10, [r10+r9]; notrack jmp r10; 
0x000000001837d0: je short 0x00000000001837a8; movsxd rcx, ecx; add rax, rcx; sub rax, rdi; ret; 
0x00000000183928: je short 0x0000000000183908; xor eax, eax; ret; 
0x000000001848e1: je short 0x0000000000184942; and ch, al; std; xlat [rbx]; ret; 
0x000000001849cf: je short 0x0000000000184a30; and ch, al; std; xlat [rbx]; ret; 
0x00000000184b1a: je short 0x0000000000184af0; bsr eax, eax; add rax, rdi; vzeroupper; ret; 
0x00000000184d25: je short 0x0000000000184d30; sbb eax, eax; or eax, 0x1; ret; 
0x00000000184dc9: je short 0x0000000000184d9c; vpmovmskb eax, xmm2; sub eax, 0xffff; jne 0x0000000000184ce0; ret; 
0x00000000184e07: je short 0x0000000000184e20; vpmovmskb eax, xmm2; sub eax, 0xffff; jne 0x0000000000184ce0; ret; 
0x000000001850b3: je short 0x0000000000185076; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000186753: je short 0x0000000000186716; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000018858f: je short 0x0000000000188544; bsr eax, eax; lea rax, [rdi+rax-0x20]; vzeroupper; ret; 
0x000000001885b4: je short 0x00000000001885d0; bsr eax, eax; lea rax, [rdi+rax-0x20]; vzeroupper; ret; 
0x00000000188fef: je short 0x0000000000189070; mov byte ptr [rdi], 0x0; vzeroupper; ret; 
0x00000000189d8f: je short 0x0000000000189e10; mov byte ptr [rdi], 0x0; vzeroupper; ret; 
0x0000000018aa7f: je short 0x000000000018ab00; mov byte ptr [rdi], 0x0; lea rax, [rdi]; vzeroupper; ret; 
0x0000000018cefa: je short 0x000000000018ce94; bsr eax, eax; lea rax, [rdi+rax-0x20]; vzeroupper; ret; 
0x0000000018cf2f: je short 0x000000000018cf40; bsr eax, eax; lea rax, [rdi+rax-0x20]; vzeroupper; ret; 
0x0000000018d588: je short 0x000000000018d589; add al, [rax]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018e7f7: je short 0x000000000018e7fb; add [rax], al; xor eax, eax; ret; 
0x000000001904dc: je short 0x00000000001904f5; std; vmovdqu64 [rdi+rdx-0x100], zmm7; vzeroupper; ret; 
0x000000001929b5: je short 0x00000000001929d0; mov eax, [rdi-0x10]; cmp eax, [rsi-0x10]; jne 0x0000000000192af0; ret; 
0x000000001929e3: je short 0x0000000000192a00; mov eax, [rdi-0x8]; cmp eax, [rsi-0x8]; jne 0x0000000000192af0; ret; 
0x00000000196c8f: je short 0x0000000000196cb5; adc [rcx-0x77], cl; ret; 
0x0000000019717a: je short 0x000000000019718c; movss xmm0, [rip+0x261fc]; divss xmm0, [rip+0x27508]; ret; 
0x0000000019838e: je short 0x0000000000198392; call rax; 
0x0000000019848b: je short 0x0000000000198494; call rax; 
0x00000000198482: je short 0x0000000000198499; mov rax, [rdi+0x20]; test rax, rax; je short 0x0000000000198494; call rax; 
0x000000001986e1: je short 0x0000000000198707; adc al, ch; mov bh, 0x2; clc; call far fword ptr [rbx+0x4c]; 
0x0000000019904e: je short 0x0000000000199038; xor eax, eax; add rsp, 0x10; pop rbx; ret; 
0x00000000041d38: jg short 0x0000000000041d43; bnd je 0x0000000000041c88; ret; 
0x000000000423ea: jg short 0x000000000004236c; shl eax, 0x17; or esi, eax; movd xmm0, esi; ret; 
0x00000000042387: jg short 0x0000000000042389; je short 0x0000000000042390; ret; 
0x00000000042624: jg short 0x000000000004266e; sub eax, edx; shr rax, 0x3f; ret; 
0x0000000004343a: jg short 0x000000000004343c; add [rax], al; syscall; 
0x00000000044125: jg short 0x00000000000440a7; sbb al, [rax]; mov eax, edx; ret; 
0x00000000047ccc: jg short 0x0000000000047c57; adc [rcx-0x3f76bbea], cl; ret; 
0x00000000057c87: jg short 0x0000000000057c89; or esi, eax; or esi, edx; movd xmm0, esi; ret; 
0x00000000057c19: jg short 0x0000000000057c90; loopne 0x0000000000057bd5; add [rax], eax; add [rax], al; ret; 
0x0000000007bb07: jg short 0x000000000007bb18; test [rbp-0x7c000012], dh; ret; 
0x0000000007c145: jg short 0x000000000007c0d2; lea eax, [rax]; idiv edi; jmp far fword ptr [rcx]; 
0x0000000008ce8c: jg short 0x000000000008ce11; inc byte ptr [rdx]; cmovne edx, ecx; mov [rdi], edx; ret; 
0x0000000009e67e: jg short 0x000000000009e6c8; mov rsi, rbp; call rax; 
0x000000000b6f76: jg short 0x00000000000b6f7f; ret; 
0x000000000b6f86: jg short 0x00000000000b6f8f; mov [rdi+0x10], dh; ret; 
0x000000000b6f9a: jg short 0x00000000000b6fa3; mov [rdi+0x10], cx; ret; 
0x000000000b6fb9: jg short 0x00000000000b6fc2; mov [rdi+0xf], ecx; ret; 
0x000000000b6fc9: jg short 0x00000000000b6fd2; mov [rdi+0x10], ecx; ret; 
0x000000000b6fd9: jg short 0x00000000000b6fe2; mov [rdi+0x10], ecx; mov [rdi+0x14], dh; ret; 
0x000000000b6ffa: jg short 0x00000000000b7003; mov [rdi+0xe], rcx; ret; 
0x000000000b701a: jg short 0x00000000000b7023; mov [rdi+0xf], rcx; ret; 
0x000000000b703a: jg short 0x00000000000b7043; mov [rdi+0x10], rcx; ret; 
0x000000000b705a: jg short 0x00000000000b7063; mov [rdi+0x10], rcx; mov [rdi+0x18], dh; ret; 
0x000000000b707e: jg short 0x00000000000b7087; mov [rdi+0x10], rdx; mov [rdi+0x18], cx; ret; 
0x000000000b709d: jg short 0x00000000000b70a6; mov [rdi+0x10], rdx; mov [rdi+0x17], ecx; ret; 
0x000000000b70bd: jg short 0x00000000000b70c6; mov [rdi+0x10], rdx; mov [rdi+0x18], ecx; ret; 
0x000000000b70db: jg short 0x00000000000b70e4; movdqu [rdi+0xd], xmm2; ret; 
0x000000000b70fb: jg short 0x00000000000b7104; movdqu [rdi+0xe], xmm2; ret; 
0x000000000b711b: jg short 0x00000000000b7124; movdqu [rdi+0xf], xmm2; ret; 
0x000000000b713b: jg short 0x00000000000b7144; movdqu [rdi+0x10], xmm2; ret; 
0x000000000b76e8: jg short 0x00000000000b76eb; jne 0x00000000000b7fa0; ret; 
0x000000000b770c: jg short 0x00000000000b7710; jne 0x00000000000b7fa0; ret; 
0x000000000b772f: jg short 0x00000000000b7734; jne 0x00000000000b7fa0; ret; 
0x000000000b774a: jg short 0x00000000000b7750; jne 0x00000000000b7fa0; ret; 
0x000000000b776d: jg short 0x00000000000b7774; jne 0x00000000000b7fa0; ret; 
0x000000000b7792: jg short 0x00000000000b779a; jne 0x00000000000b7fa0; ret; 
0x000000000b77b0: jg short 0x00000000000b77b9; jne 0x00000000000b7fa0; ret; 
0x000000000b77cc: jg short 0x00000000000b77d6; jne 0x00000000000b7fa0; ret; 
0x000000000b77ef: jg short 0x00000000000b77fa; jne 0x00000000000b7fa0; ret; 
0x000000000b7814: jg short 0x00000000000b7820; jne 0x00000000000b7fa0; ret; 
0x000000000b7832: jg short 0x00000000000b783f; jne 0x00000000000b7fa0; ret; 
0x000000000b7852: jg short 0x00000000000b7860; jne 0x00000000000b7fa0; ret; 
0x000000000b7874: jg short 0x00000000000b7883; jne 0x00000000000b7fa0; ret; 
0x000000000b7894: jg short 0x00000000000b78a4; jne 0x00000000000b7fa0; ret; 
0x000000000b78b4: jg short 0x00000000000b78c5; jne 0x00000000000b7fa0; ret; 
0x000000000b78c6: jg short 0x00000000000b78cf; sub r8, 0x10; lea rdi, [rdi+0x10]; jne 0x00000000000b7fa0; ret; 
0x000000000b78ce: jg short 0x00000000000b78e0; jne 0x00000000000b7fa0; ret; 
0x000000000b78f1: jg short 0x00000000000b7904; jne 0x00000000000b7fa0; ret; 
0x000000000b7916: jg short 0x00000000000b792a; jne 0x00000000000b7fa0; ret; 
0x000000000b7934: jg short 0x00000000000b7949; jne 0x00000000000b7fa0; ret; 
0x000000000b7954: jg short 0x00000000000b796a; jne 0x00000000000b7fa0; ret; 
0x000000000b7977: jg short 0x00000000000b798e; jne 0x00000000000b7fa0; ret; 
0x000000000b7996: jg short 0x00000000000b79ae; jne 0x00000000000b7fa0; ret; 
0x000000000b79b6: jg short 0x00000000000b79cf; jne 0x00000000000b7fa0; ret; 
0x000000000b79d6: jg short 0x00000000000b79f0; jne 0x00000000000b7fa0; ret; 
0x000000000b79f9: jg short 0x00000000000b7a14; jne 0x00000000000b7fa0; ret; 
0x000000000b7a2e: jg short 0x00000000000b7a4a; jne 0x00000000000b7fa0; ret; 
0x000000000b7a5c: jg short 0x00000000000b7a79; jne 0x00000000000b7fa0; ret; 
0x000000000b7a8c: jg short 0x00000000000b7aaa; jne 0x00000000000b7fa0; ret; 
0x000000000b7ab8: jg short 0x00000000000b7ad7; jne 0x00000000000b7fa0; ret; 
0x000000000b7ae8: jg short 0x00000000000b7b08; jne 0x00000000000b7fa0; ret; 
0x000000000b7aaf: jg short 0x00000000000b7b08; or eax, 0x1de88349; lea rdi, [rdi+0x1d]; jne 0x00000000000b7fa0; ret; 
0x000000000b7b18: jg short 0x00000000000b7b39; jne 0x00000000000b7fa0; ret; 
0x000000000b7b0f: jg short 0x00000000000b7b68; cmovns eax, [rbx-0x72b7e018]; jg short 0x00000000000b7b39; jne 0x00000000000b7fa0; ret; 
0x000000000b7b48: jg short 0x00000000000b7b6a; jne 0x00000000000b7fa0; ret; 
0x000000000b7c66: jg short 0x00000000000b7c6f; ret; 
0x000000000b7c79: jg short 0x00000000000b7c82; mov [rdi+0x10], cl; ret; 
0x000000000b7c8a: jg short 0x00000000000b7c93; mov [rdi+0x10], cx; ret; 
0x000000000b7ca9: jg short 0x00000000000b7cb2; mov [rdi+0xf], ecx; ret; 
0x000000000b7cb9: jg short 0x00000000000b7cc2; mov [rdi+0x10], ecx; ret; 
0x000000000b7ccc: jg short 0x00000000000b7cd5; mov [rdi+0x10], ecx; mov [rdi+0x14], dl; ret; 
0x000000000b7cea: jg short 0x00000000000b7cf3; mov [rdi+0xe], rcx; ret; 
0x000000000b7d0a: jg short 0x00000000000b7d13; mov [rdi+0xf], rcx; ret; 
0x000000000b7d2a: jg short 0x00000000000b7d33; mov [rdi+0x10], rcx; ret; 
0x000000000b7d4d: jg short 0x00000000000b7d56; mov [rdi+0x10], rdx; mov [rdi+0x18], cl; ret; 
0x000000000b7d6e: jg short 0x00000000000b7d77; mov [rdi+0x10], rdx; mov [rdi+0x18], cx; ret; 
0x000000000b7d8d: jg short 0x00000000000b7d96; mov [rdi+0x10], rdx; mov [rdi+0x17], ecx; ret; 
0x000000000b7dad: jg short 0x00000000000b7db6; mov [rdi+0x10], rdx; mov [rdi+0x18], ecx; ret; 
0x000000000b7dcb: jg short 0x00000000000b7dd4; movdqu [rdi+0xd], xmm2; ret; 
0x000000000b7deb: jg short 0x00000000000b7df4; movdqu [rdi+0xe], xmm2; ret; 
0x000000000b7e0b: jg short 0x00000000000b7e14; movdqu [rdi+0xf], xmm2; ret; 
0x000000000b7e2b: jg short 0x00000000000b7e34; movdqu [rdi+0x10], xmm2; ret; 
0x000000000b7e4e: jg short 0x00000000000b7e57; movdqu [rdi+0x10], xmm2; mov [rdi+0x20], cl; ret; 
0x000000000b7f62: jg short 0x00000000000b7f6b; ret; 
0x000000000b7f52: jg short 0x00000000000b7f9b; inc ebx; nop [rax+rax]; movdqu [rdi], xmm0; ret; 
0x000000000b80a6: jg short 0x00000000000b80d8; ret; 
0x000000000b8626: jg short 0x00000000000b862f; lea rax, [rdi+0xf]; ret; 
0x000000000b8636: jg short 0x00000000000b863f; mov [rdi+0x10], dh; lea rax, [rdi+0x10]; ret; 
0x000000000b864a: jg short 0x00000000000b8653; mov [rdi+0x10], cx; lea rax, [rdi+0x11]; ret; 
0x000000000b8669: jg short 0x00000000000b8672; mov [rdi+0xf], ecx; lea rax, [rdi+0x12]; ret; 
0x000000000b8689: jg short 0x00000000000b8692; mov [rdi+0x10], ecx; lea rax, [rdi+0x13]; ret; 
0x000000000b86a9: jg short 0x00000000000b86b2; mov [rdi+0x10], ecx; mov [rdi+0x14], dh; lea rax, [rdi+0x14]; ret; 
0x000000000b86ca: jg short 0x00000000000b86d3; mov [rdi+0xe], rcx; lea rax, [rdi+0x15]; ret; 
0x000000000b86ea: jg short 0x00000000000b86f3; mov [rdi+0xf], rcx; lea rax, [rdi+0x16]; ret; 
0x000000000b870a: jg short 0x00000000000b8713; mov [rdi+0x10], rcx; lea rax, [rdi+0x17]; ret; 
0x000000000b872a: jg short 0x00000000000b8733; mov [rdi+0x10], rcx; mov [rdi+0x18], dh; lea rax, [rdi+0x18]; ret; 
0x000000000b874e: jg short 0x00000000000b8757; mov [rdi+0x10], rdx; mov [rdi+0x18], cx; lea rax, [rdi+0x19]; ret; 
0x000000000b876d: jg short 0x00000000000b8776; mov [rdi+0x10], rdx; mov [rdi+0x17], ecx; lea rax, [rdi+0x1a]; ret; 
0x000000000b878d: jg short 0x00000000000b8796; mov [rdi+0x10], rdx; mov [rdi+0x18], ecx; lea rax, [rdi+0x1b]; ret; 
0x000000000b87ab: jg short 0x00000000000b87b4; movdqu [rdi+0xd], xmm2; lea rax, [rdi+0x1c]; ret; 
0x000000000b87cb: jg short 0x00000000000b87d4; movdqu [rdi+0xe], xmm2; lea rax, [rdi+0x1d]; ret; 
0x000000000b87eb: jg short 0x00000000000b87f4; movdqu [rdi+0xf], xmm2; lea rax, [rdi+0x1e]; ret; 
0x000000000b87af: jg short 0x00000000000b8808; or eax, 0x1c478d48; ret; 
0x000000000b880b: jg short 0x00000000000b8814; movdqu [rdi+0x10], xmm2; lea rax, [rdi+0x1f]; ret; 
0x000000000b8dcb: jg short 0x00000000000b8dce; jne 0x00000000000b97f0; ret; 
0x000000000b8df0: jg short 0x00000000000b8df4; jne 0x00000000000b97f0; ret; 
0x000000000b8e13: jg short 0x00000000000b8e18; jne 0x00000000000b97f0; ret; 
0x000000000b8e2e: jg short 0x00000000000b8e34; jne 0x00000000000b97f0; ret; 
0x000000000b8e51: jg short 0x00000000000b8e58; jne 0x00000000000b97f0; ret; 
0x000000000b8e76: jg short 0x00000000000b8e7e; jne 0x00000000000b97f0; ret; 
0x000000000b8e94: jg short 0x00000000000b8e9d; jne 0x00000000000b97f0; ret; 
0x000000000b8eb0: jg short 0x00000000000b8eba; jne 0x00000000000b97f0; ret; 
0x000000000b8ed3: jg short 0x00000000000b8ede; jne 0x00000000000b97f0; ret; 
0x000000000b8ef8: jg short 0x00000000000b8f04; jne 0x00000000000b97f0; ret; 
0x000000000b8f26: jg short 0x00000000000b8f33; jne 0x00000000000b97f0; ret; 
0x000000000b8f46: jg short 0x00000000000b8f54; jne 0x00000000000b97f0; ret; 
0x000000000b8f68: jg short 0x00000000000b8f77; jne 0x00000000000b97f0; ret; 
0x000000000b8f98: jg short 0x00000000000b8fa8; jne 0x00000000000b97f0; ret; 
0x000000000b8fc8: jg short 0x00000000000b8fd9; jne 0x00000000000b97f0; ret; 
0x000000000b8ff2: jg short 0x00000000000b9004; jne 0x00000000000b97f0; ret; 
0x000000000b9015: jg short 0x00000000000b9028; jne 0x00000000000b97f0; ret; 
0x000000000b903a: jg short 0x00000000000b904e; jne 0x00000000000b97f0; ret; 
0x000000000b9068: jg short 0x00000000000b907d; jne 0x00000000000b97f0; ret; 
0x000000000b9098: jg short 0x00000000000b90ae; jne 0x00000000000b97f0; ret; 
0x000000000b90cb: jg short 0x00000000000b90e2; jne 0x00000000000b97f0; ret; 
0x000000000b90fa: jg short 0x00000000000b9112; jne 0x00000000000b97f0; ret; 
0x000000000b912a: jg short 0x00000000000b9143; jne 0x00000000000b97f0; ret; 
0x000000000b915a: jg short 0x00000000000b9174; jne 0x00000000000b97f0; ret; 
0x000000000b918d: jg short 0x00000000000b91a8; jne 0x00000000000b97f0; ret; 
0x000000000b91c2: jg short 0x00000000000b91de; jne 0x00000000000b97f0; ret; 
0x000000000b91f0: jg short 0x00000000000b920d; jne 0x00000000000b97f0; ret; 
0x000000000b9220: jg short 0x00000000000b923e; jne 0x00000000000b97f0; ret; 
0x000000000b924c: jg short 0x00000000000b926b; jne 0x00000000000b97f0; ret; 
0x000000000b927c: jg short 0x00000000000b929c; jne 0x00000000000b97f0; ret; 
0x000000000b92ac: jg short 0x00000000000b92cd; jne 0x00000000000b97f0; ret; 
0x000000000b92dc: jg short 0x00000000000b92fe; jne 0x00000000000b97f0; ret; 
0x000000000b9486: jg short 0x00000000000b948f; lea rax, [rdi+0x10]; ret; 
0x000000000b9499: jg short 0x00000000000b94a2; mov [rdi+0x10], cl; lea rax, [rdi+0x11]; ret; 
0x000000000b94ba: jg short 0x00000000000b94c3; mov [rdi+0x10], cx; lea rax, [rdi+0x12]; ret; 
0x000000000b94d9: jg short 0x00000000000b94e2; mov [rdi+0xf], ecx; lea rax, [rdi+0x13]; ret; 
0x000000000b94f9: jg short 0x00000000000b9502; mov [rdi+0x10], ecx; lea rax, [rdi+0x14]; ret; 
0x000000000b951c: jg short 0x00000000000b9525; mov [rdi+0x10], ecx; mov [rdi+0x14], dl; lea rax, [rdi+0x15]; ret; 
0x000000000b953a: jg short 0x00000000000b9543; mov [rdi+0xe], rcx; lea rax, [rdi+0x16]; ret; 
0x000000000b955a: jg short 0x00000000000b9563; mov [rdi+0xf], rcx; lea rax, [rdi+0x17]; ret; 
0x000000000b957a: jg short 0x00000000000b9583; mov [rdi+0x10], rcx; lea rax, [rdi+0x18]; ret; 
0x000000000b959d: jg short 0x00000000000b95a6; mov [rdi+0x10], rdx; mov [rdi+0x18], cl; lea rax, [rdi+0x19]; ret; 
0x000000000b95be: jg short 0x00000000000b95c7; mov [rdi+0x10], rdx; mov [rdi+0x18], cx; lea rax, [rdi+0x1a]; ret; 
0x000000000b95dd: jg short 0x00000000000b95e6; mov [rdi+0x10], rdx; mov [rdi+0x17], ecx; lea rax, [rdi+0x1b]; ret; 
0x000000000b95fd: jg short 0x00000000000b9606; mov [rdi+0x10], rdx; mov [rdi+0x18], ecx; lea rax, [rdi+0x1c]; ret; 
0x000000000b961b: jg short 0x00000000000b9624; movdqu [rdi+0xd], xmm2; lea rax, [rdi+0x1d]; ret; 
0x000000000b963b: jg short 0x00000000000b9644; movdqu [rdi+0xe], xmm2; lea rax, [rdi+0x1e]; ret; 
0x000000000b965b: jg short 0x00000000000b9664; movdqu [rdi+0xf], xmm2; lea rax, [rdi+0x1f]; ret; 
0x000000000b961f: jg short 0x00000000000b9678; or eax, 0x1d478d48; ret; 
0x000000000b967b: jg short 0x00000000000b9684; movdqu [rdi+0x10], xmm2; lea rax, [rdi+0x20]; ret; 
0x000000000b969e: jg short 0x00000000000b96a7; movdqu [rdi+0x10], xmm2; mov [rdi+0x20], cl; ret; 
0x000000000b97b2: jg short 0x00000000000b97bb; ret; 
0x000000000b97a2: jg short 0x00000000000b97eb; inc ebx; nop [rax+rax]; movdqu [rdi], xmm0; ret; 
0x000000000b98f6: jg short 0x00000000000b9928; lea rax, [rdi+0x40]; ret; 
0x000000000b98f5: jg short 0x00000000000b9976; xor [rax-0x73], cl; ret; 
0x000000000ba286: jg short 0x00000000000ba28f; ret; 
0x000000000ba296: jg short 0x00000000000ba29f; mov [rdi+0x10], dh; ret; 
0x000000000ba2aa: jg short 0x00000000000ba2b3; mov [rdi+0x10], cx; ret; 
0x000000000ba2c9: jg short 0x00000000000ba2d2; mov [rdi+0xf], ecx; ret; 
0x000000000ba2d9: jg short 0x00000000000ba2e2; mov [rdi+0x10], ecx; ret; 
0x000000000ba2e9: jg short 0x00000000000ba2f2; mov [rdi+0x10], ecx; mov [rdi+0x14], dh; ret; 
0x000000000ba30a: jg short 0x00000000000ba313; mov [rdi+0xe], rcx; ret; 
0x000000000ba32a: jg short 0x00000000000ba333; mov [rdi+0xf], rcx; ret; 
0x000000000ba34a: jg short 0x00000000000ba353; mov [rdi+0x10], rcx; ret; 
0x000000000ba36a: jg short 0x00000000000ba373; mov [rdi+0x10], rcx; mov [rdi+0x18], dh; ret; 
0x000000000ba38e: jg short 0x00000000000ba397; mov [rdi+0x10], rdx; mov [rdi+0x18], cx; ret; 
0x000000000ba3ad: jg short 0x00000000000ba3b6; mov [rdi+0x10], rdx; mov [rdi+0x17], ecx; ret; 
0x000000000ba3cd: jg short 0x00000000000ba3d6; mov [rdi+0x10], rdx; mov [rdi+0x18], ecx; ret; 
0x000000000ba3eb: jg short 0x00000000000ba3f4; movdqu [rdi+0xd], xmm2; ret; 
0x000000000ba40b: jg short 0x00000000000ba414; movdqu [rdi+0xe], xmm2; ret; 
0x000000000ba42b: jg short 0x00000000000ba434; movdqu [rdi+0xf], xmm2; ret; 
0x000000000ba44b: jg short 0x00000000000ba454; movdqu [rdi+0x10], xmm2; ret; 
0x000000000bad76: jg short 0x00000000000bad7f; ret; 
0x000000000bad86: jg short 0x00000000000bad8f; mov [rdi+0x10], dh; ret; 
0x000000000bad9a: jg short 0x00000000000bada3; mov [rdi+0x10], cx; ret; 
0x000000000badb9: jg short 0x00000000000badc2; mov [rdi+0xf], ecx; ret; 
0x000000000badc9: jg short 0x00000000000badd2; mov [rdi+0x10], ecx; ret; 
0x000000000badd9: jg short 0x00000000000bade2; mov [rdi+0x10], ecx; mov [rdi+0x14], dh; ret; 
0x000000000badfa: jg short 0x00000000000bae03; mov [rdi+0xe], rcx; ret; 
0x000000000bae1a: jg short 0x00000000000bae23; mov [rdi+0xf], rcx; ret; 
0x000000000bae3a: jg short 0x00000000000bae43; mov [rdi+0x10], rcx; ret; 
0x000000000bae5a: jg short 0x00000000000bae63; mov [rdi+0x10], rcx; mov [rdi+0x18], dh; ret; 
0x000000000bae7e: jg short 0x00000000000bae87; mov [rdi+0x10], rdx; mov [rdi+0x18], cx; ret; 
0x000000000bae9d: jg short 0x00000000000baea6; mov [rdi+0x10], rdx; mov [rdi+0x17], ecx; ret; 
0x000000000baebd: jg short 0x00000000000baec6; mov [rdi+0x10], rdx; mov [rdi+0x18], ecx; ret; 
0x000000000baedb: jg short 0x00000000000baee4; movdqu [rdi+0xd], xmm2; ret; 
0x000000000baefb: jg short 0x00000000000baf04; movdqu [rdi+0xe], xmm2; ret; 
0x000000000baf1b: jg short 0x00000000000baf24; movdqu [rdi+0xf], xmm2; ret; 
0x000000000baf3b: jg short 0x00000000000baf44; movdqu [rdi+0x10], xmm2; ret; 
0x000000000bb0e6: jg short 0x00000000000bb0ef; xor ch, ch; mov [rdi+0x10], ch; ret; 
0x000000000bb0f9: jg short 0x00000000000bb102; mov [rdi+0x10], cl; xor ch, ch; mov [rdi+0x11], ch; ret; 
0x000000000bb11a: jg short 0x00000000000bb123; mov [rdi+0x10], cx; xor ch, ch; mov [rdi+0x12], ch; ret; 
0x000000000bb139: jg short 0x00000000000bb142; mov [rdi+0xf], ecx; xor ch, ch; mov [rdi+0x13], ch; ret; 
0x000000000bb159: jg short 0x00000000000bb162; mov [rdi+0x10], ecx; xor ch, ch; mov [rdi+0x14], ch; ret; 
0x000000000bb19a: jg short 0x00000000000bb1a3; mov [rdi+0xe], rcx; xor ch, ch; mov [rdi+0x16], ch; ret; 
0x000000000bb1ba: jg short 0x00000000000bb1c3; mov [rdi+0xf], rcx; xor ch, ch; mov [rdi+0x17], ch; ret; 
0x000000000bb1da: jg short 0x00000000000bb1e3; mov [rdi+0x10], rcx; xor ch, ch; mov [rdi+0x18], ch; ret; 
0x000000000bb27b: jg short 0x00000000000bb284; movdqu [rdi+0xd], xmm2; xor ch, ch; mov [rdi+0x1d], ch; ret; 
0x000000000bb29b: jg short 0x00000000000bb2a4; movdqu [rdi+0xe], xmm2; xor ch, ch; mov [rdi+0x1e], ch; ret; 
0x000000000bb2bb: jg short 0x00000000000bb2c4; movdqu [rdi+0xf], xmm2; xor ch, ch; mov [rdi+0x1f], ch; ret; 
0x000000000bb2db: jg short 0x00000000000bb2e4; movdqu [rdi+0x10], xmm2; xor ch, ch; mov [rdi+0x20], ch; ret; 
0x000000000bb2bf: jg short 0x00000000000bb318; wrmsr; in eax, dx; mov [rdi+0x1f], ch; ret; 
0x000000000bb2df: jg short 0x00000000000bb338; adc [rax], dh; in eax, dx; mov [rdi+0x20], ch; ret; 
0x000000000bb302: jg short 0x00000000000bb35b; adc [rax-0x12cfdfb1], cl; mov [rdi+0x21], ch; ret; 
0x000000000bb356: jg short 0x00000000000bb388; xor ch, ch; mov [rdi+0x40], ch; ret; 
0x000000000bb355: jg short 0x00000000000bb3d6; xor [rax], dh; in eax, dx; mov [rdi+0x40], ch; ret; 
0x000000000bbdf8: jg short 0x00000000000bbe2a; movups [r11], xmm8; ret; 
0x000000000bbec6: jg short 0x00000000000bbef8; movups [r11], xmm8; ret; 
0x000000000bbf54: jg short 0x00000000000bbf5d; ret; 
0x000000000bbfd0: jg short 0x00000000000bbfd9; ret; 
0x000000000bbfe4: jg short 0x00000000000bbfed; movdqu [rdi+0x10], xmm0; movdqu [rdi+rdx-0x10], xmm0; movdqu [rdi+rdx-0x20], xmm0; ret; 
0x000000000bbfe8: jg short 0x00000000000bc031; adc bl, dh; movq [rdi+rdx-0x10], mm0; movdqu [rdi+rdx-0x20], xmm0; ret; 
0x000000000bc1db: jg short 0x00000000000bc1a0; nop [rax]; mov rax, rdx; pop rbx; ret; 
0x000000000cf0b5: jg short 0x00000000000cf0b9; neg eax; ret; 
0x000000000d005b: jg short 0x00000000000d0080; mov rax, r12; pop r12; ret; 
0x000000000d015e: jg short 0x00000000000d0180; lea rax, [rip+0x11ef39]; add rsp, 0x8; ret; 
0x000000000de2df: jg short 0x00000000000de329; cmova edx, eax; mov eax, 0xd9; syscall; 
0x000000000e4fb3: jg short 0x00000000000e4fb5; add [rax], al; cmove rax, rdx; ret; 
0x000000000e4f73: jg short 0x00000000000e4fbe; cmp eax, 0x58465342; jne short 0x00000000000e4f80; ret; 
0x000000000e4fcd: jg short 0x00000000000e4fcf; add [rax], al; cmove rax, rdx; ret; 
0x000000000e500a: jg short 0x00000000000e500c; add [rax], al; cmove rax, rdx; ret; 
0x000000000e501b: jg short 0x00000000000e501d; add [rax], al; cmovne rax, rdx; ret; 
0x000000000e5016: jg short 0x00000000000e502b; add [rax], al; mov edx, 0x7f; cmovne rax, rdx; ret; 
0x000000000e503b: jg short 0x00000000000e503d; add [rax], al; cmovne rax, rdx; ret; 
0x000000000e61f4: jg short 0x00000000000e61f6; jmp qword ptr [rsp+rax*2-0x77]; 
0x000000000e8d71: jg short 0x00000000000e8d7f; add [rax+0x63], cl; add al, 0x86; add rax, rsi; notrack jmp rax; 
0x000000000ff5ad: jg short 0x00000000000ff5dc; bnd jmp qword ptr [rsi+0xf]; 
0x0000000010c727: jg short 0x000000000010c7a1; movups [rsi+0x70], xmm7; ret; 
0x0000000010c77b: jg short 0x000000000010c7f5; ret; 
0x00000000112a86: jg short 0x0000000000112ad0; add esp, 0x40; pop r12; ret; 
0x00000000117c43: jg short 0x0000000000117c46; ret; 
0x0000000011a8d0: jg short 0x000000000011a91b; mov edi, [rsp]; call rbx; 
0x0000000011ab38: jg short 0x000000000011ab3d; add [rax], al; mov rdi, [r15]; call rbx; 
0x00000000137796: jg short 0x000000000013779a; add [rax-0x77], cl; fimul st, word ptr [rax-0x77]; out dx, eax; call qword ptr [rsp+0x10]; 
0x000000001377ec: jg short 0x00000000001377f0; add [rax-0x75], cl; and al, 0x8; mov rdi, rbx; call rax; 
0x0000000013c757: jg short 0x000000000013c71c; nop [rax]; mov eax, 0xffffffff; ret; 
0x0000000013c9f4: jg short 0x000000000013c9b9; nop [rax+rax]; xor eax, eax; ret; 
0x0000000013c9e2: jg short 0x000000000013c9e5; enter 0x480f, 0xc2; ret; 
0x0000000013f0af: jg short 0x000000000013f066; mov byte ptr [r10], 0x0; ret; 
0x00000000144add: jg short 0x0000000000144a8b; add [rax], eax; mov edi, [r13]; call qword ptr [rsp+0x20]; 
0x00000000146a00: jg short 0x0000000000146a4a; mov eax, [rdi+0x38]; call qword ptr [rax+0x18]; 
0x0000000014dd26: jg short 0x000000000014dd68; mov eax, [rdi]; test eax, eax; jne short 0x000000000014dd30; ret; 
0x00000000154426: jg short 0x0000000000154468; mov eax, [rdi]; test eax, eax; jne short 0x0000000000154430; ret; 
0x00000000157b84: jg short 0x0000000000157b83; jmp qword ptr [rsi+0xf]; 
0x0000000015c03f: jg short 0x000000000015c02e; jmp qword ptr [rsi+0x66]; 
0x0000000015f816: jg short 0x000000000015f820; push 0x0; lea rcx, [rsi+0x398]; push 0x2; call qword ptr [rax+0x1e0]; 
0x0000000015f867: jg short 0x000000000015f871; push 0x0; lea rcx, [rsi+0x398]; push 0x0; call qword ptr [rax+0x1e0]; 
0x0000000016061d: jg short 0x0000000000160613; cld; jmp qword ptr [rsi+0x2e]; 
0x000000001663f5: jg short 0x00000000001663b7; movaps [rdi+0x10], xmm3; jb short 0x0000000000166406; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000166410: jg short 0x0000000000166412; lea r11, [rip+0x57367]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166545: jg short 0x0000000000166507; movaps [rdi+0x10], xmm3; jb short 0x0000000000166556; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000166560: jg short 0x0000000000166562; lea r11, [rip+0x57217]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166695: jg short 0x0000000000166657; movaps [rdi+0x10], xmm3; jb short 0x00000000001666a6; movaps [rdi], xmm4; notrack jmp r9; 
0x000000001666b0: jg short 0x00000000001666b2; lea r11, [rip+0x570c7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001667e5: jg short 0x00000000001667a7; movaps [rdi+0x10], xmm3; jb short 0x00000000001667f6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000166800: jg short 0x0000000000166802; lea r11, [rip+0x56f77]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166935: jg short 0x00000000001668f7; movaps [rdi+0x10], xmm3; jb short 0x0000000000166946; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000166950: jg short 0x0000000000166952; lea r11, [rip+0x56e27]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166a85: jg short 0x0000000000166a47; movaps [rdi+0x10], xmm3; jb short 0x0000000000166a96; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000166aa0: jg short 0x0000000000166aa2; lea r11, [rip+0x56cd7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166bd5: jg short 0x0000000000166b97; movaps [rdi+0x10], xmm3; jb short 0x0000000000166be6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000166bf0: jg short 0x0000000000166bf2; lea r11, [rip+0x56b87]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166ca5: jg short 0x0000000000166ca7; lea r11, [rip+0x56ad2]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166d25: jg short 0x0000000000166ce7; movaps [rdi+0x10], xmm3; jb short 0x0000000000166d36; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000166d40: jg short 0x0000000000166d42; lea r11, [rip+0x56a37]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166e75: jg short 0x0000000000166e37; movaps [rdi+0x10], xmm3; jb short 0x0000000000166e86; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000166e90: jg short 0x0000000000166e92; lea r11, [rip+0x568e7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166fc5: jg short 0x0000000000166f87; movaps [rdi+0x10], xmm3; jb short 0x0000000000166fd6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000166fe0: jg short 0x0000000000166fe2; lea r11, [rip+0x56797]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000167115: jg short 0x00000000001670d7; movaps [rdi+0x10], xmm3; jb short 0x0000000000167126; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000167130: jg short 0x0000000000167132; lea r11, [rip+0x56647]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000167265: jg short 0x0000000000167227; movaps [rdi+0x10], xmm3; jb short 0x0000000000167276; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000167280: jg short 0x0000000000167282; lea r11, [rip+0x564f7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001673b5: jg short 0x0000000000167377; movaps [rdi+0x10], xmm3; jb short 0x00000000001673c6; movaps [rdi], xmm4; notrack jmp r9; 
0x000000001673d0: jg short 0x00000000001673d2; lea r11, [rip+0x563a7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000167505: jg short 0x00000000001674c7; movaps [rdi+0x10], xmm3; jb short 0x0000000000167516; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000167520: jg short 0x0000000000167522; lea r11, [rip+0x56257]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000167655: jg short 0x0000000000167617; movaps [rdi+0x10], xmm3; jb short 0x0000000000167666; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000167670: jg short 0x0000000000167672; lea r11, [rip+0x56107]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000167fd9: jg short 0x000000000016802a; ret; 
0x00000000168020: jg short 0x0000000000168069; mov ebx, 0x4f7f0ff3; ret far; 
0x00000000168025: jg short 0x0000000000168076; ret far; 
0x0000000016805f: jg short 0x00000000001680a8; ret; 
0x0000000016809f: jg short 0x00000000001680e8; ret far; 
0x00000000168dd5: jg short 0x0000000000168d97; movaps [rdi+0x10], xmm3; jb short 0x0000000000168de6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000168df0: jg short 0x0000000000168df2; lea r11, [rip+0x54b47]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168f25: jg short 0x0000000000168ee7; movaps [rdi+0x10], xmm3; jb short 0x0000000000168f36; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000168f40: jg short 0x0000000000168f42; lea r11, [rip+0x549f7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169075: jg short 0x0000000000169037; movaps [rdi+0x10], xmm3; jb short 0x0000000000169086; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000169090: jg short 0x0000000000169092; lea r11, [rip+0x548a7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001691c5: jg short 0x0000000000169187; movaps [rdi+0x10], xmm3; jb short 0x00000000001691d6; movaps [rdi], xmm4; notrack jmp r9; 
0x000000001691e0: jg short 0x00000000001691e2; lea r11, [rip+0x54757]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169315: jg short 0x00000000001692d7; movaps [rdi+0x10], xmm3; jb short 0x0000000000169326; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000169330: jg short 0x0000000000169332; lea r11, [rip+0x54607]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169465: jg short 0x0000000000169427; movaps [rdi+0x10], xmm3; jb short 0x0000000000169476; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000169480: jg short 0x0000000000169482; lea r11, [rip+0x544b7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001695b5: jg short 0x0000000000169577; movaps [rdi+0x10], xmm3; jb short 0x00000000001695c6; movaps [rdi], xmm4; notrack jmp r9; 
0x000000001695d0: jg short 0x00000000001695d2; lea r11, [rip+0x54367]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169685: jg short 0x0000000000169687; lea r11, [rip+0x542b2]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169705: jg short 0x00000000001696c7; movaps [rdi+0x10], xmm3; jb short 0x0000000000169716; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000169720: jg short 0x0000000000169722; lea r11, [rip+0x54217]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169855: jg short 0x0000000000169817; movaps [rdi+0x10], xmm3; jb short 0x0000000000169866; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000169870: jg short 0x0000000000169872; lea r11, [rip+0x540c7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001699a5: jg short 0x0000000000169967; movaps [rdi+0x10], xmm3; jb short 0x00000000001699b6; movaps [rdi], xmm4; notrack jmp r9; 
0x000000001699c0: jg short 0x00000000001699c2; lea r11, [rip+0x53f77]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169af5: jg short 0x0000000000169ab7; movaps [rdi+0x10], xmm3; jb short 0x0000000000169b06; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000169b10: jg short 0x0000000000169b12; lea r11, [rip+0x53e27]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169c45: jg short 0x0000000000169c07; movaps [rdi+0x10], xmm3; jb short 0x0000000000169c56; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000169c60: jg short 0x0000000000169c62; lea r11, [rip+0x53cd7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169d95: jg short 0x0000000000169d57; movaps [rdi+0x10], xmm3; jb short 0x0000000000169da6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000169db0: jg short 0x0000000000169db2; lea r11, [rip+0x53b87]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169ee5: jg short 0x0000000000169ea7; movaps [rdi+0x10], xmm3; jb short 0x0000000000169ef6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000169f00: jg short 0x0000000000169f02; lea r11, [rip+0x53a37]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016a035: jg short 0x0000000000169ff7; movaps [rdi+0x10], xmm3; jb short 0x000000000016a046; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000016a050: jg short 0x000000000016a052; lea r11, [rip+0x538e7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016a9b9: jg short 0x000000000016aa0a; ret; 
0x0000000016aa00: jg short 0x000000000016aa49; mov ebx, 0x4f7f0ff3; ret far; 
0x0000000016aa05: jg short 0x000000000016aa56; ret far; 
0x0000000016aa3f: jg short 0x000000000016aa88; ret; 
0x0000000016aa7f: jg short 0x000000000016aac8; ret far; 
0x0000000016cfc8: jg short 0x000000000016d011; loope 0x000000000016cfbf; movq [rdi-0x10], mm1; ret; 
0x0000000016d058: jg short 0x000000000016d0a1; loop 0x000000000016d04f; movq [rdi-0x10], mm1; ret; 
0x0000000016d0cf: jg short 0x000000000016d118; ret; 
0x0000000016d0e8: jg short 0x000000000016d131; jrcxz 0x000000000016d0df; movq [rdi-0x10], mm1; ret; 
0x0000000016d178: jg short 0x000000000016d1c1; in al, 0xf3; movq [rdi-0x10], mm1; ret; 
0x0000000016d1f8: jg short 0x000000000016d241; in eax, 0xf3; movq [rdi-0x10], mm1; ret; 
0x0000000016d278: jg short 0x000000000016d2c1; out 0xf3, al; movq [rdi-0x10], mm1; ret; 
0x0000000016d2f8: jg short 0x000000000016d341; out 0xf3, eax; movq [rdi-0x10], mm1; ret; 
0x0000000016d4d5: jg short 0x000000000016d51e; mov ebx, 0x46f00ff2; ret far; 
0x0000000016d4df: jg short 0x000000000016d528; ret far; 
0x0000000016d578: jg short 0x000000000016d5c1; in al, dx; movdqu [rdi-0x10], xmm1; ret; 
0x0000000016d5f8: jg short 0x000000000016d641; in eax, dx; movdqu [rdi-0x10], xmm1; ret; 
0x0000000016d688: jg short 0x000000000016d6d1; out dx, al; movdqu [rdi-0x10], xmm1; ret; 
0x0000000016d708: jg short 0x000000000016d751; out dx, eax; movdqu [rdi-0x10], xmm1; ret; 
0x0000000016d77c: jg short 0x000000000016d785; ret; 
0x0000000016d7d6: jg short 0x000000000016d7e7; ret; 
0x0000000016d7d1: jg short 0x000000000016d81a; psllq mm1, [rdi]; jg short 0x000000000016d7e7; ret; 
0x0000000016d846: jg short 0x000000000016d857; ret; 
0x0000000016d8b6: jg short 0x000000000016d8c7; ret; 
0x0000000016d8b1: jg short 0x000000000016d8fa; or eax, 0xf7f0ff3; ret; 
0x0000000016d926: jg short 0x000000000016d937; ret; 
0x0000000016d921: jg short 0x000000000016d96a; or al, 0xf3; movq [rdi], mm1; ret; 
0x0000000016d996: jg short 0x000000000016d9a7; ret; 
0x0000000016d991: jg short 0x000000000016d9da; or esi, ebx; movq [rdi], mm1; ret; 
0x0000000016da06: jg short 0x000000000016da17; ret; 
0x0000000016da01: jg short 0x000000000016da4a; or dh, bl; movq [rdi], mm1; ret; 
0x0000000016da76: jg short 0x000000000016da87; ret; 
0x0000000016da71: jg short 0x000000000016daba; or ebx, esi; movq [rdi], mm1; ret; 
0x0000000016dae6: jg short 0x000000000016daf7; ret; 
0x0000000016dae1: jg short 0x000000000016db2a; or bl, dh; movq [rdi], mm1; ret; 
0x0000000016db56: jg short 0x000000000016db67; ret; 
0x0000000016dbc6: jg short 0x000000000016dbd7; ret; 
0x0000000016dc36: jg short 0x000000000016dc47; ret; 
0x0000000016dc31: jg short 0x000000000016dc7a; add eax, 0xf7f0ff3; ret; 
0x0000000016dca6: jg short 0x000000000016dcb7; ret; 
0x0000000016dca1: jg short 0x000000000016dcea; add al, 0xf3; movq [rdi], mm1; ret; 
0x0000000016dd16: jg short 0x000000000016dd27; ret; 
0x0000000016dd11: jg short 0x000000000016dd5a; add esi, ebx; movq [rdi], mm1; ret; 
0x0000000016dd86: jg short 0x000000000016dd97; ret; 
0x0000000016dd81: jg short 0x000000000016ddca; add dh, bl; movq [rdi], mm1; ret; 
0x0000000016ddf6: jg short 0x000000000016de07; ret; 
0x0000000016ddf1: jg short 0x000000000016de3a; add ebx, esi; movq [rdi], mm1; ret; 
0x0000000016faf8: jg short 0x000000000016fb41; loope 0x000000000016faef; movq [rdi-0x10], mm1; ret; 
0x0000000016fb88: jg short 0x000000000016fbd1; loop 0x000000000016fb7f; movq [rdi-0x10], mm1; ret; 
0x0000000016fbff: jg short 0x000000000016fc48; ret; 
0x0000000016fc18: jg short 0x000000000016fc61; jrcxz 0x000000000016fc0f; movq [rdi-0x10], mm1; ret; 
0x0000000016fca8: jg short 0x000000000016fcf1; in al, 0xf3; movq [rdi-0x10], mm1; ret; 
0x0000000016fd28: jg short 0x000000000016fd71; in eax, 0xf3; movq [rdi-0x10], mm1; ret; 
0x0000000016fda8: jg short 0x000000000016fdf1; out 0xf3, al; movq [rdi-0x10], mm1; ret; 
0x0000000016fe28: jg short 0x000000000016fe71; out 0xf3, eax; movq [rdi-0x10], mm1; ret; 
0x00000000170005: jg short 0x000000000017004e; mov ebx, 0x46f00ff2; ret far; 
0x0000000017000f: jg short 0x0000000000170058; ret far; 
0x000000001700a8: jg short 0x00000000001700f1; in al, dx; movdqu [rdi-0x10], xmm1; ret; 
0x00000000170128: jg short 0x0000000000170171; in eax, dx; movdqu [rdi-0x10], xmm1; ret; 
0x000000001701b8: jg short 0x0000000000170201; out dx, al; movdqu [rdi-0x10], xmm1; ret; 
0x00000000170238: jg short 0x0000000000170281; out dx, eax; movdqu [rdi-0x10], xmm1; ret; 
0x000000001702ac: jg short 0x00000000001702b5; ret; 
0x00000000170306: jg short 0x0000000000170317; ret; 
0x00000000170301: jg short 0x000000000017034a; psllq mm1, [rdi]; jg short 0x0000000000170317; ret; 
0x00000000170376: jg short 0x0000000000170387; ret; 
0x000000001703e6: jg short 0x00000000001703f7; ret; 
0x000000001703e1: jg short 0x000000000017042a; or eax, 0xf7f0ff3; ret; 
0x00000000170456: jg short 0x0000000000170467; ret; 
0x00000000170451: jg short 0x000000000017049a; or al, 0xf3; movq [rdi], mm1; ret; 
0x000000001704c6: jg short 0x00000000001704d7; ret; 
0x000000001704c1: jg short 0x000000000017050a; or esi, ebx; movq [rdi], mm1; ret; 
0x00000000170536: jg short 0x0000000000170547; ret; 
0x00000000170531: jg short 0x000000000017057a; or dh, bl; movq [rdi], mm1; ret; 
0x000000001705a6: jg short 0x00000000001705b7; ret; 
0x000000001705a1: jg short 0x00000000001705ea; or ebx, esi; movq [rdi], mm1; ret; 
0x00000000170616: jg short 0x0000000000170627; ret; 
0x00000000170611: jg short 0x000000000017065a; or bl, dh; movq [rdi], mm1; ret; 
0x00000000170686: jg short 0x0000000000170697; ret; 
0x000000001706f6: jg short 0x0000000000170707; ret; 
0x00000000170766: jg short 0x0000000000170777; ret; 
0x00000000170761: jg short 0x00000000001707aa; add eax, 0xf7f0ff3; ret; 
0x000000001707d6: jg short 0x00000000001707e7; ret; 
0x000000001707d1: jg short 0x000000000017081a; add al, 0xf3; movq [rdi], mm1; ret; 
0x00000000170846: jg short 0x0000000000170857; ret; 
0x00000000170841: jg short 0x000000000017088a; add esi, ebx; movq [rdi], mm1; ret; 
0x000000001708b6: jg short 0x00000000001708c7; ret; 
0x000000001708b1: jg short 0x00000000001708fa; add dh, bl; movq [rdi], mm1; ret; 
0x00000000170926: jg short 0x0000000000170937; ret; 
0x00000000170921: jg short 0x000000000017096a; add ebx, esi; movq [rdi], mm1; ret; 
0x000000001839ac: jg short 0x00000000001839a1; call qword ptr [rax-0x5e1f00d]; 
0x00000000183a14: jg short 0x0000000000183a24; pcmpistri xmm2, xmm2, 0x3a; cmp edx, ecx; jle 0x0000000000183ac0; ret; 
0x00000000183adc: jg short 0x0000000000183ad1; call qword ptr [rax-0x5e1f00d]; 
0x00000000188e82: jg short 0x0000000000188e98; pextrw edi, mm5, 0x74; ret far; 
0x000000001890dc: jg short 0x00000000001890f5; vmovdqu [rdi+rdx-0xf], xmm3; vzeroupper; ret; 
0x000000001890fc: jg short 0x0000000000189115; vmovdqu [rdi+rdx-0x1f], ymm3; vzeroupper; ret; 
0x0000000018955d: jg short 0x0000000000189573; pextrw edi, mm5, 0x74; ret far; 
0x000000001898bc: jg short 0x00000000001898d5; vmovdqu [rdi+rdx-0xf], xmm3; vzeroupper; ret; 
0x000000001898dc: jg short 0x00000000001898f5; vmovdqu [rdi+rdx-0x1f], ymm3; vzeroupper; ret; 
0x0000000018997d: jg short 0x0000000000189996; vmovdqu [rdi+r8-0x10], xmm3; mov byte ptr [rdi+r8], 0x0; vzeroupper; ret; 
0x0000000018999d: jg short 0x00000000001899b6; vmovdqu [rdi+r8-0x20], ymm3; mov byte ptr [rdi+r8], 0x0; vzeroupper; ret; 
0x00000000189a19: jg short 0x0000000000189a7b; mov byte ptr [rdi+0x80], 0x0; vzeroupper; ret; 
0x00000000189c22: jg short 0x0000000000189c38; pextrw edi, mm5, 0x74; ret far; 
0x00000000189e7c: jg short 0x0000000000189e95; vmovdqu [rdi+rdx-0xf], xmm3; vzeroupper; ret; 
0x00000000189e9c: jg short 0x0000000000189eb5; vmovdqu [rdi+rdx-0x1f], ymm3; vzeroupper; ret; 
0x0000000018a01d: jg short 0x000000000018a033; pextrw edi, mm5, 0x74; ret far; 
0x0000000018a1de: jg short 0x000000000018a1e1; jne 0x000000000018a610; vzeroupper; ret; 
0x0000000018a38c: jg short 0x000000000018a390; jne 0x000000000018a610; vzeroupper; ret; 
0x0000000018a3b0: jg short 0x000000000018a3b5; jne 0x000000000018a610; vzeroupper; ret; 
0x0000000018a3ca: jg short 0x000000000018a3d0; jne 0x000000000018a610; vzeroupper; ret; 
0x0000000018a52d: jg short 0x000000000018a546; vmovdqu [rdi+r8-0x10], xmm3; vzeroupper; ret; 
0x0000000018a54d: jg short 0x000000000018a566; vmovdqu [rdi+r8-0x20], ymm3; vzeroupper; ret; 
0x0000000018a56e: jg short 0x000000000018a587; vmovdqu [rdi+0x20], ymm3; mov [rdi+0x40], cl; vzeroupper; ret; 
0x0000000018a5d2: jg short 0x000000000018a5db; vmovdqu [rdi+r8-0x10], xmm0; vzeroupper; ret; 
0x0000000018a719: jg short 0x000000000018a77b; vzeroupper; ret; 
0x0000000018a912: jg short 0x000000000018a928; pextrw edi, mm5, 0x74; ret far; 
0x0000000018ab8c: jg short 0x000000000018aba5; vmovdqu [rdi+rdx-0xf], xmm3; lea rax, [rdi+rdx]; vzeroupper; ret; 
0x0000000018abac: jg short 0x000000000018abc5; vmovdqu [rdi+rdx-0x1f], ymm3; lea rax, [rdi+rdx]; vzeroupper; ret; 
0x0000000018ad2d: jg short 0x000000000018ad43; pextrw edi, mm5, 0x74; ret far; 
0x0000000018aef6: jg short 0x000000000018aef9; jne 0x000000000018b340; vzeroupper; ret; 
0x0000000018b0c0: jg short 0x000000000018b0c4; jne 0x000000000018b340; vzeroupper; ret; 
0x0000000018b0e4: jg short 0x000000000018b0e9; jne 0x000000000018b340; vzeroupper; ret; 
0x0000000018b0fe: jg short 0x000000000018b104; jne 0x000000000018b340; vzeroupper; ret; 
0x0000000018b25d: jg short 0x000000000018b276; vmovdqu [rdi+r8-0x10], xmm3; lea rax, [rdi+r8]; vzeroupper; ret; 
0x0000000018b27d: jg short 0x000000000018b296; vmovdqu [rdi+r8-0x20], ymm3; lea rax, [rdi+r8]; vzeroupper; ret; 
0x0000000018b302: jg short 0x000000000018b30b; vmovdqu [rdi+r8-0x10], xmm0; vzeroupper; ret; 
0x0000000018b449: jg short 0x000000000018b4ab; lea rax, [rdi+0x80]; vzeroupper; ret; 
0x0000000018b5a7: jg short 0x000000000018b5b0; vmovdqu [rdi+rdx-0x20], ymm1; vzeroupper; ret; 
0x0000000018b613: jg short 0x000000000018b61c; vmovdqu [rdi+rdx-0x20], ymm1; vzeroupper; ret; 
0x0000000018b66e: jg short 0x000000000018b677; vmovdqu [rdi+rdx-0x10], xmm1; ret; 
0x0000000018b7ff: jg short 0x000000000018b824; vzeroupper; ret; 
0x0000000018b7f9: jg short 0x000000000018b83c; mov al, [0x77f8c5237f7ec1c4]; ret; 
0x0000000018b7f4: jg short 0x000000000018b86f; rol ch, 0x7e; jg short 0x000000000018b83c; mov al, [0x77f8c5237f7ec1c4]; ret; 
0x0000000018b8a6: jg short 0x000000000018b8ab; vzeroupper; ret; 
0x0000000018b8a1: jg short 0x000000000018b903; vmovdqu [r11], ymm8; vzeroupper; ret; 
0x0000000018b932: jg short 0x000000000018b957; vzeroupper; ret; 
0x0000000018b92c: jg short 0x000000000018b96f; mov al, [0x77f8c5237f7ec1c4]; ret; 
0x0000000018b927: jg short 0x000000000018b9a2; rol ch, 0x7e; jg short 0x000000000018b96f; mov al, [0x77f8c5237f7ec1c4]; ret; 
0x0000000018b9c2: jg short 0x000000000018b9c7; vzeroupper; ret; 
0x0000000018b9bd: jg short 0x000000000018ba1f; vmovdqu [r11], ymm8; vzeroupper; ret; 
0x0000000018ba38: jg short 0x000000000018ba41; vzeroupper; ret; 
0x0000000018ba98: jg short 0x000000000018baa1; vzeroupper; ret; 
0x0000000018bb57: jg short 0x000000000018bb60; vzeroupper; ret; 
0x0000000018d47d: jg short 0x000000000018d47f; add eax, [rax]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018f9f4: jg short 0x000000000018f9fd; vmovdqu [rdi+0x20], ymm1; vmovdqu [r9-0x40], ymm2; vmovdqu [r9-0x20], ymm3; ret; 
0x0000000018fa18: jg short 0x000000000018fa21; vmovdqu [r9-0x20], ymm1; ret; 
0x0000000018fa2c: jg short 0x000000000018fa35; vmovdqu [r9-0x10], xmm1; ret; 
0x0000000018fe9e: jg short 0x000000000018fe98; ret; 
0x0000000019010b: jg short 0x0000000000190114; vmovdqu [rsi-0x10], xmm0; ret; 
0x00000000190101: jg short 0x000000000019011a; vmovdqu [rsi-0x20], ymm2; ret; 
0x00000000190105: jg short 0x000000000019015d; loopne 0x00000000001900cc; vmovdqu [rdi], xmm0; vmovdqu [rsi-0x10], xmm0; ret; 
0x0000000019032f: jg short 0x0000000000190339; vmovdqu64 [rdi+rdx-0x40], zmm1; vzeroupper; ret; 
0x0000000019039b: jg short 0x00000000001903a5; vmovdqu64 [rdi+rdx-0x40], zmm1; vzeroupper; ret; 
0x000000001903fe: jg short 0x0000000000190407; vmovdqu [rdi+rdx-0x20], ymm1; vzeroupper; ret; 
0x00000000190416: jg short 0x000000000019041f; vmovdqu [rdi+rdx-0x10], xmm1; ret; 
0x000000001905f9: jg short 0x000000000019061f; vzeroupper; ret; 
0x000000001905f2: jg short 0x0000000000190636; std; vmovdqu64 [r11], zmm4; vzeroupper; ret; 
0x000000001905e4: jg short 0x0000000000190658; jmp qword ptr [rdx-0xf]; 
0x000000001906ba: jg short 0x00000000001906bf; vmovdqu64 [r11], zmm8; vzeroupper; ret; 
0x000000001906bf: jg short 0x00000000001906c5; vzeroupper; ret; 
0x0000000019067f: jg short 0x00000000001906cb; jmp qword ptr [rdx-0x2f]; 
0x00000000190784: jg short 0x00000000001907aa; vzeroupper; ret; 
0x0000000019077d: jg short 0x00000000001907c1; std; vmovdqu64 [r11], zmm4; vzeroupper; ret; 
0x0000000019076f: jg short 0x00000000001907e3; jmp qword ptr [rdx-0xf]; 
0x00000000190844: jg short 0x0000000000190849; vmovdqu64 [r11], zmm8; vzeroupper; ret; 
0x00000000190849: jg short 0x000000000019084f; vzeroupper; ret; 
0x000000001908c8: jg short 0x00000000001908d2; vzeroupper; ret; 
0x00000000190934: jg short 0x000000000019093e; vzeroupper; ret; 
0x00000000190a1f: jg short 0x0000000000190a28; vzeroupper; ret; 
0x00000000190a2d: jg short 0x0000000000190a36; vzeroupper; ret; 
0x00000000192af5: jg short 0x0000000000192b00; neg eax; ret; 
0x0000000019467b: jg short 0x0000000000194602; ror byte ptr [rax+0xf], cl; ret far; 
0x000000000340a8: jge short 0x00000000000340c5; add [rax+0x63], cl; jmp qword ptr [rax+rcx*2-0x75]; 
0x000000000340c8: jge short 0x00000000000340e5; add [rax+0x63], cl; jmp qword ptr [rax+rcx*2-0x75]; 
0x000000000340e8: jge short 0x0000000000034105; add [rax+0x63], cl; jmp qword ptr [rax+rcx*2-0x75]; 
0x000000000472eb: jge short 0x00000000000472f5; call rax; 
0x000000000544ba: jge short 0x00000000000544bc; cmp cl, [rdi]; xchg esp, eax; ret; 
0x00000000056348: jge short 0x0000000000056393; shl ecx, cl; mov [rdi], r9; ret; 
0x000000000578f4: jge short 0x00000000000578f6; add [rax], al; leave; ret; 
0x000000000908b4: jge short 0x00000000000908b6; sbb eax, 0xe9ebe374; nop [rax+rax]; xor eax, eax; ret; 
0x000000000a04ea: jge short 0x00000000000a04ef; lea rax, [rip+0xeb0fc]; lea rdx, [rip+0xeb085]; cmove rax, rdx; ret; 
0x000000000a0535: jge short 0x00000000000a053a; lea rax, [rip+0xefe31]; lea rdx, [rip+0xefdba]; cmove rax, rdx; ret; 
0x000000000a0551: jge short 0x00000000000a0556; lea rax, [rip+0x1b675]; lea rdx, [rip+0x1b58e]; cmove rax, rdx; ret; 
0x000000000a05f5: jge short 0x00000000000a05fa; lea rax, [rip+0xf0301]; lea rdx, [rip+0xf028a]; cmove rax, rdx; ret; 
0x000000000a064a: jge short 0x00000000000a064f; lea rax, [rip+0xeaf7c]; lea rdx, [rip+0xeaf05]; cmove rax, rdx; ret; 
0x000000000a0695: jge short 0x00000000000a069a; lea rax, [rip+0xefcb1]; lea rdx, [rip+0xefc3a]; cmove rax, rdx; ret; 
0x000000000a06b1: jge short 0x00000000000a06b6; lea rax, [rip+0x1b4f5]; lea rdx, [rip+0x1b40e]; cmove rax, rdx; ret; 
0x000000000a09ba: jge short 0x00000000000a09bf; lea rax, [rip+0xeac2c]; lea rdx, [rip+0xeabb5]; cmove rax, rdx; ret; 
0x000000000a0a05: jge short 0x00000000000a0a0a; lea rax, [rip+0xef961]; lea rdx, [rip+0xef8ea]; cmove rax, rdx; ret; 
0x000000000a0a21: jge short 0x00000000000a0a26; lea rax, [rip+0x1b1a5]; lea rdx, [rip+0x1b0be]; cmove rax, rdx; ret; 
0x000000000b745b: jge short 0x00000000000b746c; add [rcx+0x63], cl; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b7484: jge short 0x00000000000b7495; add [rcx+0x63], cl; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000ba143: jge short 0x00000000000ba198; str [rcx+0x63]; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000bc25e: jge short 0x00000000000bc257; jmp qword ptr [rsi+0x66]; 
0x000000000e4168: jge short 0x00000000000e417a; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x000000000e4833: jge short 0x00000000000e4835; add cl, ch; ret; 
0x000000000e4fc9: jge short 0x00000000000e4fcb; add [rax+0x7f], bh; cmove rax, rdx; ret; 
0x000000000e5006: jge short 0x00000000000e5008; add [rax+0x7f], bh; cmove rax, rdx; ret; 
0x000000000e5473: jge short 0x00000000000e5428; or al, 0x0; movsxd rax, [rdx+rbp*4]; add rax, rdx; notrack jmp rax; 
0x000000000ea608: jge short 0x00000000000ea5fd; dec dword ptr [rax-0x77]; ret; 
0x000000000f23f9: jge short 0x00000000000f242b; pop rbx; pop rbp; pop r12; ret; 
0x00000000110392: jge short 0x00000000001103ac; mov rsi, [rsp+0x28]; lea rcx, [rbp+0x28]; mov edx, 0x1; call qword ptr [rbp+0x40]; 
0x00000000110672: jge short 0x000000000011068c; mov rsi, [rsp+0x28]; lea rcx, [rbp+0x28]; mov edx, 0x5; call qword ptr [rbp+0x40]; 
0x000000001106f2: jge short 0x000000000011070c; mov rsi, [rsp+0x28]; lea rcx, [rbp+0x28]; mov edx, 0x2; call qword ptr [rbp+0x40]; 
0x00000000119bb1: jge short 0x0000000000119bb3; call rbx; 
0x00000000119ba8: jge short 0x0000000000119bba; test rdi, rdi; jne short 0x0000000000119bd6; mov rdi, [rbp]; call rbx; 
0x0000000011a862: jge short 0x000000000011a864; call rbx; 
0x0000000011a90d: jge short 0x000000000011a90f; call rbx; 
0x0000000011a93d: jge short 0x000000000011a93f; call rbx; 
0x0000000011a96d: jge short 0x000000000011a96f; call rbx; 
0x0000000011a995: jge short 0x000000000011a997; call rbx; 
0x0000000011adcf: jge short 0x000000000011ae1a; mov edi, [rdi]; call rbx; 
0x0000000011ae2d: jge short 0x000000000011ae38; add [rax], al; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011f9d5: jge short 0x000000000011f9d7; add [rax], al; syscall; 
0x0000000012c590: jge short 0x000000000012c51a; call rcx; 
0x0000000012c9e5: jge short 0x000000000012c96f; call rax; 
0x0000000012cbcd: jge short 0x000000000012cb57; call rax; 
0x0000000012ccfb: jge short 0x000000000012cc85; call rax; 
0x0000000012d8ba: jge short 0x000000000012d8bf; lea rax, [rip+0x5dd1c]; lea rdx, [rip+0x5dca5]; cmove rax, rdx; ret; 
0x0000000012d905: jge short 0x000000000012d90a; lea rax, [rip+0x62a51]; lea rdx, [rip+0x629da]; cmove rax, rdx; ret; 
0x0000000012d921: jge short 0x000000000012d926; lea rax, [rip-0x71d6b]; lea rdx, [rip-0x71e52]; cmove rax, rdx; ret; 
0x0000000012d97a: jge short 0x000000000012d97f; lea rax, [rip+0x5dc5c]; lea rdx, [rip+0x5dbe5]; cmove rax, rdx; ret; 
0x0000000012d9c5: jge short 0x000000000012d9ca; lea rax, [rip+0x62991]; lea rdx, [rip+0x6291a]; cmove rax, rdx; ret; 
0x0000000012d9e1: jge short 0x000000000012d9e6; lea rax, [rip-0x71e2b]; lea rdx, [rip-0x71f12]; cmove rax, rdx; ret; 
0x0000000012da3a: jge short 0x000000000012da3f; lea rax, [rip+0x5db7c]; lea rdx, [rip+0x5db05]; cmove rax, rdx; ret; 
0x0000000012da85: jge short 0x000000000012da8a; lea rax, [rip+0x628b1]; lea rdx, [rip+0x6283a]; cmove rax, rdx; ret; 
0x0000000012daa1: jge short 0x000000000012daa6; lea rax, [rip-0x71f0b]; lea rdx, [rip-0x71ff2]; cmove rax, rdx; ret; 
0x0000000012db45: jge short 0x000000000012db4a; lea rax, [rip+0x62da1]; lea rdx, [rip+0x62d2a]; cmove rax, rdx; ret; 
0x0000000013868b: jge short 0x0000000000138698; add [rcx], al; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x0000000013a87a: jge short 0x000000000013a81c; syscall; 
0x00000000144ae3: jge short 0x0000000000144ae5; call qword ptr [rsp+0x20]; 
0x00000000146cd6: jge short 0x0000000000146cd8; test rdi, rdi; je short 0x0000000000146cec; mov rax, [rdi+0x8]; call qword ptr [rax+0x20]; 
0x00000000146e88: jge short 0x0000000000146e8a; test rdi, rdi; je short 0x0000000000146e96; mov rax, [rdi+0x8]; call qword ptr [rax+0x20]; 
0x000000001496bb: jge short 0x00000000001496bd; add r12, rbx; sub edx, ebx; mov rsi, r12; call qword ptr [rbp+0x40]; 
0x0000000014fd58: jge short 0x000000000014fdc2; call rax; 
0x000000001507f8: jge short 0x0000000000150852; call rax; 
0x00000000152493: jge short 0x0000000000152495; mov rax, [rdi+0x8]; call qword ptr [rax+0x20]; 
0x00000000190801: jge short 0x000000000019084b; out 0x49, eax; jmp qword ptr [rdx-0x2f]; 
0x000000001971ed: jge short 0x00000000001971ff; add rdi, rbp; call r12; 
0x00000000184a55: jl 0x0000000000184af0; add eax, 0x40; add rax, rdi; vzeroupper; ret; 
0x00000000184a04: jl 0x0000000000184af0; add rax, rdi; vzeroupper; ret; 
0x00000000024038: jl short 0x000000000002405e; adc al, 0x48; mov edx, [rax]; call rbx; 
0x000000000240a6: jl short 0x00000000000240cc; adc al, 0x48; mov edx, [rax]; mov rax, [rsp+0x18]; call rax; 
0x000000000257ce: jl short 0x00000000000257d3; and [rbp+rcx*4+0x60], ecx; add eax, ebp; ret far; 
0x000000000273f5: jl short 0x000000000002741b; pop rax; mov rax, [rsp+0x28]; call rax; 
0x000000000276a4: jl short 0x00000000000276ca; pop rax; call r14; 
0x00000000028248: jl short 0x000000000002826e; pop rax; mov rax, [rsp+0x30]; call rax; 
0x000000000284be: jl short 0x00000000000284e4; pop rax; call rbx; 
0x000000000290c6: jl short 0x00000000000290ec; pop rax; mov rax, [rsp+0x20]; call rax; 
0x0000000002933b: jl short 0x0000000000029361; pop rax; call rbx; 
0x0000000002975a: jl short 0x0000000000029780; call r13; 
0x000000000298de: jl short 0x0000000000029904; add [rax-0x78], eax; mov esp, 0x8514; add [rax+0x39], cl; ret far; 
0x00000000029c5a: jl short 0x0000000000029c80; call rbx; 
0x0000000002a34d: jl short 0x000000000002a373; call r14; 
0x0000000002a89b: jl short 0x000000000002a8c1; call rbx; 
0x0000000002b2db: jl short 0x000000000002b301; cmp [rax-0x75], cl; and al, 0x20; call rax; 
0x0000000002c26f: jl short 0x000000000002c295; push rax; mov rax, [rsp+0x20]; call rax; 
0x0000000002c659: jl short 0x000000000002c67f; push rax; call rbx; 
0x0000000002cc3a: jl short 0x000000000002cc60; call r13; 
0x0000000002d1da: jl short 0x000000000002d200; call rbx; 
0x0000000002d96c: jl short 0x000000000002d992; push rax; mov rax, [rsp+0x18]; call rax; 
0x0000000002ddbe: jl short 0x000000000002dde4; push rax; call rbx; 
0x0000000002e39a: jl short 0x000000000002e3c0; call r13; 
0x0000000002e93d: jl short 0x000000000002e963; call rbx; 
0x00000000031806: jl short 0x000000000003183c; jmp far fword ptr [rsi]; 
0x00000000034108: jl short 0x0000000000034125; add [rax+0x63], cl; jmp qword ptr [rax+rcx*2-0x75]; 
0x00000000034128: jl short 0x0000000000034145; add [rax+0x63], cl; jmp qword ptr [rax+rcx*2-0x75]; 
0x00000000034148: jl short 0x0000000000034165; add [rax+0x63], cl; jmp qword ptr [rax+rcx*2-0x75]; 
0x00000000034168: jl short 0x0000000000034185; add [rax+0x63], cl; jmp qword ptr [rax+rcx*2-0x75]; 
0x00000000034188: jl short 0x00000000000341a5; add [rax+0x63], cl; jmp qword ptr [rax+rcx*2-0x75]; 
0x000000000341a8: jl short 0x00000000000341c5; add [rax+0x63], cl; jmp qword ptr [rax+rcx*2-0x75]; 
0x000000000341c8: jl short 0x00000000000341e5; add [rax+0x63], cl; jmp qword ptr [rax+rcx*2-0x75]; 
0x000000000341e8: jl short 0x0000000000034205; add [rax+0x63], cl; jmp qword ptr [rax+rcx*2-0x75]; 
0x00000000035d0a: jl short 0x0000000000035d27; add [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x00000000035e51: jl short 0x0000000000035e6e; add [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x00000000036b80: jl short 0x0000000000036bf2; sbb eax, [rax]; syscall; 
0x00000000038886: jl short 0x000000000003888f; add [rax-0x9], ecx; ror byte ptr [rax+0x1], 0x1; ret; 
0x000000000434a8: jl short 0x00000000000434ce; or [rsi+0x8], bh; mov r8d, eax; mov eax, 0x82; syscall; 
0x0000000004826f: jl short 0x0000000000048295; or al, ch; cdq; ret; 
0x00000000048285: jl short 0x00000000000482ab; or [rax+0x13e], bh; syscall; 
0x0000000005f3ea: jl short 0x000000000005f410; adc cl, bl; in eax, 0xdf; loopne 0x000000000005f37b; ret; 
0x0000000006290a: jl short 0x0000000000062921; jmp far fword ptr [rdi]; 
0x00000000098d38: jl short 0x0000000000098d3a; add [rax], al; sub dword ptr [rip+0x153e3d], 0x1; pop rbp; ret; 
0x0000000009cf16: jl short 0x000000000009cf3c; xor [rax-0x77], ecx; add ecx, [rax-0x7b]; ror byte ptr [rdi], 0x84; ret far; 
0x0000000009da74: jl short 0x000000000009da87; add al, ch; test [rcx-0x4], al; jmp qword ptr [rbx+rcx*4+0x4]; 
0x0000000009f120: jl short 0x000000000009f150; add [rax], eax; cmovne rax, rdx; ret; 
0x000000000a4502: jl short 0x00000000000a4519; rol dword ptr [rcx+rcx*4-0x21], 0xc1; call qword ptr [rdx]; 
0x000000000a451c: jl short 0x00000000000a4533; rol dword ptr [rcx+rcx*4-0x21], 0xc1; call far fword ptr [rax]; 
0x000000000a4eea: jl short 0x00000000000a4f06; add [rax-0x7d], ecx; ret; 
0x000000000a542a: jl short 0x00000000000a5444; add [rax-0x7d], ecx; ret; 
0x000000000a5487: jl short 0x00000000000a54a3; add [rax-0x7d], ecx; ret; 
0x000000000ac6aa: jl short 0x00000000000ac710; add rax, rdi; ret; 
0x000000000ac6ba: jl short 0x00000000000ac710; lea rax, [rdi+rax+0x10]; ret; 
0x000000000ac6da: jl short 0x00000000000ac710; lea rax, [rdi+rax+0x20]; ret; 
0x000000000ac6fa: jl short 0x00000000000ac710; lea rax, [rdi+rax+0x30]; ret; 
0x000000000b74b2: jl short 0x00000000000b74c3; add [rcx+0x63], cl; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b7584: jl short 0x00000000000b7595; add [rcx+0x63], cl; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b75b7: jl short 0x00000000000b75c8; add [rbx+0x63], cl; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b75e7: jl short 0x00000000000b75f8; add [rbx+0x63], cl; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b75e6: jl short 0x00000000000b75f8; add [rbx+0x63], cl; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b7609: jl short 0x00000000000b761a; add [rbx+0x63], cl; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000c4be0: jl short 0x00000000000c4bbb; cmc; dec dword ptr [rbp-0x7cbe00bd]; call far fword ptr [rax]; 
0x000000000d41f8: jl short 0x00000000000d420b; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x000000000d4227: jl short 0x00000000000d423b; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x000000000e2ca5: jl short 0x00000000000e2ccb; adc [rax+0x3d], bh; syscall; 
0x000000000e4435: jl short 0x00000000000e4437; add [rax], al; syscall; 
0x000000000e64ea: jl short 0x00000000000e64f0; jmp far fword ptr [rdi]; 
0x000000000ec3b2: jl short 0x00000000000ec3a8; jmp qword ptr [rsi+0x2e]; 
0x000000000ec419: jl short 0x00000000000ec490; mov byte ptr [rdi+0x8], 0x1; mov eax, 0x1; ret; 
0x000000000f2261: jl short 0x00000000000f2287; sbb [rcx-0x17f3dbbc], cl; ret; 
0x000000000fa62f: jl short 0x00000000000fa623; jmp qword ptr [rsi+0xf]; 
0x0000000010df69: jl short 0x000000000010df8f; sbb [rax+0x101], bh; syscall; 
0x0000000010e0d5: jl short 0x000000000010e0fb; or [rax+0x1], bh; syscall; 
0x0000000010e55d: jl short 0x000000000010e583; or [rax+0x48], bh; syscall; 
0x0000000010e85e: jl short 0x000000000010e884; or al, 0x41; mov eax, eax; mov eax, 0x3; syscall; 
0x00000000111239: jl short 0x000000000011123c; jmp far fword ptr [rdi]; 
0x000000001124c4: jl short 0x00000000001124d7; jmp far fword ptr [rdi]; 
0x000000001129c5: jl short 0x00000000001129eb; or [rax+0x7], bh; syscall; 
0x00000000112ab9: jl short 0x0000000000112adf; or [rcx+rcx*4-0x1e], cl; mov eax, 0x10f; syscall; 
0x00000000113266: jl short 0x000000000011328c; sbb [rax+0x115], bh; syscall; 
0x00000000113315: jl short 0x000000000011333b; or [rax+0x11d], bh; syscall; 
0x000000001141f4: jl short 0x0000000000114203; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x2]; mov eax, 0xffffffff; ret; 
0x00000000114227: jl short 0x0000000000114237; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x00000000114443: jl short 0x0000000000114469; or [rax+0x13], bh; syscall; 
0x000000001144e3: jl short 0x0000000000114509; or [rax+0x14], bh; syscall; 
0x000000001151ee: jl short 0x0000000000115214; or al, 0x41; mov eax, eax; mov eax, 0x4a; syscall; 
0x000000001152ae: jl short 0x00000000001152d4; or al, 0x41; mov eax, eax; mov eax, 0x4b; syscall; 
0x00000000117c2f: jl short 0x0000000000117c3e; add [rcx], al; ret; 
0x00000000117c3d: jl short 0x0000000000117c4c; add [rbx+0x17f01f8], al; ret; 
0x00000000118a45: jl short 0x0000000000118a6b; or [rax+0x1a], bh; syscall; 
0x0000000011f158: jl short 0x000000000011f16d; je short 0x000000000011f15d; ret; 
0x0000000011f544: jl short 0x000000000011f56a; or [rax+0x114], bh; syscall; 
0x0000000011f761: jl short 0x000000000011f787; or [rax+0x130], bh; syscall; 
0x00000000120135: jl short 0x000000000012015b; or al, 0xb8; sub eax, [rax]; add [rax], al; syscall; 
0x00000000120201: jl short 0x0000000000120227; or [rax+0x2a], bh; syscall; 
0x000000001204e3: jl short 0x0000000000120509; or [rax+0x2f], bh; syscall; 
0x00000000120643: jl short 0x0000000000120669; or [rax+0x2e], bh; syscall; 
0x00000000120b56: jl short 0x0000000000120b7c; sbb [rax+0x120], bh; syscall; 
0x00000000120cb4: jl short 0x0000000000120cda; or al, 0xb8; xor eax, [rcx]; add [rax], al; syscall; 
0x00000000120f26: jl short 0x0000000000120f4c; sbb [rax+0x45], bh; syscall; 
0x0000000012da40: jl short 0x000000000012da1d; add eax, 0x158d4800; add eax, 0x480005db; cmove eax, edx; ret; 
0x00000000138162: jl short 0x0000000000138188; adc [rcx+rcx*4-0x1a], cl; call qword ptr [rsp+0x58]; 
0x00000000138763: jl short 0x0000000000138770; add [rcx], al; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x00000000142be0: jl short 0x0000000000142c06; adc al, ch; imul rbp; jmp qword ptr [rsi+0xf]; 
0x00000000144fca: jl short 0x0000000000144ff0; jo short 0x0000000000144fb6; mov fs, [rdi-0xceffff]; call qword ptr [rsp+0x70]; 
0x0000000014517e: jl short 0x00000000001451a4; jo short 0x000000000014516a; fisub st, dword ptr [rbp-0xceffff]; call qword ptr [rsp+0x70]; 
0x0000000014697d: jl short 0x00000000001469a3; push rax; call qword ptr [rax+0x20]; 
0x00000000147846: jl short 0x000000000014786c; sbb [rbp+rcx*4+0x4c], cl; and al, 0x40; call qword ptr [rax]; 
0x000000001509c0: jl short 0x00000000001509e6; push 0x4c388b48; mov esi, edi; mov rax, [rdi+0x38]; call qword ptr [rax+0x8]; 
0x00000000160828: jl short 0x000000000016082a; add [rax], al; mov rcx, [rsp+0x10]; mov rdi, [rsp+0x18]; call rcx; 
0x00000000160eba: jl short 0x0000000000160ec0; jmp far fword ptr [rdi]; 
0x00000000184aba: jl short 0x0000000000184af0; add eax, 0x20; add rax, rdi; vzeroupper; ret; 
0x00000000184ada: jl short 0x0000000000184af0; add eax, 0x60; add rax, rdi; vzeroupper; ret; 
0x0000000018a245: jl short 0x000000000018a25e; and ecx, ebp; ret; 
0x0000000018a390: jl short 0x000000000018a394; add [rax], al; vzeroupper; ret; 
0x0000000018c51a: jl short 0x000000000018c52a; cmp edi, [rdx+rcx+0x40]; jne 0x000000000018c209; vzeroupper; ret; 
0x0000000018c51e: jl short 0x000000000018c52a; jne 0x000000000018c209; vzeroupper; ret; 
0x0000000018f0c0: jl short 0x000000000018f0a7; add al, [rax]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018f8bb: jl short 0x000000000018f8c0; neg eax; ret; 
0x0000000018f98a: jl short 0x000000000018f9d4; adc [rcx-0x3], ebp; vmovups [r9-0x80], zmm6; vmovups [r9-0x40], zmm7; ret; 
0x0000000018f991: jl short 0x000000000018f9db; adc [rcx-0x2], esi; vmovups [r9-0x40], zmm7; ret; 
0x0000000018f998: jl short 0x000000000018f9e2; adc [rcx-0x1], edi; ret; 
0x0000000018f9c6: jl short 0x000000000018fa10; adc [rdi+0x1], ecx; vmovups [r9-0x80], zmm2; vmovups [r9-0x40], zmm3; ret; 
0x0000000018f9cd: jl short 0x000000000018fa17; adc [rcx-0x2], edx; vmovups [r9-0x40], zmm3; ret; 
0x0000000018f9d4: jl short 0x000000000018fa1e; adc [rcx-0x1], ebx; ret; 
0x0000000018fbc4: jl short 0x000000000018fc0e; adc [rcx-0x3], ebp; vmovups [r9-0x80], zmm14; vmovups [r9-0x40], zmm15; ret; 
0x0000000018fbcb: jl short 0x000000000018fc15; adc [rcx-0x2], esi; vmovups [r9-0x40], zmm15; ret; 
0x0000000018fbd2: jl short 0x000000000018fc1c; adc [rcx-0x1], edi; ret; 
0x0000000018fd2b: jl short 0x000000000018fd75; adc [rcx+0x5], ebp; vmovups [r9+0x180], zmm14; vmovups [r9+0x1c0], zmm15; ret; 
0x0000000018fd32: jl short 0x000000000018fd7c; adc [rcx+0x6], esi; vmovups [r9+0x1c0], zmm15; ret; 
0x0000000018fd39: jl short 0x000000000018fd83; adc [rcx+0x7], edi; ret; 
0x0000000018fe8d: jl short 0x000000000018fed7; adc [rdi-0x6], ebp; vmovups [rdi-0x1c0], zmm14; vmovups [rdi-0x200], zmm15; ret; 
0x0000000018fe94: jl short 0x000000000018fede; adc [rdi-0x7], esi; vmovups [rdi-0x200], zmm15; ret; 
0x0000000018fe9b: jl short 0x000000000018fee5; adc [rdi-0x8], edi; ret; 
0x000000001900b2: jl short 0x00000000001900fc; adc [rsi-0x3], edx; vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x000000001900b9: jl short 0x0000000000190103; adc [rsi-0x2], edx; vmovups [rsi-0x40], zmm2; ret; 
0x000000001900c0: jl short 0x000000000019010a; adc [rsi-0x1], edx; ret; 
0x000000001900d3: jl short 0x000000000019011d; adc [rdi+0x1], edx; vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x000000001900da: jl short 0x0000000000190124; adc [rsi-0x2], edx; vmovups [rsi-0x40], zmm2; ret; 
0x000000001900e1: jl short 0x000000000019012b; adc [rsi-0x1], edx; ret; 
0x000000001900ee: jl short 0x0000000000190138; adc [rdi], edx; vmovups [rsi-0x40], zmm2; ret; 
0x000000001900f4: jl short 0x000000000019013e; adc [rsi-0x1], edx; ret; 
0x000000001901bb: jl short 0x0000000000190205; adc [rsi-0x3], edx; vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x000000001901c2: jl short 0x000000000019020c; adc [rsi-0x2], edx; vmovups [rsi-0x40], zmm2; ret; 
0x000000001901c9: jl short 0x0000000000190213; adc [rsi-0x1], edx; ret; 
0x00000000190213: jl short 0x000000000019025d; adc [rsi+0x1], edx; vmovups [rsi+0x80], zmm2; vmovups [rsi+0xc0], zmm2; ret; 
0x0000000019021a: jl short 0x0000000000190264; adc [rsi+0x2], edx; vmovups [rsi+0xc0], zmm2; ret; 
0x00000000190221: jl short 0x000000000019026b; adc [rsi+0x3], edx; ret; 
0x000000001902b0: jl short 0x00000000001902fa; adc [rsi+0x5], edx; vmovups [rsi+0x180], zmm2; vmovups [rsi+0x1c0], zmm2; ret; 
0x000000001902b7: jl short 0x0000000000190301; adc [rsi+0x6], edx; vmovups [rsi+0x1c0], zmm2; ret; 
0x000000001902be: jl short 0x0000000000190308; adc [rsi+0x7], edx; ret; 
0x000000001904e4: jl short 0x00000000001904fd; cld; vzeroupper; ret; 
0x00000000196a12: jl short 0x0000000000196a38; adc [rcx-0x77], cl; ret; 
0x00000000183a1e: jle 0x0000000000183ac0; ret; 
0x0000000002fdea: jle short 0x000000000002fe10; sub eax, 0x1; mov [rdx+0x8], eax; pop rbx; ret; 
0x00000000035cd8: jle short 0x0000000000035cf5; add [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x00000000041ef1: jle short 0x0000000000041eb5; btr rdx, 0x3f; sub rax, rdx; shr rax, 0x3f; ret; 
0x00000000041f11: jle short 0x0000000000041ed3; and rax, rdx; sub rax, rdx; shr rax, 0x3f; ret; 
0x000000000422c6: jle short 0x0000000000042288; and eax, 0x7f800000; sub eax, 0x7f800000; shr eax, 0x1f; ret; 
0x0000000004c6a7: jle short 0x000000000004c6bf; add al, ch; adc [rcx-0x2], edi; call qword ptr [rax+0x56415741]; 
0x0000000008c183: jle short 0x000000000008c17f; jmp qword ptr [rsi+0x2e]; 
0x000000000b1c61: jle short 0x00000000000b1cab; bsf eax, edx; ret; 
0x000000000cb84b: jle short 0x00000000000cb842; jmp qword ptr [rsi-0x70]; 
0x000000000df8e6: jle short 0x00000000000df8e2; adc [rax], al; syscall; 
0x000000000e4f6d: jle short 0x00000000000e4f98; mov eax, 0x7fffffff; cmp r8, 0x58465342; jne short 0x00000000000e4f80; ret; 
0x000000000e5051: jle short 0x00000000000e5053; add [rax], al; ret; 
0x000000000e51d0: jle short 0x00000000000e51e0; xor eax, eax; cmp rdx, 0x5346544e; setne al; ret; 
0x0000000010c173: jle short 0x000000000010c168; jmp qword ptr [rsi+0xf]; 
0x0000000010c72b: jle short 0x000000000010c79d; ret; 
0x0000000010c777: jle short 0x000000000010c7e9; movups [rdi+0x78], xmm7; ret; 
0x0000000010d083: jle short 0x000000000010d0f5; ret; 
0x0000000010d10c: jle short 0x000000000010d17e; movups [rdi+0xf8], xmm7; ret; 
0x0000000011637e: jle short 0x000000000011633a; idiv bh; mov eax, 0x1; add rsp, 0x8; ret; 
0x000000001179ca: jle short 0x00000000001179cb; inc dword ptr [rbp-0x7cc08b40]; ret; 
0x0000000011a9c0: jle short 0x000000000011a9d2; test r15, r15; jne 0x000000000011abd2; mov rdi, [r14]; call rbx; 
0x0000000011a9f0: jle short 0x000000000011aa02; test r15, r15; jne 0x000000000011ad3a; mov rdi, [r14]; call rbx; 
0x0000000011aa20: jle short 0x000000000011aa32; test r15, r15; jne 0x000000000011ace0; mov rdi, [r14]; call rbx; 
0x0000000011aa50: jle short 0x000000000011aa62; test r15, r15; jne 0x000000000011ac86; mov rdi, [r14]; call rbx; 
0x0000000011aa80: jle short 0x000000000011aa92; test r15, r15; jne 0x000000000011ac2c; mov rdi, [r14]; call rbx; 
0x0000000011aab0: jle short 0x000000000011aac2; test r15, r15; jne 0x000000000011ad94; mov rdi, [r14]; call rbx; 
0x0000000011aadc: jle short 0x000000000011aaee; test r15, r15; jne short 0x000000000011ab21; mov rdi, [r14]; call rbx; 
0x0000000011ab08: jle short 0x000000000011ab1a; test r15, r15; jne short 0x000000000011ab78; mov rdi, [r14]; call rbx; 
0x0000000011fa05: jle short 0x000000000011fa07; add [rax], al; syscall; 
0x0000000012c9db: jle short 0x000000000012ca0d; mov [rbp-0x80], edx; mov rdx, r13; movups [rbp-0x78], xmm7; call rax; 
0x0000000013858e: jle short 0x000000000013859b; add [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x00000000138b66: jle short 0x0000000000138be1; or eax, [rax]; syscall; 
0x0000000014e571: jle short 0x000000000014e573; add [rax], al; add rsp, 0x20; pop rbx; ret; 
0x00000000157bf7: jle short 0x0000000000157bf6; jmp qword ptr [rsi+0xf]; 
0x0000000015c03e: jle short 0x000000000015c0bf; in eax, dx; jmp qword ptr [rsi+0x66]; 
0x000000001687fe: jle short 0x0000000000168852; add eax, 0xc634f00; mov ecx, [rdi-0x73]; or al, 0xb; notrack jmp r9; 
0x0000000018379c: jle short 0x00000000001837b4; movsxd rax, ecx; ret; 
0x0000000018b7f8: jle short 0x000000000018b879; mov al, [0x77f8c5237f7ec1c4]; ret; 
0x0000000018b92b: jle short 0x000000000018b9ac; mov al, [0x77f8c5237f7ec1c4]; ret; 
0x0000000010eee5: jmp far fword ptr [r15]; 
0x000000000f7bf7: jmp far fword ptr [rax+0x10850f01]; 
0x000000000b65f6: jmp far fword ptr [rax+0x16850f10]; 
0x000000000ffe63: jmp far fword ptr [rax+0x17850f08]; 
0x000000000b65e4: jmp far fword ptr [rax+0x18850f08]; 
0x000000000b6608: jmp far fword ptr [rax+0x24850f20]; 
0x0000000013b08d: jmp far fword ptr [rax+0x2850f02]; 
0x000000000b661a: jmp far fword ptr [rax+0x32850f40]; 
0x000000000ee765: jmp far fword ptr [rax+0x410a7508]; 
0x000000001591a5: jmp far fword ptr [rax+0x412e7501]; 
0x000000000ee726: jmp far fword ptr [rax+0x49667408]; 
0x00000000027f57: jmp far fword ptr [rax+0x4e850f02]; 
0x000000000f5be5: jmp far fword ptr [rax+0x63840f01]; 
0x00000000103b5e: jmp far fword ptr [rax+0x77850f80]; 
0x000000000f7c70: jmp far fword ptr [rax+0x7850f10]; 
0x000000000b65d2: jmp far fword ptr [rax+0xa850f04]; 
0x000000000b65c0: jmp far fword ptr [rax+0xc850f02]; 
0x000000000fef42: jmp far fword ptr [rax+0xf850f08]; 
0x000000000d2326: jmp far fword ptr [rax-0x167af0fd]; 
0x000000000f822c: jmp far fword ptr [rax-0x1b7bf0ff]; 
0x000000000f8345: jmp far fword ptr [rax-0x257bf0ff]; 
0x00000000080ccf: jmp far fword ptr [rax-0x38f38bfe]; 
0x000000000cf5b9: jmp far fword ptr [rax-0x417af010]; 
0x00000000075bbd: jmp far fword ptr [rax-0x5b7bf0f0]; 
0x000000000f74c8: jmp far fword ptr [rax-0x617bf0ff]; 
0x000000000ee6df: jmp far fword ptr [rax-0x657bf0f8]; 
0x0000000015a6b5: jmp far fword ptr [rax-0x7cc98aff]; 
0x0000000006606b: jmp far fword ptr [rax]; 
0x000000000d6a40: jmp far fword ptr [rbp+0x1]; 
0x0000000005d108: jmp far fword ptr [rbp+0x7f]; 
0x000000000351cd: jmp far fword ptr [rbp-0x7ab7fffa]; 
0x000000000fb50d: jmp far fword ptr [rbp-0xe]; 
0x0000000004a026: jmp far fword ptr [rbx]; 
0x00000000090e84: jmp far fword ptr [rcx+0x202]; 
0x000000000fa329: jmp far fword ptr [rcx-0x101]; 
0x000000000d232e: jmp far fword ptr [rcx-0x38]; 
0x0000000004795f: jmp far fword ptr [rcx-0x40]; 
0x00000000057c44: jmp far fword ptr [rcx]; 
0x000000000981b8: jmp far fword ptr [rdi+0x32760000]; 
0x0000000009c0a2: jmp far fword ptr [rdi-0x78f10000]; 
0x000000000262bd: jmp far fword ptr [rdi]; 
0x00000000151a76: jmp far fword ptr [rdx+0x1e]; 
0x00000000104424: jmp far fword ptr [rdx]; 
0x00000000039831: jmp far fword ptr [rdx]; 
0x00000000031808: jmp far fword ptr [rsi]; 
0x000000000544ae: jmp far fword ptr [rsp+rsi*2]; 
0x0000000018e336: jmp far tbyte ptr [rcx]; 
0x0000000018fe6d: jmp qword ptr [r10+0x71]; 
0x0000000018fe25: jmp qword ptr [r10-0x2f]; 
0x0000000018fdb4: jmp qword ptr [r10-0xf]; 
0x000000000b4413: jmp qword ptr [r14+0x66]; 
0x000000000b2718: jmp qword ptr [r14+0xf]; 
0x00000000116023: jmp qword ptr [r8]; 
0x0000000014ed6c: jmp qword ptr [rax+0x18]; 
0x0000000015f89b: jmp qword ptr [rax+0x1f0]; 
0x00000000157104: jmp qword ptr [rax+0x40]; 
0x00000000157114: jmp qword ptr [rax+0x48]; 
0x00000000155d34: jmp qword ptr [rax+0x8]; 
0x0000000007a9a5: jmp qword ptr [rax+rax]; 
0x0000000006518f: jmp qword ptr [rax+rax]; 
0x00000000025890: jmp qword ptr [rax+rcx*2+0x33]; 
0x0000000010492c: jmp qword ptr [rax+rcx*2+0x3]; 
0x00000000153140: jmp qword ptr [rax+rcx*2-0x39]; 
0x0000000003006e: jmp qword ptr [rax+rcx*2-0x75]; 
0x0000000015329f: jmp qword ptr [rax+rcx*2-0x77]; 
0x00000000045bd2: jmp qword ptr [rax]; 
0x00000000067ca7: jmp qword ptr [rbp+0x48]; 
0x0000000004a0e6: jmp qword ptr [rbp+0xf]; 
0x00000000024ae5: jmp qword ptr [rbp+rax*2-0x75]; 
0x000000000e13cf: jmp qword ptr [rbp+rax*2-0x77]; 
0x000000000ddb5c: jmp qword ptr [rbp+rsi*2-0x38]; 
0x00000000068fb3: jmp qword ptr [rbp-0x17]; 
0x00000000067c97: jmp qword ptr [rbp]; 
0x0000000015b678: jmp qword ptr [rbx+0x6b]; 
0x000000001499f1: jmp qword ptr [rbx+0xf]; 
0x000000000e5035: jmp qword ptr [rbx+rax*4+0x38]; 
0x00000000095fa4: jmp qword ptr [rbx+rax*4+0x3c]; 
0x000000000830bc: jmp qword ptr [rbx+rcx*4+0x10]; 
0x00000000064fb0: jmp qword ptr [rbx+rcx*4+0x2]; 
0x00000000104cd3: jmp qword ptr [rbx+rcx*4+0x3]; 
0x00000000025ec4: jmp qword ptr [rbx+rcx*4+0x4]; 
0x000000001069ad: jmp qword ptr [rbx+rcx*4+0x4]; 
0x0000000006c054: jmp qword ptr [rbx+rcx*4+0x8]; 
0x00000000064ef0: jmp qword ptr [rbx+rcx*4]; 
0x000000000d6a74: jmp qword ptr [rbx]; 
0x00000000104376: jmp qword ptr [rcx+rax*2-0x39]; 
0x000000000642b8: jmp qword ptr [rcx+rax*2-0x75]; 
0x00000000045ba6: jmp qword ptr [rcx+rax*2-0x77]; 
0x000000000d8585: jmp qword ptr [rcx+rbp-0x8]; 
0x00000000099c4a: jmp qword ptr [rcx+rcx*2-0x75]; 
0x0000000013980b: jmp qword ptr [rcx+rcx*4+0x10]; 
0x0000000014b4ac: jmp qword ptr [rcx+rcx*4+0x13]; 
0x00000000026cfd: jmp qword ptr [rcx+rcx*4+0x18]; 
0x0000000010d8fe: jmp qword ptr [rcx+rcx*4+0x1]; 
0x00000000063fed: jmp qword ptr [rcx+rcx*4+0x1a]; 
0x0000000004306e: jmp qword ptr [rcx+rcx*4+0x2]; 
0x000000000e4bb6: jmp qword ptr [rcx+rcx*4+0x2b]; 
0x0000000006c140: jmp qword ptr [rcx+rcx*4+0x30]; 
0x0000000006ec94: jmp qword ptr [rcx+rcx*4+0x31]; 
0x0000000015be0b: jmp qword ptr [rcx+rcx*4+0x3]; 
0x00000000035e96: jmp qword ptr [rcx+rcx*4+0x8]; 
0x000000001323cd: jmp qword ptr [rcx]; 
0x00000000047969: jmp qword ptr [rdi+0x1000041]; 
0x0000000015544d: jmp qword ptr [rdi+0x6]; 
0x0000000012132f: jmp qword ptr [rdi+0x6d]; 
0x0000000005e558: jmp qword ptr [rdi+0x75]; 
0x0000000010436f: jmp qword ptr [rdi+rax*8+0x3]; 
0x000000000e58f5: jmp qword ptr [rdi+rax*8+0x45]; 
0x000000000413b4: jmp qword ptr [rdi+rax*8]; 
0x00000000064537: jmp qword ptr [rdi+rcx]; 
0x000000000697f5: jmp qword ptr [rdi+rdi*2]; 
0x000000000d2ccd: jmp qword ptr [rdi-0x3f7afffd]; 
0x0000000005e201: jmp qword ptr [rdi-0x75]; 
0x0000000012a24d: jmp qword ptr [rdi-0x76b30010]; 
0x000000000e7c6d: jmp qword ptr [rdi-0x76b7000d]; 
0x0000000010b2cd: jmp qword ptr [rdi]; 
0x0000000018fd06: jmp qword ptr [rdx+0x51]; 
0x0000000018fe67: jmp qword ptr [rdx+0x71]; 
0x00000000148687: jmp qword ptr [rdx+rax*8]; 
0x0000000018fe1f: jmp qword ptr [rdx-0x2f]; 
0x0000000018f965: jmp qword ptr [rdx-0xf]; 
0x000000000fce16: jmp qword ptr [rdx]; 
0x000000001031d4: jmp qword ptr [rsi+0x2e]; 
0x000000000241a2: jmp qword ptr [rsi+0x2e]; 
0x0000000011136e: jmp qword ptr [rsi+0x3]; 
0x00000000060687: jmp qword ptr [rsi+0x3d]; 
0x000000000d1c08: jmp qword ptr [rsi+0x41]; 
0x0000000005e2fe: jmp qword ptr [rsi+0x44]; 
0x00000000112481: jmp qword ptr [rsi+0x45]; 
0x00000000025339: jmp qword ptr [rsi+0x48]; 
0x00000000025811: jmp qword ptr [rsi+0x49]; 
0x0000000014f9f2: jmp qword ptr [rsi+0x66]; 
0x00000000029523: jmp qword ptr [rsi+0x66]; 
0x000000000f1f90: jmp qword ptr [rsi+0xf]; 
0x000000000239a2: jmp qword ptr [rsi+0xf]; 
0x00000000104d49: jmp qword ptr [rsi-0x3f]; 
0x0000000002537d: jmp qword ptr [rsi-0x70]; 
0x0000000006f6aa: jmp qword ptr [rsi-0x77]; 
0x0000000002f9c4: jmp qword ptr [rsi-0x7d]; 
0x00000000030d67: jmp qword ptr [rsi-0x7f]; 
0x0000000005c7c8: jmp qword ptr [rsi]; 
0x0000000006c0e1: jmp qword ptr [rsp+rax*2-0x75]; 
0x0000000009046b: jmp qword ptr [rsp+rax*2-0x77]; 
0x00000000104db7: jmp qword ptr [rsp+rcx*2-0x75]; 
0x0000000006c561: jmp qword ptr [rsp+rsi*2]; 
0x00000000040ab4: jmp r10; 
0x00000000031ae1: jmp r8; 
0x00000000165dc2: jmp r9; 
0x00000000023e91: jmp rax; 
0x0000000003aafd: jmp rbx; 
0x00000000080eb6: jmp rcx; 
0x000000000e3129: jmp rdi; 
0x000000000407b1: jmp rdx; 
0x0000000010d60d: jmp rsi; 
0x0000000009e8fe: jne 0x000000000002372e; pop rbx; pop rbp; pop r12; ret; 
0x00000000043358: jne 0x00000000000433f6; add rsp, 0x98; ret; 
0x00000000046ffb: jne 0x0000000000047120; sub dword ptr [r13], 0x1; xor esi, esi; mov rdi, r9; call r8; 
0x00000000052226: jne 0x00000000000522b5; add rsp, 0x10; pop rbx; ret; 
0x000000000578f2: jne 0x0000000000057975; leave; ret; 
0x00000000089a80: jne 0x0000000000089b1a; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000008a42d: jne 0x000000000008a51c; add rsp, 0x38; pop rbx; pop rbp; ret; 
0x00000000098d36: jne 0x0000000000098db8; sub dword ptr [rip+0x153e3d], 0x1; pop rbp; ret; 
0x0000000009d50c: jne 0x000000000009d5bf; add rsp, 0x10; mov eax, r12d; pop r12; ret; 
0x0000000009d62f: jne 0x000000000009d6e2; add rsp, 0x18; ret; 
0x0000000009e7fb: jne 0x000000000009e691; mov rax, [rip+0x14d748]; call qword ptr [rax]; 
0x000000000ac0d5: jne 0x00000000000ac1b0; pmovmskb eax, xmm1; bsf eax, eax; lea rax, [rdi+rax+0x30]; ret; 
0x000000000ac147: jne 0x00000000000ac1f0; xor eax, eax; ret; 
0x000000000ac5bc: jne 0x00000000000ac670; pmovmskb eax, xmm1; bsr eax, eax; add rax, rdi; ret; 
0x000000000b397b: jne 0x00000000000b3a85; movlpd xmm0, [rcx]; movlpd [rdx], xmm0; mov rax, rdi; ret; 
0x000000000b634b: jne 0x00000000000b6455; movlpd xmm0, [rcx]; movlpd [rdx], xmm0; mov rax, rdi; ret; 
0x000000000b76bf: jne 0x00000000000b7617; lea r11, [rip+0xf7b44]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b76ea: jne 0x00000000000b7fa0; ret; 
0x000000000b8d9f: jne 0x00000000000b8cf7; lea r11, [rip+0xf6644]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8dcd: jne 0x00000000000b97f0; ret; 
0x000000000bac5f: jne 0x00000000000babb7; lea r11, [rip+0xf4958]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000ca5cc: jne 0x00000000000ca671; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000000ce2c5: jne 0x00000000000ce3a0; pmovmskb eax, xmm1; bsf eax, eax; lea rax, [rdi+rax+0x30]; ret; 
0x000000000ce337: jne 0x00000000000ce3e0; xor eax, eax; ret; 
0x000000000cef5f: jne 0x00000000000cf0b0; ret; 
0x000000000cef3e: jne 0x00000000000cf0b0; xor eax, eax; ret; 
0x000000000cf517: jne 0x00000000000cf680; lea rax, [rdi-0x10]; ret; 
0x000000000cf50f: jne 0x00000000000cf690; test al, 0xf0; jne 0x00000000000cf680; lea rax, [rdi-0x10]; ret; 
0x000000000e49e4: jne 0x00000000000e4f04; add rsp, 0xb8; pop rbx; pop rbp; ret; 
0x000000000e57d0: jne 0x00000000000e59ad; add rsp, 0xb8; pop rbx; pop rbp; ret; 
0x000000000ee4c4: jne 0x00000000000ee3ed; ret; 
0x00000000101116: jne 0x0000000000101625; add rsp, 0x68; pop rbx; pop rbp; ret; 
0x0000000010d647: jne 0x000000000010d8a1; add rsp, 0x1a0; mov eax, r8d; pop rbx; ret; 
0x0000000010dd85: jne 0x000000000010de31; add rsp, 0x68; pop rbp; pop r12; ret; 
0x0000000010df00: jne 0x000000000010dfb9; add rsp, 0x78; ret; 
0x0000000010e4f6: jne 0x000000000010e595; add rsp, 0x68; ret; 
0x0000000010e637: jne 0x000000000010e6ef; add rsp, 0x30; pop rbx; ret; 
0x0000000010e767: jne 0x000000000010e81f; add rsp, 0x30; pop rbx; ret; 
0x00000000113938: jne 0x0000000000113a19; add rsp, 0x60; mov eax, r11d; pop rbx; ret; 
0x00000000113eb1: jne 0x0000000000113f78; add rsp, 0x60; mov rax, r12; pop r12; ret; 
0x000000001150c1: jne 0x0000000000115159; add rsp, 0x60; pop rbp; ret; 
0x0000000011a965: jne 0x000000000011aa10; mov rdi, [r13]; call rbx; 
0x0000000011a935: jne 0x000000000011aa70; mov rdi, [r13]; call rbx; 
0x0000000011a905: jne 0x000000000011aad0; mov rdi, [r13]; call rbx; 
0x0000000011a9c5: jne 0x000000000011abd2; mov rdi, [r14]; call rbx; 
0x0000000011aa85: jne 0x000000000011ac2c; mov rdi, [r14]; call rbx; 
0x0000000011aa55: jne 0x000000000011ac86; mov rdi, [r14]; call rbx; 
0x0000000011aa25: jne 0x000000000011ace0; mov rdi, [r14]; call rbx; 
0x0000000011a9f5: jne 0x000000000011ad3a; mov rdi, [r14]; call rbx; 
0x0000000011aab5: jne 0x000000000011ad94; mov rdi, [r14]; call rbx; 
0x0000000011ab36: jne 0x000000000011aebb; mov rdi, [r15]; call rbx; 
0x0000000011ac9b: jne 0x000000000011af29; mov rdi, [r15]; call rbx; 
0x0000000011abba: jne 0x000000000011af97; mov rdi, [r15]; call rbx; 
0x0000000011ad4f: jne 0x000000000011b005; mov rdi, [r15]; call rbx; 
0x0000000011ac14: jne 0x000000000011b073; mov rdi, [r15]; call rbx; 
0x0000000011abe7: jne 0x000000000011b0e1; mov rdi, [r15]; call rbx; 
0x0000000011ac6e: jne 0x000000000011b14f; mov rdi, [r15]; call rbx; 
0x0000000011acf5: jne 0x000000000011b1bd; mov rdi, [r15]; call rbx; 
0x0000000011ab60: jne 0x000000000011b22b; mov rdi, [r15]; call rbx; 
0x0000000011ac41: jne 0x000000000011b299; mov rdi, [r15]; call rbx; 
0x0000000011ad22: jne 0x000000000011b307; mov rdi, [r15]; call rbx; 
0x0000000011ab8d: jne 0x000000000011b375; mov rdi, [r15]; call rbx; 
0x0000000011acc8: jne 0x000000000011b3e3; mov rdi, [r15]; call rbx; 
0x0000000011ad7c: jne 0x000000000011b451; mov rdi, [r15]; call rbx; 
0x0000000011b3f8: jne 0x000000000011b4fc; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011b38a: jne 0x000000000011b52a; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011b31c: jne 0x000000000011b558; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011b2ae: jne 0x000000000011b586; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011b240: jne 0x000000000011b5b4; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011b1d2: jne 0x000000000011b5e2; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011b164: jne 0x000000000011b610; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011b0f6: jne 0x000000000011b63e; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011b088: jne 0x000000000011b66c; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011b01a: jne 0x000000000011b69a; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011afac: jne 0x000000000011b6c8; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011af3e: jne 0x000000000011b6f6; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011aed0: jne 0x000000000011b724; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011ae62: jne 0x000000000011b752; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011adf7: jne 0x000000000011b780; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011ae2b: jne 0x000000000011b7ae; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011afe3: jne 0x000000000011b7dc; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011b19b: jne 0x000000000011b80a; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011af07: jne 0x000000000011b838; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011b277: jne 0x000000000011b866; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011b0bf: jne 0x000000000011b894; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011b353: jne 0x000000000011b8c2; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011ae99: jne 0x000000000011b8f0; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011b209: jne 0x000000000011b91e; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011b051: jne 0x000000000011b94c; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011b3c1: jne 0x000000000011b97a; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011af75: jne 0x000000000011b9a8; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011b2e5: jne 0x000000000011b9d6; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011b12d: jne 0x000000000011ba04; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011b42f: jne 0x000000000011ba32; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000012d104: jne 0x000000000012d1dd; leave; ret; 
0x00000000137a23: jne 0x0000000000137af0; sub dword ptr [rip+0xb8a08], 0x1; mov eax, r8d; pop rbp; ret; 
0x0000000013deaf: jne 0x000000000013df44; add rsp, 0x58; pop rbx; pop rbp; ret; 
0x000000001471eb: jne 0x0000000000147298; add rsp, 0x68; pop rbx; pop rbp; ret; 
0x0000000014831b: jne 0x0000000000148460; mov rax, [rbp+0x8]; mov esi, 0x20; mov rdi, rbp; call qword ptr [rax+0x30]; 
0x0000000014e56f: jne 0x000000000014e5f3; add rsp, 0x20; pop rbx; ret; 
0x00000000151845: jne 0x00000000001518d7; add rsp, 0xb8; pop rbx; pop rbp; ret; 
0x00000000151ead: jne 0x0000000000151f52; add rsp, 0x48; pop rbx; pop rbp; ret; 
0x0000000015204d: jne 0x00000000001520f2; add rsp, 0x48; pop rbx; pop rbp; ret; 
0x00000000153e37: jne 0x0000000000153cf2; nop [rax]; mov rax, [rbp+0x8]; mov rdi, rbp; call qword ptr [rax+0x28]; 
0x00000000153cf5: jne 0x0000000000153e4a; mov rax, [rbp+0x8]; mov rsi, rbx; mov rdi, rbp; call qword ptr [rax]; 
0x00000000155e11: jne 0x0000000000155eaf; add rsp, 0x28; pop rbx; pop rbp; ret; 
0x00000000155f01: jne 0x0000000000155f9f; add rsp, 0x28; pop rbx; pop rbp; ret; 
0x00000000155ff1: jne 0x000000000015608f; add rsp, 0x28; pop rbx; pop rbp; ret; 
0x000000001560e1: jne 0x000000000015617f; add rsp, 0x28; pop rbx; pop rbp; ret; 
0x00000000156d55: jne 0x0000000000156def; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x00000000156e45: jne 0x0000000000156edf; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x00000000156f35: jne 0x0000000000156fcf; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x00000000157025: jne 0x00000000001570bf; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x00000000160826: jne 0x00000000001608a8; mov rcx, [rsp+0x10]; mov rdi, [rsp+0x18]; call rcx; 
0x00000000178261: jne 0x0000000000178810; ret; 
0x0000000017c5f2: jne 0x000000000017cc60; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x00000000183f13: jne 0x0000000000183e00; sub eax, ecx; vzeroupper; ret; 
0x0000000018442c: jne 0x00000000001842d0; sub eax, ecx; vzeroupper; ret; 
0x000000001845e6: jne 0x0000000000184680; xor eax, eax; vzeroupper; ret; 
0x00000000184dd4: jne 0x0000000000184ce0; ret; 
0x00000000184f1f: jne 0x0000000000184ce0; vzeroupper; ret; 
0x0000000018892a: jne 0x00000000001889d0; mov rax, r8; vzeroupper; ret; 
0x0000000018a1e0: jne 0x000000000018a610; vzeroupper; ret; 
0x0000000018aef8: jne 0x000000000018b340; vzeroupper; ret; 
0x0000000018bd12: jne 0x000000000018bc90; ret; 
0x0000000018be5f: jne 0x000000000018bc90; vzeroupper; ret; 
0x0000000018c096: jne 0x000000000018c130; xor eax, eax; vzeroupper; ret; 
0x0000000018c399: jne 0x000000000018c209; vzeroupper; ret; 
0x0000000018c5fc: jne 0x000000000018c530; sub eax, ecx; vzeroupper; ret; 
0x0000000018c81f: jne 0x000000000018c679; vzeroupper; ret; 
0x0000000018cb17: jne 0x000000000018ca00; sub eax, ecx; vzeroupper; ret; 
0x0000000018d2cd: jne 0x000000000018d370; mov rax, r8; shr rax, 0x2; vzeroupper; ret; 
0x0000000018e637: jne 0x000000000018ea63; movzx eax, byte ptr [rdi-0x1]; movzx ecx, byte ptr [rsi-0x1]; sub eax, ecx; ret; 
0x0000000018e0dd: jne 0x000000000018ea63; movzx eax, byte ptr [rdi-0x1]; movzx edx, byte ptr [rsi-0x1]; sub eax, edx; ret; 
0x0000000018e031: jne 0x000000000018ea63; xor eax, eax; ret; 
0x0000000018e128: jne 0x000000000018ea6f; movzx eax, byte ptr [rdi-0x1]; movzx edx, byte ptr [rsi-0x1]; sub eax, edx; ret; 
0x0000000018e059: jne 0x000000000018ea6f; xor eax, eax; ret; 
0x0000000018e32a: jne 0x000000000018ea7a; movzx eax, byte ptr [rdi-0x1]; movzx ecx, byte ptr [rsi-0x1]; sub eax, ecx; ret; 
0x0000000018e1bd: jne 0x000000000018ea90; and eax, 0xffff; and ecx, 0xffff; sub eax, ecx; ret; 
0x0000000018f661: jne 0x000000000018f8a3; xor eax, eax; ret; 
0x0000000018f687: jne 0x000000000018f8b6; xor eax, eax; ret; 
0x00000000190bf0: jne 0x0000000000190ae0; lea rax, [rdi+0xb]; ret; 
0x00000000190ba9: jne 0x0000000000190ae0; lea rax, [rdi+0xf]; ret; 
0x00000000190b4c: jne 0x0000000000190cc0; test dl, 0x4; jne short 0x0000000000190ae0; lea rax, [rdi+0x3]; ret; 
0x00000000190c2e: jne 0x0000000000190cf0; test al, 0x40; jne 0x0000000000190d00; lea rax, [rdi+0x7]; ret; 
0x00000000190c35: jne 0x0000000000190d00; lea rax, [rdi+0x7]; ret; 
0x00000000190b1d: jne 0x0000000000190d00; test dl, 0x40; jne short 0x0000000000190ae0; lea rax, [rdi+0x7]; ret; 
0x00000000190be7: jne 0x0000000000190d30; test dh, 0x4; jne 0x0000000000190ae0; lea rax, [rdi+0xb]; ret; 
0x00000000190c80: jne 0x0000000000190d60; test ah, 0x40; jne 0x0000000000190d70; lea rax, [rdi+0xf]; ret; 
0x00000000190c88: jne 0x0000000000190d70; lea rax, [rdi+0xf]; ret; 
0x00000000190ba0: jne 0x0000000000190d70; test dh, 0x40; jne 0x0000000000190ae0; lea rax, [rdi+0xf]; ret; 
0x000000001922b4: jne 0x00000000001924c0; xor eax, eax; ret; 
0x00000000192414: jne 0x00000000001924d5; cmp eax, ecx; jne 0x00000000001924d5; xor eax, eax; ret; 
0x00000000192361: jne 0x00000000001924d5; xor eax, eax; ret; 
0x000000001929bd: jne 0x0000000000192af0; ret; 
0x000000001968ed: jne 0x0000000000196840; add rsp, 0x38; ret; 
0x00000000094d58: jne 0xffffffff831cc354; or dh, bh; xor eax, eax; ret; 
0x00000000023a65: jne short 0x0000000000023a3b; mov rdx, [rip+0x1c8422]; cmp [rdx+0xd8], rax; jne short 0x0000000000023a3b; ret; 
0x00000000023a75: jne short 0x0000000000023a3b; ret; 
0x000000000244b9: jne short 0x00000000000244f0; add rsp, 0x38; pop rbx; pop rbp; ret; 
0x000000000256c9: jne short 0x000000000002565b; mov rdi, rbx; call rsi; 
0x0000000002ca32: jne short 0x000000000002ca34; add [rbp-0x77], cl; ret; 
0x00000000033dcf: jne short 0x0000000000033dd8; mov eax, r8d; ret; 
0x00000000040fed: jne short 0x0000000000040fc8; ret; 
0x00000000041268: jne short 0x0000000000041250; mov r11d, [r8+rax*4+0x8]; add r11, [rdi+0x20]; mov rax, r11; ret; 
0x00000000041e88: jne short 0x0000000000041e5a; mov rax, [rip+0x1a9fdf]; mov dword ptr fs:[rax], 0x22; add rsp, 0x8; ret; 
0x00000000041e56: jne short 0x0000000000041e60; fadd st, st(0); add rsp, 0x8; ret; 
0x00000000041faa: jne short 0x0000000000041fc0; mov rax, 0xfffffffffffff; test rdx, rax; je short 0x0000000000041fc0; ret; 
0x0000000004221c: jne short 0x0000000000042228; addsd xmm0, xmm0; ret; 
0x0000000004232b: jne short 0x0000000000042340; and esi, 0x80000000; movss [rdi], xmm0; movd xmm0, esi; ret; 
0x00000000042382: jne short 0x0000000000042390; test eax, 0x7fffff; je short 0x0000000000042390; ret; 
0x00000000042548: jne short 0x0000000000042550; addss xmm0, xmm0; ret; 
0x00000000042bc5: jne short 0x0000000000042bcc; add rsp, 0x18; ret; 
0x00000000042c6a: jne short 0x0000000000042c78; mov [rbx+0x40], esi; xor eax, eax; pop rbx; ret; 
0x00000000042f1f: jne short 0x0000000000042f29; add rsp, 0x148; ret; 
0x0000000004304c: jne short 0x0000000000043074; mov eax, r8d; add rsp, 0x118; ret; 
0x00000000043260: jne short 0x00000000000432a4; mov eax, r9d; add rsp, 0x148; ret; 
0x0000000004347e: jne short 0x0000000000043498; mov esi, 0x8; mov eax, 0x82; syscall; 
0x000000000435f4: jne short 0x0000000000043605; add rsp, 0x118; ret; 
0x00000000043677: jne short 0x0000000000043688; add rsp, 0x118; ret; 
0x000000000436f1: jne short 0x0000000000043728; add rsp, 0x98; pop rbp; pop r12; ret; 
0x00000000043782: jne short 0x000000000004378c; add rsp, 0x98; ret; 
0x000000000437fd: jne short 0x0000000000043817; add rsp, 0x98; pop rbp; pop r12; ret; 
0x00000000043916: jne short 0x000000000004393f; add rsp, 0x140; mov eax, r8d; pop rbx; ret; 
0x000000000439c6: jne short 0x00000000000439e2; add rsp, 0x40; pop rbx; ret; 
0x00000000043d22: jne short 0x0000000000043d2c; add rsp, 0x148; ret; 
0x00000000044150: jne short 0x00000000000441a8; mov r10d, 0x8; mov eax, 0x80; syscall; 
0x00000000044349: jne short 0x0000000000044367; add rsp, 0x98; pop rbp; pop r12; ret; 
0x000000000443cc: jne short 0x00000000000443e7; add rsp, 0x98; pop rbp; pop r12; ret; 
0x00000000044452: jne short 0x000000000004445c; add rsp, 0xa8; ret; 
0x000000000457a2: jne short 0x00000000000457a4; mov rdi, [r12]; mov rdx, r14; mov rax, [rsp]; call rax; 
0x0000000004672f: jne short 0x000000000004674b; add [rcx], al; xor eax, eax; pop rbx; ret; 
0x0000000004672a: jne short 0x0000000000046758; sub dword ptr [rip+0x1a7555], 0x1; xor eax, eax; pop rbx; ret; 
0x0000000004730b: jne short 0x00000000000472d0; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000004739f: jne short 0x00000000000473a8; pop rbx; ret; 
0x00000000047473: jne short 0x000000000004747a; add rsp, 0x28; ret; 
0x00000000047563: jne short 0x000000000004756a; add rsp, 0x28; ret; 
0x00000000047627: jne short 0x0000000000047660; sub dword ptr [rip+0x1a6eb0], 0x1; pop rbp; ret; 
0x00000000047897: jne short 0x00000000000478ea; add rsp, 0x18; ret; 
0x00000000047ded: jne short 0x0000000000047df4; add rsp, 0x18; ret; 
0x00000000047e3a: jne short 0x0000000000047e41; add rsp, 0x18; ret; 
0x00000000047e8c: jne short 0x0000000000047e93; add rsp, 0x18; ret; 
0x00000000047ed9: jne short 0x0000000000047ee0; add rsp, 0x18; ret; 
0x00000000047f2c: jne short 0x0000000000047f33; add rsp, 0x18; ret; 
0x00000000047f79: jne short 0x0000000000047f80; add rsp, 0x18; ret; 
0x0000000004824e: jne short 0x0000000000048260; mov eax, 0x13e; syscall; 
0x00000000051b1a: jne short 0x0000000000051b4c; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x00000000051bca: jne short 0x0000000000051c2b; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x00000000051c98: jne short 0x0000000000051cf4; add rsp, 0x38; pop rbx; pop rbp; ret; 
0x00000000052c35: jne short 0x0000000000052c3f; add rsp, 0xd8; ret; 
0x0000000005417f: jne short 0x0000000000054189; add rsp, 0xd8; ret; 
0x0000000005433d: jne short 0x0000000000054330; pop rbx; ret; 
0x00000000054368: jne short 0x0000000000054360; pop rbx; ret; 
0x0000000005506e: jne short 0x0000000000055073; push r10; ret; 
0x00000000055577: jne short 0x000000000005557c; push r10; ret; 
0x00000000055656: jne short 0x00000000000555dc; sub rdx, 0x1; jne short 0x0000000000055640; mov eax, 0x1; ret; 
0x0000000005565c: jne short 0x0000000000055640; mov eax, 0x1; ret; 
0x0000000005589e: jne short 0x0000000000055823; sub rdx, 0x1; jne short 0x0000000000055888; mov eax, 0x1; ret; 
0x000000000558a4: jne short 0x0000000000055888; mov eax, 0x1; ret; 
0x00000000055c73: jne short 0x0000000000055c60; mov rax, rdx; ret; 
0x00000000056557: jne short 0x0000000000056548; mov rax, rdx; ret; 
0x00000000057b69: jne short 0x0000000000057b90; mov dword ptr [rdx], 0x0; mov eax, 0x1; ret; 
0x00000000057c1a: jne short 0x0000000000057bfc; mov eax, 0x1; ret; 
0x00000000057c13: jne short 0x0000000000057c02; cmp cx, 0x7fff; jne short 0x0000000000057bfc; mov eax, 0x1; ret; 
0x00000000057bfa: jne short 0x0000000000057c28; mov dword ptr [rdx], 0x0; mov eax, 0x1; ret; 
0x00000000057d7c: jne short 0x0000000000057de0; mov dword ptr [rdx], 0x0; mov eax, 0x2; ret; 
0x0000000005b08a: jne short 0x000000000005b0dd; add rsp, 0x28; pop rbx; pop rbp; ret; 
0x0000000005b5e3: jne short 0x000000000005b600; add rsp, 0x450; pop rbp; ret; 
0x0000000005b8a5: jne short 0x000000000005b8c5; add rsp, 0x38; ret; 
0x00000000061080: jne short 0x00000000000610b8; sub dword ptr [rip+0x18d6c7], 0x1; mov eax, r8d; pop rbx; ret; 
0x00000000061ca8: jne short 0x0000000000061cb2; add rsp, 0xd8; ret; 
0x00000000061d7d: jne short 0x0000000000061d87; add rsp, 0xd8; ret; 
0x00000000061e34: jne short 0x0000000000061e3e; add rsp, 0xd8; ret; 
0x00000000061f06: jne short 0x0000000000061f10; add rsp, 0xd8; ret; 
0x00000000061fc8: jne short 0x0000000000061fd2; add rsp, 0xd8; ret; 
0x00000000062088: jne short 0x0000000000062092; add rsp, 0xd8; ret; 
0x00000000062176: jne short 0x0000000000062180; add rsp, 0xd8; ret; 
0x0000000006224d: jne short 0x0000000000062257; add rsp, 0xd8; ret; 
0x000000000627dc: jne short 0x00000000000627e0; pop rbx; ret; 
0x00000000062873: jne short 0x000000000006287e; add rsp, 0x1010; pop rbp; ret; 
0x00000000062e17: jne short 0x0000000000062e27; add rsp, 0x18; ret; 
0x00000000063040: jne short 0x0000000000063058; mov rdx, [rdi+0x88]; mov [rdx+0x8], rcx; mov dword ptr [rdx+0x4], 0x1; ret; 
0x000000000630b8: jne short 0x00000000000630c0; sub dword ptr [rdi], 0x1; ret; 
0x000000000631a0: jne short 0x00000000000631aa; add rsp, 0xd8; ret; 
0x0000000006327b: jne short 0x0000000000063285; add rsp, 0xd8; ret; 
0x00000000083f6a: jne short 0x0000000000083f78; sub dword ptr [rip+0x16a80d], 0x1; ret; 
0x000000000864f8: jne short 0x0000000000086502; add rsp, 0xd8; ret; 
0x000000000865b4: jne short 0x00000000000865be; add rsp, 0xd8; ret; 
0x000000000866ad: jne short 0x00000000000866b7; add rsp, 0xd8; ret; 
0x0000000008677d: jne short 0x0000000000086787; add rsp, 0xd8; ret; 
0x00000000086836: jne short 0x0000000000086840; add rsp, 0xd8; ret; 
0x00000000086e51: jne short 0x0000000000086e40; ret; 
0x000000000874e2: jne short 0x0000000000087558; mov rax, [rax+0xe0]; call qword ptr [rax+0x68]; 
0x0000000008a74c: jne short 0x000000000008a760; mov eax, [rdx+0x4c]; cmp [rdx+0x48], eax; cmovne eax, ecx; ret; 
0x0000000008dc08: jne short 0x000000000008dc1b; add rsp, 0x48; ret; 
0x000000000908d9: jne short 0x00000000000908e0; ret; 
0x0000000009101e: jne short 0x0000000000091030; sub dword ptr [rip+0x15d799], 0x1; ret; 
0x00000000091719: jne short 0x0000000000091708; ret; 
0x00000000092756: jne short 0x0000000000092748; ret; 
0x00000000092a11: jne short 0x00000000000929d3; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000009357e: jne short 0x0000000000093570; ret; 
0x000000000935b7: jne short 0x00000000000935c8; sub edx, [rax+0x18]; mov eax, [rdi+0x10]; sub eax, edx; ret; 
0x0000000009392a: jne short 0x0000000000093938; sub dword ptr [rip+0x15ae8d], 0x1; ret; 
0x00000000094633: jne short 0x000000000009461c; and r11d, 0xffffffbb; cmp r11d, 0xa; je short 0x0000000000094640; ret; 
0x0000000009474d: jne short 0x0000000000094730; lea rax, [rip+0x15cd4a]; pop rbx; mov dword ptr [rip+0x15cd2f], 0x1; ret; 
0x00000000094a25: jne short 0x0000000000094a60; sub dword ptr [rip+0x159dd2], 0x1; pop rbx; ret; 
0x00000000094adc: jne short 0x0000000000094b0c; pop rbx; pop rbp; pop r12; ret; 
0x00000000094d5b: jne short 0x0000000000094d70; and dword ptr [rdi+0x8], 0xfffffffe; xor eax, eax; ret; 
0x00000000094fe7: jne short 0x0000000000094fc8; nop [rax]; xor r8d, r8d; mov rax, r8; ret; 
0x00000000096827: jne short 0x0000000000096860; xor edi, edi; call qword ptr [r13]; 
0x0000000009922f: jne short 0x0000000000099272; add rsp, 0x40; pop rbp; ret; 
0x00000000099ede: jne short 0x0000000000099ec0; pop rbx; pop rbp; pop r12; ret; 
0x00000000099f7d: jne short 0x0000000000099fb8; sub dword ptr [rip+0x154ef2], 0x1; pop rbx; ret; 
0x0000000009a087: jne short 0x000000000009a06f; test r8b, r8b; jne short 0x000000000009a099; mov dword ptr [rip+0x154de0], 0x0; ret; 
0x0000000009a08c: jne short 0x000000000009a099; mov dword ptr [rip+0x154de0], 0x0; ret; 
0x0000000009c29f: jne short 0x000000000009c288; sub rax, 0x10; ret; 
0x0000000009e14d: jne short 0x000000000009e160; add al, ch; stosd [rdi]; cmp bh, ah; jmp qword ptr [rbx+rcx*4+0x4]; 
0x0000000009e881: jne short 0x000000000009e870; xor eax, eax; ret; 
0x0000000009e8eb: jne short 0x000000000009e8c0; mov rdi, rsi; call rax; 
0x0000000009e95b: jne short 0x000000000009e950; ret; 
0x0000000009f88c: jne short 0x000000000009f8a0; lea rax, [rip+0x14f6cb]; mov [rip+0x14f6ac], rax; ret; 
0x000000000a0557: jne short 0x00000000000a050f; add [rax], eax; lea rdx, [rip+0x1b58e]; cmove rax, rdx; ret; 
0x000000000a1424: jne short 0x00000000000a1410; ret; 
0x000000000a2888: jne short 0x00000000000a2820; nop [rax+rax]; xor r8d, r8d; mov rax, r8; ret; 
0x000000000a863f: jne short 0x00000000000a8630; mov [rdx], rcx; ret; 
0x000000000a8705: jne short 0x00000000000a86f0; mov byte ptr [r8], 0x0; mov [rdi], rax; mov rax, r9; ret; 
0x000000000a879f: jne short 0x00000000000a8790; mov rax, r8; ret; 
0x000000000a87d3: jne short 0x00000000000a87c0; mov rax, r8; ret; 
0x000000000a8810: jne short 0x00000000000a87f0; mov rax, r8; ret; 
0x000000000a88c0: jne short 0x00000000000a88a8; cmp eax, ecx; je short 0x00000000000a88a8; mov rax, r8; ret; 
0x000000000a88f2: jne short 0x00000000000a88e0; ret; 
0x000000000a894c: jne short 0x00000000000a8928; ret; 
0x000000000aa66c: jne short 0x00000000000aa650; xor eax, eax; sub eax, ecx; ret; 
0x000000000ac177: jne short 0x00000000000ac1d0; xor eax, eax; ret; 
0x000000000ac3c3: jne short 0x00000000000ac410; pmovmskb eax, xmm1; bsf eax, eax; lea rax, [rdi+rax+0x30]; ret; 
0x000000000ac62a: jne short 0x00000000000ac6a0; xor eax, eax; ret; 
0x000000000ac659: jne short 0x00000000000ac6d0; xor eax, eax; ret; 
0x000000000b1d87: jne short 0x00000000000b1d8d; xor rax, rax; ret; 
0x000000000bb501: jne short 0x00000000000bb4f0; ret; 
0x000000000bb4f8: jne short 0x00000000000bb510; movzx ecx, byte ptr [rsi+rdx+0x3]; test cl, cl; jne short 0x00000000000bb4f0; ret; 
0x000000000bb5b1: jne short 0x00000000000bb5a0; ret; 
0x000000000bb5a8: jne short 0x00000000000bb5c0; movzx ecx, byte ptr [rsi+rdx+0x3]; test cl, cl; jne short 0x00000000000bb5a0; ret; 
0x000000000bb721: jne short 0x00000000000bb710; lea rax, [rcx-0x1]; ret; 
0x000000000bb871: jne short 0x00000000000bb860; sub rax, 0x1; ret; 
0x000000000bbf77: jne short 0x00000000000bbf7d; mov rax, rdi; ret; 
0x000000000bc051: jne short 0x00000000000bc037; rep ret; 
0x000000000bcb71: jne short 0x00000000000bcb48; mov rax, r8; ret; 
0x000000000bcc68: jne short 0x00000000000bcc58; xor eax, eax; ret; 
0x000000000bccfe: jne short 0x00000000000bcc95; test edx, edx; jne short 0x00000000000bcce0; ret; 
0x000000000bcd02: jne short 0x00000000000bcce0; ret; 
0x000000000bdfed: jne short 0x00000000000bdfe0; ret; 
0x000000000beee2: jne short 0x00000000000beedd; dec dword ptr [rax-0x7d]; ret; 
0x000000000c683b: jne short 0x00000000000c689c; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000c6919: jne short 0x00000000000c6975; add rsp, 0x38; pop rbx; pop rbp; ret; 
0x000000000c69eb: jne short 0x00000000000c6a1d; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000ca0e3: jne short 0x00000000000ca104; add rsp, 0x20; pop rbx; ret; 
0x000000000cabc0: jne short 0x00000000000cabca; add rsp, 0xd8; ret; 
0x000000000cac9b: jne short 0x00000000000caca5; add rsp, 0xd8; ret; 
0x000000000cdfeb: jne short 0x00000000000ce03e; add rsp, 0x28; pop rbx; pop rbp; ret; 
0x000000000ce367: jne short 0x00000000000ce3c0; xor eax, eax; ret; 
0x000000000cf036: jne short 0x00000000000cf0b0; ret; 
0x000000000cf18a: jne short 0x00000000000cf190; mov eax, r9d; ret; 
0x000000000cf62b: jne short 0x00000000000cf680; lea rax, [rdi-0x10]; ret; 
0x000000000cf627: jne short 0x00000000000cf690; test al, 0xf0; jne short 0x00000000000cf680; lea rax, [rdi-0x10]; ret; 
0x000000000cf6c7: jne short 0x00000000000cf6cd; xor rax, rax; ret; 
0x000000000d0223: jne short 0x00000000000d0239; add rsp, 0x28; ret; 
0x000000000d029d: jne short 0x00000000000d02a5; add rsp, 0x40; pop rbp; ret; 
0x000000000d0f07: jne short 0x00000000000d0f38; mov eax, 0x60; syscall; 
0x000000000d1069: jne short 0x00000000000d1094; add rsp, 0x28; ret; 
0x000000000d11cb: jne short 0x00000000000d122e; add rsp, 0xe0; mov eax, r8d; pop rbx; ret; 
0x000000000d293a: jne short 0x00000000000d2970; sub dword ptr [rip+0x11c85d], 0x1; add rsp, 0x8; ret; 
0x000000000d4316: jne short 0x00000000000d4320; add rsp, 0x20; xor eax, eax; pop rbx; ret; 
0x000000000d4abd: jne short 0x00000000000d4ad0; mov rax, r8; add rsp, 0x8; ret; 
0x000000000da6ec: jne short 0x00000000000da6f3; add rsp, 0x18; ret; 
0x000000000dcfbc: jne short 0x00000000000dcfc3; add rsp, 0x18; ret; 
0x000000000dd847: jne short 0x00000000000dd830; pop rbx; pop rbp; pop r12; ret; 
0x000000000ddc85: jne short 0x00000000000ddc90; add rsp, 0xe0; pop rbx; ret; 
0x000000000ddd19: jne short 0x00000000000ddd24; add rsp, 0xe0; pop rbx; ret; 
0x000000000de773: jne short 0x00000000000de7aa; add rsp, 0xa8; pop rbp; pop r12; ret; 
0x000000000df420: jne short 0x00000000000df450; mov eax, 0x74; syscall; 
0x000000000df43f: jne short 0x00000000000df493; add rsp, 0x38; ret; 
0x000000000dfc56: jne short 0x00000000000dfc90; sub dword ptr [rip+0x10f711], 0x1; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x000000000dfd2e: jne short 0x00000000000dfd48; sub dword ptr [rip+0x10f639], 0x1; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x000000000e163b: jne short 0x00000000000e16ac; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000e1b86: jne short 0x00000000000e1bc0; sub dword ptr [rip+0x10d951], 0x1; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x000000000e1c5e: jne short 0x00000000000e1c78; sub dword ptr [rip+0x10d879], 0x1; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x000000000e2c61: jne short 0x00000000000e2c78; mov eax, 0x3d; syscall; 
0x000000000e2d11: jne short 0x00000000000e2d30; xor r8d, r8d; mov eax, 0xf7; syscall; 
0x000000000e2e45: jne short 0x00000000000e2e55; add rsp, 0x28; pop rbx; pop rbp; ret; 
0x000000000e2e6e: jne short 0x00000000000e2e80; mov eax, 0x22; syscall; 
0x000000000e2ef9: jne short 0x00000000000e2f00; add rsp, 0x8; ret; 
0x000000000e3696: jne short 0x00000000000e36d9; mov rbx, [rbp-0x8]; leave; ret; 
0x000000000e3866: jne short 0x00000000000e38a9; mov rbx, [rbp-0x8]; leave; ret; 
0x000000000e41a0: jne short 0x00000000000e41d0; mov eax, 0x69; syscall; 
0x000000000e41bf: jne short 0x00000000000e4213; add rsp, 0x38; ret; 
0x000000000e4240: jne short 0x00000000000e4270; mov eax, 0x6a; syscall; 
0x000000000e425f: jne short 0x00000000000e42b3; add rsp, 0x38; ret; 
0x000000000e4513: jne short 0x00000000000e4515; add [rax], al; syscall; 
0x000000000e4510: jne short 0x00000000000e4540; mov eax, 0x75; syscall; 
0x000000000e452f: jne short 0x00000000000e4593; add rsp, 0x38; ret; 
0x000000000e45c0: jne short 0x00000000000e45f0; mov eax, 0x77; syscall; 
0x000000000e45df: jne short 0x00000000000e4643; add rsp, 0x38; ret; 
0x000000000e4f7b: jne short 0x00000000000e4f80; ret; 
0x000000000e4f89: jne short 0x00000000000e4ffd; mov eax, 0x7d00; ret; 
0x000000000e4ff5: jne short 0x00000000000e5013; mov eax, 0xfffa; ret; 
0x000000000e5116: jne short 0x00000000000e5120; mov eax, 0x40; ret; 
0x000000000e8213: jne short 0x00000000000e81c1; xor eax, eax; ret; 
0x000000000e81d5: jne short 0x00000000000e8209; mov eax, 0x1; ret; 
0x000000000e81f6: jne short 0x00000000000e8229; mov eax, 0x1; ret; 
0x000000000ec433: jne short 0x00000000000ec41d; mov byte ptr [rdi+0x8], 0x16; mov eax, 0x1; ret; 
0x000000000ec402: jne short 0x00000000000ec430; mov byte ptr [rdi+0x8], 0x19; mov eax, 0x1; ret; 
0x000000001029d1: jne short 0x0000000000102a26; add rsp, 0x38; ret; 
0x00000000102aab: jne short 0x0000000000102a44; cmp dword ptr [rdi+0x14], 0x1000000; mov edx, 0x2; cmove eax, edx; ret; 
0x00000000102a6f: jne short 0x0000000000102a60; mov eax, [rdx+0x8]; ret; 
0x00000000106b63: jne short 0x0000000000106b48; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000010c191: jne short 0x000000000010c1a8; mov eax, 0x11; syscall; 
0x0000000010c241: jne short 0x000000000010c258; mov eax, 0x12; syscall; 
0x0000000010c79e: jne short 0x000000000010c7a5; mov [rdi], si; xor eax, eax; ret; 
0x0000000010ce23: jne short 0x000000000010ce25; add [rax], al; syscall; 
0x0000000010d1ab: jne short 0x000000000010d1c1; add rsp, 0x28; ret; 
0x0000000010d360: jne short 0x000000000010d368; add rsp, 0x10; pop rbp; ret; 
0x0000000010d470: jne short 0x000000000010d477; add rsp, 0x18; ret; 
0x0000000010d4c2: jne short 0x000000000010d4c9; add rsp, 0x18; ret; 
0x0000000010d929: jne short 0x000000000010d958; mov eax, 0x85; syscall; 
0x0000000010d98c: jne short 0x000000000010d9b8; mov eax, 0x103; syscall; 
0x0000000010dbf7: jne short 0x000000000010dbdb; or eax, 0xc76400; add [rax], al; add [rax-0x1], bh; ret; 
0x0000000010dc1a: jne short 0x000000000010dc50; and ch, 0x1; jne short 0x000000000010dc68; mov eax, 0x10c; syscall; 
0x0000000010dc1f: jne short 0x000000000010dc68; mov eax, 0x10c; syscall; 
0x0000000010dedd: jne short 0x000000000010df40; mov eax, 0x101; syscall; 
0x0000000010dffe: jne short 0x000000000010e010; syscall; 
0x0000000010e09e: jne short 0x000000000010e0b0; mov eax, 0x1; syscall; 
0x0000000010e512: jne short 0x000000000010e540; mov eax, 0x48; syscall; 
0x0000000010e83e: jne short 0x000000000010e850; mov eax, 0x3; syscall; 
0x0000000010e9be: jne short 0x000000000010e9d0; mov eax, 0x55; syscall; 
0x0000000010f335: jne short 0x000000000010f380; add rsp, 0x130; pop rbp; ret; 
0x0000000010fbf7: jne short 0x000000000010fbbb; or eax, 0x64d8f700; mov [rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010fbc3: jne short 0x000000000010fbcd; movzx eax, al; add rsp, 0x58; ret; 
0x0000000011298e: jne short 0x00000000001129a0; mov eax, 0x7; syscall; 
0x00000000112a5d: jne short 0x0000000000112a90; mov r8d, 0x8; mov rdx, r12; mov eax, 0x10f; syscall; 
0x00000000112a85: jne short 0x0000000000112b06; add rsp, 0x40; pop r12; ret; 
0x00000000113011: jne short 0x0000000000113028; mov eax, 0x146; syscall; 
0x00000000113221: jne short 0x0000000000113238; mov eax, 0x115; syscall; 
0x000000001132d1: jne short 0x00000000001132e8; mov eax, 0x11d; syscall; 
0x000000001133fb: jne short 0x0000000000113443; add rsp, 0x68; ret; 
0x0000000011348a: jne short 0x00000000001134d3; add rsp, 0x18; ret; 
0x00000000113542: jne short 0x000000000011358b; add rsp, 0x58; ret; 
0x000000001135e0: jne short 0x000000000011362b; add rsp, 0x58; ret; 
0x0000000011377f: jne short 0x000000000011375c; or eax, 0x80000000; mov [rdi], eax; xor eax, eax; ret; 
0x00000000113abd: jne short 0x0000000000113ae4; mov eax, r9d; add rsp, 0x38; ret; 
0x00000000113b2d: jne short 0x0000000000113b3b; add rsp, 0x18; ret; 
0x00000000113b7e: jne short 0x0000000000113ba0; mov edx, 0x1; mov esi, 0x5409; mov eax, 0x10; syscall; 
0x0000000011440e: jne short 0x0000000000114420; mov eax, 0x13; syscall; 
0x000000001144ae: jne short 0x00000000001144c0; mov eax, 0x14; syscall; 
0x00000000114551: jne short 0x0000000000114570; xor r8d, r8d; mov eax, 0x127; syscall; 
0x00000000114611: jne short 0x0000000000114630; xor r8d, r8d; mov eax, 0x128; syscall; 
0x000000001149a0: jne short 0x00000000001149d0; mov eax, 0x71; syscall; 
0x000000001149bf: jne short 0x0000000000114a1b; add rsp, 0x38; ret; 
0x00000000114a40: jne short 0x0000000000114a70; mov eax, 0x72; syscall; 
0x00000000114a5f: jne short 0x0000000000114abb; add rsp, 0x38; ret; 
0x00000000114af8: jne short 0x0000000000114afa; add [rax], al; syscall; 
0x00000000114aeb: jne short 0x0000000000114b20; mov edx, 0xffffffff; mov edi, 0xffffffff; mov eax, 0x75; syscall; 
0x00000000114b15: jne short 0x0000000000114b5f; add esp, 0x38; ret; 
0x00000000114b14: jne short 0x0000000000114b8b; add rsp, 0x38; ret; 
0x00000000114bbb: jne short 0x0000000000114bf0; mov edx, 0xffffffff; mov edi, 0xffffffff; mov eax, 0x77; syscall; 
0x00000000114be5: jne short 0x0000000000114c2f; add esp, 0x38; ret; 
0x00000000114be4: jne short 0x0000000000114c5b; add rsp, 0x38; ret; 
0x00000000114cde: jne short 0x0000000000114ce5; add rsp, 0x28; ret; 
0x00000000114fa1: jne short 0x0000000000114fb8; mov eax, 0x17; syscall; 
0x000000001150a2: jne short 0x00000000001150d0; mov eax, 0x10e; syscall; 
0x000000001151ce: jne short 0x00000000001151e0; mov eax, 0x4a; syscall; 
0x0000000011528e: jne short 0x00000000001152a0; mov eax, 0x4b; syscall; 
0x000000001155d9: jne short 0x0000000000115625; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x00000000115824: jne short 0x0000000000115837; add rsp, 0x58; ret; 
0x0000000011589d: jne short 0x00000000001158a4; add rsp, 0x28; ret; 
0x00000000115974: jne short 0x00000000001159ad; add rsp, 0x68; ret; 
0x00000000115f62: jne short 0x0000000000115f24; xor eax, eax; pop rbp; ret; 
0x00000000115fbd: jne short 0x0000000000115f90; ret; 
0x00000000116b98: jne short 0x0000000000116bd5; add rsp, 0x38; ret; 
0x00000000116c67: jne short 0x0000000000116ca5; add rsp, 0x38; ret; 
0x000000001173ce: jne short 0x00000000001173e0; mov eax, 0x1; ret; 
0x00000000117c2a: jne short 0x0000000000117c38; sub dword ptr [rip+0xd7c1d], 0x1; ret; 
0x000000001182c8: jne short 0x00000000001182d2; add rsp, 0xd8; ret; 
0x000000001183a1: jne short 0x00000000001183ab; add rsp, 0xd8; ret; 
0x00000000118689: jne short 0x00000000001186f0; sub dword ptr [rip+0xd71be], 0x1; add rsp, 0x8; ret; 
0x00000000118a0e: jne short 0x0000000000118a20; mov eax, 0x1a; syscall; 
0x000000001196e9: jne short 0x00000000001196f0; add rsp, 0x18; ret; 
0x00000000119aa4: jne short 0x0000000000119ad8; mov rdi, rbp; mov edx, r13d; mov esi, 0x1; call r12; 
0x00000000119b34: jne short 0x0000000000119b68; mov rdi, rbp; mov rdx, r13; mov esi, 0x1; call r12; 
0x00000000119bad: jne short 0x0000000000119bd6; mov rdi, [rbp]; call rbx; 
0x0000000011a6e6: jne short 0x000000000011a6f0; add rsp, 0x8; pop rbp; pop r12; ret; 
0x0000000011a71b: jne short 0x000000000011a770; mov rdi, rbp; xor edx, edx; mov esi, 0x1; call r12; 
0x0000000011a794: jne short 0x000000000011a7a0; pop rbp; pop r12; pop r13; ret; 
0x0000000011a7cc: jne short 0x000000000011a818; mov rdi, rbp; mov rdx, r13; mov esi, 0x1; call r12; 
0x0000000011a85e: jne short 0x000000000011a888; mov rdi, [rbp]; call rbx; 
0x0000000011a89f: jne short 0x000000000011a8f0; mov rdi, [r12]; call rbx; 
0x0000000011a900: jne short 0x000000000011a912; test r14, r14; jne 0x000000000011aad0; mov rdi, [r13]; call rbx; 
0x0000000011a930: jne short 0x000000000011a942; test r14, r14; jne 0x000000000011aa70; mov rdi, [r13]; call rbx; 
0x0000000011a8cf: jne short 0x000000000011a950; mov rdi, [r12]; call rbx; 
0x0000000011a960: jne short 0x000000000011a972; test r14, r14; jne 0x000000000011aa10; mov rdi, [r13]; call rbx; 
0x0000000011a98c: jne short 0x000000000011a99e; test r14, r14; jne short 0x000000000011a9b0; mov rdi, [r13]; call rbx; 
0x0000000011a991: jne short 0x000000000011a9b0; mov rdi, [r13]; call rbx; 
0x0000000011aae1: jne short 0x000000000011ab21; mov rdi, [r14]; call rbx; 
0x0000000011ab0d: jne short 0x000000000011ab78; mov rdi, [r14]; call rbx; 
0x0000000011ada5: jne short 0x000000000011ade2; mov rdi, [r15]; call rbx; 
0x0000000011adce: jne short 0x000000000011ae4d; mov rdi, [r15]; call rbx; 
0x0000000011b462: jne short 0x000000000011b4af; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011b491: jne short 0x000000000011b4d7; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011bd5d: jne short 0x000000000011bd67; add rsp, 0xd8; ret; 
0x0000000011be1d: jne short 0x000000000011be27; add rsp, 0xd8; ret; 
0x0000000011bffb: jne short 0x000000000011c005; add rsp, 0x418; ret; 
0x0000000011c05e: jne short 0x000000000011c099; pop rbx; pop rbp; pop r12; ret; 
0x0000000011c264: jne short 0x000000000011c26e; add rsp, 0xd8; ret; 
0x0000000011c4d1: jne short 0x000000000011c4db; add rsp, 0xd8; ret; 
0x0000000011c4e9: jne short 0x000000000011c518; mov eax, 0x88; syscall; 
0x0000000011cb4a: jne short 0x000000000011cb56; add rsp, 0x88; pop rbx; pop rbp; ret; 
0x0000000011cbda: jne short 0x000000000011cbe6; add rsp, 0x88; pop rbx; pop rbp; ret; 
0x0000000011d038: jne short 0x000000000011d028; mov rax, [rax+0x8]; ret; 
0x0000000011f0e9: jne short 0x000000000011f103; add rsp, 0x68; ret; 
0x0000000011f261: jne short 0x000000000011f280; mov r9d, 0x8; mov eax, 0x119; syscall; 
0x0000000011f451: jne short 0x000000000011f468; mov eax, 0xe8; syscall; 
0x0000000011f501: jne short 0x000000000011f518; mov eax, 0x114; syscall; 
0x0000000011f5b1: jne short 0x000000000011f5c8; mov eax, 0x116; syscall; 
0x0000000011f661: jne short 0x000000000011f678; mov eax, 0x113; syscall; 
0x0000000011f72e: jne short 0x000000000011f740; mov eax, 0x130; syscall; 
0x000000001200fe: jne short 0x0000000000120110; mov eax, 0x2b; syscall; 
0x000000001201ce: jne short 0x00000000001201e0; mov eax, 0x2a; syscall; 
0x00000000120331: jne short 0x0000000000120350; xor r9d, r9d; xor r8d, r8d; mov eax, 0x2d; syscall; 
0x000000001203f1: jne short 0x0000000000120408; mov eax, 0x2d; syscall; 
0x000000001204ae: jne short 0x00000000001204c0; mov eax, 0x2f; syscall; 
0x00000000120551: jne short 0x0000000000120570; xor r9d, r9d; xor r8d, r8d; mov eax, 0x2c; syscall; 
0x0000000012060e: jne short 0x0000000000120620; mov eax, 0x2e; syscall; 
0x000000001206b1: jne short 0x00000000001206c8; mov eax, 0x2c; syscall; 
0x00000000120aee: jne short 0x0000000000120af5; add rsp, 0x18; ret; 
0x00000000120b11: jne short 0x0000000000120b28; mov eax, 0x120; syscall; 
0x00000000120bc1: jne short 0x0000000000120bd8; mov eax, 0x12b; syscall; 
0x00000000120c71: jne short 0x0000000000120c88; mov eax, 0x133; syscall; 
0x00000000120ead: jne short 0x0000000000120ebf; add rsp, 0xa0; pop rbx; ret; 
0x00000000120ee1: jne short 0x0000000000120ef8; mov eax, 0x45; syscall; 
0x00000000120f91: jne short 0x0000000000120fa8; mov eax, 0x46; syscall; 
0x00000000121114: jne short 0x000000000012113a; mov eax, 0x42; syscall; 
0x00000000121133: jne short 0x000000000012117b; add rsp, 0x58; ret; 
0x000000001228e7: jne short 0x000000000012287e; or al, 0x0; mov eax, [rax+0x38]; ret; 
0x00000000123131: jne short 0x0000000000123138; ret; 
0x0000000012319a: jne short 0x00000000001231a0; ret; 
0x00000000123383: jne short 0x0000000000123390; ret; 
0x00000000123a81: jne short 0x0000000000123a88; ret; 
0x00000000123ade: jne short 0x0000000000123ae8; ret; 
0x00000000123cb3: jne short 0x0000000000123cc0; ret; 
0x000000001248c6: jne short 0x0000000000124900; sub dword ptr [rip+0xcb409], 0x1; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x0000000012499e: jne short 0x00000000001249b8; sub dword ptr [rip+0xcb331], 0x1; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x00000000125923: jne short 0x0000000000125960; sub dword ptr [rip+0xca3e0], 0x1; mov eax, r8d; add rsp, 0x8; ret; 
0x00000000126376: jne short 0x00000000001263b0; sub dword ptr [rip+0xc9ab1], 0x1; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x0000000012644e: jne short 0x0000000000126468; sub dword ptr [rip+0xc99d9], 0x1; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x0000000012795e: jne short 0x0000000000127968; pop rbx; pop rbp; pop r12; ret; 
0x00000000129b7f: jne short 0x0000000000129b89; add rsp, 0xd8; ret; 
0x0000000012b6b0: jne short 0x000000000012b6e0; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000012b8a8: jne short 0x000000000012b8b2; add rsp, 0xd8; ret; 
0x0000000012b946: jne short 0x000000000012b92e; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000012c917: jne short 0x000000000012c8a1; call rax; 
0x0000000012ce8d: jne short 0x000000000012ce80; mov rax, [rax+0x30]; ret; 
0x0000000012cf09: jne short 0x000000000012cf18; cmp qword ptr [rdi], 0x0; je short 0x000000000012cf20; ret; 
0x0000000012d0cb: jne short 0x000000000012d0ad; lea rdi, [rip-0x184]; call rax; 
0x0000000012dd1e: jne short 0x000000000012dcc8; mov rax, rdi; ret; 
0x0000000012de89: jne short 0x000000000012de98; add rsp, 0xd8; ret; 
0x0000000012df7f: jne short 0x000000000012df95; add rsp, 0xd8; ret; 
0x0000000012e099: jne short 0x000000000012e0a3; add rsp, 0xd8; ret; 
0x0000000012e161: jne short 0x000000000012e16b; add rsp, 0xd8; ret; 
0x0000000012edfe: jne short 0x000000000012eda9; mov rax, rdi; ret; 
0x0000000012ef9f: jne short 0x000000000012efb5; add rsp, 0xd8; ret; 
0x0000000012f0b9: jne short 0x000000000012f0c3; add rsp, 0xd8; ret; 
0x0000000012f181: jne short 0x000000000012f18b; add rsp, 0xd8; ret; 
0x0000000012f5c8: jne short 0x000000000012f5d5; add rsp, 0x28; ret; 
0x0000000012f628: jne short 0x000000000012f635; add rsp, 0x28; ret; 
0x0000000012f6f1: jne short 0x000000000012f6fb; add rsp, 0xd8; ret; 
0x0000000012f7d1: jne short 0x000000000012f7db; add rsp, 0xd8; ret; 
0x0000000012f8b1: jne short 0x000000000012f8bb; add rsp, 0xd8; ret; 
0x0000000012fc17: jne short 0x000000000012fc3a; call far fword ptr [rax+0x4c]; 
0x0000000013174c: jne short 0x0000000000131790; sub dword ptr [rip+0xbe893], 0x1; mov fs:[r8], r9d; add rsp, 0x18; ret; 
0x00000000131831: jne short 0x0000000000131850; sub dword ptr [rip+0xbe7ae], 0x1; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x0000000013239c: jne short 0x00000000001323e0; sub dword ptr [rip+0xbdd0b], 0x1; mov fs:[r8], r9d; add rsp, 0x18; ret; 
0x00000000132481: jne short 0x00000000001324a0; sub dword ptr [rip+0xbdc26], 0x1; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x000000001330cc: jne short 0x0000000000133110; sub dword ptr [rip+0xbd08b], 0x1; mov fs:[r8], r9d; add rsp, 0x18; ret; 
0x000000001331ae: jne short 0x00000000001331c8; sub dword ptr [rip+0xbcfa9], 0x1; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x0000000013452c: jne short 0x0000000000134570; sub dword ptr [rip+0xbbd93], 0x1; mov fs:[r8], r9d; add rsp, 0x18; ret; 
0x0000000013460e: jne short 0x0000000000134628; sub dword ptr [rip+0xbbcb1], 0x1; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x00000000134eb2: jne short 0x0000000000134e9e; out dx, al; jmp qword ptr [rsi+0x2e]; 
0x000000001365ff: jne short 0x0000000000136629; add rsp, 0x38; ret; 
0x0000000013669c: jne short 0x00000000001366a3; add rsp, 0x38; ret; 
0x00000000136709: jne short 0x0000000000136710; add rsp, 0x28; ret; 
0x00000000137b83: jne short 0x0000000000137b70; pop rbx; ret; 
0x00000000137c45: jne short 0x0000000000137cb0; sub dword ptr [rip+0xb87ea], 0x1; add rsp, 0x8; ret; 
0x00000000138686: jne short 0x00000000001386c0; sub dword ptr [rip+0xb7db1], 0x1; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x0000000013875e: jne short 0x0000000000138778; sub dword ptr [rip+0xb7cd9], 0x1; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x0000000013a67d: jne short 0x000000000013a6a7; add rsp, 0x28; pop rbx; pop rbp; ret; 
0x0000000013a86e: jne short 0x000000000013a860; mov fs:[rbx], r13d; mov eax, 0x3; mov edi, [rbp-0x60]; syscall; 
0x0000000013b97c: jne short 0x000000000013b950; mov [rsi], rdi; xor eax, eax; ret; 
0x0000000013c35d: jne short 0x000000000013c378; mov eax, r8d; ret; 
0x0000000013c722: jne short 0x000000000013c730; add rsp, 0x18; ret; 
0x0000000013c81d: jne short 0x000000000013c865; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000013c8bb: jne short 0x000000000013c8d4; add rsp, 0x20; pop rbp; ret; 
0x0000000013cccb: jne short 0x000000000013cd21; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000013e159: jne short 0x000000000013e175; add rsp, 0x20; pop rbx; ret; 
0x0000000013e1ae: jne short 0x000000000013e1b5; add rsp, 0x18; ret; 
0x0000000013e201: jne short 0x000000000013e208; add rsp, 0x28; ret; 
0x0000000013ea90: jne short 0x000000000013ea97; add rsp, 0x18; ret; 
0x0000000013f007: jne short 0x000000000013efed; mov eax, r10d; ret; 
0x00000000141030: jne short 0x0000000000141038; ret; 
0x00000000141074: jne short 0x0000000000141060; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000014115e: jne short 0x0000000000141168; pop rbx; pop rbp; pop r12; ret; 
0x00000000142316: jne short 0x0000000000142360; sub dword ptr [rip+0xae6f9], 0x1; pop rbp; ret; 
0x00000000142e9e: jne short 0x0000000000142ea8; ret; 
0x000000001448dd: jne short 0x00000000001448e6; add rsp, 0x10; pop r12; ret; 
0x000000001460e4: jne short 0x0000000000146068; ret; 
0x0000000014624b: jne short 0x0000000000146253; add rsp, 0x40; pop rbp; ret; 
0x00000000147144: jne short 0x0000000000147160; mov rax, [rbp+0x8]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x0000000014738e: jne short 0x0000000000147407; add rsp, 0x28; pop rbx; pop rbp; ret; 
0x000000001473f6: jne short 0x000000000014740c; mov rax, [rbp+0x8]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x000000001475ff: jne short 0x0000000000147635; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000001481d7: jne short 0x00000000001481e0; mov dword ptr [rsi], 0x0; ret; 
0x00000000149021: jne short 0x0000000000149063; add rsp, 0x10; pop rbx; ret; 
0x00000000149594: jne short 0x00000000001495c2; add rsp, 0x10; pop rbx; ret; 
0x00000000149632: jne short 0x0000000000149665; add rsp, 0x10; pop rbx; ret; 
0x0000000014a245: jne short 0x000000000014a257; add rsp, 0x40; pop rbx; ret; 
0x0000000014c58c: jne short 0x000000000014c5d0; sub dword ptr [rip+0xa4793], 0x1; mov fs:[r8], r9d; add rsp, 0x18; ret; 
0x0000000014c66e: jne short 0x000000000014c688; sub dword ptr [rip+0xa46b1], 0x1; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x0000000014dd2c: jne short 0x000000000014dd30; ret; 
0x0000000014e487: jne short 0x000000000014e4ea; add rsp, 0x28; pop rbx; pop rbp; ret; 
0x00000000151643: jne short 0x0000000000151661; add rsp, 0x10; pop rbx; ret; 
0x00000000151995: jne short 0x0000000000151a0a; add rsp, 0x10; pop r12; ret; 
0x00000000151ac5: jne short 0x0000000000151b36; sub rsp, 0xffffffffffffff80; mov eax, r8d; pop rbp; ret; 
0x00000000151c0c: jne short 0x0000000000151c7a; add rsp, 0x30; pop rbx; ret; 
0x00000000151d4c: jne short 0x0000000000151dba; add rsp, 0x30; pop rbx; ret; 
0x000000001521d3: jne short 0x00000000001521e3; add rsp, 0x38; pop rbx; pop rbp; ret; 
0x000000001522a3: jne short 0x0000000000152316; add rsp, 0x10; mov eax, r8d; pop r12; ret; 
0x000000001523e2: jne short 0x000000000015245a; add rsp, 0x28; pop rbx; pop r12; ret; 
0x00000000152f3a: jne short 0x0000000000152f44; mov rdi, rbp; call qword ptr [rax+0x10]; 
0x00000000153877: jne short 0x0000000000153880; pop rbx; pop rbp; pop r12; ret; 
0x00000000153905: jne short 0x000000000015390c; add rsp, 0x78; ret; 
0x0000000015397b: jne short 0x0000000000153982; add rsp, 0x78; ret; 
0x000000001539eb: jne short 0x00000000001539f2; add rsp, 0x78; ret; 
0x00000000153a5b: jne short 0x0000000000153a62; add rsp, 0x78; ret; 
0x00000000153abc: jne short 0x0000000000153ac3; add rsp, 0x78; ret; 
0x00000000153b20: jne short 0x0000000000153b27; add rsp, 0x78; ret; 
0x00000000153b8b: jne short 0x0000000000153b92; add rsp, 0x78; ret; 
0x00000000153c0e: jne short 0x0000000000153c15; add rsp, 0x78; ret; 
0x00000000154143: jne short 0x0000000000154168; add rsp, 0x28; ret; 
0x0000000015442c: jne short 0x0000000000154430; ret; 
0x00000000155bb6: jne short 0x0000000000155bbd; add rsp, 0x48; ret; 
0x00000000155c21: jne short 0x0000000000155c63; add rsp, 0x10; pop rbx; ret; 
0x00000000155cb1: jne short 0x0000000000155cf2; add rsp, 0x10; pop rbx; ret; 
0x00000000155d23: jne short 0x0000000000155d15; mov rax, [rdi+0x8]; jmp qword ptr [rax]; 
0x00000000155dba: jne short 0x0000000000155d73; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x00000000155d81: jne short 0x0000000000155dc5; add rsp, 0x10; pop rbp; ret; 
0x000000001561d1: jne short 0x0000000000156214; add rsp, 0x10; pop rbx; ret; 
0x00000000156261: jne short 0x00000000001562a3; add rsp, 0x10; pop rbx; ret; 
0x000000001562f0: jne short 0x0000000000156340; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x00000000156390: jne short 0x00000000001563e0; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x00000000156431: jne short 0x0000000000156479; add rsp, 0x10; pop rbx; ret; 
0x000000001564c1: jne short 0x0000000000156503; add rsp, 0x10; pop rbx; ret; 
0x00000000156aab: jne short 0x0000000000156a80; mov rax, [rbp+0x8]; mov rsi, rsp; mov rdi, rbp; call qword ptr [rax]; 
0x00000000156c0b: jne short 0x0000000000156be0; mov rax, [rdi+0x8]; mov rsi, rsp; call qword ptr [rax]; 
0x000000001571b1: jne short 0x00000000001571f5; add rsp, 0x10; pop rbx; ret; 
0x00000000157241: jne short 0x0000000000157285; add rsp, 0x10; pop rbx; ret; 
0x000000001572d1: jne short 0x0000000000157315; add rsp, 0x10; pop rbx; ret; 
0x00000000157361: jne short 0x00000000001573a5; add rsp, 0x10; pop rbx; ret; 
0x00000000157a39: jne short 0x0000000000157a44; add rsp, 0x90; pop rbx; ret; 
0x00000000157aad: jne short 0x0000000000157ab7; movzx eax, al; add rsp, 0x18; ret; 
0x00000000157b0e: jne short 0x0000000000157b18; movzx eax, al; add rsp, 0x18; ret; 
0x00000000157b7a: jne short 0x0000000000157b82; add rsp, 0x10; pop rbx; ret; 
0x00000000157bed: jne short 0x0000000000157bf5; add rsp, 0x10; pop rbx; ret; 
0x00000000157c56: jne short 0x0000000000157c68; mov r8d, 0x1; mov eax, r8d; ret; 
0x00000000157ca6: jne short 0x0000000000157cb8; mov r8d, 0x1; mov eax, r8d; ret; 
0x0000000015c4ce: jne short 0x000000000015c4ef; add rsp, 0x520; mov rax, r12; pop r12; ret; 
0x0000000015c9e2: jne short 0x000000000015ca14; add rsp, 0x18; ret; 
0x0000000015ca4f: jne short 0x000000000015ca80; sub dword ptr [rip+0x94c00], 0x1; add rsp, 0x8; ret; 
0x0000000015cb95: jne short 0x000000000015cbd0; sub dword ptr [rip+0x94aba], 0x1; mov rax, r8; pop rbp; ret; 
0x0000000015cc2f: jne short 0x000000000015cc60; sub dword ptr [rip+0x94a20], 0x1; add rsp, 0x8; ret; 
0x0000000015ccd9: jne short 0x000000000015cd0c; add rsp, 0x10; pop rbp; ret; 
0x0000000015cd69: jne short 0x000000000015cd9c; add rsp, 0x10; pop rbp; ret; 
0x0000000015d0e0: jne short 0x000000000015d115; add rsp, 0x190; mov rax, r8; pop rbp; ret; 
0x0000000015e848: jne short 0x000000000015e85f; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000015f934: jne short 0x000000000015f96e; add rsp, 0x58; ret; 
0x0000000015fa2b: jne short 0x000000000015fa74; add rsp, 0x68; ret; 
0x0000000015fbc4: jne short 0x000000000015fc14; add rsp, 0x68; ret; 
0x0000000015fc8d: jne short 0x000000000015fccc; add rsp, 0x38; ret; 
0x0000000016086c: jne short 0x00000000001608bf; add rsp, 0x110; mov eax, r12d; pop r12; ret; 
0x00000000160a12: jne short 0x0000000000160a20; pop rbx; ret; 
0x00000000160a42: jne short 0x0000000000160a50; pop rbx; ret; 
0x00000000160b95: jne short 0x0000000000160bac; mov eax, 0x27; syscall; 
0x00000000160d20: jne short 0x0000000000160d27; add rsp, 0x28; ret; 
0x000000001632ab: jne short 0x00000000001632b3; add rsp, 0x10; pop rbx; ret; 
0x00000000163331: jne short 0x0000000000163339; add rsp, 0x10; pop rbx; ret; 
0x000000001661d9: jne short 0x00000000001661e0; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166a07: jne short 0x0000000000166a76; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169bc7: jne short 0x0000000000169c06; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000017dd9c: jne short 0x000000000017ddd0; mov rax, [rcx]; mov [rdx], rax; mov rax, rdi; ret; 
0x00000000183924: jne short 0x0000000000183990; test esi, esi; je short 0x0000000000183908; xor eax, eax; ret; 
0x00000000183e1d: jne short 0x0000000000183e00; sub eax, ecx; vzeroupper; ret; 
0x000000001842f2: jne short 0x00000000001842d0; sub eax, ecx; vzeroupper; ret; 
0x00000000184623: jne short 0x0000000000184640; xor eax, eax; vzeroupper; ret; 
0x00000000184cda: jne short 0x0000000000184ce0; vzeroupper; ret; 
0x00000000188963: jne short 0x0000000000188990; mov rax, r8; vzeroupper; ret; 
0x0000000018bb28: jne short 0x000000000018bb0b; vzeroupper; ret; 
0x0000000018bc8a: jne short 0x000000000018bc90; vzeroupper; ret; 
0x0000000018bcb6: jne short 0x000000000018bc9c; ret; 
0x0000000018c0d3: jne short 0x000000000018c0f0; xor eax, eax; vzeroupper; ret; 
0x0000000018c22e: jne short 0x000000000018c209; vzeroupper; ret; 
0x0000000018c342: jne short 0x000000000018c37f; ret far; 
0x0000000018c472: jne short 0x000000000018c4af; ret far; 
0x0000000018c54b: jne short 0x000000000018c530; sub eax, ecx; vzeroupper; ret; 
0x0000000018c6a9: jne short 0x000000000018c679; vzeroupper; ret; 
0x0000000018c7bf: jne short 0x000000000018c7fc; ret far; 
0x0000000018c922: jne short 0x000000000018c95f; ret far; 
0x0000000018ca20: jne short 0x000000000018ca00; sub eax, ecx; vzeroupper; ret; 
0x0000000018d303: jne short 0x000000000018d330; mov rax, r8; shr rax, 0x2; vzeroupper; ret; 
0x0000000018ea3d: jne short 0x000000000018ea63; xor eax, eax; ret; 
0x0000000018ea7c: jne short 0x000000000018ea90; and eax, 0xffff; and ecx, 0xffff; sub eax, ecx; ret; 
0x0000000018f87d: jne short 0x000000000018f8a3; xor eax, eax; ret; 
0x0000000018f8b1: jne short 0x000000000018f8b6; xor eax, eax; ret; 
0x000000001909eb: jne short 0x00000000001909c6; vzeroupper; ret; 
0x00000000190b55: jne short 0x0000000000190ae0; lea rax, [rdi+0x3]; ret; 
0x00000000190b26: jne short 0x0000000000190ae0; lea rax, [rdi+0x7]; ret; 
0x00000000190ad6: jne short 0x0000000000190ae4; nop [rax+rax]; xor rax, rax; ret; 
0x00000000191f84: jne short 0x0000000000192000; movzx eax, byte ptr [rdi-0x9]; movzx edx, byte ptr [rsi-0x9]; sub eax, edx; ret; 
0x000000001924d1: jne short 0x00000000001924d5; cmp eax, ecx; sbb eax, eax; sbb eax, 0xffffffff; ret; 
0x000000001924b9: jne short 0x00000000001924d5; xor eax, eax; ret; 
0x00000000192ae6: jne short 0x0000000000192af0; xor eax, eax; ret; 
0x00000000196f85: jne short 0x0000000000197002; add rsp, 0x30; mov rax, r12; pop r12; ret; 
0x00000000197295: jne short 0x000000000019727d; pop rbx; ret; 
0x0000000019850e: jne short 0x00000000001984f0; pop rbx; pop rbp; pop r12; ret; 
0x000000001985e6: jne short 0x00000000001985d0; pop rbx; pop rbp; pop r12; ret; 
0x00000000198639: jne short 0x0000000000198610; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000019885b: jne short 0x0000000000198845; pop rbx; ret; 
0x000000001988fd: jne short 0x00000000001988e0; pop rbx; ret; 
0x00000000198965: jne short 0x0000000000198990; sub dword ptr [rip+0x55e92], 0x1; pop rbx; ret; 
0x00000000198a8f: jne short 0x0000000000198a80; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000198c76: jne short 0x0000000000198cc0; sub dword ptr [rip+0x57899], 0x1; pop rbp; ret; 
0x00000000046513: jno short 0x000000000004658c; sbb al, [rax]; syscall; 
0x0000000008328e: jno short 0x0000000000083289; stc; jmp qword ptr [rsi+0x2e]; 
0x000000000860f1: jno short 0x00000000000860f7; mov [rdx+0x20], rsi; mov [rcx], eax; ret; 
0x00000000086298: jno short 0x000000000008629e; mov [rdx+0x20], rsi; mov [rcx], eax; ret; 
0x0000000009f113: jno short 0x000000000009f118; lea rax, [rip+0x1a893]; lea rdx, [rip+0x12e7c]; cmovne rax, rdx; ret; 
0x0000000009f1c3: jno short 0x000000000009f1c8; lea rax, [rip+0x9db3]; lea rdx, [rip+0xc41bc]; cmovne rax, rdx; ret; 
0x0000000009f243: jno short 0x000000000009f248; lea rax, [rip+0x176f3]; lea rdx, [rip+0xd5dbc]; cmovne rax, rdx; ret; 
0x0000000009f723: jno short 0x000000000009f728; lea rax, [rip+0x9733]; lea rdx, [rip+0x1448c]; cmovne rax, rdx; ret; 
0x0000000009f7f3: jno short 0x000000000009f7f8; lea rax, [rip+0x9723]; lea rdx, [rip+0xd6fbc]; cmovne rax, rdx; ret; 
0x000000000a0763: jno short 0x00000000000a0768; lea rax, [rip+0x162c3]; lea rdx, [rip+0xd8bcc]; cmovne rax, rdx; ret; 
0x000000000a07c3: jno short 0x00000000000a07c8; lea rax, [rip+0x86e3]; lea rdx, [rip+0xda37c]; cmovne rax, rdx; ret; 
0x000000000bbd68: jno short 0x00000000000bbd5a; movups [rcx-0x20], xmm7; movups [rcx-0x30], xmm8; movups [r11], xmm4; ret; 
0x000000000bbe56: jno short 0x00000000000bbe48; movups [rcx-0x20], xmm7; movups [rcx-0x30], xmm8; movups [r11], xmm4; ret; 
0x000000000bc8a3: jno short 0x00000000000bc8a8; lea rax, [rip+0x12933]; cmovne rax, rdx; ret; 
0x000000000d015d: jno short 0x00000000000d01de; and [rax-0x73], cl; add eax, 0x11ef39; add rsp, 0x8; ret; 
0x000000000fa105: jno short 0x00000000000fa112; add [rax+0x63], cl; add al, 0x86; add rax, rsi; notrack jmp rax; 
0x0000000010d4fb: jno short 0x000000000010d4e6; or eax, 0x64d8f700; mov [rdx], eax; mov eax, 0xffffffff; ret; 
0x000000001149a3: jno short 0x00000000001149a5; add [rax], al; syscall; 
0x0000000011868e: jno short 0x000000000011869d; add [rcx], al; add rsp, 0x8; ret; 
0x00000000122003: jno short 0x0000000000121fdf; or al, 0x0; mov rax, [rax+0x18]; add dword ptr [rax], 0x1; ret; 
0x0000000012dec7: jno short 0x000000000012debe; call qword ptr [rax-0x18]; 
0x000000001377eb: jno short 0x000000000013786c; add al, [rax]; mov rax, [rsp+0x8]; mov rdi, rbx; call rax; 
0x00000000143cfd: jno short 0x0000000000143d0e; mov cl, 0x15; ret far; 
0x000000001522a4: jno short 0x00000000001522ee; add esp, 0x10; mov eax, r8d; pop r12; ret; 
0x00000000166617: jno short 0x000000000016661f; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166618: jno short 0x000000000016661f; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001688cb: jno short 0x000000000016891d; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000018e2ee: jno short 0x000000000018e2f7; add [rax], al; xor eax, eax; ret; 
0x0000000018f994: jno short 0x000000000018f994; vmovups [r9-0x40], zmm7; ret; 
0x0000000018fbce: jno short 0x000000000018fbce; vmovups [r9-0x40], zmm15; ret; 
0x0000000018fd35: jno short 0x000000000018fd3d; vmovups [r9+0x1c0], zmm15; ret; 
0x0000000018fe8c: jno short 0x000000000018ff0a; adc [rdi-0x6], rbp; vmovups [rdi-0x1c0], zmm14; vmovups [rdi-0x200], zmm15; ret; 
0x0000000018fe93: jno short 0x000000000018ff11; adc [rdi-0x7], rsi; vmovups [rdi-0x200], zmm15; ret; 
0x0000000018fe9a: jno short 0x000000000018ff18; adc [rdi-0x8], rdi; ret; 
0x00000000043e08: jnp 0xffffffffbad6c325; add [rax], eax; add [rax], al; cmove eax, edx; ret; 
0x00000000034268: jnp short 0x0000000000034285; add [rax+0x63], cl; jmp qword ptr [rax+rcx*2-0x75]; 
0x00000000034288: jnp short 0x00000000000342a5; add [rax+0x63], cl; jmp qword ptr [rax+rcx*2-0x75]; 
0x000000000342b8: jnp short 0x00000000000342d5; add [rax+0x63], cl; jmp qword ptr [rax+rcx*2-0x75]; 
0x00000000035e78: jnp short 0x0000000000035e95; add [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x00000000035f56: jnp short 0x0000000000035f73; add [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x0000000004c401: jnp short 0x000000000004c401; jmp qword ptr [rsi+0x66]; 
0x0000000009e5a9: jnp short 0x000000000009e5f3; movsxd rsi, esi; movups [rbx+0x38], xmm0; mov [rbx], rsi; call rcx; 
0x0000000009e823: jnp short 0x000000000009e86d; mov rsi, r14; call rax; 
0x0000000009e8c2: jnp short 0x000000000009e90c; call rax; 
0x000000000b7628: jnp short 0x00000000000b7639; add [rbx+0x63], cl; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b7657: jnp short 0x00000000000b7668; add [rbx+0x63], cl; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b7680: jnp short 0x00000000000b7691; add [rbx+0x63], cl; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b76a0: jnp short 0x00000000000b76b1; add [rbx+0x63], cl; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b76c8: jnp short 0x00000000000b76da; add [rbx+0x63], cl; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000ba045: jnp short 0x00000000000ba09b; str [rcx+0x63]; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000e5112: jnp short 0x00000000000e5165; add [rax], al; jne short 0x00000000000e5120; mov eax, 0x40; ret; 
0x0000000010ff7c: jnp short 0x000000000010ff96; lea rcx, [rbx+0x28]; mov rsi, r14; mov edx, [rdx+rax]; call qword ptr [rbx+0x40]; 
0x0000000011f225: jnp short 0x000000000011f227; add [rax], al; syscall; 
0x00000000127b08: jnp short 0x0000000000127b32; add [rax], bh; cmovns rax, [rbx+0x28]; pop rbx; ret; 
0x0000000012c585: jnp short 0x000000000012c56f; mov dword ptr [rbp-0x80], 0x0; movups [rbp-0x78], xmm7; call rcx; 
0x0000000012ccf1: jnp short 0x000000000012cd6b; mov [rbp-0x80], edx; mov rdx, r13; movups [rbp-0x78], xmm7; call rax; 
0x00000000137b7e: jnp short 0x0000000000137bc8; test rdi, rdi; jne short 0x0000000000137b70; pop rbx; ret; 
0x000000001388db: jnp short 0x00000000001388e8; add [rdi], cl; add eax, 0xffff75e9; jmp qword ptr [rsi+0x2e]; 
0x00000000196f86: jnp short 0x0000000000196fd0; add esp, 0x30; mov rax, r12; pop r12; ret; 
0x0000000010c306: jns 0x00000000439a0b37; or [rcx], dh; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x5d], bl; ret; 
0x000000000bafe6: jns 0xffffffffed3bb343; mov [rdi+0x7], ch; ret; 
0x000000000bb048: jns 0xffffffffed3bb7a5; mov [rdi+0xb], ch; ret; 
0x000000000bb068: jns 0xffffffffed3bb8c5; mov [rdi+0xc], ch; ret; 
0x0000000002c7a5: jns short 0x000000000002c7bf; add al, ch; adc edi, [rax]; add [rcx-0x77], cl; ret far; 
0x000000000344a8: jns short 0x00000000000344c5; add [rax+0x63], cl; jmp qword ptr [rax+rcx*2-0x75]; 
0x00000000035f84: jns short 0x0000000000035fa1; add [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x0000000003621b: jns short 0x0000000000036238; add [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x000000000479f9: jns short 0x00000000000479b9; xor eax, eax; ret; 
0x0000000004c6ac: jns short 0x000000000004c6ac; call qword ptr [rax+0x56415741]; 
0x0000000005b549: jns short 0x000000000005b511; or [r8], r8b; mov [rdi], rax; mov rax, rdi; ret; 
0x0000000007a9d4: jns short 0x000000000007a9d0; jmp qword ptr [rsi+0xf]; 
0x00000000092b53: jns short 0x0000000000092b56; add [rax], al; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rax+0x18]; 
0x000000000951a3: jns short 0x00000000000951ba; add [rcx+0x1], al; adc eax, [rbp+0x1]; sbb [r8+0x39], cl; ret; 
0x00000000095233: jns short 0x00000000000952a5; adc eax, 0x100; add [rax-0x77], cl; add eax, 0x15704e; ret; 
0x000000000bbd6c: jns short 0x00000000000bbd4e; movups [rcx-0x30], xmm8; movups [r11], xmm4; ret; 
0x000000000bbe5a: jns short 0x00000000000bbe3c; movups [rcx-0x30], xmm8; movups [r11], xmm4; ret; 
0x000000000bc883: jns short 0x00000000000bc8a0; add [rax], eax; cmove rax, rdx; ret; 
0x000000000bcb23: jns short 0x00000000000bcb4d; add [rax], eax; cmove rax, rdx; ret; 
0x000000000e43a5: jns short 0x00000000000e43a7; add [rax], al; syscall; 
0x000000000e4478: jns short 0x00000000000e448a; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x000000000e44a8: jns short 0x00000000000e44ba; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x000000000e44d8: jns short 0x00000000000e44ea; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x000000001129f3: jns short 0x0000000000112989; or eax, 0x64d8f700; mov [rdx], eax; mov eax, 0xffffffff; ret; 
0x000000001130f3: jns short 0x0000000000113082; or eax, 0x64d8f700; mov [rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000113df3: jns short 0x0000000000113d75; or eax, 0x64d8f700; mov [rdx], eax; mov eax, 0xffffffff; ret; 
0x000000001141f3: jns short 0x0000000000114271; or eax, 0x64d8f700; mov [rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000114474: jns short 0x0000000000114483; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x2]; mov rax, 0xffffffffffffffff; ret; 
0x00000000114514: jns short 0x0000000000114523; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x2]; mov rax, 0xffffffffffffffff; ret; 
0x000000001156f9: jns short 0x0000000000115700; mov byte ptr [r12], 0x0; mov rax, r12; pop r12; ret; 
0x0000000012cbc3: jns short 0x000000000012cbf5; mov [rbp-0x80], edx; mov rdx, r13; movups [rbp-0x78], xmm7; call rax; 
0x0000000012efdf: jns short 0x000000000012efd6; jmp qword ptr [rsi+0xf]; 
0x000000001511a6: jns short 0x00000000001511f1; mov eax, [rdi+0x60]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x00000000155e2e: jns short 0x0000000000155e78; mov eax, [rbp+0x8]; lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax]; 
0x00000000155f1e: jns short 0x0000000000155f68; mov eax, [rbp+0x8]; lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax]; 
0x0000000015600e: jns short 0x0000000000156058; mov eax, [rbp+0x8]; lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax]; 
0x000000001560fe: jns short 0x0000000000156148; mov eax, [rbp+0x8]; lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax]; 
0x0000000015de0c: jns short 0x000000000015de10; ret; 
0x0000000018b7f5: jns short 0x000000000018b7b7; vmovdqu [rcx-0x60], ymm8; vmovdqu [r11], ymm4; vzeroupper; ret; 
0x0000000018b928: jns short 0x000000000018b8ea; vmovdqu [rcx-0x60], ymm8; vmovdqu [r11], ymm4; vzeroupper; ret; 
0x0000000018f99b: jns short 0x000000000018f99c; ret; 
0x0000000018fbd5: jns short 0x000000000018fbd6; ret; 
0x0000000018fd3c: jns short 0x000000000018fd45; ret; 
0x000000001905ed: jns short 0x00000000001905ed; vmovdqu64 [rcx-0xc0], zmm8; vmovdqu64 [r11], zmm4; vzeroupper; ret; 
0x00000000190778: jns short 0x0000000000190778; vmovdqu64 [rcx-0xc0], zmm8; vmovdqu64 [r11], zmm4; vzeroupper; ret; 
0x00000000042068: jo 0x0000000034e4e1b6; and rcx, rdx; or rcx, rax; movq xmm0, rcx; ret; 
0x00000000029e35: jo short 0x0000000000029e46; mov dh, 0x48; dec dword ptr [rax+0x3948074a]; ret; 
0x0000000002ab91: jo short 0x000000000002aba2; mov dh, 0x48; dec dword ptr [rax+0x3948074a]; ret; 
0x0000000002d3b9: jo short 0x000000000002d3ca; mov dh, 0x48; dec dword ptr [rax+0x3948074a]; ret; 
0x0000000002eb11: jo short 0x000000000002eb22; mov dh, 0x48; dec dword ptr [rax+0x3948074a]; ret; 
0x00000000033a0c: jo short 0x00000000000339ad; sbb eax, [rax]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000034486: jo short 0x00000000000344d1; movsxd edi, edi; mov eax, [rax+rdi*4]; ret; 
0x000000000422e9: jo short 0x0000000000042301; add [rdi], cl; push rsp; ret; 
0x0000000004514b: jo short 0x000000000004515b; mov rsi, [rsp+0x10]; mov rdx, rbp; mov rdi, r12; call rbx; 
0x00000000046906: jo short 0x0000000000046928; mov edi, ebp; ror rdx, 0x11; xor rdx, fs:[0x30]; call rdx; 
0x00000000087f8e: jo short 0x0000000000087fd0; mov [rax], rdx; xor eax, eax; ret; 
0x000000000951c7: jo short 0x00000000000951de; add [rcx-0x77], al; imul esp, [rbx*2+0x10438941], 0x41; mov dword ptr [rbx+0x14], 0x0; ret; 
0x000000000b813d: jo short 0x00000000000b814e; add [rbx+0x63], cl; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000bd105: jo short 0x00000000000bd162; pop rbp; pop r12; ret; 
0x000000000bd5fc: jo short 0x00000000000bd659; pop rbp; pop r12; ret; 
0x000000000d0959: jo short 0x00000000000d09b8; mov [rsp+0xd0], r8; lea rdi, [rsp+0xd0]; mov rsi, r13; call rbp; 
0x000000000d2c5c: jo short 0x00000000000d2c31; cld; dec dword ptr [rax-0x7b]; ror byte ptr [rdi], 0x84; ret far; 
0x000000000e4465: jo short 0x00000000000e4467; add [rax], al; syscall; 
0x000000000ee4bb: jo short 0x00000000000ee4ee; shl dh, 0x82; enter 0x0, 0x0; jne 0x00000000000ee3ed; ret; 
0x000000000f9218: jo short 0x00000000000f9204; ret far; 
0x0000000010c778: jo short 0x000000000010c789; adc [rdi+0x78], edi; ret; 
0x0000000010d10d: jo short 0x000000000010d11e; adc [rdi+0xf8], edi; ret; 
0x0000000011362c: jo short 0x00000000001135f2; add [rax], eax; endbr64; xor eax, eax; syscall; 
0x00000000114e27: jo short 0x0000000000114e37; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x00000000120ffc: jo short 0x0000000000121034; idiv edi; mov rax, [rsp+0x8]; add rsp, 0x38; ret; 
0x00000000137c6c: jo short 0x0000000000137bf5; or eax, [rax]; call rax; 
0x00000000144fcc: jo short 0x0000000000144fb6; mov fs, [rdi-0xceffff]; call qword ptr [rsp+0x70]; 
0x00000000145180: jo short 0x000000000014516a; fisub st, dword ptr [rbp-0xceffff]; call qword ptr [rsp+0x70]; 
0x0000000014ed60: jo short 0x000000000014eda2; mov edx, [rsi+0x1c8]; add rsi, 0x38; jmp qword ptr [rax+0x18]; 
0x0000000014ff67: jo short 0x000000000014fef3; imul ecx, [rax+0xf], 0xffffffcd; call qword ptr [rax+0x18]; 
0x0000000014ff7b: jo short 0x000000000014ffc6; mov esi, [rsp+0x18]; mov rdi, r12; call qword ptr [rax+0x8]; 
0x00000000150475: jo short 0x00000000001504c0; mov edi, ebp; call qword ptr [rax+0x20]; 
0x000000001579ff: jo short 0x0000000000157a67; pxor mm0, mm0; movaps [rsp+0x60], xmm1; movups [rsp+0x18], xmm0; call r8; 
0x000000001666b6: jo short 0x00000000001666bd; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166768: jo short 0x000000000016676f; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b4cc: jo short 0x000000000016b4f6; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016dfcc: jo short 0x000000000016dfd0; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000198c11: jo short 0x0000000000198c0f; call far fword ptr [rbp+0x48]; 
0x000000000328dc: jp short 0x0000000000032916; jbe short 0x00000000000328f7; mov rax, [rdx+rdi*8+0x40]; ret; 
0x00000000041e54: jp short 0x0000000000041e60; jne short 0x0000000000041e60; fadd st, st(0); add rsp, 0x8; ret; 
0x0000000004221a: jp short 0x0000000000042228; jne short 0x0000000000042228; addsd xmm0, xmm0; ret; 
0x00000000042546: jp short 0x0000000000042550; jne short 0x0000000000042550; addss xmm0, xmm0; ret; 
0x0000000007a3bd: jp short 0x000000000007a407; movsxd ebx, ebx; mov rdx, rbx; call qword ptr [r13+0x38]; 
0x00000000084468: jp short 0x0000000000084480; add [rax-0x77], cl; ret; 
0x00000000084c35: jp short 0x0000000000084c83; mov edx, esp; mov rsi, rbp; mov rdi, rbx; call qword ptr [r13+0x58]; 
0x0000000008baee: jp short 0x000000000008bae9; jmp qword ptr [rsi+0x2e]; 
0x0000000008baed: jp short 0x000000000008bae9; jmp qword ptr [rsi+0x2e]; 
0x0000000008c521: jp short 0x000000000008c51d; jmp qword ptr [rsi+0x66]; 
0x000000000923b2: jp short 0x00000000000923b3; clc; jmp qword ptr [rsi+0xf]; 
0x00000000094a82: jp short 0x0000000000094a21; adc eax, 0x5b050f00; ret; 
0x0000000009789e: jp short 0x00000000000978a1; add [rax], al; mov rax, [rip+0x154517]; call qword ptr [rax]; 
0x000000000e43b8: jp short 0x00000000000e43ca; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x000000000e43e8: jp short 0x00000000000e43fa; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x000000000e4448: jp short 0x00000000000e445a; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x000000001143e8: jp short 0x00000000001143f7; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x00000000117d84: jp short 0x0000000000117d93; add [rax-0x77], cl; ret; 
0x0000000011b01c: jp short 0x000000000011b024; add [rax], al; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011f1f5: jp short 0x000000000011f1f7; add [rax], al; syscall; 
0x0000000012bde5: jp short 0x000000000012be37; mov rsi, rdx; call rax; 
0x0000000013464a: jp short 0x0000000000134608; or eax, [rax]; syscall; 
0x000000001491a3: jp short 0x00000000001491fd; mov [rdx+0x68], rcx; ret; 
0x0000000014c6aa: jp short 0x000000000014c6f2; or al, [rax]; syscall; 
0x0000000014fab2: jp short 0x000000000014fad2; jmp qword ptr [rsi+0x2e]; 
0x0000000015eb22: jp short 0x000000000015eb33; std; jmp qword ptr [rsi+0x2e]; 
0x00000000165e18: jp short 0x0000000000165e1f; add [rdi+0x63], cl; or al, 0x8b; lea r9, [r11+r9]; notrack jmp r9; 
0x00000000165e79: jp short 0x0000000000165e80; add [rdi+0x63], cl; or al, 0x8b; lea r9, [r11+r9]; notrack jmp r9; 
0x0000000018a492: jp short 0x000000000018a495; add [rax], al; vzeroupper; ret; 
0x0000000002c769: jrcxz 0x000000000002c794; ret; 
0x00000000030c4c: jrcxz 0x0000000000030c98; mov eax, [rax]; test rax, rax; je short 0x0000000000030c58; call rax; 
0x00000000035a50: jrcxz 0x0000000000035a51; inc dword ptr [rax-0x76b7bcc8]; ret; 
0x0000000005ea54: jrcxz 0x000000000005ea9a; mov eax, eax; ret; 
0x00000000078d47: jrcxz 0x0000000000078d48; jmp qword ptr [rsi+0xf]; 
0x00000000078d64: jrcxz 0x0000000000078d65; jmp qword ptr [rsi+0xf]; 
0x0000000007ea94: jrcxz 0x000000000007ea7f; ret; 
0x0000000007f273: jrcxz 0x000000000007f274; jmp qword ptr [rsi+0x2e]; 
0x00000000094637: jrcxz 0x00000000000945f4; cmp r11d, 0xa; je short 0x0000000000094640; ret; 
0x0000000009f384: jrcxz 0x000000000009f309; dec byte ptr [rcx]; mov edx, 0xffffffff; cmovbe eax, edx; ret; 
0x0000000009fb29: jrcxz 0x000000000009fae9; add [rax], eax; cmovne rax, rdx; ret; 
0x000000000a07c9: jrcxz 0x00000000000a0751; add [rax], al; lea rdx, [rip+0xda37c]; cmovne rax, rdx; ret; 
0x000000000a20ec: jrcxz 0x00000000000a2149; mov qword ptr [rbp], 0x0; pop rbp; pop r12; ret; 
0x000000000dd14f: jrcxz 0x00000000000dd151; add [rax], al; syscall; 
0x000000000dd846: jrcxz 0x00000000000dd8bd; out 0x5b, eax; pop rbp; pop r12; ret; 
0x000000000e30e4: jrcxz 0x00000000000e30f6; add [rcx+rcx*4-0x31], cl; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000ee490: jrcxz 0x00000000000ee49a; je short 0x00000000000ee427; pop rbx; ret; 
0x00000000106b64: jrcxz 0x0000000000106bae; add esp, 0x8; pop rbx; pop rbp; ret; 
0x0000000010da78: jrcxz 0x000000000010da87; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x0000000011c725: jrcxz 0x000000000011c727; loop 0x000000000011c728; dec dword ptr [rax-0x7f]; ret; 
0x00000000139e49: jrcxz 0x0000000000139dcf; out dx, al; dec dword ptr [rax-0x7d]; ret; 
0x00000000145bf4: jrcxz 0x0000000000145bf5; jmp qword ptr [rsi+0xf]; 
0x00000000145c84: jrcxz 0x0000000000145c85; jmp qword ptr [rsi+0xf]; 
0x00000000150bd4: jrcxz 0x0000000000150bbe; test al, 0xfe; jmp qword ptr [rsi+0xf]; 
0x00000000161639: jrcxz 0x0000000000161648; in al, dx; dec dword ptr [rax-0x77]; ret; 
0x00000000167fe7: jrcxz 0x0000000000168035; mov [rdi-0x15], ebx; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000016802f: jrcxz 0x000000000016807d; mov [rdi-0x15], ebx; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000016806d: jrcxz 0x00000000001680bb; mov [rdi-0x15], ebx; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x000000001680a9: jrcxz 0x00000000001680f7; mov [rdi-0x15], ebx; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x000000001680e3: jrcxz 0x0000000000168131; mov [rdi-0x15], ebx; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000016811b: jrcxz 0x0000000000168169; mov [rdi-0x15], ebx; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000168143: jrcxz 0x0000000000168191; mov [rdi-0x15], ebx; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000016a9c7: jrcxz 0x000000000016aa15; mov [rdi-0x15], ebx; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000016aa0f: jrcxz 0x000000000016aa5d; mov [rdi-0x15], ebx; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000016aa4d: jrcxz 0x000000000016aa9b; mov [rdi-0x15], ebx; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000016aa89: jrcxz 0x000000000016aad7; mov [rdi-0x15], ebx; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000016aac3: jrcxz 0x000000000016ab11; mov [rdi-0x15], ebx; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000016aafb: jrcxz 0x000000000016ab49; mov [rdi-0x15], ebx; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000016ab23: jrcxz 0x000000000016ab71; mov [rdi-0x15], ebx; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000016d0e9: jrcxz 0x000000000016d0df; movq [rdi-0x10], mm1; ret; 
0x0000000016fc19: jrcxz 0x000000000016fc0f; movq [rdi-0x10], mm1; ret; 
0x0000000018c54c: jrcxz 0x000000000018c577; enter 0xf8c5, 0x77; ret; 
0x00000000044842: js 0x000000000004537a; mov rdi, [rsp+0x18]; mov rdx, rbp; mov rsi, r12; call rbx; 
0x0000000009789c: js 0x0000000000097a1c; mov rax, [rip+0x154517]; call qword ptr [rax]; 
0x000000000b6ea5: js 0x0000000066ce7122; nop [rax+rax]; mov edx, [rsi]; mov [rdi], edx; ret; 
0x000000000ba1b5: js 0x0000000066cea432; nop [rax+rax]; mov edx, [rsi]; mov [rdi], edx; ret; 
0x000000000baca5: js 0x0000000066ceaf22; nop [rax+rax]; mov edx, [rsi]; mov [rdi], edx; ret; 
0x000000000baf88: js 0xffffffffed3bb1e5; mov [rdi+0x3], ch; ret; 
0x000000000bafb6: js 0xffffffffed3bb413; mov [rdi+0x5], ch; ret; 
0x000000000bb008: js 0xffffffffed3bb865; mov [rdi+0x9], ch; ret; 
0x0000000002c7aa: js short 0x000000000002c7ac; add [rcx-0x77], cl; ret far; 
0x000000000340b5: js short 0x000000000003403a; loopne 0x00000000000340c1; movzx eax, ax; ret; 
0x000000000340f5: js short 0x000000000003407a; loopne 0x00000000000340fb; movzx eax, ax; ret; 
0x00000000034195: js short 0x000000000003411a; loopne 0x000000000003419d; movzx eax, ax; ret; 
0x00000000034275: js short 0x00000000000341fa; loopne 0x000000000003427a; ret; 
0x0000000003430e: js short 0x0000000000034293; loopne 0x0000000000034313; ret; 
0x0000000003432e: js short 0x00000000000342b3; loopne 0x000000000003433a; movzx eax, ax; ret; 
0x0000000003436e: js short 0x00000000000342f3; loopne 0x0000000000034374; movzx eax, ax; ret; 
0x0000000003440e: js short 0x0000000000034393; loopne 0x0000000000034416; movzx eax, ax; ret; 
0x00000000034496: js short 0x00000000000344e1; movsxd edi, edi; mov eax, [rax+rdi*4]; ret; 
0x00000000036287: js short 0x00000000000362a4; add [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x00000000036395: js short 0x00000000000363b2; add [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x00000000043180: js short 0x0000000000043191; adc [rsp+0x88], edi; mov r10d, 0x8; mov eax, 0xd; syscall; 
0x0000000004a884: js short 0x000000000004a80f; fiadd st, dword ptr [rbp-0xd77f025]; add [rax], al; add [rax+0x63], cl; ret far; 
0x00000000054365: js short 0x0000000000054368; add [rbp-0xa], dh; pop rbx; ret; 
0x0000000007510a: js short 0x00000000000750d3; test eax, edi; idiv bh; call qword ptr [rax]; 
0x00000000075f37: js short 0x0000000000075f00; test eax, edi; idiv bh; call qword ptr [rax]; 
0x00000000087f8a: js short 0x0000000000087f9c; mov [rax+0x40], rsi; mov [rax], rdx; xor eax, eax; ret; 
0x0000000008aee1: js short 0x000000000008aee8; ret; 
0x000000000e44c5: js short 0x00000000000e44c7; add [rax], al; syscall; 
0x000000000e524b: js short 0x00000000000e5250; ret; 
0x000000000e64e4: js short 0x00000000000e64a5; inc dword ptr [rcx-0x80]; jl short 0x00000000000e64f0; jmp far fword ptr [rdi]; 
0x00000000100dc4: js short 0x0000000000100d99; std; jmp qword ptr [rsp+rax*2-0x77]; 
0x0000000010c589: js short 0x000000000010c5a0; cmp rbx, rax; pop rbx; setl al; ret; 
0x0000000010c728: js short 0x000000000010c739; adc [rsi+0x70], edi; ret; 
0x000000001136ea: js short 0x00000000001136f4; mov eax, [rdi+0x8]; and eax, 0x100f; ret; 
0x000000001145cc: js short 0x00000000001145db; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x2]; mov rax, 0xffffffffffffffff; ret; 
0x00000000122a38: js short 0x00000000001229bd; loopne 0x0000000000122a44; movzx eax, ax; ret; 
0x00000000122b68: js short 0x0000000000122aed; loopne 0x0000000000122b6d; ret; 
0x00000000122bf8: js short 0x0000000000122b7d; loopne 0x0000000000122bfe; movzx eax, ax; ret; 
0x00000000122f08: js short 0x0000000000122e8d; loopne 0x0000000000122f10; movzx eax, ax; ret; 
0x00000000123419: js short 0x000000000012339e; loopne 0x0000000000123425; movzx eax, ax; ret; 
0x00000000123539: js short 0x00000000001234be; loopne 0x000000000012353e; ret; 
0x000000001235b9: js short 0x000000000012353e; loopne 0x00000000001235bf; movzx eax, ax; ret; 
0x00000000123889: js short 0x000000000012380e; loopne 0x0000000000123891; movzx eax, ax; ret; 
0x0000000012c3fe: js short 0x000000000012c389; push rbp; or byte ptr [rcx+rcx*4-0x16], 0xf; adc [rbp-0x78], esp; call rax; 
0x0000000012c90e: js short 0x000000000012c899; push rbp; or byte ptr [rcx+rcx*4-0x16], 0xf; adc [rbp-0x78], esi; call rax; 
0x0000000012ccf2: js short 0x000000000012cc7d; push rbp; or byte ptr [rcx+rcx*4-0x16], 0xf; adc [rbp-0x78], edi; call rax; 
0x0000000012ce8b: js short 0x000000000012ce95; jne short 0x000000000012ce80; mov rax, [rax+0x30]; ret; 
0x00000000135998: js short 0x0000000000135982; bnd ret; 
0x0000000013c960: js short 0x000000000013c970; mov rax, rdx; movsxd rdx, ecx; ret; 
0x000000001545cc: js short 0x00000000001545d7; add [rbx+rax*4+0x38], ah; add al, 0x75; ret; 
0x0000000015828e: js short 0x000000000015828d; jmp qword ptr [rsi+0x2e]; 
0x0000000015c938: js short 0x000000000015c948; add rsp, 0x8; pop rbp; pop r12; ret; 
0x00000000165eec: js short 0x0000000000165ef3; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000018b0c4: js short 0x000000000018b0c8; add [rax], al; vzeroupper; ret; 
0x00000000198c7b: js short 0x0000000000198c82; add [rcx], al; pop rbp; ret; 
0x000000000f83e3: lahf; bnd jmp qword ptr [rsi+0xf]; 
0x0000000006becd: lahf; call qword ptr [rdi]; 
0x00000000125df7: lahf; or al, 0x0; syscall; 
0x000000001383b0: lahf; out dx, al; dec dword ptr [rax-0x77]; ret; 
0x00000000074fa9: lahf; ret; 
0x00000000054748: lahf; sbb [rax], eax; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000041e8e: lahf; sbb al, [rax]; mov dword ptr fs:[rax], 0x22; add rsp, 0x8; ret; 
0x00000000033996: lahf; sbb eax, [rax]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000119e2b: lahf; vpaddsw ymm0, ymm15, [rcx+0xf]; lahf; ret; 
0x00000000119ced: lar eax, [rax]; add [rcx-0x7d], cl; ret far; 
0x0000000016d76c: lddqu xmm0, [rsi+0x10]; movdqu [rdi+0x10], xmm0; lddqu xmm0, [rsi]; movdqu [rdi], xmm0; ret; 
0x0000000016dde6: lddqu xmm0, [rsi+0x1]; lddqu xmm1, [rsi]; movdqu [rdi+0x1], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000016dd76: lddqu xmm0, [rsi+0x2]; lddqu xmm1, [rsi]; movdqu [rdi+0x2], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000016dd06: lddqu xmm0, [rsi+0x3]; lddqu xmm1, [rsi]; movdqu [rdi+0x3], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000016dc96: lddqu xmm0, [rsi+0x4]; lddqu xmm1, [rsi]; movdqu [rdi+0x4], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000016dc26: lddqu xmm0, [rsi+0x5]; lddqu xmm1, [rsi]; movdqu [rdi+0x5], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000016dbb6: lddqu xmm0, [rsi+0x6]; lddqu xmm1, [rsi]; movdqu [rdi+0x6], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000016db46: lddqu xmm0, [rsi+0x7]; lddqu xmm1, [rsi]; movdqu [rdi+0x7], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000016dad6: lddqu xmm0, [rsi+0x8]; lddqu xmm1, [rsi]; movdqu [rdi+0x8], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000016da66: lddqu xmm0, [rsi+0x9]; lddqu xmm1, [rsi]; movdqu [rdi+0x9], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000016d9f6: lddqu xmm0, [rsi+0xa]; lddqu xmm1, [rsi]; movdqu [rdi+0xa], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000016d986: lddqu xmm0, [rsi+0xb]; lddqu xmm1, [rsi]; movdqu [rdi+0xb], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000016d916: lddqu xmm0, [rsi+0xc]; lddqu xmm1, [rsi]; movdqu [rdi+0xc], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000016d8a6: lddqu xmm0, [rsi+0xd]; lddqu xmm1, [rsi]; movdqu [rdi+0xd], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000016d836: lddqu xmm0, [rsi+0xe]; lddqu xmm1, [rsi]; movdqu [rdi+0xe], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000016d7c6: lddqu xmm0, [rsi+0xf]; lddqu xmm1, [rsi]; movdqu [rdi+0xf], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000016cf56: lddqu xmm0, [rsi-0x10]; movdqu [rdi-0x10], xmm0; ret; 
0x0000000016d6fc: lddqu xmm0, [rsi-0x11]; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x11], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000016d67c: lddqu xmm0, [rsi-0x12]; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x12], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000016d5ec: lddqu xmm0, [rsi-0x13]; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x13], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000016d56c: lddqu xmm0, [rsi-0x14]; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x14], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000016d4ec: lddqu xmm0, [rsi-0x15]; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x15], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000016d46c: lddqu xmm0, [rsi-0x16]; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x16], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000016d3ec: lddqu xmm0, [rsi-0x17]; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x17], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000016d36c: lddqu xmm0, [rsi-0x18]; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x18], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000016d2ec: lddqu xmm0, [rsi-0x19]; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x19], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000016d26c: lddqu xmm0, [rsi-0x1a]; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x1a], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000016d1ec: lddqu xmm0, [rsi-0x1b]; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x1b], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000016d16c: lddqu xmm0, [rsi-0x1c]; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x1c], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000016d0dc: lddqu xmm0, [rsi-0x1d]; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x1d], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000016d04c: lddqu xmm0, [rsi-0x1e]; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x1e], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000016cfbc: lddqu xmm0, [rsi-0x1f]; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x1f], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000016cf4c: lddqu xmm0, [rsi-0x20]; movdqu [rdi-0x20], xmm0; lddqu xmm0, [rsi-0x10]; movdqu [rdi-0x10], xmm0; ret; 
0x0000000016d776: lddqu xmm0, [rsi]; movdqu [rdi], xmm0; ret; 
0x0000000016d701: lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x11], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000016d681: lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x12], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000016d5f1: lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x13], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000016d571: lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x14], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000016d4f1: lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x15], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000016d471: lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x16], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000016d3f1: lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x17], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000016d371: lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x18], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000016d2f1: lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x19], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000016d271: lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x1a], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000016d1f1: lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x1b], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000016d171: lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x1c], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000016d0e1: lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x1d], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000016d051: lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x1e], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000016cfc1: lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x1f], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000016ddeb: lddqu xmm1, [rsi]; movdqu [rdi+0x1], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000016dd7b: lddqu xmm1, [rsi]; movdqu [rdi+0x2], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000016dd0b: lddqu xmm1, [rsi]; movdqu [rdi+0x3], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000016dc9b: lddqu xmm1, [rsi]; movdqu [rdi+0x4], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000016dc2b: lddqu xmm1, [rsi]; movdqu [rdi+0x5], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000016dbbb: lddqu xmm1, [rsi]; movdqu [rdi+0x6], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000016db4b: lddqu xmm1, [rsi]; movdqu [rdi+0x7], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000016dadb: lddqu xmm1, [rsi]; movdqu [rdi+0x8], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000016da6b: lddqu xmm1, [rsi]; movdqu [rdi+0x9], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000016d9fb: lddqu xmm1, [rsi]; movdqu [rdi+0xa], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000016d98b: lddqu xmm1, [rsi]; movdqu [rdi+0xb], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000016d91b: lddqu xmm1, [rsi]; movdqu [rdi+0xc], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000016d8ab: lddqu xmm1, [rsi]; movdqu [rdi+0xd], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000016d83b: lddqu xmm1, [rsi]; movdqu [rdi+0xe], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000016d7cb: lddqu xmm1, [rsi]; movdqu [rdi+0xf], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000013c26f: lea eax, [r9+r8+0x2]; pop rbx; ret; 
0x000000001532d9: lea eax, [rax+0x80]; mov rax, r8; pop rbx; ret; 
0x000000001533a9: lea eax, [rax+0xa0]; mov rax, r8; pop rbx; ret; 
0x00000000153479: lea eax, [rax+0xa8]; mov rax, r8; pop rbx; ret; 
0x00000000102adb: lea eax, [rax+rax*8+0x5]; ret; 
0x000000000ce0c6: lea eax, [rax+rax-0x1]; ret; 
0x000000000bce69: lea eax, [rax+rbx*4]; pop rbx; pop rbp; pop r12; ret; 
0x000000000ac1a4: lea eax, [rax+rdi+0x10]; ret; 
0x000000000ac1b4: lea eax, [rax+rdi+0x20]; ret; 
0x000000000ac694: lea eax, [rax+rdi+0x30]; ret; 
0x000000000ac184: lea eax, [rax+rdi-0x10]; ret; 
0x000000000dd78b: lea eax, [rax+rdx*8]; ret; 
0x0000000009c21f: lea eax, [rax-0x8]; ret; 
0x00000000087b42: lea eax, [rax]; add [rax], al; add [rax+0x29], cl; ret far; 
0x00000000114215: lea eax, [rax]; add [rax], al; syscall; 
0x0000000007c147: lea eax, [rax]; idiv edi; jmp far fword ptr [rcx]; 
0x0000000012f343: lea eax, [rbp-0x11]; jmp qword ptr [rsi+0xf]; 
0x000000000e8461: lea eax, [rbx+0x2]; pop rbx; pop rbp; pop r12; ret; 
0x000000000e8361: lea eax, [rbx+0x8]; pop rbx; pop rbp; pop r12; ret; 
0x0000000013c424: lea eax, [rbx+rbp]; pop rbx; pop rbp; ret; 
0x00000000047c5c: lea eax, [rcx+rax*4]; mov [rsi+0x10], r9; mov [rsi+0x28], rax; xor eax, eax; ret; 
0x0000000013c270: lea eax, [rcx+rax+0x2]; pop rbx; ret; 
0x000000000b1add: lea eax, [rcx+rsi]; ret; 
0x00000000087e2f: lea eax, [rcx-0x1]; ret; 
0x00000000051472: lea eax, [rcx-0x43]; add [rax], al; add [rcx-0x39], cl; ret; 
0x000000000b863c: lea eax, [rdi+0x10]; ret; 
0x000000000b900c: lea eax, [rdi+0x10]; sub r8, 0x11; lea rdi, [rdi+0x11]; jne 0x00000000000b97f0; ret; 
0x000000000b8651: lea eax, [rdi+0x11]; ret; 
0x000000000b9031: lea eax, [rdi+0x11]; sub r8, 0x12; lea rdi, [rdi+0x12]; jne 0x00000000000b97f0; ret; 
0x000000000b866f: lea eax, [rdi+0x12]; ret; 
0x000000000b905f: lea eax, [rdi+0x12]; sub r8, 0x13; lea rdi, [rdi+0x13]; jne 0x00000000000b97f0; ret; 
0x000000000b868f: lea eax, [rdi+0x13]; ret; 
0x000000000b908f: lea eax, [rdi+0x13]; sub r8, 0x14; lea rdi, [rdi+0x14]; jne 0x00000000000b97f0; ret; 
0x000000000b86b2: lea eax, [rdi+0x14]; ret; 
0x000000000b90c2: lea eax, [rdi+0x14]; sub r8, 0x15; lea rdi, [rdi+0x15]; jne 0x00000000000b97f0; ret; 
0x000000000b86d1: lea eax, [rdi+0x15]; ret; 
0x000000000b90f1: lea eax, [rdi+0x15]; sub r8, 0x16; lea rdi, [rdi+0x16]; jne 0x00000000000b97f0; ret; 
0x000000000b86f1: lea eax, [rdi+0x16]; ret; 
0x000000000b9121: lea eax, [rdi+0x16]; sub r8, 0x17; lea rdi, [rdi+0x17]; jne 0x00000000000b97f0; ret; 
0x000000000b8711: lea eax, [rdi+0x17]; ret; 
0x000000000b9151: lea eax, [rdi+0x17]; sub r8, 0x18; lea rdi, [rdi+0x18]; jne 0x00000000000b97f0; ret; 
0x000000000b8734: lea eax, [rdi+0x18]; ret; 
0x000000000b9184: lea eax, [rdi+0x18]; sub r8, 0x19; lea rdi, [rdi+0x19]; jne 0x00000000000b97f0; ret; 
0x000000000b8759: lea eax, [rdi+0x19]; ret; 
0x000000000b91b9: lea eax, [rdi+0x19]; sub r8, 0x1a; lea rdi, [rdi+0x1a]; jne 0x00000000000b97f0; ret; 
0x000000000b84d7: lea eax, [rdi+0x1]; ret; 
0x000000000b8de7: lea eax, [rdi+0x1]; sub r8, 0x2; lea rdi, [rdi+0x2]; jne 0x00000000000b97f0; ret; 
0x0000000018ab07: lea eax, [rdi+0x1]; vzeroupper; ret; 
0x000000000b8777: lea eax, [rdi+0x1a]; ret; 
0x000000000b91e7: lea eax, [rdi+0x1a]; sub r8, 0x1b; lea rdi, [rdi+0x1b]; jne 0x00000000000b97f0; ret; 
0x000000000b8797: lea eax, [rdi+0x1b]; ret; 
0x000000000b9217: lea eax, [rdi+0x1b]; sub r8, 0x1c; lea rdi, [rdi+0x1c]; jne 0x00000000000b97f0; ret; 
0x000000000b87b3: lea eax, [rdi+0x1c]; ret; 
0x000000000b9243: lea eax, [rdi+0x1c]; sub r8, 0x1d; lea rdi, [rdi+0x1d]; jne 0x00000000000b97f0; ret; 
0x000000000b87d3: lea eax, [rdi+0x1d]; ret; 
0x000000000b9273: lea eax, [rdi+0x1d]; sub r8, 0x1e; lea rdi, [rdi+0x1e]; jne 0x00000000000b97f0; ret; 
0x000000000b87f3: lea eax, [rdi+0x1e]; ret; 
0x000000000b92a3: lea eax, [rdi+0x1e]; sub r8, 0x1f; lea rdi, [rdi+0x1f]; jne 0x00000000000b97f0; ret; 
0x000000000b8813: lea eax, [rdi+0x1f]; ret; 
0x000000000b92d3: lea eax, [rdi+0x1f]; sub r8, 0x20; lea rdi, [rdi+0x20]; jne 0x00000000000b97f0; ret; 
0x000000000b9683: lea eax, [rdi+0x20]; ret; 
0x000000000b84ea: lea eax, [rdi+0x2]; ret; 
0x000000000b8e0a: lea eax, [rdi+0x2]; sub r8, 0x3; lea rdi, [rdi+0x3]; jne 0x00000000000b97f0; ret; 
0x0000000018ab1b: lea eax, [rdi+0x2]; vzeroupper; ret; 
0x000000000b84f5: lea eax, [rdi+0x3]; ret; 
0x000000000b8e25: lea eax, [rdi+0x3]; sub r8, 0x4; lea rdi, [rdi+0x4]; jne 0x00000000000b97f0; ret; 
0x0000000018ab35: lea eax, [rdi+0x3]; vzeroupper; ret; 
0x000000000b98f9: lea eax, [rdi+0x40]; ret; 
0x0000000018b2a9: lea eax, [rdi+0x41]; vzeroupper; ret; 
0x000000000b8508: lea eax, [rdi+0x4]; ret; 
0x000000000b8e48: lea eax, [rdi+0x4]; sub r8, 0x5; lea rdi, [rdi+0x5]; jne 0x00000000000b97f0; ret; 
0x000000000b851d: lea eax, [rdi+0x5]; ret; 
0x000000000b8e6d: lea eax, [rdi+0x5]; sub r8, 0x6; lea rdi, [rdi+0x6]; jne 0x00000000000b97f0; ret; 
0x000000000b853b: lea eax, [rdi+0x6]; ret; 
0x000000000b8e8b: lea eax, [rdi+0x6]; sub r8, 0x7; lea rdi, [rdi+0x7]; jne 0x00000000000b97f0; ret; 
0x000000000b8547: lea eax, [rdi+0x7]; ret; 
0x000000000b8ea7: lea eax, [rdi+0x7]; sub r8, 0x8; lea rdi, [rdi+0x8]; jne 0x00000000000b97f0; ret; 
0x0000000018b44c: lea eax, [rdi+0x80]; vzeroupper; ret; 
0x000000000b855a: lea eax, [rdi+0x8]; ret; 
0x000000000b8eca: lea eax, [rdi+0x8]; sub r8, 0x9; lea rdi, [rdi+0x9]; jne 0x00000000000b97f0; ret; 
0x0000000013b414: lea eax, [rdi+0x9]; and eax, 0xfffffff8; add eax, 0x10; ret; 
0x000000000b856f: lea eax, [rdi+0x9]; ret; 
0x000000000b8eef: lea eax, [rdi+0x9]; sub r8, 0xa; lea rdi, [rdi+0xa]; jne 0x00000000000b97f0; ret; 
0x000000000b858d: lea eax, [rdi+0xa]; ret; 
0x000000000b8f1d: lea eax, [rdi+0xa]; sub r8, 0xb; lea rdi, [rdi+0xb]; jne 0x00000000000b97f0; ret; 
0x000000000b85ad: lea eax, [rdi+0xb]; ret; 
0x000000000b8f3d: lea eax, [rdi+0xb]; sub r8, 0xc; lea rdi, [rdi+0xc]; jne 0x00000000000b97f0; ret; 
0x000000000b85cf: lea eax, [rdi+0xc]; ret; 
0x000000000b8f5f: lea eax, [rdi+0xc]; sub r8, 0xd; lea rdi, [rdi+0xd]; jne 0x00000000000b97f0; ret; 
0x000000000b85ef: lea eax, [rdi+0xd]; ret; 
0x000000000b8f8f: lea eax, [rdi+0xd]; sub r8, 0xe; lea rdi, [rdi+0xe]; jne 0x00000000000b97f0; ret; 
0x000000000b860f: lea eax, [rdi+0xe]; ret; 
0x000000000b8fbf: lea eax, [rdi+0xe]; sub r8, 0xf; lea rdi, [rdi+0xf]; jne 0x00000000000b97f0; ret; 
0x000000000b8629: lea eax, [rdi+0xf]; ret; 
0x000000000b8fe9: lea eax, [rdi+0xf]; sub r8, 0x10; lea rdi, [rdi+0x10]; jne 0x00000000000b97f0; ret; 
0x000000000ac1d9: lea eax, [rdi+rax+0x10]; ret; 
0x0000000018cce7: lea eax, [rdi+rax+0x20]; cmp esi, [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x000000001881a7: lea eax, [rdi+rax+0x20]; cmp sil, [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x000000000ac1e9: lea eax, [rdi+rax+0x20]; ret; 
0x0000000013b8b5: lea eax, [rdi+rax+0x2]; cmp rdx, rax; sbb eax, eax; ret; 
0x000000000ac0e3: lea eax, [rdi+rax+0x30]; ret; 
0x0000000018cd07: lea eax, [rdi+rax+0x40]; cmp esi, [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x000000001881c7: lea eax, [rdi+rax+0x40]; cmp sil, [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x0000000018cd45: lea eax, [rdi+rax+0x60]; cmp esi, [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x00000000188205: lea eax, [rdi+rax+0x60]; cmp sil, [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x00000000188555: lea eax, [rdi+rax-0x20]; vzeroupper; ret; 
0x000000000b14f0: lea eax, [rdi+rax]; cmp [rax], sil; cmovne rax, rdx; ret; 
0x0000000018cbad: lea eax, [rdi+rax]; cmp esi, [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x0000000018806d: lea eax, [rdi+rax]; cmp sil, [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x000000000b171b: lea eax, [rdi+rax]; ret; 
0x0000000018b203: lea eax, [rdi+rax]; vzeroupper; ret; 
0x000000000a8b29: lea eax, [rdi+rdx-0x1]; ret; 
0x0000000018ab4d: lea eax, [rdi+rdx]; vzeroupper; ret; 
0x0000000013c797: lea eax, [rdi+rsi+0x8]; mov rax, r8; ret; 
0x000000000b19d9: lea eax, [rdi+rsi]; ret; 
0x000000000cf51e: lea eax, [rdi-0x10]; ret; 
0x000000000cf6a1: lea eax, [rdi-0x4]; ret; 
0x000000000cf691: lea eax, [rdi-0x8]; ret; 
0x000000000cf681: lea eax, [rdi-0xc]; ret; 
0x000000000b84c3: lea eax, [rdi]; ret; 
0x000000000b8dc3: lea eax, [rdi]; sub r8, 0x1; lea rdi, [rdi+0x1]; jne 0x00000000000b97f0; ret; 
0x0000000018aa85: lea eax, [rdi]; vzeroupper; ret; 
0x0000000017a9f7: lea eax, [rdx+0x1]; ret; 
0x0000000017aa0d: lea eax, [rdx+0x2]; ret; 
0x0000000017aa25: lea eax, [rdx+0x3]; ret; 
0x0000000017aa3b: lea eax, [rdx+0x4]; ret; 
0x0000000017aa4d: lea eax, [rdx+0x5]; ret; 
0x0000000017aa6b: lea eax, [rdx+0x6]; ret; 
0x0000000017ce32: lea eax, [rdx+0x7]; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x0000000017a977: lea eax, [rdx+0x7]; ret; 
0x0000000017aa7d: lea eax, [rdx+0x8]; ret; 
0x0000000017aa9d: lea eax, [rdx+0x9]; ret; 
0x0000000017aabd: lea eax, [rdx+0xa]; ret; 
0x0000000017aadd: lea eax, [rdx+0xb]; ret; 
0x0000000017aaff: lea eax, [rdx+0xc]; ret; 
0x0000000017ab1f: lea eax, [rdx+0xd]; ret; 
0x0000000017cd87: lea eax, [rdx+0xe]; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x0000000017ab3f: lea eax, [rdx+0xe]; ret; 
0x0000000017a9cf: lea eax, [rdx+0xf]; ret; 
0x0000000014925d: lea eax, [rdx+rax]; pop rbx; pop rbp; mov eax, r8d; ret; 
0x00000000104428: lea eax, [rdx+rdi]; mov rdi, [rbp-0x1b0]; mov rdx, [r12]; mov rax, [rbp-0x1e0]; call rax; 
0x00000000087e1e: lea eax, [rdx+rdi]; ret; 
0x00000000087e1d: lea eax, [rdx+rdi]; ret; 
0x000000000bc1d3: lea eax, [rdx+rdx]; pop rbx; and eax, 0x7ff80000; ret; 
0x0000000009c241: lea eax, [rdx-0x10]; ret; 
0x00000000044120: lea eax, [rdx-0x1]; mov [rip+0x1a807f], eax; mov eax, edx; ret; 
0x0000000017a9e5: lea eax, [rdx]; ret; 
0x000000000a8b0e: lea eax, [rip+0x1063d0]; mov eax, edx; movsxd rax, [r8+rax*4]; add rax, r8; notrack jmp rax; 
0x000000000bcd88: lea eax, [rip+0x112c2]; lea rdx, [rip+0xd575b]; cmovne rax, rdx; ret; 
0x000000000bcd41: lea eax, [rip+0x11389]; cmove rax, rdx; ret; 
0x000000000bdfb7: lea eax, [rip+0x11923]; lea rdx, [rip+0x116fc]; cmovne rax, rdx; ret; 
0x000000000bc881: lea eax, [rip+0x11b79]; cmove rax, rdx; ret; 
0x000000000d0161: lea eax, [rip+0x11ef39]; add rsp, 0x8; ret; 
0x0000000009f841: lea eax, [rip+0x12099]; cmove rax, rdx; ret; 
0x0000000009f16a: lea eax, [rip+0x12330]; lea rdx, [rip+0xf18e9]; cmovne rax, rdx; ret; 
0x0000000009f691: lea eax, [rip+0x12549]; cmove rax, rdx; ret; 
0x000000000bca31: lea eax, [rip+0x12699]; cmove rax, rdx; ret; 
0x0000000009f6d1: lea eax, [rip+0x126a9]; cmove rax, rdx; ret; 
0x000000000bcb21: lea eax, [rip+0x12879]; cmove rax, rdx; ret; 
0x000000000bc8a7: lea eax, [rip+0x12933]; cmovne rax, rdx; ret; 
0x000000000bc841: lea eax, [rip+0x129c9]; cmove rax, rdx; ret; 
0x0000000007f373: lea eax, [rip+0x12f247]; movsxd rax, [rax+rcx*4]; add rax, rdx; jmp rax; 
0x000000000bc991: lea eax, [rip+0x12f89]; cmove rax, rdx; ret; 
0x0000000007e4fe: lea eax, [rip+0x1300bc]; mov r9, [rbp-0x508]; movsxd rax, [rax+rcx*4]; add rax, rdx; jmp rax; 
0x0000000007e044: lea eax, [rip+0x1304f6]; movsxd rax, [rax+rcx*4]; add rax, rdx; jmp rax; 
0x0000000007b1bc: lea eax, [rip+0x13317e]; movsxd rax, [rax+rdx*4]; lea rdx, [rip-0x4d4]; add rax, rdx; jmp rax; 
0x000000000787dd: lea eax, [rip+0x1359dd]; movsxd rax, [rax+rdx*4]; add rax, rbx; jmp rax; 
0x00000000077eb9: lea eax, [rip+0x136301]; movsxd rax, [rax+rdx*4]; add rax, rbx; jmp rax; 
0x00000000077875: lea eax, [rip+0x136845]; movsxd rax, [rax+rcx*4]; add rax, rbx; jmp rax; 
0x000000000778d0: lea eax, [rip+0x13686a]; movsxd rax, [rax+rdx*4]; add rax, rbx; jmp rax; 
0x0000000009f8cd: lea eax, [rip+0x14f68d]; mov [rip+0x14f66e], rax; add rsp, 0x8; ret; 
0x0000000009f88f: lea eax, [rip+0x14f6cb]; mov [rip+0x14f6ac], rax; ret; 
0x000000000960ea: lea eax, [rip+0x156a90]; add rsp, 0x10; pop rbp; ret; 
0x00000000094750: lea eax, [rip+0x15cd4a]; pop rbx; mov dword ptr [rip+0x15cd2f], 0x1; ret; 
0x000000000a0767: lea eax, [rip+0x162c3]; lea rdx, [rip+0xd8bcc]; cmovne rax, rdx; ret; 
0x0000000009f247: lea eax, [rip+0x176f3]; lea rdx, [rip+0xd5dbc]; cmovne rax, rdx; ret; 
0x00000000147320: lea eax, [rip+0x17a]; mov esi, 0x4; mov rdi, rbp; lea r9, [rsp+0x20]; call qword ptr [rax]; 
0x000000000328f1: lea eax, [rip+0x181a86]; ret; 
0x000000000328d5: lea eax, [rip+0x181aa2]; cmp [rdx+0x38], edi; jbe short 0x00000000000328f7; mov rax, [rdx+rdi*8+0x40]; ret; 
0x000000000241d5: lea eax, [rip+0x18fcc3]; ret; 
0x000000000241e5: lea eax, [rip+0x191a8c]; ret; 
0x00000000052a29: lea eax, [rip+0x19bc31]; mov byte ptr [rax+rdx], 0x0; ret; 
0x0000000009f117: lea eax, [rip+0x1a893]; lea rdx, [rip+0x12e7c]; cmovne rax, rdx; ret; 
0x00000000047fb5: lea eax, [rip+0x1a934b]; add rsp, 0x8; ret; 
0x000000000a033a: lea eax, [rip+0x1b0d0]; cmove rax, rdx; ret; 
0x000000000a0a25: lea eax, [rip+0x1b1a5]; lea rdx, [rip+0x1b0be]; cmove rax, rdx; ret; 
0x000000000a06b5: lea eax, [rip+0x1b4f5]; lea rdx, [rip+0x1b40e]; cmove rax, rdx; ret; 
0x000000000a0555: lea eax, [rip+0x1b675]; lea rdx, [rip+0x1b58e]; cmove rax, rdx; ret; 
0x000000000a05da: lea eax, [rip+0x1b940]; cmovne rax, rdx; ret; 
0x0000000003287d: lea eax, [rip+0x1bb21d]; mov [rip+0x1bb274], dl; ret; 
0x0000000009fb27: lea eax, [rip+0x1bee3]; cmovne rax, rdx; ret; 
0x0000000009f867: lea eax, [rip+0x1c0f3]; cmovne rax, rdx; ret; 
0x0000000009f277: lea eax, [rip+0x1c633]; cmovne rax, rdx; ret; 
0x000000000a8c01: lea eax, [rip+0x3819]; cmove rax, rdx; ret; 
0x0000000012da5f: lea eax, [rip+0x3830b]; lea rdx, [rip+0x3d894]; cmovne rax, rdx; ret; 
0x0000000012d8df: lea eax, [rip+0x384ab]; lea rdx, [rip+0x3da34]; cmovne rax, rdx; ret; 
0x0000000012d99f: lea eax, [rip+0x3adcb]; lea rdx, [rip+0x40464]; cmovne rax, rdx; ret; 
0x0000000012eeba: lea eax, [rip+0x5cb10]; cmp rdx, 0x4; cmovne r8, rax; mov rax, r8; ret; 
0x0000000012da3e: lea eax, [rip+0x5db7c]; lea rdx, [rip+0x5db05]; cmove rax, rdx; ret; 
0x0000000012d97e: lea eax, [rip+0x5dc5c]; lea rdx, [rip+0x5dbe5]; cmove rax, rdx; ret; 
0x0000000012d8be: lea eax, [rip+0x5dd1c]; lea rdx, [rip+0x5dca5]; cmove rax, rdx; ret; 
0x0000000012db0f: lea eax, [rip+0x5df4b]; cmove rax, rdx; ret; 
0x0000000012da89: lea eax, [rip+0x628b1]; lea rdx, [rip+0x6283a]; cmove rax, rdx; ret; 
0x0000000012d9c9: lea eax, [rip+0x62991]; lea rdx, [rip+0x6291a]; cmove rax, rdx; ret; 
0x0000000012d909: lea eax, [rip+0x62a51]; lea rdx, [rip+0x629da]; cmove rax, rdx; ret; 
0x0000000012db49: lea eax, [rip+0x62da1]; lea rdx, [rip+0x62d2a]; cmove rax, rdx; ret; 
0x0000000014f74e: lea eax, [rip+0x642ac]; movsxd rdx, [rax+rdx*4]; add rdx, rax; notrack jmp rdx; 
0x00000000023a3c: lea eax, [rip+0x6a14e]; xor rax, fs:[0x30]; rol rax, 0x11; mov [rip+0x1cd8d2], rax; ret; 
0x000000000a07c7: lea eax, [rip+0x86e3]; lea rdx, [rip+0xda37c]; cmovne rax, rdx; ret; 
0x00000000120df3: lea eax, [rip+0x91887]; mov eax, [rax+rdi*4]; ret; 
0x0000000015c51e: lea eax, [rip+0x94a5c]; mov edx, 0x0; cmovne rax, rdx; add rsp, 0x8; ret; 
0x0000000009f7f7: lea eax, [rip+0x9723]; lea rdx, [rip+0xd6fbc]; cmovne rax, rdx; ret; 
0x0000000009f727: lea eax, [rip+0x9733]; lea rdx, [rip+0x1448c]; cmovne rax, rdx; ret; 
0x0000000009f1c7: lea eax, [rip+0x9db3]; lea rdx, [rip+0xc41bc]; cmovne rax, rdx; ret; 
0x00000000153185: lea eax, [rip+0x9dcb5]; mov fs:[rbx], rax; pop rbx; mov dword ptr [rip+0x9dc86], 0x2; ret; 
0x000000000a1cb1: lea eax, [rip+0xa559]; cmove rax, rdx; ret; 
0x000000001462d3: lea eax, [rip+0xaa827]; ret; 
0x000000001462a7: lea eax, [rip+0xaa853]; add rsp, 0x8; ret; 
0x0000000009f791: lea eax, [rip+0xaee9]; lea rdx, [rip+0xc4e62]; cmovne rax, rdx; ret; 
0x000000000a0431: lea eax, [rip+0xbaa9]; cmove rax, rdx; ret; 
0x000000001473dc: lea eax, [rip+0xbe]; xor ecx, ecx; lea rdx, [rip+0xe7e5]; lea r9, [rsp+0x20]; call qword ptr [rax]; 
0x000000000a08ba: lea eax, [rip+0xc350]; lea rdx, [rip+0xd0099]; cmovne rax, rdx; ret; 
0x000000000a0478: lea eax, [rip+0xc372]; lea rdx, [rip+0xf08fb]; cmovne rax, rdx; ret; 
0x000000000a081a: lea eax, [rip+0xc3d0]; lea rdx, [rip+0xd0119]; cmovne rax, rdx; ret; 
0x000000000a09df: lea eax, [rip+0xc53bb]; lea rdx, [rip+0xca944]; cmovne rax, rdx; ret; 
0x000000000a066f: lea eax, [rip+0xc570b]; lea rdx, [rip+0xcac94]; cmovne rax, rdx; ret; 
0x000000000a050f: lea eax, [rip+0xc826b]; lea rdx, [rip+0xcd904]; cmovne rax, rdx; ret; 
0x000000000bce2a: lea eax, [rip+0xcebb0]; cmp rdx, 0x4; cmovne r8, rax; mov rax, r8; ret; 
0x000000000bcda9: lea eax, [rip+0xcedd1]; test byte ptr [rdx+0xcd], 0x1; je short 0x00000000000bcd75; ret; 
0x00000000119203: lea eax, [rip+0xd66b7]; add rsp, 0x18; ret; 
0x000000001191b3: lea eax, [rip+0xd6747]; pop r12; pop r13; ret; 
0x00000000118cbb: lea eax, [rip+0xd6baf]; add rsp, 0x8; ret; 
0x00000000118c60: lea eax, [rip+0xd6c2a]; pop rbp; pop r12; pop r13; ret; 
0x00000000115bcc: lea eax, [rip+0xd9aa6]; add rsp, 0x8; ret; 
0x000000000a0499: lea eax, [rip+0xe4731]; test byte ptr [rdx+0xcd], 0x1; je short 0x00000000000a0465; ret; 
0x000000000a090a: lea eax, [rip+0xe550]; lea rdx, [rip+0xd21a9]; cmovne rax, rdx; ret; 
0x000000000a086a: lea eax, [rip+0xe5d0]; lea rdx, [rip+0xd2229]; cmovne rax, rdx; ret; 
0x000000000a09be: lea eax, [rip+0xeac2c]; lea rdx, [rip+0xeabb5]; cmove rax, rdx; ret; 
0x000000000a064e: lea eax, [rip+0xeaf7c]; lea rdx, [rip+0xeaf05]; cmove rax, rdx; ret; 
0x000000000a04ee: lea eax, [rip+0xeb0fc]; lea rdx, [rip+0xeb085]; cmove rax, rdx; ret; 
0x000000000a05bf: lea eax, [rip+0xeb4ab]; cmove rax, rdx; ret; 
0x000000000a0a09: lea eax, [rip+0xef961]; lea rdx, [rip+0xef8ea]; cmove rax, rdx; ret; 
0x000000000a0699: lea eax, [rip+0xefcb1]; lea rdx, [rip+0xefc3a]; cmove rax, rdx; ret; 
0x000000000a0539: lea eax, [rip+0xefe31]; lea rdx, [rip+0xefdba]; cmove rax, rdx; ret; 
0x000000000a05f9: lea eax, [rip+0xf0301]; lea rdx, [rip+0xf028a]; cmove rax, rdx; ret; 
0x000000000a1cf1: lea eax, [rip+0xf9d9]; cmove rax, rdx; ret; 
0x00000000077c1a: lea eax, [rip-0x10dd]; mov r10, rdx; mov dword ptr [rbp-0x51c], 0x1; jmp rax; 
0x000000000d1009: lea eax, [rip-0x10f]; add rsp, 0x58; ret; 
0x000000000d0ef9: lea eax, [rip-0x10f]; ret; 
0x000000000d1019: lea eax, [rip-0x11f]; ret; 
0x0000000015193f: lea eax, [rip-0x6b85]; lea rdx, [rip-0x6b6c]; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x0000000012db2a: lea eax, [rip-0x71c20]; cmovne rax, rdx; ret; 
0x0000000012d925: lea eax, [rip-0x71d6b]; lea rdx, [rip-0x71e52]; cmove rax, rdx; ret; 
0x0000000012d9e5: lea eax, [rip-0x71e2b]; lea rdx, [rip-0x71f12]; cmove rax, rdx; ret; 
0x0000000012daa5: lea eax, [rip-0x71f0b]; lea rdx, [rip-0x71ff2]; cmove rax, rdx; ret; 
0x00000000152196: lea eax, [rip-0xa0ec]; lea rdx, [rip+0x3a2d]; call qword ptr [rax]; 
0x0000000010d287: lea eax, [rip-0xbd]; cmove rax, rdx; ret; 
0x0000000007e201: lea eax, [rip-0xfac]; mov r9, rcx; mov dword ptr [rbp-0x510], 0x1; jmp rax; 
0x000000000d0ee9: lea eax, [rip-0xff]; add rsp, 0x58; ret; 
0x000000001232a5: lea eax, [rsi+rax*4]; mov eax, [rax+rdx]; shr eax, cl; and eax, 0x1; ret; 
0x0000000015fddd: lea eax, [rsp+0x30]; call qword ptr [rax+0x1e0]; 
0x000000000d0e9f: lea eax, [rsp+0x40]; call qword ptr [rax+0x1e0]; 
0x0000000002f2f0: lea eax, [rsp+0xa0]; call r15; 
0x0000000014ff62: lea ebp, [rax-0x1]; mov rax, [rbx+0x70]; mov [rbx+0x48], ebp; bswap ebp; call qword ptr [rax+0x18]; 
0x00000000154d13: lea ebp, [rbp+0x10]; mov dword ptr [rbp+0x10], 0x0; mov rdi, r13; call qword ptr [rax+0x28]; 
0x00000000154b0d: lea ebp, [rbx+0x10]; xor esi, esi; mov dword ptr [rbx+0x10], 0x1; mov rdi, r13; call qword ptr [rax+0x28]; 
0x00000000198a24: lea ebp, [rbx+rax*8+0x8]; nop [rax+rax]; call qword ptr [rbx]; 
0x00000000150fca: lea ebp, [rsp+0x138]; mov rsi, rbp; mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x10]; 
0x00000000146a85: lea ebp, [rsp+0x68]; mov rsi, r13; call qword ptr [rax+0x10]; 
0x0000000014d3ad: lea ebp, [rsp+0x68]; mov rsi, rbp; mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x10]; 
0x000000001129df: lea ebx, [rax+rdi*8]; dec dword ptr [rbx+0x48082444]; add esp, 0x28; ret; 
0x0000000018172f: lea ebx, [rbp+0xc8b0001]; mov cl, [rbx-0x37d67dfc]; ret; 
0x0000000005cbce: lea ebx, [rdi+rdi*8-0x1]; jmp qword ptr [rsi+0xf]; 
0x00000000073e26: lea ebx, [rdi+rsi*8-0x1]; dec dword ptr [rax-0x77]; test [rax], edi; idiv edi; jmp qword ptr [rax+rcx*2-0x75]; 
0x000000000901fe: lea ebx, [rip+0x11ea98]; movzx eax, al; movsxd rax, [r11+rax*4]; add rax, r11; notrack jmp rax; 
0x00000000090230: lea ebx, [rip+0x11eac2]; movzx eax, al; movsxd rax, [r11+rax*4]; add rax, r11; notrack jmp rax; 
0x00000000090262: lea ebx, [rip+0x11eaec]; movzx eax, al; movsxd rax, [r11+rax*4]; add rax, r11; notrack jmp rax; 
0x00000000090294: lea ebx, [rip+0x11eb16]; movzx eax, al; movsxd rax, [r11+rax*4]; add rax, r11; notrack jmp rax; 
0x00000000040aa2: lea ebx, [rip+0x168530]; movzx r10d, r10b; movsxd r10, [r11+r10*4]; add r10, r11; notrack jmp r10; 
0x0000000018f504: lea ebx, [rip+0x2e136]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018f48a: lea ebx, [rip+0x2e1b0]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018f3fb: lea ebx, [rip+0x2e23f]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018f1f0: lea ebx, [rip+0x2e44a]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018f0be: lea ebx, [rip+0x2e57c]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018eff8: lea ebx, [rip+0x2e642]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018ef7a: lea ebx, [rip+0x2e6c0]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018eee5: lea ebx, [rip+0x2e755]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018ece8: lea ebx, [rip+0x2e952]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018ebb6: lea ebx, [rip+0x2ea84]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018eab9: lea ebx, [rip+0x2eb81]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018ded4: lea ebx, [rip+0x2f626]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018de5a: lea ebx, [rip+0x2f6a0]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018ddcb: lea ebx, [rip+0x2f72f]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018dbc0: lea ebx, [rip+0x2f93a]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018da8e: lea ebx, [rip+0x2fa6c]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018d9c8: lea ebx, [rip+0x2fb32]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018d94a: lea ebx, [rip+0x2fbb0]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018d8b5: lea ebx, [rip+0x2fc45]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018d6b8: lea ebx, [rip+0x2fe42]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018d586: lea ebx, [rip+0x2ff74]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018d47b: lea ebx, [rip+0x3007f]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000016fa22: lea ebx, [rip+0x4e5d8]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016f6c4: lea ebx, [rip+0x4e936]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016f86f: lea ebx, [rip+0x4e9cb]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016f544: lea ebx, [rip+0x4eab6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016f607: lea ebx, [rip+0x4ec33]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016f3c4: lea ebx, [rip+0x4ec36]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016f487: lea ebx, [rip+0x4edb3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016f244: lea ebx, [rip+0x4edb6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016f307: lea ebx, [rip+0x4ef33]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016f0c4: lea ebx, [rip+0x4ef36]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016f188: lea ebx, [rip+0x4f0b2]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016ef44: lea ebx, [rip+0x4f0b6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016f007: lea ebx, [rip+0x4f233]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016edc4: lea ebx, [rip+0x4f236]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016ee87: lea ebx, [rip+0x4f3b3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016ec44: lea ebx, [rip+0x4f3b6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016ed07: lea ebx, [rip+0x4f533]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016eac4: lea ebx, [rip+0x4f536]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016eb87: lea ebx, [rip+0x4f6b3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016e944: lea ebx, [rip+0x4f6b6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016ea07: lea ebx, [rip+0x4f833]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016e7c4: lea ebx, [rip+0x4f836]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016e887: lea ebx, [rip+0x4f9b3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016e644: lea ebx, [rip+0x4f9b6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016e707: lea ebx, [rip+0x4fb33]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016e4c4: lea ebx, [rip+0x4fb36]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016e587: lea ebx, [rip+0x4fcb3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016e344: lea ebx, [rip+0x4fcb6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016e407: lea ebx, [rip+0x4fe33]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016e1c4: lea ebx, [rip+0x4fe36]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016e04b: lea ebx, [rip+0x4ffaf]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016e287: lea ebx, [rip+0x4ffb3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016e107: lea ebx, [rip+0x50133]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016de40: lea ebx, [rip+0x501ba]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016dfca: lea ebx, [rip+0x50270]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016de63: lea ebx, [rip+0x503d7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016df20: lea ebx, [rip+0x5059a]; sub rdx, 0x80; movsxd r9, [r11+r9*4]; add r9, r11; notrack jmp r9; 
0x0000000016deb9: lea ebx, [rip+0x505c1]; sub rdx, 0x80; movsxd r9, [r11+r9*4]; add r9, r11; notrack jmp r9; 
0x0000000016ceee: lea ebx, [rip+0x50c0c]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016cbc4: lea ebx, [rip+0x50f36]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016cd5b: lea ebx, [rip+0x50fdf]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016ca44: lea ebx, [rip+0x510b6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016cb07: lea ebx, [rip+0x51233]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016c8c4: lea ebx, [rip+0x51236]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016c987: lea ebx, [rip+0x513b3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016c744: lea ebx, [rip+0x513b6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016c807: lea ebx, [rip+0x51533]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016c5c4: lea ebx, [rip+0x51536]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016c688: lea ebx, [rip+0x516b2]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016c444: lea ebx, [rip+0x516b6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016c507: lea ebx, [rip+0x51833]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016c2c4: lea ebx, [rip+0x51836]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016c387: lea ebx, [rip+0x519b3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016c144: lea ebx, [rip+0x519b6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016c207: lea ebx, [rip+0x51b33]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016bfc4: lea ebx, [rip+0x51b36]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016c087: lea ebx, [rip+0x51cb3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016be44: lea ebx, [rip+0x51cb6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016bf07: lea ebx, [rip+0x51e33]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016bcc4: lea ebx, [rip+0x51e36]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016bd87: lea ebx, [rip+0x51fb3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016bb44: lea ebx, [rip+0x51fb6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016bc07: lea ebx, [rip+0x52133]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b9c4: lea ebx, [rip+0x52136]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016ba87: lea ebx, [rip+0x522b3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b844: lea ebx, [rip+0x522b6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b907: lea ebx, [rip+0x52433]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b6c4: lea ebx, [rip+0x52436]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b54b: lea ebx, [rip+0x525af]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b787: lea ebx, [rip+0x525b3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b2e5: lea ebx, [rip+0x52655]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b228: lea ebx, [rip+0x52712]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b607: lea ebx, [rip+0x52733]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b360: lea ebx, [rip+0x5279a]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b13d: lea ebx, [rip+0x527fd]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b4ca: lea ebx, [rip+0x52870]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b072: lea ebx, [rip+0x528c8]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b34c: lea ebx, [rip+0x529ee]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b420: lea ebx, [rip+0x52b9a]; sub rdx, 0x80; movsxd r9, [r11+r9*4]; add r9, r11; notrack jmp r9; 
0x0000000016b3be: lea ebx, [rip+0x52bbc]; sub rdx, 0x80; movsxd r9, [r11+r9*4]; add r9, r11; notrack jmp r9; 
0x0000000016a053: lea ebx, [rip+0x538e7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169fb5: lea ebx, [rip+0x53985]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169f03: lea ebx, [rip+0x53a37]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169e65: lea ebx, [rip+0x53ad5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169db3: lea ebx, [rip+0x53b87]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169d15: lea ebx, [rip+0x53c25]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169c63: lea ebx, [rip+0x53cd7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169bc5: lea ebx, [rip+0x53d75]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169b13: lea ebx, [rip+0x53e27]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169a75: lea ebx, [rip+0x53ec5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001699c3: lea ebx, [rip+0x53f77]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169925: lea ebx, [rip+0x54015]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169873: lea ebx, [rip+0x540c7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001697d5: lea ebx, [rip+0x54165]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169723: lea ebx, [rip+0x54217]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169688: lea ebx, [rip+0x542b2]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001695d3: lea ebx, [rip+0x54367]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169535: lea ebx, [rip+0x54405]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169483: lea ebx, [rip+0x544b7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001693e5: lea ebx, [rip+0x54555]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169333: lea ebx, [rip+0x54607]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169295: lea ebx, [rip+0x546a5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001691e3: lea ebx, [rip+0x54757]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169145: lea ebx, [rip+0x547f5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169093: lea ebx, [rip+0x548a7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168ff5: lea ebx, [rip+0x54945]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168f43: lea ebx, [rip+0x549f7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168ea5: lea ebx, [rip+0x54a95]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168df3: lea ebx, [rip+0x54b47]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168d55: lea ebx, [rip+0x54be5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168ca7: lea ebx, [rip+0x54c93]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168bb6: lea ebx, [rip+0x54d84]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168af7: lea ebx, [rip+0x54e43]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168a8d: lea ebx, [rip+0x54ead]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016898e: lea ebx, [rip+0x54fac]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168754: lea ebx, [rip+0x55026]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001688c9: lea ebx, [rip+0x55071]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016867a: lea ebx, [rip+0x55100]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168856: lea ebx, [rip+0x55264]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x000000001687fc: lea ebx, [rip+0x5527e]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x00000000167673: lea ebx, [rip+0x56107]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001675d5: lea ebx, [rip+0x561a5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000167523: lea ebx, [rip+0x56257]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000167485: lea ebx, [rip+0x562f5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001673d3: lea ebx, [rip+0x563a7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000167335: lea ebx, [rip+0x56445]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000167283: lea ebx, [rip+0x564f7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001671e5: lea ebx, [rip+0x56595]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000167133: lea ebx, [rip+0x56647]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000167095: lea ebx, [rip+0x566e5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166fe3: lea ebx, [rip+0x56797]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166f45: lea ebx, [rip+0x56835]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166e93: lea ebx, [rip+0x568e7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166df5: lea ebx, [rip+0x56985]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166d43: lea ebx, [rip+0x56a37]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166ca8: lea ebx, [rip+0x56ad2]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166bf3: lea ebx, [rip+0x56b87]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166b55: lea ebx, [rip+0x56c25]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166aa3: lea ebx, [rip+0x56cd7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166a05: lea ebx, [rip+0x56d75]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166953: lea ebx, [rip+0x56e27]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001668b5: lea ebx, [rip+0x56ec5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166803: lea ebx, [rip+0x56f77]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166765: lea ebx, [rip+0x57015]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001666b3: lea ebx, [rip+0x570c7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166615: lea ebx, [rip+0x57165]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166563: lea ebx, [rip+0x57217]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001664c5: lea ebx, [rip+0x572b5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166413: lea ebx, [rip+0x57367]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166375: lea ebx, [rip+0x57405]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001662c7: lea ebx, [rip+0x574b3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001661d6: lea ebx, [rip+0x575a4]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166117: lea ebx, [rip+0x57663]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001660ad: lea ebx, [rip+0x576cd]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165fae: lea ebx, [rip+0x577cc]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165ee9: lea ebx, [rip+0x57891]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165e76: lea ebx, [rip+0x57a84]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x00000000165e15: lea ebx, [rip+0x57aa5]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x000000000bb3ea: lea ebx, [rip+0xf41d4]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000bac66: lea ebx, [rip+0xf4958]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000bac3d: lea ebx, [rip+0xf4981]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000bac1d: lea ebx, [rip+0xf49a1]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000babf4: lea ebx, [rip+0xf49ca]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000babc5: lea ebx, [rip+0xf49f9]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000baba6: lea ebx, [rip+0xf4a18]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000bab21: lea ebx, [rip+0xf4a1d]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000bab06: lea ebx, [rip+0xf4a38]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000bab84: lea ebx, [rip+0xf4a3a]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000bab54: lea ebx, [rip+0xf4a6a]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000baad1: lea ebx, [rip+0xf4a6d]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000baaa5: lea ebx, [rip+0xf4a99]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000baa8f: lea ebx, [rip+0xf4aaf]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000baa6d: lea ebx, [rip+0xf4ad1]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000baa48: lea ebx, [rip+0xf4af6]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000baa2b: lea ebx, [rip+0xf4b13]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000ba9b4: lea ebx, [rip+0xf4b8a]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000ba176: lea ebx, [rip+0xf5348]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000ba141: lea ebx, [rip+0xf537d]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000ba115: lea ebx, [rip+0xf53a9]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000ba0ff: lea ebx, [rip+0xf53bf]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000ba0dd: lea ebx, [rip+0xf53e1]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000ba0b8: lea ebx, [rip+0xf5406]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000ba09b: lea ebx, [rip+0xf5423]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000ba043: lea ebx, [rip+0xf547b]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b998a: lea ebx, [rip+0xf5a60]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b9891: lea ebx, [rip+0xf5be9]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b987b: lea ebx, [rip+0xf5bff]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b985b: lea ebx, [rip+0xf5c1f]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8da6: lea ebx, [rip+0xf6644]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8d7d: lea ebx, [rip+0xf666d]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8d5d: lea ebx, [rip+0xf668d]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8d34: lea ebx, [rip+0xf66b6]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8d05: lea ebx, [rip+0xf66e5]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8ce6: lea ebx, [rip+0xf6704]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8c61: lea ebx, [rip+0xf6709]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8cc4: lea ebx, [rip+0xf6726]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8c94: lea ebx, [rip+0xf6756]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8b7f: lea ebx, [rip+0xf67eb]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8b51: lea ebx, [rip+0xf6819]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8b28: lea ebx, [rip+0xf6842]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b84a6: lea ebx, [rip+0xf6e38]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8471: lea ebx, [rip+0xf6e6d]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8445: lea ebx, [rip+0xf6e99]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b842f: lea ebx, [rip+0xf6eaf]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b840d: lea ebx, [rip+0xf6ed1]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b83e8: lea ebx, [rip+0xf6ef6]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b83cb: lea ebx, [rip+0xf6f13]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8373: lea ebx, [rip+0xf6f6b]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b813a: lea ebx, [rip+0xf70d0]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8041: lea ebx, [rip+0xf7259]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b802b: lea ebx, [rip+0xf726f]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b800b: lea ebx, [rip+0xf728f]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b76c6: lea ebx, [rip+0xf7b44]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b769d: lea ebx, [rip+0xf7b6d]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b767d: lea ebx, [rip+0xf7b8d]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b7654: lea ebx, [rip+0xf7bb6]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b7625: lea ebx, [rip+0xf7be5]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b7606: lea ebx, [rip+0xf7c04]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b7581: lea ebx, [rip+0xf7c09]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b75e4: lea ebx, [rip+0xf7c26]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b75b4: lea ebx, [rip+0xf7c56]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b74af: lea ebx, [rip+0xf7cdb]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b7481: lea ebx, [rip+0xf7d09]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b7458: lea ebx, [rip+0xf7d32]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6e66: lea ebx, [rip+0xf829c]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6e31: lea ebx, [rip+0xf82d1]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6e05: lea ebx, [rip+0xf82fd]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6def: lea ebx, [rip+0xf8313]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6dcd: lea ebx, [rip+0xf8335]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6da8: lea ebx, [rip+0xf835a]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6d8b: lea ebx, [rip+0xf8377]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6d33: lea ebx, [rip+0xf83cf]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000092048: lea ebx, [rsi+0x1]; mov rdi, r15; movzx esi, byte ptr [rsi]; call qword ptr [rax+0x18]; 
0x000000000920bb: lea ebx, [rsi+0x1]; movzx esi, byte ptr [rsi]; call qword ptr [rax+0x18]; 
0x000000000989fa: lea ecx, [r8+0x280]; shr ecx, 0x3; rep stosq [rdi]; pop rbp; ret; 
0x000000000bd05b: lea ecx, [rax+0x1]; lea r9, [rsp+0x28]; call rbx; 
0x000000000989fb: lea ecx, [rax+0x280]; shr ecx, 0x3; rep stosq [rdi]; pop rbp; ret; 
0x000000000bd1b5: lea ecx, [rax+0x4]; lea r9, [rsp+0x18]; call rbx; 
0x000000000bd5ce: lea ecx, [rax+0x4]; lea r9, [rsp+0x20]; call rbx; 
0x0000000011039a: lea ecx, [rbp+0x28]; mov edx, 0x1; call qword ptr [rbp+0x40]; 
0x000000001106fa: lea ecx, [rbp+0x28]; mov edx, 0x2; call qword ptr [rbp+0x40]; 
0x0000000011067a: lea ecx, [rbp+0x28]; mov edx, 0x5; call qword ptr [rbp+0x40]; 
0x0000000008a82b: lea ecx, [rbp-0x40]; mov rcx, r14; mov rdi, r15; call r12; 
0x0000000010ff7f: lea ecx, [rbx+0x28]; mov rsi, r14; mov edx, [rdx+rax]; call qword ptr [rbx+0x40]; 
0x00000000080c75: lea ecx, [rbx+0x40]; lea rdx, [rbx+0x34]; mov esi, 0x1; mov rdi, rbx; call rax; 
0x0000000008126f: lea ecx, [rbx+0x40]; mov esi, 0x1; mov rdi, rbx; call r8; 
0x00000000165e20: lea ecx, [rbx+rcx]; notrack jmp r9; 
0x000000000b6d3e: lea ecx, [rbx+rcx]; notrack jmp rcx; 
0x00000000074054: lea ecx, [rbx+rdx]; add rdx, r15; call qword ptr [rax+r9*8]; 
0x0000000016009e: lea ecx, [rbx+rsi]; mov esi, [rsp+0x8]; call rax; 
0x000000001662f1: lea ecx, [rcx-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000153098: lea ecx, [rcx]; add [rax-0x73], cl; adc eax, 0x9dd9e; mov fs:[rax], rdx; ret; 
0x0000000013f002: lea ecx, [rdi+0x1]; test al, al; jne short 0x000000000013efed; mov eax, r10d; ret; 
0x0000000011f8fe: lea ecx, [rdi+rdi]; shr eax, cl; and eax, 0x3; ret; 
0x000000001782c6: lea ecx, [rdx+0x10]; jne 0x0000000000178810; ret; 
0x0000000017c657: lea ecx, [rdx+0x10]; jne 0x000000000017cc60; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x000000001784bc: lea ecx, [rdx+0x1]; jne 0x0000000000178810; ret; 
0x0000000017c85c: lea ecx, [rdx+0x1]; jne 0x000000000017cc60; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x0000000008df58: lea ecx, [rdx+0x1]; mov [rsi+0x28], rcx; mov [rdx], al; mov eax, r8d; ret; 
0x000000001784de: lea ecx, [rdx+0x2]; jne 0x0000000000178810; ret; 
0x0000000017c87f: lea ecx, [rdx+0x2]; jne 0x000000000017cc60; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x0000000015fdd6: lea ecx, [rdx+0x398]; lea r8, [rsp+0x30]; call qword ptr [rax+0x1e0]; 
0x00000000178504: lea ecx, [rdx+0x3]; jne 0x0000000000178810; ret; 
0x0000000017c8a5: lea ecx, [rdx+0x3]; jne 0x000000000017cc60; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x0000000017851c: lea ecx, [rdx+0x4]; jne 0x0000000000178810; ret; 
0x0000000017c8cd: lea ecx, [rdx+0x4]; jne 0x000000000017cc60; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x000000000855ba: lea ecx, [rdx+0x4]; mov [rax], rcx; mov eax, [rdx]; ret; 
0x00000000178542: lea ecx, [rdx+0x5]; jne 0x0000000000178810; ret; 
0x0000000017c8f3: lea ecx, [rdx+0x5]; jne 0x000000000017cc60; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x00000000178564: lea ecx, [rdx+0x6]; jne 0x0000000000178810; ret; 
0x0000000017c925: lea ecx, [rdx+0x6]; jne 0x000000000017cc60; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x00000000178582: lea ecx, [rdx+0x7]; jne 0x0000000000178810; ret; 
0x0000000017c953: lea ecx, [rdx+0x7]; jne 0x000000000017cc60; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x0000000017825e: lea ecx, [rdx+0x8]; jne 0x0000000000178810; ret; 
0x0000000017c5ef: lea ecx, [rdx+0x8]; jne 0x000000000017cc60; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x000000001785a4: lea ecx, [rdx+0x9]; jne 0x0000000000178810; ret; 
0x0000000017c985: lea ecx, [rdx+0x9]; jne 0x000000000017cc60; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x000000001785c4: lea ecx, [rdx+0xa]; jne 0x0000000000178810; ret; 
0x0000000017c9b5: lea ecx, [rdx+0xa]; jne 0x000000000017cc60; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x000000001785e4: lea ecx, [rdx+0xb]; jne 0x0000000000178810; ret; 
0x0000000017c9e5: lea ecx, [rdx+0xb]; jne 0x000000000017cc60; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x00000000178604: lea ecx, [rdx+0xc]; jne 0x0000000000178810; ret; 
0x0000000017ca15: lea ecx, [rdx+0xc]; jne 0x000000000017cc60; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x00000000178626: lea ecx, [rdx+0xd]; jne 0x0000000000178810; ret; 
0x0000000017ca47: lea ecx, [rdx+0xd]; jne 0x000000000017cc60; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x00000000178646: lea ecx, [rdx+0xe]; jne 0x0000000000178810; ret; 
0x0000000017ca77: lea ecx, [rdx+0xe]; jne 0x000000000017cc60; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x00000000178666: lea ecx, [rdx+0xf]; jne 0x0000000000178810; ret; 
0x0000000017caa7: lea ecx, [rdx+0xf]; jne 0x000000000017cc60; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x00000000123129: lea ecx, [rdx+rcx*4]; mov ecx, [rcx+rsi]; test ecx, ecx; jne short 0x0000000000123138; ret; 
0x00000000123192: lea ecx, [rdx+rcx*4]; mov ecx, [rcx+rsi]; test ecx, ecx; jne short 0x00000000001231a0; ret; 
0x00000000123a79: lea ecx, [rdx+rcx*4]; mov ecx, [rcx+rsi]; test ecx, ecx; jne short 0x0000000000123a88; ret; 
0x00000000123ad6: lea ecx, [rdx+rcx*4]; mov ecx, [rcx+rsi]; test ecx, ecx; jne short 0x0000000000123ae8; ret; 
0x0000000017df37: lea ecx, [rdx+rcx-0x10]; movzx eax, byte ptr [rdi+rcx]; movzx edx, byte ptr [rsi+rcx]; sub eax, edx; ret; 
0x000000001092d7: lea ecx, [rdx]; add [rax+0x63], cl; add al, 0x9a; add rax, rdx; notrack jmp rax; 
0x000000000a8979: lea ecx, [rip+0x10651d]; mov ecx, eax; movsxd rcx, [r9+rcx*4]; add rcx, r9; notrack jmp rcx; 
0x00000000080f0c: lea ecx, [rip+0x12dbb2]; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x00000000080758: lea ecx, [rip+0x12e122]; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x0000000007df9f: lea ecx, [rip+0x13069b]; mov r9, rsi; movsxd rax, [rcx+rax*4]; add rax, rdx; jmp rax; 
0x00000000187f7e: lea ecx, [rip+0x1353c]; mov edx, [rcx+rdx*4]; mov eax, [rcx+rax*4]; sub eax, edx; ret; 
0x0000000006c32c: lea ecx, [rip+0x14191e]; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x00000000064952: lea ecx, [rip+0x1490f8]; movzx edx, dl; movsxd rax, [rcx+rdx*4]; add rax, rcx; notrack jmp rax; 
0x0000000006364e: lea ecx, [rip+0x149b94]; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x00000000063542: lea ecx, [rip+0x149c38]; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x0000000018689d: lea ecx, [rip+0x14c1d]; mov eax, [rcx+rax*4]; mov edx, [rcx+rdx*4]; sub eax, edx; ret; 
0x000000001865c9: lea ecx, [rip+0x14ef1]; mov edx, [rcx+rdx*4]; mov eax, [rcx+rax*4]; sub eax, edx; ret; 
0x0000000008e5e6: lea ecx, [rip+0x15a8b4]; mov [rdx+0xe0], rcx; pop rbx; ret; 
0x000000001851b4: lea ecx, [rip+0x16306]; mov eax, [rcx+rax*4]; mov edx, [rcx+rdx*4]; sub eax, edx; ret; 
0x000000001836be: lea ecx, [rip+0x17dfc]; mov edx, [rcx+rdx*4]; mov eax, [rcx+rax*4]; sub eax, edx; ret; 
0x00000000181a2d: lea ecx, [rip+0x19a8d]; mov eax, [rcx+rax*4]; mov edx, [rcx+rdx*4]; sub eax, edx; ret; 
0x000000001816f9: lea ecx, [rip+0x19dc1]; mov edx, [rcx+rdx*4]; mov eax, [rcx+rax*4]; sub eax, edx; ret; 
0x0000000017fe24: lea ecx, [rip+0x1b696]; mov eax, [rcx+rax*4]; mov edx, [rcx+rdx*4]; sub eax, edx; ret; 
0x000000001130f4: lea ecx, [rip+0x64d8f700]; mov [rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000011309c: lea ecx, [rip+0x64d8f700]; mov [rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x000000001481e7: lea ecx, [rip+0x6a793]; mov edx, r8d; movsxd rax, [rcx+rdx*4]; add rax, rcx; notrack jmp rax; 
0x0000000010b148: lea ecx, [rip+0xa715a]; movzx eax, al; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x00000000109083: lea ecx, [rip+0xa8edf]; mov edx, ebp; movsxd rax, [rcx+rdx*4]; add rax, rcx; notrack jmp rax; 
0x000000000da963: lea ecx, [rip+0xd5873]; mov edx, r8d; movsxd rax, [rcx+rdx*4]; add rax, rcx; notrack jmp rax; 
0x000000000d8335: lea ecx, [rip+0xd7ac9]; movzx edi, cl; movsxd rdx, [r9+rdi*4]; add rdx, r9; notrack jmp rdx; 
0x0000000015f86c: lea ecx, [rsi+0x398]; push 0x0; call qword ptr [rax+0x1e0]; 
0x0000000015f81b: lea ecx, [rsi+0x398]; push 0x2; call qword ptr [rax+0x1e0]; 
0x00000000123396: lea ecx, [rsi+rcx*4]; add eax, [rcx+rdx]; ret; 
0x0000000012337b: lea ecx, [rsi+rcx*4]; mov edx, [rcx+rdx]; test edx, edx; jne short 0x0000000000123390; ret; 
0x00000000123cab: lea ecx, [rsi+rcx*4]; mov edx, [rcx+rdx]; test edx, edx; jne short 0x0000000000123cc0; ret; 
0x0000000015194d: lea ecx, [rsp+0x14]; call qword ptr [rax]; 
0x000000000bd35c: lea ecx, [rsp+0x18]; call r13; 
0x0000000008a5e2: lea ecx, [rsp+0x18]; call rbp; 
0x000000000bd1b9: lea ecx, [rsp+0x18]; call rbx; 
0x00000000152391: lea ecx, [rsp+0x1c]; call qword ptr [rax]; 
0x0000000014732f: lea ecx, [rsp+0x20]; call qword ptr [rax]; 
0x000000000bd562: lea ecx, [rsp+0x20]; call rbx; 
0x000000000bd05f: lea ecx, [rsp+0x28]; call rbx; 
0x0000000014713a: lea ecx, [rsp+0x2c]; call qword ptr [rax]; 
0x000000000bd79d: lea ecx, [rsp+0x30]; call rbx; 
0x00000000152ccc: lea ecx, [rsp+0x3a]; call qword ptr [rax]; 
0x0000000014784a: lea ecx, [rsp+0x40]; call qword ptr [rax]; 
0x0000000011509c: lea ecx, [rsp+0x40]; test eax, eax; jne short 0x00000000001150d0; mov eax, 0x10e; syscall; 
0x00000000127e80: lea edi, [r13+0x2000001]; mov rsi, rbp; mov [rsp+0x10], rax; mov rdx, rax; call qword ptr [r12+0x28]; 
0x0000000013b937: lea edi, [rax+rcx+0x2]; cmp r8, rdi; jae short 0x000000000013b953; mov eax, 0xffffffff; ret; 
0x0000000004486d: lea edi, [rax+rsi]; mov rdx, rbp; mov rsi, r12; mov rdi, r13; call rbx; 
0x00000000127e81: lea edi, [rbp+0x2000001]; mov rsi, rbp; mov [rsp+0x10], rax; mov rdx, rax; call qword ptr [r12+0x28]; 
0x000000001507f7: lea edi, [rbp+0x58]; call rax; 
0x0000000014fd57: lea edi, [rbp+0x68]; call rax; 
0x00000000035072: lea edi, [rbp+0x80]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000004725f: lea edi, [rbp+0x908]; call qword ptr [rbp+0xf10]; 
0x0000000004722c: lea edi, [rbp+0x908]; mov rdx, fs:[rax]; mov [rbx+0x18], rdx; mov fs:[rax], rbx; call qword ptr [rbp+0xf08]; 
0x0000000014cf2a: lea edi, [rbp+0xc8]; call rax; 
0x0000000007d3af: lea edi, [rbp-0x460]; mov rdx, r12; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000007d2c9: lea edi, [rbp-0x460]; xor esi, esi; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000076caf: lea edi, [rbp-0x470]; mov rdx, r12; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000076bc0: lea edi, [rbp-0x470]; xor esi, esi; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000006beef: lea edi, [rbp-0x500]; mov rdx, r13; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000006c239: lea edi, [rbp-0x500]; xor esi, esi; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000063d57: lea edi, [rbp-0x5e0]; mov rdx, r12; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000064103: lea edi, [rbp-0x5e0]; xor esi, esi; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000024155: lea edi, [rbx+0x480]; add rdx, 0x988; cmp r15, rdx; je short 0x0000000000024177; call rax; 
0x000000000b767f: lea edi, [rbx+0xf]; add [rbx+0x63], cl; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000dd010: lea edi, [rdi*8+0x2]; syscall; 
0x000000000b78cd: lea edi, [rdi+0x10]; jne 0x00000000000b7fa0; ret; 
0x000000000b8ff1: lea edi, [rdi+0x10]; jne 0x00000000000b97f0; ret; 
0x000000000b78f0: lea edi, [rdi+0x11]; jne 0x00000000000b7fa0; ret; 
0x000000000b9014: lea edi, [rdi+0x11]; jne 0x00000000000b97f0; ret; 
0x000000000b7915: lea edi, [rdi+0x12]; jne 0x00000000000b7fa0; ret; 
0x000000000b9039: lea edi, [rdi+0x12]; jne 0x00000000000b97f0; ret; 
0x000000000b7933: lea edi, [rdi+0x13]; jne 0x00000000000b7fa0; ret; 
0x000000000b9067: lea edi, [rdi+0x13]; jne 0x00000000000b97f0; ret; 
0x000000000b7953: lea edi, [rdi+0x14]; jne 0x00000000000b7fa0; ret; 
0x000000000b9097: lea edi, [rdi+0x14]; jne 0x00000000000b97f0; ret; 
0x000000000b7976: lea edi, [rdi+0x15]; jne 0x00000000000b7fa0; ret; 
0x000000000b90ca: lea edi, [rdi+0x15]; jne 0x00000000000b97f0; ret; 
0x000000000b7995: lea edi, [rdi+0x16]; jne 0x00000000000b7fa0; ret; 
0x000000000b90f9: lea edi, [rdi+0x16]; jne 0x00000000000b97f0; ret; 
0x000000000b79b5: lea edi, [rdi+0x17]; jne 0x00000000000b7fa0; ret; 
0x000000000b9129: lea edi, [rdi+0x17]; jne 0x00000000000b97f0; ret; 
0x000000000b79d5: lea edi, [rdi+0x18]; jne 0x00000000000b7fa0; ret; 
0x000000000b9159: lea edi, [rdi+0x18]; jne 0x00000000000b97f0; ret; 
0x000000000b79f8: lea edi, [rdi+0x19]; jne 0x00000000000b7fa0; ret; 
0x000000000b918c: lea edi, [rdi+0x19]; jne 0x00000000000b97f0; ret; 
0x000000000b76e7: lea edi, [rdi+0x1]; jne 0x00000000000b7fa0; ret; 
0x000000000b8dca: lea edi, [rdi+0x1]; jne 0x00000000000b97f0; ret; 
0x0000000018a1dd: lea edi, [rdi+0x1]; jne 0x000000000018a610; vzeroupper; ret; 
0x0000000018aef5: lea edi, [rdi+0x1]; jne 0x000000000018b340; vzeroupper; ret; 
0x000000000b7a2d: lea edi, [rdi+0x1a]; jne 0x00000000000b7fa0; ret; 
0x000000000b91c1: lea edi, [rdi+0x1a]; jne 0x00000000000b97f0; ret; 
0x000000000b7a5b: lea edi, [rdi+0x1b]; jne 0x00000000000b7fa0; ret; 
0x000000000b91ef: lea edi, [rdi+0x1b]; jne 0x00000000000b97f0; ret; 
0x000000000b7a8b: lea edi, [rdi+0x1c]; jne 0x00000000000b7fa0; ret; 
0x000000000b921f: lea edi, [rdi+0x1c]; jne 0x00000000000b97f0; ret; 
0x000000000b7ab7: lea edi, [rdi+0x1d]; jne 0x00000000000b7fa0; ret; 
0x000000000b924b: lea edi, [rdi+0x1d]; jne 0x00000000000b97f0; ret; 
0x000000000b7ae7: lea edi, [rdi+0x1e]; jne 0x00000000000b7fa0; ret; 
0x000000000b927b: lea edi, [rdi+0x1e]; jne 0x00000000000b97f0; ret; 
0x000000000b7b17: lea edi, [rdi+0x1f]; jne 0x00000000000b7fa0; ret; 
0x000000000b92ab: lea edi, [rdi+0x1f]; jne 0x00000000000b97f0; ret; 
0x000000000b7b47: lea edi, [rdi+0x20]; jne 0x00000000000b7fa0; ret; 
0x000000000b92db: lea edi, [rdi+0x20]; jne 0x00000000000b97f0; ret; 
0x000000000b770b: lea edi, [rdi+0x2]; jne 0x00000000000b7fa0; ret; 
0x000000000b8def: lea edi, [rdi+0x2]; jne 0x00000000000b97f0; ret; 
0x0000000018a38b: lea edi, [rdi+0x2]; jne 0x000000000018a610; vzeroupper; ret; 
0x0000000018b0bf: lea edi, [rdi+0x2]; jne 0x000000000018b340; vzeroupper; ret; 
0x000000000b772e: lea edi, [rdi+0x3]; jne 0x00000000000b7fa0; ret; 
0x000000000b8e12: lea edi, [rdi+0x3]; jne 0x00000000000b97f0; ret; 
0x0000000018a3af: lea edi, [rdi+0x3]; jne 0x000000000018a610; vzeroupper; ret; 
0x0000000018b0e3: lea edi, [rdi+0x3]; jne 0x000000000018b340; vzeroupper; ret; 
0x000000000b7749: lea edi, [rdi+0x4]; jne 0x00000000000b7fa0; ret; 
0x000000000b8e2d: lea edi, [rdi+0x4]; jne 0x00000000000b97f0; ret; 
0x0000000018a3c9: lea edi, [rdi+0x4]; jne 0x000000000018a610; vzeroupper; ret; 
0x0000000018b0fd: lea edi, [rdi+0x4]; jne 0x000000000018b340; vzeroupper; ret; 
0x000000000b776c: lea edi, [rdi+0x5]; jne 0x00000000000b7fa0; ret; 
0x000000000b8e50: lea edi, [rdi+0x5]; jne 0x00000000000b97f0; ret; 
0x000000000b7791: lea edi, [rdi+0x6]; jne 0x00000000000b7fa0; ret; 
0x000000000b8e75: lea edi, [rdi+0x6]; jne 0x00000000000b97f0; ret; 
0x000000000b77af: lea edi, [rdi+0x7]; jne 0x00000000000b7fa0; ret; 
0x000000000b8e93: lea edi, [rdi+0x7]; jne 0x00000000000b97f0; ret; 
0x000000000b77cb: lea edi, [rdi+0x8]; jne 0x00000000000b7fa0; ret; 
0x000000000b8eaf: lea edi, [rdi+0x8]; jne 0x00000000000b97f0; ret; 
0x0000000015f3ab: lea edi, [rdi+0x908]; call qword ptr [r15+0xf08]; 
0x0000000015f533: lea edi, [rdi+0x908]; call qword ptr [r15+0xf10]; 
0x000000000b77ee: lea edi, [rdi+0x9]; jne 0x00000000000b7fa0; ret; 
0x000000000b8ed2: lea edi, [rdi+0x9]; jne 0x00000000000b97f0; ret; 
0x000000000b7813: lea edi, [rdi+0xa]; jne 0x00000000000b7fa0; ret; 
0x000000000b8ef7: lea edi, [rdi+0xa]; jne 0x00000000000b97f0; ret; 
0x000000000b7831: lea edi, [rdi+0xb]; jne 0x00000000000b7fa0; ret; 
0x000000000b8f25: lea edi, [rdi+0xb]; jne 0x00000000000b97f0; ret; 
0x000000000b7851: lea edi, [rdi+0xc]; jne 0x00000000000b7fa0; ret; 
0x000000000b8f45: lea edi, [rdi+0xc]; jne 0x00000000000b97f0; ret; 
0x000000000b7873: lea edi, [rdi+0xd]; jne 0x00000000000b7fa0; ret; 
0x000000000b8f67: lea edi, [rdi+0xd]; jne 0x00000000000b97f0; ret; 
0x000000000b7893: lea edi, [rdi+0xe]; jne 0x00000000000b7fa0; ret; 
0x000000000b8f97: lea edi, [rdi+0xe]; jne 0x00000000000b97f0; ret; 
0x000000000b78b3: lea edi, [rdi+0xf]; jne 0x00000000000b7fa0; ret; 
0x000000000b8fc7: lea edi, [rdi+0xf]; jne 0x00000000000b97f0; ret; 
0x0000000018a3f4: lea edi, [rdi+rdx+0x1]; jne 0x000000000018a610; vzeroupper; ret; 
0x0000000018b128: lea edi, [rdi+rdx+0x1]; jne 0x000000000018b340; vzeroupper; ret; 
0x000000001663f4: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000166406; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000166544: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000166556; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000166694: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x00000000001666a6; movaps [rdi], xmm4; notrack jmp r9; 
0x000000001667e4: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x00000000001667f6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000166934: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000166946; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000166a84: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000166a96; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000166bd4: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000166be6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000166d24: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000166d36; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000166e74: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000166e86; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000166fc4: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000166fd6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000167114: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000167126; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000167264: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000167276; movaps [rdi], xmm4; notrack jmp r9; 
0x000000001673b4: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x00000000001673c6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000167504: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000167516; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000167654: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000167666; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000168dd4: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000168de6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000168f24: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000168f36; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000169074: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000169086; movaps [rdi], xmm4; notrack jmp r9; 
0x000000001691c4: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x00000000001691d6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000169314: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000169326; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000169464: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000169476; movaps [rdi], xmm4; notrack jmp r9; 
0x000000001695b4: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x00000000001695c6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000169704: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000169716; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000169854: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000169866; movaps [rdi], xmm4; notrack jmp r9; 
0x000000001699a4: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x00000000001699b6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000169af4: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000169b06; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000169c44: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000169c56; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000169d94: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000169da6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000169ee4: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000169ef6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000016a034: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x000000000016a046; movaps [rdi], xmm4; notrack jmp r9; 
0x000000000a8a51: lea edi, [rip+0x106469]; mov edx, edx; movsxd rdx, [rdi+rdx*4]; add rdx, rdi; notrack jmp rdx; 
0x000000000e1dd8: lea edi, [rip+0x10d702]; syscall; 
0x000000000e1c98: lea edi, [rip+0x10d842]; syscall; 
0x000000000e1be0: lea edi, [rip+0x10d8fa]; syscall; 
0x000000000e1b04: lea edi, [rip+0x10d9ce]; syscall; 
0x000000000e1934: lea edi, [rip+0x10db5e]; syscall; 
0x000000000e1770: lea edi, [rip+0x10dcda]; syscall; 
0x000000000e13b6: lea edi, [rip+0x10e03c]; syscall; 
0x000000000dfea8: lea edi, [rip+0x10f4c2]; syscall; 
0x000000000dfd68: lea edi, [rip+0x10f602]; syscall; 
0x000000000dfcb0: lea edi, [rip+0x10f6ba]; syscall; 
0x000000000df8e4: lea edi, [rip+0x10fa7e]; syscall; 
0x000000000df714: lea edi, [rip+0x10fc0e]; syscall; 
0x000000000df550: lea edi, [rip+0x10fd8a]; syscall; 
0x000000000ddbb8: lea edi, [rip+0x10fdc2]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000ddb72: lea edi, [rip+0x10fe08]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000dd9d0: lea edi, [rip+0x10ffaa]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000dd9a1: lea edi, [rip+0x10ffd9]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000dd8d8: lea edi, [rip+0x1100a2]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000dd8af: lea edi, [rip+0x1100cb]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000dd3dd: lea edi, [rip+0x11059d]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000dec68: lea edi, [rip+0x11061a]; syscall; 
0x000000000d2bc4: lea edi, [rip+0x11c5d6]; syscall; 
0x000000000d2990: lea edi, [rip+0x11c80a]; syscall; 
0x000000000ca330: lea edi, [rip+0x12364a]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000ca14d: lea edi, [rip+0x12382d]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000ca664: lea edi, [rip+0x126b46]; syscall; 
0x00000000080ea8: lea edi, [rip+0x12db5a]; movsxd rcx, [rdi+rcx*4]; add rcx, rdi; notrack jmp rcx; 
0x0000000006c676: lea edi, [rip+0x141690]; movsxd rax, [rdi+r12*4]; add rax, rdi; notrack jmp rax; 
0x00000000064618: lea edi, [rip+0x1492e2]; movzx r12d, r12b; movsxd rax, [rdi+r12*4]; add rax, rdi; notrack jmp rax; 
0x0000000009f95c: lea edi, [rip+0x14f5de]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000009f8b3: lea edi, [rip+0x14f70b]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000009c824: lea edi, [rip+0x150356]; syscall; 
0x0000000009e1d0: lea edi, [rip+0x150d32]; syscall; 
0x0000000009dff0: lea edi, [rip+0x150f12]; syscall; 
0x0000000009de04: lea edi, [rip+0x1510fe]; syscall; 
0x0000000009dd94: lea edi, [rip+0x15116e]; syscall; 
0x0000000009db64: lea edi, [rip+0x15139e]; syscall; 
0x00000000099ac4: lea edi, [rip+0x1530b6]; syscall; 
0x00000000099a64: lea edi, [rip+0x153116]; syscall; 
0x000000000996a4: lea edi, [rip+0x1534d6]; syscall; 
0x00000000099444: lea edi, [rip+0x153736]; syscall; 
0x00000000098ddc: lea edi, [rip+0x153d9e]; syscall; 
0x00000000098da4: lea edi, [rip+0x153dd6]; syscall; 
0x0000000009aa74: lea edi, [rip+0x15440e]; syscall; 
0x00000000099fd8: lea edi, [rip+0x154e9a]; syscall; 
0x00000000096045: lea edi, [rip+0x158e2d]; syscall; 
0x00000000096014: lea edi, [rip+0x158e6e]; syscall; 
0x00000000095d94: lea edi, [rip+0x1590ee]; syscall; 
0x00000000095870: lea edi, [rip+0x159612]; syscall; 
0x00000000094c55: lea edi, [rip+0x159ba5]; syscall; 
0x00000000094a80: lea edi, [rip+0x159d7a]; syscall; 
0x000000000948e4: lea edi, [rip+0x159f16]; syscall; 
0x00000000093956: lea edi, [rip+0x15ae64]; syscall; 
0x00000000093416: lea edi, [rip+0x15b3a4]; syscall; 
0x00000000093072: lea edi, [rip+0x15b748]; syscall; 
0x00000000092d06: lea edi, [rip+0x15bab4]; syscall; 
0x00000000091682: lea edi, [rip+0x15d138]; syscall; 
0x000000000913c2: lea edi, [rip+0x15d3f8]; syscall; 
0x0000000009104e: lea edi, [rip+0x15d76c]; syscall; 
0x00000000084393: lea edi, [rip+0x16a3e7]; syscall; 
0x00000000083f96: lea edi, [rip+0x16a7e4]; syscall; 
0x00000000083eeb: lea edi, [rip+0x16a88f]; syscall; 
0x00000000082024: lea edi, [rip+0x16f186]; syscall; 
0x000000000610d8: lea edi, [rip+0x18d672]; syscall; 
0x00000000060e54: lea edi, [rip+0x18d8f2]; syscall; 
0x0000000005ec80: lea edi, [rip+0x18fabe]; syscall; 
0x0000000005eb40: lea edi, [rip+0x18fbfe]; syscall; 
0x0000000002418d: lea edi, [rip+0x18fcef]; mov rsi, [rax]; xor eax, eax; call qword ptr [rdx+0x1d0]; 
0x000000000240c0: lea edi, [rip+0x18fda2]; mov rsi, [rax]; xor eax, eax; call qword ptr [rdx+0x1d0]; 
0x00000000054da4: lea edi, [rip+0x199986]; syscall; 
0x00000000054bc4: lea edi, [rip+0x199b66]; syscall; 
0x00000000054745: lea edi, [rip+0x199fdd]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000054694: lea edi, [rip+0x19a096]; syscall; 
0x000000000522a8: lea edi, [rip+0x19c252]; syscall; 
0x0000000005212c: lea edi, [rip+0x19c3ce]; syscall; 
0x000000000520f4: lea edi, [rip+0x19c406]; syscall; 
0x000000000478e0: lea edi, [rip+0x1a6bfa]; syscall; 
0x00000000047820: lea edi, [rip+0x1a6cba]; syscall; 
0x00000000047758: lea edi, [rip+0x1a6d82]; syscall; 
0x00000000047680: lea edi, [rip+0x1a6e5a]; syscall; 
0x00000000046778: lea edi, [rip+0x1a750a]; syscall; 
0x000000000466b3: lea edi, [rip+0x1a75cf]; syscall; 
0x00000000046511: lea edi, [rip+0x1a7771]; syscall; 
0x00000000046437: lea edi, [rip+0x1a784b]; syscall; 
0x0000000003859f: lea edi, [rip+0x1b555b]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003853e: lea edi, [rip+0x1b55bc]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000038501: lea edi, [rip+0x1b5731]; syscall; 
0x00000000036b7e: lea edi, [rip+0x1b707c]; syscall; 
0x0000000003658a: lea edi, [rip+0x1b7630]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000036521: lea edi, [rip+0x1b7699]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000363f2: lea edi, [rip+0x1b77c8]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000036392: lea edi, [rip+0x1b7828]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000036284: lea edi, [rip+0x1b78f6]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000036218: lea edi, [rip+0x1b7962]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035f81: lea edi, [rip+0x1b79f9]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035e75: lea edi, [rip+0x1b7b05]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035f53: lea edi, [rip+0x1b7ba7]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035d07: lea edi, [rip+0x1b7c73]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035e4e: lea edi, [rip+0x1b7cac]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035cd5: lea edi, [rip+0x1b7e25]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035904: lea edi, [rip+0x1b8076]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000359cd: lea edi, [rip+0x1b81ad]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003592b: lea edi, [rip+0x1b81cf]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035988: lea edi, [rip+0x1b81f2]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035843: lea edi, [rip+0x1b830f]; syscall; 
0x00000000035826: lea edi, [rip+0x1b832c]; syscall; 
0x0000000003575e: lea edi, [rip+0x1b83f4]; syscall; 
0x000000000345b9: lea edi, [rip+0x1b9541]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000033ae5: lea edi, [rip+0x1b9e95]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000033a0a: lea edi, [rip+0x1b9f70]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000033993: lea edi, [rip+0x1b9fe7]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000338f9: lea edi, [rip+0x1ba081]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003335f: lea edi, [rip+0x1ba61b]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000332f5: lea edi, [rip+0x1ba685]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000330f5: lea edi, [rip+0x1ba885]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000310c4: lea edi, [rip+0x1bc8b6]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000030cbc: lea edi, [rip+0x1bccbe]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000030b6a: lea edi, [rip+0x1bce10]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000030a82: lea edi, [rip+0x1bcef8]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000309f5: lea edi, [rip+0x1bcf85]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000307c0: lea edi, [rip+0x1bd1ba]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000030778: lea edi, [rip+0x1bd202]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000026f6d: lea edi, [rip+0x1c69e1]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000026078: lea edi, [rip+0x1cb132]; syscall; 
0x00000000025f0c: lea edi, [rip+0x1cb29e]; syscall; 
0x00000000025dec: lea edi, [rip+0x1cb3be]; syscall; 
0x00000000022847: lea edi, [rip+0x1cb403]; syscall; 
0x0000000019418f: lea edi, [rip+0x2a48b]; movsxd r12, [rdi+r12*4]; add rdi, r12; notrack jmp rdi; 
0x00000000193f76: lea edi, [rip+0x2a638]; movsxd rcx, [rdi+r12*4]; add rcx, rdi; notrack jmp rcx; 
0x000000001987f0: lea edi, [rip+0x55492]; syscall; 
0x000000001989b0: lea edi, [rip+0x55e4a]; syscall; 
0x00000000198ce0: lea edi, [rip+0x57832]; syscall; 
0x00000000150682: lea edi, [rip+0x6379c]; mov ecx, esi; movsxd rax, [rdi+rcx*4]; add rax, rdi; notrack jmp rax; 
0x0000000014fd9e: lea edi, [rip+0x64040]; mov ecx, esi; movsxd rax, [rdi+rcx*4]; add rax, rdi; notrack jmp rax; 
0x0000000014cf6e: lea edi, [rip+0x66a4c]; mov ecx, esi; movsxd rax, [rdi+rcx*4]; add rax, rdi; notrack jmp rax; 
0x0000000015e080: lea edi, [rip+0x935d2]; syscall; 
0x0000000015cf48: lea edi, [rip+0x9470a]; syscall; 
0x0000000015ce68: lea edi, [rip+0x947ea]; syscall; 
0x0000000015cc80: lea edi, [rip+0x949d2]; syscall; 
0x0000000015cbf0: lea edi, [rip+0x94a62]; syscall; 
0x0000000015cb50: lea edi, [rip+0x94b02]; syscall; 
0x0000000015caa0: lea edi, [rip+0x94bb2]; syscall; 
0x0000000015c6d0: lea edi, [rip+0x94f82]; syscall; 
0x000000001534cf: lea edi, [rip+0x9d94b]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000001533ff: lea edi, [rip+0x9da1b]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000015332f: lea edi, [rip+0x9daeb]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000153267: lea edi, [rip+0x9dbb3]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000001531af: lea edi, [rip+0x9dc6b]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000152440: lea edi, [rip+0x9e9aa]; syscall; 
0x000000001522e0: lea edi, [rip+0x9eb0a]; syscall; 
0x000000001520d4: lea edi, [rip+0x9ed16]; syscall; 
0x00000000151f34: lea edi, [rip+0x9eeb6]; syscall; 
0x00000000151da0: lea edi, [rip+0x9f04a]; syscall; 
0x00000000151c60: lea edi, [rip+0x9f18a]; syscall; 
0x00000000151b00: lea edi, [rip+0x9f2ea]; syscall; 
0x000000001519f0: lea edi, [rip+0x9f3fa]; syscall; 
0x0000000014e4e0: lea edi, [rip+0xa2906]; syscall; 
0x0000000014c7e8: lea edi, [rip+0xa453a]; syscall; 
0x0000000014c6a8: lea edi, [rip+0xa467a]; syscall; 
0x0000000014c5f0: lea edi, [rip+0xa4732]; syscall; 
0x0000000014c504: lea edi, [rip+0xa4816]; syscall; 
0x0000000014c334: lea edi, [rip+0xa49b6]; syscall; 
0x0000000014c170: lea edi, [rip+0xa4b52]; syscall; 
0x0000000010cf95: lea edi, [rip+0xa7622]; mov rdx, [rax+0xb0]; call qword ptr [rax+0x88]; 
0x000000001467d2: lea edi, [rip+0xaa38c]; syscall; 
0x00000000146291: lea edi, [rip+0xaa849]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000144634: lea edi, [rip+0xac496]; syscall; 
0x000000001442fc: lea edi, [rip+0xac7ce]; syscall; 
0x00000000143f7c: lea edi, [rip+0xacb4e]; syscall; 
0x00000000143d56: lea edi, [rip+0xacd74]; syscall; 
0x00000000143bf4: lea edi, [rip+0xaced6]; syscall; 
0x000000001439b7: lea edi, [rip+0xad113]; syscall; 
0x00000000142f60: lea edi, [rip+0xadab2]; syscall; 
0x00000000142dde: lea edi, [rip+0xadc34]; syscall; 
0x00000000142da4: lea edi, [rip+0xadc6e]; syscall; 
0x00000000142c8c: lea edi, [rip+0xadd86]; syscall; 
0x00000000142448: lea edi, [rip+0xae5ca]; syscall; 
0x00000000142380: lea edi, [rip+0xae692]; syscall; 
0x00000000142264: lea edi, [rip+0xae7ae]; syscall; 
0x00000000140e91: lea edi, [rip+0xaf929]; syscall; 
0x00000000140bbd: lea edi, [rip+0xafc01]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000013d710: lea edi, [rip+0xb2e02]; syscall; 
0x0000000013d414: lea edi, [rip+0xb30fe]; syscall; 
0x000000001390e4: lea edi, [rip+0xb741a]; syscall; 
0x00000000138b64: lea edi, [rip+0xb797e]; syscall; 
0x000000001389a0: lea edi, [rip+0xb7afa]; syscall; 
0x000000001388d8: lea edi, [rip+0xb7b62]; syscall; 
0x00000000138798: lea edi, [rip+0xb7ca2]; syscall; 
0x000000001386e0: lea edi, [rip+0xb7d5a]; syscall; 
0x0000000013858b: lea edi, [rip+0xb7eab]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000137ff0: lea edi, [rip+0xb8442]; syscall; 
0x00000000137cd0: lea edi, [rip+0xb8762]; syscall; 
0x00000000137c6a: lea edi, [rip+0xb8770]; call rax; 
0x00000000137b14: lea edi, [rip+0xb891e]; syscall; 
0x00000000134788: lea edi, [rip+0xbbb3a]; syscall; 
0x00000000134648: lea edi, [rip+0xbbc7a]; syscall; 
0x00000000134590: lea edi, [rip+0xbbd32]; syscall; 
0x000000001344b0: lea edi, [rip+0xbbe0a]; syscall; 
0x00000000133fe4: lea edi, [rip+0xbc25e]; syscall; 
0x00000000133a14: lea edi, [rip+0xbc7ce]; syscall; 
0x000000001334f4: lea edi, [rip+0xbcca6]; syscall; 
0x00000000133328: lea edi, [rip+0xbce32]; syscall; 
0x000000001331e8: lea edi, [rip+0xbcf72]; syscall; 
0x00000000133130: lea edi, [rip+0xbd02a]; syscall; 
0x00000000133050: lea edi, [rip+0xbd102]; syscall; 
0x00000000132c34: lea edi, [rip+0xbd4d6]; syscall; 
0x00000000132618: lea edi, [rip+0xbda92]; syscall; 
0x000000001324c0: lea edi, [rip+0xbdbea]; syscall; 
0x00000000132400: lea edi, [rip+0xbdcaa]; syscall; 
0x00000000132318: lea edi, [rip+0xbdd8a]; syscall; 
0x00000000132234: lea edi, [rip+0xbde36]; syscall; 
0x00000000131bd4: lea edi, [rip+0xbe456]; syscall; 
0x000000001319c8: lea edi, [rip+0xbe61a]; syscall; 
0x00000000131870: lea edi, [rip+0xbe772]; syscall; 
0x000000001317b0: lea edi, [rip+0xbe832]; syscall; 
0x000000001316c8: lea edi, [rip+0xbe912]; syscall; 
0x00000000130ab4: lea edi, [rip+0xbf4ae]; syscall; 
0x00000000130844: lea edi, [rip+0xbf6de]; syscall; 
0x000000001300c4: lea edi, [rip+0xbfdfe]; syscall; 
0x0000000012d11f: lea edi, [rip+0xc2d43]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000eaa83: lea edi, [rip+0xc638b]; movzx eax, al; movsxd rax, [rdi+rax*4]; add rax, rdi; notrack jmp rax; 
0x000000001265c8: lea edi, [rip+0xc9862]; syscall; 
0x00000000126488: lea edi, [rip+0xc99a2]; syscall; 
0x000000001263d0: lea edi, [rip+0xc9a5a]; syscall; 
0x00000000125ff6: lea edi, [rip+0xc9e2c]; syscall; 
0x00000000125df4: lea edi, [rip+0xc9ff6]; syscall; 
0x00000000125c14: lea edi, [rip+0xca18e]; syscall; 
0x00000000125a50: lea edi, [rip+0xca30a]; syscall; 
0x00000000125980: lea edi, [rip+0xca386]; syscall; 
0x000000001258b6: lea edi, [rip+0xca450]; syscall; 
0x00000000125821: lea edi, [rip+0xca4e5]; syscall; 
0x00000000124b18: lea edi, [rip+0xcb1ba]; syscall; 
0x000000001249d8: lea edi, [rip+0xcb2fa]; syscall; 
0x00000000124920: lea edi, [rip+0xcb3b2]; syscall; 
0x00000000124326: lea edi, [rip+0xcb9a4]; syscall; 
0x00000000124124: lea edi, [rip+0xcbb4e]; syscall; 
0x00000000123f44: lea edi, [rip+0xcbcc6]; syscall; 
0x00000000123d80: lea edi, [rip+0xcbe22]; syscall; 
0x000000000db260: lea edi, [rip+0xd5162]; mov esi, eax; movsxd rdx, [rdi+rsi*4]; add rdx, rdi; notrack jmp rdx; 
0x000000000db3bc: lea edi, [rip+0xd51f2]; mov esi, eax; movsxd rdx, [rdi+rsi*4]; add rdx, rdi; notrack jmp rdx; 
0x00000000118710: lea edi, [rip+0xd713a]; syscall; 
0x000000001185f4: lea edi, [rip+0xd7256]; syscall; 
0x00000000118194: lea edi, [rip+0xd76b6]; syscall; 
0x00000000117c59: lea edi, [rip+0xd7bf1]; syscall; 
0x000000000d83af: lea edi, [rip+0xd7c3b]; movzx esi, cl; movsxd rdx, [rdi+rsi*4]; add rdx, rdi; notrack jmp rdx; 
0x000000000d5e05: lea edi, [rip+0xd9e91]; movzx eax, al; movsxd rax, [rdi+rax*4]; add rax, rdi; notrack jmp rax; 
0x000000000d4f0c: lea edi, [rip+0xdac32]; movzx eax, al; movsxd rax, [rdi+rax*4]; add rax, rdi; notrack jmp rax; 
0x00000000106ac4: lea edi, [rip+0xe8af6]; syscall; 
0x0000000010601b: lea edi, [rip+0xe95a3]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000012d0ce: lea edi, [rip-0x184]; call rax; 
0x0000000014db45: lea edi, [rsp+0x10]; call rax; 
0x00000000083d9e: lea edi, [rsp+0x10]; xor esi, esi; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000051fbd: lea edi, [rsp+0x30]; xor esi, esi; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000009cf15: lea edi, [rsp+0x31]; mov [rbx], rax; test rax, rax; je 0x000000000009cff0; call rax; 
0x0000000014697c: lea edi, [rsp+0x50]; call qword ptr [rax+0x20]; 
0x0000000015f302: lea edi, [rsp+0x930]; call qword ptr [r12+0xf10]; 
0x0000000015f192: lea edi, [rsp+0x930]; mov rax, fs:[0x28]; mov [rsp+0x68], rax; xor eax, eax; call qword ptr [r12+0xf08]; 
0x000000000d0964: lea edi, [rsp+0xd0]; mov rsi, r13; call rbp; 
0x0000000008642d: lea edx, [rax+0x1]; mov [r8+0x28], rdx; mov [rax], dil; mov eax, r9d; ret; 
0x0000000008df7f: lea edx, [rax+0x1]; mov [rdi+0x8], rdx; movzx eax, byte ptr [rax]; ret; 
0x00000000094ea4: lea edx, [rax+0x1]; mov [rip+0x157422], rdx; ret; 
0x000000000440fd: lea edx, [rax+0x1]; mov [rip+0x1a80a6], edx; ret; 
0x00000000087f54: lea edx, [rax+rdx*4]; mov [rax], rdx; xor eax, eax; ret; 
0x0000000006ab8b: lea edx, [rax-0x77000005]; add cl, [rax-0x7d]; ret; 
0x0000000008a827: lea edx, [rbp-0x48]; lea r9, [rbp-0x40]; mov rcx, r14; mov rdi, r15; call r12; 
0x0000000008126b: lea edx, [rbx+0x34]; lea rcx, [rbx+0x40]; mov esi, 0x1; mov rdi, rbx; call r8; 
0x00000000080c79: lea edx, [rbx+0x34]; mov esi, 0x1; mov rdi, rbx; call rax; 
0x00000000165ef4: lea edx, [rbx+rdx]; notrack jmp rdx; 
0x000000000424f0: lea edx, [rcx+rdx-0x7e]; or eax, 0x3f000000; mov [rdi], edx; movd xmm0, eax; ret; 
0x0000000003589e: lea edx, [rdi+rdi*8-0x1]; jmp qword ptr [rax+rcx*2-0x75]; 
0x000000000dd785: lea edx, [rdi+rdi*8]; pop rbx; pop rbp; lea rax, [rax+rdx*8]; ret; 
0x00000000033e28: lea edx, [rdi+rsi*4]; mov r8d, [rdx+rax]; mov eax, r8d; ret; 
0x000000000a9016: lea edx, [rdx+rcx]; notrack jmp r10; 
0x0000000012313e: lea edx, [rdx+rsi*4]; add eax, [rdx+rcx]; ret; 
0x000000001662f8: lea edx, [rdx-0x40]; notrack jmp r9; 
0x000000000aef7b: lea edx, [rip+0x100107]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x000000000acd0b: lea edx, [rip+0x1022f7]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x000000000aa72b: lea edx, [rip+0x104857]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x000000000a900b: lea edx, [rip+0x105ef7]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000009c68b: lea edx, [rip+0x1127d7]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000000bdfbe: lea edx, [rip+0x116fc]; cmovne rax, rdx; ret; 
0x000000000901cc: lea edx, [rip+0x11ea6e]; movzx eax, al; movsxd rax, [r10+rax*4]; add rax, r10; notrack jmp rax; 
0x000000000902c6: lea edx, [rip+0x11eb40]; movzx eax, al; movsxd rax, [r10+rax*4]; add rax, r10; notrack jmp rax; 
0x0000000009f11e: lea edx, [rip+0x12e7c]; cmovne rax, rdx; ret; 
0x00000000187fd7: lea edx, [rip+0x134e3]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x00000000187fb2: lea edx, [rip+0x13508]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000009f72e: lea edx, [rip+0x1448c]; cmovne rax, rdx; ret; 
0x00000000064232: lea edx, [rip+0x14960c]; movzx eax, al; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000186617: lea edx, [rip+0x14ea3]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x000000001865fd: lea edx, [rip+0x14ebd]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x00000000034b4e: lea edx, [rip+0x17440c]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000024589: lea edx, [rip+0x175a71]; mov eax, eax; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000183717: lea edx, [rip+0x17da3]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x000000001836f2: lea edx, [rip+0x17dc8]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x00000000023e83: lea edx, [rip+0x18b89b]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000181747: lea edx, [rip+0x19d73]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000018172d: lea edx, [rip+0x19d8d]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x000000000a0a2c: lea edx, [rip+0x1b0be]; cmove rax, rdx; ret; 
0x000000000a06bc: lea edx, [rip+0x1b40e]; cmove rax, rdx; ret; 
0x000000000a055c: lea edx, [rip+0x1b58e]; cmove rax, rdx; ret; 
0x000000000a05d3: lea edx, [rip+0x1b9c7]; lea rax, [rip+0x1b940]; cmovne rax, rdx; ret; 
0x00000000174ff7: lea edx, [rip+0x264c3]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x00000000174fd2: lea edx, [rip+0x264e8]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x00000000172a87: lea edx, [rip+0x28a33]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x00000000172a6d: lea edx, [rip+0x28a4d]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x00000000194b64: lea edx, [rip+0x29ae6]; movsxd rax, [rdx+rax*4]; add rdx, rax; notrack jmp rdx; 
0x00000000186747: lea edx, [rip+0x37df3]; movsxd r9, [r10+r9*4]; vpcmpeqb xmm0, xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x000000001850a7: lea edx, [rip+0x39453]; movsxd r9, [r10+r9*4]; vpcmpeqb xmm0, xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000015219d: lea edx, [rip+0x3a2d]; call qword ptr [rax]; 
0x00000000181887: lea edx, [rip+0x3bc33]; movsxd r9, [r10+r9*4]; pcmpeqb xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000172bdb: lea edx, [rip+0x3c4e7]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000017fcb7: lea edx, [rip+0x3d7c3]; movsxd r9, [r10+r9*4]; pcmpeqb xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000012da66: lea edx, [rip+0x3d894]; cmovne rax, rdx; ret; 
0x0000000012d8e6: lea edx, [rip+0x3da34]; cmovne rax, rdx; ret; 
0x00000000170a5b: lea edx, [rip+0x3e5e7]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000017ec77: lea edx, [rip+0x3e7c3]; movsxd r9, [r10+r9*4]; pcmpeqb xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000017dea7: lea edx, [rip+0x3f553]; movsxd r9, [r10+r9*4]; pcmpeqb xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000012d9a6: lea edx, [rip+0x40464]; cmovne rax, rdx; ret; 
0x00000000151a7a: lea edx, [rip+0x4150]; mov r9, rbp; mov esi, 0x9; call qword ptr [rax]; 
0x000000001646ab: lea edx, [rip+0x4a917]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000016341b: lea edx, [rip+0x4bb27]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000012da45: lea edx, [rip+0x5db05]; cmove rax, rdx; ret; 
0x0000000012d985: lea edx, [rip+0x5dbe5]; cmove rax, rdx; ret; 
0x0000000012d8c5: lea edx, [rip+0x5dca5]; cmove rax, rdx; ret; 
0x0000000012db08: lea edx, [rip+0x5def2]; lea rax, [rip+0x5df4b]; cmove rax, rdx; ret; 
0x0000000012da90: lea edx, [rip+0x6283a]; cmove rax, rdx; ret; 
0x0000000012d9d0: lea edx, [rip+0x6291a]; cmove rax, rdx; ret; 
0x0000000012d910: lea edx, [rip+0x629da]; cmove rax, rdx; ret; 
0x0000000012db50: lea edx, [rip+0x62d2a]; cmove rax, rdx; ret; 
0x0000000015309c: lea edx, [rip+0x9dd9e]; mov fs:[rax], rdx; ret; 
0x00000000148681: lea edx, [rip+0xa34d9]; jmp qword ptr [rdx+rax*8]; 
0x0000000010a0c0: lea edx, [rip+0xa809a]; movsxd rax, [rdx+rbp*4]; add rax, rdx; notrack jmp rax; 
0x0000000010994e: lea edx, [rip+0xa8798]; movzx eax, al; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000001092d4: lea edx, [rip+0xa8dc6]; movsxd rax, [rdx+rbx*4]; add rax, rdx; notrack jmp rax; 
0x0000000010108c: lea edx, [rip+0xb076e]; movsxd rax, [rdx+rdi*4]; add rax, rdx; notrack jmp rax; 
0x00000000101156: lea edx, [rip+0xb08fc]; mov edi, edi; movsxd rax, [rdx+rdi*4]; add rax, rdx; notrack jmp rax; 
0x000000000fcf73: lea edx, [rip+0xb4473]; movzx esi, sil; movsxd rax, [rdx+rsi*4]; add rax, rdx; notrack jmp rax; 
0x000000000f98cf: lea edx, [rip+0xb790b]; mov rcx, rax; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000000bc89c: lea edx, [rip+0xc0efe]; test byte ptr [rax+0x71], 0x2; lea rax, [rip+0x12933]; cmovne rax, rdx; ret; 
0x000000000eff8c: lea edx, [rip+0xc0f8e]; movzx ebx, bl; movsxd rax, [rdx+rbx*4]; add rax, rdx; notrack jmp rax; 
0x000000000f00dc: lea edx, [rip+0xc0fa2]; movzx r14d, r14b; movsxd rax, [rdx+r14*4]; add rax, rdx; notrack jmp rax; 
0x000000000f002c: lea edx, [rip+0xc0fc6]; movzx ebx, bl; movsxd rax, [rdx+rbx*4]; add rax, rdx; notrack jmp rax; 
0x0000000009f1ce: lea edx, [rip+0xc41bc]; cmovne rax, rdx; ret; 
0x0000000009f798: lea edx, [rip+0xc4e62]; cmovne rax, rdx; ret; 
0x000000000ea58b: lea edx, [rip+0xc6803]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000000e8852: lea edx, [rip+0xc83cc]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000000a09e6: lea edx, [rip+0xca944]; cmovne rax, rdx; ret; 
0x000000000a0676: lea edx, [rip+0xcac94]; cmovne rax, rdx; ret; 
0x000000000e5862: lea edx, [rip+0xcb368]; mov esi, esi; movsxd rax, [rdx+rsi*4]; add rax, rdx; notrack jmp rax; 
0x000000000e5471: lea edx, [rip+0xcb37d]; movsxd rax, [rdx+rbp*4]; add rax, rdx; notrack jmp rax; 
0x000000000e4adb: lea edx, [rip+0xcbcbf]; mov esi, esi; movsxd rax, [rdx+rsi*4]; add rax, rdx; notrack jmp rax; 
0x000000000a0516: lea edx, [rip+0xcd904]; cmovne rax, rdx; ret; 
0x000000000bcd3a: lea edx, [rip+0xcf1b0]; lea rax, [rip+0x11389]; cmove rax, rdx; ret; 
0x000000000bc87a: lea edx, [rip+0xcf940]; lea rax, [rip+0x11b79]; cmove rax, rdx; ret; 
0x000000000bca2a: lea edx, [rip+0xcfbe0]; lea rax, [rip+0x12699]; cmove rax, rdx; ret; 
0x000000000a08c1: lea edx, [rip+0xd0099]; cmovne rax, rdx; ret; 
0x000000000a0821: lea edx, [rip+0xd0119]; cmovne rax, rdx; ret; 
0x000000000bcb1a: lea edx, [rip+0xd0240]; lea rax, [rip+0x12879]; cmove rax, rdx; ret; 
0x000000000bc83a: lea edx, [rip+0xd02f0]; lea rax, [rip+0x129c9]; cmove rax, rdx; ret; 
0x000000000bc98a: lea edx, [rip+0xd05c0]; lea rax, [rip+0x12f89]; cmove rax, rdx; ret; 
0x000000000a0911: lea edx, [rip+0xd21a9]; cmovne rax, rdx; ret; 
0x000000000a0871: lea edx, [rip+0xd2229]; cmovne rax, rdx; ret; 
0x000000000bcd8f: lea edx, [rip+0xd575b]; cmovne rax, rdx; ret; 
0x0000000009f24e: lea edx, [rip+0xd5dbc]; cmovne rax, rdx; ret; 
0x0000000009f7fe: lea edx, [rip+0xd6fbc]; cmovne rax, rdx; ret; 
0x000000000a076e: lea edx, [rip+0xd8bcc]; cmovne rax, rdx; ret; 
0x000000000a07ce: lea edx, [rip+0xda37c]; cmovne rax, rdx; ret; 
0x000000000d4668: lea edx, [rip+0xdb4a6]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000000a8bfa: lea edx, [rip+0xdbc60]; lea rax, [rip+0x3819]; cmove rax, rdx; ret; 
0x000000000a1caa: lea edx, [rip+0xe2a60]; lea rax, [rip+0xa559]; cmove rax, rdx; ret; 
0x0000000009fb1c: lea edx, [rip+0xe3e8e]; test byte ptr [rax+0x72], 0x10; lea rax, [rip+0x1bee3]; cmovne rax, rdx; ret; 
0x0000000009f85c: lea edx, [rip+0xe400e]; test byte ptr [rax+0x72], 0x10; lea rax, [rip+0x1c0f3]; cmovne rax, rdx; ret; 
0x000000000a042a: lea edx, [rip+0xe4010]; lea rax, [rip+0xbaa9]; cmove rax, rdx; ret; 
0x0000000009f26c: lea edx, [rip+0xe44be]; test byte ptr [rax+0x72], 0x10; lea rax, [rip+0x1c633]; cmovne rax, rdx; ret; 
0x000000000a1cea: lea edx, [rip+0xe6530]; lea rax, [rip+0xf9d9]; cmove rax, rdx; ret; 
0x000000001473e5: lea edx, [rip+0xe7e5]; lea r9, [rsp+0x20]; call qword ptr [rax]; 
0x0000000009f83a: lea edx, [rip+0xe8bd0]; lea rax, [rip+0x12099]; cmove rax, rdx; ret; 
0x0000000009f68a: lea edx, [rip+0xe8f50]; lea rax, [rip+0x12549]; cmove rax, rdx; ret; 
0x0000000009f6ca: lea edx, [rip+0xe90b0]; lea rax, [rip+0x126a9]; cmove rax, rdx; ret; 
0x000000000b1487: lea edx, [rip+0xea033]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x000000000b1462: lea edx, [rip+0xea058]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x000000000a09c5: lea edx, [rip+0xeabb5]; cmove rax, rdx; ret; 
0x000000000a0655: lea edx, [rip+0xeaf05]; cmove rax, rdx; ret; 
0x000000000a04f5: lea edx, [rip+0xeb085]; cmove rax, rdx; ret; 
0x000000000a05b8: lea edx, [rip+0xeb452]; lea rax, [rip+0xeb4ab]; cmove rax, rdx; ret; 
0x000000000aee27: lea edx, [rip+0xec693]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x000000000aee0d: lea edx, [rip+0xec6ad]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x000000000a0a10: lea edx, [rip+0xef8ea]; cmove rax, rdx; ret; 
0x000000000a06a0: lea edx, [rip+0xefc3a]; cmove rax, rdx; ret; 
0x000000000a0540: lea edx, [rip+0xefdba]; cmove rax, rdx; ret; 
0x000000000a0600: lea edx, [rip+0xf028a]; cmove rax, rdx; ret; 
0x000000000a047f: lea edx, [rip+0xf08fb]; cmovne rax, rdx; ret; 
0x0000000009f171: lea edx, [rip+0xf18e9]; cmovne rax, rdx; ret; 
0x000000000a032c: lea edx, [rip-0x362]; test byte ptr [rax+0xcc], 0x10; lea rax, [rip+0x1b0d0]; cmove rax, rdx; ret; 
0x000000000748f6: lea edx, [rip-0x4a2]; movsxd rax, [rcx+rax*4]; add rax, rdx; jmp rax; 
0x0000000007b1c7: lea edx, [rip-0x4d4]; add rax, rdx; jmp rax; 
0x00000000151946: lea edx, [rip-0x6b6c]; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x00000000151baf: lea edx, [rip-0x6d95]; mov esi, 0x2; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x00000000151cef: lea edx, [rip-0x6ed5]; mov esi, 0x3; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x00000000151e4c: lea edx, [rip-0x6ff2]; mov esi, 0x6; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x00000000151fec: lea edx, [rip-0x7192]; mov esi, 0x7; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x0000000012db23: lea edx, [rip-0x71b99]; lea rax, [rip-0x71c20]; cmovne rax, rdx; ret; 
0x0000000012d92c: lea edx, [rip-0x71e52]; cmove rax, rdx; ret; 
0x0000000012d9ec: lea edx, [rip-0x71f12]; cmove rax, rdx; ret; 
0x0000000012daac: lea edx, [rip-0x71ff2]; cmove rax, rdx; ret; 
0x00000000152251: lea edx, [rip-0x7247]; mov esi, 0x8; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x0000000010d27c: lea edx, [rip-0x72]; test byte ptr [rax+0x72], 0x80; lea rax, [rip-0xbd]; cmove rax, rdx; ret; 
0x00000000152385: lea edx, [rip-0x75ab]; mov esi, 0xa; lea r9, [rsp+0x1c]; call qword ptr [rax]; 
0x000000000d0ec9: lea edx, [rip-0xdf]; cmove rax, rdx; add rsp, 0x58; ret; 
0x000000000d0fe9: lea edx, [rip-0xef]; cmove rax, rdx; add rsp, 0x58; ret; 
0x00000000115fba: lea edx, [rsi+0x1]; jne short 0x0000000000115f90; ret; 
0x000000000bbb77: lea edx, [rsi+rcx]; cmp rdi, rdx; jb short 0x00000000000bbb82; rep movsb [rdi], [rsi]; ret; 
0x00000000051f56: lea edx, [rsp+0x10]; lea rsi, [rip+0x1df]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000001517a1: lea edx, [rsp+0x18]; mov esi, 0x6; call qword ptr [rax+0x28]; 
0x00000000151768: lea edx, [rsp+0x18]; mov esi, 0x6; mov rax, [rdi+0x8]; call qword ptr [rax+0x28]; 
0x0000000015174b: lea edx, [rsp+0x20]; mov esi, 0x4; movdqa xmm0, [rip+0x6b534]; movaps [rsp+0x20], xmm0; call qword ptr [rax+0x28]; 
0x00000000113865: lea edx, [rsp+0x30]; mov eax, 0x10; syscall; 
0x00000000113409: lea edx, [rsp+0x8]; mov esi, 0x10; mov eax, 0x48; syscall; 
0x00000000151825: lea edx, [rsp+0xc]; mov esi, 0xd; call qword ptr [rax+0x28]; 
0x000000001483b3: lea esi, [r12+0x3]; mov rdi, rbp; and esi, 0xfffffffc; call qword ptr [rax+0x30]; 
0x000000001482c5: lea esi, [rax+rdx+0x28]; mov rax, [rdi+0x8]; call qword ptr [rax+0x30]; 
0x0000000007c5c8: lea esi, [rax]; idiv edi; inc dword ptr [rcx-0x1]; push rsp; ret; 
0x00000000152f39: lea esi, [rbp+0x8]; mov rdi, rbp; call qword ptr [rax+0x10]; 
0x0000000012d0ca: lea esi, [rbp-0x20]; lea rdi, [rip-0x184]; call rax; 
0x000000000e63ad: lea esi, [rbp-0x2e0]; mov rdi, r15; call qword ptr [r12+0x38]; 
0x00000000100f7d: lea esi, [rbp-0x2e0]; mov rdi, r15; call qword ptr [r12+0x40]; 
0x000000000e787b: lea esi, [rbp-0x450]; call qword ptr [r15+0x40]; 
0x0000000014e835: lea esi, [rbx+0x18]; mov rdi, rbp; call qword ptr [rax+0x48]; 
0x0000000009cddc: lea esi, [rbx+0x1]; mov [rbp], rax; test rax, rax; je 0x000000000009cec0; call rax; 
0x0000000008a5d8: lea esi, [rbx+0x40]; xor r8d, r8d; mov rdi, r13; lea r9, [rsp+0x18]; call rbp; 
0x0000000008a6c7: lea esi, [rbx+0x8]; xor r8d, r8d; mov rdi, r13; lea r9, [rsp+0x18]; call rbp; 
0x000000000860f0: lea esi, [rcx+0x4]; mov [rdx+0x20], rsi; mov [rcx], eax; ret; 
0x0000000005b4bb: lea esi, [rdi+0x3b0]; mov edi, 0x3004; mov eax, 0x9e; syscall; 
0x00000000146144: lea esi, [rdi+0x48]; mov rdi, r8; mov rax, [rax+0x18]; jmp rax; 
0x00000000152ce9: lea esi, [rdx+0x8]; mov rdi, rbp; call qword ptr [rdx+0x10]; 
0x000000000775b5: lea esi, [rdx+rdi*8-0x76b60001]; ret; 
0x000000000806fc: lea esi, [rip+0x12e0c2]; movzx eax, al; movsxd rax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x0000000006c905: lea esi, [rip+0x141551]; movsxd rax, [rsi+rcx*4]; add rax, rsi; notrack jmp rax; 
0x000000000407a1: lea esi, [rip+0x1687f9]; mov edx, edx; movsxd rdx, [rsi+rdx*4]; add rdx, rsi; notrack jmp rdx; 
0x00000000051f5b: lea esi, [rip+0x1df]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000083cde: lea esi, [rip+0x25c]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000010c94e: lea esi, [rip+0xa5a8c]; movups [rsp+0xc8], xmm0; mov [rsp+0xe8], eax; mov eax, 0xe; syscall; 
0x000000000fa102: lea esi, [rip+0xb716c]; movsxd rax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x000000000e8d6e: lea esi, [rip+0xc7f30]; movsxd rax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x000000000e321d: lea esi, [rip+0xd115a]; mov eax, 0x142; syscall; 
0x000000000bc0d3: lea esi, [rip+0xf35a7]; movsxd rax, [rsi+rdi*4]; add rax, rsi; notrack jmp rax; 
0x0000000014628a: lea esi, [rip-0x100]; lea rdi, [rip+0xaa849]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000910f6: lea esi, [rip-0x11c]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000001531a8: lea esi, [rip-0x11e]; lea rdi, [rip+0x9dc6b]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000012d118: lea esi, [rip-0x14e]; lea rdi, [rip+0xc2d43]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000092aa5: lea esi, [rip-0x1acb]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000153260: lea esi, [rip-0x1d6]; lea rdi, [rip+0x9dbb3]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000092ddb: lea esi, [rip-0x1e01]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000009318f: lea esi, [rip-0x21b5]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000153328: lea esi, [rip-0x29e]; lea rdi, [rip+0x9daeb]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000001533f8: lea esi, [rip-0x36e]; lea rdi, [rip+0x9da1b]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000842df: lea esi, [rip-0x3a5]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000005473e: lea esi, [rip-0x3c4]; lea rdi, [rip+0x199fdd]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000140bb6: lea esi, [rip-0x43c]; lea rdi, [rip+0xafc01]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000001534c8: lea esi, [rip-0x43e]; lea rdi, [rip+0x9d94b]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000138584: lea esi, [rip-0x4a]; lea rdi, [rip+0xb7eab]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000026f66: lea esi, [rip-0x60c]; lea rdi, [rip+0x1c69e1]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000915ed: lea esi, [rip-0x613]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000009f955: lea esi, [rip-0xdb]; lea rdi, [rip+0x14f5de]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000106014: lea esi, [rip-0xdba]; lea rdi, [rip+0xe95a3]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000055409: lea esi, [rsi+0x128]; mov edi, 0x2; mov r10d, 0x8; mov eax, 0xe; syscall; 
0x000000000bbb88: lea esi, [rsi+rcx-0x1]; std; rep movsb [rdi], [rsi]; cld; ret; 
0x0000000014f6fc: lea esi, [rsp+0x10]; call qword ptr [rax+0x10]; 
0x0000000015669d: lea esi, [rsp+0x10]; call qword ptr [rax]; 
0x00000000156643: lea esi, [rsp+0x10]; mov [rsp+0x10], rax; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x00000000151ec6: lea esi, [rsp+0x10]; mov edi, eax; call rbp; 
0x00000000155e8d: lea esi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax+0x8]; 
0x0000000008e942: lea esi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax+0x90]; 
0x00000000155e34: lea esi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax]; 
0x000000000547b8: lea esi, [rsp+0x24]; mov edi, 0x1; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000010ca38: lea esi, [rsp+0x2c]; mov edi, 0x1; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000008919a: lea esi, [rsp+0x30]; mov rdi, r15; call qword ptr [r14+0x90]; 
0x000000001483b4: lea esi, [rsp+0x3]; mov rdi, rbp; and esi, 0xfffffffc; call qword ptr [rax+0x30]; 
0x000000001571c5: lea esi, [rsp+0x4]; call qword ptr [rax+0x40]; 
0x000000001571e4: lea esi, [rsp+0x4]; mov [rsp+0x4], eax; mov rax, [rdi+0x8]; call qword ptr [rax+0x48]; 
0x0000000005217d: lea esi, [rsp+0x4]; mov edi, 0x1; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000156d7b: lea esi, [rsp+0x4]; mov rdi, rbp; call qword ptr [rax+0x40]; 
0x00000000156dcc: lea esi, [rsp+0x4]; mov rdi, rbp; call qword ptr [rax+0x48]; 
0x0000000015099d: lea esi, [rsp+0x88]; mov rdi, r15; add dword ptr [rax], 0x1; mov rax, [rbx+0x60]; call qword ptr [rax+0x8]; 
0x000000001490d8: lea esi, [rsp+0x8]; call qword ptr [rax]; 
0x00000000082aee: lea esi, [rsp+0x8]; call rax; 
0x0000000014912c: lea esi, [rsp+0x8]; mov rdi, rbp; call qword ptr [rax+0x8]; 
0x0000000014e796: lea esi, [rsp+0xc]; mov rdi, rbp; call qword ptr [rax+0x48]; 
0x0000000012f974: lea esi, [rsp-0x18]; mov eax, 0x83; syscall; 
0x000000000e14d7: lea esp, [rbp-0x10]; pop r12; pop r13; pop rbp; ret; 
0x00000000148a96: lea esp, [rbx+0x23b0]; mov dword ptr [rbx+0x23b0], 0x0; mov rdi, r12; call qword ptr [rax+0x28]; 
0x000000000469d9: lea esp, [rbx+rax*8+0x8]; nop [rax]; call qword ptr [rbx]; 
0x00000000044835: lea esp, [rcx+rax]; mov r13, rax; mov rdi, r12; call rbx; 
0x0000000005b4b7: lea esp, [rsi+0x8]; lea rsi, [rdi+0x3b0]; mov edi, 0x3004; mov eax, 0x9e; syscall; 
0x000000000b8d5f: lea esp, [rsi+0xf]; add [rbx+0x63], cl; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000a9015: lea r10, [r10+r9]; notrack jmp r10; 
0x000000000aef7a: lea r10, [rip+0x100107]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x000000000acd0a: lea r10, [rip+0x1022f7]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x000000000aa72a: lea r10, [rip+0x104857]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x000000000a900a: lea r10, [rip+0x105ef7]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x000000000901cb: lea r10, [rip+0x11ea6e]; movzx eax, al; movsxd rax, [r10+rax*4]; add rax, r10; notrack jmp rax; 
0x000000000902c5: lea r10, [rip+0x11eb40]; movzx eax, al; movsxd rax, [r10+rax*4]; add rax, r10; notrack jmp rax; 
0x00000000186746: lea r10, [rip+0x37df3]; movsxd r9, [r10+r9*4]; vpcmpeqb xmm0, xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x000000001850a6: lea r10, [rip+0x39453]; movsxd r9, [r10+r9*4]; vpcmpeqb xmm0, xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000181886: lea r10, [rip+0x3bc33]; movsxd r9, [r10+r9*4]; pcmpeqb xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000172bda: lea r10, [rip+0x3c4e7]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000017fcb6: lea r10, [rip+0x3d7c3]; movsxd r9, [r10+r9*4]; pcmpeqb xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000170a5a: lea r10, [rip+0x3e5e7]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000017ec76: lea r10, [rip+0x3e7c3]; movsxd r9, [r10+r9*4]; pcmpeqb xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000017dea6: lea r10, [rip+0x3f553]; movsxd r9, [r10+r9*4]; pcmpeqb xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x000000001646aa: lea r10, [rip+0x4a917]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000016341a: lea r10, [rip+0x4bb27]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x000000000901fd: lea r11, [rip+0x11ea98]; movzx eax, al; movsxd rax, [r11+rax*4]; add rax, r11; notrack jmp rax; 
0x0000000009022f: lea r11, [rip+0x11eac2]; movzx eax, al; movsxd rax, [r11+rax*4]; add rax, r11; notrack jmp rax; 
0x00000000090261: lea r11, [rip+0x11eaec]; movzx eax, al; movsxd rax, [r11+rax*4]; add rax, r11; notrack jmp rax; 
0x00000000090293: lea r11, [rip+0x11eb16]; movzx eax, al; movsxd rax, [r11+rax*4]; add rax, r11; notrack jmp rax; 
0x00000000040aa1: lea r11, [rip+0x168530]; movzx r10d, r10b; movsxd r10, [r11+r10*4]; add r10, r11; notrack jmp r10; 
0x0000000018f503: lea r11, [rip+0x2e136]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018f489: lea r11, [rip+0x2e1b0]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018f3fa: lea r11, [rip+0x2e23f]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018f1ef: lea r11, [rip+0x2e44a]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018f0bd: lea r11, [rip+0x2e57c]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018eff7: lea r11, [rip+0x2e642]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018ef79: lea r11, [rip+0x2e6c0]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018eee4: lea r11, [rip+0x2e755]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018ece7: lea r11, [rip+0x2e952]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018ebb5: lea r11, [rip+0x2ea84]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018eab8: lea r11, [rip+0x2eb81]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018ded3: lea r11, [rip+0x2f626]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018de59: lea r11, [rip+0x2f6a0]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018ddca: lea r11, [rip+0x2f72f]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018dbbf: lea r11, [rip+0x2f93a]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018da8d: lea r11, [rip+0x2fa6c]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018d9c7: lea r11, [rip+0x2fb32]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018d949: lea r11, [rip+0x2fbb0]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018d8b4: lea r11, [rip+0x2fc45]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018d6b7: lea r11, [rip+0x2fe42]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018d585: lea r11, [rip+0x2ff74]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018d47a: lea r11, [rip+0x3007f]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000016fa21: lea r11, [rip+0x4e5d8]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016f6c3: lea r11, [rip+0x4e936]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016f86e: lea r11, [rip+0x4e9cb]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016f543: lea r11, [rip+0x4eab6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016f606: lea r11, [rip+0x4ec33]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016f3c3: lea r11, [rip+0x4ec36]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016f486: lea r11, [rip+0x4edb3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016f243: lea r11, [rip+0x4edb6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016f306: lea r11, [rip+0x4ef33]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016f0c3: lea r11, [rip+0x4ef36]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016f187: lea r11, [rip+0x4f0b2]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016ef43: lea r11, [rip+0x4f0b6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016f006: lea r11, [rip+0x4f233]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016edc3: lea r11, [rip+0x4f236]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016ee86: lea r11, [rip+0x4f3b3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016ec43: lea r11, [rip+0x4f3b6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016ed06: lea r11, [rip+0x4f533]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016eac3: lea r11, [rip+0x4f536]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016eb86: lea r11, [rip+0x4f6b3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016e943: lea r11, [rip+0x4f6b6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016ea06: lea r11, [rip+0x4f833]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016e7c3: lea r11, [rip+0x4f836]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016e886: lea r11, [rip+0x4f9b3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016e643: lea r11, [rip+0x4f9b6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016e706: lea r11, [rip+0x4fb33]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016e4c3: lea r11, [rip+0x4fb36]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016e586: lea r11, [rip+0x4fcb3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016e343: lea r11, [rip+0x4fcb6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016e406: lea r11, [rip+0x4fe33]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016e1c3: lea r11, [rip+0x4fe36]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016e04a: lea r11, [rip+0x4ffaf]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016e286: lea r11, [rip+0x4ffb3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016e106: lea r11, [rip+0x50133]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016de3f: lea r11, [rip+0x501ba]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016dfc9: lea r11, [rip+0x50270]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016de62: lea r11, [rip+0x503d7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016df1f: lea r11, [rip+0x5059a]; sub rdx, 0x80; movsxd r9, [r11+r9*4]; add r9, r11; notrack jmp r9; 
0x0000000016deb8: lea r11, [rip+0x505c1]; sub rdx, 0x80; movsxd r9, [r11+r9*4]; add r9, r11; notrack jmp r9; 
0x0000000016ceed: lea r11, [rip+0x50c0c]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016cbc3: lea r11, [rip+0x50f36]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016cd5a: lea r11, [rip+0x50fdf]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016ca43: lea r11, [rip+0x510b6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016cb06: lea r11, [rip+0x51233]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016c8c3: lea r11, [rip+0x51236]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016c986: lea r11, [rip+0x513b3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016c743: lea r11, [rip+0x513b6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016c806: lea r11, [rip+0x51533]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016c5c3: lea r11, [rip+0x51536]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016c687: lea r11, [rip+0x516b2]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016c443: lea r11, [rip+0x516b6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016c506: lea r11, [rip+0x51833]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016c2c3: lea r11, [rip+0x51836]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016c386: lea r11, [rip+0x519b3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016c143: lea r11, [rip+0x519b6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016c206: lea r11, [rip+0x51b33]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016bfc3: lea r11, [rip+0x51b36]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016c086: lea r11, [rip+0x51cb3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016be43: lea r11, [rip+0x51cb6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016bf06: lea r11, [rip+0x51e33]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016bcc3: lea r11, [rip+0x51e36]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016bd86: lea r11, [rip+0x51fb3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016bb43: lea r11, [rip+0x51fb6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016bc06: lea r11, [rip+0x52133]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b9c3: lea r11, [rip+0x52136]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016ba86: lea r11, [rip+0x522b3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b843: lea r11, [rip+0x522b6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b906: lea r11, [rip+0x52433]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b6c3: lea r11, [rip+0x52436]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b54a: lea r11, [rip+0x525af]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b786: lea r11, [rip+0x525b3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b2e3: lea r11, [rip+0x52655]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b227: lea r11, [rip+0x52712]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b606: lea r11, [rip+0x52733]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b35f: lea r11, [rip+0x5279a]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b13c: lea r11, [rip+0x527fd]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b4c9: lea r11, [rip+0x52870]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b071: lea r11, [rip+0x528c8]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b34b: lea r11, [rip+0x529ee]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b41f: lea r11, [rip+0x52b9a]; sub rdx, 0x80; movsxd r9, [r11+r9*4]; add r9, r11; notrack jmp r9; 
0x0000000016b3bd: lea r11, [rip+0x52bbc]; sub rdx, 0x80; movsxd r9, [r11+r9*4]; add r9, r11; notrack jmp r9; 
0x0000000016a052: lea r11, [rip+0x538e7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169fb4: lea r11, [rip+0x53985]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169f02: lea r11, [rip+0x53a37]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169e64: lea r11, [rip+0x53ad5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169db2: lea r11, [rip+0x53b87]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169d14: lea r11, [rip+0x53c25]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169c62: lea r11, [rip+0x53cd7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169bc4: lea r11, [rip+0x53d75]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169b12: lea r11, [rip+0x53e27]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169a74: lea r11, [rip+0x53ec5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001699c2: lea r11, [rip+0x53f77]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169924: lea r11, [rip+0x54015]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169872: lea r11, [rip+0x540c7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001697d4: lea r11, [rip+0x54165]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169722: lea r11, [rip+0x54217]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169687: lea r11, [rip+0x542b2]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001695d2: lea r11, [rip+0x54367]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169534: lea r11, [rip+0x54405]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169482: lea r11, [rip+0x544b7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001693e4: lea r11, [rip+0x54555]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169332: lea r11, [rip+0x54607]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169294: lea r11, [rip+0x546a5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001691e2: lea r11, [rip+0x54757]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169144: lea r11, [rip+0x547f5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169092: lea r11, [rip+0x548a7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168ff4: lea r11, [rip+0x54945]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168f42: lea r11, [rip+0x549f7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168ea4: lea r11, [rip+0x54a95]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168df2: lea r11, [rip+0x54b47]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168d54: lea r11, [rip+0x54be5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168ca6: lea r11, [rip+0x54c93]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168bb4: lea r11, [rip+0x54d84]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168af5: lea r11, [rip+0x54e43]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168a8c: lea r11, [rip+0x54ead]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016898d: lea r11, [rip+0x54fac]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168753: lea r11, [rip+0x55026]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001688c8: lea r11, [rip+0x55071]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168679: lea r11, [rip+0x55100]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168855: lea r11, [rip+0x55264]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x000000001687fb: lea r11, [rip+0x5527e]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x00000000167672: lea r11, [rip+0x56107]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001675d4: lea r11, [rip+0x561a5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000167522: lea r11, [rip+0x56257]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000167484: lea r11, [rip+0x562f5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001673d2: lea r11, [rip+0x563a7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000167334: lea r11, [rip+0x56445]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000167282: lea r11, [rip+0x564f7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001671e4: lea r11, [rip+0x56595]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000167132: lea r11, [rip+0x56647]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000167094: lea r11, [rip+0x566e5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166fe2: lea r11, [rip+0x56797]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166f44: lea r11, [rip+0x56835]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166e92: lea r11, [rip+0x568e7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166df4: lea r11, [rip+0x56985]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166d42: lea r11, [rip+0x56a37]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166ca7: lea r11, [rip+0x56ad2]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166bf2: lea r11, [rip+0x56b87]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166b54: lea r11, [rip+0x56c25]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166aa2: lea r11, [rip+0x56cd7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166a04: lea r11, [rip+0x56d75]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166952: lea r11, [rip+0x56e27]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001668b4: lea r11, [rip+0x56ec5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166802: lea r11, [rip+0x56f77]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166764: lea r11, [rip+0x57015]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001666b2: lea r11, [rip+0x570c7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166614: lea r11, [rip+0x57165]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166562: lea r11, [rip+0x57217]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001664c4: lea r11, [rip+0x572b5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166412: lea r11, [rip+0x57367]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166374: lea r11, [rip+0x57405]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001662c6: lea r11, [rip+0x574b3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001661d4: lea r11, [rip+0x575a4]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166115: lea r11, [rip+0x57663]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001660ac: lea r11, [rip+0x576cd]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165fad: lea r11, [rip+0x577cc]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165ee8: lea r11, [rip+0x57891]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165e75: lea r11, [rip+0x57a84]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x00000000165e14: lea r11, [rip+0x57aa5]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x000000000bb3e9: lea r11, [rip+0xf41d4]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000bac65: lea r11, [rip+0xf4958]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000bac3c: lea r11, [rip+0xf4981]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000bac1c: lea r11, [rip+0xf49a1]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000babf3: lea r11, [rip+0xf49ca]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000babc4: lea r11, [rip+0xf49f9]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000baba5: lea r11, [rip+0xf4a18]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000bab20: lea r11, [rip+0xf4a1d]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000bab05: lea r11, [rip+0xf4a38]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000bab83: lea r11, [rip+0xf4a3a]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000bab53: lea r11, [rip+0xf4a6a]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000baad0: lea r11, [rip+0xf4a6d]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000baaa4: lea r11, [rip+0xf4a99]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000baa8e: lea r11, [rip+0xf4aaf]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000baa6c: lea r11, [rip+0xf4ad1]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000baa47: lea r11, [rip+0xf4af6]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000baa2a: lea r11, [rip+0xf4b13]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000ba9b3: lea r11, [rip+0xf4b8a]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000ba175: lea r11, [rip+0xf5348]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000ba140: lea r11, [rip+0xf537d]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000ba114: lea r11, [rip+0xf53a9]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000ba0fe: lea r11, [rip+0xf53bf]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000ba0dc: lea r11, [rip+0xf53e1]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000ba0b7: lea r11, [rip+0xf5406]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000ba09a: lea r11, [rip+0xf5423]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000ba042: lea r11, [rip+0xf547b]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b9989: lea r11, [rip+0xf5a60]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b9890: lea r11, [rip+0xf5be9]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b987a: lea r11, [rip+0xf5bff]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b985a: lea r11, [rip+0xf5c1f]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8da5: lea r11, [rip+0xf6644]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8d7c: lea r11, [rip+0xf666d]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8d5c: lea r11, [rip+0xf668d]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8d33: lea r11, [rip+0xf66b6]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8d04: lea r11, [rip+0xf66e5]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8ce5: lea r11, [rip+0xf6704]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8c60: lea r11, [rip+0xf6709]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8cc3: lea r11, [rip+0xf6726]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8c93: lea r11, [rip+0xf6756]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8b7e: lea r11, [rip+0xf67eb]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8b50: lea r11, [rip+0xf6819]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8b27: lea r11, [rip+0xf6842]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b84a5: lea r11, [rip+0xf6e38]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8470: lea r11, [rip+0xf6e6d]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8444: lea r11, [rip+0xf6e99]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b842e: lea r11, [rip+0xf6eaf]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b840c: lea r11, [rip+0xf6ed1]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b83e7: lea r11, [rip+0xf6ef6]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b83ca: lea r11, [rip+0xf6f13]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8372: lea r11, [rip+0xf6f6b]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8139: lea r11, [rip+0xf70d0]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8040: lea r11, [rip+0xf7259]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b802a: lea r11, [rip+0xf726f]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b800a: lea r11, [rip+0xf728f]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b76c5: lea r11, [rip+0xf7b44]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b769c: lea r11, [rip+0xf7b6d]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b767c: lea r11, [rip+0xf7b8d]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b7653: lea r11, [rip+0xf7bb6]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b7624: lea r11, [rip+0xf7be5]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b7605: lea r11, [rip+0xf7c04]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b7580: lea r11, [rip+0xf7c09]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b75e3: lea r11, [rip+0xf7c26]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b75b3: lea r11, [rip+0xf7c56]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b74ae: lea r11, [rip+0xf7cdb]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b7480: lea r11, [rip+0xf7d09]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b7457: lea r11, [rip+0xf7d32]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6e65: lea r11, [rip+0xf829c]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6e30: lea r11, [rip+0xf82d1]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6e04: lea r11, [rip+0xf82fd]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6dee: lea r11, [rip+0xf8313]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6dcc: lea r11, [rip+0xf8335]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6da7: lea r11, [rip+0xf835a]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6d8a: lea r11, [rip+0xf8377]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6d32: lea r11, [rip+0xf83cf]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000148a95: lea r12, [rbx+0x23b0]; mov dword ptr [rbx+0x23b0], 0x0; mov rdi, r12; call qword ptr [rax+0x28]; 
0x000000000469d8: lea r12, [rbx+rax*8+0x8]; nop [rax]; call qword ptr [rbx]; 
0x00000000044834: lea r12, [rcx+rax]; mov r13, rax; mov rdi, r12; call rbx; 
0x00000000154d12: lea r13, [rbp+0x10]; mov dword ptr [rbp+0x10], 0x0; mov rdi, r13; call qword ptr [rax+0x28]; 
0x00000000154b0c: lea r13, [rbx+0x10]; xor esi, esi; mov dword ptr [rbx+0x10], 0x1; mov rdi, r13; call qword ptr [rax+0x28]; 
0x00000000146a84: lea r13, [rsp+0x68]; mov rsi, r13; call qword ptr [rax+0x10]; 
0x0000000004486c: lea r15, [rax+r14]; mov rdx, rbp; mov rsi, r12; mov rdi, r13; call rbx; 
0x0000000014697b: lea r15, [rsp+0x50]; call qword ptr [rax+0x20]; 
0x000000001532d8: lea r8, [rax+0x80]; mov rax, r8; pop rbx; ret; 
0x000000001533a8: lea r8, [rax+0xa0]; mov rax, r8; pop rbx; ret; 
0x00000000153478: lea r8, [rax+0xa8]; mov rax, r8; pop rbx; ret; 
0x0000000013c796: lea r8, [rdi+rsi+0x8]; mov rax, r8; ret; 
0x00000000104427: lea r8, [rdx+r15]; mov rdi, [rbp-0x1b0]; mov rdx, [r12]; mov rax, [rbp-0x1e0]; call rax; 
0x000000000a8b0d: lea r8, [rip+0x1063d0]; mov eax, edx; movsxd rax, [r8+rax*4]; add rax, r8; notrack jmp rax; 
0x0000000014731f: lea r8, [rip+0x17a]; mov esi, 0x4; mov rdi, rbp; lea r9, [rsp+0x20]; call qword ptr [rax]; 
0x000000001473db: lea r8, [rip+0xbe]; xor ecx, ecx; lea rdx, [rip+0xe7e5]; lea r9, [rsp+0x20]; call qword ptr [rax]; 
0x0000000015193e: lea r8, [rip-0x6b85]; lea rdx, [rip-0x6b6c]; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x00000000152195: lea r8, [rip-0xa0ec]; lea rdx, [rip+0x3a2d]; call qword ptr [rax]; 
0x0000000015fddc: lea r8, [rsp+0x30]; call qword ptr [rax+0x1e0]; 
0x000000000d0e9e: lea r8, [rsp+0x40]; call qword ptr [rax+0x1e0]; 
0x0000000002f2ef: lea r8, [rsp+0xa0]; call r15; 
0x0000000014925c: lea r8d, [rdx+rax]; pop rbx; pop rbp; mov eax, r8d; ret; 
0x00000000165e1f: lea r9, [r11+r9]; notrack jmp r9; 
0x0000000016009c: lea r9, [r11+rsi]; mov esi, [rsp+0x8]; call rax; 
0x0000000016009d: lea r9, [r11+rsi]; mov esi, [rsp+0x8]; call rax; 
0x000000001662f0: lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000008a82a: lea r9, [rbp-0x40]; mov rcx, r14; mov rdi, r15; call r12; 
0x000000000a8978: lea r9, [rip+0x10651d]; mov ecx, eax; movsxd rcx, [r9+rcx*4]; add rcx, r9; notrack jmp rcx; 
0x000000000d8334: lea r9, [rip+0xd7ac9]; movzx edi, cl; movsxd rdx, [r9+rdi*4]; add rdx, r9; notrack jmp rdx; 
0x0000000015194c: lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x000000000bd35b: lea r9, [rsp+0x18]; call r13; 
0x0000000008a5e1: lea r9, [rsp+0x18]; call rbp; 
0x000000000bd1b8: lea r9, [rsp+0x18]; call rbx; 
0x00000000152390: lea r9, [rsp+0x1c]; call qword ptr [rax]; 
0x0000000014732e: lea r9, [rsp+0x20]; call qword ptr [rax]; 
0x000000000bd561: lea r9, [rsp+0x20]; call rbx; 
0x000000000bd05e: lea r9, [rsp+0x28]; call rbx; 
0x00000000147139: lea r9, [rsp+0x2c]; call qword ptr [rax]; 
0x000000000bd79c: lea r9, [rsp+0x30]; call rbx; 
0x00000000152ccb: lea r9, [rsp+0x3a]; call qword ptr [rax]; 
0x00000000147849: lea r9, [rsp+0x40]; call qword ptr [rax]; 
0x0000000011509b: lea r9, [rsp+0x40]; test eax, eax; jne short 0x00000000001150d0; mov eax, 0x10e; syscall; 
0x00000000047c5b: lea rax, [r9+r8*4]; mov [rsi+0x10], r9; mov [rsi+0x28], rax; xor eax, eax; ret; 
0x000000000e5231: lea rax, [rax+rax-0x1]; ret; 
0x000000000bce68: lea rax, [rax+rbx*4]; pop rbx; pop rbp; pop r12; ret; 
0x000000000ac1a3: lea rax, [rax+rdi+0x10]; ret; 
0x000000000ac1b3: lea rax, [rax+rdi+0x20]; ret; 
0x000000000ac693: lea rax, [rax+rdi+0x30]; ret; 
0x000000000ac183: lea rax, [rax+rdi-0x10]; ret; 
0x000000000dd78a: lea rax, [rax+rdx*8]; ret; 
0x0000000009c21e: lea rax, [rax-0x8]; ret; 
0x000000000e8460: lea rax, [rbx+0x2]; pop rbx; pop rbp; pop r12; ret; 
0x000000000e8360: lea rax, [rbx+0x8]; pop rbx; pop rbp; pop r12; ret; 
0x000000000b1adc: lea rax, [rcx+rsi]; ret; 
0x000000000bb723: lea rax, [rcx-0x1]; ret; 
0x000000000b863b: lea rax, [rdi+0x10]; ret; 
0x000000000b900b: lea rax, [rdi+0x10]; sub r8, 0x11; lea rdi, [rdi+0x11]; jne 0x00000000000b97f0; ret; 
0x000000000b8650: lea rax, [rdi+0x11]; ret; 
0x000000000b9030: lea rax, [rdi+0x11]; sub r8, 0x12; lea rdi, [rdi+0x12]; jne 0x00000000000b97f0; ret; 
0x000000000b866e: lea rax, [rdi+0x12]; ret; 
0x000000000b905e: lea rax, [rdi+0x12]; sub r8, 0x13; lea rdi, [rdi+0x13]; jne 0x00000000000b97f0; ret; 
0x000000000b868e: lea rax, [rdi+0x13]; ret; 
0x000000000b908e: lea rax, [rdi+0x13]; sub r8, 0x14; lea rdi, [rdi+0x14]; jne 0x00000000000b97f0; ret; 
0x000000000b86b1: lea rax, [rdi+0x14]; ret; 
0x000000000b90c1: lea rax, [rdi+0x14]; sub r8, 0x15; lea rdi, [rdi+0x15]; jne 0x00000000000b97f0; ret; 
0x000000000b86d0: lea rax, [rdi+0x15]; ret; 
0x000000000b90f0: lea rax, [rdi+0x15]; sub r8, 0x16; lea rdi, [rdi+0x16]; jne 0x00000000000b97f0; ret; 
0x000000000b86f0: lea rax, [rdi+0x16]; ret; 
0x000000000b9120: lea rax, [rdi+0x16]; sub r8, 0x17; lea rdi, [rdi+0x17]; jne 0x00000000000b97f0; ret; 
0x000000000b8710: lea rax, [rdi+0x17]; ret; 
0x000000000b9150: lea rax, [rdi+0x17]; sub r8, 0x18; lea rdi, [rdi+0x18]; jne 0x00000000000b97f0; ret; 
0x000000000b8733: lea rax, [rdi+0x18]; ret; 
0x000000000b9183: lea rax, [rdi+0x18]; sub r8, 0x19; lea rdi, [rdi+0x19]; jne 0x00000000000b97f0; ret; 
0x000000000b8758: lea rax, [rdi+0x19]; ret; 
0x000000000b91b8: lea rax, [rdi+0x19]; sub r8, 0x1a; lea rdi, [rdi+0x1a]; jne 0x00000000000b97f0; ret; 
0x000000000b84d6: lea rax, [rdi+0x1]; ret; 
0x000000000b8de6: lea rax, [rdi+0x1]; sub r8, 0x2; lea rdi, [rdi+0x2]; jne 0x00000000000b97f0; ret; 
0x0000000018ab06: lea rax, [rdi+0x1]; vzeroupper; ret; 
0x000000000b8776: lea rax, [rdi+0x1a]; ret; 
0x000000000b91e6: lea rax, [rdi+0x1a]; sub r8, 0x1b; lea rdi, [rdi+0x1b]; jne 0x00000000000b97f0; ret; 
0x000000000b8796: lea rax, [rdi+0x1b]; ret; 
0x000000000b9216: lea rax, [rdi+0x1b]; sub r8, 0x1c; lea rdi, [rdi+0x1c]; jne 0x00000000000b97f0; ret; 
0x000000000b87b2: lea rax, [rdi+0x1c]; ret; 
0x000000000b9242: lea rax, [rdi+0x1c]; sub r8, 0x1d; lea rdi, [rdi+0x1d]; jne 0x00000000000b97f0; ret; 
0x000000000b87d2: lea rax, [rdi+0x1d]; ret; 
0x000000000b9272: lea rax, [rdi+0x1d]; sub r8, 0x1e; lea rdi, [rdi+0x1e]; jne 0x00000000000b97f0; ret; 
0x000000000b87f2: lea rax, [rdi+0x1e]; ret; 
0x000000000b92a2: lea rax, [rdi+0x1e]; sub r8, 0x1f; lea rdi, [rdi+0x1f]; jne 0x00000000000b97f0; ret; 
0x000000000b8812: lea rax, [rdi+0x1f]; ret; 
0x000000000b92d2: lea rax, [rdi+0x1f]; sub r8, 0x20; lea rdi, [rdi+0x20]; jne 0x00000000000b97f0; ret; 
0x000000000b9682: lea rax, [rdi+0x20]; ret; 
0x000000000b84e9: lea rax, [rdi+0x2]; ret; 
0x000000000b8e09: lea rax, [rdi+0x2]; sub r8, 0x3; lea rdi, [rdi+0x3]; jne 0x00000000000b97f0; ret; 
0x0000000018ab1a: lea rax, [rdi+0x2]; vzeroupper; ret; 
0x000000000b84f4: lea rax, [rdi+0x3]; ret; 
0x000000000b8e24: lea rax, [rdi+0x3]; sub r8, 0x4; lea rdi, [rdi+0x4]; jne 0x00000000000b97f0; ret; 
0x0000000018ab34: lea rax, [rdi+0x3]; vzeroupper; ret; 
0x000000000b98f8: lea rax, [rdi+0x40]; ret; 
0x0000000018b2a6: lea rax, [rdi+0x41]; vzeroupper; ret; 
0x000000000b8507: lea rax, [rdi+0x4]; ret; 
0x000000000b8e47: lea rax, [rdi+0x4]; sub r8, 0x5; lea rdi, [rdi+0x5]; jne 0x00000000000b97f0; ret; 
0x000000000b851c: lea rax, [rdi+0x5]; ret; 
0x000000000b8e6c: lea rax, [rdi+0x5]; sub r8, 0x6; lea rdi, [rdi+0x6]; jne 0x00000000000b97f0; ret; 
0x000000000b853a: lea rax, [rdi+0x6]; ret; 
0x000000000b8e8a: lea rax, [rdi+0x6]; sub r8, 0x7; lea rdi, [rdi+0x7]; jne 0x00000000000b97f0; ret; 
0x000000000b8546: lea rax, [rdi+0x7]; ret; 
0x000000000b8ea6: lea rax, [rdi+0x7]; sub r8, 0x8; lea rdi, [rdi+0x8]; jne 0x00000000000b97f0; ret; 
0x0000000018b44b: lea rax, [rdi+0x80]; vzeroupper; ret; 
0x000000000b8559: lea rax, [rdi+0x8]; ret; 
0x000000000b8ec9: lea rax, [rdi+0x8]; sub r8, 0x9; lea rdi, [rdi+0x9]; jne 0x00000000000b97f0; ret; 
0x000000000b856e: lea rax, [rdi+0x9]; ret; 
0x000000000b8eee: lea rax, [rdi+0x9]; sub r8, 0xa; lea rdi, [rdi+0xa]; jne 0x00000000000b97f0; ret; 
0x000000000b858c: lea rax, [rdi+0xa]; ret; 
0x000000000b8f1c: lea rax, [rdi+0xa]; sub r8, 0xb; lea rdi, [rdi+0xb]; jne 0x00000000000b97f0; ret; 
0x000000000b85ac: lea rax, [rdi+0xb]; ret; 
0x000000000b8f3c: lea rax, [rdi+0xb]; sub r8, 0xc; lea rdi, [rdi+0xc]; jne 0x00000000000b97f0; ret; 
0x000000000b85ce: lea rax, [rdi+0xc]; ret; 
0x000000000b8f5e: lea rax, [rdi+0xc]; sub r8, 0xd; lea rdi, [rdi+0xd]; jne 0x00000000000b97f0; ret; 
0x000000000b85ee: lea rax, [rdi+0xd]; ret; 
0x000000000b8f8e: lea rax, [rdi+0xd]; sub r8, 0xe; lea rdi, [rdi+0xe]; jne 0x00000000000b97f0; ret; 
0x000000000b860e: lea rax, [rdi+0xe]; ret; 
0x000000000b8fbe: lea rax, [rdi+0xe]; sub r8, 0xf; lea rdi, [rdi+0xf]; jne 0x00000000000b97f0; ret; 
0x000000000b8628: lea rax, [rdi+0xf]; ret; 
0x000000000b8fe8: lea rax, [rdi+0xf]; sub r8, 0x10; lea rdi, [rdi+0x10]; jne 0x00000000000b97f0; ret; 
0x0000000018b202: lea rax, [rdi+r8]; vzeroupper; ret; 
0x000000000ac1d8: lea rax, [rdi+rax+0x10]; ret; 
0x0000000018cce6: lea rax, [rdi+rax+0x20]; cmp esi, [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x000000001881a6: lea rax, [rdi+rax+0x20]; cmp sil, [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x000000000ac1e8: lea rax, [rdi+rax+0x20]; ret; 
0x0000000013b8b4: lea rax, [rdi+rax+0x2]; cmp rdx, rax; sbb eax, eax; ret; 
0x000000000ac0e2: lea rax, [rdi+rax+0x30]; ret; 
0x0000000018cd06: lea rax, [rdi+rax+0x40]; cmp esi, [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x000000001881c6: lea rax, [rdi+rax+0x40]; cmp sil, [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x0000000018cd44: lea rax, [rdi+rax+0x60]; cmp esi, [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x00000000188204: lea rax, [rdi+rax+0x60]; cmp sil, [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x00000000188554: lea rax, [rdi+rax-0x20]; vzeroupper; ret; 
0x000000000b14ef: lea rax, [rdi+rax]; cmp [rax], sil; cmovne rax, rdx; ret; 
0x0000000018cbac: lea rax, [rdi+rax]; cmp esi, [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x0000000018806c: lea rax, [rdi+rax]; cmp sil, [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x000000000b171a: lea rax, [rdi+rax]; ret; 
0x000000000a8b28: lea rax, [rdi+rdx-0x1]; ret; 
0x0000000018ab4c: lea rax, [rdi+rdx]; vzeroupper; ret; 
0x000000000b19d8: lea rax, [rdi+rsi]; ret; 
0x000000000cf659: lea rax, [rdi-0x10]; ret; 
0x000000000cf51d: lea rax, [rdi-0x10]; ret; 
0x000000000cf6a0: lea rax, [rdi-0x4]; ret; 
0x000000000cf690: lea rax, [rdi-0x8]; ret; 
0x000000000cf680: lea rax, [rdi-0xc]; ret; 
0x000000000b84c2: lea rax, [rdi]; ret; 
0x000000000b8dc2: lea rax, [rdi]; sub r8, 0x1; lea rdi, [rdi+0x1]; jne 0x00000000000b97f0; ret; 
0x0000000018aa84: lea rax, [rdi]; vzeroupper; ret; 
0x0000000017a9f6: lea rax, [rdx+0x1]; ret; 
0x0000000017aa0c: lea rax, [rdx+0x2]; ret; 
0x0000000017aa24: lea rax, [rdx+0x3]; ret; 
0x0000000017aa3a: lea rax, [rdx+0x4]; ret; 
0x0000000017aa4c: lea rax, [rdx+0x5]; ret; 
0x0000000017aa6a: lea rax, [rdx+0x6]; ret; 
0x0000000017ce31: lea rax, [rdx+0x7]; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x0000000017a976: lea rax, [rdx+0x7]; ret; 
0x0000000017aa7c: lea rax, [rdx+0x8]; ret; 
0x0000000017aa9c: lea rax, [rdx+0x9]; ret; 
0x0000000017aabc: lea rax, [rdx+0xa]; ret; 
0x0000000017aadc: lea rax, [rdx+0xb]; ret; 
0x0000000017aafe: lea rax, [rdx+0xc]; ret; 
0x0000000017ab1e: lea rax, [rdx+0xd]; ret; 
0x0000000017cd86: lea rax, [rdx+0xe]; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x0000000017ab3e: lea rax, [rdx+0xe]; ret; 
0x0000000017a9ce: lea rax, [rdx+0xf]; ret; 
0x0000000009c240: lea rax, [rdx-0x10]; ret; 
0x0000000017a9e4: lea rax, [rdx]; ret; 
0x000000000bcd87: lea rax, [rip+0x112c2]; lea rdx, [rip+0xd575b]; cmovne rax, rdx; ret; 
0x000000000bcd40: lea rax, [rip+0x11389]; cmove rax, rdx; ret; 
0x000000000bdfb6: lea rax, [rip+0x11923]; lea rdx, [rip+0x116fc]; cmovne rax, rdx; ret; 
0x000000000bc880: lea rax, [rip+0x11b79]; cmove rax, rdx; ret; 
0x000000000d0160: lea rax, [rip+0x11ef39]; add rsp, 0x8; ret; 
0x0000000009f840: lea rax, [rip+0x12099]; cmove rax, rdx; ret; 
0x0000000009f168: lea rax, [rip+0x12330]; lea rdx, [rip+0xf18e9]; cmovne rax, rdx; ret; 
0x0000000009f690: lea rax, [rip+0x12549]; cmove rax, rdx; ret; 
0x000000000bca30: lea rax, [rip+0x12699]; cmove rax, rdx; ret; 
0x0000000009f6d0: lea rax, [rip+0x126a9]; cmove rax, rdx; ret; 
0x000000000bcb20: lea rax, [rip+0x12879]; cmove rax, rdx; ret; 
0x000000000bc8a6: lea rax, [rip+0x12933]; cmovne rax, rdx; ret; 
0x000000000bc840: lea rax, [rip+0x129c9]; cmove rax, rdx; ret; 
0x0000000007f372: lea rax, [rip+0x12f247]; movsxd rax, [rax+rcx*4]; add rax, rdx; jmp rax; 
0x000000000bc990: lea rax, [rip+0x12f89]; cmove rax, rdx; ret; 
0x0000000007e4fd: lea rax, [rip+0x1300bc]; mov r9, [rbp-0x508]; movsxd rax, [rax+rcx*4]; add rax, rdx; jmp rax; 
0x0000000007e043: lea rax, [rip+0x1304f6]; movsxd rax, [rax+rcx*4]; add rax, rdx; jmp rax; 
0x0000000007b1bb: lea rax, [rip+0x13317e]; movsxd rax, [rax+rdx*4]; lea rdx, [rip-0x4d4]; add rax, rdx; jmp rax; 
0x000000000787dc: lea rax, [rip+0x1359dd]; movsxd rax, [rax+rdx*4]; add rax, rbx; jmp rax; 
0x00000000077eb8: lea rax, [rip+0x136301]; movsxd rax, [rax+rdx*4]; add rax, rbx; jmp rax; 
0x00000000077874: lea rax, [rip+0x136845]; movsxd rax, [rax+rcx*4]; add rax, rbx; jmp rax; 
0x000000000778cf: lea rax, [rip+0x13686a]; movsxd rax, [rax+rdx*4]; add rax, rbx; jmp rax; 
0x0000000009f8cc: lea rax, [rip+0x14f68d]; mov [rip+0x14f66e], rax; add rsp, 0x8; ret; 
0x0000000009f88e: lea rax, [rip+0x14f6cb]; mov [rip+0x14f6ac], rax; ret; 
0x000000000960e9: lea rax, [rip+0x156a90]; add rsp, 0x10; pop rbp; ret; 
0x0000000009474f: lea rax, [rip+0x15cd4a]; pop rbx; mov dword ptr [rip+0x15cd2f], 0x1; ret; 
0x000000000a0766: lea rax, [rip+0x162c3]; lea rdx, [rip+0xd8bcc]; cmovne rax, rdx; ret; 
0x0000000009f246: lea rax, [rip+0x176f3]; lea rdx, [rip+0xd5dbc]; cmovne rax, rdx; ret; 
0x000000000328f0: lea rax, [rip+0x181a86]; ret; 
0x000000000328d4: lea rax, [rip+0x181aa2]; cmp [rdx+0x38], edi; jbe short 0x00000000000328f7; mov rax, [rdx+rdi*8+0x40]; ret; 
0x000000000241d4: lea rax, [rip+0x18fcc3]; ret; 
0x000000000241e4: lea rax, [rip+0x191a8c]; ret; 
0x00000000052a28: lea rax, [rip+0x19bc31]; mov byte ptr [rax+rdx], 0x0; ret; 
0x0000000009f116: lea rax, [rip+0x1a893]; lea rdx, [rip+0x12e7c]; cmovne rax, rdx; ret; 
0x00000000047fb4: lea rax, [rip+0x1a934b]; add rsp, 0x8; ret; 
0x000000000a0339: lea rax, [rip+0x1b0d0]; cmove rax, rdx; ret; 
0x000000000a0a24: lea rax, [rip+0x1b1a5]; lea rdx, [rip+0x1b0be]; cmove rax, rdx; ret; 
0x000000000a06b4: lea rax, [rip+0x1b4f5]; lea rdx, [rip+0x1b40e]; cmove rax, rdx; ret; 
0x000000000a0554: lea rax, [rip+0x1b675]; lea rdx, [rip+0x1b58e]; cmove rax, rdx; ret; 
0x000000000a05d9: lea rax, [rip+0x1b940]; cmovne rax, rdx; ret; 
0x0000000003287c: lea rax, [rip+0x1bb21d]; mov [rip+0x1bb274], dl; ret; 
0x0000000009fb26: lea rax, [rip+0x1bee3]; cmovne rax, rdx; ret; 
0x0000000009f866: lea rax, [rip+0x1c0f3]; cmovne rax, rdx; ret; 
0x0000000009f276: lea rax, [rip+0x1c633]; cmovne rax, rdx; ret; 
0x000000000a8c00: lea rax, [rip+0x3819]; cmove rax, rdx; ret; 
0x0000000012da5e: lea rax, [rip+0x3830b]; lea rdx, [rip+0x3d894]; cmovne rax, rdx; ret; 
0x0000000012d8de: lea rax, [rip+0x384ab]; lea rdx, [rip+0x3da34]; cmovne rax, rdx; ret; 
0x0000000012d99e: lea rax, [rip+0x3adcb]; lea rdx, [rip+0x40464]; cmovne rax, rdx; ret; 
0x0000000012eeb9: lea rax, [rip+0x5cb10]; cmp rdx, 0x4; cmovne r8, rax; mov rax, r8; ret; 
0x0000000012da3d: lea rax, [rip+0x5db7c]; lea rdx, [rip+0x5db05]; cmove rax, rdx; ret; 
0x0000000012d97d: lea rax, [rip+0x5dc5c]; lea rdx, [rip+0x5dbe5]; cmove rax, rdx; ret; 
0x0000000012d8bd: lea rax, [rip+0x5dd1c]; lea rdx, [rip+0x5dca5]; cmove rax, rdx; ret; 
0x0000000012db0e: lea rax, [rip+0x5df4b]; cmove rax, rdx; ret; 
0x0000000012da88: lea rax, [rip+0x628b1]; lea rdx, [rip+0x6283a]; cmove rax, rdx; ret; 
0x0000000012d9c8: lea rax, [rip+0x62991]; lea rdx, [rip+0x6291a]; cmove rax, rdx; ret; 
0x0000000012d908: lea rax, [rip+0x62a51]; lea rdx, [rip+0x629da]; cmove rax, rdx; ret; 
0x0000000012db48: lea rax, [rip+0x62da1]; lea rdx, [rip+0x62d2a]; cmove rax, rdx; ret; 
0x0000000014f74d: lea rax, [rip+0x642ac]; movsxd rdx, [rax+rdx*4]; add rdx, rax; notrack jmp rdx; 
0x00000000023a3b: lea rax, [rip+0x6a14e]; xor rax, fs:[0x30]; rol rax, 0x11; mov [rip+0x1cd8d2], rax; ret; 
0x000000000a07c6: lea rax, [rip+0x86e3]; lea rdx, [rip+0xda37c]; cmovne rax, rdx; ret; 
0x00000000120df2: lea rax, [rip+0x91887]; mov eax, [rax+rdi*4]; ret; 
0x0000000015c51d: lea rax, [rip+0x94a5c]; mov edx, 0x0; cmovne rax, rdx; add rsp, 0x8; ret; 
0x0000000009f7f6: lea rax, [rip+0x9723]; lea rdx, [rip+0xd6fbc]; cmovne rax, rdx; ret; 
0x0000000009f726: lea rax, [rip+0x9733]; lea rdx, [rip+0x1448c]; cmovne rax, rdx; ret; 
0x0000000009f1c6: lea rax, [rip+0x9db3]; lea rdx, [rip+0xc41bc]; cmovne rax, rdx; ret; 
0x00000000153183: lea rax, [rip+0x9dcb5]; mov fs:[rbx], rax; pop rbx; mov dword ptr [rip+0x9dc86], 0x2; ret; 
0x000000000a1cb0: lea rax, [rip+0xa559]; cmove rax, rdx; ret; 
0x000000001462d2: lea rax, [rip+0xaa827]; ret; 
0x000000001462a6: lea rax, [rip+0xaa853]; add rsp, 0x8; ret; 
0x0000000009f790: lea rax, [rip+0xaee9]; lea rdx, [rip+0xc4e62]; cmovne rax, rdx; ret; 
0x000000000a0430: lea rax, [rip+0xbaa9]; cmove rax, rdx; ret; 
0x000000000a08b9: lea rax, [rip+0xc350]; lea rdx, [rip+0xd0099]; cmovne rax, rdx; ret; 
0x000000000a0477: lea rax, [rip+0xc372]; lea rdx, [rip+0xf08fb]; cmovne rax, rdx; ret; 
0x000000000a0819: lea rax, [rip+0xc3d0]; lea rdx, [rip+0xd0119]; cmovne rax, rdx; ret; 
0x000000000a09de: lea rax, [rip+0xc53bb]; lea rdx, [rip+0xca944]; cmovne rax, rdx; ret; 
0x000000000a066e: lea rax, [rip+0xc570b]; lea rdx, [rip+0xcac94]; cmovne rax, rdx; ret; 
0x000000000a050e: lea rax, [rip+0xc826b]; lea rdx, [rip+0xcd904]; cmovne rax, rdx; ret; 
0x000000000bce29: lea rax, [rip+0xcebb0]; cmp rdx, 0x4; cmovne r8, rax; mov rax, r8; ret; 
0x000000000bcda8: lea rax, [rip+0xcedd1]; test byte ptr [rdx+0xcd], 0x1; je short 0x00000000000bcd75; ret; 
0x00000000119202: lea rax, [rip+0xd66b7]; add rsp, 0x18; ret; 
0x000000001191b2: lea rax, [rip+0xd6747]; pop r12; pop r13; ret; 
0x00000000118cba: lea rax, [rip+0xd6baf]; add rsp, 0x8; ret; 
0x00000000118c5f: lea rax, [rip+0xd6c2a]; pop rbp; pop r12; pop r13; ret; 
0x00000000115bcb: lea rax, [rip+0xd9aa6]; add rsp, 0x8; ret; 
0x000000000a0498: lea rax, [rip+0xe4731]; test byte ptr [rdx+0xcd], 0x1; je short 0x00000000000a0465; ret; 
0x000000000a0909: lea rax, [rip+0xe550]; lea rdx, [rip+0xd21a9]; cmovne rax, rdx; ret; 
0x000000000a0869: lea rax, [rip+0xe5d0]; lea rdx, [rip+0xd2229]; cmovne rax, rdx; ret; 
0x000000000a09bd: lea rax, [rip+0xeac2c]; lea rdx, [rip+0xeabb5]; cmove rax, rdx; ret; 
0x000000000a064d: lea rax, [rip+0xeaf7c]; lea rdx, [rip+0xeaf05]; cmove rax, rdx; ret; 
0x000000000a04ed: lea rax, [rip+0xeb0fc]; lea rdx, [rip+0xeb085]; cmove rax, rdx; ret; 
0x000000000a05be: lea rax, [rip+0xeb4ab]; cmove rax, rdx; ret; 
0x000000000a0a08: lea rax, [rip+0xef961]; lea rdx, [rip+0xef8ea]; cmove rax, rdx; ret; 
0x000000000a0698: lea rax, [rip+0xefcb1]; lea rdx, [rip+0xefc3a]; cmove rax, rdx; ret; 
0x000000000a0538: lea rax, [rip+0xefe31]; lea rdx, [rip+0xefdba]; cmove rax, rdx; ret; 
0x000000000a05f8: lea rax, [rip+0xf0301]; lea rdx, [rip+0xf028a]; cmove rax, rdx; ret; 
0x000000000a1cf0: lea rax, [rip+0xf9d9]; cmove rax, rdx; ret; 
0x00000000077c19: lea rax, [rip-0x10dd]; mov r10, rdx; mov dword ptr [rbp-0x51c], 0x1; jmp rax; 
0x000000000d1008: lea rax, [rip-0x10f]; add rsp, 0x58; ret; 
0x000000000d0ef8: lea rax, [rip-0x10f]; ret; 
0x000000000d1018: lea rax, [rip-0x11f]; ret; 
0x0000000012db29: lea rax, [rip-0x71c20]; cmovne rax, rdx; ret; 
0x0000000012d924: lea rax, [rip-0x71d6b]; lea rdx, [rip-0x71e52]; cmove rax, rdx; ret; 
0x0000000012d9e4: lea rax, [rip-0x71e2b]; lea rdx, [rip-0x71f12]; cmove rax, rdx; ret; 
0x0000000012daa4: lea rax, [rip-0x71f0b]; lea rdx, [rip-0x71ff2]; cmove rax, rdx; ret; 
0x0000000010d286: lea rax, [rip-0xbd]; cmove rax, rdx; ret; 
0x0000000007e200: lea rax, [rip-0xfac]; mov r9, rcx; mov dword ptr [rbp-0x510], 0x1; jmp rax; 
0x000000000d0ee8: lea rax, [rip-0xff]; add rsp, 0x58; ret; 
0x000000001232a4: lea rax, [rsi+rax*4]; mov eax, [rax+rdx]; shr eax, cl; and eax, 0x1; ret; 
0x00000000198a23: lea rbp, [rbx+rax*8+0x8]; nop [rax+rax]; call qword ptr [rbx]; 
0x00000000150fc8: lea rbp, [rsp+0x138]; mov rsi, rbp; mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x10]; 
0x0000000014d3ac: lea rbp, [rsp+0x68]; mov rsi, rbp; mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x10]; 
0x00000000092047: lea rbx, [rsi+0x1]; mov rdi, r15; movzx esi, byte ptr [rsi]; call qword ptr [rax+0x18]; 
0x000000000920ba: lea rbx, [rsi+0x1]; movzx esi, byte ptr [rsi]; call qword ptr [rax+0x18]; 
0x0000000015fdd5: lea rcx, [r10+0x398]; lea r8, [rsp+0x30]; call qword ptr [rax+0x1e0]; 
0x000000000b6d3d: lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000bd05a: lea rcx, [rax+0x1]; lea r9, [rsp+0x28]; call rbx; 
0x000000000bd1b4: lea rcx, [rax+0x4]; lea r9, [rsp+0x18]; call rbx; 
0x000000000bd5cd: lea rcx, [rax+0x4]; lea r9, [rsp+0x20]; call rbx; 
0x00000000110399: lea rcx, [rbp+0x28]; mov edx, 0x1; call qword ptr [rbp+0x40]; 
0x000000001106f9: lea rcx, [rbp+0x28]; mov edx, 0x2; call qword ptr [rbp+0x40]; 
0x00000000110679: lea rcx, [rbp+0x28]; mov edx, 0x5; call qword ptr [rbp+0x40]; 
0x0000000010ff7e: lea rcx, [rbx+0x28]; mov rsi, r14; mov edx, [rdx+rax]; call qword ptr [rbx+0x40]; 
0x00000000080c74: lea rcx, [rbx+0x40]; lea rdx, [rbx+0x34]; mov esi, 0x1; mov rdi, rbx; call rax; 
0x0000000008126e: lea rcx, [rbx+0x40]; mov esi, 0x1; mov rdi, rbx; call r8; 
0x00000000074053: lea rcx, [rbx+rdx]; add rdx, r15; call qword ptr [rax+r9*8]; 
0x0000000013f001: lea rcx, [rdi+0x1]; test al, al; jne short 0x000000000013efed; mov eax, r10d; ret; 
0x000000001782c5: lea rcx, [rdx+0x10]; jne 0x0000000000178810; ret; 
0x0000000017c656: lea rcx, [rdx+0x10]; jne 0x000000000017cc60; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x000000001784bb: lea rcx, [rdx+0x1]; jne 0x0000000000178810; ret; 
0x0000000017c85b: lea rcx, [rdx+0x1]; jne 0x000000000017cc60; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x0000000008df57: lea rcx, [rdx+0x1]; mov [rsi+0x28], rcx; mov [rdx], al; mov eax, r8d; ret; 
0x000000001784dd: lea rcx, [rdx+0x2]; jne 0x0000000000178810; ret; 
0x0000000017c87e: lea rcx, [rdx+0x2]; jne 0x000000000017cc60; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x00000000178503: lea rcx, [rdx+0x3]; jne 0x0000000000178810; ret; 
0x0000000017c8a4: lea rcx, [rdx+0x3]; jne 0x000000000017cc60; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x0000000017851b: lea rcx, [rdx+0x4]; jne 0x0000000000178810; ret; 
0x0000000017c8cc: lea rcx, [rdx+0x4]; jne 0x000000000017cc60; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x000000000855b9: lea rcx, [rdx+0x4]; mov [rax], rcx; mov eax, [rdx]; ret; 
0x00000000178541: lea rcx, [rdx+0x5]; jne 0x0000000000178810; ret; 
0x0000000017c8f2: lea rcx, [rdx+0x5]; jne 0x000000000017cc60; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x00000000178563: lea rcx, [rdx+0x6]; jne 0x0000000000178810; ret; 
0x0000000017c924: lea rcx, [rdx+0x6]; jne 0x000000000017cc60; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x00000000178581: lea rcx, [rdx+0x7]; jne 0x0000000000178810; ret; 
0x0000000017c952: lea rcx, [rdx+0x7]; jne 0x000000000017cc60; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x0000000017825d: lea rcx, [rdx+0x8]; jne 0x0000000000178810; ret; 
0x0000000017c5ee: lea rcx, [rdx+0x8]; jne 0x000000000017cc60; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x000000001785a3: lea rcx, [rdx+0x9]; jne 0x0000000000178810; ret; 
0x0000000017c984: lea rcx, [rdx+0x9]; jne 0x000000000017cc60; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x000000001785c3: lea rcx, [rdx+0xa]; jne 0x0000000000178810; ret; 
0x0000000017c9b4: lea rcx, [rdx+0xa]; jne 0x000000000017cc60; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x000000001785e3: lea rcx, [rdx+0xb]; jne 0x0000000000178810; ret; 
0x0000000017c9e4: lea rcx, [rdx+0xb]; jne 0x000000000017cc60; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x00000000178603: lea rcx, [rdx+0xc]; jne 0x0000000000178810; ret; 
0x0000000017ca14: lea rcx, [rdx+0xc]; jne 0x000000000017cc60; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x00000000178625: lea rcx, [rdx+0xd]; jne 0x0000000000178810; ret; 
0x0000000017ca46: lea rcx, [rdx+0xd]; jne 0x000000000017cc60; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x00000000178645: lea rcx, [rdx+0xe]; jne 0x0000000000178810; ret; 
0x0000000017ca76: lea rcx, [rdx+0xe]; jne 0x000000000017cc60; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x00000000178665: lea rcx, [rdx+0xf]; jne 0x0000000000178810; ret; 
0x0000000017caa6: lea rcx, [rdx+0xf]; jne 0x000000000017cc60; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x00000000123128: lea rcx, [rdx+rcx*4]; mov ecx, [rcx+rsi]; test ecx, ecx; jne short 0x0000000000123138; ret; 
0x00000000123191: lea rcx, [rdx+rcx*4]; mov ecx, [rcx+rsi]; test ecx, ecx; jne short 0x00000000001231a0; ret; 
0x00000000123a78: lea rcx, [rdx+rcx*4]; mov ecx, [rcx+rsi]; test ecx, ecx; jne short 0x0000000000123a88; ret; 
0x00000000123ad5: lea rcx, [rdx+rcx*4]; mov ecx, [rcx+rsi]; test ecx, ecx; jne short 0x0000000000123ae8; ret; 
0x0000000017df36: lea rcx, [rdx+rcx-0x10]; movzx eax, byte ptr [rdi+rcx]; movzx edx, byte ptr [rsi+rcx]; sub eax, edx; ret; 
0x00000000080f0b: lea rcx, [rip+0x12dbb2]; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x00000000080757: lea rcx, [rip+0x12e122]; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x0000000007df9e: lea rcx, [rip+0x13069b]; mov r9, rsi; movsxd rax, [rcx+rax*4]; add rax, rdx; jmp rax; 
0x00000000187f7d: lea rcx, [rip+0x1353c]; mov edx, [rcx+rdx*4]; mov eax, [rcx+rax*4]; sub eax, edx; ret; 
0x0000000006c32b: lea rcx, [rip+0x14191e]; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x00000000064951: lea rcx, [rip+0x1490f8]; movzx edx, dl; movsxd rax, [rcx+rdx*4]; add rax, rcx; notrack jmp rax; 
0x0000000006364d: lea rcx, [rip+0x149b94]; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x00000000063541: lea rcx, [rip+0x149c38]; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x0000000018689c: lea rcx, [rip+0x14c1d]; mov eax, [rcx+rax*4]; mov edx, [rcx+rdx*4]; sub eax, edx; ret; 
0x000000001865c8: lea rcx, [rip+0x14ef1]; mov edx, [rcx+rdx*4]; mov eax, [rcx+rax*4]; sub eax, edx; ret; 
0x0000000008e5e5: lea rcx, [rip+0x15a8b4]; mov [rdx+0xe0], rcx; pop rbx; ret; 
0x000000001851b3: lea rcx, [rip+0x16306]; mov eax, [rcx+rax*4]; mov edx, [rcx+rdx*4]; sub eax, edx; ret; 
0x000000001836bd: lea rcx, [rip+0x17dfc]; mov edx, [rcx+rdx*4]; mov eax, [rcx+rax*4]; sub eax, edx; ret; 
0x00000000181a2c: lea rcx, [rip+0x19a8d]; mov eax, [rcx+rax*4]; mov edx, [rcx+rdx*4]; sub eax, edx; ret; 
0x000000001816f8: lea rcx, [rip+0x19dc1]; mov edx, [rcx+rdx*4]; mov eax, [rcx+rax*4]; sub eax, edx; ret; 
0x0000000017fe23: lea rcx, [rip+0x1b696]; mov eax, [rcx+rax*4]; mov edx, [rcx+rdx*4]; sub eax, edx; ret; 
0x000000001481e6: lea rcx, [rip+0x6a793]; mov edx, r8d; movsxd rax, [rcx+rdx*4]; add rax, rcx; notrack jmp rax; 
0x0000000010b147: lea rcx, [rip+0xa715a]; movzx eax, al; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x00000000109082: lea rcx, [rip+0xa8edf]; mov edx, ebp; movsxd rax, [rcx+rdx*4]; add rax, rcx; notrack jmp rax; 
0x000000000da962: lea rcx, [rip+0xd5873]; mov edx, r8d; movsxd rax, [rcx+rdx*4]; add rax, rcx; notrack jmp rax; 
0x0000000015f86b: lea rcx, [rsi+0x398]; push 0x0; call qword ptr [rax+0x1e0]; 
0x0000000015f81a: lea rcx, [rsi+0x398]; push 0x2; call qword ptr [rax+0x1e0]; 
0x00000000123395: lea rcx, [rsi+rcx*4]; add eax, [rcx+rdx]; ret; 
0x0000000012337a: lea rcx, [rsi+rcx*4]; mov edx, [rcx+rdx]; test edx, edx; jne short 0x0000000000123390; ret; 
0x00000000123caa: lea rcx, [rsi+rcx*4]; mov edx, [rcx+rdx]; test edx, edx; jne short 0x0000000000123cc0; ret; 
0x0000000014db44: lea rdi, [r12+0x10]; call rax; 
0x0000000009cf14: lea rdi, [r12+0x31]; mov [rbx], rax; test rax, rax; je 0x000000000009cff0; call rax; 
0x0000000015f301: lea rdi, [r12+0x930]; call qword ptr [r12+0xf10]; 
0x0000000015f191: lea rdi, [r12+0x930]; mov rax, fs:[0x28]; mov [rsp+0x68], rax; xor eax, eax; call qword ptr [r12+0xf08]; 
0x00000000035071: lea rdi, [r13+0x80]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000015f3aa: lea rdi, [r15+0x908]; call qword ptr [r15+0xf08]; 
0x0000000015f532: lea rdi, [r15+0x908]; call qword ptr [r15+0xf10]; 
0x0000000013b936: lea rdi, [rax+rcx+0x2]; cmp r8, rdi; jae short 0x000000000013b953; mov eax, 0xffffffff; ret; 
0x000000001507f6: lea rdi, [rbp+0x58]; call rax; 
0x0000000014fd56: lea rdi, [rbp+0x68]; call rax; 
0x0000000004725e: lea rdi, [rbp+0x908]; call qword ptr [rbp+0xf10]; 
0x0000000004722b: lea rdi, [rbp+0x908]; mov rdx, fs:[rax]; mov [rbx+0x18], rdx; mov fs:[rax], rbx; call qword ptr [rbp+0xf08]; 
0x0000000014cf29: lea rdi, [rbp+0xc8]; call rax; 
0x0000000007d3ae: lea rdi, [rbp-0x460]; mov rdx, r12; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000007d2c8: lea rdi, [rbp-0x460]; xor esi, esi; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000076cae: lea rdi, [rbp-0x470]; mov rdx, r12; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000076bbf: lea rdi, [rbp-0x470]; xor esi, esi; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000006beee: lea rdi, [rbp-0x500]; mov rdx, r13; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000006c238: lea rdi, [rbp-0x500]; xor esi, esi; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000063d56: lea rdi, [rbp-0x5e0]; mov rdx, r12; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000064102: lea rdi, [rbp-0x5e0]; xor esi, esi; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000024154: lea rdi, [rbx+0x480]; add rdx, 0x988; cmp r15, rdx; je short 0x0000000000024177; call rax; 
0x000000000b78cc: lea rdi, [rdi+0x10]; jne 0x00000000000b7fa0; ret; 
0x000000000b8ff0: lea rdi, [rdi+0x10]; jne 0x00000000000b97f0; ret; 
0x000000000b78ef: lea rdi, [rdi+0x11]; jne 0x00000000000b7fa0; ret; 
0x000000000b9013: lea rdi, [rdi+0x11]; jne 0x00000000000b97f0; ret; 
0x000000000b7914: lea rdi, [rdi+0x12]; jne 0x00000000000b7fa0; ret; 
0x000000000b9038: lea rdi, [rdi+0x12]; jne 0x00000000000b97f0; ret; 
0x000000000b7932: lea rdi, [rdi+0x13]; jne 0x00000000000b7fa0; ret; 
0x000000000b9066: lea rdi, [rdi+0x13]; jne 0x00000000000b97f0; ret; 
0x000000000b7952: lea rdi, [rdi+0x14]; jne 0x00000000000b7fa0; ret; 
0x000000000b9096: lea rdi, [rdi+0x14]; jne 0x00000000000b97f0; ret; 
0x000000000b7975: lea rdi, [rdi+0x15]; jne 0x00000000000b7fa0; ret; 
0x000000000b90c9: lea rdi, [rdi+0x15]; jne 0x00000000000b97f0; ret; 
0x000000000b7994: lea rdi, [rdi+0x16]; jne 0x00000000000b7fa0; ret; 
0x000000000b90f8: lea rdi, [rdi+0x16]; jne 0x00000000000b97f0; ret; 
0x000000000b79b4: lea rdi, [rdi+0x17]; jne 0x00000000000b7fa0; ret; 
0x000000000b9128: lea rdi, [rdi+0x17]; jne 0x00000000000b97f0; ret; 
0x000000000b79d4: lea rdi, [rdi+0x18]; jne 0x00000000000b7fa0; ret; 
0x000000000b9158: lea rdi, [rdi+0x18]; jne 0x00000000000b97f0; ret; 
0x000000000b79f7: lea rdi, [rdi+0x19]; jne 0x00000000000b7fa0; ret; 
0x000000000b918b: lea rdi, [rdi+0x19]; jne 0x00000000000b97f0; ret; 
0x000000000b76e6: lea rdi, [rdi+0x1]; jne 0x00000000000b7fa0; ret; 
0x000000000b8dc9: lea rdi, [rdi+0x1]; jne 0x00000000000b97f0; ret; 
0x0000000018a1dc: lea rdi, [rdi+0x1]; jne 0x000000000018a610; vzeroupper; ret; 
0x0000000018aef4: lea rdi, [rdi+0x1]; jne 0x000000000018b340; vzeroupper; ret; 
0x000000000b7a2c: lea rdi, [rdi+0x1a]; jne 0x00000000000b7fa0; ret; 
0x000000000b91c0: lea rdi, [rdi+0x1a]; jne 0x00000000000b97f0; ret; 
0x000000000b7a5a: lea rdi, [rdi+0x1b]; jne 0x00000000000b7fa0; ret; 
0x000000000b91ee: lea rdi, [rdi+0x1b]; jne 0x00000000000b97f0; ret; 
0x000000000b7a8a: lea rdi, [rdi+0x1c]; jne 0x00000000000b7fa0; ret; 
0x000000000b921e: lea rdi, [rdi+0x1c]; jne 0x00000000000b97f0; ret; 
0x000000000b7ab6: lea rdi, [rdi+0x1d]; jne 0x00000000000b7fa0; ret; 
0x000000000b924a: lea rdi, [rdi+0x1d]; jne 0x00000000000b97f0; ret; 
0x000000000b7ae6: lea rdi, [rdi+0x1e]; jne 0x00000000000b7fa0; ret; 
0x000000000b927a: lea rdi, [rdi+0x1e]; jne 0x00000000000b97f0; ret; 
0x000000000b7b16: lea rdi, [rdi+0x1f]; jne 0x00000000000b7fa0; ret; 
0x000000000b92aa: lea rdi, [rdi+0x1f]; jne 0x00000000000b97f0; ret; 
0x000000000b7b46: lea rdi, [rdi+0x20]; jne 0x00000000000b7fa0; ret; 
0x000000000b92da: lea rdi, [rdi+0x20]; jne 0x00000000000b97f0; ret; 
0x000000000b770a: lea rdi, [rdi+0x2]; jne 0x00000000000b7fa0; ret; 
0x000000000b8dee: lea rdi, [rdi+0x2]; jne 0x00000000000b97f0; ret; 
0x0000000018a38a: lea rdi, [rdi+0x2]; jne 0x000000000018a610; vzeroupper; ret; 
0x0000000018b0be: lea rdi, [rdi+0x2]; jne 0x000000000018b340; vzeroupper; ret; 
0x000000000b772d: lea rdi, [rdi+0x3]; jne 0x00000000000b7fa0; ret; 
0x000000000b8e11: lea rdi, [rdi+0x3]; jne 0x00000000000b97f0; ret; 
0x0000000018a3ae: lea rdi, [rdi+0x3]; jne 0x000000000018a610; vzeroupper; ret; 
0x0000000018b0e2: lea rdi, [rdi+0x3]; jne 0x000000000018b340; vzeroupper; ret; 
0x000000000b7748: lea rdi, [rdi+0x4]; jne 0x00000000000b7fa0; ret; 
0x000000000b8e2c: lea rdi, [rdi+0x4]; jne 0x00000000000b97f0; ret; 
0x0000000018a3c8: lea rdi, [rdi+0x4]; jne 0x000000000018a610; vzeroupper; ret; 
0x0000000018b0fc: lea rdi, [rdi+0x4]; jne 0x000000000018b340; vzeroupper; ret; 
0x000000000b776b: lea rdi, [rdi+0x5]; jne 0x00000000000b7fa0; ret; 
0x000000000b8e4f: lea rdi, [rdi+0x5]; jne 0x00000000000b97f0; ret; 
0x000000000b7790: lea rdi, [rdi+0x6]; jne 0x00000000000b7fa0; ret; 
0x000000000b8e74: lea rdi, [rdi+0x6]; jne 0x00000000000b97f0; ret; 
0x000000000b77ae: lea rdi, [rdi+0x7]; jne 0x00000000000b7fa0; ret; 
0x000000000b8e92: lea rdi, [rdi+0x7]; jne 0x00000000000b97f0; ret; 
0x000000000b77ca: lea rdi, [rdi+0x8]; jne 0x00000000000b7fa0; ret; 
0x000000000b8eae: lea rdi, [rdi+0x8]; jne 0x00000000000b97f0; ret; 
0x000000000b77ed: lea rdi, [rdi+0x9]; jne 0x00000000000b7fa0; ret; 
0x000000000b8ed1: lea rdi, [rdi+0x9]; jne 0x00000000000b97f0; ret; 
0x000000000b7812: lea rdi, [rdi+0xa]; jne 0x00000000000b7fa0; ret; 
0x000000000b8ef6: lea rdi, [rdi+0xa]; jne 0x00000000000b97f0; ret; 
0x000000000b7830: lea rdi, [rdi+0xb]; jne 0x00000000000b7fa0; ret; 
0x000000000b8f24: lea rdi, [rdi+0xb]; jne 0x00000000000b97f0; ret; 
0x000000000b7850: lea rdi, [rdi+0xc]; jne 0x00000000000b7fa0; ret; 
0x000000000b8f44: lea rdi, [rdi+0xc]; jne 0x00000000000b97f0; ret; 
0x000000000b7872: lea rdi, [rdi+0xd]; jne 0x00000000000b7fa0; ret; 
0x000000000b8f66: lea rdi, [rdi+0xd]; jne 0x00000000000b97f0; ret; 
0x000000000b7892: lea rdi, [rdi+0xe]; jne 0x00000000000b7fa0; ret; 
0x000000000b8f96: lea rdi, [rdi+0xe]; jne 0x00000000000b97f0; ret; 
0x000000000b78b2: lea rdi, [rdi+0xf]; jne 0x00000000000b7fa0; ret; 
0x000000000b8fc6: lea rdi, [rdi+0xf]; jne 0x00000000000b97f0; ret; 
0x0000000018a3f3: lea rdi, [rdi+rdx+0x1]; jne 0x000000000018a610; vzeroupper; ret; 
0x0000000018b127: lea rdi, [rdi+rdx+0x1]; jne 0x000000000018b340; vzeroupper; ret; 
0x000000001663f3: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000166406; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000166543: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000166556; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000166693: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x00000000001666a6; movaps [rdi], xmm4; notrack jmp r9; 
0x000000001667e3: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x00000000001667f6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000166933: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000166946; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000166a83: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000166a96; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000166bd3: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000166be6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000166d23: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000166d36; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000166e73: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000166e86; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000166fc3: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000166fd6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000167113: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000167126; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000167263: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000167276; movaps [rdi], xmm4; notrack jmp r9; 
0x000000001673b3: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x00000000001673c6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000167503: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000167516; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000167653: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000167666; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000168dd3: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000168de6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000168f23: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000168f36; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000169073: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000169086; movaps [rdi], xmm4; notrack jmp r9; 
0x000000001691c3: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x00000000001691d6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000169313: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000169326; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000169463: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000169476; movaps [rdi], xmm4; notrack jmp r9; 
0x000000001695b3: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x00000000001695c6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000169703: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000169716; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000169853: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000169866; movaps [rdi], xmm4; notrack jmp r9; 
0x000000001699a3: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x00000000001699b6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000169af3: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000169b06; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000169c43: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000169c56; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000169d93: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000169da6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000169ee3: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000169ef6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000016a033: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x000000000016a046; movaps [rdi], xmm4; notrack jmp r9; 
0x000000000a8a50: lea rdi, [rip+0x106469]; mov edx, edx; movsxd rdx, [rdi+rdx*4]; add rdx, rdi; notrack jmp rdx; 
0x000000000e1dd7: lea rdi, [rip+0x10d702]; syscall; 
0x000000000e1c97: lea rdi, [rip+0x10d842]; syscall; 
0x000000000e1bdf: lea rdi, [rip+0x10d8fa]; syscall; 
0x000000000e1b03: lea rdi, [rip+0x10d9ce]; syscall; 
0x000000000e1933: lea rdi, [rip+0x10db5e]; syscall; 
0x000000000e176f: lea rdi, [rip+0x10dcda]; syscall; 
0x000000000e13b5: lea rdi, [rip+0x10e03c]; syscall; 
0x000000000dfea7: lea rdi, [rip+0x10f4c2]; syscall; 
0x000000000dfd67: lea rdi, [rip+0x10f602]; syscall; 
0x000000000dfcaf: lea rdi, [rip+0x10f6ba]; syscall; 
0x000000000df8e3: lea rdi, [rip+0x10fa7e]; syscall; 
0x000000000df713: lea rdi, [rip+0x10fc0e]; syscall; 
0x000000000df54f: lea rdi, [rip+0x10fd8a]; syscall; 
0x000000000ddbb7: lea rdi, [rip+0x10fdc2]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000ddb71: lea rdi, [rip+0x10fe08]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000dd9cf: lea rdi, [rip+0x10ffaa]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000dd9a0: lea rdi, [rip+0x10ffd9]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000dd8d7: lea rdi, [rip+0x1100a2]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000dd8ae: lea rdi, [rip+0x1100cb]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000dd3dc: lea rdi, [rip+0x11059d]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000dec67: lea rdi, [rip+0x11061a]; syscall; 
0x000000000d2bc3: lea rdi, [rip+0x11c5d6]; syscall; 
0x000000000d298f: lea rdi, [rip+0x11c80a]; syscall; 
0x000000000ca32f: lea rdi, [rip+0x12364a]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000ca14c: lea rdi, [rip+0x12382d]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000ca663: lea rdi, [rip+0x126b46]; syscall; 
0x00000000080ea7: lea rdi, [rip+0x12db5a]; movsxd rcx, [rdi+rcx*4]; add rcx, rdi; notrack jmp rcx; 
0x0000000006c675: lea rdi, [rip+0x141690]; movsxd rax, [rdi+r12*4]; add rax, rdi; notrack jmp rax; 
0x00000000064617: lea rdi, [rip+0x1492e2]; movzx r12d, r12b; movsxd rax, [rdi+r12*4]; add rax, rdi; notrack jmp rax; 
0x0000000009f95b: lea rdi, [rip+0x14f5de]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000009f8b2: lea rdi, [rip+0x14f70b]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000009c823: lea rdi, [rip+0x150356]; syscall; 
0x0000000009e1cf: lea rdi, [rip+0x150d32]; syscall; 
0x0000000009dfef: lea rdi, [rip+0x150f12]; syscall; 
0x0000000009de03: lea rdi, [rip+0x1510fe]; syscall; 
0x0000000009dd93: lea rdi, [rip+0x15116e]; syscall; 
0x0000000009db63: lea rdi, [rip+0x15139e]; syscall; 
0x00000000099ac3: lea rdi, [rip+0x1530b6]; syscall; 
0x00000000099a63: lea rdi, [rip+0x153116]; syscall; 
0x000000000996a3: lea rdi, [rip+0x1534d6]; syscall; 
0x00000000099443: lea rdi, [rip+0x153736]; syscall; 
0x00000000098ddb: lea rdi, [rip+0x153d9e]; syscall; 
0x00000000098da3: lea rdi, [rip+0x153dd6]; syscall; 
0x0000000009aa73: lea rdi, [rip+0x15440e]; syscall; 
0x00000000099fd7: lea rdi, [rip+0x154e9a]; syscall; 
0x00000000096044: lea rdi, [rip+0x158e2d]; syscall; 
0x00000000096013: lea rdi, [rip+0x158e6e]; syscall; 
0x00000000095d93: lea rdi, [rip+0x1590ee]; syscall; 
0x0000000009586f: lea rdi, [rip+0x159612]; syscall; 
0x00000000094c54: lea rdi, [rip+0x159ba5]; syscall; 
0x00000000094a7f: lea rdi, [rip+0x159d7a]; syscall; 
0x000000000948e3: lea rdi, [rip+0x159f16]; syscall; 
0x00000000093955: lea rdi, [rip+0x15ae64]; syscall; 
0x00000000093415: lea rdi, [rip+0x15b3a4]; syscall; 
0x00000000093071: lea rdi, [rip+0x15b748]; syscall; 
0x00000000092d05: lea rdi, [rip+0x15bab4]; syscall; 
0x00000000091681: lea rdi, [rip+0x15d138]; syscall; 
0x000000000913c1: lea rdi, [rip+0x15d3f8]; syscall; 
0x0000000009104d: lea rdi, [rip+0x15d76c]; syscall; 
0x00000000084392: lea rdi, [rip+0x16a3e7]; syscall; 
0x00000000083f95: lea rdi, [rip+0x16a7e4]; syscall; 
0x00000000083eea: lea rdi, [rip+0x16a88f]; syscall; 
0x00000000082023: lea rdi, [rip+0x16f186]; syscall; 
0x000000000610d7: lea rdi, [rip+0x18d672]; syscall; 
0x00000000060e53: lea rdi, [rip+0x18d8f2]; syscall; 
0x0000000005ec7f: lea rdi, [rip+0x18fabe]; syscall; 
0x0000000005eb3f: lea rdi, [rip+0x18fbfe]; syscall; 
0x0000000002418c: lea rdi, [rip+0x18fcef]; mov rsi, [rax]; xor eax, eax; call qword ptr [rdx+0x1d0]; 
0x000000000240bf: lea rdi, [rip+0x18fda2]; mov rsi, [rax]; xor eax, eax; call qword ptr [rdx+0x1d0]; 
0x00000000054da3: lea rdi, [rip+0x199986]; syscall; 
0x00000000054bc3: lea rdi, [rip+0x199b66]; syscall; 
0x00000000054744: lea rdi, [rip+0x199fdd]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000054693: lea rdi, [rip+0x19a096]; syscall; 
0x000000000522a7: lea rdi, [rip+0x19c252]; syscall; 
0x0000000005212b: lea rdi, [rip+0x19c3ce]; syscall; 
0x000000000520f3: lea rdi, [rip+0x19c406]; syscall; 
0x000000000478df: lea rdi, [rip+0x1a6bfa]; syscall; 
0x0000000004781f: lea rdi, [rip+0x1a6cba]; syscall; 
0x00000000047757: lea rdi, [rip+0x1a6d82]; syscall; 
0x0000000004767f: lea rdi, [rip+0x1a6e5a]; syscall; 
0x00000000046777: lea rdi, [rip+0x1a750a]; syscall; 
0x000000000466b2: lea rdi, [rip+0x1a75cf]; syscall; 
0x00000000046510: lea rdi, [rip+0x1a7771]; syscall; 
0x00000000046436: lea rdi, [rip+0x1a784b]; syscall; 
0x0000000003859e: lea rdi, [rip+0x1b555b]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003853d: lea rdi, [rip+0x1b55bc]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000038500: lea rdi, [rip+0x1b5731]; syscall; 
0x00000000036b7d: lea rdi, [rip+0x1b707c]; syscall; 
0x00000000036589: lea rdi, [rip+0x1b7630]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000036520: lea rdi, [rip+0x1b7699]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000363f1: lea rdi, [rip+0x1b77c8]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000036391: lea rdi, [rip+0x1b7828]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000036283: lea rdi, [rip+0x1b78f6]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000036217: lea rdi, [rip+0x1b7962]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035f80: lea rdi, [rip+0x1b79f9]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035e74: lea rdi, [rip+0x1b7b05]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035f52: lea rdi, [rip+0x1b7ba7]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035d06: lea rdi, [rip+0x1b7c73]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035e4d: lea rdi, [rip+0x1b7cac]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035cd4: lea rdi, [rip+0x1b7e25]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035903: lea rdi, [rip+0x1b8076]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000359cc: lea rdi, [rip+0x1b81ad]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003592a: lea rdi, [rip+0x1b81cf]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035987: lea rdi, [rip+0x1b81f2]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035842: lea rdi, [rip+0x1b830f]; syscall; 
0x00000000035825: lea rdi, [rip+0x1b832c]; syscall; 
0x0000000003575d: lea rdi, [rip+0x1b83f4]; syscall; 
0x000000000345b8: lea rdi, [rip+0x1b9541]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000033ae4: lea rdi, [rip+0x1b9e95]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000033a09: lea rdi, [rip+0x1b9f70]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000033992: lea rdi, [rip+0x1b9fe7]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000338f8: lea rdi, [rip+0x1ba081]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003335e: lea rdi, [rip+0x1ba61b]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000332f4: lea rdi, [rip+0x1ba685]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000330f4: lea rdi, [rip+0x1ba885]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000310c3: lea rdi, [rip+0x1bc8b6]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000030cbb: lea rdi, [rip+0x1bccbe]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000030b69: lea rdi, [rip+0x1bce10]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000030a81: lea rdi, [rip+0x1bcef8]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000309f4: lea rdi, [rip+0x1bcf85]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000307bf: lea rdi, [rip+0x1bd1ba]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000030777: lea rdi, [rip+0x1bd202]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000026f6c: lea rdi, [rip+0x1c69e1]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000026077: lea rdi, [rip+0x1cb132]; syscall; 
0x00000000025f0b: lea rdi, [rip+0x1cb29e]; syscall; 
0x00000000025deb: lea rdi, [rip+0x1cb3be]; syscall; 
0x00000000022846: lea rdi, [rip+0x1cb403]; syscall; 
0x0000000019418e: lea rdi, [rip+0x2a48b]; movsxd r12, [rdi+r12*4]; add rdi, r12; notrack jmp rdi; 
0x00000000193f75: lea rdi, [rip+0x2a638]; movsxd rcx, [rdi+r12*4]; add rcx, rdi; notrack jmp rcx; 
0x000000001987ef: lea rdi, [rip+0x55492]; syscall; 
0x000000001989af: lea rdi, [rip+0x55e4a]; syscall; 
0x00000000198cdf: lea rdi, [rip+0x57832]; syscall; 
0x00000000150681: lea rdi, [rip+0x6379c]; mov ecx, esi; movsxd rax, [rdi+rcx*4]; add rax, rdi; notrack jmp rax; 
0x0000000014fd9d: lea rdi, [rip+0x64040]; mov ecx, esi; movsxd rax, [rdi+rcx*4]; add rax, rdi; notrack jmp rax; 
0x0000000014cf6d: lea rdi, [rip+0x66a4c]; mov ecx, esi; movsxd rax, [rdi+rcx*4]; add rax, rdi; notrack jmp rax; 
0x0000000015e07f: lea rdi, [rip+0x935d2]; syscall; 
0x0000000015cf47: lea rdi, [rip+0x9470a]; syscall; 
0x0000000015ce67: lea rdi, [rip+0x947ea]; syscall; 
0x0000000015cc7f: lea rdi, [rip+0x949d2]; syscall; 
0x0000000015cbef: lea rdi, [rip+0x94a62]; syscall; 
0x0000000015cb4f: lea rdi, [rip+0x94b02]; syscall; 
0x0000000015ca9f: lea rdi, [rip+0x94bb2]; syscall; 
0x0000000015c6cf: lea rdi, [rip+0x94f82]; syscall; 
0x000000001534ce: lea rdi, [rip+0x9d94b]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000001533fe: lea rdi, [rip+0x9da1b]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000015332e: lea rdi, [rip+0x9daeb]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000153266: lea rdi, [rip+0x9dbb3]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000001531ae: lea rdi, [rip+0x9dc6b]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000015243f: lea rdi, [rip+0x9e9aa]; syscall; 
0x000000001522df: lea rdi, [rip+0x9eb0a]; syscall; 
0x000000001520d3: lea rdi, [rip+0x9ed16]; syscall; 
0x00000000151f33: lea rdi, [rip+0x9eeb6]; syscall; 
0x00000000151d9f: lea rdi, [rip+0x9f04a]; syscall; 
0x00000000151c5f: lea rdi, [rip+0x9f18a]; syscall; 
0x00000000151aff: lea rdi, [rip+0x9f2ea]; syscall; 
0x000000001519ef: lea rdi, [rip+0x9f3fa]; syscall; 
0x0000000014e4df: lea rdi, [rip+0xa2906]; syscall; 
0x0000000014c7e7: lea rdi, [rip+0xa453a]; syscall; 
0x0000000014c6a7: lea rdi, [rip+0xa467a]; syscall; 
0x0000000014c5ef: lea rdi, [rip+0xa4732]; syscall; 
0x0000000014c503: lea rdi, [rip+0xa4816]; syscall; 
0x0000000014c333: lea rdi, [rip+0xa49b6]; syscall; 
0x0000000014c16f: lea rdi, [rip+0xa4b52]; syscall; 
0x0000000010cf94: lea rdi, [rip+0xa7622]; mov rdx, [rax+0xb0]; call qword ptr [rax+0x88]; 
0x000000001467d1: lea rdi, [rip+0xaa38c]; syscall; 
0x00000000146290: lea rdi, [rip+0xaa849]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000144633: lea rdi, [rip+0xac496]; syscall; 
0x000000001442fb: lea rdi, [rip+0xac7ce]; syscall; 
0x00000000143f7b: lea rdi, [rip+0xacb4e]; syscall; 
0x00000000143d55: lea rdi, [rip+0xacd74]; syscall; 
0x00000000143bf3: lea rdi, [rip+0xaced6]; syscall; 
0x000000001439b6: lea rdi, [rip+0xad113]; syscall; 
0x00000000142f5f: lea rdi, [rip+0xadab2]; syscall; 
0x00000000142ddd: lea rdi, [rip+0xadc34]; syscall; 
0x00000000142da3: lea rdi, [rip+0xadc6e]; syscall; 
0x00000000142c8b: lea rdi, [rip+0xadd86]; syscall; 
0x00000000142447: lea rdi, [rip+0xae5ca]; syscall; 
0x0000000014237f: lea rdi, [rip+0xae692]; syscall; 
0x00000000142263: lea rdi, [rip+0xae7ae]; syscall; 
0x00000000140e90: lea rdi, [rip+0xaf929]; syscall; 
0x00000000140bbc: lea rdi, [rip+0xafc01]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000013d70f: lea rdi, [rip+0xb2e02]; syscall; 
0x0000000013d413: lea rdi, [rip+0xb30fe]; syscall; 
0x000000001390e3: lea rdi, [rip+0xb741a]; syscall; 
0x00000000138b63: lea rdi, [rip+0xb797e]; syscall; 
0x0000000013899f: lea rdi, [rip+0xb7afa]; syscall; 
0x000000001388d7: lea rdi, [rip+0xb7b62]; syscall; 
0x00000000138797: lea rdi, [rip+0xb7ca2]; syscall; 
0x000000001386df: lea rdi, [rip+0xb7d5a]; syscall; 
0x0000000013858a: lea rdi, [rip+0xb7eab]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000137fef: lea rdi, [rip+0xb8442]; syscall; 
0x00000000137ccf: lea rdi, [rip+0xb8762]; syscall; 
0x00000000137c69: lea rdi, [rip+0xb8770]; call rax; 
0x00000000137b13: lea rdi, [rip+0xb891e]; syscall; 
0x00000000134787: lea rdi, [rip+0xbbb3a]; syscall; 
0x00000000134647: lea rdi, [rip+0xbbc7a]; syscall; 
0x0000000013458f: lea rdi, [rip+0xbbd32]; syscall; 
0x000000001344af: lea rdi, [rip+0xbbe0a]; syscall; 
0x00000000133fe3: lea rdi, [rip+0xbc25e]; syscall; 
0x00000000133a13: lea rdi, [rip+0xbc7ce]; syscall; 
0x000000001334f3: lea rdi, [rip+0xbcca6]; syscall; 
0x00000000133327: lea rdi, [rip+0xbce32]; syscall; 
0x000000001331e7: lea rdi, [rip+0xbcf72]; syscall; 
0x0000000013312f: lea rdi, [rip+0xbd02a]; syscall; 
0x0000000013304f: lea rdi, [rip+0xbd102]; syscall; 
0x00000000132c33: lea rdi, [rip+0xbd4d6]; syscall; 
0x00000000132617: lea rdi, [rip+0xbda92]; syscall; 
0x000000001324bf: lea rdi, [rip+0xbdbea]; syscall; 
0x000000001323ff: lea rdi, [rip+0xbdcaa]; syscall; 
0x00000000132317: lea rdi, [rip+0xbdd8a]; syscall; 
0x00000000132233: lea rdi, [rip+0xbde36]; syscall; 
0x00000000131bd3: lea rdi, [rip+0xbe456]; syscall; 
0x000000001319c7: lea rdi, [rip+0xbe61a]; syscall; 
0x0000000013186f: lea rdi, [rip+0xbe772]; syscall; 
0x000000001317af: lea rdi, [rip+0xbe832]; syscall; 
0x000000001316c7: lea rdi, [rip+0xbe912]; syscall; 
0x00000000130ab3: lea rdi, [rip+0xbf4ae]; syscall; 
0x00000000130843: lea rdi, [rip+0xbf6de]; syscall; 
0x000000001300c3: lea rdi, [rip+0xbfdfe]; syscall; 
0x0000000012d11e: lea rdi, [rip+0xc2d43]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000eaa81: lea rdi, [rip+0xc638b]; movzx eax, al; movsxd rax, [rdi+rax*4]; add rax, rdi; notrack jmp rax; 
0x000000000eaa82: lea rdi, [rip+0xc638b]; movzx eax, al; movsxd rax, [rdi+rax*4]; add rax, rdi; notrack jmp rax; 
0x000000001265c7: lea rdi, [rip+0xc9862]; syscall; 
0x00000000126487: lea rdi, [rip+0xc99a2]; syscall; 
0x000000001263cf: lea rdi, [rip+0xc9a5a]; syscall; 
0x00000000125ff5: lea rdi, [rip+0xc9e2c]; syscall; 
0x00000000125df3: lea rdi, [rip+0xc9ff6]; syscall; 
0x00000000125c13: lea rdi, [rip+0xca18e]; syscall; 
0x00000000125a4f: lea rdi, [rip+0xca30a]; syscall; 
0x0000000012597f: lea rdi, [rip+0xca386]; syscall; 
0x000000001258b5: lea rdi, [rip+0xca450]; syscall; 
0x00000000125820: lea rdi, [rip+0xca4e5]; syscall; 
0x00000000124b17: lea rdi, [rip+0xcb1ba]; syscall; 
0x000000001249d7: lea rdi, [rip+0xcb2fa]; syscall; 
0x0000000012491f: lea rdi, [rip+0xcb3b2]; syscall; 
0x00000000124325: lea rdi, [rip+0xcb9a4]; syscall; 
0x00000000124123: lea rdi, [rip+0xcbb4e]; syscall; 
0x00000000123f43: lea rdi, [rip+0xcbcc6]; syscall; 
0x00000000123d7f: lea rdi, [rip+0xcbe22]; syscall; 
0x000000000db25f: lea rdi, [rip+0xd5162]; mov esi, eax; movsxd rdx, [rdi+rsi*4]; add rdx, rdi; notrack jmp rdx; 
0x000000000db3bb: lea rdi, [rip+0xd51f2]; mov esi, eax; movsxd rdx, [rdi+rsi*4]; add rdx, rdi; notrack jmp rdx; 
0x0000000011870f: lea rdi, [rip+0xd713a]; syscall; 
0x000000001185f3: lea rdi, [rip+0xd7256]; syscall; 
0x00000000118193: lea rdi, [rip+0xd76b6]; syscall; 
0x00000000117c58: lea rdi, [rip+0xd7bf1]; syscall; 
0x000000000d83ae: lea rdi, [rip+0xd7c3b]; movzx esi, cl; movsxd rdx, [rdi+rsi*4]; add rdx, rdi; notrack jmp rdx; 
0x000000000d5e04: lea rdi, [rip+0xd9e91]; movzx eax, al; movsxd rax, [rdi+rax*4]; add rax, rdi; notrack jmp rax; 
0x000000000d4f0b: lea rdi, [rip+0xdac32]; movzx eax, al; movsxd rax, [rdi+rax*4]; add rax, rdi; notrack jmp rax; 
0x00000000106ac3: lea rdi, [rip+0xe8af6]; syscall; 
0x0000000010601a: lea rdi, [rip+0xe95a3]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000012d0cd: lea rdi, [rip-0x184]; call rax; 
0x00000000083d9d: lea rdi, [rsp+0x10]; xor esi, esi; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000051fbc: lea rdi, [rsp+0x30]; xor esi, esi; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000d0963: lea rdi, [rsp+0xd0]; mov rsi, r13; call rbp; 
0x00000000165ef3: lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000087f53: lea rdx, [r8+rdx*4]; mov [rax], rdx; xor eax, eax; ret; 
0x0000000008642c: lea rdx, [rax+0x1]; mov [r8+0x28], rdx; mov [rax], dil; mov eax, r9d; ret; 
0x0000000008df7e: lea rdx, [rax+0x1]; mov [rdi+0x8], rdx; movzx eax, byte ptr [rax]; ret; 
0x00000000094ea3: lea rdx, [rax+0x1]; mov [rip+0x157422], rdx; ret; 
0x0000000008a826: lea rdx, [rbp-0x48]; lea r9, [rbp-0x40]; mov rcx, r14; mov rdi, r15; call r12; 
0x0000000008126a: lea rdx, [rbx+0x34]; lea rcx, [rbx+0x40]; mov esi, 0x1; mov rdi, rbx; call r8; 
0x00000000080c76: lea rdx, [rbx+0x34]; mov esi, 0x1; mov rdi, rbx; call rax; 
0x000000000dd784: lea rdx, [rdi+rdi*8]; pop rbx; pop rbp; lea rax, [rax+rdx*8]; ret; 
0x00000000033e27: lea rdx, [rdi+rsi*4]; mov r8d, [rdx+rax]; mov eax, r8d; ret; 
0x0000000012313d: lea rdx, [rdx+rsi*4]; add eax, [rdx+rcx]; ret; 
0x000000001662f7: lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000009c68a: lea rdx, [rip+0x1127d7]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000000bdfbd: lea rdx, [rip+0x116fc]; cmovne rax, rdx; ret; 
0x0000000009f11d: lea rdx, [rip+0x12e7c]; cmovne rax, rdx; ret; 
0x00000000187fd6: lea rdx, [rip+0x134e3]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x00000000187fb1: lea rdx, [rip+0x13508]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000009f72d: lea rdx, [rip+0x1448c]; cmovne rax, rdx; ret; 
0x00000000064231: lea rdx, [rip+0x14960c]; movzx eax, al; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000186616: lea rdx, [rip+0x14ea3]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x000000001865fc: lea rdx, [rip+0x14ebd]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x00000000034b4c: lea rdx, [rip+0x17440c]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000034b4d: lea rdx, [rip+0x17440c]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000024588: lea rdx, [rip+0x175a71]; mov eax, eax; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000183716: lea rdx, [rip+0x17da3]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x000000001836f1: lea rdx, [rip+0x17dc8]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x00000000023e82: lea rdx, [rip+0x18b89b]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000181746: lea rdx, [rip+0x19d73]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000018172c: lea rdx, [rip+0x19d8d]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x000000000a0a2b: lea rdx, [rip+0x1b0be]; cmove rax, rdx; ret; 
0x000000000a06bb: lea rdx, [rip+0x1b40e]; cmove rax, rdx; ret; 
0x000000000a055b: lea rdx, [rip+0x1b58e]; cmove rax, rdx; ret; 
0x000000000a05d2: lea rdx, [rip+0x1b9c7]; lea rax, [rip+0x1b940]; cmovne rax, rdx; ret; 
0x00000000174ff6: lea rdx, [rip+0x264c3]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x00000000174fd1: lea rdx, [rip+0x264e8]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x00000000172a86: lea rdx, [rip+0x28a33]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x00000000172a6c: lea rdx, [rip+0x28a4d]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x00000000194b63: lea rdx, [rip+0x29ae6]; movsxd rax, [rdx+rax*4]; add rdx, rax; notrack jmp rdx; 
0x0000000015219c: lea rdx, [rip+0x3a2d]; call qword ptr [rax]; 
0x0000000012da65: lea rdx, [rip+0x3d894]; cmovne rax, rdx; ret; 
0x0000000012d8e5: lea rdx, [rip+0x3da34]; cmovne rax, rdx; ret; 
0x0000000012d9a5: lea rdx, [rip+0x40464]; cmovne rax, rdx; ret; 
0x00000000151a79: lea rdx, [rip+0x4150]; mov r9, rbp; mov esi, 0x9; call qword ptr [rax]; 
0x0000000012da44: lea rdx, [rip+0x5db05]; cmove rax, rdx; ret; 
0x0000000012d984: lea rdx, [rip+0x5dbe5]; cmove rax, rdx; ret; 
0x0000000012d8c4: lea rdx, [rip+0x5dca5]; cmove rax, rdx; ret; 
0x0000000012db07: lea rdx, [rip+0x5def2]; lea rax, [rip+0x5df4b]; cmove rax, rdx; ret; 
0x0000000012da8f: lea rdx, [rip+0x6283a]; cmove rax, rdx; ret; 
0x0000000012d9cf: lea rdx, [rip+0x6291a]; cmove rax, rdx; ret; 
0x0000000012d90f: lea rdx, [rip+0x629da]; cmove rax, rdx; ret; 
0x0000000012db4f: lea rdx, [rip+0x62d2a]; cmove rax, rdx; ret; 
0x0000000015309b: lea rdx, [rip+0x9dd9e]; mov fs:[rax], rdx; ret; 
0x00000000148680: lea rdx, [rip+0xa34d9]; jmp qword ptr [rdx+rax*8]; 
0x0000000010a0bf: lea rdx, [rip+0xa809a]; movsxd rax, [rdx+rbp*4]; add rax, rdx; notrack jmp rax; 
0x0000000010994d: lea rdx, [rip+0xa8798]; movzx eax, al; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000001092d3: lea rdx, [rip+0xa8dc6]; movsxd rax, [rdx+rbx*4]; add rax, rdx; notrack jmp rax; 
0x0000000010108b: lea rdx, [rip+0xb076e]; movsxd rax, [rdx+rdi*4]; add rax, rdx; notrack jmp rax; 
0x00000000101155: lea rdx, [rip+0xb08fc]; mov edi, edi; movsxd rax, [rdx+rdi*4]; add rax, rdx; notrack jmp rax; 
0x000000000fcf72: lea rdx, [rip+0xb4473]; movzx esi, sil; movsxd rax, [rdx+rsi*4]; add rax, rdx; notrack jmp rax; 
0x000000000f98ce: lea rdx, [rip+0xb790b]; mov rcx, rax; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000000bc89b: lea rdx, [rip+0xc0efe]; test byte ptr [rax+0x71], 0x2; lea rax, [rip+0x12933]; cmovne rax, rdx; ret; 
0x000000000eff8b: lea rdx, [rip+0xc0f8e]; movzx ebx, bl; movsxd rax, [rdx+rbx*4]; add rax, rdx; notrack jmp rax; 
0x000000000f00db: lea rdx, [rip+0xc0fa2]; movzx r14d, r14b; movsxd rax, [rdx+r14*4]; add rax, rdx; notrack jmp rax; 
0x000000000f002b: lea rdx, [rip+0xc0fc6]; movzx ebx, bl; movsxd rax, [rdx+rbx*4]; add rax, rdx; notrack jmp rax; 
0x0000000009f1cd: lea rdx, [rip+0xc41bc]; cmovne rax, rdx; ret; 
0x0000000009f797: lea rdx, [rip+0xc4e62]; cmovne rax, rdx; ret; 
0x000000000ea58a: lea rdx, [rip+0xc6803]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000000e8851: lea rdx, [rip+0xc83cc]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000000a09e5: lea rdx, [rip+0xca944]; cmovne rax, rdx; ret; 
0x000000000a0675: lea rdx, [rip+0xcac94]; cmovne rax, rdx; ret; 
0x000000000e5861: lea rdx, [rip+0xcb368]; mov esi, esi; movsxd rax, [rdx+rsi*4]; add rax, rdx; notrack jmp rax; 
0x000000000e5470: lea rdx, [rip+0xcb37d]; movsxd rax, [rdx+rbp*4]; add rax, rdx; notrack jmp rax; 
0x000000000e4ada: lea rdx, [rip+0xcbcbf]; mov esi, esi; movsxd rax, [rdx+rsi*4]; add rax, rdx; notrack jmp rax; 
0x000000000a0515: lea rdx, [rip+0xcd904]; cmovne rax, rdx; ret; 
0x000000000bcd39: lea rdx, [rip+0xcf1b0]; lea rax, [rip+0x11389]; cmove rax, rdx; ret; 
0x000000000bc879: lea rdx, [rip+0xcf940]; lea rax, [rip+0x11b79]; cmove rax, rdx; ret; 
0x000000000bca29: lea rdx, [rip+0xcfbe0]; lea rax, [rip+0x12699]; cmove rax, rdx; ret; 
0x000000000a08c0: lea rdx, [rip+0xd0099]; cmovne rax, rdx; ret; 
0x000000000a0820: lea rdx, [rip+0xd0119]; cmovne rax, rdx; ret; 
0x000000000bcb19: lea rdx, [rip+0xd0240]; lea rax, [rip+0x12879]; cmove rax, rdx; ret; 
0x000000000bc839: lea rdx, [rip+0xd02f0]; lea rax, [rip+0x129c9]; cmove rax, rdx; ret; 
0x000000000bc989: lea rdx, [rip+0xd05c0]; lea rax, [rip+0x12f89]; cmove rax, rdx; ret; 
0x000000000a0910: lea rdx, [rip+0xd21a9]; cmovne rax, rdx; ret; 
0x000000000a0870: lea rdx, [rip+0xd2229]; cmovne rax, rdx; ret; 
0x000000000bcd8e: lea rdx, [rip+0xd575b]; cmovne rax, rdx; ret; 
0x0000000009f24d: lea rdx, [rip+0xd5dbc]; cmovne rax, rdx; ret; 
0x0000000009f7fd: lea rdx, [rip+0xd6fbc]; cmovne rax, rdx; ret; 
0x000000000a076d: lea rdx, [rip+0xd8bcc]; cmovne rax, rdx; ret; 
0x000000000a07cd: lea rdx, [rip+0xda37c]; cmovne rax, rdx; ret; 
0x000000000d4667: lea rdx, [rip+0xdb4a6]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000000a8bf9: lea rdx, [rip+0xdbc60]; lea rax, [rip+0x3819]; cmove rax, rdx; ret; 
0x000000000a1ca9: lea rdx, [rip+0xe2a60]; lea rax, [rip+0xa559]; cmove rax, rdx; ret; 
0x0000000009fb1b: lea rdx, [rip+0xe3e8e]; test byte ptr [rax+0x72], 0x10; lea rax, [rip+0x1bee3]; cmovne rax, rdx; ret; 
0x0000000009f85b: lea rdx, [rip+0xe400e]; test byte ptr [rax+0x72], 0x10; lea rax, [rip+0x1c0f3]; cmovne rax, rdx; ret; 
0x000000000a0429: lea rdx, [rip+0xe4010]; lea rax, [rip+0xbaa9]; cmove rax, rdx; ret; 
0x0000000009f26b: lea rdx, [rip+0xe44be]; test byte ptr [rax+0x72], 0x10; lea rax, [rip+0x1c633]; cmovne rax, rdx; ret; 
0x000000000a1ce9: lea rdx, [rip+0xe6530]; lea rax, [rip+0xf9d9]; cmove rax, rdx; ret; 
0x000000001473e4: lea rdx, [rip+0xe7e5]; lea r9, [rsp+0x20]; call qword ptr [rax]; 
0x0000000009f839: lea rdx, [rip+0xe8bd0]; lea rax, [rip+0x12099]; cmove rax, rdx; ret; 
0x0000000009f689: lea rdx, [rip+0xe8f50]; lea rax, [rip+0x12549]; cmove rax, rdx; ret; 
0x0000000009f6c9: lea rdx, [rip+0xe90b0]; lea rax, [rip+0x126a9]; cmove rax, rdx; ret; 
0x000000000b1486: lea rdx, [rip+0xea033]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x000000000b1461: lea rdx, [rip+0xea058]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x000000000a09c4: lea rdx, [rip+0xeabb5]; cmove rax, rdx; ret; 
0x000000000a0654: lea rdx, [rip+0xeaf05]; cmove rax, rdx; ret; 
0x000000000a04f4: lea rdx, [rip+0xeb085]; cmove rax, rdx; ret; 
0x000000000a05b7: lea rdx, [rip+0xeb452]; lea rax, [rip+0xeb4ab]; cmove rax, rdx; ret; 
0x000000000aee26: lea rdx, [rip+0xec693]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x000000000aee0c: lea rdx, [rip+0xec6ad]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x000000000a0a0f: lea rdx, [rip+0xef8ea]; cmove rax, rdx; ret; 
0x000000000a069f: lea rdx, [rip+0xefc3a]; cmove rax, rdx; ret; 
0x000000000a053f: lea rdx, [rip+0xefdba]; cmove rax, rdx; ret; 
0x000000000a05ff: lea rdx, [rip+0xf028a]; cmove rax, rdx; ret; 
0x000000000a047e: lea rdx, [rip+0xf08fb]; cmovne rax, rdx; ret; 
0x0000000009f170: lea rdx, [rip+0xf18e9]; cmovne rax, rdx; ret; 
0x000000000a032b: lea rdx, [rip-0x362]; test byte ptr [rax+0xcc], 0x10; lea rax, [rip+0x1b0d0]; cmove rax, rdx; ret; 
0x000000000748f5: lea rdx, [rip-0x4a2]; movsxd rax, [rcx+rax*4]; add rax, rdx; jmp rax; 
0x0000000007b1c6: lea rdx, [rip-0x4d4]; add rax, rdx; jmp rax; 
0x00000000151945: lea rdx, [rip-0x6b6c]; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x00000000151bae: lea rdx, [rip-0x6d95]; mov esi, 0x2; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x00000000151cee: lea rdx, [rip-0x6ed5]; mov esi, 0x3; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x00000000151e4b: lea rdx, [rip-0x6ff2]; mov esi, 0x6; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x00000000151feb: lea rdx, [rip-0x7192]; mov esi, 0x7; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x0000000012db22: lea rdx, [rip-0x71b99]; lea rax, [rip-0x71c20]; cmovne rax, rdx; ret; 
0x0000000012d92b: lea rdx, [rip-0x71e52]; cmove rax, rdx; ret; 
0x0000000012d9eb: lea rdx, [rip-0x71f12]; cmove rax, rdx; ret; 
0x0000000012daab: lea rdx, [rip-0x71ff2]; cmove rax, rdx; ret; 
0x00000000152250: lea rdx, [rip-0x7247]; mov esi, 0x8; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x0000000010d27b: lea rdx, [rip-0x72]; test byte ptr [rax+0x72], 0x80; lea rax, [rip-0xbd]; cmove rax, rdx; ret; 
0x00000000152384: lea rdx, [rip-0x75ab]; mov esi, 0xa; lea r9, [rsp+0x1c]; call qword ptr [rax]; 
0x000000000d0ec8: lea rdx, [rip-0xdf]; cmove rax, rdx; add rsp, 0x58; ret; 
0x000000000d0fe8: lea rdx, [rip-0xef]; cmove rax, rdx; add rsp, 0x58; ret; 
0x00000000115fb9: lea rdx, [rsi+0x1]; jne short 0x0000000000115f90; ret; 
0x000000000bbb76: lea rdx, [rsi+rcx]; cmp rdi, rdx; jb short 0x00000000000bbb82; rep movsb [rdi], [rsi]; ret; 
0x00000000051f55: lea rdx, [rsp+0x10]; lea rsi, [rip+0x1df]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000001517a0: lea rdx, [rsp+0x18]; mov esi, 0x6; call qword ptr [rax+0x28]; 
0x00000000151767: lea rdx, [rsp+0x18]; mov esi, 0x6; mov rax, [rdi+0x8]; call qword ptr [rax+0x28]; 
0x0000000015174a: lea rdx, [rsp+0x20]; mov esi, 0x4; movdqa xmm0, [rip+0x6b534]; movaps [rsp+0x20], xmm0; call qword ptr [rax+0x28]; 
0x00000000113864: lea rdx, [rsp+0x30]; mov eax, 0x10; syscall; 
0x00000000113408: lea rdx, [rsp+0x8]; mov esi, 0x10; mov eax, 0x48; syscall; 
0x00000000151824: lea rdx, [rsp+0xc]; mov esi, 0xd; call qword ptr [rax+0x28]; 
0x00000000152ce8: lea rsi, [r10+0x8]; mov rdi, rbp; call qword ptr [rdx+0x10]; 
0x00000000152f38: lea rsi, [r13+0x8]; mov rdi, rbp; call qword ptr [rax+0x10]; 
0x0000000012d0c9: lea rsi, [rbp-0x20]; lea rdi, [rip-0x184]; call rax; 
0x000000000e63ac: lea rsi, [rbp-0x2e0]; mov rdi, r15; call qword ptr [r12+0x38]; 
0x00000000100f7c: lea rsi, [rbp-0x2e0]; mov rdi, r15; call qword ptr [r12+0x40]; 
0x000000000e787a: lea rsi, [rbp-0x450]; call qword ptr [r15+0x40]; 
0x0000000014e834: lea rsi, [rbx+0x18]; mov rdi, rbp; call qword ptr [rax+0x48]; 
0x0000000008a5d7: lea rsi, [rbx+0x40]; xor r8d, r8d; mov rdi, r13; lea r9, [rsp+0x18]; call rbp; 
0x0000000008a6c6: lea rsi, [rbx+0x8]; xor r8d, r8d; mov rdi, r13; lea r9, [rsp+0x18]; call rbp; 
0x0000000009cddb: lea rsi, [rbx+r12+0x1]; mov [rbp], rax; test rax, rax; je 0x000000000009cec0; call rax; 
0x000000000860ef: lea rsi, [rcx+0x4]; mov [rdx+0x20], rsi; mov [rcx], eax; ret; 
0x0000000005b4ba: lea rsi, [rdi+0x3b0]; mov edi, 0x3004; mov eax, 0x9e; syscall; 
0x00000000146143: lea rsi, [rdi+0x48]; mov rdi, r8; mov rax, [rax+0x18]; jmp rax; 
0x000000000806fb: lea rsi, [rip+0x12e0c2]; movzx eax, al; movsxd rax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x0000000006c904: lea rsi, [rip+0x141551]; movsxd rax, [rsi+rcx*4]; add rax, rsi; notrack jmp rax; 
0x000000000407a0: lea rsi, [rip+0x1687f9]; mov edx, edx; movsxd rdx, [rsi+rdx*4]; add rdx, rsi; notrack jmp rdx; 
0x00000000051f5a: lea rsi, [rip+0x1df]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000083cdd: lea rsi, [rip+0x25c]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000010c94d: lea rsi, [rip+0xa5a8c]; movups [rsp+0xc8], xmm0; mov [rsp+0xe8], eax; mov eax, 0xe; syscall; 
0x0000000010c94c: lea rsi, [rip+0xa5a8c]; movups [rsp+0xc8], xmm0; mov [rsp+0xe8], eax; mov eax, 0xe; syscall; 
0x000000000fa101: lea rsi, [rip+0xb716c]; movsxd rax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x000000000e8d6d: lea rsi, [rip+0xc7f30]; movsxd rax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x000000000e321c: lea rsi, [rip+0xd115a]; mov eax, 0x142; syscall; 
0x000000000bc0d2: lea rsi, [rip+0xf35a7]; movsxd rax, [rsi+rdi*4]; add rax, rsi; notrack jmp rax; 
0x00000000146289: lea rsi, [rip-0x100]; lea rdi, [rip+0xaa849]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000910f5: lea rsi, [rip-0x11c]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000001531a7: lea rsi, [rip-0x11e]; lea rdi, [rip+0x9dc6b]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000012d117: lea rsi, [rip-0x14e]; lea rdi, [rip+0xc2d43]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000092aa4: lea rsi, [rip-0x1acb]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000015325f: lea rsi, [rip-0x1d6]; lea rdi, [rip+0x9dbb3]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000092dda: lea rsi, [rip-0x1e01]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000009318e: lea rsi, [rip-0x21b5]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000153327: lea rsi, [rip-0x29e]; lea rdi, [rip+0x9daeb]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000001533f7: lea rsi, [rip-0x36e]; lea rdi, [rip+0x9da1b]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000842de: lea rsi, [rip-0x3a5]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000005473d: lea rsi, [rip-0x3c4]; lea rdi, [rip+0x199fdd]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000140bb5: lea rsi, [rip-0x43c]; lea rdi, [rip+0xafc01]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000001534c7: lea rsi, [rip-0x43e]; lea rdi, [rip+0x9d94b]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000138583: lea rsi, [rip-0x4a]; lea rdi, [rip+0xb7eab]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000026f65: lea rsi, [rip-0x60c]; lea rdi, [rip+0x1c69e1]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000915ec: lea rsi, [rip-0x613]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000009f954: lea rsi, [rip-0xdb]; lea rdi, [rip+0x14f5de]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000106013: lea rsi, [rip-0xdba]; lea rdi, [rip+0xe95a3]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000055408: lea rsi, [rsi+0x128]; mov edi, 0x2; mov r10d, 0x8; mov eax, 0xe; syscall; 
0x000000000bbb87: lea rsi, [rsi+rcx-0x1]; std; rep movsb [rdi], [rsi]; cld; ret; 
0x0000000014f6fb: lea rsi, [rsp+0x10]; call qword ptr [rax+0x10]; 
0x0000000015669c: lea rsi, [rsp+0x10]; call qword ptr [rax]; 
0x00000000156642: lea rsi, [rsp+0x10]; mov [rsp+0x10], rax; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x00000000151ec5: lea rsi, [rsp+0x10]; mov edi, eax; call rbp; 
0x00000000155e8c: lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax+0x8]; 
0x0000000008e941: lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax+0x90]; 
0x00000000155e33: lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax]; 
0x000000000547b7: lea rsi, [rsp+0x24]; mov edi, 0x1; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000010ca37: lea rsi, [rsp+0x2c]; mov edi, 0x1; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000089199: lea rsi, [rsp+0x30]; mov rdi, r15; call qword ptr [r14+0x90]; 
0x000000001571c4: lea rsi, [rsp+0x4]; call qword ptr [rax+0x40]; 
0x000000001571e3: lea rsi, [rsp+0x4]; mov [rsp+0x4], eax; mov rax, [rdi+0x8]; call qword ptr [rax+0x48]; 
0x0000000005217c: lea rsi, [rsp+0x4]; mov edi, 0x1; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000156d7a: lea rsi, [rsp+0x4]; mov rdi, rbp; call qword ptr [rax+0x40]; 
0x00000000156dcb: lea rsi, [rsp+0x4]; mov rdi, rbp; call qword ptr [rax+0x48]; 
0x0000000015099c: lea rsi, [rsp+0x88]; mov rdi, r15; add dword ptr [rax], 0x1; mov rax, [rbx+0x60]; call qword ptr [rax+0x8]; 
0x000000001490d7: lea rsi, [rsp+0x8]; call qword ptr [rax]; 
0x00000000082aed: lea rsi, [rsp+0x8]; call rax; 
0x0000000014912b: lea rsi, [rsp+0x8]; mov rdi, rbp; call qword ptr [rax+0x8]; 
0x0000000014e795: lea rsi, [rsp+0xc]; mov rdi, rbp; call qword ptr [rax+0x48]; 
0x0000000012f973: lea rsi, [rsp-0x18]; mov eax, 0x83; syscall; 
0x000000000e14d6: lea rsp, [rbp-0x10]; pop r12; pop r13; pop rbp; ret; 
0x000000000e14d5: lea rsp, [rbp-0x10]; pop r12; pop r13; pop rbp; ret; 
0x0000000005b4b6: lea rsp, [rsi+0x8]; lea rsi, [rdi+0x3b0]; mov edi, 0x3004; mov eax, 0x9e; syscall; 
0x00000000087a93: leave; add [rax], eax; add [rcx+rcx*4-0x1], cl; call qword ptr [rax+0x20]; 
0x00000000165a87: leave; add al, [rax]; add [rbp-0x77], cl; ret far; 
0x0000000015ae45: leave; add eax, 0x688d4c00; add eax, ebp; call qword ptr [rcx]; 
0x0000000017f7c7: leave; add eax, [rax]; add [rbp-0x77], cl; ret far; 
0x000000001837d4: leave; add rax, rcx; sub rax, rdi; ret; 
0x00000000102847: leave; add rsp, 0x8; mov eax, r9d; ret; 
0x000000000421a9: leave; addsd xmm0, xmm0; mov [rdi], ecx; ret; 
0x000000000bba06: leave; cmove rax, rdx; ret; 
0x000000000cf187: leave; cmp eax, ecx; jne short 0x00000000000cf190; mov eax, r9d; ret; 
0x0000000012eba3: leave; idiv edi; jmp qword ptr [rsi+0xf]; 
0x000000000a88ed: leave; je short 0x00000000000a88f8; cmp ecx, esi; jne short 0x00000000000a88e0; ret; 
0x000000000bb500: leave; jne short 0x00000000000bb4f0; ret; 
0x000000000bb5b0: leave; jne short 0x00000000000bb5a0; ret; 
0x000000000bb870: leave; jne short 0x00000000000bb860; sub rax, 0x1; ret; 
0x000000000bcb70: leave; jne short 0x00000000000bcb48; mov rax, r8; ret; 
0x00000000123130: leave; jne short 0x0000000000123138; ret; 
0x00000000123199: leave; jne short 0x00000000001231a0; ret; 
0x00000000123a80: leave; jne short 0x0000000000123a88; ret; 
0x00000000123add: leave; jne short 0x0000000000123ae8; ret; 
0x0000000012dd1d: leave; jne short 0x000000000012dcc8; mov rax, rdi; ret; 
0x000000000aef79: leave; lea r10, [rip+0x100107]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x000000000acd09: leave; lea r10, [rip+0x1022f7]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x000000000aa729: leave; lea r10, [rip+0x104857]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x000000000a9009: leave; lea r10, [rip+0x105ef7]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000172bd9: leave; lea r10, [rip+0x3c4e7]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000170a59: leave; lea r10, [rip+0x3e5e7]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x000000001646a9: leave; lea r10, [rip+0x4a917]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000163419: leave; lea r10, [rip+0x4bb27]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x000000001473e3: leave; lea rdx, [rip+0xe7e5]; lea r9, [rsp+0x20]; call qword ptr [rax]; 
0x000000000b6641: leave; mov [rax], cl; mov rax, rdi; ret; 
0x00000000184d4f: leave; mov al, [rdi+rdx-0x1]; mov cl, [rsi+rdx-0x1]; sub eax, ecx; ret; 
0x0000000007e209: leave; mov dword ptr [rbp-0x510], 0x1; jmp rax; 
0x0000000007f1de: leave; mov dword ptr [rbp-0x510], 0x1; movsxd rax, [rsi+rax*4]; add rax, rdx; jmp rax; 
0x000000000c6b81: leave; mov eax, r9d; ret; 
0x0000000015ff30: leave; mov rdi, r12; lea r8, [rsp+0x30]; call qword ptr [rax+0x1e0]; 
0x0000000002f2e4: leave; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; lea r8, [rsp+0xa0]; call r15; 
0x000000000aa57c: leave; movzx eax, byte ptr [rax+rcx]; movzx edx, byte ptr [rdx+rcx]; sub eax, edx; ret; 
0x000000000ee246: leave; nop [rax+rax]; ret; 
0x000000000a8987: leave; notrack jmp rcx; 
0x000000001157a3: leave; or ax, 0x6400; mov dword ptr [rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000145923: leave; out 0xff, al; jmp qword ptr [rsi+0xf]; 
0x00000000025763: leave; ret far; 
0x000000000578f8: leave; ret; 
0x0000000005587e: leave; xor eax, eax; ret; 
0x00000000120555: leave; xor r8d, r8d; mov eax, 0x2c; syscall; 
0x00000000120335: leave; xor r8d, r8d; mov eax, 0x2d; syscall; 
0x00000000160350: leave; xor r8d, r8d; mov rdi, r12; call qword ptr [rax+0x1e0]; 
0x000000000e3125: lfence; jmp rdi; 
0x000000000f8658: lock add [rax], al; add [rcx-0x17f7dbbc], cl; ret far; 
0x00000000047255: lock add qword ptr [rax+0x460], 0x1; lea rdi, [rbp+0x908]; call qword ptr [rbp+0xf10]; 
0x000000001131fc: lock and [rax-0x77], cl; ret; 
0x0000000011612e: lock dec dword ptr [rax+0x1]; ret; 
0x0000000011cc10: lock dec dword ptr [rax-0x7b]; shl byte ptr [rax+rdi+0x48], 0x39; ret; 
0x0000000012b031: lock dec dword ptr [rax-0x7d]; ret; 
0x00000000151da2: lock or [rax], eax; syscall; 
0x0000000008f9e0: lodsb [rsi]; add [rax], al; add [rax-0x77], cl; out dx, eax; call qword ptr [r13+0x20]; 
0x00000000144ade: lodsb [rsi]; add [rax], eax; mov edi, [r13]; call qword ptr [rsp+0x20]; 
0x00000000168990: lodsb [rsi]; add rax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000e9d4f: lodsb [rsi]; and al, 0xa8; add [rax], al; add [rax-0x77], cl; ret far; 
0x000000000cb76a: lodsb [rsi]; clc; dec dword ptr [rax-0x7d]; ret; 
0x0000000013f0ab: lodsb [rsi]; cmp r11d, r9d; jg short 0x000000000013f066; mov byte ptr [r10], 0x0; ret; 
0x0000000013fef0: lodsb [rsi]; hlt; cmc; dec dword ptr [rax-0x77]; ret; 
0x0000000009f898: lodsb [rsi]; not byte ptr [rax+rax]; ret; 
0x00000000077678: lodsb [rsi]; or [rax], eax; add [rbx-0x4ef7b], cl; dec dword ptr [rcx-0x4f773]; jmp far fword ptr [rcx]; 
0x000000000a0679: lodsb [rsi]; or al, 0x0; cmovne rax, rdx; ret; 
0x000000000d4f0f: lodsb [rsi]; or eax, 0xc0b60f00; movsxd rax, [rdi+rax*4]; add rax, rdi; notrack jmp rax; 
0x00000000127677: lodsb [rsi]; out dx, eax; jmp qword ptr [rsi+0xf]; 
0x000000001377c0: lodsb [rsi]; ret far; 
0x0000000004a0e0: lodsb [rsi]; sbb [rax], al; add [rax-0x80], al; jmp qword ptr [rbp+0xf]; 
0x000000000e8214: lodsb [rsi]; xor eax, eax; ret; 
0x0000000009dc9f: lodsd [rsi]; add [rax], al; add [rcx+rcx*4-0x1a], cl; mov rdi, rbp; call rax; 
0x000000000e51bd: lodsd [rsi]; add [rax], al; setne al; ret; 
0x0000000012d9a2: lodsd [rsi]; add eax, [rax]; lea rdx, [rip+0x40464]; cmovne rax, rdx; ret; 
0x00000000168a8f: lodsd [rsi]; add rax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000005648f: lodsd [rsi]; enter 0x894c, 0x7; shr r9, cl; mov [rdi+0x8], r9; ret; 
0x000000001939f6: lodsd [rsi]; idiv bh; jmp qword ptr [rsi+0xf]; 
0x0000000011738f: lodsd [rsi]; mov ch, 0xf6; inc dword ptr [rbp+0x31]; ror byte ptr [rax-0x77], 0x5; ret far; 
0x00000000146ecb: lodsd [rsi]; pushfq; or al, [rax]; add rsp, 0x8; ret; 
0x000000000564c2: lodsd [rsi]; ret; 
0x0000000006e461: lodsd [rsi]; sar dl, 0xff; jmp qword ptr [rbx+rcx*4]; 
0x0000000006f3e5: lodsd [rsi]; sar dl, 0xff; jmp qword ptr [rdi+rax*8]; 
0x000000000e2cbf: lodsd [rsi]; sbb ebx, edi; dec dword ptr [rbx+0x48102444]; add esp, 0x28; ret; 
0x0000000015adef: lodsd [rsi]; std; jmp qword ptr [rsi+0x2e]; 
0x000000000d33d7: lodsd [rsi]; sti; dec dword ptr [rax+0x39]; ret; 
0x000000001568ef: lodsd [rsi]; xchg ecx, eax; std; jmp qword ptr [rsi+0x66]; 
0x000000000243e5: loop 0x00000000000243e6; dec dword ptr [rax-0x3f]; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x000000000440c6: loop 0x0000000000044048; sbb al, [rax]; ret; 
0x0000000005565d: loop 0x0000000000055617; add [rax], eax; add [rax], al; ret; 
0x000000000558a5: loop 0x000000000005585f; add [rax], eax; add [rax], al; ret; 
0x0000000005a8a5: loop 0x000000000005a8a6; jmp qword ptr [rsi+0xf]; 
0x0000000005b659: loop 0x000000000005b6a7; mov eax, eax; ret; 
0x00000000063d5f: loop 0x0000000000063da9; ror eax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000006dc9c: loop 0x000000000006dc1e; add [rax], al; add [rbx-0x9bef71d], al; ret; 
0x00000000073d34: loop 0x0000000000073d77; call qword ptr [rbp+0x38]; 
0x00000000074051: loop 0x0000000000074055; lea rcx, [rbx+rdx]; add rdx, r15; call qword ptr [rax+r9*8]; 
0x00000000075e27: loop 0x0000000000075e28; jmp qword ptr [rsi+0xf]; 
0x00000000076cb7: loop 0x0000000000076d01; ror eax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000781da: loop 0x0000000000078199; sti; jmp qword ptr [rsi-0x70]; 
0x00000000079d2a: loop 0x0000000000079cb1; cli; dec dword ptr [rcx-0x77]; ret; 
0x0000000007a701: loop 0x000000000007a705; lea rcx, [rbx+rdx]; add rdx, r15; call qword ptr [rax+r9*8]; 
0x0000000007d3b7: loop 0x000000000007d401; ror eax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000082db0: loop 0x0000000000082dfa; mov esi, ebp; mov rdi, rbx; call qword ptr [r13+0x38]; 
0x000000000833e6: loop 0x0000000000083434; mov esi, esi; mov rdi, rbx; call qword ptr [r15+0x38]; 
0x000000000846bd: loop 0x000000000008471a; pop r12; jmp rax; 
0x0000000008481e: loop 0x0000000000084868; mov esi, ebp; mov rdi, rbx; call qword ptr [r14+0x48]; 
0x00000000084c38: loop 0x0000000000084c82; mov esi, ebp; mov rdi, rbx; call qword ptr [r13+0x58]; 
0x00000000084c62: loop 0x0000000000084cac; mov esi, ebp; mov rdi, rbx; call qword ptr [rax+0x58]; 
0x00000000084e0a: loop 0x0000000000084e54; mov esi, ebp; mov rdi, rbx; call qword ptr [r13+0x58]; 
0x00000000089478: loop 0x00000000000894c2; mov esi, ebp; mov rdi, r15; call qword ptr [r14+0x80]; 
0x0000000008ad74: loop 0x000000000008ad77; mov eax, edx; ret; 
0x0000000008ae74: loop 0x000000000008ae77; mov eax, edx; ret; 
0x0000000008e23c: loop 0x000000000008e286; mov edi, ecx; call qword ptr [r14+0x38]; 
0x0000000009effa: loop 0x000000000009f03d; pop rsp; pop r13; ret; 
0x0000000009f00f: loop 0x000000000009f052; pop rsp; pop r13; ret; 
0x0000000009f09d: loop 0x000000000009f09e; jmp qword ptr [rsi+0x2e]; 
0x000000000a88c5: loop 0x00000000000a8913; mov eax, eax; ret; 
0x000000000aa66d: loop 0x00000000000aa6a0; shr byte ptr [rcx], 0xc8; ret; 
0x000000000b182b: loop 0x00000000000b185d; or rax, rdx; bsf rax, rax; lea rax, [rdi+rax]; ret; 
0x000000000b79ba: loop 0x00000000000b79c1; add [rax], al; ret; 
0x000000000bc19f: loop 0x00000000000bc1b0; movsxd rax, [rsi+rdx*4]; add rax, rsi; notrack jmp rax; 
0x000000000bc6a7: loop 0x00000000000bc691; ret; 
0x000000000bc775: loop 0x00000000000bc73a; nop [rax+rax]; xor eax, eax; ret; 
0x000000000dd1da: loop 0x00000000000dd165; out dx, al; mov eax, 0xe6; syscall; 
0x000000000dd2ab: loop 0x00000000000dd236; out dx, al; mov edi, 0x1; mov eax, 0xe6; syscall; 
0x000000000dd262: loop 0x00000000000dd2a5; mov eax, eax; mov esi, ebp; mov eax, 0xe6; syscall; 
0x000000000dd31c: loop 0x00000000000dd2a7; out dx, al; mov edi, 0x1; mov eax, 0xe6; syscall; 
0x000000000e321b: loop 0x00000000000e3265; lea esi, [rip+0xd115a]; mov eax, 0x142; syscall; 
0x000000000ec4d1: loop 0x00000000000ec4d7; je short 0x00000000000ec46c; mov byte ptr [rdi+0x8], 0x1e; mov eax, 0x2; ret; 
0x000000000ee43c: loop 0x00000000000ee43f; and ecx, 0x80; cmovne eax, edx; pop rbx; ret; 
0x0000000010dba8: loop 0x000000000010dbb7; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x0000000010dbd8: loop 0x000000000010dbe7; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x0000000010dbf8: loop 0x000000000010dc07; add [rdi+rax*8], ah; add [rax], al; add [rax-0x1], bh; ret; 
0x0000000010dc3c: loop 0x000000000010dc4b; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x2]; mov eax, 0xffffffff; ret; 
0x0000000010dd5b: loop 0x000000000010dda5; mov esi, ebp; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x0000000011349a: loop 0x000000000011345a; adc [rax], al; add [rax], al; mov eax, 0x48; syscall; 
0x00000000113a42: loop 0x00000000001139fc; adc [rax], al; add [rax], al; syscall; 
0x00000000114798: loop 0x00000000001147de; mov edx, esi; mov edi, ebp; mov eax, 0x147; syscall; 
0x000000001148f8: loop 0x000000000011493e; mov edx, esi; mov edi, ebp; mov eax, 0x148; syscall; 
0x0000000011ab8f: loop 0x000000000011ab98; add [rax], al; mov rdi, [r15]; call rbx; 
0x0000000011bc38: loop 0x000000000011bc22; rcr byte ptr [rbx-0xa], cl; jmp qword ptr [rbp+rax*2-0x77]; 
0x0000000011c727: loop 0x000000000011c728; dec dword ptr [rax-0x7f]; ret; 
0x0000000011eeb5: loop 0x000000000011eeb6; sldt [rax]; and eax, 0xfffff000; or eax, edx; ret; 
0x00000000124076: loop 0x0000000000124067; jmp qword ptr [rcx+rcx*4+0x2b]; 
0x0000000012d928: loop 0x000000000012d922; dec dword ptr [rax-0x73]; adc eax, 0xfff8e1ae; cmove rax, rdx; ret; 
0x0000000012fb24: loop 0x000000000012fb26; add [rax], al; rol byte ptr [rcx+0xfa], 0x80; cmovne eax, edi; ret; 
0x0000000013c59d: loop 0x000000000013c5a3; add edx, 0x8; cmp esi, 0x80; cmovb eax, edx; ret; 
0x00000000145d14: loop 0x0000000000145d15; jmp qword ptr [rsi+0xf]; 
0x00000000145da3: loop 0x0000000000145da5; jmp qword ptr [rsi+0xf]; 
0x000000001482c3: loop 0x00000000001482c1; lea esi, [rax+rdx+0x28]; mov rax, [rdi+0x8]; call qword ptr [rax+0x30]; 
0x00000000148c8a: loop 0x0000000000148cd8; mov edi, esi; call qword ptr [rax+0x10]; 
0x00000000148cc4: loop 0x0000000000148d12; mov edi, esi; call qword ptr [rax+0x20]; 
0x00000000149ef2: loop 0x0000000000149f3c; mov esi, ebp; mov rdi, rbx; call rax; 
0x0000000014a519: loop 0x000000000014a51f; xor rax, rdx; mov [rdi], r8; mov [rdi+0x8], rax; ret; 
0x0000000014adb0: loop 0x000000000014ae31; movzx eax, byte ptr [rax+rdx]; mov [rdi+0x7], al; ret; 
0x00000000160981: loop 0x00000000001609cb; shr eax, 0x6; or [rdi+rax*8], rdx; xor eax, eax; ret; 
0x000000001681e7: loop 0x0000000000168235; mov [rdi-0x16], ebx; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000016822f: loop 0x000000000016827d; mov [rdi-0x16], ebx; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000016826d: loop 0x00000000001682bb; mov [rdi-0x16], ebx; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x000000001682a5: loop 0x00000000001682f3; mov [rdi-0x16], ebx; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x000000001682e3: loop 0x0000000000168331; mov [rdi-0x16], ebx; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000016831b: loop 0x0000000000168369; mov [rdi-0x16], ebx; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000168343: loop 0x0000000000168391; mov [rdi-0x16], ebx; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000016abc7: loop 0x000000000016ac15; mov [rdi-0x16], ebx; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000016ac0f: loop 0x000000000016ac5d; mov [rdi-0x16], ebx; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000016ac4d: loop 0x000000000016ac9b; mov [rdi-0x16], ebx; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000016ac85: loop 0x000000000016acd3; mov [rdi-0x16], ebx; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000016acc3: loop 0x000000000016ad11; mov [rdi-0x16], ebx; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000016acfb: loop 0x000000000016ad49; mov [rdi-0x16], ebx; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000016ad23: loop 0x000000000016ad71; mov [rdi-0x16], ebx; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000016d059: loop 0x000000000016d04f; movq [rdi-0x10], mm1; ret; 
0x0000000016fb89: loop 0x000000000016fb7f; movq [rdi-0x10], mm1; ret; 
0x0000000018f3fe: loop 0x000000000018f402; add [rcx+0x63], cl; or al, 0x93; add rcx, r11; notrack jmp rcx; 
0x00000000026f6f: loope 0x0000000000026fda; sbb al, 0x0; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000047c8b: loope 0x0000000000047cce; sbb al, [rax]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000005634b: loope 0x0000000000056399; mov [rdi], ecx; ret; 
0x0000000005637c: loope 0x00000000000563ca; mov [rdi-0x8], ecx; ret; 
0x000000000563fd: loope 0x000000000005644b; mov [rdi-0x10], ecx; ret; 
0x0000000006e050: loope 0x000000000006e051; inc dword ptr [rcx-0xa]; ret; 
0x000000000759d2: loope 0x00000000000759d4; add [rax+0x39], cl; ret; 
0x0000000008075b: loope 0x000000000008076f; add [rax+0x63], cl; add al, 0x81; add rax, rcx; notrack jmp rax; 
0x00000000084ac7: loope 0x0000000000084afa; ror byte ptr [rax-0x77], cl; out dx, al; mov rdi, rbx; call qword ptr [r13+0x48]; 
0x0000000008f32b: loope 0x000000000008f32d; add [rax], al; mov rsi, r13; mov rdi, rbx; call qword ptr [rbp+0x70]; 
0x00000000092dde: loope 0x0000000000092ddf; dec dword ptr [rax-0x3f]; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x0000000009474e: loope 0x0000000000094798; lea eax, [rip+0x15cd4a]; pop rbx; mov dword ptr [rip+0x15cd2f], 0x1; ret; 
0x0000000009a0fb: loope 0x000000000009a11a; adc eax, 0x38894800; ret; 
0x000000000a050c: loope 0x00000000000a0516; lea rax, [rip+0xc826b]; lea rdx, [rip+0xcd904]; cmovne rax, rdx; ret; 
0x000000000a066c: loope 0x00000000000a0676; lea rax, [rip+0xc570b]; lea rdx, [rip+0xcac94]; cmovne rax, rdx; ret; 
0x000000000a09dc: loope 0x00000000000a09e6; lea rax, [rip+0xc53bb]; lea rdx, [rip+0xca944]; cmovne rax, rdx; ret; 
0x000000000a74ac: loope 0x00000000000a74ad; call qword ptr [rax-0x72b336cf]; 
0x000000000b6e76: loope 0x00000000000b6ede; nop [rax+rax]; mov [rdi], dh; ret; 
0x000000000b84b6: loope 0x00000000000b851e; nop [rax+rax]; mov [rdi], dh; lea rax, [rdi]; ret; 
0x000000000ba0df: loope 0x00000000000ba134; str [rcx+0x63]; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000ba186: loope 0x00000000000ba1ee; nop [rax+rax]; mov [rdi], dh; ret; 
0x000000000bac76: loope 0x00000000000bacde; nop [rax+rax]; mov [rdi], dh; ret; 
0x000000000ca897: loope 0x00000000000ca8e5; mov edx, ebp; call rbx; 
0x000000000cfafe: loope 0x00000000000cfb0f; je short 0x00000000000cfb20; ret; 
0x000000000e007f: loope 0x00000000000e00cd; mov edx, ebp; mov rsi, rbp; mov edi, r14d; call qword ptr [rsp+0x48]; 
0x000000000e051f: loope 0x00000000000e056d; mov edx, ebp; mov rsi, rbp; mov rdi, r14; call qword ptr [rsp+0x48]; 
0x000000000ee412: loope 0x00000000000ee413; add esi, esi; ret; 
0x0000000010dc98: loope 0x000000000010dca7; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x0000000010dcc8: loope 0x000000000010dcd7; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x0000000011338b: loope 0x0000000000113317; or eax, 0x64d8f700; mov [rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000011468b: loope 0x0000000000114704; or eax, 0x64d8f700; mov [rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000011534e: loope 0x000000000011534e; mov eax, 0xa9; syscall; 
0x0000000012d8dc: loope 0x000000000012d8e6; lea rax, [rip+0x384ab]; lea rdx, [rip+0x3da34]; cmovne rax, rdx; ret; 
0x0000000012d99c: loope 0x000000000012d9a6; lea rax, [rip+0x3adcb]; lea rdx, [rip+0x40464]; cmovne rax, rdx; ret; 
0x0000000012d9e8: loope 0x000000000012d9e2; dec dword ptr [rax-0x73]; adc eax, 0xfff8e0ee; cmove rax, rdx; ret; 
0x0000000012da5c: loope 0x000000000012da66; lea rax, [rip+0x3830b]; lea rdx, [rip+0x3d894]; cmovne rax, rdx; ret; 
0x0000000012f54a: loope 0x000000000012f545; jmp qword ptr [rsi-0x70]; 
0x0000000012f56b: loope 0x000000000012f565; jmp qword ptr [rsi-0x70]; 
0x00000000131233: loope 0x000000000013127d; mov esi, ebp; mov rdi, r13; call qword ptr [rsp+0x40]; 
0x00000000145e34: loope 0x0000000000145e35; jmp qword ptr [rsi+0xf]; 
0x00000000145ec4: loope 0x0000000000145ec5; jmp qword ptr [rsi+0xf]; 
0x0000000014cee2: loope 0x000000000014cf4a; nop [rax+rax]; xchg ax, ax; endbr64; ret; 
0x00000000151dbb: loope 0x0000000000151d99; std; call qword ptr [rax-0x5e1f00d]; 
0x000000001529ff: loope 0x0000000000152a49; mov edx, ebp; mov rsi, rbx; call rax; 
0x0000000015424b: loope 0x00000000001541f2; sti; jmp qword ptr [rsi-0x7d]; 
0x0000000015f77b: loope 0x000000000015f743; or [rax], al; mov rdi, [rsp]; mov rax, [rax+0x1d8]; jmp rax; 
0x00000000160cc3: loope 0x0000000000160ccd; add bl, al; nop [rax+rax]; xor eax, eax; ret; 
0x000000001632f4: loope 0x00000000001632de; xchg esi, eax; ret; 
0x000000001683e7: loope 0x0000000000168435; mov [rdi-0x17], ebx; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000016842f: loope 0x000000000016847d; mov [rdi-0x17], ebx; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000016846d: loope 0x00000000001684bb; mov [rdi-0x17], ebx; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x000000001684a5: loope 0x00000000001684f3; mov [rdi-0x17], ebx; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x000000001684e3: loope 0x0000000000168531; mov [rdi-0x17], ebx; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000016851b: loope 0x0000000000168569; mov [rdi-0x17], ebx; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000168543: loope 0x0000000000168591; mov [rdi-0x17], ebx; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000016adc7: loope 0x000000000016ae15; mov [rdi-0x17], ebx; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000016ae0f: loope 0x000000000016ae5d; mov [rdi-0x17], ebx; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000016ae4d: loope 0x000000000016ae9b; mov [rdi-0x17], ebx; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000016ae85: loope 0x000000000016aed3; mov [rdi-0x17], ebx; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000016aec3: loope 0x000000000016af11; mov [rdi-0x17], ebx; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000016aefb: loope 0x000000000016af49; mov [rdi-0x17], ebx; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000016af23: loope 0x000000000016af71; mov [rdi-0x17], ebx; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000016cfc9: loope 0x000000000016cfbf; movq [rdi-0x10], mm1; ret; 
0x0000000016faf9: loope 0x000000000016faef; movq [rdi-0x10], mm1; ret; 
0x0000000017862b: loope 0x000000000017862e; add [rax], al; ret; 
0x00000000183e1e: loope 0x0000000000183e49; enter 0xf8c5, 0x77; ret; 
0x0000000018abb3: loope 0x000000000018abfd; lea eax, [rdi+rdx]; vzeroupper; ret; 
0x0000000018f48d: loope 0x000000000018f491; add [rcx+0x63], cl; or al, 0x93; add rcx, r11; notrack jmp rcx; 
0x0000000018f507: loope 0x000000000018f50b; add [rcx+0x63], cl; or al, 0x93; add rcx, r11; notrack jmp rcx; 
0x0000000018f506: loope 0x000000000018f50b; add [rcx+0x63], cl; or al, 0x93; add rcx, r11; notrack jmp rcx; 
0x00000000190c8b: loope 0x0000000000190c8d; add [rax], al; lea rax, [rdi+0xf]; ret; 
0x000000001988fe: loope 0x000000000019895b; ret; 
0x0000000002ff65: loopne 0x000000000002ffc4; pop r12; pop r13; ret; 
0x0000000002ffe7: loopne 0x0000000000030046; pop r12; pop r13; ret; 
0x00000000030c50: loopne 0x0000000000030c9a; test eax, eax; je short 0x0000000000030c58; call rax; 
0x000000000340b7: loopne 0x00000000000340c1; movzx eax, ax; ret; 
0x000000000340f7: loopne 0x00000000000340fb; movzx eax, ax; ret; 
0x00000000034197: loopne 0x000000000003419d; movzx eax, ax; ret; 
0x00000000034277: loopne 0x000000000003427a; ret; 
0x00000000034310: loopne 0x0000000000034313; ret; 
0x00000000034330: loopne 0x000000000003433a; movzx eax, ax; ret; 
0x000000000342e7: loopne 0x0000000000034368; ret; 
0x00000000034370: loopne 0x0000000000034374; movzx eax, ax; ret; 
0x00000000034410: loopne 0x0000000000034416; movzx eax, ax; ret; 
0x00000000034adc: loopne 0x0000000000034b39; pop rbp; pop r12; ret; 
0x00000000034b7a: loopne 0x0000000000034bbd; pop rsp; ret; 
0x000000000385b6: loopne 0x0000000000038615; pop r12; pop r13; ret; 
0x00000000041e1b: loopne 0x0000000000041dfa; fsub st, dword ptr [rip+0x200]; ret; 
0x0000000004206c: loopne 0x00000000000420a2; and rcx, rdx; or rcx, rax; movq xmm0, rcx; ret; 
0x00000000042198: loopne 0x00000000000421d9; or rax, rdx; movq xmm0, rax; ret; 
0x000000000423ed: loopne 0x0000000000042406; or esi, eax; movd xmm0, esi; ret; 
0x0000000004247a: loopne 0x0000000000042493; or eax, esi; movd xmm0, eax; mulss xmm0, [rip+0x17af06]; ret; 
0x00000000042519: loopne 0x0000000000042523; ret; 
0x00000000042a58: loopne 0x0000000000042a62; ret; 
0x00000000042e16: loopne 0x0000000000042e7e; nop [rax+rax]; ret; 
0x00000000042fec: loopne 0x0000000000042fee; add [rax], al; movaps [rsp+0xf0], xmm0; syscall; 
0x00000000043bc0: loopne 0x0000000000043c0a; or [rdi], eax; xor eax, eax; ret; 
0x00000000043c58: loopne 0x0000000000043ca2; test [rdi], eax; setne al; movzx eax, al; ret; 
0x00000000044187: loopne 0x00000000000441e4; pop rbp; pop r12; ret; 
0x0000000004419d: loopne 0x00000000000441fa; pop rbp; pop r12; ret; 
0x000000000476f8: loopne 0x000000000004773b; pop rsp; ret; 
0x000000000477d4: loopne 0x0000000000047833; pop r12; ret; 
0x0000000004f7a6: loopne 0x000000000004f7d9; std; jmp qword ptr [rsi+0xf]; 
0x00000000052979: loopne 0x0000000000052999; or eax, edx; ret; 
0x00000000055c1d: loopne 0x0000000000055c21; sub eax, 0x1; ret; 
0x00000000057c1b: loopne 0x0000000000057bd5; add [rax], eax; add [rax], al; ret; 
0x0000000005b966: loopne 0x000000000005b9c3; pop r12; ret; 
0x0000000005b9fe: loopne 0x000000000005ba5b; pop r12; ret; 
0x0000000005ba25: loopne 0x000000000005ba82; pop r12; ret; 
0x0000000005ba42: loopne 0x000000000005ba9f; pop r12; ret; 
0x0000000005f3f0: loopne 0x000000000005f37b; ret; 
0x00000000062689: loopne 0x00000000000626e8; pop r12; ret; 
0x00000000062760: loopne 0x00000000000627bd; pop r12; ret; 
0x00000000078aae: loopne 0x0000000000078a40; mov dword ptr [rbp-0x540], 0x1; mov r10, rdx; jmp rax; 
0x00000000078abe: loopne 0x0000000000078a50; mov dword ptr [rbp-0x4d8], 0x1; mov r10, rdx; jmp rax; 
0x00000000078ace: loopne 0x0000000000078a60; mov r10, rdx; jmp rax; 
0x0000000007f1ae: loopne 0x000000000007f140; mov r9, rsi; jmp rax; 
0x0000000007f21e: loopne 0x000000000007f1b0; mov dword ptr [rbp-0x500], 0x1; mov r9, rsi; jmp rax; 
0x00000000080b02: loopne 0x0000000000080b5f; pop rbp; pop r12; pop r13; ret; 
0x0000000008130e: loopne 0x000000000008136b; pop rbp; pop r12; ret; 
0x00000000081ef5: loopne 0x0000000000081f52; pop rbp; pop r12; ret; 
0x0000000008282d: loopne 0x000000000008282f; add [rax], al; ret; 
0x00000000082a03: loopne 0x0000000000082a60; pop rbp; pop r12; pop r13; ret; 
0x00000000082a60: loopne 0x0000000000082a62; add [rax], al; jmp rax; 
0x00000000082a29: loopne 0x0000000000082a86; pop rbp; pop r12; pop r13; ret; 
0x00000000082a9c: loopne 0x0000000000082a9e; add [rax], al; call rax; 
0x00000000082a65: loopne 0x0000000000082aaf; mov eax, 0xffffffff; ret; 
0x00000000082ae9: loopne 0x0000000000082aeb; add [rax], al; lea rsi, [rsp+0x8]; call rax; 
0x00000000082b40: loopne 0x0000000000082b42; add [rax], al; jmp rax; 
0x00000000082b45: loopne 0x0000000000082bad; nop [rax+rax]; xor eax, eax; ret; 
0x00000000082c76: loopne 0x0000000000082cd5; pop r12; pop r13; ret; 
0x00000000082cde: loopne 0x0000000000082d3d; pop r12; pop r13; ret; 
0x00000000084416: loopne 0x0000000000084475; pop r12; pop r13; ret; 
0x00000000084435: loopne 0x0000000000084494; pop r12; pop r13; ret; 
0x00000000085a44: loopne 0x0000000000085aa3; pop r12; pop r13; pop r14; ret; 
0x00000000085b26: loopne 0x0000000000085b69; pop rsp; pop r13; pop r14; ret; 
0x00000000085b6b: loopne 0x0000000000085bca; pop r12; pop r13; pop r14; ret; 
0x000000000868e4: loopne 0x0000000000086941; pop rbp; pop r12; pop r13; ret; 
0x000000000874e7: loopne 0x00000000000874e9; add [rax], al; call qword ptr [rax+0x68]; 
0x0000000008761c: loopne 0x000000000008761e; add [rax], al; mov esi, 0xffffffff; call qword ptr [rax+0x18]; 
0x00000000089990: loopne 0x0000000000089992; add [rax], al; mov rax, [rax+0x20]; jmp rax; 
0x00000000089999: loopne 0x0000000000089a01; nop [rax+rax]; mov eax, 0xffffffff; pop rbp; ret; 
0x0000000008abd3: loopne 0x000000000008ac32; pop r12; ret; 
0x0000000008b893: loopne 0x000000000008b8f2; pop r12; ret; 
0x0000000008bf0e: loopne 0x000000000008bf6b; pop rbp; pop r12; pop r13; ret; 
0x0000000008c0e7: loopne 0x000000000008c146; pop r12; pop r13; pop r14; ret; 
0x0000000008c143: loopne 0x000000000008c1a0; pop rbp; pop r12; ret; 
0x0000000008d51a: loopne 0x000000000008d577; pop rbp; pop r12; ret; 
0x0000000008df2a: loopne 0x000000000008df2d; ret; 
0x0000000008df3a: loopne 0x000000000008df3d; ret; 
0x0000000008e196: loopne 0x000000000008e1f3; pop rbp; pop r12; ret; 
0x0000000008e1c8: loopne 0x000000000008e20b; pop rsp; ret; 
0x0000000008e1d7: loopne 0x000000000008e21a; pop rsp; ret; 
0x0000000008e25d: loopne 0x000000000008e2ba; pop rbp; pop r12; pop r14; ret; 
0x0000000008e277: loopne 0x000000000008e2d6; pop r12; pop r14; ret; 
0x0000000008e5ef: loopne 0x000000000008e5f1; add [rax], al; pop rbx; ret; 
0x0000000008f9da: loopne 0x000000000008fa24; cmp eax, ebx; jae 0x000000000008fa90; mov rdi, rbp; call qword ptr [r13+0x20]; 
0x0000000008fcdf: loopne 0x000000000008fd29; cmp ebx, eax; jbe 0x000000000008fd90; mov rdi, rbp; call qword ptr [r13+0x20]; 
0x0000000008ff1e: loopne 0x000000000008ff7b; pop rbp; pop r12; ret; 
0x00000000093e02: loopne 0x0000000000093e04; jmp qword ptr [rsi+0xf]; 
0x0000000009469c: loopne 0x00000000000946aa; cmp eax, 0x4; je short 0x00000000000946a4; ret; 
0x000000000946e6: loopne 0x000000000009474e; nop [rax+rax]; ret; 
0x0000000009482c: loopne 0x000000000009483a; pop rbx; ret; 
0x00000000094d48: loopne 0x0000000000094d4b; mov [rsi], eax; xor eax, eax; ret; 
0x00000000094d8a: loopne 0x0000000000094d8d; mov [rsi], eax; xor eax, eax; ret; 
0x00000000094dc1: loopne 0x0000000000094dc0; mov [rdi+0x8], eax; xor eax, eax; ret; 
0x00000000095448: loopne 0x00000000000954a5; pop rbp; pop r12; pop r13; ret; 
0x0000000009547c: loopne 0x00000000000954db; pop r12; pop r13; ret; 
0x00000000095817: loopne 0x000000000009585a; pop rsp; ret; 
0x00000000095808: loopne 0x0000000000095865; pop rbp; pop r12; ret; 
0x00000000095c77: loopne 0x0000000000095cd4; pop rbp; pop r12; pop r13; ret; 
0x00000000099edf: loopne 0x0000000000099f3c; pop rbp; pop r12; ret; 
0x0000000009c232: loopne 0x000000000009c235; cmovne rax, rdx; ret; 
0x0000000009d518: loopne 0x000000000009d55b; pop rsp; ret; 
0x0000000009d74b: loopne 0x000000000009d78e; pop rsp; ret; 
0x0000000009ef03: loopne 0x000000000009ef62; pop r12; pop r13; pop r14; ret; 
0x000000000a03ca: loopne 0x00000000000a040d; pop rsp; pop r13; ret; 
0x000000000a03b3: loopne 0x00000000000a0412; pop r12; pop r13; ret; 
0x000000000a0a76: loopne 0x00000000000a0ad3; pop r12; ret; 
0x000000000a0a8d: loopne 0x00000000000a0aea; pop r12; ret; 
0x000000000a1e3f: loopne 0x00000000000a1e82; pop rsp; ret; 
0x000000000a1e2b: loopne 0x00000000000a1e88; pop rbp; pop r12; ret; 
0x000000000a86a7: loopne 0x00000000000a8704; pop r12; ret; 
0x000000000a86bd: loopne 0x00000000000a871a; pop r12; ret; 
0x000000000a876e: loopne 0x00000000000a87b1; pop rsp; ret; 
0x000000000a8b1f: loopne 0x00000000000a8b69; mov eax, [rsp+0x10]; mov [rdi], rax; lea rax, [rdi+rdx-0x1]; ret; 
0x000000000a8da3: loopne 0x00000000000a8e00; pop rbp; pop r12; pop r13; ret; 
0x000000000a8e1f: loopne 0x00000000000a8e62; pop rsp; pop r13; ret; 
0x000000000a8ea5: loopne 0x00000000000a8f04; pop r12; pop r13; pop r14; ret; 
0x000000000b7abc: loopne 0x00000000000b7ac2; add [rax], al; ret; 
0x000000000bbcb4: loopne 0x00000000000bbcc5; adc [rdi+rdx-0x30], esi; movups [rdi+rdx-0x40], xmm7; ret; 
0x000000000bbd6d: loopne 0x00000000000bbdb3; movups [rcx-0x30], xmm0; movups [r11], xmm4; ret; 
0x000000000bbe5b: loopne 0x00000000000bbea1; movups [rcx-0x30], xmm0; movups [r11], xmm4; ret; 
0x000000000bc10d: loopne 0x00000000000bc11e; movsxd rcx, [rsi+rax*4]; add rcx, rsi; notrack jmp rcx; 
0x000000000bc808: loopne 0x00000000000bc867; pop r12; ret; 
0x000000000bc8fb: loopne 0x00000000000bc958; pop rbp; pop r12; ret; 
0x000000000bca2c: loopne 0x00000000000bca29; or al, 0x0; lea rax, [rip+0x12699]; cmove rax, rdx; ret; 
0x000000000bc9e8: loopne 0x00000000000bca47; pop r12; pop r13; pop r14; ret; 
0x000000000d005f: loopne 0x00000000000d00a2; pop rsp; ret; 
0x000000000d0093: loopne 0x00000000000d00d6; pop rsp; ret; 
0x000000000d00a5: loopne 0x00000000000d00e8; pop rsp; ret; 
0x000000000d11d0: loopne 0x00000000000d11d2; add [rax], al; mov eax, r8d; pop rbx; ret; 
0x000000000d1d07: loopne 0x00000000000d1d4a; pop rsp; pop r13; pop r14; ret; 
0x000000000d1cee: loopne 0x00000000000d1d4d; pop r12; pop r13; pop r14; ret; 
0x000000000d4447: loopne 0x00000000000d443d; dec dword ptr [rax-0x77]; ret; 
0x000000000dd8c6: loopne 0x00000000000dd923; pop rbp; pop r12; ret; 
0x000000000dd927: loopne 0x00000000000dd96a; pop rsp; ret; 
0x000000000dd9b9: loopne 0x00000000000dda18; pop r12; pop r13; pop r14; ret; 
0x000000000dda87: loopne 0x00000000000ddaca; pop rsp; pop r13; pop r14; ret; 
0x000000000ddc8a: loopne 0x00000000000ddc8c; add [rax], al; pop rbx; ret; 
0x000000000ddd1e: loopne 0x00000000000ddd20; add [rax], al; pop rbx; ret; 
0x000000000dde27: loopne 0x00000000000dde84; pop rbp; pop r12; pop r13; ret; 
0x000000000ddfa7: loopne 0x00000000000de004; pop rbp; pop r12; pop r13; ret; 
0x000000000de0cf: loopne 0x00000000000de12c; pop rbp; pop r12; pop r13; ret; 
0x000000000df3d6: loopne 0x00000000000df433; pop rbp; pop r12; ret; 
0x000000000e13b9: loopne 0x00000000000e13cb; add [rdi], cl; add eax, 0xffff33e9; jmp qword ptr [rbp+rax*2-0x75]; 
0x000000000e5552: loopne 0x00000000000e5556; add [rax-0x77], cl; ret; 
0x000000000ee079: loopne 0x00000000000ee0d6; pop rbp; pop r12; pop r13; ret; 
0x000000000ff41d: loopne 0x00000000000ff47c; pop r12; pop r13; pop r14; ret; 
0x000000000ff472: loopne 0x00000000000ff4b5; pop rsp; pop r13; pop r14; ret; 
0x000000000ff4f0: loopne 0x00000000000ff54d; pop rbp; pop r12; pop r13; ret; 
0x00000000102ac5: loopne 0x0000000000102ad6; ret; 
0x00000000109111: loopne 0x0000000000109151; jmp rax; 
0x0000000010ab20: loopne 0x000000000010ab60; jmp rax; 
0x0000000010cc3b: loopne 0x000000000010cc7b; jmp rax; 
0x0000000010d25f: loopne 0x000000000010d2a2; pop rsp; ret; 
0x0000000010d24b: loopne 0x000000000010d2a8; pop rbp; pop r12; ret; 
0x0000000010e415: loopne 0x000000000010e472; pop rbp; pop r12; pop r13; ret; 
0x0000000010f286: loopne 0x000000000010f2e5; pop r12; pop r13; ret; 
0x00000000110b33: loopne 0x0000000000110b39; mov edx, [rdx+rax]; mov rdi, [rbp-0x118]; mov rsi, r9; call qword ptr [rbp-0xf0]; 
0x00000000113ebd: loopne 0x0000000000113f00; pop rsp; ret; 
0x000000001141ae: loopne 0x000000000011420b; pop rbp; pop r12; ret; 
0x00000000114360: loopne 0x00000000001143bd; pop rbp; pop r12; ret; 
0x000000001143a7: loopne 0x0000000000114404; pop rbp; pop r12; ret; 
0x00000000115702: loopne 0x0000000000115745; pop rsp; ret; 
0x000000001158c2: loopne 0x00000000001158b4; add eax, 0x26; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000001158e2: loopne 0x00000000001158d4; add eax, 0x26; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000115a0d: loopne 0x0000000000115a6a; pop rbp; pop r12; ret; 
0x00000000116d62: loopne 0x0000000000116d54; add eax, 0x26; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000001172b7: loopne 0x0000000000117314; pop rbp; pop r12; ret; 
0x000000001179f6: loopne 0x0000000000117a53; pop r12; pop r13; pop rbp; ret; 
0x00000000118800: loopne 0x000000000011885d; pop rbp; pop r12; ret; 
0x00000000118cfa: loopne 0x0000000000118d3d; pop rsp; ret; 
0x00000000119240: loopne 0x000000000011929c; pop r12; ret; 
0x00000000119aca: loopne 0x0000000000119b29; pop r12; pop r13; jmp rax; 
0x00000000119b5a: loopne 0x0000000000119bb9; pop r12; pop r13; jmp rax; 
0x0000000011a743: loopne 0x000000000011a7a2; pop r12; jmp rax; 
0x0000000011a7f2: loopne 0x000000000011a851; pop r12; pop r13; jmp rax; 
0x0000000011a7f9: loopne 0x000000000011a861; nop [rax+rax]; ret; 
0x0000000011caae: loopne 0x000000000011cb0b; pop rbp; pop r12; pop r13; ret; 
0x0000000011ef30: loopne 0x000000000011ef52; and rax, rdi; or rax, rsi; ret; 
0x0000000011f904: loopne 0x000000000011f909; ret; 
0x00000000121c78: loopne 0x0000000000121c20; or al, 0x0; add al, [rax]; add [rax], al; ret; 
0x00000000122a22: loopne 0x0000000000122a25; ret; 
0x00000000122a3a: loopne 0x0000000000122a44; movzx eax, ax; ret; 
0x00000000122ab2: loopne 0x0000000000122ab5; ret; 
0x00000000122b52: loopne 0x0000000000122b55; ret; 
0x00000000122b6a: loopne 0x0000000000122b6d; ret; 
0x00000000122be2: loopne 0x0000000000122be5; ret; 
0x00000000122bfa: loopne 0x0000000000122bfe; movzx eax, ax; ret; 
0x00000000122c71: loopne 0x0000000000122c74; mov eax, r8d; ret; 
0x00000000122d12: loopne 0x0000000000122d15; ret; 
0x00000000122db2: loopne 0x0000000000122db5; ret; 
0x00000000122e52: loopne 0x0000000000122e55; ret; 
0x00000000122ef2: loopne 0x0000000000122ef5; ret; 
0x00000000122f0a: loopne 0x0000000000122f10; movzx eax, ax; ret; 
0x00000000122f82: loopne 0x0000000000122f85; ret; 
0x0000000012301d: loopne 0x0000000000123020; ret; 
0x000000001230b2: loopne 0x00000000001230b5; ret; 
0x000000001232ae: loopne 0x00000000001232b1; ret; 
0x00000000123404: loopne 0x0000000000123407; ret; 
0x0000000012341b: loopne 0x0000000000123425; movzx eax, ax; ret; 
0x00000000123494: loopne 0x0000000000123497; ret; 
0x00000000123524: loopne 0x0000000000123527; ret; 
0x0000000012353b: loopne 0x000000000012353e; ret; 
0x000000001235a4: loopne 0x00000000001235a7; ret; 
0x000000001235bb: loopne 0x00000000001235bf; movzx eax, ax; ret; 
0x00000000123633: loopne 0x0000000000123636; mov eax, r8d; ret; 
0x000000001236c4: loopne 0x00000000001236c7; ret; 
0x00000000123754: loopne 0x0000000000123757; ret; 
0x000000001237e4: loopne 0x00000000001237e7; ret; 
0x00000000123874: loopne 0x0000000000123877; ret; 
0x0000000012388b: loopne 0x0000000000123891; movzx eax, ax; ret; 
0x00000000123904: loopne 0x0000000000123907; ret; 
0x00000000123991: loopne 0x0000000000123994; ret; 
0x00000000123a14: loopne 0x0000000000123a17; ret; 
0x00000000123bee: loopne 0x0000000000123bf1; ret; 
0x000000001257b9: loopne 0x0000000000125818; pop r12; pop r13; ret; 
0x00000000125927: loopne 0x00000000001258cc; or al, 0x0; add [rcx+rcx*4-0x40], eax; add rsp, 0x8; ret; 
0x0000000012706c: loopne 0x00000000001270c9; pop rbp; pop r12; ret; 
0x000000001281a5: loopne 0x0000000000128202; pop r12; ret; 
0x0000000012ceef: loopne 0x000000000012cef2; ret; 
0x0000000012d0cc: loopne 0x000000000012d116; lea edi, [rip-0x184]; call rax; 
0x0000000012daa8: loopne 0x000000000012daa2; dec dword ptr [rax-0x73]; adc eax, 0xfff8e00e; cmove rax, rdx; ret; 
0x0000000012eb13: loopne 0x000000000012eb70; pop rbp; pop r12; ret; 
0x0000000012eb3f: loopne 0x000000000012eb82; pop rsp; ret; 
0x0000000012eb67: loopne 0x000000000012ebaa; pop rsp; ret; 
0x0000000012fc1e: loopne 0x000000000012fc7a; pop r12; ret; 
0x00000000134c08: loopne 0x0000000000134c64; pop r12; ret; 
0x00000000134e0e: loopne 0x0000000000134e6b; pop rbp; pop r12; pop r13; ret; 
0x0000000013b418: loopne 0x000000000013b412; add eax, 0x10; ret; 
0x0000000013c74f: loopne 0x000000000013c754; shr rax, 0x4; and eax, 0x7f; ret; 
0x0000000013c756: loopne 0x000000000013c7d7; ret; 
0x0000000013cb09: loopne 0x000000000013cb66; pop rbp; pop r12; ret; 
0x0000000013cb25: loopne 0x000000000013cb82; pop rbp; pop r12; ret; 
0x00000000140433: loopne 0x0000000000140490; pop rbp; pop r12; pop r13; ret; 
0x00000000140452: loopne 0x00000000001404af; pop rbp; pop r12; pop r13; ret; 
0x00000000141919: loopne 0x0000000000141978; pop r12; ret; 
0x0000000014210f: loopne 0x000000000014216c; pop rbp; pop r12; ret; 
0x0000000014241b: loopne 0x000000000014247a; pop r12; ret; 
0x00000000144edf: loopne 0x0000000000144ee1; add [rax], al; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; call qword ptr [rsp+0x68]; 
0x000000001458ca: loopne 0x0000000000145927; pop rbp; pop r12; pop r13; ret; 
0x00000000145f54: loopne 0x0000000000145f55; jmp qword ptr [rsi+0xf]; 
0x00000000145fe4: loopne 0x0000000000145fe5; jmp qword ptr [rsi+0xf]; 
0x0000000014701b: loopne 0x0000000000147078; pop r12; ret; 
0x00000000147714: loopne 0x000000000014775e; mov [rbx+0x18], eax; mov rax, [rbp+0x8]; call qword ptr [rax+0x28]; 
0x000000001481f9: loopne 0x00000000001481ee; movq mm0, [rdi+0x38]; mov dword ptr [rsi], 0x9; movups [rsi+0x8], xmm0; ret; 
0x000000001482c0: loopne 0x00000000001482be; and edx, 0xfffffffc; lea esi, [rax+rdx+0x28]; mov rax, [rdi+0x8]; call qword ptr [rax+0x30]; 
0x00000000148bb9: loopne 0x0000000000148bfc; pop rsp; ret; 
0x0000000014b1c3: loopne 0x000000000014b220; pop rbp; pop r12; pop r13; ret; 
0x0000000014d5ee: loopne 0x000000000014d64b; pop rbp; pop r12; pop r13; ret; 
0x0000000014dd0f: loopne 0x000000000014dd6e; pop r12; ret; 
0x0000000014e381: loopne 0x000000000014e3e0; pop r12; pop r13; pop r14; ret; 
0x00000000151a0c: loopne 0x0000000000151a0b; call qword ptr [rax-0x5e1f00d]; 
0x00000000152bae: loopne 0x0000000000152c0d; pop r12; ret; 
0x0000000015353b: loopne 0x000000000015353d; add [rax], al; add [rax-0x77], cl; ret; 
0x0000000015427f: loopne 0x000000000015426d; jmp qword ptr [rsi+0x66]; 
0x0000000015440f: loopne 0x000000000015446e; pop r12; ret; 
0x00000000154516: loopne 0x0000000000154573; pop rbp; pop r12; pop r13; ret; 
0x000000001548d1: loopne 0x0000000000154930; pop r12; pop r13; pop r14; ret; 
0x0000000015659d: loopne 0x0000000000156605; nop; mov rax, [rdi+0x8]; call qword ptr [rax+0x10]; 
0x00000000156c57: loopne 0x0000000000156c58; mov [rsp], rax; mov rax, [rbp+0x8]; call qword ptr [rax+0x8]; 
0x00000000159a13: loopne 0x0000000000159a70; pop rbp; pop r12; ret; 
0x0000000015b893: loopne 0x000000000015b8d6; pop rsp; pop r13; pop r14; ret; 
0x0000000015b8bc: loopne 0x000000000015b91b; pop r12; pop r13; pop r14; ret; 
0x0000000015c4d9: loopne 0x000000000015c51c; pop rsp; ret; 
0x0000000015e037: loopne 0x000000000015e096; pop r12; pop r13; ret; 
0x0000000015e257: loopne 0x000000000015e2b6; pop r12; ret; 
0x00000000160877: loopne 0x00000000001608ba; pop rsp; ret; 
0x00000000166352: loopne 0x0000000000166363; sub [rdi-0x10], ebp; notrack jmp r9; 
0x000000001664a2: loopne 0x00000000001664b3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x000000001665f2: loopne 0x0000000000166603; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000166742: loopne 0x0000000000166753; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000166892: loopne 0x00000000001668a3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x000000001669e2: loopne 0x00000000001669f3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000166b32: loopne 0x0000000000166b43; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000166c80: loopne 0x0000000000166c91; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000166dd2: loopne 0x0000000000166de3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000166f22: loopne 0x0000000000166f33; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000167072: loopne 0x0000000000167083; sub [rdi-0x10], ebp; notrack jmp r9; 
0x000000001671c2: loopne 0x00000000001671d3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000167312: loopne 0x0000000000167323; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000167462: loopne 0x0000000000167473; sub [rdi-0x10], ebp; notrack jmp r9; 
0x000000001675b2: loopne 0x00000000001675c3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x000000001676be: loopne 0x000000000016770d; mov [rdi-0x18], edx; mov [rdi-0x10], r11; mov [rdi-0x8], rcx; ret; 
0x000000001676fc: loopne 0x000000000016774b; mov [rdi-0x18], edx; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x00000000167734: loopne 0x0000000000167783; mov [rdi-0x18], edx; mov [rdi-0x10], r11; mov [rdi-0x8], rcx; ret; 
0x00000000167772: loopne 0x00000000001677c1; mov [rdi-0x18], edx; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x000000001677aa: loopne 0x00000000001677f9; mov [rdi-0x18], edx; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x000000001677d2: loopne 0x0000000000167821; mov [rdi-0x18], edx; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x00000000168d32: loopne 0x0000000000168d43; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000168e82: loopne 0x0000000000168e93; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000168fd2: loopne 0x0000000000168fe3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000169122: loopne 0x0000000000169133; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000169272: loopne 0x0000000000169283; sub [rdi-0x10], ebp; notrack jmp r9; 
0x000000001693c2: loopne 0x00000000001693d3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000169512: loopne 0x0000000000169523; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000169660: loopne 0x0000000000169671; sub [rdi-0x10], ebp; notrack jmp r9; 
0x000000001697b2: loopne 0x00000000001697c3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000169902: loopne 0x0000000000169913; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000169a52: loopne 0x0000000000169a63; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000169ba2: loopne 0x0000000000169bb3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000169cf2: loopne 0x0000000000169d03; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000169e42: loopne 0x0000000000169e53; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000169f92: loopne 0x0000000000169fa3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x0000000016a09e: loopne 0x000000000016a0ed; mov [rdi-0x18], edx; mov [rdi-0x10], r11; mov [rdi-0x8], rcx; ret; 
0x0000000016a0dc: loopne 0x000000000016a12b; mov [rdi-0x18], edx; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x0000000016a114: loopne 0x000000000016a163; mov [rdi-0x18], edx; mov [rdi-0x10], r11; mov [rdi-0x8], rcx; ret; 
0x0000000016a152: loopne 0x000000000016a1a1; mov [rdi-0x18], edx; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x0000000016a18a: loopne 0x000000000016a1d9; mov [rdi-0x18], edx; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x0000000016a1b2: loopne 0x000000000016a201; mov [rdi-0x18], edx; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x0000000016cf4f: loopne 0x000000000016cf45; movq [rdi-0x20], mm0; lddqu xmm0, [rsi-0x10]; movdqu [rdi-0x10], xmm0; ret; 
0x0000000016fa7f: loopne 0x000000000016fa75; movq [rdi-0x20], mm0; lddqu xmm0, [rsi-0x10]; movdqu [rdi-0x10], xmm0; ret; 
0x0000000017ca7c: loopne 0x000000000017ca7f; add [rax], al; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x000000001899a5: loopne 0x00000000001899e9; mov byte ptr [rdi+rax], 0x0; vzeroupper; ret; 
0x0000000018b285: loopne 0x000000000018b2d1; lea eax, [rdi+rax]; vzeroupper; ret; 
0x00000000190107: loopne 0x00000000001900cc; vmovdqu [rdi], xmm0; vmovdqu [rsi-0x10], xmm0; ret; 
0x00000000196f8d: loopne 0x0000000000196fd0; pop rsp; ret; 
0x00000000197010: loopne 0x0000000000197053; pop rsp; ret; 
0x0000000019850f: loopne 0x000000000019856c; pop rbp; pop r12; ret; 
0x000000001191b0: minps xmm1, [rax-0x73]; add eax, 0xd6747; pop r12; pop r13; ret; 
0x000000000328d7: mov [0x1776387a3900181a], al; mov rax, [rdx+rdi*8+0x40]; ret; 
0x0000000004242d: mov [0x17a2e905560f0017], eax; add bl, dh; mulps xmm0, [rip+0x17af49]; ret; 
0x00000000042408: mov [0x17a32e05560f0017], eax; add bl, dh; mulps xmm0, [rip+0x17af72]; ret; 
0x0000000011feca: mov [0x18964d8f7000cbf], al; or rax, 0xffffffffffffffff; ret; 
0x0000000009b369: mov [0x3145001f0fffffed], eax; rcr byte ptr [rbp+0x41], 0x5c; mov rax, r8; pop r13; ret; 
0x0000000009520a: mov [0x4800000001001570], al; mov [rip+0x15706f], eax; ret; 
0x000000000434ca: mov [0x480824448b000511], al; add esp, 0x18; ret; 
0x0000000006c8fc: mov [0x48fffff743830fc8], eax; lea esi, [rip+0x141551]; movsxd rax, [rsi+rcx*4]; add rax, rsi; notrack jmp rax; 
0x000000000f00de: mov [0x4af6b60f45000c0f], al; movsxd eax, [rdx+rsi*4]; add rax, rdx; notrack jmp rax; 
0x00000000125a03: mov [0x4c1989416401000c], eax; mov eax, eax; pop rbx; ret; 
0x00000000193f38: mov [0x4cc8b60f41e83145], al; add edx, edx; notrack jmp rdx; 
0x00000000198a09: mov [0x4fe85058d48ffef], eax; add [rax+0x39], cl; ret; 
0x000000001490b9: mov [0x5b20c48348000000], eax; pop rbp; pop r12; ret; 
0x0000000014e37a: mov [0x5de0894c5b000051], al; pop r12; pop r13; pop r14; ret; 
0x0000000010601d: mov [0x6411c8c148000e95], eax; xor rax, [0x30]; call rax; 
0x000000000dd8da: mov [0x6411c8c148001100], al; xor rax, [0x30]; call rax; 
0x000000000943f1: mov [0x6411c8c1480015cf], eax; xor rax, [0x30]; jmp rax; 
0x000000000dee8c: mov [0x808cbe8ff894c], eax; mov rax, r15; call rax; 
0x0000000017c9ba: mov [0x8348013880000002], al; fdivr st, st(7); ret; 
0x00000000164aae: mov [0x840fc9854d000012], al; cdq; adc al, [rax]; add [rbp-0x77], cl; ret far; 
0x00000000079d99: mov [0x856ce8d78948fffb], al; cli; dec dword ptr [rcx-0x77]; ret; 
0x00000000157653: mov [0x8c48348c031fff2], al; ret; 
0x000000000240c2: mov [0xc031308b480018fd], al; call qword ptr [rdx+0x1d0]; 
0x00000000083312: mov [0xc483480000441f0f], eax; or [rax-0x1], bh; pop rbx; pop rbp; ret; 
0x000000000d4ee2: mov [0xf00000896830fc7], eax; mov dh, 0x73; add [rax-0x7d], ecx; ret; 
0x0000000015c16d: mov [0xffff51e924048b49], al; jmp qword ptr [rsi+0xf]; 
0x0000000013c268: mov [r10-0x1], r8b; mov [rax], r10; lea eax, [r9+r8+0x2]; pop rbx; ret; 
0x000000000951cf: mov [r11+0x10], eax; mov dword ptr [r11+0x14], 0x0; ret; 
0x000000000951ca: mov [r11+0x24], ebp; pop rbp; mov [r11+0x10], eax; mov dword ptr [r11+0x14], 0x0; ret; 
0x00000000047b23: mov [r11], ebx; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000014e709: mov [r12+0x70], edx; call qword ptr [rax+0x30]; 
0x000000000a1fa1: mov [r12], r14; pop r12; pop r13; pop r14; ret; 
0x0000000015f52e: mov [r13+0x18], rax; lea rdi, [r15+0x908]; call qword ptr [r15+0xf10]; 
0x0000000013c605: mov [r8+0x1], dl; mov rax, r8; mov byte ptr [r8+0x2], 0x0; ret; 
0x00000000086430: mov [r8+0x28], rdx; mov [rax], dil; mov eax, r9d; ret; 
0x0000000014fe40: mov [r8+0x48], eax; mov eax, 0x1; ret; 
0x0000000012edf8: mov [r8+0x4], eax; test eax, eax; jne short 0x000000000012eda9; mov rax, rdi; ret; 
0x0000000014fe9d: mov [r8+0x54], eax; mov eax, 0x1; ret; 
0x0000000014fe6d: mov [r8+0x58], eax; mov eax, 0x1; ret; 
0x0000000014d060: mov [r8+0xa8], eax; mov eax, 0x1; ret; 
0x0000000014d0bd: mov [r8+0xb4], eax; mov eax, 0x1; ret; 
0x0000000014d08d: mov [r8+0xb8], eax; mov eax, 0x1; ret; 
0x000000000995cb: mov [r8+rbp], cl; add rsp, 0x10; mov rax, r8; pop rbp; ret; 
0x000000000993d4: mov [r8+rbx], cl; add rsp, 0x10; mov rax, r8; pop rbx; ret; 
0x00000000026712: mov [r8-0x7d], r9b; ret; 
0x0000000013c491: mov [r8], edx; mov [r9], r10; ret; 
0x0000000013c558: mov [r8], r11d; pop rbx; mov [r9], rcx; ret; 
0x00000000131756: mov [r8], r9d; add rsp, 0x18; ret; 
0x000000000dfc60: mov [r8], r9d; add rsp, 0x8; ret; 
0x00000000057c5a: mov [r8], rax; mov eax, 0x1; mov dword ptr [rdx], 0xffffc002; ret; 
0x00000000121ccc: mov [r8], rax; mov qword ptr [rip+0xca686], 0x0; ret; 
0x00000000121c4c: mov [r8], rax; mov qword ptr [rip+0xca706], 0x0; ret; 
0x0000000005b4f9: mov [r9+0x3a8], rdi; mov rsp, rdx; ret; 
0x0000000005587b: mov [r9+rcx*8], rax; xor eax, eax; ret; 
0x0000000018fa69: mov [r9-0x2], cx; ret; 
0x0000000018fa6a: mov [r9-0x2], ecx; ret; 
0x0000000018fa55: mov [r9-0x4], ecx; ret; 
0x0000000018fa44: mov [r9-0x8], rcx; ret; 
0x000000000dfe2b: mov [r9], ebx; add rsp, 0x20; mov eax, r8d; pop rbx; ret; 
0x000000000df508: mov [r9], ebx; mov rax, r8; pop rbx; ret; 
0x0000000013c494: mov [r9], r10; ret; 
0x0000000013c55c: mov [r9], rcx; ret; 
0x0000000013c53a: mov [r9], rdi; ret; 
0x00000000086ecb: mov [rax+0x10], ecx; mov [rax+0x40], rdx; movups [rax], xmm0; ret; 
0x00000000087f89: mov [rax+0x10], edi; mov [rax+0x40], rsi; mov [rax], rdx; xor eax, eax; ret; 
0x00000000086e8d: mov [rax+0x10], edx; mov [rax+0x40], rcx; ret; 
0x00000000086eca: mov [rax+0x10], rcx; mov [rax+0x40], rdx; movups [rax], xmm0; ret; 
0x00000000087f88: mov [rax+0x10], rdi; mov [rax+0x40], rsi; mov [rax], rdx; xor eax, eax; ret; 
0x00000000086e8c: mov [rax+0x10], rdx; mov [rax+0x40], rcx; ret; 
0x0000000008765c: mov [rax+0x18], edx; xor eax, eax; mov [rbx], ecx; pop rbx; ret; 
0x0000000008765b: mov [rax+0x18], rdx; xor eax, eax; mov [rbx], ecx; pop rbx; ret; 
0x0000000012dd19: mov [rax+0x1], cl; test cl, cl; jne short 0x000000000012dcc8; mov rax, rdi; ret; 
0x0000000013c606: mov [rax+0x1], dl; mov rax, r8; mov byte ptr [r8+0x2], 0x0; ret; 
0x00000000095937: mov [rax+0x20], edx; add rsp, 0x8; ret; 
0x0000000008cdf0: mov [rax+0x20], edx; pop rbx; ret; 
0x00000000095936: mov [rax+0x20], rdx; add rsp, 0x8; ret; 
0x0000000008cdef: mov [rax+0x20], rdx; pop rbx; ret; 
0x00000000086431: mov [rax+0x28], edx; mov [rax], dil; mov eax, r9d; ret; 
0x000000000a8a95: mov [rax+0x2], dl; ret; 
0x00000000086e91: mov [rax+0x40], ecx; ret; 
0x00000000086ecf: mov [rax+0x40], edx; movups [rax], xmm0; ret; 
0x00000000087f8d: mov [rax+0x40], esi; mov [rax], rdx; xor eax, eax; ret; 
0x00000000086e90: mov [rax+0x40], rcx; ret; 
0x00000000086ece: mov [rax+0x40], rdx; movups [rax], xmm0; ret; 
0x00000000087f8c: mov [rax+0x40], rsi; mov [rax], rdx; xor eax, eax; ret; 
0x0000000014fe41: mov [rax+0x48], eax; mov eax, 0x1; ret; 
0x000000000a8ab3: mov [rax+0x4], dl; ret; 
0x000000000a8adb: mov [rax+0x4], dx; movzx edx, byte ptr [rsp+0xe]; mov [rax+0x6], dl; ret; 
0x000000000a8acb: mov [rax+0x4], dx; ret; 
0x0000000012edf9: mov [rax+0x4], eax; test eax, eax; jne short 0x000000000012eda9; mov rax, rdi; ret; 
0x000000000a8adc: mov [rax+0x4], edx; movzx edx, byte ptr [rsp+0xe]; mov [rax+0x6], dl; ret; 
0x000000000a8acc: mov [rax+0x4], edx; ret; 
0x0000000014fe9e: mov [rax+0x54], eax; mov eax, 0x1; ret; 
0x0000000014fe6e: mov [rax+0x58], eax; mov eax, 0x1; ret; 
0x000000000a8ae4: mov [rax+0x6], dl; ret; 
0x000000000ded03: mov [rax+0x6], edx; add [rax-0x77], cl; ret; 
0x0000000008cde8: mov [rax+0x8], edx; mov rdx, [rax+0x18]; mov [rax+0x20], rdx; pop rbx; ret; 
0x0000000008cde7: mov [rax+0x8], rdx; mov rdx, [rax+0x18]; mov [rax+0x20], rdx; pop rbx; ret; 
0x0000000014d061: mov [rax+0xa8], eax; mov eax, 0x1; ret; 
0x0000000014d0be: mov [rax+0xb4], eax; mov eax, 0x1; ret; 
0x0000000014d08e: mov [rax+0xb8], eax; mov eax, 0x1; ret; 
0x0000000004514a: mov [rax+0xe], dh; mov rsi, [rsp+0x10]; mov rdx, rbp; mov rdi, r12; call rbx; 
0x00000000045149: mov [rax+0xe], sil; mov rsi, [rsp+0x10]; mov rdx, rbp; mov rdi, r12; call rbx; 
0x000000000ef993: mov [rax+rax], eax; add [rax-0x7d], cl; ret; 
0x000000000995cc: mov [rax+rbp], cl; add rsp, 0x10; mov rax, r8; pop rbp; ret; 
0x000000000993d5: mov [rax+rbx], cl; add rsp, 0x10; mov rax, r8; pop rbx; ret; 
0x0000000006b1e0: mov [rax+rbx], cs; add [rbx-0x5ff7b], cl; jmp qword ptr [rcx+rcx*4+0x2]; 
0x00000000157477: mov [rax-0x4], edx; mov [rdi+0x18], rax; mov eax, r8d; ret; 
0x00000000026713: mov [rax-0x7d], cl; ret; 
0x000000001402a4: mov [rax], ah; out dx, al; jmp qword ptr [rsi+0xf]; 
0x000000000d0b84: mov [rax], al; add [rax], al; call rbp; 
0x0000000014d001: mov [rax], al; add [rax], al; mov [rdx+0x6c], ax; mov eax, 0x1; ret; 
0x00000000063045: mov [rax], al; add [rax], al; mov [rdx+0x8], rcx; mov dword ptr [rdx+0x4], 0x1; ret; 
0x00000000043185: mov [rax], al; add [rax], al; mov r10d, 0x8; mov eax, 0xd; syscall; 
0x0000000015098b: mov [rax], al; add [rax], al; mov rdi, r15; call qword ptr [rax+0x28]; 
0x0000000011cb4f: mov [rax], al; add [rax], al; pop rbx; pop rbp; ret; 
0x0000000011c4ec: mov [rax], al; add [rax], al; syscall; 
0x00000000055098: mov [rax], al; add [rax], al; xor eax, eax; ret; 
0x00000000086435: mov [rax], bh; mov eax, r9d; ret; 
0x000000000639ff: mov [rax], bpl; pop rbx; pop rbp; pop r12; ret; 
0x00000000063a00: mov [rax], ch; pop rbx; pop rbp; pop r12; ret; 
0x000000000b6642: mov [rax], cl; mov rax, rdi; ret; 
0x000000000b7710: mov [rax], cs; add [rax], al; ret; 
0x00000000086434: mov [rax], dil; mov eax, r9d; ret; 
0x000000000a8a8d: mov [rax], dx; movzx edx, byte ptr [rsp-0x6]; mov [rax+0x2], dl; ret; 
0x00000000052228: mov [rax], eax; add [rax], al; add rsp, 0x10; pop rbx; ret; 
0x000000000cf023: mov [rax], eax; add [rax], al; ret; 
0x0000000010da35: mov [rax], eax; add [rax], al; syscall; 
0x00000000057c5b: mov [rax], eax; mov eax, 0x1; mov dword ptr [rdx], 0xffffc002; ret; 
0x00000000121ccd: mov [rax], eax; mov qword ptr [rip+0xca686], 0x0; ret; 
0x00000000121c4d: mov [rax], eax; mov qword ptr [rip+0xca706], 0x0; ret; 
0x0000000006bbd3: mov [rax], ebp; pop rbx; pop rbp; pop r12; ret; 
0x0000000004723c: mov [rax], ebx; call qword ptr [rbp+0xf08]; 
0x0000000013c559: mov [rax], ebx; pop rbx; mov [r9], rcx; ret; 
0x00000000131757: mov [rax], ecx; add rsp, 0x18; ret; 
0x000000000dfc61: mov [rax], ecx; add rsp, 0x8; ret; 
0x000000000855be: mov [rax], ecx; mov eax, [rdx]; ret; 
0x000000000a8aa0: mov [rax], ecx; ret; 
0x00000000116d85: mov [rax], edi; mov eax, 0xffffffff; ret; 
0x000000000feccf: mov [rax], edi; mov rax, r8; ret; 
0x0000000009a100: mov [rax], edi; ret; 
0x0000000011eff7: mov [rax], edx; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000013c26d: mov [rax], edx; lea eax, [r9+r8+0x2]; pop rbx; ret; 
0x0000000013c492: mov [rax], edx; mov [r9], r10; ret; 
0x00000000086e8a: mov [rax], edx; mov [rax+0x10], rdx; mov [rax+0x40], rcx; ret; 
0x00000000047ccd: mov [rax], edx; mov [rsi], edx; mov eax, r8d; ret; 
0x000000000a8a8e: mov [rax], edx; movzx edx, byte ptr [rsp-0x6]; mov [rax+0x2], dl; ret; 
0x000000000a8aac: mov [rax], edx; movzx edx, byte ptr [rsp-0xc]; mov [rax+0x4], dl; ret; 
0x000000000a8ac4: mov [rax], edx; movzx edx, word ptr [rsp-0x14]; mov [rax+0x4], dx; ret; 
0x00000000033d48: mov [rax], edx; ret; 
0x00000000087f58: mov [rax], edx; xor eax, eax; ret; 
0x000000001141d5: mov [rax], es; add [rax], al; syscall; 
0x00000000121c94: mov [rax], esi; mov qword ptr [rax+0x8], 0x1; mov qword ptr [rax+0x10], 0x0; mov qword ptr [rip+0xca6af], 0x0; ret; 
0x0000000009a0f6: mov [rax], esi; mov rax, [rip+0x151de1]; mov [rax], rdi; ret; 
0x000000000961fc: mov [rax], esi; mov rax, [rip+0x155cdb]; mov [rax], rdx; ret; 
0x000000000a8a81: mov [rax], esi; ret; 
0x000000000531da: mov [rax], fs; add [rax], al; add [rcx+0x1], cl; ret; 
0x0000000013c26c: mov [rax], r10; lea eax, [r9+r8+0x2]; pop rbx; ret; 
0x0000000004723b: mov [rax], rbx; call qword ptr [rbp+0xf08]; 
0x000000000855bd: mov [rax], rcx; mov eax, [rdx]; ret; 
0x000000000fecce: mov [rax], rdi; mov rax, r8; ret; 
0x0000000009a0ff: mov [rax], rdi; ret; 
0x0000000011eff6: mov [rax], rdx; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000086e89: mov [rax], rdx; mov [rax+0x10], rdx; mov [rax+0x40], rcx; ret; 
0x00000000033d47: mov [rax], rdx; ret; 
0x00000000087f57: mov [rax], rdx; xor eax, eax; ret; 
0x00000000121c93: mov [rax], rsi; mov qword ptr [rax+0x8], 0x1; mov qword ptr [rax+0x10], 0x0; mov qword ptr [rip+0xca6af], 0x0; ret; 
0x0000000009a0f5: mov [rax], rsi; mov rax, [rip+0x151de1]; mov [rax], rdi; ret; 
0x000000000961fb: mov [rax], rsi; mov rax, [rip+0x155cdb]; mov [rax], rdx; ret; 
0x000000000a8a80: mov [rax], si; ret; 
0x000000000e31b8: mov [rax], ss; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x0000000015f52f: mov [rbp+0x18], eax; lea rdi, [r15+0x908]; call qword ptr [r15+0xf10]; 
0x000000000f24c0: mov [rbp+0x30], eax; pop rbx; pop rbp; pop r12; ret; 
0x000000000f23f8: mov [rbp+0x30], edi; pop rbx; pop rbp; pop r12; ret; 
0x000000000f24bf: mov [rbp+0x30], r8d; pop rbx; pop rbp; pop r12; ret; 
0x00000000096188: mov [rbp+0x31], eax; sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; syscall; 
0x000000000875c1: mov [rbp+0x74], eax; mov eax, 0x1; pop rbp; pop r12; ret; 
0x0000000007d670: mov [rbp-0x4d0], edx; call qword ptr [rax+0x38]; 
0x0000000007d66f: mov [rbp-0x4d0], rdx; call qword ptr [rax+0x38]; 
0x0000000007d858: mov [rbp-0x4e0], ecx; call qword ptr [r8+0x38]; 
0x0000000007dead: mov [rbp-0x4e0], ecx; call qword ptr [rbx+0x38]; 
0x0000000007e848: mov [rbp-0x4e0], ecx; mov rdx, rbx; mov rsi, r10; mov rdi, r12; call qword ptr [rax+0x38]; 
0x00000000077123: mov [rbp-0x4e0], edx; call qword ptr [rcx+0x38]; 
0x00000000077122: mov [rbp-0x4e0], r10; call qword ptr [rcx+0x38]; 
0x0000000007d857: mov [rbp-0x4e0], r9; call qword ptr [r8+0x38]; 
0x0000000007deac: mov [rbp-0x4e0], r9; call qword ptr [rbx+0x38]; 
0x0000000007e847: mov [rbp-0x4e0], r9; mov rdx, rbx; mov rsi, r10; mov rdi, r12; call qword ptr [rax+0x38]; 
0x00000000076f3c: mov [rbp-0x4f0], edx; call qword ptr [rax+0x38]; 
0x000000000777d4: mov [rbp-0x4f0], edx; call qword ptr [rbx+0x38]; 
0x00000000076f3b: mov [rbp-0x4f0], r10; call qword ptr [rax+0x38]; 
0x000000000777d3: mov [rbp-0x4f0], r10; call qword ptr [rbx+0x38]; 
0x00000000078135: mov [rbp-0x4f8], ecx; mov [rbp-0x4f0], r10; call qword ptr [rax+0x38]; 
0x00000000078134: mov [rbp-0x4f8], r9d; mov [rbp-0x4f0], r10; call qword ptr [rax+0x38]; 
0x000000000777cd: mov [rbp-0x500], ecx; mov [rbp-0x4f0], r10; call qword ptr [rbx+0x38]; 
0x0000000007eb40: mov [rbp-0x500], edx; call qword ptr [rax+0x38]; 
0x00000000076b0f: mov [rbp-0x500], esi; jmp rax; 
0x0000000007eb3f: mov [rbp-0x500], r10; call qword ptr [rax+0x38]; 
0x000000000777cc: mov [rbp-0x500], r9d; mov [rbp-0x4f0], r10; call qword ptr [rbx+0x38]; 
0x00000000076b0e: mov [rbp-0x500], rsi; jmp rax; 
0x000000000783a4: mov [rbp-0x508], ebx; call qword ptr [rax+0x38]; 
0x0000000007eb39: mov [rbp-0x508], ecx; mov [rbp-0x500], r10; call qword ptr [rax+0x38]; 
0x000000000783a3: mov [rbp-0x508], r11; call qword ptr [rax+0x38]; 
0x0000000007eb38: mov [rbp-0x508], r9; mov [rbp-0x500], r10; call qword ptr [rax+0x38]; 
0x0000000007839d: mov [rbp-0x510], edx; mov [rbp-0x508], r11; call qword ptr [rax+0x38]; 
0x0000000007839c: mov [rbp-0x510], r10; mov [rbp-0x508], r11; call qword ptr [rax+0x38]; 
0x0000000012c57f: mov [rbp-0x68], eax; movdqu xmm7, [rbx-0x18]; mov dword ptr [rbp-0x80], 0x0; movups [rbp-0x78], xmm7; call rcx; 
0x0000000012c57e: mov [rbp-0x68], rax; movdqu xmm7, [rbx-0x18]; mov dword ptr [rbp-0x80], 0x0; movups [rbp-0x78], xmm7; call rcx; 
0x00000000074f77: mov [rbp-0x7400000f], ds; test [rax], edx; idiv edi; inc dword ptr [rcx]; ret; 
0x00000000184a56: mov [rbp-0x7d000000], ss; rol byte ptr [rax+0x48], 0x1; clc; vzeroupper; ret; 
0x00000000042866: mov [rbp-0x7f000000], es; sti; push rax; ret; 
0x0000000012c310: mov [rbp-0x80], eax; movups [rbp-0x78], xmm2; call rcx; 
0x0000000012c4b8: mov [rbp-0x80], eax; movups [rbp-0x78], xmm3; call r9; 
0x0000000012c3ff: mov [rbp-0x80], edx; mov rdx, r13; movups [rbp-0x78], xmm4; call rax; 
0x0000000012c90f: mov [rbp-0x80], edx; mov rdx, r13; movups [rbp-0x78], xmm6; call rax; 
0x0000000012c9dd: mov [rbp-0x80], edx; mov rdx, r13; movups [rbp-0x78], xmm7; call rax; 
0x0000000012c39a: mov [rbp-0x80], edx; mov rdx, r14; movups [rbp-0x78], xmm5; call rax; 
0x0000000012c6e7: mov [rbp-0x80], edx; mov rdx, r15; movups [rbp-0x78], xmm1; call rax; 
0x00000000198384: mov [rbp-0x80], esp; mov rax, [rax+rbx*8]; test rax, rax; je short 0x0000000000198392; call rax; 
0x00000000198383: mov [rbp-0x80], r12; mov rax, [rax+rbx*8]; test rax, rax; je short 0x0000000000198392; call rax; 
0x000000001215b0: mov [rbp-0x830], eax; mov eax, r14d; syscall; 
0x000000001215af: mov [rbp-0x830], rax; mov eax, r14d; syscall; 
0x00000000075b7a: mov [rbp-0x8b8], ecx; call qword ptr [r11+rax*8-0x40]; 
0x00000000075b79: mov [rbp-0x8b8], rcx; call qword ptr [r11+rax*8-0x40]; 
0x0000000007c5c7: mov [rbp-0x8d0], ecx; call qword ptr [r11+rax*8-0x40]; 
0x0000000007c5c6: mov [rbp-0x8d0], rcx; call qword ptr [r11+rax*8-0x40]; 
0x00000000075b73: mov [rbp-0x8e0], edx; mov [rbp-0x8b8], rcx; call qword ptr [r11+rax*8-0x40]; 
0x00000000075b72: mov [rbp-0x8e0], rdx; mov [rbp-0x8b8], rcx; call qword ptr [r11+rax*8-0x40]; 
0x0000000007bbbe: mov [rbp-0x8f0], eax; mov rdx, r8; mov rsi, r12; mov rdi, r13; call qword ptr [r15+0x38]; 
0x0000000007a93e: mov [rbp-0x8f0], ecx; mov rdx, r9; mov rsi, r12; mov rdi, r13; call qword ptr [rax+0x38]; 
0x00000000075b6c: mov [rbp-0x8f0], edx; mov [rbp-0x8e0], rdx; mov [rbp-0x8b8], rcx; call qword ptr [r11+rax*8-0x40]; 
0x00000000075b6b: mov [rbp-0x8f0], r10; mov [rbp-0x8e0], rdx; mov [rbp-0x8b8], rcx; call qword ptr [r11+rax*8-0x40]; 
0x0000000007bbbd: mov [rbp-0x8f0], r8; mov rdx, r8; mov rsi, r12; mov rdi, r13; call qword ptr [r15+0x38]; 
0x0000000007a93d: mov [rbp-0x8f0], r9; mov rdx, r9; mov rsi, r12; mov rdi, r13; call qword ptr [rax+0x38]; 
0x0000000007c1e7: mov [rbp-0x900], ecx; mov rdx, rcx; mov rsi, r12; mov rdi, r13; call qword ptr [r15+0x38]; 
0x0000000007c5c0: mov [rbp-0x900], edx; mov [rbp-0x8d0], rcx; call qword ptr [r11+rax*8-0x40]; 
0x0000000007c1e6: mov [rbp-0x900], rcx; mov rdx, rcx; mov rsi, r12; mov rdi, r13; call qword ptr [r15+0x38]; 
0x0000000007c5bf: mov [rbp-0x900], rdx; mov [rbp-0x8d0], rcx; call qword ptr [r11+rax*8-0x40]; 
0x0000000007c5b9: mov [rbp-0x908], edx; mov [rbp-0x900], rdx; mov [rbp-0x8d0], rcx; call qword ptr [r11+rax*8-0x40]; 
0x0000000007c5b8: mov [rbp-0x908], r10; mov [rbp-0x900], rdx; mov [rbp-0x8d0], rcx; call qword ptr [r11+rax*8-0x40]; 
0x0000000007b7cf: mov [rbp-0x930], ecx; mov rdx, rcx; mov rsi, r12; mov rdi, r13; call qword ptr [rax+0x38]; 
0x0000000007b7ce: mov [rbp-0x930], rcx; mov rdx, rcx; mov rsi, r12; mov rdi, r13; call qword ptr [rax+0x38]; 
0x00000000074a02: mov [rbp-0x948], ebx; call rax; 
0x00000000074a01: mov [rbp-0x948], r11d; call rax; 
0x000000000749fb: mov [rbp-0x954], ecx; mov [rbp-0x948], r11d; call rax; 
0x000000000749fa: mov [rbp-0x954], r9d; mov [rbp-0x948], r11d; call rax; 
0x0000000007b4da: mov [rbp-0x960], cl; call rax; 
0x0000000007b4d9: mov [rbp-0x960], r9b; call rax; 
0x0000000007b4d3: mov [rbp-0x978], edx; mov [rbp-0x960], r9b; call rax; 
0x0000000007b4d2: mov [rbp-0x978], r10d; mov [rbp-0x960], r9b; call rax; 
0x0000000005d420: mov [rbp-0xe8], eax; call rax; 
0x0000000005d41f: mov [rbp-0xe8], r8; call rax; 
0x0000000009cde1: mov [rbp], eax; test rax, rax; je 0x000000000009cec0; call rax; 
0x0000000013a242: mov [rbp], esp; pop rbx; pop rbp; pop r12; ret; 
0x0000000013a241: mov [rbp], r12d; pop rbx; pop rbp; pop r12; ret; 
0x0000000009cde0: mov [rbp], rax; test rax, rax; je 0x000000000009cec0; call rax; 
0x000000000951d0: mov [rbx+0x10], eax; mov dword ptr [r11+0x14], 0x0; ret; 
0x0000000013de94: mov [rbx+0x10], eax; mov eax, 0x14; add edx, 0x1; syscall; 
0x0000000008ce01: mov [rbx+0x10], eax; mov rax, [rbx+0x20]; mov [rbx+0x28], rax; pop rbx; ret; 
0x0000000015f82a: mov [rbx+0x10], eax; pop rax; pop rdx; pop rbx; ret; 
0x00000000094d37: mov [rbx+0x10], eax; xor eax, eax; pop rbx; ret; 
0x00000000127a73: mov [rbx+0x10], ebp; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000013de93: mov [rbx+0x10], rax; mov eax, 0x14; add edx, 0x1; syscall; 
0x0000000008ce00: mov [rbx+0x10], rax; mov rax, [rbx+0x20]; mov [rbx+0x28], rax; pop rbx; ret; 
0x0000000015f829: mov [rbx+0x10], rax; pop rax; pop rdx; pop rbx; ret; 
0x00000000094d36: mov [rbx+0x10], rax; xor eax, eax; pop rbx; ret; 
0x00000000127a72: mov [rbx+0x10], rbp; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000147716: mov [rbx+0x18], eax; mov rax, [rbp+0x8]; call qword ptr [rax+0x28]; 
0x0000000015f7e2: mov [rbx+0x18], eax; pop rax; pop rdx; pop rbx; ret; 
0x00000000127ac3: mov [rbx+0x18], ebp; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000047237: mov [rbx+0x18], edx; mov fs:[rax], rbx; call qword ptr [rbp+0xf08]; 
0x00000000147715: mov [rbx+0x18], rax; mov rax, [rbp+0x8]; call qword ptr [rax+0x28]; 
0x0000000015f7e1: mov [rbx+0x18], rax; pop rax; pop rdx; pop rbx; ret; 
0x00000000127ac2: mov [rbx+0x18], rbp; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000047236: mov [rbx+0x18], rdx; mov fs:[rax], rbx; call qword ptr [rbp+0xf08]; 
0x00000000149ce8: mov [rbx+0x20], esi; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000149ce7: mov [rbx+0x20], rsi; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000000951cb: mov [rbx+0x24], ebp; pop rbp; mov [r11+0x10], eax; mov dword ptr [r11+0x14], 0x0; ret; 
0x0000000008ce09: mov [rbx+0x28], eax; pop rbx; ret; 
0x0000000008ce08: mov [rbx+0x28], rax; pop rbx; ret; 
0x0000000011d7fd: mov [rbx+0x38], edx; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000011d7fc: mov [rbx+0x38], rdx; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000042c8f: mov [rbx+0x40], esi; pop rbx; ret; 
0x00000000042c6c: mov [rbx+0x40], esi; xor eax, eax; pop rbx; ret; 
0x0000000014ff69: mov [rbx+0x48], ebp; bswap ebp; call qword ptr [rax+0x18]; 
0x0000000009e5a8: mov [rbx+0x48], edi; movsxd rsi, esi; movups [rbx+0x38], xmm0; mov [rbx], rsi; call rcx; 
0x0000000009e5a7: mov [rbx+0x48], rdi; movsxd rsi, esi; movups [rbx+0x38], xmm0; mov [rbx], rsi; call rcx; 
0x0000000010c403: mov [rbx+0x4], edx; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000010c52b: mov [rbx+0x4], edx; pop rbx; pop rbp; pop r12; ret; 
0x00000000087e7e: mov [rbx+0x60], ebp; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000093498: mov [rbx+0x60], ebp; pop rbx; pop rbp; pop r12; ret; 
0x00000000087e7d: mov [rbx+0x60], rbp; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000093497: mov [rbx+0x60], rbp; pop rbx; pop rbp; pop r12; ret; 
0x00000000086f2a: mov [rbx+0x74], eax; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000008752e: mov [rbx+0x74], edx; pop rbx; pop rbp; pop r12; ret; 
0x0000000002fdd7: mov [rbx+0x8], eax; cmp eax, 0xfffffffd; je short 0x000000000002fdf8; pop rbx; ret; 
0x00000000127a23: mov [rbx+0x8], ebp; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000127a22: mov [rbx+0x8], rbp; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000008e51f: mov [rbx+0x90], eax; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000008e51e: mov [rbx+0x90], rax; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000014d19e: mov [rbx+0xa8], ebp; bswap ebp; mov ebp, ebp; call qword ptr [rax+0x18]; 
0x000000001517e4: mov [rbx+0xc], eax; mov rax, [rbx]; mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x20]; 
0x0000000008e5df: mov [rbx+0xd8], ecx; lea rcx, [rip+0x15a8b4]; mov [rdx+0xe0], rcx; pop rbx; ret; 
0x0000000008e5de: mov [rbx+0xd8], rcx; lea rcx, [rip+0x15a8b4]; mov [rdx+0xe0], rcx; pop rbx; ret; 
0x000000001152e3: mov [rbx+0xd], ebp; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x2]; mov eax, 0xffffffff; ret; 
0x00000000030c49: mov [rbx+r12*8], r13; mov rax, [rax+r12*8]; test rax, rax; je short 0x0000000000030c58; call rax; 
0x00000000030ec6: mov [rbx+r15*8], rdx; mov rdx, [rax+r15*8]; test rdx, rdx; je short 0x0000000000030ed5; call rdx; 
0x00000000030ec7: mov [rbx+rdi*8], edx; mov rdx, [rax+r15*8]; test rdx, rdx; je short 0x0000000000030ed5; call rdx; 
0x00000000091e92: mov [rbx], eax; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000015fd15: mov [rbx], eax; pop rax; pop rdx; pop rbx; ret; 
0x0000000015318d: mov [rbx], eax; pop rbx; mov dword ptr [rip+0x9dc86], 0x2; ret; 
0x0000000009d13d: mov [rbx], eax; pop rbx; pop rbp; pop r12; ret; 
0x000000001531e6: mov [rbx], eax; pop rbx; ret; 
0x0000000011979c: mov [rbx], eax; pop rbx; setne al; movzx eax, al; ret; 
0x0000000009cf1a: mov [rbx], eax; test rax, rax; je 0x000000000009cff0; call rax; 
0x0000000014762c: mov [rbx], eax; xor eax, eax; call qword ptr [rbx+0x18]; 
0x0000000013a872: mov [rbx], ebp; mov eax, 0x3; mov edi, [rbp-0x60]; syscall; 
0x00000000030c4a: mov [rbx], ebp; mov rax, [rax+r12*8]; test rax, rax; je short 0x0000000000030c58; call rax; 
0x00000000047b24: mov [rbx], ebx; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000137b17: mov [rbx], ecx; add [rdi], cl; add eax, 0xffff0fe9; jmp qword ptr [rsi+0x66]; 
0x00000000087661: mov [rbx], ecx; pop rbx; ret; 
0x0000000009e4dc: mov [rbx], edi; call rcx; 
0x000000000bcd43: mov [rbx], edx; add [rax], eax; cmove rax, rdx; ret; 
0x000000000472e7: mov [rbx], edx; mov rdi, [rbp+0x8]; call rax; 
0x00000000160a28: mov [rbx], edx; pop rbx; ret; 
0x0000000009e5b3: mov [rbx], esi; call rcx; 
0x00000000082c36: mov [rbx], esi; pop rbx; pop rbp; pop r12; ret; 
0x0000000014197c: mov [rbx], esp; pop rbx; pop rbp; pop r12; ret; 
0x0000000014197b: mov [rbx], r12d; pop rbx; pop rbp; pop r12; ret; 
0x0000000013a871: mov [rbx], r13d; mov eax, 0x3; mov edi, [rbp-0x60]; syscall; 
0x0000000015fd14: mov [rbx], rax; pop rax; pop rdx; pop rbx; ret; 
0x0000000015318c: mov [rbx], rax; pop rbx; mov dword ptr [rip+0x9dc86], 0x2; ret; 
0x0000000009d13c: mov [rbx], rax; pop rbx; pop rbp; pop r12; ret; 
0x000000001531e5: mov [rbx], rax; pop rbx; ret; 
0x0000000011979b: mov [rbx], rax; pop rbx; setne al; movzx eax, al; ret; 
0x0000000009cf19: mov [rbx], rax; test rax, rax; je 0x000000000009cff0; call rax; 
0x0000000014762b: mov [rbx], rax; xor eax, eax; call qword ptr [rbx+0x18]; 
0x0000000009e4db: mov [rbx], rdi; call rcx; 
0x000000000472e6: mov [rbx], rdx; mov rdi, [rbp+0x8]; call rax; 
0x0000000009e5b2: mov [rbx], rsi; call rcx; 
0x000000001786a3: mov [rcx+0x2], dl; ret; 
0x000000001786e2: mov [rcx+0x3], edx; ret; 
0x0000000005b4fa: mov [rcx+0x3a8], edi; mov rsp, rdx; ret; 
0x000000001786c2: mov [rcx+0x4], dl; ret; 
0x000000001786d2: mov [rcx+0x4], dx; ret; 
0x000000001786d3: mov [rcx+0x4], edx; ret; 
0x00000000178744: mov [rcx+0x5], edx; ret; 
0x00000000178743: mov [rcx+0x5], rdx; ret; 
0x00000000178754: mov [rcx+0x6], edx; ret; 
0x00000000178753: mov [rcx+0x6], rdx; ret; 
0x00000000178723: mov [rcx+0x7], edx; ret; 
0x00000000178763: mov [rcx+0x7], rdx; ret; 
0x00000000178703: mov [rcx+0x8], dl; ret; 
0x00000000178713: mov [rcx+0x8], dx; ret; 
0x00000000178714: mov [rcx+0x8], edx; ret; 
0x00000000178773: mov [rcx+0x8], rdx; ret; 
0x000000000a8984: mov [rcx+rax-0x37], ecx; notrack jmp rcx; 
0x0000000009f730: mov [rcx+rax], es; cmovne rax, rdx; ret; 
0x0000000005587c: mov [rcx+rcx*8], eax; xor eax, eax; ret; 
0x000000000434e3: mov [rcx-0x2708ffe6], ecx; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000120ce3: mov [rcx-0x2708fff4], esi; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000018fa6b: mov [rcx-0x2], ecx; ret; 
0x0000000018fa56: mov [rcx-0x4], ecx; ret; 
0x0000000018fa45: mov [rcx-0x8], ecx; ret; 
0x0000000002415e: mov [rcx], cl; add [rax], al; cmp r15, rdx; je short 0x0000000000024177; call rax; 
0x000000000e865a: mov [rcx], cl; add al, [rax]; add [rax-0x7d], cl; ret; 
0x00000000178680: mov [rcx], dl; ret; 
0x000000001786a0: mov [rcx], dx; mov [rcx+0x2], dl; ret; 
0x00000000178690: mov [rcx], dx; ret; 
0x0000000004341e: mov [rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000860f7: mov [rcx], eax; ret; 
0x00000000149d06: mov [rcx], eax; sub rdx, rsi; mov rbp, rdx; call qword ptr [rbx+0x10]; 
0x0000000008aa4a: mov [rcx], eax; xor eax, eax; pop rbx; ret; 
0x000000000dfe2c: mov [rcx], ebx; add rsp, 0x20; mov eax, r8d; pop rbx; ret; 
0x000000000df509: mov [rcx], ebx; mov rax, r8; pop rbx; ret; 
0x0000000013c55d: mov [rcx], ecx; ret; 
0x0000000013c53b: mov [rcx], edi; ret; 
0x000000001786a1: mov [rcx], edx; mov [rcx+0x2], dl; ret; 
0x000000001786e0: mov [rcx], edx; mov [rcx+0x3], edx; ret; 
0x000000001786c0: mov [rcx], edx; mov [rcx+0x4], dl; ret; 
0x000000001786d0: mov [rcx], edx; mov [rcx+0x4], dx; ret; 
0x00000000178741: mov [rcx], edx; mov [rcx+0x5], rdx; ret; 
0x00000000178751: mov [rcx], edx; mov [rcx+0x6], rdx; ret; 
0x00000000178721: mov [rcx], edx; mov [rcx+0x7], edx; ret; 
0x00000000178761: mov [rcx], edx; mov [rcx+0x7], rdx; ret; 
0x00000000178701: mov [rcx], edx; mov [rcx+0x8], dl; ret; 
0x00000000178711: mov [rcx], edx; mov [rcx+0x8], dx; ret; 
0x00000000178731: mov [rcx], edx; mov [rcx+0x8], edx; ret; 
0x00000000178771: mov [rcx], edx; mov [rcx+0x8], rdx; ret; 
0x000000001492d0: mov [rcx], edx; mov edx, eax; call qword ptr [rbx+0x10]; 
0x0000000013c495: mov [rcx], edx; ret; 
0x00000000033c62: mov [rcx], esi; cmp rax, rdx; mov rdx, 0xffffffffffffffff; cmove rax, rdx; ret; 
0x0000000008aa49: mov [rcx], rax; xor eax, eax; pop rbx; ret; 
0x00000000178740: mov [rcx], rdx; mov [rcx+0x5], rdx; ret; 
0x00000000178750: mov [rcx], rdx; mov [rcx+0x6], rdx; ret; 
0x00000000178720: mov [rcx], rdx; mov [rcx+0x7], edx; ret; 
0x00000000178760: mov [rcx], rdx; mov [rcx+0x7], rdx; ret; 
0x00000000178700: mov [rcx], rdx; mov [rcx+0x8], dl; ret; 
0x00000000178710: mov [rcx], rdx; mov [rcx+0x8], dx; ret; 
0x00000000178730: mov [rcx], rdx; mov [rcx+0x8], edx; ret; 
0x00000000178770: mov [rcx], rdx; mov [rcx+0x8], rdx; ret; 
0x000000001786f0: mov [rcx], rdx; ret; 
0x00000000033c61: mov [rcx], rsi; cmp rax, rdx; mov rdx, 0xffffffffffffffff; cmove rax, rdx; ret; 
0x0000000010d146: mov [rdi+0x108], eax; xor eax, eax; ret; 
0x000000000bb0ea: mov [rdi+0x10], ch; ret; 
0x000000000b949b: mov [rdi+0x10], cl; lea rax, [rdi+0x11]; ret; 
0x000000000b7c7b: mov [rdi+0x10], cl; ret; 
0x000000000bb0fb: mov [rdi+0x10], cl; xor ch, ch; mov [rdi+0x11], ch; ret; 
0x000000000b864c: mov [rdi+0x10], cx; lea rax, [rdi+0x11]; ret; 
0x000000000b94bc: mov [rdi+0x10], cx; lea rax, [rdi+0x12]; ret; 
0x000000000b6f9c: mov [rdi+0x10], cx; ret; 
0x000000000b790c: mov [rdi+0x10], cx; sub r8, 0x12; lea rdi, [rdi+0x12]; jne 0x00000000000b7fa0; ret; 
0x000000000bb11c: mov [rdi+0x10], cx; xor ch, ch; mov [rdi+0x12], ch; ret; 
0x000000000b8638: mov [rdi+0x10], dh; lea rax, [rdi+0x10]; ret; 
0x000000000b6f88: mov [rdi+0x10], dh; ret; 
0x000000000b78e8: mov [rdi+0x10], dh; sub r8, 0x11; lea rdi, [rdi+0x11]; jne 0x00000000000b7fa0; ret; 
0x00000000121c70: mov [rdi+0x10], eax; jb short 0x0000000000121c88; mov qword ptr [rip+0xca6e0], 0x2; ret; 
0x000000000b864d: mov [rdi+0x10], ecx; lea rax, [rdi+0x11]; ret; 
0x000000000b94bd: mov [rdi+0x10], ecx; lea rax, [rdi+0x12]; ret; 
0x000000000b868b: mov [rdi+0x10], ecx; lea rax, [rdi+0x13]; ret; 
0x000000000b94fb: mov [rdi+0x10], ecx; lea rax, [rdi+0x14]; ret; 
0x000000000b870d: mov [rdi+0x10], ecx; lea rax, [rdi+0x17]; ret; 
0x000000000b957d: mov [rdi+0x10], ecx; lea rax, [rdi+0x18]; ret; 
0x000000000b86ab: mov [rdi+0x10], ecx; mov [rdi+0x14], dh; lea rax, [rdi+0x14]; ret; 
0x000000000b6fdb: mov [rdi+0x10], ecx; mov [rdi+0x14], dh; ret; 
0x000000000b951e: mov [rdi+0x10], ecx; mov [rdi+0x14], dl; lea rax, [rdi+0x15]; ret; 
0x000000000b7cce: mov [rdi+0x10], ecx; mov [rdi+0x14], dl; ret; 
0x000000000bb17e: mov [rdi+0x10], ecx; mov [rdi+0x14], dl; xor ch, ch; mov [rdi+0x15], ch; ret; 
0x000000000b872d: mov [rdi+0x10], ecx; mov [rdi+0x18], dh; lea rax, [rdi+0x18]; ret; 
0x000000000b705d: mov [rdi+0x10], ecx; mov [rdi+0x18], dh; ret; 
0x0000000005650f: mov [rdi+0x10], ecx; ret; 
0x000000000b790d: mov [rdi+0x10], ecx; sub r8, 0x12; lea rdi, [rdi+0x12]; jne 0x00000000000b7fa0; ret; 
0x000000000b794b: mov [rdi+0x10], ecx; sub r8, 0x14; lea rdi, [rdi+0x14]; jne 0x00000000000b7fa0; ret; 
0x000000000b79cd: mov [rdi+0x10], ecx; sub r8, 0x18; lea rdi, [rdi+0x18]; jne 0x00000000000b7fa0; ret; 
0x000000000bb11d: mov [rdi+0x10], ecx; xor ch, ch; mov [rdi+0x12], ch; ret; 
0x000000000bb15b: mov [rdi+0x10], ecx; xor ch, ch; mov [rdi+0x14], ch; ret; 
0x000000000bb1dd: mov [rdi+0x10], ecx; xor ch, ch; mov [rdi+0x18], ch; ret; 
0x000000000b8770: mov [rdi+0x10], edx; mov [rdi+0x17], ecx; lea rax, [rdi+0x1a]; ret; 
0x000000000b95e0: mov [rdi+0x10], edx; mov [rdi+0x17], ecx; lea rax, [rdi+0x1b]; ret; 
0x000000000b70a0: mov [rdi+0x10], edx; mov [rdi+0x17], ecx; ret; 
0x000000000bb240: mov [rdi+0x10], edx; mov [rdi+0x17], ecx; xor ch, ch; mov [rdi+0x1b], ch; ret; 
0x000000000b95a0: mov [rdi+0x10], edx; mov [rdi+0x18], cl; lea rax, [rdi+0x19]; ret; 
0x000000000b7d50: mov [rdi+0x10], edx; mov [rdi+0x18], cl; ret; 
0x000000000bb200: mov [rdi+0x10], edx; mov [rdi+0x18], cl; xor ch, ch; mov [rdi+0x19], ch; ret; 
0x000000000b8751: mov [rdi+0x10], edx; mov [rdi+0x18], cx; lea rax, [rdi+0x19]; ret; 
0x000000000b95c1: mov [rdi+0x10], edx; mov [rdi+0x18], cx; lea rax, [rdi+0x1a]; ret; 
0x000000000b7081: mov [rdi+0x10], edx; mov [rdi+0x18], cx; ret; 
0x000000000bb221: mov [rdi+0x10], edx; mov [rdi+0x18], cx; xor ch, ch; mov [rdi+0x1a], ch; ret; 
0x000000000b8790: mov [rdi+0x10], edx; mov [rdi+0x18], ecx; lea rax, [rdi+0x1b]; ret; 
0x000000000b9600: mov [rdi+0x10], edx; mov [rdi+0x18], ecx; lea rax, [rdi+0x1c]; ret; 
0x000000000b70c0: mov [rdi+0x10], edx; mov [rdi+0x18], ecx; ret; 
0x000000000bb260: mov [rdi+0x10], edx; mov [rdi+0x18], ecx; xor ch, ch; mov [rdi+0x1c], ch; ret; 
0x0000000005650e: mov [rdi+0x10], r9; ret; 
0x00000000121c6f: mov [rdi+0x10], rax; jb short 0x0000000000121c88; mov qword ptr [rip+0xca6e0], 0x2; ret; 
0x000000000b870c: mov [rdi+0x10], rcx; lea rax, [rdi+0x17]; ret; 
0x000000000b957c: mov [rdi+0x10], rcx; lea rax, [rdi+0x18]; ret; 
0x000000000b872c: mov [rdi+0x10], rcx; mov [rdi+0x18], dh; lea rax, [rdi+0x18]; ret; 
0x000000000b705c: mov [rdi+0x10], rcx; mov [rdi+0x18], dh; ret; 
0x000000000b703c: mov [rdi+0x10], rcx; ret; 
0x000000000b79cc: mov [rdi+0x10], rcx; sub r8, 0x18; lea rdi, [rdi+0x18]; jne 0x00000000000b7fa0; ret; 
0x000000000bb1dc: mov [rdi+0x10], rcx; xor ch, ch; mov [rdi+0x18], ch; ret; 
0x000000000b876f: mov [rdi+0x10], rdx; mov [rdi+0x17], ecx; lea rax, [rdi+0x1a]; ret; 
0x000000000b95df: mov [rdi+0x10], rdx; mov [rdi+0x17], ecx; lea rax, [rdi+0x1b]; ret; 
0x000000000b709f: mov [rdi+0x10], rdx; mov [rdi+0x17], ecx; ret; 
0x000000000bb23f: mov [rdi+0x10], rdx; mov [rdi+0x17], ecx; xor ch, ch; mov [rdi+0x1b], ch; ret; 
0x000000000b959f: mov [rdi+0x10], rdx; mov [rdi+0x18], cl; lea rax, [rdi+0x19]; ret; 
0x000000000b7d4f: mov [rdi+0x10], rdx; mov [rdi+0x18], cl; ret; 
0x000000000bb1ff: mov [rdi+0x10], rdx; mov [rdi+0x18], cl; xor ch, ch; mov [rdi+0x19], ch; ret; 
0x000000000b8750: mov [rdi+0x10], rdx; mov [rdi+0x18], cx; lea rax, [rdi+0x19]; ret; 
0x000000000b95c0: mov [rdi+0x10], rdx; mov [rdi+0x18], cx; lea rax, [rdi+0x1a]; ret; 
0x000000000b7080: mov [rdi+0x10], rdx; mov [rdi+0x18], cx; ret; 
0x000000000bb220: mov [rdi+0x10], rdx; mov [rdi+0x18], cx; xor ch, ch; mov [rdi+0x1a], ch; ret; 
0x000000000b878f: mov [rdi+0x10], rdx; mov [rdi+0x18], ecx; lea rax, [rdi+0x1b]; ret; 
0x000000000b95ff: mov [rdi+0x10], rdx; mov [rdi+0x18], ecx; lea rax, [rdi+0x1c]; ret; 
0x000000000b70bf: mov [rdi+0x10], rdx; mov [rdi+0x18], ecx; ret; 
0x000000000bb25f: mov [rdi+0x10], rdx; mov [rdi+0x18], ecx; xor ch, ch; mov [rdi+0x1c], ch; ret; 
0x0000000010d12e: mov [rdi+0x10c], esi; xor eax, eax; ret; 
0x000000000bb100: mov [rdi+0x11], ch; ret; 
0x000000000bb122: mov [rdi+0x12], ch; ret; 
0x000000000bb140: mov [rdi+0x13], ch; ret; 
0x000000000bb160: mov [rdi+0x14], ch; ret; 
0x000000000b86ae: mov [rdi+0x14], dh; lea rax, [rdi+0x14]; ret; 
0x000000000b6fde: mov [rdi+0x14], dh; ret; 
0x000000000b796e: mov [rdi+0x14], dh; sub r8, 0x15; lea rdi, [rdi+0x15]; jne 0x00000000000b7fa0; ret; 
0x000000000b9521: mov [rdi+0x14], dl; lea rax, [rdi+0x15]; ret; 
0x000000000b7cd1: mov [rdi+0x14], dl; ret; 
0x000000000bb181: mov [rdi+0x14], dl; xor ch, ch; mov [rdi+0x15], ch; ret; 
0x000000000bb186: mov [rdi+0x15], ch; ret; 
0x00000000113cbb: mov [rdi+0x16], ax; ret; 
0x000000000bb1a2: mov [rdi+0x16], ch; ret; 
0x00000000113cbc: mov [rdi+0x16], eax; ret; 
0x000000000bb1c2: mov [rdi+0x17], ch; ret; 
0x000000000b8773: mov [rdi+0x17], ecx; lea rax, [rdi+0x1a]; ret; 
0x000000000b95e3: mov [rdi+0x17], ecx; lea rax, [rdi+0x1b]; ret; 
0x000000000b70a3: mov [rdi+0x17], ecx; ret; 
0x000000000b7a53: mov [rdi+0x17], ecx; sub r8, 0x1b; lea rdi, [rdi+0x1b]; jne 0x00000000000b7fa0; ret; 
0x000000000bb243: mov [rdi+0x17], ecx; xor ch, ch; mov [rdi+0x1b], ch; ret; 
0x000000000bb1e2: mov [rdi+0x18], ch; ret; 
0x000000000b95a3: mov [rdi+0x18], cl; lea rax, [rdi+0x19]; ret; 
0x000000000b7d53: mov [rdi+0x18], cl; ret; 
0x000000000bb203: mov [rdi+0x18], cl; xor ch, ch; mov [rdi+0x19], ch; ret; 
0x000000000b8754: mov [rdi+0x18], cx; lea rax, [rdi+0x19]; ret; 
0x000000000b95c4: mov [rdi+0x18], cx; lea rax, [rdi+0x1a]; ret; 
0x000000000b7084: mov [rdi+0x18], cx; ret; 
0x000000000b7a24: mov [rdi+0x18], cx; sub r8, 0x1a; lea rdi, [rdi+0x1a]; jne 0x00000000000b7fa0; ret; 
0x000000000bb224: mov [rdi+0x18], cx; xor ch, ch; mov [rdi+0x1a], ch; ret; 
0x000000000b8730: mov [rdi+0x18], dh; lea rax, [rdi+0x18]; ret; 
0x000000000b7060: mov [rdi+0x18], dh; ret; 
0x000000000b79f0: mov [rdi+0x18], dh; sub r8, 0x19; lea rdi, [rdi+0x19]; jne 0x00000000000b7fa0; ret; 
0x000000000918f7: mov [rdi+0x18], eax; mov [rdi+0x8], rax; ret; 
0x0000000008d33f: mov [rdi+0x18], eax; mov [rsi], rax; xor eax, eax; ret; 
0x0000000015747b: mov [rdi+0x18], eax; mov eax, r8d; ret; 
0x000000000b8755: mov [rdi+0x18], ecx; lea rax, [rdi+0x19]; ret; 
0x000000000b95c5: mov [rdi+0x18], ecx; lea rax, [rdi+0x1a]; ret; 
0x000000000b8793: mov [rdi+0x18], ecx; lea rax, [rdi+0x1b]; ret; 
0x000000000b9603: mov [rdi+0x18], ecx; lea rax, [rdi+0x1c]; ret; 
0x000000000b7085: mov [rdi+0x18], ecx; ret; 
0x000000000b7a25: mov [rdi+0x18], ecx; sub r8, 0x1a; lea rdi, [rdi+0x1a]; jne 0x00000000000b7fa0; ret; 
0x000000000b7a83: mov [rdi+0x18], ecx; sub r8, 0x1c; lea rdi, [rdi+0x1c]; jne 0x00000000000b7fa0; ret; 
0x000000000bb225: mov [rdi+0x18], ecx; xor ch, ch; mov [rdi+0x1a], ch; ret; 
0x000000000bb263: mov [rdi+0x18], ecx; xor ch, ch; mov [rdi+0x1c], ch; ret; 
0x00000000091924: mov [rdi+0x18], edx; mov [rdi+0x48], rax; movups [rdi+0x8], xmm0; ret; 
0x0000000015753d: mov [rdi+0x18], edx; mov eax, r8d; ret; 
0x00000000157d02: mov [rdi+0x18], esi; mov dword ptr [rdi+0x28], 0x0; mov qword ptr [rdi+0x20], 0x0; ret; 
0x00000000157405: mov [rdi+0x18], esi; mov eax, r8d; ret; 
0x0000000015743d: mov [rdi+0x18], esi; mov rax, r8; ret; 
0x000000000918f5: mov [rdi+0x18], rax; mov [rdi+0x8], rax; ret; 
0x0000000008d33e: mov [rdi+0x18], rax; mov [rsi], rax; xor eax, eax; ret; 
0x0000000015747a: mov [rdi+0x18], rax; mov eax, r8d; ret; 
0x00000000091923: mov [rdi+0x18], rdx; mov [rdi+0x48], rax; movups [rdi+0x8], xmm0; ret; 
0x0000000015753c: mov [rdi+0x18], rdx; mov eax, r8d; ret; 
0x00000000157d01: mov [rdi+0x18], rsi; mov dword ptr [rdi+0x28], 0x0; mov qword ptr [rdi+0x20], 0x0; ret; 
0x00000000157404: mov [rdi+0x18], rsi; mov eax, r8d; ret; 
0x0000000015743c: mov [rdi+0x18], rsi; mov rax, r8; ret; 
0x000000000bb208: mov [rdi+0x19], ch; ret; 
0x000000000baf66: mov [rdi+0x1], ch; ret; 
0x0000000013c1a5: mov [rdi+0x1], dh; ret; 
0x0000000016dd27: mov [rdi+0x1], dx; mov [rdi], cx; ret; 
0x0000000016dd28: mov [rdi+0x1], edx; mov [rdi], cx; ret; 
0x0000000016dc45: mov [rdi+0x1], edx; mov [rdi], ecx; ret; 
0x0000000016da88: mov [rdi+0x1], edx; mov [rdi], rcx; ret; 
0x0000000016da87: mov [rdi+0x1], rdx; mov [rdi], rcx; ret; 
0x0000000013c1a4: mov [rdi+0x1], sil; ret; 
0x000000000bb22a: mov [rdi+0x1a], ch; ret; 
0x000000000bb248: mov [rdi+0x1b], ch; ret; 
0x000000000bb268: mov [rdi+0x1c], ch; ret; 
0x000000000bb284: mov [rdi+0x1d], ch; ret; 
0x000000000bb2a4: mov [rdi+0x1e], ch; ret; 
0x000000000bb2c4: mov [rdi+0x1f], ch; ret; 
0x000000000bb2e4: mov [rdi+0x20], ch; ret; 
0x000000000b7e55: mov [rdi+0x20], cl; ret; 
0x000000000bb305: mov [rdi+0x20], cl; xor ch, ch; mov [rdi+0x21], ch; ret; 
0x000000000bb30a: mov [rdi+0x21], ch; ret; 
0x00000000157436: mov [rdi+0x28], eax; add rsi, r8; mov [rdi+0x18], rsi; mov rax, r8; ret; 
0x00000000157401: mov [rdi+0x28], eax; mov [rdi+0x18], rsi; mov eax, r8d; ret; 
0x0000000015760a: mov [rdi+0x28], edx; movups [rdi+0x18], xmm0; ret; 
0x000000000a8b5d: mov [rdi+0x2], al; lea rax, [rdi+rdx-0x1]; ret; 
0x000000000baf78: mov [rdi+0x2], ch; ret; 
0x000000000b84e6: mov [rdi+0x2], dh; lea rax, [rdi+0x2]; ret; 
0x000000000b6ea6: mov [rdi+0x2], dh; ret; 
0x000000000b7726: mov [rdi+0x2], dh; sub r8, 0x3; lea rdi, [rdi+0x3]; jne 0x00000000000b7fa0; ret; 
0x000000000b9329: mov [rdi+0x2], dl; lea rax, [rdi+0x3]; ret; 
0x000000000a89d0: mov [rdi+0x2], dl; ret; 
0x000000000baf89: mov [rdi+0x2], dl; xor ch, ch; mov [rdi+0x3], ch; ret; 
0x0000000016dbd5: mov [rdi+0x2], edx; mov [rdi], ecx; ret; 
0x0000000016da18: mov [rdi+0x2], edx; mov [rdi], rcx; ret; 
0x0000000016da17: mov [rdi+0x2], rdx; mov [rdi], rcx; ret; 
0x00000000100481: mov [rdi+0x38], al; mov [rsi], edx; movups [rsi+0x8], xmm0; ret; 
0x000000000baf8e: mov [rdi+0x3], ch; ret; 
0x0000000013c64c: mov [rdi+0x3], cl; movdqu xmm0, [rsi]; movups [rdi+rdx+0x8], xmm0; ret; 
0x000000000b8537: mov [rdi+0x3], edx; lea rax, [rdi+0x6]; ret; 
0x000000000b9387: mov [rdi+0x3], edx; lea rax, [rdi+0x7]; ret; 
0x0000000016db65: mov [rdi+0x3], edx; mov [rdi], ecx; ret; 
0x0000000016d9a8: mov [rdi+0x3], edx; mov [rdi], rcx; ret; 
0x000000000b6ee7: mov [rdi+0x3], edx; ret; 
0x000000000b77a7: mov [rdi+0x3], edx; sub r8, 0x7; lea rdi, [rdi+0x7]; jne 0x00000000000b7fa0; ret; 
0x000000000bafe7: mov [rdi+0x3], edx; xor ch, ch; mov [rdi+0x7], ch; ret; 
0x0000000016d9a7: mov [rdi+0x3], rdx; mov [rdi], rcx; ret; 
0x000000000bb35a: mov [rdi+0x40], ch; ret; 
0x0000000018b2a5: mov [rdi+0x40], cl; lea rax, [rdi+0x41]; vzeroupper; ret; 
0x000000001899c5: mov [rdi+0x40], cl; mov byte ptr [rdi+0x41], 0x0; vzeroupper; ret; 
0x0000000018a575: mov [rdi+0x40], cl; vzeroupper; ret; 
0x00000000091928: mov [rdi+0x48], eax; movups [rdi+0x8], xmm0; ret; 
0x000000000918f3: mov [rdi+0x48], edx; mov [rdi+0x18], rax; mov [rdi+0x8], rax; ret; 
0x00000000091927: mov [rdi+0x48], rax; movups [rdi+0x8], xmm0; ret; 
0x000000000918f0: mov [rdi+0x48], rdx; mov [rdi+0x18], rax; mov [rdi+0x8], rax; ret; 
0x000000000a8b8b: mov [rdi+0x4], al; lea rax, [rdi+rdx-0x1]; ret; 
0x000000000a8ba3: mov [rdi+0x4], ax; lea rax, [rdi+rdx-0x1]; ret; 
0x000000000a8bbb: mov [rdi+0x4], ax; movzx eax, byte ptr [rsp+0xe]; mov [rdi+0x6], al; lea rax, [rdi+rdx-0x1]; ret; 
0x00000000048218: mov [rdi+0x4], ax; xor eax, eax; ret; 
0x000000000bafa6: mov [rdi+0x4], ch; ret; 
0x000000000b8502: mov [rdi+0x4], dh; mov [rdi], ecx; lea rax, [rdi+0x4]; ret; 
0x000000000b6ec2: mov [rdi+0x4], dh; mov [rdi], ecx; ret; 
0x000000000b9357: mov [rdi+0x4], dl; lea rax, [rdi+0x5]; ret; 
0x000000000a89ee: mov [rdi+0x4], dl; ret; 
0x000000000bafb7: mov [rdi+0x4], dl; xor ch, ch; mov [rdi+0x5], ch; ret; 
0x000000000b8518: mov [rdi+0x4], dx; lea rax, [rdi+0x5]; ret; 
0x000000000b9368: mov [rdi+0x4], dx; lea rax, [rdi+0x6]; ret; 
0x000000000a8a1e: mov [rdi+0x4], dx; movzx edx, byte ptr [rsp+0x16]; mov [rdi+0x6], dl; ret; 
0x000000000a8a06: mov [rdi+0x4], dx; ret; 
0x000000000b7788: mov [rdi+0x4], dx; sub r8, 0x6; lea rdi, [rdi+0x6]; jne 0x00000000000b7fa0; ret; 
0x000000000bafc8: mov [rdi+0x4], dx; xor ch, ch; mov [rdi+0x6], ch; ret; 
0x000000000a8ba4: mov [rdi+0x4], eax; lea rax, [rdi+rdx-0x1]; ret; 
0x000000000a8bbc: mov [rdi+0x4], eax; movzx eax, byte ptr [rsp+0xe]; mov [rdi+0x6], al; lea rax, [rdi+rdx-0x1]; ret; 
0x00000000048219: mov [rdi+0x4], eax; xor eax, eax; ret; 
0x000000000b8519: mov [rdi+0x4], edx; lea rax, [rdi+0x5]; ret; 
0x000000000b9369: mov [rdi+0x4], edx; lea rax, [rdi+0x6]; ret; 
0x0000000016d938: mov [rdi+0x4], edx; mov [rdi], rcx; ret; 
0x000000000a8a1f: mov [rdi+0x4], edx; movzx edx, byte ptr [rsp+0x16]; mov [rdi+0x6], dl; ret; 
0x000000000a8a07: mov [rdi+0x4], edx; ret; 
0x000000000b7789: mov [rdi+0x4], edx; sub r8, 0x6; lea rdi, [rdi+0x6]; jne 0x00000000000b7fa0; ret; 
0x000000000bafc9: mov [rdi+0x4], edx; xor ch, ch; mov [rdi+0x6], ch; ret; 
0x0000000010c7c4: mov [rdi+0x4], esi; xor eax, eax; ret; 
0x0000000016d937: mov [rdi+0x4], rdx; mov [rdi], rcx; ret; 
0x000000000bafbc: mov [rdi+0x5], ch; ret; 
0x000000000b85cb: mov [rdi+0x5], edx; lea rax, [rdi+0xc]; ret; 
0x000000000b942b: mov [rdi+0x5], edx; lea rax, [rdi+0xd]; ret; 
0x0000000016d8c8: mov [rdi+0x5], edx; mov [rdi], rcx; ret; 
0x000000000b6f4b: mov [rdi+0x5], edx; ret; 
0x000000000b786b: mov [rdi+0x5], edx; sub r8, 0xd; lea rdi, [rdi+0xd]; jne 0x00000000000b7fa0; ret; 
0x000000000bb08b: mov [rdi+0x5], edx; xor ch, ch; mov [rdi+0xd], ch; ret; 
0x000000000b85ca: mov [rdi+0x5], rdx; lea rax, [rdi+0xc]; ret; 
0x000000000b942a: mov [rdi+0x5], rdx; lea rax, [rdi+0xd]; ret; 
0x0000000016d8c7: mov [rdi+0x5], rdx; mov [rdi], rcx; ret; 
0x000000000b6f4a: mov [rdi+0x5], rdx; ret; 
0x000000000b786a: mov [rdi+0x5], rdx; sub r8, 0xd; lea rdi, [rdi+0xd]; jne 0x00000000000b7fa0; ret; 
0x000000000bb08a: mov [rdi+0x5], rdx; xor ch, ch; mov [rdi+0xd], ch; ret; 
0x000000000a8bc4: mov [rdi+0x6], al; lea rax, [rdi+rdx-0x1]; ret; 
0x000000000bafce: mov [rdi+0x6], ch; ret; 
0x000000000a8a27: mov [rdi+0x6], dl; ret; 
0x000000000b85eb: mov [rdi+0x6], edx; lea rax, [rdi+0xd]; ret; 
0x000000000b944b: mov [rdi+0x6], edx; lea rax, [rdi+0xe]; ret; 
0x0000000016d858: mov [rdi+0x6], edx; mov [rdi], rcx; ret; 
0x000000000b6f5b: mov [rdi+0x6], edx; ret; 
0x000000000b788b: mov [rdi+0x6], edx; sub r8, 0xe; lea rdi, [rdi+0xe]; jne 0x00000000000b7fa0; ret; 
0x000000000bb0ab: mov [rdi+0x6], edx; xor ch, ch; mov [rdi+0xe], ch; ret; 
0x000000000b85ea: mov [rdi+0x6], rdx; lea rax, [rdi+0xd]; ret; 
0x000000000b944a: mov [rdi+0x6], rdx; lea rax, [rdi+0xe]; ret; 
0x0000000016d857: mov [rdi+0x6], rdx; mov [rdi], rcx; ret; 
0x000000000b6f5a: mov [rdi+0x6], rdx; ret; 
0x000000000b788a: mov [rdi+0x6], rdx; sub r8, 0xe; lea rdi, [rdi+0xe]; jne 0x00000000000b7fa0; ret; 
0x000000000bb0aa: mov [rdi+0x6], rdx; xor ch, ch; mov [rdi+0xe], ch; ret; 
0x0000000014adb6: mov [rdi+0x7], al; ret; 
0x000000000bafec: mov [rdi+0x7], ch; ret; 
0x000000000b8589: mov [rdi+0x7], edx; lea rax, [rdi+0xa]; ret; 
0x000000000b93e9: mov [rdi+0x7], edx; lea rax, [rdi+0xb]; ret; 
0x000000000b860b: mov [rdi+0x7], edx; lea rax, [rdi+0xe]; ret; 
0x000000000b946b: mov [rdi+0x7], edx; lea rax, [rdi+0xf]; ret; 
0x0000000016d7e8: mov [rdi+0x7], edx; mov [rdi], rcx; ret; 
0x000000000b6f29: mov [rdi+0x7], edx; ret; 
0x000000000b7829: mov [rdi+0x7], edx; sub r8, 0xb; lea rdi, [rdi+0xb]; jne 0x00000000000b7fa0; ret; 
0x000000000b78ab: mov [rdi+0x7], edx; sub r8, 0xf; lea rdi, [rdi+0xf]; jne 0x00000000000b7fa0; ret; 
0x000000000bb049: mov [rdi+0x7], edx; xor ch, ch; mov [rdi+0xb], ch; ret; 
0x000000000bb0cb: mov [rdi+0x7], edx; xor ch, ch; mov [rdi+0xf], ch; ret; 
0x000000000b860a: mov [rdi+0x7], rdx; lea rax, [rdi+0xe]; ret; 
0x000000000b946a: mov [rdi+0x7], rdx; lea rax, [rdi+0xf]; ret; 
0x0000000016d7e7: mov [rdi+0x7], rdx; mov [rdi], rcx; ret; 
0x000000000b6f6a: mov [rdi+0x7], rdx; ret; 
0x000000000b78aa: mov [rdi+0x7], rdx; sub r8, 0xf; lea rdi, [rdi+0xf]; jne 0x00000000000b7fa0; ret; 
0x000000000bb0ca: mov [rdi+0x7], rdx; xor ch, ch; mov [rdi+0xf], ch; ret; 
0x000000000baff8: mov [rdi+0x8], ch; ret; 
0x000000000b8553: mov [rdi+0x8], dh; mov [rdi], rcx; lea rax, [rdi+0x8]; ret; 
0x000000000b6f03: mov [rdi+0x8], dh; mov [rdi], rcx; ret; 
0x000000000b93a9: mov [rdi+0x8], dl; lea rax, [rdi+0x9]; ret; 
0x000000000b7bf9: mov [rdi+0x8], dl; ret; 
0x000000000bb009: mov [rdi+0x8], dl; xor ch, ch; mov [rdi+0x9], ch; ret; 
0x000000000b856a: mov [rdi+0x8], dx; lea rax, [rdi+0x9]; ret; 
0x000000000b93ca: mov [rdi+0x8], dx; lea rax, [rdi+0xa]; ret; 
0x000000000b6f1a: mov [rdi+0x8], dx; ret; 
0x000000000b780a: mov [rdi+0x8], dx; sub r8, 0xa; lea rdi, [rdi+0xa]; jne 0x00000000000b7fa0; ret; 
0x000000000bb02a: mov [rdi+0x8], dx; xor ch, ch; mov [rdi+0xa], ch; ret; 
0x00000000157cfe: mov [rdi+0x8], eax; mov [rdi+0x18], rsi; mov dword ptr [rdi+0x28], 0x0; mov qword ptr [rdi+0x20], 0x0; ret; 
0x00000000157607: mov [rdi+0x8], eax; mov [rdi+0x28], edx; movups [rdi+0x18], xmm0; ret; 
0x00000000113cb3: mov [rdi+0x8], eax; mov eax, 0x100; mov [rdi+0x16], ax; ret; 
0x00000000057d96: mov [rdi+0x8], eax; mov eax, 0x2; ret; 
0x000000000918fb: mov [rdi+0x8], eax; ret; 
0x00000000056508: mov [rdi+0x8], eax; shr r9, cl; mov [rdi+0x10], r9; ret; 
0x00000000094db8: mov [rdi+0x8], eax; xor eax, eax; ret; 
0x00000000056498: mov [rdi+0x8], ecx; ret; 
0x000000000b856b: mov [rdi+0x8], edx; lea rax, [rdi+0x9]; ret; 
0x000000000b93cb: mov [rdi+0x8], edx; lea rax, [rdi+0xa]; ret; 
0x000000000b85a9: mov [rdi+0x8], edx; lea rax, [rdi+0xb]; ret; 
0x000000000b9409: mov [rdi+0x8], edx; lea rax, [rdi+0xc]; ret; 
0x00000000055aa8: mov [rdi+0x8], edx; mov eax, ecx; adc eax, eax; ret; 
0x0000000008df83: mov [rdi+0x8], edx; movzx eax, byte ptr [rax]; ret; 
0x000000000b6f1b: mov [rdi+0x8], edx; ret; 
0x000000000b780b: mov [rdi+0x8], edx; sub r8, 0xa; lea rdi, [rdi+0xa]; jne 0x00000000000b7fa0; ret; 
0x000000000b7849: mov [rdi+0x8], edx; sub r8, 0xc; lea rdi, [rdi+0xc]; jne 0x00000000000b7fa0; ret; 
0x000000000bb02b: mov [rdi+0x8], edx; xor ch, ch; mov [rdi+0xa], ch; ret; 
0x000000000bb069: mov [rdi+0x8], edx; xor ch, ch; mov [rdi+0xc], ch; ret; 
0x00000000113726: mov [rdi+0x8], esi; ret; 
0x00000000055aa7: mov [rdi+0x8], r10; mov eax, ecx; adc eax, eax; ret; 
0x00000000056507: mov [rdi+0x8], r8; shr r9, cl; mov [rdi+0x10], r9; ret; 
0x00000000056497: mov [rdi+0x8], r9; ret; 
0x00000000157cfd: mov [rdi+0x8], rax; mov [rdi+0x18], rsi; mov dword ptr [rdi+0x28], 0x0; mov qword ptr [rdi+0x20], 0x0; ret; 
0x00000000157606: mov [rdi+0x8], rax; mov [rdi+0x28], edx; movups [rdi+0x18], xmm0; ret; 
0x00000000057d95: mov [rdi+0x8], rax; mov eax, 0x2; ret; 
0x000000000918fa: mov [rdi+0x8], rax; ret; 
0x0000000008df82: mov [rdi+0x8], rdx; movzx eax, byte ptr [rax]; ret; 
0x000000000bb00e: mov [rdi+0x9], ch; ret; 
0x000000000bb030: mov [rdi+0xa], ch; ret; 
0x000000000bb04e: mov [rdi+0xb], ch; ret; 
0x000000000bb06e: mov [rdi+0xc], ch; ret; 
0x0000000013b43e: mov [rdi+0xc], edx; mov [rsi], rdi; ret; 
0x0000000008281d: mov [rdi+0xd8], edx; mov rdx, [rdi+0xa0]; mov [rdx+0xe0], rcx; ret; 
0x0000000008281c: mov [rdi+0xd8], rdx; mov rdx, [rdi+0xa0]; mov [rdx+0xe0], rcx; ret; 
0x000000000bb090: mov [rdi+0xd], ch; ret; 
0x000000000bb0b0: mov [rdi+0xe], ch; ret; 
0x000000000b86cd: mov [rdi+0xe], ecx; lea rax, [rdi+0x15]; ret; 
0x000000000b953d: mov [rdi+0xe], ecx; lea rax, [rdi+0x16]; ret; 
0x000000000b6ffd: mov [rdi+0xe], ecx; ret; 
0x000000000b798d: mov [rdi+0xe], ecx; sub r8, 0x16; lea rdi, [rdi+0x16]; jne 0x00000000000b7fa0; ret; 
0x000000000bb19d: mov [rdi+0xe], ecx; xor ch, ch; mov [rdi+0x16], ch; ret; 
0x000000000b86cc: mov [rdi+0xe], rcx; lea rax, [rdi+0x15]; ret; 
0x000000000b953c: mov [rdi+0xe], rcx; lea rax, [rdi+0x16]; ret; 
0x000000000b6ffc: mov [rdi+0xe], rcx; ret; 
0x000000000b798c: mov [rdi+0xe], rcx; sub r8, 0x16; lea rdi, [rdi+0x16]; jne 0x00000000000b7fa0; ret; 
0x000000000bb19c: mov [rdi+0xe], rcx; xor ch, ch; mov [rdi+0x16], ch; ret; 
0x000000000bb0d0: mov [rdi+0xf], ch; ret; 
0x000000000b866b: mov [rdi+0xf], ecx; lea rax, [rdi+0x12]; ret; 
0x000000000b94db: mov [rdi+0xf], ecx; lea rax, [rdi+0x13]; ret; 
0x000000000b86ed: mov [rdi+0xf], ecx; lea rax, [rdi+0x16]; ret; 
0x000000000b955d: mov [rdi+0xf], ecx; lea rax, [rdi+0x17]; ret; 
0x000000000b6fbb: mov [rdi+0xf], ecx; ret; 
0x000000000b792b: mov [rdi+0xf], ecx; sub r8, 0x13; lea rdi, [rdi+0x13]; jne 0x00000000000b7fa0; ret; 
0x000000000b79ad: mov [rdi+0xf], ecx; sub r8, 0x17; lea rdi, [rdi+0x17]; jne 0x00000000000b7fa0; ret; 
0x000000000bb13b: mov [rdi+0xf], ecx; xor ch, ch; mov [rdi+0x13], ch; ret; 
0x000000000bb1bd: mov [rdi+0xf], ecx; xor ch, ch; mov [rdi+0x17], ch; ret; 
0x000000000b86ec: mov [rdi+0xf], rcx; lea rax, [rdi+0x16]; ret; 
0x000000000b955c: mov [rdi+0xf], rcx; lea rax, [rdi+0x17]; ret; 
0x000000000b701c: mov [rdi+0xf], rcx; ret; 
0x000000000b79ac: mov [rdi+0xf], rcx; sub r8, 0x17; lea rdi, [rdi+0x17]; jne 0x00000000000b7fa0; ret; 
0x000000000bb1bc: mov [rdi+0xf], rcx; xor ch, ch; mov [rdi+0x17], ch; ret; 
0x00000000056b1c: mov [rdi+r11*8+0x8], r9; add rdx, r8; mov rax, rdx; pop rbx; ret; 
0x0000000018b1fc: mov [rdi+r8-0x2], dx; lea rax, [rdi+r8]; vzeroupper; ret; 
0x0000000018991c: mov [rdi+r8-0x2], dx; mov byte ptr [rdi+r8], 0x0; vzeroupper; ret; 
0x0000000018a4cc: mov [rdi+r8-0x2], dx; vzeroupper; ret; 
0x0000000018b1fd: mov [rdi+r8-0x2], edx; lea rax, [rdi+r8]; vzeroupper; ret; 
0x0000000018991d: mov [rdi+r8-0x2], edx; mov byte ptr [rdi+r8], 0x0; vzeroupper; ret; 
0x0000000018a4cd: mov [rdi+r8-0x2], edx; vzeroupper; ret; 
0x0000000018b219: mov [rdi+r8-0x4], edx; lea rax, [rdi+r8]; vzeroupper; ret; 
0x00000000189939: mov [rdi+r8-0x4], edx; mov byte ptr [rdi+r8], 0x0; vzeroupper; ret; 
0x0000000018a4e9: mov [rdi+r8-0x4], edx; vzeroupper; ret; 
0x0000000018b23b: mov [rdi+r8-0x8], rdx; lea rax, [rdi+r8]; vzeroupper; ret; 
0x0000000018995b: mov [rdi+r8-0x8], rdx; mov byte ptr [rdi+r8], 0x0; vzeroupper; ret; 
0x0000000018a50b: mov [rdi+r8-0x8], rdx; vzeroupper; ret; 
0x00000000053ecf: mov [rdi+rax*4], fs; add [rax], al; add [rcx-0x7d], cl; ret; 
0x0000000018b1fe: mov [rdi+rax-0x2], edx; lea rax, [rdi+r8]; vzeroupper; ret; 
0x0000000018991e: mov [rdi+rax-0x2], edx; mov byte ptr [rdi+r8], 0x0; vzeroupper; ret; 
0x0000000018a4ce: mov [rdi+rax-0x2], edx; vzeroupper; ret; 
0x0000000018b21a: mov [rdi+rax-0x4], edx; lea rax, [rdi+r8]; vzeroupper; ret; 
0x0000000018993a: mov [rdi+rax-0x4], edx; mov byte ptr [rdi+r8], 0x0; vzeroupper; ret; 
0x0000000018a4ea: mov [rdi+rax-0x4], edx; vzeroupper; ret; 
0x0000000018b23c: mov [rdi+rax-0x8], edx; lea rax, [rdi+r8]; vzeroupper; ret; 
0x0000000018995c: mov [rdi+rax-0x8], edx; mov byte ptr [rdi+r8], 0x0; vzeroupper; ret; 
0x0000000018a50c: mov [rdi+rax-0x8], edx; vzeroupper; ret; 
0x00000000056b1d: mov [rdi+rbx*8+0x8], ecx; add rdx, r8; mov rax, rdx; pop rbx; ret; 
0x000000000bc07e: mov [rdi+rdx-0x2], cx; mov [rdi], cx; ret; 
0x0000000018bb73: mov [rdi+rdx-0x2], cx; mov [rdi], cx; vzeroupper; ret; 
0x000000000bbc58: mov [rdi+rdx-0x2], cx; mov [rdi], si; ret; 
0x000000000bbc57: mov [rdi+rdx-0x2], cx; mov [rdi], si; ret; 
0x000000000bc07f: mov [rdi+rdx-0x2], ecx; mov [rdi], cx; ret; 
0x0000000018bb74: mov [rdi+rdx-0x2], ecx; mov [rdi], cx; vzeroupper; ret; 
0x000000000bbc59: mov [rdi+rdx-0x2], ecx; mov [rdi], si; ret; 
0x0000000018ab48: mov [rdi+rdx-0x3], ecx; lea rax, [rdi+rdx]; vzeroupper; ret; 
0x000000001890a8: mov [rdi+rdx-0x3], ecx; vzeroupper; ret; 
0x000000000bc077: mov [rdi+rdx-0x4], ecx; mov [rdi], ecx; ret; 
0x0000000018bb69: mov [rdi+rdx-0x4], ecx; mov [rdi], ecx; vzeroupper; ret; 
0x000000000bbc49: mov [rdi+rdx-0x4], ecx; mov [rdi], esi; ret; 
0x000000000bbc48: mov [rdi+rdx-0x4], ecx; mov [rdi], esi; ret; 
0x0000000018ab6c: mov [rdi+rdx-0x7], ecx; lea rax, [rdi+rdx]; vzeroupper; ret; 
0x000000001890bc: mov [rdi+rdx-0x7], ecx; vzeroupper; ret; 
0x0000000018ab6b: mov [rdi+rdx-0x7], r9; lea rax, [rdi+rdx]; vzeroupper; ret; 
0x000000001890bb: mov [rdi+rdx-0x7], r9; vzeroupper; ret; 
0x000000000bc06f: mov [rdi+rdx-0x8], ecx; mov [rdi], rcx; ret; 
0x0000000018bb5e: mov [rdi+rdx-0x8], ecx; mov [rdi], rcx; vzeroupper; ret; 
0x000000000bbc3b: mov [rdi+rdx-0x8], ecx; mov [rdi], rsi; ret; 
0x000000000bc06e: mov [rdi+rdx-0x8], rcx; mov [rdi], rcx; ret; 
0x0000000018bb5d: mov [rdi+rdx-0x8], rcx; mov [rdi], rcx; vzeroupper; ret; 
0x000000000bbc39: mov [rdi+rdx-0x8], rcx; mov [rdi], rsi; ret; 
0x000000000bbc3a: mov [rdi+rdx-0x8], rcx; mov [rdi], rsi; ret; 
0x000000001676c5: mov [rdi-0x10], ebx; mov [rdi-0x8], rcx; ret; 
0x00000000167703: mov [rdi-0x10], ebx; mov [rdi-0x8], rdx; ret; 
0x000000000563ff: mov [rdi-0x10], ecx; ret; 
0x000000001676c4: mov [rdi-0x10], r11; mov [rdi-0x8], rcx; ret; 
0x00000000167702: mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x000000000563fe: mov [rdi-0x10], r9; ret; 
0x00000000167878: mov [rdi-0x11], ebx; mov [rdi-0x9], r8; mov [rdi-0x4], edx; ret; 
0x00000000167974: mov [rdi-0x11], ebx; mov [rdi-0x9], rcx; mov [rdi-0x1], dl; ret; 
0x000000001678c0: mov [rdi-0x11], ebx; mov [rdi-0x9], rcx; mov [rdi-0x4], edx; ret; 
0x00000000167877: mov [rdi-0x11], r11; mov [rdi-0x9], r8; mov [rdi-0x4], edx; ret; 
0x00000000167973: mov [rdi-0x11], r11; mov [rdi-0x9], rcx; mov [rdi-0x1], dl; ret; 
0x000000001678bf: mov [rdi-0x11], r11; mov [rdi-0x9], rcx; mov [rdi-0x4], edx; ret; 
0x00000000167a48: mov [rdi-0x12], ebx; mov [rdi-0xa], rcx; mov [rdi-0x4], edx; ret; 
0x00000000167a47: mov [rdi-0x12], r11; mov [rdi-0xa], rcx; mov [rdi-0x4], edx; ret; 
0x00000000167c28: mov [rdi-0x13], ebx; mov [rdi-0xb], rcx; mov [rdi-0x4], edx; ret; 
0x00000000167c27: mov [rdi-0x13], r11; mov [rdi-0xb], rcx; mov [rdi-0x4], edx; ret; 
0x00000000167e18: mov [rdi-0x14], ebx; mov [rdi-0xc], rcx; mov [rdi-0x4], edx; ret; 
0x00000000167e17: mov [rdi-0x14], r11; mov [rdi-0xc], rcx; mov [rdi-0x4], edx; ret; 
0x00000000167fe9: mov [rdi-0x15], ebx; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000167fe8: mov [rdi-0x15], r11; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x000000001681e9: mov [rdi-0x16], ebx; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x000000001681e8: mov [rdi-0x16], r11; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x000000001683e9: mov [rdi-0x17], ebx; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x000000001683e8: mov [rdi-0x17], r11; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x000000001676c1: mov [rdi-0x18], edx; mov [rdi-0x10], r11; mov [rdi-0x8], rcx; ret; 
0x000000001676ff: mov [rdi-0x18], edx; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x000000001676c0: mov [rdi-0x18], r10; mov [rdi-0x10], r11; mov [rdi-0x8], rcx; ret; 
0x000000001676fe: mov [rdi-0x18], r10; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x00000000167874: mov [rdi-0x19], edx; mov [rdi-0x11], r11; mov [rdi-0x9], r8; mov [rdi-0x4], edx; ret; 
0x00000000167970: mov [rdi-0x19], edx; mov [rdi-0x11], r11; mov [rdi-0x9], rcx; mov [rdi-0x1], dl; ret; 
0x000000001678bc: mov [rdi-0x19], edx; mov [rdi-0x11], r11; mov [rdi-0x9], rcx; mov [rdi-0x4], edx; ret; 
0x00000000167873: mov [rdi-0x19], r10; mov [rdi-0x11], r11; mov [rdi-0x9], r8; mov [rdi-0x4], edx; ret; 
0x0000000016796f: mov [rdi-0x19], r10; mov [rdi-0x11], r11; mov [rdi-0x9], rcx; mov [rdi-0x1], dl; ret; 
0x000000001678bb: mov [rdi-0x19], r10; mov [rdi-0x11], r11; mov [rdi-0x9], rcx; mov [rdi-0x4], edx; ret; 
0x0000000016797b: mov [rdi-0x1], dl; ret; 
0x000000000b7e90: mov [rdi-0x1], edx; ret; 
0x000000000b7ed0: mov [rdi-0x1], rdx; ret; 
0x00000000167a44: mov [rdi-0x1a], edx; mov [rdi-0x12], r11; mov [rdi-0xa], rcx; mov [rdi-0x4], edx; ret; 
0x00000000167a43: mov [rdi-0x1a], r10; mov [rdi-0x12], r11; mov [rdi-0xa], rcx; mov [rdi-0x4], edx; ret; 
0x00000000167c24: mov [rdi-0x1b], edx; mov [rdi-0x13], r11; mov [rdi-0xb], rcx; mov [rdi-0x4], edx; ret; 
0x00000000167c23: mov [rdi-0x1b], r10; mov [rdi-0x13], r11; mov [rdi-0xb], rcx; mov [rdi-0x4], edx; ret; 
0x00000000167e14: mov [rdi-0x1c], edx; mov [rdi-0x14], r11; mov [rdi-0xc], rcx; mov [rdi-0x4], edx; ret; 
0x00000000167e13: mov [rdi-0x1c], r10; mov [rdi-0x14], r11; mov [rdi-0xc], rcx; mov [rdi-0x4], edx; ret; 
0x00000000167fe5: mov [rdi-0x1d], edx; mov [rdi-0x15], r11; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000167fe4: mov [rdi-0x1d], r10; mov [rdi-0x15], r11; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x000000001681e5: mov [rdi-0x1e], edx; mov [rdi-0x16], r11; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x000000001681e4: mov [rdi-0x1e], r10; mov [rdi-0x16], r11; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x000000001683e5: mov [rdi-0x1f], edx; mov [rdi-0x17], r11; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x000000001683e4: mov [rdi-0x1f], r10; mov [rdi-0x17], r11; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x000000001676bd: mov [rdi-0x20], ecx; mov [rdi-0x18], r10; mov [rdi-0x10], r11; mov [rdi-0x8], rcx; ret; 
0x000000001676fb: mov [rdi-0x20], ecx; mov [rdi-0x18], r10; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x000000001676bc: mov [rdi-0x20], r9; mov [rdi-0x18], r10; mov [rdi-0x10], r11; mov [rdi-0x8], rcx; ret; 
0x000000001676fa: mov [rdi-0x20], r9; mov [rdi-0x18], r10; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x00000000167dcc: mov [rdi-0x2], cx; ret; 
0x00000000167be4: mov [rdi-0x2], dx; ret; 
0x00000000167dcd: mov [rdi-0x2], ecx; ret; 
0x00000000167be5: mov [rdi-0x2], edx; ret; 
0x00000000167dc8: mov [rdi-0x3], dx; mov [rdi-0x2], cx; ret; 
0x00000000167dc9: mov [rdi-0x3], edx; mov [rdi-0x2], cx; ret; 
0x000000001681a9: mov [rdi-0x4], ecx; ret; 
0x0000000016787f: mov [rdi-0x4], edx; ret; 
0x000000001681a6: mov [rdi-0x5], edx; mov [rdi-0x4], ecx; ret; 
0x000000001683a6: mov [rdi-0x6], edx; mov [rdi-0x4], ecx; ret; 
0x000000001685a6: mov [rdi-0x7], edx; mov [rdi-0x4], ecx; ret; 
0x000000000563f8: mov [rdi-0x8], eax; shl r9, cl; mov [rdi-0x10], r9; ret; 
0x0000000005637e: mov [rdi-0x8], ecx; ret; 
0x00000000167707: mov [rdi-0x8], edx; ret; 
0x000000000563f7: mov [rdi-0x8], r8; shl r9, cl; mov [rdi-0x10], r9; ret; 
0x0000000005637d: mov [rdi-0x8], r9; ret; 
0x000000001676c8: mov [rdi-0x8], rcx; ret; 
0x0000000016d07b: mov [rdi-0x8], rcx; ret; 
0x000000001681ee: mov [rdi-0x8], rdx; ret; 
0x00000000167706: mov [rdi-0x8], rdx; ret; 
0x0000000016787c: mov [rdi-0x9], eax; mov [rdi-0x4], edx; ret; 
0x00000000167978: mov [rdi-0x9], ecx; mov [rdi-0x1], dl; ret; 
0x000000001678c4: mov [rdi-0x9], ecx; mov [rdi-0x4], edx; ret; 
0x0000000016d318: mov [rdi-0x9], edx; mov [rdi-0x4], ecx; ret; 
0x0000000016787b: mov [rdi-0x9], r8; mov [rdi-0x4], edx; ret; 
0x00000000167977: mov [rdi-0x9], rcx; mov [rdi-0x1], dl; ret; 
0x000000001678c3: mov [rdi-0x9], rcx; mov [rdi-0x4], edx; ret; 
0x0000000016d317: mov [rdi-0x9], rdx; mov [rdi-0x4], ecx; ret; 
0x00000000167a4c: mov [rdi-0xa], ecx; mov [rdi-0x4], edx; ret; 
0x0000000016d298: mov [rdi-0xa], edx; mov [rdi-0x4], ecx; ret; 
0x00000000167a4b: mov [rdi-0xa], rcx; mov [rdi-0x4], edx; ret; 
0x0000000016d297: mov [rdi-0xa], rdx; mov [rdi-0x4], ecx; ret; 
0x00000000167c2c: mov [rdi-0xb], ecx; mov [rdi-0x4], edx; ret; 
0x0000000016d218: mov [rdi-0xb], edx; mov [rdi-0x4], ecx; ret; 
0x00000000167c2b: mov [rdi-0xb], rcx; mov [rdi-0x4], edx; ret; 
0x0000000016d217: mov [rdi-0xb], rdx; mov [rdi-0x4], ecx; ret; 
0x00000000167e1c: mov [rdi-0xc], ecx; mov [rdi-0x4], edx; ret; 
0x0000000016d198: mov [rdi-0xc], edx; mov [rdi-0x4], ecx; ret; 
0x00000000167e1b: mov [rdi-0xc], rcx; mov [rdi-0x4], edx; ret; 
0x0000000016d197: mov [rdi-0xc], rdx; mov [rdi-0x4], ecx; ret; 
0x00000000167fed: mov [rdi-0xd], ecx; mov [rdi-0x8], rdx; ret; 
0x0000000016d109: mov [rdi-0xd], edx; mov [rdi-0x8], rcx; ret; 
0x00000000167fec: mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000016d108: mov [rdi-0xd], rdx; mov [rdi-0x8], rcx; ret; 
0x000000001681ed: mov [rdi-0xe], ecx; mov [rdi-0x8], rdx; ret; 
0x0000000016d079: mov [rdi-0xe], edx; mov [rdi-0x8], rcx; ret; 
0x000000001681ec: mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000016d078: mov [rdi-0xe], rdx; mov [rdi-0x8], rcx; ret; 
0x000000001683ed: mov [rdi-0xf], ecx; mov [rdi-0x8], rdx; ret; 
0x0000000016cfe9: mov [rdi-0xf], edx; mov [rdi-0x8], rcx; ret; 
0x000000001683ec: mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000016cfe8: mov [rdi-0xf], rdx; mov [rdi-0x8], rcx; ret; 
0x000000000ec49e: mov [rdi], al; mov eax, 0x1; ret; 
0x000000000a8b55: mov [rdi], ax; movzx eax, byte ptr [rsp-0x6]; mov [rdi+0x2], al; lea rax, [rdi+rdx-0x1]; ret; 
0x000000000baf52: mov [rdi], ch; ret; 
0x000000000bbc2f: mov [rdi], cl; ret; 
0x0000000018bb49: mov [rdi], cl; vzeroupper; ret; 
0x000000000b84e3: mov [rdi], cx; mov [rdi+0x2], dh; lea rax, [rdi+0x2]; ret; 
0x000000000b6ea3: mov [rdi], cx; mov [rdi+0x2], dh; ret; 
0x000000000b9326: mov [rdi], cx; mov [rdi+0x2], dl; lea rax, [rdi+0x3]; ret; 
0x000000000b7b96: mov [rdi], cx; mov [rdi+0x2], dl; ret; 
0x000000000baf86: mov [rdi], cx; mov [rdi+0x2], dl; xor ch, ch; mov [rdi+0x3], ch; ret; 
0x0000000018b1f9: mov [rdi], cx; mov [rdi+r8-0x2], dx; lea rax, [rdi+r8]; vzeroupper; ret; 
0x00000000189919: mov [rdi], cx; mov [rdi+r8-0x2], dx; mov byte ptr [rdi+r8], 0x0; vzeroupper; ret; 
0x0000000018a4c9: mov [rdi], cx; mov [rdi+r8-0x2], dx; vzeroupper; ret; 
0x00000000190136: mov [rdi], cx; mov [rsi-0x2], cx; ret; 
0x0000000018ab13: mov [rdi], cx; mov byte ptr [rdi+0x2], 0x0; lea rax, [rdi+0x2]; vzeroupper; ret; 
0x00000000189083: mov [rdi], cx; mov byte ptr [rdi+0x2], 0x0; vzeroupper; ret; 
0x000000000bc083: mov [rdi], cx; ret; 
0x0000000018bb78: mov [rdi], cx; vzeroupper; ret; 
0x000000000a89a1: mov [rdi], dh; add rax, rdi; ret; 
0x000000000b84c0: mov [rdi], dh; lea rax, [rdi]; ret; 
0x000000000b6e80: mov [rdi], dh; ret; 
0x000000000b76e0: mov [rdi], dh; sub r8, 0x1; lea rdi, [rdi+0x1]; jne 0x00000000000b7fa0; ret; 
0x000000000b9302: mov [rdi], dl; lea rax, [rdi+0x1]; ret; 
0x0000000018b1d3: mov [rdi], dl; lea rax, [rdi+0x1]; vzeroupper; ret; 
0x000000001898f3: mov [rdi], dl; mov byte ptr [rdi+0x1], 0x0; vzeroupper; ret; 
0x000000000b7b72: mov [rdi], dl; ret; 
0x0000000018a4a3: mov [rdi], dl; vzeroupper; ret; 
0x000000000baf62: mov [rdi], dl; xor ch, ch; mov [rdi+0x1], ch; ret; 
0x000000000a89b0: mov [rdi], dx; add rax, rdi; ret; 
0x000000000b84d3: mov [rdi], dx; lea rax, [rdi+0x1]; ret; 
0x0000000018ab03: mov [rdi], dx; lea rax, [rdi+0x1]; vzeroupper; ret; 
0x000000000b9313: mov [rdi], dx; lea rax, [rdi+0x2]; ret; 
0x0000000018b1e3: mov [rdi], dx; lea rax, [rdi+0x2]; vzeroupper; ret; 
0x0000000018a5a0: mov [rdi], dx; mov [rdi+r8-0x2], dx; vzeroupper; ret; 
0x00000000189903: mov [rdi], dx; mov byte ptr [rdi+0x2], 0x0; vzeroupper; ret; 
0x000000000a89c8: mov [rdi], dx; movzx edx, byte ptr [rsp-0x6]; mov [rdi+0x2], dl; ret; 
0x000000000b6e93: mov [rdi], dx; ret; 
0x000000000b7703: mov [rdi], dx; sub r8, 0x2; lea rdi, [rdi+0x2]; jne 0x00000000000b7fa0; ret; 
0x00000000189073: mov [rdi], dx; vzeroupper; ret; 
0x000000000baf73: mov [rdi], dx; xor ch, ch; mov [rdi+0x2], ch; ret; 
0x000000000a89d9: mov [rdi], eax; add rax, rdi; ret; 
0x000000000a8b26: mov [rdi], eax; lea rax, [rdi+rdx-0x1]; ret; 
0x0000000014a51f: mov [rdi], eax; mov [rdi+0x8], rax; ret; 
0x000000000a876a: mov [rdi], eax; mov rax, r12; pop r12; ret; 
0x000000000a870c: mov [rdi], eax; mov rax, r9; ret; 
0x0000000005b54f: mov [rdi], eax; mov rax, rdi; ret; 
0x000000000a8b56: mov [rdi], eax; movzx eax, byte ptr [rsp-0x6]; mov [rdi+0x2], al; lea rax, [rdi+rdx-0x1]; ret; 
0x000000000a8b84: mov [rdi], eax; movzx eax, byte ptr [rsp-0xc]; mov [rdi+0x4], al; lea rax, [rdi+rdx-0x1]; ret; 
0x000000000a8b9c: mov [rdi], eax; movzx eax, word ptr [rsp-0x14]; mov [rdi+0x4], ax; lea rax, [rdi+rdx-0x1]; ret; 
0x00000000056378: mov [rdi], eax; shl r9, cl; mov [rdi-0x8], r9; ret; 
0x00000000056492: mov [rdi], eax; shr r9, cl; mov [rdi+0x8], r9; ret; 
0x00000000048212: mov [rdi], eax; shr rax, 0x20; mov [rdi+0x4], ax; xor eax, eax; ret; 
0x00000000041fe4: mov [rdi], eax; subsd xmm0, xmm1; ret; 
0x00000000113786: mov [rdi], eax; xor eax, eax; ret; 
0x000000000bc993: mov [rdi], ebp; add [rax], eax; cmove rax, rdx; ret; 
0x000000000b8505: mov [rdi], ecx; lea rax, [rdi+0x4]; ret; 
0x000000000b8557: mov [rdi], ecx; lea rax, [rdi+0x8]; ret; 
0x000000000a8b70: mov [rdi], ecx; lea rax, [rdi+rdx-0x1]; ret; 
0x000000000b84e4: mov [rdi], ecx; mov [rdi+0x2], dh; lea rax, [rdi+0x2]; ret; 
0x000000000b6ea4: mov [rdi], ecx; mov [rdi+0x2], dh; ret; 
0x000000000b9327: mov [rdi], ecx; mov [rdi+0x2], dl; lea rax, [rdi+0x3]; ret; 
0x000000000b7b97: mov [rdi], ecx; mov [rdi+0x2], dl; ret; 
0x000000000baf87: mov [rdi], ecx; mov [rdi+0x2], dl; xor ch, ch; mov [rdi+0x3], ch; ret; 
0x000000000b8535: mov [rdi], ecx; mov [rdi+0x3], edx; lea rax, [rdi+0x6]; ret; 
0x000000000b9385: mov [rdi], ecx; mov [rdi+0x3], edx; lea rax, [rdi+0x7]; ret; 
0x000000000b6ee5: mov [rdi], ecx; mov [rdi+0x3], edx; ret; 
0x000000000bafe5: mov [rdi], ecx; mov [rdi+0x3], edx; xor ch, ch; mov [rdi+0x7], ch; ret; 
0x000000000b9355: mov [rdi], ecx; mov [rdi+0x4], dl; lea rax, [rdi+0x5]; ret; 
0x000000000b7bb5: mov [rdi], ecx; mov [rdi+0x4], dl; ret; 
0x000000000bafb5: mov [rdi], ecx; mov [rdi+0x4], dl; xor ch, ch; mov [rdi+0x5], ch; ret; 
0x000000000b8516: mov [rdi], ecx; mov [rdi+0x4], dx; lea rax, [rdi+0x5]; ret; 
0x000000000b9366: mov [rdi], ecx; mov [rdi+0x4], dx; lea rax, [rdi+0x6]; ret; 
0x000000000b6ed6: mov [rdi], ecx; mov [rdi+0x4], dx; ret; 
0x000000000bafc6: mov [rdi], ecx; mov [rdi+0x4], dx; xor ch, ch; mov [rdi+0x6], ch; ret; 
0x000000000b85c8: mov [rdi], ecx; mov [rdi+0x5], rdx; lea rax, [rdi+0xc]; ret; 
0x000000000b9428: mov [rdi], ecx; mov [rdi+0x5], rdx; lea rax, [rdi+0xd]; ret; 
0x000000000b6f48: mov [rdi], ecx; mov [rdi+0x5], rdx; ret; 
0x000000000bb088: mov [rdi], ecx; mov [rdi+0x5], rdx; xor ch, ch; mov [rdi+0xd], ch; ret; 
0x000000000b85e8: mov [rdi], ecx; mov [rdi+0x6], rdx; lea rax, [rdi+0xd]; ret; 
0x000000000b9448: mov [rdi], ecx; mov [rdi+0x6], rdx; lea rax, [rdi+0xe]; ret; 
0x000000000b6f58: mov [rdi], ecx; mov [rdi+0x6], rdx; ret; 
0x000000000bb0a8: mov [rdi], ecx; mov [rdi+0x6], rdx; xor ch, ch; mov [rdi+0xe], ch; ret; 
0x000000000b8587: mov [rdi], ecx; mov [rdi+0x7], edx; lea rax, [rdi+0xa]; ret; 
0x000000000b93e7: mov [rdi], ecx; mov [rdi+0x7], edx; lea rax, [rdi+0xb]; ret; 
0x000000000b6f27: mov [rdi], ecx; mov [rdi+0x7], edx; ret; 
0x000000000bb047: mov [rdi], ecx; mov [rdi+0x7], edx; xor ch, ch; mov [rdi+0xb], ch; ret; 
0x000000000b8608: mov [rdi], ecx; mov [rdi+0x7], rdx; lea rax, [rdi+0xe]; ret; 
0x000000000b9468: mov [rdi], ecx; mov [rdi+0x7], rdx; lea rax, [rdi+0xf]; ret; 
0x000000000b6f68: mov [rdi], ecx; mov [rdi+0x7], rdx; ret; 
0x000000000bb0c8: mov [rdi], ecx; mov [rdi+0x7], rdx; xor ch, ch; mov [rdi+0xf], ch; ret; 
0x000000000b93a7: mov [rdi], ecx; mov [rdi+0x8], dl; lea rax, [rdi+0x9]; ret; 
0x000000000b7bf7: mov [rdi], ecx; mov [rdi+0x8], dl; ret; 
0x000000000bb007: mov [rdi], ecx; mov [rdi+0x8], dl; xor ch, ch; mov [rdi+0x9], ch; ret; 
0x000000000b8568: mov [rdi], ecx; mov [rdi+0x8], dx; lea rax, [rdi+0x9]; ret; 
0x000000000b93c8: mov [rdi], ecx; mov [rdi+0x8], dx; lea rax, [rdi+0xa]; ret; 
0x000000000b6f18: mov [rdi], ecx; mov [rdi+0x8], dx; ret; 
0x000000000bb028: mov [rdi], ecx; mov [rdi+0x8], dx; xor ch, ch; mov [rdi+0xa], ch; ret; 
0x000000000b85a7: mov [rdi], ecx; mov [rdi+0x8], edx; lea rax, [rdi+0xb]; ret; 
0x000000000b9407: mov [rdi], ecx; mov [rdi+0x8], edx; lea rax, [rdi+0xc]; ret; 
0x000000000b6f37: mov [rdi], ecx; mov [rdi+0x8], edx; ret; 
0x000000000bb067: mov [rdi], ecx; mov [rdi+0x8], edx; xor ch, ch; mov [rdi+0xc], ch; ret; 
0x0000000018b1fa: mov [rdi], ecx; mov [rdi+r8-0x2], dx; lea rax, [rdi+r8]; vzeroupper; ret; 
0x0000000018991a: mov [rdi], ecx; mov [rdi+r8-0x2], dx; mov byte ptr [rdi+r8], 0x0; vzeroupper; ret; 
0x0000000018a4ca: mov [rdi], ecx; mov [rdi+r8-0x2], dx; vzeroupper; ret; 
0x0000000018b217: mov [rdi], ecx; mov [rdi+r8-0x4], edx; lea rax, [rdi+r8]; vzeroupper; ret; 
0x00000000189937: mov [rdi], ecx; mov [rdi+r8-0x4], edx; mov byte ptr [rdi+r8], 0x0; vzeroupper; ret; 
0x0000000018a4e7: mov [rdi], ecx; mov [rdi+r8-0x4], edx; vzeroupper; ret; 
0x0000000018b239: mov [rdi], ecx; mov [rdi+r8-0x8], rdx; lea rax, [rdi+r8]; vzeroupper; ret; 
0x00000000189959: mov [rdi], ecx; mov [rdi+r8-0x8], rdx; mov byte ptr [rdi+r8], 0x0; vzeroupper; ret; 
0x0000000018a509: mov [rdi], ecx; mov [rdi+r8-0x8], rdx; vzeroupper; ret; 
0x0000000018ab69: mov [rdi], ecx; mov [rdi+rdx-0x7], r9; lea rax, [rdi+rdx]; vzeroupper; ret; 
0x000000001890b9: mov [rdi], ecx; mov [rdi+rdx-0x7], r9; vzeroupper; ret; 
0x00000000190137: mov [rdi], ecx; mov [rsi-0x2], cx; ret; 
0x0000000019012b: mov [rdi], ecx; mov [rsi-0x4], ecx; ret; 
0x0000000018ab14: mov [rdi], ecx; mov byte ptr [rdi+0x2], 0x0; lea rax, [rdi+0x2]; vzeroupper; ret; 
0x00000000189084: mov [rdi], ecx; mov byte ptr [rdi+0x2], 0x0; vzeroupper; ret; 
0x000000001890a2: mov [rdi], ecx; mov ecx, [rsi+rdx-0x3]; mov [rdi+rdx-0x3], ecx; vzeroupper; ret; 
0x000000000421ae: mov [rdi], ecx; ret; 
0x000000000b7765: mov [rdi], ecx; sub r8, 0x5; lea rdi, [rdi+0x5]; jne 0x00000000000b7fa0; ret; 
0x000000000b77e7: mov [rdi], ecx; sub r8, 0x9; lea rdi, [rdi+0x9]; jne 0x00000000000b7fa0; ret; 
0x0000000018bb63: mov [rdi], ecx; vzeroupper; ret; 
0x000000000a8996: mov [rdi], edx; add rax, rdi; ret; 
0x0000000008ac83: mov [rdi], edx; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000041dc2: mov [rdi], edx; fstp tbyte ptr [rsp-0x18], st; mov [rsp-0x10], ax; fld st, tbyte ptr [rsp-0x18]; ret; 
0x000000000b84d4: mov [rdi], edx; lea rax, [rdi+0x1]; ret; 
0x0000000018ab04: mov [rdi], edx; lea rax, [rdi+0x1]; vzeroupper; ret; 
0x000000000b9314: mov [rdi], edx; lea rax, [rdi+0x2]; ret; 
0x0000000018b1e4: mov [rdi], edx; lea rax, [rdi+0x2]; vzeroupper; ret; 
0x000000000b84f2: mov [rdi], edx; lea rax, [rdi+0x3]; ret; 
0x0000000018ab32: mov [rdi], edx; lea rax, [rdi+0x3]; vzeroupper; ret; 
0x000000000b9342: mov [rdi], edx; lea rax, [rdi+0x4]; ret; 
0x000000000b8544: mov [rdi], edx; lea rax, [rdi+0x7]; ret; 
0x000000000b9394: mov [rdi], edx; lea rax, [rdi+0x8]; ret; 
0x000000000b7eb0: mov [rdi], edx; mov [rdi+0x4], dl; ret; 
0x000000000b7ec0: mov [rdi], edx; mov [rdi+0x4], dx; ret; 
0x000000000b7f31: mov [rdi], edx; mov [rdi+0x5], rdx; ret; 
0x000000000b7f41: mov [rdi], edx; mov [rdi+0x6], rdx; ret; 
0x000000000b7f11: mov [rdi], edx; mov [rdi+0x7], edx; ret; 
0x000000000b7ef1: mov [rdi], edx; mov [rdi+0x8], dl; ret; 
0x000000000b7f01: mov [rdi], edx; mov [rdi+0x8], dx; ret; 
0x000000000b7f21: mov [rdi], edx; mov [rdi+0x8], edx; ret; 
0x0000000018a5a1: mov [rdi], edx; mov [rdi+r8-0x2], dx; vzeroupper; ret; 
0x0000000018a5b0: mov [rdi], edx; mov [rdi+r8-0x4], edx; vzeroupper; ret; 
0x0000000018a5c1: mov [rdi], edx; mov [rdi+r8-0x8], rdx; vzeroupper; ret; 
0x00000000189904: mov [rdi], edx; mov byte ptr [rdi+0x2], 0x0; vzeroupper; ret; 
0x000000000424f9: mov [rdi], edx; movd xmm0, eax; ret; 
0x000000000a89c9: mov [rdi], edx; movzx edx, byte ptr [rsp-0x6]; mov [rdi+0x2], dl; ret; 
0x000000000a89e7: mov [rdi], edx; movzx edx, byte ptr [rsp-0xc]; mov [rdi+0x4], dl; ret; 
0x000000000a89ff: mov [rdi], edx; movzx edx, word ptr [rsp+0xc]; mov [rdi+0x4], dx; ret; 
0x00000000041ffe: mov [rdi], edx; ret; 
0x00000000047da1: mov [rdi], edx; shr ecx, 0x10; and ecx, 0x3ff; xor eax, ecx; ret; 
0x000000000b7704: mov [rdi], edx; sub r8, 0x2; lea rdi, [rdi+0x2]; jne 0x00000000000b7fa0; ret; 
0x000000000b7742: mov [rdi], edx; sub r8, 0x4; lea rdi, [rdi+0x4]; jne 0x00000000000b7fa0; ret; 
0x000000000b77c4: mov [rdi], edx; sub r8, 0x8; lea rdi, [rdi+0x8]; jne 0x00000000000b7fa0; ret; 
0x0000000004234c: mov [rdi], edx; subss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x00000000189074: mov [rdi], edx; vzeroupper; ret; 
0x000000000baf74: mov [rdi], edx; xor ch, ch; mov [rdi+0x2], ch; ret; 
0x000000000bafa2: mov [rdi], edx; xor ch, ch; mov [rdi+0x4], ch; ret; 
0x000000000baff4: mov [rdi], edx; xor ch, ch; mov [rdi+0x8], ch; ret; 
0x000000000a8b41: mov [rdi], esi; lea rax, [rdi+rdx-0x1]; ret; 
0x0000000018fa67: mov [rdi], esi; mov [r9-0x2], cx; ret; 
0x0000000018fa53: mov [rdi], esi; mov [r9-0x4], ecx; ret; 
0x0000000018fa42: mov [rdi], esi; mov [r9-0x8], rcx; ret; 
0x00000000057ba6: mov [rdi], esi; mov [rdx], eax; mov eax, 0x1; ret; 
0x00000000042366: mov [rdi], esi; ret; 
0x0000000010c7a1: mov [rdi], esi; xor eax, eax; ret; 
0x0000000014a51e: mov [rdi], r8; mov [rdi+0x8], rax; ret; 
0x000000000a8769: mov [rdi], r8; mov rax, r12; pop r12; ret; 
0x00000000056377: mov [rdi], r8; shl r9, cl; mov [rdi-0x8], r9; ret; 
0x00000000056491: mov [rdi], r8; shr r9, cl; mov [rdi+0x8], r9; ret; 
0x000000000a89d8: mov [rdi], r8d; add rax, rdi; ret; 
0x0000000005634c: mov [rdi], r9; ret; 
0x000000000a8b25: mov [rdi], rax; lea rax, [rdi+rdx-0x1]; ret; 
0x000000000a870b: mov [rdi], rax; mov rax, r9; ret; 
0x0000000005b54e: mov [rdi], rax; mov rax, rdi; ret; 
0x00000000041fe3: mov [rdi], rax; subsd xmm0, xmm1; ret; 
0x000000000b8556: mov [rdi], rcx; lea rax, [rdi+0x8]; ret; 
0x000000000b85c7: mov [rdi], rcx; mov [rdi+0x5], rdx; lea rax, [rdi+0xc]; ret; 
0x000000000b9427: mov [rdi], rcx; mov [rdi+0x5], rdx; lea rax, [rdi+0xd]; ret; 
0x000000000b6f47: mov [rdi], rcx; mov [rdi+0x5], rdx; ret; 
0x000000000bb087: mov [rdi], rcx; mov [rdi+0x5], rdx; xor ch, ch; mov [rdi+0xd], ch; ret; 
0x000000000b85e7: mov [rdi], rcx; mov [rdi+0x6], rdx; lea rax, [rdi+0xd]; ret; 
0x000000000b9447: mov [rdi], rcx; mov [rdi+0x6], rdx; lea rax, [rdi+0xe]; ret; 
0x000000000b6f57: mov [rdi], rcx; mov [rdi+0x6], rdx; ret; 
0x000000000bb0a7: mov [rdi], rcx; mov [rdi+0x6], rdx; xor ch, ch; mov [rdi+0xe], ch; ret; 
0x000000000b8586: mov [rdi], rcx; mov [rdi+0x7], edx; lea rax, [rdi+0xa]; ret; 
0x000000000b93e6: mov [rdi], rcx; mov [rdi+0x7], edx; lea rax, [rdi+0xb]; ret; 
0x000000000b6f26: mov [rdi], rcx; mov [rdi+0x7], edx; ret; 
0x000000000bb046: mov [rdi], rcx; mov [rdi+0x7], edx; xor ch, ch; mov [rdi+0xb], ch; ret; 
0x000000000b8607: mov [rdi], rcx; mov [rdi+0x7], rdx; lea rax, [rdi+0xe]; ret; 
0x000000000b9467: mov [rdi], rcx; mov [rdi+0x7], rdx; lea rax, [rdi+0xf]; ret; 
0x000000000b6f67: mov [rdi], rcx; mov [rdi+0x7], rdx; ret; 
0x000000000bb0c7: mov [rdi], rcx; mov [rdi+0x7], rdx; xor ch, ch; mov [rdi+0xf], ch; ret; 
0x000000000b93a6: mov [rdi], rcx; mov [rdi+0x8], dl; lea rax, [rdi+0x9]; ret; 
0x000000000b7bf6: mov [rdi], rcx; mov [rdi+0x8], dl; ret; 
0x000000000bb006: mov [rdi], rcx; mov [rdi+0x8], dl; xor ch, ch; mov [rdi+0x9], ch; ret; 
0x000000000b8567: mov [rdi], rcx; mov [rdi+0x8], dx; lea rax, [rdi+0x9]; ret; 
0x000000000b93c7: mov [rdi], rcx; mov [rdi+0x8], dx; lea rax, [rdi+0xa]; ret; 
0x000000000b6f17: mov [rdi], rcx; mov [rdi+0x8], dx; ret; 
0x000000000bb027: mov [rdi], rcx; mov [rdi+0x8], dx; xor ch, ch; mov [rdi+0xa], ch; ret; 
0x000000000b85a6: mov [rdi], rcx; mov [rdi+0x8], edx; lea rax, [rdi+0xb]; ret; 
0x000000000b9406: mov [rdi], rcx; mov [rdi+0x8], edx; lea rax, [rdi+0xc]; ret; 
0x000000000b6f36: mov [rdi], rcx; mov [rdi+0x8], edx; ret; 
0x000000000bb066: mov [rdi], rcx; mov [rdi+0x8], edx; xor ch, ch; mov [rdi+0xc], ch; ret; 
0x0000000018b238: mov [rdi], rcx; mov [rdi+r8-0x8], rdx; lea rax, [rdi+r8]; vzeroupper; ret; 
0x00000000189958: mov [rdi], rcx; mov [rdi+r8-0x8], rdx; mov byte ptr [rdi+r8], 0x0; vzeroupper; ret; 
0x0000000018a508: mov [rdi], rcx; mov [rdi+r8-0x8], rdx; vzeroupper; ret; 
0x0000000018ab68: mov [rdi], rcx; mov [rdi+rdx-0x7], r9; lea rax, [rdi+rdx]; vzeroupper; ret; 
0x000000001890b8: mov [rdi], rcx; mov [rdi+rdx-0x7], r9; vzeroupper; ret; 
0x000000000b6f06: mov [rdi], rcx; ret; 
0x000000000b77e6: mov [rdi], rcx; sub r8, 0x9; lea rdi, [rdi+0x9]; jne 0x00000000000b7fa0; ret; 
0x0000000018bb62: mov [rdi], rcx; vzeroupper; ret; 
0x000000000a8995: mov [rdi], rdx; add rax, rdi; ret; 
0x000000000b8543: mov [rdi], rdx; lea rax, [rdi+0x7]; ret; 
0x000000000b9393: mov [rdi], rdx; lea rax, [rdi+0x8]; ret; 
0x000000000b7f30: mov [rdi], rdx; mov [rdi+0x5], rdx; ret; 
0x000000000b7f40: mov [rdi], rdx; mov [rdi+0x6], rdx; ret; 
0x000000000b7f10: mov [rdi], rdx; mov [rdi+0x7], edx; ret; 
0x000000000b7ef0: mov [rdi], rdx; mov [rdi+0x8], dl; ret; 
0x000000000b7f00: mov [rdi], rdx; mov [rdi+0x8], dx; ret; 
0x000000000b7f20: mov [rdi], rdx; mov [rdi+0x8], edx; ret; 
0x0000000018a5c0: mov [rdi], rdx; mov [rdi+r8-0x8], rdx; vzeroupper; ret; 
0x00000000041ffd: mov [rdi], rdx; ret; 
0x000000000b77c3: mov [rdi], rdx; sub r8, 0x8; lea rdi, [rdi+0x8]; jne 0x00000000000b7fa0; ret; 
0x000000000baff3: mov [rdi], rdx; xor ch, ch; mov [rdi+0x8], ch; ret; 
0x0000000018fa41: mov [rdi], rsi; mov [r9-0x8], rcx; ret; 
0x00000000057ba5: mov [rdi], rsi; mov [rdx], eax; mov eax, 0x1; ret; 
0x00000000057b8a: mov [rdi], rsi; ret; 
0x000000000a8b40: mov [rdi], si; lea rax, [rdi+rdx-0x1]; ret; 
0x0000000018fa66: mov [rdi], si; mov [r9-0x2], cx; ret; 
0x000000000bbc5d: mov [rdi], si; ret; 
0x0000000010c7a0: mov [rdi], si; xor eax, eax; ret; 
0x000000000a89a0: mov [rdi], sil; add rax, rdi; ret; 
0x000000000b67ca: mov [rdx+0x10], ah; mov rax, rdi; ret; 
0x0000000015079c: mov [rdx+0x10], eax; mov eax, 0x1; ret; 
0x00000000121cc9: mov [rdx+0x10], ecx; mov [r8], rax; mov qword ptr [rip+0xca686], 0x0; ret; 
0x00000000121c49: mov [rdx+0x10], ecx; mov [r8], rax; mov qword ptr [rip+0xca706], 0x0; ret; 
0x00000000121cc8: mov [rdx+0x10], rcx; mov [r8], rax; mov qword ptr [rip+0xca686], 0x0; ret; 
0x00000000121c48: mov [rdx+0x10], rcx; mov [r8], rax; mov qword ptr [rip+0xca706], 0x0; ret; 
0x000000000b39f2: mov [rdx+0x1], ah; mov al, [rcx]; mov [rdx], al; mov rax, rdi; ret; 
0x0000000009789d: mov [rdx+0x1], bh; add [rax], al; mov rax, [rip+0x154517]; call qword ptr [rax]; 
0x000000000860f4: mov [rdx+0x20], esi; mov [rcx], eax; ret; 
0x000000001491c8: mov [rdx+0x20], esi; ret; 
0x000000000860f3: mov [rdx+0x20], rsi; mov [rcx], eax; ret; 
0x000000001491c7: mov [rdx+0x20], rsi; ret; 
0x0000000009592f: mov [rdx+0x28], ecx; mov rax, [rdi+0x28]; mov [rax+0x20], rdx; add rsp, 0x8; ret; 
0x0000000009592e: mov [rdx+0x28], rcx; mov rax, [rdi+0x28]; mov [rax+0x20], rdx; add rsp, 0x8; ret; 
0x000000000b3a02: mov [rdx+0x2], ah; mov ax, [rcx]; mov [rdx], ax; mov rax, rdi; ret; 
0x0000000017aa09: mov [rdx+0x2], al; lea rax, [rdx+0x2]; ret; 
0x000000000b3a1e: mov [rdx+0x2], al; mov rax, rdi; ret; 
0x0000000017aa67: mov [rdx+0x3], eax; lea rax, [rdx+0x6]; ret; 
0x000000000b3a8c: mov [rdx+0x3], eax; mov rax, rdi; ret; 
0x000000000b3a32: mov [rdx+0x4], ah; mov eax, [rcx]; mov [rdx], eax; mov rax, rdi; ret; 
0x0000000017aa37: mov [rdx+0x4], al; lea rax, [rdx+0x4]; ret; 
0x000000000b3a4c: mov [rdx+0x4], al; mov rax, rdi; ret; 
0x0000000017aa48: mov [rdx+0x4], ax; lea rax, [rdx+0x5]; ret; 
0x000000000b3a6d: mov [rdx+0x4], ax; mov rax, rdi; ret; 
0x0000000017aa49: mov [rdx+0x4], eax; lea rax, [rdx+0x5]; ret; 
0x000000000cb1b6: mov [rdx+0x4], eax; mov [rdx], eax; xor eax, eax; ret; 
0x000000000b3a6e: mov [rdx+0x4], eax; mov rax, rdi; ret; 
0x000000000cb1b5: mov [rdx+0x4], r8d; mov [rdx], eax; xor eax, eax; ret; 
0x000000001491a2: mov [rdx+0x58], edi; mov [rdx+0x68], rcx; ret; 
0x000000001491a1: mov [rdx+0x58], rdi; mov [rdx+0x68], rcx; ret; 
0x0000000017aa79: mov [rdx+0x5], eax; lea rax, [rdx+0x8]; ret; 
0x0000000017aafb: mov [rdx+0x5], eax; lea rax, [rdx+0xc]; ret; 
0x00000000176729: mov [rdx+0x5], eax; mov rax, rdi; ret; 
0x0000000017aafa: mov [rdx+0x5], rax; lea rax, [rdx+0xc]; ret; 
0x0000000017676a: mov [rdx+0x5], rax; mov rax, rdi; ret; 
0x0000000014cffa: mov [rdx+0x68], eax; movzx eax, word ptr [r8+0x88]; mov [rdx+0x6c], ax; mov eax, 0x1; ret; 
0x000000001491a6: mov [rdx+0x68], ecx; ret; 
0x000000001491a5: mov [rdx+0x68], rcx; ret; 
0x0000000017aa99: mov [rdx+0x6], eax; lea rax, [rdx+0x9]; ret; 
0x0000000017ab1b: mov [rdx+0x6], eax; lea rax, [rdx+0xd]; ret; 
0x00000000176739: mov [rdx+0x6], eax; mov rax, rdi; ret; 
0x0000000017ab1a: mov [rdx+0x6], rax; lea rax, [rdx+0xd]; ret; 
0x0000000017678a: mov [rdx+0x6], rax; mov rax, rdi; ret; 
0x0000000014d005: mov [rdx+0x6c], ax; mov eax, 0x1; ret; 
0x0000000014d006: mov [rdx+0x6c], eax; mov eax, 0x1; ret; 
0x0000000017aab9: mov [rdx+0x7], eax; lea rax, [rdx+0xa]; ret; 
0x0000000017cd83: mov [rdx+0x7], eax; lea rax, [rdx+0xe]; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x0000000017ab3b: mov [rdx+0x7], eax; lea rax, [rdx+0xe]; ret; 
0x000000000b3b10: mov [rdx+0x7], eax; mov rax, rdi; ret; 
0x0000000017cd82: mov [rdx+0x7], rax; lea rax, [rdx+0xe]; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x0000000017ab3a: mov [rdx+0x7], rax; lea rax, [rdx+0xe]; ret; 
0x000000001767aa: mov [rdx+0x7], rax; mov rax, rdi; ret; 
0x000000000b6760: mov [rdx+0x8], ah; mov rax, rdi; ret; 
0x000000000b3aa2: mov [rdx+0x8], ah; movlpd xmm0, [rcx]; movlpd [rdx], xmm0; mov rax, rdi; ret; 
0x000000000b3ad0: mov [rdx+0x8], al; mov rax, rdi; ret; 
0x000000000b3af1: mov [rdx+0x8], ax; mov rax, rdi; ret; 
0x0000000017aad9: mov [rdx+0x8], eax; lea rax, [rdx+0xb]; ret; 
0x0000000017a9cb: mov [rdx+0x8], eax; lea rax, [rdx+0xf]; ret; 
0x000000000b3af2: mov [rdx+0x8], eax; mov rax, rdi; ret; 
0x0000000002fdef: mov [rdx+0x8], eax; pop rbx; ret; 
0x00000000116de1: mov [rdx+0x8], eax; test rax, rax; je short 0x0000000000116dec; mov [rax], rdx; ret; 
0x0000000006304a: mov [rdx+0x8], ecx; mov dword ptr [rdx+0x4], 0x1; ret; 
0x0000000017a9ca: mov [rdx+0x8], rax; lea rax, [rdx+0xf]; ret; 
0x0000000017669a: mov [rdx+0x8], rax; mov rax, rdi; ret; 
0x00000000116de0: mov [rdx+0x8], rax; test rax, rax; je short 0x0000000000116dec; mov [rax], rdx; ret; 
0x00000000063049: mov [rdx+0x8], rcx; mov dword ptr [rdx+0x4], 0x1; ret; 
0x000000001506a4: mov [rdx+0xc], eax; mov eax, 0x1; ret; 
0x0000000008e5ed: mov [rdx+0xe0], ecx; pop rbx; ret; 
0x0000000008282b: mov [rdx+0xe0], ecx; ret; 
0x0000000008e5ec: mov [rdx+0xe0], rcx; pop rbx; ret; 
0x0000000008282a: mov [rdx+0xe0], rcx; ret; 
0x0000000013c269: mov [rdx-0x1], al; mov [rax], r10; lea eax, [r9+r8+0x2]; pop rbx; ret; 
0x0000000011ac9d: mov [rdx], al; add [rax], al; mov rdi, [r15]; call rbx; 
0x0000000017a9e2: mov [rdx], al; lea rax, [rdx]; ret; 
0x0000000008df5f: mov [rdx], al; mov eax, r8d; ret; 
0x000000000b39f7: mov [rdx], al; mov rax, rdi; ret; 
0x0000000017a9f3: mov [rdx], ax; lea rax, [rdx+0x1]; ret; 
0x0000000017aa03: mov [rdx], ax; mov al, [rcx+0x2]; mov [rdx+0x2], al; lea rax, [rdx+0x2]; ret; 
0x000000000b3a18: mov [rdx], ax; mov al, [rcx+0x2]; mov [rdx+0x2], al; mov rax, rdi; ret; 
0x000000000b3a08: mov [rdx], ax; mov rax, rdi; ret; 
0x00000000121fe5: mov [rdx], ax; ret; 
0x000000000241e7: mov [rdx], ds; sbb [rax], eax; ret; 
0x000000001142cb: mov [rdx], eax; cmp rdi, rax; ja short 0x00000000001142f8; xor eax, eax; ret; 
0x0000000017a9f4: mov [rdx], eax; lea rax, [rdx+0x1]; ret; 
0x0000000017aa22: mov [rdx], eax; lea rax, [rdx+0x3]; ret; 
0x0000000017ce2f: mov [rdx], eax; lea rax, [rdx+0x7]; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x0000000017a974: mov [rdx], eax; lea rax, [rdx+0x7]; ret; 
0x0000000017aa04: mov [rdx], eax; mov al, [rcx+0x2]; mov [rdx+0x2], al; lea rax, [rdx+0x2]; ret; 
0x000000000b3a19: mov [rdx], eax; mov al, [rcx+0x2]; mov [rdx+0x2], al; mov rax, rdi; ret; 
0x0000000017aa32: mov [rdx], eax; mov al, [rcx+0x4]; mov [rdx+0x4], al; lea rax, [rdx+0x4]; ret; 
0x000000000b3a47: mov [rdx], eax; mov al, [rcx+0x4]; mov [rdx+0x4], al; mov rax, rdi; ret; 
0x0000000017aa42: mov [rdx], eax; mov ax, [rcx+0x4]; mov [rdx+0x4], ax; lea rax, [rdx+0x5]; ret; 
0x000000000b3a67: mov [rdx], eax; mov ax, [rcx+0x4]; mov [rdx+0x4], ax; mov rax, rdi; ret; 
0x00000000057ba8: mov [rdx], eax; mov eax, 0x1; ret; 
0x00000000057dd7: mov [rdx], eax; mov eax, 0x2; ret; 
0x0000000004345a: mov [rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000017aa62: mov [rdx], eax; mov eax, [rcx+0x3]; mov [rdx+0x3], eax; lea rax, [rdx+0x6]; ret; 
0x000000000b3a87: mov [rdx], eax; mov eax, [rcx+0x3]; mov [rdx+0x3], eax; mov rax, rdi; ret; 
0x0000000017aa74: mov [rdx], eax; mov eax, [rcx+0x5]; mov [rdx+0x5], eax; lea rax, [rdx+0x8]; ret; 
0x00000000176724: mov [rdx], eax; mov eax, [rcx+0x5]; mov [rdx+0x5], eax; mov rax, rdi; ret; 
0x0000000017aa94: mov [rdx], eax; mov eax, [rcx+0x6]; mov [rdx+0x6], eax; lea rax, [rdx+0x9]; ret; 
0x00000000176734: mov [rdx], eax; mov eax, [rcx+0x6]; mov [rdx+0x6], eax; mov rax, rdi; ret; 
0x0000000017aab4: mov [rdx], eax; mov eax, [rcx+0x7]; mov [rdx+0x7], eax; lea rax, [rdx+0xa]; ret; 
0x00000000176744: mov [rdx], eax; mov eax, [rcx+0x7]; mov [rdx+0x7], eax; mov rax, rdi; ret; 
0x0000000017aad4: mov [rdx], eax; mov eax, [rcx+0x8]; mov [rdx+0x8], eax; lea rax, [rdx+0xb]; ret; 
0x00000000176754: mov [rdx], eax; mov eax, [rcx+0x8]; mov [rdx+0x8], eax; mov rax, rdi; ret; 
0x000000001028c0: mov [rdx], eax; mov eax, r8d; ret; 
0x00000000102860: mov [rdx], eax; mov eax, r9d; ret; 
0x000000001498da: mov [rdx], eax; mov edx, ebx; call qword ptr [r13+0x10]; 
0x000000000482ba: mov [rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000017aaf4: mov [rdx], eax; mov rax, [rcx+0x5]; mov [rdx+0x5], rax; lea rax, [rdx+0xc]; ret; 
0x00000000176764: mov [rdx], eax; mov rax, [rcx+0x5]; mov [rdx+0x5], rax; mov rax, rdi; ret; 
0x0000000017ab14: mov [rdx], eax; mov rax, [rcx+0x6]; mov [rdx+0x6], rax; lea rax, [rdx+0xd]; ret; 
0x00000000176784: mov [rdx], eax; mov rax, [rcx+0x6]; mov [rdx+0x6], rax; mov rax, rdi; ret; 
0x0000000017ab34: mov [rdx], eax; mov rax, [rcx+0x7]; mov [rdx+0x7], rax; lea rax, [rdx+0xe]; ret; 
0x000000001767a4: mov [rdx], eax; mov rax, [rcx+0x7]; mov [rdx+0x7], rax; mov rax, rdi; ret; 
0x0000000017a9c4: mov [rdx], eax; mov rax, [rcx+0x8]; mov [rdx+0x8], rax; lea rax, [rdx+0xf]; ret; 
0x00000000176694: mov [rdx], eax; mov rax, [rcx+0x8]; mov [rdx+0x8], rax; mov rax, rdi; ret; 
0x000000001142e2: mov [rdx], eax; mov rax, [rip+0xd7bdd]; mov qword ptr [rax], 0xffffffffffffffff; xor eax, eax; ret; 
0x000000000d4ada: mov [rdx], eax; mov rax, r8; add rsp, 0x8; ret; 
0x000000000b3a09: mov [rdx], eax; mov rax, rdi; ret; 
0x00000000034581: mov [rdx], eax; ret; 
0x000000000cb1b9: mov [rdx], eax; xor eax, eax; ret; 
0x000000000434e4: mov [rdx], ebx; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x2]; mov eax, 0xffffffff; ret; 
0x000000000871dc: mov [rdx], ecx; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000033d37: mov [rdx], ecx; mov rdx, [rax+0xc0]; mov rax, [rip+0x1b80a1]; mov [rax], rdx; ret; 
0x000000001025ab: mov [rdx], ecx; pop rdx; pop rcx; pop rbx; ret; 
0x000000000a8642: mov [rdx], ecx; ret; 
0x000000000dd030: mov [rdx], edi; xor eax, eax; ret; 
0x00000000085447: mov [rdx], esp; add rsp, 0x8; pop rbp; pop r12; ret; 
0x00000000085446: mov [rdx], r12d; add rsp, 0x8; pop rbp; pop r12; ret; 
0x000000001142ca: mov [rdx], rax; cmp rdi, rax; ja short 0x00000000001142f8; xor eax, eax; ret; 
0x0000000017ce2e: mov [rdx], rax; lea rax, [rdx+0x7]; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x0000000017a973: mov [rdx], rax; lea rax, [rdx+0x7]; ret; 
0x000000001212a3: mov [rdx], rax; mov eax, 0x1; ret; 
0x0000000017aa73: mov [rdx], rax; mov eax, [rcx+0x5]; mov [rdx+0x5], eax; lea rax, [rdx+0x8]; ret; 
0x00000000176723: mov [rdx], rax; mov eax, [rcx+0x5]; mov [rdx+0x5], eax; mov rax, rdi; ret; 
0x0000000017aa93: mov [rdx], rax; mov eax, [rcx+0x6]; mov [rdx+0x6], eax; lea rax, [rdx+0x9]; ret; 
0x00000000176733: mov [rdx], rax; mov eax, [rcx+0x6]; mov [rdx+0x6], eax; mov rax, rdi; ret; 
0x0000000017aab3: mov [rdx], rax; mov eax, [rcx+0x7]; mov [rdx+0x7], eax; lea rax, [rdx+0xa]; ret; 
0x00000000176743: mov [rdx], rax; mov eax, [rcx+0x7]; mov [rdx+0x7], eax; mov rax, rdi; ret; 
0x0000000017aad3: mov [rdx], rax; mov eax, [rcx+0x8]; mov [rdx+0x8], eax; lea rax, [rdx+0xb]; ret; 
0x00000000176753: mov [rdx], rax; mov eax, [rcx+0x8]; mov [rdx+0x8], eax; mov rax, rdi; ret; 
0x0000000017aaf3: mov [rdx], rax; mov rax, [rcx+0x5]; mov [rdx+0x5], rax; lea rax, [rdx+0xc]; ret; 
0x00000000176763: mov [rdx], rax; mov rax, [rcx+0x5]; mov [rdx+0x5], rax; mov rax, rdi; ret; 
0x0000000017ab13: mov [rdx], rax; mov rax, [rcx+0x6]; mov [rdx+0x6], rax; lea rax, [rdx+0xd]; ret; 
0x00000000176783: mov [rdx], rax; mov rax, [rcx+0x6]; mov [rdx+0x6], rax; mov rax, rdi; ret; 
0x0000000017ab33: mov [rdx], rax; mov rax, [rcx+0x7]; mov [rdx+0x7], rax; lea rax, [rdx+0xe]; ret; 
0x000000001767a3: mov [rdx], rax; mov rax, [rcx+0x7]; mov [rdx+0x7], rax; mov rax, rdi; ret; 
0x0000000017a9c3: mov [rdx], rax; mov rax, [rcx+0x8]; mov [rdx+0x8], rax; lea rax, [rdx+0xf]; ret; 
0x00000000176693: mov [rdx], rax; mov rax, [rcx+0x8]; mov [rdx+0x8], rax; mov rax, rdi; ret; 
0x00000000176643: mov [rdx], rax; mov rax, rdi; ret; 
0x00000000034580: mov [rdx], rax; ret; 
0x000000000871db: mov [rdx], rcx; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000033d36: mov [rdx], rcx; mov rdx, [rax+0xc0]; mov rax, [rip+0x1b80a1]; mov [rax], rdx; ret; 
0x000000000a8641: mov [rdx], rcx; ret; 
0x0000000009f8d4: mov [rip+0x14f66e], eax; add rsp, 0x8; ret; 
0x0000000009f8d3: mov [rip+0x14f66e], rax; add rsp, 0x8; ret; 
0x0000000009f896: mov [rip+0x14f6ac], eax; ret; 
0x0000000009f895: mov [rip+0x14f6ac], rax; ret; 
0x00000000095262: mov [rip+0x157044], eax; ret; 
0x0000000009523c: mov [rip+0x15704e], eax; ret; 
0x0000000009523b: mov [rip+0x15704e], rax; ret; 
0x00000000095213: mov [rip+0x15706f], eax; ret; 
0x00000000095212: mov [rip+0x15706f], rax; ret; 
0x000000000951f3: mov [rip+0x157087], eax; ret; 
0x000000000951f2: mov [rip+0x157087], rax; ret; 
0x00000000094ed9: mov [rip+0x157409], eax; ret; 
0x00000000094ed8: mov [rip+0x157409], rax; ret; 
0x00000000094ec2: mov [rip+0x157418], eax; ret; 
0x00000000094ec1: mov [rip+0x157418], rax; ret; 
0x00000000094ea8: mov [rip+0x157422], edx; ret; 
0x00000000094ea7: mov [rip+0x157422], rdx; ret; 
0x00000000094e69: mov [rip+0x157429], eax; ret; 
0x00000000094e68: mov [rip+0x157429], rax; ret; 
0x00000000094e59: mov [rip+0x157441], eax; ret; 
0x00000000094e58: mov [rip+0x157441], rax; ret; 
0x000000000952a6: mov [rip+0x159bf4], eax; ret; 
0x000000000952a5: mov [rip+0x159bf4], rax; ret; 
0x00000000095278: mov [rip+0x159c0e], eax; ret; 
0x000000000938d0: mov [rip+0x15aef2], ebx; add dword ptr [rip+0x15aee7], 0x1; pop rbx; ret; 
0x000000000938cf: mov [rip+0x15aef2], rbx; add dword ptr [rip+0x15aee7], 0x1; pop rbx; ret; 
0x00000000052a22: mov [rip+0x19bc3d], al; lea rax, [rip+0x19bc31]; mov byte ptr [rax+rdx], 0x0; ret; 
0x00000000044123: mov [rip+0x1a807f], eax; mov eax, edx; ret; 
0x00000000044100: mov [rip+0x1a80a6], edx; ret; 
0x00000000032883: mov [rip+0x1bb274], dl; ret; 
0x00000000023a50: mov [rip+0x1cd8d2], eax; ret; 
0x00000000023a4f: mov [rip+0x1cd8d2], rax; ret; 
0x000000000226b8: mov [rip+0x1ceae2], edx; pop rax; pop rbx; pop rbp; ret; 
0x000000000226b7: mov [rip+0x1ceae2], rdx; pop rax; pop rbx; pop rbp; ret; 
0x000000001988f4: mov [rip+0x55ea6], ebx; test rbx, rbx; jne short 0x00000000001988e0; pop rbx; ret; 
0x000000001988f3: mov [rip+0x55ea6], rbx; test rbx, rbx; jne short 0x00000000001988e0; pop rbx; ret; 
0x0000000011364c: mov [rip+0x64d8f700], cl; mov [rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000160cc0: mov [rip+0x8e1ca], esi; ret; 
0x00000000160cbf: mov [rip+0x8e1ca], rsi; ret; 
0x00000000160cb7: mov [rip+0x8e1db], eax; xor eax, eax; mov [rip+0x8e1ca], rsi; ret; 
0x00000000160cb6: mov [rip+0x8e1db], r8; xor eax, eax; mov [rip+0x8e1ca], rsi; ret; 
0x00000000146ec9: mov [rip+0xa9cad], eax; add rsp, 0x8; ret; 
0x00000000138553: mov [rip+0xb5387], eax; add rsp, 0x8; ret; 
0x00000000138552: mov [rip+0xb5387], rax; add rsp, 0x8; ret; 
0x0000000012d04c: mov [rip+0xc2e26], eax; pop rbp; ret; 
0x0000000012d04b: mov [rip+0xc2e26], rax; pop rbp; ret; 
0x0000000011317c: mov [rip+0xc76400], cs; or [rax], eax; add [rax], al; mov eax, 0xffffffff; ret; 
0x00000000121b29: mov [rip+0xca831], ebx; pop rbx; ret; 
0x00000000121b28: mov [rip+0xca831], rbx; pop rbx; ret; 
0x00000000121b0f: mov [rip+0xca84b], ebx; pop rbx; ret; 
0x00000000121b0e: mov [rip+0xca84b], rbx; pop rbx; ret; 
0x0000000011873e: mov [rip+0xd3c04], edi; ret; 
0x0000000011771e: mov [rip+0xd806c], eax; add rsp, 0x8; ret; 
0x0000000011771d: mov [rip+0xd806c], rax; add rsp, 0x8; ret; 
0x000000001176ad: mov [rip+0xd80dd], eax; mov rax, r8; add rsp, 0x8; ret; 
0x000000001176ac: mov [rip+0xd80dd], rax; mov rax, r8; add rsp, 0x8; ret; 
0x0000000011767d: mov [rip+0xd810d], eax; mov rax, r8; ret; 
0x0000000011767c: mov [rip+0xd810d], rax; mov rax, r8; ret; 
0x00000000115bc5: mov [rip+0xd9ad5], eax; lea rax, [rip+0xd9aa6]; add rsp, 0x8; ret; 
0x00000000115bc4: mov [rip+0xd9ad5], rax; lea rax, [rip+0xd9aa6]; add rsp, 0x8; ret; 
0x00000000115b11: mov [rip+0xd9b29], eax; mov eax, 0x1; add rsp, 0x8; ret; 
0x00000000115b10: mov [rip+0xd9b29], rax; mov eax, 0x1; add rsp, 0x8; ret; 
0x00000000116f01: mov [rip-0x76b3dd00], cl; rol dh, 0x46; inc dword ptr [rax]; ret; 
0x0000000014822b: mov [rsi+0x10], eax; ret; 
0x0000000004813a: mov [rsi+0x10], eax; xor eax, eax; mov dword ptr [rsi+0xc], 0x1000b; ret; 
0x00000000048189: mov [rsi+0x10], eax; xor eax, eax; ret; 
0x00000000047c60: mov [rsi+0x10], ecx; mov [rsi+0x28], rax; xor eax, eax; ret; 
0x00000000047c5f: mov [rsi+0x10], r9; mov [rsi+0x28], rax; xor eax, eax; ret; 
0x0000000014822a: mov [rsi+0x10], rax; ret; 
0x00000000048139: mov [rsi+0x10], rax; xor eax, eax; mov dword ptr [rsi+0xc], 0x1000b; ret; 
0x00000000048188: mov [rsi+0x10], rax; xor eax, eax; ret; 
0x00000000047c64: mov [rsi+0x28], eax; xor eax, eax; ret; 
0x0000000008df5c: mov [rsi+0x28], ecx; mov [rdx], al; mov eax, r8d; ret; 
0x00000000047c63: mov [rsi+0x28], rax; xor eax, eax; ret; 
0x0000000008df5b: mov [rsi+0x28], rcx; mov [rdx], al; mov eax, r8d; ret; 
0x00000000046c4f: mov [rsi+0x4801001a], fs; add esp, 0x8; pop rbx; pop rbp; ret; 
0x000000001131ff: mov [rsi+0x48], eax; ret; 
0x000000001131fe: mov [rsi+0x48], rax; ret; 
0x000000001131f7: mov [rsi+0x50], ecx; xor rax, 0x20; mov [rsi+0x48], rax; ret; 
0x000000001131f6: mov [rsi+0x50], rcx; xor rax, 0x20; mov [rsi+0x48], rax; ret; 
0x0000000013489e: mov [rsi+0x5], dl; mov rax, rsi; pop rbx; ret; 
0x00000000112819: mov [rsi+0x66], dx; xor eax, eax; ret; 
0x0000000011281a: mov [rsi+0x66], edx; xor eax, eax; ret; 
0x000000001481c7: mov [rsi+0x8], eax; ret; 
0x000000001481c6: mov [rsi+0x8], rax; ret; 
0x000000000481c1: mov [rsi+0xc], ax; mov eax, 0x1; mov [rsi+0xe], ax; xor eax, eax; ret; 
0x000000000481c2: mov [rsi+0xc], eax; mov eax, 0x1; mov [rsi+0xe], ax; xor eax, eax; ret; 
0x000000000481ca: mov [rsi+0xe], ax; xor eax, eax; ret; 
0x000000000481cb: mov [rsi+0xe], eax; xor eax, eax; ret; 
0x00000000055634: mov [rsi+rax*8], edx; xor eax, eax; ret; 
0x00000000055633: mov [rsi+rax*8], rdx; xor eax, eax; ret; 
0x0000000013fe80: mov [rsi+rbp*8], fs; dec dword ptr [rax-0x77]; ret; 
0x000000000a1420: mov [rsi+rdx+0x1], al; jne short 0x00000000000a1410; ret; 
0x000000000a141d: mov [rsi+rdx], cl; mov [rsi+rdx+0x1], al; jne short 0x00000000000a1410; ret; 
0x00000000190139: mov [rsi-0x2], cx; ret; 
0x0000000019013a: mov [rsi-0x2], ecx; ret; 
0x0000000019012d: mov [rsi-0x4], ecx; ret; 
0x0000000004817b: mov [rsi], ax; mov rax, 0x5deece66d; mov [rsi+0x10], rax; xor eax, eax; ret; 
0x0000000010c787: mov [rsi], ax; xor eax, eax; ret; 
0x0000000015753a: mov [rsi], eax; mov [rdi+0x18], rdx; mov eax, r8d; ret; 
0x0000000004817c: mov [rsi], eax; mov rax, 0x5deece66d; mov [rsi+0x10], rax; xor eax, eax; ret; 
0x0000000008d343: mov [rsi], eax; xor eax, eax; ret; 
0x0000000013b442: mov [rsi], edi; ret; 
0x0000000013b97f: mov [rsi], edi; xor eax, eax; ret; 
0x000000001574b7: mov [rsi], edx; mov [rdi+0x18], rax; mov eax, r8d; ret; 
0x00000000047ccf: mov [rsi], edx; mov eax, r8d; ret; 
0x00000000100484: mov [rsi], edx; movups [rsi+0x8], xmm0; ret; 
0x00000000157539: mov [rsi], rax; mov [rdi+0x18], rdx; mov eax, r8d; ret; 
0x0000000008d342: mov [rsi], rax; xor eax, eax; ret; 
0x0000000013b441: mov [rsi], rdi; ret; 
0x0000000013b97e: mov [rsi], rdi; xor eax, eax; ret; 
0x00000000041bd9: mov [rsp+0x10], eax; fld st, tbyte ptr [rsp+0x8]; ret; 
0x00000000156648: mov [rsp+0x10], eax; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x00000000155e6c: mov [rsp+0x10], eax; mov rax, [rdi+0x8]; sar rdx, 0x20; mov [rsp+0x8], rdx; call qword ptr [rax+0x8]; 
0x00000000155f5c: mov [rsp+0x10], eax; mov rax, [rdi+0x8]; shr rdx, 0x20; mov [rsp+0x8], rdx; call qword ptr [rax+0x8]; 
0x0000000014ef6c: mov [rsp+0x10], eax; mov rax, [rsp+0x48]; call qword ptr [rax+0x28]; 
0x00000000127e8b: mov [rsp+0x10], eax; mov rdx, rax; call qword ptr [r12+0x28]; 
0x00000000116c41: mov [rsp+0x10], eax; xor r10d, r10d; xor esi, esi; mov eax, 0x118; syscall; 
0x00000000089264: mov [rsp+0x10], ecx; xor edx, edx; mov rdi, r15; call qword ptr [r14+0x80]; 
0x0000000009759f: mov [rsp+0x10], edx; call qword ptr [rax]; 
0x000000000df467: mov [rsp+0x10], esi; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000009759e: mov [rsp+0x10], r10; call qword ptr [rax]; 
0x00000000156647: mov [rsp+0x10], rax; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x00000000155e6b: mov [rsp+0x10], rax; mov rax, [rdi+0x8]; sar rdx, 0x20; mov [rsp+0x8], rdx; call qword ptr [rax+0x8]; 
0x00000000155f5b: mov [rsp+0x10], rax; mov rax, [rdi+0x8]; shr rdx, 0x20; mov [rsp+0x8], rdx; call qword ptr [rax+0x8]; 
0x0000000014ef6b: mov [rsp+0x10], rax; mov rax, [rsp+0x48]; call qword ptr [rax+0x28]; 
0x00000000127e8a: mov [rsp+0x10], rax; mov rdx, rax; call qword ptr [r12+0x28]; 
0x00000000116c40: mov [rsp+0x10], rax; xor r10d, r10d; xor esi, esi; mov eax, 0x118; syscall; 
0x00000000089263: mov [rsp+0x10], rcx; xor edx, edx; mov rdi, r15; call qword ptr [r14+0x80]; 
0x000000000df466: mov [rsp+0x10], rsi; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000004429d: mov [rsp+0x14], eax; mov edi, r12d; mov eax, 0x81; syscall; 
0x00000000142fd4: mov [rsp+0x14], eax; mov rdx, r12; mov eax, 0x81; syscall; 
0x00000000097916: mov [rsp+0x18], eax; call rax; 
0x000000000e460b: mov [rsp+0x18], eax; mov rax, [rip+0x10ce6a]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000e455b: mov [rsp+0x18], eax; mov rax, [rip+0x10cf1a]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000097597: mov [rsp+0x18], ebx; mov rdi, r13; mov [rsp+0x10], r10; call qword ptr [rax]; 
0x00000000147845: mov [rsp+0x18], edi; lea r9, [rsp+0x40]; call qword ptr [rax]; 
0x00000000097596: mov [rsp+0x18], r11; mov rdi, r13; mov [rsp+0x10], r10; call qword ptr [rax]; 
0x00000000097915: mov [rsp+0x18], r8; call rax; 
0x000000000e460a: mov [rsp+0x18], rax; mov rax, [rip+0x10ce6a]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000e455a: mov [rsp+0x18], rax; mov rax, [rip+0x10cf1a]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000147844: mov [rsp+0x18], rdi; lea r9, [rsp+0x40]; call qword ptr [rax]; 
0x00000000147ebe: mov [rsp+0x192], ax; mov rax, [rsp+0x30]; call rax; 
0x00000000147ebf: mov [rsp+0x192], eax; mov rax, [rsp+0x30]; call rax; 
0x00000000127c16: mov [rsp+0x1f], al; call qword ptr [r12+0x28]; 
0x00000000127c12: mov [rsp+0x20], cl; mov [rsp+0x1f], al; call qword ptr [r12+0x28]; 
0x000000001133d5: mov [rsp+0x20], eax; cmp esi, 0x9; je short 0x0000000000113408; mov eax, 0x48; syscall; 
0x0000000011f0c3: mov [rsp+0x20], eax; mov [rsp+0x28], r9; movaps [rsp+0x10], xmm0; syscall; 
0x00000000115948: mov [rsp+0x20], eax; mov eax, 0x65; syscall; 
0x00000000097911: mov [rsp+0x20], ebx; mov [rsp+0x18], r8; call rax; 
0x00000000097910: mov [rsp+0x20], r11; mov [rsp+0x18], r8; call rax; 
0x0000000011f0c2: mov [rsp+0x20], r8; mov [rsp+0x28], r9; movaps [rsp+0x10], xmm0; syscall; 
0x000000001133d4: mov [rsp+0x20], rax; cmp esi, 0x9; je short 0x0000000000113408; mov eax, 0x48; syscall; 
0x00000000115947: mov [rsp+0x20], rax; mov eax, 0x65; syscall; 
0x000000001138d1: mov [rsp+0x21], cx; mov [rsp+0x23], al; mov eax, r8d; movups [rsp+0x11], xmm0; syscall; 
0x000000001138d2: mov [rsp+0x21], ecx; mov [rsp+0x23], al; mov eax, r8d; movups [rsp+0x11], xmm0; syscall; 
0x000000001138d6: mov [rsp+0x23], al; mov eax, r8d; movups [rsp+0x11], xmm0; syscall; 
0x00000000153b65: mov [rsp+0x28], eax; mov rax, [rdi+0x8]; mov dword ptr [rsp+0x30], 0x1; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x00000000153955: mov [rsp+0x28], eax; mov rax, [rdi+0x8]; mov dword ptr [rsp+0x30], 0x3; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x000000001539c5: mov [rsp+0x28], eax; mov rax, [rdi+0x8]; mov dword ptr [rsp+0x30], 0x4; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x00000000153a35: mov [rsp+0x28], eax; mov rax, [rdi+0x8]; mov dword ptr [rsp+0x30], 0x5; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x00000000113a3a: mov [rsp+0x28], eax; xor eax, eax; mov rdx, rsp; mov eax, 0x10; syscall; 
0x0000000011f0c8: mov [rsp+0x28], ecx; movaps [rsp+0x10], xmm0; syscall; 
0x0000000011f0c7: mov [rsp+0x28], r9; movaps [rsp+0x10], xmm0; syscall; 
0x00000000153b64: mov [rsp+0x28], rax; mov rax, [rdi+0x8]; mov dword ptr [rsp+0x30], 0x1; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x00000000153954: mov [rsp+0x28], rax; mov rax, [rdi+0x8]; mov dword ptr [rsp+0x30], 0x3; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x000000001539c4: mov [rsp+0x28], rax; mov rax, [rdi+0x8]; mov dword ptr [rsp+0x30], 0x4; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x00000000153a34: mov [rsp+0x28], rax; mov rax, [rdi+0x8]; mov dword ptr [rsp+0x30], 0x5; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x00000000113a39: mov [rsp+0x28], rax; xor eax, eax; mov rdx, rsp; mov eax, 0x10; syscall; 
0x00000000155b95: mov [rsp+0x38], eax; xor eax, eax; mov rdi, rsp; mov dword ptr [rsp], 0x2; call r8; 
0x000000001538eb: mov [rsp+0x38], edx; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x00000000155b94: mov [rsp+0x38], rax; xor eax, eax; mov rdi, rsp; mov dword ptr [rsp], 0x2; call r8; 
0x000000001538ea: mov [rsp+0x38], rdx; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x0000000014f6ee: mov [rsp+0x438], eax; xor eax, eax; mov rax, [rdi+0x8]; lea rsi, [rsp+0x10]; call qword ptr [rax+0x10]; 
0x0000000014f6ed: mov [rsp+0x438], rax; xor eax, eax; mov rax, [rdi+0x8]; lea rsi, [rsp+0x10]; call qword ptr [rax+0x10]; 
0x000000001571e8: mov [rsp+0x4], eax; mov rax, [rdi+0x8]; call qword ptr [rax+0x48]; 
0x00000000156db1: mov [rsp+0x4], eax; mov rax, [rdi+0x8]; sar rdx, 0x20; mov [rsp], edx; call qword ptr [rax+0x48]; 
0x00000000156f91: mov [rsp+0x4], eax; mov rax, [rdi+0x8]; shr rdx, 0x20; mov [rsp], edx; call qword ptr [rax+0x48]; 
0x0000000015f2c8: mov [rsp+0x50], eax; test rax, rax; je short 0x000000000015f2e3; mov rax, [rip+0x8cb88]; call qword ptr [rax+0x1f8]; 
0x000000000d039b: mov [rsp+0x50], esp; call rbx; 
0x000000000d04b3: mov [rsp+0x50], esp; mov rsi, r15; mov rdi, rbp; call rbx; 
0x000000000d039a: mov [rsp+0x50], r12; call rbx; 
0x000000000d04b2: mov [rsp+0x50], r12; mov rsi, r15; mov rdi, rbp; call rbx; 
0x000000000d04b1: mov [rsp+0x50], r12; mov rsi, r15; mov rdi, rbp; call rbx; 
0x0000000015f2c7: mov [rsp+0x50], rax; test rax, rax; je short 0x000000000015f2e3; mov rax, [rip+0x8cb88]; call qword ptr [rax+0x1f8]; 
0x0000000011385e: mov [rsp+0x58], eax; xor eax, eax; lea rdx, [rsp+0x30]; mov eax, 0x10; syscall; 
0x000000000d0394: mov [rsp+0x58], eax; xor eax, eax; mov [rsp+0x50], r12; call rbx; 
0x0000000011385d: mov [rsp+0x58], rax; xor eax, eax; lea rdx, [rsp+0x30]; mov eax, 0x10; syscall; 
0x000000000d0393: mov [rsp+0x58], rax; xor eax, eax; mov [rsp+0x50], r12; call rbx; 
0x0000000015f1a3: mov [rsp+0x68], eax; xor eax, eax; call qword ptr [r12+0xf08]; 
0x0000000015f1a2: mov [rsp+0x68], rax; xor eax, eax; call qword ptr [r12+0xf08]; 
0x0000000014e70a: mov [rsp+0x70], edx; call qword ptr [rax+0x30]; 
0x000000000d0b81: mov [rsp+0x88], esi; call rbp; 
0x000000000d0b80: mov [rsp+0x88], r14; call rbp; 
0x00000000097931: mov [rsp+0x8], eax; call rdx; 
0x0000000015f2fd: mov [rsp+0x8], eax; lea rdi, [r12+0x930]; call qword ptr [r12+0xf10]; 
0x000000000e427d: mov [rsp+0x8], eax; mov rax, [rip+0x10d1f8]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000e41dd: mov [rsp+0x8], eax; mov rax, [rip+0x10d298]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000011adfe: mov [rsp+0x8], eax; mov rdi, [r8]; call rbx; 
0x0000000005215e: mov [rsp+0x8], eax; xor eax, eax; mov eax, 0x3e; syscall; 
0x00000000097a05: mov [rsp+0x8], eax; xor edi, edi; call qword ptr [rax]; 
0x00000000144c03: mov [rsp+0x8], ecx; call rbp; 
0x0000000015f3a6: mov [rsp+0x8], ecx; lea rdi, [r15+0x908]; call qword ptr [r15+0xf08]; 
0x000000000892bf: mov [rsp+0x8], ecx; mov rdi, r15; call rax; 
0x00000000155e79: mov [rsp+0x8], edx; call qword ptr [rax+0x8]; 
0x0000000011f0be: mov [rsp+0x8], esi; mov [rsp+0x20], r8; mov [rsp+0x28], r9; movaps [rsp+0x10], xmm0; syscall; 
0x0000000011adfd: mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x00000000097a04: mov [rsp+0x8], r8; xor edi, edi; call qword ptr [rax]; 
0x00000000097930: mov [rsp+0x8], rax; call rdx; 
0x000000000e427c: mov [rsp+0x8], rax; mov rax, [rip+0x10d1f8]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000e41dc: mov [rsp+0x8], rax; mov rax, [rip+0x10d298]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000005215d: mov [rsp+0x8], rax; xor eax, eax; mov eax, 0x3e; syscall; 
0x00000000144c02: mov [rsp+0x8], rcx; call rbp; 
0x0000000015f3a5: mov [rsp+0x8], rcx; lea rdi, [r15+0x908]; call qword ptr [r15+0xf08]; 
0x000000000892bd: mov [rsp+0x8], rcx; mov rdi, r15; call rax; 
0x000000000892be: mov [rsp+0x8], rcx; mov rdi, r15; call rax; 
0x00000000155e78: mov [rsp+0x8], rdx; call qword ptr [rax+0x8]; 
0x00000000153ea3: mov [rsp+0xc8], edx; mov dword ptr [rsp+0xd0], 0x1; movups [rsp+0xb8], xmm5; call rax; 
0x00000000153e07: mov [rsp+0xc8], edx; mov dword ptr [rsp+0xd0], 0x2; movups [rsp+0xb8], xmm3; movups [rsp+0xd8], xmm0; call rax; 
0x00000000153ea2: mov [rsp+0xc8], rdx; mov dword ptr [rsp+0xd0], 0x1; movups [rsp+0xb8], xmm5; call rax; 
0x00000000153e06: mov [rsp+0xc8], rdx; mov dword ptr [rsp+0xd0], 0x2; movups [rsp+0xb8], xmm3; movups [rsp+0xd8], xmm0; call rax; 
0x000000000d095c: mov [rsp+0xd0], eax; lea rdi, [rsp+0xd0]; mov rsi, r13; call rbp; 
0x000000000d095b: mov [rsp+0xd0], r8; lea rdi, [rsp+0xd0]; mov rsi, r13; call rbp; 
0x0000000010c95c: mov [rsp+0xe8], eax; mov eax, 0xe; syscall; 
0x000000000bc7d1: mov [rsp+rbx*8-0x3d], dh; nop [rax]; xor eax, eax; ret; 
0x00000000041d05: mov [rsp-0x10], ax; fld st, tbyte ptr [rsp-0x18]; fstp tbyte ptr [rdi], st; fld st, tbyte ptr [rsp+0x8]; ret; 
0x00000000041dc8: mov [rsp-0x10], ax; fld st, tbyte ptr [rsp-0x18]; ret; 
0x00000000041c45: mov [rsp-0x10], ax; fstp tbyte ptr [rdi], st; fld st, tbyte ptr [rsp-0x18]; ret; 
0x00000000041c8e: mov [rsp-0x10], ax; mov qword ptr [rsp-0x18], 0x0; fld st, tbyte ptr [rsp-0x18]; ret; 
0x00000000041d06: mov [rsp-0x10], eax; fld st, tbyte ptr [rsp-0x18]; fstp tbyte ptr [rdi], st; fld st, tbyte ptr [rsp+0x8]; ret; 
0x00000000041dc9: mov [rsp-0x10], eax; fld st, tbyte ptr [rsp-0x18]; ret; 
0x00000000041c46: mov [rsp-0x10], eax; fstp tbyte ptr [rdi], st; fld st, tbyte ptr [rsp-0x18]; ret; 
0x00000000041c8f: mov [rsp-0x10], eax; mov qword ptr [rsp-0x18], 0x0; fld st, tbyte ptr [rsp-0x18]; ret; 
0x0000000005b14d: mov [rsp-0x10], edx; movdqa xmm0, [rsp-0x18]; pinsrw xmm0, eax, 0x6; ret; 
0x00000000057cfc: mov [rsp-0x10], esi; fld st, tbyte ptr [rsp-0x18]; ret; 
0x0000000005b14c: mov [rsp-0x10], rdx; movdqa xmm0, [rsp-0x18]; pinsrw xmm0, eax, 0x6; ret; 
0x00000000057cfb: mov [rsp-0x10], si; fld st, tbyte ptr [rsp-0x18]; ret; 
0x00000000057cf7: mov [rsp-0x18], eax; mov [rsp-0x10], si; fld st, tbyte ptr [rsp-0x18]; ret; 
0x00000000057cf6: mov [rsp-0x18], rax; mov [rsp-0x10], si; fld st, tbyte ptr [rsp-0x18]; ret; 
0x000000001518b5: mov [rsp], eax; call qword ptr [rdx+0x20]; 
0x0000000008f78c: mov [rsp], eax; mov edx, 0x1; mov rdi, rbp; call qword ptr [rax+0x80]; 
0x00000000156ae1: mov [rsp], eax; mov rax, [rbp+0x8]; call qword ptr [rax+0x8]; 
0x00000000149057: mov [rsp], eax; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x0000000008f7c9: mov [rsp], eax; mov rdx, r8; mov rsi, r12; mov rdi, rbp; call qword ptr [rax+0x78]; 
0x0000000008eaf0: mov [rsp], ecx; mov rdi, rbp; call rax; 
0x00000000156dbd: mov [rsp], edx; call qword ptr [rax+0x48]; 
0x000000000a1fa2: mov [rsp], esi; pop r12; pop r13; pop r14; ret; 
0x0000000008f78b: mov [rsp], r8; mov edx, 0x1; mov rdi, rbp; call qword ptr [rax+0x80]; 
0x0000000008f7c8: mov [rsp], r8; mov rdx, r8; mov rsi, r12; mov rdi, rbp; call qword ptr [rax+0x78]; 
0x000000001518b4: mov [rsp], rax; call qword ptr [rdx+0x20]; 
0x00000000156ae0: mov [rsp], rax; mov rax, [rbp+0x8]; call qword ptr [rax+0x8]; 
0x00000000149056: mov [rsp], rax; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x0000000008eaee: mov [rsp], rcx; mov rdi, rbp; call rax; 
0x0000000008eaef: mov [rsp], rcx; mov rdi, rbp; call rax; 
0x0000000015ea76: mov ah, 0x0; add [rax], al; add al, ch; nop; ret far; 
0x0000000014d0c0: mov ah, 0x0; add [rax], al; mov eax, 0x1; ret; 
0x0000000011fd05: mov ah, 0x0; add [rax], al; syscall; 
0x000000000a06b8: mov ah, 0x1; add [rax-0x73], cl; adc eax, 0x1b40e; cmove rax, rdx; ret; 
0x000000001091e0: mov ah, 0x24; add byte ptr [rax], 0x0; add [rax-0x7d], cl; ret; 
0x000000000d0b82: mov ah, 0x24; mov [rax], al; add [rax], al; call rbp; 
0x0000000010982b: mov ah, 0x24; nop; add [rax], al; add [rax-0x77], cl; ret; 
0x000000001248cb: mov ah, 0xc; add [rcx], al; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x000000000d466b: mov ah, 0xd; add [rax+0x63], cl; add al, 0x82; add rax, rdx; notrack jmp rax; 
0x000000000a05bb: mov ah, 0xe; add [rax-0x73], cl; add eax, 0xeb4ab; cmove rax, rdx; ret; 
0x00000000146e9c: mov ah, 0xed; call qword ptr [rax+0x2e66c35d]; 
0x000000000e8b56: mov ah, 0xf4; jmp qword ptr [rsi+0xf]; 
0x000000001545de: mov ah, 0xfd; jmp qword ptr [rsi+0x66]; 
0x00000000099e72: mov ah, 0xff; jmp qword ptr [rsi+0x66]; 
0x000000001987a2: mov ah, [rax]; clc; call far fword ptr [rbx+0x48]; 
0x0000000017deb0: mov ah, [rsi+0xf]; je short 0x000000000017de76; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000017ec80: mov ah, [rsi+0xf]; je short 0x000000000017ec46; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000017fcc0: mov ah, [rsi+0xf]; je short 0x000000000017fc86; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000181890: mov ah, [rsi+0xf]; je short 0x0000000000181856; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000010cf9e: mov al, 0x0; add [rax], al; call qword ptr [rax+0x88]; 
0x0000000010cc8a: mov al, 0x0; add [rax], al; mov rsi, [rbx+0xa0]; mov rdi, [rbx+0x80]; call qword ptr [rax+0x88]; 
0x0000000011fa95: mov al, 0x0; add [rax], al; syscall; 
0x000000000d0e0c: mov al, 0x11; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x2]; mov rax, 0xffffffffffffffff; ret; 
0x0000000017caac: mov al, 0x1; add [rax], al; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x00000000043f62: mov al, 0x1; movups [rdi], xmm0; ret; 
0x00000000148a98: mov al, 0x23; add [rax], al; mov dword ptr [rbx+0x23b0], 0x0; mov rdi, r12; call qword ptr [rax+0x28]; 
0x00000000148a51: mov al, 0x23; add [rax], al; pop rbp; jmp rcx; 
0x0000000011ad51: mov al, 0x2; add [rax], al; mov rdi, [r15]; call rbx; 
0x0000000005b4bd: mov al, 0x3; add [rax], al; mov edi, 0x3004; mov eax, 0x9e; syscall; 
0x0000000011917c: mov al, 0x46; or eax, 0x415d5900; pop rsp; pop r13; ret; 
0x000000000b7aec: mov al, 0x4; add [rax], al; ret; 
0x000000000b76ec: mov al, 0x8; add [rax], al; ret; 
0x0000000011612c: mov al, 0xc2; lock dec dword ptr [rax+0x1]; ret; 
0x000000001881ef: mov al, 0xc5; std; xlat [rbx]; ret; 
0x0000000018f48c: mov al, 0xe1; add al, [rax]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x000000000a04f1: mov al, 0xe; add [rax-0x73], cl; adc eax, 0xeb085; cmove rax, rdx; ret; 
0x000000000bcd3c: mov al, 0xf1; or al, 0x0; lea rax, [rip+0x11389]; cmove rax, rdx; ret; 
0x00000000108f5f: mov al, 0xf2; jmp qword ptr [rsi+0xf]; 
0x0000000018d94c: mov al, 0xfb; add al, [rax]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000047301: mov al, 0xfd; jmp qword ptr [rax+rcx*2-0x75]; 
0x00000000134a21: mov al, 0xff; jmp qword ptr [rsi+0x2e]; 
0x00000000072383: mov al, 0xff; jmp qword ptr [rsi+0xf]; 
0x000000000874c7: mov al, [0x30788348000000]; je short 0x00000000000874d8; ret; 
0x000000000dd0da: mov al, [0x3574c08548000001]; call rax; 
0x0000000005b4b2: mov al, [0x4808668d48000000]; lea esi, [rdi+0x3b0]; mov edi, 0x3004; mov eax, 0x9e; syscall; 
0x0000000008ce41: mov al, [0x4820428b48000000]; sub eax, [rdx+0x18]; sar rax, 0x2; ret; 
0x0000000008cd11: mov al, [0x4838428b48000000]; sub eax, [rdx+0x30]; sar rax, 0x2; ret; 
0x00000000089985: mov al, [0x485def8948000000]; mov eax, [rax+0xe0]; mov rax, [rax+0x20]; jmp rax; 
0x000000000338fc: mov al, [0x486411c8c148001b]; xor eax, [0x30]; call rax; 
0x00000000087ce9: mov al, [0x48c0ef0f66000000]; mov dword ptr [rax+0x50], 0x0; movups [rax+0x40], xmm0; pop rbx; ret; 
0x0000000018de5c: mov al, [0x4c930c63490002f6]; add ecx, ebx; notrack jmp rcx; 
0x0000000012d314: mov al, [0x558b48ffef5146e8]; mov al, [0xc583492b135c8d48]; and [rax+0x1], cl; ret; 
0x000000001526f4: mov al, [0x5d5bc08944000000]; pop r12; pop r13; pop r14; ret; 
0x000000001141a8: mov al, [0x5d5be08944000000]; pop r12; ret; 
0x00000000142109: mov al, [0x5d5be0894c000000]; pop r12; ret; 
0x00000000061e23: mov al, [0x6418244c8b480002]; xor rcx, [0x28]; jne short 0x0000000000061e3e; add rsp, 0xd8; ret; 
0x0000000018b7fa: mov al, [0x77f8c5237f7ec1c4]; ret; 
0x0000000010cc91: mov al, [0x80bb8b48000000]; add [rax], al; call qword ptr [rax+0x88]; 
0x000000000b1465: mov al, [0x82048b8a0c8b000e]; sub eax, ecx; ret; 
0x0000000005ff64: mov al, [0x8304768b41000000]; ret; 
0x0000000005ff90: mov al, [0x8324348b41000000]; ret; 
0x000000001499e8: mov al, [0x8341fce08300000f]; jmp qword ptr [rbx+0xf]; 
0x0000000006d383: mov al, [0x840fc08548000000]; call qword ptr [rax+rax]; 
0x0000000007181f: mov al, [0x850f6ef883fffffa]; call far fword ptr [rdi]; 
0x0000000006e64b: mov al, [0x850fc98545fffffa]; imul esi, edx, 0xffffffff; inc dword ptr [rcx-0x9]; ret; 
0x0000000006c81a: mov al, [0x850fff8545fffffa]; call far fword ptr [rax+rax]; 
0x0000000007a3e3: mov al, [0x852c8d4c000000]; add [rax], al; add [rax+0x29], cl; ret; 
0x0000000006e4de: mov al, [0x8948c08548fffffa]; ret; 
0x000000000a77aa: mov al, [0x8949c9634dfffffc]; ret far; 
0x000000001483d6: mov al, [0x8be08458b48ffed]; add [rax], al; add [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x30]; 
0x00000000087b3b: mov al, [0x8d148d48000000]; add [rax], al; add [rax+0x29], cl; ret far; 
0x000000000e9394: mov al, [0x8d493e8b41000004]; outsb dx, [rsi]; add al, 0x83; call far fword ptr [rbp+0xf]; 
0x0000000008e5bc: mov al, [0xb74c08548ffffff]; pop rbx; ret; 
0x0000000007d3b1: mov al, [0xc148e2894cfffffb]; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x0000000012d31d: mov al, [0xc583492b135c8d48]; and [rax+0x1], cl; ret; 
0x00000000082826: mov al, [0xe08a8948000000]; add [rax], al; ret; 
0x00000000054662: mov al, [0xe90003ff66e80019]; paddd mm7, mm7; call qword ptr [rax+0x587c031]; 
0x000000000be559: mov al, [0xeb8087b8bfffffc]; add [rax], al; add [rax-0x7d], cl; ret; 
0x00000000101f54: mov al, [0xfffad1e900000001]; call qword ptr [rax-0x5e1f00d]; 
0x0000000006c697: mov al, [0xfffae08d8bfffffa]; jmp qword ptr [rcx+rcx*4+0x8]; 
0x000000000f6c84: mov al, [0xfffd8ae9000000a0]; jmp qword ptr [rsi-0x70]; 
0x0000000006e5cc: mov al, [0xffffffbc410017d8]; jmp qword ptr [rdi+rax*8]; 
0x0000000009234c: mov al, [0xffffffffbe000001]; mov rdi, rbx; call qword ptr [rax+0x18]; 
0x000000001176ee: mov al, [rax+0xd]; add [rax], al; mov qword ptr [rip+0xd808f], 0x0; add rsp, 0x8; ret; 
0x0000000010da65: mov al, [rax]; add [rax], al; syscall; 
0x00000000084606: mov al, [rbp+0x31]; sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000017c8d2: mov al, [rbx]; add [rax], al; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x0000000017aa06: mov al, [rcx+0x2]; mov [rdx+0x2], al; lea rax, [rdx+0x2]; ret; 
0x000000000b3a1b: mov al, [rcx+0x2]; mov [rdx+0x2], al; mov rax, rdi; ret; 
0x0000000017aa34: mov al, [rcx+0x4]; mov [rdx+0x4], al; lea rax, [rdx+0x4]; ret; 
0x000000000b3a49: mov al, [rcx+0x4]; mov [rdx+0x4], al; mov rax, rdi; ret; 
0x000000000b3acd: mov al, [rcx+0x8]; mov [rdx+0x8], al; mov rax, rdi; ret; 
0x000000000872d2: mov al, [rcx]; add [rax], al; mov esi, r12d; mov rdi, r14; call qword ptr [rax+0x18]; 
0x0000000017a9e0: mov al, [rcx]; mov [rdx], al; lea rax, [rdx]; ret; 
0x000000000b39f5: mov al, [rcx]; mov [rdx], al; mov rax, rdi; ret; 
0x00000000184d50: mov al, [rdi+rdx-0x1]; mov cl, [rsi+rdx-0x1]; sub eax, ecx; ret; 
0x000000000c689b: mov al, ch; call qword ptr [rcx+0x2e660006]; 
0x000000001850b0: mov al, ch; stc; je short 0x0000000000185076; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000186750: mov al, ch; stc; je short 0x0000000000186716; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000017aa44: mov ax, [rcx+0x4]; mov [rdx+0x4], ax; lea rax, [rdx+0x5]; ret; 
0x000000000b3a69: mov ax, [rcx+0x4]; mov [rdx+0x4], ax; mov rax, rdi; ret; 
0x000000000b3aed: mov ax, [rcx+0x8]; mov [rdx+0x8], ax; mov rax, rdi; ret; 
0x0000000017a9f0: mov ax, [rcx]; mov [rdx], ax; lea rax, [rdx+0x1]; ret; 
0x000000000b3a05: mov ax, [rcx]; mov [rdx], ax; mov rax, rdi; ret; 
0x0000000014adef: mov bh, 0x0; add [rbp-0x3f6af040], al; add rsp, 0x8; movzx eax, al; ret; 
0x00000000093075: mov bh, 0x15; add [rdi], cl; add eax, 0xffff2ee9; call qword ptr [rax+0x1b9c031]; 
0x0000000007d09f: mov bh, 0x16; add [rax-0x77], cl; ret far; 
0x0000000018ab01: mov bh, 0x16; mov [rdi], dx; lea rax, [rdi+0x1]; vzeroupper; ret; 
0x0000000018b1e1: mov bh, 0x16; mov [rdi], dx; lea rax, [rdi+0x2]; vzeroupper; ret; 
0x00000000189901: mov bh, 0x16; mov [rdi], dx; mov byte ptr [rdi+0x2], 0x0; vzeroupper; ret; 
0x0000000016dd91: mov bh, 0x16; mov [rdi], dx; ret; 
0x00000000189071: mov bh, 0x16; mov [rdi], dx; vzeroupper; ret; 
0x00000000140375: mov bh, 0x1f; out dx, al; jmp qword ptr [rsi+0xf]; 
0x000000001986e5: mov bh, 0x2; clc; call far fword ptr [rbx+0x4c]; 
0x000000000bbc56: mov bh, 0x36; mov [rdi+rdx-0x2], cx; mov [rdi], si; ret; 
0x00000000169485: mov bh, 0x44; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000a8b9f: mov bh, 0x44; and al, 0xec; mov [rdi+0x4], ax; lea rax, [rdi+rdx-0x1]; ret; 
0x00000000033e2a: mov bh, 0x44; mov eax, [rdx+rax]; mov eax, r8d; ret; 
0x000000000d83bb: mov bh, 0x48; add edx, edi; notrack jmp rdx; 
0x00000000190b28: mov bh, 0x48; lea eax, [rdi+0x7]; ret; 
0x000000001476b7: mov bh, 0x48; mov eax, [rbp+0x8]; mov rdi, rbp; mov qword ptr [rsp], 0x0; call qword ptr [rax+0x20]; 
0x00000000155dbb: mov bh, 0x48; mov eax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x000000000340b3: mov bh, 0x4; js short 0x000000000003403a; loopne 0x00000000000340c1; movzx eax, ax; ret; 
0x000000000340f3: mov bh, 0x4; js short 0x000000000003407a; loopne 0x00000000000340fb; movzx eax, ax; ret; 
0x00000000034193: mov bh, 0x4; js short 0x000000000003411a; loopne 0x000000000003419d; movzx eax, ax; ret; 
0x00000000034273: mov bh, 0x4; js short 0x00000000000341fa; loopne 0x000000000003427a; ret; 
0x0000000003430c: mov bh, 0x4; js short 0x0000000000034293; loopne 0x0000000000034313; ret; 
0x0000000003432c: mov bh, 0x4; js short 0x00000000000342b3; loopne 0x000000000003433a; movzx eax, ax; ret; 
0x0000000003436c: mov bh, 0x4; js short 0x00000000000342f3; loopne 0x0000000000034374; movzx eax, ax; ret; 
0x0000000003440c: mov bh, 0x4; js short 0x0000000000034393; loopne 0x0000000000034416; movzx eax, ax; ret; 
0x00000000122a36: mov bh, 0x4; js short 0x00000000001229bd; loopne 0x0000000000122a44; movzx eax, ax; ret; 
0x00000000122b66: mov bh, 0x4; js short 0x0000000000122aed; loopne 0x0000000000122b6d; ret; 
0x00000000122bf6: mov bh, 0x4; js short 0x0000000000122b7d; loopne 0x0000000000122bfe; movzx eax, ax; ret; 
0x00000000122f06: mov bh, 0x4; js short 0x0000000000122e8d; loopne 0x0000000000122f10; movzx eax, ax; ret; 
0x00000000123417: mov bh, 0x4; js short 0x000000000012339e; loopne 0x0000000000123425; movzx eax, ax; ret; 
0x00000000123537: mov bh, 0x4; js short 0x00000000001234be; loopne 0x000000000012353e; ret; 
0x000000001235b7: mov bh, 0x4; js short 0x000000000012353e; loopne 0x00000000001235bf; movzx eax, ax; ret; 
0x00000000123887: mov bh, 0x4; js short 0x000000000012380e; loopne 0x0000000000123891; movzx eax, ax; ret; 
0x0000000012cee7: mov bh, 0x4; push rax; shr ax, 0xe; and eax, 0x1; ret; 
0x000000000d23f4: mov bh, 0x4c; dec byte ptr [rbp-0x77]; ret far; 
0x0000000013da21: mov bh, 0x4e; adc cl, [rbp-0x2ff6f]; jmp qword ptr [rsi-0x7d]; 
0x000000000a8a02: mov bh, 0x54; and al, 0xc; mov [rdi+0x4], dx; ret; 
0x000000000a8ac7: mov bh, 0x54; and al, 0xec; mov [rax+0x4], dx; ret; 
0x00000000157271: mov bh, 0x6; lea rsi, [rsp+0x4]; mov [rsp+0x4], eax; mov rax, [rdi+0x8]; call qword ptr [rax+0x48]; 
0x00000000156291: mov bh, 0x6; mov rsi, rsp; mov [rsp], rax; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x0000000010c785: mov bh, 0x7; mov [rsi], ax; xor eax, eax; ret; 
0x0000000008995f: mov bh, 0x90; add [rax], al; add cl, ch; ret far; 
0x00000000076155: mov bh, 0x9d; pop rsp; idiv edi; jmp qword ptr [rsi-0x77]; 
0x0000000005b4bc: mov bh, 0xb0; add eax, [rax]; add [rdi+0x3004], bh; mov eax, 0x9e; syscall; 
0x000000000340ba: mov bh, 0xc0; ret; 
0x00000000120674: mov bh, 0xc; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x2]; mov rax, 0xffffffffffffffff; ret; 
0x00000000124075: mov bh, 0xe2; out dx, eax; jmp qword ptr [rcx+rcx*4+0x2b]; 
0x00000000189081: mov bh, 0xe; mov [rdi], cx; mov byte ptr [rdi+0x2], 0x0; vzeroupper; ret; 
0x00000000128813: mov bh, 0xf0; jmp qword ptr [rsi+0x2e]; 
0x000000000e6c6a: mov bh, 0xf3; dec dword ptr [rax-0x77]; ret; 
0x0000000012fb6c: mov bh, 0xf6; mov eax, edi; or eax, esi; bswap eax; ret; 
0x00000000076b73: mov bh, 0xfa; jmp qword ptr [rsi+0x2e]; 
0x00000000144363: mov bh, 0xfe; jmp qword ptr [rsi+0x2e]; 
0x00000000120df0: mov bh, 0xff; lea rax, [rip+0x91887]; mov eax, [rax+rdi*4]; ret; 
0x0000000006b7ec: mov bh, bh; jmp qword ptr [rsi+0xf]; 
0x000000000df552: mov bh, ch; adc [rax], al; syscall; 
0x00000000156fd1: mov bh, ch; jmp qword ptr [rsi+0x66]; 
0x0000000009e3a3: mov bh, dl; jmp qword ptr [rsi+0x2e]; 
0x0000000010df02: mov bl, 0x0; add [rax], al; add rsp, 0x78; ret; 
0x0000000011fdc8: mov bl, 0x0; add [rax], al; syscall; 
0x0000000019241e: mov bl, 0x0; add [rax], al; xor eax, eax; ret; 
0x0000000016c989: mov bl, 0x13; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000070a87: mov bl, 0x17; add [rbx-0x51f4b], cl; jmp qword ptr [rcx+rcx*4+0x30]; 
0x0000000016c389: mov bl, 0x19; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016c089: mov bl, 0x1c; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016bd89: mov bl, 0x1f; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016ba89: mov bl, 0x22; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b789: mov bl, 0x25; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000011b3c3: mov bl, 0x5; add [rax], al; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x00000000023f11: mov bl, 0x66; nop [rax+rax]; nop [rax]; endbr64; ret; 
0x000000001294e5: mov bl, 0x66; nop [rax+rax]; ret; 
0x000000001662c9: mov bl, 0x74; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000015098a: mov bl, 0x88; add [rax], al; add [rcx+rcx*4-0x1], cl; call qword ptr [rax+0x28]; 
0x00000000160b01: mov bl, 0x8; or [rax], eax; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009f1c9: mov bl, 0x9d; add [rax], al; lea rdx, [rip+0xc41bc]; cmovne rax, rdx; ret; 
0x0000000010cc90: mov bl, 0xa0; add [rax], al; add [rax-0x75], cl; mov ebx, 0x80; call qword ptr [rax+0x88]; 
0x000000000e6c69: mov bl, 0xb7; dec dword ptr [rax-0x77]; ret; 
0x000000000e5474: mov bl, 0xc; add [rax+0x63], cl; add al, 0xaa; add rax, rdx; notrack jmp rax; 
0x000000000e5865: mov bl, 0xc; add [rcx+0x46348f6], cl; mov dl, 0x48; add eax, edx; notrack jmp rax; 
0x000000001249a3: mov bl, 0xc; add [rcx], al; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x00000000153269: mov bl, 0xdb; or [rax], eax; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000015fccb: mov bl, 0xe8; iretd; std; cld; jmp qword ptr [rsi+0x2e]; 
0x0000000016f489: mov bl, 0xed; add al, 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000012b6f2: mov bl, 0xf1; jmp qword ptr [rsi+0x66]; 
0x0000000016ee89: mov bl, 0xf3; add al, 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001168b6: mov bl, 0xf4; call far fword ptr [rdx+0x59]; 
0x0000000016eb89: mov bl, 0xf6; add al, 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016e889: mov bl, 0xf9; add al, 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016e589: mov bl, 0xfc; add al, 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000047210: mov bl, 0xfd; dec dword ptr [rax-0x77]; sub [rax-0x77], cl; ret; 
0x0000000016e289: mov bl, 0xff; add al, 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000006a3c1: mov bl, 0xff; jmp qword ptr [rsi+0xf]; 
0x0000000015fdd7: mov bl, [rax+0x4c000003]; lea eax, [rsp+0x30]; call qword ptr [rax+0x1e0]; 
0x00000000043418: mov bl, [rdx]; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x00000000043454: mov bl, [rdx]; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x2]; mov eax, 0xffffffff; ret; 
0x0000000013231a: mov bl, ch; or eax, [rax]; syscall; 
0x0000000015f2d4: mov bl, cl; or [rax], al; call qword ptr [rax+0x1f8]; 
0x0000000013f0b1: mov byte ptr [r10], 0x0; ret; 
0x000000000a8765: mov byte ptr [r11], 0x0; mov [rdi], r8; mov rax, r12; pop r12; ret; 
0x000000001156fb: mov byte ptr [r12], 0x0; mov rax, r12; pop r12; ret; 
0x000000000300ac: mov byte ptr [r12], 0x0; pop rbx; pop rbp; pop r12; ret; 
0x0000000013c60c: mov byte ptr [r8+0x2], 0x0; ret; 
0x000000000a8707: mov byte ptr [r8], 0x0; mov [rdi], rax; mov rax, r9; ret; 
0x0000000013c60d: mov byte ptr [rax+0x2], 0x0; ret; 
0x00000000192037: mov byte ptr [rax+0x75], 0xc5; movzx eax, byte ptr [rdi-0x9]; movzx edx, byte ptr [rsi-0x9]; sub eax, edx; ret; 
0x00000000052a2f: mov byte ptr [rax+rdx], 0x0; ret; 
0x00000000027227: mov byte ptr [rax-0x7c], 0xf6; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x000000000a8708: mov byte ptr [rax], 0x0; mov [rdi], rax; mov rax, r9; ret; 
0x000000000a8a78: mov byte ptr [rax], 0x0; ret; 
0x000000001280f5: mov byte ptr [rax], 0x20; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000001280da: mov byte ptr [rax], 0xa; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000010c79b: mov byte ptr [rax], 0xff; jne short 0x000000000010c7a5; mov [rdi], si; xor eax, eax; ret; 
0x00000000076b07: mov byte ptr [rbp-0x508], 0x20; mov [rbp-0x500], rsi; jmp rax; 
0x00000000077a29: mov byte ptr [rbp-0x508], 0x20; mov r10, rdx; mov dword ptr [rbp-0x4f8], 0x1; jmp rax; 
0x0000000012177a: mov byte ptr [rbp-0x7c9], 0x73; syscall; 
0x00000000121773: mov byte ptr [rbp-0x7ca], 0x0; mov byte ptr [rbp-0x7c9], 0x73; syscall; 
0x0000000011d755: mov byte ptr [rbx+0xe8], 0x1; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000000a8766: mov byte ptr [rbx], 0x0; mov [rdi], r8; mov rax, r12; pop r12; ret; 
0x000000000a8648: mov byte ptr [rcx-0x1], 0x0; mov [rdx], rcx; ret; 
0x00000000115fb2: mov byte ptr [rcx-0x1], 0x5c; cmp byte ptr [rsi], 0x0; lea rdx, [rsi+0x1]; jne short 0x0000000000115f90; ret; 
0x000000000b1936: mov byte ptr [rcx], 0x0; add [rax+0xf], cl; mov ebp, 0xf80148c0; ret; 
0x0000000009f27a: mov byte ptr [rcx], 0x0; cmovne rax, rdx; ret; 
0x000000001898f5: mov byte ptr [rdi+0x1], 0x0; vzeroupper; ret; 
0x0000000018ab16: mov byte ptr [rdi+0x2], 0x0; lea rax, [rdi+0x2]; vzeroupper; ret; 
0x00000000189086: mov byte ptr [rdi+0x2], 0x0; vzeroupper; ret; 
0x000000001899c6: mov byte ptr [rdi+0x41], 0x0; vzeroupper; ret; 
0x00000000189a1b: mov byte ptr [rdi+0x80], 0x0; vzeroupper; ret; 
0x0000000005b54a: mov byte ptr [rdi+0x8], 0x0; mov [rdi], rax; mov rax, rdi; ret; 
0x000000000ec480: mov byte ptr [rdi+0x8], 0x15; mov eax, 0x1; ret; 
0x000000000ec435: mov byte ptr [rdi+0x8], 0x16; mov eax, 0x1; ret; 
0x000000000ec404: mov byte ptr [rdi+0x8], 0x19; mov eax, 0x1; ret; 
0x000000000ec49a: mov byte ptr [rdi+0x8], 0x1; mov [rdi], al; mov eax, 0x1; ret; 
0x000000000ec46b: mov byte ptr [rdi+0x8], 0x1; mov eax, 0x1; mov byte ptr [rdi], 0x5b; ret; 
0x000000000ec41d: mov byte ptr [rdi+0x8], 0x1; mov eax, 0x1; ret; 
0x000000000ec4b0: mov byte ptr [rdi+0x8], 0x1a; mov eax, 0x2; ret; 
0x000000000ec4c0: mov byte ptr [rdi+0x8], 0x1c; mov eax, 0x2; ret; 
0x000000000ec4d5: mov byte ptr [rdi+0x8], 0x1e; mov eax, 0x2; ret; 
0x000000000ec440: mov byte ptr [rdi+0x8], 0x2; xor eax, eax; ret; 
0x00000000189922: mov byte ptr [rdi+r8], 0x0; vzeroupper; ret; 
0x00000000189923: mov byte ptr [rdi+rax], 0x0; vzeroupper; ret; 
0x0000000013c36e: mov byte ptr [rdi+rdx], 0x0; ret; 
0x000000000a8b30: mov byte ptr [rdi], 0x0; lea rax, [rdi+rdx-0x1]; ret; 
0x0000000018aa81: mov byte ptr [rdi], 0x0; lea rax, [rdi]; vzeroupper; ret; 
0x00000000116efb: mov byte ptr [rdi], 0x0; mov byte ptr [rip+0xd886b], 0x23; mov rax, r8; mov byte ptr [rsi-0x1], 0x0; ret; 
0x00000000188ff1: mov byte ptr [rdi], 0x0; vzeroupper; ret; 
0x000000000ec475: mov byte ptr [rdi], 0x5b; ret; 
0x0000000011cc77: mov byte ptr [rdx], 0x0; mov r8, rbx; mov rax, r8; pop rbx; ret; 
0x00000000134b7a: mov byte ptr [rdx], 0x0; pop r12; pop r13; ret; 
0x0000000013f0b2: mov byte ptr [rdx], 0x0; ret; 
0x00000000116efe: mov byte ptr [rip+0xd886b], 0x23; mov rax, r8; mov byte ptr [rsi-0x1], 0x0; ret; 
0x00000000116e86: mov byte ptr [rsi-0x1], 0x0; mov rax, r8; ret; 
0x00000000116f08: mov byte ptr [rsi-0x1], 0x0; ret; 
0x000000001156fc: mov byte ptr [rsp], 0x0; mov rax, r12; pop r12; ret; 
0x000000000300ad: mov byte ptr [rsp], 0x0; pop rbx; pop rbp; pop r12; ret; 
0x0000000011aa27: mov ch, 0x2; add [rax], al; mov rdi, [r14]; call rbx; 
0x00000000118ab7: mov ch, 0x33; or eax, 0x64d8f700; mov [rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001189b7: mov ch, 0x34; or eax, 0x64d8f700; mov [rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000013f0b0: mov ch, 0x41; mov byte ptr [rdx], 0x0; ret; 
0x0000000018e3b6: mov ch, 0x6; add [rax], al; xor eax, eax; ret; 
0x00000000151759: mov ch, 0x6; add [rdi], cl; sub [rsp+0x20], eax; call qword ptr [rax+0x28]; 
0x000000001664c7: mov ch, 0x72; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000010fcb7: mov ch, 0xc1; or eax, 0x64d8f700; mov [rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010e5b7: mov ch, 0xd8; or eax, 0x64d8f700; mov [rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000118214: mov ch, 0xf0; jmp qword ptr [rsi+0xf]; 
0x00000000117390: mov ch, 0xf6; inc dword ptr [rbp+0x31]; ror byte ptr [rax-0x77], 0x5; ret far; 
0x00000000099d9c: mov ch, 0xff; call qword ptr [rax+0x1bac031]; 
0x0000000014da8a: mov ch, [rcx+0x6]; add [rax-0x77], cl; ret; 
0x000000001571f7: mov ch, bh; jmp qword ptr [rsi+0xf]; 
0x00000000149afc: mov ch, ch; call qword ptr [rax-0x5e1f00d]; 
0x000000000cfb10: mov ch, dh; and ch, 0xf; je short 0x00000000000cfb30; add rax, 0x2; ret; 
0x0000000011fb55: mov cl, 0x0; add [rax], al; syscall; 
0x00000000143cff: mov cl, 0x15; ret far; 
0x00000000131617: mov cl, 0x15; ret; 
0x000000000a0a28: mov cl, 0x1; add [rax-0x73], cl; adc eax, 0x1b0be; cmove rax, rdx; ret; 
0x00000000146050: mov cl, 0x48; shr edx, 0x3; add rax, rcx; notrack jmp rax; 
0x000000001839ab: mov cl, 0x7f; call qword ptr [rax-0x5e1f00d]; 
0x000000001136bb: mov cl, 0x87; or eax, 0x64d8f700; mov [rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000198ede: mov cl, 0x90; pop rbx; pop rbp; pop r12; ret; 
0x00000000124b1b: mov cl, 0xc; add [rdi], cl; add eax, 0xffff75e9; jmp qword ptr [rsi+0x2e]; 
0x00000000120ce4: mov cl, 0xc; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x2]; mov eax, 0xffffffff; ret; 
0x0000000010d5bb: mov cl, 0xe8; or eax, 0x64d8f700; mov [rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000015f164: mov cl, 0xe9; add esi, ebx; movsq [rdi], [rsi]; ret; 
0x00000000068f5b: mov cl, 0xff; jmp qword ptr [rsi+0xf]; 
0x000000000ba9b6: mov cl, [rbx+0xf]; add [rcx+0x63], cl; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000012312b: mov cl, [rbx-0x367acef4]; jne short 0x0000000000123138; ret; 
0x00000000123194: mov cl, [rbx-0x367acef4]; jne short 0x00000000001231a0; ret; 
0x00000000123a7b: mov cl, [rbx-0x367acef4]; jne short 0x0000000000123a88; ret; 
0x00000000123ad8: mov cl, [rbx-0x367acef4]; jne short 0x0000000000123ae8; ret; 
0x000000000aee15: mov cl, [rbx-0x37d67dfc]; ret; 
0x00000000137a2c: mov cl, [rbx]; add [rcx], al; mov eax, r8d; pop rbp; ret; 
0x00000000031adc: mov cl, [rcx+0x1]; sar byte ptr [rsi], 0x1; jmp r8; 
0x000000000a9014: mov cl, [rdi-0x73]; adc al, 0xa; notrack jmp r10; 
0x0000000011338c: mov cl, [rip+0x64d8f700]; mov [rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000b9494: mov cl, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], cl; lea rax, [rdi+0x11]; ret; 
0x000000000b7c74: mov cl, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], cl; ret; 
0x000000000b7d48: mov cl, [rsi+0x18]; movdqu [rdi], xmm0; mov [rdi+0x10], rdx; mov [rdi+0x18], cl; ret; 
0x000000000b7e49: mov cl, [rsi+0x20]; movdqu [rdi], xmm0; movdqu [rdi+0x10], xmm2; mov [rdi+0x20], cl; ret; 
0x00000000184d54: mov cl, [rsi+rdx-0x1]; sub eax, ecx; ret; 
0x0000000018fa74: mov cl, [rsi]; mov [rdi], cl; ret; 
0x000000000cfafb: mov cl, dl; and cl, 0xf; je short 0x00000000000cfb20; ret; 
0x0000000018fa62: mov cx, [rcx-0x2]; mov [rdi], si; mov [r9-0x2], cx; ret; 
0x0000000018fa61: mov cx, [rcx-0x2]; mov [rdi], si; mov [r9-0x2], cx; ret; 
0x000000000b8644: mov cx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], cx; lea rax, [rdi+0x11]; ret; 
0x000000000b94b4: mov cx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], cx; lea rax, [rdi+0x12]; ret; 
0x000000000b6f94: mov cx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], cx; ret; 
0x000000000b7078: mov cx, [rsi+0x18]; movdqu [rdi], xmm0; mov [rdi+0x10], rdx; mov [rdi+0x18], cx; ret; 
0x00000000167dc4: mov cx, [rsi-0x2]; mov [rdi-0x3], dx; mov [rdi-0x2], cx; ret; 
0x0000000016dd24: mov cx, [rsi]; mov [rdi+0x1], dx; mov [rdi], cx; ret; 
0x000000000b84e0: mov cx, [rsi]; mov [rdi], cx; mov [rdi+0x2], dh; lea rax, [rdi+0x2]; ret; 
0x000000000b6ea0: mov cx, [rsi]; mov [rdi], cx; mov [rdi+0x2], dh; ret; 
0x000000000b7b90: mov cx, [rsi]; mov dl, [rsi+0x2]; mov [rdi], cx; mov [rdi+0x2], dl; ret; 
0x0000000014adca: mov dh, 0x0; add [rbp-0x3f6af040], al; add rsp, 0x8; movzx eax, al; ret; 
0x00000000091b71: mov dh, 0x0; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000008df87: mov dh, 0x0; ret; 
0x0000000016ca46: mov dh, 0x10; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000040fe9: mov dh, 0x11; test dl, dl; jne short 0x0000000000040fc8; ret; 
0x0000000016c746: mov dh, 0x13; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000009c299: mov dh, 0x14; add [rax+rdi-0x3e], eax; jne short 0x000000000009c288; sub rax, 0x10; ret; 
0x000000000f0800: mov dh, 0x14; cmp ch, cl; ret; 
0x0000000016c446: mov dh, 0x16; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000018b1d1: mov dh, 0x16; mov [rdi], dl; lea rax, [rdi+0x1]; vzeroupper; ret; 
0x000000001898f1: mov dh, 0x16; mov [rdi], dl; mov byte ptr [rdi+0x1], 0x0; vzeroupper; ret; 
0x0000000016de01: mov dh, 0x16; mov [rdi], dl; ret; 
0x0000000018a4a1: mov dh, 0x16; mov [rdi], dl; vzeroupper; ret; 
0x000000000ac8c5: mov dh, 0x16; sub eax, edx; ret; 
0x0000000016c146: mov dh, 0x19; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000a0558: mov dh, 0x1; add [rax-0x73], cl; adc eax, 0x1b58e; cmove rax, rdx; ret; 
0x0000000017fe27: mov dh, 0x1; add [rbx+0x148b8104], cl; xchg ecx, eax; sub eax, edx; ret; 
0x0000000016be46: mov dh, 0x1c; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016bb46: mov dh, 0x1f; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b846: mov dh, 0x22; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000a863a: mov dh, 0x31; test sil, sil; jne short 0x00000000000a8630; mov [rdx], rcx; ret; 
0x0000000009204f: mov dh, 0x36; call qword ptr [rax+0x18]; 
0x0000000005b3f2: mov dh, 0x43; add [rax+rax*8-0x7cb6f78c], eax; ret; 
0x00000000038023: mov dh, 0x43; add [rax-0x7d], ecx; ret; 
0x000000000eb5d8: mov dh, 0x43; add [rcx-0x73], ecx; push rbx; add [rcx-0x7f], ecx; ret; 
0x000000000ea5a1: mov dh, 0x43; add cl, [rax-0x7d]; ret; 
0x000000000eb792: mov dh, 0x43; add cl, [rcx-0x7d]; ret; 
0x000000000a8bc0: mov dh, 0x44; and al, 0xe; mov [rdi+0x6], al; lea rax, [rdi+rdx-0x1]; ret; 
0x000000000a8b87: mov dh, 0x44; and al, 0xf4; mov [rdi+0x4], al; lea rax, [rdi+rdx-0x1]; ret; 
0x00000000199071: mov dh, 0x44; and al, 0xf; add rsp, 0x10; pop rbx; ret; 
0x000000000a8b59: mov dh, 0x44; and al, 0xfa; mov [rdi+0x2], al; lea rax, [rdi+rdx-0x1]; ret; 
0x000000000666ce: mov dh, 0x45; add [rax-0x7d], cl; ret; 
0x00000000074564: mov dh, 0x46; or al, 0x83; ret; 
0x000000000e820a: mov dh, 0x47; add [rax-0x7d], ecx; mov dword ptr [rcx], 0xac75c084; xor eax, eax; ret; 
0x00000000191ff1: mov dh, 0x47; cmc; movzx edx, byte ptr [rsi-0xb]; sub eax, edx; ret; 
0x0000000018e331: mov dh, 0x47; dec dword ptr [rdi]; mov dh, 0x4e; jmp far fword ptr [rcx]; 
0x0000000018e0e4: mov dh, 0x47; dec dword ptr [rdi]; mov dh, 0x56; jmp far fword ptr [rcx]; 
0x00000000191fe1: mov dh, 0x47; hlt; movzx edx, byte ptr [rsi-0xc]; sub eax, edx; ret; 
0x00000000191fd1: mov dh, 0x47; movzx edx, byte ptr [rsi-0xd]; sub eax, edx; ret; 
0x00000000191fc1: mov dh, 0x47; movzx edx, byte ptr [rsi-0xe]; sub eax, edx; ret; 
0x00000000029e37: mov dh, 0x48; dec dword ptr [rax+0x3948074a]; ret; 
0x0000000014c336: mov dh, 0x49; or al, [rax]; syscall; 
0x000000000eb018: mov dh, 0x4; adc [rcx], bh; ret far; 
0x00000000077b38: mov dh, 0x4; add ecx, [rax+0x63]; add al, 0x86; add rax, rbx; jmp rax; 
0x00000000077b96: mov dh, 0x4; add ecx, [rax+0x63]; add al, 0x87; add rax, rbx; jmp rax; 
0x00000000048d39: mov dh, 0x4b; add [rax-0x7d], ecx; ret; 
0x000000000a4016: mov dh, 0x4d; add byte ptr [rcx+0xf], 0x93; ret; 
0x0000000018e335: mov dh, 0x4e; jmp far fword ptr [rcx]; 
0x000000000fe03d: mov dh, 0x4e; xor [rax+0x63], cl; or al, 0x8e; add rcx, rsi; notrack jmp rcx; 
0x000000000fe7a6: mov dh, 0x4f; or [rcx+0x63], cl; or al, 0x89; add rcx, r9; notrack jmp rcx; 
0x00000000031794: mov dh, 0x53; add [rax-0x7d], ecx; ret; 
0x000000000a8a23: mov dh, 0x54; and al, 0x16; mov [rdi+0x6], dl; ret; 
0x000000000a8ae0: mov dh, 0x54; and al, 0xe; mov [rax+0x6], dl; ret; 
0x000000000a8aaf: mov dh, 0x54; and al, 0xf4; mov [rax+0x4], dl; ret; 
0x000000000a89ea: mov dh, 0x54; and al, 0xf4; mov [rdi+0x4], dl; ret; 
0x000000000a8a91: mov dh, 0x54; and al, 0xfa; mov [rax+0x2], dl; ret; 
0x000000000a89cc: mov dh, 0x54; and al, 0xfa; mov [rdi+0x2], dl; ret; 
0x00000000183cc6: mov dh, 0x54; cmp ah, [rax]; sub eax, edx; vzeroupper; ret; 
0x000000000eb286: mov dh, 0x55; add bh, [rcx]; ret far; 
0x000000000ebe7c: mov dh, 0x55; add cl, [rbp-0x73]; add al, 0x39; ret far; 
0x00000000191ff5: mov dh, 0x56; cmc; sub eax, edx; ret; 
0x00000000191fe5: mov dh, 0x56; hlt; sub eax, edx; ret; 
0x0000000018e0e8: mov dh, 0x56; jmp far fword ptr [rcx]; 
0x00000000191fd5: mov dh, 0x56; sub eax, edx; ret; 
0x00000000191fc5: mov dh, 0x56; sub eax, edx; ret; 
0x000000000f7e4a: mov dh, 0x58; cmp dh, dh; ret; 
0x0000000005d7e8: mov dh, 0x58; or al, 0x89; fdiv st, st(6); ret; 
0x0000000005c145: mov dh, 0x58; or al, 0xf6; ret; 
0x0000000013f3fa: mov dh, 0x5d; add cl, ch; imul edi, esi, 0xffffffff; jmp qword ptr [rsi+0xf]; 
0x000000000b8d36: mov dh, 0x66; str [rbx+0x63]; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000157391: mov dh, 0x6; lea rsi, [rsp+0x4]; mov [rsp+0x4], eax; mov rax, [rdi+0x8]; call qword ptr [rax+0x48]; 
0x00000000068126: mov dh, 0x6b; add [rax-0x7d], ecx; ret; 
0x0000000012dec6: mov dh, 0x71; cmc; call qword ptr [rax-0x18]; 
0x000000000d4eeb: mov dh, 0x73; add [rax-0x7d], ecx; ret; 
0x000000001460dc: mov dh, 0x7; add eax, ecx; sub rdx, 0x1; jne short 0x0000000000146068; ret; 
0x00000000184d61: mov dh, 0x7; movzx ecx, byte ptr [rsi]; sub eax, ecx; ret; 
0x000000000ac8c2: mov dh, 0x7; movzx edx, byte ptr [rsi]; sub eax, edx; ret; 
0x000000000aa3c4: mov dh, 0x7; sub eax, ecx; ret; 
0x00000000184314: mov dh, 0x7; sub eax, ecx; vzeroupper; ret; 
0x000000000b7656: mov dh, 0x7b; str [rbx+0x63]; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000053c13: mov dh, 0x84; and al, 0x87; add [rax], al; add [rcx-0x7d], cl; ret; 
0x00000000053ece: mov dh, 0x8c; and al, 0x87; add [rax], al; add [rcx-0x7d], cl; ret; 
0x00000000141976: mov dh, 0x9; out dx, al; jmp qword ptr [rsp+rax*2-0x77]; 
0x00000000127676: mov dh, 0xac; out dx, eax; jmp qword ptr [rsi+0xf]; 
0x00000000024ceb: mov dh, 0xc0; add eax, 0x1; push rax; call rbx; 
0x0000000014dd47: mov dh, 0xc0; add eax, 0x1; ret; 
0x00000000157ab0: mov dh, 0xc0; add rsp, 0x18; ret; 
0x0000000010fbc6: mov dh, 0xc0; add rsp, 0x58; ret; 
0x0000000014a065: mov dh, 0xc0; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000000ce0c4: mov dh, 0xc0; lea eax, [rax+rax-0x1]; ret; 
0x000000000e522f: mov dh, 0xc0; lea rax, [rax+rax-0x1]; ret; 
0x000000000901d3: mov dh, 0xc0; movsxd rax, [r10+rax*4]; add rax, r10; notrack jmp rax; 
0x00000000090205: mov dh, 0xc0; movsxd rax, [r11+rax*4]; add rax, r11; notrack jmp rax; 
0x00000000109109: mov dh, 0xc0; movsxd rax, [r12+rax*4]; add rax, r12; notrack jmp rax; 
0x000000000d6100: mov dh, 0xc0; movsxd rax, [r14+rax*4]; add rax, r14; notrack jmp rax; 
0x0000000010b14f: mov dh, 0xc0; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x000000000d4f13: mov dh, 0xc0; movsxd rax, [rdi+rax*4]; add rax, rdi; notrack jmp rax; 
0x00000000064239: mov dh, 0xc0; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000080658: mov dh, 0xc0; movsxd rax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x00000000062e9c: mov dh, 0xc0; neg eax; pop rbp; ret; 
0x0000000002470d: mov dh, 0xc0; neg eax; ret; 
0x00000000149c8e: mov dh, 0xc0; pop r12; ret; 
0x00000000148b34: mov dh, 0xc0; pop rbp; pop r12; ret; 
0x0000000008e00e: mov dh, 0xc0; pop rbx; neg eax; ret; 
0x00000000149ffb: mov dh, 0xc0; pop rbx; pop rbp; ret; 
0x00000000043c60: mov dh, 0xc0; ret; 
0x000000000ac8e5: mov dh, 0xc0; sar rdx, cl; movzx edx, dl; sub eax, edx; ret; 
0x00000000094cc2: mov dh, 0xc0; sub eax, 0x2; add rsp, 0x8; ret; 
0x000000000bc171: mov dh, 0xc1; pop rbx; ret; 
0x00000000090e14: mov dh, 0xc3; pop rbx; pop rbp; pop r12; ret; 
0x000000001563c2: mov dh, 0xc5; mov rsi, rsp; mov [rsp], rax; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x000000000bbf82: mov dh, 0xc6; mov rdx, rdi; rep stosb [rdi]; mov rax, rdx; ret; 
0x00000000027226: mov dh, 0xc6; test sil, sil; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x00000000193f3e: mov dh, 0xc8; add rdx, r10; notrack jmp rdx; 
0x000000000310c6: mov dh, 0xc8; sbb eax, [rax]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000012078b: mov dh, 0xc; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x000000000ecbf1: mov dh, 0xc; or [rax+0x63], cl; ret; 
0x00000000040aaa: mov dh, 0xd2; movsxd r10, [r11+r10*4]; add r10, r11; notrack jmp r10; 
0x00000000064959: mov dh, 0xd2; movsxd rax, [rcx+rdx*4]; add rax, rcx; notrack jmp rax; 
0x00000000052d75: mov dh, 0xd2; movsxd rdx, [rdi+rdx*4]; add rdx, rdi; notrack jmp rdx; 
0x000000000ac8eb: mov dh, 0xd2; sub eax, edx; ret; 
0x0000000011eed9: mov dh, 0xd7; shr rax, 0xc; xor al, al; or eax, edx; ret; 
0x000000000eff93: mov dh, 0xdb; movsxd rax, [rdx+rbx*4]; add rax, rdx; notrack jmp rax; 
0x00000000064620: mov dh, 0xe4; movsxd rax, [rdi+r12*4]; add rax, rdi; notrack jmp rax; 
0x000000000bbc2d: mov dh, 0xe; mov [rdi], cl; ret; 
0x000000000aa3c1: mov dh, 0xe; movzx eax, byte ptr [rdi]; sub eax, ecx; ret; 
0x00000000184311: mov dh, 0xe; movzx eax, byte ptr [rdi]; sub eax, ecx; vzeroupper; ret; 
0x00000000184d64: mov dh, 0xe; sub eax, ecx; ret; 
0x0000000016f546: mov dh, 0xea; add al, 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016f246: mov dh, 0xed; add al, 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000151f36: mov dh, 0xee; or [rax], eax; syscall; 
0x0000000016ef46: mov dh, 0xf0; add al, 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000d83b6: mov dh, 0xf1; movsxd rdx, [rdi+rsi*4]; add rdx, rdi; notrack jmp rdx; 
0x0000000016ec46: mov dh, 0xf3; add al, 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000bcf95: mov dh, 0xf3; call rbp; 
0x0000000016e946: mov dh, 0xf6; add al, 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000012fb89: mov dh, 0xf6; mov eax, edi; or eax, esi; bswap eax; ret; 
0x000000000f00e4: mov dh, 0xf6; movsxd rax, [rdx+r14*4]; add rax, rdx; notrack jmp rax; 
0x000000000fcf7b: mov dh, 0xf6; movsxd rax, [rdx+rsi*4]; add rax, rdx; notrack jmp rax; 
0x0000000016e646: mov dh, 0xf9; add al, 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000d833c: mov dh, 0xf9; movsxd rdx, [r9+rdi*4]; add rdx, r9; notrack jmp rdx; 
0x0000000016e346: mov dh, 0xfc; add al, 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000009659c: mov dh, 0xfc; call far fword ptr [rax+0x5a]; 
0x0000000012fb21: mov dh, 0xff; and edx, 0xc0000000; cmp edx, 0x80000000; cmovne eax, edi; ret; 
0x00000000157d27: mov dh, 0xff; dec dword ptr [rax-0x75]; cmp [rax-0x77], cl; ret; 
0x00000000157d63: mov dh, 0xff; dec dword ptr [rax-0x77]; ret; 
0x000000000fce20: mov dh, 0xff; movsxd rax, [r10+r15*4]; add rax, r10; notrack jmp rax; 
0x000000000fccbe: mov dh, 0xff; movsxd rax, [r14+r15*4]; add rax, r14; notrack jmp rax; 
0x0000000011931a: mov dh, ah; call far fword ptr [rdx+0x5e]; 
0x0000000015f7d4: mov dh, al; or [rax], al; mov rdi, [rdi]; call qword ptr [rax+0x1e8]; 
0x00000000151c62: mov dh, cl; or [rax], eax; syscall; 
0x000000000cb4c1: mov dh, dh; jmp qword ptr [rsi+0x66]; 
0x00000000093074: mov dil, 0x15; add [rdi], cl; add eax, 0xffff2ee9; call qword ptr [rax+0x1b9c031]; 
0x0000000009ca5e: mov dil, r15b; jmp qword ptr [rsi+0xf]; 
0x0000000010e639: mov dl, 0x0; add [rax], al; add rsp, 0x30; pop rbx; ret; 
0x0000000011fd98: mov dl, 0x0; add [rax], al; syscall; 
0x0000000016c68a: mov dl, 0x16; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000009f41a: mov dl, 0x30; clc; call far fword ptr [rdx+0x31]; 
0x000000000ffa55: mov dl, 0x39; ret far; 
0x0000000017c8aa: mov dl, 0x3; add [rax], al; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x00000000123140: mov dl, 0x3; add al, 0xa; ret; 
0x0000000016968a: mov dl, 0x42; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000e4ae6: mov dl, 0x48; add eax, edx; notrack jmp rax; 
0x000000000a3b0a: mov dl, 0x4; stc; jmp qword ptr [rsi-0x70]; 
0x0000000015caa2: mov dl, 0x4b; or [rax], eax; syscall; 
0x000000000319ea: mov dl, 0x5; add [rax], al; xchg ax, ax; ret; 
0x0000000011af40: mov dl, 0x7; add [rax], al; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x00000000124922: mov dl, 0xb3; or al, 0x0; syscall; 
0x00000000120b84: mov dl, 0xc; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x2]; mov eax, 0xffffffff; ret; 
0x00000000142f62: mov dl, 0xda; or al, [rax]; syscall; 
0x00000000080f0e: mov dl, 0xdb; adc al, [rax]; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x0000000012f50a: mov dl, 0xe4; clc; jmp qword ptr [rsi-0x70]; 
0x0000000016f18a: mov dl, 0xf0; add al, 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000068e84: mov dl, 0xff; jmp qword ptr [rsi+0xf]; 
0x0000000013cfa2: mov dl, [rbx-0x12]; jmp qword ptr [rsi+0x2e]; 
0x000000000b7cc7: mov dl, [rsi+0x14]; movdqu [rdi], xmm0; mov [rdi+0x10], ecx; mov [rdi+0x14], dl; ret; 
0x000000000b9323: mov dl, [rsi+0x2]; mov [rdi], cx; mov [rdi+0x2], dl; lea rax, [rdi+0x3]; ret; 
0x000000000b7b93: mov dl, [rsi+0x2]; mov [rdi], cx; mov [rdi+0x2], dl; ret; 
0x000000000b9352: mov dl, [rsi+0x4]; mov [rdi], ecx; mov [rdi+0x4], dl; lea rax, [rdi+0x5]; ret; 
0x000000000b7bb2: mov dl, [rsi+0x4]; mov [rdi], ecx; mov [rdi+0x4], dl; ret; 
0x000000000b93a3: mov dl, [rsi+0x8]; mov [rdi], rcx; mov [rdi+0x8], dl; lea rax, [rdi+0x9]; ret; 
0x000000000b7bf3: mov dl, [rsi+0x8]; mov [rdi], rcx; mov [rdi+0x8], dl; ret; 
0x00000000167a00: mov dl, [rsi-0x1]; mov [rdi-0x1], dl; ret; 
0x000000000b9300: mov dl, [rsi]; mov [rdi], dl; lea rax, [rdi+0x1]; ret; 
0x000000000b7b70: mov dl, [rsi]; mov [rdi], dl; ret; 
0x000000000baf60: mov dl, [rsi]; mov [rdi], dl; xor ch, ch; mov [rdi+0x1], ch; ret; 
0x000000000ea3a1: mov dl, bh; add [rax], eax; add [rax-0x7d], cl; ret; 
0x0000000004a88a: mov dl, dh; add [rax], al; add [rax+0x63], cl; ret far; 
0x0000000007f016: mov ds, [rdx+0x3145ffff]; sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000010288c: mov dword ptr [0x38], 0x0; mov dword ptr fs:[0x40], 0x0; mov eax, r8d; ret; 
0x00000000102898: mov dword ptr [0x40], 0x0; mov eax, r8d; ret; 
0x00000000152ce1: mov dword ptr [r10], 0xe; lea rsi, [r10+0x8]; mov rdi, rbp; call qword ptr [rdx+0x10]; 
0x000000000951d3: mov dword ptr [r11+0x14], 0x0; ret; 
0x00000000047aa2: mov dword ptr [r11], 0x0; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000152f30: mov dword ptr [r13], 0xe; lea rsi, [r13+0x8]; mov rdi, rbp; call qword ptr [rax+0x10]; 
0x0000000014fdbe: mov dword ptr [r8+0x18], 0x1; movups [r8+0x8], xmm0; ret; 
0x0000000014d030: mov dword ptr [r8+0x4], 0x0; mov eax, 0x1; ret; 
0x0000000014d020: mov dword ptr [r8+0x4], 0x1; mov eax, 0x1; ret; 
0x000000000468bf: mov dword ptr [rax+0x10], 0x0; mov esi, ebp; ror rdx, 0x11; xor rdx, fs:[0x30]; call rdx; 
0x00000000121c9f: mov dword ptr [rax+0x10], 0x0; mov qword ptr [rip+0xca6af], 0x0; ret; 
0x00000000141a90: mov dword ptr [rax+0x10], 0x0; movups [rax], xmm0; add rsp, 0x8; ret; 
0x0000000014fdbf: mov dword ptr [rax+0x18], 0x1; movups [r8+0x8], xmm0; ret; 
0x00000000148b08: mov dword ptr [rax+0x23b0], 0x1; mov rax, [rax+0x23b8]; mov rdi, r12; call qword ptr [rax+0x28]; 
0x0000000014d031: mov dword ptr [rax+0x4], 0x0; mov eax, 0x1; ret; 
0x0000000014d021: mov dword ptr [rax+0x4], 0x1; mov eax, 0x1; ret; 
0x00000000087cf2: mov dword ptr [rax+0x50], 0x0; movups [rax+0x40], xmm0; pop rbx; ret; 
0x00000000169875: mov dword ptr [rax+0x5], 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001411f1: mov dword ptr [rax+0x8], 0x0; pop rbx; pop rbp; pop r12; ret; 
0x000000000927c5: mov dword ptr [rax+0x8], 0x0; ret; 
0x00000000121c97: mov dword ptr [rax+0x8], 0x1; mov qword ptr [rax+0x10], 0x0; mov qword ptr [rip+0xca6af], 0x0; ret; 
0x0000000008e93d: mov dword ptr [rax+rax], 0x748d4800; and al, 0x10; mov rdi, rbp; call qword ptr [rax+0x90]; 
0x000000001847f9: mov dword ptr [rax-0x15000000], 0xbc0ff3d0; ror byte ptr [rax+0x1], 0xf8; vzeroupper; ret; 
0x000000000927be: mov dword ptr [rax], 0x0; mov qword ptr [rax+0x8], 0x0; ret; 
0x00000000157d41: mov dword ptr [rax], 0x0; pop rbx; ret; 
0x00000000112828: mov dword ptr [rax], 0x16; mov eax, 0x1; ret; 
0x00000000043098: mov dword ptr [rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000015ce80: mov dword ptr [rax], 0x16; mov eax, r8d; mov qword ptr [rdx], 0x0; ret; 
0x00000000042f58: mov dword ptr [rax], 0x16; mov rax, 0xffffffffffffffff; ret; 
0x00000000119808: mov dword ptr [rax], 0x16; ret; 
0x000000000d01a8: mov dword ptr [rax], 0x16; xor eax, eax; ret; 
0x00000000042b6b: mov dword ptr [rax], 0x22; add rsp, 0x20; pop rbp; ret; 
0x00000000041e92: mov dword ptr [rax], 0x22; add rsp, 0x8; ret; 
0x00000000043c8c: mov dword ptr [rax], 0x26; mov eax, 0xffffffff; ret; 
0x000000001143bc: mov dword ptr [rax], 0x26; mov rax, 0xffffffffffffffff; ret; 
0x00000000160bdc: mov dword ptr [rax], 0x26; xor eax, eax; ret; 
0x0000000011d048: mov dword ptr [rax], 0x2; xor eax, eax; ret; 
0x00000000041288: mov dword ptr [rax], 0x2a; mov rax, r11; ret; 
0x00000000137a25: mov dword ptr [rax], 0x2d830000; or [rdx+0x4401000b], cl; mov eax, eax; pop rbp; ret; 
0x000000000d008b: mov dword ptr [rax], 0x4b; mov rax, r12; pop r12; ret; 
0x000000000d0188: mov dword ptr [rax], 0x4b; xor eax, eax; add rsp, 0x8; ret; 
0x0000000011ce25: mov dword ptr [rax], 0x50f0000; cmp rax, 0xfffffffffffff001; jae short 0x000000000011ce34; ret; 
0x00000000048368: mov dword ptr [rax], 0x5; mov eax, 0xffffffff; ret; 
0x0000000010dc70: mov dword ptr [rax], 0x5f; mov eax, 0xffffffff; ret; 
0x00000000082864: mov dword ptr [rax], 0x89480000; ret; 
0x000000000412e8: mov dword ptr [rax], 0x9; mov eax, 0xffffffff; pop rbp; ret; 
0x00000000024720: mov dword ptr [rax], 0x9; mov eax, 0xffffffff; ret; 
0x0000000009964b: mov dword ptr [rax], 0xc; add rsp, 0x10; mov rax, r8; pop rbp; ret; 
0x00000000114300: mov dword ptr [rax], 0xc; mov eax, 0xffffffff; ret; 
0x000000000980cb: mov dword ptr [rax], 0xc; mov rax, r8; ret; 
0x000000001197c1: mov dword ptr [rax], 0xc; xor eax, eax; pop rbx; ret; 
0x0000000009e98c: mov dword ptr [rax], 0xc; xor eax, eax; ret; 
0x000000001142ec: mov dword ptr [rax], 0xffffffff; xor eax, eax; ret; 
0x00000000154d16: mov dword ptr [rbp+0x10], 0x0; mov rdi, r13; call qword ptr [rax+0x28]; 
0x00000000141296: mov dword ptr [rbp+0x210], 0xffffffff; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000000e8194: mov dword ptr [rbp+0x8], 0x0; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000007e5de: mov dword ptr [rbp-0x4d0], 0x1; mov r9, rsi; jmp rax; 
0x0000000007d412: mov dword ptr [rbp-0x4d0], 0x1; mov r9, rsi; mov dword ptr [rbp-0x4f0], 0x0; jmp rax; 
0x0000000007da06: mov dword ptr [rbp-0x4d0], 0x1; mov r9, rsi; mov dword ptr [rbp-0x4f0], 0x1; jmp rax; 
0x0000000007d234: mov dword ptr [rbp-0x4d8], 0x0; mov dword ptr [rbp-0x4f8], 0x20; jmp rax; 
0x00000000078ac0: mov dword ptr [rbp-0x4d8], 0x1; mov r10, rdx; jmp rax; 
0x00000000076d2a: mov dword ptr [rbp-0x4e0], 0x1; jmp rax; 
0x00000000077f71: mov dword ptr [rbp-0x4e0], 0x1; mov r10, rdx; jmp rax; 
0x00000000077be1: mov dword ptr [rbp-0x4e0], 0x1; mov r10, rdx; mov dword ptr [rbp-0x510], 0x1; jmp rax; 
0x00000000076afd: mov dword ptr [rbp-0x4e8], 0x0; mov byte ptr [rbp-0x508], 0x20; mov [rbp-0x500], rsi; jmp rax; 
0x0000000007e3a6: mov dword ptr [rbp-0x4e8], 0x1; mov r9, rsi; mov dword ptr [rbp-0x4f8], 0x20; jmp rax; 
0x0000000007d41f: mov dword ptr [rbp-0x4f0], 0x0; jmp rax; 
0x0000000007da13: mov dword ptr [rbp-0x4f0], 0x1; jmp rax; 
0x00000000077a33: mov dword ptr [rbp-0x4f8], 0x1; jmp rax; 
0x0000000007d23e: mov dword ptr [rbp-0x4f8], 0x20; jmp rax; 
0x0000000007f220: mov dword ptr [rbp-0x500], 0x1; mov r9, rsi; jmp rax; 
0x0000000007e1ce: mov dword ptr [rbp-0x500], 0x1; movsxd rax, [rcx+rax*4]; add rax, rdx; jmp rax; 
0x0000000007d21f: mov dword ptr [rbp-0x510], 0x0; mov dword ptr [rbp-0x51c], 0x0; mov qword ptr [rbp-0x4d8], 0x0; mov dword ptr [rbp-0x4f8], 0x20; jmp rax; 
0x00000000076d1d: mov dword ptr [rbp-0x510], 0x0; mov r10, rdx; mov dword ptr [rbp-0x4e0], 0x1; jmp rax; 
0x00000000077bee: mov dword ptr [rbp-0x510], 0x1; jmp rax; 
0x0000000007f1df: mov dword ptr [rbp-0x510], 0x1; movsxd rax, [rsi+rax*4]; add rax, rdx; jmp rax; 
0x0000000007d229: mov dword ptr [rbp-0x51c], 0x0; mov qword ptr [rbp-0x4d8], 0x0; mov dword ptr [rbp-0x4f8], 0x20; jmp rax; 
0x00000000077c23: mov dword ptr [rbp-0x51c], 0x1; jmp rax; 
0x0000000007f1a0: mov dword ptr [rbp-0x51c], 0x1; mov r9, rsi; jmp rax; 
0x0000000007e35e: mov dword ptr [rbp-0x51c], 0x1; movsxd rax, [rcx+rax*4]; add rax, rdx; jmp rax; 
0x00000000076af2: mov dword ptr [rbp-0x524], 0x0; mov qword ptr [rbp-0x4e8], 0x0; mov byte ptr [rbp-0x508], 0x20; mov [rbp-0x500], rsi; jmp rax; 
0x00000000078ad8: mov dword ptr [rbp-0x524], 0x1; mov r10, rdx; jmp rax; 
0x00000000078930: mov dword ptr [rbp-0x528], 0x1; mov r10, rdx; jmp rax; 
0x0000000007f210: mov dword ptr [rbp-0x528], 0x1; mov r9, rsi; jmp rax; 
0x0000000007df44: mov dword ptr [rbp-0x528], 0x1; movsxd rax, [rcx+rax*4]; add rax, rdx; jmp rax; 
0x0000000007e2c3: mov dword ptr [rbp-0x530], 0x0; jmp rax; 
0x0000000007f110: mov dword ptr [rbp-0x530], 0x1; mov r9, rsi; jmp rax; 
0x0000000007e2fe: mov dword ptr [rbp-0x530], 0x1; movsxd rax, [rax+rcx*4]; add rax, rdx; jmp rax; 
0x00000000078aa0: mov dword ptr [rbp-0x538], 0x1; mov r10, rdx; jmp rax; 
0x0000000007f1b8: mov dword ptr [rbp-0x538], 0x1; mov r9, rsi; jmp rax; 
0x0000000007e546: mov dword ptr [rbp-0x538], 0x1; movsxd rax, [rcx+rax*4]; add rax, rdx; jmp rax; 
0x00000000078009: mov dword ptr [rbp-0x540], 0x0; mov r10, rdx; mov dword ptr [rbp-0x54c], 0x1; jmp rax; 
0x00000000078ab0: mov dword ptr [rbp-0x540], 0x1; mov r10, rdx; jmp rax; 
0x0000000007e2b6: mov dword ptr [rbp-0x540], 0x1; mov r9, rsi; mov dword ptr [rbp-0x530], 0x0; jmp rax; 
0x00000000078016: mov dword ptr [rbp-0x54c], 0x1; jmp rax; 
0x00000000121769: mov dword ptr [rbp-0x7d0], 0x0; mov byte ptr [rbp-0x7ca], 0x0; mov byte ptr [rbp-0x7c9], 0x73; syscall; 
0x0000000012c587: mov dword ptr [rbp-0x80], 0x0; movups [rbp-0x78], xmm7; call rcx; 
0x000000000a20ef: mov dword ptr [rbp], 0x0; pop rbp; pop r12; ret; 
0x0000000014dd81: mov dword ptr [rbp], 0x0; pop rbx; pop rbp; pop r12; ret; 
0x00000000152f31: mov dword ptr [rbp], 0xe; lea rsi, [r13+0x8]; mov rdi, rbp; call qword ptr [rax+0x10]; 
0x0000000002fe07: mov dword ptr [rbx+0x10], 0x0; pop rbx; ret; 
0x00000000154b12: mov dword ptr [rbx+0x10], 0x1; mov rdi, r13; call qword ptr [rax+0x28]; 
0x000000000951d4: mov dword ptr [rbx+0x14], 0x0; ret; 
0x00000000146a15: mov dword ptr [rbx+0x18], 0x0; call qword ptr [rax+0x28]; 
0x00000000157896: mov dword ptr [rbx+0x18], 0x0; pop rbx; ret; 
0x00000000146996: mov dword ptr [rbx+0x18], 0x1; call qword ptr [rax+0x28]; 
0x00000000148a9c: mov dword ptr [rbx+0x23b0], 0x0; mov rdi, r12; call qword ptr [rax+0x28]; 
0x000000000ff54f: mov dword ptr [rbx+0x28], 0x0; pop rbx; ret; 
0x00000000149cff: mov dword ptr [rbx+0x38], 0x0; mov [rcx], eax; sub rdx, rsi; mov rbp, rdx; call qword ptr [rbx+0x10]; 
0x00000000150982: mov dword ptr [rbx+0x58], 0x0; mov esi, [rbx+0x88]; mov rdi, r15; call qword ptr [rax+0x28]; 
0x000000000919ee: mov dword ptr [rbx+0x58], 0x0; movups [rbx+0x48], xmm0; pop rbx; ret; 
0x0000000009368e: mov dword ptr [rbx+0x58], 0x0; pxor xmm0, xmm0; movups [rbx+0x48], xmm0; pop rbx; ret; 
0x0000000014ddae: mov dword ptr [rbx+0x58], 0x28; pop rbx; pop rbp; pop r12; ret; 
0x0000000008fdbe: mov dword ptr [rbx+0x70], 0xffffffff; pop rbx; ret; 
0x00000000025b37: mov dword ptr [rbx], 0x0; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000019906a: mov dword ptr [rbx], 0x0; movzx eax, byte ptr [rsp+0xf]; add rsp, 0x10; pop rbx; ret; 
0x000000001197f6: mov dword ptr [rbx], 0x0; pop rbx; ret; 
0x000000000a8948: mov dword ptr [rcx-0x7c], 0xc3da75f9; nop; ret; 
0x00000000163375: mov dword ptr [rcx], 0x0; mov eax, 0xffffffff; ret; 
0x00000000064bc3: mov dword ptr [rcx], 0x74e48545; and al, [rbx-0x61f43]; call qword ptr [rax]; 
0x000000000e820f: mov dword ptr [rcx], 0xac75c084; xor eax, eax; ret; 
0x0000000003178e: mov dword ptr [rcx], 0xfff4788; mov dh, 0x53; add [rax-0x7d], ecx; ret; 
0x0000000014db00: mov dword ptr [rdi+0x10], 0x2; add rdi, 0x10; jmp rcx; 
0x00000000157d0d: mov dword ptr [rdi+0x20], 0x0; ret; 
0x00000000157d05: mov dword ptr [rdi+0x28], 0x0; mov qword ptr [rdi+0x20], 0x0; ret; 
0x00000000150650: mov dword ptr [rdi+0x58], 0x2; add rdi, 0x58; jmp rcx; 
0x0000000014fd10: mov dword ptr [rdi+0x68], 0x2; add rdi, 0x68; jmp rcx; 
0x0000000009ef63: mov dword ptr [rdi+0x8], 0x0; xor eax, eax; mov [rdi], rsi; ret; 
0x0000000013b437: mov dword ptr [rdi+0x8], 0x29; mov [rdi+0xc], edx; mov [rsi], rdi; ret; 
0x0000000014ced0: mov dword ptr [rdi+0xc8], 0x2; add rdi, 0xc8; jmp rcx; 
0x00000000047496: mov dword ptr [rdi], 0x0; pop rbx; ret; 
0x00000000148a00: mov dword ptr [rdi], 0x2; add rsp, 0x8; pop rbx; pop rbp; jmp rcx; 
0x0000000006304d: mov dword ptr [rdx+0x4], 0x1; ret; 
0x00000000057b6b: mov dword ptr [rdx], 0x0; mov eax, 0x1; ret; 
0x00000000057d7e: mov dword ptr [rdx], 0x0; mov eax, 0x2; ret; 
0x0000000015ce8a: mov dword ptr [rdx], 0x0; ret; 
0x00000000152ce2: mov dword ptr [rdx], 0xe; lea rsi, [r10+0x8]; mov rdi, rbp; call qword ptr [rdx+0x10]; 
0x00000000057c62: mov dword ptr [rdx], 0xffffc002; ret; 
0x0000000009d73f: mov dword ptr [rip+0x151763], 0x1; mov eax, r12d; pop r12; ret; 
0x0000000009a08e: mov dword ptr [rip+0x154de0], 0x0; ret; 
0x00000000095258: mov dword ptr [rip+0x157052], 0x1; mov [rip+0x157044], eax; ret; 
0x00000000095231: mov dword ptr [rip+0x157079], 0x1; mov [rip+0x15704e], rax; ret; 
0x00000000095208: mov dword ptr [rip+0x1570a2], 0x1; mov [rip+0x15706f], rax; ret; 
0x000000000951e8: mov dword ptr [rip+0x1570c2], 0x1; mov [rip+0x157087], rax; ret; 
0x00000000093970: mov dword ptr [rip+0x15ae4e], 0x0; ret; 
0x00000000093965: mov dword ptr [rip+0x15ae51], 0x0; mov qword ptr [rip+0x15ae4e], 0x0; ret; 
0x00000000094757: mov dword ptr [rip+0x15cd2f], 0x1; ret; 
0x000000000474d8: mov dword ptr [rip+0x1a6ff6], 0x0; mov rax, [rax]; pop rbx; mov eax, [rax+0x58]; ret; 
0x000000000473f0: mov dword ptr [rip+0x1a70d6], 0x0; mov rax, [rax]; pop rbx; mov eax, [rax+0x58]; ret; 
0x000000000475ad: mov dword ptr [rip+0x1a9d39], 0x0; mov eax, [rax+0x58]; ret; 
0x000000001987a8: mov dword ptr [rip+0x554ce], 0x0; ret; 
0x0000000019830c: mov dword ptr [rip+0x5565a], 0x0; add rsp, 0x8; ret; 
0x00000000198add: mov dword ptr [rip+0x56649], 0x0; ret; 
0x00000000198b43: mov dword ptr [rip+0x56a1b], 0x0; add rsp, 0x8; ret; 
0x00000000198c16: mov dword ptr [rip+0x57250], 0x0; ret; 
0x00000000198d48: mov dword ptr [rip+0x57cce], 0x0; pop rbx; ret; 
0x0000000015de19: mov dword ptr [rip+0x8e60d], 0xffffffff; add rsp, 0x8; ret; 
0x0000000015d28f: mov dword ptr [rip+0x93ea7], 0x0; add rsp, 0x8; ret; 
0x00000000153190: mov dword ptr [rip+0x9dc86], 0x2; ret; 
0x00000000121cd0: mov dword ptr [rip+0xca686], 0x0; ret; 
0x00000000121ca7: mov dword ptr [rip+0xca6af], 0x0; ret; 
0x00000000121c76: mov dword ptr [rip+0xca6e0], 0x2; ret; 
0x00000000121c50: mov dword ptr [rip+0xca706], 0x0; ret; 
0x000000001218d9: mov dword ptr [rip+0xcaa7d], 0x0; add rsp, 0x8; ret; 
0x000000001218a4: mov dword ptr [rip+0xcaab2], 0x3; add rsp, 0x8; ret; 
0x000000001176ec: mov dword ptr [rip+0xd808a], 0x0; mov qword ptr [rip+0xd808f], 0x0; add rsp, 0x8; ret; 
0x000000001176f7: mov dword ptr [rip+0xd808f], 0x0; add rsp, 0x8; ret; 
0x00000000115eca: mov dword ptr [rip+0xd976c], 0x0; add rsp, 0x8; ret; 
0x0000000014812e: mov dword ptr [rsi+0x10], 0x2; test eax, eax; je short 0x0000000000148140; xor eax, eax; ret; 
0x00000000148261: mov dword ptr [rsi+0x8], 0x0; mov [rsi+0x10], rax; ret; 
0x00000000148223: mov dword ptr [rsi+0x8], 0x1; mov [rsi+0x10], rax; ret; 
0x0000000004813f: mov dword ptr [rsi+0xc], 0x1000b; ret; 
0x00000000100498: mov dword ptr [rsi], 0x0; movups [rsi+0x8], xmm0; ret; 
0x000000001481d9: mov dword ptr [rsi], 0x0; ret; 
0x000000001481c0: mov dword ptr [rsi], 0x10; mov [rsi+0x8], rax; ret; 
0x0000000014825a: mov dword ptr [rsi], 0x10; mov qword ptr [rsi+0x8], 0x0; mov [rsi+0x10], rax; ret; 
0x0000000014821c: mov dword ptr [rsi], 0x10; mov qword ptr [rsi+0x8], 0x1; mov [rsi+0x10], rax; ret; 
0x00000000148245: mov dword ptr [rsi], 0x6; movups [rsi+0x8], xmm1; ret; 
0x00000000148233: mov dword ptr [rsi], 0x7; mov [rsi+0x8], eax; ret; 
0x0000000014826d: mov dword ptr [rsi], 0x8; ret; 
0x000000001481ff: mov dword ptr [rsi], 0x9; movups [rsi+0x8], xmm0; ret; 
0x00000000148274: mov dword ptr [rsi], 0xa; ret; 
0x0000000014827b: mov dword ptr [rsi], 0xb; ret; 
0x00000000148250: mov dword ptr [rsi], 0xc; ret; 
0x000000001538da: mov dword ptr [rsp+0x10], 0x0; mov dword ptr [rsp+0x30], 0x0; mov [rsp+0x38], rdx; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x00000000153be3: mov dword ptr [rsp+0x10], 0x0; mov dword ptr [rsp+0x30], 0x2; movups [rsp+0x18], xmm1; movups [rsp+0x38], xmm0; call qword ptr [rax+0x18]; 
0x00000000153a9b: mov dword ptr [rsp+0x10], 0x1; mov dword ptr [rsp+0x18], 0x1; call qword ptr [rax+0x18]; 
0x00000000153af7: mov dword ptr [rsp+0x10], 0x1; mov dword ptr [rsp+0x18], 0x1; mov dword ptr [rsp+0x20], 0x5; call qword ptr [rax+0x18]; 
0x00000000153aa3: mov dword ptr [rsp+0x18], 0x1; call qword ptr [rax+0x18]; 
0x00000000153aff: mov dword ptr [rsp+0x18], 0x1; mov dword ptr [rsp+0x20], 0x5; call qword ptr [rax+0x18]; 
0x00000000114b42: mov dword ptr [rsp+0x18], 0xffffffff; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000153b07: mov dword ptr [rsp+0x20], 0x5; call qword ptr [rax+0x18]; 
0x000000001538e2: mov dword ptr [rsp+0x30], 0x0; mov [rsp+0x38], rdx; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x00000000153b6d: mov dword ptr [rsp+0x30], 0x1; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x00000000153beb: mov dword ptr [rsp+0x30], 0x2; movups [rsp+0x18], xmm1; movups [rsp+0x38], xmm0; call qword ptr [rax+0x18]; 
0x0000000015395d: mov dword ptr [rsp+0x30], 0x3; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x000000001539cd: mov dword ptr [rsp+0x30], 0x4; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x00000000153a3d: mov dword ptr [rsp+0x30], 0x5; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x0000000014ef63: mov dword ptr [rsp+0x40], 0x0; mov [rsp+0x10], rax; mov rax, [rsp+0x48]; call qword ptr [rax+0x28]; 
0x000000000d0e92: mov dword ptr [rsp+0x40], 0x0; push 0x0; push 0x0; lea r8, [rsp+0x40]; call qword ptr [rax+0x1e0]; 
0x00000000153a93: mov dword ptr [rsp+0x8], 0x1; mov dword ptr [rsp+0x10], 0x1; mov dword ptr [rsp+0x18], 0x1; call qword ptr [rax+0x18]; 
0x00000000153aef: mov dword ptr [rsp+0x8], 0x1; mov dword ptr [rsp+0x10], 0x1; mov dword ptr [rsp+0x18], 0x1; mov dword ptr [rsp+0x20], 0x5; call qword ptr [rax+0x18]; 
0x00000000114b39: mov dword ptr [rsp+0x8], 0xffffffff; mov qword ptr [rsp+0x18], 0xffffffffffffffff; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000153cb9: mov dword ptr [rsp+0xa8], 0x1; mov dword ptr [rsp+0xb0], 0x1; mov dword ptr [rsp+0xb8], 0x1; call qword ptr [rax+0x18]; 
0x00000000153cc4: mov dword ptr [rsp+0xb0], 0x1; mov dword ptr [rsp+0xb8], 0x1; call qword ptr [rax+0x18]; 
0x00000000153ccf: mov dword ptr [rsp+0xb8], 0x1; call qword ptr [rax+0x18]; 
0x0000000014e73a: mov dword ptr [rsp+0xc], 0xc; mov esi, 0x8; mov rdi, rbp; call qword ptr [rax+0x30]; 
0x00000000153eaa: mov dword ptr [rsp+0xd0], 0x1; movups [rsp+0xb8], xmm5; call rax; 
0x00000000153e0e: mov dword ptr [rsp+0xd0], 0x2; movups [rsp+0xb8], xmm3; movups [rsp+0xd8], xmm0; call rax; 
0x00000000041c94: mov dword ptr [rsp-0x18], 0x0; fld st, tbyte ptr [rsp-0x18]; ret; 
0x00000000041c3d: mov dword ptr [rsp-0x18], 0x0; mov [rsp-0x10], ax; fstp tbyte ptr [rdi], st; fld st, tbyte ptr [rsp-0x18]; ret; 
0x000000001476c0: mov dword ptr [rsp], 0x0; call qword ptr [rax+0x20]; 
0x0000000013cca6: mov dword ptr [rsp], 0x0; call rax; 
0x00000000160882: mov dword ptr [rsp], 0x0; mov rax, [rsp+0x10]; mov rdi, [rsp+0x18]; call rax; 
0x000000000a20a2: mov dword ptr [rsp], 0x0; pop rbx; pop rbp; pop r12; ret; 
0x0000000013cbbc: mov dword ptr [rsp], 0x0; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000155b9e: mov dword ptr [rsp], 0x2; call r8; 
0x000000000df45f: mov dword ptr [rsp], 0x74; mov [rsp+0x10], rsi; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000010288b: mov dword ptr fs:[0x38], 0x0; mov dword ptr fs:[0x40], 0x0; mov eax, r8d; ret; 
0x00000000102897: mov dword ptr fs:[0x40], 0x0; mov eax, r8d; ret; 
0x00000000112827: mov dword ptr fs:[rax], 0x16; mov eax, 0x1; ret; 
0x00000000043097: mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000015ce7f: mov dword ptr fs:[rax], 0x16; mov eax, r8d; mov qword ptr [rdx], 0x0; ret; 
0x00000000042f57: mov dword ptr fs:[rax], 0x16; mov rax, 0xffffffffffffffff; ret; 
0x00000000119807: mov dword ptr fs:[rax], 0x16; ret; 
0x000000000d01a7: mov dword ptr fs:[rax], 0x16; xor eax, eax; ret; 
0x00000000042b6a: mov dword ptr fs:[rax], 0x22; add rsp, 0x20; pop rbp; ret; 
0x00000000041e91: mov dword ptr fs:[rax], 0x22; add rsp, 0x8; ret; 
0x00000000043c8b: mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x000000001143bb: mov dword ptr fs:[rax], 0x26; mov rax, 0xffffffffffffffff; ret; 
0x00000000160bdb: mov dword ptr fs:[rax], 0x26; xor eax, eax; ret; 
0x0000000011d047: mov dword ptr fs:[rax], 0x2; xor eax, eax; ret; 
0x00000000041287: mov dword ptr fs:[rax], 0x2a; mov rax, r11; ret; 
0x000000000d008a: mov dword ptr fs:[rax], 0x4b; mov rax, r12; pop r12; ret; 
0x000000000d0187: mov dword ptr fs:[rax], 0x4b; xor eax, eax; add rsp, 0x8; ret; 
0x00000000048367: mov dword ptr fs:[rax], 0x5; mov eax, 0xffffffff; ret; 
0x0000000010dc6f: mov dword ptr fs:[rax], 0x5f; mov eax, 0xffffffff; ret; 
0x000000000412e7: mov dword ptr fs:[rax], 0x9; mov eax, 0xffffffff; pop rbp; ret; 
0x0000000002471f: mov dword ptr fs:[rax], 0x9; mov eax, 0xffffffff; ret; 
0x0000000009964a: mov dword ptr fs:[rax], 0xc; add rsp, 0x10; mov rax, r8; pop rbp; ret; 
0x000000001142ff: mov dword ptr fs:[rax], 0xc; mov eax, 0xffffffff; ret; 
0x000000000980ca: mov dword ptr fs:[rax], 0xc; mov rax, r8; ret; 
0x000000001197c0: mov dword ptr fs:[rax], 0xc; xor eax, eax; pop rbx; ret; 
0x0000000009e98b: mov dword ptr fs:[rax], 0xc; xor eax, eax; ret; 
0x0000000016dd20: mov dx, [rsi+0x1]; mov cx, [rsi]; mov [rdi+0x1], dx; mov [rdi], cx; ret; 
0x000000000b8512: mov dx, [rsi+0x4]; mov [rdi], ecx; mov [rdi+0x4], dx; lea rax, [rdi+0x5]; ret; 
0x000000000b9362: mov dx, [rsi+0x4]; mov [rdi], ecx; mov [rdi+0x4], dx; lea rax, [rdi+0x6]; ret; 
0x000000000b6ed2: mov dx, [rsi+0x4]; mov [rdi], ecx; mov [rdi+0x4], dx; ret; 
0x000000000b8563: mov dx, [rsi+0x8]; mov [rdi], rcx; mov [rdi+0x8], dx; lea rax, [rdi+0x9]; ret; 
0x000000000b93c3: mov dx, [rsi+0x8]; mov [rdi], rcx; mov [rdi+0x8], dx; lea rax, [rdi+0xa]; ret; 
0x000000000b6f13: mov dx, [rsi+0x8]; mov [rdi], rcx; mov [rdi+0x8], dx; ret; 
0x00000000167be0: mov dx, [rsi-0x2]; mov [rdi-0x2], dx; ret; 
0x00000000167dc0: mov dx, [rsi-0x3]; mov cx, [rsi-0x2]; mov [rdi-0x3], dx; mov [rdi-0x2], cx; ret; 
0x000000000b84d0: mov dx, [rsi]; mov [rdi], dx; lea rax, [rdi+0x1]; ret; 
0x000000000b9310: mov dx, [rsi]; mov [rdi], dx; lea rax, [rdi+0x2]; ret; 
0x000000000b6e90: mov dx, [rsi]; mov [rdi], dx; ret; 
0x000000000baf70: mov dx, [rsi]; mov [rdi], dx; xor ch, ch; mov [rdi+0x2], ch; ret; 
0x000000001970e9: mov eax, 0x0; add [rax-0x7ab70000], al; ret; 
0x00000000041ff1: mov eax, 0x0; add [rax], al; add [rax+0x48c22148], al; mov [rdi], edx; ret; 
0x00000000041fc1: mov eax, 0x0; add [rax], al; add [rax+0x66c22148], al; movq mm0, rdx; ret; 
0x000000000bc1b3: mov eax, 0x0; and ch, 0xf0; pop rbx; cmovne rax, rdx; ret; 
0x00000000112b27: mov eax, 0x0; cmova eax, edx; ret; 
0x00000000115738: mov eax, 0x0; cmove rax, rbx; pop rbx; ret; 
0x000000000a28c5: mov eax, 0x0; cmovne r8, rax; mov rax, r8; ret; 
0x00000000127b0b: mov eax, 0x0; cmovns rax, [rbx+0x28]; pop rbx; ret; 
0x00000000055069: mov eax, 0x0; jne short 0x0000000000055073; push r10; ret; 
0x00000000055572: mov eax, 0x0; jne short 0x000000000005557c; push r10; ret; 
0x000000000e3214: mov eax, 0x1000; mov r10, r12; lea rsi, [rip+0xd115a]; mov eax, 0x142; syscall; 
0x00000000148e35: mov eax, 0x100; add [rax-0x77], cl; ret; 
0x00000000113cb6: mov eax, 0x100; mov [rdi+0x16], ax; ret; 
0x0000000013bd39: mov eax, 0x100; ret; 
0x0000000013bd30: mov eax, 0x101; ret; 
0x0000000010dd64: mov eax, 0x101; syscall; 
0x0000000013bd27: mov eax, 0x102; cmovne eax, edx; ret; 
0x0000000010dcb4: mov eax, 0x102; syscall; 
0x0000000010d98e: mov eax, 0x103; syscall; 
0x0000000010f427: mov eax, 0x104; syscall; 
0x00000000116cb9: mov eax, 0x105; syscall; 
0x0000000010d9e8: mov eax, 0x106; syscall; 
0x0000000010fd34: mov eax, 0x107; syscall; 
0x00000000062ee7: mov eax, 0x108; syscall; 
0x0000000010fc17: mov eax, 0x109; syscall; 
0x0000000009529c: mov eax, 0x10; cmovne rax, rdx; mov [rip+0x159bf4], rax; ret; 
0x000000001468b4: mov eax, 0x10; pop rbx; pop rbp; ret; 
0x000000000bc201: mov eax, 0x10; pop rbx; ret; 
0x00000000063058: mov eax, 0x10; ret; 
0x00000000113869: mov eax, 0x10; syscall; 
0x0000000010fc74: mov eax, 0x10a; syscall; 
0x0000000010fcd7: mov eax, 0x10b; syscall; 
0x0000000010dc21: mov eax, 0x10c; syscall; 
0x0000000010e3e3: mov eax, 0x10d; syscall; 
0x00000000115106: mov eax, 0x10e; mov rsi, [rsp+0x18]; mov edi, [rsp+0x14]; syscall; 
0x000000001150a4: mov eax, 0x10e; syscall; 
0x00000000112a68: mov eax, 0x10f; syscall; 
0x0000000011fe24: mov eax, 0x110; syscall; 
0x0000000011f6b3: mov eax, 0x113; mov rsi, [rsp+0x10]; mov edi, [rsp+0x8]; syscall; 
0x0000000011f663: mov eax, 0x113; syscall; 
0x0000000011f503: mov eax, 0x114; syscall; 
0x00000000113223: mov eax, 0x115; syscall; 
0x0000000011f5b3: mov eax, 0x116; syscall; 
0x0000000011311b: mov eax, 0x118; syscall; 
0x000000001130d7: mov eax, 0x118; syscall; 
0x0000000011f2bb: mov eax, 0x119; mov edi, [rsp+0x4]; syscall; 
0x0000000011f269: mov eax, 0x119; syscall; 
0x0000000010c193: mov eax, 0x11; syscall; 
0x0000000011fe84: mov eax, 0x11b; syscall; 
0x00000000112d4a: mov eax, 0x11d; mov rdx, rsi; xor esi, esi; syscall; 
0x000000001132d3: mov eax, 0x11d; syscall; 
0x0000000011feb7: mov eax, 0x11e; syscall; 
0x0000000011fee4: mov eax, 0x11f; syscall; 
0x00000000120b13: mov eax, 0x120; syscall; 
0x0000000011f317: mov eax, 0x121; mov edx, 0x8; syscall; 
0x0000000011f354: mov eax, 0x122; syscall; 
0x0000000011faf4: mov eax, 0x123; syscall; 
0x0000000010e924: mov eax, 0x124; syscall; 
0x0000000010e984: mov eax, 0x125; syscall; 
0x0000000011fc14: mov eax, 0x126; syscall; 
0x00000000114556: mov eax, 0x127; syscall; 
0x00000000114616: mov eax, 0x128; syscall; 
0x0000000010c243: mov eax, 0x12; syscall; 
0x00000000120c0d: mov eax, 0x12b; mov edi, [rsp+0x4]; syscall; 
0x00000000120bc3: mov eax, 0x12b; syscall; 
0x0000000011ff14: mov eax, 0x12c; syscall; 
0x0000000011f9a7: mov eax, 0x12d; syscall; 
0x0000000011f3e7: mov eax, 0x12e; syscall; 
0x00000000113d9b: mov eax, 0x12e; xor edi, edi; syscall; 
0x0000000011ff47: mov eax, 0x12f; syscall; 
0x0000000011f730: mov eax, 0x130; syscall; 
0x0000000011fa34: mov eax, 0x131; syscall; 
0x00000000115314: mov eax, 0x132; syscall; 
0x00000000120c73: mov eax, 0x133; syscall; 
0x0000000011ff74: mov eax, 0x134; syscall; 
0x0000000010d337: mov eax, 0x135; syscall; 
0x0000000011ffa7: mov eax, 0x136; syscall; 
0x0000000011ffd7: mov eax, 0x137; syscall; 
0x00000000114410: mov eax, 0x13; syscall; 
0x00000000062f2b: mov eax, 0x13c; syscall; 
0x00000000048250: mov eax, 0x13e; syscall; 
0x00000000120004: mov eax, 0x13f; syscall; 
0x000000000e3223: mov eax, 0x142; syscall; 
0x0000000011f7c8: mov eax, 0x145; syscall; 
0x00000000113063: mov eax, 0x146; mov rsi, [rsp+0x10]; mov edi, [rsp+0x8]; syscall; 
0x00000000113013: mov eax, 0x146; syscall; 
0x000000001146f6: mov eax, 0x147; syscall; 
0x00000000114856: mov eax, 0x148; syscall; 
0x0000000011f85c: mov eax, 0x149; syscall; 
0x0000000013de97: mov eax, 0x14; add edx, 0x1; syscall; 
0x00000000121764: mov eax, 0x14; mov dword ptr [rbp-0x7d0], 0x0; mov byte ptr [rbp-0x7ca], 0x0; mov byte ptr [rbp-0x7c9], 0x73; syscall; 
0x000000001144b0: mov eax, 0x14; syscall; 
0x00000000120034: mov eax, 0x14a; syscall; 
0x00000000120064: mov eax, 0x14b; syscall; 
0x0000000010d8b7: mov eax, 0x14c; syscall; 
0x0000000010e164: mov eax, 0x15; syscall; 
0x00000000094d70: mov eax, 0x16; ret; 
0x0000000010e954: mov eax, 0x16; syscall; 
0x00000000114ff0: mov eax, 0x17; mov edi, [rsp+0xc]; syscall; 
0x00000000114fa3: mov eax, 0x17; syscall; 
0x00000000094cd4: mov eax, 0x18; syscall; 
0x0000000011fcd7: mov eax, 0x19; syscall; 
0x0000000012770f: mov eax, 0x1; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000000dcfee: mov eax, 0x1; add rsp, 0x8; ret; 
0x000000000cf1c0: mov eax, 0x1; cmovg r9d, eax; mov eax, r9d; ret; 
0x000000000cf19e: mov eax, 0x1; cmovl r9d, eax; mov eax, r9d; ret; 
0x000000000cf0b0: mov eax, 0x1; jg short 0x00000000000cf0b9; neg eax; ret; 
0x00000000192af0: mov eax, 0x1; jg short 0x0000000000192b00; neg eax; ret; 
0x0000000018f8b6: mov eax, 0x1; jl short 0x000000000018f8c0; neg eax; ret; 
0x000000001573fc: mov eax, 0x1; mov [rdi+0x28], eax; mov [rdi+0x18], rsi; mov eax, r8d; ret; 
0x00000000057b85: mov eax, 0x1; mov [rdi], rsi; ret; 
0x000000000481c5: mov eax, 0x1; mov [rsi+0xe], ax; xor eax, eax; ret; 
0x000000000ec470: mov eax, 0x1; mov byte ptr [rdi], 0x5b; ret; 
0x00000000057c5d: mov eax, 0x1; mov dword ptr [rdx], 0xffffc002; ret; 
0x0000000011736a: mov eax, 0x1; mov eax, r8d; add rsp, 0x8; ret; 
0x0000000008cd71: mov eax, 0x1; mov eax, r8d; ret; 
0x0000000015d289: mov eax, 0x1; mov qword ptr [rip+0x93ea7], 0x0; add rsp, 0x8; ret; 
0x000000001506e4: mov eax, 0x1; movups [r8+0x20], xmm2; ret; 
0x000000000926e9: mov eax, 0x1; movups [rbp+0x38], xmm0; pop rbp; pop r12; ret; 
0x0000000014cf9e: mov eax, 0x1; movups [rdx], xmm1; ret; 
0x0000000014fde6: mov eax, 0x1; movups [rdx], xmm2; ret; 
0x000000001506f6: mov eax, 0x1; movups [rdx], xmm3; ret; 
0x000000001506d6: mov eax, 0x1; movups [rdx], xmm4; ret; 
0x000000001173a3: mov eax, 0x1; or dword ptr [rax], 0x8000; add rsp, 0x8; mov eax, r8d; ret; 
0x00000000060f39: mov eax, 0x1; pop rbp; pop r12; pop r13; ret; 
0x000000000875c4: mov eax, 0x1; pop rbp; pop r12; ret; 
0x0000000009eb43: mov eax, 0x1; pop rbx; pop rbp; pop r12; ret; 
0x000000000832fa: mov eax, 0x1; pop rbx; pop rbp; ret; 
0x0000000010c5a0: mov eax, 0x1; pop rbx; ret; 
0x000000000cfb51: mov eax, 0x1; ret; 
0x0000000005565e: mov eax, 0x1; ret; 
0x00000000043bb9: mov eax, 0x1; shl rax, cl; or [rdi], rax; xor eax, eax; ret; 
0x0000000010e0a0: mov eax, 0x1; syscall; 
0x000000000e5244: mov eax, 0x1; test edi, edi; js short 0x00000000000e5250; ret; 
0x00000000118a10: mov eax, 0x1a; syscall; 
0x00000000118ad4: mov eax, 0x1b; syscall; 
0x0000000010d15b: mov eax, 0x1c; syscall; 
0x00000000121227: mov eax, 0x1d; syscall; 
0x000000001211c4: mov eax, 0x1e; syscall; 
0x00000000121264: mov eax, 0x1f; syscall; 
0x0000000003429b: mov eax, 0x200; ret; 
0x000000000e509c: mov eax, 0x20; cmove rax, rdx; ret; 
0x000000000e5169: mov eax, 0x20; cmovne rax, rdx; ret; 
0x000000000e516a: mov eax, 0x20; cmovne rax, rdx; ret; 
0x000000000bc1fa: mov eax, 0x20; pop rbx; ret; 
0x0000000010e8c4: mov eax, 0x20; syscall; 
0x0000000010e8f4: mov eax, 0x21; syscall; 
0x000000000e2e70: mov eax, 0x22; syscall; 
0x000000000d41e4: mov eax, 0x24; syscall; 
0x000000000e2dc4: mov eax, 0x25; syscall; 
0x000000000d4214: mov eax, 0x26; syscall; 
0x000000000e40f4: mov eax, 0x27; syscall; 
0x00000000112fd7: mov eax, 0x28; syscall; 
0x000000001207d4: mov eax, 0x29; syscall; 
0x0000000011d604: mov eax, 0x2; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000000cfb61: mov eax, 0x2; ret; 
0x00000000057d84: mov eax, 0x2; ret; 
0x0000000013c19c: mov eax, 0x2; sub esi, 0x1; mov [rdi+0x1], sil; ret; 
0x000000001201d0: mov eax, 0x2a; syscall; 
0x00000000120100: mov eax, 0x2b; syscall; 
0x00000000120704: mov eax, 0x2c; mov rsi, [rsp+0x10]; mov edi, [rsp+0x8]; syscall; 
0x00000000120559: mov eax, 0x2c; syscall; 
0x00000000120441: mov eax, 0x2d; mov rdx, [rsp+0x10]; mov rsi, [rsp+0x8]; syscall; 
0x00000000120339: mov eax, 0x2d; syscall; 
0x00000000120610: mov eax, 0x2e; syscall; 
0x000000001204b0: mov eax, 0x2f; syscall; 
0x000000000bc1f3: mov eax, 0x30; pop rbx; ret; 
0x000000001207a4: mov eax, 0x30; syscall; 
0x00000000120194: mov eax, 0x31; syscall; 
0x000000001202f4: mov eax, 0x32; syscall; 
0x00000000120294: mov eax, 0x33; syscall; 
0x00000000120264: mov eax, 0x34; syscall; 
0x00000000120807: mov eax, 0x35; syscall; 
0x00000000120777: mov eax, 0x36; syscall; 
0x000000001202c7: mov eax, 0x37; syscall; 
0x000000000e2f68: mov eax, 0x38; syscall; 
0x000000000dd027: mov eax, 0x3; cmovne eax, edx; ret; 
0x0000000013a874: mov eax, 0x3; mov edi, [rbp-0x60]; syscall; 
0x000000000cfb71: mov eax, 0x3; ret; 
0x0000000010e840: mov eax, 0x3; syscall; 
0x000000000e3105: mov eax, 0x3a; syscall; 
0x000000000e31a4: mov eax, 0x3b; syscall; 
0x0000000011f166: mov eax, 0x3c; syscall; 
0x000000000e2c63: mov eax, 0x3d; syscall; 
0x00000000043404: mov eax, 0x3e; syscall; 
0x000000000e2b74: mov eax, 0x3f; syscall; 
0x000000000bc1ec: mov eax, 0x40; pop rbx; ret; 
0x000000000e5118: mov eax, 0x40; ret; 
0x000000001210b4: mov eax, 0x40; syscall; 
0x00000000121116: mov eax, 0x42; syscall; 
0x000000001211f4: mov eax, 0x43; syscall; 
0x0000000002f731: mov eax, 0x44000000; mov eax, eax; pop rbp; pop r12; ret; 
0x00000000121044: mov eax, 0x44; syscall; 
0x00000000120ee3: mov eax, 0x45; syscall; 
0x00000000120fe0: mov eax, 0x46; mov edi, [rsp+0x8]; syscall; 
0x00000000120f93: mov eax, 0x46; syscall; 
0x00000000121074: mov eax, 0x47; syscall; 
0x0000000010d38b: mov eax, 0x48000001; test eax, eax; je short 0x000000000010d3d0; xor edx, edx; call rax; 
0x00000000035f7c: mov eax, 0x48001bb4; lea edi, [rip+0x1b79f9]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000010e514: mov eax, 0x48; syscall; 
0x0000000010e5a4: mov eax, 0x49; syscall; 
0x000000000cfb81: mov eax, 0x4; ret; 
0x0000000010d4e3: mov eax, 0x4; syscall; 
0x000000001151d0: mov eax, 0x4a; syscall; 
0x00000000115290: mov eax, 0x4b; syscall; 
0x00000000148abe: mov eax, 0x4c000023; mov edi, esp; call qword ptr [rax+0x20]; 
0x00000000148b15: mov eax, 0x4c000023; mov edi, esp; call qword ptr [rax+0x28]; 
0x00000000116cf4: mov eax, 0x4c; syscall; 
0x00000000116d24: mov eax, 0x4d; syscall; 
0x0000000010eb1b: mov eax, 0x4f; syscall; 
0x0000000010ea44: mov eax, 0x50; syscall; 
0x0000000010ea74: mov eax, 0x51; syscall; 
0x00000000062eb4: mov eax, 0x52; syscall; 
0x0000000010dc84: mov eax, 0x53; syscall; 
0x0000000010fd64: mov eax, 0x54; syscall; 
0x0000000010e9c0: mov eax, 0x55; syscall; 
0x0000000010fbe4: mov eax, 0x56; syscall; 
0x0000000010fd04: mov eax, 0x57; syscall; 
0x0000000010fc44: mov eax, 0x58; syscall; 
0x0000000010fca4: mov eax, 0x59; syscall; 
0x0000000012cfbf: mov eax, 0x5; pop r12; pop rbp; ret; 
0x00000000106fe7: mov eax, 0x5; pop rbp; pop r12; ret; 
0x000000000cfb91: mov eax, 0x5; ret; 
0x0000000010d542: mov eax, 0x5; syscall; 
0x0000000010d541: mov eax, 0x5; syscall; 
0x0000000010db94: mov eax, 0x5a; syscall; 
0x0000000010fedc: mov eax, 0x5b000000; pop r12; pop r13; pop r14; ret; 
0x000000000e49ed: mov eax, 0x5b000000; pop rbp; ret; 
0x0000000010dbc4: mov eax, 0x5b; syscall; 
0x0000000010f394: mov eax, 0x5c; syscall; 
0x0000000010f3c4: mov eax, 0x5d; syscall; 
0x0000000010f3f4: mov eax, 0x5e; syscall; 
0x0000000010db84: mov eax, 0x5f; syscall; 
0x000000000bc1e5: mov eax, 0x60; pop rbx; ret; 
0x000000000d0f09: mov eax, 0x60; syscall; 
0x00000000113e14: mov eax, 0x62; syscall; 
0x00000000023e86: mov eax, 0x63480018; add al, 0x82; add rax, rdx; notrack jmp rax; 
0x0000000011fdf4: mov eax, 0x63; syscall; 
0x000000000e2ba4: mov eax, 0x64; syscall; 
0x0000000011594c: mov eax, 0x65; syscall; 
0x000000000e4114: mov eax, 0x66; syscall; 
0x0000000011fc74: mov eax, 0x67; syscall; 
0x000000000e4134: mov eax, 0x68; syscall; 
0x000000000e41a1: mov eax, 0x69; syscall; 
0x000000000e41a2: mov eax, 0x69; syscall; 
0x000000000cfba1: mov eax, 0x6; ret; 
0x0000000010d5a3: mov eax, 0x6; syscall; 
0x000000000e4241: mov eax, 0x6a; syscall; 
0x000000000e4242: mov eax, 0x6a; syscall; 
0x000000000e4124: mov eax, 0x6b; syscall; 
0x000000000e4144: mov eax, 0x6c; syscall; 
0x000000000e43d4: mov eax, 0x6d; syscall; 
0x000000000e4104: mov eax, 0x6e; syscall; 
0x000000000e4404: mov eax, 0x6f; syscall; 
0x000000000e4464: mov eax, 0x70; syscall; 
0x000000001149a2: mov eax, 0x71; syscall; 
0x000000001149a1: mov eax, 0x71; syscall; 
0x00000000114a41: mov eax, 0x72; syscall; 
0x00000000114a42: mov eax, 0x72; syscall; 
0x000000000e4154: mov eax, 0x73; syscall; 
0x000000000ee48e: mov eax, 0x7408e383; xchg ebx, eax; pop rbx; ret; 
0x000000000df421: mov eax, 0x74; syscall; 
0x000000000df422: mov eax, 0x74; syscall; 
0x000000000e4511: mov eax, 0x75; syscall; 
0x000000000e4512: mov eax, 0x75; syscall; 
0x000000000e4494: mov eax, 0x76; syscall; 
0x000000000e45c2: mov eax, 0x77; syscall; 
0x000000000e45c1: mov eax, 0x77; syscall; 
0x000000000e44c4: mov eax, 0x78; syscall; 
0x000000000e43a4: mov eax, 0x79; syscall; 
0x000000000cfbb1: mov eax, 0x7; ret; 
0x0000000012bdc9: mov eax, 0x7; ret; 
0x00000000112990: mov eax, 0x7; syscall; 
0x0000000011f1f4: mov eax, 0x7a; syscall; 
0x0000000011f224: mov eax, 0x7b; syscall; 
0x000000000e4434: mov eax, 0x7c; syscall; 
0x000000000e4f8b: mov eax, 0x7d00; ret; 
0x0000000011f9d4: mov eax, 0x7d; syscall; 
0x000000000e5050: mov eax, 0x7e; ret; 
0x0000000011fa04: mov eax, 0x7e; syscall; 
0x000000000422a8: mov eax, 0x7f800000; and edx, 0x7fffffff; sub eax, edx; shr eax, 0x1f; ret; 
0x000000000e4fb2: mov eax, 0x7f; cmove rax, rdx; ret; 
0x000000000e503a: mov eax, 0x7f; cmovne rax, rdx; ret; 
0x000000000e5039: mov eax, 0x7f; cmovne rax, rdx; ret; 
0x00000000043439: mov eax, 0x7f; syscall; 
0x000000000de2db: mov eax, 0x7fffffff; cmova rdx, rax; mov eax, 0xd9; syscall; 
0x000000000e4f6f: mov eax, 0x7fffffff; cmp r8, 0x58465342; jne short 0x00000000000e4f80; ret; 
0x0000000013c9f0: mov eax, 0x7fffffff; ret; 
0x000000000bc20f: mov eax, 0x80; pop rbx; ret; 
0x00000000044158: mov eax, 0x80; syscall; 
0x000000000442a4: mov eax, 0x81; syscall; 
0x00000000043485: mov eax, 0x82; syscall; 
0x000000000439f4: mov eax, 0x83; syscall; 
0x0000000010d404: mov eax, 0x84; syscall; 
0x0000000010d92b: mov eax, 0x85; syscall; 
0x0000000011fe54: mov eax, 0x86; syscall; 
0x0000000011f414: mov eax, 0x87; syscall; 
0x0000000011c4eb: mov eax, 0x88; syscall; 
0x000000000f8a1b: mov eax, 0x89000000; ret; 
0x0000000012d442: mov eax, 0x89483e74; ret; 
0x0000000010da34: mov eax, 0x89; syscall; 
0x00000000112a60: mov eax, 0x8; mov rdx, r12; mov eax, 0x10f; syscall; 
0x000000000bc208: mov eax, 0x8; pop rbx; ret; 
0x0000000010e134: mov eax, 0x8; syscall; 
0x0000000010da64: mov eax, 0x8a; syscall; 
0x000000001141d4: mov eax, 0x8c; syscall; 
0x00000000114214: mov eax, 0x8d; syscall; 
0x00000000102684: mov eax, 0x8e; syscall; 
0x000000001026b4: mov eax, 0x8f; syscall; 
0x000000001026e4: mov eax, 0x90; syscall; 
0x00000000102714: mov eax, 0x91; syscall; 
0x00000000102774: mov eax, 0x92; syscall; 
0x000000001027a4: mov eax, 0x93; syscall; 
0x000000001027d4: mov eax, 0x94; syscall; 
0x00000000118b34: mov eax, 0x95; syscall; 
0x00000000118b64: mov eax, 0x96; syscall; 
0x00000000118b94: mov eax, 0x97; syscall; 
0x00000000118bc4: mov eax, 0x98; syscall; 
0x00000000115654: mov eax, 0x99; syscall; 
0x0000000010c539: mov eax, 0x9; pop rbp; pop r12; ret; 
0x0000000011890f: mov eax, 0x9; syscall; 
0x0000000011f964: mov eax, 0x9a; syscall; 
0x0000000011fd34: mov eax, 0x9b; syscall; 
0x0000000011fd67: mov eax, 0x9d; syscall; 
0x00000000054ebe: mov eax, 0x9e; syscall; 
0x00000000115194: mov eax, 0xa1; syscall; 
0x00000000115254: mov eax, 0xa2; syscall; 
0x00000000115164: mov eax, 0xa3; syscall; 
0x000000000d10a7: mov eax, 0xa4; xor edi, edi; syscall; 
0x0000000011fca7: mov eax, 0xa5; syscall; 
0x0000000011f194: mov eax, 0xa6; syscall; 
0x00000000115684: mov eax, 0xa7; syscall; 
0x000000001156b4: mov eax, 0xa8; syscall; 
0x00000000115350: mov eax, 0xa9; syscall; 
0x00000000136e9a: mov eax, 0xa; pop rbx; pop rbp; ret; 
0x000000001189d4: mov eax, 0xa; syscall; 
0x00000000114e14: mov eax, 0xaa; syscall; 
0x00000000114f64: mov eax, 0xab; syscall; 
0x0000000011f044: mov eax, 0xac; syscall; 
0x0000000011f014: mov eax, 0xad; syscall; 
0x0000000011fa64: mov eax, 0xae; syscall; 
0x0000000011fb87: mov eax, 0xaf; syscall; 
0x0000000011fa94: mov eax, 0xb0; syscall; 
0x0000000011fb54: mov eax, 0xb1; syscall; 
0x0000000011fd97: mov eax, 0xb2; syscall; 
0x0000000011fdc7: mov eax, 0xb3; syscall; 
0x0000000011fd04: mov eax, 0xb4; syscall; 
0x0000000014d090: mov eax, 0xb8000000; add [rax], eax; add [rax], al; ret; 
0x000000001189a4: mov eax, 0xb; syscall; 
0x00000000043006: mov eax, 0xba; syscall; 
0x000000000fcc45: mov eax, 0xbb840fff; add eax, [rax]; add [rcx-0x80], al; call far fword ptr [rdi+rcx-0x7c]; 
0x0000000011f1c4: mov eax, 0xbb; syscall; 
0x0000000011cfd7: mov eax, 0xbc; syscall; 
0x0000000011cf77: mov eax, 0xbd; syscall; 
0x0000000011ce57: mov eax, 0xbe; syscall; 
0x0000000011ce87: mov eax, 0xbf; syscall; 
0x0000000010d1f3: mov eax, 0xc00141c0; cmp rdi, rsi; ja short 0x000000000010d1e8; mov eax, r8d; ret; 
0x0000000008a829: mov eax, 0xc04d8d4c; mov rcx, r14; mov rdi, r15; call r12; 
0x0000000011cee7: mov eax, 0xc0; syscall; 
0x0000000011cdc7: mov eax, 0xc1; syscall; 
0x0000000011ceb4: mov eax, 0xc2; syscall; 
0x0000000011cf14: mov eax, 0xc3; syscall; 
0x0000000011cdf4: mov eax, 0xc4; syscall; 
0x0000000011cfa4: mov eax, 0xc5; syscall; 
0x0000000011cf44: mov eax, 0xc6; syscall; 
0x0000000011ce24: mov eax, 0xc7; syscall; 
0x000000000d0df4: mov eax, 0xc9; syscall; 
0x000000000f2401: mov eax, 0xc; pop rbp; pop r12; ret; 
0x000000000f24d0: mov eax, 0xc; ret; 
0x000000001142b4: mov eax, 0xc; syscall; 
0x000000000e1dd2: mov eax, 0xca; lea rdi, [rip+0x10d702]; syscall; 
0x000000000e1c92: mov eax, 0xca; lea rdi, [rip+0x10d842]; syscall; 
0x000000000e1bda: mov eax, 0xca; lea rdi, [rip+0x10d8fa]; syscall; 
0x000000000e1afe: mov eax, 0xca; lea rdi, [rip+0x10d9ce]; syscall; 
0x000000000e192e: mov eax, 0xca; lea rdi, [rip+0x10db5e]; syscall; 
0x000000000e176a: mov eax, 0xca; lea rdi, [rip+0x10dcda]; syscall; 
0x000000000e13b0: mov eax, 0xca; lea rdi, [rip+0x10e03c]; syscall; 
0x000000000dfea2: mov eax, 0xca; lea rdi, [rip+0x10f4c2]; syscall; 
0x000000000dfd62: mov eax, 0xca; lea rdi, [rip+0x10f602]; syscall; 
0x000000000dfcaa: mov eax, 0xca; lea rdi, [rip+0x10f6ba]; syscall; 
0x000000000df8de: mov eax, 0xca; lea rdi, [rip+0x10fa7e]; syscall; 
0x000000000df70e: mov eax, 0xca; lea rdi, [rip+0x10fc0e]; syscall; 
0x000000000df54a: mov eax, 0xca; lea rdi, [rip+0x10fd8a]; syscall; 
0x000000000dec62: mov eax, 0xca; lea rdi, [rip+0x11061a]; syscall; 
0x000000000d2bbe: mov eax, 0xca; lea rdi, [rip+0x11c5d6]; syscall; 
0x000000000d298a: mov eax, 0xca; lea rdi, [rip+0x11c80a]; syscall; 
0x000000000ca65e: mov eax, 0xca; lea rdi, [rip+0x126b46]; syscall; 
0x0000000009c81e: mov eax, 0xca; lea rdi, [rip+0x150356]; syscall; 
0x0000000009e1ca: mov eax, 0xca; lea rdi, [rip+0x150d32]; syscall; 
0x0000000009dfea: mov eax, 0xca; lea rdi, [rip+0x150f12]; syscall; 
0x0000000009ddfe: mov eax, 0xca; lea rdi, [rip+0x1510fe]; syscall; 
0x0000000009dd8e: mov eax, 0xca; lea rdi, [rip+0x15116e]; syscall; 
0x0000000009db5e: mov eax, 0xca; lea rdi, [rip+0x15139e]; syscall; 
0x00000000099abe: mov eax, 0xca; lea rdi, [rip+0x1530b6]; syscall; 
0x00000000099a5e: mov eax, 0xca; lea rdi, [rip+0x153116]; syscall; 
0x0000000009969e: mov eax, 0xca; lea rdi, [rip+0x1534d6]; syscall; 
0x0000000009943e: mov eax, 0xca; lea rdi, [rip+0x153736]; syscall; 
0x00000000098dd6: mov eax, 0xca; lea rdi, [rip+0x153d9e]; syscall; 
0x00000000098d9e: mov eax, 0xca; lea rdi, [rip+0x153dd6]; syscall; 
0x0000000009aa6e: mov eax, 0xca; lea rdi, [rip+0x15440e]; syscall; 
0x00000000099fd2: mov eax, 0xca; lea rdi, [rip+0x154e9a]; syscall; 
0x0000000009603f: mov eax, 0xca; lea rdi, [rip+0x158e2d]; syscall; 
0x0000000009600e: mov eax, 0xca; lea rdi, [rip+0x158e6e]; syscall; 
0x00000000095d8e: mov eax, 0xca; lea rdi, [rip+0x1590ee]; syscall; 
0x0000000009586a: mov eax, 0xca; lea rdi, [rip+0x159612]; syscall; 
0x00000000094c4f: mov eax, 0xca; lea rdi, [rip+0x159ba5]; syscall; 
0x00000000094a7a: mov eax, 0xca; lea rdi, [rip+0x159d7a]; syscall; 
0x000000000948de: mov eax, 0xca; lea rdi, [rip+0x159f16]; syscall; 
0x00000000093950: mov eax, 0xca; lea rdi, [rip+0x15ae64]; syscall; 
0x00000000093410: mov eax, 0xca; lea rdi, [rip+0x15b3a4]; syscall; 
0x0000000009306c: mov eax, 0xca; lea rdi, [rip+0x15b748]; syscall; 
0x00000000092d00: mov eax, 0xca; lea rdi, [rip+0x15bab4]; syscall; 
0x0000000009167c: mov eax, 0xca; lea rdi, [rip+0x15d138]; syscall; 
0x000000000913bc: mov eax, 0xca; lea rdi, [rip+0x15d3f8]; syscall; 
0x00000000091048: mov eax, 0xca; lea rdi, [rip+0x15d76c]; syscall; 
0x0000000008438d: mov eax, 0xca; lea rdi, [rip+0x16a3e7]; syscall; 
0x00000000083f90: mov eax, 0xca; lea rdi, [rip+0x16a7e4]; syscall; 
0x00000000083ee5: mov eax, 0xca; lea rdi, [rip+0x16a88f]; syscall; 
0x0000000008201e: mov eax, 0xca; lea rdi, [rip+0x16f186]; syscall; 
0x000000000610d2: mov eax, 0xca; lea rdi, [rip+0x18d672]; syscall; 
0x00000000060e4e: mov eax, 0xca; lea rdi, [rip+0x18d8f2]; syscall; 
0x0000000005ec7a: mov eax, 0xca; lea rdi, [rip+0x18fabe]; syscall; 
0x0000000005eb3a: mov eax, 0xca; lea rdi, [rip+0x18fbfe]; syscall; 
0x00000000054d9e: mov eax, 0xca; lea rdi, [rip+0x199986]; syscall; 
0x00000000054bbe: mov eax, 0xca; lea rdi, [rip+0x199b66]; syscall; 
0x0000000005468e: mov eax, 0xca; lea rdi, [rip+0x19a096]; syscall; 
0x000000000522a2: mov eax, 0xca; lea rdi, [rip+0x19c252]; syscall; 
0x00000000052126: mov eax, 0xca; lea rdi, [rip+0x19c3ce]; syscall; 
0x000000000520ee: mov eax, 0xca; lea rdi, [rip+0x19c406]; syscall; 
0x000000000478da: mov eax, 0xca; lea rdi, [rip+0x1a6bfa]; syscall; 
0x0000000004781a: mov eax, 0xca; lea rdi, [rip+0x1a6cba]; syscall; 
0x00000000047752: mov eax, 0xca; lea rdi, [rip+0x1a6d82]; syscall; 
0x0000000004767a: mov eax, 0xca; lea rdi, [rip+0x1a6e5a]; syscall; 
0x00000000046772: mov eax, 0xca; lea rdi, [rip+0x1a750a]; syscall; 
0x000000000466ad: mov eax, 0xca; lea rdi, [rip+0x1a75cf]; syscall; 
0x0000000004650b: mov eax, 0xca; lea rdi, [rip+0x1a7771]; syscall; 
0x00000000046431: mov eax, 0xca; lea rdi, [rip+0x1a784b]; syscall; 
0x000000000384fb: mov eax, 0xca; lea rdi, [rip+0x1b5731]; syscall; 
0x00000000036b78: mov eax, 0xca; lea rdi, [rip+0x1b707c]; syscall; 
0x0000000003583d: mov eax, 0xca; lea rdi, [rip+0x1b830f]; syscall; 
0x00000000035820: mov eax, 0xca; lea rdi, [rip+0x1b832c]; syscall; 
0x00000000035758: mov eax, 0xca; lea rdi, [rip+0x1b83f4]; syscall; 
0x00000000026072: mov eax, 0xca; lea rdi, [rip+0x1cb132]; syscall; 
0x00000000025f06: mov eax, 0xca; lea rdi, [rip+0x1cb29e]; syscall; 
0x00000000025de6: mov eax, 0xca; lea rdi, [rip+0x1cb3be]; syscall; 
0x00000000022841: mov eax, 0xca; lea rdi, [rip+0x1cb403]; syscall; 
0x000000001987ea: mov eax, 0xca; lea rdi, [rip+0x55492]; syscall; 
0x000000001989aa: mov eax, 0xca; lea rdi, [rip+0x55e4a]; syscall; 
0x00000000198cda: mov eax, 0xca; lea rdi, [rip+0x57832]; syscall; 
0x0000000015e07a: mov eax, 0xca; lea rdi, [rip+0x935d2]; syscall; 
0x0000000015cf42: mov eax, 0xca; lea rdi, [rip+0x9470a]; syscall; 
0x0000000015ce62: mov eax, 0xca; lea rdi, [rip+0x947ea]; syscall; 
0x0000000015cc7a: mov eax, 0xca; lea rdi, [rip+0x949d2]; syscall; 
0x0000000015cbea: mov eax, 0xca; lea rdi, [rip+0x94a62]; syscall; 
0x0000000015cb4a: mov eax, 0xca; lea rdi, [rip+0x94b02]; syscall; 
0x0000000015ca9a: mov eax, 0xca; lea rdi, [rip+0x94bb2]; syscall; 
0x0000000015c6ca: mov eax, 0xca; lea rdi, [rip+0x94f82]; syscall; 
0x0000000015243a: mov eax, 0xca; lea rdi, [rip+0x9e9aa]; syscall; 
0x000000001522da: mov eax, 0xca; lea rdi, [rip+0x9eb0a]; syscall; 
0x000000001520ce: mov eax, 0xca; lea rdi, [rip+0x9ed16]; syscall; 
0x00000000151f2e: mov eax, 0xca; lea rdi, [rip+0x9eeb6]; syscall; 
0x00000000151d9a: mov eax, 0xca; lea rdi, [rip+0x9f04a]; syscall; 
0x00000000151c5a: mov eax, 0xca; lea rdi, [rip+0x9f18a]; syscall; 
0x00000000151afa: mov eax, 0xca; lea rdi, [rip+0x9f2ea]; syscall; 
0x000000001519ea: mov eax, 0xca; lea rdi, [rip+0x9f3fa]; syscall; 
0x0000000014e4da: mov eax, 0xca; lea rdi, [rip+0xa2906]; syscall; 
0x0000000014c7e2: mov eax, 0xca; lea rdi, [rip+0xa453a]; syscall; 
0x0000000014c6a2: mov eax, 0xca; lea rdi, [rip+0xa467a]; syscall; 
0x0000000014c5ea: mov eax, 0xca; lea rdi, [rip+0xa4732]; syscall; 
0x0000000014c4fe: mov eax, 0xca; lea rdi, [rip+0xa4816]; syscall; 
0x0000000014c32e: mov eax, 0xca; lea rdi, [rip+0xa49b6]; syscall; 
0x0000000014c16a: mov eax, 0xca; lea rdi, [rip+0xa4b52]; syscall; 
0x000000001467cc: mov eax, 0xca; lea rdi, [rip+0xaa38c]; syscall; 
0x0000000014462e: mov eax, 0xca; lea rdi, [rip+0xac496]; syscall; 
0x000000001442f6: mov eax, 0xca; lea rdi, [rip+0xac7ce]; syscall; 
0x00000000143f76: mov eax, 0xca; lea rdi, [rip+0xacb4e]; syscall; 
0x00000000143d50: mov eax, 0xca; lea rdi, [rip+0xacd74]; syscall; 
0x00000000143bee: mov eax, 0xca; lea rdi, [rip+0xaced6]; syscall; 
0x000000001439b1: mov eax, 0xca; lea rdi, [rip+0xad113]; syscall; 
0x00000000142f5a: mov eax, 0xca; lea rdi, [rip+0xadab2]; syscall; 
0x00000000142dd8: mov eax, 0xca; lea rdi, [rip+0xadc34]; syscall; 
0x00000000142d9e: mov eax, 0xca; lea rdi, [rip+0xadc6e]; syscall; 
0x00000000142c86: mov eax, 0xca; lea rdi, [rip+0xadd86]; syscall; 
0x00000000142442: mov eax, 0xca; lea rdi, [rip+0xae5ca]; syscall; 
0x0000000014237a: mov eax, 0xca; lea rdi, [rip+0xae692]; syscall; 
0x0000000014225e: mov eax, 0xca; lea rdi, [rip+0xae7ae]; syscall; 
0x00000000140e8b: mov eax, 0xca; lea rdi, [rip+0xaf929]; syscall; 
0x0000000013d70a: mov eax, 0xca; lea rdi, [rip+0xb2e02]; syscall; 
0x0000000013d40e: mov eax, 0xca; lea rdi, [rip+0xb30fe]; syscall; 
0x000000001390de: mov eax, 0xca; lea rdi, [rip+0xb741a]; syscall; 
0x00000000138b5e: mov eax, 0xca; lea rdi, [rip+0xb797e]; syscall; 
0x0000000013899a: mov eax, 0xca; lea rdi, [rip+0xb7afa]; syscall; 
0x000000001388d2: mov eax, 0xca; lea rdi, [rip+0xb7b62]; syscall; 
0x00000000138792: mov eax, 0xca; lea rdi, [rip+0xb7ca2]; syscall; 
0x000000001386da: mov eax, 0xca; lea rdi, [rip+0xb7d5a]; syscall; 
0x00000000137fea: mov eax, 0xca; lea rdi, [rip+0xb8442]; syscall; 
0x00000000137cca: mov eax, 0xca; lea rdi, [rip+0xb8762]; syscall; 
0x00000000137b0e: mov eax, 0xca; lea rdi, [rip+0xb891e]; syscall; 
0x00000000134782: mov eax, 0xca; lea rdi, [rip+0xbbb3a]; syscall; 
0x00000000134642: mov eax, 0xca; lea rdi, [rip+0xbbc7a]; syscall; 
0x0000000013458a: mov eax, 0xca; lea rdi, [rip+0xbbd32]; syscall; 
0x000000001344aa: mov eax, 0xca; lea rdi, [rip+0xbbe0a]; syscall; 
0x00000000133fde: mov eax, 0xca; lea rdi, [rip+0xbc25e]; syscall; 
0x00000000133a0e: mov eax, 0xca; lea rdi, [rip+0xbc7ce]; syscall; 
0x000000001334ee: mov eax, 0xca; lea rdi, [rip+0xbcca6]; syscall; 
0x00000000133322: mov eax, 0xca; lea rdi, [rip+0xbce32]; syscall; 
0x000000001331e2: mov eax, 0xca; lea rdi, [rip+0xbcf72]; syscall; 
0x0000000013312a: mov eax, 0xca; lea rdi, [rip+0xbd02a]; syscall; 
0x0000000013304a: mov eax, 0xca; lea rdi, [rip+0xbd102]; syscall; 
0x00000000132c2e: mov eax, 0xca; lea rdi, [rip+0xbd4d6]; syscall; 
0x00000000132612: mov eax, 0xca; lea rdi, [rip+0xbda92]; syscall; 
0x000000001324ba: mov eax, 0xca; lea rdi, [rip+0xbdbea]; syscall; 
0x000000001323fa: mov eax, 0xca; lea rdi, [rip+0xbdcaa]; syscall; 
0x00000000132312: mov eax, 0xca; lea rdi, [rip+0xbdd8a]; syscall; 
0x0000000013222e: mov eax, 0xca; lea rdi, [rip+0xbde36]; syscall; 
0x00000000131bce: mov eax, 0xca; lea rdi, [rip+0xbe456]; syscall; 
0x000000001319c2: mov eax, 0xca; lea rdi, [rip+0xbe61a]; syscall; 
0x0000000013186a: mov eax, 0xca; lea rdi, [rip+0xbe772]; syscall; 
0x000000001317aa: mov eax, 0xca; lea rdi, [rip+0xbe832]; syscall; 
0x000000001316c2: mov eax, 0xca; lea rdi, [rip+0xbe912]; syscall; 
0x00000000130aae: mov eax, 0xca; lea rdi, [rip+0xbf4ae]; syscall; 
0x0000000013083e: mov eax, 0xca; lea rdi, [rip+0xbf6de]; syscall; 
0x000000001300be: mov eax, 0xca; lea rdi, [rip+0xbfdfe]; syscall; 
0x000000001265c2: mov eax, 0xca; lea rdi, [rip+0xc9862]; syscall; 
0x00000000126482: mov eax, 0xca; lea rdi, [rip+0xc99a2]; syscall; 
0x000000001263ca: mov eax, 0xca; lea rdi, [rip+0xc9a5a]; syscall; 
0x00000000125ff0: mov eax, 0xca; lea rdi, [rip+0xc9e2c]; syscall; 
0x00000000125dee: mov eax, 0xca; lea rdi, [rip+0xc9ff6]; syscall; 
0x00000000125c0e: mov eax, 0xca; lea rdi, [rip+0xca18e]; syscall; 
0x00000000125a4a: mov eax, 0xca; lea rdi, [rip+0xca30a]; syscall; 
0x0000000012597a: mov eax, 0xca; lea rdi, [rip+0xca386]; syscall; 
0x000000001258b0: mov eax, 0xca; lea rdi, [rip+0xca450]; syscall; 
0x0000000012581b: mov eax, 0xca; lea rdi, [rip+0xca4e5]; syscall; 
0x00000000124b12: mov eax, 0xca; lea rdi, [rip+0xcb1ba]; syscall; 
0x000000001249d2: mov eax, 0xca; lea rdi, [rip+0xcb2fa]; syscall; 
0x0000000012491a: mov eax, 0xca; lea rdi, [rip+0xcb3b2]; syscall; 
0x00000000124320: mov eax, 0xca; lea rdi, [rip+0xcb9a4]; syscall; 
0x0000000012411e: mov eax, 0xca; lea rdi, [rip+0xcbb4e]; syscall; 
0x00000000123f3e: mov eax, 0xca; lea rdi, [rip+0xcbcc6]; syscall; 
0x00000000123d7a: mov eax, 0xca; lea rdi, [rip+0xcbe22]; syscall; 
0x0000000011870a: mov eax, 0xca; lea rdi, [rip+0xd713a]; syscall; 
0x000000001185ee: mov eax, 0xca; lea rdi, [rip+0xd7256]; syscall; 
0x0000000011818e: mov eax, 0xca; lea rdi, [rip+0xd76b6]; syscall; 
0x00000000117c53: mov eax, 0xca; lea rdi, [rip+0xd7bf1]; syscall; 
0x00000000106abe: mov eax, 0xca; lea rdi, [rip+0xe8af6]; syscall; 
0x000000000229f6: mov eax, 0xca; syscall; 
0x000000000946ad: mov eax, 0xca; xor r10, r10; add rdi, 0x308; mov esi, 0x80; syscall; 
0x00000000162b86: mov eax, 0xcb; mov esi, 0x80; syscall; 
0x00000000162b87: mov eax, 0xcb; mov esi, 0x80; syscall; 
0x00000000102874: mov eax, 0xcb; syscall; 
0x00000000102813: mov eax, 0xcc; cmovbe rsi, r8; syscall; 
0x00000000162b1a: mov eax, 0xcc; mov esi, 0x80; syscall; 
0x00000000162b19: mov eax, 0xcc; mov esi, 0x80; syscall; 
0x0000000011fac4: mov eax, 0xd5; syscall; 
0x00000000118b07: mov eax, 0xd8; syscall; 
0x000000001205d4: mov eax, 0xd8f7000c; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x000000000de2e4: mov eax, 0xd9; syscall; 
0x0000000004318f: mov eax, 0xd; syscall; 
0x00000000121187: mov eax, 0xdc; syscall; 
0x00000000112b17: mov eax, 0xdd; syscall; 
0x0000000004817f: mov eax, 0xdeece66d; add eax, 0x48000000; mov [rsi+0x10], eax; xor eax, eax; ret; 
0x0000000015353a: mov eax, 0xe0; add [rax-0x77], cl; ret; 
0x000000000dd14e: mov eax, 0xe3; syscall; 
0x000000000dd11d: mov eax, 0xe4; syscall; 
0x000000000dd09d: mov eax, 0xe5; syscall; 
0x000000000dd009: mov eax, 0xe5; xor esi, esi; lea edi, [rdi*8+0x2]; syscall; 
0x000000000dd008: mov eax, 0xe5; xor esi, esi; lea edi, [rdi*8+0x2]; syscall; 
0x000000000dd1dd: mov eax, 0xe6; syscall; 
0x0000000011f453: mov eax, 0xe8; syscall; 
0x000000001168b1: mov eax, 0xe8c03150; mov bl, 0xf4; call far fword ptr [rdx+0x59]; 
0x0000000011fb27: mov eax, 0xe9; syscall; 
0x00000000043034: mov eax, 0xe; syscall; 
0x00000000043012: mov eax, 0xea; syscall; 
0x00000000116ad4: mov eax, 0xeb; syscall; 
0x00000000153e1d: mov eax, 0xf000000; adc [rsp+0xd8], eax; call rax; 
0x0000000014d073: mov eax, 0xf000000; enter 0xc089, 0x48; mov [rdx], eax; mov eax, 0x1; ret; 
0x0000000013f784: mov eax, 0xf000004; mov dh, 0x53; add [rax-0x7d], ecx; ret; 
0x000000000e2d16: mov eax, 0xf7; syscall; 
0x00000000102a39: mov eax, 0xf; cmp dx, 0x2; je short 0x0000000000102a48; ret; 
0x000000000430c1: mov eax, 0xf; syscall; 
0x000000000d425d: mov eax, 0xfa89051e; ror edx, 0x2; cmp edx, 0x28f5c28; jbe short 0x00000000000d4270; ret; 
0x000000000e5048: mov eax, 0xfc17; ret; 
0x0000000015f96d: mov eax, 0xfd012de8; jmp qword ptr [rsi+0x66]; 
0x000000000c8597: mov eax, 0xfd83949; xchg ebx, eax; ret; 
0x0000000011fbe4: mov eax, 0xfd; syscall; 
0x000000000464b4: mov eax, 0xfdbe76e8; dec dword ptr [rcx+rcx*4+0x65]; mov eax, 0xfffdd4e9; jmp qword ptr [rbx+rcx*4+0x4]; 
0x0000000011fbb4: mov eax, 0xfe; syscall; 
0x000000000e5178: mov eax, 0xff; ret; 
0x0000000011fc44: mov eax, 0xff; syscall; 
0x0000000012f3f1: mov eax, 0xffef79e8; jmp qword ptr [rsi+0xf]; 
0x000000000f53e8: mov eax, 0xfffa6be9; jmp qword ptr [rsi-0x70]; 
0x000000000f54a4: mov eax, 0xfffa6de9; jmp qword ptr [rsi+0xf]; 
0x000000000e4ff7: mov eax, 0xfffa; ret; 
0x000000000f5440: mov eax, 0xfffb73e9; jmp qword ptr [rsi+0x2e]; 
0x0000000012e7c1: mov eax, 0xfffba9e8; jmp qword ptr [rsi+0xf]; 
0x000000000f2d49: mov eax, 0xfffcc9e9; call qword ptr [rax-0x3f7cf975]; 
0x000000000464bd: mov eax, 0xfffdd4e9; jmp qword ptr [rbx+rcx*4+0x4]; 
0x000000000464bc: mov eax, 0xfffdd4e9; jmp qword ptr [rbx+rcx*4+0x4]; 
0x00000000041b95: mov eax, 0xfffe; sub eax, edx; sar eax, 0x10; ret; 
0x00000000057c40: mov eax, 0xffffc002; sub eax, ecx; mov [rdx], eax; mov eax, 0x1; ret; 
0x00000000057e0d: mov eax, 0xffffc002; sub eax, r8d; mov [rdx], eax; mov eax, 0x2; ret; 
0x00000000160cd9: mov eax, 0xfffffffe; ret; 
0x00000000043c0a: mov eax, 0xfffffffe; rol rax, cl; and [rdi], rax; xor eax, eax; ret; 
0x0000000013bce6: mov eax, 0xffffffff; cmove eax, edx; ret; 
0x0000000015ce7a: mov eax, 0xffffffff; mov dword ptr fs:[rax], 0x16; mov eax, r8d; mov qword ptr [rdx], 0x0; ret; 
0x0000000008545d: mov eax, 0xffffffff; mov eax, r8d; pop rbp; pop r12; ret; 
0x00000000054de1: mov eax, 0xffffffff; mov eax, r8d; ret; 
0x000000001028ba: mov eax, 0xffffffff; mov fs:[rdx], eax; mov eax, r8d; ret; 
0x0000000013c971: mov eax, 0xffffffff; mov rdx, 0xffffffffffffffff; ret; 
0x0000000004656e: mov eax, 0xffffffff; pop rbp; pop r12; pop r13; ret; 
0x000000000875e9: mov eax, 0xffffffff; pop rbp; pop r12; ret; 
0x000000000412ee: mov eax, 0xffffffff; pop rbp; ret; 
0x0000000008331c: mov eax, 0xffffffff; pop rbx; pop rbp; ret; 
0x0000000008e693: mov eax, 0xffffffff; pop rbx; ret; 
0x00000000042f5f: mov eax, 0xffffffff; ret; 
0x00000000024726: mov eax, 0xffffffff; ret; 
0x0000000008d31e: mov eax, 0xffffffff; test edx, edx; je short 0x000000000008d330; ret; 
0x0000000008d77e: mov eax, 0xffffffff; test edx, edx; je short 0x000000000008d790; ret; 
0x00000000094c76: mov eax, [0x10]; ret; 
0x0000000009b1de: mov eax, [0x11ec503d8d480011]; add al, ch; ret; 
0x00000000036095: mov eax, [0x148cf8948fffffe]; ret far; 
0x00000000048245: mov eax, [0x18]; test eax, eax; jne short 0x0000000000048260; mov eax, 0x13e; syscall; 
0x000000000e2c58: mov eax, [0x18]; test eax, eax; jne short 0x00000000000e2c78; mov eax, 0x3d; syscall; 
0x000000000e2e65: mov eax, [0x18]; test eax, eax; jne short 0x00000000000e2e80; mov eax, 0x22; syscall; 
0x0000000010c188: mov eax, [0x18]; test eax, eax; jne short 0x000000000010c1a8; mov eax, 0x11; syscall; 
0x0000000010c238: mov eax, [0x18]; test eax, eax; jne short 0x000000000010c258; mov eax, 0x12; syscall; 
0x0000000010ded4: mov eax, [0x18]; test eax, eax; jne short 0x000000000010df40; mov eax, 0x101; syscall; 
0x0000000010dff5: mov eax, [0x18]; test eax, eax; jne short 0x000000000010e010; syscall; 
0x0000000010e095: mov eax, [0x18]; test eax, eax; jne short 0x000000000010e0b0; mov eax, 0x1; syscall; 
0x0000000010e509: mov eax, [0x18]; test eax, eax; jne short 0x000000000010e540; mov eax, 0x48; syscall; 
0x0000000010e835: mov eax, [0x18]; test eax, eax; jne short 0x000000000010e850; mov eax, 0x3; syscall; 
0x0000000010e9b5: mov eax, [0x18]; test eax, eax; jne short 0x000000000010e9d0; mov eax, 0x55; syscall; 
0x00000000112985: mov eax, [0x18]; test eax, eax; jne short 0x00000000001129a0; mov eax, 0x7; syscall; 
0x00000000113008: mov eax, [0x18]; test eax, eax; jne short 0x0000000000113028; mov eax, 0x146; syscall; 
0x00000000113218: mov eax, [0x18]; test eax, eax; jne short 0x0000000000113238; mov eax, 0x115; syscall; 
0x000000001132c8: mov eax, [0x18]; test eax, eax; jne short 0x00000000001132e8; mov eax, 0x11d; syscall; 
0x00000000114405: mov eax, [0x18]; test eax, eax; jne short 0x0000000000114420; mov eax, 0x13; syscall; 
0x000000001144a5: mov eax, [0x18]; test eax, eax; jne short 0x00000000001144c0; mov eax, 0x14; syscall; 
0x00000000114f98: mov eax, [0x18]; test eax, eax; jne short 0x0000000000114fb8; mov eax, 0x17; syscall; 
0x000000001151c5: mov eax, [0x18]; test eax, eax; jne short 0x00000000001151e0; mov eax, 0x4a; syscall; 
0x00000000115285: mov eax, [0x18]; test eax, eax; jne short 0x00000000001152a0; mov eax, 0x4b; syscall; 
0x00000000117c21: mov eax, [0x18]; test eax, eax; jne short 0x0000000000117c38; sub dword ptr [rip+0xd7c1d], 0x1; ret; 
0x00000000118a05: mov eax, [0x18]; test eax, eax; jne short 0x0000000000118a20; mov eax, 0x1a; syscall; 
0x0000000011f448: mov eax, [0x18]; test eax, eax; jne short 0x000000000011f468; mov eax, 0xe8; syscall; 
0x0000000011f4f8: mov eax, [0x18]; test eax, eax; jne short 0x000000000011f518; mov eax, 0x114; syscall; 
0x0000000011f5a8: mov eax, [0x18]; test eax, eax; jne short 0x000000000011f5c8; mov eax, 0x116; syscall; 
0x0000000011f658: mov eax, [0x18]; test eax, eax; jne short 0x000000000011f678; mov eax, 0x113; syscall; 
0x0000000011f725: mov eax, [0x18]; test eax, eax; jne short 0x000000000011f740; mov eax, 0x130; syscall; 
0x000000001200f5: mov eax, [0x18]; test eax, eax; jne short 0x0000000000120110; mov eax, 0x2b; syscall; 
0x000000001201c5: mov eax, [0x18]; test eax, eax; jne short 0x00000000001201e0; mov eax, 0x2a; syscall; 
0x000000001203e8: mov eax, [0x18]; test eax, eax; jne short 0x0000000000120408; mov eax, 0x2d; syscall; 
0x000000001204a5: mov eax, [0x18]; test eax, eax; jne short 0x00000000001204c0; mov eax, 0x2f; syscall; 
0x00000000120605: mov eax, [0x18]; test eax, eax; jne short 0x0000000000120620; mov eax, 0x2e; syscall; 
0x000000001206a8: mov eax, [0x18]; test eax, eax; jne short 0x00000000001206c8; mov eax, 0x2c; syscall; 
0x00000000120b08: mov eax, [0x18]; test eax, eax; jne short 0x0000000000120b28; mov eax, 0x120; syscall; 
0x00000000120bb8: mov eax, [0x18]; test eax, eax; jne short 0x0000000000120bd8; mov eax, 0x12b; syscall; 
0x00000000120c68: mov eax, [0x18]; test eax, eax; jne short 0x0000000000120c88; mov eax, 0x133; syscall; 
0x00000000120ed8: mov eax, [0x18]; test eax, eax; jne short 0x0000000000120ef8; mov eax, 0x45; syscall; 
0x00000000120f88: mov eax, [0x18]; test eax, eax; jne short 0x0000000000120fa8; mov eax, 0x46; syscall; 
0x0000000014c122: mov eax, [0x1989416401000a4b]; mov rax, r8; pop rbx; ret; 
0x0000000016de3b: mov eax, [0x1ba1d8d4c000000]; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000916bd: mov eax, [0x1bad23145fffffe]; add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; syscall; 
0x000000001210cb: mov eax, [0x28964d8f7000cad]; mov eax, 0xffffffff; ret; 
0x000000001145cb: mov eax, [0x28964d8f7000d78]; mov rax, 0xffffffffffffffff; ret; 
0x00000000062ecb: mov eax, [0x28964d8f700188f]; mov eax, 0xffffffff; ret; 
0x000000000d038c: mov eax, [0x28]; mov [rsp+0x58], rax; xor eax, eax; mov [rsp+0x50], r12; call rbx; 
0x0000000015f19b: mov eax, [0x28]; mov [rsp+0x68], rax; xor eax, eax; call qword ptr [r12+0xf08]; 
0x00000000052156: mov eax, [0x28]; mov [rsp+0x8], rax; xor eax, eax; mov eax, 0x3e; syscall; 
0x0000000017866b: mov eax, [0x2e6666c3c3000001]; nop [rax+rax]; nop [rax]; mov [rcx], dl; ret; 
0x000000000e2ffb: mov eax, [0x415de88944fffb1a]; pop rsp; pop r13; ret; 
0x000000001152cb: mov eax, [0x480c24448bfff7f3]; add esp, 0x18; ret; 
0x0000000006c198: mov eax, [0x48fffffa389d8b44]; add eax, ecx; notrack jmp rax; 
0x000000000bac1f: mov eax, [0x49830c634b000f49]; lea ecx, [rbx+rcx]; notrack jmp rcx; 
0x000000001545cb: mov eax, [0x7504388364000978]; ret; 
0x0000000018a550: mov eax, [0x77f8c5e0075c7f7e]; ret; 
0x0000000018a5d5: mov eax, [0x77f8c5f007447f7a]; ret; 
0x0000000018a530: mov eax, [0x77f8c5f0075c7f7a]; ret; 
0x00000000035983: mov eax, [0x81f23d8d48001bba]; sbb eax, [rax]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000019675f: mov eax, [0x8948f88945fffff5]; ret far; 
0x000000000e30e3: mov eax, [0xc148cf894c0010e3]; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x0000000006c1cb: mov eax, [0xfffae08d8b0017fc]; jmp qword ptr [rcx+rcx*4+0x8]; 
0x00000000125339: mov eax, [r12]; pop rbx; pop rbp; pop r12; ret; 
0x000000000bc7ca: mov eax, [r8+rax*4]; sub eax, [r8+r9*4]; je short 0x00000000000bc7b0; ret; 
0x0000000014d010: mov eax, [r8]; mov [rdx], eax; mov eax, 0x1; ret; 
0x00000000155b72: mov eax, [rax+0x10]; add rsp, 0x8; pop rbp; pop r12; jmp rax; 
0x000000000475a8: mov eax, [rax+0x10]; pop rbx; mov qword ptr [rip+0x1a9d39], 0x0; mov eax, [rax+0x58]; ret; 
0x00000000094b7f: mov eax, [rax+0x10]; test rax, rax; je short 0x0000000000094b89; call rax; 
0x00000000122008: mov eax, [rax+0x18]; add dword ptr [rax], 0x1; ret; 
0x00000000155b32: mov eax, [rax+0x18]; add rsp, 0x8; pop rbp; pop r12; jmp rax; 
0x00000000121ff8: mov eax, [rax+0x18]; add word ptr [rax], 0x1; ret; 
0x0000000014614b: mov eax, [rax+0x18]; jmp rax; 
0x000000000468e1: mov eax, [rax+0x18]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000014102b: mov eax, [rax+0x18]; test eax, eax; jne short 0x0000000000141038; ret; 
0x00000000114c6c: mov eax, [rax+0x18]; test rax, rax; je short 0x0000000000114c75; ret; 
0x000000000dd0d8: mov eax, [rax+0x1a0]; test rax, rax; je short 0x00000000000dd118; call rax; 
0x0000000010d389: mov eax, [rax+0x1b8]; test rax, rax; je short 0x000000000010d3d0; xor edx, edx; call rax; 
0x000000000dd058: mov eax, [rax+0x1c0]; test rax, rax; je short 0x00000000000dd098; call rax; 
0x0000000011d061: mov eax, [rax+0x1c8]; ret; 
0x0000000015f753: mov eax, [rax+0x1d8]; jmp rax; 
0x00000000089995: mov eax, [rax+0x20]; jmp rax; 
0x00000000148b13: mov eax, [rax+0x23b8]; mov rdi, r12; call qword ptr [rax+0x28]; 
0x0000000012ce90: mov eax, [rax+0x30]; ret; 
0x00000000152488: mov eax, [rax+0x38]; mov rdi, r8; call qword ptr [rax+0x20]; 
0x000000001228eb: mov eax, [rax+0x38]; ret; 
0x0000000011cdb0: mov eax, [rax+0x38]; test eax, eax; cmove eax, edx; ret; 
0x00000000147e1e: mov eax, [rax+0x38]; test rax, rax; je 0x0000000000147cae; mov rdi, rbx; call rax; 
0x00000000146230: mov eax, [rax+0x38]; test rax, rax; je short 0x000000000014623d; mov rdi, rbp; call rax; 
0x00000000146b87: mov eax, [rax+0x38]; test rax, rax; je short 0x0000000000146b94; mov rdi, rbp; call rax; 
0x00000000147bb6: mov eax, [rax+0x38]; test rax, rax; je short 0x0000000000147bc3; mov rdi, rbx; call rax; 
0x00000000147f13: mov eax, [rax+0x38]; test rax, rax; je short 0x0000000000147f20; mov rdi, rbx; call rax; 
0x00000000148722: mov eax, [rax+0x38]; test rax, rax; je short 0x000000000014872f; mov rdi, r13; call rax; 
0x0000000014cf21: mov eax, [rax+0x38]; test rax, rax; je short 0x000000000014cf32; lea rdi, [rbp+0xc8]; call rax; 
0x0000000014d957: mov eax, [rax+0x38]; test rax, rax; je short 0x000000000014d964; mov rdi, rbp; call rax; 
0x0000000014db3c: mov eax, [rax+0x38]; test rax, rax; je short 0x000000000014db4b; lea rdi, [r12+0x10]; call rax; 
0x0000000014ee3b: mov eax, [rax+0x38]; test rax, rax; je short 0x000000000014ee48; mov rdi, rbp; call rax; 
0x0000000014ef20: mov eax, [rax+0x38]; test rax, rax; je short 0x000000000014ef2d; mov rdi, r13; call rax; 
0x0000000014fd4e: mov eax, [rax+0x38]; test rax, rax; je short 0x000000000014fd5c; lea rdi, [rbp+0x68]; call rax; 
0x00000000150486: mov eax, [rax+0x38]; test rax, rax; je short 0x0000000000150493; mov rdi, rbp; call rax; 
0x000000001507ee: mov eax, [rax+0x38]; test rax, rax; je short 0x00000000001507fc; lea rdi, [rbp+0x58]; call rax; 
0x0000000015425c: mov eax, [rax+0x38]; test rax, rax; je short 0x000000000015426b; lea rdi, [r12+0x10]; call rax; 
0x000000001549a5: mov eax, [rax+0x38]; test rax, rax; je short 0x00000000001549b4; lea rdi, [r12+0x10]; call rax; 
0x0000000014fcf1: mov eax, [rax+0x40]; mov [rsi+0x10], rax; ret; 
0x000000000344b6: mov eax, [rax+0x40]; movzx eax, word ptr [rax+rdi*2+0x100]; and eax, esi; ret; 
0x000000000342c6: mov eax, [rax+0x48]; mov eax, [rax+rdi*4+0x200]; ret; 
0x00000000150631: mov eax, [rax+0x50]; mov [rsi+0x10], rax; ret; 
0x00000000034296: mov eax, [rax+0x58]; mov eax, [rax+rdi*4+0x200]; ret; 
0x0000000003456f: mov eax, [rax+0x58]; mov rdx, [rip+0x1b79af]; add rax, 0x200; mov fs:[rdx], rax; ret; 
0x000000000473fe: mov eax, [rax+0x58]; ret; 
0x00000000092750: mov eax, [rax+0x68]; test rax, rax; jne short 0x0000000000092748; ret; 
0x0000000011d03b: mov eax, [rax+0x8]; ret; 
0x00000000094bef: mov eax, [rax+0x8]; test rax, rax; je short 0x0000000000094bf9; call rax; 
0x0000000009e87b: mov eax, [rax+0x8]; test rax, rax; jne short 0x000000000009e870; xor eax, eax; ret; 
0x0000000014ceb4: mov eax, [rax+0xa0]; mov [rsi+0x10], rax; ret; 
0x00000000032922: mov eax, [rax+0xa8]; ret; 
0x000000000874e5: mov eax, [rax+0xe0]; call qword ptr [rax+0x68]; 
0x0000000008761a: mov eax, [rax+0xe0]; mov esi, 0xffffffff; call qword ptr [rax+0x18]; 
0x0000000008998e: mov eax, [rax+0xe0]; mov rax, [rax+0x20]; jmp rax; 
0x00000000084c5a: mov eax, [rax+0xe0]; mov rdx, r12; mov rsi, rbp; mov rdi, rbx; call qword ptr [rax+0x58]; 
0x000000000bc7cb: mov eax, [rax+rax*4]; sub eax, [r8+r9*4]; je short 0x00000000000bc7b0; ret; 
0x00000000198388: mov eax, [rax+rbx*8]; test rax, rax; je short 0x0000000000198392; call rax; 
0x00000000055878: mov eax, [rax+rcx*8]; mov [r9+rcx*8], rax; xor eax, eax; ret; 
0x00000000122a1a: mov eax, [rax+rcx]; mov ecx, edi; shr eax, cl; and eax, 0x1; ret; 
0x00000000034299: mov eax, [rax+rdi*4+0x200]; ret; 
0x0000000003448b: mov eax, [rax+rdi*4]; ret; 
0x00000000033d93: mov eax, [rax+rdi*8+0x80]; ret; 
0x000000001232a8: mov eax, [rax+rdx]; shr eax, cl; and eax, 0x1; ret; 
0x00000000122c69: mov eax, [rax+rdx]; shr r8d, cl; and r8d, 0x1; mov eax, r8d; ret; 
0x0000000010d8d5: mov eax, [rax]; cmp eax, 0x26; je short 0x000000000010d8e0; mov eax, r9d; ret; 
0x00000000048338: mov eax, [rax]; cmp eax, 0x4; je short 0x0000000000048300; mov eax, 0xffffffff; ret; 
0x000000000feccc: mov eax, [rax]; mov [rax], rdi; mov rax, r8; ret; 
0x0000000014d011: mov eax, [rax]; mov [rdx], eax; mov eax, 0x1; ret; 
0x00000000032920: mov eax, [rax]; mov eax, [rax+0xa8]; ret; 
0x00000000088073: mov eax, [rax]; mov eax, r8d; ret; 
0x000000000344b3: mov eax, [rax]; mov rax, [rax+0x40]; movzx eax, word ptr [rax+rdi*2+0x100]; and eax, esi; ret; 
0x000000000342c3: mov eax, [rax]; mov rax, [rax+0x48]; mov eax, [rax+rdi*4+0x200]; ret; 
0x00000000034293: mov eax, [rax]; mov rax, [rax+0x58]; mov eax, [rax+rdi*4+0x200]; ret; 
0x00000000033d90: mov eax, [rax]; mov rax, [rax+rdi*8+0x80]; ret; 
0x0000000003291d: mov eax, [rax]; mov rax, [rax]; mov eax, [rax+0xa8]; ret; 
0x000000000342c0: mov eax, [rax]; mov rax, [rax]; mov rax, [rax+0x48]; mov eax, [rax+rdi*4+0x200]; ret; 
0x00000000034290: mov eax, [rax]; mov rax, [rax]; mov rax, [rax+0x58]; mov eax, [rax+rdi*4+0x200]; ret; 
0x000000000341f0: mov eax, [rax]; movzx eax, word ptr [rax+rdi*2]; and ax, 0x1000; movzx eax, ax; ret; 
0x000000000341d0: mov eax, [rax]; movzx eax, word ptr [rax+rdi*2]; and ax, 0x100; movzx eax, ax; ret; 
0x000000000341b0: mov eax, [rax]; movzx eax, word ptr [rax+rdi*2]; and ax, 0x2000; movzx eax, ax; ret; 
0x00000000034130: mov eax, [rax]; movzx eax, word ptr [rax+rdi*2]; and ax, 0x200; movzx eax, ax; ret; 
0x00000000034170: mov eax, [rax]; movzx eax, word ptr [rax+rdi*2]; and ax, 0x4000; movzx eax, ax; ret; 
0x000000000340d0: mov eax, [rax]; movzx eax, word ptr [rax+rdi*2]; and ax, 0x400; movzx eax, ax; ret; 
0x00000000034150: mov eax, [rax]; movzx eax, word ptr [rax+rdi*2]; and ax, 0x8000; movzx eax, ax; ret; 
0x00000000034110: mov eax, [rax]; movzx eax, word ptr [rax+rdi*2]; and ax, 0x800; movzx eax, ax; ret; 
0x00000000034270: mov eax, [rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x1; ret; 
0x000000000340f0: mov eax, [rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x2; movzx eax, ax; ret; 
0x00000000034190: mov eax, [rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x4; movzx eax, ax; ret; 
0x000000000340b0: mov eax, [rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x8; movzx eax, ax; ret; 
0x0000000012cee4: mov eax, [rax]; movzx eax, word ptr [rax+rdx*2]; shr ax, 0xe; and eax, 0x1; ret; 
0x000000000473fb: mov eax, [rax]; pop rbx; mov eax, [rax+0x58]; ret; 
0x0000000014111d: mov eax, [rax]; ret; 
0x0000000011c308: mov eax, [rax]; test rax, rax; je 0x000000000011c400; call rax; 
0x00000000030c4e: mov eax, [rax]; test rax, rax; je short 0x0000000000030c58; call rax; 
0x00000000094af7: mov eax, [rax]; test rax, rax; je short 0x0000000000094b00; call rax; 
0x0000000009920e: mov eax, [rax]; test rax, rax; je short 0x0000000000099217; call rax; 
0x0000000011c127: mov eax, [rax]; test rax, rax; je short 0x000000000011c190; call rax; 
0x00000000093579: mov eax, [rax]; test rax, rax; jne short 0x0000000000093570; ret; 
0x00000000096822: mov eax, [rax]; test rax, rax; jne short 0x0000000000096860; xor edi, edi; call qword ptr [r13]; 
0x00000000154d0f: mov eax, [rbp+0x18]; lea r13, [rbp+0x10]; mov dword ptr [rbp+0x10], 0x0; mov rdi, r13; call qword ptr [rax+0x28]; 
0x00000000154d3b: mov eax, [rbp+0x18]; mov rdi, r13; call qword ptr [rax+0x20]; 
0x000000000ee360: mov eax, [rbp+0x4c]; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000015145d: mov eax, [rbp+0x60]; mov rdi, r13; call qword ptr [rax+0x20]; 
0x0000000014771a: mov eax, [rbp+0x8]; call qword ptr [rax+0x28]; 
0x00000000156ae5: mov eax, [rbp+0x8]; call qword ptr [rax+0x8]; 
0x000000001483b0: mov eax, [rbp+0x8]; lea esi, [r12+0x3]; mov rdi, rbp; and esi, 0xfffffffc; call qword ptr [rax+0x30]; 
0x0000000014e831: mov eax, [rbp+0x8]; lea rsi, [rbx+0x18]; mov rdi, rbp; call qword ptr [rax+0x48]; 
0x00000000155e89: mov eax, [rbp+0x8]; lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax+0x8]; 
0x00000000155e30: mov eax, [rbp+0x8]; lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax]; 
0x00000000156d77: mov eax, [rbp+0x8]; lea rsi, [rsp+0x4]; mov rdi, rbp; call qword ptr [rax+0x40]; 
0x00000000156dc8: mov eax, [rbp+0x8]; lea rsi, [rsp+0x4]; mov rdi, rbp; call qword ptr [rax+0x48]; 
0x00000000149128: mov eax, [rbp+0x8]; lea rsi, [rsp+0x8]; mov rdi, rbp; call qword ptr [rax+0x8]; 
0x0000000014e792: mov eax, [rbp+0x8]; lea rsi, [rsp+0xc]; mov rdi, rbp; call qword ptr [rax+0x48]; 
0x00000000152f2d: mov eax, [rbp+0x8]; mov dword ptr [r13], 0xe; lea rsi, [r13+0x8]; mov rdi, rbp; call qword ptr [rax+0x10]; 
0x0000000014e737: mov eax, [rbp+0x8]; mov dword ptr [rsp+0xc], 0xc; mov esi, 0x8; mov rdi, rbp; call qword ptr [rax+0x30]; 
0x00000000148322: mov eax, [rbp+0x8]; mov esi, 0x20; mov rdi, rbp; call qword ptr [rax+0x30]; 
0x000000001483da: mov eax, [rbp+0x8]; mov esi, 0x8; mov rdi, rbp; call qword ptr [rax+0x30]; 
0x0000000014e6fe: mov eax, [rbp+0x8]; mov esi, 0x8; mov rdi, rbp; mov [r12+0x70], edx; call qword ptr [rax+0x30]; 
0x00000000147735: mov eax, [rbp+0x8]; mov esi, r14d; mov rdi, rbp; call qword ptr [rax+0x28]; 
0x00000000147147: mov eax, [rbp+0x8]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x00000000153e41: mov eax, [rbp+0x8]; mov rdi, rbp; call qword ptr [rax+0x28]; 
0x00000000153ce1: mov eax, [rbp+0x8]; mov rdi, rbp; call qword ptr [rax+0x8]; 
0x000000001476b9: mov eax, [rbp+0x8]; mov rdi, rbp; mov qword ptr [rsp], 0x0; call qword ptr [rax+0x20]; 
0x000000001490e3: mov eax, [rbp+0x8]; mov rsi, r12; mov rdi, rbp; call qword ptr [rax]; 
0x0000000014e781: mov eax, [rbp+0x8]; mov rsi, rbx; mov rdi, rbp; call qword ptr [rax+0x48]; 
0x00000000153cfc: mov eax, [rbp+0x8]; mov rsi, rbx; mov rdi, rbp; call qword ptr [rax]; 
0x00000000156aae: mov eax, [rbp+0x8]; mov rsi, rsp; mov rdi, rbp; call qword ptr [rax]; 
0x000000001521ac: mov eax, [rbp+0x8]; pop rdx; call qword ptr [rax+0x20]; 
0x0000000014d93c: mov eax, [rbp+0xd0]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x0000000010cf8b: mov eax, [rbp-0x168]; mov rsi, r12; lea rdi, [rip+0xa7622]; mov rdx, [rax+0xb0]; call qword ptr [rax+0x88]; 
0x00000000104437: mov eax, [rbp-0x1e0]; call rax; 
0x0000000010461f: mov eax, [rbp-0x1e0]; mov rcx, [r12]; call rax; 
0x0000000011a0ef: mov eax, [rbp-0x58]; mov r15d, r13d; call rax; 
0x00000000064031: mov eax, [rbp-0x620]; mov rdx, [rbp-0x630]; movsxd rax, [rcx+r12*4]; add rax, rcx; notrack jmp rax; 
0x000000000578e6: mov eax, [rbp-0x8]; xor rax, fs:[0x28]; jne 0x0000000000057975; leave; ret; 
0x0000000015fd0b: mov eax, [rbx+0x10]; call qword ptr [rax+0x1e0]; 
0x00000000091a51: mov eax, [rbx+0x18]; add rsp, 0x10; pop rbx; jmp rax; 
0x0000000012c308: mov eax, [rbx+0x18]; movdqu xmm2, [rbx+0x30]; mov [rbp-0x80], eax; movups [rbp-0x78], xmm2; call rcx; 
0x0000000012c4b0: mov eax, [rbx+0x18]; movdqu xmm3, [rbx+0x30]; mov [rbp-0x80], eax; movups [rbp-0x78], xmm3; call r9; 
0x0000000008ce05: mov eax, [rbx+0x20]; mov [rbx+0x28], rax; pop rbx; ret; 
0x00000000146b73: mov eax, [rbx+0x20]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x00000000146975: mov eax, [rbx+0x20]; mov rdi, rbp; lea r15, [rsp+0x50]; call qword ptr [rax+0x20]; 
0x00000000146931: mov eax, [rbx+0x20]; mov rsi, r13; mov rdi, rbp; call qword ptr [rax+0x8]; 
0x00000000146a0d: mov eax, [rbx+0x20]; xor esi, esi; mov rdi, rbp; mov dword ptr [rbx+0x18], 0x0; call qword ptr [rax+0x28]; 
0x0000000014698e: mov eax, [rbx+0x20]; xor esi, esi; mov rdi, rbp; mov dword ptr [rbx+0x18], 0x1; call qword ptr [rax+0x28]; 
0x00000000148abc: mov eax, [rbx+0x23b8]; mov rdi, r12; call qword ptr [rax+0x20]; 
0x000000000921ad: mov eax, [rbx+0x40]; add rsp, 0x20; pop rbx; jmp rax; 
0x0000000009e81c: mov eax, [rbx+0x40]; je short 0x000000000009e84e; mov rdi, [rbx+0x48]; mov rsi, r14; call rax; 
0x0000000009e8e4: mov eax, [rbx+0x40]; test byte ptr [rbx+0x50], 0x1; jne short 0x000000000009e8c0; mov rdi, rsi; call rax; 
0x0000000009265f: mov eax, [rbx+0x48]; add rsp, 0x20; xor edx, edx; pop rbx; jmp rax; 
0x000000001509ab: mov eax, [rbx+0x60]; call qword ptr [rax+0x8]; 
0x0000000015097f: mov eax, [rbx+0x60]; mov dword ptr [rbx+0x58], 0x0; mov esi, [rbx+0x88]; mov rdi, r15; call qword ptr [rax+0x28]; 
0x000000001509f2: mov eax, [rbx+0x60]; mov rdi, r15; call qword ptr [rax+0x20]; 
0x0000000014ff66: mov eax, [rbx+0x70]; mov [rbx+0x48], ebp; bswap ebp; call qword ptr [rax+0x18]; 
0x0000000014ff7a: mov eax, [rbx+0x70]; mov rsi, [rsp+0x18]; mov rdi, r12; call qword ptr [rax+0x8]; 
0x0000000014d198: mov eax, [rbx+0xd0]; mov [rbx+0xa8], ebp; bswap ebp; mov ebp, ebp; call qword ptr [rax+0x18]; 
0x0000000014d1b4: mov eax, [rbx+0xd0]; mov rsi, [rsp+0x18]; mov rdi, r12; call qword ptr [rax+0x8]; 
0x000000001516c4: mov eax, [rbx]; mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x20]; 
0x0000000015315e: mov eax, [rbx]; test rax, rax; je short 0x0000000000153170; pop rbx; ret; 
0x0000000017aa64: mov eax, [rcx+0x3]; mov [rdx+0x3], eax; lea rax, [rdx+0x6]; ret; 
0x000000000b3a89: mov eax, [rcx+0x3]; mov [rdx+0x3], eax; mov rax, rdi; ret; 
0x0000000017aa45: mov eax, [rcx+0x4]; mov [rdx+0x4], ax; lea rax, [rdx+0x5]; ret; 
0x000000000b3a6a: mov eax, [rcx+0x4]; mov [rdx+0x4], ax; mov rax, rdi; ret; 
0x0000000017aa76: mov eax, [rcx+0x5]; mov [rdx+0x5], eax; lea rax, [rdx+0x8]; ret; 
0x00000000176726: mov eax, [rcx+0x5]; mov [rdx+0x5], eax; mov rax, rdi; ret; 
0x0000000017aaf7: mov eax, [rcx+0x5]; mov [rdx+0x5], rax; lea rax, [rdx+0xc]; ret; 
0x00000000176767: mov eax, [rcx+0x5]; mov [rdx+0x5], rax; mov rax, rdi; ret; 
0x0000000017aa96: mov eax, [rcx+0x6]; mov [rdx+0x6], eax; lea rax, [rdx+0x9]; ret; 
0x00000000176736: mov eax, [rcx+0x6]; mov [rdx+0x6], eax; mov rax, rdi; ret; 
0x0000000017ab17: mov eax, [rcx+0x6]; mov [rdx+0x6], rax; lea rax, [rdx+0xd]; ret; 
0x00000000176787: mov eax, [rcx+0x6]; mov [rdx+0x6], rax; mov rax, rdi; ret; 
0x0000000017aab6: mov eax, [rcx+0x7]; mov [rdx+0x7], eax; lea rax, [rdx+0xa]; ret; 
0x000000000b3b0d: mov eax, [rcx+0x7]; mov [rdx+0x7], eax; mov rax, rdi; ret; 
0x0000000017ab37: mov eax, [rcx+0x7]; mov [rdx+0x7], rax; lea rax, [rdx+0xe]; ret; 
0x000000001767a7: mov eax, [rcx+0x7]; mov [rdx+0x7], rax; mov rax, rdi; ret; 
0x000000000b3aee: mov eax, [rcx+0x8]; mov [rdx+0x8], ax; mov rax, rdi; ret; 
0x0000000017aad6: mov eax, [rcx+0x8]; mov [rdx+0x8], eax; lea rax, [rdx+0xb]; ret; 
0x000000000b3b2d: mov eax, [rcx+0x8]; mov [rdx+0x8], eax; mov rax, rdi; ret; 
0x0000000017a9c7: mov eax, [rcx+0x8]; mov [rdx+0x8], rax; lea rax, [rdx+0xf]; ret; 
0x00000000176697: mov eax, [rcx+0x8]; mov [rdx+0x8], rax; mov rax, rdi; ret; 
0x0000000017fe2a: mov eax, [rcx+rax*4]; mov edx, [rcx+rdx*4]; sub eax, edx; ret; 
0x000000000bc76d: mov eax, [rcx+rax*4]; sub eax, [rcx+r8*4]; je short 0x00000000000bc758; ret; 
0x00000000181702: mov eax, [rcx+rax*4]; sub eax, edx; ret; 
0x0000000009c229: mov eax, [rcx+rax+0x8]; sub rdx, 0x8; and eax, 0x1; cmovne rax, rdx; ret; 
0x0000000008777f: mov eax, [rcx]; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000017a9f1: mov eax, [rcx]; mov [rdx], ax; lea rax, [rdx+0x1]; ret; 
0x000000000b3a06: mov eax, [rcx]; mov [rdx], ax; mov rax, rdi; ret; 
0x0000000017aa20: mov eax, [rcx]; mov [rdx], eax; lea rax, [rdx+0x3]; ret; 
0x000000000b3a35: mov eax, [rcx]; mov [rdx], eax; mov rax, rdi; ret; 
0x0000000017a971: mov eax, [rcx]; mov [rdx], rax; lea rax, [rdx+0x7]; ret; 
0x00000000176641: mov eax, [rcx]; mov [rdx], rax; mov rax, rdi; ret; 
0x0000000010cc33: mov eax, [rcx]; movsxd rax, [r12+rax*4]; add rax, r12; notrack jmp rax; 
0x0000000010d0a4: mov eax, [rdi+0x108]; mov [rsi], eax; xor eax, eax; ret; 
0x000000000cefbb: mov eax, [rdi+0x10]; cmp eax, [rsi+0x10]; jne 0x00000000000cf0b0; ret; 
0x00000000093594: mov eax, [rdi+0x10]; sub eax, [rsi+0x10]; ret; 
0x000000000935bc: mov eax, [rdi+0x10]; sub eax, edx; ret; 
0x00000000087ece: mov eax, [rdi+0x10]; sub rdx, [rcx+0x10]; sar rdx, 0x2; sub eax, edx; ret; 
0x00000000087ee0: mov eax, [rdi+0x10]; sub rdx, [rcx+0x8]; sar rdx, 0x2; sub eax, edx; ret; 
0x0000000011ab30: mov eax, [rdi+0x10]; test r8, r8; jne 0x000000000011aebb; mov rdi, [r15]; call rbx; 
0x0000000011ac95: mov eax, [rdi+0x10]; test r8, r8; jne 0x000000000011af29; mov rdi, [r15]; call rbx; 
0x0000000011abb4: mov eax, [rdi+0x10]; test r8, r8; jne 0x000000000011af97; mov rdi, [r15]; call rbx; 
0x0000000011ad49: mov eax, [rdi+0x10]; test r8, r8; jne 0x000000000011b005; mov rdi, [r15]; call rbx; 
0x0000000011ac0e: mov eax, [rdi+0x10]; test r8, r8; jne 0x000000000011b073; mov rdi, [r15]; call rbx; 
0x0000000011abe1: mov eax, [rdi+0x10]; test r8, r8; jne 0x000000000011b0e1; mov rdi, [r15]; call rbx; 
0x0000000011ac68: mov eax, [rdi+0x10]; test r8, r8; jne 0x000000000011b14f; mov rdi, [r15]; call rbx; 
0x0000000011acef: mov eax, [rdi+0x10]; test r8, r8; jne 0x000000000011b1bd; mov rdi, [r15]; call rbx; 
0x0000000011ab5a: mov eax, [rdi+0x10]; test r8, r8; jne 0x000000000011b22b; mov rdi, [r15]; call rbx; 
0x0000000011ac3b: mov eax, [rdi+0x10]; test r8, r8; jne 0x000000000011b299; mov rdi, [r15]; call rbx; 
0x0000000011ad1c: mov eax, [rdi+0x10]; test r8, r8; jne 0x000000000011b307; mov rdi, [r15]; call rbx; 
0x0000000011ab87: mov eax, [rdi+0x10]; test r8, r8; jne 0x000000000011b375; mov rdi, [r15]; call rbx; 
0x0000000011acc2: mov eax, [rdi+0x10]; test r8, r8; jne 0x000000000011b3e3; mov rdi, [r15]; call rbx; 
0x0000000011ad76: mov eax, [rdi+0x10]; test r8, r8; jne 0x000000000011b451; mov rdi, [r15]; call rbx; 
0x0000000011ad9f: mov eax, [rdi+0x10]; test r8, r8; jne short 0x000000000011ade2; mov rdi, [r15]; call rbx; 
0x0000000011adc8: mov eax, [rdi+0x10]; test r8, r8; jne short 0x000000000011ae4d; mov rdi, [r15]; call rbx; 
0x0000000010d094: mov eax, [rdi+0x10c]; mov [rsi], eax; xor eax, eax; ret; 
0x000000000cefd0: mov eax, [rdi+0x14]; cmp eax, [rsi+0x14]; jne 0x00000000000cf0b0; ret; 
0x000000000cefe5: mov eax, [rdi+0x18]; cmp eax, [rsi+0x18]; jne 0x00000000000cf0b0; ret; 
0x000000001573c5: mov eax, [rdi+0x18]; sub rax, [rdi+0x20]; ret; 
0x000000000cf000: mov eax, [rdi+0x1c]; cmp eax, [rsi+0x1c]; jne 0x00000000000cf0b0; ret; 
0x000000000cf01b: mov eax, [rdi+0x20]; cmp eax, [rsi+0x20]; jne 0x00000000000cf0b0; ret; 
0x00000000148230: mov eax, [rdi+0x20]; mov dword ptr [rsi], 0x7; mov [rsi+0x8], eax; ret; 
0x00000000031fa6: mov eax, [rdi+0x20]; mov rbp, rdi; test rax, rax; je short 0x0000000000031fb3; call rax; 
0x000000000de2c5: mov eax, [rdi+0x20]; ret; 
0x00000000198485: mov eax, [rdi+0x20]; test rax, rax; je short 0x0000000000198494; call rax; 
0x000000000cf030: mov eax, [rdi+0x24]; cmp eax, [rsi+0x24]; jne short 0x00000000000cf0b0; ret; 
0x00000000093ec5: mov eax, [rdi+0x28]; cmp [rdi+0x10], rax; cmovae rax, [rdi+0x10]; sub rax, [rdi+0x18]; ret; 
0x000000000cf045: mov eax, [rdi+0x28]; cmp eax, [rsi+0x28]; jne short 0x00000000000cf0b0; ret; 
0x00000000095933: mov eax, [rdi+0x28]; mov [rax+0x20], rdx; add rsp, 0x8; ret; 
0x00000000157844: mov eax, [rdi+0x28]; ret; 
0x0000000008ce59: mov eax, [rdi+0x28]; sub rax, [rdi+0x20]; ret; 
0x000000000cf050: mov eax, [rdi+0x2c]; cmp eax, [rsi+0x2c]; jne short 0x00000000000cf0b0; ret; 
0x000000000cf06b: mov eax, [rdi+0x30]; cmp eax, [rsi+0x30]; jne short 0x00000000000cf0b0; ret; 
0x000000001481d1: mov eax, [rdi+0x30]; test r8d, r8d; jne short 0x00000000001481e0; mov dword ptr [rsi], 0x0; ret; 
0x000000000cf080: mov eax, [rdi+0x34]; cmp eax, [rsi+0x34]; jne short 0x00000000000cf0b0; ret; 
0x00000000146a9b: mov eax, [rdi+0x38]; call qword ptr [rax+0x10]; 
0x00000000146a02: mov eax, [rdi+0x38]; call qword ptr [rax+0x18]; 
0x000000001516ca: mov eax, [rdi+0x38]; call qword ptr [rax+0x20]; 
0x0000000014694d: mov eax, [rdi+0x38]; call qword ptr [rax+0x8]; 
0x000000000cf095: mov eax, [rdi+0x38]; cmp eax, [rsi+0x38]; jne short 0x00000000000cf0b0; ret; 
0x00000000146a81: mov eax, [rdi+0x38]; lea r13, [rsp+0x68]; mov rsi, r13; call qword ptr [rax+0x10]; 
0x000000000cf0a0: mov eax, [rdi+0x3c]; cmp eax, [rsi+0x3c]; jne short 0x00000000000cf0b0; ret; 
0x0000000008cd29: mov eax, [rdi+0x40]; sub rax, [rdi+0x38]; ret; 
0x000000000918ef: mov eax, [rdi+0x48]; mov [rdi+0x48], rdx; mov [rdi+0x18], rax; mov [rdi+0x8], rax; ret; 
0x000000000cef70: mov eax, [rdi+0x4]; cmp eax, [rsi+0x4]; jne 0x00000000000cf0b0; ret; 
0x0000000010c7b4: mov eax, [rdi+0x4]; mov [rsi], eax; xor eax, eax; ret; 
0x000000001511a8: mov eax, [rdi+0x60]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x00000000093885: mov eax, [rdi+0x68]; ret; 
0x0000000008aedc: mov eax, [rdi+0x70]; test eax, eax; js short 0x000000000008aee8; ret; 
0x000000001136d4: mov eax, [rdi+0x8]; and eax, 0x100f; ret; 
0x00000000094d44: mov eax, [rdi+0x8]; and eax, 0x1; mov [rsi], eax; xor eax, eax; ret; 
0x00000000155b51: mov eax, [rdi+0x8]; call qword ptr [rax+0x10]; 
0x00000000155b11: mov eax, [rdi+0x8]; call qword ptr [rax+0x18]; 
0x00000000146cde: mov eax, [rdi+0x8]; call qword ptr [rax+0x20]; 
0x00000000151772: mov eax, [rdi+0x8]; call qword ptr [rax+0x28]; 
0x000000001482ca: mov eax, [rdi+0x8]; call qword ptr [rax+0x30]; 
0x000000001571ed: mov eax, [rdi+0x8]; call qword ptr [rax+0x48]; 
0x0000000014905b: mov eax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x000000000cef85: mov eax, [rdi+0x8]; cmp eax, [rsi+0x8]; jne 0x00000000000cf0b0; ret; 
0x000000000939ab: mov eax, [rdi+0x8]; cmp rax, rdx; jae short 0x00000000000939d8; movzx eax, byte ptr [rax]; ret; 
0x00000000157101: mov eax, [rdi+0x8]; jmp qword ptr [rax+0x40]; 
0x00000000157111: mov eax, [rdi+0x8]; jmp qword ptr [rax+0x48]; 
0x00000000155d31: mov eax, [rdi+0x8]; jmp qword ptr [rax+0x8]; 
0x00000000155d26: mov eax, [rdi+0x8]; jmp qword ptr [rax]; 
0x0000000015179d: mov eax, [rdi+0x8]; lea rdx, [rsp+0x18]; mov esi, 0x6; call qword ptr [rax+0x28]; 
0x00000000151821: mov eax, [rdi+0x8]; lea rdx, [rsp+0xc]; mov esi, 0xd; call qword ptr [rax+0x28]; 
0x0000000014f6f8: mov eax, [rdi+0x8]; lea rsi, [rsp+0x10]; call qword ptr [rax+0x10]; 
0x00000000156699: mov eax, [rdi+0x8]; lea rsi, [rsp+0x10]; call qword ptr [rax]; 
0x000000001571c1: mov eax, [rdi+0x8]; lea rsi, [rsp+0x4]; call qword ptr [rax+0x40]; 
0x00000000155e21: mov eax, [rdi+0x8]; lea rsi, [rsp+0x8]; call qword ptr [rax]; 
0x00000000153b6a: mov eax, [rdi+0x8]; mov dword ptr [rsp+0x30], 0x1; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x0000000015395a: mov eax, [rdi+0x8]; mov dword ptr [rsp+0x30], 0x3; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x000000001539ca: mov eax, [rdi+0x8]; mov dword ptr [rsp+0x30], 0x4; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x00000000153a3a: mov eax, [rdi+0x8]; mov dword ptr [rsp+0x30], 0x5; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x000000001490d1: mov eax, [rdi+0x8]; mov r12, rsp; lea rsi, [rsp+0x8]; call qword ptr [rax]; 
0x000000000946dc: mov eax, [rdi+0x8]; mov rax, [rdi]; mov rdi, r8; jmp rax; 
0x0000000014ed5b: mov eax, [rdi+0x8]; mov rsi, [r8+0x40]; mov edx, [rsi+0x1c8]; add rsi, 0x38; jmp qword ptr [rax+0x18]; 
0x00000000156d69: mov eax, [rdi+0x8]; mov rsi, rsp; call qword ptr [rax+0x40]; 
0x00000000149031: mov eax, [rdi+0x8]; mov rsi, rsp; call qword ptr [rax]; 
0x00000000149115: mov eax, [rdi+0x8]; punpcklqdq xmm0, xmm1; movaps [rsp], xmm0; call qword ptr [rax+0x8]; 
0x00000000155e71: mov eax, [rdi+0x8]; sar rdx, 0x20; mov [rsp+0x8], rdx; call qword ptr [rax+0x8]; 
0x00000000156db6: mov eax, [rdi+0x8]; sar rdx, 0x20; mov [rsp], edx; call qword ptr [rax+0x48]; 
0x00000000155f61: mov eax, [rdi+0x8]; shr rdx, 0x20; mov [rsp+0x8], rdx; call qword ptr [rax+0x8]; 
0x00000000156f96: mov eax, [rdi+0x8]; shr rdx, 0x20; mov [rsp], edx; call qword ptr [rax+0x48]; 
0x000000000874c5: mov eax, [rdi+0xa0]; cmp qword ptr [rax+0x30], 0x0; je short 0x00000000000874d8; ret; 
0x000000000cefa0: mov eax, [rdi+0xc]; cmp eax, [rsi+0xc]; jne 0x00000000000cf0b0; ret; 
0x000000001929b7: mov eax, [rdi-0x10]; cmp eax, [rsi-0x10]; jne 0x0000000000192af0; ret; 
0x00000000192a00: mov eax, [rdi-0x4]; cmp eax, [rsi-0x4]; jne 0x0000000000192af0; ret; 
0x00000000192ae0: mov eax, [rdi-0x4]; cmp eax, [rsi-0x4]; jne short 0x0000000000192af0; xor eax, eax; ret; 
0x0000000018e054: mov eax, [rdi-0x4]; cmp ecx, eax; jne 0x000000000018ea6f; xor eax, eax; ret; 
0x000000001929e5: mov eax, [rdi-0x8]; cmp eax, [rsi-0x8]; jne 0x0000000000192af0; ret; 
0x0000000018e5b1: mov eax, [rdi-0x8]; cmp rcx, rax; jne 0x000000000018ea63; xor eax, eax; ret; 
0x0000000018f781: mov eax, [rdi-0x8]; cmp rcx, rax; jne 0x000000000018f8a3; xor eax, eax; ret; 
0x000000001929d0: mov eax, [rdi-0xc]; cmp eax, [rsi-0xc]; jne 0x0000000000192af0; ret; 
0x0000000008cdb4: mov eax, [rdi]; and eax, 0x200; ret; 
0x0000000008cd84: mov eax, [rdi]; and eax, 0x804; ret; 
0x000000000cef5b: mov eax, [rdi]; cmp eax, [rsi]; jne 0x00000000000cf0b0; ret; 
0x00000000095225: mov eax, [rdi]; cmp rax, 0x2000000; jbe short 0x0000000000095230; ret; 
0x00000000094e75: mov eax, [rdi]; cmp rax, 0x408; jbe short 0x0000000000094e80; ret; 
0x00000000095285: mov eax, [rdi]; cmp rax, 0xa0; jbe short 0x0000000000095290; ret; 
0x00000000094eb5: mov eax, [rdi]; cmp rax, 0xffff; jbe short 0x0000000000094ec0; ret; 
0x000000001212a1: mov eax, [rdi]; mov [rdx], rax; mov eax, 0x1; ret; 
0x00000000093586: mov eax, [rdi]; mov [rdx], rax; ret; 
0x00000000094dd4: mov eax, [rdi]; mov [rsi], eax; xor eax, eax; ret; 
0x000000000946e0: mov eax, [rdi]; mov rdi, r8; jmp rax; 
0x00000000094ed5: mov eax, [rdi]; nop; mov [rip+0x157409], rax; ret; 
0x00000000094e65: mov eax, [rdi]; nop; mov [rip+0x157429], rax; ret; 
0x00000000094e55: mov eax, [rdi]; nop; mov [rip+0x157441], rax; ret; 
0x00000000095275: mov eax, [rdi]; nop; mov [rip+0x159c0e], eax; ret; 
0x00000000095255: mov eax, [rdi]; nop; mov dword ptr [rip+0x157052], 0x1; mov [rip+0x157044], eax; ret; 
0x00000000095205: mov eax, [rdi]; nop; mov dword ptr [rip+0x1570a2], 0x1; mov [rip+0x15706f], rax; ret; 
0x000000000951e5: mov eax, [rdi]; nop; mov dword ptr [rip+0x1570c2], 0x1; mov [rip+0x157087], rax; ret; 
0x000000000de314: mov eax, [rdi]; ret; 
0x0000000008df24: mov eax, [rdi]; shr eax, 0x4; and eax, 0x1; ret; 
0x0000000008df34: mov eax, [rdi]; shr eax, 0x5; and eax, 0x1; ret; 
0x0000000014dd27: mov eax, [rdi]; test eax, eax; jne short 0x000000000014dd30; ret; 
0x00000000154427: mov eax, [rdi]; test eax, eax; jne short 0x0000000000154430; ret; 
0x0000000008ce46: mov eax, [rdx+0x20]; sub rax, [rdx+0x18]; sar rax, 0x2; ret; 
0x0000000005508e: mov eax, [rdx+0x28]; mov r9, [rdx+0x30]; mov rdx, [rdx+0x88]; xor eax, eax; ret; 
0x0000000008cd16: mov eax, [rdx+0x38]; sub rax, [rdx+0x30]; sar rax, 0x2; ret; 
0x0000000008a74e: mov eax, [rdx+0x4c]; cmp [rdx+0x48], eax; cmovne eax, ecx; ret; 
0x000000001131f3: mov eax, [rdx+0x50]; mov [rsi+0x50], rcx; xor rax, 0x20; mov [rsi+0x48], rax; ret; 
0x00000000102a71: mov eax, [rdx+0x8]; ret; 
0x00000000034227: mov eax, [rdx+rax*4+0x200]; ret; 
0x000000000aee16: mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x00000000136f09: mov eax, [rdx+rax*8+0x4]; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000033e2c: mov eax, [rdx+rax]; mov eax, r8d; ret; 
0x00000000033dca: mov eax, [rdx+rax]; test eax, eax; jne short 0x0000000000033dd8; mov eax, r8d; ret; 
0x000000000328e1: mov eax, [rdx+rdi*8+0x40]; ret; 
0x0000000014fe99: mov eax, [rdx]; bswap eax; mov [r8+0x54], eax; mov eax, 0x1; ret; 
0x0000000014fe69: mov eax, [rdx]; bswap eax; mov [r8+0x58], eax; mov eax, 0x1; ret; 
0x0000000014d0b9: mov eax, [rdx]; bswap eax; mov [r8+0xb4], eax; mov eax, 0x1; ret; 
0x0000000014d089: mov eax, [rdx]; bswap eax; mov [r8+0xb8], eax; mov eax, 0x1; ret; 
0x0000000011f7e6: mov eax, [rdx]; cmp eax, 0x26; je short 0x000000000011f824; mov eax, r8d; ret; 
0x00000000156640: mov eax, [rdx]; lea rsi, [rsp+0x10]; mov [rsp+0x10], rax; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x000000000855c0: mov eax, [rdx]; ret; 
0x000000000e4610: mov eax, [rip+0x10ce6a]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000e45b8: mov eax, [rip+0x10ced2]; test eax, eax; jne short 0x00000000000e45f0; mov eax, 0x77; syscall; 
0x000000000e4560: mov eax, [rip+0x10cf1a]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000e4508: mov eax, [rip+0x10cf82]; test eax, eax; jne short 0x00000000000e4540; mov eax, 0x75; syscall; 
0x000000000e4282: mov eax, [rip+0x10d1f8]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000e4238: mov eax, [rip+0x10d252]; test eax, eax; jne short 0x00000000000e4270; mov eax, 0x6a; syscall; 
0x000000000e41e2: mov eax, [rip+0x10d298]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000e4198: mov eax, [rip+0x10d2f2]; test eax, eax; jne short 0x00000000000e41d0; mov eax, 0x69; syscall; 
0x000000000de15a: mov eax, [rip+0x10dd10]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000e30e1: mov eax, [rip+0x10e3a1]; mov rdi, r9; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000dd179: mov eax, [rip+0x10ecf1]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000dd0d1: mov eax, [rip+0x10ed89]; mov rax, [rax+0x1a0]; test rax, rax; je short 0x00000000000dd118; call rax; 
0x000000000dd051: mov eax, [rip+0x10ee09]; mov rax, [rax+0x1c0]; test rax, rax; je short 0x00000000000dd098; call rax; 
0x000000000df418: mov eax, [rip+0x112072]; test eax, eax; jne short 0x00000000000df450; mov eax, 0x74; syscall; 
0x000000000ddbb1: mov eax, [rip+0x113879]; lea rdi, [rip+0x10fdc2]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000ddb6b: mov eax, [rip+0x1138c7]; lea rdi, [rip+0x10fe08]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000dd9c9: mov eax, [rip+0x113a61]; lea rdi, [rip+0x10ffaa]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000dd99a: mov eax, [rip+0x113a98]; lea rdi, [rip+0x10ffd9]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000dd8d1: mov eax, [rip+0x113b59]; lea rdi, [rip+0x1100a2]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000dd8a8: mov eax, [rip+0x113b8a]; lea rdi, [rip+0x1100cb]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000dd3d6: mov eax, [rip+0x114054]; lea rdi, [rip+0x11059d]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000d1dec: mov eax, [rip+0x11a056]; movaps [rax], xmm0; add rsp, 0x10; pop rbp; ret; 
0x000000000d01a1: mov eax, [rip+0x11bcc9]; mov dword ptr fs:[rax], 0x16; xor eax, eax; ret; 
0x000000000d0181: mov eax, [rip+0x11bce9]; mov dword ptr fs:[rax], 0x4b; xor eax, eax; add rsp, 0x8; ret; 
0x000000000ca329: mov eax, [rip+0x127109]; lea rdi, [rip+0x12364a]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000ca146: mov eax, [rip+0x1272e4]; lea rdi, [rip+0x12382d]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000009e985: mov eax, [rip+0x14d4e5]; mov dword ptr fs:[rax], 0xc; xor eax, eax; ret; 
0x0000000009e802: mov eax, [rip+0x14d748]; call qword ptr [rax]; 
0x0000000009e621: mov eax, [rip+0x14d929]; call qword ptr [rax]; 
0x0000000009e551: mov eax, [rip+0x14d9f9]; call qword ptr [rax]; 
0x0000000009fa8b: mov eax, [rip+0x1519b7]; mov edi, [rip+0x14f52d]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000009f8ac: mov eax, [rip+0x151b8e]; lea rdi, [rip+0x14f70b]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000009a0f9: mov eax, [rip+0x151de1]; mov [rax], rdi; ret; 
0x0000000009a0ef: mov eax, [rip+0x151eeb]; mov [rax], rsi; mov rax, [rip+0x151de1]; mov [rax], rdi; ret; 
0x0000000009945e: mov eax, [rip+0x152a0c]; xor r8d, r8d; mov dword ptr fs:[rax], 0xc; mov rax, r8; ret; 
0x00000000099207: mov eax, [rip+0x152c5b]; mov rax, [rax]; test rax, rax; je short 0x0000000000099217; call rax; 
0x000000000980c1: mov eax, [rip+0x153da9]; xor r8d, r8d; mov dword ptr fs:[rax], 0xc; mov rax, r8; ret; 
0x000000000979fe: mov eax, [rip+0x1543bc]; mov [rsp+0x8], r8; xor edi, edi; call qword ptr [rax]; 
0x000000000978e9: mov eax, [rip+0x1544d1]; xor edi, edi; call qword ptr [rax]; 
0x000000000978a3: mov eax, [rip+0x154517]; call qword ptr [rax]; 
0x00000000097590: mov eax, [rip+0x15482a]; mov [rsp+0x18], r11; mov rdi, r13; mov [rsp+0x10], r10; call qword ptr [rax]; 
0x000000000961ff: mov eax, [rip+0x155cdb]; mov [rax], rdx; ret; 
0x000000000961f5: mov eax, [rip+0x155de5]; mov [rax], rsi; mov rax, [rip+0x155cdb]; mov [rax], rdx; ret; 
0x00000000093865: mov eax, [rip+0x159d35]; ret; 
0x000000000945af: mov eax, [rip+0x15ce5b]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009457f: mov eax, [rip+0x15ce83]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009454f: mov eax, [rip+0x15ceab]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009451f: mov eax, [rip+0x15ced3]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000944ef: mov eax, [rip+0x15cefb]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000944bf: mov eax, [rip+0x15cf23]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009448f: mov eax, [rip+0x15cf4b]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009445f: mov eax, [rip+0x15cf73]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000943ef: mov eax, [rip+0x15cfa3]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000094425: mov eax, [rip+0x15cfa5]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000943bf: mov eax, [rip+0x15cfcb]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009438f: mov eax, [rip+0x15cff3]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009435f: mov eax, [rip+0x15d01b]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009432f: mov eax, [rip+0x15d043]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000942ff: mov eax, [rip+0x15d06b]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000942cf: mov eax, [rip+0x15d093]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009429f: mov eax, [rip+0x15d0bb]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009426f: mov eax, [rip+0x15d0e3]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009423f: mov eax, [rip+0x15d10b]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009420f: mov eax, [rip+0x15d133]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000941df: mov eax, [rip+0x15d15b]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000008d371: mov eax, [rip+0x15eaf9]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000008aee9: mov eax, [rip+0x160f81]; mov dword ptr fs:[rax], 0x9; mov eax, 0xffffffff; ret; 
0x00000000084761: mov eax, [rip+0x167709]; mov dword ptr fs:[rax], 0x16; mov rax, 0xffffffffffffffff; ret; 
0x0000000007a6f9: mov eax, [rip+0x1730b1]; shl rdx, 0x2; lea rcx, [rbx+rdx]; add rdx, r15; call qword ptr [rax+r9*8]; 
0x00000000074049: mov eax, [rip+0x179761]; shl rdx, 0x2; lea rcx, [rbx+rdx]; add rdx, r15; call qword ptr [rax+r9*8]; 
0x0000000005eddb: mov eax, [rip+0x18e9cf]; mov rcx, r14; call qword ptr [rax+r8*8]; 
0x00000000048361: mov eax, [rip+0x1a3b09]; mov dword ptr fs:[rax], 0x5; mov eax, 0xffffffff; ret; 
0x00000000047c89: mov eax, [rip+0x1a41e1]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000440aa: mov eax, [rip+0x1a7dc0]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000043f6a: mov eax, [rip+0x1a7f00]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000043e21: mov eax, [rip+0x1a8049]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000440d4: mov eax, [rip+0x1a80ce]; ret; 
0x000000000440c4: mov eax, [rip+0x1a80e2]; ret; 
0x00000000043d61: mov eax, [rip+0x1a8109]; mov dword ptr fs:[rax], 0x16; mov rax, 0xffffffffffffffff; ret; 
0x00000000043c85: mov eax, [rip+0x1a81e5]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x00000000043c69: mov eax, [rip+0x1a8201]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000043c21: mov eax, [rip+0x1a8249]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000043bd1: mov eax, [rip+0x1a8299]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000043b82: mov eax, [rip+0x1a82e8]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000043b23: mov eax, [rip+0x1a8347]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000432d1: mov eax, [rip+0x1a8b99]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000043091: mov eax, [rip+0x1a8dd9]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000042f51: mov eax, [rip+0x1a8f19]; mov dword ptr fs:[rax], 0x16; mov rax, 0xffffffffffffffff; ret; 
0x00000000042572: mov eax, [rip+0x1a98f8]; mov dword ptr fs:[rax], 0x22; add rsp, 0x8; ret; 
0x0000000004224c: mov eax, [rip+0x1a9c1e]; mov dword ptr fs:[rax], 0x22; add rsp, 0x8; ret; 
0x00000000041e8b: mov eax, [rip+0x1a9fdf]; mov dword ptr fs:[rax], 0x22; add rsp, 0x8; ret; 
0x000000000412e1: mov eax, [rip+0x1aab89]; mov dword ptr fs:[rax], 0x9; mov eax, 0xffffffff; pop rbp; ret; 
0x00000000041281: mov eax, [rip+0x1aabe9]; mov dword ptr fs:[rax], 0x2a; mov rax, r11; ret; 
0x00000000042dff: mov eax, [rip+0x1ae613]; mov rsi, rsp; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000344d5: mov eax, [rip+0x1b792d]; add rax, fs:[0x0]; ret; 
0x000000000344f5: mov eax, [rip+0x1b79ed]; add rax, fs:[0x0]; ret; 
0x00000000034515: mov eax, [rip+0x1b7a0d]; add rax, fs:[0x0]; ret; 
0x00000000033d85: mov eax, [rip+0x1b803d]; movsxd rdi, edi; mov rax, fs:[rax]; mov rax, [rax+rdi*8+0x80]; ret; 
0x00000000033d41: mov eax, [rip+0x1b80a1]; mov [rax], rdx; ret; 
0x00000000038598: mov eax, [rip+0x1b8e9a]; lea rdi, [rip+0x1b555b]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000038537: mov eax, [rip+0x1b8ef3]; lea rdi, [rip+0x1b55bc]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000032915: mov eax, [rip+0x1b94ad]; mov rax, fs:[rax]; mov rax, [rax]; mov eax, [rax+0xa8]; ret; 
0x00000000036583: mov eax, [rip+0x1baeaf]; lea rdi, [rip+0x1b7630]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003651a: mov eax, [rip+0x1baf10]; lea rdi, [rip+0x1b7699]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000363eb: mov eax, [rip+0x1bb047]; lea rdi, [rip+0x1b77c8]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003638b: mov eax, [rip+0x1bb097]; lea rdi, [rip+0x1b7828]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003627d: mov eax, [rip+0x1bb1b5]; lea rdi, [rip+0x1b78f6]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000036211: mov eax, [rip+0x1bb219]; lea rdi, [rip+0x1b7962]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035f7a: mov eax, [rip+0x1bb4b8]; lea rdi, [rip+0x1b79f9]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035f4c: mov eax, [rip+0x1bb4e6]; lea rdi, [rip+0x1b7ba7]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035e6e: mov eax, [rip+0x1bb5c4]; lea rdi, [rip+0x1b7b05]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035e47: mov eax, [rip+0x1bb5eb]; lea rdi, [rip+0x1b7cac]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035d00: mov eax, [rip+0x1bb732]; lea rdi, [rip+0x1b7c73]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035cce: mov eax, [rip+0x1bb764]; lea rdi, [rip+0x1b7e25]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000359c6: mov eax, [rip+0x1bba6c]; lea rdi, [rip+0x1b81ad]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035981: mov eax, [rip+0x1bbaa1]; lea rdi, [rip+0x1b81f2]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035924: mov eax, [rip+0x1bbafe]; lea rdi, [rip+0x1b81cf]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000358fd: mov eax, [rip+0x1bbb25]; lea rdi, [rip+0x1b8076]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035703: mov eax, [rip+0x1bbd2f]; lea rdi, [r13+0x80]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003559b: mov eax, [rip+0x1bbe97]; lea rdi, [r13+0x80]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000353b0: mov eax, [rip+0x1bc07a]; mov rdi, r12; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003538d: mov eax, [rip+0x1bc0a5]; mov rdi, r12; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035364: mov eax, [rip+0x1bc0ce]; lea rdi, [r13+0x80]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003506b: mov eax, [rip+0x1bc3b7]; lea rdi, [r13+0x80]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000345b2: mov eax, [rip+0x1bce78]; lea rdi, [rip+0x1b9541]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000033ade: mov eax, [rip+0x1bd954]; lea rdi, [rip+0x1b9e95]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000033a03: mov eax, [rip+0x1bda27]; lea rdi, [rip+0x1b9f70]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003398c: mov eax, [rip+0x1bdaa6]; lea rdi, [rip+0x1b9fe7]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000338f2: mov eax, [rip+0x1bdb38]; lea rdi, [rip+0x1ba081]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000033358: mov eax, [rip+0x1be0da]; lea rdi, [rip+0x1ba61b]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000332ee: mov eax, [rip+0x1be144]; lea rdi, [rip+0x1ba685]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000330ee: mov eax, [rip+0x1be33c]; lea rdi, [rip+0x1ba885]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000002f5d5: mov eax, [rip+0x1be38d]; ret; 
0x000000000310bd: mov eax, [rip+0x1c0375]; lea rdi, [rip+0x1bc8b6]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000030cb5: mov eax, [rip+0x1c077d]; lea rdi, [rip+0x1bccbe]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000030b63: mov eax, [rip+0x1c08cf]; lea rdi, [rip+0x1bce10]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000030a7b: mov eax, [rip+0x1c09b7]; lea rdi, [rip+0x1bcef8]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000309ee: mov eax, [rip+0x1c0a44]; lea rdi, [rip+0x1bcf85]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000307b9: mov eax, [rip+0x1c0c79]; lea rdi, [rip+0x1bd1ba]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000030771: mov eax, [rip+0x1c0cb9]; lea rdi, [rip+0x1bd202]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000026f88: mov eax, [rip+0x1c69c6]; test eax, eax; je short 0x0000000000026f98; ret; 
0x00000000024719: mov eax, [rip+0x1c7751]; mov dword ptr fs:[rax], 0x9; mov eax, 0xffffffff; ret; 
0x00000000024435: mov eax, [rip+0x1c7a35]; add rax, fs:[0x0]; ret; 
0x0000000002402c: mov eax, [rip+0x1c7e7e]; mov rsi, [rsp+0x8]; mov edi, [rsp+0x14]; mov rdx, [rax]; call rbx; 
0x00000000025ae5: mov eax, [rip+0x1cb6bd]; ret; 
0x00000000025ad5: mov eax, [rip+0x1cb6dd]; ret; 
0x000000000240d7: mov eax, [rip+0x1cd39b]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000163345: mov eax, [rip+0x88b25]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x00000000162ce5: mov eax, [rip+0x89185]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x00000000162cc5: mov eax, [rip+0x891a5]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x00000000162c85: mov eax, [rip+0x891e5]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x00000000162c65: mov eax, [rip+0x89205]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x00000000162c45: mov eax, [rip+0x89225]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x00000000162c25: mov eax, [rip+0x89245]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x00000000160bd5: mov eax, [rip+0x8b295]; mov dword ptr fs:[rax], 0x26; xor eax, eax; ret; 
0x000000001609e1: mov eax, [rip+0x8b489]; mov dword ptr fs:[rax], 0x16; xor eax, eax; ret; 
0x0000000015fd04: mov eax, [rip+0x8c156]; mov r8, [rbx+0x10]; call qword ptr [rax+0x1e0]; 
0x0000000015f895: mov eax, [rip+0x8c5c5]; jmp qword ptr [rax+0x1f0]; 
0x0000000015f7d2: mov eax, [rip+0x8c688]; mov rdi, [rdi]; call qword ptr [rax+0x1e8]; 
0x0000000015f779: mov eax, [rip+0x8c6e1]; mov rdi, [rsp]; mov rax, [rax+0x1d8]; jmp rax; 
0x0000000015f745: mov eax, [rip+0x8c715]; mov rsi, rdi; mov rdi, [rsp]; mov rax, [rax+0x1d8]; jmp rax; 
0x0000000015f2d2: mov eax, [rip+0x8cb88]; call qword ptr [rax+0x1f8]; 
0x0000000015c965: mov eax, [rip+0x8f505]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x00000000160b5f: mov eax, [rip+0x90863]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000160b2f: mov eax, [rip+0x9088b]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000160aff: mov eax, [rip+0x908b3]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000160bad: mov eax, [rip+0x908bd]; mov rdi, r8; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000160acf: mov eax, [rip+0x908db]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000160a9f: mov eax, [rip+0x90903]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000160a6f: mov eax, [rip+0x9092b]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000015fcc1: mov eax, [rip+0x914c1]; call qword ptr [rax+0x10]; 
0x0000000015fbe1: mov eax, [rip+0x91599]; test rax, rax; je short 0x000000000015fbd7; call qword ptr [rax+0x18]; 
0x0000000015fa49: mov eax, [rip+0x91739]; call qword ptr [rax+0x8]; 
0x0000000015f951: mov eax, [rip+0x91831]; call qword ptr [rax]; 
0x00000000153095: mov eax, [rip+0x98d05]; lea rdx, [rip+0x9dd9e]; mov fs:[rax], rdx; ret; 
0x00000000146eb4: mov eax, [rip+0xa9cc2]; test eax, eax; je short 0x0000000000146ec0; ret; 
0x00000000141025: mov eax, [rip+0xaadfd]; mov eax, [rax+0x18]; test eax, eax; jne short 0x0000000000141038; ret; 
0x00000000141115: mov eax, [rip+0xaaed5]; mov rax, fs:[rax]; ret; 
0x00000000142e95: mov eax, [rip+0xadb85]; test rax, rax; jne short 0x0000000000142ea8; ret; 
0x00000000141a5d: mov eax, [rip+0xaefbd]; test rax, rax; je short 0x0000000000141a70; add rsp, 0x8; ret; 
0x00000000140bd8: mov eax, [rip+0xafbe6]; test eax, eax; je short 0x0000000000140be8; ret; 
0x0000000012feb5: mov eax, [rip+0xbbf9d]; add rax, fs:[0x0]; ret; 
0x0000000012f441: mov eax, [rip+0xbca29]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000001228e5: mov eax, [rip+0xc9575]; mov eax, [rax+0x38]; ret; 
0x000000001200d5: mov eax, [rip+0xcbd95]; mov dword ptr fs:[rax], 0x26; mov rax, 0xffffffffffffffff; ret; 
0x0000000011f911: mov eax, [rip+0xcc559]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000011f8d1: mov eax, [rip+0xcc599]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000122001: mov eax, [rip+0xcda71]; mov rax, [rax+0x18]; add dword ptr [rax], 0x1; ret; 
0x00000000121ff1: mov eax, [rip+0xcda81]; mov rax, [rax+0x18]; add word ptr [rax], 0x1; ret; 
0x0000000011d041: mov eax, [rip+0xcee29]; mov dword ptr fs:[rax], 0x2; xor eax, eax; ret; 
0x0000000011c519: mov eax, [rip+0xcf951]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000011c301: mov eax, [rip+0xcfc51]; mov rax, [rax]; test rax, rax; je 0x000000000011c400; call rax; 
0x0000000011c120: mov eax, [rip+0xcfe32]; mov rax, [rax]; test rax, rax; je short 0x000000000011c190; call rax; 
0x00000000119801: mov eax, [rip+0xd2669]; mov dword ptr fs:[rax], 0x16; ret; 
0x000000001197cc: mov eax, [rip+0xd269e]; mov dword ptr fs:[rax], 0x16; xor eax, eax; ret; 
0x000000001197ba: mov eax, [rip+0xd26b0]; mov dword ptr fs:[rax], 0xc; xor eax, eax; pop rbx; ret; 
0x00000000118f8e: mov eax, [rip+0xd2edc]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000118929: mov eax, [rip+0xd3541]; mov dword ptr fs:[rax], 0x16; mov rax, 0xffffffffffffffff; ret; 
0x00000000118734: mov eax, [rip+0xd3c0e]; test edi, edi; je short 0x0000000000118744; mov [rip+0xd3c04], edi; ret; 
0x000000001157a1: mov eax, [rip+0xd66c9]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000115779: mov eax, [rip+0xd66f1]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000115635: mov eax, [rip+0xd6835]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x00000000114c65: mov eax, [rip+0xd71f5]; mov rax, [rax+0x18]; test rax, rax; je short 0x0000000000114c75; ret; 
0x000000001143b5: mov eax, [rip+0xd7ab5]; mov dword ptr fs:[rax], 0x26; mov rax, 0xffffffffffffffff; ret; 
0x000000001142f9: mov eax, [rip+0xd7b71]; mov dword ptr fs:[rax], 0xc; mov eax, 0xffffffff; ret; 
0x000000001142e5: mov eax, [rip+0xd7bdd]; mov qword ptr [rax], 0xffffffffffffffff; xor eax, eax; ret; 
0x0000000011378c: mov eax, [rip+0xd86de]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000011372b: mov eax, [rip+0xd873f]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000113179: mov eax, [rip+0xd8cf1]; mov dword ptr fs:[rax], 0x9; mov eax, 0xffffffff; ret; 
0x00000000113143: mov eax, [rip+0xd8d27]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000112959: mov eax, [rip+0xd9511]; mov dword ptr fs:[rax], 0x16; xor eax, eax; ret; 
0x00000000112821: mov eax, [rip+0xd9649]; mov dword ptr fs:[rax], 0x16; mov eax, 0x1; ret; 
0x00000000115bbe: mov eax, [rip+0xd9aac]; mov [rip+0xd9ad5], rax; lea rax, [rip+0xd9aa6]; add rsp, 0x8; ret; 
0x00000000110dd1: mov eax, [rip+0xdb099]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000114a87: mov eax, [rip+0xdc9f3]; movups [rsp+0x8], xmm0; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000114a38: mov eax, [rip+0xdca52]; test eax, eax; jne short 0x0000000000114a70; mov eax, 0x72; syscall; 
0x000000001149e7: mov eax, [rip+0xdca93]; movups [rsp+0x8], xmm0; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000114998: mov eax, [rip+0xdcaf2]; test eax, eax; jne short 0x00000000001149d0; mov eax, 0x71; syscall; 
0x0000000010dc69: mov eax, [rip+0xde201]; mov dword ptr fs:[rax], 0x5f; mov eax, 0xffffffff; ret; 
0x0000000010dc51: mov eax, [rip+0xde219]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010dbf5: mov eax, [rip+0xde275]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x0000000010da19: mov eax, [rip+0xde451]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010d9b9: mov eax, [rip+0xde4b1]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010d959: mov eax, [rip+0xde511]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010d5d1: mov eax, [rip+0xde899]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010d571: mov eax, [rip+0xde8f9]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010d511: mov eax, [rip+0xde959]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000fecc5: mov eax, [rip+0xed2ed]; mov r8, [rax]; mov [rax], rdi; mov rax, r8; ret; 
0x00000000123531: mov eax, [rsi+0x68]; mov edi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x1; ret; 
0x00000000034305: mov eax, [rsi+0x68]; movsxd rdi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x1; ret; 
0x00000000150474: mov eax, [rsi+0x70]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x00000000034485: mov eax, [rsi+0x70]; movsxd rdi, edi; mov eax, [rax+rdi*4]; ret; 
0x00000000034495: mov eax, [rsi+0x78]; movsxd rdi, edi; mov eax, [rax+rdi*4]; ret; 
0x00000000148c81: mov eax, [rsi+0x8]; mov rsi, [rbx+0x10]; mov rdx, r12; mov rdi, r14; call qword ptr [rax+0x10]; 
0x00000000148cbb: mov eax, [rsi+0x8]; mov rsi, [rbx+0x10]; mov rdx, r12; mov rdi, r14; call qword ptr [rax+0x20]; 
0x00000000032901: mov eax, [rsi+rax*8+0x80]; ret; 
0x000000001567d0: mov eax, [rsi]; lea rsi, [rsp+0x10]; mov [rsp+0x10], rax; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x0000000010d144: mov eax, [rsi]; mov [rdi+0x108], eax; xor eax, eax; ret; 
0x00000000155ce0: mov eax, [rsi]; mov rsi, rsp; mov [rsp], rax; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x000000000e2cc3: mov eax, [rsp+0x10]; add rsp, 0x28; ret; 
0x000000000a8b21: mov eax, [rsp+0x10]; mov [rdi], rax; lea rax, [rdi+rdx-0x1]; ret; 
0x0000000014d2f0: mov eax, [rsp+0x10]; mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x18]; 
0x0000000016088a: mov eax, [rsp+0x10]; mov rdi, [rsp+0x18]; call rax; 
0x00000000149db1: mov eax, [rsp+0x10]; mov rdx, r13; mov rsi, r12; mov rdi, rbp; call rax; 
0x0000000014d1ce: mov eax, [rsp+0x10]; mov rsi, r12; mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x8]; 
0x00000000041ba4: mov eax, [rsp+0x10]; or eax, 0xffff8000; inc eax; shr eax, 0x1f; ret; 
0x00000000113284: mov eax, [rsp+0x18]; add rsp, 0x28; ret; 
0x000000000240ad: mov eax, [rsp+0x18]; call rax; 
0x0000000015f2e4: mov eax, [rsp+0x18]; mov rdx, r14; mov esi, 0x40; mov rdi, rbx; call rax; 
0x000000001182bb: mov eax, [rsp+0x18]; xor rax, fs:[0x28]; jne short 0x00000000001182d2; add rsp, 0xd8; ret; 
0x00000000118394: mov eax, [rsp+0x18]; xor rax, fs:[0x28]; jne short 0x00000000001183ab; add rsp, 0xd8; ret; 
0x0000000011bd50: mov eax, [rsp+0x18]; xor rax, fs:[0x28]; jne short 0x000000000011bd67; add rsp, 0xd8; ret; 
0x0000000011be10: mov eax, [rsp+0x18]; xor rax, fs:[0x28]; jne short 0x000000000011be27; add rsp, 0xd8; ret; 
0x0000000011c257: mov eax, [rsp+0x18]; xor rax, fs:[0x28]; jne short 0x000000000011c26e; add rsp, 0xd8; ret; 
0x0000000011c4c4: mov eax, [rsp+0x18]; xor rax, fs:[0x28]; jne short 0x000000000011c4db; add rsp, 0xd8; ret; 
0x00000000129b72: mov eax, [rsp+0x18]; xor rax, fs:[0x28]; jne short 0x0000000000129b89; add rsp, 0xd8; ret; 
0x0000000012b89b: mov eax, [rsp+0x18]; xor rax, fs:[0x28]; jne short 0x000000000012b8b2; add rsp, 0xd8; ret; 
0x00000000154136: mov eax, [rsp+0x18]; xor rax, fs:[0x28]; jne short 0x0000000000154168; add rsp, 0x28; ret; 
0x000000000279f5: mov eax, [rsp+0x20]; call rax; 
0x000000000273f9: mov eax, [rsp+0x28]; call rax; 
0x00000000146d9a: mov eax, [rsp+0x28]; mov rcx, [rsp+0x20]; mov rdx, [rsp+0x18]; mov rsi, [rsp+0x10]; call qword ptr [rax]; 
0x0000000002824c: mov eax, [rsp+0x30]; call rax; 
0x00000000147b4e: mov eax, [rsp+0x38]; mov rdi, r12; call qword ptr [rax+0x20]; 
0x0000000008dbfb: mov eax, [rsp+0x38]; xor rax, fs:[0x28]; jne short 0x000000000008dc1b; add rsp, 0x48; ret; 
0x00000000155ba9: mov eax, [rsp+0x38]; xor rax, fs:[0x28]; jne short 0x0000000000155bbd; add rsp, 0x48; ret; 
0x0000000011bfeb: mov eax, [rsp+0x408]; xor rax, fs:[0x28]; jne short 0x000000000011c005; add rsp, 0x418; ret; 
0x0000000014ef71: mov eax, [rsp+0x48]; call qword ptr [rax+0x28]; 
0x0000000002f177: mov eax, [rsp+0x48]; mov rcx, [rsp+0x18]; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; call r15; 
0x00000000150e3a: mov eax, [rsp+0x48]; mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x18]; 
0x0000000011f2d9: mov eax, [rsp+0x4]; add rsp, 0x20; pop rbp; ret; 
0x00000000120c2c: mov eax, [rsp+0x4]; add rsp, 0x28; ret; 
0x0000000014f1a2: mov eax, [rsp+0x58]; mov rdi, r12; call qword ptr [rax+0x20]; 
0x0000000015396e: mov eax, [rsp+0x68]; xor rax, fs:[0x28]; jne short 0x0000000000153982; add rsp, 0x78; ret; 
0x000000001539de: mov eax, [rsp+0x68]; xor rax, fs:[0x28]; jne short 0x00000000001539f2; add rsp, 0x78; ret; 
0x00000000153a4e: mov eax, [rsp+0x68]; xor rax, fs:[0x28]; jne short 0x0000000000153a62; add rsp, 0x78; ret; 
0x00000000153aaf: mov eax, [rsp+0x68]; xor rax, fs:[0x28]; jne short 0x0000000000153ac3; add rsp, 0x78; ret; 
0x00000000153b13: mov eax, [rsp+0x68]; xor rax, fs:[0x28]; jne short 0x0000000000153b27; add rsp, 0x78; ret; 
0x00000000153b7e: mov eax, [rsp+0x68]; xor rax, fs:[0x28]; jne short 0x0000000000153b92; add rsp, 0x78; ret; 
0x00000000153c01: mov eax, [rsp+0x68]; xor rax, fs:[0x28]; jne short 0x0000000000153c15; add rsp, 0x78; ret; 
0x00000000034a16: mov eax, [rsp+0x8]; add rsp, 0x18; ret; 
0x000000000482a5: mov eax, [rsp+0x8]; add rsp, 0x28; ret; 
0x00000000113088: mov eax, [rsp+0x8]; add rsp, 0x30; pop rbp; ret; 
0x00000000121001: mov eax, [rsp+0x8]; add rsp, 0x38; ret; 
0x000000000240bb: mov eax, [rsp+0x8]; lea rdi, [rip+0x18fda2]; mov rsi, [rax]; xor eax, eax; call qword ptr [rdx+0x1d0]; 
0x00000000088f1b: mov eax, [rsp+0x8]; mov esi, 0xffffffff; mov rdi, r8; call qword ptr [rax+0x18]; 
0x000000001486e9: mov eax, [rsp+0x8]; mov esi, r14d; mov rdi, r13; call qword ptr [rax+0x30]; 
0x00000000119c49: mov eax, [rsp+0x8]; mov rdi, r13; call rax; 
0x0000000014621a: mov eax, [rsp+0x8]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x000000001377f0: mov eax, [rsp+0x8]; mov rdi, rbx; call rax; 
0x00000000042bb8: mov eax, [rsp+0x8]; xor rax, fs:[0x28]; jne short 0x0000000000042bcc; add rsp, 0x18; ret; 
0x00000000047de0: mov eax, [rsp+0x8]; xor rax, fs:[0x28]; jne short 0x0000000000047df4; add rsp, 0x18; ret; 
0x00000000047e2d: mov eax, [rsp+0x8]; xor rax, fs:[0x28]; jne short 0x0000000000047e41; add rsp, 0x18; ret; 
0x00000000147b9d: mov eax, [rsp+0xc8]; mov rdi, rbx; call qword ptr [rax+0x20]; 
0x000000000e2ea3: mov eax, [rsp+0xc]; add rsp, 0x18; ret; 
0x000000000e2d7d: mov eax, [rsp+0xc]; add rsp, 0x28; ret; 
0x0000000011500f: mov eax, [rsp+0xc]; add rsp, 0x38; ret; 
0x00000000042644: mov eax, [rsp-0x10]; and rax, rdx; sub rax, rdx; shr rax, 0x3f; ret; 
0x0000000010ea06: mov eax, [rsp]; add rsp, 0x18; ret; 
0x000000001203a0: mov eax, [rsp]; add rsp, 0x20; pop rbp; ret; 
0x0000000010c1f4: mov eax, [rsp]; add rsp, 0x28; ret; 
0x00000000120466: mov eax, [rsp]; add rsp, 0x30; pop rbp; ret; 
0x00000000122947: mov eax, [rsp]; add rsp, 0x38; ret; 
0x000000001229a8: mov eax, [rsp]; add rsp, 0x40; ret; 
0x000000000457ac: mov eax, [rsp]; call rax; 
0x00000000047252: mov eax, [rsp]; lock add qword ptr [rax+0x460], 0x1; lea rdi, [rbp+0x908]; call qword ptr [rbp+0xf10]; 
0x0000000008746a: mov eax, [rsp]; mov esi, r12d; mov rdi, r14; call qword ptr [rax+0x18]; 
0x00000000045911: mov eax, [rsp]; mov r13, r15; add r15, r12; call rax; 
0x0000000013850f: mov eax, [rsp]; mov rdi, r12; call rax; 
0x000000000920b4: mov eax, [rsp]; mov rdi, r15; lea rbx, [rsi+0x1]; movzx esi, byte ptr [rsi]; call qword ptr [rax+0x18]; 
0x00000000045711: mov eax, [rsp]; mov rdx, r14; mov rsi, r13; mov rdi, r12; call rax; 
0x0000000004589c: mov eax, [rsp]; mov rsi, r12; mov rdi, r13; call rax; 
0x0000000012533a: mov eax, [rsp]; pop rbx; pop rbp; pop r12; ret; 
0x0000000004304f: mov eax, eax; add rsp, 0x118; ret; 
0x000000000d4ac0: mov eax, eax; add rsp, 0x8; ret; 
0x0000000009ef4c: mov eax, eax; cmp [rdi+0x8], rsi; jb short 0x000000000009ef60; mov [rdi], rsi; ret; 
0x00000000062f3c: mov eax, eax; cmp eax, 0xffffffff; je short 0x0000000000062f50; mov eax, r8d; ret; 
0x0000000014d049: mov eax, eax; mov [rdx], rax; mov eax, 0x1; ret; 
0x00000000156ade: mov eax, eax; mov [rsp], rax; mov rax, [rbp+0x8]; call qword ptr [rax+0x8]; 
0x0000000013c60a: mov eax, eax; mov byte ptr [r8+0x2], 0x0; ret; 
0x0000000013c36c: mov eax, eax; mov byte ptr [rdi+rdx], 0x0; ret; 
0x00000000116f06: mov eax, eax; mov byte ptr [rsi-0x1], 0x0; ret; 
0x00000000148258: mov eax, eax; mov dword ptr [rsi], 0x10; mov qword ptr [rsi+0x8], 0x0; mov [rsi+0x10], rax; ret; 
0x00000000113bbc: mov eax, eax; mov eax, 0x10; syscall; 
0x0000000010e862: mov eax, eax; mov eax, 0x3; syscall; 
0x000000001151f2: mov eax, eax; mov eax, 0x4a; syscall; 
0x000000001152b2: mov eax, eax; mov eax, 0x4b; syscall; 
0x0000000010e9ea: mov eax, eax; mov eax, 0x55; syscall; 
0x000000000434b1: mov eax, eax; mov eax, 0x82; syscall; 
0x0000000011f808: mov eax, eax; mov eax, r8d; ret; 
0x00000000113905: mov eax, eax; mov ebx, fs:[r10]; syscall; 
0x000000000dd343: mov eax, eax; mov edi, 0x1; mov eax, 0xe6; syscall; 
0x0000000010ddd6: mov eax, eax; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x0000000011f75e: mov eax, eax; mov edi, [rsp+0x8]; mov eax, 0x130; syscall; 
0x00000000114440: mov eax, eax; mov edi, [rsp+0x8]; mov eax, 0x13; syscall; 
0x000000001144e0: mov eax, eax; mov edi, [rsp+0x8]; mov eax, 0x14; syscall; 
0x0000000010e0d2: mov eax, eax; mov edi, [rsp+0x8]; mov eax, 0x1; syscall; 
0x000000001201fe: mov eax, eax; mov edi, [rsp+0x8]; mov eax, 0x2a; syscall; 
0x00000000120640: mov eax, eax; mov edi, [rsp+0x8]; mov eax, 0x2e; syscall; 
0x000000001204e0: mov eax, eax; mov edi, [rsp+0x8]; mov eax, 0x2f; syscall; 
0x0000000010e55a: mov eax, eax; mov edi, [rsp+0x8]; mov eax, 0x48; syscall; 
0x0000000010e032: mov eax, eax; mov edi, [rsp+0x8]; xor eax, eax; syscall; 
0x00000000120132: mov eax, eax; mov edi, [rsp+0xc]; mov eax, 0x2b; syscall; 
0x0000000011f53d: mov eax, eax; mov esi, [rsp+0x18]; mov edi, [rsp+0x8]; mov eax, 0x114; syscall; 
0x0000000011330e: mov eax, eax; mov esi, [rsp+0xc]; mov edi, [rsp+0x8]; mov eax, 0x11d; syscall; 
0x000000000dd264: mov eax, eax; mov esi, ebp; mov eax, 0xe6; syscall; 
0x0000000015ce87: mov eax, eax; mov qword ptr [rdx], 0x0; ret; 
0x000000000441c3: mov eax, eax; mov r10d, 0x8; mov eax, 0x80; syscall; 
0x00000000153219: mov eax, eax; mov rax, r8; pop rbx; ret; 
0x00000000048281: mov eax, eax; mov rdi, [rsp+0x8]; mov eax, 0x13e; syscall; 
0x00000000118a41: mov eax, eax; mov rdi, [rsp+0x8]; mov eax, 0x1a; syscall; 
0x000000001129c1: mov eax, eax; mov rdi, [rsp+0x8]; mov eax, 0x7; syscall; 
0x0000000010df61: mov eax, eax; mov rsi, [rsp+0x10]; mov edi, [rsp+0x18]; mov eax, 0x101; syscall; 
0x00000000120cac: mov eax, eax; mov rsi, [rsp+0x10]; mov edi, [rsp+0xc]; mov eax, 0x133; syscall; 
0x0000000011f48c: mov eax, eax; mov rsi, [rsp+0x10]; mov edi, [rsp+0xc]; mov eax, 0xe8; syscall; 
0x000000000e2c9d: mov eax, eax; mov rsi, [rsp+0x8]; mov edi, [rsp+0x10]; mov eax, 0x3d; syscall; 
0x0000000011325e: mov eax, eax; mov rsi, [rsp+0x8]; mov edi, [rsp+0x18]; mov eax, 0x115; syscall; 
0x00000000120b4e: mov eax, eax; mov rsi, [rsp+0x8]; mov edi, [rsp+0x18]; mov eax, 0x120; syscall; 
0x00000000120f1e: mov eax, eax; mov rsi, [rsp+0x8]; mov edi, [rsp+0x18]; mov eax, 0x45; syscall; 
0x0000000011f5ed: mov eax, eax; mov rsi, [rsp+0x8]; mov edi, [rsp]; mov eax, 0x116; syscall; 
0x0000000010c1ce: mov eax, eax; mov rsi, [rsp+0x8]; mov edi, [rsp]; mov eax, 0x11; syscall; 
0x0000000010c27e: mov eax, eax; mov rsi, [rsp+0x8]; mov edi, [rsp]; mov eax, 0x12; syscall; 
0x0000000002458f: mov eax, eax; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000047d19: mov eax, eax; movups [rdi], xmm0; ret; 
0x000000001138db: mov eax, eax; movups [rsp+0x11], xmm0; syscall; 
0x000000000dfb56: mov eax, eax; pop r12; pop r13; pop r14; ret; 
0x0000000009a4cb: mov eax, eax; pop r12; pop r13; ret; 
0x0000000008b679: mov eax, eax; pop r12; ret; 
0x0000000009a537: mov eax, eax; pop r13; ret; 
0x0000000013b761: mov eax, eax; pop rbp; pop r12; pop r13; ret; 
0x0000000002f736: mov eax, eax; pop rbp; pop r12; ret; 
0x000000000995d4: mov eax, eax; pop rbp; ret; 
0x0000000009cfaf: mov eax, eax; pop rbx; pop r12; ret; 
0x00000000046d61: mov eax, eax; pop rbx; pop rbp; pop r12; ret; 
0x00000000046cbc: mov eax, eax; pop rbx; pop rbp; ret; 
0x00000000043920: mov eax, eax; pop rbx; ret; 
0x00000000033dd2: mov eax, eax; ret; 
0x0000000018d2d4: mov eax, eax; shr rax, 0x2; vzeroupper; ret; 
0x00000000147710: mov eax, eax; sub rax, r12; mov [rbx+0x18], rax; mov rax, [rbp+0x8]; call qword ptr [rax+0x28]; 
0x000000000e3172: mov eax, eax; syscall; 
0x00000000188931: mov eax, eax; vzeroupper; ret; 
0x000000001529fb: mov eax, ebp; mov rcx, r12; mov rdx, rbp; mov rsi, rbx; call rax; 
0x00000000144967: mov eax, ebp; mov rcx, r14; mov rdi, r13; call r12; 
0x0000000009eff6: mov eax, ebp; mov rdx, r12; pop r12; pop r13; ret; 
0x000000001416f1: mov eax, ebp; pop r12; pop r13; pop r14; ret; 
0x0000000009fa19: mov eax, ebp; pop r12; pop r13; ret; 
0x000000000bcc31: mov eax, ebp; pop rbp; pop r12; pop r13; ret; 
0x0000000008f53e: mov eax, ebp; pop rbx; pop rbp; pop r12; ret; 
0x00000000055be3: mov eax, ebx; adc rax, rdx; pop rbp; pop rbx; ret; 
0x0000000008d96f: mov eax, ebx; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000094699: mov eax, ebx; and eax, 0xc; cmp eax, 0x4; je short 0x00000000000946a4; ret; 
0x0000000011cc7b: mov eax, ebx; mov rax, r8; pop rbx; ret; 
0x0000000010cc85: mov eax, ebx; mov rdx, [rbx+0xb0]; mov rsi, [rbx+0xa0]; mov rdi, [rbx+0x80]; call qword ptr [rax+0x88]; 
0x00000000131d46: mov eax, ebx; mov rdx, rbp; call qword ptr [rsp+0x60]; 
0x000000000a2c6a: mov eax, ebx; pop rbx; cmovne rax, rdi; ret; 
0x0000000008d8b4: mov eax, ebx; pop rbx; pop rbp; pop r12; ret; 
0x00000000089e2e: mov eax, ebx; pop rbx; pop rbp; ret; 
0x00000000113943: mov eax, ebx; pop rbx; ret; 
0x00000000041274: mov eax, ebx; ret; 
0x00000000099fa7: mov eax, ebx; syscall; 
0x000000000627d7: mov eax, ebx; test r8d, r8d; jne short 0x00000000000627e0; pop rbx; ret; 
0x00000000055aab: mov eax, ecx; adc eax, eax; ret; 
0x00000000043263: mov eax, ecx; add rsp, 0x148; ret; 
0x00000000113ac0: mov eax, ecx; add rsp, 0x38; ret; 
0x000000000bc21f: mov eax, ecx; and eax, 0x7ff80000; div esi; mov eax, eax; ret; 
0x00000000087f51: mov eax, ecx; lea rdx, [r8+rdx*4]; mov [rax], rdx; xor eax, eax; ret; 
0x0000000011f147: mov eax, ecx; mov r10, [rsp+0x8]; mov eax, 0x38; syscall; 
0x00000000118764: mov eax, ecx; mov r9, [rsp+0x8]; syscall; 
0x00000000038cd6: mov eax, ecx; pop r12; ret; 
0x0000000007a1a8: mov eax, ecx; pop r14; ret; 
0x00000000038ca8: mov eax, ecx; pop rbx; pop rbp; pop r12; ret; 
0x000000000c6b7b: mov eax, ecx; pop rbx; ret; 
0x000000000bc183: mov eax, ecx; pop rbx; shr eax, 0x6; and eax, 0x3fffc00; ret; 
0x000000000bc138: mov eax, ecx; pop rbx; shr eax, 0xe; and eax, 0x3fc00; ret; 
0x00000000086438: mov eax, ecx; ret; 
0x00000000052976: mov eax, ecx; shl eax, 0x1e; or eax, edx; ret; 
0x0000000004830b: mov eax, ecx; sub rsi, rdi; syscall; 
0x00000000042fff: mov eax, ecx; syscall; 
0x000000000342e4: mov eax, edi; and eax, 0x7f; ret; 
0x0000000012fb38: mov eax, edi; and eax, 0xffffff; ret; 
0x0000000012faf4: mov eax, edi; bswap eax; ret; 
0x000000000dee96: mov eax, edi; call rax; 
0x00000000047324: mov eax, edi; cdq; xor eax, edx; sub eax, edx; ret; 
0x0000000011c4e4: mov eax, edi; cmp rdi, rax; jne short 0x000000000011c518; mov eax, 0x88; syscall; 
0x00000000047375: mov eax, edi; cqo; idiv rsi; ret; 
0x00000000047335: mov eax, edi; cqo; xor rax, rdx; sub rax, rdx; ret; 
0x00000000116e84: mov eax, edi; mov byte ptr [rsi-0x1], 0x0; mov rax, r8; ret; 
0x00000000132768: mov eax, edi; mov rcx, rbp; mov rdx, r14; mov rsi, r12; call qword ptr [rsp+0x40]; 
0x00000000130281: mov eax, edi; mov rdi, r12; mov edx, [rsp+0x38]; call qword ptr [rsp+0x60]; 
0x0000000012fb52: mov eax, edi; or eax, esi; bswap eax; ret; 
0x0000000005b552: mov eax, edi; ret; 
0x0000000012fb04: mov eax, edi; rol ax, 0x8; ret; 
0x0000000012fa1e: mov eax, edi; sar rax, 0x6; ret; 
0x0000000012fbc8: mov eax, edi; shr eax, 0x18; ret; 
0x000000001782bf: mov eax, edi; sub r8, 0x10; lea rcx, [rdx+0x10]; jne 0x0000000000178810; ret; 
0x000000001784b5: mov eax, edi; sub r8, 0x1; lea rcx, [rdx+0x1]; jne 0x0000000000178810; ret; 
0x000000001784d7: mov eax, edi; sub r8, 0x2; lea rcx, [rdx+0x2]; jne 0x0000000000178810; ret; 
0x000000001784fd: mov eax, edi; sub r8, 0x3; lea rcx, [rdx+0x3]; jne 0x0000000000178810; ret; 
0x00000000178515: mov eax, edi; sub r8, 0x4; lea rcx, [rdx+0x4]; jne 0x0000000000178810; ret; 
0x0000000017853b: mov eax, edi; sub r8, 0x5; lea rcx, [rdx+0x5]; jne 0x0000000000178810; ret; 
0x0000000017855d: mov eax, edi; sub r8, 0x6; lea rcx, [rdx+0x6]; jne 0x0000000000178810; ret; 
0x0000000017857b: mov eax, edi; sub r8, 0x7; lea rcx, [rdx+0x7]; jne 0x0000000000178810; ret; 
0x00000000178257: mov eax, edi; sub r8, 0x8; lea rcx, [rdx+0x8]; jne 0x0000000000178810; ret; 
0x0000000017859d: mov eax, edi; sub r8, 0x9; lea rcx, [rdx+0x9]; jne 0x0000000000178810; ret; 
0x000000001785bd: mov eax, edi; sub r8, 0xa; lea rcx, [rdx+0xa]; jne 0x0000000000178810; ret; 
0x000000001785dd: mov eax, edi; sub r8, 0xb; lea rcx, [rdx+0xb]; jne 0x0000000000178810; ret; 
0x000000001785fd: mov eax, edi; sub r8, 0xc; lea rcx, [rdx+0xc]; jne 0x0000000000178810; ret; 
0x0000000017861f: mov eax, edi; sub r8, 0xd; lea rcx, [rdx+0xd]; jne 0x0000000000178810; ret; 
0x0000000017863f: mov eax, edi; sub r8, 0xe; lea rcx, [rdx+0xe]; jne 0x0000000000178810; ret; 
0x0000000017865f: mov eax, edi; sub r8, 0xf; lea rcx, [rdx+0xf]; jne 0x0000000000178810; ret; 
0x00000000160b91: mov eax, edi; test eax, eax; jne short 0x0000000000160bac; mov eax, 0x27; syscall; 
0x0000000018a801: mov eax, edi; vzeroupper; ret; 
0x000000000bc156: mov eax, edx; and ecx, 0x3fc00; cmp edx, 0xff; cmove rax, rcx; ret; 
0x0000000012946c: mov eax, edx; cmove eax, ecx; ret; 
0x0000000013c45e: mov eax, edx; cmp esi, eax; ja short 0x000000000013c44c; mov eax, 0xffffffff; ret; 
0x0000000010d987: mov eax, edx; cmp r10, rax; jne short 0x000000000010d9b8; mov eax, 0x103; syscall; 
0x0000000010d924: mov eax, edx; cmp rdx, rax; jne short 0x000000000010d958; mov eax, 0x85; syscall; 
0x0000000013c9dc: mov eax, edx; mov edx, 0x7fffffff; add eax, ecx; cmovs eax, edx; ret; 
0x000000000a8b14: mov eax, edx; movsxd rax, [r8+rax*4]; add rax, r8; notrack jmp rax; 
0x0000000019414c: mov eax, edx; movsxd rdx, [rcx+r12*4]; xor r8d, r13d; add rdx, rcx; notrack jmp rdx; 
0x0000000013c963: mov eax, edx; movsxd rdx, ecx; ret; 
0x00000000056b25: mov eax, edx; pop rbx; ret; 
0x00000000044129: mov eax, edx; ret; 
0x00000000024112: mov eax, edx; syscall; 
0x0000000014fdbc: mov eax, esi; mov dword ptr [r8+0x18], 0x1; movups [r8+0x8], xmm0; ret; 
0x00000000043329: mov eax, esi; mov r10d, 0x8; mov rsi, r8; mov eax, 0xe; syscall; 
0x00000000162b15: mov eax, esi; mov rdx, rsi; mov eax, 0xcc; mov esi, 0x80; syscall; 
0x00000000042de5: mov eax, esi; mov rsp, r8; mov rbp, r9; nop; jmp rdx; 
0x000000001506b4: mov eax, esi; movups [r8+0x30], xmm0; ret; 
0x0000000014cf8c: mov eax, esi; movups [r8+0x8], xmm0; ret; 
0x000000001348a2: mov eax, esi; pop rbx; ret; 
0x000000000e3162: mov eax, esi; syscall; 
0x00000000085b25: mov eax, esp; pop r12; pop r13; pop r14; ret; 
0x000000000a03c9: mov eax, esp; pop r12; pop r13; ret; 
0x00000000034b79: mov eax, esp; pop r12; ret; 
0x0000000011a742: mov eax, esp; pop rbp; pop r12; jmp rax; 
0x00000000119ac9: mov eax, esp; pop rbp; pop r12; pop r13; jmp rax; 
0x0000000002ff64: mov eax, esp; pop rbp; pop r12; pop r13; ret; 
0x0000000008e276: mov eax, esp; pop rbp; pop r12; pop r14; ret; 
0x000000000477d3: mov eax, esp; pop rbp; pop r12; ret; 
0x0000000005b965: mov eax, esp; pop rbx; pop r12; ret; 
0x00000000034adb: mov eax, esp; pop rbx; pop rbp; pop r12; ret; 
0x0000000011923f: mov eax, esp; pop rdx; pop r12; ret; 
0x00000000048244: mov eax, fs:[0x18]; test eax, eax; jne short 0x0000000000048260; mov eax, 0x13e; syscall; 
0x000000000e2c57: mov eax, fs:[0x18]; test eax, eax; jne short 0x00000000000e2c78; mov eax, 0x3d; syscall; 
0x000000000e2e64: mov eax, fs:[0x18]; test eax, eax; jne short 0x00000000000e2e80; mov eax, 0x22; syscall; 
0x0000000010c187: mov eax, fs:[0x18]; test eax, eax; jne short 0x000000000010c1a8; mov eax, 0x11; syscall; 
0x0000000010c237: mov eax, fs:[0x18]; test eax, eax; jne short 0x000000000010c258; mov eax, 0x12; syscall; 
0x0000000010ded3: mov eax, fs:[0x18]; test eax, eax; jne short 0x000000000010df40; mov eax, 0x101; syscall; 
0x0000000010dff4: mov eax, fs:[0x18]; test eax, eax; jne short 0x000000000010e010; syscall; 
0x0000000010e094: mov eax, fs:[0x18]; test eax, eax; jne short 0x000000000010e0b0; mov eax, 0x1; syscall; 
0x0000000010e508: mov eax, fs:[0x18]; test eax, eax; jne short 0x000000000010e540; mov eax, 0x48; syscall; 
0x0000000010e834: mov eax, fs:[0x18]; test eax, eax; jne short 0x000000000010e850; mov eax, 0x3; syscall; 
0x0000000010e9b4: mov eax, fs:[0x18]; test eax, eax; jne short 0x000000000010e9d0; mov eax, 0x55; syscall; 
0x00000000112984: mov eax, fs:[0x18]; test eax, eax; jne short 0x00000000001129a0; mov eax, 0x7; syscall; 
0x00000000113007: mov eax, fs:[0x18]; test eax, eax; jne short 0x0000000000113028; mov eax, 0x146; syscall; 
0x00000000113217: mov eax, fs:[0x18]; test eax, eax; jne short 0x0000000000113238; mov eax, 0x115; syscall; 
0x000000001132c7: mov eax, fs:[0x18]; test eax, eax; jne short 0x00000000001132e8; mov eax, 0x11d; syscall; 
0x00000000114404: mov eax, fs:[0x18]; test eax, eax; jne short 0x0000000000114420; mov eax, 0x13; syscall; 
0x000000001144a4: mov eax, fs:[0x18]; test eax, eax; jne short 0x00000000001144c0; mov eax, 0x14; syscall; 
0x00000000114f97: mov eax, fs:[0x18]; test eax, eax; jne short 0x0000000000114fb8; mov eax, 0x17; syscall; 
0x000000001151c4: mov eax, fs:[0x18]; test eax, eax; jne short 0x00000000001151e0; mov eax, 0x4a; syscall; 
0x00000000115284: mov eax, fs:[0x18]; test eax, eax; jne short 0x00000000001152a0; mov eax, 0x4b; syscall; 
0x00000000117c20: mov eax, fs:[0x18]; test eax, eax; jne short 0x0000000000117c38; sub dword ptr [rip+0xd7c1d], 0x1; ret; 
0x00000000118a04: mov eax, fs:[0x18]; test eax, eax; jne short 0x0000000000118a20; mov eax, 0x1a; syscall; 
0x0000000011f447: mov eax, fs:[0x18]; test eax, eax; jne short 0x000000000011f468; mov eax, 0xe8; syscall; 
0x0000000011f4f7: mov eax, fs:[0x18]; test eax, eax; jne short 0x000000000011f518; mov eax, 0x114; syscall; 
0x0000000011f5a7: mov eax, fs:[0x18]; test eax, eax; jne short 0x000000000011f5c8; mov eax, 0x116; syscall; 
0x0000000011f657: mov eax, fs:[0x18]; test eax, eax; jne short 0x000000000011f678; mov eax, 0x113; syscall; 
0x0000000011f724: mov eax, fs:[0x18]; test eax, eax; jne short 0x000000000011f740; mov eax, 0x130; syscall; 
0x000000001200f4: mov eax, fs:[0x18]; test eax, eax; jne short 0x0000000000120110; mov eax, 0x2b; syscall; 
0x000000001201c4: mov eax, fs:[0x18]; test eax, eax; jne short 0x00000000001201e0; mov eax, 0x2a; syscall; 
0x000000001203e7: mov eax, fs:[0x18]; test eax, eax; jne short 0x0000000000120408; mov eax, 0x2d; syscall; 
0x000000001204a4: mov eax, fs:[0x18]; test eax, eax; jne short 0x00000000001204c0; mov eax, 0x2f; syscall; 
0x00000000120604: mov eax, fs:[0x18]; test eax, eax; jne short 0x0000000000120620; mov eax, 0x2e; syscall; 
0x000000001206a7: mov eax, fs:[0x18]; test eax, eax; jne short 0x00000000001206c8; mov eax, 0x2c; syscall; 
0x00000000120b07: mov eax, fs:[0x18]; test eax, eax; jne short 0x0000000000120b28; mov eax, 0x120; syscall; 
0x00000000120bb7: mov eax, fs:[0x18]; test eax, eax; jne short 0x0000000000120bd8; mov eax, 0x12b; syscall; 
0x00000000120c67: mov eax, fs:[0x18]; test eax, eax; jne short 0x0000000000120c88; mov eax, 0x133; syscall; 
0x00000000120ed7: mov eax, fs:[0x18]; test eax, eax; jne short 0x0000000000120ef8; mov eax, 0x45; syscall; 
0x00000000120f87: mov eax, fs:[0x18]; test eax, eax; jne short 0x0000000000120fa8; mov eax, 0x46; syscall; 
0x00000000125338: mov eax, fs:[r12]; pop rbx; pop rbp; pop r12; ret; 
0x0000000010d8d4: mov eax, fs:[rax]; cmp eax, 0x26; je short 0x000000000010d8e0; mov eax, r9d; ret; 
0x00000000048337: mov eax, fs:[rax]; cmp eax, 0x4; je short 0x0000000000048300; mov eax, 0xffffffff; ret; 
0x0000000011f7e5: mov eax, fs:[rdx]; cmp eax, 0x26; je short 0x000000000011f824; mov eax, r8d; ret; 
0x0000000010d986: mov eax, r10d; cmp r10, rax; jne short 0x000000000010d9b8; mov eax, 0x103; syscall; 
0x0000000013f009: mov eax, r10d; ret; 
0x00000000094698: mov eax, r11d; and eax, 0xc; cmp eax, 0x4; je short 0x00000000000946a4; ret; 
0x00000000113942: mov eax, r11d; pop rbx; ret; 
0x00000000085b24: mov eax, r12d; pop r12; pop r13; pop r14; ret; 
0x0000000009d516: mov eax, r12d; pop r12; ret; 
0x000000001257b7: mov eax, r12d; pop rbp; pop r12; pop r13; ret; 
0x0000000014dd0d: mov eax, r12d; pop rbp; pop r12; ret; 
0x0000000005b964: mov eax, r12d; pop rbx; pop r12; ret; 
0x00000000044185: mov eax, r12d; pop rbx; pop rbp; pop r12; ret; 
0x000000000e2fff: mov eax, r13d; pop rbp; pop r12; pop r13; ret; 
0x000000001215b6: mov eax, r14d; syscall; 
0x0000000004304e: mov eax, r8d; add rsp, 0x118; ret; 
0x0000000004304d: mov eax, r8d; add rsp, 0x118; ret; 
0x0000000011736f: mov eax, r8d; add rsp, 0x8; ret; 
0x0000000013c36b: mov eax, r8d; mov byte ptr [rdi+rdx], 0x0; ret; 
0x00000000148257: mov eax, r8d; mov dword ptr [rsi], 0x10; mov qword ptr [rsi+0x8], 0x0; mov [rsi+0x10], rax; ret; 
0x00000000113904: mov eax, r8d; mov ebx, fs:[r10]; syscall; 
0x0000000015ce86: mov eax, r8d; mov qword ptr [rdx], 0x0; ret; 
0x00000000047d18: mov eax, r8d; movups [rdi], xmm0; ret; 
0x000000001138da: mov eax, r8d; movups [rsp+0x11], xmm0; syscall; 
0x000000000dfb55: mov eax, r8d; pop r12; pop r13; pop r14; ret; 
0x0000000008b678: mov eax, r8d; pop r12; ret; 
0x00000000150240: mov eax, r8d; pop rbp; pop r12; pop r13; ret; 
0x0000000002f735: mov eax, r8d; pop rbp; pop r12; ret; 
0x00000000137a30: mov eax, r8d; pop rbp; ret; 
0x00000000046d60: mov eax, r8d; pop rbx; pop rbp; pop r12; ret; 
0x00000000046e9f: mov eax, r8d; pop rbx; pop rbp; ret; 
0x0000000004391f: mov eax, r8d; pop rbx; ret; 
0x00000000033dd1: mov eax, r8d; ret; 
0x000000000e3171: mov eax, r8d; syscall; 
0x00000000043261: mov eax, r9d; add rsp, 0x148; ret; 
0x00000000113abf: mov eax, r9d; add rsp, 0x38; ret; 
0x000000000c6b7a: mov eax, r9d; pop rbx; ret; 
0x00000000086437: mov eax, r9d; ret; 
0x0000000004830a: mov eax, r9d; sub rsi, rdi; syscall; 
0x0000000008cf85: mov eax, r9d; syscall; 
0x00000000127e82: mov ebp, 0x2000001; mov rsi, rbp; mov [rsp+0x10], rax; mov rdx, rax; call qword ptr [r12+0x28]; 
0x00000000184a81: mov ebp, 0x20c083c0; add rax, rdi; vzeroupper; ret; 
0x00000000184a91: mov ebp, 0x40c083c0; add rax, rdi; vzeroupper; ret; 
0x000000000ac681: mov ebp, 0x448d48c0; cmp [rax], ah; ret; 
0x000000000ac691: mov ebp, 0x448d48c0; cmp [rax], dh; ret; 
0x000000000ac671: mov ebp, 0x448d48c0; cmp [rax], dl; ret; 
0x00000000141a5f: mov ebp, 0x48000aef; test eax, eax; je short 0x0000000000141a70; add rsp, 0x8; ret; 
0x00000000160baf: mov ebp, 0x4c000908; mov edi, eax; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000184aa1: mov ebp, 0x60c083c0; add rax, rdi; ret; 
0x00000000134531: mov ebp, 0x6401000b; mov [r8], r9d; add rsp, 0x18; ret; 
0x00000000035073: mov ebp, 0x80; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000001865ff: mov ebp, 0x8b00014e; or al, 0x8a; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x00000000035706: mov ebp, 0x8d49001b; mov ebp, 0x80; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000047260: mov ebp, 0x908; call qword ptr [rbp+0xf10]; 
0x0000000004722d: mov ebp, 0x908; mov rdx, fs:[rax]; mov [rbx+0x18], rdx; mov fs:[rax], rbx; call qword ptr [rbp+0xf08]; 
0x0000000014cf2b: mov ebp, 0xc8; call rax; 
0x00000000120078: mov ebp, 0xd8f7000c; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000120164: mov ebp, 0xd8f7000c; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000ac6a1: mov ebp, 0xea8348c0; add rdx, rax; jl short 0x00000000000ac710; add rax, rdi; ret; 
0x00000000184b6b: mov ebp, 0xf80148c0; add rax, r8; vzeroupper; ret; 
0x000000000ac797: mov ebp, 0xf80148c0; add rax, rsi; ret; 
0x000000000ac5c7: mov ebp, 0xf80148c0; ret; 
0x00000000184990: mov ebp, 0xf80148c0; vzeroupper; ret; 
0x000000000b1bcc: mov ebp, 0xf80148c6; ret; 
0x00000000063d58: mov ebp, 0xfffffa20; mov rdx, r12; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000064104: mov ebp, 0xfffffa20; xor esi, esi; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000007066c: mov ebp, 0xfffffa68; add [rdi], cl; test esp, esi; ret far; 
0x0000000006bef0: mov ebp, 0xfffffb00; mov rdx, r13; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000006c23a: mov ebp, 0xfffffb00; xor esi, esi; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000007e420: mov ebp, 0xfffffb20; fdivp st(7), st; call far fword ptr [rdi]; 
0x000000000e7875: mov ebp, 0xfffffb38; lea rsi, [rbp-0x450]; call qword ptr [r15+0x40]; 
0x00000000076cb0: mov ebp, 0xfffffb90; mov rdx, r12; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000076bc1: mov ebp, 0xfffffb90; xor esi, esi; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000007d3b0: mov ebp, 0xfffffba0; mov rdx, r12; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000007d2ca: mov ebp, 0xfffffba0; xor esi, esi; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000010442d: mov ebp, 0xfffffe50; mov rdx, [r12]; mov rax, [rbp-0x1e0]; call rax; 
0x00000000104618: mov ebp, 0xfffffe50; push rax; mov rax, [rbp-0x1e0]; mov rcx, [r12]; call rax; 
0x00000000110b3a: mov ebp, 0xfffffee8; mov rsi, r9; call qword ptr [rbp-0xf0]; 
0x000000000967dc: mov ebp, [rip+0x1555de]; xor edi, edi; call qword ptr [r13]; 
0x0000000011a898: mov ebp, [rsp+0x10]; test r13, r13; jne short 0x000000000011a8f0; mov rdi, [r12]; call rbx; 
0x0000000011a8c8: mov ebp, [rsp+0x10]; test r13, r13; jne short 0x000000000011a950; mov rdi, [r12]; call rbx; 
0x000000000696d8: mov ebp, ds; sar dl, 0xff; dec dword ptr [rax-0x7d]; ret; 
0x00000000156c54: mov ebp, eax; and eax, 0xffffffff; mov [rsp], rax; mov rax, [rbp+0x8]; call qword ptr [rax+0x8]; 
0x000000001492cc: mov ebp, eax; bswap edx; mov [rcx], edx; mov edx, eax; call qword ptr [rbx+0x10]; 
0x00000000044839: mov ebp, eax; mov rdi, r12; call rbx; 
0x0000000009e7f6: mov ebp, eax; test r13, r13; jne 0x000000000009e691; mov rax, [rip+0x14d748]; call qword ptr [rax]; 
0x0000000014d1a6: mov ebp, ebp; call qword ptr [rax+0x18]; 
0x0000000011a023: mov ebp, ebx; mov rdi, rbp; call r12; 
0x0000000007d0d6: mov ebp, ebx; sar r13, 0x2; mov rdx, r13; call qword ptr [rax+0x38]; 
0x00000000042deb: mov ebp, ecx; nop; jmp rdx; 
0x00000000045915: mov ebp, edi; add r15, r12; call rax; 
0x0000000013b3d0: mov ebp, edi; jmp qword ptr [rsi+0x66]; 
0x000000001570c1: mov ebp, edi; jmp qword ptr [rsi+0x66]; 
0x0000000010eb16: mov ebp, edi; mov rdi, rbp; mov eax, 0x4f; syscall; 
0x00000000031faa: mov ebp, edi; test rax, rax; je short 0x0000000000031fb3; call rax; 
0x00000000097897: mov ebp, edi; test rdi, rdi; js 0x0000000000097a1c; mov rax, [rip+0x154517]; call qword ptr [rax]; 
0x00000000149d0c: mov ebp, edx; call qword ptr [rbx+0x10]; 
0x00000000082a97: mov ebp, edx; mov rdi, [rdi+0xe0]; call rax; 
0x00000000052b5a: mov ebx, 0x2ee80019; ret far; 
0x00000000052b09: mov ebx, 0x39480019; ret; 
0x0000000012fbc2: mov ebx, 0x401f0f; mov eax, edi; shr eax, 0x18; ret; 
0x0000000012fb31: mov ebx, 0x441f0f; add [rcx-0xda08], cl; inc dword ptr [rax]; ret; 
0x000000000fce1a: mov ebx, 0x45fffffe; movzx edi, bh; movsxd rax, [r10+r15*4]; add rax, r10; notrack jmp rax; 
0x0000000016d4d7: mov ebx, 0x46f00ff2; ret far; 
0x0000000016d4d1: mov ebx, 0x477f0ff3; mov ebx, 0x46f00ff2; ret far; 
0x000000000a09e1: mov ebx, 0x48000c53; lea edx, [rip+0xca944]; cmovne rax, rdx; ret; 
0x000000000942a1: mov ebx, 0x480015d0; ror eax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000024156: mov ebx, 0x480; add rdx, 0x988; cmp r15, rdx; je short 0x0000000000024177; call rax; 
0x00000000152061: mov ebx, 0x48fff920; lea esi, [rsp+0x10]; mov edi, eax; call rbp; 
0x000000000a33e4: mov ebx, 0x4bb; add [rax+0x29], cl; ret; 
0x00000000165e71: mov ebx, 0x4c000864; lea ebx, [rip+0x57a84]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x00000000168003: mov ebx, 0x4e6f0ff3; ret far; 
0x00000000168022: mov ebx, 0x4f7f0ff3; ret far; 
0x0000000016341e: mov ebx, 0x634f0004; or al, 0x8a; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000010cc97: mov ebx, 0x80; call qword ptr [rax+0x88]; 
0x00000000038de4: mov ebx, 0x850f5f3c; test byte ptr [rax], 0x0; add [rax-0x7d], cl; ret; 
0x00000000035900: mov ebx, 0x8d48001b; cmp eax, 0x1b8076; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000052ae3: mov ebx, 0xa5e80019; ret far; 
0x00000000094638: mov ebx, 0xafb8341; je short 0x0000000000094640; ret; 
0x000000001540b0: mov ebx, 0xbc0f48eb; ret; 
0x0000000014ae0f: mov ebx, 0xc0850000; setne al; add rsp, 0x8; movzx eax, al; ret; 
0x00000000120278: mov ebx, 0xd8f7000c; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000120307: mov ebx, 0xd8f7000c; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000113908: mov ebx, [r10]; syscall; 
0x0000000004126b: mov ebx, [rax+rax*4+0x8]; add r11, [rdi+0x20]; mov rax, r11; ret; 
0x0000000006c19a: mov ebx, [rbp-0x5c8]; add rax, rcx; notrack jmp rax; 
0x000000000e3699: mov ebx, [rbp-0x8]; leave; ret; 
0x0000000004c981: mov ebx, [rdx-0x7cb80000]; ret; 
0x00000000113909: mov ebx, [rdx]; syscall; 
0x00000000167811: mov ebx, [rsi-0x10]; mov rdx, [rsi-0x8]; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x000000001521a8: mov ebx, eax; pop rax; mov rax, [rbp+0x8]; pop rdx; call qword ptr [rax+0x20]; 
0x000000000de8c9: mov ebx, ebp; mov rdi, rbp; call r12; 
0x0000000011ef51: mov ebx, edi; mov rdi, rcx; sub rsp, 0x8; call rsi; 
0x000000000874dd: mov ebx, edi; test byte ptr [rdi], 0x2; jne short 0x0000000000087558; mov rax, [rax+0xe0]; call qword ptr [rax+0x68]; 
0x00000000119725: mov ebx, esi; je short 0x0000000000119730; pop rbx; ret; 
0x0000000012f96f: mov ebx, esi; xor edi, edi; lea rsi, [rsp-0x18]; mov eax, 0x83; syscall; 
0x00000000113907: mov ebx, fs:[r10]; syscall; 
0x00000000042ffa: mov ecx, 0x27; mov eax, ecx; syscall; 
0x00000000090884: mov ecx, 0x3; mov edx, 0x1; mov rdi, rbx; call qword ptr [r12+0x48]; 
0x0000000005b4fb: mov ecx, 0x3a8; mov rsp, rdx; ret; 
0x000000000d8341: mov ecx, 0x3eca014c; jmp rdx; 
0x00000000134948: mov ecx, 0x400; mov rdx, r15; mov rsi, r14; mov rdi, rbx; call rax; 
0x00000000030773: mov ecx, 0x48001c0c; lea edi, [rip+0x1bd202]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000439e3: mov ecx, 0x66000ec0; nop [rax+rax]; endbr64; mov eax, 0x83; syscall; 
0x000000001383f9: mov ecx, 0x89480000; ret; 
0x00000000146c17: mov ecx, 0x8948ffed; ret; 
0x00000000146c16: mov ecx, 0x8948ffed; ret; 
0x0000000011f264: mov ecx, 0x8; mov eax, 0x119; syscall; 
0x000000000a05d6: mov ecx, 0x8d480001; add eax, 0x1b940; cmovne rax, rdx; ret; 
0x00000000118958: mov ecx, 0x9; xor edi, edi; or r10d, 0x40; mov eax, ecx; syscall; 
0x00000000152253: mov ecx, 0xbeffff8d; or [rax], al; add [rax], al; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x00000000120474: mov ecx, 0xd8f7000c; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x000000001203b3: mov ecx, 0xf7000cba; fsub st, dword ptr [rcx+rcx*4+0x2]; mov rax, 0xffffffffffffffff; ret; 
0x00000000113db3: mov ecx, 0xf7000d80; fsub st, dword ptr [rcx+rcx*4+0x2]; mov eax, 0xffffffff; ret; 
0x0000000010c2b3: mov ecx, 0xf7000dfb; fsub st, dword ptr [rcx+rcx*4+0x2]; mov rax, 0xffffffffffffffff; ret; 
0x000000000e2eb3: mov ecx, 0xf700108f; fsub st, dword ptr [rcx+rcx*4+0x2]; mov eax, 0xffffffff; ret; 
0x000000000482b3: mov ecx, 0xf7001a3b; fsub st, dword ptr [rcx+rcx*4+0x2]; mov rax, 0xffffffffffffffff; ret; 
0x0000000014718c: mov ecx, 0xfe890ee8; jmp qword ptr [rsi+0x66]; 
0x000000000c6b75: mov ecx, 0xffffffff; mov eax, r9d; pop rbx; ret; 
0x0000000010285a: mov ecx, 0xffffffff; mov fs:[rdx], eax; mov eax, r9d; ret; 
0x00000000086e86: mov ecx, [rax+0x10]; mov [rax], rdx; mov [rax+0x10], rdx; mov [rax+0x40], rcx; ret; 
0x00000000163348: mov ecx, [rax]; add [rdi+rax*8], ah; add [rax], al; add [rax-0x1], bh; ret; 
0x00000000121cc6: mov ecx, [rax]; mov [rdx+0x10], rcx; mov [r8], rax; mov qword ptr [rip+0xca686], 0x0; ret; 
0x00000000121c46: mov ecx, [rax]; mov [rdx+0x10], rcx; mov [r8], rax; mov qword ptr [rip+0xca706], 0x0; ret; 
0x00000000160b31: mov ecx, [rax]; or [rax], eax; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000016b3ce: mov ecx, [rbp+0x1]; fnstcw [rsi]; jmp r9; 
0x0000000007f3a1: mov ecx, [rbp-0x508]; jmp rax; 
0x0000000007e505: mov ecx, [rbp-0x508]; movsxd rax, [rax+rcx*4]; add rax, rdx; jmp rax; 
0x0000000012d0f8: mov ecx, [rbp-0x8]; xor rcx, fs:[0x28]; jne 0x000000000012d1dd; leave; ret; 
0x0000000012312c: mov ecx, [rcx+rsi]; test ecx, ecx; jne short 0x0000000000123138; ret; 
0x00000000123195: mov ecx, [rcx+rsi]; test ecx, ecx; jne short 0x00000000001231a0; ret; 
0x00000000123a7c: mov ecx, [rcx+rsi]; test ecx, ecx; jne short 0x0000000000123a88; ret; 
0x00000000123ad9: mov ecx, [rcx+rsi]; test ecx, ecx; jne short 0x0000000000123ae8; ret; 
0x0000000018fa63: mov ecx, [rcx-0x2]; mov [rdi], si; mov [r9-0x2], cx; ret; 
0x0000000018fa50: mov ecx, [rcx-0x4]; mov [rdi], esi; mov [r9-0x4], ecx; ret; 
0x0000000018fa4f: mov ecx, [rcx-0x4]; mov [rdi], esi; mov [r9-0x4], ecx; ret; 
0x0000000018fa3e: mov ecx, [rcx-0x8]; mov [rdi], rsi; mov [r9-0x8], rcx; ret; 
0x00000000121295: mov ecx, [rdi+0x8]; xor eax, eax; cmp byte ptr [rcx], 0x0; je short 0x00000000001212a0; ret; 
0x000000000bcb6b: mov ecx, [rdi+r8*4]; test ecx, ecx; jne short 0x00000000000bcb48; mov rax, r8; ret; 
0x000000000bcb6c: mov ecx, [rdi+rax*4]; test ecx, ecx; jne short 0x00000000000bcb48; mov rax, r8; ret; 
0x0000000018c226: mov ecx, [rdi+rdx+0x20]; cmp ecx, [rsi+rdx+0x20]; jne short 0x000000000018c209; vzeroupper; ret; 
0x0000000018c246: mov ecx, [rdi+rdx+0x40]; cmp ecx, [rsi+rdx+0x40]; jne short 0x000000000018c209; vzeroupper; ret; 
0x0000000018c266: mov ecx, [rdi+rdx+0x60]; cmp ecx, [rsi+rdx+0x60]; jne short 0x000000000018c209; vzeroupper; ret; 
0x0000000018c58c: mov ecx, [rdi+rdx]; cmp ecx, [rsi+rdx]; jne 0x000000000018c209; vzeroupper; ret; 
0x0000000018ca84: mov ecx, [rdi+rdx]; cmp ecx, [rsi+rdx]; jne 0x000000000018c679; vzeroupper; ret; 
0x0000000018c6a3: mov ecx, [rdi+rdx]; cmp ecx, [rsi+rdx]; jne short 0x000000000018c679; vzeroupper; ret; 
0x00000000165e1e: mov ecx, [rdi-0x73]; or al, 0xb; notrack jmp r9; 
0x0000000018ca62: mov ecx, [rdi]; cmp ecx, [rsi]; jne 0x000000000018c679; vzeroupper; ret; 
0x00000000055092: mov ecx, [rdx+0x30]; mov rdx, [rdx+0x88]; xor eax, eax; ret; 
0x000000000aee13: mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x000000000e44d5: mov ecx, [rip+0x107995]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000e44a5: mov ecx, [rip+0x1079c5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000e4475: mov ecx, [rip+0x1079f5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000e4445: mov ecx, [rip+0x107a25]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000e43e5: mov ecx, [rip+0x107a85]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000e43b5: mov ecx, [rip+0x107ab5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000e4165: mov ecx, [rip+0x107d05]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000e31b5: mov ecx, [rip+0x108cb5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000e2dd5: mov ecx, [rip+0x109095]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000e2b85: mov ecx, [rip+0x1092e5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000d4225: mov ecx, [rip+0x117c45]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000d41f5: mov ecx, [rip+0x117c75]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000555a9: mov ecx, [rip+0x1968c1]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000550a0: mov ecx, [rip+0x196dca]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000054f3d: mov ecx, [rip+0x196f2d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000043a05: mov ecx, [rip+0x1a8465]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000043415: mov ecx, [rip+0x1a8a55]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000113294: mov ecx, [rip+0x64d8f700]; mov [rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000016884f: mov ecx, [rip+0x83adb]; lea r11, [rip+0x55264]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x000000001687f5: mov ecx, [rip+0x83b35]; lea r11, [rip+0x5527e]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x00000000165e6f: mov ecx, [rip+0x864bb]; lea r11, [rip+0x57a84]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x00000000165e0e: mov ecx, [rip+0x8651c]; lea r11, [rip+0x57aa5]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x00000000120818: mov ecx, [rip+0xcb652]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001207e5: mov ecx, [rip+0xcb685]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001207b5: mov ecx, [rip+0xcb6b5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000120788: mov ecx, [rip+0xcb6e2]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000120305: mov ecx, [rip+0xcbb65]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001202d8: mov ecx, [rip+0xcbb92]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001202a5: mov ecx, [rip+0xcbbc5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000120275: mov ecx, [rip+0xcbbf5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001201a5: mov ecx, [rip+0xcbcc5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001200b5: mov ecx, [rip+0xcbdb5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000120075: mov ecx, [rip+0xcbdf5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000120045: mov ecx, [rip+0xcbe25]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000120015: mov ecx, [rip+0xcbe55]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011ffe8: mov ecx, [rip+0xcbe82]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011ffb8: mov ecx, [rip+0xcbeb2]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011ff85: mov ecx, [rip+0xcbee5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011ff58: mov ecx, [rip+0xcbf12]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011ff25: mov ecx, [rip+0xcbf45]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fef5: mov ecx, [rip+0xcbf75]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fec8: mov ecx, [rip+0xcbfa2]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fe95: mov ecx, [rip+0xcbfd5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fe65: mov ecx, [rip+0xcc005]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fe35: mov ecx, [rip+0xcc035]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fe05: mov ecx, [rip+0xcc065]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fdd8: mov ecx, [rip+0xcc092]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fda8: mov ecx, [rip+0xcc0c2]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fd78: mov ecx, [rip+0xcc0f2]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fd45: mov ecx, [rip+0xcc125]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fd15: mov ecx, [rip+0xcc155]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fce8: mov ecx, [rip+0xcc182]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fcb8: mov ecx, [rip+0xcc1b2]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fc85: mov ecx, [rip+0xcc1e5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fc55: mov ecx, [rip+0xcc215]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fc25: mov ecx, [rip+0xcc245]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fbf5: mov ecx, [rip+0xcc275]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fbc5: mov ecx, [rip+0xcc2a5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fb98: mov ecx, [rip+0xcc2d2]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fb65: mov ecx, [rip+0xcc305]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fb38: mov ecx, [rip+0xcc332]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fb05: mov ecx, [rip+0xcc365]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fad5: mov ecx, [rip+0xcc395]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011faa5: mov ecx, [rip+0xcc3c5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fa75: mov ecx, [rip+0xcc3f5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fa45: mov ecx, [rip+0xcc425]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fa15: mov ecx, [rip+0xcc455]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011f9e5: mov ecx, [rip+0xcc485]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011f9b8: mov ecx, [rip+0xcc4b2]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011f975: mov ecx, [rip+0xcc4f5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011f945: mov ecx, [rip+0xcc525]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011f425: mov ecx, [rip+0xcca45]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011f3f8: mov ecx, [rip+0xcca72]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011f365: mov ecx, [rip+0xccb05]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011f235: mov ecx, [rip+0xccc35]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011f205: mov ecx, [rip+0xccc65]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011f1a5: mov ecx, [rip+0xcccc5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011f16e: mov ecx, [rip+0xcccfc]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011f055: mov ecx, [rip+0xcce15]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011f025: mov ecx, [rip+0xcce45]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011cfe8: mov ecx, [rip+0xcee82]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011cfb5: mov ecx, [rip+0xceeb5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011cf88: mov ecx, [rip+0xceee2]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011cf55: mov ecx, [rip+0xcef15]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011cf25: mov ecx, [rip+0xcef45]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011cef8: mov ecx, [rip+0xcef72]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011cec5: mov ecx, [rip+0xcefa5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011ce98: mov ecx, [rip+0xcefd2]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011ce68: mov ecx, [rip+0xcf002]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011ce35: mov ecx, [rip+0xcf035]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011ce05: mov ecx, [rip+0xcf065]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011cdd8: mov ecx, [rip+0xcf092]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000118bd5: mov ecx, [rip+0xd3295]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000118ba5: mov ecx, [rip+0xd32c5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000118b75: mov ecx, [rip+0xd32f5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000118b45: mov ecx, [rip+0xd3325]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000118b18: mov ecx, [rip+0xd3352]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000118ae5: mov ecx, [rip+0xd3385]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000118ab5: mov ecx, [rip+0xd33b5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001189e5: mov ecx, [rip+0xd3485]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001189b5: mov ecx, [rip+0xd34b5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000118777: mov ecx, [rip+0xd36f3]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001156c5: mov ecx, [rip+0xd67a5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000115695: mov ecx, [rip+0xd67d5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000115665: mov ecx, [rip+0xd6805]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000115325: mov ecx, [rip+0xd6b45]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000115265: mov ecx, [rip+0xd6c05]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001151a5: mov ecx, [rip+0xd6cc5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000115175: mov ecx, [rip+0xd6cf5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000114f75: mov ecx, [rip+0xd6ef5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000114e25: mov ecx, [rip+0xd7045]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001143e5: mov ecx, [rip+0xd7a85]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000114225: mov ecx, [rip+0xd7c45]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000113e25: mov ecx, [rip+0xd8045]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000112fe8: mov ecx, [rip+0xd8e82]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010fd75: mov ecx, [rip+0xdc0f5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010fd45: mov ecx, [rip+0xdc125]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010fd15: mov ecx, [rip+0xdc155]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010fce8: mov ecx, [rip+0xdc182]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010fcb5: mov ecx, [rip+0xdc1b5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010fc85: mov ecx, [rip+0xdc1e5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010fc55: mov ecx, [rip+0xdc215]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010fc28: mov ecx, [rip+0xdc242]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010fbf5: mov ecx, [rip+0xdc275]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010f438: mov ecx, [rip+0xdca32]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010f405: mov ecx, [rip+0xdca65]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010f3d5: mov ecx, [rip+0xdca95]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010f3a5: mov ecx, [rip+0xdcac5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010ea85: mov ecx, [rip+0xdd3e5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010ea55: mov ecx, [rip+0xdd415]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010e995: mov ecx, [rip+0xdd4d5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010e965: mov ecx, [rip+0xdd505]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010e935: mov ecx, [rip+0xdd535]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010e905: mov ecx, [rip+0xdd565]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010e8d5: mov ecx, [rip+0xdd595]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010e5b5: mov ecx, [rip+0xdd8b5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010dcc5: mov ecx, [rip+0xde1a5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010dc95: mov ecx, [rip+0xde1d5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010dbd5: mov ecx, [rip+0xde295]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010dba5: mov ecx, [rip+0xde2c5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010da75: mov ecx, [rip+0xde3f5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010da45: mov ecx, [rip+0xde425]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010d415: mov ecx, [rip+0xdea55]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001027e5: mov ecx, [rip+0xe9685]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001027b5: mov ecx, [rip+0xe96b5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000102785: mov ecx, [rip+0xe96e5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000102755: mov ecx, [rip+0xe9715]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000102725: mov ecx, [rip+0xe9745]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001026f5: mov ecx, [rip+0xe9775]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001026c5: mov ecx, [rip+0xe97a5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000102695: mov ecx, [rip+0xe97d5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000b8645: mov ecx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], cx; lea rax, [rdi+0x11]; ret; 
0x000000000b94b5: mov ecx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], cx; lea rax, [rdi+0x12]; ret; 
0x000000000b6f95: mov ecx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], cx; ret; 
0x000000000b8684: mov ecx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], ecx; lea rax, [rdi+0x13]; ret; 
0x000000000b94f4: mov ecx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], ecx; lea rax, [rdi+0x14]; ret; 
0x000000000b6fd4: mov ecx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], ecx; mov [rdi+0x14], dh; ret; 
0x000000000b6fc4: mov ecx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], ecx; ret; 
0x000000000b8705: mov ecx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], rcx; lea rax, [rdi+0x17]; ret; 
0x000000000b9575: mov ecx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], rcx; lea rax, [rdi+0x18]; ret; 
0x000000000b7055: mov ecx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], rcx; mov [rdi+0x18], dh; ret; 
0x000000000b7035: mov ecx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], rcx; ret; 
0x000000000b7098: mov ecx, [rsi+0x17]; movdqu [rdi], xmm0; mov [rdi+0x10], rdx; mov [rdi+0x17], ecx; ret; 
0x000000000b7079: mov ecx, [rsi+0x18]; movdqu [rdi], xmm0; mov [rdi+0x10], rdx; mov [rdi+0x18], cx; ret; 
0x000000000b70b8: mov ecx, [rsi+0x18]; movdqu [rdi], xmm0; mov [rdi+0x10], rdx; mov [rdi+0x18], ecx; ret; 
0x000000000cef38: mov ecx, [rsi+0xc]; cmp [rdi+0xc], ecx; jne 0x00000000000cf0b0; xor eax, eax; ret; 
0x000000000b86c5: mov ecx, [rsi+0xe]; movdqu [rdi], xmm0; mov [rdi+0xe], rcx; lea rax, [rdi+0x15]; ret; 
0x000000000b9535: mov ecx, [rsi+0xe]; movdqu [rdi], xmm0; mov [rdi+0xe], rcx; lea rax, [rdi+0x16]; ret; 
0x000000000b6ff5: mov ecx, [rsi+0xe]; movdqu [rdi], xmm0; mov [rdi+0xe], rcx; ret; 
0x000000000b8664: mov ecx, [rsi+0xf]; movdqu [rdi], xmm0; mov [rdi+0xf], ecx; lea rax, [rdi+0x12]; ret; 
0x000000000b94d4: mov ecx, [rsi+0xf]; movdqu [rdi], xmm0; mov [rdi+0xf], ecx; lea rax, [rdi+0x13]; ret; 
0x000000000b6fb4: mov ecx, [rsi+0xf]; movdqu [rdi], xmm0; mov [rdi+0xf], ecx; ret; 
0x000000000b86e5: mov ecx, [rsi+0xf]; movdqu [rdi], xmm0; mov [rdi+0xf], rcx; lea rax, [rdi+0x16]; ret; 
0x000000000b9555: mov ecx, [rsi+0xf]; movdqu [rdi], xmm0; mov [rdi+0xf], rcx; lea rax, [rdi+0x17]; ret; 
0x000000000b7015: mov ecx, [rsi+0xf]; movdqu [rdi], xmm0; mov [rdi+0xf], rcx; ret; 
0x0000000018c3c5: mov ecx, [rsi+rdi+0x20]; cmp ecx, [rdx+rdi+0x20]; jne 0x000000000018c209; vzeroupper; ret; 
0x0000000018c3f5: mov ecx, [rsi+rdi+0x40]; cmp ecx, [rdx+rdi+0x40]; jne 0x000000000018c209; vzeroupper; ret; 
0x0000000018c85c: mov ecx, [rsi+rdi]; cmp ecx, [rdx+rdi]; jne 0x000000000018c679; vzeroupper; ret; 
0x0000000018ab44: mov ecx, [rsi+rdx-0x3]; mov [rdi+rdx-0x3], ecx; lea rax, [rdi+rdx]; vzeroupper; ret; 
0x000000001890a4: mov ecx, [rsi+rdx-0x3]; mov [rdi+rdx-0x3], ecx; vzeroupper; ret; 
0x000000000bbc43: mov ecx, [rsi+rdx-0x4]; mov esi, [rsi]; mov [rdi+rdx-0x4], ecx; mov [rdi], esi; ret; 
0x000000001890b4: mov ecx, [rsi+rdx-0x7]; mov [rdi], rcx; mov [rdi+rdx-0x7], r9; vzeroupper; ret; 
0x000000000bbc33: mov ecx, [rsi+rdx-0x8]; mov rsi, [rsi]; mov [rdi+rdx-0x8], rcx; mov [rdi], rsi; ret; 
0x00000000167dc5: mov ecx, [rsi-0x2]; mov [rdi-0x3], dx; mov [rdi-0x2], cx; ret; 
0x000000001922af: mov ecx, [rsi-0x4]; cmp eax, ecx; jne 0x00000000001924c0; xor eax, eax; ret; 
0x0000000018f681: mov ecx, [rsi-0x4]; cmp ecx, [rdi-0x4]; jne 0x000000000018f8b6; xor eax, eax; ret; 
0x0000000018e2b6: mov ecx, [rsi-0x4]; cmp ecx, eax; jne 0x000000000018ea6f; xor eax, eax; ret; 
0x000000001681a3: mov ecx, [rsi-0x4]; mov [rdi-0x5], edx; mov [rdi-0x4], ecx; ret; 
0x000000001683a3: mov ecx, [rsi-0x4]; mov [rdi-0x6], edx; mov [rdi-0x4], ecx; ret; 
0x000000001685a3: mov ecx, [rsi-0x4]; mov [rdi-0x7], edx; mov [rdi-0x4], ecx; ret; 
0x0000000016d314: mov ecx, [rsi-0x4]; mov [rdi-0x9], rdx; mov [rdi-0x4], ecx; ret; 
0x0000000016d294: mov ecx, [rsi-0x4]; mov [rdi-0xa], rdx; mov [rdi-0x4], ecx; ret; 
0x0000000016d214: mov ecx, [rsi-0x4]; mov [rdi-0xb], rdx; mov [rdi-0x4], ecx; ret; 
0x0000000016d194: mov ecx, [rsi-0x4]; mov [rdi-0xc], rdx; mov [rdi-0x4], ecx; ret; 
0x0000000018e02b: mov ecx, [rsi-0x8]; cmp rcx, rax; jne 0x000000000018ea63; xor eax, eax; ret; 
0x0000000018f65b: mov ecx, [rsi-0x8]; cmp rcx, rax; jne 0x000000000018f8a3; xor eax, eax; ret; 
0x0000000018ea37: mov ecx, [rsi-0x8]; cmp rcx, rax; jne short 0x000000000018ea63; xor eax, eax; ret; 
0x0000000018f877: mov ecx, [rsi-0x8]; cmp rcx, rax; jne short 0x000000000018f8a3; xor eax, eax; ret; 
0x0000000016d105: mov ecx, [rsi-0x8]; mov [rdi-0xd], rdx; mov [rdi-0x8], rcx; ret; 
0x0000000016d075: mov ecx, [rsi-0x8]; mov [rdi-0xe], rdx; mov [rdi-0x8], rcx; ret; 
0x0000000016cfe5: mov ecx, [rsi-0x8]; mov [rdi-0xf], rdx; mov [rdi-0x8], rcx; ret; 
0x000000001679f1: mov ecx, [rsi-0x9]; mov edx, [rsi-0x4]; mov [rdi-0x9], rcx; mov [rdi-0x4], edx; ret; 
0x00000000167bd1: mov ecx, [rsi-0xa]; mov edx, [rsi-0x4]; mov [rdi-0xa], rcx; mov [rdi-0x4], edx; ret; 
0x00000000167db1: mov ecx, [rsi-0xb]; mov edx, [rsi-0x4]; mov [rdi-0xb], rcx; mov [rdi-0x4], edx; ret; 
0x00000000167f91: mov ecx, [rsi-0xc]; mov edx, [rsi-0x4]; mov [rdi-0xc], rcx; mov [rdi-0x4], edx; ret; 
0x00000000168181: mov ecx, [rsi-0xd]; mov rdx, [rsi-0x8]; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000168381: mov ecx, [rsi-0xe]; mov rdx, [rsi-0x8]; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000168581: mov ecx, [rsi-0xf]; mov rdx, [rsi-0x8]; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000009f83d: mov ecx, [rsi]; add [rax-0x73], cl; add eax, 0x12099; cmove rax, rdx; ret; 
0x0000000016dd25: mov ecx, [rsi]; mov [rdi+0x1], dx; mov [rdi], cx; ret; 
0x0000000016dc43: mov ecx, [rsi]; mov [rdi+0x1], edx; mov [rdi], ecx; ret; 
0x0000000016da85: mov ecx, [rsi]; mov [rdi+0x1], rdx; mov [rdi], rcx; ret; 
0x0000000016dbd3: mov ecx, [rsi]; mov [rdi+0x2], edx; mov [rdi], ecx; ret; 
0x0000000016da15: mov ecx, [rsi]; mov [rdi+0x2], rdx; mov [rdi], rcx; ret; 
0x0000000016db63: mov ecx, [rsi]; mov [rdi+0x3], edx; mov [rdi], ecx; ret; 
0x0000000016d9a5: mov ecx, [rsi]; mov [rdi+0x3], rdx; mov [rdi], rcx; ret; 
0x000000000b8500: mov ecx, [rsi]; mov [rdi+0x4], dh; mov [rdi], ecx; lea rax, [rdi+0x4]; ret; 
0x000000000b6ec0: mov ecx, [rsi]; mov [rdi+0x4], dh; mov [rdi], ecx; ret; 
0x0000000016d935: mov ecx, [rsi]; mov [rdi+0x4], rdx; mov [rdi], rcx; ret; 
0x0000000016d8c5: mov ecx, [rsi]; mov [rdi+0x5], rdx; mov [rdi], rcx; ret; 
0x0000000016d855: mov ecx, [rsi]; mov [rdi+0x6], rdx; mov [rdi], rcx; ret; 
0x0000000016d7e5: mov ecx, [rsi]; mov [rdi+0x7], rdx; mov [rdi], rcx; ret; 
0x000000000b8551: mov ecx, [rsi]; mov [rdi+0x8], dh; mov [rdi], rcx; lea rax, [rdi+0x8]; ret; 
0x000000000b6f01: mov ecx, [rsi]; mov [rdi+0x8], dh; mov [rdi], rcx; ret; 
0x000000000b84e1: mov ecx, [rsi]; mov [rdi], cx; mov [rdi+0x2], dh; lea rax, [rdi+0x2]; ret; 
0x000000000b6ea1: mov ecx, [rsi]; mov [rdi], cx; mov [rdi+0x2], dh; ret; 
0x000000000b7b91: mov ecx, [rsi]; mov dl, [rsi+0x2]; mov [rdi], cx; mov [rdi+0x2], dl; ret; 
0x000000000b7bb0: mov ecx, [rsi]; mov dl, [rsi+0x4]; mov [rdi], ecx; mov [rdi+0x4], dl; ret; 
0x000000000b7bf1: mov ecx, [rsi]; mov dl, [rsi+0x8]; mov [rdi], rcx; mov [rdi+0x8], dl; ret; 
0x000000000b6ed0: mov ecx, [rsi]; mov dx, [rsi+0x4]; mov [rdi], ecx; mov [rdi+0x4], dx; ret; 
0x000000000b6f11: mov ecx, [rsi]; mov dx, [rsi+0x8]; mov [rdi], rcx; mov [rdi+0x8], dx; ret; 
0x000000000b6ee0: mov ecx, [rsi]; mov edx, [rsi+0x3]; mov [rdi], ecx; mov [rdi+0x3], edx; ret; 
0x000000000b6f21: mov ecx, [rsi]; mov edx, [rsi+0x7]; mov [rdi], rcx; mov [rdi+0x7], edx; ret; 
0x000000000b6f31: mov ecx, [rsi]; mov edx, [rsi+0x8]; mov [rdi], rcx; mov [rdi+0x8], edx; ret; 
0x000000000b6f41: mov ecx, [rsi]; mov rdx, [rsi+0x5]; mov [rdi], rcx; mov [rdi+0x5], rdx; ret; 
0x000000000b6f51: mov ecx, [rsi]; mov rdx, [rsi+0x6]; mov [rdi], rcx; mov [rdi+0x6], rdx; ret; 
0x000000000b6f61: mov ecx, [rsi]; mov rdx, [rsi+0x7]; mov [rdi], rcx; mov [rdi+0x7], rdx; ret; 
0x000000000435e4: mov ecx, [rsp+0x108]; xor rcx, fs:[0x28]; jne short 0x0000000000043605; add rsp, 0x118; ret; 
0x00000000043667: mov ecx, [rsp+0x108]; xor rcx, fs:[0x28]; jne short 0x0000000000043688; add rsp, 0x118; ret; 
0x000000000cafbd: mov ecx, [rsp+0x10]; call r14; 
0x0000000016082d: mov ecx, [rsp+0x10]; mov rdi, [rsp+0x18]; call rcx; 
0x000000000bd8eb: mov ecx, [rsp+0x10]; mov rdi, r12; mov rsi, [rsp+0x18]; call rbx; 
0x000000001509e0: mov ecx, [rsp+0x10]; mov rdi, r15; call rcx; 
0x00000000137d61: mov ecx, [rsp+0x10]; mov rdx, r14; mov rdi, r15; mov rsi, [rsp+0x8]; call rbp; 
0x00000000042f0f: mov ecx, [rsp+0x138]; xor rcx, fs:[0x28]; jne short 0x0000000000042f29; add rsp, 0x148; ret; 
0x00000000043d12: mov ecx, [rsp+0x138]; xor rcx, fs:[0x28]; jne short 0x0000000000043d2c; add rsp, 0x148; ret; 
0x0000000002cc2a: mov ecx, [rsp+0x18]; mov rcx, [rsp+0x28]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x48]; call r13; 
0x000000000bde6b: mov ecx, [rsp+0x18]; mov rdi, r12; mov rsi, [rsp+0x10]; call rbx; 
0x0000000002f17c: mov ecx, [rsp+0x18]; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; call r15; 
0x0000000002a342: mov ecx, [rsp+0x18]; mov rsi, [rsp+0x48]; mov rdi, [rsp+0x40]; call r14; 
0x00000000027699: mov ecx, [rsp+0x18]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; call r14; 
0x00000000029330: mov ecx, [rsp+0x18]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; call rbx; 
0x0000000002c64e: mov ecx, [rsp+0x18]; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; call rbx; 
0x00000000027dfe: mov ecx, [rsp+0x18]; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x60]; call rbx; 
0x00000000047466: mov ecx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x000000000004747a; add rsp, 0x28; ret; 
0x00000000047556: mov ecx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x000000000004756a; add rsp, 0x28; ret; 
0x00000000052c28: mov ecx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x0000000000052c3f; add rsp, 0xd8; ret; 
0x00000000061c9b: mov ecx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x0000000000061cb2; add rsp, 0xd8; ret; 
0x00000000061d70: mov ecx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x0000000000061d87; add rsp, 0xd8; ret; 
0x00000000061e27: mov ecx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x0000000000061e3e; add rsp, 0xd8; ret; 
0x00000000061fbb: mov ecx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x0000000000061fd2; add rsp, 0xd8; ret; 
0x0000000006207b: mov ecx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x0000000000062092; add rsp, 0xd8; ret; 
0x00000000062169: mov ecx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x0000000000062180; add rsp, 0xd8; ret; 
0x00000000062240: mov ecx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x0000000000062257; add rsp, 0xd8; ret; 
0x00000000063193: mov ecx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x00000000000631aa; add rsp, 0xd8; ret; 
0x0000000006326e: mov ecx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x0000000000063285; add rsp, 0xd8; ret; 
0x000000000864eb: mov ecx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x0000000000086502; add rsp, 0xd8; ret; 
0x000000000865a7: mov ecx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x00000000000865be; add rsp, 0xd8; ret; 
0x000000000866a0: mov ecx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x00000000000866b7; add rsp, 0xd8; ret; 
0x00000000086770: mov ecx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x0000000000086787; add rsp, 0xd8; ret; 
0x00000000086829: mov ecx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x0000000000086840; add rsp, 0xd8; ret; 
0x000000000cabb3: mov ecx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x00000000000cabca; add rsp, 0xd8; ret; 
0x000000000cac8e: mov ecx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x00000000000caca5; add rsp, 0xd8; ret; 
0x00000000113535: mov ecx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x000000000011358b; add rsp, 0x58; ret; 
0x000000001135d3: mov ecx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x000000000011362b; add rsp, 0x58; ret; 
0x00000000121126: mov ecx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x000000000012117b; add rsp, 0x58; ret; 
0x0000000012de7c: mov ecx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x000000000012de98; add rsp, 0xd8; ret; 
0x0000000012e154: mov ecx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x000000000012e16b; add rsp, 0xd8; ret; 
0x0000000012f174: mov ecx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x000000000012f18b; add rsp, 0xd8; ret; 
0x0000000012f6e4: mov ecx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x000000000012f6fb; add rsp, 0xd8; ret; 
0x0000000012f7c4: mov ecx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x000000000012f7db; add rsp, 0xd8; ret; 
0x0000000012f8a4: mov ecx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x000000000012f8bb; add rsp, 0xd8; ret; 
0x000000001366fc: mov ecx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x0000000000136710; add rsp, 0x28; ret; 
0x0000000013e1f4: mov ecx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x000000000013e208; add rsp, 0x28; ret; 
0x000000000caa13: mov ecx, [rsp+0x20]; mov rdi, rbp; mov rsi, [rsp+0x18]; call rbx; 
0x00000000146d9f: mov ecx, [rsp+0x20]; mov rdx, [rsp+0x18]; mov rsi, [rsp+0x10]; call qword ptr [rax]; 
0x000000000df026: mov ecx, [rsp+0x20]; mov rdx, [rsp+0x28]; mov rax, [rsp+0x18]; call rax; 
0x0000000002974f: mov ecx, [rsp+0x20]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x48]; call r13; 
0x000000000284b3: mov ecx, [rsp+0x20]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; call rbx; 
0x0000000002823d: mov ecx, [rsp+0x20]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; mov rax, [rsp+0x30]; call rax; 
0x0000000002ddb3: mov ecx, [rsp+0x20]; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; call rbx; 
0x0000000014d1ef: mov ecx, [rsp+0x28]; mov rdi, r12; call rcx; 
0x0000000002cc2f: mov ecx, [rsp+0x28]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x48]; call r13; 
0x0000000010e4e9: mov ecx, [rsp+0x28]; xor rcx, fs:[0x28]; jne 0x000000000010e595; add rsp, 0x68; ret; 
0x0000000005b898: mov ecx, [rsp+0x28]; xor rcx, fs:[0x28]; jne short 0x000000000005b8c5; add rsp, 0x38; ret; 
0x000000000df432: mov ecx, [rsp+0x28]; xor rcx, fs:[0x28]; jne short 0x00000000000df493; add rsp, 0x38; ret; 
0x000000000e41b2: mov ecx, [rsp+0x28]; xor rcx, fs:[0x28]; jne short 0x00000000000e4213; add rsp, 0x38; ret; 
0x000000000e4252: mov ecx, [rsp+0x28]; xor rcx, fs:[0x28]; jne short 0x00000000000e42b3; add rsp, 0x38; ret; 
0x000000000e4522: mov ecx, [rsp+0x28]; xor rcx, fs:[0x28]; jne short 0x00000000000e4593; add rsp, 0x38; ret; 
0x000000000e45d2: mov ecx, [rsp+0x28]; xor rcx, fs:[0x28]; jne short 0x00000000000e4643; add rsp, 0x38; ret; 
0x000000001133ee: mov ecx, [rsp+0x28]; xor rcx, fs:[0x28]; jne short 0x0000000000113443; add rsp, 0x68; ret; 
0x000000001149b2: mov ecx, [rsp+0x28]; xor rcx, fs:[0x28]; jne short 0x0000000000114a1b; add rsp, 0x38; ret; 
0x00000000114a52: mov ecx, [rsp+0x28]; xor rcx, fs:[0x28]; jne short 0x0000000000114abb; add rsp, 0x38; ret; 
0x00000000114b07: mov ecx, [rsp+0x28]; xor rcx, fs:[0x28]; jne short 0x0000000000114b8b; add rsp, 0x38; ret; 
0x00000000114bd7: mov ecx, [rsp+0x28]; xor rcx, fs:[0x28]; jne short 0x0000000000114c5b; add rsp, 0x38; ret; 
0x00000000115967: mov ecx, [rsp+0x28]; xor rcx, fs:[0x28]; jne short 0x00000000001159ad; add rsp, 0x68; ret; 
0x00000000116b8b: mov ecx, [rsp+0x28]; xor rcx, fs:[0x28]; jne short 0x0000000000116bd5; add rsp, 0x38; ret; 
0x00000000116c5a: mov ecx, [rsp+0x28]; xor rcx, fs:[0x28]; jne short 0x0000000000116ca5; add rsp, 0x38; ret; 
0x0000000013668f: mov ecx, [rsp+0x28]; xor rcx, fs:[0x28]; jne short 0x00000000001366a3; add rsp, 0x38; ret; 
0x0000000015fc80: mov ecx, [rsp+0x28]; xor rcx, fs:[0x28]; jne short 0x000000000015fccc; add rsp, 0x38; ret; 
0x0000000002a33d: mov ecx, [rsp+0x30]; mov rcx, [rsp+0x18]; mov rsi, [rsp+0x48]; mov rdi, [rsp+0x40]; call r14; 
0x0000000002b8c4: mov ecx, [rsp+0x30]; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; call r15; 
0x0000000002b2d0: mov ecx, [rsp+0x30]; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; mov rax, [rsp+0x20]; call rax; 
0x0000000002a890: mov ecx, [rsp+0x30]; mov rsi, [rsp+0x48]; mov rdi, [rsp+0x40]; call rbx; 
0x000000000290bb: mov ecx, [rsp+0x30]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; mov rax, [rsp+0x20]; call rax; 
0x0000000002d961: mov ecx, [rsp+0x30]; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; mov rax, [rsp+0x18]; call rax; 
0x0000000002c264: mov ecx, [rsp+0x30]; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; mov rax, [rsp+0x20]; call rax; 
0x00000000130cc0: mov ecx, [rsp+0x38]; mov esi, r14d; mov rdi, r13; call qword ptr [rsp+0x50]; 
0x0000000010def3: mov ecx, [rsp+0x38]; xor rcx, fs:[0x28]; jne 0x000000000010dfb9; add rsp, 0x78; ret; 
0x00000000115817: mov ecx, [rsp+0x48]; xor rcx, fs:[0x28]; jne short 0x0000000000115837; add rsp, 0x58; ret; 
0x0000000015f927: mov ecx, [rsp+0x48]; xor rcx, fs:[0x28]; jne short 0x000000000015f96e; add rsp, 0x58; ret; 
0x00000000144ed7: mov ecx, [rsp+0x50]; mov rdx, [rsp+0xe0]; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; call qword ptr [rsp+0x68]; 
0x0000000011f0dc: mov ecx, [rsp+0x58]; xor rcx, fs:[0x28]; jne short 0x000000000011f103; add rsp, 0x68; ret; 
0x0000000015fa1e: mov ecx, [rsp+0x58]; xor rcx, fs:[0x28]; jne short 0x000000000015fa74; add rsp, 0x68; ret; 
0x0000000015fbb7: mov ecx, [rsp+0x58]; xor rcx, fs:[0x28]; jne short 0x000000000015fc14; add rsp, 0x68; ret; 
0x000000001538f8: mov ecx, [rsp+0x68]; xor rcx, fs:[0x28]; jne short 0x000000000015390c; add rsp, 0x78; ret; 
0x00000000043348: mov ecx, [rsp+0x88]; xor rcx, fs:[0x28]; jne 0x00000000000433f6; add rsp, 0x98; ret; 
0x00000000122942: mov ecx, [rsp+0x8]; mov rax, [rsp]; add rsp, 0x38; ret; 
0x000000001229a3: mov ecx, [rsp+0x8]; mov rax, [rsp]; add rsp, 0x40; ret; 
0x00000000146963: mov ecx, [rsp+0x8]; mov rdi, rbp; call rcx; 
0x000000000ded79: mov ecx, [rsp+0x8]; mov rdx, [rsp+0x68]; mov rdi, r15; mov rsi, [rsp+0x60]; call r12; 
0x00000000118767: mov ecx, [rsp+0x8]; syscall; 
0x0000000009d622: mov ecx, [rsp+0x8]; xor rcx, fs:[0x28]; jne 0x000000000009d6e2; add rsp, 0x18; ret; 
0x00000000047e7f: mov ecx, [rsp+0x8]; xor rcx, fs:[0x28]; jne short 0x0000000000047e93; add rsp, 0x18; ret; 
0x00000000047ecc: mov ecx, [rsp+0x8]; xor rcx, fs:[0x28]; jne short 0x0000000000047ee0; add rsp, 0x18; ret; 
0x00000000047f1f: mov ecx, [rsp+0x8]; xor rcx, fs:[0x28]; jne short 0x0000000000047f33; add rsp, 0x18; ret; 
0x00000000047f6c: mov ecx, [rsp+0x8]; xor rcx, fs:[0x28]; jne short 0x0000000000047f80; add rsp, 0x18; ret; 
0x0000000010d463: mov ecx, [rsp+0x8]; xor rcx, fs:[0x28]; jne short 0x000000000010d477; add rsp, 0x18; ret; 
0x0000000011347d: mov ecx, [rsp+0x8]; xor rcx, fs:[0x28]; jne short 0x00000000001134d3; add rsp, 0x18; ret; 
0x00000000113b20: mov ecx, [rsp+0x8]; xor rcx, fs:[0x28]; jne short 0x0000000000113b3b; add rsp, 0x18; ret; 
0x000000001196dc: mov ecx, [rsp+0x8]; xor rcx, fs:[0x28]; jne short 0x00000000001196f0; add rsp, 0x18; ret; 
0x00000000120ae1: mov ecx, [rsp+0x8]; xor rcx, fs:[0x28]; jne short 0x0000000000120af5; add rsp, 0x18; ret; 
0x0000000013c715: mov ecx, [rsp+0x8]; xor rcx, fs:[0x28]; jne short 0x000000000013c730; add rsp, 0x18; ret; 
0x0000000013e1a1: mov ecx, [rsp+0x8]; xor rcx, fs:[0x28]; jne short 0x000000000013e1b5; add rsp, 0x18; ret; 
0x00000000044442: mov ecx, [rsp+0x98]; xor rcx, fs:[0x28]; jne short 0x000000000004445c; add rsp, 0xa8; ret; 
0x00000000104626: mov ecx, [rsp]; call rax; 
0x00000000147efd: mov ecx, [rsp]; mov rsi, r15; mov rdi, rbx; xor eax, eax; call rcx; 
0x00000000147e0b: mov ecx, [rsp]; xor eax, eax; mov rdi, rbx; call rcx; 
0x00000000123390: mov ecx, eax; and ecx, [rsi+0x10]; lea rcx, [rsi+rcx*4]; add eax, [rcx+rdx]; ret; 
0x000000000bc76b: mov ecx, eax; mov eax, [rcx+rax*4]; sub eax, [rcx+r8*4]; je short 0x00000000000bc758; ret; 
0x00000000114596: mov ecx, eax; mov edx, [rsp+0x14]; mov rsi, [rsp+0x8]; mov eax, 0x127; syscall; 
0x00000000114656: mov ecx, eax; mov edx, [rsp+0x14]; mov rsi, [rsp+0x8]; mov eax, 0x128; syscall; 
0x000000001146ee: mov ecx, eax; mov r10, rcx; xor r8d, r8d; mov eax, 0x147; syscall; 
0x0000000011484e: mov ecx, eax; mov r10, rcx; xor r8d, r8d; mov eax, 0x148; syscall; 
0x000000000e2d56: mov ecx, eax; mov r10d, [rsp+0x1c]; mov rdx, [rsp+0x10]; mov eax, 0xf7; syscall; 
0x00000000112ab5: mov ecx, eax; mov rdi, [rsp+0x8]; mov rdx, r12; mov eax, 0x10f; syscall; 
0x000000000f98d6: mov ecx, eax; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000000a897f: mov ecx, eax; movsxd rcx, [r9+rcx*4]; add rcx, r9; notrack jmp rcx; 
0x000000000a8659: mov ecx, eax; xor eax, eax; mov [rdx], rcx; ret; 
0x00000000144d65: mov ecx, ebp; call r10; 
0x000000001381b1: mov ecx, ebp; mov edx, 0x400; mov rsi, r15; mov rdi, r12; call rbp; 
0x0000000008481a: mov ecx, ebp; mov edx, r12d; mov rsi, rbp; mov rdi, rbx; call qword ptr [r14+0x48]; 
0x00000000151a81: mov ecx, ebp; mov esi, 0x9; call qword ptr [rax]; 
0x0000000013027e: mov ecx, ebp; mov r8, r15; mov rdi, r12; mov edx, [rsp+0x38]; call qword ptr [rsp+0x60]; 
0x00000000149eee: mov ecx, ebp; mov rdx, r12; mov rsi, rbp; mov rdi, rbx; call rax; 
0x0000000013276b: mov ecx, ebp; mov rdx, r14; mov rsi, r12; call qword ptr [rsp+0x40]; 
0x000000000e2324: mov ecx, ebp; mov rdx, r14; mov rsi, r12; mov edi, r13d; call qword ptr [rsp+0x30]; 
0x000000000e1f34: mov ecx, ebp; mov rdx, r14; mov rsi, r12; mov rdi, r13; call qword ptr [rsp+0x30]; 
0x00000000104def: mov ecx, ebx; add r8, r15; call r13; 
0x0000000013122f: mov ecx, ebx; mov rcx, r12; mov rsi, rbp; mov rdi, r13; call qword ptr [rsp+0x40]; 
0x0000000008dff7: mov ecx, ebx; sub rcx, rdx; cmp rax, rcx; jbe short 0x000000000008e020; call qword ptr [rbx+0x60]; 
0x000000001468a4: mov ecx, ebx; xor eax, eax; pop rbx; pop rbp; jmp rcx; 
0x0000000007e208: mov ecx, ecx; mov dword ptr [rbp-0x510], 0x1; jmp rax; 
0x0000000007f1dd: mov ecx, ecx; mov dword ptr [rbp-0x510], 0x1; movsxd rax, [rsi+rax*4]; add rax, rdx; jmp rax; 
0x00000000131d3f: mov ecx, edi; mov edi, [rsp+0x38]; mov r8, rbx; mov rdx, rbp; call qword ptr [rsp+0x60]; 
0x00000000130cbd: mov ecx, edi; mov rcx, [rsp+0x38]; mov esi, r14d; mov rdi, r13; call qword ptr [rsp+0x50]; 
0x00000000122a1d: mov ecx, edi; shr eax, cl; and eax, 0x1; ret; 
0x00000000155db5: mov ecx, edx; cmp rdx, rcx; jne short 0x0000000000155d73; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x000000000bbc16: mov ecx, edx; rep movsb [rdi], [rsi]; ret; 
0x0000000005ede2: mov ecx, esi; call qword ptr [rax+r8*8]; 
0x0000000007e5e9: mov ecx, esi; jmp rax; 
0x0000000007d41d: mov ecx, esi; mov dword ptr [rbp-0x4f0], 0x0; jmp rax; 
0x0000000007da11: mov ecx, esi; mov dword ptr [rbp-0x4f0], 0x1; jmp rax; 
0x0000000007e3b1: mov ecx, esi; mov dword ptr [rbp-0x4f8], 0x20; jmp rax; 
0x0000000007e1cc: mov ecx, esi; mov dword ptr [rbp-0x500], 0x1; movsxd rax, [rcx+rax*4]; add rax, rdx; jmp rax; 
0x0000000007e35c: mov ecx, esi; mov dword ptr [rbp-0x51c], 0x1; movsxd rax, [rcx+rax*4]; add rax, rdx; jmp rax; 
0x0000000007df42: mov ecx, esi; mov dword ptr [rbp-0x528], 0x1; movsxd rax, [rcx+rax*4]; add rax, rdx; jmp rax; 
0x0000000007e2c1: mov ecx, esi; mov dword ptr [rbp-0x530], 0x0; jmp rax; 
0x0000000007e2fc: mov ecx, esi; mov dword ptr [rbp-0x530], 0x1; movsxd rax, [rax+rcx*4]; add rax, rdx; jmp rax; 
0x0000000007e544: mov ecx, esi; mov dword ptr [rbp-0x538], 0x1; movsxd rax, [rcx+rax*4]; add rax, rdx; jmp rax; 
0x0000000014496a: mov ecx, esi; mov rdi, r13; call r12; 
0x0000000008a82f: mov ecx, esi; mov rdi, r15; call r12; 
0x00000000134149: mov ecx, esi; mov rdx, rbp; mov rsi, r13; mov edi, r12d; call qword ptr [rsp+0x40]; 
0x00000000133b79: mov ecx, esi; mov rdx, rbp; mov rsi, r13; mov rdi, r12; call qword ptr [rsp+0x40]; 
0x000000000ca88e: mov ecx, esi; mov rsi, [rsp+0x18]; mov rcx, r12; mov rdx, r13; call rbx; 
0x00000000024c73: mov ecx, esi; mov rsi, [rsp+0x18]; xor r8d, r8d; call rbx; 
0x0000000007dfa6: mov ecx, esi; movsxd rax, [rcx+rax*4]; add rax, rdx; jmp rax; 
0x0000000014cf74: mov ecx, esi; movsxd rax, [rdi+rcx*4]; add rax, rdi; notrack jmp rax; 
0x0000000014dad9: mov ecx, esi; xor eax, eax; mov rsi, rdx; add rdi, 0x10; jmp rcx; 
0x000000000ca896: mov ecx, esp; mov rdx, r13; call rbx; 
0x000000000e007e: mov ecx, esp; mov rdx, r13; mov rsi, rbp; mov edi, r14d; call qword ptr [rsp+0x48]; 
0x000000000e051e: mov ecx, esp; mov rdx, r13; mov rsi, rbp; mov rdi, r14; call qword ptr [rsp+0x48]; 
0x000000001529fe: mov ecx, esp; mov rdx, rbp; mov rsi, rbx; call rax; 
0x00000000131232: mov ecx, esp; mov rsi, rbp; mov rdi, r13; call qword ptr [rsp+0x40]; 
0x00000000084ac6: mov ecx, esp; xor edx, edx; mov rsi, rbp; mov rdi, rbx; call qword ptr [r13+0x48]; 
0x00000000084ac5: mov ecx, r12d; xor edx, edx; mov rsi, rbp; mov rdi, rbx; call qword ptr [r13+0x48]; 
0x00000000084819: mov ecx, r13d; mov edx, r12d; mov rsi, rbp; mov rdi, rbx; call qword ptr [r14+0x48]; 
0x000000000e2f63: mov edi, 0x1200011; mov eax, 0x38; syscall; 
0x000000000dd2ae: mov edi, 0x1; mov eax, 0xe6; syscall; 
0x00000000033e82: mov edi, 0x1; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000127c0b: mov edi, 0x2000001; and eax, ecx; mov [rsp+0x20], cl; mov [rsp+0x1f], al; call qword ptr [r12+0x28]; 
0x00000000128f44: mov edi, 0x2000003; mov rdx, rax; call qword ptr [rbx+0x28]; 
0x00000000127d22: mov edi, 0x2000004; call rax; 
0x0000000012a05e: mov edi, 0x2000005; mov rdx, rax; call qword ptr [r13+0x28]; 
0x00000000128881: mov edi, 0x2000006; mov rdx, rax; call qword ptr [rbx+0x28]; 
0x0000000004302f: mov edi, 0x2; mov eax, 0xe; syscall; 
0x0000000008cf80: mov edi, 0x2; mov eax, r9d; syscall; 
0x00000000054f5e: mov edi, 0x2; mov r10d, 0x8; mov eax, 0xe; syscall; 
0x00000000054eb9: mov edi, 0x3001; mov eax, 0x9e; syscall; 
0x0000000005b4c1: mov edi, 0x3004; mov eax, 0x9e; syscall; 
0x0000000012feb8: mov edi, 0x4864000b; add eax, [0x0]; ret; 
0x000000000ba101: mov edi, 0x49000f53; movsxd ecx, [rbx+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000008f18d: mov edi, 0x4c000000; mov edx, ebp; mov rsi, r15; mov rdi, rbp; call qword ptr [rax+0x40]; 
0x000000001571e1: mov edi, 0x748d4806; and al, 0x4; mov [rsp+0x4], eax; mov rax, [rdi+0x8]; call qword ptr [rax+0x48]; 
0x000000000e64e5: mov edi, 0x8041fff3; jl short 0x00000000000e64f0; jmp far fword ptr [rdi]; 
0x000000000e4add: mov edi, 0x89000cbc; test byte ptr [rax+0x63], 0x4; mov dl, 0x48; add eax, edx; notrack jmp rax; 
0x0000000015f3ac: mov edi, 0x908; call qword ptr [r15+0xf08]; 
0x0000000015f534: mov edi, 0x908; call qword ptr [r15+0xf10]; 
0x0000000011fe98: mov edi, 0xd8f7000c; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000082a9b: mov edi, 0xe0; call rax; 
0x00000000082a5f: mov edi, 0xe0; jmp rax; 
0x00000000082ae8: mov edi, 0xe0; lea rsi, [rsp+0x8]; call rax; 
0x00000000156202: mov edi, 0xe6894806; mov [rsp], rax; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x00000000098fc3: mov edi, 0xe80011c5; ret; 
0x0000000010d07c: mov edi, 0xf8; movups [rsi+0x70], xmm7; ret; 
0x0000000010d110: mov edi, 0xf8; ret; 
0x0000000015cd9b: mov edi, 0xfd2cffe8; jmp qword ptr [rsi+0x2e]; 
0x0000000015cd0b: mov edi, 0xfd2d8fe8; jmp qword ptr [rsi+0x2e]; 
0x00000000149664: mov edi, 0xfe6436e8; jmp qword ptr [rsi+0xf]; 
0x0000000011534b: mov edi, 0xfee1dead; mov eax, 0xa9; syscall; 
0x00000000136479: mov edi, 0xff9621e8; call qword ptr [rax-0x5e1f00d]; 
0x0000000015a4d4: mov edi, 0xffff0885; inc dword ptr [rcx]; add [rax], al; add [rax-0x7d], cl; ret; 
0x0000000010dd5f: mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x00000000116b76: mov edi, 0xffffff9c; mov eax, 0x118; syscall; 
0x00000000114af2: mov edi, 0xffffffff; mov eax, 0x75; syscall; 
0x00000000114bc2: mov edi, 0xffffffff; mov eax, 0x77; syscall; 
0x00000000144ae1: mov edi, [r13]; call qword ptr [rsp+0x20]; 
0x00000000145062: mov edi, [r15]; call qword ptr [rsp+0x70]; 
0x0000000011ae03: mov edi, [rax]; call rbx; 
0x0000000014d3b5: mov edi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x10]; 
0x0000000014d2f5: mov edi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x18]; 
0x000000001516c7: mov edi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x20]; 
0x0000000014d1d6: mov edi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x8]; 
0x000000001509c4: mov edi, [rax]; mov rsi, r15; mov rax, [rdi+0x38]; call qword ptr [rax+0x8]; 
0x000000001971ec: mov edi, [rbp+0x10]; add rdi, rbp; call r12; 
0x00000000119ba7: mov edi, [rbp+0x10]; test rdi, rdi; jne short 0x0000000000119bd6; mov rdi, [rbp]; call rbx; 
0x00000000110391: mov edi, [rbp+0x18]; mov rsi, [rsp+0x28]; lea rcx, [rbp+0x28]; mov edx, 0x1; call qword ptr [rbp+0x40]; 
0x000000001106f1: mov edi, [rbp+0x18]; mov rsi, [rsp+0x28]; lea rcx, [rbp+0x28]; mov edx, 0x2; call qword ptr [rbp+0x40]; 
0x00000000110671: mov edi, [rbp+0x18]; mov rsi, [rsp+0x28]; lea rcx, [rbp+0x28]; mov edx, 0x5; call qword ptr [rbp+0x40]; 
0x000000000472ea: mov edi, [rbp+0x8]; call rax; 
0x00000000110b39: mov edi, [rbp-0x118]; mov rsi, r9; call qword ptr [rbp-0xf0]; 
0x0000000010442c: mov edi, [rbp-0x1b0]; mov rdx, [r12]; mov rax, [rbp-0x1e0]; call rax; 
0x00000000104617: mov edi, [rbp-0x1b0]; push rax; mov rax, [rbp-0x1e0]; mov rcx, [r12]; call rax; 
0x000000000e7874: mov edi, [rbp-0x4c8]; lea rsi, [rbp-0x450]; call qword ptr [r15+0x40]; 
0x0000000013a879: mov edi, [rbp-0x60]; syscall; 
0x000000001496ba: mov edi, [rbp]; add r12, rbx; sub edx, ebx; mov rsi, r12; call qword ptr [rbp+0x40]; 
0x00000000144ae2: mov edi, [rbp]; call qword ptr [rsp+0x20]; 
0x00000000119bb0: mov edi, [rbp]; call rbx; 
0x00000000152492: mov edi, [rbp]; mov rax, [rdi+0x8]; call qword ptr [rax+0x20]; 
0x00000000146cd5: mov edi, [rbp]; test rdi, rdi; je short 0x0000000000146cec; mov rax, [rdi+0x8]; call qword ptr [rax+0x20]; 
0x00000000146e87: mov edi, [rbp]; test rdi, rdi; je short 0x0000000000146e96; mov rax, [rdi+0x8]; call qword ptr [rax+0x20]; 
0x0000000010ff7b: mov edi, [rbx+0x18]; lea rcx, [rbx+0x28]; mov rsi, r14; mov edx, [rdx+rax]; call qword ptr [rbx+0x40]; 
0x0000000009e8c1: mov edi, [rbx+0x48]; call rax; 
0x0000000009e822: mov edi, [rbx+0x48]; mov rsi, r14; call rax; 
0x00000000137b7d: mov edi, [rbx+0x48]; test rdi, rdi; jne short 0x0000000000137b70; pop rbx; ret; 
0x0000000010cc96: mov edi, [rbx+0x80]; call qword ptr [rax+0x88]; 
0x00000000149b32: mov edi, [rbx]; add rbp, rax; sub edx, eax; mov rsi, rbp; call qword ptr [rbx+0x40]; 
0x00000000151765: mov edi, [rbx]; lea rdx, [rsp+0x18]; mov esi, 0x6; mov rax, [rdi+0x8]; call qword ptr [rax+0x28]; 
0x0000000013a690: mov edi, [rbx]; mov eax, 0x3; syscall; 
0x000000001516d1: mov edi, [rbx]; mov rax, [rdi+0x8]; call qword ptr [rax+0x20]; 
0x0000000014dd25: mov edi, [rdi+0x40]; mov eax, [rdi]; test eax, eax; jne short 0x000000000014dd30; ret; 
0x00000000154425: mov edi, [rdi+0x40]; mov eax, [rdi]; test eax, eax; jne short 0x0000000000154430; ret; 
0x0000000009e67d: mov edi, [rdi+0x48]; mov rsi, rbp; call rax; 
0x0000000015f866: mov edi, [rdi+0x8]; push 0x0; lea rcx, [rsi+0x398]; push 0x0; call qword ptr [rax+0x1e0]; 
0x0000000015f815: mov edi, [rdi+0x8]; push 0x0; lea rcx, [rsi+0x398]; push 0x2; call qword ptr [rax+0x1e0]; 
0x00000000082a9a: mov edi, [rdi+0xe0]; call rax; 
0x00000000082a5e: mov edi, [rdi+0xe0]; jmp rax; 
0x00000000082ae7: mov edi, [rdi+0xe0]; lea rsi, [rsp+0x8]; call rax; 
0x0000000014945a: mov edi, [rdi]; add r12, rax; sub edx, eax; mov rsi, r12; call qword ptr [r15+0x40]; 
0x0000000014937b: mov edi, [rdi]; add rbx, r14; sub edx, r14d; mov rsi, rbx; call qword ptr [r15+0x40]; 
0x0000000015f7d9: mov edi, [rdi]; call qword ptr [rax+0x1e8]; 
0x00000000145063: mov edi, [rdi]; call qword ptr [rsp+0x70]; 
0x0000000011ab3d: mov edi, [rdi]; call rbx; 
0x0000000013a5d4: mov edi, [rdi]; mov eax, 0x3; syscall; 
0x0000000012bde4: mov edi, [rdx+0x50]; mov rsi, rdx; call rax; 
0x0000000009fad9: mov edi, [rip+0x14f4e5]; mov rsi, r13; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000009fa91: mov edi, [rip+0x14f52d]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000015f39f: mov edi, [rip+0x8ca4b]; mov [rsp+0x8], rcx; lea rdi, [r15+0x908]; call qword ptr [r15+0xf08]; 
0x0000000015de04: mov edi, [rip+0x8e626]; test edi, edi; jns short 0x000000000015de10; ret; 
0x00000000143745: mov edi, [rip+0xad365]; ror rdi, 0x11; xor rdi, fs:[0x30]; call rax; 
0x000000001173c5: mov edi, [rip+0xd839d]; test rdi, rdi; jne short 0x00000000001173e0; mov eax, 0x1; ret; 
0x00000000104ddf: mov edi, [rip+0xe708b]; add rbx, fs:[0x0]; mov r9, rbx; add r8, r15; call r13; 
0x0000000011a9bf: mov edi, [rsi+0x10]; test r15, r15; jne 0x000000000011abd2; mov rdi, [r14]; call rbx; 
0x0000000011aa7f: mov edi, [rsi+0x10]; test r15, r15; jne 0x000000000011ac2c; mov rdi, [r14]; call rbx; 
0x0000000011aa4f: mov edi, [rsi+0x10]; test r15, r15; jne 0x000000000011ac86; mov rdi, [r14]; call rbx; 
0x0000000011aa1f: mov edi, [rsi+0x10]; test r15, r15; jne 0x000000000011ace0; mov rdi, [r14]; call rbx; 
0x0000000011a9ef: mov edi, [rsi+0x10]; test r15, r15; jne 0x000000000011ad3a; mov rdi, [r14]; call rbx; 
0x0000000011aaaf: mov edi, [rsi+0x10]; test r15, r15; jne 0x000000000011ad94; mov rdi, [r14]; call rbx; 
0x0000000011aadb: mov edi, [rsi+0x10]; test r15, r15; jne short 0x000000000011ab21; mov rdi, [r14]; call rbx; 
0x0000000011ab07: mov edi, [rsi+0x10]; test r15, r15; jne short 0x000000000011ab78; mov rdi, [r14]; call rbx; 
0x0000000018c519: mov edi, [rsi+rcx+0x40]; cmp edi, [rdx+rcx+0x40]; jne 0x000000000018c209; vzeroupper; ret; 
0x0000000018c393: mov edi, [rsi+rcx]; cmp edi, [rdx+rcx]; jne 0x000000000018c209; vzeroupper; ret; 
0x0000000018c819: mov edi, [rsi+rcx]; cmp edi, [rdx+rcx]; jne 0x000000000018c679; vzeroupper; ret; 
0x0000000011a9cc: mov edi, [rsi]; call rbx; 
0x000000000e2ca4: mov edi, [rsp+0x10]; mov eax, 0x3d; syscall; 
0x00000000138161: mov edi, [rsp+0x10]; mov rsi, r12; call qword ptr [rsp+0x58]; 
0x00000000083e3c: mov edi, [rsp+0x10]; xor esi, esi; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000024037: mov edi, [rsp+0x14]; mov rdx, [rax]; call rbx; 
0x000000000240a5: mov edi, [rsp+0x14]; mov rdx, [rax]; mov rax, [rsp+0x18]; call rax; 
0x00000000115110: mov edi, [rsp+0x14]; syscall; 
0x0000000016088f: mov edi, [rsp+0x18]; call rax; 
0x00000000160832: mov edi, [rsp+0x18]; call rcx; 
0x0000000010df68: mov edi, [rsp+0x18]; mov eax, 0x101; syscall; 
0x00000000113265: mov edi, [rsp+0x18]; mov eax, 0x115; syscall; 
0x00000000120b55: mov edi, [rsp+0x18]; mov eax, 0x120; syscall; 
0x00000000120f25: mov edi, [rsp+0x18]; mov eax, 0x45; syscall; 
0x00000000044849: mov edi, [rsp+0x18]; mov rdx, rbp; mov rsi, r12; call rbx; 
0x000000000d0216: mov edi, [rsp+0x18]; xor rdi, fs:[0x28]; jne short 0x00000000000d0239; add rsp, 0x28; ret; 
0x00000000054987: mov edi, [rsp+0x24]; xor esi, esi; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000001029c4: mov edi, [rsp+0x28]; xor rdi, fs:[0x28]; jne short 0x0000000000102a26; add rsp, 0x38; ret; 
0x0000000010c9e5: mov edi, [rsp+0x2c]; xor esi, esi; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000144ee9: mov edi, [rsp+0x38]; call qword ptr [rsp+0x68]; 
0x0000000002b8ce: mov edi, [rsp+0x38]; call r15; 
0x0000000002f2eb: mov edi, [rsp+0x38]; lea r8, [rsp+0xa0]; call r15; 
0x00000000131d41: mov edi, [rsp+0x38]; mov r8, rbx; mov rdx, rbp; call qword ptr [rsp+0x60]; 
0x0000000002b2da: mov edi, [rsp+0x38]; mov rax, [rsp+0x20]; call rax; 
0x0000000002a34c: mov edi, [rsp+0x40]; call r14; 
0x0000000002a89a: mov edi, [rsp+0x40]; call rbx; 
0x00000000029759: mov edi, [rsp+0x48]; call r13; 
0x00000000029c59: mov edi, [rsp+0x48]; call rbx; 
0x0000000011f2c0: mov edi, [rsp+0x4]; syscall; 
0x000000000521cf: mov edi, [rsp+0x4]; xor esi, esi; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000002c658: mov edi, [rsp+0x50]; call rbx; 
0x0000000002d96b: mov edi, [rsp+0x50]; mov rax, [rsp+0x18]; call rax; 
0x0000000002c26e: mov edi, [rsp+0x50]; mov rax, [rsp+0x20]; call rax; 
0x000000000276a3: mov edi, [rsp+0x58]; call r14; 
0x000000000284bd: mov edi, [rsp+0x58]; call rbx; 
0x000000000290c5: mov edi, [rsp+0x58]; mov rax, [rsp+0x20]; call rax; 
0x000000000273f4: mov edi, [rsp+0x58]; mov rax, [rsp+0x28]; call rax; 
0x00000000028247: mov edi, [rsp+0x58]; mov rax, [rsp+0x30]; call rax; 
0x00000000027e08: mov edi, [rsp+0x60]; call rbx; 
0x000000000279f0: mov edi, [rsp+0x60]; mov rax, [rsp+0x20]; call rax; 
0x000000001509bf: mov edi, [rsp+0x68]; mov rdi, [rax]; mov rsi, r15; mov rax, [rdi+0x38]; call qword ptr [rax+0x8]; 
0x000000000921e3: mov edi, [rsp+0x8]; add rsp, 0x20; pop rbx; jmp rax; 
0x0000000011f543: mov edi, [rsp+0x8]; mov eax, 0x114; syscall; 
0x00000000113314: mov edi, [rsp+0x8]; mov eax, 0x11d; syscall; 
0x0000000011f760: mov edi, [rsp+0x8]; mov eax, 0x130; syscall; 
0x00000000114442: mov edi, [rsp+0x8]; mov eax, 0x13; syscall; 
0x00000000048284: mov edi, [rsp+0x8]; mov eax, 0x13e; syscall; 
0x000000001144e2: mov edi, [rsp+0x8]; mov eax, 0x14; syscall; 
0x0000000010e0d4: mov edi, [rsp+0x8]; mov eax, 0x1; syscall; 
0x00000000118a44: mov edi, [rsp+0x8]; mov eax, 0x1a; syscall; 
0x00000000120200: mov edi, [rsp+0x8]; mov eax, 0x2a; syscall; 
0x00000000120642: mov edi, [rsp+0x8]; mov eax, 0x2e; syscall; 
0x000000001204e2: mov edi, [rsp+0x8]; mov eax, 0x2f; syscall; 
0x0000000010e55c: mov edi, [rsp+0x8]; mov eax, 0x48; syscall; 
0x000000001129c4: mov edi, [rsp+0x8]; mov eax, 0x7; syscall; 
0x000000000434a7: mov edi, [rsp+0x8]; mov esi, 0x8; mov r8d, eax; mov eax, 0x82; syscall; 
0x00000000147853: mov edi, [rsp+0x8]; mov r12d, eax; mov rax, [rdi+0x8]; call qword ptr [rax+0x20]; 
0x00000000112ab8: mov edi, [rsp+0x8]; mov rdx, r12; mov eax, 0x10f; syscall; 
0x0000000011306d: mov edi, [rsp+0x8]; syscall; 
0x0000000010e034: mov edi, [rsp+0x8]; xor eax, eax; syscall; 
0x00000000120cb3: mov edi, [rsp+0xc]; mov eax, 0x133; syscall; 
0x00000000120134: mov edi, [rsp+0xc]; mov eax, 0x2b; syscall; 
0x0000000011f493: mov edi, [rsp+0xc]; mov eax, 0xe8; syscall; 
0x0000000010e85d: mov edi, [rsp+0xc]; mov r8d, eax; mov eax, 0x3; syscall; 
0x000000001151ed: mov edi, [rsp+0xc]; mov r8d, eax; mov eax, 0x4a; syscall; 
0x000000001152ad: mov edi, [rsp+0xc]; mov r8d, eax; mov eax, 0x4b; syscall; 
0x00000000114ff5: mov edi, [rsp+0xc]; syscall; 
0x00000000091a76: mov edi, [rsp]; add rsp, 0x10; pop rbx; jmp rax; 
0x0000000011a8a2: mov edi, [rsp]; call rbx; 
0x0000000011f5f4: mov edi, [rsp]; mov eax, 0x116; syscall; 
0x0000000010c1d5: mov edi, [rsp]; mov eax, 0x11; syscall; 
0x0000000010c285: mov edi, [rsp]; mov eax, 0x12; syscall; 
0x0000000012043e: mov edi, [rsp]; mov eax, 0x2d; mov rdx, [rsp+0x10]; mov rsi, [rsp+0x8]; syscall; 
0x0000000010e9e6: mov edi, [rsp]; mov r8d, eax; mov eax, 0x55; syscall; 
0x0000000015f74f: mov edi, [rsp]; mov rax, [rax+0x1d8]; jmp rax; 
0x000000000457a5: mov edi, [rsp]; mov rdx, r14; mov rax, [rsp]; call rax; 
0x00000000146a94: mov edi, [rsp]; mov rsi, r13; mov rax, [rdi+0x38]; call qword ptr [rax+0x10]; 
0x00000000146946: mov edi, [rsp]; mov rsi, rbp; mov rax, [rdi+0x38]; call qword ptr [rax+0x8]; 
0x000000000bcf91: mov edi, [rsp]; movzx esi, bl; call rbp; 
0x000000000bd055: mov edi, [rsp]; push 0x0; lea rcx, [rax+0x1]; lea r9, [rsp+0x28]; call rbx; 
0x000000001469f9: mov edi, [rsp]; test r15d, r15d; je short 0x0000000000146a80; mov rax, [rdi+0x38]; call qword ptr [rax+0x18]; 
0x000000000e7304: mov edi, eax; call qword ptr [r15+0x40]; 
0x00000000088f25: mov edi, eax; call qword ptr [rax+0x18]; 
0x0000000015248c: mov edi, eax; call qword ptr [rax+0x20]; 
0x00000000151eca: mov edi, eax; call rbp; 
0x0000000005b653: mov edi, eax; cmp rdx, rcx; jae short 0x000000000005b63c; mov rax, r8; ret; 
0x000000000946e3: mov edi, eax; jmp rax; 
0x000000000e2e89: mov edi, eax; mov eax, 0x22; syscall; 
0x0000000011f164: mov edi, eax; mov eax, 0x3c; syscall; 
0x00000000160ba3: mov edi, eax; mov eax, 0x3e; syscall; 
0x00000000043004: mov edi, eax; mov eax, 0xba; syscall; 
0x00000000146148: mov edi, eax; mov rax, [rax+0x18]; jmp rax; 
0x00000000160bb4: mov edi, eax; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000001483b9: mov edi, ebp; and esi, 0xfffffffc; call qword ptr [rax+0x30]; 
0x0000000008bdf7: mov edi, ebp; call qword ptr [r13+0x10]; 
0x0000000008f9e5: mov edi, ebp; call qword ptr [r13+0x20]; 
0x0000000008e3aa: mov edi, ebp; call qword ptr [r13+0x38]; 
0x0000000008f982: mov edi, ebp; call qword ptr [r13+0x90]; 
0x00000000085b5d: mov edi, ebp; call qword ptr [r14+0x38]; 
0x0000000007bbcb: mov edi, ebp; call qword ptr [r15+0x38]; 
0x0000000008e765: mov edi, ebp; call qword ptr [r15+0x40]; 
0x0000000008eb85: mov edi, ebp; call qword ptr [r15+0x80]; 
0x0000000008e6fc: mov edi, ebp; call qword ptr [r15+0x90]; 
0x00000000152f3d: mov edi, ebp; call qword ptr [rax+0x10]; 
0x0000000008f6e0: mov edi, ebp; call qword ptr [rax+0x18]; 
0x0000000014621f: mov edi, ebp; call qword ptr [rax+0x20]; 
0x0000000014773c: mov edi, ebp; call qword ptr [rax+0x28]; 
0x0000000014832b: mov edi, ebp; call qword ptr [rax+0x30]; 
0x0000000007a94b: mov edi, ebp; call qword ptr [rax+0x38]; 
0x0000000008f198: mov edi, ebp; call qword ptr [rax+0x40]; 
0x0000000014e788: mov edi, ebp; call qword ptr [rax+0x48]; 
0x0000000008f7d3: mov edi, ebp; call qword ptr [rax+0x78]; 
0x0000000008eaa5: mov edi, ebp; call qword ptr [rax+0x80]; 
0x00000000146938: mov edi, ebp; call qword ptr [rax+0x8]; 
0x0000000008e947: mov edi, ebp; call qword ptr [rax+0x90]; 
0x000000001490ea: mov edi, ebp; call qword ptr [rax]; 
0x00000000081e6c: mov edi, ebp; call qword ptr [rbx+0x10]; 
0x00000000091bc7: mov edi, ebp; call qword ptr [rbx+0x18]; 
0x0000000008225d: mov edi, ebp; call qword ptr [rbx+0x80]; 
0x0000000008ffe2: mov edi, ebp; call qword ptr [rbx+0x88]; 
0x00000000081cfb: mov edi, ebp; call qword ptr [rbx+0x90]; 
0x00000000152ced: mov edi, ebp; call qword ptr [rdx+0x10]; 
0x0000000013779d: mov edi, ebp; call qword ptr [rsp+0x10]; 
0x000000000e1f3d: mov edi, ebp; call qword ptr [rsp+0x30]; 
0x00000000131238: mov edi, ebp; call qword ptr [rsp+0x40]; 
0x00000000130cc8: mov edi, ebp; call qword ptr [rsp+0x50]; 
0x000000000de8cc: mov edi, ebp; call r12; 
0x000000000458a3: mov edi, ebp; call rax; 
0x00000000044877: mov edi, ebp; call rbx; 
0x00000000146968: mov edi, ebp; call rcx; 
0x0000000013b670: mov edi, ebp; jmp qword ptr [rsi+0x66]; 
0x00000000156ee1: mov edi, ebp; jmp qword ptr [rsi+0x66]; 
0x00000000146979: mov edi, ebp; lea r15, [rsp+0x50]; call qword ptr [rax+0x20]; 
0x00000000152193: mov edi, ebp; lea r8, [rip-0xa0ec]; lea rdx, [rip+0x3a2d]; call qword ptr [rax]; 
0x0000000008a5df: mov edi, ebp; lea r9, [rsp+0x18]; call rbp; 
0x0000000014732c: mov edi, ebp; lea r9, [rsp+0x20]; call qword ptr [rax]; 
0x0000000014e707: mov edi, ebp; mov [r12+0x70], edx; call qword ptr [rax+0x30]; 
0x0000000007b4d0: mov edi, ebp; mov [rbp-0x978], r10d; mov [rbp-0x960], r9b; call rax; 
0x00000000147629: mov edi, ebp; mov [rbx], rax; xor eax, eax; call qword ptr [rbx+0x18]; 
0x0000000009759c: mov edi, ebp; mov [rsp+0x10], r10; call qword ptr [rax]; 
0x00000000153ea0: mov edi, ebp; mov [rsp+0xc8], rdx; mov dword ptr [rsp+0xd0], 0x1; movups [rsp+0xb8], xmm5; call rax; 
0x00000000146a13: mov edi, ebp; mov dword ptr [rbx+0x18], 0x0; call qword ptr [rax+0x28]; 
0x00000000146994: mov edi, ebp; mov dword ptr [rbx+0x18], 0x1; call qword ptr [rax+0x28]; 
0x0000000014ef61: mov edi, ebp; mov dword ptr [rsp+0x40], 0x0; mov [rsp+0x10], rax; mov rax, [rsp+0x48]; call qword ptr [rax+0x28]; 
0x00000000153cb7: mov edi, ebp; mov dword ptr [rsp+0xa8], 0x1; mov dword ptr [rsp+0xb0], 0x1; mov dword ptr [rsp+0xb8], 0x1; call qword ptr [rax+0x18]; 
0x0000000010d335: mov edi, ebp; mov eax, 0x135; syscall; 
0x0000000011479c: mov edi, ebp; mov eax, 0x147; syscall; 
0x0000000011479b: mov edi, ebp; mov eax, 0x147; syscall; 
0x000000001148fb: mov edi, ebp; mov eax, 0x148; syscall; 
0x000000001148fc: mov edi, ebp; mov eax, 0x148; syscall; 
0x0000000010eb19: mov edi, ebp; mov eax, 0x4f; syscall; 
0x0000000011890d: mov edi, ebp; mov eax, 0x9; syscall; 
0x00000000046dab: mov edi, ebp; mov eax, 0xca; syscall; 
0x000000000dd11b: mov edi, ebp; mov eax, 0xe4; syscall; 
0x000000000dd09b: mov edi, ebp; mov eax, 0xe5; syscall; 
0x00000000119aa7: mov edi, ebp; mov edx, r13d; mov esi, 0x1; call r12; 
0x000000001476bd: mov edi, ebp; mov qword ptr [rsp], 0x0; call qword ptr [rax+0x20]; 
0x0000000013cbb9: mov edi, ebp; mov qword ptr [rsp], 0x0; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000001476eb: mov edi, ebp; mov r12d, eax; xor eax, eax; call qword ptr [rbx+0x28]; 
0x0000000011a73f: mov edi, ebp; mov rax, r12; pop rbp; pop r12; jmp rax; 
0x00000000119b37: mov edi, ebp; mov rdx, r13; mov esi, 0x1; call r12; 
0x0000000009e0ec: mov edi, ebp; mov rdx, rbp; mov rsi, r12; call rax; 
0x000000000caa18: mov edi, ebp; mov rsi, [rsp+0x18]; call rbx; 
0x0000000008998a: mov edi, ebp; pop rbp; mov rax, [rax+0xe0]; mov rax, [rax+0x20]; jmp rax; 
0x00000000087244: mov edi, ebp; pop rbp; pop r12; jmp rax; 
0x0000000009a544: mov edi, ebp; pop rbp; pop r12; pop r13; jmp rax; 
0x0000000008774d: mov edi, ebp; pop rbx; pop rbp; jmp rax; 
0x00000000099cb1: mov edi, ebp; pop rbx; pop rbp; pop r12; jmp rax; 
0x0000000014804d: mov edi, ebp; pop rbx; xor eax, eax; pop rbp; jmp rdx; 
0x0000000013cc96: mov edi, ebp; ror rax, 0x11; xor rax, fs:[0x30]; mov qword ptr [rsp], 0x0; call rax; 
0x00000000046908: mov edi, ebp; ror rdx, 0x11; xor rdx, fs:[0x30]; call rdx; 
0x0000000007b318: mov edi, ebp; sub rdx, rsi; sar rdx, 0x2; call qword ptr [r12+0x38]; 
0x000000001569af: mov edi, ebp; xor eax, eax; call r14; 
0x000000001569c9: mov edi, ebp; xor eax, eax; call rcx; 
0x0000000011a71e: mov edi, ebp; xor edx, edx; mov esi, 0x1; call r12; 
0x00000000119a95: mov edi, ebp; xor esi, esi; call r12; 
0x000000000934db: mov edi, ebx; call qword ptr [r12+0x18]; 
0x0000000009088f: mov edi, ebx; call qword ptr [r12+0x48]; 
0x0000000008f4fe: mov edi, ebx; call qword ptr [r12+0x80]; 
0x0000000008fe86: mov edi, ebx; call qword ptr [r12+0x88]; 
0x00000000082db5: mov edi, ebx; call qword ptr [r13+0x38]; 
0x00000000084ace: mov edi, ebx; call qword ptr [r13+0x48]; 
0x00000000084c3d: mov edi, ebx; call qword ptr [r13+0x58]; 
0x0000000009254f: mov edi, ebx; call qword ptr [r13+0x60]; 
0x00000000079f7d: mov edi, ebx; call qword ptr [r14+0x38]; 
0x00000000084823: mov edi, ebx; call qword ptr [r14+0x48]; 
0x0000000009097b: mov edi, ebx; call qword ptr [r14+0x78]; 
0x000000000932ec: mov edi, ebx; call qword ptr [r15+0x18]; 
0x000000000833eb: mov edi, ebx; call qword ptr [r15+0x38]; 
0x00000000092356: mov edi, ebx; call qword ptr [rax+0x18]; 
0x000000000922bf: mov edi, ebx; call qword ptr [rax+0x20]; 
0x00000000084c67: mov edi, ebx; call qword ptr [rax+0x58]; 
0x00000000091970: mov edi, ebx; call qword ptr [rbp+0x18]; 
0x000000000871c1: mov edi, ebx; call qword ptr [rbp+0x20]; 
0x00000000087d46: mov edi, ebx; call qword ptr [rbp+0x30]; 
0x000000000823f1: mov edi, ebx; call qword ptr [rbp+0x60]; 
0x00000000084ed2: mov edi, ebx; call qword ptr [rbp+0x68]; 
0x0000000008f333: mov edi, ebx; call qword ptr [rbp+0x70]; 
0x0000000008a0a1: mov edi, ebx; call qword ptr [rbp+0x80]; 
0x00000000024f75: mov edi, ebx; call r12; 
0x00000000025fd5: mov edi, ebx; call r14; 
0x000000000e636c: mov edi, ebx; call r15; 
0x00000000081278: mov edi, ebx; call r8; 
0x00000000080c82: mov edi, ebx; call rax; 
0x00000000025b2a: mov edi, ebx; call rbp; 
0x00000000147e11: mov edi, ebx; call rcx; 
0x000000000256cc: mov edi, ebx; call rsi; 
0x0000000009ae71: mov edi, ebx; mov eax, 0xca; syscall; 
0x0000000009093b: mov edi, ebx; mov edx, 0x1; call qword ptr [r14+0x80]; 
0x00000000144d62: mov edi, ebx; mov rcx, r13; call r10; 
0x00000000088aa1: mov edi, ebx; sub rdx, rsi; call qword ptr [rax+0x70]; 
0x00000000090bc7: mov edi, ebx; sub rdx, rsi; call qword ptr [rbp+0x70]; 
0x00000000147f04: mov edi, ebx; xor eax, eax; call rcx; 
0x0000000008e23e: mov edi, ecx; call qword ptr [r14+0x38]; 
0x00000000047009: mov edi, ecx; call r8; 
0x000000000e30e8: mov edi, ecx; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000011ef54: mov edi, ecx; sub rsp, 0x8; call rsi; 
0x000000001509a5: mov edi, edi; add dword ptr [rax], 0x1; mov rax, [rbx+0x60]; call qword ptr [rax+0x8]; 
0x000000000e63b4: mov edi, edi; call qword ptr [r12+0x38]; 
0x00000000100f84: mov edi, edi; call qword ptr [r12+0x40]; 
0x00000000089551: mov edi, edi; call qword ptr [r13+0x80]; 
0x00000000083bf9: mov edi, edi; call qword ptr [r14+0x38]; 
0x0000000008926b: mov edi, edi; call qword ptr [r14+0x80]; 
0x0000000008919f: mov edi, edi; call qword ptr [r14+0x90]; 
0x00000000087a98: mov edi, edi; call qword ptr [rax+0x20]; 
0x00000000150990: mov edi, edi; call qword ptr [rax+0x28]; 
0x00000000074cb3: mov edi, edi; call qword ptr [rax+0x38]; 
0x00000000092f0f: mov edi, edi; call qword ptr [rax+0x58]; 
0x00000000083c5e: mov edi, edi; call qword ptr [rbp+0x38]; 
0x00000000089747: mov edi, edi; call qword ptr [rbp+0x80]; 
0x00000000074f56: mov edi, edi; call qword ptr [rbx+0x38]; 
0x00000000089837: mov edi, edi; call qword ptr [rbx+0x80]; 
0x00000000075987: mov edi, edi; call qword ptr [rcx+0x38]; 
0x0000000008a832: mov edi, edi; call r12; 
0x0000000011baac: mov edi, edi; call r14; 
0x000000000892c4: mov edi, edi; call rax; 
0x000000001509e5: mov edi, edi; call rcx; 
0x000000000920b8: mov edi, edi; lea rbx, [rsi+0x1]; movzx esi, byte ptr [rsi]; call qword ptr [rax+0x18]; 
0x000000000749f8: mov edi, edi; mov [rbp-0x954], r9d; mov [rbp-0x948], r11d; call rax; 
0x00000000147ebc: mov edi, edi; mov [rsp+0x192], ax; mov rax, [rsp+0x30]; call rax; 
0x00000000144c00: mov edi, edi; mov [rsp+0x8], rcx; call rbp; 
0x0000000009c16c: mov edi, edi; mov eax, 0xca; syscall; 
0x00000000122b5f: mov edi, edi; mov rax, fs:[rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x1; ret; 
0x000000000ded83: mov edi, edi; mov rsi, [rsp+0x60]; call r12; 
0x00000000137d69: mov edi, edi; mov rsi, [rsp+0x8]; call rbp; 
0x0000000010115c: mov edi, edi; movsxd rax, [rdx+rdi*4]; add rax, rdx; notrack jmp rax; 
0x00000000123a24: mov edi, edi; movzx eax, word ptr [rax+rdi*2]; and ax, 0x1000; movzx eax, ax; ret; 
0x0000000012399c: mov edi, edi; movzx eax, word ptr [rax+rdi*2]; and ax, 0x100; movzx eax, ax; ret; 
0x00000000123914: mov edi, edi; movzx eax, word ptr [rax+rdi*2]; and ax, 0x2000; movzx eax, ax; ret; 
0x000000001236d4: mov edi, edi; movzx eax, word ptr [rax+rdi*2]; and ax, 0x200; movzx eax, ax; ret; 
0x000000001237f4: mov edi, edi; movzx eax, word ptr [rax+rdi*2]; and ax, 0x4000; movzx eax, ax; ret; 
0x000000001234a4: mov edi, edi; movzx eax, word ptr [rax+rdi*2]; and ax, 0x400; movzx eax, ax; ret; 
0x00000000123764: mov edi, edi; movzx eax, word ptr [rax+rdi*2]; and ax, 0x8000; movzx eax, ax; ret; 
0x00000000123534: mov edi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x1; ret; 
0x000000001235b4: mov edi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x2; movzx eax, ax; ret; 
0x00000000123884: mov edi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x4; movzx eax, ax; ret; 
0x00000000123414: mov edi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x8; movzx eax, ax; ret; 
0x0000000009204c: mov edi, edi; movzx esi, byte ptr [rsi]; call qword ptr [rax+0x18]; 
0x00000000074a9f: mov edi, edi; sub rdx, rsi; call qword ptr [rbx+0x38]; 
0x0000000015593d: mov edi, edi; xor eax, eax; add r13, rbx; call rbp; 
0x0000000005b6d7: mov edi, edx; cmp rax, 0x9; ja short 0x000000000005b6b0; mov rax, r8; ret; 
0x000000000e3160: mov edi, edx; mov eax, esi; syscall; 
0x000000000e316f: mov edi, edx; mov eax, r8d; syscall; 
0x00000000047359: mov edi, edx; shl rdi, 0x20; or rax, rdi; ret; 
0x0000000018854f: mov edi, esi; bsr eax, eax; lea rax, [rdi+rax-0x20]; vzeroupper; ret; 
0x00000000148c8c: mov edi, esi; call qword ptr [rax+0x10]; 
0x000000000872da: mov edi, esi; call qword ptr [rax+0x18]; 
0x00000000148cc6: mov edi, esi; call qword ptr [rax+0x20]; 
0x000000000e0087: mov edi, esi; call qword ptr [rsp+0x48]; 
0x0000000011bb41: mov edi, esi; call r13; 
0x0000000009e84f: mov edi, esi; call rax; 
0x00000000044bb2: mov edi, esi; call rbp; 
0x00000000146f4f: mov edi, esi; jmp qword ptr [rsi+0x2e]; 
0x0000000004695d: mov edi, esi; mov eax, 0xca; syscall; 
0x0000000011a0ec: mov edi, esi; mov rax, [rbp-0x58]; mov r15d, r13d; call rax; 
0x00000000044954: mov edi, esi; mov rdx, r12; call rbp; 
0x0000000012aa2b: mov edi, esi; mov rdx, rax; mov rsi, r9; call qword ptr [r10+0x28]; 
0x00000000160355: mov edi, esp; call qword ptr [rax+0x1e0]; 
0x00000000147b53: mov edi, esp; call qword ptr [rax+0x20]; 
0x00000000148aa7: mov edi, esp; call qword ptr [rax+0x28]; 
0x0000000007e855: mov edi, esp; call qword ptr [rax+0x38]; 
0x0000000014d1c0: mov edi, esp; call qword ptr [rax+0x8]; 
0x00000000148c9a: mov edi, esp; call qword ptr [rbx]; 
0x00000000133b82: mov edi, esp; call qword ptr [rsp+0x40]; 
0x00000000155a97: mov edi, esp; call r13; 
0x0000000004571b: mov edi, esp; call rax; 
0x0000000013811d: mov edi, esp; call rbp; 
0x0000000004483c: mov edi, esp; call rbx; 
0x0000000014d1f4: mov edi, esp; call rcx; 
0x0000000009bd16: mov edi, esp; call rdx; 
0x0000000015ff32: mov edi, esp; lea r8, [rsp+0x30]; call qword ptr [rax+0x1e0]; 
0x000000000bd79a: mov edi, esp; lea r9, [rsp+0x30]; call rbx; 
0x00000000077120: mov edi, esp; mov [rbp-0x4e0], r10; call qword ptr [rcx+0x38]; 
0x0000000007d855: mov edi, esp; mov [rbp-0x4e0], r9; call qword ptr [r8+0x38]; 
0x0000000007deaa: mov edi, esp; mov [rbp-0x4e0], r9; call qword ptr [rbx+0x38]; 
0x00000000076f39: mov edi, esp; mov [rbp-0x4f0], r10; call qword ptr [rax+0x38]; 
0x00000000078132: mov edi, esp; mov [rbp-0x4f8], r9d; mov [rbp-0x4f0], r10; call qword ptr [rax+0x38]; 
0x000000000777ca: mov edi, esp; mov [rbp-0x500], r9d; mov [rbp-0x4f0], r10; call qword ptr [rbx+0x38]; 
0x0000000007eb36: mov edi, esp; mov [rbp-0x508], r9; mov [rbp-0x500], r10; call qword ptr [rax+0x38]; 
0x0000000007839a: mov edi, esp; mov [rbp-0x510], r10; mov [rbp-0x508], r11; call qword ptr [rax+0x38]; 
0x000000001215ad: mov edi, esp; mov [rbp-0x830], rax; mov eax, r14d; syscall; 
0x0000000005d41d: mov edi, esp; mov [rbp-0xe8], r8; call rax; 
0x00000000155b9c: mov edi, esp; mov dword ptr [rsp], 0x2; call r8; 
0x000000001214be: mov edi, esp; mov eax, 0x14; syscall; 
0x000000000442a2: mov edi, esp; mov eax, 0x81; syscall; 
0x00000000046b54: mov edi, esp; mov eax, 0xca; syscall; 
0x00000000121641: mov edi, esp; mov eax, r14d; syscall; 
0x00000000130284: mov edi, esp; mov edx, [rsp+0x38]; call qword ptr [rsp+0x60]; 
0x000000000bde70: mov edi, esp; mov rsi, [rsp+0x10]; call rbx; 
0x000000000bd8f0: mov edi, esp; mov rsi, [rsp+0x18]; call rbx; 
0x00000000153ec9: mov edi, esp; mov rsi, rbp; call qword ptr [rax+0x18]; 
0x00000000096811: mov edi, esp; neg rdi; call qword ptr [r13]; 
0x00000000160276: mov edi, esp; push 0x2; xor r13d, r13d; call qword ptr [rax+0x1e0]; 
0x00000000035394: mov edi, esp; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000007700b: mov edi, esp; sub r15, r10; mov rdx, r15; call qword ptr [rax+0x38]; 
0x00000000076997: mov edi, esp; sub r15, r13; mov rdx, r15; call qword ptr [rax+0x38]; 
0x0000000007d666: mov edi, esp; sub rdx, r9; sar rdx, 0x2; mov [rbp-0x4d0], rdx; call qword ptr [rax+0x38]; 
0x0000000005edd5: mov edi, esp; sub rsi, rax; mov rax, [rip+0x18e9cf]; mov rcx, r14; call qword ptr [rax+r8*8]; 
0x00000000079fd0: mov edi, esp; xor esi, esi; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000015fdd0: mov edi, esp; xor r13d, r13d; lea rcx, [r10+0x398]; lea r8, [rsp+0x30]; call qword ptr [rax+0x1e0]; 
0x000000000bda99: mov edi, esp; xor r8d, r8d; lea r9, [rsp+0x28]; call rbx; 
0x00000000134151: mov edi, r12d; call qword ptr [rsp+0x40]; 
0x000000001215ac: mov edi, r12d; mov [rbp-0x830], rax; mov eax, r14d; syscall; 
0x000000001214bd: mov edi, r12d; mov eax, 0x14; syscall; 
0x000000000442a1: mov edi, r12d; mov eax, 0x81; syscall; 
0x00000000121640: mov edi, r12d; mov eax, r14d; syscall; 
0x000000000e232c: mov edi, r13d; call qword ptr [rsp+0x30]; 
0x000000000e0086: mov edi, r14d; call qword ptr [rsp+0x48]; 
0x0000000012aa2a: mov edi, r14d; mov rdx, rax; mov rsi, r9; call qword ptr [r10+0x28]; 
0x00000000120e3a: mov edx, 0x0; cmovb rax, rdx; ret; 
0x000000000a2906: mov edx, 0x0; cmove rax, rdx; ret; 
0x0000000015c524: mov edx, 0x0; cmovne rax, rdx; add rsp, 0x8; ret; 
0x0000000009cbbd: mov edx, 0x0; cmp rax, 0xffffffffffffffff; cmove rax, rdx; add rsp, 0x8; ret; 
0x000000000b14ea: mov edx, 0x0; lea rax, [rdi+rax]; cmp [rax], sil; cmovne rax, rdx; ret; 
0x0000000013bd22: mov edx, 0x0; mov eax, 0x102; cmovne eax, edx; ret; 
0x000000000bc126: mov edx, 0x0; pop rbx; cmove rax, rdx; ret; 
0x0000000015cb99: mov edx, 0x100094a; mov rax, r8; pop rbp; ret; 
0x000000000e5097: mov edx, 0x100; mov eax, 0x20; cmove rax, rdx; ret; 
0x00000000116b71: mov edx, 0x100; mov edi, 0xffffff9c; mov eax, 0x118; syscall; 
0x0000000013bcfd: mov edx, 0x104; cmove eax, edx; ret; 
0x0000000013bce1: mov edx, 0x107; mov eax, 0xffffffff; cmove eax, edx; ret; 
0x00000000083bf0: mov edx, 0x10; mov rsi, r13; mov rdi, r15; call qword ptr [r14+0x38]; 
0x000000001141e3: mov edx, 0x14; sub edx, eax; test eax, eax; cmovns eax, edx; ret; 
0x0000000009093d: mov edx, 0x1; call qword ptr [r14+0x80]; 
0x0000000011039d: mov edx, 0x1; call qword ptr [rbp+0x40]; 
0x00000000043e0d: mov edx, 0x1; cmove eax, edx; ret; 
0x00000000113b80: mov edx, 0x1; mov esi, 0x5409; mov eax, 0x10; syscall; 
0x00000000113bb1: mov edx, 0x1; mov esi, 0x5409; mov r8d, eax; mov eax, 0x10; syscall; 
0x000000000e1dc8: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10d702]; syscall; 
0x000000000e1c88: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10d842]; syscall; 
0x000000000e1bd0: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10d8fa]; syscall; 
0x000000000e1af4: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10d9ce]; syscall; 
0x000000000e1924: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10db5e]; syscall; 
0x000000000e1760: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10dcda]; syscall; 
0x000000000e13a6: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10e03c]; syscall; 
0x000000000dfe98: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10f4c2]; syscall; 
0x000000000dfd58: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10f602]; syscall; 
0x000000000dfca0: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10f6ba]; syscall; 
0x000000000df8d4: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10fa7e]; syscall; 
0x000000000df704: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10fc0e]; syscall; 
0x000000000df540: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10fd8a]; syscall; 
0x000000000dec58: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x11061a]; syscall; 
0x000000000d2bb4: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x11c5d6]; syscall; 
0x000000000d2980: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x11c80a]; syscall; 
0x000000000ca654: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x126b46]; syscall; 
0x0000000009c814: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x150356]; syscall; 
0x0000000009e1c0: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x150d32]; syscall; 
0x0000000009dfe0: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x150f12]; syscall; 
0x0000000009ddf4: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1510fe]; syscall; 
0x0000000009dd84: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x15116e]; syscall; 
0x0000000009db54: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x15139e]; syscall; 
0x00000000099ab4: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1530b6]; syscall; 
0x00000000099a54: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x153116]; syscall; 
0x00000000099694: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1534d6]; syscall; 
0x00000000099434: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x153736]; syscall; 
0x00000000098dcc: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x153d9e]; syscall; 
0x00000000098d94: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x153dd6]; syscall; 
0x0000000009aa64: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x15440e]; syscall; 
0x00000000099fc8: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x154e9a]; syscall; 
0x00000000096035: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x158e2d]; syscall; 
0x00000000096004: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x158e6e]; syscall; 
0x00000000095d84: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1590ee]; syscall; 
0x00000000095860: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x159612]; syscall; 
0x00000000094c45: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x159ba5]; syscall; 
0x00000000094a70: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x159d7a]; syscall; 
0x000000000948d4: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x159f16]; syscall; 
0x00000000093946: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x15ae64]; syscall; 
0x00000000093406: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x15b3a4]; syscall; 
0x00000000093062: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x15b748]; syscall; 
0x00000000092cf6: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x15bab4]; syscall; 
0x00000000091672: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x15d138]; syscall; 
0x000000000913b2: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x15d3f8]; syscall; 
0x0000000009103e: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x15d76c]; syscall; 
0x00000000084383: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x16a3e7]; syscall; 
0x00000000083f86: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x16a7e4]; syscall; 
0x00000000083edb: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x16a88f]; syscall; 
0x00000000082014: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x16f186]; syscall; 
0x000000000610c8: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x18d672]; syscall; 
0x00000000060e44: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x18d8f2]; syscall; 
0x0000000005ec70: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x18fabe]; syscall; 
0x0000000005eb30: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x18fbfe]; syscall; 
0x00000000054d94: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x199986]; syscall; 
0x00000000054bb4: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x199b66]; syscall; 
0x00000000054684: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x19a096]; syscall; 
0x00000000052298: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x19c252]; syscall; 
0x0000000005211c: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x19c3ce]; syscall; 
0x000000000520e4: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x19c406]; syscall; 
0x000000000478d0: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1a6bfa]; syscall; 
0x00000000047810: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1a6cba]; syscall; 
0x00000000047748: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1a6d82]; syscall; 
0x00000000047670: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1a6e5a]; syscall; 
0x00000000046768: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1a750a]; syscall; 
0x000000000466a3: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1a75cf]; syscall; 
0x00000000046501: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1a7771]; syscall; 
0x00000000046427: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1a784b]; syscall; 
0x000000000384f1: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1b5731]; syscall; 
0x00000000036b6e: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1b707c]; syscall; 
0x00000000035833: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1b830f]; syscall; 
0x00000000035816: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1b832c]; syscall; 
0x0000000003574e: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1b83f4]; syscall; 
0x00000000026068: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1cb132]; syscall; 
0x00000000025efc: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1cb29e]; syscall; 
0x00000000025ddc: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1cb3be]; syscall; 
0x00000000022837: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1cb403]; syscall; 
0x000000001987e0: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x55492]; syscall; 
0x000000001989a0: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x55e4a]; syscall; 
0x00000000198cd0: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x57832]; syscall; 
0x0000000015e070: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x935d2]; syscall; 
0x0000000015cf38: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9470a]; syscall; 
0x0000000015ce58: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x947ea]; syscall; 
0x0000000015cc70: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x949d2]; syscall; 
0x0000000015cbe0: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x94a62]; syscall; 
0x0000000015cb40: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x94b02]; syscall; 
0x0000000015ca90: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x94bb2]; syscall; 
0x0000000015c6c0: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x94f82]; syscall; 
0x00000000152430: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9e9aa]; syscall; 
0x000000001522d0: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9eb0a]; syscall; 
0x000000001520c4: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9ed16]; syscall; 
0x00000000151f24: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9eeb6]; syscall; 
0x00000000151d90: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9f04a]; syscall; 
0x00000000151c50: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9f18a]; syscall; 
0x00000000151af0: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9f2ea]; syscall; 
0x000000001519e0: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9f3fa]; syscall; 
0x0000000014e4d0: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa2906]; syscall; 
0x0000000014c7d8: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa453a]; syscall; 
0x0000000014c698: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa467a]; syscall; 
0x0000000014c5e0: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa4732]; syscall; 
0x0000000014c4f4: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa4816]; syscall; 
0x0000000014c324: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa49b6]; syscall; 
0x0000000014c160: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa4b52]; syscall; 
0x000000001467c2: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xaa38c]; syscall; 
0x00000000144624: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xac496]; syscall; 
0x000000001442ec: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xac7ce]; syscall; 
0x00000000143f6c: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xacb4e]; syscall; 
0x00000000143d46: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xacd74]; syscall; 
0x00000000143be4: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xaced6]; syscall; 
0x000000001439a7: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xad113]; syscall; 
0x00000000142f50: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xadab2]; syscall; 
0x00000000142dce: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xadc34]; syscall; 
0x00000000142d94: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xadc6e]; syscall; 
0x00000000142c7c: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xadd86]; syscall; 
0x00000000142438: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xae5ca]; syscall; 
0x00000000142370: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xae692]; syscall; 
0x00000000142254: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xae7ae]; syscall; 
0x00000000140e81: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xaf929]; syscall; 
0x0000000013d700: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb2e02]; syscall; 
0x0000000013d404: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb30fe]; syscall; 
0x000000001390d4: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb741a]; syscall; 
0x00000000138b54: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb797e]; syscall; 
0x00000000138990: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb7afa]; syscall; 
0x000000001388c8: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb7b62]; syscall; 
0x00000000138788: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb7ca2]; syscall; 
0x000000001386d0: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb7d5a]; syscall; 
0x00000000137fe0: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb8442]; syscall; 
0x00000000137cc0: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb8762]; syscall; 
0x00000000137b04: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb891e]; syscall; 
0x00000000134778: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbbb3a]; syscall; 
0x00000000134638: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbbc7a]; syscall; 
0x00000000134580: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbbd32]; syscall; 
0x000000001344a0: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbbe0a]; syscall; 
0x00000000133fd4: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbc25e]; syscall; 
0x00000000133a04: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbc7ce]; syscall; 
0x000000001334e4: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbcca6]; syscall; 
0x00000000133318: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbce32]; syscall; 
0x000000001331d8: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbcf72]; syscall; 
0x00000000133120: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbd02a]; syscall; 
0x00000000133040: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbd102]; syscall; 
0x00000000132c24: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbd4d6]; syscall; 
0x00000000132608: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbda92]; syscall; 
0x000000001324b0: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbdbea]; syscall; 
0x000000001323f0: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbdcaa]; syscall; 
0x00000000132308: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbdd8a]; syscall; 
0x00000000132224: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbde36]; syscall; 
0x00000000131bc4: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbe456]; syscall; 
0x000000001319b8: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbe61a]; syscall; 
0x00000000131860: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbe772]; syscall; 
0x000000001317a0: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbe832]; syscall; 
0x000000001316b8: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbe912]; syscall; 
0x00000000130aa4: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbf4ae]; syscall; 
0x00000000130834: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbf6de]; syscall; 
0x000000001300b4: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbfdfe]; syscall; 
0x000000001265b8: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc9862]; syscall; 
0x00000000126478: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc99a2]; syscall; 
0x000000001263c0: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc9a5a]; syscall; 
0x00000000125fe6: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc9e2c]; syscall; 
0x00000000125de4: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc9ff6]; syscall; 
0x00000000125c04: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xca18e]; syscall; 
0x00000000125a40: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xca30a]; syscall; 
0x00000000125970: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xca386]; syscall; 
0x000000001258a6: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xca450]; syscall; 
0x00000000125811: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xca4e5]; syscall; 
0x00000000124b08: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xcb1ba]; syscall; 
0x000000001249c8: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xcb2fa]; syscall; 
0x00000000124910: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xcb3b2]; syscall; 
0x00000000124316: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xcb9a4]; syscall; 
0x00000000124114: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xcbb4e]; syscall; 
0x00000000123f34: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xcbcc6]; syscall; 
0x00000000123d70: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xcbe22]; syscall; 
0x00000000118700: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xd713a]; syscall; 
0x000000001185e4: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xd7256]; syscall; 
0x00000000118184: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xd76b6]; syscall; 
0x00000000117c49: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xd7bf1]; syscall; 
0x00000000106ab4: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xe8af6]; syscall; 
0x000000000229ec: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x00000000099f9d: mov edx, 0x1; mov esi, 0x81; mov eax, ebx; syscall; 
0x00000000046b49: mov edx, 0x1; mov esi, 0x81; mov rdi, r12; mov eax, 0xca; syscall; 
0x00000000047132: mov edx, 0x1; mov esi, 0x81; mov rdi, r13; mov eax, 0xca; syscall; 
0x00000000046952: mov edx, 0x1; mov esi, 0x81; mov rdi, r14; mov eax, 0xca; syscall; 
0x0000000009c161: mov edx, 0x1; mov esi, 0x81; mov rdi, r15; mov eax, 0xca; syscall; 
0x00000000046da0: mov edx, 0x1; mov esi, 0x81; mov rdi, rbp; mov eax, 0xca; syscall; 
0x0000000009ae66: mov edx, 0x1; mov esi, 0x81; mov rdi, rbx; mov eax, 0xca; syscall; 
0x00000000089741: mov edx, 0x1; mov rdi, r15; call qword ptr [rbp+0x80]; 
0x0000000008f78f: mov edx, 0x1; mov rdi, rbp; call qword ptr [rax+0x80]; 
0x0000000008ed09: mov edx, 0x1; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x00000000090889: mov edx, 0x1; mov rdi, rbx; call qword ptr [r12+0x48]; 
0x0000000008a09b: mov edx, 0x1; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x0000000008cf78: mov edx, 0x1; mov rsi, rbx; mov edi, 0x2; mov eax, r9d; syscall; 
0x000000001106fd: mov edx, 0x2; call qword ptr [rbp+0x40]; 
0x00000000102ab4: mov edx, 0x2; cmove eax, edx; ret; 
0x000000000945ea: mov edx, 0x2; mov esi, 0x80; mov eax, 0xca; syscall; 
0x0000000008954b: mov edx, 0x2; mov rdi, r15; call qword ptr [r13+0x80]; 
0x00000000082257: mov edx, 0x2; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x0000000009009c: mov edx, 0x2; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x0000000002410a: mov edx, 0x3c; nop; xor edi, edi; mov eax, edx; syscall; 
0x00000000101095: mov edx, 0x3ed00148; jmp rax; 
0x000000000fce25: mov edx, 0x3ed0014c; jmp rax; 
0x000000001381b3: mov edx, 0x400; mov rsi, r15; mov rdi, r12; call rbp; 
0x000000000e50d2: mov edx, 0x40; mov eax, 0x20; cmove rax, rdx; ret; 
0x000000001214b8: mov edx, 0x40; mov edi, r12d; mov eax, 0x14; syscall; 
0x000000000a0542: mov edx, 0x48000efd; cmove eax, edx; ret; 
0x000000000307c2: mov edx, 0x48001bd1; ror eax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000016de42: mov edx, 0x49000501; movsxd edx, [rbx+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000008e75a: mov edx, 0x4c000000; mov edx, ebp; mov rsi, r12; mov rdi, rbp; call qword ptr [r15+0x40]; 
0x0000000011067d: mov edx, 0x5; call qword ptr [rbp+0x40]; 
0x0000000011cdab: mov edx, 0x64; mov eax, [rax+0x38]; test eax, eax; cmove eax, edx; ret; 
0x00000000052a1d: mov edx, 0x6; mov [rip+0x19bc3d], al; lea rax, [rip+0x19bc31]; mov byte ptr [rax+rdx], 0x0; ret; 
0x00000000078d5f: mov edx, 0x77e90013; jrcxz 0x0000000000078d65; jmp qword ptr [rsi+0xf]; 
0x000000000e4fc7: mov edx, 0x7d00; mov eax, 0x7f; cmove rax, rdx; ret; 
0x0000000015c03a: mov edx, 0x7ee80005; jg short 0x000000000015c02e; jmp qword ptr [rsi+0x66]; 
0x000000000e501a: mov edx, 0x7f; cmovne rax, rdx; ret; 
0x0000000013c9de: mov edx, 0x7fffffff; add eax, ecx; cmovs eax, edx; ret; 
0x0000000008052e: mov edx, 0x89480016; out 0x48, eax; ror eax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000057d92: mov edx, 0x894830e8; or [r8+0x2], r15b; ret; 
0x00000000044153: mov edx, 0x8; mov eax, 0x80; syscall; 
0x0000000004318a: mov edx, 0x8; mov eax, 0xd; syscall; 
0x00000000054f25: mov edx, 0x8; mov eax, 0xe; syscall; 
0x0000000004332c: mov edx, 0x8; mov rsi, r8; mov eax, 0xe; syscall; 
0x0000000011f31c: mov edx, 0x8; syscall; 
0x00000000105618: mov edx, 0x8d000007; jmp qword ptr [r14+0xf]; 
0x000000000359c9: mov edx, 0x8d48001b; cmp eax, 0x1b81ad; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035927: mov edx, 0x8d48001b; cmp eax, 0x1b81cf; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035984: mov edx, 0x8d48001b; cmp eax, 0x1b81f2; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000019521a: mov edx, 0x94d3ff3; ret; 
0x000000001203b4: mov edx, 0xd8f7000c; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000124b1a: mov edx, 0xf000cb1; add eax, 0xffff75e9; jmp qword ptr [rsi+0x2e]; 
0x0000000015d114: mov edx, 0xfd2986e8; jmp qword ptr [rsi+0xf]; 
0x000000000e4fad: mov edx, 0xfde8; mov eax, 0x7f; cmove rax, rdx; ret; 
0x000000000a06e4: mov edx, 0xffffffff; bsf eax, edi; cmove eax, edx; add eax, 0x1; ret; 
0x000000000a0704: mov edx, 0xffffffff; bsf rax, rdi; cmove rax, rdx; add eax, 0x1; ret; 
0x0000000009f388: mov edx, 0xffffffff; cmovbe eax, edx; ret; 
0x00000000033c68: mov edx, 0xffffffff; cmove rax, rdx; ret; 
0x0000000002722b: mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x000000000e5160: mov edx, 0xffffffff; cmp dword ptr fs:[rax], 0x26; mov eax, 0x20; cmovne rax, rdx; ret; 
0x000000000e5030: mov edx, 0xffffffff; cmp dword ptr fs:[rax], 0x26; mov eax, 0x7f; cmovne rax, rdx; ret; 
0x00000000114aed: mov edx, 0xffffffff; mov edi, 0xffffffff; mov eax, 0x75; syscall; 
0x00000000114bbd: mov edx, 0xffffffff; mov edi, 0xffffffff; mov eax, 0x77; syscall; 
0x00000000155937: mov edx, 0xffffffff; mov rdi, r15; xor eax, eax; add r13, rbx; call rbp; 
0x0000000015767c: mov edx, 0xffffffff; mov rsi, r12; mov rdi, rbx; call rcx; 
0x000000001569a6: mov edx, 0xffffffff; mov rsi, r13; mov rdi, rbp; xor eax, eax; call r14; 
0x000000001569c0: mov edx, 0xffffffff; mov rsi, r13; mov rdi, rbp; xor eax, eax; call rcx; 
0x00000000155a8e: mov edx, 0xffffffff; mov rsi, r14; mov rdi, r12; call r13; 
0x000000001577aa: mov edx, 0xffffffff; mov rsi, r14; mov rdi, rbp; call r12; 
0x000000000473c7: mov edx, 0xffffffff; pop rbx; test eax, eax; cmovs eax, edx; ret; 
0x0000000013c978: mov edx, 0xffffffff; ret; 
0x000000000630af: mov edx, [0x18]; test edx, edx; jne short 0x00000000000630c0; sub dword ptr [rdi], 0x1; ret; 
0x00000000083f61: mov edx, [0x18]; test edx, edx; jne short 0x0000000000083f78; sub dword ptr [rip+0x16a80d], 0x1; ret; 
0x00000000091015: mov edx, [0x18]; test edx, edx; jne short 0x0000000000091030; sub dword ptr [rip+0x15d799], 0x1; ret; 
0x00000000093921: mov edx, [0x18]; test edx, edx; jne short 0x0000000000093938; sub dword ptr [rip+0x15ae8d], 0x1; ret; 
0x0000000011593f: mov edx, [rax+0x10]; cmovae r10, [rax+0x18]; mov [rsp+0x20], rax; mov eax, 0x65; syscall; 
0x0000000008cdec: mov edx, [rax+0x18]; mov [rax+0x20], rdx; pop rbx; ret; 
0x00000000150794: mov edx, [rax+0x90]; bswap eax; mov [rdx+0x10], eax; mov eax, 0x1; ret; 
0x0000000015069c: mov edx, [rax+0x90]; bswap eax; mov [rdx+0xc], eax; mov eax, 0x1; ret; 
0x0000000010cf9c: mov edx, [rax+0xb0]; call qword ptr [rax+0x88]; 
0x00000000033d3a: mov edx, [rax+0xc0]; mov rax, [rip+0x1b80a1]; mov [rax], rdx; ret; 
0x00000000055630: mov edx, [rax+rax*8]; mov [rsi+rax*8], rdx; xor eax, eax; ret; 
0x00000000030ecb: mov edx, [rax+rdi*8]; test rdx, rdx; je short 0x0000000000030ed5; call rdx; 
0x0000000002403c: mov edx, [rax]; call rbx; 
0x00000000047234: mov edx, [rax]; mov [rbx+0x18], rdx; mov fs:[rax], rbx; call qword ptr [rbp+0xf08]; 
0x000000000240aa: mov edx, [rax]; mov rax, [rsp+0x18]; call rax; 
0x0000000008eae9: mov edx, [rbp+0x40]; sub rdx, rsi; mov [rsp], rcx; mov rdi, rbp; call rax; 
0x00000000152cde: mov edx, [rbp+0x8]; mov dword ptr [r10], 0xe; lea rsi, [r10+0x8]; mov rdi, rbp; call qword ptr [rdx+0x10]; 
0x00000000078b09: mov edx, [rbp-0x518]; jmp rax; 
0x0000000006c18f: mov edx, [rbp-0x5c0]; movsxd rax, [rcx+r12*4]; mov r11d, [rbp-0x5c8]; add rax, rcx; notrack jmp rax; 
0x00000000064038: mov edx, [rbp-0x630]; movsxd rax, [rcx+r12*4]; add rax, rcx; notrack jmp rax; 
0x0000000012aa24: mov edx, [rbp-0xd0]; mov edi, r14d; mov rdx, rax; mov rsi, r9; call qword ptr [r10+0x28]; 
0x00000000146a23: mov edx, [rbx+0x22c0]; mov rsi, r14; add qword ptr [rbx+0x22a8], 0x1; mov rdi, rbp; call qword ptr [rax+0x18]; 
0x00000000088a9d: mov edx, [rbx+0x40]; mov rdi, rbx; sub rdx, rsi; call qword ptr [rax+0x70]; 
0x00000000090bc3: mov edx, [rbx+0x40]; mov rdi, rbx; sub rdx, rsi; call qword ptr [rbp+0x70]; 
0x0000000010cc88: mov edx, [rbx+0xb0]; mov rsi, [rbx+0xa0]; mov rdi, [rbx+0x80]; call qword ptr [rax+0x88]; 
0x000000001816ff: mov edx, [rcx+rdx*4]; mov eax, [rcx+rax*4]; sub eax, edx; ret; 
0x0000000017fe2d: mov edx, [rcx+rdx*4]; sub eax, edx; ret; 
0x0000000012337e: mov edx, [rcx+rdx]; test edx, edx; jne short 0x0000000000123390; ret; 
0x00000000123cae: mov edx, [rcx+rdx]; test edx, edx; jne short 0x0000000000123cc0; ret; 
0x0000000012cf27: mov edx, [rdi+0x28]; xor eax, eax; test edx, edx; sete al; ret; 
0x000000000892b8: mov edx, [rdi+0x40]; sub rdx, rsi; mov [rsp+0x8], rcx; mov rdi, r15; call rax; 
0x00000000146140: mov edx, [rdi+0x5c]; lea rsi, [rdi+0x48]; mov rdi, r8; mov rax, [rax+0x18]; jmp rax; 
0x000000000ee4b9: mov edx, [rdi+0x70]; xor eax, eax; test byte ptr [rdx+0xc8], 0x40; jne 0x00000000000ee3ed; ret; 
0x000000000ee467: mov edx, [rdi+0x70]; xor eax, eax; test byte ptr [rdx+0xc8], 0x80; je 0x00000000000ee3ed; ret; 
0x00000000063043: mov edx, [rdi+0x88]; mov [rdx+0x8], rcx; mov dword ptr [rdx+0x4], 0x1; ret; 
0x000000001518b1: mov edx, [rdi+0x8]; mov [rsp], rax; call qword ptr [rdx+0x20]; 
0x00000000082824: mov edx, [rdi+0xa0]; mov [rdx+0xe0], rcx; ret; 
0x0000000008ce3f: mov edx, [rdi+0xa0]; mov rax, [rdx+0x20]; sub rax, [rdx+0x18]; sar rax, 0x2; ret; 
0x0000000008cd0f: mov edx, [rdi+0xa0]; mov rax, [rdx+0x38]; sub rax, [rdx+0x30]; sar rax, 0x2; ret; 
0x0000000007331d: mov edx, [rdi]; add [rbx-0x51f73], cl; jmp qword ptr [rcx+rcx*4+0x8]; 
0x0000000018bcb2: mov edx, [rdi]; cmp edx, [rsi]; jne short 0x000000000018bc9c; ret; 
0x00000000144964: mov edx, [rdi]; mov r8, rbp; mov rcx, r14; mov rdi, r13; call r12; 
0x00000000043e09: mov edx, [rdi]; test edx, edx; mov edx, 0x1; cmove eax, edx; ret; 
0x000000000bd23e: mov edx, [rdi]; xor eax, eax; test edx, edx; sete al; ret; 
0x000000001449c6: mov edx, [rdi]; xor r8d, r8d; mov rcx, r14; mov rdi, r13; call r12; 
0x00000000034254: mov edx, [rdx+0x48]; mov eax, [rdx+rax*4+0x200]; ret; 
0x00000000034224: mov edx, [rdx+0x58]; mov eax, [rdx+rax*4+0x200]; ret; 
0x00000000055096: mov edx, [rdx+0x88]; xor eax, eax; ret; 
0x0000000009e955: mov edx, [rdx+0x8]; test rdx, rdx; jne short 0x000000000009e950; ret; 
0x0000000010ff85: mov edx, [rdx+rax]; call qword ptr [rbx+0x40]; 
0x00000000110b35: mov edx, [rdx+rax]; mov rdi, [rbp-0x118]; mov rsi, r9; call qword ptr [rbp-0xf0]; 
0x00000000034251: mov edx, [rdx]; mov rdx, [rdx+0x48]; mov eax, [rdx+rax*4+0x200]; ret; 
0x00000000034221: mov edx, [rdx]; mov rdx, [rdx+0x58]; mov eax, [rdx+rax*4+0x200]; ret; 
0x0000000003424e: mov edx, [rdx]; mov rdx, [rdx]; mov rdx, [rdx+0x48]; mov eax, [rdx+rax*4+0x200]; ret; 
0x0000000003421e: mov edx, [rdx]; mov rdx, [rdx]; mov rdx, [rdx+0x58]; mov eax, [rdx+rax*4+0x200]; ret; 
0x000000000e2eb1: mov edx, [rip+0x108fb9]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000e2d91: mov edx, [rip+0x1090d9]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000e2cd1: mov edx, [rip+0x109199]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000de2f9: mov edx, [rip+0x10db71]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x000000000dd161: mov edx, [rip+0x10ed09]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000d10c1: mov edx, [rip+0x11ada9]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000d0f21: mov edx, [rip+0x11af49]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000d0e09: mov edx, [rip+0x11b061]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000062f01: mov edx, [rip+0x188f69]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000062ec9: mov edx, [rip+0x188fa1]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000482b1: mov edx, [rip+0x1a3bb9]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x000000000434e1: mov edx, [rip+0x1a8989]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000043451: mov edx, [rip+0x1a8a19]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000034573: mov edx, [rip+0x1b79af]; add rax, 0x200; mov fs:[rdx], rax; ret; 
0x00000000024186: mov edx, [rip+0x1c7cd4]; lea rdi, [rip+0x18fcef]; mov rsi, [rax]; xor eax, eax; call qword ptr [rdx+0x1d0]; 
0x00000000023a68: mov edx, [rip+0x1c8422]; cmp [rdx+0xd8], rax; jne short 0x0000000000023a3b; ret; 
0x0000000012e7f1: mov edx, [rip+0xbd679]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000121279: mov edx, [rip+0xcabf1]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000121241: mov edx, [rip+0xcac29]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000121209: mov edx, [rip+0xcac61]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000001211d9: mov edx, [rip+0xcac91]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x000000001211a1: mov edx, [rip+0xcacc9]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000001210c9: mov edx, [rip+0xcada1]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000121089: mov edx, [rip+0xcade1]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000121059: mov edx, [rip+0xcae11]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000121011: mov edx, [rip+0xcae59]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000120f51: mov edx, [rip+0xcaf19]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000120ce1: mov edx, [rip+0xcb189]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000120c39: mov edx, [rip+0xcb231]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000120b81: mov edx, [rip+0xcb2e9]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000120739: mov edx, [rip+0xcb731]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000120671: mov edx, [rip+0xcb7f9]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x000000001205d1: mov edx, [rip+0xcb899]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000120511: mov edx, [rip+0xcb959]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000120471: mov edx, [rip+0xcb9f9]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x000000001203b1: mov edx, [rip+0xcbab9]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000120231: mov edx, [rip+0xcbc39]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000120161: mov edx, [rip+0xcbd09]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000011f871: mov edx, [rip+0xcc5f9]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000011f791: mov edx, [rip+0xcc6d9]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000011f6e9: mov edx, [rip+0xcc781]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000011f621: mov edx, [rip+0xcc849]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000011f571: mov edx, [rip+0xcc8f9]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000011f4c1: mov edx, [rip+0xcc9a9]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000011f331: mov edx, [rip+0xccb39]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000011f2e9: mov edx, [rip+0xccb81]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000011f1d9: mov edx, [rip+0xccc91]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000121d2f: mov edx, [rip+0xcdd23]; add word ptr [rdx+rax*2], 0x1; ret; 
0x0000000011c501: mov edx, [rip+0xcf969]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000118a71: mov edx, [rip+0xd33f9]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000116d39: mov edx, [rip+0xd5131]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000116d09: mov edx, [rip+0xd5161]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000116cd1: mov edx, [rip+0xd5199]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000116ae9: mov edx, [rip+0xd5381]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000115361: mov edx, [rip+0xd6b09]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000001152e1: mov edx, [rip+0xd6b89]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000115221: mov edx, [rip+0xd6c49]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000115021: mov edx, [rip+0xd6e49]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000114689: mov edx, [rip+0xd77e1]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x000000001145c9: mov edx, [rip+0xd78a1]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000114511: mov edx, [rip+0xd7959]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000114471: mov edx, [rip+0xd79f9]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x000000001141f1: mov edx, [rip+0xd7c79]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000113df1: mov edx, [rip+0xd8079]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000113db1: mov edx, [rip+0xd80b9]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000113be9: mov edx, [rip+0xd8281]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000001138f9: mov edx, [rip+0xd8571]; mov esi, 0x5401; mov eax, r8d; mov ebx, fs:[r10]; syscall; 
0x000000001136b9: mov edx, [rip+0xd87b1]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000113681: mov edx, [rip+0xd87e9]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000113649: mov edx, [rip+0xd8821]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000113389: mov edx, [rip+0xd8ae1]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000113341: mov edx, [rip+0xd8b29]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000113291: mov edx, [rip+0xd8bd9]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000113131: mov edx, [rip+0xd8d39]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000001130f1: mov edx, [rip+0xd8d79]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000113099: mov edx, [rip+0xd8dd1]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x000000001129f1: mov edx, [rip+0xd9479]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010ea11: mov edx, [rip+0xdd459]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010e891: mov edx, [rip+0xdd5d9]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010e179: mov edx, [rip+0xddcf1]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010e149: mov edx, [rip+0xddd21]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000010e101: mov edx, [rip+0xddd69]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000010e061: mov edx, [rip+0xdde09]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000010dc39: mov edx, [rip+0xde231]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010da01: mov edx, [rip+0xde469]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010d9a1: mov edx, [rip+0xde4c9]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010d941: mov edx, [rip+0xde529]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010d5b9: mov edx, [rip+0xde8b1]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010d559: mov edx, [rip+0xde911]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010d4f9: mov edx, [rip+0xde971]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010c2b1: mov edx, [rip+0xdfbb9]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000010c201: mov edx, [rip+0xdfc69]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000016dd21: mov edx, [rsi+0x1]; mov cx, [rsi]; mov [rdi+0x1], dx; mov [rdi], cx; ret; 
0x0000000016dc40: mov edx, [rsi+0x1]; mov ecx, [rsi]; mov [rdi+0x1], edx; mov [rdi], ecx; ret; 
0x0000000016da81: mov edx, [rsi+0x1]; mov rcx, [rsi]; mov [rdi+0x1], rdx; mov [rdi], rcx; ret; 
0x0000000014ed61: mov edx, [rsi+0x1c8]; add rsi, 0x38; jmp qword ptr [rax+0x18]; 
0x0000000007b314: mov edx, [rsi+0x20]; mov rdi, r13; sub rdx, rsi; sar rdx, 0x2; call qword ptr [r12+0x38]; 
0x00000000074a9b: mov edx, [rsi+0x20]; mov rdi, r15; sub rdx, rsi; call qword ptr [rbx+0x38]; 
0x0000000016dbd0: mov edx, [rsi+0x2]; mov ecx, [rsi]; mov [rdi+0x2], edx; mov [rdi], ecx; ret; 
0x0000000016da11: mov edx, [rsi+0x2]; mov rcx, [rsi]; mov [rdi+0x2], rdx; mov [rdi], rcx; ret; 
0x000000000b8532: mov edx, [rsi+0x3]; mov [rdi], ecx; mov [rdi+0x3], edx; lea rax, [rdi+0x6]; ret; 
0x000000000b9382: mov edx, [rsi+0x3]; mov [rdi], ecx; mov [rdi+0x3], edx; lea rax, [rdi+0x7]; ret; 
0x000000000b6ee2: mov edx, [rsi+0x3]; mov [rdi], ecx; mov [rdi+0x3], edx; ret; 
0x0000000016db60: mov edx, [rsi+0x3]; mov ecx, [rsi]; mov [rdi+0x3], edx; mov [rdi], ecx; ret; 
0x0000000016d9a1: mov edx, [rsi+0x3]; mov rcx, [rsi]; mov [rdi+0x3], rdx; mov [rdi], rcx; ret; 
0x000000000b8513: mov edx, [rsi+0x4]; mov [rdi], ecx; mov [rdi+0x4], dx; lea rax, [rdi+0x5]; ret; 
0x000000000b9363: mov edx, [rsi+0x4]; mov [rdi], ecx; mov [rdi+0x4], dx; lea rax, [rdi+0x6]; ret; 
0x000000000b6ed3: mov edx, [rsi+0x4]; mov [rdi], ecx; mov [rdi+0x4], dx; ret; 
0x0000000016d931: mov edx, [rsi+0x4]; mov rcx, [rsi]; mov [rdi+0x4], rdx; mov [rdi], rcx; ret; 
0x000000000b85c4: mov edx, [rsi+0x5]; mov [rdi], rcx; mov [rdi+0x5], rdx; lea rax, [rdi+0xc]; ret; 
0x000000000b9424: mov edx, [rsi+0x5]; mov [rdi], rcx; mov [rdi+0x5], rdx; lea rax, [rdi+0xd]; ret; 
0x000000000b6f44: mov edx, [rsi+0x5]; mov [rdi], rcx; mov [rdi+0x5], rdx; ret; 
0x0000000016d8c1: mov edx, [rsi+0x5]; mov rcx, [rsi]; mov [rdi+0x5], rdx; mov [rdi], rcx; ret; 
0x000000000b85e4: mov edx, [rsi+0x6]; mov [rdi], rcx; mov [rdi+0x6], rdx; lea rax, [rdi+0xd]; ret; 
0x000000000b9444: mov edx, [rsi+0x6]; mov [rdi], rcx; mov [rdi+0x6], rdx; lea rax, [rdi+0xe]; ret; 
0x000000000b6f54: mov edx, [rsi+0x6]; mov [rdi], rcx; mov [rdi+0x6], rdx; ret; 
0x0000000016d851: mov edx, [rsi+0x6]; mov rcx, [rsi]; mov [rdi+0x6], rdx; mov [rdi], rcx; ret; 
0x000000000b8583: mov edx, [rsi+0x7]; mov [rdi], rcx; mov [rdi+0x7], edx; lea rax, [rdi+0xa]; ret; 
0x000000000b93e3: mov edx, [rsi+0x7]; mov [rdi], rcx; mov [rdi+0x7], edx; lea rax, [rdi+0xb]; ret; 
0x000000000b6f23: mov edx, [rsi+0x7]; mov [rdi], rcx; mov [rdi+0x7], edx; ret; 
0x000000000b8604: mov edx, [rsi+0x7]; mov [rdi], rcx; mov [rdi+0x7], rdx; lea rax, [rdi+0xe]; ret; 
0x000000000b9464: mov edx, [rsi+0x7]; mov [rdi], rcx; mov [rdi+0x7], rdx; lea rax, [rdi+0xf]; ret; 
0x000000000b6f64: mov edx, [rsi+0x7]; mov [rdi], rcx; mov [rdi+0x7], rdx; ret; 
0x0000000016d7e1: mov edx, [rsi+0x7]; mov rcx, [rsi]; mov [rdi+0x7], rdx; mov [rdi], rcx; ret; 
0x000000000b8564: mov edx, [rsi+0x8]; mov [rdi], rcx; mov [rdi+0x8], dx; lea rax, [rdi+0x9]; ret; 
0x000000000b93c4: mov edx, [rsi+0x8]; mov [rdi], rcx; mov [rdi+0x8], dx; lea rax, [rdi+0xa]; ret; 
0x000000000b6f14: mov edx, [rsi+0x8]; mov [rdi], rcx; mov [rdi+0x8], dx; ret; 
0x000000000b85a3: mov edx, [rsi+0x8]; mov [rdi], rcx; mov [rdi+0x8], edx; lea rax, [rdi+0xb]; ret; 
0x000000000b9403: mov edx, [rsi+0x8]; mov [rdi], rcx; mov [rdi+0x8], edx; lea rax, [rdi+0xc]; ret; 
0x000000000b6f33: mov edx, [rsi+0x8]; mov [rdi], rcx; mov [rdi+0x8], edx; ret; 
0x0000000018a4e2: mov edx, [rsi+r8-0x4]; mov [rdi], ecx; mov [rdi+r8-0x4], edx; vzeroupper; ret; 
0x0000000018a4e3: mov edx, [rsi+rax-0x4]; mov [rdi], ecx; mov [rdi+r8-0x4], edx; vzeroupper; ret; 
0x0000000018a504: mov edx, [rsi+rax-0x8]; mov [rdi], rcx; mov [rdi+r8-0x8], rdx; vzeroupper; ret; 
0x00000000167be1: mov edx, [rsi-0x2]; mov [rdi-0x2], dx; ret; 
0x00000000167dc1: mov edx, [rsi-0x3]; mov cx, [rsi-0x2]; mov [rdi-0x3], dx; mov [rdi-0x2], cx; ret; 
0x000000001679d8: mov edx, [rsi-0x4]; mov [rdi-0x11], r11; mov [rdi-0x9], rcx; mov [rdi-0x4], edx; ret; 
0x00000000167bb8: mov edx, [rsi-0x4]; mov [rdi-0x12], r11; mov [rdi-0xa], rcx; mov [rdi-0x4], edx; ret; 
0x00000000167d98: mov edx, [rsi-0x4]; mov [rdi-0x13], r11; mov [rdi-0xb], rcx; mov [rdi-0x4], edx; ret; 
0x00000000167f78: mov edx, [rsi-0x4]; mov [rdi-0x14], r11; mov [rdi-0xc], rcx; mov [rdi-0x4], edx; ret; 
0x00000000167fa0: mov edx, [rsi-0x4]; mov [rdi-0x4], edx; ret; 
0x000000001679f4: mov edx, [rsi-0x4]; mov [rdi-0x9], rcx; mov [rdi-0x4], edx; ret; 
0x00000000167bd4: mov edx, [rsi-0x4]; mov [rdi-0xa], rcx; mov [rdi-0x4], edx; ret; 
0x00000000167db4: mov edx, [rsi-0x4]; mov [rdi-0xb], rcx; mov [rdi-0x4], edx; ret; 
0x00000000167f94: mov edx, [rsi-0x4]; mov [rdi-0xc], rcx; mov [rdi-0x4], edx; ret; 
0x000000001681a0: mov edx, [rsi-0x5]; mov ecx, [rsi-0x4]; mov [rdi-0x5], edx; mov [rdi-0x4], ecx; ret; 
0x000000001683a0: mov edx, [rsi-0x6]; mov ecx, [rsi-0x4]; mov [rdi-0x6], edx; mov [rdi-0x4], ecx; ret; 
0x000000001685a0: mov edx, [rsi-0x7]; mov ecx, [rsi-0x4]; mov [rdi-0x7], edx; mov [rdi-0x4], ecx; ret; 
0x00000000167815: mov edx, [rsi-0x8]; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x00000000168169: mov edx, [rsi-0x8]; mov [rdi-0x15], r11; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000168369: mov edx, [rsi-0x8]; mov [rdi-0x16], r11; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000168569: mov edx, [rsi-0x8]; mov [rdi-0x17], r11; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x000000001677f9: mov edx, [rsi-0x8]; mov [rdi-0x18], r10; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x00000000167831: mov edx, [rsi-0x8]; mov [rdi-0x8], rdx; ret; 
0x00000000168185: mov edx, [rsi-0x8]; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000168385: mov edx, [rsi-0x8]; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000168585: mov edx, [rsi-0x8]; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000016d311: mov edx, [rsi-0x9]; mov ecx, [rsi-0x4]; mov [rdi-0x9], rdx; mov [rdi-0x4], ecx; ret; 
0x0000000016d291: mov edx, [rsi-0xa]; mov ecx, [rsi-0x4]; mov [rdi-0xa], rdx; mov [rdi-0x4], ecx; ret; 
0x0000000016d211: mov edx, [rsi-0xb]; mov ecx, [rsi-0x4]; mov [rdi-0xb], rdx; mov [rdi-0x4], ecx; ret; 
0x0000000016d191: mov edx, [rsi-0xc]; mov ecx, [rsi-0x4]; mov [rdi-0xc], rdx; mov [rdi-0x4], ecx; ret; 
0x0000000016d101: mov edx, [rsi-0xd]; mov rcx, [rsi-0x8]; mov [rdi-0xd], rdx; mov [rdi-0x8], rcx; ret; 
0x0000000016d071: mov edx, [rsi-0xe]; mov rcx, [rsi-0x8]; mov [rdi-0xe], rdx; mov [rdi-0x8], rcx; ret; 
0x0000000016cfe1: mov edx, [rsi-0xf]; mov rcx, [rsi-0x8]; mov [rdi-0xf], rdx; mov [rdi-0x8], rcx; ret; 
0x000000000b84d1: mov edx, [rsi]; mov [rdi], dx; lea rax, [rdi+0x1]; ret; 
0x000000000b9311: mov edx, [rsi]; mov [rdi], dx; lea rax, [rdi+0x2]; ret; 
0x000000000b6e91: mov edx, [rsi]; mov [rdi], dx; ret; 
0x000000000baf71: mov edx, [rsi]; mov [rdi], dx; xor ch, ch; mov [rdi+0x2], ch; ret; 
0x000000000b84f0: mov edx, [rsi]; mov [rdi], edx; lea rax, [rdi+0x3]; ret; 
0x0000000018ab30: mov edx, [rsi]; mov [rdi], edx; lea rax, [rdi+0x3]; vzeroupper; ret; 
0x000000000b9340: mov edx, [rsi]; mov [rdi], edx; lea rax, [rdi+0x4]; ret; 
0x000000000b6eb0: mov edx, [rsi]; mov [rdi], edx; ret; 
0x00000000189090: mov edx, [rsi]; mov [rdi], edx; vzeroupper; ret; 
0x000000000bafa0: mov edx, [rsi]; mov [rdi], edx; xor ch, ch; mov [rdi+0x4], ch; ret; 
0x000000000b8541: mov edx, [rsi]; mov [rdi], rdx; lea rax, [rdi+0x7]; ret; 
0x000000000b9391: mov edx, [rsi]; mov [rdi], rdx; lea rax, [rdi+0x8]; ret; 
0x000000000b6ef1: mov edx, [rsi]; mov [rdi], rdx; ret; 
0x000000000baff1: mov edx, [rsi]; mov [rdi], rdx; xor ch, ch; mov [rdi+0x8], ch; ret; 
0x0000000014f749: mov edx, [rsp+0x10]; lea rax, [rip+0x642ac]; movsxd rdx, [rax+rdx*4]; add rdx, rax; notrack jmp rdx; 
0x000000000a8a69: mov edx, [rsp+0x10]; mov [rax], rdx; ret; 
0x000000000e2d5e: mov edx, [rsp+0x10]; mov eax, 0xf7; syscall; 
0x0000000012293d: mov edx, [rsp+0x10]; mov rcx, [rsp+0x8]; mov rax, [rsp]; add rsp, 0x38; ret; 
0x0000000012299e: mov edx, [rsp+0x10]; mov rcx, [rsp+0x8]; mov rax, [rsp]; add rsp, 0x40; ret; 
0x0000000011f2b2: mov edx, [rsp+0x10]; mov rsi, [rsp+0x8]; mov eax, 0x119; mov edi, [rsp+0x4]; syscall; 
0x00000000120c04: mov edx, [rsp+0x10]; mov rsi, [rsp+0x8]; mov eax, 0x12b; mov edi, [rsp+0x4]; syscall; 
0x00000000120447: mov edx, [rsp+0x10]; mov rsi, [rsp+0x8]; syscall; 
0x00000000120599: mov edx, [rsp+0x10]; mov rsi, [rsp+0x8]; xor r8d, r8d; mov eax, 0x2c; syscall; 
0x00000000120379: mov edx, [rsp+0x10]; mov rsi, [rsp+0x8]; xor r8d, r8d; mov eax, 0x2d; syscall; 
0x00000000127d1c: mov edx, [rsp+0x10]; xor esi, esi; mov edi, 0x2000004; call rax; 
0x00000000114598: mov edx, [rsp+0x14]; mov rsi, [rsp+0x8]; mov eax, 0x127; syscall; 
0x00000000114658: mov edx, [rsp+0x14]; mov rsi, [rsp+0x8]; mov eax, 0x128; syscall; 
0x000000000a8991: mov edx, [rsp+0x18]; mov [rdi], rdx; add rax, rdi; ret; 
0x00000000120700: mov edx, [rsp+0x18]; mov eax, 0x2c; mov rsi, [rsp+0x10]; mov edi, [rsp+0x8]; syscall; 
0x00000000146da4: mov edx, [rsp+0x18]; mov rsi, [rsp+0x10]; call qword ptr [rax]; 
0x00000000114fe7: mov edx, [rsp+0x18]; mov rsi, [rsp+0x10]; mov eax, 0x17; mov edi, [rsp+0xc]; syscall; 
0x00000000120fd7: mov edx, [rsp+0x18]; mov rsi, [rsp+0x10]; mov eax, 0x46; mov edi, [rsp+0x8]; syscall; 
0x00000000054172: mov edx, [rsp+0x18]; xor rdx, fs:[0x28]; jne short 0x0000000000054189; add rsp, 0xd8; ret; 
0x00000000061ef9: mov edx, [rsp+0x18]; xor rdx, fs:[0x28]; jne short 0x0000000000061f10; add rsp, 0xd8; ret; 
0x000000000d105c: mov edx, [rsp+0x18]; xor rdx, fs:[0x28]; jne short 0x00000000000d1094; add rsp, 0x28; ret; 
0x0000000010d19e: mov edx, [rsp+0x18]; xor rdx, fs:[0x28]; jne short 0x000000000010d1c1; add rsp, 0x28; ret; 
0x00000000114cd1: mov edx, [rsp+0x18]; xor rdx, fs:[0x28]; jne short 0x0000000000114ce5; add rsp, 0x28; ret; 
0x00000000115890: mov edx, [rsp+0x18]; xor rdx, fs:[0x28]; jne short 0x00000000001158a4; add rsp, 0x28; ret; 
0x0000000012df72: mov edx, [rsp+0x18]; xor rdx, fs:[0x28]; jne short 0x000000000012df95; add rsp, 0xd8; ret; 
0x0000000012e08c: mov edx, [rsp+0x18]; xor rdx, fs:[0x28]; jne short 0x000000000012e0a3; add rsp, 0xd8; ret; 
0x0000000012ef92: mov edx, [rsp+0x18]; xor rdx, fs:[0x28]; jne short 0x000000000012efb5; add rsp, 0xd8; ret; 
0x0000000012f0ac: mov edx, [rsp+0x18]; xor rdx, fs:[0x28]; jne short 0x000000000012f0c3; add rsp, 0xd8; ret; 
0x00000000160d13: mov edx, [rsp+0x18]; xor rdx, fs:[0x28]; jne short 0x0000000000160d27; add rsp, 0x28; ret; 
0x000000000e2d59: mov edx, [rsp+0x1c]; mov rdx, [rsp+0x10]; mov eax, 0xf7; syscall; 
0x00000000115102: mov edx, [rsp+0x20]; mov eax, 0x10e; mov rsi, [rsp+0x18]; mov edi, [rsp+0x14]; syscall; 
0x0000000014d40a: mov edx, [rsp+0x20]; mov rdi, r12; call rdx; 
0x0000000011f6af: mov edx, [rsp+0x28]; mov eax, 0x113; mov rsi, [rsp+0x10]; mov edi, [rsp+0x8]; syscall; 
0x0000000011305f: mov edx, [rsp+0x28]; mov eax, 0x146; mov rsi, [rsp+0x10]; mov edi, [rsp+0x8]; syscall; 
0x000000000df02b: mov edx, [rsp+0x28]; mov rax, [rsp+0x18]; call rax; 
0x000000001365f2: mov edx, [rsp+0x28]; xor rdx, fs:[0x28]; jne short 0x0000000000136629; add rsp, 0x38; ret; 
0x00000000130286: mov edx, [rsp+0x38]; call qword ptr [rsp+0x60]; 
0x000000000ded7e: mov edx, [rsp+0x68]; mov rdi, r15; mov rsi, [rsp+0x60]; call r12; 
0x000000000279e6: mov edx, [rsp+0x68]; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x60]; mov rax, [rsp+0x20]; call rax; 
0x0000000013c8b7: mov edx, [rsp+0x8]; jne short 0x000000000013c8d4; add rsp, 0x20; pop rbp; ret; 
0x0000000011f14a: mov edx, [rsp+0x8]; mov eax, 0x38; syscall; 
0x0000000008f41b: mov edx, [rsp+0x8]; mov rsi, r13; mov rdi, rbx; call qword ptr [rbp+0x70]; 
0x00000000062e0a: mov edx, [rsp+0x8]; xor rdx, fs:[0x28]; jne short 0x0000000000062e27; add rsp, 0x18; ret; 
0x000000000da6df: mov edx, [rsp+0x8]; xor rdx, fs:[0x28]; jne short 0x00000000000da6f3; add rsp, 0x18; ret; 
0x000000000dcfaf: mov edx, [rsp+0x8]; xor rdx, fs:[0x28]; jne short 0x00000000000dcfc3; add rsp, 0x18; ret; 
0x0000000010d4b5: mov edx, [rsp+0x8]; xor rdx, fs:[0x28]; jne short 0x000000000010d4c9; add rsp, 0x18; ret; 
0x0000000013ea83: mov edx, [rsp+0x8]; xor rdx, fs:[0x28]; jne short 0x000000000013ea97; add rsp, 0x18; ret; 
0x0000000015c9d5: mov edx, [rsp+0x8]; xor rdx, fs:[0x28]; jne short 0x000000000015ca14; add rsp, 0x18; ret; 
0x00000000144edc: mov edx, [rsp+0xe0]; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; call qword ptr [rsp+0x68]; 
0x000000000a8aa8: mov edx, [rsp-0x10]; mov [rax], edx; movzx edx, byte ptr [rsp-0xc]; mov [rax+0x4], dl; ret; 
0x000000000a8ac0: mov edx, [rsp-0x18]; mov [rax], edx; movzx edx, word ptr [rsp-0x14]; mov [rax+0x4], dx; ret; 
0x00000000104433: mov edx, [rsp]; mov rax, [rbp-0x1e0]; call rax; 
0x00000000041d31: mov edx, eax; and edx, 0x7fffffff; or edx, esi; je 0x0000000000041c88; ret; 
0x000000000bc19c: mov edx, eax; and edx, 0xf; movsxd rax, [rsi+rdx*4]; add rax, rsi; notrack jmp rax; 
0x00000000127e90: mov edx, eax; call qword ptr [r12+0x28]; 
0x0000000012a064: mov edx, eax; call qword ptr [r13+0x28]; 
0x000000001492d2: mov edx, eax; call qword ptr [rbx+0x10]; 
0x00000000128887: mov edx, eax; call qword ptr [rbx+0x28]; 
0x0000000013f0c1: mov edx, eax; mov byte ptr [r10], 0x0; ret; 
0x00000000043010: mov edx, eax; mov eax, 0xea; syscall; 
0x000000000bc7c8: mov edx, eax; mov eax, [r8+rax*4]; sub eax, [r8+r9*4]; je short 0x00000000000bc7b0; ret; 
0x0000000011f144: mov edx, eax; mov r8, r9; mov r10, [rsp+0x8]; mov eax, 0x38; syscall; 
0x00000000118761: mov edx, eax; mov r8, r9; mov r9, [rsp+0x8]; syscall; 
0x00000000093576: mov edx, eax; mov rax, [rax]; test rax, rax; jne short 0x0000000000093570; ret; 
0x0000000007bbc5: mov edx, eax; mov rsi, r12; mov rdi, r13; call qword ptr [r15+0x38]; 
0x0000000008f7cd: mov edx, eax; mov rsi, r12; mov rdi, rbp; call qword ptr [rax+0x78]; 
0x0000000005d417: mov edx, eax; mov rsi, r14; mov rdi, r12; mov [rbp-0xe8], r8; call rax; 
0x0000000012aa2e: mov edx, eax; mov rsi, r9; call qword ptr [r10+0x28]; 
0x0000000011351b: mov edx, eax; mov rsi, r9; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x000000000da96a: mov edx, eax; movsxd rax, [rcx+rdx*4]; add rax, rcx; notrack jmp rax; 
0x000000000551b9: mov edx, eax; movsxd rdx, [rsi+rdx*4]; add rdx, rsi; cmp ecx, 0x2f; notrack jmp rdx; 
0x0000000011f8bc: mov edx, eax; or eax, esi; wrpkru; xor eax, eax; ret; 
0x0000000009b95c: mov edx, eax; pop rbx; pop rbp; pop r12; jmp rax; 
0x0000000007d0dd: mov edx, ebp; call qword ptr [rax+0x38]; 
0x00000000131d49: mov edx, ebp; call qword ptr [rsp+0x60]; 
0x000000000ca899: mov edx, ebp; call rbx; 
0x0000000010e3e1: mov edx, ebp; mov eax, 0x10d; syscall; 
0x00000000119aaa: mov edx, ebp; mov esi, 0x1; call r12; 
0x000000000bd8e8: mov edx, ebp; mov r9, [rsp+0x10]; mov rdi, r12; mov rsi, [rsp+0x18]; call rbx; 
0x0000000009d302: mov edx, ebp; mov rdi, r12; call rax; 
0x00000000045153: mov edx, ebp; mov rdi, r12; call rbx; 
0x000000000dd1d6: mov edx, ebp; mov rdx, r12; mov esi, ebp; mov eax, 0xe6; syscall; 
0x000000000756b1: mov edx, ebp; mov rsi, r10; mov rdi, r15; call qword ptr [rax+0x38]; 
0x00000000074f50: mov edx, ebp; mov rsi, r10; mov rdi, r15; call qword ptr [rbx+0x38]; 
0x0000000009e0ef: mov edx, ebp; mov rsi, r12; call rax; 
0x0000000004484e: mov edx, ebp; mov rsi, r12; call rbx; 
0x00000000044871: mov edx, ebp; mov rsi, r12; mov rdi, r13; call rbx; 
0x00000000074cad: mov edx, ebp; mov rsi, r12; mov rdi, r15; call qword ptr [rax+0x38]; 
0x0000000008e75f: mov edx, ebp; mov rsi, r12; mov rdi, rbp; call qword ptr [r15+0x40]; 
0x0000000008eb7f: mov edx, ebp; mov rsi, r12; mov rdi, rbp; call qword ptr [r15+0x80]; 
0x00000000149db6: mov edx, ebp; mov rsi, r12; mov rdi, rbp; call rax; 
0x00000000090975: mov edx, ebp; mov rsi, r12; mov rdi, rbx; call qword ptr [r14+0x78]; 
0x0000000013414c: mov edx, ebp; mov rsi, r13; mov edi, r12d; call qword ptr [rsp+0x40]; 
0x00000000133b7c: mov edx, ebp; mov rsi, r13; mov rdi, r12; call qword ptr [rsp+0x40]; 
0x0000000004488c: mov edx, ebp; mov rsi, r15; mov rdi, r12; call rbx; 
0x0000000008f192: mov edx, ebp; mov rsi, r15; mov rdi, rbp; call qword ptr [rax+0x40]; 
0x000000000e0081: mov edx, ebp; mov rsi, rbp; mov edi, r14d; call qword ptr [rsp+0x48]; 
0x000000000e0521: mov edx, ebp; mov rsi, rbp; mov rdi, r14; call qword ptr [rsp+0x48]; 
0x00000000085a74: mov edx, ebp; mov rsi, rbp; mov rdi, rbx; call qword ptr [r14+0x38]; 
0x00000000152a01: mov edx, ebp; mov rsi, rbx; call rax; 
0x00000000109089: mov edx, ebp; movsxd rax, [rcx+rdx*4]; add rax, rcx; notrack jmp rax; 
0x0000000012c403: mov edx, ebp; movups [rbp-0x78], xmm4; call rax; 
0x0000000012c913: mov edx, ebp; movups [rbp-0x78], xmm6; call rax; 
0x0000000012c9e1: mov edx, ebp; movups [rbp-0x78], xmm7; call rax; 
0x0000000006bef6: mov edx, ebp; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000bd794: mov edx, ebp; xor r8d, r8d; mov rdi, r12; lea r9, [rsp+0x30]; call rbx; 
0x000000001498dc: mov edx, ebx; call qword ptr [r13+0x10]; 
0x0000000007a3c2: mov edx, ebx; call qword ptr [r13+0x38]; 
0x0000000011890a: mov edx, ebx; mov rdi, rbp; mov eax, 0x9; syscall; 
0x0000000007e84f: mov edx, ebx; mov rsi, r10; mov rdi, r12; call qword ptr [rax+0x38]; 
0x0000000008451f: mov edx, ebx; mov rsi, r12; call qword ptr [r14+0x38]; 
0x000000000753e2: mov edx, ebx; mov rsi, r12; mov rdi, r15; call qword ptr [rax+0x38]; 
0x00000000075981: mov edx, ebx; mov rsi, r12; mov rdi, r15; call qword ptr [rcx+0x38]; 
0x0000000008e3a4: mov edx, ebx; mov rsi, r12; mov rdi, rbp; call qword ptr [r13+0x38]; 
0x00000000085b57: mov edx, ebx; mov rsi, r13; mov rdi, rbp; call qword ptr [r14+0x38]; 
0x0000000011f855: mov edx, ecx; cmp ecx, 0xffffffff; je short 0x000000000011f888; mov eax, 0x149; syscall; 
0x0000000010d9e0: mov edx, ecx; cmp r9d, 0x1; ja short 0x000000000010da18; mov eax, 0x106; syscall; 
0x0000000010f425: mov edx, ecx; mov eax, 0x104; syscall; 
0x00000000062ee5: mov edx, ecx; mov eax, 0x108; syscall; 
0x0000000010fc15: mov edx, ecx; mov eax, 0x109; syscall; 
0x0000000010fcd5: mov edx, ecx; mov eax, 0x10b; syscall; 
0x000000001130d5: mov edx, ecx; mov eax, 0x118; syscall; 
0x00000000113665: mov edx, ecx; mov eax, 0x11; syscall; 
0x0000000011feb5: mov edx, ecx; mov eax, 0x11e; syscall; 
0x0000000011f9a5: mov edx, ecx; mov eax, 0x12d; syscall; 
0x0000000011f3e5: mov edx, ecx; mov eax, 0x12e; syscall; 
0x0000000011ff45: mov edx, ecx; mov eax, 0x12f; syscall; 
0x0000000011ffa5: mov edx, ecx; mov eax, 0x136; syscall; 
0x0000000011ffd5: mov edx, ecx; mov eax, 0x137; syscall; 
0x0000000010d8b5: mov edx, ecx; mov eax, 0x14c; syscall; 
0x0000000011fcd5: mov edx, ecx; mov eax, 0x19; syscall; 
0x00000000112fd5: mov edx, ecx; mov eax, 0x28; syscall; 
0x00000000120805: mov edx, ecx; mov eax, 0x35; syscall; 
0x00000000120775: mov edx, ecx; mov eax, 0x36; syscall; 
0x000000001202c5: mov edx, ecx; mov eax, 0x37; syscall; 
0x0000000011fd65: mov edx, ecx; mov eax, 0x9d; syscall; 
0x0000000011fca5: mov edx, ecx; mov eax, 0xa5; syscall; 
0x0000000011fb85: mov edx, ecx; mov eax, 0xaf; syscall; 
0x0000000011fd95: mov edx, ecx; mov eax, 0xb2; syscall; 
0x0000000011fdc5: mov edx, ecx; mov eax, 0xb3; syscall; 
0x0000000011cfd5: mov edx, ecx; mov eax, 0xbc; syscall; 
0x0000000011cf75: mov edx, ecx; mov eax, 0xbd; syscall; 
0x0000000011ce55: mov edx, ecx; mov eax, 0xbe; syscall; 
0x0000000011ce85: mov edx, ecx; mov eax, 0xbf; syscall; 
0x0000000011cee5: mov edx, ecx; mov eax, 0xc0; syscall; 
0x0000000011cdc5: mov edx, ecx; mov eax, 0xc1; syscall; 
0x00000000118b05: mov edx, ecx; mov eax, 0xd8; syscall; 
0x00000000121185: mov edx, ecx; mov eax, 0xdc; syscall; 
0x00000000112b15: mov edx, ecx; mov eax, 0xdd; syscall; 
0x0000000011fb25: mov edx, ecx; mov eax, 0xe9; syscall; 
0x0000000011875e: mov edx, ecx; mov r10, r8; mov r8, r9; mov r9, [rsp+0x8]; syscall; 
0x0000000007d84f: mov edx, ecx; mov rsi, r10; mov rdi, r12; mov [rbp-0x4e0], r9; call qword ptr [r8+0x38]; 
0x0000000007dea4: mov edx, ecx; mov rsi, r10; mov rdi, r12; mov [rbp-0x4e0], r9; call qword ptr [rbx+0x38]; 
0x0000000007c1ee: mov edx, ecx; mov rsi, r12; mov rdi, r13; call qword ptr [r15+0x38]; 
0x0000000007a945: mov edx, ecx; mov rsi, r12; mov rdi, r13; call qword ptr [rax+0x38]; 
0x00000000062f25: mov edx, ecx; test r8d, r8d; je short 0x0000000000062f70; mov eax, 0x13c; syscall; 
0x00000000113115: mov edx, ecx; test rsi, rsi; je short 0x0000000000113142; mov eax, 0x118; syscall; 
0x000000001146f1: mov edx, ecx; xor r8d, r8d; mov eax, 0x147; syscall; 
0x00000000114851: mov edx, ecx; xor r8d, r8d; mov eax, 0x148; syscall; 
0x0000000007699d: mov edx, edi; call qword ptr [rax+0x38]; 
0x00000000115344: mov edx, edi; mov esi, 0x28121969; mov edi, 0xfee1dead; mov eax, 0xa9; syscall; 
0x0000000007711a: mov edx, edi; mov rsi, r11; mov rdi, r12; mov [rbp-0x4e0], r10; call qword ptr [rcx+0x38]; 
0x00000000044bac: mov edx, edi; mov rsi, r12; mov rdi, r14; call rbp; 
0x0000000009d9db: mov edx, edi; mov rsi, r14; mov rdi, r13; call rax; 
0x0000000013494e: mov edx, edi; mov rsi, r14; mov rdi, rbx; call rax; 
0x00000000076f33: mov edx, edi; mov rsi, r8; mov rdi, r12; mov [rbp-0x4f0], r10; call qword ptr [rax+0x38]; 
0x0000000012c6eb: mov edx, edi; movups [rbp-0x78], xmm1; call rax; 
0x000000000bbf85: mov edx, edi; rep stosb [rdi]; mov rax, rdx; ret; 
0x000000000d4260: mov edx, edi; ror edx, 0x2; cmp edx, 0x28f5c28; jbe short 0x00000000000d4270; ret; 
0x00000000077f7c: mov edx, edx; jmp rax; 
0x00000000076d28: mov edx, edx; mov dword ptr [rbp-0x4e0], 0x1; jmp rax; 
0x00000000077a31: mov edx, edx; mov dword ptr [rbp-0x4f8], 0x1; jmp rax; 
0x00000000077bec: mov edx, edx; mov dword ptr [rbp-0x510], 0x1; jmp rax; 
0x00000000077c21: mov edx, edx; mov dword ptr [rbp-0x51c], 0x1; jmp rax; 
0x00000000078014: mov edx, edx; mov dword ptr [rbp-0x54c], 0x1; jmp rax; 
0x00000000112d48: mov edx, edx; mov eax, 0x11d; mov rdx, rsi; xor esi, esi; syscall; 
0x0000000011f315: mov edx, edx; mov eax, 0x121; mov edx, 0x8; syscall; 
0x000000000a8a57: mov edx, edx; movsxd rdx, [rdi+rdx*4]; add rdx, rdi; notrack jmp rdx; 
0x000000000407a7: mov edx, edx; movsxd rdx, [rsi+rdx*4]; add rdx, rsi; notrack jmp rdx; 
0x00000000162b85: mov edx, esi; mov eax, 0xcb; mov esi, 0x80; syscall; 
0x00000000162b18: mov edx, esi; mov eax, 0xcc; mov esi, 0x80; syscall; 
0x000000000dd007: mov edx, esi; mov eax, 0xe5; xor esi, esi; lea edi, [rdi*8+0x2]; syscall; 
0x0000000011479a: mov edx, esi; mov edi, ebp; mov eax, 0x147; syscall; 
0x000000001148fa: mov edx, esi; mov edi, ebp; mov eax, 0x148; syscall; 
0x0000000015f2e9: mov edx, esi; mov esi, 0x40; mov rdi, rbx; call rax; 
0x000000000bdb88: mov edx, esi; mov r9, [rsp+0x10]; mov rdi, r12; mov rsi, [rsp+0x18]; call rbx; 
0x000000000bde68: mov edx, esi; mov r9, [rsp+0x18]; mov rdi, r12; mov rsi, [rsp+0x10]; call rbx; 
0x000000000457a9: mov edx, esi; mov rax, [rsp]; call rax; 
0x00000000045899: mov edx, esi; mov rax, [rsp]; mov rsi, r12; mov rdi, r13; call rax; 
0x000000000bda96: mov edx, esi; mov rdi, r12; xor r8d, r8d; lea r9, [rsp+0x28]; call rbx; 
0x00000000137d66: mov edx, esi; mov rdi, r15; mov rsi, [rsp+0x8]; call rbp; 
0x0000000013276e: mov edx, esi; mov rsi, r12; call qword ptr [rsp+0x40]; 
0x000000000e2327: mov edx, esi; mov rsi, r12; mov edi, r13d; call qword ptr [rsp+0x30]; 
0x000000000e1f37: mov edx, esi; mov rsi, r12; mov rdi, r13; call qword ptr [rsp+0x30]; 
0x00000000045715: mov edx, esi; mov rsi, r13; mov rdi, r12; call rax; 
0x0000000012c39e: mov edx, esi; movups [rbp-0x78], xmm5; call rax; 
0x00000000112d50: mov edx, esi; xor esi, esi; syscall; 
0x000000000bdd75: mov edx, esi; xor r8d, r8d; mov rdi, r12; lea r9, [rsp+0x30]; call rbx; 
0x00000000073d33: mov edx, esp; call qword ptr [r13+0x38]; 
0x00000000044957: mov edx, esp; call rbp; 
0x000000000e321a: mov edx, esp; lea rsi, [rip+0xd115a]; mov eax, 0x142; syscall; 
0x00000000113a41: mov edx, esp; mov eax, 0x10; syscall; 
0x00000000112a66: mov edx, esp; mov eax, 0x10f; syscall; 
0x00000000142fd9: mov edx, esp; mov eax, 0x81; syscall; 
0x00000000114797: mov edx, esp; mov edx, r14d; mov edi, ebp; mov eax, 0x147; syscall; 
0x000000001148f7: mov edx, esp; mov edx, r14d; mov edi, ebp; mov eax, 0x148; syscall; 
0x00000000113499: mov edx, esp; mov esi, 0x10; mov eax, 0x48; syscall; 
0x000000000dd1d9: mov edx, esp; mov esi, ebp; mov eax, 0xe6; syscall; 
0x000000000dd2aa: mov edx, esp; mov esi, ebp; mov edi, 0x1; mov eax, 0xe6; syscall; 
0x000000000dd261: mov edx, esp; mov r8d, eax; mov esi, ebp; mov eax, 0xe6; syscall; 
0x00000000148c89: mov edx, esp; mov rdi, r14; call qword ptr [rax+0x10]; 
0x00000000148cc3: mov edx, esp; mov rdi, r14; call qword ptr [rax+0x20]; 
0x0000000008e23b: mov edx, esp; mov rdi, rcx; call qword ptr [r14+0x38]; 
0x000000000833e5: mov edx, esp; mov rsi, r14; mov rdi, rbx; call qword ptr [r15+0x38]; 
0x0000000010dd5a: mov edx, esp; mov rsi, rbp; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x00000000089477: mov edx, esp; mov rsi, rbp; mov rdi, r15; call qword ptr [r14+0x80]; 
0x00000000082daf: mov edx, esp; mov rsi, rbp; mov rdi, rbx; call qword ptr [r13+0x38]; 
0x00000000084c37: mov edx, esp; mov rsi, rbp; mov rdi, rbx; call qword ptr [r13+0x58]; 
0x0000000008481d: mov edx, esp; mov rsi, rbp; mov rdi, rbx; call qword ptr [r14+0x48]; 
0x00000000084c61: mov edx, esp; mov rsi, rbp; mov rdi, rbx; call qword ptr [rax+0x58]; 
0x00000000149ef1: mov edx, esp; mov rsi, rbp; mov rdi, rbx; call rax; 
0x0000000009eff9: mov edx, esp; pop r12; pop r13; ret; 
0x000000000846bc: mov edx, esp; pop rbx; pop r12; jmp rax; 
0x00000000063d5e: mov edx, esp; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000630ae: mov edx, fs:[0x18]; test edx, edx; jne short 0x00000000000630c0; sub dword ptr [rdi], 0x1; ret; 
0x00000000083f60: mov edx, fs:[0x18]; test edx, edx; jne short 0x0000000000083f78; sub dword ptr [rip+0x16a80d], 0x1; ret; 
0x00000000091014: mov edx, fs:[0x18]; test edx, edx; jne short 0x0000000000091030; sub dword ptr [rip+0x15d799], 0x1; ret; 
0x00000000093920: mov edx, fs:[0x18]; test edx, edx; jne short 0x0000000000093938; sub dword ptr [rip+0x15ae8d], 0x1; ret; 
0x0000000010dd58: mov edx, r12d; mov rsi, rbp; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x00000000089476: mov edx, r12d; mov rsi, rbp; mov rdi, r15; call qword ptr [r14+0x80]; 
0x0000000008481c: mov edx, r12d; mov rsi, rbp; mov rdi, rbx; call qword ptr [r14+0x48]; 
0x000000000846bb: mov edx, r12d; pop rbx; pop r12; jmp rax; 
0x0000000010e3e0: mov edx, r13d; mov eax, 0x10d; syscall; 
0x00000000119aa9: mov edx, r13d; mov esi, 0x1; call r12; 
0x0000000008eb7e: mov edx, r13d; mov rsi, r12; mov rdi, rbp; call qword ptr [r15+0x80]; 
0x00000000114799: mov edx, r14d; mov edi, ebp; mov eax, 0x147; syscall; 
0x000000001148f9: mov edx, r14d; mov edi, ebp; mov eax, 0x148; syscall; 
0x00000000041d30: mov edx, r8d; and edx, 0x7fffffff; or edx, esi; je 0x0000000000041c88; ret; 
0x0000000004300f: mov edx, r8d; mov eax, 0xea; syscall; 
0x0000000011351a: mov edx, r8d; mov rsi, r9; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x00000000113519: mov edx, r8d; mov rsi, r9; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x000000000da969: mov edx, r8d; movsxd rax, [rcx+rdx*4]; add rax, rcx; notrack jmp rax; 
0x0000000011f8bb: mov edx, r8d; or eax, esi; wrpkru; xor eax, eax; ret; 
0x000000000d9169: mov es, [rax+rax-0x7cbf0000]; call far fword ptr [rdi+0xf]; 
0x00000000102685: mov es, [rax]; add [rax], al; syscall; 
0x00000000123398: mov es, [rbx]; add al, 0x11; ret; 
0x0000000008fb96: mov es, [rcx]; add [rax], al; mov rsi, rsp; mov rdi, rbp; call qword ptr [r13+0x90]; 
0x000000001945a8: mov es, [rdx+rdi*8-0x76b30001]; fild st, word ptr [rcx-0x73]; ret; 
0x000000000b915e: mov es, [rsi]; add [rax], al; ret; 
0x0000000011868d: mov esi, 0x1000d71; add rsp, 0x8; ret; 
0x0000000011340d: mov esi, 0x10; mov eax, 0x48; syscall; 
0x00000000119aac: mov esi, 0x1; call r12; 
0x000000000e311f: mov esi, 0x1; incsspq rsi; jmp rdi; 
0x00000000081270: mov esi, 0x1; mov rdi, rbx; call r8; 
0x00000000080c7c: mov esi, 0x1; mov rdi, rbx; call rax; 
0x00000000148325: mov esi, 0x20; mov rdi, rbp; call qword ptr [rax+0x30]; 
0x00000000115346: mov esi, 0x28121969; mov edi, 0xfee1dead; mov eax, 0xa9; syscall; 
0x00000000151bb5: mov esi, 0x2; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x000000001473de: mov esi, 0x31000000; leave; lea rdx, [rip+0xe7e5]; lea r9, [rsp+0x20]; call qword ptr [rax]; 
0x00000000119a8d: mov esi, 0x3; je short 0x0000000000119ac5; mov rdi, rbp; xor esi, esi; call r12; 
0x00000000119b1d: mov esi, 0x3; je short 0x0000000000119b55; mov rdi, rbp; xor esi, esi; call r12; 
0x0000000011a704: mov esi, 0x3; je short 0x000000000011a73a; mov rdi, rbp; xor esi, esi; call r12; 
0x0000000011a7b5: mov esi, 0x3; je short 0x000000000011a7ed; mov rdi, rbp; xor esi, esi; call r12; 
0x00000000151cf5: mov esi, 0x3; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x000000000bc0dc: mov esi, 0x3ef00148; jmp rax; 
0x000000000fccc3: mov esi, 0x3ef0014c; jmp rax; 
0x0000000015f2eb: mov esi, 0x40; mov rdi, rbx; call rax; 
0x0000000015f2ea: mov esi, 0x40; mov rdi, rbx; call rax; 
0x000000000cf5be: mov esi, 0x48000000; lea eax, [rdi-0x10]; ret; 
0x000000000a0a2e: mov esi, 0x480001b0; cmove eax, edx; ret; 
0x00000000030cbe: mov esi, 0x48001bcc; ror eax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000013854e: mov esi, 0x48ffee9d; mov [rip+0xb5387], eax; add rsp, 0x8; ret; 
0x0000000015218d: mov esi, 0x4; mov rdi, rbp; lea r8, [rip-0xa0ec]; lea rdx, [rip+0x3a2d]; call qword ptr [rax]; 
0x00000000147326: mov esi, 0x4; mov rdi, rbp; lea r9, [rsp+0x20]; call qword ptr [rax]; 
0x0000000015174f: mov esi, 0x4; movdqa xmm0, [rip+0x6b534]; movaps [rsp+0x20], xmm0; call qword ptr [rax+0x28]; 
0x000000001138ff: mov esi, 0x5401; mov eax, r8d; mov ebx, fs:[r10]; syscall; 
0x00000000113b85: mov esi, 0x5409; mov eax, 0x10; syscall; 
0x00000000113bb6: mov esi, 0x5409; mov r8d, eax; mov eax, 0x10; syscall; 
0x00000000134463: mov esi, 0x6401000b; mov [r9], ebx; mov rax, r8; pop rbx; ret; 
0x00000000123d33: mov esi, 0x6401000c; mov [r9], ebx; mov rax, r8; pop rbx; ret; 
0x000000001517a5: mov esi, 0x6; call qword ptr [rax+0x28]; 
0x00000000151e52: mov esi, 0x6; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x0000000015176c: mov esi, 0x6; mov rax, [rdi+0x8]; call qword ptr [rax+0x28]; 
0x00000000157301: mov esi, 0x748d4806; and al, 0x4; mov [rsp+0x4], eax; mov rax, [rdi+0x8]; call qword ptr [rax+0x48]; 
0x00000000028063: mov esi, 0x750d8d48; call far fword ptr [rax]; 
0x0000000005ea4f: mov esi, 0x77cf390e; jrcxz 0x000000000005ea9a; mov eax, eax; ret; 
0x00000000151ff2: mov esi, 0x7; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x0000000010280e: mov esi, 0x7fffffff; mov eax, 0xcc; cmovbe rsi, r8; syscall; 
0x000000000945ef: mov esi, 0x80; mov eax, 0xca; syscall; 
0x000000000946bc: mov esi, 0x80; syscall; 
0x000000000e1dcd: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10d702]; syscall; 
0x000000000e1c8d: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10d842]; syscall; 
0x000000000e1bd5: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10d8fa]; syscall; 
0x000000000e1af9: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10d9ce]; syscall; 
0x000000000e1929: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10db5e]; syscall; 
0x000000000e1765: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10dcda]; syscall; 
0x000000000e13ab: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10e03c]; syscall; 
0x000000000dfe9d: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10f4c2]; syscall; 
0x000000000dfd5d: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10f602]; syscall; 
0x000000000dfca5: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10f6ba]; syscall; 
0x000000000df8d9: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10fa7e]; syscall; 
0x000000000df709: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10fc0e]; syscall; 
0x000000000df545: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10fd8a]; syscall; 
0x000000000dec5d: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x11061a]; syscall; 
0x000000000d2bb9: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x11c5d6]; syscall; 
0x000000000d2985: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x11c80a]; syscall; 
0x000000000ca659: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x126b46]; syscall; 
0x0000000009c819: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x150356]; syscall; 
0x0000000009e1c5: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x150d32]; syscall; 
0x0000000009dfe5: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x150f12]; syscall; 
0x0000000009ddf9: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1510fe]; syscall; 
0x0000000009dd89: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x15116e]; syscall; 
0x0000000009db59: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x15139e]; syscall; 
0x00000000099ab9: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1530b6]; syscall; 
0x00000000099a59: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x153116]; syscall; 
0x00000000099699: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1534d6]; syscall; 
0x00000000099439: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x153736]; syscall; 
0x00000000098dd1: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x153d9e]; syscall; 
0x00000000098d99: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x153dd6]; syscall; 
0x0000000009aa69: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x15440e]; syscall; 
0x00000000099fcd: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x154e9a]; syscall; 
0x0000000009603a: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x158e2d]; syscall; 
0x00000000096009: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x158e6e]; syscall; 
0x00000000095d89: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1590ee]; syscall; 
0x00000000095865: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x159612]; syscall; 
0x00000000094c4a: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x159ba5]; syscall; 
0x00000000094a75: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x159d7a]; syscall; 
0x000000000948d9: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x159f16]; syscall; 
0x0000000009394b: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x15ae64]; syscall; 
0x0000000009340b: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x15b3a4]; syscall; 
0x00000000093067: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x15b748]; syscall; 
0x00000000092cfb: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x15bab4]; syscall; 
0x00000000091677: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x15d138]; syscall; 
0x000000000913b7: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x15d3f8]; syscall; 
0x00000000091043: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x15d76c]; syscall; 
0x00000000084388: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x16a3e7]; syscall; 
0x00000000083f8b: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x16a7e4]; syscall; 
0x00000000083ee0: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x16a88f]; syscall; 
0x00000000082019: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x16f186]; syscall; 
0x000000000610cd: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x18d672]; syscall; 
0x00000000060e49: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x18d8f2]; syscall; 
0x0000000005ec75: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x18fabe]; syscall; 
0x0000000005eb35: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x18fbfe]; syscall; 
0x00000000054d99: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x199986]; syscall; 
0x00000000054bb9: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x199b66]; syscall; 
0x00000000054689: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x19a096]; syscall; 
0x0000000005229d: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x19c252]; syscall; 
0x00000000052121: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x19c3ce]; syscall; 
0x000000000520e9: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x19c406]; syscall; 
0x000000000478d5: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1a6bfa]; syscall; 
0x00000000047815: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1a6cba]; syscall; 
0x0000000004774d: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1a6d82]; syscall; 
0x00000000047675: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1a6e5a]; syscall; 
0x0000000004676d: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1a750a]; syscall; 
0x000000000466a8: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1a75cf]; syscall; 
0x00000000046506: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1a7771]; syscall; 
0x0000000004642c: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1a784b]; syscall; 
0x000000000384f6: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1b5731]; syscall; 
0x00000000036b73: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1b707c]; syscall; 
0x00000000035838: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1b830f]; syscall; 
0x0000000003581b: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1b832c]; syscall; 
0x00000000035753: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1b83f4]; syscall; 
0x0000000002606d: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1cb132]; syscall; 
0x00000000025f01: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1cb29e]; syscall; 
0x00000000025de1: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1cb3be]; syscall; 
0x0000000002283c: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1cb403]; syscall; 
0x000000001987e5: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x55492]; syscall; 
0x000000001989a5: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x55e4a]; syscall; 
0x00000000198cd5: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x57832]; syscall; 
0x0000000015e075: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x935d2]; syscall; 
0x0000000015cf3d: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9470a]; syscall; 
0x0000000015ce5d: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x947ea]; syscall; 
0x0000000015cc75: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x949d2]; syscall; 
0x0000000015cbe5: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x94a62]; syscall; 
0x0000000015cb45: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x94b02]; syscall; 
0x0000000015ca95: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x94bb2]; syscall; 
0x0000000015c6c5: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x94f82]; syscall; 
0x00000000152435: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9e9aa]; syscall; 
0x000000001522d5: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9eb0a]; syscall; 
0x000000001520c9: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9ed16]; syscall; 
0x00000000151f29: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9eeb6]; syscall; 
0x00000000151d95: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9f04a]; syscall; 
0x00000000151c55: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9f18a]; syscall; 
0x00000000151af5: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9f2ea]; syscall; 
0x000000001519e5: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9f3fa]; syscall; 
0x0000000014e4d5: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa2906]; syscall; 
0x0000000014c7dd: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa453a]; syscall; 
0x0000000014c69d: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa467a]; syscall; 
0x0000000014c5e5: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa4732]; syscall; 
0x0000000014c4f9: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa4816]; syscall; 
0x0000000014c329: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa49b6]; syscall; 
0x0000000014c165: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa4b52]; syscall; 
0x000000001467c7: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xaa38c]; syscall; 
0x00000000144629: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xac496]; syscall; 
0x000000001442f1: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xac7ce]; syscall; 
0x00000000143f71: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xacb4e]; syscall; 
0x00000000143d4b: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xacd74]; syscall; 
0x00000000143be9: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xaced6]; syscall; 
0x000000001439ac: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xad113]; syscall; 
0x00000000142f55: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xadab2]; syscall; 
0x00000000142dd3: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xadc34]; syscall; 
0x00000000142d99: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xadc6e]; syscall; 
0x00000000142c81: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xadd86]; syscall; 
0x0000000014243d: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xae5ca]; syscall; 
0x00000000142375: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xae692]; syscall; 
0x00000000142259: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xae7ae]; syscall; 
0x00000000140e86: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xaf929]; syscall; 
0x0000000013d705: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb2e02]; syscall; 
0x0000000013d409: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb30fe]; syscall; 
0x000000001390d9: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb741a]; syscall; 
0x00000000138b59: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb797e]; syscall; 
0x00000000138995: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb7afa]; syscall; 
0x000000001388cd: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb7b62]; syscall; 
0x0000000013878d: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb7ca2]; syscall; 
0x000000001386d5: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb7d5a]; syscall; 
0x00000000137fe5: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb8442]; syscall; 
0x00000000137cc5: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb8762]; syscall; 
0x00000000137b09: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb891e]; syscall; 
0x0000000013477d: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbbb3a]; syscall; 
0x0000000013463d: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbbc7a]; syscall; 
0x00000000134585: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbbd32]; syscall; 
0x000000001344a5: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbbe0a]; syscall; 
0x00000000133fd9: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbc25e]; syscall; 
0x00000000133a09: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbc7ce]; syscall; 
0x000000001334e9: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbcca6]; syscall; 
0x0000000013331d: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbce32]; syscall; 
0x000000001331dd: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbcf72]; syscall; 
0x00000000133125: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbd02a]; syscall; 
0x00000000133045: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbd102]; syscall; 
0x00000000132c29: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbd4d6]; syscall; 
0x0000000013260d: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbda92]; syscall; 
0x000000001324b5: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbdbea]; syscall; 
0x000000001323f5: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbdcaa]; syscall; 
0x0000000013230d: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbdd8a]; syscall; 
0x00000000132229: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbde36]; syscall; 
0x00000000131bc9: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbe456]; syscall; 
0x000000001319bd: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbe61a]; syscall; 
0x00000000131865: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbe772]; syscall; 
0x000000001317a5: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbe832]; syscall; 
0x000000001316bd: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbe912]; syscall; 
0x00000000130aa9: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbf4ae]; syscall; 
0x00000000130839: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbf6de]; syscall; 
0x000000001300b9: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbfdfe]; syscall; 
0x000000001265bd: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc9862]; syscall; 
0x0000000012647d: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc99a2]; syscall; 
0x000000001263c5: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc9a5a]; syscall; 
0x00000000125feb: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc9e2c]; syscall; 
0x00000000125de9: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc9ff6]; syscall; 
0x00000000125c09: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xca18e]; syscall; 
0x00000000125a45: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xca30a]; syscall; 
0x00000000125975: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xca386]; syscall; 
0x000000001258ab: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xca450]; syscall; 
0x00000000125816: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xca4e5]; syscall; 
0x00000000124b0d: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xcb1ba]; syscall; 
0x000000001249cd: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xcb2fa]; syscall; 
0x00000000124915: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xcb3b2]; syscall; 
0x0000000012431b: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xcb9a4]; syscall; 
0x00000000124119: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xcbb4e]; syscall; 
0x00000000123f39: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xcbcc6]; syscall; 
0x00000000123d75: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xcbe22]; syscall; 
0x00000000118705: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xd713a]; syscall; 
0x000000001185e9: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xd7256]; syscall; 
0x00000000118189: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xd76b6]; syscall; 
0x00000000117c4e: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xd7bf1]; syscall; 
0x00000000106ab9: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xe8af6]; syscall; 
0x000000000229f1: mov esi, 0x81; mov eax, 0xca; syscall; 
0x00000000099fa2: mov esi, 0x81; mov eax, ebx; syscall; 
0x00000000046b4e: mov esi, 0x81; mov rdi, r12; mov eax, 0xca; syscall; 
0x00000000047137: mov esi, 0x81; mov rdi, r13; mov eax, 0xca; syscall; 
0x00000000046957: mov esi, 0x81; mov rdi, r14; mov eax, 0xca; syscall; 
0x0000000009c166: mov esi, 0x81; mov rdi, r15; mov eax, 0xca; syscall; 
0x00000000046da5: mov esi, 0x81; mov rdi, rbp; mov eax, 0xca; syscall; 
0x0000000009ae6b: mov esi, 0x81; mov rdi, rbx; mov eax, 0xca; syscall; 
0x0000000005da0d: mov esi, 0x83410014; in eax, dx; add [rax+0x39], ecx; ret; 
0x00000000048b82: mov esi, 0x83480143; ret; 
0x0000000012a4d2: mov esi, 0x8348014b; ret; 
0x000000000e097a: mov esi, 0x83480153; ret; 
0x0000000004a1b5: mov esi, 0x8348016b; ret; 
0x000000000464b7: mov esi, 0x894cfffd; mov eax, 0xfffdd4e9; jmp qword ptr [rbx+rcx*4+0x4]; 
0x00000000152257: mov esi, 0x8; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x00000000043434: mov esi, 0x8; mov eax, 0x7f; syscall; 
0x00000000043480: mov esi, 0x8; mov eax, 0x82; syscall; 
0x000000000434ab: mov esi, 0x8; mov r8d, eax; mov eax, 0x82; syscall; 
0x000000001483dd: mov esi, 0x8; mov rdi, rbp; call qword ptr [rax+0x30]; 
0x0000000014e701: mov esi, 0x8; mov rdi, rbp; mov [r12+0x70], edx; call qword ptr [rax+0x30]; 
0x0000000011f4ae: mov esi, 0x8bfff751; and al, 0xc; add rsp, 0x28; ret; 
0x0000000003559e: mov esi, 0x8d49001b; mov ebp, 0x80; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000151a83: mov esi, 0x9; call qword ptr [rax]; 
0x00000000160b9e: mov esi, 0x9; mov edi, eax; mov eax, 0x3e; syscall; 
0x0000000015238b: mov esi, 0xa; lea r9, [rsp+0x1c]; call qword ptr [rax]; 
0x000000000effe9: mov esi, 0xb60f000f; ret; 
0x000000001279d4: mov esi, 0xc48348c3; or [rbx+0x5d], bl; ret; 
0x000000000a886d: mov esi, 0xd139070c; je short 0x00000000000a8868; cmp ecx, esi; je short 0x00000000000a8868; ret; 
0x0000000011ff88: mov esi, 0xd8f7000c; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000151829: mov esi, 0xd; call qword ptr [rax+0x28]; 
0x00000000156322: mov esi, 0xe68948c5; mov [rsp], rax; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x000000001568ea: mov esi, 0xe8fffffe; lodsd [rsi]; xchg ecx, eax; std; jmp qword ptr [rsi+0x66]; 
0x000000000a8835: mov esi, 0xf2390714; je short 0x00000000000a8830; ret; 
0x0000000009f26e: mov esi, 0xf6000e44; jb short 0x000000000009f286; lea rax, [rip+0x1c633]; cmovne rax, rdx; ret; 
0x00000000087620: mov esi, 0xffffffff; call qword ptr [rax+0x18]; 
0x00000000088f1f: mov esi, 0xffffffff; mov rdi, r8; call qword ptr [rax+0x18]; 
0x0000000008f6da: mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rax+0x18]; 
0x00000000091bc1: mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rbx+0x18]; 
0x000000000934d5: mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [r12+0x18]; 
0x000000000932e6: mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [r15+0x18]; 
0x00000000092350: mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rax+0x18]; 
0x0000000009196a: mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp+0x18]; 
0x00000000087de3: mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp+0x30]; 
0x00000000046905: mov esi, [rax+0x20]; mov edi, ebp; ror rdx, 0x11; xor rdx, fs:[0x30]; call rdx; 
0x0000000014ed5f: mov esi, [rax+0x40]; mov edx, [rsi+0x1c8]; add rsi, 0x38; jmp qword ptr [rax+0x18]; 
0x0000000011a0e9: mov esi, [rax]; mov rdi, r14; mov rax, [rbp-0x58]; mov r15d, r13d; call rax; 
0x000000000240c7: mov esi, [rax]; xor eax, eax; call qword ptr [rdx+0x1d0]; 
0x0000000011a95f: mov esi, [rbp+0x10]; test r14, r14; jne 0x000000000011aa10; mov rdi, [r13]; call rbx; 
0x0000000011a92f: mov esi, [rbp+0x10]; test r14, r14; jne 0x000000000011aa70; mov rdi, [r13]; call rbx; 
0x0000000011a8ff: mov esi, [rbp+0x10]; test r14, r14; jne 0x000000000011aad0; mov rdi, [r13]; call rbx; 
0x0000000011a98b: mov esi, [rbp+0x10]; test r14, r14; jne short 0x000000000011a9b0; mov rdi, [r13]; call rbx; 
0x000000000256c8: mov esi, [rbp-0x70]; mov rdi, rbx; call rsi; 
0x0000000002ca31: mov esi, [rbp]; add [rbp-0x77], cl; ret; 
0x000000000457a1: mov esi, [rbp]; mov rdi, [r12]; mov rdx, r14; mov rax, [rsp]; call rax; 
0x00000000147625: mov esi, [rbx+0x10]; mov rdi, rbp; mov [rbx], rax; xor eax, eax; call qword ptr [rbx+0x18]; 
0x00000000088a99: mov esi, [rbx+0x10]; mov rdx, [rbx+0x40]; mov rdi, rbx; sub rdx, rsi; call qword ptr [rax+0x70]; 
0x00000000148c85: mov esi, [rbx+0x10]; mov rdx, r12; mov rdi, r14; call qword ptr [rax+0x10]; 
0x00000000148cbf: mov esi, [rbx+0x10]; mov rdx, r12; mov rdi, r14; call qword ptr [rax+0x20]; 
0x000000001476e7: mov esi, [rbx+0x20]; mov rdi, rbp; mov r12d, eax; xor eax, eax; call qword ptr [rbx+0x28]; 
0x00000000150989: mov esi, [rbx+0x88]; mov rdi, r15; call qword ptr [rax+0x28]; 
0x0000000010cc8f: mov esi, [rbx+0xa0]; mov rdi, [rbx+0x80]; call qword ptr [rax+0x88]; 
0x0000000011a020: mov esi, [rbx]; mov r13, rbx; mov rdi, rbp; call r12; 
0x0000000008052b: mov esi, [rip+0x16ba37]; mov rdi, rsp; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000007a01b: mov esi, [rip+0x171f47]; mov rdi, rsp; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000074a97: mov esi, [rsi+0x18]; mov rdx, [r14+0x20]; mov rdi, r15; sub rdx, rsi; call qword ptr [rbx+0x38]; 
0x0000000018c421: mov esi, [rsi+rcx+0x60]; cmp esi, [rdx+rcx+0x60]; jne 0x000000000018c209; vzeroupper; ret; 
0x0000000018c8d8: mov esi, [rsi+rcx]; cmp esi, [rdx+rcx]; jne 0x000000000018c679; vzeroupper; ret; 
0x0000000016009b: mov esi, [rsi]; lea r9, [r11+rsi]; mov esi, [rsp+0x8]; call rax; 
0x000000000bbc47: mov esi, [rsi]; mov [rdi+rdx-0x4], ecx; mov [rdi], esi; ret; 
0x000000000bbc38: mov esi, [rsi]; mov [rdi+rdx-0x8], rcx; mov [rdi], rsi; ret; 
0x0000000018fa60: mov esi, [rsi]; mov cx, [rcx-0x2]; mov [rdi], si; mov [r9-0x2], cx; ret; 
0x0000000018fa4e: mov esi, [rsi]; mov ecx, [rcx-0x4]; mov [rdi], esi; mov [r9-0x4], ecx; ret; 
0x00000000119c46: mov esi, [rsi]; mov rax, [rsp+0x8]; mov rdi, r13; call rax; 
0x0000000018fa3b: mov esi, [rsi]; mov rcx, [rcx-0x8]; mov [rdi], rsi; mov [r9-0x8], rcx; ret; 
0x00000000146da9: mov esi, [rsp+0x10]; call qword ptr [rax]; 
0x000000000bde73: mov esi, [rsp+0x10]; call rbx; 
0x00000000114fec: mov esi, [rsp+0x10]; mov eax, 0x17; mov edi, [rsp+0xc]; syscall; 
0x00000000120fdc: mov esi, [rsp+0x10]; mov eax, 0x46; mov edi, [rsp+0x8]; syscall; 
0x0000000010df64: mov esi, [rsp+0x10]; mov edi, [rsp+0x18]; mov eax, 0x101; syscall; 
0x00000000113069: mov esi, [rsp+0x10]; mov edi, [rsp+0x8]; syscall; 
0x00000000120caf: mov esi, [rsp+0x10]; mov edi, [rsp+0xc]; mov eax, 0x133; syscall; 
0x0000000011f48f: mov esi, [rsp+0x10]; mov edi, [rsp+0xc]; mov eax, 0xe8; syscall; 
0x0000000011443b: mov esi, [rsp+0x10]; mov r8d, eax; mov edi, [rsp+0x8]; mov eax, 0x13; syscall; 
0x000000001144db: mov esi, [rsp+0x10]; mov r8d, eax; mov edi, [rsp+0x8]; mov eax, 0x14; syscall; 
0x0000000010e0cd: mov esi, [rsp+0x10]; mov r8d, eax; mov edi, [rsp+0x8]; mov eax, 0x1; syscall; 
0x0000000012063b: mov esi, [rsp+0x10]; mov r8d, eax; mov edi, [rsp+0x8]; mov eax, 0x2e; syscall; 
0x000000001204db: mov esi, [rsp+0x10]; mov r8d, eax; mov edi, [rsp+0x8]; mov eax, 0x2f; syscall; 
0x0000000010e02d: mov esi, [rsp+0x10]; mov r8d, eax; mov edi, [rsp+0x8]; xor eax, eax; syscall; 
0x0000000012012d: mov esi, [rsp+0x10]; mov r8d, eax; mov edi, [rsp+0xc]; mov eax, 0x2b; syscall; 
0x0000000004827c: mov esi, [rsp+0x10]; mov r8d, eax; mov rdi, [rsp+0x8]; mov eax, 0x13e; syscall; 
0x00000000118a3c: mov esi, [rsp+0x10]; mov r8d, eax; mov rdi, [rsp+0x8]; mov eax, 0x1a; syscall; 
0x000000001129bc: mov esi, [rsp+0x10]; mov r8d, eax; mov rdi, [rsp+0x8]; mov eax, 0x7; syscall; 
0x0000000014695e: mov esi, [rsp+0x10]; mov rcx, [rsp+0x8]; mov rdi, rbp; call rcx; 
0x000000000921de: mov esi, [rsp+0x10]; mov rdi, [rsp+0x8]; add rsp, 0x20; pop rbx; jmp rax; 
0x0000000004514e: mov esi, [rsp+0x10]; mov rdx, rbp; mov rdi, r12; call rbx; 
0x0000000009a799: mov esi, [rsp+0x18]; add rsp, 0x18; jmp rax; 
0x000000000bd8f3: mov esi, [rsp+0x18]; call rbx; 
0x0000000011510c: mov esi, [rsp+0x18]; mov edi, [rsp+0x14]; syscall; 
0x0000000011f53f: mov esi, [rsp+0x18]; mov edi, [rsp+0x8]; mov eax, 0x114; syscall; 
0x00000000160097: mov esi, [rsp+0x18]; mov esi, [rsi]; lea r9, [r11+rsi]; mov esi, [rsp+0x8]; call rax; 
0x000000000ca891: mov esi, [rsp+0x18]; mov rcx, r12; mov rdx, r13; call rbx; 
0x0000000014d1bb: mov esi, [rsp+0x18]; mov rdi, r12; call qword ptr [rax+0x8]; 
0x0000000009a281: mov esi, [rsp+0x18]; pop rbx; pop rbp; pop r12; jmp rax; 
0x00000000024c76: mov esi, [rsp+0x18]; xor r8d, r8d; call rbx; 
0x0000000012f5bb: mov esi, [rsp+0x18]; xor rsi, fs:[0x28]; jne short 0x000000000012f5d5; add rsp, 0x28; ret; 
0x0000000012f61b: mov esi, [rsp+0x18]; xor rsi, fs:[0x28]; jne short 0x000000000012f635; add rsp, 0x28; ret; 
0x00000000110395: mov esi, [rsp+0x28]; lea rcx, [rbp+0x28]; mov edx, 0x1; call qword ptr [rbp+0x40]; 
0x000000001106f5: mov esi, [rsp+0x28]; lea rcx, [rbp+0x28]; mov edx, 0x2; call qword ptr [rbp+0x40]; 
0x00000000110675: mov esi, [rsp+0x28]; lea rcx, [rbp+0x28]; mov edx, 0x5; call qword ptr [rbp+0x40]; 
0x0000000009bd11: mov esi, [rsp+0x28]; mov rdi, r12; call rdx; 
0x0000000014d1ea: mov esi, [rsp+0x30]; mov rcx, [rsp+0x28]; mov rdi, r12; call rcx; 
0x00000000144ee4: mov esi, [rsp+0x40]; mov rdi, [rsp+0x38]; call qword ptr [rsp+0x68]; 
0x0000000002b8c9: mov esi, [rsp+0x40]; mov rdi, [rsp+0x38]; call r15; 
0x0000000002f2e6: mov esi, [rsp+0x40]; mov rdi, [rsp+0x38]; lea r8, [rsp+0xa0]; call r15; 
0x0000000002b2d5: mov esi, [rsp+0x40]; mov rdi, [rsp+0x38]; mov rax, [rsp+0x20]; call rax; 
0x0000000014d405: mov esi, [rsp+0x40]; mov rdx, [rsp+0x20]; mov rdi, r12; call rdx; 
0x0000000002a347: mov esi, [rsp+0x48]; mov rdi, [rsp+0x40]; call r14; 
0x0000000002a895: mov esi, [rsp+0x48]; mov rdi, [rsp+0x40]; call rbx; 
0x0000000009a9e9: mov esi, [rsp+0x48]; mov rdi, r13; call rax; 
0x000000001509db: mov esi, [rsp+0x50]; mov rcx, [rsp+0x10]; mov rdi, r15; call rcx; 
0x00000000029754: mov esi, [rsp+0x50]; mov rdi, [rsp+0x48]; call r13; 
0x00000000029c54: mov esi, [rsp+0x50]; mov rdi, [rsp+0x48]; call rbx; 
0x0000000002769e: mov esi, [rsp+0x50]; mov rdi, [rsp+0x58]; call r14; 
0x000000000284b8: mov esi, [rsp+0x50]; mov rdi, [rsp+0x58]; call rbx; 
0x000000000290c0: mov esi, [rsp+0x50]; mov rdi, [rsp+0x58]; mov rax, [rsp+0x20]; call rax; 
0x000000000273ef: mov esi, [rsp+0x50]; mov rdi, [rsp+0x58]; mov rax, [rsp+0x28]; call rax; 
0x00000000028242: mov esi, [rsp+0x50]; mov rdi, [rsp+0x58]; mov rax, [rsp+0x30]; call rax; 
0x0000000002c653: mov esi, [rsp+0x58]; mov rdi, [rsp+0x50]; call rbx; 
0x0000000002d966: mov esi, [rsp+0x58]; mov rdi, [rsp+0x50]; mov rax, [rsp+0x18]; call rax; 
0x0000000002c269: mov esi, [rsp+0x58]; mov rdi, [rsp+0x50]; mov rax, [rsp+0x20]; call rax; 
0x00000000027e03: mov esi, [rsp+0x58]; mov rdi, [rsp+0x60]; call rbx; 
0x000000000279eb: mov esi, [rsp+0x58]; mov rdi, [rsp+0x60]; mov rax, [rsp+0x20]; call rax; 
0x000000000ded86: mov esi, [rsp+0x60]; call r12; 
0x00000000043772: mov esi, [rsp+0x88]; xor rsi, fs:[0x28]; jne short 0x000000000004378c; add rsp, 0x98; ret; 
0x000000001600a1: mov esi, [rsp+0x8]; call rax; 
0x00000000137d6c: mov esi, [rsp+0x8]; call rbp; 
0x0000000011f2b7: mov esi, [rsp+0x8]; mov eax, 0x119; mov edi, [rsp+0x4]; syscall; 
0x0000000011459d: mov esi, [rsp+0x8]; mov eax, 0x127; syscall; 
0x0000000011465d: mov esi, [rsp+0x8]; mov eax, 0x128; syscall; 
0x00000000120c09: mov esi, [rsp+0x8]; mov eax, 0x12b; mov edi, [rsp+0x4]; syscall; 
0x000000000e2ca0: mov esi, [rsp+0x8]; mov edi, [rsp+0x10]; mov eax, 0x3d; syscall; 
0x00000000024033: mov esi, [rsp+0x8]; mov edi, [rsp+0x14]; mov rdx, [rax]; call rbx; 
0x000000000240a1: mov esi, [rsp+0x8]; mov edi, [rsp+0x14]; mov rdx, [rax]; mov rax, [rsp+0x18]; call rax; 
0x00000000113261: mov esi, [rsp+0x8]; mov edi, [rsp+0x18]; mov eax, 0x115; syscall; 
0x00000000120b51: mov esi, [rsp+0x8]; mov edi, [rsp+0x18]; mov eax, 0x120; syscall; 
0x00000000120f21: mov esi, [rsp+0x8]; mov edi, [rsp+0x18]; mov eax, 0x45; syscall; 
0x0000000011f5f0: mov esi, [rsp+0x8]; mov edi, [rsp]; mov eax, 0x116; syscall; 
0x0000000010c1d1: mov esi, [rsp+0x8]; mov edi, [rsp]; mov eax, 0x11; syscall; 
0x0000000010c281: mov esi, [rsp+0x8]; mov edi, [rsp]; mov eax, 0x12; syscall; 
0x00000000147e06: mov esi, [rsp+0x8]; mov rcx, [rsp]; xor eax, eax; mov rdi, rbx; call rcx; 
0x0000000012044c: mov esi, [rsp+0x8]; syscall; 
0x0000000012059e: mov esi, [rsp+0x8]; xor r8d, r8d; mov eax, 0x2c; syscall; 
0x0000000012037e: mov esi, [rsp+0x8]; xor r8d, r8d; mov eax, 0x2d; syscall; 
0x00000000113310: mov esi, [rsp+0xc]; mov edi, [rsp+0x8]; mov eax, 0x11d; syscall; 
0x0000000010e555: mov esi, [rsp+0xc]; mov r8d, eax; mov edi, [rsp+0x8]; mov eax, 0x48; syscall; 
0x00000000091a71: mov esi, [rsp+0xc]; mov rdi, [rsp]; add rsp, 0x10; pop rbx; jmp rax; 
0x0000000010e9e1: mov esi, [rsp+0xc]; mov rdi, [rsp]; mov r8d, eax; mov eax, 0x55; syscall; 
0x0000000011f75a: mov esi, [rsp]; mov r8d, eax; mov edi, [rsp+0x8]; mov eax, 0x130; syscall; 
0x000000001201fa: mov esi, [rsp]; mov r8d, eax; mov edi, [rsp+0x8]; mov eax, 0x2a; syscall; 
0x00000000123138: mov esi, eax; and esi, [rdx+0x10]; lea rdx, [rdx+rsi*4]; add eax, [rdx+rcx]; ret; 
0x0000000010ce20: mov esi, eax; mov eax, 0x75; syscall; 
0x0000000010ce49: mov esi, eax; mov eax, 0x77; syscall; 
0x00000000043332: mov esi, eax; mov eax, 0xe; syscall; 
0x0000000004300d: mov esi, eax; mov edx, r8d; mov eax, 0xea; syscall; 
0x00000000076f36: mov esi, eax; mov rdi, r12; mov [rbp-0x4f0], r10; call qword ptr [rax+0x38]; 
0x0000000011ef8c: mov esi, eax; mov rdi, rbp; call r12; 
0x000000000db266: mov esi, eax; movsxd rdx, [rdi+rsi*4]; add rdx, rdi; notrack jmp rdx; 
0x0000000015f163: mov esi, eax; shr ecx, 0x3; rep movsq [rdi], [rsi]; ret; 
0x00000000048306: mov esi, eax; xor edx, edx; mov eax, r9d; sub rsi, rdi; syscall; 
0x00000000146a8a: mov esi, ebp; call qword ptr [rax+0x10]; 
0x00000000153ecc: mov esi, ebp; call qword ptr [rax+0x18]; 
0x00000000149b3a: mov esi, ebp; call qword ptr [rbx+0x40]; 
0x0000000009e681: mov esi, ebp; call rax; 
0x000000000d096c: mov esi, ebp; call rbp; 
0x00000000127e88: mov esi, ebp; mov [rsp+0x10], rax; mov rdx, rax; call qword ptr [r12+0x28]; 
0x0000000004429b: mov esi, ebp; mov [rsp+0x14], eax; mov edi, r12d; mov eax, 0x81; syscall; 
0x00000000142fd2: mov esi, ebp; mov [rsp+0x14], eax; mov rdx, r12; mov eax, 0x81; syscall; 
0x000000000dd1db: mov esi, ebp; mov eax, 0xe6; syscall; 
0x000000000dd2ac: mov esi, ebp; mov edi, 0x1; mov eax, 0xe6; syscall; 
0x00000000083e03: mov esi, ebp; mov edi, 0x1; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000010dd5d: mov esi, ebp; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x0000000013414f: mov esi, ebp; mov edi, r12d; call qword ptr [rsp+0x40]; 
0x000000001215aa: mov esi, ebp; mov edi, r12d; mov [rbp-0x830], rax; mov eax, r14d; syscall; 
0x000000000e0084: mov esi, ebp; mov edi, r14d; call qword ptr [rsp+0x48]; 
0x000000000dd340: mov esi, ebp; mov r8d, eax; mov edi, 0x1; mov eax, 0xe6; syscall; 
0x0000000010ddd3: mov esi, ebp; mov r8d, eax; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x00000000146a98: mov esi, ebp; mov rax, [rdi+0x38]; call qword ptr [rax+0x10]; 
0x0000000014694a: mov esi, ebp; mov rax, [rdi+0x38]; call qword ptr [rax+0x8]; 
0x0000000004590e: mov esi, ebp; mov rax, [rsp]; mov r13, r15; add r15, r12; call rax; 
0x0000000014d3b2: mov esi, ebp; mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x10]; 
0x00000000133b7f: mov esi, ebp; mov rdi, r12; call qword ptr [rsp+0x40]; 
0x00000000045718: mov esi, ebp; mov rdi, r12; call rax; 
0x00000000076994: mov esi, ebp; mov rdi, r12; sub r15, r13; mov rdx, r15; call qword ptr [rax+0x38]; 
0x00000000131235: mov esi, ebp; mov rdi, r13; call qword ptr [rsp+0x40]; 
0x000000000e0524: mov esi, ebp; mov rdi, r14; call qword ptr [rsp+0x48]; 
0x00000000044951: mov esi, ebp; mov rdi, r14; mov rdx, r12; call rbp; 
0x00000000083bf6: mov esi, ebp; mov rdi, r15; call qword ptr [r14+0x38]; 
0x0000000008947a: mov esi, ebp; mov rdi, r15; call qword ptr [r14+0x80]; 
0x00000000083c5b: mov esi, ebp; mov rdi, r15; call qword ptr [rbp+0x38]; 
0x00000000085b5a: mov esi, ebp; mov rdi, rbp; call qword ptr [r14+0x38]; 
0x00000000146935: mov esi, ebp; mov rdi, rbp; call qword ptr [rax+0x8]; 
0x000000001569ac: mov esi, ebp; mov rdi, rbp; xor eax, eax; call r14; 
0x000000001569c6: mov esi, ebp; mov rdi, rbp; xor eax, eax; call rcx; 
0x0000000008f4fb: mov esi, ebp; mov rdi, rbx; call qword ptr [r12+0x80]; 
0x00000000082db2: mov esi, ebp; mov rdi, rbx; call qword ptr [r13+0x38]; 
0x00000000084acb: mov esi, ebp; mov rdi, rbx; call qword ptr [r13+0x48]; 
0x00000000084c3a: mov esi, ebp; mov rdi, rbx; call qword ptr [r13+0x58]; 
0x00000000085a77: mov esi, ebp; mov rdi, rbx; call qword ptr [r14+0x38]; 
0x00000000084820: mov esi, ebp; mov rdi, rbx; call qword ptr [r14+0x48]; 
0x00000000084c64: mov esi, ebp; mov rdi, rbx; call qword ptr [rax+0x58]; 
0x0000000008f330: mov esi, ebp; mov rdi, rbx; call qword ptr [rbp+0x70]; 
0x00000000149ef4: mov esi, ebp; mov rdi, rbx; call rax; 
0x0000000009fae0: mov esi, ebp; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000468c6: mov esi, ebp; ror rdx, 0x11; xor rdx, fs:[0x30]; call rdx; 
0x000000000d0b78: mov esi, ebp; sub r8, rax; add r14, r8; mov [rsp+0x88], r14; call rbp; 
0x0000000015ff2c: mov esi, ebp; xor r9d, r9d; mov rdi, r12; lea r8, [rsp+0x30]; call qword ptr [rax+0x1e0]; 
0x0000000016034c: mov esi, ebp; xor r9d, r9d; xor r8d, r8d; mov rdi, r12; call qword ptr [rax+0x1e0]; 
0x00000000149384: mov esi, ebx; call qword ptr [r15+0x40]; 
0x00000000152a04: mov esi, ebx; call rax; 
0x0000000012a05c: mov esi, ebx; mov edi, 0x2000005; mov rdx, rax; call qword ptr [r13+0x28]; 
0x0000000008cf7e: mov esi, ebx; mov edi, 0x2; mov eax, r9d; syscall; 
0x000000000441c0: mov esi, ebx; mov r8d, eax; mov r10d, 0x8; mov eax, 0x80; syscall; 
0x0000000007711d: mov esi, ebx; mov rdi, r12; mov [rbp-0x4e0], r10; call qword ptr [rcx+0x38]; 
0x0000000007812f: mov esi, ebx; mov rdi, r12; mov [rbp-0x4f8], r9d; mov [rbp-0x4f0], r10; call qword ptr [rax+0x38]; 
0x000000000777c7: mov esi, ebx; mov rdi, r12; mov [rbp-0x500], r9d; mov [rbp-0x4f0], r10; call qword ptr [rbx+0x38]; 
0x00000000078397: mov esi, ebx; mov rdi, r12; mov [rbp-0x510], r10; mov [rbp-0x508], r11; call qword ptr [rax+0x38]; 
0x0000000014e785: mov esi, ebx; mov rdi, rbp; call qword ptr [rax+0x48]; 
0x00000000153d00: mov esi, ebx; mov rdi, rbp; call qword ptr [rax]; 
0x0000000013779a: mov esi, ebx; mov rdi, rbp; call qword ptr [rsp+0x10]; 
0x0000000012aa31: mov esi, ecx; call qword ptr [r10+0x28]; 
0x00000000110b40: mov esi, ecx; call qword ptr [rbp-0xf0]; 
0x00000000075b69: mov esi, ecx; mov [rbp-0x8f0], r10; mov [rbp-0x8e0], rdx; mov [rbp-0x8b8], rcx; call qword ptr [r11+rax*8-0x40]; 
0x0000000007c5b6: mov esi, ecx; mov [rbp-0x908], r10; mov [rbp-0x900], rdx; mov [rbp-0x8d0], rcx; call qword ptr [r11+rax*8-0x40]; 
0x0000000004302d: mov esi, ecx; mov edi, 0x2; mov eax, 0xe; syscall; 
0x0000000011351e: mov esi, ecx; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x0000000012163e: mov esi, ecx; mov edi, r12d; mov eax, r14d; syscall; 
0x00000000116e81: mov esi, ecx; mov r8, rdi; mov byte ptr [rsi-0x1], 0x0; mov rax, r8; ret; 
0x00000000044673: mov esi, edi; call r14; 
0x0000000014718f: mov esi, edi; jmp qword ptr [rsi+0x66]; 
0x00000000113d99: mov esi, edi; mov eax, 0x12e; xor edi, edi; syscall; 
0x000000000d10a5: mov esi, edi; mov eax, 0xa4; xor edi, edi; syscall; 
0x0000000012887f: mov esi, edi; mov edi, 0x2000006; mov rdx, rax; call qword ptr [rbx+0x28]; 
0x00000000116b6e: mov esi, edi; mov r10d, 0x100; mov edi, 0xffffff9c; mov eax, 0x118; syscall; 
0x000000001509c7: mov esi, edi; mov rax, [rdi+0x38]; call qword ptr [rax+0x8]; 
0x0000000015f74c: mov esi, edi; mov rdi, [rsp]; mov rax, [rax+0x1d8]; jmp rax; 
0x000000001381b9: mov esi, edi; mov rdi, r12; call rbp; 
0x0000000004488f: mov esi, edi; mov rdi, r12; call rbx; 
0x0000000008f195: mov esi, edi; mov rdi, rbp; call qword ptr [rax+0x40]; 
0x000000000d04b8: mov esi, edi; mov rdi, rbp; call rbx; 
0x00000000147f01: mov esi, edi; mov rdi, rbx; xor eax, eax; call rcx; 
0x0000000008e238: mov esi, edi; mov rdx, r12; mov rdi, rcx; call qword ptr [r14+0x38]; 
0x0000000014dade: mov esi, edx; add rdi, 0x10; jmp rcx; 
0x0000000012bde8: mov esi, edx; call rax; 
0x0000000010d4db: mov esi, edx; cmp r8d, 0x1; ja short 0x000000000010d510; mov eax, 0x4; syscall; 
0x0000000010d53a: mov esi, edx; cmp r8d, 0x1; ja short 0x000000000010d570; mov eax, 0x5; syscall; 
0x0000000010d59b: mov esi, edx; cmp r8d, 0x1; ja short 0x000000000010d5d0; mov eax, 0x6; syscall; 
0x000000000f9787: mov esi, edx; dec dword ptr [rax-0x77]; ret; 
0x0000000014dafe: mov esi, edx; mov dword ptr [rdi+0x10], 0x2; add rdi, 0x10; jmp rcx; 
0x0000000015064e: mov esi, edx; mov dword ptr [rdi+0x58], 0x2; add rdi, 0x58; jmp rcx; 
0x0000000014fd0e: mov esi, edx; mov dword ptr [rdi+0x68], 0x2; add rdi, 0x68; jmp rcx; 
0x0000000014cece: mov esi, edx; mov dword ptr [rdi+0xc8], 0x2; add rdi, 0xc8; jmp rcx; 
0x0000000007e852: mov esi, edx; mov rdi, r12; call qword ptr [rax+0x38]; 
0x0000000007d852: mov esi, edx; mov rdi, r12; mov [rbp-0x4e0], r9; call qword ptr [r8+0x38]; 
0x0000000007dea7: mov esi, edx; mov rdi, r12; mov [rbp-0x4e0], r9; call qword ptr [rbx+0x38]; 
0x0000000007eb33: mov esi, edx; mov rdi, r12; mov [rbp-0x508], r9; mov [rbp-0x500], r10; call qword ptr [rax+0x38]; 
0x00000000077008: mov esi, edx; mov rdi, r12; sub r15, r10; mov rdx, r15; call qword ptr [rax+0x38]; 
0x000000000756b4: mov esi, edx; mov rdi, r15; call qword ptr [rax+0x38]; 
0x00000000074f53: mov esi, edx; mov rdi, r15; call qword ptr [rbx+0x38]; 
0x00000000146a2a: mov esi, esi; add qword ptr [rbx+0x22a8], 0x1; mov rdi, rbp; call qword ptr [rax+0x18]; 
0x0000000009e826: mov esi, esi; call rax; 
0x00000000128f42: mov esi, esi; mov edi, 0x2000003; mov rdx, rax; call qword ptr [rbx+0x28]; 
0x0000000010c9c6: mov esi, esi; mov edi, 0x2; mov eax, 0xe; syscall; 
0x0000000010ff83: mov esi, esi; mov edx, [rdx+rax]; call qword ptr [rbx+0x40]; 
0x00000000155a94: mov esi, esi; mov rdi, r12; call r13; 
0x0000000005d41a: mov esi, esi; mov rdi, r12; mov [rbp-0xe8], r8; call rax; 
0x000000001486ee: mov esi, esi; mov rdi, r13; call qword ptr [rax+0x30]; 
0x00000000130cc5: mov esi, esi; mov rdi, r13; call qword ptr [rsp+0x50]; 
0x0000000009d9de: mov esi, esi; mov rdi, r13; call rax; 
0x0000000007b4cd: mov esi, esi; mov rdi, r13; mov [rbp-0x978], r10d; mov [rbp-0x960], r9b; call rax; 
0x000000000749f5: mov esi, esi; mov rdi, r15; mov [rbp-0x954], r9d; mov [rbp-0x948], r11d; call rax; 
0x00000000144bfd: mov esi, esi; mov rdi, r15; mov [rsp+0x8], rcx; call rbp; 
0x00000000147739: mov esi, esi; mov rdi, rbp; call qword ptr [rax+0x28]; 
0x000000001577b0: mov esi, esi; mov rdi, rbp; call r12; 
0x000000000833e8: mov esi, esi; mov rdi, rbx; call qword ptr [r15+0x38]; 
0x00000000134951: mov esi, esi; mov rdi, rbx; call rax; 
0x000000000e4ae1: mov esi, esi; movsxd rax, [rdx+rsi*4]; add rax, rdx; notrack jmp rax; 
0x00000000084522: mov esi, esp; call qword ptr [r14+0x38]; 
0x00000000149462: mov esi, esp; call qword ptr [r15+0x40]; 
0x00000000156d6d: mov esi, esp; call qword ptr [rax+0x40]; 
0x00000000149035: mov esi, esp; call qword ptr [rax]; 
0x000000001496c3: mov esi, esp; call qword ptr [rbp+0x40]; 
0x00000000132771: mov esi, esp; call qword ptr [rsp+0x40]; 
0x00000000138166: mov esi, esp; call qword ptr [rsp+0x58]; 
0x0000000009c9a1: mov esi, esp; call rax; 
0x00000000044851: mov esi, esp; call rbx; 
0x0000000010cf92: mov esi, esp; lea rdi, [rip+0xa7622]; mov rdx, [rax+0xb0]; call qword ptr [rax+0x88]; 
0x00000000149054: mov esi, esp; mov [rsp], rax; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x00000000153a91: mov esi, esp; mov dword ptr [rsp+0x8], 0x1; mov dword ptr [rsp+0x10], 0x1; mov dword ptr [rsp+0x18], 0x1; call qword ptr [rax+0x18]; 
0x00000000054eb7: mov esi, esp; mov edi, 0x3001; mov eax, 0x9e; syscall; 
0x000000000dd119: mov esi, esp; mov edi, ebp; mov eax, 0xe4; syscall; 
0x000000000dd099: mov esi, esp; mov edi, ebp; mov eax, 0xe5; syscall; 
0x000000000e232a: mov esi, esp; mov edi, r13d; call qword ptr [rsp+0x30]; 
0x0000000014d1d3: mov esi, esp; mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x8]; 
0x0000000007bbc8: mov esi, esp; mov rdi, r13; call qword ptr [r15+0x38]; 
0x0000000007a948: mov esi, esp; mov rdi, r13; call qword ptr [rax+0x38]; 
0x000000000e1f3a: mov esi, esp; mov rdi, r13; call qword ptr [rsp+0x30]; 
0x000000000458a0: mov esi, esp; mov rdi, r13; call rax; 
0x00000000044874: mov esi, esp; mov rdi, r13; call rbx; 
0x000000000872d7: mov esi, esp; mov rdi, r14; call qword ptr [rax+0x18]; 
0x0000000011bb3e: mov esi, esp; mov rdi, r14; call r13; 
0x00000000044baf: mov esi, esp; mov rdi, r14; call rbp; 
0x00000000074cb0: mov esi, esp; mov rdi, r15; call qword ptr [rax+0x38]; 
0x00000000075984: mov esi, esp; mov rdi, r15; call qword ptr [rcx+0x38]; 
0x0000000011baa9: mov esi, esp; mov rdi, r15; call r14; 
0x000000000e7301: mov esi, esp; mov rdi, r8; call qword ptr [r15+0x40]; 
0x0000000008e3a7: mov esi, esp; mov rdi, rbp; call qword ptr [r13+0x38]; 
0x0000000008f97f: mov esi, esp; mov rdi, rbp; call qword ptr [r13+0x90]; 
0x0000000008e762: mov esi, esp; mov rdi, rbp; call qword ptr [r15+0x40]; 
0x0000000008eb82: mov esi, esp; mov rdi, rbp; call qword ptr [r15+0x80]; 
0x0000000008e6f9: mov esi, esp; mov rdi, rbp; call qword ptr [r15+0x90]; 
0x0000000008f7d0: mov esi, esp; mov rdi, rbp; call qword ptr [rax+0x78]; 
0x000000001490e7: mov esi, esp; mov rdi, rbp; call qword ptr [rax]; 
0x00000000081cf8: mov esi, esp; mov rdi, rbp; call qword ptr [rbx+0x90]; 
0x0000000009d12e: mov esi, esp; mov rdi, rbp; call rax; 
0x0000000010d3d3: mov esi, esp; mov rdi, rbp; mov eax, 0x135; syscall; 
0x00000000090978: mov esi, esp; mov rdi, rbx; call qword ptr [r14+0x78]; 
0x00000000157682: mov esi, esp; mov rdi, rbx; call rcx; 
0x00000000144d5f: mov esi, esp; mov rdi, rbx; mov rcx, r13; call r10; 
0x0000000009b662: mov esi, esp; pop r12; pop r13; jmp rax; 
0x00000000042e06: mov esi, esp; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000872d6: mov esi, r12d; mov rdi, r14; call qword ptr [rax+0x18]; 
0x000000001486ed: mov esi, r14d; mov rdi, r13; call qword ptr [rax+0x30]; 
0x00000000130cc4: mov esi, r14d; mov rdi, r13; call qword ptr [rsp+0x50]; 
0x00000000147738: mov esi, r14d; mov rdi, rbp; call qword ptr [rax+0x28]; 
0x0000000015f529: mov esp, 0x1; mov [r13+0x18], rax; lea rdi, [r15+0x908]; call qword ptr [r15+0xf10]; 
0x000000000ba098: mov esp, 0x1d8d4cd2; and edx, [rdi+rcx]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8b25: mov esp, 0x1d8d4cd2; push 0x6349000f; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000baa45: mov esp, 0x1d8d4cd2; test byte ptr [rdx+0xf], 0x0; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000ba112: mov esp, 0x1d8d4cd2; test eax, 0x49000f53; movsxd ecx, [rbx+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6dca: mov esp, 0x1d8d4cd2; xor eax, 0x49000f83; movsxd ecx, [rbx+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000052a8e: mov esp, 0x39480019; ret; 
0x00000000118a60: mov esp, 0x448bfff7; and al, 0x8; add rsp, 0x28; ret; 
0x000000000ac1b1: mov esp, 0x448d48c0; cmp [rax], ah; ret; 
0x000000000ac1a1: mov esp, 0x448d48c0; cmp [rax], dl; ret; 
0x000000000ac181: mov esp, 0x448d48c0; cmp al, dh; ret; 
0x0000000016b3c0: mov esp, 0x4800052b; sub edx, 0x80; movsxd r9, [r11+r9*4]; add r9, r11; notrack jmp r9; 
0x0000000009f1d0: mov esp, 0x48000c41; cmovne eax, edx; ret; 
0x0000000009f250: mov esp, 0x48000d5d; cmovne eax, edx; ret; 
0x0000000009f800: mov esp, 0x48000d6f; cmovne eax, edx; ret; 
0x00000000038540: mov esp, 0x48001b55; ror eax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000007e500: mov esp, 0x4c001300; mov ecx, [rbp-0x508]; movsxd rax, [rax+rcx*4]; add rax, rdx; jmp rax; 
0x00000000097a00: mov esp, 0x4c001543; mov [rsp+0x8], eax; xor edi, edi; call qword ptr [rax]; 
0x00000000052a2c: mov esp, 0x4c60019; adc [rax], al; ret; 
0x0000000018188a: mov esp, 0x634f0003; or al, 0x8a; pcmpeqb xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000134613: mov esp, 0x6401000b; mov [r8], r9d; add rsp, 0x8; ret; 
0x000000000d3597: mov esp, 0x83480011; ret; 
0x000000000298e3: mov esp, 0x8514; add [rax+0x39], cl; ret far; 
0x00000000026871: mov esp, 0x8948ffff; ret; 
0x00000000089e29: mov esp, 0x8c48348; mov eax, ebx; pop rbx; pop rbp; ret; 
0x000000000a8bfd: mov esp, 0x8d48000d; add eax, 0x3819; cmove rax, rdx; ret; 
0x00000000052a25: mov esp, 0x8d480019; add eax, 0x19bc31; mov byte ptr [rax+rdx], 0x0; ret; 
0x00000000091f62: mov esp, 0x93ebffff; nop [rax+rax]; endbr64; mov eax, 0xffffffff; ret; 
0x00000000190c30: mov esp, 0xa8000000; jne 0x0000000000190d00; lea rax, [rdi+0x7]; ret; 
0x00000000188722: mov esp, 0xc08348c0; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x000000001846d2: mov esp, 0xc08348c0; add rax, rdi; vzeroupper; ret; 
0x000000001846c2: mov esp, 0xc08348c0; and [rax+0x1], cl; clc; vzeroupper; ret; 
0x000000000abf5a: mov esp, 0xc22948c0; jbe 0x00000000000ac200; add rax, rdi; add rax, rcx; ret; 
0x000000000ce14a: mov esp, 0xc22948c0; jbe 0x00000000000ce3f0; add rax, rdi; add rax, rcx; ret; 
0x000000000ac1c1: mov esp, 0xc22948c0; jbe short 0x00000000000ac200; add rax, rdi; ret; 
0x000000000ac1d1: mov esp, 0xc22948c0; jbe short 0x00000000000ac200; lea rax, [rdi+rax+0x10]; ret; 
0x000000000ac1e1: mov esp, 0xc22948c0; jbe short 0x00000000000ac200; lea rax, [rdi+rax+0x20]; ret; 
0x000000000ac1f1: mov esp, 0xc22948c0; jbe short 0x00000000000ac200; lea rax, [rdi+rax+0x30]; ret; 
0x000000000ce3b1: mov esp, 0xc22948c0; jbe short 0x00000000000ce3f0; add rax, rdi; ret; 
0x000000000ce3c1: mov esp, 0xc22948c0; jbe short 0x00000000000ce3f0; lea rax, [rdi+rax+0x10]; ret; 
0x000000000ce3d1: mov esp, 0xc22948c0; jbe short 0x00000000000ce3f0; lea rax, [rdi+rax+0x20]; ret; 
0x000000000ce3e1: mov esp, 0xc22948c0; jbe short 0x00000000000ce3f0; lea rax, [rdi+rax+0x30]; ret; 
0x00000000184632: mov esp, 0xc23948c0; jbe short 0x00000000001846a0; add rax, rdi; vzeroupper; ret; 
0x0000000018c0e2: mov esp, 0xc23948c0; jbe short 0x000000000018c150; add rax, rdi; vzeroupper; ret; 
0x000000000a06ea: mov esp, 0xc2440fc7; add eax, 0x1; ret; 
0x00000000188295: mov esp, 0xc80148c0; add rax, rdi; vzeroupper; ret; 
0x000000000cf374: mov esp, 0xc83948ca; ja short 0x00000000000cf390; sub rdi, 0x10; add rax, rdi; ret; 
0x000000000b1d73: mov esp, 0xd00148d2; sub rax, rdi; ret; 
0x000000000cf878: mov esp, 0xd00148d2; sub rax, rdi; shr rax, 0x2; ret; 
0x000000000d0965: mov esp, 0xd024; add [rcx+rcx*4-0x12], cl; call rbp; 
0x000000000cf2ac: mov esp, 0xd03948d2; ja 0x00000000000cf390; add rax, rdi; add rax, rcx; ret; 
0x000000001201a8: mov esp, 0xd8f7000c; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000120234: mov esp, 0xd8f7000c; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000ff5a8: mov esp, 0xe8000eff; jg short 0x00000000000ff5dc; bnd jmp qword ptr [rsi+0xf]; 
0x000000000f8656: mov esp, 0xf024; add [rcx-0x17f7dbbc], cl; ret far; 
0x000000000e4ade: mov esp, 0xf689000c; movsxd rax, [rdx+rsi*4]; add rax, rdx; notrack jmp rax; 
0x000000000ac27b: mov esp, 0xf80148c0; add rax, rcx; ret; 
0x00000000188637: mov esp, 0xf80148c0; add rax, rcx; sub rax, rdx; vzeroupper; ret; 
0x00000000184767: mov esp, 0xf80148c0; add rax, rcx; vzeroupper; ret; 
0x000000000ac191: mov esp, 0xf80148c0; ret; 
0x0000000018d062: mov esp, 0xf80148c0; sub rax, rdx; shr rax, 0x2; vzeroupper; ret; 
0x000000001886f2: mov esp, 0xf80148c0; sub rax, rdx; vzeroupper; ret; 
0x000000001846b2: mov esp, 0xf80148c0; vzeroupper; ret; 
0x00000000147634: mov esp, 0xfe8466e8; jmp qword ptr [rsi+0xf]; 
0x000000001394ac: mov esp, 0xfffeafe9; jmp qword ptr [rsi+0xf]; 
0x0000000011a858: mov esp, [rbp+0x10]; test r12, r12; jne short 0x000000000011a888; mov rdi, [rbp]; call rbx; 
0x00000000194191: mov esp, [rdx+rax+0x24634e00]; cmpsd [rsi], [rdi]; add rdi, r12; notrack jmp rdi; 
0x0000000004724a: mov esp, [rip+0x1a4b18]; mov rax, fs:[r12]; lock add qword ptr [rax+0x460], 0x1; lea rdi, [rbp+0x908]; call qword ptr [rbp+0xf10]; 
0x00000000156adc: mov esp, eax; mov eax, eax; mov [rsp], rax; mov rax, [rbp+0x8]; call qword ptr [rax+0x8]; 
0x00000000147858: mov esp, eax; mov rax, [rdi+0x8]; call qword ptr [rax+0x20]; 
0x0000000008e1c4: mov esp, eax; mov rax, r12; pop r12; ret; 
0x00000000042de8: mov esp, eax; mov rbp, r9; nop; jmp rdx; 
0x000000001476ee: mov esp, eax; xor eax, eax; call qword ptr [rbx+0x28]; 
0x000000000967d7: mov esp, edx; je short 0x00000000000967fa; mov r13, [rip+0x1555de]; xor edi, edi; call qword ptr [r13]; 
0x0000000005b501: mov esp, edx; ret; 
0x000000001490d5: mov esp, esp; lea rsi, [rsp+0x8]; call qword ptr [rax]; 
0x00000000144fce: mov fs, [rdi-0xceffff]; call qword ptr [rsp+0x70]; 
0x00000000131755: mov fs:[r8], r9d; add rsp, 0x18; ret; 
0x000000000dfc5f: mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x000000000dfe2a: mov fs:[r9], ebx; add rsp, 0x20; mov eax, r8d; pop rbx; ret; 
0x000000000df507: mov fs:[r9], ebx; mov rax, r8; pop rbx; ret; 
0x00000000116d83: mov fs:[rax], edi; mov eax, 0xffffffff; ret; 
0x0000000004723a: mov fs:[rax], rbx; call qword ptr [rbp+0xf08]; 
0x000000001530a2: mov fs:[rax], rdx; ret; 
0x0000000013a240: mov fs:[rbp], r12d; pop rbx; pop rbp; pop r12; ret; 
0x0000000014197a: mov fs:[rbx], r12d; pop rbx; pop rbp; pop r12; ret; 
0x0000000013a870: mov fs:[rbx], r13d; mov eax, 0x3; mov edi, [rbp-0x60]; syscall; 
0x0000000015318b: mov fs:[rbx], rax; pop rbx; mov dword ptr [rip+0x9dc86], 0x2; ret; 
0x000000001531e4: mov fs:[rbx], rax; pop rbx; ret; 
0x000000000472e5: mov fs:[rbx], rdx; mov rdi, [rbp+0x8]; call rax; 
0x0000000004341d: mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000033c60: mov fs:[rcx], rsi; cmp rax, rdx; mov rdx, 0xffffffffffffffff; cmove rax, rdx; ret; 
0x00000000043459: mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000001028bf: mov fs:[rdx], eax; mov eax, r8d; ret; 
0x0000000010285f: mov fs:[rdx], eax; mov eax, r9d; ret; 
0x000000000482b9: mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x000000001142e1: mov fs:[rdx], eax; mov rax, [rip+0xd7bdd]; mov qword ptr [rax], 0xffffffffffffffff; xor eax, eax; ret; 
0x0000000003457f: mov fs:[rdx], rax; ret; 
0x000000001945d8: mov gs, [rdi-0x72000006]; ret; 
0x000000000788f6: mov gs, [rdx+0x3145ffff]; sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; syscall; 
0x00000000129767: mov gs, di; jmp qword ptr [rsi+0xf]; 
0x00000000160881: mov qword ptr [r12], 0x0; mov rax, [rsp+0x10]; mov rdi, [rsp+0x18]; call rax; 
0x000000000a20a1: mov qword ptr [r12], 0x0; pop rbx; pop rbp; pop r12; ret; 
0x000000000468be: mov qword ptr [rax+0x10], 0x0; mov esi, ebp; ror rdx, 0x11; xor rdx, fs:[0x30]; call rdx; 
0x00000000121c9e: mov qword ptr [rax+0x10], 0x0; mov qword ptr [rip+0xca6af], 0x0; ret; 
0x00000000141a8f: mov qword ptr [rax+0x10], 0x0; movups [rax], xmm0; add rsp, 0x8; ret; 
0x00000000087cf1: mov qword ptr [rax+0x50], 0x0; movups [rax+0x40], xmm0; pop rbx; ret; 
0x000000001411f0: mov qword ptr [rax+0x8], 0x0; pop rbx; pop rbp; pop r12; ret; 
0x000000000927c4: mov qword ptr [rax+0x8], 0x0; ret; 
0x00000000121c96: mov qword ptr [rax+0x8], 0x1; mov qword ptr [rax+0x10], 0x0; mov qword ptr [rip+0xca6af], 0x0; ret; 
0x000000000927bd: mov qword ptr [rax], 0x0; mov qword ptr [rax+0x8], 0x0; ret; 
0x000000001142eb: mov qword ptr [rax], 0xffffffffffffffff; xor eax, eax; ret; 
0x000000000e8193: mov qword ptr [rbp+0x8], 0x0; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000007d233: mov qword ptr [rbp-0x4d8], 0x0; mov dword ptr [rbp-0x4f8], 0x20; jmp rax; 
0x00000000076afc: mov qword ptr [rbp-0x4e8], 0x0; mov byte ptr [rbp-0x508], 0x20; mov [rbp-0x500], rsi; jmp rax; 
0x000000000a20ee: mov qword ptr [rbp], 0x0; pop rbp; pop r12; ret; 
0x0000000002fe06: mov qword ptr [rbx+0x10], 0x0; pop rbx; ret; 
0x00000000157895: mov qword ptr [rbx+0x18], 0x0; pop rbx; ret; 
0x000000000ff54e: mov qword ptr [rbx+0x28], 0x0; pop rbx; ret; 
0x000000000919ed: mov qword ptr [rbx+0x58], 0x0; movups [rbx+0x48], xmm0; pop rbx; ret; 
0x0000000009368d: mov qword ptr [rbx+0x58], 0x0; pxor xmm0, xmm0; movups [rbx+0x48], xmm0; pop rbx; ret; 
0x00000000025b36: mov qword ptr [rbx], 0x0; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000199069: mov qword ptr [rbx], 0x0; movzx eax, byte ptr [rsp+0xf]; add rsp, 0x10; pop rbx; ret; 
0x000000001197f5: mov qword ptr [rbx], 0x0; pop rbx; ret; 
0x00000000163374: mov qword ptr [rcx], 0x0; mov eax, 0xffffffff; ret; 
0x00000000157d0c: mov qword ptr [rdi+0x20], 0x0; ret; 
0x0000000009ef62: mov qword ptr [rdi+0x8], 0x0; xor eax, eax; mov [rdi], rsi; ret; 
0x0000000015ce89: mov qword ptr [rdx], 0x0; ret; 
0x0000000009396f: mov qword ptr [rip+0x15ae4e], 0x0; ret; 
0x00000000093964: mov qword ptr [rip+0x15ae51], 0x0; mov qword ptr [rip+0x15ae4e], 0x0; ret; 
0x000000000474d7: mov qword ptr [rip+0x1a6ff6], 0x0; mov rax, [rax]; pop rbx; mov eax, [rax+0x58]; ret; 
0x000000000473ef: mov qword ptr [rip+0x1a70d6], 0x0; mov rax, [rax]; pop rbx; mov eax, [rax+0x58]; ret; 
0x000000000475ac: mov qword ptr [rip+0x1a9d39], 0x0; mov eax, [rax+0x58]; ret; 
0x000000001987a7: mov qword ptr [rip+0x554ce], 0x0; ret; 
0x0000000019830b: mov qword ptr [rip+0x5565a], 0x0; add rsp, 0x8; ret; 
0x00000000198adc: mov qword ptr [rip+0x56649], 0x0; ret; 
0x00000000198b42: mov qword ptr [rip+0x56a1b], 0x0; add rsp, 0x8; ret; 
0x00000000198c15: mov qword ptr [rip+0x57250], 0x0; ret; 
0x00000000198d47: mov qword ptr [rip+0x57cce], 0x0; pop rbx; ret; 
0x0000000015d28e: mov qword ptr [rip+0x93ea7], 0x0; add rsp, 0x8; ret; 
0x00000000121ccf: mov qword ptr [rip+0xca686], 0x0; ret; 
0x00000000121ca6: mov qword ptr [rip+0xca6af], 0x0; ret; 
0x00000000121c75: mov qword ptr [rip+0xca6e0], 0x2; ret; 
0x00000000121c4f: mov qword ptr [rip+0xca706], 0x0; ret; 
0x000000001218d8: mov qword ptr [rip+0xcaa7d], 0x0; add rsp, 0x8; ret; 
0x000000001218a3: mov qword ptr [rip+0xcaab2], 0x3; add rsp, 0x8; ret; 
0x000000001176eb: mov qword ptr [rip+0xd808a], 0x0; mov qword ptr [rip+0xd808f], 0x0; add rsp, 0x8; ret; 
0x000000001176f6: mov qword ptr [rip+0xd808f], 0x0; add rsp, 0x8; ret; 
0x00000000115ec9: mov qword ptr [rip+0xd976c], 0x0; add rsp, 0x8; ret; 
0x0000000014812d: mov qword ptr [rsi+0x10], 0x2; test eax, eax; je short 0x0000000000148140; xor eax, eax; ret; 
0x00000000148260: mov qword ptr [rsi+0x8], 0x0; mov [rsi+0x10], rax; ret; 
0x00000000148222: mov qword ptr [rsi+0x8], 0x1; mov [rsi+0x10], rax; ret; 
0x00000000114b41: mov qword ptr [rsp+0x18], 0xffffffffffffffff; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000d0e91: mov qword ptr [rsp+0x40], 0x0; push 0x0; push 0x0; lea r8, [rsp+0x40]; call qword ptr [rax+0x1e0]; 
0x00000000114b38: mov qword ptr [rsp+0x8], 0xffffffffffffffff; mov qword ptr [rsp+0x18], 0xffffffffffffffff; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000041c93: mov qword ptr [rsp-0x18], 0x0; fld st, tbyte ptr [rsp-0x18]; ret; 
0x00000000041c3c: mov qword ptr [rsp-0x18], 0x0; mov [rsp-0x10], ax; fstp tbyte ptr [rdi], st; fld st, tbyte ptr [rsp-0x18]; ret; 
0x000000001476bf: mov qword ptr [rsp], 0x0; call qword ptr [rax+0x20]; 
0x0000000013cca5: mov qword ptr [rsp], 0x0; call rax; 
0x0000000013cbbb: mov qword ptr [rsp], 0x0; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000160880: mov qword ptr fs:[r12], 0x0; mov rax, [rsp+0x10]; mov rdi, [rsp+0x18]; call rax; 
0x00000000153141: mov qword ptr fs:[rbx], 0x0; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000078b08: mov r10, [rbp-0x518]; jmp rax; 
0x0000000012aa23: mov r10, [rbp-0xd0]; mov edi, r14d; mov rdx, rax; mov rsi, r9; call qword ptr [r10+0x28]; 
0x000000001138f8: mov r10, [rip+0xd8571]; mov esi, 0x5401; mov eax, r8d; mov ebx, fs:[r10]; syscall; 
0x0000000011f149: mov r10, [rsp+0x8]; mov eax, 0x38; syscall; 
0x000000000e3219: mov r10, r12; lea rsi, [rip+0xd115a]; mov eax, 0x142; syscall; 
0x00000000114796: mov r10, r12; mov edx, r14d; mov edi, ebp; mov eax, 0x147; syscall; 
0x000000001148f6: mov r10, r12; mov edx, r14d; mov edi, ebp; mov eax, 0x148; syscall; 
0x000000000dd1d5: mov r10, r13; mov rdx, r12; mov esi, ebp; mov eax, 0xe6; syscall; 
0x00000000118760: mov r10, r8; mov r8, r9; mov r9, [rsp+0x8]; syscall; 
0x0000000013f0c0: mov r10, rax; mov byte ptr [r10], 0x0; ret; 
0x000000000bc7c7: mov r10, rax; mov eax, [r8+rax*4]; sub eax, [r8+r9*4]; je short 0x00000000000bc7b0; ret; 
0x0000000010f424: mov r10, rcx; mov eax, 0x104; syscall; 
0x00000000062ee4: mov r10, rcx; mov eax, 0x108; syscall; 
0x0000000010fc14: mov r10, rcx; mov eax, 0x109; syscall; 
0x0000000010fcd4: mov r10, rcx; mov eax, 0x10b; syscall; 
0x00000000113664: mov r10, rcx; mov eax, 0x11; syscall; 
0x0000000011feb4: mov r10, rcx; mov eax, 0x11e; syscall; 
0x0000000011f9a4: mov r10, rcx; mov eax, 0x12d; syscall; 
0x0000000011f3e4: mov r10, rcx; mov eax, 0x12e; syscall; 
0x0000000011ff44: mov r10, rcx; mov eax, 0x12f; syscall; 
0x0000000011ffa4: mov r10, rcx; mov eax, 0x136; syscall; 
0x0000000011ffd4: mov r10, rcx; mov eax, 0x137; syscall; 
0x0000000011fcd4: mov r10, rcx; mov eax, 0x19; syscall; 
0x00000000112fd4: mov r10, rcx; mov eax, 0x28; syscall; 
0x00000000120804: mov r10, rcx; mov eax, 0x35; syscall; 
0x00000000120774: mov r10, rcx; mov eax, 0x36; syscall; 
0x000000001202c4: mov r10, rcx; mov eax, 0x37; syscall; 
0x0000000011fd64: mov r10, rcx; mov eax, 0x9d; syscall; 
0x0000000011fca4: mov r10, rcx; mov eax, 0xa5; syscall; 
0x0000000011fb84: mov r10, rcx; mov eax, 0xaf; syscall; 
0x0000000011fd94: mov r10, rcx; mov eax, 0xb2; syscall; 
0x0000000011fdc4: mov r10, rcx; mov eax, 0xb3; syscall; 
0x0000000011cfd4: mov r10, rcx; mov eax, 0xbc; syscall; 
0x0000000011cf74: mov r10, rcx; mov eax, 0xbd; syscall; 
0x0000000011ce54: mov r10, rcx; mov eax, 0xbe; syscall; 
0x0000000011ce84: mov r10, rcx; mov eax, 0xbf; syscall; 
0x0000000011cee4: mov r10, rcx; mov eax, 0xc0; syscall; 
0x0000000011cdc4: mov r10, rcx; mov eax, 0xc1; syscall; 
0x00000000118b04: mov r10, rcx; mov eax, 0xd8; syscall; 
0x00000000121184: mov r10, rcx; mov eax, 0xdc; syscall; 
0x0000000011fb24: mov r10, rcx; mov eax, 0xe9; syscall; 
0x00000000062f24: mov r10, rcx; test r8d, r8d; je short 0x0000000000062f70; mov eax, 0x13c; syscall; 
0x000000001146f0: mov r10, rcx; xor r8d, r8d; mov eax, 0x147; syscall; 
0x00000000114850: mov r10, rcx; xor r8d, r8d; mov eax, 0x148; syscall; 
0x00000000077f7b: mov r10, rdx; jmp rax; 
0x00000000076d27: mov r10, rdx; mov dword ptr [rbp-0x4e0], 0x1; jmp rax; 
0x00000000077a30: mov r10, rdx; mov dword ptr [rbp-0x4f8], 0x1; jmp rax; 
0x00000000077beb: mov r10, rdx; mov dword ptr [rbp-0x510], 0x1; jmp rax; 
0x00000000077c20: mov r10, rdx; mov dword ptr [rbp-0x51c], 0x1; jmp rax; 
0x00000000078013: mov r10, rdx; mov dword ptr [rbp-0x54c], 0x1; jmp rax; 
0x00000000112d47: mov r10, rdx; mov eax, 0x11d; mov rdx, rsi; xor esi, esi; syscall; 
0x00000000116b70: mov r10d, 0x100; mov edi, 0xffffff9c; mov eax, 0x118; syscall; 
0x00000000044152: mov r10d, 0x8; mov eax, 0x80; syscall; 
0x00000000043189: mov r10d, 0x8; mov eax, 0xd; syscall; 
0x00000000054f24: mov r10d, 0x8; mov eax, 0xe; syscall; 
0x0000000004332b: mov r10d, 0x8; mov rsi, r8; mov eax, 0xe; syscall; 
0x0000000006c18e: mov r10d, [rbp-0x5c0]; movsxd rax, [rcx+r12*4]; mov r11d, [rbp-0x5c8]; add rax, rcx; notrack jmp rax; 
0x000000000e2d58: mov r10d, [rsp+0x1c]; mov rdx, [rsp+0x10]; mov eax, 0xf7; syscall; 
0x00000000118909: mov r10d, ebx; mov rdi, rbp; mov eax, 0x9; syscall; 
0x0000000011f854: mov r10d, ecx; cmp ecx, 0xffffffff; je short 0x000000000011f888; mov eax, 0x149; syscall; 
0x000000001130d4: mov r10d, ecx; mov eax, 0x118; syscall; 
0x0000000010d8b4: mov r10d, ecx; mov eax, 0x14c; syscall; 
0x00000000112b14: mov r10d, ecx; mov eax, 0xdd; syscall; 
0x00000000113114: mov r10d, ecx; test rsi, rsi; je short 0x0000000000113142; mov eax, 0x118; syscall; 
0x0000000011f314: mov r10d, edx; mov eax, 0x121; mov edx, 0x8; syscall; 
0x00000000167810: mov r11, [rsi-0x10]; mov rdx, [rsi-0x8]; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x000000001294e4: mov r11b, 0x66; nop [rax+rax]; ret; 
0x0000000012fbc1: mov r11d, 0x401f0f; mov eax, edi; shr eax, 0x18; ret; 
0x0000000012fb30: mov r11d, 0x441f0f; add [rcx-0xda08], cl; inc dword ptr [rax]; ret; 
0x0000000016d4d6: mov r11d, 0x46f00ff2; ret far; 
0x00000000168021: mov r11d, 0x4f7f0ff3; ret far; 
0x0000000004126a: mov r11d, [r8+rax*4+0x8]; add r11, [rdi+0x20]; mov rax, r11; ret; 
0x0000000006c199: mov r11d, [rbp-0x5c8]; add rax, rcx; notrack jmp rax; 
0x0000000011a857: mov r12, [rbp+0x10]; test r12, r12; jne short 0x000000000011a888; mov rdi, [rbp]; call rbx; 
0x00000000047249: mov r12, [rip+0x1a4b18]; mov rax, fs:[r12]; lock add qword ptr [rax+0x460], 0x1; lea rdi, [rbp+0x908]; call qword ptr [rbp+0xf10]; 
0x0000000008e1c3: mov r12, rax; mov rax, r12; pop r12; ret; 
0x000000000967d6: mov r12, rdx; je short 0x00000000000967fa; mov r13, [rip+0x1555de]; xor edi, edi; call qword ptr [r13]; 
0x000000001490d4: mov r12, rsp; lea rsi, [rsp+0x8]; call qword ptr [rax]; 
0x0000000015f528: mov r12d, 0x1; mov [r13+0x18], rax; lea rdi, [r15+0x908]; call qword ptr [r15+0xf10]; 
0x00000000156adb: mov r12d, eax; mov eax, eax; mov [rsp], rax; mov rax, [rbp+0x8]; call qword ptr [rax+0x8]; 
0x00000000147857: mov r12d, eax; mov rax, [rdi+0x8]; call qword ptr [rax+0x20]; 
0x000000001476ed: mov r12d, eax; xor eax, eax; call qword ptr [rbx+0x28]; 
0x0000000011a897: mov r13, [r12+0x10]; test r13, r13; jne short 0x000000000011a8f0; mov rdi, [r12]; call rbx; 
0x0000000011a8c7: mov r13, [r12+0x10]; test r13, r13; jne short 0x000000000011a950; mov rdi, [r12]; call rbx; 
0x000000000967db: mov r13, [rip+0x1555de]; xor edi, edi; call qword ptr [r13]; 
0x00000000045914: mov r13, r15; add r15, r12; call rax; 
0x00000000044838: mov r13, rax; mov rdi, r12; call rbx; 
0x0000000009e7f5: mov r13, rax; test r13, r13; jne 0x000000000009e691; mov rax, [rip+0x14d748]; call qword ptr [rax]; 
0x0000000011a022: mov r13, rbx; mov rdi, rbp; call r12; 
0x0000000007d0d5: mov r13, rbx; sar r13, 0x2; mov rdx, r13; call qword ptr [rax+0x38]; 
0x0000000007d0d4: mov r13, rbx; sar r13, 0x2; mov rdx, r13; call qword ptr [rax+0x38]; 
0x00000000097896: mov r13, rdi; test rdi, rdi; js 0x0000000000097a1c; mov rax, [rip+0x154517]; call qword ptr [rax]; 
0x00000000156c53: mov r13d, eax; and eax, 0xffffffff; mov [rsp], rax; mov rax, [rbp+0x8]; call qword ptr [rax+0x8]; 
0x0000000011a95e: mov r14, [r13+0x10]; test r14, r14; jne 0x000000000011aa10; mov rdi, [r13]; call rbx; 
0x0000000011a92e: mov r14, [r13+0x10]; test r14, r14; jne 0x000000000011aa70; mov rdi, [r13]; call rbx; 
0x0000000011a8fe: mov r14, [r13+0x10]; test r14, r14; jne 0x000000000011aad0; mov rdi, [r13]; call rbx; 
0x0000000011a98a: mov r14, [r13+0x10]; test r14, r14; jne short 0x000000000011a9b0; mov rdi, [r13]; call rbx; 
0x0000000011a9be: mov r15, [r14+0x10]; test r15, r15; jne 0x000000000011abd2; mov rdi, [r14]; call rbx; 
0x0000000011aa7e: mov r15, [r14+0x10]; test r15, r15; jne 0x000000000011ac2c; mov rdi, [r14]; call rbx; 
0x0000000011aa4e: mov r15, [r14+0x10]; test r15, r15; jne 0x000000000011ac86; mov rdi, [r14]; call rbx; 
0x0000000011aa1e: mov r15, [r14+0x10]; test r15, r15; jne 0x000000000011ace0; mov rdi, [r14]; call rbx; 
0x0000000011a9ee: mov r15, [r14+0x10]; test r15, r15; jne 0x000000000011ad3a; mov rdi, [r14]; call rbx; 
0x0000000011aaae: mov r15, [r14+0x10]; test r15, r15; jne 0x000000000011ad94; mov rdi, [r14]; call rbx; 
0x0000000011aada: mov r15, [r14+0x10]; test r15, r15; jne short 0x000000000011ab21; mov rdi, [r14]; call rbx; 
0x0000000011ab06: mov r15, [r14+0x10]; test r15, r15; jne short 0x000000000011ab78; mov rdi, [r14]; call rbx; 
0x0000000015f39e: mov r15, [rip+0x8ca4b]; mov [rsp+0x8], rcx; lea rdi, [r15+0x908]; call qword ptr [r15+0xf08]; 
0x00000000104dde: mov r15, [rip+0xe708b]; add rbx, fs:[0x0]; mov r9, rbx; add r8, r15; call r13; 
0x000000001509bd: mov r15, [rsp+0x68]; mov rdi, [rax]; mov rsi, r15; mov rax, [rdi+0x38]; call qword ptr [rax+0x8]; 
0x0000000013b66f: mov r15, r13; jmp qword ptr [rsi+0x66]; 
0x00000000146f4e: mov r15, rsi; jmp qword ptr [rsi+0x2e]; 
0x0000000011ff27: mov r15d, 0xd8f7000c; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011a0f2: mov r15d, r13d; call rax; 
0x0000000011ab2f: mov r8, [r15+0x10]; test r8, r8; jne 0x000000000011aebb; mov rdi, [r15]; call rbx; 
0x0000000011ac94: mov r8, [r15+0x10]; test r8, r8; jne 0x000000000011af29; mov rdi, [r15]; call rbx; 
0x0000000011abb3: mov r8, [r15+0x10]; test r8, r8; jne 0x000000000011af97; mov rdi, [r15]; call rbx; 
0x0000000011ad48: mov r8, [r15+0x10]; test r8, r8; jne 0x000000000011b005; mov rdi, [r15]; call rbx; 
0x0000000011ac0d: mov r8, [r15+0x10]; test r8, r8; jne 0x000000000011b073; mov rdi, [r15]; call rbx; 
0x0000000011abe0: mov r8, [r15+0x10]; test r8, r8; jne 0x000000000011b0e1; mov rdi, [r15]; call rbx; 
0x0000000011ac67: mov r8, [r15+0x10]; test r8, r8; jne 0x000000000011b14f; mov rdi, [r15]; call rbx; 
0x0000000011acee: mov r8, [r15+0x10]; test r8, r8; jne 0x000000000011b1bd; mov rdi, [r15]; call rbx; 
0x0000000011ab59: mov r8, [r15+0x10]; test r8, r8; jne 0x000000000011b22b; mov rdi, [r15]; call rbx; 
0x0000000011ac3a: mov r8, [r15+0x10]; test r8, r8; jne 0x000000000011b299; mov rdi, [r15]; call rbx; 
0x0000000011ad1b: mov r8, [r15+0x10]; test r8, r8; jne 0x000000000011b307; mov rdi, [r15]; call rbx; 
0x0000000011ab86: mov r8, [r15+0x10]; test r8, r8; jne 0x000000000011b375; mov rdi, [r15]; call rbx; 
0x0000000011acc1: mov r8, [r15+0x10]; test r8, r8; jne 0x000000000011b3e3; mov rdi, [r15]; call rbx; 
0x0000000011ad75: mov r8, [r15+0x10]; test r8, r8; jne 0x000000000011b451; mov rdi, [r15]; call rbx; 
0x0000000011ad9e: mov r8, [r15+0x10]; test r8, r8; jne short 0x000000000011ade2; mov rdi, [r15]; call rbx; 
0x0000000011adc7: mov r8, [r15+0x10]; test r8, r8; jne short 0x000000000011ae4d; mov rdi, [r15]; call rbx; 
0x000000000feccb: mov r8, [rax]; mov [rax], rdi; mov rax, r8; ret; 
0x00000000064030: mov r8, [rbp-0x620]; mov rdx, [rbp-0x630]; movsxd rax, [rcx+r12*4]; add rax, rcx; notrack jmp rax; 
0x0000000015fd0a: mov r8, [rbx+0x10]; call qword ptr [rax+0x1e0]; 
0x000000000946db: mov r8, [rdi+0x8]; mov rax, [rdi]; mov rdi, r8; jmp rax; 
0x0000000005508d: mov r8, [rdx+0x28]; mov r9, [rdx+0x30]; mov rdx, [rdx+0x88]; xor eax, eax; ret; 
0x00000000146d99: mov r8, [rsp+0x28]; mov rcx, [rsp+0x20]; mov rdx, [rsp+0x18]; mov rsi, [rsp+0x10]; call qword ptr [rax]; 
0x0000000002f176: mov r8, [rsp+0x48]; mov rcx, [rsp+0x18]; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; call r15; 
0x000000001529fa: mov r8, r13; mov rcx, r12; mov rdx, rbp; mov rsi, rbx; call rax; 
0x00000000132767: mov r8, r15; mov rcx, rbp; mov rdx, r14; mov rsi, r12; call qword ptr [rsp+0x40]; 
0x00000000130280: mov r8, r15; mov rdi, r12; mov edx, [rsp+0x38]; call qword ptr [rsp+0x60]; 
0x0000000011f146: mov r8, r9; mov r10, [rsp+0x8]; mov eax, 0x38; syscall; 
0x00000000118763: mov r8, r9; mov r9, [rsp+0x8]; syscall; 
0x00000000153218: mov r8, rax; mov rax, r8; pop rbx; ret; 
0x00000000144966: mov r8, rbp; mov rcx, r14; mov rdi, r13; call r12; 
0x0000000011cc7a: mov r8, rbx; mov rax, r8; pop rbx; ret; 
0x00000000131d45: mov r8, rbx; mov rdx, rbp; call qword ptr [rsp+0x60]; 
0x00000000087f50: mov r8, rcx; lea rdx, [r8+rdx*4]; mov [rax], rdx; xor eax, eax; ret; 
0x00000000116e83: mov r8, rdi; mov byte ptr [rsi-0x1], 0x0; mov rax, r8; ret; 
0x00000000160b90: mov r8, rdi; test eax, eax; jne short 0x0000000000160bac; mov eax, 0x27; syscall; 
0x00000000043327: mov r8, rsi; mov r10d, 0x8; mov rsi, r8; mov eax, 0xe; syscall; 
0x00000000162b14: mov r8, rsi; mov rdx, rsi; mov eax, 0xcc; mov esi, 0x80; syscall; 
0x000000000e2bc0: mov r8d, 0x0; cmovne r8, rax; mov rax, r8; ret; 
0x000000000e3212: mov r8d, 0x1000; mov r10, r12; lea rsi, [rip+0xd115a]; mov eax, 0x142; syscall; 
0x000000000e3213: mov r8d, 0x1000; mov r10, r12; lea rsi, [rip+0xd115a]; mov eax, 0x142; syscall; 
0x0000000010dc20: mov r8d, 0x10c; syscall; 
0x000000001573fb: mov r8d, 0x1; mov [rdi+0x28], eax; mov [rdi+0x18], rsi; mov eax, r8d; ret; 
0x00000000117369: mov r8d, 0x1; mov eax, r8d; add rsp, 0x8; ret; 
0x0000000008cd70: mov r8d, 0x1; mov eax, r8d; ret; 
0x000000001173a2: mov r8d, 0x1; or dword ptr [rax], 0x8000; add rsp, 0x8; mov eax, r8d; ret; 
0x00000000112a5f: mov r8d, 0x8; mov rdx, r12; mov eax, 0x10f; syscall; 
0x000000001168b0: mov r8d, 0xe8c03150; mov bl, 0xf4; call far fword ptr [rdx+0x59]; 
0x000000000c8596: mov r8d, 0xfd83949; xchg ebx, eax; ret; 
0x0000000015ce79: mov r8d, 0xffffffff; mov dword ptr fs:[rax], 0x16; mov eax, r8d; mov qword ptr [rdx], 0x0; ret; 
0x0000000008545c: mov r8d, 0xffffffff; mov eax, r8d; pop rbp; pop r12; ret; 
0x00000000054de0: mov r8d, 0xffffffff; mov eax, r8d; ret; 
0x000000001028b9: mov r8d, 0xffffffff; mov fs:[rdx], eax; mov eax, r8d; ret; 
0x00000000122c68: mov r8d, [rax+rdx]; shr r8d, cl; and r8d, 0x1; mov eax, r8d; ret; 
0x00000000088072: mov r8d, [rax]; mov eax, r8d; ret; 
0x000000001481d0: mov r8d, [rdi+0x30]; test r8d, r8d; jne short 0x00000000001481e0; mov dword ptr [rsi], 0x0; ret; 
0x00000000033e2b: mov r8d, [rdx+rax]; mov eax, r8d; ret; 
0x00000000062f3b: mov r8d, eax; cmp eax, 0xffffffff; je short 0x0000000000062f50; mov eax, r8d; ret; 
0x00000000113bbb: mov r8d, eax; mov eax, 0x10; syscall; 
0x0000000010e861: mov r8d, eax; mov eax, 0x3; syscall; 
0x000000001151f1: mov r8d, eax; mov eax, 0x4a; syscall; 
0x000000001152b1: mov r8d, eax; mov eax, 0x4b; syscall; 
0x0000000010e9e9: mov r8d, eax; mov eax, 0x55; syscall; 
0x000000000434b0: mov r8d, eax; mov eax, 0x82; syscall; 
0x0000000011f807: mov r8d, eax; mov eax, r8d; ret; 
0x000000000dd342: mov r8d, eax; mov edi, 0x1; mov eax, 0xe6; syscall; 
0x0000000010ddd5: mov r8d, eax; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x0000000011f75d: mov r8d, eax; mov edi, [rsp+0x8]; mov eax, 0x130; syscall; 
0x0000000011443f: mov r8d, eax; mov edi, [rsp+0x8]; mov eax, 0x13; syscall; 
0x000000001144df: mov r8d, eax; mov edi, [rsp+0x8]; mov eax, 0x14; syscall; 
0x0000000010e0d1: mov r8d, eax; mov edi, [rsp+0x8]; mov eax, 0x1; syscall; 
0x000000001201fd: mov r8d, eax; mov edi, [rsp+0x8]; mov eax, 0x2a; syscall; 
0x0000000012063f: mov r8d, eax; mov edi, [rsp+0x8]; mov eax, 0x2e; syscall; 
0x000000001204df: mov r8d, eax; mov edi, [rsp+0x8]; mov eax, 0x2f; syscall; 
0x0000000010e559: mov r8d, eax; mov edi, [rsp+0x8]; mov eax, 0x48; syscall; 
0x0000000010e031: mov r8d, eax; mov edi, [rsp+0x8]; xor eax, eax; syscall; 
0x00000000120131: mov r8d, eax; mov edi, [rsp+0xc]; mov eax, 0x2b; syscall; 
0x0000000011f53c: mov r8d, eax; mov esi, [rsp+0x18]; mov edi, [rsp+0x8]; mov eax, 0x114; syscall; 
0x0000000011330d: mov r8d, eax; mov esi, [rsp+0xc]; mov edi, [rsp+0x8]; mov eax, 0x11d; syscall; 
0x000000000dd263: mov r8d, eax; mov esi, ebp; mov eax, 0xe6; syscall; 
0x000000000441c2: mov r8d, eax; mov r10d, 0x8; mov eax, 0x80; syscall; 
0x00000000048280: mov r8d, eax; mov rdi, [rsp+0x8]; mov eax, 0x13e; syscall; 
0x00000000118a40: mov r8d, eax; mov rdi, [rsp+0x8]; mov eax, 0x1a; syscall; 
0x000000001129c0: mov r8d, eax; mov rdi, [rsp+0x8]; mov eax, 0x7; syscall; 
0x0000000010df60: mov r8d, eax; mov rsi, [rsp+0x10]; mov edi, [rsp+0x18]; mov eax, 0x101; syscall; 
0x00000000120cab: mov r8d, eax; mov rsi, [rsp+0x10]; mov edi, [rsp+0xc]; mov eax, 0x133; syscall; 
0x0000000011f48b: mov r8d, eax; mov rsi, [rsp+0x10]; mov edi, [rsp+0xc]; mov eax, 0xe8; syscall; 
0x000000000e2c9c: mov r8d, eax; mov rsi, [rsp+0x8]; mov edi, [rsp+0x10]; mov eax, 0x3d; syscall; 
0x0000000011325d: mov r8d, eax; mov rsi, [rsp+0x8]; mov edi, [rsp+0x18]; mov eax, 0x115; syscall; 
0x00000000120b4d: mov r8d, eax; mov rsi, [rsp+0x8]; mov edi, [rsp+0x18]; mov eax, 0x120; syscall; 
0x00000000120f1d: mov r8d, eax; mov rsi, [rsp+0x8]; mov edi, [rsp+0x18]; mov eax, 0x45; syscall; 
0x0000000011f5ec: mov r8d, eax; mov rsi, [rsp+0x8]; mov edi, [rsp]; mov eax, 0x116; syscall; 
0x0000000010c1cd: mov r8d, eax; mov rsi, [rsp+0x8]; mov edi, [rsp]; mov eax, 0x11; syscall; 
0x0000000010c27d: mov r8d, eax; mov rsi, [rsp+0x8]; mov edi, [rsp]; mov eax, 0x12; syscall; 
0x0000000019414b: mov r8d, r10d; movsxd rdx, [rcx+r12*4]; xor r8d, r13d; add rdx, rcx; notrack jmp rdx; 
0x0000000007f3a0: mov r9, [rbp-0x508]; jmp rax; 
0x0000000007e504: mov r9, [rbp-0x508]; movsxd rax, [rax+rcx*4]; add rax, rdx; jmp rax; 
0x00000000055091: mov r9, [rdx+0x30]; mov rdx, [rdx+0x88]; xor eax, eax; ret; 
0x000000001890b3: mov r9, [rsi+rdx-0x7]; mov [rdi], rcx; mov [rdi+rdx-0x7], r9; vzeroupper; ret; 
0x000000000cafbc: mov r9, [rsp+0x10]; call r14; 
0x000000000bd8ea: mov r9, [rsp+0x10]; mov rdi, r12; mov rsi, [rsp+0x18]; call rbx; 
0x000000000bdb89: mov r9, [rsp+0x10]; mov rdi, r12; mov rsi, [rsp+0x18]; call rbx; 
0x0000000002cc29: mov r9, [rsp+0x18]; mov rcx, [rsp+0x28]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x48]; call r13; 
0x000000000bde6a: mov r9, [rsp+0x18]; mov rdi, r12; mov rsi, [rsp+0x10]; call rbx; 
0x000000000bde69: mov r9, [rsp+0x18]; mov rdi, r12; mov rsi, [rsp+0x10]; call rbx; 
0x00000000027698: mov r9, [rsp+0x18]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; call r14; 
0x0000000002932f: mov r9, [rsp+0x18]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; call rbx; 
0x0000000002c64d: mov r9, [rsp+0x18]; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; call rbx; 
0x00000000027dfd: mov r9, [rsp+0x18]; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x60]; call rbx; 
0x000000000df025: mov r9, [rsp+0x20]; mov rdx, [rsp+0x28]; mov rax, [rsp+0x18]; call rax; 
0x000000000284b2: mov r9, [rsp+0x20]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; call rbx; 
0x0000000002823c: mov r9, [rsp+0x20]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; mov rax, [rsp+0x30]; call rax; 
0x0000000002ddb2: mov r9, [rsp+0x20]; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; call rbx; 
0x0000000002a33c: mov r9, [rsp+0x30]; mov rcx, [rsp+0x18]; mov rsi, [rsp+0x48]; mov rdi, [rsp+0x40]; call r14; 
0x0000000002b8c3: mov r9, [rsp+0x30]; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; call r15; 
0x0000000002b2cf: mov r9, [rsp+0x30]; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; mov rax, [rsp+0x20]; call rax; 
0x0000000002a88f: mov r9, [rsp+0x30]; mov rsi, [rsp+0x48]; mov rdi, [rsp+0x40]; call rbx; 
0x00000000118766: mov r9, [rsp+0x8]; syscall; 
0x0000000013027d: mov r9, r13; mov r8, r15; mov rdi, r12; mov edx, [rsp+0x38]; call qword ptr [rsp+0x60]; 
0x000000000ca88d: mov r9, r14; mov rsi, [rsp+0x18]; mov rcx, r12; mov rdx, r13; call rbx; 
0x00000000024c72: mov r9, r14; mov rsi, [rsp+0x18]; xor r8d, r8d; call rbx; 
0x00000000131d3e: mov r9, r15; mov edi, [rsp+0x38]; mov r8, rbx; mov rdx, rbp; call qword ptr [rsp+0x60]; 
0x00000000130cbc: mov r9, r15; mov rcx, [rsp+0x38]; mov esi, r14d; mov rdi, r13; call qword ptr [rsp+0x50]; 
0x000000000bc76a: mov r9, rax; mov eax, [rcx+rax*4]; sub eax, [rcx+r8*4]; je short 0x00000000000bc758; ret; 
0x00000000151a80: mov r9, rbp; mov esi, 0x9; call qword ptr [rax]; 
0x00000000104dee: mov r9, rbx; add r8, r15; call r13; 
0x0000000013122e: mov r9, rbx; mov rcx, r12; mov rsi, rbp; mov rdi, r13; call qword ptr [rsp+0x40]; 
0x0000000007e207: mov r9, rcx; mov dword ptr [rbp-0x510], 0x1; jmp rax; 
0x0000000007f1dc: mov r9, rcx; mov dword ptr [rbp-0x510], 0x1; movsxd rax, [rsi+rax*4]; add rax, rdx; jmp rax; 
0x0000000007e5e8: mov r9, rsi; jmp rax; 
0x0000000007d41c: mov r9, rsi; mov dword ptr [rbp-0x4f0], 0x0; jmp rax; 
0x0000000007da10: mov r9, rsi; mov dword ptr [rbp-0x4f0], 0x1; jmp rax; 
0x0000000007e3b0: mov r9, rsi; mov dword ptr [rbp-0x4f8], 0x20; jmp rax; 
0x0000000007e1cb: mov r9, rsi; mov dword ptr [rbp-0x500], 0x1; movsxd rax, [rcx+rax*4]; add rax, rdx; jmp rax; 
0x0000000007e35b: mov r9, rsi; mov dword ptr [rbp-0x51c], 0x1; movsxd rax, [rcx+rax*4]; add rax, rdx; jmp rax; 
0x0000000007df41: mov r9, rsi; mov dword ptr [rbp-0x528], 0x1; movsxd rax, [rcx+rax*4]; add rax, rdx; jmp rax; 
0x0000000007e2c0: mov r9, rsi; mov dword ptr [rbp-0x530], 0x0; jmp rax; 
0x0000000007e2fb: mov r9, rsi; mov dword ptr [rbp-0x530], 0x1; movsxd rax, [rax+rcx*4]; add rax, rdx; jmp rax; 
0x0000000007e543: mov r9, rsi; mov dword ptr [rbp-0x538], 0x1; movsxd rax, [rcx+rax*4]; add rax, rdx; jmp rax; 
0x0000000007dfa5: mov r9, rsi; movsxd rax, [rcx+rax*4]; add rax, rdx; jmp rax; 
0x0000000011f263: mov r9d, 0x8; mov eax, 0x119; syscall; 
0x000000000c6b74: mov r9d, 0xffffffff; mov eax, r9d; pop rbx; ret; 
0x00000000102859: mov r9d, 0xffffffff; mov fs:[rdx], eax; mov eax, r9d; ret; 
0x00000000114595: mov r9d, eax; mov edx, [rsp+0x14]; mov rsi, [rsp+0x8]; mov eax, 0x127; syscall; 
0x00000000114655: mov r9d, eax; mov edx, [rsp+0x14]; mov rsi, [rsp+0x8]; mov eax, 0x128; syscall; 
0x000000000e2d55: mov r9d, eax; mov r10d, [rsp+0x1c]; mov rdx, [rsp+0x10]; mov eax, 0xf7; syscall; 
0x00000000112ab4: mov r9d, eax; mov rdi, [rsp+0x8]; mov rdx, r12; mov eax, 0x10f; syscall; 
0x000000001146ed: mov r9d, r8d; mov r10, rcx; xor r8d, r8d; mov eax, 0x147; syscall; 
0x0000000011484d: mov r9d, r8d; mov r10, rcx; xor r8d, r8d; mov eax, 0x148; syscall; 
0x000000000cfb50: mov rax, 0x1; ret; 
0x000000000cfb60: mov rax, 0x2; ret; 
0x000000000cfb70: mov rax, 0x3; ret; 
0x000000000cfb80: mov rax, 0x4; ret; 
0x000000000cfb90: mov rax, 0x5; ret; 
0x000000001199c0: mov rax, 0x5c415d5b00000001; pop r13; pop r14; pop r15; ret; 
0x0000000014efea: mov rax, 0x5c415d5b00000001; pop r13; ret; 
0x000000000ec5c1: mov rax, 0x5c415d5bffffffff; pop r13; pop r14; pop r15; ret; 
0x0000000004812f: mov rax, 0x5deece66d; mov [rsi+0x10], rax; xor eax, eax; mov dword ptr [rsi+0xc], 0x1000b; ret; 
0x0000000004817e: mov rax, 0x5deece66d; mov [rsi+0x10], rax; xor eax, eax; ret; 
0x000000000cfba0: mov rax, 0x6; ret; 
0x0000000005b540: mov rax, 0x7974742f7665642f; mov byte ptr [rdi+0x8], 0x0; mov [rdi], rax; mov rax, rdi; ret; 
0x000000000cfbb0: mov rax, 0x7; ret; 
0x0000000004261b: mov rax, 0x7fff000000000000; sub rax, rdx; shr rax, 0x3f; ret; 
0x00000000041ff0: mov rax, 0x8000000000000000; and rdx, rax; mov [rdi], rdx; ret; 
0x00000000041fc0: mov rax, 0x8000000000000000; and rdx, rax; movq xmm0, rdx; ret; 
0x00000000057c50: mov rax, 0x8000000000000000; mov [r8], rax; mov eax, 0x1; mov dword ptr [rdx], 0xffffc002; ret; 
0x00000000041f7d: mov rax, 0x8000000000000000; movsd [rdi], xmm0; and rdx, rax; movq xmm0, rdx; ret; 
0x000000000430c0: mov rax, 0xf; syscall; 
0x00000000041fac: mov rax, 0xfffffffffffff; test rdx, rax; je short 0x0000000000041fc0; ret; 
0x00000000043c09: mov rax, 0xfffffffffffffffe; rol rax, cl; and [rdi], rax; xor eax, eax; ret; 
0x0000000013c970: mov rax, 0xffffffffffffffff; mov rdx, 0xffffffffffffffff; ret; 
0x00000000042f5e: mov rax, 0xffffffffffffffff; ret; 
0x00000000094c75: mov rax, [0x10]; ret; 
0x000000000d038b: mov rax, [0x28]; mov [rsp+0x58], rax; xor eax, eax; mov [rsp+0x50], r12; call rbx; 
0x0000000015f19a: mov rax, [0x28]; mov [rsp+0x68], rax; xor eax, eax; call qword ptr [r12+0xf08]; 
0x00000000052155: mov rax, [0x28]; mov [rsp+0x8], rax; xor eax, eax; mov eax, 0x3e; syscall; 
0x00000000147b4d: mov rax, [r12+0x38]; mov rdi, r12; call qword ptr [rax+0x20]; 
0x00000000047251: mov rax, [r12]; lock add qword ptr [rax+0x460], 0x1; lea rdi, [rbp+0x908]; call qword ptr [rbp+0xf10]; 
0x0000000014d93b: mov rax, [r13+0xd0]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x00000000150473: mov rax, [r14+0x70]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x00000000148c80: mov rax, [r14+0x8]; mov rsi, [rbx+0x10]; mov rdx, r12; mov rdi, r14; call qword ptr [rax+0x10]; 
0x00000000148cba: mov rax, [r14+0x8]; mov rsi, [rbx+0x10]; mov rdx, r12; mov rdi, r14; call qword ptr [rax+0x20]; 
0x000000001511a7: mov rax, [r15+0x60]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x00000000152487: mov rax, [r8+0x38]; mov rdi, r8; call qword ptr [rax+0x20]; 
0x00000000155b71: mov rax, [rax+0x10]; add rsp, 0x8; pop rbp; pop r12; jmp rax; 
0x000000000475a7: mov rax, [rax+0x10]; pop rbx; mov qword ptr [rip+0x1a9d39], 0x0; mov eax, [rax+0x58]; ret; 
0x00000000094b7e: mov rax, [rax+0x10]; test rax, rax; je short 0x0000000000094b89; call rax; 
0x00000000122007: mov rax, [rax+0x18]; add dword ptr [rax], 0x1; ret; 
0x00000000155b31: mov rax, [rax+0x18]; add rsp, 0x8; pop rbp; pop r12; jmp rax; 
0x00000000121ff7: mov rax, [rax+0x18]; add word ptr [rax], 0x1; ret; 
0x0000000014614a: mov rax, [rax+0x18]; jmp rax; 
0x000000000468e0: mov rax, [rax+0x18]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000114c6b: mov rax, [rax+0x18]; test rax, rax; je short 0x0000000000114c75; ret; 
0x000000000dd0d7: mov rax, [rax+0x1a0]; test rax, rax; je short 0x00000000000dd118; call rax; 
0x0000000010d388: mov rax, [rax+0x1b8]; test rax, rax; je short 0x000000000010d3d0; xor edx, edx; call rax; 
0x000000000dd057: mov rax, [rax+0x1c0]; test rax, rax; je short 0x00000000000dd098; call rax; 
0x0000000011d060: mov rax, [rax+0x1c8]; ret; 
0x0000000015f752: mov rax, [rax+0x1d8]; jmp rax; 
0x00000000089994: mov rax, [rax+0x20]; jmp rax; 
0x00000000148b12: mov rax, [rax+0x23b8]; mov rdi, r12; call qword ptr [rax+0x28]; 
0x0000000012ce8f: mov rax, [rax+0x30]; ret; 
0x00000000147e1d: mov rax, [rax+0x38]; test rax, rax; je 0x0000000000147cae; mov rdi, rbx; call rax; 
0x0000000014622f: mov rax, [rax+0x38]; test rax, rax; je short 0x000000000014623d; mov rdi, rbp; call rax; 
0x00000000146b86: mov rax, [rax+0x38]; test rax, rax; je short 0x0000000000146b94; mov rdi, rbp; call rax; 
0x00000000147bb5: mov rax, [rax+0x38]; test rax, rax; je short 0x0000000000147bc3; mov rdi, rbx; call rax; 
0x00000000147f12: mov rax, [rax+0x38]; test rax, rax; je short 0x0000000000147f20; mov rdi, rbx; call rax; 
0x00000000148721: mov rax, [rax+0x38]; test rax, rax; je short 0x000000000014872f; mov rdi, r13; call rax; 
0x0000000014cf20: mov rax, [rax+0x38]; test rax, rax; je short 0x000000000014cf32; lea rdi, [rbp+0xc8]; call rax; 
0x0000000014d956: mov rax, [rax+0x38]; test rax, rax; je short 0x000000000014d964; mov rdi, rbp; call rax; 
0x0000000014db3b: mov rax, [rax+0x38]; test rax, rax; je short 0x000000000014db4b; lea rdi, [r12+0x10]; call rax; 
0x0000000014ee3a: mov rax, [rax+0x38]; test rax, rax; je short 0x000000000014ee48; mov rdi, rbp; call rax; 
0x0000000014ef1e: mov rax, [rax+0x38]; test rax, rax; je short 0x000000000014ef2d; mov rdi, r13; call rax; 
0x0000000014fd4d: mov rax, [rax+0x38]; test rax, rax; je short 0x000000000014fd5c; lea rdi, [rbp+0x68]; call rax; 
0x00000000150485: mov rax, [rax+0x38]; test rax, rax; je short 0x0000000000150493; mov rdi, rbp; call rax; 
0x000000001507ed: mov rax, [rax+0x38]; test rax, rax; je short 0x00000000001507fc; lea rdi, [rbp+0x58]; call rax; 
0x0000000015425b: mov rax, [rax+0x38]; test rax, rax; je short 0x000000000015426b; lea rdi, [r12+0x10]; call rax; 
0x000000001549a4: mov rax, [rax+0x38]; test rax, rax; je short 0x00000000001549b4; lea rdi, [r12+0x10]; call rax; 
0x0000000014fcf0: mov rax, [rax+0x40]; mov [rsi+0x10], rax; ret; 
0x000000000344b5: mov rax, [rax+0x40]; movzx eax, word ptr [rax+rdi*2+0x100]; and eax, esi; ret; 
0x000000000342c5: mov rax, [rax+0x48]; mov eax, [rax+rdi*4+0x200]; ret; 
0x00000000150630: mov rax, [rax+0x50]; mov [rsi+0x10], rax; ret; 
0x00000000034295: mov rax, [rax+0x58]; mov eax, [rax+rdi*4+0x200]; ret; 
0x0000000003456e: mov rax, [rax+0x58]; mov rdx, [rip+0x1b79af]; add rax, 0x200; mov fs:[rdx], rax; ret; 
0x0000000011d058: mov rax, [rax+0x58]; ret; 
0x0000000009274f: mov rax, [rax+0x68]; test rax, rax; jne short 0x0000000000092748; ret; 
0x0000000011d03a: mov rax, [rax+0x8]; ret; 
0x00000000094bee: mov rax, [rax+0x8]; test rax, rax; je short 0x0000000000094bf9; call rax; 
0x0000000009e87a: mov rax, [rax+0x8]; test rax, rax; jne short 0x000000000009e870; xor eax, eax; ret; 
0x0000000014ceb3: mov rax, [rax+0xa0]; mov [rsi+0x10], rax; ret; 
0x000000000874e4: mov rax, [rax+0xe0]; call qword ptr [rax+0x68]; 
0x00000000087619: mov rax, [rax+0xe0]; mov esi, 0xffffffff; call qword ptr [rax+0x18]; 
0x0000000008998d: mov rax, [rax+0xe0]; mov rax, [rax+0x20]; jmp rax; 
0x00000000084c59: mov rax, [rax+0xe0]; mov rdx, r12; mov rsi, rbp; mov rdi, rbx; call qword ptr [rax+0x58]; 
0x00000000030c4d: mov rax, [rax+r12*8]; test rax, rax; je short 0x0000000000030c58; call rax; 
0x00000000198387: mov rax, [rax+rbx*8]; test rax, rax; je short 0x0000000000198392; call rax; 
0x00000000055877: mov rax, [rax+rcx*8]; mov [r9+rcx*8], rax; xor eax, eax; ret; 
0x000000000342c7: mov rax, [rax+rdi*4+0x200]; ret; 
0x00000000033d92: mov rax, [rax+rdi*8+0x80]; ret; 
0x0000000003291f: mov rax, [rax]; mov eax, [rax+0xa8]; ret; 
0x000000000344b2: mov rax, [rax]; mov rax, [rax+0x40]; movzx eax, word ptr [rax+rdi*2+0x100]; and eax, esi; ret; 
0x000000000342c2: mov rax, [rax]; mov rax, [rax+0x48]; mov eax, [rax+rdi*4+0x200]; ret; 
0x00000000034292: mov rax, [rax]; mov rax, [rax+0x58]; mov eax, [rax+rdi*4+0x200]; ret; 
0x00000000033d8f: mov rax, [rax]; mov rax, [rax+rdi*8+0x80]; ret; 
0x0000000003291c: mov rax, [rax]; mov rax, [rax]; mov eax, [rax+0xa8]; ret; 
0x000000000342bf: mov rax, [rax]; mov rax, [rax]; mov rax, [rax+0x48]; mov eax, [rax+rdi*4+0x200]; ret; 
0x0000000003428f: mov rax, [rax]; mov rax, [rax]; mov rax, [rax+0x58]; mov eax, [rax+rdi*4+0x200]; ret; 
0x000000000341ef: mov rax, [rax]; movzx eax, word ptr [rax+rdi*2]; and ax, 0x1000; movzx eax, ax; ret; 
0x000000000341cf: mov rax, [rax]; movzx eax, word ptr [rax+rdi*2]; and ax, 0x100; movzx eax, ax; ret; 
0x000000000341af: mov rax, [rax]; movzx eax, word ptr [rax+rdi*2]; and ax, 0x2000; movzx eax, ax; ret; 
0x0000000003412f: mov rax, [rax]; movzx eax, word ptr [rax+rdi*2]; and ax, 0x200; movzx eax, ax; ret; 
0x0000000003416f: mov rax, [rax]; movzx eax, word ptr [rax+rdi*2]; and ax, 0x4000; movzx eax, ax; ret; 
0x000000000340cf: mov rax, [rax]; movzx eax, word ptr [rax+rdi*2]; and ax, 0x400; movzx eax, ax; ret; 
0x0000000003414f: mov rax, [rax]; movzx eax, word ptr [rax+rdi*2]; and ax, 0x8000; movzx eax, ax; ret; 
0x0000000003410f: mov rax, [rax]; movzx eax, word ptr [rax+rdi*2]; and ax, 0x800; movzx eax, ax; ret; 
0x0000000003426f: mov rax, [rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x1; ret; 
0x000000000340ef: mov rax, [rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x2; movzx eax, ax; ret; 
0x0000000003418f: mov rax, [rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x4; movzx eax, ax; ret; 
0x000000000340af: mov rax, [rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x8; movzx eax, ax; ret; 
0x0000000012cee3: mov rax, [rax]; movzx eax, word ptr [rax+rdx*2]; shr ax, 0xe; and eax, 0x1; ret; 
0x000000000473fa: mov rax, [rax]; pop rbx; mov eax, [rax+0x58]; ret; 
0x0000000014111c: mov rax, [rax]; ret; 
0x0000000011c307: mov rax, [rax]; test rax, rax; je 0x000000000011c400; call rax; 
0x00000000094af6: mov rax, [rax]; test rax, rax; je short 0x0000000000094b00; call rax; 
0x0000000009920d: mov rax, [rax]; test rax, rax; je short 0x0000000000099217; call rax; 
0x0000000011c126: mov rax, [rax]; test rax, rax; je short 0x000000000011c190; call rax; 
0x00000000093578: mov rax, [rax]; test rax, rax; jne short 0x0000000000093570; ret; 
0x00000000096821: mov rax, [rax]; test rax, rax; jne short 0x0000000000096860; xor edi, edi; call qword ptr [r13]; 
0x00000000154d0d: mov rax, [rbp+0x18]; lea r13, [rbp+0x10]; mov dword ptr [rbp+0x10], 0x0; mov rdi, r13; call qword ptr [rax+0x28]; 
0x00000000154d39: mov rax, [rbp+0x18]; mov rdi, r13; call qword ptr [rax+0x20]; 
0x00000000154d3a: mov rax, [rbp+0x18]; mov rdi, r13; call qword ptr [rax+0x20]; 
0x0000000015145c: mov rax, [rbp+0x60]; mov rdi, r13; call qword ptr [rax+0x20]; 
0x00000000147719: mov rax, [rbp+0x8]; call qword ptr [rax+0x28]; 
0x00000000156ae4: mov rax, [rbp+0x8]; call qword ptr [rax+0x8]; 
0x000000001483af: mov rax, [rbp+0x8]; lea esi, [r12+0x3]; mov rdi, rbp; and esi, 0xfffffffc; call qword ptr [rax+0x30]; 
0x0000000014e830: mov rax, [rbp+0x8]; lea rsi, [rbx+0x18]; mov rdi, rbp; call qword ptr [rax+0x48]; 
0x00000000155e88: mov rax, [rbp+0x8]; lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax+0x8]; 
0x00000000155e2f: mov rax, [rbp+0x8]; lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax]; 
0x00000000156d76: mov rax, [rbp+0x8]; lea rsi, [rsp+0x4]; mov rdi, rbp; call qword ptr [rax+0x40]; 
0x00000000156dc7: mov rax, [rbp+0x8]; lea rsi, [rsp+0x4]; mov rdi, rbp; call qword ptr [rax+0x48]; 
0x00000000149127: mov rax, [rbp+0x8]; lea rsi, [rsp+0x8]; mov rdi, rbp; call qword ptr [rax+0x8]; 
0x0000000014e791: mov rax, [rbp+0x8]; lea rsi, [rsp+0xc]; mov rdi, rbp; call qword ptr [rax+0x48]; 
0x00000000152f2c: mov rax, [rbp+0x8]; mov dword ptr [r13], 0xe; lea rsi, [r13+0x8]; mov rdi, rbp; call qword ptr [rax+0x10]; 
0x0000000014e736: mov rax, [rbp+0x8]; mov dword ptr [rsp+0xc], 0xc; mov esi, 0x8; mov rdi, rbp; call qword ptr [rax+0x30]; 
0x00000000148321: mov rax, [rbp+0x8]; mov esi, 0x20; mov rdi, rbp; call qword ptr [rax+0x30]; 
0x000000001483d9: mov rax, [rbp+0x8]; mov esi, 0x8; mov rdi, rbp; call qword ptr [rax+0x30]; 
0x0000000014e6fd: mov rax, [rbp+0x8]; mov esi, 0x8; mov rdi, rbp; mov [r12+0x70], edx; call qword ptr [rax+0x30]; 
0x00000000147734: mov rax, [rbp+0x8]; mov esi, r14d; mov rdi, rbp; call qword ptr [rax+0x28]; 
0x00000000147146: mov rax, [rbp+0x8]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x00000000153e40: mov rax, [rbp+0x8]; mov rdi, rbp; call qword ptr [rax+0x28]; 
0x00000000153ce0: mov rax, [rbp+0x8]; mov rdi, rbp; call qword ptr [rax+0x8]; 
0x000000001476b8: mov rax, [rbp+0x8]; mov rdi, rbp; mov qword ptr [rsp], 0x0; call qword ptr [rax+0x20]; 
0x000000001490e2: mov rax, [rbp+0x8]; mov rsi, r12; mov rdi, rbp; call qword ptr [rax]; 
0x0000000014e780: mov rax, [rbp+0x8]; mov rsi, rbx; mov rdi, rbp; call qword ptr [rax+0x48]; 
0x00000000153cfb: mov rax, [rbp+0x8]; mov rsi, rbx; mov rdi, rbp; call qword ptr [rax]; 
0x00000000156aad: mov rax, [rbp+0x8]; mov rsi, rsp; mov rdi, rbp; call qword ptr [rax]; 
0x000000001521ab: mov rax, [rbp+0x8]; pop rdx; call qword ptr [rax+0x20]; 
0x0000000010cf8a: mov rax, [rbp-0x168]; mov rsi, r12; lea rdi, [rip+0xa7622]; mov rdx, [rax+0xb0]; call qword ptr [rax+0x88]; 
0x00000000104436: mov rax, [rbp-0x1e0]; call rax; 
0x0000000010461e: mov rax, [rbp-0x1e0]; mov rcx, [r12]; call rax; 
0x0000000011a0ee: mov rax, [rbp-0x58]; mov r15d, r13d; call rax; 
0x000000000578e5: mov rax, [rbp-0x8]; xor rax, fs:[0x28]; jne 0x0000000000057975; leave; ret; 
0x00000000091a50: mov rax, [rbx+0x18]; add rsp, 0x10; pop rbx; jmp rax; 
0x0000000008ce04: mov rax, [rbx+0x20]; mov [rbx+0x28], rax; pop rbx; ret; 
0x00000000146b72: mov rax, [rbx+0x20]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x00000000146974: mov rax, [rbx+0x20]; mov rdi, rbp; lea r15, [rsp+0x50]; call qword ptr [rax+0x20]; 
0x00000000146930: mov rax, [rbx+0x20]; mov rsi, r13; mov rdi, rbp; call qword ptr [rax+0x8]; 
0x00000000146a0c: mov rax, [rbx+0x20]; xor esi, esi; mov rdi, rbp; mov dword ptr [rbx+0x18], 0x0; call qword ptr [rax+0x28]; 
0x0000000014698d: mov rax, [rbx+0x20]; xor esi, esi; mov rdi, rbp; mov dword ptr [rbx+0x18], 0x1; call qword ptr [rax+0x28]; 
0x00000000148abb: mov rax, [rbx+0x23b8]; mov rdi, r12; call qword ptr [rax+0x20]; 
0x000000000921ac: mov rax, [rbx+0x40]; add rsp, 0x20; pop rbx; jmp rax; 
0x0000000009e81b: mov rax, [rbx+0x40]; je short 0x000000000009e84e; mov rdi, [rbx+0x48]; mov rsi, r14; call rax; 
0x0000000009e8e3: mov rax, [rbx+0x40]; test byte ptr [rbx+0x50], 0x1; jne short 0x000000000009e8c0; mov rdi, rsi; call rax; 
0x0000000009265e: mov rax, [rbx+0x48]; add rsp, 0x20; xor edx, edx; pop rbx; jmp rax; 
0x000000001509aa: mov rax, [rbx+0x60]; call qword ptr [rax+0x8]; 
0x0000000015097e: mov rax, [rbx+0x60]; mov dword ptr [rbx+0x58], 0x0; mov esi, [rbx+0x88]; mov rdi, r15; call qword ptr [rax+0x28]; 
0x000000001509f1: mov rax, [rbx+0x60]; mov rdi, r15; call qword ptr [rax+0x20]; 
0x0000000014ff65: mov rax, [rbx+0x70]; mov [rbx+0x48], ebp; bswap ebp; call qword ptr [rax+0x18]; 
0x0000000014ff79: mov rax, [rbx+0x70]; mov rsi, [rsp+0x18]; mov rdi, r12; call qword ptr [rax+0x8]; 
0x0000000014d197: mov rax, [rbx+0xd0]; mov [rbx+0xa8], ebp; bswap ebp; mov ebp, ebp; call qword ptr [rax+0x18]; 
0x0000000014d1b3: mov rax, [rbx+0xd0]; mov rsi, [rsp+0x18]; mov rdi, r12; call qword ptr [rax+0x8]; 
0x000000001516c3: mov rax, [rbx]; mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x20]; 
0x0000000015315d: mov rax, [rbx]; test rax, rax; je short 0x0000000000153170; pop rbx; ret; 
0x0000000017aaf6: mov rax, [rcx+0x5]; mov [rdx+0x5], rax; lea rax, [rdx+0xc]; ret; 
0x00000000176766: mov rax, [rcx+0x5]; mov [rdx+0x5], rax; mov rax, rdi; ret; 
0x0000000017ab16: mov rax, [rcx+0x6]; mov [rdx+0x6], rax; lea rax, [rdx+0xd]; ret; 
0x00000000176786: mov rax, [rcx+0x6]; mov [rdx+0x6], rax; mov rax, rdi; ret; 
0x0000000017ab36: mov rax, [rcx+0x7]; mov [rdx+0x7], rax; lea rax, [rdx+0xe]; ret; 
0x000000001767a6: mov rax, [rcx+0x7]; mov [rdx+0x7], rax; mov rax, rdi; ret; 
0x0000000017a9c6: mov rax, [rcx+0x8]; mov [rdx+0x8], rax; lea rax, [rdx+0xf]; ret; 
0x00000000176696: mov rax, [rcx+0x8]; mov [rdx+0x8], rax; mov rax, rdi; ret; 
0x0000000009c228: mov rax, [rcx+rax+0x8]; sub rdx, 0x8; and eax, 0x1; cmovne rax, rdx; ret; 
0x0000000017a970: mov rax, [rcx]; mov [rdx], rax; lea rax, [rdx+0x7]; ret; 
0x00000000176640: mov rax, [rcx]; mov [rdx], rax; mov rax, rdi; ret; 
0x000000001573c4: mov rax, [rdi+0x18]; sub rax, [rdi+0x20]; ret; 
0x00000000031fa5: mov rax, [rdi+0x20]; mov rbp, rdi; test rax, rax; je short 0x0000000000031fb3; call rax; 
0x000000000de2c4: mov rax, [rdi+0x20]; ret; 
0x00000000198484: mov rax, [rdi+0x20]; test rax, rax; je short 0x0000000000198494; call rax; 
0x00000000093ec4: mov rax, [rdi+0x28]; cmp [rdi+0x10], rax; cmovae rax, [rdi+0x10]; sub rax, [rdi+0x18]; ret; 
0x00000000095932: mov rax, [rdi+0x28]; mov [rax+0x20], rdx; add rsp, 0x8; ret; 
0x0000000008ce58: mov rax, [rdi+0x28]; sub rax, [rdi+0x20]; ret; 
0x00000000146a9a: mov rax, [rdi+0x38]; call qword ptr [rax+0x10]; 
0x00000000146a01: mov rax, [rdi+0x38]; call qword ptr [rax+0x18]; 
0x000000001516c9: mov rax, [rdi+0x38]; call qword ptr [rax+0x20]; 
0x0000000014694c: mov rax, [rdi+0x38]; call qword ptr [rax+0x8]; 
0x00000000146a80: mov rax, [rdi+0x38]; lea r13, [rsp+0x68]; mov rsi, r13; call qword ptr [rax+0x10]; 
0x0000000008cd28: mov rax, [rdi+0x40]; sub rax, [rdi+0x38]; ret; 
0x000000000918ee: mov rax, [rdi+0x48]; mov [rdi+0x48], rdx; mov [rdi+0x18], rax; mov [rdi+0x8], rax; ret; 
0x00000000093884: mov rax, [rdi+0x68]; ret; 
0x00000000155b50: mov rax, [rdi+0x8]; call qword ptr [rax+0x10]; 
0x00000000155b10: mov rax, [rdi+0x8]; call qword ptr [rax+0x18]; 
0x00000000146cdd: mov rax, [rdi+0x8]; call qword ptr [rax+0x20]; 
0x00000000151771: mov rax, [rdi+0x8]; call qword ptr [rax+0x28]; 
0x000000001482c9: mov rax, [rdi+0x8]; call qword ptr [rax+0x30]; 
0x000000001571ec: mov rax, [rdi+0x8]; call qword ptr [rax+0x48]; 
0x0000000014905a: mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x000000000939aa: mov rax, [rdi+0x8]; cmp rax, rdx; jae short 0x00000000000939d8; movzx eax, byte ptr [rax]; ret; 
0x00000000157100: mov rax, [rdi+0x8]; jmp qword ptr [rax+0x40]; 
0x00000000157110: mov rax, [rdi+0x8]; jmp qword ptr [rax+0x48]; 
0x00000000155d30: mov rax, [rdi+0x8]; jmp qword ptr [rax+0x8]; 
0x00000000155d25: mov rax, [rdi+0x8]; jmp qword ptr [rax]; 
0x0000000015179c: mov rax, [rdi+0x8]; lea rdx, [rsp+0x18]; mov esi, 0x6; call qword ptr [rax+0x28]; 
0x00000000151820: mov rax, [rdi+0x8]; lea rdx, [rsp+0xc]; mov esi, 0xd; call qword ptr [rax+0x28]; 
0x0000000014f6f7: mov rax, [rdi+0x8]; lea rsi, [rsp+0x10]; call qword ptr [rax+0x10]; 
0x00000000156698: mov rax, [rdi+0x8]; lea rsi, [rsp+0x10]; call qword ptr [rax]; 
0x000000001571c0: mov rax, [rdi+0x8]; lea rsi, [rsp+0x4]; call qword ptr [rax+0x40]; 
0x00000000155e20: mov rax, [rdi+0x8]; lea rsi, [rsp+0x8]; call qword ptr [rax]; 
0x00000000153b69: mov rax, [rdi+0x8]; mov dword ptr [rsp+0x30], 0x1; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x00000000153959: mov rax, [rdi+0x8]; mov dword ptr [rsp+0x30], 0x3; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x000000001539c9: mov rax, [rdi+0x8]; mov dword ptr [rsp+0x30], 0x4; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x00000000153a39: mov rax, [rdi+0x8]; mov dword ptr [rsp+0x30], 0x5; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x000000001490d0: mov rax, [rdi+0x8]; mov r12, rsp; lea rsi, [rsp+0x8]; call qword ptr [rax]; 
0x0000000014ed5a: mov rax, [rdi+0x8]; mov rsi, [r8+0x40]; mov edx, [rsi+0x1c8]; add rsi, 0x38; jmp qword ptr [rax+0x18]; 
0x00000000156d68: mov rax, [rdi+0x8]; mov rsi, rsp; call qword ptr [rax+0x40]; 
0x00000000149030: mov rax, [rdi+0x8]; mov rsi, rsp; call qword ptr [rax]; 
0x00000000149114: mov rax, [rdi+0x8]; punpcklqdq xmm0, xmm1; movaps [rsp], xmm0; call qword ptr [rax+0x8]; 
0x00000000155e70: mov rax, [rdi+0x8]; sar rdx, 0x20; mov [rsp+0x8], rdx; call qword ptr [rax+0x8]; 
0x00000000156db5: mov rax, [rdi+0x8]; sar rdx, 0x20; mov [rsp], edx; call qword ptr [rax+0x48]; 
0x00000000155f60: mov rax, [rdi+0x8]; shr rdx, 0x20; mov [rsp+0x8], rdx; call qword ptr [rax+0x8]; 
0x00000000156f95: mov rax, [rdi+0x8]; shr rdx, 0x20; mov [rsp], edx; call qword ptr [rax+0x48]; 
0x000000000874c4: mov rax, [rdi+0xa0]; cmp qword ptr [rax+0x30], 0x0; je short 0x00000000000874d8; ret; 
0x0000000018e5b0: mov rax, [rdi-0x8]; cmp rcx, rax; jne 0x000000000018ea63; xor eax, eax; ret; 
0x0000000018f780: mov rax, [rdi-0x8]; cmp rcx, rax; jne 0x000000000018f8a3; xor eax, eax; ret; 
0x00000000095224: mov rax, [rdi]; cmp rax, 0x2000000; jbe short 0x0000000000095230; ret; 
0x00000000094e74: mov rax, [rdi]; cmp rax, 0x408; jbe short 0x0000000000094e80; ret; 
0x00000000095284: mov rax, [rdi]; cmp rax, 0xa0; jbe short 0x0000000000095290; ret; 
0x00000000094eb4: mov rax, [rdi]; cmp rax, 0xffff; jbe short 0x0000000000094ec0; ret; 
0x000000001212a0: mov rax, [rdi]; mov [rdx], rax; mov eax, 0x1; ret; 
0x00000000093585: mov rax, [rdi]; mov [rdx], rax; ret; 
0x000000000946df: mov rax, [rdi]; mov rdi, r8; jmp rax; 
0x00000000094ed4: mov rax, [rdi]; nop; mov [rip+0x157409], rax; ret; 
0x00000000094e64: mov rax, [rdi]; nop; mov [rip+0x157429], rax; ret; 
0x00000000094e54: mov rax, [rdi]; nop; mov [rip+0x157441], rax; ret; 
0x00000000095274: mov rax, [rdi]; nop; mov [rip+0x159c0e], eax; ret; 
0x00000000095254: mov rax, [rdi]; nop; mov dword ptr [rip+0x157052], 0x1; mov [rip+0x157044], eax; ret; 
0x00000000095204: mov rax, [rdi]; nop; mov dword ptr [rip+0x1570a2], 0x1; mov [rip+0x15706f], rax; ret; 
0x000000000951e4: mov rax, [rdi]; nop; mov dword ptr [rip+0x1570c2], 0x1; mov [rip+0x157087], rax; ret; 
0x0000000008ce45: mov rax, [rdx+0x20]; sub rax, [rdx+0x18]; sar rax, 0x2; ret; 
0x0000000008cd15: mov rax, [rdx+0x38]; sub rax, [rdx+0x30]; sar rax, 0x2; ret; 
0x000000001131f2: mov rax, [rdx+0x50]; mov [rsi+0x50], rcx; xor rax, 0x20; mov [rsi+0x48], rax; ret; 
0x00000000034256: mov rax, [rdx+rax*4+0x200]; ret; 
0x000000000328e0: mov rax, [rdx+rdi*8+0x40]; ret; 
0x0000000014fe98: mov rax, [rdx]; bswap eax; mov [r8+0x54], eax; mov eax, 0x1; ret; 
0x0000000014fe68: mov rax, [rdx]; bswap eax; mov [r8+0x58], eax; mov eax, 0x1; ret; 
0x0000000014d0b8: mov rax, [rdx]; bswap eax; mov [r8+0xb4], eax; mov eax, 0x1; ret; 
0x0000000014d088: mov rax, [rdx]; bswap eax; mov [r8+0xb8], eax; mov eax, 0x1; ret; 
0x000000000e460f: mov rax, [rip+0x10ce6a]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000e455f: mov rax, [rip+0x10cf1a]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000e4281: mov rax, [rip+0x10d1f8]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000e41e1: mov rax, [rip+0x10d298]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000de159: mov rax, [rip+0x10dd10]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000e30e0: mov rax, [rip+0x10e3a1]; mov rdi, r9; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000dd178: mov rax, [rip+0x10ecf1]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000dd0d0: mov rax, [rip+0x10ed89]; mov rax, [rax+0x1a0]; test rax, rax; je short 0x00000000000dd118; call rax; 
0x000000000dd050: mov rax, [rip+0x10ee09]; mov rax, [rax+0x1c0]; test rax, rax; je short 0x00000000000dd098; call rax; 
0x000000000ddbb0: mov rax, [rip+0x113879]; lea rdi, [rip+0x10fdc2]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000ddb6a: mov rax, [rip+0x1138c7]; lea rdi, [rip+0x10fe08]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000dd9c8: mov rax, [rip+0x113a61]; lea rdi, [rip+0x10ffaa]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000dd999: mov rax, [rip+0x113a98]; lea rdi, [rip+0x10ffd9]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000dd8d0: mov rax, [rip+0x113b59]; lea rdi, [rip+0x1100a2]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000dd8a7: mov rax, [rip+0x113b8a]; lea rdi, [rip+0x1100cb]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000dd3d5: mov rax, [rip+0x114054]; lea rdi, [rip+0x11059d]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000d1deb: mov rax, [rip+0x11a056]; movaps [rax], xmm0; add rsp, 0x10; pop rbp; ret; 
0x000000000d01a0: mov rax, [rip+0x11bcc9]; mov dword ptr fs:[rax], 0x16; xor eax, eax; ret; 
0x000000000d0180: mov rax, [rip+0x11bce9]; mov dword ptr fs:[rax], 0x4b; xor eax, eax; add rsp, 0x8; ret; 
0x000000000ca328: mov rax, [rip+0x127109]; lea rdi, [rip+0x12364a]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000ca145: mov rax, [rip+0x1272e4]; lea rdi, [rip+0x12382d]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000009e984: mov rax, [rip+0x14d4e5]; mov dword ptr fs:[rax], 0xc; xor eax, eax; ret; 
0x0000000009e801: mov rax, [rip+0x14d748]; call qword ptr [rax]; 
0x0000000009e620: mov rax, [rip+0x14d929]; call qword ptr [rax]; 
0x0000000009e550: mov rax, [rip+0x14d9f9]; call qword ptr [rax]; 
0x0000000009fa8a: mov rax, [rip+0x1519b7]; mov edi, [rip+0x14f52d]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000009f8ab: mov rax, [rip+0x151b8e]; lea rdi, [rip+0x14f70b]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000009a0f8: mov rax, [rip+0x151de1]; mov [rax], rdi; ret; 
0x0000000009a0ee: mov rax, [rip+0x151eeb]; mov [rax], rsi; mov rax, [rip+0x151de1]; mov [rax], rdi; ret; 
0x0000000009945d: mov rax, [rip+0x152a0c]; xor r8d, r8d; mov dword ptr fs:[rax], 0xc; mov rax, r8; ret; 
0x00000000099206: mov rax, [rip+0x152c5b]; mov rax, [rax]; test rax, rax; je short 0x0000000000099217; call rax; 
0x000000000980c0: mov rax, [rip+0x153da9]; xor r8d, r8d; mov dword ptr fs:[rax], 0xc; mov rax, r8; ret; 
0x000000000979fd: mov rax, [rip+0x1543bc]; mov [rsp+0x8], r8; xor edi, edi; call qword ptr [rax]; 
0x000000000978e8: mov rax, [rip+0x1544d1]; xor edi, edi; call qword ptr [rax]; 
0x000000000978a2: mov rax, [rip+0x154517]; call qword ptr [rax]; 
0x0000000009758f: mov rax, [rip+0x15482a]; mov [rsp+0x18], r11; mov rdi, r13; mov [rsp+0x10], r10; call qword ptr [rax]; 
0x000000000961fe: mov rax, [rip+0x155cdb]; mov [rax], rdx; ret; 
0x000000000961f4: mov rax, [rip+0x155de5]; mov [rax], rsi; mov rax, [rip+0x155cdb]; mov [rax], rdx; ret; 
0x00000000093864: mov rax, [rip+0x159d35]; ret; 
0x000000000945ae: mov rax, [rip+0x15ce5b]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009457e: mov rax, [rip+0x15ce83]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009454e: mov rax, [rip+0x15ceab]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009451e: mov rax, [rip+0x15ced3]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000944ee: mov rax, [rip+0x15cefb]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000944be: mov rax, [rip+0x15cf23]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009448e: mov rax, [rip+0x15cf4b]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009445e: mov rax, [rip+0x15cf73]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000943ee: mov rax, [rip+0x15cfa3]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000094424: mov rax, [rip+0x15cfa5]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000943be: mov rax, [rip+0x15cfcb]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009438e: mov rax, [rip+0x15cff3]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009435e: mov rax, [rip+0x15d01b]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009432e: mov rax, [rip+0x15d043]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000942fe: mov rax, [rip+0x15d06b]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000942ce: mov rax, [rip+0x15d093]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009429e: mov rax, [rip+0x15d0bb]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009426e: mov rax, [rip+0x15d0e3]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009423e: mov rax, [rip+0x15d10b]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009420e: mov rax, [rip+0x15d133]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000941de: mov rax, [rip+0x15d15b]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000008d370: mov rax, [rip+0x15eaf9]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000008aee8: mov rax, [rip+0x160f81]; mov dword ptr fs:[rax], 0x9; mov eax, 0xffffffff; ret; 
0x00000000084760: mov rax, [rip+0x167709]; mov dword ptr fs:[rax], 0x16; mov rax, 0xffffffffffffffff; ret; 
0x0000000007a6f7: mov rax, [rip+0x1730b1]; shl rdx, 0x2; lea rcx, [rbx+rdx]; add rdx, r15; call qword ptr [rax+r9*8]; 
0x00000000074047: mov rax, [rip+0x179761]; shl rdx, 0x2; lea rcx, [rbx+rdx]; add rdx, r15; call qword ptr [rax+r9*8]; 
0x0000000005edda: mov rax, [rip+0x18e9cf]; mov rcx, r14; call qword ptr [rax+r8*8]; 
0x00000000048360: mov rax, [rip+0x1a3b09]; mov dword ptr fs:[rax], 0x5; mov eax, 0xffffffff; ret; 
0x00000000047c88: mov rax, [rip+0x1a41e1]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000440a9: mov rax, [rip+0x1a7dc0]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000043f69: mov rax, [rip+0x1a7f00]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000043e20: mov rax, [rip+0x1a8049]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000043d60: mov rax, [rip+0x1a8109]; mov dword ptr fs:[rax], 0x16; mov rax, 0xffffffffffffffff; ret; 
0x00000000043c84: mov rax, [rip+0x1a81e5]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x00000000043c68: mov rax, [rip+0x1a8201]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000043c20: mov rax, [rip+0x1a8249]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000043bd0: mov rax, [rip+0x1a8299]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000043b81: mov rax, [rip+0x1a82e8]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000043b22: mov rax, [rip+0x1a8347]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000432d0: mov rax, [rip+0x1a8b99]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000043090: mov rax, [rip+0x1a8dd9]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000042f50: mov rax, [rip+0x1a8f19]; mov dword ptr fs:[rax], 0x16; mov rax, 0xffffffffffffffff; ret; 
0x00000000042571: mov rax, [rip+0x1a98f8]; mov dword ptr fs:[rax], 0x22; add rsp, 0x8; ret; 
0x0000000004224b: mov rax, [rip+0x1a9c1e]; mov dword ptr fs:[rax], 0x22; add rsp, 0x8; ret; 
0x00000000041e8a: mov rax, [rip+0x1a9fdf]; mov dword ptr fs:[rax], 0x22; add rsp, 0x8; ret; 
0x000000000412e0: mov rax, [rip+0x1aab89]; mov dword ptr fs:[rax], 0x9; mov eax, 0xffffffff; pop rbp; ret; 
0x00000000041280: mov rax, [rip+0x1aabe9]; mov dword ptr fs:[rax], 0x2a; mov rax, r11; ret; 
0x00000000042dfe: mov rax, [rip+0x1ae613]; mov rsi, rsp; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000344d4: mov rax, [rip+0x1b792d]; add rax, fs:[0x0]; ret; 
0x000000000344f4: mov rax, [rip+0x1b79ed]; add rax, fs:[0x0]; ret; 
0x00000000034514: mov rax, [rip+0x1b7a0d]; add rax, fs:[0x0]; ret; 
0x00000000033d84: mov rax, [rip+0x1b803d]; movsxd rdi, edi; mov rax, fs:[rax]; mov rax, [rax+rdi*8+0x80]; ret; 
0x00000000033d40: mov rax, [rip+0x1b80a1]; mov [rax], rdx; ret; 
0x00000000038597: mov rax, [rip+0x1b8e9a]; lea rdi, [rip+0x1b555b]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000038536: mov rax, [rip+0x1b8ef3]; lea rdi, [rip+0x1b55bc]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000032914: mov rax, [rip+0x1b94ad]; mov rax, fs:[rax]; mov rax, [rax]; mov eax, [rax+0xa8]; ret; 
0x00000000036582: mov rax, [rip+0x1baeaf]; lea rdi, [rip+0x1b7630]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000036519: mov rax, [rip+0x1baf10]; lea rdi, [rip+0x1b7699]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000363ea: mov rax, [rip+0x1bb047]; lea rdi, [rip+0x1b77c8]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003638a: mov rax, [rip+0x1bb097]; lea rdi, [rip+0x1b7828]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003627c: mov rax, [rip+0x1bb1b5]; lea rdi, [rip+0x1b78f6]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000036210: mov rax, [rip+0x1bb219]; lea rdi, [rip+0x1b7962]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035f79: mov rax, [rip+0x1bb4b8]; lea rdi, [rip+0x1b79f9]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035f4b: mov rax, [rip+0x1bb4e6]; lea rdi, [rip+0x1b7ba7]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035e6d: mov rax, [rip+0x1bb5c4]; lea rdi, [rip+0x1b7b05]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035e45: mov rax, [rip+0x1bb5eb]; lea rdi, [rip+0x1b7cac]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035cff: mov rax, [rip+0x1bb732]; lea rdi, [rip+0x1b7c73]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035ccd: mov rax, [rip+0x1bb764]; lea rdi, [rip+0x1b7e25]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000359c5: mov rax, [rip+0x1bba6c]; lea rdi, [rip+0x1b81ad]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035980: mov rax, [rip+0x1bbaa1]; lea rdi, [rip+0x1b81f2]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035923: mov rax, [rip+0x1bbafe]; lea rdi, [rip+0x1b81cf]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000358fb: mov rax, [rip+0x1bbb25]; lea rdi, [rip+0x1b8076]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035702: mov rax, [rip+0x1bbd2f]; lea rdi, [r13+0x80]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003559a: mov rax, [rip+0x1bbe97]; lea rdi, [r13+0x80]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000353af: mov rax, [rip+0x1bc07a]; mov rdi, r12; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003538c: mov rax, [rip+0x1bc0a5]; mov rdi, r12; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035363: mov rax, [rip+0x1bc0ce]; lea rdi, [r13+0x80]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003506a: mov rax, [rip+0x1bc3b7]; lea rdi, [r13+0x80]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035069: mov rax, [rip+0x1bc3b7]; lea rdi, [r13+0x80]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000345b1: mov rax, [rip+0x1bce78]; lea rdi, [rip+0x1b9541]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000033add: mov rax, [rip+0x1bd954]; lea rdi, [rip+0x1b9e95]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000033a02: mov rax, [rip+0x1bda27]; lea rdi, [rip+0x1b9f70]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003398b: mov rax, [rip+0x1bdaa6]; lea rdi, [rip+0x1b9fe7]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000338f1: mov rax, [rip+0x1bdb38]; lea rdi, [rip+0x1ba081]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000033357: mov rax, [rip+0x1be0da]; lea rdi, [rip+0x1ba61b]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000332ed: mov rax, [rip+0x1be144]; lea rdi, [rip+0x1ba685]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000330ed: mov rax, [rip+0x1be33c]; lea rdi, [rip+0x1ba885]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000002f5d4: mov rax, [rip+0x1be38d]; ret; 
0x000000000310bc: mov rax, [rip+0x1c0375]; lea rdi, [rip+0x1bc8b6]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000030cb4: mov rax, [rip+0x1c077d]; lea rdi, [rip+0x1bccbe]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000030b62: mov rax, [rip+0x1c08cf]; lea rdi, [rip+0x1bce10]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000030a7a: mov rax, [rip+0x1c09b7]; lea rdi, [rip+0x1bcef8]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000309ed: mov rax, [rip+0x1c0a44]; lea rdi, [rip+0x1bcf85]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000307b8: mov rax, [rip+0x1c0c79]; lea rdi, [rip+0x1bd1ba]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000030770: mov rax, [rip+0x1c0cb9]; lea rdi, [rip+0x1bd202]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000024718: mov rax, [rip+0x1c7751]; mov dword ptr fs:[rax], 0x9; mov eax, 0xffffffff; ret; 
0x00000000024434: mov rax, [rip+0x1c7a35]; add rax, fs:[0x0]; ret; 
0x0000000002402b: mov rax, [rip+0x1c7e7e]; mov rsi, [rsp+0x8]; mov edi, [rsp+0x14]; mov rdx, [rax]; call rbx; 
0x00000000025ae4: mov rax, [rip+0x1cb6bd]; ret; 
0x00000000025ad4: mov rax, [rip+0x1cb6dd]; ret; 
0x000000000240d6: mov rax, [rip+0x1cd39b]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000163344: mov rax, [rip+0x88b25]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x00000000162ce4: mov rax, [rip+0x89185]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x00000000162cc4: mov rax, [rip+0x891a5]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x00000000162c84: mov rax, [rip+0x891e5]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x00000000162c64: mov rax, [rip+0x89205]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x00000000162c44: mov rax, [rip+0x89225]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x00000000162c24: mov rax, [rip+0x89245]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x00000000160bd4: mov rax, [rip+0x8b295]; mov dword ptr fs:[rax], 0x26; xor eax, eax; ret; 
0x000000001609e0: mov rax, [rip+0x8b489]; mov dword ptr fs:[rax], 0x16; xor eax, eax; ret; 
0x0000000015fd03: mov rax, [rip+0x8c156]; mov r8, [rbx+0x10]; call qword ptr [rax+0x1e0]; 
0x0000000015f894: mov rax, [rip+0x8c5c5]; jmp qword ptr [rax+0x1f0]; 
0x0000000015f7d1: mov rax, [rip+0x8c688]; mov rdi, [rdi]; call qword ptr [rax+0x1e8]; 
0x0000000015f778: mov rax, [rip+0x8c6e1]; mov rdi, [rsp]; mov rax, [rax+0x1d8]; jmp rax; 
0x0000000015f744: mov rax, [rip+0x8c715]; mov rsi, rdi; mov rdi, [rsp]; mov rax, [rax+0x1d8]; jmp rax; 
0x0000000015f2d1: mov rax, [rip+0x8cb88]; call qword ptr [rax+0x1f8]; 
0x0000000015c964: mov rax, [rip+0x8f505]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x00000000160b5e: mov rax, [rip+0x90863]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000160b2e: mov rax, [rip+0x9088b]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000160afe: mov rax, [rip+0x908b3]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000160bac: mov rax, [rip+0x908bd]; mov rdi, r8; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000160ace: mov rax, [rip+0x908db]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000160a9e: mov rax, [rip+0x90903]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000160a6e: mov rax, [rip+0x9092b]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000015fcc0: mov rax, [rip+0x914c1]; call qword ptr [rax+0x10]; 
0x0000000015fbe0: mov rax, [rip+0x91599]; test rax, rax; je short 0x000000000015fbd7; call qword ptr [rax+0x18]; 
0x0000000015fa48: mov rax, [rip+0x91739]; call qword ptr [rax+0x8]; 
0x0000000015f950: mov rax, [rip+0x91831]; call qword ptr [rax]; 
0x00000000153094: mov rax, [rip+0x98d05]; lea rdx, [rip+0x9dd9e]; mov fs:[rax], rdx; ret; 
0x00000000141024: mov rax, [rip+0xaadfd]; mov eax, [rax+0x18]; test eax, eax; jne short 0x0000000000141038; ret; 
0x00000000141114: mov rax, [rip+0xaaed5]; mov rax, fs:[rax]; ret; 
0x00000000142e94: mov rax, [rip+0xadb85]; test rax, rax; jne short 0x0000000000142ea8; ret; 
0x00000000141a5c: mov rax, [rip+0xaefbd]; test rax, rax; je short 0x0000000000141a70; add rsp, 0x8; ret; 
0x0000000012feb4: mov rax, [rip+0xbbf9d]; add rax, fs:[0x0]; ret; 
0x0000000012f440: mov rax, [rip+0xbca29]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000001228e4: mov rax, [rip+0xc9575]; mov eax, [rax+0x38]; ret; 
0x000000001200d4: mov rax, [rip+0xcbd95]; mov dword ptr fs:[rax], 0x26; mov rax, 0xffffffffffffffff; ret; 
0x0000000011f910: mov rax, [rip+0xcc559]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000011f8d0: mov rax, [rip+0xcc599]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000122000: mov rax, [rip+0xcda71]; mov rax, [rax+0x18]; add dword ptr [rax], 0x1; ret; 
0x00000000121ff0: mov rax, [rip+0xcda81]; mov rax, [rax+0x18]; add word ptr [rax], 0x1; ret; 
0x0000000011d040: mov rax, [rip+0xcee29]; mov dword ptr fs:[rax], 0x2; xor eax, eax; ret; 
0x0000000011c518: mov rax, [rip+0xcf951]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000011c300: mov rax, [rip+0xcfc51]; mov rax, [rax]; test rax, rax; je 0x000000000011c400; call rax; 
0x0000000011c11f: mov rax, [rip+0xcfe32]; mov rax, [rax]; test rax, rax; je short 0x000000000011c190; call rax; 
0x00000000119800: mov rax, [rip+0xd2669]; mov dword ptr fs:[rax], 0x16; ret; 
0x000000001197cb: mov rax, [rip+0xd269e]; mov dword ptr fs:[rax], 0x16; xor eax, eax; ret; 
0x000000001197b9: mov rax, [rip+0xd26b0]; mov dword ptr fs:[rax], 0xc; xor eax, eax; pop rbx; ret; 
0x00000000118f8d: mov rax, [rip+0xd2edc]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000118928: mov rax, [rip+0xd3541]; mov dword ptr fs:[rax], 0x16; mov rax, 0xffffffffffffffff; ret; 
0x000000001157a0: mov rax, [rip+0xd66c9]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000115778: mov rax, [rip+0xd66f1]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000115634: mov rax, [rip+0xd6835]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x00000000114c64: mov rax, [rip+0xd71f5]; mov rax, [rax+0x18]; test rax, rax; je short 0x0000000000114c75; ret; 
0x000000001143b4: mov rax, [rip+0xd7ab5]; mov dword ptr fs:[rax], 0x26; mov rax, 0xffffffffffffffff; ret; 
0x000000001142f8: mov rax, [rip+0xd7b71]; mov dword ptr fs:[rax], 0xc; mov eax, 0xffffffff; ret; 
0x000000001142e4: mov rax, [rip+0xd7bdd]; mov qword ptr [rax], 0xffffffffffffffff; xor eax, eax; ret; 
0x0000000011378b: mov rax, [rip+0xd86de]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000011372a: mov rax, [rip+0xd873f]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000113178: mov rax, [rip+0xd8cf1]; mov dword ptr fs:[rax], 0x9; mov eax, 0xffffffff; ret; 
0x00000000113142: mov rax, [rip+0xd8d27]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000112958: mov rax, [rip+0xd9511]; mov dword ptr fs:[rax], 0x16; xor eax, eax; ret; 
0x00000000112820: mov rax, [rip+0xd9649]; mov dword ptr fs:[rax], 0x16; mov eax, 0x1; ret; 
0x00000000115bbd: mov rax, [rip+0xd9aac]; mov [rip+0xd9ad5], rax; lea rax, [rip+0xd9aa6]; add rsp, 0x8; ret; 
0x00000000110dd0: mov rax, [rip+0xdb099]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000114a86: mov rax, [rip+0xdc9f3]; movups [rsp+0x8], xmm0; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000001149e6: mov rax, [rip+0xdca93]; movups [rsp+0x8], xmm0; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000010dc68: mov rax, [rip+0xde201]; mov dword ptr fs:[rax], 0x5f; mov eax, 0xffffffff; ret; 
0x0000000010dc50: mov rax, [rip+0xde219]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010dbf4: mov rax, [rip+0xde275]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x0000000010da18: mov rax, [rip+0xde451]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010d9b8: mov rax, [rip+0xde4b1]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010d958: mov rax, [rip+0xde511]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010d5d0: mov rax, [rip+0xde899]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010d570: mov rax, [rip+0xde8f9]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010d510: mov rax, [rip+0xde959]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000fecc4: mov rax, [rip+0xed2ed]; mov r8, [rax]; mov [rax], rdi; mov rax, r8; ret; 
0x00000000123530: mov rax, [rsi+0x68]; mov edi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x1; ret; 
0x00000000034304: mov rax, [rsi+0x68]; movsxd rdi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x1; ret; 
0x00000000034484: mov rax, [rsi+0x70]; movsxd rdi, edi; mov eax, [rax+rdi*4]; ret; 
0x00000000034494: mov rax, [rsi+0x78]; movsxd rdi, edi; mov eax, [rax+rdi*4]; ret; 
0x00000000032900: mov rax, [rsi+rax*8+0x80]; ret; 
0x000000000a8b20: mov rax, [rsp+0x10]; mov [rdi], rax; lea rax, [rdi+rdx-0x1]; ret; 
0x0000000014d2ef: mov rax, [rsp+0x10]; mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x18]; 
0x00000000160889: mov rax, [rsp+0x10]; mov rdi, [rsp+0x18]; call rax; 
0x00000000149db0: mov rax, [rsp+0x10]; mov rdx, r13; mov rsi, r12; mov rdi, rbp; call rax; 
0x0000000014d1cd: mov rax, [rsp+0x10]; mov rsi, r12; mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x8]; 
0x000000000240ac: mov rax, [rsp+0x18]; call rax; 
0x0000000015f2e3: mov rax, [rsp+0x18]; mov rdx, r14; mov esi, 0x40; mov rdi, rbx; call rax; 
0x000000001182ba: mov rax, [rsp+0x18]; xor rax, fs:[0x28]; jne short 0x00000000001182d2; add rsp, 0xd8; ret; 
0x00000000118393: mov rax, [rsp+0x18]; xor rax, fs:[0x28]; jne short 0x00000000001183ab; add rsp, 0xd8; ret; 
0x0000000011bd4f: mov rax, [rsp+0x18]; xor rax, fs:[0x28]; jne short 0x000000000011bd67; add rsp, 0xd8; ret; 
0x0000000011be0f: mov rax, [rsp+0x18]; xor rax, fs:[0x28]; jne short 0x000000000011be27; add rsp, 0xd8; ret; 
0x0000000011c256: mov rax, [rsp+0x18]; xor rax, fs:[0x28]; jne short 0x000000000011c26e; add rsp, 0xd8; ret; 
0x0000000011c4c3: mov rax, [rsp+0x18]; xor rax, fs:[0x28]; jne short 0x000000000011c4db; add rsp, 0xd8; ret; 
0x00000000129b71: mov rax, [rsp+0x18]; xor rax, fs:[0x28]; jne short 0x0000000000129b89; add rsp, 0xd8; ret; 
0x0000000012b89a: mov rax, [rsp+0x18]; xor rax, fs:[0x28]; jne short 0x000000000012b8b2; add rsp, 0xd8; ret; 
0x00000000154135: mov rax, [rsp+0x18]; xor rax, fs:[0x28]; jne short 0x0000000000154168; add rsp, 0x28; ret; 
0x000000000279f4: mov rax, [rsp+0x20]; call rax; 
0x000000000273f8: mov rax, [rsp+0x28]; call rax; 
0x0000000002824b: mov rax, [rsp+0x30]; call rax; 
0x0000000008dbfa: mov rax, [rsp+0x38]; xor rax, fs:[0x28]; jne short 0x000000000008dc1b; add rsp, 0x48; ret; 
0x00000000155ba8: mov rax, [rsp+0x38]; xor rax, fs:[0x28]; jne short 0x0000000000155bbd; add rsp, 0x48; ret; 
0x0000000011bfea: mov rax, [rsp+0x408]; xor rax, fs:[0x28]; jne short 0x000000000011c005; add rsp, 0x418; ret; 
0x0000000014ef70: mov rax, [rsp+0x48]; call qword ptr [rax+0x28]; 
0x00000000150e39: mov rax, [rsp+0x48]; mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x18]; 
0x0000000014f1a1: mov rax, [rsp+0x58]; mov rdi, r12; call qword ptr [rax+0x20]; 
0x0000000015396d: mov rax, [rsp+0x68]; xor rax, fs:[0x28]; jne short 0x0000000000153982; add rsp, 0x78; ret; 
0x000000001539dd: mov rax, [rsp+0x68]; xor rax, fs:[0x28]; jne short 0x00000000001539f2; add rsp, 0x78; ret; 
0x00000000153a4d: mov rax, [rsp+0x68]; xor rax, fs:[0x28]; jne short 0x0000000000153a62; add rsp, 0x78; ret; 
0x00000000153aae: mov rax, [rsp+0x68]; xor rax, fs:[0x28]; jne short 0x0000000000153ac3; add rsp, 0x78; ret; 
0x00000000153b12: mov rax, [rsp+0x68]; xor rax, fs:[0x28]; jne short 0x0000000000153b27; add rsp, 0x78; ret; 
0x00000000153b7d: mov rax, [rsp+0x68]; xor rax, fs:[0x28]; jne short 0x0000000000153b92; add rsp, 0x78; ret; 
0x00000000153c00: mov rax, [rsp+0x68]; xor rax, fs:[0x28]; jne short 0x0000000000153c15; add rsp, 0x78; ret; 
0x00000000034a15: mov rax, [rsp+0x8]; add rsp, 0x18; ret; 
0x000000000482a4: mov rax, [rsp+0x8]; add rsp, 0x28; ret; 
0x00000000113087: mov rax, [rsp+0x8]; add rsp, 0x30; pop rbp; ret; 
0x00000000121000: mov rax, [rsp+0x8]; add rsp, 0x38; ret; 
0x000000000240ba: mov rax, [rsp+0x8]; lea rdi, [rip+0x18fda2]; mov rsi, [rax]; xor eax, eax; call qword ptr [rdx+0x1d0]; 
0x00000000088f1a: mov rax, [rsp+0x8]; mov esi, 0xffffffff; mov rdi, r8; call qword ptr [rax+0x18]; 
0x000000001486e8: mov rax, [rsp+0x8]; mov esi, r14d; mov rdi, r13; call qword ptr [rax+0x30]; 
0x00000000119c48: mov rax, [rsp+0x8]; mov rdi, r13; call rax; 
0x00000000119c47: mov rax, [rsp+0x8]; mov rdi, r13; call rax; 
0x00000000146219: mov rax, [rsp+0x8]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x000000001377ef: mov rax, [rsp+0x8]; mov rdi, rbx; call rax; 
0x00000000042bb7: mov rax, [rsp+0x8]; xor rax, fs:[0x28]; jne short 0x0000000000042bcc; add rsp, 0x18; ret; 
0x00000000047ddf: mov rax, [rsp+0x8]; xor rax, fs:[0x28]; jne short 0x0000000000047df4; add rsp, 0x18; ret; 
0x00000000047e2c: mov rax, [rsp+0x8]; xor rax, fs:[0x28]; jne short 0x0000000000047e41; add rsp, 0x18; ret; 
0x00000000147b9c: mov rax, [rsp+0xc8]; mov rdi, rbx; call qword ptr [rax+0x20]; 
0x00000000042643: mov rax, [rsp-0x10]; and rax, rdx; sub rax, rdx; shr rax, 0x3f; ret; 
0x0000000012039f: mov rax, [rsp]; add rsp, 0x20; pop rbp; ret; 
0x0000000010c1f3: mov rax, [rsp]; add rsp, 0x28; ret; 
0x00000000120465: mov rax, [rsp]; add rsp, 0x30; pop rbp; ret; 
0x00000000122946: mov rax, [rsp]; add rsp, 0x38; ret; 
0x000000001229a7: mov rax, [rsp]; add rsp, 0x40; ret; 
0x000000000457aa: mov rax, [rsp]; call rax; 
0x000000000457ab: mov rax, [rsp]; call rax; 
0x00000000087469: mov rax, [rsp]; mov esi, r12d; mov rdi, r14; call qword ptr [rax+0x18]; 
0x00000000045910: mov rax, [rsp]; mov r13, r15; add r15, r12; call rax; 
0x0000000013850e: mov rax, [rsp]; mov rdi, r12; call rax; 
0x000000000920b3: mov rax, [rsp]; mov rdi, r15; lea rbx, [rsi+0x1]; movzx esi, byte ptr [rsi]; call qword ptr [rax+0x18]; 
0x00000000045710: mov rax, [rsp]; mov rdx, r14; mov rsi, r13; mov rdi, r12; call rax; 
0x0000000004589a: mov rax, [rsp]; mov rsi, r12; mov rdi, r13; call rax; 
0x0000000004589b: mov rax, [rsp]; mov rsi, r12; mov rdi, r13; call rax; 
0x00000000094c74: mov rax, fs:[0x10]; ret; 
0x000000000d038a: mov rax, fs:[0x28]; mov [rsp+0x58], rax; xor eax, eax; mov [rsp+0x50], r12; call rbx; 
0x0000000015f199: mov rax, fs:[0x28]; mov [rsp+0x68], rax; xor eax, eax; call qword ptr [r12+0xf08]; 
0x00000000052154: mov rax, fs:[0x28]; mov [rsp+0x8], rax; xor eax, eax; mov eax, 0x3e; syscall; 
0x00000000047250: mov rax, fs:[r12]; lock add qword ptr [rax+0x460], 0x1; lea rdi, [rbp+0x908]; call qword ptr [rbp+0xf10]; 
0x00000000033d8e: mov rax, fs:[rax]; mov rax, [rax+rdi*8+0x80]; ret; 
0x0000000003291b: mov rax, fs:[rax]; mov rax, [rax]; mov eax, [rax+0xa8]; ret; 
0x000000000342be: mov rax, fs:[rax]; mov rax, [rax]; mov rax, [rax+0x48]; mov eax, [rax+rdi*4+0x200]; ret; 
0x0000000003428e: mov rax, fs:[rax]; mov rax, [rax]; mov rax, [rax+0x58]; mov eax, [rax+rdi*4+0x200]; ret; 
0x000000000341ee: mov rax, fs:[rax]; movzx eax, word ptr [rax+rdi*2]; and ax, 0x1000; movzx eax, ax; ret; 
0x000000000341ce: mov rax, fs:[rax]; movzx eax, word ptr [rax+rdi*2]; and ax, 0x100; movzx eax, ax; ret; 
0x000000000341ae: mov rax, fs:[rax]; movzx eax, word ptr [rax+rdi*2]; and ax, 0x2000; movzx eax, ax; ret; 
0x0000000003412e: mov rax, fs:[rax]; movzx eax, word ptr [rax+rdi*2]; and ax, 0x200; movzx eax, ax; ret; 
0x0000000003416e: mov rax, fs:[rax]; movzx eax, word ptr [rax+rdi*2]; and ax, 0x4000; movzx eax, ax; ret; 
0x000000000340ce: mov rax, fs:[rax]; movzx eax, word ptr [rax+rdi*2]; and ax, 0x400; movzx eax, ax; ret; 
0x0000000003414e: mov rax, fs:[rax]; movzx eax, word ptr [rax+rdi*2]; and ax, 0x8000; movzx eax, ax; ret; 
0x0000000003410e: mov rax, fs:[rax]; movzx eax, word ptr [rax+rdi*2]; and ax, 0x800; movzx eax, ax; ret; 
0x0000000003426e: mov rax, fs:[rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x1; ret; 
0x000000000340ee: mov rax, fs:[rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x2; movzx eax, ax; ret; 
0x0000000003418e: mov rax, fs:[rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x4; movzx eax, ax; ret; 
0x000000000340ae: mov rax, fs:[rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x8; movzx eax, ax; ret; 
0x0000000012cee2: mov rax, fs:[rax]; movzx eax, word ptr [rax+rdx*2]; shr ax, 0xe; and eax, 0x1; ret; 
0x0000000014111b: mov rax, fs:[rax]; ret; 
0x00000000152f2b: mov rax, fs:[rbp+0x8]; mov dword ptr [r13], 0xe; lea rsi, [r13+0x8]; mov rdi, rbp; call qword ptr [rax+0x10]; 
0x0000000015315c: mov rax, fs:[rbx]; test rax, rax; je short 0x0000000000153170; pop rbx; ret; 
0x0000000005b3d2: mov rax, r10; pop rbx; ret; 
0x0000000005b366: mov rax, r10; ret; 
0x0000000005b367: mov rax, r10; ret; 
0x000000000a0baf: mov rax, r11; pop rbx; pop rbp; pop r12; ret; 
0x00000000041273: mov rax, r11; ret; 
0x000000000d1d05: mov rax, r12; pop r12; pop r13; pop r14; ret; 
0x000000000a03c8: mov rax, r12; pop r12; pop r13; ret; 
0x00000000034b78: mov rax, r12; pop r12; ret; 
0x0000000011a741: mov rax, r12; pop rbp; pop r12; jmp rax; 
0x00000000119ac8: mov rax, r12; pop rbp; pop r12; pop r13; jmp rax; 
0x0000000002ff63: mov rax, r12; pop rbp; pop r12; pop r13; ret; 
0x0000000008e275: mov rax, r12; pop rbp; pop r12; pop r14; ret; 
0x000000000477d2: mov rax, r12; pop rbp; pop r12; ret; 
0x0000000006275e: mov rax, r12; pop rbx; pop r12; ret; 
0x00000000034ada: mov rax, r12; pop rbx; pop rbp; pop r12; ret; 
0x0000000011923e: mov rax, r12; pop rdx; pop r12; ret; 
0x0000000009eff5: mov rax, r13; mov rdx, r12; pop r12; pop r13; ret; 
0x000000001416f0: mov rax, r13; pop r12; pop r13; pop r14; ret; 
0x0000000009fa18: mov rax, r13; pop r12; pop r13; ret; 
0x000000000bcc30: mov rax, r13; pop rbp; pop r12; pop r13; ret; 
0x000000000dee95: mov rax, r15; call rax; 
0x000000000d4abf: mov rax, r8; add rsp, 0x8; ret; 
0x0000000009ef4b: mov rax, r8; cmp [rdi+0x8], rsi; jb short 0x000000000009ef60; mov [rdi], rsi; ret; 
0x0000000013c609: mov rax, r8; mov byte ptr [r8+0x2], 0x0; ret; 
0x00000000116f05: mov rax, r8; mov byte ptr [rsi-0x1], 0x0; ret; 
0x0000000009a4ca: mov rax, r8; pop r12; pop r13; ret; 
0x00000000095685: mov rax, r8; pop r12; ret; 
0x0000000009a536: mov rax, r8; pop r13; ret; 
0x0000000013b760: mov rax, r8; pop rbp; pop r12; pop r13; ret; 
0x00000000085946: mov rax, r8; pop rbp; pop r12; ret; 
0x000000000995d3: mov rax, r8; pop rbp; ret; 
0x0000000009cfae: mov rax, r8; pop rbx; pop r12; ret; 
0x00000000099ce1: mov rax, r8; pop rbx; pop rbp; pop r12; ret; 
0x00000000046cbb: mov rax, r8; pop rbx; pop rbp; ret; 
0x000000000993dc: mov rax, r8; pop rbx; ret; 
0x00000000046cb0: mov rax, r8; ret; 
0x0000000018d2d3: mov rax, r8; shr rax, 0x2; vzeroupper; ret; 
0x00000000188930: mov rax, r8; vzeroupper; ret; 
0x00000000038cd5: mov rax, r9; pop r12; ret; 
0x0000000007a1a7: mov rax, r9; pop r14; ret; 
0x00000000038ca7: mov rax, r9; pop rbx; pop rbp; pop r12; ret; 
0x000000000a870e: mov rax, r9; ret; 
0x0000000008f53d: mov rax, rbp; pop rbx; pop rbp; pop r12; ret; 
0x0000000008d96e: mov rax, rbx; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000010cc84: mov rax, rbx; mov rdx, [rbx+0xb0]; mov rsi, [rbx+0xa0]; mov rdi, [rbx+0x80]; call qword ptr [rax+0x88]; 
0x000000000a2c69: mov rax, rbx; pop rbx; cmovne rax, rdi; ret; 
0x0000000008d8b3: mov rax, rbx; pop rbx; pop rbp; pop r12; ret; 
0x000000000627d6: mov rax, rbx; test r8d, r8d; jne short 0x00000000000627e0; pop rbx; ret; 
0x00000000047374: mov rax, rdi; cqo; idiv rsi; ret; 
0x00000000047334: mov rax, rdi; cqo; xor rax, rdx; sub rax, rdx; ret; 
0x0000000005b551: mov rax, rdi; ret; 
0x0000000012fa1d: mov rax, rdi; sar rax, 0x6; ret; 
0x000000001782be: mov rax, rdi; sub r8, 0x10; lea rcx, [rdx+0x10]; jne 0x0000000000178810; ret; 
0x000000001784b4: mov rax, rdi; sub r8, 0x1; lea rcx, [rdx+0x1]; jne 0x0000000000178810; ret; 
0x000000001784d6: mov rax, rdi; sub r8, 0x2; lea rcx, [rdx+0x2]; jne 0x0000000000178810; ret; 
0x000000001784fc: mov rax, rdi; sub r8, 0x3; lea rcx, [rdx+0x3]; jne 0x0000000000178810; ret; 
0x00000000178514: mov rax, rdi; sub r8, 0x4; lea rcx, [rdx+0x4]; jne 0x0000000000178810; ret; 
0x0000000017853a: mov rax, rdi; sub r8, 0x5; lea rcx, [rdx+0x5]; jne 0x0000000000178810; ret; 
0x0000000017855c: mov rax, rdi; sub r8, 0x6; lea rcx, [rdx+0x6]; jne 0x0000000000178810; ret; 
0x0000000017857a: mov rax, rdi; sub r8, 0x7; lea rcx, [rdx+0x7]; jne 0x0000000000178810; ret; 
0x00000000178256: mov rax, rdi; sub r8, 0x8; lea rcx, [rdx+0x8]; jne 0x0000000000178810; ret; 
0x0000000017859c: mov rax, rdi; sub r8, 0x9; lea rcx, [rdx+0x9]; jne 0x0000000000178810; ret; 
0x000000001785bc: mov rax, rdi; sub r8, 0xa; lea rcx, [rdx+0xa]; jne 0x0000000000178810; ret; 
0x000000001785dc: mov rax, rdi; sub r8, 0xb; lea rcx, [rdx+0xb]; jne 0x0000000000178810; ret; 
0x000000001785fc: mov rax, rdi; sub r8, 0xc; lea rcx, [rdx+0xc]; jne 0x0000000000178810; ret; 
0x0000000017861e: mov rax, rdi; sub r8, 0xd; lea rcx, [rdx+0xd]; jne 0x0000000000178810; ret; 
0x0000000017863e: mov rax, rdi; sub r8, 0xe; lea rcx, [rdx+0xe]; jne 0x0000000000178810; ret; 
0x0000000017865e: mov rax, rdi; sub r8, 0xf; lea rcx, [rdx+0xf]; jne 0x0000000000178810; ret; 
0x0000000018a800: mov rax, rdi; vzeroupper; ret; 
0x0000000013c962: mov rax, rdx; movsxd rdx, ecx; ret; 
0x00000000056b24: mov rax, rdx; pop rbx; ret; 
0x00000000055c75: mov rax, rdx; ret; 
0x000000001348a1: mov rax, rsi; pop rbx; ret; 
0x00000000042dea: mov rbp, r9; nop; jmp rdx; 
0x000000001492cb: mov rbp, rax; bswap edx; mov [rcx], edx; mov edx, eax; call qword ptr [rbx+0x10]; 
0x0000000010eb15: mov rbp, rdi; mov rdi, rbp; mov eax, 0x4f; syscall; 
0x00000000031fa9: mov rbp, rdi; test rax, rax; je short 0x0000000000031fb3; call rax; 
0x00000000149d0b: mov rbp, rdx; call qword ptr [rbx+0x10]; 
0x00000000149d0a: mov rbp, rdx; call qword ptr [rbx+0x10]; 
0x00000000082a96: mov rbp, rdx; mov rdi, [rdi+0xe0]; call rax; 
0x000000000e3697: mov rbx, [rbp-0x8]; leave; ret; 
0x000000000de8c8: mov rbx, r13; mov rdi, rbp; call r12; 
0x0000000011ef50: mov rbx, rdi; mov rdi, rcx; sub rsp, 0x8; call rsi; 
0x000000000874dc: mov rbx, rdi; test byte ptr [rdi], 0x2; jne short 0x0000000000087558; mov rax, [rax+0xe0]; call qword ptr [rax+0x68]; 
0x00000000119724: mov rbx, rsi; je short 0x0000000000119730; pop rbx; ret; 
0x00000000104625: mov rcx, [r12]; call rax; 
0x00000000121cc5: mov rcx, [r8]; mov [rdx+0x10], rcx; mov [r8], rax; mov qword ptr [rip+0xca686], 0x0; ret; 
0x00000000121c45: mov rcx, [r8]; mov [rdx+0x10], rcx; mov [r8], rax; mov qword ptr [rip+0xca706], 0x0; ret; 
0x00000000086e85: mov rcx, [rax+0x10]; mov [rax], rdx; mov [rax+0x10], rdx; mov [rax+0x40], rcx; ret; 
0x0000000012d0f7: mov rcx, [rbp-0x8]; xor rcx, fs:[0x28]; jne 0x000000000012d1dd; leave; ret; 
0x0000000018fa3d: mov rcx, [rcx-0x8]; mov [rdi], rsi; mov [r9-0x8], rcx; ret; 
0x0000000018fa3c: mov rcx, [rcx-0x8]; mov [rdi], rsi; mov [r9-0x8], rcx; ret; 
0x00000000121294: mov rcx, [rdi+0x8]; xor eax, eax; cmp byte ptr [rcx], 0x0; je short 0x00000000001212a0; ret; 
0x000000000e44d4: mov rcx, [rip+0x107995]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000e44a4: mov rcx, [rip+0x1079c5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000e4474: mov rcx, [rip+0x1079f5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000e4444: mov rcx, [rip+0x107a25]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000e43e4: mov rcx, [rip+0x107a85]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000e43b4: mov rcx, [rip+0x107ab5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000e4164: mov rcx, [rip+0x107d05]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000e31b4: mov rcx, [rip+0x108cb5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000e2dd4: mov rcx, [rip+0x109095]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000e2b84: mov rcx, [rip+0x1092e5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000d4224: mov rcx, [rip+0x117c45]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000d41f4: mov rcx, [rip+0x117c75]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000555a8: mov rcx, [rip+0x1968c1]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000005509f: mov rcx, [rip+0x196dca]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000054f3c: mov rcx, [rip+0x196f2d]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000043a04: mov rcx, [rip+0x1a8465]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000043414: mov rcx, [rip+0x1a8a55]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000016884e: mov rcx, [rip+0x83adb]; lea r11, [rip+0x55264]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x000000001687f4: mov rcx, [rip+0x83b35]; lea r11, [rip+0x5527e]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x00000000165e6e: mov rcx, [rip+0x864bb]; lea r11, [rip+0x57a84]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x00000000165e0d: mov rcx, [rip+0x8651c]; lea r11, [rip+0x57aa5]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x00000000120817: mov rcx, [rip+0xcb652]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001207e4: mov rcx, [rip+0xcb685]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001207b4: mov rcx, [rip+0xcb6b5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000120787: mov rcx, [rip+0xcb6e2]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000120304: mov rcx, [rip+0xcbb65]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001202d7: mov rcx, [rip+0xcbb92]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001202a4: mov rcx, [rip+0xcbbc5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000120274: mov rcx, [rip+0xcbbf5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001201a4: mov rcx, [rip+0xcbcc5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001200b4: mov rcx, [rip+0xcbdb5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000120074: mov rcx, [rip+0xcbdf5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000120044: mov rcx, [rip+0xcbe25]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000120014: mov rcx, [rip+0xcbe55]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011ffe7: mov rcx, [rip+0xcbe82]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011ffb7: mov rcx, [rip+0xcbeb2]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011ff84: mov rcx, [rip+0xcbee5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011ff57: mov rcx, [rip+0xcbf12]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011ff24: mov rcx, [rip+0xcbf45]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fef4: mov rcx, [rip+0xcbf75]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fec7: mov rcx, [rip+0xcbfa2]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fe94: mov rcx, [rip+0xcbfd5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fe64: mov rcx, [rip+0xcc005]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fe34: mov rcx, [rip+0xcc035]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fe04: mov rcx, [rip+0xcc065]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fdd7: mov rcx, [rip+0xcc092]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fda7: mov rcx, [rip+0xcc0c2]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fd77: mov rcx, [rip+0xcc0f2]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fd44: mov rcx, [rip+0xcc125]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fd14: mov rcx, [rip+0xcc155]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fce7: mov rcx, [rip+0xcc182]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fcb7: mov rcx, [rip+0xcc1b2]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fc84: mov rcx, [rip+0xcc1e5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fc54: mov rcx, [rip+0xcc215]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fc24: mov rcx, [rip+0xcc245]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fbf4: mov rcx, [rip+0xcc275]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fbc4: mov rcx, [rip+0xcc2a5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fb97: mov rcx, [rip+0xcc2d2]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fb64: mov rcx, [rip+0xcc305]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fb37: mov rcx, [rip+0xcc332]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fb04: mov rcx, [rip+0xcc365]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fad4: mov rcx, [rip+0xcc395]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011faa4: mov rcx, [rip+0xcc3c5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fa74: mov rcx, [rip+0xcc3f5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fa44: mov rcx, [rip+0xcc425]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fa14: mov rcx, [rip+0xcc455]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011f9e4: mov rcx, [rip+0xcc485]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011f9b7: mov rcx, [rip+0xcc4b2]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011f974: mov rcx, [rip+0xcc4f5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011f944: mov rcx, [rip+0xcc525]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011f424: mov rcx, [rip+0xcca45]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011f3f7: mov rcx, [rip+0xcca72]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011f364: mov rcx, [rip+0xccb05]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011f234: mov rcx, [rip+0xccc35]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011f204: mov rcx, [rip+0xccc65]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011f1a4: mov rcx, [rip+0xcccc5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011f16d: mov rcx, [rip+0xcccfc]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011f054: mov rcx, [rip+0xcce15]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011f024: mov rcx, [rip+0xcce45]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011cfe7: mov rcx, [rip+0xcee82]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011cfb4: mov rcx, [rip+0xceeb5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011cf87: mov rcx, [rip+0xceee2]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011cf54: mov rcx, [rip+0xcef15]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011cf24: mov rcx, [rip+0xcef45]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011cef7: mov rcx, [rip+0xcef72]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011cec4: mov rcx, [rip+0xcefa5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011ce97: mov rcx, [rip+0xcefd2]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011ce67: mov rcx, [rip+0xcf002]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011ce34: mov rcx, [rip+0xcf035]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011ce04: mov rcx, [rip+0xcf065]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011cdd7: mov rcx, [rip+0xcf092]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000118bd4: mov rcx, [rip+0xd3295]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000118ba4: mov rcx, [rip+0xd32c5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000118b74: mov rcx, [rip+0xd32f5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000118b44: mov rcx, [rip+0xd3325]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000118b17: mov rcx, [rip+0xd3352]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000118ae4: mov rcx, [rip+0xd3385]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000118ab4: mov rcx, [rip+0xd33b5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001189e4: mov rcx, [rip+0xd3485]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001189b4: mov rcx, [rip+0xd34b5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000118776: mov rcx, [rip+0xd36f3]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001156c4: mov rcx, [rip+0xd67a5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000115694: mov rcx, [rip+0xd67d5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000115664: mov rcx, [rip+0xd6805]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000115324: mov rcx, [rip+0xd6b45]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000115264: mov rcx, [rip+0xd6c05]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001151a4: mov rcx, [rip+0xd6cc5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000115174: mov rcx, [rip+0xd6cf5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000114f74: mov rcx, [rip+0xd6ef5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000114e24: mov rcx, [rip+0xd7045]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001143e4: mov rcx, [rip+0xd7a85]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000114224: mov rcx, [rip+0xd7c45]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000113e24: mov rcx, [rip+0xd8045]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000112fe7: mov rcx, [rip+0xd8e82]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010fd74: mov rcx, [rip+0xdc0f5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010fd44: mov rcx, [rip+0xdc125]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010fd14: mov rcx, [rip+0xdc155]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010fce7: mov rcx, [rip+0xdc182]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010fcb4: mov rcx, [rip+0xdc1b5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010fc84: mov rcx, [rip+0xdc1e5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010fc54: mov rcx, [rip+0xdc215]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010fc27: mov rcx, [rip+0xdc242]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010fbf4: mov rcx, [rip+0xdc275]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010f437: mov rcx, [rip+0xdca32]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010f404: mov rcx, [rip+0xdca65]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010f3d4: mov rcx, [rip+0xdca95]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010f3a4: mov rcx, [rip+0xdcac5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010ea84: mov rcx, [rip+0xdd3e5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010ea54: mov rcx, [rip+0xdd415]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010e994: mov rcx, [rip+0xdd4d5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010e964: mov rcx, [rip+0xdd505]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010e934: mov rcx, [rip+0xdd535]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010e904: mov rcx, [rip+0xdd565]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010e8d4: mov rcx, [rip+0xdd595]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010e5b4: mov rcx, [rip+0xdd8b5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010dcc4: mov rcx, [rip+0xde1a5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010dc94: mov rcx, [rip+0xde1d5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010dbd4: mov rcx, [rip+0xde295]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010dba4: mov rcx, [rip+0xde2c5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010da74: mov rcx, [rip+0xde3f5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010da44: mov rcx, [rip+0xde425]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010d414: mov rcx, [rip+0xdea55]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001027e4: mov rcx, [rip+0xe9685]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001027b4: mov rcx, [rip+0xe96b5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000102784: mov rcx, [rip+0xe96e5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000102754: mov rcx, [rip+0xe9715]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000102724: mov rcx, [rip+0xe9745]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001026f4: mov rcx, [rip+0xe9775]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001026c4: mov rcx, [rip+0xe97a5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000102694: mov rcx, [rip+0xe97d5]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000b8704: mov rcx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], rcx; lea rax, [rdi+0x17]; ret; 
0x000000000b9574: mov rcx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], rcx; lea rax, [rdi+0x18]; ret; 
0x000000000b7054: mov rcx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], rcx; mov [rdi+0x18], dh; ret; 
0x000000000b7034: mov rcx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], rcx; ret; 
0x000000000b86c4: mov rcx, [rsi+0xe]; movdqu [rdi], xmm0; mov [rdi+0xe], rcx; lea rax, [rdi+0x15]; ret; 
0x000000000b9534: mov rcx, [rsi+0xe]; movdqu [rdi], xmm0; mov [rdi+0xe], rcx; lea rax, [rdi+0x16]; ret; 
0x000000000b6ff4: mov rcx, [rsi+0xe]; movdqu [rdi], xmm0; mov [rdi+0xe], rcx; ret; 
0x000000000b86e4: mov rcx, [rsi+0xf]; movdqu [rdi], xmm0; mov [rdi+0xf], rcx; lea rax, [rdi+0x16]; ret; 
0x000000000b9554: mov rcx, [rsi+0xf]; movdqu [rdi], xmm0; mov [rdi+0xf], rcx; lea rax, [rdi+0x17]; ret; 
0x000000000b7014: mov rcx, [rsi+0xf]; movdqu [rdi], xmm0; mov [rdi+0xf], rcx; ret; 
0x000000000bbc32: mov rcx, [rsi+rdx-0x8]; mov rsi, [rsi]; mov [rdi+rdx-0x8], rcx; mov [rdi], rsi; ret; 
0x0000000018e02a: mov rcx, [rsi-0x8]; cmp rcx, rax; jne 0x000000000018ea63; xor eax, eax; ret; 
0x0000000018f65a: mov rcx, [rsi-0x8]; cmp rcx, rax; jne 0x000000000018f8a3; xor eax, eax; ret; 
0x0000000018ea36: mov rcx, [rsi-0x8]; cmp rcx, rax; jne short 0x000000000018ea63; xor eax, eax; ret; 
0x0000000018f876: mov rcx, [rsi-0x8]; cmp rcx, rax; jne short 0x000000000018f8a3; xor eax, eax; ret; 
0x0000000016d103: mov rcx, [rsi-0x8]; mov [rdi-0xd], rdx; mov [rdi-0x8], rcx; ret; 
0x0000000016d104: mov rcx, [rsi-0x8]; mov [rdi-0xd], rdx; mov [rdi-0x8], rcx; ret; 
0x0000000016d074: mov rcx, [rsi-0x8]; mov [rdi-0xe], rdx; mov [rdi-0x8], rcx; ret; 
0x0000000016d073: mov rcx, [rsi-0x8]; mov [rdi-0xe], rdx; mov [rdi-0x8], rcx; ret; 
0x0000000016cfe4: mov rcx, [rsi-0x8]; mov [rdi-0xf], rdx; mov [rdi-0x8], rcx; ret; 
0x000000001679f0: mov rcx, [rsi-0x9]; mov edx, [rsi-0x4]; mov [rdi-0x9], rcx; mov [rdi-0x4], edx; ret; 
0x00000000167bd0: mov rcx, [rsi-0xa]; mov edx, [rsi-0x4]; mov [rdi-0xa], rcx; mov [rdi-0x4], edx; ret; 
0x00000000167db0: mov rcx, [rsi-0xb]; mov edx, [rsi-0x4]; mov [rdi-0xb], rcx; mov [rdi-0x4], edx; ret; 
0x00000000167f90: mov rcx, [rsi-0xc]; mov edx, [rsi-0x4]; mov [rdi-0xc], rcx; mov [rdi-0x4], edx; ret; 
0x00000000168180: mov rcx, [rsi-0xd]; mov rdx, [rsi-0x8]; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000168380: mov rcx, [rsi-0xe]; mov rdx, [rsi-0x8]; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000168580: mov rcx, [rsi-0xf]; mov rdx, [rsi-0x8]; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000016da84: mov rcx, [rsi]; mov [rdi+0x1], rdx; mov [rdi], rcx; ret; 
0x0000000016da14: mov rcx, [rsi]; mov [rdi+0x2], rdx; mov [rdi], rcx; ret; 
0x0000000016d9a4: mov rcx, [rsi]; mov [rdi+0x3], rdx; mov [rdi], rcx; ret; 
0x0000000016d934: mov rcx, [rsi]; mov [rdi+0x4], rdx; mov [rdi], rcx; ret; 
0x0000000016d8c4: mov rcx, [rsi]; mov [rdi+0x5], rdx; mov [rdi], rcx; ret; 
0x0000000016d854: mov rcx, [rsi]; mov [rdi+0x6], rdx; mov [rdi], rcx; ret; 
0x0000000016d7e4: mov rcx, [rsi]; mov [rdi+0x7], rdx; mov [rdi], rcx; ret; 
0x000000000b8550: mov rcx, [rsi]; mov [rdi+0x8], dh; mov [rdi], rcx; lea rax, [rdi+0x8]; ret; 
0x000000000b6f00: mov rcx, [rsi]; mov [rdi+0x8], dh; mov [rdi], rcx; ret; 
0x000000000b7bf0: mov rcx, [rsi]; mov dl, [rsi+0x8]; mov [rdi], rcx; mov [rdi+0x8], dl; ret; 
0x000000000b6f10: mov rcx, [rsi]; mov dx, [rsi+0x8]; mov [rdi], rcx; mov [rdi+0x8], dx; ret; 
0x000000000b6f20: mov rcx, [rsi]; mov edx, [rsi+0x7]; mov [rdi], rcx; mov [rdi+0x7], edx; ret; 
0x000000000b6f30: mov rcx, [rsi]; mov edx, [rsi+0x8]; mov [rdi], rcx; mov [rdi+0x8], edx; ret; 
0x000000000b6f40: mov rcx, [rsi]; mov rdx, [rsi+0x5]; mov [rdi], rcx; mov [rdi+0x5], rdx; ret; 
0x000000000b6f50: mov rcx, [rsi]; mov rdx, [rsi+0x6]; mov [rdi], rcx; mov [rdi+0x6], rdx; ret; 
0x000000000b6f60: mov rcx, [rsi]; mov rdx, [rsi+0x7]; mov [rdi], rcx; mov [rdi+0x7], rdx; ret; 
0x000000000435e3: mov rcx, [rsp+0x108]; xor rcx, fs:[0x28]; jne short 0x0000000000043605; add rsp, 0x118; ret; 
0x00000000043666: mov rcx, [rsp+0x108]; xor rcx, fs:[0x28]; jne short 0x0000000000043688; add rsp, 0x118; ret; 
0x0000000016082c: mov rcx, [rsp+0x10]; mov rdi, [rsp+0x18]; call rcx; 
0x000000001509df: mov rcx, [rsp+0x10]; mov rdi, r15; call rcx; 
0x00000000137d60: mov rcx, [rsp+0x10]; mov rdx, r14; mov rdi, r15; mov rsi, [rsp+0x8]; call rbp; 
0x00000000042f0e: mov rcx, [rsp+0x138]; xor rcx, fs:[0x28]; jne short 0x0000000000042f29; add rsp, 0x148; ret; 
0x00000000043d11: mov rcx, [rsp+0x138]; xor rcx, fs:[0x28]; jne short 0x0000000000043d2c; add rsp, 0x148; ret; 
0x0000000002f17a: mov rcx, [rsp+0x18]; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; call r15; 
0x0000000002a341: mov rcx, [rsp+0x18]; mov rsi, [rsp+0x48]; mov rdi, [rsp+0x40]; call r14; 
0x00000000047465: mov rcx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x000000000004747a; add rsp, 0x28; ret; 
0x00000000047555: mov rcx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x000000000004756a; add rsp, 0x28; ret; 
0x00000000052c27: mov rcx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x0000000000052c3f; add rsp, 0xd8; ret; 
0x00000000061c9a: mov rcx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x0000000000061cb2; add rsp, 0xd8; ret; 
0x00000000061d6f: mov rcx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x0000000000061d87; add rsp, 0xd8; ret; 
0x00000000061e26: mov rcx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x0000000000061e3e; add rsp, 0xd8; ret; 
0x00000000061fba: mov rcx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x0000000000061fd2; add rsp, 0xd8; ret; 
0x0000000006207a: mov rcx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x0000000000062092; add rsp, 0xd8; ret; 
0x00000000062168: mov rcx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x0000000000062180; add rsp, 0xd8; ret; 
0x0000000006223f: mov rcx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x0000000000062257; add rsp, 0xd8; ret; 
0x00000000063192: mov rcx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x00000000000631aa; add rsp, 0xd8; ret; 
0x0000000006326d: mov rcx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x0000000000063285; add rsp, 0xd8; ret; 
0x000000000864ea: mov rcx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x0000000000086502; add rsp, 0xd8; ret; 
0x000000000865a6: mov rcx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x00000000000865be; add rsp, 0xd8; ret; 
0x0000000008669f: mov rcx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x00000000000866b7; add rsp, 0xd8; ret; 
0x0000000008676f: mov rcx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x0000000000086787; add rsp, 0xd8; ret; 
0x00000000086828: mov rcx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x0000000000086840; add rsp, 0xd8; ret; 
0x000000000cabb2: mov rcx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x00000000000cabca; add rsp, 0xd8; ret; 
0x000000000cac8d: mov rcx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x00000000000caca5; add rsp, 0xd8; ret; 
0x00000000113533: mov rcx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x000000000011358b; add rsp, 0x58; ret; 
0x000000001135d1: mov rcx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x000000000011362b; add rsp, 0x58; ret; 
0x00000000121124: mov rcx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x000000000012117b; add rsp, 0x58; ret; 
0x0000000012de7b: mov rcx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x000000000012de98; add rsp, 0xd8; ret; 
0x0000000012e153: mov rcx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x000000000012e16b; add rsp, 0xd8; ret; 
0x0000000012f173: mov rcx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x000000000012f18b; add rsp, 0xd8; ret; 
0x0000000012f6e3: mov rcx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x000000000012f6fb; add rsp, 0xd8; ret; 
0x0000000012f7c3: mov rcx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x000000000012f7db; add rsp, 0xd8; ret; 
0x0000000012f8a3: mov rcx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x000000000012f8bb; add rsp, 0xd8; ret; 
0x000000001366fb: mov rcx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x0000000000136710; add rsp, 0x28; ret; 
0x0000000013e1f3: mov rcx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x000000000013e208; add rsp, 0x28; ret; 
0x000000000caa12: mov rcx, [rsp+0x20]; mov rdi, rbp; mov rsi, [rsp+0x18]; call rbx; 
0x00000000146d9e: mov rcx, [rsp+0x20]; mov rdx, [rsp+0x18]; mov rsi, [rsp+0x10]; call qword ptr [rax]; 
0x0000000002974e: mov rcx, [rsp+0x20]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x48]; call r13; 
0x0000000014d1ee: mov rcx, [rsp+0x28]; mov rdi, r12; call rcx; 
0x0000000002cc2e: mov rcx, [rsp+0x28]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x48]; call r13; 
0x0000000010e4e8: mov rcx, [rsp+0x28]; xor rcx, fs:[0x28]; jne 0x000000000010e595; add rsp, 0x68; ret; 
0x0000000005b897: mov rcx, [rsp+0x28]; xor rcx, fs:[0x28]; jne short 0x000000000005b8c5; add rsp, 0x38; ret; 
0x000000000df430: mov rcx, [rsp+0x28]; xor rcx, fs:[0x28]; jne short 0x00000000000df493; add rsp, 0x38; ret; 
0x000000000e41b0: mov rcx, [rsp+0x28]; xor rcx, fs:[0x28]; jne short 0x00000000000e4213; add rsp, 0x38; ret; 
0x000000000e4250: mov rcx, [rsp+0x28]; xor rcx, fs:[0x28]; jne short 0x00000000000e42b3; add rsp, 0x38; ret; 
0x000000000e4521: mov rcx, [rsp+0x28]; xor rcx, fs:[0x28]; jne short 0x00000000000e4593; add rsp, 0x38; ret; 
0x000000000e45d1: mov rcx, [rsp+0x28]; xor rcx, fs:[0x28]; jne short 0x00000000000e4643; add rsp, 0x38; ret; 
0x000000001133ec: mov rcx, [rsp+0x28]; xor rcx, fs:[0x28]; jne short 0x0000000000113443; add rsp, 0x68; ret; 
0x000000001149b1: mov rcx, [rsp+0x28]; xor rcx, fs:[0x28]; jne short 0x0000000000114a1b; add rsp, 0x38; ret; 
0x00000000114a51: mov rcx, [rsp+0x28]; xor rcx, fs:[0x28]; jne short 0x0000000000114abb; add rsp, 0x38; ret; 
0x00000000114b06: mov rcx, [rsp+0x28]; xor rcx, fs:[0x28]; jne short 0x0000000000114b8b; add rsp, 0x38; ret; 
0x00000000114bd6: mov rcx, [rsp+0x28]; xor rcx, fs:[0x28]; jne short 0x0000000000114c5b; add rsp, 0x38; ret; 
0x00000000115966: mov rcx, [rsp+0x28]; xor rcx, fs:[0x28]; jne short 0x00000000001159ad; add rsp, 0x68; ret; 
0x00000000116b8a: mov rcx, [rsp+0x28]; xor rcx, fs:[0x28]; jne short 0x0000000000116bd5; add rsp, 0x38; ret; 
0x00000000116c59: mov rcx, [rsp+0x28]; xor rcx, fs:[0x28]; jne short 0x0000000000116ca5; add rsp, 0x38; ret; 
0x0000000013668e: mov rcx, [rsp+0x28]; xor rcx, fs:[0x28]; jne short 0x00000000001366a3; add rsp, 0x38; ret; 
0x0000000015fc7f: mov rcx, [rsp+0x28]; xor rcx, fs:[0x28]; jne short 0x000000000015fccc; add rsp, 0x38; ret; 
0x000000000290ba: mov rcx, [rsp+0x30]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; mov rax, [rsp+0x20]; call rax; 
0x0000000002d960: mov rcx, [rsp+0x30]; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; mov rax, [rsp+0x18]; call rax; 
0x0000000002c263: mov rcx, [rsp+0x30]; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; mov rax, [rsp+0x20]; call rax; 
0x00000000130cbf: mov rcx, [rsp+0x38]; mov esi, r14d; mov rdi, r13; call qword ptr [rsp+0x50]; 
0x0000000010def2: mov rcx, [rsp+0x38]; xor rcx, fs:[0x28]; jne 0x000000000010dfb9; add rsp, 0x78; ret; 
0x00000000115816: mov rcx, [rsp+0x48]; xor rcx, fs:[0x28]; jne short 0x0000000000115837; add rsp, 0x58; ret; 
0x0000000015f926: mov rcx, [rsp+0x48]; xor rcx, fs:[0x28]; jne short 0x000000000015f96e; add rsp, 0x58; ret; 
0x00000000144ed5: mov rcx, [rsp+0x50]; mov rdx, [rsp+0xe0]; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; call qword ptr [rsp+0x68]; 
0x0000000011f0db: mov rcx, [rsp+0x58]; xor rcx, fs:[0x28]; jne short 0x000000000011f103; add rsp, 0x68; ret; 
0x0000000015fa1d: mov rcx, [rsp+0x58]; xor rcx, fs:[0x28]; jne short 0x000000000015fa74; add rsp, 0x68; ret; 
0x0000000015fbb6: mov rcx, [rsp+0x58]; xor rcx, fs:[0x28]; jne short 0x000000000015fc14; add rsp, 0x68; ret; 
0x000000001538f7: mov rcx, [rsp+0x68]; xor rcx, fs:[0x28]; jne short 0x000000000015390c; add rsp, 0x78; ret; 
0x00000000043347: mov rcx, [rsp+0x88]; xor rcx, fs:[0x28]; jne 0x00000000000433f6; add rsp, 0x98; ret; 
0x00000000122941: mov rcx, [rsp+0x8]; mov rax, [rsp]; add rsp, 0x38; ret; 
0x000000001229a2: mov rcx, [rsp+0x8]; mov rax, [rsp]; add rsp, 0x40; ret; 
0x00000000146962: mov rcx, [rsp+0x8]; mov rdi, rbp; call rcx; 
0x000000000ded78: mov rcx, [rsp+0x8]; mov rdx, [rsp+0x68]; mov rdi, r15; mov rsi, [rsp+0x60]; call r12; 
0x0000000009d621: mov rcx, [rsp+0x8]; xor rcx, fs:[0x28]; jne 0x000000000009d6e2; add rsp, 0x18; ret; 
0x00000000047e7e: mov rcx, [rsp+0x8]; xor rcx, fs:[0x28]; jne short 0x0000000000047e93; add rsp, 0x18; ret; 
0x00000000047ecb: mov rcx, [rsp+0x8]; xor rcx, fs:[0x28]; jne short 0x0000000000047ee0; add rsp, 0x18; ret; 
0x00000000047f1e: mov rcx, [rsp+0x8]; xor rcx, fs:[0x28]; jne short 0x0000000000047f33; add rsp, 0x18; ret; 
0x00000000047f6b: mov rcx, [rsp+0x8]; xor rcx, fs:[0x28]; jne short 0x0000000000047f80; add rsp, 0x18; ret; 
0x0000000010d462: mov rcx, [rsp+0x8]; xor rcx, fs:[0x28]; jne short 0x000000000010d477; add rsp, 0x18; ret; 
0x0000000011347b: mov rcx, [rsp+0x8]; xor rcx, fs:[0x28]; jne short 0x00000000001134d3; add rsp, 0x18; ret; 
0x00000000113b1f: mov rcx, [rsp+0x8]; xor rcx, fs:[0x28]; jne short 0x0000000000113b3b; add rsp, 0x18; ret; 
0x000000001196db: mov rcx, [rsp+0x8]; xor rcx, fs:[0x28]; jne short 0x00000000001196f0; add rsp, 0x18; ret; 
0x00000000120ae0: mov rcx, [rsp+0x8]; xor rcx, fs:[0x28]; jne short 0x0000000000120af5; add rsp, 0x18; ret; 
0x0000000013c714: mov rcx, [rsp+0x8]; xor rcx, fs:[0x28]; jne short 0x000000000013c730; add rsp, 0x18; ret; 
0x0000000013e1a0: mov rcx, [rsp+0x8]; xor rcx, fs:[0x28]; jne short 0x000000000013e1b5; add rsp, 0x18; ret; 
0x00000000044441: mov rcx, [rsp+0x98]; xor rcx, fs:[0x28]; jne short 0x000000000004445c; add rsp, 0xa8; ret; 
0x00000000147efc: mov rcx, [rsp]; mov rsi, r15; mov rdi, rbx; xor eax, eax; call rcx; 
0x00000000147e0a: mov rcx, [rsp]; xor eax, eax; mov rdi, rbx; call rcx; 
0x000000000ca895: mov rcx, r12; mov rdx, r13; call rbx; 
0x000000000e007d: mov rcx, r12; mov rdx, r13; mov rsi, rbp; mov edi, r14d; call qword ptr [rsp+0x48]; 
0x000000000e051d: mov rcx, r12; mov rdx, r13; mov rsi, rbp; mov rdi, r14; call qword ptr [rsp+0x48]; 
0x000000001529fd: mov rcx, r12; mov rdx, rbp; mov rsi, rbx; call rax; 
0x00000000131231: mov rcx, r12; mov rsi, rbp; mov rdi, r13; call qword ptr [rsp+0x40]; 
0x00000000144d64: mov rcx, r13; call r10; 
0x000000001381b0: mov rcx, r13; mov edx, 0x400; mov rsi, r15; mov rdi, r12; call rbp; 
0x00000000149eed: mov rcx, r13; mov rdx, r12; mov rsi, rbp; mov rdi, rbx; call rax; 
0x0000000005ede1: mov rcx, r14; call qword ptr [rax+r8*8]; 
0x00000000144969: mov rcx, r14; mov rdi, r13; call r12; 
0x0000000008a82e: mov rcx, r14; mov rdi, r15; call r12; 
0x00000000134148: mov rcx, r14; mov rdx, rbp; mov rsi, r13; mov edi, r12d; call qword ptr [rsp+0x40]; 
0x00000000133b78: mov rcx, r14; mov rdx, rbp; mov rsi, r13; mov rdi, r12; call qword ptr [rsp+0x40]; 
0x000000000f98d5: mov rcx, rax; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000000a8658: mov rcx, rax; xor eax, eax; mov [rdx], rcx; ret; 
0x0000000013276a: mov rcx, rbp; mov rdx, r14; mov rsi, r12; call qword ptr [rsp+0x40]; 
0x000000000e2323: mov rcx, rbp; mov rdx, r14; mov rsi, r12; mov edi, r13d; call qword ptr [rsp+0x30]; 
0x000000000e1f33: mov rcx, rbp; mov rdx, r14; mov rsi, r12; mov rdi, r13; call qword ptr [rsp+0x30]; 
0x0000000008dff6: mov rcx, rbx; sub rcx, rdx; cmp rax, rcx; jbe short 0x000000000008e020; call qword ptr [rbx+0x60]; 
0x000000001468a3: mov rcx, rbx; xor eax, eax; pop rbx; pop rbp; jmp rcx; 
0x000000000bbc15: mov rcx, rdx; rep movsb [rdi], [rsi]; ret; 
0x0000000014dad7: mov rcx, rsi; xor eax, eax; mov rsi, rdx; add rdi, 0x10; jmp rcx; 
0x00000000192b6b: mov rdi, 0x101010101010101; imul rax, rdi; shr rax, 0x38; ret; 
0x0000000011ef24: mov rdi, 0xfffff00000000000; shl rax, 0x20; and rax, rdi; or rax, rsi; ret; 
0x0000000011a8a0: mov rdi, [r12]; call rbx; 
0x000000000457a4: mov rdi, [r12]; mov rdx, r14; mov rax, [rsp]; call rax; 
0x00000000146a92: mov rdi, [r12]; mov rsi, r13; mov rax, [rdi+0x38]; call qword ptr [rax+0x10]; 
0x00000000146945: mov rdi, [r12]; mov rsi, rbp; mov rax, [rdi+0x38]; call qword ptr [rax+0x8]; 
0x000000000bcf90: mov rdi, [r12]; movzx esi, bl; call rbp; 
0x000000000bd054: mov rdi, [r12]; push 0x0; lea rcx, [rax+0x1]; lea r9, [rsp+0x28]; call rbx; 
0x000000001469f8: mov rdi, [r12]; test r15d, r15d; je short 0x0000000000146a80; mov rax, [rdi+0x38]; call qword ptr [rax+0x18]; 
0x000000001971eb: mov rdi, [r13+0x10]; add rdi, rbp; call r12; 
0x0000000011a90b: mov rdi, [r13]; call rbx; 
0x00000000146cd4: mov rdi, [r13]; test rdi, rdi; je short 0x0000000000146cec; mov rax, [rdi+0x8]; call qword ptr [rax+0x20]; 
0x0000000011a9cb: mov rdi, [r14]; call rbx; 
0x0000000011aae2: mov rdi, [r14]; call rbx; 
0x00000000149458: mov rdi, [r15]; add r12, rax; sub edx, eax; mov rsi, r12; call qword ptr [r15+0x40]; 
0x00000000149379: mov rdi, [r15]; add rbx, r14; sub edx, r14d; mov rsi, rbx; call qword ptr [r15+0x40]; 
0x0000000011ab3c: mov rdi, [r15]; call rbx; 
0x0000000011ae02: mov rdi, [r8]; call rbx; 
0x0000000014d3b4: mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x10]; 
0x0000000014d2f4: mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x18]; 
0x000000001516c6: mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x20]; 
0x0000000014d1d5: mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x8]; 
0x000000001509c3: mov rdi, [rax]; mov rsi, r15; mov rax, [rdi+0x38]; call qword ptr [rax+0x8]; 
0x00000000119ba6: mov rdi, [rbp+0x10]; test rdi, rdi; jne short 0x0000000000119bd6; mov rdi, [rbp]; call rbx; 
0x00000000110390: mov rdi, [rbp+0x18]; mov rsi, [rsp+0x28]; lea rcx, [rbp+0x28]; mov edx, 0x1; call qword ptr [rbp+0x40]; 
0x000000001106f0: mov rdi, [rbp+0x18]; mov rsi, [rsp+0x28]; lea rcx, [rbp+0x28]; mov edx, 0x2; call qword ptr [rbp+0x40]; 
0x00000000110670: mov rdi, [rbp+0x18]; mov rsi, [rsp+0x28]; lea rcx, [rbp+0x28]; mov edx, 0x5; call qword ptr [rbp+0x40]; 
0x000000000472e9: mov rdi, [rbp+0x8]; call rax; 
0x00000000110b38: mov rdi, [rbp-0x118]; mov rsi, r9; call qword ptr [rbp-0xf0]; 
0x0000000010442b: mov rdi, [rbp-0x1b0]; mov rdx, [r12]; mov rax, [rbp-0x1e0]; call rax; 
0x00000000104616: mov rdi, [rbp-0x1b0]; push rax; mov rax, [rbp-0x1e0]; mov rcx, [r12]; call rax; 
0x000000000e7873: mov rdi, [rbp-0x4c8]; lea rsi, [rbp-0x450]; call qword ptr [r15+0x40]; 
0x000000001496b8: mov rdi, [rbp]; add r12, rbx; sub edx, ebx; mov rsi, r12; call qword ptr [rbp+0x40]; 
0x00000000119baf: mov rdi, [rbp]; call rbx; 
0x00000000152491: mov rdi, [rbp]; mov rax, [rdi+0x8]; call qword ptr [rax+0x20]; 
0x00000000146e86: mov rdi, [rbp]; test rdi, rdi; je short 0x0000000000146e96; mov rax, [rdi+0x8]; call qword ptr [rax+0x20]; 
0x0000000010ff7a: mov rdi, [rbx+0x18]; lea rcx, [rbx+0x28]; mov rsi, r14; mov edx, [rdx+rax]; call qword ptr [rbx+0x40]; 
0x0000000009e8c0: mov rdi, [rbx+0x48]; call rax; 
0x0000000009e821: mov rdi, [rbx+0x48]; mov rsi, r14; call rax; 
0x00000000137b7c: mov rdi, [rbx+0x48]; test rdi, rdi; jne short 0x0000000000137b70; pop rbx; ret; 
0x0000000010cc95: mov rdi, [rbx+0x80]; call qword ptr [rax+0x88]; 
0x00000000149b30: mov rdi, [rbx]; add rbp, rax; sub edx, eax; mov rsi, rbp; call qword ptr [rbx+0x40]; 
0x00000000151764: mov rdi, [rbx]; lea rdx, [rsp+0x18]; mov esi, 0x6; mov rax, [rdi+0x8]; call qword ptr [rax+0x28]; 
0x000000001516d0: mov rdi, [rbx]; mov rax, [rdi+0x8]; call qword ptr [rax+0x20]; 
0x0000000014dd24: mov rdi, [rdi+0x40]; mov eax, [rdi]; test eax, eax; jne short 0x000000000014dd30; ret; 
0x00000000154424: mov rdi, [rdi+0x40]; mov eax, [rdi]; test eax, eax; jne short 0x0000000000154430; ret; 
0x0000000009e67c: mov rdi, [rdi+0x48]; mov rsi, rbp; call rax; 
0x0000000015f865: mov rdi, [rdi+0x8]; push 0x0; lea rcx, [rsi+0x398]; push 0x0; call qword ptr [rax+0x1e0]; 
0x0000000015f814: mov rdi, [rdi+0x8]; push 0x0; lea rcx, [rsi+0x398]; push 0x2; call qword ptr [rax+0x1e0]; 
0x00000000082a99: mov rdi, [rdi+0xe0]; call rax; 
0x00000000082a5d: mov rdi, [rdi+0xe0]; jmp rax; 
0x00000000082ae6: mov rdi, [rdi+0xe0]; lea rsi, [rsp+0x8]; call rax; 
0x0000000015f7d8: mov rdi, [rdi]; call qword ptr [rax+0x1e8]; 
0x0000000012bde3: mov rdi, [rdx+0x50]; mov rsi, rdx; call rax; 
0x00000000143744: mov rdi, [rip+0xad365]; ror rdi, 0x11; xor rdi, fs:[0x30]; call rax; 
0x000000001173c4: mov rdi, [rip+0xd839d]; test rdi, rdi; jne short 0x00000000001173e0; mov eax, 0x1; ret; 
0x00000000138160: mov rdi, [rsp+0x10]; mov rsi, r12; call qword ptr [rsp+0x58]; 
0x0000000016088e: mov rdi, [rsp+0x18]; call rax; 
0x00000000160831: mov rdi, [rsp+0x18]; call rcx; 
0x00000000044848: mov rdi, [rsp+0x18]; mov rdx, rbp; mov rsi, r12; call rbx; 
0x000000000d0215: mov rdi, [rsp+0x18]; xor rdi, fs:[0x28]; jne short 0x00000000000d0239; add rsp, 0x28; ret; 
0x000000001029c3: mov rdi, [rsp+0x28]; xor rdi, fs:[0x28]; jne short 0x0000000000102a26; add rsp, 0x38; ret; 
0x00000000144ee7: mov rdi, [rsp+0x38]; call qword ptr [rsp+0x68]; 
0x0000000002b8cc: mov rdi, [rsp+0x38]; call r15; 
0x0000000002f2e9: mov rdi, [rsp+0x38]; lea r8, [rsp+0xa0]; call r15; 
0x0000000002b2d8: mov rdi, [rsp+0x38]; mov rax, [rsp+0x20]; call rax; 
0x0000000002a34a: mov rdi, [rsp+0x40]; call r14; 
0x0000000002a898: mov rdi, [rsp+0x40]; call rbx; 
0x00000000029758: mov rdi, [rsp+0x48]; call r13; 
0x00000000029c58: mov rdi, [rsp+0x48]; call rbx; 
0x0000000002c657: mov rdi, [rsp+0x50]; call rbx; 
0x0000000002d96a: mov rdi, [rsp+0x50]; mov rax, [rsp+0x18]; call rax; 
0x0000000002c26d: mov rdi, [rsp+0x50]; mov rax, [rsp+0x20]; call rax; 
0x000000000276a2: mov rdi, [rsp+0x58]; call r14; 
0x000000000284bc: mov rdi, [rsp+0x58]; call rbx; 
0x000000000290c4: mov rdi, [rsp+0x58]; mov rax, [rsp+0x20]; call rax; 
0x000000000273f3: mov rdi, [rsp+0x58]; mov rax, [rsp+0x28]; call rax; 
0x00000000028246: mov rdi, [rsp+0x58]; mov rax, [rsp+0x30]; call rax; 
0x00000000027e07: mov rdi, [rsp+0x60]; call rbx; 
0x000000000279ef: mov rdi, [rsp+0x60]; mov rax, [rsp+0x20]; call rax; 
0x000000000921e2: mov rdi, [rsp+0x8]; add rsp, 0x20; pop rbx; jmp rax; 
0x00000000048283: mov rdi, [rsp+0x8]; mov eax, 0x13e; syscall; 
0x00000000118a43: mov rdi, [rsp+0x8]; mov eax, 0x1a; syscall; 
0x000000001129c3: mov rdi, [rsp+0x8]; mov eax, 0x7; syscall; 
0x000000000434a6: mov rdi, [rsp+0x8]; mov esi, 0x8; mov r8d, eax; mov eax, 0x82; syscall; 
0x00000000147852: mov rdi, [rsp+0x8]; mov r12d, eax; mov rax, [rdi+0x8]; call qword ptr [rax+0x20]; 
0x00000000112ab7: mov rdi, [rsp+0x8]; mov rdx, r12; mov eax, 0x10f; syscall; 
0x00000000091a75: mov rdi, [rsp]; add rsp, 0x10; pop rbx; jmp rax; 
0x0000000010e9e5: mov rdi, [rsp]; mov r8d, eax; mov eax, 0x55; syscall; 
0x0000000015f74e: mov rdi, [rsp]; mov rax, [rax+0x1d8]; jmp rax; 
0x00000000160354: mov rdi, r12; call qword ptr [rax+0x1e0]; 
0x00000000147b52: mov rdi, r12; call qword ptr [rax+0x20]; 
0x00000000148aa6: mov rdi, r12; call qword ptr [rax+0x28]; 
0x0000000007e854: mov rdi, r12; call qword ptr [rax+0x38]; 
0x0000000014d1bf: mov rdi, r12; call qword ptr [rax+0x8]; 
0x00000000148c99: mov rdi, r12; call qword ptr [rbx]; 
0x00000000133b81: mov rdi, r12; call qword ptr [rsp+0x40]; 
0x00000000155a96: mov rdi, r12; call r13; 
0x0000000004571a: mov rdi, r12; call rax; 
0x0000000013811c: mov rdi, r12; call rbp; 
0x0000000004483b: mov rdi, r12; call rbx; 
0x0000000014d1f3: mov rdi, r12; call rcx; 
0x0000000009bd15: mov rdi, r12; call rdx; 
0x0000000015ff31: mov rdi, r12; lea r8, [rsp+0x30]; call qword ptr [rax+0x1e0]; 
0x000000000bd799: mov rdi, r12; lea r9, [rsp+0x30]; call rbx; 
0x0000000007711f: mov rdi, r12; mov [rbp-0x4e0], r10; call qword ptr [rcx+0x38]; 
0x0000000007d854: mov rdi, r12; mov [rbp-0x4e0], r9; call qword ptr [r8+0x38]; 
0x0000000007dea9: mov rdi, r12; mov [rbp-0x4e0], r9; call qword ptr [rbx+0x38]; 
0x00000000076f38: mov rdi, r12; mov [rbp-0x4f0], r10; call qword ptr [rax+0x38]; 
0x00000000078131: mov rdi, r12; mov [rbp-0x4f8], r9d; mov [rbp-0x4f0], r10; call qword ptr [rax+0x38]; 
0x000000000777c9: mov rdi, r12; mov [rbp-0x500], r9d; mov [rbp-0x4f0], r10; call qword ptr [rbx+0x38]; 
0x0000000007eb35: mov rdi, r12; mov [rbp-0x508], r9; mov [rbp-0x500], r10; call qword ptr [rax+0x38]; 
0x00000000078399: mov rdi, r12; mov [rbp-0x510], r10; mov [rbp-0x508], r11; call qword ptr [rax+0x38]; 
0x0000000005d41c: mov rdi, r12; mov [rbp-0xe8], r8; call rax; 
0x00000000046b53: mov rdi, r12; mov eax, 0xca; syscall; 
0x00000000130283: mov rdi, r12; mov edx, [rsp+0x38]; call qword ptr [rsp+0x60]; 
0x000000000bde6f: mov rdi, r12; mov rsi, [rsp+0x10]; call rbx; 
0x000000000bd8ef: mov rdi, r12; mov rsi, [rsp+0x18]; call rbx; 
0x00000000096810: mov rdi, r12; neg rdi; call qword ptr [r13]; 
0x00000000160275: mov rdi, r12; push 0x2; xor r13d, r13d; call qword ptr [rax+0x1e0]; 
0x00000000035393: mov rdi, r12; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000007700a: mov rdi, r12; sub r15, r10; mov rdx, r15; call qword ptr [rax+0x38]; 
0x00000000076996: mov rdi, r12; sub r15, r13; mov rdx, r15; call qword ptr [rax+0x38]; 
0x0000000007d665: mov rdi, r12; sub rdx, r9; sar rdx, 0x2; mov [rbp-0x4d0], rdx; call qword ptr [rax+0x38]; 
0x0000000005edd4: mov rdi, r12; sub rsi, rax; mov rax, [rip+0x18e9cf]; mov rcx, r14; call qword ptr [rax+r8*8]; 
0x0000000015fdcf: mov rdi, r12; xor r13d, r13d; lea rcx, [r10+0x398]; lea r8, [rsp+0x30]; call qword ptr [rax+0x1e0]; 
0x000000000bda98: mov rdi, r12; xor r8d, r8d; lea r9, [rsp+0x28]; call rbx; 
0x000000000bda97: mov rdi, r12; xor r8d, r8d; lea r9, [rsp+0x28]; call rbx; 
0x0000000007bbca: mov rdi, r13; call qword ptr [r15+0x38]; 
0x00000000151460: mov rdi, r13; call qword ptr [rax+0x20]; 
0x00000000154b19: mov rdi, r13; call qword ptr [rax+0x28]; 
0x000000001486f0: mov rdi, r13; call qword ptr [rax+0x30]; 
0x0000000007a94a: mov rdi, r13; call qword ptr [rax+0x38]; 
0x000000000e1f3c: mov rdi, r13; call qword ptr [rsp+0x30]; 
0x00000000131237: mov rdi, r13; call qword ptr [rsp+0x40]; 
0x00000000130cc7: mov rdi, r13; call qword ptr [rsp+0x50]; 
0x0000000014496c: mov rdi, r13; call r12; 
0x000000000458a2: mov rdi, r13; call rax; 
0x00000000044876: mov rdi, r13; call rbx; 
0x0000000008a5de: mov rdi, r13; lea r9, [rsp+0x18]; call rbp; 
0x0000000007b4cf: mov rdi, r13; mov [rbp-0x978], r10d; mov [rbp-0x960], r9b; call rax; 
0x0000000009759b: mov rdi, r13; mov [rsp+0x10], r10; call qword ptr [rax]; 
0x0000000014ef60: mov rdi, r13; mov dword ptr [rsp+0x40], 0x0; mov [rsp+0x10], rax; mov rax, [rsp+0x48]; call qword ptr [rax+0x28]; 
0x0000000004713c: mov rdi, r13; mov eax, 0xca; syscall; 
0x0000000009e0eb: mov rdi, r13; mov rdx, rbp; mov rsi, r12; call rax; 
0x0000000007b317: mov rdi, r13; sub rdx, rsi; sar rdx, 0x2; call qword ptr [r12+0x38]; 
0x00000000148c8b: mov rdi, r14; call qword ptr [rax+0x10]; 
0x000000000872d9: mov rdi, r14; call qword ptr [rax+0x18]; 
0x00000000148cc5: mov rdi, r14; call qword ptr [rax+0x20]; 
0x000000000e0526: mov rdi, r14; call qword ptr [rsp+0x48]; 
0x0000000011bb40: mov rdi, r14; call r13; 
0x0000000009e84e: mov rdi, r14; call rax; 
0x00000000044bb1: mov rdi, r14; call rbp; 
0x0000000004695c: mov rdi, r14; mov eax, 0xca; syscall; 
0x0000000011a0eb: mov rdi, r14; mov rax, [rbp-0x58]; mov r15d, r13d; call rax; 
0x00000000044953: mov rdi, r14; mov rdx, r12; call rbp; 
0x000000001509a4: mov rdi, r15; add dword ptr [rax], 0x1; mov rax, [rbx+0x60]; call qword ptr [rax+0x8]; 
0x000000000e63b3: mov rdi, r15; call qword ptr [r12+0x38]; 
0x00000000100f83: mov rdi, r15; call qword ptr [r12+0x40]; 
0x00000000089550: mov rdi, r15; call qword ptr [r13+0x80]; 
0x00000000083bf8: mov rdi, r15; call qword ptr [r14+0x38]; 
0x0000000008926a: mov rdi, r15; call qword ptr [r14+0x80]; 
0x0000000008919e: mov rdi, r15; call qword ptr [r14+0x90]; 
0x00000000087a97: mov rdi, r15; call qword ptr [rax+0x20]; 
0x0000000015098f: mov rdi, r15; call qword ptr [rax+0x28]; 
0x00000000074cb2: mov rdi, r15; call qword ptr [rax+0x38]; 
0x00000000092f0e: mov rdi, r15; call qword ptr [rax+0x58]; 
0x00000000083c5d: mov rdi, r15; call qword ptr [rbp+0x38]; 
0x00000000089746: mov rdi, r15; call qword ptr [rbp+0x80]; 
0x00000000074f55: mov rdi, r15; call qword ptr [rbx+0x38]; 
0x00000000089836: mov rdi, r15; call qword ptr [rbx+0x80]; 
0x00000000075986: mov rdi, r15; call qword ptr [rcx+0x38]; 
0x0000000008a831: mov rdi, r15; call r12; 
0x0000000011baab: mov rdi, r15; call r14; 
0x000000000892c3: mov rdi, r15; call rax; 
0x000000001509e4: mov rdi, r15; call rcx; 
0x000000000920b7: mov rdi, r15; lea rbx, [rsi+0x1]; movzx esi, byte ptr [rsi]; call qword ptr [rax+0x18]; 
0x000000000749f7: mov rdi, r15; mov [rbp-0x954], r9d; mov [rbp-0x948], r11d; call rax; 
0x00000000147ebb: mov rdi, r15; mov [rsp+0x192], ax; mov rax, [rsp+0x30]; call rax; 
0x00000000144bff: mov rdi, r15; mov [rsp+0x8], rcx; call rbp; 
0x0000000009c16b: mov rdi, r15; mov eax, 0xca; syscall; 
0x000000000ded82: mov rdi, r15; mov rsi, [rsp+0x60]; call r12; 
0x00000000137d67: mov rdi, r15; mov rsi, [rsp+0x8]; call rbp; 
0x00000000137d68: mov rdi, r15; mov rsi, [rsp+0x8]; call rbp; 
0x0000000009204b: mov rdi, r15; movzx esi, byte ptr [rsi]; call qword ptr [rax+0x18]; 
0x00000000074a9e: mov rdi, r15; sub rdx, rsi; call qword ptr [rbx+0x38]; 
0x0000000015593c: mov rdi, r15; xor eax, eax; add r13, rbx; call rbp; 
0x000000000e7303: mov rdi, r8; call qword ptr [r15+0x40]; 
0x00000000088f24: mov rdi, r8; call qword ptr [rax+0x18]; 
0x0000000015248b: mov rdi, r8; call qword ptr [rax+0x20]; 
0x000000000946e2: mov rdi, r8; jmp rax; 
0x00000000146146: mov rdi, r8; mov rax, [rax+0x18]; jmp rax; 
0x00000000160bb3: mov rdi, r8; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000047008: mov rdi, r9; call r8; 
0x000000000e30e7: mov rdi, r9; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000005b652: mov rdi, rax; cmp rdx, rcx; jae short 0x000000000005b63c; mov rax, r8; ret; 
0x0000000011f163: mov rdi, rax; mov eax, 0x3c; syscall; 
0x00000000043003: mov rdi, rax; mov eax, 0xba; syscall; 
0x000000001483b8: mov rdi, rbp; and esi, 0xfffffffc; call qword ptr [rax+0x30]; 
0x0000000008bdf6: mov rdi, rbp; call qword ptr [r13+0x10]; 
0x0000000008f9e4: mov rdi, rbp; call qword ptr [r13+0x20]; 
0x0000000008e3a9: mov rdi, rbp; call qword ptr [r13+0x38]; 
0x0000000008f981: mov rdi, rbp; call qword ptr [r13+0x90]; 
0x00000000085b5c: mov rdi, rbp; call qword ptr [r14+0x38]; 
0x0000000008e764: mov rdi, rbp; call qword ptr [r15+0x40]; 
0x0000000008eb84: mov rdi, rbp; call qword ptr [r15+0x80]; 
0x0000000008e6fb: mov rdi, rbp; call qword ptr [r15+0x90]; 
0x00000000152f3c: mov rdi, rbp; call qword ptr [rax+0x10]; 
0x0000000008f6df: mov rdi, rbp; call qword ptr [rax+0x18]; 
0x0000000014621e: mov rdi, rbp; call qword ptr [rax+0x20]; 
0x0000000014773b: mov rdi, rbp; call qword ptr [rax+0x28]; 
0x0000000014832a: mov rdi, rbp; call qword ptr [rax+0x30]; 
0x0000000008f197: mov rdi, rbp; call qword ptr [rax+0x40]; 
0x0000000014e787: mov rdi, rbp; call qword ptr [rax+0x48]; 
0x0000000008f7d2: mov rdi, rbp; call qword ptr [rax+0x78]; 
0x0000000008eaa4: mov rdi, rbp; call qword ptr [rax+0x80]; 
0x00000000146937: mov rdi, rbp; call qword ptr [rax+0x8]; 
0x0000000008e946: mov rdi, rbp; call qword ptr [rax+0x90]; 
0x000000001490e9: mov rdi, rbp; call qword ptr [rax]; 
0x00000000081e6b: mov rdi, rbp; call qword ptr [rbx+0x10]; 
0x00000000091bc6: mov rdi, rbp; call qword ptr [rbx+0x18]; 
0x0000000008225c: mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x0000000008ffe1: mov rdi, rbp; call qword ptr [rbx+0x88]; 
0x00000000081cfa: mov rdi, rbp; call qword ptr [rbx+0x90]; 
0x00000000152cec: mov rdi, rbp; call qword ptr [rdx+0x10]; 
0x0000000013779c: mov rdi, rbp; call qword ptr [rsp+0x10]; 
0x000000000de8cb: mov rdi, rbp; call r12; 
0x0000000008eaf3: mov rdi, rbp; call rax; 
0x000000000d04ba: mov rdi, rbp; call rbx; 
0x00000000146967: mov rdi, rbp; call rcx; 
0x00000000146978: mov rdi, rbp; lea r15, [rsp+0x50]; call qword ptr [rax+0x20]; 
0x00000000152192: mov rdi, rbp; lea r8, [rip-0xa0ec]; lea rdx, [rip+0x3a2d]; call qword ptr [rax]; 
0x0000000014732b: mov rdi, rbp; lea r9, [rsp+0x20]; call qword ptr [rax]; 
0x0000000014e706: mov rdi, rbp; mov [r12+0x70], edx; call qword ptr [rax+0x30]; 
0x00000000147628: mov rdi, rbp; mov [rbx], rax; xor eax, eax; call qword ptr [rbx+0x18]; 
0x00000000153e9f: mov rdi, rbp; mov [rsp+0xc8], rdx; mov dword ptr [rsp+0xd0], 0x1; movups [rsp+0xb8], xmm5; call rax; 
0x00000000146a12: mov rdi, rbp; mov dword ptr [rbx+0x18], 0x0; call qword ptr [rax+0x28]; 
0x00000000146993: mov rdi, rbp; mov dword ptr [rbx+0x18], 0x1; call qword ptr [rax+0x28]; 
0x00000000153cb6: mov rdi, rbp; mov dword ptr [rsp+0xa8], 0x1; mov dword ptr [rsp+0xb0], 0x1; mov dword ptr [rsp+0xb8], 0x1; call qword ptr [rax+0x18]; 
0x0000000010d334: mov rdi, rbp; mov eax, 0x135; syscall; 
0x0000000010eb18: mov rdi, rbp; mov eax, 0x4f; syscall; 
0x0000000011890c: mov rdi, rbp; mov eax, 0x9; syscall; 
0x00000000046daa: mov rdi, rbp; mov eax, 0xca; syscall; 
0x00000000119aa6: mov rdi, rbp; mov edx, r13d; mov esi, 0x1; call r12; 
0x000000001476bc: mov rdi, rbp; mov qword ptr [rsp], 0x0; call qword ptr [rax+0x20]; 
0x0000000013cbb8: mov rdi, rbp; mov qword ptr [rsp], 0x0; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000001476ea: mov rdi, rbp; mov r12d, eax; xor eax, eax; call qword ptr [rbx+0x28]; 
0x0000000011a73e: mov rdi, rbp; mov rax, r12; pop rbp; pop r12; jmp rax; 
0x00000000119b36: mov rdi, rbp; mov rdx, r13; mov esi, 0x1; call r12; 
0x000000000caa17: mov rdi, rbp; mov rsi, [rsp+0x18]; call rbx; 
0x00000000089989: mov rdi, rbp; pop rbp; mov rax, [rax+0xe0]; mov rax, [rax+0x20]; jmp rax; 
0x00000000087243: mov rdi, rbp; pop rbp; pop r12; jmp rax; 
0x0000000009a543: mov rdi, rbp; pop rbp; pop r12; pop r13; jmp rax; 
0x0000000008774c: mov rdi, rbp; pop rbx; pop rbp; jmp rax; 
0x00000000099cb0: mov rdi, rbp; pop rbx; pop rbp; pop r12; jmp rax; 
0x0000000014804c: mov rdi, rbp; pop rbx; xor eax, eax; pop rbp; jmp rdx; 
0x0000000013cc95: mov rdi, rbp; ror rax, 0x11; xor rax, fs:[0x30]; mov qword ptr [rsp], 0x0; call rax; 
0x000000001569ae: mov rdi, rbp; xor eax, eax; call r14; 
0x000000001569c8: mov rdi, rbp; xor eax, eax; call rcx; 
0x0000000011a71d: mov rdi, rbp; xor edx, edx; mov esi, 0x1; call r12; 
0x00000000119a94: mov rdi, rbp; xor esi, esi; call r12; 
0x000000000934da: mov rdi, rbx; call qword ptr [r12+0x18]; 
0x0000000009088e: mov rdi, rbx; call qword ptr [r12+0x48]; 
0x0000000008f4fd: mov rdi, rbx; call qword ptr [r12+0x80]; 
0x0000000008fe85: mov rdi, rbx; call qword ptr [r12+0x88]; 
0x00000000082db4: mov rdi, rbx; call qword ptr [r13+0x38]; 
0x00000000084acd: mov rdi, rbx; call qword ptr [r13+0x48]; 
0x00000000084c3c: mov rdi, rbx; call qword ptr [r13+0x58]; 
0x0000000009254e: mov rdi, rbx; call qword ptr [r13+0x60]; 
0x00000000079f7c: mov rdi, rbx; call qword ptr [r14+0x38]; 
0x00000000084822: mov rdi, rbx; call qword ptr [r14+0x48]; 
0x0000000009097a: mov rdi, rbx; call qword ptr [r14+0x78]; 
0x000000000932eb: mov rdi, rbx; call qword ptr [r15+0x18]; 
0x000000000833ea: mov rdi, rbx; call qword ptr [r15+0x38]; 
0x00000000092355: mov rdi, rbx; call qword ptr [rax+0x18]; 
0x000000000922be: mov rdi, rbx; call qword ptr [rax+0x20]; 
0x00000000084c66: mov rdi, rbx; call qword ptr [rax+0x58]; 
0x0000000009196f: mov rdi, rbx; call qword ptr [rbp+0x18]; 
0x000000000871c0: mov rdi, rbx; call qword ptr [rbp+0x20]; 
0x00000000087d45: mov rdi, rbx; call qword ptr [rbp+0x30]; 
0x000000000823f0: mov rdi, rbx; call qword ptr [rbp+0x60]; 
0x00000000084ed1: mov rdi, rbx; call qword ptr [rbp+0x68]; 
0x0000000008f332: mov rdi, rbx; call qword ptr [rbp+0x70]; 
0x0000000008a0a0: mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x00000000024f74: mov rdi, rbx; call r12; 
0x00000000025fd4: mov rdi, rbx; call r14; 
0x000000000e636b: mov rdi, rbx; call r15; 
0x00000000081277: mov rdi, rbx; call r8; 
0x00000000080c81: mov rdi, rbx; call rax; 
0x00000000025b29: mov rdi, rbx; call rbp; 
0x00000000147e10: mov rdi, rbx; call rcx; 
0x000000000256cb: mov rdi, rbx; call rsi; 
0x0000000009ae70: mov rdi, rbx; mov eax, 0xca; syscall; 
0x0000000009093a: mov rdi, rbx; mov edx, 0x1; call qword ptr [r14+0x80]; 
0x00000000144d61: mov rdi, rbx; mov rcx, r13; call r10; 
0x00000000088a9f: mov rdi, rbx; sub rdx, rsi; call qword ptr [rax+0x70]; 
0x00000000090bc5: mov rdi, rbx; sub rdx, rsi; call qword ptr [rbp+0x70]; 
0x00000000147f03: mov rdi, rbx; xor eax, eax; call rcx; 
0x0000000008e23d: mov rdi, rcx; call qword ptr [r14+0x38]; 
0x0000000011ef53: mov rdi, rcx; sub rsp, 0x8; call rsi; 
0x0000000005b6d6: mov rdi, rdx; cmp rax, 0x9; ja short 0x000000000005b6b0; mov rax, r8; ret; 
0x0000000018854e: mov rdi, rsi; bsr eax, eax; lea rax, [rdi+rax-0x20]; vzeroupper; ret; 
0x0000000009e8ed: mov rdi, rsi; call rax; 
0x00000000155b9b: mov rdi, rsp; mov dword ptr [rsp], 0x2; call r8; 
0x00000000153ec8: mov rdi, rsp; mov rsi, rbp; call qword ptr [rax+0x18]; 
0x0000000007a021: mov rdi, rsp; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000079fcf: mov rdi, rsp; xor esi, esi; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000042190: mov rdx, 0x3fe0000000000000; or rax, rdx; movq xmm0, rax; ret; 
0x00000000033c67: mov rdx, 0xffffffffffffffff; cmove rax, rdx; ret; 
0x000000000e515f: mov rdx, 0xffffffffffffffff; cmp dword ptr fs:[rax], 0x26; mov eax, 0x20; cmovne rax, rdx; ret; 
0x000000000e502f: mov rdx, 0xffffffffffffffff; cmp dword ptr fs:[rax], 0x26; mov eax, 0x7f; cmovne rax, rdx; ret; 
0x0000000013c977: mov rdx, 0xffffffffffffffff; ret; 
0x00000000104432: mov rdx, [r12]; mov rax, [rbp-0x1e0]; call rax; 
0x0000000007b313: mov rdx, [r14+0x20]; mov rdi, r13; sub rdx, rsi; sar rdx, 0x2; call qword ptr [r12+0x38]; 
0x00000000074a9a: mov rdx, [r14+0x20]; mov rdi, r15; sub rdx, rsi; call qword ptr [rbx+0x38]; 
0x000000000892b7: mov rdx, [r15+0x40]; sub rdx, rsi; mov [rsp+0x8], rcx; mov rdi, r15; call rax; 
0x00000000144963: mov rdx, [r15]; mov r8, rbp; mov rcx, r14; mov rdi, r13; call r12; 
0x000000001449c5: mov rdx, [r15]; xor r8d, r8d; mov rcx, r14; mov rdi, r13; call r12; 
0x00000000150793: mov rdx, [r8+0x90]; bswap eax; mov [rdx+0x10], eax; mov eax, 0x1; ret; 
0x0000000015069b: mov rdx, [r8+0x90]; bswap eax; mov [rdx+0xc], eax; mov eax, 0x1; ret; 
0x0000000005562f: mov rdx, [r8+rax*8]; mov [rsi+rax*8], rdx; xor eax, eax; ret; 
0x0000000011593e: mov rdx, [rax+0x10]; cmovae r10, [rax+0x18]; mov [rsp+0x20], rax; mov eax, 0x65; syscall; 
0x0000000008cdeb: mov rdx, [rax+0x18]; mov [rax+0x20], rdx; pop rbx; ret; 
0x0000000010cf9b: mov rdx, [rax+0xb0]; call qword ptr [rax+0x88]; 
0x00000000033d39: mov rdx, [rax+0xc0]; mov rax, [rip+0x1b80a1]; mov [rax], rdx; ret; 
0x00000000030eca: mov rdx, [rax+r15*8]; test rdx, rdx; je short 0x0000000000030ed5; call rdx; 
0x0000000002403b: mov rdx, [rax]; call rbx; 
0x00000000047233: mov rdx, [rax]; mov [rbx+0x18], rdx; mov fs:[rax], rbx; call qword ptr [rbp+0xf08]; 
0x000000000240a9: mov rdx, [rax]; mov rax, [rsp+0x18]; call rax; 
0x0000000008eae8: mov rdx, [rbp+0x40]; sub rdx, rsi; mov [rsp], rcx; mov rdi, rbp; call rax; 
0x00000000152cdd: mov rdx, [rbp+0x8]; mov dword ptr [r10], 0xe; lea rsi, [r10+0x8]; mov rdi, rbp; call qword ptr [rdx+0x10]; 
0x00000000064037: mov rdx, [rbp-0x630]; movsxd rax, [rcx+r12*4]; add rax, rcx; notrack jmp rax; 
0x00000000088a9c: mov rdx, [rbx+0x40]; mov rdi, rbx; sub rdx, rsi; call qword ptr [rax+0x70]; 
0x00000000090bc2: mov rdx, [rbx+0x40]; mov rdi, rbx; sub rdx, rsi; call qword ptr [rbp+0x70]; 
0x0000000010cc87: mov rdx, [rbx+0xb0]; mov rsi, [rbx+0xa0]; mov rdi, [rbx+0x80]; call qword ptr [rax+0x88]; 
0x000000000ee4b8: mov rdx, [rdi+0x70]; xor eax, eax; test byte ptr [rdx+0xc8], 0x40; jne 0x00000000000ee3ed; ret; 
0x000000000ee466: mov rdx, [rdi+0x70]; xor eax, eax; test byte ptr [rdx+0xc8], 0x80; je 0x00000000000ee3ed; ret; 
0x00000000063042: mov rdx, [rdi+0x88]; mov [rdx+0x8], rcx; mov dword ptr [rdx+0x4], 0x1; ret; 
0x000000001518b0: mov rdx, [rdi+0x8]; mov [rsp], rax; call qword ptr [rdx+0x20]; 
0x00000000082823: mov rdx, [rdi+0xa0]; mov [rdx+0xe0], rcx; ret; 
0x0000000008ce3e: mov rdx, [rdi+0xa0]; mov rax, [rdx+0x20]; sub rax, [rdx+0x18]; sar rax, 0x2; ret; 
0x0000000008cd0e: mov rdx, [rdi+0xa0]; mov rax, [rdx+0x38]; sub rax, [rdx+0x30]; sar rax, 0x2; ret; 
0x00000000034253: mov rdx, [rdx+0x48]; mov eax, [rdx+rax*4+0x200]; ret; 
0x00000000034223: mov rdx, [rdx+0x58]; mov eax, [rdx+rax*4+0x200]; ret; 
0x00000000055095: mov rdx, [rdx+0x88]; xor eax, eax; ret; 
0x0000000009e954: mov rdx, [rdx+0x8]; test rdx, rdx; jne short 0x000000000009e950; ret; 
0x00000000034250: mov rdx, [rdx]; mov rdx, [rdx+0x48]; mov eax, [rdx+rax*4+0x200]; ret; 
0x00000000034220: mov rdx, [rdx]; mov rdx, [rdx+0x58]; mov eax, [rdx+rax*4+0x200]; ret; 
0x0000000003424d: mov rdx, [rdx]; mov rdx, [rdx]; mov rdx, [rdx+0x48]; mov eax, [rdx+rax*4+0x200]; ret; 
0x0000000003421d: mov rdx, [rdx]; mov rdx, [rdx]; mov rdx, [rdx+0x58]; mov eax, [rdx+rax*4+0x200]; ret; 
0x000000000e2eb0: mov rdx, [rip+0x108fb9]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000e2d90: mov rdx, [rip+0x1090d9]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000e2cd0: mov rdx, [rip+0x109199]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000de2f8: mov rdx, [rip+0x10db71]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x000000000dd160: mov rdx, [rip+0x10ed09]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000d10c0: mov rdx, [rip+0x11ada9]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000d0f20: mov rdx, [rip+0x11af49]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000d0e08: mov rdx, [rip+0x11b061]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000062f00: mov rdx, [rip+0x188f69]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000062ec8: mov rdx, [rip+0x188fa1]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000482b0: mov rdx, [rip+0x1a3bb9]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x000000000434e0: mov rdx, [rip+0x1a8989]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000043450: mov rdx, [rip+0x1a8a19]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000034572: mov rdx, [rip+0x1b79af]; add rax, 0x200; mov fs:[rdx], rax; ret; 
0x00000000024185: mov rdx, [rip+0x1c7cd4]; lea rdi, [rip+0x18fcef]; mov rsi, [rax]; xor eax, eax; call qword ptr [rdx+0x1d0]; 
0x00000000023a67: mov rdx, [rip+0x1c8422]; cmp [rdx+0xd8], rax; jne short 0x0000000000023a3b; ret; 
0x0000000012e7f0: mov rdx, [rip+0xbd679]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000121278: mov rdx, [rip+0xcabf1]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000121240: mov rdx, [rip+0xcac29]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000121208: mov rdx, [rip+0xcac61]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000001211d8: mov rdx, [rip+0xcac91]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x000000001211a0: mov rdx, [rip+0xcacc9]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000001210c8: mov rdx, [rip+0xcada1]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000121088: mov rdx, [rip+0xcade1]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000121058: mov rdx, [rip+0xcae11]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000121010: mov rdx, [rip+0xcae59]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000120f50: mov rdx, [rip+0xcaf19]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000120ce0: mov rdx, [rip+0xcb189]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000120c38: mov rdx, [rip+0xcb231]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000120b80: mov rdx, [rip+0xcb2e9]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000120738: mov rdx, [rip+0xcb731]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000120670: mov rdx, [rip+0xcb7f9]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x000000001205d0: mov rdx, [rip+0xcb899]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000120510: mov rdx, [rip+0xcb959]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000120470: mov rdx, [rip+0xcb9f9]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x000000001203b0: mov rdx, [rip+0xcbab9]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000120230: mov rdx, [rip+0xcbc39]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000120160: mov rdx, [rip+0xcbd09]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000011f870: mov rdx, [rip+0xcc5f9]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000011f790: mov rdx, [rip+0xcc6d9]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000011f6e8: mov rdx, [rip+0xcc781]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000011f620: mov rdx, [rip+0xcc849]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000011f570: mov rdx, [rip+0xcc8f9]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000011f4c0: mov rdx, [rip+0xcc9a9]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000011f330: mov rdx, [rip+0xccb39]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000011f2e8: mov rdx, [rip+0xccb81]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000011f1d8: mov rdx, [rip+0xccc91]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000121d2e: mov rdx, [rip+0xcdd23]; add word ptr [rdx+rax*2], 0x1; ret; 
0x0000000011c500: mov rdx, [rip+0xcf969]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000118a70: mov rdx, [rip+0xd33f9]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000116d38: mov rdx, [rip+0xd5131]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000116d08: mov rdx, [rip+0xd5161]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000116cd0: mov rdx, [rip+0xd5199]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000116ae8: mov rdx, [rip+0xd5381]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000115360: mov rdx, [rip+0xd6b09]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000001152e0: mov rdx, [rip+0xd6b89]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000115220: mov rdx, [rip+0xd6c49]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000115020: mov rdx, [rip+0xd6e49]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000114688: mov rdx, [rip+0xd77e1]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x000000001145c8: mov rdx, [rip+0xd78a1]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000114510: mov rdx, [rip+0xd7959]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000114470: mov rdx, [rip+0xd79f9]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x000000001141f0: mov rdx, [rip+0xd7c79]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000113df0: mov rdx, [rip+0xd8079]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000113db0: mov rdx, [rip+0xd80b9]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000113be8: mov rdx, [rip+0xd8281]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000001136b8: mov rdx, [rip+0xd87b1]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000113680: mov rdx, [rip+0xd87e9]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000113648: mov rdx, [rip+0xd8821]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000113388: mov rdx, [rip+0xd8ae1]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000113340: mov rdx, [rip+0xd8b29]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000113290: mov rdx, [rip+0xd8bd9]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000113130: mov rdx, [rip+0xd8d39]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000001130f0: mov rdx, [rip+0xd8d79]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000113098: mov rdx, [rip+0xd8dd1]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x000000001129f0: mov rdx, [rip+0xd9479]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010ea10: mov rdx, [rip+0xdd459]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010e890: mov rdx, [rip+0xdd5d9]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010e178: mov rdx, [rip+0xddcf1]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010e148: mov rdx, [rip+0xddd21]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000010e100: mov rdx, [rip+0xddd69]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000010e060: mov rdx, [rip+0xdde09]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000010dc38: mov rdx, [rip+0xde231]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010da00: mov rdx, [rip+0xde469]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010d9a0: mov rdx, [rip+0xde4c9]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010d940: mov rdx, [rip+0xde529]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010d5b8: mov rdx, [rip+0xde8b1]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010d558: mov rdx, [rip+0xde911]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010d4f8: mov rdx, [rip+0xde971]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010c2b0: mov rdx, [rip+0xdfbb9]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000010c200: mov rdx, [rip+0xdfc69]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000016da80: mov rdx, [rsi+0x1]; mov rcx, [rsi]; mov [rdi+0x1], rdx; mov [rdi], rcx; ret; 
0x0000000016da10: mov rdx, [rsi+0x2]; mov rcx, [rsi]; mov [rdi+0x2], rdx; mov [rdi], rcx; ret; 
0x0000000016d9a0: mov rdx, [rsi+0x3]; mov rcx, [rsi]; mov [rdi+0x3], rdx; mov [rdi], rcx; ret; 
0x0000000016d930: mov rdx, [rsi+0x4]; mov rcx, [rsi]; mov [rdi+0x4], rdx; mov [rdi], rcx; ret; 
0x000000000b85c3: mov rdx, [rsi+0x5]; mov [rdi], rcx; mov [rdi+0x5], rdx; lea rax, [rdi+0xc]; ret; 
0x000000000b9423: mov rdx, [rsi+0x5]; mov [rdi], rcx; mov [rdi+0x5], rdx; lea rax, [rdi+0xd]; ret; 
0x000000000b6f43: mov rdx, [rsi+0x5]; mov [rdi], rcx; mov [rdi+0x5], rdx; ret; 
0x0000000016d8c0: mov rdx, [rsi+0x5]; mov rcx, [rsi]; mov [rdi+0x5], rdx; mov [rdi], rcx; ret; 
0x000000000b85e3: mov rdx, [rsi+0x6]; mov [rdi], rcx; mov [rdi+0x6], rdx; lea rax, [rdi+0xd]; ret; 
0x000000000b9443: mov rdx, [rsi+0x6]; mov [rdi], rcx; mov [rdi+0x6], rdx; lea rax, [rdi+0xe]; ret; 
0x000000000b6f53: mov rdx, [rsi+0x6]; mov [rdi], rcx; mov [rdi+0x6], rdx; ret; 
0x0000000016d850: mov rdx, [rsi+0x6]; mov rcx, [rsi]; mov [rdi+0x6], rdx; mov [rdi], rcx; ret; 
0x000000000b8603: mov rdx, [rsi+0x7]; mov [rdi], rcx; mov [rdi+0x7], rdx; lea rax, [rdi+0xe]; ret; 
0x000000000b9463: mov rdx, [rsi+0x7]; mov [rdi], rcx; mov [rdi+0x7], rdx; lea rax, [rdi+0xf]; ret; 
0x000000000b6f63: mov rdx, [rsi+0x7]; mov [rdi], rcx; mov [rdi+0x7], rdx; ret; 
0x0000000016d7e0: mov rdx, [rsi+0x7]; mov rcx, [rsi]; mov [rdi+0x7], rdx; mov [rdi], rcx; ret; 
0x0000000018a503: mov rdx, [rsi+r8-0x8]; mov [rdi], rcx; mov [rdi+r8-0x8], rdx; vzeroupper; ret; 
0x00000000167814: mov rdx, [rsi-0x8]; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x00000000168166: mov rdx, [rsi-0x8]; mov [rdi-0x15], r11; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000168168: mov rdx, [rsi-0x8]; mov [rdi-0x15], r11; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000168368: mov rdx, [rsi-0x8]; mov [rdi-0x16], r11; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000168366: mov rdx, [rsi-0x8]; mov [rdi-0x16], r11; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000168568: mov rdx, [rsi-0x8]; mov [rdi-0x17], r11; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x000000001677f8: mov rdx, [rsi-0x8]; mov [rdi-0x18], r10; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x00000000167830: mov rdx, [rsi-0x8]; mov [rdi-0x8], rdx; ret; 
0x00000000168184: mov rdx, [rsi-0x8]; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000168182: mov rdx, [rsi-0x8]; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000168382: mov rdx, [rsi-0x8]; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000168384: mov rdx, [rsi-0x8]; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000168584: mov rdx, [rsi-0x8]; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000016d310: mov rdx, [rsi-0x9]; mov ecx, [rsi-0x4]; mov [rdi-0x9], rdx; mov [rdi-0x4], ecx; ret; 
0x0000000016d290: mov rdx, [rsi-0xa]; mov ecx, [rsi-0x4]; mov [rdi-0xa], rdx; mov [rdi-0x4], ecx; ret; 
0x0000000016d210: mov rdx, [rsi-0xb]; mov ecx, [rsi-0x4]; mov [rdi-0xb], rdx; mov [rdi-0x4], ecx; ret; 
0x0000000016d190: mov rdx, [rsi-0xc]; mov ecx, [rsi-0x4]; mov [rdi-0xc], rdx; mov [rdi-0x4], ecx; ret; 
0x0000000016d100: mov rdx, [rsi-0xd]; mov rcx, [rsi-0x8]; mov [rdi-0xd], rdx; mov [rdi-0x8], rcx; ret; 
0x0000000016d070: mov rdx, [rsi-0xe]; mov rcx, [rsi-0x8]; mov [rdi-0xe], rdx; mov [rdi-0x8], rcx; ret; 
0x0000000016cfe0: mov rdx, [rsi-0xf]; mov rcx, [rsi-0x8]; mov [rdi-0xf], rdx; mov [rdi-0x8], rcx; ret; 
0x000000000b8540: mov rdx, [rsi]; mov [rdi], rdx; lea rax, [rdi+0x7]; ret; 
0x000000000b9390: mov rdx, [rsi]; mov [rdi], rdx; lea rax, [rdi+0x8]; ret; 
0x000000000b6ef0: mov rdx, [rsi]; mov [rdi], rdx; ret; 
0x000000000baff0: mov rdx, [rsi]; mov [rdi], rdx; xor ch, ch; mov [rdi+0x8], ch; ret; 
0x000000000a8a68: mov rdx, [rsp+0x10]; mov [rax], rdx; ret; 
0x000000000e2d5d: mov rdx, [rsp+0x10]; mov eax, 0xf7; syscall; 
0x0000000012293c: mov rdx, [rsp+0x10]; mov rcx, [rsp+0x8]; mov rax, [rsp]; add rsp, 0x38; ret; 
0x0000000012299d: mov rdx, [rsp+0x10]; mov rcx, [rsp+0x8]; mov rax, [rsp]; add rsp, 0x40; ret; 
0x00000000120446: mov rdx, [rsp+0x10]; mov rsi, [rsp+0x8]; syscall; 
0x00000000120598: mov rdx, [rsp+0x10]; mov rsi, [rsp+0x8]; xor r8d, r8d; mov eax, 0x2c; syscall; 
0x00000000120378: mov rdx, [rsp+0x10]; mov rsi, [rsp+0x8]; xor r8d, r8d; mov eax, 0x2d; syscall; 
0x00000000127d1b: mov rdx, [rsp+0x10]; xor esi, esi; mov edi, 0x2000004; call rax; 
0x000000000a8990: mov rdx, [rsp+0x18]; mov [rdi], rdx; add rax, rdi; ret; 
0x000000001206ff: mov rdx, [rsp+0x18]; mov eax, 0x2c; mov rsi, [rsp+0x10]; mov edi, [rsp+0x8]; syscall; 
0x00000000146da3: mov rdx, [rsp+0x18]; mov rsi, [rsp+0x10]; call qword ptr [rax]; 
0x00000000114fe6: mov rdx, [rsp+0x18]; mov rsi, [rsp+0x10]; mov eax, 0x17; mov edi, [rsp+0xc]; syscall; 
0x00000000120fd6: mov rdx, [rsp+0x18]; mov rsi, [rsp+0x10]; mov eax, 0x46; mov edi, [rsp+0x8]; syscall; 
0x00000000054171: mov rdx, [rsp+0x18]; xor rdx, fs:[0x28]; jne short 0x0000000000054189; add rsp, 0xd8; ret; 
0x00000000061ef8: mov rdx, [rsp+0x18]; xor rdx, fs:[0x28]; jne short 0x0000000000061f10; add rsp, 0xd8; ret; 
0x000000000d105b: mov rdx, [rsp+0x18]; xor rdx, fs:[0x28]; jne short 0x00000000000d1094; add rsp, 0x28; ret; 
0x0000000010d19d: mov rdx, [rsp+0x18]; xor rdx, fs:[0x28]; jne short 0x000000000010d1c1; add rsp, 0x28; ret; 
0x00000000114cd0: mov rdx, [rsp+0x18]; xor rdx, fs:[0x28]; jne short 0x0000000000114ce5; add rsp, 0x28; ret; 
0x0000000011588f: mov rdx, [rsp+0x18]; xor rdx, fs:[0x28]; jne short 0x00000000001158a4; add rsp, 0x28; ret; 
0x0000000012df71: mov rdx, [rsp+0x18]; xor rdx, fs:[0x28]; jne short 0x000000000012df95; add rsp, 0xd8; ret; 
0x0000000012e08b: mov rdx, [rsp+0x18]; xor rdx, fs:[0x28]; jne short 0x000000000012e0a3; add rsp, 0xd8; ret; 
0x0000000012ef91: mov rdx, [rsp+0x18]; xor rdx, fs:[0x28]; jne short 0x000000000012efb5; add rsp, 0xd8; ret; 
0x0000000012f0ab: mov rdx, [rsp+0x18]; xor rdx, fs:[0x28]; jne short 0x000000000012f0c3; add rsp, 0xd8; ret; 
0x00000000160d12: mov rdx, [rsp+0x18]; xor rdx, fs:[0x28]; jne short 0x0000000000160d27; add rsp, 0x28; ret; 
0x00000000115101: mov rdx, [rsp+0x20]; mov eax, 0x10e; mov rsi, [rsp+0x18]; mov edi, [rsp+0x14]; syscall; 
0x0000000014d408: mov rdx, [rsp+0x20]; mov rdi, r12; call rdx; 
0x000000000df02a: mov rdx, [rsp+0x28]; mov rax, [rsp+0x18]; call rax; 
0x000000001365f1: mov rdx, [rsp+0x28]; xor rdx, fs:[0x28]; jne short 0x0000000000136629; add rsp, 0x38; ret; 
0x000000000ded7d: mov rdx, [rsp+0x68]; mov rdi, r15; mov rsi, [rsp+0x60]; call r12; 
0x000000000279e5: mov rdx, [rsp+0x68]; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x60]; mov rax, [rsp+0x20]; call rax; 
0x0000000013c8b6: mov rdx, [rsp+0x8]; jne short 0x000000000013c8d4; add rsp, 0x20; pop rbp; ret; 
0x0000000008f41a: mov rdx, [rsp+0x8]; mov rsi, r13; mov rdi, rbx; call qword ptr [rbp+0x70]; 
0x00000000062e09: mov rdx, [rsp+0x8]; xor rdx, fs:[0x28]; jne short 0x0000000000062e27; add rsp, 0x18; ret; 
0x000000000da6de: mov rdx, [rsp+0x8]; xor rdx, fs:[0x28]; jne short 0x00000000000da6f3; add rsp, 0x18; ret; 
0x000000000dcfae: mov rdx, [rsp+0x8]; xor rdx, fs:[0x28]; jne short 0x00000000000dcfc3; add rsp, 0x18; ret; 
0x0000000010d4b4: mov rdx, [rsp+0x8]; xor rdx, fs:[0x28]; jne short 0x000000000010d4c9; add rsp, 0x18; ret; 
0x0000000013ea82: mov rdx, [rsp+0x8]; xor rdx, fs:[0x28]; jne short 0x000000000013ea97; add rsp, 0x18; ret; 
0x0000000015c9d4: mov rdx, [rsp+0x8]; xor rdx, fs:[0x28]; jne short 0x000000000015ca14; add rsp, 0x18; ret; 
0x00000000144edb: mov rdx, [rsp+0xe0]; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; call qword ptr [rsp+0x68]; 
0x00000000047232: mov rdx, fs:[rax]; mov [rbx+0x18], rdx; mov fs:[rax], rbx; call qword ptr [rbp+0xf08]; 
0x0000000003424c: mov rdx, fs:[rdx]; mov rdx, [rdx]; mov rdx, [rdx+0x48]; mov eax, [rdx+rax*4+0x200]; ret; 
0x0000000003421c: mov rdx, fs:[rdx]; mov rdx, [rdx]; mov rdx, [rdx+0x58]; mov eax, [rdx+rax*4+0x200]; ret; 
0x00000000073d32: mov rdx, r12; call qword ptr [r13+0x38]; 
0x00000000044956: mov rdx, r12; call rbp; 
0x00000000112a65: mov rdx, r12; mov eax, 0x10f; syscall; 
0x00000000142fd8: mov rdx, r12; mov eax, 0x81; syscall; 
0x000000000dd1d8: mov rdx, r12; mov esi, ebp; mov eax, 0xe6; syscall; 
0x000000000dd2a9: mov rdx, r12; mov esi, ebp; mov edi, 0x1; mov eax, 0xe6; syscall; 
0x000000000dd260: mov rdx, r12; mov r8d, eax; mov esi, ebp; mov eax, 0xe6; syscall; 
0x00000000148c88: mov rdx, r12; mov rdi, r14; call qword ptr [rax+0x10]; 
0x00000000148cc2: mov rdx, r12; mov rdi, r14; call qword ptr [rax+0x20]; 
0x0000000008e23a: mov rdx, r12; mov rdi, rcx; call qword ptr [r14+0x38]; 
0x000000000833e4: mov rdx, r12; mov rsi, r14; mov rdi, rbx; call qword ptr [r15+0x38]; 
0x00000000082dae: mov rdx, r12; mov rsi, rbp; mov rdi, rbx; call qword ptr [r13+0x38]; 
0x00000000084c36: mov rdx, r12; mov rsi, rbp; mov rdi, rbx; call qword ptr [r13+0x58]; 
0x00000000084c60: mov rdx, r12; mov rsi, rbp; mov rdi, rbx; call qword ptr [rax+0x58]; 
0x00000000149ef0: mov rdx, r12; mov rsi, rbp; mov rdi, rbx; call rax; 
0x0000000009eff8: mov rdx, r12; pop r12; pop r13; ret; 
0x00000000063d5d: mov rdx, r12; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000007d0dc: mov rdx, r13; call qword ptr [rax+0x38]; 
0x000000000ca898: mov rdx, r13; call rbx; 
0x00000000119b39: mov rdx, r13; mov esi, 0x1; call r12; 
0x000000000bd8e7: mov rdx, r13; mov r9, [rsp+0x10]; mov rdi, r12; mov rsi, [rsp+0x18]; call rbx; 
0x0000000009d301: mov rdx, r13; mov rdi, r12; call rax; 
0x000000000756b0: mov rdx, r13; mov rsi, r10; mov rdi, r15; call qword ptr [rax+0x38]; 
0x00000000074f4f: mov rdx, r13; mov rsi, r10; mov rdi, r15; call qword ptr [rbx+0x38]; 
0x00000000074cac: mov rdx, r13; mov rsi, r12; mov rdi, r15; call qword ptr [rax+0x38]; 
0x0000000008e75e: mov rdx, r13; mov rsi, r12; mov rdi, rbp; call qword ptr [r15+0x40]; 
0x00000000149db5: mov rdx, r13; mov rsi, r12; mov rdi, rbp; call rax; 
0x0000000008f191: mov rdx, r13; mov rsi, r15; mov rdi, rbp; call qword ptr [rax+0x40]; 
0x000000000e0080: mov rdx, r13; mov rsi, rbp; mov edi, r14d; call qword ptr [rsp+0x48]; 
0x000000000e0520: mov rdx, r13; mov rsi, rbp; mov rdi, r14; call qword ptr [rsp+0x48]; 
0x00000000085a73: mov rdx, r13; mov rsi, rbp; mov rdi, rbx; call qword ptr [r14+0x38]; 
0x0000000012c402: mov rdx, r13; movups [rbp-0x78], xmm4; call rax; 
0x0000000012c912: mov rdx, r13; movups [rbp-0x78], xmm6; call rax; 
0x0000000012c9e0: mov rdx, r13; movups [rbp-0x78], xmm7; call rax; 
0x0000000006bef5: mov rdx, r13; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000bd793: mov rdx, r13; xor r8d, r8d; mov rdi, r12; lea r9, [rsp+0x30]; call rbx; 
0x0000000015f2e8: mov rdx, r14; mov esi, 0x40; mov rdi, rbx; call rax; 
0x000000000bdb87: mov rdx, r14; mov r9, [rsp+0x10]; mov rdi, r12; mov rsi, [rsp+0x18]; call rbx; 
0x000000000bde67: mov rdx, r14; mov r9, [rsp+0x18]; mov rdi, r12; mov rsi, [rsp+0x10]; call rbx; 
0x000000000457a8: mov rdx, r14; mov rax, [rsp]; call rax; 
0x00000000045898: mov rdx, r14; mov rax, [rsp]; mov rsi, r12; mov rdi, r13; call rax; 
0x000000000bda95: mov rdx, r14; mov rdi, r12; xor r8d, r8d; lea r9, [rsp+0x28]; call rbx; 
0x00000000137d65: mov rdx, r14; mov rdi, r15; mov rsi, [rsp+0x8]; call rbp; 
0x0000000013276d: mov rdx, r14; mov rsi, r12; call qword ptr [rsp+0x40]; 
0x000000000e2326: mov rdx, r14; mov rsi, r12; mov edi, r13d; call qword ptr [rsp+0x30]; 
0x000000000e1f36: mov rdx, r14; mov rsi, r12; mov rdi, r13; call qword ptr [rsp+0x30]; 
0x00000000045714: mov rdx, r14; mov rsi, r13; mov rdi, r12; call rax; 
0x0000000012c39d: mov rdx, r14; movups [rbp-0x78], xmm5; call rax; 
0x000000000bdd74: mov rdx, r14; xor r8d, r8d; mov rdi, r12; lea r9, [rsp+0x30]; call rbx; 
0x0000000007699c: mov rdx, r15; call qword ptr [rax+0x38]; 
0x00000000077119: mov rdx, r15; mov rsi, r11; mov rdi, r12; mov [rbp-0x4e0], r10; call qword ptr [rcx+0x38]; 
0x00000000044bab: mov rdx, r15; mov rsi, r12; mov rdi, r14; call rbp; 
0x0000000009d9da: mov rdx, r15; mov rsi, r14; mov rdi, r13; call rax; 
0x0000000013494d: mov rdx, r15; mov rsi, r14; mov rdi, rbx; call rax; 
0x00000000076f32: mov rdx, r15; mov rsi, r8; mov rdi, r12; mov [rbp-0x4f0], r10; call qword ptr [rax+0x38]; 
0x0000000012c6ea: mov rdx, r15; movups [rbp-0x78], xmm1; call rax; 
0x0000000011f143: mov rdx, r8; mov r8, r9; mov r10, [rsp+0x8]; mov eax, 0x38; syscall; 
0x0000000007bbc4: mov rdx, r8; mov rsi, r12; mov rdi, r13; call qword ptr [r15+0x38]; 
0x0000000008f7cc: mov rdx, r8; mov rsi, r12; mov rdi, rbp; call qword ptr [rax+0x78]; 
0x0000000005d416: mov rdx, r8; mov rsi, r14; mov rdi, r12; mov [rbp-0xe8], r8; call rax; 
0x0000000009b95b: mov rdx, r8; pop rbx; pop rbp; pop r12; jmp rax; 
0x0000000007a944: mov rdx, r9; mov rsi, r12; mov rdi, r13; call qword ptr [rax+0x38]; 
0x00000000127e8f: mov rdx, rax; call qword ptr [r12+0x28]; 
0x0000000012a063: mov rdx, rax; call qword ptr [r13+0x28]; 
0x00000000128886: mov rdx, rax; call qword ptr [rbx+0x28]; 
0x00000000093575: mov rdx, rax; mov rax, [rax]; test rax, rax; jne short 0x0000000000093570; ret; 
0x0000000012aa2d: mov rdx, rax; mov rsi, r9; call qword ptr [r10+0x28]; 
0x00000000131d48: mov rdx, rbp; call qword ptr [rsp+0x60]; 
0x00000000045152: mov rdx, rbp; mov rdi, r12; call rbx; 
0x0000000009e0ee: mov rdx, rbp; mov rsi, r12; call rax; 
0x0000000004484d: mov rdx, rbp; mov rsi, r12; call rbx; 
0x00000000044870: mov rdx, rbp; mov rsi, r12; mov rdi, r13; call rbx; 
0x00000000090974: mov rdx, rbp; mov rsi, r12; mov rdi, rbx; call qword ptr [r14+0x78]; 
0x0000000013414b: mov rdx, rbp; mov rsi, r13; mov edi, r12d; call qword ptr [rsp+0x40]; 
0x00000000133b7b: mov rdx, rbp; mov rsi, r13; mov rdi, r12; call qword ptr [rsp+0x40]; 
0x0000000004488b: mov rdx, rbp; mov rsi, r15; mov rdi, r12; call rbx; 
0x00000000152a00: mov rdx, rbp; mov rsi, rbx; call rax; 
0x0000000007a3c1: mov rdx, rbx; call qword ptr [r13+0x38]; 
0x0000000007e84e: mov rdx, rbx; mov rsi, r10; mov rdi, r12; call qword ptr [rax+0x38]; 
0x0000000008451e: mov rdx, rbx; mov rsi, r12; call qword ptr [r14+0x38]; 
0x000000000753e1: mov rdx, rbx; mov rsi, r12; mov rdi, r15; call qword ptr [rax+0x38]; 
0x00000000075980: mov rdx, rbx; mov rsi, r12; mov rdi, r15; call qword ptr [rcx+0x38]; 
0x0000000008e3a2: mov rdx, rbx; mov rsi, r12; mov rdi, rbp; call qword ptr [r13+0x38]; 
0x00000000085b56: mov rdx, rbx; mov rsi, r13; mov rdi, rbp; call qword ptr [r14+0x38]; 
0x0000000010d9df: mov rdx, rcx; cmp r9d, 0x1; ja short 0x000000000010da18; mov eax, 0x106; syscall; 
0x0000000011875d: mov rdx, rcx; mov r10, r8; mov r8, r9; mov r9, [rsp+0x8]; syscall; 
0x0000000007d84e: mov rdx, rcx; mov rsi, r10; mov rdi, r12; mov [rbp-0x4e0], r9; call qword ptr [r8+0x38]; 
0x0000000007dea3: mov rdx, rcx; mov rsi, r10; mov rdi, r12; mov [rbp-0x4e0], r9; call qword ptr [rbx+0x38]; 
0x0000000007c1ed: mov rdx, rcx; mov rsi, r12; mov rdi, r13; call qword ptr [r15+0x38]; 
0x0000000007b7d5: mov rdx, rcx; mov rsi, r12; mov rdi, r13; call qword ptr [rax+0x38]; 
0x000000000bbf84: mov rdx, rdi; rep stosb [rdi]; mov rax, rdx; ret; 
0x00000000162b84: mov rdx, rsi; mov eax, 0xcb; mov esi, 0x80; syscall; 
0x00000000162b17: mov rdx, rsi; mov eax, 0xcc; mov esi, 0x80; syscall; 
0x000000000dd006: mov rdx, rsi; mov eax, 0xe5; xor esi, esi; lea edi, [rdi*8+0x2]; syscall; 
0x00000000112d4f: mov rdx, rsi; xor esi, esi; syscall; 
0x00000000113a40: mov rdx, rsp; mov eax, 0x10; syscall; 
0x00000000113498: mov rdx, rsp; mov esi, 0x10; mov eax, 0x48; syscall; 
0x000000000457a0: mov rsi, [r13]; mov rdi, [r12]; mov rdx, r14; mov rax, [rsp]; call rax; 
0x00000000074a96: mov rsi, [r14+0x18]; mov rdx, [r14+0x20]; mov rdi, r15; sub rdx, rsi; call qword ptr [rbx+0x38]; 
0x00000000119c45: mov rsi, [r14]; mov rax, [rsp+0x8]; mov rdi, r13; call rax; 
0x0000000014ed5e: mov rsi, [r8+0x40]; mov edx, [rsi+0x1c8]; add rsi, 0x38; jmp qword ptr [rax+0x18]; 
0x00000000046904: mov rsi, [rax+0x20]; mov edi, ebp; ror rdx, 0x11; xor rdx, fs:[0x30]; call rdx; 
0x0000000011a0e8: mov rsi, [rax]; mov rdi, r14; mov rax, [rbp-0x58]; mov r15d, r13d; call rax; 
0x000000000240c6: mov rsi, [rax]; xor eax, eax; call qword ptr [rdx+0x1d0]; 
0x000000000256c7: mov rsi, [rbp-0x70]; mov rdi, rbx; call rsi; 
0x00000000147624: mov rsi, [rbx+0x10]; mov rdi, rbp; mov [rbx], rax; xor eax, eax; call qword ptr [rbx+0x18]; 
0x00000000088a98: mov rsi, [rbx+0x10]; mov rdx, [rbx+0x40]; mov rdi, rbx; sub rdx, rsi; call qword ptr [rax+0x70]; 
0x00000000148c84: mov rsi, [rbx+0x10]; mov rdx, r12; mov rdi, r14; call qword ptr [rax+0x10]; 
0x00000000148cbe: mov rsi, [rbx+0x10]; mov rdx, r12; mov rdi, r14; call qword ptr [rax+0x20]; 
0x000000001476e6: mov rsi, [rbx+0x20]; mov rdi, rbp; mov r12d, eax; xor eax, eax; call qword ptr [rbx+0x28]; 
0x0000000010cc8e: mov rsi, [rbx+0xa0]; mov rdi, [rbx+0x80]; call qword ptr [rax+0x88]; 
0x0000000011a01f: mov rsi, [rbx]; mov r13, rbx; mov rdi, rbp; call r12; 
0x0000000008052a: mov rsi, [rip+0x16ba37]; mov rdi, rsp; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000007a01a: mov rsi, [rip+0x171f47]; mov rdi, rsp; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000bbc37: mov rsi, [rsi]; mov [rdi+rdx-0x8], rcx; mov [rdi], rsi; ret; 
0x0000000018fa3a: mov rsi, [rsi]; mov rcx, [rcx-0x8]; mov [rdi], rsi; mov [r9-0x8], rcx; ret; 
0x00000000146da8: mov rsi, [rsp+0x10]; call qword ptr [rax]; 
0x000000000bde72: mov rsi, [rsp+0x10]; call rbx; 
0x00000000114feb: mov rsi, [rsp+0x10]; mov eax, 0x17; mov edi, [rsp+0xc]; syscall; 
0x00000000120fdb: mov rsi, [rsp+0x10]; mov eax, 0x46; mov edi, [rsp+0x8]; syscall; 
0x0000000010df63: mov rsi, [rsp+0x10]; mov edi, [rsp+0x18]; mov eax, 0x101; syscall; 
0x00000000113068: mov rsi, [rsp+0x10]; mov edi, [rsp+0x8]; syscall; 
0x00000000120cae: mov rsi, [rsp+0x10]; mov edi, [rsp+0xc]; mov eax, 0x133; syscall; 
0x0000000011f48e: mov rsi, [rsp+0x10]; mov edi, [rsp+0xc]; mov eax, 0xe8; syscall; 
0x0000000011443a: mov rsi, [rsp+0x10]; mov r8d, eax; mov edi, [rsp+0x8]; mov eax, 0x13; syscall; 
0x000000001144da: mov rsi, [rsp+0x10]; mov r8d, eax; mov edi, [rsp+0x8]; mov eax, 0x14; syscall; 
0x0000000010e0cc: mov rsi, [rsp+0x10]; mov r8d, eax; mov edi, [rsp+0x8]; mov eax, 0x1; syscall; 
0x0000000012063a: mov rsi, [rsp+0x10]; mov r8d, eax; mov edi, [rsp+0x8]; mov eax, 0x2e; syscall; 
0x000000001204da: mov rsi, [rsp+0x10]; mov r8d, eax; mov edi, [rsp+0x8]; mov eax, 0x2f; syscall; 
0x0000000010e02c: mov rsi, [rsp+0x10]; mov r8d, eax; mov edi, [rsp+0x8]; xor eax, eax; syscall; 
0x0000000012012c: mov rsi, [rsp+0x10]; mov r8d, eax; mov edi, [rsp+0xc]; mov eax, 0x2b; syscall; 
0x0000000004827b: mov rsi, [rsp+0x10]; mov r8d, eax; mov rdi, [rsp+0x8]; mov eax, 0x13e; syscall; 
0x00000000118a3b: mov rsi, [rsp+0x10]; mov r8d, eax; mov rdi, [rsp+0x8]; mov eax, 0x1a; syscall; 
0x000000001129bb: mov rsi, [rsp+0x10]; mov r8d, eax; mov rdi, [rsp+0x8]; mov eax, 0x7; syscall; 
0x0000000014695d: mov rsi, [rsp+0x10]; mov rcx, [rsp+0x8]; mov rdi, rbp; call rcx; 
0x000000000921dd: mov rsi, [rsp+0x10]; mov rdi, [rsp+0x8]; add rsp, 0x20; pop rbx; jmp rax; 
0x0000000004514d: mov rsi, [rsp+0x10]; mov rdx, rbp; mov rdi, r12; call rbx; 
0x0000000009a798: mov rsi, [rsp+0x18]; add rsp, 0x18; jmp rax; 
0x000000000bd8f2: mov rsi, [rsp+0x18]; call rbx; 
0x0000000011510b: mov rsi, [rsp+0x18]; mov edi, [rsp+0x14]; syscall; 
0x00000000160095: mov rsi, [rsp+0x18]; mov esi, [rsi]; lea r9, [r11+rsi]; mov esi, [rsp+0x8]; call rax; 
0x000000000ca890: mov rsi, [rsp+0x18]; mov rcx, r12; mov rdx, r13; call rbx; 
0x0000000014d1ba: mov rsi, [rsp+0x18]; mov rdi, r12; call qword ptr [rax+0x8]; 
0x0000000009a280: mov rsi, [rsp+0x18]; pop rbx; pop rbp; pop r12; jmp rax; 
0x00000000024c75: mov rsi, [rsp+0x18]; xor r8d, r8d; call rbx; 
0x0000000012f5ba: mov rsi, [rsp+0x18]; xor rsi, fs:[0x28]; jne short 0x000000000012f5d5; add rsp, 0x28; ret; 
0x0000000012f61a: mov rsi, [rsp+0x18]; xor rsi, fs:[0x28]; jne short 0x000000000012f635; add rsp, 0x28; ret; 
0x00000000110394: mov rsi, [rsp+0x28]; lea rcx, [rbp+0x28]; mov edx, 0x1; call qword ptr [rbp+0x40]; 
0x000000001106f4: mov rsi, [rsp+0x28]; lea rcx, [rbp+0x28]; mov edx, 0x2; call qword ptr [rbp+0x40]; 
0x00000000110674: mov rsi, [rsp+0x28]; lea rcx, [rbp+0x28]; mov edx, 0x5; call qword ptr [rbp+0x40]; 
0x0000000009bd10: mov rsi, [rsp+0x28]; mov rdi, r12; call rdx; 
0x0000000014d1e9: mov rsi, [rsp+0x30]; mov rcx, [rsp+0x28]; mov rdi, r12; call rcx; 
0x00000000144ee3: mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; call qword ptr [rsp+0x68]; 
0x0000000002b8c8: mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; call r15; 
0x0000000002f2e5: mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; lea r8, [rsp+0xa0]; call r15; 
0x0000000002b2d4: mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; mov rax, [rsp+0x20]; call rax; 
0x0000000014d404: mov rsi, [rsp+0x40]; mov rdx, [rsp+0x20]; mov rdi, r12; call rdx; 
0x0000000002a346: mov rsi, [rsp+0x48]; mov rdi, [rsp+0x40]; call r14; 
0x0000000002a894: mov rsi, [rsp+0x48]; mov rdi, [rsp+0x40]; call rbx; 
0x0000000009a9e8: mov rsi, [rsp+0x48]; mov rdi, r13; call rax; 
0x000000001509da: mov rsi, [rsp+0x50]; mov rcx, [rsp+0x10]; mov rdi, r15; call rcx; 
0x00000000029753: mov rsi, [rsp+0x50]; mov rdi, [rsp+0x48]; call r13; 
0x00000000029c53: mov rsi, [rsp+0x50]; mov rdi, [rsp+0x48]; call rbx; 
0x0000000002769d: mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; call r14; 
0x000000000284b7: mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; call rbx; 
0x000000000290bf: mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; mov rax, [rsp+0x20]; call rax; 
0x000000000273ee: mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; mov rax, [rsp+0x28]; call rax; 
0x00000000028241: mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; mov rax, [rsp+0x30]; call rax; 
0x0000000002c652: mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; call rbx; 
0x0000000002d965: mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; mov rax, [rsp+0x18]; call rax; 
0x0000000002c268: mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; mov rax, [rsp+0x20]; call rax; 
0x00000000027e02: mov rsi, [rsp+0x58]; mov rdi, [rsp+0x60]; call rbx; 
0x000000000279ea: mov rsi, [rsp+0x58]; mov rdi, [rsp+0x60]; mov rax, [rsp+0x20]; call rax; 
0x000000000ded85: mov rsi, [rsp+0x60]; call r12; 
0x00000000043771: mov rsi, [rsp+0x88]; xor rsi, fs:[0x28]; jne short 0x000000000004378c; add rsp, 0x98; ret; 
0x00000000137d6b: mov rsi, [rsp+0x8]; call rbp; 
0x0000000011f2b6: mov rsi, [rsp+0x8]; mov eax, 0x119; mov edi, [rsp+0x4]; syscall; 
0x0000000011459c: mov rsi, [rsp+0x8]; mov eax, 0x127; syscall; 
0x0000000011465c: mov rsi, [rsp+0x8]; mov eax, 0x128; syscall; 
0x00000000120c08: mov rsi, [rsp+0x8]; mov eax, 0x12b; mov edi, [rsp+0x4]; syscall; 
0x000000000e2c9f: mov rsi, [rsp+0x8]; mov edi, [rsp+0x10]; mov eax, 0x3d; syscall; 
0x00000000024032: mov rsi, [rsp+0x8]; mov edi, [rsp+0x14]; mov rdx, [rax]; call rbx; 
0x000000000240a0: mov rsi, [rsp+0x8]; mov edi, [rsp+0x14]; mov rdx, [rax]; mov rax, [rsp+0x18]; call rax; 
0x00000000113260: mov rsi, [rsp+0x8]; mov edi, [rsp+0x18]; mov eax, 0x115; syscall; 
0x00000000120b50: mov rsi, [rsp+0x8]; mov edi, [rsp+0x18]; mov eax, 0x120; syscall; 
0x00000000120f20: mov rsi, [rsp+0x8]; mov edi, [rsp+0x18]; mov eax, 0x45; syscall; 
0x0000000011f5ef: mov rsi, [rsp+0x8]; mov edi, [rsp]; mov eax, 0x116; syscall; 
0x0000000010c1d0: mov rsi, [rsp+0x8]; mov edi, [rsp]; mov eax, 0x11; syscall; 
0x0000000010c280: mov rsi, [rsp+0x8]; mov edi, [rsp]; mov eax, 0x12; syscall; 
0x00000000147e05: mov rsi, [rsp+0x8]; mov rcx, [rsp]; xor eax, eax; mov rdi, rbx; call rcx; 
0x0000000012044b: mov rsi, [rsp+0x8]; syscall; 
0x0000000012059d: mov rsi, [rsp+0x8]; xor r8d, r8d; mov eax, 0x2c; syscall; 
0x0000000012037d: mov rsi, [rsp+0x8]; xor r8d, r8d; mov eax, 0x2d; syscall; 
0x0000000011f759: mov rsi, [rsp]; mov r8d, eax; mov edi, [rsp+0x8]; mov eax, 0x130; syscall; 
0x000000001201f9: mov rsi, [rsp]; mov r8d, eax; mov edi, [rsp+0x8]; mov eax, 0x2a; syscall; 
0x0000000007e851: mov rsi, r10; mov rdi, r12; call qword ptr [rax+0x38]; 
0x0000000007d851: mov rsi, r10; mov rdi, r12; mov [rbp-0x4e0], r9; call qword ptr [r8+0x38]; 
0x0000000007dea6: mov rsi, r10; mov rdi, r12; mov [rbp-0x4e0], r9; call qword ptr [rbx+0x38]; 
0x0000000007eb32: mov rsi, r10; mov rdi, r12; mov [rbp-0x508], r9; mov [rbp-0x500], r10; call qword ptr [rax+0x38]; 
0x00000000077007: mov rsi, r10; mov rdi, r12; sub r15, r10; mov rdx, r15; call qword ptr [rax+0x38]; 
0x000000000756b3: mov rsi, r10; mov rdi, r15; call qword ptr [rax+0x38]; 
0x00000000074f52: mov rsi, r10; mov rdi, r15; call qword ptr [rbx+0x38]; 
0x0000000007711c: mov rsi, r11; mov rdi, r12; mov [rbp-0x4e0], r10; call qword ptr [rcx+0x38]; 
0x0000000007812e: mov rsi, r11; mov rdi, r12; mov [rbp-0x4f8], r9d; mov [rbp-0x4f0], r10; call qword ptr [rax+0x38]; 
0x000000000777c6: mov rsi, r11; mov rdi, r12; mov [rbp-0x500], r9d; mov [rbp-0x4f0], r10; call qword ptr [rbx+0x38]; 
0x00000000078396: mov rsi, r11; mov rdi, r12; mov [rbp-0x510], r10; mov [rbp-0x508], r11; call qword ptr [rax+0x38]; 
0x00000000084521: mov rsi, r12; call qword ptr [r14+0x38]; 
0x00000000149461: mov rsi, r12; call qword ptr [r15+0x40]; 
0x000000001496c2: mov rsi, r12; call qword ptr [rbp+0x40]; 
0x00000000132770: mov rsi, r12; call qword ptr [rsp+0x40]; 
0x0000000013276f: mov rsi, r12; call qword ptr [rsp+0x40]; 
0x00000000138165: mov rsi, r12; call qword ptr [rsp+0x58]; 
0x0000000009c9a0: mov rsi, r12; call rax; 
0x00000000044850: mov rsi, r12; call rbx; 
0x0000000010cf91: mov rsi, r12; lea rdi, [rip+0xa7622]; mov rdx, [rax+0xb0]; call qword ptr [rax+0x88]; 
0x000000000dd118: mov rsi, r12; mov edi, ebp; mov eax, 0xe4; syscall; 
0x000000000dd098: mov rsi, r12; mov edi, ebp; mov eax, 0xe5; syscall; 
0x000000000e2329: mov rsi, r12; mov edi, r13d; call qword ptr [rsp+0x30]; 
0x000000000e2328: mov rsi, r12; mov edi, r13d; call qword ptr [rsp+0x30]; 
0x0000000014d1d2: mov rsi, r12; mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x8]; 
0x0000000007bbc7: mov rsi, r12; mov rdi, r13; call qword ptr [r15+0x38]; 
0x0000000007a947: mov rsi, r12; mov rdi, r13; call qword ptr [rax+0x38]; 
0x000000000e1f39: mov rsi, r12; mov rdi, r13; call qword ptr [rsp+0x30]; 
0x000000000e1f38: mov rsi, r12; mov rdi, r13; call qword ptr [rsp+0x30]; 
0x0000000004589f: mov rsi, r12; mov rdi, r13; call rax; 
0x00000000044873: mov rsi, r12; mov rdi, r13; call rbx; 
0x0000000011bb3d: mov rsi, r12; mov rdi, r14; call r13; 
0x00000000044bae: mov rsi, r12; mov rdi, r14; call rbp; 
0x00000000074caf: mov rsi, r12; mov rdi, r15; call qword ptr [rax+0x38]; 
0x00000000075983: mov rsi, r12; mov rdi, r15; call qword ptr [rcx+0x38]; 
0x0000000011baa8: mov rsi, r12; mov rdi, r15; call r14; 
0x000000000e7300: mov rsi, r12; mov rdi, r8; call qword ptr [r15+0x40]; 
0x0000000008e3a6: mov rsi, r12; mov rdi, rbp; call qword ptr [r13+0x38]; 
0x0000000008e761: mov rsi, r12; mov rdi, rbp; call qword ptr [r15+0x40]; 
0x0000000008eb81: mov rsi, r12; mov rdi, rbp; call qword ptr [r15+0x80]; 
0x0000000008f7cf: mov rsi, r12; mov rdi, rbp; call qword ptr [rax+0x78]; 
0x000000001490e6: mov rsi, r12; mov rdi, rbp; call qword ptr [rax]; 
0x0000000009d12d: mov rsi, r12; mov rdi, rbp; call rax; 
0x0000000010d3d2: mov rsi, r12; mov rdi, rbp; mov eax, 0x135; syscall; 
0x00000000090977: mov rsi, r12; mov rdi, rbx; call qword ptr [r14+0x78]; 
0x00000000157681: mov rsi, r12; mov rdi, rbx; call rcx; 
0x00000000144d5e: mov rsi, r12; mov rdi, rbx; mov rcx, r13; call r10; 
0x0000000009b661: mov rsi, r12; pop r12; pop r13; jmp rax; 
0x00000000146a89: mov rsi, r13; call qword ptr [rax+0x10]; 
0x000000000d096b: mov rsi, r13; call rbp; 
0x00000000083e02: mov rsi, r13; mov edi, 0x1; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000013414e: mov rsi, r13; mov edi, r12d; call qword ptr [rsp+0x40]; 
0x000000001215a9: mov rsi, r13; mov edi, r12d; mov [rbp-0x830], rax; mov eax, r14d; syscall; 
0x00000000146a97: mov rsi, r13; mov rax, [rdi+0x38]; call qword ptr [rax+0x10]; 
0x00000000133b7e: mov rsi, r13; mov rdi, r12; call qword ptr [rsp+0x40]; 
0x00000000045717: mov rsi, r13; mov rdi, r12; call rax; 
0x00000000045716: mov rsi, r13; mov rdi, r12; call rax; 
0x00000000076993: mov rsi, r13; mov rdi, r12; sub r15, r13; mov rdx, r15; call qword ptr [rax+0x38]; 
0x00000000044950: mov rsi, r13; mov rdi, r14; mov rdx, r12; call rbp; 
0x00000000083bf5: mov rsi, r13; mov rdi, r15; call qword ptr [r14+0x38]; 
0x00000000083c5a: mov rsi, r13; mov rdi, r15; call qword ptr [rbp+0x38]; 
0x00000000085b59: mov rsi, r13; mov rdi, rbp; call qword ptr [r14+0x38]; 
0x00000000146934: mov rsi, r13; mov rdi, rbp; call qword ptr [rax+0x8]; 
0x000000001569ab: mov rsi, r13; mov rdi, rbp; xor eax, eax; call r14; 
0x000000001569c5: mov rsi, r13; mov rdi, rbp; xor eax, eax; call rcx; 
0x0000000008f32f: mov rsi, r13; mov rdi, rbx; call qword ptr [rbp+0x70]; 
0x0000000009fadf: mov rsi, r13; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000d0b77: mov rsi, r13; sub r8, rax; add r14, r8; mov [rsp+0x88], r14; call rbp; 
0x0000000015ff2b: mov rsi, r13; xor r9d, r9d; mov rdi, r12; lea r8, [rsp+0x30]; call qword ptr [rax+0x1e0]; 
0x0000000016034b: mov rsi, r13; xor r9d, r9d; xor r8d, r8d; mov rdi, r12; call qword ptr [rax+0x1e0]; 
0x00000000146a29: mov rsi, r14; add qword ptr [rbx+0x22a8], 0x1; mov rdi, rbp; call qword ptr [rax+0x18]; 
0x0000000009e824: mov rsi, r14; call rax; 
0x00000000128f41: mov rsi, r14; mov edi, 0x2000003; mov rdx, rax; call qword ptr [rbx+0x28]; 
0x0000000010c9c5: mov rsi, r14; mov edi, 0x2; mov eax, 0xe; syscall; 
0x0000000010ff82: mov rsi, r14; mov edx, [rdx+rax]; call qword ptr [rbx+0x40]; 
0x00000000155a93: mov rsi, r14; mov rdi, r12; call r13; 
0x0000000005d419: mov rsi, r14; mov rdi, r12; mov [rbp-0xe8], r8; call rax; 
0x0000000009d9dd: mov rsi, r14; mov rdi, r13; call rax; 
0x0000000007b4cc: mov rsi, r14; mov rdi, r13; mov [rbp-0x978], r10d; mov [rbp-0x960], r9b; call rax; 
0x000000000749f4: mov rsi, r14; mov rdi, r15; mov [rbp-0x954], r9d; mov [rbp-0x948], r11d; call rax; 
0x00000000144bfc: mov rsi, r14; mov rdi, r15; mov [rsp+0x8], rcx; call rbp; 
0x000000001577af: mov rsi, r14; mov rdi, rbp; call r12; 
0x000000000833e7: mov rsi, r14; mov rdi, rbx; call qword ptr [r15+0x38]; 
0x00000000134950: mov rsi, r14; mov rdi, rbx; call rax; 
0x00000000044672: mov rsi, r15; call r14; 
0x0000000012887e: mov rsi, r15; mov edi, 0x2000006; mov rdx, rax; call qword ptr [rbx+0x28]; 
0x000000001509c6: mov rsi, r15; mov rax, [rdi+0x38]; call qword ptr [rax+0x8]; 
0x000000001381b8: mov rsi, r15; mov rdi, r12; call rbp; 
0x0000000004488e: mov rsi, r15; mov rdi, r12; call rbx; 
0x0000000008f194: mov rsi, r15; mov rdi, rbp; call qword ptr [rax+0x40]; 
0x000000000d04b7: mov rsi, r15; mov rdi, rbp; call rbx; 
0x00000000147f00: mov rsi, r15; mov rdi, rbx; xor eax, eax; call rcx; 
0x00000000043331: mov rsi, r8; mov eax, 0xe; syscall; 
0x00000000076f35: mov rsi, r8; mov rdi, r12; mov [rbp-0x4f0], r10; call qword ptr [rax+0x38]; 
0x0000000011ef8b: mov rsi, r8; mov rdi, rbp; call r12; 
0x00000000048305: mov rsi, r8; xor edx, edx; mov eax, r9d; sub rsi, rdi; syscall; 
0x0000000012aa30: mov rsi, r9; call qword ptr [r10+0x28]; 
0x00000000110b3f: mov rsi, r9; call qword ptr [rbp-0xf0]; 
0x0000000004302c: mov rsi, r9; mov edi, 0x2; mov eax, 0xe; syscall; 
0x0000000011351d: mov rsi, r9; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x0000000012163d: mov rsi, r9; mov edi, r12d; mov eax, r14d; syscall; 
0x0000000015f162: mov rsi, rax; shr ecx, 0x3; rep movsq [rdi], [rsi]; ret; 
0x00000000153ecb: mov rsi, rbp; call qword ptr [rax+0x18]; 
0x00000000149b39: mov rsi, rbp; call qword ptr [rbx+0x40]; 
0x0000000009e67f: mov rsi, rbp; call rax; 
0x00000000127e87: mov rsi, rbp; mov [rsp+0x10], rax; mov rdx, rax; call qword ptr [r12+0x28]; 
0x0000000010dd5c: mov rsi, rbp; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x000000000e0083: mov rsi, rbp; mov edi, r14d; call qword ptr [rsp+0x48]; 
0x0000000010ddd2: mov rsi, rbp; mov r8d, eax; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x00000000146949: mov rsi, rbp; mov rax, [rdi+0x38]; call qword ptr [rax+0x8]; 
0x0000000004590d: mov rsi, rbp; mov rax, [rsp]; mov r13, r15; add r15, r12; call rax; 
0x0000000014d3b1: mov rsi, rbp; mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x10]; 
0x0000000009df08: mov rsi, rbp; mov rdi, r12; call rax; 
0x00000000131234: mov rsi, rbp; mov rdi, r13; call qword ptr [rsp+0x40]; 
0x000000000e0523: mov rsi, rbp; mov rdi, r14; call qword ptr [rsp+0x48]; 
0x00000000089479: mov rsi, rbp; mov rdi, r15; call qword ptr [r14+0x80]; 
0x0000000008f4fa: mov rsi, rbp; mov rdi, rbx; call qword ptr [r12+0x80]; 
0x00000000082db1: mov rsi, rbp; mov rdi, rbx; call qword ptr [r13+0x38]; 
0x00000000084aca: mov rsi, rbp; mov rdi, rbx; call qword ptr [r13+0x48]; 
0x00000000084c39: mov rsi, rbp; mov rdi, rbx; call qword ptr [r13+0x58]; 
0x00000000085a76: mov rsi, rbp; mov rdi, rbx; call qword ptr [r14+0x38]; 
0x0000000008481f: mov rsi, rbp; mov rdi, rbx; call qword ptr [r14+0x48]; 
0x00000000084c63: mov rsi, rbp; mov rdi, rbx; call qword ptr [rax+0x58]; 
0x00000000149ef3: mov rsi, rbp; mov rdi, rbx; call rax; 
0x00000000149382: mov rsi, rbx; call qword ptr [r15+0x40]; 
0x00000000149383: mov rsi, rbx; call qword ptr [r15+0x40]; 
0x00000000152a03: mov rsi, rbx; call rax; 
0x0000000012a05b: mov rsi, rbx; mov edi, 0x2000005; mov rdx, rax; call qword ptr [r13+0x28]; 
0x0000000008cf7d: mov rsi, rbx; mov edi, 0x2; mov eax, r9d; syscall; 
0x000000000441bf: mov rsi, rbx; mov r8d, eax; mov r10d, 0x8; mov eax, 0x80; syscall; 
0x0000000014e784: mov rsi, rbx; mov rdi, rbp; call qword ptr [rax+0x48]; 
0x00000000153cff: mov rsi, rbx; mov rdi, rbp; call qword ptr [rax]; 
0x00000000137799: mov rsi, rbx; mov rdi, rbp; call qword ptr [rsp+0x10]; 
0x00000000075b68: mov rsi, rcx; mov [rbp-0x8f0], r10; mov [rbp-0x8e0], rdx; mov [rbp-0x8b8], rcx; call qword ptr [r11+rax*8-0x40]; 
0x0000000007c5b5: mov rsi, rcx; mov [rbp-0x908], r10; mov [rbp-0x900], rdx; mov [rbp-0x8d0], rcx; call qword ptr [r11+rax*8-0x40]; 
0x00000000116e80: mov rsi, rcx; mov r8, rdi; mov byte ptr [rsi-0x1], 0x0; mov rax, r8; ret; 
0x000000000d10a4: mov rsi, rdi; mov eax, 0xa4; xor edi, edi; syscall; 
0x00000000116b6d: mov rsi, rdi; mov r10d, 0x100; mov edi, 0xffffff9c; mov eax, 0x118; syscall; 
0x0000000015f74b: mov rsi, rdi; mov rdi, [rsp]; mov rax, [rax+0x1d8]; jmp rax; 
0x0000000008e237: mov rsi, rdi; mov rdx, r12; mov rdi, rcx; call qword ptr [r14+0x38]; 
0x0000000014dadd: mov rsi, rdx; add rdi, 0x10; jmp rcx; 
0x0000000012bde7: mov rsi, rdx; call rax; 
0x0000000010d4da: mov rsi, rdx; cmp r8d, 0x1; ja short 0x000000000010d510; mov eax, 0x4; syscall; 
0x0000000010d539: mov rsi, rdx; cmp r8d, 0x1; ja short 0x000000000010d570; mov eax, 0x5; syscall; 
0x0000000010d59a: mov rsi, rdx; cmp r8d, 0x1; ja short 0x000000000010d5d0; mov eax, 0x6; syscall; 
0x0000000014dafd: mov rsi, rdx; mov dword ptr [rdi+0x10], 0x2; add rdi, 0x10; jmp rcx; 
0x0000000015064d: mov rsi, rdx; mov dword ptr [rdi+0x58], 0x2; add rdi, 0x58; jmp rcx; 
0x0000000014fd0d: mov rsi, rdx; mov dword ptr [rdi+0x68], 0x2; add rdi, 0x68; jmp rcx; 
0x0000000014cecd: mov rsi, rdx; mov dword ptr [rdi+0xc8], 0x2; add rdi, 0xc8; jmp rcx; 
0x00000000156d6c: mov rsi, rsp; call qword ptr [rax+0x40]; 
0x00000000149034: mov rsi, rsp; call qword ptr [rax]; 
0x00000000149053: mov rsi, rsp; mov [rsp], rax; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x00000000153a90: mov rsi, rsp; mov dword ptr [rsp+0x8], 0x1; mov dword ptr [rsp+0x10], 0x1; mov dword ptr [rsp+0x18], 0x1; call qword ptr [rax+0x18]; 
0x00000000054eb6: mov rsi, rsp; mov edi, 0x3001; mov eax, 0x9e; syscall; 
0x0000000008f97e: mov rsi, rsp; mov rdi, rbp; call qword ptr [r13+0x90]; 
0x0000000008e6f8: mov rsi, rsp; mov rdi, rbp; call qword ptr [r15+0x90]; 
0x00000000156ab1: mov rsi, rsp; mov rdi, rbp; call qword ptr [rax]; 
0x00000000081cf7: mov rsi, rsp; mov rdi, rbp; call qword ptr [rbx+0x90]; 
0x00000000042e05: mov rsi, rsp; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000042de7: mov rsp, r8; mov rbp, r9; nop; jmp rdx; 
0x0000000005b500: mov rsp, rdx; ret; 
0x0000000018fa5f: mov si, [rsi]; mov cx, [rcx-0x2]; mov [rdi], si; mov [r9-0x2], cx; ret; 
0x0000000008c51c: mov ss, [rdx]; add al, ch; pushfq; jp short 0x000000000008c51d; jmp qword ptr [rsi+0x66]; 
0x00000000084f26: mov ss, [rsi+rdi*8+0x3145ffff]; sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; syscall; 
0x00000000042134: movapd xmm0, xmm1; ret; 
0x000000000d1df2: movaps [rax], xmm0; add rsp, 0x10; pop rbp; ret; 
0x000000000d2018: movaps [rax], xmm0; add rsp, 0x8; pop rbp; pop r12; ret; 
0x000000001663f7: movaps [rdi+0x10], xmm3; jb short 0x0000000000166406; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000166547: movaps [rdi+0x10], xmm3; jb short 0x0000000000166556; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000166697: movaps [rdi+0x10], xmm3; jb short 0x00000000001666a6; movaps [rdi], xmm4; notrack jmp r9; 
0x000000001667e7: movaps [rdi+0x10], xmm3; jb short 0x00000000001667f6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000166937: movaps [rdi+0x10], xmm3; jb short 0x0000000000166946; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000166a87: movaps [rdi+0x10], xmm3; jb short 0x0000000000166a96; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000166bd7: movaps [rdi+0x10], xmm3; jb short 0x0000000000166be6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000166d27: movaps [rdi+0x10], xmm3; jb short 0x0000000000166d36; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000166e77: movaps [rdi+0x10], xmm3; jb short 0x0000000000166e86; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000166fc7: movaps [rdi+0x10], xmm3; jb short 0x0000000000166fd6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000167117: movaps [rdi+0x10], xmm3; jb short 0x0000000000167126; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000167267: movaps [rdi+0x10], xmm3; jb short 0x0000000000167276; movaps [rdi], xmm4; notrack jmp r9; 
0x000000001673b7: movaps [rdi+0x10], xmm3; jb short 0x00000000001673c6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000167507: movaps [rdi+0x10], xmm3; jb short 0x0000000000167516; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000167657: movaps [rdi+0x10], xmm3; jb short 0x0000000000167666; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000168dd7: movaps [rdi+0x10], xmm3; jb short 0x0000000000168de6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000168f27: movaps [rdi+0x10], xmm3; jb short 0x0000000000168f36; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000169077: movaps [rdi+0x10], xmm3; jb short 0x0000000000169086; movaps [rdi], xmm4; notrack jmp r9; 
0x000000001691c7: movaps [rdi+0x10], xmm3; jb short 0x00000000001691d6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000169317: movaps [rdi+0x10], xmm3; jb short 0x0000000000169326; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000169467: movaps [rdi+0x10], xmm3; jb short 0x0000000000169476; movaps [rdi], xmm4; notrack jmp r9; 
0x000000001695b7: movaps [rdi+0x10], xmm3; jb short 0x00000000001695c6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000169707: movaps [rdi+0x10], xmm3; jb short 0x0000000000169716; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000169857: movaps [rdi+0x10], xmm3; jb short 0x0000000000169866; movaps [rdi], xmm4; notrack jmp r9; 
0x000000001699a7: movaps [rdi+0x10], xmm3; jb short 0x00000000001699b6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000169af7: movaps [rdi+0x10], xmm3; jb short 0x0000000000169b06; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000169c47: movaps [rdi+0x10], xmm3; jb short 0x0000000000169c56; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000169d97: movaps [rdi+0x10], xmm3; jb short 0x0000000000169da6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000169ee7: movaps [rdi+0x10], xmm3; jb short 0x0000000000169ef6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000016a037: movaps [rdi+0x10], xmm3; jb short 0x000000000016a046; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000166353: movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000016634f: movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000166349: movaps [rdi-0x30], xmm3; jb short 0x000000000016635d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000166499: movaps [rdi-0x30], xmm3; jb short 0x00000000001664ad; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x000000001665e9: movaps [rdi-0x30], xmm3; jb short 0x00000000001665fd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000166739: movaps [rdi-0x30], xmm3; jb short 0x000000000016674d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000166889: movaps [rdi-0x30], xmm3; jb short 0x000000000016689d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x000000001669d9: movaps [rdi-0x30], xmm3; jb short 0x00000000001669ed; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000166b29: movaps [rdi-0x30], xmm3; jb short 0x0000000000166b3d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000166c77: movaps [rdi-0x30], xmm3; jb short 0x0000000000166c90; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000166dc9: movaps [rdi-0x30], xmm3; jb short 0x0000000000166ddd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000166f19: movaps [rdi-0x30], xmm3; jb short 0x0000000000166f2d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000167069: movaps [rdi-0x30], xmm3; jb short 0x000000000016707d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x000000001671b9: movaps [rdi-0x30], xmm3; jb short 0x00000000001671cd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000167309: movaps [rdi-0x30], xmm3; jb short 0x000000000016731d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000167459: movaps [rdi-0x30], xmm3; jb short 0x000000000016746d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x000000001675a9: movaps [rdi-0x30], xmm3; jb short 0x00000000001675bd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000168d29: movaps [rdi-0x30], xmm3; jb short 0x0000000000168d3d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000168e79: movaps [rdi-0x30], xmm3; jb short 0x0000000000168e8d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000168fc9: movaps [rdi-0x30], xmm3; jb short 0x0000000000168fdd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000169119: movaps [rdi-0x30], xmm3; jb short 0x000000000016912d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000169269: movaps [rdi-0x30], xmm3; jb short 0x000000000016927d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x000000001693b9: movaps [rdi-0x30], xmm3; jb short 0x00000000001693cd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000169509: movaps [rdi-0x30], xmm3; jb short 0x000000000016951d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000169657: movaps [rdi-0x30], xmm3; jb short 0x0000000000169670; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x000000001697a9: movaps [rdi-0x30], xmm3; jb short 0x00000000001697bd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x000000001698f9: movaps [rdi-0x30], xmm3; jb short 0x000000000016990d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000169a49: movaps [rdi-0x30], xmm3; jb short 0x0000000000169a5d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000169b99: movaps [rdi-0x30], xmm3; jb short 0x0000000000169bad; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000169ce9: movaps [rdi-0x30], xmm3; jb short 0x0000000000169cfd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000169e39: movaps [rdi-0x30], xmm3; jb short 0x0000000000169e4d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000169f89: movaps [rdi-0x30], xmm3; jb short 0x0000000000169f9d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x000000001663fd: movaps [rdi], xmm4; notrack jmp r9; 
0x0000000011f0cc: movaps [rsp+0x10], xmm0; syscall; 
0x0000000015175c: movaps [rsp+0x20], xmm0; call qword ptr [rax+0x28]; 
0x00000000152f16: movaps [rsp+0x30], xmm0; push 0x0; push 0x3c; lea r9, [rsp+0x3a]; call qword ptr [rax]; 
0x0000000014726b: movaps [rsp+0x30], xmm0; push qword ptr [rip+0x758e2]; push qword ptr [rip+0x758d4]; lea r9, [rsp+0x2c]; call qword ptr [rax]; 
0x00000000147128: movaps [rsp+0x30], xmm0; push qword ptr [rip+0x75a25]; push qword ptr [rip+0x75a17]; lea r9, [rsp+0x2c]; call qword ptr [rax]; 
0x00000000152cc2: movaps [rsp+0x30], xmm0; push r13; push r12; lea r9, [rsp+0x3a]; call qword ptr [rax]; 
0x00000000157a04: movaps [rsp+0x60], xmm1; movups [rsp+0x18], xmm0; call r8; 
0x000000001579fb: movaps [rsp+0x70], xmm0; pxor xmm0, xmm0; movaps [rsp+0x60], xmm1; movups [rsp+0x18], xmm0; call r8; 
0x00000000042fd8: movaps [rsp+0xc0], xmm0; movaps [rsp+0xd0], xmm0; movaps [rsp+0xe0], xmm0; movaps [rsp+0xf0], xmm0; syscall; 
0x00000000042fe0: movaps [rsp+0xd0], xmm0; movaps [rsp+0xe0], xmm0; movaps [rsp+0xf0], xmm0; syscall; 
0x00000000042fe8: movaps [rsp+0xe0], xmm0; movaps [rsp+0xf0], xmm0; syscall; 
0x00000000042ff0: movaps [rsp+0xf0], xmm0; syscall; 
0x0000000014911c: movaps [rsp], xmm0; call qword ptr [rax+0x8]; 
0x00000000042135: movaps xmm0, xmm1; ret; 
0x000000001662ea: movaps xmm1, [rsi-0x1]; jb short 0x00000000001662f7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016639a: movaps xmm1, [rsi-0x1]; jb short 0x00000000001663a7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000168cca: movaps xmm1, [rsi-0x1]; jb short 0x0000000000168cd7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000168d7a: movaps xmm1, [rsi-0x1]; jb short 0x0000000000168d87; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016643a: movaps xmm1, [rsi-0x2]; jb short 0x0000000000166447; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001664ea: movaps xmm1, [rsi-0x2]; jb short 0x00000000001664f7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000168e1a: movaps xmm1, [rsi-0x2]; jb short 0x0000000000168e27; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000168eca: movaps xmm1, [rsi-0x2]; jb short 0x0000000000168ed7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016658a: movaps xmm1, [rsi-0x3]; jb short 0x0000000000166597; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016663a: movaps xmm1, [rsi-0x3]; jb short 0x0000000000166647; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000168f6a: movaps xmm1, [rsi-0x3]; jb short 0x0000000000168f77; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016901a: movaps xmm1, [rsi-0x3]; jb short 0x0000000000169027; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001666da: movaps xmm1, [rsi-0x4]; jb short 0x00000000001666e7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016678a: movaps xmm1, [rsi-0x4]; jb short 0x0000000000166797; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001690ba: movaps xmm1, [rsi-0x4]; jb short 0x00000000001690c7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016916a: movaps xmm1, [rsi-0x4]; jb short 0x0000000000169177; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016682a: movaps xmm1, [rsi-0x5]; jb short 0x0000000000166837; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001668da: movaps xmm1, [rsi-0x5]; jb short 0x00000000001668e7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016920a: movaps xmm1, [rsi-0x5]; jb short 0x0000000000169217; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001692ba: movaps xmm1, [rsi-0x5]; jb short 0x00000000001692c7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016697a: movaps xmm1, [rsi-0x6]; jb short 0x0000000000166987; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000166a2a: movaps xmm1, [rsi-0x6]; jb short 0x0000000000166a37; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016935a: movaps xmm1, [rsi-0x6]; jb short 0x0000000000169367; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016940a: movaps xmm1, [rsi-0x6]; jb short 0x0000000000169417; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000166aca: movaps xmm1, [rsi-0x7]; jb short 0x0000000000166ad7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000166b7a: movaps xmm1, [rsi-0x7]; jb short 0x0000000000166b87; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001694aa: movaps xmm1, [rsi-0x7]; jb short 0x00000000001694b7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016955a: movaps xmm1, [rsi-0x7]; jb short 0x0000000000169567; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000166c1a: movaps xmm1, [rsi-0x8]; jb short 0x0000000000166c27; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000166cca: movaps xmm1, [rsi-0x8]; jb short 0x0000000000166cd7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001695fa: movaps xmm1, [rsi-0x8]; jb short 0x0000000000169607; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001696aa: movaps xmm1, [rsi-0x8]; jb short 0x00000000001696b7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000166d6a: movaps xmm1, [rsi-0x9]; jb short 0x0000000000166d77; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000166e1a: movaps xmm1, [rsi-0x9]; jb short 0x0000000000166e27; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016974a: movaps xmm1, [rsi-0x9]; jb short 0x0000000000169757; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001697fa: movaps xmm1, [rsi-0x9]; jb short 0x0000000000169807; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000166eba: movaps xmm1, [rsi-0xa]; jb short 0x0000000000166ec7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000166f6a: movaps xmm1, [rsi-0xa]; jb short 0x0000000000166f77; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016989a: movaps xmm1, [rsi-0xa]; jb short 0x00000000001698a7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016994a: movaps xmm1, [rsi-0xa]; jb short 0x0000000000169957; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016700a: movaps xmm1, [rsi-0xb]; jb short 0x0000000000167017; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001670ba: movaps xmm1, [rsi-0xb]; jb short 0x00000000001670c7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001699ea: movaps xmm1, [rsi-0xb]; jb short 0x00000000001699f7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000169a9a: movaps xmm1, [rsi-0xb]; jb short 0x0000000000169aa7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016715a: movaps xmm1, [rsi-0xc]; jb short 0x0000000000167167; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016720a: movaps xmm1, [rsi-0xc]; jb short 0x0000000000167217; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000169b3a: movaps xmm1, [rsi-0xc]; jb short 0x0000000000169b47; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000169bea: movaps xmm1, [rsi-0xc]; jb short 0x0000000000169bf7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001672aa: movaps xmm1, [rsi-0xd]; jb short 0x00000000001672b7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016735a: movaps xmm1, [rsi-0xd]; jb short 0x0000000000167367; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000169c8a: movaps xmm1, [rsi-0xd]; jb short 0x0000000000169c97; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000169d3a: movaps xmm1, [rsi-0xd]; jb short 0x0000000000169d47; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001673fa: movaps xmm1, [rsi-0xe]; jb short 0x0000000000167407; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001674aa: movaps xmm1, [rsi-0xe]; jb short 0x00000000001674b7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000169dda: movaps xmm1, [rsi-0xe]; jb short 0x0000000000169de7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000169e8a: movaps xmm1, [rsi-0xe]; jb short 0x0000000000169e97; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016754a: movaps xmm1, [rsi-0xf]; jb short 0x0000000000167557; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001675fa: movaps xmm1, [rsi-0xf]; jb short 0x0000000000167607; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000169f2a: movaps xmm1, [rsi-0xf]; jb short 0x0000000000169f37; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000169fda: movaps xmm1, [rsi-0xf]; jb short 0x0000000000169fe7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000000422c5: movd eax, mm0; and eax, 0x7f800000; sub eax, 0x7f800000; shr eax, 0x1f; ret; 
0x00000000041f10: movd eax, mm0; and rax, rdx; sub rax, rdx; shr rax, 0x3f; ret; 
0x000000000422c4: movd eax, xmm0; and eax, 0x7f800000; sub eax, 0x7f800000; shr eax, 0x1f; ret; 
0x00000000041ef0: movd edx, mm0; btr rdx, 0x3f; sub rax, rdx; shr rax, 0x3f; ret; 
0x00000000116daa: movd mm0, eax; movq xmm1, rsi; punpcklqdq xmm0, xmm1; movups [rdi], xmm0; ret; 
0x0000000004211a: movd mm0, eax; mulsd xmm0, [rip+0x17abcb]; ret; 
0x0000000004247f: movd mm0, eax; mulss xmm0, [rip+0x17af06]; ret; 
0x0000000004219f: movd mm0, eax; ret; 
0x00000000042426: movd mm0, ecx; andps xmm0, [rip+0x17a300]; orps xmm0, [rip+0x17a2e9]; mulss xmm0, [rip+0x17af49]; ret; 
0x00000000042401: movd mm0, ecx; andps xmm0, [rip+0x17a325]; orps xmm0, [rip+0x17a32e]; mulss xmm0, [rip+0x17af72]; ret; 
0x00000000042076: movd mm0, ecx; ret; 
0x00000000042349: movd mm0, edx; mov [rdi], edx; subss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x00000000041f90: movd mm0, edx; ret; 
0x00000000042338: movd mm0, esi; ret; 
0x00000000041fe0: movd mm1, eax; mov [rdi], rax; subsd xmm0, xmm1; ret; 
0x00000000149111: movd mm1, eax; mov rax, [rdi+0x8]; punpcklqdq xmm0, xmm1; movaps [rsp], xmm0; call qword ptr [rax+0x8]; 
0x00000000116daf: movd mm1, esi; punpcklqdq xmm0, xmm1; movups [rdi], xmm0; ret; 
0x000000000271a3: movd mm3, eax; punpckldq xmm1, xmm3; punpcklqdq xmm0, xmm1; movups [rdx+0x48], xmm0; ret; 
0x0000000004247e: movd xmm0, eax; mulss xmm0, [rip+0x17af06]; ret; 
0x000000000424fb: movd xmm0, eax; ret; 
0x00000000042424: movd xmm0, ecx; andps xmm0, [rip+0x17a300]; orps xmm0, [rip+0x17a2e9]; mulss xmm0, [rip+0x17af49]; ret; 
0x00000000042400: movd xmm0, ecx; andps xmm0, [rip+0x17a325]; orps xmm0, [rip+0x17a32e]; mulss xmm0, [rip+0x17af72]; ret; 
0x00000000042348: movd xmm0, edx; mov [rdi], edx; subss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x00000000042337: movd xmm0, esi; ret; 
0x000000000271a2: movd xmm3, eax; punpckldq xmm1, xmm3; punpcklqdq xmm0, xmm1; movups [rdx+0x48], xmm0; ret; 
0x000000000bc045: movdqa [rcx+0x30], xmm0; add rcx, 0x40; cmp rdx, rcx; jne short 0x00000000000bc037; rep ret; 
0x00000000151754: movdqa xmm0, [rip+0x6b534]; movaps [rsp+0x20], xmm0; call qword ptr [rax+0x28]; 
0x0000000005b151: movdqa xmm0, [rsp-0x18]; pinsrw xmm0, eax, 0x6; ret; 
0x00000000042a20: movdqa xmm0, [rsp]; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x00000000042b66: movdqa xmm0, xmm2; mov dword ptr fs:[rax], 0x22; add rsp, 0x20; pop rbp; ret; 
0x00000000042ae4: movdqa xmm0, xmm2; pop rbp; ret; 
0x00000000042adc: movdqa xmm2, xmm0; add rsp, 0x20; movdqa xmm0, xmm2; pop rbp; ret; 
0x0000000016a04c: movdqu [r8], xmm0; lea r11, [rip+0x538e7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169efc: movdqu [r8], xmm0; lea r11, [rip+0x53a37]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169dac: movdqu [r8], xmm0; lea r11, [rip+0x53b87]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169c5c: movdqu [r8], xmm0; lea r11, [rip+0x53cd7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169b0c: movdqu [r8], xmm0; lea r11, [rip+0x53e27]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001699bc: movdqu [r8], xmm0; lea r11, [rip+0x53f77]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016986c: movdqu [r8], xmm0; lea r11, [rip+0x540c7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016971c: movdqu [r8], xmm0; lea r11, [rip+0x54217]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169682: movdqu [r8], xmm0; lea r11, [rip+0x542b2]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001695cc: movdqu [r8], xmm0; lea r11, [rip+0x54367]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016947c: movdqu [r8], xmm0; lea r11, [rip+0x544b7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016932c: movdqu [r8], xmm0; lea r11, [rip+0x54607]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001691dc: movdqu [r8], xmm0; lea r11, [rip+0x54757]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016908c: movdqu [r8], xmm0; lea r11, [rip+0x548a7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168f3c: movdqu [r8], xmm0; lea r11, [rip+0x549f7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168dec: movdqu [r8], xmm0; lea r11, [rip+0x54b47]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016766c: movdqu [r8], xmm0; lea r11, [rip+0x56107]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016751c: movdqu [r8], xmm0; lea r11, [rip+0x56257]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001673cc: movdqu [r8], xmm0; lea r11, [rip+0x563a7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016727c: movdqu [r8], xmm0; lea r11, [rip+0x564f7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016712c: movdqu [r8], xmm0; lea r11, [rip+0x56647]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166fdc: movdqu [r8], xmm0; lea r11, [rip+0x56797]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166e8c: movdqu [r8], xmm0; lea r11, [rip+0x568e7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166d3c: movdqu [r8], xmm0; lea r11, [rip+0x56a37]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166ca2: movdqu [r8], xmm0; lea r11, [rip+0x56ad2]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166bec: movdqu [r8], xmm0; lea r11, [rip+0x56b87]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166a9c: movdqu [r8], xmm0; lea r11, [rip+0x56cd7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016694c: movdqu [r8], xmm0; lea r11, [rip+0x56e27]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001667fc: movdqu [r8], xmm0; lea r11, [rip+0x56f77]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001666ac: movdqu [r8], xmm0; lea r11, [rip+0x570c7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016655c: movdqu [r8], xmm0; lea r11, [rip+0x57217]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016640c: movdqu [r8], xmm0; lea r11, [rip+0x57367]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016d771: movdqu [rdi+0x10], xmm0; lddqu xmm0, [rsi]; movdqu [rdi], xmm0; ret; 
0x000000000bbfe6: movdqu [rdi+0x10], xmm0; movdqu [rdi+rdx-0x10], xmm0; movdqu [rdi+rdx-0x20], xmm0; ret; 
0x000000000b880d: movdqu [rdi+0x10], xmm2; lea rax, [rdi+0x1f]; ret; 
0x000000000b967d: movdqu [rdi+0x10], xmm2; lea rax, [rdi+0x20]; ret; 
0x000000000b7e50: movdqu [rdi+0x10], xmm2; mov [rdi+0x20], cl; ret; 
0x000000000bb300: movdqu [rdi+0x10], xmm2; mov [rdi+0x20], cl; xor ch, ch; mov [rdi+0x21], ch; ret; 
0x000000000b713d: movdqu [rdi+0x10], xmm2; ret; 
0x000000000b7b3d: movdqu [rdi+0x10], xmm2; sub r8, 0x20; lea rdi, [rdi+0x20]; jne 0x00000000000b7fa0; ret; 
0x000000000bb2dd: movdqu [rdi+0x10], xmm2; xor ch, ch; mov [rdi+0x20], ch; ret; 
0x0000000016ddef: movdqu [rdi+0x1], xmm0; movdqu [rdi], xmm1; ret; 
0x000000000b8094: movdqu [rdi+0x20], xmm6; sub r8, 0x10; jb 0x00000000000b7649; movdqu [rdi+0x30], xmm7; ret; 
0x0000000016dd7f: movdqu [rdi+0x2], xmm0; movdqu [rdi], xmm1; ret; 
0x000000000b98f3: movdqu [rdi+0x30], xmm7; lea rax, [rdi+0x40]; ret; 
0x000000000b80a3: movdqu [rdi+0x30], xmm7; ret; 
0x000000000bb353: movdqu [rdi+0x30], xmm7; xor ch, ch; mov [rdi+0x40], ch; ret; 
0x0000000016dd0f: movdqu [rdi+0x3], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000016dc9f: movdqu [rdi+0x4], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000016dc2f: movdqu [rdi+0x5], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000016dbbf: movdqu [rdi+0x6], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000016db4f: movdqu [rdi+0x7], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000016dadf: movdqu [rdi+0x8], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000016da6f: movdqu [rdi+0x9], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000016d9ff: movdqu [rdi+0xa], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000016d98f: movdqu [rdi+0xb], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000016d91f: movdqu [rdi+0xc], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000016d8af: movdqu [rdi+0xd], xmm0; movdqu [rdi], xmm1; ret; 
0x000000000b87ad: movdqu [rdi+0xd], xmm2; lea rax, [rdi+0x1c]; ret; 
0x000000000b961d: movdqu [rdi+0xd], xmm2; lea rax, [rdi+0x1d]; ret; 
0x000000000b70dd: movdqu [rdi+0xd], xmm2; ret; 
0x000000000b7aad: movdqu [rdi+0xd], xmm2; sub r8, 0x1d; lea rdi, [rdi+0x1d]; jne 0x00000000000b7fa0; ret; 
0x000000000bb27d: movdqu [rdi+0xd], xmm2; xor ch, ch; mov [rdi+0x1d], ch; ret; 
0x0000000016d83f: movdqu [rdi+0xe], xmm0; movdqu [rdi], xmm1; ret; 
0x000000000b87cd: movdqu [rdi+0xe], xmm2; lea rax, [rdi+0x1d]; ret; 
0x000000000b963d: movdqu [rdi+0xe], xmm2; lea rax, [rdi+0x1e]; ret; 
0x000000000b70fd: movdqu [rdi+0xe], xmm2; ret; 
0x000000000b7add: movdqu [rdi+0xe], xmm2; sub r8, 0x1e; lea rdi, [rdi+0x1e]; jne 0x00000000000b7fa0; ret; 
0x000000000bb29d: movdqu [rdi+0xe], xmm2; xor ch, ch; mov [rdi+0x1e], ch; ret; 
0x0000000016d7cf: movdqu [rdi+0xf], xmm0; movdqu [rdi], xmm1; ret; 
0x000000000b87ed: movdqu [rdi+0xf], xmm2; lea rax, [rdi+0x1e]; ret; 
0x000000000b965d: movdqu [rdi+0xf], xmm2; lea rax, [rdi+0x1f]; ret; 
0x000000000b711d: movdqu [rdi+0xf], xmm2; ret; 
0x000000000b7b0d: movdqu [rdi+0xf], xmm2; sub r8, 0x1f; lea rdi, [rdi+0x1f]; jne 0x00000000000b7fa0; ret; 
0x000000000bb2bd: movdqu [rdi+0xf], xmm2; xor ch, ch; mov [rdi+0x1f], ch; ret; 
0x000000000bbfeb: movdqu [rdi+rdx-0x10], xmm0; movdqu [rdi+rdx-0x20], xmm0; ret; 
0x000000000bbf4c: movdqu [rdi+rdx-0x10], xmm0; movdqu [rdi], xmm0; ret; 
0x000000000bbff1: movdqu [rdi+rdx-0x20], xmm0; ret; 
0x0000000016cf5b: movdqu [rdi-0x10], xmm0; ret; 
0x0000000016cfcb: movdqu [rdi-0x10], xmm1; ret; 
0x0000000016d706: movdqu [rdi-0x11], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000016d686: movdqu [rdi-0x12], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000016d5f6: movdqu [rdi-0x13], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000016d576: movdqu [rdi-0x14], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000016d4f6: movdqu [rdi-0x15], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000016d476: movdqu [rdi-0x16], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000016d3f6: movdqu [rdi-0x17], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000016d376: movdqu [rdi-0x18], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000016d2f6: movdqu [rdi-0x19], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x000000000b7f50: movdqu [rdi-0x1], xmm0; ret; 
0x0000000016d276: movdqu [rdi-0x1a], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000016d1f6: movdqu [rdi-0x1b], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000016d176: movdqu [rdi-0x1c], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000016d0e6: movdqu [rdi-0x1d], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000016d056: movdqu [rdi-0x1e], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000016cfc6: movdqu [rdi-0x1f], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000016cf51: movdqu [rdi-0x20], xmm0; lddqu xmm0, [rsi-0x10]; movdqu [rdi-0x10], xmm0; ret; 
0x000000000b9484: movdqu [rdi], xmm0; lea rax, [rdi+0x10]; ret; 
0x000000000b8624: movdqu [rdi], xmm0; lea rax, [rdi+0xf]; ret; 
0x000000000b9497: movdqu [rdi], xmm0; mov [rdi+0x10], cl; lea rax, [rdi+0x11]; ret; 
0x000000000b7c77: movdqu [rdi], xmm0; mov [rdi+0x10], cl; ret; 
0x000000000bb0f7: movdqu [rdi], xmm0; mov [rdi+0x10], cl; xor ch, ch; mov [rdi+0x11], ch; ret; 
0x000000000b8648: movdqu [rdi], xmm0; mov [rdi+0x10], cx; lea rax, [rdi+0x11]; ret; 
0x000000000b94b8: movdqu [rdi], xmm0; mov [rdi+0x10], cx; lea rax, [rdi+0x12]; ret; 
0x000000000b6f98: movdqu [rdi], xmm0; mov [rdi+0x10], cx; ret; 
0x000000000bb118: movdqu [rdi], xmm0; mov [rdi+0x10], cx; xor ch, ch; mov [rdi+0x12], ch; ret; 
0x000000000b8634: movdqu [rdi], xmm0; mov [rdi+0x10], dh; lea rax, [rdi+0x10]; ret; 
0x000000000b6f84: movdqu [rdi], xmm0; mov [rdi+0x10], dh; ret; 
0x000000000b8687: movdqu [rdi], xmm0; mov [rdi+0x10], ecx; lea rax, [rdi+0x13]; ret; 
0x000000000b94f7: movdqu [rdi], xmm0; mov [rdi+0x10], ecx; lea rax, [rdi+0x14]; ret; 
0x000000000b86a7: movdqu [rdi], xmm0; mov [rdi+0x10], ecx; mov [rdi+0x14], dh; lea rax, [rdi+0x14]; ret; 
0x000000000b6fd7: movdqu [rdi], xmm0; mov [rdi+0x10], ecx; mov [rdi+0x14], dh; ret; 
0x000000000b951a: movdqu [rdi], xmm0; mov [rdi+0x10], ecx; mov [rdi+0x14], dl; lea rax, [rdi+0x15]; ret; 
0x000000000b7cca: movdqu [rdi], xmm0; mov [rdi+0x10], ecx; mov [rdi+0x14], dl; ret; 
0x000000000b6fc7: movdqu [rdi], xmm0; mov [rdi+0x10], ecx; ret; 
0x000000000bb157: movdqu [rdi], xmm0; mov [rdi+0x10], ecx; xor ch, ch; mov [rdi+0x14], ch; ret; 
0x000000000b8708: movdqu [rdi], xmm0; mov [rdi+0x10], rcx; lea rax, [rdi+0x17]; ret; 
0x000000000b9578: movdqu [rdi], xmm0; mov [rdi+0x10], rcx; lea rax, [rdi+0x18]; ret; 
0x000000000b8728: movdqu [rdi], xmm0; mov [rdi+0x10], rcx; mov [rdi+0x18], dh; lea rax, [rdi+0x18]; ret; 
0x000000000b7058: movdqu [rdi], xmm0; mov [rdi+0x10], rcx; mov [rdi+0x18], dh; ret; 
0x000000000b7038: movdqu [rdi], xmm0; mov [rdi+0x10], rcx; ret; 
0x000000000bb1d8: movdqu [rdi], xmm0; mov [rdi+0x10], rcx; xor ch, ch; mov [rdi+0x18], ch; ret; 
0x000000000b876b: movdqu [rdi], xmm0; mov [rdi+0x10], rdx; mov [rdi+0x17], ecx; lea rax, [rdi+0x1a]; ret; 
0x000000000b95db: movdqu [rdi], xmm0; mov [rdi+0x10], rdx; mov [rdi+0x17], ecx; lea rax, [rdi+0x1b]; ret; 
0x000000000b709b: movdqu [rdi], xmm0; mov [rdi+0x10], rdx; mov [rdi+0x17], ecx; ret; 
0x000000000b959b: movdqu [rdi], xmm0; mov [rdi+0x10], rdx; mov [rdi+0x18], cl; lea rax, [rdi+0x19]; ret; 
0x000000000b7d4b: movdqu [rdi], xmm0; mov [rdi+0x10], rdx; mov [rdi+0x18], cl; ret; 
0x000000000b874c: movdqu [rdi], xmm0; mov [rdi+0x10], rdx; mov [rdi+0x18], cx; lea rax, [rdi+0x19]; ret; 
0x000000000b95bc: movdqu [rdi], xmm0; mov [rdi+0x10], rdx; mov [rdi+0x18], cx; lea rax, [rdi+0x1a]; ret; 
0x000000000b707c: movdqu [rdi], xmm0; mov [rdi+0x10], rdx; mov [rdi+0x18], cx; ret; 
0x000000000b878b: movdqu [rdi], xmm0; mov [rdi+0x10], rdx; mov [rdi+0x18], ecx; lea rax, [rdi+0x1b]; ret; 
0x000000000b95fb: movdqu [rdi], xmm0; mov [rdi+0x10], rdx; mov [rdi+0x18], ecx; lea rax, [rdi+0x1c]; ret; 
0x000000000b70bb: movdqu [rdi], xmm0; mov [rdi+0x10], rdx; mov [rdi+0x18], ecx; ret; 
0x000000000b86c8: movdqu [rdi], xmm0; mov [rdi+0xe], rcx; lea rax, [rdi+0x15]; ret; 
0x000000000b9538: movdqu [rdi], xmm0; mov [rdi+0xe], rcx; lea rax, [rdi+0x16]; ret; 
0x000000000b6ff8: movdqu [rdi], xmm0; mov [rdi+0xe], rcx; ret; 
0x000000000bb198: movdqu [rdi], xmm0; mov [rdi+0xe], rcx; xor ch, ch; mov [rdi+0x16], ch; ret; 
0x000000000b8667: movdqu [rdi], xmm0; mov [rdi+0xf], ecx; lea rax, [rdi+0x12]; ret; 
0x000000000b94d7: movdqu [rdi], xmm0; mov [rdi+0xf], ecx; lea rax, [rdi+0x13]; ret; 
0x000000000b6fb7: movdqu [rdi], xmm0; mov [rdi+0xf], ecx; ret; 
0x000000000bb137: movdqu [rdi], xmm0; mov [rdi+0xf], ecx; xor ch, ch; mov [rdi+0x13], ch; ret; 
0x000000000b86e8: movdqu [rdi], xmm0; mov [rdi+0xf], rcx; lea rax, [rdi+0x16]; ret; 
0x000000000b9558: movdqu [rdi], xmm0; mov [rdi+0xf], rcx; lea rax, [rdi+0x17]; ret; 
0x000000000b7018: movdqu [rdi], xmm0; mov [rdi+0xf], rcx; ret; 
0x000000000bb1b8: movdqu [rdi], xmm0; mov [rdi+0xf], rcx; xor ch, ch; mov [rdi+0x17], ch; ret; 
0x000000000bbfe2: movdqu [rdi], xmm0; movdqu [rdi+0x10], xmm0; movdqu [rdi+rdx-0x10], xmm0; movdqu [rdi+rdx-0x20], xmm0; ret; 
0x000000000b8809: movdqu [rdi], xmm0; movdqu [rdi+0x10], xmm2; lea rax, [rdi+0x1f]; ret; 
0x000000000b9679: movdqu [rdi], xmm0; movdqu [rdi+0x10], xmm2; lea rax, [rdi+0x20]; ret; 
0x000000000b7e4c: movdqu [rdi], xmm0; movdqu [rdi+0x10], xmm2; mov [rdi+0x20], cl; ret; 
0x000000000b7139: movdqu [rdi], xmm0; movdqu [rdi+0x10], xmm2; ret; 
0x000000000bb2d9: movdqu [rdi], xmm0; movdqu [rdi+0x10], xmm2; xor ch, ch; mov [rdi+0x20], ch; ret; 
0x000000000b87a9: movdqu [rdi], xmm0; movdqu [rdi+0xd], xmm2; lea rax, [rdi+0x1c]; ret; 
0x000000000b9619: movdqu [rdi], xmm0; movdqu [rdi+0xd], xmm2; lea rax, [rdi+0x1d]; ret; 
0x000000000b70d9: movdqu [rdi], xmm0; movdqu [rdi+0xd], xmm2; ret; 
0x000000000bb279: movdqu [rdi], xmm0; movdqu [rdi+0xd], xmm2; xor ch, ch; mov [rdi+0x1d], ch; ret; 
0x000000000b87c9: movdqu [rdi], xmm0; movdqu [rdi+0xe], xmm2; lea rax, [rdi+0x1d]; ret; 
0x000000000b9639: movdqu [rdi], xmm0; movdqu [rdi+0xe], xmm2; lea rax, [rdi+0x1e]; ret; 
0x000000000b70f9: movdqu [rdi], xmm0; movdqu [rdi+0xe], xmm2; ret; 
0x000000000bb299: movdqu [rdi], xmm0; movdqu [rdi+0xe], xmm2; xor ch, ch; mov [rdi+0x1e], ch; ret; 
0x000000000b87e9: movdqu [rdi], xmm0; movdqu [rdi+0xf], xmm2; lea rax, [rdi+0x1e]; ret; 
0x000000000b9659: movdqu [rdi], xmm0; movdqu [rdi+0xf], xmm2; lea rax, [rdi+0x1f]; ret; 
0x000000000b7119: movdqu [rdi], xmm0; movdqu [rdi+0xf], xmm2; ret; 
0x000000000bb2b9: movdqu [rdi], xmm0; movdqu [rdi+0xf], xmm2; xor ch, ch; mov [rdi+0x1f], ch; ret; 
0x000000000b6f74: movdqu [rdi], xmm0; ret; 
0x000000000b78c4: movdqu [rdi], xmm0; sub r8, 0x10; lea rdi, [rdi+0x10]; jne 0x00000000000b7fa0; ret; 
0x000000000bb0e4: movdqu [rdi], xmm0; xor ch, ch; mov [rdi+0x10], ch; ret; 
0x0000000016d7d4: movdqu [rdi], xmm1; ret; 
0x0000000014fce8: movdqu xmm0, [rax+0x30]; movups [rsi], xmm0; mov rax, [rax+0x40]; mov [rsi+0x10], rax; ret; 
0x00000000150628: movdqu xmm0, [rax+0x40]; movups [rsi], xmm0; mov rax, [rax+0x50]; mov [rsi+0x10], rax; ret; 
0x0000000014cea8: movdqu xmm0, [rax+0x90]; movups [rsi], xmm0; mov rax, [rax+0xa0]; mov [rsi+0x10], rax; ret; 
0x000000001481fa: movdqu xmm0, [rdi+0x38]; mov dword ptr [rsi], 0x9; movups [rsi+0x8], xmm0; ret; 
0x0000000014fdb8: movdqu xmm0, [rdx]; mov eax, esi; mov dword ptr [r8+0x18], 0x1; movups [r8+0x8], xmm0; ret; 
0x000000001506b0: movdqu xmm0, [rdx]; mov eax, esi; movups [r8+0x30], xmm0; ret; 
0x0000000014cf88: movdqu xmm0, [rdx]; mov eax, esi; movups [r8+0x8], xmm0; ret; 
0x000000000b7c70: movdqu xmm0, [rsi]; mov cl, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], cl; ret; 
0x000000000b6f90: movdqu xmm0, [rsi]; mov cx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], cx; ret; 
0x000000000b6fc0: movdqu xmm0, [rsi]; mov ecx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], ecx; ret; 
0x000000000b6fb0: movdqu xmm0, [rsi]; mov ecx, [rsi+0xf]; movdqu [rdi], xmm0; mov [rdi+0xf], ecx; ret; 
0x000000000b7030: movdqu xmm0, [rsi]; mov rcx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], rcx; ret; 
0x000000000b6ff0: movdqu xmm0, [rsi]; mov rcx, [rsi+0xe]; movdqu [rdi], xmm0; mov [rdi+0xe], rcx; ret; 
0x000000000b7010: movdqu xmm0, [rsi]; mov rcx, [rsi+0xf]; movdqu [rdi], xmm0; mov [rdi+0xf], rcx; ret; 
0x000000000b9480: movdqu xmm0, [rsi]; movdqu [rdi], xmm0; lea rax, [rdi+0x10]; ret; 
0x000000000b8620: movdqu xmm0, [rsi]; movdqu [rdi], xmm0; lea rax, [rdi+0xf]; ret; 
0x000000000b8630: movdqu xmm0, [rsi]; movdqu [rdi], xmm0; mov [rdi+0x10], dh; lea rax, [rdi+0x10]; ret; 
0x000000000b6f80: movdqu xmm0, [rsi]; movdqu [rdi], xmm0; mov [rdi+0x10], dh; ret; 
0x000000000b6f70: movdqu xmm0, [rsi]; movdqu [rdi], xmm0; ret; 
0x000000000bb0e0: movdqu xmm0, [rsi]; movdqu [rdi], xmm0; xor ch, ch; mov [rdi+0x10], ch; ret; 
0x000000000b7130: movdqu xmm0, [rsi]; movdqu xmm2, [rsi+0x10]; movdqu [rdi], xmm0; movdqu [rdi+0x10], xmm2; ret; 
0x000000000b70d0: movdqu xmm0, [rsi]; movdqu xmm2, [rsi+0xd]; movdqu [rdi], xmm0; movdqu [rdi+0xd], xmm2; ret; 
0x000000000b70f0: movdqu xmm0, [rsi]; movdqu xmm2, [rsi+0xe]; movdqu [rdi], xmm0; movdqu [rdi+0xe], xmm2; ret; 
0x000000000b7110: movdqu xmm0, [rsi]; movdqu xmm2, [rsi+0xf]; movdqu [rdi], xmm0; movdqu [rdi+0xf], xmm2; ret; 
0x0000000013c64f: movdqu xmm0, [rsi]; movups [rdi+rdx+0x8], xmm0; ret; 
0x000000001506c0: movdqu xmm1, [r8+0x30]; mov eax, 0x1; movups [rdx], xmm1; ret; 
0x0000000014cf98: movdqu xmm1, [r8+0x8]; mov eax, 0x1; movups [rdx], xmm1; ret; 
0x0000000012c6e2: movdqu xmm1, [rbx-0x18]; mov [rbp-0x80], edx; mov rdx, r15; movups [rbp-0x78], xmm1; call rax; 
0x00000000148240: movdqu xmm1, [rdi+0x20]; mov dword ptr [rsi], 0x6; movups [rsi+0x8], xmm1; ret; 
0x0000000014fde0: movdqu xmm2, [r8+0x1c]; mov eax, 0x1; movups [rdx], xmm2; ret; 
0x0000000012c30b: movdqu xmm2, [rbx+0x30]; mov [rbp-0x80], eax; movups [rbp-0x78], xmm2; call rcx; 
0x000000001506e0: movdqu xmm2, [rdx]; mov eax, 0x1; movups [r8+0x20], xmm2; ret; 
0x000000000b8804: movdqu xmm2, [rsi+0x10]; movdqu [rdi], xmm0; movdqu [rdi+0x10], xmm2; lea rax, [rdi+0x1f]; ret; 
0x000000000b9674: movdqu xmm2, [rsi+0x10]; movdqu [rdi], xmm0; movdqu [rdi+0x10], xmm2; lea rax, [rdi+0x20]; ret; 
0x000000000b7134: movdqu xmm2, [rsi+0x10]; movdqu [rdi], xmm0; movdqu [rdi+0x10], xmm2; ret; 
0x000000000b87a4: movdqu xmm2, [rsi+0xd]; movdqu [rdi], xmm0; movdqu [rdi+0xd], xmm2; lea rax, [rdi+0x1c]; ret; 
0x000000000b9614: movdqu xmm2, [rsi+0xd]; movdqu [rdi], xmm0; movdqu [rdi+0xd], xmm2; lea rax, [rdi+0x1d]; ret; 
0x000000000b70d4: movdqu xmm2, [rsi+0xd]; movdqu [rdi], xmm0; movdqu [rdi+0xd], xmm2; ret; 
0x000000000b87c4: movdqu xmm2, [rsi+0xe]; movdqu [rdi], xmm0; movdqu [rdi+0xe], xmm2; lea rax, [rdi+0x1d]; ret; 
0x000000000b9634: movdqu xmm2, [rsi+0xe]; movdqu [rdi], xmm0; movdqu [rdi+0xe], xmm2; lea rax, [rdi+0x1e]; ret; 
0x000000000b70f4: movdqu xmm2, [rsi+0xe]; movdqu [rdi], xmm0; movdqu [rdi+0xe], xmm2; ret; 
0x000000000b87e4: movdqu xmm2, [rsi+0xf]; movdqu [rdi], xmm0; movdqu [rdi+0xf], xmm2; lea rax, [rdi+0x1e]; ret; 
0x000000000b9654: movdqu xmm2, [rsi+0xf]; movdqu [rdi], xmm0; movdqu [rdi+0xf], xmm2; lea rax, [rdi+0x1f]; ret; 
0x000000000b7114: movdqu xmm2, [rsi+0xf]; movdqu [rdi], xmm0; movdqu [rdi+0xf], xmm2; ret; 
0x000000001506f0: movdqu xmm3, [r8+0x20]; mov eax, 0x1; movups [rdx], xmm3; ret; 
0x0000000012c4b3: movdqu xmm3, [rbx+0x30]; mov [rbp-0x80], eax; movups [rbp-0x78], xmm3; call r9; 
0x000000001506d0: movdqu xmm4, [r8+0x8]; mov eax, 0x1; movups [rdx], xmm4; ret; 
0x0000000012c3fa: movdqu xmm4, [rbx+0x78]; mov [rbp-0x80], edx; mov rdx, r13; movups [rbp-0x78], xmm4; call rax; 
0x0000000012c394: movdqu xmm5, [r13-0x18]; mov [rbp-0x80], edx; mov rdx, r14; movups [rbp-0x78], xmm5; call rax; 
0x0000000012c90a: movdqu xmm6, [rbx+0x78]; mov [rbp-0x80], edx; mov rdx, r13; movups [rbp-0x78], xmm6; call rax; 
0x0000000010c71b: movdqu xmm6, [rdi+0x68]; movups [rsi+0x60], xmm6; movdqu xmm7, [rdi+0x78]; movups [rsi+0x70], xmm7; ret; 
0x0000000010d06d: movdqu xmm6, [rdi+0xe8]; movups [rsi+0x60], xmm6; movdqu xmm7, [rdi+0xf8]; movups [rsi+0x70], xmm7; ret; 
0x0000000010c76b: movdqu xmm6, [rsi+0x60]; movups [rdi+0x68], xmm6; movdqu xmm7, [rsi+0x70]; movups [rdi+0x78], xmm7; ret; 
0x0000000010d0fd: movdqu xmm6, [rsi+0x60]; movups [rdi+0xe8], xmm6; movdqu xmm7, [rsi+0x70]; movups [rdi+0xf8], xmm7; ret; 
0x0000000012c9d7: movdqu xmm7, [r14+0x30]; mov [rbp-0x80], edx; mov rdx, r13; movups [rbp-0x78], xmm7; call rax; 
0x0000000012ccee: movdqu xmm7, [rbx+0x78]; mov [rbp-0x80], edx; mov rdx, r13; movups [rbp-0x78], xmm7; call rax; 
0x0000000012c582: movdqu xmm7, [rbx-0x18]; mov dword ptr [rbp-0x80], 0x0; movups [rbp-0x78], xmm7; call rcx; 
0x0000000012cbc0: movdqu xmm7, [rcx+0x30]; mov [rbp-0x80], edx; mov rdx, r13; movups [rbp-0x78], xmm7; call rax; 
0x0000000010c724: movdqu xmm7, [rdi+0x78]; movups [rsi+0x70], xmm7; ret; 
0x0000000010d079: movdqu xmm7, [rdi+0xf8]; movups [rsi+0x70], xmm7; ret; 
0x0000000010c774: movdqu xmm7, [rsi+0x70]; movups [rdi+0x78], xmm7; ret; 
0x0000000010d109: movdqu xmm7, [rsi+0x70]; movups [rdi+0xf8], xmm7; ret; 
0x0000000008aeec: movhps xmm0, [rax]; mov dword ptr fs:[rax], 0x9; mov eax, 0xffffffff; ret; 
0x00000000057dcf: movhps xmm0, [rsp-0x18]; movups [rdi], xmm0; mov [rdx], eax; mov eax, 0x2; ret; 
0x000000000b3b52: movlpd [rdx+0x5], xmm1; mov rax, rdi; ret; 
0x000000000b3b72: movlpd [rdx+0x6], xmm1; mov rax, rdi; ret; 
0x000000000b3b92: movlpd [rdx+0x7], xmm1; mov rax, rdi; ret; 
0x000000000b39dc: movlpd [rdx+0x8], xmm1; mov rax, rdi; ret; 
0x000000000b67c3: movlpd [rdx+0x8], xmm1; xor ah, ah; mov [rdx+0x10], ah; mov rax, rdi; ret; 
0x000000000b3ac9: movlpd [rdx], xmm0; mov al, [rcx+0x8]; mov [rdx+0x8], al; mov rax, rdi; ret; 
0x000000000b3ae9: movlpd [rdx], xmm0; mov ax, [rcx+0x8]; mov [rdx+0x8], ax; mov rax, rdi; ret; 
0x000000000b3b09: movlpd [rdx], xmm0; mov eax, [rcx+0x7]; mov [rdx+0x7], eax; mov rax, rdi; ret; 
0x000000000b3b29: movlpd [rdx], xmm0; mov eax, [rcx+0x8]; mov [rdx+0x8], eax; mov rax, rdi; ret; 
0x000000000b3986: movlpd [rdx], xmm0; mov rax, rdi; ret; 
0x000000000b39d8: movlpd [rdx], xmm0; movlpd [rdx+0x8], xmm1; mov rax, rdi; ret; 
0x000000000b3b49: movlpd [rdx], xmm0; movlpd xmm1, [rcx+0x5]; movlpd [rdx+0x5], xmm1; mov rax, rdi; ret; 
0x000000000b3b69: movlpd [rdx], xmm0; movlpd xmm1, [rcx+0x6]; movlpd [rdx+0x6], xmm1; mov rax, rdi; ret; 
0x000000000b3b89: movlpd [rdx], xmm0; movlpd xmm1, [rcx+0x7]; movlpd [rdx+0x7], xmm1; mov rax, rdi; ret; 
0x000000000b66d9: movlpd [rdx], xmm0; movlpd xmm1, [rcx+0x8]; movlpd [rdx+0x8], xmm1; mov rax, rdi; ret; 
0x000000000b675a: movlpd [rdx], xmm0; xor ah, ah; mov [rdx+0x8], ah; mov rax, rdi; ret; 
0x000000000b3982: movlpd xmm0, [rcx]; movlpd [rdx], xmm0; mov rax, rdi; ret; 
0x000000000b3b4d: movlpd xmm1, [rcx+0x5]; movlpd [rdx+0x5], xmm1; mov rax, rdi; ret; 
0x000000000b3b6d: movlpd xmm1, [rcx+0x6]; movlpd [rdx+0x6], xmm1; mov rax, rdi; ret; 
0x000000000b3b8d: movlpd xmm1, [rcx+0x7]; movlpd [rdx+0x7], xmm1; mov rax, rdi; ret; 
0x000000000b66dd: movlpd xmm1, [rcx+0x8]; movlpd [rdx+0x8], xmm1; mov rax, rdi; ret; 
0x000000000b39d3: movlpd xmm1, [rcx+0x8]; movlpd [rdx], xmm0; movlpd [rdx+0x8], xmm1; mov rax, rdi; ret; 
0x000000000b3b53: movlps [rdx+0x5], xmm1; mov rax, rdi; ret; 
0x000000000b3b73: movlps [rdx+0x6], xmm1; mov rax, rdi; ret; 
0x000000000b3b93: movlps [rdx+0x7], xmm1; mov rax, rdi; ret; 
0x000000000b39dd: movlps [rdx+0x8], xmm1; mov rax, rdi; ret; 
0x000000000b67c4: movlps [rdx+0x8], xmm1; xor ah, ah; mov [rdx+0x10], ah; mov rax, rdi; ret; 
0x000000000b3aca: movlps [rdx], xmm0; mov al, [rcx+0x8]; mov [rdx+0x8], al; mov rax, rdi; ret; 
0x000000000b3aea: movlps [rdx], xmm0; mov ax, [rcx+0x8]; mov [rdx+0x8], ax; mov rax, rdi; ret; 
0x000000000b3b0a: movlps [rdx], xmm0; mov eax, [rcx+0x7]; mov [rdx+0x7], eax; mov rax, rdi; ret; 
0x000000000b3b2a: movlps [rdx], xmm0; mov eax, [rcx+0x8]; mov [rdx+0x8], eax; mov rax, rdi; ret; 
0x000000000b3987: movlps [rdx], xmm0; mov rax, rdi; ret; 
0x000000000b39d9: movlps [rdx], xmm0; movlpd [rdx+0x8], xmm1; mov rax, rdi; ret; 
0x000000000b3b4a: movlps [rdx], xmm0; movlpd xmm1, [rcx+0x5]; movlpd [rdx+0x5], xmm1; mov rax, rdi; ret; 
0x000000000b3b6a: movlps [rdx], xmm0; movlpd xmm1, [rcx+0x6]; movlpd [rdx+0x6], xmm1; mov rax, rdi; ret; 
0x000000000b3b8a: movlps [rdx], xmm0; movlpd xmm1, [rcx+0x7]; movlpd [rdx+0x7], xmm1; mov rax, rdi; ret; 
0x000000000b66da: movlps [rdx], xmm0; movlpd xmm1, [rcx+0x8]; movlpd [rdx+0x8], xmm1; mov rax, rdi; ret; 
0x000000000b675b: movlps [rdx], xmm0; xor ah, ah; mov [rdx+0x8], ah; mov rax, rdi; ret; 
0x000000000b3983: movlps xmm0, [rcx]; movlpd [rdx], xmm0; mov rax, rdi; ret; 
0x000000000b3b4e: movlps xmm1, [rcx+0x5]; movlpd [rdx+0x5], xmm1; mov rax, rdi; ret; 
0x000000000b3b6e: movlps xmm1, [rcx+0x6]; movlpd [rdx+0x6], xmm1; mov rax, rdi; ret; 
0x000000000b3b8e: movlps xmm1, [rcx+0x7]; movlpd [rdx+0x7], xmm1; mov rax, rdi; ret; 
0x000000000b66de: movlps xmm1, [rcx+0x8]; movlpd [rdx+0x8], xmm1; mov rax, rdi; ret; 
0x000000000b39d4: movlps xmm1, [rcx+0x8]; movlpd [rdx], xmm0; movlpd [rdx+0x8], xmm1; mov rax, rdi; ret; 
0x00000000042a54: movmskps eax, xmm0; and eax, 0x8; ret; 
0x00000000190c91: movnti [r14+0x66], r12d; nop [rax+rax]; nop; lea rax, [rdi]; ret; 
0x000000000b6fbc: movnti [r8+0x66f0ff3], r10; mov ecx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], ecx; ret; 
0x000000000b6fbd: movnti [rax+0x66f0ff3], edx; mov ecx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], ecx; ret; 
0x00000000190c92: movnti [rsi+0x66], esp; nop [rax+rax]; nop; lea rax, [rdi]; ret; 
0x000000000935b8: movntps [rax+0x18], xmm2; mov eax, [rdi+0x10]; sub eax, edx; ret; 
0x0000000016a04e: movq [r8], mm0; lea r11, [rip+0x538e7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169efe: movq [r8], mm0; lea r11, [rip+0x53a37]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169dae: movq [r8], mm0; lea r11, [rip+0x53b87]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169c5e: movq [r8], mm0; lea r11, [rip+0x53cd7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169b0e: movq [r8], mm0; lea r11, [rip+0x53e27]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001699be: movq [r8], mm0; lea r11, [rip+0x53f77]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016986e: movq [r8], mm0; lea r11, [rip+0x540c7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016971e: movq [r8], mm0; lea r11, [rip+0x54217]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169683: movq [r8], mm0; lea r11, [rip+0x542b2]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001695ce: movq [r8], mm0; lea r11, [rip+0x54367]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016947e: movq [r8], mm0; lea r11, [rip+0x544b7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016932e: movq [r8], mm0; lea r11, [rip+0x54607]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001691de: movq [r8], mm0; lea r11, [rip+0x54757]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016908e: movq [r8], mm0; lea r11, [rip+0x548a7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168f3e: movq [r8], mm0; lea r11, [rip+0x549f7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168dee: movq [r8], mm0; lea r11, [rip+0x54b47]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016766e: movq [r8], mm0; lea r11, [rip+0x56107]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016751e: movq [r8], mm0; lea r11, [rip+0x56257]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001673ce: movq [r8], mm0; lea r11, [rip+0x563a7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016727e: movq [r8], mm0; lea r11, [rip+0x564f7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016712e: movq [r8], mm0; lea r11, [rip+0x56647]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166fde: movq [r8], mm0; lea r11, [rip+0x56797]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166e8e: movq [r8], mm0; lea r11, [rip+0x568e7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166d3e: movq [r8], mm0; lea r11, [rip+0x56a37]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166ca3: movq [r8], mm0; lea r11, [rip+0x56ad2]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166bee: movq [r8], mm0; lea r11, [rip+0x56b87]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166a9e: movq [r8], mm0; lea r11, [rip+0x56cd7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016694e: movq [r8], mm0; lea r11, [rip+0x56e27]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001667fe: movq [r8], mm0; lea r11, [rip+0x56f77]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001666ae: movq [r8], mm0; lea r11, [rip+0x570c7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016655e: movq [r8], mm0; lea r11, [rip+0x57217]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016640e: movq [r8], mm0; lea r11, [rip+0x57367]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016a04f: movq [rax], mm0; lea r11, [rip+0x538e7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169eff: movq [rax], mm0; lea r11, [rip+0x53a37]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169daf: movq [rax], mm0; lea r11, [rip+0x53b87]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169c5f: movq [rax], mm0; lea r11, [rip+0x53cd7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169b0f: movq [rax], mm0; lea r11, [rip+0x53e27]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001699bf: movq [rax], mm0; lea r11, [rip+0x53f77]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016986f: movq [rax], mm0; lea r11, [rip+0x540c7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016971f: movq [rax], mm0; lea r11, [rip+0x54217]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169684: movq [rax], mm0; lea r11, [rip+0x542b2]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001695cf: movq [rax], mm0; lea r11, [rip+0x54367]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016947f: movq [rax], mm0; lea r11, [rip+0x544b7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016932f: movq [rax], mm0; lea r11, [rip+0x54607]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001691df: movq [rax], mm0; lea r11, [rip+0x54757]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016908f: movq [rax], mm0; lea r11, [rip+0x548a7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168f3f: movq [rax], mm0; lea r11, [rip+0x549f7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168def: movq [rax], mm0; lea r11, [rip+0x54b47]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016766f: movq [rax], mm0; lea r11, [rip+0x56107]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016751f: movq [rax], mm0; lea r11, [rip+0x56257]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001673cf: movq [rax], mm0; lea r11, [rip+0x563a7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016727f: movq [rax], mm0; lea r11, [rip+0x564f7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016712f: movq [rax], mm0; lea r11, [rip+0x56647]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166fdf: movq [rax], mm0; lea r11, [rip+0x56797]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166e8f: movq [rax], mm0; lea r11, [rip+0x568e7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166d3f: movq [rax], mm0; lea r11, [rip+0x56a37]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166ca4: movq [rax], mm0; lea r11, [rip+0x56ad2]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166bef: movq [rax], mm0; lea r11, [rip+0x56b87]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166a9f: movq [rax], mm0; lea r11, [rip+0x56cd7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016694f: movq [rax], mm0; lea r11, [rip+0x56e27]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001667ff: movq [rax], mm0; lea r11, [rip+0x56f77]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001666af: movq [rax], mm0; lea r11, [rip+0x570c7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016655f: movq [rax], mm0; lea r11, [rip+0x57217]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016640f: movq [rax], mm0; lea r11, [rip+0x57367]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000bc046: movq [rcx+0x30], mm0; add rcx, 0x40; cmp rdx, rcx; jne short 0x00000000000bc037; rep ret; 
0x0000000016d772: movq [rdi+0x10], mm0; lddqu xmm0, [rsi]; movdqu [rdi], xmm0; ret; 
0x000000000bbfe7: movq [rdi+0x10], mm0; movdqu [rdi+rdx-0x10], xmm0; movdqu [rdi+rdx-0x20], xmm0; ret; 
0x000000000b880e: movq [rdi+0x10], mm2; lea rax, [rdi+0x1f]; ret; 
0x000000000b967e: movq [rdi+0x10], mm2; lea rax, [rdi+0x20]; ret; 
0x000000000b7e51: movq [rdi+0x10], mm2; mov [rdi+0x20], cl; ret; 
0x000000000bb301: movq [rdi+0x10], mm2; mov [rdi+0x20], cl; xor ch, ch; mov [rdi+0x21], ch; ret; 
0x000000000b713e: movq [rdi+0x10], mm2; ret; 
0x000000000b7b3e: movq [rdi+0x10], mm2; sub r8, 0x20; lea rdi, [rdi+0x20]; jne 0x00000000000b7fa0; ret; 
0x000000000bb2de: movq [rdi+0x10], mm2; xor ch, ch; mov [rdi+0x20], ch; ret; 
0x0000000016ddf0: movq [rdi+0x1], mm0; movdqu [rdi], xmm1; ret; 
0x000000000b8095: movq [rdi+0x20], mm6; sub r8, 0x10; jb 0x00000000000b7649; movdqu [rdi+0x30], xmm7; ret; 
0x0000000016dd80: movq [rdi+0x2], mm0; movdqu [rdi], xmm1; ret; 
0x000000000b98f4: movq [rdi+0x30], mm7; lea rax, [rdi+0x40]; ret; 
0x000000000b80a4: movq [rdi+0x30], mm7; ret; 
0x000000000bb354: movq [rdi+0x30], mm7; xor ch, ch; mov [rdi+0x40], ch; ret; 
0x0000000016dd10: movq [rdi+0x3], mm0; movdqu [rdi], xmm1; ret; 
0x0000000016dca0: movq [rdi+0x4], mm0; movdqu [rdi], xmm1; ret; 
0x0000000016dc30: movq [rdi+0x5], mm0; movdqu [rdi], xmm1; ret; 
0x0000000016dbc0: movq [rdi+0x6], mm0; movdqu [rdi], xmm1; ret; 
0x0000000016db50: movq [rdi+0x7], mm0; movdqu [rdi], xmm1; ret; 
0x0000000016dae0: movq [rdi+0x8], mm0; movdqu [rdi], xmm1; ret; 
0x0000000016da70: movq [rdi+0x9], mm0; movdqu [rdi], xmm1; ret; 
0x0000000016da00: movq [rdi+0xa], mm0; movdqu [rdi], xmm1; ret; 
0x0000000016d990: movq [rdi+0xb], mm0; movdqu [rdi], xmm1; ret; 
0x0000000016d920: movq [rdi+0xc], mm0; movdqu [rdi], xmm1; ret; 
0x0000000016d8b0: movq [rdi+0xd], mm0; movdqu [rdi], xmm1; ret; 
0x000000000b87ae: movq [rdi+0xd], mm2; lea rax, [rdi+0x1c]; ret; 
0x000000000b961e: movq [rdi+0xd], mm2; lea rax, [rdi+0x1d]; ret; 
0x000000000b70de: movq [rdi+0xd], mm2; ret; 
0x000000000b7aae: movq [rdi+0xd], mm2; sub r8, 0x1d; lea rdi, [rdi+0x1d]; jne 0x00000000000b7fa0; ret; 
0x000000000bb27e: movq [rdi+0xd], mm2; xor ch, ch; mov [rdi+0x1d], ch; ret; 
0x0000000016d840: movq [rdi+0xe], mm0; movdqu [rdi], xmm1; ret; 
0x000000000b87ce: movq [rdi+0xe], mm2; lea rax, [rdi+0x1d]; ret; 
0x000000000b963e: movq [rdi+0xe], mm2; lea rax, [rdi+0x1e]; ret; 
0x000000000b70fe: movq [rdi+0xe], mm2; ret; 
0x000000000b7ade: movq [rdi+0xe], mm2; sub r8, 0x1e; lea rdi, [rdi+0x1e]; jne 0x00000000000b7fa0; ret; 
0x000000000bb29e: movq [rdi+0xe], mm2; xor ch, ch; mov [rdi+0x1e], ch; ret; 
0x0000000016d7d0: movq [rdi+0xf], mm0; movdqu [rdi], xmm1; ret; 
0x000000000b87ee: movq [rdi+0xf], mm2; lea rax, [rdi+0x1e]; ret; 
0x000000000b965e: movq [rdi+0xf], mm2; lea rax, [rdi+0x1f]; ret; 
0x000000000b711e: movq [rdi+0xf], mm2; ret; 
0x000000000b7b0e: movq [rdi+0xf], mm2; sub r8, 0x1f; lea rdi, [rdi+0x1f]; jne 0x00000000000b7fa0; ret; 
0x000000000bb2be: movq [rdi+0xf], mm2; xor ch, ch; mov [rdi+0x1f], ch; ret; 
0x000000000bbfec: movq [rdi+rdx-0x10], mm0; movdqu [rdi+rdx-0x20], xmm0; ret; 
0x000000000bbf4d: movq [rdi+rdx-0x10], mm0; movdqu [rdi], xmm0; ret; 
0x000000000bbff2: movq [rdi+rdx-0x20], mm0; ret; 
0x0000000016cf5c: movq [rdi-0x10], mm0; ret; 
0x0000000016cfcc: movq [rdi-0x10], mm1; ret; 
0x0000000016d707: movq [rdi-0x11], mm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000016d687: movq [rdi-0x12], mm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000016d5f7: movq [rdi-0x13], mm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000016d577: movq [rdi-0x14], mm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000016d4f7: movq [rdi-0x15], mm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000016d477: movq [rdi-0x16], mm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000016d3f7: movq [rdi-0x17], mm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000016d377: movq [rdi-0x18], mm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000016d2f7: movq [rdi-0x19], mm0; movdqu [rdi-0x10], xmm1; ret; 
0x000000000b7f51: movq [rdi-0x1], mm0; ret; 
0x0000000016d277: movq [rdi-0x1a], mm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000016d1f7: movq [rdi-0x1b], mm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000016d177: movq [rdi-0x1c], mm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000016d0e7: movq [rdi-0x1d], mm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000016d057: movq [rdi-0x1e], mm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000016cfc7: movq [rdi-0x1f], mm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000016cf52: movq [rdi-0x20], mm0; lddqu xmm0, [rsi-0x10]; movdqu [rdi-0x10], xmm0; ret; 
0x000000000b9485: movq [rdi], mm0; lea rax, [rdi+0x10]; ret; 
0x000000000b8625: movq [rdi], mm0; lea rax, [rdi+0xf]; ret; 
0x000000000b9498: movq [rdi], mm0; mov [rdi+0x10], cl; lea rax, [rdi+0x11]; ret; 
0x000000000b7c78: movq [rdi], mm0; mov [rdi+0x10], cl; ret; 
0x000000000bb0f8: movq [rdi], mm0; mov [rdi+0x10], cl; xor ch, ch; mov [rdi+0x11], ch; ret; 
0x000000000b8649: movq [rdi], mm0; mov [rdi+0x10], cx; lea rax, [rdi+0x11]; ret; 
0x000000000b94b9: movq [rdi], mm0; mov [rdi+0x10], cx; lea rax, [rdi+0x12]; ret; 
0x000000000b6f99: movq [rdi], mm0; mov [rdi+0x10], cx; ret; 
0x000000000bb119: movq [rdi], mm0; mov [rdi+0x10], cx; xor ch, ch; mov [rdi+0x12], ch; ret; 
0x000000000b8635: movq [rdi], mm0; mov [rdi+0x10], dh; lea rax, [rdi+0x10]; ret; 
0x000000000b6f85: movq [rdi], mm0; mov [rdi+0x10], dh; ret; 
0x000000000b8688: movq [rdi], mm0; mov [rdi+0x10], ecx; lea rax, [rdi+0x13]; ret; 
0x000000000b94f8: movq [rdi], mm0; mov [rdi+0x10], ecx; lea rax, [rdi+0x14]; ret; 
0x000000000b86a8: movq [rdi], mm0; mov [rdi+0x10], ecx; mov [rdi+0x14], dh; lea rax, [rdi+0x14]; ret; 
0x000000000b6fd8: movq [rdi], mm0; mov [rdi+0x10], ecx; mov [rdi+0x14], dh; ret; 
0x000000000b951b: movq [rdi], mm0; mov [rdi+0x10], ecx; mov [rdi+0x14], dl; lea rax, [rdi+0x15]; ret; 
0x000000000b7ccb: movq [rdi], mm0; mov [rdi+0x10], ecx; mov [rdi+0x14], dl; ret; 
0x000000000b6fc8: movq [rdi], mm0; mov [rdi+0x10], ecx; ret; 
0x000000000bb158: movq [rdi], mm0; mov [rdi+0x10], ecx; xor ch, ch; mov [rdi+0x14], ch; ret; 
0x000000000b8709: movq [rdi], mm0; mov [rdi+0x10], rcx; lea rax, [rdi+0x17]; ret; 
0x000000000b9579: movq [rdi], mm0; mov [rdi+0x10], rcx; lea rax, [rdi+0x18]; ret; 
0x000000000b8729: movq [rdi], mm0; mov [rdi+0x10], rcx; mov [rdi+0x18], dh; lea rax, [rdi+0x18]; ret; 
0x000000000b7059: movq [rdi], mm0; mov [rdi+0x10], rcx; mov [rdi+0x18], dh; ret; 
0x000000000b7039: movq [rdi], mm0; mov [rdi+0x10], rcx; ret; 
0x000000000bb1d9: movq [rdi], mm0; mov [rdi+0x10], rcx; xor ch, ch; mov [rdi+0x18], ch; ret; 
0x000000000b876c: movq [rdi], mm0; mov [rdi+0x10], rdx; mov [rdi+0x17], ecx; lea rax, [rdi+0x1a]; ret; 
0x000000000b95dc: movq [rdi], mm0; mov [rdi+0x10], rdx; mov [rdi+0x17], ecx; lea rax, [rdi+0x1b]; ret; 
0x000000000b709c: movq [rdi], mm0; mov [rdi+0x10], rdx; mov [rdi+0x17], ecx; ret; 
0x000000000b959c: movq [rdi], mm0; mov [rdi+0x10], rdx; mov [rdi+0x18], cl; lea rax, [rdi+0x19]; ret; 
0x000000000b7d4c: movq [rdi], mm0; mov [rdi+0x10], rdx; mov [rdi+0x18], cl; ret; 
0x000000000b874d: movq [rdi], mm0; mov [rdi+0x10], rdx; mov [rdi+0x18], cx; lea rax, [rdi+0x19]; ret; 
0x000000000b95bd: movq [rdi], mm0; mov [rdi+0x10], rdx; mov [rdi+0x18], cx; lea rax, [rdi+0x1a]; ret; 
0x000000000b707d: movq [rdi], mm0; mov [rdi+0x10], rdx; mov [rdi+0x18], cx; ret; 
0x000000000b878c: movq [rdi], mm0; mov [rdi+0x10], rdx; mov [rdi+0x18], ecx; lea rax, [rdi+0x1b]; ret; 
0x000000000b95fc: movq [rdi], mm0; mov [rdi+0x10], rdx; mov [rdi+0x18], ecx; lea rax, [rdi+0x1c]; ret; 
0x000000000b70bc: movq [rdi], mm0; mov [rdi+0x10], rdx; mov [rdi+0x18], ecx; ret; 
0x000000000b86c9: movq [rdi], mm0; mov [rdi+0xe], rcx; lea rax, [rdi+0x15]; ret; 
0x000000000b9539: movq [rdi], mm0; mov [rdi+0xe], rcx; lea rax, [rdi+0x16]; ret; 
0x000000000b6ff9: movq [rdi], mm0; mov [rdi+0xe], rcx; ret; 
0x000000000bb199: movq [rdi], mm0; mov [rdi+0xe], rcx; xor ch, ch; mov [rdi+0x16], ch; ret; 
0x000000000b8668: movq [rdi], mm0; mov [rdi+0xf], ecx; lea rax, [rdi+0x12]; ret; 
0x000000000b94d8: movq [rdi], mm0; mov [rdi+0xf], ecx; lea rax, [rdi+0x13]; ret; 
0x000000000b6fb8: movq [rdi], mm0; mov [rdi+0xf], ecx; ret; 
0x000000000bb138: movq [rdi], mm0; mov [rdi+0xf], ecx; xor ch, ch; mov [rdi+0x13], ch; ret; 
0x000000000b86e9: movq [rdi], mm0; mov [rdi+0xf], rcx; lea rax, [rdi+0x16]; ret; 
0x000000000b9559: movq [rdi], mm0; mov [rdi+0xf], rcx; lea rax, [rdi+0x17]; ret; 
0x000000000b7019: movq [rdi], mm0; mov [rdi+0xf], rcx; ret; 
0x000000000bb1b9: movq [rdi], mm0; mov [rdi+0xf], rcx; xor ch, ch; mov [rdi+0x17], ch; ret; 
0x000000000bbfe3: movq [rdi], mm0; movdqu [rdi+0x10], xmm0; movdqu [rdi+rdx-0x10], xmm0; movdqu [rdi+rdx-0x20], xmm0; ret; 
0x000000000b880a: movq [rdi], mm0; movdqu [rdi+0x10], xmm2; lea rax, [rdi+0x1f]; ret; 
0x000000000b967a: movq [rdi], mm0; movdqu [rdi+0x10], xmm2; lea rax, [rdi+0x20]; ret; 
0x000000000b7e4d: movq [rdi], mm0; movdqu [rdi+0x10], xmm2; mov [rdi+0x20], cl; ret; 
0x000000000b713a: movq [rdi], mm0; movdqu [rdi+0x10], xmm2; ret; 
0x000000000bb2da: movq [rdi], mm0; movdqu [rdi+0x10], xmm2; xor ch, ch; mov [rdi+0x20], ch; ret; 
0x000000000b87aa: movq [rdi], mm0; movdqu [rdi+0xd], xmm2; lea rax, [rdi+0x1c]; ret; 
0x000000000b961a: movq [rdi], mm0; movdqu [rdi+0xd], xmm2; lea rax, [rdi+0x1d]; ret; 
0x000000000b70da: movq [rdi], mm0; movdqu [rdi+0xd], xmm2; ret; 
0x000000000bb27a: movq [rdi], mm0; movdqu [rdi+0xd], xmm2; xor ch, ch; mov [rdi+0x1d], ch; ret; 
0x000000000b87ca: movq [rdi], mm0; movdqu [rdi+0xe], xmm2; lea rax, [rdi+0x1d]; ret; 
0x000000000b963a: movq [rdi], mm0; movdqu [rdi+0xe], xmm2; lea rax, [rdi+0x1e]; ret; 
0x000000000b70fa: movq [rdi], mm0; movdqu [rdi+0xe], xmm2; ret; 
0x000000000bb29a: movq [rdi], mm0; movdqu [rdi+0xe], xmm2; xor ch, ch; mov [rdi+0x1e], ch; ret; 
0x000000000b87ea: movq [rdi], mm0; movdqu [rdi+0xf], xmm2; lea rax, [rdi+0x1e]; ret; 
0x000000000b965a: movq [rdi], mm0; movdqu [rdi+0xf], xmm2; lea rax, [rdi+0x1f]; ret; 
0x000000000b711a: movq [rdi], mm0; movdqu [rdi+0xf], xmm2; ret; 
0x000000000bb2ba: movq [rdi], mm0; movdqu [rdi+0xf], xmm2; xor ch, ch; mov [rdi+0x1f], ch; ret; 
0x000000000b6f75: movq [rdi], mm0; ret; 
0x000000000b78c5: movq [rdi], mm0; sub r8, 0x10; lea rdi, [rdi+0x10]; jne 0x00000000000b7fa0; ret; 
0x000000000bb0e5: movq [rdi], mm0; xor ch, ch; mov [rdi+0x10], ch; ret; 
0x0000000016d7d5: movq [rdi], mm1; ret; 
0x0000000014fce9: movq mm0, [rax+0x30]; movups [rsi], xmm0; mov rax, [rax+0x40]; mov [rsi+0x10], rax; ret; 
0x00000000150629: movq mm0, [rax+0x40]; movups [rsi], xmm0; mov rax, [rax+0x50]; mov [rsi+0x10], rax; ret; 
0x0000000014cea9: movq mm0, [rax+0x90]; movups [rsi], xmm0; mov rax, [rax+0xa0]; mov [rsi+0x10], rax; ret; 
0x000000001481fb: movq mm0, [rdi+0x38]; mov dword ptr [rsi], 0x9; movups [rsi+0x8], xmm0; ret; 
0x0000000014fdb9: movq mm0, [rdx]; mov eax, esi; mov dword ptr [r8+0x18], 0x1; movups [r8+0x8], xmm0; ret; 
0x000000001506b1: movq mm0, [rdx]; mov eax, esi; movups [r8+0x30], xmm0; ret; 
0x0000000014cf89: movq mm0, [rdx]; mov eax, esi; movups [r8+0x8], xmm0; ret; 
0x00000000151755: movq mm0, [rip+0x6b534]; movaps [rsp+0x20], xmm0; call qword ptr [rax+0x28]; 
0x000000000b7c71: movq mm0, [rsi]; mov cl, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], cl; ret; 
0x000000000b6f91: movq mm0, [rsi]; mov cx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], cx; ret; 
0x000000000b6fc1: movq mm0, [rsi]; mov ecx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], ecx; ret; 
0x000000000b6fb1: movq mm0, [rsi]; mov ecx, [rsi+0xf]; movdqu [rdi], xmm0; mov [rdi+0xf], ecx; ret; 
0x000000000b7031: movq mm0, [rsi]; mov rcx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], rcx; ret; 
0x000000000b6ff1: movq mm0, [rsi]; mov rcx, [rsi+0xe]; movdqu [rdi], xmm0; mov [rdi+0xe], rcx; ret; 
0x000000000b7011: movq mm0, [rsi]; mov rcx, [rsi+0xf]; movdqu [rdi], xmm0; mov [rdi+0xf], rcx; ret; 
0x000000000b9481: movq mm0, [rsi]; movdqu [rdi], xmm0; lea rax, [rdi+0x10]; ret; 
0x000000000b8621: movq mm0, [rsi]; movdqu [rdi], xmm0; lea rax, [rdi+0xf]; ret; 
0x000000000b8631: movq mm0, [rsi]; movdqu [rdi], xmm0; mov [rdi+0x10], dh; lea rax, [rdi+0x10]; ret; 
0x000000000b6f81: movq mm0, [rsi]; movdqu [rdi], xmm0; mov [rdi+0x10], dh; ret; 
0x000000000b6f71: movq mm0, [rsi]; movdqu [rdi], xmm0; ret; 
0x000000000bb0e1: movq mm0, [rsi]; movdqu [rdi], xmm0; xor ch, ch; mov [rdi+0x10], ch; ret; 
0x000000000b7131: movq mm0, [rsi]; movdqu xmm2, [rsi+0x10]; movdqu [rdi], xmm0; movdqu [rdi+0x10], xmm2; ret; 
0x000000000b70d1: movq mm0, [rsi]; movdqu xmm2, [rsi+0xd]; movdqu [rdi], xmm0; movdqu [rdi+0xd], xmm2; ret; 
0x000000000b70f1: movq mm0, [rsi]; movdqu xmm2, [rsi+0xe]; movdqu [rdi], xmm0; movdqu [rdi+0xe], xmm2; ret; 
0x000000000b7111: movq mm0, [rsi]; movdqu xmm2, [rsi+0xf]; movdqu [rdi], xmm0; movdqu [rdi+0xf], xmm2; ret; 
0x0000000013c650: movq mm0, [rsi]; movups [rdi+rdx+0x8], xmm0; ret; 
0x0000000005b152: movq mm0, [rsp-0x18]; pinsrw xmm0, eax, 0x6; ret; 
0x00000000042a21: movq mm0, [rsp]; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x00000000042b67: movq mm0, mm2; mov dword ptr fs:[rax], 0x22; add rsp, 0x20; pop rbp; ret; 
0x00000000042ae5: movq mm0, mm2; pop rbp; ret; 
0x00000000116da9: movq mm0, rax; movq xmm1, rsi; punpcklqdq xmm0, xmm1; movups [rdi], xmm0; ret; 
0x00000000042119: movq mm0, rax; mulsd xmm0, [rip+0x17abcb]; ret; 
0x0000000004219e: movq mm0, rax; ret; 
0x00000000042075: movq mm0, rcx; ret; 
0x00000000041f8f: movq mm0, rdx; ret; 
0x000000001506c1: movq mm1, [r8+0x30]; mov eax, 0x1; movups [rdx], xmm1; ret; 
0x0000000014cf99: movq mm1, [r8+0x8]; mov eax, 0x1; movups [rdx], xmm1; ret; 
0x000000001506c2: movq mm1, [rax+0x30]; mov eax, 0x1; movups [rdx], xmm1; ret; 
0x0000000014cf9a: movq mm1, [rax+0x8]; mov eax, 0x1; movups [rdx], xmm1; ret; 
0x0000000012c6e3: movq mm1, [rbx-0x18]; mov [rbp-0x80], edx; mov rdx, r15; movups [rbp-0x78], xmm1; call rax; 
0x00000000148241: movq mm1, [rdi+0x20]; mov dword ptr [rsi], 0x6; movups [rsi+0x8], xmm1; ret; 
0x00000000041fdf: movq mm1, rax; mov [rdi], rax; subsd xmm0, xmm1; ret; 
0x00000000149110: movq mm1, rax; mov rax, [rdi+0x8]; punpcklqdq xmm0, xmm1; movaps [rsp], xmm0; call qword ptr [rax+0x8]; 
0x00000000116dae: movq mm1, rsi; punpcklqdq xmm0, xmm1; movups [rdi], xmm0; ret; 
0x0000000014fde1: movq mm2, [r8+0x1c]; mov eax, 0x1; movups [rdx], xmm2; ret; 
0x0000000014fde2: movq mm2, [rax+0x1c]; mov eax, 0x1; movups [rdx], xmm2; ret; 
0x0000000012c30c: movq mm2, [rbx+0x30]; mov [rbp-0x80], eax; movups [rbp-0x78], xmm2; call rcx; 
0x000000001506e1: movq mm2, [rdx]; mov eax, 0x1; movups [r8+0x20], xmm2; ret; 
0x000000000b8805: movq mm2, [rsi+0x10]; movdqu [rdi], xmm0; movdqu [rdi+0x10], xmm2; lea rax, [rdi+0x1f]; ret; 
0x000000000b9675: movq mm2, [rsi+0x10]; movdqu [rdi], xmm0; movdqu [rdi+0x10], xmm2; lea rax, [rdi+0x20]; ret; 
0x000000000b7135: movq mm2, [rsi+0x10]; movdqu [rdi], xmm0; movdqu [rdi+0x10], xmm2; ret; 
0x000000000b87a5: movq mm2, [rsi+0xd]; movdqu [rdi], xmm0; movdqu [rdi+0xd], xmm2; lea rax, [rdi+0x1c]; ret; 
0x000000000b9615: movq mm2, [rsi+0xd]; movdqu [rdi], xmm0; movdqu [rdi+0xd], xmm2; lea rax, [rdi+0x1d]; ret; 
0x000000000b70d5: movq mm2, [rsi+0xd]; movdqu [rdi], xmm0; movdqu [rdi+0xd], xmm2; ret; 
0x000000000b87c5: movq mm2, [rsi+0xe]; movdqu [rdi], xmm0; movdqu [rdi+0xe], xmm2; lea rax, [rdi+0x1d]; ret; 
0x000000000b9635: movq mm2, [rsi+0xe]; movdqu [rdi], xmm0; movdqu [rdi+0xe], xmm2; lea rax, [rdi+0x1e]; ret; 
0x000000000b70f5: movq mm2, [rsi+0xe]; movdqu [rdi], xmm0; movdqu [rdi+0xe], xmm2; ret; 
0x000000000b87e5: movq mm2, [rsi+0xf]; movdqu [rdi], xmm0; movdqu [rdi+0xf], xmm2; lea rax, [rdi+0x1e]; ret; 
0x000000000b9655: movq mm2, [rsi+0xf]; movdqu [rdi], xmm0; movdqu [rdi+0xf], xmm2; lea rax, [rdi+0x1f]; ret; 
0x000000000b7115: movq mm2, [rsi+0xf]; movdqu [rdi], xmm0; movdqu [rdi+0xf], xmm2; ret; 
0x00000000042add: movq mm2, mm0; add rsp, 0x20; movdqa xmm0, xmm2; pop rbp; ret; 
0x000000001506f1: movq mm3, [r8+0x20]; mov eax, 0x1; movups [rdx], xmm3; ret; 
0x000000001506f2: movq mm3, [rax+0x20]; mov eax, 0x1; movups [rdx], xmm3; ret; 
0x0000000012c4b4: movq mm3, [rbx+0x30]; mov [rbp-0x80], eax; movups [rbp-0x78], xmm3; call r9; 
0x000000001506d1: movq mm4, [r8+0x8]; mov eax, 0x1; movups [rdx], xmm4; ret; 
0x000000001506d2: movq mm4, [rax+0x8]; mov eax, 0x1; movups [rdx], xmm4; ret; 
0x0000000012c3fb: movq mm4, [rbx+0x78]; mov [rbp-0x80], edx; mov rdx, r13; movups [rbp-0x78], xmm4; call rax; 
0x0000000012c395: movq mm5, [r13-0x18]; mov [rbp-0x80], edx; mov rdx, r14; movups [rbp-0x78], xmm5; call rax; 
0x0000000012c396: movq mm5, [rbp-0x18]; mov [rbp-0x80], edx; mov rdx, r14; movups [rbp-0x78], xmm5; call rax; 
0x0000000012c90b: movq mm6, [rbx+0x78]; mov [rbp-0x80], edx; mov rdx, r13; movups [rbp-0x78], xmm6; call rax; 
0x0000000010c71c: movq mm6, [rdi+0x68]; movups [rsi+0x60], xmm6; movdqu xmm7, [rdi+0x78]; movups [rsi+0x70], xmm7; ret; 
0x0000000010d06e: movq mm6, [rdi+0xe8]; movups [rsi+0x60], xmm6; movdqu xmm7, [rdi+0xf8]; movups [rsi+0x70], xmm7; ret; 
0x0000000010c76c: movq mm6, [rsi+0x60]; movups [rdi+0x68], xmm6; movdqu xmm7, [rsi+0x70]; movups [rdi+0x78], xmm7; ret; 
0x0000000010d0fe: movq mm6, [rsi+0x60]; movups [rdi+0xe8], xmm6; movdqu xmm7, [rsi+0x70]; movups [rdi+0xf8], xmm7; ret; 
0x0000000012c9d8: movq mm7, [r14+0x30]; mov [rbp-0x80], edx; mov rdx, r13; movups [rbp-0x78], xmm7; call rax; 
0x0000000012ccef: movq mm7, [rbx+0x78]; mov [rbp-0x80], edx; mov rdx, r13; movups [rbp-0x78], xmm7; call rax; 
0x0000000012c583: movq mm7, [rbx-0x18]; mov dword ptr [rbp-0x80], 0x0; movups [rbp-0x78], xmm7; call rcx; 
0x0000000012cbc1: movq mm7, [rcx+0x30]; mov [rbp-0x80], edx; mov rdx, r13; movups [rbp-0x78], xmm7; call rax; 
0x0000000010c725: movq mm7, [rdi+0x78]; movups [rsi+0x70], xmm7; ret; 
0x0000000010d07a: movq mm7, [rdi+0xf8]; movups [rsi+0x70], xmm7; ret; 
0x0000000012c9d9: movq mm7, [rsi+0x30]; mov [rbp-0x80], edx; mov rdx, r13; movups [rbp-0x78], xmm7; call rax; 
0x0000000010c775: movq mm7, [rsi+0x70]; movups [rdi+0x78], xmm7; ret; 
0x0000000010d10a: movq mm7, [rsi+0x70]; movups [rdi+0xf8], xmm7; ret; 
0x00000000041f0f: movq rax, mm0; and rax, rdx; sub rax, rdx; shr rax, 0x3f; ret; 
0x00000000041f0e: movq rax, xmm0; and rax, rdx; sub rax, rdx; shr rax, 0x3f; ret; 
0x00000000041eef: movq rdx, mm0; btr rdx, 0x3f; sub rax, rdx; shr rax, 0x3f; ret; 
0x00000000041eee: movq rdx, xmm0; btr rdx, 0x3f; sub rax, rdx; shr rax, 0x3f; ret; 
0x00000000116da8: movq xmm0, rax; movq xmm1, rsi; punpcklqdq xmm0, xmm1; movups [rdi], xmm0; ret; 
0x00000000042118: movq xmm0, rax; mulsd xmm0, [rip+0x17abcb]; ret; 
0x0000000004219d: movq xmm0, rax; ret; 
0x00000000042074: movq xmm0, rcx; ret; 
0x00000000041f8e: movq xmm0, rdx; ret; 
0x00000000041fde: movq xmm1, rax; mov [rdi], rax; subsd xmm0, xmm1; ret; 
0x0000000014910f: movq xmm1, rax; mov rax, [rdi+0x8]; punpcklqdq xmm0, xmm1; movaps [rsp], xmm0; call qword ptr [rax+0x8]; 
0x00000000116dad: movq xmm1, rsi; punpcklqdq xmm0, xmm1; movups [rdi], xmm0; ret; 
0x00000000194192: movsb [rdi], [rsi]; add al, [rax]; movsxd r12, [rdi+r12*4]; add rdi, r12; notrack jmp rdi; 
0x000000000bbb8e: movsb [rdi], [rsi]; cld; ret; 
0x00000000147b9b: movsb [rdi], [rsi]; mov rax, [rsp+0xc8]; mov rdi, rbx; call qword ptr [rax+0x20]; 
0x00000000125824: movsb [rdi], [rsi]; or al, 0x0; syscall; 
0x0000000012f2c8: movsb [rdi], [rsi]; ret far; 
0x000000000bbb80: movsb [rdi], [rsi]; ret; 
0x00000000110a88: movsb [rdi], [rsi]; sbb cl, dh; jmp qword ptr [rbp+rax*2-0x77]; 
0x0000000012c39f: movsd [rbp-0x78], xmm5; call rax; 
0x00000000048036: movsd [rbx], xmm0; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000006aac7: movsd [rdi], [rsi]; adc ebx, [rax]; add [rbx-0x5ff7b], cl; jmp qword ptr [rcx+rcx*4+0x2]; 
0x0000000011a967: movsd [rdi], [rsi]; add [rax], al; add [rcx-0x75], cl; jge short 0x000000000011a96f; call rbx; 
0x000000000a1cb4: movsd [rdi], [rsi]; add [rax], al; cmove rax, rdx; ret; 
0x000000001451bf: movsd [rdi], [rsi]; add [rax], eax; mov edi, [r15]; call qword ptr [rsp+0x70]; 
0x00000000145183: movsd [rdi], [rsi]; add [rax], eax; xor edi, edi; call qword ptr [rsp+0x70]; 
0x00000000169297: movsd [rdi], [rsi]; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000007b9de: movsd [rdi], [rsi]; clc; idiv bh; dec dword ptr [rbp+0x63]; ret; 
0x0000000007c099: movsd [rdi], [rsi]; clc; idiv bh; jmp qword ptr [rsi-0x70]; 
0x00000000056375: movsd [rdi], [rsi]; enter 0x894c, 0x7; shl r9, cl; mov [rdi-0x8], r9; ret; 
0x000000001156c7: movsd [rdi], [rsi]; or eax, 0x64d8f700; mov [rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000776c7: movsd [rdi], [rsi]; or eax, 0xeb830000; add [rax-0x50743], eax; jmp qword ptr [rax]; 
0x00000000052ae7: movsd [rdi], [rsi]; ret far; 
0x000000000563b2: movsd [rdi], [rsi]; ret; 
0x0000000015424c: movsd [rdi], [rsi]; sti; jmp qword ptr [rsi-0x7d]; 
0x00000000041f87: movsd [rdi], xmm0; and rdx, rax; movq xmm0, rdx; ret; 
0x000000000420ae: movsd xmm0, [rip+0x17ac2a]; orpd xmm1, [rip+0x17a642]; mulsd xmm0, xmm1; ret; 
0x00000000042088: movsd xmm0, [rip+0x17ac58]; orpd xmm1, [rip+0x17a678]; mulsd xmm0, xmm1; ret; 
0x000000000d02cc: movsd xmm0, [rsp-0x10]; ret; 
0x0000000015f169: movsq [rdi], [rsi]; ret; 
0x00000000042333: movss [rdi], xmm0; movd xmm0, esi; ret; 
0x0000000019717c: movss xmm0, [rip+0x261fc]; divss xmm0, [rip+0x27508]; ret; 
0x000000000422e4: movss xmm3, [rip+0x1670f4]; andps xmm0, xmm3; andnps xmm3, xmm1; orps xmm0, xmm3; ret; 
0x000000001279d3: movsx eax, bl; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000157300: movsx eax, byte ptr [rsi]; lea rsi, [rsp+0x4]; mov [rsp+0x4], eax; mov rax, [rdi+0x8]; call qword ptr [rax+0x48]; 
0x00000000156321: movsx eax, ch; mov rsi, rsp; mov [rsp], rax; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x0000000009f355: movsx eax, dl; ret; 
0x000000001571e0: movsx eax, word ptr [rsi]; lea rsi, [rsp+0x4]; mov [rsp+0x4], eax; mov rax, [rdi+0x8]; call qword ptr [rax+0x48]; 
0x00000000156201: movsx eax, word ptr [rsi]; mov rsi, rsp; mov [rsp], rax; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x0000000005ea4e: movsx ecx, byte ptr [rsi]; cmp edi, ecx; ja short 0x000000000005ea38; mov eax, r8d; ret; 
0x000000000a8834: movsx edx, byte ptr [rdi+rax]; cmp edx, esi; je short 0x00000000000a8830; ret; 
0x00000000156320: movsx rax, bpl; mov rsi, rsp; mov [rsp], rax; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x00000000156200: movsx rax, word ptr [rsi]; mov rsi, rsp; mov [rsp], rax; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x000000000a8b17: movsxd eax, [rax+rax*4]; add rax, r8; notrack jmp rax; 
0x0000000007787c: movsxd eax, [rax+rcx*4]; add rax, rbx; jmp rax; 
0x00000000077f6b: movsxd eax, [rax+rcx*4]; add rax, rbx; mov dword ptr [rbp-0x4e0], 0x1; mov r10, rdx; jmp rax; 
0x0000000007e04b: movsxd eax, [rax+rcx*4]; add rax, rdx; jmp rax; 
0x0000000007e5d8: movsxd eax, [rax+rcx*4]; add rax, rdx; mov dword ptr [rbp-0x4d0], 0x1; mov r9, rsi; jmp rax; 
0x000000000778d7: movsxd eax, [rax+rdx*4]; add rax, rbx; jmp rax; 
0x0000000007b1c3: movsxd eax, [rax+rdx*4]; lea rdx, [rip-0x4d4]; add rax, rdx; jmp rax; 
0x0000000011fdf5: movsxd eax, [rax]; add [rax], al; syscall; 
0x00000000090208: movsxd eax, [rbx+rax*4]; add rax, r11; notrack jmp rax; 
0x00000000063549: movsxd eax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x000000000748fd: movsxd eax, [rcx+rax*4]; add rax, rdx; jmp rax; 
0x0000000006495c: movsxd eax, [rcx+rdx*4]; add rax, rcx; notrack jmp rax; 
0x0000000014604e: movsxd eax, [rcx+rsi*4]; shr rdx, 0x3; add rax, rcx; notrack jmp rax; 
0x000000001017ac: movsxd eax, [rcx-0x77]; ret far; 
0x000000000cf519: movsxd eax, [rcx]; add [rax], al; lea rax, [rdi-0x10]; ret; 
0x000000000bbc11: movsxd eax, [rcx]; add [rax], al; mov rcx, rdx; rep movsb [rdi], [rsi]; ret; 
0x000000001851b7: movsxd eax, [rcx]; add [rbx+0x148b8104], cl; xchg ecx, eax; sub eax, edx; ret; 
0x0000000006403f: movsxd eax, [rcx]; add rax, rcx; notrack jmp rax; 
0x0000000006c196: movsxd eax, [rcx]; mov r11d, [rbp-0x5c8]; add rax, rcx; notrack jmp rax; 
0x0000000014866a: movsxd eax, [rdi+0x18]; cmp eax, 0x3; jbe short 0x0000000000148680; mov eax, 0x2; ret; 
0x00000000077b9a: movsxd eax, [rdi+rax*4]; add rax, rbx; jmp rax; 
0x00000000080e13: movsxd eax, [rdi+rax*4]; add rax, rdi; notrack jmp rax; 
0x0000000014cf77: movsxd eax, [rdi+rcx*4]; add rax, rdi; notrack jmp rax; 
0x00000000064623: movsxd eax, [rdi]; add rax, rdi; notrack jmp rax; 
0x000000000901d6: movsxd eax, [rdx+rax*4]; add rax, r10; notrack jmp rax; 
0x00000000023e8a: movsxd eax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000194b6b: movsxd eax, [rdx+rax*4]; add rdx, rax; notrack jmp rdx; 
0x000000000e5478: movsxd eax, [rdx+rbp*4]; add rax, rdx; notrack jmp rax; 
0x000000000eff96: movsxd eax, [rdx+rbx*4]; add rax, rdx; notrack jmp rax; 
0x00000000031ada: movsxd eax, [rdx+rcx*4]; add r8, rdx; notrack jmp r8; 
0x000000000fce23: movsxd eax, [rdx+rdi*4]; add rax, r10; notrack jmp rax; 
0x00000000101093: movsxd eax, [rdx+rdi*4]; add rax, rdx; notrack jmp rax; 
0x000000000e4ae4: movsxd eax, [rdx+rsi*4]; add rax, rdx; notrack jmp rax; 
0x000000001785a9: movsxd eax, [rdx]; add [rax], al; ret; 
0x000000001673d6: movsxd eax, [rip+0x14634900]; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000740c0: movsxd eax, [rsi+rax*4]; add rax, r14; notrack jmp rax; 
0x00000000077b3c: movsxd eax, [rsi+rax*4]; add rax, rbx; jmp rax; 
0x0000000007f1ea: movsxd eax, [rsi+rax*4]; add rax, rdx; jmp rax; 
0x0000000008065b: movsxd eax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x0000000006c90c: movsxd eax, [rsi+rcx*4]; add rax, rsi; notrack jmp rax; 
0x000000000fccc1: movsxd eax, [rsi+rdi*4]; add rax, r14; notrack jmp rax; 
0x000000000bc0da: movsxd eax, [rsi+rdi*4]; add rax, rsi; notrack jmp rax; 
0x000000000bc1a2: movsxd eax, [rsi+rdx*4]; add rax, rsi; notrack jmp rax; 
0x00000000149051: movsxd eax, [rsi]; mov rsi, rsp; mov [rsp], rax; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x00000000047893: movsxd eax, [rsp+0x4]; jne short 0x00000000000478ea; add rsp, 0x18; ret; 
0x0000000010910c: movsxd eax, [rsp+rax*4]; add rax, r12; notrack jmp rax; 
0x00000000183991: movsxd eax, ecx; add rax, rdi; ret; 
0x0000000018379f: movsxd eax, ecx; ret; 
0x00000000183a50: movsxd ebx, ebx; cmp ch, [rcx]; shl byte ptr [rsi+0xf], 0x1; outsd dx, [rsi]; ret; 
0x00000000121b26: movsxd ebx, ebx; mov [rip+0xca831], rbx; pop rbx; ret; 
0x00000000121b0c: movsxd ebx, ebx; mov [rip+0xca84b], rbx; pop rbx; ret; 
0x0000000007a3bf: movsxd ebx, ebx; mov rdx, rbx; call qword ptr [r13+0x38]; 
0x000000000eaa86: movsxd ecx, [rax+rax]; movzx eax, al; movsxd rax, [rdi+rax*4]; add rax, rdi; notrack jmp rax; 
0x00000000160b61: movsxd ecx, [rax]; or [rax], eax; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000b75bb: movsxd ecx, [rbx+rax*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000016b3cc: movsxd ecx, [rbx+rcx*4]; add r9, r11; notrack jmp r9; 
0x00000000165e1c: movsxd ecx, [rbx+rcx*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x0000000018d482: movsxd ecx, [rbx+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000165db5: movsxd ecx, [rbx+rdx*4]; add rsi, rdx; add rdi, rdx; add r9, r11; notrack jmp r9; 
0x000000000b6d3a: movsxd ecx, [rbx+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000009d12c: movsxd ecx, [rcx+rcx*4-0x1a]; mov rdi, rbp; call rax; 
0x000000000a8982: movsxd ecx, [rcx+rcx*4]; add rcx, r9; notrack jmp rcx; 
0x00000000080eaf: movsxd ecx, [rdi+rcx*4]; add rcx, rdi; notrack jmp rcx; 
0x00000000193f7d: movsxd ecx, [rdi]; add rcx, rdi; notrack jmp rcx; 
0x000000000a9012: movsxd ecx, [rdx+rcx*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000017deae: movsxd ecx, [rdx+rcx*4]; pcmpeqb xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x000000001850ae: movsxd ecx, [rdx+rcx*4]; vpcmpeqb xmm0, xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000014ed39: movsxd ecx, [rip+0x1f0ffffe]; add bl, dh; nop edx, edi; ret; 
0x000000000bc110: movsxd ecx, [rsi+rax*4]; add rcx, rsi; notrack jmp rcx; 
0x000000000fe041: movsxd ecx, [rsi+rcx*4]; add rcx, rsi; notrack jmp rcx; 
0x000000001837d3: movsxd ecx, ecx; add rax, rcx; sub rax, rdi; ret; 
0x0000000012c3fd: movsxd edi, [rax-0x77]; push rbp; or byte ptr [rcx+rcx*4-0x16], 0xf; adc [rbp-0x78], esp; call rax; 
0x0000000011848f: movsxd edi, edi; jmp qword ptr [rsp+rax*2-0x77]; 
0x00000000034489: movsxd edi, edi; mov eax, [rax+rdi*4]; ret; 
0x00000000033d8c: movsxd edi, edi; mov rax, fs:[rax]; mov rax, [rax+rdi*8+0x80]; ret; 
0x0000000003426c: movsxd edi, edi; mov rax, fs:[rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x1; ret; 
0x00000000034469: movsxd edi, edi; movzx eax, word ptr [rax+rdi*2]; and ax, 0x1000; movzx eax, ax; ret; 
0x00000000034449: movsxd edi, edi; movzx eax, word ptr [rax+rdi*2]; and ax, 0x100; movzx eax, ax; ret; 
0x00000000034429: movsxd edi, edi; movzx eax, word ptr [rax+rdi*2]; and ax, 0x2000; movzx eax, ax; ret; 
0x000000000343a9: movsxd edi, edi; movzx eax, word ptr [rax+rdi*2]; and ax, 0x200; movzx eax, ax; ret; 
0x000000000343e9: movsxd edi, edi; movzx eax, word ptr [rax+rdi*2]; and ax, 0x4000; movzx eax, ax; ret; 
0x00000000034349: movsxd edi, edi; movzx eax, word ptr [rax+rdi*2]; and ax, 0x400; movzx eax, ax; ret; 
0x000000000343c9: movsxd edi, edi; movzx eax, word ptr [rax+rdi*2]; and ax, 0x8000; movzx eax, ax; ret; 
0x00000000034389: movsxd edi, edi; movzx eax, word ptr [rax+rdi*2]; and ax, 0x800; movzx eax, ax; ret; 
0x00000000034309: movsxd edi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x1; ret; 
0x00000000034369: movsxd edi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x2; movzx eax, ax; ret; 
0x00000000034409: movsxd edi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x4; movzx eax, ax; ret; 
0x00000000034329: movsxd edi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x8; movzx eax, ax; ret; 
0x00000000149763: movsxd edi, esi; jmp qword ptr [rsi+0x2e]; 
0x0000000009e4d9: movsxd edi, esi; mov [rbx], rdi; call rcx; 
0x0000000014f755: movsxd edx, [rax+rdx*4]; add rdx, rax; notrack jmp rdx; 
0x0000000009e4d1: movsxd edx, [rax-0x2]; movups [rbx+0x38], xmm0; movsxd rdi, esi; mov [rbx], rdi; call rcx; 
0x000000000a8b11: movsxd edx, [rax]; add [rcx+0x46349d0], cl; or byte ptr [rcx+rax-0x40], 0x3e; jmp rax; 
0x00000000040aad: movsxd edx, [rbx+rdx*4]; add r10, r11; notrack jmp r10; 
0x00000000165ef0: movsxd edx, [rbx+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000077ebc: movsxd edx, [rbx]; add [rax+0x63], cl; add al, 0x90; add rax, rbx; jmp rax; 
0x000000000d833f: movsxd edx, [rcx+rdi*4]; add rdx, r9; notrack jmp rdx; 
0x00000000080f13: movsxd edx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x0000000019414f: movsxd edx, [rcx]; xor r8d, r13d; add rdx, rcx; notrack jmp rdx; 
0x00000000052d78: movsxd edx, [rdi+rdx*4]; add rdx, rdi; notrack jmp rdx; 
0x000000000d83b9: movsxd edx, [rdi+rsi*4]; add rdx, rdi; notrack jmp rdx; 
0x0000000009d741: movsxd edx, [rdi]; adc eax, 0x100; add [rcx+rcx*4-0x20], al; pop r12; ret; 
0x00000000193f36: movsxd edx, [rdx]; xor r8d, r13d; movzx ecx, r8b; add rdx, r10; notrack jmp rdx; 
0x000000000551bc: movsxd edx, [rsi+rdx*4]; add rdx, rsi; cmp ecx, 0x2f; notrack jmp rdx; 
0x000000000407aa: movsxd edx, [rsi+rdx*4]; add rdx, rsi; notrack jmp rdx; 
0x0000000013c535: movsxd edx, eax; add rdi, rdx; mov [r9], rdi; ret; 
0x00000000079f7a: movsxd edx, ebp; mov rdi, rbx; call qword ptr [r14+0x38]; 
0x00000000083c58: movsxd edx, ebx; mov rsi, r13; mov rdi, r15; call qword ptr [rbp+0x38]; 
0x0000000013c966: movsxd edx, ecx; ret; 
0x0000000013c369: movsxd edx, edx; mov eax, r8d; mov byte ptr [rdi+rdx], 0x0; ret; 
0x00000000166119: movsxd esi, [rsi+0x5]; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000bdc97: movsxd esi, edi; jmp qword ptr [rsi+0xf]; 
0x000000000bdc96: movsxd esi, edi; jmp qword ptr [rsi+0xf]; 
0x0000000009e5ac: movsxd esi, esi; movups [rbx+0x38], xmm0; mov [rbx], rsi; call rcx; 
0x00000000194196: movsxd esp, [rdi]; add rdi, r12; notrack jmp rdi; 
0x00000000073d30: movsxd esp, esp; mov rdx, r12; call qword ptr [r13+0x38]; 
0x00000000040aac: movsxd r10, [r11+r10*4]; add r10, r11; notrack jmp r10; 
0x00000000194195: movsxd r12, [rdi+r12*4]; add rdi, r12; notrack jmp rdi; 
0x00000000073d2f: movsxd r12, r12d; mov rdx, r12; call qword ptr [r13+0x38]; 
0x00000000031ad9: movsxd r8, [rdx+r9*4]; add r8, rdx; notrack jmp r8; 
0x000000000a9011: movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000017dead: movsxd r9, [r10+r9*4]; pcmpeqb xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x000000001850ad: movsxd r9, [r10+r9*4]; vpcmpeqb xmm0, xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000016b3cb: movsxd r9, [r11+r9*4]; add r9, r11; notrack jmp r9; 
0x00000000165e1b: movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x00000000165db4: movsxd r9, [r11+rdx*4]; add rsi, rdx; add rdi, rdx; add r9, r11; notrack jmp r9; 
0x000000000fce22: movsxd rax, [r10+r15*4]; add rax, r10; notrack jmp rax; 
0x000000000901d5: movsxd rax, [r10+rax*4]; add rax, r10; notrack jmp rax; 
0x00000000090207: movsxd rax, [r11+rax*4]; add rax, r11; notrack jmp rax; 
0x0000000010910b: movsxd rax, [r12+rax*4]; add rax, r12; notrack jmp rax; 
0x000000000fccc0: movsxd rax, [r14+r15*4]; add rax, r14; notrack jmp rax; 
0x000000000740bf: movsxd rax, [r14+rax*4]; add rax, r14; notrack jmp rax; 
0x000000000a8b16: movsxd rax, [r8+rax*4]; add rax, r8; notrack jmp rax; 
0x0000000007787b: movsxd rax, [rax+rcx*4]; add rax, rbx; jmp rax; 
0x00000000077f6a: movsxd rax, [rax+rcx*4]; add rax, rbx; mov dword ptr [rbp-0x4e0], 0x1; mov r10, rdx; jmp rax; 
0x0000000007e04a: movsxd rax, [rax+rcx*4]; add rax, rdx; jmp rax; 
0x0000000007e5d7: movsxd rax, [rax+rcx*4]; add rax, rdx; mov dword ptr [rbp-0x4d0], 0x1; mov r9, rsi; jmp rax; 
0x000000000778d6: movsxd rax, [rax+rdx*4]; add rax, rbx; jmp rax; 
0x0000000007b1c2: movsxd rax, [rax+rdx*4]; lea rdx, [rip-0x4d4]; add rax, rdx; jmp rax; 
0x0000000006403e: movsxd rax, [rcx+r12*4]; add rax, rcx; notrack jmp rax; 
0x0000000006c195: movsxd rax, [rcx+r12*4]; mov r11d, [rbp-0x5c8]; add rax, rcx; notrack jmp rax; 
0x00000000063548: movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x000000000748fc: movsxd rax, [rcx+rax*4]; add rax, rdx; jmp rax; 
0x0000000006495b: movsxd rax, [rcx+rdx*4]; add rax, rcx; notrack jmp rax; 
0x0000000014604d: movsxd rax, [rcx+rsi*4]; shr rdx, 0x3; add rax, rcx; notrack jmp rax; 
0x00000000148669: movsxd rax, [rdi+0x18]; cmp eax, 0x3; jbe short 0x0000000000148680; mov eax, 0x2; ret; 
0x00000000064622: movsxd rax, [rdi+r12*4]; add rax, rdi; notrack jmp rax; 
0x00000000077b99: movsxd rax, [rdi+rax*4]; add rax, rbx; jmp rax; 
0x00000000080e12: movsxd rax, [rdi+rax*4]; add rax, rdi; notrack jmp rax; 
0x0000000014cf76: movsxd rax, [rdi+rcx*4]; add rax, rdi; notrack jmp rax; 
0x000000000f00e6: movsxd rax, [rdx+r14*4]; add rax, rdx; notrack jmp rax; 
0x00000000023e89: movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000194b6a: movsxd rax, [rdx+rax*4]; add rdx, rax; notrack jmp rdx; 
0x000000000e5477: movsxd rax, [rdx+rbp*4]; add rax, rdx; notrack jmp rax; 
0x000000000eff95: movsxd rax, [rdx+rbx*4]; add rax, rdx; notrack jmp rax; 
0x00000000101092: movsxd rax, [rdx+rdi*4]; add rax, rdx; notrack jmp rax; 
0x000000000e4ae3: movsxd rax, [rdx+rsi*4]; add rax, rdx; notrack jmp rax; 
0x00000000077b3b: movsxd rax, [rsi+rax*4]; add rax, rbx; jmp rax; 
0x0000000007f1e9: movsxd rax, [rsi+rax*4]; add rax, rdx; jmp rax; 
0x0000000008065a: movsxd rax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x0000000006c90b: movsxd rax, [rsi+rcx*4]; add rax, rsi; notrack jmp rax; 
0x000000000bc0d9: movsxd rax, [rsi+rdi*4]; add rax, rsi; notrack jmp rax; 
0x000000000bc1a1: movsxd rax, [rsi+rdx*4]; add rax, rsi; notrack jmp rax; 
0x00000000149050: movsxd rax, [rsi]; mov rsi, rsp; mov [rsp], rax; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x00000000047892: movsxd rax, [rsp+0x4]; jne short 0x00000000000478ea; add rsp, 0x18; ret; 
0x00000000183990: movsxd rax, ecx; add rax, rdi; ret; 
0x0000000018379e: movsxd rax, ecx; ret; 
0x00000000121b25: movsxd rbx, ebx; mov [rip+0xca831], rbx; pop rbx; ret; 
0x00000000121b0b: movsxd rbx, ebx; mov [rip+0xca84b], rbx; pop rbx; ret; 
0x0000000007a3be: movsxd rbx, ebx; mov rdx, rbx; call qword ptr [r13+0x38]; 
0x000000000b75ba: movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000018d481: movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x000000000b6d39: movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000a8981: movsxd rcx, [r9+rcx*4]; add rcx, r9; notrack jmp rcx; 
0x00000000193f7c: movsxd rcx, [rdi+r12*4]; add rcx, rdi; notrack jmp rcx; 
0x00000000080eae: movsxd rcx, [rdi+rcx*4]; add rcx, rdi; notrack jmp rcx; 
0x000000000bc10f: movsxd rcx, [rsi+rax*4]; add rcx, rsi; notrack jmp rcx; 
0x000000000fe040: movsxd rcx, [rsi+rcx*4]; add rcx, rsi; notrack jmp rcx; 
0x000000001837d2: movsxd rcx, ecx; add rax, rcx; sub rax, rdi; ret; 
0x00000000034488: movsxd rdi, edi; mov eax, [rax+rdi*4]; ret; 
0x00000000033d8b: movsxd rdi, edi; mov rax, fs:[rax]; mov rax, [rax+rdi*8+0x80]; ret; 
0x0000000003426b: movsxd rdi, edi; mov rax, fs:[rax]; movzx eax, word ptr [rax+rdi*2]; and eax, 0x1; ret; 
0x00000000034468: movsxd rdi, edi; movzx eax, word ptr [rax+rdi*2]; and ax, 0x1000; movzx eax, ax; ret; 
0x00000000034448: movsxd rdi, edi; movzx eax, word ptr [rax+rdi*2]; and ax, 0x100; movzx eax, ax; ret; 
0x00000000034428: movsxd rdi, edi; movzx eax, word ptr [rax+rdi*2]; and ax, 0x2000; movzx eax, ax; ret; 
0x000000000343a8: movsxd rdi, edi; movzx eax, word ptr [rax+rdi*2]; and ax, 0x200; movzx eax, ax; ret; 
0x000000000343e8: movsxd rdi, edi; movzx eax, word ptr [rax+rdi*2]; and ax, 0x4000; movzx eax, ax; ret; 
0x00000000034348: movsxd rdi, edi; movzx eax, word ptr [rax+rdi*2]; and ax, 0x400; movzx eax, ax; ret; 
0x000000000343c8: movsxd rdi, edi; movzx eax, word ptr [rax+rdi*2]; and ax, 0x8000; movzx eax, ax; ret; 
0x00000000034388: movsxd rdi, edi; movzx eax, word ptr [rax+rdi*2]; and ax, 0x800; movzx eax, ax; ret; 
0x00000000034308: movsxd rdi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x1; ret; 
0x00000000034368: movsxd rdi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x2; movzx eax, ax; ret; 
0x00000000034408: movsxd rdi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x4; movzx eax, ax; ret; 
0x00000000034328: movsxd rdi, edi; movzx eax, word ptr [rax+rdi*2]; and eax, 0x8; movzx eax, ax; ret; 
0x0000000009e4d8: movsxd rdi, esi; mov [rbx], rdi; call rcx; 
0x00000000193f35: movsxd rdx, [r10+r12*4]; xor r8d, r13d; movzx ecx, r8b; add rdx, r10; notrack jmp rdx; 
0x00000000165eef: movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000d833e: movsxd rdx, [r9+rdi*4]; add rdx, r9; notrack jmp rdx; 
0x0000000014f754: movsxd rdx, [rax+rdx*4]; add rdx, rax; notrack jmp rdx; 
0x0000000019414e: movsxd rdx, [rcx+r12*4]; xor r8d, r13d; add rdx, rcx; notrack jmp rdx; 
0x00000000080f12: movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x00000000052d77: movsxd rdx, [rdi+rdx*4]; add rdx, rdi; notrack jmp rdx; 
0x000000000d83b8: movsxd rdx, [rdi+rsi*4]; add rdx, rdi; notrack jmp rdx; 
0x000000000551bb: movsxd rdx, [rsi+rdx*4]; add rdx, rsi; cmp ecx, 0x2f; notrack jmp rdx; 
0x000000000407a9: movsxd rdx, [rsi+rdx*4]; add rdx, rsi; notrack jmp rdx; 
0x0000000013c534: movsxd rdx, eax; add rdi, rdx; mov [r9], rdi; ret; 
0x00000000080488: movsxd rdx, ebp; mov rdi, rbx; call qword ptr [r14+0x38]; 
0x00000000083c57: movsxd rdx, ebx; mov rsi, r13; mov rdi, r15; call qword ptr [rbp+0x38]; 
0x0000000013c965: movsxd rdx, ecx; ret; 
0x0000000013c368: movsxd rdx, edx; mov eax, r8d; mov byte ptr [rdi+rdx], 0x0; ret; 
0x00000000079f79: movsxd rdx, r13d; mov rdi, rbx; call qword ptr [r14+0x38]; 
0x0000000009e5aa: movsxd rsi, esi; movups [rbx+0x38], xmm0; mov [rbx], rsi; call rcx; 
0x000000000bbd73: movups [r11], xmm4; ret; 
0x000000000bbdfa: movups [r11], xmm8; ret; 
0x000000001506e9: movups [r8+0x20], xmm2; ret; 
0x000000001506b6: movups [r8+0x30], xmm0; ret; 
0x0000000014cf8e: movups [r8+0x8], xmm0; ret; 
0x000000001506ea: movups [rax+0x20], xmm2; ret; 
0x000000001506b7: movups [rax+0x30], xmm0; ret; 
0x00000000087cf9: movups [rax+0x40], xmm0; pop rbx; ret; 
0x0000000014cf8f: movups [rax+0x8], xmm0; ret; 
0x00000000141a97: movups [rax], xmm0; add rsp, 0x8; ret; 
0x00000000086ed1: movups [rax], xmm0; ret; 
0x000000000926ee: movups [rbp+0x38], xmm0; pop rbp; pop r12; ret; 
0x0000000012c6ed: movups [rbp-0x78], xmm1; call rax; 
0x0000000012c313: movups [rbp-0x78], xmm2; call rcx; 
0x0000000012c4bb: movups [rbp-0x78], xmm3; call r9; 
0x0000000012c405: movups [rbp-0x78], xmm4; call rax; 
0x0000000012c3a0: movups [rbp-0x78], xmm5; call rax; 
0x0000000012c915: movups [rbp-0x78], xmm6; call rax; 
0x0000000012c9e3: movups [rbp-0x78], xmm7; call rax; 
0x0000000012c58e: movups [rbp-0x78], xmm7; call rcx; 
0x0000000008e582: movups [rbx+0x18], xmm0; movups [rbx+0x28], xmm0; pop rbx; ret; 
0x0000000009e930: movups [rbx+0x18], xmm0; pop rbx; pop rbp; pop r12; ret; 
0x0000000008e586: movups [rbx+0x28], xmm0; pop rbx; ret; 
0x0000000009e5ae: movups [rbx+0x38], xmm0; mov [rbx], rsi; call rcx; 
0x0000000009e4d4: movups [rbx+0x38], xmm0; movsxd rdi, esi; mov [rbx], rdi; call rcx; 
0x00000000091f35: movups [rbx+0x38], xmm0; pop rbx; pop rbp; pop r12; ret; 
0x000000000919f5: movups [rbx+0x48], xmm0; pop rbx; ret; 
0x0000000008e57e: movups [rbx+0x8], xmm0; movups [rbx+0x18], xmm0; movups [rbx+0x28], xmm0; pop rbx; ret; 
0x0000000008e685: movups [rbx+0x8], xmm0; pop rbx; ret; 
0x00000000048037: movups [rbx], xmm0; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000000bbdfb: movups [rbx], xmm0; ret; 
0x000000000bbd74: movups [rbx], xmm4; ret; 
0x000000000bbd66: movups [rcx-0x10], xmm6; movups [rcx-0x20], xmm7; movups [rcx-0x30], xmm8; movups [r11], xmm4; ret; 
0x000000000bbd6a: movups [rcx-0x20], xmm7; movups [rcx-0x30], xmm8; movups [r11], xmm4; ret; 
0x000000000bbd6f: movups [rcx-0x30], xmm0; movups [r11], xmm4; ret; 
0x000000000bbd6e: movups [rcx-0x30], xmm8; movups [r11], xmm4; ret; 
0x0000000010c32d: movups [rdi+0x10], xmm0; movups [rdi+0x20], xmm0; movups [rdi+0x30], xmm0; movups [rdi+0x40], xmm0; ret; 
0x000000000bbcd4: movups [rdi+0x10], xmm1; movups [rdi+rdx-0x10], xmm2; movups [rdi+rdx-0x20], xmm3; ret; 
0x000000000bbdee: movups [rdi+0x10], xmm5; movups [rdi+0x20], xmm6; movups [rdi+0x30], xmm7; movups [r11], xmm8; ret; 
0x0000000015760d: movups [rdi+0x18], xmm0; ret; 
0x0000000010c331: movups [rdi+0x20], xmm0; movups [rdi+0x30], xmm0; movups [rdi+0x40], xmm0; ret; 
0x000000000bbdf2: movups [rdi+0x20], xmm6; movups [rdi+0x30], xmm7; movups [r11], xmm8; ret; 
0x0000000010c335: movups [rdi+0x30], xmm0; movups [rdi+0x40], xmm0; ret; 
0x000000000bbdf6: movups [rdi+0x30], xmm7; movups [r11], xmm8; ret; 
0x00000000043b70: movups [rdi+0x38], xmm0; movups [rdi+0x48], xmm0; movups [rdi+0x58], xmm0; movups [rdi+0x68], xmm0; ret; 
0x0000000010c339: movups [rdi+0x40], xmm0; ret; 
0x00000000043b74: movups [rdi+0x48], xmm0; movups [rdi+0x58], xmm0; movups [rdi+0x68], xmm0; ret; 
0x00000000043b76: movups [rdi+0x58], xmm0; movups [rdi+0x68], xmm0; ret; 
0x00000000043b7c: movups [rdi+0x68], xmm0; ret; 
0x0000000010c770: movups [rdi+0x68], xmm6; movdqu xmm7, [rsi+0x70]; movups [rdi+0x78], xmm7; ret; 
0x0000000010c779: movups [rdi+0x78], xmm7; ret; 
0x00000000091929: movups [rdi+0x8], xmm0; ret; 
0x0000000010d102: movups [rdi+0xe8], xmm6; movdqu xmm7, [rsi+0x70]; movups [rdi+0xf8], xmm7; ret; 
0x0000000010d10e: movups [rdi+0xf8], xmm7; ret; 
0x0000000013c653: movups [rdi+rdx+0x8], xmm0; ret; 
0x000000000bbb16: movups [rdi+rdx-0x10], xmm1; ret; 
0x000000000bbcd8: movups [rdi+rdx-0x10], xmm2; movups [rdi+rdx-0x20], xmm3; ret; 
0x000000000bbcab: movups [rdi+rdx-0x10], xmm4; movups [rdi+rdx-0x20], xmm5; movups [rdi+rdx-0x30], xmm6; movups [rdi+rdx-0x40], xmm7; ret; 
0x000000000bbcdd: movups [rdi+rdx-0x20], xmm3; ret; 
0x000000000bbcb0: movups [rdi+rdx-0x20], xmm5; movups [rdi+rdx-0x30], xmm6; movups [rdi+rdx-0x40], xmm7; ret; 
0x000000000bbcb5: movups [rdi+rdx-0x30], xmm6; movups [rdi+rdx-0x40], xmm7; ret; 
0x000000000bbcba: movups [rdi+rdx-0x40], xmm7; ret; 
0x00000000041f88: movups [rdi], xmm0; and rdx, rax; movq xmm0, rdx; ret; 
0x00000000057dd4: movups [rdi], xmm0; mov [rdx], eax; mov eax, 0x2; ret; 
0x00000000042334: movups [rdi], xmm0; movd xmm0, esi; ret; 
0x000000000bbcd1: movups [rdi], xmm0; movups [rdi+0x10], xmm1; movups [rdi+rdx-0x10], xmm2; movups [rdi+rdx-0x20], xmm3; ret; 
0x000000000bbb13: movups [rdi], xmm0; movups [rdi+rdx-0x10], xmm1; ret; 
0x00000000043f65: movups [rdi], xmm0; ret; 
0x000000000271ae: movups [rdx+0x48], xmm0; ret; 
0x0000000014cfa3: movups [rdx], xmm1; ret; 
0x0000000014fdeb: movups [rdx], xmm2; ret; 
0x000000001506fb: movups [rdx], xmm3; ret; 
0x000000001506db: movups [rdx], xmm4; ret; 
0x0000000010c720: movups [rsi+0x60], xmm6; movdqu xmm7, [rdi+0x78]; movups [rsi+0x70], xmm7; ret; 
0x0000000010d075: movups [rsi+0x60], xmm6; movdqu xmm7, [rdi+0xf8]; movups [rsi+0x70], xmm7; ret; 
0x0000000010c729: movups [rsi+0x70], xmm7; ret; 
0x00000000100486: movups [rsi+0x8], xmm0; ret; 
0x0000000014824b: movups [rsi+0x8], xmm1; ret; 
0x0000000014fced: movups [rsi], xmm0; mov rax, [rax+0x40]; mov [rsi+0x10], rax; ret; 
0x0000000015062b: movups [rsi], xmm0; mov rax, [rax+0x50]; mov [rsi+0x10], rax; ret; 
0x0000000014ceb0: movups [rsi], xmm0; mov rax, [rax+0xa0]; mov [rsi+0x10], rax; ret; 
0x000000000479f3: movups [rsi], xmm0; sub ecx, 0x1; jns short 0x00000000000479b9; xor eax, eax; ret; 
0x000000001138dd: movups [rsp+0x11], xmm0; syscall; 
0x000000001538ef: movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x00000000157a09: movups [rsp+0x18], xmm0; call r8; 
0x00000000153bf3: movups [rsp+0x18], xmm1; movups [rsp+0x38], xmm0; call qword ptr [rax+0x18]; 
0x00000000153bf8: movups [rsp+0x38], xmm0; call qword ptr [rax+0x18]; 
0x0000000004317c: movups [rsp+0x78], xmm6; movups [rsp+0x88], xmm7; mov r10d, 0x8; mov eax, 0xd; syscall; 
0x00000000043181: movups [rsp+0x88], xmm7; mov r10d, 0x8; mov eax, 0xd; syscall; 
0x000000001149ed: movups [rsp+0x8], xmm0; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000153e19: movups [rsp+0xb8], xmm3; movups [rsp+0xd8], xmm0; call rax; 
0x00000000153eb5: movups [rsp+0xb8], xmm5; call rax; 
0x0000000010c954: movups [rsp+0xc8], xmm0; mov [rsp+0xe8], eax; mov eax, 0xe; syscall; 
0x00000000153e21: movups [rsp+0xd8], xmm0; call rax; 
0x000000000420af: movups xmm0, [rip+0x17ac2a]; orpd xmm1, [rip+0x17a642]; mulsd xmm0, xmm1; ret; 
0x00000000042089: movups xmm0, [rip+0x17ac58]; orpd xmm1, [rip+0x17a678]; mulsd xmm0, xmm1; ret; 
0x0000000019717d: movups xmm0, [rip+0x261fc]; divss xmm0, [rip+0x27508]; ret; 
0x000000000bbb0b: movups xmm0, [rsi]; movups xmm1, [rsi+rdx-0x10]; movups [rdi], xmm0; movups [rdi+rdx-0x10], xmm1; ret; 
0x000000000d02cd: movups xmm0, [rsp-0x10]; ret; 
0x000000000bbb0e: movups xmm1, [rsi+rdx-0x10]; movups [rdi], xmm0; movups [rdi+rdx-0x10], xmm1; ret; 
0x000000000422e5: movups xmm3, [rip+0x1670f4]; andps xmm0, xmm3; andnps xmm3, xmm1; orps xmm0, xmm3; ret; 
0x00000000024cea: movzx eax, al; add eax, 0x1; push rax; call rbx; 
0x0000000014dd46: movzx eax, al; add eax, 0x1; ret; 
0x00000000157aaf: movzx eax, al; add rsp, 0x18; ret; 
0x0000000010fbc5: movzx eax, al; add rsp, 0x58; ret; 
0x0000000014a064: movzx eax, al; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000000ce0c3: movzx eax, al; lea eax, [rax+rax-0x1]; ret; 
0x000000000e522e: movzx eax, al; lea rax, [rax+rax-0x1]; ret; 
0x000000000901d2: movzx eax, al; movsxd rax, [r10+rax*4]; add rax, r10; notrack jmp rax; 
0x00000000090204: movzx eax, al; movsxd rax, [r11+rax*4]; add rax, r11; notrack jmp rax; 
0x00000000109108: movzx eax, al; movsxd rax, [r12+rax*4]; add rax, r12; notrack jmp rax; 
0x000000000d60ff: movzx eax, al; movsxd rax, [r14+rax*4]; add rax, r14; notrack jmp rax; 
0x0000000010b14e: movzx eax, al; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x000000000d4f12: movzx eax, al; movsxd rax, [rdi+rax*4]; add rax, rdi; notrack jmp rax; 
0x00000000064238: movzx eax, al; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000080657: movzx eax, al; movsxd rax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x00000000062e9b: movzx eax, al; neg eax; pop rbp; ret; 
0x0000000002470c: movzx eax, al; neg eax; ret; 
0x00000000149c8d: movzx eax, al; pop r12; ret; 
0x00000000148b33: movzx eax, al; pop rbp; pop r12; ret; 
0x0000000008e00d: movzx eax, al; pop rbx; neg eax; ret; 
0x00000000149ffa: movzx eax, al; pop rbx; pop rbp; ret; 
0x00000000043c5f: movzx eax, al; ret; 
0x000000000ac8e4: movzx eax, al; sar rdx, cl; movzx edx, dl; sub eax, edx; ret; 
0x00000000094cc1: movzx eax, al; sub eax, 0x2; add rsp, 0x8; ret; 
0x000000000340b9: movzx eax, ax; ret; 
0x00000000090e13: movzx eax, bl; pop rbx; pop rbp; pop r12; ret; 
0x000000001563c0: movzx eax, bpl; mov rsi, rsp; mov [rsp], rax; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x00000000077b94: movzx eax, byte ptr [r11+rax]; movsxd rax, [rdi+rax*4]; add rax, rbx; jmp rax; 
0x00000000077b36: movzx eax, byte ptr [r11+rax]; movsxd rax, [rsi+rax*4]; add rax, rbx; jmp rax; 
0x000000000ec495: movzx eax, byte ptr [r9+rax]; mov byte ptr [rdi+0x8], 0x1; mov [rdi], al; mov eax, 0x1; ret; 
0x00000000183de2: movzx eax, byte ptr [rax+rcx+0x40]; movzx edx, byte ptr [rdx+rcx+0x40]; sub eax, edx; vzeroupper; ret; 
0x00000000183cfc: movzx eax, byte ptr [rax+rcx+0x60]; movzx edx, byte ptr [rdx+rcx+0x60]; sub eax, edx; vzeroupper; ret; 
0x000000000aa57d: movzx eax, byte ptr [rax+rcx]; movzx edx, byte ptr [rdx+rcx]; sub eax, edx; ret; 
0x00000000183c97: movzx eax, byte ptr [rax+rcx]; movzx edx, byte ptr [rdx+rcx]; sub eax, edx; vzeroupper; ret; 
0x00000000183cc0: movzx eax, byte ptr [rax+rdi+0x20]; movzx edx, byte ptr [rdx+rdi+0x20]; sub eax, edx; vzeroupper; ret; 
0x00000000183ce0: movzx eax, byte ptr [rax+rdi+0x40]; movzx edx, byte ptr [rdx+rdi+0x40]; sub eax, edx; vzeroupper; ret; 
0x00000000184147: movzx eax, byte ptr [rax+rdi]; movzx edx, byte ptr [rdx+rdi]; sub eax, edx; vzeroupper; ret; 
0x000000000c6ac2: movzx eax, byte ptr [rax+rdx]; cmp r8d, 0xff; je short 0x00000000000c6ad3; mov eax, r8d; ret; 
0x0000000014adb2: movzx eax, byte ptr [rax+rdx]; mov [rdi+0x7], al; ret; 
0x00000000091b70: movzx eax, byte ptr [rax]; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000008df86: movzx eax, byte ptr [rax]; ret; 
0x00000000077b95: movzx eax, byte ptr [rbx+rax]; movsxd rax, [rdi+rax*4]; add rax, rbx; jmp rax; 
0x00000000077b37: movzx eax, byte ptr [rbx+rax]; movsxd rax, [rsi+rax*4]; add rax, rbx; jmp rax; 
0x000000000ec496: movzx eax, byte ptr [rcx+rax]; mov byte ptr [rdi+0x8], 0x1; mov [rdi], al; mov eax, 0x1; ret; 
0x0000000013b8b0: movzx eax, byte ptr [rdi+0x1]; lea rax, [rdi+rax+0x2]; cmp rdx, rax; sbb eax, eax; ret; 
0x0000000013c74a: movzx eax, byte ptr [rdi+0x1]; shl eax, 0x3; shr rax, 0x4; and eax, 0x7f; ret; 
0x00000000102ac0: movzx eax, byte ptr [rdi+0x9]; and eax, 0xf; ret; 
0x00000000184f74: movzx eax, byte ptr [rdi+rcx+0x20]; movzx edx, byte ptr [rsi+rcx+0x20]; sub eax, edx; vzeroupper; ret; 
0x00000000184f94: movzx eax, byte ptr [rdi+rcx+0x40]; movzx edx, byte ptr [rsi+rcx+0x40]; sub eax, edx; vzeroupper; ret; 
0x00000000184f5a: movzx eax, byte ptr [rdi+rcx+0x60]; movzx edx, byte ptr [rsi+rcx+0x60]; sub eax, edx; vzeroupper; ret; 
0x0000000017df3b: movzx eax, byte ptr [rdi+rcx]; movzx edx, byte ptr [rsi+rcx]; sub eax, edx; ret; 
0x00000000184ce4: movzx eax, byte ptr [rdi+rcx]; movzx edx, byte ptr [rsi+rcx]; sub eax, edx; vzeroupper; ret; 
0x00000000183b34: movzx eax, byte ptr [rdi+rdx+0x20]; movzx edx, byte ptr [rsi+rdx+0x20]; sub eax, edx; vzeroupper; ret; 
0x00000000183b54: movzx eax, byte ptr [rdi+rdx+0x40]; movzx edx, byte ptr [rsi+rdx+0x40]; sub eax, edx; vzeroupper; ret; 
0x00000000183b74: movzx eax, byte ptr [rdi+rdx+0x60]; movzx edx, byte ptr [rsi+rdx+0x60]; sub eax, edx; vzeroupper; ret; 
0x000000000a1419: movzx eax, byte ptr [rdi+rdx]; mov [rsi+rdx], cl; mov [rsi+rdx+0x1], al; jne short 0x00000000000a1410; ret; 
0x000000000aa413: movzx eax, byte ptr [rdi+rdx]; movzx edx, byte ptr [rsi+rdx]; sub eax, edx; ret; 
0x00000000183b1a: movzx eax, byte ptr [rdi+rdx]; movzx edx, byte ptr [rsi+rdx]; sub eax, edx; vzeroupper; ret; 
0x000000000aa3a8: movzx eax, byte ptr [rdi+rdx]; sub eax, ecx; ret; 
0x00000000191fa0: movzx eax, byte ptr [rdi-0x10]; movzx edx, byte ptr [rsi-0x10]; sub eax, edx; ret; 
0x0000000019235a: movzx eax, byte ptr [rdi-0x1]; cmp al, [rsi-0x1]; jne 0x00000000001924d5; xor eax, eax; ret; 
0x000000001924b2: movzx eax, byte ptr [rdi-0x1]; cmp al, [rsi-0x1]; jne short 0x00000000001924d5; xor eax, eax; ret; 
0x0000000018e330: movzx eax, byte ptr [rdi-0x1]; movzx ecx, byte ptr [rsi-0x1]; sub eax, ecx; ret; 
0x0000000018e0e3: movzx eax, byte ptr [rdi-0x1]; movzx edx, byte ptr [rsi-0x1]; sub eax, edx; ret; 
0x00000000191f87: movzx eax, byte ptr [rdi-0x9]; movzx edx, byte ptr [rsi-0x9]; sub eax, edx; ret; 
0x00000000192000: movzx eax, byte ptr [rdi-0xa]; movzx edx, byte ptr [rsi-0xa]; sub eax, edx; ret; 
0x00000000191ff0: movzx eax, byte ptr [rdi-0xb]; movzx edx, byte ptr [rsi-0xb]; sub eax, edx; ret; 
0x00000000191fe0: movzx eax, byte ptr [rdi-0xc]; movzx edx, byte ptr [rsi-0xc]; sub eax, edx; ret; 
0x00000000191fd0: movzx eax, byte ptr [rdi-0xd]; movzx edx, byte ptr [rsi-0xd]; sub eax, edx; ret; 
0x00000000191fc0: movzx eax, byte ptr [rdi-0xe]; movzx edx, byte ptr [rsi-0xe]; sub eax, edx; ret; 
0x00000000191fb0: movzx eax, byte ptr [rdi-0xf]; movzx edx, byte ptr [rsi-0xf]; sub eax, edx; ret; 
0x000000001460db: movzx eax, byte ptr [rdi]; add eax, ecx; sub rdx, 0x1; jne short 0x0000000000146068; ret; 
0x00000000184d60: movzx eax, byte ptr [rdi]; movzx ecx, byte ptr [rsi]; sub eax, ecx; ret; 
0x000000000ac8c1: movzx eax, byte ptr [rdi]; movzx edx, byte ptr [rsi]; sub eax, edx; ret; 
0x000000000aa3c3: movzx eax, byte ptr [rdi]; sub eax, ecx; ret; 
0x00000000184313: movzx eax, byte ptr [rdi]; sub eax, ecx; vzeroupper; ret; 
0x000000000748f1: movzx eax, byte ptr [rdx+rax]; lea rdx, [rip-0x4a2]; movsxd rax, [rcx+rax*4]; add rax, rdx; jmp rax; 
0x00000000157390: movzx eax, byte ptr [rsi]; lea rsi, [rsp+0x4]; mov [rsp+0x4], eax; mov rax, [rdi+0x8]; call qword ptr [rax+0x48]; 
0x000000000a8bbf: movzx eax, byte ptr [rsp+0xe]; mov [rdi+0x6], al; lea rax, [rdi+rdx-0x1]; ret; 
0x00000000199070: movzx eax, byte ptr [rsp+0xf]; add rsp, 0x10; pop rbx; ret; 
0x000000000a8b58: movzx eax, byte ptr [rsp-0x6]; mov [rdi+0x2], al; lea rax, [rdi+rdx-0x1]; ret; 
0x000000000a8b86: movzx eax, byte ptr [rsp-0xc]; mov [rdi+0x4], al; lea rax, [rdi+rdx-0x1]; ret; 
0x000000001563c1: movzx eax, ch; mov rsi, rsp; mov [rsp], rax; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x000000000bc170: movzx eax, cl; pop rbx; ret; 
0x000000000bbf81: movzx eax, dh; mov rdx, rdi; rep stosb [rdi]; mov rax, rdx; ret; 
0x00000000027225: movzx eax, dh; test sil, sil; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x000000000bbf80: movzx eax, sil; mov rdx, rdi; rep stosb [rdi]; mov rax, rdx; ret; 
0x00000000027224: movzx eax, sil; test sil, sil; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x0000000014cffd: movzx eax, word ptr [r8+0x88]; mov [rdx+0x6c], ax; mov eax, 0x1; ret; 
0x0000000014cffe: movzx eax, word ptr [rax+0x88]; mov [rdx+0x6c], ax; mov eax, 0x1; ret; 
0x000000000344b7: movzx eax, word ptr [rax+rdi*2+0x100]; and eax, esi; ret; 
0x000000000341f2: movzx eax, word ptr [rax+rdi*2]; and ax, 0x1000; movzx eax, ax; ret; 
0x000000000341d2: movzx eax, word ptr [rax+rdi*2]; and ax, 0x100; movzx eax, ax; ret; 
0x000000000341b2: movzx eax, word ptr [rax+rdi*2]; and ax, 0x2000; movzx eax, ax; ret; 
0x00000000034132: movzx eax, word ptr [rax+rdi*2]; and ax, 0x200; movzx eax, ax; ret; 
0x00000000034172: movzx eax, word ptr [rax+rdi*2]; and ax, 0x4000; movzx eax, ax; ret; 
0x000000000340d2: movzx eax, word ptr [rax+rdi*2]; and ax, 0x400; movzx eax, ax; ret; 
0x00000000034152: movzx eax, word ptr [rax+rdi*2]; and ax, 0x8000; movzx eax, ax; ret; 
0x00000000034112: movzx eax, word ptr [rax+rdi*2]; and ax, 0x800; movzx eax, ax; ret; 
0x00000000034272: movzx eax, word ptr [rax+rdi*2]; and eax, 0x1; ret; 
0x000000000340f2: movzx eax, word ptr [rax+rdi*2]; and eax, 0x2; movzx eax, ax; ret; 
0x00000000034192: movzx eax, word ptr [rax+rdi*2]; and eax, 0x4; movzx eax, ax; ret; 
0x000000000340b2: movzx eax, word ptr [rax+rdi*2]; and eax, 0x8; movzx eax, ax; ret; 
0x0000000012cee6: movzx eax, word ptr [rax+rdx*2]; shr ax, 0xe; and eax, 0x1; ret; 
0x0000000010c784: movzx eax, word ptr [rdi]; mov [rsi], ax; xor eax, eax; ret; 
0x00000000157270: movzx eax, word ptr [rsi]; lea rsi, [rsp+0x4]; mov [rsp+0x4], eax; mov rax, [rdi+0x8]; call qword ptr [rax+0x48]; 
0x00000000156290: movzx eax, word ptr [rsi]; mov rsi, rsp; mov [rsp], rax; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x000000000a8b9e: movzx eax, word ptr [rsp-0x14]; mov [rdi+0x4], ax; lea rax, [rdi+rdx-0x1]; ret; 
0x000000000eff92: movzx ebx, bl; movsxd rax, [rdx+rbx*4]; add rax, rdx; notrack jmp rax; 
0x00000000193f3d: movzx ecx, al; add rdx, r10; notrack jmp rdx; 
0x0000000007f36d: movzx ecx, byte ptr [r10+rax]; lea rax, [rip+0x12f247]; movsxd rax, [rax+rcx*4]; add rax, rdx; jmp rax; 
0x0000000007e03e: movzx ecx, byte ptr [r10+rax]; lea rax, [rip+0x1304f6]; movsxd rax, [rax+rcx*4]; add rax, rdx; jmp rax; 
0x0000000007786f: movzx ecx, byte ptr [r11+rax]; lea rax, [rip+0x136845]; movsxd rax, [rax+rcx*4]; add rax, rbx; jmp rax; 
0x000000000fe03b: movzx ecx, byte ptr [r14+0x30]; movsxd rcx, [rsi+rcx*4]; add rcx, rsi; notrack jmp rcx; 
0x00000000077870: movzx ecx, byte ptr [rbx+rax]; lea rax, [rip+0x136845]; movsxd rax, [rax+rcx*4]; add rax, rbx; jmp rax; 
0x000000000fe7a5: movzx ecx, byte ptr [rdi+0x8]; movsxd rcx, [r9+rcx*4]; add rcx, r9; notrack jmp rcx; 
0x0000000007f36e: movzx ecx, byte ptr [rdx+rax]; lea rax, [rip+0x12f247]; movsxd rax, [rax+rcx*4]; add rax, rdx; jmp rax; 
0x0000000007e03f: movzx ecx, byte ptr [rdx+rax]; lea rax, [rip+0x1304f6]; movsxd rax, [rax+rcx*4]; add rax, rdx; jmp rax; 
0x000000000fe03c: movzx ecx, byte ptr [rsi+0x30]; movsxd rcx, [rsi+rcx*4]; add rcx, rsi; notrack jmp rcx; 
0x000000000bb4fa: movzx ecx, byte ptr [rsi+rdx+0x3]; test cl, cl; jne short 0x00000000000bb4f0; ret; 
0x000000000bb5aa: movzx ecx, byte ptr [rsi+rdx+0x3]; test cl, cl; jne short 0x00000000000bb5a0; ret; 
0x000000000bb86a: movzx ecx, byte ptr [rsi+rdx+0x3]; test cl, cl; jne short 0x00000000000bb860; sub rax, 0x1; ret; 
0x000000000aa3a4: movzx ecx, byte ptr [rsi+rdx]; movzx eax, byte ptr [rdi+rdx]; sub eax, ecx; ret; 
0x0000000018e334: movzx ecx, byte ptr [rsi-0x1]; sub eax, ecx; ret; 
0x000000000bbc2c: movzx ecx, byte ptr [rsi]; mov [rdi], cl; ret; 
0x000000000aa3c0: movzx ecx, byte ptr [rsi]; movzx eax, byte ptr [rdi]; sub eax, ecx; ret; 
0x00000000184310: movzx ecx, byte ptr [rsi]; movzx eax, byte ptr [rdi]; sub eax, ecx; vzeroupper; ret; 
0x00000000184d63: movzx ecx, byte ptr [rsi]; sub eax, ecx; ret; 
0x00000000193f3c: movzx ecx, r8b; add rdx, r10; notrack jmp rdx; 
0x000000000bbc50: movzx ecx, word ptr [rsi+rdx-0x2]; movzx esi, word ptr [rsi]; mov [rdi+rdx-0x2], cx; mov [rdi], si; ret; 
0x00000000189080: movzx ecx, word ptr [rsi]; mov [rdi], cx; mov byte ptr [rdi+0x2], 0x0; vzeroupper; ret; 
0x0000000012fb20: movzx edi, bh; and edx, 0xc0000000; cmp edx, 0x80000000; cmovne eax, edi; ret; 
0x000000000fce1f: movzx edi, bh; movsxd rax, [r10+r15*4]; add rax, r10; notrack jmp rax; 
0x000000000fccbd: movzx edi, bh; movsxd rax, [r14+r15*4]; add rax, r14; notrack jmp rax; 
0x000000000d833b: movzx edi, cl; movsxd rdx, [r9+rdi*4]; add rdx, r9; notrack jmp rdx; 
0x00000000120def: movzx edi, di; lea rax, [rip+0x91887]; mov eax, [rax+rdi*4]; ret; 
0x0000000012fb1f: movzx edi, dil; and edx, 0xc0000000; cmp edx, 0x80000000; cmovne eax, edi; ret; 
0x0000000011eed8: movzx edx, bh; shr rax, 0xc; xor al, al; or eax, edx; ret; 
0x0000000013c488: movzx edx, byte ptr [r10+0x1]; add r10, 0x2; mov [r8], edx; mov [r9], r10; ret; 
0x000000000787d7: movzx edx, byte ptr [r11+rax]; lea rax, [rip+0x1359dd]; movsxd rax, [rax+rdx*4]; add rax, rbx; jmp rax; 
0x00000000077eb3: movzx edx, byte ptr [r11+rax]; lea rax, [rip+0x136301]; movsxd rax, [rax+rdx*4]; add rax, rbx; jmp rax; 
0x000000000778ca: movzx edx, byte ptr [r11+rax]; lea rax, [rip+0x13686a]; movsxd rax, [rax+rdx*4]; add rax, rbx; jmp rax; 
0x000000000787d8: movzx edx, byte ptr [rbx+rax]; lea rax, [rip+0x1359dd]; movsxd rax, [rax+rdx*4]; add rax, rbx; jmp rax; 
0x00000000077eb4: movzx edx, byte ptr [rbx+rax]; lea rax, [rip+0x136301]; movsxd rax, [rax+rdx*4]; add rax, rbx; jmp rax; 
0x000000000778cb: movzx edx, byte ptr [rbx+rax]; lea rax, [rip+0x13686a]; movsxd rax, [rax+rdx*4]; add rax, rbx; jmp rax; 
0x0000000009c298: movzx edx, byte ptr [rcx+rax]; cmp dl, r8b; jne short 0x000000000009c288; sub rax, 0x10; ret; 
0x00000000040fe8: movzx edx, byte ptr [rcx]; test dl, dl; jne short 0x0000000000040fc8; ret; 
0x0000000014adab: movzx edx, byte ptr [rdi+0x7]; and edx, 0x7f; movzx eax, byte ptr [rax+rdx]; mov [rdi+0x7], al; ret; 
0x0000000013c489: movzx edx, byte ptr [rdx+0x1]; add r10, 0x2; mov [r8], edx; mov [r9], r10; ret; 
0x00000000183de6: movzx edx, byte ptr [rdx+rcx+0x40]; sub eax, edx; vzeroupper; ret; 
0x00000000183d01: movzx edx, byte ptr [rdx+rcx+0x60]; sub eax, edx; vzeroupper; ret; 
0x000000000aa581: movzx edx, byte ptr [rdx+rcx]; sub eax, edx; ret; 
0x00000000183c9b: movzx edx, byte ptr [rdx+rcx]; sub eax, edx; vzeroupper; ret; 
0x00000000183cc5: movzx edx, byte ptr [rdx+rdi+0x20]; sub eax, edx; vzeroupper; ret; 
0x00000000183ce4: movzx edx, byte ptr [rdx+rdi+0x40]; sub eax, edx; vzeroupper; ret; 
0x0000000018414b: movzx edx, byte ptr [rdx+rdi]; sub eax, edx; vzeroupper; ret; 
0x000000000bb71a: movzx edx, byte ptr [rsi+rax+0x3]; test dl, dl; jne short 0x00000000000bb710; lea rax, [rcx-0x1]; ret; 
0x00000000184f79: movzx edx, byte ptr [rsi+rcx+0x20]; sub eax, edx; vzeroupper; ret; 
0x00000000184f98: movzx edx, byte ptr [rsi+rcx+0x40]; sub eax, edx; vzeroupper; ret; 
0x00000000184f5f: movzx edx, byte ptr [rsi+rcx+0x60]; sub eax, edx; vzeroupper; ret; 
0x0000000017df3f: movzx edx, byte ptr [rsi+rcx]; sub eax, edx; ret; 
0x00000000184ce8: movzx edx, byte ptr [rsi+rcx]; sub eax, edx; vzeroupper; ret; 
0x00000000183b39: movzx edx, byte ptr [rsi+rdx+0x20]; sub eax, edx; vzeroupper; ret; 
0x00000000183b58: movzx edx, byte ptr [rsi+rdx+0x40]; sub eax, edx; vzeroupper; ret; 
0x00000000183b79: movzx edx, byte ptr [rsi+rdx+0x60]; sub eax, edx; vzeroupper; ret; 
0x000000000aa417: movzx edx, byte ptr [rsi+rdx]; sub eax, edx; ret; 
0x00000000183b1e: movzx edx, byte ptr [rsi+rdx]; sub eax, edx; vzeroupper; ret; 
0x00000000191fa4: movzx edx, byte ptr [rsi-0x10]; sub eax, edx; ret; 
0x0000000016d720: movzx edx, byte ptr [rsi-0x1]; mov [rdi-0x1], dl; ret; 
0x0000000018e0e7: movzx edx, byte ptr [rsi-0x1]; sub eax, edx; ret; 
0x00000000191f8b: movzx edx, byte ptr [rsi-0x9]; sub eax, edx; ret; 
0x00000000192004: movzx edx, byte ptr [rsi-0xa]; sub eax, edx; ret; 
0x00000000191ff4: movzx edx, byte ptr [rsi-0xb]; sub eax, edx; ret; 
0x00000000191fe4: movzx edx, byte ptr [rsi-0xc]; sub eax, edx; ret; 
0x00000000191fd2: movzx edx, byte ptr [rsi-0xd]; sub eax, edx; ret; 
0x00000000191fd4: movzx edx, byte ptr [rsi-0xd]; sub eax, edx; ret; 
0x00000000191fc4: movzx edx, byte ptr [rsi-0xe]; sub eax, edx; ret; 
0x00000000191fc2: movzx edx, byte ptr [rsi-0xe]; sub eax, edx; ret; 
0x00000000191fb4: movzx edx, byte ptr [rsi-0xf]; sub eax, edx; ret; 
0x0000000018b1d0: movzx edx, byte ptr [rsi]; mov [rdi], dl; lea rax, [rdi+0x1]; vzeroupper; ret; 
0x000000001898f0: movzx edx, byte ptr [rsi]; mov [rdi], dl; mov byte ptr [rdi+0x1], 0x0; vzeroupper; ret; 
0x0000000016de00: movzx edx, byte ptr [rsi]; mov [rdi], dl; ret; 
0x0000000018a4a0: movzx edx, byte ptr [rsi]; mov [rdi], dl; vzeroupper; ret; 
0x000000000ac8c4: movzx edx, byte ptr [rsi]; sub eax, edx; ret; 
0x000000000a8a22: movzx edx, byte ptr [rsp+0x16]; mov [rdi+0x6], dl; ret; 
0x000000000a8adf: movzx edx, byte ptr [rsp+0xe]; mov [rax+0x6], dl; ret; 
0x000000000a8a90: movzx edx, byte ptr [rsp-0x6]; mov [rax+0x2], dl; ret; 
0x000000000a89cb: movzx edx, byte ptr [rsp-0x6]; mov [rdi+0x2], dl; ret; 
0x000000000a8aae: movzx edx, byte ptr [rsp-0xc]; mov [rax+0x4], dl; ret; 
0x000000000a89e9: movzx edx, byte ptr [rsp-0xc]; mov [rdi+0x4], dl; ret; 
0x0000000011eed7: movzx edx, dil; shr rax, 0xc; xor al, al; or eax, edx; ret; 
0x00000000040aa9: movzx edx, dl; movsxd r10, [r11+r10*4]; add r10, r11; notrack jmp r10; 
0x00000000064958: movzx edx, dl; movsxd rax, [rcx+rdx*4]; add rax, rcx; notrack jmp rax; 
0x00000000052d74: movzx edx, dl; movsxd rdx, [rdi+rdx*4]; add rdx, rdi; notrack jmp rdx; 
0x000000000ac8ea: movzx edx, dl; sub eax, edx; ret; 
0x0000000018a4c3: movzx edx, word ptr [rsi+r8-0x2]; mov [rdi], cx; mov [rdi+r8-0x2], dx; vzeroupper; ret; 
0x0000000018a4c4: movzx edx, word ptr [rsi+rax-0x2]; mov [rdi], cx; mov [rdi+r8-0x2], dx; vzeroupper; ret; 
0x0000000016d6a0: movzx edx, word ptr [rsi-0x2]; mov [rdi-0x2], dx; ret; 
0x0000000018ab00: movzx edx, word ptr [rsi]; mov [rdi], dx; lea rax, [rdi+0x1]; vzeroupper; ret; 
0x0000000018b1e0: movzx edx, word ptr [rsi]; mov [rdi], dx; lea rax, [rdi+0x2]; vzeroupper; ret; 
0x00000000189900: movzx edx, word ptr [rsi]; mov [rdi], dx; mov byte ptr [rdi+0x2], 0x0; vzeroupper; ret; 
0x0000000016dd90: movzx edx, word ptr [rsi]; mov [rdi], dx; ret; 
0x00000000189070: movzx edx, word ptr [rsi]; mov [rdi], dx; vzeroupper; ret; 
0x000000000a8a19: movzx edx, word ptr [rsp+0x14]; mov [rdi+0x4], dx; movzx edx, byte ptr [rsp+0x16]; mov [rdi+0x6], dl; ret; 
0x000000000a8ad6: movzx edx, word ptr [rsp+0xc]; mov [rax+0x4], dx; movzx edx, byte ptr [rsp+0xe]; mov [rax+0x6], dl; ret; 
0x000000000a8a01: movzx edx, word ptr [rsp+0xc]; mov [rdi+0x4], dx; ret; 
0x000000000a8ac6: movzx edx, word ptr [rsp-0x14]; mov [rax+0x4], dx; ret; 
0x000000000a8a88: movzx edx, word ptr [rsp-0x8]; mov [rax], dx; movzx edx, byte ptr [rsp-0x6]; mov [rax+0x2], dl; ret; 
0x000000000bcf94: movzx esi, bl; call rbp; 
0x000000000a8639: movzx esi, byte ptr [rcx]; test sil, sil; jne short 0x00000000000a8630; mov [rdx], rcx; ret; 
0x0000000009204e: movzx esi, byte ptr [rsi]; call qword ptr [rax+0x18]; 
0x000000000d83b5: movzx esi, cl; movsxd rdx, [rdi+rsi*4]; add rdx, rdi; notrack jmp rdx; 
0x0000000012fb88: movzx esi, dh; mov eax, edi; or eax, esi; bswap eax; ret; 
0x000000000f00e3: movzx esi, dh; movsxd rax, [rdx+r14*4]; add rax, rdx; notrack jmp rax; 
0x000000000fcf7a: movzx esi, dh; movsxd rax, [rdx+rsi*4]; add rax, rdx; notrack jmp rax; 
0x0000000012fb6b: movzx esi, si; mov eax, edi; or eax, esi; bswap eax; ret; 
0x0000000012fb87: movzx esi, sil; mov eax, edi; or eax, esi; bswap eax; ret; 
0x000000000fcf79: movzx esi, sil; movsxd rax, [rdx+rsi*4]; add rax, rdx; notrack jmp rax; 
0x000000000bbc55: movzx esi, word ptr [rsi]; mov [rdi+rdx-0x2], cx; mov [rdi], si; ret; 
0x0000000006461f: movzx esp, ah; movsxd rax, [rdi+r12*4]; add rax, rdi; notrack jmp rax; 
0x00000000040aa8: movzx r10d, r10b; movsxd r10, [r11+r10*4]; add r10, r11; notrack jmp r10; 
0x0000000006461e: movzx r12d, r12b; movsxd rax, [rdi+r12*4]; add rax, rdi; notrack jmp rax; 
0x000000000f00e2: movzx r14d, r14b; movsxd rax, [rdx+r14*4]; add rax, rdx; notrack jmp rax; 
0x000000000fce1e: movzx r15d, r15b; movsxd rax, [r10+r15*4]; add rax, r10; notrack jmp rax; 
0x000000000fccbc: movzx r15d, r15b; movsxd rax, [r14+r15*4]; add rax, r14; notrack jmp rax; 
0x000000001842ba: movzx r8d, byte ptr [r8+rcx]; movzx edx, byte ptr [rdx+rcx]; sub eax, edx; vzeroupper; ret; 
0x000000000c6ac1: movzx r8d, byte ptr [rax+rdx]; cmp r8d, 0xff; je short 0x00000000000c6ad3; mov eax, r8d; ret; 
0x000000001483d5: mul dword ptr [rax-0x74b70013]; or [r14+0x8], r15b; mov rdi, rbp; call qword ptr [rax+0x30]; 
0x00000000167285: mul dword ptr [rbp+rax]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000acd0d: mul dword ptr [rdx]; adc [rax], al; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000018cea0: mul dword ptr [rip+0x11111111]; bsr eax, eax; lea rax, [rdi+rax-0x20]; vzeroupper; ret; 
0x0000000004211e: mulps xmm0, [rip+0x17abcb]; ret; 
0x00000000042483: mulps xmm0, [rip+0x17af06]; ret; 
0x00000000042438: mulps xmm0, [rip+0x17af49]; ret; 
0x00000000042413: mulps xmm0, [rip+0x17af72]; ret; 
0x00000000042099: mulps xmm0, xmm1; ret; 
0x0000000004211d: mulsd xmm0, [rip+0x17abcb]; ret; 
0x00000000042098: mulsd xmm0, xmm1; ret; 
0x00000000042482: mulss xmm0, [rip+0x17af06]; ret; 
0x00000000042437: mulss xmm0, [rip+0x17af49]; ret; 
0x00000000042412: mulss xmm0, [rip+0x17af72]; ret; 
0x00000000114287: neg byte ptr [rbx+0x31]; call far fword ptr [rbp+0x41]; 
0x000000000a900d: neg dword ptr [rsi+0x10]; add [rdi+0x63], cl; or al, 0x8a; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000052b6a: neg eax; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000004341b: neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000043457: neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000482b7: neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x000000001028b7: neg eax; mov r8d, 0xffffffff; mov fs:[rdx], eax; mov eax, r8d; ret; 
0x00000000102857: neg eax; mov r9d, 0xffffffff; mov fs:[rdx], eax; mov eax, r9d; ret; 
0x0000000018bc9f: neg eax; or eax, 0x1; vzeroupper; ret; 
0x00000000062e9e: neg eax; pop rbp; ret; 
0x0000000013f4c3: neg eax; pop rbx; pop rbp; pop r12; ret; 
0x0000000002470f: neg eax; ret; 
0x00000000096814: neg edi; call qword ptr [r13]; 
0x00000000112b20: neg edx; cmp eax, 0xfffff000; mov eax, 0x0; cmova eax, edx; ret; 
0x000000000dd022: neg edx; cmp eax, 0xffffffea; mov eax, 0x3; cmovne eax, edx; ret; 
0x00000000096813: neg rdi; call qword ptr [r13]; 
0x000000000cfb28: nop [rax+rax]; add rax, 0x3; ret; 
0x000000000cfb27: nop [rax+rax]; add rax, 0x3; ret; 
0x000000000cfb25: nop [rax+rax]; add rax, 0x3; ret; 
0x0000000009a788: nop [rax+rax]; add rsp, 0x18; ret; 
0x0000000009a787: nop [rax+rax]; add rsp, 0x18; ret; 
0x000000000a2948: nop [rax+rax]; add rsp, 0x8; pop rbp; pop r12; ret; 
0x000000000a2946: nop [rax+rax]; add rsp, 0x8; pop rbp; pop r12; ret; 
0x000000000a2947: nop [rax+rax]; add rsp, 0x8; pop rbp; pop r12; ret; 
0x00000000024e32: nop [rax+rax]; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000024e33: nop [rax+rax]; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000042128: nop [rax+rax]; addsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x00000000042127: nop [rax+rax]; addsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x00000000042126: nop [rax+rax]; addsd xmm1, xmm0; movapd xmm0, xmm1; ret; 
0x0000000004248b: nop [rax+rax]; addss xmm0, xmm0; ret; 
0x00000000042357: nop [rax+rax]; and esi, 0x80000000; mov [rdi], esi; ret; 
0x00000000042358: nop [rax+rax]; and esi, 0x80000000; mov [rdi], esi; ret; 
0x00000000042356: nop [rax+rax]; and esi, 0x80000000; mov [rdi], esi; ret; 
0x000000000ac197: nop [rax+rax]; bsf eax, eax; lea rax, [rax+rdi+0x10]; ret; 
0x000000000ac198: nop [rax+rax]; bsf eax, eax; lea rax, [rax+rdi+0x10]; ret; 
0x00000000184a67: nop [rax+rax]; bsr eax, eax; add rax, rdi; vzeroupper; ret; 
0x00000000184a68: nop [rax+rax]; bsr eax, eax; add rax, rdi; vzeroupper; ret; 
0x00000000184a65: nop [rax+rax]; bsr eax, eax; add rax, rdi; vzeroupper; ret; 
0x000000000ac667: nop [rax+rax]; bsr eax, eax; lea rax, [rax+rdi+0x10]; ret; 
0x000000000ac668: nop [rax+rax]; bsr eax, eax; lea rax, [rax+rdi+0x10]; ret; 
0x00000000057d8b: nop [rax+rax]; bts rax, 0x30; mov [rdi+0x8], rax; mov eax, 0x2; ret; 
0x00000000057d8a: nop [rax+rax]; bts rax, 0x30; mov [rdi+0x8], rax; mov eax, 0x2; ret; 
0x00000000057b77: nop [rax+rax]; bts rsi, 0x34; mov eax, 0x1; mov [rdi], rsi; ret; 
0x00000000057b78: nop [rax+rax]; bts rsi, 0x34; mov eax, 0x1; mov [rdi], rsi; ret; 
0x00000000198a28: nop [rax+rax]; call qword ptr [rbx]; 
0x0000000009685a: nop [rax+rax]; call rax; 
0x0000000009685b: nop [rax+rax]; call rax; 
0x0000000009e217: nop [rax+rax]; endbr64; cmp qword ptr [rip+0x150ce4], 0x0; je short 0x000000000009e230; ret; 
0x0000000009e218: nop [rax+rax]; endbr64; cmp qword ptr [rip+0x150ce4], 0x0; je short 0x000000000009e230; ret; 
0x0000000009e215: nop [rax+rax]; endbr64; cmp qword ptr [rip+0x150ce4], 0x0; je short 0x000000000009e230; ret; 
0x000000000241cb: nop [rax+rax]; endbr64; lea rax, [rip+0x18fcc3]; ret; 
0x000000000241ca: nop [rax+rax]; endbr64; lea rax, [rip+0x18fcc3]; ret; 
0x000000001143ca: nop [rax+rax]; endbr64; mov eax, 0x10; syscall; 
0x000000001143cb: nop [rax+rax]; endbr64; mov eax, 0x10; syscall; 
0x0000000011fed8: nop [rax+rax]; endbr64; mov eax, 0x11f; syscall; 
0x0000000011ff68: nop [rax+rax]; endbr64; mov eax, 0x134; syscall; 
0x0000000011fff8: nop [rax+rax]; endbr64; mov eax, 0x13f; syscall; 
0x00000000146168: nop [rax+rax]; endbr64; mov eax, 0x1; ret; 
0x00000000146167: nop [rax+rax]; endbr64; mov eax, 0x1; ret; 
0x00000000146165: nop [rax+rax]; endbr64; mov eax, 0x1; ret; 
0x0000000014899b: nop [rax+rax]; endbr64; mov eax, 0x2; ret; 
0x000000001489aa: nop [rax+rax]; endbr64; mov eax, 0x2; ret; 
0x00000000120798: nop [rax+rax]; endbr64; mov eax, 0x30; syscall; 
0x000000001202e8: nop [rax+rax]; endbr64; mov eax, 0x32; syscall; 
0x000000000e3198: nop [rax+rax]; endbr64; mov eax, 0x3b; syscall; 
0x000000000433fb: nop [rax+rax]; endbr64; mov eax, 0x3e; syscall; 
0x000000001210ab: nop [rax+rax]; endbr64; mov eax, 0x40; syscall; 
0x0000000012106a: nop [rax+rax]; endbr64; mov eax, 0x47; syscall; 
0x0000000012106b: nop [rax+rax]; endbr64; mov eax, 0x47; syscall; 
0x0000000010e59a: nop [rax+rax]; endbr64; mov eax, 0x49; syscall; 
0x0000000010e59b: nop [rax+rax]; endbr64; mov eax, 0x49; syscall; 
0x00000000116d1b: nop [rax+rax]; endbr64; mov eax, 0x4d; syscall; 
0x00000000116d1a: nop [rax+rax]; endbr64; mov eax, 0x4d; syscall; 
0x0000000010fcf8: nop [rax+rax]; endbr64; mov eax, 0x57; syscall; 
0x0000000010fc38: nop [rax+rax]; endbr64; mov eax, 0x58; syscall; 
0x0000000011fde8: nop [rax+rax]; endbr64; mov eax, 0x63; syscall; 
0x0000000011f9c8: nop [rax+rax]; endbr64; mov eax, 0x7d; syscall; 
0x000000000439e7: nop [rax+rax]; endbr64; mov eax, 0x83; syscall; 
0x000000000439e8: nop [rax+rax]; endbr64; mov eax, 0x83; syscall; 
0x0000000011f408: nop [rax+rax]; endbr64; mov eax, 0x87; syscall; 
0x000000001141cb: nop [rax+rax]; endbr64; mov eax, 0x8c; syscall; 
0x00000000118b28: nop [rax+rax]; endbr64; mov eax, 0x95; syscall; 
0x00000000115648: nop [rax+rax]; endbr64; mov eax, 0x99; syscall; 
0x0000000011f18b: nop [rax+rax]; endbr64; mov eax, 0xa6; syscall; 
0x0000000011f00b: nop [rax+rax]; endbr64; mov eax, 0xad; syscall; 
0x0000000011fb48: nop [rax+rax]; endbr64; mov eax, 0xb1; syscall; 
0x0000000011fcf8: nop [rax+rax]; endbr64; mov eax, 0xb4; syscall; 
0x0000000011cea8: nop [rax+rax]; endbr64; mov eax, 0xc2; syscall; 
0x0000000011cf08: nop [rax+rax]; endbr64; mov eax, 0xc3; syscall; 
0x0000000011cde8: nop [rax+rax]; endbr64; mov eax, 0xc4; syscall; 
0x0000000011cf98: nop [rax+rax]; endbr64; mov eax, 0xc5; syscall; 
0x00000000102867: nop [rax+rax]; endbr64; mov eax, 0xcb; syscall; 
0x00000000102868: nop [rax+rax]; endbr64; mov eax, 0xcb; syscall; 
0x00000000102866: nop [rax+rax]; endbr64; mov eax, 0xcb; syscall; 
0x0000000011fba8: nop [rax+rax]; endbr64; mov eax, 0xfe; syscall; 
0x00000000091f67: nop [rax+rax]; endbr64; mov eax, 0xffffffff; ret; 
0x00000000091f68: nop [rax+rax]; endbr64; mov eax, 0xffffffff; ret; 
0x0000000008cd7a: nop [rax+rax]; endbr64; mov eax, [rdi]; and eax, 0x804; ret; 
0x0000000008cd7b: nop [rax+rax]; endbr64; mov eax, [rdi]; and eax, 0x804; ret; 
0x000000000440cb: nop [rax+rax]; endbr64; mov eax, [rip+0x1a80ce]; ret; 
0x0000000016336b: nop [rax+rax]; endbr64; mov qword ptr [rcx], 0x0; mov eax, 0xffffffff; ret; 
0x0000000016336a: nop [rax+rax]; endbr64; mov qword ptr [rcx], 0x0; mov eax, 0xffffffff; ret; 
0x00000000062edb: nop [rax+rax]; endbr64; mov r10, rcx; mov eax, 0x108; syscall; 
0x00000000062eda: nop [rax+rax]; endbr64; mov r10, rcx; mov eax, 0x108; syscall; 
0x0000000011ffc8: nop [rax+rax]; endbr64; mov r10, rcx; mov eax, 0x137; syscall; 
0x0000000011fcc8: nop [rax+rax]; endbr64; mov r10, rcx; mov eax, 0x19; syscall; 
0x00000000112fcb: nop [rax+rax]; endbr64; mov r10, rcx; mov eax, 0x28; syscall; 
0x0000000012076b: nop [rax+rax]; endbr64; mov r10, rcx; mov eax, 0x36; syscall; 
0x0000000011fd88: nop [rax+rax]; endbr64; mov r10, rcx; mov eax, 0xb2; syscall; 
0x0000000011fdb8: nop [rax+rax]; endbr64; mov r10, rcx; mov eax, 0xb3; syscall; 
0x0000000011ce78: nop [rax+rax]; endbr64; mov r10, rcx; mov eax, 0xbf; syscall; 
0x000000001130cb: nop [rax+rax]; endbr64; mov r10d, ecx; mov eax, 0x118; syscall; 
0x0000000010d8a7: nop [rax+rax]; endbr64; mov r10d, ecx; mov eax, 0x14c; syscall; 
0x0000000010d8a8: nop [rax+rax]; endbr64; mov r10d, ecx; mov eax, 0x14c; syscall; 
0x0000000010d8a6: nop [rax+rax]; endbr64; mov r10d, ecx; mov eax, 0x14c; syscall; 
0x00000000112b0b: nop [rax+rax]; endbr64; mov r10d, ecx; mov eax, 0xdd; syscall; 
0x0000000009381b: nop [rax+rax]; endbr64; mov rax, 0xffffffffffffffff; ret; 
0x0000000009381a: nop [rax+rax]; endbr64; mov rax, 0xffffffffffffffff; ret; 
0x000000001573b5: nop [rax+rax]; endbr64; mov rax, [rdi+0x18]; sub rax, [rdi+0x20]; ret; 
0x000000001573b8: nop [rax+rax]; endbr64; mov rax, [rdi+0x18]; sub rax, [rdi+0x20]; ret; 
0x000000001573b7: nop [rax+rax]; endbr64; mov rax, [rdi+0x18]; sub rax, [rdi+0x20]; ret; 
0x000000000de2bb: nop [rax+rax]; endbr64; mov rax, [rdi+0x20]; ret; 
0x00000000093878: nop [rax+rax]; endbr64; mov rax, [rdi+0x68]; ret; 
0x00000000093877: nop [rax+rax]; endbr64; mov rax, [rdi+0x68]; ret; 
0x00000000093855: nop [rax+rax]; endbr64; mov rax, [rip+0x159d35]; ret; 
0x00000000093857: nop [rax+rax]; endbr64; mov rax, [rip+0x159d35]; ret; 
0x00000000093858: nop [rax+rax]; endbr64; mov rax, [rip+0x159d35]; ret; 
0x000000000344e7: nop [rax+rax]; endbr64; mov rax, [rip+0x1b79ed]; add rax, fs:[0x0]; ret; 
0x000000000344e8: nop [rax+rax]; endbr64; mov rax, [rip+0x1b79ed]; add rax, fs:[0x0]; ret; 
0x000000000344e5: nop [rax+rax]; endbr64; mov rax, [rip+0x1b79ed]; add rax, fs:[0x0]; ret; 
0x00000000034508: nop [rax+rax]; endbr64; mov rax, [rip+0x1b7a0d]; add rax, fs:[0x0]; ret; 
0x00000000034507: nop [rax+rax]; endbr64; mov rax, [rip+0x1b7a0d]; add rax, fs:[0x0]; ret; 
0x00000000034505: nop [rax+rax]; endbr64; mov rax, [rip+0x1b7a0d]; add rax, fs:[0x0]; ret; 
0x0000000002f5c8: nop [rax+rax]; endbr64; mov rax, [rip+0x1be38d]; ret; 
0x0000000002442b: nop [rax+rax]; endbr64; mov rax, [rip+0x1c7a35]; add rax, fs:[0x0]; ret; 
0x00000000025ac7: nop [rax+rax]; endbr64; mov rax, [rip+0x1cb6dd]; ret; 
0x00000000025ac8: nop [rax+rax]; endbr64; mov rax, [rip+0x1cb6dd]; ret; 
0x00000000025ac6: nop [rax+rax]; endbr64; mov rax, [rip+0x1cb6dd]; ret; 
0x0000000012feab: nop [rax+rax]; endbr64; mov rax, [rip+0xbbf9d]; add rax, fs:[0x0]; ret; 
0x000000001228db: nop [rax+rax]; endbr64; mov rax, [rip+0xc9575]; mov eax, [rax+0x38]; ret; 
0x0000000009384a: nop [rax+rax]; endbr64; ret; 
0x0000000012d868: nop [rax+rax]; endbr64; ret; 
0x0000000009384b: nop [rax+rax]; endbr64; ret; 
0x00000000146835: nop [rax+rax]; endbr64; ret; 
0x00000000146837: nop [rax+rax]; endbr64; ret; 
0x0000000012d867: nop [rax+rax]; endbr64; ret; 
0x00000000157857: nop [rax+rax]; endbr64; xor eax, eax; ret; 
0x0000000014617a: nop [rax+rax]; endbr64; xor eax, eax; ret; 
0x00000000146845: nop [rax+rax]; endbr64; xor eax, eax; ret; 
0x00000000146847: nop [rax+rax]; endbr64; xor eax, eax; ret; 
0x0000000014617b: nop [rax+rax]; endbr64; xor eax, eax; ret; 
0x00000000146848: nop [rax+rax]; endbr64; xor eax, eax; ret; 
0x0000000012121b: nop [rax+rax]; endbr64; xor r10d, r10d; mov eax, 0x1d; syscall; 
0x0000000012121a: nop [rax+rax]; endbr64; xor r10d, r10d; mov eax, 0x1d; syscall; 
0x00000000041dfb: nop [rax+rax]; fld st, tbyte ptr [rsp+0x8]; fadd st, st(0); ret; 
0x00000000044116: nop [rax+rax]; lea eax, [rdx-0x1]; mov [rip+0x1a807f], eax; mov eax, edx; ret; 
0x00000000044118: nop [rax+rax]; lea eax, [rdx-0x1]; mov [rip+0x1a807f], eax; mov eax, edx; ret; 
0x00000000044117: nop [rax+rax]; lea eax, [rdx-0x1]; mov [rip+0x1a807f], eax; mov eax, edx; ret; 
0x000000000bab17: nop [rax+rax]; lea r11, [rip+0xf4a1d]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000bab18: nop [rax+rax]; lea r11, [rip+0xf4a1d]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8c5a: nop [rax+rax]; lea r11, [rip+0xf6709]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8c5b: nop [rax+rax]; lea r11, [rip+0xf6709]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b757b: nop [rax+rax]; lea r11, [rip+0xf7c09]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b757a: nop [rax+rax]; lea r11, [rip+0xf7c09]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000190cb7: nop [rax+rax]; lea rax, [rdi+0x2]; ret; 
0x00000000190cb5: nop [rax+rax]; lea rax, [rdi+0x2]; ret; 
0x00000000190cb8: nop [rax+rax]; lea rax, [rdi+0x2]; ret; 
0x00000000190cc5: nop [rax+rax]; lea rax, [rdi+0x3]; ret; 
0x00000000190cc8: nop [rax+rax]; lea rax, [rdi+0x3]; ret; 
0x00000000190cc7: nop [rax+rax]; lea rax, [rdi+0x3]; ret; 
0x00000000190cd7: nop [rax+rax]; lea rax, [rdi+0x4]; ret; 
0x00000000190cd5: nop [rax+rax]; lea rax, [rdi+0x4]; ret; 
0x00000000190cd8: nop [rax+rax]; lea rax, [rdi+0x4]; ret; 
0x00000000190ce7: nop [rax+rax]; lea rax, [rdi+0x5]; ret; 
0x00000000190ce5: nop [rax+rax]; lea rax, [rdi+0x5]; ret; 
0x00000000190ce8: nop [rax+rax]; lea rax, [rdi+0x5]; ret; 
0x00000000190cf5: nop [rax+rax]; lea rax, [rdi+0x6]; ret; 
0x00000000190cf8: nop [rax+rax]; lea rax, [rdi+0x6]; ret; 
0x00000000190cf7: nop [rax+rax]; lea rax, [rdi+0x6]; ret; 
0x00000000190d05: nop [rax+rax]; lea rax, [rdi+0x8]; ret; 
0x00000000190d07: nop [rax+rax]; lea rax, [rdi+0x8]; ret; 
0x00000000190d08: nop [rax+rax]; lea rax, [rdi+0x8]; ret; 
0x00000000190d17: nop [rax+rax]; lea rax, [rdi+0x9]; ret; 
0x00000000190d18: nop [rax+rax]; lea rax, [rdi+0x9]; ret; 
0x00000000190d15: nop [rax+rax]; lea rax, [rdi+0x9]; ret; 
0x00000000190d27: nop [rax+rax]; lea rax, [rdi+0xa]; ret; 
0x00000000190d28: nop [rax+rax]; lea rax, [rdi+0xa]; ret; 
0x00000000190d25: nop [rax+rax]; lea rax, [rdi+0xa]; ret; 
0x00000000190d35: nop [rax+rax]; lea rax, [rdi+0xb]; ret; 
0x00000000190d38: nop [rax+rax]; lea rax, [rdi+0xb]; ret; 
0x00000000190d37: nop [rax+rax]; lea rax, [rdi+0xb]; ret; 
0x00000000190d47: nop [rax+rax]; lea rax, [rdi+0xc]; ret; 
0x00000000190d45: nop [rax+rax]; lea rax, [rdi+0xc]; ret; 
0x00000000190d48: nop [rax+rax]; lea rax, [rdi+0xc]; ret; 
0x00000000190d57: nop [rax+rax]; lea rax, [rdi+0xd]; ret; 
0x00000000190d58: nop [rax+rax]; lea rax, [rdi+0xd]; ret; 
0x00000000190d55: nop [rax+rax]; lea rax, [rdi+0xd]; ret; 
0x00000000190d67: nop [rax+rax]; lea rax, [rdi+0xe]; ret; 
0x00000000190d65: nop [rax+rax]; lea rax, [rdi+0xe]; ret; 
0x00000000190d68: nop [rax+rax]; lea rax, [rdi+0xe]; ret; 
0x000000000cf697: nop [rax+rax]; lea rax, [rdi-0x4]; ret; 
0x000000000cf698: nop [rax+rax]; lea rax, [rdi-0x4]; ret; 
0x000000000cf695: nop [rax+rax]; lea rax, [rdi-0x4]; ret; 
0x000000000cf685: nop [rax+rax]; lea rax, [rdi-0x8]; ret; 
0x000000000cf687: nop [rax+rax]; lea rax, [rdi-0x8]; ret; 
0x000000000cf688: nop [rax+rax]; lea rax, [rdi-0x8]; ret; 
0x000000000cf675: nop [rax+rax]; lea rax, [rdi-0xc]; ret; 
0x000000000cf678: nop [rax+rax]; lea rax, [rdi-0xc]; ret; 
0x000000000cf677: nop [rax+rax]; lea rax, [rdi-0xc]; ret; 
0x000000000328e6: nop [rax+rax]; lea rax, [rip+0x181a86]; ret; 
0x000000000328e8: nop [rax+rax]; lea rax, [rip+0x181a86]; ret; 
0x000000000328e7: nop [rax+rax]; lea rax, [rip+0x181a86]; ret; 
0x00000000148678: nop [rax+rax]; lea rdx, [rip+0xa34d9]; jmp qword ptr [rdx+rax*8]; 
0x00000000113402: nop [rax+rax]; lea rdx, [rsp+0x8]; mov esi, 0x10; mov eax, 0x48; syscall; 
0x00000000113403: nop [rax+rax]; lea rdx, [rsp+0x8]; mov esi, 0x10; mov eax, 0x48; syscall; 
0x000000001786d7: nop [rax+rax]; mov [rcx], edx; mov [rcx+0x3], edx; ret; 
0x000000001786d8: nop [rax+rax]; mov [rcx], edx; mov [rcx+0x3], edx; ret; 
0x000000001786c6: nop [rax+rax]; mov [rcx], edx; mov [rcx+0x4], dx; ret; 
0x000000001786c7: nop [rax+rax]; mov [rcx], edx; mov [rcx+0x4], dx; ret; 
0x000000001786c8: nop [rax+rax]; mov [rcx], edx; mov [rcx+0x4], dx; ret; 
0x000000001786a7: nop [rax+rax]; mov [rcx], edx; ret; 
0x000000001786a8: nop [rax+rax]; mov [rcx], edx; ret; 
0x00000000178737: nop [rax+rax]; mov [rcx], rdx; mov [rcx+0x5], rdx; ret; 
0x00000000178738: nop [rax+rax]; mov [rcx], rdx; mov [rcx+0x5], rdx; ret; 
0x00000000178748: nop [rax+rax]; mov [rcx], rdx; mov [rcx+0x6], rdx; ret; 
0x00000000178718: nop [rax+rax]; mov [rcx], rdx; mov [rcx+0x7], edx; ret; 
0x00000000178758: nop [rax+rax]; mov [rcx], rdx; mov [rcx+0x7], rdx; ret; 
0x00000000178707: nop [rax+rax]; mov [rcx], rdx; mov [rcx+0x8], dx; ret; 
0x00000000178708: nop [rax+rax]; mov [rcx], rdx; mov [rcx+0x8], dx; ret; 
0x00000000178728: nop [rax+rax]; mov [rcx], rdx; mov [rcx+0x8], edx; ret; 
0x00000000178727: nop [rax+rax]; mov [rcx], rdx; mov [rcx+0x8], edx; ret; 
0x00000000178768: nop [rax+rax]; mov [rcx], rdx; mov [rcx+0x8], rdx; ret; 
0x000000001786e8: nop [rax+rax]; mov [rcx], rdx; ret; 
0x000000001786e6: nop [rax+rax]; mov [rcx], rdx; ret; 
0x000000001786e7: nop [rax+rax]; mov [rcx], rdx; ret; 
0x000000000b7ec7: nop [rax+rax]; mov [rdi-0x1], rdx; ret; 
0x000000000b7ec8: nop [rax+rax]; mov [rdi-0x1], rdx; ret; 
0x000000000b84b8: nop [rax+rax]; mov [rdi], dh; lea rax, [rdi]; ret; 
0x000000000b84b7: nop [rax+rax]; mov [rdi], dh; lea rax, [rdi]; ret; 
0x000000000b6e77: nop [rax+rax]; mov [rdi], dh; ret; 
0x000000000b6e78: nop [rax+rax]; mov [rdi], dh; ret; 
0x000000000a89a8: nop [rax+rax]; mov [rdi], dx; add rax, rdi; ret; 
0x000000000a89a7: nop [rax+rax]; mov [rdi], dx; add rax, rdi; ret; 
0x0000000018a598: nop [rax+rax]; mov [rdi], dx; mov [rdi+r8-0x2], dx; vzeroupper; ret; 
0x0000000018a597: nop [rax+rax]; mov [rdi], dx; mov [rdi+r8-0x2], dx; vzeroupper; ret; 
0x0000000018a586: nop [rax+rax]; mov [rdi], dx; vzeroupper; ret; 
0x0000000018a588: nop [rax+rax]; mov [rdi], dx; vzeroupper; ret; 
0x0000000018a587: nop [rax+rax]; mov [rdi], dx; vzeroupper; ret; 
0x000000000a8b68: nop [rax+rax]; mov [rdi], ecx; lea rax, [rdi+rdx-0x1]; ret; 
0x000000000a8b66: nop [rax+rax]; mov [rdi], ecx; lea rax, [rdi+rdx-0x1]; ret; 
0x000000000a8b67: nop [rax+rax]; mov [rdi], ecx; lea rax, [rdi+rdx-0x1]; ret; 
0x000000000b7eb6: nop [rax+rax]; mov [rdi], edx; mov [rdi+0x4], dx; ret; 
0x000000000b7eb7: nop [rax+rax]; mov [rdi], edx; mov [rdi+0x4], dx; ret; 
0x000000000b7eb8: nop [rax+rax]; mov [rdi], edx; mov [rdi+0x4], dx; ret; 
0x000000000b7f27: nop [rax+rax]; mov [rdi], rdx; mov [rdi+0x5], rdx; ret; 
0x000000000b7f28: nop [rax+rax]; mov [rdi], rdx; mov [rdi+0x5], rdx; ret; 
0x000000000b7f38: nop [rax+rax]; mov [rdi], rdx; mov [rdi+0x6], rdx; ret; 
0x000000000b7f08: nop [rax+rax]; mov [rdi], rdx; mov [rdi+0x7], edx; ret; 
0x000000000b7ef7: nop [rax+rax]; mov [rdi], rdx; mov [rdi+0x8], dx; ret; 
0x000000000b7ef8: nop [rax+rax]; mov [rdi], rdx; mov [rdi+0x8], dx; ret; 
0x000000000b7f17: nop [rax+rax]; mov [rdi], rdx; mov [rdi+0x8], edx; ret; 
0x000000000b7f18: nop [rax+rax]; mov [rdi], rdx; mov [rdi+0x8], edx; ret; 
0x0000000018a5bb: nop [rax+rax]; mov [rdi], rdx; mov [rdi+r8-0x8], rdx; vzeroupper; ret; 
0x000000000b7ed8: nop [rax+rax]; mov [rdi], rdx; ret; 
0x000000000b7ed7: nop [rax+rax]; mov [rdi], rdx; ret; 
0x000000000b7ed5: nop [rax+rax]; mov [rdi], rdx; ret; 
0x0000000017a9e8: nop [rax+rax]; mov ax, [rcx]; mov [rdx], ax; lea rax, [rdx+0x1]; ret; 
0x000000001766b8: nop [rax+rax]; mov ax, [rcx]; mov [rdx], ax; mov rax, rdi; ret; 
0x000000000ec4a6: nop [rax+rax]; mov byte ptr [rdi+0x8], 0x1a; mov eax, 0x2; ret; 
0x000000000ec4a8: nop [rax+rax]; mov byte ptr [rdi+0x8], 0x1a; mov eax, 0x2; ret; 
0x000000000ec4a7: nop [rax+rax]; mov byte ptr [rdi+0x8], 0x1a; mov eax, 0x2; ret; 
0x000000000ec4bb: nop [rax+rax]; mov byte ptr [rdi+0x8], 0x1c; mov eax, 0x2; ret; 
0x000000000ec4ba: nop [rax+rax]; mov byte ptr [rdi+0x8], 0x1c; mov eax, 0x2; ret; 
0x000000000b6e97: nop [rax+rax]; mov cx, [rsi]; mov [rdi], cx; mov [rdi+0x2], dh; ret; 
0x000000000b6e98: nop [rax+rax]; mov cx, [rsi]; mov [rdi], cx; mov [rdi+0x2], dh; ret; 
0x0000000014d01b: nop [rax+rax]; mov dword ptr [r8+0x4], 0x1; mov eax, 0x1; ret; 
0x0000000007f198: nop [rax+rax]; mov dword ptr [rbp-0x51c], 0x1; mov r9, rsi; jmp rax; 
0x0000000007f196: nop [rax+rax]; mov dword ptr [rbp-0x51c], 0x1; mov r9, rsi; jmp rax; 
0x0000000007f197: nop [rax+rax]; mov dword ptr [rbp-0x51c], 0x1; mov r9, rsi; jmp rax; 
0x0000000007892b: nop [rax+rax]; mov dword ptr [rbp-0x528], 0x1; mov r10, rdx; jmp rax; 
0x00000000078a97: nop [rax+rax]; mov dword ptr [rbp-0x538], 0x1; mov r10, rdx; jmp rax; 
0x00000000078a98: nop [rax+rax]; mov dword ptr [rbp-0x538], 0x1; mov r10, rdx; jmp rax; 
0x00000000078a96: nop [rax+rax]; mov dword ptr [rbp-0x538], 0x1; mov r10, rdx; jmp rax; 
0x000000000b84c6: nop [rax+rax]; mov dx, [rsi]; mov [rdi], dx; lea rax, [rdi+0x1]; ret; 
0x000000000b84c8: nop [rax+rax]; mov dx, [rsi]; mov [rdi], dx; lea rax, [rdi+0x1]; ret; 
0x000000000b84c7: nop [rax+rax]; mov dx, [rsi]; mov [rdi], dx; lea rax, [rdi+0x1]; ret; 
0x000000000b7b75: nop [rax+rax]; mov dx, [rsi]; mov [rdi], dx; ret; 
0x000000000b7b77: nop [rax+rax]; mov dx, [rsi]; mov [rdi], dx; ret; 
0x000000000b7b78: nop [rax+rax]; mov dx, [rsi]; mov [rdi], dx; ret; 
0x00000000192aeb: nop [rax+rax]; mov eax, 0x1; jg short 0x0000000000192b00; neg eax; ret; 
0x0000000009e888: nop [rax+rax]; mov eax, 0x1; ret; 
0x0000000009e886: nop [rax+rax]; mov eax, 0x1; ret; 
0x000000000e5ac3: nop [rax+rax]; mov eax, 0x1; ret; 
0x0000000009e887: nop [rax+rax]; mov eax, 0x1; ret; 
0x000000000ff78a: nop [rax+rax]; mov eax, 0x2; ret; 
0x000000000ff78b: nop [rax+rax]; mov eax, 0x2; ret; 
0x000000000f24c8: nop [rax+rax]; mov eax, 0xc; ret; 
0x00000000062ea3: nop [rax+rax]; mov eax, 0xffffffff; pop rbp; ret; 
0x00000000062ea2: nop [rax+rax]; mov eax, 0xffffffff; pop rbp; ret; 
0x00000000087f97: nop [rax+rax]; mov eax, 0xffffffff; ret; 
0x00000000087f96: nop [rax+rax]; mov eax, 0xffffffff; ret; 
0x00000000044107: nop [rax+rax]; mov eax, 0xffffffff; ret; 
0x000000000884e3: nop [rax+rax]; mov eax, 0xffffffff; ret; 
0x00000000044108: nop [rax+rax]; mov eax, 0xffffffff; ret; 
0x0000000017ddc8: nop [rax+rax]; mov eax, [rcx]; mov [rdx], eax; mov rax, rdi; ret; 
0x0000000017ddc7: nop [rax+rax]; mov eax, [rcx]; mov [rdx], eax; mov rax, rdi; ret; 
0x000000000cefc8: nop [rax+rax]; mov eax, [rdi+0x14]; cmp eax, [rsi+0x14]; jne 0x00000000000cf0b0; ret; 
0x000000000cf028: nop [rax+rax]; mov eax, [rdi+0x24]; cmp eax, [rsi+0x24]; jne short 0x00000000000cf0b0; ret; 
0x000000000cef68: nop [rax+rax]; mov eax, [rdi+0x4]; cmp eax, [rsi+0x4]; jne 0x00000000000cf0b0; ret; 
0x000000000cef66: nop [rax+rax]; mov eax, [rdi+0x4]; cmp eax, [rsi+0x4]; jne 0x00000000000cf0b0; ret; 
0x000000000cef67: nop [rax+rax]; mov eax, [rdi+0x4]; cmp eax, [rsi+0x4]; jne 0x00000000000cf0b0; ret; 
0x00000000026f82: nop [rax+rax]; mov eax, [rip+0x1c69c6]; test eax, eax; je short 0x0000000000026f98; ret; 
0x00000000026f83: nop [rax+rax]; mov eax, [rip+0x1c69c6]; test eax, eax; je short 0x0000000000026f98; ret; 
0x00000000140bd3: nop [rax+rax]; mov eax, [rip+0xafbe6]; test eax, eax; je short 0x0000000000140be8; ret; 
0x00000000140bd2: nop [rax+rax]; mov eax, [rip+0xafbe6]; test eax, eax; je short 0x0000000000140be8; ret; 
0x0000000012fb33: nop [rax+rax]; mov eax, edi; and eax, 0xffffff; ret; 
0x0000000012598b: nop [rax+rax]; mov eax, r8d; ret; 
0x0000000012598a: nop [rax+rax]; mov eax, r8d; ret; 
0x000000000b6eb7: nop [rax+rax]; mov ecx, [rsi]; mov [rdi+0x4], dh; mov [rdi], ecx; ret; 
0x000000000b6eb5: nop [rax+rax]; mov ecx, [rsi]; mov [rdi+0x4], dh; mov [rdi], ecx; ret; 
0x000000000b6eb8: nop [rax+rax]; mov ecx, [rsi]; mov [rdi+0x4], dh; mov [rdi], ecx; ret; 
0x0000000013a686: nop [rax+rax]; mov edi, [rbx]; mov eax, 0x3; syscall; 
0x0000000013a688: nop [rax+rax]; mov edi, [rbx]; mov eax, 0x3; syscall; 
0x0000000013a687: nop [rax+rax]; mov edi, [rbx]; mov eax, 0x3; syscall; 
0x000000000e315a: nop [rax+rax]; mov edi, edx; mov eax, esi; syscall; 
0x000000000e315b: nop [rax+rax]; mov edi, edx; mov eax, esi; syscall; 
0x00000000085e03: nop [rax+rax]; mov edx, 0x10; mov rsi, r13; mov rdi, r15; call qword ptr [r14+0x38]; 
0x000000001214b3: nop [rax+rax]; mov edx, 0x40; mov edi, r12d; mov eax, 0x14; syscall; 
0x000000000b6eaa: nop [rax+rax]; mov edx, [rsi]; mov [rdi], edx; ret; 
0x000000000b6eab: nop [rax+rax]; mov edx, [rsi]; mov [rdi], edx; ret; 
0x0000000016087b: nop [rax+rax]; mov qword ptr fs:[r12], 0x0; mov rax, [rsp+0x10]; mov rdi, [rsp+0x18]; call rax; 
0x0000000013f0b7: nop [rax+rax]; mov r10, rax; mov byte ptr [r10], 0x0; ret; 
0x0000000013f0b6: nop [rax+rax]; mov r10, rax; mov byte ptr [r10], 0x0; ret; 
0x0000000013f0b8: nop [rax+rax]; mov r10, rax; mov byte ptr [r10], 0x0; ret; 
0x000000001570eb: nop [rax+rax]; mov r8d, 0x1; mov eax, r8d; ret; 
0x0000000008cd66: nop [rax+rax]; mov r8d, 0x1; mov eax, r8d; ret; 
0x0000000008cd67: nop [rax+rax]; mov r8d, 0x1; mov eax, r8d; ret; 
0x0000000008cd68: nop [rax+rax]; mov r8d, 0x1; mov eax, r8d; ret; 
0x000000000cfb58: nop [rax+rax]; mov rax, 0x2; ret; 
0x000000000cfb68: nop [rax+rax]; mov rax, 0x3; ret; 
0x000000000cfb78: nop [rax+rax]; mov rax, 0x4; ret; 
0x000000000cfb88: nop [rax+rax]; mov rax, 0x5; ret; 
0x000000000cfb98: nop [rax+rax]; mov rax, 0x6; ret; 
0x000000000cfba8: nop [rax+rax]; mov rax, 0x7; ret; 
0x00000000041feb: nop [rax+rax]; mov rax, 0x8000000000000000; and rdx, rax; mov [rdi], rdx; ret; 
0x0000000014e827: nop [rax+rax]; mov rax, [rbp+0x8]; lea rsi, [rbx+0x18]; mov rdi, rbp; call qword ptr [rax+0x48]; 
0x0000000014e828: nop [rax+rax]; mov rax, [rbp+0x8]; lea rsi, [rbx+0x18]; mov rdi, rbp; call qword ptr [rax+0x48]; 
0x0000000014e826: nop [rax+rax]; mov rax, [rbp+0x8]; lea rsi, [rbx+0x18]; mov rdi, rbp; call qword ptr [rax+0x48]; 
0x0000000017ddd8: nop [rax+rax]; mov rax, [rcx]; mov [rdx], rax; mov rax, rdi; ret; 
0x0000000008ce52: nop [rax+rax]; mov rax, [rdi+0x28]; sub rax, [rdi+0x20]; ret; 
0x0000000008ce53: nop [rax+rax]; mov rax, [rdi+0x28]; sub rax, [rdi+0x20]; ret; 
0x0000000008cd23: nop [rax+rax]; mov rax, [rdi+0x40]; sub rax, [rdi+0x38]; ret; 
0x0000000008cd22: nop [rax+rax]; mov rax, [rdi+0x40]; sub rax, [rdi+0x38]; ret; 
0x00000000155b0a: nop [rax+rax]; mov rax, [rdi+0x8]; call qword ptr [rax+0x18]; 
0x00000000155b0b: nop [rax+rax]; mov rax, [rdi+0x8]; call qword ptr [rax+0x18]; 
0x000000001570fb: nop [rax+rax]; mov rax, [rdi+0x8]; jmp qword ptr [rax+0x40]; 
0x000000001570fa: nop [rax+rax]; mov rax, [rdi+0x8]; jmp qword ptr [rax+0x40]; 
0x00000000157108: nop [rax+rax]; mov rax, [rdi+0x8]; jmp qword ptr [rax+0x48]; 
0x00000000157106: nop [rax+rax]; mov rax, [rdi+0x8]; jmp qword ptr [rax+0x48]; 
0x00000000155d2b: nop [rax+rax]; mov rax, [rdi+0x8]; jmp qword ptr [rax+0x8]; 
0x00000000156693: nop [rax+rax]; mov rax, [rdi+0x8]; lea rsi, [rsp+0x10]; call qword ptr [rax]; 
0x000000001490c7: nop [rax+rax]; mov rax, [rdi+0x8]; mov r12, rsp; lea rsi, [rsp+0x8]; call qword ptr [rax]; 
0x000000001490c8: nop [rax+rax]; mov rax, [rdi+0x8]; mov r12, rsp; lea rsi, [rsp+0x8]; call qword ptr [rax]; 
0x000000001490c6: nop [rax+rax]; mov rax, [rdi+0x8]; mov r12, rsp; lea rsi, [rsp+0x8]; call qword ptr [rax]; 
0x00000000156d63: nop [rax+rax]; mov rax, [rdi+0x8]; mov rsi, rsp; call qword ptr [rax+0x40]; 
0x00000000156d62: nop [rax+rax]; mov rax, [rdi+0x8]; mov rsi, rsp; call qword ptr [rax+0x40]; 
0x000000000dd173: nop [rax+rax]; mov rax, [rip+0x10ecf1]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000dd172: nop [rax+rax]; mov rax, [rip+0x10ecf1]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000009e548: nop [rax+rax]; mov rax, [rip+0x14d9f9]; call qword ptr [rax]; 
0x0000000009e547: nop [rax+rax]; mov rax, [rip+0x14d9f9]; call qword ptr [rax]; 
0x000000000978e2: nop [rax+rax]; mov rax, [rip+0x1544d1]; xor edi, edi; call qword ptr [rax]; 
0x000000000978e3: nop [rax+rax]; mov rax, [rip+0x1544d1]; xor edi, edi; call qword ptr [rax]; 
0x00000000084758: nop [rax+rax]; mov rax, [rip+0x167709]; mov dword ptr fs:[rax], 0x16; mov rax, 0xffffffffffffffff; ret; 
0x00000000048358: nop [rax+rax]; mov rax, [rip+0x1a3b09]; mov dword ptr fs:[rax], 0x5; mov eax, 0xffffffff; ret; 
0x00000000048356: nop [rax+rax]; mov rax, [rip+0x1a3b09]; mov dword ptr fs:[rax], 0x5; mov eax, 0xffffffff; ret; 
0x00000000048357: nop [rax+rax]; mov rax, [rip+0x1a3b09]; mov dword ptr fs:[rax], 0x5; mov eax, 0xffffffff; ret; 
0x00000000043d57: nop [rax+rax]; mov rax, [rip+0x1a8109]; mov dword ptr fs:[rax], 0x16; mov rax, 0xffffffffffffffff; ret; 
0x00000000043d58: nop [rax+rax]; mov rax, [rip+0x1a8109]; mov dword ptr fs:[rax], 0x16; mov rax, 0xffffffffffffffff; ret; 
0x00000000043c63: nop [rax+rax]; mov rax, [rip+0x1a8201]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000043bc8: nop [rax+rax]; mov rax, [rip+0x1a8299]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000043bc7: nop [rax+rax]; mov rax, [rip+0x1a8299]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000041277: nop [rax+rax]; mov rax, [rip+0x1aabe9]; mov dword ptr fs:[rax], 0x2a; mov rax, r11; ret; 
0x00000000041278: nop [rax+rax]; mov rax, [rip+0x1aabe9]; mov dword ptr fs:[rax], 0x2a; mov rax, r11; ret; 
0x00000000024712: nop [rax+rax]; mov rax, [rip+0x1c7751]; mov dword ptr fs:[rax], 0x9; mov eax, 0xffffffff; ret; 
0x00000000024713: nop [rax+rax]; mov rax, [rip+0x1c7751]; mov dword ptr fs:[rax], 0x9; mov eax, 0xffffffff; ret; 
0x0000000015fcbb: nop [rax+rax]; mov rax, [rip+0x914c1]; call qword ptr [rax+0x10]; 
0x0000000015fbdb: nop [rax+rax]; mov rax, [rip+0x91599]; test rax, rax; je short 0x000000000015fbd7; call qword ptr [rax+0x18]; 
0x0000000015fa43: nop [rax+rax]; mov rax, [rip+0x91739]; call qword ptr [rax+0x8]; 
0x0000000015f94b: nop [rax+rax]; mov rax, [rip+0x91831]; call qword ptr [rax]; 
0x0000000011f908: nop [rax+rax]; mov rax, [rip+0xcc559]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000011f907: nop [rax+rax]; mov rax, [rip+0xcc559]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000011f8c7: nop [rax+rax]; mov rax, [rip+0xcc599]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000011f8c8: nop [rax+rax]; mov rax, [rip+0xcc599]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000011f8c6: nop [rax+rax]; mov rax, [rip+0xcc599]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000011c512: nop [rax+rax]; mov rax, [rip+0xcf951]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000011c513: nop [rax+rax]; mov rax, [rip+0xcf951]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000112953: nop [rax+rax]; mov rax, [rip+0xd9511]; mov dword ptr fs:[rax], 0x16; xor eax, eax; ret; 
0x00000000112952: nop [rax+rax]; mov rax, [rip+0xd9511]; mov dword ptr fs:[rax], 0x16; xor eax, eax; ret; 
0x0000000010dc4a: nop [rax+rax]; mov rax, [rip+0xde219]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010dc4b: nop [rax+rax]; mov rax, [rip+0xde219]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010da13: nop [rax+rax]; mov rax, [rip+0xde451]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010da12: nop [rax+rax]; mov rax, [rip+0xde451]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010d9b3: nop [rax+rax]; mov rax, [rip+0xde4b1]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010d9b2: nop [rax+rax]; mov rax, [rip+0xde4b1]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010d953: nop [rax+rax]; mov rax, [rip+0xde511]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010d952: nop [rax+rax]; mov rax, [rip+0xde511]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010d5ca: nop [rax+rax]; mov rax, [rip+0xde899]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010d5cb: nop [rax+rax]; mov rax, [rip+0xde899]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010d56a: nop [rax+rax]; mov rax, [rip+0xde8f9]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010d56b: nop [rax+rax]; mov rax, [rip+0xde8f9]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010d50a: nop [rax+rax]; mov rax, [rip+0xde959]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010d50b: nop [rax+rax]; mov rax, [rip+0xde959]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000328f8: nop [rax+rax]; mov rax, [rsi+rax*8+0x80]; ret; 
0x0000000014ee68: nop [rax+rax]; mov rax, [rsp+0x8]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x0000000014ee66: nop [rax+rax]; mov rax, [rsp+0x8]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x0000000014ee67: nop [rax+rax]; mov rax, [rsp+0x8]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x0000000011cc82: nop [rax+rax]; mov rax, r8; ret; 
0x0000000011cc83: nop [rax+rax]; mov rax, r8; ret; 
0x0000000018d38b: nop [rax+rax]; mov rax, r8; shr rax, 0x2; vzeroupper; ret; 
0x000000001889e7: nop [rax+rax]; mov rax, r8; vzeroupper; ret; 
0x000000001889e8: nop [rax+rax]; mov rax, r8; vzeroupper; ret; 
0x000000000b814b: nop [rax+rax]; mov rax, rdi; ret; 
0x000000000b92e7: nop [rax+rax]; mov rax, rdi; ret; 
0x000000000b92e8: nop [rax+rax]; mov rax, rdi; ret; 
0x000000000b92e5: nop [rax+rax]; mov rax, rdi; ret; 
0x0000000018b537: nop [rax+rax]; mov rax, rdi; vzeroupper; ret; 
0x0000000018b538: nop [rax+rax]; mov rax, rdi; vzeroupper; ret; 
0x000000000b6ef7: nop [rax+rax]; mov rcx, [rsi]; mov [rdi+0x8], dh; mov [rdi], rcx; ret; 
0x000000000b6ef8: nop [rax+rax]; mov rcx, [rsi]; mov [rdi+0x8], dh; mov [rdi], rcx; ret; 
0x00000000096808: nop [rax+rax]; mov rdi, r12; neg rdi; call qword ptr [r13]; 
0x00000000096807: nop [rax+rax]; mov rdi, r12; neg rdi; call qword ptr [r13]; 
0x000000001518a8: nop [rax+rax]; mov rdx, [rdi+0x8]; mov [rsp], rax; call qword ptr [rdx+0x20]; 
0x000000000b6eeb: nop [rax+rax]; mov rdx, [rsi]; mov [rdi], rdx; ret; 
0x000000000a8a63: nop [rax+rax]; mov rdx, [rsp+0x10]; mov [rax], rdx; ret; 
0x000000000a898b: nop [rax+rax]; mov rdx, [rsp+0x18]; mov [rdi], rdx; add rax, rdi; ret; 
0x0000000009bd08: nop [rax+rax]; mov rsi, [rsp+0x28]; mov rdi, r12; call rdx; 
0x0000000009c998: nop [rax+rax]; mov rsi, r12; call rax; 
0x0000000009c997: nop [rax+rax]; mov rsi, r12; call rax; 
0x000000000b7f48: nop [rax+rax]; movdqu [rdi-0x1], xmm0; ret; 
0x000000000b7f58: nop [rax+rax]; movdqu [rdi], xmm0; ret; 
0x000000000b7f57: nop [rax+rax]; movdqu [rdi], xmm0; ret; 
0x000000000b7f56: nop [rax+rax]; movdqu [rdi], xmm0; ret; 
0x0000000014cf83: nop [rax+rax]; movdqu xmm0, [rdx]; mov eax, esi; movups [r8+0x8], xmm0; ret; 
0x0000000013c363: nop [rax+rax]; movsxd rdx, edx; mov eax, r8d; mov byte ptr [rdi+rdx], 0x0; ret; 
0x00000000191ffb: nop [rax+rax]; movzx eax, byte ptr [rdi-0xa]; movzx edx, byte ptr [rsi-0xa]; sub eax, edx; ret; 
0x00000000191feb: nop [rax+rax]; movzx eax, byte ptr [rdi-0xb]; movzx edx, byte ptr [rsi-0xb]; sub eax, edx; ret; 
0x00000000191fdb: nop [rax+rax]; movzx eax, byte ptr [rdi-0xc]; movzx edx, byte ptr [rsi-0xc]; sub eax, edx; ret; 
0x00000000191fcb: nop [rax+rax]; movzx eax, byte ptr [rdi-0xd]; movzx edx, byte ptr [rsi-0xd]; sub eax, edx; ret; 
0x00000000191fbb: nop [rax+rax]; movzx eax, byte ptr [rdi-0xe]; movzx edx, byte ptr [rsi-0xe]; sub eax, edx; ret; 
0x00000000191fab: nop [rax+rax]; movzx eax, byte ptr [rdi-0xf]; movzx edx, byte ptr [rsi-0xf]; sub eax, edx; ret; 
0x00000000184d5b: nop [rax+rax]; movzx eax, byte ptr [rdi]; movzx ecx, byte ptr [rsi]; sub eax, ecx; ret; 
0x000000000abec8: nop [rax+rax]; movzx ecx, byte ptr [rsi]; movzx eax, byte ptr [rdi]; sub eax, ecx; ret; 
0x000000000abec7: nop [rax+rax]; movzx ecx, byte ptr [rsi]; movzx eax, byte ptr [rdi]; sub eax, ecx; ret; 
0x0000000018a49b: nop [rax+rax]; movzx edx, byte ptr [rsi]; mov [rdi], dl; vzeroupper; ret; 
0x0000000018a49a: nop [rax+rax]; movzx edx, byte ptr [rsi]; mov [rdi], dl; vzeroupper; ret; 
0x00000000189848: nop [rax+rax]; movzx edx, word ptr [rsi]; mov [rdi], dx; vzeroupper; ret; 
0x00000000189846: nop [rax+rax]; movzx edx, word ptr [rsi]; mov [rdi], dx; vzeroupper; ret; 
0x00000000189847: nop [rax+rax]; movzx edx, word ptr [rsi]; mov [rdi], dx; vzeroupper; ret; 
0x00000000154922: nop [rax+rax]; nop [rax+rax]; endbr64; mov eax, 0x2; ret; 
0x00000000154921: nop [rax+rax]; nop [rax+rax]; endbr64; mov eax, 0x2; ret; 
0x00000000154923: nop [rax+rax]; nop [rax+rax]; endbr64; mov eax, 0x2; ret; 
0x000000001141c1: nop [rax+rax]; nop [rax+rax]; endbr64; mov eax, 0x8c; syscall; 
0x000000001141c3: nop [rax+rax]; nop [rax+rax]; endbr64; mov eax, 0x8c; syscall; 
0x000000001141c2: nop [rax+rax]; nop [rax+rax]; endbr64; mov eax, 0x8c; syscall; 
0x0000000011f003: nop [rax+rax]; nop [rax+rax]; endbr64; mov eax, 0xad; syscall; 
0x0000000011f001: nop [rax+rax]; nop [rax+rax]; endbr64; mov eax, 0xad; syscall; 
0x0000000011f002: nop [rax+rax]; nop [rax+rax]; endbr64; mov eax, 0xad; syscall; 
0x000000000ac3d5: nop [rax+rax]; nop [rax]; bsf eax, eax; lea rax, [rax+rdi-0x10]; ret; 
0x000000000ac3d2: nop [rax+rax]; nop [rax]; bsf eax, eax; lea rax, [rax+rdi-0x10]; ret; 
0x000000000ac3d4: nop [rax+rax]; nop [rax]; bsf eax, eax; lea rax, [rax+rdi-0x10]; ret; 
0x0000000011f343: nop [rax+rax]; nop [rax]; endbr64; mov eax, 0x122; syscall; 
0x0000000011f344: nop [rax+rax]; nop [rax]; endbr64; mov eax, 0x122; syscall; 
0x0000000011f342: nop [rax+rax]; nop [rax]; endbr64; mov eax, 0x122; syscall; 
0x00000000155bc4: nop [rax+rax]; nop [rax]; endbr64; mov eax, 0x1; ret; 
0x00000000155bc2: nop [rax+rax]; nop [rax]; endbr64; mov eax, 0x1; ret; 
0x00000000155bc5: nop [rax+rax]; nop [rax]; endbr64; mov eax, 0x1; ret; 
0x000000001211b4: nop [rax+rax]; nop [rax]; endbr64; mov eax, 0x1e; syscall; 
0x000000001211b2: nop [rax+rax]; nop [rax]; endbr64; mov eax, 0x1e; syscall; 
0x000000001211b3: nop [rax+rax]; nop [rax]; endbr64; mov eax, 0x1e; syscall; 
0x00000000121253: nop [rax+rax]; nop [rax]; endbr64; mov eax, 0x1f; syscall; 
0x00000000121254: nop [rax+rax]; nop [rax]; endbr64; mov eax, 0x1f; syscall; 
0x00000000121252: nop [rax+rax]; nop [rax]; endbr64; mov eax, 0x1f; syscall; 
0x0000000010fbd2: nop [rax+rax]; nop [rax]; endbr64; mov eax, 0x56; syscall; 
0x0000000010fbd3: nop [rax+rax]; nop [rax]; endbr64; mov eax, 0x56; syscall; 
0x0000000010fbd4: nop [rax+rax]; nop [rax]; endbr64; mov eax, 0x56; syscall; 
0x00000000113e04: nop [rax+rax]; nop [rax]; endbr64; mov eax, 0x62; syscall; 
0x00000000113e02: nop [rax+rax]; nop [rax]; endbr64; mov eax, 0x62; syscall; 
0x00000000113e03: nop [rax+rax]; nop [rax]; endbr64; mov eax, 0x62; syscall; 
0x0000000010d3f3: nop [rax+rax]; nop [rax]; endbr64; mov eax, 0x84; syscall; 
0x0000000010d3f2: nop [rax+rax]; nop [rax]; endbr64; mov eax, 0x84; syscall; 
0x0000000010d3f4: nop [rax+rax]; nop [rax]; endbr64; mov eax, 0x84; syscall; 
0x00000000114202: nop [rax+rax]; nop [rax]; endbr64; mov eax, 0x8d; syscall; 
0x00000000114203: nop [rax+rax]; nop [rax]; endbr64; mov eax, 0x8d; syscall; 
0x00000000114204: nop [rax+rax]; nop [rax]; endbr64; mov eax, 0x8d; syscall; 
0x0000000015f885: nop [rax+rax]; nop [rax]; endbr64; mov rax, [rip+0x8c5c5]; jmp qword ptr [rax+0x1f0]; 
0x0000000015f882: nop [rax+rax]; nop [rax]; endbr64; mov rax, [rip+0x8c5c5]; jmp qword ptr [rax+0x1f0]; 
0x0000000015f884: nop [rax+rax]; nop [rax]; endbr64; mov rax, [rip+0x8c5c5]; jmp qword ptr [rax+0x1f0]; 
0x00000000094c63: nop [rax+rax]; nop [rax]; endbr64; mov rax, fs:[0x10]; ret; 
0x00000000094c64: nop [rax+rax]; nop [rax]; endbr64; mov rax, fs:[0x10]; ret; 
0x00000000094c62: nop [rax+rax]; nop [rax]; endbr64; mov rax, fs:[0x10]; ret; 
0x00000000023f14: nop [rax+rax]; nop [rax]; endbr64; ret; 
0x00000000023f13: nop [rax+rax]; nop [rax]; endbr64; ret; 
0x00000000023f12: nop [rax+rax]; nop [rax]; endbr64; ret; 
0x00000000146823: nop [rax+rax]; nop [rax]; endbr64; ret; 
0x00000000146825: nop [rax+rax]; nop [rax]; endbr64; ret; 
0x00000000146824: nop [rax+rax]; nop [rax]; endbr64; ret; 
0x0000000010c6c4: nop [rax+rax]; nop [rax]; endbr64; xor eax, eax; ret; 
0x0000000010c6c3: nop [rax+rax]; nop [rax]; endbr64; xor eax, eax; ret; 
0x0000000012cf34: nop [rax+rax]; nop [rax]; endbr64; xor eax, eax; ret; 
0x0000000012cf32: nop [rax+rax]; nop [rax]; endbr64; xor eax, eax; ret; 
0x0000000010c6c5: nop [rax+rax]; nop [rax]; endbr64; xor eax, eax; ret; 
0x0000000012cf33: nop [rax+rax]; nop [rax]; endbr64; xor eax, eax; ret; 
0x00000000178673: nop [rax+rax]; nop [rax]; mov [rcx], dl; ret; 
0x00000000178671: nop [rax+rax]; nop [rax]; mov [rcx], dl; ret; 
0x00000000178674: nop [rax+rax]; nop [rax]; mov [rcx], dl; ret; 
0x000000000b7e63: nop [rax+rax]; nop [rax]; mov [rdi], dl; ret; 
0x000000000b7e64: nop [rax+rax]; nop [rax]; mov [rdi], dl; ret; 
0x000000000b7e61: nop [rax+rax]; nop [rax]; mov [rdi], dl; ret; 
0x000000000b7b61: nop [rax+rax]; nop [rax]; mov dl, [rsi]; mov [rdi], dl; ret; 
0x000000000b7b64: nop [rax+rax]; nop [rax]; mov dl, [rsi]; mov [rdi], dl; ret; 
0x000000000b7b63: nop [rax+rax]; nop [rax]; mov dl, [rsi]; mov [rdi], dl; ret; 
0x0000000016d581: nop [rax+rax]; nop [rax]; mov edx, [rsi-0x4]; mov [rdi-0x4], edx; ret; 
0x0000000016d584: nop [rax+rax]; nop [rax]; mov edx, [rsi-0x4]; mov [rdi-0x4], edx; ret; 
0x0000000016d583: nop [rax+rax]; nop [rax]; mov edx, [rsi-0x4]; mov [rdi-0x4], edx; ret; 
0x000000000430b3: nop [rax+rax]; nop [rax]; mov rax, 0xf; syscall; 
0x000000000430b1: nop [rax+rax]; nop [rax]; mov rax, 0xf; syscall; 
0x000000000430b4: nop [rax+rax]; nop [rax]; mov rax, 0xf; syscall; 
0x000000000b67d3: nop [rax+rax]; nop [rax]; mov rax, rdi; ret; 
0x000000000b67d4: nop [rax+rax]; nop [rax]; mov rax, rdi; ret; 
0x000000000b67d1: nop [rax+rax]; nop [rax]; mov rax, rdi; ret; 
0x00000000167821: nop [rax+rax]; nop [rax]; mov rdx, [rsi-0x8]; mov [rdi-0x8], rdx; ret; 
0x00000000167823: nop [rax+rax]; nop [rax]; mov rdx, [rsi-0x8]; mov [rdi-0x8], rdx; ret; 
0x00000000167824: nop [rax+rax]; nop [rax]; mov rdx, [rsi-0x8]; mov [rdi-0x8], rdx; ret; 
0x0000000016d711: nop [rax+rax]; nop [rax]; movzx edx, byte ptr [rsi-0x1]; mov [rdi-0x1], dl; ret; 
0x0000000016d714: nop [rax+rax]; nop [rax]; movzx edx, byte ptr [rsi-0x1]; mov [rdi-0x1], dl; ret; 
0x0000000016d713: nop [rax+rax]; nop [rax]; movzx edx, byte ptr [rsi-0x1]; mov [rdi-0x1], dl; ret; 
0x0000000016d691: nop [rax+rax]; nop [rax]; movzx edx, word ptr [rsi-0x2]; mov [rdi-0x2], dx; ret; 
0x0000000016d693: nop [rax+rax]; nop [rax]; movzx edx, word ptr [rsi-0x2]; mov [rdi-0x2], dx; ret; 
0x0000000016d694: nop [rax+rax]; nop [rax]; movzx edx, word ptr [rsi-0x2]; mov [rdi-0x2], dx; ret; 
0x000000000b7b53: nop [rax+rax]; nop [rax]; ret; 
0x000000000b7b54: nop [rax+rax]; nop [rax]; ret; 
0x000000000b7b51: nop [rax+rax]; nop [rax]; ret; 
0x00000000192b04: nop [rax+rax]; nop [rax]; xor eax, eax; ret; 
0x000000000ac704: nop [rax+rax]; nop [rax]; xor eax, eax; ret; 
0x000000000ac705: nop [rax+rax]; nop [rax]; xor eax, eax; ret; 
0x000000000ac702: nop [rax+rax]; nop [rax]; xor eax, eax; ret; 
0x00000000192b01: nop [rax+rax]; nop [rax]; xor eax, eax; ret; 
0x00000000192b03: nop [rax+rax]; nop [rax]; xor eax, eax; ret; 
0x0000000018ca43: nop [rax+rax]; nop [rax]; xor eax, eax; vzeroupper; ret; 
0x000000001885c2: nop [rax+rax]; nop [rax]; xor eax, eax; vzeroupper; ret; 
0x000000001885c5: nop [rax+rax]; nop [rax]; xor eax, eax; vzeroupper; ret; 
0x0000000018ca44: nop [rax+rax]; nop [rax]; xor eax, eax; vzeroupper; ret; 
0x000000001885c4: nop [rax+rax]; nop [rax]; xor eax, eax; vzeroupper; ret; 
0x0000000018ca41: nop [rax+rax]; nop [rax]; xor eax, eax; vzeroupper; ret; 
0x0000000010dca5: nop [rax+rax]; nop; endbr64; mov eax, 0x102; syscall; 
0x0000000010dca6: nop [rax+rax]; nop; endbr64; mov eax, 0x102; syscall; 
0x0000000010dca7: nop [rax+rax]; nop; endbr64; mov eax, 0x102; syscall; 
0x0000000010fd26: nop [rax+rax]; nop; endbr64; mov eax, 0x107; syscall; 
0x0000000010fd25: nop [rax+rax]; nop; endbr64; mov eax, 0x107; syscall; 
0x0000000010fd27: nop [rax+rax]; nop; endbr64; mov eax, 0x107; syscall; 
0x0000000010fc67: nop [rax+rax]; nop; endbr64; mov eax, 0x10a; syscall; 
0x0000000010fc65: nop [rax+rax]; nop; endbr64; mov eax, 0x10a; syscall; 
0x0000000010fc66: nop [rax+rax]; nop; endbr64; mov eax, 0x10a; syscall; 
0x0000000011fe15: nop [rax+rax]; nop; endbr64; mov eax, 0x110; syscall; 
0x0000000011fe17: nop [rax+rax]; nop; endbr64; mov eax, 0x110; syscall; 
0x0000000011fe16: nop [rax+rax]; nop; endbr64; mov eax, 0x110; syscall; 
0x0000000011fe75: nop [rax+rax]; nop; endbr64; mov eax, 0x11b; syscall; 
0x0000000011fe76: nop [rax+rax]; nop; endbr64; mov eax, 0x11b; syscall; 
0x0000000011fe77: nop [rax+rax]; nop; endbr64; mov eax, 0x11b; syscall; 
0x0000000011fae6: nop [rax+rax]; nop; endbr64; mov eax, 0x123; syscall; 
0x0000000011fae7: nop [rax+rax]; nop; endbr64; mov eax, 0x123; syscall; 
0x0000000011fae5: nop [rax+rax]; nop; endbr64; mov eax, 0x123; syscall; 
0x0000000010e917: nop [rax+rax]; nop; endbr64; mov eax, 0x124; syscall; 
0x0000000010e916: nop [rax+rax]; nop; endbr64; mov eax, 0x124; syscall; 
0x0000000010e915: nop [rax+rax]; nop; endbr64; mov eax, 0x124; syscall; 
0x0000000010e975: nop [rax+rax]; nop; endbr64; mov eax, 0x125; syscall; 
0x0000000010e977: nop [rax+rax]; nop; endbr64; mov eax, 0x125; syscall; 
0x0000000010e976: nop [rax+rax]; nop; endbr64; mov eax, 0x125; syscall; 
0x0000000011fc07: nop [rax+rax]; nop; endbr64; mov eax, 0x126; syscall; 
0x0000000011fc05: nop [rax+rax]; nop; endbr64; mov eax, 0x126; syscall; 
0x0000000011fc06: nop [rax+rax]; nop; endbr64; mov eax, 0x126; syscall; 
0x0000000011ff06: nop [rax+rax]; nop; endbr64; mov eax, 0x12c; syscall; 
0x0000000011ff05: nop [rax+rax]; nop; endbr64; mov eax, 0x12c; syscall; 
0x0000000011ff07: nop [rax+rax]; nop; endbr64; mov eax, 0x12c; syscall; 
0x0000000011fa27: nop [rax+rax]; nop; endbr64; mov eax, 0x131; syscall; 
0x0000000011fa26: nop [rax+rax]; nop; endbr64; mov eax, 0x131; syscall; 
0x0000000011fa25: nop [rax+rax]; nop; endbr64; mov eax, 0x131; syscall; 
0x00000000115305: nop [rax+rax]; nop; endbr64; mov eax, 0x132; syscall; 
0x00000000115306: nop [rax+rax]; nop; endbr64; mov eax, 0x132; syscall; 
0x00000000115307: nop [rax+rax]; nop; endbr64; mov eax, 0x132; syscall; 
0x00000000120027: nop [rax+rax]; nop; endbr64; mov eax, 0x14a; syscall; 
0x00000000120026: nop [rax+rax]; nop; endbr64; mov eax, 0x14a; syscall; 
0x00000000120025: nop [rax+rax]; nop; endbr64; mov eax, 0x14a; syscall; 
0x00000000120055: nop [rax+rax]; nop; endbr64; mov eax, 0x14b; syscall; 
0x00000000120057: nop [rax+rax]; nop; endbr64; mov eax, 0x14b; syscall; 
0x00000000120056: nop [rax+rax]; nop; endbr64; mov eax, 0x14b; syscall; 
0x0000000010e947: nop [rax+rax]; nop; endbr64; mov eax, 0x16; syscall; 
0x0000000010e946: nop [rax+rax]; nop; endbr64; mov eax, 0x16; syscall; 
0x0000000010e945: nop [rax+rax]; nop; endbr64; mov eax, 0x16; syscall; 
0x00000000102736: nop [rax+rax]; nop; endbr64; mov eax, 0x18; syscall; 
0x00000000102735: nop [rax+rax]; nop; endbr64; mov eax, 0x18; syscall; 
0x00000000102737: nop [rax+rax]; nop; endbr64; mov eax, 0x18; syscall; 
0x00000000118ac5: nop [rax+rax]; nop; endbr64; mov eax, 0x1b; syscall; 
0x00000000118ac7: nop [rax+rax]; nop; endbr64; mov eax, 0x1b; syscall; 
0x00000000118ac6: nop [rax+rax]; nop; endbr64; mov eax, 0x1b; syscall; 
0x00000000118a97: nop [rax+rax]; nop; endbr64; mov eax, 0x1c; syscall; 
0x00000000118a95: nop [rax+rax]; nop; endbr64; mov eax, 0x1c; syscall; 
0x00000000118a96: nop [rax+rax]; nop; endbr64; mov eax, 0x1c; syscall; 
0x0000000010e8b5: nop [rax+rax]; nop; endbr64; mov eax, 0x20; syscall; 
0x0000000010e8b7: nop [rax+rax]; nop; endbr64; mov eax, 0x20; syscall; 
0x0000000010e8b6: nop [rax+rax]; nop; endbr64; mov eax, 0x20; syscall; 
0x0000000010e8e5: nop [rax+rax]; nop; endbr64; mov eax, 0x21; syscall; 
0x0000000010e8e6: nop [rax+rax]; nop; endbr64; mov eax, 0x21; syscall; 
0x0000000010e8e7: nop [rax+rax]; nop; endbr64; mov eax, 0x21; syscall; 
0x000000000e2db7: nop [rax+rax]; nop; endbr64; mov eax, 0x25; syscall; 
0x000000000e2db5: nop [rax+rax]; nop; endbr64; mov eax, 0x25; syscall; 
0x000000000e2db6: nop [rax+rax]; nop; endbr64; mov eax, 0x25; syscall; 
0x000000000d4206: nop [rax+rax]; nop; endbr64; mov eax, 0x26; syscall; 
0x000000000d4207: nop [rax+rax]; nop; endbr64; mov eax, 0x26; syscall; 
0x000000000d4205: nop [rax+rax]; nop; endbr64; mov eax, 0x26; syscall; 
0x000000001207c6: nop [rax+rax]; nop; endbr64; mov eax, 0x29; syscall; 
0x000000001207c5: nop [rax+rax]; nop; endbr64; mov eax, 0x29; syscall; 
0x000000001207c7: nop [rax+rax]; nop; endbr64; mov eax, 0x29; syscall; 
0x00000000120185: nop [rax+rax]; nop; endbr64; mov eax, 0x31; syscall; 
0x00000000120186: nop [rax+rax]; nop; endbr64; mov eax, 0x31; syscall; 
0x00000000120187: nop [rax+rax]; nop; endbr64; mov eax, 0x31; syscall; 
0x00000000120287: nop [rax+rax]; nop; endbr64; mov eax, 0x33; syscall; 
0x00000000120285: nop [rax+rax]; nop; endbr64; mov eax, 0x33; syscall; 
0x00000000120286: nop [rax+rax]; nop; endbr64; mov eax, 0x33; syscall; 
0x00000000120257: nop [rax+rax]; nop; endbr64; mov eax, 0x34; syscall; 
0x00000000120256: nop [rax+rax]; nop; endbr64; mov eax, 0x34; syscall; 
0x00000000120255: nop [rax+rax]; nop; endbr64; mov eax, 0x34; syscall; 
0x00000000113366: nop [rax+rax]; nop; endbr64; mov eax, 0x3; syscall; 
0x00000000113367: nop [rax+rax]; nop; endbr64; mov eax, 0x3; syscall; 
0x00000000113365: nop [rax+rax]; nop; endbr64; mov eax, 0x3; syscall; 
0x0000000010ea36: nop [rax+rax]; nop; endbr64; mov eax, 0x50; syscall; 
0x0000000010ea37: nop [rax+rax]; nop; endbr64; mov eax, 0x50; syscall; 
0x0000000010ea35: nop [rax+rax]; nop; endbr64; mov eax, 0x50; syscall; 
0x0000000010ea67: nop [rax+rax]; nop; endbr64; mov eax, 0x51; syscall; 
0x0000000010ea65: nop [rax+rax]; nop; endbr64; mov eax, 0x51; syscall; 
0x0000000010ea66: nop [rax+rax]; nop; endbr64; mov eax, 0x51; syscall; 
0x0000000010fd55: nop [rax+rax]; nop; endbr64; mov eax, 0x54; syscall; 
0x0000000010fd56: nop [rax+rax]; nop; endbr64; mov eax, 0x54; syscall; 
0x0000000010fd57: nop [rax+rax]; nop; endbr64; mov eax, 0x54; syscall; 
0x0000000010fc97: nop [rax+rax]; nop; endbr64; mov eax, 0x59; syscall; 
0x0000000010fc96: nop [rax+rax]; nop; endbr64; mov eax, 0x59; syscall; 
0x0000000010fc95: nop [rax+rax]; nop; endbr64; mov eax, 0x59; syscall; 
0x0000000010dbb7: nop [rax+rax]; nop; endbr64; mov eax, 0x5b; syscall; 
0x0000000010dbb6: nop [rax+rax]; nop; endbr64; mov eax, 0x5b; syscall; 
0x0000000010dbb5: nop [rax+rax]; nop; endbr64; mov eax, 0x5b; syscall; 
0x0000000010f385: nop [rax+rax]; nop; endbr64; mov eax, 0x5c; syscall; 
0x0000000010f387: nop [rax+rax]; nop; endbr64; mov eax, 0x5c; syscall; 
0x0000000010f386: nop [rax+rax]; nop; endbr64; mov eax, 0x5c; syscall; 
0x0000000010f3b7: nop [rax+rax]; nop; endbr64; mov eax, 0x5d; syscall; 
0x0000000010f3b5: nop [rax+rax]; nop; endbr64; mov eax, 0x5d; syscall; 
0x0000000010f3b6: nop [rax+rax]; nop; endbr64; mov eax, 0x5d; syscall; 
0x0000000010f3e7: nop [rax+rax]; nop; endbr64; mov eax, 0x5e; syscall; 
0x0000000010f3e5: nop [rax+rax]; nop; endbr64; mov eax, 0x5e; syscall; 
0x0000000010f3e6: nop [rax+rax]; nop; endbr64; mov eax, 0x5e; syscall; 
0x000000000e2b97: nop [rax+rax]; nop; endbr64; mov eax, 0x64; syscall; 
0x000000000e2b96: nop [rax+rax]; nop; endbr64; mov eax, 0x64; syscall; 
0x000000000e2b95: nop [rax+rax]; nop; endbr64; mov eax, 0x64; syscall; 
0x0000000011fc67: nop [rax+rax]; nop; endbr64; mov eax, 0x67; syscall; 
0x0000000011fc65: nop [rax+rax]; nop; endbr64; mov eax, 0x67; syscall; 
0x0000000011fc66: nop [rax+rax]; nop; endbr64; mov eax, 0x67; syscall; 
0x000000000e43c7: nop [rax+rax]; nop; endbr64; mov eax, 0x6d; syscall; 
0x000000000e43c5: nop [rax+rax]; nop; endbr64; mov eax, 0x6d; syscall; 
0x000000000e43c6: nop [rax+rax]; nop; endbr64; mov eax, 0x6d; syscall; 
0x000000000e43f6: nop [rax+rax]; nop; endbr64; mov eax, 0x6f; syscall; 
0x000000000e43f7: nop [rax+rax]; nop; endbr64; mov eax, 0x6f; syscall; 
0x000000000e43f5: nop [rax+rax]; nop; endbr64; mov eax, 0x6f; syscall; 
0x000000000e4455: nop [rax+rax]; nop; endbr64; mov eax, 0x70; syscall; 
0x000000000e4456: nop [rax+rax]; nop; endbr64; mov eax, 0x70; syscall; 
0x000000000e4457: nop [rax+rax]; nop; endbr64; mov eax, 0x70; syscall; 
0x000000000e4486: nop [rax+rax]; nop; endbr64; mov eax, 0x76; syscall; 
0x000000000e4487: nop [rax+rax]; nop; endbr64; mov eax, 0x76; syscall; 
0x000000000e4485: nop [rax+rax]; nop; endbr64; mov eax, 0x76; syscall; 
0x000000000e44b6: nop [rax+rax]; nop; endbr64; mov eax, 0x78; syscall; 
0x000000000e44b5: nop [rax+rax]; nop; endbr64; mov eax, 0x78; syscall; 
0x000000000e44b7: nop [rax+rax]; nop; endbr64; mov eax, 0x78; syscall; 
0x0000000011f215: nop [rax+rax]; nop; endbr64; mov eax, 0x7b; syscall; 
0x0000000011f216: nop [rax+rax]; nop; endbr64; mov eax, 0x7b; syscall; 
0x0000000011f217: nop [rax+rax]; nop; endbr64; mov eax, 0x7b; syscall; 
0x0000000011f9f5: nop [rax+rax]; nop; endbr64; mov eax, 0x7e; syscall; 
0x0000000011f9f7: nop [rax+rax]; nop; endbr64; mov eax, 0x7e; syscall; 
0x0000000011f9f6: nop [rax+rax]; nop; endbr64; mov eax, 0x7e; syscall; 
0x0000000011fe47: nop [rax+rax]; nop; endbr64; mov eax, 0x86; syscall; 
0x0000000011fe46: nop [rax+rax]; nop; endbr64; mov eax, 0x86; syscall; 
0x0000000011fe45: nop [rax+rax]; nop; endbr64; mov eax, 0x86; syscall; 
0x0000000010da56: nop [rax+rax]; nop; endbr64; mov eax, 0x8a; syscall; 
0x0000000010da57: nop [rax+rax]; nop; endbr64; mov eax, 0x8a; syscall; 
0x0000000010da55: nop [rax+rax]; nop; endbr64; mov eax, 0x8a; syscall; 
0x000000001026a5: nop [rax+rax]; nop; endbr64; mov eax, 0x8f; syscall; 
0x000000001026a7: nop [rax+rax]; nop; endbr64; mov eax, 0x8f; syscall; 
0x000000001026a6: nop [rax+rax]; nop; endbr64; mov eax, 0x8f; syscall; 
0x000000001026d5: nop [rax+rax]; nop; endbr64; mov eax, 0x90; syscall; 
0x000000001026d6: nop [rax+rax]; nop; endbr64; mov eax, 0x90; syscall; 
0x000000001026d7: nop [rax+rax]; nop; endbr64; mov eax, 0x90; syscall; 
0x00000000102706: nop [rax+rax]; nop; endbr64; mov eax, 0x91; syscall; 
0x00000000102705: nop [rax+rax]; nop; endbr64; mov eax, 0x91; syscall; 
0x00000000102707: nop [rax+rax]; nop; endbr64; mov eax, 0x91; syscall; 
0x00000000102767: nop [rax+rax]; nop; endbr64; mov eax, 0x92; syscall; 
0x00000000102766: nop [rax+rax]; nop; endbr64; mov eax, 0x92; syscall; 
0x00000000102765: nop [rax+rax]; nop; endbr64; mov eax, 0x92; syscall; 
0x00000000102797: nop [rax+rax]; nop; endbr64; mov eax, 0x93; syscall; 
0x00000000102795: nop [rax+rax]; nop; endbr64; mov eax, 0x93; syscall; 
0x00000000102796: nop [rax+rax]; nop; endbr64; mov eax, 0x93; syscall; 
0x000000001027c6: nop [rax+rax]; nop; endbr64; mov eax, 0x94; syscall; 
0x000000001027c5: nop [rax+rax]; nop; endbr64; mov eax, 0x94; syscall; 
0x000000001027c7: nop [rax+rax]; nop; endbr64; mov eax, 0x94; syscall; 
0x00000000118b57: nop [rax+rax]; nop; endbr64; mov eax, 0x96; syscall; 
0x00000000118b55: nop [rax+rax]; nop; endbr64; mov eax, 0x96; syscall; 
0x00000000118b56: nop [rax+rax]; nop; endbr64; mov eax, 0x96; syscall; 
0x00000000118b85: nop [rax+rax]; nop; endbr64; mov eax, 0x97; syscall; 
0x00000000118b86: nop [rax+rax]; nop; endbr64; mov eax, 0x97; syscall; 
0x00000000118b87: nop [rax+rax]; nop; endbr64; mov eax, 0x97; syscall; 
0x00000000118bb7: nop [rax+rax]; nop; endbr64; mov eax, 0x98; syscall; 
0x00000000118bb5: nop [rax+rax]; nop; endbr64; mov eax, 0x98; syscall; 
0x00000000118bb6: nop [rax+rax]; nop; endbr64; mov eax, 0x98; syscall; 
0x0000000011f957: nop [rax+rax]; nop; endbr64; mov eax, 0x9a; syscall; 
0x0000000011f956: nop [rax+rax]; nop; endbr64; mov eax, 0x9a; syscall; 
0x0000000011f955: nop [rax+rax]; nop; endbr64; mov eax, 0x9a; syscall; 
0x0000000011fd25: nop [rax+rax]; nop; endbr64; mov eax, 0x9b; syscall; 
0x0000000011fd26: nop [rax+rax]; nop; endbr64; mov eax, 0x9b; syscall; 
0x0000000011fd27: nop [rax+rax]; nop; endbr64; mov eax, 0x9b; syscall; 
0x00000000115185: nop [rax+rax]; nop; endbr64; mov eax, 0xa1; syscall; 
0x00000000115186: nop [rax+rax]; nop; endbr64; mov eax, 0xa1; syscall; 
0x00000000115187: nop [rax+rax]; nop; endbr64; mov eax, 0xa1; syscall; 
0x00000000115245: nop [rax+rax]; nop; endbr64; mov eax, 0xa2; syscall; 
0x00000000115247: nop [rax+rax]; nop; endbr64; mov eax, 0xa2; syscall; 
0x00000000115246: nop [rax+rax]; nop; endbr64; mov eax, 0xa2; syscall; 
0x00000000115675: nop [rax+rax]; nop; endbr64; mov eax, 0xa7; syscall; 
0x00000000115677: nop [rax+rax]; nop; endbr64; mov eax, 0xa7; syscall; 
0x00000000115676: nop [rax+rax]; nop; endbr64; mov eax, 0xa7; syscall; 
0x000000001156a7: nop [rax+rax]; nop; endbr64; mov eax, 0xa8; syscall; 
0x000000001156a5: nop [rax+rax]; nop; endbr64; mov eax, 0xa8; syscall; 
0x000000001156a6: nop [rax+rax]; nop; endbr64; mov eax, 0xa8; syscall; 
0x000000001189c7: nop [rax+rax]; nop; endbr64; mov eax, 0xa; syscall; 
0x000000001189c6: nop [rax+rax]; nop; endbr64; mov eax, 0xa; syscall; 
0x000000001189c5: nop [rax+rax]; nop; endbr64; mov eax, 0xa; syscall; 
0x0000000011f036: nop [rax+rax]; nop; endbr64; mov eax, 0xac; syscall; 
0x0000000011f035: nop [rax+rax]; nop; endbr64; mov eax, 0xac; syscall; 
0x0000000011f037: nop [rax+rax]; nop; endbr64; mov eax, 0xac; syscall; 
0x0000000011fa57: nop [rax+rax]; nop; endbr64; mov eax, 0xae; syscall; 
0x0000000011fa55: nop [rax+rax]; nop; endbr64; mov eax, 0xae; syscall; 
0x0000000011fa56: nop [rax+rax]; nop; endbr64; mov eax, 0xae; syscall; 
0x0000000011fa86: nop [rax+rax]; nop; endbr64; mov eax, 0xb0; syscall; 
0x0000000011fa87: nop [rax+rax]; nop; endbr64; mov eax, 0xb0; syscall; 
0x0000000011fa85: nop [rax+rax]; nop; endbr64; mov eax, 0xb0; syscall; 
0x00000000118997: nop [rax+rax]; nop; endbr64; mov eax, 0xb; syscall; 
0x00000000118996: nop [rax+rax]; nop; endbr64; mov eax, 0xb; syscall; 
0x00000000118995: nop [rax+rax]; nop; endbr64; mov eax, 0xb; syscall; 
0x00000000120086: nop [rax+rax]; nop; endbr64; mov eax, 0xba; syscall; 
0x00000000120085: nop [rax+rax]; nop; endbr64; mov eax, 0xba; syscall; 
0x00000000120087: nop [rax+rax]; nop; endbr64; mov eax, 0xba; syscall; 
0x0000000011f1b6: nop [rax+rax]; nop; endbr64; mov eax, 0xbb; syscall; 
0x0000000011f1b7: nop [rax+rax]; nop; endbr64; mov eax, 0xbb; syscall; 
0x0000000011f1b5: nop [rax+rax]; nop; endbr64; mov eax, 0xbb; syscall; 
0x0000000011cf36: nop [rax+rax]; nop; endbr64; mov eax, 0xc6; syscall; 
0x0000000011cf37: nop [rax+rax]; nop; endbr64; mov eax, 0xc6; syscall; 
0x0000000011cf35: nop [rax+rax]; nop; endbr64; mov eax, 0xc6; syscall; 
0x0000000011ce15: nop [rax+rax]; nop; endbr64; mov eax, 0xc7; syscall; 
0x0000000011ce17: nop [rax+rax]; nop; endbr64; mov eax, 0xc7; syscall; 
0x0000000011ce16: nop [rax+rax]; nop; endbr64; mov eax, 0xc7; syscall; 
0x0000000011fab5: nop [rax+rax]; nop; endbr64; mov eax, 0xd5; syscall; 
0x0000000011fab7: nop [rax+rax]; nop; endbr64; mov eax, 0xd5; syscall; 
0x0000000011fab6: nop [rax+rax]; nop; endbr64; mov eax, 0xd5; syscall; 
0x0000000011f985: nop [rax+rax]; nop; endbr64; mov eax, 0xe4; syscall; 
0x0000000011f987: nop [rax+rax]; nop; endbr64; mov eax, 0xe4; syscall; 
0x0000000011f986: nop [rax+rax]; nop; endbr64; mov eax, 0xe4; syscall; 
0x0000000011fbd6: nop [rax+rax]; nop; endbr64; mov eax, 0xfd; syscall; 
0x0000000011fbd7: nop [rax+rax]; nop; endbr64; mov eax, 0xfd; syscall; 
0x0000000011fbd5: nop [rax+rax]; nop; endbr64; mov eax, 0xfd; syscall; 
0x0000000011fc36: nop [rax+rax]; nop; endbr64; mov eax, 0xff; syscall; 
0x0000000011fc37: nop [rax+rax]; nop; endbr64; mov eax, 0xff; syscall; 
0x0000000011fc35: nop [rax+rax]; nop; endbr64; mov eax, 0xff; syscall; 
0x00000000190ca7: nop [rax+rax]; nop; lea rax, [rdi+0x1]; ret; 
0x00000000190ca6: nop [rax+rax]; nop; lea rax, [rdi+0x1]; ret; 
0x00000000190ca4: nop [rax+rax]; nop; lea rax, [rdi+0x1]; ret; 
0x00000000190c96: nop [rax+rax]; nop; lea rax, [rdi]; ret; 
0x00000000190c97: nop [rax+rax]; nop; lea rax, [rdi]; ret; 
0x00000000190c94: nop [rax+rax]; nop; lea rax, [rdi]; ret; 
0x00000000178694: nop [rax+rax]; nop; mov [rcx], dx; mov [rcx+0x2], dl; ret; 
0x00000000178696: nop [rax+rax]; nop; mov [rcx], dx; mov [rcx+0x2], dl; ret; 
0x00000000178697: nop [rax+rax]; nop; mov [rcx], dx; mov [rcx+0x2], dl; ret; 
0x000000001786f4: nop [rax+rax]; nop; mov [rcx], rdx; mov [rcx+0x8], dl; ret; 
0x000000001786f6: nop [rax+rax]; nop; mov [rcx], rdx; mov [rcx+0x8], dl; ret; 
0x000000001786f7: nop [rax+rax]; nop; mov [rcx], rdx; mov [rcx+0x8], dl; ret; 
0x000000000b7e87: nop [rax+rax]; nop; mov [rdi-0x1], edx; ret; 
0x000000000b7e84: nop [rax+rax]; nop; mov [rdi-0x1], edx; ret; 
0x000000000b7e86: nop [rax+rax]; nop; mov [rdi-0x1], edx; ret; 
0x000000000b7e96: nop [rax+rax]; nop; mov [rdi], edx; ret; 
0x000000000b7e97: nop [rax+rax]; nop; mov [rdi], edx; ret; 
0x000000000b7e94: nop [rax+rax]; nop; mov [rdi], edx; ret; 
0x000000000b7ee4: nop [rax+rax]; nop; mov [rdi], rdx; mov [rdi+0x8], dl; ret; 
0x000000000b7ee6: nop [rax+rax]; nop; mov [rdi], rdx; mov [rdi+0x8], dl; ret; 
0x000000000b7ee7: nop [rax+rax]; nop; mov [rdi], rdx; mov [rdi+0x8], dl; ret; 
0x000000000cfb46: nop [rax+rax]; nop; mov rax, 0x1; ret; 
0x000000000cfb47: nop [rax+rax]; nop; mov rax, 0x1; ret; 
0x000000000cfb44: nop [rax+rax]; nop; mov rax, 0x1; ret; 
0x0000000018a7f4: nop [rax+rax]; nop; mov rax, rdi; vzeroupper; ret; 
0x0000000018a7f7: nop [rax+rax]; nop; mov rax, rdi; vzeroupper; ret; 
0x0000000018a7f6: nop [rax+rax]; nop; mov rax, rdi; vzeroupper; ret; 
0x00000000184696: nop [rax+rax]; nop; vzeroupper; xor eax, eax; ret; 
0x00000000184697: nop [rax+rax]; nop; vzeroupper; xor eax, eax; ret; 
0x00000000184694: nop [rax+rax]; nop; vzeroupper; xor eax, eax; ret; 
0x0000000008e68b: nop [rax+rax]; or dword ptr [rbx], 0x20; mov eax, 0xffffffff; pop rbx; ret; 
0x0000000009e432: nop [rax+rax]; pop rbp; ret; 
0x0000000009e433: nop [rax+rax]; pop rbp; ret; 
0x00000000116dba: nop [rax+rax]; pxor xmm0, xmm0; movups [rdi], xmm0; ret; 
0x00000000116dbb: nop [rax+rax]; pxor xmm0, xmm0; movups [rdi], xmm0; ret; 
0x00000000042e17: nop [rax+rax]; ret; 
0x000000000ee497: nop [rax+rax]; ret; 
0x000000000ee496: nop [rax+rax]; ret; 
0x00000000042e18: nop [rax+rax]; ret; 
0x0000000006bbda: nop [rax+rax]; ret; 
0x0000000002fd93: nop [rax+rax]; ret; 
0x0000000008ad6a: nop [rax+rax]; shr edx, 0x4; and edx, 0x1; mov eax, edx; ret; 
0x0000000008ad6b: nop [rax+rax]; shr edx, 0x4; and edx, 0x1; mov eax, edx; ret; 
0x0000000008ae6b: nop [rax+rax]; shr edx, 0x5; and edx, 0x1; mov eax, edx; ret; 
0x0000000008ae6a: nop [rax+rax]; shr edx, 0x5; and edx, 0x1; mov eax, edx; ret; 
0x0000000015d146: nop [rax+rax]; sub ecx, 0x5; cmp cx, 0x3; jbe short 0x000000000015d160; ret; 
0x0000000015d147: nop [rax+rax]; sub ecx, 0x5; cmp cx, 0x3; jbe short 0x000000000015d160; ret; 
0x0000000015d148: nop [rax+rax]; sub ecx, 0x5; cmp cx, 0x3; jbe short 0x000000000015d160; ret; 
0x000000000935c2: nop [rax+rax]; sub edx, [rax+0x10]; mov eax, [rdi+0x10]; sub eax, edx; ret; 
0x000000000935c3: nop [rax+rax]; sub edx, [rax+0x10]; mov eax, [rdi+0x10]; sub eax, edx; ret; 
0x00000000092a53: nop [rax+rax]; sub rax, rcx; sub eax, 0x1; ret; 
0x00000000092a52: nop [rax+rax]; sub rax, rcx; sub eax, 0x1; ret; 
0x00000000087e23: nop [rax+rax]; sub rcx, rax; sar rcx, 0x2; lea eax, [rcx-0x1]; ret; 
0x00000000087e22: nop [rax+rax]; sub rcx, rax; sar rcx, 0x2; lea eax, [rcx-0x1]; ret; 
0x000000001846a7: nop [rax+rax]; tzcnt eax, eax; add rax, rdi; vzeroupper; ret; 
0x000000001846a6: nop [rax+rax]; tzcnt eax, eax; add rax, rdi; vzeroupper; ret; 
0x000000001846a8: nop [rax+rax]; tzcnt eax, eax; add rax, rdi; vzeroupper; ret; 
0x00000000189b07: nop [rax+rax]; vzeroupper; ret; 
0x00000000189b08: nop [rax+rax]; vzeroupper; ret; 
0x00000000184ae6: nop [rax+rax]; vzeroupper; xor eax, eax; ret; 
0x00000000184ae8: nop [rax+rax]; vzeroupper; xor eax, eax; ret; 
0x00000000184ae7: nop [rax+rax]; vzeroupper; xor eax, eax; ret; 
0x00000000113694: nop [rax+rax]; xchg ax, ax; endbr64; mov eax, 0x1; syscall; 
0x00000000113695: nop [rax+rax]; xchg ax, ax; endbr64; mov eax, 0x1; syscall; 
0x00000000113696: nop [rax+rax]; xchg ax, ax; endbr64; mov eax, 0x1; syscall; 
0x000000000e40e4: nop [rax+rax]; xchg ax, ax; endbr64; mov eax, 0x27; syscall; 
0x000000000e40e5: nop [rax+rax]; xchg ax, ax; endbr64; mov eax, 0x27; syscall; 
0x000000000e40e6: nop [rax+rax]; xchg ax, ax; endbr64; mov eax, 0x27; syscall; 
0x0000000011f924: nop [rax+rax]; xchg ax, ax; endbr64; mov eax, 0x9e; syscall; 
0x0000000011f926: nop [rax+rax]; xchg ax, ax; endbr64; mov eax, 0x9e; syscall; 
0x0000000011f925: nop [rax+rax]; xchg ax, ax; endbr64; mov eax, 0x9e; syscall; 
0x00000000114f54: nop [rax+rax]; xchg ax, ax; endbr64; mov eax, 0xab; syscall; 
0x00000000114f55: nop [rax+rax]; xchg ax, ax; endbr64; mov eax, 0xab; syscall; 
0x00000000114f56: nop [rax+rax]; xchg ax, ax; endbr64; mov eax, 0xab; syscall; 
0x000000000d0de5: nop [rax+rax]; xchg ax, ax; endbr64; mov eax, 0xc9; syscall; 
0x000000000d0de6: nop [rax+rax]; xchg ax, ax; endbr64; mov eax, 0xc9; syscall; 
0x000000000d0de4: nop [rax+rax]; xchg ax, ax; endbr64; mov eax, 0xc9; syscall; 
0x000000001255d5: nop [rax+rax]; xchg ax, ax; endbr64; ret; 
0x000000001255d6: nop [rax+rax]; xchg ax, ax; endbr64; ret; 
0x000000001255d4: nop [rax+rax]; xchg ax, ax; endbr64; ret; 
0x00000000178686: nop [rax+rax]; xchg ax, ax; mov [rcx], dx; ret; 
0x00000000178685: nop [rax+rax]; xchg ax, ax; mov [rcx], dx; ret; 
0x00000000178683: nop [rax+rax]; xchg ax, ax; mov [rcx], dx; ret; 
0x000000001786b6: nop [rax+rax]; xchg ax, ax; mov [rcx], edx; mov [rcx+0x4], dl; ret; 
0x000000001786b3: nop [rax+rax]; xchg ax, ax; mov [rcx], edx; mov [rcx+0x4], dl; ret; 
0x000000001786b5: nop [rax+rax]; xchg ax, ax; mov [rcx], edx; mov [rcx+0x4], dl; ret; 
0x000000000b7e73: nop [rax+rax]; xchg ax, ax; mov [rdi], dx; ret; 
0x000000000b7e75: nop [rax+rax]; xchg ax, ax; mov [rdi], dx; ret; 
0x000000000b7e76: nop [rax+rax]; xchg ax, ax; mov [rdi], dx; ret; 
0x000000000b7ea3: nop [rax+rax]; xchg ax, ax; mov [rdi], edx; mov [rdi+0x4], dl; ret; 
0x000000000b7ea5: nop [rax+rax]; xchg ax, ax; mov [rdi], edx; mov [rdi+0x4], dl; ret; 
0x000000000b7ea6: nop [rax+rax]; xchg ax, ax; mov [rdi], edx; mov [rdi+0x4], dl; ret; 
0x000000000b6e83: nop [rax+rax]; xchg ax, ax; mov dx, [rsi]; mov [rdi], dx; ret; 
0x000000000b6e86: nop [rax+rax]; xchg ax, ax; mov dx, [rsi]; mov [rdi], dx; ret; 
0x000000000b6e85: nop [rax+rax]; xchg ax, ax; mov dx, [rsi]; mov [rdi], dx; ret; 
0x000000000baf45: nop [rax+rax]; xchg ax, ax; xor ch, ch; mov [rdi], ch; ret; 
0x000000000baf46: nop [rax+rax]; xchg ax, ax; xor ch, ch; mov [rdi], ch; ret; 
0x000000000baf43: nop [rax+rax]; xchg ax, ax; xor ch, ch; mov [rdi], ch; ret; 
0x000000000cf385: nop [rax+rax]; xchg ax, ax; xor rax, rax; ret; 
0x000000000cf383: nop [rax+rax]; xchg ax, ax; xor rax, rax; ret; 
0x000000000cf386: nop [rax+rax]; xchg ax, ax; xor rax, rax; ret; 
0x000000000bc0e3: nop [rax+rax]; xor eax, eax; pop rbx; ret; 
0x000000000467c8: nop [rax+rax]; xor eax, eax; ret; 
0x000000000bc777: nop [rax+rax]; xor eax, eax; ret; 
0x0000000008a2ea: nop [rax+rax]; xor eax, eax; ret; 
0x00000000055c23: nop [rax+rax]; xor eax, eax; ret; 
0x000000000467c7: nop [rax+rax]; xor eax, eax; ret; 
0x000000000467c6: nop [rax+rax]; xor eax, eax; ret; 
0x000000001842fb: nop [rax+rax]; xor eax, eax; vzeroupper; ret; 
0x000000001842fa: nop [rax+rax]; xor eax, eax; vzeroupper; ret; 
0x000000000421a3: nop [rax+rax]; xor ecx, ecx; addsd xmm0, xmm0; mov [rdi], ecx; ret; 
0x000000000d0098: nop [rax+rax]; xor r12d, r12d; mov rax, r12; pop r12; ret; 
0x000000000d0097: nop [rax+rax]; xor r12d, r12d; mov rax, r12; pop r12; ret; 
0x0000000012e6b8: nop [rax+rax]; xor r8d, r8d; mov rax, r8; ret; 
0x000000000a288b: nop [rax+rax]; xor r8d, r8d; mov rax, r8; ret; 
0x000000000a288a: nop [rax+rax]; xor r8d, r8d; mov rax, r8; ret; 
0x000000000cf0bb: nop [rax+rax]; xor rax, rax; ret; 
0x000000000cf6a5: nop [rax+rax]; xor rax, rax; ret; 
0x000000000cf6a7: nop [rax+rax]; xor rax, rax; ret; 
0x000000000cf0ba: nop [rax+rax]; xor rax, rax; ret; 
0x000000000cf6a8: nop [rax+rax]; xor rax, rax; ret; 
0x000000000cfb1c: nop [rax]; add rax, 0x1; ret; 
0x0000000009f919: nop [rax]; add rsp, 0x8; ret; 
0x0000000018ea8c: nop [rax]; and eax, 0xff; and ecx, 0xff; sub eax, ecx; ret; 
0x0000000004238c: nop [rax]; and esi, 0x80000000; movd xmm0, esi; ret; 
0x000000000ac189: nop [rax]; bsf eax, eax; add rax, rdi; ret; 
0x000000000ac1a9: nop [rax]; bsf eax, eax; lea rax, [rax+rdi+0x20]; ret; 
0x000000000ac17c: nop [rax]; bsf eax, eax; lea rax, [rax+rdi-0x10]; ret; 
0x000000000ac3dd: nop [rax]; bsf eax, eax; lea rax, [rax+rdi-0x10]; ret; 
0x00000000184a9d: nop [rax]; bsr eax, eax; add eax, 0x60; add rax, rdi; ret; 
0x000000000ac7dd: nop [rax]; bsr eax, eax; lea rax, [rax+rdi+0x10]; ret; 
0x000000000ac679: nop [rax]; bsr eax, eax; lea rax, [rax+rdi+0x20]; ret; 
0x000000000ac689: nop [rax]; bsr eax, eax; lea rax, [rax+rdi+0x30]; ret; 
0x000000000e5fdc: nop [rax]; call qword ptr [r12+0x28]; 
0x000000000469dd: nop [rax]; call qword ptr [rbx]; 
0x000000001603f4: nop [rax]; call r12; 
0x00000000095555: nop [rax]; cmp [rip+0x159931], rdi; jbe short 0x0000000000095508; add rsp, 0x8; ret; 
0x0000000015791c: nop [rax]; endbr64; add dword ptr [rdi+0x28], 0x4; mov eax, 0x1; ret; 
0x00000000091ea9: nop [rax]; endbr64; cmp qword ptr [rdi+0x38], 0x0; je short 0x0000000000091ec0; ret; 
0x000000000241dc: nop [rax]; endbr64; lea rax, [rip+0x191a8c]; ret; 
0x0000000010c7bc: nop [rax]; endbr64; mov [rdi+0x4], esi; xor eax, eax; ret; 
0x0000000011f34c: nop [rax]; endbr64; mov eax, 0x122; syscall; 
0x0000000010e15c: nop [rax]; endbr64; mov eax, 0x15; syscall; 
0x00000000094ccc: nop [rax]; endbr64; mov eax, 0x18; syscall; 
0x00000000155bcd: nop [rax]; endbr64; mov eax, 0x1; ret; 
0x000000001211bc: nop [rax]; endbr64; mov eax, 0x1e; syscall; 
0x0000000012125c: nop [rax]; endbr64; mov eax, 0x1f; syscall; 
0x000000000d41dc: nop [rax]; endbr64; mov eax, 0x24; syscall; 
0x000000001541dc: nop [rax]; endbr64; mov eax, 0x2; ret; 
0x000000000e2b6c: nop [rax]; endbr64; mov eax, 0x3f; syscall; 
0x000000001211ec: nop [rax]; endbr64; mov eax, 0x43; syscall; 
0x00000000121039: nop [rax]; endbr64; mov eax, 0x44; syscall; 
0x0000000010dc7c: nop [rax]; endbr64; mov eax, 0x53; syscall; 
0x0000000010fbdc: nop [rax]; endbr64; mov eax, 0x56; syscall; 
0x0000000010db8c: nop [rax]; endbr64; mov eax, 0x5a; syscall; 
0x0000000010db7c: nop [rax]; endbr64; mov eax, 0x5f; syscall; 
0x00000000113e0c: nop [rax]; endbr64; mov eax, 0x62; syscall; 
0x000000000e410c: nop [rax]; endbr64; mov eax, 0x66; syscall; 
0x000000000e412c: nop [rax]; endbr64; mov eax, 0x68; syscall; 
0x000000000e411c: nop [rax]; endbr64; mov eax, 0x6b; syscall; 
0x000000000e413c: nop [rax]; endbr64; mov eax, 0x6c; syscall; 
0x000000000e40fc: nop [rax]; endbr64; mov eax, 0x6e; syscall; 
0x000000000e414c: nop [rax]; endbr64; mov eax, 0x73; syscall; 
0x000000000e439c: nop [rax]; endbr64; mov eax, 0x79; syscall; 
0x0000000011f1ec: nop [rax]; endbr64; mov eax, 0x7a; syscall; 
0x000000000e442d: nop [rax]; endbr64; mov eax, 0x7c; syscall; 
0x0000000010d3fc: nop [rax]; endbr64; mov eax, 0x84; syscall; 
0x0000000010da2c: nop [rax]; endbr64; mov eax, 0x89; syscall; 
0x0000000010e129: nop [rax]; endbr64; mov eax, 0x8; syscall; 
0x0000000011420c: nop [rax]; endbr64; mov eax, 0x8d; syscall; 
0x0000000010267c: nop [rax]; endbr64; mov eax, 0x8e; syscall; 
0x0000000012009c: nop [rax]; endbr64; mov eax, 0xea; syscall; 
0x00000000047a1d: nop [rax]; endbr64; mov eax, 0xffffffff; ret; 
0x0000000009380c: nop [rax]; endbr64; mov eax, 0xffffffff; ret; 
0x0000000009358c: nop [rax]; endbr64; mov eax, [rdi+0x10]; sub eax, [rsi+0x10]; ret; 
0x0000000015783d: nop [rax]; endbr64; mov eax, [rdi+0x28]; ret; 
0x000000001136cc: nop [rax]; endbr64; mov eax, [rdi+0x8]; and eax, 0x100f; ret; 
0x0000000008cdad: nop [rax]; endbr64; mov eax, [rdi]; and eax, 0x200; ret; 
0x000000000de30c: nop [rax]; endbr64; mov eax, [rdi]; ret; 
0x000000000440bd: nop [rax]; endbr64; mov eax, [rip+0x1a80e2]; ret; 
0x000000000342dc: nop [rax]; endbr64; mov eax, edi; and eax, 0x7f; ret; 
0x0000000012faec: nop [rax]; endbr64; mov eax, edi; bswap eax; ret; 
0x0000000012faf9: nop [rax]; endbr64; mov eax, edi; rol ax, 0x8; ret; 
0x0000000013a5cc: nop [rax]; endbr64; mov edi, [rdi]; mov eax, 0x3; syscall; 
0x0000000011365c: nop [rax]; endbr64; mov r10, rcx; mov eax, 0x11; syscall; 
0x0000000011f99c: nop [rax]; endbr64; mov r10, rcx; mov eax, 0x12d; syscall; 
0x0000000011f3dd: nop [rax]; endbr64; mov r10, rcx; mov eax, 0x12e; syscall; 
0x0000000011cdb9: nop [rax]; endbr64; mov r10, rcx; mov eax, 0xc1; syscall; 
0x00000000025adc: nop [rax]; endbr64; mov rax, [rip+0x1cb6bd]; ret; 
0x0000000015f88d: nop [rax]; endbr64; mov rax, [rip+0x8c5c5]; jmp qword ptr [rax+0x1f0]; 
0x00000000094c6c: nop [rax]; endbr64; mov rax, fs:[0x10]; ret; 
0x00000000093889: nop [rax]; endbr64; mov rax, rdi; ret; 
0x000000000421dc: nop [rax]; endbr64; pmovmskb eax, xmm0; and eax, 0x80; ret; 
0x0000000014682d: nop [rax]; endbr64; ret; 
0x00000000023f1c: nop [rax]; endbr64; ret; 
0x00000000157a49: nop [rax]; endbr64; xor eax, eax; ret; 
0x0000000010c6cd: nop [rax]; endbr64; xor eax, eax; ret; 
0x0000000009382c: nop [rax]; endbr64; xor eax, eax; ret; 
0x0000000009c239: nop [rax]; lea rax, [rdx-0x10]; ret; 
0x000000000d1004: nop [rax]; lea rax, [rip-0x10f]; add rsp, 0x58; ret; 
0x000000000d0ef4: nop [rax]; lea rax, [rip-0x10f]; ret; 
0x000000000d1014: nop [rax]; lea rax, [rip-0x11f]; ret; 
0x000000000d0ee4: nop [rax]; lea rax, [rip-0xff]; add rsp, 0x58; ret; 
0x000000000a8a99: nop [rax]; mov [rax], ecx; ret; 
0x000000000a8a7c: nop [rax]; mov [rax], si; ret; 
0x0000000017867c: nop [rax]; mov [rcx], dl; ret; 
0x000000000b7e6c: nop [rax]; mov [rdi], dl; ret; 
0x0000000018a57c: nop [rax]; mov [rdi], dl; vzeroupper; ret; 
0x0000000018a5ad: nop [rax]; mov [rdi], edx; mov [rdi+r8-0x4], edx; vzeroupper; ret; 
0x000000000a89d4: nop [rax]; mov [rdi], r8d; add rax, rdi; ret; 
0x000000000a8b39: nop [rax]; mov [rdi], si; lea rax, [rdi+rdx-0x1]; ret; 
0x000000000a899c: nop [rax]; mov [rdi], sil; add rax, rdi; ret; 
0x000000001766ad: nop [rax]; mov al, [rcx]; mov [rdx], al; mov rax, rdi; ret; 
0x000000000a8a71: nop [rax]; mov byte ptr [rax], 0x0; ret; 
0x000000000a8645: nop [rax]; mov byte ptr [rcx-0x1], 0x0; mov [rdx], rcx; ret; 
0x000000000ec479: nop [rax]; mov byte ptr [rdi+0x8], 0x15; mov eax, 0x1; ret; 
0x000000000b7b6c: nop [rax]; mov dl, [rsi]; mov [rdi], dl; ret; 
0x00000000078ad5: nop [rax]; mov dword ptr [rbp-0x524], 0x1; mov r10, rdx; jmp rax; 
0x0000000007f209: nop [rax]; mov dword ptr [rbp-0x528], 0x1; mov r9, rsi; jmp rax; 
0x0000000007f10c: nop [rax]; mov dword ptr [rbp-0x530], 0x1; mov r9, rsi; jmp rax; 
0x0000000007f1b5: nop [rax]; mov dword ptr [rbp-0x538], 0x1; mov r9, rsi; jmp rax; 
0x000000000b9309: nop [rax]; mov dx, [rsi]; mov [rdi], dx; lea rax, [rdi+0x2]; ret; 
0x00000000063055: nop [rax]; mov eax, 0x10; ret; 
0x000000000cf0a9: nop [rax]; mov eax, 0x1; jg short 0x00000000000cf0b9; neg eax; ret; 
0x0000000010c59c: nop [rax]; mov eax, 0x1; pop rbx; ret; 
0x0000000011638c: nop [rax]; mov eax, 0x1; ret; 
0x0000000013c1a9: nop [rax]; mov eax, 0x2; ret; 
0x0000000013c9e9: nop [rax]; mov eax, 0x7fffffff; ret; 
0x0000000011f7f1: nop [rax]; mov eax, 0x95; syscall; 
0x000000000e5044: nop [rax]; mov eax, 0xfc17; ret; 
0x000000000e5174: nop [rax]; mov eax, 0xff; ret; 
0x0000000013c659: nop [rax]; mov eax, 0xffffffff; ret; 
0x00000000090d6c: nop [rax]; mov eax, 0xffffffff; ret; 
0x0000000013b445: nop [rax]; mov eax, 0xffffffff; ret; 
0x0000000017aa1c: nop [rax]; mov eax, [rcx]; mov [rdx], eax; lea rax, [rdx+0x3]; ret; 
0x000000000ceffd: nop [rax]; mov eax, [rdi+0x1c]; cmp eax, [rsi+0x1c]; jne 0x00000000000cf0b0; ret; 
0x000000000cef9d: nop [rax]; mov eax, [rdi+0xc]; cmp eax, [rsi+0xc]; jne 0x00000000000cf0b0; ret; 
0x000000001929fd: nop [rax]; mov eax, [rdi-0x4]; cmp eax, [rsi-0x4]; jne 0x0000000000192af0; ret; 
0x0000000012fbc4: nop [rax]; mov eax, edi; shr eax, 0x18; ret; 
0x00000000083bec: nop [rax]; mov edx, 0x10; mov rsi, r13; mov rdi, r15; call qword ptr [r14+0x38]; 
0x0000000016d58c: nop [rax]; mov edx, [rsi-0x4]; mov [rdi-0x4], edx; ret; 
0x000000000b933c: nop [rax]; mov edx, [rsi]; mov [rdi], edx; lea rax, [rdi+0x4]; ret; 
0x0000000016dca9: nop [rax]; mov edx, [rsi]; mov [rdi], edx; ret; 
0x000000000b7b9d: nop [rax]; mov edx, [rsi]; mov [rdi], edx; ret; 
0x00000000078b01: nop [rax]; mov r10, [rbp-0x518]; jmp rax; 
0x0000000007f399: nop [rax]; mov r9, [rbp-0x508]; jmp rax; 
0x00000000041fbc: nop [rax]; mov rax, 0x8000000000000000; and rdx, rax; movq xmm0, rdx; ret; 
0x000000000430bc: nop [rax]; mov rax, 0xf; syscall; 
0x0000000013c969: nop [rax]; mov rax, 0xffffffffffffffff; mov rdx, 0xffffffffffffffff; ret; 
0x000000000468dc: nop [rax]; mov rax, [rax+0x18]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000011d05d: nop [rax]; mov rax, [rax+0x1c8]; ret; 
0x0000000011d051: nop [rax]; mov rax, [rax+0x58]; ret; 
0x00000000153e3d: nop [rax]; mov rax, [rbp+0x8]; mov rdi, rbp; call qword ptr [rax+0x28]; 
0x00000000153cdd: nop [rax]; mov rax, [rbp+0x8]; mov rdi, rbp; call qword ptr [rax+0x8]; 
0x0000000014e77b: nop [rax]; mov rax, [rbp+0x8]; mov rsi, rbx; mov rdi, rbp; call qword ptr [rax+0x48]; 
0x0000000014e77c: nop [rax]; mov rax, [rbp+0x8]; mov rsi, rbx; mov rdi, rbp; call qword ptr [rax+0x48]; 
0x0000000017a96d: nop [rax]; mov rax, [rcx]; mov [rdx], rax; lea rax, [rdx+0x7]; ret; 
0x0000000017663d: nop [rax]; mov rax, [rcx]; mov [rdx], rax; mov rax, rdi; ret; 
0x00000000155b4d: nop [rax]; mov rax, [rdi+0x8]; call qword ptr [rax+0x10]; 
0x0000000015656d: nop [rax]; mov rax, [rdi+0x8]; call qword ptr [rax+0x18]; 
0x00000000156824: nop [rax]; mov rax, [rdi+0x8]; lea rsi, [rsp+0x10]; call qword ptr [rax]; 
0x000000001571b9: nop [rax]; mov rax, [rdi+0x8]; lea rsi, [rsp+0x4]; call qword ptr [rax+0x40]; 
0x000000001569d4: nop [rax]; mov rax, [rdi+0x8]; mov rsi, rsp; call qword ptr [rax]; 
0x00000000149029: nop [rax]; mov rax, [rdi+0x8]; mov rsi, rsp; call qword ptr [rax]; 
0x0000000008d369: nop [rax]; mov rax, [rip+0x15eaf9]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000008aee4: nop [rax]; mov rax, [rip+0x160f81]; mov dword ptr fs:[rax], 0x9; mov eax, 0xffffffff; ret; 
0x00000000047c85: nop [rax]; mov rax, [rip+0x1a41e1]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000043e19: nop [rax]; mov rax, [rip+0x1a8049]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000043c19: nop [rax]; mov rax, [rip+0x1a8249]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000432c9: nop [rax]; mov rax, [rip+0x1a8b99]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000012f439: nop [rax]; mov rax, [rip+0xbca29]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000121fe9: nop [rax]; mov rax, [rip+0xcda81]; mov rax, [rax+0x18]; add word ptr [rax], 0x1; ret; 
0x00000000118921: nop [rax]; mov rax, [rip+0xd3541]; mov dword ptr fs:[rax], 0x16; mov rax, 0xffffffffffffffff; ret; 
0x00000000115771: nop [rax]; mov rax, [rip+0xd66f1]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000001142f5: nop [rax]; mov rax, [rip+0xd7b71]; mov dword ptr fs:[rax], 0xc; mov eax, 0xffffffff; ret; 
0x00000000113174: nop [rax]; mov rax, [rip+0xd8cf1]; mov dword ptr fs:[rax], 0x9; mov eax, 0xffffffff; ret; 
0x0000000010dc64: nop [rax]; mov rax, [rip+0xde201]; mov dword ptr fs:[rax], 0x5f; mov eax, 0xffffffff; ret; 
0x000000000b67dc: nop [rax]; mov rax, rdi; ret; 
0x000000000bc1dd: nop [rax]; mov rax, rdx; pop rbx; ret; 
0x000000000a8655: nop [rax]; mov rcx, rax; xor eax, eax; mov [rdx], rcx; ret; 
0x0000000009e8b8: nop [rax]; mov rdi, [rbx+0x48]; call rax; 
0x00000000153ec4: nop [rax]; mov rdi, rsp; mov rsi, rbp; call qword ptr [rax+0x18]; 
0x0000000016782c: nop [rax]; mov rdx, [rsi-0x8]; mov [rdi-0x8], rdx; ret; 
0x0000000016dae9: nop [rax]; mov rdx, [rsi]; mov [rdi], rdx; ret; 
0x00000000113491: nop [rax]; mov rdx, rsp; mov esi, 0x10; mov eax, 0x48; syscall; 
0x0000000009a795: nop [rax]; mov rsi, [rsp+0x18]; add rsp, 0x18; jmp rax; 
0x0000000009a9e1: nop [rax]; mov rsi, [rsp+0x48]; mov rdi, r13; call rax; 
0x000000000dd114: nop [rax]; mov rsi, r12; mov edi, ebp; mov eax, 0xe4; syscall; 
0x000000000dd094: nop [rax]; mov rsi, r12; mov edi, ebp; mov eax, 0xe5; syscall; 
0x0000000004494c: nop [rax]; mov rsi, r13; mov rdi, r14; mov rdx, r12; call rbp; 
0x0000000008d1f1: nop [rax]; mov rsi, rbx; mov edi, 0x2; mov eax, r9d; syscall; 
0x000000001506ad: nop [rax]; movdqu xmm0, [rdx]; mov eax, esi; movups [r8+0x30], xmm0; ret; 
0x000000000b6f79: nop [rax]; movdqu xmm0, [rsi]; movdqu [rdi], xmm0; mov [rdi+0x10], dh; ret; 
0x000000001506bc: nop [rax]; movdqu xmm1, [r8+0x30]; mov eax, 0x1; movups [rdx], xmm1; ret; 
0x0000000014cf94: nop [rax]; movdqu xmm1, [r8+0x8]; mov eax, 0x1; movups [rdx], xmm1; ret; 
0x0000000014823d: nop [rax]; movdqu xmm1, [rdi+0x20]; mov dword ptr [rsi], 0x6; movups [rsi+0x8], xmm1; ret; 
0x0000000018398d: nop [rax]; movsxd rax, ecx; add rax, rdi; ret; 
0x00000000102abd: nop [rax]; movzx eax, byte ptr [rdi+0x9]; and eax, 0xf; ret; 
0x00000000191f9d: nop [rax]; movzx eax, byte ptr [rdi-0x10]; movzx edx, byte ptr [rsi-0x10]; sub eax, edx; ret; 
0x0000000018d48d: nop [rax]; movzx eax, byte ptr [rdi]; movzx ecx, byte ptr [rsi]; sub eax, ecx; ret; 
0x000000000bc169: nop [rax]; movzx eax, cl; pop rbx; ret; 
0x000000000aa3bd: nop [rax]; movzx ecx, byte ptr [rsi]; movzx eax, byte ptr [rdi]; sub eax, ecx; ret; 
0x0000000016d71c: nop [rax]; movzx edx, byte ptr [rsi-0x1]; mov [rdi-0x1], dl; ret; 
0x0000000016ddf9: nop [rax]; movzx edx, byte ptr [rsi]; mov [rdi], dl; ret; 
0x0000000016d69c: nop [rax]; movzx edx, word ptr [rsi-0x2]; mov [rdi-0x2], dx; ret; 
0x0000000016dd89: nop [rax]; movzx edx, word ptr [rsi]; mov [rdi], dx; ret; 
0x00000000189069: nop [rax]; movzx edx, word ptr [rsi]; mov [rdi], dx; vzeroupper; ret; 
0x00000000094d64: nop [rax]; or dword ptr [rdi+0x8], 0x1; xor eax, eax; ret; 
0x0000000009b37c: nop [rax]; pop rbp; pop r12; pop r13; jmp rax; 
0x000000000ca081: nop [rax]; pop rbp; ret; 
0x00000000092905: nop [rax]; pop rbp; ret; 
0x00000000054341: nop [rax]; ret; 
0x000000000945fd: nop [rax]; ret; 
0x00000000038f54: nop [rax]; ret; 
0x000000000ce0b9: nop [rax]; setg al; movzx eax, al; lea eax, [rax+rax-0x1]; ret; 
0x000000000cf63d: nop [rax]; test rax, 0x1; je short 0x00000000000cf6b0; lea rax, [rdi-0x10]; ret; 
0x000000001883ad: nop [rax]; tzcnt eax, eax; add rax, rdi; vzeroupper; ret; 
0x0000000018a5cc: nop [rax]; vmovdqu [rdi], xmm0; vmovdqu [rdi+r8-0x10], xmm0; vzeroupper; ret; 
0x000000000fecac: nop [rax]; xor eax, eax; add rsp, 0x8; ret; 
0x000000000d0195: nop [rax]; xor eax, eax; add rsp, 0x8; ret; 
0x000000000ee4a1: nop [rax]; xor eax, eax; cmp [rsi], cl; je 0x00000000000ee3ed; ret; 
0x0000000009c245: nop [rax]; xor eax, eax; ret; 
0x000000000627e4: nop [rax]; xor eax, eax; ret; 
0x00000000040ff1: nop [rax]; xor eax, eax; ret; 
0x0000000018ca4c: nop [rax]; xor eax, eax; vzeroupper; ret; 
0x000000001885cd: nop [rax]; xor eax, eax; vzeroupper; ret; 
0x0000000013f00d: nop [rax]; xor r10d, r10d; mov eax, r10d; ret; 
0x0000000015740c: nop [rax]; xor r8d, r8d; mov eax, r8d; ret; 
0x00000000085974: nop [rax]; xor r8d, r8d; mov rax, r8; ret; 
0x0000000008e331: nop [rax]; xor r8d, r8d; mov rax, r8; ret; 
0x0000000008277d: nop [rax]; xor r8d, r8d; mov rax, r8; ret; 
0x00000000157831: nop edx, edi; add [rdi+0x28], edx; mov eax, 0x1; ret; 
0x00000000157821: nop edx, edi; add dword ptr [rdi+0x28], 0x4; mov eax, 0x1; ret; 
0x000000000dd089: nop edx, edi; add rsp, 0x8; pop rbp; pop r12; ret; 
0x0000000008df11: nop edx, edi; and dword ptr [rdi], 0xffffffcf; ret; 
0x00000000041f21: nop edx, edi; andpd xmm0, [rip+0x17a7c4]; andpd xmm1, [rip+0x17a7ac]; orpd xmm0, xmm1; ret; 
0x0000000012bdc1: nop edx, edi; cmp edi, 0x56; je short 0x000000000012bdd0; mov eax, 0x7; ret; 
0x000000000dcfd1: nop edx, edi; cmp esi, 0x1; je short 0x00000000000dcfe0; xor eax, eax; ret; 
0x00000000091eb1: nop edx, edi; cmp qword ptr [rdi+0x38], 0x0; je short 0x0000000000091ec0; ret; 
0x0000000009e221: nop edx, edi; cmp qword ptr [rip+0x150ce4], 0x0; je short 0x000000000009e230; ret; 
0x000000000dd141: nop edx, edi; cmp qword ptr [rsi+0x8], 0x3b9ac9ff; ja short 0x00000000000dd178; mov eax, 0xe3; syscall; 
0x0000000012e7d1: nop edx, edi; cmp rdx, rcx; ja short 0x000000000012e804; xor eax, eax; syscall; 
0x0000000013b411: nop edx, edi; lea eax, [rdi+0x9]; and eax, 0xfffffff8; add eax, 0x10; ret; 
0x000000000241d1: nop edx, edi; lea rax, [rip+0x18fcc3]; ret; 
0x000000000241e1: nop edx, edi; lea rax, [rip+0x191a8c]; ret; 
0x0000000010c7c1: nop edx, edi; mov [rdi+0x4], esi; xor eax, eax; ret; 
0x0000000010dcb1: nop edx, edi; mov eax, 0x102; syscall; 
0x0000000010fd31: nop edx, edi; mov eax, 0x107; syscall; 
0x000000001143d1: nop edx, edi; mov eax, 0x10; syscall; 
0x0000000010fc71: nop edx, edi; mov eax, 0x10a; syscall; 
0x0000000011fe21: nop edx, edi; mov eax, 0x110; syscall; 
0x0000000011fe81: nop edx, edi; mov eax, 0x11b; syscall; 
0x0000000011fee1: nop edx, edi; mov eax, 0x11f; syscall; 
0x0000000011f351: nop edx, edi; mov eax, 0x122; syscall; 
0x0000000011faf1: nop edx, edi; mov eax, 0x123; syscall; 
0x0000000010e921: nop edx, edi; mov eax, 0x124; syscall; 
0x0000000010e981: nop edx, edi; mov eax, 0x125; syscall; 
0x0000000011fc11: nop edx, edi; mov eax, 0x126; syscall; 
0x0000000011ff11: nop edx, edi; mov eax, 0x12c; syscall; 
0x0000000011fa31: nop edx, edi; mov eax, 0x131; syscall; 
0x00000000115311: nop edx, edi; mov eax, 0x132; syscall; 
0x0000000011ff71: nop edx, edi; mov eax, 0x134; syscall; 
0x00000000120001: nop edx, edi; mov eax, 0x13f; syscall; 
0x00000000120031: nop edx, edi; mov eax, 0x14a; syscall; 
0x00000000120061: nop edx, edi; mov eax, 0x14b; syscall; 
0x0000000010e161: nop edx, edi; mov eax, 0x15; syscall; 
0x0000000010e951: nop edx, edi; mov eax, 0x16; syscall; 
0x00000000094cd1: nop edx, edi; mov eax, 0x18; syscall; 
0x00000000146171: nop edx, edi; mov eax, 0x1; ret; 
0x000000001136a1: nop edx, edi; mov eax, 0x1; syscall; 
0x000000000e5241: nop edx, edi; mov eax, 0x1; test edi, edi; js short 0x00000000000e5250; ret; 
0x00000000118ad1: nop edx, edi; mov eax, 0x1b; syscall; 
0x00000000118aa1: nop edx, edi; mov eax, 0x1c; syscall; 
0x000000001211c1: nop edx, edi; mov eax, 0x1e; syscall; 
0x00000000121261: nop edx, edi; mov eax, 0x1f; syscall; 
0x0000000010e8c1: nop edx, edi; mov eax, 0x20; syscall; 
0x0000000010e8f1: nop edx, edi; mov eax, 0x21; syscall; 
0x000000000d41e1: nop edx, edi; mov eax, 0x24; syscall; 
0x000000000e2dc1: nop edx, edi; mov eax, 0x25; syscall; 
0x000000000d4211: nop edx, edi; mov eax, 0x26; syscall; 
0x000000000e40f1: nop edx, edi; mov eax, 0x27; syscall; 
0x000000001207d1: nop edx, edi; mov eax, 0x29; syscall; 
0x000000001489a1: nop edx, edi; mov eax, 0x2; ret; 
0x000000001207a1: nop edx, edi; mov eax, 0x30; syscall; 
0x00000000120191: nop edx, edi; mov eax, 0x31; syscall; 
0x000000001202f1: nop edx, edi; mov eax, 0x32; syscall; 
0x00000000120291: nop edx, edi; mov eax, 0x33; syscall; 
0x00000000120261: nop edx, edi; mov eax, 0x34; syscall; 
0x00000000113371: nop edx, edi; mov eax, 0x3; syscall; 
0x000000000e31a1: nop edx, edi; mov eax, 0x3b; syscall; 
0x00000000043401: nop edx, edi; mov eax, 0x3e; syscall; 
0x000000000e2b71: nop edx, edi; mov eax, 0x3f; syscall; 
0x000000001210b1: nop edx, edi; mov eax, 0x40; syscall; 
0x000000001211f1: nop edx, edi; mov eax, 0x43; syscall; 
0x00000000121041: nop edx, edi; mov eax, 0x44; syscall; 
0x00000000121071: nop edx, edi; mov eax, 0x47; syscall; 
0x0000000010e5a1: nop edx, edi; mov eax, 0x49; syscall; 
0x00000000116cf1: nop edx, edi; mov eax, 0x4c; syscall; 
0x00000000116d21: nop edx, edi; mov eax, 0x4d; syscall; 
0x0000000010ea41: nop edx, edi; mov eax, 0x50; syscall; 
0x0000000010ea71: nop edx, edi; mov eax, 0x51; syscall; 
0x00000000062eb1: nop edx, edi; mov eax, 0x52; syscall; 
0x0000000010dc81: nop edx, edi; mov eax, 0x53; syscall; 
0x0000000010fd61: nop edx, edi; mov eax, 0x54; syscall; 
0x0000000010fbe1: nop edx, edi; mov eax, 0x56; syscall; 
0x0000000010fd01: nop edx, edi; mov eax, 0x57; syscall; 
0x0000000010fc41: nop edx, edi; mov eax, 0x58; syscall; 
0x0000000010fca1: nop edx, edi; mov eax, 0x59; syscall; 
0x0000000010db91: nop edx, edi; mov eax, 0x5a; syscall; 
0x0000000010dbc1: nop edx, edi; mov eax, 0x5b; syscall; 
0x0000000010f391: nop edx, edi; mov eax, 0x5c; syscall; 
0x0000000010f3c1: nop edx, edi; mov eax, 0x5d; syscall; 
0x0000000010f3f1: nop edx, edi; mov eax, 0x5e; syscall; 
0x0000000010db81: nop edx, edi; mov eax, 0x5f; syscall; 
0x00000000113e11: nop edx, edi; mov eax, 0x62; syscall; 
0x0000000011fdf1: nop edx, edi; mov eax, 0x63; syscall; 
0x000000000e2ba1: nop edx, edi; mov eax, 0x64; syscall; 
0x000000000e4111: nop edx, edi; mov eax, 0x66; syscall; 
0x0000000011fc71: nop edx, edi; mov eax, 0x67; syscall; 
0x000000000e4131: nop edx, edi; mov eax, 0x68; syscall; 
0x000000000e4121: nop edx, edi; mov eax, 0x6b; syscall; 
0x000000000e4141: nop edx, edi; mov eax, 0x6c; syscall; 
0x000000000e43d1: nop edx, edi; mov eax, 0x6d; syscall; 
0x000000000e4101: nop edx, edi; mov eax, 0x6e; syscall; 
0x000000000e4401: nop edx, edi; mov eax, 0x6f; syscall; 
0x000000000e4461: nop edx, edi; mov eax, 0x70; syscall; 
0x000000000e4151: nop edx, edi; mov eax, 0x73; syscall; 
0x000000000e4491: nop edx, edi; mov eax, 0x76; syscall; 
0x000000000e44c1: nop edx, edi; mov eax, 0x78; syscall; 
0x000000000e43a1: nop edx, edi; mov eax, 0x79; syscall; 
0x0000000011f1f1: nop edx, edi; mov eax, 0x7a; syscall; 
0x0000000011f221: nop edx, edi; mov eax, 0x7b; syscall; 
0x000000000e4431: nop edx, edi; mov eax, 0x7c; syscall; 
0x0000000011f9d1: nop edx, edi; mov eax, 0x7d; syscall; 
0x0000000011fa01: nop edx, edi; mov eax, 0x7e; syscall; 
0x000000000439f1: nop edx, edi; mov eax, 0x83; syscall; 
0x0000000010d401: nop edx, edi; mov eax, 0x84; syscall; 
0x0000000011fe51: nop edx, edi; mov eax, 0x86; syscall; 
0x0000000011f411: nop edx, edi; mov eax, 0x87; syscall; 
0x0000000010da31: nop edx, edi; mov eax, 0x89; syscall; 
0x0000000010e131: nop edx, edi; mov eax, 0x8; syscall; 
0x0000000010da61: nop edx, edi; mov eax, 0x8a; syscall; 
0x000000001141d1: nop edx, edi; mov eax, 0x8c; syscall; 
0x00000000114211: nop edx, edi; mov eax, 0x8d; syscall; 
0x00000000102681: nop edx, edi; mov eax, 0x8e; syscall; 
0x000000001026b1: nop edx, edi; mov eax, 0x8f; syscall; 
0x000000001026e1: nop edx, edi; mov eax, 0x90; syscall; 
0x00000000102711: nop edx, edi; mov eax, 0x91; syscall; 
0x00000000102771: nop edx, edi; mov eax, 0x92; syscall; 
0x000000001027a1: nop edx, edi; mov eax, 0x93; syscall; 
0x000000001027d1: nop edx, edi; mov eax, 0x94; syscall; 
0x00000000118b31: nop edx, edi; mov eax, 0x95; syscall; 
0x00000000118b61: nop edx, edi; mov eax, 0x96; syscall; 
0x00000000118b91: nop edx, edi; mov eax, 0x97; syscall; 
0x00000000118bc1: nop edx, edi; mov eax, 0x98; syscall; 
0x00000000115651: nop edx, edi; mov eax, 0x99; syscall; 
0x0000000011f961: nop edx, edi; mov eax, 0x9a; syscall; 
0x0000000011fd31: nop edx, edi; mov eax, 0x9b; syscall; 
0x0000000011f931: nop edx, edi; mov eax, 0x9e; syscall; 
0x00000000115191: nop edx, edi; mov eax, 0xa1; syscall; 
0x00000000115251: nop edx, edi; mov eax, 0xa2; syscall; 
0x00000000115161: nop edx, edi; mov eax, 0xa3; syscall; 
0x0000000011f191: nop edx, edi; mov eax, 0xa6; syscall; 
0x00000000115681: nop edx, edi; mov eax, 0xa7; syscall; 
0x000000001156b1: nop edx, edi; mov eax, 0xa8; syscall; 
0x000000001189d1: nop edx, edi; mov eax, 0xa; syscall; 
0x00000000114e11: nop edx, edi; mov eax, 0xaa; syscall; 
0x00000000114f61: nop edx, edi; mov eax, 0xab; syscall; 
0x0000000011f041: nop edx, edi; mov eax, 0xac; syscall; 
0x0000000011f011: nop edx, edi; mov eax, 0xad; syscall; 
0x0000000011fa61: nop edx, edi; mov eax, 0xae; syscall; 
0x0000000011fa91: nop edx, edi; mov eax, 0xb0; syscall; 
0x0000000011fb51: nop edx, edi; mov eax, 0xb1; syscall; 
0x0000000011fd01: nop edx, edi; mov eax, 0xb4; syscall; 
0x000000001189a1: nop edx, edi; mov eax, 0xb; syscall; 
0x00000000120091: nop edx, edi; mov eax, 0xba; syscall; 
0x0000000011f1c1: nop edx, edi; mov eax, 0xbb; syscall; 
0x0000000011ceb1: nop edx, edi; mov eax, 0xc2; syscall; 
0x0000000011cf11: nop edx, edi; mov eax, 0xc3; syscall; 
0x0000000011cdf1: nop edx, edi; mov eax, 0xc4; syscall; 
0x0000000011cfa1: nop edx, edi; mov eax, 0xc5; syscall; 
0x0000000011cf41: nop edx, edi; mov eax, 0xc6; syscall; 
0x0000000011ce21: nop edx, edi; mov eax, 0xc7; syscall; 
0x000000000d0df1: nop edx, edi; mov eax, 0xc9; syscall; 
0x000000001142b1: nop edx, edi; mov eax, 0xc; syscall; 
0x00000000102871: nop edx, edi; mov eax, 0xcb; syscall; 
0x0000000011fac1: nop edx, edi; mov eax, 0xd5; syscall; 
0x0000000011f991: nop edx, edi; mov eax, 0xe4; syscall; 
0x000000001200a1: nop edx, edi; mov eax, 0xea; syscall; 
0x00000000116ad1: nop edx, edi; mov eax, 0xeb; syscall; 
0x0000000011fbe1: nop edx, edi; mov eax, 0xfd; syscall; 
0x0000000011fbb1: nop edx, edi; mov eax, 0xfe; syscall; 
0x0000000011fc41: nop edx, edi; mov eax, 0xff; syscall; 
0x00000000047a21: nop edx, edi; mov eax, 0xffffffff; ret; 
0x0000000010d0a1: nop edx, edi; mov eax, [rdi+0x108]; mov [rsi], eax; xor eax, eax; ret; 
0x00000000093591: nop edx, edi; mov eax, [rdi+0x10]; sub eax, [rsi+0x10]; ret; 
0x0000000010d091: nop edx, edi; mov eax, [rdi+0x10c]; mov [rsi], eax; xor eax, eax; ret; 
0x00000000157841: nop edx, edi; mov eax, [rdi+0x28]; ret; 
0x0000000010c7b1: nop edx, edi; mov eax, [rdi+0x4]; mov [rsi], eax; xor eax, eax; ret; 
0x000000001136d1: nop edx, edi; mov eax, [rdi+0x8]; and eax, 0x100f; ret; 
0x0000000008cdb1: nop edx, edi; mov eax, [rdi]; and eax, 0x200; ret; 
0x0000000008cd81: nop edx, edi; mov eax, [rdi]; and eax, 0x804; ret; 
0x00000000094dd1: nop edx, edi; mov eax, [rdi]; mov [rsi], eax; xor eax, eax; ret; 
0x000000000de311: nop edx, edi; mov eax, [rdi]; ret; 
0x0000000008df21: nop edx, edi; mov eax, [rdi]; shr eax, 0x4; and eax, 0x1; ret; 
0x0000000008df31: nop edx, edi; mov eax, [rdi]; shr eax, 0x5; and eax, 0x1; ret; 
0x000000000440d1: nop edx, edi; mov eax, [rip+0x1a80ce]; ret; 
0x000000000440c1: nop edx, edi; mov eax, [rip+0x1a80e2]; ret; 
0x00000000146eb1: nop edx, edi; mov eax, [rip+0xa9cc2]; test eax, eax; je short 0x0000000000146ec0; ret; 
0x0000000010d141: nop edx, edi; mov eax, [rsi]; mov [rdi+0x108], eax; xor eax, eax; ret; 
0x000000000342e1: nop edx, edi; mov eax, edi; and eax, 0x7f; ret; 
0x0000000012faf1: nop edx, edi; mov eax, edi; bswap eax; ret; 
0x0000000012fb01: nop edx, edi; mov eax, edi; rol ax, 0x8; ret; 
0x0000000010dff1: nop edx, edi; mov eax, fs:[0x18]; test eax, eax; jne short 0x000000000010e010; syscall; 
0x0000000013a5d1: nop edx, edi; mov edi, [rdi]; mov eax, 0x3; syscall; 
0x0000000015de01: nop edx, edi; mov edi, [rip+0x8e626]; test edi, edi; jns short 0x000000000015de10; ret; 
0x00000000043431: nop edx, edi; mov esi, 0x8; mov eax, 0x7f; syscall; 
0x00000000163371: nop edx, edi; mov qword ptr [rcx], 0x0; mov eax, 0xffffffff; ret; 
0x00000000093961: nop edx, edi; mov qword ptr [rip+0x15ae51], 0x0; mov qword ptr [rip+0x15ae4e], 0x0; ret; 
0x0000000010f421: nop edx, edi; mov r10, rcx; mov eax, 0x104; syscall; 
0x00000000062ee1: nop edx, edi; mov r10, rcx; mov eax, 0x108; syscall; 
0x0000000010fc11: nop edx, edi; mov r10, rcx; mov eax, 0x109; syscall; 
0x0000000010fcd1: nop edx, edi; mov r10, rcx; mov eax, 0x10b; syscall; 
0x00000000113661: nop edx, edi; mov r10, rcx; mov eax, 0x11; syscall; 
0x0000000011feb1: nop edx, edi; mov r10, rcx; mov eax, 0x11e; syscall; 
0x0000000011f9a1: nop edx, edi; mov r10, rcx; mov eax, 0x12d; syscall; 
0x0000000011f3e1: nop edx, edi; mov r10, rcx; mov eax, 0x12e; syscall; 
0x0000000011ff41: nop edx, edi; mov r10, rcx; mov eax, 0x12f; syscall; 
0x0000000011ffa1: nop edx, edi; mov r10, rcx; mov eax, 0x136; syscall; 
0x0000000011ffd1: nop edx, edi; mov r10, rcx; mov eax, 0x137; syscall; 
0x0000000011fcd1: nop edx, edi; mov r10, rcx; mov eax, 0x19; syscall; 
0x00000000112fd1: nop edx, edi; mov r10, rcx; mov eax, 0x28; syscall; 
0x00000000120801: nop edx, edi; mov r10, rcx; mov eax, 0x35; syscall; 
0x00000000120771: nop edx, edi; mov r10, rcx; mov eax, 0x36; syscall; 
0x000000001202c1: nop edx, edi; mov r10, rcx; mov eax, 0x37; syscall; 
0x0000000011fd61: nop edx, edi; mov r10, rcx; mov eax, 0x9d; syscall; 
0x0000000011fca1: nop edx, edi; mov r10, rcx; mov eax, 0xa5; syscall; 
0x0000000011fb81: nop edx, edi; mov r10, rcx; mov eax, 0xaf; syscall; 
0x0000000011fd91: nop edx, edi; mov r10, rcx; mov eax, 0xb2; syscall; 
0x0000000011fdc1: nop edx, edi; mov r10, rcx; mov eax, 0xb3; syscall; 
0x0000000011cfd1: nop edx, edi; mov r10, rcx; mov eax, 0xbc; syscall; 
0x0000000011cf71: nop edx, edi; mov r10, rcx; mov eax, 0xbd; syscall; 
0x0000000011ce51: nop edx, edi; mov r10, rcx; mov eax, 0xbe; syscall; 
0x0000000011ce81: nop edx, edi; mov r10, rcx; mov eax, 0xbf; syscall; 
0x0000000011cee1: nop edx, edi; mov r10, rcx; mov eax, 0xc0; syscall; 
0x0000000011cdc1: nop edx, edi; mov r10, rcx; mov eax, 0xc1; syscall; 
0x00000000118b01: nop edx, edi; mov r10, rcx; mov eax, 0xd8; syscall; 
0x00000000121181: nop edx, edi; mov r10, rcx; mov eax, 0xdc; syscall; 
0x0000000011fb21: nop edx, edi; mov r10, rcx; mov eax, 0xe9; syscall; 
0x000000001130d1: nop edx, edi; mov r10d, ecx; mov eax, 0x118; syscall; 
0x0000000010d8b1: nop edx, edi; mov r10d, ecx; mov eax, 0x14c; syscall; 
0x00000000112b11: nop edx, edi; mov r10d, ecx; mov eax, 0xdd; syscall; 
0x0000000011f311: nop edx, edi; mov r10d, edx; mov eax, 0x121; mov edx, 0x8; syscall; 
0x00000000092921: nop edx, edi; mov rax, 0xffffffffffffffff; ret; 
0x000000001573c1: nop edx, edi; mov rax, [rdi+0x18]; sub rax, [rdi+0x20]; ret; 
0x000000000de2c1: nop edx, edi; mov rax, [rdi+0x20]; ret; 
0x00000000093881: nop edx, edi; mov rax, [rdi+0x68]; ret; 
0x000000000874c1: nop edx, edi; mov rax, [rdi+0xa0]; cmp qword ptr [rax+0x30], 0x0; je short 0x00000000000874d8; ret; 
0x00000000095221: nop edx, edi; mov rax, [rdi]; cmp rax, 0x2000000; jbe short 0x0000000000095230; ret; 
0x00000000094e71: nop edx, edi; mov rax, [rdi]; cmp rax, 0x408; jbe short 0x0000000000094e80; ret; 
0x00000000095281: nop edx, edi; mov rax, [rdi]; cmp rax, 0xa0; jbe short 0x0000000000095290; ret; 
0x00000000094eb1: nop edx, edi; mov rax, [rdi]; cmp rax, 0xffff; jbe short 0x0000000000094ec0; ret; 
0x00000000094ed1: nop edx, edi; mov rax, [rdi]; nop; mov [rip+0x157409], rax; ret; 
0x00000000094e61: nop edx, edi; mov rax, [rdi]; nop; mov [rip+0x157429], rax; ret; 
0x00000000094e51: nop edx, edi; mov rax, [rdi]; nop; mov [rip+0x157441], rax; ret; 
0x00000000095271: nop edx, edi; mov rax, [rdi]; nop; mov [rip+0x159c0e], eax; ret; 
0x00000000093861: nop edx, edi; mov rax, [rip+0x159d35]; ret; 
0x00000000043c81: nop edx, edi; mov rax, [rip+0x1a81e5]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x000000000344d1: nop edx, edi; mov rax, [rip+0x1b792d]; add rax, fs:[0x0]; ret; 
0x000000000344f1: nop edx, edi; mov rax, [rip+0x1b79ed]; add rax, fs:[0x0]; ret; 
0x00000000034511: nop edx, edi; mov rax, [rip+0x1b7a0d]; add rax, fs:[0x0]; ret; 
0x0000000002f5d1: nop edx, edi; mov rax, [rip+0x1be38d]; ret; 
0x00000000024431: nop edx, edi; mov rax, [rip+0x1c7a35]; add rax, fs:[0x0]; ret; 
0x00000000025ae1: nop edx, edi; mov rax, [rip+0x1cb6bd]; ret; 
0x00000000025ad1: nop edx, edi; mov rax, [rip+0x1cb6dd]; ret; 
0x00000000163341: nop edx, edi; mov rax, [rip+0x88b25]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x00000000162ce1: nop edx, edi; mov rax, [rip+0x89185]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x00000000162cc1: nop edx, edi; mov rax, [rip+0x891a5]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x00000000162c81: nop edx, edi; mov rax, [rip+0x891e5]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x00000000162c61: nop edx, edi; mov rax, [rip+0x89205]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x00000000162c41: nop edx, edi; mov rax, [rip+0x89225]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x00000000162c21: nop edx, edi; mov rax, [rip+0x89245]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x00000000160bd1: nop edx, edi; mov rax, [rip+0x8b295]; mov dword ptr fs:[rax], 0x26; xor eax, eax; ret; 
0x0000000015f891: nop edx, edi; mov rax, [rip+0x8c5c5]; jmp qword ptr [rax+0x1f0]; 
0x0000000015c961: nop edx, edi; mov rax, [rip+0x8f505]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x00000000153091: nop edx, edi; mov rax, [rip+0x98d05]; lea rdx, [rip+0x9dd9e]; mov fs:[rax], rdx; ret; 
0x00000000141111: nop edx, edi; mov rax, [rip+0xaaed5]; mov rax, fs:[rax]; ret; 
0x00000000142e91: nop edx, edi; mov rax, [rip+0xadb85]; test rax, rax; jne short 0x0000000000142ea8; ret; 
0x0000000012feb1: nop edx, edi; mov rax, [rip+0xbbf9d]; add rax, fs:[0x0]; ret; 
0x000000001228e1: nop edx, edi; mov rax, [rip+0xc9575]; mov eax, [rax+0x38]; ret; 
0x000000001200d1: nop edx, edi; mov rax, [rip+0xcbd95]; mov dword ptr fs:[rax], 0x26; mov rax, 0xffffffffffffffff; ret; 
0x00000000115631: nop edx, edi; mov rax, [rip+0xd6835]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x000000001143b1: nop edx, edi; mov rax, [rip+0xd7ab5]; mov dword ptr fs:[rax], 0x26; mov rax, 0xffffffffffffffff; ret; 
0x0000000010dbf1: nop edx, edi; mov rax, [rip+0xde275]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x00000000034481: nop edx, edi; mov rax, [rsi+0x70]; movsxd rdi, edi; mov eax, [rax+rdi*4]; ret; 
0x00000000034491: nop edx, edi; mov rax, [rsi+0x78]; movsxd rdi, edi; mov eax, [rax+rdi*4]; ret; 
0x00000000094c71: nop edx, edi; mov rax, fs:[0x10]; ret; 
0x00000000047371: nop edx, edi; mov rax, rdi; cqo; idiv rsi; ret; 
0x00000000093891: nop edx, edi; mov rax, rdi; ret; 
0x00000000162b81: nop edx, edi; mov rdx, rsi; mov eax, 0xcb; mov esi, 0x80; syscall; 
0x000000000d10a1: nop edx, edi; mov rsi, rdi; mov eax, 0xa4; xor edi, edi; syscall; 
0x00000000042a51: nop edx, edi; movmskps eax, xmm0; and eax, 0x8; ret; 
0x0000000010c781: nop edx, edi; movzx eax, word ptr [rdi]; mov [rsi], ax; xor eax, eax; ret; 
0x00000000042661: nop edx, edi; pand xmm1, [rip+0x17a104]; pand xmm0, [rip+0x17a0ec]; por xmm0, xmm1; ret; 
0x000000000421e1: nop edx, edi; pmovmskb eax, xmm0; and eax, 0x80; ret; 
0x00000000042511: nop edx, edi; pmovmskb eax, xmm0; and eax, 0x8; ret; 
0x000000000e3101: nop edx, edi; pop rdi; mov eax, 0x3a; syscall; 
0x00000000023f21: nop edx, edi; ret; 
0x0000000011f7c1: nop edx, edi; test edx, edx; je short 0x000000000011f7f8; mov eax, 0x145; syscall; 
0x000000000bbf71: nop edx, edi; test rdx, rdx; jne short 0x00000000000bbf7d; mov rax, rdi; ret; 
0x00000000116cb1: nop edx, edi; test rsi, rsi; je short 0x0000000000116ce8; mov eax, 0x105; syscall; 
0x000000000b1d81: nop edx, edi; test rsi, rsi; jne short 0x00000000000b1d8d; xor rax, rax; ret; 
0x000000000cf6c1: nop edx, edi; test rsi, rsi; jne short 0x00000000000cf6cd; xor rax, rax; ret; 
0x000000000d0f01: nop edx, edi; test rsi, rsi; jne short 0x00000000000d0f38; mov eax, 0x60; syscall; 
0x000000000342f1: nop edx, edi; xor eax, eax; and edi, 0xffffff80; sete al; ret; 
0x00000000094c91: nop edx, edi; xor eax, eax; cmp rdi, rsi; sete al; ret; 
0x000000000928a1: nop edx, edi; xor eax, eax; ret; 
0x00000000113631: nop edx, edi; xor eax, eax; syscall; 
0x0000000008cd91: nop edx, edi; xor eax, eax; test byte ptr [rdi], 0x4; sete al; ret; 
0x0000000008cda1: nop edx, edi; xor eax, eax; test byte ptr [rdi], 0x8; sete al; ret; 
0x000000000908d1: nop edx, edi; xor eax, eax; test rdx, rdx; jne short 0x00000000000908e0; ret; 
0x00000000121221: nop edx, edi; xor r10d, r10d; mov eax, 0x1d; syscall; 
0x0000000010982d: nop; add [rax], al; add [rax-0x77], cl; ret; 
0x0000000004357f: nop; add [rax], al; add [rbx+0x5d], bl; pop r12; ret; 
0x00000000088ab9: nop; add [rax], al; add [rcx+0x1], cl; ret; 
0x00000000089960: nop; add [rax], al; add cl, ch; ret far; 
0x00000000114ef5: nop; add [rax], eax; add [rbx+0x5d], bl; pop r12; ret; 
0x0000000015d0e5: nop; add [rax], eax; add [rcx+rcx*4-0x40], cl; pop rbp; ret; 
0x0000000006305f: nop; add dword ptr [rdx+0x4], 0x1; xor eax, eax; ret; 
0x000000000778d9: nop; add rax, rbx; jmp rax; 
0x0000000014f757: nop; add rdx, rax; notrack jmp rdx; 
0x00000000094dbf: nop; and eax, 0xfffffffd; mov [rdi+0x8], eax; xor eax, eax; ret; 
0x0000000010af20: nop; bnd jmp qword ptr [rsi+0x66]; 
0x000000000ac65f: nop; bsr eax, eax; add rax, rdi; ret; 
0x00000000155d1f: nop; cmp eax, 0x1; jne short 0x0000000000155d15; mov rax, [rdi+0x8]; jmp qword ptr [rax]; 
0x000000000e510f: nop; cmp rax, 0x517b; jne short 0x00000000000e5120; mov eax, 0x40; ret; 
0x0000000015782f: nop; endbr64; add [rdi+0x28], edx; mov eax, 0x1; ret; 
0x0000000015781f: nop; endbr64; add dword ptr [rdi+0x28], 0x4; mov eax, 0x1; ret; 
0x0000000010dcaf: nop; endbr64; mov eax, 0x102; syscall; 
0x0000000010fd2f: nop; endbr64; mov eax, 0x107; syscall; 
0x0000000010fc6f: nop; endbr64; mov eax, 0x10a; syscall; 
0x0000000011fe1f: nop; endbr64; mov eax, 0x110; syscall; 
0x0000000011fe7f: nop; endbr64; mov eax, 0x11b; syscall; 
0x0000000011faef: nop; endbr64; mov eax, 0x123; syscall; 
0x0000000010e91f: nop; endbr64; mov eax, 0x124; syscall; 
0x0000000010e97f: nop; endbr64; mov eax, 0x125; syscall; 
0x0000000011fc0f: nop; endbr64; mov eax, 0x126; syscall; 
0x0000000011ff0f: nop; endbr64; mov eax, 0x12c; syscall; 
0x0000000011fa2f: nop; endbr64; mov eax, 0x131; syscall; 
0x0000000011530f: nop; endbr64; mov eax, 0x132; syscall; 
0x0000000012002f: nop; endbr64; mov eax, 0x14a; syscall; 
0x0000000012005f: nop; endbr64; mov eax, 0x14b; syscall; 
0x0000000010e94f: nop; endbr64; mov eax, 0x16; syscall; 
0x0000000010273f: nop; endbr64; mov eax, 0x18; syscall; 
0x0000000011369f: nop; endbr64; mov eax, 0x1; syscall; 
0x00000000118acf: nop; endbr64; mov eax, 0x1b; syscall; 
0x00000000118a9f: nop; endbr64; mov eax, 0x1c; syscall; 
0x0000000010e8bf: nop; endbr64; mov eax, 0x20; syscall; 
0x0000000010e8ef: nop; endbr64; mov eax, 0x21; syscall; 
0x000000000e2dbf: nop; endbr64; mov eax, 0x25; syscall; 
0x000000000d420f: nop; endbr64; mov eax, 0x26; syscall; 
0x000000000e40ef: nop; endbr64; mov eax, 0x27; syscall; 
0x000000001207cf: nop; endbr64; mov eax, 0x29; syscall; 
0x0000000014dabf: nop; endbr64; mov eax, 0x2; ret; 
0x0000000012018f: nop; endbr64; mov eax, 0x31; syscall; 
0x0000000012028f: nop; endbr64; mov eax, 0x33; syscall; 
0x0000000012025f: nop; endbr64; mov eax, 0x34; syscall; 
0x0000000011336f: nop; endbr64; mov eax, 0x3; syscall; 
0x0000000010ea3f: nop; endbr64; mov eax, 0x50; syscall; 
0x0000000010ea6f: nop; endbr64; mov eax, 0x51; syscall; 
0x00000000062eaf: nop; endbr64; mov eax, 0x52; syscall; 
0x0000000010fd5f: nop; endbr64; mov eax, 0x54; syscall; 
0x0000000010fc9f: nop; endbr64; mov eax, 0x59; syscall; 
0x0000000010dbbf: nop; endbr64; mov eax, 0x5b; syscall; 
0x0000000010f38f: nop; endbr64; mov eax, 0x5c; syscall; 
0x0000000010f3bf: nop; endbr64; mov eax, 0x5d; syscall; 
0x0000000010f3ef: nop; endbr64; mov eax, 0x5e; syscall; 
0x000000000e2b9f: nop; endbr64; mov eax, 0x64; syscall; 
0x0000000011fc6f: nop; endbr64; mov eax, 0x67; syscall; 
0x000000000e43cf: nop; endbr64; mov eax, 0x6d; syscall; 
0x000000000e43ff: nop; endbr64; mov eax, 0x6f; syscall; 
0x000000000e445f: nop; endbr64; mov eax, 0x70; syscall; 
0x000000000e448f: nop; endbr64; mov eax, 0x76; syscall; 
0x000000000e44bf: nop; endbr64; mov eax, 0x78; syscall; 
0x0000000011f21f: nop; endbr64; mov eax, 0x7b; syscall; 
0x0000000011f9ff: nop; endbr64; mov eax, 0x7e; syscall; 
0x0000000011fe4f: nop; endbr64; mov eax, 0x86; syscall; 
0x0000000010da5f: nop; endbr64; mov eax, 0x8a; syscall; 
0x000000001026af: nop; endbr64; mov eax, 0x8f; syscall; 
0x000000001026df: nop; endbr64; mov eax, 0x90; syscall; 
0x0000000010270f: nop; endbr64; mov eax, 0x91; syscall; 
0x0000000010276f: nop; endbr64; mov eax, 0x92; syscall; 
0x0000000010279f: nop; endbr64; mov eax, 0x93; syscall; 
0x000000001027cf: nop; endbr64; mov eax, 0x94; syscall; 
0x00000000118b5f: nop; endbr64; mov eax, 0x96; syscall; 
0x00000000118b8f: nop; endbr64; mov eax, 0x97; syscall; 
0x00000000118bbf: nop; endbr64; mov eax, 0x98; syscall; 
0x0000000011f95f: nop; endbr64; mov eax, 0x9a; syscall; 
0x0000000011fd2f: nop; endbr64; mov eax, 0x9b; syscall; 
0x0000000011f92f: nop; endbr64; mov eax, 0x9e; syscall; 
0x0000000011518f: nop; endbr64; mov eax, 0xa1; syscall; 
0x0000000011524f: nop; endbr64; mov eax, 0xa2; syscall; 
0x0000000011515f: nop; endbr64; mov eax, 0xa3; syscall; 
0x0000000011567f: nop; endbr64; mov eax, 0xa7; syscall; 
0x000000001156af: nop; endbr64; mov eax, 0xa8; syscall; 
0x000000001189cf: nop; endbr64; mov eax, 0xa; syscall; 
0x00000000114e0f: nop; endbr64; mov eax, 0xaa; syscall; 
0x00000000114f5f: nop; endbr64; mov eax, 0xab; syscall; 
0x0000000011f03f: nop; endbr64; mov eax, 0xac; syscall; 
0x0000000011fa5f: nop; endbr64; mov eax, 0xae; syscall; 
0x0000000011fa8f: nop; endbr64; mov eax, 0xb0; syscall; 
0x0000000011899f: nop; endbr64; mov eax, 0xb; syscall; 
0x0000000012008f: nop; endbr64; mov eax, 0xba; syscall; 
0x0000000011f1bf: nop; endbr64; mov eax, 0xbb; syscall; 
0x0000000011cf3f: nop; endbr64; mov eax, 0xc6; syscall; 
0x0000000011ce1f: nop; endbr64; mov eax, 0xc7; syscall; 
0x000000000d0def: nop; endbr64; mov eax, 0xc9; syscall; 
0x000000001142af: nop; endbr64; mov eax, 0xc; syscall; 
0x0000000011fabf: nop; endbr64; mov eax, 0xd5; syscall; 
0x0000000011f98f: nop; endbr64; mov eax, 0xe4; syscall; 
0x0000000011fbdf: nop; endbr64; mov eax, 0xfd; syscall; 
0x0000000011fc3f: nop; endbr64; mov eax, 0xff; syscall; 
0x0000000004342f: nop; endbr64; mov esi, 0x8; mov eax, 0x7f; syscall; 
0x0000000009395f: nop; endbr64; mov qword ptr [rip+0x15ae51], 0x0; mov qword ptr [rip+0x15ae4e], 0x0; ret; 
0x0000000010f41f: nop; endbr64; mov r10, rcx; mov eax, 0x104; syscall; 
0x0000000010fc0f: nop; endbr64; mov r10, rcx; mov eax, 0x109; syscall; 
0x0000000010fccf: nop; endbr64; mov r10, rcx; mov eax, 0x10b; syscall; 
0x0000000011feaf: nop; endbr64; mov r10, rcx; mov eax, 0x11e; syscall; 
0x0000000011ff3f: nop; endbr64; mov r10, rcx; mov eax, 0x12f; syscall; 
0x0000000011ff9f: nop; endbr64; mov r10, rcx; mov eax, 0x136; syscall; 
0x000000001207ff: nop; endbr64; mov r10, rcx; mov eax, 0x35; syscall; 
0x000000001202bf: nop; endbr64; mov r10, rcx; mov eax, 0x37; syscall; 
0x0000000011fd5f: nop; endbr64; mov r10, rcx; mov eax, 0x9d; syscall; 
0x0000000011fc9f: nop; endbr64; mov r10, rcx; mov eax, 0xa5; syscall; 
0x0000000011fb7f: nop; endbr64; mov r10, rcx; mov eax, 0xaf; syscall; 
0x0000000011cfcf: nop; endbr64; mov r10, rcx; mov eax, 0xbc; syscall; 
0x0000000011cf6f: nop; endbr64; mov r10, rcx; mov eax, 0xbd; syscall; 
0x0000000011ce4f: nop; endbr64; mov r10, rcx; mov eax, 0xbe; syscall; 
0x0000000011cedf: nop; endbr64; mov r10, rcx; mov eax, 0xc0; syscall; 
0x00000000118aff: nop; endbr64; mov r10, rcx; mov eax, 0xd8; syscall; 
0x0000000011fb1f: nop; endbr64; mov r10, rcx; mov eax, 0xe9; syscall; 
0x0000000009291f: nop; endbr64; mov rax, 0xffffffffffffffff; ret; 
0x000000000344cf: nop; endbr64; mov rax, [rip+0x1b792d]; add rax, fs:[0x0]; ret; 
0x0000000014110f: nop; endbr64; mov rax, [rip+0xaaed5]; mov rax, fs:[rax]; ret; 
0x00000000094c7f: nop; endbr64; mov rax, fs:[0x10]; ret; 
0x00000000042a4f: nop; endbr64; movmskps eax, xmm0; and eax, 0x8; ret; 
0x0000000004250f: nop; endbr64; pmovmskb eax, xmm0; and eax, 0x8; ret; 
0x000000000e30ff: nop; endbr64; pop rdi; mov eax, 0x3a; syscall; 
0x000000001255df: nop; endbr64; ret; 
0x0000000009289f: nop; endbr64; xor eax, eax; ret; 
0x0000000006e512: nop; fcos; jmp qword ptr [rsi+0xf]; 
0x00000000042ded: nop; jmp rdx; 
0x00000000190caf: nop; lea rax, [rdi+0x1]; ret; 
0x00000000190c9f: nop; lea rax, [rdi]; ret; 
0x0000000007b1c5: nop; lea rdx, [rip-0x4d4]; add rax, rdx; jmp rax; 
0x00000000087f56: nop; mov [rax], rdx; xor eax, eax; ret; 
0x0000000017869f: nop; mov [rcx], dx; mov [rcx+0x2], dl; ret; 
0x0000000017868f: nop; mov [rcx], dx; ret; 
0x000000001786bf: nop; mov [rcx], edx; mov [rcx+0x4], dl; ret; 
0x000000001786ff: nop; mov [rcx], rdx; mov [rcx+0x8], dl; ret; 
0x000000000b7e8f: nop; mov [rdi-0x1], edx; ret; 
0x000000000b7e7f: nop; mov [rdi], dx; ret; 
0x000000000b7eaf: nop; mov [rdi], edx; mov [rdi+0x4], dl; ret; 
0x000000000b7e9f: nop; mov [rdi], edx; ret; 
0x000000000b7eef: nop; mov [rdi], rdx; mov [rdi+0x8], dl; ret; 
0x00000000094ed7: nop; mov [rip+0x157409], rax; ret; 
0x00000000094ec0: nop; mov [rip+0x157418], rax; ret; 
0x00000000094e67: nop; mov [rip+0x157429], rax; ret; 
0x00000000094e57: nop; mov [rip+0x157441], rax; ret; 
0x00000000095277: nop; mov [rip+0x159c0e], eax; ret; 
0x0000000010cf9d: nop; mov al, 0x0; add [rax], al; call qword ptr [rax+0x88]; 
0x0000000017a9df: nop; mov al, [rcx]; mov [rdx], al; lea rax, [rdx]; ret; 
0x000000000ec43f: nop; mov byte ptr [rdi+0x8], 0x2; xor eax, eax; ret; 
0x000000000a8b2f: nop; mov byte ptr [rdi], 0x0; lea rax, [rdi+rdx-0x1]; ret; 
0x000000001679ff: nop; mov dl, [rsi-0x1]; mov [rdi-0x1], dl; ret; 
0x000000000b92ff: nop; mov dl, [rsi]; mov [rdi], dl; lea rax, [rdi+0x1]; ret; 
0x0000000014d02f: nop; mov dword ptr [r8+0x4], 0x0; mov eax, 0x1; ret; 
0x00000000078abf: nop; mov dword ptr [rbp-0x4d8], 0x1; mov r10, rdx; jmp rax; 
0x0000000007f21f: nop; mov dword ptr [rbp-0x500], 0x1; mov r9, rsi; jmp rax; 
0x00000000078aaf: nop; mov dword ptr [rbp-0x540], 0x1; mov r10, rdx; jmp rax; 
0x00000000095257: nop; mov dword ptr [rip+0x157052], 0x1; mov [rip+0x157044], eax; ret; 
0x00000000095230: nop; mov dword ptr [rip+0x157079], 0x1; mov [rip+0x15704e], rax; ret; 
0x00000000095207: nop; mov dword ptr [rip+0x1570a2], 0x1; mov [rip+0x15706f], rax; ret; 
0x000000000951e7: nop; mov dword ptr [rip+0x1570c2], 0x1; mov [rip+0x157087], rax; ret; 
0x00000000167bdf: nop; mov dx, [rsi-0x2]; mov [rdi-0x2], dx; ret; 
0x000000000b6e8f: nop; mov dx, [rsi]; mov [rdi], dx; ret; 
0x00000000094d6f: nop; mov eax, 0x16; ret; 
0x000000000e504f: nop; mov eax, 0x7e; ret; 
0x0000000013b8bf: nop; mov eax, 0xffffffff; ret; 
0x0000000014d00f: nop; mov eax, [r8]; mov [rdx], eax; mov eax, 0x1; ret; 
0x0000000014822f: nop; mov eax, [rdi+0x20]; mov dword ptr [rsi], 0x7; mov [rsi+0x8], eax; ret; 
0x000000000cf04f: nop; mov eax, [rdi+0x2c]; cmp eax, [rsi+0x2c]; jne short 0x00000000000cf0b0; ret; 
0x000000000cf07f: nop; mov eax, [rdi+0x34]; cmp eax, [rsi+0x34]; jne short 0x00000000000cf0b0; ret; 
0x000000000cf09f: nop; mov eax, [rdi+0x3c]; cmp eax, [rsi+0x3c]; jne short 0x00000000000cf0b0; ret; 
0x000000001929cf: nop; mov eax, [rdi-0xc]; cmp eax, [rsi-0xc]; jne 0x0000000000192af0; ret; 
0x00000000167f9f: nop; mov edx, [rsi-0x4]; mov [rdi-0x4], edx; ret; 
0x000000000b84ef: nop; mov edx, [rsi]; mov [rdi], edx; lea rax, [rdi+0x3]; ret; 
0x0000000018908f: nop; mov edx, [rsi]; mov [rdi], edx; vzeroupper; ret; 
0x00000000078acf: nop; mov r10, rdx; jmp rax; 
0x00000000054ddf: nop; mov r8d, 0xffffffff; mov eax, r8d; ret; 
0x0000000007f1af: nop; mov r9, rsi; jmp rax; 
0x000000000cfb4f: nop; mov rax, 0x1; ret; 
0x0000000014735f: nop; mov rax, [rbp+0x8]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x0000000014692f: nop; mov rax, [rbx+0x20]; mov rsi, r13; mov rdi, rbp; call qword ptr [rax+0x8]; 
0x0000000015659f: nop; mov rax, [rdi+0x8]; call qword ptr [rax+0x10]; 
0x00000000155e1f: nop; mov rax, [rdi+0x8]; lea rsi, [rsp+0x8]; call qword ptr [rax]; 
0x000000000d019f: nop; mov rax, [rip+0x11bcc9]; mov dword ptr fs:[rax], 0x16; xor eax, eax; ret; 
0x0000000009e61f: nop; mov rax, [rip+0x14d929]; call qword ptr [rax]; 
0x0000000004308f: nop; mov rax, [rip+0x1a8dd9]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000042f4f: nop; mov rax, [rip+0x1a8f19]; mov dword ptr fs:[rax], 0x16; mov rax, 0xffffffffffffffff; ret; 
0x000000001609df: nop; mov rax, [rip+0x8b489]; mov dword ptr fs:[rax], 0x16; xor eax, eax; ret; 
0x0000000011d03f: nop; mov rax, [rip+0xcee29]; mov dword ptr fs:[rax], 0x2; xor eax, eax; ret; 
0x000000001197ff: nop; mov rax, [rip+0xd2669]; mov dword ptr fs:[rax], 0x16; ret; 
0x0000000011579f: nop; mov rax, [rip+0xd66c9]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000110dcf: nop; mov rax, [rip+0xdb099]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000012ebdf: nop; mov rax, rdi; ret; 
0x0000000018a7ff: nop; mov rax, rdi; vzeroupper; ret; 
0x0000000009e7ef: nop; mov rdi, rbp; call rax; 
0x000000000256ca: nop; mov rdi, rbx; call rsi; 
0x000000000b853f: nop; mov rdx, [rsi]; mov [rdi], rdx; lea rax, [rdi+0x7]; ret; 
0x000000000b938f: nop; mov rdx, [rsi]; mov [rdi], rdx; lea rax, [rdi+0x8]; ret; 
0x000000000e72ff: nop; mov rsi, r12; mov rdi, r8; call qword ptr [r15+0x40]; 
0x000000000b947f: nop; movdqu xmm0, [rsi]; movdqu [rdi], xmm0; lea rax, [rdi+0x10]; ret; 
0x000000000b861f: nop; movdqu xmm0, [rsi]; movdqu [rdi], xmm0; lea rax, [rdi+0xf]; ret; 
0x000000000b6f6f: nop; movdqu xmm0, [rsi]; movdqu [rdi], xmm0; ret; 
0x0000000014fddf: nop; movdqu xmm2, [r8+0x1c]; mov eax, 0x1; movups [rdx], xmm2; ret; 
0x000000001506df: nop; movdqu xmm2, [rdx]; mov eax, 0x1; movups [r8+0x20], xmm2; ret; 
0x000000001506ef: nop; movdqu xmm3, [r8+0x20]; mov eax, 0x1; movups [rdx], xmm3; ret; 
0x000000001506cf: nop; movdqu xmm4, [r8+0x8]; mov eax, 0x1; movups [rdx], xmm4; ret; 
0x0000000015cf51: nop; nop [rax+rax]; nop [rax]; endbr64; ret; 
0x000000000430b0: nop; nop [rax+rax]; nop [rax]; mov rax, 0xf; syscall; 
0x000000000b08dd: nop; or eax, [rax]; add [rbp-0x77], cl; ret far; 
0x00000000146e9f: nop; pop rbp; ret; 
0x00000000198edf: nop; pop rbx; pop rbp; pop r12; ret; 
0x0000000008d29a: nop; push rsp; stc; jmp qword ptr [rsi-0x70]; 
0x000000000bb88f: nop; rep ret; 
0x0000000015ea7c: nop; ret far; 
0x000000000319ef: nop; ret; 
0x000000001569f7: nop; std; jmp qword ptr [rsi+0xf]; 
0x0000000012978f: nop; sub eax, edx; ret; 
0x000000000cf58f: nop; test rax, 0x1; je 0x00000000000cf4f5; lea rax, [rdi-0x10]; ret; 
0x0000000018469f: nop; vzeroupper; xor eax, eax; ret; 
0x000000000baf4f: nop; xor ch, ch; mov [rdi], ch; ret; 
0x00000000115c3f: nop; xor eax, eax; add rsp, 0x8; ret; 
0x0000000005297f: nop; xor eax, eax; ret; 
0x0000000002410f: nop; xor edi, edi; mov eax, edx; syscall; 
0x0000000012f3cf: nop; xor r8d, r8d; mov rax, r8; ret; 
0x000000000cf38f: nop; xor rax, rax; ret; 
0x0000000009f8d7: not byte ptr [rax+rax]; add rsp, 0x8; ret; 
0x0000000009f8d0: not byte ptr [rax+rax]; mov [rip+0x14f66e], rax; add rsp, 0x8; ret; 
0x0000000009f892: not byte ptr [rax+rax]; mov [rip+0x14f6ac], rax; ret; 
0x0000000009f899: not byte ptr [rax+rax]; ret; 
0x000000000dfd33: not byte ptr [rax]; add [rcx], al; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x0000000009f8b6: not dword ptr [rax+rax]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000dfc5b: not dword ptr [rax]; add [rcx], al; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x0000000012794f: not dword ptr [rbx-0x18]; or ch, [rbx-0x76b70011]; ret; 
0x000000001609a7: not eax; and [rdi+rdx*8], rax; xor eax, eax; ret; 
0x00000000041b51: not eax; and eax, ecx; ret; 
0x00000000041ed1: not eax; and eax, edx; ret; 
0x00000000157c29: not eax; shr eax, 0x1f; ret; 
0x000000001609a6: not rax; and [rdi+rdx*8], rax; xor eax, eax; ret; 
0x000000000407af: notrack bnd jmp rdx; 
0x0000000011a9cd: notrack call rbx; 
0x00000000040ab3: notrack jmp r10; 
0x00000000031ae0: notrack jmp r8; 
0x00000000165dc1: notrack jmp r9; 
0x00000000023e90: notrack jmp rax; 
0x00000000080eb5: notrack jmp rcx; 
0x0000000019419c: notrack jmp rdi; 
0x000000000407b0: notrack jmp rdx; 
0x000000000ec4b1: or [r10], r11b; mov eax, 0x2; ret; 
0x000000000ec441: or [r10], r8b; xor eax, eax; ret; 
0x0000000002fdd8: or [r11+0x1974fdf8], al; pop rbx; ret; 
0x000000000e8362: or [r11+0x5d], bl; pop r12; ret; 
0x000000001128f1: or [r11+0x5d], r11b; pop r12; pop r13; pop r14; ret; 
0x0000000009c683: or [r11+0x5e7709f8], r8b; lea rdx, [rip+0x1127d7]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000094d45: or [r11+0x68901e0], r8b; xor eax, eax; ret; 
0x0000000012cf05: or [r13+0x480d75c0], r8b; cmp dword ptr [rdi], 0x0; je short 0x000000000012cf20; ret; 
0x00000000148323: or [r14+0x20], r15b; mov rdi, rbp; call qword ptr [rax+0x30]; 
0x000000001483db: or [r14+0x8], r15b; mov rdi, rbp; call qword ptr [rax+0x30]; 
0x0000000014e6ff: or [r14+0x8], r15b; mov rdi, rbp; mov [r12+0x70], edx; call qword ptr [rax+0x30]; 
0x00000000149116: or [r14+0xf], r12b; insb [rdi], dx; ror dword ptr [rdi], 0x29; add al, 0x24; call qword ptr [rax+0x8]; 
0x000000000b39d6: or [r14+0xf], spl; adc eax, [rdx]; movlpd [rdx+0x8], xmm1; mov rax, rdi; ret; 
0x000000000b66e0: or [r14+0xf], spl; adc ecx, [rdx+0x8]; mov rax, rdi; ret; 
0x000000000b3aef: or [r14-0x77], spl; or [rax-0x77], cl; clc; ret; 
0x000000000ec436: or [r14], r10b; mov eax, 0x1; ret; 
0x000000000ec4d6: or [r14], r11b; mov eax, 0x2; ret; 
0x000000000666c6: or [r15+r9-0x4a], r8b; xor [rcx+0xf], al; mov dh, 0x45; add [rax-0x7d], cl; ret; 
0x0000000008e580: or [r15], cl; adc [rbx+0x18], eax; movups [rbx+0x28], xmm0; pop rbx; ret; 
0x00000000113cb4: or [r8+0x100], r15b; mov [rdi+0x16], ax; ret; 
0x00000000154495: or [r8+0x1], r15b; pop rbx; pop rbp; pop r12; ret; 
0x00000000057d97: or [r8+0x2], r15b; ret; 
0x000000000939ac: or [r8+0x39], r9b; shl byte ptr [rbx+0x25], 0x1; movzx eax, byte ptr [rax]; ret; 
0x000000000ec4c1: or [r8+r15*4], r11b; add al, [rax]; add [rax], al; ret; 
0x00000000057e0b: or [r8-0x3ffe], r15b; sub eax, r8d; mov [rdx], eax; mov eax, 0x2; ret; 
0x0000000014e832: or [r8-0x73], r9b; jae short 0x000000000014e850; mov rdi, rbp; call qword ptr [rax+0x48]; 
0x00000000149129: or [r8-0x73], r9b; je short 0x0000000000149153; or [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x8]; 
0x0000000014e793: or [r8-0x73], r9b; je short 0x000000000014e7bd; or al, 0x48; mov edi, ebp; call qword ptr [rax+0x48]; 
0x0000000014e848: or [r8-0x73], r9b; je short 0x000000000014e872; or al, 0x48; mov edi, ebp; call qword ptr [rax+0x48]; 
0x00000000155e31: or [r8-0x73], r9b; je short 0x0000000000155e5b; adc [rax-0x77], cl; out dx, eax; call qword ptr [rax]; 
0x00000000155e8a: or [r8-0x73], r9b; je short 0x0000000000155eb4; adc [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x8]; 
0x00000000155f21: or [r8-0x73], r9b; je short 0x0000000000155f4b; adc [rax-0x77], cl; out dx, eax; call qword ptr [rax]; 
0x00000000155f7a: or [r8-0x73], r9b; je short 0x0000000000155fa4; adc [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x8]; 
0x00000000156011: or [r8-0x73], r9b; je short 0x000000000015603b; adc [rax-0x77], cl; out dx, eax; call qword ptr [rax]; 
0x0000000015606a: or [r8-0x73], r9b; je short 0x0000000000156094; adc [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x8]; 
0x00000000156101: or [r8-0x73], r9b; je short 0x000000000015612b; adc [rax-0x77], cl; out dx, eax; call qword ptr [rax]; 
0x0000000015615a: or [r8-0x73], r9b; je short 0x0000000000156184; adc [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x8]; 
0x00000000156d78: or [r8-0x73], r9b; je short 0x0000000000156da2; add al, 0x48; mov edi, ebp; call qword ptr [rax+0x40]; 
0x00000000156dc9: or [r8-0x73], r9b; je short 0x0000000000156df3; add al, 0x48; mov edi, ebp; call qword ptr [rax+0x48]; 
0x00000000156e68: or [r8-0x73], r9b; je short 0x0000000000156e92; add al, 0x48; mov edi, ebp; call qword ptr [rax+0x40]; 
0x00000000156eb9: or [r8-0x73], r9b; je short 0x0000000000156ee3; add al, 0x48; mov edi, ebp; call qword ptr [rax+0x48]; 
0x00000000156f58: or [r8-0x73], r9b; je short 0x0000000000156f82; add al, 0x48; mov edi, ebp; call qword ptr [rax+0x40]; 
0x00000000156fa9: or [r8-0x73], r9b; je short 0x0000000000156fd3; add al, 0x48; mov edi, ebp; call qword ptr [rax+0x48]; 
0x00000000157048: or [r8-0x73], r9b; je short 0x0000000000157072; add al, 0x48; mov edi, ebp; call qword ptr [rax+0x40]; 
0x00000000157099: or [r8-0x73], r9b; je short 0x00000000001570c3; add al, 0x48; mov edi, ebp; call qword ptr [rax+0x48]; 
0x0000000015179e: or [r8-0x73], r9b; push rsp; and al, 0x18; mov esi, 0x6; call qword ptr [rax+0x28]; 
0x00000000151822: or [r8-0x73], r9b; push rsp; and al, 0xc; mov esi, 0xd; call qword ptr [rax+0x28]; 
0x0000000009e819: or [r8-0x75], r9b; je short 0x000000000009e84e; mov rdi, [rbx+0x48]; mov rsi, r14; call rax; 
0x000000000b3ace: or [r8-0x76b7f7be], cl; clc; ret; 
0x00000000176698: or [r8-0x77], cl; or [rax-0x77], cl; clc; ret; 
0x0000000006e8a5: or [r8-0x77], cl; ret; 
0x00000000088eb6: or [r8-0x77], cl; sbb r9b, bpl; ret far; 
0x0000000014e782: or [r8-0x77], r9b; fimul st, word ptr [rax-0x77]; out dx, eax; call qword ptr [rax+0x48]; 
0x00000000153cfd: or [r8-0x77], r9b; fimul st, word ptr [rax-0x77]; out dx, eax; call qword ptr [rax]; 
0x00000000157cff: or [r8-0x77], r9b; ja short 0x0000000000157d1d; mov dword ptr [rdi+0x28], 0x0; mov qword ptr [rdi+0x20], 0x0; ret; 
0x00000000156aaf: or [r8-0x77], r9b; out 0x48, al; mov edi, ebp; call qword ptr [rax]; 
0x00000000147148: or [r8-0x77], r9b; out dx, eax; call qword ptr [rax+0x20]; 
0x00000000153e42: or [r8-0x77], r9b; out dx, eax; call qword ptr [rax+0x28]; 
0x00000000153ce2: or [r8-0x77], r9b; out dx, eax; call qword ptr [rax+0x8]; 
0x000000001476ba: or [r8-0x77], r9b; out dx, eax; mov qword ptr [rsp], 0x0; call qword ptr [rax+0x20]; 
0x0000000006c5ab: or [r8-0x7d], cl; ret; 
0x0000000015c6d3: or [r8], r8; syscall; 
0x0000000009ef64: or [r8], r8b; add [rax], al; add [rcx], dh; ror byte ptr [rax-0x77], 0x37; ret; 
0x0000000005b54b: or [r8], r8b; mov [rdi], rax; mov rax, rdi; ret; 
0x0000000015ce6b: or [r8], r8d; syscall; 
0x0000000015caa3: or [r8], rax; syscall; 
0x000000000fe7a7: or [r9+0x63], r9b; or al, 0x89; add rcx, r9; notrack jmp rcx; 
0x000000001490e4: or [r9+rcx*4-0x1a], r9b; mov rdi, rbp; call qword ptr [rax]; 
0x00000000147736: or [r9+rcx*4-0xa], r8b; mov rdi, rbp; call qword ptr [rax+0x28]; 
0x0000000011a591: or [r9-0x75], cl; add [rbx+0x94901e0], eax; ret; 
0x000000000ff978: or [r9-0x75], cl; push rbx; adc [rax+0x63], cl; ret far; 
0x0000000014ed5c: or [r9-0x75], r9b; jo short 0x000000000014eda2; mov edx, [rsi+0x1c8]; add rsi, 0x38; jmp qword ptr [rax+0x18]; 
0x000000000fefe9: or [r9-0x75], r9b; push rbp; adc [rax+0x63], cl; ret far; 
0x000000000fff09: or [r9-0x75], r9b; push rdi; adc [rax+0x63], cl; ret far; 
0x000000000b3b2e: or [r9-0x76b7f7be], cl; clc; ret; 
0x000000001490d2: or [r9-0x77], r9b; in al, 0x48; lea esi, [rsp+0x8]; call qword ptr [rax]; 
0x000000000ec405: or [r9], r11b; mov eax, 0x1; ret; 
0x0000000013b438: or [r9], r13b; add [rax], al; add [rcx-0x76b7f3a9], cl; ret; 
0x000000000ec49b: or [r9], r8b; mov [rdi], al; mov eax, 0x1; ret; 
0x000000000ec46d: or [r9], r8b; mov eax, 0x1; mov byte ptr [rdi], 0x5b; ret; 
0x000000000ec41e: or [r9], r8b; mov eax, 0x1; ret; 
0x00000000094d69: or [r9], r8b; xor eax, eax; ret; 
0x0000000010c30b: or [r9], sil; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x5d], bl; ret; 
0x00000000113cb5: or [rax+0x100], bh; mov [rdi+0x16], ax; ret; 
0x000000001468b3: or [rax+0x10], bh; pop rbx; pop rbp; ret; 
0x0000000011f546: or [rax+0x114], bh; syscall; 
0x0000000011f2ba: or [rax+0x119], bh; mov edi, [rsp+0x4]; syscall; 
0x00000000113317: or [rax+0x11d], bh; syscall; 
0x000000001145a0: or [rax+0x127], bh; syscall; 
0x00000000114660: or [rax+0x128], bh; syscall; 
0x00000000120c0c: or [rax+0x12b], bh; mov edi, [rsp+0x4]; syscall; 
0x0000000011f763: or [rax+0x130], bh; syscall; 
0x00000000114445: or [rax+0x13], bh; syscall; 
0x00000000048287: or [rax+0x13e], bh; syscall; 
0x000000001144e5: or [rax+0x14], bh; syscall; 
0x0000000014cf9d: or [rax+0x1], bh; movups [rdx], xmm1; ret; 
0x000000001506d5: or [rax+0x1], bh; movups [rdx], xmm4; ret; 
0x00000000155b43: or [rax+0x1], bh; pop rbp; pop r12; ret; 
0x00000000154496: or [rax+0x1], bh; pop rbx; pop rbp; pop r12; ret; 
0x000000000832f9: or [rax+0x1], bh; pop rbx; pop rbp; ret; 
0x0000000010e0d7: or [rax+0x1], bh; syscall; 
0x0000000012db99: or [rax+0x1], cl; fcomp st, dword ptr [rbx+0x5d]; pop r12; pop r13; ret; 
0x0000000015f5b1: or [rax+0x1], cl; ror dword ptr [rax+0x39], 0x1; ret far; 
0x0000000014cf9c: or [rax+0x1], dil; movups [rdx], xmm1; ret; 
0x00000000118a47: or [rax+0x1a], bh; syscall; 
0x0000000010d15a: or [rax+0x1c], edi; syscall; 
0x000000000e0f4b: or [rax+0x29], cl; ret; 
0x00000000057d98: or [rax+0x2], bh; ret; 
0x00000000120203: or [rax+0x2a], bh; syscall; 
0x00000000120645: or [rax+0x2e], bh; syscall; 
0x000000001204e5: or [rax+0x2f], bh; syscall; 
0x0000000011f14d: or [rax+0x38], bh; syscall; 
0x00000000027bb1: or [rax+0x39], cl; ret far; 
0x0000000009814e: or [rax+0x39], cl; ret; 
0x000000000939ad: or [rax+0x39], cl; shl byte ptr [rbx+0x25], 0x1; movzx eax, byte ptr [rax]; ret; 
0x0000000015ef40: or [rax+0x39], ecx; ret; 
0x000000000e5117: or [rax+0x40], bh; ret; 
0x0000000010e55f: or [rax+0x48], bh; syscall; 
0x000000000ecbf3: or [rax+0x63], cl; ret; 
0x000000001129c7: or [rax+0x7], bh; syscall; 
0x00000000136e99: or [rax+0xa], bh; pop rbx; pop rbp; ret; 
0x000000000a1b67: or [rax+0xf], cl; ret; 
0x0000000009e4cf: or [rax+0xffe5063], al; adc [rbx+0x38], eax; movsxd rdi, esi; mov [rbx], rdi; call rcx; 
0x00000000094e79: or [rax+rax], al; add [rsi+0x1], dh; ret; 
0x00000000030b66: or [rax+rax], bl; lea rdi, [rip+0x1bce10]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000030a7e: or [rax+rax], ebx; lea rdi, [rip+0x1bcef8]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000164947: or [rax+rax], edx; add [rbp-0x77], cl; ret far; 
0x00000000113b86: or [rax+rax], edx; mov eax, 0x10; syscall; 
0x00000000113bb7: or [rax+rax], edx; mov r8d, eax; mov eax, 0x10; syscall; 
0x000000000ec4c2: or [rax+rdi*4], bl; add al, [rax]; add [rax], al; ret; 
0x0000000008331b: or [rax-0x1], bh; pop rbx; pop rbp; ret; 
0x000000000499a7: or [rax-0x39], cl; ret; 
0x000000001149f1: or [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x0000000009f909: or [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; jmp rax; 
0x0000000013c791: or [rax-0x3f], ecx; out 0x4, al; lea r8, [rdi+rsi+0x8]; mov rax, r8; ret; 
0x00000000057e0c: or [rax-0x3ffe], bh; sub eax, r8d; mov [rdx], eax; mov eax, 0x2; ret; 
0x000000000d0fe6: or [rax-0x73], cl; adc eax, 0xffffff11; cmove rax, rdx; add rsp, 0x58; ret; 
0x000000000d0ec6: or [rax-0x73], cl; adc eax, 0xffffff21; cmove rax, rdx; add rsp, 0x58; ret; 
0x000000000bdfb5: or [rax-0x73], cl; add eax, 0x11923; lea rdx, [rip+0x116fc]; cmovne rax, rdx; ret; 
0x0000000012da5d: or [rax-0x73], cl; add eax, 0x3830b; lea rdx, [rip+0x3d894]; cmovne rax, rdx; ret; 
0x0000000012d8dd: or [rax-0x73], cl; add eax, 0x384ab; lea rdx, [rip+0x3da34]; cmovne rax, rdx; ret; 
0x0000000012d99d: or [rax-0x73], cl; add eax, 0x3adcb; lea rdx, [rip+0x40464]; cmovne rax, rdx; ret; 
0x000000001462d1: or [rax-0x73], cl; add eax, 0xaa827; ret; 
0x000000000a09dd: or [rax-0x73], cl; add eax, 0xc53bb; lea rdx, [rip+0xca944]; cmovne rax, rdx; ret; 
0x000000000a066d: or [rax-0x73], cl; add eax, 0xc570b; lea rdx, [rip+0xcac94]; cmovne rax, rdx; ret; 
0x000000000a050d: or [rax-0x73], cl; add eax, 0xc826b; lea rdx, [rip+0xcd904]; cmovne rax, rdx; ret; 
0x000000000240be: or [rax-0x73], cl; cmp eax, 0x18fda2; mov rsi, [rax]; xor eax, eax; call qword ptr [rdx+0x1d0]; 
0x0000000014e833: or [rax-0x73], cl; jae short 0x000000000014e850; mov rdi, rbp; call qword ptr [rax+0x48]; 
0x0000000014912a: or [rax-0x73], cl; je short 0x0000000000149153; or [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x8]; 
0x0000000014e794: or [rax-0x73], cl; je short 0x000000000014e7bd; or al, 0x48; mov edi, ebp; call qword ptr [rax+0x48]; 
0x0000000014e849: or [rax-0x73], cl; je short 0x000000000014e872; or al, 0x48; mov edi, ebp; call qword ptr [rax+0x48]; 
0x00000000155e32: or [rax-0x73], cl; je short 0x0000000000155e5b; adc [rax-0x77], cl; out dx, eax; call qword ptr [rax]; 
0x00000000155e8b: or [rax-0x73], cl; je short 0x0000000000155eb4; adc [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x8]; 
0x00000000155f22: or [rax-0x73], cl; je short 0x0000000000155f4b; adc [rax-0x77], cl; out dx, eax; call qword ptr [rax]; 
0x00000000155f7b: or [rax-0x73], cl; je short 0x0000000000155fa4; adc [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x8]; 
0x00000000156012: or [rax-0x73], cl; je short 0x000000000015603b; adc [rax-0x77], cl; out dx, eax; call qword ptr [rax]; 
0x0000000015606b: or [rax-0x73], cl; je short 0x0000000000156094; adc [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x8]; 
0x00000000156102: or [rax-0x73], cl; je short 0x000000000015612b; adc [rax-0x77], cl; out dx, eax; call qword ptr [rax]; 
0x0000000015615b: or [rax-0x73], cl; je short 0x0000000000156184; adc [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x8]; 
0x00000000156d79: or [rax-0x73], cl; je short 0x0000000000156da2; add al, 0x48; mov edi, ebp; call qword ptr [rax+0x40]; 
0x00000000156dca: or [rax-0x73], cl; je short 0x0000000000156df3; add al, 0x48; mov edi, ebp; call qword ptr [rax+0x48]; 
0x00000000156e69: or [rax-0x73], cl; je short 0x0000000000156e92; add al, 0x48; mov edi, ebp; call qword ptr [rax+0x40]; 
0x00000000156eba: or [rax-0x73], cl; je short 0x0000000000156ee3; add al, 0x48; mov edi, ebp; call qword ptr [rax+0x48]; 
0x00000000156f59: or [rax-0x73], cl; je short 0x0000000000156f82; add al, 0x48; mov edi, ebp; call qword ptr [rax+0x40]; 
0x00000000156faa: or [rax-0x73], cl; je short 0x0000000000156fd3; add al, 0x48; mov edi, ebp; call qword ptr [rax+0x48]; 
0x00000000157049: or [rax-0x73], cl; je short 0x0000000000157072; add al, 0x48; mov edi, ebp; call qword ptr [rax+0x40]; 
0x0000000015709a: or [rax-0x73], cl; je short 0x00000000001570c3; add al, 0x48; mov edi, ebp; call qword ptr [rax+0x48]; 
0x000000000b77c9: or [rax-0x73], cl; jg short 0x00000000000b77d6; jne 0x00000000000b7fa0; ret; 
0x000000000b8ead: or [rax-0x73], cl; jg short 0x00000000000b8eba; jne 0x00000000000b97f0; ret; 
0x0000000007f1fb: or [rax-0x73], cl; or [rcx-0x77], cl; or r9b, r13b; ret; 
0x000000000570dc: or [rax-0x73], cl; push rdi; add [rcx-0x77], ecx; push rsp; ret; 
0x00000000057784: or [rax-0x73], cl; push rsi; add [rcx-0x77], ecx; push rsp; ret; 
0x0000000015179f: or [rax-0x73], cl; push rsp; and al, 0x18; mov esi, 0x6; call qword ptr [rax+0x28]; 
0x00000000151823: or [rax-0x73], cl; push rsp; and al, 0xc; mov esi, 0xd; call qword ptr [rax+0x28]; 
0x00000000137c68: or [rax-0x73], ecx; cmp eax, 0xb8770; call rax; 
0x000000000b77ec: or [rax-0x73], ecx; jg short 0x00000000000b77fa; jne 0x00000000000b7fa0; ret; 
0x000000000b8ed0: or [rax-0x73], ecx; jg short 0x00000000000b8ede; jne 0x00000000000b97f0; ret; 
0x0000000014cf28: or [rax-0x73], ecx; mov ebp, 0xc8; call rax; 
0x000000001785a2: or [rax-0x73], ecx; or [rdi], rcx; test [rbx+0x2], esp; add [rax], al; ret; 
0x00000000122945: or [rax-0x75], cl; add al, 0x24; add rsp, 0x38; ret; 
0x000000001229a6: or [rax-0x75], cl; add al, 0x24; add rsp, 0x40; ret; 
0x00000000055876: or [rax-0x75], cl; add al, 0xc8; mov [r9+rcx*8], rax; xor eax, eax; ret; 
0x000000000e4280: or [rax-0x75], cl; add eax, 0x10d1f8; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000e41e0: or [rax-0x75], cl; add eax, 0x10d298; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000014622e: or [rax-0x75], cl; cmp [rax-0x7b], cl; shl byte ptr [rbp+rax+0x48], 0x89; out dx, eax; call rax; 
0x00000000148720: or [rax-0x75], cl; cmp [rax-0x7b], cl; shl byte ptr [rbp+rax+0x4c], 0x89; out dx, eax; call rax; 
0x00000000148c83: or [rax-0x75], cl; jae short 0x0000000000148c98; mov rdx, r12; mov rdi, r14; call qword ptr [rax+0x10]; 
0x00000000148cbd: or [rax-0x75], cl; jae short 0x0000000000148cd2; mov rdx, r12; mov rdi, r14; call qword ptr [rax+0x20]; 
0x0000000009e81a: or [rax-0x75], cl; je short 0x000000000009e84e; mov rdi, [rbx+0x48]; mov rsi, r14; call rax; 
0x0000000015f661: or [rax-0x75], cl; or [rax+0x1], cl; ror dword ptr [rax+0x39], 0x1; ret far; 
0x00000000147e09: or [rax-0x75], cl; or al, 0x24; xor eax, eax; mov rdi, rbx; call rcx; 
0x0000000009e8e2: or [rax-0x75], cl; test byte ptr [rbx+0x50], 0x1; jne short 0x000000000009e8c0; mov rdi, rsi; call rax; 
0x0000000008d26b: or [rax-0x75], cl; xor ecx, [rax-0x7d]; ret; 
0x00000000082a5c: or [rax-0x75], ecx; mov edi, 0xe0; jmp rax; 
0x00000000148c82: or [rax-0x75], r9b; jae short 0x0000000000148c98; mov rdx, r12; mov rdi, r14; call qword ptr [rax+0x10]; 
0x00000000148cbc: or [rax-0x75], r9b; jae short 0x0000000000148cd2; mov rdx, r12; mov rdi, r14; call qword ptr [rax+0x20]; 
0x000000000b3acf: or [rax-0x76b7f7be], cl; clc; ret; 
0x000000001518b3: or [rax-0x77], cl; add al, 0x24; call qword ptr [rdx+0x20]; 
0x000000001176ab: or [rax-0x77], cl; add eax, 0xd80dd; mov rax, r8; add rsp, 0x8; ret; 
0x0000000011767b: or [rax-0x77], cl; add eax, 0xd810d; mov rax, r8; ret; 
0x000000000b39df: or [rax-0x77], cl; clc; ret; 
0x0000000012fa1c: or [rax-0x77], cl; clc; sar rax, 0x6; ret; 
0x000000000b77e5: or [rax-0x77], cl; cmovns eax, [rbx-0x72b7f618]; jg short 0x00000000000b77fa; jne 0x00000000000b7fa0; ret; 
0x0000000014e783: or [rax-0x77], cl; fimul st, word ptr [rax-0x77]; out dx, eax; call qword ptr [rax+0x48]; 
0x00000000153cfe: or [rax-0x77], cl; fimul st, word ptr [rax-0x77]; out dx, eax; call qword ptr [rax]; 
0x00000000157d00: or [rax-0x77], cl; ja short 0x0000000000157d1d; mov dword ptr [rdi+0x28], 0x0; mov qword ptr [rdi+0x20], 0x0; ret; 
0x000000000bb065: or [rax-0x77], cl; jns 0xffffffffed3bb8c5; mov [rdi+0xc], ch; ret; 
0x000000000bb005: or [rax-0x77], cl; js 0xffffffffed3bb865; mov [rdi+0x9], ch; ret; 
0x00000000176699: or [rax-0x77], cl; or [rax-0x77], cl; clc; ret; 
0x00000000156ab0: or [rax-0x77], cl; out 0x48, al; mov edi, ebp; call qword ptr [rax]; 
0x00000000152f3b: or [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x10]; 
0x0000000014621d: or [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x20]; 
0x00000000153e43: or [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x28]; 
0x0000000014912f: or [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x8]; 
0x00000000152ceb: or [rax-0x77], cl; out dx, eax; call qword ptr [rdx+0x10]; 
0x00000000146966: or [rax-0x77], cl; out dx, eax; call rcx; 
0x000000001476bb: or [rax-0x77], cl; out dx, eax; mov qword ptr [rsp], 0x0; call qword ptr [rax+0x20]; 
0x00000000156595: or [rax-0x77], cl; out dx, eax; pop rbp; pop r12; jmp rax; 
0x0000000008774b: or [rax-0x77], cl; out dx, eax; pop rbx; pop rbp; jmp rax; 
0x000000000bb026: or [rax-0x77], cl; pcmpgtd mm1, [rcx-0x12cff7a9]; mov [rdi+0xa], ch; ret; 
0x00000000196d63: or [rax-0x77], cl; ret far; 
0x0000000006e8a6: or [rax-0x77], cl; ret; 
0x00000000088eb7: or [rax-0x77], cl; sbb r9b, bpl; ret far; 
0x00000000119cd3: or [rax-0x77], ecx; ret far; 
0x00000000096893: or [rax-0x77], r9b; ret; 
0x0000000009e957: or [rax-0x7b], cl; shl byte ptr [rbp-0xd], cl; ret; 
0x0000000002750a: or [rax-0x7d], cl; ret; 
0x000000000d35bd: or [rax-0x7d], ecx; ret; 
0x0000000009c08e: or [rax-0x7f], ecx; sti; jmp far fword ptr [rcx]; 
0x00000000196849: or [rax], al; add [rax-0x75], cl; add al, 0x24; add rsp, 0x38; ret; 
0x00000000096f52: or [rax], al; add [rax-0x7d], cl; ret far; 
0x0000000005fb62: or [rax], al; add [rax-0x7d], cl; ret; 
0x000000001411f2: or [rax], al; add [rax], al; add [rbx+0x5d], bl; pop r12; ret; 
0x00000000194c0d: or [rax], al; add [rax], al; add [rcx+0x21], cl; ret; 
0x0000000009ef65: or [rax], al; add [rax], al; add [rcx], dh; ror byte ptr [rax-0x77], 0x37; ret; 
0x00000000152258: or [rax], al; add [rax], al; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x0000000011f265: or [rax], al; add [rax], al; mov eax, 0x119; syscall; 
0x00000000043435: or [rax], al; add [rax], al; mov eax, 0x7f; syscall; 
0x00000000044154: or [rax], al; add [rax], al; mov eax, 0x80; syscall; 
0x00000000043481: or [rax], al; add [rax], al; mov eax, 0x82; syscall; 
0x0000000004318b: or [rax], al; add [rax], al; mov eax, 0xd; syscall; 
0x00000000054f26: or [rax], al; add [rax], al; mov eax, 0xe; syscall; 
0x000000000434ac: or [rax], al; add [rax], al; mov r8d, eax; mov eax, 0x82; syscall; 
0x000000001483de: or [rax], al; add [rax], al; mov rdi, rbp; call qword ptr [rax+0x30]; 
0x0000000014e702: or [rax], al; add [rax], al; mov rdi, rbp; mov [r12+0x70], edx; call qword ptr [rax+0x30]; 
0x00000000112a61: or [rax], al; add [rax], al; mov rdx, r12; mov eax, 0x10f; syscall; 
0x0000000004332d: or [rax], al; add [rax], al; mov rsi, r8; mov eax, 0xe; syscall; 
0x000000000bc209: or [rax], al; add [rax], al; pop rbx; ret; 
0x0000000014826f: or [rax], al; add [rax], al; ret; 
0x0000000010e135: or [rax], al; add [rax], al; syscall; 
0x000000000ab5d8: or [rax], al; add [rbp-0x77], cl; ret far; 
0x0000000007a76c: or [rax], al; add [rcx+0x63], cl; add al, 0x86; add rax, r14; notrack jmp rax; 
0x0000000011ae65: or [rax], al; add [rcx+rcx*4+0x44], cl; and al, 0x8; mov rdi, [r8]; call rbx; 
0x000000000756ad: or [rax], al; add [rcx+rcx*4-0x16], cl; mov rsi, r10; mov rdi, r15; call qword ptr [rax+0x38]; 
0x0000000016174c: or [rax], al; add [rdi], cl; mov dh, 0x53; add [rax-0x7d], ecx; ret; 
0x000000000e6d7c: or [rax], al; add [rdi], cl; mov dh, 0x53; add [rax-0x7d], ecx; ret; 
0x000000000e6d7d: or [rax], al; add [rdi], cl; mov dh, 0x53; add [rax-0x7d], ecx; ret; 
0x000000000d4ee7: or [rax], al; add [rdi], cl; mov dh, 0x73; add [rax-0x7d], ecx; ret; 
0x0000000018e1c0: or [rax], al; add [rip+0xffff], ah; and ecx, 0xffff; sub eax, ecx; ret; 
0x000000001173a9: or [rax], al; add byte ptr [rax], 0x0; add rsp, 0x8; mov eax, r8d; ret; 
0x0000000015f2d6: or [rax], al; call qword ptr [rax+0x1f8]; 
0x000000000ded15: or [rax], al; call rbx; 
0x0000000015f899: or [rax], al; jmp qword ptr [rax+0x1f0]; 
0x00000000168853: or [rax], al; lea r11, [rip+0x55264]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x000000001687f9: or [rax], al; lea r11, [rip+0x5527e]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x00000000165e73: or [rax], al; lea r11, [rip+0x57a84]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x00000000165e12: or [rax], al; lea r11, [rip+0x57aa5]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x0000000005b54c: or [rax], al; mov [rdi], rax; mov rax, rdi; ret; 
0x0000000015f3a3: or [rax], al; mov [rsp+0x8], rcx; lea rdi, [r15+0x908]; call qword ptr [r15+0xf08]; 
0x000000001609e5: or [rax], al; mov dword ptr fs:[rax], 0x16; xor eax, eax; ret; 
0x0000000015c969: or [rax], al; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x00000000160bd9: or [rax], al; mov dword ptr fs:[rax], 0x26; xor eax, eax; ret; 
0x0000000015fd08: or [rax], al; mov r8, [rbx+0x10]; call qword ptr [rax+0x1e0]; 
0x000000000dee93: or [rax], al; mov rax, r15; call rax; 
0x0000000015f7d6: or [rax], al; mov rdi, [rdi]; call qword ptr [rax+0x1e8]; 
0x0000000015f77d: or [rax], al; mov rdi, [rsp]; mov rax, [rax+0x1d8]; jmp rax; 
0x0000000015f749: or [rax], al; mov rsi, rdi; mov rdi, [rsp]; mov rax, [rax+0x1d8]; jmp rax; 
0x00000000160cc4: or [rax], al; ret; 
0x0000000015de08: or [rax], al; test edi, edi; jns short 0x000000000015de10; ret; 
0x00000000160cbb: or [rax], al; xor eax, eax; mov [rip+0x8e1ca], rsi; ret; 
0x000000000dee92: or [rax], cl; add [rcx+rcx*4-0x8], cl; call rax; 
0x000000000bb00b: or [rax], dh; in eax, dx; mov [rdi+0x9], ch; ret; 
0x000000000bb02d: or [rax], dh; in eax, dx; mov [rdi+0xa], ch; ret; 
0x000000000bb06b: or [rax], dh; in eax, dx; mov [rdi+0xc], ch; ret; 
0x0000000016100a: or [rax], eax; add [rax-0x7d], cl; ret; 
0x0000000015d292: or [rax], eax; add [rax], al; add [rax], al; add rsp, 0x8; ret; 
0x0000000015d293: or [rax], eax; add [rax], al; add [rax], al; add rsp, 0x8; ret; 
0x00000000151a84: or [rax], eax; add [rax], al; call qword ptr [rax]; 
0x000000000412ea: or [rax], eax; add [rax], al; mov eax, 0xffffffff; pop rbp; ret; 
0x00000000024722: or [rax], eax; add [rax], al; mov eax, 0xffffffff; ret; 
0x00000000160b9f: or [rax], eax; add [rax], al; mov edi, eax; mov eax, 0x3e; syscall; 
0x00000000148201: or [rax], eax; add [rax], al; movups [rsi+0x8], xmm0; ret; 
0x0000000010c53a: or [rax], eax; add [rax], al; pop rbp; pop r12; ret; 
0x00000000118910: or [rax], eax; add [rax], al; syscall; 
0x0000000018768f: or [rax], eax; add [rbp-0x77], cl; ret far; 
0x000000000b0b2d: or [rax], eax; add [rbp-0x77], cl; ret far; 
0x0000000007dd2e: or [rax], eax; add [rbx-0x4df43], cl; dec dword ptr [rcx-0x4e773]; jmp far fword ptr [rcx]; 
0x00000000077679: or [rax], eax; add [rbx-0x4ef7b], cl; dec dword ptr [rcx-0x4f773]; jmp far fword ptr [rcx]; 
0x0000000002415f: or [rax], eax; add [rcx+0x39], cl; xlat [rbx]; je short 0x0000000000024177; call rax; 
0x0000000011adfa: or [rax], eax; add [rcx+rcx*4+0x44], cl; and al, 0x8; mov rdi, [r8]; call rbx; 
0x0000000015cb9b: or [rax], eax; add [rcx+rcx*4-0x40], ecx; pop rbp; ret; 
0x000000001933ed: or [rax], eax; add [rcx-0x77], cl; ret; 
0x00000000074e4c: or [rax], eax; add [rcx-0x7d], al; in al, dx; add [rax-0x8ff43], eax; jmp qword ptr [rax]; 
0x0000000010b2c8: or [rax], eax; add [rcx-0x80], al; jmp qword ptr [rdi]; 
0x00000000153194: or [rax], eax; add al, [rax]; add [rax], al; ret; 
0x000000000a7aee: or [rax], eax; add bh, dh; ret; 
0x000000000b5c35: or [rax], eax; add cl, ch; ret; 
0x0000000015fcc5: or [rax], eax; call qword ptr [rax+0x10]; 
0x0000000015fa4d: or [rax], eax; call qword ptr [rax+0x8]; 
0x0000000015f955: or [rax], eax; call qword ptr [rax]; 
0x00000000153099: or [rax], eax; lea rdx, [rip+0x9dd9e]; mov fs:[rax], rdx; ret; 
0x00000000120df7: or [rax], eax; mov eax, [rax+rdi*4]; ret; 
0x0000000015c522: or [rax], eax; mov edx, 0x0; cmovne rax, rdx; add rsp, 0x8; ret; 
0x000000001530a0: or [rax], eax; mov fs:[rax], rdx; ret; 
0x00000000153189: or [rax], eax; mov fs:[rbx], rax; pop rbx; mov dword ptr [rip+0x9dc86], 0x2; ret; 
0x00000000160bb1: or [rax], eax; mov rdi, r8; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000009e209: or [rax], eax; nop [rax+rax]; endbr64; ret; 
0x000000001531b3: or [rax], eax; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000160a73: or [rax], eax; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000001519f4: or [rax], eax; syscall; 
0x000000001519f3: or [rax], eax; syscall; 
0x00000000151b03: or [rax], eax; syscall; 
0x0000000015fbe5: or [rax], eax; test rax, rax; je short 0x000000000015fbd7; call qword ptr [rax+0x18]; 
0x0000000011aed2: or [rax], r8b; add [rcx+rcx*4+0x44], cl; and al, 0x8; mov rdi, [r8]; call rbx; 
0x0000000015cb9a: or [rax], rax; add [rcx+rcx*4-0x40], ecx; pop rbp; ret; 
0x0000000015c521: or [rax], rax; mov edx, 0x0; cmovne rax, rdx; add rsp, 0x8; ret; 
0x0000000015cbf3: or [rax], rax; syscall; 
0x0000000013c8ba: or [rbp+0x17], dh; add rsp, 0x20; pop rbp; ret; 
0x000000000d23ee: or [rbp+0x1], ecx; fld st, dword ptr [rdi+0xf]; mov bh, 0x4c; dec byte ptr [rbp-0x77]; ret far; 
0x0000000013b75b: or [rbp+0x31], al; rcr byte ptr [rbx+0x4c], 0x89; rcr byte ptr [rbp+0x41], 0x5c; pop r13; ret; 
0x000000000ee565: or [rbp+0x31], al; rol byte ptr [rcx+rcx*4-0x40], 0x5b; pop rbp; ret; 
0x000000000589a7: or [rbp+0x31], al; ror byte ptr [rax-0x39], cl; ret; 
0x0000000008a6c9: or [rbp+0x31], al; ror byte ptr [rcx+rcx*4-0x11], 0x4c; lea ecx, [rsp+0x18]; call rbp; 
0x00000000046cb7: or [rbp+0x31], al; ror byte ptr [rcx+rcx*4-0x40], 0x5b; pop rbp; ret; 
0x00000000155b38: or [rbp+0x41], bl; pop rsp; jmp rax; 
0x0000000008544c: or [rbp+0x41], bl; pop rsp; ret; 
0x0000000012cf06: or [rbp+0x480d75c0], al; cmp dword ptr [rdi], 0x0; je short 0x000000000012cf20; ret; 
0x00000000149122: or [rbp+0x488274c0], al; mov eax, [rbp+0x8]; lea rsi, [rsp+0x8]; mov rdi, rbp; call qword ptr [rax+0x8]; 
0x0000000013c423: or [rbp+0x5d5b2b04], cl; ret; 
0x00000000042547: or [rbp+0x6], dh; addss xmm0, xmm0; ret; 
0x000000000e8656: or [rbp+0x9880fd2], al; add al, [rax]; add [rax-0x7d], cl; ret; 
0x000000000b7483: or [rbp+0xf], edi; add [rcx+0x63], cl; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000014925b: or [rbp+rcx*4+0x4], al; add bl, [rbx+0x5d]; mov eax, r8d; ret; 
0x00000000094edb: or [rbp+rdx], esi; ret; 
0x00000000120163: or [rbp-0x2708fff4], edi; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000007d763: or [rbp-0x4b7bf040], al; sub [rax], eax; add [rax-0x7d], cl; ret; 
0x000000000ea39d: or [rbp-0x577f02e], al; add [rax], eax; add [rax-0x7d], cl; ret; 
0x0000000014ff61: or [rbp-0x74b70098], cl; jo short 0x000000000014fef3; imul ecx, [rax+0xf], 0xffffffcd; call qword ptr [rax+0x18]; 
0x0000000012ce8c: or [rbp-0xf], dh; mov rax, [rax+0x30]; ret; 
0x000000000bccf8: or [rbx+0x11394117], cl; jne short 0x00000000000bcc95; test edx, edx; jne short 0x00000000000bcce0; ret; 
0x00000000098873: or [rbx+0x15], eax; add [rax+0x39], cl; ret; 
0x0000000002fdd9: or [rbx+0x1974fdf8], al; pop rbx; ret; 
0x00000000080ea1: or [rbx+0x29772ef9], al; lea rdi, [rip+0x12db5a]; movsxd rcx, [rdi+rcx*4]; add rcx, rdi; notrack jmp rcx; 
0x0000000002fdb7: or [rbx+0x37403fe], al; ret; 
0x000000000981a0: or [rbx+0x3d485bc1], eax; jmp far fword ptr [rcx]; 
0x000000000ec414: or [rbx+0x463b01c0], al; jl short 0x00000000000ec490; mov byte ptr [rdi+0x8], 0x1; mov eax, 0x1; ret; 
0x00000000062fe8: or [rbx+0x48010447], al; add esp, 0x8; pop rbx; pop rbp; ret; 
0x00000000024036: or [rbx+0x4814247c], cl; mov edx, [rax]; call rbx; 
0x000000000240a4: or [rbx+0x4814247c], cl; mov edx, [rax]; mov rax, [rsp+0x18]; call rax; 
0x0000000008f58e: or [rbx+0x48], bl; sub eax, edx; pop rbp; pop r12; ret; 
0x00000000148a09: or [rbx+0x5d], bl; jmp rcx; 
0x0000000008b519: or [rbx+0x5d], bl; mov eax, r8d; ret; 
0x000000000a8e1a: or [rbx+0x5d], bl; mov rax, r12; pop r12; pop r13; ret; 
0x0000000009ea77: or [rbx+0x5d], bl; pop r12; pop r13; pop r14; ret; 
0x000000000556ba: or [rbx+0x5d], bl; pop r12; pop r13; ret; 
0x0000000009f447: or [rbx+0x5d], bl; pop r12; ret; 
0x00000000024e3b: or [rbx+0x5d], bl; ret; 
0x0000000009c684: or [rbx+0x5e7709f8], al; lea rdx, [rip+0x1127d7]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000094d46: or [rbx+0x68901e0], al; xor eax, eax; ret; 
0x00000000085740: or [rbx+0xd], dh; lea rcx, [rdx+0x4]; mov [rax], rcx; mov eax, [rdx]; ret; 
0x00000000115363: or [rbx+0xd], ebp; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x2]; mov eax, 0xffffffff; ret; 
0x000000000855b6: or [rbx+0xf], dh; lea rcx, [rdx+0x4]; mov [rax], rcx; mov eax, [rdx]; ret; 
0x0000000004126e: or [rbx+rax+0x5f], cl; and [rcx+rcx*4-0x28], cl; ret; 
0x0000000008f8f3: or [rbx+rcx*4+0x4], cl; and al, 0xe9; ret far; 
0x000000000fde2c: or [rbx+rcx*4+0x7d], cl; add cl, ch; push rax; idiv edi; jmp qword ptr [rsi+0x2e]; 
0x0000000003c2bd: or [rbx+rcx*4+0xc], cl; and al, 0xe9; ret far; 
0x000000000ee491: or [rbx+rdx*4+0x5b], dh; ret; 
0x00000000162b63: or [rbx-0x2708fff8], edx; mov r9d, 0xffffffff; mov fs:[rdx], eax; mov eax, r9d; ret; 
0x00000000120b54: or [rbx-0x47e7db84], cl; and [rcx], al; add [rax], al; syscall; 
0x0000000014613e: or [rbx-0x72b7a3a9], cl; ja short 0x000000000014618f; mov rdi, r8; mov rax, [rax+0x18]; jmp rax; 
0x000000000946b8: or [rbx], al; add [rax], al; mov esi, 0x80; syscall; 
0x00000000101159: or [rbx], cl; add [rcx+0x46348ff], cl; mov edx, 0x3ed00148; jmp rax; 
0x00000000048363: or [rbx], edi; sbb al, [rax]; mov dword ptr fs:[rax], 0x5; mov eax, 0xffffffff; ret; 
0x00000000149246: or [rcx+0x29], al; rcr byte ptr [rbx+0x5d], 0x1; mov eax, r8d; ret; 
0x000000000a31a3: or [rcx+0x29], cl; ret; 
0x00000000027733: or [rcx+0x39], cl; ret far; 
0x000000000fe7a8: or [rcx+0x63], cl; or al, 0x89; add rcx, r9; notrack jmp rcx; 
0x0000000013483e: or [rcx+0xf], eax; ret far; 
0x00000000056b20: or [rcx+rax-0x3e], cl; mov rax, rdx; pop rbx; ret; 
0x0000000011f0c1: or [rcx+rcx*4+0x44], cl; and al, 0x20; mov [rsp+0x28], r9; movaps [rsp+0x10], xmm0; syscall; 
0x0000000010c524: or [rcx+rcx*4+0x60], al; or al, 0x31; ror byte ptr [rcx+0x5d5b0453], 0x41; pop rsp; ret; 
0x0000000003c3a6: or [rcx+rcx*4+0xc], cl; and al, 0xe8; push rax; ret far; 
0x0000000003b62b: or [rcx+rcx*4+0xc], cl; and al, 0xe8; ret far; 
0x0000000003fa33: or [rcx+rcx*4+0xc], cl; and al, 0xe8; ret; 
0x00000000119c4c: or [rcx+rcx*4-0x11], cl; call rax; 
0x0000000008f41e: or [rcx+rcx*4-0x12], cl; mov rdi, rbx; call qword ptr [rbp+0x70]; 
0x0000000009eff4: or [rcx+rcx*4-0x18], cl; mov rdx, r12; pop r12; pop r13; ret; 
0x0000000009fa17: or [rcx+rcx*4-0x18], cl; pop r12; pop r13; ret; 
0x000000000892c2: or [rcx+rcx*4-0x1], cl; call rax; 
0x00000000147eba: or [rcx+rcx*4-0x1], cl; mov [rsp+0x192], ax; mov rax, [rsp+0x30]; call rax; 
0x000000001490e5: or [rcx+rcx*4-0x1a], cl; mov rdi, rbp; call qword ptr [rax]; 
0x00000000112abb: or [rcx+rcx*4-0x1e], cl; mov eax, 0x10f; syscall; 
0x000000000e007c: or [rcx+rcx*4-0x1f], cl; mov rdx, r13; mov rsi, rbp; mov edi, r14d; call qword ptr [rsp+0x48]; 
0x000000000e051c: or [rcx+rcx*4-0x1f], cl; mov rdx, r13; mov rsi, rbp; mov rdi, r14; call qword ptr [rsp+0x48]; 
0x0000000014dd0c: or [rcx+rcx*4-0x20], al; pop rbp; pop r12; ret; 
0x0000000005b963: or [rcx+rcx*4-0x20], al; pop rbx; pop r12; ret; 
0x000000000477d1: or [rcx+rcx*4-0x20], cl; pop rbp; pop r12; ret; 
0x000000000a0a73: or [rcx+rcx*4-0x20], cl; pop rbx; pop r12; ret; 
0x0000000013cb06: or [rcx+rcx*4-0x20], cl; pop rbx; pop rbp; pop r12; ret; 
0x0000000010284b: or [rcx+rcx*4-0x38], al; ret; 
0x00000000082436: or [rcx+rcx*4-0x40], al; pop rbx; pop rbp; ret; 
0x000000001173b1: or [rcx+rcx*4-0x40], al; ret; 
0x000000000831e4: or [rcx+rcx*4-0x40], cl; pop rbx; pop rbp; ret; 
0x0000000013c79a: or [rcx+rcx*4-0x40], cl; ret; 
0x000000001486ec: or [rcx+rcx*4-0xa], al; mov rdi, r13; call qword ptr [rax+0x30]; 
0x00000000147737: or [rcx+rcx*4-0xa], al; mov rdi, rbp; call qword ptr [rax+0x28]; 
0x00000000055be2: or [rcx-0x2feeb728], cl; pop rbp; pop rbx; ret; 
0x0000000006c057: or [rcx-0x58f73], cl; jmp qword ptr [rdi+rax*8]; 
0x0000000015f3a9: or [rcx-0x73], cl; mov edi, 0x908; call qword ptr [r15+0xf08]; 
0x0000000005562e: or [rcx-0x75], cl; adc al, 0xc0; mov [rsi+rax*8], rdx; xor eax, eax; ret; 
0x0000000011a592: or [rcx-0x75], cl; add [rbx+0x94901e0], eax; ret; 
0x0000000014ed5d: or [rcx-0x75], cl; jo short 0x000000000014eda2; mov edx, [rsi+0x1c8]; add rsi, 0x38; jmp qword ptr [rax+0x18]; 
0x000000000fefea: or [rcx-0x75], cl; push rbp; adc [rax+0x63], cl; ret far; 
0x000000000ff979: or [rcx-0x75], cl; push rbx; adc [rax+0x63], cl; ret far; 
0x000000000fff0a: or [rcx-0x75], cl; push rdi; adc [rax+0x63], cl; ret far; 
0x000000000896fb: or [rcx-0x75], cl; sub [r13-0x7b], r8b; shl byte ptr [rbx+rbp*2+0x49], 0x2b; and [r8+0x1], r9b; ret; 
0x000000000b3b2f: or [rcx-0x76b7f7be], cl; clc; ret; 
0x00000000070f2f: or [rcx-0x77], al; ret; 
0x000000001490d3: or [rcx-0x77], cl; in al, 0x48; lea esi, [rsp+0x8]; call qword ptr [rax]; 
0x0000000007f1fe: or [rcx-0x77], cl; or r9b, r13b; ret; 
0x00000000122a1c: or [rcx-0x7c172c07], cl; loopne 0x0000000000122a25; ret; 
0x00000000122aac: or [rcx-0x7c172c07], cl; loopne 0x0000000000122ab5; ret; 
0x00000000122b4c: or [rcx-0x7c172c07], cl; loopne 0x0000000000122b55; ret; 
0x00000000122bdc: or [rcx-0x7c172c07], cl; loopne 0x0000000000122be5; ret; 
0x00000000122d0c: or [rcx-0x7c172c07], cl; loopne 0x0000000000122d15; ret; 
0x00000000122dac: or [rcx-0x7c172c07], cl; loopne 0x0000000000122db5; ret; 
0x00000000122e4c: or [rcx-0x7c172c07], cl; loopne 0x0000000000122e55; ret; 
0x00000000122eec: or [rcx-0x7c172c07], cl; loopne 0x0000000000122ef5; ret; 
0x00000000122f7c: or [rcx-0x7c172c07], cl; loopne 0x0000000000122f85; ret; 
0x00000000123017: or [rcx-0x7c172c07], cl; loopne 0x0000000000123020; ret; 
0x000000001230ac: or [rcx-0x7c172c07], cl; loopne 0x00000000001230b5; ret; 
0x000000001233fe: or [rcx-0x7c172c07], cl; loopne 0x0000000000123407; ret; 
0x0000000012348e: or [rcx-0x7c172c07], cl; loopne 0x0000000000123497; ret; 
0x0000000012351e: or [rcx-0x7c172c07], cl; loopne 0x0000000000123527; ret; 
0x0000000012359e: or [rcx-0x7c172c07], cl; loopne 0x00000000001235a7; ret; 
0x000000001236be: or [rcx-0x7c172c07], cl; loopne 0x00000000001236c7; ret; 
0x0000000012374e: or [rcx-0x7c172c07], cl; loopne 0x0000000000123757; ret; 
0x000000001237de: or [rcx-0x7c172c07], cl; loopne 0x00000000001237e7; ret; 
0x0000000012386e: or [rcx-0x7c172c07], cl; loopne 0x0000000000123877; ret; 
0x000000001238fe: or [rcx-0x7c172c07], cl; loopne 0x0000000000123907; ret; 
0x0000000012398b: or [rcx-0x7c172c07], cl; loopne 0x0000000000123994; ret; 
0x00000000123a0e: or [rcx-0x7c172c07], cl; loopne 0x0000000000123a17; ret; 
0x0000000006e422: or [rcx-0x7d], al; ret far; 
0x0000000005b3f8: or [rcx-0x7d], cl; ret; 
0x0000000006e40e: or [rcx-0x7f], al; ret far; 
0x0000000006d180: or [rcx-0xa], al; ret; 
0x000000000eaf83: or [rcx], al; add [rax], al; add [rax-0x7d], cl; ret; 
0x0000000010d0a6: or [rcx], al; add [rax], al; mov [rsi], eax; xor eax, eax; ret; 
0x00000000062ee8: or [rcx], al; add [rax], al; syscall; 
0x0000000010d148: or [rcx], al; add [rax], al; xor eax, eax; ret; 
0x000000000ec49c: or [rcx], al; mov [rdi], al; mov eax, 0x1; ret; 
0x000000000ec46e: or [rcx], al; mov eax, 0x1; mov byte ptr [rdi], 0x5b; ret; 
0x000000000ec41f: or [rcx], al; mov eax, 0x1; ret; 
0x00000000094d6a: or [rcx], al; xor eax, eax; ret; 
0x000000000ec406: or [rcx], bl; mov eax, 0x1; ret; 
0x0000000013b439: or [rcx], ch; add [rax], al; add [rcx-0x76b7f3a9], cl; ret; 
0x000000000c9f33: or [rcx], ch; ret; 
0x000000000edfde: or [rcx], ch; ror dword ptr [rax+0x63], cl; ror byte ptr [rax+0x63], cl; ret far; 
0x00000000160ad2: or [rcx], cl; add [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; jmp rax; 
0x0000000015f3ad: or [rcx], cl; add [rax], al; call qword ptr [r15+0xf08]; 
0x0000000015f535: or [rcx], cl; add [rax], al; call qword ptr [r15+0xf10]; 
0x00000000047261: or [rcx], cl; add [rax], al; call qword ptr [rbp+0xf10]; 
0x00000000160bb0: or [rcx], cl; add [rcx+rcx*4-0x39], cl; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000012b9ce: or [rcx], dh; rcr byte ptr [rbp+0x41], 0x5c; ret; 
0x00000000047277: or [rcx], dh; rcr byte ptr [rbx+0x5d], 0x41; pop rsp; pop r13; ret; 
0x000000000fed9a: or [rcx], dh; rcr byte ptr [rbx+0x5d], 0x41; pop rsp; ret; 
0x0000000010c30c: or [rcx], dh; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x5d], bl; ret; 
0x0000000010c400: or [rcx], dh; ror byte ptr [rcx-0x7cb7fbad], 0xc4; or [rbx+0x5d], bl; ret; 
0x0000000010fc18: or [rcx], eax; add [rax], al; syscall; 
0x00000000160a72: or [rcx], ecx; add [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; jmp rax; 
0x0000000009c687: or [rdi+0x5e], esi; lea rdx, [rip+0x1127d7]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000000b8c63: or [rdi+0xf], esp; add [rcx+0x63], cl; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000160987: or [rdi+rax*8], edx; xor eax, eax; ret; 
0x00000000160986: or [rdi+rax*8], rdx; xor eax, eax; ret; 
0x0000000008b671: or [rdi+rcx-0x4a], al; add [rbx+0x5d], bl; mov eax, r8d; pop r12; ret; 
0x000000000666c7: or [rdi+rcx-0x4a], al; xor [rcx+0xf], al; mov dh, 0x45; add [rax-0x7d], cl; ret; 
0x000000000b7583: or [rdi+rcx], edi; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000005b6dc: or [rdi-0x2f], esi; mov rax, r8; ret; 
0x0000000008e581: or [rdi], cl; adc [rbx+0x18], eax; movups [rbx+0x28], xmm0; pop rbx; ret; 
0x000000000340b8: or [rdi], cl; mov bh, 0xc0; ret; 
0x0000000008df85: or [rdi], cl; mov dh, 0x0; ret; 
0x0000000014dd45: or [rdi], cl; mov dh, 0xc0; add eax, 0x1; ret; 
0x00000000157aae: or [rdi], cl; mov dh, 0xc0; add rsp, 0x18; ret; 
0x0000000010fbc4: or [rdi], cl; mov dh, 0xc0; add rsp, 0x58; ret; 
0x0000000002470b: or [rdi], cl; mov dh, 0xc0; neg eax; ret; 
0x00000000148b32: or [rdi], cl; mov dh, 0xc0; pop rbp; pop r12; ret; 
0x00000000149ff9: or [rdi], cl; mov dh, 0xc0; pop rbx; pop rbp; ret; 
0x000000000522e8: or [rdi], cl; mov dh, 0xc0; ret; 
0x000000000ecbef: or [rdi], cl; mov dh, 0xc; or [rax+0x63], cl; ret; 
0x0000000006c6e3: or [rdi], cl; test edi, esp; add [rax], al; add [rcx-0x9], al; ret; 
0x0000000006d56a: or [rdi], cl; test esi, edx; add [rax], al; add [rcx-0x9], al; ret; 
0x000000001028e0: or [rdi], cl; xchg ebp, eax; ror byte ptr [rdi], 0xb6; shl bh, 0xd8; ret; 
0x00000000122088: or [rdi], cl; xchg edi, eax; ror byte ptr [rdi], 0xb6; shl bh, 0xd8; ret; 
0x00000000043bc2: or [rdi], eax; xor eax, eax; ret; 
0x000000001663fc: or [rdi], ecx; sub [rdi], esp; notrack jmp r9; 
0x000000001785a6: or [rdi], ecx; test [rbx+0x2], esp; add [rax], al; ret; 
0x00000000043bc1: or [rdi], rax; xor eax, eax; ret; 
0x000000001785a5: or [rdi], rcx; test [rbx+0x2], esp; add [rax], al; ret; 
0x00000000137a2b: or [rdx+0x4401000b], cl; mov eax, eax; pop rbp; ret; 
0x00000000190115: or [rdx+0xa], dh; vmovq [rdi], xmm0; vmovq [rsi-0x8], xmm0; ret; 
0x0000000009ef51: or [rdx+0xc], dh; mov [rdi], rsi; ret; 
0x0000000009f387: or [rdx-0x1], edi; cmovbe eax, edx; ret; 
0x0000000013b939: or [rdx], al; cmp r8, rdi; jae short 0x000000000013b953; mov eax, 0xffffffff; ret; 
0x000000000ec442: or [rdx], al; xor eax, eax; ret; 
0x000000000ec4b2: or [rdx], bl; mov eax, 0x2; ret; 
0x0000000015f868: or [rdx], ch; lea rcx, [rsi+0x398]; push 0x0; call qword ptr [rax+0x1e0]; 
0x0000000015f817: or [rdx], ch; lea rcx, [rsi+0x398]; push 0x2; call qword ptr [rax+0x1e0]; 
0x0000000015fcff: or [rdx], ch; push rax; mov rax, [rip+0x8c156]; mov r8, [rbx+0x10]; call qword ptr [rax+0x1e0]; 
0x000000000bf20f: or [rdx], cl; add [rax], al; add [rbx-0x7bf0cf03], al; ret; 
0x00000000061bef: or [rip+0x100], ah; or eax, 0x7; mov [rdx], eax; mov eax, 0x1; ret; 
0x000000001136d6: or [rip+0x100f], ah; ret; 
0x000000001136d5: or [rip+0x100f], r12b; ret; 
0x00000000187fb4: or [rip+0xc8b0001], dh; mov cl, [rbx-0x37d67dfc]; ret; 
0x00000000113765: or [rip-0x1010], ah; or esi, eax; xor eax, eax; mov [rdi+0x8], esi; ret; 
0x00000000113764: or [rip-0x1010], r12b; or esi, eax; xor eax, eax; mov [rdi+0x8], esi; ret; 
0x0000000011340c: or [rsi+0x10], bh; mov eax, 0x48; syscall; 
0x00000000151a73: or [rsi+0x1e6affff], edx; lea rdx, [rip+0x4150]; mov r9, rbp; mov esi, 0x9; call qword ptr [rax]; 
0x00000000148324: or [rsi+0x20], bh; mov rdi, rbp; call qword ptr [rax+0x30]; 
0x000000000434aa: or [rsi+0x8], bh; mov r8d, eax; mov eax, 0x82; syscall; 
0x000000001483dc: or [rsi+0x8], bh; mov rdi, rbp; call qword ptr [rax+0x30]; 
0x0000000014e700: or [rsi+0x8], bh; mov rdi, rbp; mov [r12+0x70], edx; call qword ptr [rax+0x30]; 
0x000000000b3aa4: or [rsi+0xf], ah; adc al, [rcx]; movlpd [rdx], xmm0; mov rax, rdi; ret; 
0x000000000b39d7: or [rsi+0xf], ah; adc eax, [rdx]; movlpd [rdx+0x8], xmm1; mov rax, rdi; ret; 
0x000000000b66e1: or [rsi+0xf], ah; adc ecx, [rdx+0x8]; mov rax, rdi; ret; 
0x00000000149117: or [rsi+0xf], ah; insb [rdi], dx; ror dword ptr [rdi], 0x29; add al, 0x24; call qword ptr [rax+0x8]; 
0x00000000088f1e: or [rsi-0x1], bh; mov rdi, r8; call qword ptr [rax+0x18]; 
0x0000000009f382: or [rsi-0x1d], esi; cmp esi, 0x9; mov edx, 0xffffffff; cmovbe eax, edx; ret; 
0x000000000b3af0: or [rsi-0x77], ah; or [rax-0x77], cl; clc; ret; 
0x000000000ec4d7: or [rsi], bl; mov eax, 0x2; ret; 
0x000000000ec437: or [rsi], dl; mov eax, 0x1; ret; 
0x000000001248ca: or [rsp+rcx+0x45640100], esi; mov [rax], ecx; add rsp, 0x8; ret; 
0x000000000fda41: or al, 0x0; add [rax-0x7b], cl; ror byte ptr [rdi], 0x84; ret far; 
0x000000001218dd: or al, 0x0; add [rax], al; add [rax], al; add rsp, 0x8; ret; 
0x00000000121c54: or al, 0x0; add [rax], al; add [rax], al; ret; 
0x00000000048060: or al, 0x0; add [rax], al; mov eax, 0xffffffff; ret; 
0x0000000014e73e: or al, 0x0; add [rax], al; mov esi, 0x8; mov rdi, rbp; call qword ptr [rax+0x30]; 
0x000000000980cd: or al, 0x0; add [rax], al; mov rax, r8; ret; 
0x000000000f2402: or al, 0x0; add [rax], al; pop rbp; pop r12; ret; 
0x000000000f24d1: or al, 0x0; add [rax], al; ret; 
0x000000001142b5: or al, 0x0; add [rax], al; syscall; 
0x000000001197c3: or al, 0x0; add [rax], al; xor eax, eax; pop rbx; ret; 
0x0000000009e98e: or al, 0x0; add [rax], al; xor eax, eax; ret; 
0x0000000018738f: or al, 0x0; add [rbp-0x77], cl; ret far; 
0x00000000165078: or al, 0x0; add [rbp-0x77], cl; ret far; 
0x00000000123d34: or al, 0x0; add [rcx+rax*2-0x77], esp; sbb [rcx+rcx*4-0x40], ecx; pop rbx; ret; 
0x00000000125929: or al, 0x0; add [rcx+rcx*4-0x40], eax; add rsp, 0x8; ret; 
0x000000000cb844: or al, 0x0; add [rdi+rax*4-0x17], dh; hlt; jle short 0x00000000000cb842; jmp qword ptr [rsi-0x70]; 
0x00000000121c7a: or al, 0x0; add al, [rax]; add [rax], al; ret; 
0x000000001218a8: or al, 0x0; add eax, [rax]; add [rax], al; add rsp, 0x8; ret; 
0x00000000121d33: or al, 0x0; add word ptr [rdx+rax*2], 0x1; ret; 
0x0000000009f1d1: or al, 0x0; cmovne rax, rdx; ret; 
0x000000000bce2e: or al, 0x0; cmp rdx, 0x4; cmovne r8, rax; mov rax, r8; ret; 
0x00000000121d2a: or al, 0x0; jae short 0x0000000000121d3a; mov rdx, [rip+0xcdd23]; add word ptr [rdx+rax*2], 0x1; ret; 
0x000000000bcd3e: or al, 0x0; lea rax, [rip+0x11389]; cmove rax, rdx; ret; 
0x000000000bc87e: or al, 0x0; lea rax, [rip+0x11b79]; cmove rax, rdx; ret; 
0x000000000bca2e: or al, 0x0; lea rax, [rip+0x12699]; cmove rax, rdx; ret; 
0x000000000a09e3: or al, 0x0; lea rdx, [rip+0xca944]; cmovne rax, rdx; ret; 
0x000000000a0673: or al, 0x0; lea rdx, [rip+0xcac94]; cmovne rax, rdx; ret; 
0x000000000a0513: or al, 0x0; lea rdx, [rip+0xcd904]; cmovne rax, rdx; ret; 
0x00000000121c6d: or al, 0x0; mov [rdi+0x10], rax; jb short 0x0000000000121c88; mov qword ptr [rip+0xca6e0], 0x2; ret; 
0x0000000011c51d: or al, 0x0; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000001200d9: or al, 0x0; mov dword ptr fs:[rax], 0x26; mov rax, 0xffffffffffffffff; ret; 
0x0000000011d045: or al, 0x0; mov dword ptr fs:[rax], 0x2; xor eax, eax; ret; 
0x000000001228e9: or al, 0x0; mov eax, [rax+0x38]; ret; 
0x000000000e4adf: or al, 0x0; mov esi, esi; movsxd rax, [rdx+rsi*4]; add rax, rdx; notrack jmp rax; 
0x00000000122005: or al, 0x0; mov rax, [rax+0x18]; add dword ptr [rax], 0x1; ret; 
0x00000000121ff5: or al, 0x0; mov rax, [rax+0x18]; add word ptr [rax], 0x1; ret; 
0x0000000011c305: or al, 0x0; mov rax, [rax]; test rax, rax; je 0x000000000011c400; call rax; 
0x0000000011c124: or al, 0x0; mov rax, [rax]; test rax, rax; je short 0x000000000011c190; call rax; 
0x000000000e8856: or al, 0x0; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000000e5475: or al, 0x0; movsxd rax, [rdx+rbp*4]; add rax, rdx; notrack jmp rax; 
0x000000000e8d72: or al, 0x0; movsxd rax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x000000000eaa87: or al, 0x0; movzx eax, al; movsxd rax, [rdi+rax*4]; add rax, rdi; notrack jmp rax; 
0x000000000eff90: or al, 0x0; movzx ebx, bl; movsxd rax, [rdx+rbx*4]; add rax, rdx; notrack jmp rax; 
0x000000000f00e0: or al, 0x0; movzx r14d, r14b; movsxd rax, [rdx+r14*4]; add rax, rdx; notrack jmp rax; 
0x0000000011cddc: or al, 0x0; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011c505: or al, 0x0; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000011f1dd: or al, 0x0; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000012d04e: or al, 0x0; pop rbp; ret; 
0x0000000012d050: or al, 0x0; pop rbp; ret; 
0x00000000121b13: or al, 0x0; pop rbx; ret; 
0x0000000012d123: or al, 0x0; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000123d84: or al, 0x0; syscall; 
0x000000000bc8a0: or al, 0x0; test byte ptr [rax+0x71], 0x2; lea rax, [rip+0x12933]; cmovne rax, rdx; ret; 
0x000000000bcdad: or al, 0x0; test byte ptr [rdx+0xcd], 0x1; je short 0x00000000000bcd75; ret; 
0x00000000074055: or al, 0x13; add rdx, r15; call qword ptr [rax+r9*8]; 
0x0000000009e228: or al, 0x15; add [rax], al; je short 0x000000000009e230; ret; 
0x0000000018c590: or al, 0x16; jne 0x000000000018c209; vzeroupper; ret; 
0x0000000018ca88: or al, 0x16; jne 0x000000000018c679; vzeroupper; ret; 
0x0000000018c6a7: or al, 0x16; jne short 0x000000000018c679; vzeroupper; ret; 
0x000000000a141e: or al, 0x16; mov [rsi+rdx+0x1], al; jne short 0x00000000000a1410; ret; 
0x000000000aa3a6: or al, 0x16; movzx eax, byte ptr [rdi+rdx]; sub eax, ecx; ret; 
0x0000000018c58d: or al, 0x17; cmp ecx, [rsi+rdx]; jne 0x000000000018c209; vzeroupper; ret; 
0x0000000018ca85: or al, 0x17; cmp ecx, [rsi+rdx]; jne 0x000000000018c679; vzeroupper; ret; 
0x0000000018c6a4: or al, 0x17; cmp ecx, [rsi+rdx]; jne short 0x000000000018c679; vzeroupper; ret; 
0x0000000006b1e1: or al, 0x18; add [rbx-0x5ff7b], cl; jmp qword ptr [rcx+rcx*4+0x2]; 
0x000000000993d6: or al, 0x18; add rsp, 0x10; mov rax, r8; pop rbx; ret; 
0x0000000010d096: or al, 0x1; add [rax], al; mov [rsi], eax; xor eax, eax; ret; 
0x0000000011d062: or al, 0x1; add [rax], al; ret; 
0x0000000010dc22: or al, 0x1; add [rax], al; syscall; 
0x0000000010d130: or al, 0x1; add [rax], al; xor eax, eax; ret; 
0x000000001214f6: or al, 0x1; rol byte ptr [rcx+rcx*4-0x19], cl; mov eax, 0x14; syscall; 
0x00000000062630: or al, 0x24; add [rax-0x7d], cl; in al, dx; sbb [rcx], dh; jmp qword ptr [rax+rcx*2-0x75]; 
0x00000000104627: or al, 0x24; call rax; 
0x0000000008eaf1: or al, 0x24; mov rdi, rbp; call rax; 
0x00000000147efe: or al, 0x24; mov rsi, r15; mov rdi, rbx; xor eax, eax; call rcx; 
0x00000000147e0c: or al, 0x24; xor eax, eax; mov rdi, rbx; call rcx; 
0x000000000995cd: or al, 0x28; add rsp, 0x10; mov rax, r8; pop rbp; ret; 
0x0000000007f370: or al, 0x2; lea rax, [rip+0x12f247]; movsxd rax, [rax+rcx*4]; add rax, rdx; jmp rax; 
0x0000000007e041: or al, 0x2; lea rax, [rip+0x1304f6]; movsxd rax, [rax+rcx*4]; add rax, rdx; jmp rax; 
0x00000000099460: or al, 0x2a; adc eax, 0xc0314500; mov dword ptr fs:[rax], 0xc; mov rax, r8; ret; 
0x0000000015f019: or al, 0x30; fisttp dword ptr [rcx], st; ret; 
0x0000000011eede: or al, 0x30; ror byte ptr [rcx], 0xd0; ret; 
0x0000000010c528: or al, 0x31; ror byte ptr [rcx+0x5d5b0453], 0x41; pop rsp; ret; 
0x0000000012312d: or al, 0x31; test ecx, ecx; jne short 0x0000000000123138; ret; 
0x00000000123196: or al, 0x31; test ecx, ecx; jne short 0x00000000001231a0; ret; 
0x00000000123a7d: or al, 0x31; test ecx, ecx; jne short 0x0000000000123a88; ret; 
0x00000000123ada: or al, 0x31; test ecx, ecx; jne short 0x0000000000123ae8; ret; 
0x0000000016009f: or al, 0x33; mov esi, [rsp+0x8]; call rax; 
0x00000000077872: or al, 0x3; lea rax, [rip+0x136845]; movsxd rax, [rax+rcx*4]; add rax, rbx; jmp rax; 
0x0000000018c860: or al, 0x3a; jne 0x000000000018c679; vzeroupper; ret; 
0x000000000cefa1: or al, 0x3b; or al, 0xf; test [rcx+rax], eax; add [rax], al; ret; 
0x0000000018c85d: or al, 0x3e; cmp ecx, [rdx+rdi]; jne 0x000000000018c679; vzeroupper; ret; 
0x0000000011f8ff: or al, 0x3f; shr eax, cl; and eax, 0x3; ret; 
0x0000000010e860: or al, 0x41; mov eax, eax; mov eax, 0x3; syscall; 
0x000000001151f0: or al, 0x41; mov eax, eax; mov eax, 0x4a; syscall; 
0x000000001152b0: or al, 0x41; mov eax, eax; mov eax, 0x4b; syscall; 
0x0000000010e558: or al, 0x41; mov eax, eax; mov edi, [rsp+0x8]; mov eax, 0x48; syscall; 
0x000000000e2ea6: or al, 0x48; add esp, 0x18; ret; 
0x000000000e2d80: or al, 0x48; add esp, 0x28; ret; 
0x00000000115012: or al, 0x48; add esp, 0x38; ret; 
0x0000000014aee3: or al, 0x48; add esp, 0x8; pop rbx; pop rbp; ret; 
0x00000000178602: or al, 0x48; lea ecx, [rdx+0xc]; jne 0x0000000000178810; ret; 
0x000000000b784f: or al, 0x48; lea edi, [rdi+0xc]; jne 0x00000000000b7fa0; ret; 
0x000000000b8f43: or al, 0x48; lea edi, [rdi+0xc]; jne 0x00000000000b97f0; ret; 
0x0000000009ef53: or al, 0x48; mov [rdi], esi; ret; 
0x0000000013b440: or al, 0x48; mov [rsi], edi; ret; 
0x000000001517e5: or al, 0x48; mov eax, [rbx]; mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x20]; 
0x00000000091a74: or al, 0x48; mov edi, [rsp]; add rsp, 0x10; pop rbx; jmp rax; 
0x0000000010e9e4: or al, 0x48; mov edi, [rsp]; mov r8d, eax; mov eax, 0x55; syscall; 
0x0000000014e799: or al, 0x48; mov edi, ebp; call qword ptr [rax+0x48]; 
0x00000000121d2d: or al, 0x48; mov edx, [rip+0xcdd23]; add word ptr [rdx+rax*2], 0x1; ret; 
0x000000000b8f60: or al, 0x49; sub eax, 0xd; lea rdi, [rdi+0xd]; jne 0x00000000000b97f0; ret; 
0x000000000b7a90: or al, 0x5; add [rax], al; ret; 
0x0000000016cef1: or al, 0x5; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000009482d: or al, 0x5b; ret; 
0x000000000a8ada: or al, 0x66; mov [rax+0x4], edx; movzx edx, byte ptr [rsp+0xe]; mov [rax+0x6], dl; ret; 
0x000000000a8a05: or al, 0x66; mov [rdi+0x4], edx; ret; 
0x00000000198c10: or al, 0x70; cld; call far fword ptr [rbp+0x48]; 
0x00000000033936: or al, 0x74; cmp ecx, [rax-0x7d]; ret; 
0x0000000004221b: or al, 0x75; or dh, dl; addps xmm0, xmm0; ret; 
0x0000000007fd8f: or al, 0x7e; ret far; 
0x000000000791ea: or al, 0x7e; ret; 
0x000000000b75bc: or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000bc10b: or al, 0x83; loopne 0x00000000000bc11e; movsxd rcx, [rsi+rax*4]; add rcx, rsi; notrack jmp rcx; 
0x00000000074565: or al, 0x83; ret; 
0x000000000981b2: or al, 0x83; shr dword ptr [rsi+0x48], 0x3d; jmp far fword ptr [rdi+0x32760000]; 
0x000000000bc111: or al, 0x86; add rcx, rsi; notrack jmp rcx; 
0x000000000bcb6d: or al, 0x87; test ecx, ecx; jne short 0x00000000000bcb48; mov rax, r8; ret; 
0x000000000a8983: or al, 0x89; add rcx, r9; notrack jmp rcx; 
0x0000000005d7ea: or al, 0x89; fdiv st, st(6); ret; 
0x00000000042c6b: or al, 0x89; jae short 0x0000000000042caf; xor eax, eax; pop rbx; ret; 
0x000000000a9013: or al, 0x8a; lea r10, [r10+r9]; notrack jmp r10; 
0x000000000aee14: or al, 0x8a; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000012312a: or al, 0x8a; mov ecx, [rcx+rsi]; test ecx, ecx; jne short 0x0000000000123138; ret; 
0x00000000123193: or al, 0x8a; mov ecx, [rcx+rsi]; test ecx, ecx; jne short 0x00000000001231a0; ret; 
0x00000000123a7a: or al, 0x8a; mov ecx, [rcx+rsi]; test ecx, ecx; jne short 0x0000000000123a88; ret; 
0x00000000123ad7: or al, 0x8a; mov ecx, [rcx+rsi]; test ecx, ecx; jne short 0x0000000000123ae8; ret; 
0x0000000017deaf: or al, 0x8a; pcmpeqb xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x000000001850af: or al, 0x8a; vpcmpeqb xmm0, xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000016b3cd: or al, 0x8b; add r9, r11; notrack jmp r9; 
0x00000000113313: or al, 0x8b; jl short 0x000000000011333b; or [rax+0x11d], bh; syscall; 
0x00000000165e1d: or al, 0x8b; lea r9, [r11+r9]; notrack jmp r9; 
0x0000000018fa4d: or al, 0x8b; mov ecx, [rcx-0x4]; mov [rdi], esi; mov [r9-0x4], ecx; ret; 
0x0000000010c60b: or al, 0x8b; push rbx; add al, 0xeb; ret; 
0x0000000011cd3f: or al, 0x8d; add [r8-0x7d], ecx; ret; 
0x00000000123397: or al, 0x8e; add eax, [rcx+rdx]; ret; 
0x000000000fe042: or al, 0x8e; add rcx, rsi; notrack jmp rcx; 
0x0000000012337c: or al, 0x8e; mov edx, [rcx+rdx]; test edx, edx; jne short 0x0000000000123390; ret; 
0x00000000123cac: or al, 0x8e; mov edx, [rcx+rdx]; test edx, edx; jne short 0x0000000000123cc0; ret; 
0x00000000080eb0: or al, 0x8f; add rcx, rdi; notrack jmp rcx; 
0x0000000018d483: or al, 0x93; add rcx, r11; notrack jmp rcx; 
0x00000000165db6: or al, 0x93; add rsi, rdx; add rdi, rdx; add r9, r11; notrack jmp r9; 
0x000000000b6d3b: or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000156090: or al, 0x9a; std; jmp qword ptr [rsi+0x66]; 
0x00000000193f7e: or al, 0xa7; add rcx, rdi; notrack jmp rcx; 
0x000000001506a5: or al, 0xb8; add [rax], eax; add [rax], al; ret; 
0x00000000120137: or al, 0xb8; sub eax, [rax]; add [rax], al; syscall; 
0x00000000120cb6: or al, 0xb8; xor eax, [rcx]; add [rax], al; syscall; 
0x00000000165e21: or al, 0xb; notrack jmp r9; 
0x000000000b6d3f: or al, 0xb; notrack jmp rcx; 
0x000000000e311e: or al, 0xbe; add [rax], eax; add [rax], al; incsspq rsi; jmp rdi; 
0x00000000190d52: or al, 0xc3; nop [rax+rax]; lea rax, [rdi+0xd]; ret; 
0x0000000014e73d: or al, 0xc; add [rax], al; add [rsi+0x8], bh; mov rdi, rbp; call qword ptr [rax+0x30]; 
0x0000000016cef0: or al, 0xc; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000010030b: or al, 0xe8; call far fword ptr [rdi]; 
0x0000000010040b: or al, 0xe8; call far fword ptr [rsi]; 
0x000000001152c9: or al, 0xe8; mov eax, [0x480c24448bfff7f3]; add esp, 0x18; ret; 
0x0000000011f4ac: or al, 0xe8; mov esi, 0x8bfff751; and al, 0xc; add rsp, 0x28; ret; 
0x000000000f2267: or al, 0xe8; ret; 
0x000000000e2d77: or al, 0xe8; sbb bl, bh; dec dword ptr [rbx+0x480c2444]; add esp, 0x28; ret; 
0x0000000012014d: or al, 0xe8; sbb eax, 0x8bfff745; and al, 0xc; add rsp, 0x28; ret; 
0x0000000016d922: or al, 0xf3; movq [rdi], mm1; ret; 
0x0000000005c147: or al, 0xf6; ret; 
0x0000000011841c: or al, 0xf7; ret; 
0x000000001507b0: or al, 0xf; enter 0xc089, 0x48; mov [rdx], eax; mov eax, 0x1; ret; 
0x000000000cefa4: or al, 0xf; test [rcx+rax], eax; add [rax], al; ret; 
0x000000000606bb: or al, 0xf; test [rdi-0x1600000f], bl; fsub st, qword ptr [rdx]; cld; jmp qword ptr [rsi+0xf]; 
0x000000000b7853: or al, 0xf; test [rsi+0x7], eax; add [rax], al; ret; 
0x00000000135efa: or al, 0xfd; jmp qword ptr [rcx+rax*2-0x75]; 
0x0000000015edbf: or al, 0xfd; jmp qword ptr [rsi+0x66]; 
0x0000000014ee87: or al, 0xfe; jmp qword ptr [rsi+0xf]; 
0x0000000014c123: or al, [r8]; add [rcx+rax*2-0x77], esp; sbb [rcx+rcx*4-0x40], ecx; pop rbx; ret; 
0x0000000014c173: or al, [r8]; syscall; 
0x0000000011b1d4: or al, [rax+rax]; add [rcx+rcx*4+0x44], cl; and al, 0x8; mov rdi, [r8]; call rbx; 
0x0000000007597d: or al, [rax]; add [rax-0x77], cl; fimul st, dword ptr [rcx+rcx*4-0x1a]; mov rdi, r15; call qword ptr [rcx+0x38]; 
0x0000000015238c: or al, [rax]; add [rax], al; lea r9, [rsp+0x1c]; call qword ptr [rax]; 
0x00000000136e9b: or al, [rax]; add [rax], al; pop rbx; pop rbp; ret; 
0x00000000148276: or al, [rax]; add [rax], al; ret; 
0x000000001189d5: or al, [rax]; add [rax], al; syscall; 
0x000000000ab458: or al, [rax]; add [rbp-0x77], cl; ret far; 
0x0000000014c124: or al, [rax]; add [rcx+rax*2-0x77], esp; sbb [rcx+rcx*4-0x40], ecx; pop rbx; ret; 
0x0000000011ae9c: or al, [rax]; add [rcx+rcx*4+0x44], cl; and al, 0x8; mov rdi, [r8]; call rbx; 
0x000000001462ab: or al, [rax]; add rsp, 0x8; ret; 
0x00000000148685: or al, [rax]; jmp qword ptr [rdx+rax*8]; 
0x00000000141029: or al, [rax]; mov eax, [rax+0x18]; test eax, eax; jne short 0x0000000000141038; ret; 
0x00000000109087: or al, [rax]; mov edx, ebp; movsxd rax, [rcx+rdx*4]; add rax, rcx; notrack jmp rax; 
0x00000000141119: or al, [rax]; mov rax, fs:[rax]; ret; 
0x000000000bcf8e: or al, [rax]; mov rdi, [r12]; movzx esi, bl; call rbp; 
0x0000000010cf99: or al, [rax]; mov rdx, [rax+0xb0]; call qword ptr [rax+0x88]; 
0x0000000010a0c4: or al, [rax]; movsxd rax, [rdx+rbp*4]; add rax, rdx; notrack jmp rax; 
0x000000001092d8: or al, [rax]; movsxd rax, [rdx+rbx*4]; add rax, rdx; notrack jmp rax; 
0x0000000010c952: or al, [rax]; movups [rsp+0xc8], xmm0; mov [rsp+0xe8], eax; mov eax, 0xe; syscall; 
0x0000000010b14c: or al, [rax]; movzx eax, al; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x00000000109952: or al, [rax]; movzx eax, al; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000001462d7: or al, [rax]; ret; 
0x00000000146295: or al, [rax]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000140bc1: or al, [rax]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000143749: or al, [rax]; ror rdi, 0x11; xor rdi, fs:[0x30]; call rax; 
0x00000000140e95: or al, [rax]; syscall; 
0x00000000140bdc: or al, [rax]; test eax, eax; je short 0x0000000000140be8; ret; 
0x00000000146eb8: or al, [rax]; test eax, eax; je short 0x0000000000146ec0; ret; 
0x00000000141a61: or al, [rax]; test rax, rax; je short 0x0000000000141a70; add rsp, 0x8; ret; 
0x00000000142e99: or al, [rax]; test rax, rax; jne short 0x0000000000142ea8; ret; 
0x000000000bc725: or al, [rbx+0xd7402f8]; xor eax, eax; ret; 
0x0000000010b2e4: or al, [rcx-0x80]; jmp qword ptr [rdi+rcx]; 
0x0000000010fc75: or al, [rcx]; add [rax], al; syscall; 
0x00000000083b27: or al, [rcx]; add cl, ch; ret far; 
0x00000000190d33: or al, bl; nop [rax+rax]; lea rax, [rdi+0xb]; ret; 
0x000000000a8643: or al, bl; nop [rax]; mov byte ptr [rcx-0x1], 0x0; mov [rdx], rcx; ret; 
0x00000000048271: or al, ch; cdq; ret; 
0x000000000f2235: or al, ch; cmc; add bl, dh; jmp qword ptr [rsi+0xf]; 
0x0000000011332d: or al, ch; cmp eax, 0x8bfff813; and al, 0x8; add rsp, 0x28; ret; 
0x00000000106cdf: or al, ch; fcmovnbe st, st(2); bnd jmp qword ptr [rsi+0x66]; 
0x000000000f1776: or al, ch; hlt; ret; 
0x0000000012ed3c: or al, ch; idiv bh; jmp qword ptr [rsi+0xf]; 
0x000000000fb50b: or al, ch; jmp far fword ptr [rbp-0xe]; 
0x000000001129dd: or al, ch; lea ebx, [rax+rdi*8]; dec dword ptr [rbx+0x48082444]; add esp, 0x28; ret; 
0x000000000434c8: or al, ch; mov [0x480824448b000511], al; add esp, 0x18; ret; 
0x0000000011f55d: or al, ch; or eax, 0x48fff751; mov eax, [rsp+0x8]; add rsp, 0x28; ret; 
0x00000000118a5d: or al, ch; or eax, 0x8bfff7bc; and al, 0x8; add rsp, 0x28; ret; 
0x00000000052a81: or al, ch; or esi, edi; std; dec dword ptr [rax-0x77]; ret; 
0x0000000012ec0b: or al, ch; pop rdi; idiv edi; jmp qword ptr [rsi+0x2e]; 
0x0000000012f45b: or al, ch; pxor mm7, mm7; jmp qword ptr [rsi+0x2e]; 
0x00000000042d1f: or al, ch; ret far; 
0x00000000141127: or al, ch; ret; 
0x0000000011207b: or al, ch; scasd [rdi]; add dh, cl; jmp qword ptr [rsi-0x7d]; 
0x0000000012ebd9: or al, ch; xchg ecx, eax; idiv edi; call qword ptr [rax-0x3c0776b8]; 
0x00000000119206: or ax, 0x4800; add esp, 0x18; ret; 
0x0000000011577c: or ax, 0x6400; mov dword ptr [rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000a9018: or bh, [rsi]; jmp r10; 
0x00000000153a3c: or bh, al; and al, 0x30; add eax, 0xf000000; adc [rsp+0x18], eax; call qword ptr [rax+0x18]; 
0x00000000113bd6: or bh, al; dec dword ptr [rbx+0x480c2444]; add esp, 0x18; ret; 
0x00000000082af1: or bh, bh; rol byte ptr [rbx+0xf74fff8], 0x1; mov rax, [rsp+0x8]; add rsp, 0x18; ret; 
0x0000000015f7ce: or bh, bh; xor [rax-0x75], cl; add eax, 0x8c688; mov rdi, [rdi]; call qword ptr [rax+0x1e8]; 
0x0000000015f07f: or bh, ch; jmp qword ptr [rsi+0x2e]; 
0x000000000309f1: or bl, [rax+rax]; lea rdi, [rip+0x1bcf85]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000011a795: or bl, [rbp+0x41]; pop rsp; pop r13; ret; 
0x00000000152afd: or bl, [rbx+0x31]; rcr byte ptr [rbp+0x41], 0x5c; ret; 
0x000000001025ac: or bl, [rdx+0x59]; pop rbx; ret; 
0x0000000014824e: or bl, al; mov dword ptr [rsi], 0xc; ret; 
0x00000000113728: or bl, al; mov rax, [rip+0xd873f]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000190d13: or bl, al; nop [rax+rax]; lea rax, [rdi+0x9]; ret; 
0x00000000178735: or bl, al; nop [rax+rax]; mov [rcx], rdx; mov [rcx+0x5], rdx; ret; 
0x00000000178716: or bl, al; nop [rax+rax]; mov [rcx], rdx; mov [rcx+0x7], edx; ret; 
0x00000000178705: or bl, al; nop [rax+rax]; mov [rcx], rdx; mov [rcx+0x8], dx; ret; 
0x000000000b7f25: or bl, al; nop [rax+rax]; mov [rdi], rdx; mov [rdi+0x5], rdx; ret; 
0x000000000b7f06: or bl, al; nop [rax+rax]; mov [rdi], rdx; mov [rdi+0x7], edx; ret; 
0x000000000b7ef5: or bl, al; nop [rax+rax]; mov [rdi], rdx; mov [rdi+0x8], dx; ret; 
0x00000000131841: or bl, al; nop [rax+rax]; ret; 
0x000000001218e6: or bl, al; nop [rax+rax]; ret; 
0x00000000094cca: or bl, al; nop [rax]; endbr64; mov eax, 0x18; syscall; 
0x0000000011638a: or bl, al; nop [rax]; mov eax, 0x1; ret; 
0x0000000013c657: or bl, al; nop [rax]; mov eax, 0xffffffff; ret; 
0x00000000115ed7: or bl, al; nop [rax]; ret; 
0x000000000d0193: or bl, al; nop [rax]; xor eax, eax; add rsp, 0x8; ret; 
0x000000000dfd3e: or bl, al; ret; 
0x0000000016dae3: or bl, dh; movq [rdi], mm1; ret; 
0x0000000014824d: or bl, r8b; mov dword ptr [rsi], 0xc; ret; 
0x00000000041ff9: or byte ptr [rax+0x21], 0xc2; mov [rdi], rdx; ret; 
0x00000000041fc9: or byte ptr [rax+0x21], 0xc2; movq xmm0, rdx; ret; 
0x0000000014d000: or byte ptr [rax+0x66000000], 0x89; insb [rdi], dx; mov eax, 0x1; ret; 
0x0000000004126d: or byte ptr [rax], 0x4c; add ebx, [rdi+0x20]; mov rax, r11; ret; 
0x000000000a8b19: or byte ptr [rcx+rax-0x40], 0x3e; jmp rax; 
0x0000000012c9df: or byte ptr [rcx+rcx*4-0x16], 0xf; adc [rbp-0x78], edi; call rax; 
0x0000000012c911: or byte ptr [rcx+rcx*4-0x16], 0xf; adc [rbp-0x78], esi; call rax; 
0x0000000012c401: or byte ptr [rcx+rcx*4-0x16], 0xf; adc [rbp-0x78], esp; call rax; 
0x0000000012c6e9: or byte ptr [rcx+rcx*4-0x6], 0xf; adc [rbp-0x78], ecx; call rax; 
0x0000000012c39c: or byte ptr [rcx+rcx*4-0xe], 0xf; adc [rbp-0x78], ebp; call rax; 
0x00000000113785: or byte ptr [rcx-0x3c3fcef9], 0x48; mov eax, [rip+0xd86de]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000009ca52: or byte ptr [rcx-0x72b7ffef], 0x3d; adc ebx, 0x11; add al, ch; mov dil, r15b; jmp qword ptr [rsi+0xf]; 
0x00000000057c59: or byte ptr [rcx-0x77], 0x0; mov eax, 0x1; mov dword ptr [rdx], 0xffffc002; ret; 
0x0000000012fbbf: or byte ptr [rdi], 0x45; mov ebx, 0x401f0f; mov eax, edi; shr eax, 0x18; ret; 
0x0000000012fb2e: or byte ptr [rdi], 0x45; mov ebx, 0x441f0f; add [rcx-0xda08], cl; inc dword ptr [rax]; ret; 
0x0000000010a0c3: or byte ptr [rdx], 0x0; movsxd rax, [rdx+rbp*4]; add rax, rdx; notrack jmp rax; 
0x00000000113db4: or byte ptr [rip+0x64d8f700], 0x89; add bh, [rax-0x1]; ret; 
0x00000000117721: or byte ptr [rip-0x3b7cb800], 0x8; ret; 
0x000000001176b0: or byte ptr [rip-0x3f76b400], 0x48; add esp, 0x8; ret; 
0x000000001176fa: or byte ptr [rip], 0x0; add rsp, 0x8; ret; 
0x000000001176ef: or byte ptr [rip], 0x0; mov qword ptr [rip+0xd808f], 0x0; add rsp, 0x8; ret; 
0x00000000127952: or ch, [rbx-0x76b70011]; ret; 
0x0000000003388f: or ch, al; ret far; 
0x000000001522e2: or ch, bl; or [rax], eax; syscall; 
0x0000000015188a: or ch, ch; dec dword ptr [rax-0x77]; ret; 
0x0000000002fd8d: or ch, cl; popfq; and eax, 0x1f0fffff; add [rax], r8b; ret; 
0x000000000b7811: or cl, [rax-0x73]; jg short 0x00000000000b7820; jne 0x00000000000b7fa0; ret; 
0x000000000b8ef5: or cl, [rax-0x73]; jg short 0x00000000000b8f04; jne 0x00000000000b97f0; ret; 
0x000000001785c2: or cl, [rax-0x73]; or cl, [rdi]; test [rbx+0x2], eax; add [rax], al; ret; 
0x00000000084549: or cl, [rax-0x7d]; ret; 
0x00000000047da0: or cl, [rcx+0x10e9c117]; and ecx, 0x3ff; xor eax, ecx; ret; 
0x000000001785c5: or cl, [rdi]; test [rbx+0x2], eax; add [rax], al; ret; 
0x0000000017c9b6: or cl, [rdi]; test [rdx-0x7ffffffe], esp; cmp [rcx], al; sbb rax, 0xffffffffffffffff; ret; 
0x000000000d2992: or cl, al; adc [rax], eax; syscall; 
0x00000000041e17: or cl, bl; in eax, 0xdf; loopne 0x0000000000041dfa; fsub st, dword ptr [rip+0x200]; ret; 
0x00000000041d5f: or cl, bl; std; fstp st(1), st; ret; 
0x00000000078a90: or cl, ch; cli; in al, 0xff; jmp qword ptr [rsi+0x2e]; 
0x0000000014fab0: or cl, ch; jp short 0x000000000014fad2; jmp qword ptr [rsi+0x2e]; 
0x000000000d3f74: or cl, ch; ret far; 
0x0000000007f203: or cl, ch; ret; 
0x000000000bba05: or cl, cl; cmove rax, rdx; ret; 
0x00000000041e55: or dh, [rbp+0x8]; fadd st, st(0); add rsp, 0x8; ret; 
0x0000000013bcf7: or dh, [rbp+rax*2-0x7d]; dec dword ptr [rbx]; mov edx, 0x104; cmove eax, edx; ret; 
0x000000000ee30b: or dh, [rbp+rdi+0x48]; add esp, 0x8; pop rbx; pop rbp; ret; 
0x00000000034b4a: or dh, [rdi+0x26]; lea rdx, [rip+0x17440c]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000087e16: or dh, [rdi+rcx+0x48]; cmp eax, esi; ja short 0x0000000000087e10; lea eax, [rdx+rdi]; ret; 
0x00000000092a46: or dh, [rdi+rcx+0x48]; cmp ecx, esi; ja short 0x0000000000092a40; lea eax, [rdx+rdi]; ret; 
0x0000000017df39: or dh, al; movzx eax, byte ptr [rdi+rcx]; movzx edx, byte ptr [rsi+rcx]; sub eax, edx; ret; 
0x000000000ddb74: or dh, bh; adc [rax], al; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000014f262: or dh, bh; jmp qword ptr [rsi+0x66]; 
0x00000000094d5e: or dh, bh; xor eax, eax; ret; 
0x0000000016da03: or dh, bl; movq [rdi], mm1; ret; 
0x0000000004221d: or dh, dl; addps xmm0, xmm0; ret; 
0x000000000fa0fd: or dl, [rip-0x72b80000]; xor eax, 0xb716c; movsxd rax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x00000000092748: or dword ptr [rax+0x74], 0x80; mov rax, [rax+0x68]; test rax, rax; jne short 0x0000000000092748; ret; 
0x000000000e8855: or dword ptr [rax+rax], 0x48; movsxd eax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000005589f: or dword ptr [rax-0x7d], 0xffffffea; add [rbp-0x1e], esi; mov eax, 0x1; ret; 
0x000000001173a8: or dword ptr [rax], 0x8000; add rsp, 0x8; mov eax, r8d; ret; 
0x00000000082aa7: or dword ptr [rbx], 0x20; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000008e690: or dword ptr [rbx], 0x20; mov eax, 0xffffffff; pop rbx; ret; 
0x00000000093eac: or dword ptr [rbx], 0x8; pop rbx; ret; 
0x000000000bac3f: or dword ptr [rcx+0xf], 0xc634b00; or dword ptr [rcx-0x73], 0xc; or edi, [rsi]; jmp rcx; 
0x0000000018f6f7: or dword ptr [rcx+rax+0x4e8b0000], 0xfffffffc; cmp ecx, [rdi-0x4]; jne 0x000000000018f8b6; xor eax, eax; ret; 
0x0000000009020a: or dword ptr [rcx+rax-0x28], 0x3e; jmp rax; 
0x0000000006c42f: or dword ptr [rcx-0x1], 0xffffffff; dec dword ptr [rax-0x7d]; ret; 
0x000000000b75bd: or dword ptr [rcx-0x73], 0xc; or edi, [rsi]; jmp rcx; 
0x0000000011adf9: or dword ptr [rcx], 0x0; add [rcx+rcx*4+0x44], cl; and al, 0x8; mov rdi, [r8]; call rbx; 
0x00000000094d68: or dword ptr [rdi+0x8], 0x1; xor eax, eax; ret; 
0x00000000077245: or dword ptr [rdi+rdi*8], 0xffffffff; jmp qword ptr [rsi+0xf]; 
0x000000000b6d36: or dword ptr [rdi], 0x0; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000008aeeb: or dword ptr [rdi], 0xc7640016; add [rcx], cl; add [rax], al; add [rax-0x1], bh; ret; 
0x00000000151889: or dword ptr [rdx], 0xffffffed; dec dword ptr [rax-0x77]; ret; 
0x00000000026fa1: or dword ptr [rip+0x1c69ac], 0x2; add rsp, 0x8; ret; 
0x000000001462c7: or dword ptr [rip+0xaa812], 0x2; add rsp, 0x8; lea rax, [rip+0xaa827]; ret; 
0x00000000140bf1: or dword ptr [rip+0xafbcc], 0x2; add rsp, 0x8; ret; 
0x000000001173c8: or dword ptr [rip-0x7ab800], 0x75; adc [rax+0x1], bh; ret; 
0x00000000083f6e: or eax, 0x10016a8; ret; 
0x000000000a897a: or eax, 0x10651d; mov ecx, eax; movsxd rcx, [r9+rcx*4]; add rcx, r9; notrack jmp rcx; 
0x000000000e44d6: or eax, 0x107995; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000e44a6: or eax, 0x1079c5; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000e4476: or eax, 0x1079f5; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000e4446: or eax, 0x107a25; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000e43e6: or eax, 0x107a85; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000e43b6: or eax, 0x107ab5; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000e4166: or eax, 0x107d05; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000e31b6: or eax, 0x108cb5; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000e2dd6: or eax, 0x109095; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000e2b86: or eax, 0x1092e5; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000d4226: or eax, 0x117c45; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000d41f6: or eax, 0x117c75; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000080f0d: or eax, 0x12dbb2; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x00000000080759: or eax, 0x12e122; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x0000000007dfa0: or eax, 0x13069b; mov r9, rsi; movsxd rax, [rcx+rax*4]; add rax, rdx; jmp rax; 
0x00000000187f7f: or eax, 0x1353c; mov edx, [rcx+rdx*4]; mov eax, [rcx+rax*4]; sub eax, edx; ret; 
0x0000000006c32d: or eax, 0x14191e; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x000000000e3221: or eax, 0x142b800; add [rax], al; syscall; 
0x00000000064953: or eax, 0x1490f8; movzx edx, dl; movsxd rax, [rcx+rdx*4]; add rax, rcx; notrack jmp rax; 
0x0000000006364f: or eax, 0x149b94; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x00000000063543: or eax, 0x149c38; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x0000000018689e: or eax, 0x14c1d; mov eax, [rcx+rax*4]; mov edx, [rcx+rdx*4]; sub eax, edx; ret; 
0x000000001865ca: or eax, 0x14ef1; mov edx, [rcx+rdx*4]; mov eax, [rcx+rax*4]; sub eax, edx; ret; 
0x0000000009c217: or eax, 0x152c74; jae short 0x000000000009c240; lea rax, [rax-0x8]; ret; 
0x0000000008e5e7: or eax, 0x15a8b4; mov [rdx+0xe0], rcx; pop rbx; ret; 
0x000000001851b5: or eax, 0x16306; mov eax, [rcx+rax*4]; mov edx, [rcx+rdx*4]; sub eax, edx; ret; 
0x00000000042667: or eax, 0x17a104; pand xmm0, [rip+0x17a0ec]; por xmm0, xmm1; ret; 
0x000000000420a9: or eax, 0x17a632; movsd xmm0, [rip+0x17ac2a]; orpd xmm1, [rip+0x17a642]; mulsd xmm0, xmm1; ret; 
0x000000000420b9: or eax, 0x17a642; mulsd xmm0, xmm1; ret; 
0x00000000042083: or eax, 0x17a658; movsd xmm0, [rip+0x17ac58]; orpd xmm1, [rip+0x17a678]; mulsd xmm0, xmm1; ret; 
0x00000000042093: or eax, 0x17a678; mulsd xmm0, xmm1; ret; 
0x00000000041f2f: or eax, 0x17a7ac; orpd xmm0, xmm1; ret; 
0x000000001836bf: or eax, 0x17dfc; mov edx, [rcx+rdx*4]; mov eax, [rcx+rax*4]; sub eax, edx; ret; 
0x000000000555aa: or eax, 0x1968c1; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000550a1: or eax, 0x196dca; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000054f3e: or eax, 0x196f2d; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000013c35a: or eax, 0x1975c085; mov eax, r8d; ret; 
0x00000000181a2e: or eax, 0x19a8d; mov eax, [rcx+rax*4]; mov edx, [rcx+rdx*4]; sub eax, edx; ret; 
0x000000001816fa: or eax, 0x19dc1; mov edx, [rcx+rdx*4]; mov eax, [rcx+rax*4]; sub eax, edx; ret; 
0x00000000184d29: or eax, 0x1; ret; 
0x0000000018bca1: or eax, 0x1; vzeroupper; ret; 
0x00000000043a06: or eax, 0x1a8465; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000043416: or eax, 0x1a8a55; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000017fe25: or eax, 0x1b696; mov eax, [rcx+rax*4]; mov edx, [rcx+rdx*4]; sub eax, edx; ret; 
0x00000000115b15: or eax, 0x1b800; add [rax], al; add rsp, 0x8; ret; 
0x000000000b87b1: or eax, 0x1c478d48; ret; 
0x000000000b9241: or eax, 0x1c478d48; sub r8, 0x1d; lea rdi, [rdi+0x1d]; jne 0x00000000000b97f0; ret; 
0x000000000b9621: or eax, 0x1d478d48; ret; 
0x000000000b7ab1: or eax, 0x1de88349; lea rdi, [rdi+0x1d]; jne 0x00000000000b7fa0; ret; 
0x00000000178628: or eax, 0x1e1850f; add [rax], al; ret; 
0x0000000014ed3a: or eax, 0x1f0ffffe; add bl, dh; nop edx, edi; ret; 
0x00000000117c3e: or eax, 0x1f88300; jg short 0x0000000000117c46; ret; 
0x0000000017ca49: or eax, 0x210850f; add [rax], al; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x00000000118410: or eax, 0x25894400; je short 0x0000000000118425; add [rbp-0x8f38b25], al; ret; 
0x000000001142c8: or eax, 0x2894800; cmp rdi, rax; ja short 0x00000000001142f8; xor eax, eax; ret; 
0x0000000010047e: or eax, 0x2; mov [rdi+0x38], al; mov [rsi], edx; movups [rsi+0x8], xmm0; ret; 
0x00000000094db5: or eax, 0x2; mov [rdi+0x8], eax; xor eax, eax; ret; 
0x00000000190d62: or eax, 0x2e6666c3; nop [rax+rax]; lea rax, [rdi+0xe]; ret; 
0x00000000118cb3: or eax, 0x2f6e800; add [rax], al; lea rax, [rip+0xd6baf]; add rsp, 0x8; ret; 
0x00000000113cb0: or eax, 0x30; mov [rdi+0x8], eax; mov eax, 0x100; mov [rdi+0x16], ax; ret; 
0x000000000424f4: or eax, 0x3f000000; mov [rdi], edx; movd xmm0, eax; ret; 
0x0000000012cf0a: or eax, 0x3f8348; je short 0x000000000012cf20; ret; 
0x000000001191b5: or eax, 0x415c4100; pop rbp; ret; 
0x0000000011917d: or eax, 0x415d5900; pop rsp; pop r13; ret; 
0x000000001149eb: or eax, 0x44110f00; and al, 0x8; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000085742: or eax, 0x44a8d48; mov [rax], rcx; mov eax, [rdx]; ret; 
0x0000000015755a: or eax, 0x44c03145; mov eax, eax; ret; 
0x000000000db264: or eax, 0x48c68900; movsxd edx, [rdi+rsi*4]; add rdx, rdi; notrack jmp rdx; 
0x000000000b1e85: or eax, 0x48fad348; test edx, edx; je short 0x00000000000b1eb0; bsf rax, rdx; ret; 
0x00000000120dee: or eax, 0x48ffb70f; lea eax, [rip+0x91887]; mov eax, [rax+rdi*4]; ret; 
0x0000000011f55f: or eax, 0x48fff751; mov eax, [rsp+0x8]; add rsp, 0x28; ret; 
0x00000000109107: or eax, 0x49c0b60f; movsxd eax, [rsp+rax*4]; add rax, r12; notrack jmp rax; 
0x0000000011767f: or eax, 0x4c000d81; mov eax, eax; ret; 
0x000000001138fd: or eax, 0x5401be00; add [rax], al; mov eax, r8d; mov ebx, fs:[r10]; syscall; 
0x000000000bcb1e: or eax, 0x58d4800; jns short 0x00000000000bcb4d; add [rax], eax; cmove rax, rdx; ret; 
0x000000000bc98e: or eax, 0x58d4800; mov [rdi], ebp; add [rax], eax; cmove rax, rdx; ret; 
0x000000000a8bfe: or eax, 0x58d4800; sbb [rax], edi; add [rax], al; cmove rax, rdx; ret; 
0x0000000008d8b2: or eax, 0x5bd88948; pop rbp; pop r12; ret; 
0x00000000034b72: or eax, 0x5be43145; pop rbp; mov rax, r12; pop r12; ret; 
0x00000000118c64: or eax, 0x5c415d00; pop r13; ret; 
0x00000000034517: or eax, 0x64001b7a; add rax, [0x0]; ret; 
0x0000000010d419: or eax, 0x64d8f700; mov [rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011877a: or eax, 0x64d8f700; mov [rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000118779: or eax, 0x64d8f700; mov [rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010d4fd: or eax, 0x64d8f700; mov [rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000010c205: or eax, 0x64d8f700; mov [rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x000000001481e8: or eax, 0x6a793; mov edx, r8d; movsxd rax, [rcx+rdx*4]; add rax, rcx; notrack jmp rax; 
0x000000000b7875: or eax, 0x724850f; add [rax], al; ret; 
0x00000000118417: or eax, 0x74db8500; or al, 0xf7; ret; 
0x0000000011499c: or eax, 0x75c08500; mov eax, 0x71; syscall; 
0x00000000114a3c: or eax, 0x75c08500; mov eax, 0x72; syscall; 
0x000000000b87a8: or eax, 0x77f0ff3; movdqu [rdi+0xd], xmm2; lea rax, [rdi+0x1c]; ret; 
0x000000000b9618: or eax, 0x77f0ff3; movdqu [rdi+0xd], xmm2; lea rax, [rdi+0x1d]; ret; 
0x000000000b70d8: or eax, 0x77f0ff3; movdqu [rdi+0xd], xmm2; ret; 
0x000000000bb278: or eax, 0x77f0ff3; movdqu [rdi+0xd], xmm2; xor ch, ch; mov [rdi+0x1d], ch; ret; 
0x00000000061bf5: or eax, 0x7; mov [rdx], eax; mov eax, 0x1; ret; 
0x00000000113781: or eax, 0x80000000; mov [rdi], eax; xor eax, eax; ret; 
0x000000000cb1b0: or eax, 0x80000000; mov [rdx+0x4], r8d; mov [rdx], eax; xor eax, eax; ret; 
0x00000000168850: or eax, 0x83adb; lea r11, [rip+0x55264]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x000000001687f6: or eax, 0x83b35; lea r11, [rip+0x5527e]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x000000000be606: or eax, 0x841f0f66; add [rax], al; add [rax], al; add [rax-0x7d], cl; ret; 
0x00000000165e70: or eax, 0x864bb; lea r11, [rip+0x57a84]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x00000000165e0f: or eax, 0x8651c; lea r11, [rip+0x57aa5]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x000000000b8f69: or eax, 0x880850f; add [rax], al; ret; 
0x000000000753de: or eax, 0x89480000; fimul st, dword ptr [rcx+rcx*4-0x1a]; mov rdi, r15; call qword ptr [rax+0x38]; 
0x0000000016163a: or eax, 0x8948ffec; ret; 
0x000000000c8f5a: or eax, 0x89490000; ret; 
0x00000000116f02: or eax, 0x894c2300; rol dh, 0x46; inc dword ptr [rax]; ret; 
0x000000000ab158: or eax, 0x894d0000; ret far; 
0x0000000010d8d2: or eax, 0x8b6400; cmp eax, 0x26; je short 0x000000000010d8e0; mov eax, r9d; ret; 
0x00000000118a5f: or eax, 0x8bfff7bc; and al, 0x8; add rsp, 0x28; ret; 
0x00000000077c16: or eax, 0x8d480000; add eax, 0xffffef23; mov r10, rdx; mov dword ptr [rbp-0x51c], 0x1; jmp rax; 
0x0000000010b149: or eax, 0xa715a; movzx eax, al; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x00000000109084: or eax, 0xa8edf; mov edx, ebp; movsxd rax, [rcx+rdx*4]; add rax, rcx; notrack jmp rax; 
0x000000000e8b53: or eax, 0xb466e800; hlt; jmp qword ptr [rsi+0xf]; 
0x000000001176b1: or eax, 0xc0894c00; add rsp, 0x8; ret; 
0x00000000117681: or eax, 0xc0894c00; ret; 
0x000000000d4f10: or eax, 0xc0b60f00; movsxd rax, [rdi+rax*4]; add rax, rdi; notrack jmp rax; 
0x000000000da967: or eax, 0xc2894400; movsxd rax, [rcx+rdx*4]; add rax, rcx; notrack jmp rax; 
0x000000000cf7e2: or eax, 0xc2bc0f48; shr rax, 0x2; ret; 
0x00000000118c29: or eax, 0xc4834800; adc [rbp+0x41], bl; pop rsp; pop r13; ret; 
0x0000000010dbf9: or eax, 0xc76400; add [rax], al; add [rax-0x1], bh; ret; 
0x0000000011317d: or eax, 0xc76400; or [rax], eax; add [rax], al; mov eax, 0xffffffff; ret; 
0x000000001142fd: or eax, 0xc76400; or al, 0x0; add [rax], al; mov eax, 0xffffffff; ret; 
0x0000000010dc6d: or eax, 0xc76400; pop rdi; add [rax], al; add [rax-0x1], bh; ret; 
0x00000000120819: or eax, 0xcb652; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001207e6: or eax, 0xcb685; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001207b6: or eax, 0xcb6b5; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000120789: or eax, 0xcb6e2; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000120306: or eax, 0xcbb65; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001202d9: or eax, 0xcbb92; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001202a6: or eax, 0xcbbc5; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000120276: or eax, 0xcbbf5; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001201a6: or eax, 0xcbcc5; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001200b6: or eax, 0xcbdb5; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000120076: or eax, 0xcbdf5; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000120046: or eax, 0xcbe25; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000120016: or eax, 0xcbe55; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011ffe9: or eax, 0xcbe82; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011ffb9: or eax, 0xcbeb2; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011ff86: or eax, 0xcbee5; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011ff59: or eax, 0xcbf12; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011ff26: or eax, 0xcbf45; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fef6: or eax, 0xcbf75; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fec9: or eax, 0xcbfa2; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fe96: or eax, 0xcbfd5; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fe66: or eax, 0xcc005; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fe36: or eax, 0xcc035; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fe06: or eax, 0xcc065; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fdd9: or eax, 0xcc092; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fda9: or eax, 0xcc0c2; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fd79: or eax, 0xcc0f2; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fd46: or eax, 0xcc125; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fd16: or eax, 0xcc155; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fce9: or eax, 0xcc182; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fcb9: or eax, 0xcc1b2; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fc86: or eax, 0xcc1e5; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fc56: or eax, 0xcc215; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fc26: or eax, 0xcc245; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fbf6: or eax, 0xcc275; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fbc6: or eax, 0xcc2a5; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fb99: or eax, 0xcc2d2; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fb66: or eax, 0xcc305; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fb39: or eax, 0xcc332; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fb06: or eax, 0xcc365; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fad6: or eax, 0xcc395; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011faa6: or eax, 0xcc3c5; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fa76: or eax, 0xcc3f5; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fa46: or eax, 0xcc425; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011fa16: or eax, 0xcc455; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011f9e6: or eax, 0xcc485; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011f9b9: or eax, 0xcc4b2; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011f976: or eax, 0xcc4f5; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011f946: or eax, 0xcc525; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011f426: or eax, 0xcca45; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011f3f9: or eax, 0xcca72; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011f366: or eax, 0xccb05; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011f236: or eax, 0xccc35; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011f206: or eax, 0xccc65; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011f1a6: or eax, 0xcccc5; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011f16f: or eax, 0xcccfc; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011f056: or eax, 0xcce15; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011f026: or eax, 0xcce45; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011cfe9: or eax, 0xcee82; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011cfb6: or eax, 0xceeb5; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011cf89: or eax, 0xceee2; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011cf56: or eax, 0xcef15; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011cf26: or eax, 0xcef45; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011cef9: or eax, 0xcef72; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011cec6: or eax, 0xcefa5; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011ce99: or eax, 0xcefd2; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011ce69: or eax, 0xcf002; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011ce36: or eax, 0xcf035; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011ce06: or eax, 0xcf065; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000011cdd9: or eax, 0xcf092; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000118bd6: or eax, 0xd3295; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000118ba6: or eax, 0xd32c5; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000118b76: or eax, 0xd32f5; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000118b46: or eax, 0xd3325; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000118b19: or eax, 0xd3352; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000118ae6: or eax, 0xd3385; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000118ab6: or eax, 0xd33b5; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001189e6: or eax, 0xd3485; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001189b6: or eax, 0xd34b5; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000118778: or eax, 0xd36f3; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000178624: or eax, 0xd4a8d48; jne 0x0000000000178810; ret; 
0x0000000017ca45: or eax, 0xd4a8d48; jne 0x000000000017cc60; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x000000000da964: or eax, 0xd5873; mov edx, r8d; movsxd rax, [rcx+rdx*4]; add rax, rcx; notrack jmp rax; 
0x000000001156c6: or eax, 0xd67a5; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000115696: or eax, 0xd67d5; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000115666: or eax, 0xd6805; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000115326: or eax, 0xd6b45; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000115266: or eax, 0xd6c05; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001151a6: or eax, 0xd6cc5; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000115176: or eax, 0xd6cf5; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000114f76: or eax, 0xd6ef5; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000114e26: or eax, 0xd7045; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001143e6: or eax, 0xd7a85; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000d8336: or eax, 0xd7ac9; movzx edi, cl; movsxd rdx, [r9+rdi*4]; add rdx, r9; notrack jmp rdx; 
0x00000000114226: or eax, 0xd7c45; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000b7871: or eax, 0xd7f8d48; jne 0x00000000000b7fa0; ret; 
0x000000000b8f65: or eax, 0xd7f8d48; jne 0x00000000000b97f0; ret; 
0x00000000113e26: or eax, 0xd8045; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000112fe9: or eax, 0xd8e82; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010fd76: or eax, 0xdc0f5; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010fd46: or eax, 0xdc125; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010fd16: or eax, 0xdc155; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010fce9: or eax, 0xdc182; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010fcb6: or eax, 0xdc1b5; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010fc86: or eax, 0xdc1e5; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010fc56: or eax, 0xdc215; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010fc29: or eax, 0xdc242; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010fbf6: or eax, 0xdc275; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010f439: or eax, 0xdca32; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010f406: or eax, 0xdca65; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010f3d6: or eax, 0xdca95; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010f3a6: or eax, 0xdcac5; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010ea86: or eax, 0xdd3e5; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010ea56: or eax, 0xdd415; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010e996: or eax, 0xdd4d5; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010e966: or eax, 0xdd505; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010e936: or eax, 0xdd535; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010e906: or eax, 0xdd565; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010e8d6: or eax, 0xdd595; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010e5b6: or eax, 0xdd8b5; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010dcc6: or eax, 0xde1a5; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010dc96: or eax, 0xde1d5; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010dbd6: or eax, 0xde295; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010dba6: or eax, 0xde2c5; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010da76: or eax, 0xde3f5; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010da46: or eax, 0xde425; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010d416: or eax, 0xdea55; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000138113: or eax, 0xe8c78948; jbe short 0x000000000013811d; add [rcx+rcx*4-0x19], cl; call rbp; 
0x00000000138403: or eax, 0xe8df8948; push rsp; jae short 0x000000000013840d; add [rcx+rcx*4-0x19], cl; call rbx; 
0x000000001027e6: or eax, 0xe9685; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001027b6: or eax, 0xe96b5; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000102786: or eax, 0xe96e5; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000102756: or eax, 0xe9715; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000102726: or eax, 0xe9745; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001026f6: or eax, 0xe9775; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001026c6: or eax, 0xe97a5; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000102696: or eax, 0xe97d5; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000776c8: or eax, 0xeb830000; add [rax-0x50743], eax; jmp qword ptr [rax]; 
0x000000000b8f90: or eax, 0xee88349; lea rdi, [rdi+0xe]; jne 0x00000000000b97f0; ret; 
0x0000000016d8a9: or eax, 0xef00ff2; movdqu [rdi+0xd], xmm0; movdqu [rdi], xmm1; ret; 
0x00000000116d7c: or eax, 0xf0e78300; add edi, 0x26; mov fs:[rax], edi; mov eax, 0xffffffff; ret; 
0x000000000d83b3: or eax, 0xf1b60f00; movsxd rdx, [rdi+rsi*4]; add rdx, rdi; notrack jmp rdx; 
0x0000000016d8b2: or eax, 0xf7f0ff3; ret; 
0x000000000d8339: or eax, 0xf9b60f00; movsxd rdx, [r9+rdi*4]; add rdx, r9; notrack jmp rdx; 
0x000000001173c9: or eax, 0xff854800; jne short 0x00000000001173e0; mov eax, 0x1; ret; 
0x00000000041ba8: or eax, 0xffff8000; inc eax; shr eax, 0x1f; ret; 
0x00000000043421: or eax, 0xffffffff; ret; 
0x0000000014827d: or eax, [rax]; add [rax], al; ret; 
0x000000001189a5: or eax, [rax]; add [rax], al; syscall; 
0x00000000048142: or eax, [rax]; add [rax], eax; ret; 
0x000000000ab2d8: or eax, [rax]; add [rbp-0x77], cl; ret far; 
0x000000001955d9: or eax, [rax]; add [rbx-0x70f08b06], al; ret far; 
0x00000000131671: or eax, [rax]; add [rcx+rax*2-0x77], esp; sbb [rcx+rcx*4-0x40], ecx; pop rbx; ret; 
0x00000000137a2d: or eax, [rax]; add [rcx+rcx*4-0x40], eax; pop rbp; ret; 
0x0000000007dd0e: or eax, [rax]; add [rcx-0x77], cl; ret; 
0x0000000007f50e: or eax, [rax]; add [rcx-0x7f], al; clc; fdivp st(7), st; call far fword ptr [rdi]; 
0x0000000012feb9: or eax, [rax]; add rax, fs:[0x0]; ret; 
0x00000000138557: or eax, [rax]; add rsp, 0x8; ret; 
0x00000000137c6e: or eax, [rax]; call rax; 
0x0000000012f445: or eax, [rax]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010115a: or eax, [rax]; mov edi, edi; movsxd rax, [rdx+rdi*4]; add rax, rdx; notrack jmp rax; 
0x000000000f98d3: or eax, [rax]; mov rcx, rax; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000101090: or eax, [rax]; movsxd rax, [rdx+rdi*4]; add rax, rdx; notrack jmp rax; 
0x000000000fa106: or eax, [rax]; movsxd rax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x000000000fcf77: or eax, [rax]; movzx esi, sil; movsxd rax, [rdx+rsi*4]; add rax, rdx; notrack jmp rax; 
0x0000000012e7f5: or eax, [rax]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000013858f: or eax, [rax]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000013d713: or eax, [rax]; syscall; 
0x000000001300c8: or eax, [rax]; syscall; 
0x0000000002fdd3: or eax, [rbx+0x438901e8]; or [rbx+0x1974fdf8], al; pop rbx; ret; 
0x0000000012da61: or eax, [rbx-0x72b7fffd]; adc eax, 0x3d894; cmovne rax, rdx; ret; 
0x0000000010fcd8: or eax, [rcx]; add [rax], al; syscall; 
0x00000000190d43: or eax, ebx; nop [rax+rax]; lea rax, [rdi+0xc]; ret; 
0x00000000042116: or eax, ecx; movq xmm0, rax; mulsd xmm0, [rip+0x17abcb]; ret; 
0x0000000004228d: or eax, ecx; sar eax, 0x1f; not eax; and eax, edx; ret; 
0x00000000041ecb: or eax, ecx; sar rax, 0x3f; not eax; and eax, edx; ret; 
0x0000000009a08d: or eax, edi; add eax, 0x154de0; add [rax], al; add [rax], al; ret; 
0x00000000047360: or eax, edi; ret; 
0x000000000b182e: or eax, edx; bsf rax, rax; lea rax, [rdi+rax]; ret; 
0x00000000041bd7: or eax, edx; mov [rsp+0x10], eax; fld st, tbyte ptr [rsp+0x8]; ret; 
0x0000000004219b: or eax, edx; movq xmm0, rax; ret; 
0x0000000005297b: or eax, edx; ret; 
0x000000000425d6: or eax, edx; sar rax, 0x3f; not eax; and eax, ecx; ret; 
0x0000000012fb54: or eax, esi; bswap eax; ret; 
0x0000000004247c: or eax, esi; movd xmm0, eax; mulss xmm0, [rip+0x17af06]; ret; 
0x00000000057cd0: or eax, esi; movq xmm0, rax; ret; 
0x0000000011ef36: or eax, esi; ret; 
0x0000000011f8be: or eax, esi; wrpkru; xor eax, eax; ret; 
0x0000000014178a: or ebp, esi; jmp qword ptr [rbp+rax*2-0x77]; 
0x0000000011f2eb: or ebx, 0xd8f7000c; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000190d23: or ebx, eax; nop [rax+rax]; lea rax, [rdi+0xa]; ret; 
0x0000000016da73: or ebx, esi; movq [rdi], mm1; ret; 
0x000000000ffaca: or ecx, [rax+0x39]; ret far; 
0x0000000011d034: or ecx, [rax+0x39]; xlat [rbx]; jne short 0x000000000011d028; mov rax, [rax+0x8]; ret; 
0x000000000b782f: or ecx, [rax-0x73]; jg short 0x00000000000b783f; jne 0x00000000000b7fa0; ret; 
0x000000000b8f23: or ecx, [rax-0x73]; jg short 0x00000000000b8f33; jne 0x00000000000b97f0; ret; 
0x000000000e114b: or ecx, [rax-0x7d]; ret; 
0x00000000117677: or ecx, [rax-0x7d]; ror byte ptr [rax], 0x48; mov [rip+0xd810d], eax; mov rax, r8; ret; 
0x00000000093ead: or ecx, [rax]; pop rbx; ret; 
0x000000000cf044: or ecx, [rbx+0x463b2847]; sub [rbp+0x63], dh; ret; 
0x000000000cf094: or ecx, [rbx+0x463b3847]; cmp [rbp+0x13], dh; ret; 
0x0000000015b30c: or ecx, [rcx]; add [rbp+0x31], al; jmp qword ptr [rdi+rax*8]; 
0x00000000141a21: or ecx, [rcx]; out dx, al; jmp qword ptr [rbp+rax*2-0x77]; 
0x000000000b7833: or ecx, [rdi]; test [rsi+0x7], esp; add [rax], al; ret; 
0x00000000042072: or ecx, eax; movq xmm0, rcx; ret; 
0x000000000919e6: or ecx, edi; jmp qword ptr [rsi+0xf]; 
0x0000000010ce1d: or edi, 0xffffffff; mov esi, eax; mov eax, 0x75; syscall; 
0x0000000010ce46: or edi, 0xffffffff; mov esi, eax; mov eax, 0x77; syscall; 
0x0000000013bcfc: or edi, [rdx+0x104]; cmove eax, edx; ret; 
0x000000000e50ff: or edi, [rdx+0x40]; mov eax, 0x20; cmove rax, rdx; ret; 
0x000000000e4fac: or edi, [rdx+0xfde8]; mov eax, 0x7f; cmove rax, rdx; ret; 
0x00000000165e22: or edi, [rsi]; jmp r9; 
0x000000000b6d40: or edi, [rsi]; jmp rcx; 
0x000000000fed94: or edi, edi; inc dword ptr [rax+0x3108384b]; rcr byte ptr [rbx+0x5d], 0x41; pop rsp; ret; 
0x00000000192af6: or edi, esi; fadd st, st(3); nop [rax+rax]; ret; 
0x000000000de6c4: or edi, esp; jmp qword ptr [rsi+0xf]; 
0x00000000118960: or edx, 0x40; mov eax, ecx; syscall; 
0x0000000010ce1a: or edx, 0xffffffff; or edi, 0xffffffff; mov esi, eax; mov eax, 0x75; syscall; 
0x0000000010ce43: or edx, 0xffffffff; or edi, 0xffffffff; mov esi, eax; mov eax, 0x77; syscall; 
0x000000000a0671: or edx, [rdi+0xc]; add [rax-0x73], cl; adc eax, 0xcac94; cmovne rax, rdx; ret; 
0x00000000041b93: or edx, eax; mov eax, 0xfffe; sub eax, edx; sar eax, 0x10; ret; 
0x00000000042619: or edx, eax; mov rax, 0x7fff000000000000; sub rax, rdx; shr rax, 0x3f; ret; 
0x000000000e50fd: or edx, eax; or edi, [rdx+0x40]; mov eax, 0x20; cmove rax, rdx; ret; 
0x000000000e4faa: or edx, eax; or edi, [rdx+0xfde8]; mov eax, 0x7f; cmove rax, rdx; ret; 
0x000000000b1d6f: or edx, ecx; bsf rdx, rdx; add rax, rdx; sub rax, rdi; ret; 
0x0000000005b14a: or edx, ecx; mov [rsp-0x10], rdx; movdqa xmm0, [rsp-0x18]; pinsrw xmm0, eax, 0x6; ret; 
0x00000000041d39: or edx, esi; je 0x0000000000041c88; ret; 
0x00000000094581: or esi, 0x15; add [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; jmp rax; 
0x000000000423ef: or esi, eax; movd xmm0, esi; ret; 
0x00000000057c89: or esi, eax; or esi, edx; movd xmm0, esi; ret; 
0x00000000113722: or esi, eax; xor eax, eax; mov [rdi+0x8], esi; ret; 
0x00000000141a22: or esi, ebp; jmp qword ptr [rbp+rax*2-0x77]; 
0x00000000141977: or esi, ebp; jmp qword ptr [rsp+rax*2-0x77]; 
0x000000000bbfc7: or esi, ebx; movq [rdi+rdx-0x10], mm0; movdqu [rdi], xmm0; ret; 
0x0000000016d993: or esi, ebx; movq [rdi], mm1; ret; 
0x0000000010e063: or esi, ebx; or eax, 0x64d8f700; mov [rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000009f8b5: or esi, edi; adc al, 0x0; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000052a83: or esi, edi; std; dec dword ptr [rax-0x77]; ret; 
0x00000000057cf4: or esi, edx; mov [rsp-0x18], rax; mov [rsp-0x10], si; fld st, tbyte ptr [rsp-0x18]; ret; 
0x00000000057c8b: or esi, edx; movd xmm0, esi; ret; 
0x00000000057cc9: or esi, edx; shl rsi, 0x20; or rax, rsi; movq xmm0, rax; ret; 
0x0000000009f163: or esp, 0x40000000; lea rax, [rip+0x12330]; lea rdx, [rip+0xf18e9]; cmovne rax, rdx; ret; 
0x00000000082aa8: or esp, [rax]; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000008e691: or esp, [rax]; mov eax, 0xffffffff; pop rbx; ret; 
0x00000000165e72: or fs:[rax], al; lea r11, [rip+0x57a84]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x00000000165e11: or gs:[rax], al; lea r11, [rip+0x57aa5]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x0000000011895f: or r10d, 0x40; mov eax, ecx; syscall; 
0x000000000309f0: or r11b, [rax+rax]; lea rdi, [rip+0x1bcf85]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000016dae2: or r11b, r14b; movq [rdi], mm1; ret; 
0x00000000190d12: or r11b, r8b; nop [rax+rax]; lea rax, [rdi+0x9]; ret; 
0x0000000016da72: or r11d, r14d; movq [rdi], mm1; ret; 
0x00000000190d22: or r11d, r8d; nop [rax+rax]; lea rax, [rdi+0xa]; ret; 
0x0000000017df38: or r14b, al; movzx eax, byte ptr [rdi+rcx]; movzx edx, byte ptr [rsi+rcx]; sub eax, edx; ret; 
0x0000000016da02: or r14b, r11b; movq [rdi], mm1; ret; 
0x0000000016d992: or r14d, r11d; movq [rdi], mm1; ret; 
0x00000000153a3b: or r15b, r8b; and al, 0x30; add eax, 0xf000000; adc [rsp+0x18], eax; call qword ptr [rax+0x18]; 
0x0000000014c5f3: or r8b, [r8]; syscall; 
0x0000000014c6ab: or r8b, [rax]; syscall; 
0x00000000190d32: or r8b, r11b; nop [rax+rax]; lea rax, [rdi+0xb]; ret; 
0x000000000fcf76: or r8d, [rax]; movzx esi, sil; movsxd rax, [rdx+rsi*4]; add rax, rdx; notrack jmp rax; 
0x00000000190d42: or r8d, r11d; nop [rax+rax]; lea rax, [rdi+0xc]; ret; 
0x0000000007f202: or r9b, r13b; ret; 
0x000000000919e5: or r9d, r15d; jmp qword ptr [rsi+0xf]; 
0x00000000178627: or rax, 0x1e1850f; add [rax], al; ret; 
0x0000000017ca48: or rax, 0x210850f; add [rax], al; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x000000000cb1af: or rax, 0xffffffff80000000; mov [rdx+0x4], r8d; mov [rdx], eax; xor eax, eax; ret; 
0x00000000118c28: or rax, 0xffffffffc4834800; adc [rbp+0x41], bl; pop rsp; pop r13; ret; 
0x00000000043420: or rax, 0xffffffffffffffff; ret; 
0x0000000017f047: or rax, [r8]; add [rbp-0x77], cl; ret far; 
0x00000000042115: or rax, rcx; movq xmm0, rax; mulsd xmm0, [rip+0x17abcb]; ret; 
0x00000000041eca: or rax, rcx; sar rax, 0x3f; not eax; and eax, edx; ret; 
0x0000000004735f: or rax, rdi; ret; 
0x000000000b182d: or rax, rdx; bsf rax, rax; lea rax, [rdi+rax]; ret; 
0x0000000004219a: or rax, rdx; movq xmm0, rax; ret; 
0x000000000425d5: or rax, rdx; sar rax, 0x3f; not eax; and eax, ecx; ret; 
0x00000000057ccf: or rax, rsi; movq xmm0, rax; ret; 
0x0000000011ef35: or rax, rsi; ret; 
0x00000000042071: or rcx, rax; movq xmm0, rcx; ret; 
0x00000000042618: or rdx, rax; mov rax, 0x7fff000000000000; sub rax, rdx; shr rax, 0x3f; ret; 
0x000000000b1d6e: or rdx, rcx; bsf rdx, rdx; add rax, rdx; sub rax, rdi; ret; 
0x0000000005b149: or rdx, rcx; mov [rsp-0x10], rdx; movdqa xmm0, [rsp-0x18]; pinsrw xmm0, eax, 0x6; ret; 
0x00000000041f34: orpd xmm0, xmm1; ret; 
0x000000000420b6: orpd xmm1, [rip+0x17a642]; mulsd xmm0, xmm1; ret; 
0x00000000042090: orpd xmm1, [rip+0x17a678]; mulsd xmm0, xmm1; ret; 
0x00000000042430: orps xmm0, [rip+0x17a2e9]; mulss xmm0, [rip+0x17af49]; ret; 
0x0000000004240b: orps xmm0, [rip+0x17a32e]; mulss xmm0, [rip+0x17af72]; ret; 
0x00000000041f35: orps xmm0, xmm1; ret; 
0x000000000422f2: orps xmm0, xmm3; ret; 
0x000000000420b7: orps xmm1, [rip+0x17a642]; mulsd xmm0, xmm1; ret; 
0x00000000042091: orps xmm1, [rip+0x17a678]; mulsd xmm0, xmm1; ret; 
0x000000000df1a1: out 0x0, al; adc [rax], eax; add [rbx+rcx*4+0x3d], ecx; ret; 
0x00000000184a06: out 0x0, al; add [rax], al; add rax, rdi; vzeroupper; ret; 
0x0000000002426e: out 0x0, al; add [rax], al; add rsp, 0x98; ret; 
0x000000000dd1de: out 0x0, al; add [rax], al; syscall; 
0x000000001476d5: out 0x0, al; add [rbp+0x489374c0], al; mov eax, [rbp+0x8]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x000000000d4d04: out 0x0, al; and [rax-0x80], al; call qword ptr [rax]; 
0x000000001473e8: out 0x0, eax; add [rbp+rcx*4+0x4c], cl; and al, 0x20; call qword ptr [rax]; 
0x00000000140346: out 0x1f, al; out dx, al; jmp qword ptr [rsi+0xf]; 
0x0000000018ef7d: out 0x2, al; add [rcx+0x63], cl; or al, 0x93; add rcx, r11; notrack jmp rcx; 
0x0000000009f78e: out 0x2, al; lea rax, [rip+0xaee9]; lea rdx, [rip+0xc4e62]; cmovne rax, rdx; ret; 
0x0000000018eee8: out 0x2, eax; add [rcx+0x63], cl; or al, 0x93; add rcx, r11; notrack jmp rcx; 
0x00000000057ccd: out 0x20, al; or rax, rsi; movq xmm0, rax; ret; 
0x00000000197178: out 0x20, eax; je short 0x000000000019718c; movss xmm0, [rip+0x261fc]; divss xmm0, [rip+0x27508]; ret; 
0x0000000004735d: out 0x20, eax; or rax, rdi; ret; 
0x0000000016a055: out 0x38, eax; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000a88c1: out 0x39, al; enter 0xe274, 0x4c; mov eax, eax; ret; 
0x0000000019419b: out 0x3e, eax; jmp rdi; 
0x0000000013c794: out 0x4, al; lea r8, [rdi+rsi+0x8]; mov rax, r8; ret; 
0x00000000149463: out 0x41, al; call qword ptr [rdi+0x40]; 
0x00000000084523: out 0x41, al; call qword ptr [rsi+0x38]; 
0x0000000009b663: out 0x41, al; pop rsp; pop r13; jmp rax; 
0x00000000094634: out 0x41, eax; and ebx, 0xffffffbb; cmp r11d, 0xa; je short 0x0000000000094640; ret; 
0x00000000155a98: out 0x41, eax; call rbp; 
0x000000000e232b: out 0x44, al; mov edi, ebp; call qword ptr [rsp+0x30]; 
0x00000000078133: out 0x44, eax; mov [rbp-0x4f8], ecx; mov [rbp-0x4f0], r10; call qword ptr [rax+0x38]; 
0x000000000777cb: out 0x44, eax; mov [rbp-0x500], ecx; mov [rbp-0x4f0], r10; call qword ptr [rbx+0x38]; 
0x00000000121642: out 0x44, eax; mov eax, esi; syscall; 
0x00000000041269: out 0x45, al; mov ebx, [rax+rax*4+0x8]; add r11, [rdi+0x20]; mov rax, r11; ret; 
0x0000000009a088: out 0x45, al; test al, al; jne short 0x000000000009a099; mov dword ptr [rip+0x154de0], 0x0; ret; 
0x000000000bda9a: out 0x45, eax; xor eax, eax; lea r9, [rsp+0x28]; call rbx; 
0x0000000015fdd1: out 0x45, eax; xor ebp, ebp; lea rcx, [r10+0x398]; lea r8, [rsp+0x30]; call qword ptr [rax+0x1e0]; 
0x0000000012b947: out 0x48, al; add esp, 0x8; pop rbx; pop rbp; ret; 
0x0000000010cf93: out 0x48, al; lea edi, [rip+0xa7622]; mov rdx, [rax+0xb0]; call qword ptr [rax+0x88]; 
0x00000000057ba4: out 0x48, al; mov [rdi], esi; mov [rdx], eax; mov eax, 0x1; ret; 
0x00000000149055: out 0x48, al; mov [rsp], eax; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x0000000014d1d4: out 0x48, al; mov edi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x8]; 
0x0000000008e3a8: out 0x48, al; mov edi, ebp; call qword ptr [r13+0x38]; 
0x0000000008f980: out 0x48, al; mov edi, ebp; call qword ptr [r13+0x90]; 
0x0000000008e763: out 0x48, al; mov edi, ebp; call qword ptr [r15+0x40]; 
0x0000000008eb83: out 0x48, al; mov edi, ebp; call qword ptr [r15+0x80]; 
0x0000000008e6fa: out 0x48, al; mov edi, ebp; call qword ptr [r15+0x90]; 
0x0000000008f7d1: out 0x48, al; mov edi, ebp; call qword ptr [rax+0x78]; 
0x000000001490e8: out 0x48, al; mov edi, ebp; call qword ptr [rax]; 
0x00000000081cf9: out 0x48, al; mov edi, ebp; call qword ptr [rbx+0x90]; 
0x0000000009d12f: out 0x48, al; mov edi, ebp; call rax; 
0x0000000010d3d4: out 0x48, al; mov edi, ebp; mov eax, 0x135; syscall; 
0x00000000090979: out 0x48, al; mov edi, ebx; call qword ptr [r14+0x78]; 
0x00000000157683: out 0x48, al; mov edi, ebx; call rcx; 
0x00000000144d60: out 0x48, al; mov edi, ebx; mov rcx, r13; call r10; 
0x00000000042e07: out 0x48, al; ror eax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000001215ae: out 0x48, eax; mov [rbp-0x830], eax; mov eax, r14d; syscall; 
0x000000000bde71: out 0x48, eax; mov esi, [rsp+0x10]; call rbx; 
0x000000000bd8f1: out 0x48, eax; mov esi, [rsp+0x18]; call rbx; 
0x00000000153eca: out 0x48, eax; mov esi, ebp; call qword ptr [rax+0x18]; 
0x00000000096812: out 0x48, eax; neg edi; call qword ptr [r13]; 
0x00000000035395: out 0x48, eax; ror eax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000009c2a0: out 0x48, eax; sub eax, 0x10; ret; 
0x0000000005edd6: out 0x48, eax; sub esi, eax; mov rax, [rip+0x18e9cf]; mov rcx, r14; call qword ptr [rax+r8*8]; 
0x00000000190802: out 0x49, eax; jmp qword ptr [rdx-0x2f]; 
0x00000000167a46: out 0x4c, al; mov [rdi-0x12], ebx; mov [rdi-0xa], rcx; mov [rdi-0x4], edx; ret; 
0x000000000e7302: out 0x4c, al; mov edi, eax; call qword ptr [r15+0x40]; 
0x0000000007bbc9: out 0x4c, al; mov edi, ebp; call qword ptr [r15+0x38]; 
0x0000000007a949: out 0x4c, al; mov edi, ebp; call qword ptr [rax+0x38]; 
0x000000000e1f3b: out 0x4c, al; mov edi, ebp; call qword ptr [rsp+0x30]; 
0x000000000458a1: out 0x4c, al; mov edi, ebp; call rax; 
0x00000000044875: out 0x4c, al; mov edi, ebp; call rbx; 
0x00000000074cb1: out 0x4c, al; mov edi, edi; call qword ptr [rax+0x38]; 
0x00000000075985: out 0x4c, al; mov edi, edi; call qword ptr [rcx+0x38]; 
0x0000000011baaa: out 0x4c, al; mov edi, edi; call r14; 
0x000000000872d8: out 0x4c, al; mov edi, esi; call qword ptr [rax+0x18]; 
0x0000000011bb3f: out 0x4c, al; mov edi, esi; call r13; 
0x00000000044bb0: out 0x4c, al; mov edi, esi; call rbp; 
0x0000000015ff33: out 0x4c, eax; lea eax, [rsp+0x30]; call qword ptr [rax+0x1e0]; 
0x000000000bd79b: out 0x4c, eax; lea ecx, [rsp+0x30]; call rbx; 
0x0000000007d856: out 0x4c, eax; mov [rbp-0x4e0], ecx; call qword ptr [r8+0x38]; 
0x0000000007deab: out 0x4c, eax; mov [rbp-0x4e0], ecx; call qword ptr [rbx+0x38]; 
0x00000000077121: out 0x4c, eax; mov [rbp-0x4e0], edx; call qword ptr [rcx+0x38]; 
0x00000000076f3a: out 0x4c, eax; mov [rbp-0x4f0], edx; call qword ptr [rax+0x38]; 
0x0000000007eb37: out 0x4c, eax; mov [rbp-0x508], ecx; mov [rbp-0x500], r10; call qword ptr [rax+0x38]; 
0x0000000007839b: out 0x4c, eax; mov [rbp-0x510], edx; mov [rbp-0x508], r11; call qword ptr [rax+0x38]; 
0x0000000005d41e: out 0x4c, eax; mov [rbp-0xe8], eax; call rax; 
0x00000000167876: out 0x4c, eax; mov [rdi-0x11], ebx; mov [rdi-0x9], r8; mov [rdi-0x4], edx; ret; 
0x00000000167972: out 0x4c, eax; mov [rdi-0x11], ebx; mov [rdi-0x9], rcx; mov [rdi-0x1], dl; ret; 
0x000000001678be: out 0x4c, eax; mov [rdi-0x11], ebx; mov [rdi-0x9], rcx; mov [rdi-0x4], edx; ret; 
0x0000000007d667: out 0x4c, eax; sub edx, ecx; sar rdx, 0x2; mov [rbp-0x4d0], rdx; call qword ptr [rax+0x38]; 
0x00000000076998: out 0x4d, eax; sub edi, ebp; mov rdx, r15; call qword ptr [rax+0x38]; 
0x0000000007700c: out 0x4d, eax; sub edi, edx; mov rdx, r15; call qword ptr [rax+0x38]; 
0x000000000e312a: out 0x57, eax; ret; 
0x00000000087241: out 0x5b, al; mov rdi, rbp; pop rbp; pop r12; jmp rax; 
0x00000000197296: out 0x5b, al; ret; 
0x000000000dd848: out 0x5b, eax; pop rbp; pop r12; ret; 
0x00000000166e95: out 0x68, eax; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000160277: out 0x6a, eax; add al, [rbp+0x31]; in eax, dx; call qword ptr [rax+0x1e0]; 
0x0000000014604b: out 0x7, al; movsxd rax, [rcx+rsi*4]; shr rdx, 0x3; add rax, rcx; notrack jmp rax; 
0x0000000003388d: out 0x74, eax; or ch, al; ret far; 
0x0000000012880e: out 0x8, al; add al, ch; stosb [rdi]; mov bh, 0xf0; jmp qword ptr [rsi+0x2e]; 
0x000000000342f7: out 0x80, eax; sete al; ret; 
0x00000000074603: out 0x83, al; ret; 
0x000000000dd11a: out 0x89, al; out dx, eax; mov eax, 0xe4; syscall; 
0x000000000dd09a: out 0x89, al; out dx, eax; mov eax, 0xe5; syscall; 
0x000000000c9f8d: out 0x89, al; ret; 
0x000000000f3955: out 0x89, eax; ret; 
0x00000000130285: out 0x8b, eax; push rsp; and al, 0x38; call qword ptr [rsp+0x60]; 
0x00000000194b66: out 0x9a, al; add al, [rax]; movsxd rax, [rdx+rax*4]; add rdx, rax; notrack jmp rdx; 
0x00000000033995: out 0x9f, eax; sbb eax, [rax]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000014231b: out 0xa, al; add [rcx], al; pop rbp; ret; 
0x00000000142383: out 0xa, al; add [rdi], cl; add eax, 0x31e8c35d; idiv edi; call qword ptr [rax-0x5e1f00d]; 
0x00000000144b75: out 0xab, eax; add [rax], eax; xor edi, edi; call qword ptr [rsp+0x20]; 
0x000000001319cb: out 0xb, al; add [rdi], cl; add eax, 0xffff7ae9; jmp qword ptr [rsi+0x2e]; 
0x00000000131836: out 0xb, eax; add [rcx], al; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x000000001214bf: out 0xb8, eax; adc al, 0x0; add [rax], al; syscall; 
0x00000000054eb8: out 0xbf, al; add [rax], esi; add [rax], al; mov eax, 0x9e; syscall; 
0x00000000172bdd: out 0xc4, eax; add eax, [rax]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000155b9d: out 0xc7, eax; add al, 0x24; add al, [rax]; add [rax], al; call r8; 
0x00000000121329: out 0xc7, eax; test eax, esi; idiv edi; jmp qword ptr [rdi+0x6d]; 
0x00000000170a5d: out 0xe5, eax; add eax, [rax]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000114cbf: out 0xe8, al; ret far; 
0x00000000119237: out 0xe8, eax; adc ecx, [rsp+rsi*8-0x76b3a701]; loopne 0x000000000011929c; pop r12; ret; 
0x0000000014860b: out 0xe8, eax; call far fword ptr [rbp+rbp*8+0x438948ff]; 
0x000000000258e3: out 0xe8, eax; ja short 0x0000000000025885; adc eax, [rax]; mov rdi, rbx; call r12; 
0x00000000025a12: out 0xe8, eax; popfq; adc eax, [rax]; mov rdi, rbx; call r12; 
0x00000000086fef: out 0xe8, eax; ret far; 
0x000000000d6147: out 0xe8, eax; ret; 
0x00000000134bff: out 0xe8, eax; shl r10b, cl; call far fword ptr [rax+0x4c]; 
0x0000000015be00: out 0xe8, eax; sub ch, [rdx]; sti; dec dword ptr [rbx-0x17b7b]; jmp qword ptr [rcx+rcx*4+0x3]; 
0x000000001120f5: out 0xe8, eax; xor eax, 0x31fff102; rcr byte ptr [rbx+0x5d], 0x41; pop rsp; ret; 
0x00000000053879: out 0xe9, al; psubd mm7, mm7; call qword ptr [rax-0x776e74b7]; 
0x00000000048181: out 0xec, al; fiadd st, word ptr [rip+0x48000000]; mov [rsi+0x10], eax; xor eax, eax; ret; 
0x000000000bc124: out 0xf0, al; mov edx, 0x0; pop rbx; cmove rax, rdx; ret; 
0x00000000116d7f: out 0xf0, eax; add edi, 0x26; mov fs:[rax], edi; mov eax, 0xffffffff; ret; 
0x0000000016d279: out 0xf3, al; movq [rdi-0x10], mm1; ret; 
0x0000000016d2f9: out 0xf3, eax; movq [rdi-0x10], mm1; ret; 
0x00000000093de3: out 0xf8, eax; dec dword ptr [rax-0x77]; ret; 
0x0000000012f52b: out 0xf8, eax; jmp qword ptr [rsi-0x70]; 
0x00000000140bda: out 0xfb, al; or al, [rax]; test eax, eax; je short 0x0000000000140be8; ret; 
0x000000001483bc: out 0xfc, al; call qword ptr [rax+0x30]; 
0x000000001512fc: out 0xfd, eax; call qword ptr [rax-0x5e1f00d]; 
0x0000000009ebe1: out 0xfe, eax; jmp qword ptr [rsi+0x2e]; 
0x00000000152c61: out 0xff, al; call far fword ptr [rsi+0x5f]; 
0x0000000004e667: out 0xff, al; jmp qword ptr [rsi+0xf]; 
0x0000000005e9f4: out 0xff, eax; jmp qword ptr [rsi+0xf]; 
0x0000000005ddab: out 0xff, eax; jmp qword ptr [rsi-0x70]; 
0x0000000007e856: out 0xff, eax; push rax; cmp [rax+0x39], cl; ret; 
0x0000000005fd29: out dx, al; adc [rcx+0x39], cl; ret; 
0x0000000013c1a2: out dx, al; add [rax-0x78], eax; ja short 0x000000000013c1a9; ret; 
0x0000000013c19a: out dx, al; add edi, [rax+0x2]; sub esi, 0x1; mov [rdi+0x1], sil; ret; 
0x00000000146a8b: out dx, al; call qword ptr [rax+0x10]; 
0x00000000153ecd: out dx, al; call qword ptr [rax+0x18]; 
0x0000000014fa5c: out dx, al; call qword ptr [rax-0x5e1f00d]; 
0x00000000149b3b: out dx, al; call qword ptr [rbx+0x40]; 
0x0000000009e682: out dx, al; call rax; 
0x000000000d096d: out dx, al; call rbp; 
0x0000000012ec2e: out dx, al; cmp edi, ebp; jmp qword ptr [rsi+0xf]; 
0x00000000140f4e: out dx, al; dec dword ptr [rax+0x39]; ret; 
0x00000000138550: out dx, al; dec dword ptr [rax-0x77]; add eax, 0xb5387; add rsp, 0x8; ret; 
0x00000000162059: out dx, al; dec dword ptr [rax-0x77]; ret; 
0x000000001383b1: out dx, al; dec dword ptr [rax-0x77]; ret; 
0x00000000139e4b: out dx, al; dec dword ptr [rax-0x7d]; ret; 
0x0000000014e45e: out dx, al; fwait; out dx, eax; jmp qword ptr [rbx+rcx*4+0x4]; 
0x000000000e747e: out dx, al; idiv edi; jmp qword ptr [rsi+0xf]; 
0x0000000014153b: out dx, al; jmp qword ptr [rbp+rax*2-0x77]; 
0x00000000138fdc: out dx, al; jmp qword ptr [rbx+rcx*4+0x4]; 
0x00000000134eb4: out dx, al; jmp qword ptr [rsi+0x2e]; 
0x0000000013ee4d: out dx, al; jmp qword ptr [rsi+0xf]; 
0x00000000139e6c: out dx, al; jmp qword ptr [rsi-0x70]; 
0x00000000141978: out dx, al; jmp qword ptr [rsp+rax*2-0x77]; 
0x000000000e3128: out dx, al; jmp rdi; 
0x0000000016d67f: out dx, al; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x12], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000011f8fd: out dx, al; lea ecx, [rdi+rdi]; shr eax, cl; and eax, 0x3; ret; 
0x00000000167a4a: out dx, al; mov [rdi-0xa], rcx; mov [rdi-0x4], edx; ret; 
0x00000000127e89: out dx, al; mov [rsp+0x10], rax; mov rdx, rax; call qword ptr [r12+0x28]; 
0x0000000004429c: out dx, al; mov [rsp+0x14], eax; mov edi, r12d; mov eax, 0x81; syscall; 
0x00000000142fd3: out dx, al; mov [rsp+0x14], eax; mov rdx, r12; mov eax, 0x81; syscall; 
0x000000000dd1dc: out dx, al; mov eax, 0xe6; syscall; 
0x000000000dd2ad: out dx, al; mov edi, 0x1; mov eax, 0xe6; syscall; 
0x00000000083e04: out dx, al; mov edi, 0x1; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000010dd5e: out dx, al; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x00000000134150: out dx, al; mov edi, r12d; call qword ptr [rsp+0x40]; 
0x000000001215ab: out dx, al; mov edi, r12d; mov [rbp-0x830], rax; mov eax, r14d; syscall; 
0x000000000e0085: out dx, al; mov edi, r14d; call qword ptr [rsp+0x48]; 
0x000000000dd341: out dx, al; mov r8d, eax; mov edi, 0x1; mov eax, 0xe6; syscall; 
0x0000000010ddd4: out dx, al; mov r8d, eax; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x0000000011d039: out dx, al; mov rax, [rax+0x8]; ret; 
0x00000000146a99: out dx, al; mov rax, [rdi+0x38]; call qword ptr [rax+0x10]; 
0x0000000014694b: out dx, al; mov rax, [rdi+0x38]; call qword ptr [rax+0x8]; 
0x0000000004590f: out dx, al; mov rax, [rsp]; mov r13, r15; add r15, r12; call rax; 
0x0000000014d3b3: out dx, al; mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x10]; 
0x00000000133b80: out dx, al; mov rdi, r12; call qword ptr [rsp+0x40]; 
0x00000000045719: out dx, al; mov rdi, r12; call rax; 
0x00000000076995: out dx, al; mov rdi, r12; sub r15, r13; mov rdx, r15; call qword ptr [rax+0x38]; 
0x00000000131236: out dx, al; mov rdi, r13; call qword ptr [rsp+0x40]; 
0x000000000e0525: out dx, al; mov rdi, r14; call qword ptr [rsp+0x48]; 
0x00000000044952: out dx, al; mov rdi, r14; mov rdx, r12; call rbp; 
0x00000000083bf7: out dx, al; mov rdi, r15; call qword ptr [r14+0x38]; 
0x0000000008947b: out dx, al; mov rdi, r15; call qword ptr [r14+0x80]; 
0x00000000083c5c: out dx, al; mov rdi, r15; call qword ptr [rbp+0x38]; 
0x00000000085b5b: out dx, al; mov rdi, rbp; call qword ptr [r14+0x38]; 
0x00000000146936: out dx, al; mov rdi, rbp; call qword ptr [rax+0x8]; 
0x000000001569ad: out dx, al; mov rdi, rbp; xor eax, eax; call r14; 
0x000000001569c7: out dx, al; mov rdi, rbp; xor eax, eax; call rcx; 
0x0000000008f4fc: out dx, al; mov rdi, rbx; call qword ptr [r12+0x80]; 
0x00000000082db3: out dx, al; mov rdi, rbx; call qword ptr [r13+0x38]; 
0x00000000084acc: out dx, al; mov rdi, rbx; call qword ptr [r13+0x48]; 
0x00000000084c3b: out dx, al; mov rdi, rbx; call qword ptr [r13+0x58]; 
0x00000000085a78: out dx, al; mov rdi, rbx; call qword ptr [r14+0x38]; 
0x00000000084821: out dx, al; mov rdi, rbx; call qword ptr [r14+0x48]; 
0x00000000084c65: out dx, al; mov rdi, rbx; call qword ptr [rax+0x58]; 
0x0000000008f331: out dx, al; mov rdi, rbx; call qword ptr [rbp+0x70]; 
0x00000000149ef5: out dx, al; mov rdi, rbx; call rax; 
0x0000000016d689: out dx, al; movdqu [rdi-0x10], xmm1; ret; 
0x00000000151f37: out dx, al; or [rax], eax; syscall; 
0x0000000011d044: out dx, al; or al, 0x0; mov dword ptr fs:[rax], 0x2; xor eax, eax; ret; 
0x0000000009fae1: out dx, al; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000468c7: out dx, al; ror rdx, 0x11; xor rdx, fs:[0x30]; call rdx; 
0x0000000016b34e: out dx, al; sub [rip+0x14634900], eax; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000d0b79: out dx, al; sub r8, rax; add r14, r8; mov [rsp+0x88], r14; call rbp; 
0x000000000bcc69: out dx, al; xor eax, eax; ret; 
0x0000000015ff2d: out dx, al; xor r9d, r9d; mov rdi, r12; lea r8, [rsp+0x30]; call qword ptr [rax+0x1e0]; 
0x0000000016034d: out dx, al; xor r9d, r9d; xor r8d, r8d; mov rdi, r12; call qword ptr [rax+0x1e0]; 
0x000000000cf37d: out dx, eax; adc [rax+0x1], cl; clc; ret; 
0x000000000d0164: out dx, eax; adc [rax], eax; add rsp, 0x8; ret; 
0x0000000007bab9: out dx, eax; add [rax-0x93b43], eax; jmp qword ptr [rax]; 
0x0000000019645a: out dx, eax; add [rax], al; add [rcx-0x77], cl; ret; 
0x0000000016f0c7: out dx, eax; add al, 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016f0c6: out dx, eax; add al, 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000013acca: out dx, eax; add ecx, [rax-0x7d]; call qword ptr [rcx]; 
0x00000000087d52: out dx, eax; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x00000000087dae: out dx, eax; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000001483ba: out dx, eax; and esi, 0xfffffffc; call qword ptr [rax+0x30]; 
0x0000000008bdf8: out dx, eax; call qword ptr [r13+0x10]; 
0x0000000008f9e6: out dx, eax; call qword ptr [r13+0x20]; 
0x0000000008e3ab: out dx, eax; call qword ptr [r13+0x38]; 
0x0000000008f983: out dx, eax; call qword ptr [r13+0x90]; 
0x00000000085b5e: out dx, eax; call qword ptr [r14+0x38]; 
0x0000000007bbcc: out dx, eax; call qword ptr [r15+0x38]; 
0x0000000008e766: out dx, eax; call qword ptr [r15+0x40]; 
0x0000000008eb86: out dx, eax; call qword ptr [r15+0x80]; 
0x0000000008e6fd: out dx, eax; call qword ptr [r15+0x90]; 
0x00000000152f3e: out dx, eax; call qword ptr [rax+0x10]; 
0x0000000008f6e1: out dx, eax; call qword ptr [rax+0x18]; 
0x00000000146220: out dx, eax; call qword ptr [rax+0x20]; 
0x0000000014773d: out dx, eax; call qword ptr [rax+0x28]; 
0x0000000014832c: out dx, eax; call qword ptr [rax+0x30]; 
0x0000000007a94c: out dx, eax; call qword ptr [rax+0x38]; 
0x0000000008f199: out dx, eax; call qword ptr [rax+0x40]; 
0x0000000014e789: out dx, eax; call qword ptr [rax+0x48]; 
0x0000000008f7d4: out dx, eax; call qword ptr [rax+0x78]; 
0x0000000008eaa6: out dx, eax; call qword ptr [rax+0x80]; 
0x00000000146939: out dx, eax; call qword ptr [rax+0x8]; 
0x0000000008e948: out dx, eax; call qword ptr [rax+0x90]; 
0x000000001490eb: out dx, eax; call qword ptr [rax]; 
0x00000000081e6d: out dx, eax; call qword ptr [rbx+0x10]; 
0x00000000091bc8: out dx, eax; call qword ptr [rbx+0x18]; 
0x0000000008225e: out dx, eax; call qword ptr [rbx+0x80]; 
0x0000000008ffe3: out dx, eax; call qword ptr [rbx+0x88]; 
0x00000000081cfc: out dx, eax; call qword ptr [rbx+0x90]; 
0x00000000152cee: out dx, eax; call qword ptr [rdx+0x10]; 
0x0000000013779e: out dx, eax; call qword ptr [rsp+0x10]; 
0x000000000e1f3e: out dx, eax; call qword ptr [rsp+0x30]; 
0x00000000131239: out dx, eax; call qword ptr [rsp+0x40]; 
0x00000000130cc9: out dx, eax; call qword ptr [rsp+0x50]; 
0x000000000de8cd: out dx, eax; call r12; 
0x000000000458a4: out dx, eax; call rax; 
0x00000000044878: out dx, eax; call rbx; 
0x00000000146969: out dx, eax; call rcx; 
0x00000000123203: out dx, eax; dec dword ptr [rax-0x77]; ret; 
0x00000000123204: out dx, eax; dec dword ptr [rax-0x77]; ret; 
0x000000001288aa: out dx, eax; inc dword ptr [rax-0x76b7ffc8]; ret; 
0x0000000012433e: out dx, eax; jmp qword ptr [rbp+rax*2-0x77]; 
0x0000000014e460: out dx, eax; jmp qword ptr [rbx+rcx*4+0x4]; 
0x00000000124077: out dx, eax; jmp qword ptr [rcx+rcx*4+0x2b]; 
0x0000000012ead1: out dx, eax; jmp qword ptr [rsi+0x2e]; 
0x0000000013b3d1: out dx, eax; jmp qword ptr [rsi+0x66]; 
0x00000000127678: out dx, eax; jmp qword ptr [rsi+0xf]; 
0x0000000012dd9b: out dx, eax; jmp qword ptr [rsi-0x70]; 
0x00000000125d49: out dx, eax; jmp qword ptr [rsp+rax*2-0x77]; 
0x0000000016d6ff: out dx, eax; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x11], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000168bb3: out dx, eax; lea r11, [rip+0x54d84]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168af4: out dx, eax; lea r11, [rip+0x54e43]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001661d3: out dx, eax; lea r11, [rip+0x575a4]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166114: out dx, eax; lea r11, [rip+0x57663]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000014697a: out dx, eax; lea r15, [rsp+0x50]; call qword ptr [rax+0x20]; 
0x00000000152194: out dx, eax; lea r8, [rip-0xa0ec]; lea rdx, [rip+0x3a2d]; call qword ptr [rax]; 
0x0000000008a5e0: out dx, eax; lea r9, [rsp+0x18]; call rbp; 
0x0000000014732d: out dx, eax; lea r9, [rsp+0x20]; call qword ptr [rax]; 
0x0000000014e708: out dx, eax; mov [r12+0x70], edx; call qword ptr [rax+0x30]; 
0x0000000007b4d1: out dx, eax; mov [rbp-0x978], r10d; mov [rbp-0x960], r9b; call rax; 
0x0000000014762a: out dx, eax; mov [rbx], rax; xor eax, eax; call qword ptr [rbx+0x18]; 
0x0000000016787a: out dx, eax; mov [rdi-0x9], r8; mov [rdi-0x4], edx; ret; 
0x00000000167976: out dx, eax; mov [rdi-0x9], rcx; mov [rdi-0x1], dl; ret; 
0x000000001678c2: out dx, eax; mov [rdi-0x9], rcx; mov [rdi-0x4], edx; ret; 
0x000000000a8640: out dx, eax; mov [rdx], rcx; ret; 
0x0000000009759d: out dx, eax; mov [rsp+0x10], r10; call qword ptr [rax]; 
0x00000000153ea1: out dx, eax; mov [rsp+0xc8], rdx; mov dword ptr [rsp+0xd0], 0x1; movups [rsp+0xb8], xmm5; call rax; 
0x00000000146a14: out dx, eax; mov dword ptr [rbx+0x18], 0x0; call qword ptr [rax+0x28]; 
0x00000000146995: out dx, eax; mov dword ptr [rbx+0x18], 0x1; call qword ptr [rax+0x28]; 
0x0000000014ef62: out dx, eax; mov dword ptr [rsp+0x40], 0x0; mov [rsp+0x10], rax; mov rax, [rsp+0x48]; call qword ptr [rax+0x28]; 
0x00000000153cb8: out dx, eax; mov dword ptr [rsp+0xa8], 0x1; mov dword ptr [rsp+0xb0], 0x1; mov dword ptr [rsp+0xb8], 0x1; call qword ptr [rax+0x18]; 
0x0000000010d336: out dx, eax; mov eax, 0x135; syscall; 
0x0000000011479d: out dx, eax; mov eax, 0x147; syscall; 
0x000000001148fd: out dx, eax; mov eax, 0x148; syscall; 
0x0000000010eb1a: out dx, eax; mov eax, 0x4f; syscall; 
0x0000000011890e: out dx, eax; mov eax, 0x9; syscall; 
0x00000000046dac: out dx, eax; mov eax, 0xca; syscall; 
0x000000000dd11c: out dx, eax; mov eax, 0xe4; syscall; 
0x000000000dd09c: out dx, eax; mov eax, 0xe5; syscall; 
0x00000000102a70: out dx, eax; mov eax, [rdx+0x8]; ret; 
0x00000000119aa8: out dx, eax; mov edx, r13d; mov esi, 0x1; call r12; 
0x000000001476be: out dx, eax; mov qword ptr [rsp], 0x0; call qword ptr [rax+0x20]; 
0x0000000013cbba: out dx, eax; mov qword ptr [rsp], 0x0; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000001476ec: out dx, eax; mov r12d, eax; xor eax, eax; call qword ptr [rbx+0x28]; 
0x0000000011a740: out dx, eax; mov rax, r12; pop rbp; pop r12; jmp rax; 
0x000000000a87a0: out dx, eax; mov rax, r8; ret; 
0x00000000056558: out dx, eax; mov rax, rdx; ret; 
0x00000000119b38: out dx, eax; mov rdx, r13; mov esi, 0x1; call r12; 
0x0000000007699b: out dx, eax; mov rdx, r15; call qword ptr [rax+0x38]; 
0x0000000009e0ed: out dx, eax; mov rdx, rbp; mov rsi, r12; call rax; 
0x000000000caa19: out dx, eax; mov rsi, [rsp+0x18]; call rbx; 
0x0000000016d709: out dx, eax; movdqu [rdi-0x10], xmm1; ret; 
0x0000000007dd0d: out dx, eax; or eax, [rax]; add [rcx-0x77], cl; ret; 
0x0000000008998b: out dx, eax; pop rbp; mov rax, [rax+0xe0]; mov rax, [rax+0x20]; jmp rax; 
0x00000000087245: out dx, eax; pop rbp; pop r12; jmp rax; 
0x0000000009a545: out dx, eax; pop rbp; pop r12; pop r13; jmp rax; 
0x0000000008774e: out dx, eax; pop rbx; pop rbp; jmp rax; 
0x00000000099cb2: out dx, eax; pop rbx; pop rbp; pop r12; jmp rax; 
0x0000000014804e: out dx, eax; pop rbx; xor eax, eax; pop rbp; jmp rdx; 
0x000000000fa318: out dx, eax; ror byte ptr [rdi], 0x11; cmp dword ptr [rax+0x41000000], 0xffffff8b; sub cl, [rbp-0xff7b]; jmp far fword ptr [rcx-0x101]; 
0x00000000093697: out dx, eax; ror byte ptr [rdi], 0x11; pop rbx; ret; 
0x00000000157a02: out dx, eax; ror byte ptr [rdi], 0x29; and al, 0x60; movups [rsp+0x18], xmm0; call r8; 
0x00000000069f86: out dx, eax; ror byte ptr [rdi], 0x29; test [rax-0x16000005], edx; pop rbx; ret far; 
0x00000000135952: out dx, eax; ror byte ptr [rdi], 0xb7; ret far; 
0x0000000013cc97: out dx, eax; ror rax, 0x11; xor rax, fs:[0x30]; mov qword ptr [rsp], 0x0; call rax; 
0x00000000046909: out dx, eax; ror rdx, 0x11; xor rdx, fs:[0x30]; call rdx; 
0x0000000007b319: out dx, eax; sub rdx, rsi; sar rdx, 0x2; call qword ptr [r12+0x38]; 
0x000000001569b0: out dx, eax; xor eax, eax; call r14; 
0x000000001569ca: out dx, eax; xor eax, eax; call rcx; 
0x0000000011f8c2: out dx, eax; xor eax, eax; ret; 
0x0000000011a71f: out dx, eax; xor edx, edx; mov esi, 0x1; call r12; 
0x00000000119a96: out dx, eax; xor esi, esi; call r12; 
0x000000000db0c4: outsb dx, [rsi]; add [rax], eax; add [rcx-0x12f43], al; jmp far fword ptr [rax]; 
0x000000000e939d: outsb dx, [rsi]; add al, 0x83; call far fword ptr [rbp+0xf]; 
0x000000001668b8: outsb dx, [rsi]; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000011757f: outsb dx, [rsi]; enter 0x4866, 0xf; outsb dx, [rsi]; ret; 
0x00000000041fe1: outsb dx, [rsi]; enter 0x8948, 0x7; subsd xmm0, xmm1; ret; 
0x0000000006bf30: outsb dx, [rsi]; fmul st, dword ptr [rbx+0xf660446]; insb [rdi], dx; ret; 
0x00000000063dee: outsb dx, [rsi]; fsub st, dword ptr [rsi+0xf]; insb [rdi], dx; ret; 
0x0000000017cefe: outsb dx, [rsi]; idiv edi; jmp qword ptr [rsi+0x66]; 
0x000000001204fe: outsb dx, [rsi]; idiv r15d; mov rax, [rsp+0x8]; add rsp, 0x28; ret; 
0x00000000146b71: outsb dx, [rsi]; mov rax, [rbx+0x20]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x0000000009f8d6: outsb dx, [rsi]; not byte ptr [rax+rax]; add rsp, 0x8; ret; 
0x00000000114f78: outsb dx, [rsi]; or eax, 0x64d8f700; mov [rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000115023: outsb dx, [rsi]; or eax, 0x64d8f700; mov [rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000093e20: outsb dx, [rsi]; ret far; 
0x0000000002533d: outsb dx, [rsi]; ret; 
0x000000000424fd: outsb dx, [rsi]; rol bl, 0xf3; addps xmm0, xmm0; ret; 
0x000000000ff2e7: outsb dx, [rsi]; rol byte ptr [rcx-0x77], 0x55; add [rcx+0x6c0f66d0], cl; ret; 
0x00000000047683: outsb dx, [rsi]; sbb al, [rax]; syscall; 
0x00000000042480: outsb dx, [rsi]; shl bl, 0xf; pop rcx; add eax, 0x17af06; ret; 
0x0000000004211b: outsb dx, [rsi]; shl dl, 0xf; pop rcx; add eax, 0x17abcb; ret; 
0x0000000015c786: outsb dx, [rsi]; sti; dec dword ptr [rax-0x77]; ret; 
0x000000000b83eb: outsb dx, [rsi]; str [rcx+0x63]; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000001506e2: outsd dx, [rsi]; adc bh, [rax+0x1]; movups [r8+0x20], xmm2; ret; 
0x0000000009d2fd: outsd dx, [rsi]; add [rax], eax; add [rcx+rcx*4-0x16], cl; mov rdi, r12; call rax; 
0x00000000190650: outsd dx, [rsi]; add [rdx-0xf], esp; dec byte ptr [rax+0x6f]; jmp qword ptr [r10-0xf]; 
0x00000000166806: outsd dx, [rsi]; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000121fa0: outsd dx, [rsi]; add eax, 0x1; mov [rdx], eax; ret; 
0x00000000151756: outsd dx, [rsi]; add eax, 0x6b534; movaps [rsp+0x20], xmm0; call qword ptr [rax+0x28]; 
0x000000000e163c: outsd dx, [rsi]; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000005b153: outsd dx, [rsi]; and al, 0xe8; pinsrw xmm0, eax, 0x6; ret; 
0x00000000113f88: outsd dx, [rsi]; call qword ptr [rbx+0x48]; 
0x0000000018fe90: outsd dx, [rsi]; cli; vmovups [rdi-0x1c0], zmm14; vmovups [rdi-0x200], zmm15; ret; 
0x00000000168007: outsd dx, [rsi]; data64 ret far; 
0x000000000a91ae: outsd dx, [rsi]; fsub st(1), st; imul edi, 0xffffffff; jmp qword ptr [rsi+0x66]; 
0x0000000010c726: outsd dx, [rsi]; jg short 0x000000000010c7a1; movups [rsi+0x70], xmm7; ret; 
0x0000000010c776: outsd dx, [rsi]; jle short 0x000000000010c7e9; movups [rdi+0x78], xmm7; ret; 
0x0000000010d10b: outsd dx, [rsi]; jle short 0x000000000010d17e; movups [rdi+0xf8], xmm7; ret; 
0x00000000190656: outsd dx, [rsi]; jmp qword ptr [r10-0xf]; 
0x0000000012c584: outsd dx, [rsi]; jnp short 0x000000000012c56f; mov dword ptr [rbp-0x80], 0x0; movups [rbp-0x78], xmm7; call rcx; 
0x00000000168002: outsd dx, [rsi]; mov ebx, 0x4e6f0ff3; ret far; 
0x0000000010d07b: outsd dx, [rsi]; mov edi, 0xf8; movups [rsi+0x70], xmm7; ret; 
0x0000000015062a: outsd dx, [rsi]; movups [rsi], xmm0; mov rax, [rax+0x50]; mov [rsi+0x10], rax; ret; 
0x0000000014cf9b: outsd dx, [rsi]; or [rax+0x1], dil; movups [rdx], xmm1; ret; 
0x0000000011207a: outsd dx, [rsi]; or al, ch; scasd [rdi]; add dh, cl; jmp qword ptr [rsi-0x7d]; 
0x000000001506f3: outsd dx, [rsi]; pop rax; and [rax+0x1], bh; movups [rdx], xmm3; ret; 
0x0000000018ffe7: outsd dx, [rsi]; pop rcx; jmp qword ptr [rdx-0x2f]; 
0x0000000014b89d: outsd dx, [rsi]; push 0xffffffffffffffed; jmp qword ptr [rsi+0xf]; 
0x0000000018e3e2: outsd dx, [rsi]; push rdi; ret far; 
0x0000000018e81d: outsd dx, [rsi]; push rdi; ret; 
0x000000000b1a1a: outsd dx, [rsi]; push rdi; xor [rsi+0xf], ah; outsd dx, [rsi]; ret; 
0x000000000b70d6: outsd dx, [rsi]; push rsi; or eax, 0x77f0ff3; movdqu [rdi+0xd], xmm2; ret; 
0x000000000309ad: outsd dx, [rsi]; ret far; 
0x00000000099063: outsd dx, [rsi]; ret; 
0x00000000042a37: outsd dx, [rsi]; shr eax, 0x42; add [rip-0x3b7cb800], edx; sbb [rbx+0x5d], bl; ret; 
0x000000000b8376: outsd dx, [rsi]; str [rcx+0x63]; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000151ac6: outsd dx, [rsi]; sub rsp, 0xffffffffffffff80; mov eax, r8d; pop rbp; ret; 
0x000000001506c3: outsd dx, [rsi]; xor [rax+0x1], dil; movups [rdx], xmm1; ret; 
0x0000000005466b: paddd mm7, mm7; call qword ptr [rax+0x587c031]; 
0x000000000f5522: paddd mm7, mm7; jmp qword ptr [rsi+0x2e]; 
0x0000000013e86a: paddd mm7, mm7; jmp qword ptr [rsi-0x70]; 
0x0000000012741b: paddw mm7, mm7; call qword ptr [rax-0x4115d6b8]; 
0x00000000088f2b: paddw mm7, mm7; call qword ptr [rax-0x76df377d]; 
0x00000000138531: paddw mm7, mm7; jmp qword ptr [rsi+0x2e]; 
0x00000000110d7e: paddw mm7, mm7; jmp qword ptr [rsi+0x66]; 
0x00000000158bf3: paddw mm7, mm7; jmp qword ptr [rsi+0xf]; 
0x0000000004266d: pand mm0, [rip+0x17a0ec]; por xmm0, xmm1; ret; 
0x00000000043f5d: pand mm0, mm1; shufpd xmm0, xmm0, 0x1; movups [rdi], xmm0; ret; 
0x00000000042665: pand mm1, [rip+0x17a104]; pand xmm0, [rip+0x17a0ec]; por xmm0, xmm1; ret; 
0x0000000004266c: pand xmm0, [rip+0x17a0ec]; por xmm0, xmm1; ret; 
0x00000000043f5c: pand xmm0, xmm1; shufpd xmm0, xmm0, 0x1; movups [rdi], xmm0; ret; 
0x00000000042664: pand xmm1, [rip+0x17a104]; pand xmm0, [rip+0x17a0ec]; por xmm0, xmm1; ret; 
0x0000000017deb2: pcmpeqb mm0, mm1; lea r10, [r10+r9]; notrack jmp r10; 
0x000000000cf042: pcmpeqb mm1, [rbx]; mov eax, [rdi+0x28]; cmp eax, [rsi+0x28]; jne short 0x00000000000cf0b0; ret; 
0x000000000cf092: pcmpeqb mm1, [rbx]; mov eax, [rdi+0x38]; cmp eax, [rsi+0x38]; jne short 0x00000000000cf0b0; ret; 
0x000000000cf068: pcmpeqb mm2, [rip+0x3b30478b]; xor [rbp+0x3d], r14b; ret; 
0x000000000cef58: pcmpeqb mm2, [rip+0x63b078b]; jne 0x00000000000cf0b0; ret; 
0x000000000cefe2: pcmpeqb mm3, [rbx]; mov eax, [rdi+0x18]; cmp eax, [rsi+0x18]; jne 0x00000000000cf0b0; ret; 
0x000000000cef82: pcmpeqb mm3, [rbx]; mov eax, [rdi+0x8]; cmp eax, [rsi+0x8]; jne 0x00000000000cf0b0; ret; 
0x000000001929e2: pcmpeqb mm3, [rbx]; mov eax, [rdi-0x8]; cmp eax, [rsi-0x8]; jne 0x0000000000192af0; ret; 
0x000000000cfb14: pcmpeqb mm3, [rcx]; add rax, 0x2; ret; 
0x000000001929b4: pcmpeqb mm3, [rcx]; mov eax, [rdi-0x10]; cmp eax, [rsi-0x10]; jne 0x0000000000192af0; ret; 
0x000000000cfaff: pcmpeqb mm3, [rsi]; ret; 
0x0000000017deb1: pcmpeqb xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x000000000cf611: pcmpeqw mm1, [rax+rcx*2+0x25]; call far fword ptr [rdi]; 
0x000000000bb029: pcmpgtd mm1, [rcx-0x12cff7a9]; mov [rdi+0xa], ch; ret; 
0x000000000bafc7: pcmpgtd mm1, [rcx-0x12cffba9]; mov [rdi+0x6], ch; ret; 
0x000000000b8e67: pcmpgtd mm1, [rcx-0x72b7fba9]; add eax, 0x6e88349; lea rdi, [rdi+0x6]; jne 0x00000000000b97f0; ret; 
0x00000000190138: pcmpgtd mm1, [rcx-0x7f3c01b2]; cli; add [rdx+0x2], esi; mov [rdi], cl; ret; 
0x000000000ac623: pcmpgtd mm1, [rdi]; xlat [rbx]; rol dword ptr [rbp+0x317475c0], 0xc0; ret; 
0x00000000183a16: pcmpistri xmm2, xmm2, 0x3a; cmp edx, ecx; jle 0x0000000000183ac0; ret; 
0x00000000183848: pcmpistri xmm3, xmm3, 0x3a; movsxd rcx, ecx; add rax, rcx; sub rax, rdi; ret; 
0x0000000018bb4a: pextrw edi, mm0, 0x77; ret; 
0x00000000188e84: pextrw edi, mm5, 0x74; ret far; 
0x0000000005b158: pinsrw mm0, eax, 0x6; ret; 
0x0000000005b157: pinsrw xmm0, eax, 0x6; ret; 
0x000000000421e5: pmovmskb eax, mm0; and eax, 0x80; ret; 
0x00000000042515: pmovmskb eax, mm0; and eax, 0x8; ret; 
0x000000000ac0dc: pmovmskb eax, mm1; bsf eax, eax; lea rax, [rdi+rax+0x30]; ret; 
0x000000000ac5c3: pmovmskb eax, mm1; bsr eax, eax; add rax, rdi; ret; 
0x000000000ac142: pmovmskb eax, mm1; test eax, eax; jne 0x00000000000ac1f0; xor eax, eax; ret; 
0x000000000ce332: pmovmskb eax, mm1; test eax, eax; jne 0x00000000000ce3e0; xor eax, eax; ret; 
0x000000000ac172: pmovmskb eax, mm1; test eax, eax; jne short 0x00000000000ac1d0; xor eax, eax; ret; 
0x000000000ac625: pmovmskb eax, mm1; test eax, eax; jne short 0x00000000000ac6a0; xor eax, eax; ret; 
0x000000000ac654: pmovmskb eax, mm1; test eax, eax; jne short 0x00000000000ac6d0; xor eax, eax; ret; 
0x000000000ce362: pmovmskb eax, mm1; test eax, eax; jne short 0x00000000000ce3c0; xor eax, eax; ret; 
0x000000000421e4: pmovmskb eax, xmm0; and eax, 0x80; ret; 
0x00000000042514: pmovmskb eax, xmm0; and eax, 0x8; ret; 
0x000000000ac0db: pmovmskb eax, xmm1; bsf eax, eax; lea rax, [rdi+rax+0x30]; ret; 
0x000000000ac5c2: pmovmskb eax, xmm1; bsr eax, eax; add rax, rdi; ret; 
0x000000000ac141: pmovmskb eax, xmm1; test eax, eax; jne 0x00000000000ac1f0; xor eax, eax; ret; 
0x000000000ce331: pmovmskb eax, xmm1; test eax, eax; jne 0x00000000000ce3e0; xor eax, eax; ret; 
0x000000000ac171: pmovmskb eax, xmm1; test eax, eax; jne short 0x00000000000ac1d0; xor eax, eax; ret; 
0x000000000ac624: pmovmskb eax, xmm1; test eax, eax; jne short 0x00000000000ac6a0; xor eax, eax; ret; 
0x000000000ac653: pmovmskb eax, xmm1; test eax, eax; jne short 0x00000000000ac6d0; xor eax, eax; ret; 
0x000000000ce361: pmovmskb eax, xmm1; test eax, eax; jne short 0x00000000000ce3c0; xor eax, eax; ret; 
0x000000000b1c13: pmovmskb edx, mm4; test edx, edx; je short 0x00000000000b1c1e; bsf eax, edx; ret; 
0x000000000b1c12: pmovmskb edx, xmm4; test edx, edx; je short 0x00000000000b1c1e; bsf eax, edx; ret; 
0x000000001176f9: pop qword ptr [rax+0xd]; add [rax], al; add rsp, 0x8; ret; 
0x000000001026b5: pop qword ptr [rax]; add [rax], al; syscall; 
0x0000000008b566: pop qword ptr [rbp+0x31]; sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; syscall; 
0x000000000d4269: pop qword ptr [rdx]; jbe short 0x00000000000d4270; ret; 
0x000000001497d8: pop r11; mov eax, r8d; pop rbp; pop r12; ret; 
0x000000000846bf: pop r12; jmp rax; 
0x0000000009a534: pop r12; mov rax, r8; pop r13; ret; 
0x000000000849ec: pop r12; pop r13; jmp rax; 
0x0000000007a1a3: pop r12; pop r13; mov rax, r9; pop r14; ret; 
0x00000000034726: pop r12; pop r13; pop r14; pop r15; jmp rax; 
0x00000000023b6b: pop r12; pop r13; pop r14; pop r15; ret; 
0x0000000002604a: pop r12; pop r13; pop r14; ret; 
0x000000000ef1c4: pop r12; pop r13; pop r15; ret; 
0x000000000460a4: pop r12; pop r13; pop rbp; ret; 
0x00000000025bcb: pop r12; pop r13; ret; 
0x0000000008e260: pop r12; pop r14; ret; 
0x0000000012cfad: pop r12; pop rbp; ret; 
0x0000000002f739: pop r12; ret; 
0x000000000849ee: pop r13; jmp rax; 
0x0000000007a1a5: pop r13; mov rax, r9; pop r14; ret; 
0x000000000dd42c: pop r13; pop r14; jmp rax; 
0x00000000034728: pop r13; pop r14; pop r15; jmp rax; 
0x0000000002491d: pop r13; pop r14; pop r15; pop rbp; ret; 
0x00000000023b6d: pop r13; pop r14; pop r15; ret; 
0x0000000002604c: pop r13; pop r14; ret; 
0x000000000ef1c6: pop r13; pop r15; ret; 
0x000000000460a6: pop r13; pop rbp; ret; 
0x00000000025bcd: pop r13; ret; 
0x000000000dd42e: pop r14; jmp rax; 
0x0000000003472a: pop r14; pop r15; jmp rax; 
0x0000000002491f: pop r14; pop r15; pop rbp; ret; 
0x00000000023b6f: pop r14; pop r15; ret; 
0x0000000002604e: pop r14; ret; 
0x00000000115abf: pop r15; idiv edi; mov eax, 0x1; add rsp, 0x8; ret; 
0x0000000003472c: pop r15; jmp rax; 
0x00000000024921: pop r15; pop rbp; ret; 
0x00000000023b71: pop r15; ret; 
0x00000000150651: pop r8; add al, [rax]; add [rax], al; add rdi, 0x58; jmp rcx; 
0x00000000043b7a: pop r8; movups [rdi+0x68], xmm0; ret; 
0x000000000c0aa5: pop rax; add [rax], eax; add [rax+0x29], cl; ret far; 
0x00000000150652: pop rax; add al, [rax]; add [rax], al; add rdi, 0x58; jmp rcx; 
0x000000001506f4: pop rax; and [rax+0x1], bh; movups [rdx], xmm3; ret; 
0x000000000276a6: pop rax; call r14; 
0x000000001507f9: pop rax; call rax; 
0x000000000284c0: pop rax; call rbx; 
0x000000000f7e4b: pop rax; cmp dh, dh; ret; 
0x0000000015065a: pop rax; jmp rcx; 
0x000000000e4f79: pop rax; jne short 0x00000000000e4f80; ret; 
0x000000001491a4: pop rax; mov [rdx+0x68], rcx; ret; 
0x000000000b1464: pop rax; mov al, [0x82048b8a0c8b000e]; sub eax, ecx; ret; 
0x0000000014fe6f: pop rax; mov eax, 0x1; ret; 
0x00000000034297: pop rax; mov eax, [rax+rdi*4+0x200]; ret; 
0x00000000034226: pop rax; mov eax, [rdx+rax*4+0x200]; ret; 
0x000000000e50d0: pop rax; mov edx, 0x40; mov eax, 0x20; cmove rax, rdx; ret; 
0x000000001521aa: pop rax; mov rax, [rbp+0x8]; pop rdx; call qword ptr [rax+0x20]; 
0x000000000290c8: pop rax; mov rax, [rsp+0x20]; call rax; 
0x000000000273f7: pop rax; mov rax, [rsp+0x28]; call rax; 
0x0000000002824a: pop rax; mov rax, [rsp+0x30]; call rax; 
0x0000000011923d: pop rax; mov rax, r12; pop rdx; pop r12; ret; 
0x0000000002c656: pop rax; mov rdi, [rsp+0x50]; call rbx; 
0x0000000002d969: pop rax; mov rdi, [rsp+0x50]; mov rax, [rsp+0x18]; call rax; 
0x0000000002c26c: pop rax; mov rdi, [rsp+0x50]; mov rax, [rsp+0x20]; call rax; 
0x00000000027e06: pop rax; mov rdi, [rsp+0x60]; call rbx; 
0x000000000279ee: pop rax; mov rdi, [rsp+0x60]; mov rax, [rsp+0x20]; call rax; 
0x0000000014f1a5: pop rax; mov rdi, r12; call qword ptr [rax+0x20]; 
0x000000000823ef: pop rax; mov rdi, rbx; call qword ptr [rbp+0x60]; 
0x00000000034570: pop rax; mov rdx, [rip+0x1b79af]; add rax, 0x200; mov fs:[rdx], rax; ret; 
0x00000000043b7b: pop rax; movups [rdi+0x68], xmm0; ret; 
0x000000000b5c34: pop rax; or [rax], eax; add cl, ch; ret; 
0x0000000005d7e9: pop rax; or al, 0x89; fdiv st, st(6); ret; 
0x0000000005c146: pop rax; or al, 0xf6; ret; 
0x000000000da966: pop rax; or eax, 0xc2894400; movsxd rax, [rcx+rdx*4]; add rax, rcx; notrack jmp rax; 
0x000000000226be: pop rax; pop rbx; pop rbp; ret; 
0x0000000011f15f: pop rax; pop rdi; call rax; 
0x0000000015f7e5: pop rax; pop rdx; pop rbx; ret; 
0x000000000473ff: pop rax; ret; 
0x000000000bac68: pop rax; str [r11+0x63]; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000113861: pop rax; xor eax, eax; lea rdx, [rsp+0x30]; mov eax, 0x10; syscall; 
0x000000000d0397: pop rax; xor eax, eax; mov [rsp+0x50], r12; call rbx; 
0x0000000011f0df: pop rax; xor rcx, fs:[0x28]; jne short 0x000000000011f103; add rsp, 0x68; ret; 
0x0000000015fa21: pop rax; xor rcx, fs:[0x28]; jne short 0x000000000015fa74; add rsp, 0x68; ret; 
0x0000000015fbba: pop rax; xor rcx, fs:[0x28]; jne short 0x000000000015fc14; add rsp, 0x68; ret; 
0x000000000a4471: pop rbp; adc [rax], eax; add [rcx-0x9], al; ret; 
0x000000000961f8: pop rbp; adc eax, 0x30894800; mov rax, [rip+0x155cdb]; mov [rax], rdx; ret; 
0x0000000011bb39: pop rbp; add [rsi+0x2b], dh; mov rsi, r12; mov rdi, r14; call r13; 
0x000000000a7ada: pop rbp; add byte ptr [rbx-0x71f08005], 0x45; add al, [rax]; add bh, dh; ret; 
0x000000000a5dda: pop rbp; add byte ptr [rbx-0x71f08005], 0x53; add al, [rax]; add bh, dh; ret; 
0x0000000013f3fb: pop rbp; add cl, ch; imul edi, esi, 0xffffffff; jmp qword ptr [rsi+0xf]; 
0x0000000013b714: pop rbp; add dh, dh; ret; 
0x0000000010e87c: pop rbp; clc; dec dword ptr [rbx+0x480c2444]; add esp, 0x18; ret; 
0x0000000015cff0: pop rbp; clc; jmp qword ptr [rsi+0xf]; 
0x000000000e369a: pop rbp; clc; leave; ret; 
0x0000000012799f: pop rbp; cmp [rcx], dh; rcr byte ptr [rbx+0x5d], 0x41; pop rsp; ret; 
0x000000000d293e: pop rbp; enter 0x11, 0x1; add rsp, 0x8; ret; 
0x000000000340a7: pop rbp; jge short 0x00000000000340c5; add [rax+0x63], cl; jmp qword ptr [rax+rcx*2-0x75]; 
0x000000000341a7: pop rbp; jl short 0x00000000000341c5; add [rax+0x63], cl; jmp qword ptr [rax+rcx*2-0x75]; 
0x000000000849ef: pop rbp; jmp rax; 
0x000000001468a9: pop rbp; jmp rcx; 
0x00000000148052: pop rbp; jmp rdx; 
0x000000001383af: pop rbp; lahf; out dx, al; dec dword ptr [rax-0x77]; ret; 
0x000000000dd789: pop rbp; lea rax, [rax+rdx*8]; ret; 
0x000000001191b1: pop rbp; lea rax, [rip+0xd6747]; pop r12; pop r13; ret; 
0x000000000951ce: pop rbp; mov [r11+0x10], eax; mov dword ptr [r11+0x14], 0x0; ret; 
0x000000000d095a: pop rbp; mov [rsp+0xd0], r8; lea rdi, [rsp+0xd0]; mov rsi, r13; call rbp; 
0x00000000134b79: pop rbp; mov byte ptr [rdx], 0x0; pop r12; pop r13; ret; 
0x0000000012d441: pop rbp; mov eax, 0x89483e74; ret; 
0x000000000f543f: pop rbp; mov eax, 0xfffb73e9; jmp qword ptr [rsi+0x2e]; 
0x0000000010d25c: pop rbp; mov eax, r12d; pop r12; ret; 
0x0000000008b677: pop rbp; mov eax, r8d; pop r12; ret; 
0x0000000008b51b: pop rbp; mov eax, r8d; ret; 
0x00000000198c14: pop rbp; mov qword ptr [rip+0x57250], 0x0; ret; 
0x0000000008e1c2: pop rbp; mov r12, rax; mov rax, r12; pop r12; ret; 
0x0000000008998c: pop rbp; mov rax, [rax+0xe0]; mov rax, [rax+0x20]; jmp rax; 
0x000000000a03c7: pop rbp; mov rax, r12; pop r12; pop r13; ret; 
0x00000000034b77: pop rbp; mov rax, r12; pop r12; ret; 
0x0000000009a4c9: pop rbp; mov rax, r8; pop r12; pop r13; ret; 
0x00000000095684: pop rbp; mov rax, r8; pop r12; ret; 
0x00000000038cd4: pop rbp; mov rax, r9; pop r12; ret; 
0x0000000007a1a6: pop rbp; mov rax, r9; pop r14; ret; 
0x0000000009b660: pop rbp; mov rsi, r12; pop r12; pop r13; jmp rax; 
0x00000000149c8c: pop rbp; movzx eax, al; pop r12; ret; 
0x0000000010b2c7: pop rbp; or [rax], eax; add [rcx-0x80], al; jmp qword ptr [rdi]; 
0x00000000087246: pop rbp; pop r12; jmp rax; 
0x0000000009a533: pop rbp; pop r12; mov rax, r8; pop r13; ret; 
0x000000000849eb: pop rbp; pop r12; pop r13; jmp rax; 
0x00000000026049: pop rbp; pop r12; pop r13; pop r14; ret; 
0x000000000ef1c3: pop rbp; pop r12; pop r13; pop r15; ret; 
0x00000000025bca: pop rbp; pop r12; pop r13; ret; 
0x0000000008e25f: pop rbp; pop r12; pop r14; ret; 
0x0000000002f738: pop rbp; pop r12; ret; 
0x0000000013644e: pop rbp; pop r13; pop r14; pop r15; ret; 
0x000000000dd42d: pop rbp; pop r14; jmp rax; 
0x00000000034729: pop rbp; pop r14; pop r15; jmp rax; 
0x0000000002491e: pop rbp; pop r14; pop r15; pop rbp; ret; 
0x00000000023b6e: pop rbp; pop r14; pop r15; ret; 
0x0000000002604d: pop rbp; pop r14; ret; 
0x000000000ef1c7: pop rbp; pop r15; ret; 
0x000000000460a7: pop rbp; pop rbp; ret; 
0x00000000055be8: pop rbp; pop rbx; ret; 
0x0000000008caa7: pop rbp; ret far; 
0x000000000226c0: pop rbp; ret; 
0x000000000a096e: pop rbp; xor eax, eax; pop r12; pop r13; ret; 
0x00000000148a4d: pop rbx; add rdi, 0x23b0; pop rbp; jmp rcx; 
0x000000000bc1d6: pop rbx; and eax, 0x7ff80000; ret; 
0x0000000005b48f: pop rbx; cmovb r10, rdi; mov rax, r10; ret; 
0x000000000bc12b: pop rbx; cmove rax, rdx; ret; 
0x000000000a2c6c: pop rbx; cmovne rax, rdi; ret; 
0x000000000bc1bb: pop rbx; cmovne rax, rdx; ret; 
0x000000000bb3c1: pop rbx; idiv bh; jmp qword ptr [rsi+0xf]; 
0x0000000004a8a2: pop rbx; inc dword ptr [rbp-0x2a7bf02e]; add [rax], al; add [rax+0x63], cl; ret far; 
0x00000000091a58: pop rbx; jmp rax; 
0x0000000013c55b: pop rbx; mov [r9], rcx; ret; 
0x00000000068f5a: pop rbx; mov cl, 0xff; jmp qword ptr [rsi+0xf]; 
0x00000000094756: pop rbx; mov dword ptr [rip+0x15cd2f], 0x1; ret; 
0x0000000015318f: pop rbx; mov dword ptr [rip+0x9dc86], 0x2; ret; 
0x00000000148ac8: pop rbx; mov eax, 0x1; pop rbp; pop r12; ret; 
0x0000000012cfbe: pop rbx; mov eax, 0x5; pop r12; pop rbp; ret; 
0x00000000106fe6: pop rbx; mov eax, 0x5; pop rbp; pop r12; ret; 
0x0000000010c538: pop rbx; mov eax, 0x9; pop rbp; pop r12; ret; 
0x000000000f2400: pop rbx; mov eax, 0xc; pop rbp; pop r12; ret; 
0x000000000875e8: pop rbx; mov eax, 0xffffffff; pop rbp; pop r12; ret; 
0x000000000473fd: pop rbx; mov eax, [rax+0x58]; ret; 
0x00000000046b0b: pop rbx; mov eax, r8d; pop rbp; pop r12; ret; 
0x0000000008e46c: pop rbx; mov edx, 0x1; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x000000000934d4: pop rbx; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [r12+0x18]; 
0x000000000a20ed: pop rbx; mov qword ptr [rbp], 0x0; pop rbp; pop r12; ret; 
0x000000000475ab: pop rbx; mov qword ptr [rip+0x1a9d39], 0x0; mov eax, [rax+0x58]; ret; 
0x000000001987a6: pop rbx; mov qword ptr [rip+0x554ce], 0x0; ret; 
0x00000000198adb: pop rbx; mov qword ptr [rip+0x56649], 0x0; ret; 
0x00000000088f19: pop rbx; mov rax, [rsp+0x8]; mov esi, 0xffffffff; mov rdi, r8; call qword ptr [rax+0x18]; 
0x00000000085945: pop rbx; mov rax, r8; pop rbp; pop r12; ret; 
0x00000000087242: pop rbx; mov rdi, rbp; pop rbp; pop r12; jmp rax; 
0x0000000013c533: pop rbx; movsxd rdx, eax; add rdi, rdx; mov [r9], rdi; ret; 
0x0000000008e010: pop rbx; neg eax; ret; 
0x000000000846be: pop rbx; pop r12; jmp rax; 
0x0000000010fee0: pop rbx; pop r12; pop r13; pop r14; ret; 
0x000000000460a3: pop rbx; pop r12; pop r13; pop rbp; ret; 
0x00000000062599: pop rbx; pop r12; pop r13; ret; 
0x0000000005b967: pop rbx; pop r12; ret; 
0x0000000008774f: pop rbx; pop rbp; jmp rax; 
0x000000001468a8: pop rbx; pop rbp; jmp rcx; 
0x000000000dd788: pop rbx; pop rbp; lea rax, [rax+rdx*8]; ret; 
0x0000000010d25b: pop rbx; pop rbp; mov eax, r12d; pop r12; ret; 
0x0000000008b676: pop rbx; pop rbp; mov eax, r8d; pop r12; ret; 
0x0000000008b51a: pop rbx; pop rbp; mov eax, r8d; ret; 
0x00000000034b76: pop rbx; pop rbp; mov rax, r12; pop r12; ret; 
0x00000000095683: pop rbx; pop rbp; mov rax, r8; pop r12; ret; 
0x00000000038cd3: pop rbx; pop rbp; mov rax, r9; pop r12; ret; 
0x00000000149c8b: pop rbx; pop rbp; movzx eax, al; pop r12; ret; 
0x00000000099cb3: pop rbx; pop rbp; pop r12; jmp rax; 
0x00000000025bc9: pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000008e25e: pop rbx; pop rbp; pop r12; pop r14; ret; 
0x0000000002f860: pop rbx; pop rbp; pop r12; ret; 
0x00000000094add: pop rbx; pop rbp; pop r12; ret; 
0x00000000196b72: pop rbx; pop rbp; pop r14; ret; 
0x000000000226bf: pop rbx; pop rbp; ret; 
0x0000000004ca26: pop rbx; pop rdi; std; jmp qword ptr [rsi+0xf]; 
0x00000000069f90: pop rbx; ret far; 
0x0000000013b3fc: pop rbx; ret; 
0x0000000002fddf: pop rbx; ret; 
0x0000000010c58e: pop rbx; setl al; ret; 
0x0000000011979e: pop rbx; setne al; movzx eax, al; ret; 
0x000000000bc185: pop rbx; shr eax, 0x6; and eax, 0x3fffc00; ret; 
0x000000000bc13a: pop rbx; shr eax, 0xe; and eax, 0x3fc00; ret; 
0x000000000b987e: pop rbx; str [rbx+0x63]; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000008f58f: pop rbx; sub rax, rdx; pop rbp; pop r12; ret; 
0x000000000473cc: pop rbx; test eax, eax; cmovs eax, edx; ret; 
0x00000000156341: pop rbx; xchg edi, eax; std; jmp qword ptr [rsi+0x66]; 
0x000000001512b9: pop rbx; xor [rsi], eax; add [rax-0x77], cl; ret; 
0x0000000012cfaa: pop rbx; xor eax, eax; pop r12; pop rbp; ret; 
0x0000000014804f: pop rbx; xor eax, eax; pop rbp; jmp rdx; 
0x000000000900e0: pop rbx; xor eax, eax; pop rbp; pop r12; ret; 
0x000000000787e0: pop rcx; adc eax, [rax]; movsxd rax, [rax+rdx*4]; add rax, rbx; jmp rax; 
0x00000000165bf7: pop rcx; add [rax], eax; add [rbp-0x77], cl; ret far; 
0x0000000004211f: pop rcx; add eax, 0x17abcb; ret; 
0x00000000042484: pop rcx; add eax, 0x17af06; ret; 
0x00000000042439: pop rcx; add eax, 0x17af49; ret; 
0x00000000042414: pop rcx; add eax, 0x17af72; ret; 
0x000000000af014: pop rcx; and al, 0x0; add [rbp-0x77], cl; ret far; 
0x0000000018ffe9: pop rcx; jmp qword ptr [rdx-0x2f]; 
0x0000000018f9bc: pop rcx; jmp qword ptr [rdx-0xf]; 
0x0000000007a9d3: pop rcx; jns short 0x000000000007a9d0; jmp qword ptr [rsi+0xf]; 
0x00000000092046: pop rcx; lea rbx, [rsi+0x1]; mov rdi, r15; movzx esi, byte ptr [rsi]; call qword ptr [rax+0x18]; 
0x0000000011cc0f: pop rcx; lock dec dword ptr [rax-0x7b]; shl byte ptr [rax+rdi+0x48], 0x39; ret; 
0x00000000125a02: pop rcx; mov [0x4c1989416401000c], eax; mov eax, eax; pop rbx; ret; 
0x00000000120513: pop rcx; mov ecx, 0xd8f7000c; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000147851: pop rcx; mov rdi, [rsp+0x8]; mov r12d, eax; mov rax, [rdi+0x8]; call qword ptr [rax+0x20]; 
0x000000000a1cb3: pop rcx; movsd [rdi], [rsi]; add [rax], al; cmove rax, rdx; ret; 
0x0000000017f137: pop rcx; or al, [rax]; add [rbp-0x77], cl; ret far; 
0x00000000119180: pop rcx; pop rbp; pop r12; pop r13; ret; 
0x000000001025ae: pop rcx; pop rbx; ret; 
0x00000000134836: pop rcx; rol byte ptr [rbx-0x7cbea817], 0x1; sti; or [rcx+0xf], eax; ret far; 
0x0000000015390d: pop rcx; std; jmp qword ptr [rsi+0x66]; 
0x000000000f1fc6: pop rcx; xor eax, eax; pop rbp; ret; 
0x000000001663f9: pop rdi; adc [rdx+0x9], dh; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000010dc72: pop rdi; add [rax], al; add [rax-0x1], bh; ret; 
0x00000000192fc2: pop rdi; add [rcx-0x9], eax; ret; 
0x00000000051bcb: pop rdi; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x00000000041271: pop rdi; and [rcx+rcx*4-0x28], cl; ret; 
0x000000001848e2: pop rdi; and ch, al; std; xlat [rbx]; ret; 
0x0000000011f160: pop rdi; call rax; 
0x000000000834f6: pop rdi; idiv ecx; jmp qword ptr [rsi+0xf]; 
0x0000000012ec0d: pop rdi; idiv edi; jmp qword ptr [rsi+0x2e]; 
0x00000000115ac0: pop rdi; idiv edi; mov eax, 0x1; add rsp, 0x8; ret; 
0x00000000167e19: pop rdi; in al, dx; mov [rdi-0xc], rcx; mov [rdi-0x4], edx; ret; 
0x00000000167c29: pop rdi; in eax, dx; mov [rdi-0xb], rcx; mov [rdi-0x4], edx; ret; 
0x000000000bc25d: pop rdi; jge short 0x00000000000bc257; jmp qword ptr [rsi+0x66]; 
0x0000000003472d: pop rdi; jmp rax; 
0x000000000e3104: pop rdi; mov eax, 0x3a; syscall; 
0x00000000167a49: pop rdi; out dx, al; mov [rdi-0xa], rcx; mov [rdi-0x4], edx; ret; 
0x00000000167879: pop rdi; out dx, eax; mov [rdi-0x9], r8; mov [rdi-0x4], edx; ret; 
0x00000000167975: pop rdi; out dx, eax; mov [rdi-0x9], rcx; mov [rdi-0x1], dl; ret; 
0x000000001678c1: pop rdi; out dx, eax; mov [rdi-0x9], rcx; mov [rdi-0x4], edx; ret; 
0x00000000024922: pop rdi; pop rbp; ret; 
0x000000001048ad: pop rdi; ret far; 
0x00000000023b72: pop rdi; ret; 
0x00000000166c79: pop rdi; shl byte ptr [rdx+0x13], 0x1; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000016634b: pop rdi; shl byte ptr [rdx+0xe], 0x1; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000004ca27: pop rdi; std; jmp qword ptr [rsi+0xf]; 
0x000000000e321f: pop rdx; adc [rip+0x142b800], ecx; add [rax], al; syscall; 
0x00000000051c99: pop rdx; add rsp, 0x38; pop rbx; pop rbp; ret; 
0x000000001149c0: pop rdx; add rsp, 0x38; ret; 
0x000000001521af: pop rdx; call qword ptr [rax+0x20]; 
0x00000000162053: pop rdx; cmp eax, [rip+0x3e74e800]; out dx, al; dec dword ptr [rax-0x77]; ret; 
0x00000000132242: pop rdx; fdivr st, st(7); jmp qword ptr [rsi+0x2e]; 
0x0000000003d932: pop rdx; idiv bh; jmp qword ptr [rsi+0x2e]; 
0x000000000a7af9: pop rdx; or [rax], eax; add bh, dh; ret; 
0x00000000119cbb: pop rdx; or [rcx-0xa], al; ret; 
0x000000000b6daa: pop rdx; or dword ptr [rdi], 0x0; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000123202: pop rdx; out dx, eax; dec dword ptr [rax-0x77]; ret; 
0x00000000047682: pop rdx; outsb dx, [rsi]; sbb al, [rax]; syscall; 
0x00000000119241: pop rdx; pop r12; ret; 
0x0000000015f7e6: pop rdx; pop rbx; ret; 
0x000000001025ad: pop rdx; pop rcx; pop rbx; ret; 
0x000000000e5a42: pop rdx; ret far; 
0x000000000b998d: pop rdx; str [rbx+0x63]; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000cf655: pop rdx; test al, 0xf0; jne short 0x00000000000cf680; lea rax, [rdi-0x10]; ret; 
0x0000000009f3d9: pop rdx; xor eax, eax; pop rbp; pop r12; ret; 
0x000000000a900e: pop rsi; adc [rax], al; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000092049: pop rsi; add [rcx+rcx*4-0x1], ecx; movzx esi, byte ptr [rsi]; call qword ptr [rax+0x18]; 
0x000000000920bc: pop rsi; add [rdi], ecx; mov dh, 0x36; call qword ptr [rax+0x18]; 
0x00000000197186: pop rsi; add eax, 0x27508; ret; 
0x000000001989b2: pop rsi; add eax, 0x5b050f00; ret; 
0x000000001988f7: pop rsi; add eax, 0xdb854800; jne short 0x00000000001988e0; pop rbx; ret; 
0x0000000013d63e: pop rsi; and al, 0xff; jmp qword ptr [rsi+0x66]; 
0x0000000012dfbe: pop rsi; fcomip st, st(5); jmp qword ptr [rsi+0xf]; 
0x000000000d7203: pop rsi; fdiv st(7), st; jmp qword ptr [rsi+0xf]; 
0x0000000004f854: pop rsi; jmp qword ptr [rsi+0x2e]; 
0x00000000049e20: pop rsi; jmp qword ptr [rsi+0xf]; 
0x000000000dd42f: pop rsi; jmp rax; 
0x000000000ec401: pop rsi; jne short 0x00000000000ec430; mov byte ptr [rdi+0x8], 0x19; mov eax, 0x1; ret; 
0x0000000009c689: pop rsi; lea rdx, [rip+0x1127d7]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000108f5e: pop rsi; mov al, 0xf2; jmp qword ptr [rsi+0xf]; 
0x00000000091969: pop rsi; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp+0x18]; 
0x0000000003472b: pop rsi; pop r15; jmp rax; 
0x00000000024920: pop rsi; pop r15; pop rbp; ret; 
0x00000000023b70: pop rsi; pop r15; ret; 
0x0000000002604f: pop rsi; ret; 
0x0000000006ac10: pop rsp; adc bl, [rax]; add [rbx-0x5ff7b], cl; jmp qword ptr [rcx+rcx*4+0x2]; 
0x00000000096202: pop rsp; adc eax, 0x10894800; ret; 
0x000000000e7c68: pop rsp; add [rax], al; add al, ch; jmp qword ptr [rdi-0x76b7000d]; 
0x00000000097598: pop rsp; and al, 0x18; mov rdi, r13; mov [rsp+0x10], r10; call qword ptr [rax]; 
0x00000000097912: pop rsp; and al, 0x20; mov [rsp+0x18], r8; call rax; 
0x000000000d02c9: pop rsp; and al, 0xf0; movsd xmm0, [rsp-0x10]; ret; 
0x00000000115fb5: pop rsp; cmp byte ptr [rsi], 0x0; lea rdx, [rsi+0x1]; jne short 0x0000000000115f90; ret; 
0x00000000042350: pop rsp; enter 0x280f, 0xc1; ret; 
0x000000001549d0: pop rsp; fldlg2; jmp qword ptr [rsi+0x66]; 
0x00000000193666: pop rsp; idiv bh; jmp qword ptr [rsi+0xf]; 
0x00000000076157: pop rsp; idiv edi; jmp qword ptr [rsi-0x77]; 
0x000000000846c0: pop rsp; jmp rax; 
0x00000000146142: pop rsp; lea rsi, [rdi+0x48]; mov rdi, r8; mov rax, [rax+0x18]; jmp rax; 
0x0000000009a535: pop rsp; mov rax, r8; pop r13; ret; 
0x0000000004126c: pop rsp; or byte ptr [rax], 0x4c; add ebx, [rdi+0x20]; mov rax, r11; ret; 
0x000000000d4268: pop rsp; pop qword ptr [rdx]; jbe short 0x00000000000d4270; ret; 
0x000000000849ed: pop rsp; pop r13; jmp rax; 
0x0000000007a1a4: pop rsp; pop r13; mov rax, r9; pop r14; ret; 
0x00000000034727: pop rsp; pop r13; pop r14; pop r15; jmp rax; 
0x00000000023b6c: pop rsp; pop r13; pop r14; pop r15; ret; 
0x0000000002604b: pop rsp; pop r13; pop r14; ret; 
0x000000000ef1c5: pop rsp; pop r13; pop r15; ret; 
0x000000000460a5: pop rsp; pop r13; pop rbp; ret; 
0x00000000025bcc: pop rsp; pop r13; ret; 
0x0000000008e261: pop rsp; pop r14; ret; 
0x0000000012cfae: pop rsp; pop rbp; ret; 
0x0000000002f73a: pop rsp; ret; 
0x0000000014fcd0: pop rsp; sbb al, 0xf3; jmp qword ptr [rsi+0x2e]; 
0x000000000b985e: pop rsp; str [rbx+0x63]; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000a5685: pop rsp; syscall; 
0x00000000079300: pop rsp; test al, 0x0; add [rax+0x39], cl; ret; 
0x00000000094a83: popfq; adc eax, 0x5b050f00; ret; 
0x00000000094af3: popfq; adc eax, 0x8b4800; test rax, rax; je short 0x0000000000094b00; call rax; 
0x00000000025a14: popfq; adc eax, [rax]; mov rdi, rbx; call r12; 
0x0000000009f1ca: popfq; add [rax], al; lea rdx, [rip+0xc41bc]; cmovne rax, rdx; ret; 
0x000000000dd3df: popfq; add eax, 0xc1480011; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x0000000002fd8f: popfq; and eax, 0x1f0fffff; add [rax], r8b; ret; 
0x0000000006e269: popfq; cmp dl, 0xff; dec dword ptr [rbx-0x53f63]; jmp qword ptr [rbx+rcx*4]; 
0x0000000005aa6f: popfq; in al, 0xff; jmp qword ptr [rsi+0xf]; 
0x00000000034167: popfq; jl short 0x0000000000034185; add [rax+0x63], cl; jmp qword ptr [rax+rcx*2-0x75]; 
0x00000000034267: popfq; jnp short 0x0000000000034285; add [rax+0x63], cl; jmp qword ptr [rax+rcx*2-0x75]; 
0x000000000bab82: popfq; lea r11, [rip+0xf4a3a]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8cc2: popfq; lea r11, [rip+0xf6726]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b75e2: popfq; lea r11, [rip+0xf7c26]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000006e04f: popfq; loope 0x000000000006e051; inc dword ptr [rcx-0xa]; ret; 
0x0000000007181e: popfq; mov al, [0x850f6ef883fffffa]; call far fword ptr [rdi]; 
0x0000000012feb7: popfq; mov edi, 0x4864000b; add eax, [0x0]; ret; 
0x0000000010af1f: popfq; nop; bnd jmp qword ptr [rsi+0x66]; 
0x000000001173c7: popfq; or dword ptr [rip-0x7ab800], 0x75; adc [rax+0x1], bh; ret; 
0x00000000076156: popfq; pop rsp; idiv edi; jmp qword ptr [rsi-0x77]; 
0x0000000006e26f: popfq; sar dl, 0xff; jmp qword ptr [rbx+rcx*4]; 
0x00000000155cf4: popfq; std; jmp qword ptr [rsi+0xf]; 
0x00000000042675: por mm0, mm1; ret; 
0x0000000004409d: por mm0, mm1; shufpd xmm0, xmm0, 0x1; movups [rdi], xmm0; ret; 
0x00000000042674: por xmm0, xmm1; ret; 
0x0000000004409c: por xmm0, xmm1; shufpd xmm0, xmm0, 0x1; movups [rdi], xmm0; ret; 
0x0000000016d7d2: psllq mm1, [r15]; jg short 0x000000000016d7e7; ret; 
0x00000000170302: psllq mm1, [r15]; jg short 0x0000000000170317; ret; 
0x000000000b6fb5: psllq mm1, [rdi]; jg short 0x00000000000b6fc2; mov [rdi+0xf], ecx; ret; 
0x000000000b7016: psllq mm1, [rdi]; jg short 0x00000000000b7023; mov [rdi+0xf], rcx; ret; 
0x000000000b7118: psllq mm1, [rdi]; jg short 0x00000000000b7124; movdqu [rdi+0xf], xmm2; ret; 
0x000000000b7ca5: psllq mm1, [rdi]; jg short 0x00000000000b7cb2; mov [rdi+0xf], ecx; ret; 
0x000000000b7d06: psllq mm1, [rdi]; jg short 0x00000000000b7d13; mov [rdi+0xf], rcx; ret; 
0x000000000b7e08: psllq mm1, [rdi]; jg short 0x00000000000b7e14; movdqu [rdi+0xf], xmm2; ret; 
0x000000000b8665: psllq mm1, [rdi]; jg short 0x00000000000b8672; mov [rdi+0xf], ecx; lea rax, [rdi+0x12]; ret; 
0x000000000b86e6: psllq mm1, [rdi]; jg short 0x00000000000b86f3; mov [rdi+0xf], rcx; lea rax, [rdi+0x16]; ret; 
0x000000000b87e8: psllq mm1, [rdi]; jg short 0x00000000000b87f4; movdqu [rdi+0xf], xmm2; lea rax, [rdi+0x1e]; ret; 
0x000000000b94d5: psllq mm1, [rdi]; jg short 0x00000000000b94e2; mov [rdi+0xf], ecx; lea rax, [rdi+0x13]; ret; 
0x000000000b9556: psllq mm1, [rdi]; jg short 0x00000000000b9563; mov [rdi+0xf], rcx; lea rax, [rdi+0x17]; ret; 
0x000000000b9658: psllq mm1, [rdi]; jg short 0x00000000000b9664; movdqu [rdi+0xf], xmm2; lea rax, [rdi+0x1f]; ret; 
0x000000000ba2c5: psllq mm1, [rdi]; jg short 0x00000000000ba2d2; mov [rdi+0xf], ecx; ret; 
0x000000000ba326: psllq mm1, [rdi]; jg short 0x00000000000ba333; mov [rdi+0xf], rcx; ret; 
0x000000000ba428: psllq mm1, [rdi]; jg short 0x00000000000ba434; movdqu [rdi+0xf], xmm2; ret; 
0x000000000badb5: psllq mm1, [rdi]; jg short 0x00000000000badc2; mov [rdi+0xf], ecx; ret; 
0x000000000bae16: psllq mm1, [rdi]; jg short 0x00000000000bae23; mov [rdi+0xf], rcx; ret; 
0x000000000baf18: psllq mm1, [rdi]; jg short 0x00000000000baf24; movdqu [rdi+0xf], xmm2; ret; 
0x0000000016d7d3: psllq mm1, [rdi]; jg short 0x000000000016d7e7; ret; 
0x00000000170303: psllq mm1, [rdi]; jg short 0x0000000000170317; ret; 
0x0000000005387b: psubd mm7, mm7; call qword ptr [rax-0x776e74b7]; 
0x000000000d4512: psubsb mm3, mm0; add eax, 0x89480000; ret; 
0x000000000467c0: psubsw mm1, [rdx]; idiv edi; jmp qword ptr [rsi+0x2e]; 
0x00000000086ec6: punpckhqdq xmm0, xmm0; mov [rax+0x10], rcx; mov [rax+0x40], rdx; movups [rax], xmm0; ret; 
0x0000000009191f: punpckhqdq xmm0, xmm0; mov [rdi+0x18], rdx; mov [rdi+0x48], rax; movups [rdi+0x8], xmm0; ret; 
0x000000000271a7: punpckldq mm1, mm3; punpcklqdq xmm0, xmm1; movups [rdx+0x48], xmm0; ret; 
0x000000000271a6: punpckldq xmm1, xmm3; punpcklqdq xmm0, xmm1; movups [rdx+0x48], xmm0; ret; 
0x00000000157602: punpcklqdq xmm0, xmm0; mov [rdi+0x8], rax; mov [rdi+0x28], edx; movups [rdi+0x18], xmm0; ret; 
0x0000000008e681: punpcklqdq xmm0, xmm0; movups [rbx+0x8], xmm0; pop rbx; ret; 
0x00000000047d14: punpcklqdq xmm0, xmm1; mov eax, r8d; movups [rdi], xmm0; ret; 
0x00000000149118: punpcklqdq xmm0, xmm1; movaps [rsp], xmm0; call qword ptr [rax+0x8]; 
0x00000000116db2: punpcklqdq xmm0, xmm1; movups [rdi], xmm0; ret; 
0x000000000271aa: punpcklqdq xmm0, xmm1; movups [rdx+0x48], xmm0; ret; 
0x000000000e4243: push 0x0; add [rax], al; syscall; 
0x0000000015f872: push 0x0; call qword ptr [rax+0x1e0]; 
0x000000000d0e9c: push 0x0; lea r8, [rsp+0x40]; call qword ptr [rax+0x1e0]; 
0x000000000bd359: push 0x0; lea r9, [rsp+0x18]; call r13; 
0x000000000bd058: push 0x0; lea rcx, [rax+0x1]; lea r9, [rsp+0x28]; call rbx; 
0x000000000bd1b2: push 0x0; lea rcx, [rax+0x4]; lea r9, [rsp+0x18]; call rbx; 
0x000000000bd5cb: push 0x0; lea rcx, [rax+0x4]; lea r9, [rsp+0x20]; call rbx; 
0x0000000015f869: push 0x0; lea rcx, [rsi+0x398]; push 0x0; call qword ptr [rax+0x1e0]; 
0x0000000015f818: push 0x0; lea rcx, [rsi+0x398]; push 0x2; call qword ptr [rax+0x1e0]; 
0x000000000cafba: push 0x0; mov r9, [rsp+0x10]; call r14; 
0x00000000024c70: push 0x0; mov r9, r14; mov rsi, [rsp+0x18]; xor r8d, r8d; call rbx; 
0x0000000002974c: push 0x0; mov rcx, [rsp+0x20]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x48]; call r13; 
0x00000000160273: push 0x0; mov rdi, r12; push 0x2; xor r13d, r13d; call qword ptr [rax+0x1e0]; 
0x000000000273ec: push 0x0; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; mov rax, [rsp+0x28]; call rax; 
0x000000000d0e9a: push 0x0; push 0x0; lea r8, [rsp+0x40]; call qword ptr [rax+0x1e0]; 
0x00000000152f1b: push 0x0; push 0x3c; lea r9, [rsp+0x3a]; call qword ptr [rax]; 
0x0000000015fd00: push 0x0; push rax; mov rax, [rip+0x8c156]; mov r8, [rbx+0x10]; call qword ptr [rax+0x1e0]; 
0x000000000bd55f: push 0x1; lea r9, [rsp+0x20]; call rbx; 
0x000000000bd1b0: push 0x1; push 0x0; lea rcx, [rax+0x4]; lea r9, [rsp+0x18]; call rbx; 
0x000000000bd5c9: push 0x1; push 0x0; lea rcx, [rax+0x4]; lea r9, [rsp+0x20]; call rbx; 
0x000000000cafb8: push 0x1; push 0x0; mov r9, [rsp+0x10]; call r14; 
0x000000000bd55b: push 0x1; xor edx, edx; push 0x1; lea r9, [rsp+0x20]; call rbx; 
0x000000000bd354: push 0x1; xor r8d, r8d; push 0x0; lea r9, [rsp+0x18]; call r13; 
0x0000000015193c: push 0x1e; lea r8, [rip-0x6b85]; lea rdx, [rip-0x6b6c]; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x00000000151a77: push 0x1e; lea rdx, [rip+0x4150]; mov r9, rbp; mov esi, 0x9; call qword ptr [rax]; 
0x00000000151bac: push 0x1e; lea rdx, [rip-0x6d95]; mov esi, 0x2; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x00000000151cec: push 0x1e; lea rdx, [rip-0x6ed5]; mov esi, 0x3; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x00000000151e49: push 0x1e; lea rdx, [rip-0x6ff2]; mov esi, 0x6; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x00000000151fe9: push 0x1e; lea rdx, [rip-0x7192]; mov esi, 0x7; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x0000000015224e: push 0x1e; lea rdx, [rip-0x7247]; mov esi, 0x8; lea r9, [rsp+0x14]; call qword ptr [rax]; 
0x00000000152382: push 0x1e; lea rdx, [rip-0x75ab]; mov esi, 0xa; lea r9, [rsp+0x1c]; call qword ptr [rax]; 
0x000000000ebd7a: push 0x1f0f10eb; add [rax-0x7d], cl; ret; 
0x000000001491a7: push 0x1f0f66c3; add [rax], r8b; xor eax, eax; ret; 
0x0000000014fd1a: push 0x1f0fe1ff; add bl, dh; nop edx, edi; ret; 
0x000000000279e9: push 0x24748b48; pop rax; mov rdi, [rsp+0x60]; mov rax, [rsp+0x20]; call rax; 
0x0000000014fd11: push 0x2; add rdi, 0x68; jmp rcx; 
0x0000000015f821: push 0x2; call qword ptr [rax+0x1e0]; 
0x00000000160278: push 0x2; xor r13d, r13d; call qword ptr [rax+0x1e0]; 
0x00000000152f1d: push 0x3c; lea r9, [rsp+0x3a]; call qword ptr [rax]; 
0x000000000e6388: push 0x41ffffff; call qword ptr [rsp+0x20]; 
0x00000000153971: push 0x4334864; and eax, 0x28; jne short 0x0000000000153982; add rsp, 0x78; ret; 
0x000000001539e1: push 0x4334864; and eax, 0x28; jne short 0x00000000001539f2; add rsp, 0x78; ret; 
0x00000000153a51: push 0x4334864; and eax, 0x28; jne short 0x0000000000153a62; add rsp, 0x78; ret; 
0x00000000153ab2: push 0x4334864; and eax, 0x28; jne short 0x0000000000153ac3; add rsp, 0x78; ret; 
0x00000000153b16: push 0x4334864; and eax, 0x28; jne short 0x0000000000153b27; add rsp, 0x78; ret; 
0x00000000153b81: push 0x4334864; and eax, 0x28; jne short 0x0000000000153b92; add rsp, 0x78; ret; 
0x00000000153c04: push 0x4334864; and eax, 0x28; jne short 0x0000000000153c15; add rsp, 0x78; ret; 
0x0000000014ff63: push 0x438b48ff; jo short 0x000000000014fef3; imul ecx, [rax+0xf], 0xffffffcd; call qword ptr [rax+0x18]; 
0x000000001218d4: push 0x48000004; mov dword ptr [rip+0xcaa7d], 0x0; add rsp, 0x8; ret; 
0x0000000014d3b0: push 0x48ee8948; mov edi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x10]; 
0x000000000ded81: push 0x48ff894c; mov esi, [rsp+0x60]; call r12; 
0x000000000bab56: push 0x4a; str [rbx+0x63]; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000001509c2: push 0x4c388b48; mov esi, edi; mov rax, [rdi+0x38]; call qword ptr [rax+0x8]; 
0x000000000b7a32: push 0x5; add [rax], al; ret; 
0x00000000166cab: push 0x5; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000013dcb2: push 0x5b000001; pop rbp; pop r12; pop r13; ret; 
0x00000000055fa2: push 0x5c415d5b; pop r13; pop r14; pop r15; ret; 
0x000000000bcfb0: push 0x5c415d5b; pop r13; ret; 
0x0000000015097d: push 0x60438b48; mov dword ptr [rbx+0x58], 0x0; mov esi, [rbx+0x88]; mov rdi, r15; call qword ptr [rax+0x28]; 
0x0000000010c71f: push 0x6076110f; movdqu xmm7, [rdi+0x78]; movups [rsi+0x70], xmm7; ret; 
0x0000000010c523: push 0x60894408; or al, 0x31; ror byte ptr [rcx+0x5d5b0453], 0x41; pop rsp; ret; 
0x000000000ea58e: push 0x6348000c; add al, 0x82; add rax, rdx; notrack jmp rax; 
0x00000000077877: push 0x63480013; add al, 0x88; add rax, rbx; jmp rax; 
0x000000000778d3: push 0x63480013; add al, 0x90; add rax, rbx; jmp rax; 
0x00000000166e96: push 0x63490005; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000b8b2a: push 0x6349000f; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000778d2: push 0x68; adc eax, [rax]; movsxd rax, [rax+rdx*4]; add rax, rbx; jmp rax; 
0x000000000983cd: push 0x6e0f4966; ret; 
0x000000001017a7: push 0x7601fb83; movsxd eax, [rcx-0x77]; ret far; 
0x0000000010c773: push 0x7e6f0ff3; jo short 0x000000000010c789; adc [rdi+0x78], edi; ret; 
0x000000001538fb: push 0xc334864; and eax, 0x28; jne short 0x000000000015390c; add rsp, 0x78; ret; 
0x00000000034306: push 0xfff6348; mov bh, 0x4; js short 0x0000000000034293; loopne 0x0000000000034313; ret; 
0x0000000017c5f4: push 0xffffffff80000006; cmp [rcx], al; sbb rax, 0xffffffffffffffff; ret; 
0x000000001476d4: push 0xffffffff850000e6; shl byte ptr [rbx+rdx*4+0x48], 0x8b; or [r8-0x77], r9b; out dx, eax; call qword ptr [rax+0x20]; 
0x000000000e5864: push 0xffffffff89000cb3; test byte ptr [rax+0x63], 0x4; mov dl, 0x48; add eax, edx; notrack jmp rax; 
0x0000000014522d: push 0xffffffff894cd231; out 0x48, al; mov edi, ebx; mov rcx, r13; call r10; 
0x00000000123a22: push 0xffffffffb70fff89; add al, 0x78; and ax, 0x1000; movzx eax, ax; ret; 
0x0000000012399a: push 0xffffffffb70fff89; add al, 0x78; and ax, 0x100; movzx eax, ax; ret; 
0x00000000123912: push 0xffffffffb70fff89; add al, 0x78; and ax, 0x2000; movzx eax, ax; ret; 
0x000000001236d2: push 0xffffffffb70fff89; add al, 0x78; and ax, 0x200; movzx eax, ax; ret; 
0x000000001237f2: push 0xffffffffb70fff89; add al, 0x78; and ax, 0x4000; movzx eax, ax; ret; 
0x000000001234a2: push 0xffffffffb70fff89; add al, 0x78; and ax, 0x400; movzx eax, ax; ret; 
0x00000000123762: push 0xffffffffb70fff89; add al, 0x78; and ax, 0x8000; movzx eax, ax; ret; 
0x00000000123532: push 0xffffffffb70fff89; add al, 0x78; and eax, 0x1; ret; 
0x000000001235b2: push 0xffffffffb70fff89; add al, 0x78; and eax, 0x2; movzx eax, ax; ret; 
0x00000000123882: push 0xffffffffb70fff89; add al, 0x78; and eax, 0x4; movzx eax, ax; ret; 
0x00000000123412: push 0xffffffffb70fff89; add al, 0x78; and eax, 0x8; movzx eax, ax; ret; 
0x00000000115638: push 0xffffffffc764000d; add [rsi], ah; add [rax], al; add [rax-0x1], bh; ret; 
0x00000000115668: push 0xffffffffd8f7000d; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000555ac: push 0xffffffffd8f70019; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000cf647: push 0xfffffffff0478d48; ret; 
0x000000000f625b: push 0xffffffffffdd9fe8; call far fword ptr [rdx+0x59]; 
0x000000000c59d9: push 0xfffffffffff279e9; call qword ptr [rax+0x41f5894d]; 
0x0000000004b431: push 0xfffffffffff359e9; jmp qword ptr [rsi+0xf]; 
0x0000000004e1a1: push 0xfffffffffff411e9; jmp qword ptr [rsi+0xf]; 
0x000000000eebe1: push 0xfffffffffffca8e9; jmp qword ptr [rsi+0xf]; 
0x000000000552a4: push 0xffffffffffff3ee9; jmp qword ptr [rsi+0xf]; 
0x0000000009e3a2: push 0xffffffffffffff8a; cli; jmp qword ptr [rsi+0x2e]; 
0x000000000e4612: push 0xffffffffffffffce; adc [rax], al; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000014b89e: push 0xffffffffffffffed; jmp qword ptr [rsi+0xf]; 
0x0000000013df94: push 0xffffffffffffffef; jmp qword ptr [rsi+0xf]; 
0x00000000102888: push qword ptr [rax+rbx+0x64]; mov dword ptr [0x38], 0x0; mov dword ptr fs:[0x40], 0x0; mov eax, r8d; ret; 
0x000000000b663f: push qword ptr [rax]; leave; mov [rax], cl; mov rax, rdi; ret; 
0x0000000015f7cf: push qword ptr [rax]; mov rax, [rip+0x8c688]; mov rdi, [rdi]; call qword ptr [rax+0x1e8]; 
0x000000001173cd: push qword ptr [rbp+0x10]; mov eax, 0x1; ret; 
0x000000001924b7: push qword ptr [rbp+0x1a]; xor eax, eax; ret; 
0x00000000119bac: push qword ptr [rbp+0x27]; mov rdi, [rbp]; call rbx; 
0x0000000010dc19: push qword ptr [rbp+0x34]; and ch, 0x1; jne short 0x000000000010dc68; mov eax, 0x10c; syscall; 
0x0000000011aae0: push qword ptr [rbp+0x3e]; mov rdi, [r14]; call rbx; 
0x0000000011b490: push qword ptr [rbp+0x44]; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x00000000184cd9: push qword ptr [rbp+0x4]; vzeroupper; ret; 
0x0000000011b461: push qword ptr [rbp+0x4b]; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000010c79d: push qword ptr [rbp+0x5]; mov [rdi], si; xor eax, eax; ret; 
0x0000000011ab0c: push qword ptr [rbp+0x69]; mov rdi, [r14]; call rbx; 
0x00000000105f98: push qword ptr [rbp+rax-0x18]; nop; ret; 
0x0000000006c25d: push qword ptr [rbp+rax-0x18]; ret far; 
0x00000000062f40: push qword ptr [rbp+rcx+0x44]; mov eax, eax; ret; 
0x00000000198481: push qword ptr [rbp+rdx+0x48]; mov eax, [rdi+0x20]; test rax, rax; je short 0x0000000000198494; call rax; 
0x00000000197b7d: push qword ptr [rbp+rdx-0x18]; ret far; 
0x00000000056556: push qword ptr [rbp-0x11]; mov rax, rdx; ret; 
0x00000000137b82: push qword ptr [rbp-0x15]; pop rbx; ret; 
0x00000000141073: push qword ptr [rbp-0x16]; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000012b945: push qword ptr [rbp-0x1a]; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000092a10: push qword ptr [rbp-0x40]; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000043410: push qword ptr [rbx+0x1]; ret; 
0x00000000054f36: push qword ptr [rbx+0x3]; xor eax, eax; ret; 
0x000000000d2f9c: push qword ptr [rcx]; dec dword ptr [rax-0x7b]; ror byte ptr [rdi], 0x85; ret; 
0x000000001120fa: push qword ptr [rcx]; rcr byte ptr [rbx+0x5d], 0x41; pop rsp; ret; 
0x0000000012b99d: push qword ptr [rcx]; ror byte ptr [rax-0x7d], 0xc4; or [rbp+0x41], bl; pop rsp; ret; 
0x0000000014faaa: push qword ptr [rcx]; ror byte ptr [rax-0x7d], 0xc4; or cl, ch; jp short 0x000000000014fad2; jmp qword ptr [rsi+0x2e]; 
0x0000000008e493: push qword ptr [rcx]; ror byte ptr [rax-0x7d], 0xc4; sbb [rbx+0x5d], bl; ret; 
0x0000000015593e: push qword ptr [rcx]; ror byte ptr [rcx+0x1], 0xdd; call rbp; 
0x000000000685be: push qword ptr [rcx]; shr cl, 0xb5; ret far; 
0x0000000011535c: push qword ptr [rdi+0x1]; ret; 
0x000000000e316b: push qword ptr [rdi+0x22]; hlt; mov edi, edx; mov eax, r8d; syscall; 
0x0000000011f804: push qword ptr [rdi+0x31]; mov r8d, eax; mov eax, r8d; ret; 
0x000000000e2e7c: push qword ptr [rdi+0x31]; ret; 
0x000000000dd15a: push qword ptr [rdi+0x3]; ret; 
0x0000000010e84c: push qword ptr [rdi+0x41]; ret; 
0x00000000113da9: push qword ptr [rdi+0x4]; ret; 
0x00000000043491: push qword ptr [rdi+0x4c]; ret; 
0x00000000113b96: push qword ptr [rdi+0x4f]; ret; 
0x0000000004825c: push qword ptr [rdi+0x51]; ret; 
0x0000000010e007: push qword ptr [rdi+0x56]; ret; 
0x00000000062ec0: push qword ptr [rdi+0x5]; ret; 
0x000000000e2c6f: push qword ptr [rdi+0x5e]; ret; 
0x0000000011891b: push qword ptr [rdi+0x62]; pop rbx; pop rbp; ret; 
0x00000000114562: push qword ptr [rdi+0x63]; ret; 
0x00000000120bcf: push qword ptr [rdi+0x66]; ret; 
0x00000000120345: push qword ptr [rdi+0x68]; ret; 
0x0000000010d4ef: push qword ptr [rdi+0x6]; ret; 
0x000000000e2d22: push qword ptr [rdi+0x6b]; ret; 
0x00000000114faf: push qword ptr [rdi+0x6e]; ret; 
0x0000000011f275: push qword ptr [rdi+0x70]; ret; 
0x0000000011301f: push qword ptr [rdi+0x76]; ret; 
0x0000000010d54e: push qword ptr [rdi+0x7]; ret; 
0x00000000043445: push qword ptr [rdi+0x8]; ret; 
0x0000000010d9f4: push qword ptr [rdi+0x9]; ret; 
0x00000000062ef3: push qword ptr [rdi+0xa]; ret; 
0x0000000012e7e2: push qword ptr [rdi+0xb]; ret; 
0x00000000146e8c: push qword ptr [rdi+rax+0x48]; mov eax, [rdi+0x8]; call qword ptr [rax+0x20]; 
0x00000000146cda: push qword ptr [rdi+rcx+0x48]; mov eax, [rdi+0x8]; call qword ptr [rax+0x20]; 
0x00000000082af6: push qword ptr [rdi+rcx+0x48]; mov eax, [rsp+0x8]; add rsp, 0x18; ret; 
0x000000001191ae: push qword ptr [rdi+rcx+0x5d]; lea rax, [rip+0xd6747]; pop r12; pop r13; ret; 
0x000000001469fe: push qword ptr [rdi+rdi*2+0x48]; mov eax, [rdi+0x38]; call qword ptr [rax+0x18]; 
0x00000000118906: push qword ptr [rdi+rsi+0x41]; mov edx, ebx; mov rdi, rbp; mov eax, 0x9; syscall; 
0x000000000dd0ac: push qword ptr [rdi-0x38]; add rsp, 0x8; pop rbp; pop r12; ret; 
0x0000000010d3e7: push qword ptr [rdi-0x40]; add rsp, 0x8; pop rbp; pop r12; ret; 
0x000000001662ec: push qword ptr [rdx+0x7]; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000000e6368: push qword ptr [rdx+rcx+0x48]; mov edi, ebx; call r15; 
0x00000000147276: push qword ptr [rip+0x758d4]; lea r9, [rsp+0x2c]; call qword ptr [rax]; 
0x00000000147270: push qword ptr [rip+0x758e2]; push qword ptr [rip+0x758d4]; lea r9, [rsp+0x2c]; call qword ptr [rax]; 
0x00000000147133: push qword ptr [rip+0x75a17]; lea r9, [rsp+0x2c]; call qword ptr [rax]; 
0x0000000014712d: push qword ptr [rip+0x75a25]; push qword ptr [rip+0x75a17]; lea r9, [rsp+0x2c]; call qword ptr [rax]; 
0x000000000fccb8: push qword ptr [rip+0xf451d77]; mov dh, 0xff; movsxd rax, [r14+r15*4]; add rax, r14; notrack jmp rax; 
0x00000000112d5a: push qword ptr [rsi+0x1b]; cmp eax, 0xffffffa1; je short 0x0000000000112d68; neg eax; ret; 
0x00000000112faa: push qword ptr [rsi+0x1b]; cmp eax, 0xffffffa1; je short 0x0000000000112fb8; neg eax; ret; 
0x0000000011873b: push qword ptr [rsi+rax-0x77]; cmp eax, 0xd3c04; ret; 
0x00000000121fdf: push qword ptr [rsi+rbp-0x7d]; rol byte ptr [rcx], 0x66; mov [rdx], eax; ret; 
0x0000000006709d: push qword ptr [rsi+rcx-0x18]; ret far; 
0x00000000047397: push qword ptr [rsi+rdi+0x31]; rol byte ptr [rax+0x775003f], 0x5b; ret; 
0x0000000014783d: push qword ptr [rsp+0xe8]; mov [rsp+0x18], rdi; lea r9, [rsp+0x40]; call qword ptr [rax]; 
0x00000000147836: push qword ptr [rsp+0xe8]; push qword ptr [rsp+0xe8]; mov [rsp+0x18], rdi; lea r9, [rsp+0x40]; call qword ptr [rax]; 
0x0000000010eb12: push qword ptr [rsp+rbx*8+0x48]; mov ebp, edi; mov rdi, rbp; mov eax, 0x4f; syscall; 
0x00000000055070: push r10; ret; 
0x00000000152cc9: push r12; lea r9, [rsp+0x3a]; call qword ptr [rax]; 
0x0000000002932d: push r12; mov r9, [rsp+0x18]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; call rbx; 
0x0000000002c64b: push r12; mov r9, [rsp+0x18]; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; call rbx; 
0x0000000002ddb0: push r12; mov r9, [rsp+0x20]; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; call rbx; 
0x0000000002a88d: push r12; mov r9, [rsp+0x30]; mov rsi, [rsp+0x48]; mov rdi, [rsp+0x40]; call rbx; 
0x00000000029c51: push r12; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x48]; call rbx; 
0x00000000152cc7: push r13; push r12; lea r9, [rsp+0x3a]; call qword ptr [rax]; 
0x000000000284b0: push r14; mov r9, [rsp+0x20]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; call rbx; 
0x0000000009e8e8: push r8; add [rbp-0x2d], esi; mov rdi, rsi; call rax; 
0x00000000115944: push r8; sbb [rax-0x77], cl; and al, 0x20; mov eax, 0x65; syscall; 
0x0000000019840b: push r9; add eax, 0x58d4800; ret; 
0x00000000152f40: push rax; adc [rax-0x75], cl; or [r8-0x77], r9b; out dx, eax; call qword ptr [rax+0x20]; 
0x00000000086e8e: push rax; adc [rax-0x77], cl; ret; 
0x00000000148c8f: push rax; adc [rbp+0x28840fc0], al; add [rax], eax; add [rcx+rcx*4-0x19], cl; call qword ptr [rbx]; 
0x000000000935c9: push rax; adc [rbx-0x2fd6efb9], cl; ret; 
0x00000000151a7c: push rax; add [r8], al; mov r9, rbp; mov esi, 0x9; call qword ptr [rax]; 
0x00000000094ea5: push rax; add [rax-0x77], ecx; adc eax, 0x157422; ret; 
0x000000000bce5e: push rax; add [rax-0x77], ecx; ret; 
0x000000000c5d55: push rax; add [rax], eax; add [rax+0x29], cl; ret far; 
0x0000000009e8e9: push rax; add [rbp-0x2d], esi; mov rdi, rsi; call rax; 
0x0000000013c607: push rax; add [rcx+rcx*4-0x40], ecx; mov byte ptr [r8+0x2], 0x0; ret; 
0x000000000b121d: push rax; add al, [rax]; add [rbp-0x77], cl; ret far; 
0x000000000a8a96: push rax; add al, bl; nop [rax]; mov [rax], ecx; ret; 
0x00000000168757: push rax; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168756: push rax; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000015248f: push rax; and [rax-0x75], cl; jge short 0x0000000000152495; mov rax, [rdi+0x8]; call qword ptr [rax+0x20]; 
0x0000000014697f: push rax; call qword ptr [rax+0x20]; 
0x00000000024cf0: push rax; call rbx; 
0x00000000157478: push rax; cld; mov [rdi+0x18], rax; mov eax, r8d; ret; 
0x0000000007d28b: push rax; cli; jmp qword ptr [rsi-0x70]; 
0x0000000007e858: push rax; cmp [rax+0x39], cl; ret; 
0x0000000012a2dc: push rax; fdivr st, st(7); dec dword ptr [rcx]; ret; 
0x000000000fde32: push rax; idiv edi; jmp qword ptr [rsi+0x2e]; 
0x0000000011f60f: push rax; idiv edi; mov rax, [rsp]; add rsp, 0x28; ret; 
0x00000000074e0c: push rax; inc esi; test [rax], eax; idiv edi; jmp qword ptr [rax]; 
0x000000001113c2: push rax; jmp qword ptr [rsi-0x7d]; 
0x00000000150632: push rax; mov [rsi+0x10], rax; ret; 
0x000000001131f4: push rax; mov [rsi+0x50], rcx; xor rax, 0x20; mov [rsi+0x48], rax; ret; 
0x000000001481bf: push rax; mov dword ptr [rsi], 0x10; mov [rsi+0x8], rax; ret; 
0x0000000007331c: push rax; mov edx, [rdi]; add [rbx-0x51f73], cl; jmp qword ptr [rcx+rcx*4+0x8]; 
0x0000000010461d: push rax; mov rax, [rbp-0x1e0]; mov rcx, [r12]; call rax; 
0x0000000015fd02: push rax; mov rax, [rip+0x8c156]; mov r8, [rbx+0x10]; call qword ptr [rax+0x1e0]; 
0x0000000002d96e: push rax; mov rax, [rsp+0x18]; call rax; 
0x0000000002c271: push rax; mov rax, [rsp+0x20]; call rax; 
0x000000001509de: push rax; mov rcx, [rsp+0x10]; mov rdi, r15; call rcx; 
0x00000000029757: push rax; mov rdi, [rsp+0x48]; call r13; 
0x00000000029c57: push rax; mov rdi, [rsp+0x48]; call rbx; 
0x000000000276a1: push rax; mov rdi, [rsp+0x58]; call r14; 
0x000000000284bb: push rax; mov rdi, [rsp+0x58]; call rbx; 
0x000000000290c3: push rax; mov rdi, [rsp+0x58]; mov rax, [rsp+0x20]; call rax; 
0x000000000273f2: push rax; mov rdi, [rsp+0x58]; mov rax, [rsp+0x28]; call rax; 
0x00000000028245: push rax; mov rdi, [rsp+0x58]; mov rax, [rsp+0x30]; call rax; 
0x00000000144eda: push rax; mov rdx, [rsp+0xe0]; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; call qword ptr [rsp+0x68]; 
0x000000000d04b6: push rax; mov rsi, r15; mov rdi, rbp; call rbx; 
0x0000000012bde6: push rax; mov rsi, rdx; call rax; 
0x000000001258b8: push rax; movsb [rdi], [rsi]; or al, 0x0; syscall; 
0x00000000086ed0: push rax; movups [rax], xmm0; ret; 
0x0000000014f953: push rax; out dx, al; dec dword ptr [rax-0x77]; ret; 
0x0000000014fa34: push rax; out dx, al; jmp qword ptr [rsi+0xf]; 
0x0000000014e7c1: push rax; pop rbx; pop rbp; pop r12; ret; 
0x00000000029c50: push rax; push r12; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x48]; call rbx; 
0x00000000028d1c: push rax; push rbp; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x60]; call rbx; 
0x0000000003c3ac: push rax; ret far; 
0x00000000042047: push rax; ret; 
0x0000000012a7dc: push rax; sar edi, cl; dec dword ptr [rcx]; ret; 
0x00000000115945: push rax; sbb [rax-0x77], cl; and al, 0x20; mov eax, 0x65; syscall; 
0x000000000935ba: push rax; sbb [rbx-0x2fd6efb9], cl; ret; 
0x00000000087615: push rax; sbb [rsi+0x1f], dh; mov rax, [rax+0xe0]; mov esi, 0xffffffff; call qword ptr [rax+0x18]; 
0x00000000088f28: push rax; sbb cl, ch; paddw mm7, mm7; call qword ptr [rax-0x76df377d]; 
0x0000000012cee9: push rax; shr ax, 0xe; and eax, 0x1; ret; 
0x00000000086432: push rax; sub [rax-0x78], al; cmp [rcx+rcx*4-0x38], al; ret; 
0x00000000116ee1: push rax; test dword ptr [rax-0xf89fe06], 0xec74203c; mov byte ptr [rsi-0x1], 0x0; mov rax, r8; ret; 
0x0000000015f2cb: push rax; test rax, rax; je short 0x000000000015f2e3; mov rax, [rip+0x8cb88]; call qword ptr [rax+0x1f8]; 
0x000000001131f8: push rax; xor rax, 0x20; mov [rsi+0x48], rax; ret; 
0x000000000fefed: push rbp; adc [rax+0x63], cl; ret far; 
0x0000000014130b: push rbp; adc [rax-0x7d], cl; ret; 
0x000000000967df: push rbp; adc eax, 0x41ff3100; call qword ptr [rbp]; 
0x00000000049d5e: push rbp; add [rax-0x39], cl; ret; 
0x000000000ff2eb: push rbp; add [rcx+0x6c0f66d0], cl; ret; 
0x000000000eb287: push rbp; add bh, [rcx]; ret far; 
0x000000000ebe7d: push rbp; add cl, [rbp-0x73]; add al, 0x39; ret far; 
0x0000000016b2e7: push rbp; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001693e7: push rbp; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000005676d: push rbp; call qword ptr [rax+0x48068b48]; 
0x0000000012d313: push rbp; mov al, [0x558b48ffef5146e8]; mov al, [0xc583492b135c8d48]; and [rax+0x1], cl; ret; 
0x0000000012d31c: push rbp; mov al, [0xc583492b135c8d48]; and [rax+0x1], cl; ret; 
0x0000000008a828: push rbp; mov eax, 0xc04d8d4c; mov rcx, r14; mov rdi, r15; call r12; 
0x000000000f53e7: push rbp; mov eax, 0xfffa6be9; jmp qword ptr [rsi-0x70]; 
0x00000000120017: push rbp; mov esi, 0xd8f7000c; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000027dfc: push rbp; mov r9, [rsp+0x18]; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x60]; call rbx; 
0x00000000028d1d: push rbp; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x60]; call rbx; 
0x0000000012c9de: push rbp; or byte ptr [rcx+rcx*4-0x16], 0xf; adc [rbp-0x78], edi; call rax; 
0x0000000012c910: push rbp; or byte ptr [rcx+rcx*4-0x16], 0xf; adc [rbp-0x78], esi; call rax; 
0x0000000012c400: push rbp; or byte ptr [rcx+rcx*4-0x16], 0xf; adc [rbp-0x78], esp; call rax; 
0x0000000012c6e8: push rbp; or byte ptr [rcx+rcx*4-0x6], 0xf; adc [rbp-0x78], ecx; call rax; 
0x0000000012c39b: push rbp; or byte ptr [rcx+rcx*4-0xe], 0xf; adc [rbp-0x78], ebp; call rax; 
0x00000000152cc8: push rbp; push r12; lea r9, [rsp+0x3a]; call qword ptr [rax]; 
0x00000000045a47: push rbp; ret far; 
0x0000000011fd17: push rbp; ror dword ptr [rax+rax], 0xf7; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x000000000ec9ca: push rbp; sbb [rdx+rdx*2-0x73], dh; add [rax-0x7d], ecx; ret; 
0x00000000038541: push rbp; sbb eax, [rax]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000605a4: push rbp; sub dh, al; add [rip-0xb9517], ch; jmp qword ptr [rsi-0x70]; 
0x00000000061724: push rbp; sub dh, al; add [rip-0xfd17], ch; jmp qword ptr [rsi-0x70]; 
0x0000000008eaea: push rbp; sub rdx, rsi; mov [rsp], rcx; mov rdi, rbp; call rax; 
0x000000000ff97c: push rbx; adc [rax+0x63], cl; ret far; 
0x00000000031795: push rbx; add [rax-0x7d], ecx; ret; 
0x000000000eb5dd: push rbx; add [rcx-0x7f], ecx; ret; 
0x0000000010c52c: push rbx; add al, 0x5b; pop rbp; pop r12; ret; 
0x0000000010c60d: push rbx; add al, 0xeb; ret; 
0x000000000a5de1: push rbx; add al, [rax]; add bh, dh; ret; 
0x00000000120d54: push rbx; add ch, [rax+0x31467502]; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x5d], bl; ret; 
0x000000001029d2: push rbx; add rsp, 0x38; ret; 
0x000000000a5df9: push rbx; and al, 0x0; add bh, dh; ret; 
0x0000000004c119: push rbx; call qword ptr [rsi]; 
0x00000000127414: push rbx; cmp [rcx+rcx*4+0x7b], cl; sub cl, ch; paddw mm7, mm7; call qword ptr [rax-0x4115d6b8]; 
0x00000000096779: push rbx; fdivp st(7), st; jmp qword ptr [rsi+0xf]; 
0x0000000015d1b2: push rbx; in al, dx; inc dword ptr [rbp-0x3f6bf040]; add rsp, 0x8; ret; 
0x000000001903e9: push rbx; jb short 0x00000000001903f1; movzx ecx, byte ptr [rsi]; mov [rdi], cl; ret; 
0x0000000008752f: push rbx; je short 0x000000000008758d; pop rbp; pop r12; ret; 
0x000000000cf62c: push rbx; lea rax, [rdi-0x10]; ret; 
0x00000000027697: push rbx; mov r9, [rsp+0x18]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; call r14; 
0x0000000002b8c2: push rbx; mov r9, [rsp+0x30]; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; call r15; 
0x0000000011ef4f: push rbx; mov rbx, rdi; mov rdi, rcx; sub rsp, 0x8; call rsi; 
0x0000000011a71c: push rbx; mov rdi, rbp; xor edx, edx; mov esi, 0x1; call r12; 
0x00000000088a9e: push rbx; mov rdi, rbx; sub rdx, rsi; call qword ptr [rax+0x70]; 
0x00000000090bc4: push rbx; mov rdi, rbx; sub rdx, rsi; call qword ptr [rbp+0x70]; 
0x000000000b98f2: push rbx; movq [rdi+0x30], mm7; lea rax, [rdi+0x40]; ret; 
0x000000000b80a2: push rbx; movq [rdi+0x30], mm7; ret; 
0x000000000bb352: push rbx; movq [rdi+0x30], mm7; xor ch, ch; mov [rdi+0x40], ch; ret; 
0x0000000008df0f: push rbx; nop edx, edi; and dword ptr [rdi], 0xffffffcf; ret; 
0x00000000116cef: push rbx; nop edx, edi; mov eax, 0x4c; syscall; 
0x0000000008d26a: push rbx; or [rax-0x75], cl; xor ecx, [rax-0x7d]; ret; 
0x0000000011a00a: push rbx; or [rax-0x7d], cl; ret; 
0x000000000a09e2: push rbx; or al, 0x0; lea rdx, [rip+0xca944]; cmovne rax, rdx; ret; 
0x00000000116aec: push rbx; or eax, 0x64d8f700; mov [rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000138556: push rbx; or eax, [rax]; add rsp, 0x8; ret; 
0x0000000013cfa3: push rbx; out dx, al; jmp qword ptr [rsi+0x2e]; 
0x000000000e4f77: push rbx; pop rax; jne short 0x00000000000e4f80; ret; 
0x000000000eebe0: push rbx; push 0xfffffffffffca8e9; jmp qword ptr [rsi+0xf]; 
0x000000000552a3: push rbx; push 0xffffffffffff3ee9; jmp qword ptr [rsi+0xf]; 
0x00000000070446: push rbx; ret far; 
0x0000000012c559: push rbx; sbb [rax-0x7d], cl; ret; 
0x00000000147631: push rbx; sbb bl, ch; mov esp, 0xfe8466e8; jmp qword ptr [rsi+0xf]; 
0x000000000e51da: push rbx; setne al; ret; 
0x000000000ba0e0: push rbx; str [rcx+0x63]; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000006c907: push rcx; adc eax, 0x63480014; add al, 0x8e; add rax, rsi; notrack jmp rax; 
0x000000000e5113: push rcx; add [rax], al; jne short 0x00000000000e5120; mov eax, 0x40; ret; 
0x000000001786a4: push rcx; add al, bl; nop [rax+rax]; mov [rcx], edx; ret; 
0x0000000016867d: push rcx; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000019840c: push rcx; add eax, 0x58d4800; ret; 
0x000000001786e3: push rcx; add eax, ebx; nop [rax+rax]; mov [rcx], rdx; ret; 
0x0000000016086d: push rcx; add rsp, 0x110; mov eax, r12d; pop r12; ret; 
0x00000000047898: push rcx; add rsp, 0x18; ret; 
0x0000000005b08b: push rcx; add rsp, 0x28; pop rbx; pop rbp; ret; 
0x0000000012021b: push rcx; idiv edi; mov eax, [rsp+0x8]; add rsp, 0x18; ret; 
0x0000000011f4af: push rcx; idiv edi; mov eax, [rsp+0xc]; add rsp, 0x28; ret; 
0x0000000011f560: push rcx; idiv edi; mov rax, [rsp+0x8]; add rsp, 0x28; ret; 
0x0000000018fbca: push rcx; jl short 0x000000000018fc15; adc [rcx-0x2], esi; vmovups [r9-0x40], zmm15; ret; 
0x0000000018fbd1: push rcx; jl short 0x000000000018fc1c; adc [rcx-0x1], edi; ret; 
0x0000000018fd31: push rcx; jl short 0x000000000018fd7c; adc [rcx+0x6], esi; vmovups [r9+0x1c0], zmm15; ret; 
0x0000000018fd38: push rcx; jl short 0x000000000018fd83; adc [rcx+0x7], edi; ret; 
0x0000000008e236: push rcx; mov rsi, rdi; mov rdx, r12; mov rdi, rcx; call qword ptr [r14+0x38]; 
0x0000000009814d: push rcx; or [rax+0x39], cl; ret; 
0x0000000015f660: push rcx; or [rax-0x75], cl; or [rax+0x1], cl; ror dword ptr [rax+0x39], 0x1; ret far; 
0x000000000db3be: push rcx; or eax, 0x48c68900; movsxd edx, [rdi+rsi*4]; add rdx, rdi; notrack jmp rdx; 
0x000000000db263: push rcx; or eax, 0x48c68900; movsxd edx, [rdi+rsi*4]; add rdx, rdi; notrack jmp rdx; 
0x00000000116cd4: push rcx; or eax, 0x64d8f700; mov [rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000012e714: push rcx; out dx, eax; jmp qword ptr [rsi+0xf]; 
0x000000000688d6: push rcx; ret far; 
0x0000000004825e: push rcx; ret; 
0x00000000096385: push rcx; sbb [rcx+0x1], cl; ret; 
0x000000000fff0d: push rdi; adc [rax+0x63], cl; ret far; 
0x000000000bb303: push rdi; adc [rax-0x12cfdfb1], cl; mov [rdi+0x21], ch; ret; 
0x000000000bb201: push rdi; adc [rax-0x12cfe7b1], cl; mov [rdi+0x19], ch; ret; 
0x000000000aa72d: push rdi; adc [rax], al; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x000000000bb2e0: push rdi; adc [rax], dh; in eax, dx; mov [rdi+0x20], ch; ret; 
0x000000000bb261: push rdi; adc [rcx-0x12cfe7b1], cl; mov [rdi+0x1c], ch; ret; 
0x000000000bb241: push rdi; adc [rcx-0x12cfe8b1], cl; mov [rdi+0x1b], ch; ret; 
0x000000000bb182: push rdi; adc al, 0x30; in eax, dx; mov [rdi+0x15], ch; ret; 
0x000000000b9522: push rdi; adc al, 0x48; lea eax, [rdi+0x15]; ret; 
0x00000000081e65: push rdi; add [rax], eax; add [rcx], dh; test byte ptr [rax-0x77], 0xef; call qword ptr [rbx+0x10]; 
0x000000000570df: push rdi; add [rcx-0x77], ecx; push rsp; ret; 
0x000000000bafb8: push rdi; add al, 0x30; in eax, dx; mov [rdi+0x5], ch; ret; 
0x000000000bafca: push rdi; add al, 0x30; in eax, dx; mov [rdi+0x6], ch; ret; 
0x000000000b851a: push rdi; add al, 0x48; lea eax, [rdi+0x5]; ret; 
0x000000000b936a: push rdi; add al, 0x48; lea eax, [rdi+0x6]; ret; 
0x0000000016d939: push rdi; add al, 0x48; mov [rdi], ecx; ret; 
0x000000000b7ec4: push rdi; add al, 0xc3; nop [rax+rax]; mov [rdi-0x1], rdx; ret; 
0x000000000baf8a: push rdi; add dh, [rax]; in eax, dx; mov [rdi+0x3], ch; ret; 
0x000000001691e5: push rdi; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000b85cc: push rdi; add eax, 0xc478d48; ret; 
0x000000000b942c: push rdi; add eax, 0xd478d48; ret; 
0x000000000b786c: push rdi; add eax, 0xde88349; lea rdi, [rdi+0xd]; jne 0x00000000000b7fa0; ret; 
0x0000000002d86d: push rdi; add eax, [rax]; add [rcx-0x73], cl; add r9b, [r8+0x39]; ret; 
0x000000000bafe8: push rdi; add esi, [rax]; in eax, dx; mov [rdi+0x7], ch; ret; 
0x00000000184648: push rdi; add rax, 0x20; add rax, rdi; vzeroupper; ret; 
0x0000000009e328: push rdi; add rsp, 0x8; pop rbp; pop r12; ret; 
0x00000000167708: push rdi; clc; ret; 
0x00000000167880: push rdi; cld; ret; 
0x000000001683a7: push rdi; cli; mov [rdi-0x4], ecx; ret; 
0x0000000016d219: push rdi; cmc; mov [rdi-0x4], ecx; ret; 
0x000000000b7b10: push rdi; cmovns eax, [rbx-0x72b7e018]; jg short 0x00000000000b7b39; jne 0x00000000000b7fa0; ret; 
0x00000000114679: push rdi; dec dword ptr [rax-0x75]; add al, 0x24; add rsp, 0x28; ret; 
0x0000000016d199: push rdi; hlt; mov [rdi-0x4], ecx; ret; 
0x000000000b7ed2: push rdi; inc ebx; nop [rax+rax]; mov [rdi], rdx; ret; 
0x000000000f7631: push rdi; jmp far fword ptr [rcx]; 
0x000000000918f4: push rdi; mov [rdi+0x18], rax; mov [rdi+0x8], rax; ret; 
0x0000000016d07a: push rdi; mov [rdi-0x8], rcx; ret; 
0x0000000007f1fa: push rdi; or [rax-0x73], cl; or [rcx-0x77], cl; or r9b, r13b; ret; 
0x000000001518b2: push rdi; or [rax-0x77], cl; add al, 0x24; call qword ptr [rdx+0x20]; 
0x00000000136d41: push rdi; or [rax-0x7d], cl; ret; 
0x000000000bb00a: push rdi; or [rax], dh; in eax, dx; mov [rdi+0x9], ch; ret; 
0x000000000bb02c: push rdi; or [rax], dh; in eax, dx; mov [rdi+0xa], ch; ret; 
0x000000000bb06a: push rdi; or [rax], dh; in eax, dx; mov [rdi+0xc], ch; ret; 
0x00000000055be1: push rdi; or [rcx-0x2feeb728], cl; pop rbp; pop rbx; ret; 
0x0000000008df84: push rdi; or [rdi], cl; mov dh, 0x0; ret; 
0x000000000a0672: push rdi; or al, 0x0; lea rdx, [rip+0xcac94]; cmovne rax, rdx; ret; 
0x0000000013b43f: push rdi; or al, 0x48; mov [rsi], edi; ret; 
0x000000000b87b0: push rdi; or eax, 0x1c478d48; ret; 
0x000000000b9620: push rdi; or eax, 0x1d478d48; ret; 
0x000000000b7ab0: push rdi; or eax, 0x1de88349; lea rdi, [rdi+0x1d]; jne 0x00000000000b7fa0; ret; 
0x0000000018e3e3: push rdi; ret far; 
0x000000000e312b: push rdi; ret; 
0x00000000091925: push rdi; sbb [rax-0x77], cl; movups [rdi+0x8], xmm0; ret; 
0x0000000015753e: push rdi; sbb [rcx+rcx*4-0x40], al; ret; 
0x000000000932f0: push rdi; sbb cl, ch; imul edi, 0xffffffff; jmp qword ptr [rsi+0xf]; 
0x00000000038504: push rdi; sbb eax, [rax]; syscall; 
0x000000001685a7: push rdi; stc; mov [rdi-0x4], ecx; ret; 
0x00000000167dca: push rdi; std; mov [rdi-0x2], cx; ret; 
0x000000001681a7: push rdi; sti; mov [rdi-0x4], ecx; ret; 
0x00000000157835: push rdi; sub [rax+0x1], bh; ret; 
0x0000000015760b: push rdi; sub [rdi], cl; adc [rdi+0x18], eax; ret; 
0x000000000745b0: push rdi; sub dh, al; add [rcx-0x7d], cl; ret; 
0x000000000892b9: push rdi; sub rdx, rsi; mov [rsp+0x8], rcx; mov rdi, r15; call rax; 
0x000000000e737b: push rdi; test [rbx+rdi*8-0x1], ecx; call qword ptr [rax]; 
0x000000000bb2c0: push rdi; wrmsr; in eax, dx; mov [rdi+0x1f], ch; ret; 
0x000000000b1a1b: push rdi; xor [rsi+0xf], ah; outsd dx, [rsi]; ret; 
0x000000000ac178: push rdi; xor eax, eax; ret; 
0x0000000016d10a: push rdi; xrelease mov [rdi-0x8], rcx; ret; 
0x00000000152cf0: push rdx; adc [rax-0x75], cl; or [r8-0x77], r9b; out dx, eax; call qword ptr [rax+0x20]; 
0x000000001687ff: push rdx; add eax, 0xc634f00; mov ecx, [rdi-0x73]; or al, 0xb; notrack jmp r9; 
0x00000000168858: push rdx; add eax, 0xc634f00; mov ecx, [rdi-0x73]; or al, 0xb; notrack jmp r9; 
0x0000000012f47a: push rdx; add edi, esi; call qword ptr [rax-0x18]; 
0x000000000df440: push rdx; add rsp, 0x38; ret; 
0x0000000012f56a: push rdx; loope 0x000000000012f565; jmp qword ptr [rsi-0x70]; 
0x000000000e5143: push rdx; mov edx, 0x40; mov eax, 0x20; cmove rax, rdx; ret; 
0x000000000e5145: push rdx; mov edx, 0x40; mov eax, 0x20; cmove rax, rdx; ret; 
0x000000000df024: push rdx; mov r9, [rsp+0x20]; mov rdx, [rsp+0x28]; mov rax, [rsp+0x18]; call rax; 
0x00000000034255: push rdx; mov rax, [rdx+rax*4+0x200]; ret; 
0x0000000009e956: push rdx; or [rax-0x7b], cl; shl byte ptr [rbp-0xd], cl; ret; 
0x0000000014c172: push rdx; or al, [r8]; syscall; 
0x0000000007f47e: push rdx; out 0xff, eax; jmp qword ptr [rsi+0xf]; 
0x00000000034225: push rdx; pop rax; mov eax, [rdx+rax*4+0x200]; ret; 
0x00000000055071: push rdx; ret; 
0x000000001662f9: push rdx; sar byte ptr [rsi], 0x41; jmp rcx; 
0x000000000f53e3: push rdx; sbb [rax+0x9], cl; push rbp; mov eax, 0xfffa6be9; jmp qword ptr [rsi-0x70]; 
0x00000000138fda: push rdx; xchg ebx, eax; out dx, al; jmp qword ptr [rbx+rcx*4+0x4]; 
0x00000000118b1a: push rdx; xor ecx, [rip+0x64d8f700]; mov [rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000b7137: push rsi; adc bl, dh; movq [rdi], mm0; movdqu [rdi+0x10], xmm2; ret; 
0x00000000115fbb: push rsi; add [rbp-0x2f], esi; ret; 
0x0000000016dc41: push rsi; add [rbx+0x157890e], ecx; mov [rdi], ecx; ret; 
0x00000000057787: push rsi; add [rcx-0x77], ecx; push rsp; ret; 
0x0000000019021d: push rsi; add ah, [rdx-0xf]; jl short 0x000000000019026b; adc [rsi+0x3], edx; ret; 
0x000000000baf84: push rsi; add ah, [rsi-0x77]; js 0xffffffffed3bb1e5; mov [rdi+0x3], ch; ret; 
0x000000000bafb3: push rsi; add al, 0x89; js 0xffffffffed3bb413; mov [rdi+0x5], ch; ret; 
0x000000000bafc4: push rsi; add al, 0x89; pcmpgtd mm1, [rcx-0x12cffba9]; mov [rdi+0x6], ch; ret; 
0x0000000016dbd1: push rsi; add cl, [rbx+0x257890e]; mov [rdi], ecx; ret; 
0x00000000042431: push rsi; add eax, 0x17a2e9; mulss xmm0, [rip+0x17af49]; ret; 
0x0000000004240c: push rsi; add eax, 0x17a32e; mulss xmm0, [rip+0x17af72]; ret; 
0x0000000016d8c2: push rsi; add eax, 0x480e8b48; mov [rdi+0x5], edx; mov [rdi], rcx; ret; 
0x000000000b85c5: push rsi; add eax, 0x480f8948; mov [rdi+0x5], edx; lea rax, [rdi+0xc]; ret; 
0x000000000b9425: push rsi; add eax, 0x480f8948; mov [rdi+0x5], edx; lea rax, [rdi+0xd]; ret; 
0x000000000b6f45: push rsi; add eax, 0x480f8948; mov [rdi+0x5], edx; ret; 
0x000000001902b3: push rsi; add eax, 0x487cf162; adc [rsi+0x6], edx; vmovups [rsi+0x1c0], zmm2; ret; 
0x0000000013489f: push rsi; add eax, 0x5bf08948; ret; 
0x000000001982ae: push rsi; add eax, 0x6eae900; clc; jmp qword ptr [rsi+0x2e]; 
0x0000000016db61: push rsi; add ecx, [rbx+0x357890e]; mov [rdi], ecx; ret; 
0x000000000b8533: push rsi; add ecx, [rcx+0x357890f]; lea rax, [rdi+0x6]; ret; 
0x000000000b9383: push rsi; add ecx, [rcx+0x357890f]; lea rax, [rdi+0x7]; ret; 
0x000000000b6ee3: push rsi; add ecx, [rcx+0x357890f]; ret; 
0x000000000bafe3: push rsi; add ecx, [rcx+0x357890f]; xor ch, ch; mov [rdi+0x7], ch; ret; 
0x0000000007b315: push rsi; and [rcx+rcx*4-0x11], cl; sub rdx, rsi; sar rdx, 0x2; call qword ptr [r12+0x38]; 
0x00000000074a9c: push rsi; and [rcx+rcx*4-0x1], cl; sub rdx, rsi; call qword ptr [rbx+0x38]; 
0x00000000167816: push rsi; clc; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x00000000167832: push rsi; clc; mov [rdi-0x8], rdx; ret; 
0x00000000168186: push rsi; clc; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000168386: push rsi; clc; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000168586: push rsi; clc; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000167fa1: push rsi; cld; mov [rdi-0x4], edx; ret; 
0x000000001679f5: push rsi; cld; mov [rdi-0x9], rcx; mov [rdi-0x4], edx; ret; 
0x00000000167bd5: push rsi; cld; mov [rdi-0xa], rcx; mov [rdi-0x4], edx; ret; 
0x00000000167db5: push rsi; cld; mov [rdi-0xb], rcx; mov [rdi-0x4], edx; ret; 
0x00000000167f95: push rsi; cld; mov [rdi-0xc], rcx; mov [rdi-0x4], edx; ret; 
0x00000000191ff6: push rsi; cmc; sub eax, edx; ret; 
0x00000000084526: push rsi; cmp [rax+0x39], cl; ret; 
0x00000000191fe6: push rsi; hlt; sub eax, edx; ret; 
0x0000000010d281: push rsi; jb short 0x000000000010d206; lea rax, [rip-0xbd]; cmove rax, rdx; ret; 
0x0000000012bdc6: push rsi; je short 0x000000000012bdd0; mov eax, 0x7; ret; 
0x0000000018e0e9: push rsi; jmp far fword ptr [rcx]; 
0x00000000190106: push rsi; loopne 0x00000000001900cc; vmovdqu [rdi], xmm0; vmovdqu [rsi-0x10], xmm0; ret; 
0x00000000157d26: push rsi; mov dh, 0xff; dec dword ptr [rax-0x75]; cmp [rax-0x77], cl; ret; 
0x00000000044151: push rsi; mov r10d, 0x8; mov eax, 0x80; syscall; 
0x000000000284b1: push rsi; mov r9, [rsp+0x20]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; call rbx; 
0x0000000016d102: push rsi; mov rcx, [rsi-0x8]; mov [rdi-0xd], rdx; mov [rdi-0x8], rcx; ret; 
0x0000000016d072: push rsi; mov rcx, [rsi-0x8]; mov [rdi-0xe], rdx; mov [rdi-0x8], rcx; ret; 
0x000000000bb064: push rsi; or [rax-0x77], cl; jns 0xffffffffed3bb8c5; mov [rdi+0xc], ch; ret; 
0x000000000bb004: push rsi; or [rax-0x77], cl; js 0xffffffffed3bb865; mov [rdi+0x9], ch; ret; 
0x000000000bb025: push rsi; or [rax-0x77], cl; pcmpgtd mm1, [rcx-0x12cff7a9]; mov [rdi+0xa], ch; ret; 
0x000000000420b8: push rsi; or eax, 0x17a642; mulsd xmm0, xmm1; ret; 
0x00000000042092: push rsi; or eax, 0x17a678; mulsd xmm0, xmm1; ret; 
0x000000000b87a7: push rsi; or eax, 0x77f0ff3; movdqu [rdi+0xd], xmm2; lea rax, [rdi+0x1c]; ret; 
0x000000000b9617: push rsi; or eax, 0x77f0ff3; movdqu [rdi+0xd], xmm2; lea rax, [rdi+0x1d]; ret; 
0x000000000b70d7: push rsi; or eax, 0x77f0ff3; movdqu [rdi+0xd], xmm2; ret; 
0x000000000b7117: push rsi; psllq mm1, [rdi]; jg short 0x00000000000b7124; movdqu [rdi+0xf], xmm2; ret; 
0x000000000b7e07: push rsi; psllq mm1, [rdi]; jg short 0x00000000000b7e14; movdqu [rdi+0xf], xmm2; ret; 
0x000000000ba427: push rsi; psllq mm1, [rdi]; jg short 0x00000000000ba434; movdqu [rdi+0xf], xmm2; ret; 
0x000000000baf17: push rsi; psllq mm1, [rdi]; jg short 0x00000000000baf24; movdqu [rdi+0xf], xmm2; ret; 
0x00000000058389: push rsi; rcl dword ptr [rip-0x43d11800], 0xfd; jmp qword ptr [rsi+0x66]; 
0x000000000422f3: push rsi; ret; 
0x0000000005c1b3: push rsi; ret; 
0x0000000015fd06: push rsi; ror dword ptr [rax], 0x0; mov r8, [rbx+0x10]; call qword ptr [rax+0x1e0]; 
0x000000001900b5: push rsi; std; vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x000000000b8c96: push rsi; str [ebx+0x63]; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000191fc6: push rsi; sub eax, edx; ret; 
0x00000000191fd6: push rsi; sub eax, edx; ret; 
0x0000000016d312: push rsi; test dword ptr [rbx-0x76b703b2], 0x4f89f757; cld; ret; 
0x0000000011281b: push rsi; xor ax, ax; ret; 
0x00000000113b87: push rsp; add [rax], al; mov eax, 0x10; syscall; 
0x00000000113901: push rsp; add [rax], al; mov eax, r8d; mov ebx, fs:[r10]; syscall; 
0x00000000113bb8: push rsp; add [rax], al; mov r8d, eax; mov eax, 0x10; syscall; 
0x00000000041265: push rsp; add byte ptr [rsi*2+0x5c8b45e6], 0x80; or [rbx+rax+0x5f], cl; and [rcx+rcx*4-0x28], cl; ret; 
0x000000000a4c36: push rsp; add cl, [rax-0x77]; ret far; 
0x000000000a41e2: push rsp; add cl, [rax-0x77]; ret far; 
0x0000000004242a: push rsp; add eax, 0x17a300; orps xmm0, [rip+0x17a2e9]; mulss xmm0, [rip+0x17af49]; ret; 
0x00000000042405: push rsp; add eax, 0x17a325; orps xmm0, [rip+0x17a32e]; mulss xmm0, [rip+0x17af72]; ret; 
0x00000000041f26: push rsp; add eax, 0x17a7c4; andpd xmm1, [rip+0x17a7ac]; orpd xmm0, xmm1; ret; 
0x0000000019879e: push rsp; add eax, 0x208ae800; clc; call far fword ptr [rbx+0x48]; 
0x0000000013cccc: push rsp; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000975a0: push rsp; and al, 0x10; call qword ptr [rax]; 
0x000000000a8a6a: push rsp; and al, 0x10; mov [rax], rdx; ret; 
0x000000000e2d5f: push rsp; and al, 0x10; mov eax, 0xf7; syscall; 
0x00000000120448: push rsp; and al, 0x10; mov rsi, [rsp+0x8]; syscall; 
0x00000000127d1d: push rsp; and al, 0x10; xor esi, esi; mov edi, 0x2000004; call rax; 
0x00000000114599: push rsp; and al, 0x14; mov rsi, [rsp+0x8]; mov eax, 0x127; syscall; 
0x00000000114659: push rsp; and al, 0x14; mov rsi, [rsp+0x8]; mov eax, 0x128; syscall; 
0x000000000a8a24: push rsp; and al, 0x16; mov [rdi+0x6], dl; ret; 
0x000000000a8992: push rsp; and al, 0x18; mov [rdi], rdx; add rax, rdi; ret; 
0x000000001517a2: push rsp; and al, 0x18; mov esi, 0x6; call qword ptr [rax+0x28]; 
0x00000000151769: push rsp; and al, 0x18; mov esi, 0x6; mov rax, [rdi+0x8]; call qword ptr [rax+0x28]; 
0x00000000146da5: push rsp; and al, 0x18; mov rsi, [rsp+0x10]; call qword ptr [rax]; 
0x000000000e2d5a: push rsp; and al, 0x1c; mov rdx, [rsp+0x10]; mov eax, 0xf7; syscall; 
0x0000000014d40b: push rsp; and al, 0x20; mov rdi, r12; call rdx; 
0x000000000df02c: push rsp; and al, 0x28; mov rax, [rsp+0x18]; call rax; 
0x00000000113866: push rsp; and al, 0x30; mov eax, 0x10; syscall; 
0x00000000130287: push rsp; and al, 0x38; call qword ptr [rsp+0x60]; 
0x000000001538ec: push rsp; and al, 0x38; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x000000000ded7f: push rsp; and al, 0x68; mov rdi, r15; mov rsi, [rsp+0x60]; call r12; 
0x0000000014e70b: push rsp; and al, 0x70; call qword ptr [rax+0x30]; 
0x00000000155e7a: push rsp; and al, 0x8; call qword ptr [rax+0x8]; 
0x0000000011f14b: push rsp; and al, 0x8; mov eax, 0x38; syscall; 
0x0000000011340a: push rsp; and al, 0x8; mov esi, 0x10; mov eax, 0x48; syscall; 
0x0000000008f41c: push rsp; and al, 0x8; mov rsi, r13; mov rdi, rbx; call qword ptr [rbp+0x70]; 
0x000000000a8a03: push rsp; and al, 0xc; mov [rdi+0x4], dx; ret; 
0x00000000151826: push rsp; and al, 0xc; mov esi, 0xd; call qword ptr [rax+0x28]; 
0x000000000a8ae1: push rsp; and al, 0xe; mov [rax+0x6], dl; ret; 
0x000000000a8ac8: push rsp; and al, 0xec; mov [rax+0x4], dx; ret; 
0x0000000005b14e: push rsp; and al, 0xf0; movdqa xmm0, [rsp-0x18]; pinsrw xmm0, eax, 0x6; ret; 
0x000000000a8ab0: push rsp; and al, 0xf4; mov [rax+0x4], dl; ret; 
0x000000000a89eb: push rsp; and al, 0xf4; mov [rdi+0x4], dl; ret; 
0x000000000a8a92: push rsp; and al, 0xfa; mov [rax+0x2], dl; ret; 
0x000000000a89cd: push rsp; and al, 0xfa; mov [rdi+0x2], dl; ret; 
0x0000000005d4ed: push rsp; cld; jmp qword ptr [rsi-0x7f]; 
0x00000000183cc7: push rsp; cmp ah, [rax]; sub eax, edx; vzeroupper; ret; 
0x000000000db1ab: push rsp; idiv bh; call qword ptr [rax+0x4cc50149]; 
0x00000000138408: push rsp; jae short 0x000000000013840d; add [rcx+rcx*4-0x19], cl; call rbx; 
0x00000000152cca: push rsp; lea r9, [rsp+0x3a]; call qword ptr [rax]; 
0x000000000ac6bb: push rsp; lea rax, [rdi+rax+0x10]; ret; 
0x0000000014fe9f: push rsp; mov eax, 0x1; ret; 
0x000000000e5003: push rsp; mov edx, 0x7d00; mov eax, 0x7f; cmove rax, rdx; ret; 
0x0000000002932e: push rsp; mov r9, [rsp+0x18]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; call rbx; 
0x0000000002c64c: push rsp; mov r9, [rsp+0x18]; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; call rbx; 
0x0000000002ddb1: push rsp; mov r9, [rsp+0x20]; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; call rbx; 
0x0000000002a88e: push rsp; mov r9, [rsp+0x30]; mov rsi, [rsp+0x48]; mov rdi, [rsp+0x40]; call rbx; 
0x00000000029c52: push rsp; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x48]; call rbx; 
0x00000000041f2e: push rsp; or eax, 0x17a7ac; orpd xmm0, xmm1; ret; 
0x000000001829a9: push rsp; or eax, 0x894d0000; ret far; 
0x0000000012e367: push rsp; out dx, eax; jmp qword ptr [rsi+0xf]; 
0x000000000e51d8: push rsp; push rbx; setne al; ret; 
0x00000000118fdf: push rsp; ret far; 
0x000000000422ed: push rsp; ret; 
0x0000000008d29b: push rsp; stc; jmp qword ptr [rsi-0x70]; 
0x000000000ba046: push rsp; str [rcx+0x63]; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000008bdf3: push rsp; xor esi, esi; mov rdi, rbp; call qword ptr [r13+0x10]; 
0x00000000063545: pushfq; adc al, 0x0; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x00000000025b26: pushfq; adc eax, [rax]; mov rdi, rbx; call rbp; 
0x0000000002c168: pushfq; add [rax], eax; add [rcx+0x3948fc51], cl; ret; 
0x000000001383da: pushfq; and al, 0xa8; add [rax], al; add cl, ch; ret; 
0x0000000008c520: pushfq; jp short 0x000000000008c51d; jmp qword ptr [rsi+0x66]; 
0x000000000c6b73: pushfq; mov r9d, 0xffffffff; mov eax, r9d; pop rbx; ret; 
0x00000000047a1c: pushfq; nop [rax]; endbr64; mov eax, 0xffffffff; ret; 
0x00000000146ecc: pushfq; or al, [rax]; add rsp, 0x8; ret; 
0x00000000146eb7: pushfq; or al, [rax]; test eax, eax; je short 0x0000000000146ec0; ret; 
0x00000000152c60: pushfq; out 0xff, al; call far fword ptr [rsi+0x5f]; 
0x0000000004224f: pushfq; sbb al, [rax]; mov dword ptr fs:[rax], 0x22; add rsp, 0x8; ret; 
0x0000000018bc9d: pushfq; shl bh, 0xd8; or eax, 0x1; vzeroupper; ret; 
0x00000000155dc7: pushfq; std; jmp qword ptr [rsi+0xf]; 
0x00000000100491: pxor mm0, mm0; and byte ptr [rdi+0x38], 0xf9; mov dword ptr [rsi], 0x0; movups [rsi+0x8], xmm0; ret; 
0x00000000141a8c: pxor mm0, mm0; mov qword ptr [rax+0x10], 0x0; movups [rax], xmm0; add rsp, 0x8; ret; 
0x00000000087cee: pxor mm0, mm0; mov qword ptr [rax+0x50], 0x0; movups [rax+0x40], xmm0; pop rbx; ret; 
0x000000000919ea: pxor mm0, mm0; mov qword ptr [rbx+0x58], 0x0; movups [rbx+0x48], xmm0; pop rbx; ret; 
0x00000000157a01: pxor mm0, mm0; movaps [rsp+0x60], xmm1; movups [rsp+0x18], xmm0; call r8; 
0x00000000093696: pxor mm0, mm0; movups [rbx+0x48], xmm0; pop rbx; ret; 
0x00000000116dc1: pxor mm0, mm0; movups [rdi], xmm0; ret; 
0x00000000140b8d: pxor mm7, mm6; jmp qword ptr [rsi+0x66]; 
0x0000000012f45d: pxor mm7, mm7; jmp qword ptr [rsi+0x2e]; 
0x00000000100490: pxor xmm0, xmm0; and byte ptr [rdi+0x38], 0xf9; mov dword ptr [rsi], 0x0; movups [rsi+0x8], xmm0; ret; 
0x00000000141a8b: pxor xmm0, xmm0; mov qword ptr [rax+0x10], 0x0; movups [rax], xmm0; add rsp, 0x8; ret; 
0x00000000087ced: pxor xmm0, xmm0; mov qword ptr [rax+0x50], 0x0; movups [rax+0x40], xmm0; pop rbx; ret; 
0x000000000919e9: pxor xmm0, xmm0; mov qword ptr [rbx+0x58], 0x0; movups [rbx+0x48], xmm0; pop rbx; ret; 
0x00000000157a00: pxor xmm0, xmm0; movaps [rsp+0x60], xmm1; movups [rsp+0x18], xmm0; call r8; 
0x00000000093695: pxor xmm0, xmm0; movups [rbx+0x48], xmm0; pop rbx; ret; 
0x00000000116dc0: pxor xmm0, xmm0; movups [rdi], xmm0; ret; 
0x0000000002932b: rcl byte ptr [rax+0x41], 0x54; mov r9, [rsp+0x18]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; call rbx; 
0x0000000002c649: rcl byte ptr [rax+0x41], 0x54; mov r9, [rsp+0x18]; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; call rbx; 
0x0000000002ddae: rcl byte ptr [rax+0x41], 0x54; mov r9, [rsp+0x20]; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; call rbx; 
0x0000000002a88b: rcl byte ptr [rax+0x41], 0x54; mov r9, [rsp+0x30]; mov rsi, [rsp+0x48]; mov rdi, [rsp+0x40]; call rbx; 
0x00000000029c4f: rcl byte ptr [rax+0x41], 0x54; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x48]; call rbx; 
0x000000000284ae: rcl byte ptr [rax+0x41], 0x56; mov r9, [rsp+0x20]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; call rbx; 
0x00000000027695: rcl byte ptr [rax+0x53], 0x4c; mov ecx, [rsp+0x18]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; call r14; 
0x0000000002b8c0: rcl byte ptr [rax+0x53], 0x4c; mov ecx, [rsp+0x30]; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; call r15; 
0x00000000027dfa: rcl byte ptr [rax+0x55], 0x4c; mov ecx, [rsp+0x18]; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x60]; call rbx; 
0x000000000aff9d: rcl byte ptr [rax+rax], 0x1; add [rbp-0x77], cl; ret far; 
0x00000000183796: rcl byte ptr [rax], 0x29; cmp edx, ecx; jle short 0x00000000001837b4; movsxd rax, ecx; ret; 
0x000000000b988e: rcl byte ptr [rax], 0x4c; lea ebx, [rip+0xf5be9]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b803e: rcl byte ptr [rax], 0x4c; lea ebx, [rip+0xf7259]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000e41e5: rcl byte ptr [rax], cl; add [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x000000000e423b: rcl byte ptr [rax], cl; add [rbp-0x47d18a40], al; push 0x0; add [rax], al; syscall; 
0x000000000d4a4a: rcl byte ptr [rbx-0x3e6db6dc], cl; call far fword ptr [rdi]; 
0x00000000023a4d: rcl byte ptr [rcx], 0x48; mov [rip+0x1cd8d2], eax; ret; 
0x000000000e4285: rcl dword ptr [rax], 0x1; add [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x00000000022674: rcl dword ptr [rbx], cl; add [rax-0x77], cl; ret; 
0x0000000015fcc3: rcl dword ptr [rcx+rcx], 0x0; call qword ptr [rax+0x10]; 
0x0000000009ca5a: rcl dword ptr [rcx], cl; add al, ch; mov dil, r15b; jmp qword ptr [rsi+0xf]; 
0x0000000005838a: rcl dword ptr [rip-0x43d11800], 0xfd; jmp qword ptr [rsi+0x66]; 
0x00000000023a52: rcr al, cl; sbb al, 0x0; ret; 
0x00000000041cbf: rcr bl, 0x3f; fld st, tbyte ptr [rsp+0x8]; fsubrp; ret; 
0x0000000017371d: rcr byte ptr [rax], 0x0; add [rbp-0x77], cl; ret far; 
0x0000000008f592: rcr byte ptr [rbp+0x41], 0x1; pop rsp; ret; 
0x0000000009a532: rcr byte ptr [rbp+0x41], 0x5c; mov rax, r8; pop r13; ret; 
0x00000000026048: rcr byte ptr [rbp+0x41], 0x5c; pop r13; pop r14; ret; 
0x0000000013b762: rcr byte ptr [rbp+0x41], 0x5c; pop r13; ret; 
0x0000000002f737: rcr byte ptr [rbp+0x41], 0x5c; ret; 
0x000000000849ea: rcr byte ptr [rbp+0x41], cl; pop rsp; pop r13; jmp rax; 
0x00000000094a29: rcr byte ptr [rbp+0x5b010015], cl; ret; 
0x00000000055be7: rcr byte ptr [rbp+0x5b], 0x1; ret; 
0x00000000134b78: rcr byte ptr [rbp-0x3a], 0x2; add [rcx+0x5c], al; pop r13; ret; 
0x000000000ca015: rcr byte ptr [rbx+0x31], cl; rcr byte ptr [rbp+0x41], 0x5c; pop r13; pop r14; ret; 
0x0000000009cfb0: rcr byte ptr [rbx+0x41], 0x5c; ret; 
0x0000000013b75e: rcr byte ptr [rbx+0x4c], 0x89; rcr byte ptr [rbp+0x41], 0x5c; pop r13; ret; 
0x00000000149249: rcr byte ptr [rbx+0x5d], 0x1; mov eax, r8d; ret; 
0x00000000084e58: rcr byte ptr [rbx+0x5d], 0x41; pop rsp; pop r13; pop r14; ret; 
0x00000000046631: rcr byte ptr [rbx+0x5d], 0x41; pop rsp; pop r13; ret; 
0x00000000046d62: rcr byte ptr [rbx+0x5d], 0x41; pop rsp; ret; 
0x00000000099cc2: rcr byte ptr [rbx+0x5d], 0x4c; mov eax, eax; pop r12; ret; 
0x00000000149c8a: rcr byte ptr [rbx+0x5d], 0xf; mov dh, 0xc0; pop r12; ret; 
0x000000000bc1e2: rcr byte ptr [rbx-0x3d], 0x1; mov eax, 0x60; pop rbx; ret; 
0x000000001197c8: rcr byte ptr [rbx-0x3d], 0x48; mov eax, [rip+0xd269e]; mov dword ptr fs:[rax], 0x16; xor eax, eax; ret; 
0x0000000011cc7f: rcr byte ptr [rbx-0x3d], 0x66; nop [rax+rax]; mov rax, r8; ret; 
0x0000000008e00f: rcr byte ptr [rbx-0x9], 0xd8; ret; 
0x0000000011bc3a: rcr byte ptr [rbx-0xa], cl; jmp qword ptr [rbp+rax*2-0x77]; 
0x000000000af8ad: rcr byte ptr [rbx], 0x0; add [rbp-0x77], cl; ret far; 
0x00000000035367: rcr byte ptr [rbx], 0x0; lea rdi, [r13+0x80]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035390: rcr byte ptr [rbx], 0x0; mov rdi, r12; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003077b: rcr byte ptr [rbx], cl; add [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x0000000018a23e: rcr byte ptr [rdi+0x49], 0x29; ror byte ptr [rax-0x73], 0x1; jl short 0x000000000018a25e; and ecx, ebp; ret; 
0x000000000240da: rcr dword ptr [rax+rax], cl; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000001816fb: rcr dword ptr [rbp+0x148b0001], 0x91; mov eax, [rcx+rax*4]; sub eax, edx; ret; 
0x00000000115e3c: rcr dword ptr [rbx+0x31], cl; rcr byte ptr [rbp+0x41], 0x5c; ret; 
0x000000000981a2: rcr dword ptr [rbx+0x48], 0x3d; jmp far fword ptr [rcx]; 
0x000000000307c3: rcr dword ptr [rbx], 0x1; add [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x00000000055c19: rcr dword ptr [rcx], 0xc0; and eax, 0x2; sub eax, 0x1; ret; 
0x0000000011f8fb: rdpkru; lea ecx, [rdi+rdi]; shr eax, cl; and eax, 0x3; ret; 
0x000000001462f8: rdtsc; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x5d], bl; ret; 
0x000000000bbb8d: rep movsb [rdi], [rsi]; cld; ret; 
0x000000000bbb7f: rep movsb [rdi], [rsi]; ret; 
0x0000000015f168: rep movsq [rdi], [rsi]; ret; 
0x0000000009e95c: rep ret; 
0x000000000bbf87: rep stosb [rdi]; mov rax, rdx; ret; 
0x0000000013c602: rep stosq [rdi]; mov [r8+0x1], dl; mov rax, r8; mov byte ptr [r8+0x2], 0x0; ret; 
0x00000000098a04: rep stosq [rdi]; pop rbp; ret; 
0x00000000043b1e: rep stosq [rdi]; ret; 
0x00000000023401: ret far; 
0x00000000052b5e: ret far; 
0x0000000017fbd7: ret far; 
0x000000000257d6: ret far; 
0x000000000d2e76: ret; 
0x00000000022679: ret; 
0x000000000469da: ret; 
0x000000000260f7: ret; 
0x000000000361b6: ret; 
0x00000000147eb7: rol ax, 0x8; mov rdi, r15; mov [rsp+0x192], ax; mov rax, [rsp+0x30]; call rax; 
0x0000000012fb06: rol ax, 0x8; ret; 
0x0000000013b436: rol bh, 0x47; or [rcx], ch; add [rax], al; add [rcx-0x76b7f3a9], cl; ret; 
0x00000000078015: rol bh, cl; test [rdx+rdi*8+0x1ffff], esi; add [rax], al; jmp rax; 
0x000000000a081c: rol bl, 0x1; add [rax], al; lea rdx, [rip+0xd0119]; cmovne rax, rdx; ret; 
0x00000000087eec: rol bl, 0x1; mov eax, 0xffffffff; ret; 
0x0000000013f00b: rol bl, 0x1; nop [rax]; xor r10d, r10d; mov eax, r10d; ret; 
0x0000000005297c: rol bl, 0x1; xchg ax, ax; xor eax, eax; ret; 
0x000000000ac8ee: rol bl, 0x1; xor eax, eax; ret; 
0x00000000113789: rol bl, 0x48; mov eax, [rip+0xd86de]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000011281e: rol bl, 0x48; mov eax, [rip+0xd9649]; mov dword ptr fs:[rax], 0x16; mov eax, 0x1; ret; 
0x000000000bb5b5: rol bl, 0x48; mov eax, edi; ret; 
0x00000000093835: rol bl, 0x66; nop [rax+rax]; endbr64; mov eax, 0xffffffff; ret; 
0x00000000093875: rol bl, 0x66; nop [rax+rax]; endbr64; mov rax, [rdi+0x68]; ret; 
0x00000000146855: rol bl, 0x66; nop [rax+rax]; endbr64; ret; 
0x00000000157855: rol bl, 0x66; nop [rax+rax]; endbr64; xor eax, eax; ret; 
0x0000000009e884: rol bl, 0x66; nop [rax+rax]; mov eax, 0x1; ret; 
0x00000000087f94: rol bl, 0x66; nop [rax+rax]; mov eax, 0xffffffff; ret; 
0x0000000008cd64: rol bl, 0x66; nop [rax+rax]; mov r8d, 0x1; mov eax, r8d; ret; 
0x000000001570f8: rol bl, 0x66; nop [rax+rax]; mov rax, [rdi+0x8]; jmp qword ptr [rax+0x40]; 
0x000000000cfb42: rol bl, 0x66; nop [rax+rax]; nop; mov rax, 0x1; ret; 
0x00000000146151: rol bl, 0x66; nop [rax+rax]; xchg ax, ax; endbr64; ret; 
0x000000000ac65c: rol bl, 0x66; nop; bsr eax, eax; add rax, rdi; ret; 
0x00000000155d1d: rol bl, 0x90; cmp eax, 0x1; jne short 0x0000000000155d15; mov rax, [rdi+0x8]; jmp qword ptr [rax]; 
0x00000000094d6d: rol bl, 0x90; mov eax, 0x16; ret; 
0x0000000013b8bd: rol bl, 0x90; mov eax, 0xffffffff; ret; 
0x0000000013bd37: rol bl, 0xb8; add [rcx], al; add [rax], al; ret; 
0x000000000424fe: rol bl, 0xf3; addps xmm0, xmm0; ret; 
0x000000000c3693: rol byte ptr [r11-0x78f0f608], 0x1; ret far; 
0x000000000bbd71: rol byte ptr [r9+0xf], 0x1; adc [rbx], esp; ret; 
0x000000000bcc64: rol byte ptr [rax*4+0x31ee75d2], 0xc0; ret; 
0x00000000121299: rol byte ptr [rax+0x1740039], 0xc3; mov rax, [rdi]; mov [rdx], rax; mov eax, 0x1; ret; 
0x00000000188726: rol byte ptr [rax+0x48], 0x1; clc; sub rax, rdx; vzeroupper; ret; 
0x0000000018466b: rol byte ptr [rax+0x48], 0x1; clc; vzeroupper; ret; 
0x0000000004739b: rol byte ptr [rax+0x775003f], 0x5b; ret; 
0x000000000a8944: rol byte ptr [rax+0xf], 0x1; xchg ebp, eax; mov dword ptr [rcx-0x7c], 0xc3da75f9; nop; ret; 
0x00000000089e0f: rol byte ptr [rax+rax*8-0x7cb7e98c], 0xc4; or [rax-0x1], bh; pop rbx; pop rbp; ret; 
0x000000000cfb82: rol byte ptr [rax+rax], 0x0; add bl, al; nop [rax+rax]; mov rax, 0x5; ret; 
0x0000000002a579: rol byte ptr [rax+rcx*2], 0x39; ret; 
0x0000000002f140: rol byte ptr [rax+rcx*2], 0x83; ret; 
0x00000000100493: rol byte ptr [rax-0x3806c799], 0x6; add [rax], al; add [rax], al; movups [rsi+0x8], xmm0; ret; 
0x00000000033d3c: rol byte ptr [rax], 0x0; add [rax-0x75], cl; add eax, 0x1b80a1; mov [rax], rdx; ret; 
0x00000000102ad5: rol byte ptr [rax], 0x0; setne al; lea eax, [rax+rax*8+0x5]; ret; 
0x0000000010bf28: rol byte ptr [rax], 0x1; add [rax], al; add [rbp-0x76b7febd], cl; ret; 
0x000000000d095f: rol byte ptr [rax], 0x1; add [rax], al; lea rdi, [rsp+0xd0]; mov rsi, r13; call rbp; 
0x0000000014d93e: rol byte ptr [rax], 0x1; add [rax], al; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x0000000014d1b6: rol byte ptr [rax], 0x1; add [rax], al; mov rsi, [rsp+0x18]; mov rdi, r12; call qword ptr [rax+0x8]; 
0x000000000d0967: rol byte ptr [rax], 0x1; add [rax], al; mov rsi, r13; call rbp; 
0x00000000042fe4: rol byte ptr [rax], 0x1; add [rax], al; movaps [rsp+0xe0], xmm0; movaps [rsp+0xf0], xmm0; syscall; 
0x000000000dcfea: rol byte ptr [rax], cl; add [rax], al; mov eax, 0x1; add rsp, 0x8; ret; 
0x00000000047d10: rol byte ptr [rbp+0x31], 0xc0; punpcklqdq xmm0, xmm1; mov eax, r8d; movups [rdi], xmm0; ret; 
0x0000000009f8c7: rol byte ptr [rbp+0x480e74c0], 0x1; lea eax, [rip+0x14f68d]; mov [rip+0x14f66e], rax; add rsp, 0x8; ret; 
0x00000000184b65: rol byte ptr [rbp+0xf8674c0], 0x1; mov ebp, 0xf80148c0; add rax, r8; vzeroupper; ret; 
0x000000000ac739: rol byte ptr [rbp+0xfd274c0], 0x1; mov ebp, 0xf80148c0; ret; 
0x00000000184b17: rol byte ptr [rbp+0xfd474c0], 0x1; mov ebp, 0xf80148c0; vzeroupper; ret; 
0x000000001136e7: rol byte ptr [rbp-0x74f7872e], 0x47; or [rip+0x100f], ah; ret; 
0x000000001968e9: rol byte ptr [rbp-0x7b], 0xc0; jne 0x0000000000196840; add rsp, 0x38; ret; 
0x00000000184a82: rol byte ptr [rbx+0x14820c0], 0xf8; vzeroupper; ret; 
0x00000000184a92: rol byte ptr [rbx+0x14840c0], 0xf8; vzeroupper; ret; 
0x00000000184aa2: rol byte ptr [rbx+0x14860c0], 0xf8; ret; 
0x00000000102885: rol byte ptr [rbx+0x1874fff8], 0x64; mov dword ptr [0x38], 0x0; mov dword ptr fs:[0x40], 0x0; mov eax, r8d; ret; 
0x000000000ee308: rol byte ptr [rbx+0x3d740afb], 0x48; add esp, 0x8; pop rbx; pop rbp; ret; 
0x0000000010d155: rol byte ptr [rbx+0x97404fa], 0xb8; sbb al, 0x0; add [rax], al; syscall; 
0x00000000062f3d: rol byte ptr [rbx+0xd74fff8], 0x44; mov eax, eax; ret; 
0x00000000082af3: rol byte ptr [rbx+0xf74fff8], 0x1; mov rax, [rsp+0x8]; add rsp, 0x18; ret; 
0x000000001924d6: rol byte ptr [rbx+0xfc3ffd8], 0x1f; add [rax], r8b; xor eax, eax; ret; 
0x00000000055c1b: rol byte ptr [rbx-0x177cfd20], 0x1; ret; 
0x000000001158c0: rol byte ptr [rbx-0x3f7c0f20], 0x26; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000077f1e: rol byte ptr [rbx-0x67b7df18], cl; movzx eax, byte ptr [r11+rax]; movsxd rax, [rsi+rax*4]; add rax, rbx; jmp rax; 
0x000000000342f5: rol byte ptr [rbx-0x6bf07f19], 0xc0; ret; 
0x000000000a44fc: rol byte ptr [rbx-0x77bd7f31], cl; jl short 0x00000000000a4519; rol dword ptr [rcx+rcx*4-0x21], 0xc1; call qword ptr [rdx]; 
0x000000000c3694: rol byte ptr [rbx-0x78f0f608], 0x1; ret far; 
0x00000000134837: rol byte ptr [rbx-0x7cbea817], 0x1; sti; or [rcx+0xf], eax; ret far; 
0x000000000cfb72: rol byte ptr [rbx], 0x0; add [rax], al; ret; 
0x000000000cfb32: rol byte ptr [rbx], 0xc3; nop [rax+rax]; xor rax, rax; ret; 
0x0000000010d1f4: rol byte ptr [rcx+0x1], 0xc0; cmp rdi, rsi; ja short 0x000000000010d1e8; mov eax, r8d; ret; 
0x000000000fc4ec: rol byte ptr [rcx+0x29], 0x1; ret; 
0x000000000dfb57: rol byte ptr [rcx+0x5c], 0x41; pop rbp; pop r14; ret; 
0x0000000009a4cc: rol byte ptr [rcx+0x5c], 0x41; pop rbp; ret; 
0x0000000012cfac: rol byte ptr [rcx+0x5c], 0x5d; ret; 
0x00000000102ad1: rol byte ptr [rcx+0xc0fef9], 0x0; setne al; lea eax, [rax+rax*8+0x5]; ret; 
0x000000000bbd72: rol byte ptr [rcx+0xf], 0x1; adc [rbx], esp; ret; 
0x000000000fff4a: rol byte ptr [rcx+0xf], 0x93; ret; 
0x00000000119e28: rol byte ptr [rcx+0xf], cl; lahf; vpaddsw ymm0, ymm15, [rcx+0xf]; lahf; ret; 
0x0000000012fb28: rol byte ptr [rcx+0xfa], 0x80; cmovne eax, edi; ret; 
0x000000000d06bd: rol byte ptr [rcx+rbp-0x40], 0x89; ret; 
0x00000000085445: rol byte ptr [rcx+rcx*4+0x22], 0x48; add esp, 0x8; pop rbp; pop r12; ret; 
0x000000000f24be: rol byte ptr [rcx+rcx*4+0x45], 0x30; pop rbx; pop rbp; pop r12; ret; 
0x000000001214f8: rol byte ptr [rcx+rcx*4-0x19], cl; mov eax, 0x14; syscall; 
0x0000000013f012: rol byte ptr [rcx+rcx*4-0x30], cl; ret; 
0x00000000048309: rol byte ptr [rcx+rcx*4-0x38], cl; sub rsi, rdi; syscall; 
0x0000000011f8ba: rol byte ptr [rcx+rcx*4-0x3e], 0x1; or eax, esi; wrpkru; xor eax, eax; ret; 
0x000000000ee568: rol byte ptr [rcx+rcx*4-0x40], 0x5b; pop rbp; ret; 
0x0000000008cd61: rol byte ptr [rcx+rcx*4-0x40], 0xc3; nop [rax+rax]; mov r8d, 0x1; mov eax, r8d; ret; 
0x0000000013c36a: rol byte ptr [rcx+rcx*4-0x40], cl; mov byte ptr [rdi+rdx], 0x0; ret; 
0x000000001574f6: rol byte ptr [rcx+rcx*4], 0x50; cld; mov [rdi+0x18], rax; mov eax, r8d; ret; 
0x000000000bdfe5: rol byte ptr [rcx+rdi], 0xf2; je short 0x00000000000bdfef; test edx, edx; jne short 0x00000000000bdfe0; ret; 
0x0000000013c60b: rol byte ptr [rcx-0x3a], 0x40; add al, [rax]; ret; 
0x000000000441c4: rol byte ptr [rcx-0x46], 0x8; add [rax], al; add [rax+0x80], bh; syscall; 
0x000000000d4274: rol byte ptr [rcx-0x5c28f401], 0x0; setb al; add eax, 0x16d; ret; 
0x00000000047b22: rol byte ptr [rcx-0x77], 0x1b; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000000ff2e8: rol byte ptr [rcx-0x77], 0x55; add [rcx+0x6c0f66d0], cl; ret; 
0x00000000114594: rol byte ptr [rcx-0x77], 0xc1; mov edx, [rsp+0x14]; mov rsi, [rsp+0x8]; mov eax, 0x127; syscall; 
0x00000000114654: rol byte ptr [rcx-0x77], 0xc1; mov edx, [rsp+0x14]; mov rsi, [rsp+0x8]; mov eax, 0x128; syscall; 
0x000000000e2d54: rol byte ptr [rcx-0x77], 0xc1; mov r10d, [rsp+0x1c]; mov rdx, [rsp+0x10]; mov eax, 0xf7; syscall; 
0x00000000129593: rol byte ptr [rcx-0x7d], 0xc0; add [rbp+0x440f45c9], eax; ror dword ptr [rax-0x7d], 0x1; ret; 
0x0000000012963e: rol byte ptr [rcx-0x7d], 0xc0; add [rbp+0x440f45f6], eax; ret far; 
0x000000000524ed: rol byte ptr [rcx-0x80], 0x7f; jmp far fword ptr [rdi]; 
0x000000000cfb52: rol byte ptr [rcx], 0x0; add [rax], al; ret; 
0x0000000009f869: rol byte ptr [rcx], 0x0; cmovne rax, rdx; ret; 
0x0000000009f86a: rol byte ptr [rcx], 0x0; cmovne rax, rdx; ret; 
0x00000000153705: rol byte ptr [rcx], 0x39; ret; 
0x000000000ec416: rol byte ptr [rcx], 0x3b; jl short 0x00000000000ec490; mov byte ptr [rdi+0x8], 0x1; mov eax, 0x1; ret; 
0x00000000024cee: rol byte ptr [rcx], 0x50; call rbx; 
0x00000000121fe3: rol byte ptr [rcx], 0x66; mov [rdx], eax; ret; 
0x00000000054362: rol byte ptr [rcx], 0x80; js short 0x0000000000054368; add [rbp-0xa], dh; pop rbx; ret; 
0x000000000a2902: rol byte ptr [rcx], 0x84; sar byte ptr [rdx], cl; cmove rax, rdx; ret; 
0x00000000129641: rol byte ptr [rcx], 0x85; test byte ptr [rbp+0xf], 0x44; ret far; 
0x00000000153f4a: rol byte ptr [rcx], 0x89; ret; 
0x000000000cfb22: rol byte ptr [rcx], 0xc3; nop [rax+rax]; add rax, 0x3; ret; 
0x0000000005327a: rol byte ptr [rcx], 0xc6; jmp qword ptr [rax]; 
0x0000000005d8f3: rol byte ptr [rcx], 0xc7; test [rdi+rdi*8-0x1], esp; jmp qword ptr [rsi]; 
0x00000000043f63: rol byte ptr [rcx], 0xf; adc [rdi], eax; ret; 
0x000000000a8832: rol byte ptr [rcx], 0xf; mov esi, 0xf2390714; je short 0x00000000000a8830; ret; 
0x000000000922ba: rol byte ptr [rcx], cl; add [rax], al; mov rdi, rbx; call qword ptr [rax+0x20]; 
0x00000000117c39: rol byte ptr [rdi+0xd7c1005], 0x0; cmp eax, 0x1; jg short 0x0000000000117c46; ret; 
0x00000000157473: rol byte ptr [rdi+rcx], 0xca; mov [rax-0x4], edx; mov [rdi+0x18], rax; mov eax, r8d; ret; 
0x000000001574b3: rol byte ptr [rdi+rcx], 0xca; mov [rsi], edx; mov [rdi+0x18], rax; mov eax, r8d; ret; 
0x0000000012debf: rol byte ptr [rdi-0x73], 0x44; add [rcx+rbp*8], al; mov dh, 0x71; cmc; call qword ptr [rax-0x18]; 
0x000000000cfbb2: rol byte ptr [rdi], 0x0; add [rax], al; ret; 
0x000000000cfb62: rol byte ptr [rdx], 0x0; add [rax], al; ret; 
0x00000000086bda: rol byte ptr [rdx], 0x0; add [rbp+0x41], bl; pop rsp; pop r13; ret; 
0x000000000cfb19: rol byte ptr [rdx], 0xc3; nop [rax]; add rax, 0x1; ret; 
0x0000000017c98a: rol byte ptr [rdx], cl; add [rax], al; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x0000000011b2b0: rol byte ptr [rdx], cl; add [rax], al; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x000000000bc98c: rol byte ptr [rip-0x72b7fff3], 0x5; mov [rdi], ebp; add [rax], eax; cmove rax, rdx; ret; 
0x000000000cfba2: rol byte ptr [rsi], 0x0; add [rax], al; ret; 
0x0000000017491d: rol byte ptr [rsi], 0x0; add [rbp-0x77], cl; ret far; 
0x000000001846ef: rol ch, 0x1; std; xlat [rbx]; ret; 
0x0000000018b7f6: rol ch, 0x7e; jg short 0x000000000018b83c; mov al, [0x77f8c5237f7ec1c4]; ret; 
0x0000000018b929: rol ch, 0x7e; jg short 0x000000000018b96f; mov al, [0x77f8c5237f7ec1c4]; ret; 
0x000000001889f2: rol ch, 0xf8; ja short 0x00000000001889ba; nop [rax+rax]; xor eax, eax; ret; 
0x00000000188496: rol ch, cl; std; xlat [rbx]; ret; 
0x00000000116f07: rol dh, 0x46; inc dword ptr [rax]; ret; 
0x000000000cfafc: rol dword ptr [rax+0x1e740fe1], 0x1; ret; 
0x0000000015f15d: rol dword ptr [rax+0x48000001], 0x89; mov cl, 0xe9; add esi, ebx; movsq [rdi], [rsi]; ret; 
0x000000001842b4: rol dword ptr [rax+0x49], 0x29; ret far; 
0x00000000029888: rol dword ptr [rax+rcx*2], 0x39; ret far; 
0x000000000ebd75: rol dword ptr [rax+rcx*4+0x4c], 0x24; push 0x1f0f10eb; add [rax-0x7d], cl; ret; 
0x00000000137b99: rol dword ptr [rax], 0x0; test rax, rax; je short 0x0000000000137ba6; mov rdi, rbx; call rax; 
0x00000000137c61: rol dword ptr [rax], 0x0; test rax, rax; je short 0x0000000000137c72; lea rdi, [rip+0xb8770]; call rax; 
0x0000000009cde9: rol dword ptr [rax], cl; add [rax], al; call rax; 
0x0000000012d106: rol dword ptr [rax], cl; add [rax], al; leave; ret; 
0x00000000184620: rol dword ptr [rbp+0x311b75c0], 0xc0; vzeroupper; ret; 
0x000000000ac174: rol dword ptr [rbp+0x315775c0], 0xc0; ret; 
0x000000000ac627: rol dword ptr [rbp+0x317475c0], 0xc0; ret; 
0x000000000ac656: rol dword ptr [rbp+0x317575c0], 0xc0; ret; 
0x000000000860a6: rol dword ptr [rbp+0x31], 0xd2; mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x000000000978eb: rol dword ptr [rbp+rdx], 0x1; xor edi, edi; call qword ptr [rax]; 
0x000000000ac144: rol dword ptr [rbp-0x5c7af040], 0x0; add [rax], al; xor eax, eax; ret; 
0x00000000188927: rol dword ptr [rbp-0x5f7af040], 0x0; add [rax], al; mov rax, r8; vzeroupper; ret; 
0x000000001845e3: rol dword ptr [rbp-0x6b7af040], 0x0; add [rax], al; xor eax, eax; vzeroupper; ret; 
0x000000000a880c: rol dword ptr [rbp-0x7c], 0xca; jne short 0x00000000000a87f0; mov rax, r8; ret; 
0x000000000e2d57: rol dword ptr [rbx+rcx*4+0x54], 0x24; sbb al, 0x48; mov edx, [rsp+0x10]; mov eax, 0xf7; syscall; 
0x0000000019374d: rol dword ptr [rbx-0x76b6fe1b], 0x1; ret far; 
0x000000000a4516: rol dword ptr [rbx-0x77bd7f31], 0x1; jl short 0x00000000000a4533; rol dword ptr [rcx+rcx*4-0x21], 0xc1; call far fword ptr [rax]; 
0x000000000a8941: rol dword ptr [rcx+0x39], 0xd0; setne dil; test r9b, dil; jne short 0x00000000000a8928; ret; 
0x0000000007a1a2: rol dword ptr [rcx+0x5c], 0x41; pop rbp; mov rax, r9; pop r14; ret; 
0x000000000f6ed6: rol dword ptr [rcx+rcx*2], 0x39; ret far; 
0x000000000a451e: rol dword ptr [rcx+rcx*4-0x21], 0xc1; call far fword ptr [rax]; 
0x000000000a4504: rol dword ptr [rcx+rcx*4-0x21], 0xc1; call qword ptr [rdx]; 
0x00000000047d17: rol dword ptr [rcx+rcx*4-0x40], 0xf; adc [rdi], eax; ret; 
0x0000000008b0e9: rol dword ptr [rcx], cl; add [rax], al; mov rdi, rbx; call qword ptr [rbp+0x60]; 
0x000000000d686e: rol dword ptr [rdi+rcx], 0x84; ret; 
0x000000000d6c7b: rol dword ptr [rdi+rcx], 0x85; xchg edx, eax; add [rax], al; add [rcx-0x77], al; ret far; 
0x000000000b9019: rol dword ptr [rdi], cl; add [rax], al; ret; 
0x000000000b6e33: rol dword ptr [rdx+0x6349000f], 0x1; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000013c556: rol dword ptr [rdx], 0x45; mov [rax], ebx; pop rbx; mov [r9], rcx; ret; 
0x00000000023a4c: rol eax, 0x11; mov [rip+0x1cd8d2], rax; ret; 
0x00000000147eb8: rol eax, 0x8; mov rdi, r15; mov [rsp+0x192], ax; mov rax, [rsp+0x30]; call rax; 
0x0000000012fb07: rol eax, 0x8; ret; 
0x00000000043c11: rol eax, cl; and [rdi], rax; xor eax, eax; ret; 
0x0000000013c967: rol ebx, 0x1; nop [rax]; mov rax, 0xffffffffffffffff; mov rdx, 0xffffffffffffffff; ret; 
0x00000000042354: rol ebx, 0x66; nop [rax+rax]; and esi, 0x80000000; mov [rdi], esi; ret; 
0x0000000013a32e: rol esi, 0x45; ret; 
0x0000000013a32d: rol r14, 0x45; ret; 
0x00000000023a4b: rol rax, 0x11; mov [rip+0x1cd8d2], rax; ret; 
0x00000000043c10: rol rax, cl; and [rdi], rax; xor eax, eax; ret; 
0x0000000003287a: ror byte ptr [r8-0x73], 0x1; add eax, 0x1bb21d; mov [rip+0x1bb274], dl; ret; 
0x00000000168baf: ror byte ptr [r8-0x7d], 0xef; lea r11, [rip+0x54d84]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001661cf: ror byte ptr [r8-0x7d], 0xef; lea r11, [rip+0x575a4]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000008a82c: ror byte ptr [r9+rcx*4-0xf], 0x4c; mov edi, edi; call r12; 
0x0000000003888b: ror byte ptr [rax+0x1], 0x1; ret; 
0x0000000013c536: ror byte ptr [rax+0x1], 0x1; xlat [rbx]; mov [r9], rdi; ret; 
0x00000000188296: ror byte ptr [rax+0x1], 0xc8; add rax, rdi; vzeroupper; ret; 
0x00000000184b6c: ror byte ptr [rax+0x1], 0xf8; add rax, r8; vzeroupper; ret; 
0x000000000ac27c: ror byte ptr [rax+0x1], 0xf8; add rax, rcx; ret; 
0x00000000188638: ror byte ptr [rax+0x1], 0xf8; add rax, rcx; sub rax, rdx; vzeroupper; ret; 
0x00000000184768: ror byte ptr [rax+0x1], 0xf8; add rax, rcx; vzeroupper; ret; 
0x000000000ac798: ror byte ptr [rax+0x1], 0xf8; add rax, rsi; ret; 
0x000000000ac192: ror byte ptr [rax+0x1], 0xf8; ret; 
0x0000000018d063: ror byte ptr [rax+0x1], 0xf8; sub rax, rdx; shr rax, 0x2; vzeroupper; ret; 
0x000000001886f3: ror byte ptr [rax+0x1], 0xf8; sub rax, rdx; vzeroupper; ret; 
0x000000001846b3: ror byte ptr [rax+0x1], 0xf8; vzeroupper; ret; 
0x000000000b1d74: ror byte ptr [rax+0x1], cl; ror byte ptr [rax+0x29], 0x1; clc; ret; 
0x000000000cf879: ror byte ptr [rax+0x1], cl; ror byte ptr [rax+0x29], 0x1; clc; shr rax, 0x2; ret; 
0x000000001609a8: ror byte ptr [rax+0x21], 0x1; add al, 0xd7; xor eax, eax; ret; 
0x00000000043c12: ror byte ptr [rax+0x21], 0x7; xor eax, eax; ret; 
0x00000000041f12: ror byte ptr [rax+0x21], 0xd0; sub rax, rdx; shr rax, 0x3f; ret; 
0x000000000b1d77: ror byte ptr [rax+0x29], 0x1; clc; ret; 
0x000000000cf87c: ror byte ptr [rax+0x29], 0x1; clc; shr rax, 0x2; ret; 
0x000000000abf5b: ror byte ptr [rax+0x29], 0xc2; jbe 0x00000000000ac200; add rax, rdi; add rax, rcx; ret; 
0x000000000ce14b: ror byte ptr [rax+0x29], 0xc2; jbe 0x00000000000ce3f0; add rax, rdi; add rax, rcx; ret; 
0x000000000ac1c2: ror byte ptr [rax+0x29], 0xc2; jbe short 0x00000000000ac200; add rax, rdi; ret; 
0x000000000ac1d2: ror byte ptr [rax+0x29], 0xc2; jbe short 0x00000000000ac200; lea rax, [rdi+rax+0x10]; ret; 
0x000000000ac1e2: ror byte ptr [rax+0x29], 0xc2; jbe short 0x00000000000ac200; lea rax, [rdi+rax+0x20]; ret; 
0x000000000ac1f2: ror byte ptr [rax+0x29], 0xc2; jbe short 0x00000000000ac200; lea rax, [rdi+rax+0x30]; ret; 
0x000000000ce3b2: ror byte ptr [rax+0x29], 0xc2; jbe short 0x00000000000ce3f0; add rax, rdi; ret; 
0x000000000ce3c2: ror byte ptr [rax+0x29], 0xc2; jbe short 0x00000000000ce3f0; lea rax, [rdi+rax+0x10]; ret; 
0x000000000ce3d2: ror byte ptr [rax+0x29], 0xc2; jbe short 0x00000000000ce3f0; lea rax, [rdi+rax+0x20]; ret; 
0x000000000ce3e2: ror byte ptr [rax+0x29], 0xc2; jbe short 0x00000000000ce3f0; lea rax, [rdi+rax+0x30]; ret; 
0x000000000993ce: ror byte ptr [rax+0x39], 0x1; ret; 
0x0000000009ef4d: ror byte ptr [rax+0x39], 0x77; or [rdx+0xc], dh; mov [rdi], rsi; ret; 
0x00000000184633: ror byte ptr [rax+0x39], 0xc2; jbe short 0x00000000001846a0; add rax, rdi; vzeroupper; ret; 
0x0000000018c0e3: ror byte ptr [rax+0x39], 0xc2; jbe short 0x000000000018c150; add rax, rdi; vzeroupper; ret; 
0x0000000010fdb2: ror byte ptr [rax+0x39], 0xd1; seta al; sbb eax, 0x0; ret; 
0x0000000010d1f7: ror byte ptr [rax+0x39], 0xf7; ja short 0x000000000010d1e8; mov eax, r8d; ret; 
0x00000000094c95: ror byte ptr [rax+0x39], 0xf7; sete al; ret; 
0x000000000941c0: ror byte ptr [rax+0x39], 0xfa; setae al; ret; 
0x00000000028992: ror byte ptr [rax+0x39], cl; ret; 
0x000000000d4f14: ror byte ptr [rax+0x63], 0x4; xchg [rax+0x1], ecx; clc; notrack jmp rax; 
0x000000000407a8: ror byte ptr [rax+0x63], cl; adc al, 0x96; add rdx, rsi; notrack jmp rdx; 
0x00000000052d76: ror byte ptr [rax+0x63], cl; adc al, 0x97; add rdx, rdi; notrack jmp rdx; 
0x0000000006495a: ror byte ptr [rax+0x63], cl; add al, 0x91; add rax, rcx; notrack jmp rax; 
0x000000000edfe3: ror byte ptr [rax+0x63], cl; ret far; 
0x0000000019467d: ror byte ptr [rax+0xf], cl; ret far; 
0x000000000cf906: ror byte ptr [rax+0xf], cl; ret; 
0x0000000011fd7a: ror byte ptr [rax+rax], 0xf7; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x0000000011fd7b: ror byte ptr [rax+rax], 0xf7; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x000000000bb948: ror byte ptr [rax-0x1], 0xc0; add rsp, 0x100; sub rax, rdx; ret; 
0x000000000bb945: ror byte ptr [rax-0x1], 0xc0; inc rax; add rsp, 0x100; sub rax, rdx; ret; 
0x000000000ac8e6: ror byte ptr [rax-0x2d], 0xfa; movzx edx, dl; sub eax, edx; ret; 
0x000000000b1cb6: ror byte ptr [rax-0x2d], 0xfa; test rdx, rdx; je short 0x00000000000b1cd0; bsf rax, rdx; ret; 
0x000000000b1c59: ror byte ptr [rax-0x2d], 0xfa; test rdx, rdx; je short 0x00000000000b1ce0; bsf rax, rdx; ret; 
0x0000000015ce88: ror byte ptr [rax-0x39], 0x2; add [rax], al; add [rax], al; ret; 
0x000000000589aa: ror byte ptr [rax-0x39], cl; ret; 
0x000000000bcd38: ror byte ptr [rax-0x73], 0x1; adc eax, 0xcf1b0; lea rax, [rip+0x11389]; cmove rax, rdx; ret; 
0x000000000bc878: ror byte ptr [rax-0x73], 0x1; adc eax, 0xcf940; lea rax, [rip+0x11b79]; cmove rax, rdx; ret; 
0x000000000bca28: ror byte ptr [rax-0x73], 0x1; adc eax, 0xcfbe0; lea rax, [rip+0x12699]; cmove rax, rdx; ret; 
0x000000000bcb18: ror byte ptr [rax-0x73], 0x1; adc eax, 0xd0240; lea rax, [rip+0x12879]; cmove rax, rdx; ret; 
0x000000000bc838: ror byte ptr [rax-0x73], 0x1; adc eax, 0xd02f0; lea rax, [rip+0x129c9]; cmove rax, rdx; ret; 
0x000000000bc988: ror byte ptr [rax-0x73], 0x1; adc eax, 0xd05c0; lea rax, [rip+0x12f89]; cmove rax, rdx; ret; 
0x000000000a8bf8: ror byte ptr [rax-0x73], 0x1; adc eax, 0xdbc60; lea rax, [rip+0x3819]; cmove rax, rdx; ret; 
0x000000000a1ca8: ror byte ptr [rax-0x73], 0x1; adc eax, 0xe2a60; lea rax, [rip+0xa559]; cmove rax, rdx; ret; 
0x000000000a0428: ror byte ptr [rax-0x73], 0x1; adc eax, 0xe4010; lea rax, [rip+0xbaa9]; cmove rax, rdx; ret; 
0x000000000a1ce8: ror byte ptr [rax-0x73], 0x1; adc eax, 0xe6530; lea rax, [rip+0xf9d9]; cmove rax, rdx; ret; 
0x0000000009f838: ror byte ptr [rax-0x73], 0x1; adc eax, 0xe8bd0; lea rax, [rip+0x12099]; cmove rax, rdx; ret; 
0x0000000009f688: ror byte ptr [rax-0x73], 0x1; adc eax, 0xe8f50; lea rax, [rip+0x12549]; cmove rax, rdx; ret; 
0x0000000009f6c8: ror byte ptr [rax-0x73], 0x1; adc eax, 0xe90b0; lea rax, [rip+0x126a9]; cmove rax, rdx; ret; 
0x0000000003287b: ror byte ptr [rax-0x73], 0x1; add eax, 0x1bb21d; mov [rip+0x1bb274], dl; ret; 
0x000000001462a5: ror byte ptr [rax-0x73], 0x1; add eax, 0xaa853; add rsp, 0x8; ret; 
0x0000000018a242: ror byte ptr [rax-0x73], 0x1; jl short 0x000000000018a25e; and ecx, ebp; ret; 
0x0000000007556e: ror byte ptr [rax-0x73], 0x34; ret; 
0x000000000e5230: ror byte ptr [rax-0x73], 0x44; add bh, bh; ret; 
0x000000000ac1b2: ror byte ptr [rax-0x73], 0x44; cmp [rax], ah; ret; 
0x000000000ac692: ror byte ptr [rax-0x73], 0x44; cmp [rax], dh; ret; 
0x000000000ac1a2: ror byte ptr [rax-0x73], 0x44; cmp [rax], dl; ret; 
0x000000000ac182: ror byte ptr [rax-0x73], 0x44; cmp al, dh; ret; 
0x00000000113863: ror byte ptr [rax-0x73], 0x54; and al, 0x30; mov eax, 0x10; syscall; 
0x00000000083cdc: ror byte ptr [rax-0x73], cl; xor eax, 0x25c; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000009318d: ror byte ptr [rax-0x73], cl; xor eax, 0xffffde4b; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000092dd9: ror byte ptr [rax-0x73], cl; xor eax, 0xffffe1ff; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000092aa3: ror byte ptr [rax-0x73], cl; xor eax, 0xffffe535; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000915eb: ror byte ptr [rax-0x73], cl; xor eax, 0xfffff9ed; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000842dd: ror byte ptr [rax-0x73], cl; xor eax, 0xfffffc5b; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000910f4: ror byte ptr [rax-0x73], cl; xor eax, 0xfffffee4; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000041e89: ror byte ptr [rax-0x75], 0x1; add eax, 0x1a9fdf; mov dword ptr fs:[rax], 0x22; add rsp, 0x8; ret; 
0x00000000153e2a: ror byte ptr [rax-0x75], 0x1; or [r8-0x77], r9b; out dx, eax; call qword ptr [rax+0x8]; 
0x0000000009e953: ror byte ptr [rax-0x75], 0x1; push rdx; or [rax-0x7b], cl; shl byte ptr [rbp-0xd], cl; ret; 
0x00000000096890: ror byte ptr [rax-0x75], 0x46; or [rax-0x77], cl; ret; 
0x000000000caa11: ror byte ptr [rax-0x75], 0x4c; and al, 0x20; mov rdi, rbp; mov rsi, [rsp+0x18]; call rbx; 
0x0000000010df62: ror byte ptr [rax-0x75], 0x74; and al, 0x10; mov edi, [rsp+0x18]; mov eax, 0x101; syscall; 
0x00000000120cad: ror byte ptr [rax-0x75], 0x74; and al, 0x10; mov edi, [rsp+0xc]; mov eax, 0x133; syscall; 
0x0000000011f48d: ror byte ptr [rax-0x75], 0x74; and al, 0x10; mov edi, [rsp+0xc]; mov eax, 0xe8; syscall; 
0x0000000014695c: ror byte ptr [rax-0x75], 0x74; and al, 0x10; mov rcx, [rsp+0x8]; mov rdi, rbp; call rcx; 
0x0000000014d1e8: ror byte ptr [rax-0x75], 0x74; and al, 0x30; mov rcx, [rsp+0x28]; mov rdi, r12; call rcx; 
0x0000000014d403: ror byte ptr [rax-0x75], 0x74; and al, 0x40; mov rdx, [rsp+0x20]; mov rdi, r12; call rdx; 
0x000000001509d9: ror byte ptr [rax-0x75], 0x74; and al, 0x50; mov rcx, [rsp+0x10]; mov rdi, r15; call rcx; 
0x000000000e2c9e: ror byte ptr [rax-0x75], 0x74; and al, 0x8; mov edi, [rsp+0x10]; mov eax, 0x3d; syscall; 
0x0000000011325f: ror byte ptr [rax-0x75], 0x74; and al, 0x8; mov edi, [rsp+0x18]; mov eax, 0x115; syscall; 
0x00000000120b4f: ror byte ptr [rax-0x75], 0x74; and al, 0x8; mov edi, [rsp+0x18]; mov eax, 0x120; syscall; 
0x00000000120f1f: ror byte ptr [rax-0x75], 0x74; and al, 0x8; mov edi, [rsp+0x18]; mov eax, 0x45; syscall; 
0x0000000011f5ee: ror byte ptr [rax-0x75], 0x74; and al, 0x8; mov edi, [rsp]; mov eax, 0x116; syscall; 
0x0000000010c1cf: ror byte ptr [rax-0x75], 0x74; and al, 0x8; mov edi, [rsp]; mov eax, 0x11; syscall; 
0x0000000010c27f: ror byte ptr [rax-0x75], 0x74; and al, 0x8; mov edi, [rsp]; mov eax, 0x12; syscall; 
0x000000000dc233: ror byte ptr [rax-0x75], 0x74; ret; 
0x00000000048282: ror byte ptr [rax-0x75], 0x7c; and al, 0x8; mov eax, 0x13e; syscall; 
0x00000000118a42: ror byte ptr [rax-0x75], 0x7c; and al, 0x8; mov eax, 0x1a; syscall; 
0x000000001129c2: ror byte ptr [rax-0x75], 0x7c; and al, 0x8; mov eax, 0x7; syscall; 
0x0000000015f813: ror byte ptr [rax-0x75], 0x7f; or [rdx], ch; lea rcx, [rsi+0x398]; push 0x2; call qword ptr [rax+0x1e0]; 
0x000000000d12b9: ror byte ptr [rax-0x77], 0x1; and [r11+0x5d], r11b; pop r12; pop r13; ret; 
0x0000000003801e: ror byte ptr [rax-0x77], 0x1; fisttp word ptr [rdi], st; mov dh, 0x43; add [rax-0x7d], ecx; ret; 
0x0000000010d619: ror byte ptr [rax-0x77], 0x1; ret far; 
0x00000000089929: ror byte ptr [rax-0x77], 0x1; ret; 
0x0000000014d04a: ror byte ptr [rax-0x77], 0x2; mov eax, 0x1; ret; 
0x000000000557e3: ror byte ptr [rax-0x77], 0x34; ror dword ptr [rax-0x7d], 0xc0; add [rax+0x39], ecx; ret; 
0x0000000009ef6b: ror byte ptr [rax-0x77], 0x37; ret; 
0x0000000011979a: ror byte ptr [rax-0x77], 0x3; pop rbx; setne al; movzx eax, al; ret; 
0x00000000086ec9: ror byte ptr [rax-0x77], 0x48; adc [rax-0x77], cl; push rax; movups [rax], xmm0; ret; 
0x00000000156adf: ror byte ptr [rax-0x77], 0x4; and al, 0x48; mov eax, [rbp+0x8]; call qword ptr [rax+0x8]; 
0x0000000015646b: ror byte ptr [rax-0x77], 0x4; and al, 0x48; mov eax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x00000000091922: ror byte ptr [rax-0x77], 0x57; sbb [rax-0x77], cl; movups [rdi+0x8], xmm0; ret; 
0x00000000117395: ror byte ptr [rax-0x77], 0x5; ret far; 
0x000000000a865c: ror byte ptr [rax-0x77], 0xa; ret; 
0x0000000014dadc: ror byte ptr [rax-0x77], 0xd6; add rdi, 0x10; jmp rcx; 
0x0000000014dafc: ror byte ptr [rax-0x77], 0xd6; mov dword ptr [rdi+0x10], 0x2; add rdi, 0x10; jmp rcx; 
0x0000000015064c: ror byte ptr [rax-0x77], 0xd6; mov dword ptr [rdi+0x58], 0x2; add rdi, 0x58; jmp rcx; 
0x0000000014fd0c: ror byte ptr [rax-0x77], 0xd6; mov dword ptr [rdi+0x68], 0x2; add rdi, 0x68; jmp rcx; 
0x0000000014cecc: ror byte ptr [rax-0x77], 0xd6; mov dword ptr [rdi+0xc8], 0x2; add rdi, 0xc8; jmp rcx; 
0x000000000a2c68: ror byte ptr [rax-0x77], 0xd8; pop rbx; cmovne rax, rdi; ret; 
0x000000000627d5: ror byte ptr [rax-0x77], 0xd8; test r8d, r8d; jne short 0x00000000000627e0; pop rbx; ret; 
0x00000000147e0f: ror byte ptr [rax-0x77], 0xdf; call rcx; 
0x00000000113a3f: ror byte ptr [rax-0x77], 0xe2; mov eax, 0x10; syscall; 
0x00000000155b9a: ror byte ptr [rax-0x77], 0xe7; mov dword ptr [rsp], 0x2; call r8; 
0x0000000008f4f9: ror byte ptr [rax-0x77], cl; out dx, al; mov rdi, rbx; call qword ptr [r12+0x80]; 
0x00000000084ac9: ror byte ptr [rax-0x77], cl; out dx, al; mov rdi, rbx; call qword ptr [r13+0x48]; 
0x0000000008eaa3: ror byte ptr [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x80]; 
0x0000000008eda5: ror byte ptr [rax-0x77], cl; out dx, eax; call qword ptr [rbx+0x80]; 
0x0000000013b97d: ror byte ptr [rax-0x77], cl; xor eax, eax; ret; 
0x000000000908d5: ror byte ptr [rax-0x7b], 0xd2; jne short 0x00000000000908e0; ret; 
0x00000000047490: ror byte ptr [rax-0x7b], 0xff; je short 0x000000000004749c; mov dword ptr [rdi], 0x0; pop rbx; ret; 
0x00000000120a38: ror byte ptr [rax-0x7d], 0x1; ret; 
0x0000000002a576: ror byte ptr [rax-0x7d], 0x1; rol byte ptr [rax+rcx*2], 0x39; ret; 
0x0000000011971f: ror byte ptr [rax-0x7d], 0x3e; add [rax-0x77], cl; je short 0x0000000000119730; pop rbx; ret; 
0x0000000008cd58: ror byte ptr [rax-0x7d], 0x7f; sbb [rax], al; setne r8b; mov eax, r8d; ret; 
0x00000000188723: ror byte ptr [rax-0x7d], 0xc0; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x000000001846d3: ror byte ptr [rax-0x7d], 0xc0; add rax, rdi; vzeroupper; ret; 
0x000000001846c3: ror byte ptr [rax-0x7d], 0xc0; and [rax+0x1], cl; clc; vzeroupper; ret; 
0x0000000010052f: ror byte ptr [rax-0x7d], 0xc4; adc [rbx+0x5d], bl; pop r12; ret; 
0x0000000010d3e9: ror byte ptr [rax-0x7d], 0xc4; or [rbp+0x41], bl; pop rsp; ret; 
0x000000000556b6: ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x5d], bl; pop r12; pop r13; ret; 
0x000000000480a3: ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x5d], bl; ret; 
0x00000000157c8d: ror byte ptr [rax-0x7d], 0xc4; or [rcx+rcx*4-0x40], al; ret; 
0x000000000dd6ba: ror byte ptr [rax-0x7d], 0xc4; or [rcx+rcx*4-0x40], cl; pop rbx; pop rbp; ret; 
0x0000000014dd41: ror byte ptr [rax-0x7d], 0xc4; or [rdi], cl; mov dh, 0xc0; add eax, 0x1; ret; 
0x00000000024707: ror byte ptr [rax-0x7d], 0xc4; or [rdi], cl; mov dh, 0xc0; neg eax; ret; 
0x000000000522e4: ror byte ptr [rax-0x7d], 0xc4; or [rdi], cl; mov dh, 0xc0; ret; 
0x000000001457ce: ror byte ptr [rax-0x7d], 0xc4; or bl, al; nop [rax]; mov eax, 0x1; ret; 
0x0000000014faac: ror byte ptr [rax-0x7d], 0xc4; or cl, ch; jp short 0x000000000014fad2; jmp qword ptr [rsi+0x2e]; 
0x0000000010fbc7: ror byte ptr [rax-0x7d], 0xc4; pop rax; ret; 
0x0000000008e495: ror byte ptr [rax-0x7d], 0xc4; sbb [rbx+0x5d], bl; ret; 
0x0000000009cfa9: ror byte ptr [rax-0x7d], 0xc4; sbb [rcx+rcx*4-0x40], cl; pop rbx; pop r12; ret; 
0x00000000062e58: ror byte ptr [rax-0x7d], 0xc4; sbb [rdi], cl; mov dh, 0xc0; neg eax; ret; 
0x000000000ac6a2: ror byte ptr [rax-0x7d], 0xea; add rdx, rax; jl short 0x00000000000ac710; add rax, rdi; ret; 
0x0000000016b2df: ror byte ptr [rax-0x7d], 0xea; lea r11, [rip+0x52655]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168bb0: ror byte ptr [rax-0x7d], 0xef; lea r11, [rip+0x54d84]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001661d0: ror byte ptr [rax-0x7d], 0xef; lea r11, [rip+0x575a4]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000fde1d: ror byte ptr [rax-0x7d], cl; ret; 
0x000000000bb94b: ror byte ptr [rax-0x7f], 0xc4; add [rcx], al; add [rax], al; sub rax, rdx; ret; 
0x00000000043050: ror byte ptr [rax-0x7f], 0xc4; sbb [rcx], al; add [rax], al; ret; 
0x000000000e51d4: ror byte ptr [rax-0x7f], 0xfa; push rsp; push rbx; setne al; ret; 
0x000000001176aa: ror byte ptr [rax], 0x48; mov [rip+0xd80dd], eax; mov rax, r8; add rsp, 0x8; ret; 
0x0000000011767a: ror byte ptr [rax], 0x48; mov [rip+0xd810d], eax; mov rax, r8; ret; 
0x00000000147eb9: ror byte ptr [rax], 0x4c; mov edi, edi; mov [rsp+0x192], ax; mov rax, [rsp+0x30]; call rax; 
0x000000000bba04: ror byte ptr [rax], cl; leave; cmove rax, rdx; ret; 
0x000000000d0b7c: ror byte ptr [rbp+0x1], 0xc6; mov [rsp+0x88], r14; call rbp; 
0x000000000ba099: ror byte ptr [rbp+rcx*4+0x1d], cl; and edx, [rdi+rcx]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8b26: ror byte ptr [rbp+rcx*4+0x1d], cl; push 0x6349000f; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000baa46: ror byte ptr [rbp+rcx*4+0x1d], cl; test byte ptr [rdx+0xf], 0x0; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000ba113: ror byte ptr [rbp+rcx*4+0x1d], cl; test eax, 0x49000f53; movsxd ecx, [rbx+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6dcb: ror byte ptr [rbp+rcx*4+0x1d], cl; xor eax, 0x49000f83; movsxd ecx, [rbx+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000d185a: ror byte ptr [rbp+rcx*4+0x44], 0x24; and al, ch; cmp ebx, [rdx]; stc; call far fword ptr [rcx+0x5e]; 
0x000000000e45b7: ror byte ptr [rbx+0x10ced205], 0x0; test eax, eax; jne short 0x00000000000e45f0; mov eax, 0x77; syscall; 
0x000000000e4507: ror byte ptr [rbx+0x10cf8205], 0x0; test eax, eax; jne short 0x00000000000e4540; mov eax, 0x75; syscall; 
0x000000000e4237: ror byte ptr [rbx+0x10d25205], 0x0; test eax, eax; jne short 0x00000000000e4270; mov eax, 0x6a; syscall; 
0x000000000e4197: ror byte ptr [rbx+0x10d2f205], 0x0; test eax, eax; jne short 0x00000000000e41d0; mov eax, 0x69; syscall; 
0x000000000df417: ror byte ptr [rbx+0x11207205], 0x0; test eax, eax; jne short 0x00000000000df450; mov eax, 0x74; syscall; 
0x0000000010e033: ror byte ptr [rbx+0x3108247c], 0xc0; syscall; 
0x0000000018c8d7: ror byte ptr [rbx+0x343b0e34], 0xa; jne 0x000000000018c679; vzeroupper; ret; 
0x0000000018c3c4: ror byte ptr [rbx+0x3b203e4c], 0x4c; cmp ah, [rax]; jne 0x000000000018c209; vzeroupper; ret; 
0x0000000018c392: ror byte ptr [rbx+0x3c3b0e3c], 0xa; jne 0x000000000018c209; vzeroupper; ret; 
0x0000000018c818: ror byte ptr [rbx+0x3c3b0e3c], 0xa; jne 0x000000000018c679; vzeroupper; ret; 
0x0000000018bcb1: ror byte ptr [rbx+0x75163b17], 0xe4; ret; 
0x0000000018c58b: ror byte ptr [rbx+0xc3b170c], 0x16; jne 0x000000000018c209; vzeroupper; ret; 
0x0000000018ca83: ror byte ptr [rbx+0xc3b170c], 0x16; jne 0x000000000018c679; vzeroupper; ret; 
0x0000000018c6a2: ror byte ptr [rbx+0xc3b170c], 0x16; jne short 0x000000000018c679; vzeroupper; ret; 
0x0000000018c85b: ror byte ptr [rbx+0xc3b3e0c], 0x3a; jne 0x000000000018c679; vzeroupper; ret; 
0x00000000114a37: ror byte ptr [rbx+0xdca5205], 0x0; test eax, eax; jne short 0x0000000000114a70; mov eax, 0x72; syscall; 
0x00000000114997: ror byte ptr [rbx+0xdcaf205], 0x0; test eax, eax; jne short 0x00000000001149d0; mov eax, 0x71; syscall; 
0x0000000009f83c: ror byte ptr [rbx-0x72b7fff2], 0x1; add eax, 0x12099; cmove rax, rdx; ret; 
0x0000000011f53e: ror byte ptr [rbx-0x74e7db8c], 0x7c; and al, 0x8; mov eax, 0x114; syscall; 
0x0000000011330f: ror byte ptr [rbx-0x74f3db8c], 0x7c; and al, 0x8; mov eax, 0x11d; syscall; 
0x00000000130811: ror byte ptr [rbx], 0x1; add [rax], al; add [rax], al; add bl, ch; ret far; 
0x000000001330d1: ror byte ptr [rbx], 0x1; add [rcx], al; mov fs:[r8], r9d; add rsp, 0x18; ret; 
0x000000000e50fe: ror byte ptr [rbx], 0x1; mov edx, 0x40; mov eax, 0x20; cmove rax, rdx; ret; 
0x000000000e4fab: ror byte ptr [rbx], 0x1; mov edx, 0xfde8; mov eax, 0x7f; cmove rax, rdx; ret; 
0x00000000113d98: ror byte ptr [rcx+0x12eb8fe], cl; add [rax], al; xor edi, edi; syscall; 
0x000000000a31fe: ror byte ptr [rcx+0x1], 0x1; ret; 
0x00000000155940: ror byte ptr [rcx+0x1], 0xdd; call rbp; 
0x00000000156456: ror byte ptr [rcx+0x1b803], 0x0; add bl, ch; ret; 
0x000000000f5424: ror byte ptr [rcx+0x21], 0x1; ret far; 
0x000000001277b4: ror byte ptr [rcx+0x2b], 0x1; cmp [r8+0x39], r9b; ret; 
0x0000000002d8c8: ror byte ptr [rcx+0x3948fc51], cl; ret; 
0x00000000113725: ror byte ptr [rcx+0x48c30877], 0x8b; add eax, 0xd873f; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010c52a: ror byte ptr [rcx+0x5d5b0453], 0x41; pop rsp; ret; 
0x000000000f23f7: ror byte ptr [rcx+0x5d5b307d], 0x41; pop rsp; ret; 
0x000000000a8b15: ror byte ptr [rcx+0x63], 0x1; add al, 0x80; add rax, r8; notrack jmp rax; 
0x00000000090206: ror byte ptr [rcx+0x63], 0x4; or dword ptr [rcx+rax-0x28], 0x3e; jmp rax; 
0x0000000010910a: ror byte ptr [rcx+0x63], 0x4; test [rcx+rax-0x20], cl; notrack jmp rax; 
0x000000000d6101: ror byte ptr [rcx+0x63], 0x4; xchg [rcx+rax-0x10], cl; notrack jmp rax; 
0x00000000147711: ror byte ptr [rcx+rbp-0x20], 0x48; mov [rbx+0x18], eax; mov rax, [rbp+0x8]; call qword ptr [rax+0x28]; 
0x00000000060f24: ror byte ptr [rcx+rcx*4+0x2b], 0x5b; pop rbp; pop r12; pop r13; ret; 
0x00000000029616: ror byte ptr [rcx+rcx*4+0x5c], 0x24; sub [rcx-0x77], cl; ret; 
0x000000000d0399: ror byte ptr [rcx+rcx*4+0x64], 0x24; push rax; call rbx; 
0x0000000014a51d: ror byte ptr [rcx+rcx*4+0x7], 0x1; mov [rdi+0x8], rax; ret; 
0x0000000008a5dd: ror byte ptr [rcx+rcx*4-0x11], 0x4c; lea ecx, [rsp+0x18]; call rbp; 
0x000000000bd798: ror byte ptr [rcx+rcx*4-0x19], 0x4c; lea ecx, [rsp+0x30]; call rbx; 
0x00000000089269: ror byte ptr [rcx+rcx*4-0x1], cl; call qword ptr [r14+0x80]; 
0x00000000089835: ror byte ptr [rcx+rcx*4-0x1], cl; call qword ptr [rbx+0x80]; 
0x0000000010d3d1: ror byte ptr [rcx+rcx*4-0x1a], cl; mov rdi, rbp; mov eax, 0x135; syscall; 
0x00000000144d5d: ror byte ptr [rcx+rcx*4-0x1a], cl; mov rdi, rbx; mov rcx, r13; call r10; 
0x000000000385b3: ror byte ptr [rcx+rcx*4-0x20], 0x1; pop rbp; pop r12; pop r13; ret; 
0x000000000dd8c3: ror byte ptr [rcx+rcx*4-0x20], 0x1; pop rbx; pop rbp; pop r12; ret; 
0x0000000004302b: ror byte ptr [rcx+rcx*4-0x32], cl; mov edi, 0x2; mov eax, 0xe; syscall; 
0x00000000046cba: ror byte ptr [rcx+rcx*4-0x40], 0x5b; pop rbp; ret; 
0x0000000015321a: ror byte ptr [rcx+rcx*4-0x40], 0x5b; ret; 
0x0000000010c9c4: ror byte ptr [rcx+rcx*4-0xa], cl; mov edi, 0x2; mov eax, 0xe; syscall; 
0x000000000749f3: ror byte ptr [rcx+rcx*4-0xa], cl; mov rdi, r15; mov [rbp-0x954], r9d; mov [rbp-0x948], r11d; call rax; 
0x00000000144bfb: ror byte ptr [rcx+rcx*4-0xa], cl; mov rdi, r15; mov [rsp+0x8], rcx; call rbp; 
0x000000001449ca: ror byte ptr [rcx+rcx*4-0xf], 0x4c; mov edi, ebp; call r12; 
0x0000000008a82d: ror byte ptr [rcx+rcx*4-0xf], 0x4c; mov edi, edi; call r12; 
0x00000000041bd8: ror byte ptr [rcx-0x24efdbbc], 0x1; insb [rdi], dx; and al, 0x8; ret; 
0x00000000155db4: ror byte ptr [rcx-0x35c6b72f], 0x75; mov bh, 0x48; mov eax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x000000000a0b33: ror byte ptr [rcx-0x39], cl; ret; 
0x000000000d4ad9: ror byte ptr [rcx-0x3f76b3fe], 0x48; add esp, 0x8; ret; 
0x0000000005f0b8: ror byte ptr [rcx-0x3f], 0xe3; and [rcx+0x9], cl; ret; 
0x0000000011a58e: ror byte ptr [rcx-0x77], 0x1; or [r9-0x75], cl; add [rbx+0x94901e0], eax; ret; 
0x00000000027248: ror byte ptr [rcx-0x77], cl; ret far; 
0x0000000010c402: ror byte ptr [rcx-0x7cb7fbad], 0xc4; or [rbx+0x5d], bl; ret; 
0x00000000084ee6: ror byte ptr [rcx-0xc916ed], 0xff; jmp qword ptr [rsi-0x70]; 
0x0000000011eee0: ror byte ptr [rcx], 0xd0; ret; 
0x00000000040aab: ror byte ptr [rdi+0x63], cl; adc al, 0x93; add r10, r11; notrack jmp r10; 
0x000000000430c2: ror byte ptr [rdi], 0x0; add [rax], al; syscall; 
0x0000000017401d: ror byte ptr [rdi], 0x0; add [rbp-0x77], cl; ret far; 
0x000000001138dc: ror byte ptr [rdi], 0x11; and al, 0x11; syscall; 
0x000000000fa319: ror byte ptr [rdi], 0x11; cmp dword ptr [rax+0x41000000], 0xffffff8b; sub cl, [rbp-0xff7b]; jmp far fword ptr [rcx-0x101]; 
0x00000000093698: ror byte ptr [rdi], 0x11; pop rbx; ret; 
0x000000000bbcb9: ror byte ptr [rdi], 0x1; adc [rdi+rdx-0x40], edi; ret; 
0x00000000040fe7: ror byte ptr [rdi], 0x1; mov dh, 0x11; test dl, dl; jne short 0x0000000000040fc8; ret; 
0x000000000b4410: ror byte ptr [rdi], 0x28; jmp qword ptr [r14+0x66]; 
0x00000000157a03: ror byte ptr [rdi], 0x29; and al, 0x60; movups [rsp+0x18], xmm0; call r8; 
0x000000001663f6: ror byte ptr [rdi], 0x29; pop rdi; adc [rdx+0x9], dh; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000069f87: ror byte ptr [rdi], 0x29; test [rax-0x16000005], edx; pop rbx; ret far; 
0x00000000113635: ror byte ptr [rdi], 0x5; cmp rax, 0xfffffffffffff000; ja short 0x0000000000113648; ret; 
0x0000000012e7da: ror byte ptr [rdi], 0x5; cmp rax, 0xfffffffffffff000; ja short 0x000000000012e7f0; ret; 
0x0000000014d934: ror byte ptr [rdi], 0x84; and eax, 0x49000001; mov eax, [rbp+0xd0]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x0000000006d389: ror byte ptr [rdi], 0x84; call qword ptr [rax+rax]; 
0x000000000ac7cc: ror byte ptr [rdi], 0x84; cmp eax, 0xfffffff; mov ebp, 0xf80148c0; add rax, rsi; ret; 
0x0000000015f2f6: ror byte ptr [rdi], 0x84; imul edi, 0xffffffff; dec dword ptr [rcx+0x49082444]; lea edi, [rsp+0x930]; call qword ptr [r12+0xf10]; 
0x00000000082861: ror byte ptr [rdi], 0x84; mov dword ptr [rax], 0x89480000; ret; 
0x0000000013f781: ror byte ptr [rdi], 0x84; mov eax, 0xf000004; mov dh, 0x53; add [rax-0x7d], ecx; ret; 
0x00000000105615: ror byte ptr [rdi], 0x84; mov edx, 0x8d000007; jmp qword ptr [r14+0xf]; 
0x0000000005dca0: ror byte ptr [rdi], 0x84; ret far; 
0x0000000009d60e: ror byte ptr [rdi], 0x84; ret; 
0x0000000009cde6: ror byte ptr [rdi], 0x84; rol dword ptr [rax], cl; add [rax], al; call rax; 
0x00000000118e1a: ror byte ptr [rdi], 0x84; scasd [rdi]; add [rax], al; add [rax+0x39], cl; ret; 
0x00000000148c92: ror byte ptr [rdi], 0x84; sub [rcx], al; add [rax], al; mov rdi, r12; call qword ptr [rbx]; 
0x0000000011acc7: ror byte ptr [rdi], 0x85; adc eax, 0x49000007; mov edi, [rdi]; call rbx; 
0x000000000ac596: ror byte ptr [rdi], 0x85; add [rax], al; add [rsi+0xf], ah; xlat [rbx]; ret; 
0x0000000017cee2: ror byte ptr [rdi], 0x85; cmpsd [rsi], [rdi]; idiv bh; jmp qword ptr [rsi+0xf]; 
0x0000000017ce9c: ror byte ptr [rdi], 0x85; in eax, dx; idiv bh; jmp qword ptr [rsi+0xf]; 
0x0000000011ab35: ror byte ptr [rdi], 0x85; jg short 0x000000000011ab3d; add [rax], al; mov rdi, [r15]; call rbx; 
0x0000000011ab8c: ror byte ptr [rdi], 0x85; loop 0x000000000011ab98; add [rax], al; mov rdi, [r15]; call rbx; 
0x0000000011ac9a: ror byte ptr [rdi], 0x85; mov [rdx], al; add [rax], al; mov rdi, [r15]; call rbx; 
0x0000000011ad4e: ror byte ptr [rdi], 0x85; mov al, 0x2; add [rax], al; mov rdi, [r15]; call rbx; 
0x000000000b5c31: ror byte ptr [rdi], 0x85; pop rax; or [rax], eax; add cl, ch; ret; 
0x0000000010b2c4: ror byte ptr [rdi], 0x85; pop rbp; or [rax], eax; add [rcx-0x80], al; jmp qword ptr [rdi]; 
0x00000000080f36: ror byte ptr [rdi], 0x85; ret far; 
0x0000000002826c: ror byte ptr [rdi], 0x85; ret; 
0x0000000018496c: ror byte ptr [rdi], 0x85; sub eax, 0xc5000001; std; xlat [rbx]; ret; 
0x0000000007755e: ror byte ptr [rdi], 0x88; ret far; 
0x000000000619ae: ror byte ptr [rdi], 0x8e; ret far; 
0x00000000030518: ror byte ptr [rdi], 0x94; ret; 
0x0000000010052c: ror byte ptr [rdi], 0x94; ror byte ptr [rax-0x7d], 0xc4; adc [rbx+0x5d], bl; pop r12; ret; 
0x000000000522e1: ror byte ptr [rdi], 0x94; ror byte ptr [rax-0x7d], 0xc4; or [rdi], cl; mov dh, 0xc0; ret; 
0x0000000014adce: ror byte ptr [rdi], 0x95; ror byte ptr [rax-0x7d], 0xc4; or [rdi], cl; mov dh, 0xc0; ret; 
0x0000000014a060: ror byte ptr [rdi], 0x95; ror byte ptr [rdi], 0xb6; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x5d], bl; ret; 
0x00000000062e97: ror byte ptr [rdi], 0x95; ror byte ptr [rdi], 0xb6; shl bh, 0xd8; pop rbp; ret; 
0x000000000e522d: ror byte ptr [rdi], 0xb6; ror byte ptr [rax-0x73], 0x44; add bh, bh; ret; 
0x0000000014a063: ror byte ptr [rdi], 0xb6; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x5d], bl; ret; 
0x00000000062e9a: ror byte ptr [rdi], 0xb6; shl bh, 0xd8; pop rbp; ret; 
0x000000001028e3: ror byte ptr [rdi], 0xb6; shl bh, 0xd8; ret; 
0x00000000135953: ror byte ptr [rdi], 0xb7; ret far; 
0x000000000e8658: ror byte ptr [rdi], cl; mov [rcx], cl; add al, [rax]; add [rax-0x7d], cl; ret; 
0x000000000eb016: ror byte ptr [rdi], cl; mov dh, 0x4; adc [rcx], bh; ret far; 
0x00000000024ce9: ror byte ptr [rdi], cl; mov dh, 0xc0; add eax, 0x1; push rax; call rbx; 
0x000000000ea39f: ror byte ptr [rdi], cl; mov dl, bh; add [rax], eax; add [rax-0x7d], cl; ret; 
0x000000000ac73d: ror byte ptr [rdi], cl; mov ebp, 0xf80148c0; ret; 
0x00000000161006: ror byte ptr [rdi], cl; test [rbx], dh; or [rax], eax; add [rax-0x7d], cl; ret; 
0x000000000cf75f: ror byte ptr [rdi], cl; test [rdx+0x48000000], bl; bsf eax, edx; shr rax, 0x2; ret; 
0x000000000b1e1b: ror byte ptr [rdi], cl; test [rsi+0x48000000], bl; bsf eax, edx; ret; 
0x000000000ee75f: ror byte ptr [rdi], cl; test [rsi+rdi*8-0x1], cl; jmp far fword ptr [rax+0x410a7508]; 
0x0000000016103a: ror byte ptr [rdi], cl; test bh, bh; or [rax], al; add [rax-0x7d], cl; ret; 
0x0000000004a8a5: ror byte ptr [rdi], cl; test ch, dl; add [rax], al; add [rax+0x63], cl; ret far; 
0x0000000019414d: ror byte ptr [rdx+0x63], 0x1; adc al, 0xa1; xor r8d, r13d; add rdx, rcx; notrack jmp rdx; 
0x000000000439e4: ror byte ptr [rsi], 0x0; nop [rax+rax]; endbr64; mov eax, 0x83; syscall; 
0x000000000fecc8: ror byte ptr [rsi], cl; add [rbx+rcx*4], cl; mov [rax], rdi; mov rax, r8; ret; 
0x0000000011fe07: ror byte ptr gs:[rax+rax], 0xf7; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x00000000183992: ror dword ptr [rax+0x1], 0xf8; ret; 
0x000000000b19ca: ror dword ptr [rax+0x21], 0xce; je 0x00000000000b1b00; bsr rsi, rsi; lea rax, [rdi+rsi]; ret; 
0x00000000091faa: ror dword ptr [rax+0x39], 0x1; enter 0x2876, 0x48; mov edi, ebx; call qword ptr [rbp+0x20]; 
0x00000000087d3f: ror dword ptr [rax+0x39], 0x1; enter 0x2b76, 0x48; mov edi, ebx; call qword ptr [rbp+0x30]; 
0x0000000009296a: ror dword ptr [rax+0x39], 0x1; enter 0x3076, 0x48; mov edi, ebx; call qword ptr [rbp+0x30]; 
0x0000000008ffdb: ror dword ptr [rax+0x39], 0x1; enter 0x3776, 0x48; mov edi, ebp; call qword ptr [rbx+0x88]; 
0x0000000008bdee: ror dword ptr [rax+0x39], 0x1; enter 0x5476, 0x31; test byte ptr [rax-0x77], 0xef; call qword ptr [r13+0x10]; 
0x00000000073d29: ror dword ptr [rax+0x39], 0x1; enter 0x6176, 0x4d; movsxd esp, esp; mov rdx, r12; call qword ptr [r13+0x38]; 
0x00000000090094: ror dword ptr [rax+0x39], 0x1; enter 0x6676, 0x31; idiv byte ptr [rdx+0x2]; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x00000000091ef4: ror dword ptr [rax+0x39], 0x1; enter 0x6676, 0x48; mov edi, ebx; call qword ptr [rbp+0x68]; 
0x0000000007a3b8: ror dword ptr [rax+0x39], 0x1; enter 0x7a76, 0x48; movsxd ebx, ebx; mov rdx, rbx; call qword ptr [r13+0x38]; 
0x0000000015f5b4: ror dword ptr [rax+0x39], 0x1; ret far; 
0x0000000002891d: ror dword ptr [rax+0x39], 0x1; ret; 
0x000000000edfe0: ror dword ptr [rax+0x63], cl; ror byte ptr [rax+0x63], cl; ret far; 
0x0000000011fc88: ror dword ptr [rax+rax], 0xf7; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x0000000016097e: ror dword ptr [rax-0x2d], 0xe2; shr rax, 0x6; or [rdi+rax*8], rdx; xor eax, eax; ret; 
0x0000000009819c: ror dword ptr [rax-0x3f], 0xe9; or [rbx+0x3d485bc1], eax; jmp far fword ptr [rcx]; 
0x000000000981ae: ror dword ptr [rax-0x3f], 0xe9; or al, 0x83; shr dword ptr [rsi+0x48], 0x3d; jmp far fword ptr [rdi+0x32760000]; 
0x00000000117d64: ror dword ptr [rax-0x73], 0x15; ret far; 
0x0000000010eedf: ror dword ptr [rax-0x73], 0x40; inc esi; jmp far fword ptr [r15]; 
0x00000000112ab6: ror dword ptr [rax-0x75], 0x7c; and al, 0x8; mov rdx, r12; mov eax, 0x10f; syscall; 
0x00000000156aac: ror dword ptr [rax-0x75], cl; or [r8-0x77], r9b; out 0x48, al; mov edi, ebp; call qword ptr [rax]; 
0x000000000f1d9c: ror dword ptr [rax-0x75], cl; sub cl, [rax-0x7d]; ret; 
0x00000000086e4d: ror dword ptr [rax-0x7b], 0xd2; jne short 0x0000000000086e40; ret; 
0x00000000091715: ror dword ptr [rax-0x7b], 0xd2; jne short 0x0000000000091708; ret; 
0x0000000011679e: ror dword ptr [rax-0x7d], 0x1; ret; 
0x00000000029885: ror dword ptr [rax-0x7d], 0x1; rol dword ptr [rax+rcx*2], 0x39; ret far; 
0x000000000557e7: ror dword ptr [rax-0x7d], 0xc0; add [rax+0x39], ecx; ret; 
0x0000000015fd07: ror dword ptr [rax], 0x0; mov r8, [rbx+0x10]; call qword ptr [rax+0x1e0]; 
0x0000000011b12f: ror dword ptr [rax], 0x1; add [rax], al; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011309b: ror dword ptr [rbp-0x2708fff3], 0x1; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000012edf5: ror dword ptr [rbx+0x40894106], 0x4; test eax, eax; jne short 0x000000000012eda9; mov rax, rdi; ret; 
0x00000000120c03: ror dword ptr [rbx+0x48102454], 0x8b; je short 0x0000000000120c30; or [rax+0x12b], bh; mov edi, [rsp+0x4]; syscall; 
0x00000000114597: ror dword ptr [rbx+0x48142454], 0x8b; je short 0x00000000001145c4; or [rax+0x127], bh; syscall; 
0x00000000114657: ror dword ptr [rbx+0x48142454], 0x8b; je short 0x0000000000114684; or [rax+0x128], bh; syscall; 
0x000000000f4fae: ror dword ptr [rcx+0x21], 0x1; ret far; 
0x000000000a8980: ror dword ptr [rcx+0x63], 0xc; mov [rcx+rax-0x37], ecx; notrack jmp rcx; 
0x000000000fc4e9: ror dword ptr [rcx+0x63], cl; rol byte ptr [rcx+0x29], 0x1; ret; 
0x000000001936f2: ror dword ptr [rcx+0x9], cl; ret far; 
0x000000000bc155: ror dword ptr [rcx+0xe181d0], 0xfc; add eax, [rax]; cmp edx, 0xff; cmove rax, rcx; ret; 
0x00000000195217: ror dword ptr [rcx+0xf], cl; mov edx, 0x94d3ff3; ret; 
0x00000000083c59: ror dword ptr [rcx+rcx*4-0x12], cl; mov rdi, r15; call qword ptr [rbp+0x38]; 
0x0000000005b6de: ror dword ptr [rcx+rcx*4-0x40], 0x1; ret; 
0x00000000193942: ror dword ptr [rcx-0x77], 0x1; ret far; 
0x000000001146ef: ror dword ptr [rcx-0x77], 0xca; xor r8d, r8d; mov eax, 0x147; syscall; 
0x0000000011484f: ror dword ptr [rcx-0x77], 0xca; xor r8d, r8d; mov eax, 0x148; syscall; 
0x000000001939e6: ror dword ptr [rcx-0x7d], 0x1; stc; add [rcx-0x77], ecx; ret far; 
0x0000000017deb4: ror dword ptr [rdi-0x73], 0x14; or bh, [rsi]; jmp r10; 
0x00000000091f34: ror dword ptr [rdi], 0x11; cmp [r11+0x5d], bl; pop r12; ret; 
0x000000000983ca: ror dword ptr [rdi], 0x11; push 0x6e0f4966; ret; 
0x000000000271ad: ror dword ptr [rdi], 0x11; ret; 
0x00000000087529: ror dword ptr [rdi], 0x11; xor [rcx+0x5d5b7453], cl; pop r12; ret; 
0x00000000157eba: ror dword ptr [rdi], 0x1; test [rdi-0x7cffffff], ah; call qword ptr [rdi+rcx]; 
0x00000000194c5d: ror dword ptr [rdi], 0x1; test [rdx+rax-0x7ab80000], cl; ror byte ptr [rdi], 0x84; ret; 
0x0000000014911b: ror dword ptr [rdi], 0x29; add al, 0x24; call qword ptr [rax+0x8]; 
0x00000000042428: ror dword ptr [rdi], 0x54; add eax, 0x17a300; orps xmm0, [rip+0x17a2e9]; mulss xmm0, [rip+0x17af49]; ret; 
0x00000000042403: ror dword ptr [rdi], 0x54; add eax, 0x17a325; orps xmm0, [rip+0x17a32e]; mulss xmm0, [rip+0x17af72]; ret; 
0x00000000119cea: ror dword ptr [rdi], 0x84; lar eax, [rax]; add [rcx-0x7d], cl; ret far; 
0x0000000018e058: ror dword ptr [rdi], 0x85; adc [rdx], cl; add [rax], al; xor eax, eax; ret; 
0x0000000018e764: ror dword ptr [rdi], 0x85; add al, 0x3; add [rax], al; xor eax, eax; ret; 
0x0000000018e536: ror dword ptr [rdi], 0x85; add eax, 0xc0310000; ret; 
0x0000000018f660: ror dword ptr [rdi], 0x85; cmp al, 0x2; add [rax], al; xor eax, eax; ret; 
0x0000000018e4b6: ror dword ptr [rdi], 0x85; cmpsb [rsi], [rdi]; add eax, 0xc0310000; ret; 
0x0000000018e7f4: ror dword ptr [rdi], 0x85; je short 0x000000000018e7fb; add [rax], al; xor eax, eax; ret; 
0x0000000018e2eb: ror dword ptr [rdi], 0x85; jno short 0x000000000018e2f7; add [rax], al; xor eax, eax; ret; 
0x0000000018e3b3: ror dword ptr [rdi], 0x85; mov ch, 0x6; add [rax], al; xor eax, eax; ret; 
0x0000000018e030: ror dword ptr [rdi], 0x85; sub al, 0xa; add [rax], al; xor eax, eax; ret; 
0x000000000c57ee: ror dword ptr [rdi], 0x87; ret far; 
0x0000000007dd0a: ror dword ptr [rdi], 0x8d; out dx, eax; or eax, [rax]; add [rcx-0x77], cl; ret; 
0x000000000ac5c5: ror dword ptr [rdi], 0xbd; ror byte ptr [rax+0x1], 0xf8; ret; 
0x0000000018498e: ror dword ptr [rdi], 0xbd; ror byte ptr [rax+0x1], 0xf8; vzeroupper; ret; 
0x000000000c5d52: ror dword ptr [rdi], cl; adc dword ptr [rax+0x1], 0x0; add [rax+0x29], cl; ret far; 
0x000000000c0aa2: ror dword ptr [rdi], cl; sbb dword ptr [rax+0x1], 0x0; add [rax+0x29], cl; ret far; 
0x0000000002df28: ror dword ptr [rdi], cl; test [rcx+rax], bh; add [rcx-0x73], cl; add cl, [rax+0x39]; ret far; 
0x000000000872cf: ror dword ptr [rdi], cl; xchg [rdx+0x44000001], cl; mov esi, esp; mov rdi, r14; call qword ptr [rax+0x18]; 
0x0000000008efa4: ror dword ptr [rdi], cl; xchg [rip+0x48000002], ah; lea esi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax+0x90]; 
0x00000000196b55: ror dword ptr [rdi], cl; xchg esp, eax; ret; 
0x000000000baa6f: ror dword ptr [rdx+0xf], 0x1; add [rcx+0x63], cl; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000010ea88: ror dword ptr [rip+0x64d8f700], cl; mov [rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000198a63: ror dword ptr [rsi+0x5], 0x1; add [rax+0x39], cl; ret; 
0x000000000240de: ror eax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000002441d: ror eax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000472d9: ror eax, 0x11; xor rax, fs:[0x30]; mov fs:[rbx], rdx; mov rdi, [rbp+0x8]; call rax; 
0x0000000013cc99: ror eax, 0x11; xor rax, fs:[0x30]; mov qword ptr [rsp], 0x0; call rax; 
0x000000000dd420: ror eax, 0x11; xor rax, fs:[0x30]; pop r13; pop r14; jmp rax; 
0x0000000014374c: ror edi, 0x11; xor rdi, fs:[0x30]; call rax; 
0x000000000468c9: ror edx, 0x11; xor rdx, fs:[0x30]; call rdx; 
0x000000000d4262: ror edx, 0x2; cmp edx, 0x28f5c28; jbe short 0x00000000000d4270; ret; 
0x0000000012086b: ror esp, 0xfe; jmp qword ptr [rsp+rax*2-0x77]; 
0x00000000086e4c: ror qword ptr [r8-0x7b], 0xd2; jne short 0x0000000000086e40; ret; 
0x00000000091714: ror qword ptr [r8-0x7b], 0xd2; jne short 0x0000000000091708; ret; 
0x000000000240dd: ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000002441c: ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000472d8: ror rax, 0x11; xor rax, fs:[0x30]; mov fs:[rbx], rdx; mov rdi, [rbp+0x8]; call rax; 
0x0000000013cc98: ror rax, 0x11; xor rax, fs:[0x30]; mov qword ptr [rsp], 0x0; call rax; 
0x000000000dd41f: ror rax, 0x11; xor rax, fs:[0x30]; pop r13; pop r14; jmp rax; 
0x0000000014374b: ror rdi, 0x11; xor rdi, fs:[0x30]; call rax; 
0x000000000468c8: ror rdx, 0x11; xor rdx, fs:[0x30]; call rdx; 
0x0000000005b4ef: rstorssp [r8-0x8]; saveprevssp; mov [r9+0x3a8], rdi; mov rsp, rdx; ret; 
0x000000000258e6: sahf; adc eax, [rax]; mov rdi, rbx; call r12; 
0x0000000013b6de: sahf; add [rax], al; add [rax+0x63], cl; fisttp dword ptr [rax+0x1], st; ret; 
0x0000000011247e: sahf; add ecx, esi; jmp qword ptr [rsi+0x45]; 
0x000000000f1f8e: sahf; add esi, ebx; jmp qword ptr [rsi+0xf]; 
0x00000000098dde: sahf; cmp eax, 0x50f0015; pop rbp; ret; 
0x00000000120cce: sahf; cmp edi, esi; dec dword ptr [rbx+0x480c2444]; add esp, 0x28; ret; 
0x0000000012e94e: sahf; cmp edx, esi; call qword ptr [rax-0x18]; 
0x00000000078d5e: sahf; mov edx, 0x77e90013; jrcxz 0x0000000000078d65; jmp qword ptr [rsi+0xf]; 
0x000000001451be: sahf; movsd [rdi], [rsi]; add [rax], eax; mov edi, [r15]; call qword ptr [rsp+0x70]; 
0x0000000011848e: sahf; movsxd edi, edi; jmp qword ptr [rsp+rax*2-0x77]; 
0x0000000009c996: sahf; nop [rax+rax]; mov rsi, r12; call rax; 
0x00000000125ff9: sahf; or al, 0x0; syscall; 
0x000000000d5e08: sahf; or eax, 0xc0b60f00; movsxd rax, [rdi+rax*4]; add rax, rdi; notrack jmp rax; 
0x00000000033ae8: sahf; sbb eax, [rax]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000013e0fe: sahf; sbb edi, edi; jmp qword ptr [rsi+0x66]; 
0x00000000155bbf: sahf; std; jmp qword ptr [rsi+0x66]; 
0x000000000d2f9a: sar ah, 0x1; push qword ptr [rcx]; dec dword ptr [rax-0x7b]; ror byte ptr [rdi], 0x85; ret; 
0x00000000132a71: sar bh, 0x1; jmp qword ptr [rsi+0x2e]; 
0x00000000111816: sar bh, 0x1; jmp qword ptr [rsp+rax*2-0x77]; 
0x0000000014762f: sar bh, 0x53; sbb bl, ch; mov esp, 0xfe8466e8; jmp qword ptr [rsi+0xf]; 
0x000000000b426b: sar bh, 0xff; call qword ptr [rax+0xf11280f]; 
0x00000000176ab1: sar bh, 0xff; jmp qword ptr [rsi+0x66]; 
0x00000000057c65: sar bh, 0xff; ret; 
0x00000000057c42: sar bh, 0xff; sub eax, ecx; mov [rdx], eax; mov eax, 0x1; ret; 
0x00000000057e0f: sar bh, 0xff; sub eax, r8d; mov [rdx], eax; mov eax, 0x2; ret; 
0x00000000079937: sar bh, cl; jmp qword ptr [rsi+0xf]; 
0x00000000079936: sar bh, cl; jmp qword ptr [rsi+0xf]; 
0x00000000078aac: sar bh, cl; loopne 0x0000000000078a40; mov dword ptr [rbp-0x540], 0x1; mov r10, rdx; jmp rax; 
0x00000000078abc: sar bh, cl; loopne 0x0000000000078a50; mov dword ptr [rbp-0x4d8], 0x1; mov r10, rdx; jmp rax; 
0x00000000078acc: sar bh, cl; loopne 0x0000000000078a60; mov r10, rdx; jmp rax; 
0x000000000de2e2: sar byte ptr [r8+0xd9], 0x1; syscall; 
0x0000000009529b: sar byte ptr [rax+0x10], 0x48; cmovne eax, edx; mov [rip+0x159bf4], rax; ret; 
0x00000000112d49: sar byte ptr [rax+0x11d], cl; mov rdx, rsi; xor esi, esi; syscall; 
0x0000000011f316: sar byte ptr [rax+0x121], cl; mov edx, 0x8; syscall; 
0x0000000010c588: sar byte ptr [rax+0x15], 0x48; cmp ebx, eax; pop rbx; setl al; ret; 
0x000000000cf1bf: sar byte ptr [rax+0x1], 0x44; cmovg ecx, eax; mov eax, r9d; ret; 
0x000000000df19c: sar byte ptr [rax+0x1a], 0xc6; add eax, 0x1100e6; add [rbx+rcx*4+0x3d], ecx; ret; 
0x00000000121226: sar byte ptr [rax+0x1d], cl; syscall; 
0x000000001136e9: sar byte ptr [rax+0x8], cl; mov eax, [rdi+0x8]; and eax, 0x100f; ret; 
0x000000000de2e3: sar byte ptr [rax+0xd9], 0x1; syscall; 
0x0000000015c937: sar byte ptr [rax+0xe], 0x48; add esp, 0x8; pop rbp; pop r12; ret; 
0x0000000013c95f: sar byte ptr [rax+0xe], cl; mov rax, rdx; movsxd rdx, ecx; ret; 
0x00000000115737: sar byte ptr [rax], 0x48; cmove eax, ebx; pop rbx; ret; 
0x000000000ee4a9: sar byte ptr [rax], 0xe; je 0x00000000000ee3ed; ret; 
0x000000000440ac: sar byte ptr [rbp+0x1a], 0x0; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000011f157: sar byte ptr [rbx+rdx+0x74], 0x1; ret; 
0x000000001156f8: sar byte ptr [rcx+0x5], 0x41; mov byte ptr [rsp], 0x0; mov rax, r12; pop r12; ret; 
0x000000000dd344: sar byte ptr [rdi+0x1], 0xb8; out 0x0, al; add [rax], al; syscall; 
0x00000000127c0a: sar byte ptr [rdi+0x2000001], 0x21; enter 0x4c88, 0x24; and [rax+0x411f2444], cl; call qword ptr [rsp+0x28]; 
0x00000000054f5d: sar byte ptr [rdi+0x2], cl; mov r10d, 0x8; mov eax, 0xe; syscall; 
0x0000000010ddd7: sar byte ptr [rdi-0x64], 0xb8; add [rcx], eax; add [rax], al; syscall; 
0x000000000e5096: sar byte ptr [rdx+0x100], 0x1; mov eax, 0x20; cmove rax, rdx; ret; 
0x00000000043e0c: sar byte ptr [rdx+0x1], cl; cmove eax, edx; ret; 
0x000000000e1dc7: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10d702]; syscall; 
0x000000000e1c87: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10d842]; syscall; 
0x000000000e1bcf: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10d8fa]; syscall; 
0x000000000e1af3: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10d9ce]; syscall; 
0x000000000e1923: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10db5e]; syscall; 
0x000000000e175f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10dcda]; syscall; 
0x000000000e13a5: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10e03c]; syscall; 
0x000000000dfe97: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10f4c2]; syscall; 
0x000000000dfd57: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10f602]; syscall; 
0x000000000dfc9f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10f6ba]; syscall; 
0x000000000df8d3: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10fa7e]; syscall; 
0x000000000df703: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10fc0e]; syscall; 
0x000000000df53f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x10fd8a]; syscall; 
0x000000000dec57: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x11061a]; syscall; 
0x000000000d2bb3: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x11c5d6]; syscall; 
0x000000000d297f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x11c80a]; syscall; 
0x000000000ca653: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x126b46]; syscall; 
0x0000000009c813: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x150356]; syscall; 
0x0000000009e1bf: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x150d32]; syscall; 
0x0000000009dfdf: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x150f12]; syscall; 
0x0000000009ddf3: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1510fe]; syscall; 
0x0000000009dd83: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x15116e]; syscall; 
0x0000000009db53: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x15139e]; syscall; 
0x00000000099ab3: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1530b6]; syscall; 
0x00000000099a53: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x153116]; syscall; 
0x00000000099693: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1534d6]; syscall; 
0x00000000099433: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x153736]; syscall; 
0x00000000098dcb: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x153d9e]; syscall; 
0x00000000098d93: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x153dd6]; syscall; 
0x0000000009aa63: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x15440e]; syscall; 
0x00000000099fc7: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x154e9a]; syscall; 
0x00000000096034: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x158e2d]; syscall; 
0x00000000096003: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x158e6e]; syscall; 
0x00000000095d83: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1590ee]; syscall; 
0x0000000009585f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x159612]; syscall; 
0x00000000094c44: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x159ba5]; syscall; 
0x00000000094a6f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x159d7a]; syscall; 
0x000000000948d3: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x159f16]; syscall; 
0x00000000093945: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x15ae64]; syscall; 
0x00000000093405: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x15b3a4]; syscall; 
0x00000000093061: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x15b748]; syscall; 
0x00000000092cf5: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x15bab4]; syscall; 
0x00000000091671: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x15d138]; syscall; 
0x000000000913b1: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x15d3f8]; syscall; 
0x0000000009103d: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x15d76c]; syscall; 
0x00000000084382: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x16a3e7]; syscall; 
0x00000000083f85: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x16a7e4]; syscall; 
0x00000000083eda: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x16a88f]; syscall; 
0x00000000082013: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x16f186]; syscall; 
0x000000000610c7: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x18d672]; syscall; 
0x00000000060e43: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x18d8f2]; syscall; 
0x0000000005ec6f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x18fabe]; syscall; 
0x0000000005eb2f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x18fbfe]; syscall; 
0x00000000054d93: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x199986]; syscall; 
0x00000000054bb3: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x199b66]; syscall; 
0x00000000054683: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x19a096]; syscall; 
0x00000000052297: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x19c252]; syscall; 
0x0000000005211b: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x19c3ce]; syscall; 
0x000000000520e3: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x19c406]; syscall; 
0x000000000478cf: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1a6bfa]; syscall; 
0x0000000004780f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1a6cba]; syscall; 
0x00000000047747: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1a6d82]; syscall; 
0x0000000004766f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1a6e5a]; syscall; 
0x00000000046767: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1a750a]; syscall; 
0x000000000466a2: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1a75cf]; syscall; 
0x00000000046500: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1a7771]; syscall; 
0x00000000046426: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1a784b]; syscall; 
0x000000000384f0: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1b5731]; syscall; 
0x00000000036b6d: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1b707c]; syscall; 
0x00000000035832: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1b830f]; syscall; 
0x00000000035815: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1b832c]; syscall; 
0x0000000003574d: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1b83f4]; syscall; 
0x00000000026067: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1cb132]; syscall; 
0x00000000025efb: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1cb29e]; syscall; 
0x00000000025ddb: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1cb3be]; syscall; 
0x00000000022836: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x1cb403]; syscall; 
0x000000001987df: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x55492]; syscall; 
0x0000000019899f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x55e4a]; syscall; 
0x00000000198ccf: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x57832]; syscall; 
0x0000000015e06f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x935d2]; syscall; 
0x0000000015cf37: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9470a]; syscall; 
0x0000000015ce57: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x947ea]; syscall; 
0x0000000015cc6f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x949d2]; syscall; 
0x0000000015cbdf: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x94a62]; syscall; 
0x0000000015cb3f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x94b02]; syscall; 
0x0000000015ca8f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x94bb2]; syscall; 
0x0000000015c6bf: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x94f82]; syscall; 
0x0000000015242f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9e9aa]; syscall; 
0x000000001522cf: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9eb0a]; syscall; 
0x000000001520c3: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9ed16]; syscall; 
0x00000000151f23: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9eeb6]; syscall; 
0x00000000151d8f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9f04a]; syscall; 
0x00000000151c4f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9f18a]; syscall; 
0x00000000151aef: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9f2ea]; syscall; 
0x000000001519df: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x9f3fa]; syscall; 
0x0000000014e4cf: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa2906]; syscall; 
0x0000000014c7d7: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa453a]; syscall; 
0x0000000014c697: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa467a]; syscall; 
0x0000000014c5df: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa4732]; syscall; 
0x0000000014c4f3: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa4816]; syscall; 
0x0000000014c323: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa49b6]; syscall; 
0x0000000014c15f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa4b52]; syscall; 
0x000000001467c1: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xaa38c]; syscall; 
0x00000000144623: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xac496]; syscall; 
0x000000001442eb: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xac7ce]; syscall; 
0x00000000143f6b: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xacb4e]; syscall; 
0x00000000143d45: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xacd74]; syscall; 
0x00000000143be3: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xaced6]; syscall; 
0x000000001439a6: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xad113]; syscall; 
0x00000000142f4f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xadab2]; syscall; 
0x00000000142dcd: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xadc34]; syscall; 
0x00000000142d93: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xadc6e]; syscall; 
0x00000000142c7b: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xadd86]; syscall; 
0x00000000142437: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xae5ca]; syscall; 
0x0000000014236f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xae692]; syscall; 
0x00000000142253: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xae7ae]; syscall; 
0x00000000140e80: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xaf929]; syscall; 
0x0000000013d6ff: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb2e02]; syscall; 
0x0000000013d403: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb30fe]; syscall; 
0x000000001390d3: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb741a]; syscall; 
0x00000000138b53: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb797e]; syscall; 
0x0000000013898f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb7afa]; syscall; 
0x000000001388c7: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb7b62]; syscall; 
0x00000000138787: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb7ca2]; syscall; 
0x000000001386cf: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb7d5a]; syscall; 
0x00000000137fdf: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb8442]; syscall; 
0x00000000137cbf: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb8762]; syscall; 
0x00000000137b03: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb891e]; syscall; 
0x00000000134777: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbbb3a]; syscall; 
0x00000000134637: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbbc7a]; syscall; 
0x0000000013457f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbbd32]; syscall; 
0x0000000013449f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbbe0a]; syscall; 
0x00000000133fd3: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbc25e]; syscall; 
0x00000000133a03: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbc7ce]; syscall; 
0x000000001334e3: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbcca6]; syscall; 
0x00000000133317: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbce32]; syscall; 
0x000000001331d7: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbcf72]; syscall; 
0x0000000013311f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbd02a]; syscall; 
0x0000000013303f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbd102]; syscall; 
0x00000000132c23: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbd4d6]; syscall; 
0x00000000132607: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbda92]; syscall; 
0x000000001324af: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbdbea]; syscall; 
0x000000001323ef: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbdcaa]; syscall; 
0x00000000132307: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbdd8a]; syscall; 
0x00000000132223: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbde36]; syscall; 
0x00000000131bc3: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbe456]; syscall; 
0x000000001319b7: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbe61a]; syscall; 
0x0000000013185f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbe772]; syscall; 
0x0000000013179f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbe832]; syscall; 
0x000000001316b7: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbe912]; syscall; 
0x00000000130aa3: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbf4ae]; syscall; 
0x00000000130833: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbf6de]; syscall; 
0x000000001300b3: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbfdfe]; syscall; 
0x000000001265b7: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc9862]; syscall; 
0x00000000126477: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc99a2]; syscall; 
0x000000001263bf: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc9a5a]; syscall; 
0x00000000125fe5: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc9e2c]; syscall; 
0x00000000125de3: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc9ff6]; syscall; 
0x00000000125c03: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xca18e]; syscall; 
0x00000000125a3f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xca30a]; syscall; 
0x0000000012596f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xca386]; syscall; 
0x000000001258a5: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xca450]; syscall; 
0x00000000125810: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xca4e5]; syscall; 
0x00000000124b07: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xcb1ba]; syscall; 
0x000000001249c7: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xcb2fa]; syscall; 
0x0000000012490f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xcb3b2]; syscall; 
0x00000000124315: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xcb9a4]; syscall; 
0x00000000124113: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xcbb4e]; syscall; 
0x00000000123f33: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xcbcc6]; syscall; 
0x00000000123d6f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xcbe22]; syscall; 
0x000000001186ff: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xd713a]; syscall; 
0x000000001185e3: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xd7256]; syscall; 
0x00000000118183: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xd76b6]; syscall; 
0x00000000117c48: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xd7bf1]; syscall; 
0x00000000106ab3: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xe8af6]; syscall; 
0x000000000229eb: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; syscall; 
0x00000000099f9c: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, ebx; syscall; 
0x00000000046b48: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov rdi, r12; mov eax, 0xca; syscall; 
0x00000000047131: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov rdi, r13; mov eax, 0xca; syscall; 
0x00000000046951: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov rdi, r14; mov eax, 0xca; syscall; 
0x0000000009c160: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov rdi, r15; mov eax, 0xca; syscall; 
0x00000000046d9f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov rdi, rbp; mov eax, 0xca; syscall; 
0x0000000009ae65: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov rdi, rbx; mov eax, 0xca; syscall; 
0x000000000945e9: sar byte ptr [rdx+0x2], cl; mov esi, 0x80; mov eax, 0xca; syscall; 
0x0000000013c9dd: sar byte ptr [rdx+0x7fffffff], 0x1; add eax, ecx; cmovs eax, edx; ret; 
0x00000000155a8d: sar byte ptr [rdx-0x1], 0x4c; mov esi, esi; mov rdi, r12; call r13; 
0x000000001577a9: sar byte ptr [rdx-0x1], 0x4c; mov esi, esi; mov rdi, rbp; call r12; 
0x0000000015767b: sar byte ptr [rdx-0x1], 0x4c; mov esi, esp; mov rdi, rbx; call rcx; 
0x000000000b14e9: sar byte ptr [rdx], 0x48; lea eax, [rdi+rax]; cmp [rax], sil; cmovne rax, rdx; ret; 
0x000000000a2905: sar byte ptr [rdx], cl; cmove rax, rdx; ret; 
0x00000000183a1a: sar byte ptr [rdx], cl; cmp edx, ecx; jle 0x0000000000183ac0; ret; 
0x0000000011a721: sar byte ptr [rsi+0x1], cl; call r12; 
0x0000000012180a: sar byte ptr [rsi+0x20241], 0xe8; ret far; 
0x00000000031adf: sar byte ptr [rsi], 0x1; jmp r8; 
0x00000000023e8f: sar byte ptr [rsi], 0x1; jmp rax; 
0x000000001662fa: sar byte ptr [rsi], 0x41; jmp rcx; 
0x00000000193f42: sar byte ptr [rsi], cl; jmp rdx; 
0x0000000018ffcb: sar ch, 0xff; jmp qword ptr [rdx-0xf]; 
0x0000000009d486: sar ch, 0xff; jmp qword ptr [rsi+0xf]; 
0x000000000e92ba: sar ch, 0xff; jmp qword ptr [rsi-0x70]; 
0x000000000d485c: sar dh, 0xff; jmp far fword ptr [rbx]; 
0x00000000126262: sar dh, 0xff; jmp qword ptr [rsi+0x2e]; 
0x0000000009ad0e: sar dh, 0xff; jmp qword ptr [rsi+0xf]; 
0x000000001427ef: sar dh, cl; jmp qword ptr [rsi+0x66]; 
0x0000000006d37c: sar dl, 0xff; dec dword ptr [rax-0x75]; and byte ptr [rax+0x48000000], 0x85; ror byte ptr [rdi], 0x84; call qword ptr [rax+rax]; 
0x000000000696da: sar dl, 0xff; dec dword ptr [rax-0x7d]; ret; 
0x0000000006e270: sar dl, 0xff; jmp qword ptr [rbx+rcx*4]; 
0x0000000006f3e6: sar dl, 0xff; jmp qword ptr [rdi+rax*8]; 
0x000000000cf19d: sar dword ptr [rax+0x1], 0x44; cmovl ecx, eax; mov eax, r9d; ret; 
0x0000000018f989: sar dword ptr [rax+rcx*2+0x11], 0x1; imul edi, ebp, 0x487cd162; adc [rcx-0x2], esi; vmovups [r9-0x40], zmm7; ret; 
0x0000000018fe21: sar dword ptr [rax+rcx*2+0x11], 0x1; jmp qword ptr [r10-0x2f]; 
0x0000000018f990: sar dword ptr [rax+rcx*2+0x11], 0x1; jno short 0x000000000018f994; vmovups [r9-0x40], zmm7; ret; 
0x0000000018f997: sar dword ptr [rax+rcx*2+0x11], 0x1; jns short 0x000000000018f99c; ret; 
0x000000000bc1b2: sar dword ptr [rax], 0x1; and ch, 0xf0; pop rbx; cmovne rax, rdx; ret; 
0x00000000190800: sar dword ptr [rbp+0x48], 0x1; out 0x49, eax; jmp qword ptr [rdx-0x2f]; 
0x00000000117d83: sar dword ptr [rdx+0xd], 0x1; add [rax-0x77], cl; ret; 
0x00000000120e39: sar dword ptr [rdx], 0x1; cmovb rax, rdx; ret; 
0x0000000018b7fd: sar dword ptr [rsi+0x7f], 0x23; vzeroupper; ret; 
0x00000000041b9c: sar eax, 0x10; ret; 
0x00000000094d87: sar eax, 0x1; and eax, 0x1; mov [rsi], eax; xor eax, eax; ret; 
0x0000000004228f: sar eax, 0x1f; not eax; and eax, edx; ret; 
0x00000000162cb8: sar eax, 0x1f; ret; 
0x00000000041b4c: sar eax, 0x1f; sub ecx, edx; not eax; and eax, ecx; ret; 
0x0000000008aa46: sar eax, 0x2; mov [rcx], rax; xor eax, eax; pop rbx; ret; 
0x0000000008861d: sar eax, 0x2; ret; 
0x000000000425d9: sar eax, 0x3f; not eax; and eax, ecx; ret; 
0x00000000041ece: sar eax, 0x3f; not eax; and eax, edx; ret; 
0x0000000012fa21: sar eax, 0x6; ret; 
0x0000000019067d: sar ebp, 0x1; jg short 0x00000000001906cb; jmp qword ptr [rdx-0x2f]; 
0x0000000015296e: sar ebp, 0x1; jmp qword ptr [rsi+0x66]; 
0x0000000007d0d9: sar ebp, 0x2; mov rdx, r13; call qword ptr [rax+0x38]; 
0x0000000006186b: sar ebp, 0xff; call qword ptr [rax+0x222ebe8]; 
0x0000000002223b: sar ebp, 0xff; call qword ptr [rax-0x5e1f00d]; 
0x0000000019333b: sar ebp, 0xff; dec dword ptr [rax-0x77]; ret; 
0x00000000100dc5: sar ebp, cl; jmp qword ptr [rsp+rax*2-0x77]; 
0x000000000ceacb: sar ebx, 0xff; call qword ptr [rax+0x166f0ff3]; 
0x00000000194993: sar ebx, 0xff; jmp qword ptr [rsi+0xf]; 
0x00000000087e2c: sar ecx, 0x2; lea eax, [rcx-0x1]; ret; 
0x00000000025336: sar edi, 0x1; jmp qword ptr [rsi+0x48]; 
0x00000000025337: sar edi, 0x1; jmp qword ptr [rsi+0x48]; 
0x0000000006f054: sar edi, 0x1; jmp qword ptr [rsi+0xf]; 
0x0000000002203b: sar edi, 0xff; call qword ptr [rax-0x5e1f00d]; 
0x0000000012a7dd: sar edi, cl; dec dword ptr [rcx]; ret; 
0x0000000007ff43: sar edi, cl; jmp qword ptr [rsi+0x2e]; 
0x0000000002506a: sar edi, cl; jmp qword ptr [rsi+0xf]; 
0x0000000002506b: sar edi, cl; jmp qword ptr [rsi+0xf]; 
0x00000000155e75: sar edx, 0x20; mov [rsp+0x8], rdx; call qword ptr [rax+0x8]; 
0x00000000156dba: sar edx, 0x20; mov [rsp], edx; call qword ptr [rax+0x48]; 
0x0000000007b31e: sar edx, 0x2; call qword ptr [r12+0x38]; 
0x0000000007d66c: sar edx, 0x2; mov [rbp-0x4d0], rdx; call qword ptr [rax+0x38]; 
0x00000000087ed6: sar edx, 0x2; sub eax, edx; ret; 
0x0000000013de90: sar edx, 0x4; mov [rbx+0x10], rax; mov eax, 0x14; add edx, 0x1; syscall; 
0x00000000031093: sar edx, 0xff; jmp qword ptr [rsi+0xf]; 
0x000000000ac8e8: sar edx, cl; movzx edx, dl; sub eax, edx; ret; 
0x000000000b1e17: sar edx, cl; test rdx, rdx; je 0x00000000000b1ec0; bsf rax, rdx; ret; 
0x000000000b1cb8: sar edx, cl; test rdx, rdx; je short 0x00000000000b1cd0; bsf rax, rdx; ret; 
0x000000000b1c5b: sar edx, cl; test rdx, rdx; je short 0x00000000000b1ce0; bsf rax, rdx; ret; 
0x000000000b1e87: sar edx, cl; test rdx, rdx; je short 0x00000000000b1eb0; bsf rax, rdx; ret; 
0x000000001905f7: sar esi, 0x1; jg short 0x000000000019061f; vzeroupper; ret; 
0x00000000190782: sar esi, 0x1; jg short 0x00000000001907aa; vzeroupper; ret; 
0x000000000cec8b: sar esi, 0xff; call qword ptr [rax+0xf6f0ff3]; 
0x0000000002213b: sar esi, 0xff; call qword ptr [rax-0x5e1f00d]; 
0x000000000d0a46: sar esi, 0xff; jmp qword ptr [rsi+0xf]; 
0x000000000d2c5d: sar esp, cl; dec dword ptr [rax-0x7b]; ror byte ptr [rdi], 0x84; ret far; 
0x0000000007d0d8: sar r13, 0x2; mov rdx, r13; call qword ptr [rax+0x38]; 
0x0000000008aa45: sar rax, 0x2; mov [rcx], rax; xor eax, eax; pop rbx; ret; 
0x0000000008861c: sar rax, 0x2; ret; 
0x000000000425d8: sar rax, 0x3f; not eax; and eax, ecx; ret; 
0x00000000041ecd: sar rax, 0x3f; not eax; and eax, edx; ret; 
0x0000000012fa20: sar rax, 0x6; ret; 
0x00000000087e2b: sar rcx, 0x2; lea eax, [rcx-0x1]; ret; 
0x00000000155e74: sar rdx, 0x20; mov [rsp+0x8], rdx; call qword ptr [rax+0x8]; 
0x00000000156db9: sar rdx, 0x20; mov [rsp], edx; call qword ptr [rax+0x48]; 
0x0000000007b31c: sar rdx, 0x2; call qword ptr [r12+0x38]; 
0x0000000007b31d: sar rdx, 0x2; call qword ptr [r12+0x38]; 
0x0000000007d66b: sar rdx, 0x2; mov [rbp-0x4d0], rdx; call qword ptr [rax+0x38]; 
0x00000000087ed5: sar rdx, 0x2; sub eax, edx; ret; 
0x0000000013de8f: sar rdx, 0x4; mov [rbx+0x10], rax; mov eax, 0x14; add edx, 0x1; syscall; 
0x000000000ac8e7: sar rdx, cl; movzx edx, dl; sub eax, edx; ret; 
0x000000000b1e16: sar rdx, cl; test rdx, rdx; je 0x00000000000b1ec0; bsf rax, rdx; ret; 
0x000000000b1cb7: sar rdx, cl; test rdx, rdx; je short 0x00000000000b1cd0; bsf rax, rdx; ret; 
0x000000000b1c5a: sar rdx, cl; test rdx, rdx; je short 0x00000000000b1ce0; bsf rax, rdx; ret; 
0x000000000b1e96: sar rdx, cl; test rdx, rdx; je short 0x00000000000b1eb0; bsf rax, rdx; ret; 
0x000000000b1e86: sar rdx, cl; test rdx, rdx; je short 0x00000000000b1eb0; bsf rax, rdx; ret; 
0x0000000005b4f5: saveprevssp; mov [r9+0x3a8], rdi; mov rsp, rdx; ret; 
0x00000000091a6f: sbb [r11+0x480c2474], cl; mov edi, [rsp]; add rsp, 0x10; pop rbx; jmp rax; 
0x0000000009e932: sbb [r11+0x5d], bl; pop r12; ret; 
0x0000000014866b: sbb [r11+0xe7603f8], r8b; mov eax, 0x2; ret; 
0x0000000008e584: sbb [r15], cl; adc [rbx+0x28], eax; pop rbx; ret; 
0x000000000951ab: sbb [r8+0x39], cl; ret; 
0x0000000015f7e3: sbb [r8+0x5a], bl; pop rbx; ret; 
0x000000000bb204: sbb [r8], r14b; in eax, dx; mov [rdi+0x19], ch; ret; 
0x000000000bb226: sbb [r8], r14b; in eax, dx; mov [rdi+0x1a], ch; ret; 
0x000000000bb264: sbb [r8], r14b; in eax, dx; mov [rdi+0x1c], ch; ret; 
0x00000000058dc0: sbb [r8], rax; add [rax-0x80], al; jmp qword ptr [rbp+0xf]; 
0x0000000008c13f: sbb [r9+r9*4-0x20], al; pop rbx; pop rbp; pop r12; ret; 
0x0000000015747c: sbb [r9+r9*4-0x40], r8b; ret; 
0x00000000154d3c: sbb [r9+rcx*4-0x11], r9b; call qword ptr [rax+0x20]; 
0x0000000015f530: sbb [r9-0x73], r9b; mov edi, 0x908; call qword ptr [r15+0xf10]; 
0x000000001971f7: sbb [r9-0x75], r9b; push rbp; adc [rax-0x7d], cl; ret; 
0x000000000f2d42: sbb [r9], al; ret far; 
0x0000000010df6b: sbb [rax+0x101], bh; syscall; 
0x00000000113268: sbb [rax+0x115], bh; syscall; 
0x00000000120b58: sbb [rax+0x120], bh; syscall; 
0x0000000006e4fe: sbb [rax+0x1], cl; ret far; 
0x000000000ec407: sbb [rax+0x1], edi; ret; 
0x00000000120703: sbb [rax+0x2c], bh; mov rsi, [rsp+0x10]; mov edi, [rsp+0x8]; syscall; 
0x00000000055d1c: sbb [rax+0x39], cl; ret far; 
0x000000000951ac: sbb [rax+0x39], cl; ret; 
0x00000000120f28: sbb [rax+0x45], bh; syscall; 
0x0000000015f7e4: sbb [rax+0x5a], bl; pop rbx; ret; 
0x000000000f53e4: sbb [rax+0x9], cl; push rbp; mov eax, 0xfffa6be9; jmp qword ptr [rsi-0x70]; 
0x000000000b8b53: sbb [rax+0xf], ebp; add [rcx+0x63], cl; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000006c32f: sbb [rax+rax], edx; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x0000000014fa33: sbb [rax-0x12], edx; jmp qword ptr [rsi+0xf]; 
0x000000000468e2: sbb [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x000000000b79d3: sbb [rax-0x73], cl; jg short 0x00000000000b79f0; jne 0x00000000000b7fa0; ret; 
0x000000000b9157: sbb [rax-0x73], cl; jg short 0x00000000000b9174; jne 0x00000000000b97f0; ret; 
0x0000000010ff7d: sbb [rax-0x73], cl; sub [r9+r9*4-0xa], cl; mov edx, [rdx+rax]; call qword ptr [rbx+0x40]; 
0x000000000b79f6: sbb [rax-0x73], ecx; jg short 0x00000000000b7a14; jne 0x00000000000b7fa0; ret; 
0x000000000b918a: sbb [rax-0x73], ecx; jg short 0x00000000000b91a8; jne 0x00000000000b97f0; ret; 
0x000000000e460e: sbb [rax-0x75], cl; add eax, 0x10ce6a; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000e455e: sbb [rax-0x75], cl; add eax, 0x10cf1a; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000015f777: sbb [rax-0x75], cl; add eax, 0x8c6e1; mov rdi, [rsp]; mov rax, [rax+0x1d8]; jmp rax; 
0x0000000002cc2d: sbb [rax-0x75], cl; and al, 0x28; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x48]; call r13; 
0x0000000002769c: sbb [rax-0x75], cl; je short 0x00000000000276c5; push rax; mov rdi, [rsp+0x58]; call r14; 
0x00000000027e01: sbb [rax-0x75], cl; je short 0x0000000000027e2a; pop rax; mov rdi, [rsp+0x60]; call rbx; 
0x00000000029333: sbb [rax-0x75], cl; je short 0x000000000002935c; push rax; mov rdi, [rsp+0x58]; call rbx; 
0x0000000002a345: sbb [rax-0x75], cl; je short 0x000000000002a36e; mov rdi, [rsp+0x40]; call r14; 
0x0000000002c651: sbb [rax-0x75], cl; je short 0x000000000002c67a; pop rax; mov rdi, [rsp+0x50]; call rbx; 
0x0000000002f17f: sbb [rax-0x75], cl; je short 0x000000000002f1a8; mov rdi, [rsp+0x38]; call r15; 
0x0000000010e02b: sbb [rax-0x75], cl; je short 0x000000000010e054; adc [rcx-0x77], al; ror byte ptr [rbx+0x3108247c], 0xc0; syscall; 
0x00000000110393: sbb [rax-0x75], cl; je short 0x00000000001103bc; sub [rax-0x73], cl; sub [r10+0x1], r15b; call qword ptr [rbp+0x40]; 
0x00000000110673: sbb [rax-0x75], cl; je short 0x000000000011069c; sub [rax-0x73], cl; sub [r10+0x5], r15b; call qword ptr [rbp+0x40]; 
0x000000001106f3: sbb [rax-0x75], cl; je short 0x000000000011071c; sub [rax-0x73], cl; sub [r10+0x2], r15b; call qword ptr [rbp+0x40]; 
0x00000000114fea: sbb [rax-0x75], cl; je short 0x0000000000115013; adc [rax+0x17], bh; mov edi, [rsp+0xc]; syscall; 
0x00000000120fda: sbb [rax-0x75], cl; je short 0x0000000000121003; adc [rax+0x46], bh; mov edi, [rsp+0x8]; syscall; 
0x000000000bda3f: sbb [rax-0x75], cl; sub [r8-0x7b], cl; ror byte ptr [rdi], 0x84; ret; 
0x000000000475a6: sbb [rax-0x75], ecx; adc [rbx+0x48], bl; mov dword ptr [rip+0x1a9d39], 0x0; mov eax, [rax+0x58]; ret; 
0x00000000115b0f: sbb [rax-0x77], cl; add eax, 0xd9b29; mov eax, 0x1; add rsp, 0x8; ret; 
0x00000000115946: sbb [rax-0x77], cl; and al, 0x20; mov eax, 0x65; syscall; 
0x00000000091926: sbb [rax-0x77], cl; movups [rdi+0x8], xmm0; ret; 
0x0000000014e837: sbb [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x48]; 
0x000000000896de: sbb [rax-0x77], cl; ret far; 
0x000000000dd817: sbb [rax-0x77], cl; ret; 
0x00000000057bf6: sbb [rax-0x7b], ecx; div byte ptr [rbp+0x2c]; mov dword ptr [rdx], 0x0; mov eax, 0x1; ret; 
0x0000000010dae6: sbb [rax-0x7d], cl; in al, dx; sbb byte ptr [rbp+0x41], 0x5c; pop r13; ret; 
0x000000000dfa24: sbb [rax-0x7d], cl; ret; 
0x0000000015c25c: sbb [rax-0x7d], ecx; ret; 
0x000000000cfb16: sbb [rax-0x7d], ecx; rol byte ptr [rdx], 0xc3; nop [rax]; add rax, 0x1; ret; 
0x0000000004a0e1: sbb [rax], al; add [rax-0x80], al; jmp qword ptr [rbp+0xf]; 
0x00000000094cd5: sbb [rax], al; add [rax], al; syscall; 
0x0000000010dff8: sbb [rax], al; add [rax], al; test eax, eax; jne short 0x000000000010e010; syscall; 
0x0000000017371e: sbb [rax], al; add [rbp-0x77], cl; ret far; 
0x00000000061086: sbb [rax], al; add [rcx+rcx*4-0x40], eax; pop rbx; ret; 
0x000000000a3db2: sbb [rax], al; add [rcx-0x77], cl; ret; 
0x000000000a3db3: sbb [rax], al; add [rcx-0x77], cl; ret; 
0x00000000092d2b: sbb [rax], al; add cl, ch; ret far; 
0x000000000328d9: sbb [rax], al; cmp [rdx+0x38], edi; jbe short 0x00000000000328f7; mov rax, [rdx+rdi*8+0x40]; ret; 
0x0000000005eddf: sbb [rax], al; mov rcx, r14; call qword ptr [rax+r8*8]; 
0x000000000240c4: sbb [rax], al; mov rsi, [rax]; xor eax, eax; call qword ptr [rdx+0x1d0]; 
0x00000000023e87: sbb [rax], al; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000062ecd: sbb [rax], al; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000241d9: sbb [rax], al; ret; 
0x0000000008cd5c: sbb [rax], al; setne r8b; mov eax, r8d; ret; 
0x0000000005eb44: sbb [rax], al; syscall; 
0x000000000bb205: sbb [rax], dh; in eax, dx; mov [rdi+0x19], ch; ret; 
0x000000000bb227: sbb [rax], dh; in eax, dx; mov [rdi+0x1a], ch; ret; 
0x000000000bb265: sbb [rax], dh; in eax, dx; mov [rdi+0x1c], ch; ret; 
0x00000000058dc1: sbb [rax], eax; add [rax-0x80], al; jmp qword ptr [rbp+0xf]; 
0x0000000011fcd8: sbb [rax], eax; add [rax], al; syscall; 
0x000000000afafe: sbb [rax], eax; add [rbp-0x77], cl; ret far; 
0x00000000052a26: sbb [rax], eax; lea rax, [rip+0x19bc31]; mov byte ptr [rax+rdx], 0x0; ret; 
0x00000000052a2d: sbb [rax], eax; mov byte ptr [rax+rdx], 0x0; ret; 
0x00000000054f41: sbb [rax], eax; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000241e9: sbb [rax], eax; ret; 
0x00000000054749: sbb [rax], eax; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000520f8: sbb [rax], eax; syscall; 
0x000000000a8c03: sbb [rax], edi; add [rax], al; cmove rax, rdx; ret; 
0x000000000de628: sbb [rbp+0x31], al; sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; syscall; 
0x000000000476f4: sbb [rbp+0x4c], bl; mov eax, esp; pop r12; ret; 
0x00000000147848: sbb [rbp+rcx*4+0x4c], cl; and al, 0x40; call qword ptr [rax]; 
0x00000000094ec4: sbb [rbp+rdx], dh; ret; 
0x000000000e6365: sbb [rbp-0x7b], cl; push qword ptr [rdx+rcx+0x48]; mov edi, ebx; call r15; 
0x000000000e1c5f: sbb [rbx+0x10d8792d], al; add [rcx], al; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x000000000dfd2f: sbb [rbx+0x10f6392d], al; add [rcx], al; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x00000000091a70: sbb [rbx+0x480c2474], cl; mov edi, [rsp]; add rsp, 0x10; pop rbx; jmp rax; 
0x0000000013c55a: sbb [rbx+0x49], bl; mov [rcx], ecx; ret; 
0x0000000009a284: sbb [rbx+0x5d], bl; pop r12; jmp rax; 
0x0000000008c0b5: sbb [rbx+0x5d], bl; pop r12; pop r13; pop r14; ret; 
0x0000000007a42a: sbb [rbx+0x5d], bl; pop r12; pop r13; ret; 
0x0000000009e933: sbb [rbx+0x5d], bl; pop r12; ret; 
0x00000000042a28: sbb [rbx+0x5d], bl; ret; 
0x0000000014c66f: sbb [rbx+0xa46b12d], al; add [rcx], al; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x0000000013875f: sbb [rbx+0xb7cd92d], al; add [rcx], al; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x0000000013460f: sbb [rbx+0xbbcb12d], al; add [rcx], al; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x000000001331af: sbb [rbx+0xbcfa92d], al; add [rcx], al; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x0000000012644f: sbb [rbx+0xc99d92d], al; add [rcx], al; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x0000000012499f: sbb [rbx+0xcb3312d], al; add [rcx], al; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x0000000014866c: sbb [rbx+0xe7603f8], al; mov eax, 0x2; ret; 
0x000000000935bb: sbb [rbx-0x2fd6efb9], cl; ret; 
0x0000000011f542: sbb [rbx-0x47f7db84], cl; adc al, 0x1; add [rax], al; syscall; 
0x00000000122009: sbb [rbx-0x6f3cff00], al; ret; 
0x0000000015df83: sbb [rbx], ebx; std; jmp qword ptr [rsi+0xf]; 
0x000000000de6c3: sbb [rbx], ecx; cld; jmp qword ptr [rsi+0xf]; 
0x00000000096386: sbb [rcx+0x1], cl; ret; 
0x00000000196a26: sbb [rcx+0x21], cl; ret far; 
0x00000000154d3d: sbb [rcx+rcx*4-0x11], cl; call qword ptr [rax+0x20]; 
0x0000000009759a: sbb [rcx+rcx*4-0x11], cl; mov [rsp+0x10], r10; call qword ptr [rax]; 
0x0000000014d1be: sbb [rcx+rcx*4-0x19], cl; call qword ptr [rax+0x8]; 
0x000000000bde6e: sbb [rcx+rcx*4-0x19], cl; mov rsi, [rsp+0x10]; call rbx; 
0x0000000005edd3: sbb [rcx+rcx*4-0x19], cl; sub rsi, rax; mov rax, [rip+0x18e9cf]; mov rcx, r14; call qword ptr [rax+r8*8]; 
0x000000000ca894: sbb [rcx+rcx*4-0x1f], cl; mov rdx, r13; call rbx; 
0x00000000147018: sbb [rcx+rcx*4-0x20], al; pop rbx; pop r12; ret; 
0x0000000008c140: sbb [rcx+rcx*4-0x20], al; pop rbx; pop rbp; pop r12; ret; 
0x0000000008d517: sbb [rcx+rcx*4-0x20], cl; pop rbx; pop rbp; pop r12; ret; 
0x00000000046e9e: sbb [rcx+rcx*4-0x40], al; pop rbx; pop rbp; ret; 
0x00000000157407: sbb [rcx+rcx*4-0x40], al; ret; 
0x0000000009cfad: sbb [rcx+rcx*4-0x40], cl; pop rbx; pop r12; ret; 
0x0000000015743f: sbb [rcx+rcx*4-0x40], cl; ret; 
0x0000000013c35e: sbb [rcx+rcx*4-0x40], eax; ret; 
0x000000000df50a: sbb [rcx+rcx*4-0x40], ecx; pop rbx; ret; 
0x0000000015f2e7: sbb [rcx+rcx*4-0xe], cl; mov esi, 0x40; mov rdi, rbx; call rax; 
0x000000000f2263: sbb [rcx-0x17f3dbbc], cl; ret; 
0x000000001397c4: sbb [rcx-0x1], ch; call far fword ptr [rdi+0x41]; 
0x0000000015f531: sbb [rcx-0x73], cl; mov edi, 0x908; call qword ptr [r15+0xf10]; 
0x000000001971f8: sbb [rcx-0x75], cl; push rbp; adc [rax-0x7d], cl; ret; 
0x00000000074a99: sbb [rcx-0x75], cl; push rsi; and [rcx+rcx*4-0x1], cl; sub rdx, rsi; call qword ptr [rbx+0x38]; 
0x00000000101715: sbb [rcx-0x7d], ecx; ret; 
0x0000000014fdc0: sbb [rcx], al; add [rax], al; add [rcx+0xf], al; adc [rax+0x8], eax; ret; 
0x00000000043054: sbb [rcx], al; add [rax], al; ret; 
0x000000001130d8: sbb [rcx], al; add [rax], al; syscall; 
0x000000000f2d43: sbb [rcx], al; ret far; 
0x000000000e9ef6: sbb [rcx], bh; ret; 
0x0000000015f954: sbb [rcx], cl; add bh, bh; adc bl, ch; ret far; 
0x00000000062636: sbb [rcx], dh; jmp qword ptr [rax+rcx*2-0x75]; 
0x0000000008a0d3: sbb [rcx], dh; rcr byte ptr [rbx+0x5d], 0x41; pop rsp; pop r13; ret; 
0x000000000bdfba: sbb [rcx], eax; add [rax-0x73], cl; adc eax, 0x116fc; cmovne rax, rdx; ret; 
0x0000000011f2bc: sbb [rcx], eax; add [rax], al; mov edi, [rsp+0x4]; syscall; 
0x0000000011f26a: sbb [rcx], eax; add [rax], al; syscall; 
0x000000000e4fc4: sbb [rcx], eax; add [rdx+0x7d00], bh; mov eax, 0x7f; cmove rax, rdx; ret; 
0x000000000c9f16: sbb [rcx], edi; ret; 
0x0000000015fa3e: sbb [rcx], esi; shr bl, 0xda; nop [rax+rax]; mov rax, [rip+0x91739]; call qword ptr [rax+0x8]; 
0x0000000015f946: sbb [rcx], esi; shr bl, 0xdb; nop [rax+rax]; mov rax, [rip+0x91831]; call qword ptr [rax]; 
0x000000000d005a: sbb [rdi+0x23], edi; mov rax, r12; pop r12; ret; 
0x0000000015368e: sbb [rdi+rcx+0x5b], dh; pop rbp; pop r12; ret; 
0x00000000120f53: sbb [rdi-0x2708fff4], ebp; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000157b83: sbb [rdi-0x3], edi; jmp qword ptr [rsi+0xf]; 
0x00000000062f53: sbb [rdi-0x749bffe8], ecx; add al, [rbx+0x277426f8]; mov r8d, 0xffffffff; mov eax, r8d; ret; 
0x0000000008e585: sbb [rdi], cl; adc [rbx+0x28], eax; pop rbx; ret; 
0x00000000153bf7: sbb [rdi], cl; adc [rsp+0x38], eax; call qword ptr [rax+0x18]; 
0x00000000062e5c: sbb [rdi], cl; mov dh, 0xc0; neg eax; ret; 
0x000000001279d2: sbb [rdi], cl; mov esi, 0xc48348c3; or [rbx+0x5d], bl; ret; 
0x000000000b918e: sbb [rdi], ecx; test [rbx+0x6], ebx; add [rax], al; ret; 
0x000000000baba8: sbb [rdx+0xf], cl; add [rbx+0x63], cl; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000e5002: sbb [rdx+rdi*4], edx; jge short 0x00000000000e5008; add [rax+0x7f], bh; cmove rax, rdx; ret; 
0x000000000ec9cb: sbb [rdx+rdx*2-0x73], dh; add [rax-0x7d], ecx; ret; 
0x00000000043453: sbb [rdx-0x2708ffe6], ecx; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000036213: sbb [rdx-0x72b7ffe5], esi; cmp eax, 0x1b7962; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000115348: sbb [rdx], edx; sub [rdi-0x11e2153], bh; mov eax, 0xa9; syscall; 
0x0000000016c2c7: sbb [rip+0x14634900], al; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016c2c6: sbb [rip+0x14634900], al; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016c147: sbb [rip+0x14634900], eax; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000087616: sbb [rsi+0x1f], dh; mov rax, [rax+0xe0]; mov esi, 0xffffffff; call qword ptr [rax+0x18]; 
0x000000001517a4: sbb [rsi+0x6], bh; call qword ptr [rax+0x28]; 
0x0000000015176b: sbb [rsi+0x6], bh; mov rax, [rdi+0x8]; call qword ptr [rax+0x28]; 
0x0000000004347f: sbb [rsi+0x8], bh; mov eax, 0x82; syscall; 
0x00000000102853: sbb [rsi-0x2708fff2], edx; mov r9d, 0xffffffff; mov fs:[rdx], eax; mov eax, r9d; ret; 
0x00000000121ffa: sbb [rsi-0x7d], ah; add [rcx], al; ret; 
0x00000000121ff9: sbb [rsi-0x7d], spl; add [rcx], al; ret; 
0x000000000d4d01: sbb [rsi-0x7f], ah; out 0x0, al; and [rax-0x80], al; call qword ptr [rax]; 
0x000000001319ca: sbb ah, dh; or eax, [rax]; syscall; 
0x00000000147186: sbb al, 0x0; add [rax], al; add bl, ch; mov ecx, 0xfe890ee8; jmp qword ptr [rsi+0x66]; 
0x0000000010d15c: sbb al, 0x0; add [rax], al; syscall; 
0x00000000181ab9: sbb al, 0x0; add [rbp-0x77], cl; ret far; 
0x00000000181a13: sbb al, 0x0; add [rcx+0x29], cl; ret far; 
0x00000000024439: sbb al, 0x0; add rax, fs:[0x0]; ret; 
0x00000000023a6c: sbb al, 0x0; cmp [rdx+0xd8], rax; jne short 0x0000000000023a3b; ret; 
0x0000000002418a: sbb al, 0x0; lea rdi, [rip+0x18fcef]; mov rsi, [rax]; xor eax, eax; call qword ptr [rdx+0x1d0]; 
0x000000000310c1: sbb al, 0x0; lea rdi, [rip+0x1bc8b6]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000030cb9: sbb al, 0x0; lea rdi, [rip+0x1bccbe]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000030b67: sbb al, 0x0; lea rdi, [rip+0x1bce10]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000030a7f: sbb al, 0x0; lea rdi, [rip+0x1bcef8]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000309f2: sbb al, 0x0; lea rdi, [rip+0x1bcf85]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000307bd: sbb al, 0x0; lea rdi, [rip+0x1bd1ba]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000030775: sbb al, 0x0; lea rdi, [rip+0x1bd202]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000002471d: sbb al, 0x0; mov dword ptr fs:[rax], 0x9; mov eax, 0xffffffff; ret; 
0x00000000024030: sbb al, 0x0; mov rsi, [rsp+0x8]; mov edi, [rsp+0x14]; mov rdx, [rax]; call rbx; 
0x000000000226bc: sbb al, 0x0; pop rax; pop rbx; pop rbp; ret; 
0x00000000023a54: sbb al, 0x0; ret; 
0x000000000240db: sbb al, 0x0; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000026f71: sbb al, 0x0; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000002284b: sbb al, 0x0; syscall; 
0x00000000026f8c: sbb al, 0x0; test eax, eax; je short 0x0000000000026f98; ret; 
0x0000000009f887: sbb al, 0x15; add [rbp+0x481275c0], al; lea eax, [rip+0x14f6cb]; mov [rip+0x14f6ac], rax; ret; 
0x0000000015f754: sbb al, 0x1; add [rax], al; jmp rax; 
0x0000000012bdef: sbb al, 0x20; je short 0x000000000012be00; pop rbx; ret; 
0x000000000ca00b: sbb al, 0x39; ret; 
0x00000000151644: sbb al, 0x48; add esp, 0x10; pop rbx; ret; 
0x0000000004434a: sbb al, 0x48; add esp, 0x98; pop rbp; pop r12; ret; 
0x000000000b7a89: sbb al, 0x48; lea edi, [rdi+0x1c]; jne 0x00000000000b7fa0; ret; 
0x000000000b921d: sbb al, 0x48; lea edi, [rdi+0x1c]; jne 0x00000000000b97f0; ret; 
0x000000000e2d5c: sbb al, 0x48; mov edx, [rsp+0x10]; mov eax, 0xf7; syscall; 
0x000000000b9244: sbb al, 0x49; sub eax, 0x1d; lea rdi, [rdi+0x1d]; jne 0x00000000000b97f0; ret; 
0x0000000016be47: sbb al, 0x5; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000e8673: sbb al, 0x8b; add ecx, [rax-0x77]; fimul st, dword ptr [rax-0x7d]; ret; 
0x00000000156180: sbb al, 0x99; std; jmp qword ptr [rsi+0x66]; 
0x0000000014fde5: sbb al, 0xb8; add [rax], eax; add [rax], al; movups [rdx], xmm2; ret; 
0x000000000ec4c3: sbb al, 0xb8; add al, [rax]; add [rax], al; ret; 
0x0000000014fcd1: sbb al, 0xf3; jmp qword ptr [rsi+0x2e]; 
0x000000000c1ab7: sbb al, 0xf6; jmp qword ptr [rsi+0xf]; 
0x000000001129e0: sbb al, 0xf8; dec dword ptr [rbx+0x48082444]; add esp, 0x28; ret; 
0x0000000012f40a: sbb al, 0xfd; jmp qword ptr [rsi-0x70]; 
0x00000000047c8c: sbb al, [r8]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000004724d: sbb al, [r8]; mov rax, fs:[r12]; lock add qword ptr [rax+0x460], 0x1; lea rdi, [rbp+0x908]; call qword ptr [rbp+0xf10]; 
0x000000000475b1: sbb al, [rax]; add [rax], al; add [rax], al; mov eax, [rax+0x58]; ret; 
0x00000000118a11: sbb al, [rax]; add [rax], al; syscall; 
0x00000000181c9a: sbb al, [rax]; add [rbp-0x77], cl; ret far; 
0x00000000077083: sbb al, [rax]; add [rcx-0x80], al; call qword ptr [rbx+0xf]; 
0x00000000047fb9: sbb al, [rax]; add rsp, 0x8; ret; 
0x00000000043095: sbb al, [rax]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000042f55: sbb al, [rax]; mov dword ptr fs:[rax], 0x16; mov rax, 0xffffffffffffffff; ret; 
0x00000000041e8f: sbb al, [rax]; mov dword ptr fs:[rax], 0x22; add rsp, 0x8; ret; 
0x00000000043c89: sbb al, [rax]; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x00000000041285: sbb al, [rax]; mov dword ptr fs:[rax], 0x2a; mov rax, r11; ret; 
0x00000000048365: sbb al, [rax]; mov dword ptr fs:[rax], 0x5; mov eax, 0xffffffff; ret; 
0x000000000412e5: sbb al, [rax]; mov dword ptr fs:[rax], 0x9; mov eax, 0xffffffff; pop rbp; ret; 
0x00000000044127: sbb al, [rax]; mov eax, edx; ret; 
0x0000000004724e: sbb al, [rax]; mov rax, fs:[r12]; lock add qword ptr [rax+0x460], 0x1; lea rdi, [rbp+0x908]; call qword ptr [rbp+0xf10]; 
0x00000000042e03: sbb al, [rax]; mov rsi, rsp; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000043419: sbb al, [rax]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000043455: sbb al, [rax]; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000482b5: sbb al, [rax]; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x000000000440c8: sbb al, [rax]; ret; 
0x0000000004643b: sbb al, [rax]; syscall; 
0x0000000013bd1e: sbb al, [rbx+0xba05ff]; add [rax], al; add [rax+0x102], bh; cmovne eax, edx; ret; 
0x00000000129635: sbb al, [rbx-0x17cfd1a]; add [rbp+0x19], eax; rol byte ptr [rcx-0x7d], 0xc0; add [rbp+0x440f45f6], eax; ret far; 
0x000000000dec6a: sbb al, [rsi]; adc [rax], eax; syscall; 
0x0000000003aafb: sbb al, ch; jmp rbx; 
0x000000000df19e: sbb al, dh; add eax, 0x1100e6; add [rbx+rcx*4+0x3d], ecx; ret; 
0x00000000181c99: sbb al, fs:[rax]; add [rbp-0x77], cl; ret far; 
0x000000000ec4b3: sbb bh, [rax+0x2]; ret; 
0x0000000012e85e: sbb bh, bh; call qword ptr [rax-0x18]; 
0x0000000013e1b7: sbb bh, bh; jmp qword ptr [rsi+0xf]; 
0x0000000014276f: sbb bh, ch; jmp qword ptr [rsi+0xf]; 
0x000000000d1862: sbb bh, cl; call far fword ptr [rcx+0x5e]; 
0x0000000002fe02: sbb bh, dh; adc al, [rax]; mov qword ptr [rbx+0x10], 0x0; pop rbx; ret; 
0x00000000109b81: sbb bl, [rax+rcx*2-0x7d]; ret; 
0x000000000328f4: sbb bl, [rax]; add bl, al; nop [rax+rax]; mov rax, [rsi+rax*8+0x80]; ret; 
0x0000000010267a: sbb bl, al; nop [rax]; endbr64; mov eax, 0x8e; syscall; 
0x0000000009a793: sbb bl, al; nop [rax]; mov rsi, [rsp+0x18]; add rsp, 0x18; jmp rax; 
0x000000000e2d79: sbb bl, bh; dec dword ptr [rbx+0x480c2444]; add esp, 0x28; ret; 
0x000000000e2d7a: sbb bl, bh; dec dword ptr [rbx+0x480c2444]; add esp, 0x28; ret; 
0x00000000147632: sbb bl, ch; mov esp, 0xfe8466e8; jmp qword ptr [rsi+0xf]; 
0x000000000b7d4a: sbb bl, dh; movq [rdi], mm0; mov [rdi+0x10], rdx; mov [rdi+0x18], cl; ret; 
0x000000000b707b: sbb bl, dh; movq [rdi], mm0; mov [rdi+0x10], rdx; mov [rdi+0x18], cx; ret; 
0x000000000b70ba: sbb bl, dh; movq [rdi], mm0; mov [rdi+0x10], rdx; mov [rdi+0x18], ecx; ret; 
0x0000000012c30a: sbb bl, dh; movq mm2, [rbx+0x30]; mov [rbp-0x80], eax; movups [rbp-0x78], xmm2; call rcx; 
0x0000000012c4b2: sbb bl, dh; movq mm3, [rbx+0x30]; mov [rbp-0x80], eax; movups [rbp-0x78], xmm3; call r9; 
0x000000000b7d49: sbb bl, r14b; movq [rdi], mm0; mov [rdi+0x10], rdx; mov [rdi+0x18], cl; ret; 
0x000000000b707a: sbb bl, r14b; movq [rdi], mm0; mov [rdi+0x10], rdx; mov [rdi+0x18], cx; ret; 
0x000000000b70b9: sbb bl, r14b; movq [rdi], mm0; mov [rdi+0x10], rdx; mov [rdi+0x18], ecx; ret; 
0x00000000043e23: sbb byte ptr [r10], 0x0; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000010daea: sbb byte ptr [rbp+0x41], 0x5c; pop r13; ret; 
0x00000000033d44: sbb byte ptr [rbx], 0x0; mov [rax], rdx; ret; 
0x00000000033d88: sbb byte ptr [rbx], 0x0; movsxd rdi, edi; mov rax, fs:[rax]; mov rax, [rax+rdi*8+0x80]; ret; 
0x00000000035907: sbb byte ptr [rbx], 0x0; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000017305d: sbb byte ptr [rdi], 0x0; add [rbp-0x77], cl; ret far; 
0x00000000043e24: sbb byte ptr [rdx], 0x0; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000044126: sbb byte ptr [rdx], 0x0; mov eax, edx; ret; 
0x000000000440c7: sbb byte ptr [rdx], 0x0; ret; 
0x000000000ff912: sbb ch, [rdx]; bnd jmp qword ptr [rbx+rcx*4+0x4]; 
0x00000000123b42: sbb ch, cl; out dx, eax; dec dword ptr [rax-0x77]; ret; 
0x000000000b7a2b: sbb cl, [rax-0x73]; jg short 0x00000000000b7a4a; jne 0x00000000000b7fa0; ret; 
0x000000000b91bf: sbb cl, [rax-0x73]; jg short 0x00000000000b91de; jne 0x00000000000b97f0; ret; 
0x000000000945ad: sbb cl, [rax-0x75]; add eax, 0x15ce5b; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009457d: sbb cl, [rax-0x75]; add eax, 0x15ce83; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009454d: sbb cl, [rax-0x75]; add eax, 0x15ceab; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009451d: sbb cl, [rax-0x75]; add eax, 0x15ced3; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000944ed: sbb cl, [rax-0x75]; add eax, 0x15cefb; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000944bd: sbb cl, [rax-0x75]; add eax, 0x15cf23; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009448d: sbb cl, [rax-0x75]; add eax, 0x15cf4b; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009445d: sbb cl, [rax-0x75]; add eax, 0x15cf73; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000943ed: sbb cl, [rax-0x75]; add eax, 0x15cfa3; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000943bd: sbb cl, [rax-0x75]; add eax, 0x15cfcb; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009438d: sbb cl, [rax-0x75]; add eax, 0x15cff3; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009435d: sbb cl, [rax-0x75]; add eax, 0x15d01b; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009432d: sbb cl, [rax-0x75]; add eax, 0x15d043; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000942fd: sbb cl, [rax-0x75]; add eax, 0x15d06b; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000942cd: sbb cl, [rax-0x75]; add eax, 0x15d093; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009429d: sbb cl, [rax-0x75]; add eax, 0x15d0bb; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009426d: sbb cl, [rax-0x75]; add eax, 0x15d0e3; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009423d: sbb cl, [rax-0x75]; add eax, 0x15d10b; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009420d: sbb cl, [rax-0x75]; add eax, 0x15d133; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000941dd: sbb cl, [rax-0x75]; add eax, 0x15d15b; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000160b5d: sbb cl, [rax-0x75]; add eax, 0x90863; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000160b2d: sbb cl, [rax-0x75]; add eax, 0x9088b; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000160afd: sbb cl, [rax-0x75]; add eax, 0x908b3; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000160acd: sbb cl, [rax-0x75]; add eax, 0x908db; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000160a9d: sbb cl, [rax-0x75]; add eax, 0x90903; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000160a6d: sbb cl, [rax-0x75]; add eax, 0x9092b; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000147145: sbb cl, [rax-0x75]; or [r8-0x77], r9b; out dx, eax; call qword ptr [rax+0x20]; 
0x00000000057b65: sbb cl, [rax-0x7b]; div byte ptr [rbp+0x25]; mov dword ptr [rdx], 0x0; mov eax, 0x1; ret; 
0x00000000109ba3: sbb cl, [rax-0x7d]; ret; 
0x000000000b7a2f: sbb cl, [rdi]; test [rdx+0x5], ebp; add [rax], al; ret; 
0x000000000e9ef3: sbb cl, al; clc; sbb [rcx], bh; ret; 
0x000000000e4562: sbb cl, bh; adc [rax], al; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000d813d: sbb cl, ch; fdiv st(7), st; jmp qword ptr [rsi+0x66]; 
0x000000000932f1: sbb cl, ch; imul edi, 0xffffffff; jmp qword ptr [rsi+0xf]; 
0x00000000088f29: sbb cl, ch; paddw mm7, mm7; call qword ptr [rax-0x76df377d]; 
0x00000000088ebb: sbb cl, ch; ret far; 
0x00000000110a89: sbb cl, dh; jmp qword ptr [rbp+rax*2-0x77]; 
0x000000001390e6: sbb dh, [rbx+rcx]; syscall; 
0x0000000014276e: sbb dil, r13b; jmp qword ptr [rsi+0xf]; 
0x00000000043b25: sbb dword ptr [r10], 0x0; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000c0aa4: sbb dword ptr [rax+0x1], 0x0; add [rax+0x29], cl; ret far; 
0x00000000035761: sbb dword ptr [rbx], 0x0; syscall; 
0x00000000043b26: sbb dword ptr [rdx], 0x0; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000043c88: sbb dword ptr [rdx], 0xc76400; add [rax], al; add [rax-0x1], bh; ret; 
0x0000000018bc4e: sbb dword ptr [rip+0x31000002], 0xffffffc0; vzeroupper; ret; 
0x0000000010fdb9: sbb eax, 0x0; ret; 
0x00000000117c2e: sbb eax, 0x1000d7c; ret; 
0x000000000901ff: sbb eax, 0x11ea98; movzx eax, al; movsxd rax, [r11+rax*4]; add rax, r11; notrack jmp rax; 
0x00000000090231: sbb eax, 0x11eac2; movzx eax, al; movsxd rax, [r11+rax*4]; add rax, r11; notrack jmp rax; 
0x00000000090263: sbb eax, 0x11eaec; movzx eax, al; movsxd rax, [r11+rax*4]; add rax, r11; notrack jmp rax; 
0x00000000090295: sbb eax, 0x11eb16; movzx eax, al; movsxd rax, [r11+rax*4]; add rax, r11; notrack jmp rax; 
0x000000000938d1: sbb eax, 0x15aef2; add dword ptr [rip+0x15aee7], 0x1; pop rbx; ret; 
0x000000000422e7: sbb eax, 0x1670f4; andps xmm0, xmm3; andnps xmm3, xmm1; orps xmm0, xmm3; ret; 
0x00000000040aa3: sbb eax, 0x168530; movzx r10d, r10b; movsxd r10, [r11+r10*4]; add r10, r11; notrack jmp r10; 
0x000000000b7ab5: sbb eax, 0x1d7f8d48; jne 0x00000000000b7fa0; ret; 
0x000000000b9249: sbb eax, 0x1d7f8d48; jne 0x00000000000b97f0; ret; 
0x000000000b9274: sbb eax, 0x1ee88349; lea rdi, [rdi+0x1e]; jne 0x00000000000b97f0; ret; 
0x0000000011a001: sbb eax, 0x1f0f3ceb; add [rax-0x73], cl; push rbx; or [rax-0x7d], cl; ret; 
0x0000000018f505: sbb eax, 0x2e136; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018f48b: sbb eax, 0x2e1b0; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018f3fc: sbb eax, 0x2e23f; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018f1f1: sbb eax, 0x2e44a; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018f0bf: sbb eax, 0x2e57c; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018eff9: sbb eax, 0x2e642; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018ef7b: sbb eax, 0x2e6c0; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018eee6: sbb eax, 0x2e755; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018ece9: sbb eax, 0x2e952; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018ebb7: sbb eax, 0x2ea84; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018eaba: sbb eax, 0x2eb81; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018ded5: sbb eax, 0x2f626; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018de5b: sbb eax, 0x2f6a0; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018ddcc: sbb eax, 0x2f72f; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018dbc1: sbb eax, 0x2f93a; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018da8f: sbb eax, 0x2fa6c; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018d9c9: sbb eax, 0x2fb32; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018d94b: sbb eax, 0x2fbb0; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018d8b6: sbb eax, 0x2fc45; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018d6b9: sbb eax, 0x2fe42; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018d587: sbb eax, 0x2ff74; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018d47c: sbb eax, 0x3007f; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000120552: sbb eax, 0x45c93145; xor eax, eax; mov eax, 0x2c; syscall; 
0x00000000120332: sbb eax, 0x45c93145; xor eax, eax; mov eax, 0x2d; syscall; 
0x0000000016d8a4: sbb eax, 0x46f00ff2; or eax, 0xef00ff2; movdqu [rdi+0xd], xmm0; movdqu [rdi], xmm1; ret; 
0x00000000112d4b: sbb eax, 0x48000001; mov edx, esi; xor esi, esi; syscall; 
0x000000000bab23: sbb eax, 0x49000f4a; movsxd ecx, [rbx+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b7ab9: sbb eax, 0x4e0850f; add [rax], al; ret; 
0x0000000016fa23: sbb eax, 0x4e5d8; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016f6c5: sbb eax, 0x4e936; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016f870: sbb eax, 0x4e9cb; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016f545: sbb eax, 0x4eab6; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016f608: sbb eax, 0x4ec33; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016f3c5: sbb eax, 0x4ec36; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016f488: sbb eax, 0x4edb3; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016f245: sbb eax, 0x4edb6; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016f308: sbb eax, 0x4ef33; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016f0c5: sbb eax, 0x4ef36; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016f189: sbb eax, 0x4f0b2; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016ef45: sbb eax, 0x4f0b6; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016f008: sbb eax, 0x4f233; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016edc5: sbb eax, 0x4f236; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016ee88: sbb eax, 0x4f3b3; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016ec45: sbb eax, 0x4f3b6; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016ed08: sbb eax, 0x4f533; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016eac5: sbb eax, 0x4f536; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016eb88: sbb eax, 0x4f6b3; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016e945: sbb eax, 0x4f6b6; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016ea08: sbb eax, 0x4f833; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016e7c5: sbb eax, 0x4f836; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016e888: sbb eax, 0x4f9b3; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016e645: sbb eax, 0x4f9b6; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016e708: sbb eax, 0x4fb33; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016e4c5: sbb eax, 0x4fb36; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016e588: sbb eax, 0x4fcb3; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016e345: sbb eax, 0x4fcb6; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016e408: sbb eax, 0x4fe33; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016e1c5: sbb eax, 0x4fe36; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016e04c: sbb eax, 0x4ffaf; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016e288: sbb eax, 0x4ffb3; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016e108: sbb eax, 0x50133; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016de41: sbb eax, 0x501ba; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016dfcb: sbb eax, 0x50270; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016de64: sbb eax, 0x503d7; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016df21: sbb eax, 0x5059a; sub rdx, 0x80; movsxd r9, [r11+r9*4]; add r9, r11; notrack jmp r9; 
0x0000000016deba: sbb eax, 0x505c1; sub rdx, 0x80; movsxd r9, [r11+r9*4]; add r9, r11; notrack jmp r9; 
0x0000000016ceef: sbb eax, 0x50c0c; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016cbc5: sbb eax, 0x50f36; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016cd5c: sbb eax, 0x50fdf; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016ca45: sbb eax, 0x510b6; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016cb08: sbb eax, 0x51233; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016c8c5: sbb eax, 0x51236; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016c988: sbb eax, 0x513b3; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016c745: sbb eax, 0x513b6; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016c808: sbb eax, 0x51533; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016c5c5: sbb eax, 0x51536; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016c689: sbb eax, 0x516b2; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016c445: sbb eax, 0x516b6; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016c508: sbb eax, 0x51833; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016c2c5: sbb eax, 0x51836; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016c388: sbb eax, 0x519b3; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016c145: sbb eax, 0x519b6; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016c208: sbb eax, 0x51b33; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016bfc5: sbb eax, 0x51b36; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016c088: sbb eax, 0x51cb3; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016be45: sbb eax, 0x51cb6; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016bf08: sbb eax, 0x51e33; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016bcc5: sbb eax, 0x51e36; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016bd88: sbb eax, 0x51fb3; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016bb45: sbb eax, 0x51fb6; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016bc08: sbb eax, 0x52133; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b9c5: sbb eax, 0x52136; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016ba88: sbb eax, 0x522b3; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b845: sbb eax, 0x522b6; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b908: sbb eax, 0x52433; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b6c5: sbb eax, 0x52436; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b54c: sbb eax, 0x525af; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b788: sbb eax, 0x525b3; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b2e6: sbb eax, 0x52655; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b229: sbb eax, 0x52712; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b608: sbb eax, 0x52733; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b361: sbb eax, 0x5279a; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b13e: sbb eax, 0x527fd; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b4cb: sbb eax, 0x52870; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b073: sbb eax, 0x528c8; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b34d: sbb eax, 0x529ee; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b421: sbb eax, 0x52b9a; sub rdx, 0x80; movsxd r9, [r11+r9*4]; add r9, r11; notrack jmp r9; 
0x0000000016b3bf: sbb eax, 0x52bbc; sub rdx, 0x80; movsxd r9, [r11+r9*4]; add r9, r11; notrack jmp r9; 
0x0000000016a054: sbb eax, 0x538e7; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169fb6: sbb eax, 0x53985; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169f04: sbb eax, 0x53a37; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169e66: sbb eax, 0x53ad5; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169db4: sbb eax, 0x53b87; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169d16: sbb eax, 0x53c25; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169c64: sbb eax, 0x53cd7; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169bc6: sbb eax, 0x53d75; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169b14: sbb eax, 0x53e27; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169a76: sbb eax, 0x53ec5; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001699c4: sbb eax, 0x53f77; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169926: sbb eax, 0x54015; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169874: sbb eax, 0x540c7; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001697d6: sbb eax, 0x54165; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169724: sbb eax, 0x54217; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169689: sbb eax, 0x542b2; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001695d4: sbb eax, 0x54367; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169536: sbb eax, 0x54405; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169484: sbb eax, 0x544b7; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001693e6: sbb eax, 0x54555; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169334: sbb eax, 0x54607; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169296: sbb eax, 0x546a5; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001691e4: sbb eax, 0x54757; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169146: sbb eax, 0x547f5; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000169094: sbb eax, 0x548a7; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168ff6: sbb eax, 0x54945; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168f44: sbb eax, 0x549f7; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168ea6: sbb eax, 0x54a95; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168df4: sbb eax, 0x54b47; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168d56: sbb eax, 0x54be5; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168ca8: sbb eax, 0x54c93; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168bb7: sbb eax, 0x54d84; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168af8: sbb eax, 0x54e43; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168a8e: sbb eax, 0x54ead; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016898f: sbb eax, 0x54fac; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168755: sbb eax, 0x55026; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001688ca: sbb eax, 0x55071; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016867b: sbb eax, 0x55100; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168857: sbb eax, 0x55264; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x000000001687fd: sbb eax, 0x5527e; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x000000001988f5: sbb eax, 0x55ea6; test rbx, rbx; jne short 0x00000000001988e0; pop rbx; ret; 
0x00000000167674: sbb eax, 0x56107; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001675d6: sbb eax, 0x561a5; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000167524: sbb eax, 0x56257; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000167486: sbb eax, 0x562f5; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001673d4: sbb eax, 0x563a7; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000167336: sbb eax, 0x56445; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000167284: sbb eax, 0x564f7; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001671e6: sbb eax, 0x56595; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000167134: sbb eax, 0x56647; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000167096: sbb eax, 0x566e5; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166fe4: sbb eax, 0x56797; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166f46: sbb eax, 0x56835; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166e94: sbb eax, 0x568e7; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166df6: sbb eax, 0x56985; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166d44: sbb eax, 0x56a37; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166ca9: sbb eax, 0x56ad2; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166bf4: sbb eax, 0x56b87; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166b56: sbb eax, 0x56c25; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166aa4: sbb eax, 0x56cd7; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166a06: sbb eax, 0x56d75; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166954: sbb eax, 0x56e27; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001668b6: sbb eax, 0x56ec5; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166804: sbb eax, 0x56f77; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166766: sbb eax, 0x57015; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001666b4: sbb eax, 0x570c7; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166616: sbb eax, 0x57165; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166564: sbb eax, 0x57217; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001664c6: sbb eax, 0x572b5; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166414: sbb eax, 0x57367; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166376: sbb eax, 0x57405; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001662c8: sbb eax, 0x574b3; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001661d7: sbb eax, 0x575a4; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166118: sbb eax, 0x57663; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001660ae: sbb eax, 0x576cd; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165faf: sbb eax, 0x577cc; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165eea: sbb eax, 0x57891; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165e77: sbb eax, 0x57a84; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x00000000165e16: sbb eax, 0x57aa5; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x000000000b924d: sbb eax, 0x59c850f; add [rax], al; ret; 
0x0000000011a992: sbb eax, 0x7d8b49; call rbx; 
0x0000000003287f: sbb eax, 0x88001bb2; adc eax, 0x1bb274; ret; 
0x000000000a897b: sbb eax, 0x89001065; ror dword ptr [rcx+0x63], 0xc; mov [rcx+rax-0x37], ecx; notrack jmp rcx; 
0x0000000017329d: sbb eax, 0x894d0000; ret far; 
0x0000000018689f: sbb eax, 0x8b00014c; add al, 0x81; mov edx, [rcx+rdx*4]; sub eax, edx; ret; 
0x0000000011f262: sbb eax, 0x8b941; add [rax], al; mov eax, 0x119; syscall; 
0x0000000012014f: sbb eax, 0x8bfff745; and al, 0xc; add rsp, 0x28; ret; 
0x00000000109105: sbb eax, 0xb60f0d77; ror byte ptr [rcx+0x63], 0x4; test [rcx+rax-0x20], cl; notrack jmp rax; 
0x00000000148aba: sbb eax, 0xb8838b48; and eax, [rax]; add [rcx+rcx*4-0x19], cl; call qword ptr [rax+0x20]; 
0x00000000114612: sbb eax, 0xb8c03145; sub [rcx], al; add [rax], al; syscall; 
0x000000000e2d12: sbb eax, 0xb8c03145; test dword ptr [rax], 0x50f0000; cmp rax, 0xfffffffffffff000; ja short 0x00000000000e2d90; ret; 
0x0000000004659f: sbb eax, 0xbe000001; cmp eax, 0xe8000000; ret; 
0x00000000188292: sbb eax, 0xc0bc0ff3; add rax, rcx; add rax, rdi; vzeroupper; ret; 
0x00000000121b2a: sbb eax, 0xca831; pop rbx; ret; 
0x00000000121b10: sbb eax, 0xca84b; pop rbx; ret; 
0x0000000012880d: sbb eax, 0xe80008e6; stosb [rdi]; mov bh, 0xf0; jmp qword ptr [rsi+0x2e]; 
0x000000000908b6: sbb eax, 0xe9ebe374; nop [rax+rax]; xor eax, eax; ret; 
0x000000000bb3eb: sbb eax, 0xf41d4; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000bac67: sbb eax, 0xf4958; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000bac3e: sbb eax, 0xf4981; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000bac1e: sbb eax, 0xf49a1; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000babf5: sbb eax, 0xf49ca; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000babc6: sbb eax, 0xf49f9; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000baba7: sbb eax, 0xf4a18; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000bab22: sbb eax, 0xf4a1d; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000bab07: sbb eax, 0xf4a38; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000bab85: sbb eax, 0xf4a3a; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000bab55: sbb eax, 0xf4a6a; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000baad2: sbb eax, 0xf4a6d; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000baaa6: sbb eax, 0xf4a99; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000baa90: sbb eax, 0xf4aaf; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000baa6e: sbb eax, 0xf4ad1; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000baa49: sbb eax, 0xf4af6; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000baa2c: sbb eax, 0xf4b13; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000ba9b5: sbb eax, 0xf4b8a; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000ba177: sbb eax, 0xf5348; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000ba142: sbb eax, 0xf537d; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000ba116: sbb eax, 0xf53a9; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000ba100: sbb eax, 0xf53bf; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000ba0de: sbb eax, 0xf53e1; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000ba0b9: sbb eax, 0xf5406; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000ba09c: sbb eax, 0xf5423; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000ba044: sbb eax, 0xf547b; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b998b: sbb eax, 0xf5a60; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b9892: sbb eax, 0xf5be9; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b987c: sbb eax, 0xf5bff; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b985c: sbb eax, 0xf5c1f; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8da7: sbb eax, 0xf6644; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8d7e: sbb eax, 0xf666d; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8d5e: sbb eax, 0xf668d; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8d35: sbb eax, 0xf66b6; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8d06: sbb eax, 0xf66e5; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8ce7: sbb eax, 0xf6704; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8c62: sbb eax, 0xf6709; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8cc5: sbb eax, 0xf6726; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8c95: sbb eax, 0xf6756; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8b80: sbb eax, 0xf67eb; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8b52: sbb eax, 0xf6819; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8b29: sbb eax, 0xf6842; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b84a7: sbb eax, 0xf6e38; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8472: sbb eax, 0xf6e6d; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8446: sbb eax, 0xf6e99; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8430: sbb eax, 0xf6eaf; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b840e: sbb eax, 0xf6ed1; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b83e9: sbb eax, 0xf6ef6; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b83cc: sbb eax, 0xf6f13; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8374: sbb eax, 0xf6f6b; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b813b: sbb eax, 0xf70d0; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8042: sbb eax, 0xf7259; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b802c: sbb eax, 0xf726f; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b800c: sbb eax, 0xf728f; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b76c7: sbb eax, 0xf7b44; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b769e: sbb eax, 0xf7b6d; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b767e: sbb eax, 0xf7b8d; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b7655: sbb eax, 0xf7bb6; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b7626: sbb eax, 0xf7be5; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b7607: sbb eax, 0xf7c04; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b7582: sbb eax, 0xf7c09; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b75e5: sbb eax, 0xf7c26; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b75b5: sbb eax, 0xf7c56; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b74b0: sbb eax, 0xf7cdb; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b7482: sbb eax, 0xf7d09; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b7459: sbb eax, 0xf7d32; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6e67: sbb eax, 0xf829c; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6e32: sbb eax, 0xf82d1; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6e06: sbb eax, 0xf82fd; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6df0: sbb eax, 0xf8313; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6dce: sbb eax, 0xf8335; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6da9: sbb eax, 0xf835a; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6d8c: sbb eax, 0xf8377; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6d34: sbb eax, 0xf83cf; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000fccbb: sbb eax, 0xffb60f45; movsxd rax, [r14+r15*4]; add rax, r14; notrack jmp rax; 
0x0000000017c5fc: sbb eax, 0xffffffff; ret; 
0x000000000b663d: sbb eax, 0xffffffff; xor cl, cl; mov [rax], cl; mov rax, rdi; ret; 
0x00000000118ad5: sbb eax, [rax]; add [rax], al; syscall; 
0x000000000af8ae: sbb eax, [rax]; add [rbp-0x77], cl; ret far; 
0x0000000003e1fe: sbb eax, [rax]; add [rbx-0x7bf0fe08], al; ret; 
0x00000000034577: sbb eax, [rax]; add rax, 0x200; mov fs:[rdx], rax; ret; 
0x000000000344d9: sbb eax, [rax]; add rax, fs:[0x0]; ret; 
0x0000000003506f: sbb eax, [rax]; lea rdi, [r13+0x80]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003859c: sbb eax, [rax]; lea rdi, [rip+0x1b555b]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003853b: sbb eax, [rax]; lea rdi, [rip+0x1b55bc]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000036587: sbb eax, [rax]; lea rdi, [rip+0x1b7630]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003651e: sbb eax, [rax]; lea rdi, [rip+0x1b7699]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000363ef: sbb eax, [rax]; lea rdi, [rip+0x1b77c8]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003638f: sbb eax, [rax]; lea rdi, [rip+0x1b7828]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000036281: sbb eax, [rax]; lea rdi, [rip+0x1b78f6]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000036215: sbb eax, [rax]; lea rdi, [rip+0x1b7962]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035f7e: sbb eax, [rax]; lea rdi, [rip+0x1b79f9]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035e72: sbb eax, [rax]; lea rdi, [rip+0x1b7b05]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035f50: sbb eax, [rax]; lea rdi, [rip+0x1b7ba7]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035d04: sbb eax, [rax]; lea rdi, [rip+0x1b7c73]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035e4b: sbb eax, [rax]; lea rdi, [rip+0x1b7cac]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035cd2: sbb eax, [rax]; lea rdi, [rip+0x1b7e25]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035901: sbb eax, [rax]; lea rdi, [rip+0x1b8076]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000359ca: sbb eax, [rax]; lea rdi, [rip+0x1b81ad]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035928: sbb eax, [rax]; lea rdi, [rip+0x1b81cf]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035985: sbb eax, [rax]; lea rdi, [rip+0x1b81f2]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000345b6: sbb eax, [rax]; lea rdi, [rip+0x1b9541]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000033ae2: sbb eax, [rax]; lea rdi, [rip+0x1b9e95]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000033a07: sbb eax, [rax]; lea rdi, [rip+0x1b9f70]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000033990: sbb eax, [rax]; lea rdi, [rip+0x1b9fe7]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000338f6: sbb eax, [rax]; lea rdi, [rip+0x1ba081]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000003335c: sbb eax, [rax]; lea rdi, [rip+0x1ba61b]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000332f2: sbb eax, [rax]; lea rdi, [rip+0x1ba685]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000330f2: sbb eax, [rax]; lea rdi, [rip+0x1ba885]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000033d45: sbb eax, [rax]; mov [rax], rdx; ret; 
0x00000000032881: sbb eax, [rax]; mov [rip+0x1bb274], dl; ret; 
0x00000000032919: sbb eax, [rax]; mov rax, fs:[rax]; mov rax, [rax]; mov eax, [rax+0xa8]; ret; 
0x00000000035391: sbb eax, [rax]; mov rdi, r12; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000033d89: sbb eax, [rax]; movsxd rdi, edi; mov rax, fs:[rax]; mov rax, [rax+rdi*8+0x80]; ret; 
0x0000000002f5d9: sbb eax, [rax]; ret; 
0x0000000003077c: sbb eax, [rax]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000035762: sbb eax, [rax]; syscall; 
0x00000000112d5c: sbb eax, [rbx+0x674a1f8]; neg eax; ret; 
0x0000000011fe85: sbb eax, [rcx]; add [rax], al; syscall; 
0x0000000016bfc7: sbb eax, [rip+0x14634900]; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016bfc6: sbb eax, [rip+0x14634900]; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000094825: sbb eax, eax; add rsp, 0x20; and eax, 0xc; pop rbx; ret; 
0x00000000055c1a: sbb eax, eax; and eax, 0x2; sub eax, 0x1; ret; 
0x00000000184d27: sbb eax, eax; or eax, 0x1; ret; 
0x0000000013b8bc: sbb eax, eax; ret; 
0x000000001924d5: sbb eax, eax; sbb eax, 0xffffffff; ret; 
0x000000000a8132: sbb ebp, 0xffffffff; jmp qword ptr [rsi+0x2e]; 
0x0000000009e8b6: sbb ebp, ebx; nop [rax]; mov rdi, [rbx+0x48]; call rax; 
0x0000000015c991: sbb ebp, edi; jmp qword ptr [rsi+0x2e]; 
0x0000000014246e: sbb ebp, edi; jmp qword ptr [rsi+0x66]; 
0x00000000026166: sbb ebx, [rcx]; add [rcx], dh; div byte ptr [rcx]; jmp qword ptr [rsi+0xf]; 
0x000000000f4d31: sbb ebx, eax; dec dword ptr [rax-0x77]; ret; 
0x000000000e2cc0: sbb ebx, edi; dec dword ptr [rbx+0x48102444]; add esp, 0x28; ret; 
0x00000000153401: sbb ebx, edx; or [rax], eax; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000b7a59: sbb ecx, [rax-0x73]; jg short 0x00000000000b7a79; jne 0x00000000000b7fa0; ret; 
0x000000000b91ed: sbb ecx, [rax-0x73]; jg short 0x00000000000b920d; jne 0x00000000000b97f0; ret; 
0x000000000a77a0: sbb ecx, [rax-0x77]; test dword ptr [rax-0x7d], 0x840f05ef; mov al, [0x8949c9634dfffffc]; ret far; 
0x000000000a8b0c: sbb ecx, [rbp+rcx*4+0x5]; shl byte ptr [rbx+0x10], 0x1; add [rcx+0x46349d0], cl; or byte ptr [rcx+rax-0x40], 0x3e; jmp rax; 
0x000000001929e4: sbb ecx, [rbx+0x463bf847]; clc; jne 0x0000000000192af0; ret; 
0x000000000e8b52: sbb ecx, [rip-0x4b991800]; hlt; jmp qword ptr [rsi+0xf]; 
0x00000000153983: sbb ecx, eax; std; jmp qword ptr [rsi+0xf]; 
0x000000000a096b: sbb edi, eax; call far fword ptr [rbp+0x31]; 
0x0000000015df84: sbb edi, ebp; jmp qword ptr [rsi+0xf]; 
0x000000001609db: sbb edi, ebp; jmp qword ptr [rsi-0x70]; 
0x000000000d177f: sbb edi, ecx; call far fword ptr [rdx+0x59]; 
0x000000000543ba: sbb edi, edi; dec dword ptr [rax-0x77]; ret; 
0x0000000013e0ff: sbb edi, edi; jmp qword ptr [rsi+0x66]; 
0x0000000013e177: sbb edi, edi; jmp qword ptr [rsi+0xf]; 
0x0000000013e176: sbb edi, edi; jmp qword ptr [rsi+0xf]; 
0x00000000092911: sbb edi, edx; clc; jmp qword ptr [rsi+0xf]; 
0x0000000014df20: sbb edi, esi; jmp qword ptr [rsi+0x66]; 
0x00000000121ff3: sbb edx, 0x8b48000c; sbb [rsi-0x7d], spl; add [rcx], al; ret; 
0x00000000078d41: sbb edx, [rdi+0x70e9fffa]; jrcxz 0x0000000000078d48; jmp qword ptr [rsi+0xf]; 
0x000000000579d5: sbb edx, ebx; mov [rdi+0x8], r10; mov eax, ecx; adc eax, eax; ret; 
0x00000000033361: sbb esp, [rsi-0x3eb7ffe5]; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x000000000579d3: sbb r10, r11; mov [rdi+0x8], r10; mov eax, ecx; adc eax, eax; ret; 
0x0000000012c309: sbb r11b, sil; movq mm2, [rbx+0x30]; mov [rbp-0x80], eax; movups [rbp-0x78], xmm2; call rcx; 
0x0000000012c4b1: sbb r11b, sil; movq mm3, [rbx+0x30]; mov [rbp-0x80], eax; movups [rbp-0x78], xmm3; call r9; 
0x0000000014246d: sbb r13, r15; jmp qword ptr [rsi+0x66]; 
0x00000000088eba: sbb r9b, bpl; ret far; 
0x0000000017c5fb: sbb rax, 0xffffffffffffffff; ret; 
0x000000000b663c: sbb rax, 0xffffffffffffffff; xor cl, cl; mov [rax], cl; mov rax, rdi; ret; 
0x00000000186f0f: scasb [rdi]; adc [rax], al; add [rbp-0x77], cl; ret far; 
0x00000000186c0f: scasb [rdi]; adc eax, [rax]; add [rbp-0x77], cl; ret far; 
0x0000000009f794: scasb [rdi]; add [rax], al; lea rdx, [rip+0xc4e62]; cmovne rax, rdx; ret; 
0x00000000187e0f: scasb [rdi]; add [rax], eax; add [rbp-0x77], cl; ret far; 
0x00000000187b0f: scasb [rdi]; add al, 0x0; add [rbp-0x77], cl; ret far; 
0x000000000f1f7e: scasb [rdi]; add esi, ebx; call far fword ptr [rbx+0x4c]; 
0x00000000130ab6: scasb [rdi]; hlt; or eax, [rax]; syscall; 
0x0000000015427e: scasb [rdi]; loopne 0x000000000015426d; jmp qword ptr [rsi+0x66]; 
0x00000000085054: scasb [rdi]; mov r8d, 0xffffffff; mov eax, r8d; ret; 
0x0000000005b3d1: scasb [rdi]; mov rax, r10; pop rbx; ret; 
0x0000000018750f: scasb [rdi]; or al, [rax]; add [rbp-0x77], cl; ret far; 
0x00000000141118: scasb [rdi]; or al, [rax]; mov rax, fs:[rax]; ret; 
0x0000000018720f: scasb [rdi]; or eax, 0x894d0000; ret far; 
0x000000000e3127: scasb [rdi]; out dx, al; jmp rdi; 
0x0000000005d4ec: scasb [rdi]; push rsp; cld; jmp qword ptr [rsi-0x7f]; 
0x000000001427ee: scasb [rdi]; sar dh, cl; jmp qword ptr [rsi+0x66]; 
0x0000000018c6ca: scasb [rdi]; vzeroupper; ret; 
0x00000000118e1d: scasd [rdi]; add [rax], al; add [rax+0x39], cl; ret; 
0x0000000011207d: scasd [rdi]; add dh, cl; jmp qword ptr [rsi-0x7d]; 
0x0000000016b54d: scasd [rdi]; and eax, 0x63490005; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000118cbd: scasd [rdi]; imul ecx, [rip-0x3b7cb800], 0x8; ret; 
0x000000001315ed: scasd [rdi]; in al, 0xff; jmp qword ptr [rsi+0x2e]; 
0x0000000016e04d: scasd [rdi]; inc dword ptr [rax+rax]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001982ad: scasd [rdi]; push rsi; add eax, 0x6eae900; clc; jmp qword ptr [rsi+0x2e]; 
0x0000000015599d: scasd [rdi]; ret far; 
0x000000000895d0: scasd [rdi]; ret; 
0x0000000004466c: scasd [rdi]; sti; add r15, [rsp]; mov rsi, r15; call r14; 
0x000000000baa91: scasd [rdi]; str [rcx+0x63]; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000013b80d: scasd [rdi]; xchg edi, ebp; jmp qword ptr [rsi+0x66]; 
0x00000000122089: seta al; movzx eax, al; neg eax; ret; 
0x0000000010fdb6: seta al; sbb eax, 0x0; ret; 
0x000000000941c4: setae al; ret; 
0x000000000d427b: setb al; add eax, 0x16d; ret; 
0x00000000122c8a: setbe al; mov eax, r8d; ret; 
0x00000000122c89: setbe r8b; mov eax, r8d; ret; 
0x00000000062e56: sete al; add rsp, 0x18; movzx eax, al; neg eax; ret; 
0x00000000157c8b: sete al; add rsp, 0x8; mov eax, r8d; ret; 
0x000000000522e2: sete al; add rsp, 0x8; movzx eax, al; ret; 
0x000000001457cc: sete al; add rsp, 0x8; ret; 
0x000000000e522a: sete al; movzx eax, al; lea rax, [rax+rax-0x1]; ret; 
0x000000000e522b: sete al; movzx eax, al; lea rax, [rax+rax-0x1]; ret; 
0x00000000155d18: sete al; movzx eax, al; ret; 
0x00000000094cbe: sete al; movzx eax, al; sub eax, 0x2; add rsp, 0x8; ret; 
0x000000000342f9: sete al; ret; 
0x00000000042c8a: sete dh; xor eax, eax; mov [rbx+0x40], esi; pop rbx; ret; 
0x00000000160a25: sete dl; mov [rbx], edx; pop rbx; ret; 
0x00000000157c8a: sete r8b; add rsp, 0x8; mov eax, r8d; ret; 
0x00000000042c89: sete sil; xor eax, eax; mov [rbx+0x40], esi; pop rbx; ret; 
0x000000000ce0c0: setg al; movzx eax, al; lea eax, [rax+rax-0x1]; ret; 
0x0000000018bc9c: setl al; neg eax; or eax, 0x1; vzeroupper; ret; 
0x0000000010c58f: setl al; ret; 
0x0000000011f3d0: setne al; add rsp, 0x18; movzx eax, al; neg eax; ret; 
0x0000000014dd3f: setne al; add rsp, 0x8; movzx eax, al; add eax, 0x1; ret; 
0x00000000024705: setne al; add rsp, 0x8; movzx eax, al; neg eax; ret; 
0x000000001173f7: setne al; add rsp, 0x8; movzx eax, al; ret; 
0x00000000102ad8: setne al; lea eax, [rax+rax*8+0x5]; ret; 
0x00000000156469: setne al; mov [rsp], rax; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x0000000008cd5f: setne al; mov eax, r8d; ret; 
0x00000000062e98: setne al; movzx eax, al; neg eax; pop rbp; ret; 
0x000000001028e1: setne al; movzx eax, al; neg eax; ret; 
0x00000000043c5c: setne al; movzx eax, al; ret; 
0x000000000e51c0: setne al; ret; 
0x000000000a8946: setne bh; test r9b, dil; jne short 0x00000000000a8928; ret; 
0x000000000a880a: setne cl; test r10b, r9b; jne short 0x00000000000a87f0; mov rax, r8; ret; 
0x000000000a8945: setne dil; test r9b, dil; jne short 0x00000000000a8928; ret; 
0x0000000008cd5e: setne r8b; mov eax, r8d; ret; 
0x000000000a8809: setne r9b; test r10b, r9b; jne short 0x00000000000a87f0; mov rax, r8; ret; 
0x0000000016b223: sfence; lea r11, [rip+0x52712]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b06e: sfence; lea r11, [rip+0x528c8]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016874f: sfence; lea r11, [rip+0x55026]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168676: sfence; lea r11, [rip+0x55100]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000010d60a: shl bh, 0xc2; jmp rsi; 
0x00000000052b69: shl bh, 0xd8; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000018bc9e: shl bh, 0xd8; or eax, 0x1; vzeroupper; ret; 
0x00000000062e9d: shl bh, 0xd8; pop rbp; ret; 
0x0000000002470e: shl bh, 0xd8; ret; 
0x000000001847ff: shl bl, 0x1; bsf eax, eax; add rax, rdi; vzeroupper; ret; 
0x00000000042481: shl bl, 0xf; pop rcx; add eax, 0x17af06; ret; 
0x00000000184aa4: shl byte ptr [rax+0x48], 0x1; clc; ret; 
0x00000000188772: shl byte ptr [rax+0x48], 0x1; clc; sub rax, rdx; vzeroupper; ret; 
0x0000000018468b: shl byte ptr [rax+0x48], 0x1; clc; vzeroupper; ret; 
0x000000000b813c: shl byte ptr [rax+0xf], 0x1; add [rbx+0x63], cl; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000001479d5: shl byte ptr [rax+rax*2+0x41], 0x83; call qword ptr [rbx]; 
0x00000000115b0d: shl byte ptr [rax+rbx+0x48], 0x89; add eax, 0xd9b29; mov eax, 0x1; add rsp, 0x8; ret; 
0x00000000146a90: shl byte ptr [rax+rcx*2+0x49], 0x8b; cmp al, 0x24; mov rsi, r13; mov rax, [rdi+0x38]; call qword ptr [rax+0x10]; 
0x0000000005b3f6: shl byte ptr [rax+rcx+0x49], 0x83; ret; 
0x0000000009f445: shl byte ptr [rax+rcx+0x5b], 0x5d; pop r12; ret; 
0x0000000011cc14: shl byte ptr [rax+rdi+0x48], 0x39; ret; 
0x000000000a28c0: shl byte ptr [rax+rdx*8+0x3c], 0x3d; mov eax, 0x0; cmovne r8, rax; mov rax, r8; ret; 
0x000000001490df: shl byte ptr [rax+rdx+0x48], 0x8b; or [r9+rcx*4-0x1a], r9b; mov rdi, rbp; call qword ptr [rax]; 
0x00000000188706: shl byte ptr [rax], 0x48; add eax, edi; sub rax, rdx; vzeroupper; ret; 
0x0000000018464b: shl byte ptr [rax], 0x48; add eax, edi; vzeroupper; ret; 
0x000000001144ad: shl byte ptr [rbp+0x10], 0xb8; adc al, 0x0; add [rax], al; syscall; 
0x0000000011440d: shl byte ptr [rbp+0x10], 0xb8; adc eax, [rax]; add [rax], al; syscall; 
0x0000000010e09d: shl byte ptr [rbp+0x10], 0xb8; add [rax], eax; add [rax], al; syscall; 
0x0000000010e83d: shl byte ptr [rbp+0x10], 0xb8; add eax, [rax]; add [rax], al; syscall; 
0x000000000e2e6d: shl byte ptr [rbp+0x10], 0xb8; and al, [rax]; add [rax], al; syscall; 
0x00000000118a0d: shl byte ptr [rbp+0x10], 0xb8; sbb al, [rax]; add [rax], al; syscall; 
0x000000001201cd: shl byte ptr [rbp+0x10], 0xb8; sub al, [rax]; add [rax], al; syscall; 
0x000000001200fd: shl byte ptr [rbp+0x10], 0xb8; sub eax, [rax]; add [rax], al; syscall; 
0x0000000011f72d: shl byte ptr [rbp+0x10], 0xb8; xor [rcx], al; add [rax], al; syscall; 
0x00000000157c55: shl byte ptr [rbp+0x10], cl; mov r8d, 0x1; mov eax, r8d; ret; 
0x0000000009101d: shl byte ptr [rbp+0x10], cl; sub dword ptr [rip+0x15d799], 0x1; ret; 
0x000000000d4abc: shl byte ptr [rbp+0x11], 0x4c; mov eax, eax; add rsp, 0x8; ret; 
0x0000000009f88b: shl byte ptr [rbp+0x12], 0x48; lea eax, [rip+0x14f6cb]; mov [rip+0x14f6ac], rax; ret; 
0x0000000004232a: shl byte ptr [rbp+0x13], 0x1; and esi, 0x80000000; movss [rdi], xmm0; movd xmm0, esi; ret; 
0x000000001473f5: shl byte ptr [rbp+0x14], 0x48; mov eax, [rbp+0x8]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x0000000010c190: shl byte ptr [rbp+0x15], 0xb8; adc [rax], eax; add [rax], al; syscall; 
0x0000000011f500: shl byte ptr [rbp+0x15], 0xb8; adc al, 0x1; add [rax], al; syscall; 
0x0000000010c240: shl byte ptr [rbp+0x15], 0xb8; adc al, [rax]; add [rax], al; syscall; 
0x0000000011f660: shl byte ptr [rbp+0x15], 0xb8; adc eax, [rcx]; add [rax], al; syscall; 
0x00000000120b10: shl byte ptr [rbp+0x15], 0xb8; and [rcx], al; add [rax], al; syscall; 
0x000000001206b0: shl byte ptr [rbp+0x15], 0xb8; sub al, 0x0; add [rax], al; syscall; 
0x00000000120bc0: shl byte ptr [rbp+0x15], 0xb8; sub eax, [rcx]; add [rax], al; syscall; 
0x00000000120c70: shl byte ptr [rbp+0x15], 0xb8; xor eax, [rcx]; add [rax], al; syscall; 
0x0000000006303f: shl byte ptr [rbp+0x16], 0x48; mov edx, [rdi+0x88]; mov [rdx+0x8], rcx; mov dword ptr [rdx+0x4], 0x1; ret; 
0x0000000004347d: shl byte ptr [rbp+0x18], 0xbe; or [rax], al; add [rax], al; mov eax, 0x82; syscall; 
0x0000000013c35c: shl byte ptr [rbp+0x19], 0x44; mov eax, eax; ret; 
0x00000000147143: shl byte ptr [rbp+0x1a], 0x48; mov eax, [rbp+0x8]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x0000000011f260: shl byte ptr [rbp+0x1d], 0x41; mov ecx, 0x8; mov eax, 0x119; syscall; 
0x00000000114550: shl byte ptr [rbp+0x1d], 0x45; xor eax, eax; mov eax, 0x127; syscall; 
0x00000000114610: shl byte ptr [rbp+0x1d], 0x45; xor eax, eax; mov eax, 0x128; syscall; 
0x000000000e2d10: shl byte ptr [rbp+0x1d], 0x45; xor eax, eax; mov eax, 0xf7; syscall; 
0x00000000120550: shl byte ptr [rbp+0x1d], 0x45; xor ecx, ecx; xor r8d, r8d; mov eax, 0x2c; syscall; 
0x00000000120330: shl byte ptr [rbp+0x1d], 0x45; xor ecx, ecx; xor r8d, r8d; mov eax, 0x2d; syscall; 
0x000000000627db: shl byte ptr [rbp+0x2], 0x5b; ret; 
0x0000000018d302: shl byte ptr [rbp+0x2b], 0x4c; mov eax, eax; shr rax, 0x2; vzeroupper; ret; 
0x00000000188962: shl byte ptr [rbp+0x2b], 0x4c; mov eax, eax; vzeroupper; ret; 
0x000000000de268: shl byte ptr [rbp+0x2d], 0x83; imul eax, [rcx+rax], 0x5b; pop rbp; pop r12; ret; 
0x000000000e45bf: shl byte ptr [rbp+0x2e], 0xb8; ja short 0x00000000000e45c5; add [rax], al; syscall; 
0x00000000114a3f: shl byte ptr [rbp+0x2e], 0xb8; jb short 0x0000000000114a45; add [rax], al; syscall; 
0x000000000df41f: shl byte ptr [rbp+0x2e], 0xb8; je short 0x00000000000df425; add [rax], al; syscall; 
0x000000000e450f: shl byte ptr [rbp+0x2e], 0xb8; jne short 0x00000000000e4515; add [rax], al; syscall; 
0x0000000011499f: shl byte ptr [rbp+0x2e], 0xb8; jno short 0x00000000001149a5; add [rax], al; syscall; 
0x000000000e423f: shl byte ptr [rbp+0x2e], 0xb8; push 0x0; add [rax], al; syscall; 
0x00000000112a5c: shl byte ptr [rbp+0x31], 0x41; mov eax, 0x8; mov rdx, r12; mov eax, 0x10f; syscall; 
0x0000000006107f: shl byte ptr [rbp+0x36], 0x83; sub eax, 0x18d6c7; add [rcx+rcx*4-0x40], eax; pop rbx; ret; 
0x0000000015cb94: shl byte ptr [rbp+0x39], 0x83; sub eax, 0x94aba; add [rcx+rcx*4-0x40], ecx; pop rbp; ret; 
0x0000000011ada4: shl byte ptr [rbp+0x3b], 0x49; mov edi, [rdi]; call rbx; 
0x00000000125922: shl byte ptr [rbp+0x3b], 0x83; sub eax, 0xca3e0; add [rcx+rcx*4-0x40], eax; add rsp, 0x8; ret; 
0x000000000bbf76: shl byte ptr [rbp+0x4], cl; mov rax, rdi; ret; 
0x000000000ac3c2: shl byte ptr [rbp+0x4b], 0x66; pmovmskb eax, mm1; bsf eax, eax; lea rax, [rdi+rax+0x30]; ret; 
0x0000000004414f: shl byte ptr [rbp+0x56], 0x41; mov edx, 0x8; mov eax, 0x80; syscall; 
0x000000000e2ef8: shl byte ptr [rbp+0x5], 0x48; add esp, 0x8; ret; 
0x000000000908d8: shl byte ptr [rbp+0x5], cl; ret; 
0x0000000010dedc: shl byte ptr [rbp+0x61], 0xb8; add [rcx], eax; add [rax], al; syscall; 
0x00000000057d7b: shl byte ptr [rbp+0x62], 0xc7; add al, [rax]; add [rax], al; add [rax+0x2], bh; ret; 
0x000000000630b7: shl byte ptr [rbp+0x6], cl; sub dword ptr [rdi], 0x1; ret; 
0x00000000183923: shl byte ptr [rbp+0x6a], cl; test esi, esi; je short 0x0000000000183908; xor eax, eax; ret; 
0x00000000143cfb: shl byte ptr [rbp+0x71], 0xf; mov cl, 0x15; ret far; 
0x00000000033dce: shl byte ptr [rbp+0x7], 0x44; mov eax, eax; ret; 
0x00000000196f84: shl byte ptr [rbp+0x7b], cl; add rsp, 0x30; mov rax, r12; pop r12; ret; 
0x0000000011adcd: shl byte ptr [rbp+0x7d], 0x49; mov edi, [rdi]; call rbx; 
0x0000000014115d: shl byte ptr [rbp+0x8], 0x5b; pop rbp; pop r12; ret; 
0x0000000009a08b: shl byte ptr [rbp+0xb], 0xc7; add eax, 0x154de0; add [rax], al; add [rax], al; ret; 
0x00000000123382: shl byte ptr [rbp+0xb], cl; ret; 
0x0000000010c609: shl byte ptr [rbp+0xc], 0x8b; push rbx; add al, 0xeb; ret; 
0x00000000093929: shl byte ptr [rbp+0xc], cl; sub dword ptr [rip+0x15ae8d], 0x1; ret; 
0x00000000083f69: shl byte ptr [rbp+0xc], cl; sub dword ptr [rip+0x16a80d], 0x1; ret; 
0x0000000012cf08: shl byte ptr [rbp+0xd], 0x48; cmp dword ptr [rdi], 0x0; je short 0x000000000012cf20; ret; 
0x000000001462f6: shl byte ptr [rbp+0xf], 0x31; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x5d], bl; ret; 
0x00000000146235: shl byte ptr [rbp+rax+0x48], 0x89; out dx, eax; call rax; 
0x00000000148727: shl byte ptr [rbp+rax+0x4c], 0x89; out dx, eax; call rax; 
0x0000000012bde0: shl byte ptr [rbp+rbp+0x48], 0x8b; jp short 0x000000000012be37; mov rsi, rdx; call rax; 
0x00000000188290: shl byte ptr [rbp+rbx-0xd], 0xf; mov esp, 0xc80148c0; add rax, rdi; vzeroupper; ret; 
0x000000000cf7e0: shl byte ptr [rbp+rcx+0x48], cl; bsf eax, edx; shr rax, 0x2; ret; 
0x000000000cfaf8: shl byte ptr [rbp+rdx-0x78], cl; rol dword ptr [rax+0x1e740fe1], 0x1; ret; 
0x0000000009357d: shl byte ptr [rbp-0x10], 0xc3; add rdx, 0x60; mov rax, [rdi]; mov [rdx], rax; ret; 
0x000000000bcc67: shl byte ptr [rbp-0x12], cl; xor eax, eax; ret; 
0x0000000009e880: shl byte ptr [rbp-0x13], 0x31; rol bl, 0x66; nop [rax+rax]; mov eax, 0x1; ret; 
0x000000000bb720: shl byte ptr [rbp-0x13], cl; lea rax, [rcx-0x1]; ret; 
0x00000000086e50: shl byte ptr [rbp-0x13], cl; ret; 
0x000000000a87d2: shl byte ptr [rbp-0x15], 0x1; mov rax, r8; ret; 
0x0000000013f006: shl byte ptr [rbp-0x1c], 0x44; mov eax, edx; ret; 
0x0000000018c54a: shl byte ptr [rbp-0x1d], 0x29; enter 0xf8c5, 0x77; ret; 
0x00000000150bd2: shl byte ptr [rbp-0x1d], 0xe8; test al, 0xfe; jmp qword ptr [rsi+0xf]; 
0x000000000aa66b: shl byte ptr [rbp-0x1e], 0x31; shr byte ptr [rcx], 0xc8; ret; 
0x00000000183e1c: shl byte ptr [rbp-0x1f], 0x29; enter 0xf8c5, 0x77; ret; 
0x00000000094fe6: shl byte ptr [rbp-0x21], cl; nop [rax]; xor r8d, r8d; mov rax, r8; ret; 
0x0000000018ca1f: shl byte ptr [rbp-0x22], 0x29; enter 0xf8c5, 0x77; ret; 
0x000000001842f1: shl byte ptr [rbp-0x24], 0x29; enter 0xf8c5, 0x77; ret; 
0x000000000bcd01: shl byte ptr [rbp-0x24], cl; ret; 
0x00000000040fec: shl byte ptr [rbp-0x27], cl; ret; 
0x00000000115d59: shl byte ptr [rbp-0x2c], 0x5b; xor eax, eax; pop rbp; pop r12; ret; 
0x00000000115e3a: shl byte ptr [rbp-0x2d], 0x5b; xor eax, eax; pop rbp; pop r12; ret; 
0x0000000013b97b: shl byte ptr [rbp-0x2e], 0x1; mov [rsi], rdi; xor eax, eax; ret; 
0x000000001846ed: shl byte ptr [rbp-0x30], 0xc5; std; xlat [rbx]; ret; 
0x00000000041e87: shl byte ptr [rbp-0x30], cl; mov rax, [rip+0x1a9fdf]; mov dword ptr fs:[rax], 0x22; add rsp, 0x8; ret; 
0x000000001881ed: shl byte ptr [rbp-0x50], 0xc5; std; xlat [rbx]; ret; 
0x0000000012edfd: shl byte ptr [rbp-0x57], 0x48; mov eax, edi; ret; 
0x000000000ea812: shl byte ptr [rbp-0x5e], 0xe9; ret far; 
0x00000000102aaa: shl byte ptr [rbp-0x69], cl; cmp dword ptr [rdi+0x14], 0x1000000; mov edx, 0x2; cmove eax, edx; ret; 
0x00000000055655: shl byte ptr [rbp-0x7c], 0x48; sub edx, 0x1; jne short 0x0000000000055640; mov eax, 0x1; ret; 
0x0000000009e95a: shl byte ptr [rbp-0xd], cl; ret; 
0x000000000bdfec: shl byte ptr [rbp-0xf], cl; ret; 
0x000000000a8b10: shl byte ptr [rbx+0x10], 0x1; add [rcx+0x46349d0], cl; or byte ptr [rcx+rax-0x40], 0x3e; jmp rax; 
0x000000000939b0: shl byte ptr [rbx+0x25], 0x1; movzx eax, byte ptr [rax]; ret; 
0x0000000009d12a: shl byte ptr [rbx+0x4c], 0x89; out 0x48, al; mov edi, ebp; call rax; 
0x00000000157558: shl byte ptr [rbx+0xd], 0x1; xor r8d, r8d; mov eax, r8d; ret; 
0x0000000012ce86: shl byte ptr [rbx+0xf], 0x1; cmp [rax+0x8], rdi; jne short 0x000000000012ce80; mov rax, [rax+0x30]; ret; 
0x000000000908b1: shl byte ptr [rbx+rax*4+0x7d], 0x0; sbb eax, 0xe9ebe374; nop [rax+rax]; xor eax, eax; ret; 
0x00000000153215: shl byte ptr [rbx+rax+0x49], 0x1; mov eax, eax; mov rax, r8; pop rbx; ret; 
0x00000000089702: shl byte ptr [rbx+rbp*2+0x49], 0x2b; and [r8+0x1], r9b; ret; 
0x000000000dd7c6: shl byte ptr [rbx+rbp+0x5b], 0x5d; pop r12; ret; 
0x00000000184762: shl byte ptr [rbx+rbx-0xd], 0xf; mov esp, 0xf80148c0; add rax, rcx; vzeroupper; ret; 
0x00000000117675: shl byte ptr [rbx+rcx+0x48], 0x83; ror byte ptr [rax], 0x48; mov [rip+0xd810d], eax; mov rax, r8; ret; 
0x0000000011d032: shl byte ptr [rbx+rcx+0x48], cl; cmp edi, edx; jne short 0x000000000011d028; mov rax, [rax+0x8]; ret; 
0x0000000013b088: shl byte ptr [rbx+rcx-0x3a], 0x2; jmp far fword ptr [rax+0x2850f02]; 
0x000000000de8c0: shl byte ptr [rbx+rdi*2+0x4d], 0x85; in al, 0x74; adc eax, 0x48eb894c; mov edi, ebp; call r12; 
0x000000001476d9: shl byte ptr [rbx+rdx*4+0x48], 0x8b; or [r8-0x77], r9b; out dx, eax; call qword ptr [rax+0x20]; 
0x00000000082b3a: shl byte ptr [rbx+rdx+0x48], 0x8b; mov edi, 0xe0; jmp rax; 
0x00000000113906: shl byte ptr [rcx+rax*2-0x75], 0x1a; syscall; 
0x000000001531e1: shl byte ptr [rcx+rax*4+0x64], 0x48; mov [rbx], eax; pop rbx; ret; 
0x000000000475a4: shl byte ptr [rcx+rbx+0x48], 0x8b; adc [rbx+0x48], bl; mov dword ptr [rip+0x1a9d39], 0x0; mov eax, [rax+0x58]; ret; 
0x000000000f225c: shl byte ptr [rcx+rcx*8+0x48], 0x8b; jl short 0x00000000000f2287; sbb [rcx-0x17f3dbbc], cl; ret; 
0x00000000082a5a: shl byte ptr [rcx+rcx+0x48], 0x8b; mov edi, 0xe0; jmp rax; 
0x00000000137c66: shl byte ptr [rcx+rcx+0x48], 0x8d; cmp eax, 0xb8770; call rax; 
0x0000000014cf26: shl byte ptr [rcx+rcx+0x48], 0x8d; mov ebp, 0xc8; call rax; 
0x000000000b1cbc: shl byte ptr [rcx+rdx+0x48], cl; bsf eax, edx; ret; 
0x00000000172e1d: shl byte ptr [rcx], 0x0; add [rbp-0x77], cl; ret far; 
0x000000000941bd: shl byte ptr [rcx], 0x1; ror byte ptr [rax+0x39], 0xfa; setae al; ret; 
0x000000000bc235: shl byte ptr [rcx], 0x1; shl byte ptr [rip+0x3fffc00], cl; div ecx; mov eax, eax; ret; 
0x00000000115f63: shl byte ptr [rcx], 0xc0; pop rbp; ret; 
0x00000000116c47: shl byte ptr [rcx], cl; idiv byte ptr [rax+0x118]; syscall; 
0x000000000e2f60: shl byte ptr [rcx], cl; idiv byte ptr [rdi+0x1200011]; mov eax, 0x38; syscall; 
0x00000000024659: shl byte ptr [rcx], cl; imul al; syscall; 
0x0000000010d302: shl byte ptr [rcx], cl; test byte ptr [rax-0x77], 0xef; call rax; 
0x0000000010d331: shl byte ptr [rcx], cl; test byte ptr [rax-0x77], 0xef; mov eax, 0x135; syscall; 
0x000000000bc8f6: shl byte ptr [rdi+0x4c], 0x89; loopne 0x00000000000bc958; pop rbp; pop r12; ret; 
0x00000000106fe3: shl byte ptr [rdi+0x5b], 0xb8; add eax, 0x5d000000; pop r12; ret; 
0x000000000980c9: shl byte ptr [rdi+rax*8], 0xc; add [rax], al; add [rcx+rcx*4-0x40], cl; ret; 
0x00000000148136: shl byte ptr [rdi+rax+0x31], 0xc0; ret; 
0x000000001532d5: shl byte ptr [rdi+rax+0x4c], 0x1; lea eax, [rax+0x80]; mov rax, r8; pop rbx; ret; 
0x000000001533a5: shl byte ptr [rdi+rax+0x4c], 0x1; lea eax, [rax+0xa0]; mov rax, r8; pop rbx; ret; 
0x00000000153475: shl byte ptr [rdi+rax+0x4c], 0x1; lea eax, [rax+0xa8]; mov rax, r8; pop rbx; ret; 
0x0000000010d2fe: shl byte ptr [rdi+rbp+0x31], 0xd2; xor esi, esi; mov rdi, rbp; call rax; 
0x000000000ede9f: shl byte ptr [rdi+rdi-0x7d], 0xc1; add [rax-0x7d], ecx; ret; 
0x000000001476b5: shl byte ptr [rdi+rsi*4+0x48], 0x8b; or [r8-0x77], r9b; out dx, eax; mov qword ptr [rsp], 0x0; call qword ptr [rax+0x20]; 
0x000000000bcf8c: shl byte ptr [rdi], 0x1; or al, [rax]; mov rdi, [r12]; movzx esi, bl; call rbp; 
0x00000000166c7a: shl byte ptr [rdx+0x13], 0x1; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000011cc58: shl byte ptr [rdx+0x48], 0x39; ret; 
0x00000000082ae3: shl byte ptr [rdx+0x48], 0x8b; mov edi, 0xe0; lea rsi, [rsp+0x8]; call rax; 
0x000000000b1e8b: shl byte ptr [rdx+0x48], cl; bsf eax, edx; ret; 
0x000000000cf7cb: shl byte ptr [rdx+0x48], cl; bsf eax, edx; shr rax, 0x2; ret; 
0x0000000016634c: shl byte ptr [rdx+0xe], 0x1; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x000000000945ab: shl byte ptr [rdx+rbx+0x48], 0x8b; add eax, 0x15ce5b; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009457b: shl byte ptr [rdx+rbx+0x48], 0x8b; add eax, 0x15ce83; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009454b: shl byte ptr [rdx+rbx+0x48], 0x8b; add eax, 0x15ceab; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009451b: shl byte ptr [rdx+rbx+0x48], 0x8b; add eax, 0x15ced3; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000944eb: shl byte ptr [rdx+rbx+0x48], 0x8b; add eax, 0x15cefb; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000944bb: shl byte ptr [rdx+rbx+0x48], 0x8b; add eax, 0x15cf23; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009448b: shl byte ptr [rdx+rbx+0x48], 0x8b; add eax, 0x15cf4b; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009445b: shl byte ptr [rdx+rbx+0x48], 0x8b; add eax, 0x15cf73; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000943eb: shl byte ptr [rdx+rbx+0x48], 0x8b; add eax, 0x15cfa3; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000943bb: shl byte ptr [rdx+rbx+0x48], 0x8b; add eax, 0x15cfcb; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009438b: shl byte ptr [rdx+rbx+0x48], 0x8b; add eax, 0x15cff3; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009435b: shl byte ptr [rdx+rbx+0x48], 0x8b; add eax, 0x15d01b; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009432b: shl byte ptr [rdx+rbx+0x48], 0x8b; add eax, 0x15d043; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000942fb: shl byte ptr [rdx+rbx+0x48], 0x8b; add eax, 0x15d06b; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000942cb: shl byte ptr [rdx+rbx+0x48], 0x8b; add eax, 0x15d093; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009429b: shl byte ptr [rdx+rbx+0x48], 0x8b; add eax, 0x15d0bb; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009426b: shl byte ptr [rdx+rbx+0x48], 0x8b; add eax, 0x15d0e3; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009423b: shl byte ptr [rdx+rbx+0x48], 0x8b; add eax, 0x15d10b; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000009420b: shl byte ptr [rdx+rbx+0x48], 0x8b; add eax, 0x15d133; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000941db: shl byte ptr [rdx+rbx+0x48], 0x8b; add eax, 0x15d15b; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000160b5b: shl byte ptr [rdx+rbx+0x48], 0x8b; add eax, 0x90863; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000160b2b: shl byte ptr [rdx+rbx+0x48], 0x8b; add eax, 0x9088b; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000160afb: shl byte ptr [rdx+rbx+0x48], 0x8b; add eax, 0x908b3; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000160acb: shl byte ptr [rdx+rbx+0x48], 0x8b; add eax, 0x908db; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000160a9b: shl byte ptr [rdx+rbx+0x48], 0x8b; add eax, 0x90903; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000160a6b: shl byte ptr [rdx+rbx+0x48], 0x8b; add eax, 0x9092b; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000000ac73b: shl byte ptr [rdx+rdx*8+0xf], 0xbd; ror byte ptr [rax+0x1], 0xf8; ret; 
0x0000000015f2ce: shl byte ptr [rdx+rdx+0x48], 0x8b; add eax, 0x8cb88; call qword ptr [rax+0x1f8]; 
0x0000000005b18c: shl byte ptr [rdx-0x4], 0x1; dec dword ptr [rcx-0x77]; ret; 
0x00000000146a25: shl byte ptr [rdx], 0x0; add [rcx+rcx*4-0xa], cl; add qword ptr [rbx+0x22a8], 0x1; mov rdi, rbp; call qword ptr [rax+0x18]; 
0x000000000bc237: shl byte ptr [rip+0x3fffc00], cl; div ecx; mov eax, eax; ret; 
0x000000001135b6: shl byte ptr [rip+0x410000], cl; cmp eax, 0x410000; je short 0x00000000001135f0; mov eax, 0x101; syscall; 
0x000000000921a9: shl byte ptr [rsi+0x14], 0x48; mov eax, [rbx+0x40]; add rsp, 0x20; pop rbx; jmp rax; 
0x0000000004219c: shl byte ptr [rsi+0x48], 0x1; movd mm0, eax; ret; 
0x00000000041fdd: shl byte ptr [rsi+0x48], 0x1; movd mm1, eax; mov [rdi], rax; subsd xmm0, xmm1; ret; 
0x000000000ff2ee: shl byte ptr [rsi+0xf], 0x1; insb [rdi], dx; ret; 
0x000000000b1a56: shl byte ptr [rsi+0xf], 0x1; outsd dx, [rsi]; ret; 
0x00000000047d13: shl byte ptr [rsi+0xf], 0x6c; rol dword ptr [rcx+rcx*4-0x40], 0xf; adc [rdi], eax; ret; 
0x00000000157f03: shl byte ptr [rsi+0xf], 0xc5; ret far; 
0x000000000ed9f8: shl byte ptr [rsi+0xf], cl; outsb dx, [rsi]; ret; 
0x00000000184b67: shl byte ptr [rsi+rax*4+0xf], 0xbd; ror byte ptr [rax+0x1], 0xf8; add rax, r8; vzeroupper; ret; 
0x0000000014fd53: shl byte ptr [rsi+rax+0x48], 0x8d; jge short 0x000000000014fdc2; call rax; 
0x000000001507f3: shl byte ptr [rsi+rax+0x48], 0x8d; jge short 0x0000000000150852; call rax; 
0x00000000146b6f: shl byte ptr [rsi+rbp*2+0x48], 0x8b; and [r8-0x77], cl; out dx, eax; call qword ptr [rax+0x20]; 
0x0000000009f8c9: shl byte ptr [rsi+rcx+0x48], 0x8d; add eax, 0x14f68d; mov [rip+0x14f66e], rax; add rsp, 0x8; ret; 
0x00000000152484: shl byte ptr [rsi+rcx+0x49], 0x8b; cmp [rcx+rcx*4-0x39], cl; call qword ptr [rax+0x20]; 
0x000000000b1c5f: shl byte ptr [rsi+rdi*2+0x48], cl; bsf eax, edx; ret; 
0x000000001837cf: shl byte ptr [rsi+rdx*8+0x48], cl; movsxd ecx, ecx; add rax, rcx; sub rax, rdi; ret; 
0x00000000094421: shl byte ptr [rsi+rdx+0x48], 0x8b; add eax, 0x15cfa5; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000143741: shl byte ptr [rsi+rdx+0x48], 0x8b; cmp eax, 0xad365; ror rdi, 0x11; xor rdi, fs:[0x30]; call rax; 
0x000000000ac277: shl byte ptr [rsi+rdx+0xf], 0xbc; ror byte ptr [rax+0x1], 0xf8; add rax, rcx; ret; 
0x00000000154d37: shl byte ptr [rsi+rsi+0x48], 0x8b; sbb [r9+rcx*4-0x11], r9b; call qword ptr [rax+0x20]; 
0x000000001158c5: shl byte ptr [rsi], 0x64; mov [rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000a87ce: shl byte ptr [rsp+rax+0x39], 0xd0; jne short 0x00000000000a87c0; mov rax, r8; ret; 
0x000000000a879a: shl byte ptr [rsp+rax+0x39], 0xf0; jne short 0x00000000000a8790; mov rax, r8; ret; 
0x000000000dda41: shl byte ptr [rsp+rbp+0x48], 0x89; ret; 
0x0000000012d0c6: shl byte ptr [rsp+rbp+0x48], 0x8d; jne short 0x000000000012d0ad; lea rdi, [rip-0x184]; call rax; 
0x000000000a8749: shl byte ptr [rsp+rbp+0x4d], 0x89; ret; 
0x000000000ea3c1: shl byte ptr [rsp+rbx+0xf], 0xb6; add ecx, [rax-0x77]; fimul st, dword ptr [rax-0x7d]; ret; 
0x000000001214f4: shl byte ptr [rsp+rcx+0x1], cl; rol byte ptr [rcx+rcx*4-0x19], cl; mov eax, 0x14; syscall; 
0x0000000014aee1: shl byte ptr [rsp+rcx+0x48], cl; add esp, 0x8; pop rbx; pop rbp; ret; 
0x00000000084411: shl byte ptr [rsp+rcx+0x4c], 0x89; loopne 0x0000000000084475; pop r12; pop r13; ret; 
0x0000000010d391: shl byte ptr [rsp+rdi+0x31], 0xd2; call rax; 
0x00000000146a09: shl byte ptr [rsp+rdi+0x48], 0x8b; and [r9], sil; test byte ptr [rax-0x77], 0xef; mov dword ptr [rbx+0x18], 0x0; call qword ptr [rax+0x28]; 
0x00000000184b19: shl byte ptr [rsp+rdx*8+0xf], 0xbd; ror byte ptr [rax+0x1], 0xf8; vzeroupper; ret; 
0x00000000052af5: shl byte ptr [rsp+rsi*2-0x41], 0x1; add [rip-0x2711800], al; std; dec dword ptr [rax-0x77]; ret; 
0x000000000a086c: shl ch, 0x1; add [rax], al; lea rdx, [rip+0xd2229]; cmovne rax, rdx; ret; 
0x0000000018ef7c: shl dh, 0x2; add [rcx+0x63], cl; or al, 0x93; add rcx, r11; notrack jmp rcx; 
0x0000000012bded: shl dh, 0x43; sbb al, 0x20; je short 0x000000000012be00; pop rbx; ret; 
0x000000000ee4bd: shl dh, 0x82; enter 0x0, 0x0; jne 0x00000000000ee3ed; ret; 
0x0000000004211c: shl dl, 0xf; pop rcx; add eax, 0x17abcb; ret; 
0x00000000134c02: shl dl, cl; call far fword ptr [rax+0x4c]; 
0x00000000106ce2: shl dl, cl; jmp qword ptr [rsi+0x66]; 
0x000000001841b8: shl dword ptr [rax+0x49], 0x39; ret far; 
0x00000000123391: shl dword ptr [rbx], 0x4e; adc [rax-0x73], cl; or al, 0x8e; add eax, [rcx+rdx]; ret; 
0x00000000035c9b: shl dword ptr [rcx+0x1b], 0x1; add [rbx-0xd363], cl; jmp qword ptr [rcx+rcx*4+0x18]; 
0x00000000160a3b: shl dword ptr [rcx-0x7ab70010], 0xdb; jne short 0x0000000000160a50; pop rbx; ret; 
0x0000000018c589: shl dword ptr [rcx], 0x1; ror byte ptr [rbx+0xc3b170c], 0x16; jne 0x000000000018c209; vzeroupper; ret; 
0x000000000a865a: shl dword ptr [rcx], 0xc0; mov [rdx], rcx; ret; 
0x0000000012e8c6: shl dword ptr [rdi+0x5], 0xe9; add dl, [rsi+rdi*8]; call qword ptr [rax-0x18]; 
0x0000000002fdab: shl dword ptr [rdi], 0xff; call qword ptr [rax-0x5e1f00d]; 
0x000000000abeb6: shl dword ptr [rsi+0xb], cl; movzx ecx, byte ptr [rsi+rdx]; movzx eax, byte ptr [rdi+rdx]; sub eax, ecx; ret; 
0x00000000043f5f: shl dword ptr [rsi+0xf], 0xc6; rol byte ptr [rcx], 0xf; adc [rdi], eax; ret; 
0x000000000b1a52: shl dword ptr [rsi+0xf], 0xd7; shl byte ptr [rsi+0xf], 0x1; outsd dx, [rsi]; ret; 
0x000000000bb49f: shl dword ptr [rsi+0xf], 0xda; ret; 
0x00000000042479: shl eax, 0x17; or eax, esi; movd xmm0, eax; mulss xmm0, [rip+0x17af06]; ret; 
0x000000000423ec: shl eax, 0x17; or esi, eax; movd xmm0, esi; ret; 
0x00000000052978: shl eax, 0x1e; or eax, edx; ret; 
0x0000000011ef2f: shl eax, 0x20; and rax, rdi; or rax, rsi; ret; 
0x0000000004206b: shl eax, 0x34; and rcx, rdx; or rcx, rax; movq xmm0, rcx; ret; 
0x0000000013c74e: shl eax, 0x3; shr rax, 0x4; and eax, 0x7f; ret; 
0x00000000110b32: shl eax, 0x4; mov edx, [rdx+rax]; mov rdi, [rbp-0x118]; mov rsi, r9; call qword ptr [rbp-0xf0]; 
0x00000000043bbf: shl eax, cl; or [rdi], rax; xor eax, eax; ret; 
0x00000000043c57: shl eax, cl; test [rdi], rax; setne al; movzx eax, al; ret; 
0x0000000012110d: shl eax, cl; test eax, 0xf200e; jne short 0x000000000012113a; mov eax, 0x42; syscall; 
0x000000000e52c6: shl ebx, 0x1; dec dword ptr [rax-0x77]; ret; 
0x000000000bbc17: shl ebx, 0x1; movsb [rdi], [rsi]; ret; 
0x000000000563fc: shl ecx, cl; mov [rdi-0x10], r9; ret; 
0x0000000005637b: shl ecx, cl; mov [rdi-0x8], r9; ret; 
0x0000000005634a: shl ecx, cl; mov [rdi], r9; ret; 
0x0000000004735c: shl edi, 0x20; or rax, rdi; ret; 
0x00000000074050: shl edx, 0x2; lea rcx, [rbx+rdx]; add rdx, r15; call qword ptr [rax+r9*8]; 
0x000000000b182a: shl edx, 0x30; or rax, rdx; bsf rax, rax; lea rax, [rdi+rax]; ret; 
0x0000000013c59b: shl edx, 0x4; add edx, 0x8; cmp esi, 0x80; cmovb eax, edx; ret; 
0x0000000013c59c: shl edx, 0x4; add edx, 0x8; cmp esi, 0x80; cmovb eax, edx; ret; 
0x0000000014a518: shl edx, 0x4; xor rax, rdx; mov [rdi], r8; mov [rdi+0x8], rax; ret; 
0x00000000160980: shl edx, cl; shr rax, 0x6; or [rdi+rax*8], rdx; xor eax, eax; ret; 
0x00000000057ccc: shl esi, 0x20; or rax, rsi; movq xmm0, rax; ret; 
0x0000000013c793: shl esi, 0x4; lea r8, [rdi+rsi+0x8]; mov rax, r8; ret; 
0x00000000057ba3: shl esi, cl; mov [rdi], rsi; mov [rdx], eax; mov eax, 0x1; ret; 
0x0000000011579c: shl esp, cl; call qword ptr [rax-0x36fa74b8]; 
0x0000000011571c: shl esp, cl; call qword ptr [rax-0x5e1f00d]; 
0x00000000134c01: shl r10b, cl; call far fword ptr [rax+0x4c]; 
0x0000000011575b: shl r12d, cl; call qword ptr [rax-0x5e1f00d]; 
0x000000000563fb: shl r9, cl; mov [rdi-0x10], r9; ret; 
0x0000000005637a: shl r9, cl; mov [rdi-0x8], r9; ret; 
0x00000000056349: shl r9, cl; mov [rdi], r9; ret; 
0x0000000011ef2e: shl rax, 0x20; and rax, rdi; or rax, rsi; ret; 
0x0000000004206a: shl rax, 0x34; and rcx, rdx; or rcx, rax; movq xmm0, rcx; ret; 
0x00000000110b31: shl rax, 0x4; mov edx, [rdx+rax]; mov rdi, [rbp-0x118]; mov rsi, r9; call qword ptr [rbp-0xf0]; 
0x00000000043bbe: shl rax, cl; or [rdi], rax; xor eax, eax; ret; 
0x00000000043c56: shl rax, cl; test [rdi], rax; setne al; movzx eax, al; ret; 
0x0000000012110c: shl rax, cl; test eax, 0xf200e; jne short 0x000000000012113a; mov eax, 0x42; syscall; 
0x0000000004735b: shl rdi, 0x20; or rax, rdi; ret; 
0x0000000007404f: shl rdx, 0x2; lea rcx, [rbx+rdx]; add rdx, r15; call qword ptr [rax+r9*8]; 
0x000000000b1829: shl rdx, 0x30; or rax, rdx; bsf rax, rax; lea rax, [rdi+rax]; ret; 
0x0000000014a517: shl rdx, 0x4; xor rax, rdx; mov [rdi], r8; mov [rdi+0x8], rax; ret; 
0x0000000016097f: shl rdx, cl; shr rax, 0x6; or [rdi+rax*8], rdx; xor eax, eax; ret; 
0x00000000057ccb: shl rsi, 0x20; or rax, rsi; movq xmm0, rax; ret; 
0x0000000013c792: shl rsi, 0x4; lea r8, [rdi+rsi+0x8]; mov rax, r8; ret; 
0x00000000057ba2: shl rsi, cl; mov [rdi], rsi; mov [rdx], eax; mov eax, 0x1; ret; 
0x000000000563f4: shld eax, ecx, cl; mov [rdi-0x8], r8; shl r9, cl; mov [rdi-0x10], r9; ret; 
0x00000000056374: shld eax, ecx, cl; mov [rdi], r8; shl r9, cl; mov [rdi-0x8], r9; ret; 
0x000000000563f3: shld r8, r9, cl; mov [rdi-0x8], r8; shl r9, cl; mov [rdi-0x10], r9; ret; 
0x00000000056372: shld r8, r9, cl; mov [rdi], r8; shl r9, cl; mov [rdi-0x8], r9; ret; 
0x00000000046144: shr al, 0x16; ret; 
0x000000001168b4: shr al, 0x46; mov bl, 0xf4; call far fword ptr [rdx+0x59]; 
0x0000000012fc15: shr al, 0x75; and ebx, esi; call far fword ptr [rax+0x4c]; 
0x0000000011198e: shr al, 0x7c; ret; 
0x00000000135b72: shr al, 0xa8; ret; 
0x0000000009711c: shr al, 0xbe; ret; 
0x00000000157650: shr al, 0xda; mov [0x8c48348c031fff2], al; ret; 
0x0000000011247c: shr al, cl; sahf; add ecx, esi; jmp qword ptr [rsi+0x45]; 
0x0000000012ceea: shr ax, 0xe; and eax, 0x1; ret; 
0x0000000015fa40: shr bl, 0xda; nop [rax+rax]; mov rax, [rip+0x91739]; call qword ptr [rax+0x8]; 
0x0000000015f948: shr bl, 0xdb; nop [rax+rax]; mov rax, [rip+0x91831]; call qword ptr [rax]; 
0x000000000d1001: shr bl, 0xe0; nop [rax]; lea rax, [rip-0x10f]; add rsp, 0x58; ret; 
0x000000000d0ee1: shr bl, 0xe0; nop [rax]; lea rax, [rip-0xff]; add rsp, 0x58; ret; 
0x00000000196bea: shr bl, cl; ret far; 
0x000000000aa66f: shr byte ptr [rcx], 0xc8; ret; 
0x0000000002f288: shr byte ptr [rcx], cl; ret; 
0x000000000ac8ec: shr byte ptr [rcx], cl; rol bl, 0x1; xor eax, eax; ret; 
0x000000000cafb7: shr byte ptr [rdx+0x1], 0x6a; add [rbx+rcx*4+0x4c], cl; and al, 0x10; call r14; 
0x000000000bd55e: shr byte ptr [rdx+0x1], cl; lea r9, [rsp+0x20]; call rbx; 
0x00000000166caa: shr byte ptr [rdx+0x5], cl; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000bd358: shr byte ptr [rdx], 0x4c; lea ecx, [rsp+0x18]; call r13; 
0x0000000008baeb: shr cl, 0x36; jp short 0x000000000008bae9; jmp qword ptr [rsi+0x2e]; 
0x000000000cd08b: shr cl, 0x38; idiv bh; jmp qword ptr [rsi+0xf]; 
0x00000000084970: shr cl, 0x42; in al, 0xf9; jmp qword ptr [rsi+0x2e]; 
0x0000000014fcce: shr cl, 0x5c; sbb al, 0xf3; jmp qword ptr [rsi+0x2e]; 
0x0000000012dfbc: shr cl, 0x5e; fcomip st, st(5); jmp qword ptr [rsi+0xf]; 
0x000000000834f4: shr cl, 0x5f; idiv ecx; jmp qword ptr [rsi+0xf]; 
0x0000000012e364: shr cl, 0x63; push rsp; out dx, eax; jmp qword ptr [rsi+0xf]; 
0x0000000008328c: shr cl, 0x71; stc; stc; jmp qword ptr [rsi+0x2e]; 
0x000000000c05f8: shr cl, 0x73; idiv bh; jmp qword ptr [rsi+0xf]; 
0x000000000c58bd: shr cl, 0x7b; idiv bh; jmp qword ptr [rsi+0xf]; 
0x0000000012f341: shr cl, 0x8d; out dx, eax; jmp qword ptr [rsi+0xf]; 
0x00000000082fbb: shr cl, 0x96; sti; stc; jmp qword ptr [rsi+0x2e]; 
0x0000000012eace: shr cl, 0xa9; out dx, eax; jmp qword ptr [rsi+0x2e]; 
0x000000000685c0: shr cl, 0xb5; ret far; 
0x000000000837db: shr cl, 0xce; hlt; stc; jmp qword ptr [rsi+0x2e]; 
0x0000000006a3be: shr cl, 0xe7; mov bl, 0xff; jmp qword ptr [rsi+0xf]; 
0x0000000012efdc: shr cl, 0xe; jns short 0x000000000012efd6; jmp qword ptr [rsi+0xf]; 
0x00000000053909: shr cl, 0xf8; idiv bh; call qword ptr [rax+0x20247c83]; 
0x0000000012e711: shr cl, 0xf; push rcx; out dx, eax; jmp qword ptr [rsi+0xf]; 
0x000000000555ab: shr dword ptr [rax+0x19], 0x0; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000d23e3: shr dword ptr [rbx+0x7], 0x0; add [rdi+rcx-0x49], al; ret far; 
0x000000000981b4: shr dword ptr [rsi+0x48], 0x3d; jmp far fword ptr [rdi+0x32760000]; 
0x000000000b840f: shr dword ptr [rsi+0xf], 0x1; add [rcx+0x63], cl; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000012fbb7: shr eax, 0x10; cmp edx, 0x80000000; cmovne eax, edi; ret; 
0x0000000012fbca: shr eax, 0x18; ret; 
0x00000000129466: shr eax, 0x1f; cmp dil, al; mov eax, edx; cmove eax, ecx; ret; 
0x000000001294a3: shr eax, 0x1f; cmp sil, al; mov eax, edx; cmove eax, ecx; ret; 
0x00000000041baf: shr eax, 0x1f; ret; 
0x0000000011eeb1: shr eax, 0x20; and edx, 0xfff; and eax, 0xfffff000; or eax, edx; ret; 
0x0000000018f8ac: shr eax, 0x20; cmp ecx, eax; jne short 0x000000000018f8b6; xor eax, eax; ret; 
0x00000000048215: shr eax, 0x20; mov [rdi+0x4], ax; xor eax, eax; ret; 
0x000000000cf76b: shr eax, 0x2; ret; 
0x0000000018cfb3: shr eax, 0x2; vzeroupper; ret; 
0x00000000192b7a: shr eax, 0x38; ret; 
0x000000000469d5: shr eax, 0x3; lea r12, [rbx+rax*8+0x8]; nop [rax]; call qword ptr [rbx]; 
0x00000000198a20: shr eax, 0x3; lea rbp, [rbx+rax*8+0x8]; nop [rax+rax]; call qword ptr [rbx]; 
0x00000000041efc: shr eax, 0x3f; ret; 
0x00000000042a38: shr eax, 0x42; add [rip-0x3b7cb800], edx; sbb [rbx+0x5d], bl; ret; 
0x0000000008df26: shr eax, 0x4; and eax, 0x1; ret; 
0x0000000013c752: shr eax, 0x4; and eax, 0x7f; ret; 
0x00000000094ea0: shr eax, 0x4; lea rdx, [rax+0x1]; mov [rip+0x157422], rdx; ret; 
0x0000000008df36: shr eax, 0x5; and eax, 0x1; ret; 
0x000000000bc186: shr eax, 0x6; and eax, 0x3fffc00; ret; 
0x00000000160983: shr eax, 0x6; or [rdi+rax*8], rdx; xor eax, eax; ret; 
0x00000000160953: shr eax, 0x6; test [rdi+rax*8], rdx; setne al; movzx eax, al; ret; 
0x000000000bc109: shr eax, 0xc; and eax, 0xf; movsxd rcx, [rsi+rax*4]; add rcx, rsi; notrack jmp rcx; 
0x0000000011eedc: shr eax, 0xc; xor al, al; or eax, edx; ret; 
0x0000000012ceeb: shr eax, 0xe; and eax, 0x1; ret; 
0x000000000bc13b: shr eax, 0xe; and eax, 0x3fc00; ret; 
0x0000000015d674: shr eax, cl; and al, 0xfd; jmp qword ptr [rsi+0xf]; 
0x00000000122a1f: shr eax, cl; and eax, 0x1; ret; 
0x0000000011f901: shr eax, cl; and eax, 0x3; ret; 
0x00000000122c6d: shr eax, cl; and r8d, 0x1; mov eax, r8d; ret; 
0x0000000005b18a: shr eax, cl; shl byte ptr [rdx-0x4], 0x1; dec dword ptr [rcx-0x77]; ret; 
0x000000000bcdab: shr ebp, 0x1; or al, 0x0; test byte ptr [rdx+0xcd], 0x1; je short 0x00000000000bcd75; ret; 
0x00000000044668: shr ebx, 0x1; imul r15, rbx; add r15, [rsp]; mov rsi, r15; call r14; 
0x00000000028061: shr ebx, cl; mov esi, 0x750d8d48; call far fword ptr [rax]; 
0x00000000047da3: shr ecx, 0x10; and ecx, 0x3ff; xor eax, ecx; ret; 
0x000000001294dd: shr ecx, 0x1f; cmp dil, cl; cmovne eax, esi; ret; 
0x00000000129514: shr ecx, 0x1f; cmp sil, cl; cmovne eax, edx; ret; 
0x0000000015f165: shr ecx, 0x3; rep movsq [rdi], [rsi]; ret; 
0x00000000098a01: shr ecx, 0x3; rep stosq [rdi]; pop rbp; ret; 
0x00000000043b1b: shr ecx, 0x3; rep stosq [rdi]; ret; 
0x0000000012e85b: shr ecx, 0xbf; sbb bh, bh; call qword ptr [rax-0x18]; 
0x0000000005650c: shr ecx, cl; mov [rdi+0x10], r9; ret; 
0x00000000056495: shr ecx, cl; mov [rdi+0x8], r9; ret; 
0x00000000056464: shr ecx, cl; mov [rdi], r9; ret; 
0x00000000155f65: shr edx, 0x20; mov [rsp+0x8], rdx; call qword ptr [rax+0x8]; 
0x00000000156f9a: shr edx, 0x20; mov [rsp], edx; call qword ptr [rax+0x48]; 
0x00000000146052: shr edx, 0x3; add rax, rcx; notrack jmp rax; 
0x0000000008ad70: shr edx, 0x4; and edx, 0x1; mov eax, edx; ret; 
0x0000000008ae70: shr edx, 0x5; and edx, 0x1; mov eax, edx; ret; 
0x000000001609a3: shr edx, 0x6; not rax; and [rdi+rdx*8], rax; xor eax, eax; ret; 
0x0000000013c199: shr esi, 0x3; mov eax, 0x2; sub esi, 0x1; mov [rdi+0x1], sil; ret; 
0x00000000122c6c: shr r8d, cl; and r8d, 0x1; mov eax, r8d; ret; 
0x0000000005650b: shr r9, cl; mov [rdi+0x10], r9; ret; 
0x00000000056494: shr r9, cl; mov [rdi+0x8], r9; ret; 
0x00000000056463: shr r9, cl; mov [rdi], r9; ret; 
0x0000000011eeb0: shr rax, 0x20; and edx, 0xfff; and eax, 0xfffff000; or eax, edx; ret; 
0x0000000018f8ab: shr rax, 0x20; cmp ecx, eax; jne short 0x000000000018f8b6; xor eax, eax; ret; 
0x00000000048214: shr rax, 0x20; mov [rdi+0x4], ax; xor eax, eax; ret; 
0x000000000cf76a: shr rax, 0x2; ret; 
0x0000000018cfb2: shr rax, 0x2; vzeroupper; ret; 
0x00000000192b79: shr rax, 0x38; ret; 
0x000000000469d4: shr rax, 0x3; lea r12, [rbx+rax*8+0x8]; nop [rax]; call qword ptr [rbx]; 
0x00000000198a1f: shr rax, 0x3; lea rbp, [rbx+rax*8+0x8]; nop [rax+rax]; call qword ptr [rbx]; 
0x00000000041efb: shr rax, 0x3f; ret; 
0x0000000013c751: shr rax, 0x4; and eax, 0x7f; ret; 
0x00000000094e9f: shr rax, 0x4; lea rdx, [rax+0x1]; mov [rip+0x157422], rdx; ret; 
0x00000000160982: shr rax, 0x6; or [rdi+rax*8], rdx; xor eax, eax; ret; 
0x00000000160952: shr rax, 0x6; test [rdi+rax*8], rdx; setne al; movzx eax, al; ret; 
0x0000000011eedb: shr rax, 0xc; xor al, al; or eax, edx; ret; 
0x00000000044667: shr rbx, 0x1; imul r15, rbx; add r15, [rsp]; mov rsi, r15; call r14; 
0x00000000155f64: shr rdx, 0x20; mov [rsp+0x8], rdx; call qword ptr [rax+0x8]; 
0x00000000156f99: shr rdx, 0x20; mov [rsp], edx; call qword ptr [rax+0x48]; 
0x00000000146051: shr rdx, 0x3; add rax, rcx; notrack jmp rax; 
0x000000001609a2: shr rdx, 0x6; not rax; and [rdi+rdx*8], rax; xor eax, eax; ret; 
0x00000000056504: shrd eax, ecx, cl; mov [rdi+0x8], r8; shr r9, cl; mov [rdi+0x10], r9; ret; 
0x0000000005648e: shrd eax, ecx, cl; mov [rdi], r8; shr r9, cl; mov [rdi+0x8], r9; ret; 
0x00000000056503: shrd r8, r9, cl; mov [rdi+0x8], r8; shr r9, cl; mov [rdi+0x10], r9; ret; 
0x0000000005648c: shrd r8, r9, cl; mov [rdi], r8; shr r9, cl; mov [rdi+0x8], r9; ret; 
0x0000000005648d: shrd r8, r9, cl; mov [rdi], r8; shr r9, cl; mov [rdi+0x8], r9; ret; 
0x00000000043f60: shufpd xmm0, xmm0, 0x1; movups [rdi], xmm0; ret; 
0x00000000043f57: shufpd xmm1, xmm1, 0x1; pand xmm0, xmm1; shufpd xmm0, xmm0, 0x1; movups [rdi], xmm0; ret; 
0x00000000044097: shufpd xmm1, xmm1, 0x1; por xmm0, xmm1; shufpd xmm0, xmm0, 0x1; movups [rdi], xmm0; ret; 
0x0000000018ab15: shufps xmm0, [rdi+0x2], 0x0; lea rax, [rdi+0x2]; vzeroupper; ret; 
0x00000000189085: shufps xmm0, [rdi+0x2], 0x0; vzeroupper; ret; 
0x00000000043f61: shufps xmm0, xmm0, 0x1; movups [rdi], xmm0; ret; 
0x00000000043f58: shufps xmm1, xmm1, 0x1; pand xmm0, xmm1; shufpd xmm0, xmm0, 0x1; movups [rdi], xmm0; ret; 
0x00000000044098: shufps xmm1, xmm1, 0x1; por xmm0, xmm1; shufpd xmm0, xmm0, 0x1; movups [rdi], xmm0; ret; 
0x0000000011eeb7: sldt [rax]; and eax, 0xfffff000; or eax, edx; ret; 
0x0000000007e1fd: sldt [rax]; lea rax, [rip-0xfac]; mov r9, rcx; mov dword ptr [rbp-0x510], 0x1; jmp rax; 
0x0000000012e713: sqrtps xmm5, xmm7; jmp qword ptr [rsi+0xf]; 
0x0000000017fa97: stc; add [rax], al; add [rbp-0x77], cl; ret far; 
0x000000000a1cf4: stc; add [rax], al; cmove rax, rdx; ret; 
0x000000001939e9: stc; add [rcx-0x77], ecx; ret far; 
0x0000000010d9e4: stc; add [rdi+0x30], esi; mov eax, 0x106; syscall; 
0x0000000016e647: stc; add al, 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000018dbc3: stc; add al, [rax]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x000000000d1271: stc; add cl, [rax-0x77]; ret; 
0x0000000007e94b: stc; add cl, [rcx+0x29]; ret far; 
0x0000000010c6b5: stc; add ecx, 0x150; shr ecx, 0x3; rep stosq [rdi]; ret; 
0x0000000015d155: stc; add esi, [rsi+0x7]; ret; 
0x00000000082921: stc; call far fword ptr [rbx+0x4c]; 
0x000000000d1863: stc; call far fword ptr [rcx+0x5e]; 
0x000000000d1780: stc; call far fword ptr [rdx+0x59]; 
0x0000000004a1a0: stc; dec dword ptr [rax-0x77]; fadd st, dword ptr [rcx+0xf]; xchg esp, eax; ret; 
0x0000000008e366: stc; dec dword ptr [rax-0x77]; ret; 
0x0000000008285d: stc; dec dword ptr [rax-0x7b]; ror byte ptr [rdi], 0x84; mov dword ptr [rax], 0x89480000; ret; 
0x000000000beee3: stc; dec dword ptr [rax-0x7d]; ret; 
0x00000000088562: stc; dec dword ptr [rbp+rcx*4+0x2c]; and dword ptr [rsi+0x48], 0xf; outsb dx, [rsi]; ret; 
0x00000000084462: stc; dec dword ptr [rbx+rcx*4+0x2d]; fnstsw [rdx+0x16]; add [rax-0x77], cl; ret; 
0x00000000105055: stc; dec dword ptr [rcx-0x77]; ret; 
0x0000000011f573: stc; enter 0xc, 0xf7; fsub st, dword ptr [rcx+rcx*4+0x2]; mov rax, 0xffffffffffffffff; ret; 
0x0000000009e553: stc; fst dword ptr [rax+rax], st; call qword ptr [rax]; 
0x000000001586a3: stc; jae short 0x00000000001586a3; jmp qword ptr [rsi+0xf]; 
0x00000000166acc: stc; jb short 0x0000000000166ad7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000166b7c: stc; jb short 0x0000000000166b87; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001694ac: stc; jb short 0x00000000001694b7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016955c: stc; jb short 0x0000000000169567; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001850b2: stc; je short 0x0000000000185076; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000186752: stc; je short 0x0000000000186716; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000082fbf: stc; jmp qword ptr [rsi+0x2e]; 
0x000000000834f8: stc; jmp qword ptr [rsi+0xf]; 
0x0000000008d29c: stc; jmp qword ptr [rsi-0x70]; 
0x000000000a894b: stc; jne short 0x00000000000a8928; ret; 
0x00000000145bf3: stc; jrcxz 0x0000000000145bf5; jmp qword ptr [rsi+0xf]; 
0x0000000018ab6f: stc; lea rax, [rdi+rdx]; vzeroupper; ret; 
0x000000001685a8: stc; mov [rdi-0x4], ecx; ret; 
0x000000001890b7: stc; mov [rdi], rcx; mov [rdi+rdx-0x7], r9; vzeroupper; ret; 
0x00000000100497: stc; mov dword ptr [rsi], 0x0; movups [rsi+0x8], xmm0; ret; 
0x00000000120473: stc; mov ecx, 0xd8f7000c; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x000000001685a2: stc; mov ecx, [rsi-0x4]; mov [rdi-0x7], edx; mov [rdi-0x4], ecx; ret; 
0x00000000131d40: stc; mov edi, [rsp+0x38]; mov r8, rbx; mov rdx, rbp; call qword ptr [rsp+0x60]; 
0x00000000130cbe: stc; mov rcx, [rsp+0x38]; mov esi, r14d; mov rdi, r13; call qword ptr [rsp+0x50]; 
0x000000000d833d: stc; movsxd rdx, [r9+rdi*4]; add rdx, r9; notrack jmp rdx; 
0x00000000080eb4: stc; notrack jmp rcx; 
0x00000000165357: stc; or [rax], eax; add [rbp-0x77], cl; ret far; 
0x000000000bc87c: stc; or al, 0x0; lea rax, [rip+0x11b79]; cmove rax, rdx; ret; 
0x0000000011c51c: stc; or al, 0x0; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000140e94: stc; or al, [rax]; syscall; 
0x0000000014231a: stc; out 0xa, al; add [rcx], al; pop rbp; ret; 
0x00000000056555: stc; push qword ptr [rbp-0x11]; mov rax, rdx; ret; 
0x00000000122a1e: stc; shr eax, cl; and eax, 0x1; ret; 
0x0000000008328f: stc; stc; jmp qword ptr [rsi+0x2e]; 
0x000000000babc7: stc; str [r11+0x63]; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000ec431: stc; sub eax, 0x47c6e875; or [rsi], dl; mov eax, 0x1; ret; 
0x00000000043b17: stc; sub ecx, 0xffffff80; shr ecx, 0x3; rep stosq [rdi]; ret; 
0x0000000018fe98: stc; vmovups [rdi-0x200], zmm15; ret; 
0x000000001890bf: stc; vzeroupper; ret; 
0x00000000118a73: stc; xor ecx, [rip+0x64d8f700]; mov [rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000ddbbb: std; adc [rax], al; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000df553: std; adc [rax], al; syscall; 
0x000000000e4faf: std; add [rax], al; mov eax, 0x7f; cmove rax, rdx; ret; 
0x000000000dd012: std; add al, [rax]; add [rax], al; syscall; 
0x0000000007d0da: std; add cl, [rcx+rcx*4-0x16]; call qword ptr [rax+0x38]; 
0x0000000011b431: std; add eax, 0x894c0000; and al, 0x8; mov rdi, [r8]; call rbx; 
0x00000000045916: std; add r15, r12; call rax; 
0x0000000012e81c: std; call qword ptr [rax-0x18]; 
0x000000001512fd: std; call qword ptr [rax-0x5e1f00d]; 
0x0000000015fcce: std; cld; jmp qword ptr [rsi+0x2e]; 
0x0000000013f5e4: std; cmc; dec dword ptr [rax-0x77]; ret; 
0x00000000052a85: std; dec dword ptr [rax-0x77]; ret; 
0x00000000047211: std; dec dword ptr [rax-0x77]; sub [rax-0x77], cl; ret; 
0x000000000464b8: std; dec dword ptr [rcx+rcx*4+0x65]; mov eax, 0xfffdd4e9; jmp qword ptr [rbx+rcx*4+0x4]; 
0x00000000041d61: std; fstp st(1), st; ret; 
0x0000000010ce18: std; inc dword ptr [rbx-0x307c0036]; dec dword ptr [rcx+0x75b8c6]; add [rax], al; syscall; 
0x0000000010ce41: std; inc dword ptr [rbx-0x307c0036]; dec dword ptr [rcx+0x77b8c6]; add [rax], al; syscall; 
0x0000000016658c: std; jb short 0x0000000000166597; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016663c: std; jb short 0x0000000000166647; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000168f6c: std; jb short 0x0000000000168f77; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016901c: std; jb short 0x0000000000169027; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000002fddc: std; je short 0x000000000002fdf8; pop rbx; ret; 
0x0000000019067e: std; jg short 0x00000000001906cb; jmp qword ptr [rdx-0x2f]; 
0x00000000034107: std; jl short 0x0000000000034125; add [rax+0x63], cl; jmp qword ptr [rax+rcx*2-0x75]; 
0x00000000047302: std; jmp qword ptr [rax+rcx*2-0x75]; 
0x00000000046981: std; jmp qword ptr [rbx+rcx*4+0x4]; 
0x000000001358a4: std; jmp qword ptr [rcx+rax*2-0x39]; 
0x00000000135efb: std; jmp qword ptr [rcx+rax*2-0x75]; 
0x00000000151664: std; jmp qword ptr [rsi+0x2e]; 
0x00000000058390: std; jmp qword ptr [rsi+0x66]; 
0x00000000049be8: std; jmp qword ptr [rsi+0xf]; 
0x0000000012f40c: std; jmp qword ptr [rsi-0x70]; 
0x0000000015d46b: std; jmp qword ptr [rsi-0x70]; 
0x00000000100dc6: std; jmp qword ptr [rsp+rax*2-0x77]; 
0x0000000018ab4b: std; lea rax, [rdi+rdx]; vzeroupper; ret; 
0x00000000075e26: std; loop 0x0000000000075e28; jmp qword ptr [rsi+0xf]; 
0x00000000094dc2: std; mov [rdi+0x8], eax; xor eax, eax; ret; 
0x0000000018ab47: std; mov [rdi+rdx-0x3], ecx; lea rax, [rdi+rdx]; vzeroupper; ret; 
0x000000001890a7: std; mov [rdi+rdx-0x3], ecx; vzeroupper; ret; 
0x00000000167dcb: std; mov [rdi-0x2], cx; ret; 
0x00000000167dc3: std; mov cx, [rsi-0x2]; mov [rdi-0x3], dx; mov [rdi-0x2], cx; ret; 
0x0000000010eb17: std; mov rdi, rbp; mov eax, 0x4f; syscall; 
0x000000001300c7: std; or eax, [rax]; syscall; 
0x000000000bbb8c: std; rep movsb [rdi], [rsi]; cld; ret; 
0x00000000144d1f: std; ret far; 
0x000000000240c3: std; sbb [rax], al; mov rsi, [rax]; xor eax, eax; call qword ptr [rdx+0x1d0]; 
0x00000000052aff: std; std; dec dword ptr [rax-0x77]; ret; 
0x00000000031fab: std; test rax, rax; je short 0x0000000000031fb3; call rax; 
0x00000000097898: std; test rdi, rdi; js 0x0000000000097a1c; mov rax, [rip+0x154517]; call qword ptr [rax]; 
0x000000001905f4: std; vmovdqu64 [r11], zmm4; vzeroupper; ret; 
0x000000001904de: std; vmovdqu64 [rdi+rdx-0x100], zmm7; vzeroupper; ret; 
0x0000000018fbc8: std; vmovups [r9-0x80], zmm14; vmovups [r9-0x40], zmm15; ret; 
0x0000000018f98e: std; vmovups [r9-0x80], zmm6; vmovups [r9-0x40], zmm7; ret; 
0x000000001900b6: std; vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x000000001890ab: std; vzeroupper; ret; 
0x00000000183ba3: std; xlat [rbx]; ret far; 
0x000000001846f1: std; xlat [rbx]; ret; 
0x0000000018461e: std; xlat [rbx]; rol dword ptr [rbp+0x311b75c0], 0xc0; vzeroupper; ret; 
0x0000000016e4c6: sti; add al, 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016e4c7: sti; add al, 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000f0b31: sti; add al, [rax]; add [rbx-0x72bed3a7], cl; add [rcx], edi; ret; 
0x0000000007c365: sti; add al, [rax]; add [rcx-0x8ef63], cl; dec dword ptr [rax-0x77]; ret far; 
0x0000000018d94d: sti; add al, [rax]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x000000000d13ee: sti; add al, [rcx]; ret; 
0x000000000e875c: sti; add cl, [rax-0x7d]; ret; 
0x0000000017c861: sti; add eax, [rax]; add [rax-0x7cb7fec8], al; fdivr st, st(7); ret; 
0x000000000c977d: sti; add ecx, [rdi]; xchg bh, cl; add eax, 0x89490000; ret; 
0x000000000c94a1: sti; add ecx, [rdi]; xchg dl, bh; add eax, 0x89490000; ret; 
0x0000000004466d: sti; add r15, [rsp]; mov rsi, r15; call r14; 
0x0000000007485d: sti; call qword ptr [rax-0x3f7c3977]; 
0x000000000d33d8: sti; dec dword ptr [rax+0x39]; ret; 
0x0000000015c787: sti; dec dword ptr [rax-0x77]; ret; 
0x000000000e2ea1: sti; dec dword ptr [rbx+0x480c2444]; add esp, 0x18; ret; 
0x000000000e2d7b: sti; dec dword ptr [rbx+0x480c2444]; add esp, 0x28; ret; 
0x000000000e2cc1: sti; dec dword ptr [rbx+0x48102444]; add esp, 0x28; ret; 
0x0000000015be04: sti; dec dword ptr [rbx-0x17b7b]; jmp qword ptr [rcx+rcx*4+0x3]; 
0x000000000e2e87: sti; dec dword ptr [rcx+0x22b8c7]; add [rax], al; syscall; 
0x0000000016682c: sti; jb short 0x0000000000166837; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001668dc: sti; jb short 0x00000000001668e7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016920c: sti; jb short 0x0000000000169217; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001692bc: sti; jb short 0x00000000001692c7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000009c091: sti; jmp far fword ptr [rcx]; 
0x0000000009c0a1: sti; jmp far fword ptr [rdi-0x78f10000]; 
0x0000000009443e: sti; jmp qword ptr [rsi+0x66]; 
0x0000000009443f: sti; jmp qword ptr [rsi+0x66]; 
0x0000000007573c: sti; jmp qword ptr [rsi-0x70]; 
0x0000000015424d: sti; jmp qword ptr [rsi-0x7d]; 
0x000000001681a8: sti; mov [rdi-0x4], ecx; ret; 
0x000000001681a2: sti; mov ecx, [rsi-0x4]; mov [rdi-0x5], edx; mov [rdi-0x4], ecx; ret; 
0x0000000011ef52: sti; mov rdi, rcx; sub rsp, 0x8; call rsi; 
0x00000000030ec9: sti; mov rdx, [rax+r15*8]; test rdx, rdx; je short 0x0000000000030ed5; call rdx; 
0x0000000013483d: sti; or [rcx+0xf], eax; ret far; 
0x000000000bca2d: sti; or al, 0x0; lea rax, [rip+0x12699]; cmove rax, rdx; ret; 
0x00000000033935: sti; or al, 0x74; cmp ecx, [rax-0x7d]; ret; 
0x00000000140bdb: sti; or al, [rax]; test eax, eax; je short 0x0000000000140be8; ret; 
0x0000000010c2b4: sti; or eax, 0x64d8f700; mov [rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000004286c: sti; push rax; ret; 
0x0000000005eb43: sti; sbb [rax], al; syscall; 
0x000000000e9ef2: sti; sbb cl, al; clc; sbb [rcx], bh; ret; 
0x00000000082fbe: sti; stc; jmp qword ptr [rsi+0x2e]; 
0x000000000874de: sti; test byte ptr [rdi], 0x2; jne short 0x0000000000087558; mov rax, [rax+0xe0]; call qword ptr [rax+0x68]; 
0x0000000018fe89: sti; vmovups [rdi-0x180], zmm13; vmovups [rdi-0x1c0], zmm14; vmovups [rdi-0x200], zmm15; ret; 
0x00000000144cfc: stosb [rdi]; add [rax], eax; call qword ptr [rsp+0x10]; 
0x000000000e547a: stosb [rdi]; add rax, rdx; notrack jmp rax; 
0x000000000dd9d2: stosb [rdi]; call qword ptr [rax]; 
0x0000000009da73: stosb [rdi]; jl short 0x000000000009da87; add al, ch; test [rcx-0x4], al; jmp qword ptr [rbx+rcx*4+0x4]; 
0x00000000128812: stosb [rdi]; mov bh, 0xf0; jmp qword ptr [rsi+0x2e]; 
0x000000000bbf88: stosb [rdi]; mov rax, rdx; ret; 
0x00000000077082: stosb [rdi]; sbb al, [rax]; add [rcx-0x80], al; call qword ptr [rbx+0xf]; 
0x00000000144b76: stosd [rdi]; add [rax], eax; xor edi, edi; call qword ptr [rsp+0x20]; 
0x0000000009e151: stosd [rdi]; cmp bh, ah; jmp qword ptr [rbx+rcx*4+0x4]; 
0x000000000b1f34: stosd [rdi]; fimul st, dword ptr [rax+0xf]; mov esp, 0xd00148d2; sub rax, rdi; ret; 
0x0000000013c604: stosd [rdi]; mov [r8+0x1], dl; mov rax, r8; mov byte ptr [r8+0x2], 0x0; ret; 
0x000000001500a7: stosd [rdi]; mov rax, [rsp+0x10]; mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x18]; 
0x00000000127953: stosd [rdi]; out dx, eax; dec dword ptr [rax-0x77]; ret; 
0x00000000098a06: stosd [rdi]; pop rbp; ret; 
0x00000000043b20: stosd [rdi]; ret; 
0x00000000041284: stosd [rdi]; sbb al, [rax]; mov dword ptr fs:[rax], 0x2a; mov rax, r11; ret; 
0x000000000c1861: stosd [rdi]; stc; dec dword ptr [rax-0x7d]; ret; 
0x0000000013c603: stosq [rdi]; mov [r8+0x1], dl; mov rax, r8; mov byte ptr [r8+0x2], 0x0; ret; 
0x00000000098a05: stosq [rdi]; pop rbp; ret; 
0x00000000043b1f: stosq [rdi]; ret; 
0x000000000b8c97: str [ebx+0x63]; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8cc6: str [ebx+0x63]; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8b82: str [ecx+0x63]; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000babc8: str [r11+0x63]; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000bb3ed: str [r11+0x63]; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000ba9b7: str [r9+0x63]; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000bc0d7: str [rax+0x63]; add al, 0xbe; add rax, rsi; notrack jmp rax; 
0x000000000a05fd: str [rax-0x73]; adc eax, 0xf028a; cmove rax, rdx; ret; 
0x000000000b75b8: str [rbx+0x63]; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8d08: str [rbx+0x63]; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000bab57: str [rbx+0x63]; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000baa4b: str [rcx+0x63]; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6d37: str [rcx+0x63]; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000011039b: sub [r10+0x1], r15b; call qword ptr [rbp+0x40]; 
0x000000001106fb: sub [r10+0x2], r15b; call qword ptr [rbp+0x40]; 
0x0000000011067b: sub [r10+0x5], r15b; call qword ptr [rbp+0x40]; 
0x000000000cf046: sub [r11], r15b; sub [rbp+0x63], r14b; ret; 
0x000000000896fe: sub [r13-0x7b], r8b; shl byte ptr [rbx+rbp*2+0x49], 0x2b; and [r8+0x1], r9b; ret; 
0x00000000073d62: sub [r15+rcx-0x4a], r8b; ret; 
0x00000000157825: sub [r8+r15*4], r8b; add [rax], eax; add [rax], al; ret; 
0x00000000157402: sub [r8-0x77], r9b; ja short 0x0000000000157420; mov eax, r8d; ret; 
0x000000000bda42: sub [r8-0x7b], cl; ror byte ptr [rdi], 0x84; ret; 
0x00000000157437: sub [r9+r8-0x3a], r9b; mov [rdi+0x18], rsi; mov rax, r8; ret; 
0x0000000010ff80: sub [r9+r9*4-0xa], cl; mov edx, [rdx+rax]; call qword ptr [rbx+0x40]; 
0x00000000157555: sub [r9], r15b; shl byte ptr [rbx+0xd], 0x1; xor r8d, r8d; mov eax, r8d; ret; 
0x0000000011f6b2: sub [rax+0x113], bh; mov rsi, [rsp+0x10]; mov edi, [rsp+0x8]; syscall; 
0x00000000113062: sub [rax+0x146], bh; mov rsi, [rsp+0x10]; mov edi, [rsp+0x8]; syscall; 
0x000000000ec875: sub [rax+0x1], bh; pop rbx; pop rbp; pop r12; ret; 
0x00000000157836: sub [rax+0x1], bh; ret; 
0x00000000036394: sub [rax+0x1b], bh; add [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x0000000004a9d2: sub [rax+0x39], cl; ret; 
0x000000000ecaf8: sub [rax+0x63], cl; ret; 
0x000000000e4f6e: sub [rax+0x7fffffff], edi; cmp r8, 0x58465342; jne short 0x00000000000e4f80; ret; 
0x000000000ea44d: sub [rax+rbp+0xf], esi; mov dh, 0x43; add [rax-0x7d], ecx; ret; 
0x00000000157826: sub [rax+rdi*4], al; add [rax], eax; add [rax], al; ret; 
0x0000000008df5e: sub [rax-0x3f76bbfe], cl; ret; 
0x0000000008df5d: sub [rax-0x3f76bbfe], r9b; ret; 
0x0000000002441b: sub [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; jmp rax; 
0x00000000110398: sub [rax-0x73], cl; sub [r10+0x1], r15b; call qword ptr [rbp+0x40]; 
0x000000001106f8: sub [rax-0x73], cl; sub [r10+0x2], r15b; call qword ptr [rbp+0x40]; 
0x00000000110678: sub [rax-0x73], cl; sub [r10+0x5], r15b; call qword ptr [rbp+0x40]; 
0x00000000080ea6: sub [rax-0x73], ecx; cmp eax, 0x12db5a; movsxd rcx, [rdi+rcx*4]; add rcx, rdi; notrack jmp rcx; 
0x000000000df02e: sub [rax-0x75], cl; and al, 0x18; call rax; 
0x00000000146d9d: sub [rax-0x75], cl; and al, 0x20; mov rdx, [rsp+0x18]; mov rsi, [rsp+0x10]; call qword ptr [rax]; 
0x0000000002cc32: sub [rax-0x75], cl; je short 0x000000000002cc5b; push rax; mov rdi, [rsp+0x48]; call r13; 
0x0000000002e392: sub [rax-0x75], cl; je short 0x000000000002e3bb; push rax; mov rdi, [rsp+0x48]; call r13; 
0x0000000011a85f: sub [rax-0x75], cl; jge short 0x000000000011a864; call rbx; 
0x00000000157403: sub [rax-0x77], cl; ja short 0x0000000000157420; mov eax, r8d; ret; 
0x00000000047215: sub [rax-0x77], cl; ret; 
0x00000000086433: sub [rax-0x78], al; cmp [rcx+rcx*4-0x38], al; ret; 
0x000000000bda43: sub [rax-0x7b], cl; ror byte ptr [rdi], 0x84; ret; 
0x00000000043354: sub [rax], al; add [rax], al; jne 0x00000000000433f6; add rsp, 0x98; ret; 
0x000000000578ee: sub [rax], al; add [rax], al; jne 0x0000000000057975; leave; ret; 
0x0000000009d62b: sub [rax], al; add [rax], al; jne 0x000000000009d6e2; add rsp, 0x18; ret; 
0x0000000010defc: sub [rax], al; add [rax], al; jne 0x000000000010dfb9; add rsp, 0x78; ret; 
0x0000000010e4f2: sub [rax], al; add [rax], al; jne 0x000000000010e595; add rsp, 0x68; ret; 
0x0000000012d100: sub [rax], al; add [rax], al; jne 0x000000000012d1dd; leave; ret; 
0x00000000042bc1: sub [rax], al; add [rax], al; jne short 0x0000000000042bcc; add rsp, 0x18; ret; 
0x00000000042f1b: sub [rax], al; add [rax], al; jne short 0x0000000000042f29; add rsp, 0x148; ret; 
0x000000000435f0: sub [rax], al; add [rax], al; jne short 0x0000000000043605; add rsp, 0x118; ret; 
0x00000000043673: sub [rax], al; add [rax], al; jne short 0x0000000000043688; add rsp, 0x118; ret; 
0x0000000004377e: sub [rax], al; add [rax], al; jne short 0x000000000004378c; add rsp, 0x98; ret; 
0x00000000043d1e: sub [rax], al; add [rax], al; jne short 0x0000000000043d2c; add rsp, 0x148; ret; 
0x0000000004444e: sub [rax], al; add [rax], al; jne short 0x000000000004445c; add rsp, 0xa8; ret; 
0x0000000004746f: sub [rax], al; add [rax], al; jne short 0x000000000004747a; add rsp, 0x28; ret; 
0x0000000004755f: sub [rax], al; add [rax], al; jne short 0x000000000004756a; add rsp, 0x28; ret; 
0x00000000047de9: sub [rax], al; add [rax], al; jne short 0x0000000000047df4; add rsp, 0x18; ret; 
0x00000000047e36: sub [rax], al; add [rax], al; jne short 0x0000000000047e41; add rsp, 0x18; ret; 
0x00000000047e88: sub [rax], al; add [rax], al; jne short 0x0000000000047e93; add rsp, 0x18; ret; 
0x00000000047ed5: sub [rax], al; add [rax], al; jne short 0x0000000000047ee0; add rsp, 0x18; ret; 
0x00000000047f28: sub [rax], al; add [rax], al; jne short 0x0000000000047f33; add rsp, 0x18; ret; 
0x00000000047f75: sub [rax], al; add [rax], al; jne short 0x0000000000047f80; add rsp, 0x18; ret; 
0x00000000052c31: sub [rax], al; add [rax], al; jne short 0x0000000000052c3f; add rsp, 0xd8; ret; 
0x0000000005417b: sub [rax], al; add [rax], al; jne short 0x0000000000054189; add rsp, 0xd8; ret; 
0x0000000005b8a1: sub [rax], al; add [rax], al; jne short 0x000000000005b8c5; add rsp, 0x38; ret; 
0x00000000061ca4: sub [rax], al; add [rax], al; jne short 0x0000000000061cb2; add rsp, 0xd8; ret; 
0x00000000061d79: sub [rax], al; add [rax], al; jne short 0x0000000000061d87; add rsp, 0xd8; ret; 
0x00000000061e30: sub [rax], al; add [rax], al; jne short 0x0000000000061e3e; add rsp, 0xd8; ret; 
0x00000000061f02: sub [rax], al; add [rax], al; jne short 0x0000000000061f10; add rsp, 0xd8; ret; 
0x00000000061fc4: sub [rax], al; add [rax], al; jne short 0x0000000000061fd2; add rsp, 0xd8; ret; 
0x00000000062084: sub [rax], al; add [rax], al; jne short 0x0000000000062092; add rsp, 0xd8; ret; 
0x00000000062172: sub [rax], al; add [rax], al; jne short 0x0000000000062180; add rsp, 0xd8; ret; 
0x00000000062249: sub [rax], al; add [rax], al; jne short 0x0000000000062257; add rsp, 0xd8; ret; 
0x00000000062e13: sub [rax], al; add [rax], al; jne short 0x0000000000062e27; add rsp, 0x18; ret; 
0x0000000006319c: sub [rax], al; add [rax], al; jne short 0x00000000000631aa; add rsp, 0xd8; ret; 
0x00000000063277: sub [rax], al; add [rax], al; jne short 0x0000000000063285; add rsp, 0xd8; ret; 
0x000000000864f4: sub [rax], al; add [rax], al; jne short 0x0000000000086502; add rsp, 0xd8; ret; 
0x000000000865b0: sub [rax], al; add [rax], al; jne short 0x00000000000865be; add rsp, 0xd8; ret; 
0x000000000866a9: sub [rax], al; add [rax], al; jne short 0x00000000000866b7; add rsp, 0xd8; ret; 
0x00000000086779: sub [rax], al; add [rax], al; jne short 0x0000000000086787; add rsp, 0xd8; ret; 
0x00000000086832: sub [rax], al; add [rax], al; jne short 0x0000000000086840; add rsp, 0xd8; ret; 
0x0000000008dc04: sub [rax], al; add [rax], al; jne short 0x000000000008dc1b; add rsp, 0x48; ret; 
0x000000000cabbc: sub [rax], al; add [rax], al; jne short 0x00000000000cabca; add rsp, 0xd8; ret; 
0x000000000cac97: sub [rax], al; add [rax], al; jne short 0x00000000000caca5; add rsp, 0xd8; ret; 
0x000000000d021f: sub [rax], al; add [rax], al; jne short 0x00000000000d0239; add rsp, 0x28; ret; 
0x000000000d1065: sub [rax], al; add [rax], al; jne short 0x00000000000d1094; add rsp, 0x28; ret; 
0x000000000da6e8: sub [rax], al; add [rax], al; jne short 0x00000000000da6f3; add rsp, 0x18; ret; 
0x000000000dcfb8: sub [rax], al; add [rax], al; jne short 0x00000000000dcfc3; add rsp, 0x18; ret; 
0x000000000df43b: sub [rax], al; add [rax], al; jne short 0x00000000000df493; add rsp, 0x38; ret; 
0x000000000e41bb: sub [rax], al; add [rax], al; jne short 0x00000000000e4213; add rsp, 0x38; ret; 
0x000000000e425b: sub [rax], al; add [rax], al; jne short 0x00000000000e42b3; add rsp, 0x38; ret; 
0x000000000e452b: sub [rax], al; add [rax], al; jne short 0x00000000000e4593; add rsp, 0x38; ret; 
0x000000000e45db: sub [rax], al; add [rax], al; jne short 0x00000000000e4643; add rsp, 0x38; ret; 
0x000000001029cd: sub [rax], al; add [rax], al; jne short 0x0000000000102a26; add rsp, 0x38; ret; 
0x0000000010d1a7: sub [rax], al; add [rax], al; jne short 0x000000000010d1c1; add rsp, 0x28; ret; 
0x0000000010d46c: sub [rax], al; add [rax], al; jne short 0x000000000010d477; add rsp, 0x18; ret; 
0x0000000010d4be: sub [rax], al; add [rax], al; jne short 0x000000000010d4c9; add rsp, 0x18; ret; 
0x000000001133f7: sub [rax], al; add [rax], al; jne short 0x0000000000113443; add rsp, 0x68; ret; 
0x00000000113486: sub [rax], al; add [rax], al; jne short 0x00000000001134d3; add rsp, 0x18; ret; 
0x0000000011353e: sub [rax], al; add [rax], al; jne short 0x000000000011358b; add rsp, 0x58; ret; 
0x000000001135dc: sub [rax], al; add [rax], al; jne short 0x000000000011362b; add rsp, 0x58; ret; 
0x00000000113b29: sub [rax], al; add [rax], al; jne short 0x0000000000113b3b; add rsp, 0x18; ret; 
0x000000001149bb: sub [rax], al; add [rax], al; jne short 0x0000000000114a1b; add rsp, 0x38; ret; 
0x00000000114a5b: sub [rax], al; add [rax], al; jne short 0x0000000000114abb; add rsp, 0x38; ret; 
0x00000000114b10: sub [rax], al; add [rax], al; jne short 0x0000000000114b8b; add rsp, 0x38; ret; 
0x00000000114be0: sub [rax], al; add [rax], al; jne short 0x0000000000114c5b; add rsp, 0x38; ret; 
0x00000000114cda: sub [rax], al; add [rax], al; jne short 0x0000000000114ce5; add rsp, 0x28; ret; 
0x00000000115820: sub [rax], al; add [rax], al; jne short 0x0000000000115837; add rsp, 0x58; ret; 
0x00000000115899: sub [rax], al; add [rax], al; jne short 0x00000000001158a4; add rsp, 0x28; ret; 
0x00000000115970: sub [rax], al; add [rax], al; jne short 0x00000000001159ad; add rsp, 0x68; ret; 
0x00000000116b94: sub [rax], al; add [rax], al; jne short 0x0000000000116bd5; add rsp, 0x38; ret; 
0x00000000116c63: sub [rax], al; add [rax], al; jne short 0x0000000000116ca5; add rsp, 0x38; ret; 
0x000000001182c4: sub [rax], al; add [rax], al; jne short 0x00000000001182d2; add rsp, 0xd8; ret; 
0x0000000011839d: sub [rax], al; add [rax], al; jne short 0x00000000001183ab; add rsp, 0xd8; ret; 
0x000000001196e5: sub [rax], al; add [rax], al; jne short 0x00000000001196f0; add rsp, 0x18; ret; 
0x0000000011bd59: sub [rax], al; add [rax], al; jne short 0x000000000011bd67; add rsp, 0xd8; ret; 
0x0000000011be19: sub [rax], al; add [rax], al; jne short 0x000000000011be27; add rsp, 0xd8; ret; 
0x0000000011bff7: sub [rax], al; add [rax], al; jne short 0x000000000011c005; add rsp, 0x418; ret; 
0x0000000011c260: sub [rax], al; add [rax], al; jne short 0x000000000011c26e; add rsp, 0xd8; ret; 
0x0000000011c4cd: sub [rax], al; add [rax], al; jne short 0x000000000011c4db; add rsp, 0xd8; ret; 
0x0000000011f0e5: sub [rax], al; add [rax], al; jne short 0x000000000011f103; add rsp, 0x68; ret; 
0x00000000120aea: sub [rax], al; add [rax], al; jne short 0x0000000000120af5; add rsp, 0x18; ret; 
0x0000000012112f: sub [rax], al; add [rax], al; jne short 0x000000000012117b; add rsp, 0x58; ret; 
0x00000000129b7b: sub [rax], al; add [rax], al; jne short 0x0000000000129b89; add rsp, 0xd8; ret; 
0x0000000012b8a4: sub [rax], al; add [rax], al; jne short 0x000000000012b8b2; add rsp, 0xd8; ret; 
0x0000000012de85: sub [rax], al; add [rax], al; jne short 0x000000000012de98; add rsp, 0xd8; ret; 
0x0000000012df7b: sub [rax], al; add [rax], al; jne short 0x000000000012df95; add rsp, 0xd8; ret; 
0x0000000012e095: sub [rax], al; add [rax], al; jne short 0x000000000012e0a3; add rsp, 0xd8; ret; 
0x0000000012e15d: sub [rax], al; add [rax], al; jne short 0x000000000012e16b; add rsp, 0xd8; ret; 
0x0000000012ef9b: sub [rax], al; add [rax], al; jne short 0x000000000012efb5; add rsp, 0xd8; ret; 
0x0000000012f0b5: sub [rax], al; add [rax], al; jne short 0x000000000012f0c3; add rsp, 0xd8; ret; 
0x0000000012f17d: sub [rax], al; add [rax], al; jne short 0x000000000012f18b; add rsp, 0xd8; ret; 
0x0000000012f5c4: sub [rax], al; add [rax], al; jne short 0x000000000012f5d5; add rsp, 0x28; ret; 
0x0000000012f624: sub [rax], al; add [rax], al; jne short 0x000000000012f635; add rsp, 0x28; ret; 
0x0000000012f6ed: sub [rax], al; add [rax], al; jne short 0x000000000012f6fb; add rsp, 0xd8; ret; 
0x0000000012f7cd: sub [rax], al; add [rax], al; jne short 0x000000000012f7db; add rsp, 0xd8; ret; 
0x0000000012f8ad: sub [rax], al; add [rax], al; jne short 0x000000000012f8bb; add rsp, 0xd8; ret; 
0x000000001365fb: sub [rax], al; add [rax], al; jne short 0x0000000000136629; add rsp, 0x38; ret; 
0x00000000136698: sub [rax], al; add [rax], al; jne short 0x00000000001366a3; add rsp, 0x38; ret; 
0x00000000136705: sub [rax], al; add [rax], al; jne short 0x0000000000136710; add rsp, 0x28; ret; 
0x0000000013c71e: sub [rax], al; add [rax], al; jne short 0x000000000013c730; add rsp, 0x18; ret; 
0x0000000013e1aa: sub [rax], al; add [rax], al; jne short 0x000000000013e1b5; add rsp, 0x18; ret; 
0x0000000013e1fd: sub [rax], al; add [rax], al; jne short 0x000000000013e208; add rsp, 0x28; ret; 
0x0000000013ea8c: sub [rax], al; add [rax], al; jne short 0x000000000013ea97; add rsp, 0x18; ret; 
0x00000000153901: sub [rax], al; add [rax], al; jne short 0x000000000015390c; add rsp, 0x78; ret; 
0x00000000153977: sub [rax], al; add [rax], al; jne short 0x0000000000153982; add rsp, 0x78; ret; 
0x000000001539e7: sub [rax], al; add [rax], al; jne short 0x00000000001539f2; add rsp, 0x78; ret; 
0x00000000153a57: sub [rax], al; add [rax], al; jne short 0x0000000000153a62; add rsp, 0x78; ret; 
0x00000000153ab8: sub [rax], al; add [rax], al; jne short 0x0000000000153ac3; add rsp, 0x78; ret; 
0x00000000153b1c: sub [rax], al; add [rax], al; jne short 0x0000000000153b27; add rsp, 0x78; ret; 
0x00000000153b87: sub [rax], al; add [rax], al; jne short 0x0000000000153b92; add rsp, 0x78; ret; 
0x00000000153c0a: sub [rax], al; add [rax], al; jne short 0x0000000000153c15; add rsp, 0x78; ret; 
0x0000000015413f: sub [rax], al; add [rax], al; jne short 0x0000000000154168; add rsp, 0x28; ret; 
0x00000000155bb2: sub [rax], al; add [rax], al; jne short 0x0000000000155bbd; add rsp, 0x48; ret; 
0x0000000015c9de: sub [rax], al; add [rax], al; jne short 0x000000000015ca14; add rsp, 0x18; ret; 
0x0000000015f930: sub [rax], al; add [rax], al; jne short 0x000000000015f96e; add rsp, 0x58; ret; 
0x0000000015fa27: sub [rax], al; add [rax], al; jne short 0x000000000015fa74; add rsp, 0x68; ret; 
0x0000000015fbc0: sub [rax], al; add [rax], al; jne short 0x000000000015fc14; add rsp, 0x68; ret; 
0x0000000015fc89: sub [rax], al; add [rax], al; jne short 0x000000000015fccc; add rsp, 0x38; ret; 
0x00000000160d1c: sub [rax], al; add [rax], al; jne short 0x0000000000160d27; add rsp, 0x28; ret; 
0x0000000015f19e: sub [rax], al; add [rax], al; mov [rsp+0x68], rax; xor eax, eax; call qword ptr [r12+0xf08]; 
0x00000000112fd8: sub [rax], al; add [rax], al; syscall; 
0x00000000127b09: sub [rax], al; mov eax, 0x0; cmovns rax, [rbx+0x28]; pop rbx; ret; 
0x0000000007d769: sub [rax], eax; add [rax-0x7d], cl; ret; 
0x0000000013b43a: sub [rax], eax; add [rax], al; mov [rdi+0xc], edx; mov [rsi], rdi; ret; 
0x000000001207d5: sub [rax], eax; add [rax], al; syscall; 
0x000000000d1df3: sub [rax], eax; add rsp, 0x10; pop rbp; ret; 
0x000000000d2019: sub [rax], eax; add rsp, 0x8; pop rbp; pop r12; ret; 
0x000000000ff237: sub [rbp+0x31], al; sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; syscall; 
0x00000000146f44: sub [rbp+0x41], bl; pop rsp; pop r13; pop r14; ret; 
0x000000000dd7c4: sub [rbp+0x5b2b74c0], al; pop rbp; pop r12; ret; 
0x000000000cf04a: sub [rbp+0x63], dh; ret; 
0x000000000cf049: sub [rbp+0x63], r14b; ret; 
0x00000000094e6b: sub [rbp+rdx], esi; ret; 
0x000000000896ff: sub [rbp-0x7b], al; shl byte ptr [rbx+rbp*2+0x49], 0x2b; and [r8+0x1], r9b; ret; 
0x000000000860ec: sub [rbx+0x11], dh; lea rsi, [rcx+0x4]; mov [rdx+0x20], rsi; mov [rcx], eax; ret; 
0x000000000860eb: sub [rbx+0x11], sil; lea rsi, [rcx+0x4]; mov [rdx+0x20], rsi; mov [rcx], eax; ret; 
0x00000000086293: sub [rbx+0x12], dh; lea rsi, [rcx+0x4]; mov [rdx+0x20], rsi; mov [rcx], eax; ret; 
0x00000000086292: sub [rbx+0x12], sil; lea rsi, [rcx+0x4]; mov [rdx+0x20], rsi; mov [rcx], eax; ret; 
0x00000000148216: sub [rbx+0x147401f8], eax; mov dword ptr [rsi], 0x10; mov qword ptr [rsi+0x8], 0x1; mov [rsi+0x10], rax; ret; 
0x000000001523e7: sub [rbx+0x41], bl; pop rsp; ret; 
0x00000000198966: sub [rbx+0x55e922d], eax; add [rcx], al; pop rbx; ret; 
0x00000000042705: sub [rbx+0x5d], bl; pop r12; pop r13; ret; 
0x00000000063a01: sub [rbx+0x5d], bl; pop r12; ret; 
0x0000000005b08f: sub [rbx+0x5d], bl; ret; 
0x0000000002f39d: sub [rbx+rcx*4+0x35], cl; ret; 
0x0000000015f728: sub [rbx-0x1b], dh; mov eax, 0x1; ret; 
0x0000000015f727: sub [rbx-0x1b], sil; mov eax, 0x1; ret; 
0x00000000113343: sub [rbx-0x2708fff3], ecx; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000cf047: sub [rbx], bh; sub [rbp+0x63], r14b; ret; 
0x000000001784e3: sub [rbx], eax; add [rax], al; ret; 
0x00000000157438: sub [rcx+rax-0x3a], cl; mov [rdi+0x18], rsi; mov rax, r8; ret; 
0x0000000014d1f2: sub [rcx+rcx*4-0x19], cl; call rcx; 
0x0000000009bd14: sub [rcx+rcx*4-0x19], cl; call rdx; 
0x000000000846ba: sub [rcx+rcx*4-0x1e], al; pop rbx; pop r12; jmp rax; 
0x00000000152bab: sub [rcx+rcx*4-0x20], al; pop rbp; pop r12; ret; 
0x0000000008abd0: sub [rcx+rcx*4-0x20], cl; pop rbp; pop r12; ret; 
0x0000000006275d: sub [rcx+rcx*4-0x20], cl; pop rbx; pop r12; ret; 
0x000000000818aa: sub [rcx+rcx*4-0x40], al; pop rbx; pop rbp; ret; 
0x000000001570e6: sub [rcx+rcx*4-0x40], eax; ret; 
0x0000000010ff81: sub [rcx+rcx*4-0xa], cl; mov edx, [rdx+rax]; call qword ptr [rbx+0x40]; 
0x000000000fe871: sub [rcx-0x1716fba8], cl; idiv edi; jmp qword ptr [rsi+0xf]; 
0x00000000042de4: sub [rcx-0x3b76b310], cl; mov rbp, r9; nop; jmp rdx; 
0x0000000002961b: sub [rcx-0x77], cl; ret; 
0x00000000148c95: sub [rcx], al; add [rax], al; mov rdi, r12; call qword ptr [rbx]; 
0x00000000114617: sub [rcx], al; add [rax], al; syscall; 
0x00000000157556: sub [rcx], bh; shl byte ptr [rbx+0xd], 0x1; xor r8d, r8d; mov eax, r8d; ret; 
0x00000000113a3d: sub [rcx], dh; ror byte ptr [rax-0x77], 0xe2; mov eax, 0x10; syscall; 
0x000000001663f8: sub [rdi+0x10], ebx; jb short 0x0000000000166406; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000166548: sub [rdi+0x10], ebx; jb short 0x0000000000166556; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000166698: sub [rdi+0x10], ebx; jb short 0x00000000001666a6; movaps [rdi], xmm4; notrack jmp r9; 
0x000000001667e8: sub [rdi+0x10], ebx; jb short 0x00000000001667f6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000166938: sub [rdi+0x10], ebx; jb short 0x0000000000166946; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000166a88: sub [rdi+0x10], ebx; jb short 0x0000000000166a96; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000166bd8: sub [rdi+0x10], ebx; jb short 0x0000000000166be6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000166d28: sub [rdi+0x10], ebx; jb short 0x0000000000166d36; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000166e78: sub [rdi+0x10], ebx; jb short 0x0000000000166e86; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000166fc8: sub [rdi+0x10], ebx; jb short 0x0000000000166fd6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000167118: sub [rdi+0x10], ebx; jb short 0x0000000000167126; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000167268: sub [rdi+0x10], ebx; jb short 0x0000000000167276; movaps [rdi], xmm4; notrack jmp r9; 
0x000000001673b8: sub [rdi+0x10], ebx; jb short 0x00000000001673c6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000167508: sub [rdi+0x10], ebx; jb short 0x0000000000167516; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000167658: sub [rdi+0x10], ebx; jb short 0x0000000000167666; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000168dd8: sub [rdi+0x10], ebx; jb short 0x0000000000168de6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000168f28: sub [rdi+0x10], ebx; jb short 0x0000000000168f36; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000169078: sub [rdi+0x10], ebx; jb short 0x0000000000169086; movaps [rdi], xmm4; notrack jmp r9; 
0x000000001691c8: sub [rdi+0x10], ebx; jb short 0x00000000001691d6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000169318: sub [rdi+0x10], ebx; jb short 0x0000000000169326; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000169468: sub [rdi+0x10], ebx; jb short 0x0000000000169476; movaps [rdi], xmm4; notrack jmp r9; 
0x000000001695b8: sub [rdi+0x10], ebx; jb short 0x00000000001695c6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000169708: sub [rdi+0x10], ebx; jb short 0x0000000000169716; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000169858: sub [rdi+0x10], ebx; jb short 0x0000000000169866; movaps [rdi], xmm4; notrack jmp r9; 
0x000000001699a8: sub [rdi+0x10], ebx; jb short 0x00000000001699b6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000169af8: sub [rdi+0x10], ebx; jb short 0x0000000000169b06; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000169c48: sub [rdi+0x10], ebx; jb short 0x0000000000169c56; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000169d98: sub [rdi+0x10], ebx; jb short 0x0000000000169da6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000169ee8: sub [rdi+0x10], ebx; jb short 0x0000000000169ef6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000016a038: sub [rdi+0x10], ebx; jb short 0x000000000016a046; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000080654: sub [rdi+0x29], esi; movzx eax, al; movsxd rax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x00000000080e0f: sub [rdi+0xe], esi; movsxd rax, [rdi+rax*4]; add rax, rdi; notrack jmp rax; 
0x000000000d4267: sub [rdi+rcx*4+0x2], bl; jbe short 0x00000000000d4270; ret; 
0x00000000073d63: sub [rdi+rcx-0x4a], al; ret; 
0x00000000166354: sub [rdi-0x10], ebp; notrack jmp r9; 
0x0000000011534a: sub [rdi-0x11e2153], bh; mov eax, 0xa9; syscall; 
0x000000001491c4: sub [rdi-0x17], dh; mov [rdx+0x20], rsi; ret; 
0x00000000166350: sub [rdi-0x20], esp; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000016634a: sub [rdi-0x30], ebx; jb short 0x000000000016635d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000016649a: sub [rdi-0x30], ebx; jb short 0x00000000001664ad; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x000000001665ea: sub [rdi-0x30], ebx; jb short 0x00000000001665fd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000016673a: sub [rdi-0x30], ebx; jb short 0x000000000016674d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000016688a: sub [rdi-0x30], ebx; jb short 0x000000000016689d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x000000001669da: sub [rdi-0x30], ebx; jb short 0x00000000001669ed; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000166b2a: sub [rdi-0x30], ebx; jb short 0x0000000000166b3d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000166c78: sub [rdi-0x30], ebx; jb short 0x0000000000166c90; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000166dca: sub [rdi-0x30], ebx; jb short 0x0000000000166ddd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000166f1a: sub [rdi-0x30], ebx; jb short 0x0000000000166f2d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000016706a: sub [rdi-0x30], ebx; jb short 0x000000000016707d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x000000001671ba: sub [rdi-0x30], ebx; jb short 0x00000000001671cd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000016730a: sub [rdi-0x30], ebx; jb short 0x000000000016731d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000016745a: sub [rdi-0x30], ebx; jb short 0x000000000016746d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x000000001675aa: sub [rdi-0x30], ebx; jb short 0x00000000001675bd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000168d2a: sub [rdi-0x30], ebx; jb short 0x0000000000168d3d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000168e7a: sub [rdi-0x30], ebx; jb short 0x0000000000168e8d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000168fca: sub [rdi-0x30], ebx; jb short 0x0000000000168fdd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000016911a: sub [rdi-0x30], ebx; jb short 0x000000000016912d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000016926a: sub [rdi-0x30], ebx; jb short 0x000000000016927d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x000000001693ba: sub [rdi-0x30], ebx; jb short 0x00000000001693cd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000016950a: sub [rdi-0x30], ebx; jb short 0x000000000016951d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000169658: sub [rdi-0x30], ebx; jb short 0x0000000000169670; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x000000001697aa: sub [rdi-0x30], ebx; jb short 0x00000000001697bd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x000000001698fa: sub [rdi-0x30], ebx; jb short 0x000000000016990d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000169a4a: sub [rdi-0x30], ebx; jb short 0x0000000000169a5d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000169b9a: sub [rdi-0x30], ebx; jb short 0x0000000000169bad; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000169cea: sub [rdi-0x30], ebx; jb short 0x0000000000169cfd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000169e3a: sub [rdi-0x30], ebx; jb short 0x0000000000169e4d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000169f8a: sub [rdi-0x30], ebx; jb short 0x0000000000169f9d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000121c6b: sub [rdi-0x76b7fff4], esp; adc [r10+0x13], r14b; mov qword ptr [rip+0xca6e0], 0x2; ret; 
0x0000000015760c: sub [rdi], cl; adc [rdi+0x18], eax; ret; 
0x000000000ea44f: sub [rdi], cl; mov dh, 0x43; add [rax-0x7d], ecx; ret; 
0x0000000011f0cb: sub [rdi], cl; sub [rsp+0x10], eax; syscall; 
0x00000000080656: sub [rdi], ecx; mov dh, 0xc0; movsxd rax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x000000001663fe: sub [rdi], esp; notrack jmp r9; 
0x0000000011039c: sub [rdx+0x1], bh; call qword ptr [rbp+0x40]; 
0x000000001106fc: sub [rdx+0x2], bh; call qword ptr [rbp+0x40]; 
0x0000000011067c: sub [rdx+0x5], bh; call qword ptr [rbp+0x40]; 
0x00000000054d02: sub [rdx+0x5b010019], ebx; mov eax, r8d; pop rbp; pop r12; ret; 
0x0000000018f689: sub [rdx], eax; add [rax], al; xor eax, eax; ret; 
0x0000000014e41e: sub [rdx], ecx; add [rax-0x77], cl; in eax, 0x89; ret; 
0x0000000016b075: sub [rip+0x14634900], al; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b34f: sub [rip+0x14634900], eax; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000017ee67: sub [rip-0x76b30000], ecx; ret far; 
0x000000001662eb: sub [rsi-0x1], cl; jb short 0x00000000001662f7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016639b: sub [rsi-0x1], cl; jb short 0x00000000001663a7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000168ccb: sub [rsi-0x1], cl; jb short 0x0000000000168cd7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000168d7b: sub [rsi-0x1], cl; jb short 0x0000000000168d87; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016643b: sub [rsi-0x2], cl; jb short 0x0000000000166447; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001664eb: sub [rsi-0x2], cl; jb short 0x00000000001664f7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000168e1b: sub [rsi-0x2], cl; jb short 0x0000000000168e27; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000168ecb: sub [rsi-0x2], cl; jb short 0x0000000000168ed7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016658b: sub [rsi-0x3], cl; jb short 0x0000000000166597; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016663b: sub [rsi-0x3], cl; jb short 0x0000000000166647; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000168f6b: sub [rsi-0x3], cl; jb short 0x0000000000168f77; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016901b: sub [rsi-0x3], cl; jb short 0x0000000000169027; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001666db: sub [rsi-0x4], cl; jb short 0x00000000001666e7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016678b: sub [rsi-0x4], cl; jb short 0x0000000000166797; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001690bb: sub [rsi-0x4], cl; jb short 0x00000000001690c7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016916b: sub [rsi-0x4], cl; jb short 0x0000000000169177; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016682b: sub [rsi-0x5], cl; jb short 0x0000000000166837; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001668db: sub [rsi-0x5], cl; jb short 0x00000000001668e7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016920b: sub [rsi-0x5], cl; jb short 0x0000000000169217; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001692bb: sub [rsi-0x5], cl; jb short 0x00000000001692c7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016697b: sub [rsi-0x6], cl; jb short 0x0000000000166987; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000166a2b: sub [rsi-0x6], cl; jb short 0x0000000000166a37; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016935b: sub [rsi-0x6], cl; jb short 0x0000000000169367; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016940b: sub [rsi-0x6], cl; jb short 0x0000000000169417; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000166acb: sub [rsi-0x7], cl; jb short 0x0000000000166ad7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000166b7b: sub [rsi-0x7], cl; jb short 0x0000000000166b87; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001694ab: sub [rsi-0x7], cl; jb short 0x00000000001694b7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016955b: sub [rsi-0x7], cl; jb short 0x0000000000169567; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000166c1b: sub [rsi-0x8], cl; jb short 0x0000000000166c27; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000166ccb: sub [rsi-0x8], cl; jb short 0x0000000000166cd7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001695fb: sub [rsi-0x8], cl; jb short 0x0000000000169607; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001696ab: sub [rsi-0x8], cl; jb short 0x00000000001696b7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000166d6b: sub [rsi-0x9], cl; jb short 0x0000000000166d77; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000166e1b: sub [rsi-0x9], cl; jb short 0x0000000000166e27; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016974b: sub [rsi-0x9], cl; jb short 0x0000000000169757; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001697fb: sub [rsi-0x9], cl; jb short 0x0000000000169807; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000166ebb: sub [rsi-0xa], cl; jb short 0x0000000000166ec7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000166f6b: sub [rsi-0xa], cl; jb short 0x0000000000166f77; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016989b: sub [rsi-0xa], cl; jb short 0x00000000001698a7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016994b: sub [rsi-0xa], cl; jb short 0x0000000000169957; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016700b: sub [rsi-0xb], cl; jb short 0x0000000000167017; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001670bb: sub [rsi-0xb], cl; jb short 0x00000000001670c7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001699eb: sub [rsi-0xb], cl; jb short 0x00000000001699f7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000169a9b: sub [rsi-0xb], cl; jb short 0x0000000000169aa7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016715b: sub [rsi-0xc], cl; jb short 0x0000000000167167; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016720b: sub [rsi-0xc], cl; jb short 0x0000000000167217; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000169b3b: sub [rsi-0xc], cl; jb short 0x0000000000169b47; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000169beb: sub [rsi-0xc], cl; jb short 0x0000000000169bf7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001672ab: sub [rsi-0xd], cl; jb short 0x00000000001672b7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016735b: sub [rsi-0xd], cl; jb short 0x0000000000167367; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000169c8b: sub [rsi-0xd], cl; jb short 0x0000000000169c97; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000169d3b: sub [rsi-0xd], cl; jb short 0x0000000000169d47; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001673fb: sub [rsi-0xe], cl; jb short 0x0000000000167407; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001674ab: sub [rsi-0xe], cl; jb short 0x00000000001674b7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000169ddb: sub [rsi-0xe], cl; jb short 0x0000000000169de7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000169e8b: sub [rsi-0xe], cl; jb short 0x0000000000169e97; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000016754b: sub [rsi-0xf], cl; jb short 0x0000000000167557; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000001675fb: sub [rsi-0xf], cl; jb short 0x0000000000167607; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000169f2b: sub [rsi-0xf], cl; jb short 0x0000000000169f37; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000169fdb: sub [rsi-0xf], cl; jb short 0x0000000000169fe7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000012da8c: sub [rsi], al; add [rax-0x73], cl; adc eax, 0x6283a; cmove rax, rdx; ret; 
0x0000000012d9cc: sub [rsi], eax; add [rax-0x73], cl; adc eax, 0x6291a; cmove rax, rdx; ret; 
0x0000000011f0cd: sub [rsp+0x10], eax; syscall; 
0x0000000015175d: sub [rsp+0x20], eax; call qword ptr [rax+0x28]; 
0x00000000152f17: sub [rsp+0x30], eax; push 0x0; push 0x3c; lea r9, [rsp+0x3a]; call qword ptr [rax]; 
0x0000000014726c: sub [rsp+0x30], eax; push qword ptr [rip+0x758e2]; push qword ptr [rip+0x758d4]; lea r9, [rsp+0x2c]; call qword ptr [rax]; 
0x00000000147129: sub [rsp+0x30], eax; push qword ptr [rip+0x75a25]; push qword ptr [rip+0x75a17]; lea r9, [rsp+0x2c]; call qword ptr [rax]; 
0x00000000152cc3: sub [rsp+0x30], eax; push r13; push r12; lea r9, [rsp+0x3a]; call qword ptr [rax]; 
0x00000000157a05: sub [rsp+0x60], ecx; movups [rsp+0x18], xmm0; call r8; 
0x000000001579fc: sub [rsp+0x70], eax; pxor xmm0, xmm0; movaps [rsp+0x60], xmm1; movups [rsp+0x18], xmm0; call r8; 
0x00000000042fd9: sub [rsp+0xc0], eax; movaps [rsp+0xd0], xmm0; movaps [rsp+0xe0], xmm0; movaps [rsp+0xf0], xmm0; syscall; 
0x00000000042fe1: sub [rsp+0xd0], eax; movaps [rsp+0xe0], xmm0; movaps [rsp+0xf0], xmm0; syscall; 
0x00000000042fe9: sub [rsp+0xe0], eax; movaps [rsp+0xf0], xmm0; syscall; 
0x00000000042ff1: sub [rsp+0xf0], eax; syscall; 
0x00000000121243: sub [rsp+rcx+0x64d8f700], ebp; mov [rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000ea449: sub [rsp+rdx+0x3c], dh; sub [rax+rbp+0xf], esi; mov dh, 0x43; add [rax-0x7d], ecx; ret; 
0x0000000014911d: sub [rsp], eax; call qword ptr [rax+0x8]; 
0x00000000120705: sub al, 0x0; add [rax], al; mov rsi, [rsp+0x10]; mov edi, [rsp+0x8]; syscall; 
0x0000000012055a: sub al, 0x0; add [rax], al; syscall; 
0x0000000009c219: sub al, 0x15; add [rbx+0x22], dh; lea rax, [rax-0x8]; ret; 
0x000000000b19d0: sub al, 0x1; add [rax], al; bsr rsi, rsi; lea rax, [rdi+rsi]; ret; 
0x0000000011ff15: sub al, 0x1; add [rax], al; syscall; 
0x000000000f23f5: sub al, 0x31; ror byte ptr [rcx+0x5d5b307d], 0x41; pop rsp; ret; 
0x00000000120f40: sub al, 0x37; idiv edi; mov eax, [rsp+0x18]; add rsp, 0x28; ret; 
0x000000000cf051: sub al, 0x3b; sub al, 0x75; pop rax; ret; 
0x00000000149595: sub al, 0x48; add esp, 0x10; pop rbx; ret; 
0x0000000012d0c8: sub al, 0x48; lea esi, [rbp-0x20]; lea rdi, [rip-0x184]; call rax; 
0x0000000018bb46: sub al, 0x72; add cl, [rax+0x77f8c50f]; ret; 
0x000000000cf054: sub al, 0x75; pop rax; ret; 
0x00000000035828: sub al, 0x83; sbb eax, [rax]; syscall; 
0x00000000125ff8: sub al, 0x9e; or al, 0x0; syscall; 
0x0000000018e033: sub al, 0xa; add [rax], al; xor eax, eax; ret; 
0x00000000047300: sub al, 0xb0; std; jmp qword ptr [rax+rcx*2-0x75]; 
0x0000000002576a: sub al, 0xc0; ret far; 
0x000000000ec403: sub al, 0xc6; or [r9], r11b; mov eax, 0x1; ret; 
0x00000000057bfb: sub al, 0xc7; add al, [rax]; add [rax], al; add [rax+0x1], bh; ret; 
0x00000000030c4b: sub al, 0xe3; mov rax, [rax+r12*8]; test rax, rax; je short 0x0000000000030c58; call rax; 
0x0000000015cd9e: sub al, 0xfd; jmp qword ptr [rsi+0x2e]; 
0x0000000014ce97: sub al, 0xfe; jmp qword ptr [rsi+0xf]; 
0x00000000147280: sub al, 0xff; adc [rax-0x75], cl; or [r8-0x77], r9b; out dx, eax; call qword ptr [rax+0x20]; 
0x0000000013ce33: sub al, 0xff; jmp qword ptr [rsi+0x2e]; 
0x000000000cefb5: sub al, [rax+0x15740fe2]; mov eax, [rdi+0x10]; cmp eax, [rsi+0x10]; jne 0x00000000000cf0b0; ret; 
0x000000000cf015: sub al, [rax+0x15740fe2]; mov eax, [rdi+0x20]; cmp eax, [rsi+0x20]; jne 0x00000000000cf0b0; ret; 
0x000000000cf065: sub al, [rax+0x15740fe2]; mov eax, [rdi+0x30]; cmp eax, [rsi+0x30]; jne short 0x00000000000cf0b0; ret; 
0x000000000cef55: sub al, [rax+0x15740fe2]; mov eax, [rdi]; cmp eax, [rsi]; jne 0x00000000000cf0b0; ret; 
0x0000000004128a: sub al, [rax]; add [rax], al; mov rax, r11; ret; 
0x000000001201d1: sub al, [rax]; add [rax], al; syscall; 
0x000000000a4510: sub al, [rbx+0x634d3fe7]; rol dword ptr [rbx-0x77bd7f31], 0x1; jl short 0x00000000000a4533; rol dword ptr [rcx+rcx*4-0x21], 0xc1; call far fword ptr [rax]; 
0x0000000012d90c: sub al, [rsi]; add [rax-0x73], cl; adc eax, 0x629da; cmove rax, rdx; ret; 
0x000000000a162d: sub al, bl; ret; 
0x0000000010ad9f: sub al, ch; ret far; 
0x000000000412d7: sub al, ch; ret; 
0x00000000184f45: sub al, ch; std; xlat [rbx]; ret; 
0x0000000010d98d: sub bh, [rax+0x103]; syscall; 
0x000000001133dd: sub bh, [rax+0x48]; syscall; 
0x000000000dd14d: sub bh, [rax+0xe3]; syscall; 
0x0000000015be03: sub bh, bl; dec dword ptr [rbx-0x17b7b]; jmp qword ptr [rcx+rcx*4+0x3]; 
0x0000000015d07b: sub bh, ch; jmp qword ptr [rsi-0x70]; 
0x000000000f93a2: sub bl, [rbp-0x1]; call far fword ptr [rdx+0x59]; 
0x00000000157846: sub bl, al; nop [rax+rax]; endbr64; xor eax, eax; ret; 
0x0000000014d042: sub byte ptr [rax+0xf000000], 0xc8; mov eax, eax; mov [rdx], rax; mov eax, 0x1; ret; 
0x0000000009bd32: sub ch, [rax-0x8]; jmp qword ptr [rsi+0x2e]; 
0x00000000118c62: sub ch, [rbp+rcx]; pop rbp; pop r12; pop r13; ret; 
0x000000000420b2: sub ch, [rdi+rdx+0x560f6600]; or eax, 0x17a642; mulsd xmm0, xmm1; ret; 
0x00000000138b72: sub ch, [rdi-0x1]; jmp qword ptr [rsi+0x2e]; 
0x0000000015be02: sub ch, [rdx]; sti; dec dword ptr [rbx-0x17b7b]; jmp qword ptr [rcx+rcx*4+0x3]; 
0x000000000f1d9f: sub cl, [rax-0x7d]; ret; 
0x000000000fa323: sub cl, [rbp-0xff7b]; jmp far fword ptr [rcx-0x101]; 
0x0000000009e900: sub cl, [rsi-0x8]; call far fword ptr [rbx+0x5d]; 
0x000000000a1cad: sub cl, [rsi]; add [rax-0x73], cl; add eax, 0xa559; cmove rax, rdx; ret; 
0x00000000042136: sub cl, al; ret; 
0x00000000127419: sub cl, ch; paddw mm7, mm7; call qword ptr [rax-0x4115d6b8]; 
0x0000000009474c: sub dh, [rbp-0x1f]; lea rax, [rip+0x15cd4a]; pop rbx; mov dword ptr [rip+0x15cd2f], 0x1; ret; 
0x000000000fef02: sub dh, [rdx+rsi*8]; jmp qword ptr [rbx+rcx*4+0x4]; 
0x000000000745b1: sub dh, al; add [rcx-0x7d], cl; ret; 
0x000000000605a5: sub dh, al; add [rip-0xb9517], ch; jmp qword ptr [rsi-0x70]; 
0x00000000061725: sub dh, al; add [rip-0xfd17], ch; jmp qword ptr [rsi-0x70]; 
0x000000000c15a1: sub dh, bh; jmp qword ptr [rsi+0x66]; 
0x0000000013fa20: sub dh, ch; dec dword ptr [rax-0x77]; ret; 
0x000000000ff913: sub dh, dl; jmp qword ptr [rbx+rcx*4+0x4]; 
0x00000000099461: sub dl, [rip-0x3fcebb00]; mov dword ptr fs:[rax], 0xc; mov rax, r8; ret; 
0x00000000133132: sub dl, al; or eax, [rax]; syscall; 
0x00000000047001: sub dword ptr [r13], 0x1; xor esi, esi; mov rdi, r9; call r8; 
0x00000000146a2e: sub dword ptr [rax+0x1000022], 0x48; mov edi, ebp; call qword ptr [rax+0x18]; 
0x0000000008f9df: sub dword ptr [rax+rax-0x76b80000], 0xffffffef; call qword ptr [r13+0x20]; 
0x00000000071543: sub dword ptr [rax-0x74b7ffe9], 0xfffa2095; jmp qword ptr [rax+rcx*2-0x75]; 
0x00000000053cdc: sub dword ptr [rbp-0x3900000b], 0x2; and [rcx-0x7d], cl; ret; 
0x00000000047002: sub dword ptr [rbp], 0x1; xor esi, esi; mov rdi, r9; call r8; 
0x000000000de1c4: sub dword ptr [rbx+0x4], 0x1; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000000de26b: sub dword ptr [rbx+0x4], 0x1; pop rbx; pop rbp; pop r12; ret; 
0x0000000008ac6f: sub dword ptr [rdi], 0x1; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000000630ba: sub dword ptr [rdi], 0x1; ret; 
0x000000000e1c60: sub dword ptr [rip+0x10d879], 0x1; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x000000000e1b88: sub dword ptr [rip+0x10d951], 0x1; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x000000000e1720: sub dword ptr [rip+0x10dd29], 0x1; mov fs:[r9], ebx; mov rax, r8; pop rbx; ret; 
0x000000000dfd30: sub dword ptr [rip+0x10f639], 0x1; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x000000000dfc58: sub dword ptr [rip+0x10f711], 0x1; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x000000000df500: sub dword ptr [rip+0x10fdd9], 0x1; mov fs:[r9], ebx; mov rax, r8; pop rbx; ret; 
0x000000000d293c: sub dword ptr [rip+0x11c85d], 0x1; add rsp, 0x8; ret; 
0x00000000098d3c: sub dword ptr [rip+0x153e3d], 0x1; pop rbp; ret; 
0x00000000099f7f: sub dword ptr [rip+0x154ef2], 0x1; pop rbx; ret; 
0x00000000094a27: sub dword ptr [rip+0x159dd2], 0x1; pop rbx; ret; 
0x0000000009392c: sub dword ptr [rip+0x15ae8d], 0x1; ret; 
0x00000000091020: sub dword ptr [rip+0x15d799], 0x1; ret; 
0x00000000083f6c: sub dword ptr [rip+0x16a80d], 0x1; ret; 
0x00000000061082: sub dword ptr [rip+0x18d6c7], 0x1; mov eax, r8d; pop rbx; ret; 
0x00000000061081: sub dword ptr [rip+0x18d6c7], 0x1; mov eax, r8d; pop rbx; ret; 
0x00000000047629: sub dword ptr [rip+0x1a6eb0], 0x1; pop rbp; ret; 
0x0000000004672c: sub dword ptr [rip+0x1a7555], 0x1; xor eax, eax; pop rbx; ret; 
0x00000000198967: sub dword ptr [rip+0x55e92], 0x1; pop rbx; ret; 
0x00000000198c78: sub dword ptr [rip+0x57899], 0x1; pop rbp; ret; 
0x0000000015cedb: sub dword ptr [rip+0x94776], 0x1; add rsp, 0x10; mov eax, r8d; pop rbp; ret; 
0x0000000015cdfb: sub dword ptr [rip+0x94856], 0x1; add rsp, 0x10; mov eax, r8d; pop rbp; ret; 
0x0000000015cc31: sub dword ptr [rip+0x94a20], 0x1; add rsp, 0x8; ret; 
0x0000000015cb97: sub dword ptr [rip+0x94aba], 0x1; mov rax, r8; pop rbp; ret; 
0x0000000015caea: sub dword ptr [rip+0x94b66], 0x1; add rsp, 0x10; mov eax, r8d; pop rbp; ret; 
0x0000000015ca51: sub dword ptr [rip+0x94c00], 0x1; add rsp, 0x8; ret; 
0x0000000014c670: sub dword ptr [rip+0xa46b1], 0x1; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x0000000014c58d: sub dword ptr [rip+0xa4793], 0x1; mov fs:[r8], r9d; add rsp, 0x18; ret; 
0x0000000014c120: sub dword ptr [rip+0xa4ba1], 0x1; mov fs:[r9], ebx; mov rax, r8; pop rbx; ret; 
0x00000000142318: sub dword ptr [rip+0xae6f9], 0x1; pop rbp; ret; 
0x0000000013d69d: sub dword ptr [rip+0xb2e74], 0x1; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000138950: sub dword ptr [rip+0xb7b49], 0x1; mov fs:[r9], ebx; mov rax, r8; pop rbx; ret; 
0x00000000138760: sub dword ptr [rip+0xb7cd9], 0x1; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x00000000138688: sub dword ptr [rip+0xb7db1], 0x1; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x00000000137f6f: sub dword ptr [rip+0xb84c2], 0x1; add rsp, 0x20; mov eax, r8d; pop rbp; ret; 
0x00000000137c47: sub dword ptr [rip+0xb87ea], 0x1; add rsp, 0x8; ret; 
0x00000000137a29: sub dword ptr [rip+0xb8a08], 0x1; mov eax, r8d; pop rbp; ret; 
0x00000000134610: sub dword ptr [rip+0xbbcb1], 0x1; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x0000000013452d: sub dword ptr [rip+0xbbd93], 0x1; mov fs:[r8], r9d; add rsp, 0x18; ret; 
0x00000000134460: sub dword ptr [rip+0xbbe59], 0x1; mov fs:[r9], ebx; mov rax, r8; pop rbx; ret; 
0x000000001331b0: sub dword ptr [rip+0xbcfa9], 0x1; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x000000001330cd: sub dword ptr [rip+0xbd08b], 0x1; mov fs:[r8], r9d; add rsp, 0x18; ret; 
0x00000000133000: sub dword ptr [rip+0xbd151], 0x1; mov fs:[r9], ebx; mov rax, r8; pop rbx; ret; 
0x00000000132483: sub dword ptr [rip+0xbdc26], 0x1; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x0000000013239d: sub dword ptr [rip+0xbdd0b], 0x1; mov fs:[r8], r9d; add rsp, 0x18; ret; 
0x000000001322bd: sub dword ptr [rip+0xbdde4], 0x1; mov fs:[r9], ebx; mov rax, r8; pop rbx; ret; 
0x00000000131833: sub dword ptr [rip+0xbe7ae], 0x1; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x0000000013174d: sub dword ptr [rip+0xbe893], 0x1; mov fs:[r8], r9d; add rsp, 0x18; ret; 
0x0000000013166d: sub dword ptr [rip+0xbe96c], 0x1; mov fs:[r9], ebx; mov rax, r8; pop rbx; ret; 
0x00000000126450: sub dword ptr [rip+0xc99d9], 0x1; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x00000000126378: sub dword ptr [rip+0xc9ab1], 0x1; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x00000000125a00: sub dword ptr [rip+0xca359], 0x1; mov fs:[r9], ebx; mov rax, r8; pop rbx; ret; 
0x00000000125925: sub dword ptr [rip+0xca3e0], 0x1; mov eax, r8d; add rsp, 0x8; ret; 
0x000000001249a0: sub dword ptr [rip+0xcb331], 0x1; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x000000001248c8: sub dword ptr [rip+0xcb409], 0x1; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x00000000123d30: sub dword ptr [rip+0xcbe71], 0x1; mov fs:[r9], ebx; mov rax, r8; pop rbx; ret; 
0x0000000011868b: sub dword ptr [rip+0xd71be], 0x1; add rsp, 0x8; ret; 
0x00000000117c2c: sub dword ptr [rip+0xd7c1d], 0x1; ret; 
0x0000000018e816: sub dword ptr [rip-0xcfffffe], 0xf; outsd dx, [rsi]; push rdi; ret; 
0x0000000017ed21: sub dword ptr [rsi+0xe], 0x0; add [rcx+0x29], cl; ret far; 
0x0000000008ea9d: sub dword ptr [rsi], 0x3; add [rax], al; xor edx, edx; mov rdi, rbp; call qword ptr [rax+0x80]; 
0x0000000011868a: sub dword ptr gs:[rip+0xd71be], 0x1; add rsp, 0x8; ret; 
0x000000000de26a: sub eax, 0x1046b83; pop rbx; pop rbp; pop r12; ret; 
0x000000000b809a: sub eax, 0x10; jb 0x00000000000b7649; movdqu [rdi+0x30], xmm7; ret; 
0x000000000b98ea: sub eax, 0x10; jb 0x00000000000b8d29; movdqu [rdi+0x30], xmm7; lea rax, [rdi+0x40]; ret; 
0x000000001782c2: sub eax, 0x10; lea rcx, [rdx+0x10]; jne 0x0000000000178810; ret; 
0x000000000b78c9: sub eax, 0x10; lea rdi, [rdi+0x10]; jne 0x00000000000b7fa0; ret; 
0x000000000b8fed: sub eax, 0x10; lea rdi, [rdi+0x10]; jne 0x00000000000b97f0; ret; 
0x0000000009c2a2: sub eax, 0x10; ret; 
0x000000000e1721: sub eax, 0x10dd29; add [rcx+rax*2-0x77], esp; sbb [rcx+rcx*4-0x40], ecx; pop rbx; ret; 
0x000000000df501: sub eax, 0x10fdd9; add [rcx+rax*2-0x77], esp; sbb [rcx+rcx*4-0x40], ecx; pop rbx; ret; 
0x000000000b78ec: sub eax, 0x11; lea rdi, [rdi+0x11]; jne 0x00000000000b7fa0; ret; 
0x000000000b9010: sub eax, 0x11; lea rdi, [rdi+0x11]; jne 0x00000000000b97f0; ret; 
0x00000000094e9c: sub eax, 0x11; shr rax, 0x4; lea rdx, [rax+0x1]; mov [rip+0x157422], rdx; ret; 
0x000000000b7911: sub eax, 0x12; lea rdi, [rdi+0x12]; jne 0x00000000000b7fa0; ret; 
0x000000000b9035: sub eax, 0x12; lea rdi, [rdi+0x12]; jne 0x00000000000b97f0; ret; 
0x000000000b792f: sub eax, 0x13; lea rdi, [rdi+0x13]; jne 0x00000000000b7fa0; ret; 
0x000000000b9063: sub eax, 0x13; lea rdi, [rdi+0x13]; jne 0x00000000000b97f0; ret; 
0x000000000b794f: sub eax, 0x14; lea rdi, [rdi+0x14]; jne 0x00000000000b7fa0; ret; 
0x000000000b9093: sub eax, 0x14; lea rdi, [rdi+0x14]; jne 0x00000000000b97f0; ret; 
0x00000000098d3d: sub eax, 0x153e3d; add [rbp-0x3d], ebx; nop [rax]; ret; 
0x000000000967dd: sub eax, 0x1555de; xor edi, edi; call qword ptr [r13]; 
0x000000000b7972: sub eax, 0x15; lea rdi, [rdi+0x15]; jne 0x00000000000b7fa0; ret; 
0x000000000b90c6: sub eax, 0x15; lea rdi, [rdi+0x15]; jne 0x00000000000b97f0; ret; 
0x000000000b7991: sub eax, 0x16; lea rdi, [rdi+0x16]; jne 0x00000000000b7fa0; ret; 
0x000000000b90f5: sub eax, 0x16; lea rdi, [rdi+0x16]; jne 0x00000000000b97f0; ret; 
0x000000000b79b1: sub eax, 0x17; lea rdi, [rdi+0x17]; jne 0x00000000000b7fa0; ret; 
0x000000000b9125: sub eax, 0x17; lea rdi, [rdi+0x17]; jne 0x00000000000b97f0; ret; 
0x000000000b79d1: sub eax, 0x18; lea rdi, [rdi+0x18]; jne 0x00000000000b7fa0; ret; 
0x000000000b9155: sub eax, 0x18; lea rdi, [rdi+0x18]; jne 0x00000000000b97f0; ret; 
0x00000000061083: sub eax, 0x18d6c7; add [rcx+rcx*4-0x40], eax; pop rbx; ret; 
0x000000000b79f4: sub eax, 0x19; lea rdi, [rdi+0x19]; jne 0x00000000000b7fa0; ret; 
0x000000000b9188: sub eax, 0x19; lea rdi, [rdi+0x19]; jne 0x00000000000b97f0; ret; 
0x0000000014fe3b: sub eax, 0x1; bswap eax; mov [r8+0x48], eax; mov eax, 0x1; ret; 
0x0000000014d05b: sub eax, 0x1; bswap eax; mov [r8+0xa8], eax; mov eax, 0x1; ret; 
0x0000000015075a: sub eax, 0x1; bswap eax; mov [rdx], eax; mov eax, 0x1; ret; 
0x000000001784b8: sub eax, 0x1; lea rcx, [rdx+0x1]; jne 0x0000000000178810; ret; 
0x000000000b76e3: sub eax, 0x1; lea rdi, [rdi+0x1]; jne 0x00000000000b7fa0; ret; 
0x000000000b8dc6: sub eax, 0x1; lea rdi, [rdi+0x1]; jne 0x00000000000b97f0; ret; 
0x0000000018a1d9: sub eax, 0x1; lea rdi, [rdi+0x1]; jne 0x000000000018a610; vzeroupper; ret; 
0x0000000018aef1: sub eax, 0x1; lea rdi, [rdi+0x1]; jne 0x000000000018b340; vzeroupper; ret; 
0x0000000018a3f0: sub eax, 0x1; lea rdi, [rdi+rdx+0x1]; jne 0x000000000018a610; vzeroupper; ret; 
0x0000000018b124: sub eax, 0x1; lea rdi, [rdi+rdx+0x1]; jne 0x000000000018b340; vzeroupper; ret; 
0x0000000002fdec: sub eax, 0x1; mov [rdx+0x8], eax; pop rbx; ret; 
0x00000000055c1f: sub eax, 0x1; ret; 
0x000000000b7a29: sub eax, 0x1a; lea rdi, [rdi+0x1a]; jne 0x00000000000b7fa0; ret; 
0x000000000b91bd: sub eax, 0x1a; lea rdi, [rdi+0x1a]; jne 0x00000000000b97f0; ret; 
0x000000000b7a57: sub eax, 0x1b; lea rdi, [rdi+0x1b]; jne 0x00000000000b7fa0; ret; 
0x000000000b91eb: sub eax, 0x1b; lea rdi, [rdi+0x1b]; jne 0x00000000000b97f0; ret; 
0x000000000b7a87: sub eax, 0x1c; lea rdi, [rdi+0x1c]; jne 0x00000000000b7fa0; ret; 
0x000000000b921b: sub eax, 0x1c; lea rdi, [rdi+0x1c]; jne 0x00000000000b97f0; ret; 
0x000000000b7ab3: sub eax, 0x1d; lea rdi, [rdi+0x1d]; jne 0x00000000000b7fa0; ret; 
0x000000000b9247: sub eax, 0x1d; lea rdi, [rdi+0x1d]; jne 0x00000000000b97f0; ret; 
0x000000000b7ae3: sub eax, 0x1e; lea rdi, [rdi+0x1e]; jne 0x00000000000b7fa0; ret; 
0x000000000b9277: sub eax, 0x1e; lea rdi, [rdi+0x1e]; jne 0x00000000000b97f0; ret; 
0x000000000b7b13: sub eax, 0x1f; lea rdi, [rdi+0x1f]; jne 0x00000000000b7fa0; ret; 
0x000000000b92a7: sub eax, 0x1f; lea rdi, [rdi+0x1f]; jne 0x00000000000b97f0; ret; 
0x0000000018a70d: sub eax, 0x20; jb 0x000000000018a325; vmovdqu [rdi+0x60], ymm7; vzeroupper; ret; 
0x000000000b7b43: sub eax, 0x20; lea rdi, [rdi+0x20]; jne 0x00000000000b7fa0; ret; 
0x000000000b92d7: sub eax, 0x20; lea rdi, [rdi+0x20]; jne 0x00000000000b97f0; ret; 
0x00000000094cc4: sub eax, 0x2; add rsp, 0x8; ret; 
0x000000001784da: sub eax, 0x2; lea rcx, [rdx+0x2]; jne 0x0000000000178810; ret; 
0x000000000b7707: sub eax, 0x2; lea rdi, [rdi+0x2]; jne 0x00000000000b7fa0; ret; 
0x000000000b8deb: sub eax, 0x2; lea rdi, [rdi+0x2]; jne 0x00000000000b97f0; ret; 
0x0000000018a387: sub eax, 0x2; lea rdi, [rdi+0x2]; jne 0x000000000018a610; vzeroupper; ret; 
0x0000000018b0bb: sub eax, 0x2; lea rdi, [rdi+0x2]; jne 0x000000000018b340; vzeroupper; ret; 
0x00000000178500: sub eax, 0x3; lea rcx, [rdx+0x3]; jne 0x0000000000178810; ret; 
0x000000000b772a: sub eax, 0x3; lea rdi, [rdi+0x3]; jne 0x00000000000b7fa0; ret; 
0x000000000b8e0e: sub eax, 0x3; lea rdi, [rdi+0x3]; jne 0x00000000000b97f0; ret; 
0x0000000018a3ab: sub eax, 0x3; lea rdi, [rdi+0x3]; jne 0x000000000018a610; vzeroupper; ret; 
0x0000000018b0df: sub eax, 0x3; lea rdi, [rdi+0x3]; jne 0x000000000018b340; vzeroupper; ret; 
0x000000000ec432: sub eax, 0x47c6e875; or [rsi], dl; mov eax, 0x1; ret; 
0x00000000120442: sub eax, 0x48000000; mov edx, [rsp+0x10]; mov rsi, [rsp+0x8]; syscall; 
0x000000000ca14f: sub eax, 0x48001238; ror eax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000009fa93: sub eax, 0x480014f5; ror eax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000009e820: sub eax, 0x487b8b48; mov rsi, r14; call rax; 
0x000000001498d5: sub eax, 0x4; bswap eax; mov [rdx], eax; mov edx, ebx; call qword ptr [r13+0x10]; 
0x0000000005b35f: sub eax, 0x4; cmp rdi, rax; jbe short 0x000000000005b35a; mov rax, r10; ret; 
0x00000000178518: sub eax, 0x4; lea rcx, [rdx+0x4]; jne 0x0000000000178810; ret; 
0x000000000b7745: sub eax, 0x4; lea rdi, [rdi+0x4]; jne 0x00000000000b7fa0; ret; 
0x000000000b8e29: sub eax, 0x4; lea rdi, [rdi+0x4]; jne 0x00000000000b97f0; ret; 
0x0000000018a3c5: sub eax, 0x4; lea rdi, [rdi+0x4]; jne 0x000000000018a610; vzeroupper; ret; 
0x0000000018b0f9: sub eax, 0x4; lea rdi, [rdi+0x4]; jne 0x000000000018b340; vzeroupper; ret; 
0x0000000011af77: sub eax, 0x4c00000a; mov [rsp+0x8], eax; mov rdi, [r8]; call rbx; 
0x0000000012bde2: sub eax, 0x507a8b48; mov rsi, rdx; call rax; 
0x0000000017853e: sub eax, 0x5; lea rcx, [rdx+0x5]; jne 0x0000000000178810; ret; 
0x000000000b7768: sub eax, 0x5; lea rdi, [rdi+0x5]; jne 0x00000000000b7fa0; ret; 
0x000000000b8e4c: sub eax, 0x5; lea rdi, [rdi+0x5]; jne 0x00000000000b97f0; ret; 
0x00000000085f62: sub eax, 0x5b012f83; mov eax, r8d; pop rbp; pop r12; ret; 
0x000000000344d7: sub eax, 0x64001b79; add rax, [0x0]; ret; 
0x00000000178560: sub eax, 0x6; lea rcx, [rdx+0x6]; jne 0x0000000000178810; ret; 
0x000000000b778d: sub eax, 0x6; lea rdi, [rdi+0x6]; jne 0x00000000000b7fa0; ret; 
0x000000000b8e71: sub eax, 0x6; lea rdi, [rdi+0x6]; jne 0x00000000000b97f0; ret; 
0x0000000017857e: sub eax, 0x7; lea rcx, [rdx+0x7]; jne 0x0000000000178810; ret; 
0x000000000b77ab: sub eax, 0x7; lea rdi, [rdi+0x7]; jne 0x00000000000b7fa0; ret; 
0x000000000b8e8f: sub eax, 0x7; lea rdi, [rdi+0x7]; jne 0x00000000000b97f0; ret; 
0x000000000422cd: sub eax, 0x7f800000; shr eax, 0x1f; ret; 
0x0000000012d0c1: sub eax, 0x8548000c; shl byte ptr [rsp+rbp+0x48], 0x8d; jne short 0x000000000012d0ad; lea rdi, [rip-0x184]; call rax; 
0x00000000055c6c: sub eax, 0x8; cmp r8, 0xfffffffffffffff8; jne short 0x0000000000055c60; mov rax, rdx; ret; 
0x0000000017825a: sub eax, 0x8; lea rcx, [rdx+0x8]; jne 0x0000000000178810; ret; 
0x000000000b77c7: sub eax, 0x8; lea rdi, [rdi+0x8]; jne 0x00000000000b7fa0; ret; 
0x000000000b8eab: sub eax, 0x8; lea rdi, [rdi+0x8]; jne 0x00000000000b97f0; ret; 
0x0000000012db4c: sub eax, 0x8d480006; adc eax, 0x62d2a; cmove rax, rdx; ret; 
0x0000000015cb98: sub eax, 0x94aba; add [rcx+rcx*4-0x40], ecx; pop rbp; ret; 
0x000000001785a0: sub eax, 0x9; lea rcx, [rdx+0x9]; jne 0x0000000000178810; ret; 
0x000000000b77ea: sub eax, 0x9; lea rdi, [rdi+0x9]; jne 0x00000000000b7fa0; ret; 
0x000000000b8ece: sub eax, 0x9; lea rdi, [rdi+0x9]; jne 0x00000000000b97f0; ret; 
0x0000000014c121: sub eax, 0xa4ba1; add [rcx+rax*2-0x77], esp; sbb [rcx+rcx*4-0x40], ecx; pop rbx; ret; 
0x000000001785c0: sub eax, 0xa; lea rcx, [rdx+0xa]; jne 0x0000000000178810; ret; 
0x000000000b780f: sub eax, 0xa; lea rdi, [rdi+0xa]; jne 0x00000000000b7fa0; ret; 
0x000000000b8ef3: sub eax, 0xa; lea rdi, [rdi+0xa]; jne 0x00000000000b97f0; ret; 
0x00000000138951: sub eax, 0xb7b49; add [rcx+rax*2-0x77], esp; sbb [rcx+rcx*4-0x40], ecx; pop rbx; ret; 
0x00000000137a2a: sub eax, 0xb8a08; add [rcx+rcx*4-0x40], eax; pop rbp; ret; 
0x000000001785e0: sub eax, 0xb; lea rcx, [rdx+0xb]; jne 0x0000000000178810; ret; 
0x000000000b782d: sub eax, 0xb; lea rdi, [rdi+0xb]; jne 0x00000000000b7fa0; ret; 
0x000000000b8f21: sub eax, 0xb; lea rdi, [rdi+0xb]; jne 0x00000000000b97f0; ret; 
0x00000000134461: sub eax, 0xbbe59; add [rcx+rax*2-0x77], esp; sbb [rcx+rcx*4-0x40], ecx; pop rbx; ret; 
0x00000000133001: sub eax, 0xbd151; add [rcx+rax*2-0x77], esp; sbb [rcx+rcx*4-0x40], ecx; pop rbx; ret; 
0x000000001322be: sub eax, 0xbdde4; add [rcx+rax*2-0x77], esp; sbb [rcx+rcx*4-0x40], ecx; pop rbx; ret; 
0x0000000013166e: sub eax, 0xbe96c; add [rcx+rax*2-0x77], esp; sbb [rcx+rcx*4-0x40], ecx; pop rbx; ret; 
0x0000000012d121: sub eax, 0xc148000c; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x0000000018496f: sub eax, 0xc5000001; std; xlat [rbx]; ret; 
0x00000000178600: sub eax, 0xc; lea rcx, [rdx+0xc]; jne 0x0000000000178810; ret; 
0x000000000b784d: sub eax, 0xc; lea rdi, [rdi+0xc]; jne 0x00000000000b7fa0; ret; 
0x000000000b8f41: sub eax, 0xc; lea rdi, [rdi+0xc]; jne 0x00000000000b97f0; ret; 
0x00000000125a01: sub eax, 0xca359; add [rcx+rax*2-0x77], esp; sbb [rcx+rcx*4-0x40], ecx; pop rbx; ret; 
0x00000000125926: sub eax, 0xca3e0; add [rcx+rcx*4-0x40], eax; add rsp, 0x8; ret; 
0x00000000123d31: sub eax, 0xcbe71; add [rcx+rax*2-0x77], esp; sbb [rcx+rcx*4-0x40], ecx; pop rbx; ret; 
0x00000000178622: sub eax, 0xd; lea rcx, [rdx+0xd]; jne 0x0000000000178810; ret; 
0x000000000b786f: sub eax, 0xd; lea rdi, [rdi+0xd]; jne 0x00000000000b7fa0; ret; 
0x000000000b8f63: sub eax, 0xd; lea rdi, [rdi+0xd]; jne 0x00000000000b97f0; ret; 
0x000000001120f2: sub eax, 0xe8e7894c; xor eax, 0x31fff102; rcr byte ptr [rbx+0x5d], 0x41; pop rsp; ret; 
0x00000000178642: sub eax, 0xe; lea rcx, [rdx+0xe]; jne 0x0000000000178810; ret; 
0x000000000b788f: sub eax, 0xe; lea rdi, [rdi+0xe]; jne 0x00000000000b7fa0; ret; 
0x000000000b8f93: sub eax, 0xe; lea rdi, [rdi+0xe]; jne 0x00000000000b97f0; ret; 
0x00000000054f3f: sub eax, 0xf700196f; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x00000000178662: sub eax, 0xf; lea rcx, [rdx+0xf]; jne 0x0000000000178810; ret; 
0x000000000b78af: sub eax, 0xf; lea rdi, [rdi+0xf]; jne 0x00000000000b7fa0; ret; 
0x000000000b8fc3: sub eax, 0xf; lea rdi, [rdi+0xf]; jne 0x00000000000b97f0; ret; 
0x000000000605a8: sub eax, 0xfff46ae9; jmp qword ptr [rsi-0x70]; 
0x00000000061728: sub eax, 0xffff02e9; jmp qword ptr [rsi-0x70]; 
0x00000000184dcf: sub eax, 0xffff; jne 0x0000000000184ce0; ret; 
0x0000000018bd0d: sub eax, 0xffff; jne 0x000000000018bc90; ret; 
0x00000000184f1c: sub eax, 0xffffffff; jne 0x0000000000184ce0; vzeroupper; ret; 
0x0000000018be5c: sub eax, 0xffffffff; jne 0x000000000018bc90; vzeroupper; ret; 
0x00000000184cd7: sub eax, 0xffffffff; jne short 0x0000000000184ce0; vzeroupper; ret; 
0x0000000018bc87: sub eax, 0xffffffff; jne short 0x000000000018bc90; vzeroupper; ret; 
0x000000000bc7ce: sub eax, [r8+r9*4]; je short 0x00000000000bc7b0; ret; 
0x000000000bc7cf: sub eax, [rax+rcx*4]; je short 0x00000000000bc7b0; ret; 
0x00000000120101: sub eax, [rax]; add [rax], al; syscall; 
0x00000000034ce3: sub eax, [rbx+0x8]; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000074561: sub eax, [rcx+0xf]; mov dh, 0x46; or al, 0x83; ret; 
0x000000000bc770: sub eax, [rcx+r8*4]; je short 0x00000000000bc758; ret; 
0x000000000bc771: sub eax, [rcx+rax*4]; je short 0x00000000000bc758; ret; 
0x00000000120c0e: sub eax, [rcx]; add [rax], al; mov edi, [rsp+0x4]; syscall; 
0x00000000120bc4: sub eax, [rcx]; add [rax], al; syscall; 
0x00000000093ed2: sub eax, [rdi+0x18]; ret; 
0x0000000008ce5d: sub eax, [rdi+0x20]; ret; 
0x00000000127689: sub eax, [rdi+0x38]; cmp rax, rsi; jb short 0x00000000001276a0; mov eax, 0x1; ret; 
0x0000000008cd2d: sub eax, [rdi+0x38]; ret; 
0x00000000088619: sub eax, [rdx+0x10]; sar rax, 0x2; ret; 
0x0000000008ce4a: sub eax, [rdx+0x18]; sar rax, 0x2; ret; 
0x0000000008cd1a: sub eax, [rdx+0x30]; sar rax, 0x2; ret; 
0x0000000011aa57: sub eax, [rdx]; add [rax], al; mov rdi, [r14]; call rbx; 
0x00000000093597: sub eax, [rsi+0x10]; ret; 
0x000000000d0b7b: sub eax, eax; add r14, r8; mov [rsp+0x88], r14; call rbp; 
0x00000000057e13: sub eax, eax; mov [rdx], eax; mov eax, 0x2; ret; 
0x000000000469d2: sub eax, ebx; shr rax, 0x3; lea r12, [rbx+rax*8+0x8]; nop [rax]; call qword ptr [rbx]; 
0x00000000198a1d: sub eax, ebx; shr rax, 0x3; lea rbp, [rbx+rax*8+0x8]; nop [rax+rax]; call qword ptr [rbx]; 
0x00000000184d23: sub eax, ecx; je short 0x0000000000184d30; sbb eax, eax; or eax, 0x1; ret; 
0x00000000057c45: sub eax, ecx; mov [rdx], eax; mov eax, 0x1; ret; 
0x000000000aa3ac: sub eax, ecx; ret; 
0x00000000129512: sub eax, ecx; shr ecx, 0x1f; cmp sil, cl; cmovne eax, edx; ret; 
0x00000000092a59: sub eax, ecx; sub eax, 0x1; ret; 
0x00000000183e1f: sub eax, ecx; vzeroupper; ret; 
0x000000000b1d79: sub eax, edi; ret; 
0x000000000cf87e: sub eax, edi; shr rax, 0x2; ret; 
0x0000000008b72c: sub eax, edx; mov [rcx], rax; xor eax, eax; pop rbx; ret; 
0x0000000009e952: sub eax, edx; mov rdx, [rdx+0x8]; test rdx, rdx; jne short 0x000000000009e950; ret; 
0x0000000008f591: sub eax, edx; pop rbp; pop r12; ret; 
0x00000000149248: sub eax, edx; pop rbx; pop rbp; mov eax, r8d; ret; 
0x00000000047329: sub eax, edx; ret; 
0x00000000191fc7: sub eax, edx; ret; 
0x00000000191fd7: sub eax, edx; ret; 
0x00000000041b9a: sub eax, edx; sar eax, 0x10; ret; 
0x000000000422b3: sub eax, edx; shr eax, 0x1f; ret; 
0x000000001294db: sub eax, edx; shr ecx, 0x1f; cmp dil, cl; cmovne eax, esi; ret; 
0x0000000018cfb0: sub eax, edx; shr rax, 0x2; vzeroupper; ret; 
0x00000000041ef9: sub eax, edx; shr rax, 0x3f; ret; 
0x00000000183b22: sub eax, edx; vzeroupper; ret; 
0x0000000008f9d9: sub eax, esp; cmp rax, rbx; jae 0x000000000008fa90; mov rdi, rbp; call qword ptr [r13+0x20]; 
0x0000000008fcde: sub eax, esp; cmp rbx, rax; jbe 0x000000000008fd90; mov rdi, rbp; call qword ptr [r13+0x20]; 
0x00000000147713: sub eax, esp; mov [rbx+0x18], rax; mov rax, [rbp+0x8]; call qword ptr [rax+0x28]; 
0x00000000057e12: sub eax, r8d; mov [rdx], eax; mov eax, 0x2; ret; 
0x00000000129511: sub eax, r9d; shr ecx, 0x1f; cmp sil, cl; cmovne eax, edx; ret; 
0x00000000124073: sub ebp, eax; mov bh, 0xe2; out dx, eax; jmp qword ptr [rcx+rcx*4+0x2b]; 
0x0000000015d117: sub ebp, edi; jmp qword ptr [rsi+0xf]; 
0x0000000010d943: sub ebp, esp; or eax, 0x64d8f700; mov [rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000018eabb: sub ebx, 0x63490002; or al, 0x93; add rcx, r11; notrack jmp rcx; 
0x000000000dea7b: sub ebx, [rbx+0x5d]; pop r12; pop r13; pop r14; ret; 
0x00000000060f27: sub ebx, [rbx+0x5d]; pop r12; pop r13; ret; 
0x000000000dd7c8: sub ebx, [rbx+0x5d]; pop r12; ret; 
0x0000000013c426: sub ebx, [rbx+0x5d]; ret; 
0x0000000007d0d3: sub ebx, esi; mov r13, rbx; sar r13, 0x2; mov rdx, r13; call qword ptr [rax+0x38]; 
0x000000000479f6: sub ecx, 0x1; jns short 0x00000000000479b9; xor eax, eax; ret; 
0x0000000015d150: sub ecx, 0x5; cmp cx, 0x3; jbe short 0x000000000015d160; ret; 
0x00000000043b18: sub ecx, 0xffffff80; shr ecx, 0x3; rep stosq [rdi]; ret; 
0x0000000015f722: sub ecx, [rax+0x10]; cmp rcx, [rax+0x28]; jae short 0x000000000015f710; mov eax, 0x1; ret; 
0x0000000009c214: sub ecx, [rax+0x3b]; or eax, 0x152c74; jae short 0x000000000009c240; lea rax, [rax-0x8]; ret; 
0x0000000010c308: sub ecx, [rax-0x77]; or [r9], sil; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x5d], bl; ret; 
0x00000000056b82: sub ecx, [rax-0x7d]; ret; 
0x000000000b7771: sub ecx, [rax]; add [rax], al; ret; 
0x0000000011bb3c: sub ecx, [rcx+rcx*4-0x1a]; mov rdi, r14; call r13; 
0x0000000018d304: sub ecx, [rcx+rcx*4-0x40]; shr rax, 0x2; vzeroupper; ret; 
0x00000000188964: sub ecx, [rcx+rcx*4-0x40]; vzeroupper; ret; 
0x000000000ddb31: sub ecx, [rcx-0xc]; dec dword ptr [rax-0x77]; ret; 
0x0000000011af09: sub ecx, [rcx]; add [rax], al; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x00000000160a71: sub ecx, [rcx]; or [rax], eax; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000087e29: sub ecx, eax; sar rcx, 0x2; lea eax, [rcx-0x1]; ret; 
0x000000001085cf: sub ecx, ebp; ret; 
0x0000000009e623: sub ecx, ebx; adc al, 0x0; call qword ptr [rax]; 
0x000000000aef78: sub ecx, ecx; lea r10, [rip+0x100107]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x000000000acd08: sub ecx, ecx; lea r10, [rip+0x1022f7]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x000000000aa728: sub ecx, ecx; lea r10, [rip+0x104857]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x000000000a9008: sub ecx, ecx; lea r10, [rip+0x105ef7]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000172bd8: sub ecx, ecx; lea r10, [rip+0x3c4e7]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000170a58: sub ecx, ecx; lea r10, [rip+0x3e5e7]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x000000001646a8: sub ecx, ecx; lea r10, [rip+0x4a917]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000163418: sub ecx, ecx; lea r10, [rip+0x4bb27]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000010c6b4: sub ecx, edi; add ecx, 0x150; shr ecx, 0x3; rep stosq [rdi]; ret; 
0x00000000140e93: sub ecx, edi; or al, [rax]; syscall; 
0x00000000043b16: sub ecx, edi; sub ecx, 0xffffff80; shr ecx, 0x3; rep stosq [rdi]; ret; 
0x0000000008b0e2: sub ecx, edx; cmp rax, rcx; jbe 0x000000000008b2c0; mov rdi, rbx; call qword ptr [rbp+0x60]; 
0x0000000008cab2: sub ecx, edx; cmp rax, rcx; jbe 0x000000000008cc80; mov rdi, rbx; call qword ptr [rbp+0x60]; 
0x0000000008fe7a: sub ecx, edx; cmp rax, rcx; jbe 0x000000000008ff70; mov rdi, rbx; call qword ptr [r12+0x88]; 
0x00000000092543: sub ecx, edx; cmp rax, rcx; jbe 0x0000000000092618; mov rdi, rbx; call qword ptr [r13+0x60]; 
0x00000000087d3e: sub ecx, edx; cmp rax, rcx; jbe short 0x0000000000087d70; mov rdi, rbx; call qword ptr [rbp+0x30]; 
0x0000000008dffa: sub ecx, edx; cmp rax, rcx; jbe short 0x000000000008e020; call qword ptr [rbx+0x60]; 
0x0000000008ffda: sub ecx, edx; cmp rax, rcx; jbe short 0x0000000000090018; mov rdi, rbp; call qword ptr [rbx+0x88]; 
0x00000000091ef3: sub ecx, edx; cmp rax, rcx; jbe short 0x0000000000091f60; mov rdi, rbx; call qword ptr [rbp+0x68]; 
0x00000000091fa9: sub ecx, edx; cmp rax, rcx; jbe short 0x0000000000091fd8; mov rdi, rbx; call qword ptr [rbp+0x20]; 
0x00000000092969: sub ecx, edx; cmp rax, rcx; jbe short 0x00000000000929a0; mov rdi, rbx; call qword ptr [rbp+0x30]; 
0x00000000041b4f: sub ecx, edx; not eax; and eax, ecx; ret; 
0x0000000014919f: sub ecx, esi; mov [rdx+0x58], rdi; mov [rdx+0x68], rcx; ret; 
0x000000000cf37c: sub edi, 0x10; add rax, rdi; ret; 
0x00000000168ca3: sub edi, 0x20; lea r11, [rip+0x54c93]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001662c3: sub edi, 0x20; lea r11, [rip+0x574b3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168bb2: sub edi, 0x40; lea r11, [rip+0x54d84]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168af3: sub edi, 0x40; lea r11, [rip+0x54e43]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001661d2: sub edi, 0x40; lea r11, [rip+0x575a4]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166113: sub edi, 0x40; lea r11, [rip+0x57663]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001383f3: sub edi, 0x7; add al, ch; xchg esp, eax; mov ecx, 0x89480000; ret; 
0x0000000013a873: sub edi, [rax+0x3]; mov edi, [rbp-0x60]; syscall; 
0x0000000011346c: sub edi, [rax+0x48]; syscall; 
0x00000000091f61: sub edi, [rdi+rdi*8+0x6693ebff]; nop [rax+rax]; endbr64; mov eax, 0xffffffff; ret; 
0x0000000014163b: sub edi, ebp; jmp qword ptr [rsi-0x70]; 
0x0000000007699a: sub edi, ebp; mov rdx, r15; call qword ptr [rax+0x38]; 
0x0000000008e509: sub edi, ecx; cmp rax, rdi; jbe short 0x000000000008e530; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x0000000016fa1f: sub edi, edx; lea r11, [rip+0x4e5d8]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016ceeb: sub edi, edx; lea r11, [rip+0x50c0c]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000007700e: sub edi, edx; mov rdx, r15; call qword ptr [rax+0x38]; 
0x000000000ac6f4: sub edx, 0x10; add rdx, rax; jl short 0x00000000000ac710; lea rax, [rdi+rax+0x30]; ret; 
0x00000000055659: sub edx, 0x1; jne short 0x0000000000055640; mov eax, 0x1; ret; 
0x000000000558a1: sub edx, 0x1; jne short 0x0000000000055888; mov eax, 0x1; ret; 
0x000000001460e1: sub edx, 0x1; jne short 0x0000000000146068; ret; 
0x000000000ac6d4: sub edx, 0x20; add rdx, rax; jl short 0x00000000000ac710; lea rax, [rdi+rax+0x20]; ret; 
0x000000000ac6b4: sub edx, 0x30; add rdx, rax; jl short 0x00000000000ac710; lea rax, [rdi+rax+0x10]; ret; 
0x000000000ac6a4: sub edx, 0x40; add rdx, rax; jl short 0x00000000000ac710; add rax, rdi; ret; 
0x0000000016b2e1: sub edx, 0x40; lea r11, [rip+0x52655]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b3c5: sub edx, 0x80; movsxd r9, [r11+r9*4]; add r9, r11; notrack jmp r9; 
0x0000000009c22e: sub edx, 0x8; and eax, 0x1; cmovne rax, rdx; ret; 
0x000000000935c8: sub edx, [rax+0x10]; mov eax, [rdi+0x10]; sub eax, edx; ret; 
0x000000000935b9: sub edx, [rax+0x18]; mov eax, [rdi+0x10]; sub eax, edx; ret; 
0x00000000087ed2: sub edx, [rcx+0x10]; sar rdx, 0x2; sub eax, edx; ret; 
0x00000000151cf1: sub edx, [rcx+0x3beffff]; add [rax], al; add [rbp+rcx*4+0x4c], cl; and al, 0x14; call qword ptr [rax]; 
0x00000000087ee4: sub edx, [rcx+0x8]; sar rdx, 0x2; sub eax, edx; ret; 
0x000000000abf5d: sub edx, eax; jbe 0x00000000000ac200; add rax, rdi; add rax, rcx; ret; 
0x000000000ce14d: sub edx, eax; jbe 0x00000000000ce3f0; add rax, rdi; add rax, rcx; ret; 
0x000000000ac1c4: sub edx, eax; jbe short 0x00000000000ac200; add rax, rdi; ret; 
0x000000000ac1d4: sub edx, eax; jbe short 0x00000000000ac200; lea rax, [rdi+rax+0x10]; ret; 
0x000000000ac1e4: sub edx, eax; jbe short 0x00000000000ac200; lea rax, [rdi+rax+0x20]; ret; 
0x000000000ac1f4: sub edx, eax; jbe short 0x00000000000ac200; lea rax, [rdi+rax+0x30]; ret; 
0x000000000ce3b4: sub edx, eax; jbe short 0x00000000000ce3f0; add rax, rdi; ret; 
0x000000000ce3c4: sub edx, eax; jbe short 0x00000000000ce3f0; lea rax, [rdi+rax+0x10]; ret; 
0x000000000ce3d4: sub edx, eax; jbe short 0x00000000000ce3f0; lea rax, [rdi+rax+0x20]; ret; 
0x000000000ce3e4: sub edx, eax; jbe short 0x00000000000ce3f0; lea rax, [rdi+rax+0x30]; ret; 
0x0000000014945f: sub edx, eax; mov rsi, r12; call qword ptr [r15+0x40]; 
0x00000000149b37: sub edx, eax; mov rsi, rbp; call qword ptr [rbx+0x40]; 
0x000000001141e8: sub edx, eax; test eax, eax; cmovns eax, edx; ret; 
0x000000001496c0: sub edx, ebx; mov rsi, r12; call qword ptr [rbp+0x40]; 
0x000000000baa8c: sub edx, ecx; lea r11, [rip+0xf4aaf]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000ba0fc: sub edx, ecx; lea r11, [rip+0xf53bf]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8b7c: sub edx, ecx; lea r11, [rip+0xf67eb]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b842c: sub edx, ecx; lea r11, [rip+0xf6eaf]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b74ac: sub edx, ecx; lea r11, [rip+0xf7cdb]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6dec: sub edx, ecx; lea r11, [rip+0xf8313]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000012f443: sub edx, ecx; or eax, [rax]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000007d669: sub edx, ecx; sar rdx, 0x2; mov [rbp-0x4d0], rdx; call qword ptr [rax+0x38]; 
0x00000000088aa4: sub edx, esi; call qword ptr [rax+0x70]; 
0x00000000090bca: sub edx, esi; call qword ptr [rbp+0x70]; 
0x00000000074aa2: sub edx, esi; call qword ptr [rbx+0x38]; 
0x00000000183798: sub edx, esi; cmp edx, ecx; jle short 0x00000000001837b4; movsxd rax, ecx; ret; 
0x00000000087a8c: sub edx, esi; cmp r13, rdx; jbe 0x0000000000087c60; mov rdi, r15; call qword ptr [rax+0x20]; 
0x000000000922b3: sub edx, esi; cmp r13, rdx; jbe 0x0000000000092490; mov rdi, rbx; call qword ptr [rax+0x20]; 
0x000000000892bc: sub edx, esi; mov [rsp+0x8], rcx; mov rdi, r15; call rax; 
0x0000000008eaed: sub edx, esi; mov [rsp], rcx; mov rdi, rbp; call rax; 
0x00000000149d09: sub edx, esi; mov rbp, rdx; call qword ptr [rbx+0x10]; 
0x00000000149381: sub edx, esi; mov rsi, rbx; call qword ptr [r15+0x40]; 
0x0000000007b31b: sub edx, esi; sar rdx, 0x2; call qword ptr [r12+0x38]; 
0x0000000014937f: sub edx, r14d; mov rsi, rbx; call qword ptr [r15+0x40]; 
0x00000000149380: sub edx, r14d; mov rsi, rbx; call qword ptr [r15+0x40]; 
0x0000000013c1a1: sub esi, 0x1; mov [rdi+0x1], sil; ret; 
0x000000000beee1: sub esi, [rbp-0x7]; dec dword ptr [rax-0x7d]; ret; 
0x000000001190a6: sub esi, [rcx]; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x5d], bl; ret; 
0x0000000012e7d8: sub esi, [rcx]; ror byte ptr [rdi], 0x5; cmp rax, 0xfffffffffffff000; ja short 0x000000000012e7f0; ret; 
0x0000000005edd8: sub esi, eax; mov rax, [rip+0x18e9cf]; mov rcx, r14; call qword ptr [rax+r8*8]; 
0x0000000011d043: sub esi, ebp; or al, 0x0; mov dword ptr fs:[rax], 0x2; xor eax, eax; ret; 
0x0000000008f789: sub esi, ecx; mov [rsp], r8; mov edx, 0x1; mov rdi, rbp; call qword ptr [rax+0x80]; 
0x0000000004830e: sub esi, edi; syscall; 
0x000000000823e9: sub esi, edx; cmp rax, rsi; jbe short 0x0000000000082448; mov rdi, rbx; call qword ptr [rbp+0x60]; 
0x00000000084eca: sub esi, edx; cmp rax, rsi; jbe short 0x0000000000084f44; mov rdi, rbx; call qword ptr [rbp+0x68]; 
0x000000000871b9: sub esi, edx; cmp rax, rsi; jbe short 0x00000000000871f8; mov rdi, rbx; call qword ptr [rbp+0x20]; 
0x0000000016f6c1: sub esi, edx; lea r11, [rip+0x4e936]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016f541: sub esi, edx; lea r11, [rip+0x4eab6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016f3c1: sub esi, edx; lea r11, [rip+0x4ec36]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016f241: sub esi, edx; lea r11, [rip+0x4edb6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016f0c1: sub esi, edx; lea r11, [rip+0x4ef36]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016ef41: sub esi, edx; lea r11, [rip+0x4f0b6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016edc1: sub esi, edx; lea r11, [rip+0x4f236]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016ec41: sub esi, edx; lea r11, [rip+0x4f3b6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016eac1: sub esi, edx; lea r11, [rip+0x4f536]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016e941: sub esi, edx; lea r11, [rip+0x4f6b6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016e7c1: sub esi, edx; lea r11, [rip+0x4f836]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016e641: sub esi, edx; lea r11, [rip+0x4f9b6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016e4c1: sub esi, edx; lea r11, [rip+0x4fb36]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016e341: sub esi, edx; lea r11, [rip+0x4fcb6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016e1c1: sub esi, edx; lea r11, [rip+0x4fe36]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016e048: sub esi, edx; lea r11, [rip+0x4ffaf]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016cbc1: sub esi, edx; lea r11, [rip+0x50f36]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016ca41: sub esi, edx; lea r11, [rip+0x510b6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016c8c1: sub esi, edx; lea r11, [rip+0x51236]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016c741: sub esi, edx; lea r11, [rip+0x513b6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016c5c1: sub esi, edx; lea r11, [rip+0x51536]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016c441: sub esi, edx; lea r11, [rip+0x516b6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016c2c1: sub esi, edx; lea r11, [rip+0x51836]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016c141: sub esi, edx; lea r11, [rip+0x519b6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016bfc1: sub esi, edx; lea r11, [rip+0x51b36]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016be41: sub esi, edx; lea r11, [rip+0x51cb6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016bcc1: sub esi, edx; lea r11, [rip+0x51e36]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016bb41: sub esi, edx; lea r11, [rip+0x51fb6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b9c1: sub esi, edx; lea r11, [rip+0x52136]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b841: sub esi, edx; lea r11, [rip+0x522b6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b6c1: sub esi, edx; lea r11, [rip+0x52436]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b548: sub esi, edx; lea r11, [rip+0x525af]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000090938: sub esi, edx; mov rdi, rbx; mov edx, 0x1; call qword ptr [r14+0x80]; 
0x00000000054eb3: sub esp, 0x18; mov rsi, rsp; mov edi, 0x3001; mov eax, 0x9e; syscall; 
0x0000000015f39b: sub esp, 0x28; mov r15, [rip+0x8ca4b]; mov [rsp+0x8], rcx; lea rdi, [r15+0x908]; call qword ptr [r15+0xf08]; 
0x0000000011ef57: sub esp, 0x8; call rsi; 
0x0000000015f7cc: sub esp, 0x8; push qword ptr [rax]; mov rax, [rip+0x8c688]; mov rdi, [rdi]; call qword ptr [rax+0x1e8]; 
0x00000000151ac8: sub esp, 0xffffff80; mov eax, r8d; pop rbp; ret; 
0x0000000010dae8: sub esp, 0xffffff80; pop rbp; pop r12; pop r13; ret; 
0x00000000198c77: sub qword ptr [rip+0x57899], 0x1; pop rbp; ret; 
0x0000000015ceda: sub qword ptr [rip+0x94776], 0x1; add rsp, 0x10; mov eax, r8d; pop rbp; ret; 
0x0000000015cdfa: sub qword ptr [rip+0x94856], 0x1; add rsp, 0x10; mov eax, r8d; pop rbp; ret; 
0x00000000142317: sub qword ptr [rip+0xae6f9], 0x1; pop rbp; ret; 
0x00000000157845: sub r11b, r8b; nop [rax+rax]; endbr64; xor eax, eax; ret; 
0x0000000007700d: sub r15, r10; mov rdx, r15; call qword ptr [rax+0x38]; 
0x00000000076999: sub r15, r13; mov rdx, r15; call qword ptr [rax+0x38]; 
0x000000000b8099: sub r8, 0x10; jb 0x00000000000b7649; movdqu [rdi+0x30], xmm7; ret; 
0x000000000b98e9: sub r8, 0x10; jb 0x00000000000b8d29; movdqu [rdi+0x30], xmm7; lea rax, [rdi+0x40]; ret; 
0x000000001782c1: sub r8, 0x10; lea rcx, [rdx+0x10]; jne 0x0000000000178810; ret; 
0x000000000b78c8: sub r8, 0x10; lea rdi, [rdi+0x10]; jne 0x00000000000b7fa0; ret; 
0x000000000b8fec: sub r8, 0x10; lea rdi, [rdi+0x10]; jne 0x00000000000b97f0; ret; 
0x000000000b78eb: sub r8, 0x11; lea rdi, [rdi+0x11]; jne 0x00000000000b7fa0; ret; 
0x000000000b900f: sub r8, 0x11; lea rdi, [rdi+0x11]; jne 0x00000000000b97f0; ret; 
0x000000000b7910: sub r8, 0x12; lea rdi, [rdi+0x12]; jne 0x00000000000b7fa0; ret; 
0x000000000b9034: sub r8, 0x12; lea rdi, [rdi+0x12]; jne 0x00000000000b97f0; ret; 
0x000000000b792e: sub r8, 0x13; lea rdi, [rdi+0x13]; jne 0x00000000000b7fa0; ret; 
0x000000000b9062: sub r8, 0x13; lea rdi, [rdi+0x13]; jne 0x00000000000b97f0; ret; 
0x000000000b794e: sub r8, 0x14; lea rdi, [rdi+0x14]; jne 0x00000000000b7fa0; ret; 
0x000000000b9092: sub r8, 0x14; lea rdi, [rdi+0x14]; jne 0x00000000000b97f0; ret; 
0x000000000b7971: sub r8, 0x15; lea rdi, [rdi+0x15]; jne 0x00000000000b7fa0; ret; 
0x000000000b90c5: sub r8, 0x15; lea rdi, [rdi+0x15]; jne 0x00000000000b97f0; ret; 
0x000000000b7990: sub r8, 0x16; lea rdi, [rdi+0x16]; jne 0x00000000000b7fa0; ret; 
0x000000000b90f4: sub r8, 0x16; lea rdi, [rdi+0x16]; jne 0x00000000000b97f0; ret; 
0x000000000b79b0: sub r8, 0x17; lea rdi, [rdi+0x17]; jne 0x00000000000b7fa0; ret; 
0x000000000b9124: sub r8, 0x17; lea rdi, [rdi+0x17]; jne 0x00000000000b97f0; ret; 
0x000000000b79d0: sub r8, 0x18; lea rdi, [rdi+0x18]; jne 0x00000000000b7fa0; ret; 
0x000000000b9154: sub r8, 0x18; lea rdi, [rdi+0x18]; jne 0x00000000000b97f0; ret; 
0x000000000b79f3: sub r8, 0x19; lea rdi, [rdi+0x19]; jne 0x00000000000b7fa0; ret; 
0x000000000b9187: sub r8, 0x19; lea rdi, [rdi+0x19]; jne 0x00000000000b97f0; ret; 
0x000000001784b7: sub r8, 0x1; lea rcx, [rdx+0x1]; jne 0x0000000000178810; ret; 
0x000000000b76e2: sub r8, 0x1; lea rdi, [rdi+0x1]; jne 0x00000000000b7fa0; ret; 
0x000000000b8dc5: sub r8, 0x1; lea rdi, [rdi+0x1]; jne 0x00000000000b97f0; ret; 
0x0000000018a1d8: sub r8, 0x1; lea rdi, [rdi+0x1]; jne 0x000000000018a610; vzeroupper; ret; 
0x0000000018aef0: sub r8, 0x1; lea rdi, [rdi+0x1]; jne 0x000000000018b340; vzeroupper; ret; 
0x0000000018a3ef: sub r8, 0x1; lea rdi, [rdi+rdx+0x1]; jne 0x000000000018a610; vzeroupper; ret; 
0x0000000018b123: sub r8, 0x1; lea rdi, [rdi+rdx+0x1]; jne 0x000000000018b340; vzeroupper; ret; 
0x000000000b7a28: sub r8, 0x1a; lea rdi, [rdi+0x1a]; jne 0x00000000000b7fa0; ret; 
0x000000000b91bc: sub r8, 0x1a; lea rdi, [rdi+0x1a]; jne 0x00000000000b97f0; ret; 
0x000000000b7a56: sub r8, 0x1b; lea rdi, [rdi+0x1b]; jne 0x00000000000b7fa0; ret; 
0x000000000b91ea: sub r8, 0x1b; lea rdi, [rdi+0x1b]; jne 0x00000000000b97f0; ret; 
0x000000000b7a86: sub r8, 0x1c; lea rdi, [rdi+0x1c]; jne 0x00000000000b7fa0; ret; 
0x000000000b921a: sub r8, 0x1c; lea rdi, [rdi+0x1c]; jne 0x00000000000b97f0; ret; 
0x000000000b7ab2: sub r8, 0x1d; lea rdi, [rdi+0x1d]; jne 0x00000000000b7fa0; ret; 
0x000000000b9246: sub r8, 0x1d; lea rdi, [rdi+0x1d]; jne 0x00000000000b97f0; ret; 
0x000000000b7ae2: sub r8, 0x1e; lea rdi, [rdi+0x1e]; jne 0x00000000000b7fa0; ret; 
0x000000000b9276: sub r8, 0x1e; lea rdi, [rdi+0x1e]; jne 0x00000000000b97f0; ret; 
0x000000000b7b12: sub r8, 0x1f; lea rdi, [rdi+0x1f]; jne 0x00000000000b7fa0; ret; 
0x000000000b92a6: sub r8, 0x1f; lea rdi, [rdi+0x1f]; jne 0x00000000000b97f0; ret; 
0x0000000018a70b: sub r8, 0x20; jb 0x000000000018a325; vmovdqu [rdi+0x60], ymm7; vzeroupper; ret; 
0x000000000b7b42: sub r8, 0x20; lea rdi, [rdi+0x20]; jne 0x00000000000b7fa0; ret; 
0x000000000b92d6: sub r8, 0x20; lea rdi, [rdi+0x20]; jne 0x00000000000b97f0; ret; 
0x000000001784d9: sub r8, 0x2; lea rcx, [rdx+0x2]; jne 0x0000000000178810; ret; 
0x000000000b7706: sub r8, 0x2; lea rdi, [rdi+0x2]; jne 0x00000000000b7fa0; ret; 
0x000000000b8dea: sub r8, 0x2; lea rdi, [rdi+0x2]; jne 0x00000000000b97f0; ret; 
0x0000000018a386: sub r8, 0x2; lea rdi, [rdi+0x2]; jne 0x000000000018a610; vzeroupper; ret; 
0x0000000018b0ba: sub r8, 0x2; lea rdi, [rdi+0x2]; jne 0x000000000018b340; vzeroupper; ret; 
0x000000001784ff: sub r8, 0x3; lea rcx, [rdx+0x3]; jne 0x0000000000178810; ret; 
0x000000000b7729: sub r8, 0x3; lea rdi, [rdi+0x3]; jne 0x00000000000b7fa0; ret; 
0x000000000b8e0d: sub r8, 0x3; lea rdi, [rdi+0x3]; jne 0x00000000000b97f0; ret; 
0x0000000018a3aa: sub r8, 0x3; lea rdi, [rdi+0x3]; jne 0x000000000018a610; vzeroupper; ret; 
0x0000000018b0de: sub r8, 0x3; lea rdi, [rdi+0x3]; jne 0x000000000018b340; vzeroupper; ret; 
0x00000000178517: sub r8, 0x4; lea rcx, [rdx+0x4]; jne 0x0000000000178810; ret; 
0x000000000b7744: sub r8, 0x4; lea rdi, [rdi+0x4]; jne 0x00000000000b7fa0; ret; 
0x000000000b8e28: sub r8, 0x4; lea rdi, [rdi+0x4]; jne 0x00000000000b97f0; ret; 
0x0000000018a3c4: sub r8, 0x4; lea rdi, [rdi+0x4]; jne 0x000000000018a610; vzeroupper; ret; 
0x0000000018b0f8: sub r8, 0x4; lea rdi, [rdi+0x4]; jne 0x000000000018b340; vzeroupper; ret; 
0x0000000017853d: sub r8, 0x5; lea rcx, [rdx+0x5]; jne 0x0000000000178810; ret; 
0x000000000b7767: sub r8, 0x5; lea rdi, [rdi+0x5]; jne 0x00000000000b7fa0; ret; 
0x000000000b8e4b: sub r8, 0x5; lea rdi, [rdi+0x5]; jne 0x00000000000b97f0; ret; 
0x0000000017855f: sub r8, 0x6; lea rcx, [rdx+0x6]; jne 0x0000000000178810; ret; 
0x000000000b778c: sub r8, 0x6; lea rdi, [rdi+0x6]; jne 0x00000000000b7fa0; ret; 
0x000000000b8e70: sub r8, 0x6; lea rdi, [rdi+0x6]; jne 0x00000000000b97f0; ret; 
0x0000000017857d: sub r8, 0x7; lea rcx, [rdx+0x7]; jne 0x0000000000178810; ret; 
0x000000000b77aa: sub r8, 0x7; lea rdi, [rdi+0x7]; jne 0x00000000000b7fa0; ret; 
0x000000000b8e8e: sub r8, 0x7; lea rdi, [rdi+0x7]; jne 0x00000000000b97f0; ret; 
0x00000000055c6b: sub r8, 0x8; cmp r8, 0xfffffffffffffff8; jne short 0x0000000000055c60; mov rax, rdx; ret; 
0x00000000178259: sub r8, 0x8; lea rcx, [rdx+0x8]; jne 0x0000000000178810; ret; 
0x000000000b77c6: sub r8, 0x8; lea rdi, [rdi+0x8]; jne 0x00000000000b7fa0; ret; 
0x000000000b8eaa: sub r8, 0x8; lea rdi, [rdi+0x8]; jne 0x00000000000b97f0; ret; 
0x0000000017859f: sub r8, 0x9; lea rcx, [rdx+0x9]; jne 0x0000000000178810; ret; 
0x000000000b77e9: sub r8, 0x9; lea rdi, [rdi+0x9]; jne 0x00000000000b7fa0; ret; 
0x000000000b8ecd: sub r8, 0x9; lea rdi, [rdi+0x9]; jne 0x00000000000b97f0; ret; 
0x000000001785bf: sub r8, 0xa; lea rcx, [rdx+0xa]; jne 0x0000000000178810; ret; 
0x000000000b780e: sub r8, 0xa; lea rdi, [rdi+0xa]; jne 0x00000000000b7fa0; ret; 
0x000000000b8ef2: sub r8, 0xa; lea rdi, [rdi+0xa]; jne 0x00000000000b97f0; ret; 
0x000000001785df: sub r8, 0xb; lea rcx, [rdx+0xb]; jne 0x0000000000178810; ret; 
0x000000000b782c: sub r8, 0xb; lea rdi, [rdi+0xb]; jne 0x00000000000b7fa0; ret; 
0x000000000b8f20: sub r8, 0xb; lea rdi, [rdi+0xb]; jne 0x00000000000b97f0; ret; 
0x000000001785ff: sub r8, 0xc; lea rcx, [rdx+0xc]; jne 0x0000000000178810; ret; 
0x000000000b784c: sub r8, 0xc; lea rdi, [rdi+0xc]; jne 0x00000000000b7fa0; ret; 
0x000000000b8f40: sub r8, 0xc; lea rdi, [rdi+0xc]; jne 0x00000000000b97f0; ret; 
0x00000000178621: sub r8, 0xd; lea rcx, [rdx+0xd]; jne 0x0000000000178810; ret; 
0x000000000b786e: sub r8, 0xd; lea rdi, [rdi+0xd]; jne 0x00000000000b7fa0; ret; 
0x000000000b8f62: sub r8, 0xd; lea rdi, [rdi+0xd]; jne 0x00000000000b97f0; ret; 
0x00000000178641: sub r8, 0xe; lea rcx, [rdx+0xe]; jne 0x0000000000178810; ret; 
0x000000000b788e: sub r8, 0xe; lea rdi, [rdi+0xe]; jne 0x00000000000b7fa0; ret; 
0x000000000b8f92: sub r8, 0xe; lea rdi, [rdi+0xe]; jne 0x00000000000b97f0; ret; 
0x00000000178661: sub r8, 0xf; lea rcx, [rdx+0xf]; jne 0x0000000000178810; ret; 
0x000000000b78ae: sub r8, 0xf; lea rdi, [rdi+0xf]; jne 0x00000000000b7fa0; ret; 
0x000000000b8fc2: sub r8, 0xf; lea rdi, [rdi+0xf]; jne 0x00000000000b97f0; ret; 
0x000000000d0b7a: sub r8, rax; add r14, r8; mov [rsp+0x88], r14; call rbp; 
0x00000000149247: sub r8d, edx; pop rbx; pop rbp; mov eax, r8d; ret; 
0x000000000aef77: sub r9, rcx; lea r10, [rip+0x100107]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x000000000acd07: sub r9, rcx; lea r10, [rip+0x1022f7]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x000000000aa727: sub r9, rcx; lea r10, [rip+0x104857]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x000000000a9007: sub r9, rcx; lea r10, [rip+0x105ef7]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000172bd7: sub r9, rcx; lea r10, [rip+0x3c4e7]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000170a57: sub r9, rcx; lea r10, [rip+0x3e5e7]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x000000001646a7: sub r9, rcx; lea r10, [rip+0x4a917]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000163417: sub r9, rcx; lea r10, [rip+0x4bb27]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000009c2a1: sub rax, 0x10; ret; 
0x00000000094e9b: sub rax, 0x11; shr rax, 0x4; lea rdx, [rax+0x1]; mov [rip+0x157422], rdx; ret; 
0x000000000bb873: sub rax, 0x1; ret; 
0x000000001498d4: sub rax, 0x4; bswap eax; mov [rdx], eax; mov edx, ebx; call qword ptr [r13+0x10]; 
0x000000001498d3: sub rax, 0x4; bswap eax; mov [rdx], eax; mov edx, ebx; call qword ptr [r13+0x10]; 
0x0000000005b35e: sub rax, 0x4; cmp rdi, rax; jbe short 0x000000000005b35a; mov rax, r10; ret; 
0x00000000093ed1: sub rax, [rdi+0x18]; ret; 
0x0000000008ce5c: sub rax, [rdi+0x20]; ret; 
0x00000000127686: sub rax, [rdi+0x38]; cmp rax, rsi; jb short 0x00000000001276a0; mov eax, 0x1; ret; 
0x0000000008cd2a: sub rax, [rdi+0x38]; ret; 
0x00000000088618: sub rax, [rdx+0x10]; sar rax, 0x2; ret; 
0x0000000008ce49: sub rax, [rdx+0x18]; sar rax, 0x2; ret; 
0x0000000008cd19: sub rax, [rdx+0x30]; sar rax, 0x2; ret; 
0x0000000008f9d8: sub rax, r12; cmp rax, rbx; jae 0x000000000008fa90; mov rdi, rbp; call qword ptr [r13+0x20]; 
0x0000000008fcdd: sub rax, r12; cmp rbx, rax; jbe 0x000000000008fd90; mov rdi, rbp; call qword ptr [r13+0x20]; 
0x00000000147712: sub rax, r12; mov [rbx+0x18], rax; mov rax, [rbp+0x8]; call qword ptr [rax+0x28]; 
0x000000000469d1: sub rax, rbx; shr rax, 0x3; lea r12, [rbx+rax*8+0x8]; nop [rax]; call qword ptr [rbx]; 
0x00000000198a1c: sub rax, rbx; shr rax, 0x3; lea rbp, [rbx+rax*8+0x8]; nop [rax+rax]; call qword ptr [rbx]; 
0x00000000184d22: sub rax, rcx; je short 0x0000000000184d30; sbb eax, eax; or eax, 0x1; ret; 
0x00000000092a58: sub rax, rcx; sub eax, 0x1; ret; 
0x000000000b1d78: sub rax, rdi; ret; 
0x000000000cf87d: sub rax, rdi; shr rax, 0x2; ret; 
0x0000000008b72b: sub rax, rdx; mov [rcx], rax; xor eax, eax; pop rbx; ret; 
0x0000000008f590: sub rax, rdx; pop rbp; pop r12; ret; 
0x0000000004733c: sub rax, rdx; ret; 
0x0000000018cfaf: sub rax, rdx; shr rax, 0x2; vzeroupper; ret; 
0x00000000041ef8: sub rax, rdx; shr rax, 0x3f; ret; 
0x0000000018863f: sub rax, rdx; vzeroupper; ret; 
0x0000000007d0d2: sub rbx, r14; mov r13, rbx; sar r13, 0x2; mov rdx, r13; call qword ptr [rax+0x38]; 
0x0000000015f721: sub rcx, [rax+0x10]; cmp rcx, [rax+0x28]; jae short 0x000000000015f710; mov eax, 0x1; ret; 
0x00000000087e28: sub rcx, rax; sar rcx, 0x2; lea eax, [rcx-0x1]; ret; 
0x0000000010c6b3: sub rcx, rdi; add ecx, 0x150; shr ecx, 0x3; rep stosq [rdi]; ret; 
0x00000000043b15: sub rcx, rdi; sub ecx, 0xffffff80; shr ecx, 0x3; rep stosq [rdi]; ret; 
0x0000000008b0e1: sub rcx, rdx; cmp rax, rcx; jbe 0x000000000008b2c0; mov rdi, rbx; call qword ptr [rbp+0x60]; 
0x0000000008cab1: sub rcx, rdx; cmp rax, rcx; jbe 0x000000000008cc80; mov rdi, rbx; call qword ptr [rbp+0x60]; 
0x0000000008fe79: sub rcx, rdx; cmp rax, rcx; jbe 0x000000000008ff70; mov rdi, rbx; call qword ptr [r12+0x88]; 
0x00000000092542: sub rcx, rdx; cmp rax, rcx; jbe 0x0000000000092618; mov rdi, rbx; call qword ptr [r13+0x60]; 
0x00000000087d3d: sub rcx, rdx; cmp rax, rcx; jbe short 0x0000000000087d70; mov rdi, rbx; call qword ptr [rbp+0x30]; 
0x0000000008dff9: sub rcx, rdx; cmp rax, rcx; jbe short 0x000000000008e020; call qword ptr [rbx+0x60]; 
0x0000000008ffd9: sub rcx, rdx; cmp rax, rcx; jbe short 0x0000000000090018; mov rdi, rbp; call qword ptr [rbx+0x88]; 
0x00000000091ef2: sub rcx, rdx; cmp rax, rcx; jbe short 0x0000000000091f60; mov rdi, rbx; call qword ptr [rbp+0x68]; 
0x00000000091fa8: sub rcx, rdx; cmp rax, rcx; jbe short 0x0000000000091fd8; mov rdi, rbx; call qword ptr [rbp+0x20]; 
0x00000000092968: sub rcx, rdx; cmp rax, rcx; jbe short 0x00000000000929a0; mov rdi, rbx; call qword ptr [rbp+0x30]; 
0x0000000014919e: sub rcx, rsi; mov [rdx+0x58], rdi; mov [rdx+0x68], rcx; ret; 
0x000000000cf37b: sub rdi, 0x10; add rax, rdi; ret; 
0x00000000168ca2: sub rdi, 0x20; lea r11, [rip+0x54c93]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001662c2: sub rdi, 0x20; lea r11, [rip+0x574b3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168bb1: sub rdi, 0x40; lea r11, [rip+0x54d84]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168af1: sub rdi, 0x40; lea r11, [rip+0x54e43]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001661d1: sub rdi, 0x40; lea r11, [rip+0x575a4]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000166111: sub rdi, 0x40; lea r11, [rip+0x57663]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000008e508: sub rdi, rcx; cmp rax, rdi; jbe short 0x000000000008e530; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x0000000016fa1e: sub rdi, rdx; lea r11, [rip+0x4e5d8]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016ceea: sub rdi, rdx; lea r11, [rip+0x50c0c]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000ac6f3: sub rdx, 0x10; add rdx, rax; jl short 0x00000000000ac710; lea rax, [rdi+rax+0x30]; ret; 
0x00000000055658: sub rdx, 0x1; jne short 0x0000000000055640; mov eax, 0x1; ret; 
0x000000000558a0: sub rdx, 0x1; jne short 0x0000000000055888; mov eax, 0x1; ret; 
0x000000001460e0: sub rdx, 0x1; jne short 0x0000000000146068; ret; 
0x000000000ac6d3: sub rdx, 0x20; add rdx, rax; jl short 0x00000000000ac710; lea rax, [rdi+rax+0x20]; ret; 
0x000000000ac6b3: sub rdx, 0x30; add rdx, rax; jl short 0x00000000000ac710; lea rax, [rdi+rax+0x10]; ret; 
0x000000000ac6a3: sub rdx, 0x40; add rdx, rax; jl short 0x00000000000ac710; add rax, rdi; ret; 
0x0000000016b2e0: sub rdx, 0x40; lea r11, [rip+0x52655]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b3c4: sub rdx, 0x80; movsxd r9, [r11+r9*4]; add r9, r11; notrack jmp r9; 
0x0000000009c22d: sub rdx, 0x8; and eax, 0x1; cmovne rax, rdx; ret; 
0x00000000087ed1: sub rdx, [rcx+0x10]; sar rdx, 0x2; sub eax, edx; ret; 
0x00000000087ee3: sub rdx, [rcx+0x8]; sar rdx, 0x2; sub eax, edx; ret; 
0x00000000087a8b: sub rdx, r14; cmp r13, rdx; jbe 0x0000000000087c60; mov rdi, r15; call qword ptr [rax+0x20]; 
0x000000000922b2: sub rdx, r14; cmp r13, rdx; jbe 0x0000000000092490; mov rdi, rbx; call qword ptr [rax+0x20]; 
0x0000000007d668: sub rdx, r9; sar rdx, 0x2; mov [rbp-0x4d0], rdx; call qword ptr [rax+0x38]; 
0x000000000abf5c: sub rdx, rax; jbe 0x00000000000ac200; add rax, rdi; add rax, rcx; ret; 
0x000000000ce14c: sub rdx, rax; jbe 0x00000000000ce3f0; add rax, rdi; add rax, rcx; ret; 
0x000000000ac1c3: sub rdx, rax; jbe short 0x00000000000ac200; add rax, rdi; ret; 
0x000000000ac1d3: sub rdx, rax; jbe short 0x00000000000ac200; lea rax, [rdi+rax+0x10]; ret; 
0x000000000ac1e3: sub rdx, rax; jbe short 0x00000000000ac200; lea rax, [rdi+rax+0x20]; ret; 
0x000000000ac1f3: sub rdx, rax; jbe short 0x00000000000ac200; lea rax, [rdi+rax+0x30]; ret; 
0x000000000ce3b3: sub rdx, rax; jbe short 0x00000000000ce3f0; add rax, rdi; ret; 
0x000000000ce3c3: sub rdx, rax; jbe short 0x00000000000ce3f0; lea rax, [rdi+rax+0x10]; ret; 
0x000000000ce3d3: sub rdx, rax; jbe short 0x00000000000ce3f0; lea rax, [rdi+rax+0x20]; ret; 
0x000000000ce3e3: sub rdx, rax; jbe short 0x00000000000ce3f0; lea rax, [rdi+rax+0x30]; ret; 
0x000000000baa8b: sub rdx, rcx; lea r11, [rip+0xf4aaf]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000ba0fb: sub rdx, rcx; lea r11, [rip+0xf53bf]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b8b7b: sub rdx, rcx; lea r11, [rip+0xf67eb]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b842b: sub rdx, rcx; lea r11, [rip+0xf6eaf]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b74ab: sub rdx, rcx; lea r11, [rip+0xf7cdb]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000000b6deb: sub rdx, rcx; lea r11, [rip+0xf8313]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000088aa3: sub rdx, rsi; call qword ptr [rax+0x70]; 
0x00000000090bc9: sub rdx, rsi; call qword ptr [rbp+0x70]; 
0x00000000074aa1: sub rdx, rsi; call qword ptr [rbx+0x38]; 
0x000000000892ba: sub rdx, rsi; mov [rsp+0x8], rcx; mov rdi, r15; call rax; 
0x0000000008eaeb: sub rdx, rsi; mov [rsp], rcx; mov rdi, rbp; call rax; 
0x00000000149d08: sub rdx, rsi; mov rbp, rdx; call qword ptr [rbx+0x10]; 
0x0000000007b31a: sub rdx, rsi; sar rdx, 0x2; call qword ptr [r12+0x38]; 
0x0000000005edd7: sub rsi, rax; mov rax, [rip+0x18e9cf]; mov rcx, r14; call qword ptr [rax+r8*8]; 
0x0000000008f788: sub rsi, rcx; mov [rsp], r8; mov edx, 0x1; mov rdi, rbp; call qword ptr [rax+0x80]; 
0x0000000004830d: sub rsi, rdi; syscall; 
0x000000000823e8: sub rsi, rdx; cmp rax, rsi; jbe short 0x0000000000082448; mov rdi, rbx; call qword ptr [rbp+0x60]; 
0x00000000084ec9: sub rsi, rdx; cmp rax, rsi; jbe short 0x0000000000084f44; mov rdi, rbx; call qword ptr [rbp+0x68]; 
0x000000000871b8: sub rsi, rdx; cmp rax, rsi; jbe short 0x00000000000871f8; mov rdi, rbx; call qword ptr [rbp+0x20]; 
0x0000000016f6c0: sub rsi, rdx; lea r11, [rip+0x4e936]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016f540: sub rsi, rdx; lea r11, [rip+0x4eab6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016f3c0: sub rsi, rdx; lea r11, [rip+0x4ec36]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016f240: sub rsi, rdx; lea r11, [rip+0x4edb6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016f0c0: sub rsi, rdx; lea r11, [rip+0x4ef36]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016ef40: sub rsi, rdx; lea r11, [rip+0x4f0b6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016edc0: sub rsi, rdx; lea r11, [rip+0x4f236]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016ec40: sub rsi, rdx; lea r11, [rip+0x4f3b6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016eac0: sub rsi, rdx; lea r11, [rip+0x4f536]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016e940: sub rsi, rdx; lea r11, [rip+0x4f6b6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016e7c0: sub rsi, rdx; lea r11, [rip+0x4f836]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016e640: sub rsi, rdx; lea r11, [rip+0x4f9b6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016e4c0: sub rsi, rdx; lea r11, [rip+0x4fb36]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016e340: sub rsi, rdx; lea r11, [rip+0x4fcb6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016e1c0: sub rsi, rdx; lea r11, [rip+0x4fe36]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016e047: sub rsi, rdx; lea r11, [rip+0x4ffaf]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016cbc0: sub rsi, rdx; lea r11, [rip+0x50f36]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016ca40: sub rsi, rdx; lea r11, [rip+0x510b6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016c8c0: sub rsi, rdx; lea r11, [rip+0x51236]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016c740: sub rsi, rdx; lea r11, [rip+0x513b6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016c5c0: sub rsi, rdx; lea r11, [rip+0x51536]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016c440: sub rsi, rdx; lea r11, [rip+0x516b6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016c2c0: sub rsi, rdx; lea r11, [rip+0x51836]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016c140: sub rsi, rdx; lea r11, [rip+0x519b6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016bfc0: sub rsi, rdx; lea r11, [rip+0x51b36]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016be40: sub rsi, rdx; lea r11, [rip+0x51cb6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016bcc0: sub rsi, rdx; lea r11, [rip+0x51e36]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016bb40: sub rsi, rdx; lea r11, [rip+0x51fb6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b9c0: sub rsi, rdx; lea r11, [rip+0x52136]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b840: sub rsi, rdx; lea r11, [rip+0x522b6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b6c0: sub rsi, rdx; lea r11, [rip+0x52436]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b547: sub rsi, rdx; lea r11, [rip+0x525af]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000090937: sub rsi, rdx; mov rdi, rbx; mov edx, 0x1; call qword ptr [r14+0x80]; 
0x00000000054eb2: sub rsp, 0x18; mov rsi, rsp; mov edi, 0x3001; mov eax, 0x9e; syscall; 
0x00000000054eb1: sub rsp, 0x18; mov rsi, rsp; mov edi, 0x3001; mov eax, 0x9e; syscall; 
0x0000000015f39a: sub rsp, 0x28; mov r15, [rip+0x8ca4b]; mov [rsp+0x8], rcx; lea rdi, [r15+0x908]; call qword ptr [r15+0xf08]; 
0x0000000011ef56: sub rsp, 0x8; call rsi; 
0x0000000015f7cb: sub rsp, 0x8; push qword ptr [rax]; mov rax, [rip+0x8c688]; mov rdi, [rdi]; call qword ptr [rax+0x1e8]; 
0x00000000151ac7: sub rsp, 0xffffffffffffff80; mov eax, r8d; pop rbp; ret; 
0x0000000010dae7: sub rsp, 0xffffffffffffff80; pop rbp; pop r12; pop r13; ret; 
0x00000000041fe7: subps xmm0, xmm1; ret; 
0x0000000004234f: subps xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x00000000041fe6: subsd xmm0, xmm1; ret; 
0x0000000004234e: subss xmm1, xmm0; movaps xmm0, xmm1; ret; 
0x0000000002284d: syscall; 
0x0000000016cbc6: syscall; 
0x0000000011b20b: sysret; add [rax], al; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x000000000b92df: test [rax*1+0x66c30000], ecx; nop [rax+rax]; mov rax, rdi; ret; 
0x0000000003429a: test [rax+0x200], bh; ret; 
0x0000000018a3b3: test [rax+0x2], ebx; add [rax], al; vzeroupper; ret; 
0x0000000018b0c3: test [rax+0x2], edi; add [rax], al; vzeroupper; ret; 
0x0000000009df03: test [rax+0x48000000], ch; mov esi, ebp; mov rdi, r12; call rax; 
0x0000000015181b: test [rax+0x48000000], dl; mov eax, [rdi+0x8]; lea rdx, [rsp+0xc]; mov esi, 0xd; call qword ptr [rax+0x28]; 
0x00000000155e12: test [rax+0x48000000], ebx; add esp, 0x28; pop rbx; pop rbp; ret; 
0x00000000043359: test [rax+0x48000000], ebx; add esp, 0x98; ret; 
0x0000000018b52b: test [rax+0x48fffffc], ah; mov eax, edi; vzeroupper; ret; 
0x0000000009e7fc: test [rax+0x48fffffe], edx; mov eax, [rip+0x14d748]; call qword ptr [rax]; 
0x0000000011ac9c: test [rax+0x49000002], ecx; mov edi, [rdi]; call rbx; 
0x0000000011ad50: test [rax+0x49000002], esi; mov edi, [rdi]; call rbx; 
0x00000000119c40: test [rax+0x49000003], cl; mov esi, [rsi]; mov rax, [rsp+0x8]; mov rdi, r13; call rax; 
0x000000000b7b4b: test [rax+0x4], edx; add [rax], al; ret; 
0x0000000018892b: test [rax+0x4c000000], esp; mov eax, eax; vzeroupper; ret; 
0x0000000010cf8c: test [rax+0x4cfffffe], ebx; mov esi, esp; lea rdi, [rip+0xa7622]; mov rdx, [rax+0xb0]; call qword ptr [rax+0x88]; 
0x0000000017c5f3: test [rax+0x6], ebp; add [rax], al; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x000000000b909b: test [rax+0x7], edx; add [rax], al; ret; 
0x000000000b8f9b: test [rax+0x8], edx; add [rax], al; ret; 
0x0000000013f783: test [rax+0xf000004], bh; mov dh, 0x53; add [rax-0x7d], ecx; ret; 
0x0000000018e0de: test [rax+0xf000009], eax; mov dh, 0x47; dec dword ptr [rdi]; mov dh, 0x56; jmp far fword ptr [rcx]; 
0x00000000155987: test [rax+rax+0x1b80000], eax; add [rax], al; add [rbp-0x7b], al; in al, 0x74; ret; 
0x00000000190c2f: test [rax+rax+0x40a80000], edi; jne 0x0000000000190d00; lea rax, [rdi+0x7]; ret; 
0x000000001845e7: test [rax+rax-0x3fcf0000], edx; vzeroupper; ret; 
0x000000000cf5df: test [rax+rax-0xf580000], ebp; jne 0x00000000000cf680; lea rax, [rdi-0x10]; ret; 
0x00000000023a6b: test [rax+rax], bl; cmp [rdx+0xd8], rax; jne short 0x0000000000023a3b; ret; 
0x00000000160827: test [rax+rax], edi; add [rax-0x75], cl; and al, 0x10; mov rdi, [rsp+0x18]; call rcx; 
0x00000000098d37: test [rax+rax], edi; add [rbx+0x153e3d2d], al; add [rcx], al; pop rbp; ret; 
0x0000000010c95d: test [rax+rbp*8], ah; add [rax], al; add [rax+0xe], bh; syscall; 
0x0000000010d603: test [rax+rbx*4], ah; add [rax], eax; add [rcx], dh; shl bh, 0xc2; jmp rsi; 
0x00000000181e78: test [rax+rbx-0x76b30000], al; ret far; 
0x0000000004a0df: test [rax+rbx-0x7fc00000], ch; jmp qword ptr [rbp+0xf]; 
0x00000000053a92: test [rax+rdx*8], ah; add [rax], al; add al, ch; ret; 
0x00000000069f8a: test [rax-0x16000005], edx; pop rbx; ret far; 
0x000000000330f7: test [rax-0x3eb7ffe5], ebp; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x00000000106c02: test [rax-0x7d000000], ch; call far fword ptr [rax-0x72b7dd8c]; 
0x0000000017caab: test [rax-0x7fffffff], esi; cmp [rcx], al; sbb rax, 0xffffffffffffffff; ret; 
0x000000000df328: test [rax], ah; add [rax-0x77], cl; ret; 
0x00000000042fea: test [rax], ah; add [rax], al; add [rdi], cl; sub [rsp+0xf0], eax; syscall; 
0x00000000173ddc: test [rax], al; adc al, [rax]; add [rbp-0x77], cl; ret far; 
0x000000000cfb2a: test [rax], al; add [rax], al; add [rax], al; add rax, 0x3; ret; 
0x0000000009a78a: test [rax], al; add [rax], al; add [rax], al; add rsp, 0x18; ret; 
0x00000000198a2a: test [rax], al; add [rax], al; add [rax], al; call qword ptr [rbx]; 
0x0000000012d86a: test [rax], al; add [rax], al; add [rax], al; endbr64; ret; 
0x00000000190cba: test [rax], al; add [rax], al; add [rax], al; lea rax, [rdi+0x2]; ret; 
0x00000000190cca: test [rax], al; add [rax], al; add [rax], al; lea rax, [rdi+0x3]; ret; 
0x00000000190cda: test [rax], al; add [rax], al; add [rax], al; lea rax, [rdi+0x4]; ret; 
0x00000000190cea: test [rax], al; add [rax], al; add [rax], al; lea rax, [rdi+0x5]; ret; 
0x00000000190cfa: test [rax], al; add [rax], al; add [rax], al; lea rax, [rdi+0x6]; ret; 
0x00000000190d0a: test [rax], al; add [rax], al; add [rax], al; lea rax, [rdi+0x8]; ret; 
0x00000000190d1a: test [rax], al; add [rax], al; add [rax], al; lea rax, [rdi+0x9]; ret; 
0x00000000190d2a: test [rax], al; add [rax], al; add [rax], al; lea rax, [rdi+0xa]; ret; 
0x00000000190d3a: test [rax], al; add [rax], al; add [rax], al; lea rax, [rdi+0xb]; ret; 
0x00000000190d4a: test [rax], al; add [rax], al; add [rax], al; lea rax, [rdi+0xc]; ret; 
0x00000000190d5a: test [rax], al; add [rax], al; add [rax], al; lea rax, [rdi+0xd]; ret; 
0x00000000190d6a: test [rax], al; add [rax], al; add [rax], al; lea rax, [rdi+0xe]; ret; 
0x000000000cf69a: test [rax], al; add [rax], al; add [rax], al; lea rax, [rdi-0x4]; ret; 
0x000000000cf68a: test [rax], al; add [rax], al; add [rax], al; lea rax, [rdi-0x8]; ret; 
0x000000000cf67a: test [rax], al; add [rax], al; add [rax], al; lea rax, [rdi-0xc]; ret; 
0x000000000328ea: test [rax], al; add [rax], al; add [rax], al; lea rax, [rip+0x181a86]; ret; 
0x0000000014867a: test [rax], al; add [rax], al; add [rax], al; lea rdx, [rip+0xa34d9]; jmp qword ptr [rdx+rax*8]; 
0x000000001786aa: test [rax], al; add [rax], al; add [rax], al; mov [rcx], edx; ret; 
0x000000001786ea: test [rax], al; add [rax], al; add [rax], al; mov [rcx], rdx; ret; 
0x000000000b7eca: test [rax], al; add [rax], al; add [rax], al; mov [rdi-0x1], rdx; ret; 
0x000000000b6e7a: test [rax], al; add [rax], al; add [rax], al; mov [rdi], dh; ret; 
0x000000000b7eda: test [rax], al; add [rax], al; add [rax], al; mov [rdi], rdx; ret; 
0x0000000009e88a: test [rax], al; add [rax], al; add [rax], al; mov eax, 0x1; ret; 
0x000000000f24ca: test [rax], al; add [rax], al; add [rax], al; mov eax, 0xc; ret; 
0x0000000004410a: test [rax], al; add [rax], al; add [rax], al; mov eax, 0xffffffff; ret; 
0x000000000cfb5a: test [rax], al; add [rax], al; add [rax], al; mov rax, 0x2; ret; 
0x000000000cfb6a: test [rax], al; add [rax], al; add [rax], al; mov rax, 0x3; ret; 
0x000000000cfb7a: test [rax], al; add [rax], al; add [rax], al; mov rax, 0x4; ret; 
0x000000000cfb8a: test [rax], al; add [rax], al; add [rax], al; mov rax, 0x5; ret; 
0x000000000cfb9a: test [rax], al; add [rax], al; add [rax], al; mov rax, 0x6; ret; 
0x000000000cfbaa: test [rax], al; add [rax], al; add [rax], al; mov rax, 0x7; ret; 
0x0000000015710a: test [rax], al; add [rax], al; add [rax], al; mov rax, [rdi+0x8]; jmp qword ptr [rax+0x48]; 
0x0000000009e54a: test [rax], al; add [rax], al; add [rax], al; mov rax, [rip+0x14d9f9]; call qword ptr [rax]; 
0x000000000328fa: test [rax], al; add [rax], al; add [rax], al; mov rax, [rsi+rax*8+0x80]; ret; 
0x000000000b92ea: test [rax], al; add [rax], al; add [rax], al; mov rax, rdi; ret; 
0x0000000009c99a: test [rax], al; add [rax], al; add [rax], al; mov rsi, r12; call rax; 
0x000000000b7f4a: test [rax], al; add [rax], al; add [rax], al; movdqu [rdi-0x1], xmm0; ret; 
0x000000000b7f5a: test [rax], al; add [rax], al; add [rax], al; movdqu [rdi], xmm0; ret; 
0x000000000b7b56: test [rax], al; add [rax], al; add [rax], al; nop [rax]; ret; 
0x00000000042e1a: test [rax], al; add [rax], al; add [rax], al; ret; 
0x00000000189b0a: test [rax], al; add [rax], al; add [rax], al; vzeroupper; ret; 
0x000000000467ca: test [rax], al; add [rax], al; add [rax], al; xor eax, eax; ret; 
0x000000000cf6aa: test [rax], al; add [rax], al; add [rax], al; xor rax, rax; ret; 
0x0000000010d405: test [rax], al; add [rax], al; syscall; 
0x0000000007bab2: test [rax], al; add eax, 0x83410000; out dx, eax; add [rax-0x93b43], eax; jmp qword ptr [rax]; 
0x000000001746dc: test [rax], al; or [rax], eax; add [rbp-0x77], cl; ret far; 
0x000000001734dc: test [rax], al; sbb eax, [rax]; add [rbp-0x77], cl; ret far; 
0x00000000148c94: test [rax], ch; add [rax], eax; add [rcx+rcx*4-0x19], cl; call qword ptr [rbx]; 
0x00000000116783: test [rax], ch; add al, [rax]; add [rax-0x3d7cb7fe], cl; add [rax-0x7d], ecx; ret; 
0x000000000b043c: test [rax], dh; adc [rax], al; add [rbp-0x77], cl; ret far; 
0x0000000007a3ea: test [rax], eax; add [rax], al; add [rax+0x29], cl; ret; 
0x0000000010d92c: test [rax], eax; add [rax], al; syscall; 
0x00000000074e0f: test [rax], eax; idiv edi; jmp qword ptr [rax]; 
0x0000000007a4d2: test [rax], ebp; idiv edi; jmp qword ptr [rax+rcx*2-0x75]; 
0x0000000006254c: test [rax], ebx; add [rax+0x63], cl; ret; 
0x00000000108261: test [rax], ebx; idiv edi; jmp qword ptr [rax+rcx*2-0x75]; 
0x00000000073e2d: test [rax], edi; idiv edi; jmp qword ptr [rax+rcx*2-0x75]; 
0x0000000017ca4b: test [rax], edx; add al, [rax]; add [rax-0x7cb7fec8], al; fdivr st, st(7); ret; 
0x00000000074f7d: test [rax], edx; idiv edi; inc dword ptr [rcx]; ret; 
0x0000000007592a: test [rax], edx; idiv edi; jmp far fword ptr [rcx]; 
0x0000000013b4c3: test [rax], esp; add [rax], eax; add [rax+0x63], cl; ret; 
0x0000000009d50d: test [rbp+0x48000000], ebp; add esp, 0x10; mov eax, r12d; pop r12; ret; 
0x0000000009d630: test [rbp+0x48000000], ebp; add esp, 0x18; ret; 
0x0000000014d1ae: test [rbp+0x48000001], ch; mov eax, [rbx+0xd0]; mov rsi, [rsp+0x18]; mov rdi, r12; call qword ptr [rax+0x8]; 
0x000000001789c6: test [rbp+0x48fffffb], ah; mov eax, [rcx]; mov [rdx], rax; mov rax, rdi; ret; 
0x0000000011a966: test [rbp+0x49000000], esp; mov edi, [rbp]; call rbx; 
0x0000000015046e: test [rbp+0x49000001], dl; mov eax, [rsi+0x70]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x0000000011aa26: test [rbp+0x49000002], esi; mov edi, [rsi]; call rbx; 
0x0000000009e0e6: test [rbp+0x4c000000], ah; mov edi, ebp; mov rdx, rbp; mov rsi, r12; call rax; 
0x0000000009dc9e: test [rbp+0x4c000000], ch; mov esi, esp; mov rdi, rbp; call rax; 
0x0000000018d2ce: test [rbp+0x4c000000], ebx; mov eax, eax; shr rax, 0x2; vzeroupper; ret; 
0x00000000168bb8: test [rbp+0x5], cl; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000011ae2c: test [rbp+0x9], edi; add [rax], al; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x000000000ebe76: test [rbp+0xfffffec], edx; mov dh, 0x55; add cl, [rbp-0x73]; add al, 0x39; ret far; 
0x000000001829a8: test [rbp+rcx], dl; add [rbp-0x77], cl; ret far; 
0x0000000007bb09: test [rbp-0x7c000012], dh; ret; 
0x000000000578f3: test [rbp], edi; add [rax], al; leave; ret; 
0x000000000cef60: test [rbx+0x1], ecx; add [rax], al; ret; 
0x000000000cf518: test [rbx+0x1], esp; add [rax], al; lea rax, [rdi-0x10]; ret; 
0x000000001785c8: test [rbx+0x2], eax; add [rax], al; ret; 
0x000000001785a8: test [rbx+0x2], esp; add [rax], al; ret; 
0x000000001784c0: test [rbx+0x3], ecx; add [rax], al; ret; 
0x000000000979f8: test [rbx+0x48000000], dl; mov eax, [rip+0x1543bc]; mov [rsp+0x8], r8; xor edi, edi; call qword ptr [rax]; 
0x0000000010df01: test [rbx+0x48000000], esi; add esp, 0x78; ret; 
0x00000000150e34: test [rbx+0x48fffffa], bl; mov eax, [rsp+0x48]; mov rdi, [rax]; mov rax, [rdi+0x38]; call qword ptr [rax+0x18]; 
0x0000000011b3c2: test [rbx+0x4c000005], esi; mov [rsp+0x8], eax; mov rdi, [r8]; call rbx; 
0x0000000011adf8: test [rbx+0x4c000009], eax; mov [rsp+0x8], eax; mov rdi, [r8]; call rbx; 
0x000000000b9190: test [rbx+0x6], ebx; add [rax], al; ret; 
0x0000000018e317: test [rbx+0x7], edx; add [rax], al; xor eax, eax; ret; 
0x000000000eb280: test [rbx+0xffffff8], ecx; mov dh, 0x55; add bh, [rcx]; ret far; 
0x0000000017c957: test [rbx+rax], eax; add [rax], al; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x0000000018e766: test [rbx+rax], eax; add [rax], al; xor eax, eax; ret; 
0x0000000017c8f7: test [rbx+rax], esp; add [rax-0x7cb7fec8], al; fdivr st, st(7); ret; 
0x00000000182b88: test [rbx+rcx], dh; add [rbp-0x77], cl; ret far; 
0x000000000e69a9: test [rbx+rdi*8-0x1], ecx; call qword ptr [rax]; 
0x00000000161d37: test [rbx+rsi*8-0x1], esi; push rdi; test [rbx+rdi*8-0x1], ecx; call qword ptr [rax]; 
0x000000000e7377: test [rbx+rsi*8-0x1], esp; push rdi; test [rbx+rdi*8-0x1], ecx; call qword ptr [rax]; 
0x00000000066209: test [rbx+rsi], eax; add [rbx-0x65f7b], cl; jmp far fword ptr [rbx]; 
0x00000000058718: test [rbx-0x16000001], al; ja short 0x00000000000586c2; cld; jmp qword ptr [rsi+0xf]; 
0x00000000106be2: test [rbx-0x7d000000], dh; call far fword ptr [rdi+rcx+0xb184]; 
0x0000000012d8e2: test [rbx], al; add [rax-0x73], cl; adc eax, 0x3da34; cmovne rax, rdx; ret; 
0x000000001434f8: test [rbx], al; add [rax], eax; add [rax-0x77], cl; ret; 
0x00000000035688: test [rbx], bl; add [rax+0x29], cl; ret far; 
0x00000000161008: test [rbx], dh; or [rax], eax; add [rax-0x7d], cl; ret; 
0x0000000002debe: test [rbx], dl; add [rax], eax; add [rcx-0x73], cl; add cl, [rax+0x39]; ret far; 
0x0000000011aa56: test [rbx], ebp; add al, [rax]; add [rcx-0x75], cl; notrack call rbx; 
0x00000000118ae7: test [rbx], esi; or eax, 0x64d8f700; mov [rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001189e7: test [rcx*1+0x64d8f700], esi; mov [rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000010e4f7: test [rcx+0x48000000], ebx; add esp, 0x68; ret; 
0x00000000052227: test [rcx+0x48000000], ecx; add esp, 0x10; pop rbx; ret; 
0x0000000011aa86: test [rcx+0x49000001], esp; mov edi, [rsi]; call rbx; 
0x0000000011ac15: test [rcx+0x4], ebx; add [rax], al; mov rdi, [r15]; call rbx; 
0x000000001782ca: test [rcx+0x5], eax; add [rax], al; ret; 
0x0000000011b354: test [rcx+0x5], ebp; add [rax], al; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x00000000166df7: test [rcx+0x5], ebp; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000011b19c: test [rcx+0x6], ebp; add [rax], al; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000018e2ed: test [rcx+0x7], esi; add [rax], al; xor eax, eax; ret; 
0x000000000b7732: test [rcx+0x8], ebp; add [rax], al; ret; 
0x0000000018e1fd: test [rcx+0x8], esp; add [rax], al; xor eax, eax; ret; 
0x0000000018e10d: test [rcx+0x9], edx; add [rax], al; xor eax, eax; ret; 
0x0000000011ae9a: test [rcx+0xa], edx; add [rax], al; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000010910e: test [rcx+rax-0x20], cl; notrack jmp rax; 
0x0000000002df2a: test [rcx+rax], bh; add [rcx-0x73], cl; add cl, [rax+0x39]; ret far; 
0x000000000b19cf: test [rcx+rax], ch; add [rax], al; bsr rsi, rsi; lea rax, [rdi+rsi]; ret; 
0x0000000009e677: test [rcx+rax], dh; add [rax-0x75], cl; jg short 0x000000000009e6c8; mov rsi, rbp; call rax; 
0x000000000cefa7: test [rcx+rax], eax; add [rax], al; ret; 
0x000000001929d7: test [rcx+rax], edx; add [rax], al; ret; 
0x000000000cef77: test [rcx+rax], esi; add [rax], al; ret; 
0x0000000007d767: test [rcx+rbp-0x7cb80000], dh; ret; 
0x00000000182d68: test [rcx+rcx-0x76b30000], dl; ret far; 
0x00000000074e4a: test [rcx+rcx-0x7cbf0000], ch; in al, dx; add [rax-0x8ff43], eax; jmp qword ptr [rax]; 
0x000000000e61ee: test [rcx-0x17ffffff], ebx; jg short 0x00000000000e61f6; jmp qword ptr [rsp+rax*2-0x77]; 
0x00000000100dbe: test [rcx-0x17ffffff], ebx; js short 0x0000000000100d99; std; jmp qword ptr [rsp+rax*2-0x77]; 
0x00000000162ce7: test [rcx-0x389bfff8], edx; add [rsi], ah; add [rax], al; add [rax-0x1], bh; ret; 
0x0000000017866a: test [rcx-0x3cffffff], esp; ret; 
0x000000000c34c3: test [rcx-0x41], al; add [rax], al; add [rcx-0x39], cl; ret; 
0x0000000009da78: test [rcx-0x4], al; jmp qword ptr [rbx+rcx*4+0x4]; 
0x00000000106beb: test [rcx-0x7d000000], dh; call far fword ptr [rbx-0x7c998c]; 
0x00000000165916: test [rcx], bh; add al, 0x0; add [rbp-0x77], cl; ret far; 
0x0000000017ef56: test [rcx], bh; or al, 0x0; add [rbp-0x77], cl; ret far; 
0x000000001482fa: test [rcx], bl; add al, [rax]; add [rax+0x5d5bc031], dl; pop r12; ret; 
0x00000000117ce3: test [rcx], bl; add al, [rax]; add bh, dh; ret; 
0x00000000164c26: test [rcx], ch; adc [rax], eax; add [rbp-0x77], cl; ret far; 
0x0000000017ee66: test [rcx], ch; or eax, 0x894d0000; ret far; 
0x00000000164946: test [rcx], cl; adc al, 0x0; add [rbp-0x77], cl; ret far; 
0x000000000ff892: test [rcx], dh; add al, [rax]; add [rbx+0x634801c3], al; ret far; 
0x00000000169fb7: test [rcx], edi; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000009d2fc: test [rdi+0x1], ch; add [rax], al; mov rdx, r13; mov rdi, r12; call rax; 
0x0000000011ab37: test [rdi+0x3], edi; add [rax], al; mov rdi, [r15]; call rbx; 
0x00000000151eae: test [rdi+0x48000000], ebx; add esp, 0x48; pop rbx; pop rbp; ret; 
0x000000000ca5cd: test [rdi+0x48000000], ebx; add esp, 0x8; pop rbx; pop rbp; ret; 
0x0000000013deb0: test [rdi+0x48000000], ecx; add esp, 0x58; pop rbx; pop rbp; ret; 
0x000000001471ec: test [rdi+0x48000000], esp; add esp, 0x68; pop rbx; pop rbp; ret; 
0x0000000014ff74: test [rdi+0x48000001], dl; mov eax, [rbx+0x70]; mov rsi, [rsp+0x18]; mov rdi, r12; call qword ptr [rax+0x8]; 
0x00000000053c14: test [rdi+rax*4], ah; add [rax], al; add [rcx-0x7d], cl; ret; 
0x00000000160957: test [rdi+rax*8], edx; setne al; movzx eax, al; ret; 
0x00000000160956: test [rdi+rax*8], rdx; setne al; movzx eax, al; ret; 
0x00000000182f48: test [rdi+rax-0x76b30000], dh; ret far; 
0x000000000b7897: test [rdi+rax], eax; add [rax], al; ret; 
0x000000000b7877: test [rdi+rax], esp; add [rax], al; ret; 
0x0000000004a01f: test [rdi+rcx], ch; add [rax-0x80], al; jmp far fword ptr [rbx]; 
0x000000000ee474: test [rdi+rdi*8-0x1], dh; inc ebx; nop [rax+rax]; ret; 
0x00000000030981: test [rdi+rdi*8-0x1], ebp; jmp qword ptr [rsi+0x2e]; 
0x000000001591a1: test [rdi+rdi*8-0x1], ebx; jmp far fword ptr [rax+0x412e7501]; 
0x0000000015a6b1: test [rdi+rdi*8-0x1], edi; jmp far fword ptr [rax-0x7cc98aff]; 
0x0000000013d09f: test [rdi+rdi*8-0x1], edx; inc dword ptr [rax]; add [rax], al; add dh, al; ret; 
0x0000000013a99e: test [rdi+rdi*8-0x1], esi; inc dword ptr [rbp-0x77]; ret; 
0x0000000005c7c4: test [rdi+rdi*8-0x1], esp; jmp qword ptr [rsi]; 
0x000000000606bd: test [rdi-0x1600000f], bl; fsub st, qword ptr [rdx]; cld; jmp qword ptr [rsi+0xf]; 
0x00000000157ebc: test [rdi-0x7cffffff], ah; call qword ptr [rdi+rcx]; 
0x000000000b7818: test [rdi], al; add [rax], al; ret; 
0x000000000f1d74: test [rdi], bl; add al, [rax]; add [rax-0x7d], cl; ret; 
0x00000000119cec: test [rdi], cl; add al, [rax]; add [rcx-0x7d], cl; ret far; 
0x00000000076e14: test [rdi], dh; add al, 0x0; add [rax-0x80], al; jmp qword ptr [rdi+rcx]; 
0x0000000013e394: test [rdi], eax; add al, 0x0; add [rcx-0x7d], al; ret; 
0x0000000011a9c6: test [rdi], eax; add al, [rax]; add [rcx-0x75], cl; notrack call rbx; 
0x00000000043c5a: test [rdi], eax; setne al; movzx eax, al; ret; 
0x00000000096d98: test [rdi], ecx; add al, 0x0; add [rax-0x7d], cl; ret far; 
0x0000000011a9f6: test [rdi], edi; add eax, [rax]; add [rcx-0x75], cl; notrack call rbx; 
0x00000000043c59: test [rdi], rax; setne al; movzx eax, al; ret; 
0x0000000009c20f: test [rdx*1+0x482b7200], ebp; cmp ecx, [rip+0x152c74]; jae short 0x000000000009c240; lea rax, [rax-0x8]; ret; 
0x000000000e43e7: test [rdx+0x10], edi; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x0000000018a491: test [rdx+0x1], edi; add [rax], al; vzeroupper; ret; 
0x00000000034228: test [rdx+0x200], al; ret; 
0x0000000017ca19: test [rdx+0x2], eax; add [rax], al; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x0000000017c9e9: test [rdx+0x2], esi; add [rax], al; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x000000000cf761: test [rdx+0x48000000], bl; bsf eax, edx; shr rax, 0x2; ret; 
0x000000001150c2: test [rdx+0x48000000], edx; add esp, 0x60; pop rbp; ret; 
0x0000000010e638: test [rdx+0x48000000], esi; add esp, 0x30; pop rbx; ret; 
0x0000000018aef9: test [rdx+0x4], eax; add [rax], al; vzeroupper; ret; 
0x0000000011b38b: test [rdx+0x4c000001], ebx; mov [rsp+0x8], eax; mov rdi, [r8]; call rbx; 
0x0000000011af3f: test [rdx+0x4c000007], esi; mov [rsp+0x8], eax; mov rdi, [r8]; call rbx; 
0x00000000165e78: test [rdx+0x5], bh; add [rdi+0x63], cl; or al, 0x8b; lea r9, [r11+r9]; notrack jmp r9; 
0x0000000011b0f7: test [rdx+0x5], eax; add [rax], al; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x000000000b7a31: test [rdx+0x5], ebp; add [rax], al; ret; 
0x0000000011b01b: test [rdx+0x6], edi; add [rax], al; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011ac42: test [rdx+0x6], edx; add [rax], al; mov rdi, [r15]; call rbx; 
0x000000000b8e79: test [rdx+0x9], esi; add [rax], al; ret; 
0x000000001143e7: test [rdx+0xd], edi; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x00000000194c5f: test [rdx+rax-0x7ab80000], cl; ror byte ptr [rdi], 0x84; ret; 
0x0000000018f662: test [rdx+rax], edi; add [rax], al; xor eax, eax; ret; 
0x00000000181c98: test [rdx+rbx], ah; add [rbp-0x77], cl; ret far; 
0x0000000018e032: test [rdx+rcx], ebp; add [rax], al; xor eax, eax; ret; 
0x00000000078017: test [rdx+rdi*8+0x1ffff], esi; add [rax], al; jmp rax; 
0x00000000147ec0: test [rdx+rdx*4], ah; add [rax], eax; add [rax-0x75], cl; and al, 0x30; call rax; 
0x0000000017cfc9: test [rdx-0x1600000a], esp; in eax, dx; idiv edi; jmp qword ptr [rsi+0x66]; 
0x00000000105617: test [rdx-0x72fffff9], bh; jmp qword ptr [r14+0xf]; 
0x00000000106bf9: test [rdx-0x7d000000], ch; call far fword ptr [rcx+0xa8840f]; 
0x0000000017c8d1: test [rdx-0x7ffffffd], ecx; cmp [rcx], al; sbb rax, 0xffffffffffffffff; ret; 
0x0000000017c8a9: test [rdx-0x7ffffffd], esi; cmp [rcx], al; sbb rax, 0xffffffffffffffff; ret; 
0x0000000017c9b9: test [rdx-0x7ffffffe], esp; cmp [rcx], al; sbb rax, 0xffffffffffffffff; ret; 
0x000000000a447d: test [rdx], bh; adc [rax], eax; add [rcx-0x9], al; ret; 
0x00000000043a08: test [rdx], bl; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x00000000129539: test [rdx], ch; add eax, [rax]; add [rbx+rcx*4+0x35], cl; ret; 
0x00000000178587: test [rdx], eax; add [rax], al; ret; 
0x0000000009e8ff: test [rdx], ebp; clc; call far fword ptr [rbx+0x5d]; 
0x0000000017c929: test [rdx], esi; add eax, [rax]; add [rax-0x7cb7fec8], al; fdivr st, st(7); ret; 
0x0000000014d936: test [rip+0x49000001], ah; mov eax, [rbp+0xd0]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x0000000011a936: test [rip+0x49000001], esi; mov edi, [rbp]; call rbx; 
0x0000000011acc9: test [rip+0x49000007], edx; mov edi, [rdi]; call rbx; 
0x0000000011af76: test [rip+0x4c00000a], ebp; mov [rsp+0x8], eax; mov rdi, [r8]; call rbx; 
0x000000001138fc: test [rip+0x5401be00], ecx; add [rax], al; mov eax, r8d; mov ebx, fs:[r10]; syscall; 
0x000000000ac7ce: test [rip+0xfffffff], bh; mov ebp, 0xf80148c0; add rax, rsi; ret; 
0x0000000018496e: test [rip-0x3affffff], ebp; std; xlat [rbx]; ret; 
0x000000001509d4: test [rip-0x3fcf0000], eax; mov rsi, [rsp+0x50]; mov rcx, [rsp+0x10]; mov rdi, r15; call rcx; 
0x0000000004659e: test [rip-0x41ffffff], bl; cmp eax, 0xe8000000; ret; 
0x00000000192362: test [rsi+0x1], ebp; add [rax], al; xor eax, eax; ret; 
0x0000000018b1c5: test [rsi+0x1], esi; add [rax], al; vzeroupper; ret; 
0x0000000018442d: test [rsi+0x29fffffe], ebx; enter 0xf8c5, 0x77; ret; 
0x0000000011b241: test [rsi+0x3], ebp; add [rax], al; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x000000000b1e1d: test [rsi+0x48000000], bl; bsf eax, edx; ret; 
0x000000000cf5bd: test [rsi+0x48000000], edi; lea eax, [rdi-0x10]; ret; 
0x0000000010dd86: test [rsi+0x48000000], esp; add esp, 0x68; pop rbp; pop r12; ret; 
0x0000000011b165: test [rsi+0x4c000004], esp; mov [rsp+0x8], eax; mov rdi, [r8]; call rbx; 
0x000000000ac5bd: test [rsi+0x66000000], ebp; pmovmskb eax, mm1; bsr eax, eax; add rax, rdi; ret; 
0x000000000b7855: test [rsi+0x7], eax; add [rax], al; ret; 
0x000000000b7835: test [rsi+0x7], esp; add [rax], al; ret; 
0x0000000011aed1: test [rsi+0x8], ecx; add [rax], al; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x000000000b774d: test [rsi+0x8], ecx; add [rax], al; ret; 
0x0000000014f365: test [rsi+rax*2-0x13], ecx; inc dword ptr [rcx+0xfffb]; add [rdi], cl; xchg edi, eax; ret; 
0x0000000004fa5f: test [rsi+rcx-0x7fc00000], ah; jmp far fword ptr [rbx]; 
0x0000000004ce5f: test [rsi+rcx], bh; add [rax-0x80], al; jmp far fword ptr [rbx]; 
0x00000000058cff: test [rsi+rcx], ch; add [rax-0x80], al; jmp far fword ptr [rbx]; 
0x00000000133d31: test [rsi+rdi*8+0x3d80ffff], ch; ret; 
0x000000000ee761: test [rsi+rdi*8-0x1], cl; jmp far fword ptr [rax+0x410a7508]; 
0x00000000145177: test [rsi+rdi*8-0x74b70001], esp; jl short 0x00000000001451a4; jo short 0x000000000014516a; fisub st, dword ptr [rbp-0xceffff]; call qword ptr [rsp+0x70]; 
0x00000000182048: test [rsi+rdx-0x76b30000], dh; ret far; 
0x000000000bc55a: test [rsi-0x14000002], esi; ret far; 
0x00000000079930: test [rsi-0x16000028], edx; sar bh, cl; jmp qword ptr [rsi+0xf]; 
0x000000001027e7: test [rsi-0x2708fff2], edx; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000001207e7: test [rsi-0x2708fff4], esi; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000332f7: test [rsi-0x3eb7ffe5], esp; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x00000000083528: test [rsi-0x74fffffe], cl; adc [rax-0x77], ecx; ret far; 
0x000000000a3db1: test [rsi], bh; sbb [rax], al; add [rcx-0x77], cl; ret; 
0x00000000186d8e: test [rsi], ch; adc al, [rax]; add [rbp-0x77], cl; ret far; 
0x00000000186a8e: test [rsi], ch; adc eax, 0x894d0000; ret far; 
0x00000000187c8e: test [rsi], ch; add eax, [rax]; add [rbp-0x77], cl; ret far; 
0x0000000018768e: test [rsi], ch; or [rax], eax; add [rbp-0x77], cl; ret far; 
0x0000000018738e: test [rsi], ch; or al, 0x0; add [rbp-0x77], cl; ret far; 
0x0000000006f64e: test [rsi], cl; add eax, 0x83480000; ret; 
0x0000000014e570: test [rsi], edi; add [rax], al; add rsp, 0x20; pop rbx; ret; 
0x0000000018e538: test [rsi], esp; add eax, 0xc0310000; ret; 
0x00000000181ab8: test [rsp+rbx], al; add [rbp-0x77], cl; ret far; 
0x0000000003773f: test [rsp+rdi*8-0x1], al; dec dword ptr [rcx+0x3c8348c9]; ret far; 
0x000000000f2dd0: test [rsp+rdi*8-0x74b60001], ebx; sbb [r9], al; ret far; 
0x000000000a5dec: test [rsp], dh; add bh, dh; ret; 
0x00000000190c86: test ah, 0x40; jne 0x0000000000190d70; lea rax, [rdi+0xf]; ret; 
0x0000000012c697: test ah, al; add al, [rax]; add [rbx-0x7af0fe05], al; ret far; 
0x000000000a4fa7: test ah, bh; xor al, 0x0; add [rcx-0x9], al; ret; 
0x000000000d6868: test ah, cl; add al, [rax]; add dh, dh; rol dword ptr [rdi+rcx], 0x84; ret; 
0x000000000ffd9f: test ah, cl; add eax, [rax]; add [rbx+0x634c01c3], al; ret far; 
0x00000000182408: test ah, dh; adc al, [rax]; add [rbp-0x77], cl; ret far; 
0x00000000183308: test ah, dh; add eax, [rax]; add [rbp-0x77], cl; ret far; 
0x00000000182228: test ah, dl; adc al, 0x0; add [rbp-0x77], cl; ret far; 
0x00000000183128: test ah, dl; add eax, 0x894d0000; ret far; 
0x000000000fda3f: test ah, dl; or al, 0x0; add [rax-0x7b], cl; ror byte ptr [rdi], 0x84; ret far; 
0x00000000079301: test al, 0x0; add [rax+0x39], cl; ret; 
0x0000000014d1a0: test al, 0x0; add [rax], al; bswap ebp; mov ebp, ebp; call qword ptr [rax+0x18]; 
0x0000000014d063: test al, 0x0; add [rax], al; mov eax, 0x1; ret; 
0x0000000015347b: test al, 0x0; add [rax], al; mov rax, r8; pop rbx; ret; 
0x0000000009df04: test al, 0x0; add [rax], al; mov rsi, rbp; mov rdi, r12; call rax; 
0x000000000de778: test al, 0x0; add [rax], al; pop rbp; pop r12; ret; 
0x00000000032924: test al, 0x0; add [rax], al; ret; 
0x000000001156b5: test al, 0x0; add [rax], al; syscall; 
0x00000000160eb4: test al, 0x15; in al, dx; inc dword ptr [rcx-0x80]; jl short 0x0000000000160ec0; jmp far fword ptr [rdi]; 
0x00000000083f6f: test al, 0x16; add [rcx], al; ret; 
0x0000000009f11a: test al, 0x1; add [rax-0x73], cl; adc eax, 0x12e7c; cmovne rax, rdx; ret; 
0x000000000330f8: test al, 0x1b; add [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x00000000146a2f: test al, 0x22; add [rax], al; add [rax-0x77], ecx; out dx, eax; call qword ptr [rax+0x18]; 
0x0000000005b4fc: test al, 0x3; add [rax], al; mov rsp, rdx; ret; 
0x00000000190c34: test al, 0x40; jne 0x0000000000190d00; lea rax, [rdi+0x7]; ret; 
0x0000000011a0f0: test al, 0x45; mov edi, ebp; call rax; 
0x0000000012dd1f: test al, 0x48; mov eax, edi; ret; 
0x0000000009291e: test al, 0x90; endbr64; mov rax, 0xffffffffffffffff; ret; 
0x00000000146293: test al, 0xa; add [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x000000001462ca: test al, 0xa; add [rdx], al; add rsp, 0x8; lea rax, [rip+0xaa827]; ret; 
0x000000000cf515: test al, 0xf0; jne 0x00000000000cf680; lea rax, [rdi-0x10]; ret; 
0x000000000cf628: test al, 0xf0; jne short 0x00000000000cf680; lea rax, [rdi-0x10]; ret; 
0x000000001096c3: test al, 0xf2; jmp qword ptr [rsi+0x2e]; 
0x000000000e7a87: test al, 0xf3; dec dword ptr [rax-0x77]; ret; 
0x00000000150bd7: test al, 0xfe; jmp qword ptr [rsi+0xf]; 
0x00000000150bd6: test al, 0xfe; jmp qword ptr [rsi+0xf]; 
0x000000000b068c: test al, ah; or eax, 0x894d0000; ret far; 
0x00000000172e1c: test al, al; and [rax], eax; add [rbp-0x77], cl; ret far; 
0x0000000009a08a: test al, al; jne short 0x000000000009a099; mov dword ptr [rip+0x154de0], 0x0; ret; 
0x000000000aa66a: test al, al; jne short 0x00000000000aa650; xor eax, eax; sub eax, ecx; ret; 
0x000000000e8211: test al, al; jne short 0x00000000000e81c1; xor eax, eax; ret; 
0x0000000013f005: test al, al; jne short 0x000000000013efed; mov eax, r10d; ret; 
0x0000000017371c: test al, al; sbb [rax], al; add [rbp-0x77], cl; ret far; 
0x000000000af8ac: test al, al; sbb eax, [rax]; add [rbp-0x77], cl; ret far; 
0x0000000010c1f0: test al, bh; dec dword ptr [rax-0x75]; add al, 0x24; add rsp, 0x28; ret; 
0x000000000aff9c: test al, dl; adc al, 0x0; add [rbp-0x77], cl; ret far; 
0x00000000154b11: test bh, 0x43; adc [rcx], al; add [rax], al; add [rcx+rcx*4-0x11], cl; call qword ptr [rax+0x28]; 
0x00000000082863: test bh, al; add [rax], al; add [rax-0x77], cl; ret; 
0x0000000016103c: test bh, bh; or [rax], al; add [rax-0x7d], cl; ret; 
0x000000000715e1: test bh, bh; ret; 
0x00000000196459: test bh, ch; add [rax], al; add [rcx-0x77], cl; ret; 
0x000000000f1e44: test bh, dh; add [rax], al; add [rax-0x77], cl; fmul st, dword ptr [rax-0x7d]; ret; 
0x000000000f0b30: test bl, bh; add al, [rax]; add [rbx-0x72bed3a7], cl; add [rcx], edi; ret; 
0x00000000167bd9: test byte ptr [r9-0x6f3c03a9], 0x66; mov edx, [rsi-0x2]; mov [rdi-0x2], dx; ret; 
0x000000001491bd: test byte ptr [rax+0x1], 0xc6; cmp rsi, [rdx+0x28]; ja short 0x00000000001491b0; mov [rdx+0x20], rsi; ret; 
0x000000000e4ae2: test byte ptr [rax+0x63], 0x4; mov dl, 0x48; add eax, edx; notrack jmp rax; 
0x000000000bc8a2: test byte ptr [rax+0x71], 0x2; lea rax, [rip+0x12933]; cmovne rax, rdx; ret; 
0x0000000009fb22: test byte ptr [rax+0x72], 0x10; lea rax, [rip+0x1bee3]; cmovne rax, rdx; ret; 
0x0000000009f862: test byte ptr [rax+0x72], 0x10; lea rax, [rip+0x1c0f3]; cmovne rax, rdx; ret; 
0x0000000009f272: test byte ptr [rax+0x72], 0x10; lea rax, [rip+0x1c633]; cmovne rax, rdx; ret; 
0x0000000010d282: test byte ptr [rax+0x72], 0x80; lea rax, [rip-0xbd]; cmove rax, rdx; ret; 
0x000000000a0332: test byte ptr [rax+0xcc], 0x10; lea rax, [rip+0x1b0d0]; cmove rax, rdx; ret; 
0x0000000016e947: test byte ptr [rax+rax], 0x49; movsxd edx, [rbx+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000dd5a3: test byte ptr [rax-0x3f], 0xe6; add ebp, eax; ret; 
0x0000000015dd29: test byte ptr [rax-0x73], 0x3d; ret; 
0x000000000833e9: test byte ptr [rax-0x77], 0xdf; call qword ptr [r15+0x38]; 
0x00000000134952: test byte ptr [rax-0x77], 0xdf; call rax; 
0x0000000008bdf5: test byte ptr [rax-0x77], 0xef; call qword ptr [r13+0x10]; 
0x0000000014773a: test byte ptr [rax-0x77], 0xef; call qword ptr [rax+0x28]; 
0x00000000081e6a: test byte ptr [rax-0x77], 0xef; call qword ptr [rbx+0x10]; 
0x000000001577b1: test byte ptr [rax-0x77], 0xef; call r12; 
0x0000000010d304: test byte ptr [rax-0x77], 0xef; call rax; 
0x00000000146a11: test byte ptr [rax-0x77], 0xef; mov dword ptr [rbx+0x18], 0x0; call qword ptr [rax+0x28]; 
0x00000000146992: test byte ptr [rax-0x77], 0xef; mov dword ptr [rbx+0x18], 0x1; call qword ptr [rax+0x28]; 
0x0000000010d333: test byte ptr [rax-0x77], 0xef; mov eax, 0x135; syscall; 
0x0000000009f905: test byte ptr [rax-0x7d], 0xc4; or [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; jmp rax; 
0x00000000038de9: test byte ptr [rax], 0x0; add [rax-0x7d], cl; ret; 
0x000000001837cd: test byte ptr [rbp+0x48d674d2], 0x63; leave; add rax, rcx; sub rax, rdi; ret; 
0x00000000129644: test byte ptr [rbp+0xf], 0x44; ret far; 
0x00000000042c86: test byte ptr [rbp-0x6bf0bf40], 0xc6; xor eax, eax; mov [rbx+0x40], esi; pop rbx; ret; 
0x00000000183921: test byte ptr [rbp-0x7a958a2e], 0xf6; je short 0x0000000000183908; xor eax, eax; ret; 
0x0000000012bdee: test byte ptr [rbx+0x1c], 0x20; je short 0x000000000012be00; pop rbx; ret; 
0x0000000009e8e5: test byte ptr [rbx+0x50], 0x1; jne short 0x000000000009e8c0; mov rdi, rsi; call rax; 
0x0000000007e046: test byte ptr [rbx+rdx], 0x0; movsxd rax, [rax+rcx*4]; add rax, rdx; jmp rax; 
0x00000000167bb6: test byte ptr [rbx-0x76b303aa], 0x5f; out dx, al; mov [rdi-0xa], rcx; mov [rdi-0x4], edx; ret; 
0x00000000167bd2: test byte ptr [rbx-0x76b703aa], 0x4f; test byte ptr [rcx-0x6f3c03a9], 0x66; mov edx, [rsi-0x2]; mov [rdi-0x2], dx; ret; 
0x00000000130847: test byte ptr [rbx], 0x0; syscall; 
0x00000000157435: test byte ptr [rcx+0x14c2847], 0xc6; mov [rdi+0x18], rsi; mov rax, r8; ret; 
0x000000000a0762: test byte ptr [rcx+0x71], 0x2; lea rax, [rip+0x162c3]; lea rdx, [rip+0xd8bcc]; cmovne rax, rdx; ret; 
0x0000000009f242: test byte ptr [rcx+0x71], 0x2; lea rax, [rip+0x176f3]; lea rdx, [rip+0xd5dbc]; cmovne rax, rdx; ret; 
0x0000000009f112: test byte ptr [rcx+0x71], 0x2; lea rax, [rip+0x1a893]; lea rdx, [rip+0x12e7c]; cmovne rax, rdx; ret; 
0x000000000a07c2: test byte ptr [rcx+0x71], 0x2; lea rax, [rip+0x86e3]; lea rdx, [rip+0xda37c]; cmovne rax, rdx; ret; 
0x0000000009f7f2: test byte ptr [rcx+0x71], 0x2; lea rax, [rip+0x9723]; lea rdx, [rip+0xd6fbc]; cmovne rax, rdx; ret; 
0x0000000009f722: test byte ptr [rcx+0x71], 0x2; lea rax, [rip+0x9733]; lea rdx, [rip+0x1448c]; cmovne rax, rdx; ret; 
0x0000000009f1c2: test byte ptr [rcx+0x71], 0x2; lea rax, [rip+0x9db3]; lea rdx, [rip+0xc41bc]; cmovne rax, rdx; ret; 
0x000000000bdfb2: test byte ptr [rcx+0x72], 0x8; lea rax, [rip+0x11923]; lea rdx, [rip+0x116fc]; cmovne rax, rdx; ret; 
0x0000000009f162: test byte ptr [rcx+0xcc], 0x40; lea rax, [rip+0x12330]; lea rdx, [rip+0xf18e9]; cmovne rax, rdx; ret; 
0x0000000012fb6d: test byte ptr [rcx+0xff009f8], 0xc8; ret; 
0x00000000133eb7: test byte ptr [rcx+rcx*4+0x35], 0x81; ret; 
0x0000000007b4ce: test byte ptr [rcx+rcx*4-0x11], 0x44; mov [rbp-0x978], edx; mov [rbp-0x960], r9b; call rax; 
0x0000000013ee46: test byte ptr [rcx+rcx*4-0x11], 0xe8; adc [rdi], esi; out dx, al; jmp qword ptr [rsi+0xf]; 
0x0000000013e8b1: test byte ptr [rcx+rcx*4-0x11], 0xe8; idiv byte ptr [rdx]; out dx, al; dec dword ptr [rax-0x77]; ret; 
0x00000000155a95: test byte ptr [rcx+rcx*4-0x19], 0x41; call rbp; 
0x0000000005d41b: test byte ptr [rcx+rcx*4-0x19], 0x4c; mov [rbp-0xe8], eax; call rax; 
0x000000000749f6: test byte ptr [rcx+rcx*4-0x1], 0x44; mov [rbp-0x954], ecx; mov [rbp-0x948], r11d; call rax; 
0x00000000144bfe: test byte ptr [rcx+rcx*4-0x1], 0x48; mov [rsp+0x8], ecx; call rbp; 
0x00000000047007: test byte ptr [rcx+rcx*4-0x31], 0x41; call rax; 
0x00000000167bda: test byte ptr [rcx-0x6f3c03a9], 0x66; mov edx, [rsi-0x2]; mov [rdi-0x2], dx; ret; 
0x0000000009e672: test byte ptr [rdi+0x50], 0x1; je 0x000000000009e7f0; mov rdi, [rdi+0x48]; mov rsi, rbp; call rax; 
0x000000000874df: test byte ptr [rdi], 0x2; jne short 0x0000000000087558; mov rax, [rax+0xe0]; call qword ptr [rax+0x68]; 
0x0000000008cd96: test byte ptr [rdi], 0x4; sete al; ret; 
0x000000000c8c1e: test byte ptr [rdi], 0x84; ret far; 
0x00000000049b6e: test byte ptr [rdi], 0x84; ret; 
0x0000000013d336: test byte ptr [rdi], 0x85; ret; 
0x0000000011a934: test byte ptr [rdi], 0x85; xor eax, 0x49000001; mov edi, [rbp]; call rbx; 
0x0000000008cda6: test byte ptr [rdi], 0x8; sete al; ret; 
0x000000000e661e: test byte ptr [rdi], 0x94; ret; 
0x000000000f00e5: test byte ptr [rdx+0x63], 0x4; mov dl, 0x48; add eax, edx; notrack jmp rax; 
0x000000000a0a20: test byte ptr [rdx+0x7d], 0x2; lea rax, [rip+0x1b1a5]; lea rdx, [rip+0x1b0be]; cmove rax, rdx; ret; 
0x000000000a06b0: test byte ptr [rdx+0x7d], 0x2; lea rax, [rip+0x1b4f5]; lea rdx, [rip+0x1b40e]; cmove rax, rdx; ret; 
0x000000000a0550: test byte ptr [rdx+0x7d], 0x2; lea rax, [rip+0x1b675]; lea rdx, [rip+0x1b58e]; cmove rax, rdx; ret; 
0x0000000012da39: test byte ptr [rdx+0x7d], 0x2; lea rax, [rip+0x5db7c]; lea rdx, [rip+0x5db05]; cmove rax, rdx; ret; 
0x0000000012d979: test byte ptr [rdx+0x7d], 0x2; lea rax, [rip+0x5dc5c]; lea rdx, [rip+0x5dbe5]; cmove rax, rdx; ret; 
0x0000000012d8b9: test byte ptr [rdx+0x7d], 0x2; lea rax, [rip+0x5dd1c]; lea rdx, [rip+0x5dca5]; cmove rax, rdx; ret; 
0x0000000012da84: test byte ptr [rdx+0x7d], 0x2; lea rax, [rip+0x628b1]; lea rdx, [rip+0x6283a]; cmove rax, rdx; ret; 
0x0000000012d9c4: test byte ptr [rdx+0x7d], 0x2; lea rax, [rip+0x62991]; lea rdx, [rip+0x6291a]; cmove rax, rdx; ret; 
0x0000000012d904: test byte ptr [rdx+0x7d], 0x2; lea rax, [rip+0x62a51]; lea rdx, [rip+0x629da]; cmove rax, rdx; ret; 
0x0000000012db44: test byte ptr [rdx+0x7d], 0x2; lea rax, [rip+0x62da1]; lea rdx, [rip+0x62d2a]; cmove rax, rdx; ret; 
0x000000000a09b9: test byte ptr [rdx+0x7d], 0x2; lea rax, [rip+0xeac2c]; lea rdx, [rip+0xeabb5]; cmove rax, rdx; ret; 
0x000000000a0649: test byte ptr [rdx+0x7d], 0x2; lea rax, [rip+0xeaf7c]; lea rdx, [rip+0xeaf05]; cmove rax, rdx; ret; 
0x000000000a04e9: test byte ptr [rdx+0x7d], 0x2; lea rax, [rip+0xeb0fc]; lea rdx, [rip+0xeb085]; cmove rax, rdx; ret; 
0x000000000a0a04: test byte ptr [rdx+0x7d], 0x2; lea rax, [rip+0xef961]; lea rdx, [rip+0xef8ea]; cmove rax, rdx; ret; 
0x000000000a0694: test byte ptr [rdx+0x7d], 0x2; lea rax, [rip+0xefcb1]; lea rdx, [rip+0xefc3a]; cmove rax, rdx; ret; 
0x000000000a0534: test byte ptr [rdx+0x7d], 0x2; lea rax, [rip+0xefe31]; lea rdx, [rip+0xefdba]; cmove rax, rdx; ret; 
0x000000000a05f4: test byte ptr [rdx+0x7d], 0x2; lea rax, [rip+0xf0301]; lea rdx, [rip+0xf028a]; cmove rax, rdx; ret; 
0x0000000012d920: test byte ptr [rdx+0x7d], 0x2; lea rax, [rip-0x71d6b]; lea rdx, [rip-0x71e52]; cmove rax, rdx; ret; 
0x0000000012d9e0: test byte ptr [rdx+0x7d], 0x2; lea rax, [rip-0x71e2b]; lea rdx, [rip-0x71f12]; cmove rax, rdx; ret; 
0x0000000012daa0: test byte ptr [rdx+0x7d], 0x2; lea rax, [rip-0x71f0b]; lea rdx, [rip-0x71ff2]; cmove rax, rdx; ret; 
0x000000000ee4be: test byte ptr [rdx+0xc8], 0x40; jne 0x00000000000ee3ed; ret; 
0x000000000ee46c: test byte ptr [rdx+0xc8], 0x80; je 0x00000000000ee3ed; ret; 
0x000000000a049f: test byte ptr [rdx+0xcd], 0x1; je short 0x00000000000a0465; ret; 
0x000000000bcdaf: test byte ptr [rdx+0xcd], 0x1; je short 0x00000000000bcd75; ret; 
0x000000000baa4a: test byte ptr [rdx+0xf], 0x0; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000118cb6: test byte ptr [rdx], 0x0; add [rax-0x73], cl; add eax, 0xd6baf; add rsp, 0x8; ret; 
0x000000000a4464: test byte ptr [rdx], 0x0; add [rcx-0x9], al; ret; 
0x0000000018de5d: test byte ptr [rdx], 0x0; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018ded6: test byte ptr [rdx], 0x0; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x000000001573a6: test byte ptr [rsi+0xf66fffd], 0x1f; add [rax], r8b; endbr64; ret; 
0x0000000004a8a7: test ch, dl; add [rax], al; add [rax+0x63], cl; ret far; 
0x0000000018191b: test cl, ah; sbb eax, 0x894d0000; ret far; 
0x0000000017fa96: test cl, bh; add [rax], al; add [rbp-0x77], cl; ret far; 
0x000000000a894a: test cl, bh; jne short 0x00000000000a8928; ret; 
0x00000000165356: test cl, bh; or [rax], eax; add [rbp-0x77], cl; ret far; 
0x0000000017f8b6: test cl, bl; add al, [rax]; add [rbp-0x77], cl; ret far; 
0x00000000165076: test cl, bl; or al, 0x0; add [rbp-0x77], cl; ret far; 
0x000000000aacd6: test cl, ch; adc [rax], eax; add [rbp-0x77], cl; ret far; 
0x000000000aa9d6: test cl, ch; adc al, 0x0; add [rbp-0x77], cl; ret far; 
0x0000000017f9a6: test cl, ch; add [rax], eax; add [rbp-0x77], cl; ret far; 
0x000000000abbd6: test cl, ch; add al, [rax]; add [rbp-0x77], cl; ret far; 
0x000000000ab8d6: test cl, ch; add eax, 0x894d0000; ret far; 
0x000000000ab5d6: test cl, ch; or [rax], al; add [rbp-0x77], cl; ret far; 
0x000000000ab2d6: test cl, ch; or eax, [rax]; add [rbp-0x77], cl; ret far; 
0x00000000165a86: test cl, cl; add al, [rax]; add [rbp-0x77], cl; ret far; 
0x0000000017f7c6: test cl, cl; add eax, [rax]; add [rbp-0x77], cl; ret far; 
0x000000000a88ec: test cl, cl; je short 0x00000000000a88f8; cmp ecx, esi; jne short 0x00000000000a88e0; ret; 
0x000000000bb4ff: test cl, cl; jne short 0x00000000000bb4f0; ret; 
0x000000000bb5af: test cl, cl; jne short 0x00000000000bb5a0; ret; 
0x000000000bb86f: test cl, cl; jne short 0x00000000000bb860; sub rax, 0x1; ret; 
0x0000000012dd1c: test cl, cl; jne short 0x000000000012dcc8; mov rax, rdi; ret; 
0x00000000190ba7: test dh, 0x40; jne 0x0000000000190ae0; lea rax, [rdi+0xf]; ret; 
0x00000000190bed: test dh, 0x4; jne 0x0000000000190ae0; lea rax, [rdi+0xb]; ret; 
0x000000000b1935: test dh, al; add [rax], eax; add [rax+0xf], cl; mov ebp, 0xf80148c0; ret; 
0x00000000026234: test dh, bh; add [rax], eax; add [rax-0x7d], cl; ret; 
0x00000000147636: test dh, bh; jmp qword ptr [rsi+0xf]; 
0x00000000139e4a: test dh, ch; dec dword ptr [rax-0x7d]; ret; 
0x00000000139e6b: test dh, ch; jmp qword ptr [rsi-0x70]; 
0x000000000a863d: test dh, dh; jne short 0x00000000000a8630; mov [rdx], rcx; ret; 
0x00000000027229: test dh, dh; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x00000000190b24: test dl, 0x40; jne short 0x0000000000190ae0; lea rax, [rdi+0x7]; ret; 
0x00000000190b52: test dl, 0x4; jne short 0x0000000000190ae0; lea rax, [rdi+0x3]; ret; 
0x00000000101961: test dl, al; add [rax], eax; add [rbx+rcx*4+0x63], cl; and [rax-0x7d], cl; ret; 
0x0000000007a19b: test dl, bh; call far fword ptr [rbx+0x5d]; 
0x000000001393d9: test dl, bl; add [rax], al; add [rcx-0xa], al; ret; 
0x0000000018ebb8: test dl, ch; add al, [rax]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000082962: test dl, cl; add [rax], al; add [rax-0x77], cl; ret; 
0x000000000a880e: test dl, cl; jne short 0x00000000000a87f0; mov rax, r8; ret; 
0x00000000040feb: test dl, dl; jne short 0x0000000000040fc8; ret; 
0x000000000bb71f: test dl, dl; jne short 0x00000000000bb710; lea rax, [rcx-0x1]; ret; 
0x000000000a2904: test dl, dl; mov edx, 0x0; cmove rax, rdx; ret; 
0x0000000011a0ed: test dword ptr [rax-0x75], 0x8945a845; out dx, eax; call rax; 
0x0000000014ed59: test dword ptr [rax-0x75], 0x8b490847; jo short 0x000000000014eda2; mov edx, [rsi+0x1c8]; add rsi, 0x38; jmp qword ptr [rax+0x18]; 
0x0000000010d9db: test dword ptr [rax-0x77], 0xca8948d6; cmp r9d, 0x1; ja short 0x000000000010da18; mov eax, 0x106; syscall; 
0x00000000118759: test dword ptr [rax-0x77], 0xca8948d6; mov r10, r8; mov r8, r9; mov r9, [rsp+0x8]; syscall; 
0x0000000012aa2c: test dword ptr [rax-0x77], 0xce894cc2; call qword ptr [r10+0x28]; 
0x0000000010d4d9: test dword ptr [rax-0x77], 0xf88341d6; add [rdi+0x2d], esi; mov eax, 0x4; syscall; 
0x0000000010d599: test dword ptr [rax-0x77], 0xf88341d6; add [rdi+0x2d], esi; mov eax, 0x6; syscall; 
0x0000000010d538: test dword ptr [rax-0x77], 0xf88341d6; add [rdi+0x2e], esi; mov eax, 0x5; syscall; 
0x0000000004488a: test dword ptr [rax-0x77], 0xfe894cea; mov rdi, r12; call rbx; 
0x000000000a77a3: test dword ptr [rax-0x7d], 0x840f05ef; mov al, [0x8949c9634dfffffc]; ret far; 
0x00000000116ee2: test dword ptr [rax-0xf89fe06], 0xec74203c; mov byte ptr [rsi-0x1], 0x0; mov rax, r8; ret; 
0x000000000e2d17: test dword ptr [rax], 0x50f0000; cmp rax, 0xfffffffffffff000; ja short 0x00000000000e2d90; ret; 
0x000000000f1e45: test dword ptr [rax], 0x89480000; fmul st, dword ptr [rax-0x7d]; ret; 
0x000000000aef72: test dword ptr [rbp+rcx*4+0x48], 0xc929490f; lea r10, [rip+0x100107]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x000000000acd02: test dword ptr [rbp+rcx*4+0x48], 0xc929490f; lea r10, [rip+0x1022f7]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x000000000aa722: test dword ptr [rbp+rcx*4+0x48], 0xc929490f; lea r10, [rip+0x104857]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x000000000a9002: test dword ptr [rbp+rcx*4+0x48], 0xc929490f; lea r10, [rip+0x105ef7]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000172bd2: test dword ptr [rbp+rcx*4+0x48], 0xc929490f; lea r10, [rip+0x3c4e7]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000170a52: test dword ptr [rbp+rcx*4+0x48], 0xc929490f; lea r10, [rip+0x3e5e7]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x000000001646a2: test dword ptr [rbp+rcx*4+0x48], 0xc929490f; lea r10, [rip+0x4a917]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000163412: test dword ptr [rbp+rcx*4+0x48], 0xc929490f; lea r10, [rip+0x4bb27]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000086f24: test dword ptr [rbp-0x3dbaf013], 0x48744389; add esp, 0x18; pop rbx; pop rbp; ret; 
0x000000001679f3: test dword ptr [rbx-0x76b703aa], 0x5789f74f; cld; ret; 
0x0000000016d313: test dword ptr [rbx-0x76b703b2], 0x4f89f757; cld; ret; 
0x00000000168f45: test dword ptr [rcx+0x5], 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000066261: test dword ptr [rcx+rcx*4-0x9], 0xe8f4894d; ret; 
0x0000000010d919: test dword ptr [rcx-0x3f7aba2a], 0x8b483775; adc [rcx-0x3dc6b730], ecx; jne short 0x000000000010d958; mov eax, 0x85; syscall; 
0x000000001003df: test dword ptr [rcx-0x77], 0x1f48e8c4; call far fword ptr [rax+0x5a]; 
0x000000001002dd: test dword ptr [rcx-0x77], 0x204ae8c4; call far fword ptr [rax+0x5a]; 
0x000000000d4a43: test dword ptr [rcx-0x77], 0x6948144f; rcl byte ptr [rbx-0x3e6db6dc], cl; call far fword ptr [rdi]; 
0x0000000018ddce: test dword ptr [rdx], 0xc634900; xchg ebx, eax; add rcx, r11; notrack jmp rcx; 
0x000000001331b2: test eax, 0x1000bcf; mov fs:[r8], r9d; add rsp, 0x8; ret; 
0x000000000cf591: test eax, 0x1; je 0x00000000000cf4f5; lea rax, [rdi-0x10]; ret; 
0x000000000cf641: test eax, 0x1; je short 0x00000000000cf6b0; lea rax, [rdi-0x10]; ret; 
0x000000000d37b1: test eax, 0x3948fffb; ret; 
0x000000000980c3: test eax, 0x4500153d; xor eax, eax; mov dword ptr fs:[rax], 0xc; mov rax, r8; ret; 
0x000000000a0433: test eax, 0x480000ba; cmove eax, edx; ret; 
0x0000000009f6d3: test eax, 0x48000126; cmove eax, edx; ret; 
0x000000000a0913: test eax, 0x48000d21; cmovne eax, edx; ret; 
0x000000000a8654: test eax, 0x48001f0f; mov ecx, eax; xor eax, eax; mov [rdx], rcx; ret; 
0x000000000ba117: test eax, 0x49000f53; movsxd ecx, [rbx+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000001646ae: test eax, 0x634f0004; or al, 0x8a; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000042384: test eax, 0x7fffff; je short 0x0000000000042390; ret; 
0x00000000122e5b: test eax, 0x89000c8f; jmp qword ptr [rax+rcx*2-0x75]; 
0x00000000122b5b: test eax, 0x89000c92; jmp qword ptr [rax+rcx*2-0x75]; 
0x00000000154fe3: test eax, 0x89fffcb2; ret; 
0x0000000011515a: test eax, 0x90660001; endbr64; mov eax, 0xa3; syscall; 
0x0000000012110f: test eax, 0xf200e; jne short 0x000000000012113a; mov eax, 0x42; syscall; 
0x0000000011f4c3: test eax, 0xf7000cc9; fsub st, dword ptr [rcx+rcx*4+0x2]; mov eax, 0xffffffff; ret; 
0x000000000d10c3: test eax, 0xf70011ad; fsub st, dword ptr [rcx+rcx*4+0x2]; mov eax, 0xffffffff; ret; 
0x000000000bb888: test eax, 0xfffd3be9; jmp qword ptr [rsi-0x70]; 
0x0000000011cdb3: test eax, eax; cmove eax, edx; ret; 
0x0000000012d045: test eax, eax; cmove rax, rdx; mov [rip+0xc2e26], rax; pop rbp; ret; 
0x000000001141ea: test eax, eax; cmovns eax, edx; ret; 
0x000000000473cd: test eax, eax; cmovs eax, edx; ret; 
0x000000000243e0: test eax, eax; je 0x00000000000226c2; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000014f199: test eax, eax; je 0x00000000000239b1; mov rax, [rsp+0x58]; mov rdi, r12; call qword ptr [rax+0x20]; 
0x0000000009cde5: test eax, eax; je 0x000000000009cec0; call rax; 
0x0000000009cf1d: test eax, eax; je 0x000000000009cff0; call rax; 
0x0000000009d2f9: test eax, eax; je 0x000000000009d470; mov rdx, r13; mov rdi, r12; call rax; 
0x0000000009dc9b: test eax, eax; je 0x000000000009dd50; mov rsi, r12; mov rdi, rbp; call rax; 
0x0000000009df00: test eax, eax; je 0x000000000009dfb0; mov rsi, rbp; mov rdi, r12; call rax; 
0x0000000011c30b: test eax, eax; je 0x000000000011c400; call rax; 
0x000000001476f5: test eax, eax; je 0x000000000014766f; mov rax, [rbp+0x8]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x00000000147e22: test eax, eax; je 0x0000000000147cae; mov rdi, rbx; call rax; 
0x00000000148c91: test eax, eax; je 0x0000000000148dc1; mov rdi, r12; call qword ptr [rbx]; 
0x0000000014d933: test eax, eax; je 0x000000000014da60; mov rax, [r13+0xd0]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x0000000015046b: test eax, eax; je 0x0000000000150608; mov rax, [r14+0x70]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x000000001509e9: test eax, eax; je 0x0000000000150f5d; mov rax, [rbx+0x60]; mov rdi, r15; call qword ptr [rax+0x20]; 
0x0000000015f2f5: test eax, eax; je 0x000000000015f268; mov [rsp+0x8], eax; lea rdi, [r12+0x930]; call qword ptr [r12+0xf10]; 
0x00000000026f8e: test eax, eax; je short 0x0000000000026f98; ret; 
0x00000000030c52: test eax, eax; je short 0x0000000000030c58; call rax; 
0x00000000031fad: test eax, eax; je short 0x0000000000031fb3; call rax; 
0x00000000062f28: test eax, eax; je short 0x0000000000062f70; mov eax, 0x13c; syscall; 
0x00000000082a59: test eax, eax; je short 0x0000000000082a66; mov rdi, [rdi+0xe0]; jmp rax; 
0x00000000082a92: test eax, eax; je short 0x0000000000082aa7; mov rbp, rdx; mov rdi, [rdi+0xe0]; call rax; 
0x00000000082ae2: test eax, eax; je short 0x0000000000082b08; mov rdi, [rdi+0xe0]; lea rsi, [rsp+0x8]; call rax; 
0x00000000082b39: test eax, eax; je short 0x0000000000082b50; mov rdi, [rdi+0xe0]; jmp rax; 
0x0000000008e5c1: test eax, eax; je short 0x000000000008e5d0; pop rbx; ret; 
0x000000000927b9: test eax, eax; je short 0x00000000000927cc; mov qword ptr [rax], 0x0; mov qword ptr [rax+0x8], 0x0; ret; 
0x00000000094afa: test eax, eax; je short 0x0000000000094b00; call rax; 
0x00000000094b83: test eax, eax; je short 0x0000000000094b89; call rax; 
0x00000000094bf3: test eax, eax; je short 0x0000000000094bf9; call rax; 
0x00000000099211: test eax, eax; je short 0x0000000000099217; call rax; 
0x0000000009d129: test eax, eax; je short 0x000000000009d190; mov rsi, r12; mov rdi, rbp; call rax; 
0x000000000ac73a: test eax, eax; je short 0x00000000000ac710; bsr eax, eax; add rax, rdi; ret; 
0x000000000b1713: test eax, eax; je short 0x00000000000b1720; bsf eax, eax; lea rax, [rdi+rax]; ret; 
0x000000000dd05f: test eax, eax; je short 0x00000000000dd098; call rax; 
0x000000000dd0df: test eax, eax; je short 0x00000000000dd118; call rax; 
0x0000000010d390: test eax, eax; je short 0x000000000010d3d0; xor edx, edx; call rax; 
0x00000000114c70: test eax, eax; je short 0x0000000000114c75; ret; 
0x00000000116de5: test eax, eax; je short 0x0000000000116dec; mov [rax], rdx; ret; 
0x0000000011c12a: test eax, eax; je short 0x000000000011c190; call rax; 
0x0000000012bddf: test eax, eax; je short 0x000000000012be10; mov rdi, [rdx+0x50]; mov rsi, rdx; call rax; 
0x0000000012d0c5: test eax, eax; je short 0x000000000012d0f5; lea rsi, [rbp-0x20]; lea rdi, [rip-0x184]; call rax; 
0x0000000012e8ee: test eax, eax; je short 0x000000000012e900; add rsp, 0x8; ret; 
0x0000000013787d: test eax, eax; je short 0x0000000000137886; mov rdi, rbx; call rax; 
0x00000000137b9d: test eax, eax; je short 0x0000000000137ba6; mov rdi, rbx; call rax; 
0x00000000137c65: test eax, eax; je short 0x0000000000137c72; lea rdi, [rip+0xb8770]; call rax; 
0x00000000140bde: test eax, eax; je short 0x0000000000140be8; ret; 
0x00000000141a64: test eax, eax; je short 0x0000000000141a70; add rsp, 0x8; ret; 
0x00000000146234: test eax, eax; je short 0x000000000014623d; mov rdi, rbp; call rax; 
0x00000000146b8b: test eax, eax; je short 0x0000000000146b94; mov rdi, rbp; call rax; 
0x00000000146b6e: test eax, eax; je short 0x0000000000146be0; mov rax, [rbx+0x20]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x00000000146eba: test eax, eax; je short 0x0000000000146ec0; ret; 
0x000000001476d8: test eax, eax; je short 0x000000000014766f; mov rax, [rbp+0x8]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x00000000147b98: test eax, eax; je short 0x0000000000147b40; mov rax, [rsp+0xc8]; mov rdi, rbx; call qword ptr [rax+0x20]; 
0x00000000147bba: test eax, eax; je short 0x0000000000147bc3; mov rdi, rbx; call rax; 
0x00000000147f17: test eax, eax; je short 0x0000000000147f20; mov rdi, rbx; call rax; 
0x00000000148135: test eax, eax; je short 0x0000000000148140; xor eax, eax; ret; 
0x00000000148726: test eax, eax; je short 0x000000000014872f; mov rdi, r13; call rax; 
0x00000000148ab7: test eax, eax; je short 0x0000000000148ad8; mov rax, [rbx+0x23b8]; mov rdi, r12; call qword ptr [rax+0x20]; 
0x0000000014cf25: test eax, eax; je short 0x000000000014cf32; lea rdi, [rbp+0xc8]; call rax; 
0x0000000014d95b: test eax, eax; je short 0x000000000014d964; mov rdi, rbp; call rax; 
0x0000000014db40: test eax, eax; je short 0x000000000014db4b; lea rdi, [r12+0x10]; call rax; 
0x0000000014ee3f: test eax, eax; je short 0x000000000014ee48; mov rdi, rbp; call rax; 
0x0000000014ef24: test eax, eax; je short 0x000000000014ef2d; mov rdi, r13; call rax; 
0x0000000014fd52: test eax, eax; je short 0x000000000014fd5c; lea rdi, [rbp+0x68]; call rax; 
0x0000000015048a: test eax, eax; je short 0x0000000000150493; mov rdi, rbp; call rax; 
0x000000001507f2: test eax, eax; je short 0x00000000001507fc; lea rdi, [rbp+0x58]; call rax; 
0x000000001511a3: test eax, eax; je short 0x0000000000151220; mov rax, [r15+0x60]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x00000000151458: test eax, eax; je short 0x00000000001514d0; mov rax, [rbp+0x60]; mov rdi, r13; call qword ptr [rax+0x20]; 
0x00000000152483: test eax, eax; je short 0x0000000000152495; mov rax, [r8+0x38]; mov rdi, r8; call qword ptr [rax+0x20]; 
0x000000001531e0: test eax, eax; je short 0x0000000000153165; mov fs:[rbx], rax; pop rbx; ret; 
0x00000000153161: test eax, eax; je short 0x0000000000153170; pop rbx; ret; 
0x00000000154260: test eax, eax; je short 0x000000000015426b; lea rdi, [r12+0x10]; call rax; 
0x000000001549a9: test eax, eax; je short 0x00000000001549b4; lea rdi, [r12+0x10]; call rax; 
0x00000000154d36: test eax, eax; je short 0x0000000000154d70; mov rax, [rbp+0x18]; mov rdi, r13; call qword ptr [rax+0x20]; 
0x000000001570e3: test eax, eax; je short 0x0000000000157110; mov eax, r8d; ret; 
0x00000000157133: test eax, eax; je short 0x0000000000157160; mov eax, r8d; ret; 
0x0000000015f2cd: test eax, eax; je short 0x000000000015f2e3; mov rax, [rip+0x8cb88]; call qword ptr [rax+0x1f8]; 
0x0000000015fbe8: test eax, eax; je short 0x000000000015fbd7; call qword ptr [rax+0x18]; 
0x0000000017eb83: test eax, eax; je short 0x000000000017eb88; xchg edx, eax; sub eax, edx; ret; 
0x0000000017fb68: test eax, eax; je short 0x000000000017fb6d; xchg edx, eax; sub eax, edx; ret; 
0x0000000019838c: test eax, eax; je short 0x0000000000198392; call rax; 
0x00000000198489: test eax, eax; je short 0x0000000000198494; call rax; 
0x0000000011f156: test eax, eax; jl short 0x000000000011f16d; je short 0x000000000011f15d; ret; 
0x00000000098d34: test eax, eax; jne 0x0000000000098db8; sub dword ptr [rip+0x153e3d], 0x1; pop rbp; ret; 
0x000000000ac145: test eax, eax; jne 0x00000000000ac1f0; xor eax, eax; ret; 
0x000000000ce335: test eax, eax; jne 0x00000000000ce3e0; xor eax, eax; ret; 
0x0000000011ab34: test eax, eax; jne 0x000000000011aebb; mov rdi, [r15]; call rbx; 
0x0000000011ac99: test eax, eax; jne 0x000000000011af29; mov rdi, [r15]; call rbx; 
0x0000000011abb8: test eax, eax; jne 0x000000000011af97; mov rdi, [r15]; call rbx; 
0x0000000011ad4d: test eax, eax; jne 0x000000000011b005; mov rdi, [r15]; call rbx; 
0x0000000011ac12: test eax, eax; jne 0x000000000011b073; mov rdi, [r15]; call rbx; 
0x0000000011abe5: test eax, eax; jne 0x000000000011b0e1; mov rdi, [r15]; call rbx; 
0x0000000011ac6c: test eax, eax; jne 0x000000000011b14f; mov rdi, [r15]; call rbx; 
0x0000000011acf3: test eax, eax; jne 0x000000000011b1bd; mov rdi, [r15]; call rbx; 
0x0000000011ab5e: test eax, eax; jne 0x000000000011b22b; mov rdi, [r15]; call rbx; 
0x0000000011ac3f: test eax, eax; jne 0x000000000011b299; mov rdi, [r15]; call rbx; 
0x0000000011ad20: test eax, eax; jne 0x000000000011b307; mov rdi, [r15]; call rbx; 
0x0000000011ab8b: test eax, eax; jne 0x000000000011b375; mov rdi, [r15]; call rbx; 
0x0000000011acc6: test eax, eax; jne 0x000000000011b3e3; mov rdi, [r15]; call rbx; 
0x0000000011ad7a: test eax, eax; jne 0x000000000011b451; mov rdi, [r15]; call rbx; 
0x00000000160824: test eax, eax; jne 0x00000000001608a8; mov rcx, [rsp+0x10]; mov rdi, [rsp+0x18]; call rcx; 
0x00000000183f11: test eax, eax; jne 0x0000000000183e00; sub eax, ecx; vzeroupper; ret; 
0x0000000018442a: test eax, eax; jne 0x00000000001842d0; sub eax, ecx; vzeroupper; ret; 
0x000000001845e4: test eax, eax; jne 0x0000000000184680; xor eax, eax; vzeroupper; ret; 
0x00000000188928: test eax, eax; jne 0x00000000001889d0; mov rax, r8; vzeroupper; ret; 
0x0000000018c094: test eax, eax; jne 0x000000000018c130; xor eax, eax; vzeroupper; ret; 
0x0000000018c5fa: test eax, eax; jne 0x000000000018c530; sub eax, ecx; vzeroupper; ret; 
0x0000000018cb15: test eax, eax; jne 0x000000000018ca00; sub eax, ecx; vzeroupper; ret; 
0x000000001968eb: test eax, eax; jne 0x0000000000196840; add rsp, 0x38; ret; 
0x00000000033dcd: test eax, eax; jne short 0x0000000000033dd8; mov eax, r8d; ret; 
0x0000000004347c: test eax, eax; jne short 0x0000000000043498; mov esi, 0x8; mov eax, 0x82; syscall; 
0x0000000004414e: test eax, eax; jne short 0x00000000000441a8; mov r10d, 0x8; mov eax, 0x80; syscall; 
0x00000000047625: test eax, eax; jne short 0x0000000000047660; sub dword ptr [rip+0x1a6eb0], 0x1; pop rbp; ret; 
0x0000000004824c: test eax, eax; jne short 0x0000000000048260; mov eax, 0x13e; syscall; 
0x00000000057d7a: test eax, eax; jne short 0x0000000000057de0; mov dword ptr [rdx], 0x0; mov eax, 0x2; ret; 
0x000000000627da: test eax, eax; jne short 0x00000000000627e0; pop rbx; ret; 
0x00000000092754: test eax, eax; jne short 0x0000000000092748; ret; 
0x0000000009357c: test eax, eax; jne short 0x0000000000093570; ret; 
0x00000000094a23: test eax, eax; jne short 0x0000000000094a60; sub dword ptr [rip+0x159dd2], 0x1; pop rbx; ret; 
0x00000000096825: test eax, eax; jne short 0x0000000000096860; xor edi, edi; call qword ptr [r13]; 
0x00000000099f7b: test eax, eax; jne short 0x0000000000099fb8; sub dword ptr [rip+0x154ef2], 0x1; pop rbx; ret; 
0x0000000009e87f: test eax, eax; jne short 0x000000000009e870; xor eax, eax; ret; 
0x0000000009f88a: test eax, eax; jne short 0x000000000009f8a0; lea rax, [rip+0x14f6cb]; mov [rip+0x14f6ac], rax; ret; 
0x000000000ac175: test eax, eax; jne short 0x00000000000ac1d0; xor eax, eax; ret; 
0x000000000ac628: test eax, eax; jne short 0x00000000000ac6a0; xor eax, eax; ret; 
0x000000000ac657: test eax, eax; jne short 0x00000000000ac6d0; xor eax, eax; ret; 
0x000000000ce365: test eax, eax; jne short 0x00000000000ce3c0; xor eax, eax; ret; 
0x000000000d2938: test eax, eax; jne short 0x00000000000d2970; sub dword ptr [rip+0x11c85d], 0x1; add rsp, 0x8; ret; 
0x000000000d4abb: test eax, eax; jne short 0x00000000000d4ad0; mov rax, r8; add rsp, 0x8; ret; 
0x000000000df41e: test eax, eax; jne short 0x00000000000df450; mov eax, 0x74; syscall; 
0x000000000e2c5f: test eax, eax; jne short 0x00000000000e2c78; mov eax, 0x3d; syscall; 
0x000000000e2d0f: test eax, eax; jne short 0x00000000000e2d30; xor r8d, r8d; mov eax, 0xf7; syscall; 
0x000000000e2e6c: test eax, eax; jne short 0x00000000000e2e80; mov eax, 0x22; syscall; 
0x000000000e2ef7: test eax, eax; jne short 0x00000000000e2f00; add rsp, 0x8; ret; 
0x000000000e419e: test eax, eax; jne short 0x00000000000e41d0; mov eax, 0x69; syscall; 
0x000000000e423e: test eax, eax; jne short 0x00000000000e4270; mov eax, 0x6a; syscall; 
0x000000000e450e: test eax, eax; jne short 0x00000000000e4540; mov eax, 0x75; syscall; 
0x000000000e45be: test eax, eax; jne short 0x00000000000e45f0; mov eax, 0x77; syscall; 
0x0000000010c18f: test eax, eax; jne short 0x000000000010c1a8; mov eax, 0x11; syscall; 
0x0000000010c23f: test eax, eax; jne short 0x000000000010c258; mov eax, 0x12; syscall; 
0x0000000010dedb: test eax, eax; jne short 0x000000000010df40; mov eax, 0x101; syscall; 
0x0000000010dffc: test eax, eax; jne short 0x000000000010e010; syscall; 
0x0000000010e09c: test eax, eax; jne short 0x000000000010e0b0; mov eax, 0x1; syscall; 
0x0000000010e510: test eax, eax; jne short 0x000000000010e540; mov eax, 0x48; syscall; 
0x0000000010e83c: test eax, eax; jne short 0x000000000010e850; mov eax, 0x3; syscall; 
0x0000000010e9bc: test eax, eax; jne short 0x000000000010e9d0; mov eax, 0x55; syscall; 
0x0000000011298c: test eax, eax; jne short 0x00000000001129a0; mov eax, 0x7; syscall; 
0x0000000011300f: test eax, eax; jne short 0x0000000000113028; mov eax, 0x146; syscall; 
0x0000000011321f: test eax, eax; jne short 0x0000000000113238; mov eax, 0x115; syscall; 
0x000000001132cf: test eax, eax; jne short 0x00000000001132e8; mov eax, 0x11d; syscall; 
0x0000000011440c: test eax, eax; jne short 0x0000000000114420; mov eax, 0x13; syscall; 
0x000000001144ac: test eax, eax; jne short 0x00000000001144c0; mov eax, 0x14; syscall; 
0x0000000011454f: test eax, eax; jne short 0x0000000000114570; xor r8d, r8d; mov eax, 0x127; syscall; 
0x0000000011460f: test eax, eax; jne short 0x0000000000114630; xor r8d, r8d; mov eax, 0x128; syscall; 
0x0000000011499e: test eax, eax; jne short 0x00000000001149d0; mov eax, 0x71; syscall; 
0x00000000114a3e: test eax, eax; jne short 0x0000000000114a70; mov eax, 0x72; syscall; 
0x00000000114f9f: test eax, eax; jne short 0x0000000000114fb8; mov eax, 0x17; syscall; 
0x0000000011509f: test eax, eax; jne short 0x00000000001150d0; mov eax, 0x10e; syscall; 
0x000000001151cc: test eax, eax; jne short 0x00000000001151e0; mov eax, 0x4a; syscall; 
0x0000000011528c: test eax, eax; jne short 0x00000000001152a0; mov eax, 0x4b; syscall; 
0x00000000115f60: test eax, eax; jne short 0x0000000000115f24; xor eax, eax; pop rbp; ret; 
0x00000000117c28: test eax, eax; jne short 0x0000000000117c38; sub dword ptr [rip+0xd7c1d], 0x1; ret; 
0x00000000118687: test eax, eax; jne short 0x00000000001186f0; sub dword ptr [rip+0xd71be], 0x1; add rsp, 0x8; ret; 
0x00000000118a0c: test eax, eax; jne short 0x0000000000118a20; mov eax, 0x1a; syscall; 
0x0000000011ada3: test eax, eax; jne short 0x000000000011ade2; mov rdi, [r15]; call rbx; 
0x0000000011adcc: test eax, eax; jne short 0x000000000011ae4d; mov rdi, [r15]; call rbx; 
0x0000000011f25f: test eax, eax; jne short 0x000000000011f280; mov r9d, 0x8; mov eax, 0x119; syscall; 
0x0000000011f44f: test eax, eax; jne short 0x000000000011f468; mov eax, 0xe8; syscall; 
0x0000000011f4ff: test eax, eax; jne short 0x000000000011f518; mov eax, 0x114; syscall; 
0x0000000011f5af: test eax, eax; jne short 0x000000000011f5c8; mov eax, 0x116; syscall; 
0x0000000011f65f: test eax, eax; jne short 0x000000000011f678; mov eax, 0x113; syscall; 
0x0000000011f72c: test eax, eax; jne short 0x000000000011f740; mov eax, 0x130; syscall; 
0x000000001200fc: test eax, eax; jne short 0x0000000000120110; mov eax, 0x2b; syscall; 
0x000000001201cc: test eax, eax; jne short 0x00000000001201e0; mov eax, 0x2a; syscall; 
0x000000001203ef: test eax, eax; jne short 0x0000000000120408; mov eax, 0x2d; syscall; 
0x000000001204ac: test eax, eax; jne short 0x00000000001204c0; mov eax, 0x2f; syscall; 
0x0000000012060c: test eax, eax; jne short 0x0000000000120620; mov eax, 0x2e; syscall; 
0x000000001206af: test eax, eax; jne short 0x00000000001206c8; mov eax, 0x2c; syscall; 
0x00000000120b0f: test eax, eax; jne short 0x0000000000120b28; mov eax, 0x120; syscall; 
0x00000000120bbf: test eax, eax; jne short 0x0000000000120bd8; mov eax, 0x12b; syscall; 
0x00000000120c6f: test eax, eax; jne short 0x0000000000120c88; mov eax, 0x133; syscall; 
0x00000000120edf: test eax, eax; jne short 0x0000000000120ef8; mov eax, 0x45; syscall; 
0x00000000120f8f: test eax, eax; jne short 0x0000000000120fa8; mov eax, 0x46; syscall; 
0x0000000012cf07: test eax, eax; jne short 0x000000000012cf18; cmp qword ptr [rdi], 0x0; je short 0x000000000012cf20; ret; 
0x0000000012edfc: test eax, eax; jne short 0x000000000012eda9; mov rax, rdi; ret; 
0x00000000137c43: test eax, eax; jne short 0x0000000000137cb0; sub dword ptr [rip+0xb87ea], 0x1; add rsp, 0x8; ret; 
0x0000000013c35b: test eax, eax; jne short 0x000000000013c378; mov eax, r8d; ret; 
0x0000000014102e: test eax, eax; jne short 0x0000000000141038; ret; 
0x00000000142314: test eax, eax; jne short 0x0000000000142360; sub dword ptr [rip+0xae6f9], 0x1; pop rbp; ret; 
0x00000000142e9c: test eax, eax; jne short 0x0000000000142ea8; ret; 
0x00000000147142: test eax, eax; jne short 0x0000000000147160; mov rax, [rbp+0x8]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x000000001473f4: test eax, eax; jne short 0x000000000014740c; mov rax, [rbp+0x8]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x000000001481d5: test eax, eax; jne short 0x00000000001481e0; mov dword ptr [rsi], 0x0; ret; 
0x0000000014dd2a: test eax, eax; jne short 0x000000000014dd30; ret; 
0x0000000015442a: test eax, eax; jne short 0x0000000000154430; ret; 
0x0000000015ca4d: test eax, eax; jne short 0x000000000015ca80; sub dword ptr [rip+0x94c00], 0x1; add rsp, 0x8; ret; 
0x0000000015cc2d: test eax, eax; jne short 0x000000000015cc60; sub dword ptr [rip+0x94a20], 0x1; add rsp, 0x8; ret; 
0x00000000160b93: test eax, eax; jne short 0x0000000000160bac; mov eax, 0x27; syscall; 
0x00000000183e1b: test eax, eax; jne short 0x0000000000183e00; sub eax, ecx; vzeroupper; ret; 
0x000000001842f0: test eax, eax; jne short 0x00000000001842d0; sub eax, ecx; vzeroupper; ret; 
0x00000000184621: test eax, eax; jne short 0x0000000000184640; xor eax, eax; vzeroupper; ret; 
0x00000000188961: test eax, eax; jne short 0x0000000000188990; mov rax, r8; vzeroupper; ret; 
0x0000000018c0d1: test eax, eax; jne short 0x000000000018c0f0; xor eax, eax; vzeroupper; ret; 
0x0000000018c549: test eax, eax; jne short 0x000000000018c530; sub eax, ecx; vzeroupper; ret; 
0x0000000018ca1e: test eax, eax; jne short 0x000000000018ca00; sub eax, ecx; vzeroupper; ret; 
0x00000000190ad4: test eax, eax; jne short 0x0000000000190ae4; nop [rax+rax]; xor rax, rax; ret; 
0x00000000198963: test eax, eax; jne short 0x0000000000198990; sub dword ptr [rip+0x55e92], 0x1; pop rbx; ret; 
0x00000000198c74: test eax, eax; jne short 0x0000000000198cc0; sub dword ptr [rip+0x57899], 0x1; pop rbp; ret; 
0x0000000008aedf: test eax, eax; js short 0x000000000008aee8; ret; 
0x000000000a05d0: test eax, eax; lea rdx, [rip+0x1b9c7]; lea rax, [rip+0x1b940]; cmovne rax, rdx; ret; 
0x0000000012db05: test eax, eax; lea rdx, [rip+0x5def2]; lea rax, [rip+0x5df4b]; cmove rax, rdx; ret; 
0x000000000a05b5: test eax, eax; lea rdx, [rip+0xeb452]; lea rax, [rip+0xeb4ab]; cmove rax, rdx; ret; 
0x0000000012db20: test eax, eax; lea rdx, [rip-0x71b99]; lea rax, [rip-0x71c20]; cmovne rax, rdx; ret; 
0x00000000115736: test eax, eax; mov eax, 0x0; cmove rax, rbx; pop rbx; ret; 
0x0000000009529a: test eax, eax; mov eax, 0x10; cmovne rax, rdx; mov [rip+0x159bf4], rax; ret; 
0x000000000a2c67: test eax, eax; mov rax, rbx; pop rbx; cmovne rax, rdi; ret; 
0x000000000522e0: test eax, eax; sete al; add rsp, 0x8; movzx eax, al; ret; 
0x000000001457ca: test eax, eax; sete al; add rsp, 0x8; ret; 
0x0000000014adcd: test eax, eax; setne al; add rsp, 0x8; movzx eax, al; ret; 
0x0000000006d18f: test eax, ebx; add [rax], al; add [rcx-0x9], al; ret; 
0x0000000017c883: test eax, ebx; add eax, [rax]; add [rax-0x7cb7fec8], al; fdivr st, st(7); ret; 
0x0000000007510c: test eax, edi; idiv bh; call qword ptr [rax]; 
0x0000000014d93d: test eax, edx; add [rax], al; add [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x20]; 
0x000000001215b1: test eax, edx; idiv edi; inc dword ptr [rcx+rcx*4-0x10]; syscall; 
0x0000000012132b: test eax, esi; idiv edi; jmp qword ptr [rdi+0x6d]; 
0x0000000017ca7b: test eax, esp; add [rax], eax; add [rax-0x7cb7fec8], al; fdivr st, st(7); ret; 
0x0000000011a906: test ebp, eax; add [rax], eax; add [rcx-0x75], cl; jge short 0x000000000011a90f; call rbx; 
0x0000000017ce9e: test ebp, ebp; idiv bh; jmp qword ptr [rsi+0xf]; 
0x0000000009e7f9: test ebp, ebp; jne 0x000000000009e691; mov rax, [rip+0x14d748]; call qword ptr [rax]; 
0x0000000011a89d: test ebp, ebp; jne short 0x000000000011a8f0; mov rdi, [r12]; call rbx; 
0x0000000011a8cd: test ebp, ebp; jne short 0x000000000011a950; mov rdi, [r12]; call rbx; 
0x0000000011b430: test ebp, edi; add eax, 0x894c0000; and al, 0x8; mov rdi, [r8]; call rbx; 
0x00000000160a10: test ebx, ebx; jne short 0x0000000000160a20; pop rbx; ret; 
0x00000000160a40: test ebx, ebx; jne short 0x0000000000160a50; pop rbx; ret; 
0x00000000197293: test ebx, ebx; jne short 0x000000000019727d; pop rbx; ret; 
0x00000000198859: test ebx, ebx; jne short 0x0000000000198845; pop rbx; ret; 
0x000000001988fb: test ebx, ebx; jne short 0x00000000001988e0; pop rbx; ret; 
0x00000000142e97: test ebx, ebx; or al, [rax]; test rax, rax; jne short 0x0000000000142ea8; ret; 
0x0000000017c860: test ebx, edi; add eax, [rax]; add [rax-0x7cb7fec8], al; fdivr st, st(7); ret; 
0x0000000012d105: test ebx, edx; add [rax], al; add cl, cl; ret; 
0x000000000ac598: test ebx, esi; add [rax], al; add [rsi+0xf], ah; xlat [rbx]; ret; 
0x0000000009b578: test ebx, esp; add [rax], al; add [rax-0x7d], cl; call qword ptr [rax]; 
0x000000001933c2: test ecx, ebp; add al, 0x0; add [rbp-0x77], cl; ret far; 
0x0000000011b278: test ecx, ebp; add eax, 0x894c0000; and al, 0x8; mov rdi, [r8]; call rbx; 
0x0000000011aab6: test ecx, ebx; add al, [rax]; add [rcx-0x75], cl; notrack call rbx; 
0x000000000bcb6f: test ecx, ecx; jne short 0x00000000000bcb48; mov rax, r8; ret; 
0x0000000012312f: test ecx, ecx; jne short 0x0000000000123138; ret; 
0x00000000123198: test ecx, ecx; jne short 0x00000000001231a0; ret; 
0x00000000123a7f: test ecx, ecx; jne short 0x0000000000123a88; ret; 
0x00000000123adc: test ecx, ecx; jne short 0x0000000000123ae8; ret; 
0x000000000309f7: test edi, ecx; sbb eax, [rax]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000440f9: test edi, edi; je short 0x0000000000044120; lea edx, [rax+0x1]; mov [rip+0x1a80a6], edx; ret; 
0x00000000047492: test edi, edi; je short 0x000000000004749c; mov dword ptr [rdi], 0x0; pop rbx; ret; 
0x000000000e6367: test edi, edi; je short 0x00000000000e6375; mov rdi, rbx; call r15; 
0x00000000100f37: test edi, edi; je short 0x0000000000100f45; mov rdi, rbx; call r15; 
0x0000000011873a: test edi, edi; je short 0x0000000000118744; mov [rip+0xd3c04], edi; ret; 
0x000000001469fd: test edi, edi; je short 0x0000000000146a80; mov rax, [rdi+0x38]; call qword ptr [rax+0x18]; 
0x00000000146cd9: test edi, edi; je short 0x0000000000146cec; mov rax, [rdi+0x8]; call qword ptr [rax+0x20]; 
0x00000000146e8b: test edi, edi; je short 0x0000000000146e96; mov rax, [rdi+0x8]; call qword ptr [rax+0x20]; 
0x0000000006bb8b: test edi, edi; jmp qword ptr [rsi-0x70]; 
0x0000000011a9c3: test edi, edi; jne 0x000000000011abd2; mov rdi, [r14]; call rbx; 
0x0000000011aa83: test edi, edi; jne 0x000000000011ac2c; mov rdi, [r14]; call rbx; 
0x0000000011aa53: test edi, edi; jne 0x000000000011ac86; mov rdi, [r14]; call rbx; 
0x0000000011aa23: test edi, edi; jne 0x000000000011ace0; mov rdi, [r14]; call rbx; 
0x0000000011a9f3: test edi, edi; jne 0x000000000011ad3a; mov rdi, [r14]; call rbx; 
0x0000000011aab3: test edi, edi; jne 0x000000000011ad94; mov rdi, [r14]; call rbx; 
0x0000000011b3f6: test edi, edi; jne 0x000000000011b4fc; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011b388: test edi, edi; jne 0x000000000011b52a; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011b31a: test edi, edi; jne 0x000000000011b558; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011b2ac: test edi, edi; jne 0x000000000011b586; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011b23e: test edi, edi; jne 0x000000000011b5b4; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011b1d0: test edi, edi; jne 0x000000000011b5e2; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011b162: test edi, edi; jne 0x000000000011b610; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011b0f4: test edi, edi; jne 0x000000000011b63e; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011b086: test edi, edi; jne 0x000000000011b66c; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011b018: test edi, edi; jne 0x000000000011b69a; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011afaa: test edi, edi; jne 0x000000000011b6c8; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011af3c: test edi, edi; jne 0x000000000011b6f6; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011aece: test edi, edi; jne 0x000000000011b724; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011ae60: test edi, edi; jne 0x000000000011b752; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011adf5: test edi, edi; jne 0x000000000011b780; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011ae29: test edi, edi; jne 0x000000000011b7ae; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011afe1: test edi, edi; jne 0x000000000011b7dc; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011b199: test edi, edi; jne 0x000000000011b80a; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011af05: test edi, edi; jne 0x000000000011b838; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011b275: test edi, edi; jne 0x000000000011b866; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011b0bd: test edi, edi; jne 0x000000000011b894; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011b351: test edi, edi; jne 0x000000000011b8c2; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011ae97: test edi, edi; jne 0x000000000011b8f0; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011b207: test edi, edi; jne 0x000000000011b91e; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011b04f: test edi, edi; jne 0x000000000011b94c; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011b3bf: test edi, edi; jne 0x000000000011b97a; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011af73: test edi, edi; jne 0x000000000011b9a8; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011b2e3: test edi, edi; jne 0x000000000011b9d6; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011b12b: test edi, edi; jne 0x000000000011ba04; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011b42d: test edi, edi; jne 0x000000000011ba32; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x000000001173cc: test edi, edi; jne short 0x00000000001173e0; mov eax, 0x1; ret; 
0x00000000119bab: test edi, edi; jne short 0x0000000000119bd6; mov rdi, [rbp]; call rbx; 
0x0000000011aadf: test edi, edi; jne short 0x000000000011ab21; mov rdi, [r14]; call rbx; 
0x0000000011ab0b: test edi, edi; jne short 0x000000000011ab78; mov rdi, [r14]; call rbx; 
0x0000000011b460: test edi, edi; jne short 0x000000000011b4af; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011b48f: test edi, edi; jne short 0x000000000011b4d7; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x00000000137b81: test edi, edi; jne short 0x0000000000137b70; pop rbx; ret; 
0x0000000015de0a: test edi, edi; jns short 0x000000000015de10; ret; 
0x0000000009789a: test edi, edi; js 0x0000000000097a1c; mov rax, [rip+0x154517]; call qword ptr [rax]; 
0x000000000e5249: test edi, edi; js short 0x00000000000e5250; ret; 
0x0000000006c6e5: test edi, esp; add [rax], al; add [rcx-0x9], al; ret; 
0x0000000007dd2c: test edi, esp; or [rax], eax; add [rbx-0x4df43], cl; dec dword ptr [rcx-0x4e773]; jmp far fword ptr [rcx]; 
0x00000000041fb7: test edx, eax; je short 0x0000000000041fc0; ret; 
0x000000000c7a0e: test edx, ebp; and eax, [rax]; add dh, dh; ret; 
0x0000000017cec1: test edx, ecx; idiv bh; jmp qword ptr [rsi+0xf]; 
0x00000000079d2b: test edx, edi; dec dword ptr [rcx-0x77]; ret; 
0x0000000009e480: test edx, edi; jmp qword ptr [rsi+0x66]; 
0x0000000017c989: test edx, edx; add al, [rax]; add [rax-0x7cb7fec8], al; fdivr st, st(7); ret; 
0x000000000b1e1a: test edx, edx; je 0x00000000000b1ec0; bsf rax, rdx; ret; 
0x000000000cf75e: test edx, edx; je 0x00000000000cf800; bsf rax, rdx; shr rax, 0x2; ret; 
0x00000000030ecf: test edx, edx; je short 0x0000000000030ed5; call rdx; 
0x0000000008d323: test edx, edx; je short 0x000000000008d330; ret; 
0x0000000008d783: test edx, edx; je short 0x000000000008d790; ret; 
0x000000000b1c16: test edx, edx; je short 0x00000000000b1c1e; bsf eax, edx; ret; 
0x000000000b1cbb: test edx, edx; je short 0x00000000000b1cd0; bsf rax, rdx; ret; 
0x000000000b1c5e: test edx, edx; je short 0x00000000000b1ce0; bsf rax, rdx; ret; 
0x000000000b1e8a: test edx, edx; je short 0x00000000000b1eb0; bsf rax, rdx; ret; 
0x000000000cf7ca: test edx, edx; je short 0x00000000000cf7f0; bsf rax, rdx; shr rax, 0x2; ret; 
0x0000000011f7c4: test edx, edx; je short 0x000000000011f7f8; mov eax, 0x145; syscall; 
0x000000000630b6: test edx, edx; jne short 0x00000000000630c0; sub dword ptr [rdi], 0x1; ret; 
0x00000000083f68: test edx, edx; jne short 0x0000000000083f78; sub dword ptr [rip+0x16a80d], 0x1; ret; 
0x00000000086e4f: test edx, edx; jne short 0x0000000000086e40; ret; 
0x000000000908d7: test edx, edx; jne short 0x00000000000908e0; ret; 
0x0000000009101c: test edx, edx; jne short 0x0000000000091030; sub dword ptr [rip+0x15d799], 0x1; ret; 
0x00000000091717: test edx, edx; jne short 0x0000000000091708; ret; 
0x00000000093928: test edx, edx; jne short 0x0000000000093938; sub dword ptr [rip+0x15ae8d], 0x1; ret; 
0x0000000009e959: test edx, edx; jne short 0x000000000009e950; ret; 
0x000000000bbf75: test edx, edx; jne short 0x00000000000bbf7d; mov rax, rdi; ret; 
0x000000000bcc66: test edx, edx; jne short 0x00000000000bcc58; xor eax, eax; ret; 
0x000000000bcd00: test edx, edx; jne short 0x00000000000bcce0; ret; 
0x000000000bdfeb: test edx, edx; jne short 0x00000000000bdfe0; ret; 
0x00000000123381: test edx, edx; jne short 0x0000000000123390; ret; 
0x00000000123cb1: test edx, edx; jne short 0x0000000000123cc0; ret; 
0x00000000157c54: test edx, edx; jne short 0x0000000000157c68; mov r8d, 0x1; mov eax, r8d; ret; 
0x00000000157ca4: test edx, edx; jne short 0x0000000000157cb8; mov r8d, 0x1; mov eax, r8d; ret; 
0x000000001136e8: test edx, edx; js short 0x00000000001136f4; mov eax, [rdi+0x8]; and eax, 0x100f; ret; 
0x0000000013c95e: test edx, edx; js short 0x000000000013c970; mov rax, rdx; movsxd rdx, ecx; ret; 
0x00000000043e0b: test edx, edx; mov edx, 0x1; cmove eax, edx; ret; 
0x000000000bd242: test edx, edx; sete al; ret; 
0x00000000156467: test edx, edx; setne al; mov [rsp], rax; mov rax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x0000000010c79a: test esi, 0x575ff00; mov [rdi], si; xor eax, eax; ret; 
0x0000000011b089: test esi, ebx; add eax, 0x894c0000; and al, 0x8; mov rdi, [r8]; call rbx; 
0x0000000006d56c: test esi, edx; add [rax], al; add [rcx-0x9], al; ret; 
0x00000000038de8: test esi, esi; add [rax], al; add [rax-0x7d], cl; ret; 
0x0000000002fdb4: test esi, esi; je short 0x000000000002fdc0; cmp esi, 0x3; je short 0x000000000002fdc0; ret; 
0x000000000e311b: test esi, esi; je short 0x00000000000e312b; mov esi, 0x1; incsspq rsi; jmp rdi; 
0x00000000113118: test esi, esi; je short 0x0000000000113142; mov eax, 0x118; syscall; 
0x00000000116cb5: test esi, esi; je short 0x0000000000116ce8; mov eax, 0x105; syscall; 
0x00000000183926: test esi, esi; je short 0x0000000000183908; xor eax, eax; ret; 
0x0000000011a963: test esi, esi; jne 0x000000000011aa10; mov rdi, [r13]; call rbx; 
0x0000000011a933: test esi, esi; jne 0x000000000011aa70; mov rdi, [r13]; call rbx; 
0x0000000011a903: test esi, esi; jne 0x000000000011aad0; mov rdi, [r13]; call rbx; 
0x00000000057b67: test esi, esi; jne short 0x0000000000057b90; mov dword ptr [rdx], 0x0; mov eax, 0x1; ret; 
0x00000000057bf8: test esi, esi; jne short 0x0000000000057c28; mov dword ptr [rdx], 0x0; mov eax, 0x1; ret; 
0x00000000094d59: test esi, esi; jne short 0x0000000000094d70; and dword ptr [rdi+0x8], 0xfffffffe; xor eax, eax; ret; 
0x000000000b1d85: test esi, esi; jne short 0x00000000000b1d8d; xor rax, rax; ret; 
0x000000000cf6c5: test esi, esi; jne short 0x00000000000cf6cd; xor rax, rax; ret; 
0x000000000d0f05: test esi, esi; jne short 0x00000000000d0f38; mov eax, 0x60; syscall; 
0x0000000011a98f: test esi, esi; jne short 0x000000000011a9b0; mov rdi, [r13]; call rbx; 
0x0000000007a811: test esp, eax; idiv bh; jmp qword ptr [rax]; 
0x0000000009b29f: test esp, ebx; add [rax], al; add [rax-0x7d], cl; call qword ptr [rax]; 
0x000000001971e8: test esp, edi; dec dword ptr [rcx-0x75]; jge short 0x00000000001971ff; add rdi, rbp; call r12; 
0x00000000070673: test esp, esi; ret far; 
0x0000000009b86f: test esp, esp; add [rax], al; add [rax-0x7d], cl; call qword ptr [rax]; 
0x000000000de8c4: test esp, esp; je short 0x00000000000de8dd; mov rbx, r13; mov rdi, rbp; call r12; 
0x0000000011ef87: test esp, esp; je short 0x000000000011ef99; mov rsi, r8; mov rdi, rbp; call r12; 
0x0000000011a85c: test esp, esp; jne short 0x000000000011a888; mov rdi, [rbp]; call rbx; 
0x00000000043a07: test gs:[rdx], bl; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x000000001679f2: test qword ptr [rbx-0x76b703aa], 0x5789f74f; cld; ret; 
0x000000000a880d: test r10b, r9b; jne short 0x00000000000a87f0; mov rax, r8; ret; 
0x000000000de8c3: test r12, r12; je short 0x00000000000de8dd; mov rbx, r13; mov rdi, rbp; call r12; 
0x0000000011ef86: test r12, r12; je short 0x000000000011ef99; mov rsi, r8; mov rdi, rbp; call r12; 
0x0000000011a85b: test r12, r12; jne short 0x000000000011a888; mov rdi, [rbp]; call rbx; 
0x0000000009e7f8: test r13, r13; jne 0x000000000009e691; mov rax, [rip+0x14d748]; call qword ptr [rax]; 
0x0000000011a89c: test r13, r13; jne short 0x000000000011a8f0; mov rdi, [r12]; call rbx; 
0x0000000011a8cc: test r13, r13; jne short 0x000000000011a950; mov rdi, [r12]; call rbx; 
0x0000000011a962: test r14, r14; jne 0x000000000011aa10; mov rdi, [r13]; call rbx; 
0x0000000011a932: test r14, r14; jne 0x000000000011aa70; mov rdi, [r13]; call rbx; 
0x0000000011a902: test r14, r14; jne 0x000000000011aad0; mov rdi, [r13]; call rbx; 
0x0000000011a98e: test r14, r14; jne short 0x000000000011a9b0; mov rdi, [r13]; call rbx; 
0x000000000e6366: test r15, r15; je short 0x00000000000e6375; mov rdi, rbx; call r15; 
0x00000000100f36: test r15, r15; je short 0x0000000000100f45; mov rdi, rbx; call r15; 
0x0000000011a9c2: test r15, r15; jne 0x000000000011abd2; mov rdi, [r14]; call rbx; 
0x0000000011aa82: test r15, r15; jne 0x000000000011ac2c; mov rdi, [r14]; call rbx; 
0x0000000011aa52: test r15, r15; jne 0x000000000011ac86; mov rdi, [r14]; call rbx; 
0x0000000011aa22: test r15, r15; jne 0x000000000011ace0; mov rdi, [r14]; call rbx; 
0x0000000011a9f2: test r15, r15; jne 0x000000000011ad3a; mov rdi, [r14]; call rbx; 
0x0000000011aab2: test r15, r15; jne 0x000000000011ad94; mov rdi, [r14]; call rbx; 
0x0000000011aade: test r15, r15; jne short 0x000000000011ab21; mov rdi, [r14]; call rbx; 
0x0000000011ab0a: test r15, r15; jne short 0x000000000011ab78; mov rdi, [r14]; call rbx; 
0x000000001469fc: test r15d, r15d; je short 0x0000000000146a80; mov rax, [rdi+0x38]; call qword ptr [rax+0x18]; 
0x00000000152482: test r8, r8; je short 0x0000000000152495; mov rax, [r8+0x38]; mov rdi, r8; call qword ptr [rax+0x20]; 
0x0000000011ab33: test r8, r8; jne 0x000000000011aebb; mov rdi, [r15]; call rbx; 
0x0000000011ac98: test r8, r8; jne 0x000000000011af29; mov rdi, [r15]; call rbx; 
0x0000000011abb7: test r8, r8; jne 0x000000000011af97; mov rdi, [r15]; call rbx; 
0x0000000011ad4c: test r8, r8; jne 0x000000000011b005; mov rdi, [r15]; call rbx; 
0x0000000011ac11: test r8, r8; jne 0x000000000011b073; mov rdi, [r15]; call rbx; 
0x0000000011abe4: test r8, r8; jne 0x000000000011b0e1; mov rdi, [r15]; call rbx; 
0x0000000011ac6b: test r8, r8; jne 0x000000000011b14f; mov rdi, [r15]; call rbx; 
0x0000000011acf2: test r8, r8; jne 0x000000000011b1bd; mov rdi, [r15]; call rbx; 
0x0000000011ab5d: test r8, r8; jne 0x000000000011b22b; mov rdi, [r15]; call rbx; 
0x0000000011ac3e: test r8, r8; jne 0x000000000011b299; mov rdi, [r15]; call rbx; 
0x0000000011ad1f: test r8, r8; jne 0x000000000011b307; mov rdi, [r15]; call rbx; 
0x0000000011ab8a: test r8, r8; jne 0x000000000011b375; mov rdi, [r15]; call rbx; 
0x0000000011acc5: test r8, r8; jne 0x000000000011b3e3; mov rdi, [r15]; call rbx; 
0x0000000011ad79: test r8, r8; jne 0x000000000011b451; mov rdi, [r15]; call rbx; 
0x0000000011ada2: test r8, r8; jne short 0x000000000011ade2; mov rdi, [r15]; call rbx; 
0x0000000011adcb: test r8, r8; jne short 0x000000000011ae4d; mov rdi, [r15]; call rbx; 
0x0000000009a089: test r8b, r8b; jne short 0x000000000009a099; mov dword ptr [rip+0x154de0], 0x0; ret; 
0x00000000062f27: test r8d, r8d; je short 0x0000000000062f70; mov eax, 0x13c; syscall; 
0x0000000017eb82: test r8d, r8d; je short 0x000000000017eb88; xchg edx, eax; sub eax, edx; ret; 
0x0000000017fb67: test r8d, r8d; je short 0x000000000017fb6d; xchg edx, eax; sub eax, edx; ret; 
0x000000001968ea: test r8d, r8d; jne 0x0000000000196840; add rsp, 0x38; ret; 
0x000000000627d9: test r8d, r8d; jne short 0x00000000000627e0; pop rbx; ret; 
0x000000001481d4: test r8d, r8d; jne short 0x00000000001481e0; mov dword ptr [rsi], 0x0; ret; 
0x000000000a8949: test r9b, dil; jne short 0x00000000000a8928; ret; 
0x000000000cf590: test rax, 0x1; je 0x00000000000cf4f5; lea rax, [rdi-0x10]; ret; 
0x000000000cf640: test rax, 0x1; je short 0x00000000000cf6b0; lea rax, [rdi-0x10]; ret; 
0x0000000012d044: test rax, rax; cmove rax, rdx; mov [rip+0xc2e26], rax; pop rbp; ret; 
0x000000000243df: test rax, rax; je 0x00000000000226c2; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000009cde4: test rax, rax; je 0x000000000009cec0; call rax; 
0x0000000009cf1c: test rax, rax; je 0x000000000009cff0; call rax; 
0x0000000009d2f8: test rax, rax; je 0x000000000009d470; mov rdx, r13; mov rdi, r12; call rax; 
0x0000000009dc9a: test rax, rax; je 0x000000000009dd50; mov rsi, r12; mov rdi, rbp; call rax; 
0x0000000009deff: test rax, rax; je 0x000000000009dfb0; mov rsi, rbp; mov rdi, r12; call rax; 
0x0000000011c30a: test rax, rax; je 0x000000000011c400; call rax; 
0x00000000147e21: test rax, rax; je 0x0000000000147cae; mov rdi, rbx; call rax; 
0x00000000030c51: test rax, rax; je short 0x0000000000030c58; call rax; 
0x00000000031fac: test rax, rax; je short 0x0000000000031fb3; call rax; 
0x00000000082a58: test rax, rax; je short 0x0000000000082a66; mov rdi, [rdi+0xe0]; jmp rax; 
0x00000000082a91: test rax, rax; je short 0x0000000000082aa7; mov rbp, rdx; mov rdi, [rdi+0xe0]; call rax; 
0x00000000082ae1: test rax, rax; je short 0x0000000000082b08; mov rdi, [rdi+0xe0]; lea rsi, [rsp+0x8]; call rax; 
0x00000000082b38: test rax, rax; je short 0x0000000000082b50; mov rdi, [rdi+0xe0]; jmp rax; 
0x0000000008e5c0: test rax, rax; je short 0x000000000008e5d0; pop rbx; ret; 
0x000000000927b8: test rax, rax; je short 0x00000000000927cc; mov qword ptr [rax], 0x0; mov qword ptr [rax+0x8], 0x0; ret; 
0x00000000094af9: test rax, rax; je short 0x0000000000094b00; call rax; 
0x00000000094b82: test rax, rax; je short 0x0000000000094b89; call rax; 
0x00000000094bf2: test rax, rax; je short 0x0000000000094bf9; call rax; 
0x00000000099210: test rax, rax; je short 0x0000000000099217; call rax; 
0x0000000009d128: test rax, rax; je short 0x000000000009d190; mov rsi, r12; mov rdi, rbp; call rax; 
0x000000000dd05e: test rax, rax; je short 0x00000000000dd098; call rax; 
0x000000000dd0de: test rax, rax; je short 0x00000000000dd118; call rax; 
0x0000000010d38f: test rax, rax; je short 0x000000000010d3d0; xor edx, edx; call rax; 
0x00000000114c6f: test rax, rax; je short 0x0000000000114c75; ret; 
0x00000000116de4: test rax, rax; je short 0x0000000000116dec; mov [rax], rdx; ret; 
0x0000000011c129: test rax, rax; je short 0x000000000011c190; call rax; 
0x0000000012bdde: test rax, rax; je short 0x000000000012be10; mov rdi, [rdx+0x50]; mov rsi, rdx; call rax; 
0x0000000012d0c4: test rax, rax; je short 0x000000000012d0f5; lea rsi, [rbp-0x20]; lea rdi, [rip-0x184]; call rax; 
0x0000000012e8ed: test rax, rax; je short 0x000000000012e900; add rsp, 0x8; ret; 
0x0000000013787c: test rax, rax; je short 0x0000000000137886; mov rdi, rbx; call rax; 
0x00000000137b9c: test rax, rax; je short 0x0000000000137ba6; mov rdi, rbx; call rax; 
0x00000000137c64: test rax, rax; je short 0x0000000000137c72; lea rdi, [rip+0xb8770]; call rax; 
0x00000000141a63: test rax, rax; je short 0x0000000000141a70; add rsp, 0x8; ret; 
0x00000000146233: test rax, rax; je short 0x000000000014623d; mov rdi, rbp; call rax; 
0x00000000146b8a: test rax, rax; je short 0x0000000000146b94; mov rdi, rbp; call rax; 
0x00000000147bb9: test rax, rax; je short 0x0000000000147bc3; mov rdi, rbx; call rax; 
0x00000000147f16: test rax, rax; je short 0x0000000000147f20; mov rdi, rbx; call rax; 
0x00000000148725: test rax, rax; je short 0x000000000014872f; mov rdi, r13; call rax; 
0x0000000014cf24: test rax, rax; je short 0x000000000014cf32; lea rdi, [rbp+0xc8]; call rax; 
0x0000000014d95a: test rax, rax; je short 0x000000000014d964; mov rdi, rbp; call rax; 
0x0000000014db3f: test rax, rax; je short 0x000000000014db4b; lea rdi, [r12+0x10]; call rax; 
0x0000000014ee3e: test rax, rax; je short 0x000000000014ee48; mov rdi, rbp; call rax; 
0x0000000014ef23: test rax, rax; je short 0x000000000014ef2d; mov rdi, r13; call rax; 
0x0000000014fd51: test rax, rax; je short 0x000000000014fd5c; lea rdi, [rbp+0x68]; call rax; 
0x00000000150489: test rax, rax; je short 0x0000000000150493; mov rdi, rbp; call rax; 
0x000000001507f1: test rax, rax; je short 0x00000000001507fc; lea rdi, [rbp+0x58]; call rax; 
0x000000001531df: test rax, rax; je short 0x0000000000153165; mov fs:[rbx], rax; pop rbx; ret; 
0x00000000153160: test rax, rax; je short 0x0000000000153170; pop rbx; ret; 
0x0000000015425f: test rax, rax; je short 0x000000000015426b; lea rdi, [r12+0x10]; call rax; 
0x000000001549a8: test rax, rax; je short 0x00000000001549b4; lea rdi, [r12+0x10]; call rax; 
0x0000000015f2cc: test rax, rax; je short 0x000000000015f2e3; mov rax, [rip+0x8cb88]; call qword ptr [rax+0x1f8]; 
0x0000000015fbe7: test rax, rax; je short 0x000000000015fbd7; call qword ptr [rax+0x18]; 
0x0000000019838b: test rax, rax; je short 0x0000000000198392; call rax; 
0x00000000198488: test rax, rax; je short 0x0000000000198494; call rax; 
0x0000000011f155: test rax, rax; jl short 0x000000000011f16d; je short 0x000000000011f15d; ret; 
0x00000000057d79: test rax, rax; jne short 0x0000000000057de0; mov dword ptr [rdx], 0x0; mov eax, 0x2; ret; 
0x00000000092753: test rax, rax; jne short 0x0000000000092748; ret; 
0x0000000009357b: test rax, rax; jne short 0x0000000000093570; ret; 
0x00000000096824: test rax, rax; jne short 0x0000000000096860; xor edi, edi; call qword ptr [r13]; 
0x0000000009e87e: test rax, rax; jne short 0x000000000009e870; xor eax, eax; ret; 
0x00000000115f5f: test rax, rax; jne short 0x0000000000115f24; xor eax, eax; pop rbp; ret; 
0x00000000142e9b: test rax, rax; jne short 0x0000000000142ea8; ret; 
0x00000000095299: test rax, rax; mov eax, 0x10; cmovne rax, rdx; mov [rip+0x159bf4], rax; ret; 
0x000000000a2c66: test rax, rax; mov rax, rbx; pop rbx; cmovne rax, rdi; ret; 
0x000000001457c9: test rax, rax; sete al; add rsp, 0x8; ret; 
0x00000000160a0f: test rbx, rbx; jne short 0x0000000000160a20; pop rbx; ret; 
0x00000000160a3f: test rbx, rbx; jne short 0x0000000000160a50; pop rbx; ret; 
0x00000000197292: test rbx, rbx; jne short 0x000000000019727d; pop rbx; ret; 
0x00000000198858: test rbx, rbx; jne short 0x0000000000198845; pop rbx; ret; 
0x000000001988fa: test rbx, rbx; jne short 0x00000000001988e0; pop rbx; ret; 
0x00000000047491: test rdi, rdi; je short 0x000000000004749c; mov dword ptr [rdi], 0x0; pop rbx; ret; 
0x00000000146cd8: test rdi, rdi; je short 0x0000000000146cec; mov rax, [rdi+0x8]; call qword ptr [rax+0x20]; 
0x00000000146e8a: test rdi, rdi; je short 0x0000000000146e96; mov rax, [rdi+0x8]; call qword ptr [rax+0x20]; 
0x0000000011b3f5: test rdi, rdi; jne 0x000000000011b4fc; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011b387: test rdi, rdi; jne 0x000000000011b52a; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011b319: test rdi, rdi; jne 0x000000000011b558; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011b2ab: test rdi, rdi; jne 0x000000000011b586; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011b23d: test rdi, rdi; jne 0x000000000011b5b4; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011b1cf: test rdi, rdi; jne 0x000000000011b5e2; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011b161: test rdi, rdi; jne 0x000000000011b610; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011b0f3: test rdi, rdi; jne 0x000000000011b63e; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011b085: test rdi, rdi; jne 0x000000000011b66c; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011b017: test rdi, rdi; jne 0x000000000011b69a; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011afa9: test rdi, rdi; jne 0x000000000011b6c8; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011af3b: test rdi, rdi; jne 0x000000000011b6f6; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011aecd: test rdi, rdi; jne 0x000000000011b724; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011ae5f: test rdi, rdi; jne 0x000000000011b752; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011adf4: test rdi, rdi; jne 0x000000000011b780; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011ae28: test rdi, rdi; jne 0x000000000011b7ae; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011afe0: test rdi, rdi; jne 0x000000000011b7dc; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011b198: test rdi, rdi; jne 0x000000000011b80a; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011af04: test rdi, rdi; jne 0x000000000011b838; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011b274: test rdi, rdi; jne 0x000000000011b866; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011b0bc: test rdi, rdi; jne 0x000000000011b894; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011b350: test rdi, rdi; jne 0x000000000011b8c2; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011ae96: test rdi, rdi; jne 0x000000000011b8f0; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011b206: test rdi, rdi; jne 0x000000000011b91e; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011b04e: test rdi, rdi; jne 0x000000000011b94c; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011b3be: test rdi, rdi; jne 0x000000000011b97a; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011af72: test rdi, rdi; jne 0x000000000011b9a8; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011b2e2: test rdi, rdi; jne 0x000000000011b9d6; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011b12a: test rdi, rdi; jne 0x000000000011ba04; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011b42c: test rdi, rdi; jne 0x000000000011ba32; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x000000001173cb: test rdi, rdi; jne short 0x00000000001173e0; mov eax, 0x1; ret; 
0x00000000119baa: test rdi, rdi; jne short 0x0000000000119bd6; mov rdi, [rbp]; call rbx; 
0x0000000011b45f: test rdi, rdi; jne short 0x000000000011b4af; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000011b48e: test rdi, rdi; jne short 0x000000000011b4d7; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x00000000137b7f: test rdi, rdi; jne short 0x0000000000137b70; pop rbx; ret; 
0x00000000097899: test rdi, rdi; js 0x0000000000097a1c; mov rax, [rip+0x154517]; call qword ptr [rax]; 
0x00000000041fb6: test rdx, rax; je short 0x0000000000041fc0; ret; 
0x000000000b1e19: test rdx, rdx; je 0x00000000000b1ec0; bsf rax, rdx; ret; 
0x000000000cf75d: test rdx, rdx; je 0x00000000000cf800; bsf rax, rdx; shr rax, 0x2; ret; 
0x00000000030ece: test rdx, rdx; je short 0x0000000000030ed5; call rdx; 
0x000000000b1cba: test rdx, rdx; je short 0x00000000000b1cd0; bsf rax, rdx; ret; 
0x000000000b1c5d: test rdx, rdx; je short 0x00000000000b1ce0; bsf rax, rdx; ret; 
0x000000000b1e89: test rdx, rdx; je short 0x00000000000b1eb0; bsf rax, rdx; ret; 
0x000000000cf7c9: test rdx, rdx; je short 0x00000000000cf7f0; bsf rax, rdx; shr rax, 0x2; ret; 
0x00000000086e4e: test rdx, rdx; jne short 0x0000000000086e40; ret; 
0x000000000908d6: test rdx, rdx; jne short 0x00000000000908e0; ret; 
0x00000000091716: test rdx, rdx; jne short 0x0000000000091708; ret; 
0x0000000009e958: test rdx, rdx; jne short 0x000000000009e950; ret; 
0x000000000bbf74: test rdx, rdx; jne short 0x00000000000bbf7d; mov rax, rdi; ret; 
0x0000000013c95d: test rdx, rdx; js short 0x000000000013c970; mov rax, rdx; movsxd rdx, ecx; ret; 
0x000000000e311a: test rsi, rsi; je short 0x00000000000e312b; mov esi, 0x1; incsspq rsi; jmp rdi; 
0x00000000113117: test rsi, rsi; je short 0x0000000000113142; mov eax, 0x118; syscall; 
0x00000000116cb4: test rsi, rsi; je short 0x0000000000116ce8; mov eax, 0x105; syscall; 
0x00000000057b66: test rsi, rsi; jne short 0x0000000000057b90; mov dword ptr [rdx], 0x0; mov eax, 0x1; ret; 
0x00000000057bf7: test rsi, rsi; jne short 0x0000000000057c28; mov dword ptr [rdx], 0x0; mov eax, 0x1; ret; 
0x000000000b1d84: test rsi, rsi; jne short 0x00000000000b1d8d; xor rax, rax; ret; 
0x000000000cf6c4: test rsi, rsi; jne short 0x00000000000cf6cd; xor rax, rax; ret; 
0x000000000d0f04: test rsi, rsi; jne short 0x00000000000d0f38; mov eax, 0x60; syscall; 
0x0000000010c799: test si, 0xff00; jne short 0x000000000010c7a5; mov [rdi], si; xor eax, eax; ret; 
0x000000000a863c: test sil, sil; jne short 0x00000000000a8630; mov [rdx], rcx; ret; 
0x00000000027228: test sil, sil; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x000000001846c0: tzcnt eax, eax; add rax, 0x20; add rax, rdi; vzeroupper; ret; 
0x000000001846d0: tzcnt eax, eax; add rax, 0x40; add rax, rdi; vzeroupper; ret; 
0x000000001846fe: tzcnt eax, eax; add rax, 0x60; add rax, rdi; vzeroupper; ret; 
0x00000000188293: tzcnt eax, eax; add rax, rcx; add rax, rdi; vzeroupper; ret; 
0x00000000184765: tzcnt eax, eax; add rax, rdi; add rax, rcx; vzeroupper; ret; 
0x000000001886f0: tzcnt eax, eax; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x000000001846b0: tzcnt eax, eax; add rax, rdi; vzeroupper; ret; 
0x00000000042216: ucomisd xmm0, xmm4; jp short 0x0000000000042228; jne short 0x0000000000042228; addsd xmm0, xmm0; ret; 
0x00000000042217: ucomiss xmm0, xmm4; jp short 0x0000000000042228; jne short 0x0000000000042228; addsd xmm0, xmm0; ret; 
0x00000000042543: ucomiss xmm0, xmm4; jp short 0x0000000000042550; jne short 0x0000000000042550; addss xmm0, xmm0; ret; 
0x0000000015ea2b: ud0 edi, edi; call qword ptr [rax+0x1903c764]; 
0x0000000011695b: ud0 edi, edi; call qword ptr [rax+0x305c02c7]; 
0x00000000137b1d: ud0 edi, edi; jmp qword ptr [rsi+0x66]; 
0x0000000014e7e6: ud0 edi, edi; jmp qword ptr [rsi+0xf]; 
0x0000000016b35d: ud2; lea r11, [rip+0x5279a]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000009dff3: unpckhps xmm0, [rax]; syscall; 
0x00000000149b36: vcmppd xmm9, xmm10, [rax-0x77], 0xee; call qword ptr [rbx+0x40]; 
0x000000000bd7db: verw ax; fisub st, word ptr [rdi-0x9]; jmp qword ptr [rsi+0xf]; 
0x000000000bdc93: verw ax; movsxd esi, edi; jmp qword ptr [rsi+0xf]; 
0x000000000bc25a: verw ax; pop rdi; jge short 0x00000000000bc257; jmp qword ptr [rsi+0x66]; 
0x0000000018b7fc: vmovdqu [r11], ymm4; vzeroupper; ret; 
0x0000000018b8a3: vmovdqu [r11], ymm8; vzeroupper; ret; 
0x0000000018fa2e: vmovdqu [r9-0x10], xmm1; ret; 
0x0000000018fa1a: vmovdqu [r9-0x20], ymm1; ret; 
0x0000000018fa01: vmovdqu [r9-0x20], ymm3; ret; 
0x0000000018f9fb: vmovdqu [r9-0x40], ymm2; vmovdqu [r9-0x20], ymm3; ret; 
0x0000000018b7f2: vmovdqu [rcx-0x40], ymm7; vmovdqu [rcx-0x60], ymm8; vmovdqu [r11], ymm4; vzeroupper; ret; 
0x0000000018b7f7: vmovdqu [rcx-0x60], ymm8; vmovdqu [r11], ymm4; vzeroupper; ret; 
0x0000000018bab4: vmovdqu [rdi+0x20], ymm0; vmovdqu [rdi+rdx-0x20], ymm0; vmovdqu [rdi+rdx-0x40], ymm0; vzeroupper; ret; 
0x0000000018f9f6: vmovdqu [rdi+0x20], ymm1; vmovdqu [r9-0x40], ymm2; vmovdqu [r9-0x20], ymm3; ret; 
0x0000000018b73c: vmovdqu [rdi+0x20], ymm1; vmovdqu [rdi+rdx-0x20], ymm2; vmovdqu [rdi+rdx-0x40], ymm3; vzeroupper; ret; 
0x0000000018b2a0: vmovdqu [rdi+0x20], ymm3; mov [rdi+0x40], cl; lea rax, [rdi+0x41]; vzeroupper; ret; 
0x000000001899c0: vmovdqu [rdi+0x20], ymm3; mov [rdi+0x40], cl; mov byte ptr [rdi+0x41], 0x0; vzeroupper; ret; 
0x0000000018a570: vmovdqu [rdi+0x20], ymm3; mov [rdi+0x40], cl; vzeroupper; ret; 
0x0000000018b899: vmovdqu [rdi+0x40], ymm6; vmovdqu [rdi+0x60], ymm7; vmovdqu [r11], ymm8; vzeroupper; ret; 
0x0000000018b446: vmovdqu [rdi+0x60], ymm7; lea rax, [rdi+0x80]; vzeroupper; ret; 
0x00000000189a16: vmovdqu [rdi+0x60], ymm7; mov byte ptr [rdi+0x80], 0x0; vzeroupper; ret; 
0x0000000018b89e: vmovdqu [rdi+0x60], ymm7; vmovdqu [r11], ymm8; vzeroupper; ret; 
0x0000000018a716: vmovdqu [rdi+0x60], ymm7; vzeroupper; ret; 
0x0000000018a5d4: vmovdqu [rdi+r8-0x10], xmm0; vzeroupper; ret; 
0x0000000018b25f: vmovdqu [rdi+r8-0x10], xmm3; lea rax, [rdi+r8]; vzeroupper; ret; 
0x0000000018997f: vmovdqu [rdi+r8-0x10], xmm3; mov byte ptr [rdi+r8], 0x0; vzeroupper; ret; 
0x0000000018a52f: vmovdqu [rdi+r8-0x10], xmm3; vzeroupper; ret; 
0x0000000018b27f: vmovdqu [rdi+r8-0x20], ymm3; lea rax, [rdi+r8]; vzeroupper; ret; 
0x0000000018999f: vmovdqu [rdi+r8-0x20], ymm3; mov byte ptr [rdi+r8], 0x0; vzeroupper; ret; 
0x0000000018a54f: vmovdqu [rdi+r8-0x20], ymm3; vzeroupper; ret; 
0x0000000018bb4f: vmovdqu [rdi+rdx-0x10], xmm0; vmovdqu [rdi], xmm0; vzeroupper; ret; 
0x0000000018b670: vmovdqu [rdi+rdx-0x10], xmm1; ret; 
0x0000000018abae: vmovdqu [rdi+rdx-0x1f], ymm3; lea rax, [rdi+rdx]; vzeroupper; ret; 
0x000000001890fe: vmovdqu [rdi+rdx-0x1f], ymm3; vzeroupper; ret; 
0x0000000018bab9: vmovdqu [rdi+rdx-0x20], ymm0; vmovdqu [rdi+rdx-0x40], ymm0; vzeroupper; ret; 
0x0000000018ba30: vmovdqu [rdi+rdx-0x20], ymm0; vmovdqu [rdi], ymm0; vzeroupper; ret; 
0x0000000018b5a9: vmovdqu [rdi+rdx-0x20], ymm1; vzeroupper; ret; 
0x0000000018b741: vmovdqu [rdi+rdx-0x20], ymm2; vmovdqu [rdi+rdx-0x40], ymm3; vzeroupper; ret; 
0x0000000018babf: vmovdqu [rdi+rdx-0x40], ymm0; vzeroupper; ret; 
0x0000000018b747: vmovdqu [rdi+rdx-0x40], ymm3; vzeroupper; ret; 
0x0000000018b70d: vmovdqu [rdi+rdx-0x40], ymm5; vmovdqu [rdi+rdx-0x60], ymm6; vmovdqu [rdi+rdx-0x80], ymm7; vzeroupper; ret; 
0x0000000018b713: vmovdqu [rdi+rdx-0x60], ymm6; vmovdqu [rdi+rdx-0x80], ymm7; vzeroupper; ret; 
0x0000000018b719: vmovdqu [rdi+rdx-0x80], ymm7; vzeroupper; ret; 
0x0000000018ab8e: vmovdqu [rdi+rdx-0xf], xmm3; lea rax, [rdi+rdx]; vzeroupper; ret; 
0x000000001890de: vmovdqu [rdi+rdx-0xf], xmm3; vzeroupper; ret; 
0x0000000018fa2a: vmovdqu [rdi], xmm0; vmovdqu [r9-0x10], xmm1; ret; 
0x0000000018a5d0: vmovdqu [rdi], xmm0; vmovdqu [rdi+r8-0x10], xmm0; vzeroupper; ret; 
0x0000000018b66c: vmovdqu [rdi], xmm0; vmovdqu [rdi+rdx-0x10], xmm1; ret; 
0x00000000190109: vmovdqu [rdi], xmm0; vmovdqu [rsi-0x10], xmm0; ret; 
0x0000000018bb55: vmovdqu [rdi], xmm0; vzeroupper; ret; 
0x0000000018b25b: vmovdqu [rdi], xmm2; vmovdqu [rdi+r8-0x10], xmm3; lea rax, [rdi+r8]; vzeroupper; ret; 
0x0000000018997b: vmovdqu [rdi], xmm2; vmovdqu [rdi+r8-0x10], xmm3; mov byte ptr [rdi+r8], 0x0; vzeroupper; ret; 
0x0000000018a52b: vmovdqu [rdi], xmm2; vmovdqu [rdi+r8-0x10], xmm3; vzeroupper; ret; 
0x0000000018ab8a: vmovdqu [rdi], xmm2; vmovdqu [rdi+rdx-0xf], xmm3; lea rax, [rdi+rdx]; vzeroupper; ret; 
0x000000001890da: vmovdqu [rdi], xmm2; vmovdqu [rdi+rdx-0xf], xmm3; vzeroupper; ret; 
0x0000000018fa16: vmovdqu [rdi], ymm0; vmovdqu [r9-0x20], ymm1; ret; 
0x0000000018f9f2: vmovdqu [rdi], ymm0; vmovdqu [rdi+0x20], ymm1; vmovdqu [r9-0x40], ymm2; vmovdqu [r9-0x20], ymm3; ret; 
0x0000000018b5a5: vmovdqu [rdi], ymm0; vmovdqu [rdi+rdx-0x20], ymm1; vzeroupper; ret; 
0x0000000018ba36: vmovdqu [rdi], ymm0; vzeroupper; ret; 
0x0000000018a56c: vmovdqu [rdi], ymm2; vmovdqu [rdi+0x20], ymm3; mov [rdi+0x40], cl; vzeroupper; ret; 
0x0000000018b27b: vmovdqu [rdi], ymm2; vmovdqu [rdi+r8-0x20], ymm3; lea rax, [rdi+r8]; vzeroupper; ret; 
0x0000000018999b: vmovdqu [rdi], ymm2; vmovdqu [rdi+r8-0x20], ymm3; mov byte ptr [rdi+r8], 0x0; vzeroupper; ret; 
0x0000000018a54b: vmovdqu [rdi], ymm2; vmovdqu [rdi+r8-0x20], ymm3; vzeroupper; ret; 
0x0000000018abaa: vmovdqu [rdi], ymm2; vmovdqu [rdi+rdx-0x1f], ymm3; lea rax, [rdi+rdx]; vzeroupper; ret; 
0x000000001890fa: vmovdqu [rdi], ymm2; vmovdqu [rdi+rdx-0x1f], ymm3; vzeroupper; ret; 
0x000000001900ff: vmovdqu [rdi], ymm2; vmovdqu [rsi-0x20], ymm2; ret; 
0x0000000019010d: vmovdqu [rsi-0x10], xmm0; ret; 
0x00000000190103: vmovdqu [rsi-0x20], ymm2; ret; 
0x0000000018fa21: vmovdqu xmm0, [rsi]; vmovdqu xmm1, [rcx-0x10]; vmovdqu [rdi], xmm0; vmovdqu [r9-0x10], xmm1; ret; 
0x0000000018b662: vmovdqu xmm0, [rsi]; vmovdqu xmm1, [rsi+rdx-0x10]; vmovdqu [rdi], xmm0; vmovdqu [rdi+rdx-0x10], xmm1; ret; 
0x0000000018fa25: vmovdqu xmm1, [rcx-0x10]; vmovdqu [rdi], xmm0; vmovdqu [r9-0x10], xmm1; ret; 
0x0000000018b666: vmovdqu xmm1, [rsi+rdx-0x10]; vmovdqu [rdi], xmm0; vmovdqu [rdi+rdx-0x10], xmm1; ret; 
0x0000000018a524: vmovdqu xmm3, [rsi+r8-0x10]; vmovdqu [rdi], xmm2; vmovdqu [rdi+r8-0x10], xmm3; vzeroupper; ret; 
0x000000001890d4: vmovdqu xmm3, [rsi+rdx-0xf]; vmovdqu [rdi], xmm2; vmovdqu [rdi+rdx-0xf], xmm3; vzeroupper; ret; 
0x0000000018fa0d: vmovdqu ymm0, [rsi]; vmovdqu ymm1, [rcx-0x20]; vmovdqu [rdi], ymm0; vmovdqu [r9-0x20], ymm1; ret; 
0x0000000018fa11: vmovdqu ymm1, [rcx-0x20]; vmovdqu [rdi], ymm0; vmovdqu [r9-0x20], ymm1; ret; 
0x0000000018b59f: vmovdqu ymm1, [rsi+rdx-0x20]; vmovdqu [rdi], ymm0; vmovdqu [rdi+rdx-0x20], ymm1; vzeroupper; ret; 
0x0000000018a544: vmovdqu ymm3, [rsi+r8-0x20]; vmovdqu [rdi], ymm2; vmovdqu [rdi+r8-0x20], ymm3; vzeroupper; ret; 
0x000000001890f4: vmovdqu ymm3, [rsi+rdx-0x1f]; vmovdqu [rdi], ymm2; vmovdqu [rdi+rdx-0x1f], ymm3; vzeroupper; ret; 
0x000000001905f6: vmovdqu64 [r11], zmm4; vzeroupper; ret; 
0x000000001906bc: vmovdqu64 [r11], zmm8; vzeroupper; ret; 
0x000000001905e8: vmovdqu64 [rcx-0x80], zmm7; vmovdqu64 [rcx-0xc0], zmm8; vmovdqu64 [r11], zmm4; vzeroupper; ret; 
0x000000001905ef: vmovdqu64 [rcx-0xc0], zmm8; vmovdqu64 [r11], zmm4; vzeroupper; ret; 
0x00000000190953: vmovdqu64 [rdi+0x40], zmm0; vmovdqu64 [rdi+rdx-0x40], zmm0; vmovdqu64 [rdi+rdx-0x80], zmm0; vzeroupper; ret; 
0x0000000019050e: vmovdqu64 [rdi+0x40], zmm1; vmovdqu64 [rdi+rdx-0x40], zmm2; vmovdqu64 [rdi+rdx-0x80], zmm3; vzeroupper; ret; 
0x000000001906ae: vmovdqu64 [rdi+0x80], zmm6; vmovdqu64 [rdi+0xc0], zmm7; vmovdqu64 [r11], zmm8; vzeroupper; ret; 
0x000000001906b5: vmovdqu64 [rdi+0xc0], zmm7; vmovdqu64 [r11], zmm8; vzeroupper; ret; 
0x000000001904df: vmovdqu64 [rdi+rdx-0x100], zmm7; vzeroupper; ret; 
0x0000000019095a: vmovdqu64 [rdi+rdx-0x40], zmm0; vmovdqu64 [rdi+rdx-0x80], zmm0; vzeroupper; ret; 
0x000000001908bd: vmovdqu64 [rdi+rdx-0x40], zmm0; vmovdqu64 [rdi], zmm0; vzeroupper; ret; 
0x00000000190332: vmovdqu64 [rdi+rdx-0x40], zmm1; vzeroupper; ret; 
0x00000000190515: vmovdqu64 [rdi+rdx-0x40], zmm2; vmovdqu64 [rdi+rdx-0x80], zmm3; vzeroupper; ret; 
0x00000000190962: vmovdqu64 [rdi+rdx-0x80], zmm0; vzeroupper; ret; 
0x0000000019051d: vmovdqu64 [rdi+rdx-0x80], zmm3; vzeroupper; ret; 
0x000000001904cf: vmovdqu64 [rdi+rdx-0x80], zmm5; vmovdqu64 [rdi+rdx-0xc0], zmm6; vmovdqu64 [rdi+rdx-0x100], zmm7; vzeroupper; ret; 
0x000000001904d7: vmovdqu64 [rdi+rdx-0xc0], zmm6; vmovdqu64 [rdi+rdx-0x100], zmm7; vzeroupper; ret; 
0x0000000019032c: vmovdqu64 [rdi], zmm0; vmovdqu64 [rdi+rdx-0x40], zmm1; vzeroupper; ret; 
0x000000001908c5: vmovdqu64 [rdi], zmm0; vzeroupper; ret; 
0x00000000190324: vmovdqu64 zmm1, [rsi+rdx-0x40]; vmovdqu64 [rdi], zmm0; vmovdqu64 [rdi+rdx-0x40], zmm1; vzeroupper; ret; 
0x00000000190118: vmovq [rdi], xmm0; vmovq [rsi-0x8], xmm0; ret; 
0x0000000019011c: vmovq [rsi-0x8], xmm0; ret; 
0x000000000e44a7: vmovupd xmm8, [rax]; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000018fd22: vmovups [r9+0x100], zmm12; vmovups [r9+0x140], zmm13; vmovups [r9+0x180], zmm14; vmovups [r9+0x1c0], zmm15; ret; 
0x0000000018fd29: vmovups [r9+0x140], zmm13; vmovups [r9+0x180], zmm14; vmovups [r9+0x1c0], zmm15; ret; 
0x0000000018fd30: vmovups [r9+0x180], zmm14; vmovups [r9+0x1c0], zmm15; ret; 
0x0000000018fd37: vmovups [r9+0x1c0], zmm15; ret; 
0x0000000018fbbb: vmovups [r9-0x100], zmm12; vmovups [r9-0xc0], zmm13; vmovups [r9-0x80], zmm14; vmovups [r9-0x40], zmm15; ret; 
0x0000000018f981: vmovups [r9-0x100], zmm4; vmovups [r9-0xc0], zmm5; vmovups [r9-0x80], zmm6; vmovups [r9-0x40], zmm7; ret; 
0x0000000018fbd0: vmovups [r9-0x40], zmm15; ret; 
0x0000000018f9d2: vmovups [r9-0x40], zmm3; ret; 
0x0000000018f996: vmovups [r9-0x40], zmm7; ret; 
0x0000000018fbc9: vmovups [r9-0x80], zmm14; vmovups [r9-0x40], zmm15; ret; 
0x0000000018f9cb: vmovups [r9-0x80], zmm2; vmovups [r9-0x40], zmm3; ret; 
0x0000000018f98f: vmovups [r9-0x80], zmm6; vmovups [r9-0x40], zmm7; ret; 
0x0000000018fbc2: vmovups [r9-0xc0], zmm13; vmovups [r9-0x80], zmm14; vmovups [r9-0x40], zmm15; ret; 
0x0000000018f988: vmovups [r9-0xc0], zmm5; vmovups [r9-0x80], zmm6; vmovups [r9-0x40], zmm7; ret; 
0x0000000018f9c4: vmovups [rdi+0x40], zmm1; vmovups [r9-0x80], zmm2; vmovups [r9-0x40], zmm3; ret; 
0x000000001900d1: vmovups [rdi+0x40], zmm2; vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x0000000018fe84: vmovups [rdi-0x140], zmm12; vmovups [rdi-0x180], zmm13; vmovups [rdi-0x1c0], zmm14; vmovups [rdi-0x200], zmm15; ret; 
0x0000000018fe8b: vmovups [rdi-0x180], zmm13; vmovups [rdi-0x1c0], zmm14; vmovups [rdi-0x200], zmm15; ret; 
0x0000000018fe92: vmovups [rdi-0x1c0], zmm14; vmovups [rdi-0x200], zmm15; ret; 
0x0000000018fe99: vmovups [rdi-0x200], zmm15; ret; 
0x0000000018f9be: vmovups [rdi], zmm0; vmovups [rdi+0x40], zmm1; vmovups [r9-0x80], zmm2; vmovups [r9-0x40], zmm3; ret; 
0x000000001900cb: vmovups [rdi], zmm2; vmovups [rdi+0x40], zmm2; vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x000000001900ec: vmovups [rdi], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x000000001902a7: vmovups [rsi+0x100], zmm2; vmovups [rsi+0x140], zmm2; vmovups [rsi+0x180], zmm2; vmovups [rsi+0x1c0], zmm2; ret; 
0x000000001902ae: vmovups [rsi+0x140], zmm2; vmovups [rsi+0x180], zmm2; vmovups [rsi+0x1c0], zmm2; ret; 
0x000000001902b5: vmovups [rsi+0x180], zmm2; vmovups [rsi+0x1c0], zmm2; ret; 
0x000000001902bc: vmovups [rsi+0x1c0], zmm2; ret; 
0x00000000190211: vmovups [rsi+0x40], zmm2; vmovups [rsi+0x80], zmm2; vmovups [rsi+0xc0], zmm2; ret; 
0x00000000190218: vmovups [rsi+0x80], zmm2; vmovups [rsi+0xc0], zmm2; ret; 
0x0000000019021f: vmovups [rsi+0xc0], zmm2; ret; 
0x000000001900a9: vmovups [rsi-0x100], zmm2; vmovups [rsi-0xc0], zmm2; vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x000000001900be: vmovups [rsi-0x40], zmm2; ret; 
0x000000001900b7: vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x000000001900b0: vmovups [rsi-0xc0], zmm2; vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x0000000019020b: vmovups [rsi], zmm2; vmovups [rsi+0x40], zmm2; vmovups [rsi+0x80], zmm2; vmovups [rsi+0xc0], zmm2; ret; 
0x0000000015828d: vmread rbp, rdi; jmp qword ptr [rsi+0x2e]; 
0x00000000119e2c: vpaddsw ymm0, ymm15, [rcx+0xf]; lahf; ret; 
0x000000001850b1: vpcmpeqb xmm0, xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000184e05: vpcmpeqb xmm2, xmm2, [rdi]; vpmovmskb eax, xmm2; sub eax, 0xffff; jne 0x0000000000184ce0; ret; 
0x00000000184dc7: vpcmpeqb xmm2, xmm2, xmm1; vpmovmskb eax, xmm2; sub eax, 0xffff; jne 0x0000000000184ce0; ret; 
0x0000000018bd45: vpcmpeqd xmm2, xmm2, [rdi]; vpmovmskb eax, xmm2; sub eax, 0xffff; jne 0x000000000018bc90; ret; 
0x0000000018bd05: vpcmpeqd xmm2, xmm2, xmm1; vpmovmskb eax, xmm2; sub eax, 0xffff; jne 0x000000000018bc90; ret; 
0x00000000184dcb: vpmovmskb eax, xmm2; sub eax, 0xffff; jne 0x0000000000184ce0; ret; 
0x0000000018bd09: vpmovmskb eax, xmm2; sub eax, 0xffff; jne 0x000000000018bc90; ret; 
0x0000000018498b: vpmovmskb eax, ymm1; bsr eax, eax; add rax, rdi; vzeroupper; ret; 
0x00000000184f18: vpmovmskb eax, ymm2; sub eax, 0xffffffff; jne 0x0000000000184ce0; vzeroupper; ret; 
0x0000000018be58: vpmovmskb eax, ymm2; sub eax, 0xffffffff; jne 0x000000000018bc90; vzeroupper; ret; 
0x00000000184cd3: vpmovmskb eax, ymm2; sub eax, 0xffffffff; jne short 0x0000000000184ce0; vzeroupper; ret; 
0x0000000018bc83: vpmovmskb eax, ymm2; sub eax, 0xffffffff; jne short 0x000000000018bc90; vzeroupper; ret; 
0x00000000184c94: vptest ymm5, ymm0; jae 0x0000000000184f30; xor eax, eax; vzeroupper; ret; 
0x0000000018bc48: vptest ymm5, ymm0; jae 0x000000000018be70; xor eax, eax; vzeroupper; ret; 
0x00000000183b24: vzeroupper; ret; 
0x000000001846a0: vzeroupper; xor eax, eax; ret; 
0x0000000015af6c: wbinvd; add [rbp+0x31], al; jmp qword ptr [rdi+rax*8]; 
0x000000000bb13c: wrmsr; in eax, dx; mov [rdi+0x13], ch; ret; 
0x000000000bb1be: wrmsr; in eax, dx; mov [rdi+0x17], ch; ret; 
0x000000000bb2c1: wrmsr; in eax, dx; mov [rdi+0x1f], ch; ret; 
0x0000000011f8c0: wrpkru; xor eax, eax; ret; 
0x000000000ff416: xabort 0xff; call far fword ptr [rbx+0x44]; 
0x0000000012cb62: xabort 0xff; jmp qword ptr [rsi+0x2e]; 
0x0000000002a5d7: xchg [rax*1+0x39480000], esp; ret; 
0x00000000080e15: xchg [rax+0x1], ecx; clc; notrack jmp rax; 
0x0000000008f4f3: xchg [rax+0x31000000], ch; ror byte ptr [rax-0x77], cl; out dx, al; mov rdi, rbx; call qword ptr [r12+0x80]; 
0x000000000874c6: xchg [rax+0x48000000], esp; cmp dword ptr [rax+0x30], 0x0; je short 0x00000000000874d8; ret; 
0x00000000194189: xchg [rax+0x48000001], ebx; lea edi, [rip+0x2a48b]; movsxd r12, [rdi+r12*4]; add rdi, r12; notrack jmp rdi; 
0x0000000008ed9f: xchg [rax+rax-0x2dcf0000], ch; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x000000000e7a86: xchg [rax-0x76b7000d], ch; ret; 
0x000000000bbf47: xchg [rax-0xd000000], edx; movq [rdi+rdx-0x10], mm0; movdqu [rdi], xmm0; ret; 
0x000000000a07ca: xchg [rax], al; add [rax-0x73], cl; adc eax, 0xda37c; cmovne rax, rdx; ret; 
0x0000000011fe55: xchg [rax], al; add [rax], al; syscall; 
0x0000000014735b: xchg [rax], al; add [rsi-0x70], ah; mov rax, [rbp+0x8]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x00000000091bbd: xchg [rax], eax; add [rax], al; mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rbx+0x18]; 
0x0000000011f415: xchg [rax], eax; add [rax], al; syscall; 
0x00000000189a1c: xchg [rax], eax; vzeroupper; ret; 
0x00000000120df5: xchg [rax], ebx; or [rax], eax; mov eax, [rax+rdi*4]; ret; 
0x00000000074f4a: xchg [rbp+0x4c000010], ch; mov edx, ebp; mov rsi, r10; mov rdi, r15; call qword ptr [rbx+0x38]; 
0x000000000bcb6e: xchg [rbp+0x4cd575c9], eax; mov eax, eax; ret; 
0x000000000fce19: xchg [rbx+0x45fffffe], edi; movzx edi, bh; movsxd rax, [r10+r15*4]; add rax, r10; notrack jmp rax; 
0x000000000abf60: xchg [rbx+0x48000002], bl; add eax, edi; add rax, rcx; ret; 
0x00000000166bf5: xchg [rbx+0x5], ebp; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001232a7: xchg [rbx-0x172ceffc], cl; and eax, 0x1; ret; 
0x000000000f9786: xchg [rbx-0x76b7000e], cl; ret; 
0x00000000137c4a: xchg [rbx], ecx; add [rcx], al; add rsp, 0x8; ret; 
0x00000000169db5: xchg [rbx], edi; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000092b52: xchg [rcx+0x1], bh; add [rax], al; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rax+0x18]; 
0x00000000101086: xchg [rcx+0x48000000], esi; lea edx, [rip+0xb076e]; movsxd rax, [rdx+rdi*4]; add rax, rdx; notrack jmp rax; 
0x000000000740c2: xchg [rcx+rax-0x10], cl; notrack jmp rax; 
0x0000000008982f: xchg [rcx+rax], ah; add [rax], al; xor edx, edx; mov rdi, r15; call qword ptr [rbx+0x80]; 
0x0000000010d095: xchg [rcx+rax], ecx; add [rax], al; mov [rsi], eax; xor eax, eax; ret; 
0x0000000015d116: xchg [rcx], ch; std; jmp qword ptr [rsi+0xf]; 
0x00000000081e64: xchg [rdi+0x1], dl; add [rax], al; xor esi, esi; mov rdi, rbp; call qword ptr [rbx+0x10]; 
0x0000000008fce4: xchg [rdi+0x48000000], ah; mov edi, ebp; call qword ptr [r13+0x20]; 
0x000000000fe7a0: xchg [rdi+rcx*2-0x49f0000e], edi; or [r9+0x63], r9b; or al, 0x89; add rcx, r9; notrack jmp rcx; 
0x00000000134b1e: xchg [rdi+rdi*8-0x1], cl; call far fword ptr [rbx-0x48]; 
0x00000000184b69: xchg [rdi], cl; mov ebp, 0xf80148c0; add rax, r8; vzeroupper; ret; 
0x000000000e2e85: xchg [rdi], edx; sti; dec dword ptr [rcx+0x22b8c7]; add [rax], al; syscall; 
0x000000000872d1: xchg [rdx+0x44000001], cl; mov esi, esp; mov rdi, r14; call qword ptr [rax+0x18]; 
0x00000000084519: xchg [rdx+0x48000000], dl; mov edx, ebx; mov rsi, r12; call qword ptr [r14+0x38]; 
0x00000000063648: xchg [rdx+0x48000000], edx; lea ecx, [rip+0x149b94]; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x000000000753dc: xchg [rdx+0x4800000d], al; mov edx, ebx; mov rsi, r12; mov rdi, r15; call qword ptr [rax+0x38]; 
0x00000000082da9: xchg [rdx+0x4c000000], al; mov edx, esp; mov rsi, rbp; mov rdi, rbx; call qword ptr [r13+0x38]; 
0x000000000740ba: xchg [rdx+0x6], esi; add [rax], al; movsxd rax, [r14+rax*4]; add rax, r14; notrack jmp rax; 
0x000000000534c1: xchg [rdx+rdi*8-0x1], bl; jmp qword ptr [rsi+0xf]; 
0x000000000328f3: xchg [rdx], bl; sbb [rax], al; ret; 
0x0000000002c689: xchg [rdx], dl; add al, [rax]; add [rcx-0x77], al; xor ecx, [rcx-0x77]; ret far; 
0x0000000008efa6: xchg [rip+0x48000002], ah; lea esi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax+0x90]; 
0x00000000080f06: xchg [rip+0x48000002], esp; lea ecx, [rip+0x12dbb2]; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x00000000113684: xchg [rip+0x64d8f700], ecx; mov [rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000117c3a: xchg [rip+0xd7c10], eax; cmp eax, 0x1; jg short 0x0000000000117c46; ret; 
0x0000000008fb95: xchg [rsi+0x48000001], cl; mov esi, esp; mov rdi, rbp; call qword ptr [r13+0x90]; 
0x00000000121cd2: xchg [rsi+0xc], ah; add [rax], al; ret; 
0x0000000018b525: xchg [rsi+0xffffffc], esi; test [rax+0x48fffffc], ah; mov eax, edi; vzeroupper; ret; 
0x000000000fac86: xchg [rsi-0xe], dh; jmp qword ptr [rsi+0xf]; 
0x000000000407a4: xchg [rsi], edx; add [rcx+0x146348d2], cl; xchg esi, eax; add rdx, rsi; notrack jmp rdx; 
0x000000000ea277: xchg ah, al; add [rax], eax; add [rbp-0x7b], al; ror byte ptr [rdi], 0x85; ret far; 
0x00000000153192: xchg ah, bl; or [rax], eax; add al, [rax]; add [rax], al; ret; 
0x0000000013a7ab: xchg al, bh; add [rax], al; add [rcx-0x77], al; ret; 
0x000000000a424a: xchg al, dl; adc [rax], eax; add [rbp-0x77], cl; ret; 
0x0000000006305e: xchg ax, ax; add dword ptr [rdx+0x4], 0x1; xor eax, eax; ret; 
0x00000000094dbe: xchg ax, ax; and eax, 0xfffffffd; mov [rdi+0x8], eax; xor eax, eax; ret; 
0x000000000ac65e: xchg ax, ax; bsr eax, eax; add rax, rdi; ret; 
0x0000000015782e: xchg ax, ax; endbr64; add [rdi+0x28], edx; mov eax, 0x1; ret; 
0x0000000011369e: xchg ax, ax; endbr64; mov eax, 0x1; syscall; 
0x000000000e40ee: xchg ax, ax; endbr64; mov eax, 0x27; syscall; 
0x0000000011f92e: xchg ax, ax; endbr64; mov eax, 0x9e; syscall; 
0x0000000011515e: xchg ax, ax; endbr64; mov eax, 0xa3; syscall; 
0x00000000114e0e: xchg ax, ax; endbr64; mov eax, 0xaa; syscall; 
0x00000000114f5e: xchg ax, ax; endbr64; mov eax, 0xab; syscall; 
0x000000000d0dee: xchg ax, ax; endbr64; mov eax, 0xc9; syscall; 
0x000000000344ce: xchg ax, ax; endbr64; mov rax, [rip+0x1b792d]; add rax, fs:[0x0]; ret; 
0x0000000014110e: xchg ax, ax; endbr64; mov rax, [rip+0xaaed5]; mov rax, fs:[rax]; ret; 
0x00000000094c7e: xchg ax, ax; endbr64; mov rax, fs:[0x10]; ret; 
0x000000000e30fe: xchg ax, ax; endbr64; pop rdi; mov eax, 0x3a; syscall; 
0x000000001255de: xchg ax, ax; endbr64; ret; 
0x0000000009289e: xchg ax, ax; endbr64; xor eax, eax; ret; 
0x0000000017868e: xchg ax, ax; mov [rcx], dx; ret; 
0x000000001786be: xchg ax, ax; mov [rcx], edx; mov [rcx+0x4], dl; ret; 
0x000000000b7e7e: xchg ax, ax; mov [rdi], dx; ret; 
0x000000000b7eae: xchg ax, ax; mov [rdi], edx; mov [rdi+0x4], dl; ret; 
0x0000000017a9de: xchg ax, ax; mov al, [rcx]; mov [rdx], al; lea rax, [rdx]; ret; 
0x000000000a8b2e: xchg ax, ax; mov byte ptr [rdi], 0x0; lea rax, [rdi+rdx-0x1]; ret; 
0x0000000014d02e: xchg ax, ax; mov dword ptr [r8+0x4], 0x0; mov eax, 0x1; ret; 
0x000000000b6e8e: xchg ax, ax; mov dx, [rsi]; mov [rdi], dx; ret; 
0x0000000009cb8e: xchg ax, ax; mov eax, 0x16; ret; 
0x000000000e504e: xchg ax, ax; mov eax, 0x7e; ret; 
0x000000000cf04e: xchg ax, ax; mov eax, [rdi+0x2c]; cmp eax, [rsi+0x2c]; jne short 0x00000000000cf0b0; ret; 
0x000000000cf09e: xchg ax, ax; mov eax, [rdi+0x3c]; cmp eax, [rsi+0x3c]; jne short 0x00000000000cf0b0; ret; 
0x000000000b84ee: xchg ax, ax; mov edx, [rsi]; mov [rdi], edx; lea rax, [rdi+0x3]; ret; 
0x0000000018908e: xchg ax, ax; mov edx, [rsi]; mov [rdi], edx; vzeroupper; ret; 
0x00000000054dde: xchg ax, ax; mov r8d, 0xffffffff; mov eax, r8d; ret; 
0x0000000014735e: xchg ax, ax; mov rax, [rbp+0x8]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x0000000014692e: xchg ax, ax; mov rax, [rbx+0x20]; mov rsi, r13; mov rdi, rbp; call qword ptr [rax+0x8]; 
0x0000000015659e: xchg ax, ax; mov rax, [rdi+0x8]; call qword ptr [rax+0x10]; 
0x00000000155e1e: xchg ax, ax; mov rax, [rdi+0x8]; lea rsi, [rsp+0x8]; call qword ptr [rax]; 
0x000000001609de: xchg ax, ax; mov rax, [rip+0x8b489]; mov dword ptr fs:[rax], 0x16; xor eax, eax; ret; 
0x000000001197fe: xchg ax, ax; mov rax, [rip+0xd2669]; mov dword ptr fs:[rax], 0x16; ret; 
0x00000000110dce: xchg ax, ax; mov rax, [rip+0xdb099]; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000e72fe: xchg ax, ax; mov rsi, r12; mov rdi, r8; call qword ptr [r15+0x40]; 
0x000000000b947e: xchg ax, ax; movdqu xmm0, [rsi]; movdqu [rdi], xmm0; lea rax, [rdi+0x10]; ret; 
0x000000000b861e: xchg ax, ax; movdqu xmm0, [rsi]; movdqu [rdi], xmm0; lea rax, [rdi+0xf]; ret; 
0x000000000bb88e: xchg ax, ax; rep ret; 
0x000000000319ee: xchg ax, ax; ret; 
0x0000000012978e: xchg ax, ax; sub eax, edx; ret; 
0x000000000baf4e: xchg ax, ax; xor ch, ch; mov [rdi], ch; ret; 
0x00000000115c3e: xchg ax, ax; xor eax, eax; add rsp, 0x8; ret; 
0x0000000005297e: xchg ax, ax; xor eax, eax; ret; 
0x000000000cf38e: xchg ax, ax; xor rax, rax; ret; 
0x000000000c9780: xchg bh, cl; add eax, 0x89490000; ret; 
0x000000001573a7: xchg ch, bh; jmp qword ptr [rsi+0xf]; 
0x00000000142c8e: xchg ch, bl; or al, [rax]; syscall; 
0x0000000008a096: xchg ch, dl; add [rax], al; add [rdx+0x1], bh; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x0000000008f32a: xchg cl, ah; add [rax], al; add [rcx+rcx*4-0x12], cl; mov rdi, rbx; call qword ptr [rbp+0x70]; 
0x00000000087a92: xchg cl, cl; add [rax], eax; add [rcx+rcx*4-0x1], cl; call qword ptr [rax+0x20]; 
0x00000000039c86: xchg dh, bh; dec dword ptr [rbx+rcx*4+0x4]; and al, 0xe9; idiv edi; jmp qword ptr [rsi+0xf]; 
0x000000000c94a4: xchg dl, bh; add eax, 0x89490000; ret; 
0x000000000932e1: xchg dl, bl; add [rax], al; add [rsi-0x1], bh; mov rdi, rbx; call qword ptr [r15+0x18]; 
0x000000001671e7: xchg ebp, eax; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000168ea7: xchg ebp, eax; add rax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000a8947: xchg ebp, eax; mov dword ptr [rcx-0x7c], 0xc3da75f9; nop; ret; 
0x000000000ff789: xchg ebp, eax; nop [rax+rax]; mov eax, 0x2; ret; 
0x000000001228e8: xchg ebp, eax; or al, 0x0; mov eax, [rax+0x38]; ret; 
0x0000000004a210: xchg ebp, eax; ret; 
0x000000000a880b: xchg ebp, eax; rol dword ptr [rbp-0x7c], 0xca; jne short 0x00000000000a87f0; mov rax, r8; ret; 
0x0000000015646a: xchg ebp, eax; ror byte ptr [rax-0x77], 0x4; and al, 0x48; mov eax, [rdi+0x8]; call qword ptr [rax+0x8]; 
0x000000001173f8: xchg ebp, eax; ror byte ptr [rax-0x7d], 0xc4; or [rdi], cl; mov dh, 0xc0; ret; 
0x00000000156455: xchg ebp, eax; ror byte ptr [rcx+0x1b803], 0x0; add bl, ch; ret; 
0x0000000014a062: xchg ebp, eax; ror byte ptr [rdi], 0xb6; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x5d], bl; ret; 
0x00000000062e99: xchg ebp, eax; ror byte ptr [rdi], 0xb6; shl bh, 0xd8; pop rbp; ret; 
0x000000001028e2: xchg ebp, eax; ror byte ptr [rdi], 0xb6; shl bh, 0xd8; ret; 
0x00000000127c09: xchg ebp, eax; sar byte ptr [rdi+0x2000001], 0x21; enter 0x4c88, 0x24; and [rax+0x411f2444], cl; call qword ptr [rsp+0x28]; 
0x000000000345bc: xchg ebp, eax; sbb eax, [rax]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000bccff: xchg ebp, eax; test edx, edx; jne short 0x00000000000bcce0; ret; 
0x000000000bc258: xchg ebp, eax; verw ax; pop rdi; jge short 0x00000000000bc257; jmp qword ptr [rsi+0x66]; 
0x00000000118bd7: xchg ebp, eax; xor cl, [rip+0x64d8f700]; mov [rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000002e5af: xchg ebp, ecx; add al, 0x0; add [rax+0x39], cl; ret far; 
0x00000000157317: xchg ebp, edi; jmp qword ptr [rsi+0xf]; 
0x00000000040aaf: xchg ebx, eax; add r10, r11; notrack jmp r10; 
0x00000000168ca9: xchg ebx, eax; add rax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000018d484: xchg ebx, eax; add rcx, r11; notrack jmp rcx; 
0x00000000165db7: xchg ebx, eax; add rsi, rdx; add rdi, rdx; add r9, r11; notrack jmp r9; 
0x000000000b6d3c: xchg ebx, eax; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000165ef2: xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000134530: xchg ebx, eax; mov ebp, 0x6401000b; mov [r8], r9d; add rsp, 0x18; ret; 
0x000000001476db: xchg ebx, eax; mov rax, [rbp+0x8]; mov rdi, rbp; call qword ptr [rax+0x20]; 
0x00000000091f66: xchg ebx, eax; nop [rax+rax]; endbr64; mov eax, 0xffffffff; ret; 
0x00000000088ab8: xchg ebx, eax; nop; add [rax], al; add [rcx+0x1], cl; ret; 
0x00000000138fdb: xchg ebx, eax; out dx, al; jmp qword ptr [rbx+rcx*4+0x4]; 
0x000000000ee493: xchg ebx, eax; pop rbx; ret; 
0x0000000007164e: xchg ebx, eax; ret; 
0x00000000047fb8: xchg ebx, eax; sbb al, [rax]; add rsp, 0x8; ret; 
0x00000000156760: xchg ebx, eax; std; jmp qword ptr [rsi+0x66]; 
0x0000000008587f: xchg ebx, eax; xor r8d, r8d; mov rax, r8; ret; 
0x000000000c9f10: xchg ecx, eax; add eax, 0x74db8500; sbb [rcx], edi; ret; 
0x0000000006495e: xchg ecx, eax; add rax, rcx; notrack jmp rax; 
0x00000000080f15: xchg ecx, eax; add rdx, rcx; notrack jmp rdx; 
0x0000000009df6b: xchg ecx, eax; cmp al, 0xfc; jmp qword ptr [rbx+rcx*4+0x4]; 
0x00000000118cf5: xchg ecx, eax; hlt; dec dword ptr [rcx+rcx*4-0x20]; pop r12; ret; 
0x000000000eb483: xchg ecx, eax; idiv bh; jmp qword ptr [rsi+0xf]; 
0x0000000012ebdb: xchg ecx, eax; idiv edi; call qword ptr [rax-0x3c0776b8]; 
0x00000000194812: xchg ecx, eax; idiv edi; jmp qword ptr [rsi+0x2e]; 
0x00000000151a0b: xchg ecx, eax; loopne 0x0000000000151a0b; call qword ptr [rax-0x5e1f00d]; 
0x00000000146e9b: xchg ecx, eax; mov ah, 0xed; call qword ptr [rax+0x2e66c35d]; 
0x00000000181701: xchg ecx, eax; mov eax, [rcx+rax*4]; sub eax, edx; ret; 
0x00000000162c88: xchg ecx, eax; or [rax], al; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x0000000018ffca: xchg ecx, eax; sar ch, 0xff; jmp qword ptr [rdx-0xf]; 
0x000000001568f0: xchg ecx, eax; std; jmp qword ptr [rsi+0x66]; 
0x0000000017fe2f: xchg ecx, eax; sub eax, edx; ret; 
0x0000000006254b: xchg ecx, eax; test [rax], ebx; add [rax+0x63], cl; ret; 
0x000000000cb848: xchg ecx, ebp; hlt; jle short 0x00000000000cb842; jmp qword ptr [rsi-0x70]; 
0x00000000025fd1: xchg edi, eax; adc eax, [rax]; mov rdi, rbx; call r14; 
0x0000000009f72a: xchg edi, eax; add [rax], al; lea rdx, [rip+0x1448c]; cmovne rax, rdx; ret; 
0x0000000009f7fa: xchg edi, eax; add [rax], al; lea rdx, [rip+0xd6fbc]; cmovne rax, rdx; ret; 
0x00000000166fe5: xchg edi, eax; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000052d7a: xchg edi, eax; add rdx, rdi; notrack jmp rdx; 
0x00000000102aac: xchg edi, eax; cmp dword ptr [rdi+0x14], 0x1000000; mov edx, 0x2; cmove eax, edx; ret; 
0x000000000a8e4f: xchg edi, eax; idiv edi; add rsp, 0x8; ret; 
0x00000000039e7e: xchg edi, eax; idiv edi; jmp qword ptr [rsi+0xf]; 
0x0000000008ce40: xchg edi, eax; mov al, [0x4820428b48000000]; sub eax, [rdx+0x18]; sar rax, 0x2; ret; 
0x0000000008cd10: xchg edi, eax; mov al, [0x4838428b48000000]; sub eax, [rdx+0x30]; sar rax, 0x2; ret; 
0x00000000082825: xchg edi, eax; mov al, [0xe08a8948000000]; add [rax], al; ret; 
0x000000000ec4d4: xchg edi, eax; mov byte ptr [rdi+0x8], 0x1e; mov eax, 0x2; ret; 
0x00000000113bd5: xchg edi, eax; or bh, al; dec dword ptr [rbx+0x480c2444]; add esp, 0x18; ret; 
0x000000000f1b95: xchg edi, eax; ret; 
0x0000000012208a: xchg edi, eax; ror byte ptr [rdi], 0xb6; shl bh, 0xd8; ret; 
0x000000000e52c5: xchg edi, eax; shl ebx, 0x1; dec dword ptr [rax-0x77]; ret; 
0x00000000156342: xchg edi, eax; std; jmp qword ptr [rsi+0x66]; 
0x000000000e5abb: xchg edi, eax; sti; jmp qword ptr [rsi-0x70]; 
0x0000000013b80e: xchg edi, ebp; jmp qword ptr [rsi+0x66]; 
0x0000000008451a: xchg edx, eax; add [rax], al; add [rax-0x77], cl; fimul st, dword ptr [rcx+rcx*4-0x1a]; call qword ptr [r14+0x38]; 
0x000000000d6c7f: xchg edx, eax; add [rax], al; add [rcx-0x77], al; ret far; 
0x00000000147ec2: xchg edx, eax; add [rax], eax; add [rax-0x75], cl; and al, 0x30; call rax; 
0x000000000ecb2a: xchg edx, eax; add al, 0x0; add [rcx-0x75], cl; adc [r8+0x63], r9b; ret; 
0x000000000be5da: xchg edx, eax; fcom st, dword ptr [rdx]; add [rbp+0x31], al; jmp qword ptr [rdi+rax*8]; 
0x0000000013261a: xchg edx, eax; fimul st, dword ptr [rbx]; add [rdi], cl; add eax, 0xffff7ae9; jmp qword ptr [rsi+0x2e]; 
0x00000000055097: xchg edx, eax; mov [rax], al; add [rax], al; xor eax, eax; ret; 
0x000000001202da: xchg edx, eax; mov ebx, 0xd8f7000c; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000162c28: xchg edx, eax; or [rax], al; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x0000000004c30a: xchg edx, eax; ret; 
0x0000000011fdda: xchg edx, eax; ror byte ptr [rax+rax], 0xf7; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x0000000017eb87: xchg edx, eax; sub eax, edx; ret; 
0x000000000a6c09: xchg edx, edx; add [rax], al; add [rax+0x29], cl; ret; 
0x000000000bc1a4: xchg esi, eax; add rax, rsi; notrack jmp rax; 
0x000000000551be: xchg esi, eax; add rdx, rsi; cmp ecx, 0x2f; notrack jmp rdx; 
0x000000000407ac: xchg esi, eax; add rdx, rsi; notrack jmp rdx; 
0x0000000014ed63: xchg esi, eax; enter 0x1, 0x0; add rsi, 0x38; jmp qword ptr [rax+0x18]; 
0x00000000129766: xchg esi, eax; mov gs, di; jmp qword ptr [rsi+0xf]; 
0x000000000a2889: xchg esi, eax; nop [rax+rax]; xor r8d, r8d; mov rax, r8; ret; 
0x0000000008277c: xchg esi, eax; nop [rax]; xor r8d, r8d; mov rax, r8; ret; 
0x000000000cce86: xchg esi, eax; ret far; 
0x000000000a70ed: xchg esi, eax; ret; 
0x0000000003e1fd: xchg esi, eax; sbb eax, [rax]; add [rbx-0x7bf0fe08], al; ret; 
0x000000001563e2: xchg esi, eax; std; jmp qword ptr [rsi+0x66]; 
0x0000000015647b: xchg esi, eax; std; jmp qword ptr [rsi-0x70]; 
0x00000000082fbd: xchg esi, eax; sti; stc; jmp qword ptr [rsi+0x2e]; 
0x0000000013c21d: xchg esi, ebx; add [rax], al; add [rbx-0x77], dl; ret far; 
0x00000000078c46: xchg esp, eax; in al, 0xff; jmp qword ptr [rsi+0xf]; 
0x000000000a0678: xchg esp, eax; lodsb [rsi]; or al, 0x0; cmovne rax, rdx; ret; 
0x000000001383f8: xchg esp, eax; mov ecx, 0x89480000; ret; 
0x00000000182d69: xchg esp, eax; or [rax], eax; add [rbp-0x77], cl; ret far; 
0x000000001129f4: xchg esp, eax; or eax, 0x64d8f700; mov [rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000012905c: xchg esp, eax; out dx, eax; dec dword ptr [rax-0x77]; ret; 
0x00000000149c89: xchg esp, eax; rcr byte ptr [rbx+0x5d], 0xf; mov dh, 0xc0; pop r12; ret; 
0x0000000003051a: xchg esp, eax; ret; 
0x000000000d06bc: xchg esp, eax; rol byte ptr [rcx+rbp-0x40], 0x89; ret; 
0x0000000010052e: xchg esp, eax; ror byte ptr [rax-0x7d], 0xc4; adc [rbx+0x5d], bl; pop r12; ret; 
0x00000000157c8c: xchg esp, eax; ror byte ptr [rax-0x7d], 0xc4; or [rcx+rcx*4-0x40], al; ret; 
0x000000000522e3: xchg esp, eax; ror byte ptr [rax-0x7d], 0xc4; or [rdi], cl; mov dh, 0xc0; ret; 
0x000000000e522c: xchg esp, eax; ror byte ptr [rdi], 0xb6; ror byte ptr [rax-0x73], 0x44; add bh, bh; ret; 
0x00000000162c27: xchg r10d, eax; or [rax], al; mov dword ptr fs:[rax], 0x26; mov eax, 0xffffffff; ret; 
0x00000000047fb7: xchg r11, rax; sbb al, [rax]; add rsp, 0x8; ret; 
0x000000000345bb: xchg r13d, eax; sbb eax, [rax]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000e1ddb: xlat [rbx]; adc [rax], al; syscall; 
0x0000000009e804: xlat [rbx]; adc al, 0x0; call qword ptr [rax]; 
0x0000000012e42e: xlat [rbx]; add [rax], al; add [rax+0x1], cl; ret far; 
0x0000000016de65: xlat [rbx]; add eax, [rip+0x14634900]; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165dbd: xlat [rbx]; add r9, r11; notrack jmp r9; 
0x0000000005b6d8: xlat [rbx]; cmp rax, 0x9; ja short 0x000000000005b6b0; mov rax, r8; ret; 
0x000000000bbb7c: xlat [rbx]; jb short 0x00000000000bbb82; rep movsb [rdi], [rsi]; ret; 
0x00000000024164: xlat [rbx]; je short 0x0000000000024177; call rax; 
0x0000000011d037: xlat [rbx]; jne short 0x000000000011d028; mov rax, [rax+0x8]; ret; 
0x0000000018f502: xlat [rbx]; lea r11, [rip+0x2e136]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018f488: xlat [rbx]; lea r11, [rip+0x2e1b0]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018f3f9: xlat [rbx]; lea r11, [rip+0x2e23f]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018f1ee: xlat [rbx]; lea r11, [rip+0x2e44a]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018f0bc: xlat [rbx]; lea r11, [rip+0x2e57c]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018eff6: xlat [rbx]; lea r11, [rip+0x2e642]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018ef78: xlat [rbx]; lea r11, [rip+0x2e6c0]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018eee3: xlat [rbx]; lea r11, [rip+0x2e755]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018ece6: xlat [rbx]; lea r11, [rip+0x2e952]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018ebb4: xlat [rbx]; lea r11, [rip+0x2ea84]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018eab7: xlat [rbx]; lea r11, [rip+0x2eb81]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018ded2: xlat [rbx]; lea r11, [rip+0x2f626]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018de58: xlat [rbx]; lea r11, [rip+0x2f6a0]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018ddc9: xlat [rbx]; lea r11, [rip+0x2f72f]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018dbbe: xlat [rbx]; lea r11, [rip+0x2f93a]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018da8c: xlat [rbx]; lea r11, [rip+0x2fa6c]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018d9c6: xlat [rbx]; lea r11, [rip+0x2fb32]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018d948: xlat [rbx]; lea r11, [rip+0x2fbb0]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018d8b3: xlat [rbx]; lea r11, [rip+0x2fc45]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018d6b6: xlat [rbx]; lea r11, [rip+0x2fe42]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018d584: xlat [rbx]; lea r11, [rip+0x2ff74]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000018d479: xlat [rbx]; lea r11, [rip+0x3007f]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000016fa20: xlat [rbx]; lea r11, [rip+0x4e5d8]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016f86d: xlat [rbx]; lea r11, [rip+0x4e9cb]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016dfc8: xlat [rbx]; lea r11, [rip+0x50270]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016de61: xlat [rbx]; lea r11, [rip+0x503d7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016ceec: xlat [rbx]; lea r11, [rip+0x50c0c]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016cd59: xlat [rbx]; lea r11, [rip+0x50fdf]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b13b: xlat [rbx]; lea r11, [rip+0x527fd]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b4c8: xlat [rbx]; lea r11, [rip+0x52870]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b34a: xlat [rbx]; lea r11, [rip+0x529ee]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016898c: xlat [rbx]; lea r11, [rip+0x54fac]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000001688c7: xlat [rbx]; lea r11, [rip+0x55071]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165fac: xlat [rbx]; lea r11, [rip+0x577cc]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000165ee7: xlat [rbx]; lea r11, [rip+0x57891]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000013c539: xlat [rbx]; mov [r9], rdi; ret; 
0x000000000e3161: xlat [rbx]; mov eax, esi; syscall; 
0x000000000e3170: xlat [rbx]; mov eax, r8d; syscall; 
0x0000000005b492: xlat [rbx]; mov rax, r10; ret; 
0x0000000007700f: xlat [rbx]; mov rdx, r15; call qword ptr [rax+0x38]; 
0x000000000b168d: xlat [rbx]; ret far; 
0x000000000abfc4: xlat [rbx]; ret; 
0x00000000188495: xlat [rbx]; rol ch, cl; std; xlat [rbx]; ret; 
0x0000000018461f: xlat [rbx]; rol dword ptr [rbp+0x311b75c0], 0xc0; vzeroupper; ret; 
0x000000000ac173: xlat [rbx]; rol dword ptr [rbp+0x315775c0], 0xc0; ret; 
0x000000000ac626: xlat [rbx]; rol dword ptr [rbp+0x317475c0], 0xc0; ret; 
0x000000000ac655: xlat [rbx]; rol dword ptr [rbp+0x317575c0], 0xc0; ret; 
0x000000000ac143: xlat [rbx]; rol dword ptr [rbp-0x5c7af040], 0x0; add [rax], al; xor eax, eax; ret; 
0x000000000ac5c4: xlat [rbx]; ror dword ptr [rdi], 0xbd; ror byte ptr [rax+0x1], 0xf8; ret; 
0x0000000018498d: xlat [rbx]; ror dword ptr [rdi], 0xbd; ror byte ptr [rax+0x1], 0xf8; vzeroupper; ret; 
0x00000000026165: xlat [rbx]; sbb ebx, [rcx]; add [rcx], dh; div byte ptr [rcx]; jmp qword ptr [rsi+0xf]; 
0x000000000b1a55: xlat [rbx]; shl byte ptr [rsi+0xf], 0x1; outsd dx, [rsi]; ret; 
0x0000000004735a: xlat [rbx]; shl rdi, 0x20; or rax, rdi; ret; 
0x0000000011eeda: xlat [rbx]; shr rax, 0xc; xor al, al; or eax, edx; ret; 
0x000000001609ac: xlat [rbx]; xor eax, eax; ret; 
0x000000000f24c1: xor [r11+0x5d], r11b; pop r12; ret; 
0x000000000cf06c: xor [r11], r15b; xor [rbp+0x3d], r14b; ret; 
0x000000000ac0cd: xor [r14+0xf], r12b; xlat [rbx]; ret; 
0x0000000010c337: xor [r15], r9b; adc [rdi+0x40], eax; ret; 
0x0000000012770d: xor [r8+0x1], dil; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000000919a2: xor [r8-0x77], cl; and [r9], sil; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x5d], bl; ret; 
0x0000000010d9e7: xor [rax+0x106], bh; syscall; 
0x00000000113868: xor [rax+0x10], bh; syscall; 
0x0000000011f7c7: xor [rax+0x145], bh; syscall; 
0x0000000012770e: xor [rax+0x1], bh; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000001506c5: xor [rax+0x1], bh; movups [rdx], xmm1; ret; 
0x000000001506c4: xor [rax+0x1], dil; movups [rdx], xmm1; ret; 
0x000000000e81f7: xor [rax+0x1], edi; ret; 
0x000000000fe03f: xor [rax+0x63], cl; or al, 0x8e; add rcx, rsi; notrack jmp rcx; 
0x00000000083c56: xor [rax+0x63], ecx; ror dword ptr [rcx+rcx*4-0x12], cl; mov rdi, r15; call qword ptr [rbp+0x38]; 
0x000000000fe03e: xor [rax+0x63], r9b; or al, 0x8e; add rcx, rsi; notrack jmp rcx; 
0x000000001539d0: xor [rax+rax], al; add [rax], al; movups [rsp+0x18], xmm0; call qword ptr [rax+0x18]; 
0x000000000b98f7: xor [rax-0x73], cl; ret; 
0x0000000009a0f7: xor [rax-0x75], cl; add eax, 0x151de1; mov [rax], rdi; ret; 
0x000000000961fd: xor [rax-0x75], cl; add eax, 0x155cdb; mov [rax], rdx; ret; 
0x0000000015f7d0: xor [rax-0x75], cl; add eax, 0x8c688; mov rdi, [rdi]; call qword ptr [rax+0x1e8]; 
0x0000000002a340: xor [rax-0x75], cl; and al, 0x18; mov rsi, [rsp+0x48]; mov rdi, [rsp+0x40]; call r14; 
0x0000000014d1ed: xor [rax-0x75], cl; and al, 0x28; mov rdi, r12; call rcx; 
0x0000000002a893: xor [rax-0x75], cl; je short 0x000000000002a8bc; mov rdi, [rsp+0x40]; call rbx; 
0x0000000002b2d3: xor [rax-0x75], cl; je short 0x000000000002b2fc; mov rdi, [rsp+0x38]; mov rax, [rsp+0x20]; call rax; 
0x0000000002b8c7: xor [rax-0x75], cl; je short 0x000000000002b8f0; mov rdi, [rsp+0x38]; call r15; 
0x0000000015f5ae: xor [rax-0x75], ecx; or [rax+0x1], cl; ror dword ptr [rax+0x39], 0x1; ret far; 
0x000000000919a3: xor [rax-0x77], cl; and [r9], sil; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x5d], bl; ret; 
0x00000000057d94: xor [rax-0x77], cl; or [r8+0x2], r15b; ret; 
0x0000000009cf18: xor [rax-0x77], ecx; add ecx, [rax-0x7b]; ror byte ptr [rdi], 0x84; ret far; 
0x00000000119a93: xor [rax-0x77], ecx; out dx, eax; xor esi, esi; call r12; 
0x0000000006ec97: xor [rax-0x77], ecx; ret; 
0x00000000197b7a: xor [rax-0x7b], cl; push qword ptr [rbp+rdx-0x18]; ret far; 
0x000000000a863b: xor [rax-0x7c], eax; div byte ptr [rbp-0x11]; mov [rdx], rcx; ret; 
0x000000001945d2: xor [rax-0x7d], ecx; cli; cmp al, 0xf; mov gs, [rdi-0x72000006]; ret; 
0x00000000054ebb: xor [rax], al; add [rax+0x9e], bh; syscall; 
0x000000000c05c5: xor [rax], al; add [rax], al; add [rbp+0x31], al; imul cl; ret; 
0x00000000102e73: xor [rax], al; add [rax], al; add [rbx-0x7bf00001], al; ret; 
0x000000000240e6: xor [rax], al; add [rax], al; call rax; 
0x000000000468d1: xor [rax], al; add [rax], al; call rdx; 
0x00000000024425: xor [rax], al; add [rax], al; jmp rax; 
0x000000000472e1: xor [rax], al; add [rax], al; mov fs:[rbx], rdx; mov rdi, [rbp+0x8]; call rax; 
0x0000000013cca1: xor [rax], al; add [rax], al; mov qword ptr [rsp], 0x0; call rax; 
0x000000000dd428: xor [rax], al; add [rax], al; pop r13; pop r14; jmp rax; 
0x000000000bc1f4: xor [rax], al; add [rax], al; pop rbx; ret; 
0x00000000023a47: xor [rax], al; add [rax], al; rol rax, 0x11; mov [rip+0x1cd8d2], rax; ret; 
0x000000001207a5: xor [rax], al; add [rax], al; syscall; 
0x00000000047cc4: xor [rax], al; add [rcx-0x1e], al; jg short 0x0000000000047c57; adc [rcx-0x3f76bbea], cl; ret; 
0x000000000874ce: xor [rax], al; je short 0x00000000000874d8; ret; 
0x000000000bb357: xor [rax], dh; in eax, dx; mov [rdi+0x40], ch; ret; 
0x00000000120195: xor [rax], eax; add [rax], al; syscall; 
0x0000000015f953: xor [rax], ebx; or [rax], eax; call qword ptr [rax]; 
0x00000000098700: xor [rax], ecx; add [rax+0x39], ecx; ret; 
0x0000000002c98f: xor [rax], edx; add [rcx-0x77], al; ret; 
0x000000000986ff: xor [rax], r9; add [rax+0x39], ecx; ret; 
0x000000000cafb4: xor [rbp+0x31], al; shr byte ptr [rdx+0x1], 0x6a; add [rbx+rcx*4+0x4c], cl; and al, 0x10; call r14; 
0x000000000cf070: xor [rbp+0x3d], dh; ret; 
0x000000000cf06f: xor [rbp+0x3d], r14b; ret; 
0x000000000a1cec: xor [rbp+0xe], ah; add [rax-0x73], cl; add eax, 0xf9d9; cmove rax, rdx; ret; 
0x00000000040aa4: xor [rbp+0xf450016], al; mov dh, 0xd2; movsxd r10, [r11+r10*4]; add r10, r11; notrack jmp r10; 
0x000000000bbdf9: xor [rbp+0xf], al; adc [rbx], eax; ret; 
0x000000000b8371: xor [rbp+rcx*4+0x1d], cl; imul ebp, [rdi+0xf], 0x0; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000074e09: xor [rbp+rcx*4+0x50], cl; inc esi; test [rax], eax; idiv edi; jmp qword ptr [rax]; 
0x000000000e6360: xor [rbx+0x187414fe], al; test r15, r15; je short 0x00000000000e6375; mov rdi, rbx; call r15; 
0x00000000100f30: xor [rbx+0x187414fe], al; test r15, r15; je short 0x0000000000100f45; mov rdi, rbx; call r15; 
0x00000000040f86: xor [rbx+0x5d], bl; pop r12; pop r13; pop r14; ret; 
0x0000000009128b: xor [rbx+0x5d], bl; pop r12; ret; 
0x00000000196b71: xor [rbx+0x5d], bl; pop r14; ret; 
0x000000001249a2: xor [rbx+0x6401000c], esi; mov [r8], r9d; add rsp, 0x8; ret; 
0x000000000f6a1c: xor [rbx+rax*4], dl; ret; 
0x0000000009f37f: xor [rbx-0x1c89f607], al; cmp esi, 0x9; mov edx, 0xffffffff; cmovbe eax, edx; ret; 
0x00000000092a0d: xor [rbx-0x3f8a0008], al; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000009f16c: xor [rbx], ah; add [rax], eax; lea rdx, [rip+0xf18e9]; cmovne rax, rdx; ret; 
0x00000000153960: xor [rbx], al; add [rax], al; add [rdi], cl; adc [rsp+0x18], eax; call qword ptr [rax+0x18]; 
0x000000000cf06d: xor [rbx], bh; xor [rbp+0x3d], r14b; ret; 
0x00000000196ca7: xor [rcx+0x21], cl; ret far; 
0x00000000152cc6: xor [rcx+0x55], al; push r12; lea r9, [rsp+0x3a]; call qword ptr [rax]; 
0x0000000008752c: xor [rcx+0x5d5b7453], cl; pop r12; ret; 
0x00000000116d3b: xor [rcx+0xd], edx; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x2]; mov eax, 0xffffffff; ret; 
0x000000000666cb: xor [rcx+0xf], al; mov dh, 0x45; add [rax-0x7d], cl; ret; 
0x0000000008919d: xor [rcx+rcx*4-0x1], cl; call qword ptr [r14+0x90]; 
0x00000000196f8a: xor [rcx+rcx*4-0x20], cl; pop r12; ret; 
0x0000000011a0ea: xor [rcx+rcx*4-0x9], cl; mov rax, [rbp-0x58]; mov r15d, r13d; call rax; 
0x0000000009555b: xor [rcx-0x5889ffeb], ebx; add rsp, 0x8; ret; 
0x00000000153b70: xor [rcx], al; add [rax], al; add [rdi], cl; adc [rsp+0x18], eax; call qword ptr [rax+0x18]; 
0x0000000008e6f4: xor [rcx], al; add [rax], al; mov rsi, rsp; mov rdi, rbp; call qword ptr [r15+0x90]; 
0x0000000010f33a: xor [rcx], al; add [rax], al; pop rbp; ret; 
0x0000000011f731: xor [rcx], al; add [rax], al; syscall; 
0x0000000015f305: xor [rcx], cl; add [rax], al; call qword ptr [r12+0xf10]; 
0x0000000011fa35: xor [rcx], eax; add [rax], al; syscall; 
0x00000000038503: xor [rdi+0x1b], edx; add [rdi], cl; add eax, 0xfffefbe9; jmp qword ptr [rsi-0x70]; 
0x000000000e8d70: xor [rdi+0xc], bh; add [rax+0x63], cl; add al, 0x86; add rax, rsi; notrack jmp rax; 
0x0000000012073b: xor [rdi-0x2708fff4], esi; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000183adb: xor [rdi-0xd], edi; call qword ptr [rax-0x5e1f00d]; 
0x0000000010c338: xor [rdi], cl; adc [rdi+0x40], eax; ret; 
0x0000000014fceb: xor [rdi], cl; adc [rsi], eax; mov rax, [rax+0x40]; mov [rsi+0x10], rax; ret; 
0x00000000120c3b: xor [rdx-0x2708fff4], esi; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000152f1a: xor [rdx], ch; push 0x3c; lea r9, [rsp+0x3a]; call qword ptr [rax]; 
0x00000000153a40: xor [rip+0xf000000], al; adc [rsp+0x18], eax; call qword ptr [rax+0x18]; 
0x0000000003658c: xor [rsi+0x1b], dh; add [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x000000000b1a1c: xor [rsi+0xf], ah; outsd dx, [rsi]; ret; 
0x000000000ac0ce: xor [rsi+0xf], ah; xlat [rbx]; ret; 
0x000000001512ba: xor [rsi], eax; add [rax-0x77], cl; ret; 
0x000000000420aa: xor ah, [rsi+0xff20017]; adc [rip+0x17ac2a], al; orpd xmm1, [rip+0x17a642]; mulsd xmm0, xmm1; ret; 
0x0000000015d46a: xor ah, [rsi]; std; jmp qword ptr [rsi-0x70]; 
0x000000000b67c8: xor ah, ah; mov [rdx+0x10], ah; mov rax, rdi; ret; 
0x000000000b675e: xor ah, ah; mov [rdx+0x8], ah; mov rax, rdi; ret; 
0x00000000120265: xor al, 0x0; add [rax], al; syscall; 
0x000000000a4fa9: xor al, 0x0; add [rcx-0x9], al; ret; 
0x000000000cef78: xor al, 0x1; add [rax], al; ret; 
0x0000000011ff75: xor al, 0x1; add [rax], al; syscall; 
0x0000000011f75b: xor al, 0x24; mov r8d, eax; mov edi, [rsp+0x8]; mov eax, 0x130; syscall; 
0x000000001201fb: xor al, 0x24; mov r8d, eax; mov edi, [rsp+0x8]; mov eax, 0x2a; syscall; 
0x000000000a1fa3: xor al, 0x24; pop r12; pop r13; pop r14; ret; 
0x00000000081315: xor al, 0x3; add [rax], al; add bl, ch; ret far; 
0x00000000147600: xor al, 0x48; add esp, 0x18; pop rbx; pop rbp; ret; 
0x0000000004206d: xor al, 0x48; and ecx, edx; or rcx, rax; movq xmm0, rcx; ret; 
0x000000000ac6db: xor al, 0x48; lea eax, [rdi+rax+0x20]; ret; 
0x0000000008126d: xor al, 0x48; lea ecx, [rbx+0x40]; mov esi, 0x1; mov rdi, rbx; call r8; 
0x0000000010dc1b: xor al, 0x80; in eax, 0x1; jne short 0x000000000010dc68; mov eax, 0x10c; syscall; 
0x00000000184abb: xor al, 0x83; shl byte ptr [rax], 0x48; add eax, edi; vzeroupper; ret; 
0x0000000018c8dc: xor al, 0xa; jne 0x000000000018c679; vzeroupper; ret; 
0x00000000057b84: xor al, 0xb8; add [rax], eax; add [rax], al; mov [rdi], rsi; ret; 
0x00000000080c7b: xor al, 0xbe; add [rax], eax; add [rax], al; mov rdi, rbx; call rax; 
0x000000001189b8: xor al, 0xd; add bh, dh; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x0000000012d8e8: xor al, 0xda; add eax, [rax]; cmovne rax, rdx; ret; 
0x00000000142de0: xor al, 0xdc; or al, [rax]; syscall; 
0x000000000e7698: xor al, 0xe8; cmc; dec dword ptr [rax-0x77]; ret; 
0x0000000018c8d9: xor al, 0xe; cmp esi, [rdx+rcx]; jne 0x000000000018c679; vzeroupper; ret; 
0x000000000fef03: xor al, 0xf2; jmp qword ptr [rbx+rcx*4+0x4]; 
0x0000000019742c: xor al, 0xf8; call qword ptr [rax+0x30658b4c]; 
0x0000000014b3c9: xor al, 0xfc; jmp qword ptr [rsp+rax*2-0x77]; 
0x0000000014b3c8: xor al, 0xfc; jmp qword ptr [rsp+rax*2-0x77]; 
0x000000001202f5: xor al, [rax]; add [rax], al; syscall; 
0x0000000006303d: xor al, [rbp+0x481675c0]; mov edx, [rdi+0x88]; mov [rdx+0x8], rcx; mov dword ptr [rdx+0x4], 0x1; ret; 
0x0000000017c92a: xor al, [rbx]; add [rax], al; cmp byte ptr [rax], 0x1; sbb rax, 0xffffffffffffffff; ret; 
0x00000000115315: xor al, [rcx]; add [rax], al; syscall; 
0x0000000011eedf: xor al, al; or eax, edx; ret; 
0x0000000009f3d6: xor al, bh; call far fword ptr [rdx+0x31]; 
0x0000000012a24b: xor al, ch; jmp qword ptr [rdi-0x76b30010]; 
0x00000000109f07: xor al, ch; ret; 
0x0000000011281c: xor ax, ax; ret; 
0x000000000e81d6: xor bh, [rax+0x1]; ret; 
0x0000000008d31d: xor bh, [rax-0x1]; test edx, edx; je short 0x000000000008d330; ret; 
0x0000000008d77d: xor bh, [rax-0x1]; test edx, edx; je short 0x000000000008d790; ret; 
0x000000000b745a: xor bh, [rbp+0xf]; add [rcx+0x63], cl; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000013c866: xor bh, bh; jmp qword ptr [rsi+0xf]; 
0x0000000013c867: xor bh, bh; jmp qword ptr [rsi+0xf]; 
0x0000000014726f: xor bh, bh; xor eax, 0x758e2; push qword ptr [rip+0x758d4]; lea r9, [rsp+0x2c]; call qword ptr [rax]; 
0x0000000014712c: xor bh, bh; xor eax, 0x75a25; push qword ptr [rip+0x75a17]; lea r9, [rsp+0x2c]; call qword ptr [rax]; 
0x0000000018d9ca: xor bh, bl; add al, [rax]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000042332: xor bl, 0xf; adc [rdi], eax; movd xmm0, esi; ret; 
0x000000000ac700: xor bl, al; nop [rax+rax]; nop [rax]; xor eax, eax; ret; 
0x0000000012ce91: xor bl, al; nop [rax]; xor eax, eax; ret; 
0x000000000ac1fc: xor bl, al; xchg ax, ax; xor eax, eax; ret; 
0x00000000148b09: xor byte ptr [rax+0x1000023], 0x0; add [rax], al; mov rax, [rax+0x23b8]; mov rdi, r12; call qword ptr [rax+0x28]; 
0x0000000014d0bf: xor byte ptr [rax+rax+0x1b80000], 0x0; add [rax], al; ret; 
0x0000000014d0a2: xor byte ptr [rax+rax-0x37f10000], 0x89; ror byte ptr [rax-0x77], 0x2; mov eax, 0x1; ret; 
0x0000000010efac: xor byte ptr [rbx], 0xf1; jmp qword ptr [rcx+rax*2-0x75]; 
0x000000000a1620: xor byte ptr [rdx+0xd], 0x2a; cmp rcx, 0xd; je short 0x00000000000a162e; xor byte ptr [rdx+0xe], 0x2a; ret; 
0x000000000a162a: xor byte ptr [rdx+0xe], 0x2a; ret; 
0x000000000d4f0e: xor ch, [rbp+rcx-0x3f49f100]; movsxd rax, [rdi+rax*4]; add rax, rdi; notrack jmp rax; 
0x000000001317b2: xor ch, al; or eax, [rax]; syscall; 
0x000000000bb0e8: xor ch, ch; mov [rdi+0x10], ch; ret; 
0x000000000bb0fe: xor ch, ch; mov [rdi+0x11], ch; ret; 
0x000000000bb120: xor ch, ch; mov [rdi+0x12], ch; ret; 
0x000000000bb13e: xor ch, ch; mov [rdi+0x13], ch; ret; 
0x000000000bb15e: xor ch, ch; mov [rdi+0x14], ch; ret; 
0x000000000bb184: xor ch, ch; mov [rdi+0x15], ch; ret; 
0x000000000bb1a0: xor ch, ch; mov [rdi+0x16], ch; ret; 
0x000000000bb1c0: xor ch, ch; mov [rdi+0x17], ch; ret; 
0x000000000bb1e0: xor ch, ch; mov [rdi+0x18], ch; ret; 
0x000000000bb206: xor ch, ch; mov [rdi+0x19], ch; ret; 
0x000000000baf64: xor ch, ch; mov [rdi+0x1], ch; ret; 
0x000000000bb228: xor ch, ch; mov [rdi+0x1a], ch; ret; 
0x000000000bb246: xor ch, ch; mov [rdi+0x1b], ch; ret; 
0x000000000bb266: xor ch, ch; mov [rdi+0x1c], ch; ret; 
0x000000000bb282: xor ch, ch; mov [rdi+0x1d], ch; ret; 
0x000000000bb2a2: xor ch, ch; mov [rdi+0x1e], ch; ret; 
0x000000000bb2c2: xor ch, ch; mov [rdi+0x1f], ch; ret; 
0x000000000bb2e2: xor ch, ch; mov [rdi+0x20], ch; ret; 
0x000000000bb308: xor ch, ch; mov [rdi+0x21], ch; ret; 
0x000000000baf76: xor ch, ch; mov [rdi+0x2], ch; ret; 
0x000000000baf8c: xor ch, ch; mov [rdi+0x3], ch; ret; 
0x000000000bb358: xor ch, ch; mov [rdi+0x40], ch; ret; 
0x000000000bafa4: xor ch, ch; mov [rdi+0x4], ch; ret; 
0x000000000bafba: xor ch, ch; mov [rdi+0x5], ch; ret; 
0x000000000bafcc: xor ch, ch; mov [rdi+0x6], ch; ret; 
0x000000000bafea: xor ch, ch; mov [rdi+0x7], ch; ret; 
0x000000000baff6: xor ch, ch; mov [rdi+0x8], ch; ret; 
0x000000000bb00c: xor ch, ch; mov [rdi+0x9], ch; ret; 
0x000000000bb02e: xor ch, ch; mov [rdi+0xa], ch; ret; 
0x000000000bb04c: xor ch, ch; mov [rdi+0xb], ch; ret; 
0x000000000bb06c: xor ch, ch; mov [rdi+0xc], ch; ret; 
0x000000000bb08e: xor ch, ch; mov [rdi+0xd], ch; ret; 
0x000000000bb0ae: xor ch, ch; mov [rdi+0xe], ch; ret; 
0x000000000bb0ce: xor ch, ch; mov [rdi+0xf], ch; ret; 
0x000000000baf50: xor ch, ch; mov [rdi], ch; ret; 
0x0000000017dd9d: xor cl, [rax-0x75]; add [rax-0x77], ecx; add cl, [rax-0x77]; clc; ret; 
0x00000000119aa5: xor cl, [rax-0x77]; out dx, eax; mov edx, r13d; mov esi, 0x1; call r12; 
0x00000000119b35: xor cl, [rax-0x77]; out dx, eax; mov rdx, r13; mov esi, 0x1; call r12; 
0x00000000193c4a: xor cl, [rbp+0x21]; fimul st, dword ptr [rbp-0x77]; ret far; 
0x00000000118b78: xor cl, [rip+0x64d8f700]; mov [rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000158bf1: xor cl, ch; paddw mm7, mm7; jmp qword ptr [rsi+0xf]; 
0x000000000b6640: xor cl, cl; mov [rax], cl; mov rax, rdi; ret; 
0x0000000013332a: xor cl, dh; or eax, [rax]; syscall; 
0x0000000010f43a: xor cl, dl; or eax, 0x64d8f700; mov [rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000035d02: xor dh, [rdi-0x72b7ffe5]; cmp eax, 0x1b7c73; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000041f86: xor dl, 0xf; adc [rdi], eax; and rdx, rax; movq xmm0, rdx; ret; 
0x00000000148a9d: xor dword ptr [rax+0x23], 0x0; add [rax], al; mov rdi, r12; call qword ptr [rax+0x28]; 
0x000000000806fd: xor eax, 0x12e0c2; movzx eax, al; movsxd rax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x0000000006c906: xor eax, 0x141551; movsxd rax, [rsi+rcx*4]; add rax, rsi; notrack jmp rax; 
0x00000000187f81: xor eax, 0x148b0001; xchg ecx, eax; mov eax, [rcx+rax*4]; sub eax, edx; ret; 
0x000000000407a2: xor eax, 0x1687f9; mov edx, edx; movsxd rdx, [rsi+rdx*4]; add rdx, rsi; notrack jmp rdx; 
0x0000000008052c: xor eax, 0x16ba37; mov rdi, rsp; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000007a01c: xor eax, 0x171f47; mov rdi, rsp; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000051f5c: xor eax, 0x1df; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000001131fb: xor eax, 0x20; mov [rsi+0x48], rax; ret; 
0x00000000083cdf: xor eax, 0x25c; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000001120f7: xor eax, 0x31fff102; rcr byte ptr [rbx+0x5d], 0x41; pop rsp; ret; 
0x000000000244ba: xor eax, 0x38c48348; pop rbx; pop rbp; ret; 
0x000000001903c7: xor eax, 0x48000002; mov ecx, edx; rep movsb [rdi], [rsi]; ret; 
0x00000000092aa7: xor eax, 0x48ffffe5; ror eax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000011a937: xor eax, 0x49000001; mov edi, [rbp]; call rbx; 
0x00000000166f47: xor eax, 0x49000568; movsxd edx, [rbx+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000b6dcf: xor eax, 0x49000f83; movsxd ecx, [rbx+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000001687f7: xor eax, 0x4c00083b; lea ebx, [rip+0x5527e]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x000000000bc0d6: xor eax, 0x6348000f; add al, 0xbe; add rax, rsi; notrack jmp rax; 
0x00000000115637: xor eax, 0x64000d68; mov dword ptr [rax], 0x26; mov eax, 0xffffffff; ret; 
0x00000000024437: xor eax, 0x64001c7a; add rax, [0x0]; ret; 
0x0000000003cb5f: xor eax, 0x7503f883; ret far; 
0x00000000147277: xor eax, 0x758d4; lea r9, [rsp+0x2c]; call qword ptr [rax]; 
0x00000000147271: xor eax, 0x758e2; push qword ptr [rip+0x758d4]; lea r9, [rsp+0x2c]; call qword ptr [rax]; 
0x00000000147134: xor eax, 0x75a17; lea r9, [rsp+0x2c]; call qword ptr [rax]; 
0x0000000014712e: xor eax, 0x75a25; push qword ptr [rip+0x75a17]; lea r9, [rsp+0x2c]; call qword ptr [rax]; 
0x00000000190a09: xor eax, 0x7701fa80; cmp dh, [rdx+0x2]; mov [rdi], cl; vzeroupper; ret; 
0x0000000010eed9: xor eax, 0x8948fff1; ror dword ptr [rax-0x73], 0x40; inc esi; jmp far fword ptr [r15]; 
0x0000000010eeda: xor eax, 0x8948fff1; ror dword ptr [rax-0x73], 0x40; inc esi; jmp far fword ptr [r15]; 
0x00000000160cc1: xor eax, 0x8e1ca; ret; 
0x000000000436f2: xor eax, 0x98c48148; add [rax], al; add [rbp+0x41], bl; pop rsp; ret; 
0x0000000010c94f: xor eax, 0xa5a8c; movups [rsp+0xc8], xmm0; mov [rsp+0xe8], eax; mov eax, 0xe; syscall; 
0x000000000de774: xor eax, 0xa8c48148; add [rax], al; add [rbp+0x41], bl; pop rsp; ret; 
0x000000000fa103: xor eax, 0xb716c; movsxd rax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x00000000093867: xor eax, 0xc300159d; nop [rax]; endbr64; xor eax, eax; ret; 
0x000000000e8d6f: xor eax, 0xc7f30; movsxd rax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x00000000187fb5: xor eax, 0xc8b0001; mov cl, [rbx-0x37d67dfc]; ret; 
0x000000000e321e: xor eax, 0xd115a; mov eax, 0x142; syscall; 
0x000000000bc0d4: xor eax, 0xf35a7; movsxd rax, [rsi+rdi*4]; add rax, rsi; notrack jmp rax; 
0x000000000fccb9: xor eax, 0xf451d77; mov dh, 0xff; movsxd rax, [r14+r15*4]; add rax, r14; notrack jmp rax; 
0x0000000011fe37: xor eax, 0xf7000cc0; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x0000000011f237: xor eax, 0xf7000ccc; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x0000000011ce37: xor eax, 0xf7000cf0; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x0000000010e937: xor eax, 0xf7000dd5; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x000000000a4fb6: xor eax, 0xf7410000; ret; 
0x0000000013fe99: xor eax, 0xfffbc2e9; call qword ptr [rax+0x244c8b44]; 
0x00000000093190: xor eax, 0xffffde4b; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000092ddc: xor eax, 0xffffe1ff; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000092aa6: xor eax, 0xffffe535; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000106015: xor eax, 0xfffff246; lea rdi, [rip+0xe95a3]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000915ee: xor eax, 0xfffff9ed; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000026f67: xor eax, 0xfffff9f4; lea rdi, [rip+0x1c69e1]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x000000001534c9: xor eax, 0xfffffbc2; lea rdi, [rip+0x9d94b]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000140bb7: xor eax, 0xfffffbc4; lea rdi, [rip+0xafc01]; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x0000000005473f: xor eax, 0xfffffc3c; lea rdi, [rip+0x199fdd]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000842e0: xor eax, 0xfffffc5b; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000001533f9: xor eax, 0xfffffc92; lea rdi, [rip+0x9da1b]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000153329: xor eax, 0xfffffd62; lea rdi, [rip+0x9daeb]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000153261: xor eax, 0xfffffe2a; lea rdi, [rip+0x9dbb3]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000012d119: xor eax, 0xfffffeb2; lea rdi, [rip+0xc2d43]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000001531a9: xor eax, 0xfffffee2; lea rdi, [rip+0x9dc6b]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000910f7: xor eax, 0xfffffee4; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000014628b: xor eax, 0xffffff00; lea rdi, [rip+0xaa849]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000009f956: xor eax, 0xffffff25; lea rdi, [rip+0x14f5de]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000138585: xor eax, 0xffffffb6; lea rdi, [rip+0xb7eab]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000005221f: xor eax, [0x28]; jne 0x00000000000522b5; add rsp, 0x10; pop rbx; ret; 
0x000000000578eb: xor eax, [0x28]; jne 0x0000000000057975; leave; ret; 
0x00000000042bbe: xor eax, [0x28]; jne short 0x0000000000042bcc; add rsp, 0x18; ret; 
0x00000000043045: xor eax, [0x28]; jne short 0x0000000000043074; mov eax, r8d; add rsp, 0x118; ret; 
0x00000000043259: xor eax, [0x28]; jne short 0x00000000000432a4; mov eax, r9d; add rsp, 0x148; ret; 
0x00000000047de6: xor eax, [0x28]; jne short 0x0000000000047df4; add rsp, 0x18; ret; 
0x00000000047e33: xor eax, [0x28]; jne short 0x0000000000047e41; add rsp, 0x18; ret; 
0x0000000008dc01: xor eax, [0x28]; jne short 0x000000000008dc1b; add rsp, 0x48; ret; 
0x00000000099228: xor eax, [0x28]; jne short 0x0000000000099272; add rsp, 0x40; pop rbp; ret; 
0x00000000113ab6: xor eax, [0x28]; jne short 0x0000000000113ae4; mov eax, r9d; add rsp, 0x38; ret; 
0x000000001182c1: xor eax, [0x28]; jne short 0x00000000001182d2; add rsp, 0xd8; ret; 
0x0000000011839a: xor eax, [0x28]; jne short 0x00000000001183ab; add rsp, 0xd8; ret; 
0x0000000011bd56: xor eax, [0x28]; jne short 0x000000000011bd67; add rsp, 0xd8; ret; 
0x0000000011be16: xor eax, [0x28]; jne short 0x000000000011be27; add rsp, 0xd8; ret; 
0x0000000011bff4: xor eax, [0x28]; jne short 0x000000000011c005; add rsp, 0x418; ret; 
0x0000000011c25d: xor eax, [0x28]; jne short 0x000000000011c26e; add rsp, 0xd8; ret; 
0x0000000011c4ca: xor eax, [0x28]; jne short 0x000000000011c4db; add rsp, 0xd8; ret; 
0x00000000129b78: xor eax, [0x28]; jne short 0x0000000000129b89; add rsp, 0xd8; ret; 
0x0000000012b8a1: xor eax, [0x28]; jne short 0x000000000012b8b2; add rsp, 0xd8; ret; 
0x000000001448d6: xor eax, [0x28]; jne short 0x00000000001448e6; add rsp, 0x10; pop r12; ret; 
0x00000000146244: xor eax, [0x28]; jne short 0x0000000000146253; add rsp, 0x40; pop rbp; ret; 
0x0000000015163c: xor eax, [0x28]; jne short 0x0000000000151661; add rsp, 0x10; pop rbx; ret; 
0x00000000153974: xor eax, [0x28]; jne short 0x0000000000153982; add rsp, 0x78; ret; 
0x000000001539e4: xor eax, [0x28]; jne short 0x00000000001539f2; add rsp, 0x78; ret; 
0x00000000153a54: xor eax, [0x28]; jne short 0x0000000000153a62; add rsp, 0x78; ret; 
0x00000000153ab5: xor eax, [0x28]; jne short 0x0000000000153ac3; add rsp, 0x78; ret; 
0x00000000153b19: xor eax, [0x28]; jne short 0x0000000000153b27; add rsp, 0x78; ret; 
0x00000000153b84: xor eax, [0x28]; jne short 0x0000000000153b92; add rsp, 0x78; ret; 
0x00000000153c07: xor eax, [0x28]; jne short 0x0000000000153c15; add rsp, 0x78; ret; 
0x0000000015413c: xor eax, [0x28]; jne short 0x0000000000154168; add rsp, 0x28; ret; 
0x00000000155baf: xor eax, [0x28]; jne short 0x0000000000155bbd; add rsp, 0x48; ret; 
0x000000000240e3: xor eax, [0x30]; call rax; 
0x00000000024422: xor eax, [0x30]; jmp rax; 
0x000000000472de: xor eax, [0x30]; mov fs:[rbx], rdx; mov rdi, [rbp+0x8]; call rax; 
0x0000000013cc9e: xor eax, [0x30]; mov qword ptr [rsp], 0x0; call rax; 
0x000000000dd425: xor eax, [0x30]; pop r13; pop r14; jmp rax; 
0x00000000023a44: xor eax, [0x30]; rol rax, 0x11; mov [rip+0x1cd8d2], rax; ret; 
0x00000000082a51: xor eax, [0x30]; test rax, rax; je short 0x0000000000082a66; mov rdi, [rdi+0xe0]; jmp rax; 
0x00000000082b31: xor eax, [0x30]; test rax, rax; je short 0x0000000000082b50; mov rdi, [rdi+0xe0]; jmp rax; 
0x0000000018b654: xor eax, [rax+0x3b7701fa]; jb short 0x000000000018b661; movzx ecx, byte ptr [rsi]; mov [rdi], cl; ret; 
0x00000000120295: xor eax, [rax]; add [rax], al; syscall; 
0x0000000006620b: xor eax, [rax]; add [rbx-0x65f7b], cl; jmp far fword ptr [rbx]; 
0x00000000117af8: xor eax, [rcx-0x7d]; call far fword ptr [rbx+0xf]; 
0x00000000120c74: xor eax, [rcx]; add [rax], al; syscall; 
0x0000000016e109: xor eax, [rcx]; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000015593f: xor eax, eax; add r13, rbx; call rbp; 
0x00000000199050: xor eax, eax; add rsp, 0x10; pop rbx; ret; 
0x0000000008e494: xor eax, eax; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000012b99e: xor eax, eax; add rsp, 0x8; pop rbp; pop r12; ret; 
0x000000000480a2: xor eax, eax; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000094d01: xor eax, eax; add rsp, 0x8; ret; 
0x000000000342f4: xor eax, eax; and edi, 0xffffff80; sete al; ret; 
0x0000000015f1a7: xor eax, eax; call qword ptr [r12+0xf08]; 
0x0000000014762e: xor eax, eax; call qword ptr [rbx+0x18]; 
0x000000001476f0: xor eax, eax; call qword ptr [rbx+0x28]; 
0x000000000240c9: xor eax, eax; call qword ptr [rdx+0x1d0]; 
0x000000001569b1: xor eax, eax; call r14; 
0x00000000024c7b: xor eax, eax; call rbx; 
0x00000000147f06: xor eax, eax; call rcx; 
0x000000000ee4a8: xor eax, eax; cmp [rsi], cl; je 0x00000000000ee3ed; ret; 
0x00000000121298: xor eax, eax; cmp byte ptr [rcx], 0x0; je short 0x00000000001212a0; ret; 
0x0000000004739a: xor eax, eax; cmp byte ptr [rdi], 0x0; jne short 0x00000000000473a8; pop rbx; ret; 
0x00000000047399: xor eax, eax; cmp byte ptr [rdi], 0x0; jne short 0x00000000000473a8; pop rbx; ret; 
0x00000000102ad0: xor eax, eax; cmp ecx, 0xc0fe; setne al; lea eax, [rax+rax*8+0x5]; ret; 
0x00000000122c84: xor eax, eax; cmp edi, 0x9; setbe r8b; mov eax, r8d; ret; 
0x000000000d4273: xor eax, eax; cmp edi, 0xa3d70b; setb al; add eax, 0x16d; ret; 
0x0000000010d154: xor eax, eax; cmp edx, 0x4; je short 0x000000000010d164; mov eax, 0x1c; syscall; 
0x00000000113466: xor eax, eax; cmp esi, 0x9; je short 0x0000000000113498; mov eax, 0x48; syscall; 
0x0000000008cd57: xor eax, eax; cmp qword ptr [rdi+0x18], 0x0; setne r8b; mov eax, r8d; ret; 
0x0000000010fdb1: xor eax, eax; cmp rcx, rdx; seta al; sbb eax, 0x0; ret; 
0x00000000094c94: xor eax, eax; cmp rdi, rsi; sete al; ret; 
0x000000000e51eb: xor eax, eax; cmp rdx, 0x1badface; setne al; ret; 
0x000000000e5206: xor eax, eax; cmp rdx, 0x1cd1; setne al; ret; 
0x000000000e51d3: xor eax, eax; cmp rdx, 0x5346544e; setne al; ret; 
0x000000000e51b7: xor eax, eax; cmp rdx, 0xadf5; setne al; ret; 
0x000000000941bf: xor eax, eax; cmp rdx, rdi; setae al; ret; 
0x000000000bda9c: xor eax, eax; lea r9, [rsp+0x28]; call rbx; 
0x00000000113862: xor eax, eax; lea rdx, [rsp+0x30]; mov eax, 0x10; syscall; 
0x00000000042c8d: xor eax, eax; mov [rbx+0x40], esi; pop rbx; ret; 
0x0000000008765f: xor eax, eax; mov [rbx], ecx; pop rbx; ret; 
0x0000000013c64a: xor eax, eax; mov [rdi+0x3], cl; movdqu xmm0, [rsi]; movups [rdi+rdx+0x8], xmm0; ret; 
0x00000000113724: xor eax, eax; mov [rdi+0x8], esi; ret; 
0x0000000009ef6a: xor eax, eax; mov [rdi], rsi; ret; 
0x000000000d4ad8: xor eax, eax; mov [rdx], eax; mov rax, r8; add rsp, 0x8; ret; 
0x000000000a865b: xor eax, eax; mov [rdx], rcx; ret; 
0x00000000160cbd: xor eax, eax; mov [rip+0x8e1ca], rsi; ret; 
0x000000000d0398: xor eax, eax; mov [rsp+0x50], r12; call rbx; 
0x0000000013b435: xor eax, eax; mov dword ptr [rdi+0x8], 0x29; mov [rdi+0xc], edx; mov [rsi], rdi; ret; 
0x0000000004813d: xor eax, eax; mov dword ptr [rsi+0xc], 0x1000b; ret; 
0x000000000980c8: xor eax, eax; mov dword ptr fs:[rax], 0xc; mov rax, r8; ret; 
0x00000000114554: xor eax, eax; mov eax, 0x127; syscall; 
0x00000000114614: xor eax, eax; mov eax, 0x128; syscall; 
0x000000001146f4: xor eax, eax; mov eax, 0x147; syscall; 
0x00000000114854: xor eax, eax; mov eax, 0x148; syscall; 
0x00000000120557: xor eax, eax; mov eax, 0x2c; syscall; 
0x00000000120337: xor eax, eax; mov eax, 0x2d; syscall; 
0x00000000052162: xor eax, eax; mov eax, 0x3e; syscall; 
0x000000000e2d14: xor eax, eax; mov eax, 0xf7; syscall; 
0x000000000ee567: xor eax, eax; mov eax, r8d; pop rbx; pop rbp; ret; 
0x00000000157411: xor eax, eax; mov eax, r8d; ret; 
0x00000000157679: xor eax, eax; mov edx, 0xffffffff; mov rsi, r12; mov rdi, rbx; call rcx; 
0x0000000015767a: xor eax, eax; mov edx, 0xffffffff; mov rsi, r12; mov rdi, rbx; call rcx; 
0x00000000155a8c: xor eax, eax; mov edx, 0xffffffff; mov rsi, r14; mov rdi, r12; call r13; 
0x000000001577a8: xor eax, eax; mov edx, 0xffffffff; mov rsi, r14; mov rdi, rbp; call r12; 
0x0000000018bcb0: xor eax, eax; mov edx, [rdi]; cmp edx, [rsi]; jne short 0x000000000018bc9c; ret; 
0x0000000014f6f5: xor eax, eax; mov rax, [rdi+0x8]; lea rsi, [rsp+0x10]; call qword ptr [rax+0x10]; 
0x00000000046cb9: xor eax, eax; mov rax, r8; pop rbx; pop rbp; ret; 
0x00000000046cae: xor eax, eax; mov rax, r8; ret; 
0x000000000caa10: xor eax, eax; mov rcx, [rsp+0x20]; mov rdi, rbp; mov rsi, [rsp+0x18]; call rbx; 
0x000000001449c9: xor eax, eax; mov rcx, r14; mov rdi, r13; call r12; 
0x00000000160352: xor eax, eax; mov rdi, r12; call qword ptr [rax+0x1e0]; 
0x000000000bd797: xor eax, eax; mov rdi, r12; lea r9, [rsp+0x30]; call rbx; 
0x0000000008a5dc: xor eax, eax; mov rdi, r13; lea r9, [rsp+0x18]; call rbp; 
0x00000000147e0e: xor eax, eax; mov rdi, rbx; call rcx; 
0x00000000155b99: xor eax, eax; mov rdi, rsp; mov dword ptr [rsp], 0x2; call r8; 
0x00000000113a3e: xor eax, eax; mov rdx, rsp; mov eax, 0x10; syscall; 
0x0000000014695b: xor eax, eax; mov rsi, [rsp+0x10]; mov rcx, [rsp+0x8]; mov rdi, rbp; call rcx; 
0x0000000014d1e7: xor eax, eax; mov rsi, [rsp+0x30]; mov rcx, [rsp+0x28]; mov rdi, r12; call rcx; 
0x0000000014d402: xor eax, eax; mov rsi, [rsp+0x40]; mov rdx, [rsp+0x20]; mov rdi, r12; call rdx; 
0x000000001509d8: xor eax, eax; mov rsi, [rsp+0x50]; mov rcx, [rsp+0x10]; mov rdi, r15; call rcx; 
0x0000000014dadb: xor eax, eax; mov rsi, rdx; add rdi, 0x10; jmp rcx; 
0x0000000014dafb: xor eax, eax; mov rsi, rdx; mov dword ptr [rdi+0x10], 0x2; add rdi, 0x10; jmp rcx; 
0x0000000015064b: xor eax, eax; mov rsi, rdx; mov dword ptr [rdi+0x58], 0x2; add rdi, 0x58; jmp rcx; 
0x0000000014fd0b: xor eax, eax; mov rsi, rdx; mov dword ptr [rdi+0x68], 0x2; add rdi, 0x68; jmp rcx; 
0x0000000014cecb: xor eax, eax; mov rsi, rdx; mov dword ptr [rdi+0xc8], 0x2; add rdi, 0xc8; jmp rcx; 
0x000000000a096f: xor eax, eax; pop r12; pop r13; ret; 
0x0000000012cfab: xor eax, eax; pop r12; pop rbp; ret; 
0x00000000148050: xor eax, eax; pop rbp; jmp rdx; 
0x000000000900e1: xor eax, eax; pop rbp; pop r12; ret; 
0x000000000412ca: xor eax, eax; pop rbp; ret; 
0x00000000148a4b: xor eax, eax; pop rbx; add rdi, 0x23b0; pop rbp; jmp rcx; 
0x000000001468a6: xor eax, eax; pop rbx; pop rbp; jmp rcx; 
0x0000000008d90e: xor eax, eax; pop rbx; pop rbp; pop r12; ret; 
0x00000000093616: xor eax, eax; pop rbx; pop rbp; ret; 
0x00000000042c6e: xor eax, eax; pop rbx; ret; 
0x0000000008e67f: xor eax, eax; punpcklqdq xmm0, xmm0; movups [rbx+0x8], xmm0; pop rbx; ret; 
0x00000000047d12: xor eax, eax; punpcklqdq xmm0, xmm1; mov eax, r8d; movups [rdi], xmm0; ret; 
0x000000000bd357: xor eax, eax; push 0x0; lea r9, [rsp+0x18]; call r13; 
0x000000000cafb6: xor eax, eax; push 0x1; push 0x0; mov r9, [rsp+0x10]; call r14; 
0x000000001142d1: xor eax, eax; ret; 
0x0000000013b980: xor eax, eax; ret; 
0x00000000040ff8: xor eax, eax; ret; 
0x000000000aa66e: xor eax, eax; sub eax, ecx; ret; 
0x0000000010e038: xor eax, eax; syscall; 
0x0000000012bdec: xor eax, eax; test byte ptr [rbx+0x1c], 0x20; je short 0x000000000012be00; pop rbx; ret; 
0x0000000008cd94: xor eax, eax; test byte ptr [rdi], 0x4; sete al; ret; 
0x0000000008cda4: xor eax, eax; test byte ptr [rdi], 0x8; sete al; ret; 
0x000000000ee4bc: xor eax, eax; test byte ptr [rdx+0xc8], 0x40; jne 0x00000000000ee3ed; ret; 
0x000000000ee46a: xor eax, eax; test byte ptr [rdx+0xc8], 0x80; je 0x00000000000ee3ed; ret; 
0x000000001570e1: xor eax, eax; test eax, eax; je short 0x0000000000157110; mov eax, r8d; ret; 
0x00000000157131: xor eax, eax; test eax, eax; je short 0x0000000000157160; mov eax, r8d; ret; 
0x000000000bd240: xor eax, eax; test edx, edx; sete al; ret; 
0x000000001968e8: xor eax, eax; test r8d, r8d; jne 0x0000000000196840; add rsp, 0x38; ret; 
0x000000000908d4: xor eax, eax; test rdx, rdx; jne short 0x00000000000908e0; ret; 
0x00000000184300: xor eax, eax; vzeroupper; ret; 
0x00000000117c38: xor eax, eax; xchg [rip+0xd7c10], eax; cmp eax, 0x1; jg short 0x0000000000117c46; ret; 
0x00000000194153: xor eax, ebp; add rdx, rcx; notrack jmp rdx; 
0x00000000193f3a: xor eax, ebp; movzx ecx, r8b; add rdx, r10; notrack jmp rdx; 
0x00000000047dac: xor eax, ecx; ret; 
0x0000000014a51c: xor eax, edx; mov [rdi], r8; mov [rdi+0x8], rax; ret; 
0x00000000040fe6: xor eax, edx; movzx edx, byte ptr [rcx]; test dl, dl; jne short 0x0000000000040fc8; ret; 
0x00000000047327: xor eax, edx; sub eax, edx; ret; 
0x0000000004733a: xor eax, edx; sub rax, rdx; ret; 
0x0000000009f279: xor eax, esi; add [rax], eax; cmovne rax, rdx; ret; 
0x00000000120d59: xor eax, r8d; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000008ccf2: xor ebp, [rcx-0x7]; jmp qword ptr [rsi+0x2e]; 
0x000000000bc8a9: xor ebp, [rcx]; add [rax], eax; cmovne rax, rdx; ret; 
0x0000000016027b: xor ebp, ebp; call qword ptr [rax+0x1e0]; 
0x0000000015fdd3: xor ebp, ebp; lea rcx, [r10+0x398]; lea r8, [rsp+0x30]; call qword ptr [rax+0x1e0]; 
0x0000000011f15d: xor ebp, ebp; pop rax; pop rdi; call rax; 
0x0000000007164c: xor ebp, ecx; xchg ebx, eax; ret; 
0x0000000016f309: xor ebp, edi; add al, 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000004f7a7: xor ebp, edi; jmp qword ptr [rsi+0xf]; 
0x0000000016f609: xor ebp, esp; add al, 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000ca0dc: xor ebx, [0x28]; jne short 0x00000000000ca104; add rsp, 0x20; pop rbx; ret; 
0x000000000e368f: xor ebx, [0x28]; jne short 0x00000000000e36d9; mov rbx, [rbp-0x8]; leave; ret; 
0x000000000e385f: xor ebx, [0x28]; jne short 0x00000000000e38a9; mov rbx, [rbp-0x8]; leave; ret; 
0x0000000014958d: xor ebx, [0x28]; jne short 0x00000000001495c2; add rsp, 0x10; pop rbx; ret; 
0x0000000014962b: xor ebx, [0x28]; jne short 0x0000000000149665; add rsp, 0x10; pop rbx; ret; 
0x0000000014a23e: xor ebx, [0x28]; jne short 0x000000000014a257; add rsp, 0x40; pop rbx; ret; 
0x0000000016c509: xor ebx, [rax]; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000082c37: xor ebx, [rbx+0x5d]; pop r12; ret; 
0x0000000016c209: xor ebx, [rbx]; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016bf09: xor ebx, [rsi]; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000043351: xor ecx, [0x28]; jne 0x00000000000433f6; add rsp, 0x98; ret; 
0x0000000009d628: xor ecx, [0x28]; jne 0x000000000009d6e2; add rsp, 0x18; ret; 
0x0000000010def9: xor ecx, [0x28]; jne 0x000000000010dfb9; add rsp, 0x78; ret; 
0x0000000010e4ef: xor ecx, [0x28]; jne 0x000000000010e595; add rsp, 0x68; ret; 
0x0000000010e630: xor ecx, [0x28]; jne 0x000000000010e6ef; add rsp, 0x30; pop rbx; ret; 
0x0000000010e760: xor ecx, [0x28]; jne 0x000000000010e81f; add rsp, 0x30; pop rbx; ret; 
0x000000001150ba: xor ecx, [0x28]; jne 0x0000000000115159; add rsp, 0x60; pop rbp; ret; 
0x0000000012d0fd: xor ecx, [0x28]; jne 0x000000000012d1dd; leave; ret; 
0x0000000014e568: xor ecx, [0x28]; jne 0x000000000014e5f3; add rsp, 0x20; pop rbx; ret; 
0x00000000042f18: xor ecx, [0x28]; jne short 0x0000000000042f29; add rsp, 0x148; ret; 
0x000000000435ed: xor ecx, [0x28]; jne short 0x0000000000043605; add rsp, 0x118; ret; 
0x00000000043670: xor ecx, [0x28]; jne short 0x0000000000043688; add rsp, 0x118; ret; 
0x000000000439bf: xor ecx, [0x28]; jne short 0x00000000000439e2; add rsp, 0x40; pop rbx; ret; 
0x00000000043d1b: xor ecx, [0x28]; jne short 0x0000000000043d2c; add rsp, 0x148; ret; 
0x0000000004444b: xor ecx, [0x28]; jne short 0x000000000004445c; add rsp, 0xa8; ret; 
0x0000000004746c: xor ecx, [0x28]; jne short 0x000000000004747a; add rsp, 0x28; ret; 
0x0000000004755c: xor ecx, [0x28]; jne short 0x000000000004756a; add rsp, 0x28; ret; 
0x00000000047e85: xor ecx, [0x28]; jne short 0x0000000000047e93; add rsp, 0x18; ret; 
0x00000000047ed2: xor ecx, [0x28]; jne short 0x0000000000047ee0; add rsp, 0x18; ret; 
0x00000000047f25: xor ecx, [0x28]; jne short 0x0000000000047f33; add rsp, 0x18; ret; 
0x00000000047f72: xor ecx, [0x28]; jne short 0x0000000000047f80; add rsp, 0x18; ret; 
0x00000000052c2e: xor ecx, [0x28]; jne short 0x0000000000052c3f; add rsp, 0xd8; ret; 
0x0000000005b5dc: xor ecx, [0x28]; jne short 0x000000000005b600; add rsp, 0x450; pop rbp; ret; 
0x0000000005b89e: xor ecx, [0x28]; jne short 0x000000000005b8c5; add rsp, 0x38; ret; 
0x00000000061ca1: xor ecx, [0x28]; jne short 0x0000000000061cb2; add rsp, 0xd8; ret; 
0x00000000061d76: xor ecx, [0x28]; jne short 0x0000000000061d87; add rsp, 0xd8; ret; 
0x00000000061e2d: xor ecx, [0x28]; jne short 0x0000000000061e3e; add rsp, 0xd8; ret; 
0x00000000061fc1: xor ecx, [0x28]; jne short 0x0000000000061fd2; add rsp, 0xd8; ret; 
0x00000000062081: xor ecx, [0x28]; jne short 0x0000000000062092; add rsp, 0xd8; ret; 
0x0000000006216f: xor ecx, [0x28]; jne short 0x0000000000062180; add rsp, 0xd8; ret; 
0x00000000062246: xor ecx, [0x28]; jne short 0x0000000000062257; add rsp, 0xd8; ret; 
0x00000000063199: xor ecx, [0x28]; jne short 0x00000000000631aa; add rsp, 0xd8; ret; 
0x00000000063274: xor ecx, [0x28]; jne short 0x0000000000063285; add rsp, 0xd8; ret; 
0x000000000864f1: xor ecx, [0x28]; jne short 0x0000000000086502; add rsp, 0xd8; ret; 
0x000000000865ad: xor ecx, [0x28]; jne short 0x00000000000865be; add rsp, 0xd8; ret; 
0x000000000866a6: xor ecx, [0x28]; jne short 0x00000000000866b7; add rsp, 0xd8; ret; 
0x00000000086776: xor ecx, [0x28]; jne short 0x0000000000086787; add rsp, 0xd8; ret; 
0x0000000008682f: xor ecx, [0x28]; jne short 0x0000000000086840; add rsp, 0xd8; ret; 
0x000000000cabb9: xor ecx, [0x28]; jne short 0x00000000000cabca; add rsp, 0xd8; ret; 
0x000000000cac94: xor ecx, [0x28]; jne short 0x00000000000caca5; add rsp, 0xd8; ret; 
0x000000000ddd12: xor ecx, [0x28]; jne short 0x00000000000ddd24; add rsp, 0xe0; pop rbx; ret; 
0x000000000df438: xor ecx, [0x28]; jne short 0x00000000000df493; add rsp, 0x38; ret; 
0x000000000e41b8: xor ecx, [0x28]; jne short 0x00000000000e4213; add rsp, 0x38; ret; 
0x000000000e4258: xor ecx, [0x28]; jne short 0x00000000000e42b3; add rsp, 0x38; ret; 
0x000000000e4528: xor ecx, [0x28]; jne short 0x00000000000e4593; add rsp, 0x38; ret; 
0x000000000e45d8: xor ecx, [0x28]; jne short 0x00000000000e4643; add rsp, 0x38; ret; 
0x0000000010d359: xor ecx, [0x28]; jne short 0x000000000010d368; add rsp, 0x10; pop rbp; ret; 
0x0000000010d469: xor ecx, [0x28]; jne short 0x000000000010d477; add rsp, 0x18; ret; 
0x0000000010f32e: xor ecx, [0x28]; jne short 0x000000000010f380; add rsp, 0x130; pop rbp; ret; 
0x00000000112a7e: xor ecx, [0x28]; jne short 0x0000000000112b06; add rsp, 0x40; pop r12; ret; 
0x000000001133f4: xor ecx, [0x28]; jne short 0x0000000000113443; add rsp, 0x68; ret; 
0x00000000113483: xor ecx, [0x28]; jne short 0x00000000001134d3; add rsp, 0x18; ret; 
0x0000000011353b: xor ecx, [0x28]; jne short 0x000000000011358b; add rsp, 0x58; ret; 
0x000000001135d9: xor ecx, [0x28]; jne short 0x000000000011362b; add rsp, 0x58; ret; 
0x00000000113b26: xor ecx, [0x28]; jne short 0x0000000000113b3b; add rsp, 0x18; ret; 
0x000000001149b8: xor ecx, [0x28]; jne short 0x0000000000114a1b; add rsp, 0x38; ret; 
0x00000000114a58: xor ecx, [0x28]; jne short 0x0000000000114abb; add rsp, 0x38; ret; 
0x00000000114b0d: xor ecx, [0x28]; jne short 0x0000000000114b8b; add rsp, 0x38; ret; 
0x00000000114bdd: xor ecx, [0x28]; jne short 0x0000000000114c5b; add rsp, 0x38; ret; 
0x0000000011581d: xor ecx, [0x28]; jne short 0x0000000000115837; add rsp, 0x58; ret; 
0x0000000011596d: xor ecx, [0x28]; jne short 0x00000000001159ad; add rsp, 0x68; ret; 
0x00000000116b91: xor ecx, [0x28]; jne short 0x0000000000116bd5; add rsp, 0x38; ret; 
0x00000000116c60: xor ecx, [0x28]; jne short 0x0000000000116ca5; add rsp, 0x38; ret; 
0x000000001196e2: xor ecx, [0x28]; jne short 0x00000000001196f0; add rsp, 0x18; ret; 
0x0000000011f0e2: xor ecx, [0x28]; jne short 0x000000000011f103; add rsp, 0x68; ret; 
0x00000000120ae7: xor ecx, [0x28]; jne short 0x0000000000120af5; add rsp, 0x18; ret; 
0x00000000120ea6: xor ecx, [0x28]; jne short 0x0000000000120ebf; add rsp, 0xa0; pop rbx; ret; 
0x0000000012112c: xor ecx, [0x28]; jne short 0x000000000012117b; add rsp, 0x58; ret; 
0x0000000012de82: xor ecx, [0x28]; jne short 0x000000000012de98; add rsp, 0xd8; ret; 
0x0000000012e15a: xor ecx, [0x28]; jne short 0x000000000012e16b; add rsp, 0xd8; ret; 
0x0000000012f17a: xor ecx, [0x28]; jne short 0x000000000012f18b; add rsp, 0xd8; ret; 
0x0000000012f6ea: xor ecx, [0x28]; jne short 0x000000000012f6fb; add rsp, 0xd8; ret; 
0x0000000012f7ca: xor ecx, [0x28]; jne short 0x000000000012f7db; add rsp, 0xd8; ret; 
0x0000000012f8aa: xor ecx, [0x28]; jne short 0x000000000012f8bb; add rsp, 0xd8; ret; 
0x00000000136695: xor ecx, [0x28]; jne short 0x00000000001366a3; add rsp, 0x38; ret; 
0x00000000136702: xor ecx, [0x28]; jne short 0x0000000000136710; add rsp, 0x28; ret; 
0x0000000013c71b: xor ecx, [0x28]; jne short 0x000000000013c730; add rsp, 0x18; ret; 
0x0000000013e152: xor ecx, [0x28]; jne short 0x000000000013e175; add rsp, 0x20; pop rbx; ret; 
0x0000000013e1a7: xor ecx, [0x28]; jne short 0x000000000013e1b5; add rsp, 0x18; ret; 
0x0000000013e1fa: xor ecx, [0x28]; jne short 0x000000000013e208; add rsp, 0x28; ret; 
0x0000000014901a: xor ecx, [0x28]; jne short 0x0000000000149063; add rsp, 0x10; pop rbx; ret; 
0x0000000015198e: xor ecx, [0x28]; jne short 0x0000000000151a0a; add rsp, 0x10; pop r12; ret; 
0x00000000151c05: xor ecx, [0x28]; jne short 0x0000000000151c7a; add rsp, 0x30; pop rbx; ret; 
0x00000000151d45: xor ecx, [0x28]; jne short 0x0000000000151dba; add rsp, 0x30; pop rbx; ret; 
0x000000001538fe: xor ecx, [0x28]; jne short 0x000000000015390c; add rsp, 0x78; ret; 
0x00000000155c1a: xor ecx, [0x28]; jne short 0x0000000000155c63; add rsp, 0x10; pop rbx; ret; 
0x00000000155caa: xor ecx, [0x28]; jne short 0x0000000000155cf2; add rsp, 0x10; pop rbx; ret; 
0x00000000155d7a: xor ecx, [0x28]; jne short 0x0000000000155dc5; add rsp, 0x10; pop rbp; ret; 
0x000000001561ca: xor ecx, [0x28]; jne short 0x0000000000156214; add rsp, 0x10; pop rbx; ret; 
0x0000000015625a: xor ecx, [0x28]; jne short 0x00000000001562a3; add rsp, 0x10; pop rbx; ret; 
0x0000000015642a: xor ecx, [0x28]; jne short 0x0000000000156479; add rsp, 0x10; pop rbx; ret; 
0x000000001564ba: xor ecx, [0x28]; jne short 0x0000000000156503; add rsp, 0x10; pop rbx; ret; 
0x000000001571aa: xor ecx, [0x28]; jne short 0x00000000001571f5; add rsp, 0x10; pop rbx; ret; 
0x0000000015723a: xor ecx, [0x28]; jne short 0x0000000000157285; add rsp, 0x10; pop rbx; ret; 
0x000000001572ca: xor ecx, [0x28]; jne short 0x0000000000157315; add rsp, 0x10; pop rbx; ret; 
0x0000000015735a: xor ecx, [0x28]; jne short 0x00000000001573a5; add rsp, 0x10; pop rbx; ret; 
0x0000000015ccd2: xor ecx, [0x28]; jne short 0x000000000015cd0c; add rsp, 0x10; pop rbp; ret; 
0x0000000015cd62: xor ecx, [0x28]; jne short 0x000000000015cd9c; add rsp, 0x10; pop rbp; ret; 
0x0000000015f92d: xor ecx, [0x28]; jne short 0x000000000015f96e; add rsp, 0x58; ret; 
0x0000000015fa24: xor ecx, [0x28]; jne short 0x000000000015fa74; add rsp, 0x68; ret; 
0x0000000015fbbd: xor ecx, [0x28]; jne short 0x000000000015fc14; add rsp, 0x68; ret; 
0x0000000015fc86: xor ecx, [0x28]; jne short 0x000000000015fccc; add rsp, 0x38; ret; 
0x0000000004788b: xor ecx, [0x28]; movsxd rax, [rsp+0x4]; jne short 0x00000000000478ea; add rsp, 0x18; ret; 
0x00000000150bcc: xor ecx, [rax-0x75]; add [rax-0x7b], cl; shl byte ptr [rbp-0x1d], 0xe8; test al, 0xfe; jmp qword ptr [rsi+0xf]; 
0x0000000008d26e: xor ecx, [rax-0x7d]; ret; 
0x0000000011a021: xor ecx, [rcx-0x77]; fisttp qword ptr [rax-0x77], st; out dx, eax; call r12; 
0x0000000002c690: xor ecx, [rcx-0x77]; ret far; 
0x00000000172a89: xor ecx, [rdx+0xc8b0002]; mov cl, [rbx-0x37d67dfc]; ret; 
0x00000000118ab8: xor ecx, [rip+0x64d8f700]; mov [rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000118a74: xor ecx, [rip+0x64d8f700]; mov [rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000102846: xor ecx, ecx; add rsp, 0x8; mov eax, r9d; ret; 
0x000000000421a8: xor ecx, ecx; addsd xmm0, xmm0; mov [rdi], ecx; ret; 
0x000000000cf186: xor ecx, ecx; cmp eax, ecx; jne short 0x00000000000cf190; mov eax, r9d; ret; 
0x000000001473e2: xor ecx, ecx; lea rdx, [rip+0xe7e5]; lea r9, [rsp+0x20]; call qword ptr [rax]; 
0x000000000c6b80: xor ecx, ecx; mov eax, r9d; ret; 
0x0000000015ff2f: xor ecx, ecx; mov rdi, r12; lea r8, [rsp+0x30]; call qword ptr [rax+0x1e0]; 
0x0000000002f2e3: xor ecx, ecx; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; lea r8, [rsp+0xa0]; call r15; 
0x00000000120554: xor ecx, ecx; xor r8d, r8d; mov eax, 0x2c; syscall; 
0x00000000120334: xor ecx, ecx; xor r8d, r8d; mov eax, 0x2d; syscall; 
0x0000000016034f: xor ecx, ecx; xor r8d, r8d; mov rdi, r12; call qword ptr [rax+0x1e0]; 
0x000000000d021c: xor edi, [0x28]; jne short 0x00000000000d0239; add rsp, 0x28; ret; 
0x000000001029ca: xor edi, [0x28]; jne short 0x0000000000102a26; add rsp, 0x38; ret; 
0x00000000143751: xor edi, [0x30]; call rax; 
0x00000000181889: xor edi, [rbx+rax+0xc634f00]; mov ah, [rsi+0xf]; je short 0x0000000000181856; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000114aec: xor edi, [rdx-0x1]; mov edi, 0xffffffff; mov eax, 0x75; syscall; 
0x00000000114bbc: xor edi, [rdx-0x1]; mov edi, 0xffffffff; mov eax, 0x77; syscall; 
0x0000000016ea09: xor edi, eax; add al, 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000004f5ef: xor edi, ebp; jmp qword ptr [rsi+0xf]; 
0x0000000016e709: xor edi, ebx; add al, 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000967e2: xor edi, edi; call qword ptr [r13]; 
0x000000000978ef: xor edi, edi; call qword ptr [rax]; 
0x00000000144b79: xor edi, edi; call qword ptr [rsp+0x20]; 
0x00000000144fd2: xor edi, edi; call qword ptr [rsp+0x70]; 
0x00000000154d33: xor edi, edi; inc dword ptr [rbp+0x483674c0]; mov eax, [rbp+0x18]; mov rdi, r13; call qword ptr [rax+0x20]; 
0x0000000013c732: xor edi, edi; jmp qword ptr [rsi+0x66]; 
0x0000000012f970: xor edi, edi; lea rsi, [rsp-0x18]; mov eax, 0x83; syscall; 
0x0000000012f971: xor edi, edi; lea rsi, [rsp-0x18]; mov eax, 0x83; syscall; 
0x00000000024110: xor edi, edi; mov eax, edx; syscall; 
0x00000000054f22: xor edi, edi; mov r10d, 0x8; mov eax, 0xe; syscall; 
0x0000000011895d: xor edi, edi; or r10d, 0x40; mov eax, ecx; syscall; 
0x000000000d10ac: xor edi, edi; syscall; 
0x0000000016e409: xor edi, esi; add al, 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000054178: xor edx, [0x28]; jne short 0x0000000000054189; add rsp, 0xd8; ret; 
0x00000000061eff: xor edx, [0x28]; jne short 0x0000000000061f10; add rsp, 0xd8; ret; 
0x0000000006286c: xor edx, [0x28]; jne short 0x000000000006287e; add rsp, 0x1010; pop rbp; ret; 
0x00000000062e10: xor edx, [0x28]; jne short 0x0000000000062e27; add rsp, 0x18; ret; 
0x000000000d0296: xor edx, [0x28]; jne short 0x00000000000d02a5; add rsp, 0x40; pop rbp; ret; 
0x000000000d1062: xor edx, [0x28]; jne short 0x00000000000d1094; add rsp, 0x28; ret; 
0x000000000da6e5: xor edx, [0x28]; jne short 0x00000000000da6f3; add rsp, 0x18; ret; 
0x000000000dcfb5: xor edx, [0x28]; jne short 0x00000000000dcfc3; add rsp, 0x18; ret; 
0x000000000ddc7e: xor edx, [0x28]; jne short 0x00000000000ddc90; add rsp, 0xe0; pop rbx; ret; 
0x0000000010d1a4: xor edx, [0x28]; jne short 0x000000000010d1c1; add rsp, 0x28; ret; 
0x0000000010d4bb: xor edx, [0x28]; jne short 0x000000000010d4c9; add rsp, 0x18; ret; 
0x0000000010fbbc: xor edx, [0x28]; jne short 0x000000000010fbcd; movzx eax, al; add rsp, 0x58; ret; 
0x00000000114cd7: xor edx, [0x28]; jne short 0x0000000000114ce5; add rsp, 0x28; ret; 
0x00000000115896: xor edx, [0x28]; jne short 0x00000000001158a4; add rsp, 0x28; ret; 
0x0000000012df78: xor edx, [0x28]; jne short 0x000000000012df95; add rsp, 0xd8; ret; 
0x0000000012e092: xor edx, [0x28]; jne short 0x000000000012e0a3; add rsp, 0xd8; ret; 
0x0000000012ef98: xor edx, [0x28]; jne short 0x000000000012efb5; add rsp, 0xd8; ret; 
0x0000000012f0b2: xor edx, [0x28]; jne short 0x000000000012f0c3; add rsp, 0xd8; ret; 
0x000000001365f8: xor edx, [0x28]; jne short 0x0000000000136629; add rsp, 0x38; ret; 
0x0000000013ea89: xor edx, [0x28]; jne short 0x000000000013ea97; add rsp, 0x18; ret; 
0x00000000157a32: xor edx, [0x28]; jne short 0x0000000000157a44; add rsp, 0x90; pop rbx; ret; 
0x00000000157aa6: xor edx, [0x28]; jne short 0x0000000000157ab7; movzx eax, al; add rsp, 0x18; ret; 
0x00000000157b07: xor edx, [0x28]; jne short 0x0000000000157b18; movzx eax, al; add rsp, 0x18; ret; 
0x00000000157b73: xor edx, [0x28]; jne short 0x0000000000157b82; add rsp, 0x10; pop rbx; ret; 
0x00000000157be6: xor edx, [0x28]; jne short 0x0000000000157bf5; add rsp, 0x10; pop rbx; ret; 
0x0000000015c9db: xor edx, [0x28]; jne short 0x000000000015ca14; add rsp, 0x18; ret; 
0x00000000160d19: xor edx, [0x28]; jne short 0x0000000000160d27; add rsp, 0x28; ret; 
0x000000001632a4: xor edx, [0x28]; jne short 0x00000000001632b3; add rsp, 0x10; pop rbx; ret; 
0x0000000016332a: xor edx, [0x28]; jne short 0x0000000000163339; add rsp, 0x10; pop rbx; ret; 
0x000000000468ce: xor edx, [0x30]; call rdx; 
0x0000000009f729: xor edx, [rdi-0x72b80000]; adc eax, 0x1448c; cmovne rax, rdx; ret; 
0x00000000142468: xor edx, [rdx+0x7]; add al, ch; sbb r13, r15; jmp qword ptr [rsi+0x66]; 
0x0000000016cb09: xor edx, [rdx]; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016c809: xor edx, [rip+0x63490005]; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000946b3: xor edx, edx; add rdi, 0x308; mov esi, 0x80; syscall; 
0x000000000bc236: xor edx, edx; and eax, 0x3fffc00; div ecx; mov eax, eax; ret; 
0x0000000010d394: xor edx, edx; call rax; 
0x0000000005ea63: xor edx, edx; div ecx; add r8d, eax; mov eax, r8d; ret; 
0x00000000083cdb: xor edx, edx; lea rsi, [rip+0x25c]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000910f3: xor edx, edx; lea rsi, [rip-0x11c]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000092aa2: xor edx, edx; lea rsi, [rip-0x1acb]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000092dd8: xor edx, edx; lea rsi, [rip-0x1e01]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000009318c: xor edx, edx; lea rsi, [rip-0x21b5]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000842dc: xor edx, edx; lea rsi, [rip-0x3a5]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000000915ea: xor edx, edx; lea rsi, [rip-0x613]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000121225: xor edx, edx; mov eax, 0x1d; syscall; 
0x0000000013f011: xor edx, edx; mov eax, r10d; ret; 
0x00000000048308: xor edx, edx; mov eax, r9d; sub rsi, rdi; syscall; 
0x00000000054f5c: xor edx, edx; mov edi, 0x2; mov r10d, 0x8; mov eax, 0xe; syscall; 
0x000000000229ea: xor edx, edx; mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x00000000099f9b: xor edx, edx; mov edx, 0x1; mov esi, 0x81; mov eax, ebx; syscall; 
0x000000000945e8: xor edx, edx; mov edx, 0x2; mov esi, 0x80; mov eax, 0xca; syscall; 
0x0000000011a720: xor edx, edx; mov esi, 0x1; call r12; 
0x00000000113d96: xor edx, edx; mov esi, edi; mov eax, 0x12e; xor edi, edi; syscall; 
0x00000000113d97: xor edx, edx; mov esi, edi; mov eax, 0x12e; xor edi, edi; syscall; 
0x00000000089268: xor edx, edx; mov rdi, r15; call qword ptr [r14+0x80]; 
0x00000000089834: xor edx, edx; mov rdi, r15; call qword ptr [rbx+0x80]; 
0x0000000008eaa2: xor edx, edx; mov rdi, rbp; call qword ptr [rax+0x80]; 
0x0000000008eda4: xor edx, edx; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x0000000010d3d0: xor edx, edx; mov rsi, r12; mov rdi, rbp; mov eax, 0x135; syscall; 
0x00000000144d5c: xor edx, edx; mov rsi, r12; mov rdi, rbx; mov rcx, r13; call r10; 
0x0000000010c9c3: xor edx, edx; mov rsi, r14; mov edi, 0x2; mov eax, 0xe; syscall; 
0x00000000144bfa: xor edx, edx; mov rsi, r14; mov rdi, r15; mov [rsp+0x8], rcx; call rbp; 
0x0000000004302a: xor edx, edx; mov rsi, r9; mov edi, 0x2; mov eax, 0xe; syscall; 
0x0000000008f4f8: xor edx, edx; mov rsi, rbp; mov rdi, rbx; call qword ptr [r12+0x80]; 
0x00000000084ac8: xor edx, edx; mov rsi, rbp; mov rdi, rbx; call qword ptr [r13+0x48]; 
0x00000000024ce8: xor edx, edx; movzx eax, al; add eax, 0x1; push rax; call rbx; 
0x000000000bba03: xor edx, edx; or cl, cl; cmove rax, rdx; ret; 
0x000000000849e9: xor edx, edx; pop rbp; pop r12; pop r13; jmp rax; 
0x00000000092666: xor edx, edx; pop rbx; jmp rax; 
0x000000000bd55d: xor edx, edx; push 0x1; lea r9, [rsp+0x20]; call rbx; 
0x00000000116c46: xor edx, edx; xor esi, esi; mov eax, 0x118; syscall; 
0x000000000e2f5f: xor edx, edx; xor esi, esi; mov edi, 0x1200011; mov eax, 0x38; syscall; 
0x00000000092f0a: xor edx, edx; xor esi, esi; mov rdi, r15; call qword ptr [rax+0x58]; 
0x0000000010d301: xor edx, edx; xor esi, esi; mov rdi, rbp; call rax; 
0x0000000010d330: xor edx, edx; xor esi, esi; mov rdi, rbp; mov eax, 0x135; syscall; 
0x0000000010dc3b: xor edx, esp; or eax, 0x64d8f700; mov [rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000004377b: xor esi, [0x28]; jne short 0x000000000004378c; add rsp, 0x98; ret; 
0x0000000012f5c1: xor esi, [0x28]; jne short 0x000000000012f5d5; add rsp, 0x28; ret; 
0x0000000012f621: xor esi, [0x28]; jne short 0x000000000012f635; add rsp, 0x28; ret; 
0x0000000016ed09: xor esi, ebp; add al, 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000013f170: xor esi, ebp; jmp qword ptr [rsi+0xf]; 
0x0000000010efad: xor esi, ecx; jmp qword ptr [rcx+rax*2-0x75]; 
0x0000000016f009: xor esi, edx; add al, 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000009f904: xor esi, esi; add rsp, 0x8; ror rax, 0x11; xor rax, fs:[0x30]; jmp rax; 
0x00000000119a97: xor esi, esi; call r12; 
0x000000000dd00e: xor esi, esi; lea edi, [rdi*8+0x2]; syscall; 
0x00000000148a93: xor esi, esi; lea r12, [rbx+0x23b0]; mov dword ptr [rbx+0x23b0], 0x0; mov rdi, r12; call qword ptr [rax+0x28]; 
0x00000000148b06: xor esi, esi; mov dword ptr [rax+0x23b0], 0x1; mov rax, [rax+0x23b8]; mov rdi, r12; call qword ptr [rax+0x28]; 
0x00000000154b10: xor esi, esi; mov dword ptr [rbx+0x10], 0x1; mov rdi, r13; call qword ptr [rax+0x28]; 
0x00000000116c48: xor esi, esi; mov eax, 0x118; syscall; 
0x00000000090882: xor esi, esi; mov ecx, 0x3; mov edx, 0x1; mov rdi, rbx; call qword ptr [r12+0x48]; 
0x000000000e2f61: xor esi, esi; mov edi, 0x1200011; mov eax, 0x38; syscall; 
0x00000000033e80: xor esi, esi; mov edi, 0x1; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000127d20: xor esi, esi; mov edi, 0x2000004; call rax; 
0x0000000008973f: xor esi, esi; mov edx, 0x1; mov rdi, r15; call qword ptr [rbp+0x80]; 
0x0000000008ed07: xor esi, esi; mov edx, 0x1; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x00000000089549: xor esi, esi; mov edx, 0x2; mov rdi, r15; call qword ptr [r13+0x80]; 
0x00000000082255: xor esi, esi; mov edx, 0x2; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x0000000009009a: xor esi, esi; mov edx, 0x2; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x0000000009ef60: xor esi, esi; mov qword ptr [rdi+0x8], 0x0; xor eax, eax; mov [rdi], rsi; ret; 
0x00000000092f0c: xor esi, esi; mov rdi, r15; call qword ptr [rax+0x58]; 
0x00000000047006: xor esi, esi; mov rdi, r9; call r8; 
0x0000000008bdf4: xor esi, esi; mov rdi, rbp; call qword ptr [r13+0x10]; 
0x00000000081e69: xor esi, esi; mov rdi, rbp; call qword ptr [rbx+0x10]; 
0x0000000010d303: xor esi, esi; mov rdi, rbp; call rax; 
0x00000000146a10: xor esi, esi; mov rdi, rbp; mov dword ptr [rbx+0x18], 0x0; call qword ptr [rax+0x28]; 
0x00000000146991: xor esi, esi; mov rdi, rbp; mov dword ptr [rbx+0x18], 0x1; call qword ptr [rax+0x28]; 
0x0000000010d332: xor esi, esi; mov rdi, rbp; mov eax, 0x135; syscall; 
0x00000000051fc1: xor esi, esi; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000112d51: xor esi, esi; syscall; 
0x00000000112d52: xor esi, esi; syscall; 
0x00000000054f20: xor esi, esi; xor edi, edi; mov r10d, 0x8; mov eax, 0xe; syscall; 
0x00000000090881: xor esi, r14d; mov ecx, 0x3; mov edx, 0x1; mov rdi, rbx; call qword ptr [r12+0x48]; 
0x0000000016b909: xor esp, [rax*1+0x14634900]; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000b1489: xor esp, [rax+0xc8b000e]; mov cl, [rbx-0x37d67dfc]; ret; 
0x0000000016bc09: xor esp, [rcx]; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000016b609: xor esp, [rdi]; add eax, 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000000d0088: xor esp, esp; mov dword ptr fs:[rax], 0x4b; mov rax, r12; pop r12; ret; 
0x000000000d00a1: xor esp, esp; mov rax, r12; pop r12; ret; 
0x000000000946b2: xor r10, r10; add rdi, 0x308; mov esi, 0x80; syscall; 
0x00000000121224: xor r10d, r10d; mov eax, 0x1d; syscall; 
0x0000000013f010: xor r10d, r10d; mov eax, r10d; ret; 
0x000000000229e9: xor r10d, r10d; mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x00000000099f9a: xor r10d, r10d; mov edx, 0x1; mov esi, 0x81; mov eax, ebx; syscall; 
0x000000000945e7: xor r10d, r10d; mov edx, 0x2; mov esi, 0x80; mov eax, 0xca; syscall; 
0x00000000113dd6: xor r10d, r10d; mov esi, edi; mov eax, 0x12e; xor edi, edi; syscall; 
0x00000000113dd7: xor r10d, r10d; mov esi, edi; mov eax, 0x12e; xor edi, edi; syscall; 
0x00000000116c45: xor r10d, r10d; xor esi, esi; mov eax, 0x118; syscall; 
0x000000000d0087: xor r12d, r12d; mov dword ptr fs:[rax], 0x4b; mov rax, r12; pop r12; ret; 
0x000000000d00a0: xor r12d, r12d; mov rax, r12; pop r12; ret; 
0x0000000016027a: xor r13d, r13d; call qword ptr [rax+0x1e0]; 
0x0000000015fdd2: xor r13d, r13d; lea rcx, [r10+0x398]; lea r8, [rsp+0x30]; call qword ptr [rax+0x1e0]; 
0x0000000006620a: xor r8d, [rax]; add [rbx-0x65f7b], cl; jmp far fword ptr [rbx]; 
0x00000000194152: xor r8d, r13d; add rdx, rcx; notrack jmp rdx; 
0x00000000193f39: xor r8d, r13d; movzx ecx, r8b; add rdx, r10; notrack jmp rdx; 
0x00000000024c7a: xor r8d, r8d; call rbx; 
0x00000000122c83: xor r8d, r8d; cmp edi, 0x9; setbe r8b; mov eax, r8d; ret; 
0x0000000008cd56: xor r8d, r8d; cmp qword ptr [rdi+0x18], 0x0; setne r8b; mov eax, r8d; ret; 
0x000000000bda9b: xor r8d, r8d; lea r9, [rsp+0x28]; call rbx; 
0x000000000d4ad7: xor r8d, r8d; mov [rdx], eax; mov rax, r8; add rsp, 0x8; ret; 
0x000000000980c7: xor r8d, r8d; mov dword ptr fs:[rax], 0xc; mov rax, r8; ret; 
0x00000000114553: xor r8d, r8d; mov eax, 0x127; syscall; 
0x00000000114613: xor r8d, r8d; mov eax, 0x128; syscall; 
0x000000001146f3: xor r8d, r8d; mov eax, 0x147; syscall; 
0x00000000114853: xor r8d, r8d; mov eax, 0x148; syscall; 
0x00000000120556: xor r8d, r8d; mov eax, 0x2c; syscall; 
0x00000000120336: xor r8d, r8d; mov eax, 0x2d; syscall; 
0x000000000e2d13: xor r8d, r8d; mov eax, 0xf7; syscall; 
0x000000000ee566: xor r8d, r8d; mov eax, r8d; pop rbx; pop rbp; ret; 
0x00000000157410: xor r8d, r8d; mov eax, r8d; ret; 
0x00000000046cb8: xor r8d, r8d; mov rax, r8; pop rbx; pop rbp; ret; 
0x00000000046cad: xor r8d, r8d; mov rax, r8; ret; 
0x000000000caa0f: xor r8d, r8d; mov rcx, [rsp+0x20]; mov rdi, rbp; mov rsi, [rsp+0x18]; call rbx; 
0x000000001449c8: xor r8d, r8d; mov rcx, r14; mov rdi, r13; call r12; 
0x00000000160351: xor r8d, r8d; mov rdi, r12; call qword ptr [rax+0x1e0]; 
0x000000000bdd76: xor r8d, r8d; mov rdi, r12; lea r9, [rsp+0x30]; call rbx; 
0x000000000bd796: xor r8d, r8d; mov rdi, r12; lea r9, [rsp+0x30]; call rbx; 
0x0000000008a5da: xor r8d, r8d; mov rdi, r13; lea r9, [rsp+0x18]; call rbp; 
0x00000000047d11: xor r8d, r8d; punpcklqdq xmm0, xmm1; mov eax, r8d; movups [rdi], xmm0; ret; 
0x000000000bd356: xor r8d, r8d; push 0x0; lea r9, [rsp+0x18]; call r13; 
0x000000000cafb5: xor r8d, r8d; push 0x1; push 0x0; mov r9, [rsp+0x10]; call r14; 
0x000000001570e0: xor r8d, r8d; test eax, eax; je short 0x0000000000157110; mov eax, r8d; ret; 
0x00000000157130: xor r8d, r8d; test eax, eax; je short 0x0000000000157160; mov eax, r8d; ret; 
0x00000000102845: xor r9d, r9d; add rsp, 0x8; mov eax, r9d; ret; 
0x000000000cf185: xor r9d, r9d; cmp eax, ecx; jne short 0x00000000000cf190; mov eax, r9d; ret; 
0x000000000c6b7f: xor r9d, r9d; mov eax, r9d; ret; 
0x0000000015ff2e: xor r9d, r9d; mov rdi, r12; lea r8, [rsp+0x30]; call qword ptr [rax+0x1e0]; 
0x0000000002f2e2: xor r9d, r9d; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; lea r8, [rsp+0xa0]; call r15; 
0x00000000120553: xor r9d, r9d; xor r8d, r8d; mov eax, 0x2c; syscall; 
0x00000000120333: xor r9d, r9d; xor r8d, r8d; mov eax, 0x2d; syscall; 
0x0000000016034e: xor r9d, r9d; xor r8d, r8d; mov rdi, r12; call qword ptr [rax+0x1e0]; 
0x000000001131fa: xor rax, 0x20; mov [rsi+0x48], rax; ret; 
0x0000000005221e: xor rax, [0x28]; jne 0x00000000000522b5; add rsp, 0x10; pop rbx; ret; 
0x000000000578ea: xor rax, [0x28]; jne 0x0000000000057975; leave; ret; 
0x00000000042bbd: xor rax, [0x28]; jne short 0x0000000000042bcc; add rsp, 0x18; ret; 
0x00000000043044: xor rax, [0x28]; jne short 0x0000000000043074; mov eax, r8d; add rsp, 0x118; ret; 
0x00000000043258: xor rax, [0x28]; jne short 0x00000000000432a4; mov eax, r9d; add rsp, 0x148; ret; 
0x00000000047de5: xor rax, [0x28]; jne short 0x0000000000047df4; add rsp, 0x18; ret; 
0x00000000047e32: xor rax, [0x28]; jne short 0x0000000000047e41; add rsp, 0x18; ret; 
0x0000000008dc00: xor rax, [0x28]; jne short 0x000000000008dc1b; add rsp, 0x48; ret; 
0x00000000099227: xor rax, [0x28]; jne short 0x0000000000099272; add rsp, 0x40; pop rbp; ret; 
0x00000000113ab5: xor rax, [0x28]; jne short 0x0000000000113ae4; mov eax, r9d; add rsp, 0x38; ret; 
0x000000001182c0: xor rax, [0x28]; jne short 0x00000000001182d2; add rsp, 0xd8; ret; 
0x00000000118399: xor rax, [0x28]; jne short 0x00000000001183ab; add rsp, 0xd8; ret; 
0x0000000011bd55: xor rax, [0x28]; jne short 0x000000000011bd67; add rsp, 0xd8; ret; 
0x0000000011be15: xor rax, [0x28]; jne short 0x000000000011be27; add rsp, 0xd8; ret; 
0x0000000011bff3: xor rax, [0x28]; jne short 0x000000000011c005; add rsp, 0x418; ret; 
0x0000000011c25c: xor rax, [0x28]; jne short 0x000000000011c26e; add rsp, 0xd8; ret; 
0x0000000011c4c9: xor rax, [0x28]; jne short 0x000000000011c4db; add rsp, 0xd8; ret; 
0x00000000129b77: xor rax, [0x28]; jne short 0x0000000000129b89; add rsp, 0xd8; ret; 
0x0000000012b8a0: xor rax, [0x28]; jne short 0x000000000012b8b2; add rsp, 0xd8; ret; 
0x000000001448d5: xor rax, [0x28]; jne short 0x00000000001448e6; add rsp, 0x10; pop r12; ret; 
0x00000000146243: xor rax, [0x28]; jne short 0x0000000000146253; add rsp, 0x40; pop rbp; ret; 
0x0000000015163b: xor rax, [0x28]; jne short 0x0000000000151661; add rsp, 0x10; pop rbx; ret; 
0x00000000153973: xor rax, [0x28]; jne short 0x0000000000153982; add rsp, 0x78; ret; 
0x000000001539e3: xor rax, [0x28]; jne short 0x00000000001539f2; add rsp, 0x78; ret; 
0x00000000153a53: xor rax, [0x28]; jne short 0x0000000000153a62; add rsp, 0x78; ret; 
0x00000000153ab4: xor rax, [0x28]; jne short 0x0000000000153ac3; add rsp, 0x78; ret; 
0x00000000153b18: xor rax, [0x28]; jne short 0x0000000000153b27; add rsp, 0x78; ret; 
0x00000000153b83: xor rax, [0x28]; jne short 0x0000000000153b92; add rsp, 0x78; ret; 
0x00000000153c06: xor rax, [0x28]; jne short 0x0000000000153c15; add rsp, 0x78; ret; 
0x0000000015413b: xor rax, [0x28]; jne short 0x0000000000154168; add rsp, 0x28; ret; 
0x00000000155bae: xor rax, [0x28]; jne short 0x0000000000155bbd; add rsp, 0x48; ret; 
0x000000000240e2: xor rax, [0x30]; call rax; 
0x00000000024421: xor rax, [0x30]; jmp rax; 
0x000000000472dd: xor rax, [0x30]; mov fs:[rbx], rdx; mov rdi, [rbp+0x8]; call rax; 
0x0000000013cc9d: xor rax, [0x30]; mov qword ptr [rsp], 0x0; call rax; 
0x000000000dd424: xor rax, [0x30]; pop r13; pop r14; jmp rax; 
0x00000000023a43: xor rax, [0x30]; rol rax, 0x11; mov [rip+0x1cd8d2], rax; ret; 
0x00000000082a50: xor rax, [0x30]; test rax, rax; je short 0x0000000000082a66; mov rdi, [rdi+0xe0]; jmp rax; 
0x00000000082b30: xor rax, [0x30]; test rax, rax; je short 0x0000000000082b50; mov rdi, [rdi+0xe0]; jmp rax; 
0x0000000005221d: xor rax, fs:[0x28]; jne 0x00000000000522b5; add rsp, 0x10; pop rbx; ret; 
0x000000000578e9: xor rax, fs:[0x28]; jne 0x0000000000057975; leave; ret; 
0x00000000042bbc: xor rax, fs:[0x28]; jne short 0x0000000000042bcc; add rsp, 0x18; ret; 
0x00000000043043: xor rax, fs:[0x28]; jne short 0x0000000000043074; mov eax, r8d; add rsp, 0x118; ret; 
0x00000000043257: xor rax, fs:[0x28]; jne short 0x00000000000432a4; mov eax, r9d; add rsp, 0x148; ret; 
0x00000000047de4: xor rax, fs:[0x28]; jne short 0x0000000000047df4; add rsp, 0x18; ret; 
0x00000000047e31: xor rax, fs:[0x28]; jne short 0x0000000000047e41; add rsp, 0x18; ret; 
0x0000000008dbff: xor rax, fs:[0x28]; jne short 0x000000000008dc1b; add rsp, 0x48; ret; 
0x00000000099226: xor rax, fs:[0x28]; jne short 0x0000000000099272; add rsp, 0x40; pop rbp; ret; 
0x00000000113ab4: xor rax, fs:[0x28]; jne short 0x0000000000113ae4; mov eax, r9d; add rsp, 0x38; ret; 
0x000000001182bf: xor rax, fs:[0x28]; jne short 0x00000000001182d2; add rsp, 0xd8; ret; 
0x00000000118398: xor rax, fs:[0x28]; jne short 0x00000000001183ab; add rsp, 0xd8; ret; 
0x0000000011bd54: xor rax, fs:[0x28]; jne short 0x000000000011bd67; add rsp, 0xd8; ret; 
0x0000000011be14: xor rax, fs:[0x28]; jne short 0x000000000011be27; add rsp, 0xd8; ret; 
0x0000000011bff2: xor rax, fs:[0x28]; jne short 0x000000000011c005; add rsp, 0x418; ret; 
0x0000000011c25b: xor rax, fs:[0x28]; jne short 0x000000000011c26e; add rsp, 0xd8; ret; 
0x0000000011c4c8: xor rax, fs:[0x28]; jne short 0x000000000011c4db; add rsp, 0xd8; ret; 
0x00000000129b76: xor rax, fs:[0x28]; jne short 0x0000000000129b89; add rsp, 0xd8; ret; 
0x0000000012b89f: xor rax, fs:[0x28]; jne short 0x000000000012b8b2; add rsp, 0xd8; ret; 
0x000000001448d4: xor rax, fs:[0x28]; jne short 0x00000000001448e6; add rsp, 0x10; pop r12; ret; 
0x00000000146242: xor rax, fs:[0x28]; jne short 0x0000000000146253; add rsp, 0x40; pop rbp; ret; 
0x0000000015163a: xor rax, fs:[0x28]; jne short 0x0000000000151661; add rsp, 0x10; pop rbx; ret; 
0x00000000153972: xor rax, fs:[0x28]; jne short 0x0000000000153982; add rsp, 0x78; ret; 
0x000000001539e2: xor rax, fs:[0x28]; jne short 0x00000000001539f2; add rsp, 0x78; ret; 
0x00000000153a52: xor rax, fs:[0x28]; jne short 0x0000000000153a62; add rsp, 0x78; ret; 
0x00000000153ab3: xor rax, fs:[0x28]; jne short 0x0000000000153ac3; add rsp, 0x78; ret; 
0x00000000153b17: xor rax, fs:[0x28]; jne short 0x0000000000153b27; add rsp, 0x78; ret; 
0x00000000153b82: xor rax, fs:[0x28]; jne short 0x0000000000153b92; add rsp, 0x78; ret; 
0x00000000153c05: xor rax, fs:[0x28]; jne short 0x0000000000153c15; add rsp, 0x78; ret; 
0x0000000015413a: xor rax, fs:[0x28]; jne short 0x0000000000154168; add rsp, 0x28; ret; 
0x00000000155bad: xor rax, fs:[0x28]; jne short 0x0000000000155bbd; add rsp, 0x48; ret; 
0x000000000240e1: xor rax, fs:[0x30]; call rax; 
0x00000000024420: xor rax, fs:[0x30]; jmp rax; 
0x000000000472dc: xor rax, fs:[0x30]; mov fs:[rbx], rdx; mov rdi, [rbp+0x8]; call rax; 
0x0000000013cc9c: xor rax, fs:[0x30]; mov qword ptr [rsp], 0x0; call rax; 
0x000000000dd423: xor rax, fs:[0x30]; pop r13; pop r14; jmp rax; 
0x00000000023a42: xor rax, fs:[0x30]; rol rax, 0x11; mov [rip+0x1cd8d2], rax; ret; 
0x00000000082a4f: xor rax, fs:[0x30]; test rax, rax; je short 0x0000000000082a66; mov rdi, [rdi+0xe0]; jmp rax; 
0x00000000082b2f: xor rax, fs:[0x30]; test rax, rax; je short 0x0000000000082b50; mov rdi, [rdi+0xe0]; jmp rax; 
0x000000000b1d89: xor rax, rax; ret; 
0x0000000014a51b: xor rax, rdx; mov [rdi], r8; mov [rdi+0x8], rax; ret; 
0x00000000040fe5: xor rax, rdx; movzx edx, byte ptr [rcx]; test dl, dl; jne short 0x0000000000040fc8; ret; 
0x00000000047339: xor rax, rdx; sub rax, rdx; ret; 
0x000000000ca0db: xor rbx, [0x28]; jne short 0x00000000000ca104; add rsp, 0x20; pop rbx; ret; 
0x000000000e368e: xor rbx, [0x28]; jne short 0x00000000000e36d9; mov rbx, [rbp-0x8]; leave; ret; 
0x000000000e385e: xor rbx, [0x28]; jne short 0x00000000000e38a9; mov rbx, [rbp-0x8]; leave; ret; 
0x0000000014958c: xor rbx, [0x28]; jne short 0x00000000001495c2; add rsp, 0x10; pop rbx; ret; 
0x0000000014962a: xor rbx, [0x28]; jne short 0x0000000000149665; add rsp, 0x10; pop rbx; ret; 
0x0000000014a23d: xor rbx, [0x28]; jne short 0x000000000014a257; add rsp, 0x40; pop rbx; ret; 
0x000000000ca0da: xor rbx, fs:[0x28]; jne short 0x00000000000ca104; add rsp, 0x20; pop rbx; ret; 
0x000000000e368d: xor rbx, fs:[0x28]; jne short 0x00000000000e36d9; mov rbx, [rbp-0x8]; leave; ret; 
0x000000000e385d: xor rbx, fs:[0x28]; jne short 0x00000000000e38a9; mov rbx, [rbp-0x8]; leave; ret; 
0x0000000014958b: xor rbx, fs:[0x28]; jne short 0x00000000001495c2; add rsp, 0x10; pop rbx; ret; 
0x00000000149629: xor rbx, fs:[0x28]; jne short 0x0000000000149665; add rsp, 0x10; pop rbx; ret; 
0x0000000014a23c: xor rbx, fs:[0x28]; jne short 0x000000000014a257; add rsp, 0x40; pop rbx; ret; 
0x00000000043350: xor rcx, [0x28]; jne 0x00000000000433f6; add rsp, 0x98; ret; 
0x0000000009d627: xor rcx, [0x28]; jne 0x000000000009d6e2; add rsp, 0x18; ret; 
0x0000000010def8: xor rcx, [0x28]; jne 0x000000000010dfb9; add rsp, 0x78; ret; 
0x0000000010e4ee: xor rcx, [0x28]; jne 0x000000000010e595; add rsp, 0x68; ret; 
0x0000000010e62f: xor rcx, [0x28]; jne 0x000000000010e6ef; add rsp, 0x30; pop rbx; ret; 
0x0000000010e75f: xor rcx, [0x28]; jne 0x000000000010e81f; add rsp, 0x30; pop rbx; ret; 
0x000000001150b9: xor rcx, [0x28]; jne 0x0000000000115159; add rsp, 0x60; pop rbp; ret; 
0x0000000012d0fc: xor rcx, [0x28]; jne 0x000000000012d1dd; leave; ret; 
0x0000000014e567: xor rcx, [0x28]; jne 0x000000000014e5f3; add rsp, 0x20; pop rbx; ret; 
0x00000000042f17: xor rcx, [0x28]; jne short 0x0000000000042f29; add rsp, 0x148; ret; 
0x000000000435ec: xor rcx, [0x28]; jne short 0x0000000000043605; add rsp, 0x118; ret; 
0x0000000004366f: xor rcx, [0x28]; jne short 0x0000000000043688; add rsp, 0x118; ret; 
0x000000000439be: xor rcx, [0x28]; jne short 0x00000000000439e2; add rsp, 0x40; pop rbx; ret; 
0x00000000043d1a: xor rcx, [0x28]; jne short 0x0000000000043d2c; add rsp, 0x148; ret; 
0x0000000004444a: xor rcx, [0x28]; jne short 0x000000000004445c; add rsp, 0xa8; ret; 
0x0000000004746b: xor rcx, [0x28]; jne short 0x000000000004747a; add rsp, 0x28; ret; 
0x0000000004755b: xor rcx, [0x28]; jne short 0x000000000004756a; add rsp, 0x28; ret; 
0x00000000047e84: xor rcx, [0x28]; jne short 0x0000000000047e93; add rsp, 0x18; ret; 
0x00000000047ed1: xor rcx, [0x28]; jne short 0x0000000000047ee0; add rsp, 0x18; ret; 
0x00000000047f24: xor rcx, [0x28]; jne short 0x0000000000047f33; add rsp, 0x18; ret; 
0x00000000047f71: xor rcx, [0x28]; jne short 0x0000000000047f80; add rsp, 0x18; ret; 
0x00000000052c2d: xor rcx, [0x28]; jne short 0x0000000000052c3f; add rsp, 0xd8; ret; 
0x0000000005b5db: xor rcx, [0x28]; jne short 0x000000000005b600; add rsp, 0x450; pop rbp; ret; 
0x0000000005b89d: xor rcx, [0x28]; jne short 0x000000000005b8c5; add rsp, 0x38; ret; 
0x00000000061ca0: xor rcx, [0x28]; jne short 0x0000000000061cb2; add rsp, 0xd8; ret; 
0x00000000061d75: xor rcx, [0x28]; jne short 0x0000000000061d87; add rsp, 0xd8; ret; 
0x00000000061e2c: xor rcx, [0x28]; jne short 0x0000000000061e3e; add rsp, 0xd8; ret; 
0x00000000061fc0: xor rcx, [0x28]; jne short 0x0000000000061fd2; add rsp, 0xd8; ret; 
0x00000000062080: xor rcx, [0x28]; jne short 0x0000000000062092; add rsp, 0xd8; ret; 
0x0000000006216e: xor rcx, [0x28]; jne short 0x0000000000062180; add rsp, 0xd8; ret; 
0x00000000062245: xor rcx, [0x28]; jne short 0x0000000000062257; add rsp, 0xd8; ret; 
0x00000000063198: xor rcx, [0x28]; jne short 0x00000000000631aa; add rsp, 0xd8; ret; 
0x00000000063273: xor rcx, [0x28]; jne short 0x0000000000063285; add rsp, 0xd8; ret; 
0x000000000864f0: xor rcx, [0x28]; jne short 0x0000000000086502; add rsp, 0xd8; ret; 
0x000000000865ac: xor rcx, [0x28]; jne short 0x00000000000865be; add rsp, 0xd8; ret; 
0x000000000866a5: xor rcx, [0x28]; jne short 0x00000000000866b7; add rsp, 0xd8; ret; 
0x00000000086775: xor rcx, [0x28]; jne short 0x0000000000086787; add rsp, 0xd8; ret; 
0x0000000008682e: xor rcx, [0x28]; jne short 0x0000000000086840; add rsp, 0xd8; ret; 
0x000000000cabb8: xor rcx, [0x28]; jne short 0x00000000000cabca; add rsp, 0xd8; ret; 
0x000000000cac93: xor rcx, [0x28]; jne short 0x00000000000caca5; add rsp, 0xd8; ret; 
0x000000000ddd11: xor rcx, [0x28]; jne short 0x00000000000ddd24; add rsp, 0xe0; pop rbx; ret; 
0x000000000df437: xor rcx, [0x28]; jne short 0x00000000000df493; add rsp, 0x38; ret; 
0x000000000e41b7: xor rcx, [0x28]; jne short 0x00000000000e4213; add rsp, 0x38; ret; 
0x000000000e4257: xor rcx, [0x28]; jne short 0x00000000000e42b3; add rsp, 0x38; ret; 
0x000000000e4527: xor rcx, [0x28]; jne short 0x00000000000e4593; add rsp, 0x38; ret; 
0x000000000e45d7: xor rcx, [0x28]; jne short 0x00000000000e4643; add rsp, 0x38; ret; 
0x0000000010d358: xor rcx, [0x28]; jne short 0x000000000010d368; add rsp, 0x10; pop rbp; ret; 
0x0000000010d468: xor rcx, [0x28]; jne short 0x000000000010d477; add rsp, 0x18; ret; 
0x0000000010f32d: xor rcx, [0x28]; jne short 0x000000000010f380; add rsp, 0x130; pop rbp; ret; 
0x00000000112a7d: xor rcx, [0x28]; jne short 0x0000000000112b06; add rsp, 0x40; pop r12; ret; 
0x000000001133f3: xor rcx, [0x28]; jne short 0x0000000000113443; add rsp, 0x68; ret; 
0x00000000113482: xor rcx, [0x28]; jne short 0x00000000001134d3; add rsp, 0x18; ret; 
0x0000000011353a: xor rcx, [0x28]; jne short 0x000000000011358b; add rsp, 0x58; ret; 
0x000000001135d8: xor rcx, [0x28]; jne short 0x000000000011362b; add rsp, 0x58; ret; 
0x00000000113b25: xor rcx, [0x28]; jne short 0x0000000000113b3b; add rsp, 0x18; ret; 
0x000000001149b7: xor rcx, [0x28]; jne short 0x0000000000114a1b; add rsp, 0x38; ret; 
0x00000000114a57: xor rcx, [0x28]; jne short 0x0000000000114abb; add rsp, 0x38; ret; 
0x00000000114b0c: xor rcx, [0x28]; jne short 0x0000000000114b8b; add rsp, 0x38; ret; 
0x00000000114bdc: xor rcx, [0x28]; jne short 0x0000000000114c5b; add rsp, 0x38; ret; 
0x0000000011581c: xor rcx, [0x28]; jne short 0x0000000000115837; add rsp, 0x58; ret; 
0x0000000011596c: xor rcx, [0x28]; jne short 0x00000000001159ad; add rsp, 0x68; ret; 
0x00000000116b90: xor rcx, [0x28]; jne short 0x0000000000116bd5; add rsp, 0x38; ret; 
0x00000000116c5f: xor rcx, [0x28]; jne short 0x0000000000116ca5; add rsp, 0x38; ret; 
0x000000001196e1: xor rcx, [0x28]; jne short 0x00000000001196f0; add rsp, 0x18; ret; 
0x0000000011f0e1: xor rcx, [0x28]; jne short 0x000000000011f103; add rsp, 0x68; ret; 
0x00000000120ae6: xor rcx, [0x28]; jne short 0x0000000000120af5; add rsp, 0x18; ret; 
0x00000000120ea5: xor rcx, [0x28]; jne short 0x0000000000120ebf; add rsp, 0xa0; pop rbx; ret; 
0x0000000012112b: xor rcx, [0x28]; jne short 0x000000000012117b; add rsp, 0x58; ret; 
0x0000000012de81: xor rcx, [0x28]; jne short 0x000000000012de98; add rsp, 0xd8; ret; 
0x0000000012e159: xor rcx, [0x28]; jne short 0x000000000012e16b; add rsp, 0xd8; ret; 
0x0000000012f179: xor rcx, [0x28]; jne short 0x000000000012f18b; add rsp, 0xd8; ret; 
0x0000000012f6e9: xor rcx, [0x28]; jne short 0x000000000012f6fb; add rsp, 0xd8; ret; 
0x0000000012f7c9: xor rcx, [0x28]; jne short 0x000000000012f7db; add rsp, 0xd8; ret; 
0x0000000012f8a9: xor rcx, [0x28]; jne short 0x000000000012f8bb; add rsp, 0xd8; ret; 
0x00000000136694: xor rcx, [0x28]; jne short 0x00000000001366a3; add rsp, 0x38; ret; 
0x00000000136701: xor rcx, [0x28]; jne short 0x0000000000136710; add rsp, 0x28; ret; 
0x0000000013c71a: xor rcx, [0x28]; jne short 0x000000000013c730; add rsp, 0x18; ret; 
0x0000000013e151: xor rcx, [0x28]; jne short 0x000000000013e175; add rsp, 0x20; pop rbx; ret; 
0x0000000013e1a6: xor rcx, [0x28]; jne short 0x000000000013e1b5; add rsp, 0x18; ret; 
0x0000000013e1f9: xor rcx, [0x28]; jne short 0x000000000013e208; add rsp, 0x28; ret; 
0x00000000149019: xor rcx, [0x28]; jne short 0x0000000000149063; add rsp, 0x10; pop rbx; ret; 
0x0000000015198d: xor rcx, [0x28]; jne short 0x0000000000151a0a; add rsp, 0x10; pop r12; ret; 
0x00000000151c04: xor rcx, [0x28]; jne short 0x0000000000151c7a; add rsp, 0x30; pop rbx; ret; 
0x00000000151d44: xor rcx, [0x28]; jne short 0x0000000000151dba; add rsp, 0x30; pop rbx; ret; 
0x000000001538fd: xor rcx, [0x28]; jne short 0x000000000015390c; add rsp, 0x78; ret; 
0x00000000155c19: xor rcx, [0x28]; jne short 0x0000000000155c63; add rsp, 0x10; pop rbx; ret; 
0x00000000155ca9: xor rcx, [0x28]; jne short 0x0000000000155cf2; add rsp, 0x10; pop rbx; ret; 
0x00000000155d79: xor rcx, [0x28]; jne short 0x0000000000155dc5; add rsp, 0x10; pop rbp; ret; 
0x000000001561c9: xor rcx, [0x28]; jne short 0x0000000000156214; add rsp, 0x10; pop rbx; ret; 
0x00000000156259: xor rcx, [0x28]; jne short 0x00000000001562a3; add rsp, 0x10; pop rbx; ret; 
0x00000000156429: xor rcx, [0x28]; jne short 0x0000000000156479; add rsp, 0x10; pop rbx; ret; 
0x000000001564b9: xor rcx, [0x28]; jne short 0x0000000000156503; add rsp, 0x10; pop rbx; ret; 
0x000000001571a9: xor rcx, [0x28]; jne short 0x00000000001571f5; add rsp, 0x10; pop rbx; ret; 
0x00000000157239: xor rcx, [0x28]; jne short 0x0000000000157285; add rsp, 0x10; pop rbx; ret; 
0x000000001572c9: xor rcx, [0x28]; jne short 0x0000000000157315; add rsp, 0x10; pop rbx; ret; 
0x00000000157359: xor rcx, [0x28]; jne short 0x00000000001573a5; add rsp, 0x10; pop rbx; ret; 
0x0000000015ccd1: xor rcx, [0x28]; jne short 0x000000000015cd0c; add rsp, 0x10; pop rbp; ret; 
0x0000000015cd61: xor rcx, [0x28]; jne short 0x000000000015cd9c; add rsp, 0x10; pop rbp; ret; 
0x0000000015f92c: xor rcx, [0x28]; jne short 0x000000000015f96e; add rsp, 0x58; ret; 
0x0000000015fa23: xor rcx, [0x28]; jne short 0x000000000015fa74; add rsp, 0x68; ret; 
0x0000000015fbbc: xor rcx, [0x28]; jne short 0x000000000015fc14; add rsp, 0x68; ret; 
0x0000000015fc85: xor rcx, [0x28]; jne short 0x000000000015fccc; add rsp, 0x38; ret; 
0x0000000004788a: xor rcx, [0x28]; movsxd rax, [rsp+0x4]; jne short 0x00000000000478ea; add rsp, 0x18; ret; 
0x0000000004334f: xor rcx, fs:[0x28]; jne 0x00000000000433f6; add rsp, 0x98; ret; 
0x0000000009d626: xor rcx, fs:[0x28]; jne 0x000000000009d6e2; add rsp, 0x18; ret; 
0x0000000010def7: xor rcx, fs:[0x28]; jne 0x000000000010dfb9; add rsp, 0x78; ret; 
0x0000000010e4ed: xor rcx, fs:[0x28]; jne 0x000000000010e595; add rsp, 0x68; ret; 
0x0000000010e62e: xor rcx, fs:[0x28]; jne 0x000000000010e6ef; add rsp, 0x30; pop rbx; ret; 
0x0000000010e75e: xor rcx, fs:[0x28]; jne 0x000000000010e81f; add rsp, 0x30; pop rbx; ret; 
0x000000001150b8: xor rcx, fs:[0x28]; jne 0x0000000000115159; add rsp, 0x60; pop rbp; ret; 
0x0000000012d0fb: xor rcx, fs:[0x28]; jne 0x000000000012d1dd; leave; ret; 
0x0000000014e566: xor rcx, fs:[0x28]; jne 0x000000000014e5f3; add rsp, 0x20; pop rbx; ret; 
0x00000000042f16: xor rcx, fs:[0x28]; jne short 0x0000000000042f29; add rsp, 0x148; ret; 
0x000000000435eb: xor rcx, fs:[0x28]; jne short 0x0000000000043605; add rsp, 0x118; ret; 
0x0000000004366e: xor rcx, fs:[0x28]; jne short 0x0000000000043688; add rsp, 0x118; ret; 
0x000000000439bd: xor rcx, fs:[0x28]; jne short 0x00000000000439e2; add rsp, 0x40; pop rbx; ret; 
0x00000000043d19: xor rcx, fs:[0x28]; jne short 0x0000000000043d2c; add rsp, 0x148; ret; 
0x00000000044449: xor rcx, fs:[0x28]; jne short 0x000000000004445c; add rsp, 0xa8; ret; 
0x0000000004746a: xor rcx, fs:[0x28]; jne short 0x000000000004747a; add rsp, 0x28; ret; 
0x0000000004755a: xor rcx, fs:[0x28]; jne short 0x000000000004756a; add rsp, 0x28; ret; 
0x00000000047e83: xor rcx, fs:[0x28]; jne short 0x0000000000047e93; add rsp, 0x18; ret; 
0x00000000047ed0: xor rcx, fs:[0x28]; jne short 0x0000000000047ee0; add rsp, 0x18; ret; 
0x00000000047f23: xor rcx, fs:[0x28]; jne short 0x0000000000047f33; add rsp, 0x18; ret; 
0x00000000047f70: xor rcx, fs:[0x28]; jne short 0x0000000000047f80; add rsp, 0x18; ret; 
0x00000000052c2c: xor rcx, fs:[0x28]; jne short 0x0000000000052c3f; add rsp, 0xd8; ret; 
0x0000000005b5da: xor rcx, fs:[0x28]; jne short 0x000000000005b600; add rsp, 0x450; pop rbp; ret; 
0x0000000005b89c: xor rcx, fs:[0x28]; jne short 0x000000000005b8c5; add rsp, 0x38; ret; 
0x00000000061c9f: xor rcx, fs:[0x28]; jne short 0x0000000000061cb2; add rsp, 0xd8; ret; 
0x00000000061d74: xor rcx, fs:[0x28]; jne short 0x0000000000061d87; add rsp, 0xd8; ret; 
0x00000000061e2b: xor rcx, fs:[0x28]; jne short 0x0000000000061e3e; add rsp, 0xd8; ret; 
0x00000000061fbf: xor rcx, fs:[0x28]; jne short 0x0000000000061fd2; add rsp, 0xd8; ret; 
0x0000000006207f: xor rcx, fs:[0x28]; jne short 0x0000000000062092; add rsp, 0xd8; ret; 
0x0000000006216d: xor rcx, fs:[0x28]; jne short 0x0000000000062180; add rsp, 0xd8; ret; 
0x00000000062244: xor rcx, fs:[0x28]; jne short 0x0000000000062257; add rsp, 0xd8; ret; 
0x00000000063197: xor rcx, fs:[0x28]; jne short 0x00000000000631aa; add rsp, 0xd8; ret; 
0x00000000063272: xor rcx, fs:[0x28]; jne short 0x0000000000063285; add rsp, 0xd8; ret; 
0x000000000864ef: xor rcx, fs:[0x28]; jne short 0x0000000000086502; add rsp, 0xd8; ret; 
0x000000000865ab: xor rcx, fs:[0x28]; jne short 0x00000000000865be; add rsp, 0xd8; ret; 
0x000000000866a4: xor rcx, fs:[0x28]; jne short 0x00000000000866b7; add rsp, 0xd8; ret; 
0x00000000086774: xor rcx, fs:[0x28]; jne short 0x0000000000086787; add rsp, 0xd8; ret; 
0x0000000008682d: xor rcx, fs:[0x28]; jne short 0x0000000000086840; add rsp, 0xd8; ret; 
0x000000000cabb7: xor rcx, fs:[0x28]; jne short 0x00000000000cabca; add rsp, 0xd8; ret; 
0x000000000cac92: xor rcx, fs:[0x28]; jne short 0x00000000000caca5; add rsp, 0xd8; ret; 
0x000000000ddd10: xor rcx, fs:[0x28]; jne short 0x00000000000ddd24; add rsp, 0xe0; pop rbx; ret; 
0x000000000df436: xor rcx, fs:[0x28]; jne short 0x00000000000df493; add rsp, 0x38; ret; 
0x000000000e41b6: xor rcx, fs:[0x28]; jne short 0x00000000000e4213; add rsp, 0x38; ret; 
0x000000000e4256: xor rcx, fs:[0x28]; jne short 0x00000000000e42b3; add rsp, 0x38; ret; 
0x000000000e4526: xor rcx, fs:[0x28]; jne short 0x00000000000e4593; add rsp, 0x38; ret; 
0x000000000e45d6: xor rcx, fs:[0x28]; jne short 0x00000000000e4643; add rsp, 0x38; ret; 
0x0000000010d357: xor rcx, fs:[0x28]; jne short 0x000000000010d368; add rsp, 0x10; pop rbp; ret; 
0x0000000010d467: xor rcx, fs:[0x28]; jne short 0x000000000010d477; add rsp, 0x18; ret; 
0x0000000010f32c: xor rcx, fs:[0x28]; jne short 0x000000000010f380; add rsp, 0x130; pop rbp; ret; 
0x00000000112a7c: xor rcx, fs:[0x28]; jne short 0x0000000000112b06; add rsp, 0x40; pop r12; ret; 
0x000000001133f2: xor rcx, fs:[0x28]; jne short 0x0000000000113443; add rsp, 0x68; ret; 
0x00000000113481: xor rcx, fs:[0x28]; jne short 0x00000000001134d3; add rsp, 0x18; ret; 
0x00000000113539: xor rcx, fs:[0x28]; jne short 0x000000000011358b; add rsp, 0x58; ret; 
0x000000001135d7: xor rcx, fs:[0x28]; jne short 0x000000000011362b; add rsp, 0x58; ret; 
0x00000000113b24: xor rcx, fs:[0x28]; jne short 0x0000000000113b3b; add rsp, 0x18; ret; 
0x000000001149b6: xor rcx, fs:[0x28]; jne short 0x0000000000114a1b; add rsp, 0x38; ret; 
0x00000000114a56: xor rcx, fs:[0x28]; jne short 0x0000000000114abb; add rsp, 0x38; ret; 
0x00000000114b0b: xor rcx, fs:[0x28]; jne short 0x0000000000114b8b; add rsp, 0x38; ret; 
0x00000000114bdb: xor rcx, fs:[0x28]; jne short 0x0000000000114c5b; add rsp, 0x38; ret; 
0x0000000011581a: xor rcx, fs:[0x28]; jne short 0x0000000000115837; add rsp, 0x58; ret; 
0x0000000011596b: xor rcx, fs:[0x28]; jne short 0x00000000001159ad; add rsp, 0x68; ret; 
0x00000000116b8f: xor rcx, fs:[0x28]; jne short 0x0000000000116bd5; add rsp, 0x38; ret; 
0x00000000116c5e: xor rcx, fs:[0x28]; jne short 0x0000000000116ca5; add rsp, 0x38; ret; 
0x000000001196e0: xor rcx, fs:[0x28]; jne short 0x00000000001196f0; add rsp, 0x18; ret; 
0x0000000011f0e0: xor rcx, fs:[0x28]; jne short 0x000000000011f103; add rsp, 0x68; ret; 
0x00000000120ae5: xor rcx, fs:[0x28]; jne short 0x0000000000120af5; add rsp, 0x18; ret; 
0x00000000120ea4: xor rcx, fs:[0x28]; jne short 0x0000000000120ebf; add rsp, 0xa0; pop rbx; ret; 
0x0000000012112a: xor rcx, fs:[0x28]; jne short 0x000000000012117b; add rsp, 0x58; ret; 
0x0000000012de80: xor rcx, fs:[0x28]; jne short 0x000000000012de98; add rsp, 0xd8; ret; 
0x0000000012e158: xor rcx, fs:[0x28]; jne short 0x000000000012e16b; add rsp, 0xd8; ret; 
0x0000000012f178: xor rcx, fs:[0x28]; jne short 0x000000000012f18b; add rsp, 0xd8; ret; 
0x0000000012f6e8: xor rcx, fs:[0x28]; jne short 0x000000000012f6fb; add rsp, 0xd8; ret; 
0x0000000012f7c8: xor rcx, fs:[0x28]; jne short 0x000000000012f7db; add rsp, 0xd8; ret; 
0x0000000012f8a8: xor rcx, fs:[0x28]; jne short 0x000000000012f8bb; add rsp, 0xd8; ret; 
0x00000000136693: xor rcx, fs:[0x28]; jne short 0x00000000001366a3; add rsp, 0x38; ret; 
0x00000000136700: xor rcx, fs:[0x28]; jne short 0x0000000000136710; add rsp, 0x28; ret; 
0x0000000013c719: xor rcx, fs:[0x28]; jne short 0x000000000013c730; add rsp, 0x18; ret; 
0x0000000013e150: xor rcx, fs:[0x28]; jne short 0x000000000013e175; add rsp, 0x20; pop rbx; ret; 
0x0000000013e1a5: xor rcx, fs:[0x28]; jne short 0x000000000013e1b5; add rsp, 0x18; ret; 
0x0000000013e1f8: xor rcx, fs:[0x28]; jne short 0x000000000013e208; add rsp, 0x28; ret; 
0x00000000149018: xor rcx, fs:[0x28]; jne short 0x0000000000149063; add rsp, 0x10; pop rbx; ret; 
0x0000000015198c: xor rcx, fs:[0x28]; jne short 0x0000000000151a0a; add rsp, 0x10; pop r12; ret; 
0x00000000151c03: xor rcx, fs:[0x28]; jne short 0x0000000000151c7a; add rsp, 0x30; pop rbx; ret; 
0x00000000151d43: xor rcx, fs:[0x28]; jne short 0x0000000000151dba; add rsp, 0x30; pop rbx; ret; 
0x000000001538fc: xor rcx, fs:[0x28]; jne short 0x000000000015390c; add rsp, 0x78; ret; 
0x00000000155c18: xor rcx, fs:[0x28]; jne short 0x0000000000155c63; add rsp, 0x10; pop rbx; ret; 
0x00000000155ca8: xor rcx, fs:[0x28]; jne short 0x0000000000155cf2; add rsp, 0x10; pop rbx; ret; 
0x00000000155d78: xor rcx, fs:[0x28]; jne short 0x0000000000155dc5; add rsp, 0x10; pop rbp; ret; 
0x000000001561c8: xor rcx, fs:[0x28]; jne short 0x0000000000156214; add rsp, 0x10; pop rbx; ret; 
0x00000000156258: xor rcx, fs:[0x28]; jne short 0x00000000001562a3; add rsp, 0x10; pop rbx; ret; 
0x00000000156428: xor rcx, fs:[0x28]; jne short 0x0000000000156479; add rsp, 0x10; pop rbx; ret; 
0x000000001564b8: xor rcx, fs:[0x28]; jne short 0x0000000000156503; add rsp, 0x10; pop rbx; ret; 
0x000000001571a8: xor rcx, fs:[0x28]; jne short 0x00000000001571f5; add rsp, 0x10; pop rbx; ret; 
0x00000000157238: xor rcx, fs:[0x28]; jne short 0x0000000000157285; add rsp, 0x10; pop rbx; ret; 
0x000000001572c8: xor rcx, fs:[0x28]; jne short 0x0000000000157315; add rsp, 0x10; pop rbx; ret; 
0x00000000157358: xor rcx, fs:[0x28]; jne short 0x00000000001573a5; add rsp, 0x10; pop rbx; ret; 
0x0000000015ccd0: xor rcx, fs:[0x28]; jne short 0x000000000015cd0c; add rsp, 0x10; pop rbp; ret; 
0x0000000015cd60: xor rcx, fs:[0x28]; jne short 0x000000000015cd9c; add rsp, 0x10; pop rbp; ret; 
0x0000000015f92a: xor rcx, fs:[0x28]; jne short 0x000000000015f96e; add rsp, 0x58; ret; 
0x0000000015fa22: xor rcx, fs:[0x28]; jne short 0x000000000015fa74; add rsp, 0x68; ret; 
0x0000000015fbbb: xor rcx, fs:[0x28]; jne short 0x000000000015fc14; add rsp, 0x68; ret; 
0x0000000015fc84: xor rcx, fs:[0x28]; jne short 0x000000000015fccc; add rsp, 0x38; ret; 
0x00000000047889: xor rcx, fs:[0x28]; movsxd rax, [rsp+0x4]; jne short 0x00000000000478ea; add rsp, 0x18; ret; 
0x000000000d021b: xor rdi, [0x28]; jne short 0x00000000000d0239; add rsp, 0x28; ret; 
0x000000001029c9: xor rdi, [0x28]; jne short 0x0000000000102a26; add rsp, 0x38; ret; 
0x00000000143750: xor rdi, [0x30]; call rax; 
0x000000000d021a: xor rdi, fs:[0x28]; jne short 0x00000000000d0239; add rsp, 0x28; ret; 
0x000000001029c8: xor rdi, fs:[0x28]; jne short 0x0000000000102a26; add rsp, 0x38; ret; 
0x0000000014374f: xor rdi, fs:[0x30]; call rax; 
0x00000000054177: xor rdx, [0x28]; jne short 0x0000000000054189; add rsp, 0xd8; ret; 
0x00000000061efe: xor rdx, [0x28]; jne short 0x0000000000061f10; add rsp, 0xd8; ret; 
0x0000000006286b: xor rdx, [0x28]; jne short 0x000000000006287e; add rsp, 0x1010; pop rbp; ret; 
0x00000000062e0f: xor rdx, [0x28]; jne short 0x0000000000062e27; add rsp, 0x18; ret; 
0x000000000d0295: xor rdx, [0x28]; jne short 0x00000000000d02a5; add rsp, 0x40; pop rbp; ret; 
0x000000000d1061: xor rdx, [0x28]; jne short 0x00000000000d1094; add rsp, 0x28; ret; 
0x000000000da6e4: xor rdx, [0x28]; jne short 0x00000000000da6f3; add rsp, 0x18; ret; 
0x000000000dcfb4: xor rdx, [0x28]; jne short 0x00000000000dcfc3; add rsp, 0x18; ret; 
0x000000000ddc7d: xor rdx, [0x28]; jne short 0x00000000000ddc90; add rsp, 0xe0; pop rbx; ret; 
0x0000000010d1a3: xor rdx, [0x28]; jne short 0x000000000010d1c1; add rsp, 0x28; ret; 
0x0000000010d4ba: xor rdx, [0x28]; jne short 0x000000000010d4c9; add rsp, 0x18; ret; 
0x0000000010fbbb: xor rdx, [0x28]; jne short 0x000000000010fbcd; movzx eax, al; add rsp, 0x58; ret; 
0x00000000114cd6: xor rdx, [0x28]; jne short 0x0000000000114ce5; add rsp, 0x28; ret; 
0x00000000115895: xor rdx, [0x28]; jne short 0x00000000001158a4; add rsp, 0x28; ret; 
0x0000000012df77: xor rdx, [0x28]; jne short 0x000000000012df95; add rsp, 0xd8; ret; 
0x0000000012e091: xor rdx, [0x28]; jne short 0x000000000012e0a3; add rsp, 0xd8; ret; 
0x0000000012ef97: xor rdx, [0x28]; jne short 0x000000000012efb5; add rsp, 0xd8; ret; 
0x0000000012f0b1: xor rdx, [0x28]; jne short 0x000000000012f0c3; add rsp, 0xd8; ret; 
0x000000001365f7: xor rdx, [0x28]; jne short 0x0000000000136629; add rsp, 0x38; ret; 
0x0000000013ea88: xor rdx, [0x28]; jne short 0x000000000013ea97; add rsp, 0x18; ret; 
0x00000000157a31: xor rdx, [0x28]; jne short 0x0000000000157a44; add rsp, 0x90; pop rbx; ret; 
0x00000000157aa5: xor rdx, [0x28]; jne short 0x0000000000157ab7; movzx eax, al; add rsp, 0x18; ret; 
0x00000000157b06: xor rdx, [0x28]; jne short 0x0000000000157b18; movzx eax, al; add rsp, 0x18; ret; 
0x00000000157b72: xor rdx, [0x28]; jne short 0x0000000000157b82; add rsp, 0x10; pop rbx; ret; 
0x00000000157be5: xor rdx, [0x28]; jne short 0x0000000000157bf5; add rsp, 0x10; pop rbx; ret; 
0x0000000015c9da: xor rdx, [0x28]; jne short 0x000000000015ca14; add rsp, 0x18; ret; 
0x00000000160d18: xor rdx, [0x28]; jne short 0x0000000000160d27; add rsp, 0x28; ret; 
0x000000001632a3: xor rdx, [0x28]; jne short 0x00000000001632b3; add rsp, 0x10; pop rbx; ret; 
0x00000000163329: xor rdx, [0x28]; jne short 0x0000000000163339; add rsp, 0x10; pop rbx; ret; 
0x000000000468cd: xor rdx, [0x30]; call rdx; 
0x00000000054176: xor rdx, fs:[0x28]; jne short 0x0000000000054189; add rsp, 0xd8; ret; 
0x00000000061efd: xor rdx, fs:[0x28]; jne short 0x0000000000061f10; add rsp, 0xd8; ret; 
0x0000000006286a: xor rdx, fs:[0x28]; jne short 0x000000000006287e; add rsp, 0x1010; pop rbp; ret; 
0x00000000062e0e: xor rdx, fs:[0x28]; jne short 0x0000000000062e27; add rsp, 0x18; ret; 
0x000000000d0294: xor rdx, fs:[0x28]; jne short 0x00000000000d02a5; add rsp, 0x40; pop rbp; ret; 
0x000000000d1060: xor rdx, fs:[0x28]; jne short 0x00000000000d1094; add rsp, 0x28; ret; 
0x000000000da6e3: xor rdx, fs:[0x28]; jne short 0x00000000000da6f3; add rsp, 0x18; ret; 
0x000000000dcfb3: xor rdx, fs:[0x28]; jne short 0x00000000000dcfc3; add rsp, 0x18; ret; 
0x000000000ddc7c: xor rdx, fs:[0x28]; jne short 0x00000000000ddc90; add rsp, 0xe0; pop rbx; ret; 
0x0000000010d1a2: xor rdx, fs:[0x28]; jne short 0x000000000010d1c1; add rsp, 0x28; ret; 
0x0000000010d4b9: xor rdx, fs:[0x28]; jne short 0x000000000010d4c9; add rsp, 0x18; ret; 
0x0000000010fbb9: xor rdx, fs:[0x28]; jne short 0x000000000010fbcd; movzx eax, al; add rsp, 0x58; ret; 
0x00000000114cd5: xor rdx, fs:[0x28]; jne short 0x0000000000114ce5; add rsp, 0x28; ret; 
0x00000000115894: xor rdx, fs:[0x28]; jne short 0x00000000001158a4; add rsp, 0x28; ret; 
0x0000000012df76: xor rdx, fs:[0x28]; jne short 0x000000000012df95; add rsp, 0xd8; ret; 
0x0000000012e090: xor rdx, fs:[0x28]; jne short 0x000000000012e0a3; add rsp, 0xd8; ret; 
0x0000000012ef96: xor rdx, fs:[0x28]; jne short 0x000000000012efb5; add rsp, 0xd8; ret; 
0x0000000012f0b0: xor rdx, fs:[0x28]; jne short 0x000000000012f0c3; add rsp, 0xd8; ret; 
0x000000001365f6: xor rdx, fs:[0x28]; jne short 0x0000000000136629; add rsp, 0x38; ret; 
0x0000000013ea87: xor rdx, fs:[0x28]; jne short 0x000000000013ea97; add rsp, 0x18; ret; 
0x00000000157a30: xor rdx, fs:[0x28]; jne short 0x0000000000157a44; add rsp, 0x90; pop rbx; ret; 
0x00000000157aa4: xor rdx, fs:[0x28]; jne short 0x0000000000157ab7; movzx eax, al; add rsp, 0x18; ret; 
0x00000000157b05: xor rdx, fs:[0x28]; jne short 0x0000000000157b18; movzx eax, al; add rsp, 0x18; ret; 
0x00000000157b71: xor rdx, fs:[0x28]; jne short 0x0000000000157b82; add rsp, 0x10; pop rbx; ret; 
0x00000000157be4: xor rdx, fs:[0x28]; jne short 0x0000000000157bf5; add rsp, 0x10; pop rbx; ret; 
0x0000000015c9d9: xor rdx, fs:[0x28]; jne short 0x000000000015ca14; add rsp, 0x18; ret; 
0x00000000160d17: xor rdx, fs:[0x28]; jne short 0x0000000000160d27; add rsp, 0x28; ret; 
0x000000001632a2: xor rdx, fs:[0x28]; jne short 0x00000000001632b3; add rsp, 0x10; pop rbx; ret; 
0x00000000163328: xor rdx, fs:[0x28]; jne short 0x0000000000163339; add rsp, 0x10; pop rbx; ret; 
0x000000000468cc: xor rdx, fs:[0x30]; call rdx; 
0x0000000004377a: xor rsi, [0x28]; jne short 0x000000000004378c; add rsp, 0x98; ret; 
0x0000000012f5c0: xor rsi, [0x28]; jne short 0x000000000012f5d5; add rsp, 0x28; ret; 
0x0000000012f620: xor rsi, [0x28]; jne short 0x000000000012f635; add rsp, 0x28; ret; 
0x00000000043779: xor rsi, fs:[0x28]; jne short 0x000000000004378c; add rsp, 0x98; ret; 
0x0000000012f5bf: xor rsi, fs:[0x28]; jne short 0x000000000012f5d5; add rsp, 0x28; ret; 
0x0000000012f61f: xor rsi, fs:[0x28]; jne short 0x000000000012f635; add rsp, 0x28; ret; 
0x00000000090099: xor si, si; mov edx, 0x2; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x0000000016d10b: xrelease mov [rdi-0x8], rcx; ret; 
0x00000000167fee: xrelease mov [rdi-0x8], rdx; ret; 

CONFIG [ search: ROP-JOP-SYS (default), x_match: none, max_len: 5, syntax: Intel, regex_filter: none ]
RESULT [ unique_gadgets: 42930, search_time: 639.356915ms, print_time: 2.827556545s ]
