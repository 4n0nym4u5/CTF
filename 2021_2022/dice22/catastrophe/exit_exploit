void exit (int status)
{
  __run_exit_handlers (status, &__exit_funcs, true, true);
}

void __run_exit_handlers (int status, struct exit_function_list **listp,
         bool run_list_atexit, bool run_dtors)
{
  /* First, call the TLS destructors.  */
#ifndef SHARED
  if (&__call_tls_dtors != NULL)
#endif
    if (run_dtors)
      __call_tls_dtors ();

  /* We do it this way to handle recursive calls to exit () made by
     the functions registered with `atexit' and `on_exit'. We call
     everyone on the list and use the status value in the last
     exit (). */


enum
{
  ef_free,  /* `ef_free' MUST be zero!  */
  ef_us,
  ef_on,
  ef_at,
  ef_cxa
};

      case ef_at:
        atfct = f->func.at;
#ifdef PTR_DEMANGLE
        PTR_DEMANGLE (atfct);
#endif
        atfct ();
        break;
