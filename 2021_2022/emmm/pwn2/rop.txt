


Gadgets
=======


0x080a7bcb: aaa; aam 3; add byte ptr [ebx - 0x39], dl; ret; 
0x080887f2: aaa; je 0x40800; pop ebx; pop esi; pop edi; ret; 
0x0805081f: aaa; push dword ptr [esp + 0x4c]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x080507e1: aaa; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x08081205: aaa; std; call dword ptr [eax + 0x68]; 
0x08080656: aaa; std; call dword ptr [eax - 0x73]; 
0x0805dc08: aaa; sub dword ptr [edi + 0x1818], 1; pop ebx; pop esi; pop edi; ret; 
0x0807aa05: aaa; sub ebp, edi; call dword ptr [eax - 0x18]; 
0x08077fc8: aaa; sub esp, 4; push edi; push 0; push ebx; call esi; 
0x08078e63: aad 0x20; std; call dword ptr [eax - 0x18]; 
0x080577e0: aad 0x89; ret 0x28e9; 
0x08057965: aad 0x89; ret 0xa3e9; 
0x08057939: aad 0x89; ret 0xcfe9; 
0x08060b94: aad 0x89; ret 0xeac1; 
0x0807f0c7: aad 0xbf; cld; dec dword ptr [ebx - 0x72cfdba4]; add eax, 0x38; std; call dword ptr [eax - 0x73]; 
0x080af2ec: aad 0xf; xchg eax, ebp; ret 0xd789; 
0x08083096: aad 0xf; xchg eax, edi; ret; 
0x0805d2fa: aad 0xf; xchg eax, esp; ret 0xea09; 
0x080a93bf: aam 0x56; call dword ptr [eax]; 
0x0809bd31: aam 0x5c; push cs; or bh, bh; jne 0x53d50; call dword ptr [eax]; 
0x0807c2e2: aam 0x5e; push cs; or bh, al; ret 0x59a4; 
0x08058e04: aam 0x62; push cs; or bh, al; ret 0x5f80; 
0x0805b5d5: aam 0x62; push cs; or bh, al; ret; 
0x0805bdea: aam 0x62; push cs; or byte ptr [ecx + 0x244489d7], cl; adc al, 0x89; ret 0xc729; 
0x080a4646: aam 0x7d; ret 0x658d; 
0x0805b5fe: aam 0x83; in al, dx; or byte ptr [edx - 1], ch; push dword ptr [eax]; call dword ptr [ebx + 0xc]; 
0x08078e5d: aam 0x89; inc ebp; fmul dword ptr [ebp - 0x2df2a7d]; call dword ptr [eax - 0x18]; 
0x08078d7d: aam 0x89; inc ebp; fmul dword ptr [ebp - 0x2df5f7d]; call dword ptr [eax - 0x18]; 
0x080a1746: aam 0x89; ret 0xf221; 
0x0805ad2b: aam 0x89; ret 0xf889; 
0x0807872c: aam 0x8b; dec eax; or dh, dh; ret 0x7401; 
0x080652f8: aam 0xb9; add dword ptr [eax], 0x1ba0000; add byte ptr [eax], al; add byte ptr [eax + 0xf0], bh; call dword ptr gs:[0x10]; 
0x080a8e1e: aam 0xc7; ret 0x6f48; 
0x0806678e: aam 0xd; std; call dword ptr [eax - 0x77]; 
0x080667be: aam 0xd; std; dec dword ptr [ebp - 0x301e669]; call dword ptr [eax - 0x73]; 
0x080a7bcc: aam 3; add byte ptr [ebx - 0x39], dl; ret; 
0x08098172: aas; add byte ptr [eax], al; jne 0x4fe80; xor eax, eax; pop edi; ret; 
0x08050bdb: aas; clc; cld; call dword ptr [eax - 0x18]; 
0x08098112: aas; jne 0x4fe80; xor eax, eax; pop edi; ret; 
0x080a55b0: aas; std; jmp dword ptr [esi - 0x70]; 
0x0807a27b: aas; sub ch, bh; call dword ptr [eax - 0x18]; 
0x0806678d: adc ah, 0xd; std; call dword ptr [eax - 0x77]; 
0x0806baf2: adc ah, byte ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x6273; 
0x08088a15: adc al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x080a7e95: adc al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; ret; 
0x0807613e: adc al, 0; add byte ptr [eax], al; jne 0x2e16c; add esp, 0x18; pop ebx; ret; 
0x08076fad: adc al, 0; add byte ptr [eax], al; jne 0x2efc7; add esp, 0x18; pop ebx; ret; 
0x08077aef: adc al, 0; add byte ptr [eax], al; jne 0x2fb37; add esp, 0x18; pop ebx; ret; 
0x08077e11: adc al, 0; add byte ptr [eax], al; jne 0x2fe1c; add esp, 0x18; pop ebx; ret; 
0x0808898b: adc al, 0; add byte ptr [eax], al; jne 0x40996; add esp, 0x18; pop ebx; ret; 
0x080a4df0: adc al, 0; add byte ptr [eax], al; jne 0x5ce20; add esp, 0x28; pop ebx; ret; 
0x080a4eba: adc al, 0; add byte ptr [eax], al; jne 0x5cecc; add esp, 0x2c; ret; 
0x080a5069: adc al, 0; add byte ptr [eax], al; jne 0x5d074; add esp, 0x28; pop ebx; ret; 
0x080a517a: adc al, 0; add byte ptr [eax], al; jne 0x5d18c; add esp, 0x2c; ret; 
0x080a5271: adc al, 0; add byte ptr [eax], al; jne 0x5d27b; add esp, 0x2c; ret; 
0x080a79fb: adc al, 0; add byte ptr [eax], al; jne 0x5fa05; add esp, 0x1c; ret; 
0x080a7b0e: adc al, 0; add byte ptr [eax], al; jne 0x5fb18; add esp, 0x2c; ret; 
0x080aba16: adc al, 0; add byte ptr [eax], al; jne 0x63a20; add esp, 0x2c; ret; 
0x080adb31: adc al, 0; add byte ptr [eax], al; jne 0x65b3c; add esp, 0x28; pop ebx; ret; 
0x0809f723: adc al, 0; add byte ptr [ebx + 0x458b0875], cl; adc bh, al; ret 0x4d84; 
0x0809f8cc: adc al, 0; add byte ptr [ebx - 0x8b7b], cl; inc edi; ret; 
0x080908e8: adc al, 0; add byte ptr [ebx - 0x8c37b], cl; inc esi; test dword ptr [ebx], esp; idiv edi; jmp dword ptr [eax]; 
0x08090449: adc al, 0x18; sub esp, 4; push ecx; push esi; push dword ptr [ebp - 0x8a0]; call edx; 
0x080a3dc4: adc al, 0x24; mov ecx, eax; mov eax, dword ptr [esp + 4]; add esp, 0x10; jmp ecx; 
0x0805866b: adc al, 0x24; ret; 
0x080b0888: adc al, 0x50; push dword ptr [esp + 0x10]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x080958ba: adc al, 0x50; push esi; call dword ptr [ebx + 0x48]; 
0x08060e21: adc al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x0805b710: adc al, 0x5b; pop esi; ret; 
0x0805e602: adc al, 0x5e; pop edi; jmp eax; 
0x0807bff7: adc al, 0x6a; add ecx, dword ptr [ebp - 0x1b2067d]; call dword ptr [eax - 1]; 
0x080ab7d7: adc al, 0x73; out 0xb8, al; add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; ret; 
0x0808627b: adc al, 0x83; clc; add esi, dword ptr [edi + ecx - 0x7d]; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x08049e04: adc al, 0x83; in al, dx; or al, 0x8d; sbb dword ptr [eax], -0x10; cld; call dword ptr [eax - 0x18]; 
0x080abd3a: adc al, 0x83; les ebp, ptr [eax]; pop ebx; ret; 
0x08060557: adc al, 0x83; les ebp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x08076fb2: adc al, 0x83; les ebx, ptr [eax]; pop ebx; ret; 
0x0809557f: adc al, 0x83; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x08081550: adc al, 0x83; les edi, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x0809abc0: adc al, 0x83; mov byte ptr [ecx], 0xe9; ret 0xfffe; 
0x080ab570: adc al, 0x83; ret; 
0x0809c4db: adc al, 0x83; rol byte ptr [ecx], 0x39; ret 0xf575; 
0x0808ddc5: adc al, 0x85; ror byte ptr [edi], 0x84; ret 6; 
0x080803cf: adc al, 0x85; sar byte ptr [eax], 0xf; inc ebp; ret 0xea89; 
0x080528ab: adc al, 0x88; sub esp, 4; push ebx; push dword ptr [ebp - 0x884]; push dword ptr [ebp - 0x890]; call edx; 
0x08080201: adc al, 0x89; adc ecx, dword ptr [ebx + 0x391c245c]; sal dword ptr [edi + ecx*4 - 0x7d], cl; ret 0x3904; 
0x080616db: adc al, 0x89; dec eax; adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x08079d1d: adc al, 0x89; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; jmp eax; 
0x08077126: adc al, 0x89; fcomp dword ptr [ebx + 0x5e]; ret; 
0x08049dc0: adc al, 0x89; inc ebp; call 0x8d0d0a4b; or dword ptr [eax], 0xfffffff0; cld; call dword ptr [eax - 0x18]; 
0x08086f00: adc al, 0x89; inc ebp; les ecx, ptr [ebx - 0x194472d0]; sub edi, ebp; jmp dword ptr [ebp - 0x75]; 
0x0806363a: adc al, 0x89; inc esp; and al, 0x10; call ecx; 
0x080759eb: adc al, 0x89; ret 0x4c89; 
0x08082932: adc al, 0x89; ret 0x542b; 
0x0805bdf3: adc al, 0x89; ret 0xc729; 
0x080b271d: adc al, 0x89; ret 0xd889; 
0x080616d8: adc al, 0x8b; inc eax; adc al, 0x89; dec eax; adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x080aafbe: adc al, 0x8b; inc edi; add al, 0x89; ret; 
0x080a8dae: adc al, 0x8b; mov byte ptr [ecx + eax], dh; add byte ptr [ebp - 0x7c208a37], al; in al, dx; add al, 0x83; ret; 
0x08099875: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x08079236: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0xa3; call dword ptr gs:[0x10]; 
0x08077be9: adc al, 0x8b; pop esp; and al, 0x10; mov edx, eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x08079382: adc al, 0x8d; adc dword ptr [eax], 0x21; std; call dword ptr [eax - 0x18]; 
0x0809ec6d: adc al, 0x8d; add dword ptr [eax + 0x40], -2; call dword ptr [eax - 0x73]; 
0x08086506: adc al, 0x8d; and dword ptr [eax + 0x12], 0xfffffffa; call dword ptr [eax - 1]; 
0x080ab363: adc al, 0x8d; cmp dword ptr [eax - 0x67], -2; call dword ptr [eax - 0x73]; 
0x080795c2: adc al, 0x8d; cmp dword ptr [ecx], 0x21; std; call dword ptr [eax - 0x18]; 
0x08051132: adc al, 0x8d; je 0x915c; add byte ptr [eax + 0x3901c083], dl; ret; 
0x08079c9e: adc al, 0x8d; sbb eax, 0x23; std; call dword ptr [eax + 0x6a]; 
0x0809e578: adc al, 0x8d; xchg byte ptr [edi - 0x720001c3], bl; xchg eax, esi; test eax, 0xffffe3d; inc esp; ret 0x3980; 
0x08064eb7: adc al, 0x8d; xchg byte ptr [esi + ecx - 3], dl; dec dword ptr [ebp - 0x301e66a]; call dword ptr [eax - 0x73]; 
0x08076311: adc al, 0x8d; xchg dword ptr [eax - 0x760006f0], edx; inc ecx; adc bh, al; ret 0; 
0x08064989: adc al, 0x8d; xchg dword ptr [esi + ecx - 0x68720003], esi; sbb esi, edi; cld; call dword ptr [eax - 0x73]; 
0x0804fd2b: adc al, 0x8d; xor esp, 0xfffffff7; cld; call dword ptr [eax + 0x55]; 
0x0804988f: adc al, 0xb8; ret 0; 
0x0809e80e: adc al, 0xc7; ret 0; 
0x0809e5b4: adc al, 0xc7; ret 0x4d84; 
0x080a4d65: adc al, 0xc7; ret 0x688c; 
0x080791da: adc al, 0xe8; mov al, byte ptr [0x81fffd0a]; ret; 
0x08077b6c: adc al, 0xf6; ret 0x7540; 
0x0808d1b4: adc al, 0xf6; ret 0xf01; 
0x080ab343: adc al, 0xf7; fmul dword ptr [ebp - 0x166996d]; call dword ptr [edx - 0x73]; 
0x080a80e1: adc al, 0xfd; jmp dword ptr [esi - 0x70]; 
0x080aba50: adc al, 0xff; je 0x63a78; sbb byte ptr [ebp - 0x395cf80], cl; call dword ptr [eax - 0x18]; 
0x08075b90: adc al, 1; add byte ptr [eax], al; add byte ptr [ebp + 0x187493], cl; add byte ptr [edi], cl; inc esp; ret 0x4489; 
0x080550b8: adc al, ah; mov eax, dword ptr [ecx + eax*4]; jmp eax; 
0x08055b6a: adc al, ah; mov eax, dword ptr [edi + eax*4 - 0x17a0]; jmp eax; 
0x08054d78: adc al, ah; mov eax, dword ptr [edi + eax*4 - 0x1820]; jmp eax; 
0x08055aca: adc al, ah; mov eax, dword ptr [edi + eax*4 - 0x18a0]; jmp eax; 
0x080609a3: adc al, bh; and byte ptr [eax + 0x1000004], 0; add byte ptr [eax], al; mov dword ptr [eax + 0x480], edx; ret; 
0x08060953: adc al, bh; and byte ptr [eax + 0x1000004], 0; add byte ptr [eax], al; mov dword ptr [eax + 0x484], edx; ret; 
0x08060923: adc al, bh; and byte ptr [eax + 0x1000004], 0; add byte ptr [eax], al; mov dword ptr [eax + 0x498], edx; ret; 
0x08066785: adc al, byte ptr [eax]; add byte ptr [ebx - 0x72d3dbac], cl; adc ah, 0xd; std; call dword ptr [eax - 0x77]; 
0x08064983: adc al, byte ptr [eax]; add byte ptr [ebx - 0x72ebdb84], cl; xchg dword ptr [esi + ecx - 0x68720003], esi; sbb esi, edi; cld; call dword ptr [eax - 0x73]; 
0x08064ed5: adc al, byte ptr [eax]; add byte ptr [ebx - 0x72ebdb8c], cl; xchg byte ptr [esi + ecx - 3], dl; dec dword ptr [ebp - 0x301e66a]; call dword ptr [eax - 0x73]; 
0x08090503: adc al, byte ptr [eax]; add byte ptr [ebx - 0x89b43], al; call dword ptr [ebx + 0xf]; 
0x08054f9c: adc al, byte ptr [eax]; add byte ptr [ecx], al; ret; 
0x0804a84f: adc al, byte ptr [ebp + 0xd850fd2]; add dword ptr [eax], eax; add byte ptr [ebx - 0x38f3db8c], cl; ret 0x6f84; 
0x08098b45: adc al, byte ptr [ebx + 0x4827c]; lea ecx, [eax + 1]; jne 0x50b28; mov eax, ecx; ret; 
0x08077b9d: adc al, byte ptr [ebx + 0x5e5b04c4]; ret; 
0x080638b4: adc al, byte ptr [ecx + 0xbfffffd]; add byte ptr [ecx + 0xf6c244c], cl; inc edi; ret 0x548b; 
0x080700aa: adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x0807020a: adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x0806fa8a: adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x0806fbea: adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x080700ca: adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x0807022a: adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x0806faaa: adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x0806fc0a: adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x080700ea: adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x0807024a: adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x0806faca: adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x0806fc2a: adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x0806ff79: adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x0807026a: adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x0806f979: adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x0806fc4a: adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x0806f572: adc al, byte ptr [ecx]; mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x0806dd02: adc al, byte ptr [ecx]; mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x0806f5b2: adc al, byte ptr [ecx]; mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x0806dd42: adc al, byte ptr [ecx]; mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x0806f5d2: adc al, byte ptr [ecx]; mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x0806dd62: adc al, byte ptr [ecx]; mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x0806f322: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; pop edi; ret; 
0x0806f562: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; ret; 
0x0806dad2: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x0806dcf2: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x08070202: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x0806fbe2: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x08070222: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x0806fc02: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x08070242: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x0806fc22: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x08070262: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x0806fc42: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x0806f5f2: adc al, byte ptr [ecx]; movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x0806dd82: adc al, byte ptr [ecx]; movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x0806f612: adc al, byte ptr [ecx]; movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x0806dda2: adc al, byte ptr [ecx]; movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x0806f632: adc al, byte ptr [ecx]; movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x0806ddc2: adc al, byte ptr [ecx]; movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x08071545: adc al, dh; ret; 
0x0808fd40: adc bh, al; add ah, byte ptr [0xf000000]; mov dh, 0x56; or al, 0xf6; ret 0xf08; 
0x0809483c: adc bh, al; add ah, byte ptr [eax]; add byte ptr [eax], al; add cl, ch; ret 0xffe8; 
0x0805e7c7: adc bh, al; rcl ah, 0x62; push cs; or bh, al; ret 0x5f80; 
0x0807631a: adc bh, al; ret 0; 
0x0809f72b: adc bh, al; ret 0x4d84; 
0x0805c38b: adc bh, al; ret; 
0x080898b3: adc bh, al; xor dword ptr [edx + ebx], 0; add byte ptr [eax], al; add byte ptr [eax], al; add bl, ch; ret 0xf631; 
0x08059662: adc bh, bh; je 0x1168a; adc byte ptr [ebx + 0x5724247c], cl; call dword ptr [ebx + 0x40]; 
0x08058372: adc bh, bh; jmp dword ptr [esi - 0x70]; 
0x0808650a: adc bh, dl; call dword ptr [eax - 1]; 
0x080864b6: adc bh, dl; call dword ptr [esi + 0x31]; 
0x0805fab5: adc bl, ch; ret; 
0x0804bb01: adc bl, dh; cld; call dword ptr [eax - 0x18]; 
0x0808249b: adc byte ptr [0xe9000000], al; ret; 
0x08099879: adc byte ptr [eax + 0x127], bh; call dword ptr gs:[0x10]; 
0x08077b85: adc byte ptr [eax + 0x127], bh; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x0804a483: adc byte ptr [eax + 0x180], bh; mov ebx, 0x3001; lea ecx, [esp + 0x40]; int 0x80; 
0x080999ac: adc byte ptr [eax + 0x1a], 0; add byte ptr [ecx], bh; ret; 
0x08099805: adc byte ptr [eax + 0x27b880ce], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x64], bh; call dword ptr gs:[0x10]; 
0x0807923a: adc byte ptr [eax + 0xa3], bh; call dword ptr gs:[0x10]; 
0x08096979: adc byte ptr [eax + 1], bh; add esp, 8; pop ebx; ret; 
0x08095ba5: adc byte ptr [eax + 1], bh; pop ebx; pop esi; pop edi; ret; 
0x080abbf1: adc byte ptr [eax - 0x73], dl; adc dword ptr [eax + 0x6b], -4; call dword ptr [eax - 0x18]; 
0x080a897e: adc byte ptr [eax - 0x73], dl; xor dword ptr [eax + 0x3c], 0xfffffffc; call dword ptr [eax - 0x73]; 
0x08075432: adc byte ptr [eax - 0x80], al; stc; add byte ptr [ecx + eax + 0x40], dh; sub eax, dword ptr [esp + 4]; ret; 
0x08071575: adc byte ptr [eax], ah; ret; 
0x08055580: adc byte ptr [eax], al; add byte ptr [eax - 0x47f43], al; call dword ptr [ebx + 0xf]; 
0x08077b0e: adc byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x08076fe5: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x2eff8; pop ebx; ret; 
0x08077015: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x2f028; pop ebx; ret; 
0x08077a91: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x2faa0; pop ebx; ret; 
0x08077c49: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x2fc60; pop ebx; ret; 
0x08077c89: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x2fca0; pop ebx; ret; 
0x08077cc5: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x2fcd8; pop ebx; ret; 
0x08099665: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x51678; pop ebx; ret; 
0x080a7e73: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x5fe80; pop ebx; ret; 
0x08076f5c: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff001; jae 0x34310; ret; 
0x08088a10: adc byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x14; call dword ptr gs:[0x10]; 
0x08076a06: adc byte ptr [eax], al; add byte ptr [eax], al; mov eax, 1; int 0x80; 
0x08088a1c: adc byte ptr [eax], al; add byte ptr [eax], al; mov ebx, eax; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x08077f36: adc byte ptr [eax], al; add byte ptr [eax], al; mov ebx, edx; cmp eax, 0xfffff001; jae 0x34310; ret; 
0x08088a2a: adc byte ptr [eax], al; add byte ptr [eax], al; mov ecx, eax; mov edx, dword ptr [esp + 0x130]; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x08077f69: adc byte ptr [eax], al; add byte ptr [eax], al; pop ebx; cmp eax, 0xfffff001; jae 0x34310; ret; 
0x08064be5: adc byte ptr [eax], al; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x08071c1b: adc byte ptr [eax], al; add byte ptr [eax], al; pop edi; ret; 
0x080995dc: adc byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x080932b4: adc byte ptr [eax], al; add byte ptr [ebx - 0x48f7b], cl; inc dword ptr [ebp + 0x5b850fc0]; adc dword ptr [eax], eax; add byte ptr [ebx - 0x46f43], al; call dword ptr [ebx + 0xf]; 
0x0805cdc3: adc byte ptr [eax], al; add byte ptr [ecx + 0xc25386e], cl; adc byte ptr [eax], al; add byte ptr [ecx - 0x100c1e], al; dec dword ptr [ecx]; ret 0x1689; 
0x0805cdcb: adc byte ptr [eax], al; add byte ptr [ecx - 0x100c1e], al; dec dword ptr [ecx]; ret 0x1689; 
0x0804a1ce: adc byte ptr [eax], al; add dh, dh; ret 0x7402; 
0x08089c23: adc byte ptr [eax], bh; dec esp; adc eax, 0x83167500; ret 0x3901; 
0x08071565: adc byte ptr [eax], dl; ret; 
0x080b2a8c: adc byte ptr [ebp + 0x5bcf75ff], al; pop esi; pop edi; ret; 
0x0809fb1a: adc byte ptr [ebp + 0x5e5bf465], cl; pop edi; pop ebp; ret; 
0x08050e7d: adc byte ptr [ebp + 0x61850ff6], al; add eax, dword ptr [eax]; add byte ptr [ebx - 0x76d7dba4], cl; ret 0xdaf7; 
0x0804b829: adc byte ptr [ebp - 0x107bf040], al; add dword ptr [eax], eax; add byte ptr [ebp - 0x137cf7b0], cl; or byte ptr [ebp - 0x30cd77d], cl; call dword ptr [eax + 0x52]; 
0x080aa892: adc byte ptr [ebp - 0x168687d], cl; call dword ptr [eax + 0x6a]; 
0x080a8a1a: adc byte ptr [ebp - 0x16af77d], cl; call dword ptr [eax + 0x6a]; 
0x080a77c2: adc byte ptr [ebp - 0x16d367d], cl; call dword ptr [eax - 1]; 
0x08078b52: adc byte ptr [ebp - 0x18], dl; xlatb; ret; 
0x080a3f1e: adc byte ptr [ebp - 0x1b3937d], cl; call dword ptr [eax + 0x6a]; 
0x080a3abd: adc byte ptr [ebp - 0x1b3ed62], cl; jmp dword ptr [ebp - 1]; 
0x080a329e: adc byte ptr [ebp - 0x1b5bb7d], cl; call dword ptr [eax + 0x6a]; 
0x0809c784: adc byte ptr [ebp - 0x1c47b7d], cl; call dword ptr [eax + 0x6a]; 
0x0807aa2d: adc byte ptr [ebp - 0x2d6b87d], cl; call dword ptr [eax - 0x18]; 
0x0807aa02: adc byte ptr [ebp - 0x2d6c87d], cl; call dword ptr [eax - 0x18]; 
0x0807a9da: adc byte ptr [ebp - 0x2d6d47d], cl; call dword ptr [eax - 0x18]; 
0x08064443: adc byte ptr [ebp - 0x2f1577a], cl; dec dword ptr [ebp - 0x301e66a]; call dword ptr [eax - 0x73]; 
0x08062f70: adc byte ptr [ebp - 0x2f16f79], cl; dec dword ptr [ebp - 0x301e669]; call dword ptr [eax - 0x73]; 
0x08062eb7: adc byte ptr [ebp - 0x2f17b79], cl; dec dword ptr [ebp - 0x3019569]; call dword ptr [eax - 0x73]; 
0x080b2e82: adc byte ptr [ebp - 0x321cf7d], cl; call dword ptr [eax - 1]; 
0x0807c07d: adc byte ptr [ebp - 0x38608a40], al; ret 0x6f40; 
0x0807c00a: adc byte ptr [ebp - 0x38de8a40], al; ret 0x6f40; 
0x0807c045: adc byte ptr [ebp - 0x38e18a40], al; ret 0x6f40; 
0x080a3d43: adc byte ptr [ebp - 0x38e78a40], al; ret 0x59a0; 
0x080793cb: adc byte ptr [ebp - 0x537bf040], al; add dword ptr [eax], eax; add byte ptr [ecx - 0x76ff743a], cl; ret 0xce80; 
0x0804a457: adc byte ptr [ebp - 0x6901f7d], cl; call dword ptr [eax - 0x73]; 
0x080a96da: adc byte ptr [ebp - 0x6f9969e4], cl; call dword ptr [ebx]; 
0x0807194d: adc byte ptr [ebp - 0x74f18a2e], al; inc esp; and al, 0xc; pop edi; ret; 
0x08065ba1: adc byte ptr [ebp - 0x7c158a40], al; ret; 
0x080b2d0c: adc byte ptr [ebp - 0x7c1c8a0a], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0807eb75: adc byte ptr [ebp - 0x7cd98b40], al; mov byte ptr [ecx], 0x83; dec byte ptr [esi*2 - 0x377c7222]; xor edi, ebp; call dword ptr [eax - 0x73]; 
0x08086604: adc byte ptr [ebp - 0x7ce08b40], al; in al, dx; or byte ptr [ebp - 0x1df8b7d], cl; call dword ptr [eax + 0x56]; 
0x080b31c2: adc byte ptr [ebp - 0x7cf28b2e], al; in al, dx; or al, 0x50; call edx; 
0x080b2128: adc byte ptr [ebp - 0x7cf48a2e], al; les ecx, ptr [eax]; pop ebx; ret; 
0x08087b7a: adc byte ptr [ebp - 0x7cf68b40], al; in al, dx; or al, 0x56; call eax; 
0x0809f49c: adc byte ptr [ebp - 0x7cf98a40], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x08075aef: adc byte ptr [ebx + 0x1b7402f8], al; xor eax, eax; ret; 
0x0808de8d: adc byte ptr [ebx + 0x3924245c], cl; ret; 
0x080597f6: adc byte ptr [ebx + 0x43891c43], cl; or al, 1; ret 0xc101; 
0x080597c7: adc byte ptr [ebx + 0x525004ec], al; push dword ptr [esp + 0x24]; call ecx; 
0x08059666: adc byte ptr [ebx + 0x5724247c], cl; call dword ptr [ebx + 0x40]; 
0x080713b2: adc byte ptr [ebx + 0x58ebf0e2], al; lea esi, [esi]; nop; xor eax, eax; ret; 
0x08059d35: adc byte ptr [ebx + 0x5e5b04c4], al; jmp eax; 
0x08060b4a: adc byte ptr [ebx + 0x5e5b04c4], al; pop edi; pop ebp; ret; 
0x0804f38a: adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0805d77d: adc byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x080b0d8d: adc byte ptr [ebx + 0x5e5b10c4], al; mov eax, edx; pop edi; ret; 
0x08065af4: adc byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x080748ce: adc byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x08065d95: adc byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x0805f602: adc byte ptr [ebx + 0x5e5b4cc4], al; pop edi; pop ebp; ret; 
0x0807ad31: adc byte ptr [ebx + 0x5e5b5cc4], al; pop edi; pop ebp; ret; 
0x0808224c: adc byte ptr [ebx + 0x5e5b7cc4], al; pop edi; pop ebp; ret; 
0x080b0d90: adc byte ptr [ebx + 0x5e], bl; mov eax, edx; pop edi; ret; 
0x08086ec3: adc byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0805d657: adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x080a5269: adc byte ptr [ebx + 0x651c244c], cl; xor ecx, dword ptr [0x14]; jne 0x5d27b; add esp, 0x2c; ret; 
0x080a7b06: adc byte ptr [ebx + 0x651c244c], cl; xor ecx, dword ptr [0x14]; jne 0x5fb18; add esp, 0x2c; ret; 
0x080aba0e: adc byte ptr [ebx + 0x651c244c], cl; xor ecx, dword ptr [0x14]; jne 0x63a20; add esp, 0x2c; ret; 
0x080a8a51: adc byte ptr [ebx + 0x6a5008ec], al; add al, ch; ret; 
0x0805c234: adc byte ptr [ebx + 0x949e], cl; add bh, al; ret 0x5f80; 
0x080668e8: adc byte ptr [ebx + eax*4], al; ljmp 0x450f:0x1e08304; ret 0xc483; 
0x0804a7d8: adc byte ptr [ebx - 0x38f3dbbc], cl; ret 0x6f40; 
0x0805f03f: adc byte ptr [ebx - 0x3a8a0008], al; add esp, 4; pop ebx; pop esi; ret; 
0x08059d32: adc byte ptr [ebx - 0x3b7cefc0], cl; add al, 0x5b; pop esi; jmp eax; 
0x08087b77: adc byte ptr [ebx - 0x3f7aefba], cl; je 0x3fb88; sub esp, 0xc; push esi; call eax; 
0x08056e7e: adc byte ptr [ebx - 0x49f6b], cl; inc dword ptr [ebx - 0x7af00008]; ret; 
0x080ac4ad: adc byte ptr [ebx - 0x49f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x080abc58: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x08077f58: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x08077f88: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x0805e5fe: adc byte ptr [ebx - 0x75], bl; inc edi; adc al, 0x5e; pop edi; jmp eax; 
0x0805caa7: adc byte ptr [ebx - 0x75], bl; inc edi; adc byte ptr [esi + 0x5f], bl; jmp eax; 
0x0805bc8c: adc byte ptr [ebx - 0x75], bl; inc esi; adc byte ptr [esi + 0x5f], bl; jmp eax; 
0x0805e42a: adc byte ptr [ebx - 0x75], bl; inc esi; or al, 0x5e; pop edi; jmp eax; 
0x0808259f: adc byte ptr [ebx - 0x76efdbb4], cl; ret; 
0x080af644: adc byte ptr [ebx - 0x76f3db84], cl; ret; 
0x0805ea75: adc byte ptr [ebx - 0x76f7dbb4], cl; ret; 
0x08077039: adc byte ptr [ebx - 0x9dbdbac], cl; ret 0x7540; 
0x080950a2: adc byte ptr [ebx - 1], dl; jo 0x4d0b3; push esi; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x1c]; 
0x080a7f17: adc byte ptr [ebx], bh; and dword ptr [ebx + ebx], 0x8b0b7300; xchg eax, ecx; push 0x6600001b; add dword ptr [edx + eax*2], 1; ret; 
0x08077bed: adc byte ptr [ecx + 0x127b8c2], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x08077167: adc byte ptr [ecx + 0x14c483d8], cl; pop ebx; pop esi; ret; 
0x080a85b9: adc byte ptr [ecx + 0x39c829f8], cl; ret 0x6f72; 
0x08063434: adc byte ptr [ecx + 0x4ac9d], cl; add cl, ch; ret; 
0x0808a468: adc byte ptr [ecx + 0x5bf08903], cl; pop esi; pop edi; ret; 
0x080b0cea: adc byte ptr [ecx + 0x5f5e5bd0], cl; ret; 
0x080a3c4b: adc byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x08058645: adc byte ptr [ecx + 0x5f5e5bf8], cl; ret; 
0x080a23f7: adc byte ptr [ecx + 0x60c483f8], cl; pop ebx; pop esi; pop edi; ret; 
0x0807aa42: adc byte ptr [ecx + 0xfc08501], cl; test bl, dh; add al, byte ptr [eax]; add bh, al; ret 0x4da0; 
0x0807c0dd: adc byte ptr [ecx - 0x3b7cfbbe], cl; add al, 0x5b; pop esi; ret; 
0x08054659: adc byte ptr [ecx - 0x4737b], cl; jmp dword ptr [ebp - 0x5f]; 
0x08088afd: adc byte ptr [ecx - 0x7b7d7439], cl; add byte ptr [eax], al; add bh, al; ret 0x6f68; 
0x0808a3eb: adc byte ptr [ecx - 0xf766efc], cl; pop ebx; pop esi; pop edi; ret; 
0x08079385: adc byte ptr [ecx], ah; std; call dword ptr [eax - 0x18]; 
0x08070756: adc byte ptr [ecx], al; clc; pop edi; ret; 
0x08060df4: adc byte ptr [ecx], al; pop eax; add al, 0x89; ret; 
0x08059016: adc byte ptr [ecx], al; ret 0x562b; 
0x08054c98: adc byte ptr [ecx], bh; ret 0x2075; 
0x080648db: adc byte ptr [ecx], bh; ret 0x3973; 
0x080528e7: adc byte ptr [ecx], bh; ret 0x820f; 
0x080535d8: adc byte ptr [ecx], bh; ret 0x850f; 
0x08064e68: adc byte ptr [ecx], bh; ret 0x870f; 
0x080a9e32: adc byte ptr [ecx], bh; ret 0xd975; 
0x08053737: adc byte ptr [ecx], bh; ret; 
0x0805f07f: adc byte ptr [ecx], bh; retf 0xf477; add eax, dword ptr [esp + 8]; pop ebx; ret; 
0x08096f2f: adc byte ptr [ecx], bh; sal byte ptr [edi - 0xc], 1; mov eax, dword ptr [esp + 8]; pop ebx; add eax, ecx; ret; 
0x08067c04: adc byte ptr [ecx], cl; ret 0xc985; 
0x08097915: adc byte ptr [ecx], cl; ret; 
0x08097023: adc byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x0807a287: adc byte ptr [ecx], dh; rol byte ptr [ebp + 0x310874c0], cl; rol byte ptr [eax - 0x6af0ffc8], cl; ret 0xc0c7; 
0x080588c4: adc byte ptr [edi + 0x56], dl; call dword ptr [eax + 0x1c]; 
0x08071a1d: adc byte ptr [edi], cl; cmp byte ptr [eax + eax + 0x408d0000], 0xf; pop edi; ret; 
0x0805131d: adc byte ptr [edi], cl; dec edi; ret; 
0x0808d503: adc byte ptr [edi], cl; mov dh, 0x56; or al, 0xf6; ret 0xf01; 
0x08071002: adc byte ptr [edi], cl; mov esp, 0x76c229c0; lea eax, es:[edi + eax + 0x10]; pop edi; ret; 
0x08070bfd: adc byte ptr [edi], cl; or ah, 0; add byte ptr [eax], al; lea eax, [edi + 0xf]; pop edi; ret; 
0x080747e2: adc byte ptr [edi], cl; test byte ptr [edi], dl; add dword ptr [eax], eax; add byte ptr [ebx - 0x76f3dbbc], cl; ret 0xe283; 
0x080addf7: adc byte ptr [edi], cl; test byte ptr [edx], dh; add dword ptr [eax], eax; add byte ptr [ebx + 0x3924245c], cl; ret; 
0x080719a2: adc byte ptr [edi], cl; test dword ptr [edi - 0xa000000], esp; ret 0xf20; 
0x08071882: adc byte ptr [edi], cl; test dword ptr [esi - 0x9fffffd], esi; ret 0xf20; 
0x080703ab: adc byte ptr [edi], cl; test esi, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x0805d2f3: adc byte ptr [edi], cl; xchg eax, esp; ret 0x3a3c; 
0x080b0050: adc byte ptr [edi], cl; xchg eax, esp; ret 0xe2c1; 
0x08058656: adc byte ptr [edx + 1], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x10560; add esp, 0x1c; ret; 
0x0804b8cb: adc byte ptr [edx + edx*8 + 0x452beb75], al; mov ah, 0x83; shl byte ptr [esi], 0x89; ret 0x25; 
0x0805ad4d: adc byte ptr [edx + edx*8 - 0x57ff48c], al; and eax, 0x7880e175; add dword ptr [ebx + 0x75], esi; fild dword ptr [eax - 0x76da2b83]; ret 0x5b74; 
0x0805bc90: adc byte ptr [esi + 0x5f], bl; jmp eax; 
0x0806bb07: adc byte ptr [esi + 0xf], ah; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x5073; 
0x0807082a: adc byte ptr [esi + 0xf], ah; xlatb; ret 0xc085; 
0x08070842: adc byte ptr [esi + 0xf], ah; xlatb; ret; 
0x08070f9d: adc byte ptr [esi + 0xf], ah; xlatb; rol dword ptr [ebp + 0x315a75c0], 0xc0; pop edi; ret; 
0x0805ecbd: adc byte ptr [esi - 0x70], ah; or dword ptr [eax + 0x3c], 0x80; mov eax, dword ptr [eax + 0x34]; test eax, eax; jne 0x16cc0; ret; 
0x08079674: adc byte ptr [esi - 7], al; dec dword ptr [ecx + 0x5e5b0850]; ret; 
0x0805557f: adc byte ptr gs:[eax], al; add byte ptr [eax - 0x47f43], al; call dword ptr [ebx + 0xf]; 
0x0805af4a: adc cl, byte ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x080a646f: adc cl, byte ptr [ebx - 0x7cfb7eac]; ret 0x8901; 
0x080affb8: adc cl, byte ptr [ecx + 0x5e5b4c53]; pop edi; ret; 
0x0806f496: adc cl, byte ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x0806f5f6: adc cl, byte ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x0806dc26: adc cl, byte ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x0806dd86: adc cl, byte ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x0806f616: adc cl, byte ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x0806dda6: adc cl, byte ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x0806f636: adc cl, byte ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x0806ddc6: adc cl, byte ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x0807966e: adc cl, byte ptr [ecx - 0x6e72fbb0]; adc byte ptr [esi - 7], al; dec dword ptr [ecx + 0x5e5b0850]; ret; 
0x080a3ac0: adc cl, byte ptr [esi + edi*8 - 1]; call dword ptr gs:[0x10]; 
0x0807ae27: adc cl, ch; pop edi; idiv edi; dec dword ptr [ebp - 0x2d5877d]; call dword ptr [eax - 0x73]; 
0x080a7563: adc cl, ch; ret; 
0x08049cb4: adc cl, cl; ret; 
0x08049d40: adc dh, al; add eax, 0x80e62e0; add ecx, ecx; ret; 
0x08049927: adc dh, dh; ret; 
0x080ae3ee: adc dword ptr [eax + 0x1c7520f9], eax; mov eax, dword ptr [edx + 0x54]; add esp, 8; pop ebx; ret; 
0x0808709e: adc dword ptr [eax + 0x3a], -3; call dword ptr [eax - 0x18]; 
0x080a7333: adc dword ptr [eax + 0x5000001a], -0x18; ret 0xf58c; 
0x080abbf4: adc dword ptr [eax + 0x6b], -4; call dword ptr [eax - 0x18]; 
0x0804bb00: adc dword ptr [eax], -0xd; cld; call dword ptr [eax - 0x18]; 
0x08079384: adc dword ptr [eax], 0x21; std; call dword ptr [eax - 0x18]; 
0x0805b1bb: adc dword ptr [eax], eax; add bh, al; ret 0x60a0; 
0x08050cab: adc dword ptr [eax], eax; add byte ptr [eax], al; add esp, 0x28; pop ebx; ret; 
0x080a6b63: adc dword ptr [eax], eax; add byte ptr [eax], al; add esp, 4; add eax, ebx; jmp eax; 
0x080932c2: adc dword ptr [eax], eax; add byte ptr [ebx - 0x46f43], al; call dword ptr [ebx + 0xf]; 
0x08064eb1: adc dword ptr [eax], eax; add byte ptr [ebx - 0x72ebdb8c], cl; xchg byte ptr [esi + ecx - 3], dl; dec dword ptr [ebp - 0x301e66a]; call dword ptr [eax - 0x73]; 
0x080904f5: adc dword ptr [eax], eax; add byte ptr [ebx - 0x8bf7b], cl; inc dword ptr [ebp - 0x787af040]; adc al, byte ptr [eax]; add byte ptr [ebx - 0x89b43], al; call dword ptr [ebx + 0xf]; 
0x08099fc7: adc dword ptr [ebp - 0x1cac87d], ecx; call dword ptr [eax + 0x6a]; 
0x08099fe1: adc dword ptr [ebx + 0x35], -2; ljmp [eax - 0x51]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; sbb dword ptr [ebp + 0x35], -2; call dword ptr [eax - 0x18]; 
0x08077efb: adc dword ptr [ebx + 0x5e5b1cc4], eax; pop edi; pop ebp; ret; 
0x08097102: adc dword ptr [ebx + 0x5e], ebx; pop edi; ret; 
0x0806ba9e: adc dword ptr [ebx - 0x48], ebx; add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x23aa9; neg eax; ret; 
0x080668e1: adc dword ptr [ebx - 0x74f3dbbc], ecx; inc esp; adc byte ptr [ebx + eax*4], al; ljmp 0x450f:0x1e08304; ret 0xc483; 
0x080a23ae: adc dword ptr [ebx - 0x7769f3c], eax; pop ebx; pop esi; pop edi; ret; 
0x08052590: adc dword ptr [ebx - 0x7c2776f0], ecx; ret; 
0x0808a5b1: adc dword ptr [ebx - 0x7d9374ee], ecx; or byte ptr [ebp - 0x18], dl; ret 0xfead; 
0x080a2c5d: adc dword ptr [ebx], edi; test dword ptr [eax + 0x75fffffd], ebp; ret 0x9f8b; 
0x080a2bf0: adc dword ptr [ecx - 0x2537b], ecx; dec dword ptr [ecx + 0x1a6c87]; add byte ptr [ebx + 0x1a6887], cl; add byte ptr [ecx], bh; ret 0x273; 
0x0807af46: adc dword ptr [ecx - 0x25f7d], ecx; inc dword ptr [ebx + 0x5e5b04c4]; ret; 
0x0809c250: adc dword ptr [ecx], edi; ret 0x430f; 
0x0807ae1b: adc dword ptr [esi + 2], esi; add byte ptr [ebx + 0x20c86], cl; add byte ptr [ebx + 0x5fe910c4], al; idiv edi; dec dword ptr [ebp - 0x2d5877d]; call dword ptr [eax - 0x73]; 
0x08076fe4: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x2eff8; pop ebx; ret; 
0x08077014: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x2f028; pop ebx; ret; 
0x08077a90: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x2faa0; pop ebx; ret; 
0x08077c48: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x2fc60; pop ebx; ret; 
0x08077c88: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x2fca0; pop ebx; ret; 
0x08077cc4: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x2fcd8; pop ebx; ret; 
0x08099664: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x51678; pop ebx; ret; 
0x080a7e72: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x5fe80; pop ebx; ret; 
0x08076f5b: adc eax, 0x10; cmp eax, 0xfffff001; jae 0x34310; ret; 
0x08088a0f: adc eax, 0x10; mov eax, 0x14; call dword ptr gs:[0x10]; 
0x08076a05: adc eax, 0x10; mov eax, 1; int 0x80; 
0x08088a1b: adc eax, 0x10; mov ebx, eax; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x08077f35: adc eax, 0x10; mov ebx, edx; cmp eax, 0xfffff001; jae 0x34310; ret; 
0x08088a29: adc eax, 0x10; mov ecx, eax; mov edx, dword ptr [esp + 0x130]; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x08077f68: adc eax, 0x10; pop ebx; cmp eax, 0xfffff001; jae 0x34310; ret; 
0x08064be4: adc eax, 0x10; pop ebx; pop esi; pop edi; ret; 
0x080995db: adc eax, 0x10; ret; 
0x08076fac: adc eax, 0x14; jne 0x2efc7; add esp, 0x18; pop ebx; ret; 
0x08077e10: adc eax, 0x14; jne 0x2fe1c; add esp, 0x18; pop ebx; ret; 
0x0807594c: adc eax, 0x15; std; call dword ptr [eax - 0x73]; 
0x080a72c1: adc eax, 0x25; cld; call dword ptr [eax - 0x73]; 
0x08070d7a: adc eax, 0x29c0bc0f; ret 0x860f; 
0x08081273: adc eax, 0x34; std; call dword ptr [eax - 0x18]; 
0x080a3ab7: adc eax, 0x4c8d0004; and al, 0x10; lea ebx, [esi - 0x1b3ee]; call dword ptr gs:[0x10]; 
0x080a8b10: adc eax, 0x4d84c0c7; push cs; or byte ptr [ebp - 0x1c9f967], cl; dec dword ptr [ebx - 0x7aff7500]; ror byte ptr [edi], 0x44; ret; 
0x0804d085: adc eax, 0x81b90000; add byte ptr [eax], al; add byte ptr [edx + 1], bh; call dword ptr gs:[0x10]; 
0x0809ae67: adc eax, 0x81fffaee; ret; 
0x08087b67: adc eax, 0x81fffc21; ret; 
0x08086267: adc eax, 0x81fffc3a; ret; 
0x0807bfed: adc eax, 0x83000690; in al, dx; or byte ptr [ebx + 0x6a142474], cl; add ecx, dword ptr [ebp - 0x1b2067d]; call dword ptr [eax - 1]; 
0x08050ef6: adc eax, 0x83167500; ret 0x3901; 
0x080a1b69: adc eax, 0x8dc45d8b; add dword ptr [edi + 0x48], -2; call dword ptr [eax + 0x6a]; 
0x080a0f16: adc eax, 0xc4830000; and byte ptr [ebx + 0x4503a045], cl; movsb byte ptr es:[edi], byte ptr [esi]; call eax; 
0x0804c1d3: adc eax, 0xe8500000; and al, 0x3e; sti; test dword ptr [ebx + 0x458b10c4], 0x74c0858c; adc eax, edi; ret 0x6ef4; 
0x08054b7f: adc eax, 0xe9830000; add dword ptr [eax - 0x4af43], eax; jmp dword ptr [eax]; 
0x08052b6a: adc eax, 0xec830000; add al, 0x89; lea ebp, [edi + esi*8 - 1]; call dword ptr [esi + 0x52]; 
0x0804bec4: adc eax, 0xf0b80000; add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0804bf6f: adc eax, 0xf0b80000; add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; xor esi, esi; mov edx, 1; call dword ptr gs:[0x10]; 
0x080a1d3f: adc eax, 0xf601e983; rol dword ptr [ecx], 0x75; call 0x83fdf7d7; ret 0x8908; 
0x08092d64: adc eax, dword ptr [eax]; add byte ptr [ecx], al; ret; 
0x0809988c: adc eax, dword ptr [ebx + 0x5e5b04c4]; ret; 
0x08077283: adc eax, dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0807ca22: adc eax, dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x08085919: adc eax, dword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x08060a28: adc eax, dword ptr [ebx - 0x177c0f20]; add ecx, eax; call 0x1c20d39; mov dword ptr [edx + 0x4b0], eax; ret; 
0x080700af: adc eax, dword ptr [edx + 5]; lea eax, [edx + 0xc]; pop edi; ret; 
0x0807020f: adc eax, dword ptr [edx + 5]; lea eax, [edx + 0xc]; ret; 
0x0806fa8f: adc eax, dword ptr [edx + 5]; mov eax, edi; pop edi; ret; 
0x0806fbef: adc eax, dword ptr [edx + 5]; mov eax, edx; ret; 
0x080700cf: adc eax, dword ptr [edx + 6]; lea eax, [edx + 0xd]; pop edi; ret; 
0x0807022f: adc eax, dword ptr [edx + 6]; lea eax, [edx + 0xd]; ret; 
0x0806faaf: adc eax, dword ptr [edx + 6]; mov eax, edi; pop edi; ret; 
0x0806fc0f: adc eax, dword ptr [edx + 6]; mov eax, edx; ret; 
0x080700ef: adc eax, dword ptr [edx + 7]; lea eax, [edx + 0xe]; pop edi; ret; 
0x0807024f: adc eax, dword ptr [edx + 7]; lea eax, [edx + 0xe]; ret; 
0x0806facf: adc eax, dword ptr [edx + 7]; mov eax, edi; pop edi; ret; 
0x0806fc2f: adc eax, dword ptr [edx + 7]; mov eax, edx; ret; 
0x0806ff7e: adc eax, dword ptr [edx + 8]; lea eax, [edx + 0xf]; pop edi; ret; 
0x0807026f: adc eax, dword ptr [edx + 8]; lea eax, [edx + 0xf]; ret; 
0x0806f97e: adc eax, dword ptr [edx + 8]; mov eax, edi; pop edi; ret; 
0x0806fc4f: adc eax, dword ptr [edx + 8]; mov eax, edx; ret; 
0x0806f326: adc eax, dword ptr [edx]; lea eax, [edx + 7]; pop edi; ret; 
0x0806f566: adc eax, dword ptr [edx]; lea eax, [edx + 7]; ret; 
0x0806f439: adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; pop edi; ret; 
0x0806f579: adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x0806dbc9: adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x0806dd09: adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x0806f479: adc eax, dword ptr [edx]; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; pop edi; ret; 
0x0806f5b9: adc eax, dword ptr [edx]; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x0806dc09: adc eax, dword ptr [edx]; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x0806dd49: adc eax, dword ptr [edx]; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x0806f369: adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; pop edi; ret; 
0x0806f5d9: adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x0806db19: adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x0806dd69: adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x0806dad6: adc eax, dword ptr [edx]; mov eax, edi; pop edi; ret; 
0x0806dcf6: adc eax, dword ptr [edx]; mov eax, edx; ret; 
0x0806f45a: adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; pop edi; ret; 
0x0806f59a: adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x0806dbea: adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x0806dd2a: adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x0806f49b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x0806f5fb: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x0806dc2b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x0806dd8b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x0806f4bb: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; pop edi; ret; 
0x0806f61b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x0806dc4b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 6], xmm1; mov eax, edi; pop edi; ret; 
0x0806ddab: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x0806f4db: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; pop edi; ret; 
0x0806f63b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x0806dc6b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 7], xmm1; mov eax, edi; pop edi; ret; 
0x0806ddcb: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x080700a6: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x08070206: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x0806fa86: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x0806fbe6: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x080700c6: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x08070226: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x0806faa6: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x0806fc06: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x080700e6: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x08070246: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x0806fac6: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x0806fc26: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x0806ff75: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x08070266: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x0806f975: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x0806fc46: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x0804c1e5: adc eax, edi; ret 0x6ef4; 
0x08078e62: adc ebp, 0x20; std; call dword ptr [eax - 0x18]; 
0x08080203: adc ecx, dword ptr [ebx + 0x391c245c]; sal dword ptr [edi + ecx*4 - 0x7d], cl; ret 0x3904; 
0x0809aa9d: adc ecx, dword ptr [ebx - 0xb77b]; jmp dword ptr [ebp - 0x75]; 
0x0806f49f: adc ecx, dword ptr [edx + 5]; lea eax, [edx + 0xc]; pop edi; ret; 
0x0806f5ff: adc ecx, dword ptr [edx + 5]; lea eax, [edx + 0xc]; ret; 
0x0806dc2f: adc ecx, dword ptr [edx + 5]; mov eax, edi; pop edi; ret; 
0x0806dd8f: adc ecx, dword ptr [edx + 5]; mov eax, edx; ret; 
0x0806f4bf: adc ecx, dword ptr [edx + 6]; lea eax, [edx + 0xd]; pop edi; ret; 
0x0806f61f: adc ecx, dword ptr [edx + 6]; lea eax, [edx + 0xd]; ret; 
0x0806dc4f: adc ecx, dword ptr [edx + 6]; mov eax, edi; pop edi; ret; 
0x0806ddaf: adc ecx, dword ptr [edx + 6]; mov eax, edx; ret; 
0x0806f4df: adc ecx, dword ptr [edx + 7]; lea eax, [edx + 0xe]; pop edi; ret; 
0x0806f63f: adc ecx, dword ptr [edx + 7]; lea eax, [edx + 0xe]; ret; 
0x0806dc6f: adc ecx, dword ptr [edx + 7]; mov eax, edi; pop edi; ret; 
0x0806ddcf: adc ecx, dword ptr [edx + 7]; mov eax, edx; ret; 
0x08050ef3: adc edi, dword ptr [eax]; dec esp; adc eax, 0x83167500; ret 0x3901; 
0x080674b6: adc edi, edi; inc dword ptr [ecx + 0x7db47c2]; add byte ptr [ebx - 0x39], dl; ret; 
0x08067286: adc edi, edi; inc dword ptr [ecx + 0x7dd77c2]; add byte ptr [ebx - 0x39], dl; ret; 
0x08058239: adc edi, edi; jmp dword ptr [esi - 0x70]; 
0x08065b96: adc edx, dword ptr [eax - 0x18]; ret; 
0x080985b6: add ah, bh; inc dword ptr [ecx + 0x4ca47c2]; add byte ptr [ebx - 0x39], dl; ret; 
0x0808fd42: add ah, byte ptr [0xf000000]; mov dh, 0x56; or al, 0xf6; ret 0xf08; 
0x0809483e: add ah, byte ptr [eax]; add byte ptr [eax], al; add cl, ch; ret 0xffe8; 
0x080700a7: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x08070207: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x0806fa87: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x0806fbe7: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x080700c7: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x08070227: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x0806faa7: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x0806fc07: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x080700e7: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x08070247: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x0806fac7: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x0806fc27: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x0806ff76: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x08070267: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x0806f976: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x0806fc47: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x0806f49c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 5]; lea eax, [edx + 0xc]; pop edi; ret; 
0x0806f5fc: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 5]; lea eax, [edx + 0xc]; ret; 
0x0806dc2c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 5]; mov eax, edi; pop edi; ret; 
0x0806dd8c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 5]; mov eax, edx; ret; 
0x0806f4bc: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 6]; lea eax, [edx + 0xd]; pop edi; ret; 
0x0806f61c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 6]; lea eax, [edx + 0xd]; ret; 
0x0806dc4c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 6]; mov eax, edi; pop edi; ret; 
0x0806ddac: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 6]; mov eax, edx; ret; 
0x0806f4dc: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 7]; lea eax, [edx + 0xe]; pop edi; ret; 
0x0806f63c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 7]; lea eax, [edx + 0xe]; ret; 
0x0806dc6c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 7]; mov eax, edi; pop edi; ret; 
0x0806ddcc: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 7]; mov eax, edx; ret; 
0x08074f54: add ah, byte ptr [esi - 0x5b]; rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x08074fcd: add ah, byte ptr [esi - 0x5b]; rep movsd dword ptr es:[edi], dword ptr [esi]; xchg eax, edi; mov esi, edx; ret; 
0x0806f543: add ah, byte ptr [esi - 0x75]; inc ecx; add al, 0x66; mov dword ptr [edx + 4], eax; lea eax, [edx + 5]; ret; 
0x0806dcd3: add ah, byte ptr [esi - 0x75]; inc ecx; add al, 0x66; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x08049c65: add ah, dh; mov ebx, dword ptr [esp]; ret; 
0x08064bfa: add al, 0; add al, ch; push cs; fcos; jmp dword ptr [ebp - 0x5f]; 
0x08066d65: add al, 0; add al, ch; ret; 
0x080608f3: add al, 0; add bh, al; and byte ptr [eax + 0x1000004], 0; add byte ptr [eax], al; ret; 
0x08058bb6: add al, 0; add bh, al; ret; 
0x08064617: add al, 0; add byte ptr [eax - 0x18], dl; pushal; ret 0xffff; 
0x080660a8: add al, 0; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x46480], cl; add byte ptr [ebp - 0x17fa8640], al; ret 0xffb2; 
0x0806213c: add al, 0; add byte ptr [eax], al; add byte ptr [ebp + 0x39b374d2], al; ret 0xaf74; 
0x080771b0: add al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x08077c76: add al, 0; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x080b09f0: add al, 0; add byte ptr [eax], al; pop ebx; ret; 
0x08071b3e: add al, 0; add byte ptr [eax], al; pop edi; ret; 
0x08098ad1: add al, 0; add byte ptr [eax], al; ret; 
0x08066d5f: add al, 0; add byte ptr [ebp + 0x4e083], cl; add al, ch; ret; 
0x08062c72: add al, 0; add byte ptr [ebp + 0x6d880fc0], al; add dword ptr [eax], eax; add byte ptr [edi], cl; xchg eax, ebp; ret; 
0x080660b2: add al, 0; add byte ptr [ebp - 0x17fa8640], al; ret 0xffb2; 
0x08066fa3: add al, 0; add byte ptr [ebp - 0x7cc98740], al; in al, dx; or byte ptr [ebp - 0x2ff1f7d], cl; call dword ptr [esi + 0x50]; 
0x080639dd: add al, 0; add byte ptr [ebx + 0x4549e], cl; add byte ptr [ecx], bh; ret; 
0x0806780c: add al, 0; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0806463f: add al, 0; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x08064c0f: add al, 0; add byte ptr [ecx], al; pop ebx; pop esi; pop edi; ret; 
0x08097612: add al, 0; add byte ptr [ecx], al; ret; 
0x080639e3: add al, 0; add byte ptr [ecx], bh; ret; 
0x08060f99: add al, 0; add byte ptr [ecx], bh; retf 0x975; add esp, 8; pop ebx; ret; 
0x080598ac: add al, 0; add byte ptr [edx + 2], ch; push 0; push 0; push dword ptr [esp + 0x24]; call dword ptr [edi + 0x40]; 
0x08063438: add al, 0; add cl, ch; ret; 
0x08098b49: add al, 0; lea ecx, [eax + 1]; jne 0x50b28; mov eax, ecx; ret; 
0x080a3ab8: add al, 0; lea ecx, [esp + 0x10]; lea ebx, [esi - 0x1b3ee]; call dword ptr gs:[0x10]; 
0x0809999d: add al, 0; push ebx; mov eax, 0x2d; mov ebx, dword ptr [esp + 8]; int 0x80; 
0x080a6b60: add al, 0x24; add eax, 0x11; add esp, 4; add eax, ebx; jmp eax; 
0x080b2142: add al, 0x24; call 0x1da60; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x080a3e70: add al, 0x24; mov eax, dword ptr [esp + 4]; ret 0x14; 
0x080a3d99: add al, 0x24; mov eax, dword ptr [esp + 4]; ret 0xc; 
0x0804aa80: add al, 0x24; ret; 
0x080a44ba: add al, 0x29; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x0805b4e8: add al, 0x29; ret 0x5052; 
0x08059a18: add al, 0x29; ret 0xd089; 
0x0806617c: add al, 0x29; ret 0xda21; 
0x08090281: add al, 0x29; rol cl, 1; clc; add dl, byte ptr [eax + 0x52]; push dword ptr [ebp - 0x8a0]; call dword ptr [ebx + 0x1c]; 
0x0804b349: add al, 0x2b; inc esi; add al, 0x5b; pop esi; pop edi; ret; 
0x0809947b: add al, 0x31; jmp dword ptr [ebp - 0x7d]; 
0x080802c9: add al, 0x36; std; call dword ptr [eax - 0x73]; 
0x0808c008: add al, 0x39; ret 0x870f; 
0x080b1013: add al, 0x39; ret 0xb975; 
0x080a5c58: add al, 0x39; ret 0xf375; 
0x0807fe2c: add al, 0x39; ret; 
0x0805ff9d: add al, 0x39; retf 0x1e73; movzx eax, byte ptr [edx]; pop ebx; pop esi; ret; 
0x080988fd: add al, 0x39; retf 0x474; test edx, edx; jne 0x508f8; ret; 
0x080597ca: add al, 0x50; push edx; push dword ptr [esp + 0x24]; call ecx; 
0x0805c19c: add al, 0x50; push edx; push esi; call ecx; 
0x0805a94f: add al, 0x51; mov eax, dword ptr [esp + 0x30]; push eax; call esi; 
0x08078002: add al, 0x51; push 3; push ebx; call edx; 
0x08065842: add al, 0x51; push edx; push ebx; call eax; 
0x0809044d: add al, 0x51; push esi; push dword ptr [ebp - 0x8a0]; call edx; 
0x0805c72b: add al, 0x52; push ebp; push esi; call dword ptr [ebx + 0x38]; 
0x08095a6b: add al, 0x53; push dword ptr [ebp + 8]; push esi; call dword ptr [eax + 0x1c]; 
0x080528af: add al, 0x53; push dword ptr [ebp - 0x884]; push dword ptr [ebp - 0x890]; call edx; 
0x08057410: add al, 0x53; push dword ptr [esp + 0x3c]; push esi; call dword ptr [edx + 0x1c]; 
0x08051992: add al, 0x53; push eax; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x1c]; 
0x080b2872: add al, 0x55; push 0x28; push dword ptr [esp + 0x20]; mov eax, dword ptr [esp + 0x28]; call eax; 
0x0808914e: add al, 0x55; push dword ptr [esp + 0x20]; push esi; call edi; 
0x0805c64c: add al, 0x55; push dword ptr [esp + 0x3c]; push edi; call dword ptr [eax + 0x20]; 
0x08088e55: add al, 0x55; push ebx; push esi; call edi; 
0x0805892a: add al, 0x55; push edi; push esi; call dword ptr [edx + 0x1c]; 
0x08088e32: add al, 0x55; push esi; push dword ptr [esp + 0x10]; call edi; 
0x08088e05: add al, 0x55; push esi; push dword ptr [esp + 0x20]; call edi; 
0x08051e74: add al, 0x56; push dword ptr [ebp - 0x898]; push dword ptr [ebp - 0x890]; call dword ptr [ebx + 0x1c]; 
0x0805329e: add al, 0x56; push dword ptr [ebp - 0x89c]; push dword ptr [ebp - 0x890]; call dword ptr [ebx + 0x1c]; 
0x08077fcb: add al, 0x57; push 0; push ebx; call esi; 
0x08077fdf: add al, 0x57; push 1; push ebx; call esi; 
0x08077ff2: add al, 0x57; push 2; push ebx; call esi; 
0x08058a25: add al, 0x57; push dword ptr [ebp + 8]; push eax; call dword ptr [ebx + 0x1c]; 
0x08095c7e: add al, 0x57; push dword ptr [ebp + 8]; push esi; call dword ptr [ebx + 0x1c]; 
0x080ad022: add al, 0x57; push esi; push ebp; call dword ptr [ebx]; 
0x080674d5: add al, 0x5b; cmovne eax, ecx; ret; 
0x08059d38: add al, 0x5b; pop esi; jmp eax; 
0x08060b4d: add al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x0804b34c: add al, 0x5b; pop esi; pop edi; ret; 
0x0804af38: add al, 0x5b; pop esi; ret; 
0x0805e2d9: add al, 0x5b; ret; 
0x080a96f7: add al, 0x5e; pop edi; jmp eax; 
0x0806f3fc: add al, 0x5f; ret; 
0x080a4cc6: add al, 0x65; sub eax, dword ptr [0]; ret; 
0x0806f407: add al, 0x66; mov dword ptr [edx + 4], eax; lea eax, [edx + 5]; pop edi; ret; 
0x0806f547: add al, 0x66; mov dword ptr [edx + 4], eax; lea eax, [edx + 5]; ret; 
0x0806dba7: add al, 0x66; mov dword ptr [edx + 4], eax; mov eax, edi; pop edi; ret; 
0x0806dcd7: add al, 0x66; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x08070049: add al, 0x66; mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; pop edi; ret; 
0x080701a9: add al, 0x66; mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x0806fa29: add al, 0x66; mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x0806fb89: add al, 0x66; mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x080588c2: add al, 0x6a; adc byte ptr [edi + 0x56], dl; call dword ptr [eax + 0x1c]; 
0x0805f524: add al, 0x6a; add byte ptr [edx], ch; push ebp; call dword ptr [ebx + 0x2c]; 
0x0809e1be: add al, 0x6b; ret 0x291d; 
0x080971c2: add al, 0x75; ret; 
0x080550bb: add al, 0x81; jmp eax; 
0x08079666: add al, 0x81; ret 0x5a00; 
0x0808914b: add al, 0x83; in al, dx; add al, 0x55; push dword ptr [esp + 0x20]; push esi; call edi; 
0x080ad01f: add al, 0x83; in al, dx; add al, 0x57; push esi; push ebp; call dword ptr [ebx]; 
0x0807a980: add al, 0x83; in al, dx; or al, 0x89; or dword ptr [ebp + edi*8 - 0x7c720001], 0xf; sub ebp, edi; call dword ptr [eax - 0x18]; 
0x080aefc3: add al, 0x83; in al, dx; or al, 0xff; je 0x66fee; and al, 0x89; ret 0xd889; 
0x08092a26: add al, 0x83; jmp eax; 
0x0807c020: add al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x080a433f: add al, 0x83; les ebp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0804f486: add al, 0x83; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x080ae0bc: add al, 0x83; les ecx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x080a3dcb: add al, 0x83; les edx, ptr [eax]; jmp ecx; 
0x080a76a6: add al, 0x83; les esp, ptr [edi + ecx]; mov dh, 0xc0; pop ebx; pop esi; ret; 
0x080668e9: add al, 0x83; ljmp 0x450f:0x1e08304; ret 0xc483; 
0x08062e35: add al, 0x83; mov eax, 0x460; add byte ptr [edi], cl; xchg eax, ebp; ret; 
0x08098460: add al, 0x83; out dx, al; add al, 0x83; out dx, al; add al, 0xf7; ret 0; 
0x08098463: add al, 0x83; out dx, al; add al, 0xf7; ret 0; 
0x08062089: add al, 0x83; rcl dword ptr [eax], 0x83; ret; 
0x0809dfe6: add al, 0x83; ret 0x105; 
0x0808bd73: add al, 0x83; ret 0x3901; 
0x080522ec: add al, 0x83; ret 0x3910; 
0x08083f0d: add al, 0x83; ret 0x8301; 
0x08074e43: add al, 0x83; ret 0x8304; 
0x080a63bb: add al, 0x83; ret 0x8901; 
0x080a5f34: add al, 0x83; ret 0x8904; 
0x08085646: add al, 0x83; ret 0x8b01; 
0x08074e52: add al, 0x83; ret 0x8b04; 
0x080953f2: add al, 0x83; ret 0xb904; 
0x08086e6d: add al, 0x83; ret 0xc601; 
0x08079ff2: add al, 0x83; ret 0xc608; 
0x0806a2e4: add al, 0x83; ret 0xf04; 
0x0804c97b: add al, 0x83; ret; 
0x080988fa: add al, 0x83; rol byte ptr [ecx + edi], 0xca; je 0x50906; test edx, edx; jne 0x508f8; ret; 
0x080811be: add al, 0x83; rol byte ptr [ecx], 0x83; ret 0x8901; 
0x08097429: add al, 0x83; rol byte ptr [ecx], 0x83; ret; 
0x0807f53c: add al, 0x83; rol dword ptr [ecx], 0x83; ret 0x3904; 
0x080a3431: add al, 0x85; leave; jne 0x5b410; mov eax, edx; pop ebx; ret; 
0x08078a6f: add al, 0x85; sal byte ptr [ebp + 4], cl; ret; 
0x08078a93: add al, 0x85; sal byte ptr [ebp + 8], cl; ret; 
0x08098901: add al, 0x85; sal byte ptr [ebp - 0xe], cl; ret; 
0x080ab681: add al, 0x85; sal byte ptr [edx + edi*4 - 0x75], 0x55; add byte ptr [ecx], al; ret 0xd139; 
0x0806db96: add al, 0x88; inc edx; add al, 0x89; clc; pop edi; ret; 
0x0806f3f6: add al, 0x88; inc edx; add al, 0x8d; inc edx; add al, 0x5f; ret; 
0x0805258e: add al, 0x89; adc dword ptr [ebx - 0x7c2776f0], ecx; ret; 
0x0804a27a: add al, 0x89; add al, bh; ret 0x4d88; 
0x08050078: add al, 0x89; add ecx, dword ptr [ebx - 0x7cfbdbbc]; ret; 
0x080a3287: add al, 0x89; clc; pop ebx; pop esi; pop edi; ret; 
0x0806db99: add al, 0x89; clc; pop edi; ret; 
0x0805ba68: add al, 0x89; inc ebx; or byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x0806f927: add al, 0x89; inc edx; add al, 0x89; clc; pop edi; ret; 
0x0806fb66: add al, 0x89; inc edx; add al, 0x8a; inc ecx; or byte ptr [eax - 0x2f76f7be], cl; ret; 
0x0806fbc6: add al, 0x89; inc edx; add al, 0x8b; inc ecx; or byte ptr [ecx - 0x2f76f7be], cl; ret; 
0x08070176: add al, 0x89; inc edx; add al, 0x8d; inc edx; pop es; ret; 
0x0805b18e: add al, 0x89; inc esi; or byte ptr [ecx + 0x4c483f0], cl; pop ebx; pop esi; ret; 
0x08052b6f: add al, 0x89; lea ebp, [edi + esi*8 - 1]; call dword ptr [esi + 0x52]; 
0x08092d22: add al, 0x89; lea edx, [eax - 0x3e000005]; clc; add dl, byte ptr [eax + 0x51]; push esi; call dword ptr [ebx + 0x1c]; 
0x0807e702: add al, 0x89; loope 0x3668f; inc ebp; mov esp, 0x8929c083; ret 0x25; 
0x08096b62: add al, 0x89; or byte ptr [ebx + 0x5f5e5b02], cl; ret; 
0x08096463: add al, 0x89; pop eax; or byte ptr [ecx + 0x10892048], cl; pop ebx; ret; 
0x080b10df: add al, 0x89; ret 0x448d; 
0x080a0eea: add al, 0x89; ret 0x858b; 
0x08053418: add al, 0x89; ret 0xb60f; 
0x080a173f: add al, 0x89; ret 0xc031; 
0x080a3a26: add al, 0x89; ret 0xc085; 
0x080787b9: add al, 0x89; ret 0xe083; 
0x080559f4: add al, 0x89; ret 0xeac1; 
0x08060df7: add al, 0x89; ret; 
0x08078724: add al, 0x89; rol dword ptr [ebx + 0x4d89fee1], 1; aam 0x8b; dec eax; or dh, dh; ret 0x7401; 
0x080a4eb0: add al, 0x89; ror byte ptr [ebx + 0x651c244c], 1; xor ecx, dword ptr [0x14]; jne 0x5cecc; add esp, 0x2c; ret; 
0x080a5170: add al, 0x89; ror byte ptr [ebx + 0x651c244c], 1; xor ecx, dword ptr [0x14]; jne 0x5d18c; add esp, 0x2c; ret; 
0x080555ff: add al, 0x89; xchg eax, ebp; cmp bl, 0xff; call dword ptr [edx + 0x51]; 
0x08054c7e: add al, 0x89; xchg eax, ebp; cmp bl, 0xff; call dword ptr [edx - 1]; 
0x080912c8: add al, 0x89; xchg eax, ebp; idiv edi; call dword ptr [ebx - 0x77]; 
0x08090670: add al, 0x89; xchg eax, ebp; inc eax; idiv edi; call dword ptr [edx + 0x51]; 
0x0806fb69: add al, 0x8a; inc ecx; or byte ptr [eax - 0x2f76f7be], cl; ret; 
0x0806fa09: add al, 0x8a; inc ecx; or byte ptr [eax - 0x776f7be], cl; pop edi; ret; 
0x080609a1: add al, 0x8b; adc al, bh; and byte ptr [eax + 0x1000004], 0; add byte ptr [eax], al; mov dword ptr [eax + 0x480], edx; ret; 
0x08060951: add al, 0x8b; adc al, bh; and byte ptr [eax + 0x1000004], 0; add byte ptr [eax], al; mov dword ptr [eax + 0x484], edx; ret; 
0x08060921: add al, 0x8b; adc al, bh; and byte ptr [eax + 0x1000004], 0; add byte ptr [eax], al; mov dword ptr [eax + 0x498], edx; ret; 
0x08060a12: add al, 0x8b; add byte ptr [0x3fc], bh; jbe 0x18a20; ret; 
0x080608e2: add al, 0x8b; add byte ptr [0x80000], bh; jbe 0x188f0; ret; 
0x08060a52: add al, 0x8b; add byte ptr [0xffff], bh; jbe 0x18a60; ret; 
0x08060aa2: add al, 0x8b; add byte ptr [ebx + 0x67650f8], al; ret; 
0x08049e85: add al, 0x8b; add byte ptr [ebx - 0x72aff714], al; sub dword ptr [esi - 0x10], -4; call dword ptr [eax - 0x18]; 
0x0809674a: add al, 0x8b; add byte ptr [ecx + 0x4c4830a], cl; pop ebx; pop esi; ret; 
0x08052563: add al, 0x8b; add byte ptr [ecx - 0x7c2576ea], cl; ret; 
0x0809642f: add al, 0x8b; dec eax; or byte ptr [ecx + 0x8508910], cl; mov dword ptr [eax + 0x20], ecx; ret; 
0x080b01d7: add al, 0x8b; inc eax; dec eax; ret; 
0x080b0247: add al, 0x8b; inc eax; dec esp; ret; 
0x08060dd2: add al, 0x8b; inc eax; or al, 0x83; ret; 
0x080b02e7: add al, 0x8b; inc eax; pop eax; ret; 
0x080b0297: add al, 0x8b; inc eax; pop esp; ret; 
0x080b0287: add al, 0x8b; inc eax; push eax; ret; 
0x080b02f7: add al, 0x8b; inc eax; push esp; ret; 
0x08099ca2: add al, 0x8b; inc ebp; fadd dword ptr [ebx - 0x377cf040]; add eax, dword ptr [ecx]; ret 0x458b; 
0x080787b6: add al, 0x8b; inc ecx; add al, 0x89; ret 0xe083; 
0x0806fbc9: add al, 0x8b; inc ecx; or byte ptr [ecx - 0x2f76f7be], cl; ret; 
0x0806fa69: add al, 0x8b; inc ecx; or byte ptr [ecx - 0x776f7be], cl; pop edi; ret; 
0x080701c9: add al, 0x8b; inc ecx; pop es; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x0806fba9: add al, 0x8b; inc ecx; pop es; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x080823a6: add al, 0x8b; je 0x3a3ce; xor byte ptr [edi], cl; mov dh, 0x9c; push ss; ret 0xfd35; 
0x08060df0: add al, 0x8b; jl 0x18e18; adc byte ptr [ecx], al; pop eax; add al, 0x89; ret; 
0x080a56bb: add al, 0x8b; js 0x5d6c7; mov ebp, dword ptr [eax + 0xc]; mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x080741c7: add al, 0x8b; mov word ptr [ebx - 0x2b4c0], cs; mov eax, dword ptr [ebx + eax*4 - 0x2b4c0]; sub eax, ecx; pop ebx; ret; 
0x080a85b6: add al, 0x8b; push eax; adc byte ptr [ecx + 0x39c829f8], cl; ret 0x6f72; 
0x080ab72c: add al, 0x8b; push ebp; add byte ptr [ecx], al; ret 0xd139; 
0x0805c761: add al, 0x8b; push esi; or byte ptr [ecx], ch; ret 0xfa39; 
0x080b0277: add al, 0x8b; push esp; and al, 8; mov dword ptr [eax + 0x4c], edx; ret; 
0x0805fb07: add al, 0x8b; push esp; and al, 8; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x08087bf7: add al, 0x8b; push esp; and al, 8; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x08063822: add al, 0x8b; test dword ptr [eax - 0x7d000000], eax; ret 0x8b08; 
0x080864b2: add al, 0x8d; and dword ptr [eax + 0x12], 0xfffffffa; call dword ptr [esi + 0x31]; 
0x0807e60b: add al, 0x8d; and dword ptr [eax + 0x7b], 0xfffffff9; call dword ptr [eax - 0x73]; 
0x0806f3f9: add al, 0x8d; inc edx; add al, 0x5f; ret; 
0x0806ff2a: add al, 0x8d; inc edx; pop es; pop edi; ret; 
0x08070179: add al, 0x8d; inc edx; pop es; ret; 
0x080a1b3a: add al, 0x8d; je 0x59b64; add byte ptr [eax - 0x3f7cf775], dl; or byte ptr [ebp + 0x39010a54], cl; ret; 
0x08050908: add al, 0x8d; mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr [esi]; 
0x0809d052: add al, 0x8d; or dword ptr [eax + 0x3c], 0xfffffffe; call dword ptr [ebp + 0x56]; 
0x080885d9: add al, 0x8d; test dword ptr [esi + edi*8 - 1], ebx; dec dword ptr [ecx - 0x1bb73]; call dword ptr [eax - 1]; 
0x08079671: add al, 0x8d; xchg eax, ecx; adc byte ptr [esi - 7], al; dec dword ptr [ecx + 0x5e5b0850]; ret; 
0x0808a3ed: add al, 0x91; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x08077b07: add al, 0xb8; fld qword ptr [eax]; add byte ptr [eax], al; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x08079269: add al, 0xb8; je 0x3126d; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x080995a9: add al, 0xb8; jp 0x515ad; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x08066fd2: add al, 0xb8; push ss; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x080a96d2: add al, 0xc1; call 0xff56a3db; je 0x616eb; lea ebx, [esi + edx*4]; nop; call dword ptr [ebx]; 
0x08096fe2: add al, 0xc1; cli; add ch, bl; ljmp 0x5bff:0xffffffb8; ret; 
0x0808b1c8: add al, 0xc7; ret 0xfff0; 
0x08061175: add al, 0xe8; add eax, 0x81fffe8b; ret; 
0x080a4cde: add al, 0xe8; fcomp qword ptr [esi]; add byte ptr [edx + 0x59], bl; pop eax; jmp dword ptr [eax]; 
0x080ad844: add al, 0xe8; inc esi; or bh, bh; dec dword ptr [ecx + 0x28c48303]; pop ebx; ret; 
0x080a0ac8: add al, 0xe9; sub bh, 0xff; jmp dword ptr [esi - 0x70]; 
0x0804ffd4: add al, 0xeb; ret 0xb48d; 
0x080b0a72: add al, 0xeb; ror byte ptr [ebp - 0x3fceff8a], cl; ret; 
0x080788ca: add al, 0xf6; ret 0x7401; 
0x08064282: add al, 0xf6; ret; 
0x08098466: add al, 0xf7; ret 0; 
0x0805e7fb: add al, 0xf; mov dh, 0; add esp, 4; pop ebx; pop esi; ret; 
0x0805e645: add al, 0xf; mov dh, 0; pop ebx; pop esi; pop edi; ret; 
0x0805f005: add al, 0xf; mov dh, 0x40; inc dword ptr [ebx - 0x3b7c10dd]; add al, 0x5b; pop esi; ret; 
0x0806a187: add al, 0xf; movzx ecx, byte ptr [esi + ecx]; sub eax, ecx; pop esi; pop edi; ret; 
0x0807ffe2: add al, 0xf; test byte ptr [ebx - 0x7cffffff], ah; rol byte ptr [ecx], 0x83; ret 0x8901; 
0x080b01bb: add al, 0xf; test dword ptr [eax - 0x6b], ebx; stc; dec dword ptr [ebx + 0x8c48300]; pop ebx; ret; 
0x080718bb: add al, 0xf; test dword ptr [ebx - 0x7cfffffd], ebx; ror byte ptr [ebx], 0x5f; ret; 
0x080a3383: add al, 0xf; xchg byte ptr [edi + edi*8 - 1], ch; dec dword ptr [ebp + 0xb6]; add byte ptr [ebx - 0x7cfbdbac], cl; ret 0x3901; 
0x08065eba: add al, 0xff; je 0x1dee2; inc eax; push edi; push ebp; call eax; 
0x08088f84: add al, 0xff; je 0x40fac; or al, 0x53; push dword ptr [esp + 0xc]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x080acea2: add al, 0xff; je 0x64eca; xor al, 0x57; push esi; call dword ptr [ebp]; 
0x0804ff52: add al, 0xff; je 0x7f7a; or al, 0x55; push esi; mov eax, dword ptr [esp + 0x1c]; call eax; 
0x08050094: add al, 0xff; je 0x80bc; or al, 0x55; push esi; mov eax, dword ptr [esp + 0x1c]; call eax; 
0x08050104: add al, 0xff; je 0x812c; or al, 0x55; push esi; mov eax, dword ptr [esp + 0x1c]; call eax; 
0x080b0007: add al, 0xff; mov dword ptr ss:[esp + 0x1c], edx; push ecx; push 1; call eax; 
0x080b0457: add al, 0xff; push 1; push 1; call eax; 
0x080b1b72: add al, 0xff; push dword ptr ss:[ebx + ebp + 4]; push dword ptr [esp + 0x20]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x080b0882: add al, 0xff; xor dword ptr [ecx + 0x5014244c], ecx; push dword ptr [esp + 0x10]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x080b00ee: add al, 0xff; xor ebp, dword ptr [edx + 0xa]; push 1; call eax; 
0x08054e00: add al, 0xff; xor ecx, dword ptr [ecx - 0x49f6b]; dec dword ptr [ebp - 0x4136b]; call dword ptr [edx - 0x39]; 
0x080aa3ed: add al, 1; ret 0x11eb; 
0x08060e99: add al, 2; mov dword ptr [eax + 8], 0; mov dword ptr [eax + 0x38], ebx; pop ebx; pop esi; ret; 
0x080ace66: add al, 3; add edi, edi; je 0x64e90; xor al, 0x57; push esi; call eax; 
0x0809e104: add al, 3; pop esp; and al, 0x44; push dword ptr [esp + 0x38]; call dword ptr [ebx + 0x38]; 
0x08049c5e: add al, 8; push eax; call 0x2220; hlt; mov ebx, dword ptr [esp]; ret; 
0x08060e9a: add al, bh; inc eax; or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx + 0x5e5b3858], cl; ret; 
0x0804a27c: add al, bh; ret 0x4d88; 
0x08061188: add al, bh; ret 0x59b0; 
0x080577da: add al, byte ptr [eax - 0x7605f39a]; aad 0x89; ret 0x28e9; 
0x0805795f: add al, byte ptr [eax - 0x76fdf3b2]; aad 0x89; ret 0xa3e9; 
0x0807aa4a: add al, byte ptr [eax]; add bh, al; ret 0x4da0; 
0x0804abab: add al, byte ptr [eax]; add bh, al; ret 0x6f74; 
0x080502fd: add al, byte ptr [eax]; add bh, al; ret 0xffe0; 
0x0807a572: add al, byte ptr [eax]; add byte ptr [eax + 0x3b850f08], ch; or byte ptr [eax], al; add bh, al; ret 0x6f28; 
0x0807040f: add al, byte ptr [eax]; add byte ptr [eax + 0x76850f04], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf04; 
0x080703fe: add al, byte ptr [eax]; add byte ptr [eax + 0x77850f02], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf02; 
0x080703a7: add al, byte ptr [eax]; add byte ptr [eax - 0x17af0f0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x080703b8: add al, byte ptr [eax]; add byte ptr [eax - 0x27af0e0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x080703c9: add al, byte ptr [eax]; add byte ptr [eax - 0x37af0c0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf40; 
0x080802d6: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; cmp dword ptr [esi], 0x34; std; call dword ptr [eax - 0x18]; 
0x0807f0de: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; or dword ptr [edx], 0x34; std; call dword ptr [eax - 0x18]; 
0x08083bcd: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; or dword ptr [edx], 0x34; std; call dword ptr [eax - 0x18]; ret; 
0x080aa76f: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; sub dword ptr [eax - 0x69], -2; call dword ptr [eax - 0x18]; 
0x080b3278: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xor ebp, 0x41; std; call dword ptr [eax - 0x18]; 
0x08098f59: add al, byte ptr [eax]; add byte ptr [eax], al; add esp, 8; xor eax, eax; pop ebx; ret; 
0x080ab83a: add al, byte ptr [eax]; add byte ptr [eax], al; call 0x637f0; add eax, ebx; jmp eax; 
0x0805ae83: add al, byte ptr [eax]; add byte ptr [eax], al; mov ecx, dword ptr [ebp - 0x38]; lea esi, [esi]; mov eax, edi; call dword ptr gs:[0x10]; 
0x08098ab1: add al, byte ptr [eax]; add byte ptr [eax], al; ret; 
0x08088a52: add al, byte ptr [eax]; add byte ptr [eax], al; xor edx, edx; mov ecx, ebp; mov esi, 8; call dword ptr gs:[0x10]; 
0x080608a7: add al, byte ptr [eax]; add byte ptr [eax], al; xor esi, esi; call dword ptr gs:[0x10]; 
0x0807f08d: add al, byte ptr [eax]; add byte ptr [ebp - 0x2cc1d7d], cl; call dword ptr [eax - 0x73]; 
0x080ab0ce: add al, byte ptr [eax]; add byte ptr [ebp - 0x47bfdbb4], cl; add byte ptr [ecx], 0; add byte ptr [ebx + 0x3005], bh; call dword ptr gs:[0x10]; 
0x080a6904: add al, byte ptr [eax]; add byte ptr [ebx + 0x29302454], cl; ret 0x5489; 
0x0809b3c6: add al, byte ptr [eax]; add byte ptr [ebx + 0x508d084e], cl; jmp dword ptr [ecx]; 
0x0807ae22: add al, byte ptr [eax]; add byte ptr [ebx + 0x5fe910c4], al; idiv edi; dec dword ptr [ebp - 0x2d5877d]; call dword ptr [eax - 0x73]; 
0x08079d84: add al, byte ptr [eax]; add byte ptr [ebx + 0x9e0b1], cl; add bh, al; ret; 
0x0808e929: add al, byte ptr [eax]; add byte ptr [ebx + 0xf0c2454], cl; mov esi, 0xc7542444; ret 0xfff0; 
0x080a2a60: add al, byte ptr [eax]; add byte ptr [ebx - 0x24f7b], cl; dec dword ptr [ebx - 0x2576b]; dec dword ptr [ebx - 0x1d763]; dec dword ptr [ebx - 0x1db73]; call ecx; 
0x0804a499: add al, byte ptr [eax]; add byte ptr [ebx - 0x38f3dbbc], cl; ret; 
0x080564d7: add al, byte ptr [eax]; add byte ptr [ebx - 0x4737b], cl; inc dword ptr [eax - 0x42273]; call dword ptr [eax]; 
0x0804b814: add al, byte ptr [eax]; add byte ptr [ebx - 0x6c72f714], al; pop ds; cld; call dword ptr [edx + 0x50]; 
0x08083bb7: add al, byte ptr [eax]; add byte ptr [ebx - 0x72cbdba4], cl; and dword ptr [eax], 0x37; std; call dword ptr [eax - 0x73]; 
0x08062eb1: add al, byte ptr [eax]; add byte ptr [ebx - 0x72efdb84], cl; xchg dword ptr [esi + ecx - 0x68720003], eax; push -2; cld; call dword ptr [eax - 0x73]; 
0x0809b3bd: add al, byte ptr [eax]; add byte ptr [ebx - 0x7876e3ba], cl; inc eax; add al, byte ptr [eax]; add byte ptr [ebx + 0x508d084e], cl; jmp dword ptr [ecx]; 
0x080a9ad3: add al, byte ptr [eax]; add byte ptr [ecx + 0x408b9104], cl; or al, 0x83; ret 0x8501; 
0x080a794c: add al, byte ptr [eax]; add byte ptr [ecx + 0x4c48310], cl; pop ebx; pop esi; ret; 
0x0807ff4a: add al, byte ptr [eax]; add byte ptr [ecx - 0x74f7dbac], cl; jl 0x37f78; or al, 0x89; ret; 
0x08070d83: add al, byte ptr [eax]; add byte ptr [ecx], al; clc; add eax, ecx; pop edi; ret; 
0x0805b571: add al, byte ptr [eax]; add byte ptr [edx + ebx*2 - 0x75], dh; inc ebp; in al, 0xc7; ret; 
0x0805c13b: add al, byte ptr [eax]; add byte ptr [edx], ch; push edx; push eax; push esi; call dword ptr [ebx + 0x40]; 
0x0807a544: add al, byte ptr [eax]; add dh, dh; ret 0x7402; 
0x0807afcd: add al, byte ptr [eax]; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0804a47f: add al, byte ptr [eax]; add esp, 0x10; mov eax, 0x180; mov ebx, 0x3001; lea ecx, [esp + 0x40]; int 0x80; 
0x0807af8e: add al, byte ptr [eax]; add esp, 0x18; pop ebx; ret; 
0x0804fccd: add al, byte ptr [eax]; mov ebp, dword ptr [esp]; ret; 
0x0807709c: add al, byte ptr [eax]; mov ecx, dword ptr [esp + 0x20]; mov edx, dword ptr [esp + 0x24]; mov edi, eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x08079d7e: add al, byte ptr [ebp + 0x5b840fc0]; add al, byte ptr [eax]; add byte ptr [ebx + 0x9e0b1], cl; add bh, al; ret; 
0x08076080: add al, byte ptr [ebp - 0x39bbf02e]; pop esi; pop edi; ret; 
0x080a7970: add al, byte ptr [ebx + 0x5e5b04c4]; ret; 
0x0804ec47: add al, byte ptr [ecx - 0xccc1e]; inc dword ptr [ecx]; ret 0xd089; 
0x08085e2f: add al, byte ptr [ecx]; ret 0x973b; 
0x080aaa6d: add al, byte ptr [ecx]; shr byte ptr [ebx], 0x5d; in al, 1; ret 0xde39; 
0x08098a44: add al, byte ptr [edx + edx*8 - 0x2e77e88c]; and cl, 0xf; je 0x50a70; ret; 
0x0807040e: add al, byte ptr ds:[eax]; add byte ptr [eax + 0x76850f04], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf04; 
0x08062ed4: add al, byte ptr gs:[eax]; add byte ptr [ebx - 0x72efdb84], cl; xchg dword ptr [esi + ecx - 0x68720003], eax; push -2; cld; call dword ptr [eax - 0x73]; 
0x080aab56: add al, ch; and al, 0xf1; stc; inc dword ptr [ecx + 0x3a4a4c3]; add byte ptr [ecx], bh; ret 0xa74; 
0x08068155: add al, ch; and eax, 0x81fffe1b; ret; 
0x0807eb9a: add al, ch; cld; jmp dword ptr [esi - 0x70]; 
0x080acd02: add al, ch; cwde; xchg bh, bh; dec dword ptr [ebp - 0x166177d]; call dword ptr [eax - 0x75]; 
0x080a7610: add al, ch; ljmp 0x10c4:0x83f7f589; add esp, 4; pop ebx; pop esi; ret; 
0x080b30ed: add al, ch; mov ebp, 0xc7fffffd; ret 0; 
0x0807aeb6: add al, ch; mov ebx, 0x838dffff; pushal; sub bh, ch; call dword ptr [eax - 0x73]; 
0x080a3a1b: add al, ch; pop ds; sbb bh, ah; inc dword ptr [ebx + 0x478910c4]; add al, 0x89; ret 0xc085; 
0x08064bfc: add al, ch; push cs; fcos; jmp dword ptr [ebp - 0x5f]; 
0x0805bb7c: add al, ch; push cs; ret; 
0x08066ab7: add al, ch; ret; 
0x0809983f: add al, ch; retf; sub bh, dh; inc dword ptr [ebx + 0x5e5b04c4]; ret; 
0x0806107a: add al, dh; dec dword ptr [ecx + 0xae8df2]; add byte ptr [eax], dl; add byte ptr [ecx], ch; ret 0x850f; 
0x0808bd67: add bh, al; add byte ptr [eax], dh; add byte ptr [eax], al; add byte ptr [ebx - 0x177c03b8], cl; add al, 0x83; ret 0x3901; 
0x080608f5: add bh, al; and byte ptr [eax + 0x1000004], 0; add byte ptr [eax], al; ret; 
0x0805ff51: add bh, al; and byte ptr [eax], 0x18; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0804d14d: add bh, al; inc ebp; sub byte ptr [eax], al; add byte ptr [eax], al; add bh, al; ret 0; 
0x08062139: add bh, al; inc esi; add al, 0; add byte ptr [eax], al; add byte ptr [ebp + 0x39b374d2], al; ret 0xaf74; 
0x080a43ac: add bh, al; inc esi; or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x0805e3ce: add bh, al; inc esi; sub byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x0807c2df: add bh, al; rcl ah, 0x5e; push cs; or bh, al; ret 0x59a4; 
0x0805bce6: add bh, al; rcl ah, 0x62; push cs; or bh, al; ret 0x5f80; 
0x0805fdfd: add bh, al; rcr byte ptr [eax - 0x74f7f1b0], 0; ret; 
0x0804d154: add bh, al; ret 0; 
0x080a1177: add bh, al; ret 0x4d84; 
0x0807aa4c: add bh, al; ret 0x4da0; 
0x080a344d: add bh, al; ret 0x5088; 
0x080a2e47: add bh, al; ret 0x59b0; 
0x08057fe6: add bh, al; ret 0x5f80; 
0x0805b1bd: add bh, al; ret 0x60a0; 
0x0805196b: add bh, al; ret 0x62d4; 
0x0805af0e: add bh, al; ret 0x65c8; 
0x0804a269: add bh, al; ret 0x688c; 
0x080a33dd: add bh, al; ret 0x6ee4; 
0x0807a57c: add bh, al; ret 0x6f28; 
0x08088b05: add bh, al; ret 0x6f68; 
0x0804abad: add bh, al; ret 0x6f74; 
0x0808f3bc: add bh, al; ret 0xffd0; 
0x080502ff: add bh, al; ret 0xffe0; 
0x08050b03: add bh, al; ret; 
0x08049012: add bh, al; rol byte ptr [eax], 0; add byte ptr [eax], al; test eax, eax; je 0x101f; call eax; 
0x080ad11d: add bh, al; rol dword ptr [eax], 0x5a; push cs; or bh, al; ret; 
0x0809c062: add bh, al; sar dword ptr [edi + ebp*2], 0xe; or bh, al; ret 0x4da0; 
0x080791b2: add bh, al; shl byte ptr [eax + 0x6f], 0xe; or byte ptr [ebx + 0xfc08500], cl; inc esp; ret 0x66c3; 
0x080924e7: add bh, al; test dword ptr [ebx + edi*8 - 1], ebx; jmp dword ptr [eax]; 
0x08055c0f: add bh, al; test dword ptr [ebx + edi*8 - 1], edx; call dword ptr [eax]; 
0x08076b6f: add bh, al; test dword ptr [edi + edi*8 - 1], esi; call dword ptr [eax]; 
0x0808f62f: add bh, al; test dword ptr [edi + esi*8 - 1], ebp; call dword ptr [ebx]; 
0x08051ae1: add bh, al; test dword ptr [edi + esi*8 - 1], edi; call dword ptr [ebx]; 
0x0805304c: add bh, al; test dword ptr [edi + esi*8 - 1], esp; call dword ptr [eax]; 
0x08074b92: add bh, bh; add byte ptr [ecx + eax + 0x40], dh; pop edi; pop esi; ret; 
0x080749ee: add bh, bh; add byte ptr [ecx + eax + 0x40], dh; pop edi; ret; 
0x08081b8b: add bh, bh; dec dword ptr [edi]; test byte ptr [edx], ah; add eax, dword ptr [eax]; add bh, dh; ret; 
0x08061f1c: add bh, bh; idiv edi; mov dword ptr [eax + 0x4c4], edx; lea edx, [eax - 0x80650]; mov dword ptr [eax + 0x4c0], edx; ret; 
0x0805965e: add bh, bh; je 0x11686; adc bh, bh; je 0x1168a; adc byte ptr [ebx + 0x5724247c], cl; call dword ptr [ebx + 0x40]; 
0x0807eff2: add bh, bh; je 0x3701a; pop esp; push dword ptr [esp + 0x64]; call edi; 
0x0807f5e1: add bh, bh; je 0x37609; pop esp; push dword ptr [esp + 0x64]; call edi; 
0x0807fb4e: add bh, bh; je 0x37b76; pop esp; push dword ptr [esp + 0x64]; call edi; 
0x08080177: add bh, bh; je 0x3819f; pushal; push dword ptr [esp + 0x68]; call edi; 
0x080806f3: add bh, bh; je 0x3871b; pop esp; push dword ptr [esp + 0x64]; call edi; 
0x08080e76: add bh, bh; je 0x38e9e; pop eax; push dword ptr [esp + 0x58]; call edi; 
0x08081933: add bh, bh; je 0x3995b; pushal; push dword ptr [esp + 0x60]; call edi; 
0x080826bc: add bh, bh; je 0x3a6e4; pushal; push dword ptr [esp + 0x60]; call edi; 
0x0808325c: add bh, bh; je 0x3b284; pop esp; push dword ptr [esp + 0x5c]; call edi; 
0x08083b73: add bh, bh; je 0x3bb9b; push 0x682474ff; call edi; 
0x0808461b: add bh, bh; je 0x3c643; pop esp; push dword ptr [esp + 0x5c]; call edi; 
0x08084f3e: add bh, bh; je 0x3cf66; push 0x682474ff; call edi; 
0x08098e50: add bh, bh; je 0x50e78; sub al, 0xe8; in al, dx; std; jmp dword ptr [ebp - 0x77]; 
0x0805aab5: add bh, bh; jne 0x12a85; push ecx; push eax; push edi; call esi; 
0x0804ffbb: add bh, bh; mov eax, dword ptr ss:[esp + 0x1c]; call eax; 
0x0809e5fe: add bh, bh; xor byte ptr [ebp - 0x1c22279], cl; call dword ptr [eax - 0x18]; 
0x0807c329: add bh, byte ptr [eax - 1]; ret; 
0x08071d1c: add bh, byte ptr [ecx]; fmul dword ptr [edi]; inc edi; ret; 
0x080970e4: add bh, byte ptr [ecx]; ret 0x1a74; 
0x0809de73: add bh, byte ptr [ecx]; ret 0x860f; 
0x0808c343: add bh, byte ptr [ecx]; ret 0x8c0f; 
0x080623a5: add bh, ch; call dword ptr [eax - 1]; 
0x0807ae46: add bh, ch; dec dword ptr [ebp - 0x2d59f7d]; call dword ptr [eax - 0x73]; 
0x0807ae9d: add bh, ch; dec dword ptr [ebp - 0x2d7697d]; call dword ptr [esi + 0x56]; 
0x0807c31e: add bh, dh; fadd st(7); ret 0xffe0; 
0x080928f6: add bh, dh; fmul dword ptr [ecx - 0x48b7b]; inc edi; test dword ptr [ebx + edi*8 - 1], ebx; jmp dword ptr [eax]; 
0x080afab6: add bh, dh; ret 0; 
0x08071465: add bh, dh; ret 0x3f; 
0x08068068: add bh, dh; ret 0xf; 
0x08081b7b: add bh, dh; ret; 
0x080a93bb: add bl, bh; mov eax, dword ptr [ebp - 0x2c]; push esi; call dword ptr [eax]; 
0x08096b66: add bl, byte ptr [ebx + 0x5e]; pop edi; ret; 
0x0805ffa4: add bl, byte ptr [ebx + 0x5e]; ret; 
0x080b0c9c: add bl, byte ptr [ecx]; rol byte ptr [ebx + 0x5e5b10c4], 0x5f; ret; 
0x08096cc2: add bl, byte ptr [esi + 0x5f]; ret; 
0x08083fd6: add bl, ch; mov eax, 0xff55d2e8; dec dword ptr [ebx - 0x72cbdba4]; xor dword ptr [eax + 0x35], 0xfffffffd; call dword ptr [eax - 0x73]; 
0x08094f1f: add bl, ch; mov esi, 0xfbe9c931; loope 0x4cf27; dec dword ptr [ebp - 0x1dadb79]; call dword ptr [eax + 0x68]; 
0x080775e4: add bl, ch; ret 0xb48d; 
0x080898bd: add bl, ch; ret 0xf631; 
0x080579ae: add bl, ch; ret; 
0x08097369: add bl, ch; sbb cl, byte ptr [ebp - 0x76ffd98c]; ret; 
0x080624f7: add bl, ch; stosd dword ptr es:[edi], eax; lea esi, [esi]; call eax; 
0x08057271: add bl, ch; xchg byte ptr [ebp - 0x3067779], cl; call dword ptr [eax + 0x68]; 
0x0806f64f: add bl, dh; movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; ret; 
0x0806dddf: add bl, dh; movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x0809812f: add byte ptr [0x1ff], ah; jne 0x4fe80; xor eax, eax; pop edi; ret; 
0x08060a14: add byte ptr [0x3fc], bh; jbe 0x18a20; ret; 
0x080608e4: add byte ptr [0x80000], bh; jbe 0x188f0; ret; 
0x08082c4c: add byte ptr [0xc9e90000], al; idiv bh; dec dword ptr [ebx - 0x72cfdba4]; and dword ptr [eax + 0x37], 0xfffffffd; call dword ptr [eax + 0x68]; 
0x0809804a: add byte ptr [0xff], ah; jne 0x4fe80; xor eax, eax; pop edi; ret; 
0x08098081: add byte ptr [0xfff], ah; jne 0x4fe80; xor eax, eax; pop edi; ret; 
0x080980ba: add byte ptr [0xffff], ah; jne 0x4fe80; xor eax, eax; pop edi; ret; 
0x08060a54: add byte ptr [0xffff], bh; jbe 0x18a60; ret; 
0x08076fe8: add byte ptr [0xfffff000], bh; ja 0x2eff8; pop ebx; ret; 
0x08077018: add byte ptr [0xfffff000], bh; ja 0x2f028; pop ebx; ret; 
0x08077a94: add byte ptr [0xfffff000], bh; ja 0x2faa0; pop ebx; ret; 
0x08077b96: add byte ptr [0xfffff000], bh; ja 0x2fbb0; add esp, 4; pop ebx; pop esi; ret; 
0x08077bfb: add byte ptr [0xfffff000], bh; ja 0x2fc20; add esp, 4; pop ebx; pop esi; ret; 
0x08077c4c: add byte ptr [0xfffff000], bh; ja 0x2fc60; pop ebx; ret; 
0x08077c8c: add byte ptr [0xfffff000], bh; ja 0x2fca0; pop ebx; ret; 
0x08077cc8: add byte ptr [0xfffff000], bh; ja 0x2fcd8; pop ebx; ret; 
0x08099668: add byte ptr [0xfffff000], bh; ja 0x51678; pop ebx; ret; 
0x08099819: add byte ptr [0xfffff000], bh; ja 0x51840; add esp, 4; pop ebx; pop esi; ret; 
0x08099885: add byte ptr [0xfffff000], bh; ja 0x518a0; add esp, 4; pop ebx; pop esi; ret; 
0x080a7e76: add byte ptr [0xfffff000], bh; ja 0x5fe80; pop ebx; ret; 
0x080a7ed6: add byte ptr [0xfffff000], bh; ja 0x5fee8; pop ebx; pop esi; pop edi; ret; 
0x08076f5f: add byte ptr [0xfffff001], bh; jae 0x34310; ret; 
0x08098c20: add byte ptr [eax + 0x109], bh; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x08088a36: add byte ptr [eax + 0x10e], bh; call dword ptr gs:[0x10]; 
0x0806f31e: add byte ptr [eax + 0x1120f66], dl; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; pop edi; ret; 
0x0806dace: add byte ptr [eax + 0x1120f66], dl; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x08088a13: add byte ptr [eax + 0x14], bh; call dword ptr gs:[0x10]; 
0x08066f6f: add byte ptr [eax + 0x16], bh; add esp, 0xc; ret; 
0x0806f39e: add byte ptr [eax + 0x16f0ff3], dl; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x0806db4e: add byte ptr [eax + 0x16f0ff3], dl; movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x08098c6f: add byte ptr [eax + 0x193], bh; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0807e24e: add byte ptr [eax + 0x1b85b], dl; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x08069fee: add byte ptr [eax + 0x1b8], dl; add byte ptr [edi + 2], dh; neg eax; ret; 
0x08069f5e: add byte ptr [eax + 0x248b60f], dl; movzx eax, byte ptr [edx + 2]; sub eax, ecx; ret; 
0x0806f2ee: add byte ptr [eax + 0x289018b], dl; lea eax, [edx + 3]; pop edi; ret; 
0x0806da9e: add byte ptr [eax + 0x289018b], dl; mov eax, edi; pop edi; ret; 
0x08069f6e: add byte ptr [eax + 0x348b60f], dl; movzx eax, byte ptr [edx + 3]; sub eax, ecx; ret; 
0x080a4bf0: add byte ptr [eax + 0x36], 0xfe; call dword ptr [eax - 0x18]; 
0x08051136: add byte ptr [eax + 0x3901c083], dl; ret; 
0x0807a574: add byte ptr [eax + 0x3b850f08], ch; or byte ptr [eax], al; add bh, al; ret 0x6f28; 
0x08069f7e: add byte ptr [eax + 0x448b60f], dl; movzx eax, byte ptr [edx + 4]; sub eax, ecx; ret; 
0x080755af: add byte ptr [eax + 0x450ff0e5], al; ret 0x82eb; 
0x0806c33e: add byte ptr [eax + 0x486f0ff3], dl; ret 0xff3; 
0x0806c29e: add byte ptr [eax + 0x486f0ff3], dl; ret; 
0x08069f8e: add byte ptr [eax + 0x548b60f], dl; movzx eax, byte ptr [edx + 5]; sub eax, ecx; ret; 
0x0805edb7: add byte ptr [eax + 0x5a], bl; pop ebx; ret; 
0x0805ef1e: add byte ptr [eax + 0x5b04c483], dl; pop esi; ret; 
0x080745ee: add byte ptr [eax + 0x5b5fc031], dl; ret; 
0x0807057e: add byte ptr [eax + 0x5f01478d], dl; ret; 
0x08071c2e: add byte ptr [eax + 0x5f01c083], dl; ret; 
0x08069f9e: add byte ptr [eax + 0x648b60f], dl; movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x0806f3be: add byte ptr [eax + 0x66018b66], dl; mov dword ptr [edx], eax; lea eax, [edx + 1]; pop edi; ret; 
0x0806db6e: add byte ptr [eax + 0x66018b66], dl; mov dword ptr [edx], eax; mov eax, edi; pop edi; ret; 
0x08070411: add byte ptr [eax + 0x76850f04], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf04; 
0x08070400: add byte ptr [eax + 0x77850f02], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf02; 
0x080703ef: add byte ptr [eax + 0x78850f01], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf01; 
0x08049236: add byte ptr [eax + 0x7e], cl; pop ss; mov eax, 0xf0; lea ebx, [ebp + 0x15cc]; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x08088b44: add byte ptr [eax + 0xae], bh; call dword ptr gs:[0x10]; 
0x08088cb4: add byte ptr [eax + 0xaf], bh; mov esi, 8; call dword ptr gs:[0x10]; 
0x08071be5: add byte ptr [eax + 0xc], bh; pop edi; ret; 
0x08071b78: add byte ptr [eax + 0xf00067a], al; test dh, al; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x08071bdb: add byte ptr [eax + 0xf000b7a], al; test byte ptr [eax + eax], bh; add byte ptr [eax + 0xc], bh; pop edi; ret; 
0x08069f3e: add byte ptr [eax + 0xf08b60f], dl; mov dh, 2; sub eax, ecx; ret; 
0x0809e9de: add byte ptr [eax + 0xf0], bh; add ebx, 0x1c; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08065302: add byte ptr [eax + 0xf0], bh; call dword ptr gs:[0x10]; 
0x08050877: add byte ptr [eax + 0xf0], bh; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x0804bec6: add byte ptr [eax + 0xf0], bh; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0804bf71: add byte ptr [eax + 0xf0], bh; mov ecx, 0x81; xor esi, esi; mov edx, 1; call dword ptr gs:[0x10]; 
0x08076a09: add byte ptr [eax + 1], bh; int 0x80; 
0x0806a1af: add byte ptr [eax + 1], bh; ja 0x221b9; neg eax; ret; 
0x08098a9f: add byte ptr [eax + 1], bh; ret; 
0x08098aaf: add byte ptr [eax + 2], bh; ret; 
0x08098abf: add byte ptr [eax + 3], bh; ret; 
0x08071b3c: add byte ptr [eax + 4], bh; pop edi; ret; 
0x08098acf: add byte ptr [eax + 4], bh; ret; 
0x08098adf: add byte ptr [eax + 5], bh; ret; 
0x08098aef: add byte ptr [eax + 6], bh; ret; 
0x08098aff: add byte ptr [eax + 7], bh; ret; 
0x08071b95: add byte ptr [eax + 8], bh; pop edi; ret; 
0x080ab2b0: add byte ptr [eax + eax*8 + 0x180b8], al; add byte ptr [edi], cl; xchg eax, esp; rol dword ptr [ecx], 0xc9; call dword ptr gs:[0x10]; 
0x080b09e7: add byte ptr [eax + eax*8 - 0x3b7cd78b], al; or byte ptr [eax + 4], bh; pop ebx; ret; 
0x080609b0: add byte ptr [eax + eax], 0; ret; 
0x08098b48: add byte ptr [eax + eax], 0x8d; dec eax; add dword ptr [ebp - 0x28], esi; mov eax, ecx; ret; 
0x0804a4a9: add byte ptr [eax + ecx], 0xeb; pop es; call dword ptr [esi]; 
0x080703a9: add byte ptr [eax - 0x17af0f0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x0804c1d5: add byte ptr [eax - 0x18], dl; and al, 0x3e; sti; test dword ptr [ebx + 0x458b10c4], 0x74c0858c; adc eax, edi; ret 0x6ef4; 
0x0809f505: add byte ptr [eax - 0x18], dl; mov ah, 0x9b; cli; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x08064619: add byte ptr [eax - 0x18], dl; pushal; ret 0xffff; 
0x080a7337: add byte ptr [eax - 0x18], dl; ret 0xf58c; 
0x08098a5e: add byte ptr [eax - 0x1a7f0a78], dl; pcmpeqb mm3, qword ptr [ecx]; add eax, 2; ret; 
0x080703ba: add byte ptr [eax - 0x27af0e0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x08098b56: add byte ptr [eax - 0x37763e77], dl; ret; 
0x080703cb: add byte ptr [eax - 0x37af0c0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf40; 
0x080800ce: add byte ptr [eax - 0x397cf977], dl; add al, 0x83; rol dword ptr [ecx], 0x83; ret 0x3904; 
0x0807af8c: add byte ptr [eax - 0x3b7cfffe], 0x18; pop ebx; ret; 
0x0808fd0e: add byte ptr [eax - 0x3f7cef77], dl; add al, 0x83; ret 0x3910; 
0x080a1b3e: add byte ptr [eax - 0x3f7cf775], dl; or byte ptr [ebp + 0x39010a54], cl; ret; 
0x08097cae: add byte ptr [eax - 0x3fcea1a5], dl; pop edi; ret; 
0x08055582: add byte ptr [eax - 0x47f43], al; call dword ptr [ebx + 0xf]; 
0x0806babe: add byte ptr [eax - 0x49f0f18e], dl; add byte ptr [edi], cl; mov dh, 0x12; sub eax, edx; ret; 
0x0807aede: add byte ptr [eax - 0x4e1f00d], dl; call 0x2a7f; add eax, 0x6a117; lea eax, [eax + 0xa60]; ret; 
0x080a4cbe: add byte ptr [eax - 0x4e1f00d], dl; mov eax, dword ptr [eax + 4]; sub eax, dword ptr gs:[0]; ret; 
0x080b02de: add byte ptr [eax - 0x4e1f00d], dl; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x58]; ret; 
0x080b026e: add byte ptr [eax - 0x4e1f00d], dl; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x4c], edx; ret; 
0x0807156e: add byte ptr [eax - 0x723f43f1], dl; inc esp; adc byte ptr [eax], ah; ret; 
0x08081270: add byte ptr [eax - 0x73], dl; adc eax, 0x34; std; call dword ptr [eax - 0x18]; 
0x080a9c67: add byte ptr [eax - 0x73], dl; add dword ptr [eax + ebx*4], -2; call dword ptr [eax - 0x18]; 
0x0805d5b0: add byte ptr [eax - 0x73], dl; add dword ptr [eax], -3; cld; call dword ptr [eax - 0x18]; 
0x080877b8: add byte ptr [eax - 0x73], dl; add dword ptr [ecx], 0x3b; std; call dword ptr [eax - 0x18]; 
0x0807e083: add byte ptr [eax - 0x73], dl; add dword ptr [edx], 0x2e; std; call dword ptr [eax - 0x18]; 
0x0808878b: add byte ptr [eax - 0x73], dl; add edi, 0x41; std; call dword ptr [eax - 0x18]; 
0x0808756a: add byte ptr [eax - 0x73], dl; and dword ptr [edx + 0x3a], 0xfffffffd; call dword ptr [eax - 0x18]; 
0x0807e0d1: add byte ptr [eax - 0x73], dl; and esi, 0x2d; std; call dword ptr [eax - 0x18]; 
0x080769ec: add byte ptr [eax - 0x73], dl; cmp dword ptr [eax + 0x1a], -3; call dword ptr [eax - 0x18]; 
0x08049eb6: add byte ptr [eax - 0x73], dl; cmp dword ptr [ecx - 0x10], -4; call dword ptr [eax - 0x18]; 
0x080802d8: add byte ptr [eax - 0x73], dl; cmp dword ptr [esi], 0x34; std; call dword ptr [eax - 0x18]; 
0x080812d9: add byte ptr [eax - 0x73], dl; cmp eax, 0x34; std; call dword ptr [eax - 0x18]; 
0x080aa6eb: add byte ptr [eax - 0x73], dl; or dword ptr [ebp - 0x69], 0xfffffffe; call dword ptr [eax - 0x18]; 
0x0807f0e0: add byte ptr [eax - 0x73], dl; or dword ptr [edx], 0x34; std; call dword ptr [eax - 0x18]; 
0x08083bcf: add byte ptr [eax - 0x73], dl; or dword ptr [edx], 0x34; std; call dword ptr [eax - 0x18]; ret; 
0x08054dfc: add byte ptr [eax - 0x73], dl; push ebx; add al, 0xff; xor ecx, dword ptr [ecx - 0x49f6b]; dec dword ptr [ebp - 0x4136b]; call dword ptr [edx - 0x39]; 
0x08099fea: add byte ptr [eax - 0x73], dl; sbb dword ptr [ebp + 0x35], -2; call dword ptr [eax - 0x18]; 
0x0807f0bd: add byte ptr [eax - 0x73], dl; sbb dword ptr [ebx], 0x34; std; call dword ptr [eax - 0x18]; 
0x080862f5: add byte ptr [eax - 0x73], dl; sbb dword ptr [ecx + edi], -3; call dword ptr [eax - 0x18]; 
0x080a93e3: add byte ptr [eax - 0x73], dl; sbb dword ptr [edx - 0x6c], -2; call dword ptr [eax - 0x18]; 
0x08060349: add byte ptr [eax - 0x73], dl; sbb eax, -3; cld; call dword ptr [eax - 0x18]; 
0x0808872b: add byte ptr [eax - 0x73], dl; sbb esp, 0x41; std; call dword ptr [eax - 0x18]; 
0x080aa771: add byte ptr [eax - 0x73], dl; sub dword ptr [eax - 0x69], -2; call dword ptr [eax - 0x18]; 
0x08049eaf: add byte ptr [eax - 0x73], dl; sub dword ptr [eax], 0; add byte ptr [eax - 0x73], dl; cmp dword ptr [ecx - 0x10], -4; call dword ptr [eax - 0x18]; 
0x080769cd: add byte ptr [eax - 0x73], dl; sub dword ptr [esi], 0x1b; std; call dword ptr [eax - 0x18]; 
0x0805d5cf: add byte ptr [eax - 0x73], dl; sub edx, -4; cld; call dword ptr [eax - 0x18]; 
0x0805d5cf: add byte ptr [eax - 0x73], dl; sub edx, -4; cld; call dword ptr [eax - 0x18]; ret; 
0x080571e0: add byte ptr [eax - 0x73], dl; xchg dword ptr [ecx + edi*8], esp; cld; call dword ptr [eax - 0x18]; 
0x0807ae5a: add byte ptr [eax - 0x73], dl; xor eax, 0x29; std; call dword ptr [eax - 0x18]; 
0x0807e0ad: add byte ptr [eax - 0x73], dl; xor ebp, 0x2d; std; call dword ptr [eax - 0x18]; 
0x080b327a: add byte ptr [eax - 0x73], dl; xor ebp, 0x41; std; call dword ptr [eax - 0x18]; 
0x080b327a: add byte ptr [eax - 0x73], dl; xor ebp, 0x41; std; call dword ptr [eax - 0x18]; sbb byte ptr [esi - 7], bh; jmp dword ptr [esi - 0x70]; 
0x08080796: add byte ptr [eax - 0x73], dl; xor esi, 0x33; std; call dword ptr [eax - 0x18]; 
0x08099c9e: add byte ptr [eax - 0x74fba875], dl; inc ebp; fadd dword ptr [ebx - 0x377cf040]; add eax, dword ptr [ecx]; ret 0x458b; 
0x0806381e: add byte ptr [eax - 0x74fbb477], dl; test dword ptr [eax - 0x7d000000], eax; ret 0x8b08; 
0x0807686e: add byte ptr [eax - 0x7c03af73], dl; cli; add ecx, dword ptr [edi]; xchg eax, esi; ret 0xd284; 
0x080a4aae: add byte ptr [eax - 0x7c378a75], dl; in al, dx; or byte ptr [ebp - 0x1b3117a], cl; call dword ptr [eax - 0x73]; 
0x0807c1b6: add byte ptr [eax - 0x7c76fb73], dl; ret; 
0x080ae71e: add byte ptr [eax - 0x7cec49f1], dl; ret; 
0x08069fae: add byte ptr [eax - 0x7cf73f7d], dl; ret 0xf608; 
0x0807a0ae: add byte ptr [eax - 0x7cfbbd75], dl; ret 0xc608; 
0x080ae90e: add byte ptr [eax - 0x7cfc49f1], dl; ret; 
0x0806a30e: add byte ptr [eax - 0x7cfe49f1], dl; rol dword ptr [ecx], 0x83; ret 0xf01; 
0x08053205: add byte ptr [eax - 0x89743], al; call dword ptr [ebx + 0xf]; 
0x0808b1f6: add byte ptr [eax - 0xcf43], al; jmp dword ptr [esi + 0xf]; 
0x080b07de: add byte ptr [eax - 0xf7137d], dl; jne 0x687f2; push ebx; call dword ptr [ebp + 8]; 
0x08088c5c: add byte ptr [eax - 1], bh; ret; 
0x0807ca61: add byte ptr [eax - 1], dl; jbe 0x34a6a; call edi; 
0x0808098b: add byte ptr [eax - 1], dl; je 0x389b4; pop eax; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x080814c2: add byte ptr [eax - 1], dl; je 0x394eb; pushal; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x080821c7: add byte ptr [eax - 1], dl; je 0x3a1f0; pushal; push dword ptr [esp + 0x60]; call esi; 
0x08083686: add byte ptr [eax - 1], dl; je 0x3b6af; push 0x682474ff; mov eax, dword ptr [esp + 0x54]; call eax; 
0x08084a56: add byte ptr [eax - 1], dl; je 0x3ca7f; push 0x682474ff; mov eax, dword ptr [esp + 0x54]; call eax; 
0x080857a1: add byte ptr [eax - 1], dl; je 0x3d7ca; push eax; push dword ptr [esp + 0x50]; call esi; 
0x08068152: add byte ptr [eax], 0; add al, ch; and eax, 0x81fffe1b; ret; 
0x08083683: add byte ptr [eax], 0; add byte ptr [eax - 1], dl; je 0x3b6af; push 0x682474ff; mov eax, dword ptr [esp + 0x54]; call eax; 
0x08084a53: add byte ptr [eax], 0; add byte ptr [eax - 1], dl; je 0x3ca7f; push 0x682474ff; mov eax, dword ptr [esp + 0x54]; call eax; 
0x0805ecc3: add byte ptr [eax], 0; add byte ptr [ebx - 0x3f7acbc0], cl; jne 0x16cc0; ret; 
0x080608a2: add byte ptr [eax], 0; add byte ptr [edx + 2], bh; xor esi, esi; call dword ptr gs:[0x10]; 
0x08068153: add byte ptr [eax], al; add al, ch; and eax, 0x81fffe1b; ret; 
0x080b30eb: add byte ptr [eax], al; add al, ch; mov ebp, 0xc7fffffd; ret 0; 
0x0807aeb4: add byte ptr [eax], al; add al, ch; mov ebx, 0x838dffff; pushal; sub bh, ch; call dword ptr [eax - 0x73]; 
0x0805bce4: add byte ptr [eax], al; add bh, al; rcl ah, 0x62; push cs; or bh, al; ret 0x5f80; 
0x0804d152: add byte ptr [eax], al; add bh, al; ret 0; 
0x080a1175: add byte ptr [eax], al; add bh, al; ret 0x4d84; 
0x08057fe4: add byte ptr [eax], al; add bh, al; ret 0x5f80; 
0x08051969: add byte ptr [eax], al; add bh, al; ret 0x62d4; 
0x0804a267: add byte ptr [eax], al; add bh, al; ret 0x688c; 
0x08088b03: add byte ptr [eax], al; add bh, al; ret 0x6f68; 
0x0808f3ba: add byte ptr [eax], al; add bh, al; ret 0xffd0; 
0x08098cad: add byte ptr [eax], al; add bh, al; ret 0xffe0; 
0x08050b01: add byte ptr [eax], al; add bh, al; ret; 
0x080ad11b: add byte ptr [eax], al; add bh, al; rol dword ptr [eax], 0x5a; push cs; or bh, al; ret; 
0x080791b0: add byte ptr [eax], al; add bh, al; shl byte ptr [eax + 0x6f], 0xe; or byte ptr [ebx + 0xfc08500], cl; inc esp; ret 0x66c3; 
0x080924e5: add byte ptr [eax], al; add bh, al; test dword ptr [ebx + edi*8 - 1], ebx; jmp dword ptr [eax]; 
0x08055c0d: add byte ptr [eax], al; add bh, al; test dword ptr [ebx + edi*8 - 1], edx; call dword ptr [eax]; 
0x08076b6d: add byte ptr [eax], al; add bh, al; test dword ptr [edi + edi*8 - 1], esi; call dword ptr [eax]; 
0x0808f62d: add byte ptr [eax], al; add bh, al; test dword ptr [edi + esi*8 - 1], ebp; call dword ptr [ebx]; 
0x08051adf: add byte ptr [eax], al; add bh, al; test dword ptr [edi + esi*8 - 1], edi; call dword ptr [ebx]; 
0x08053f2e: add byte ptr [eax], al; add bh, al; test dword ptr [edi + esi*8 - 1], esp; call dword ptr [eax]; 
0x0809e5fc: add byte ptr [eax], al; add bh, bh; xor byte ptr [ebp - 0x1c22279], cl; call dword ptr [eax - 0x18]; 
0x080928f4: add byte ptr [eax], al; add bh, dh; fmul dword ptr [ecx - 0x48b7b]; inc edi; test dword ptr [ebx + edi*8 - 1], ebx; jmp dword ptr [eax]; 
0x080afab4: add byte ptr [eax], al; add bh, dh; ret 0; 
0x08071463: add byte ptr [eax], al; add bh, dh; ret 0x3f; 
0x080775e2: add byte ptr [eax], al; add bl, ch; ret 0xb48d; 
0x080898bb: add byte ptr [eax], al; add bl, ch; ret 0xf631; 
0x08097367: add byte ptr [eax], al; add bl, ch; sbb cl, byte ptr [ebp - 0x76ffd98c]; ret; 
0x080624f5: add byte ptr [eax], al; add bl, ch; stosd dword ptr es:[edi], eax; lea esi, [esi]; call eax; 
0x08098048: add byte ptr [eax], al; add byte ptr [0xff], ah; jne 0x4fe80; xor eax, eax; pop edi; ret; 
0x0809807f: add byte ptr [eax], al; add byte ptr [0xfff], ah; jne 0x4fe80; xor eax, eax; pop edi; ret; 
0x080980b8: add byte ptr [eax], al; add byte ptr [0xffff], ah; jne 0x4fe80; xor eax, eax; pop edi; ret; 
0x08076fe6: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x2eff8; pop ebx; ret; 
0x08077016: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x2f028; pop ebx; ret; 
0x08077a92: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x2faa0; pop ebx; ret; 
0x08077c4a: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x2fc60; pop ebx; ret; 
0x08077c8a: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x2fca0; pop ebx; ret; 
0x08077cc6: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x2fcd8; pop ebx; ret; 
0x08099666: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x51678; pop ebx; ret; 
0x080a7e74: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x5fe80; pop ebx; ret; 
0x08076f5d: add byte ptr [eax], al; add byte ptr [0xfffff001], bh; jae 0x34310; ret; 
0x08098c1e: add byte ptr [eax], al; add byte ptr [eax + 0x109], bh; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x08088a11: add byte ptr [eax], al; add byte ptr [eax + 0x14], bh; call dword ptr gs:[0x10]; 
0x08098c6d: add byte ptr [eax], al; add byte ptr [eax + 0x193], bh; mov ecx, edi; call dword ptr gs:[0x10]; 
0x080755ad: add byte ptr [eax], al; add byte ptr [eax + 0x450ff0e5], al; ret 0x82eb; 
0x0806c33c: add byte ptr [eax], al; add byte ptr [eax + 0x486f0ff3], dl; ret 0xff3; 
0x0805edb5: add byte ptr [eax], al; add byte ptr [eax + 0x5a], bl; pop ebx; ret; 
0x0805ef1c: add byte ptr [eax], al; add byte ptr [eax + 0x5b04c483], dl; pop esi; ret; 
0x080745ec: add byte ptr [eax], al; add byte ptr [eax + 0x5b5fc031], dl; ret; 
0x08071c2c: add byte ptr [eax], al; add byte ptr [eax + 0x5f01c083], dl; ret; 
0x080703ed: add byte ptr [eax], al; add byte ptr [eax + 0x78850f01], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf01; 
0x08088b42: add byte ptr [eax], al; add byte ptr [eax + 0xae], bh; call dword ptr gs:[0x10]; 
0x08088cb2: add byte ptr [eax], al; add byte ptr [eax + 0xaf], bh; mov esi, 8; call dword ptr gs:[0x10]; 
0x08071be3: add byte ptr [eax], al; add byte ptr [eax + 0xc], bh; pop edi; ret; 
0x08071b76: add byte ptr [eax], al; add byte ptr [eax + 0xf00067a], al; test dh, al; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x08071bd9: add byte ptr [eax], al; add byte ptr [eax + 0xf000b7a], al; test byte ptr [eax + eax], bh; add byte ptr [eax + 0xc], bh; pop edi; ret; 
0x0809e9dc: add byte ptr [eax], al; add byte ptr [eax + 0xf0], bh; add ebx, 0x1c; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08065300: add byte ptr [eax], al; add byte ptr [eax + 0xf0], bh; call dword ptr gs:[0x10]; 
0x08050875: add byte ptr [eax], al; add byte ptr [eax + 0xf0], bh; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x08076a07: add byte ptr [eax], al; add byte ptr [eax + 1], bh; int 0x80; 
0x0806a1ad: add byte ptr [eax], al; add byte ptr [eax + 1], bh; ja 0x221b9; neg eax; ret; 
0x08098a9d: add byte ptr [eax], al; add byte ptr [eax + 1], bh; ret; 
0x08071b3a: add byte ptr [eax], al; add byte ptr [eax + 4], bh; pop edi; ret; 
0x08071b93: add byte ptr [eax], al; add byte ptr [eax + 8], bh; pop edi; ret; 
0x080800cc: add byte ptr [eax], al; add byte ptr [eax - 0x397cf977], dl; add al, 0x83; rol dword ptr [ecx], 0x83; ret 0x3904; 
0x080a4cbc: add byte ptr [eax], al; add byte ptr [eax - 0x4e1f00d], dl; mov eax, dword ptr [eax + 4]; sub eax, dword ptr gs:[0]; ret; 
0x080b02dc: add byte ptr [eax], al; add byte ptr [eax - 0x4e1f00d], dl; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x58]; ret; 
0x0807156c: add byte ptr [eax], al; add byte ptr [eax - 0x723f43f1], dl; inc esp; adc byte ptr [eax], ah; ret; 
0x080a9c65: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; add dword ptr [eax + ebx*4], -2; call dword ptr [eax - 0x18]; 
0x080877b6: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; add dword ptr [ecx], 0x3b; std; call dword ptr [eax - 0x18]; 
0x080769ea: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; cmp dword ptr [eax + 0x1a], -3; call dword ptr [eax - 0x18]; 
0x08049eb4: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; cmp dword ptr [ecx - 0x10], -4; call dword ptr [eax - 0x18]; 
0x080862f3: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; sbb dword ptr [ecx + edi], -3; call dword ptr [eax - 0x18]; 
0x08060347: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; sbb eax, -3; cld; call dword ptr [eax - 0x18]; 
0x08049ead: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; sub dword ptr [eax], 0; add byte ptr [eax - 0x73], dl; cmp dword ptr [ecx - 0x10], -4; call dword ptr [eax - 0x18]; 
0x080769cb: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; sub dword ptr [esi], 0x1b; std; call dword ptr [eax - 0x18]; 
0x0807ae58: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xor eax, 0x29; std; call dword ptr [eax - 0x18]; 
0x0807686c: add byte ptr [eax], al; add byte ptr [eax - 0x7c03af73], dl; cli; add ecx, dword ptr [edi]; xchg eax, esi; ret 0xd284; 
0x080a4aac: add byte ptr [eax], al; add byte ptr [eax - 0x7c378a75], dl; in al, dx; or byte ptr [ebp - 0x1b3117a], cl; call dword ptr [eax - 0x73]; 
0x0807a0ac: add byte ptr [eax], al; add byte ptr [eax - 0x7cfbbd75], dl; ret 0xc608; 
0x080ae90c: add byte ptr [eax], al; add byte ptr [eax - 0x7cfc49f1], dl; ret; 
0x08088c5a: add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x080821c5: add byte ptr [eax], al; add byte ptr [eax - 1], dl; je 0x3a1f0; pushal; push dword ptr [esp + 0x60]; call esi; 
0x08083684: add byte ptr [eax], al; add byte ptr [eax - 1], dl; je 0x3b6af; push 0x682474ff; mov eax, dword ptr [esp + 0x54]; call eax; 
0x08084a54: add byte ptr [eax], al; add byte ptr [eax - 1], dl; je 0x3ca7f; push 0x682474ff; mov eax, dword ptr [esp + 0x54]; call eax; 
0x0808579f: add byte ptr [eax], al; add byte ptr [eax - 1], dl; je 0x3d7ca; push eax; push dword ptr [esp + 0x50]; call esi; 
0x080898b9: add byte ptr [eax], al; add byte ptr [eax], al; add bl, ch; ret 0xf631; 
0x080b2e99: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x080a4c96: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x0805ff56: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x080660aa: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x46480], cl; add byte ptr [ebp - 0x17fa8640], al; ret 0xffb2; 
0x080653e4: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0807aab7: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx - 0x7c72f314], al; pop ecx; sub ebp, edi; call dword ptr [eax - 0x18]; 
0x0805e3d2: add byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x14; pop ebx; pop esi; ret; 
0x080b2e9b: add byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x080a4c98: add byte ptr [eax], al; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x08070fbc: add byte ptr [eax], al; add byte ptr [eax], al; bsf eax, eax; add eax, edi; pop edi; ret; 
0x08070fdc: add byte ptr [eax], al; add byte ptr [eax], al; bsf eax, eax; lea eax, [eax + edi + 0x20]; pop edi; ret; 
0x08070fac: add byte ptr [eax], al; add byte ptr [eax], al; bsf eax, eax; lea eax, [eax + edi - 0x10]; pop edi; ret; 
0x0805090c: add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr [esi]; 
0x080624fc: add byte ptr [eax], al; add byte ptr [eax], al; call eax; 
0x0805fdac: add byte ptr [eax], al; add byte ptr [eax], al; endbr32; mov eax, 0xffffffff; ret; 
0x080b01cc: add byte ptr [eax], al; add byte ptr [eax], al; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x48]; ret; 
0x0805fddc: add byte ptr [eax], al; add byte ptr [eax], al; endbr32; ret; 
0x0805ee9c: add byte ptr [eax], al; add byte ptr [eax], al; endbr32; xor eax, eax; ret; 
0x080939ec: add byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x0806b7a5: add byte ptr [eax], al; add byte ptr [eax], al; jne 0x239d0; pop ebx; ret; 
0x0806b862: add byte ptr [eax], al; add byte ptr [eax], al; jne 0x239f0; pop ebx; ret; 
0x0806bdf3: add byte ptr [eax], al; add byte ptr [eax], al; jne 0x24570; pop ebx; ret; 
0x0806bc2c: add byte ptr [eax], al; add byte ptr [eax], al; jne 0x24586; pop ebx; ret; 
0x080712ac: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edx + 1]; ret; 
0x08098654: add byte ptr [eax], al; add byte ptr [eax], al; lea ebx, [eax + 4]; mov eax, ebx; pop ebx; ret; 
0x08071559: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; bsf eax, eax; lea eax, [eax + edx + 0x10]; ret; 
0x0805ee95: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; endbr32; xor eax, eax; ret; 
0x080705f8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xa]; pop edi; ret; 
0x08070608: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xb]; pop edi; ret; 
0x08070618: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xc]; pop edi; ret; 
0x08070628: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xd]; pop edi; ret; 
0x08070638: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xe]; pop edi; ret; 
0x08070588: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 2]; pop edi; ret; 
0x08070598: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 3]; pop edi; ret; 
0x080705a8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 4]; pop edi; ret; 
0x080705b8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 5]; pop edi; ret; 
0x080705c8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 6]; pop edi; ret; 
0x080705d8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 8]; pop edi; ret; 
0x080705e8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 9]; pop edi; ret; 
0x08097f58: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xa]; pop edi; ret; 
0x08097f48: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xb]; pop edi; ret; 
0x08097f38: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xd]; pop edi; ret; 
0x08097f28: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xe]; pop edi; ret; 
0x08097fc8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 1]; pop edi; ret; 
0x08097fb8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 2]; pop edi; ret; 
0x08097fa8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 3]; pop edi; ret; 
0x08097f98: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 5]; pop edi; ret; 
0x08097f88: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 6]; pop edi; ret; 
0x08097f78: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 7]; pop edi; ret; 
0x08097f68: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 9]; pop edi; ret; 
0x080712a6: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 1]; ret; 
0x08066f69: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 0x16; add esp, 0xc; ret; 
0x08098a96: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 1; ret; 
0x08098aa9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 2; ret; 
0x08098ab9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 3; ret; 
0x08098ac9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 4; ret; 
0x08098ad9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 5; ret; 
0x08098ae9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 6; ret; 
0x08098af9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 7; ret; 
0x08098a77: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; add eax, 3; ret; 
0x08071317: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 0xa]; ret; 
0x08071327: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 0xc]; ret; 
0x08071337: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 0xd]; ret; 
0x08071347: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 0xe]; ret; 
0x080712b7: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 2]; ret; 
0x080712c7: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 4]; ret; 
0x080712d7: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 5]; ret; 
0x080712e7: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 6]; ret; 
0x080712f7: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 8]; ret; 
0x08071307: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 9]; ret; 
0x08071357: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; xor eax, eax; ret; 
0x080608b9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; pop ebx; pop esi; ret; 
0x0805fc19: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; ret; 
0x08070648: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; xor eax, eax; pop edi; ret; 
0x0806a195: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; xor eax, eax; ret; 
0x08060e9e: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 0x38], ebx; pop ebx; pop esi; ret; 
0x0805ed71: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], 0; ret; 
0x0805ed78: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 8], 0; ret; 
0x08098c6c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x193; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0806a1ac: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 1; ja 0x221b9; neg eax; ret; 
0x08098a9c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 1; ret; 
0x0809365d: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [edi + eax*4 - 0x12c0]; jmp eax; 
0x080ae434: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [edx + 0x58]; add esp, 8; pop ebx; ret; 
0x08071adc: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x0805ae8c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, edi; call dword ptr gs:[0x10]; 
0x08070c0c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, edi; pop edi; ret; 
0x0804a774: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, edx; int 0x80; 
0x08054dc9: add byte ptr [eax], al; add byte ptr [eax], al; movzx eax, byte ptr [eax + edx - 0x20]; mov eax, dword ptr [edi + eax*4 - 0x1820]; jmp eax; 
0x08069f4c: add byte ptr [eax], al; add byte ptr [eax], al; movzx ecx, byte ptr [eax + 1]; movzx eax, byte ptr [edx + 1]; sub eax, ecx; ret; 
0x08071c2b: add byte ptr [eax], al; add byte ptr [eax], al; nop; add eax, 1; pop edi; ret; 
0x0807154b: add byte ptr [eax], al; add byte ptr [eax], al; nop; bsf eax, eax; add eax, edx; ret; 
0x0807156b: add byte ptr [eax], al; add byte ptr [eax], al; nop; bsf eax, eax; lea eax, [eax + edx + 0x20]; ret; 
0x0805e79a: add byte ptr [eax], al; add byte ptr [eax], al; nop; endbr32; mov eax, 0xffffffff; ret; 
0x0805fe0a: add byte ptr [eax], al; add byte ptr [eax], al; nop; endbr32; xor eax, eax; ret; 
0x080b1e5b: add byte ptr [eax], al; add byte ptr [eax], al; nop; pop ebx; ret; 
0x08049cba: add byte ptr [eax], al; add byte ptr [eax], al; nop; ret; 
0x080713bb: add byte ptr [eax], al; add byte ptr [eax], al; nop; xor eax, eax; ret; 
0x0805edb4: add byte ptr [eax], al; add byte ptr [eax], al; pop eax; pop edx; pop ebx; ret; 
0x0805ee72: add byte ptr [eax], al; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x0806baac: add byte ptr [eax], al; add byte ptr [eax], al; pop ebx; xor eax, eax; ret; 
0x080a5506: add byte ptr [eax], al; add byte ptr [eax], al; push dword ptr [esp + 0x28]; mov eax, dword ptr [esp + 0x28]; call eax; 
0x08049d4c: add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0805f08c: add byte ptr [eax], al; add byte ptr [eax], al; sub ebx, edx; lea eax, [ebx - 1]; pop ebx; ret; 
0x0806556c: add byte ptr [eax], al; add byte ptr [eax], al; sub esp, 8; push dword ptr [esp + 0x24]; push esi; call eax; 
0x08049015: add byte ptr [eax], al; add byte ptr [eax], al; test eax, eax; je 0x101f; call eax; 
0x080ab7e4: add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; pop ebx; ret; 
0x08070ccc: add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x0806a19c: add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x080a43f8: add byte ptr [eax], al; add byte ptr [eax], bh; ror byte ptr [edi], 1; test dword ptr [ebp - 0x7d000000], esi; ret; 
0x0806c55a: add byte ptr [eax], al; add byte ptr [ebp + 0x11], dh; pop ebx; ret; 
0x08076fae: add byte ptr [eax], al; add byte ptr [ebp + 0x14], dh; add esp, 0x18; pop ebx; ret; 
0x0804c03d: add byte ptr [eax], al; add byte ptr [ebp + 0x15509a], cl; add byte ptr [edx + 1], bh; call dword ptr gs:[0x10]; 
0x0804d07f: add byte ptr [eax], al; add byte ptr [ebp + 0x15a49b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0804ea09: add byte ptr [eax], al; add byte ptr [ebp + 0x15c49b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0804923c: add byte ptr [eax], al; add byte ptr [ebp + 0x15cc9d], cl; add byte ptr [ecx + 0x81], bh; call dword ptr gs:[0x10]; 
0x0809996e: add byte ptr [eax], al; add byte ptr [ebp + 0x17], dh; add esp, 0x34; pop ebx; pop esi; ret; 
0x0805f309: add byte ptr [eax], al; add byte ptr [ebp + 0x18189d], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0805dc4f: add byte ptr [eax], al; add byte ptr [ebp + 0x18189f], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x08061d1a: add byte ptr [eax], al; add byte ptr [ebp + 0x18609d], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x08061615: add byte ptr [eax], al; add byte ptr [ebp + 0x18689b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x08061ad5: add byte ptr [eax], al; add byte ptr [ebp + 0x18689d], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x08065c69: add byte ptr [eax], al; add byte ptr [ebp + 0x18689f], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x08075b92: add byte ptr [eax], al; add byte ptr [ebp + 0x187493], cl; add byte ptr [edi], cl; inc esp; ret 0x4489; 
0x0806dc7a: add byte ptr [eax], al; add byte ptr [ebp + 0x18a0076], cl; mov byte ptr [edx], al; mov eax, edx; ret; 
0x0808952d: add byte ptr [eax], al; add byte ptr [ebp + 0x1a3c9b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0808d0d1: add byte ptr [eax], al; add byte ptr [ebp + 0x1a409b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0808edbd: add byte ptr [eax], al; add byte ptr [ebp + 0x1a489b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0808f099: add byte ptr [eax], al; add byte ptr [ebp + 0x1a4c9b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0805470a: add byte ptr [eax], al; add byte ptr [ebp + 0x1b840fc0], al; or dword ptr [eax], eax; add byte ptr [ebx - 0x7a72fb14], al; sar bl, 0xff; call dword ptr [esi - 1]; 
0x0805ee96: add byte ptr [eax], al; add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; endbr32; xor eax, eax; ret; 
0x0806a196: add byte ptr [eax], al; add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; xor eax, eax; ret; 
0x0807613f: add byte ptr [eax], al; add byte ptr [ebp + 0x28], dh; add esp, 0x18; pop ebx; ret; 
0x080a4df1: add byte ptr [eax], al; add byte ptr [ebp + 0x2a], dh; add esp, 0x28; pop ebx; ret; 
0x0806b9c0: add byte ptr [eax], al; add byte ptr [ebp + 0x2b], dh; pop ebx; ret; 
0x0807a9c1: add byte ptr [eax], al; add byte ptr [ebp + 0x310874c0], al; rol byte ptr [eax - 0x6bf0ffc8], cl; ret 0xc0c7; 
0x080a9e2c: add byte ptr [eax], al; add byte ptr [ebp + 0x391074c0], al; ret 0xd975; 
0x0806213e: add byte ptr [eax], al; add byte ptr [ebp + 0x39b374d2], al; ret 0xaf74; 
0x0809c15a: add byte ptr [eax], al; add byte ptr [ebp + 0x3c60076], cl; and al, 0x83; ret; 
0x0807a1fa: add byte ptr [eax], al; add byte ptr [ebp + 0x428b0076], cl; add al, 0x83; ret 0xc608; 
0x08077af0: add byte ptr [eax], al; add byte ptr [ebp + 0x42], dh; add esp, 0x18; pop ebx; ret; 
0x0806c526: add byte ptr [eax], al; add byte ptr [ebp + 0x45], dh; pop ebx; ret; 
0x080507fa: add byte ptr [eax], al; add byte ptr [ebp + 0x478b0076], cl; cld; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x080a54ee: add byte ptr [eax], al; add byte ptr [ebp + 0x4c], dh; add esp, 0xd8; mov eax, ebx; pop ebx; ret; 
0x08064bf4: add byte ptr [eax], al; add byte ptr [ebp + 0x4e083], cl; add al, ch; push cs; fcos; jmp dword ptr [ebp - 0x5f]; 
0x08064639: add byte ptr [eax], al; add byte ptr [ebp + 0x4e09b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0806511d: add byte ptr [eax], al; add byte ptr [ebp + 0x4e09d], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x080608ba: add byte ptr [eax], al; add byte ptr [ebp + 0x5e5b0076], cl; ret; 
0x0806a1a7: add byte ptr [eax], al; add byte ptr [ebp + 0xb6], cl; add byte ptr [eax + 1], bh; ja 0x221b9; neg eax; ret; 
0x08098a97: add byte ptr [eax], al; add byte ptr [ebp + 0xb6], cl; add byte ptr [eax + 1], bh; ret; 
0x080a4ebb: add byte ptr [eax], al; add byte ptr [ebp + 0xc], dh; add esp, 0x2c; ret; 
0x080a4fc8: add byte ptr [eax], al; add byte ptr [ebp + 0xf], dh; add esp, 0x34; pop ebx; pop esi; ret; 
0x080a1ee9: add byte ptr [eax], al; add byte ptr [ebp + 0xff289c9], al; xchg eax, esp; ret; 
0x080a79fc: add byte ptr [eax], al; add byte ptr [ebp + 4], dh; add esp, 0x1c; ret; 
0x080a5272: add byte ptr [eax], al; add byte ptr [ebp + 4], dh; add esp, 0x2c; ret; 
0x08077e12: add byte ptr [eax], al; add byte ptr [ebp + 5], dh; add esp, 0x18; pop ebx; ret; 
0x080a506a: add byte ptr [eax], al; add byte ptr [ebp + 5], dh; add esp, 0x28; pop ebx; ret; 
0x080614ab: add byte ptr [eax], al; add byte ptr [ebp + 6], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x080997cd: add byte ptr [eax], al; add byte ptr [ebp + 8], dh; add esp, 0x48; movzx eax, al; pop ebx; ret; 
0x0805862a: add byte ptr [eax], al; add byte ptr [ebp - 0x137cff8a], cl; or al, 0x31; call dword ptr [esi - 0x18]; 
0x080acd27: add byte ptr [eax], al; add byte ptr [ebp - 0x1662e7d], cl; call dword ptr [eax - 0x73]; 
0x0804afe4: add byte ptr [eax], al; add byte ptr [ebp - 0x16d397d], cl; call dword ptr [esi - 1]; 
0x080a735f: add byte ptr [eax], al; add byte ptr [ebp - 0x16d4f45], cl; dec dword ptr [ecx + 0xfa6f3c6]; xchg eax, edi; ret 0xda80; 
0x0805c920: add byte ptr [eax], al; add byte ptr [ebp - 0x2077f013], al; add byte ptr [eax], al; add byte ptr [ebx + 0x94b3], cl; add bh, al; ret 0x5f80; 
0x08098655: add byte ptr [eax], al; add byte ptr [ebp - 0x2776fba8], cl; pop ebx; ret; 
0x0807fb85: add byte ptr [eax], al; add byte ptr [ebp - 0x2c79f7d], cl; call dword ptr [eax - 0x73]; 
0x08075948: add byte ptr [eax], al; add byte ptr [ebp - 0x2ea2f7d], cl; call dword ptr [eax - 0x73]; 
0x08079690: add byte ptr [eax], al; add byte ptr [ebp - 0x38388a25], al; ret; 
0x0805b05a: add byte ptr [eax], al; add byte ptr [ebp - 0x3e09ff8a], cl; and byte ptr [esi + ecx - 0x39], dh; ret; 
0x08093395: add byte ptr [eax], al; add byte ptr [ebp - 0x40b7b], cl; call dword ptr [eax - 0x73]; 
0x080acdf5: add byte ptr [eax], al; add byte ptr [ebp - 0x44b7b], cl; call dword ptr [ecx + 0x6a]; 
0x080771a8: add byte ptr [eax], al; add byte ptr [ebp - 0x47de8a40], al; add al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x08077108: add byte ptr [eax], al; add byte ptr [ebp - 0x47de8a40], al; add eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x08098a78: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; add eax, 3; ret; 
0x08070578: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edi + 1]; pop edi; ret; 
0x08070568: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edi]; pop edi; ret; 
0x08071318: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 0xa]; ret; 
0x08071328: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 0xc]; ret; 
0x08071338: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 0xd]; ret; 
0x08071348: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 0xe]; ret; 
0x080712b8: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 2]; ret; 
0x080712c8: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 4]; ret; 
0x080712d8: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 5]; ret; 
0x080712e8: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 6]; ret; 
0x080712f8: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 8]; ret; 
0x08071308: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 9]; ret; 
0x08071358: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; xor eax, eax; ret; 
0x080a17f5: add byte ptr [eax], al; add byte ptr [ebp - 0x72f4f9bc], cl; dec esp; push cs; jmp dword ptr [ecx]; 
0x080705a9: add byte ptr [eax], al; add byte ptr [ebp - 0x72ffd98c], cl; inc edi; add al, 0x5f; ret; 
0x08097f89: add byte ptr [eax], al; add byte ptr [ebp - 0x72ffd98c], cl; inc edi; cli; pop edi; ret; 
0x08097f49: add byte ptr [eax], al; add byte ptr [ebp - 0x72ffd98c], cl; inc edi; cmc; pop edi; ret; 
0x08070619: add byte ptr [eax], al; add byte ptr [ebp - 0x72ffd98c], cl; inc edi; or al, 0x5f; ret; 
0x08097f29: add byte ptr [eax], al; add byte ptr [ebp - 0x72ffd98c], cl; inc edi; pop edi; ret; 
0x08070639: add byte ptr [eax], al; add byte ptr [ebp - 0x72ffd98c], cl; inc edi; push cs; pop edi; ret; 
0x080705c9: add byte ptr [eax], al; add byte ptr [ebp - 0x72ffd98c], cl; inc edi; push es; pop edi; ret; 
0x08097f79: add byte ptr [eax], al; add byte ptr [ebp - 0x72ffd98c], cl; inc edi; stc; pop edi; ret; 
0x08097fa9: add byte ptr [eax], al; add byte ptr [ebp - 0x72ffd98c], cl; inc edi; std; pop edi; ret; 
0x08097f99: add byte ptr [eax], al; add byte ptr [ebp - 0x72ffd98c], cl; inc edi; sti; pop edi; ret; 
0x0804a274: add byte ptr [eax], al; add byte ptr [ebp - 0x76fb4fbc], cl; add al, bh; ret 0x4d88; 
0x0809491a: add byte ptr [eax], al; add byte ptr [ebp - 0x7a74ff8a], cl; cmp bl, 0xff; jmp dword ptr [ebp - 0x39]; 
0x080a7743: add byte ptr [eax], al; add byte ptr [ebp - 0x7cbb8b37], al; in al, dx; or byte ptr [ebp - 0x3da2f7d], cl; call dword ptr [eax - 0x73]; 
0x0807eae6: add byte ptr [eax], al; add byte ptr [ebp - 0x7cdc8b2e], al; in al, dx; or byte ptr [ebp - 0x669bf7d], cl; call dword ptr [eax - 0x73]; 
0x080a72b6: add byte ptr [eax], al; add byte ptr [ebp - 0x7ce28b40], al; in al, dx; or byte ptr [ebp - 0x3da2f7d], cl; call dword ptr [eax - 0x73]; 
0x08070f09: add byte ptr [eax], al; add byte ptr [ebp - 0x7cffd98c], cl; ret 0x8340; 
0x080905d6: add byte ptr [eax], al; add byte ptr [ebp - 0x8777b], cl; call dword ptr [eax - 0x73]; 
0x0806ddd9: add byte ptr [eax], al; add byte ptr [ebp - 0xcffd98c], cl; movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x08076f56: add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff001; jae 0x34310; ret; 
0x08076a00: add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; mov eax, 1; int 0x80; 
0x080995d6: add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; ret; 
0x0808cacd: add byte ptr [eax], al; add byte ptr [ebx + 0x14898114], cl; xchg byte ptr [ebx - 0x3f7c47ab], cl; add dword ptr [ecx], ebp; fidivr dword ptr [ecx]; ret 0xee7f; 
0x08070cad: add byte ptr [eax], al; add byte ptr [ebx + 0x1b720eea], al; lea eax, [edi + 0xd]; pop edi; ret; 
0x08071abd: add byte ptr [eax], al; add byte ptr [ebx + 0x1b720eef], al; lea eax, [eax + 0xd]; pop edi; ret; 
0x08070c9d: add byte ptr [eax], al; add byte ptr [ebx + 0x2b720dea], al; lea eax, [edi + 0xc]; pop edi; ret; 
0x08071aad: add byte ptr [eax], al; add byte ptr [ebx + 0x2b720def], al; lea eax, [eax + 0xc]; pop edi; ret; 
0x08070c8d: add byte ptr [eax], al; add byte ptr [ebx + 0x3b720bea], al; lea eax, [edi + 0xa]; pop edi; ret; 
0x08071a9d: add byte ptr [eax], al; add byte ptr [ebx + 0x3b720bef], al; lea eax, [eax + 0xa]; pop edi; ret; 
0x0809a0c0: add byte ptr [eax], al; add byte ptr [ebx + 0x420f02f8], al; ret; 
0x0809c248: add byte ptr [eax], al; add byte ptr [ebx + 0x430f0539], al; adc dword ptr [ecx], edi; ret 0x430f; 
0x0806700e: add byte ptr [eax], al; add byte ptr [ebx + 0x440ffff8], al; ret 0xc483; 
0x080660ac: add byte ptr [eax], al; add byte ptr [ebx + 0x46480], cl; add byte ptr [ebp - 0x17fa8640], al; ret 0xffb2; 
0x08070c7d: add byte ptr [eax], al; add byte ptr [ebx + 0x4b720aea], al; lea eax, [edi + 9]; pop edi; ret; 
0x08071a8d: add byte ptr [eax], al; add byte ptr [ebx + 0x4b720aef], al; lea eax, [eax + 9]; pop edi; ret; 
0x08056952: add byte ptr [eax], al; add byte ptr [ebx + 0x4d0f05fb], al; ret; 
0x080b083e: add byte ptr [eax], al; add byte ptr [ebx + 0x51390852], cl; or byte ptr [edi + 2], dh; sbb eax, eax; ret; 
0x0806583d: add byte ptr [eax], al; add byte ptr [ebx + 0x525104ec], al; push ebx; call eax; 
0x08098bb1: add byte ptr [eax], al; add byte ptr [ebx + 0x535708ec], al; call eax; 
0x08064295: add byte ptr [eax], al; add byte ptr [ebx + 0x598b1049], cl; add al, 0xf6; ret; 
0x08070c6d: add byte ptr [eax], al; add byte ptr [ebx + 0x5b7209ea], al; lea eax, [edi + 8]; pop edi; ret; 
0x08071a7d: add byte ptr [eax], al; add byte ptr [ebx + 0x5b7209ef], al; lea eax, [eax + 8]; pop edi; ret; 
0x0807cc72: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x0805e3d3: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x0805a6b6: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b20c4], al; pop edi; ret; 
0x0804d033: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0805ee73: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x08066fd5: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x08071add: add byte ptr [eax], al; add byte ptr [ebx + 0x5f0c2444], cl; ret; 
0x08070c5d: add byte ptr [eax], al; add byte ptr [ebx + 0x6b7207ea], al; lea eax, [edi + 6]; pop edi; ret; 
0x08071a6d: add byte ptr [eax], al; add byte ptr [ebx + 0x6b7207ef], al; lea eax, [eax + 6]; pop edi; ret; 
0x08098c00: add byte ptr [eax], al; add byte ptr [ebx + 0x6c8d08ec], al; and al, 0xc; push ebp; push ebx; call eax; 
0x0805b285: add byte ptr [eax], al; add byte ptr [ebx + 0x74ff04ec], al; and al, 0x10; push dword ptr [esp + 0x10]; push esi; call dword ptr [edi + 0x3c]; 
0x0806556d: add byte ptr [eax], al; add byte ptr [ebx + 0x74ff08ec], al; and al, 0x24; push esi; call eax; 
0x080a54a7: add byte ptr [eax], al; add byte ptr [ebx + 0x74ff0cec], al; and al, 0x28; mov edx, dword ptr [esp + 0x28]; call edx; 
0x08095891: add byte ptr [eax], al; add byte ptr [ebx + 0x949e], cl; add bh, al; ret 0x5f80; 
0x0805c928: add byte ptr [eax], al; add byte ptr [ebx + 0x94b3], cl; add bh, al; ret 0x5f80; 
0x08070cbd: add byte ptr [eax], al; add byte ptr [ebx + 0xb720fea], al; lea eax, [edi + 0xe]; pop edi; ret; 
0x08071acd: add byte ptr [eax], al; add byte ptr [ebx + 0xb720fef], al; lea eax, [eax + 0xe]; pop edi; ret; 
0x0805ae7f: add byte ptr [eax], al; add byte ptr [ebx + 2], bh; mov ecx, dword ptr [ebp - 0x38]; lea esi, [esi]; mov eax, edi; call dword ptr gs:[0x10]; 
0x08088a4e: add byte ptr [eax], al; add byte ptr [ebx + 2], bh; xor edx, edx; mov ecx, ebp; mov esi, 8; call dword ptr gs:[0x10]; 
0x080590e4: add byte ptr [eax], al; add byte ptr [ebx - 0x137c3fbb], cl; or byte ptr [edx - 1], ch; push dword ptr [ebx]; call dword ptr [eax + 0xc]; 
0x0808bd6b: add byte ptr [eax], al; add byte ptr [ebx - 0x177c03b8], cl; add al, 0x83; ret 0x3901; 
0x08099675: add byte ptr [eax], al; add byte ptr [ebx - 0x17], bl; xchg eax, edx; sub al, 0xfe; jmp dword ptr [esi - 0x70]; 
0x080a7555: add byte ptr [eax], al; add byte ptr [ebx - 0x17aff314], al; jmp esp; 
0x0804a642: add byte ptr [eax], al; add byte ptr [ebx - 0x17e3dba4], cl; ret 0x65; 
0x080a6b64: add byte ptr [eax], al; add byte ptr [ebx - 0x27fefb3c], al; jmp eax; 
0x080b0a6d: add byte ptr [eax], al; add byte ptr [ebx - 0x2d14fbbe], cl; lea esi, [esi]; xor eax, eax; ret; 
0x080ab5d6: add byte ptr [eax], al; add byte ptr [ebx - 0x38efdbbc], cl; ret 0; 
0x0804a354: add byte ptr [eax], al; add byte ptr [ebx - 0x38f3db84], cl; ret 0x68c0; 
0x080a3d51: add byte ptr [eax], al; add byte ptr [ebx - 0x3b7cfef6], al; add al, 0x5b; pop esi; ret; 
0x0804a7c1: add byte ptr [eax], al; add byte ptr [ebx - 0x3e76fd38], al; mov eax, 0x180; mov ebx, 0x3002; int 0x80; 
0x0805ecc4: add byte ptr [eax], al; add byte ptr [ebx - 0x3f7acbc0], cl; jne 0x16cc0; ret; 
0x08098f5a: add byte ptr [eax], al; add byte ptr [ebx - 0x3fcef73c], al; pop ebx; ret; 
0x08094587: add byte ptr [eax], al; add byte ptr [ebx - 0x4637b], cl; inc dword ptr [eax - 0x41273]; call dword ptr [eax]; 
0x0809312f: add byte ptr [eax], al; add byte ptr [ebx - 0x48f43], al; call dword ptr [eax]; 
0x0805505d: add byte ptr [eax], al; add byte ptr [ebx - 0x4937b], cl; jmp dword ptr [ebp - 0x39]; 
0x0805ae84: add byte ptr [eax], al; add byte ptr [ebx - 0x497237b3], cl; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, edi; call dword ptr gs:[0x10]; 
0x08094255: add byte ptr [eax], al; add byte ptr [ebx - 0x49b7b], cl; jmp dword ptr [esi - 0x70]; 
0x08058540: add byte ptr [eax], al; add byte ptr [ebx - 0x6e76a7b8], cl; mov byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x080801a0: add byte ptr [eax], al; add byte ptr [ebx - 0x72cfdba4], cl; and dword ptr [eax], 0x38; std; call dword ptr [eax - 0x73]; 
0x0808064c: add byte ptr [eax], al; add byte ptr [ebx - 0x72cfdba4], cl; and eax, 0x37; std; call dword ptr [eax - 0x73]; 
0x080890d4: add byte ptr [eax], al; add byte ptr [ebx - 0x72dfdb8c], cl; dec esi; or byte ptr [ecx], bh; ret 0x8e0f; 
0x0808de22: add byte ptr [eax], al; add byte ptr [ebx - 0x74efdbac], cl; push edx; or byte ptr [ecx - 0x7ca7dbac], cl; ret 0x3917; 
0x08076fd7: add byte ptr [eax], al; add byte ptr [ebx - 0x74efdbb4], cl; pop esp; and al, 0xc; call dword ptr gs:[0x10]; 
0x08077cb7: add byte ptr [eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x08077c37: add byte ptr [eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; push esp; and al, 0x10; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x08081dc4: add byte ptr [eax], al; add byte ptr [ebx - 0x763076fa], cl; ret 0xe083; 
0x0808292c: add byte ptr [eax], al; add byte ptr [ebx - 0x76ebdb8c], cl; ret 0x542b; 
0x0807ffdd: add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fb06], al; mov dword ptr [0x83000001], eax; rol byte ptr [ecx], 0x83; ret 0x8901; 
0x08071b80: add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x08087035: add byte ptr [eax], al; add byte ptr [ebx - 0x7c72f314], al; dec ecx; cmp bh, ch; call dword ptr [eax - 0x18]; 
0x0807aab9: add byte ptr [eax], al; add byte ptr [ebx - 0x7c72f314], al; pop ecx; sub ebp, edi; call dword ptr [eax - 0x18]; 
0x0804fd13: add byte ptr [eax], al; add byte ptr [ebx - 0x7c72f714], al; in al, dx; idiv esp; call dword ptr [eax + 0x55]; 
0x080a63b5: add byte ptr [eax], al; add byte ptr [ebx - 0x7cfb78ac], cl; ret 0x8901; 
0x080a338d: add byte ptr [eax], al; add byte ptr [ebx - 0x7cfbdbac], cl; ret 0x3901; 
0x0809e9e1: add byte ptr [eax], al; add byte ptr [ebx - 0x7e46e33d], al; add byte ptr [eax], al; add byte ptr [edx + 1], bh; call dword ptr gs:[0x10]; 
0x08090e6a: add byte ptr [eax], al; add byte ptr [ebx - 0x8bf43], al; call dword ptr [eax]; 
0x08095c79: add byte ptr [eax], al; add byte ptr [ebx - 0xa8fb14], al; jne 0x4dc8b; push esi; call dword ptr [ebx + 0x1c]; 
0x0805740b: add byte ptr [eax], al; add byte ptr [ebx - 0xacfb14], al; je 0xf439; cmp al, 0x56; call dword ptr [edx + 0x1c]; 
0x0804a956: add byte ptr [eax], al; add byte ptr [ebx - 0xe8b7144], cl; cld; inc dword ptr [ecx]; idiv dword ptr [esi]; jmp edi; 
0x08077b0a: add byte ptr [eax], al; add byte ptr [ecx + 0x10], bh; call dword ptr gs:[0x10]; 
0x08066cc5: add byte ptr [eax], al; add byte ptr [ecx + 0x1baeb], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x080628e5: add byte ptr [eax], al; add byte ptr [ecx + 0x1bafb], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x080a9acd: add byte ptr [eax], al; add byte ptr [ecx + 0x21490], cl; add byte ptr [ecx + 0x408b9104], cl; or al, 0x83; ret 0x8501; 
0x08088a2b: add byte ptr [eax], al; add byte ptr [ecx + 0x24948bc1], cl; xor byte ptr [ecx], al; add byte ptr [eax], al; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x080793a9: add byte ptr [eax], al; add byte ptr [ecx + 0x31442444], cl; ror byte ptr [ebx - 0x7297db84], 0x83; jnp 0x313ad; cld; call dword ptr [eax - 0x73]; 
0x080b2805: add byte ptr [eax], al; add byte ptr [ecx + 0x314c245c], cl; fcmovnb st(0), st(7); ret; 
0x08060e9f: add byte ptr [eax], al; add byte ptr [ecx + 0x5e5b3858], cl; ret; 
0x08058608: add byte ptr [eax], al; add byte ptr [ecx + 0x5f5e5bf8], cl; ret; 
0x080a97a5: add byte ptr [eax], al; add byte ptr [ecx + 0x75c984e9], cl; push -0x39; ret 0x6eec; 
0x0806089e: add byte ptr [eax], al; add byte ptr [ecx + 0x80], bh; mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x0804c038: add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; lea ebx, [edx + 0x1550]; mov edx, 1; call dword ptr gs:[0x10]; 
0x08066cc0: add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov ebx, ebp; mov edx, 1; call dword ptr gs:[0x10]; 
0x080628e0: add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov ebx, edi; mov edx, 1; call dword ptr gs:[0x10]; 
0x080493b4: add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x08050957: add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x080991d6: add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; mov ebx, edi; call dword ptr gs:[0x10]; 
0x08050b9d: add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; mov esi, edi; call dword ptr gs:[0x10]; 
0x08066a7f: add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, edi; call dword ptr gs:[0x10]; 
0x0804bf74: add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; xor esi, esi; mov edx, 1; call dword ptr gs:[0x10]; 
0x08049c41: add byte ptr [eax], al; add byte ptr [ecx + 0x9b3bcc3], al; add byte ptr [ebp - 0x9a10f7d], cl; call dword ptr [eax - 0x73]; 
0x080946e7: add byte ptr [eax], al; add byte ptr [ecx + 0xdafb], al; add byte ptr [edi], cl; dec ebp; ret; 
0x08088a1d: add byte ptr [eax], al; add byte ptr [ecx + 0xe0b8c3], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x08063d36: add byte ptr [eax], al; add byte ptr [ecx + 0xf64247c], cl; inc edi; ret 0x4c89; 
0x080a543b: add byte ptr [eax], al; add byte ptr [ecx - 0x38f3dbbc], cl; ret; 
0x08093552: add byte ptr [eax], al; add byte ptr [ecx - 0x4a773], cl; inc edi; test dword ptr [ebx + edi*8 - 1], ebx; jmp dword ptr [eax]; 
0x08093046: add byte ptr [eax], al; add byte ptr [ecx - 0x4a77b], cl; ljmp [ecx]; ret 0x8d8b; 
0x08055f73: add byte ptr [eax], al; add byte ptr [ecx - 0x4b77b], cl; ljmp [ecx]; ret 0x45e9; 
0x08080826: add byte ptr [eax], al; add byte ptr [ecx - 0x72d3dbb4], cl; dec ebp; and byte ptr [ecx - 0x9cfdbb4], cl; ret 0x7501; 
0x080ad1b3: add byte ptr [eax], al; add byte ptr [ecx - 0x74e3db84], cl; push eax; or byte ptr [ecx], al; ret 0xd789; 
0x080a5430: add byte ptr [eax], al; add byte ptr [ecx - 0x74e7dbb4], cl; mov word ptr [eax + ebp*8], fs; add byte ptr [eax], al; add byte ptr [ecx - 0x38f3dbbc], cl; ret; 
0x08049f2e: add byte ptr [eax], al; add byte ptr [ecx - 0x765df027], cl; push esi; or al, 0x89; ret 0xeac1; 
0x08083a2d: add byte ptr [eax], al; add byte ptr [ecx - 0x769fdbbc], cl; ret 0xe9e9; 
0x080669c1: add byte ptr [eax], al; add byte ptr [ecx - 0x76f7dbbc], cl; ret; 
0x0807cef7: add byte ptr [eax], al; add byte ptr [ecx - 0x7c7227bb], cl; nop; jnp 0x34efb; call dword ptr [eax - 0x77]; 
0x0809c4d5: add byte ptr [eax], al; add byte ptr [ecx - 0x7ceb7ab4], cl; rol byte ptr [ecx], 0x39; ret 0xf575; 
0x08082820: add byte ptr [eax], al; add byte ptr [ecx - 0x7cf51439], cl; ret; 
0x0809b035: add byte ptr [eax], al; add byte ptr [ecx - 0xbf7b], cl; jmp dword ptr [esi - 0x70]; 
0x080752ad: add byte ptr [eax], al; add byte ptr [ecx - 1], bh; cmovb eax, ecx; ret; 
0x0807538a: add byte ptr [eax], al; add byte ptr [ecx], ah; ret 0x2474; 
0x080706b5: add byte ptr [eax], al; add byte ptr [ecx], al; clc; add eax, ecx; pop edi; ret; 
0x080b0f96: add byte ptr [eax], al; add byte ptr [ecx], al; ret 0x44c7; 
0x080aea3a: add byte ptr [eax], al; add byte ptr [ecx], al; ret 0x9689; 
0x080aeb4e: add byte ptr [eax], al; add byte ptr [ecx], al; ret 0x9789; 
0x0805bd8e: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x830f; 
0x08095a79: add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x08086eb1: add byte ptr [eax], al; add byte ptr [ecx], ch; call 0xf06ec3d; dec edi; ret 0xc301; 
0x08063557: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x1c8d; 
0x08093ea2: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x8589; 
0x0808acce: add byte ptr [eax], al; add byte ptr [ecx], ch; ret; 
0x0804a76c: add byte ptr [eax], al; add byte ptr [ecx], dh; fisttp dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; mov eax, edx; int 0x80; 
0x0804bf79: add byte ptr [eax], al; add byte ptr [ecx], dh; idiv byte ptr [edx + 1]; call dword ptr gs:[0x10]; 
0x08099c8f: add byte ptr [eax], al; add byte ptr [ecx], dh; imul byte ptr [ecx]; ret 0x5589; 
0x080a1855: add byte ptr [eax], al; add byte ptr [ecx], dh; leave; lea ebx, [edi - 0x1b7e5]; call dword ptr gs:[0x10]; 
0x08079c51: add byte ptr [eax], al; add byte ptr [ecx], dh; leave; lea ebx, [edi - 0x2de88]; int 0x80; 
0x080661a1: add byte ptr [eax], al; add byte ptr [ecx], dh; rcr byte ptr [edx + 0x5b], 0x5e; ret; 
0x08053aaf: add byte ptr [eax], al; add byte ptr [ecx], dh; rol bh, cl; test dword ptr [edi + esi*8 - 1], esp; call dword ptr [eax]; 
0x08088a53: add byte ptr [eax], al; add byte ptr [ecx], dh; ror byte ptr [ecx + 0x8bee9], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x08074282: add byte ptr [eax], al; add byte ptr [edi + 2], dh; neg eax; add esp, 4; pop ebx; ret; 
0x08074602: add byte ptr [eax], al; add byte ptr [edi + 2], dh; neg eax; pop edi; pop ebx; ret; 
0x08069ff2: add byte ptr [eax], al; add byte ptr [edi + 2], dh; neg eax; ret; 
0x08086418: add byte ptr [eax], al; add byte ptr [edi], cl; dec eax; ret 0xc083; 
0x080946ed: add byte ptr [eax], al; add byte ptr [edi], cl; dec ebp; ret; 
0x08090941: add byte ptr [eax], al; add byte ptr [edi], cl; dec ecx; ret; 
0x0807f1d5: add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; ret 0x4489; 
0x08060aba: add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; ret 0x8189; 
0x08083581: add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; ret 0x948b; 
0x080803d4: add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; ret 0xea89; 
0x080603cb: add byte ptr [eax], al; add byte ptr [edi], cl; inc ebx; push ebx; or byte ptr [ecx + 0x29182454], cl; ret 0x5489; 
0x08066881: add byte ptr [eax], al; add byte ptr [edi], cl; inc edi; ret 0xc083; 
0x0809fc39: add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret 0x4d8b; 
0x080754f4: add byte ptr [eax], al; add byte ptr [edi], cl; lahf; ret 0xea81; 
0x080759de: add byte ptr [eax], al; add byte ptr [edi], cl; mov byte ptr [0xc247c83], al; add dword ptr [ecx - 0x76ebdbac], ecx; ret 0x4c89; 
0x080550fc: add byte ptr [eax], al; add byte ptr [edi], cl; mov dh, 0x44; adc al, ah; mov eax, dword ptr [ecx + eax*4]; jmp eax; 
0x08054d72: add byte ptr [eax], al; add byte ptr [edi], cl; mov dh, 0x44; adc al, ah; mov eax, dword ptr [edi + eax*4 - 0x1820]; jmp eax; 
0x08092daf: add byte ptr [eax], al; add byte ptr [edi], cl; mov dh, 0x44; or ah, al; mov eax, dword ptr [edi + eax*4 - 0x1240]; jmp eax; 
0x0809393f: add byte ptr [eax], al; add byte ptr [edi], cl; mov dh, 0x44; or ah, al; mov eax, dword ptr [edi + eax*4 - 0x1340]; jmp eax; 
0x08092b03: add byte ptr [eax], al; add byte ptr [edi], cl; mov dh, 0x44; or al, ah; mov eax, dword ptr [ebx + eax*4]; jmp eax; 
0x0805ad25: add byte ptr [eax], al; add byte ptr [edi], cl; mov dh, 0x45; aam 0x89; ret 0xf889; 
0x080955c5: add byte ptr [eax], al; add byte ptr [edi], cl; mov dh, 0x56; or al, 0xf6; ret 0xf01; 
0x0808fd44: add byte ptr [eax], al; add byte ptr [edi], cl; mov dh, 0x56; or al, 0xf6; ret 0xf08; 
0x08098284: add byte ptr [eax], al; add byte ptr [edi], cl; mov ebp, 0x5ff801c0; ret; 
0x08055b61: add byte ptr [eax], al; add byte ptr [edi], cl; mov esi, 0x44b60fc1; adc al, ah; mov eax, dword ptr [edi + eax*4 - 0x17a0]; jmp eax; 
0x08055ac1: add byte ptr [eax], al; add byte ptr [edi], cl; mov esi, 0x44b60fc1; adc al, ah; mov eax, dword ptr [edi + eax*4 - 0x18a0]; jmp eax; 
0x08070fbd: add byte ptr [eax], al; add byte ptr [edi], cl; mov esp, 0x5ff801c0; ret; 
0x080aeb67: add byte ptr [eax], al; add byte ptr [edi], cl; scasd eax, dword ptr es:[edi]; inc esi; add dword ptr [ecx], eax; ret 0x458b; 
0x0806c32d: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [eax + 2], edx; add byte ptr [eax], al; pop ebx; ret; 
0x0806bc2d: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [eax + 9], edx; add byte ptr [eax], al; pop ebx; ret; 
0x0806c3d8: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000001], esp; ret; 
0x0806c1f8: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000003], eax; ret; 
0x0806bcc8: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000008], esi; ret; 
0x0806c022: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ebp + 5], eax; add byte ptr [eax], al; pop ebx; ret; 
0x0806bdf4: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ebx + 7], esi; add byte ptr [eax], al; pop ebx; ret; 
0x0806befc: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ecx + 0x5b000006], eax; ret; 
0x0806be71: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [edi + eax], ecx; add byte ptr [eax], al; pop ebx; ret; 
0x08062e3a: add byte ptr [eax], al; add byte ptr [edi], cl; xchg eax, ebp; ret; 
0x080493b9: add byte ptr [eax], al; add byte ptr [edx + 1], bh; call dword ptr gs:[0x10]; 
0x080652fb: add byte ptr [eax], al; add byte ptr [edx + 1], bh; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x08050870: add byte ptr [eax], al; add byte ptr [edx + 1], bh; mov eax, 0xf0; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x0805095c: add byte ptr [eax], al; add byte ptr [edx + 1], bh; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x080991db: add byte ptr [eax], al; add byte ptr [edx + 1], bh; mov ebx, edi; call dword ptr gs:[0x10]; 
0x08050ba2: add byte ptr [eax], al; add byte ptr [edx + 1], bh; mov esi, edi; call dword ptr gs:[0x10]; 
0x0805c361: add byte ptr [eax], al; add byte ptr [edx + 1], ch; push 0; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x080608a3: add byte ptr [eax], al; add byte ptr [edx + 2], bh; xor esi, esi; call dword ptr gs:[0x10]; 
0x08049d6b: add byte ptr [eax], al; add byte ptr [edx - 0x7f], bl; ret 0xb292; 
0x0805c948: add byte ptr [eax], al; add byte ptr [edx], ch; push ebp; push edi; push ebx; call dword ptr [esi + 0x40]; 
0x0807e253: add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; ret; 
0x08074849: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; cmp ah, byte ptr [ebx - 0x35]; add cl, byte ptr [edi]; xchg eax, esp; ret 0x920f; 
0x0806805d: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; outsb dx, byte ptr [esi]; shl byte ptr [esi + 0xf], 0x70; rol byte ptr [eax], 0xf7; ret 0xf; 
0x08070ecf: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret 0xc085; 
0x08088cb7: add byte ptr [eax], al; add byte ptr [esi + 8], bh; call dword ptr gs:[0x10]; 
0x08070fcb: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; bsf eax, eax; lea eax, [eax + edi + 0x10]; pop edi; ret; 
0x0805e79b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; endbr32; mov eax, 0xffffffff; ret; 
0x0805fe1b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x0805fe0b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; endbr32; xor eax, eax; ret; 
0x0806f4eb: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, [edx]; ret; 
0x080700fb: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edx; ret; 
0x0806f4fb: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov ax, word ptr [ecx]; mov word ptr [edx], ax; lea eax, [edx + 1]; ret; 
0x0806dc8b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edx; ret; 
0x08049cbb: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; ret; 
0x0806638b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; sub esp, 8; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x10]; call eax; 
0x0807cdde: add byte ptr [eax], al; add cl, al; ret 0x8909; 
0x08053a8d: add byte ptr [eax], al; add cl, ch; ret 0xffe8; 
0x0808249d: add byte ptr [eax], al; add cl, ch; ret; 
0x080910e9: add byte ptr [eax], al; add dh, al; test dword ptr [ebx], esp; idiv edi; jmp dword ptr [eax]; 
0x0808aa45: add byte ptr [eax], al; add dh, dh; ret 0x7401; 
0x0806b46b: add byte ptr [eax], al; add dh, dh; ret 0x7501; 
0x08071860: add byte ptr [eax], al; add dh, dh; ret 0xf02; 
0x08099d01: add byte ptr [eax], al; add dh, dh; ret 0xf03; 
0x0807197c: add byte ptr [eax], al; add dh, dh; ret 0xf04; 
0x0807187d: add byte ptr [eax], al; add dh, dh; ret 0xf10; 
0x080719a6: add byte ptr [eax], al; add dh, dh; ret 0xf20; 
0x080719af: add byte ptr [eax], al; add dh, dh; ret 0xf40; 
0x08082d1d: add byte ptr [eax], al; add dh, dh; ret; 
0x080609a8: add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [eax + 0x480], edx; ret; 
0x08060958: add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [eax + 0x484], edx; ret; 
0x08060928: add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [eax + 0x498], edx; ret; 
0x080608fa: add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; ret; 
0x0805fe7d: add byte ptr [eax], al; add dword ptr [ebx + 0x181c], 1; add esp, 4; pop ebx; pop esi; ret; 
0x0805fe83: add byte ptr [eax], al; add dword ptr [ebx + 0x5e5b04c4], eax; ret; 
0x080652e5: add byte ptr [eax], al; add dword ptr [ebx + 0x5e], ebx; pop edi; pop ebp; ret; 
0x0805dc0d: add byte ptr [eax], al; add dword ptr [ebx + 0x5e], ebx; pop edi; ret; 
0x0805fefa: add byte ptr [eax], al; add dword ptr [ebx + 0x5e], ebx; ret; 
0x08089896: add byte ptr [eax], al; add dword ptr [ebx - 0x3fcefb3c], eax; pop ebx; pop esi; ret; 
0x0808d07a: add byte ptr [eax], al; add dword ptr [ecx + 0x5f5e5bf8], ecx; ret; 
0x080718c0: add byte ptr [eax], al; add eax, 0xb; pop edi; ret; 
0x080718e9: add byte ptr [eax], al; add eax, 0xf; pop edi; ret; 
0x08071873: add byte ptr [eax], al; add eax, 3; pop edi; ret; 
0x08071899: add byte ptr [eax], al; add eax, 7; pop edi; ret; 
0x080706b6: add byte ptr [eax], al; add eax, edi; add eax, ecx; pop edi; ret; 
0x0809e9e2: add byte ptr [eax], al; add ebx, 0x1c; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x080a7850: add byte ptr [eax], al; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x08049e54: add byte ptr [eax], al; add esp, 0x10; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x0805d653: add byte ptr [eax], al; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0805e3d4: add byte ptr [eax], al; add esp, 0x14; pop ebx; pop esi; ret; 
0x080a7812: add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x080514c7: add byte ptr [eax], al; add esp, 0x1c; ret; 
0x080a0f17: add byte ptr [eax], al; add esp, 0x20; mov eax, dword ptr [ebp - 0x60]; add eax, dword ptr [ebp - 0x5c]; call eax; 
0x0805a6b7: add byte ptr [eax], al; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x08050c6f: add byte ptr [eax], al; add esp, 0x28; pop ebx; ret; 
0x0804b0fc: add byte ptr [eax], al; add esp, 0x2c; ret; 
0x08066f73: add byte ptr [eax], al; add esp, 0xc; ret; 
0x080a6b65: add byte ptr [eax], al; add esp, 4; add eax, ebx; jmp eax; 
0x08077bb3: add byte ptr [eax], al; add esp, 4; pop ebx; pop esi; ret; 
0x0809697d: add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x08098f5b: add byte ptr [eax], al; add esp, 8; xor eax, eax; pop ebx; ret; 
0x080a7f24: add byte ptr [eax], al; add word ptr [edx + eax*2], 1; ret; 
0x08098018: add byte ptr [eax], al; and eax, 0xf; jne 0x4fe80; xor eax, eax; pop edi; ret; 
0x08098049: add byte ptr [eax], al; and eax, 0xff; jne 0x4fe80; xor eax, eax; pop edi; ret; 
0x08098080: add byte ptr [eax], al; and eax, 0xfff; jne 0x4fe80; xor eax, eax; pop edi; ret; 
0x080980b9: add byte ptr [eax], al; and eax, 0xffff; jne 0x4fe80; xor eax, eax; pop edi; ret; 
0x080980ce: add byte ptr [eax], al; and eax, 1; jne 0x4fe80; xor eax, eax; pop edi; ret; 
0x08070fbe: add byte ptr [eax], al; bsf eax, eax; add eax, edi; pop edi; ret; 
0x08070fde: add byte ptr [eax], al; bsf eax, eax; lea eax, [eax + edi + 0x20]; pop edi; ret; 
0x08070fae: add byte ptr [eax], al; bsf eax, eax; lea eax, [eax + edi - 0x10]; pop edi; ret; 
0x08098203: add byte ptr [eax], al; bsr eax, eax; add eax, edi; pop edi; ret; 
0x08086512: add byte ptr [eax], al; call 0x30a80; add esp, 0x18; pop ebx; ret; 
0x080ab83c: add byte ptr [eax], al; call 0x637f0; add eax, ebx; jmp eax; 
0x080a3ceb: add byte ptr [eax], al; call dword ptr [eax]; 
0x0805090e: add byte ptr [eax], al; call dword ptr [esi]; 
0x08049248: add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x080a7e6e: add byte ptr [eax], al; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x5fe80; pop ebx; ret; 
0x08076f57: add byte ptr [eax], al; call dword ptr gs:[0x10]; cmp eax, 0xfffff001; jae 0x34310; ret; 
0x08076a01: add byte ptr [eax], al; call dword ptr gs:[0x10]; mov eax, 1; int 0x80; 
0x08077f31: add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; cmp eax, 0xfffff001; jae 0x34310; ret; 
0x08077f64: add byte ptr [eax], al; call dword ptr gs:[0x10]; pop ebx; cmp eax, 0xfffff001; jae 0x34310; ret; 
0x08064be0: add byte ptr [eax], al; call dword ptr gs:[0x10]; pop ebx; pop esi; pop edi; ret; 
0x080995d7: add byte ptr [eax], al; call dword ptr gs:[0x10]; ret; 
0x080507ea: add byte ptr [eax], al; call eax; 
0x0809923d: add byte ptr [eax], al; cmovae ecx, eax; mov eax, 0xdc; mov edi, ecx; call dword ptr gs:[0x10]; 
0x08060abb: add byte ptr [eax], al; cmovne eax, edx; mov dword ptr [ecx + 0x1870], eax; ret; 
0x08088b3b: add byte ptr [eax], al; cmovne edx, eax; mov esi, 8; mov eax, 0xae; call dword ptr gs:[0x10]; 
0x08071bda: add byte ptr [eax], al; cmp byte ptr [edx + 0xb], 0; je 0x29c62; mov eax, 0xc; pop edi; ret; 
0x0806b918: add byte ptr [eax], al; cmp ch, bh; mov eax, 0; jne 0x239f0; pop ebx; ret; 
0x0806bcc2: add byte ptr [eax], al; cmp ch, bh; mov eax, 0; jne 0x24586; pop ebx; ret; 
0x0806700f: add byte ptr [eax], al; cmp eax, -1; cmove eax, edx; add esp, 0x18; pop ebx; ret; 
0x08076fe7: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x2eff8; pop ebx; ret; 
0x08077017: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x2f028; pop ebx; ret; 
0x08077a93: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x2faa0; pop ebx; ret; 
0x08077c4b: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x2fc60; pop ebx; ret; 
0x08077c8b: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x2fca0; pop ebx; ret; 
0x08077cc7: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x2fcd8; pop ebx; ret; 
0x08099667: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x51678; pop ebx; ret; 
0x080a7e75: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x5fe80; pop ebx; ret; 
0x08076f5e: add byte ptr [eax], al; cmp eax, 0xfffff001; jae 0x34310; ret; 
0x08060f9a: add byte ptr [eax], al; cmp edx, ecx; jne 0x18fa9; add esp, 8; pop ebx; ret; 
0x0807cbde: add byte ptr [eax], al; endbr32; call 0x2a7f; add eax, 0x68417; mov eax, dword ptr [eax + 0x1fa0]; ret; 
0x0805fdae: add byte ptr [eax], al; endbr32; mov eax, 0xffffffff; ret; 
0x080b01ce: add byte ptr [eax], al; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x48]; ret; 
0x0805fdde: add byte ptr [eax], al; endbr32; ret; 
0x0805ee9e: add byte ptr [eax], al; endbr32; xor eax, eax; ret; 
0x08049c64: add byte ptr [eax], al; hlt; mov ebx, dword ptr [esp]; ret; 
0x080749ed: add byte ptr [eax], al; inc dword ptr [eax]; je 0x2c9f4; inc eax; pop edi; ret; 
0x0804a7d1: add byte ptr [eax], al; int 0x80; 
0x08069ff3: add byte ptr [eax], al; ja 0x21ff9; neg eax; ret; 
0x0806a1b3: add byte ptr [eax], al; ja 0x221b9; neg eax; ret; 
0x0806a37b: add byte ptr [eax], al; ja 0x22381; neg eax; ret; 
0x0806b9f4: add byte ptr [eax], al; ja 0x239fa; neg eax; ret; 
0x0806baa3: add byte ptr [eax], al; ja 0x23aa9; neg eax; ret; 
0x0806c58a: add byte ptr [eax], al; ja 0x24590; neg eax; ret; 
0x08074283: add byte ptr [eax], al; ja 0x2c289; neg eax; add esp, 4; pop ebx; ret; 
0x08074603: add byte ptr [eax], al; ja 0x2c609; neg eax; pop edi; pop ebx; ret; 
0x080a7f1c: add byte ptr [eax], al; jae 0x5ff2b; mov edx, dword ptr [ecx + 0x1b68]; add word ptr [edx + eax*2], 1; ret; 
0x08060a18: add byte ptr [eax], al; jbe 0x18a20; ret; 
0x08060a58: add byte ptr [eax], al; jbe 0x18a60; ret; 
0x080939ee: add byte ptr [eax], al; jmp eax; 
0x0805fb36: add byte ptr [eax], al; jne 0x17b48; sub edx, dword ptr [eax + 0xc]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x080614ac: add byte ptr [eax], al; jne 0x194b6; add esp, 0x14; pop ebx; pop esi; ret; 
0x0806b7a7: add byte ptr [eax], al; jne 0x239d0; pop ebx; ret; 
0x0806b864: add byte ptr [eax], al; jne 0x239f0; pop ebx; ret; 
0x0806bdf5: add byte ptr [eax], al; jne 0x24570; pop ebx; ret; 
0x0806bc2e: add byte ptr [eax], al; jne 0x24586; pop ebx; ret; 
0x08076140: add byte ptr [eax], al; jne 0x2e16c; add esp, 0x18; pop ebx; ret; 
0x08076faf: add byte ptr [eax], al; jne 0x2efc7; add esp, 0x18; pop ebx; ret; 
0x08077af1: add byte ptr [eax], al; jne 0x2fb37; add esp, 0x18; pop ebx; ret; 
0x08077e13: add byte ptr [eax], al; jne 0x2fe1c; add esp, 0x18; pop ebx; ret; 
0x08077e53: add byte ptr [eax], al; jne 0x2fe78; shr eax, 0xc; mov ebp, eax; mov eax, 0xc0; call dword ptr gs:[0x10]; 
0x0808898d: add byte ptr [eax], al; jne 0x40996; add esp, 0x18; pop ebx; ret; 
0x0809804e: add byte ptr [eax], al; jne 0x4fe80; xor eax, eax; pop edi; ret; 
0x080997ce: add byte ptr [eax], al; jne 0x517da; add esp, 0x48; movzx eax, al; pop ebx; ret; 
0x0809996f: add byte ptr [eax], al; jne 0x5198a; add esp, 0x34; pop ebx; pop esi; ret; 
0x080a4df2: add byte ptr [eax], al; jne 0x5ce20; add esp, 0x28; pop ebx; ret; 
0x080a4ebc: add byte ptr [eax], al; jne 0x5cecc; add esp, 0x2c; ret; 
0x080a4fc9: add byte ptr [eax], al; jne 0x5cfdc; add esp, 0x34; pop ebx; pop esi; ret; 
0x080a506b: add byte ptr [eax], al; jne 0x5d074; add esp, 0x28; pop ebx; ret; 
0x080a517c: add byte ptr [eax], al; jne 0x5d18c; add esp, 0x2c; ret; 
0x080a5273: add byte ptr [eax], al; jne 0x5d27b; add esp, 0x2c; ret; 
0x080a54ef: add byte ptr [eax], al; jne 0x5d53f; add esp, 0xd8; mov eax, ebx; pop ebx; ret; 
0x080a79fd: add byte ptr [eax], al; jne 0x5fa05; add esp, 0x1c; ret; 
0x080a7b10: add byte ptr [eax], al; jne 0x5fb18; add esp, 0x2c; ret; 
0x080aba18: add byte ptr [eax], al; jne 0x63a20; add esp, 0x2c; ret; 
0x080adb33: add byte ptr [eax], al; jne 0x65b3c; add esp, 0x28; pop ebx; ret; 
0x080719f9: add byte ptr [eax], al; lea eax, [eax + 0xb]; pop edi; ret; 
0x08071a22: add byte ptr [eax], al; lea eax, [eax + 0xf]; pop edi; ret; 
0x08071a37: add byte ptr [eax], al; lea eax, [eax + 1]; pop edi; ret; 
0x08071a47: add byte ptr [eax], al; lea eax, [eax + 2]; pop edi; ret; 
0x0807198f: add byte ptr [eax], al; lea eax, [eax + 3]; pop edi; ret; 
0x08071a57: add byte ptr [eax], al; lea eax, [eax + 4]; pop edi; ret; 
0x080719c2: add byte ptr [eax], al; lea eax, [eax + 7]; pop edi; ret; 
0x080704c4: add byte ptr [eax], al; lea eax, [edi + 0xb]; pop edi; ret; 
0x0807047e: add byte ptr [eax], al; lea eax, [edi + 0xf]; pop edi; ret; 
0x08070c27: add byte ptr [eax], al; lea eax, [edi + 1]; pop edi; ret; 
0x08070c37: add byte ptr [eax], al; lea eax, [edi + 2]; pop edi; ret; 
0x08070421: add byte ptr [eax], al; lea eax, [edi + 3]; pop edi; ret; 
0x08070c47: add byte ptr [eax], al; lea eax, [edi + 4]; pop edi; ret; 
0x080703db: add byte ptr [eax], al; lea eax, [edi + 7]; pop edi; ret; 
0x08097ea1: add byte ptr [eax], al; lea eax, [edi - 0x10]; pop edi; ret; 
0x08097ec6: add byte ptr [eax], al; lea eax, [edi - 0xc]; pop edi; ret; 
0x08097f19: add byte ptr [eax], al; lea eax, [edi - 4]; pop edi; ret; 
0x08097ef0: add byte ptr [eax], al; lea eax, [edi - 8]; pop edi; ret; 
0x08071270: add byte ptr [eax], al; lea eax, [edx + 0xb]; ret; 
0x08071299: add byte ptr [eax], al; lea eax, [edx + 0xf]; ret; 
0x080712ae: add byte ptr [eax], al; lea eax, [edx + 1]; ret; 
0x08071223: add byte ptr [eax], al; lea eax, [edx + 3]; ret; 
0x08071246: add byte ptr [eax], al; lea eax, [edx + 7]; ret; 
0x08098656: add byte ptr [eax], al; lea ebx, [eax + 4]; mov eax, ebx; pop ebx; ret; 
0x0804923d: add byte ptr [eax], al; lea ebx, [ebp + 0x15cc]; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x0805f30a: add byte ptr [eax], al; lea ebx, [ebp + 0x1818]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08061d1b: add byte ptr [eax], al; lea ebx, [ebp + 0x1860]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08061ad6: add byte ptr [eax], al; lea ebx, [ebp + 0x1868]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0806511e: add byte ptr [eax], al; lea ebx, [ebp + 0x4e0]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0804d080: add byte ptr [eax], al; lea ebx, [ebx + 0x15a4]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0804ea0a: add byte ptr [eax], al; lea ebx, [ebx + 0x15c4]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08061616: add byte ptr [eax], al; lea ebx, [ebx + 0x1868]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0808952e: add byte ptr [eax], al; lea ebx, [ebx + 0x1a3c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0808d0d2: add byte ptr [eax], al; lea ebx, [ebx + 0x1a40]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0808edbe: add byte ptr [eax], al; lea ebx, [ebx + 0x1a48]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0808f09a: add byte ptr [eax], al; lea ebx, [ebx + 0x1a4c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0806463a: add byte ptr [eax], al; lea ebx, [ebx + 0x4e0]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0805dc50: add byte ptr [eax], al; lea ebx, [edi + 0x1818]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08065c6a: add byte ptr [eax], al; lea ebx, [edi + 0x1868]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0804c03e: add byte ptr [eax], al; lea ebx, [edx + 0x1550]; mov edx, 1; call dword ptr gs:[0x10]; 
0x0804a48c: add byte ptr [eax], al; lea ecx, [esp + 0x40]; int 0x80; 
0x080ab0cf: add byte ptr [eax], al; lea ecx, [esp + 0x40]; mov eax, 0x180; mov ebx, 0x3005; call dword ptr gs:[0x10]; 
0x08061f24: add byte ptr [eax], al; lea edx, [eax - 0x80650]; mov dword ptr [eax + 0x4c0], edx; ret; 
0x0807155b: add byte ptr [eax], al; lea esi, [esi]; bsf eax, eax; lea eax, [eax + edx + 0x10]; ret; 
0x0805fd8a: add byte ptr [eax], al; lea esi, [esi]; endbr32; mov eax, 0xffffffff; mov edx, 0xffffffff; ret; 
0x0805ee97: add byte ptr [eax], al; lea esi, [esi]; endbr32; xor eax, eax; ret; 
0x080705fa: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xa]; pop edi; ret; 
0x0807060a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xb]; pop edi; ret; 
0x0807061a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xc]; pop edi; ret; 
0x0807062a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xd]; pop edi; ret; 
0x0807063a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xe]; pop edi; ret; 
0x0807058a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 2]; pop edi; ret; 
0x0807059a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 3]; pop edi; ret; 
0x080705aa: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 4]; pop edi; ret; 
0x080705ba: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 5]; pop edi; ret; 
0x080705ca: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 6]; pop edi; ret; 
0x080705da: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 8]; pop edi; ret; 
0x080705ea: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 9]; pop edi; ret; 
0x08097f5a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xa]; pop edi; ret; 
0x08097f4a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xb]; pop edi; ret; 
0x08097f3a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xd]; pop edi; ret; 
0x08097f2a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xe]; pop edi; ret; 
0x08097fca: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 1]; pop edi; ret; 
0x08097fba: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 2]; pop edi; ret; 
0x08097faa: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 3]; pop edi; ret; 
0x08097f9a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 5]; pop edi; ret; 
0x08097f8a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 6]; pop edi; ret; 
0x08097f7a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 7]; pop edi; ret; 
0x08097f6a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 9]; pop edi; ret; 
0x080712a8: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 1]; ret; 
0x0806dc7b: add byte ptr [eax], al; lea esi, [esi]; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edx; ret; 
0x08066f6b: add byte ptr [eax], al; lea esi, [esi]; mov eax, 0x16; add esp, 0xc; ret; 
0x0806a1a8: add byte ptr [eax], al; lea esi, [esi]; mov eax, 1; ja 0x221b9; neg eax; ret; 
0x08098a98: add byte ptr [eax], al; lea esi, [esi]; mov eax, 1; ret; 
0x08098aab: add byte ptr [eax], al; lea esi, [esi]; mov eax, 2; ret; 
0x08098abb: add byte ptr [eax], al; lea esi, [esi]; mov eax, 3; ret; 
0x08098acb: add byte ptr [eax], al; lea esi, [esi]; mov eax, 4; ret; 
0x08098adb: add byte ptr [eax], al; lea esi, [esi]; mov eax, 5; ret; 
0x08098aeb: add byte ptr [eax], al; lea esi, [esi]; mov eax, 6; ret; 
0x08098afb: add byte ptr [eax], al; lea esi, [esi]; mov eax, 7; ret; 
0x080507fb: add byte ptr [eax], al; lea esi, [esi]; mov eax, dword ptr [edi - 4]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0806f64b: add byte ptr [eax], al; lea esi, [esi]; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; ret; 
0x0806ddda: add byte ptr [eax], al; lea esi, [esi]; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x08098a79: add byte ptr [eax], al; lea esi, [esi]; nop; add eax, 3; ret; 
0x08070579: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edi + 1]; pop edi; ret; 
0x08070569: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edi]; pop edi; ret; 
0x08071319: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 0xa]; ret; 
0x08071329: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 0xc]; ret; 
0x08071339: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 0xd]; ret; 
0x08071349: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 0xe]; ret; 
0x080712b9: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 2]; ret; 
0x080712c9: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 4]; ret; 
0x080712d9: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 5]; ret; 
0x080712e9: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 6]; ret; 
0x080712f9: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 8]; ret; 
0x08071309: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 9]; ret; 
0x08071359: add byte ptr [eax], al; lea esi, [esi]; nop; xor eax, eax; ret; 
0x080608bb: add byte ptr [eax], al; lea esi, [esi]; pop ebx; pop esi; ret; 
0x0805fc1b: add byte ptr [eax], al; lea esi, [esi]; ret; 
0x0807064a: add byte ptr [eax], al; lea esi, [esi]; xor eax, eax; pop edi; ret; 
0x0806a197: add byte ptr [eax], al; lea esi, [esi]; xor eax, eax; ret; 
0x08061079: add byte ptr [eax], al; lock dec dword ptr [ecx + 0xae8df2]; add byte ptr [eax], dl; add byte ptr [ecx], ch; ret 0x850f; 
0x0805ff50: add byte ptr [eax], al; mov dword ptr [eax + 0x1820], 0; ret; 
0x08060ea0: add byte ptr [eax], al; mov dword ptr [eax + 0x38], ebx; pop ebx; pop esi; ret; 
0x080609ac: add byte ptr [eax], al; mov dword ptr [eax + 0x480], edx; ret; 
0x0806095c: add byte ptr [eax], al; mov dword ptr [eax + 0x484], edx; ret; 
0x0806092c: add byte ptr [eax], al; mov dword ptr [eax + 0x498], edx; ret; 
0x0805ed73: add byte ptr [eax], al; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], 0; ret; 
0x0805ed7a: add byte ptr [eax], al; mov dword ptr [eax + 8], 0; ret; 
0x080a51ef: add byte ptr [eax], al; mov dword ptr [eax], edx; add esp, 4; pop ebx; pop esi; ret; 
0x080a77de: add byte ptr [eax], al; mov dword ptr [eax], edx; add esp, 8; pop ebx; ret; 
0x080a72de: add byte ptr [eax], al; mov dword ptr [ebx + 0x1a98], eax; add esp, 8; pop ebx; ret; 
0x080a7a65: add byte ptr [eax], al; mov dword ptr [ebx + 0xc], eax; add esp, 0x24; pop ebx; pop esi; ret; 
0x080a4d87: add byte ptr [eax], al; mov dword ptr [ebx + 0xc], eax; add esp, 0x28; pop ebx; ret; 
0x080608f4: add byte ptr [eax], al; mov dword ptr [edx + 0x4a0], 1; ret; 
0x080abb76: add byte ptr [eax], al; mov dword ptr [esi + 0x10], eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x0805e3cd: add byte ptr [eax], al; mov dword ptr [esi + 0x28], 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x0805cd10: add byte ptr [eax], al; mov dword ptr [esi + 0x38], 0xffffffff; add esp, 0x14; pop ebx; pop esi; ret; 
0x080aba93: add byte ptr [eax], al; mov dword ptr [esi + 0xc], eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x080a43ab: add byte ptr [eax], al; mov dword ptr [esi + 8], 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x080888ea: add byte ptr [eax], al; mov dword ptr gs:[ecx], eax; pop ebx; ret; 
0x08098c1f: add byte ptr [eax], al; mov eax, 0x109; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x08088a35: add byte ptr [eax], al; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x08088a12: add byte ptr [eax], al; mov eax, 0x14; call dword ptr gs:[0x10]; 
0x08098c6e: add byte ptr [eax], al; mov eax, 0x193; mov ecx, edi; call dword ptr gs:[0x10]; 
0x080a2450: add byte ptr [eax], al; mov eax, 0x80e59ac; mov eax, dword ptr [eax]; call 0x59e80; add esp, 0x1c; ret; 
0x080791b1: add byte ptr [eax], al; mov eax, 0x80e6f60; mov eax, dword ptr [eax]; test eax, eax; cmove eax, edx; ret; 
0x08088b43: add byte ptr [eax], al; mov eax, 0xae; call dword ptr gs:[0x10]; 
0x08088cb3: add byte ptr [eax], al; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x08071be4: add byte ptr [eax], al; mov eax, 0xc; pop edi; ret; 
0x0809e9dd: add byte ptr [eax], al; mov eax, 0xf0; add ebx, 0x1c; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08065301: add byte ptr [eax], al; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x08050876: add byte ptr [eax], al; mov eax, 0xf0; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x0804bec5: add byte ptr [eax], al; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0804bf70: add byte ptr [eax], al; mov eax, 0xf0; mov ecx, 0x81; xor esi, esi; mov edx, 1; call dword ptr gs:[0x10]; 
0x08088c5b: add byte ptr [eax], al; mov eax, 0xffffffff; ret; 
0x08076a08: add byte ptr [eax], al; mov eax, 1; int 0x80; 
0x0806a1ae: add byte ptr [eax], al; mov eax, 1; ja 0x221b9; neg eax; ret; 
0x08098a9e: add byte ptr [eax], al; mov eax, 1; ret; 
0x08071b3b: add byte ptr [eax], al; mov eax, 4; pop edi; ret; 
0x08071b94: add byte ptr [eax], al; mov eax, 8; pop edi; ret; 
0x0805ecc5: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x34]; test eax, eax; jne 0x16cc0; ret; 
0x080590e5: add byte ptr [eax], al; mov eax, dword ptr [ebp - 0x40]; sub esp, 8; push -1; push dword ptr [ebx]; call dword ptr [eax + 0xc]; 
0x080a022d: add byte ptr [eax], al; mov eax, dword ptr [ebp - 0x68]; add esp, 0x20; lea esi, [esi]; call eax; 
0x08092abb: add byte ptr [eax], al; mov eax, dword ptr [ebx + eax*4]; jmp eax; 
0x0809365f: add byte ptr [eax], al; mov eax, dword ptr [edi + eax*4 - 0x12c0]; jmp eax; 
0x080ae436: add byte ptr [eax], al; mov eax, dword ptr [edx + 0x58]; add esp, 8; pop ebx; ret; 
0x08071ade: add byte ptr [eax], al; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x080a54f7: add byte ptr [eax], al; mov eax, ebx; pop ebx; ret; 
0x0805ae8e: add byte ptr [eax], al; mov eax, edi; call dword ptr gs:[0x10]; 
0x08058609: add byte ptr [eax], al; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x08070c0e: add byte ptr [eax], al; mov eax, edi; pop edi; ret; 
0x0804a776: add byte ptr [eax], al; mov eax, edx; int 0x80; 
0x0804a487: add byte ptr [eax], al; mov ebx, 0x3001; lea ecx, [esp + 0x40]; int 0x80; 
0x0804a7cc: add byte ptr [eax], al; mov ebx, 0x3002; int 0x80; 
0x0804a808: add byte ptr [eax], al; mov ebx, 0x3003; xor ecx, ecx; int 0x80; 
0x080ab0d8: add byte ptr [eax], al; mov ebx, 0x3005; call dword ptr gs:[0x10]; 
0x08077064: add byte ptr [eax], al; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x0805ae80: add byte ptr [eax], al; mov ebx, 2; mov ecx, dword ptr [ebp - 0x38]; lea esi, [esi]; mov eax, edi; call dword ptr gs:[0x10]; 
0x08088a4f: add byte ptr [eax], al; mov ebx, 2; xor edx, edx; mov ecx, ebp; mov esi, 8; call dword ptr gs:[0x10]; 
0x08092a6f: add byte ptr [eax], al; mov ebx, dword ptr [ebp - 0x4c0]; mov eax, dword ptr [ebx + eax*4]; jmp eax; 
0x08077afe: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x20]; lea edx, [esp + 4]; mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x08077a88: add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x080999a3: add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; int 0x80; 
0x08088a1e: add byte ptr [eax], al; mov ebx, eax; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x0805087b: add byte ptr [eax], al; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x08066cc6: add byte ptr [eax], al; mov ebx, ebp; mov edx, 1; call dword ptr gs:[0x10]; 
0x080991e1: add byte ptr [eax], al; mov ebx, edi; call dword ptr gs:[0x10]; 
0x080628e6: add byte ptr [eax], al; mov ebx, edi; mov edx, 1; call dword ptr gs:[0x10]; 
0x08077f38: add byte ptr [eax], al; mov ebx, edx; cmp eax, 0xfffff001; jae 0x34310; ret; 
0x08077b0b: add byte ptr [eax], al; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x0806089f: add byte ptr [eax], al; mov ecx, 0x80; mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x08049243: add byte ptr [eax], al; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x0804c039: add byte ptr [eax], al; mov ecx, 0x81; lea ebx, [edx + 0x1550]; mov edx, 1; call dword ptr gs:[0x10]; 
0x08066cc1: add byte ptr [eax], al; mov ecx, 0x81; mov ebx, ebp; mov edx, 1; call dword ptr gs:[0x10]; 
0x080628e1: add byte ptr [eax], al; mov ecx, 0x81; mov ebx, edi; mov edx, 1; call dword ptr gs:[0x10]; 
0x080493b5: add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08050958: add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x080991d7: add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; mov ebx, edi; call dword ptr gs:[0x10]; 
0x08050b9e: add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; mov esi, edi; call dword ptr gs:[0x10]; 
0x08066a80: add byte ptr [eax], al; mov ecx, 0x81; mov edx, edi; call dword ptr gs:[0x10]; 
0x0804bf75: add byte ptr [eax], al; mov ecx, 0x81; xor esi, esi; mov edx, 1; call dword ptr gs:[0x10]; 
0x080752ae: add byte ptr [eax], al; mov ecx, 0xffffffff; cmovb eax, ecx; ret; 
0x08058541: add byte ptr [eax], al; mov ecx, dword ptr [eax + 0x58]; mov dword ptr [ecx + 0x88], edx; ret; 
0x0805ae85: add byte ptr [eax], al; mov ecx, dword ptr [ebp - 0x38]; lea esi, [esi]; mov eax, edi; call dword ptr gs:[0x10]; 
0x08076fd8: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x08099722: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x08077cb8: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x08077c38: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x08088a2c: add byte ptr [eax], al; mov ecx, eax; mov edx, dword ptr [esp + 0x130]; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x08098c24: add byte ptr [eax], al; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x0807732e: add byte ptr [eax], al; mov ecx, edi; call dword ptr gs:[0x10]; 
0x08058539: add byte ptr [eax], al; mov ecx, edx; mov dword ptr [eax + 0x94], ecx; mov ecx, dword ptr [eax + 0x58]; mov dword ptr [ecx + 0x88], edx; ret; 
0x080a184e: add byte ptr [eax], al; mov edi, dword ptr [ebp - 0x3c]; mov eax, 0x21; xor ecx, ecx; lea ebx, [edi - 0x1b7e5]; call dword ptr gs:[0x10]; 
0x080b04a9: add byte ptr [eax], al; mov edi, dword ptr [ebp - 4]; leave; ret; 
0x08099245: add byte ptr [eax], al; mov edi, ecx; call dword ptr gs:[0x10]; 
0x080493ba: add byte ptr [eax], al; mov edx, 1; call dword ptr gs:[0x10]; 
0x080652fc: add byte ptr [eax], al; mov edx, 1; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x08050871: add byte ptr [eax], al; mov edx, 1; mov eax, 0xf0; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x0805095d: add byte ptr [eax], al; mov edx, 1; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x080991dc: add byte ptr [eax], al; mov edx, 1; mov ebx, edi; call dword ptr gs:[0x10]; 
0x08050ba3: add byte ptr [eax], al; mov edx, 1; mov esi, edi; call dword ptr gs:[0x10]; 
0x080608a4: add byte ptr [eax], al; mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x080a0360: add byte ptr [eax], al; mov edx, dword ptr [ebp - 0x64]; mov eax, dword ptr [ebp - 0x5c]; add esp, 0x20; mov dword ptr [ebp - 0x5c], edx; call eax; 
0x080b083f: add byte ptr [eax], al; mov edx, dword ptr [edx + 8]; cmp dword ptr [ecx + 8], edx; ja 0x6884b; sbb eax, eax; ret; 
0x080a3dc1: add byte ptr [eax], al; mov edx, dword ptr [esp]; mov ecx, eax; mov eax, dword ptr [esp + 4]; add esp, 0x10; jmp ecx; 
0x08066a85: add byte ptr [eax], al; mov edx, edi; call dword ptr gs:[0x10]; 
0x08088cb8: add byte ptr [eax], al; mov esi, 8; call dword ptr gs:[0x10]; 
0x08050ba8: add byte ptr [eax], al; mov esi, edi; call dword ptr gs:[0x10]; 
0x080550aa: add byte ptr [eax], al; movsx eax, cl; mov ecx, dword ptr [ebp - 0x4cc]; movzx eax, byte ptr [eax + edx - 0x20]; mov eax, dword ptr [ecx + eax*4]; jmp eax; 
0x08055b62: add byte ptr [eax], al; movsx eax, cl; movzx eax, byte ptr [eax + edx - 0x20]; mov eax, dword ptr [edi + eax*4 - 0x17a0]; jmp eax; 
0x08055ac2: add byte ptr [eax], al; movsx eax, cl; movzx eax, byte ptr [eax + edx - 0x20]; mov eax, dword ptr [edi + eax*4 - 0x18a0]; jmp eax; 
0x08092b04: add byte ptr [eax], al; movzx eax, byte ptr [eax + ecx - 0x20]; mov eax, dword ptr [ebx + eax*4]; jmp eax; 
0x080550fd: add byte ptr [eax], al; movzx eax, byte ptr [eax + edx - 0x20]; mov eax, dword ptr [ecx + eax*4]; jmp eax; 
0x08054d73: add byte ptr [eax], al; movzx eax, byte ptr [eax + edx - 0x20]; mov eax, dword ptr [edi + eax*4 - 0x1820]; jmp eax; 
0x080938f0: add byte ptr [eax], al; movzx eax, byte ptr [ebx + ecx - 0x20]; mov dword ptr [ebp - 0x494], 0; mov eax, dword ptr [edi + eax*4 - 0x12c0]; jmp eax; 
0x080939d0: add byte ptr [eax], al; movzx eax, byte ptr [ebx + ecx - 0x20]; mov dword ptr [ebp - 0x494], 1; mov eax, dword ptr [edi + eax*4 - 0x12c0]; jmp eax; 
0x08093980: add byte ptr [eax], al; movzx eax, byte ptr [ebx + ecx - 0x20]; mov dword ptr [ebp - 0x4a8], 0; mov eax, dword ptr [edi + eax*4 - 0x12c0]; jmp eax; 
0x08092a18: add byte ptr [eax], al; movzx eax, byte ptr [ebx + ecx - 0x20]; mov ebx, dword ptr [ebp - 0x4c0]; mov eax, dword ptr [ebx + eax*4]; jmp eax; 
0x08093650: add byte ptr [eax], al; movzx eax, byte ptr [edx + ecx - 0x20]; mov dword ptr [ebp - 0x494], 0; mov eax, dword ptr [edi + eax*4 - 0x12c0]; jmp eax; 
0x080938a0: add byte ptr [eax], al; movzx eax, byte ptr [edx + ecx - 0x20]; mov dword ptr [ebp - 0x494], 1; mov eax, dword ptr [edi + eax*4 - 0x12c0]; jmp eax; 
0x08092db0: add byte ptr [eax], al; movzx eax, byte ptr [edx + ecx - 0x20]; mov eax, dword ptr [edi + eax*4 - 0x1240]; jmp eax; 
0x08093940: add byte ptr [eax], al; movzx eax, byte ptr [edx + ecx - 0x20]; mov eax, dword ptr [edi + eax*4 - 0x1340]; jmp eax; 
0x08069f4e: add byte ptr [eax], al; movzx ecx, byte ptr [eax + 1]; movzx eax, byte ptr [edx + 1]; sub eax, ecx; ret; 
0x08071c2d: add byte ptr [eax], al; nop; add eax, 1; pop edi; ret; 
0x0805ef1d: add byte ptr [eax], al; nop; add esp, 4; pop ebx; pop esi; ret; 
0x0807154d: add byte ptr [eax], al; nop; bsf eax, eax; add eax, edx; ret; 
0x08070fcc: add byte ptr [eax], al; nop; bsf eax, eax; lea eax, [eax + edi + 0x10]; pop edi; ret; 
0x0807156d: add byte ptr [eax], al; nop; bsf eax, eax; lea eax, [eax + edx + 0x20]; ret; 
0x0805e79c: add byte ptr [eax], al; nop; endbr32; mov eax, 0xffffffff; ret; 
0x080a4cbd: add byte ptr [eax], al; nop; endbr32; mov eax, dword ptr [eax + 4]; sub eax, dword ptr gs:[0]; ret; 
0x0805fe1c: add byte ptr [eax], al; nop; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x080b02dd: add byte ptr [eax], al; nop; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x58]; ret; 
0x0805fe0c: add byte ptr [eax], al; nop; endbr32; xor eax, eax; ret; 
0x0806f4ec: add byte ptr [eax], al; nop; mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, [edx]; ret; 
0x080700fc: add byte ptr [eax], al; nop; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edx; ret; 
0x0806f4fc: add byte ptr [eax], al; nop; mov ax, word ptr [ecx]; mov word ptr [edx], ax; lea eax, [edx + 1]; ret; 
0x0806dc8c: add byte ptr [eax], al; nop; mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edx; ret; 
0x08088c4d: add byte ptr [eax], al; nop; mov eax, 0xffffffe0; mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; ret; 
0x080b1e5d: add byte ptr [eax], al; nop; pop ebx; ret; 
0x08049cbc: add byte ptr [eax], al; nop; ret; 
0x0806638c: add byte ptr [eax], al; nop; sub esp, 8; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x10]; call eax; 
0x080745ed: add byte ptr [eax], al; nop; xor eax, eax; pop edi; pop ebx; ret; 
0x080713bd: add byte ptr [eax], al; nop; xor eax, eax; ret; 
0x080608e6: add byte ptr [eax], al; or byte ptr [eax], al; jbe 0x188f0; ret; 
0x0809bec0: add byte ptr [eax], al; or byte ptr [ebp - 0x1c72f7d], cl; dec dword ptr [ebp - 0x1c7536d]; dec dword ptr [edi]; inc esp; ret 0x95e9; 
0x080a3d52: add byte ptr [eax], al; or dword ptr [edx], 1; add esp, 4; pop ebx; pop esi; ret; 
0x0804a7c2: add byte ptr [eax], al; or eax, 2; mov ecx, eax; mov eax, 0x180; mov ebx, 0x3002; int 0x80; 
0x08070ef6: add byte ptr [eax], al; pmovmskb eax, xmm1; bsf eax, eax; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x0805edb6: add byte ptr [eax], al; pop eax; pop edx; pop ebx; ret; 
0x08077f6b: add byte ptr [eax], al; pop ebx; cmp eax, 0xfffff001; jae 0x34310; ret; 
0x08095bc6: add byte ptr [eax], al; pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x0808a4a0: add byte ptr [eax], al; pop ebx; mov eax, esi; pop esi; pop edi; ret; 
0x0804a0ab: add byte ptr [eax], al; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0805ee74: add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x08066fd6: add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x0806b7ad: add byte ptr [eax], al; pop ebx; ret; 
0x080a2546: add byte ptr [eax], al; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x0806baae: add byte ptr [eax], al; pop ebx; xor eax, eax; ret; 
0x08071b40: add byte ptr [eax], al; pop edi; ret; 
0x080a3d92: add byte ptr [eax], al; pop edx; mov ecx, dword ptr [esp]; mov dword ptr [esp], eax; mov eax, dword ptr [esp + 4]; ret 0xc; 
0x080a4ce2: add byte ptr [eax], al; pop edx; pop ecx; pop eax; jmp dword ptr [eax]; 
0x0807e254: add byte ptr [eax], al; pop esi; pop edi; ret; 
0x08074c50: add byte ptr [eax], al; pop esi; xor eax, eax; pop ebx; ret; 
0x0805c949: add byte ptr [eax], al; push 0; push ebp; push edi; push ebx; call dword ptr [esi + 0x40]; 
0x080595f3: add byte ptr [eax], al; push 0; push ebx; push ecx; push dword ptr [esp + 0x24]; call dword ptr [edi + 0x40]; 
0x0805c13c: add byte ptr [eax], al; push 0; push edx; push eax; push esi; call dword ptr [ebx + 0x40]; 
0x08059b12: add byte ptr [eax], al; push 1; push 0; push 0; push dword ptr [esp + 0x24]; call dword ptr [ebx + 0x40]; 
0x0805c362: add byte ptr [eax], al; push 1; push 0; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x080598ad: add byte ptr [eax], al; push 2; push 0; push 0; push dword ptr [esp + 0x24]; call dword ptr [edi + 0x40]; 
0x0805c253: add byte ptr [eax], al; push 2; push 0; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x080a9e20: add byte ptr [eax], al; push dword ptr [edx + edx - 0x75]; add dword ptr [ebx + 0x1be04c1], eax; add byte ptr [eax], al; add byte ptr [ebp + 0x391074c0], al; ret 0xd975; 
0x0805965d: add byte ptr [eax], al; push dword ptr [esp + 0x10]; push dword ptr [esp + 0x10]; mov edi, dword ptr [esp + 0x24]; push edi; call dword ptr [ebx + 0x40]; 
0x0805c04b: add byte ptr [eax], al; push dword ptr [esp + 0x10]; push dword ptr [esp + 0x10]; push esi; call dword ptr [ebx + 0x40]; 
0x080a5508: add byte ptr [eax], al; push dword ptr [esp + 0x28]; mov eax, dword ptr [esp + 0x28]; call eax; 
0x0805c044: add byte ptr [eax], al; push dword ptr [esp + 0xcc]; push dword ptr [esp + 0x10]; push dword ptr [esp + 0x10]; push esi; call dword ptr [ebx + 0x40]; 
0x080857a0: add byte ptr [eax], al; push eax; push dword ptr [esp + 0x50]; push dword ptr [esp + 0x50]; call esi; 
0x0808098a: add byte ptr [eax], al; push eax; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x080821c6: add byte ptr [eax], al; push eax; push dword ptr [esp + 0x60]; push dword ptr [esp + 0x60]; call esi; 
0x080814c1: add byte ptr [eax], al; push eax; push dword ptr [esp + 0x60]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x08083685: add byte ptr [eax], al; push eax; push dword ptr [esp + 0x68]; push dword ptr [esp + 0x68]; mov eax, dword ptr [esp + 0x54]; call eax; 
0x08088dee: add byte ptr [eax], al; push ebp; push ecx; lea esi, [ecx + eax]; push esi; call edi; 
0x0809690c: add byte ptr [eax], al; push ebx; call dword ptr [eax + 0x34]; 
0x08049d4e: add byte ptr [eax], al; ret; 
0x080ab2b6: add byte ptr [eax], al; sete cl; add ecx, ecx; call dword ptr gs:[0x10]; 
0x080a93ba: add byte ptr [eax], al; sti; mov eax, dword ptr [ebp - 0x2c]; push esi; call dword ptr [eax]; 
0x0807536d: add byte ptr [eax], al; sub eax, edx; ret; 
0x0805f08e: add byte ptr [eax], al; sub ebx, edx; lea eax, [ebx - 1]; pop ebx; ret; 
0x08071a19: add byte ptr [eax], al; sub edi, 0x10; jb 0x29ae0; lea eax, [eax + 0xf]; pop edi; ret; 
0x08071a8e: add byte ptr [eax], al; sub edi, 0xa; jb 0x29ae0; lea eax, [eax + 9]; pop edi; ret; 
0x08071a9e: add byte ptr [eax], al; sub edi, 0xb; jb 0x29ae0; lea eax, [eax + 0xa]; pop edi; ret; 
0x08071aae: add byte ptr [eax], al; sub edi, 0xd; jb 0x29ae0; lea eax, [eax + 0xc]; pop edi; ret; 
0x08071abe: add byte ptr [eax], al; sub edi, 0xe; jb 0x29ae0; lea eax, [eax + 0xd]; pop edi; ret; 
0x08071ace: add byte ptr [eax], al; sub edi, 0xf; jb 0x29ae0; lea eax, [eax + 0xe]; pop edi; ret; 
0x08071a2e: add byte ptr [eax], al; sub edi, 2; jb 0x29ae0; lea eax, [eax + 1]; pop edi; ret; 
0x08071986: add byte ptr [eax], al; sub edi, 4; jb 0x29ae0; lea eax, [eax + 3]; pop edi; ret; 
0x08071a6e: add byte ptr [eax], al; sub edi, 7; jb 0x29ae0; lea eax, [eax + 6]; pop edi; ret; 
0x080719b9: add byte ptr [eax], al; sub edi, 8; jb 0x29ae0; lea eax, [eax + 7]; pop edi; ret; 
0x08071a7e: add byte ptr [eax], al; sub edi, 9; jb 0x29ae0; lea eax, [eax + 8]; pop edi; ret; 
0x08070bf9: add byte ptr [eax], al; sub edx, 0x10; jb 0x28cd0; lea eax, [edi + 0xf]; pop edi; ret; 
0x08070c7e: add byte ptr [eax], al; sub edx, 0xa; jb 0x28cd0; lea eax, [edi + 9]; pop edi; ret; 
0x08070c8e: add byte ptr [eax], al; sub edx, 0xb; jb 0x28cd0; lea eax, [edi + 0xa]; pop edi; ret; 
0x08070bd0: add byte ptr [eax], al; sub edx, 0xc; jb 0x28cd0; lea eax, [edi + 0xb]; pop edi; ret; 
0x08070c9e: add byte ptr [eax], al; sub edx, 0xd; jb 0x28cd0; lea eax, [edi + 0xc]; pop edi; ret; 
0x08070cae: add byte ptr [eax], al; sub edx, 0xe; jb 0x28cd0; lea eax, [edi + 0xd]; pop edi; ret; 
0x08070cbe: add byte ptr [eax], al; sub edx, 0xf; jb 0x28cd0; lea eax, [edi + 0xe]; pop edi; ret; 
0x08070b65: add byte ptr [eax], al; sub edx, 4; jb 0x28cd0; lea eax, [edi + 3]; pop edi; ret; 
0x08070c5e: add byte ptr [eax], al; sub edx, 7; jb 0x28cd0; lea eax, [edi + 6]; pop edi; ret; 
0x08070b96: add byte ptr [eax], al; sub edx, 8; jb 0x28cd0; lea eax, [edi + 7]; pop edi; ret; 
0x08070c6e: add byte ptr [eax], al; sub edx, 9; jb 0x28cd0; lea eax, [edi + 8]; pop edi; ret; 
0x0805bb21: add byte ptr [eax], al; sub esp, -0x80; pop ebx; pop esi; pop edi; ret; 
0x080a54a8: add byte ptr [eax], al; sub esp, 0xc; push dword ptr [esp + 0x28]; mov edx, dword ptr [esp + 0x28]; call edx; 
0x0805eacc: add byte ptr [eax], al; sub esp, 0xc; push esi; call dword ptr [ebp + 0x30]; 
0x0805cfec: add byte ptr [eax], al; sub esp, 0xc; push esi; call dword ptr [edi + 0x44]; 
0x0805f520: add byte ptr [eax], al; sub esp, 4; push 0; push 0; push ebp; call dword ptr [ebx + 0x2c]; 
0x08090ac8: add byte ptr [eax], al; sub esp, 4; push dword ptr [ebp - 0x8a8]; push dword ptr [ebp - 0x8e8]; push dword ptr [ebp - 0x8a0]; call dword ptr [ebx + 0x1c]; 
0x0805b286: add byte ptr [eax], al; sub esp, 4; push dword ptr [esp + 0x10]; push dword ptr [esp + 0x10]; push esi; call dword ptr [edi + 0x3c]; 
0x08088e01: add byte ptr [eax], al; sub esp, 4; push ebp; push esi; push dword ptr [esp + 0x20]; call edi; 
0x0805740c: add byte ptr [eax], al; sub esp, 4; push ebx; push dword ptr [esp + 0x3c]; push esi; call dword ptr [edx + 0x1c]; 
0x0806583e: add byte ptr [eax], al; sub esp, 4; push ecx; push edx; push ebx; call eax; 
0x08095c7a: add byte ptr [eax], al; sub esp, 4; push edi; push dword ptr [ebp + 8]; push esi; call dword ptr [ebx + 0x1c]; 
0x0805c727: add byte ptr [eax], al; sub esp, 4; push edx; push ebp; push esi; call dword ptr [ebx + 0x38]; 
0x08051e70: add byte ptr [eax], al; sub esp, 4; push esi; push dword ptr [ebp - 0x898]; push dword ptr [ebp - 0x890]; call dword ptr [ebx + 0x1c]; 
0x0805329a: add byte ptr [eax], al; sub esp, 4; push esi; push dword ptr [ebp - 0x89c]; push dword ptr [ebp - 0x890]; call dword ptr [ebx + 0x1c]; 
0x080958b2: add byte ptr [eax], al; sub esp, 8; lea eax, [esp + 0x14]; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x0805bacd: add byte ptr [eax], al; sub esp, 8; lea eax, [esp + 0x24]; push eax; push esi; call dword ptr [edi + 0x48]; 
0x0805b764: add byte ptr [eax], al; sub esp, 8; lea eax, [esp + 0x34]; push eax; push esi; call dword ptr [edi + 0x48]; 
0x080593a8: add byte ptr [eax], al; sub esp, 8; lea eax, [esp + 0x3c]; push eax; push dword ptr [esp + 0x24]; call dword ptr [ebx + 0x48]; 
0x0805be06: add byte ptr [eax], al; sub esp, 8; lea eax, [esp + 0x44]; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x08098c01: add byte ptr [eax], al; sub esp, 8; lea ebp, [esp + 0xc]; push ebp; push ebx; call eax; 
0x08057fff: add byte ptr [eax], al; sub esp, 8; push 0; push edi; call dword ptr [ebx + 8]; 
0x0806556e: add byte ptr [eax], al; sub esp, 8; push dword ptr [esp + 0x24]; push esi; call eax; 
0x08098bb2: add byte ptr [eax], al; sub esp, 8; push edi; push ebx; call eax; 
0x08097f10: add byte ptr [eax], al; test ah, 0x20; jne 0x4ffb0; lea eax, [edi - 4]; pop edi; ret; 
0x08070554: add byte ptr [eax], al; test ah, 0x40; jne 0x28640; lea eax, [edi + 0xf]; pop edi; ret; 
0x080709f0: add byte ptr [eax], al; test ah, 0x40; jne 0x28b30; lea eax, [edi + 0xf]; pop edi; ret; 
0x08071290: add byte ptr [eax], al; test ah, 0x40; jne 0x29350; lea eax, [edx + 0xf]; ret; 
0x08097ee7: add byte ptr [eax], al; test ah, 2; jne 0x4ff80; lea eax, [edi - 8]; pop edi; ret; 
0x080709c7: add byte ptr [eax], al; test ah, 4; jne 0x28b00; lea eax, [edi + 0xb]; pop edi; ret; 
0x08071267: add byte ptr [eax], al; test ah, 4; jne 0x29320; lea eax, [edx + 0xb]; ret; 
0x08097ebe: add byte ptr [eax], al; test al, 0x20; jne 0x4ff50; lea eax, [edi - 0xc]; pop edi; ret; 
0x08070502: add byte ptr [eax], al; test al, 0x40; jne 0x285d0; lea eax, [edi + 7]; pop edi; ret; 
0x0807099e: add byte ptr [eax], al; test al, 0x40; jne 0x28ad0; lea eax, [edi + 7]; pop edi; ret; 
0x0807123e: add byte ptr [eax], al; test al, 0x40; jne 0x292f0; lea eax, [edx + 7]; ret; 
0x08097e99: add byte ptr [eax], al; test al, 2; jne 0x4ff20; lea eax, [edi - 0x10]; pop edi; ret; 
0x0807097b: add byte ptr [eax], al; test al, 4; jne 0x28aa0; lea eax, [edi + 3]; pop edi; ret; 
0x0807121b: add byte ptr [eax], al; test al, 4; jne 0x292c0; lea eax, [edx + 3]; ret; 
0x080ab2af: add byte ptr [eax], al; test al, al; mov eax, 0x180; sete cl; add ecx, ecx; call dword ptr gs:[0x10]; 
0x080718b7: add byte ptr [eax], al; test dh, 4; jne 0x29c5d; add eax, 0xb; pop edi; ret; 
0x080703d2: add byte ptr [eax], al; test dl, 0x40; jne 0x28650; lea eax, [edi + 7]; pop edi; ret; 
0x08071890: add byte ptr [eax], al; test dl, 0x40; jne 0x29c49; add eax, 7; pop edi; ret; 
0x08070418: add byte ptr [eax], al; test dl, 4; jne 0x28650; lea eax, [edi + 3]; pop edi; ret; 
0x0807186a: add byte ptr [eax], al; test dl, 4; jne 0x29c35; add eax, 3; pop edi; ret; 
0x080b02c3: add byte ptr [eax], al; test eax, eax; cmovne eax, dword ptr [esp + 0x1c]; add esp, 0x28; pop ebx; ret; 
0x08049017: add byte ptr [eax], al; test eax, eax; je 0x101f; call eax; 
0x08077109: add byte ptr [eax], al; test eax, eax; jne 0x2f130; mov eax, 3; call dword ptr gs:[0x10]; 
0x080771a9: add byte ptr [eax], al; test eax, eax; jne 0x2f1d0; mov eax, 4; call dword ptr gs:[0x10]; 
0x080ab7e6: add byte ptr [eax], al; xor eax, eax; pop ebx; ret; 
0x08070a76: add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x080661a2: add byte ptr [eax], al; xor eax, eax; pop edx; pop ebx; pop esi; ret; 
0x0806a19e: add byte ptr [eax], al; xor eax, eax; ret; 
0x0804a76d: add byte ptr [eax], al; xor ebx, ebx; lea esi, [esi]; mov eax, edx; int 0x80; 
0x0804a80d: add byte ptr [eax], al; xor ecx, ecx; int 0x80; 
0x080a1856: add byte ptr [eax], al; xor ecx, ecx; lea ebx, [edi - 0x1b7e5]; call dword ptr gs:[0x10]; 
0x08079c52: add byte ptr [eax], al; xor ecx, ecx; lea ebx, [edi - 0x2de88]; int 0x80; 
0x08088a54: add byte ptr [eax], al; xor edx, edx; mov ecx, ebp; mov esi, 8; call dword ptr gs:[0x10]; 
0x080608a9: add byte ptr [eax], al; xor esi, esi; call dword ptr gs:[0x10]; 
0x0809719b: add byte ptr [eax], al; xor esi, esi; mov eax, ebp; mov ecx, 0x80; call dword ptr gs:[0x10]; 
0x0804bf7a: add byte ptr [eax], al; xor esi, esi; mov edx, 1; call dword ptr gs:[0x10]; 
0x0807985f: add byte ptr [eax], bh; ret 0x1975; 
0x080a43fa: add byte ptr [eax], bh; ror byte ptr [edi], 1; test dword ptr [ebp - 0x7d000000], esi; ret; 
0x0806b919: add byte ptr [eax], bh; std; mov eax, 0; jne 0x239f0; pop ebx; ret; 
0x0806bcc3: add byte ptr [eax], bh; std; mov eax, 0; jne 0x24586; pop ebx; ret; 
0x08078e58: add byte ptr [eax], cl; add byte ptr [ecx + 0x4589d445], cl; fmul dword ptr [ebp - 0x2df2a7d]; call dword ptr [eax - 0x18]; 
0x080608e7: add byte ptr [eax], cl; add byte ptr [esi + 4], dh; ret; 
0x0808bd69: add byte ptr [eax], dh; add byte ptr [eax], al; add byte ptr [ebx - 0x177c03b8], cl; add al, 0x83; ret 0x3901; 
0x08061082: add byte ptr [eax], dl; add byte ptr [ecx], ch; ret 0x850f; 
0x0806c55c: add byte ptr [ebp + 0x11], dh; pop ebx; ret; 
0x08067223: add byte ptr [ebp + 0x12], dh; lea eax, [edx - 0x6fd70]; and ch, 2; lea edx, [edx - 0x7c470]; cmovne eax, edx; ret; 
0x08067d13: add byte ptr [ebp + 0x12], dh; lea eax, [edx - 0x70460]; and ch, 2; lea edx, [edx - 0x7acc0]; cmovne eax, edx; ret; 
0x08067dd3: add byte ptr [ebp + 0x12], dh; lea eax, [edx - 0x732d0]; and ch, 2; lea edx, [edx - 0x73240]; cmovne eax, edx; ret; 
0x08077281: add byte ptr [ebp + 0x13], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x08076fb0: add byte ptr [ebp + 0x14], dh; add esp, 0x18; pop ebx; ret; 
0x0804c03f: add byte ptr [ebp + 0x15509a], cl; add byte ptr [edx + 1], bh; call dword ptr gs:[0x10]; 
0x0804d081: add byte ptr [ebp + 0x15a49b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0804ea0b: add byte ptr [ebp + 0x15c49b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0804923e: add byte ptr [ebp + 0x15cc9d], cl; add byte ptr [ecx + 0x81], bh; call dword ptr gs:[0x10]; 
0x08099970: add byte ptr [ebp + 0x17], dh; add esp, 0x34; pop ebx; pop esi; ret; 
0x0805f30b: add byte ptr [ebp + 0x18189d], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0805dc51: add byte ptr [ebp + 0x18189f], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x08061d1c: add byte ptr [ebp + 0x18609d], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x08061617: add byte ptr [ebp + 0x18689b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x08061ad7: add byte ptr [ebp + 0x18689d], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x08065c6b: add byte ptr [ebp + 0x18689f], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x08075b94: add byte ptr [ebp + 0x187493], cl; add byte ptr [edi], cl; inc esp; ret 0x4489; 
0x0806ff8c: add byte ptr [ebp + 0x18a0076], cl; mov byte ptr [edx], al; lea eax, [edx]; pop edi; ret; 
0x0806dc7c: add byte ptr [ebp + 0x18a0076], cl; mov byte ptr [edx], al; mov eax, edx; ret; 
0x0808952f: add byte ptr [ebp + 0x1a3c9b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0808d0d3: add byte ptr [ebp + 0x1a409b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0808edbf: add byte ptr [ebp + 0x1a489b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0808f09b: add byte ptr [ebp + 0x1a4c9b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0805470c: add byte ptr [ebp + 0x1b840fc0], al; or dword ptr [eax], eax; add byte ptr [ebx - 0x7a72fb14], al; sar bl, 0xff; call dword ptr [esi - 1]; 
0x08077e54: add byte ptr [ebp + 0x21], dh; shr eax, 0xc; mov ebp, eax; mov eax, 0xc0; call dword ptr gs:[0x10]; 
0x0805ee98: add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; endbr32; xor eax, eax; ret; 
0x0806a198: add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; xor eax, eax; ret; 
0x0804aba5: add byte ptr [ebp + 0x2840fc0], al; add al, byte ptr [eax]; add bh, al; ret 0x6f74; 
0x08076141: add byte ptr [ebp + 0x28], dh; add esp, 0x18; pop ebx; ret; 
0x080a4df3: add byte ptr [ebp + 0x2a], dh; add esp, 0x28; pop ebx; ret; 
0x0806b9c2: add byte ptr [ebp + 0x2b], dh; pop ebx; ret; 
0x0804a83b: add byte ptr [ebp + 0x2e880fc0], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x38f3db84], cl; ret 0x6f84; 
0x08098ed2: add byte ptr [ebp + 0x2f], dh; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x0807a9c3: add byte ptr [ebp + 0x310874c0], al; rol byte ptr [eax - 0x6bf0ffc8], cl; ret 0xc0c7; 
0x080b32e7: add byte ptr [ebp + 0x314574c0], al; jmp dword ptr [esi - 0x70]; 
0x080a90f3: add byte ptr [ebp + 0x315074c0], al; fucomi st(3); jge 0x83063775; ret; 
0x08099560: add byte ptr [ebp + 0x36], dh; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x080a9e2e: add byte ptr [ebp + 0x391074c0], al; ret 0xd975; 
0x08062140: add byte ptr [ebp + 0x39b374d2], al; ret 0xaf74; 
0x08088cda: add byte ptr [ebp + 0x3a], dh; add esp, 0x90; pop ebx; pop esi; pop edi; ret; 
0x0809c15c: add byte ptr [ebp + 0x3c60076], cl; and al, 0x83; ret; 
0x0807a1fc: add byte ptr [ebp + 0x428b0076], cl; add al, 0x83; ret 0xc608; 
0x08077af2: add byte ptr [ebp + 0x42], dh; add esp, 0x18; pop ebx; ret; 
0x080b02c4: add byte ptr [ebp + 0x44450fc0], al; and al, 0x1c; add esp, 0x28; pop ebx; ret; 
0x0806c528: add byte ptr [ebp + 0x45], dh; pop ebx; ret; 
0x080507fc: add byte ptr [ebp + 0x478b0076], cl; cld; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x080a54f0: add byte ptr [ebp + 0x4c], dh; add esp, 0xd8; mov eax, ebx; pop ebx; ret; 
0x08064bf6: add byte ptr [ebp + 0x4e083], cl; add al, ch; push cs; fcos; jmp dword ptr [ebp - 0x5f]; 
0x08066d61: add byte ptr [ebp + 0x4e083], cl; add al, ch; ret; 
0x0806463b: add byte ptr [ebp + 0x4e09b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0806511f: add byte ptr [ebp + 0x4e09d], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x08075c02: add byte ptr [ebp + 0x50342444], cl; push dword ptr [ebp + 8]; call esi; 
0x08088def: add byte ptr [ebp + 0x51], dl; lea esi, [ecx + eax]; push esi; call edi; 
0x0805c94c: add byte ptr [ebp + 0x57], dl; push ebx; call dword ptr [esi + 0x40]; 
0x08049ee6: add byte ptr [ebp + 0x5b59f865], cl; pop ebp; lea esp, [ecx - 4]; ret; 
0x08079d2c: add byte ptr [ebp + 0x5e5b0076], cl; pop edi; pop ebp; ret; 
0x080608bc: add byte ptr [ebp + 0x5e5b0076], cl; ret; 
0x080504c9: add byte ptr [ebp + 0x5e5bf465], cl; pop edi; pop ebp; ret; 
0x080a8075: add byte ptr [ebp + 0x67], dh; add esp, 0xa0; pop ebx; pop esi; pop edi; ret; 
0x08062c74: add byte ptr [ebp + 0x6d880fc0], al; add dword ptr [eax], eax; add byte ptr [edi], cl; xchg eax, ebp; ret; 
0x08081b73: add byte ptr [ebp + 0x6f880fdb], al; add dword ptr [eax], eax; add bh, dh; ret; 
0x0804b80e: add byte ptr [ebp + 0xa840fc0], al; add al, byte ptr [eax]; add byte ptr [ebx - 0x6c72f714], al; pop ds; cld; call dword ptr [edx + 0x50]; 
0x0806a1a9: add byte ptr [ebp + 0xb6], cl; add byte ptr [eax + 1], bh; ja 0x221b9; neg eax; ret; 
0x08098a99: add byte ptr [ebp + 0xb6], cl; add byte ptr [eax + 1], bh; ret; 
0x080a4ebd: add byte ptr [ebp + 0xc], dh; add esp, 0x2c; ret; 
0x0805fb37: add byte ptr [ebp + 0xe], dh; sub edx, dword ptr [eax + 0xc]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x08097197: add byte ptr [ebp + 0xf0], bh; xor esi, esi; mov eax, ebp; mov ecx, 0x80; call dword ptr gs:[0x10]; 
0x080a4fca: add byte ptr [ebp + 0xf], dh; add esp, 0x34; pop ebx; pop esi; ret; 
0x080a33e6: add byte ptr [ebp + 0xf], dh; mov eax, 0x80e6cc8; mov edx, dword ptr [eax]; mov eax, edx; ret; 
0x080a1eeb: add byte ptr [ebp + 0xff289c9], al; xchg eax, esp; ret; 
0x0806f64c: add byte ptr [ebp + 0xff30076], cl; outsd dx, dword ptr [esi]; add ebx, esi; movq qword ptr [edx], mm0; lea eax, [edx + 0xf]; ret; 
0x080a79fe: add byte ptr [ebp + 4], dh; add esp, 0x1c; ret; 
0x080a5274: add byte ptr [ebp + 4], dh; add esp, 0x2c; ret; 
0x08077e14: add byte ptr [ebp + 5], dh; add esp, 0x18; pop ebx; ret; 
0x080a506c: add byte ptr [ebp + 5], dh; add esp, 0x28; pop ebx; ret; 
0x080614ad: add byte ptr [ebp + 6], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x080a55a4: add byte ptr [ebp + 7], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x080abb3d: add byte ptr [ebp + 8], dh; add esp, 0x24; mov eax, esi; pop ebx; pop esi; ret; 
0x080997cf: add byte ptr [ebp + 8], dh; add esp, 0x48; movzx eax, al; pop ebx; ret; 
0x0804b831: add byte ptr [ebp - 0x137cf7b0], cl; or byte ptr [ebp - 0x30cd77d], cl; call dword ptr [eax + 0x52]; 
0x080ace9c: add byte ptr [ebp - 0x137cff8a], cl; add al, 0xff; je 0x64eca; xor al, 0x57; push esi; call dword ptr [ebp]; 
0x0805862c: add byte ptr [ebp - 0x137cff8a], cl; or al, 0x31; call dword ptr [esi - 0x18]; 
0x080acd29: add byte ptr [ebp - 0x1662e7d], cl; call dword ptr [eax - 0x73]; 
0x080a8aab: add byte ptr [ebp - 0x16c617d], cl; call dword ptr [eax - 0x73]; 
0x0804afe6: add byte ptr [ebp - 0x16d397d], cl; call dword ptr [esi - 1]; 
0x080a7361: add byte ptr [ebp - 0x16d4f45], cl; dec dword ptr [ecx + 0xfa6f3c6]; xchg eax, edi; ret 0xda80; 
0x080660b4: add byte ptr [ebp - 0x17fa8640], al; ret 0xffb2; 
0x0809d3dc: add byte ptr [ebp - 0x1c33b7d], cl; call dword ptr [eax - 0x73]; 
0x08099fd8: add byte ptr [ebp - 0x1c34f7d], cl; call dword ptr [eax - 0x73]; 
0x0809cf07: add byte ptr [ebp - 0x1c8a47d], cl; call dword ptr [eax + 0x6a]; 
0x0805c922: add byte ptr [ebp - 0x2077f013], al; add byte ptr [eax], al; add byte ptr [ebx + 0x94b3], cl; add bh, al; ret 0x5f80; 
0x08098657: add byte ptr [ebp - 0x2776fba8], cl; pop ebx; ret; 
0x08098b4a: add byte ptr [ebp - 0x278afeb8], cl; mov eax, ecx; ret; 
0x0807fb87: add byte ptr [ebp - 0x2c79f7d], cl; call dword ptr [eax - 0x73]; 
0x0807f08f: add byte ptr [ebp - 0x2cc1d7d], cl; call dword ptr [eax - 0x73]; 
0x0807a278: add byte ptr [ebp - 0x2d7c07d], cl; call dword ptr [eax - 0x18]; 
0x080769bb: add byte ptr [ebp - 0x2e4977d], cl; call dword ptr [eax - 0x73]; 
0x08075ff5: add byte ptr [ebp - 0x2e5437d], cl; call dword ptr [eax - 0x73]; 
0x08075cf5: add byte ptr [ebp - 0x2e5b77d], cl; call dword ptr [eax - 0x73]; 
0x0807594a: add byte ptr [ebp - 0x2ea2f7d], cl; call dword ptr [eax - 0x73]; 
0x0805d59e: add byte ptr [ebp - 0x302437d], cl; call dword ptr [eax - 0x73]; 
0x08054601: add byte ptr [ebp - 0x3068b79], cl; call dword ptr [eax + 0x68]; 
0x08054530: add byte ptr [ebp - 0x3077f79], cl; dec dword ptr [ecx - 0x7872af05]; and al, 0xf9; cld; call dword ptr [eax - 0x18]; 
0x0809983c: add byte ptr [ebp - 0x3417ff8a], cl; sub bh, dh; inc dword ptr [ebx + 0x5e5b04c4]; ret; 
0x08079692: add byte ptr [ebp - 0x38388a25], al; ret; 
0x080a76cf: add byte ptr [ebp - 0x386e8a0a], al; ret 0; 
0x08066fcc: add byte ptr [ebp - 0x3b7cff8a], cl; add al, 0xb8; push ss; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x080791ba: add byte ptr [ebp - 0x3dbbf040], al; ret; 
0x0805b05c: add byte ptr [ebp - 0x3e09ff8a], cl; and byte ptr [esi + ecx - 0x39], dh; ret; 
0x08093397: add byte ptr [ebp - 0x40b7b], cl; call dword ptr [eax - 0x73]; 
0x08098bab: add byte ptr [ebp - 0x437bf040], al; add byte ptr [eax], al; add byte ptr [ebx + 0x535708ec], al; call eax; 
0x080acdf7: add byte ptr [ebp - 0x44b7b], cl; call dword ptr [ecx + 0x6a]; 
0x0806b9ec: add byte ptr [ebp - 0x47a4ff8a], cl; add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x239fa; neg eax; ret; 
0x080ab0d0: add byte ptr [ebp - 0x47bfdbb4], cl; add byte ptr [ecx], 0; add byte ptr [ebx + 0x3005], bh; call dword ptr gs:[0x10]; 
0x080771aa: add byte ptr [ebp - 0x47de8a40], al; add al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0807710a: add byte ptr [ebp - 0x47de8a40], al; add eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x080a4c68: add byte ptr [ebp - 0x57c00b0], cl; std; jbe 0x5cc80; add esp, 8; pop ebx; ret; 
0x08098a7a: add byte ptr [ebp - 0x6fffd98c], cl; add eax, 3; ret; 
0x0807057a: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edi + 1]; pop edi; ret; 
0x0807056a: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edi]; pop edi; ret; 
0x0807131a: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 0xa]; ret; 
0x0807132a: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 0xc]; ret; 
0x0807133a: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 0xd]; ret; 
0x0807134a: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 0xe]; ret; 
0x080712ba: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 2]; ret; 
0x080712ca: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 4]; ret; 
0x080712da: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 5]; ret; 
0x080712ea: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 6]; ret; 
0x080712fa: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 8]; ret; 
0x0807130a: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 9]; ret; 
0x08069fea: add byte ptr [ebp - 0x6fffd98c], cl; mov eax, 1; ja 0x21ff9; neg eax; ret; 
0x0807135a: add byte ptr [ebp - 0x6fffd98c], cl; xor eax, eax; ret; 
0x080a1f3f: add byte ptr [ebp - 0x72], dh; mov edx, edi; mov ebx, dword ptr [ebp - 0x248]; lea ecx, [ebp - 0x218]; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x080a3ab9: add byte ptr [ebp - 0x72efdbb4], cl; sahf; adc cl, byte ptr [esi + edi*8 - 1]; call dword ptr gs:[0x10]; 
0x080a17f7: add byte ptr [ebp - 0x72f4f9bc], cl; dec esp; push cs; jmp dword ptr [ecx]; 
0x080705ab: add byte ptr [ebp - 0x72ffd98c], cl; inc edi; add al, 0x5f; ret; 
0x08097f8b: add byte ptr [ebp - 0x72ffd98c], cl; inc edi; cli; pop edi; ret; 
0x08097f4b: add byte ptr [ebp - 0x72ffd98c], cl; inc edi; cmc; pop edi; ret; 
0x0807061b: add byte ptr [ebp - 0x72ffd98c], cl; inc edi; or al, 0x5f; ret; 
0x08097f2b: add byte ptr [ebp - 0x72ffd98c], cl; inc edi; pop edi; ret; 
0x0807063b: add byte ptr [ebp - 0x72ffd98c], cl; inc edi; push cs; pop edi; ret; 
0x080705cb: add byte ptr [ebp - 0x72ffd98c], cl; inc edi; push es; pop edi; ret; 
0x08097f7b: add byte ptr [ebp - 0x72ffd98c], cl; inc edi; stc; pop edi; ret; 
0x08097fab: add byte ptr [ebp - 0x72ffd98c], cl; inc edi; std; pop edi; ret; 
0x08097f9b: add byte ptr [ebp - 0x72ffd98c], cl; inc edi; sti; pop edi; ret; 
0x080a76c5: add byte ptr [ebp - 0x74898b2e], al; mov bl, 0x98; sbb al, byte ptr [eax]; add byte ptr [ebp - 0x386e8a0a], al; ret 0; 
0x08096cbc: add byte ptr [ebp - 0x74a4ff8a], cl; add bl, byte ptr [esi + 0x5f]; ret; 
0x08077058: add byte ptr [ebp - 0x74cc8a40], al; dec esp; and al, 0x20; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x0806f98b: add byte ptr [ebp - 0x75ffd98c], cl; add dword ptr [eax + 0x5ff88902], ecx; ret; 
0x0809a7ed: add byte ptr [ebp - 0x76e4febc], cl; loope 0x5277e; ret 0x25; 
0x0804a276: add byte ptr [ebp - 0x76fb4fbc], cl; add al, bh; ret 0x4d88; 
0x08093c9c: add byte ptr [ebp - 0x7a74ff8a], cl; cmp bl, 0xff; jmp dword ptr [ebp - 0x39]; 
0x0808640f: add byte ptr [ebp - 0x7aef8b2e], al; sar byte ptr [edx], 0xf; dec eax; ret 0xc083; 
0x080b2bde: add byte ptr [ebp - 0x7c1a8a0a], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x080a8db4: add byte ptr [ebp - 0x7c208a37], al; in al, dx; add al, 0x83; ret; 
0x0807fe00: add byte ptr [ebp - 0x7c948b13], al; ret 0x8301; 
0x080a7745: add byte ptr [ebp - 0x7cbb8b37], al; in al, dx; or byte ptr [ebp - 0x3da2f7d], cl; call dword ptr [eax - 0x73]; 
0x08066fa5: add byte ptr [ebp - 0x7cc98740], al; in al, dx; or byte ptr [ebp - 0x2ff1f7d], cl; call dword ptr [esi + 0x50]; 
0x0807eae8: add byte ptr [ebp - 0x7cdc8b2e], al; in al, dx; or byte ptr [ebp - 0x669bf7d], cl; call dword ptr [eax - 0x73]; 
0x080a72b8: add byte ptr [ebp - 0x7ce28b40], al; in al, dx; or byte ptr [ebp - 0x3da2f7d], cl; call dword ptr [eax - 0x73]; 
0x080b2d6d: add byte ptr [ebp - 0x7cec8b40], al; in al, dx; or byte ptr [ebp - 0x3240f6d], cl; call dword ptr [edx + 0x50]; 
0x0807af1b: add byte ptr [ebp - 0x7cef8b40], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0808f146: add byte ptr [ebp - 0x7cf28a40], al; sub eax, dword ptr [ecx]; pop ebx; pop esi; ret; 
0x0805fef1: add byte ptr [ebp - 0x7cf58a40], al; stosb byte ptr es:[edi], al; sbb byte ptr [eax], bl; add byte ptr [eax], al; add dword ptr [ebx + 0x5e], ebx; ret; 
0x08077daa: add byte ptr [ebp - 0x7cfa8b40], al; les ecx, ptr [eax]; pop ebx; ret; 
0x08070f0b: add byte ptr [ebp - 0x7cffd98c], cl; ret 0x8340; 
0x080905d8: add byte ptr [ebp - 0x8777b], cl; call dword ptr [eax - 0x73]; 
0x08049c49: add byte ptr [ebp - 0x9a10f7d], cl; call dword ptr [eax - 0x73]; 
0x0806dddb: add byte ptr [ebp - 0xcffd98c], cl; movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x080a7e6f: add byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x5fe80; pop ebx; ret; 
0x08076f58: add byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff001; jae 0x34310; ret; 
0x08076a02: add byte ptr [ebp - 1], ah; adc eax, 0x10; mov eax, 1; int 0x80; 
0x08077f32: add byte ptr [ebp - 1], ah; adc eax, 0x10; mov ebx, edx; cmp eax, 0xfffff001; jae 0x34310; ret; 
0x08077f65: add byte ptr [ebp - 1], ah; adc eax, 0x10; pop ebx; cmp eax, 0xfffff001; jae 0x34310; ret; 
0x08064be1: add byte ptr [ebp - 1], ah; adc eax, 0x10; pop ebx; pop esi; pop edi; ret; 
0x080995d8: add byte ptr [ebp - 1], ah; adc eax, 0x10; ret; 
0x080588bf: add byte ptr [ebx + 0x106a04ec], al; push edi; push esi; call dword ptr [eax + 0x1c]; 
0x080a78df: add byte ptr [ebx + 0x10890843], cl; add esp, 4; pop ebx; pop esi; ret; 
0x0808cacf: add byte ptr [ebx + 0x14898114], cl; xchg byte ptr [ebx - 0x3f7c47ab], cl; add dword ptr [ecx], ebp; fidivr dword ptr [ecx]; ret 0xee7f; 
0x08066fcf: add byte ptr [ebx + 0x16b804c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x0805fe7e: add byte ptr [ebx + 0x181c83], al; add byte ptr [ecx], al; add esp, 4; pop ebx; pop esi; ret; 
0x080a2bfc: add byte ptr [ebx + 0x1a6887], cl; add byte ptr [ecx], bh; ret 0x273; 
0x08070caf: add byte ptr [ebx + 0x1b720eea], al; lea eax, [edi + 0xd]; pop edi; ret; 
0x08071abf: add byte ptr [ebx + 0x1b720eef], al; lea eax, [eax + 0xd]; pop edi; ret; 
0x08095ba2: add byte ptr [ebx + 0x1b810c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x08076c63: add byte ptr [ebx + 0x1be4b384], cl; std; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x080b32e1: add byte ptr [ebx + 0x1ff883], cl; add byte ptr [ebp + 0x314574c0], al; jmp dword ptr [esi - 0x70]; 
0x0807ae1e: add byte ptr [ebx + 0x20c86], cl; add byte ptr [ebx + 0x5fe910c4], al; idiv edi; dec dword ptr [ebp - 0x2d5877d]; call dword ptr [eax - 0x73]; 
0x080a184f: add byte ptr [ebx + 0x21b8c47d], cl; add byte ptr [eax], al; add byte ptr [ecx], dh; leave; lea ebx, [edi - 0x1b7e5]; call dword ptr gs:[0x10]; 
0x0808117e: add byte ptr [ebx + 0x247c8b06], cl; cmp al, 0x89; ret 0xf989; 
0x080a6906: add byte ptr [ebx + 0x29302454], cl; ret 0x5489; 
0x080a67c3: add byte ptr [ebx + 0x29342454], cl; ret 0x5489; 
0x08070c9f: add byte ptr [ebx + 0x2b720dea], al; lea eax, [edi + 0xc]; pop edi; ret; 
0x08071aaf: add byte ptr [ebx + 0x2b720def], al; lea eax, [eax + 0xc]; pop edi; ret; 
0x0804a488: add byte ptr [ebx + 0x3001], bh; lea ecx, [esp + 0x40]; int 0x80; 
0x0804a7cd: add byte ptr [ebx + 0x3002], bh; int 0x80; 
0x0804a809: add byte ptr [ebx + 0x3003], bh; xor ecx, ecx; int 0x80; 
0x080ab0d9: add byte ptr [ebx + 0x3005], bh; call dword ptr gs:[0x10]; 
0x08097790: add byte ptr [ebx + 0x3910245c], cl; ret; 
0x080addfd: add byte ptr [ebx + 0x3924245c], cl; ret; 
0x08070c8f: add byte ptr [ebx + 0x3b720bea], al; lea eax, [edi + 0xa]; pop edi; ret; 
0x08071a9f: add byte ptr [ebx + 0x3b720bef], al; lea eax, [eax + 0xa]; pop edi; ret; 
0x08088214: add byte ptr [ebx + 0x418d10c4], al; dec dword ptr [ecx - 0x1bb43]; dec dword ptr [ecx - 0x1cf7b]; jmp dword ptr [ecx]; 
0x0809a0c2: add byte ptr [ebx + 0x420f02f8], al; ret; 
0x0809c24a: add byte ptr [ebx + 0x430f0539], al; adc dword ptr [ecx], edi; ret 0x430f; 
0x08067010: add byte ptr [ebx + 0x440ffff8], al; ret 0xc483; 
0x080958b3: add byte ptr [ebx + 0x448d08ec], al; and al, 0x14; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x0805bace: add byte ptr [ebx + 0x448d08ec], al; and al, 0x24; push eax; push esi; call dword ptr [edi + 0x48]; 
0x0805b765: add byte ptr [ebx + 0x448d08ec], al; and al, 0x34; push eax; push esi; call dword ptr [edi + 0x48]; 
0x080593a9: add byte ptr [ebx + 0x448d08ec], al; and al, 0x3c; push eax; push dword ptr [esp + 0x24]; call dword ptr [ebx + 0x48]; 
0x0805be07: add byte ptr [ebx + 0x448d08ec], al; and al, 0x44; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x080639df: add byte ptr [ebx + 0x4549e], cl; add byte ptr [ecx], bh; ret; 
0x0809f725: add byte ptr [ebx + 0x458b0875], cl; adc bh, al; ret 0x4d84; 
0x080a0361: add byte ptr [ebx + 0x458b9c55], cl; movsb byte ptr es:[edi], byte ptr [esi]; add esp, 0x20; mov dword ptr [ebp - 0x5c], edx; call eax; 
0x08049e3f: add byte ptr [ebx + 0x458d08ec], al; fadd dword ptr [ebx - 0x72afeb40]; sub dword ptr [eax + esi*8], -4; call dword ptr [eax - 0x18]; 
0x080660ae: add byte ptr [ebx + 0x46480], cl; add byte ptr [ebp - 0x17fa8640], al; ret 0xffb2; 
0x08070c7f: add byte ptr [ebx + 0x4b720aea], al; lea eax, [edi + 9]; pop edi; ret; 
0x08071a8f: add byte ptr [ebx + 0x4b720aef], al; lea eax, [eax + 9]; pop edi; ret; 
0x08056954: add byte ptr [ebx + 0x4d0f05fb], al; ret; 
0x080a03bb: add byte ptr [ebx + 0x4d8b29fb], al; or byte ptr [edi], cl; xchg eax, esp; ret 0x940f; 
0x0809b3c8: add byte ptr [ebx + 0x508d084e], cl; jmp dword ptr [ecx]; 
0x080b0840: add byte ptr [ebx + 0x51390852], cl; or byte ptr [edi + 2], dh; sbb eax, eax; ret; 
0x080595f6: add byte ptr [ebx + 0x51], dl; push dword ptr [esp + 0x24]; call dword ptr [edi + 0x40]; 
0x0806583f: add byte ptr [ebx + 0x525104ec], al; push ebx; call eax; 
0x08098bb3: add byte ptr [ebx + 0x535708ec], al; call eax; 
0x0805c728: add byte ptr [ebx + 0x555204ec], al; push esi; call dword ptr [ebx + 0x38]; 
0x08088e02: add byte ptr [ebx + 0x565504ec], al; push dword ptr [esp + 0x20]; call edi; 
0x08064297: add byte ptr [ebx + 0x598b1049], cl; add al, 0xf6; ret; 
0x08070c6f: add byte ptr [ebx + 0x5b7209ea], al; lea eax, [edi + 8]; pop edi; ret; 
0x08071a7f: add byte ptr [ebx + 0x5b7209ef], al; lea eax, [eax + 8]; pop edi; ret; 
0x08049e55: add byte ptr [ebx + 0x5d8b10c4], al; cld; leave; ret; 
0x0804af35: add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x08050a79: add byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x08086ec0: add byte ptr [ebx + 0x5e5b10c4], al; pop edi; pop ebp; ret; 
0x0805d654: add byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x0805b70d: add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x0807c2d4: add byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x0805a6b8: add byte ptr [ebx + 0x5e5b20c4], al; pop edi; ret; 
0x08059e22: add byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x08049852: add byte ptr [ebx + 0x5e5b3cc4], al; pop edi; pop ebp; ret; 
0x080501ff: add byte ptr [ebx + 0x5e5b4cc4], al; pop edi; pop ebp; ret; 
0x080ab2e2: add byte ptr [ebx + 0x5e5b5cc4], al; pop edi; pop ebp; ret; 
0x08079fe1: add byte ptr [ebx + 0x5e5b74c4], al; pop edi; pop ebp; ret; 
0x080855e5: add byte ptr [ebx + 0x5e5b7cc4], al; pop edi; pop ebp; ret; 
0x0805bb22: add byte ptr [ebx + 0x5e5b80ec], al; pop edi; ret; 
0x080a395a: add byte ptr [ebx + 0x5e], bl; pop edi; cmp eax, -1; cmove eax, edx; ret; 
0x08079246: add byte ptr [ebx + 0x5e], bl; pop edi; cmp eax, 0xfffff001; jae 0x34310; ret; 
0x0804a0ac: add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0805ca60: add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x080608bf: add byte ptr [ebx + 0x5e], bl; ret; 
0x08071adf: add byte ptr [ebx + 0x5f0c2444], cl; ret; 
0x0807ae24: add byte ptr [ebx + 0x5fe910c4], al; idiv edi; dec dword ptr [ebp - 0x2d5877d]; call dword ptr [eax - 0x73]; 
0x0806dccf: add byte ptr [ebx + 0x66028901], cl; mov eax, dword ptr [ecx + 4]; mov word ptr [edx + 4], ax; mov eax, edx; ret; 
0x08060aa4: add byte ptr [ebx + 0x67650f8], al; ret; 
0x0807920b: add byte ptr [ebx + 0x68838907], cl; or dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0805f521: add byte ptr [ebx + 0x6a04ec], al; push 0; push ebp; call dword ptr [ebx + 0x2c]; 
0x08058000: add byte ptr [ebx + 0x6a08ec], al; push edi; call dword ptr [ebx + 8]; 
0x08070c5f: add byte ptr [ebx + 0x6b7207ea], al; lea eax, [edi + 6]; pop edi; ret; 
0x08071a6f: add byte ptr [ebx + 0x6b7207ef], al; lea eax, [eax + 6]; pop edi; ret; 
0x08098c02: add byte ptr [ebx + 0x6c8d08ec], al; and al, 0xc; push ebp; push ebx; call eax; 
0x0805b287: add byte ptr [ebx + 0x74ff04ec], al; and al, 0x10; push dword ptr [esp + 0x10]; push esi; call dword ptr [edi + 0x3c]; 
0x080ace9f: add byte ptr [ebx + 0x74ff04ec], al; and al, 0x34; push edi; push esi; call dword ptr [ebp]; 
0x08065ae7: add byte ptr [ebx + 0x74ff08ec], al; and al, 0x24; push ebx; call eax; 
0x0806556f: add byte ptr [ebx + 0x74ff08ec], al; and al, 0x24; push esi; call eax; 
0x080a54a9: add byte ptr [ebx + 0x74ff0cec], al; and al, 0x28; mov edx, dword ptr [esp + 0x28]; call edx; 
0x080a8e18: add byte ptr [ebx + 0x758bc855], cl; aam 0xc7; ret 0x6f48; 
0x08095893: add byte ptr [ebx + 0x949e], cl; add bh, al; ret 0x5f80; 
0x0805c92a: add byte ptr [ebx + 0x94b3], cl; add bh, al; ret 0x5f80; 
0x0805ca87: add byte ptr [ebx + 0x94bb], cl; add bh, al; ret 0x5f80; 
0x08079d86: add byte ptr [ebx + 0x9e0b1], cl; add bh, al; ret; 
0x08070cbf: add byte ptr [ebx + 0xb720fea], al; lea eax, [edi + 0xe]; pop edi; ret; 
0x08071acf: add byte ptr [ebx + 0xb720fef], al; lea eax, [eax + 0xe]; pop edi; ret; 
0x080a7f1d: add byte ptr [ebx + 0xb], dh; mov edx, dword ptr [ecx + 0x1b68]; add word ptr [edx + eax*2], 1; ret; 
0x080a740b: add byte ptr [ebx + 0xeb91045], cl; add byte ptr [eax], al; add byte ptr [ebp - 0x16d4f45], cl; dec dword ptr [ecx + 0xfa6f3c6]; xchg eax, edi; ret 0xda80; 
0x0808e92b: add byte ptr [ebx + 0xf0c2454], cl; mov esi, 0xc7542444; ret 0xfff0; 
0x0808d4ff: add byte ptr [ebx + 0xf102474], cl; mov dh, 0x56; or al, 0xf6; ret 0xf01; 
0x080ad080: add byte ptr [ebx + 0xfc08500], cl; inc esp; ret 0x4c89; 
0x080ad706: add byte ptr [ebx + 0xfc08500], cl; inc esp; ret 0xec83; 
0x080a8b1e: add byte ptr [ebx + 0xfc08500], cl; inc esp; ret; 
0x0805ae81: add byte ptr [ebx + 2], bh; mov ecx, dword ptr [ebp - 0x38]; lea esi, [esi]; mov eax, edi; call dword ptr gs:[0x10]; 
0x08088a50: add byte ptr [ebx + 2], bh; xor edx, edx; mov ecx, ebp; mov esi, 8; call dword ptr gs:[0x10]; 
0x080590e6: add byte ptr [ebx - 0x137c3fbb], cl; or byte ptr [edx - 1], ch; push dword ptr [ebx]; call dword ptr [eax + 0xc]; 
0x08078e4f: add byte ptr [ebx - 0x137c43bb], cl; or byte ptr [eax], ch; add byte ptr [eax], cl; add byte ptr [ecx + 0x4589d445], cl; fmul dword ptr [ebp - 0x2df2a7d]; call dword ptr [eax - 0x18]; 
0x080528a9: add byte ptr [ebx - 0x137c77ec], cl; add al, 0x53; push dword ptr [ebp - 0x884]; push dword ptr [ebp - 0x890]; call edx; 
0x0805b4e2: add byte ptr [ebx - 0x137cdfa9], cl; add al, 0x29; ret 0x5052; 
0x0808bd6d: add byte ptr [ebx - 0x177c03b8], cl; add al, 0x83; ret 0x3901; 
0x08099677: add byte ptr [ebx - 0x17], bl; xchg eax, edx; sub al, 0xfe; jmp dword ptr [esi - 0x70]; 
0x080a7557: add byte ptr [ebx - 0x17aff314], al; jmp esp; 
0x0804a644: add byte ptr [ebx - 0x17e3dba4], cl; ret 0x65; 
0x08071dd9: add byte ptr [ebx - 0x18], dl; mov al, byte ptr [0x81fffd7e]; ret; 
0x080a2189: add byte ptr [ebx - 0x23b63], cl; dec dword ptr [ebp - 0x1b72b7d]; call dword ptr [eax - 0x73]; 
0x080a2a62: add byte ptr [ebx - 0x24f7b], cl; dec dword ptr [ebx - 0x2576b]; dec dword ptr [ebx - 0x1d763]; dec dword ptr [ebx - 0x1db73]; call ecx; 
0x08077164: add byte ptr [ebx - 0x2776ef3c], al; add esp, 0x14; pop ebx; pop esi; ret; 
0x080a6b66: add byte ptr [ebx - 0x27fefb3c], al; jmp eax; 
0x080b0a6f: add byte ptr [ebx - 0x2d14fbbe], cl; lea esi, [esi]; xor eax, eax; ret; 
0x080507ff: add byte ptr [ebx - 0x373e03b9], cl; or dword ptr [ebp + 0x33], esp; add eax, 0x18; call eax; 
0x08059aef: add byte ptr [ebx - 0x38e7dbbc], cl; ret 0x5f80; 
0x08059379: add byte ptr [ebx - 0x38e7dbbc], cl; ret 0x62d4; 
0x0809efa5: add byte ptr [ebx - 0x38ebdb8c], cl; ret 0; 
0x080ab5d8: add byte ptr [ebx - 0x38efdbbc], cl; ret 0; 
0x0804a356: add byte ptr [ebx - 0x38f3db84], cl; ret 0x68c0; 
0x0804a843: add byte ptr [ebx - 0x38f3db84], cl; ret 0x6f84; 
0x0804a857: add byte ptr [ebx - 0x38f3db8c], cl; ret 0x6f84; 
0x0804a49b: add byte ptr [ebx - 0x38f3dbbc], cl; ret; 
0x080888ad: add byte ptr [ebx - 0x39], dl; ret 0xffd0; 
0x0806728e: add byte ptr [ebx - 0x39], dl; ret; 
0x08050072: add byte ptr [ebx - 0x3a7cfe11], al; add al, 0x89; add ecx, dword ptr [ebx - 0x7cfbdbbc]; ret; 
0x0804f387: add byte ptr [ebx - 0x3b7cef3c], al; add al, 0x5b; pop esi; ret; 
0x080a3d53: add byte ptr [ebx - 0x3b7cfef6], al; add al, 0x5b; pop esi; ret; 
0x080a3dc2: add byte ptr [ebx - 0x3e76dbec], cl; mov eax, dword ptr [esp + 4]; add esp, 0x10; jmp ecx; 
0x0804a7c3: add byte ptr [ebx - 0x3e76fd38], al; mov eax, 0x180; mov ebx, 0x3002; int 0x80; 
0x0808b17f: add byte ptr [ebx - 0x3e7cfbaf], cl; add al, 0x83; ret; 
0x0805ecc6: add byte ptr [ebx - 0x3f7acbc0], cl; jne 0x16cc0; ret; 
0x08098f5c: add byte ptr [ebx - 0x3fcef73c], al; pop ebx; ret; 
0x080944e1: add byte ptr [ebx - 0x4637b], cl; inc dword ptr [eax - 0x41273]; call dword ptr [eax]; 
0x080932c4: add byte ptr [ebx - 0x46f43], al; call dword ptr [ebx + 0xf]; 
0x08056ace: add byte ptr [ebx - 0x4736b], cl; ljmp [ecx]; ret 0xda39; 
0x080564d9: add byte ptr [ebx - 0x4737b], cl; inc dword ptr [eax - 0x42273]; call dword ptr [eax]; 
0x080925eb: add byte ptr [ebx - 0x47f7b], cl; jmp dword ptr [ebp - 0x39]; 
0x0806b9ef: add byte ptr [ebx - 0x48], bl; add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x239fa; neg eax; ret; 
0x080abce7: add byte ptr [ebx - 0x48], bl; add dword ptr [eax], eax; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x0809999e: add byte ptr [ebx - 0x48], dl; sub eax, 0x8b000000; pop esp; and al, 8; int 0x80; 
0x08093131: add byte ptr [ebx - 0x48f43], al; call dword ptr [eax]; 
0x080932b6: add byte ptr [ebx - 0x48f7b], cl; inc dword ptr [ebp + 0x5b850fc0]; adc dword ptr [eax], eax; add byte ptr [ebx - 0x46f43], al; call dword ptr [ebx + 0xf]; 
0x08054caf: add byte ptr [ebx - 0x4937b], cl; jmp dword ptr [ebp - 0x39]; 
0x0805ae86: add byte ptr [ebx - 0x497237b3], cl; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, edi; call dword ptr gs:[0x10]; 
0x08094257: add byte ptr [ebx - 0x49b7b], cl; jmp dword ptr [esi - 0x70]; 
0x080a855d: add byte ptr [ebx - 0x49f065f4], cl; xchg eax, ecx; cwde; add dword ptr [eax], eax; add dh, dh; ret 0x7510; 
0x0808bb11: add byte ptr [ebx - 0x49f07fbb], cl; push eax; or al, 0x89; sal esi, 1; ret 0xf40; 
0x0805ad47: add byte ptr [ebx - 0x49f0ef3c], al; adc byte ptr [edx + edx*8 - 0x57ff48c], al; and eax, 0x7880e175; add dword ptr [ebx + 0x75], esi; fild dword ptr [eax - 0x76da2b83]; ret 0x5b74; 
0x08093edf: add byte ptr [ebx - 0x4a343], al; jmp dword ptr [eax]; 
0x08055574: add byte ptr [ebx - 0x4ab7b], cl; inc dword ptr [ebp + 0x65850fc0]; adc byte ptr [eax], al; add byte ptr [eax - 0x47f43], al; call dword ptr [ebx + 0xf]; 
0x08054a5b: add byte ptr [ebx - 0x4df6b], cl; dec dword ptr [ebx - 0x4db73]; dec dword ptr [ecx + 0x9ca89d0]; ret 0x850f; 
0x080568ff: add byte ptr [ebx - 0x4e77b], cl; jmp dword ptr [ebp - 0x75]; 
0x08077065: add byte ptr [ebx - 0x64], bh; call dword ptr gs:[0x10]; 
0x080555fc: add byte ptr [ebx - 0x6a76fb14], al; cmp bl, 0xff; call dword ptr [edx + 0x51]; 
0x08054c7b: add byte ptr [ebx - 0x6a76fb14], al; cmp bl, 0xff; call dword ptr [edx - 1]; 
0x0809066d: add byte ptr [ebx - 0x6a76fb14], al; inc eax; idiv edi; call dword ptr [edx + 0x51]; 
0x08086386: add byte ptr [ebx - 0x6c72f714], al; inc ebx; cmp ebp, edi; call dword ptr [edx + 0x50]; 
0x0804b816: add byte ptr [ebx - 0x6c72f714], al; pop ds; cld; call dword ptr [edx + 0x50]; 
0x08058542: add byte ptr [ebx - 0x6e76a7b8], cl; mov byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x080614d0: add byte ptr [ebx - 0x6f72e714], al; and al, 0xe; std; call dword ptr [edx - 0x73]; 
0x08052b6c: add byte ptr [ebx - 0x7276fb14], al; insb byte ptr es:[edi], dx; idiv edi; call dword ptr [esi + 0x52]; 
0x08049e87: add byte ptr [ebx - 0x72aff714], al; sub dword ptr [esi - 0x10], -4; call dword ptr [eax - 0x18]; 
0x08084f84: add byte ptr [ebx - 0x72cbdba4], cl; and dword ptr [eax + 0x36], 0xfffffffd; call dword ptr [eax - 0x73]; 
0x08083bb9: add byte ptr [ebx - 0x72cbdba4], cl; and dword ptr [eax], 0x37; std; call dword ptr [eax - 0x73]; 
0x0807ef7f: add byte ptr [ebx - 0x72cfdba4], cl; add eax, 0x38; std; call dword ptr [eax - 0x73]; 
0x080825fe: add byte ptr [ebx - 0x72cfdba4], cl; and dword ptr [eax + 0x37], 0xfffffffd; call dword ptr [eax - 0x73]; 
0x080801a2: add byte ptr [ebx - 0x72cfdba4], cl; and dword ptr [eax], 0x38; std; call dword ptr [eax - 0x73]; 
0x0808064e: add byte ptr [ebx - 0x72cfdba4], cl; and eax, 0x37; std; call dword ptr [eax - 0x73]; 
0x080832bc: add byte ptr [ebx - 0x72d3dba4], cl; add dword ptr [eax + 0x37], -3; call dword ptr [eax - 0x73]; 
0x08084672: add byte ptr [ebx - 0x72d3dba4], cl; and eax, 0x36; std; call dword ptr [eax - 0x73]; 
0x08066787: add byte ptr [ebx - 0x72d3dbac], cl; adc ah, 0xd; std; call dword ptr [eax - 0x77]; 
0x08065dfd: add byte ptr [ebx - 0x72d7db84], cl; xchg esp, edi; or eax, 0x978dfffd; sbb esi, edi; cld; call dword ptr [eax - 0x73]; 
0x080890d6: add byte ptr [ebx - 0x72dfdb8c], cl; dec esi; or byte ptr [ecx], bh; ret 0x8e0f; 
0x08077aff: add byte ptr [ebx - 0x72dfdba4], cl; push esp; and al, 4; mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x08064985: add byte ptr [ebx - 0x72ebdb84], cl; xchg dword ptr [esi + ecx - 0x68720003], esi; sbb esi, edi; cld; call dword ptr [eax - 0x73]; 
0x08064eb3: add byte ptr [ebx - 0x72ebdb8c], cl; xchg byte ptr [esi + ecx - 3], dl; dec dword ptr [ebp - 0x301e66a]; call dword ptr [eax - 0x73]; 
0x0809ec69: add byte ptr [ebx - 0x72ebdba4], cl; add dword ptr [eax + 0x40], -2; call dword ptr [eax - 0x73]; 
0x080ab35f: add byte ptr [ebx - 0x72ebdba4], cl; cmp dword ptr [eax - 0x67], -2; call dword ptr [eax - 0x73]; 
0x08062f6c: add byte ptr [ebx - 0x72efdb84], cl; xchg dword ptr [eax - 0x720002f2], edx; xchg eax, edi; sbb esi, edi; cld; call dword ptr [eax - 0x73]; 
0x08062eb3: add byte ptr [ebx - 0x72efdb84], cl; xchg dword ptr [esi + ecx - 0x68720003], eax; push -2; cld; call dword ptr [eax - 0x73]; 
0x0806443f: add byte ptr [ebx - 0x72efdb8c], cl; xchg byte ptr [eax - 0x720002f2], ch; xchg eax, esi; sbb esi, edi; cld; call dword ptr [eax - 0x73]; 
0x080a0cbf: add byte ptr [ebx - 0x74d64f83], al; dec ebp; or byte ptr [edi], cl; xchg eax, esp; ret 0x940f; 
0x0807709d: add byte ptr [ebx - 0x74dfdbb4], cl; push esp; and al, 0x24; mov edi, eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0808de24: add byte ptr [ebx - 0x74efdbac], cl; push edx; or byte ptr [ecx - 0x7ca7dbac], cl; ret 0x3917; 
0x08076fd9: add byte ptr [ebx - 0x74efdbb4], cl; pop esp; and al, 0xc; call dword ptr gs:[0x10]; 
0x0805c230: add byte ptr [ebx - 0x74efdbbc], cl; sahf; xchg eax, esp; add byte ptr [eax], al; add bh, al; ret 0x5f80; 
0x08077cb9: add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x08077c39: add byte ptr [ebx - 0x74f3dbb4], cl; push esp; and al, 0x10; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0807713c: add byte ptr [ebx - 0x74f7dbb4], cl; push esp; and al, 0xc; mov esi, eax; mov eax, 3; call dword ptr gs:[0x10]; 
0x080771dc: add byte ptr [ebx - 0x74f7dbb4], cl; push esp; and al, 0xc; mov esi, eax; mov eax, 4; call dword ptr gs:[0x10]; 
0x0806099d: add byte ptr [ebx - 0x74fbdbac], cl; adc al, bh; and byte ptr [eax + 0x1000004], 0; add byte ptr [eax], al; mov dword ptr [eax + 0x480], edx; ret; 
0x0806094d: add byte ptr [ebx - 0x74fbdbac], cl; adc al, bh; and byte ptr [eax + 0x1000004], 0; add byte ptr [eax], al; mov dword ptr [eax + 0x484], edx; ret; 
0x0806091d: add byte ptr [ebx - 0x74fbdbac], cl; adc al, bh; and byte ptr [eax + 0x1000004], 0; add byte ptr [eax], al; mov dword ptr [eax + 0x498], edx; ret; 
0x08060a0e: add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [0x3fc], bh; jbe 0x18a20; ret; 
0x080608de: add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [0x80000], bh; jbe 0x188f0; ret; 
0x08060a4e: add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [0xffff], bh; jbe 0x18a60; ret; 
0x08060a9e: add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [ebx + 0x67650f8], al; ret; 
0x08096cbf: add byte ptr [ebx - 0x75], bl; add bl, byte ptr [esi + 0x5f]; ret; 
0x08081dc6: add byte ptr [ebx - 0x763076fa], cl; ret 0xe083; 
0x08050e85: add byte ptr [ebx - 0x76d7dba4], cl; ret 0xdaf7; 
0x0808292e: add byte ptr [ebx - 0x76ebdb8c], cl; ret 0x542b; 
0x08082397: add byte ptr [ebx - 0x76efdb8c], cl; ret 0xb60f; 
0x08063430: add byte ptr [ebx - 0x76efdba4], cl; popfd; lodsb al, byte ptr [esi]; add al, 0; add cl, ch; ret; 
0x080747e8: add byte ptr [ebx - 0x76f3dbbc], cl; ret 0xe283; 
0x08058642: add byte ptr [ebx - 0x776ef3c], al; pop ebx; pop esi; pop edi; ret; 
0x0807e26f: add byte ptr [ebx - 0x77], dl; ret; 
0x0809b3bf: add byte ptr [ebx - 0x7876e3ba], cl; inc eax; add al, byte ptr [eax]; add byte ptr [ebx + 0x508d084e], cl; jmp dword ptr [ecx]; 
0x08054714: add byte ptr [ebx - 0x7a72fb14], al; sar bl, 0xff; call dword ptr [esi - 1]; 
0x080ac891: add byte ptr [ebx - 0x7a72fb14], al; sar bl, 0xff; dec dword ptr [ebp - 0x44b4b]; call dword ptr [eax - 1]; 
0x0808ddc1: add byte ptr [ebx - 0x7aebdbbc], cl; ror byte ptr [edi], 0x84; ret 6; 
0x08089a89: add byte ptr [ebx - 0x7af7dbbc], cl; ror byte ptr [edi], 0x85; ret 3; 
0x0809e5f4: add byte ptr [ebx - 0x7b74f714], al; and al, 0x88; add byte ptr [eax], al; add bh, bh; xor byte ptr [ebp - 0x1c22279], cl; call dword ptr [eax - 0x18]; 
0x0809b258: add byte ptr [ebx - 0x7bf00008], al; inc edx; add dword ptr [eax], eax; add byte ptr [ebx - 0x976b], cl; inc dword ptr [ecx]; ret 0xf029; 
0x0807ffdf: add byte ptr [ebx - 0x7bf0fb06], al; mov dword ptr [0x83000001], eax; rol byte ptr [ecx], 0x83; ret 0x8901; 
0x08071b82: add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x08097787: add byte ptr [ebx - 0x7bf0fe05], al; push ebx; add dword ptr [eax], eax; add byte ptr [ebx + 0x3910245c], cl; ret; 
0x0807937f: add byte ptr [ebx - 0x7c72eb14], al; adc byte ptr [ecx], ah; std; call dword ptr [eax - 0x18]; 
0x080795bf: add byte ptr [ebx - 0x7c72eb14], al; cmp dword ptr [ecx], esp; std; call dword ptr [eax - 0x18]; 
0x080b2e7f: add byte ptr [ebx - 0x7c72ef14], al; xor dh, bl; cld; call dword ptr [eax - 1]; 
0x08087037: add byte ptr [ebx - 0x7c72f314], al; dec ecx; cmp bh, ch; call dword ptr [eax - 0x18]; 
0x0807aabb: add byte ptr [ebx - 0x7c72f314], al; pop ecx; sub ebp, edi; call dword ptr [eax - 0x18]; 
0x080863a4: add byte ptr [ebx - 0x7c72f714], al; dec ecx; cmp ebp, edi; call dword ptr [eax - 1]; 
0x0804fd15: add byte ptr [ebx - 0x7c72f714], al; in al, dx; idiv esp; call dword ptr [eax + 0x55]; 
0x08083927: add byte ptr [ebx - 0x7cc7dbbc], cl; ret 0xc704; 
0x08086e0f: add byte ptr [ebx - 0x7cf7dbbc], cl; ret; 
0x080a63b7: add byte ptr [ebx - 0x7cfb78ac], cl; ret 0x8901; 
0x080a338f: add byte ptr [ebx - 0x7cfbdbac], cl; ret 0x3901; 
0x08051cc0: add byte ptr [ebx - 0x7d], dl; ret; 
0x080719ba: add byte ptr [ebx - 0x7df0f711], al; sbb al, 1; add byte ptr [eax], al; lea eax, [eax + 7]; pop edi; ret; 
0x0809e9e3: add byte ptr [ebx - 0x7e46e33d], al; add byte ptr [eax], al; add byte ptr [edx + 1], bh; call dword ptr gs:[0x10]; 
0x0804a480: add byte ptr [ebx - 0x7f47ef3c], al; add dword ptr [eax], eax; add byte ptr [ebx + 0x3001], bh; lea ecx, [esp + 0x40]; int 0x80; 
0x0808b494: add byte ptr [ebx - 0x837b], cl; dec dword ptr [ecx - 0x9f7b]; dec dword ptr [ebx - 0x9f7b]; ljmp [ecx]; ret 0xd189; 
0x08090505: add byte ptr [ebx - 0x89b43], al; call dword ptr [ebx + 0xf]; 
0x0809f8ce: add byte ptr [ebx - 0x8b7b], cl; inc edi; ret; 
0x08090e6c: add byte ptr [ebx - 0x8bf43], al; call dword ptr [eax]; 
0x080904f7: add byte ptr [ebx - 0x8bf7b], cl; inc dword ptr [ebp - 0x787af040]; adc al, byte ptr [eax]; add byte ptr [ebx - 0x89b43], al; call dword ptr [ebx + 0xf]; 
0x080908ea: add byte ptr [ebx - 0x8c37b], cl; inc esi; test dword ptr [ebx], esp; idiv edi; jmp dword ptr [eax]; 
0x080878ef: add byte ptr [ebx - 0x8f7b], cl; jmp dword ptr [ebp - 0x7d]; 
0x0809b261: add byte ptr [ebx - 0x976b], cl; inc dword ptr [ecx]; ret 0xf029; 
0x08095c7b: add byte ptr [ebx - 0xa8fb14], al; jne 0x4dc8b; push esi; call dword ptr [ebx + 0x1c]; 
0x0805740d: add byte ptr [ebx - 0xacfb14], al; je 0xf439; cmp al, 0x56; call dword ptr [edx + 0x1c]; 
0x0804a958: add byte ptr [ebx - 0xe8b7144], cl; cld; inc dword ptr [ecx]; idiv dword ptr [esi]; jmp edi; 
0x080a78fc: add byte ptr [ebx - 1], bl; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x0805cefe: add byte ptr [ebx - 1], dl; push ebp; and al, 0x21; ret 0xc483; 
0x080a3825: add byte ptr [ebx - 2], cl; call dword ptr [eax - 0x18]; 
0x0809ffb6: add byte ptr [ebx], al; add ecx, dword ptr [ebx - 0x247a73a3]; jne 0x57e8c; call eax; 
0x080a0ee7: add byte ptr [ebx], al; inc edx; add al, 0x89; ret 0x858b; 
0x0809fe7f: add byte ptr [ebx], al; push es; test ebx, ebx; jne 0x57e22; call eax; 
0x0809b571: add byte ptr [ebx], dh; xchg eax, edi; in al, dx; add dword ptr [eax], eax; add byte ptr [ecx], cl; ret 0xbc75; 
0x08077b0c: add byte ptr [ecx + 0x10], bh; call dword ptr gs:[0x10]; 
0x08089048: add byte ptr [ecx + 0x14cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x08066cc7: add byte ptr [ecx + 0x1baeb], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x080628e7: add byte ptr [ecx + 0x1bafb], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x080a9acf: add byte ptr [ecx + 0x21490], cl; add byte ptr [ecx + 0x408b9104], cl; or al, 0x83; ret 0x8501; 
0x0805957c: add byte ptr [ecx + 0x247c8bcb], cl; sbb al, 0x8b; je 0x115aa; sbb byte ptr [ecx], ch; ret; 
0x08088a2d: add byte ptr [ecx + 0x24948bc1], cl; xor byte ptr [ecx], al; add byte ptr [eax], al; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x080793ab: add byte ptr [ecx + 0x31442444], cl; ror byte ptr [ebx - 0x7297db84], 0x83; jnp 0x313ad; cld; call dword ptr [eax - 0x73]; 
0x080b2807: add byte ptr [ecx + 0x314c245c], cl; fcmovnb st(0), st(7); ret; 
0x080a9ad5: add byte ptr [ecx + 0x408b9104], cl; or al, 0x83; ret 0x8501; 
0x08078e5a: add byte ptr [ecx + 0x4589d445], cl; fmul dword ptr [ebp - 0x2df2a7d]; call dword ptr [eax - 0x18]; 
0x080608ef: add byte ptr [ecx + 0x48882], cl; add bh, al; and byte ptr [eax + 0x1000004], 0; add byte ptr [eax], al; ret; 
0x0809674c: add byte ptr [ecx + 0x4c4830a], cl; pop ebx; pop esi; ret; 
0x080a51f0: add byte ptr [ecx + 0x4c48310], cl; pop ebx; pop esi; ret; 
0x0805bfd9: add byte ptr [ecx + 0x565153e8], cl; call dword ptr [eax + 0x40]; 
0x08096c86: add byte ptr [ecx + 0x5b102474], cl; mov eax, dword ptr [edi + 0x10]; pop esi; pop edi; jmp eax; 
0x08096b26: add byte ptr [ecx + 0x5b102474], cl; mov eax, dword ptr [edi + 0x14]; pop esi; pop edi; jmp eax; 
0x080a6cb2: add byte ptr [ecx + 0x5e5b047b], cl; pop edi; pop ebp; ret; 
0x08060ea1: add byte ptr [ecx + 0x5e5b3858], cl; ret; 
0x080867e8: add byte ptr [ecx + 0x5f5e5bc8], cl; pop ebp; ret; 
0x080b03c7: add byte ptr [ecx + 0x5f5e5bd8], cl; pop ebp; ret; 
0x0805748c: add byte ptr [ecx + 0x5f5e5be8], cl; pop ebp; ret; 
0x0804f814: add byte ptr [ecx + 0x5f5e5bf0], cl; pop ebp; ret; 
0x0805b924: add byte ptr [ecx + 0x5f5e5bf8], cl; pop ebp; ret; 
0x0805860a: add byte ptr [ecx + 0x5f5e5bf8], cl; ret; 
0x080a97a7: add byte ptr [ecx + 0x75c984e9], cl; push -0x39; ret 0x6eec; 
0x080608a0: add byte ptr [ecx + 0x80], bh; mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x08049244: add byte ptr [ecx + 0x81], bh; call dword ptr gs:[0x10]; 
0x0804c03a: add byte ptr [ecx + 0x81], bh; lea ebx, [edx + 0x1550]; mov edx, 1; call dword ptr gs:[0x10]; 
0x08066cc2: add byte ptr [ecx + 0x81], bh; mov ebx, ebp; mov edx, 1; call dword ptr gs:[0x10]; 
0x080628e2: add byte ptr [ecx + 0x81], bh; mov ebx, edi; mov edx, 1; call dword ptr gs:[0x10]; 
0x080493b6: add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x08050959: add byte ptr [ecx + 0x81], bh; mov edx, 1; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x080991d8: add byte ptr [ecx + 0x81], bh; mov edx, 1; mov ebx, edi; call dword ptr gs:[0x10]; 
0x08050b9f: add byte ptr [ecx + 0x81], bh; mov edx, 1; mov esi, edi; call dword ptr gs:[0x10]; 
0x08066a81: add byte ptr [ecx + 0x81], bh; mov edx, edi; call dword ptr gs:[0x10]; 
0x0804bf76: add byte ptr [ecx + 0x81], bh; xor esi, esi; mov edx, 1; call dword ptr gs:[0x10]; 
0x080a77df: add byte ptr [ecx + 0x8c48310], cl; pop ebx; ret; 
0x08049c43: add byte ptr [ecx + 0x9b3bcc3], al; add byte ptr [ebp - 0x9a10f7d], cl; call dword ptr [eax - 0x73]; 
0x080596c3: add byte ptr [ecx + 0xacc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x080afc8a: add byte ptr [ecx + 0xbcc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0805cdc5: add byte ptr [ecx + 0xc25386e], cl; adc byte ptr [eax], al; add byte ptr [ecx - 0x100c1e], al; dec dword ptr [ecx]; ret 0x1689; 
0x080946e9: add byte ptr [ecx + 0xdafb], al; add byte ptr [edi], cl; dec ebp; ret; 
0x08088a1f: add byte ptr [ecx + 0xe0b8c3], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0804d02f: add byte ptr [ecx + 0xecc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x08063d38: add byte ptr [ecx + 0xf64247c], cl; inc edi; ret 0x4c89; 
0x080638ba: add byte ptr [ecx + 0xf6c244c], cl; inc edi; ret 0x548b; 
0x08074b94: add byte ptr [ecx + eax + 0x40], dh; pop edi; pop esi; ret; 
0x080749f0: add byte ptr [ecx + eax + 0x40], dh; pop edi; ret; 
0x08075436: add byte ptr [ecx + eax + 0x40], dh; sub eax, dword ptr [esp + 4]; ret; 
0x0805cdcd: add byte ptr [ecx - 0x100c1e], al; dec dword ptr [ecx]; ret 0x1689; 
0x08079e29: add byte ptr [ecx - 0x38dfdba4], cl; ret; 
0x080a543d: add byte ptr [ecx - 0x38f3dbbc], cl; ret; 
0x080abb77: add byte ptr [ecx - 0x3b7cefba], cl; adc al, 0x5b; pop esi; ret; 
0x080aba94: add byte ptr [ecx - 0x3b7cf3ba], cl; adc al, 0x5b; pop esi; ret; 
0x080a7a66: add byte ptr [ecx - 0x3b7cf3bd], cl; and al, 0x5b; pop esi; ret; 
0x080935e3: add byte ptr [ecx - 0x46373], cl; call dword ptr [eax - 0x18]; 
0x0804988b: add byte ptr [ecx - 0x47ebdbbc], cl; ret 0; 
0x08093554: add byte ptr [ecx - 0x4a773], cl; inc edi; test dword ptr [ebx + edi*8 - 1], ebx; jmp dword ptr [eax]; 
0x08093048: add byte ptr [ecx - 0x4a77b], cl; ljmp [ecx]; ret 0x8d8b; 
0x08055f75: add byte ptr [ecx - 0x4b77b], cl; ljmp [ecx]; ret 0x45e9; 
0x0805853a: add byte ptr [ecx - 0x6b77762f], cl; add byte ptr [eax], al; add byte ptr [ebx - 0x6e76a7b8], cl; mov byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x08080828: add byte ptr [ecx - 0x72d3dbb4], cl; dec ebp; and byte ptr [ecx - 0x9cfdbb4], cl; ret 0x7501; 
0x080ad1b5: add byte ptr [ecx - 0x74e3db84], cl; push eax; or byte ptr [ecx], al; ret 0xd789; 
0x080a5432: add byte ptr [ecx - 0x74e7dbb4], cl; mov word ptr [eax + ebp*8], fs; add byte ptr [eax], al; add byte ptr [ecx - 0x38f3dbbc], cl; ret; 
0x08059d2e: add byte ptr [ecx - 0x74efdb8c], cl; inc eax; adc byte ptr [ebx + 0x5e5b04c4], al; jmp eax; 
0x0807ff4c: add byte ptr [ecx - 0x74f7dbac], cl; jl 0x37f78; or al, 0x89; ret; 
0x08049821: add byte ptr [ecx - 0x763fcf10], cl; ret 0x8789; 
0x080497ef: add byte ptr [ecx - 0x763fcf30], cl; ret 0x8789; 
0x08049f30: add byte ptr [ecx - 0x765df027], cl; push esi; or al, 0x89; ret 0xeac1; 
0x0808d42a: add byte ptr [ecx - 0x768fdbbc], cl; ret 0xc483; 
0x08083a2f: add byte ptr [ecx - 0x769fdbbc], cl; ret 0xe9e9; 
0x080669c3: add byte ptr [ecx - 0x76f7dbbc], cl; ret; 
0x080793d3: add byte ptr [ecx - 0x76ff743a], cl; ret 0xce80; 
0x080b1a97: add byte ptr [ecx - 0x7c17760e], cl; ret; 
0x08052565: add byte ptr [ecx - 0x7c2576ea], cl; ret; 
0x0807cef9: add byte ptr [ecx - 0x7c7227bb], cl; nop; jnp 0x34efb; call dword ptr [eax - 0x77]; 
0x0809c4d7: add byte ptr [ecx - 0x7ceb7ab4], cl; rol byte ptr [ecx], 0x39; ret 0xf575; 
0x08082822: add byte ptr [ecx - 0x7cf51439], cl; ret; 
0x08076a52: add byte ptr [ecx - 0x937b], cl; dec dword ptr [ebp - 0x2e4787d]; call dword ptr [eax - 0x18]; 
0x0809b037: add byte ptr [ecx - 0xbf7b], cl; jmp dword ptr [esi - 0x70]; 
0x0809b7a1: add byte ptr [ecx - 0xc77b], cl; dec dword ptr [ebp - 0x1c9907d]; jmp dword ptr [esi - 0x70]; 
0x08061076: add byte ptr [ecx - 0xfffff1a], al; dec dword ptr [ecx + 0xae8df2]; add byte ptr [eax], dl; add byte ptr [ecx], ch; ret 0x850f; 
0x080752af: add byte ptr [ecx - 1], bh; cmovb eax, ecx; ret; 
0x0804a485: add byte ptr [ecx], 0; add byte ptr [ebx + 0x3001], bh; lea ecx, [esp + 0x40]; int 0x80; 
0x0804a7ca: add byte ptr [ecx], 0; add byte ptr [ebx + 0x3002], bh; int 0x80; 
0x0804a806: add byte ptr [ecx], 0; add byte ptr [ebx + 0x3003], bh; xor ecx, ecx; int 0x80; 
0x080ab0d6: add byte ptr [ecx], 0; add byte ptr [ebx + 0x3005], bh; call dword ptr gs:[0x10]; 
0x080ab2b4: add byte ptr [ecx], 0; add byte ptr [edi], cl; xchg eax, esp; rol dword ptr [ecx], 0xc9; call dword ptr gs:[0x10]; 
0x0807538c: add byte ptr [ecx], ah; ret 0x2474; 
0x0807968e: add byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [ebp - 0x38388a25], al; ret; 
0x0807536b: add byte ptr [ecx], al; add byte ptr [eax], al; sub eax, edx; ret; 
0x0805fe84: add byte ptr [ecx], al; add esp, 4; pop ebx; pop esi; ret; 
0x08089897: add byte ptr [ecx], al; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x080706b7: add byte ptr [ecx], al; clc; add eax, ecx; pop edi; ret; 
0x0808d07b: add byte ptr [ecx], al; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x080652e6: add byte ptr [ecx], al; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0805dc0e: add byte ptr [ecx], al; pop ebx; pop esi; pop edi; ret; 
0x0805fefb: add byte ptr [ecx], al; pop ebx; pop esi; ret; 
0x080b0f98: add byte ptr [ecx], al; ret 0x44c7; 
0x080aea3c: add byte ptr [ecx], al; ret 0x9689; 
0x080aeb50: add byte ptr [ecx], al; ret 0x9789; 
0x080ad487: add byte ptr [ecx], al; ret 0xb70f; 
0x080ab688: add byte ptr [ecx], al; ret 0xd139; 
0x08054f9e: add byte ptr [ecx], al; ret; 
0x080a2c02: add byte ptr [ecx], bh; ret 0x273; 
0x080a220d: add byte ptr [ecx], bh; ret 0x470f; 
0x0805bd90: add byte ptr [ecx], bh; ret 0x830f; 
0x080603b7: add byte ptr [ecx], bh; ret 0x870f; 
0x080aab61: add byte ptr [ecx], bh; ret 0xa74; 
0x080892f6: add byte ptr [ecx], bh; ret 0xe74; 
0x080639e5: add byte ptr [ecx], bh; ret; 
0x08060f9b: add byte ptr [ecx], bh; retf 0x975; add esp, 8; pop ebx; ret; 
0x08086eb3: add byte ptr [ecx], ch; call 0xf06ec3d; dec edi; ret 0xc301; 
0x08063559: add byte ptr [ecx], ch; ret 0x1c8d; 
0x08061084: add byte ptr [ecx], ch; ret 0x850f; 
0x08093ea4: add byte ptr [ecx], ch; ret 0x8589; 
0x0808acd0: add byte ptr [ecx], ch; ret; 
0x0805076f: add byte ptr [ecx], cl; ret 0xab75; 
0x0809b577: add byte ptr [ecx], cl; ret 0xbc75; 
0x08098627: add byte ptr [ecx], dh; fild dword ptr [ebp - 0x760d8b37]; ret; 
0x0804a76e: add byte ptr [ecx], dh; fisttp dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; mov eax, edx; int 0x80; 
0x0804bf7b: add byte ptr [ecx], dh; idiv byte ptr [edx + 1]; call dword ptr gs:[0x10]; 
0x08099c91: add byte ptr [ecx], dh; imul byte ptr [ecx]; ret 0x5589; 
0x0804e902: add byte ptr [ecx], dh; jmp dword ptr [ebp - 0x5f]; 
0x0804a80e: add byte ptr [ecx], dh; leave; int 0x80; 
0x080a1857: add byte ptr [ecx], dh; leave; lea ebx, [edi - 0x1b7e5]; call dword ptr gs:[0x10]; 
0x08079c53: add byte ptr [ecx], dh; leave; lea ebx, [edi - 0x2de88]; int 0x80; 
0x080b0d71: add byte ptr [ecx], dh; rcl byte ptr [esi - 0x7d], cl; ret; 
0x0806234e: add byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x08075537: add byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x080661a3: add byte ptr [ecx], dh; rcr byte ptr [edx + 0x5b], 0x5e; ret; 
0x08053ab1: add byte ptr [ecx], dh; rol bh, cl; test dword ptr [edi + esi*8 - 1], esp; call dword ptr [eax]; 
0x08088a55: add byte ptr [ecx], dh; ror byte ptr [ecx + 0x8bee9], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x08099236: add byte ptr [ecx], dh; test byte ptr [ecx + 0x10dfa], 0; cmovae ecx, eax; mov eax, 0xdc; mov edi, ecx; call dword ptr gs:[0x10]; 
0x0805ebf6: add byte ptr [edi + 0x56], dl; push ebp; call dword ptr [ebx + 0x24]; 
0x08074284: add byte ptr [edi + 2], dh; neg eax; add esp, 4; pop ebx; ret; 
0x08074604: add byte ptr [edi + 2], dh; neg eax; pop edi; pop ebx; ret; 
0x08069ff4: add byte ptr [edi + 2], dh; neg eax; ret; 
0x080b01ba: add byte ptr [edi + ecx], al; test dword ptr [eax - 0x6b], ebx; stc; dec dword ptr [ebx + 0x8c48300]; pop ebx; ret; 
0x0809eeb9: add byte ptr [edi + edi], 0xfe; call dword ptr [eax - 0x18]; 
0x080a9af7: add byte ptr [edi - 0x18], dl; ret 0xf9f5; 
0x08071a54: add byte ptr [edi - 0x73000000], 0x40; add al, 0x5f; ret; 
0x08070c44: add byte ptr [edi - 0x73000000], 0x47; add al, 0x5f; ret; 
0x080a77dc: add byte ptr [edi], cl; add byte ptr [eax], al; mov dword ptr [eax], edx; add esp, 8; pop ebx; ret; 
0x0808641a: add byte ptr [edi], cl; dec eax; ret 0xc083; 
0x080946ef: add byte ptr [edi], cl; dec ebp; ret; 
0x08090943: add byte ptr [edi], cl; dec ecx; ret; 
0x0807f1d7: add byte ptr [edi], cl; inc ebp; ret 0x4489; 
0x08060abc: add byte ptr [edi], cl; inc ebp; ret 0x8189; 
0x08083583: add byte ptr [edi], cl; inc ebp; ret 0x948b; 
0x080803d6: add byte ptr [edi], cl; inc ebp; ret 0xea89; 
0x08088b3c: add byte ptr [edi], cl; inc ebp; sar byte ptr [esi + 8], 1; mov eax, 0xae; call dword ptr gs:[0x10]; 
0x080603cd: add byte ptr [edi], cl; inc ebx; push ebx; or byte ptr [ecx + 0x29182454], cl; ret 0x5489; 
0x08066883: add byte ptr [edi], cl; inc edi; ret 0xc083; 
0x08075b9a: add byte ptr [edi], cl; inc esp; ret 0x4489; 
0x0809fc3b: add byte ptr [edi], cl; inc esp; ret 0x4d8b; 
0x08075d43: add byte ptr [edi], cl; inc esp; ret 0xff65; 
0x080754f6: add byte ptr [edi], cl; lahf; ret 0xea81; 
0x080759e0: add byte ptr [edi], cl; mov byte ptr [0xc247c83], al; add dword ptr [ecx - 0x76ebdbac], ecx; ret 0x4c89; 
0x0805e517: add byte ptr [edi], cl; mov dh, 0; pop ebx; pop esi; pop edi; ret; 
0x0806bac4: add byte ptr [edi], cl; mov dh, 0x12; sub eax, edx; ret; 
0x080550fe: add byte ptr [edi], cl; mov dh, 0x44; adc al, ah; mov eax, dword ptr [ecx + eax*4]; jmp eax; 
0x08054d74: add byte ptr [edi], cl; mov dh, 0x44; adc al, ah; mov eax, dword ptr [edi + eax*4 - 0x1820]; jmp eax; 
0x08093651: add byte ptr [edi], cl; mov dh, 0x44; or ah, al; mov dword ptr [ebp - 0x494], 0; mov eax, dword ptr [edi + eax*4 - 0x12c0]; jmp eax; 
0x080938a1: add byte ptr [edi], cl; mov dh, 0x44; or ah, al; mov dword ptr [ebp - 0x494], 1; mov eax, dword ptr [edi + eax*4 - 0x12c0]; jmp eax; 
0x08092db1: add byte ptr [edi], cl; mov dh, 0x44; or ah, al; mov eax, dword ptr [edi + eax*4 - 0x1240]; jmp eax; 
0x08093941: add byte ptr [edi], cl; mov dh, 0x44; or ah, al; mov eax, dword ptr [edi + eax*4 - 0x1340]; jmp eax; 
0x08092b05: add byte ptr [edi], cl; mov dh, 0x44; or al, ah; mov eax, dword ptr [ebx + eax*4]; jmp eax; 
0x080938f1: add byte ptr [edi], cl; mov dh, 0x44; or esp, eax; mov dword ptr [ebp - 0x494], 0; mov eax, dword ptr [edi + eax*4 - 0x12c0]; jmp eax; 
0x080939d1: add byte ptr [edi], cl; mov dh, 0x44; or esp, eax; mov dword ptr [ebp - 0x494], 1; mov eax, dword ptr [edi + eax*4 - 0x12c0]; jmp eax; 
0x08093981: add byte ptr [edi], cl; mov dh, 0x44; or esp, eax; mov dword ptr [ebp - 0x4a8], 0; mov eax, dword ptr [edi + eax*4 - 0x12c0]; jmp eax; 
0x08092a19: add byte ptr [edi], cl; mov dh, 0x44; or esp, eax; mov ebx, dword ptr [ebp - 0x4c0]; mov eax, dword ptr [ebx + eax*4]; jmp eax; 
0x0805ad27: add byte ptr [edi], cl; mov dh, 0x45; aam 0x89; ret 0xf889; 
0x0808fd71: add byte ptr [edi], cl; mov dh, 0x56; or al, 0x84; ror byte ptr [edi], cl; mov byte ptr [edi - 0x9ffffe5], dl; ret 0xf40; 
0x080955c7: add byte ptr [edi], cl; mov dh, 0x56; or al, 0xf6; ret 0xf01; 
0x0808fd46: add byte ptr [edi], cl; mov dh, 0x56; or al, 0xf6; ret 0xf08; 
0x08098204: add byte ptr [edi], cl; mov ebp, 0x5ff801c0; ret; 
0x08055b63: add byte ptr [edi], cl; mov esi, 0x44b60fc1; adc al, ah; mov eax, dword ptr [edi + eax*4 - 0x17a0]; jmp eax; 
0x08055ac3: add byte ptr [edi], cl; mov esi, 0x44b60fc1; adc al, ah; mov eax, dword ptr [edi + eax*4 - 0x18a0]; jmp eax; 
0x08070fbf: add byte ptr [edi], cl; mov esp, 0x5ff801c0; ret; 
0x08070fef: add byte ptr [edi], cl; mov esp, 0x76c229c0; cmp dword ptr [ecx], eax; clc; pop edi; ret; 
0x080aeb69: add byte ptr [edi], cl; scasd eax, dword ptr es:[edi]; inc esi; add dword ptr [ecx], eax; ret 0x458b; 
0x08062085: add byte ptr [edi], cl; scasd eax, dword ptr es:[edi]; push ecx; add al, 0x83; rcl dword ptr [eax], 0x83; ret; 
0x08071bdf: add byte ptr [edi], cl; test byte ptr [eax + eax], bh; add byte ptr [eax + 0xc], bh; pop edi; ret; 
0x08071b8f: add byte ptr [edi], cl; test byte ptr [eax - 0x48000000], bh; or byte ptr [eax], al; add byte ptr [eax], al; pop edi; ret; 
0x08068c43: add byte ptr [edi], cl; test byte ptr [eax - 0x7cffffed], dh; ret 0x8308; 
0x0809cf01: add byte ptr [edi], cl; test byte ptr [ebp - 0x72fffffd], al; sbb dword ptr [ebx + 0x37], -2; call dword ptr [eax + 0x6a]; 
0x0806a10e: add byte ptr [edi], cl; test byte ptr [ebx - 0x7d000000], cl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x08071b36: add byte ptr [edi], cl; test ch, bh; add byte ptr [eax], al; add byte ptr [eax + 4], bh; pop edi; ret; 
0x08071b7c: add byte ptr [edi], cl; test dh, al; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x0806c32f: add byte ptr [edi], cl; test dword ptr [eax + 2], edx; add byte ptr [eax], al; pop ebx; ret; 
0x0806bc2f: add byte ptr [edi], cl; test dword ptr [eax + 9], edx; add byte ptr [eax], al; pop ebx; ret; 
0x0806c3da: add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000001], esp; ret; 
0x0806c1fa: add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000003], eax; ret; 
0x0806bcca: add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000008], esi; ret; 
0x0806c024: add byte ptr [edi], cl; test dword ptr [ebp + 5], eax; add byte ptr [eax], al; pop ebx; ret; 
0x0806bdf6: add byte ptr [edi], cl; test dword ptr [ebx + 7], esi; add byte ptr [eax], al; pop ebx; ret; 
0x0806befe: add byte ptr [edi], cl; test dword ptr [ecx + 0x5b000006], eax; ret; 
0x0806be73: add byte ptr [edi], cl; test dword ptr [edi + eax], ecx; add byte ptr [eax], al; pop ebx; ret; 
0x0805a6b2: add byte ptr [edi], cl; test esi, eax; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b20c4], al; pop edi; ret; 
0x080502f9: add byte ptr [edi], cl; xchg dword ptr [eax], eax; add al, byte ptr [eax]; add bh, al; ret 0xffe0; 
0x0809a416: add byte ptr [edi], cl; xchg dword ptr [ebx - 0x7cfffffe], ebx; rcr byte ptr [ebx], 0x89; out 0x89, eax; ret 0x25; 
0x0807a292: add byte ptr [edi], cl; xchg eax, ebp; ret 0xc0c7; 
0x08062c7c: add byte ptr [edi], cl; xchg eax, ebp; ret; 
0x0807a9cc: add byte ptr [edi], cl; xchg eax, esp; ret 0xc0c7; 
0x080ab2b7: add byte ptr [edi], cl; xchg eax, esp; rol dword ptr [ecx], 0xc9; call dword ptr gs:[0x10]; 
0x08059766: add byte ptr [edx + 0x50], dl; mov esi, dword ptr [esp + 0x24]; push esi; call dword ptr [ebx + 0x40]; 
0x0805c13f: add byte ptr [edx + 0x50], dl; push esi; call dword ptr [ebx + 0x40]; 
0x080a4ce3: add byte ptr [edx + 0x59], bl; pop eax; jmp dword ptr [eax]; 
0x080791ad: add byte ptr [edx + 0x64], bh; mov eax, 0x80e6f60; mov eax, dword ptr [eax]; test eax, eax; cmove eax, edx; ret; 
0x080ad120: add byte ptr [edx + 0xe], bl; or bh, al; ret; 
0x080493bb: add byte ptr [edx + 1], bh; call dword ptr gs:[0x10]; 
0x080652fd: add byte ptr [edx + 1], bh; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x08050872: add byte ptr [edx + 1], bh; mov eax, 0xf0; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x0805095e: add byte ptr [edx + 1], bh; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x080991dd: add byte ptr [edx + 1], bh; mov ebx, edi; call dword ptr gs:[0x10]; 
0x08050ba4: add byte ptr [edx + 1], bh; mov esi, edi; call dword ptr gs:[0x10]; 
0x08059b13: add byte ptr [edx + 1], ch; push 0; push 0; push dword ptr [esp + 0x24]; call dword ptr [ebx + 0x40]; 
0x0805c363: add byte ptr [edx + 1], ch; push 0; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x080608a5: add byte ptr [edx + 2], bh; xor esi, esi; call dword ptr gs:[0x10]; 
0x080598ae: add byte ptr [edx + 2], ch; push 0; push 0; push dword ptr [esp + 0x24]; call dword ptr [edi + 0x40]; 
0x0805c254: add byte ptr [edx + 2], ch; push 0; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x0805b573: add byte ptr [edx + ebx*2 - 0x75], dh; inc ebp; in al, 0xc7; ret; 
0x080a3d93: add byte ptr [edx - 0x75], bl; or al, 0x24; mov dword ptr [esp], eax; mov eax, dword ptr [esp + 4]; ret 0xc; 
0x0806db5f: add byte ptr [edx - 0x76fd77ff], cl; clc; pop edi; ret; 
0x080a1415: add byte ptr [edx - 0x7b], dl; ror byte ptr [edi], 0x44; test dword ptr [edi + edi*8 - 1], esi; call dword ptr [eax - 1]; 
0x08049d6d: add byte ptr [edx - 0x7f], bl; ret 0xb292; 
0x0805b570: add byte ptr [edx], 0; add byte ptr [edx + ebx*2 - 0x75], dh; inc ebp; in al, 0xc7; ret; 
0x0807afcc: add byte ptr [edx], 0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0807af8d: add byte ptr [edx], 0; add esp, 0x18; pop ebx; ret; 
0x08098f58: add byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ebx - 0x3fcef73c], al; pop ebx; ret; 
0x080888e8: add byte ptr [edx], al; add byte ptr [eax], al; mov dword ptr gs:[ecx], eax; pop ebx; ret; 
0x0807eb24: add byte ptr [edx], al; add esp, 8; pop ebx; ret; 
0x0807ae9c: add byte ptr [edx], al; std; dec dword ptr [ebp - 0x2d7697d]; call dword ptr [esi + 0x56]; 
0x08075c00: add byte ptr [edx], ch; lea eax, [esp + 0x34]; push eax; push dword ptr [ebp + 8]; call esi; 
0x0805bfd7: add byte ptr [edx], ch; mov eax, ebp; push ebx; push ecx; push esi; call dword ptr [eax + 0x40]; 
0x08075bfe: add byte ptr [edx], ch; push 0; lea eax, [esp + 0x34]; push eax; push dword ptr [ebp + 8]; call esi; 
0x08080e72: add byte ptr [edx], ch; push 0; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; call edi; 
0x08083258: add byte ptr [edx], ch; push 0; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x5c]; call edi; 
0x0807efee: add byte ptr [edx], ch; push 0; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; call edi; 
0x0808192f: add byte ptr [edx], ch; push 0; push dword ptr [esp + 0x60]; push dword ptr [esp + 0x60]; call edi; 
0x08080173: add byte ptr [edx], ch; push 0; push dword ptr [esp + 0x60]; push dword ptr [esp + 0x68]; call edi; 
0x08083b6f: add byte ptr [edx], ch; push 0; push dword ptr [esp + 0x68]; push dword ptr [esp + 0x68]; call edi; 
0x0807ca5d: add byte ptr [edx], ch; push 0; push eax; push dword ptr [esi + 4]; call edi; 
0x080b1f98: add byte ptr [edx], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x69ef0; add esp, 0x1c; ret; 
0x08059b17: add byte ptr [edx], ch; push dword ptr [esp + 0x24]; call dword ptr [ebx + 0x40]; 
0x080598b2: add byte ptr [edx], ch; push dword ptr [esp + 0x24]; call dword ptr [edi + 0x40]; 
0x08080e74: add byte ptr [edx], ch; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; call edi; 
0x0808325a: add byte ptr [edx], ch; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x5c]; call edi; 
0x0807eff0: add byte ptr [edx], ch; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; call edi; 
0x08081931: add byte ptr [edx], ch; push dword ptr [esp + 0x60]; push dword ptr [esp + 0x60]; call edi; 
0x08080175: add byte ptr [edx], ch; push dword ptr [esp + 0x60]; push dword ptr [esp + 0x68]; call edi; 
0x08083b71: add byte ptr [edx], ch; push dword ptr [esp + 0x68]; push dword ptr [esp + 0x68]; call edi; 
0x0807ca5f: add byte ptr [edx], ch; push eax; push dword ptr [esi + 4]; call edi; 
0x0805f526: add byte ptr [edx], ch; push ebp; call dword ptr [ebx + 0x2c]; 
0x0805c94a: add byte ptr [edx], ch; push ebp; push edi; push ebx; call dword ptr [esi + 0x40]; 
0x0805cefc: add byte ptr [edx], ch; push ebx; call dword ptr [ebp + 0x24]; 
0x080595f4: add byte ptr [edx], ch; push ebx; push ecx; push dword ptr [esp + 0x24]; call dword ptr [edi + 0x40]; 
0x08059764: add byte ptr [edx], ch; push edx; push eax; mov esi, dword ptr [esp + 0x24]; push esi; call dword ptr [ebx + 0x40]; 
0x0805c13d: add byte ptr [edx], ch; push edx; push eax; push esi; call dword ptr [ebx + 0x40]; 
0x0805c258: add byte ptr [edx], ch; push esi; call dword ptr [ebx + 0x40]; 
0x0805cdff: add byte ptr [edx], ch; push esi; call dword ptr [edi + 0x40]; 
0x0807e255: add byte ptr [esi + 0x5f], bl; ret; 
0x0809d3d4: add byte ptr [esi + 0x6a], dl; or al, 0xe8; ret; 
0x0806dcef: add byte ptr [esi + 0xf], ah; adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x0807484b: add byte ptr [esi + 0xf], ah; cmp ah, byte ptr [ebx - 0x35]; add cl, byte ptr [edi]; xchg eax, esp; ret 0x920f; 
0x0806805f: add byte ptr [esi + 0xf], ah; outsb dx, byte ptr [esi]; shl byte ptr [esi + 0xf], 0x70; rol byte ptr [eax], 0xf7; ret 0xf; 
0x08070ed1: add byte ptr [esi + 0xf], ah; xlatb; ret 0xc085; 
0x080608e9: add byte ptr [esi + 4], dh; ret; 
0x08088cb9: add byte ptr [esi + 8], bh; call dword ptr gs:[0x10]; 
0x0806070f: add byte ptr [esi - 0x18], dl; lcall 0x14c4:0x83ffffe7; pop ebx; pop esi; ret; 
0x08070fcd: add byte ptr [esi - 0x70], ah; bsf eax, eax; lea eax, [eax + edi + 0x10]; pop edi; ret; 
0x08085a7d: add byte ptr [esi - 0x70], ah; endbr32; call 0x2a7f; add eax, 0x5f577; mov eax, dword ptr [eax + 0x1968]; ret; 
0x0805e79d: add byte ptr [esi - 0x70], ah; endbr32; mov eax, 0xffffffff; ret; 
0x0805fe1d: add byte ptr [esi - 0x70], ah; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x0805fe0d: add byte ptr [esi - 0x70], ah; endbr32; xor eax, eax; ret; 
0x0806f4ed: add byte ptr [esi - 0x70], ah; mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, [edx]; ret; 
0x080700fd: add byte ptr [esi - 0x70], ah; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edx; ret; 
0x0806f4fd: add byte ptr [esi - 0x70], ah; mov ax, word ptr [ecx]; mov word ptr [edx], ax; lea eax, [edx + 1]; ret; 
0x0806dc8d: add byte ptr [esi - 0x70], ah; mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edx; ret; 
0x08049cbd: add byte ptr [esi - 0x70], ah; ret; 
0x0806638d: add byte ptr [esi - 0x70], ah; sub esp, 8; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x10]; call eax; 
0x08077b7f: add byte ptr [esi - 0x75], dh; dec esp; and al, 0x10; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x0809986f: add byte ptr [esi - 0x75], dh; dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0807a271: add byte ptr [esi - 0x77], ah; cmp dword ptr [ebx + ecx - 0x7c730000], 0x3f; sub ch, bh; call dword ptr [eax - 0x18]; 
0x08049d3b: add byte ptr [esi], 0; add esp, 0x10; mov byte ptr [0x80e62e0], 1; leave; ret; 
0x08088c58: add byte ptr [esi], dl; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x08071c17: add byte ptr [esp + ebx*2 - 0x48], dh; adc byte ptr [eax], al; add byte ptr [eax], al; pop edi; ret; 
0x080a1f3e: add byte ptr ds:[ebp - 0x72], dh; mov edx, edi; mov ebx, dword ptr [ebp - 0x248]; lea ecx, [ebp - 0x218]; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0806f39d: add byte ptr es:[eax + 0x16f0ff3], dl; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x0806db4d: add byte ptr es:[eax + 0x16f0ff3], dl; movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x08069fed: add byte ptr es:[eax + 0x1b8], dl; add byte ptr [edi + 2], dh; neg eax; ret; 
0x08069f5d: add byte ptr es:[eax + 0x248b60f], dl; movzx eax, byte ptr [edx + 2]; sub eax, ecx; ret; 
0x08069f6d: add byte ptr es:[eax + 0x348b60f], dl; movzx eax, byte ptr [edx + 3]; sub eax, ecx; ret; 
0x08051135: add byte ptr es:[eax + 0x3901c083], dl; ret; 
0x08069f7d: add byte ptr es:[eax + 0x448b60f], dl; movzx eax, byte ptr [edx + 4]; sub eax, ecx; ret; 
0x0806c29d: add byte ptr es:[eax + 0x486f0ff3], dl; ret; 
0x08069f8d: add byte ptr es:[eax + 0x548b60f], dl; movzx eax, byte ptr [edx + 5]; sub eax, ecx; ret; 
0x0807057d: add byte ptr es:[eax + 0x5f01478d], dl; ret; 
0x08069f9d: add byte ptr es:[eax + 0x648b60f], dl; movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x08069f3d: add byte ptr es:[eax + 0xf08b60f], dl; mov dh, 2; sub eax, ecx; ret; 
0x08098b55: add byte ptr es:[eax - 0x37763e77], dl; ret; 
0x0808fd0d: add byte ptr es:[eax - 0x3f7cef77], dl; add al, 0x83; ret 0x3910; 
0x080a1b3d: add byte ptr es:[eax - 0x3f7cf775], dl; or byte ptr [ebp + 0x39010a54], cl; ret; 
0x0806babd: add byte ptr es:[eax - 0x49f0f18e], dl; add byte ptr [edi], cl; mov dh, 0x12; sub eax, edx; ret; 
0x0807aedd: add byte ptr es:[eax - 0x4e1f00d], dl; call 0x2a7f; add eax, 0x6a117; lea eax, [eax + 0xa60]; ret; 
0x08099c9d: add byte ptr es:[eax - 0x74fba875], dl; inc ebp; fadd dword ptr [ebx - 0x377cf040]; add eax, dword ptr [ecx]; ret 0x458b; 
0x0806381d: add byte ptr es:[eax - 0x74fbb477], dl; test dword ptr [eax - 0x7d000000], eax; ret 0x8b08; 
0x0807c1b5: add byte ptr es:[eax - 0x7c76fb73], dl; ret; 
0x080ae71d: add byte ptr es:[eax - 0x7cec49f1], dl; ret; 
0x08069fad: add byte ptr es:[eax - 0x7cf73f7d], dl; ret 0xf608; 
0x0806a30d: add byte ptr es:[eax - 0x7cfe49f1], dl; rol dword ptr [ecx], 0x83; ret 0xf01; 
0x080b07dd: add byte ptr es:[eax - 0xf7137d], dl; jne 0x687f2; push ebx; call dword ptr [ebp + 8]; 
0x08070fbb: add byte ptr es:[eax], al; add byte ptr [eax], al; bsf eax, eax; add eax, edi; pop edi; ret; 
0x08070fdb: add byte ptr es:[eax], al; add byte ptr [eax], al; bsf eax, eax; lea eax, [eax + edi + 0x20]; pop edi; ret; 
0x0805090b: add byte ptr es:[eax], al; add byte ptr [eax], al; call dword ptr [esi]; 
0x080b01cb: add byte ptr es:[eax], al; add byte ptr [eax], al; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x48]; ret; 
0x0805ee9b: add byte ptr es:[eax], al; add byte ptr [eax], al; endbr32; xor eax, eax; ret; 
0x08098653: add byte ptr es:[eax], al; add byte ptr [eax], al; lea ebx, [eax + 4]; mov eax, ebx; pop ebx; ret; 
0x08071558: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; bsf eax, eax; lea eax, [eax + edx + 0x10]; ret; 
0x0805ee94: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; endbr32; xor eax, eax; ret; 
0x080705f7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xa]; pop edi; ret; 
0x08070607: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xb]; pop edi; ret; 
0x08070617: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xc]; pop edi; ret; 
0x08070627: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xd]; pop edi; ret; 
0x08070637: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xe]; pop edi; ret; 
0x08070587: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 2]; pop edi; ret; 
0x08070597: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 3]; pop edi; ret; 
0x080705a7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 4]; pop edi; ret; 
0x080705b7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 5]; pop edi; ret; 
0x080705c7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 6]; pop edi; ret; 
0x080705d7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 8]; pop edi; ret; 
0x080705e7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 9]; pop edi; ret; 
0x08097f57: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xa]; pop edi; ret; 
0x08097f47: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xb]; pop edi; ret; 
0x08097f37: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xd]; pop edi; ret; 
0x08097f27: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xe]; pop edi; ret; 
0x08097fc7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 1]; pop edi; ret; 
0x08097fb7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 2]; pop edi; ret; 
0x08097fa7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 3]; pop edi; ret; 
0x08097f97: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 5]; pop edi; ret; 
0x08097f87: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 6]; pop edi; ret; 
0x08097f77: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 7]; pop edi; ret; 
0x08097f67: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 9]; pop edi; ret; 
0x080712a5: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 1]; ret; 
0x08066f68: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 0x16; add esp, 0xc; ret; 
0x08098a95: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 1; ret; 
0x08098aa8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 2; ret; 
0x08098ab8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 3; ret; 
0x08098ac8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 4; ret; 
0x08098ad8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 5; ret; 
0x08098ae8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 6; ret; 
0x08098af8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 7; ret; 
0x08098a76: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; add eax, 3; ret; 
0x08071316: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 0xa]; ret; 
0x08071326: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 0xc]; ret; 
0x08071336: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 0xd]; ret; 
0x08071346: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 0xe]; ret; 
0x080712b6: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 2]; ret; 
0x080712c6: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 4]; ret; 
0x080712d6: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 5]; ret; 
0x080712e6: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 6]; ret; 
0x080712f6: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 8]; ret; 
0x08071306: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 9]; ret; 
0x08071356: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; xor eax, eax; ret; 
0x080608b8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; pop ebx; pop esi; ret; 
0x0805fc18: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; ret; 
0x08070647: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; xor eax, eax; pop edi; ret; 
0x0806a194: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; xor eax, eax; ret; 
0x08098c6b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, 0x193; mov ecx, edi; call dword ptr gs:[0x10]; 
0x08070c0b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, edi; pop edi; ret; 
0x0804a773: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, edx; int 0x80; 
0x08069f4b: add byte ptr es:[eax], al; add byte ptr [eax], al; movzx ecx, byte ptr [eax + 1]; movzx eax, byte ptr [edx + 1]; sub eax, ecx; ret; 
0x08071c2a: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; add eax, 1; pop edi; ret; 
0x0807154a: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; bsf eax, eax; add eax, edx; ret; 
0x0807156a: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; bsf eax, eax; lea eax, [eax + edx + 0x20]; ret; 
0x0805e799: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; endbr32; mov eax, 0xffffffff; ret; 
0x0805fe09: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; endbr32; xor eax, eax; ret; 
0x080b1e5a: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; pop ebx; ret; 
0x08049cb9: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; ret; 
0x080713ba: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; xor eax, eax; ret; 
0x0806556b: add byte ptr es:[eax], al; add byte ptr [eax], al; sub esp, 8; push dword ptr [esp + 0x24]; push esi; call eax; 
0x080ab7e3: add byte ptr es:[eax], al; add byte ptr [eax], al; xor eax, eax; pop ebx; ret; 
0x0806a19b: add byte ptr es:[eax], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x08097196: add byte ptr es:[ebp + 0xf0], bh; xor esi, esi; mov eax, ebp; mov ecx, 0x80; call dword ptr gs:[0x10]; 
0x0808640e: add byte ptr es:[ebp - 0x7aef8b2e], al; sar byte ptr [edx], 0xf; dec eax; ret 0xc083; 
0x080a96fe: add byte ptr es:[ebx + 0x5e], bl; pop edi; ret; 
0x08059aee: add byte ptr es:[ebx - 0x38e7dbbc], cl; ret 0x5f80; 
0x080abce6: add byte ptr es:[ebx - 0x48], bl; add dword ptr [eax], eax; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x08093ede: add byte ptr es:[ebx - 0x4a343], al; jmp dword ptr [eax]; 
0x080568fe: add byte ptr es:[ebx - 0x4e77b], cl; jmp dword ptr [ebp - 0x75]; 
0x080b1a96: add byte ptr es:[ecx - 0x7c17760e], cl; ret; 
0x08096f3e: add byte ptr es:[ecx], ch; ret; 
0x08098626: add byte ptr es:[ecx], dh; fild dword ptr [ebp - 0x760d8b37]; ret; 
0x08075536: add byte ptr es:[ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x0806db5e: add byte ptr es:[edx - 0x76fd77ff], cl; clc; pop edi; ret; 
0x080791af: add byte ptr fs:[eax], al; add bh, al; shl byte ptr [eax + 0x6f], 0xe; or byte ptr [ebx + 0xfc08500], cl; inc esp; ret 0x66c3; 
0x080a0229: add ch, al; and dword ptr [edx], 0x458b0000; cwde; add esp, 0x20; lea esi, [esi]; call eax; 
0x080a0f13: add ch, al; xchg eax, edi; adc eax, 0xc4830000; and byte ptr [ebx + 0x4503a045], cl; movsb byte ptr es:[edi], byte ptr [esi]; call eax; 
0x08066c34: add ch, bh; call dword ptr [eax - 0x18]; 
0x08060ef2: add ch, bh; call dword ptr [edi - 1]; 
0x08066fb0: add ch, bh; call dword ptr [esi + 0x50]; 
0x0805a798: add ch, bh; cld; call dword ptr [eax - 0x18]; 
0x08096fe5: add ch, bl; ljmp 0x5bff:0xffffffb8; ret; 
0x0809093c: add ch, byte ptr [ecx]; ret; 
0x080598b0: add ch, byte ptr [edx]; push 0; push dword ptr [esp + 0x24]; call dword ptr [edi + 0x40]; 
0x0805c256: add ch, byte ptr [edx]; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x0805cdfd: add ch, byte ptr [edx]; push 0; push esi; call dword ptr [edi + 0x40]; 
0x0807e087: add ch, byte ptr [esi]; std; call dword ptr [eax - 0x18]; 
0x080af6fa: add ch, cl; call 0x100676fe; mov dh, 0x73; add dword ptr [ebx - 0x7cf3db84], ecx; ret; 
0x080a89a9: add cl, 0xe2; add al, 0x81; ret 0x5a00; 
0x0809e101: add cl, 0xe3; add al, 3; pop esp; and al, 0x44; push dword ptr [esp + 0x38]; call dword ptr [ebx + 0x38]; 
0x080638b1: add cl, al; call 0xffff39ca; dec dword ptr [ebx]; add byte ptr [ecx + 0xf6c244c], cl; inc edi; ret 0x548b; 
0x0804ec44: add cl, al; cli; add al, byte ptr [ecx - 0xccc1e]; inc dword ptr [ecx]; ret 0xd089; 
0x0807cde0: add cl, al; ret 0x8909; 
0x08075280: add cl, byte ptr [eax + 0x24448b27]; adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x080687fd: add cl, byte ptr [eax + 0x448b5f07]; and al, 8; pop ebx; ret; 
0x0806dd0a: add cl, byte ptr [eax - 0x2f76f7be]; ret; 
0x0806dca8: add cl, byte ptr [eax - 0x2f76fdbe]; ret; 
0x0806dbca: add cl, byte ptr [eax - 0x776f7be]; pop edi; ret; 
0x0806db88: add cl, byte ptr [eax - 0x776fdbe]; pop edi; ret; 
0x080a96d5: add cl, byte ptr [ebp + 0x1074ff50]; lea ebx, [esi + edx*4]; nop; call dword ptr [ebx]; 
0x0805b52a: add cl, byte ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x08050904: add cl, byte ptr [ebp - 0x72fb7984]; mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr [esi]; 
0x08067dde: add cl, byte ptr [ebp - 0x7323f6e]; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x08067da0: add cl, byte ptr [ebp - 0x7720f6e]; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x08067270: add cl, byte ptr [ebp - 0x78a5f6e]; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0806722e: add cl, byte ptr [ebp - 0x7c46f6e]; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0804a7c6: add cl, byte ptr [ecx + 0x180b8c1]; add byte ptr [eax], al; mov ebx, 0x3002; int 0x80; 
0x0806dd6a: add cl, byte ptr [ecx - 0x2f76f7be]; ret; 
0x0806dd4a: add cl, byte ptr [ecx - 0x2f76f8be]; ret; 
0x0807c01d: add cl, byte ptr [ecx - 0x3b7cfbbe]; add al, 0x5b; pop esi; ret; 
0x080aafcf: add cl, byte ptr [ecx - 0x76f3dbbc]; lds ecx, ptr [edi]; xchg eax, esp; ret 0xf883; 
0x0806db1a: add cl, byte ptr [ecx - 0x776f7be]; pop edi; ret; 
0x0806dc0a: add cl, byte ptr [ecx - 0x776f8be]; pop edi; ret; 
0x0805d429: add cl, byte ptr [edi]; dec edi; ret 0xc101; 
0x08086eb8: add cl, byte ptr [edi]; dec edi; ret 0xc301; 
0x0809a0c5: add cl, byte ptr [edi]; inc edx; ret; 
0x080aebd9: add cl, byte ptr [edi]; scasd eax, dword ptr es:[edi]; xchg dword ptr [eax + 0x1000000], esi; ret 0x9789; 
0x08097e9c: add cl, byte ptr [edi]; test dword ptr [ebp], edi; add byte ptr [eax], al; lea eax, [edi - 0x10]; pop edi; ret; 
0x08071978: add cl, byte ptr [edi]; test dword ptr [ecx - 0xa000000], esi; ret 0xf04; 
0x08097eeb: add cl, byte ptr [edi]; test dword ptr [esi - 0x73000000], ecx; inc edi; clc; pop edi; ret; 
0x08071865: add cl, byte ptr [edi]; test esp, eax; add eax, dword ptr [eax]; add dh, dh; ret 0xf04; 
0x08095835: add cl, byte ptr [edi]; xchg eax, ebp; ret 0x5689; 
0x0805d30b: add cl, byte ptr [edi]; xchg eax, esi; ret 0x540a; 
0x08074851: add cl, byte ptr [edi]; xchg eax, esp; ret 0x920f; 
0x08082c4f: add cl, ch; leave; idiv bh; dec dword ptr [ebx - 0x72cfdba4]; and dword ptr [eax + 0x37], 0xfffffffd; call dword ptr [eax + 0x68]; 
0x08092195: add cl, ch; ljmp 0x7487:0x8dffffe2; stc; cld; call dword ptr [eax + 0x68]; 
0x08055054: add cl, ch; outsb dx, byte ptr [esi]; idiv edi; dec dword ptr [ebp + 0xb6]; add byte ptr [ebx - 0x4937b], cl; jmp dword ptr [ebp - 0x39]; 
0x08053a8f: add cl, ch; ret 0xffe8; 
0x0806343a: add cl, ch; ret; 
0x0809c15f: add dh, al; add esp, dword ptr [ebx + eax*4]; ret; 
0x08079e24: add dh, al; inc esp; and al, 0x53; add byte ptr [ecx - 0x38dfdba4], cl; ret; 
0x080910eb: add dh, al; test dword ptr [ebx], esp; idiv edi; jmp dword ptr [eax]; 
0x08074606: add dh, bh; fcomp dword ptr [edi + 0x5b]; ret; 
0x0809959b: add dh, bh; jmp dword ptr [esi - 0x70]; 
0x0808de20: add dh, byte ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx - 0x74efdbac], cl; push edx; or byte ptr [ecx - 0x7ca7dbac], cl; ret 0x3917; 
0x0804a7cf: add dh, byte ptr [eax]; add byte ptr [eax], al; int 0x80; 
0x0807153c: add dh, byte ptr [eax]; ret; 
0x08096902: add dh, byte ptr [ebp + 0x18]; sub esp, 0xc; mov eax, dword ptr [eax + 0x88]; push ebx; call dword ptr [eax + 0x34]; 
0x08049b53: add dh, byte ptr [ecx - 0x7d]; rol byte ptr [ecx], 0x89; ret 0xd189; 
0x080687fb: add dh, byte ptr [edx + eax - 0x78]; pop es; pop edi; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x08097ee8: add dh, dh; les eax, ptr [edx]; jne 0x4ff80; lea eax, [edi - 8]; pop edi; ret; 
0x08097f11: add dh, dh; les esp, ptr [eax]; jne 0x4ffb0; lea eax, [edi - 4]; pop edi; ret; 
0x08095b79: add dh, dh; pop es; add dword ptr [edi], ecx; inc ebp; ret 0xec83; 
0x0808aa47: add dh, dh; ret 0x7401; 
0x0804a1d0: add dh, dh; ret 0x7402; 
0x080a01e4: add dh, dh; ret 0x7403; 
0x0805845f: add dh, dh; ret 0x7420; 
0x0804a1dc: add dh, dh; ret 0x7440; 
0x0806b46d: add dh, dh; ret 0x7501; 
0x080a8567: add dh, dh; ret 0x7510; 
0x080703f7: add dh, dh; ret 0xf01; 
0x08070408: add dh, dh; ret 0xf02; 
0x08099d03: add dh, dh; ret 0xf03; 
0x08070419: add dh, dh; ret 0xf04; 
0x08080fe9: add dh, dh; ret 0xf08; 
0x080703b1: add dh, dh; ret 0xf10; 
0x080703c2: add dh, dh; ret 0xf20; 
0x080703d3: add dh, dh; ret 0xf40; 
0x0808baa8: add dh, dh; ret 0xf50; 
0x08082d1f: add dh, dh; ret; 
0x080a90a4: add dl, bh; inc edi; ret 0x5a00; 
0x08092d2b: add dl, byte ptr [eax + 0x51]; push esi; call dword ptr [ebx + 0x1c]; 
0x080923ab: add dl, byte ptr [eax + 0x51]; push esi; mov dword ptr [ebp - 0x45c], eax; call dword ptr [ebx + 0x1c]; 
0x08090286: add dl, byte ptr [eax + 0x52]; push dword ptr [ebp - 0x8a0]; call dword ptr [ebx + 0x1c]; 
0x0808f4ce: add dl, byte ptr [esi + 0x52]; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x1c]; 
0x08075438: add dword ptr [eax + 0x2b], eax; inc esp; and al, 4; ret; 
0x0808340e: add dword ptr [eax + 0x37], -3; call dword ptr [eax + 0x68]; 
0x080832c2: add dword ptr [eax + 0x37], -3; call dword ptr [eax - 0x73]; 
0x0809ec6f: add dword ptr [eax + 0x40], -2; call dword ptr [eax - 0x73]; 
0x0805e8a5: add dword ptr [eax + 0x51], edx; mov dword ptr [esp + 0x40], ecx; call dword ptr [ebx + 0xc]; 
0x0809887e: add dword ptr [eax + 0x57], edx; lea eax, [esp + 0x40]; push eax; push dword ptr [ebp]; call esi; 
0x080754c6: add dword ptr [eax + 0x5bf88927], ecx; pop esi; pop edi; ret; 
0x080751bf: add dword ptr [eax + 0x5d], eax; pop ebx; pop esi; pop edi; ret; 
0x08049c52: add dword ptr [eax + 0x5e], -0xa; call dword ptr [eax + 0x51]; 
0x0806f3b1: add dword ptr [eax + 0x5f028d02], ecx; ret; 
0x08074b96: add dword ptr [eax + 0x5f], eax; pop esi; ret; 
0x08067f8b: add dword ptr [eax + 0x5f], eax; ret; 
0x0806db61: add dword ptr [eax + 0x5ff88902], ecx; ret; 
0x080ab009: add dword ptr [eax + 0xf2e2454], ecx; xchg eax, ebp; ret 0xd689; 
0x08057955: add dword ptr [eax + 0xf], ebp; test byte ptr [esi - 0x72ffffff], dh; inc ebp; add al, byte ptr [eax - 0x76fdf3b2]; aad 0x89; ret 0xa3e9; 
0x080a9c6a: add dword ptr [eax + ebx*4], -2; call dword ptr [eax - 0x18]; 
0x08061464: add dword ptr [eax - 0x46], -9; call dword ptr [eax + 0x56]; 
0x080613d4: add dword ptr [eax - 0x47], -9; call dword ptr [eax + 0x56]; 
0x08054b84: add dword ptr [eax - 0x4af43], eax; jmp dword ptr [eax]; 
0x0807eaf1: add dword ptr [eax - 0x6a], -7; call dword ptr [eax - 0x73]; 
0x0804b8bd: add dword ptr [eax - 0x6bf0d006], eax; ret 0xb60f; 
0x08099ae3: add dword ptr [eax - 0x7c2676f6], ecx; ret 0x8401; 
0x080909b5: add dword ptr [eax - 0x8dc43], eax; jmp dword ptr [eax]; 
0x0804e2c4: add dword ptr [eax - 1], -1; call dword ptr [eax - 0x75]; 
0x0805d5b3: add dword ptr [eax], -3; cld; call dword ptr [eax - 0x18]; 
0x08090e69: add dword ptr [eax], 0; add byte ptr [ebx - 0x8bf43], al; call dword ptr [eax]; 
0x080652fa: add dword ptr [eax], 0x1ba0000; add byte ptr [eax], al; add byte ptr [eax + 0xf0], bh; call dword ptr gs:[0x10]; 
0x0805086f: add dword ptr [eax], 0x1ba0000; add byte ptr [eax], al; add byte ptr [eax + 0xf0], bh; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x08066cc4: add dword ptr [eax], 0xeb890000; mov edx, 1; call dword ptr gs:[0x10]; 
0x0804bf78: add dword ptr [eax], 0xf6310000; mov edx, 1; call dword ptr gs:[0x10]; 
0x08066a83: add dword ptr [eax], 0xfa890000; call dword ptr gs:[0x10]; 
0x080628e4: add dword ptr [eax], 0xfb890000; mov edx, 1; call dword ptr gs:[0x10]; 
0x0805f142: add dword ptr [eax], eax; add bh, al; ret 0x5f80; 
0x08081b79: add dword ptr [eax], eax; add bh, dh; ret; 
0x080a93b9: add dword ptr [eax], eax; add bl, bh; mov eax, dword ptr [ebp - 0x2c]; push esi; call dword ptr [eax]; 
0x08083fd4: add dword ptr [eax], eax; add bl, ch; mov eax, 0xff55d2e8; dec dword ptr [ebx - 0x72cbdba4]; xor dword ptr [eax + 0x35], 0xfffffffd; call dword ptr [eax - 0x73]; 
0x08088a34: add dword ptr [eax], eax; add byte ptr [eax + 0x10e], bh; call dword ptr gs:[0x10]; 
0x0808126e: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; adc eax, 0x34; std; call dword ptr [eax - 0x18]; 
0x0805d5ae: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; add dword ptr [eax], -3; cld; call dword ptr [eax - 0x18]; 
0x0807e081: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; add dword ptr [edx], 0x2e; std; call dword ptr [eax - 0x18]; 
0x08088789: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; add edi, 0x41; std; call dword ptr [eax - 0x18]; 
0x08087568: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; and dword ptr [edx + 0x3a], 0xfffffffd; call dword ptr [eax - 0x18]; 
0x0807e0cf: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; and esi, 0x2d; std; call dword ptr [eax - 0x18]; 
0x080812d7: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; cmp eax, 0x34; std; call dword ptr [eax - 0x18]; 
0x080aa6e9: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; or dword ptr [ebp - 0x69], 0xfffffffe; call dword ptr [eax - 0x18]; 
0x08099fe8: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; sbb dword ptr [ebp + 0x35], -2; call dword ptr [eax - 0x18]; 
0x080a93e1: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; sbb dword ptr [edx - 0x6c], -2; call dword ptr [eax - 0x18]; 
0x08088729: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; sbb esp, 0x41; std; call dword ptr [eax - 0x18]; 
0x0805d5cd: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; sub edx, -4; cld; call dword ptr [eax - 0x18]; 
0x0805d5cd: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; sub edx, -4; cld; call dword ptr [eax - 0x18]; ret; 
0x0807e0ab: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xor ebp, 0x2d; std; call dword ptr [eax - 0x18]; 
0x08080794: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xor esi, 0x33; std; call dword ptr [eax - 0x18]; 
0x0809697b: add dword ptr [eax], eax; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x080a3ce9: add dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr [eax]; 
0x080493bd: add dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x08076a0b: add dword ptr [eax], eax; add byte ptr [eax], al; int 0x80; 
0x08069ff1: add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x21ff9; neg eax; ret; 
0x0806a1b1: add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x221b9; neg eax; ret; 
0x0806a379: add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x22381; neg eax; ret; 
0x0806b9f2: add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x239fa; neg eax; ret; 
0x0806baa1: add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x23aa9; neg eax; ret; 
0x0806c588: add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x24590; neg eax; ret; 
0x080609aa: add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [eax + 0x480], edx; ret; 
0x0806095a: add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [eax + 0x484], edx; ret; 
0x0806092a: add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [eax + 0x498], edx; ret; 
0x080652ff: add dword ptr [eax], eax; add byte ptr [eax], al; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x08050874: add dword ptr [eax], eax; add byte ptr [eax], al; mov eax, 0xf0; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x08092ab9: add dword ptr [eax], eax; add byte ptr [eax], al; mov eax, dword ptr [ebx + eax*4]; jmp eax; 
0x080938ad: add dword ptr [eax], eax; add byte ptr [eax], al; mov eax, dword ptr [edi + eax*4 - 0x12c0]; jmp eax; 
0x08050960: add dword ptr [eax], eax; add byte ptr [eax], al; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x080991df: add dword ptr [eax], eax; add byte ptr [eax], al; mov ebx, edi; call dword ptr gs:[0x10]; 
0x080752ac: add dword ptr [eax], eax; add byte ptr [eax], al; mov ecx, 0xffffffff; cmovb eax, ecx; ret; 
0x08050ba6: add dword ptr [eax], eax; add byte ptr [eax], al; mov esi, edi; call dword ptr gs:[0x10]; 
0x08055b60: add dword ptr [eax], eax; add byte ptr [eax], al; movsx eax, cl; movzx eax, byte ptr [eax + edx - 0x20]; mov eax, dword ptr [edi + eax*4 - 0x17a0]; jmp eax; 
0x08055ac0: add dword ptr [eax], eax; add byte ptr [eax], al; movsx eax, cl; movzx eax, byte ptr [eax + edx - 0x20]; mov eax, dword ptr [edi + eax*4 - 0x18a0]; jmp eax; 
0x08092b02: add dword ptr [eax], eax; add byte ptr [eax], al; movzx eax, byte ptr [eax + ecx - 0x20]; mov eax, dword ptr [ebx + eax*4]; jmp eax; 
0x080550fb: add dword ptr [eax], eax; add byte ptr [eax], al; movzx eax, byte ptr [eax + edx - 0x20]; mov eax, dword ptr [ecx + eax*4]; jmp eax; 
0x08054d71: add dword ptr [eax], eax; add byte ptr [eax], al; movzx eax, byte ptr [eax + edx - 0x20]; mov eax, dword ptr [edi + eax*4 - 0x1820]; jmp eax; 
0x08092dae: add dword ptr [eax], eax; add byte ptr [eax], al; movzx eax, byte ptr [edx + ecx - 0x20]; mov eax, dword ptr [edi + eax*4 - 0x1240]; jmp eax; 
0x0809393e: add dword ptr [eax], eax; add byte ptr [eax], al; movzx eax, byte ptr [edx + ecx - 0x20]; mov eax, dword ptr [edi + eax*4 - 0x1340]; jmp eax; 
0x08095ba7: add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x080ab7db: add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; ret; 
0x0807e252: add dword ptr [eax], eax; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x080608fc: add dword ptr [eax], eax; add byte ptr [eax], al; ret; 
0x0804a76b: add dword ptr [eax], eax; add byte ptr [eax], al; xor ebx, ebx; lea esi, [esi]; mov eax, edx; int 0x80; 
0x08088ded: add dword ptr [eax], eax; add byte ptr [ebp + 0x51], dl; lea esi, [ecx + eax]; push esi; call edi; 
0x08081b71: add dword ptr [eax], eax; add byte ptr [ebp + 0x6f880fdb], al; add dword ptr [eax], eax; add bh, dh; ret; 
0x0805fb35: add dword ptr [eax], eax; add byte ptr [ebp + 0xe], dh; sub edx, dword ptr [eax + 0xc]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x0804b82f: add dword ptr [eax], eax; add byte ptr [ebp - 0x137cf7b0], cl; or byte ptr [ebp - 0x30cd77d], cl; call dword ptr [eax + 0x52]; 
0x0807f727: add dword ptr [eax], eax; add byte ptr [ebp - 0x2cc1d7d], cl; call dword ptr [eax - 0x73]; 
0x080a8db2: add dword ptr [eax], eax; add byte ptr [ebp - 0x7c208a37], al; in al, dx; add al, 0x83; ret; 
0x08076c61: add dword ptr [eax], eax; add byte ptr [ebx + 0x1be4b384], cl; std; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x0808117c: add dword ptr [eax], eax; add byte ptr [ebx + 0x247c8b06], cl; cmp al, 0x89; ret 0xf989; 
0x0804a486: add dword ptr [eax], eax; add byte ptr [ebx + 0x3001], bh; lea ecx, [esp + 0x40]; int 0x80; 
0x0804a7cb: add dword ptr [eax], eax; add byte ptr [ebx + 0x3002], bh; int 0x80; 
0x0804a807: add dword ptr [eax], eax; add byte ptr [ebx + 0x3003], bh; xor ecx, ecx; int 0x80; 
0x080ab0d7: add dword ptr [eax], eax; add byte ptr [ebx + 0x3005], bh; call dword ptr gs:[0x10]; 
0x0809778e: add dword ptr [eax], eax; add byte ptr [ebx + 0x3910245c], cl; ret; 
0x080addfb: add dword ptr [eax], eax; add byte ptr [ebx + 0x3924245c], cl; ret; 
0x080958b1: add dword ptr [eax], eax; add byte ptr [ebx + 0x448d08ec], al; and al, 0x14; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x0805bacc: add dword ptr [eax], eax; add byte ptr [ebx + 0x448d08ec], al; and al, 0x24; push eax; push esi; call dword ptr [edi + 0x48]; 
0x0805b763: add dword ptr [eax], eax; add byte ptr [ebx + 0x448d08ec], al; and al, 0x34; push eax; push esi; call dword ptr [edi + 0x48]; 
0x0805c726: add dword ptr [eax], eax; add byte ptr [ebx + 0x555204ec], al; push esi; call dword ptr [ebx + 0x38]; 
0x0805bb20: add dword ptr [eax], eax; add byte ptr [ebx + 0x5e5b80ec], al; pop edi; ret; 
0x0804a0aa: add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0805f51f: add dword ptr [eax], eax; add byte ptr [ebx + 0x6a04ec], al; push 0; push ebp; call dword ptr [ebx + 0x2c]; 
0x08057ffe: add dword ptr [eax], eax; add byte ptr [ebx + 0x6a08ec], al; push edi; call dword ptr [ebx + 8]; 
0x0805b4e0: add dword ptr [eax], eax; add byte ptr [ebx - 0x137cdfa9], cl; add al, 0x29; ret 0x5052; 
0x080a2187: add dword ptr [eax], eax; add byte ptr [ebx - 0x23b63], cl; dec dword ptr [ebp - 0x1b72b7d]; call dword ptr [eax - 0x73]; 
0x08059377: add dword ptr [eax], eax; add byte ptr [ebx - 0x38e7dbbc], cl; ret 0x62d4; 
0x0804a841: add dword ptr [eax], eax; add byte ptr [ebx - 0x38f3db84], cl; ret 0x6f84; 
0x0804a855: add dword ptr [eax], eax; add byte ptr [ebx - 0x38f3db8c], cl; ret 0x6f84; 
0x080944df: add dword ptr [eax], eax; add byte ptr [ebx - 0x4637b], cl; inc dword ptr [eax - 0x41273]; call dword ptr [eax]; 
0x08056527: add dword ptr [eax], eax; add byte ptr [ebx - 0x4737b], cl; inc dword ptr [eax - 0x42273]; call dword ptr [eax]; 
0x080925e9: add dword ptr [eax], eax; add byte ptr [ebx - 0x47f7b], cl; jmp dword ptr [ebp - 0x39]; 
0x08077063: add dword ptr [eax], eax; add byte ptr [ebx - 0x64], bh; call dword ptr gs:[0x10]; 
0x08086384: add dword ptr [eax], eax; add byte ptr [ebx - 0x6c72f714], al; inc ebx; cmp ebp, edi; call dword ptr [edx + 0x50]; 
0x0807ef7d: add dword ptr [eax], eax; add byte ptr [ebx - 0x72cfdba4], cl; add eax, 0x38; std; call dword ptr [eax - 0x73]; 
0x080832ba: add dword ptr [eax], eax; add byte ptr [ebx - 0x72d3dba4], cl; add dword ptr [eax + 0x37], -3; call dword ptr [eax - 0x73]; 
0x08084670: add dword ptr [eax], eax; add byte ptr [ebx - 0x72d3dba4], cl; and eax, 0x36; std; call dword ptr [eax - 0x73]; 
0x080747e6: add dword ptr [eax], eax; add byte ptr [ebx - 0x76f3dbbc], cl; ret 0xe283; 
0x08089a87: add dword ptr [eax], eax; add byte ptr [ebx - 0x7af7dbbc], cl; ror byte ptr [edi], 0x85; ret 3; 
0x08097785: add dword ptr [eax], eax; add byte ptr [ebx - 0x7bf0fe05], al; push ebx; add dword ptr [eax], eax; add byte ptr [ebx + 0x3910245c], cl; ret; 
0x080863a2: add dword ptr [eax], eax; add byte ptr [ebx - 0x7c72f714], al; dec ecx; cmp ebp, edi; call dword ptr [eax - 1]; 
0x0809b25f: add dword ptr [eax], eax; add byte ptr [ebx - 0x976b], cl; inc dword ptr [ecx]; ret 0xf029; 
0x0805957a: add dword ptr [eax], eax; add byte ptr [ecx + 0x247c8bcb], cl; sbb al, 0x8b; je 0x115aa; sbb byte ptr [ecx], ch; ret; 
0x0808d428: add dword ptr [eax], eax; add byte ptr [ecx - 0x768fdbbc], cl; ret 0xc483; 
0x080793d1: add dword ptr [eax], eax; add byte ptr [ecx - 0x76ff743a], cl; ret 0xce80; 
0x080a220b: add dword ptr [eax], eax; add byte ptr [ecx], bh; ret 0x470f; 
0x080603b5: add dword ptr [eax], eax; add byte ptr [ecx], bh; ret 0x870f; 
0x0809b575: add dword ptr [eax], eax; add byte ptr [ecx], cl; ret 0xbc75; 
0x08088b3a: add dword ptr [eax], eax; add byte ptr [edi], cl; inc ebp; sar byte ptr [esi + 8], 1; mov eax, 0xae; call dword ptr gs:[0x10]; 
0x08098202: add dword ptr [eax], eax; add byte ptr [edi], cl; mov ebp, 0x5ff801c0; ret; 
0x08062c7a: add dword ptr [eax], eax; add byte ptr [edi], cl; xchg eax, ebp; ret; 
0x080ab2b5: add dword ptr [eax], eax; add byte ptr [edi], cl; xchg eax, esp; rol dword ptr [ecx], 0xc9; call dword ptr gs:[0x10]; 
0x08059b11: add dword ptr [eax], eax; add byte ptr [edx + 1], ch; push 0; push 0; push dword ptr [esp + 0x24]; call dword ptr [ebx + 0x40]; 
0x0805c252: add dword ptr [eax], eax; add byte ptr [edx + 2], ch; push 0; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x0809b6e5: add dword ptr [eax], eax; add cl, ch; ret; 
0x080a01e2: add dword ptr [eax], eax; add dh, dh; ret 0x7403; 
0x080a8565: add dword ptr [eax], eax; add dh, dh; ret 0x7510; 
0x080703f5: add dword ptr [eax], eax; add dh, dh; ret 0xf01; 
0x08070406: add dword ptr [eax], eax; add dh, dh; ret 0xf02; 
0x08070417: add dword ptr [eax], eax; add dh, dh; ret 0xf04; 
0x08080fe7: add dword ptr [eax], eax; add dh, dh; ret 0xf08; 
0x080703af: add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x080703c0: add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x080703d1: add dword ptr [eax], eax; add dh, dh; ret 0xf40; 
0x0808dae0: add dword ptr [eax], eax; add dh, dh; ret 0xf50; 
0x0804f386: add dword ptr [eax], eax; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x0805caf0: add dword ptr [eax], eax; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x080611cc: add dword ptr [eax], eax; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0805b70c: add dword ptr [eax], eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x0805b13d: add dword ptr [eax], eax; add esp, 0x18; pop ebx; ret; 
0x0807713b: add dword ptr [eax], eax; mov ecx, dword ptr [esp + 8]; mov edx, dword ptr [esp + 0xc]; mov esi, eax; mov eax, 3; call dword ptr gs:[0x10]; 
0x080771db: add dword ptr [eax], eax; mov ecx, dword ptr [esp + 8]; mov edx, dword ptr [esp + 0xc]; mov esi, eax; mov eax, 4; call dword ptr gs:[0x10]; 
0x0804a48a: add dword ptr [eax], esi; add byte ptr [eax], al; lea ecx, [esp + 0x40]; int 0x80; 
0x08088ca9: add dword ptr [ebp + 0x44], esi; mov ecx, esi; mov ebx, dword ptr [esp + 0xa0]; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x080a3a77: add dword ptr [ebp - 0x1b4777d], ecx; call dword ptr [eax - 0x73]; 
0x08098b4d: add dword ptr [ebp - 0x28], esi; mov eax, ecx; ret; 
0x080aeb46: add dword ptr [ebp - 0x50f0fca2], ecx; xchg dword ptr [eax + 0x1000000], esi; ret 0x9789; 
0x080aebd6: add dword ptr [ebp - 0x50f0fda2], ecx; xchg dword ptr [eax + 0x1000000], esi; ret 0x9789; 
0x08076823: add dword ptr [ebp - 0x57c03b0], ecx; add ecx, dword ptr [edi]; xchg eax, esi; ret 0xc085; 
0x0807aa44: add dword ptr [ebp - 0xc7bf040], eax; add al, byte ptr [eax]; add bh, al; ret 0x4da0; 
0x08078cb6: add dword ptr [ebp - 9], esi; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0805fe7f: add dword ptr [ebx + 0x181c], 1; add esp, 4; pop ebx; pop esi; ret; 
0x080a9e26: add dword ptr [ebx + 0x1be04c1], eax; add byte ptr [eax], al; add byte ptr [ebp + 0x391074c0], al; ret 0xd975; 
0x0805fe85: add dword ptr [ebx + 0x5e5b04c4], eax; ret; 
0x08065c0c: add dword ptr [ebx + 0x5e5b0cc4], eax; pop edi; pop ebp; ret; 
0x080a41cc: add dword ptr [ebx + 0x5e5b2cc4], eax; pop edi; pop ebp; ret; 
0x080652e7: add dword ptr [ebx + 0x5e], ebx; pop edi; pop ebp; ret; 
0x0805dc0f: add dword ptr [ebx + 0x5e], ebx; pop edi; ret; 
0x0805fefc: add dword ptr [ebx + 0x5e], ebx; ret; 
0x0805ad59: add dword ptr [ebx + 0x75], esi; fild dword ptr [eax - 0x76da2b83]; ret 0x5b74; 
0x08078e01: add dword ptr [ebx + 0x7d89d855], ecx; les edi, ptr [ecx]; ret 0x2c76; 
0x0805829b: add dword ptr [ebx + 0x949e], ecx; add bh, al; ret 0x5f80; 
0x0806f5b3: add dword ptr [ebx + 0xf660741], ecx; adc eax, dword ptr [edx]; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x0806dd43: add dword ptr [ebx + 0xf660741], ecx; adc eax, dword ptr [edx]; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x0806f5d3: add dword ptr [ebx + 0xf660841], ecx; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x0806dd63: add dword ptr [ebx + 0xf660841], ecx; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x0804dbc0: add dword ptr [ebx - 0x16c3db94], ecx; ret 0xfffe; 
0x0805b42a: add dword ptr [ebx - 0x3f381bab], ecx; aam 0x62; push cs; or bh, al; ret 0x5f80; 
0x08089898: add dword ptr [ebx - 0x3fcefb3c], eax; pop ebx; pop esi; ret; 
0x080930cb: add dword ptr [ebx - 0x4a343], eax; jmp dword ptr [eax]; 
0x08078888: add dword ptr [ebx - 0x74fefbb1], eax; inc ebx; add al, 0x89; ret 0xe083; 
0x080a0575: add dword ptr [ebx - 0x79f0f7bb], ecx; ret; 
0x080af523: add dword ptr [ebx - 0x7cf3db84], ecx; ret; 
0x0807f9d3: add dword ptr [ebx - 0x7cf7db94], ecx; ret 0x8901; 
0x08090e5e: add dword ptr [ebx - 0x8eb6b], ecx; inc dword ptr [ebp - 0x7c7bf02e]; add byte ptr [eax], al; add byte ptr [ebx - 0x8bf43], al; call dword ptr [eax]; 
0x080787b0: add dword ptr [ebx], ecx; inc ecx; or byte ptr [ecx + 0x418b0447], cl; add al, 0x89; ret 0xe083; 
0x0808f9d1: add dword ptr [ebx], edi; popfd; idiv edi; dec dword ptr [edi]; cmp byte ptr [edx - 2], 0xff; jmp dword ptr [esi - 0x70]; 
0x080877bc: add dword ptr [ebx], edi; std; call dword ptr [eax - 0x18]; 
0x080624ef: add dword ptr [ecx + 0x1b80458], ecx; add byte ptr [eax], al; add bl, ch; stosd dword ptr es:[edi], eax; lea esi, [esi]; call eax; 
0x080a22da: add dword ptr [ecx + 0x291888f2], ecx; ret 0xfa39; 
0x0806f421: add dword ptr [ecx + 0x3418b02], ecx; mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; pop edi; ret; 
0x0806f551: add dword ptr [ecx + 0x3418b02], ecx; mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; ret; 
0x0806dbb1: add dword ptr [ecx + 0x3418b02], ecx; mov dword ptr [edx + 3], eax; mov eax, edi; pop edi; ret; 
0x0806dce1: add dword ptr [ecx + 0x3418b02], ecx; mov dword ptr [edx + 3], eax; mov eax, edx; ret; 
0x0806f2f1: add dword ptr [ecx + 0x3428d02], ecx; pop edi; ret; 
0x0806f521: add dword ptr [ecx + 0x3428d02], ecx; ret; 
0x0806f541: add dword ptr [ecx + 0x418b6602], ecx; add al, 0x66; mov dword ptr [edx + 4], eax; lea eax, [edx + 5]; ret; 
0x0806dcd1: add dword ptr [ecx + 0x418b6602], ecx; add al, 0x66; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x0806f531: add dword ptr [ecx + 0x4418a02], ecx; mov byte ptr [edx + 4], al; lea eax, [edx + 4]; ret; 
0x0806dcc1: add dword ptr [ecx + 0x4418a02], ecx; mov byte ptr [edx + 4], al; mov eax, edx; ret; 
0x0806fb51: add dword ptr [ecx + 0x4418b02], ecx; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x080a7c28: add dword ptr [ecx + 0x5bf88906], ecx; pop esi; pop edi; ret; 
0x08050b5f: add dword ptr [ecx + 0x5f5e5bf8], ecx; ret; 
0x0806daa1: add dword ptr [ecx + 0x5ff88902], ecx; ret; 
0x0808802f: add dword ptr [ecx + ecx*4], ebx; shl dword ptr [0xfffff000], 0x29; ret 0xe183; 
0x0807c058: add dword ptr [ecx - 0x3b7cfbbe], ecx; add al, 0x5b; pop esi; ret; 
0x080862da: add dword ptr [ecx - 0x3b7cfbbf], ecx; add al, 0x5b; pop esi; ret; 
0x08093a43: add dword ptr [ecx - 0x45b7b], ecx; dec dword ptr [ebx - 0x4bf7b]; inc dword ptr [ebp - 0x6c7bf040]; add byte ptr [eax], al; add byte ptr [ebx - 0x48f43], al; call dword ptr [eax]; 
0x0809311d: add dword ptr [ecx - 0x45b7b], ecx; dec dword ptr [ebx - 0x4bf7b]; inc dword ptr [ebp - 0x777bf040]; add byte ptr [eax], al; add byte ptr [ebx - 0x48f43], al; call dword ptr [eax]; 
0x0805efc2: add dword ptr [ecx - 0x49f0fbba], ecx; ret; 
0x080759e7: add dword ptr [ecx - 0x76ebdbac], ecx; ret 0x4c89; 
0x0808d1b0: add dword ptr [ecx - 0x9ebdb8c], ecx; ret 0xf01; 
0x080877bb: add dword ptr [ecx], 0x3b; std; call dword ptr [eax - 0x18]; 
0x080aeb6d: add dword ptr [ecx], eax; ret 0x458b; 
0x080af744: add dword ptr [ecx], eax; ret; 
0x0808cadb: add dword ptr [ecx], ebp; fidivr dword ptr [ecx]; ret 0xee7f; 
0x0808279b: add dword ptr [ecx], ecx; ret 0x7439; 
0x0807898f: add dword ptr [ecx], ecx; ret; 
0x08071d10: add dword ptr [ecx], edi; fmul dword ptr [edi]; inc edi; ret; 
0x080a3396: add dword ptr [ecx], edi; ret 0xc75; 
0x0808aff9: add dword ptr [ecx], edi; ret 0xf27f; 
0x0809c3df: add dword ptr [ecx], edi; ret 0xf475; 
0x0809c4de: add dword ptr [ecx], edi; ret 0xf575; 
0x0805113a: add dword ptr [ecx], edi; ret; 
0x080a1a6f: add dword ptr [ecx], esi; ret; 
0x0807aa2f: add dword ptr [edi + 0x29], -3; call dword ptr [eax - 0x18]; 
0x080a1b6e: add dword ptr [edi + 0x48], -2; call dword ptr [eax + 0x6a]; 
0x08049e80: add dword ptr [edi + ebx - 0x75], esi; inc eax; add al, 0x8b; add byte ptr [ebx - 0x72aff714], al; sub dword ptr [esi - 0x10], -4; call dword ptr [eax - 0x18]; 
0x080668ef: add dword ptr [edi], ecx; inc ebp; ret 0xc483; 
0x08095b7c: add dword ptr [edi], ecx; inc ebp; ret 0xec83; 
0x0805f35e: add dword ptr [edi], ecx; mov cs, word ptr [ebx - 0x47000002]; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x080943f6: add dword ptr [edi], ecx; mov ds, word ptr [edi - 0x4700001f]; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x080a1735: add dword ptr [edi], ecx; movsd dword ptr es:[edi], dword ptr [esi]; ret 0xe0d3; 
0x0807185c: add dword ptr [edi], ecx; test dword ptr [ebx - 0xa000000], ecx; ret 0xf02; 
0x080531ff: add dword ptr [edi], ecx; test edi, esi; or byte ptr [eax], al; add byte ptr [eax - 0x89743], al; call dword ptr [ebx + 0xf]; 
0x0805d926: add dword ptr [edx + 0x50], edx; push esi; call dword ptr [edi + 0x40]; 
0x0805bb79: add dword ptr [edx + 0x6a], edx; add al, ch; push cs; ret; 
0x0806f573: add dword ptr [edx + 0xf660841], ecx; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x0806dd03: add dword ptr [edx + 0xf660841], ecx; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x080b045b: add dword ptr [edx + 1], ebp; call eax; 
0x080a7f27: add dword ptr [edx + eax*2], 1; ret; 
0x0807e086: add dword ptr [edx], 0x2e; std; call dword ptr [eax - 0x18]; 
0x08059b15: add dword ptr [edx], ebp; push 0; push dword ptr [esp + 0x24]; call dword ptr [ebx + 0x40]; 
0x0805cefa: add dword ptr [edx], ebp; push 0; push ebx; call dword ptr [ebp + 0x24]; 
0x0805c365: add dword ptr [edx], ebp; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x0805e186: add dword ptr [esi + 0x17], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08064bca: add dword ptr [esi + 0x1c], edi; mov eax, 0xf0; lea ebx, [ebx + 0x4e0]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0805de01: add dword ptr [esi + 0x1c], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0806f5f3: add dword ptr [esi + 0xf], esp; adc cl, byte ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x0806dd83: add dword ptr [esi + 0xf], esp; adc cl, byte ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x0806f613: add dword ptr [esi + 0xf], esp; adc cl, byte ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x0806dda3: add dword ptr [esi + 0xf], esp; adc cl, byte ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x0806f633: add dword ptr [esi + 0xf], esp; adc cl, byte ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x0806ddc3: add dword ptr [esi + 0xf], esp; adc cl, byte ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x0806f323: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; lea eax, [edx + 7]; pop edi; ret; 
0x0806f563: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; lea eax, [edx + 7]; ret; 
0x0806dad3: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; mov eax, edi; pop edi; ret; 
0x0806dcf3: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; mov eax, edx; ret; 
0x08070203: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x0806fbe3: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x08070223: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x0806fc03: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x08070243: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x0806fc23: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x08070263: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x0806fc43: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x080802c8: add dword ptr [esi + esi], -3; call dword ptr [eax - 0x73]; 
0x0805ff0a: add dword ptr [esi - 0x10], edi; lea ebx, [edx + 0x1818]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0808f15e: add dword ptr [esi - 0x13], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08049462: add dword ptr [esi - 0x15], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08049409: add dword ptr [esi - 0x16], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x080493af: add dword ptr [esi - 0x17], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x080990e3: add dword ptr [esi - 0x20], edi; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0809948f: add dword ptr [esi - 0x24], edi; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08089636: add dword ptr [esi - 0x26], edi; mov eax, 0xf0; lea ebx, [ebx + 0x1a3c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x080652f6: add dword ptr [esi - 0x2c], edi; mov ecx, 0x81; mov edx, 1; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x080898cc: add dword ptr [esi - 0x36], edi; mov eax, 0xf0; lea ebx, [ebx + 0x1a3c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x080991d1: add dword ptr [esi - 0x38], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; mov ebx, edi; call dword ptr gs:[0x10]; 
0x08050b98: add dword ptr [esi - 0x3b], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; mov esi, edi; call dword ptr gs:[0x10]; 
0x0805dc4a: add dword ptr [esi - 0x3d], edi; mov eax, 0xf0; lea ebx, [edi + 0x1818]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08057e26: add dword ptr [esi - 0x40], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0808f094: add dword ptr [esi - 0x47], edi; mov eax, 0xf0; lea ebx, [ebx + 0x1a4c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08064634: add dword ptr [esi - 0x47], edi; mov eax, 0xf0; lea ebx, [ebx + 0x4e0]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0808d0cc: add dword ptr [esi - 0x52], edi; mov eax, 0xf0; lea ebx, [ebx + 0x1a40]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08057f6e: add dword ptr [esi - 0x52], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0805834e: add dword ptr [esi - 0x57], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08065c64: add dword ptr [esi - 0x5a], edi; mov eax, 0xf0; lea ebx, [edi + 0x1868]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08061e58: add dword ptr [esi - 0x5c], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08089804: add dword ptr [esi - 0x60], edi; mov eax, 0xf0; lea ebx, [ebx + 0x1a3c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0804d07a: add dword ptr [esi - 0x61], edi; mov eax, 0xf0; lea ebx, [ebx + 0x15a4]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08058ae6: add dword ptr [esi - 0x6f], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0805f304: add dword ptr [esi - 0x71], edi; mov eax, 0xf0; lea ebx, [ebp + 0x1818]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0807cc0b: add dword ptr [esi], 0; mov eax, dword ptr [eax + 0x1fa8]; ret; 
0x0804a840: add dword ptr cs:[eax], eax; add byte ptr [ebx - 0x38f3db84], cl; ret 0x6f84; 
0x08088856: add eax, 0; ret; 
0x080a6b62: add eax, 0x11; add esp, 4; add eax, ebx; jmp eax; 
0x0808898a: add eax, 0x14; jne 0x40996; add esp, 0x18; pop ebx; ret; 
0x080a5068: add eax, 0x14; jne 0x5d074; add esp, 0x28; pop ebx; ret; 
0x08067f87: add eax, 0x174d138; inc eax; pop edi; ret; 
0x080507e7: add eax, 0x18; call eax; 
0x080888e7: add eax, 0x200; mov dword ptr gs:[ecx], eax; pop ebx; ret; 
0x08078c50: add eax, 0x20; std; call dword ptr [eax - 0x73]; 
0x0806f498: add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x0806f5f8: add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x0806dc28: add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x0806dd88: add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x0807f085: add eax, 0x38; std; call dword ptr [eax + 0x68]; 
0x0807ef85: add eax, 0x38; std; call dword ptr [eax - 0x73]; 
0x0809c24d: add eax, 0x3911430f; ret 0x430f; 
0x080a80f9: add eax, 0x3cf07; mov eax, 0x80e6f60; mov eax, dword ptr [eax]; ret; 
0x080700ac: add eax, 0x42130f66; add eax, 0x5f0c428d; ret; 
0x080741e3: add eax, 0x542b60f; mov ecx, dword ptr [ebx + ecx*4 - 0x2b4c0]; mov eax, dword ptr [ebx + eax*4 - 0x2b4c0]; sub eax, ecx; pop ebx; ret; 
0x08069f93: add eax, 0x542b60f; sub eax, ecx; ret; 
0x080af037: add eax, 0x5b000000; pop esi; pop edi; pop ebp; ret; 
0x0805afcc: add eax, 0x5b08c483; ret; 
0x08077e16: add eax, 0x5b18c483; ret; 
0x080a506e: add eax, 0x5b28c483; ret; 
0x08088889: add eax, 0x5c777; mov eax, 0xfffffff0; add eax, dword ptr gs:[0]; ret; 
0x08088869: add eax, 0x5c797; mov eax, 0xfffffff4; add eax, dword ptr gs:[0]; ret; 
0x08088849: add eax, 0x5c7b7; mov eax, 0xfffffff8; add eax, dword ptr gs:[0]; ret; 
0x08088829: add eax, 0x5c7d7; mov edx, dword ptr [esp + 4]; mov eax, 0xffffffd8; mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x0807935a: add eax, 0x5e5bd089; ret; 
0x0806f4a1: add eax, 0x5f0c428d; ret; 
0x08085a89: add eax, 0x5f577; mov eax, dword ptr [eax + 0x1968]; ret; 
0x0807cc09: add eax, 0x683f7; mov eax, dword ptr [eax + 0x1fa8]; ret; 
0x0807cbe9: add eax, 0x68417; mov eax, dword ptr [eax + 0x1fa0]; ret; 
0x0807aee9: add eax, 0x6a117; lea eax, [eax + 0xa60]; ret; 
0x08087094: add eax, 0x75003880; mov esp, 0x8d0cec83; adc dword ptr [eax + 0x3a], -3; call dword ptr [eax - 0x18]; 
0x08049d42: add eax, 0x80e62e0; add ecx, ecx; ret; 
0x080b2f77: add eax, 0x81fff96d; ret; 
0x080aba77: add eax, 0x81fff9e2; ret; 
0x080a7577: add eax, 0x81fffa27; ret; 
0x08096677: add eax, 0x81fffb36; ret; 
0x08096477: add eax, 0x81fffb38; ret; 
0x08061177: add eax, 0x81fffe8b; ret; 
0x08060177: add eax, 0x81fffe9b; ret; 
0x08051577: add eax, 0x81ffff87; ret; 
0x0809c247: add eax, 0x83000000; cmp dword ptr [0x3911430f], eax; ret 0x430f; 
0x0807cbc7: add eax, 0x83fffcc5; les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x08060a79: add eax, 0x84587; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x4bc], edx; ret; 
0x08060979: add eax, 0x84687; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x186c], edx; ret; 
0x0805fdf9: add eax, 0x85207; mov eax, 0x80e5098; mov eax, dword ptr [eax]; ret; 
0x08071a52: add eax, 0x87820f; add byte ptr [eax], al; lea eax, [eax + 4]; pop edi; ret; 
0x08070c42: add eax, 0x87820f; add byte ptr [eax], al; lea eax, [edi + 4]; pop edi; ret; 
0x08057934: add eax, 0x8902458d; aad 0x89; ret 0xcfe9; 
0x08049c63: add eax, 0x8bf40000; sbb al, 0x24; ret; 
0x08071c5d: add eax, 0xa; pop edi; ret; 
0x080718c2: add eax, 0xb; pop edi; ret; 
0x08082c4d: add eax, 0xc9e90000; idiv bh; dec dword ptr [ebx - 0x72cfdba4]; and dword ptr [eax + 0x37], 0xfffffffd; call dword ptr [eax + 0x68]; 
0x08071c67: add eax, 0xc; pop edi; ret; 
0x0804a917: add eax, 0xcc80d089; or byte ptr [ebx - 0x38f3db8c], cl; ret 0x68c0; 
0x080afd98: add eax, 0xcdfa8166; xor byte ptr [ebx + ecx + 0x66], 0x81; cli; syscall; 
0x08071c6c: add eax, 0xd; pop edi; ret; 
0x0808249c: add eax, 0xe9000000; ret; 
0x08071c71: add eax, 0xe; pop edi; ret; 
0x0804b0b4: add eax, 0xf2a4838d; cld; call dword ptr [eax - 1]; 
0x080718eb: add eax, 0xf; pop edi; ret; 
0x080b2d62: add eax, 0xffff58e8; dec dword ptr [ebx + 0x195483]; add byte ptr [ebp - 0x7cec8b40], al; in al, dx; or byte ptr [ebp - 0x3240f6d], cl; call dword ptr [edx + 0x50]; 
0x08060a32: add eax, 1; mov dword ptr [edx + 0x4b0], eax; ret; 
0x08071c30: add eax, 1; pop edi; ret; 
0x08098a70: add eax, 1; ret; 
0x08071c35: add eax, 2; pop edi; ret; 
0x08098a67: add eax, 2; ret; 
0x08071875: add eax, 3; pop edi; ret; 
0x08098a80: add eax, 3; ret; 
0x080988fb: add eax, 4; cmp edx, ecx; je 0x50906; test edx, edx; jne 0x508f8; ret; 
0x08071c3f: add eax, 4; pop edi; ret; 
0x08071c44: add eax, 5; pop edi; ret; 
0x08071c49: add eax, 6; pop edi; ret; 
0x0807189b: add eax, 7; pop edi; ret; 
0x08071c53: add eax, 8; pop edi; ret; 
0x08071c58: add eax, 9; pop edi; ret; 
0x08088855: add eax, dword ptr [0]; ret; 
0x08081b85: add eax, dword ptr [eax]; add bh, dh; ret; 
0x0807f0bb: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; sbb dword ptr [ebx], 0x34; std; call dword ptr [eax - 0x18]; 
0x08077110: add eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x08077c36: add eax, dword ptr [eax]; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x080b04a7: add eax, dword ptr [eax]; add byte ptr [eax], al; mov edi, dword ptr [ebp - 4]; leave; ret; 
0x08098ac1: add eax, dword ptr [eax]; add byte ptr [eax], al; ret; 
0x080a8aa9: add eax, dword ptr [eax]; add byte ptr [ebp - 0x16c617d], cl; call dword ptr [eax - 0x73]; 
0x0809cf05: add eax, dword ptr [eax]; add byte ptr [ebp - 0x1c8a47d], cl; call dword ptr [eax + 0x6a]; 
0x0807fdfe: add eax, dword ptr [eax]; add byte ptr [ebp - 0x7c948b13], al; ret 0x8301; 
0x080a67c1: add eax, dword ptr [eax]; add byte ptr [ebx + 0x29342454], cl; ret 0x5489; 
0x080a03b9: add eax, dword ptr [eax]; add byte ptr [ebx + 0x4d8b29fb], al; or byte ptr [edi], cl; xchg eax, esp; ret 0x940f; 
0x08088e00: add eax, dword ptr [eax]; add byte ptr [ebx + 0x565504ec], al; push dword ptr [esp + 0x20]; call edi; 
0x0808bb0f: add eax, dword ptr [eax]; add byte ptr [ebx - 0x49f07fbb], cl; push eax; or al, 0x89; sal esi, 1; ret 0xf40; 
0x08084f82: add eax, dword ptr [eax]; add byte ptr [ebx - 0x72cbdba4], cl; and dword ptr [eax + 0x36], 0xfffffffd; call dword ptr [eax - 0x73]; 
0x08050e83: add eax, dword ptr [eax]; add byte ptr [ebx - 0x76d7dba4], cl; ret 0xdaf7; 
0x080ac88f: add eax, dword ptr [eax]; add byte ptr [ebx - 0x7a72fb14], al; sar bl, 0xff; dec dword ptr [ebp - 0x44b4b]; call dword ptr [eax - 1]; 
0x0808ddbf: add eax, dword ptr [eax]; add byte ptr [ebx - 0x7aebdbbc], cl; ror byte ptr [edi], 0x84; ret 6; 
0x08060a17: add eax, dword ptr [eax]; add byte ptr [esi + 4], dh; ret; 
0x08071869: add eax, dword ptr [eax]; add dh, dh; ret 0xf04; 
0x08071886: add eax, dword ptr [eax]; add dh, dh; ret 0xf20; 
0x0807188f: add eax, dword ptr [eax]; add dh, dh; ret 0xf40; 
0x0808baa6: add eax, dword ptr [eax]; add dh, dh; ret 0xf50; 
0x080b3501: add eax, dword ptr [eax]; add esp, 8; pop ebx; ret; 
0x08071b35: add eax, dword ptr [eax]; je 0x29c3a; mov eax, 4; pop edi; ret; 
0x080a80fc: add eax, dword ptr [eax]; mov eax, 0x80e6f60; mov eax, dword ptr [eax]; ret; 
0x080a0f1f: add eax, dword ptr [ebp - 0x5c]; call eax; 
0x0805e183: add eax, dword ptr [ebx + 0x177e01f8]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0805ddfe: add eax, dword ptr [ebx + 0x1c7e01f8]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0808f524: add eax, dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x0805efb2: add eax, dword ptr [ebx + 0x5e5bef26]; pop edi; ret; 
0x0808f15b: add eax, dword ptr [ebx - 0x1281fe08]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0804945f: add eax, dword ptr [ebx - 0x1481fe18]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08049406: add eax, dword ptr [ebx - 0x1581fe18]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x080493ac: add eax, dword ptr [ebx - 0x1681fe18]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x080652f3: add eax, dword ptr [ebx - 0x2b81fe08]; mov ecx, 0x81; mov edx, 1; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x08096ebe: add eax, dword ptr [ebx - 0x3b7c10dd]; add al, 0x5b; pop esi; ret; 
0x08057e23: add eax, dword ptr [ebx - 0x3f81fe08]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08057f6b: add eax, dword ptr [ebx - 0x5181fe08]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0805834b: add eax, dword ptr [ebx - 0x5681fe08]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08061e55: add eax, dword ptr [ebx - 0x5b81fe08]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08058ae3: add eax, dword ptr [ebx - 0x6e81fe08]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0805b663: add eax, dword ptr [ebx - 0x71f0fe08]; xor eax, 0xb8fffffe; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x080a056f: add eax, dword ptr [ebx - 0x77cfe18]; add dword ptr [ebx - 0x79f0f7bb], ecx; ret; 
0x0809ffb7: add eax, dword ptr [ebx]; mov ebx, dword ptr [ebp - 0x74]; test ebx, ebx; jne 0x57e8c; call eax; 
0x080a08d6: add eax, dword ptr [ebx]; mov ebx, dword ptr [ebp - 0x74]; test ebx, ebx; jne 0x588ab; call eax; 
0x080ace67: add eax, dword ptr [ebx]; push dword ptr [esp + 0x34]; push edi; push esi; call eax; 
0x080a0733: add eax, dword ptr [ebx]; test edx, edx; jne 0x5873b; call eax; 
0x08099cab: add eax, dword ptr [ecx]; ret 0x458b; 
0x080a14ff: add eax, dword ptr [ecx]; test edx, edx; jne 0x59507; call eax; 
0x080a96f5: add eax, dword ptr [edx + 4]; pop esi; pop edi; jmp eax; 
0x08096901: add eax, dword ptr [edx]; jne 0x4e91d; sub esp, 0xc; mov eax, dword ptr [eax + 0x88]; push ebx; call dword ptr [eax + 0x34]; 
0x0809fe80: add eax, dword ptr [esi]; test ebx, ebx; jne 0x57e22; call eax; 
0x0805f084: add eax, dword ptr [esp + 8]; pop ebx; ret; 
0x080a6b5f: add eax, dword ptr [esp]; add eax, 0x11; add esp, 4; add eax, ebx; jmp eax; 
0x080ab7f0: add eax, dword ptr [esp]; ret; 
0x08088854: add eax, dword ptr gs:[0]; ret; 
0x08087080: add eax, eax; cmp ebp, edi; call dword ptr [eax - 0x18]; 
0x080a6b6a: add eax, ebx; jmp eax; 
0x080706ba: add eax, ecx; pop edi; ret; 
0x08070d24: add eax, ecx; ret; 
0x080706b8: add eax, edi; add eax, ecx; pop edi; ret; 
0x08070757: add eax, edi; pop edi; ret; 
0x08098356: add eax, edi; sub eax, 0x10; pop edi; ret; 
0x080713ed: add eax, edx; add eax, ecx; ret; 
0x08071553: add eax, edx; ret; 
0x08098317: add eax, esi; pop ebx; pop esi; sub eax, 0x10; pop edi; ret; 
0x0804a877: add ebp, -0x10; cld; call dword ptr [eax - 0x18]; 
0x080af2df: add ebp, dword ptr [eax + eax + 0x75]; mov esp, 0x950ff685; ret 0xc985; 
0x080617fd: add ebp, dword ptr [ecx]; ret; 
0x0805cef8: add ebp, dword ptr [edx + 1]; push 0; push 0; push ebx; call dword ptr [ebp + 0x24]; 
0x080b2c55: add ebp, dword ptr [edx + 8]; mov dword ptr [esp], ebp; call edi; 
0x0804a3f7: add ebp, eax; ret; 
0x0809e9e4: add ebx, 0x1c; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0804900d: add ebx, 0x9bff3; mov eax, 0; test eax, eax; je 0x101f; call eax; 
0x080b34ff: add ebx, dword ptr [ebx]; add eax, dword ptr [eax]; add esp, 8; pop ebx; ret; 
0x080985a9: add ebx, dword ptr [esi + 0x5f]; ret; 
0x0809e105: add ebx, dword ptr [esp + 0x44]; push dword ptr [esp + 0x38]; call dword ptr [ebx + 0x38]; 
0x08088e50: add ebx, dword ptr [esp]; sub esp, 4; push ebp; push ebx; push esi; call edi; 
0x0806f3a3: add ebx, esi; movq qword ptr [edx], mm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x0806f653: add ebx, esi; movq qword ptr [edx], mm0; lea eax, [edx + 0xf]; ret; 
0x0806db53: add ebx, esi; movq qword ptr [edx], mm0; mov eax, edi; pop edi; ret; 
0x0806dde3: add ebx, esi; movq qword ptr [edx], mm0; mov eax, edx; ret; 
0x080985a6: add ecx, dword ptr [ebp + 0x5f5e0346]; ret; 
0x0807bff9: add ecx, dword ptr [ebp - 0x1b2067d]; call dword ptr [eax - 1]; 
0x0809ffb8: add ecx, dword ptr [ebx - 0x247a73a3]; jne 0x57e8c; call eax; 
0x080a08d7: add ecx, dword ptr [ebx - 0x247a73a3]; jne 0x588ab; call eax; 
0x0804ff35: add ecx, dword ptr [ebx - 0x7cfbdbbc]; ret; 
0x0806f426: add ecx, dword ptr [ecx + 0x428d0342]; push es; pop edi; ret; 
0x0806f556: add ecx, dword ptr [ecx + 0x428d0342]; push es; ret; 
0x0808a46a: add ecx, dword ptr [ecx + 0x5f5e5bf0]; ret; 
0x0806dce6: add ecx, dword ptr [ecx - 0x2f76fcbe]; ret; 
0x0806dbb6: add ecx, dword ptr [ecx - 0x776fcbe]; pop edi; ret; 
0x080aeb49: add ecx, dword ptr [edi]; scasd eax, dword ptr es:[edi]; xchg dword ptr [eax + 0x1000000], esi; ret 0x9789; 
0x0804a7fe: add ecx, dword ptr [edi]; test byte ptr [edi - 0x47000004], dl; add byte ptr [ecx], 0; add byte ptr [ebx + 0x3003], bh; xor ecx, ecx; int 0x80; 
0x08080005: add ecx, dword ptr [edi]; xchg byte ptr [edx - 0x7fffffff], bh; jns 0x38016; or byte ptr [edi], 0x87; ret; 
0x08076829: add ecx, dword ptr [edi]; xchg eax, esi; ret 0xc085; 
0x08076875: add ecx, dword ptr [edi]; xchg eax, esi; ret 0xd284; 
0x08049a7f: add ecx, dword ptr [edi]; xchg eax, esp; ret 0xca21; 
0x08060a2e: add ecx, eax; call 0x1c20d39; mov dword ptr [edx + 0x4b0], eax; ret; 
0x0809abc3: add ecx, ebp; ret 0xfffe; 
0x08085f22: add ecx, ebp; ret; 
0x0805fb8b: add ecx, ebx; mov dword ptr [eax + 4], ecx; xor eax, eax; pop ebx; pop esi; ret; 
0x080ab2bb: add ecx, ecx; call dword ptr gs:[0x10]; 
0x08049d47: add ecx, ecx; ret; 
0x0808878e: add edi, 0x41; std; call dword ptr [eax - 0x18]; 
0x0808878e: add edi, 0x41; std; call dword ptr [eax - 0x18]; pop es; sub esp, edi; jmp dword ptr [esi - 0x70]; 
0x08071d03: add edi, dword ptr [ecx]; fmul dword ptr [edi]; inc edi; ret; 
0x080623c9: add edi, ebp; call dword ptr [eax - 1]; 
0x080ace68: add edi, edi; je 0x64e90; xor al, 0x57; push esi; call eax; 
0x080891e5: add edi, edi; jmp dword ptr [esi - 0x70]; 
0x0805faed: add edx, 0x30; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; ret; 
0x08099999: add edx, 0x4b667; push ebx; mov eax, 0x2d; mov ebx, dword ptr [esp + 8]; int 0x80; 
0x0807c319: add edx, 0x68ce7; neg eax; mov edx, 0xffffffe0; mov dword ptr gs:[edx], eax; mov eax, 0xffffffff; ret; 
0x08099530: add edx, dword ptr [esi - 0x18]; or esi, esp; std; inc dword ptr [ebx - 0x77cef3c]; push dword ptr [esi + edi - 0x77]; ret 0xe283; 
0x080a3ab4: add esi, 0x4154c; lea ecx, [esp + 0x10]; lea ebx, [esi - 0x1b3ee]; call dword ptr gs:[0x10]; 
0x0804a80b: add esi, dword ptr [eax]; add byte ptr [eax], al; xor ecx, ecx; int 0x80; 
0x0808627e: add esi, dword ptr [edi + ecx - 0x7d]; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0809074b: add esi, eax; test dword ptr [ebx], esp; idiv edi; jmp dword ptr [eax]; 
0x08071cb2: add esi, esi; ret 0x7403; 
0x080a1d42: add esi, esi; rol dword ptr [ecx], 0x75; call 0x83fdf7d7; ret 0x8908; 
0x08075369: add esp, 0x100; sub eax, edx; ret; 
0x08065af2: add esp, 0x10; add esp, 0x14; pop ebx; pop esi; ret; 
0x080b079a: add esp, 0x10; add esp, 0xc; ret; 
0x0804f388: add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x0805caf2: add esp, 0x10; add esp, 8; pop ebx; ret; 
0x080a3dcc: add esp, 0x10; jmp ecx; 
0x08079745: add esp, 0x10; lea edx, [esp + 8]; call 0x316b0; add esp, 0x18; pop ebx; ret; 
0x08049cb2: add esp, 0x10; leave; ret; 
0x08049d3e: add esp, 0x10; mov byte ptr [0x80e62e0], 1; leave; ret; 
0x0804a481: add esp, 0x10; mov eax, 0x180; mov ebx, 0x3001; lea ecx, [esp + 0x40]; int 0x80; 
0x08096977: add esp, 0x10; mov eax, 1; add esp, 8; pop ebx; ret; 
0x08095ba3: add esp, 0x10; mov eax, 1; pop ebx; pop esi; pop edi; ret; 
0x08077165: add esp, 0x10; mov eax, ebx; add esp, 0x14; pop ebx; pop esi; ret; 
0x08058643: add esp, 0x10; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x080b0ce8: add esp, 0x10; mov eax, edx; pop ebx; pop esi; pop edi; ret; 
0x080a3c49: add esp, 0x10; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x08049e56: add esp, 0x10; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x080a5267: add esp, 0x10; mov ecx, dword ptr [esp + 0x1c]; xor ecx, dword ptr gs:[0x14]; jne 0x5d27b; add esp, 0x2c; ret; 
0x080a7b04: add esp, 0x10; mov ecx, dword ptr [esp + 0x1c]; xor ecx, dword ptr gs:[0x14]; jne 0x5fb18; add esp, 0x2c; ret; 
0x080aba0c: add esp, 0x10; mov ecx, dword ptr [esp + 0x1c]; xor ecx, dword ptr gs:[0x14]; jne 0x63a20; add esp, 0x2c; ret; 
0x080b06e6: add esp, 0x10; mov edi, dword ptr [ebp - 4]; leave; ret; 
0x080b0d8e: add esp, 0x10; pop ebx; pop esi; mov eax, edx; pop edi; ret; 
0x08086ec1: add esp, 0x10; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0805d655: add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x08077124: add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x08060e1f: add esp, 0x14; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0805b70e: add esp, 0x14; pop ebx; pop esi; ret; 
0x08089049: add esp, 0x14c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0809936d: add esp, 0x15c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0804e2db: add esp, 0x18; pop ebx; ret; 
0x080aba66: add esp, 0x1c; movzx eax, al; neg eax; ret; 
0x0805bd0c: add esp, 0x1c; pop ebx; pop esi; pop edi; pop ebp; jmp eax; 
0x0804aedc: add esp, 0x1c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x08050c39: add esp, 0x1c; ret; 
0x080a3e24: add esp, 0x20; jmp ecx; 
0x080a0232: add esp, 0x20; lea esi, [esi]; call eax; 
0x080a0368: add esp, 0x20; mov dword ptr [ebp - 0x5c], edx; call eax; 
0x080a0f19: add esp, 0x20; mov eax, dword ptr [ebp - 0x60]; add eax, dword ptr [ebp - 0x5c]; call eax; 
0x08098d2f: add esp, 0x20; mov eax, ecx; pop ebx; pop esi; pop edi; ret; 
0x080a31fe: add esp, 0x20; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0805a6b9: add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x080ae276: add esp, 0x20; ret; 
0x080abb40: add esp, 0x24; mov eax, esi; pop ebx; pop esi; ret; 
0x080a76a7: add esp, 0x24; movzx eax, al; pop ebx; pop esi; ret; 
0x080a7a6a: add esp, 0x24; pop ebx; pop esi; ret; 
0x08050c71: add esp, 0x28; pop ebx; ret; 
0x0807a769: add esp, 0x28; std; call dword ptr [eax - 0x18]; 
0x080a841a: add esp, 0x2c; pop ebx; pop esi; pop edi; pop ebp; ret 8; 
0x0804efa2: add esp, 0x2c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0804b0fe: add esp, 0x2c; ret; 
0x0807cc88: add esp, 0x2d; std; call dword ptr [eax - 0x73]; 
0x08099973: add esp, 0x34; pop ebx; pop esi; ret; 
0x08049853: add esp, 0x3c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x080997d2: add esp, 0x48; movzx eax, al; pop ebx; ret; 
0x08066a5d: add esp, 0x4c; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x08050200: add esp, 0x4c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0805d1a5: add esp, 0x5c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x080a23af: add esp, 0x60; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x080a23fa: add esp, 0x60; pop ebx; pop esi; pop edi; ret; 
0x0804aab6: add esp, 0x6c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x08098ed5: add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x08079fe2: add esp, 0x74; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x08080a21: add esp, 0x7c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x08088cdd: add esp, 0x90; pop ebx; pop esi; pop edi; ret; 
0x080a8078: add esp, 0xa0; pop ebx; pop esi; pop edi; ret; 
0x080596c4: add esp, 0xac; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x080afc8b: add esp, 0xbc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0805e99d: add esp, 0xc; pop ebx; pop esi; pop edi; pop ebp; jmp eax; 
0x08050a7a: add esp, 0xc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x08066f62: add esp, 0xc; ret; 
0x080a54f3: add esp, 0xd8; mov eax, ebx; pop ebx; ret; 
0x0804d030: add esp, 0xec; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x080a6b67: add esp, 4; add eax, ebx; jmp eax; 
0x08066fd0: add esp, 4; mov eax, 0x16; pop ebx; pop esi; ret; 
0x08059d40: add esp, 4; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x08059d36: add esp, 4; pop ebx; pop esi; jmp eax; 
0x08060b4b: add esp, 4; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0804af36: add esp, 4; pop ebx; pop esi; ret; 
0x08074289: add esp, 4; pop ebx; ret; 
0x08089899: add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x08096988: add esp, 8; mov eax, 0xffffffff; pop ebx; ret; 
0x080b09ec: add esp, 8; mov eax, 4; pop ebx; ret; 
0x0805cf74: add esp, 8; movzx eax, al; pop ebx; neg eax; ret; 
0x0804901f: add esp, 8; pop ebx; ret; 
0x08089958: add esp, 8; xor eax, eax; pop ebx; ret; 
0x08087079: add esp, dword ptr [eax - 0x720002c7]; test byte ptr [ebx], al; sar byte ptr [ecx], 0xfd; call dword ptr [eax - 0x18]; 
0x0809c161: add esp, dword ptr [ebx + eax*4]; ret; 
0x0804f385: add word ptr [eax], ax; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x080a7f26: add word ptr [edx + eax*2], 1; ret; 
0x08096a70: and al, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0805bd8c: and al, 0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x830f; 
0x0808249a: and al, 0x10; add eax, 0xe9000000; ret; 
0x08066399: and al, 0x10; call eax; 
0x0806363d: and al, 0x10; call ecx; 
0x08088e37: and al, 0x10; call edi; 
0x080a3abc: and al, 0x10; lea ebx, [esi - 0x1b3ee]; call dword ptr gs:[0x10]; 
0x08066f5c: and al, 0x10; mov dword ptr [eax], edx; xor eax, eax; add esp, 0xc; ret; 
0x08099878: and al, 0x10; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x08077b84: and al, 0x10; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x08079239: and al, 0x10; mov eax, 0xa3; call dword ptr gs:[0x10]; 
0x08059d31: and al, 0x10; mov eax, dword ptr [eax + 0x10]; add esp, 4; pop ebx; pop esi; jmp eax; 
0x080b088c: and al, 0x10; mov eax, dword ptr [esp + 0x18]; call eax; 
0x08076fdc: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x08077c40: and al, 0x10; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x080abc57: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x08077f57: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x08077f87: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x08059665: and al, 0x10; mov edi, dword ptr [esp + 0x24]; push edi; call dword ptr [ebx + 0x40]; 
0x08077bec: and al, 0x10; mov edx, eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x080a7ec6: and al, 0x10; mov esi, dword ptr [esp + 0x1c]; mov edi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x08099804: and al, 0x10; or dh, 0x80; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x0805caa6: and al, 0x10; pop ebx; mov eax, dword ptr [edi + 0x10]; pop esi; pop edi; jmp eax; 
0x0805e5fd: and al, 0x10; pop ebx; mov eax, dword ptr [edi + 0x14]; pop esi; pop edi; jmp eax; 
0x0805bc8b: and al, 0x10; pop ebx; mov eax, dword ptr [esi + 0x10]; pop esi; pop edi; jmp eax; 
0x0805e429: and al, 0x10; pop ebx; mov eax, dword ptr [esi + 0xc]; pop esi; pop edi; jmp eax; 
0x08075285: and al, 0x10; pop ebx; pop esi; pop edi; ret; 
0x080b1c71: and al, 0x10; push dword ptr [ebp + ebx*4 + 8]; push dword ptr [esp + 0x20]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x08059661: and al, 0x10; push dword ptr [esp + 0x10]; mov edi, dword ptr [esp + 0x24]; push edi; call dword ptr [ebx + 0x40]; 
0x0805c04f: and al, 0x10; push dword ptr [esp + 0x10]; push esi; call dword ptr [ebx + 0x40]; 
0x0805b28d: and al, 0x10; push dword ptr [esp + 0x10]; push esi; call dword ptr [edi + 0x3c]; 
0x080950a1: and al, 0x10; push ebx; push dword ptr [eax + 0xc]; push esi; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x1c]; 
0x0805c053: and al, 0x10; push esi; call dword ptr [ebx + 0x40]; 
0x0805b291: and al, 0x10; push esi; call dword ptr [edi + 0x3c]; 
0x080597c6: and al, 0x10; sub esp, 4; push eax; push edx; push dword ptr [esp + 0x24]; call ecx; 
0x08088f90: and al, 0x14; call eax; 
0x08063639: and al, 0x14; mov dword ptr [esp + 0x10], eax; call ecx; 
0x08099874: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x08079235: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa3; call dword ptr gs:[0x10]; 
0x08077be8: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov edx, eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x080b0887: and al, 0x14; push eax; push dword ptr [esp + 0x10]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x080958b9: and al, 0x14; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x0807af89: and al, 0x18; call 0x5b010; add esp, 0x18; pop ebx; ret; 
0x0805199b: and al, 0x18; call dword ptr [eax + 0x1c]; 
0x080b0890: and al, 0x18; call eax; 
0x080b0227: and al, 0x18; mov dword ptr [eax], ebx; add esp, 8; pop ebx; ret; 
0x080b0232: and al, 0x18; mov dword ptr [edx + eax*4], ecx; add esp, 8; pop ebx; ret; 
0x080514ba: and al, 0x18; mov eax, 0x80e5450; push dword ptr [eax]; call 0xc630; add esp, 0x1c; ret; 
0x080628dc: and al, 0x18; mov eax, 0xf0; mov ecx, 0x81; mov ebx, edi; mov edx, 1; call dword ptr gs:[0x10]; 
0x08051997: and al, 0x18; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x1c]; 
0x080a7ec2: and al, 0x18; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x1c]; mov edi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x08079231: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa3; call dword ptr gs:[0x10]; 
0x08099695: and al, 0x18; mov esi, dword ptr [esp + 0x1c]; jne 0x516c0; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x0807af85: and al, 0x18; push dword ptr [esp + 0x18]; call 0x5b010; add esp, 0x18; pop ebx; ret; 
0x0805cf4c: and al, 0x18; test ebx, ebx; jne 0x14f60; add esp, 8; pop ebx; ret; 
0x080b02ca: and al, 0x1c; add esp, 0x28; pop ebx; ret; 
0x0805865f: and al, 0x1c; call 0x10560; add esp, 0x1c; ret; 
0x080514e4: and al, 0x1c; call 0x12af0; add esp, 0x1c; ret; 
0x08086212: and al, 0x1c; call 0x1da60; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x08098691: and al, 0x1c; call 0x2cea0; add esp, 0x18; pop ebx; ret; 
0x080986c1: and al, 0x1c; call 0x2cf30; add esp, 0x18; pop ebx; ret; 
0x08075b41: and al, 0x1c; call 0x2cfb0; add esp, 0x18; pop ebx; ret; 
0x08077b51: and al, 0x1c; call 0x2fab0; add esp, 0x1c; ret; 
0x0808cfd4: and al, 0x1c; call 0x42770; add esp, 0x1c; ret; 
0x080a784b: and al, 0x1c; call 0x63400; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x080a780d: and al, 0x1c; call 0x63400; add esp, 0x18; pop ebx; ret; 
0x080b1fa1: and al, 0x1c; call 0x69ef0; add esp, 0x1c; ret; 
0x08089944: and al, 0x1c; call 0x85b0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x08050c32: and al, 0x1c; call 0x8ae0; add esp, 0x1c; ret; 
0x0808f114: and al, 0x1c; call 0xc630; add esp, 0x1c; ret; 
0x08057e64: and al, 0x1c; call 0xfd50; add esp, 0x1c; ret; 
0x0804ff5b: and al, 0x1c; call eax; 
0x08099699: and al, 0x1c; jne 0x516c0; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x08062401: and al, 0x1c; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x080a7eca: and al, 0x1c; mov edi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x0804e2d2: and al, 0x1c; push dword ptr [eax]; call 0x10b0; add esp, 0x18; pop ebx; ret; 
0x0807cb7b: and al, 0x1c; push dword ptr [eax]; call 0x10d0; add esp, 0x18; pop ebx; ret; 
0x0805865b: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x10560; add esp, 0x1c; ret; 
0x080514e0: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x12af0; add esp, 0x1c; ret; 
0x0809868d: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x2cea0; add esp, 0x18; pop ebx; ret; 
0x08077b4d: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x2fab0; add esp, 0x1c; ret; 
0x080a7809: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x63400; add esp, 0x18; pop ebx; ret; 
0x080b1f9d: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x69ef0; add esp, 0x1c; ret; 
0x08050c2e: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x8ae0; add esp, 0x1c; ret; 
0x0808f110: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xc630; add esp, 0x1c; ret; 
0x08057e60: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xfd50; add esp, 0x1c; ret; 
0x0805acbb: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x12af0; add esp, 0x1c; ret; 
0x08077b49: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x2fab0; add esp, 0x1c; ret; 
0x08050c2a: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x8ae0; add esp, 0x1c; ret; 
0x080b000c: and al, 0x1c; push ecx; push 1; call eax; 
0x080a5064: and al, 0x1c; xor eax, dword ptr gs:[0x14]; jne 0x5d074; add esp, 0x28; pop ebx; ret; 
0x080a4deb: and al, 0x1c; xor ecx, dword ptr gs:[0x14]; jne 0x5ce20; add esp, 0x28; pop ebx; ret; 
0x080a4eb5: and al, 0x1c; xor ecx, dword ptr gs:[0x14]; jne 0x5cecc; add esp, 0x2c; ret; 
0x080a5175: and al, 0x1c; xor ecx, dword ptr gs:[0x14]; jne 0x5d18c; add esp, 0x2c; ret; 
0x080a526c: and al, 0x1c; xor ecx, dword ptr gs:[0x14]; jne 0x5d27b; add esp, 0x2c; ret; 
0x080a7b09: and al, 0x1c; xor ecx, dword ptr gs:[0x14]; jne 0x5fb18; add esp, 0x2c; ret; 
0x080aba11: and al, 0x1c; xor ecx, dword ptr gs:[0x14]; jne 0x63a20; add esp, 0x2c; ret; 
0x080adb2c: and al, 0x1c; xor ecx, dword ptr gs:[0x14]; jne 0x65b3c; add esp, 0x28; pop ebx; ret; 
0x080a24c7: and al, 0x20; call 0x59e80; add esp, 0x1c; ret; 
0x080a7ece: and al, 0x20; call dword ptr gs:[0x10]; 
0x08088e0a: and al, 0x20; call edi; 
0x08077b02: and al, 0x20; lea edx, [esp + 4]; mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x0807705f: and al, 0x20; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x08077ad3: and al, 0x20; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x080b1b7b: and al, 0x20; mov eax, dword ptr [esp + 0x18]; call eax; 
0x080b2878: and al, 0x20; mov eax, dword ptr [esp + 0x28]; call eax; 
0x08077252: and al, 0x20; mov edi, dword ptr [esp + 0x2c]; mov eax, 0x8c; call dword ptr gs:[0x10]; 
0x080770a0: and al, 0x20; mov edx, dword ptr [esp + 0x24]; mov edi, eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x08089152: and al, 0x20; push esi; call edi; 
0x0805cf02: and al, 0x21; ret 0xc483; 
0x0809ceff: and al, 0x23; add byte ptr [edi], cl; test byte ptr [ebp - 0x72fffffd], al; sbb dword ptr [ebx + 0x37], -2; call dword ptr [eax + 0x6a]; 
0x08059b1c: and al, 0x24; call dword ptr [ebx + 0x40]; 
0x080593b4: and al, 0x24; call dword ptr [ebx + 0x48]; 
0x080595fb: and al, 0x24; call dword ptr [edi + 0x40]; 
0x080b00d1: and al, 0x24; call eax; 
0x080597cf: and al, 0x24; call ecx; 
0x080a24c3: and al, 0x24; mov eax, dword ptr [esp + 0x20]; call 0x59e80; add esp, 0x1c; ret; 
0x080770a4: and al, 0x24; mov edi, eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0805bad4: and al, 0x24; push eax; push esi; call dword ptr [edi + 0x48]; 
0x08065aed: and al, 0x24; push ebx; call eax; 
0x08059669: and al, 0x24; push edi; call dword ptr [ebx + 0x40]; 
0x0805976b: and al, 0x24; push esi; call dword ptr [ebx + 0x40]; 
0x08065575: and al, 0x24; push esi; call eax; 
0x08049b51: and al, 0x28; add dh, byte ptr [ecx - 0x7d]; rol byte ptr [ecx], 0x89; ret 0xd189; 
0x080a5510: and al, 0x28; call eax; 
0x080a54b3: and al, 0x28; call edx; 
0x08077aca: and al, 0x28; cmp ecx, 9; je 0x2fb00; mov ebx, dword ptr [esp + 0x20]; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x080a550c: and al, 0x28; mov eax, dword ptr [esp + 0x28]; call eax; 
0x080a54af: and al, 0x28; mov edx, dword ptr [esp + 0x28]; call edx; 
0x0807724c: and al, 0x28; mov esi, esp; mov ebx, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x2c]; mov eax, 0x8c; call dword ptr gs:[0x10]; 
0x08050172: and al, 0x28; push esi; mov eax, dword ptr [esp + 0x1c]; call eax; 
0x0807ae14: and al, 0x2a; std; call dword ptr [edx + 0x50]; 
0x0805882b: and al, 0x2c; call 0x10670; add esp, 0x2c; ret; 
0x08075d55: and al, 0x2c; call 0x2e6a0; add esp, 0x2c; ret; 
0x0804b0f7: and al, 0x2c; call 0x40b0; add esp, 0x2c; ret; 
0x0808998a: and al, 0x2c; call 0x419e0; add esp, 0x28; pop ebx; ret; 
0x08089f57: and al, 0x2c; call 0x419e0; add esp, 0x2c; ret; 
0x080b1fd1: and al, 0x2c; call 0x69ef0; add esp, 0x28; pop ebx; ret; 
0x08050597: and al, 0x2c; call 0x8240; add esp, 0x2c; ret; 
0x08050c6a: and al, 0x2c; call 0x8cc0; add esp, 0x28; pop ebx; ret; 
0x08051227: and al, 0x2c; call 0x8cc0; add esp, 0x2c; ret; 
0x0805016e: and al, 0x2c; mov dword ptr [esp + 0x28], ecx; push esi; mov eax, dword ptr [esp + 0x1c]; call eax; 
0x08077256: and al, 0x2c; mov eax, 0x8c; call dword ptr gs:[0x10]; 
0x08058827: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x10670; add esp, 0x2c; ret; 
0x08075d51: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x2e6a0; add esp, 0x2c; ret; 
0x08089986: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x419e0; add esp, 0x28; pop ebx; ret; 
0x08089f53: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x419e0; add esp, 0x2c; ret; 
0x08050593: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x8240; add esp, 0x2c; ret; 
0x08050c66: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x8cc0; add esp, 0x28; pop ebx; ret; 
0x08051223: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x8cc0; add esp, 0x2c; ret; 
0x08058823: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x10670; add esp, 0x2c; ret; 
0x08075d4d: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x2e6a0; add esp, 0x2c; ret; 
0x08089f4f: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x419e0; add esp, 0x2c; ret; 
0x0805058f: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x8240; add esp, 0x2c; ret; 
0x0805121f: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x8cc0; add esp, 0x2c; ret; 
0x08075c66: and al, 0x2c; push eax; lea eax, [esp + 0x34]; push eax; push dword ptr [ebp + 8]; call esi; 
0x0805b0e0: and al, 0x2c; push edi; push esi; push ebx; call dword ptr [ebp + 0x40]; 
0x08088a32: and al, 0x30; add dword ptr [eax], eax; add byte ptr [eax + 0x10e], bh; call dword ptr gs:[0x10]; 
0x080b2c53: and al, 0x30; add ebp, dword ptr [edx + 8]; mov dword ptr [esp], ebp; call edi; 
0x0807c9f9: and al, 0x30; mov eax, dword ptr [esp + 0x5c]; push dword ptr [eax + 4]; call edi; 
0x08075f81: and al, 0x30; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x38]; call esi; 
0x0805a854: and al, 0x30; push eax; call esi; 
0x080767c4: and al, 0x34; call edi; 
0x08066395: and al, 0x34; push dword ptr [esp + 0x10]; call eax; 
0x080767bc: and al, 0x34; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x34]; call edi; 
0x08075c05: and al, 0x34; push eax; push dword ptr [ebp + 8]; call esi; 
0x0805b76b: and al, 0x34; push eax; push esi; call dword ptr [edi + 0x48]; 
0x080acea5: and al, 0x34; push edi; push esi; call dword ptr [ebp]; 
0x080ace6b: and al, 0x34; push edi; push esi; call eax; 
0x0809e10b: and al, 0x38; call dword ptr [ebx + 0x38]; 
0x08085687: and al, 0x38; call eax; 
0x08075e4c: and al, 0x38; call esi; 
0x0804fcad: and al, 0x38; or eax, 0x83000000; ret 0xc702; 
0x0805ebf3: and al, 0x38; push 0; push edi; push esi; push ebp; call dword ptr [ebx + 0x24]; 
0x08076929: and al, 0x38; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x34]; call edi; 
0x08075e47: and al, 0x38; push eax; push dword ptr [esp + 0x38]; call esi; 
0x0808de91: and al, 0x39; ret; 
0x080767c0: and al, 0x3c; push dword ptr [esp + 0x34]; call edi; 
0x08075f89: and al, 0x3c; push dword ptr [esp + 0x38]; call esi; 
0x08075f85: and al, 0x3c; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x38]; call esi; 
0x080593af: and al, 0x3c; push eax; push dword ptr [esp + 0x24]; call dword ptr [ebx + 0x48]; 
0x0805c650: and al, 0x3c; push edi; call dword ptr [eax + 0x20]; 
0x08057414: and al, 0x3c; push esi; call dword ptr [edx + 0x1c]; 
0x0804c1d8: and al, 0x3e; sti; test dword ptr [ebx + 0x458b10c4], 0x74c0858c; adc eax, edi; ret 0x6ef4; 
0x0805e8aa: and al, 0x40; call dword ptr [ebx + 0xc]; 
0x0804a490: and al, 0x40; int 0x80; 
0x0809e0fd: and al, 0x40; lea ebx, [eax + eax*4]; shl ebx, 4; add ebx, dword ptr [esp + 0x44]; push dword ptr [esp + 0x38]; call dword ptr [ebx + 0x38]; 
0x080998d0: and al, 0x40; lea edx, [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x080ab0d3: and al, 0x40; mov eax, 0x180; mov ebx, 0x3005; call dword ptr gs:[0x10]; 
0x08098883: and al, 0x40; push eax; push dword ptr [ebp]; call esi; 
0x08065ebd: and al, 0x40; push edi; push ebp; call eax; 
0x0808871c: and al, 0x42; std; call dword ptr [eax - 0x73]; 
0x0807f32b: and al, 0x44; call eax; 
0x080998cc: and al, 0x44; mov ebx, dword ptr [esp + 0x40]; lea edx, [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0809e107: and al, 0x44; push dword ptr [esp + 0x38]; call dword ptr [ebx + 0x38]; 
0x0805be0d: and al, 0x44; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x0807ee59: and al, 0x48; call eax; 
0x080507de: and al, 0x48; push dword ptr [edi]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0807ee49: and al, 0x48; push dword ptr [esp + 0x60]; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0804dbbe: and al, 0x4c; add dword ptr [ebx - 0x16c3db94], ecx; ret 0xfffe; 
0x080814ce: and al, 0x4c; call eax; 
0x08050822: and al, 0x4c; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x08097610: and al, 0x50; add al, 0; add byte ptr [ecx], al; ret; 
0x080804df: and al, 0x50; call eax; 
0x080857a9: and al, 0x50; call esi; 
0x08085683: and al, 0x50; mov eax, dword ptr [esp + 0x38]; call eax; 
0x080857a5: and al, 0x50; push dword ptr [esp + 0x50]; call esi; 
0x0808567f: and al, 0x50; push dword ptr [esp + 0x50]; mov eax, dword ptr [esp + 0x38]; call eax; 
0x0805bad5: and al, 0x50; push esi; call dword ptr [edi + 0x48]; 
0x08079e27: and al, 0x53; add byte ptr [ecx - 0x38dfdba4], cl; ret; 
0x08065aee: and al, 0x53; call eax; 
0x08083692: and al, 0x54; call eax; 
0x0807f904: and al, 0x54; call edx; 
0x0808e923: and al, 0x54; cmp dword ptr [edi], ecx; test byte ptr [edx + eax], bl; add byte ptr [ebx + 0xf0c2454], cl; mov esi, 0xc7542444; ret 0xfff0; 
0x0805976c: and al, 0x56; call dword ptr [ebx + 0x40]; 
0x08065576: and al, 0x56; call eax; 
0x0805966a: and al, 0x57; call dword ptr [ebx + 0x40]; 
0x08080e7d: and al, 0x58; call edi; 
0x08080993: and al, 0x58; mov eax, dword ptr [esp + 0x48]; call eax; 
0x08080e79: and al, 0x58; push dword ptr [esp + 0x58]; call edi; 
0x0808098f: and al, 0x58; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0807c9f4: and al, 0x58; push ebp; push dword ptr [esp + 0x30]; mov eax, dword ptr [esp + 0x5c]; push dword ptr [eax + 4]; call edi; 
0x080a7a6c: and al, 0x5b; pop esi; ret; 
0x08083263: and al, 0x5c; call edi; 
0x08082ef3: and al, 0x5c; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0807c9fd: and al, 0x5c; push dword ptr [eax + 4]; call edi; 
0x0808567b: and al, 0x5c; push dword ptr [esp + 0x50]; push dword ptr [esp + 0x50]; mov eax, dword ptr [esp + 0x38]; call eax; 
0x0808325f: and al, 0x5c; push dword ptr [esp + 0x5c]; call edi; 
0x08082eef: and al, 0x5c; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0807eff5: and al, 0x5c; push dword ptr [esp + 0x64]; call edi; 
0x0807f323: and al, 0x5c; push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x0807ee51: and al, 0x5c; push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x080804d7: and al, 0x5c; push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x0807f8fc: and al, 0x5c; push dword ptr [esp + 0x64]; mov edx, dword ptr [esp + 0x54]; call edx; 
0x0808d426: and al, 0x60; add dword ptr [eax], eax; add byte ptr [ecx - 0x768fdbbc], cl; ret 0xc483; 
0x0808193a: and al, 0x60; call edi; 
0x080821cf: and al, 0x60; call esi; 
0x080814ca: and al, 0x60; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0807f31f: and al, 0x60; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x0807ee4d: and al, 0x60; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0807f8f8: and al, 0x60; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; mov edx, dword ptr [esp + 0x54]; call edx; 
0x08081936: and al, 0x60; push dword ptr [esp + 0x60]; call edi; 
0x080821cb: and al, 0x60; push dword ptr [esp + 0x60]; call esi; 
0x080814c6: and al, 0x60; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0808017a: and al, 0x60; push dword ptr [esp + 0x68]; call edi; 
0x0807fec4: and al, 0x60; push dword ptr [esp + 0x68]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0807eff9: and al, 0x64; call edi; 
0x08075e43: and al, 0x64; mov dword ptr [esp + 0x38], edx; push eax; push dword ptr [esp + 0x38]; call esi; 
0x0807f327: and al, 0x64; mov eax, dword ptr [esp + 0x44]; call eax; 
0x0807ee55: and al, 0x64; mov eax, dword ptr [esp + 0x48]; call eax; 
0x080804db: and al, 0x64; mov eax, dword ptr [esp + 0x50]; call eax; 
0x0807f900: and al, 0x64; mov edx, dword ptr [esp + 0x54]; call edx; 
0x0808017e: and al, 0x68; call edi; 
0x0807fec8: and al, 0x68; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0808368e: and al, 0x68; mov eax, dword ptr [esp + 0x54]; call eax; 
0x08083b76: and al, 0x68; push dword ptr [esp + 0x68]; call edi; 
0x0808368a: and al, 0x68; push dword ptr [esp + 0x68]; mov eax, dword ptr [esp + 0x54]; call eax; 
0x08082eea: and al, 0x68; push eax; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0807f5db: and al, 0x6a; add byte ptr [edx], ch; push 0; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; call edi; 
0x080a5313: and al, 0x6a; jg 0x5d2ff; fist word ptr [esi]; std; call dword ptr [edx + 0x68]; 
0x08088deb: and al, 0x6c; add dword ptr [eax], eax; add byte ptr [ebp + 0x51], dl; lea esi, [ecx + eax]; push esi; call edi; 
0x080804d2: and al, 0x6c; push eax; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x0807febf: and al, 0x6c; push eax; push dword ptr [esp + 0x60]; push dword ptr [esp + 0x68]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x08058925: and al, 0x76; and eax, 0x5504ec83; push edi; push esi; call dword ptr [edx + 0x1c]; 
0x08088e52: and al, 0x83; in al, dx; add al, 0x55; push ebx; push esi; call edi; 
0x0805e7e3: and al, 0x83; in al, dx; or al, 0x53; call dword ptr [esi + 0x10]; 
0x0805e89f: and al, 0x83; in al, dx; or byte ptr [ebp + 0x5150017e], cl; mov dword ptr [esp + 0x40], ecx; call dword ptr [ebx + 0xc]; 
0x0805ebfc: and al, 0x83; les ebp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x08079304: and al, 0x83; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x08060e50: and al, 0x83; les edx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0808771c: and al, 0x83; ret 0x3901; 
0x08060cbe: and al, 0x83; ret; 
0x0804a265: and al, 0x84; add byte ptr [eax], al; add bh, al; ret 0x688c; 
0x08082016: and al, 0x85; sar byte ptr [eax], 0xf; inc ebp; ret 0x4489; 
0x0809e5fa: and al, 0x88; add byte ptr [eax], al; add bh, bh; xor byte ptr [ebp - 0x1c22279], cl; call dword ptr [eax - 0x18]; 
0x08060b92: and al, 0x89; aad 0x89; ret 0xeac1; 
0x080a3e6e: and al, 0x89; add al, 0x24; mov eax, dword ptr [esp + 4]; ret 0x14; 
0x080a3d97: and al, 0x89; add al, 0x24; mov eax, dword ptr [esp + 4]; ret 0xc; 
0x08051a63: and al, 0x89; mov ch, 0x54; idiv edi; dec dword ptr [ecx - 0x8a77b]; jmp dword ptr [ebp - 0x75]; 
0x0805e2d6: and al, 0x89; push eax; add al, 0x5b; ret; 
0x080aefca: and al, 0x89; ret 0xd889; 
0x080b18af: and al, 0x89; ret 0xe889; 
0x080b16ba: and al, 0x89; ret 0xf685; 
0x0804f4d7: and al, 0x89; ret; 
0x0808f5b0: and al, 0x89; test dword ptr [edi + esi*8 - 1], ecx; jmp dword ptr [ebp - 0x75]; 
0x080a24c4: and al, 0x8b; inc esp; and al, 0x20; call 0x59e80; add esp, 0x1c; ret; 
0x080a3e71: and al, 0x8b; inc esp; and al, 4; ret 0x14; 
0x080a3d9a: and al, 0x8b; inc esp; and al, 4; ret 0xc; 
0x080a85b0: and al, 0x8b; push eax; or byte ptr [ebx + 0x508b044a], cl; adc byte ptr [ecx + 0x39c829f8], cl; ret 0x6f72; 
0x080a796b: and al, 0x8b; push ebx; or byte ptr [ecx + 0x4c48302], cl; pop ebx; pop esi; ret; 
0x080b07da: and al, 0x8d; je 0x68804; add byte ptr [eax - 0xf7137d], dl; jne 0x687f2; push ebx; call dword ptr [ebp + 8]; 
0x080afab2: and al, 0x90; add byte ptr [eax], al; add bh, dh; ret 0; 
0x080ad1b1: and al, 0x90; add byte ptr [eax], al; add byte ptr [ecx - 0x74e3db84], cl; push eax; or byte ptr [ecx], al; ret 0xd789; 
0x08088e2e: and al, 0x90; sub esp, 4; push ebp; push esi; push dword ptr [esp + 0x10]; call edi; 
0x0804a272: and al, 0x98; add byte ptr [eax], al; add byte ptr [ebp - 0x76fb4fbc], cl; add al, bh; ret 0x4d88; 
0x08088cb0: and al, 0xa0; add byte ptr [eax], al; add byte ptr [eax + 0xaf], bh; mov esi, 8; call dword ptr gs:[0x10]; 
0x0804a640: and al, 0xa0; add byte ptr [eax], al; add byte ptr [ebx - 0x17e3dba4], cl; ret 0x65; 
0x0806089b: and al, 0xb8; lock add byte ptr [eax], al; add byte ptr [ecx + 0x80], bh; mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x0805c6a9: and al, 0xc7; ret; 
0x080759e5: and al, 0xc; add dword ptr [ecx - 0x76ebdbac], ecx; ret 0x4c89; 
0x080770cd: and al, 0xc; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x080a3e22: and al, 0xc; add esp, 0x20; jmp ecx; 
0x08076fe0: and al, 0xc; call dword ptr gs:[0x10]; 
0x08076fe0: and al, 0xc; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x2eff8; pop ebx; ret; 
0x08077010: and al, 0xc; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x2f028; pop ebx; ret; 
0x08099660: and al, 0xc; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x51678; pop ebx; ret; 
0x08079c4d: and al, 0xc; mov eax, 0x21; xor ecx, ecx; lea ebx, [edi - 0x2de88]; int 0x80; 
0x0809971d: and al, 0xc; mov eax, 0x8c; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x080659c8: and al, 0xc; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0806681b: and al, 0xc; mov eax, 0xf0; mov ecx, 0x81; xor esi, esi; mov edx, 1; call dword ptr gs:[0x10]; 
0x08088f8c: and al, 0xc; mov eax, dword ptr [esp + 0x14]; call eax; 
0x08077ee1: and al, 0xc; mov ebp, eax; mov ecx, dword ptr [esp + 8]; mov eax, 0xc0; call dword ptr gs:[0x10]; 
0x08077cbc: and al, 0xc; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x080abc5b: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x08077f5b: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x08077f8b: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x08077c3c: and al, 0xc; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x08077143: and al, 0xc; mov esi, eax; mov eax, 3; call dword ptr gs:[0x10]; 
0x080771e3: and al, 0xc; mov esi, eax; mov eax, 4; call dword ptr gs:[0x10]; 
0x08071954: and al, 0xc; pop edi; ret; 
0x0804ffb7: and al, 0xc; push dword ptr [ebp]; push dword ptr [esi]; mov eax, dword ptr [esp + 0x1c]; call eax; 
0x08098c08: and al, 0xc; push ebp; push ebx; call eax; 
0x0804ff55: and al, 0xc; push ebp; push esi; mov eax, dword ptr [esp + 0x1c]; call eax; 
0x08088f87: and al, 0xc; push ebx; push dword ptr [esp + 0xc]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x0805c843: and al, 0xc; sub esp, 4; push edx; push ebp; push esi; call dword ptr [ebx + 0x38]; 
0x08078a8e: and al, 0xc; test eax, eax; je 0x30a98; test edx, edx; jne 0x30aa0; ret; 
0x08088986: and al, 0xc; xor eax, dword ptr gs:[0x14]; jne 0x40996; add esp, 0x18; pop ebx; ret; 
0x08077aea: and al, 0xc; xor ebx, dword ptr gs:[0x14]; jne 0x2fb37; add esp, 0x18; pop ebx; ret; 
0x08076139: and al, 0xc; xor ecx, dword ptr gs:[0x14]; jne 0x2e16c; add esp, 0x18; pop ebx; ret; 
0x080a79f6: and al, 0xc; xor ecx, dword ptr gs:[0x14]; jne 0x5fa05; add esp, 0x1c; ret; 
0x08076fa8: and al, 0xc; xor edx, dword ptr gs:[0x14]; jne 0x2efc7; add esp, 0x18; pop ebx; ret; 
0x08077e0c: and al, 0xc; xor edx, dword ptr gs:[0x14]; jne 0x2fe1c; add esp, 0x18; pop ebx; ret; 
0x080a5439: and al, 0xe8; add byte ptr [eax], al; add byte ptr [ecx - 0x38f3dbbc], cl; ret; 
0x08086167: and al, 0xe8; ret; 
0x08098fe9: and al, 0xe8; xchg eax, ecx; ljmp 0x8310:0xc483fffd; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x08079c45: and al, 0xe9; ret; 
0x080614d6: and al, 0xe; std; call dword ptr [edx - 0x73]; 
0x080aab58: and al, 0xf1; stc; inc dword ptr [ecx + 0x3a4a4c3]; add byte ptr [ecx], bh; ret 0xa74; 
0x0807703d: and al, 0xf6; ret 0x7540; 
0x0805453c: and al, 0xf9; cld; call dword ptr [eax - 0x18]; 
0x080b33bb: and al, 0xf; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x080a76a9: and al, 0xf; mov dh, 0xc0; pop ebx; pop esi; ret; 
0x08097a1b: and al, 0xf; mov esi, 0x39da891e; ret; 
0x0805afd7: and al, 0xfd; cld; call dword ptr [edx - 0x18]; 
0x0808cf53: and al, 0xfe; call dword ptr [eax + 0x56]; 
0x0808ec23: and al, 0xfe; call dword ptr [eax - 0x18]; 
0x0808ec10: and al, 0xfe; call dword ptr [eax - 0x73]; 
0x080a3dca: and al, 4; add esp, 0x10; jmp ecx; 
0x080ae272: and al, 4; fstp st(0); add esp, 0x20; ret; 
0x080a345e: and al, 4; mov dword ptr [edx], ecx; mov edx, dword ptr [eax]; mov eax, dword ptr [esp + 8]; mov dword ptr [eax], edx; ret; 
0x08077f2c: and al, 4; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x08079268: and al, 4; mov eax, 0x74; call dword ptr gs:[0x10]; 
0x080995a8: and al, 4; mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x08077b06: and al, 4; mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x080769fc: and al, 4; mov eax, 0xfc; call dword ptr gs:[0x10]; 
0x08088830: and al, 4; mov eax, 0xffffffd8; mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x0805fe26: and al, 4; mov eax, dword ptr [eax + 0x34]; ret; 
0x080b01d6: and al, 4; mov eax, dword ptr [eax + 0x48]; ret; 
0x080b0246: and al, 4; mov eax, dword ptr [eax + 0x4c]; ret; 
0x080b0286: and al, 4; mov eax, dword ptr [eax + 0x50]; ret; 
0x080b02f6: and al, 4; mov eax, dword ptr [eax + 0x54]; ret; 
0x080b02e6: and al, 4; mov eax, dword ptr [eax + 0x58]; ret; 
0x080b0296: and al, 4; mov eax, dword ptr [eax + 0x5c]; ret; 
0x08060a11: and al, 4; mov eax, dword ptr [eax]; cmp eax, 0x3fc; jbe 0x18a20; ret; 
0x08060aa1: and al, 4; mov eax, dword ptr [eax]; cmp eax, 0x50; jbe 0x18ab0; ret; 
0x080608e1: and al, 4; mov eax, dword ptr [eax]; cmp eax, 0x80000; jbe 0x188f0; ret; 
0x08060a51: and al, 4; mov eax, dword ptr [eax]; cmp eax, 0xffff; jbe 0x18a60; ret; 
0x08060826: and al, 4; mov eax, dword ptr [edx + 0x14]; cmp dword ptr [edx + 8], eax; cmovae eax, dword ptr [edx + 8]; sub eax, dword ptr [edx + 0xc]; ret; 
0x080a3e1c: and al, 4; mov ecx, eax; mov eax, dword ptr [esp + 0xc]; add esp, 0x20; jmp ecx; 
0x08060980: and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x186c], edx; ret; 
0x080609f0: and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x48c], edx; ret; 
0x080609d0: and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x490], edx; ret; 
0x080609a0: and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x4a0], 1; mov dword ptr [eax + 0x480], edx; ret; 
0x08060950: and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x4a0], 1; mov dword ptr [eax + 0x484], edx; ret; 
0x08060920: and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x4a0], 1; mov dword ptr [eax + 0x498], edx; ret; 
0x08060a80: and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x4bc], edx; ret; 
0x080b0276: and al, 4; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x4c], edx; ret; 
0x0805fb06: and al, 4; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x08087bf6: and al, 4; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x080a3e74: and al, 4; ret 0x14; 
0x080a3d9d: and al, 4; ret 0xc; 
0x0805fe36: and al, 4; ret; 
0x08060876: and al, 4; setae al; ret; 
0x0808914a: and al, 4; sub esp, 4; push ebp; push dword ptr [esp + 0x20]; push esi; call edi; 
0x080ad01e: and al, 4; sub esp, 4; push edi; push esi; push ebp; call dword ptr [ebx]; 
0x080a6b61: and al, 5; adc dword ptr [eax], eax; add byte ptr [eax], al; add esp, 4; add eax, ebx; jmp eax; 
0x0809c060: and al, 7; add bh, al; sar dword ptr [edi + ebp*2], 0xe; or bh, al; ret 0x4da0; 
0x0807974a: and al, 8; call 0x316b0; add esp, 0x18; pop ebx; ret; 
0x08077a8c: and al, 8; call dword ptr gs:[0x10]; 
0x08077a8c: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x2faa0; pop ebx; ret; 
0x08077c44: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x2fc60; pop ebx; ret; 
0x08077c84: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x2fca0; pop ebx; ret; 
0x08077cc0: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x2fcd8; pop ebx; ret; 
0x080b2ef2: and al, 8; call eax; 
0x08074f87: and al, 8; cld; pop edi; ret; 
0x080999a7: and al, 8; int 0x80; 
0x080b027a: and al, 8; mov dword ptr [eax + 0x4c], edx; ret; 
0x080a3466: and al, 8; mov dword ptr [eax], edx; ret; 
0x080998d4: and al, 8; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x080abc5f: and al, 8; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x08077f5f: and al, 8; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x080a8826: and al, 8; mov eax, 0x80e6f2c; call dword ptr [eax]; 
0x08077329: and al, 8; mov eax, 0xb7; mov ecx, edi; call dword ptr gs:[0x10]; 
0x08077ee7: and al, 8; mov eax, 0xc0; call dword ptr gs:[0x10]; 
0x08077f8f: and al, 8; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x0805fb0a: and al, 8; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x08087bfa: and al, 8; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x080b025a: and al, 8; mov eax, dword ptr [edx + 0x60]; shr eax, 0x1f; mov dword ptr [ecx], eax; mov eax, dword ptr [edx + 0x4c]; ret; 
0x08077f28: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x08077325: and al, 8; mov ebx, dword ptr [esp + 8]; mov eax, 0xb7; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0807713f: and al, 8; mov edx, dword ptr [esp + 0xc]; mov esi, eax; mov eax, 3; call dword ptr gs:[0x10]; 
0x080771df: and al, 8; mov edx, dword ptr [esp + 0xc]; mov esi, eax; mov eax, 4; call dword ptr gs:[0x10]; 
0x080a56c4: and al, 8; mov esp, ecx; jmp edx; 
0x08096f36: and al, 8; pop ebx; add eax, ecx; ret; 
0x0805f086: and al, 8; pop ebx; ret; 
0x08074f5d: and al, 8; pop edi; ret; 
0x0807ec06: and al, 8; test dl, dl; movzx eax, dl; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x08078a6a: and al, 8; test eax, eax; je 0x30a74; test edx, edx; jne 0x30a78; ret; 
0x080a7e64: and al, 8; test edx, edx; cmovs edx, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x0809ea6b: and al, 9; ret 0x950f; 
0x0805cfea: and al, byte ptr [ecx]; add byte ptr [eax], al; sub esp, 0xc; push esi; call dword ptr [edi + 0x44]; 
0x0805c027: and al, ch; ret; 
0x080a732e: and bh, ah; call dword ptr [eax - 0x73]; 
0x080a732e: and bh, ah; call dword ptr [eax - 0x73]; adc dword ptr [eax + 0x5000001a], -0x18; ret 0xf58c; 
0x08088866: and bh, ah; inc dword ptr [0x5c797]; mov eax, 0xfffffff4; add eax, dword ptr gs:[0]; ret; 
0x08088846: and bh, ah; inc dword ptr [0x5c7b7]; mov eax, 0xfffffff8; add eax, dword ptr gs:[0]; ret; 
0x08079e2d: and bh, al; ret; 
0x08087556: and bh, bh; dec dword ptr [ebp - 0x2c57b7d]; call dword ptr [eax - 0x73]; 
0x0805b0dd: and bh, bh; je 0x13105; sub al, 0x57; push esi; push ebx; call dword ptr [ebp + 0x40]; 
0x080609a5: and byte ptr [eax + 0x1000004], 0; add byte ptr [eax], al; mov dword ptr [eax + 0x480], edx; ret; 
0x08060955: and byte ptr [eax + 0x1000004], 0; add byte ptr [eax], al; mov dword ptr [eax + 0x484], edx; ret; 
0x08060925: and byte ptr [eax + 0x1000004], 0; add byte ptr [eax], al; mov dword ptr [eax + 0x498], edx; ret; 
0x080608f7: and byte ptr [eax + 0x1000004], 0; add byte ptr [eax], al; ret; 
0x08077060: and byte ptr [eax + 0x127], bh; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x08077ad4: and byte ptr [eax + 0xdd], bh; call dword ptr gs:[0x10]; 
0x080b21b6: and byte ptr [eax - 0x73], dl; and dword ptr [eax], 0xffffffbf; cld; call dword ptr [eax - 0x18]; 
0x0805ff53: and byte ptr [eax], 0x18; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x08092a6d: and byte ptr [eax], al; add byte ptr [eax], al; mov ebx, dword ptr [ebp - 0x4c0]; mov eax, dword ptr [ebx + eax*4]; jmp eax; 
0x08051cbe: and byte ptr [eax], al; add byte ptr [ebx - 0x7d], dl; ret; 
0x080aba92: and byte ptr [eax], al; add byte ptr [ecx - 0x3b7cf3ba], cl; adc al, 0x5b; pop esi; ret; 
0x0804a1da: and byte ptr [eax], al; add dh, dh; ret 0x7440; 
0x080802a6: and byte ptr [eax], bh; std; call dword ptr [eax + 0x68]; 
0x080801a9: and byte ptr [eax], bh; std; call dword ptr [eax - 0x73]; 
0x0805ff54: and byte ptr [eax], bl; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x080ae3f1: and byte ptr [ebp + 0x1c], dh; mov eax, dword ptr [edx + 0x54]; add esp, 8; pop ebx; ret; 
0x080a2d57: and byte ptr [ebp + 0x5e5bf465], cl; pop edi; pop ebp; ret; 
0x0808e942: and byte ptr [ebp + 0xf], 0x8f; sbb eax, 0x83000002; ret; 
0x08050a52: and byte ptr [ebp + ebp - 0x77], dh; ret 0xc083; 
0x0809edee: and byte ptr [ebp - 0x1c04b80], cl; call dword ptr [eax - 0x18]; 
0x0809ee72: and byte ptr [ebp - 0x1c13b80], cl; call dword ptr [eax - 0x18]; 
0x080a89a6: and byte ptr [ebp - 0x1d3e7fec], cl; add al, 0x81; ret 0x5a00; 
0x0809e740: and byte ptr [ebp - 0x30cd580], cl; call dword ptr [eax - 0x18]; 
0x08077b03: and byte ptr [ebp - 0x47fbdbac], cl; fld qword ptr [eax]; add byte ptr [eax], al; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x0808baa0: and byte ptr [ebp - 0x587af00a], al; add eax, dword ptr [eax]; add dh, dh; ret 0xf50; 
0x0808dada: and byte ptr [ebp - 0x627af013], al; add dword ptr [eax], eax; add dh, dh; ret 0xf50; 
0x0807cc82: and byte ptr [ebp - 0x720e8b40], al; add esp, 0x2d; std; call dword ptr [eax - 0x73]; 
0x080b1b6f: and byte ptr [ebx + 0x36ff04ec], al; push dword ptr [ebx + ebp + 4]; push dword ptr [esp + 0x20]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x080a0f1b: and byte ptr [ebx + 0x4503a045], cl; movsb byte ptr es:[edi], byte ptr [esi]; call eax; 
0x0805e99c: and byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; jmp eax; 
0x0805ec5f: and byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x0805bd0b: and byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; jmp eax; 
0x080842d0: and byte ptr [ebx + 0x5e5b5cc4], al; pop edi; pop ebp; ret; 
0x080a3200: and byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0805a6bb: and byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0807a106: and byte ptr [ebx + 0xfc08502], cl; test dword ptr [edi - 0x16000003], ecx; ret 0xfffd; 
0x080a20f3: and byte ptr [ebx - 0x23f73], cl; ljmp [ecx]; ret 0xbd83; 
0x080b31bf: and byte ptr [ebx - 0x2d7aefb0], cl; je 0x6b1d4; sub esp, 0xc; push eax; call edx; 
0x0805b4e5: and byte ptr [ebx - 0x3dd6fb14], al; push edx; push eax; push edi; call dword ptr [ebx + 0x38]; 
0x08077253: and byte ptr [ebx - 0x47d3db84], cl; mov word ptr [eax], es; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x08080002: and byte ptr [ebx - 0x79f0fc06], al; mov edx, 0x80000001; jns 0x38016; or byte ptr [edi], 0x87; ret; 
0x080a37e7: and byte ptr [ebx - 2], cl; call dword ptr [eax - 0x18]; 
0x0805b88b: and byte ptr [ebx], ch; inc esi; sbb al, 0x89; ret; 
0x0804f4d1: and byte ptr [ecx + 0x244489c7], cl; and al, 0x89; ret; 
0x080a9045: and byte ptr [ecx + 0x458de445], cl; fcom dword ptr [eax - 0x73]; and dword ptr [eax + 0x36], 0xfffffffc; call dword ptr [eax + 0x6a]; 
0x0809642c: and byte ptr [ecx + 0x488b0448], cl; or byte ptr [ecx + 0x8508910], cl; mov dword ptr [eax + 0x20], ecx; ret; 
0x08098d31: and byte ptr [ecx + 0x5f5e5bc8], cl; ret; 
0x0808082f: and byte ptr [ecx - 0x9cfdbb4], cl; ret 0x7501; 
0x0807971e: and byte ptr [ecx], al; mov eax, ebx; call 0x316b0; add esp, 0x18; pop ebx; ret; 
0x080796e1: and byte ptr [ecx], al; pop ebx; ret; 
0x080a2802: and byte ptr [ecx], bh; ret 0x3976; 
0x080b0fcc: and byte ptr [ecx], bh; ret 0x4f74; 
0x080a2839: and byte ptr [ecx], bh; ret 0xc977; 
0x0805c197: and byte ptr [ecx], ch; rol byte ptr [ebx + 0x525004ec], 1; push esi; call ecx; 
0x08055eee: and byte ptr [ecx], dh; rol byte ptr [eax - 0x47f43], cl; lcall [eax + 0xf]; xchg eax, esp; ret 0xff52; 
0x0808e060: and byte ptr [edi], cl; dec esi; ret; 
0x080a1a2c: and byte ptr [edi], cl; inc ebp; ret 0xe083; 
0x08071012: and byte ptr [edi], cl; mov esp, 0x76c229c0; push ss; lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x080620b7: and byte ptr [edi], cl; scasd eax, dword ptr es:[edi]; ret 0x7189; 
0x080704fd: and byte ptr [edi], cl; test dword ptr [eax + eax + 0x40a80000], edi; jne 0x285d0; lea eax, [edi + 7]; pop edi; ret; 
0x08071239: and byte ptr [edi], cl; test dword ptr [eax - 0x58000000], esp; inc eax; jne 0x292f0; lea eax, [edx + 7]; ret; 
0x08097ec1: and byte ptr [edi], cl; test dword ptr [eax - 0x73000000], ecx; inc edi; hlt; pop edi; ret; 
0x08097f14: and byte ptr [edi], cl; test dword ptr [ebp - 0x73000000], edx; inc edi; cld; pop edi; ret; 
0x0807188b: and byte ptr [edi], cl; test dword ptr [edx - 0x9fffffd], esi; ret 0xf40; 
0x080719ab: and byte ptr [edi], cl; test dword ptr [esi - 0xa000000], ebp; ret 0xf40; 
0x080703bc: and byte ptr [edi], cl; test ebp, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x080a1a62: and byte ptr [edi], cl; xchg eax, esp; ror byte ptr [edi], 0x95; ret 0xe0d3; 
0x08083f87: and byte ptr [edi], dh; std; call dword ptr [eax + 0x68]; 
0x08083bc0: and byte ptr [edi], dh; std; call dword ptr [eax - 0x73]; 
0x080a248c: and byte ptr [edx - 1], bh; mov eax, 0x80e59ac; mov eax, dword ptr [eax]; call 0x59e80; add esp, 0x1c; ret; 
0x0806bb1c: and byte ptr [esi + 0xf], ah; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x3e73; 
0x0805b062: and byte ptr [esi + ecx - 0x39], dh; ret; 
0x08085300: and byte ptr [esi], dh; std; call dword ptr [eax - 0x73]; 
0x080a173d: and byte ptr [esp + eax - 0x77], dh; ret 0xc031; 
0x080719f6: and ch, 0; add byte ptr [eax], al; lea eax, [eax + 0xb]; pop edi; ret; 
0x08098a62: and ch, 0xf; je 0x50a80; add eax, 2; ret; 
0x08067ddc: and ch, 2; lea edx, [edx - 0x73240]; cmovne eax, edx; ret; 
0x08067d1c: and ch, 2; lea edx, [edx - 0x7acc0]; cmovne eax, edx; ret; 
0x0806722c: and ch, 2; lea edx, [edx - 0x7c470]; cmovne eax, edx; ret; 
0x08077dc7: and ch, bh; call dword ptr [eax - 0x18]; 
0x08077db7: and ch, bh; call dword ptr [eax - 0x73]; 
0x080a756b: and ch, bh; jmp dword ptr [esi - 0x70]; 
0x08098a4b: and cl, 0xf; je 0x50a70; ret; 
0x08075e6d: and cl, byte ptr [ebp - 0x2e5437d]; call dword ptr [eax - 0x73]; 
0x0808660f: and dh, bh; call dword ptr [eax + 0x56]; 
0x08086508: and dword ptr [eax + 0x12], 0xfffffffa; call dword ptr [eax - 1]; 
0x080864b4: and dword ptr [eax + 0x12], 0xfffffffa; call dword ptr [esi + 0x31]; 
0x0807ae4a: and dword ptr [eax + 0x2a], 0xfffffffd; call dword ptr [eax - 0x73]; 
0x080a904e: and dword ptr [eax + 0x36], 0xfffffffc; call dword ptr [eax + 0x6a]; 
0x08085345: and dword ptr [eax + 0x36], 0xfffffffd; call dword ptr [eax + 0x68]; 
0x08084f8a: and dword ptr [eax + 0x36], 0xfffffffd; call dword ptr [eax - 0x73]; 
0x08082b83: and dword ptr [eax + 0x37], 0xfffffffd; call dword ptr [eax + 0x68]; 
0x08082604: and dword ptr [eax + 0x37], 0xfffffffd; call dword ptr [eax - 0x73]; 
0x0807fc69: and dword ptr [eax + 0x38], 0xfffffffd; call dword ptr [eax + 0x68]; 
0x0807fb89: and dword ptr [eax + 0x38], 0xfffffffd; call dword ptr [eax - 0x73]; 
0x080862e5: and dword ptr [eax + 0x39], 0xfffffffd; call dword ptr [eax - 0x73]; 
0x080a732c: and dword ptr [eax + 0x50fffc22], 0xffffff8d; adc dword ptr [eax + 0x5000001a], -0x18; ret 0xf58c; 
0x0807eb93: and dword ptr [eax + 0x50fffd33], 0xffffffe8; add al, ch; cld; jmp dword ptr [esi - 0x70]; 
0x0807e4b4: and dword ptr [eax + 0x7b], 0xfffffff9; call dword ptr [eax - 0x73]; 
0x080b0a3e: and dword ptr [eax + 0xc7530fb], eax; mov eax, dword ptr [edx + 8]; add esp, 8; pop ebx; ret; 
0x0807710e: and dword ptr [eax + 3], edi; call dword ptr gs:[0x10]; 
0x080771ae: and dword ptr [eax + 4], edi; call dword ptr gs:[0x10]; 
0x0807af48: and dword ptr [eax - 0x7c000003], 0xffffffc4; add al, 0x5b; pop esi; ret; 
0x080852ff: and dword ptr [eax], 0x36; std; call dword ptr [eax - 0x73]; 
0x08083f86: and dword ptr [eax], 0x37; std; call dword ptr [eax + 0x68]; 
0x08083bbf: and dword ptr [eax], 0x37; std; call dword ptr [eax - 0x73]; 
0x080802a5: and dword ptr [eax], 0x38; std; call dword ptr [eax + 0x68]; 
0x080801a8: and dword ptr [eax], 0x38; std; call dword ptr [eax - 0x73]; 
0x080afe60: and dword ptr [eax], 0xffffff9c; cld; call dword ptr [eax - 0x73]; 
0x080b21b9: and dword ptr [eax], 0xffffffbf; cld; call dword ptr [eax - 0x18]; 
0x080a45bd: and dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x080a1854: and dword ptr [eax], eax; add byte ptr [eax], al; xor ecx, ecx; lea ebx, [edi - 0x1b7e5]; call dword ptr gs:[0x10]; 
0x08079c50: and dword ptr [eax], eax; add byte ptr [eax], al; xor ecx, ecx; lea ebx, [edi - 0x2de88]; int 0x80; 
0x080a035f: and dword ptr [eax], eax; add byte ptr [ebx + 0x458b9c55], cl; movsb byte ptr es:[edi], byte ptr [esi]; add esp, 0x20; mov dword ptr [ebp - 0x5c], edx; call eax; 
0x0806a307: and dword ptr [ebp + 0x748d3a34], ecx; add byte ptr es:[eax - 0x7cfe49f1], dl; rol dword ptr [ecx], 0x83; ret 0xf01; 
0x080a7f19: and dword ptr [ebx + ebx], 0x8b0b7300; xchg eax, ecx; push 0x6600001b; add dword ptr [edx + eax*2], 1; ret; 
0x0805f00a: and dword ptr [ebx], 0xffffffef; add esp, 4; pop ebx; pop esi; ret; 
0x080b2e7d: and dword ptr [ebx], eax; add byte ptr [ebx - 0x7c72ef14], al; xor dh, bl; cld; call dword ptr [eax - 1]; 
0x0808756d: and dword ptr [edx + 0x3a], 0xfffffffd; call dword ptr [eax - 0x18]; 
0x0808871b: and dword ptr [edx + eax*2], 0xfffffffd; call dword ptr [eax - 0x73]; 
0x0807ae13: and dword ptr [edx + ebp], 0xfffffffd; call dword ptr [edx + 0x50]; 
0x080a022b: and dword ptr [edx], 0x458b0000; cwde; add esp, 0x20; lea esi, [esi]; call eax; 
0x0806b7ab: and dword ptr [edx], eax; add byte ptr [eax], al; pop ebx; ret; 
0x0805efb3: and dword ptr [esi], 0xffffffef; pop ebx; pop esi; pop edi; ret; 
0x08066fae: and eax, 0; std; call dword ptr [esi + 0x50]; 
0x08098100: and eax, 0x1f; jne 0x4fe80; xor eax, eax; pop edi; ret; 
0x08098130: and eax, 0x1ff; jne 0x4fe80; xor eax, eax; pop edi; ret; 
0x08098160: and eax, 0x1fff; jne 0x4fe80; xor eax, eax; pop edi; ret; 
0x08084804: and eax, 0x36; std; call dword ptr [eax + 0x68]; 
0x08084678: and eax, 0x36; std; call dword ptr [eax - 0x73]; 
0x08080654: and eax, 0x37; std; call dword ptr [eax - 0x73]; 
0x08085ac6: and eax, 0x38; std; call dword ptr [eax - 0x18]; 
0x08098110: and eax, 0x3f; jne 0x4fe80; xor eax, eax; pop edi; ret; 
0x08098140: and eax, 0x3ff; jne 0x4fe80; xor eax, eax; pop edi; ret; 
0x08098170: and eax, 0x3fff; jne 0x4fe80; xor eax, eax; pop edi; ret; 
0x08058927: and eax, 0x5504ec83; push edi; push esi; call dword ptr [edx + 0x1c]; 
0x0804a3a4: and eax, 0x5f; stc; call dword ptr [eax - 0x73]; 
0x0804a459: and eax, 0x6f; stc; call dword ptr [eax - 0x73]; 
0x0805ad54: and eax, 0x7880e175; add dword ptr [ebx + 0x75], esi; fild dword ptr [eax - 0x76da2b83]; ret 0x5b74; 
0x08098120: and eax, 0x7f; jne 0x4fe80; xor eax, eax; pop edi; ret; 
0x08098150: and eax, 0x7ff; jne 0x4fe80; xor eax, eax; pop edi; ret; 
0x08098180: and eax, 0x7fff; jne 0x4fe80; xor eax, eax; pop edi; ret; 
0x080abb57: and eax, 0x81fff9e1; ret; 
0x08068157: and eax, 0x81fffe1b; ret; 
0x0805b157: and eax, 0x81fffeeb; ret; 
0x080b34a5: and eax, 0xc483fffb; sbb al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x080b2b37: and eax, 0xc7fffb2f; ret 0; 
0x0808fd43: and eax, 0xf000000; mov dh, 0x56; or al, 0xf6; ret 0xf08; 
0x0809801a: and eax, 0xf; jne 0x4fe80; xor eax, eax; pop edi; ret; 
0x0809804b: and eax, 0xff; jne 0x4fe80; xor eax, eax; pop edi; ret; 
0x08098082: and eax, 0xfff; jne 0x4fe80; xor eax, eax; pop edi; ret; 
0x080980bb: and eax, 0xffff; jne 0x4fe80; xor eax, eax; pop edi; ret; 
0x08060a29: and eax, 0xfffffff0; sub eax, 1; shr eax, 4; add eax, 1; mov dword ptr [edx + 0x4b0], eax; ret; 
0x0804fe1e: and eax, 0xfffffff; xor eax, edx; movzx edx, byte ptr [ecx]; test dl, dl; jne 0x7e09; ret; 
0x080980d0: and eax, 1; jne 0x4fe80; xor eax, eax; pop edi; ret; 
0x080a5708: and eax, 2; sub eax, 1; ret; 
0x080980e0: and eax, 3; jne 0x4fe80; xor eax, eax; pop edi; ret; 
0x080980f0: and eax, 7; jne 0x4fe80; xor eax, eax; pop edi; ret; 
0x08091224: and eax, dword ptr [ebx + 0x75ff08ec]; sub byte ptr [ecx + 0x44858bc2], cl; idiv edi; call dword ptr [ecx - 0x75]; 
0x08085a2b: and eax, dword ptr [ebx - 0x17a8f314]; imul edx, dword ptr [ebp - 1], -1; mov dword ptr [esp], esi; call edi; 
0x0807eaec: and eax, dword ptr [ebx - 0x7c72f714]; inc eax; xchg eax, esi; stc; call dword ptr [eax - 0x73]; 
0x0809827f: and eax, edx; je 0x50360; bsr eax, eax; add eax, edi; pop edi; ret; 
0x0805f00b: and ebp, edi; add esp, 4; pop ebx; pop esi; ret; 
0x08079386: and ebp, edi; call dword ptr [eax - 0x18]; 
0x0809969c: and edi, dword ptr [eax + 0x12c]; call dword ptr gs:[0x10]; 
0x0807c00e: and edi, eax; ret 0x6f40; 
0x08079ca2: and edi, ebp; call dword ptr [eax + 0x6a]; 
0x080a7296: and edi, ebp; jmp dword ptr [esi - 0x70]; 
0x0807f091: and edx, 0x33; std; call dword ptr [eax - 0x73]; 
0x08060ab3: and edx, 0xfffffff0; test eax, eax; mov eax, 8; cmovne eax, edx; mov dword ptr [ecx + 0x1870], eax; ret; 
0x0807e0d4: and esi, 0x2d; std; call dword ptr [eax - 0x18]; 
0x08066d77: and esp, 0xe; std; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x080576f8: and esp, 0xfffffffa; cld; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x08088886: and esp, edi; inc dword ptr [0x5c777]; mov eax, 0xfffffff0; add eax, dword ptr gs:[0]; ret; 
0x0807484f: arpl bx, cx; add cl, byte ptr [edi]; xchg eax, esp; ret 0x920f; 
0x080747dd: arpl cx, cx; cmp al, byte ptr [ebx - 0x7bf0ef07]; pop ss; add dword ptr [eax], eax; add byte ptr [ebx - 0x76f3dbbc], cl; ret 0xe283; 
0x080abb49: arpl dx, bx; cld; jmp dword ptr [esi - 0x70]; 
0x08071c13: bound eax, qword ptr [eax + 0x74000f7a]; pop esp; mov eax, 0x10; pop edi; ret; 
0x08058e05: bound ecx, qword ptr [esi]; or bh, al; ret 0x5f80; 
0x0805b5d6: bound ecx, qword ptr [esi]; or bh, al; ret; 
0x0805bdeb: bound ecx, qword ptr [esi]; or byte ptr [ecx + 0x244489d7], cl; adc al, 0x89; ret 0xc729; 
0x08049d44: bound ecx, qword ptr [esi]; or byte ptr [ecx], al; leave; ret; 
0x0808756e: bound edi, qword ptr [edx]; std; call dword ptr [eax - 0x18]; 
0x08075d04: bound edx, qword ptr [eax - 0x73]; sub dword ptr [eax + 0x50fffd19], -0x18; mov ss, word ptr [ebx - 3]; jmp dword ptr [esi - 0x70]; 
0x08070fc0: bsf eax, eax; add eax, edi; pop edi; ret; 
0x080713ea: bsf eax, eax; add eax, edx; add eax, ecx; ret; 
0x08071550: bsf eax, eax; add eax, edx; ret; 
0x08070fd0: bsf eax, eax; lea eax, [eax + edi + 0x10]; pop edi; ret; 
0x08070fe0: bsf eax, eax; lea eax, [eax + edi + 0x20]; pop edi; ret; 
0x08070fb0: bsf eax, eax; lea eax, [eax + edi - 0x10]; pop edi; ret; 
0x08071560: bsf eax, eax; lea eax, [eax + edx + 0x10]; ret; 
0x08071570: bsf eax, eax; lea eax, [eax + edx + 0x20]; ret; 
0x08071540: bsf eax, eax; lea eax, [eax + edx - 0x10]; ret; 
0x08070efc: bsf eax, eax; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x08071537: bsf eax, eax; lea eax, [edx + eax + 0x30]; ret; 
0x08070ff0: bsf eax, eax; sub edx, eax; jbe 0x29030; add eax, edi; pop edi; ret; 
0x08071003: bsf eax, eax; sub edx, eax; jbe 0x29030; lea eax, [edi + eax + 0x10]; pop edi; ret; 
0x08071013: bsf eax, eax; sub edx, eax; jbe 0x29030; lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x08071023: bsf eax, eax; sub edx, eax; jbe 0x29030; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x080713a5: bsf ecx, ecx; add eax, ecx; ret; 
0x08070d1d: bsf ecx, ecx; sub edx, ecx; jbe 0x28d50; add eax, ecx; ret; 
0x08098205: bsr eax, eax; add eax, edi; pop edi; ret; 
0x08098353: bsr eax, eax; add eax, edi; sub eax, 0x10; pop edi; ret; 
0x080af6fc: call 0x100676fe; mov dh, 0x73; add dword ptr [ebx - 0x7cf3db84], ecx; ret; 
0x08058661: call 0x10560; add esp, 0x1c; ret; 
0x0805882d: call 0x10670; add esp, 0x2c; ret; 
0x0804e2d6: call 0x10b0; add esp, 0x18; pop ebx; ret; 
0x0809f507: call 0x10c0; add esp, 0x14; pop ebx; pop esi; ret; 
0x0807cbc6: call 0x10d0; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0807cb7f: call 0x10d0; add esp, 0x18; pop ebx; ret; 
0x080514e6: call 0x12af0; add esp, 0x1c; ret; 
0x080966cd: call 0x15f80; add esp, 0x14; pop ebx; pop esi; ret; 
0x0805cd4d: call 0x15fa0; mov dword ptr [esi + 0x38], 0xffffffff; add esp, 0x14; pop ebx; pop esi; ret; 
0x0805d650: call 0x16eb0; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x08060711: call 0x16eb0; add esp, 0x14; pop ebx; pop esi; ret; 
0x0805f759: call 0x170a0; add esp, 0x1c; ret; 
0x080606ba: call 0x17c30; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x08060812: call 0x18730; or dword ptr [ebx], 8; add esp, 0x18; pop ebx; ret; 
0x08060a30: call 0x1c20d39; mov dword ptr [edx + 0x4b0], eax; ret; 
0x0804f383: call 0x1da60; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x08086214: call 0x1da60; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x080780dd: call 0x1da60; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x08087bbe: call 0x1da60; add esp, 0x14; pop ebx; pop esi; ret; 
0x08049c61: call 0x2220; hlt; mov ebx, dword ptr [esp]; ret; 
0x080aece9: call 0x24afa0d; call dword ptr [eax - 0x75]; 
0x080a80f4: call 0x2a7f; add eax, 0x3cf07; mov eax, 0x80e6f60; mov eax, dword ptr [eax]; ret; 
0x08088884: call 0x2a7f; add eax, 0x5c777; mov eax, 0xfffffff0; add eax, dword ptr gs:[0]; ret; 
0x08088864: call 0x2a7f; add eax, 0x5c797; mov eax, 0xfffffff4; add eax, dword ptr gs:[0]; ret; 
0x08088844: call 0x2a7f; add eax, 0x5c7b7; mov eax, 0xfffffff8; add eax, dword ptr gs:[0]; ret; 
0x08085a84: call 0x2a7f; add eax, 0x5f577; mov eax, dword ptr [eax + 0x1968]; ret; 
0x0807cc04: call 0x2a7f; add eax, 0x683f7; mov eax, dword ptr [eax + 0x1fa8]; ret; 
0x0807cbe4: call 0x2a7f; add eax, 0x68417; mov eax, dword ptr [eax + 0x1fa0]; ret; 
0x0807aee4: call 0x2a7f; add eax, 0x6a117; lea eax, [eax + 0xa60]; ret; 
0x0805fdf4: call 0x2a7f; add eax, 0x85207; mov eax, 0x80e5098; mov eax, dword ptr [eax]; ret; 
0x08097231: call 0x2cea0; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x08098693: call 0x2cea0; add esp, 0x18; pop ebx; ret; 
0x080986c3: call 0x2cf30; add esp, 0x18; pop ebx; ret; 
0x08075b43: call 0x2cfb0; add esp, 0x18; pop ebx; ret; 
0x08075d57: call 0x2e6a0; add esp, 0x2c; ret; 
0x0805c4a0: call 0x2f000; add esp, 0x18; pop ebx; ret; 
0x0805caed: call 0x2f0f0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x08098fea: call 0x2fa80; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x0805b13a: call 0x2fa80; add esp, 0x18; pop ebx; ret; 
0x08077b53: call 0x2fab0; add esp, 0x1c; ret; 
0x0805cb09: call 0x2fc30; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x080b2e01: call 0x2ff20; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x080aaf87: call 0x2ff20; add esp, 0x18; pop ebx; ret; 
0x080a84e7: call 0x30a0; lea esi, [esi]; endbr32; ret 4; 
0x080769f5: call 0x30a0; mov ebx, dword ptr [esp + 4]; mov eax, 0xfc; call dword ptr gs:[0x10]; 
0x08086514: call 0x30a80; add esp, 0x18; pop ebx; ret; 
0x080b2d7d: call 0x30ab0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0805b894: call 0x3121345a; fimul dword ptr [ecx]; ret 0x840f; 
0x0804fcca: call 0x315b0; mov ebp, dword ptr [esp]; ret; 
0x08079722: call 0x316b0; add esp, 0x18; pop ebx; ret; 
0x0807cc57: call 0x32fa0; mov dword ptr [esp], esi; call edi; 
0x0807cdc7: call 0x32fa0; mov dword ptr [esp], esi; mov edx, dword ptr [ebp - 0x48]; call edx; 
0x080b2c4c: call 0x32fa0; mov edx, dword ptr [esp + 0x30]; add ebp, dword ptr [edx + 8]; mov dword ptr [esp], ebp; call edi; 
0x08077c20: call 0x34310; add esp, 4; pop ebx; pop esi; ret; 
0x0807eb1a: call 0x36640; or dword ptr [ebx + 0x195c], 2; add esp, 8; pop ebx; ret; 
0x0804b0f9: call 0x40b0; add esp, 0x2c; ret; 
0x080896be: call 0x411f0; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x0808998c: call 0x419e0; add esp, 0x28; pop ebx; ret; 
0x08089f59: call 0x419e0; add esp, 0x2c; ret; 
0x0808cfd6: call 0x42770; add esp, 0x1c; ret; 
0x080ae26f: call 0x42ad74c; fstp st(0); add esp, 0x20; ret; 
0x08068442: call 0x42d813ad; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x080689c2: call 0x42d8192d; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x080862d9: call 0x4456bdf; add esp, 4; pop ebx; pop esi; ret; 
0x0809692d: call 0x4e470; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x08096972: call 0x4e470; add esp, 0x10; mov eax, 1; add esp, 8; pop ebx; ret; 
0x08060a2d: call 0x4ea4b33; add eax, 1; mov dword ptr [edx + 0x4b0], eax; ret; 
0x080abd33: call 0x54a80; mov dword ptr [ebx + 0x14], eax; add esp, 0x28; pop ebx; ret; 
0x080a78fb: call 0x55400; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x080a50ac: call 0x56290; mov dword ptr [ebx + 8], eax; add esp, 0x28; pop ebx; ret; 
0x080ad845: call 0x56290; mov dword ptr [ebx], eax; add esp, 0x28; pop ebx; ret; 
0x080a245a: call 0x59e80; add esp, 0x1c; ret; 
0x080a0f14: call 0x5a4b0; add esp, 0x20; mov eax, dword ptr [ebp - 0x60]; add eax, dword ptr [ebp - 0x5c]; call eax; 
0x080a022a: call 0x5a4b0; mov eax, dword ptr [ebp - 0x68]; add esp, 0x20; lea esi, [esi]; call eax; 
0x0807afca: call 0x5b010; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0807af8b: call 0x5b010; add esp, 0x18; pop ebx; ret; 
0x0805a5a3: call 0x5b1dea2b; pop esi; pop edi; pop ebp; ret; 
0x0804efa1: call 0x5b2d3429; pop esi; pop edi; pop ebp; ret; 
0x080602b9: call 0x5b2e4741; pop esi; pop edi; pop ebp; ret; 
0x0806032f: call 0x5b2e47b7; pop esi; pop edi; pop ebp; ret; 
0x080a8419: call 0x5b32c8a1; pop esi; pop edi; pop ebp; ret 8; 
0x080a5bcf: call 0x5b5de35d; pop esi; pop edi; ret; 
0x0804b158: call 0x5d5f8fb8; ret; 
0x0804c958: call 0x5d5fa7b8; ret; 
0x0804edfd: call 0x5d5fcc5d; ret; 
0x0805748e: call 0x5d6052ee; ret; 
0x08076862: call 0x5d6246c2; ret; 
0x08076c42: call 0x5d624aa2; ret; 
0x0807840f: call 0x5d62626f; ret; 
0x08078b2e: call 0x5d62698e; ret; 
0x0807eeb6: call 0x5d62cd16; ret; 
0x0807f2c3: call 0x5d62d123; ret; 
0x0807fe6a: call 0x5d62dcca; ret; 
0x0808662c: call 0x5d63448c; ret; 
0x0808dc19: call 0x5d63ba79; ret; 
0x080a3b26: call 0x5d651986; ret; 
0x080a3b97: call 0x5d6519f7; ret; 
0x080a3bf1: call 0x5d651a51; ret; 
0x080b0171: call 0x5d65dfd1; ret; 
0x080a5ffb: call 0x5f643d5b; ret; 
0x080a6c2e: call 0x5f64498e; ret; 
0x080ab8fe: call 0x5f64965e; ret; 
0x080a4d84: call 0x608e0; mov dword ptr [ebx + 0xc], eax; add esp, 0x28; pop ebx; ret; 
0x080ab962: call 0x608e0; mov dword ptr [esi + 8], eax; add esp, 0x24; pop ebx; pop esi; ret; 
0x080a4cdf: call 0x62bc0; pop edx; pop ecx; pop eax; jmp dword ptr [eax]; 
0x080a4d1f: call 0x62da0; pop edx; pop ecx; pop eax; jmp dword ptr [eax]; 
0x080a784d: call 0x63400; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x080a780f: call 0x63400; add esp, 0x18; pop ebx; ret; 
0x080ab83e: call 0x637f0; add eax, ebx; jmp eax; 
0x080a8676: call 0x64f40; add esp, 0x1c; ret; 
0x080aba90: call 0x65b50; mov dword ptr [esi + 0xc], eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x08070ef4: call 0x66028ef9; pmovmskb eax, mm1; bsf eax, eax; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x080b23c1: call 0x68290; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x080b23fc: call 0x682e0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x080b23a8: call 0x682f0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x080b1fa3: call 0x69ef0; add esp, 0x1c; ret; 
0x080b1fd3: call 0x69ef0; add esp, 0x28; pop ebx; ret; 
0x08049d39: call 0x69fe0; add esp, 0x10; mov byte ptr [0x80e62e0], 1; leave; ret; 
0x0805c360: call 0x6a014365; add dword ptr [edx], ebp; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x0804af31: call 0x6b4f0; add esp, 4; pop ebx; pop esi; ret; 
0x08098a43: call 0x74d78e4a; pop ss; mov cl, dl; and cl, 0xf; je 0x50a70; ret; 
0x08050599: call 0x8240; add esp, 0x2c; ret; 
0x080a1d47: call 0x83fdf7d7; ret 0x8908; 
0x08089946: call 0x85b0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x08050903: call 0x867d160a; add al, 0x8d; mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr [esi]; 
0x08092168: call 0x8792a16c; je 0x4a168; cld; call dword ptr [eax + 0x68]; 
0x080a22d9: call 0x88f82bdf; sbb byte ptr [ecx], ch; ret 0xfa39; 
0x08087d7d: call 0x89d58684; ret 0xf889; 
0x080b1982: call 0x89f1228a; ret; 
0x08050c34: call 0x8ae0; add esp, 0x1c; ret; 
0x080b0260: call 0x8b080b84; inc edx; dec esp; ret; 
0x08050c6c: call 0x8cc0; add esp, 0x28; pop ebx; ret; 
0x08051229: call 0x8cc0; add esp, 0x2c; ret; 
0x0807e608: call 0x8d07ac96; and dword ptr [eax + 0x7b], 0xfffffff9; call dword ptr [eax - 0x73]; 
0x08049dc3: call 0x8d0d0a4b; or dword ptr [eax], 0xfffffff0; cld; call dword ptr [eax - 0x18]; 
0x08049e51: call 0x94a0; add esp, 0x10; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x08089635: call 0xb8de943b; lock add byte ptr [eax], al; add byte ptr [ebp + 0x1a3c9b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x080493ae: call 0xb8e991b4; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x080496a3: call 0xb8e994a9; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x08049408: call 0xb8ea920e; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x080495ef: call 0xb8ea93f5; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x08049461: call 0xb8eb9267; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x080494ba: call 0xb8eb92c0; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x08049513: call 0xb8eb9319; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0804956c: call 0xb8eb9372; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x08049648: call 0xb8eb944e; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x080514c4: call 0xc630; add esp, 0x1c; ret; 
0x080ab97c: call 0xe9063980; pop ebx; idiv ecx; call dword ptr [eax + 0x6a]; 
0x08094b88: call 0xec88cb8c; or al, 0x8d; xchg dword ptr [eax - 7], ecx; cld; call dword ptr [eax - 0x18]; 
0x08086eb5: call 0xf06ec3d; dec edi; ret 0xc301; 
0x080a7611: call 0xf7fb8000; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x0807eafe: call 0xf7fb8000; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0809f02f: call 0xf7fb8000; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x08057e66: call 0xfd50; add esp, 0x1c; ret; 
0x080a96d4: call 0xff56a3db; je 0x616eb; lea ebx, [esi + edx*4]; nop; call dword ptr [ebx]; 
0x080638b3: call 0xffff39ca; dec dword ptr [ebx]; add byte ptr [ecx + 0xf6c244c], cl; inc edi; ret 0x548b; 
0x08076fe3: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x2eff8; pop ebx; ret; 
0x08077013: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x2f028; pop ebx; ret; 
0x08077a8f: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x2faa0; pop ebx; ret; 
0x08077c47: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x2fc60; pop ebx; ret; 
0x08077c87: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x2fca0; pop ebx; ret; 
0x08077cc3: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x2fcd8; pop ebx; ret; 
0x08099663: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x51678; pop ebx; ret; 
0x080a7e71: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x5fe80; pop ebx; ret; 
0x08076f5a: call dword ptr [0x10]; cmp eax, 0xfffff001; jae 0x34310; ret; 
0x08088a0e: call dword ptr [0x10]; mov eax, 0x14; call dword ptr gs:[0x10]; 
0x08076a04: call dword ptr [0x10]; mov eax, 1; int 0x80; 
0x08088a1a: call dword ptr [0x10]; mov ebx, eax; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x08077f34: call dword ptr [0x10]; mov ebx, edx; cmp eax, 0xfffff001; jae 0x34310; ret; 
0x08088a28: call dword ptr [0x10]; mov ecx, eax; mov edx, dword ptr [esp + 0x130]; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x08077f67: call dword ptr [0x10]; pop ebx; cmp eax, 0xfffff001; jae 0x34310; ret; 
0x08064be3: call dword ptr [0x10]; pop ebx; pop esi; pop edi; ret; 
0x080995da: call dword ptr [0x10]; ret; 
0x0805199d: call dword ptr [eax + 0x1c]; 
0x0805c653: call dword ptr [eax + 0x20]; 
0x0809690f: call dword ptr [eax + 0x34]; 
0x0805bfdf: call dword ptr [eax + 0x40]; 
0x080544cf: call dword ptr [eax + 0x50]; 
0x08049c56: call dword ptr [eax + 0x51]; 
0x0804b83d: call dword ptr [eax + 0x52]; 
0x080542ef: call dword ptr [eax + 0x53]; 
0x0804fd1e: call dword ptr [eax + 0x55]; 
0x0805447e: call dword ptr [eax + 0x56]; 
0x0809b786: call dword ptr [eax + 0x57]; 
0x080531b2: call dword ptr [eax + 0x68]; 
0x0804e47e: call dword ptr [eax + 0x6a]; 
0x0809d3d1: call dword ptr [eax + 0x6a]; add byte ptr [esi + 0x6a], dl; or al, 0xe8; ret; 
0x0805317d: call dword ptr [eax + 0x6b]; 
0x080590f1: call dword ptr [eax + 0xc]; 
0x0809d1ae: call dword ptr [eax - 0x17]; 
0x08049dcc: call dword ptr [eax - 0x18]; 
0x0807eb97: call dword ptr [eax - 0x18]; add al, ch; cld; jmp dword ptr [esi - 0x70]; 
0x08075d0b: call dword ptr [eax - 0x18]; mov ss, word ptr [ebx - 3]; jmp dword ptr [esi - 0x70]; 
0x08088792: call dword ptr [eax - 0x18]; pop es; sub esp, edi; jmp dword ptr [esi - 0x70]; 
0x08076043: call dword ptr [eax - 0x18]; push esi; push eax; std; jmp dword ptr [esi - 0x70]; 
0x080a88d7: call dword ptr [eax - 0x18]; ret 0xfa27; 
0x0805d5d6: call dword ptr [eax - 0x18]; ret; 
0x080531c7: call dword ptr [eax - 0x18]; sar byte ptr [esi - 1], cl; jmp dword ptr [esi - 0x70]; 
0x080b3281: call dword ptr [eax - 0x18]; sbb byte ptr [esi - 7], bh; jmp dword ptr [esi - 0x70]; 
0x0809ef80: call dword ptr [eax - 0x18]; sbb ecx, eax; cli; jmp dword ptr [esi - 0x70]; 
0x0809c7c4: call dword ptr [eax - 0x39]; 
0x08049c4f: call dword ptr [eax - 0x73]; 
0x080a7330: call dword ptr [eax - 0x73]; adc dword ptr [eax + 0x5000001a], -0x18; ret 0xf58c; 
0x0804e2c8: call dword ptr [eax - 0x75]; 
0x0809a62e: call dword ptr [eax - 0x76e4b973]; out 0x89, eax; ret 0x25; 
0x0804c19c: call dword ptr [eax - 0x77]; 
0x0804b0ba: call dword ptr [eax - 1]; 
0x0809be5c: call dword ptr [eax - 9]; 
0x08051dae: call dword ptr [eax]; 
0x0805cf00: call dword ptr [ebp + 0x24]; 
0x0805ead2: call dword ptr [ebp + 0x30]; 
0x0805a40d: call dword ptr [ebp + 0x40]; 
0x0809d058: call dword ptr [ebp + 0x56]; 
0x080a527f: call dword ptr [ebp + 0x57]; 
0x0807bce0: call dword ptr [ebp + 0x6a]; 
0x080b07e7: call dword ptr [ebp + 8]; 
0x080a8406: call dword ptr [ebp - 1]; 
0x080acea9: call dword ptr [ebp]; 
0x08051e82: call dword ptr [ebx + 0x1c]; 
0x0805ebfa: call dword ptr [ebx + 0x24]; 
0x0805f52a: call dword ptr [ebx + 0x2c]; 
0x080582bc: call dword ptr [ebx + 0x30]; 
0x08058ca4: call dword ptr [ebx + 0x38]; 
0x0805966c: call dword ptr [ebx + 0x40]; 
0x080593b6: call dword ptr [ebx + 0x48]; 
0x08055f01: call dword ptr [ebx + 0x50]; 
0x08079c98: call dword ptr [ebx + 0x53]; 
0x0808cf4c: call dword ptr [ebx + 0x6a]; 
0x0805b606: call dword ptr [ebx + 0xc]; 
0x0805320b: call dword ptr [ebx + 0xf]; 
0x08058007: call dword ptr [ebx + 8]; 
0x0809404c: call dword ptr [ebx - 0x18]; 
0x080b03fe: call dword ptr [ebx - 0x73]; 
0x08053d96: call dword ptr [ebx - 0x77]; 
0x0804e2ef: call dword ptr [ebx - 0x7d]; 
0x080561b4: call dword ptr [ebx - 1]; 
0x08051ae7: call dword ptr [ebx]; 
0x08054e99: call dword ptr [ecx + 0x52]; 
0x0808b673: call dword ptr [ecx + 0x57]; 
0x08052bcc: call dword ptr [ecx + 0x6a]; 
0x08056752: call dword ptr [ecx - 0x18]; 
0x08091232: call dword ptr [ecx - 0x75]; 
0x0804c7b5: call dword ptr [ecx - 0x77]; 
0x0808cd42: call dword ptr [ecx - 1]; 
0x0808d6dc: call dword ptr [ecx]; 
0x0805efa8: call dword ptr [edi + 0x18]; 
0x0805e73d: call dword ptr [edi + 0x34]; 
0x0805b294: call dword ptr [edi + 0x3c]; 
0x080595fd: call dword ptr [edi + 0x40]; 
0x0805cff2: call dword ptr [edi + 0x44]; 
0x0805b76f: call dword ptr [edi + 0x48]; 
0x08087fc8: call dword ptr [edi + 0x50]; 
0x0804e633: call dword ptr [edi + 0x52]; 
0x080a5305: call dword ptr [edi + 0x56]; 
0x0805cc12: call dword ptr [edi + 0xc]; 
0x08086cd7: call dword ptr [edi + 3]; 
0x080ac76f: call dword ptr [edi - 0x18]; 
0x0805f195: call dword ptr [edi - 1]; 
0x08062c67: call dword ptr [edi]; 
0x08057417: call dword ptr [edx + 0x1c]; 
0x080884af: call dword ptr [edx + 0x29]; 
0x0804b81f: call dword ptr [edx + 0x50]; 
0x08055605: call dword ptr [edx + 0x51]; 
0x0804b067: call dword ptr [edx + 0x52]; 
0x0808c2a0: call dword ptr [edx + 0x53]; 
0x08056fbf: call dword ptr [edx + 0x56]; 
0x080a531a: call dword ptr [edx + 0x68]; 
0x080535c1: call dword ptr [edx + 0x6a]; 
0x0809b38e: call dword ptr [edx + 3]; 
0x0805457b: call dword ptr [edx - 0x18]; 
0x08054e0e: call dword ptr [edx - 0x39]; 
0x080614d9: call dword ptr [edx - 0x73]; 
0x080530e3: call dword ptr [edx - 0x75]; 
0x0804c81d: call dword ptr [edx - 0x77]; 
0x08053a01: call dword ptr [edx - 1]; 
0x0805e7e8: call dword ptr [esi + 0x10]; 
0x0805f03a: call dword ptr [esi + 0x18]; 
0x080864b8: call dword ptr [esi + 0x31]; 
0x0805c950: call dword ptr [esi + 0x40]; 
0x08066fb2: call dword ptr [esi + 0x50]; 
0x08076ae8: call dword ptr [esi + 0x51]; 
0x08052b75: call dword ptr [esi + 0x52]; 
0x0805cb27: call dword ptr [esi + 0x53]; 
0x0807aea5: call dword ptr [esi + 0x56]; 
0x08053f64: call dword ptr [esi + 0x6a]; 
0x0805e322: call dword ptr [esi + 0xc]; 
0x080536a0: call dword ptr [esi - 0x18]; 
0x0804e5f8: call dword ptr [esi - 0x73]; 
0x0804afec: call dword ptr [esi - 1]; 
0x080a2ea2: call dword ptr [esi - 9]; 
0x0804a4ae: call dword ptr [esi]; 
0x0804924a: call dword ptr gs:[0x10]; 
0x08076fe2: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x2eff8; pop ebx; ret; 
0x08077012: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x2f028; pop ebx; ret; 
0x08077a8e: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x2faa0; pop ebx; ret; 
0x08077c46: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x2fc60; pop ebx; ret; 
0x08077c86: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x2fca0; pop ebx; ret; 
0x08077cc2: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x2fcd8; pop ebx; ret; 
0x08099662: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x51678; pop ebx; ret; 
0x080a7e70: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x5fe80; pop ebx; ret; 
0x08076f59: call dword ptr gs:[0x10]; cmp eax, 0xfffff001; jae 0x34310; ret; 
0x08076a03: call dword ptr gs:[0x10]; mov eax, 1; int 0x80; 
0x08077f33: call dword ptr gs:[0x10]; mov ebx, edx; cmp eax, 0xfffff001; jae 0x34310; ret; 
0x08077f66: call dword ptr gs:[0x10]; pop ebx; cmp eax, 0xfffff001; jae 0x34310; ret; 
0x08064be2: call dword ptr gs:[0x10]; pop ebx; pop esi; pop edi; ret; 
0x080995d9: call dword ptr gs:[0x10]; ret; 
0x0804901d: call eax; 
0x08065af0: call eax; add esp, 0x10; add esp, 0x14; pop ebx; pop esi; ret; 
0x080b0798: call eax; add esp, 0x10; add esp, 0xc; ret; 
0x08049cb0: call eax; add esp, 0x10; leave; ret; 
0x0804901d: call eax; add esp, 8; pop ebx; ret; 
0x080815cd: call ebx; 
0x080597d1: call ecx; 
0x080767c6: call edi; 
0x08049cfd: call edx; 
0x08049cfd: call edx; add esp, 0x10; leave; ret; 
0x08078007: call edx; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0805a857: call esi; 
0x08077ff7: call esi; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x080a93b8: cdq; add dword ptr [eax], eax; add bl, bh; mov eax, dword ptr [ebp - 0x2c]; push esi; call dword ptr [eax]; 
0x0805d924: cdq; push 1; push edx; push eax; push esi; call dword ptr [edi + 0x40]; 
0x0805b2f4: cdq; push edx; push eax; push esi; call dword ptr [edi + 0x40]; 
0x0805a409: cdq; push edx; push edi; push esi; call dword ptr [ebp + 0x40]; 
0x080afdd1: cdq; stc; dec dword ptr [ecx - 0x8d3dbbc]; ret 0; 
0x080971c1: clc; add al, 0x75; ret; 
0x0807607f: clc; add al, byte ptr [ebp - 0x39bbf02e]; pop esi; pop edi; ret; 
0x080abcce: clc; add bl, byte ptr [ebx + 0x5e]; pop edi; ret; 
0x080a9c64: clc; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; add dword ptr [eax + ebx*4], -2; call dword ptr [eax - 0x18]; 
0x08060ef1: clc; add ch, bh; call dword ptr [edi - 1]; 
0x0809093b: clc; add ch, byte ptr [ecx]; ret; 
0x0809a0c4: clc; add cl, byte ptr [edi]; inc edx; ret; 
0x08092d2a: clc; add dl, byte ptr [eax + 0x51]; push esi; call dword ptr [ebx + 0x1c]; 
0x080923aa: clc; add dl, byte ptr [eax + 0x51]; push esi; mov dword ptr [ebp - 0x45c], eax; call dword ptr [ebx + 0x1c]; 
0x08090285: clc; add dl, byte ptr [eax + 0x52]; push dword ptr [ebp - 0x8a0]; call dword ptr [ebx + 0x1c]; 
0x080a0574: clc; add dword ptr [ebx - 0x79f0f7bb], ecx; ret; 
0x0805e185: clc; add dword ptr [esi + 0x17], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0805de00: clc; add dword ptr [esi + 0x1c], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0808f15d: clc; add dword ptr [esi - 0x13], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x080652f5: clc; add dword ptr [esi - 0x2c], edi; mov ecx, 0x81; mov edx, 1; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x08057e25: clc; add dword ptr [esi - 0x40], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08057f6d: clc; add dword ptr [esi - 0x52], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0805834d: clc; add dword ptr [esi - 0x57], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08061e57: clc; add dword ptr [esi - 0x5c], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08058ae5: clc; add dword ptr [esi - 0x6f], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x080706b9: clc; add eax, ecx; pop edi; ret; 
0x0808627d: clc; add esi, dword ptr [edi + ecx - 0x7d]; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x080b06e5: clc; add esp, 0x10; mov edi, dword ptr [ebp - 4]; leave; ret; 
0x080a23f9: clc; add esp, 0x60; pop ebx; pop esi; pop edi; ret; 
0x08050a51: clc; and byte ptr [ebp + ebp - 0x77], dh; ret 0xc083; 
0x08079036: clc; and ch, bh; call dword ptr [eax - 0x18]; 
0x0805ae91: clc; call dword ptr gs:[0x10]; 
0x08050ad7: clc; cld; call dword ptr [eax - 0x18]; 
0x080531c5: clc; cld; call dword ptr [eax - 0x18]; sar byte ptr [esi - 1], cl; jmp dword ptr [esi - 0x70]; 
0x08050bcc: clc; cld; call dword ptr [eax - 0x73]; 
0x08054534: clc; cld; dec dword ptr [ecx - 0x7872af05]; and al, 0xf9; cld; call dword ptr [eax - 0x18]; 
0x08067233: clc; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x080671ef: clc; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x080a395f: clc; dec dword ptr [edi]; inc esp; ret 0x8dc3; 
0x08067012: clc; dec dword ptr [edi]; inc esp; ret 0xc483; 
0x08067dda: clc; inc dword ptr [eax - 0x6d72fd1b]; ror ch, 0xf8; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x08067fe1: clc; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x080b04a5: clc; mov eax, 3; mov edi, dword ptr [ebp - 4]; leave; ret; 
0x08068447: clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x080b0491: clc; mov edi, dword ptr [ebp - 4]; leave; ret; 
0x080b0532: clc; mov edi, dword ptr [ebp - 4]; mov ebp, dword ptr [ebp]; mov esp, ecx; pop ecx; jmp ecx; 
0x08099719: clc; pop ds; mov dword ptr [esp + 0xc], eax; mov eax, 0x8c; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0804b3c1: clc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x08050b61: clc; pop ebx; pop esi; pop edi; ret; 
0x08049ee9: clc; pop ecx; pop ebx; pop ebp; lea esp, [ecx - 4]; ret; 
0x0806a32f: clc; pop edi; ret; 
0x08058497: clc; pop esi; pop edi; pop ebp; ret; 
0x0805f041: clc; push dword ptr [ebp - 0x3b]; add esp, 4; pop ebx; pop esi; ret; 
0x0809953b: clc; push dword ptr [esi + edi - 0x77]; ret 0xe283; 
0x08060aa6: clc; push eax; jbe 0x18ab0; ret; 
0x080abccc: clc; sar eax, 2; pop ebx; pop esi; pop edi; ret; 
0x08098357: clc; sub eax, 0x10; pop edi; ret; 
0x080812dd: clc; xor al, 0xfd; call dword ptr [eax - 0x18]; 
0x0808b7d9: clc; xor byte ptr [edi], cl; xchg eax, ebp; ret 0xf883; 
0x0805f809: cld; add byte ptr [eax], al; add bh, al; ret; 
0x080769ff: cld; add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; mov eax, 1; int 0x80; 
0x080703d0: cld; add dword ptr [eax], eax; add dh, dh; ret 0xf40; 
0x08060a16: cld; add eax, dword ptr [eax]; add byte ptr [esi + 4], dh; ret; 
0x0804b83c: cld; call dword ptr [eax + 0x52]; 
0x0804fd1d: cld; call dword ptr [eax + 0x55]; 
0x080531b1: cld; call dword ptr [eax + 0x68]; 
0x080a9051: cld; call dword ptr [eax + 0x6a]; 
0x08049dcb: cld; call dword ptr [eax - 0x18]; 
0x0805d5d5: cld; call dword ptr [eax - 0x18]; ret; 
0x080531c6: cld; call dword ptr [eax - 0x18]; sar byte ptr [esi - 1], cl; jmp dword ptr [esi - 0x70]; 
0x0804c26b: cld; call dword ptr [eax - 0x73]; 
0x080a732f: cld; call dword ptr [eax - 0x73]; adc dword ptr [eax + 0x5000001a], -0x18; ret 0xf58c; 
0x0804b0b9: cld; call dword ptr [eax - 1]; 
0x0804b81e: cld; call dword ptr [edx + 0x50]; 
0x0805afd9: cld; call dword ptr [edx - 0x18]; 
0x080591c4: cld; cld; call dword ptr [eax - 0x18]; 
0x0805d5d4: cld; cld; call dword ptr [eax - 0x18]; ret; 
0x080591b1: cld; cld; call dword ptr [eax - 0x73]; 
0x0806b7a1: cld; cmp ecx, ebx; mov eax, 0; jne 0x239d0; pop ebx; ret; 
0x0806bdef: cld; cmp ecx, ebx; mov eax, 0; jne 0x24570; pop ebx; ret; 
0x0809d3ca: cld; dec dword ptr [ebp - 0x1c77b7d]; call dword ptr [eax + 0x6a]; 
0x0809d3ca: cld; dec dword ptr [ebp - 0x1c77b7d]; call dword ptr [eax + 0x6a]; add byte ptr [esi + 0x6a], dl; or al, 0xe8; ret; 
0x08088778: cld; dec dword ptr [ebp - 0x2bddb7d]; call dword ptr [eax - 0x73]; 
0x0807fc66: cld; dec dword ptr [ebp - 0x2c79f7d]; call dword ptr [eax + 0x68]; 
0x0807cac7: cld; dec dword ptr [ebp - 0x2d2677d]; call dword ptr [eax - 0x73]; 
0x08092188: cld; dec dword ptr [ebp - 0x3068b79]; call dword ptr [eax + 0x68]; 
0x080b2c4f: cld; dec dword ptr [ebx + 0x3302454]; push 8; mov dword ptr [esp], ebp; call edi; 
0x0808533e: cld; dec dword ptr [ebx - 0x72cbdba4]; and dword ptr [eax + 0x36], 0xfffffffd; call dword ptr [eax + 0x68]; 
0x0808531b: cld; dec dword ptr [ebx - 0x72cbdba4]; and dword ptr [eax + 0x36], 0xfffffffd; call dword ptr [eax - 0x73]; 
0x080853be: cld; dec dword ptr [ebx - 0x72cbdba4]; and dword ptr [eax], 0x36; std; call dword ptr [eax - 0x73]; 
0x08083f7f: cld; dec dword ptr [ebx - 0x72cbdba4]; and dword ptr [eax], 0x37; std; call dword ptr [eax + 0x68]; 
0x08083fa2: cld; dec dword ptr [ebx - 0x72cbdba4]; and dword ptr [eax], 0x37; std; call dword ptr [eax - 0x73]; 
0x08083f5c: cld; dec dword ptr [ebx - 0x72cbdba4]; xor dword ptr [eax + 0x35], 0xfffffffd; call dword ptr [eax - 0x73]; 
0x080802c1: cld; dec dword ptr [ebx - 0x72cfdba4]; add dword ptr [esi + esi], -3; call dword ptr [eax - 0x73]; 
0x0807f0ec: cld; dec dword ptr [ebx - 0x72cfdba4]; add eax, 0x38; std; call dword ptr [eax + 0x68]; 
0x0807f0c9: cld; dec dword ptr [ebx - 0x72cfdba4]; add eax, 0x38; std; call dword ptr [eax - 0x73]; 
0x08082b7c: cld; dec dword ptr [ebx - 0x72cfdba4]; and dword ptr [eax + 0x37], 0xfffffffd; call dword ptr [eax + 0x68]; 
0x08082b9f: cld; dec dword ptr [ebx - 0x72cfdba4]; and dword ptr [eax + 0x37], 0xfffffffd; call dword ptr [eax - 0x73]; 
0x0808029e: cld; dec dword ptr [ebx - 0x72cfdba4]; and dword ptr [eax], 0x38; std; call dword ptr [eax + 0x68]; 
0x08081e46: cld; dec dword ptr [ebx - 0x72cfdba4]; or esp, 0x35; std; call dword ptr [eax - 0x73]; 
0x08083407: cld; dec dword ptr [ebx - 0x72d3dba4]; add dword ptr [eax + 0x37], -3; call dword ptr [eax + 0x68]; 
0x0808342a: cld; dec dword ptr [ebx - 0x72d3dba4]; add dword ptr [eax + 0x37], -3; call dword ptr [eax - 0x73]; 
0x080847fd: cld; dec dword ptr [ebx - 0x72d3dba4]; and eax, 0x36; std; call dword ptr [eax + 0x68]; 
0x080847da: cld; dec dword ptr [ebx - 0x72d3dba4]; and eax, 0x36; std; call dword ptr [eax - 0x73]; 
0x08081259: cld; dec dword ptr [ebx - 0x72d7dba4]; sub eax, 0x35; std; call dword ptr [eax - 0x73]; 
0x080545f8: cld; dec dword ptr [ecx + 0x6ee850fb]; imul eax, dword ptr [eax], 0x74878d00; stc; cld; call dword ptr [eax + 0x68]; 
0x08054535: cld; dec dword ptr [ecx - 0x7872af05]; and al, 0xf9; cld; call dword ptr [eax - 0x18]; 
0x080531bd: cld; dec dword ptr [ecx - 0x7872af05]; hlt; clc; cld; call dword ptr [eax - 0x18]; 
0x0809091a: cld; idiv bh; dec dword ptr [edi]; xchg eax, ebp; ret; 
0x08088887: cld; inc dword ptr [0x5c777]; mov eax, 0xfffffff0; add eax, dword ptr gs:[0]; ret; 
0x08088867: cld; inc dword ptr [0x5c797]; mov eax, 0xfffffff4; add eax, dword ptr gs:[0]; ret; 
0x08088847: cld; inc dword ptr [0x5c7b7]; mov eax, 0xfffffff8; add eax, dword ptr gs:[0]; ret; 
0x08085a87: cld; inc dword ptr [0x5f577]; mov eax, dword ptr [eax + 0x1968]; ret; 
0x0807cc07: cld; inc dword ptr [0x683f7]; mov eax, dword ptr [eax + 0x1fa8]; ret; 
0x0807cbe7: cld; inc dword ptr [0x68417]; mov eax, dword ptr [eax + 0x1fa0]; ret; 
0x0807aee7: cld; inc dword ptr [0x6a117]; lea eax, [eax + 0xa60]; ret; 
0x080a3a1f: cld; inc dword ptr [ebx + 0x478910c4]; add al, 0x89; ret 0xc085; 
0x0807cbc9: cld; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x080966d0: cld; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x08060ee9: cld; inc dword ptr [ebx - 0x72aff314]; cmp eax, 0; std; call dword ptr [edi - 1]; 
0x080a3c47: cld; inc dword ptr [ebx - 0xf76ef3c]; pop ebx; pop esi; pop edi; ret; 
0x080985b7: cld; inc dword ptr [ecx + 0x4ca47c2]; add byte ptr [ebx - 0x39], dl; ret; 
0x08086dd6: cld; inc dword ptr [ecx + 0x5e228c6]; add byte ptr [ebx - 0x77], dl; ret; 
0x0807e268: cld; inc dword ptr [ecx + 0x66d96c6]; add byte ptr [ebx - 0x77], dl; ret; 
0x0805764f: cld; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x0804a95e: cld; inc dword ptr [ecx]; idiv dword ptr [esi]; jmp edi; 
0x0807cae3: cld; jmp dword ptr [esi - 0x70]; 
0x0804e370: cld; jmp dword ptr [esi - 0x77]; 
0x08083fa0: cld; jo 0x3bf9f; dec dword ptr [ebx - 0x72cbdba4]; and dword ptr [eax], 0x37; std; call dword ptr [eax - 0x73]; 
0x08049e5b: cld; leave; ret; 
0x08067fe4: cld; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x080b0535: cld; mov ebp, dword ptr [ebp]; mov esp, ecx; pop ecx; jmp ecx; 
0x08065e04: cld; or eax, 0x978dfffd; sbb esi, edi; cld; call dword ptr [eax - 0x73]; 
0x08074f89: cld; pop edi; ret; 
0x0805081d: cld; push dword ptr [edi]; push dword ptr [esp + 0x4c]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x08049eef: cld; ret; 
0x08050802: cld; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x080b2e60: cld; sub edi, ebx; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0807ffe1: cli; add al, 0xf; test byte ptr [ebx - 0x7cffffff], ah; rol byte ptr [ecx], 0x83; ret 0x8901; 
0x0804ec46: cli; add al, byte ptr [ecx - 0xccc1e]; inc dword ptr [ecx]; ret 0xd089; 
0x0805740a: cli; add byte ptr [eax], al; add byte ptr [ebx - 0xacfb14], al; je 0xf439; cmp al, 0x56; call dword ptr [edx + 0x1c]; 
0x08096fe4: cli; add ch, bl; ljmp 0x5bff:0xffffffb8; ret; 
0x0805d30a: cli; add cl, byte ptr [edi]; xchg eax, esi; ret 0x540a; 
0x0807e080: cli; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; add dword ptr [edx], 0x2e; std; call dword ptr [eax - 0x18]; 
0x08080004: cli; add ecx, dword ptr [edi]; xchg byte ptr [edx - 0x7fffffff], bh; jns 0x38016; or byte ptr [edi], 0x87; ret; 
0x08076828: cli; add ecx, dword ptr [edi]; xchg eax, esi; ret 0xc085; 
0x08076874: cli; add ecx, dword ptr [edi]; xchg eax, esi; ret 0xd284; 
0x0805ad53: cli; and eax, 0x7880e175; add dword ptr [ebx + 0x75], esi; fild dword ptr [eax - 0x76da2b83]; ret 0x5b74; 
0x080881f1: cli; call dword ptr [eax - 0x73]; 
0x0808650b: cli; call dword ptr [eax - 1]; 
0x080864b7: cli; call dword ptr [esi + 0x31]; 
0x08066a88: cli; call dword ptr gs:[0x10]; 
0x0805764e: cli; cld; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x080a37ef: cli; dec dword ptr [ebp - 0x1b43f7d]; call dword ptr [eax - 0x73]; 
0x080a1661: cli; dec dword ptr [ebp - 0x1bf5379]; call dword ptr [eax - 0x75]; 
0x0809bf3d: cli; dec dword ptr [ebp - 0x1c3737d]; call dword ptr [eax - 0x73]; 
0x0809ca60: cli; dec dword ptr [ebp - 0x1c47b7d]; call dword ptr [eax + 0x6a]; 
0x0809bf1e: cli; dec dword ptr [ebp - 0x2d59f7d]; call dword ptr [eax - 0x73]; 
0x080aa6f7: cli; dec dword ptr [ebx - 0x137c33a3]; or byte ptr [ebp - 0x1676f7d], cl; call dword ptr [eax + 0x6a]; 
0x080a233b: cli; dec dword ptr [ebx - 0x23b63]; dec dword ptr [ebp - 0x1b72b7d]; call dword ptr [eax + 0x6a]; 
0x080a862f: cli; dec dword ptr [ebx - 0x72f3dba4]; sub dword ptr [eax - 0x6a], -2; call dword ptr [eax - 0x73]; 
0x08088c00: cli; dec dword ptr [edi]; inc esp; ret 0x4489; 
0x080a2206: cli; dec dword ptr [edi]; test byte ptr [ecx], al; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret 0x470f; 
0x080a80f7: cli; inc dword ptr [0x3cf07]; mov eax, 0x80e6f60; mov eax, dword ptr [eax]; ret; 
0x0809f50a: cli; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0809d3c1: cli; inc dword ptr [ebx - 0x17adf314]; xchg eax, esp; xchg ah, bh; dec dword ptr [ebp - 0x1c77b7d]; call dword ptr [eax + 0x6a]; 
0x080a7931: cli; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x080a3ab2: cli; inc dword ptr [ecx + 0x4154cc6]; add byte ptr [ebp - 0x72efdbb4], cl; sahf; adc cl, byte ptr [esi + edi*8 - 1]; call dword ptr gs:[0x10]; 
0x0809ef9e: cli; inc dword ptr [ecx + 0x46060c3]; add byte ptr [ebx - 0x38ebdb8c], cl; ret 0; 
0x080a90a5: cli; inc edi; ret 0x5a00; 
0x080afd9b: cli; int 0x80; 
0x0809ef85: cli; jmp dword ptr [esi - 0x70]; 
0x080a1f43: cli; mov ebx, dword ptr [ebp - 0x248]; lea ecx, [ebp - 0x218]; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x08068024: cli; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x080604a2: cli; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0805c82b: cli; pop edi; pop ebp; mov eax, edx; ret; 
0x08097f92: cli; pop edi; ret; 
0x080a4c6d: cli; std; jbe 0x5cc80; add esp, 8; pop ebx; ret; 
0x080afda2: cli; syscall; 
0x08098a61: cmc; and ch, 0xf; je 0x50a80; add eax, 2; ret; 
0x080b327e: cmc; inc ecx; std; call dword ptr [eax - 0x18]; 
0x080b327e: cmc; inc ecx; std; call dword ptr [eax - 0x18]; sbb byte ptr [esi - 7], bh; jmp dword ptr [esi - 0x70]; 
0x080684f7: cmc; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x08097f52: cmc; pop edi; ret; 
0x0806b4f7: cmc; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x08071cbf: cmova eax, edx; sub eax, esi; pop ebx; pop esi; ret; 
0x0806082e: cmovae eax, dword ptr [edx + 8]; sub eax, dword ptr [edx + 0xc]; ret; 
0x0809923f: cmovae ecx, eax; mov eax, 0xdc; mov edi, ecx; call dword ptr gs:[0x10]; 
0x080752b5: cmovb eax, ecx; ret; 
0x0806086f: cmovbe edx, eax; xor eax, eax; cmp edx, dword ptr [esp + 4]; setae al; ret; 
0x08067014: cmove eax, edx; add esp, 0x18; pop ebx; ret; 
0x080671f1: cmove eax, edx; ret; 
0x08076083: cmove eax, esi; pop esi; pop edi; ret; 
0x0805e277: cmovg eax, ecx; test edx, edx; jne 0x16270; ret; 
0x08096407: cmovg eax, ecx; test edx, edx; jne 0x4e400; ret; 
0x080b02c7: cmovne eax, dword ptr [esp + 0x1c]; add esp, 0x28; pop ebx; ret; 
0x0805a9d7: cmovne eax, ecx; ret; 
0x08060abd: cmovne eax, edx; mov dword ptr [ecx + 0x1870], eax; ret; 
0x080964b5: cmovne eax, edx; mov dword ptr [esi + 0x3c], eax; add esp, 4; pop ebx; pop esi; ret; 
0x0805e6c1: cmovne eax, edx; mov dword ptr [esi], eax; add esp, 4; pop ebx; pop esi; ret; 
0x08067235: cmovne eax, edx; ret; 
0x08088b3d: cmovne edx, eax; mov esi, 8; mov eax, 0xae; call dword ptr gs:[0x10]; 
0x0807ec12: cmovs eax, edx; ret; 
0x080a7e68: cmovs edx, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x0807484e: cmp ah, byte ptr [ebx - 0x35]; add cl, byte ptr [edi]; xchg eax, esp; ret 0x920f; 
0x080747dc: cmp ah, byte ptr [ebx - 0x37]; cmp al, byte ptr [ebx - 0x7bf0ef07]; pop ss; add dword ptr [eax], eax; add byte ptr [ebx - 0x76f3dbbc], cl; ret 0xe283; 
0x08089532: cmp al, 0x1a; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08076976: cmp al, 0x1b; std; call dword ptr [eax - 0x18]; 
0x0804ae38: cmp al, 0x24; ret; 
0x080b0f0a: cmp al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x080593b0: cmp al, 0x50; push dword ptr [esp + 0x24]; call dword ptr [ebx + 0x48]; 
0x0805a84c: cmp al, 0x51; lea ecx, [edi + 0x28]; push ecx; mov eax, dword ptr [esp + 0x30]; push eax; call esi; 
0x0805a94b: cmp al, 0x51; lea ecx, [edi + 4]; push ecx; mov eax, dword ptr [esp + 0x30]; push eax; call esi; 
0x08057415: cmp al, 0x56; call dword ptr [edx + 0x1c]; 
0x0805c651: cmp al, 0x57; call dword ptr [eax + 0x20]; 
0x08049855: cmp al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x080826b6: cmp al, 0x6a; add byte ptr [edx], ch; push 0; push dword ptr [esp + 0x60]; push dword ptr [esp + 0x60]; call edi; 
0x0809c065: cmp al, 0x6f; push cs; or bh, al; ret 0x4da0; 
0x0805ecc2: cmp al, 0x80; add byte ptr [eax], al; add byte ptr [ebx - 0x3f7acbc0], cl; jne 0x16cc0; ret; 
0x080964ba: cmp al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x08086184: cmp al, 0x83; ret; 
0x08058945: cmp al, 0x89; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x08081184: cmp al, 0x89; ret 0xf989; 
0x08049fb4: cmp al, 0x8b; pop esi; or bh, dh; ret; 
0x0809e218: cmp al, 0x8d; sbb byte ptr [eax + 0x3e], 0xfe; call dword ptr [eax - 0x18]; 
0x080af035: cmp al, 0xb8; add eax, 0x5b000000; pop esi; pop edi; pop ebp; ret; 
0x080acd60: cmp al, 0xe3; stc; dec dword ptr [ebp - 0x1657b7d]; call dword ptr [eax + 0x6a]; 
0x0804dbc4: cmp al, 0xe9; ret 0xfffe; 
0x0805764d: cmp al, 0xfa; cld; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x080a8983: cmp al, 0xfc; call dword ptr [eax - 0x73]; 
0x08054533: cmp al, 0xfc; dec dword ptr [ecx - 0x7872af05]; and al, 0xf9; cld; call dword ptr [eax - 0x18]; 
0x08086dd5: cmp al, 0xfc; inc dword ptr [ecx + 0x5e228c6]; add byte ptr [ebx - 0x77], dl; ret; 
0x0809d290: cmp al, 0xfe; call dword ptr [eax - 0x39]; 
0x08099fdc: cmp al, 0xfe; call dword ptr [eax - 0x73]; 
0x0809d056: cmp al, 0xfe; call dword ptr [ebp + 0x56]; 
0x080b09d0: cmp al, 4; jne 0x1736; mov eax, 8; add esp, 8; pop ebx; ret; 
0x080a33e5: cmp al, byte ptr [eax]; jne 0x5b3f8; mov eax, 0x80e6cc8; mov edx, dword ptr [eax]; mov eax, edx; ret; 
0x08057de5: cmp al, byte ptr [ebx - 0x776fed5]; pop ebx; pop esi; pop edi; ret; 
0x080747df: cmp al, byte ptr [ebx - 0x7bf0ef07]; pop ss; add dword ptr [eax], eax; add byte ptr [ebx - 0x76f3dbbc], cl; ret 0xe283; 
0x08088cdc: cmp al, byte ptr [ecx + 0x90c4]; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x08074cbd: cmp al, byte ptr [edx - 1]; jne 0x2ce6c; pop esi; xor eax, eax; pop ebx; ret; 
0x0806b9bb: cmp al, byte ptr [edx - 1]; mov eax, 0; jne 0x239f0; pop ebx; ret; 
0x0806bd71: cmp al, byte ptr [edx - 1]; mov eax, 0; jne 0x24586; pop ebx; ret; 
0x080b2b35: cmp al, ch; and eax, 0xc7fffb2f; ret 0; 
0x08070fb5: cmp al, dh; pop edi; ret; 
0x0809598e: cmp bh, 0xff; dec dword ptr [ebp + 0xb6]; add bh, al; ret; 
0x08095b41: cmp bh, bl; jmp dword ptr [esi - 0x70]; 
0x0808703e: cmp bh, ch; call dword ptr [eax - 0x18]; 
0x0808755c: cmp bh, ch; call dword ptr [eax - 0x73]; 
0x08087563: cmp bh, ch; ljmp [eax + 0x1b]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; and dword ptr [edx + 0x3a], 0xfffffffd; call dword ptr [eax - 0x18]; 
0x0809b423: cmp bh, dh; call dword ptr [eax - 0x18]; 
0x08088bff: cmp bh, dl; dec dword ptr [edi]; inc esp; ret 0x4489; 
0x080b0a3f: cmp bl, 0x30; jne 0x68a50; mov eax, dword ptr [edx + 8]; add esp, 8; pop ebx; ret; 
0x080b0a9f: cmp bl, 0x30; jne 0x68ab0; mov eax, dword ptr [edx + 8]; add esp, 8; pop ebx; ret; 
0x08054f65: cmp bl, 0xff; call dword ptr [eax + 0x51]; 
0x08055585: cmp bl, 0xff; call dword ptr [ebx + 0xf]; 
0x0805695d: cmp bl, 0xff; call dword ptr [ebx - 0x77]; 
0x080556e0: cmp bl, 0xff; call dword ptr [ecx + 0x6a]; 
0x0805674f: cmp bl, 0xff; call dword ptr [ecx - 0x18]; 
0x08055602: cmp bl, 0xff; call dword ptr [edx + 0x51]; 
0x08054c81: cmp bl, 0xff; call dword ptr [edx - 1]; 
0x080a0a8a: cmp bl, 0xff; dec dword ptr [ebx - 0x3f7a73bb]; jne 0x58610; mov dword ptr [ebp - 0x60], edx; mov eax, dword ptr [ebp - 0x54]; call eax; 
0x080acdf0: cmp bl, 0xff; inc dword ptr [eax]; add byte ptr [eax], al; add byte ptr [ebp - 0x44b7b], cl; call dword ptr [ecx + 0x6a]; 
0x080925ee: cmp bl, 0xff; jmp dword ptr [ebp - 0x39]; 
0x08092245: cmp bl, 0xff; jmp dword ptr [ebp - 0x75]; 
0x08055ef3: cmp bl, 0xff; lcall [eax + 0xf]; xchg eax, esp; ret 0xff52; 
0x08056bfe: cmp bl, 0xff; ljmp [ecx]; ret 0xda39; 
0x08095d82: cmp bl, bh; jmp dword ptr [esi - 0x70]; 
0x0804fcae: cmp byte ptr [0x83000000], cl; ret 0xc702; 
0x08071a1f: cmp byte ptr [eax + eax + 0x408d0000], 0xf; pop edi; ret; 
0x08070fe5: cmp byte ptr [eax], ah; pop edi; ret; 
0x08075cf3: cmp byte ptr [eax], al; add byte ptr [ebp - 0x2e5b77d], cl; call dword ptr [eax - 0x73]; 
0x08070fd5: cmp byte ptr [eax], dl; pop edi; ret; 
0x0805f13c: cmp byte ptr [ebp + 0x2c840fff], al; add dword ptr [eax], eax; add bh, al; ret 0x5f80; 
0x0809e274: cmp byte ptr [ebp - 0x2d7697d], cl; call dword ptr [eax + 0x6a]; 
0x0805f804: cmp byte ptr [ebp - 0x37bf001], al; add byte ptr [eax], al; add bh, al; ret; 
0x0809588b: cmp byte ptr [ebp - 0x6377f025], al; add byte ptr [eax], al; add byte ptr [ebx + 0x949e], cl; add bh, al; ret 0x5f80; 
0x0805e917: cmp byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x08060ea4: cmp byte ptr [ebx + 0x5e], bl; ret; 
0x0805cbeb: cmp byte ptr [ebx + 0x94be], cl; add bh, al; ret 0x5f80; 
0x08049fb1: cmp byte ptr [ecx + 0x5e8b3c56], cl; or bh, dh; ret; 
0x080abe97: cmp byte ptr [ecx - 0x4a343], cl; dec dword ptr [ebp - 0x1655345]; jmp dword ptr [ebp - 0x39]; 
0x08083793: cmp byte ptr [ecx - 0x769fdbbc], cl; ret 0x44c7; 
0x08059c44: cmp byte ptr [ecx - 0x76bfdbbc], cl; ret; 
0x0809e5d9: cmp byte ptr [edi], 0xfe; call dword ptr [eax - 0x18]; 
0x0806bb38: cmp byte ptr [edi], dl; ret 0x2c73; 
0x0806c4f9: cmp byte ptr [edi], dl; ret 0x3273; 
0x0806bb23: cmp byte ptr [edi], dl; ret 0x3e73; 
0x0806c4df: cmp byte ptr [edi], dl; ret 0x4c73; 
0x0806bb0e: cmp byte ptr [edi], dl; ret 0x5073; 
0x0806baf9: cmp byte ptr [edi], dl; ret 0x6273; 
0x0806c4c5: cmp byte ptr [edi], dl; ret 0x6673; 
0x0806a058: cmp byte ptr [edi], dl; ret 0x830f; 
0x08071bdc: cmp byte ptr [edx + 0xb], 0; je 0x29c62; mov eax, 0xc; pop edi; ret; 
0x08071c14: cmp byte ptr [edx + 0xf], 0; je 0x29c76; mov eax, 0x10; pop edi; ret; 
0x0808f9d9: cmp byte ptr [edx - 2], 0xff; jmp dword ptr [esi - 0x70]; 
0x080a33e4: cmp byte ptr [edx], 0; jne 0x5b3f8; mov eax, 0x80e6cc8; mov edx, dword ptr [eax]; mov eax, edx; ret; 
0x0807ae64: cmp byte ptr [edx], al; std; dec dword ptr [ebp - 0x2d59f7d]; call dword ptr [eax - 0x73]; 
0x0805ebf4: cmp byte ptr [edx], ch; push edi; push esi; push ebp; call dword ptr [ebx + 0x24]; 
0x0807fc64: cmp byte ptr [esp + edi*8 + 0x60838dff], dh; cmp ch, bh; call dword ptr [eax + 0x68]; 
0x0807f087: cmp ch, bh; call dword ptr [eax + 0x68]; 
0x08085ac8: cmp ch, bh; call dword ptr [eax - 0x18]; 
0x0807ef87: cmp ch, bh; call dword ptr [eax - 0x73]; 
0x0806b91a: cmp ch, bh; mov eax, 0; jne 0x239f0; pop ebx; ret; 
0x0806bcc4: cmp ch, bh; mov eax, 0; jne 0x24586; pop ebx; ret; 
0x08075434: cmp cl, 0; je 0x2d43a; inc eax; sub eax, dword ptr [esp + 4]; ret; 
0x080ae3ef: cmp cl, 0x20; jne 0x66410; mov eax, dword ptr [edx + 0x54]; add esp, 8; pop ebx; ret; 
0x0806b85e: cmp cl, byte ptr [edx - 1]; mov eax, 0; jne 0x239f0; pop ebx; ret; 
0x0806bc28: cmp cl, byte ptr [edx - 1]; mov eax, 0; jne 0x24586; pop ebx; ret; 
0x0806a374: cmp cl, byte ptr [edx]; je 0x22390; mov eax, 1; ja 0x22381; neg eax; ret; 
0x08074bb9: cmp cl, byte ptr [edx]; jne 0x2cbc1; xor eax, eax; pop ebx; ret; 
0x0804a97b: cmp cl, dh; cld; call dword ptr [eax - 0x18]; 
0x08067f88: cmp cl, dl; je 0x1ff8d; inc eax; pop edi; ret; 
0x0806c583: cmp cx, bx; pop ebx; mov eax, 1; ja 0x24590; neg eax; ret; 
0x080b2ee5: cmp dh, 0xff; dec dword ptr [ecx - 0x3f7a55f4]; je 0x6aefa; mov dword ptr [esp + 8], edx; call eax; 
0x0809d3cf: cmp dh, bh; call dword ptr [eax + 0x6a]; 
0x0809d3cf: cmp dh, bh; call dword ptr [eax + 0x6a]; add byte ptr [esi + 0x6a], dl; or al, 0xe8; ret; 
0x0809bec6: cmp dh, bh; dec dword ptr [ebp - 0x1c7536d]; dec dword ptr [edi]; inc esp; ret 0x95e9; 
0x0809becc: cmp dh, bh; dec dword ptr [edi]; inc esp; ret 0x95e9; 
0x0809bb00: cmp dh, bh; inc edi; ret 0xffe0; 
0x080985a3: cmp dh, cl; jne 0x505aa; lea eax, [esi + 3]; pop esi; pop edi; ret; 
0x0806b477: cmp dh, dh; ret 0x7504; 
0x0809c24c: cmp dword ptr [0x3911430f], eax; ret 0x430f; 
0x08076023: cmp dword ptr [eax + 0x1a], -3; call dword ptr [eax - 0x18]; 
0x0807ae2e: cmp dword ptr [eax + 0x2a], -3; call dword ptr [eax - 0x73]; 
0x08098645: cmp dword ptr [eax + 8], edx; jne 0x50620; lea ebx, [eax + 8]; mov eax, ebx; pop ebx; ret; 
0x080ad3a9: cmp dword ptr [eax - 0x63], -2; call dword ptr [eax - 0x73]; 
0x080ab365: cmp dword ptr [eax - 0x67], -2; call dword ptr [eax - 0x73]; 
0x0804a97a: cmp dword ptr [eax], -0xf; cld; call dword ptr [eax - 0x18]; 
0x08049eab: cmp dword ptr [eax], 0; add byte ptr [eax - 0x73], dl; sub dword ptr [eax], 0; add byte ptr [eax - 0x73], dl; cmp dword ptr [ecx - 0x10], -4; call dword ptr [eax - 0x18]; 
0x080a232b: cmp dword ptr [ebp + 0x48], -2; call dword ptr [eax - 0x73]; 
0x0805131a: cmp dword ptr [ebp + 0x4f0f101c], ecx; ret; 
0x08076975: cmp dword ptr [ebx + ebx], -3; call dword ptr [eax - 0x18]; 
0x0807a274: cmp dword ptr [ebx + ecx - 0x7c730000], 0x3f; sub ch, bh; call dword ptr [eax - 0x18]; 
0x080793b7: cmp dword ptr [ebx - 0xd], -4; call dword ptr [eax - 0x73]; 
0x080b0844: cmp dword ptr [ecx + 8], edx; ja 0x6884b; sbb eax, eax; ret; 
0x08049eb9: cmp dword ptr [ecx - 0x10], -4; call dword ptr [eax - 0x18]; 
0x080795c4: cmp dword ptr [ecx], 0x21; std; call dword ptr [eax - 0x18]; 
0x080a2582: cmp dword ptr [ecx], 0x89117218; ret 0xca39; 
0x08070ff6: cmp dword ptr [ecx], eax; clc; pop edi; ret; 
0x0804db55: cmp dword ptr [ecx], edi; int 0xf; inc edi; ret 0xc189; 
0x080795c5: cmp dword ptr [ecx], esp; std; call dword ptr [eax - 0x18]; 
0x080a81c7: cmp dword ptr [edi - 0x18], edx; ret 0xff60; 
0x08050bda: cmp dword ptr [edi], -8; cld; call dword ptr [eax - 0x18]; 
0x0807a27a: cmp dword ptr [edi], 0x28; std; call dword ptr [eax - 0x18]; 
0x0808e925: cmp dword ptr [edi], ecx; test byte ptr [edx + eax], bl; add byte ptr [ebx + 0xf0c2454], cl; mov esi, 0xc7542444; ret 0xfff0; 
0x080887f1: cmp dword ptr [edi], esi; je 0x40800; pop ebx; pop esi; pop edi; ret; 
0x0805a9d4: cmp dword ptr [edx + 0x24], eax; cmovne eax, ecx; ret; 
0x0806082b: cmp dword ptr [edx + 8], eax; cmovae eax, dword ptr [edx + 8]; sub eax, dword ptr [edx + 0xc]; ret; 
0x08098b46: cmp dword ptr [edx + eax*4 + 4], 0; lea ecx, [eax + 1]; jne 0x50b28; mov eax, ecx; ret; 
0x0805764c: cmp dword ptr [edx + edi*8], -4; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x080a51d8: cmp dword ptr [esi + 0x4d], -2; call dword ptr [eax + 0x56]; 
0x080711c6: cmp dword ptr [esi + 0xf], esp; xlatb; ret 0x498d; 
0x080802db: cmp dword ptr [esi], 0x34; std; call dword ptr [eax - 0x18]; 
0x080887f0: cmp dword ptr gs:[edi], esi; je 0x40800; pop ebx; pop esi; pop edi; ret; 
0x08067011: cmp eax, -1; cmove eax, edx; add esp, 0x18; pop ebx; ret; 
0x080a395e: cmp eax, -1; cmove eax, edx; ret; 
0x0805f040: cmp eax, -1; jne 0x1700a; add esp, 4; pop ebx; pop esi; ret; 
0x08060ef0: cmp eax, 0; std; call dword ptr [edi - 1]; 
0x08079035: cmp eax, 0x20; std; call dword ptr [eax - 0x18]; 
0x080812dc: cmp eax, 0x34; std; call dword ptr [eax - 0x18]; 
0x08060a15: cmp eax, 0x3fc; jbe 0x18a20; ret; 
0x0809e582: cmp eax, 0x440ffffe; ret 0x3980; 
0x08060aa5: cmp eax, 0x50; jbe 0x18ab0; ret; 
0x0807ae3b: cmp eax, 0x54838d50; sub ch, bh; call dword ptr [eax - 0x18]; 
0x080aad1e: cmp eax, 0x5b2cc483; pop esi; pop edi; pop ebp; ret; 
0x080608e5: cmp eax, 0x80000; jbe 0x188f0; ret; 
0x0809e57c: cmp eax, 0x968dfffe; test eax, 0xffffe3d; inc esp; ret 0x3980; 
0x08071532: cmp eax, 0xc1d70f66; bsf eax, eax; lea eax, [edx + eax + 0x30]; ret; 
0x08060a55: cmp eax, 0xffff; jbe 0x18a60; ret; 
0x08076fe9: cmp eax, 0xfffff000; ja 0x2eff8; pop ebx; ret; 
0x08077019: cmp eax, 0xfffff000; ja 0x2f028; pop ebx; ret; 
0x08077a95: cmp eax, 0xfffff000; ja 0x2faa0; pop ebx; ret; 
0x08077b97: cmp eax, 0xfffff000; ja 0x2fbb0; add esp, 4; pop ebx; pop esi; ret; 
0x08077bfc: cmp eax, 0xfffff000; ja 0x2fc20; add esp, 4; pop ebx; pop esi; ret; 
0x08077c4d: cmp eax, 0xfffff000; ja 0x2fc60; pop ebx; ret; 
0x08077c8d: cmp eax, 0xfffff000; ja 0x2fca0; pop ebx; ret; 
0x08077cc9: cmp eax, 0xfffff000; ja 0x2fcd8; pop ebx; ret; 
0x08099669: cmp eax, 0xfffff000; ja 0x51678; pop ebx; ret; 
0x0809981a: cmp eax, 0xfffff000; ja 0x51840; add esp, 4; pop ebx; pop esi; ret; 
0x08099886: cmp eax, 0xfffff000; ja 0x518a0; add esp, 4; pop ebx; pop esi; ret; 
0x080a7e77: cmp eax, 0xfffff000; ja 0x5fe80; pop ebx; ret; 
0x080a7ed7: cmp eax, 0xfffff000; ja 0x5fee8; pop ebx; pop esi; pop edi; ret; 
0x08076f60: cmp eax, 0xfffff001; jae 0x34310; ret; 
0x08075aeb: cmp eax, 1; je 0x2db00; cmp eax, 2; je 0x2db10; xor eax, eax; ret; 
0x0805834c: cmp eax, 1; jle 0x102fa; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x080584d4: cmp eax, 1; jle 0x10452; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08058ae4: cmp eax, 1; jle 0x10a7a; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08059187: cmp eax, 1; jle 0x10bf3; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0805b664: cmp eax, 1; jle 0x134a2; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0805dc74: cmp eax, 1; jle 0x15be4; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0805ddff: cmp eax, 1; jle 0x15e20; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0805e184: cmp eax, 1; jle 0x161a0; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0805f724: cmp eax, 1; jle 0x17490; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0805f9cc: cmp eax, 1; jle 0x1789c; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08061e56: cmp eax, 1; jle 0x19dff; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08061eb2: cmp eax, 1; jle 0x19e31; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08062d66: cmp eax, 1; jle 0x1a882; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0806478e: cmp eax, 1; jle 0x1c6c7; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x080652f4: cmp eax, 1; jle 0x1d2cd; mov ecx, 0x81; mov edx, 1; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x080656b7: cmp eax, 1; jle 0x1d5db; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08066021: cmp eax, 1; jle 0x1df6b; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08066521: cmp eax, 1; jle 0x1e25a; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08066a74: cmp eax, 1; jle 0x1e9f7; mov eax, 0xf0; mov ecx, 0x81; mov edx, edi; call dword ptr gs:[0x10]; 
0x0808f15c: cmp eax, 1; jle 0x4714e; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x080951e4: cmp eax, 1; jle 0x4d0ec; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08095b14: cmp eax, 1; jle 0x4da88; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08095d56: cmp eax, 1; jle 0x4dcbd; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08096031: cmp eax, 1; jle 0x4df3b; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x080564a4: cmp eax, 1; jle 0xc9bc; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08057544: cmp eax, 1; jle 0xf457; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08057e24: cmp eax, 1; jle 0xfde9; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08057f6c: cmp eax, 1; jle 0xff1f; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0805820c: cmp eax, 1; jle 0xffde; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08075af0: cmp eax, 2; je 0x2db10; xor eax, eax; ret; 
0x0808627c: cmp eax, 3; je 0x3e290; add esp, 4; pop ebx; pop esi; ret; 
0x080aae73: cmp eax, dword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x080a7f18: cmp eax, dword ptr [ecx + 0x1b64]; jae 0x5ff2b; mov edx, dword ptr [ecx + 0x1b68]; add word ptr [edx + eax*2], 1; ret; 
0x0805e275: cmp eax, ecx; cmovg eax, ecx; test edx, edx; jne 0x16270; ret; 
0x08096405: cmp eax, ecx; cmovg eax, ecx; test edx, edx; jne 0x4e400; ret; 
0x08070750: cmp eax, ecx; ja 0x28760; sub edi, 0x10; add eax, edi; pop edi; ret; 
0x080582b4: cmp eax, ecx; jbe 0x10318; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x0805cfe6: cmp eax, ecx; jbe 0x15110; sub esp, 0xc; push esi; call dword ptr [edi + 0x44]; 
0x0805d63c: cmp eax, ecx; jbe 0x15680; sub esp, 0xc; push esi; call dword ptr [edi + 0x44]; 
0x0805e735: cmp eax, ecx; jbe 0x16790; sub esp, 0xc; push esi; call dword ptr [edi + 0x34]; 
0x0805e7e0: cmp eax, ecx; jbe 0x16808; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x08096730: cmp eax, ecx; jbe 0x4e768; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x08096e51: cmp eax, ecx; jbe 0x4ee80; sub esp, 8; push ebx; push esi; call dword ptr [edi + 0x18]; 
0x08074c4a: cmp eax, ecx; jne 0x2ce58; pop esi; xor eax, eax; pop ebx; ret; 
0x08074d3d: cmp eax, ecx; jne 0x2ce6c; pop esi; xor eax, eax; pop ebx; ret; 
0x08074e6a: cmp eax, ecx; sbb eax, eax; sbb eax, -1; pop esi; pop ebx; ret; 
0x08071cbd: cmp eax, edx; cmova eax, edx; sub eax, esi; pop ebx; pop esi; ret; 
0x080706b0: cmp eax, edx; ja 0x28760; add eax, edi; add eax, ecx; pop edi; ret; 
0x08096f30: cmp eax, edx; ja 0x4ef28; mov eax, dword ptr [esp + 8]; pop ebx; add eax, ecx; ret; 
0x0805eac6: cmp eax, edx; jbe 0x16b90; sub esp, 0xc; push esi; call dword ptr [ebp + 0x30]; 
0x0805ef9f: cmp eax, edx; jbe 0x16fd0; sub esp, 8; push ebx; push esi; call dword ptr [edi + 0x18]; 
0x0808a755: cmp eax, esi; ja 0x42740; mov eax, ebx; pop ebx; pop esi; ret; 
0x08057ff9: cmp eax, esi; jbe 0x10160; sub esp, 8; push 0; push edi; call dword ptr [ebx + 8]; 
0x08075953: cmp ebp, 0x15; std; call dword ptr [eax - 0x18]; 
0x080862fa: cmp ebp, edi; call dword ptr [eax - 0x18]; 
0x080862e7: cmp ebp, edi; call dword ptr [eax - 0x73]; 
0x080863ab: cmp ebp, edi; call dword ptr [eax - 1]; 
0x08086cd5: cmp ebp, edi; call dword ptr [edi + 3]; 
0x0808638d: cmp ebp, edi; call dword ptr [edx + 0x50]; 
0x08087a30: cmp ebp, edi; call dword ptr [edx - 1]; 
0x0808707b: cmp ebp, edi; dec dword ptr [ebp + 0x39c00384]; std; call dword ptr [eax - 0x18]; 
0x080862ee: cmp ebp, edi; ljmp [eax - 0x5b]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; sbb dword ptr [ecx + edi], -3; call dword ptr [eax - 0x18]; 
0x0807a94f: cmp ebx, 0x28; std; call dword ptr [eax - 0x18]; 
0x08098725: cmp ebx, 3; je 0x50730; mov eax, esi; pop ebx; pop esi; ret; 
0x0808f1ee: cmp ebx, dword ptr [ebx + 0x5e]; pop edi; ret; 
0x080970fe: cmp ecx, 0xa; je 0x4f114; pop ebx; pop esi; pop edi; ret; 
0x08077acc: cmp ecx, 9; je 0x2fb00; mov ebx, dword ptr [esp + 0x20]; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x080614ce: cmp ecx, dword ptr [eax]; add byte ptr [ebx - 0x6f72e714], al; and al, 0xe; std; call dword ptr [edx - 0x73]; 
0x0806b7a2: cmp ecx, ebx; mov eax, 0; jne 0x239d0; pop ebx; ret; 
0x0806bdf0: cmp ecx, ebx; mov eax, 0; jne 0x24570; pop ebx; ret; 
0x0806c584: cmp ecx, ebx; pop ebx; mov eax, 1; ja 0x24590; neg eax; ret; 
0x08079a94: cmp edi, dword ptr [eax]; ret 0xe774; 
0x08067232: cmp edi, eax; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x080877bd: cmp edi, ebp; call dword ptr [eax - 0x18]; 
0x0809c57f: cmp edi, esi; call dword ptr [eax + 0x6a]; 
0x0809c2bd: cmp edi, esi; call dword ptr [eax - 0x18]; 
0x080a4c6c: cmp edx, -3; jbe 0x5cc80; add esp, 8; pop ebx; ret; 
0x08099239: cmp edx, 0x10d; cmovae ecx, eax; mov eax, 0xdc; mov edi, ecx; call dword ptr gs:[0x10]; 
0x08086cfa: cmp edx, dword ptr [edi - 0x18]; jmp dword ptr [ebx]; 
0x08060874: cmp edx, dword ptr [esp + 4]; setae al; ret; 
0x080aaf0b: cmp edx, eax; je 0x62f18; add esp, 8; pop ebx; ret; 
0x0809f556: cmp edx, eax; jne 0x57560; add esp, 4; pop ebx; pop esi; ret; 
0x0805f080: cmp edx, ecx; ja 0x17078; add eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0805ff9e: cmp edx, ecx; jae 0x17fc0; movzx eax, byte ptr [edx]; pop ebx; pop esi; ret; 
0x080988fe: cmp edx, ecx; je 0x50906; test edx, edx; jne 0x508f8; ret; 
0x08060f9c: cmp edx, ecx; jne 0x18fa9; add esp, 8; pop ebx; ret; 
0x080a2589: cmp edx, ecx; jne 0x5a570; mov eax, dword ptr [edx]; pop ebx; pop esi; ret; 
0x0807a051: cmp esi, -1; dec dword ptr [ebp + 0x428b0076]; add al, 0x83; ret 0xc608; 
0x080b2c4e: cmp esp, -1; mov edx, dword ptr [esp + 0x30]; add ebp, dword ptr [edx + 8]; mov dword ptr [esp], ebp; call edi; 
0x08071514: cmp esp, dword ptr [esi + 0xf]; xlatb; ret 0xc085; 
0x080703a6: cmpsb byte ptr [esi], byte ptr es:[edi]; add al, byte ptr [eax]; add byte ptr [eax - 0x17af0f0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x080a93e0: cmpsb byte ptr [esi], byte ptr es:[edi]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; sbb dword ptr [edx - 0x6c], -2; call dword ptr [eax - 0x18]; 
0x08065c66: cmpsb byte ptr [esi], byte ptr es:[edi]; mov eax, 0xf0; lea ebx, [edi + 0x1868]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x080a7a06: cmpsb byte ptr [esi], byte ptr es:[edi]; sbb edi, ebp; jmp dword ptr [esi - 0x70]; 
0x080719a5: cmpsd dword ptr [esi], dword ptr es:[edi]; add byte ptr [eax], al; add dh, dh; ret 0xf20; 
0x0808baa5: cmpsd dword ptr [esi], dword ptr es:[edi]; add eax, dword ptr [eax]; add dh, dh; ret 0xf50; 
0x080aa6f5: cmpsd dword ptr [esi], dword ptr es:[edi]; or edx, edi; dec dword ptr [ebx - 0x137c33a3]; or byte ptr [ebp - 0x1676f7d], cl; call dword ptr [eax + 0x6a]; 
0x080a3e69: cvtps2pd xmm3, qword ptr [edx - 0x75]; or al, 0x24; mov dword ptr [esp], eax; mov eax, dword ptr [esp + 4]; ret 0x14; 
0x0804fccc: cwde; add al, byte ptr [eax]; mov ebp, dword ptr [esp]; ret; 
0x08051968: cwde; add byte ptr [eax], al; add bh, al; ret 0x62d4; 
0x0804a273: cwde; add byte ptr [eax], al; add byte ptr [ebp - 0x76fb4fbc], cl; add al, bh; ret 0x4d88; 
0x08066c33: cwde; add ch, bh; call dword ptr [eax - 0x18]; 
0x080a01e1: cwde; add dword ptr [eax], eax; add dh, dh; ret 0x7403; 
0x080a8564: cwde; add dword ptr [eax], eax; add dh, dh; ret 0x7510; 
0x080623c8: cwde; add edi, ebp; call dword ptr [eax - 1]; 
0x080a0231: cwde; add esp, 0x20; lea esi, [esi]; call eax; 
0x0805342f: cwde; idiv edi; call dword ptr [eax + 0x6b]; 
0x080a76cc: cwde; sbb al, byte ptr [eax]; add byte ptr [ebp - 0x386e8a0a], al; ret 0; 
0x080a6b14: cwde; sub bh, ch; jmp dword ptr [esi - 0x70]; 
0x080acd04: cwde; xchg bh, bh; dec dword ptr [ebp - 0x166177d]; call dword ptr [eax - 0x75]; 
0x08077062: daa; add dword ptr [eax], eax; add byte ptr [ebx - 0x64], bh; call dword ptr gs:[0x10]; 
0x080a88db: daa; cli; jmp dword ptr [esi - 0x70]; 
0x08075282: daa; mov eax, dword ptr [esp + 0x10]; pop ebx; pop esi; pop edi; ret; 
0x080754c8: daa; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x080a33da: daa; sbb al, 4; add bh, al; ret 0x6ee4; 
0x080b332b: daa; sti; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x080aa76e: das; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; sub dword ptr [eax - 0x69], -2; call dword ptr [eax - 0x18]; 
0x08098ed4: das; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x08067d5e: das; clc; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x08077ad0: das; mov ebx, dword ptr [esp + 0x20]; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0807e075: das; std; call dword ptr [eax - 0x73]; 
0x080b2b38: das; sti; inc edi; ret 0; 
0x0806971b: dec byte ptr [ebp - 0x7af00687]; ret 7; 
0x080731fb: dec byte ptr [ebp - 0x7af00687]; ret; 
0x08068f1b: dec byte ptr [ebp - 0x7af00d87]; ret 0xf; 
0x080722fb: dec byte ptr [ebp - 0x7af00d87]; ret; 
0x08068028: dec byte ptr [ebx + 0x5b082444]; ret; 
0x08087b4a: dec byte ptr [ebx - 0x9773]; jmp dword ptr [esi - 0x77]; 
0x08078729: dec byte ptr [ecx + 0x488bd44d]; or dh, dh; ret 0x7401; 
0x0807eb7e: dec byte ptr [esi*2 - 0x377c7222]; xor edi, ebp; call dword ptr [eax - 0x73]; 
0x0804bec0: dec dword ptr [ebp + 0x15509a]; add byte ptr [eax + 0xf0], bh; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08075d3d: dec dword ptr [ebp + 0x187c92]; add byte ptr [edi], cl; inc esp; ret 0xff65; 
0x0805fc15: dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; lea esi, [esi]; ret; 
0x080b1e57: dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; nop; pop ebx; ret; 
0x080ab836: dec dword ptr [ebp + 0x2c084]; add byte ptr [eax], al; call 0x637f0; add eax, ebx; jmp eax; 
0x0808707d: dec dword ptr [ebp + 0x39c00384]; std; call dword ptr [eax - 0x18]; 
0x0807a054: dec dword ptr [ebp + 0x428b0076]; add al, 0x83; ret 0xc608; 
0x0809b351: dec dword ptr [ebp + 0x48d4004]; ret 0xc639; 
0x0804e4ab: dec dword ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x08095991: dec dword ptr [ebp + 0xb6]; add bh, al; ret; 
0x08055059: dec dword ptr [ebp + 0xb6]; add byte ptr [ebx - 0x4937b], cl; jmp dword ptr [ebp - 0x39]; 
0x08094251: dec dword ptr [ebp + 0xb6]; add byte ptr [ebx - 0x49b7b], cl; jmp dword ptr [esi - 0x70]; 
0x080a3389: dec dword ptr [ebp + 0xb6]; add byte ptr [ebx - 0x7cfbdbac], cl; ret 0x3901; 
0x08083a29: dec dword ptr [ebp + 0xb6]; add byte ptr [ecx - 0x769fdbbc], cl; ret 0xe9e9; 
0x08065ae4: dec dword ptr [ebp - 0x137cff8a]; or bh, bh; je 0x1db12; and al, 0x53; call eax; 
0x080acd1d: dec dword ptr [ebp - 0x164677d]; call dword ptr [eax + 0x68]; 
0x080ac9d0: dec dword ptr [ebp - 0x164677d]; call dword ptr [eax - 0x73]; 
0x080abe9d: dec dword ptr [ebp - 0x1655345]; jmp dword ptr [ebp - 0x39]; 
0x080acd63: dec dword ptr [ebp - 0x1657b7d]; call dword ptr [eax + 0x6a]; 
0x080accf1: dec dword ptr [ebp - 0x165f37d]; call dword ptr [eax + 0x6a]; 
0x080acd07: dec dword ptr [ebp - 0x166177d]; call dword ptr [eax - 0x75]; 
0x080a8ac9: dec dword ptr [ebp - 0x1694b7d]; call dword ptr [eax + 0x68]; 
0x0804c1b0: dec dword ptr [ebp - 0x17af3bbb]; push es; ret 2; 
0x080a0f55: dec dword ptr [ebp - 0x1b0f669]; dec dword ptr [edi]; inc esp; ret 0x758b; 
0x080a36bb: dec dword ptr [ebp - 0x1b43f7d]; call dword ptr [eax - 0x73]; 
0x080a2d65: dec dword ptr [ebp - 0x1b66d49]; jmp dword ptr [ebp - 0x75]; 
0x080a2d25: dec dword ptr [ebp - 0x1b68749]; jmp dword ptr [ebp - 0x75]; 
0x080a2320: dec dword ptr [ebp - 0x1b72b7d]; call dword ptr [eax + 0x6a]; 
0x080a218f: dec dword ptr [ebp - 0x1b72b7d]; call dword ptr [eax - 0x73]; 
0x080a1662: dec dword ptr [ebp - 0x1bf5379]; call dword ptr [eax - 0x75]; 
0x0809d7a2: dec dword ptr [ebp - 0x1bfcb7d]; call dword ptr [eax - 0x73]; 
0x0809e57e: dec dword ptr [ebp - 0x1c2566a]; dec dword ptr [edi]; inc esp; ret 0x3980; 
0x0809ca42: dec dword ptr [ebp - 0x1c30f7d]; call dword ptr [eax - 0x73]; 
0x0809d3a3: dec dword ptr [ebp - 0x1c33b7d]; call dword ptr [eax - 0x73]; 
0x0809b40c: dec dword ptr [ebp - 0x1c3737d]; call dword ptr [eax - 0x73]; 
0x0809d28c: dec dword ptr [ebp - 0x1c3937d]; call dword ptr [eax - 0x39]; 
0x0809ca61: dec dword ptr [ebp - 0x1c47b7d]; call dword ptr [eax + 0x6a]; 
0x0809bec8: dec dword ptr [ebp - 0x1c7536d]; dec dword ptr [edi]; inc esp; ret 0x95e9; 
0x0809d3cb: dec dword ptr [ebp - 0x1c77b7d]; call dword ptr [eax + 0x6a]; 
0x0809d3cb: dec dword ptr [ebp - 0x1c77b7d]; call dword ptr [eax + 0x6a]; add byte ptr [esi + 0x6a], dl; or al, 0xe8; ret; 
0x0809bafc: dec dword ptr [ebp - 0x1c77b7d]; inc edi; ret 0xffe0; 
0x0809b7a7: dec dword ptr [ebp - 0x1c9907d]; jmp dword ptr [esi - 0x70]; 
0x08094e7b: dec dword ptr [ebp - 0x1dadb79]; call dword ptr [eax + 0x68]; 
0x08094ef4: dec dword ptr [ebp - 0x1dadb79]; call dword ptr [eax - 0x73]; 
0x08088719: dec dword ptr [ebp - 0x2bddb7d]; call dword ptr [eax - 0x73]; 
0x080877a6: dec dword ptr [ebp - 0x2be6b7d]; call dword ptr [eax - 0x73]; 
0x08087558: dec dword ptr [ebp - 0x2c57b7d]; call dword ptr [eax - 0x73]; 
0x080864cf: dec dword ptr [ebp - 0x2c68b7d]; call dword ptr [eax - 0x73]; 
0x0807fc67: dec dword ptr [ebp - 0x2c79f7d]; call dword ptr [eax + 0x68]; 
0x0807fc19: dec dword ptr [ebp - 0x2c79f7d]; call dword ptr [eax - 0x73]; 
0x0807e071: dec dword ptr [ebp - 0x2d0b77d]; call dword ptr [eax - 0x73]; 
0x0807cac8: dec dword ptr [ebp - 0x2d2677d]; call dword ptr [eax - 0x73]; 
0x0807bdf7: dec dword ptr [ebp - 0x2d5687d]; call dword ptr [edx + 0x6a]; 
0x0807ae2c: dec dword ptr [ebp - 0x2d5877d]; call dword ptr [eax - 0x73]; 
0x0807ae48: dec dword ptr [ebp - 0x2d59f7d]; call dword ptr [eax - 0x73]; 
0x0807a989: dec dword ptr [ebp - 0x2d6f07d]; call dword ptr [eax - 0x18]; 
0x0807ae9f: dec dword ptr [ebp - 0x2d7697d]; call dword ptr [esi + 0x56]; 
0x08078c4e: dec dword ptr [ebp - 0x2df3f7d]; call dword ptr [eax - 0x73]; 
0x08076a58: dec dword ptr [ebp - 0x2e4787d]; call dword ptr [eax - 0x18]; 
0x08076963: dec dword ptr [ebp - 0x2e4977d]; call dword ptr [eax - 0x73]; 
0x08076011: dec dword ptr [ebp - 0x2e5437d]; call dword ptr [eax - 0x73]; 
0x08062ebd: dec dword ptr [ebp - 0x3019569]; call dword ptr [eax - 0x73]; 
0x08062f76: dec dword ptr [ebp - 0x301e669]; call dword ptr [eax - 0x73]; 
0x08064449: dec dword ptr [ebp - 0x301e66a]; call dword ptr [eax - 0x73]; 
0x0805d5bd: dec dword ptr [ebp - 0x302437d]; call dword ptr [eax - 0x73]; 
0x080571ed: dec dword ptr [ebp - 0x3067779]; call dword ptr [eax + 0x68]; 
0x080571ce: dec dword ptr [ebp - 0x3067779]; call dword ptr [eax - 0x73]; 
0x080531ac: dec dword ptr [ebp - 0x3068b79]; call dword ptr [eax + 0x68]; 
0x08060ee4: dec dword ptr [ebp - 0x30d5f45]; inc dword ptr [ebx - 0x72aff314]; cmp eax, 0; std; call dword ptr [edi - 1]; 
0x0808cffc: dec dword ptr [ebp - 0x3fceff8a]; ret; 
0x08094046: dec dword ptr [ebp - 0x4037b]; call dword ptr [ebx - 0x18]; 
0x08055f30: dec dword ptr [ebp - 0x4037b]; call dword ptr [ecx - 0x77]; 
0x08054e08: dec dword ptr [ebp - 0x4136b]; call dword ptr [edx - 0x39]; 
0x080ac1d0: dec dword ptr [ebp - 0x43f7b]; call dword ptr [eax - 0x73]; 
0x080ac89a: dec dword ptr [ebp - 0x44b4b]; call dword ptr [eax - 1]; 
0x08093842: dec dword ptr [ebp - 0x44b7b]; call dword ptr [eax - 0x73]; 
0x08092ec0: dec dword ptr [ebp - 0x44f7b]; call dword ptr [eax - 0x73]; 
0x08055819: dec dword ptr [ebp - 0x45b7b]; call dword ptr [eax - 0x73]; 
0x08055967: dec dword ptr [ebp - 0x45f7b]; call dword ptr [eax - 0x73]; 
0x080881ec: dec dword ptr [ebp - 0x5d40f7d]; call dword ptr [eax - 0x73]; 
0x080b1a8f: dec dword ptr [ebp - 0x72c7db8c]; je 0x69abd; add byte ptr [ecx - 0x7c17760e], cl; ret; 
0x080ac356: dec dword ptr [ebp - 0x76e4febc]; loope 0x642e7; ret 0x25; 
0x080aa4e3: dec dword ptr [ebp - 0x76ffd98c]; ret; 
0x080a22d3: dec dword ptr [ebp - 0x7cffd98c]; call 0x88f82bdf; sbb byte ptr [ecx], ch; ret 0xfa39; 
0x080a497b: dec dword ptr [ebp - 0x7cffd98c]; call dword ptr [eax]; 
0x080b2d67: dec dword ptr [ebx + 0x195483]; add byte ptr [ebp - 0x7cec8b40], al; in al, dx; or byte ptr [ebp - 0x3240f6d], cl; call dword ptr [edx + 0x50]; 
0x0808820e: dec dword ptr [ebx + 0x1a30bb]; add byte ptr [ebx + 0x418d10c4], al; dec dword ptr [ecx - 0x1bb43]; dec dword ptr [ecx - 0x1cf7b]; jmp dword ptr [ecx]; 
0x080b2c50: dec dword ptr [ebx + 0x3302454]; push 8; mov dword ptr [esp], ebp; call edi; 
0x0806634c: dec dword ptr [ebx + 0x3908245c]; ret; 
0x080affb6: dec dword ptr [ebx + 0x4c538912]; pop ebx; pop esi; pop edi; ret; 
0x080ab729: dec dword ptr [ebx + 0x558b0446]; add byte ptr [ecx], al; ret 0xd139; 
0x08068007: dec dword ptr [ebx + 0x5b082444]; ret; 
0x080b01c1: dec dword ptr [ebx + 0x8c48300]; pop ebx; ret; 
0x08066774: dec dword ptr [ebx + 0x9082454]; ret 0x3ee9; 
0x08095a48: dec dword ptr [ebx + 0x948e]; add bh, al; ret 0x5f80; 
0x0805bc6c: dec dword ptr [ebx + 0x94b3]; add bh, al; ret 0x5f80; 
0x0804baf8: dec dword ptr [ebx - 0x137c2fa3]; or al, 0x8d; adc dword ptr [eax], -0xd; cld; call dword ptr [eax - 0x18]; 
0x080aa6f8: dec dword ptr [ebx - 0x137c33a3]; or byte ptr [ebp - 0x1676f7d], cl; call dword ptr [eax + 0x6a]; 
0x080a95c0: dec dword ptr [ebx - 0x137c37a3]; or byte ptr [ebp - 0x169cf7d], cl; call dword ptr [eax + 0x6a]; 
0x08090447: dec dword ptr [ebx - 0x137ce7ec]; add al, 0x51; push esi; push dword ptr [ebp - 0x8a0]; call edx; 
0x0807f6a1: dec dword ptr [ebx - 0x16e3dbac]; ret; 
0x080881e6: dec dword ptr [ebx - 0x1ab43]; dec dword ptr [ebp - 0x5d40f7d]; call dword ptr [eax - 0x73]; 
0x08088208: dec dword ptr [ebx - 0x1bf73]; dec dword ptr [ebx + 0x1a30bb]; add byte ptr [ebx + 0x418d10c4], al; dec dword ptr [ecx - 0x1bb43]; dec dword ptr [ecx - 0x1cf7b]; jmp dword ptr [ecx]; 
0x080a2a6e: dec dword ptr [ebx - 0x1d763]; dec dword ptr [ebx - 0x1db73]; call ecx; 
0x080a2a74: dec dword ptr [ebx - 0x1db73]; call ecx; 
0x080a22cd: dec dword ptr [ebx - 0x22f43]; dec dword ptr [ebp - 0x7cffd98c]; call 0x88f82bdf; sbb byte ptr [ecx], ch; ret 0xfa39; 
0x080a231a: dec dword ptr [ebx - 0x23b63]; dec dword ptr [ebp - 0x1b72b7d]; call dword ptr [eax + 0x6a]; 
0x080a2354: dec dword ptr [ebx - 0x23b63]; dec dword ptr [ebp - 0x1b72b7d]; call dword ptr [eax - 0x73]; 
0x080a2a68: dec dword ptr [ebx - 0x2576b]; dec dword ptr [ebx - 0x1d763]; dec dword ptr [ebx - 0x1db73]; call ecx; 
0x0804a789: dec dword ptr [ebx - 0x38f3dbb4]; ret 0x6f40; 
0x0804aa63: dec dword ptr [ebx - 0x38f3dbbc]; ret 0x68c0; 
0x0805b5cf: dec dword ptr [ebx - 0x3f381ba3]; aam 0x62; push cs; or bh, al; ret; 
0x080a09f0: dec dword ptr [ebx - 0x3f7a73bb]; jne 0x57abe; mov eax, dword ptr [ebp - 0x60]; call eax; 
0x080a0a8d: dec dword ptr [ebx - 0x3f7a73bb]; jne 0x58610; mov dword ptr [ebp - 0x60], edx; mov eax, dword ptr [ebp - 0x54]; call eax; 
0x080623fe: dec dword ptr [ebx - 0x47e3dba4]; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x080628d9: dec dword ptr [ebx - 0x47e7db8c]; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov ebx, edi; mov edx, 1; call dword ptr gs:[0x10]; 
0x080659c5: dec dword ptr [ebx - 0x47f3dba4]; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x080aeb3f: dec dword ptr [ebx - 0x48f0f783]; inc esi; add dword ptr [ebp - 0x50f0fca2], ecx; xchg dword ptr [eax + 0x1000000], esi; ret 0x9789; 
0x08056e4c: dec dword ptr [ebx - 0x4937b]; jmp dword ptr [ebp - 0x39]; 
0x08094040: dec dword ptr [ebx - 0x49b73]; dec dword ptr [ebp - 0x4037b]; call dword ptr [ebx - 0x18]; 
0x0808abf4: dec dword ptr [ebx - 0x49f07fbb]; push eax; or al, 0xf6; ret 0x7540; 
0x080aebcf: dec dword ptr [ebx - 0x49f0f783]; inc esi; add dword ptr [ebp - 0x50f0fda2], ecx; xchg dword ptr [eax + 0x1000000], esi; ret 0x9789; 
0x080539f8: dec dword ptr [ebx - 0x4a0067fc]; insb byte ptr es:[edi], dx; idiv edi; call dword ptr [edx - 1]; 
0x080918ec: dec dword ptr [ebx - 0x4a0067fc]; pop esp; idiv edi; call dword ptr [edx - 1]; 
0x08051a60: dec dword ptr [ebx - 0x4a76dbbb]; push esp; idiv edi; dec dword ptr [ecx - 0x8a77b]; jmp dword ptr [ebp - 0x75]; 
0x08093a49: dec dword ptr [ebx - 0x4bf7b]; inc dword ptr [ebp - 0x6c7bf040]; add byte ptr [eax], al; add byte ptr [ebx - 0x48f43], al; call dword ptr [eax]; 
0x08093123: dec dword ptr [ebx - 0x4bf7b]; inc dword ptr [ebp - 0x777bf040]; add byte ptr [eax], al; add byte ptr [ebx - 0x48f43], al; call dword ptr [eax]; 
0x08054a61: dec dword ptr [ebx - 0x4db73]; dec dword ptr [ecx + 0x9ca89d0]; ret 0x850f; 
0x080947cc: dec dword ptr [ebx - 0x4db7b]; jmp dword ptr [ebp - 0x75]; 
0x0808533f: dec dword ptr [ebx - 0x72cbdba4]; and dword ptr [eax + 0x36], 0xfffffffd; call dword ptr [eax + 0x68]; 
0x080852c1: dec dword ptr [ebx - 0x72cbdba4]; and dword ptr [eax + 0x36], 0xfffffffd; call dword ptr [eax - 0x73]; 
0x080852f9: dec dword ptr [ebx - 0x72cbdba4]; and dword ptr [eax], 0x36; std; call dword ptr [eax - 0x73]; 
0x08083f80: dec dword ptr [ebx - 0x72cbdba4]; and dword ptr [eax], 0x37; std; call dword ptr [eax + 0x68]; 
0x08083e82: dec dword ptr [ebx - 0x72cbdba4]; and dword ptr [eax], 0x37; std; call dword ptr [eax - 0x73]; 
0x08083f3a: dec dword ptr [ebx - 0x72cbdba4]; xor dword ptr [eax + 0x35], 0xfffffffd; call dword ptr [eax - 0x73]; 
0x080802c2: dec dword ptr [ebx - 0x72cfdba4]; add dword ptr [esi + esi], -3; call dword ptr [eax - 0x73]; 
0x0807f07f: dec dword ptr [ebx - 0x72cfdba4]; add eax, 0x38; std; call dword ptr [eax + 0x68]; 
0x0807f0a7: dec dword ptr [ebx - 0x72cfdba4]; add eax, 0x38; std; call dword ptr [eax - 0x73]; 
0x08082b7d: dec dword ptr [ebx - 0x72cfdba4]; and dword ptr [eax + 0x37], 0xfffffffd; call dword ptr [eax + 0x68]; 
0x08082b5a: dec dword ptr [ebx - 0x72cfdba4]; and dword ptr [eax + 0x37], 0xfffffffd; call dword ptr [eax - 0x73]; 
0x0808029f: dec dword ptr [ebx - 0x72cfdba4]; and dword ptr [eax], 0x38; std; call dword ptr [eax + 0x68]; 
0x08080245: dec dword ptr [ebx - 0x72cfdba4]; and dword ptr [eax], 0x38; std; call dword ptr [eax - 0x73]; 
0x08080780: dec dword ptr [ebx - 0x72cfdba4]; and eax, 0x37; std; call dword ptr [eax - 0x73]; 
0x08081e24: dec dword ptr [ebx - 0x72cfdba4]; or esp, 0x35; std; call dword ptr [eax - 0x73]; 
0x08083408: dec dword ptr [ebx - 0x72d3dba4]; add dword ptr [eax + 0x37], -3; call dword ptr [eax + 0x68]; 
0x080833c2: dec dword ptr [ebx - 0x72d3dba4]; add dword ptr [eax + 0x37], -3; call dword ptr [eax - 0x73]; 
0x080847fe: dec dword ptr [ebx - 0x72d3dba4]; and eax, 0x36; std; call dword ptr [eax + 0x68]; 
0x08084795: dec dword ptr [ebx - 0x72d3dba4]; and eax, 0x36; std; call dword ptr [eax - 0x73]; 
0x080811da: dec dword ptr [ebx - 0x72d7dba4]; sub eax, 0x35; std; call dword ptr [eax - 0x73]; 
0x080a8630: dec dword ptr [ebx - 0x72f3dba4]; sub dword ptr [eax - 0x6a], -2; call dword ptr [eax - 0x73]; 
0x080ad3a3: dec dword ptr [ebx - 0x72f7dba4]; cmp dword ptr [eax - 0x63], -2; call dword ptr [eax - 0x73]; 
0x080ad789: dec dword ptr [ebx - 0x72f7dba4]; sub dword ptr [eax - 0x63], -2; call dword ptr [eax - 0x73]; 
0x08097609: dec dword ptr [ebx - 0x74f7dbbc]; mov ah, 0x24; push eax; add al, 0; add byte ptr [ecx], al; ret; 
0x0804b1a8: dec dword ptr [ebx - 0x76f3dbb4]; ret; 
0x0808f5ad: dec dword ptr [ebx - 0x7a76dbbb]; dec esp; idiv edi; jmp dword ptr [ebp - 0x75]; 
0x080af71c: dec dword ptr [ebx - 0x7af3dbbc]; ror byte ptr [edi], 0x84; ret; 
0x080ad07e: dec dword ptr [ebx - 0x7aff7500]; ror byte ptr [edi], 0x44; ret 0x4c89; 
0x080ad704: dec dword ptr [ebx - 0x7aff7500]; ror byte ptr [edi], 0x44; ret 0xec83; 
0x080a8b1c: dec dword ptr [ebx - 0x7aff7500]; ror byte ptr [edi], 0x44; ret; 
0x080525c7: dec dword ptr [ebx - 0x7c2776f0]; ret; 
0x0807bfa3: dec dword ptr [ebx - 0x7c87dbbc]; pushal; mov edi, 0xfff23fe9; call dword ptr [eax - 0x73]; 
0x0804fc5c: dec dword ptr [ebx - 0x7ccbdb8c]; ret 0xc702; 
0x080aefbf: dec dword ptr [ebx - 0x7cfbdbb4]; in al, dx; or al, 0xff; je 0x66fee; and al, 0x89; ret 0xd889; 
0x0808cc23: dec dword ptr [ebx - 0x836b]; dec dword ptr [ebx - 0x9763]; dec dword ptr [ebx - 0x837b]; inc dword ptr [ecx]; ret; 
0x0808cc2f: dec dword ptr [ebx - 0x837b]; inc dword ptr [ecx]; ret; 
0x080530dd: dec dword ptr [ebx - 0x8af7b]; call dword ptr [edx - 0x75]; 
0x0805369a: dec dword ptr [ebx - 0x8af7b]; call dword ptr [esi - 0x18]; 
0x08091cf9: dec dword ptr [ebx - 0x8c363]; inc esi; test dword ptr [ebx], esp; idiv edi; jmp dword ptr [eax]; 
0x080918e6: dec dword ptr [ebx - 0x8d34b]; dec dword ptr [ebx - 0x4a0067fc]; pop esp; idiv edi; call dword ptr [edx - 1]; 
0x080530d7: dec dword ptr [ebx - 0x8df73]; dec dword ptr [ebx - 0x8af7b]; call dword ptr [edx - 0x75]; 
0x0808cc29: dec dword ptr [ebx - 0x9763]; dec dword ptr [ebx - 0x837b]; inc dword ptr [ecx]; ret; 
0x0809b780: dec dword ptr [ebx - 0x9b6b]; call dword ptr [eax + 0x57]; 
0x0809b34b: dec dword ptr [ebx - 0x9f6b]; dec dword ptr [ebp + 0x48d4004]; ret 0xc639; 
0x0808b4a0: dec dword ptr [ebx - 0x9f7b]; ljmp [ecx]; ret 0xd189; 
0x0808bbea: dec dword ptr [ebx - 0xbb7b]; dec dword ptr [edi]; scasd eax, dword ptr es:[edi]; ret; 
0x0809b77a: dec dword ptr [ebx - 0xc373]; dec dword ptr [ebx - 0x9b6b]; call dword ptr [eax + 0x57]; 
0x0804c032: dec dword ptr [ebx - 0xf472fab]; add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; lea ebx, [edx + 0x1550]; mov edx, 1; call dword ptr gs:[0x10]; 
0x080638b8: dec dword ptr [ebx]; add byte ptr [ecx + 0xf6c244c], cl; inc edi; ret 0x548b; 
0x080a2bf6: dec dword ptr [ecx + 0x1a6c87]; add byte ptr [ebx + 0x1a6887], cl; add byte ptr [ecx], bh; ret 0x273; 
0x08053692: dec dword ptr [ecx + 0x208d8bc2]; idiv edi; dec dword ptr [ebx - 0x8af7b]; call dword ptr [esi - 0x18]; 
0x0809b3b9: dec dword ptr [ecx + 0x23c87]; add byte ptr [ebx - 0x7876e3ba], cl; inc eax; add al, byte ptr [eax]; add byte ptr [ebx + 0x508d084e], cl; jmp dword ptr [ecx]; 
0x0804fca4: dec dword ptr [ecx + 0x24748bf2]; xor al, 0xc7; inc esp; and al, 0x38; or eax, 0x83000000; ret 0xc702; 
0x08088a03: dec dword ptr [ecx + 0x248c8dcb]; mov word ptr [eax], es; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x080ad849: dec dword ptr [ecx + 0x28c48303]; pop ebx; ret; 
0x0808b86b: dec dword ptr [ecx + 0x458b8445]; test byte ptr [ecx], bh; ret; 
0x080a0a98: dec dword ptr [ecx + 0x458ba055]; lodsb al, byte ptr [esi]; call eax; 
0x080b134a: dec dword ptr [ecx + 0x48d2404]; ret 0x188b; 
0x0808aedc: dec dword ptr [ecx + 0x55898455]; mov ah, 0x89; ret 0xe283; 
0x080aabb5: dec dword ptr [ecx + 0x5bc03106]; pop esi; pop edi; ret; 
0x08079677: dec dword ptr [ecx + 0x5e5b0850]; ret; 
0x0808a48d: dec dword ptr [ecx + 0x5f5e5bf0]; ret; 
0x080545f9: dec dword ptr [ecx + 0x6ee850fb]; imul eax, dword ptr [eax], 0x74878d00; stc; cld; call dword ptr [eax + 0x68]; 
0x08054a67: dec dword ptr [ecx + 0x9ca89d0]; ret 0x850f; 
0x0806107c: dec dword ptr [ecx + 0xae8df2]; add byte ptr [eax], dl; add byte ptr [ecx], ch; ret 0x850f; 
0x080a7367: dec dword ptr [ecx + 0xfa6f3c6]; xchg eax, edi; ret 0xda80; 
0x0807cd54: dec dword ptr [ecx + 0xfd28510]; test byte ptr [edi + 0x6b000000], dl; ret 0x8b3c; 
0x0808eb22: dec dword ptr [ecx - 0x16e3db8c]; ret; 
0x08087dfb: dec dword ptr [ecx - 0x1b773]; call dword ptr [eax - 1]; 
0x0808821a: dec dword ptr [ecx - 0x1bb43]; dec dword ptr [ecx - 0x1cf7b]; jmp dword ptr [ecx]; 
0x080885df: dec dword ptr [ecx - 0x1bb73]; call dword ptr [eax - 1]; 
0x08088220: dec dword ptr [ecx - 0x1cf7b]; jmp dword ptr [ecx]; 
0x080a22c7: dec dword ptr [ecx - 0x24343]; dec dword ptr [ebx - 0x22f43]; dec dword ptr [ebp - 0x7cffd98c]; call 0x88f82bdf; sbb byte ptr [ecx], ch; ret 0xfa39; 
0x080ab966: dec dword ptr [ecx - 0x3b7cf7ba]; and al, 0x5b; pop esi; ret; 
0x080a98ca: dec dword ptr [ecx - 0x3f3847bb]; sub al, 0x6f; push cs; or byte ptr [ecx - 0x8f63], cl; inc edi; ret; 
0x080b2ee8: dec dword ptr [ecx - 0x3f7a55f4]; je 0x6aefa; mov dword ptr [esp + 8], edx; call eax; 
0x08092242: dec dword ptr [ecx - 0x47f7b]; jmp dword ptr [ebp - 0x75]; 
0x08054b52: dec dword ptr [ecx - 0x48f63]; inc dword ptr [ebx - 0x4ab43]; call dword ptr [eax]; 
0x08054670: dec dword ptr [ecx - 0x4937b]; jmp dword ptr [ebp - 0x75]; 
0x080570b7: dec dword ptr [ecx - 0x49b73]; call dword ptr [eax + 0x56]; 
0x080abe8e: dec dword ptr [ecx - 0x49f7b]; jmp dword ptr [ebp - 0x75]; 
0x0805b7d9: dec dword ptr [ecx - 0x76e3db94]; ret 0x468b; 
0x08063636: dec dword ptr [ecx - 0x76ebdbac]; inc esp; and al, 0x10; call ecx; 
0x08054536: dec dword ptr [ecx - 0x7872af05]; and al, 0xf9; cld; call dword ptr [eax - 0x18]; 
0x080531be: dec dword ptr [ecx - 0x7872af05]; hlt; clc; cld; call dword ptr [eax - 0x18]; 
0x0808c3ba: dec dword ptr [ecx - 0x7a0fd628]; test byte ptr [edi], 0x49; ret; 
0x080524df: dec dword ptr [ecx - 0x88b6b]; call dword ptr [eax + 0x52]; 
0x080544c9: dec dword ptr [ecx - 0x88b73]; call dword ptr [eax + 0x50]; 
0x08051a69: dec dword ptr [ecx - 0x8a77b]; jmp dword ptr [ebp - 0x75]; 
0x0808f5a7: dec dword ptr [ecx - 0x8bb7b]; dec dword ptr [ebx - 0x7a76dbbb]; dec esp; idiv edi; jmp dword ptr [ebp - 0x75]; 
0x080afdd3: dec dword ptr [ecx - 0x8d3dbbc]; ret 0; 
0x0809142f: dec dword ptr [ecx - 0x8d763]; dec dword ptr [edi]; dec ecx; ret; 
0x08076a49: dec dword ptr [ecx - 0x977b]; jmp dword ptr [ebp - 0x75]; 
0x0808cd3c: dec dword ptr [ecx - 0x9f7b]; call dword ptr [ecx - 1]; 
0x0808b49a: dec dword ptr [ecx - 0x9f7b]; dec dword ptr [ebx - 0x9f7b]; ljmp [ecx]; ret 0xd189; 
0x0808c817: dec dword ptr [ecx - 0xa74b]; inc dword ptr [eax - 0xcf43]; jmp dword ptr [edi - 0x75]; 
0x0809b1e2: dec dword ptr [ecx - 0xab4b]; jmp dword ptr [esi - 0x7d]; 
0x080a993b: dec dword ptr [ecx - 0xb763]; inc edi; ret; 
0x0805cdd3: dec dword ptr [ecx]; ret 0x1689; 
0x08098083: dec dword ptr [edi]; add byte ptr [eax], al; jne 0x4fe80; xor eax, eax; pop edi; ret; 
0x08061074: dec dword ptr [edi]; add byte ptr [ecx - 0xfffff1a], al; dec dword ptr [ecx + 0xae8df2]; add byte ptr [eax], dl; add byte ptr [ecx], ch; ret 0x850f; 
0x0808f9d7: dec dword ptr [edi]; cmp byte ptr [edx - 2], 0xff; jmp dword ptr [esi - 0x70]; 
0x0807ec11: dec dword ptr [edi]; dec eax; ret 0x8dc3; 
0x08091435: dec dword ptr [edi]; dec ecx; ret; 
0x08067234: dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0809e584: dec dword ptr [edi]; inc esp; ret 0x3980; 
0x08088c01: dec dword ptr [edi]; inc esp; ret 0x4489; 
0x080671f0: dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x080a0f5b: dec dword ptr [edi]; inc esp; ret 0x758b; 
0x080a3960: dec dword ptr [edi]; inc esp; ret 0x8dc3; 
0x0809bece: dec dword ptr [edi]; inc esp; ret 0x95e9; 
0x08067013: dec dword ptr [edi]; inc esp; ret 0xc483; 
0x08087b45: dec dword ptr [edi]; mov bh, 0x44; push ss; dec byte ptr [ebx - 0x9773]; jmp dword ptr [esi - 0x77]; 
0x080afd94: dec dword ptr [edi]; mov bh, 0x52; add eax, 0xcdfa8166; xor byte ptr [ebx + ecx + 0x66], 0x81; cli; syscall; 
0x080af790: dec dword ptr [edi]; mov bh, 0x73; add dword ptr [ebx - 0x7cf3db84], ecx; ret; 
0x080550b4: dec dword ptr [edi]; mov dh, 0x44; adc al, ah; mov eax, dword ptr [ecx + eax*4]; jmp eax; 
0x08091c19: dec dword ptr [edi]; mov dh, 0x56; or al, 0xf6; ret 0xf08; 
0x080af6ff: dec dword ptr [edi]; mov dh, 0x73; add dword ptr [ebx - 0x7cf3db84], ecx; ret; 
0x08077f40: dec dword ptr [edi]; or ecx, 0x43; add byte ptr [eax], al; ret; 
0x0808bbf0: dec dword ptr [edi]; scasd eax, dword ptr es:[edi]; ret; 
0x0805f806: dec dword ptr [edi]; test ah, bh; add byte ptr [eax], al; add bh, al; ret; 
0x08081b81: dec dword ptr [edi]; test byte ptr [eax], bh; add eax, dword ptr [eax]; add bh, dh; ret; 
0x0807695d: dec dword ptr [edi]; test byte ptr [ebp - 0x72000002], bh; sub dword ptr [eax + 0x1b], -3; call dword ptr [eax - 0x73]; 
0x080a2207: dec dword ptr [edi]; test byte ptr [ecx], al; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret 0x470f; 
0x08081b8d: dec dword ptr [edi]; test byte ptr [edx], ah; add eax, dword ptr [eax]; add bh, dh; ret; 
0x08074dca: dec dword ptr [edi]; test dword ptr [ebx + 0x5e000000], ebx; xor eax, eax; pop ebx; ret; 
0x08074cbf: dec dword ptr [edi]; test dword ptr [esi + 0x5e000001], esp; xor eax, eax; pop ebx; ret; 
0x0809091d: dec dword ptr [edi]; xchg eax, ebp; ret; 
0x0808eb1a: dec dword ptr [edi]; xchg eax, esp; shr cl, 0x8c; idiv edi; dec dword ptr [ecx - 0x16e3db8c]; ret; 
0x0804fe21: dec dword ptr [edi]; xor eax, edx; movzx edx, byte ptr [ecx]; test dl, dl; jne 0x7e09; ret; 
0x08055f71: dec dword ptr [edx]; add byte ptr [eax], al; add byte ptr [ecx - 0x4b77b], cl; ljmp [ecx]; ret 0x45e9; 
0x08093ea0: dec dword ptr [edx]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x8589; 
0x0808fd3f: dec eax; adc bh, al; add ah, byte ptr [0xf000000]; mov dh, 0x56; or al, 0xf6; ret 0xf08; 
0x080616dd: dec eax; adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x08096749: dec eax; add al, 0x8b; add byte ptr [ecx + 0x4c4830a], cl; pop ebx; pop esi; ret; 
0x0809642e: dec eax; add al, 0x8b; dec eax; or byte ptr [ecx + 0x8508910], cl; mov dword ptr [eax + 0x20], ecx; ret; 
0x080a8678: dec eax; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x08098b4c: dec eax; add dword ptr [ebp - 0x28], esi; mov eax, ecx; ret; 
0x08069f92: dec eax; add eax, 0x542b60f; sub eax, ecx; ret; 
0x0805e2d5: dec eax; and al, 0x89; push eax; add al, 0x5b; ret; 
0x0807ee5a: dec eax; call eax; 
0x0805ecc1: dec eax; cmp al, 0x80; add byte ptr [eax], al; add byte ptr [ebx - 0x3f7acbc0], cl; jne 0x16cc0; ret; 
0x0809d055: dec eax; cmp al, 0xfe; call dword ptr [ebp + 0x56]; 
0x0807e074: dec eax; das; std; call dword ptr [eax - 0x73]; 
0x080540b7: dec eax; idiv edi; call dword ptr [edx - 1]; 
0x08049237: dec eax; jle 0x1251; mov eax, 0xf0; lea ebx, [ebp + 0x15cc]; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x080997d4: dec eax; movzx eax, al; pop ebx; ret; 
0x0809645f: dec eax; or byte ptr [ecx + 0x58890450], cl; or byte ptr [ecx + 0x10892048], cl; pop ebx; ret; 
0x08096431: dec eax; or byte ptr [ecx + 0x8508910], cl; mov dword ptr [eax + 0x20], ecx; ret; 
0x0807872e: dec eax; or dh, dh; ret 0x7401; 
0x080abd34: dec eax; or eax, 0x4389ffff; adc al, 0x83; les ebp, ptr [eax]; pop ebx; ret; 
0x08058544: dec eax; pop eax; mov dword ptr [ecx + 0x88], edx; ret; 
0x08069f32: dec eax; pop es; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x080507df: dec eax; push dword ptr [edi]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0807ee4a: dec eax; push dword ptr [esp + 0x60]; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x08069fa2: dec eax; push es; movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x080607e0: dec eax; ret 0x4489; 
0x0807ec13: dec eax; ret 0x8dc3; 
0x0808641c: dec eax; ret 0xc083; 
0x0806c343: dec eax; ret 0xff3; 
0x0806080a: dec eax; ret 0xff50; 
0x0806c2a3: dec eax; ret; 
0x080a7e69: dec eax; sar byte ptr [eax + 0xdc], 1; call dword ptr gs:[0x10]; 
0x0808edc2: dec eax; sbb al, byte ptr [eax]; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x08075cf8: dec eax; sbb bh, ch; call dword ptr [eax - 0x73]; 
0x08056c68: dec eax; stc; cld; call dword ptr [eax - 0x18]; 
0x0807872b: dec ebp; aam 0x8b; dec eax; or dh, dh; ret 0x7401; 
0x0808082e: dec ebp; and byte ptr [ecx - 0x9cfdbb4], cl; ret 0x7501; 
0x08058067: dec ebp; in al, 0x81; jmp eax; 
0x0809a58f: dec ebp; in al, 0x89; shl dword ptr [0xfffff000], 0x29; ret 0xe183; 
0x080a14f8: dec ebp; or byte ptr [ebx + 0x68b8c55], cl; add eax, dword ptr [ecx]; test edx, edx; jne 0x59507; call eax; 
0x080a03c0: dec ebp; or byte ptr [edi], cl; xchg eax, esp; ret 0x940f; 
0x080a8b14: dec ebp; push cs; or byte ptr [ebp - 0x1c9f967], cl; dec dword ptr [ebx - 0x7aff7500]; ror byte ptr [edi], 0x44; ret; 
0x080ad743: dec ebp; push cs; or byte ptr [ebp - 0x1c9f96a], cl; dec dword ptr [ebx - 0x7aff7500]; ror byte ptr [edi], 0x44; ret 0xec83; 
0x080ad076: dec ebp; push cs; or byte ptr [ebp - 0x1c9f96e], cl; dec dword ptr [ebx - 0x7aff7500]; ror byte ptr [edi], 0x44; ret 0x4c89; 
0x080ad6fc: dec ebp; push cs; or byte ptr [ebp - 0x1c9f96f], cl; dec dword ptr [ebx - 0x7aff7500]; ror byte ptr [edi], 0x44; ret 0xec83; 
0x08056959: dec ebp; ret; 
0x08063821: dec ebx; add al, 0x8b; test dword ptr [eax - 0x7d000000], eax; ret 0x8b08; 
0x0807ef7c: dec ebx; add dword ptr [eax], eax; add byte ptr [ebx - 0x72cfdba4], cl; add eax, 0x38; std; call dword ptr [eax - 0x73]; 
0x08071a94: dec ebx; lea eax, [eax + 9]; pop edi; ret; 
0x08070c84: dec ebx; lea eax, [edi + 9]; pop edi; ret; 
0x08070829: dec ecx; adc byte ptr [esi + 0xf], ah; xlatb; ret 0xc085; 
0x08070841: dec ecx; adc byte ptr [esi + 0xf], ah; xlatb; ret; 
0x0806f497: dec ecx; add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x0806f5f7: dec ecx; add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x0806dc27: dec ecx; add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x0806dd87: dec ecx; add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x0808703d: dec ecx; cmp bh, ch; call dword ptr [eax - 0x18]; 
0x080863aa: dec ecx; cmp ebp, edi; call dword ptr [eax - 1]; 
0x0806cf37: dec ecx; imul byte ptr [ecx]; ret 0x280f; 
0x0806d067: dec ecx; imul dword ptr [ecx]; ret 0x280f; 
0x0806d9e7: dec ecx; ljmp [ecx]; ret 0x280f; 
0x0806f637: dec ecx; pop es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x0806ddc7: dec ecx; pop es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x0806f617: dec ecx; push es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x0806dda7: dec ecx; push es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x0808c3c2: dec ecx; ret; 
0x08079d39: dec ecx; sbb byte ptr [ecx - 0x6f3c14f2], cl; int 0x80; 
0x08070f9c: dec edi; adc byte ptr [esi + 0xf], ah; xlatb; rol dword ptr [ebp + 0x315a75c0], 0xc0; pop edi; ret; 
0x0805a94e: dec edi; add al, 0x51; mov eax, dword ptr [esp + 0x30]; push eax; call esi; 
0x080703fd: dec edi; add al, byte ptr [eax]; add byte ptr [eax + 0x77850f02], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf02; 
0x08085a86: dec edi; cld; inc dword ptr [0x5f577]; mov eax, dword ptr [eax + 0x1968]; ret; 
0x080b2c4d: dec edi; cmp esp, -1; mov edx, dword ptr [esp + 0x30]; add ebp, dword ptr [edx + 8]; mov dword ptr [esp], ebp; call edi; 
0x080b18aa: dec edi; or bh, bh; je 0x698d3; and al, 0x89; ret 0xe889; 
0x0805d42b: dec edi; ret 0xc101; 
0x08086eba: dec edi; ret 0xc301; 
0x0805131f: dec edi; ret; 
0x0805a84f: dec edi; sub byte ptr [ecx - 0x75], dl; inc esp; and al, 0x30; push eax; call esi; 
0x08070eea: dec edi; xor byte ptr [esi + 0xf], ah; xlatb; ret; 
0x0809f8cb: dec edx; adc al, 0; add byte ptr [ebx - 0x8b7b], cl; inc edi; ret; 
0x08096b61: dec edx; add al, 0x89; or byte ptr [ebx + 0x5f5e5b02], cl; ret; 
0x080a85b5: dec edx; add al, 0x8b; push eax; adc byte ptr [ecx + 0x39c829f8], cl; ret 0x6f72; 
0x0806f4a0: dec edx; add eax, 0x5f0c428d; ret; 
0x08049e52: dec edx; jbe 0x1e55; add byte ptr [ebx + 0x5d8b10c4], al; cld; leave; ret; 
0x080a9789: dec edx; or bh, al; ret 0x6cc8; 
0x0806f4e0: dec edx; pop es; lea eax, [edx + 0xe]; pop edi; ret; 
0x0806f640: dec edx; pop es; lea eax, [edx + 0xe]; ret; 
0x0806dc70: dec edx; pop es; mov eax, edi; pop edi; ret; 
0x0806ddd0: dec edx; pop es; mov eax, edx; ret; 
0x0806f4c0: dec edx; push es; lea eax, [edx + 0xd]; pop edi; ret; 
0x0806f620: dec edx; push es; lea eax, [edx + 0xd]; ret; 
0x0806dc50: dec edx; push es; mov eax, edi; pop edi; ret; 
0x0806ddb0: dec edx; push es; mov eax, edx; ret; 
0x080888cd: dec edx; sub bh, al; ret; 
0x08071529: dec edx; xor byte ptr [esi + 0xf], ah; xlatb; ret; 
0x080b10de: dec esi; add al, 0x89; ret 0x448d; 
0x08089a86: dec esi; add dword ptr [eax], eax; add byte ptr [ebx - 0x7af7dbbc], cl; ror byte ptr [edi], 0x85; ret 3; 
0x08049fb0: dec esi; cmp byte ptr [ecx + 0x5e8b3c56], cl; or bh, dh; ret; 
0x080890dc: dec esi; or byte ptr [ecx], bh; ret 0x8e0f; 
0x0807d11a: dec esi; ret 0x4589; 
0x0808e062: dec esi; ret; 
0x0805eae4: dec esi; sbb al, 0x89; ret 0xff85; 
0x080a3ab6: dec esp; adc eax, 0x4c8d0004; and al, 0x10; lea ebx, [esi - 0x1b3ee]; call dword ptr gs:[0x10]; 
0x08050ef5: dec esp; adc eax, 0x83167500; ret 0x3901; 
0x080a794b: dec esp; add al, byte ptr [eax]; add byte ptr [ecx + 0x4c48310], cl; pop ebx; pop esi; ret; 
0x0808904b: dec esp; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0804dbbf: dec esp; add dword ptr [ebx - 0x16c3db94], ecx; ret 0xfffe; 
0x08077123: dec esp; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x080a54f2: dec esp; add esp, 0xd8; mov eax, ebx; pop ebx; ret; 
0x080a3abb: dec esp; and al, 0x10; lea ebx, [esi - 0x1b3ee]; call dword ptr gs:[0x10]; 
0x08077b83: dec esp; and al, 0x10; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x08076fdb: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x08099803: dec esp; and al, 0x10; or dh, 0x80; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x08099873: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x08079234: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa3; call dword ptr gs:[0x10]; 
0x08077be7: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov edx, eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x080b0886: dec esp; and al, 0x14; push eax; push dword ptr [esp + 0x10]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x080b0231: dec esp; and al, 0x18; mov dword ptr [edx + eax*4], ecx; add esp, 8; pop ebx; ret; 
0x080a4eb4: dec esp; and al, 0x1c; xor ecx, dword ptr gs:[0x14]; jne 0x5cecc; add esp, 0x2c; ret; 
0x080a5174: dec esp; and al, 0x1c; xor ecx, dword ptr gs:[0x14]; jne 0x5d18c; add esp, 0x2c; ret; 
0x080a526b: dec esp; and al, 0x1c; xor ecx, dword ptr gs:[0x14]; jne 0x5d27b; add esp, 0x2c; ret; 
0x080a7b08: dec esp; and al, 0x1c; xor ecx, dword ptr gs:[0x14]; jne 0x5fb18; add esp, 0x2c; ret; 
0x080aba10: dec esp; and al, 0x1c; xor ecx, dword ptr gs:[0x14]; jne 0x63a20; add esp, 0x2c; ret; 
0x0807705e: dec esp; and al, 0x20; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x0807709f: dec esp; and al, 0x20; mov edx, dword ptr [esp + 0x24]; mov edi, eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x080a24c2: dec esp; and al, 0x24; mov eax, dword ptr [esp + 0x20]; call 0x59e80; add esp, 0x1c; ret; 
0x08050171: dec esp; and al, 0x28; push esi; mov eax, dword ptr [esp + 0x1c]; call eax; 
0x0805e8a9: dec esp; and al, 0x40; call dword ptr [ebx + 0xc]; 
0x0804a48f: dec esp; and al, 0x40; int 0x80; 
0x080ab0d2: dec esp; and al, 0x40; mov eax, 0x180; mov ebx, 0x3005; call dword ptr gs:[0x10]; 
0x08099725: dec esp; and al, 0xc; call dword ptr gs:[0x10]; 
0x08077cbb: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x080abc5a: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x08077f5a: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x08077f8a: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x08077c3b: dec esp; and al, 0xc; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x080a79f5: dec esp; and al, 0xc; xor ecx, dword ptr gs:[0x14]; jne 0x5fa05; add esp, 0x1c; ret; 
0x08077ee6: dec esp; and al, 8; mov eax, 0xc0; call dword ptr gs:[0x10]; 
0x08077f27: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x0807713e: dec esp; and al, 8; mov edx, dword ptr [esp + 0xc]; mov esi, eax; mov eax, 3; call dword ptr gs:[0x10]; 
0x080771de: dec esp; and al, 8; mov edx, dword ptr [esp + 0xc]; mov esi, eax; mov eax, 4; call dword ptr gs:[0x10]; 
0x08077db6: dec esp; and ch, bh; call dword ptr [eax - 0x73]; 
0x080814cf: dec esp; call eax; 
0x0808f5b3: dec esp; idiv edi; jmp dword ptr [ebp - 0x75]; 
0x0808771a: dec esp; nop; and al, 0x83; ret 0x3901; 
0x08066a5f: dec esp; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x08050202: dec esp; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x080affbb: dec esp; pop ebx; pop esi; pop edi; ret; 
0x080a17fd: dec esp; push cs; jmp dword ptr [ecx]; 
0x080b024a: dec esp; ret; 
0x08050823: dec esp; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0808f09e: dec esp; sbb al, byte ptr [eax]; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0809c4d9: dec esp; test dword ptr [ebx + eax*4], edx; rol byte ptr [ecx], 0x39; ret 0xf575; 
0x0809f032: div bh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x080b2be0: div byte ptr [ebp - 0x1b]; add esp, 4; pop ebx; pop esi; ret; 
0x0807e23f: div byte ptr [ebp - 0x1b]; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x080b2d0e: div byte ptr [ebp - 0x1d]; add esp, 4; pop ebx; pop esi; ret; 
0x0807f099: div byte ptr [ebx]; std; call dword ptr [eax - 0x18]; 
0x08085a80: endbr32; call 0x2a7f; add eax, 0x5f577; mov eax, dword ptr [eax + 0x1968]; ret; 
0x0807cc00: endbr32; call 0x2a7f; add eax, 0x683f7; mov eax, dword ptr [eax + 0x1fa8]; ret; 
0x0807cbe0: endbr32; call 0x2a7f; add eax, 0x68417; mov eax, dword ptr [eax + 0x1fa0]; ret; 
0x0807aee0: endbr32; call 0x2a7f; add eax, 0x6a117; lea eax, [eax + 0xa60]; ret; 
0x080a7e90: endbr32; mov eax, 0x14; call dword ptr gs:[0x10]; 
0x080a7e90: endbr32; mov eax, 0x14; call dword ptr gs:[0x10]; ret; 
0x08076f50: endbr32; mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x080995d0: endbr32; mov eax, 0xc7; call dword ptr gs:[0x10]; 
0x080995d0: endbr32; mov eax, 0xc7; call dword ptr gs:[0x10]; ret; 
0x08099610: endbr32; mov eax, 0xc8; call dword ptr gs:[0x10]; 
0x08099610: endbr32; mov eax, 0xc8; call dword ptr gs:[0x10]; ret; 
0x080995f0: endbr32; mov eax, 0xc9; call dword ptr gs:[0x10]; 
0x080995f0: endbr32; mov eax, 0xc9; call dword ptr gs:[0x10]; ret; 
0x08099630: endbr32; mov eax, 0xca; call dword ptr gs:[0x10]; 
0x08099630: endbr32; mov eax, 0xca; call dword ptr gs:[0x10]; ret; 
0x0805ef50: endbr32; mov eax, 0xffffffff; mov edx, 0xffffffff; ret; 
0x0805e7a0: endbr32; mov eax, 0xffffffff; ret; 
0x080a4cb0: endbr32; mov eax, dword ptr [eax + 4]; ret; 
0x080a4cc0: endbr32; mov eax, dword ptr [eax + 4]; sub eax, dword ptr gs:[0]; ret; 
0x0805fe20: endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x080b01d0: endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x48]; ret; 
0x080b0240: endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x080b0280: endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x50]; ret; 
0x080b02f0: endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x54]; ret; 
0x080b02e0: endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x58]; ret; 
0x080b0290: endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x5c]; ret; 
0x080b0270: endbr32; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x4c], edx; ret; 
0x0805fe30: endbr32; mov eax, dword ptr [esp + 4]; ret; 
0x08079260: endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x74; call dword ptr gs:[0x10]; 
0x080995a0: endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x08077a80: endbr32; push ebx; mov eax, 6; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x080a84f0: endbr32; ret 4; 
0x08049c70: endbr32; ret; 
0x0805eea0: endbr32; xor eax, eax; ret; 
0x080a54f5: fadd dword ptr [eax]; add byte ptr [eax], al; mov eax, ebx; pop ebx; ret; 
0x08049dbd: fadd dword ptr [ebx + 0x458914c0]; call 0x8d0d0a4b; or dword ptr [eax], 0xfffffff0; cld; call dword ptr [eax - 0x18]; 
0x080a4418: fadd dword ptr [ebx + 0x5e5b04c4]; pop edi; pop ebp; ret; 
0x080a60bb: fadd dword ptr [ebx + 0x5e5b0cc4]; pop edi; pop ebp; ret; 
0x08077169: fadd dword ptr [ebx + 0x5e5b14c4]; ret; 
0x08099ca5: fadd dword ptr [ebx - 0x377cf040]; add eax, dword ptr [ecx]; ret 0x458b; 
0x08049e45: fadd dword ptr [ebx - 0x72afeb40]; sub dword ptr [eax + esi*8], -4; call dword ptr [eax - 0x18]; 
0x080a1805: fadd dword ptr [ecx]; ret 0x48d; 
0x0807cef5: fadd qword ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx - 0x7c7227bb], cl; nop; jnp 0x34efb; call dword ptr [eax - 0x77]; 
0x080a7e6c: fadd qword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x08099243: fadd qword ptr [eax]; add byte ptr [eax], al; mov edi, ecx; call dword ptr gs:[0x10]; 
0x0808872f: fadd qword ptr [ecx - 3]; call dword ptr [eax - 0x18]; 
0x0807c320: fadd st(7); ret 0xffe0; 
0x0805e83f: fadd st(7); ret; 
0x080b280d: fcmovnb st(0), st(7); ret; 
0x080a904b: fcom dword ptr [eax - 0x73]; and dword ptr [eax + 0x36], 0xfffffffc; call dword ptr [eax + 0x6a]; 
0x080aa769: fcom dword ptr [esi + 0x2f68fffe]; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; sub dword ptr [eax - 0x69], -2; call dword ptr [eax - 0x18]; 
0x080aa6e3: fcom dword ptr [esi + 0x7468fffe]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; or dword ptr [ebp - 0x69], 0xfffffffe; call dword ptr [eax - 0x18]; 
0x080a9c5f: fcom dword ptr [esi - 0x7970002]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; add dword ptr [eax + ebx*4], -2; call dword ptr [eax - 0x18]; 
0x08079d1f: fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; jmp eax; 
0x08058947: fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x080a6bdc: fcomp dword ptr [ebx + 0x5e]; pop edi; ret; 
0x08077128: fcomp dword ptr [ebx + 0x5e]; ret; 
0x08074608: fcomp dword ptr [edi + 0x5b]; ret; 
0x0808733b: fcomp dword ptr [edx]; std; call dword ptr [edx + 0x50]; 
0x0806015f: fcomp dword ptr [esi + 0x5f]; pop ebp; ret; 
0x080a4ce0: fcomp qword ptr [esi]; add byte ptr [edx + 0x59], bl; pop eax; jmp dword ptr [eax]; 
0x08094e79: fcos; dec dword ptr [ebp - 0x1dadb79]; call dword ptr [eax + 0x68]; 
0x08054500: fcos; dec dword ptr [ebp - 0x3068b79]; call dword ptr [eax + 0x68]; 
0x08064bff: fcos; jmp dword ptr [ebp - 0x5f]; 
0x08094cbb: fcos; jmp dword ptr [esi - 0x70]; 
0x080ae270: fdiv dword ptr [esp + 4]; fstp st(0); add esp, 0x20; ret; 
0x0805b5f9: fdiv qword ptr [ebx + 0x54]; mov eax, dword ptr [ebp - 0x2c]; sub esp, 8; push -1; push dword ptr [eax]; call dword ptr [ebx + 0xc]; 
0x08058a20: fdiv qword ptr [esi + 0x6d]; sub esp, 4; push edi; push dword ptr [ebp + 8]; push eax; call dword ptr [ebx + 0x1c]; 
0x080ace17: fdiv st(1), st(0); inc dword ptr [ecx + 0x381e6c6]; add byte ptr [ebx - 0x77], dl; ret; 
0x0809d3c0: fdiv st(2), st(0); inc dword ptr [ebx - 0x17adf314]; xchg eax, esp; xchg ah, bh; dec dword ptr [ebp - 0x1c77b7d]; call dword ptr [eax + 0x6a]; 
0x08097233: fdiv st(5), st(0); inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x08091c17: fdiv st(7), st(0); dec dword ptr [edi]; mov dh, 0x56; or al, 0xf6; ret 0xf08; 
0x080542cb: fdiv st(7), st(0); jmp dword ptr [esi - 0x70]; 
0x080b2e86: fdivp st(4); call dword ptr [eax - 1]; 
0x0807cc06: fdivp st(4); inc dword ptr [0x683f7]; mov eax, dword ptr [eax + 0x1fa8]; ret; 
0x0807cbe6: fdivp st(4); inc dword ptr [0x68417]; mov eax, dword ptr [eax + 0x1fa0]; ret; 
0x08087bc0: fdivp st(5); inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x080aa53d: fdivr dword ptr [ecx]; ret 0x850f; 
0x08076c6c: fdivr dword ptr [esi]; jmp eax; 
0x0804a5c8: fdivr st(0), st(0); cld; call dword ptr [eax - 0x18]; 
0x0806034d: fdivr st(5); cld; call dword ptr [eax - 0x18]; 
0x08074bc4: fdivr st(7); pop ebx; ret; 
0x08074e6f: fdivr st(7); pop esi; pop ebx; ret; 
0x08060b8c: fiadd dword ptr [ebx + 0x1489f8e2]; and al, 0x89; aad 0x89; ret 0xeac1; 
0x080a65db: fiadd dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x080a20f0: fiadd dword ptr [ebx - 0x7274df3c]; sar ch, 0xff; ljmp [ecx]; ret 0xbd83; 
0x0806b463: fiadd dword ptr [ecx]; mov byte ptr [edx + edx*8 + 0xa2840f], 0; add dh, dh; ret 0x7501; 
0x08075365: fiadd word ptr [eax + 0x40]; inc eax; add esp, 0x100; sub eax, edx; ret; 
0x0809c77e: ficom word ptr [edx - 0x3b7c0004]; adc byte ptr [ebp - 0x1c47b7d], cl; call dword ptr [eax + 0x6a]; 
0x080921d2: fidiv dword ptr [ebx - 2]; dec dword ptr [ebp - 0x3068b79]; call dword ptr [eax + 0x68]; 
0x08089638: fidivr dword ptr [eax + 0xf0]; lea ebx, [ebx + 0x1a3c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08055851: fidivr dword ptr [ecx]; ret 0x820f; 
0x0808cadd: fidivr dword ptr [ecx]; ret 0xee7f; 
0x08097a20: fidivr dword ptr [ecx]; ret; 
0x0805ad5c: fild dword ptr [eax - 0x76da2b83]; ret 0x5b74; 
0x08077f92: fild dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x080672e9: fild dword ptr [eax]; add byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x08098629: fild dword ptr [ebp - 0x760d8b37]; ret; 
0x080674bc: fild dword ptr [edi]; add byte ptr [ebx - 0x39], dl; ret; 
0x080b3260: fild word ptr [ebx + 0x5e5b0cc4]; pop edi; pop ebp; ret; 
0x080a2696: fild word ptr [ecx]; ret; 
0x08079265: fimul dword ptr [ebx - 0x47fbdba4]; je 0x3126d; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x080995a5: fimul dword ptr [ebx - 0x47fbdba4]; jp 0x515ad; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x08077f25: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x08056229: fimul dword ptr [ecx - 0x4b77b]; ljmp [ecx]; ret 0x79e9; 
0x0805b899: fimul dword ptr [ecx]; ret 0x840f; 
0x08098c1a: fimul dword ptr [edi]; test dword ptr [edi - 0x48000000], ecx; or dword ptr [ecx], eax; add byte ptr [eax], al; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x080613de: fimul word ptr [eax - 0x3b7cffff]; or al, 0x8d; xor dword ptr [eax - 0x47], 0xfffffff7; call dword ptr [eax + 0x56]; 
0x0807eb81: fimul word ptr [ebp - 0x2cc377d]; call dword ptr [eax - 0x73]; 
0x080a7009: fimul word ptr [ebx - 0x721676e8]; push esi; call ebx; 
0x0808a041: fimul word ptr [ecx + 0x5f5e5bd8]; pop ebp; ret; 
0x080a5317: fist word ptr [esi]; std; call dword ptr [edx + 0x68]; 
0x080953e1: fistp qword ptr [esi]; jmp edi; 
0x0804a770: fisttp dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; mov eax, edx; int 0x80; 
0x080631d1: fisttp dword ptr [ecx + 0x5f5e5bd8]; pop ebp; ret; 
0x080a88a2: fisttp dword ptr [ecx + 0x5f5e5bd8]; ret; 
0x080ab2d9: fisttp dword ptr [edi]; inc ebp; ret 0xa365; 
0x08050e8f: fisttp dword ptr [edi]; inc ebp; ret 0xc483; 
0x0809588d: fisttp dword ptr [edi]; mov byte ptr [eax + eax - 0x61750000], bl; xchg eax, esp; add byte ptr [eax], al; add bh, al; ret 0x5f80; 
0x08049feb: fisttp dword ptr [edi]; test byte ptr [ebp - 0x7d000000], dh; ret; 
0x080b1c6b: fisttp word ptr [ebp + 0x74ffff5b]; and al, 0x10; push dword ptr [ebp + ebx*4 + 8]; push dword ptr [esp + 0x20]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x08071d70: fisttp word ptr [ecx + 0x5f5e5bf0]; ret; 
0x080683cd: fisub dword ptr [esi + 0xf]; jg 0x20414; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x0806894d: fisub dword ptr [esi + 0xf]; jg 0x20994; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x0806beac: fisub dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0806bc6c: fisub word ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x08099d4a: fisubr dword ptr [ecx]; ret 0xfa83; 
0x080b2b82: fisubr dword ptr [esi]; sti; inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x08098283: fld dword ptr [eax]; add byte ptr [eax], al; bsr eax, eax; add eax, edi; pop edi; ret; 
0x08077ad6: fld qword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x08077b09: fld qword ptr [eax]; add byte ptr [eax], al; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x08050a40: fld qword ptr [ebp - 0x769a8b40]; ret; 
0x0806728c: fld qword ptr [edi]; add byte ptr [ebx - 0x39], dl; ret; 
0x0807a80c: fld xword ptr [eax]; std; call dword ptr [eax - 0x18]; 
0x080ae26e: fld1; fdiv dword ptr [esp + 4]; fstp st(0); add esp, 0x20; ret; 
0x08070ee6: fldenv [esi + 0xf]; je 0x28f3a; xor byte ptr [esi + 0xf], ah; xlatb; ret; 
0x08071525: fldenv [esi + 0xf]; je 0x29574; xor byte ptr [esi + 0xf], ah; xlatb; ret; 
0x0806bf3c: fldenv [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x08070943: fldenv [esi + 0xf]; xlatb; ret; 
0x0806c800: fmul dword ptr [ebp + 0xf664049]; xlatb; ret; 
0x080ab345: fmul dword ptr [ebp - 0x166996d]; call dword ptr [edx - 0x73]; 
0x08078e60: fmul dword ptr [ebp - 0x2df2a7d]; call dword ptr [eax - 0x18]; 
0x08078d80: fmul dword ptr [ebp - 0x2df5f7d]; call dword ptr [eax - 0x18]; 
0x0807cd16: fmul dword ptr [ebp - 0x6846f7d]; call dword ptr [eax - 0x77]; 
0x080a79f3: fmul dword ptr [ebx + 0x650c244c]; xor ecx, dword ptr [0x14]; jne 0x5fa05; add esp, 0x1c; ret; 
0x0807eda1: fmul dword ptr [ecx + 0xf2c245c]; dec edi; ret; 
0x080928f8: fmul dword ptr [ecx - 0x48b7b]; inc edi; test dword ptr [ebx + edi*8 - 1], ebx; jmp dword ptr [eax]; 
0x080a5a29: fmul dword ptr [ecx - 0x76080836]; ret; 
0x08077441: fmul dword ptr [ecx]; ret 0x950f; 
0x0807f228: fmul dword ptr [edi]; dec edi; ret; 
0x08071d05: fmul dword ptr [edi]; inc edi; ret; 
0x0805145f: fmul dword ptr [edi]; mov esi, 0x390f2454; ret 0x8d0f; 
0x080a5b41: fmul dword ptr [edx + 0x74]; sub dl, byte ptr [eax - 0xa]; ret 0x7501; 
0x0807c0c4: fmul dword ptr [edx - 0x3b7c0001]; adc byte ptr [ebp - 0x38de8a40], al; ret 0x6f40; 
0x08095f3d: fmul qword ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x0805ca84: fmul qword ptr [ebp - 0x4474ff8a]; xchg eax, esp; add byte ptr [eax], al; add bh, al; ret 0x5f80; 
0x0807e4b2: fmul qword ptr [ebp - 0x6849f7d]; call dword ptr [eax - 0x73]; 
0x08099491: fmul qword ptr [ebx - 0x47f3dba4]; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x080ab56c: fmul qword ptr [ebx - 0x7cebdba4]; ret; 
0x0806b7a3: fnstcw word ptr [eax]; jne 0x239d0; pop ebx; ret; 
0x0806bdf1: fnstcw word ptr [eax]; jne 0x24570; pop ebx; ret; 
0x08057652: fnstcw word ptr [esi]; jmp ecx; 
0x08083fc3: fnstenv [eax - 4]; dec dword ptr [ebx - 0x72cbdba4]; and dword ptr [eax], 0x37; std; call dword ptr [eax + 0x68]; 
0x0805c647: fnstenv [esi + 0x16]; sub esp, 4; push ebp; push dword ptr [esp + 0x3c]; push edi; call dword ptr [eax + 0x20]; 
0x080abc42: frndint; jmp dword ptr [esi - 0x70]; 
0x0806bd0c: frstor dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x080780df: fsin; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0806c585: fstp dword ptr [ebx - 0x48]; add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x24590; neg eax; ret; 
0x080ae274: fstp st(0); add esp, 0x20; ret; 
0x08066771: fstp xword ptr [edi + edi*8 + 0x24548bff]; or byte ptr [ecx], cl; ret 0x3ee9; 
0x08079ca1: fsub dword ptr [ebx]; std; call dword ptr [eax + 0x6a]; 
0x0806bfdc: fsub dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0806f83c: fsub dword ptr [esi + 0xf]; xlatb; ret; 
0x0804f384: fsub dword ptr [esi + 1]; add byte ptr [ebx - 0x3b7cef3c], al; add al, 0x5b; pop esi; ret; 
0x0805aab3: fsubr qword ptr [edx]; push dword ptr [ebp - 0x34]; push ecx; push eax; push edi; call esi; 
0x080b1317: fsubr st(0); ret; 
0x080a90f9: fucomi st(3); jge 0x83063775; ret; 
0x0808a2b4: fucomp st(3); ret; 
0x08082c33: fucompp; mov esi, 0x89fffffb; ret 0xe283; 
0x080acd26: hlt; add byte ptr [eax], al; add byte ptr [ebp - 0x1662e7d], cl; call dword ptr [eax - 0x73]; 
0x0807e0aa: hlt; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xor ebp, 0x2d; std; call dword ptr [eax - 0x18]; 
0x08056526: hlt; add dword ptr [eax], eax; add byte ptr [ebx - 0x4737b], cl; inc dword ptr [eax - 0x42273]; call dword ptr [eax]; 
0x0805f083: hlt; add eax, dword ptr [esp + 8]; pop ebx; ret; 
0x080531c4: hlt; clc; cld; call dword ptr [eax - 0x18]; 
0x080531c4: hlt; clc; cld; call dword ptr [eax - 0x18]; sar byte ptr [esi - 1], cl; jmp dword ptr [esi - 0x70]; 
0x08094e78: hlt; fcos; dec dword ptr [ebp - 0x1dadb79]; call dword ptr [eax + 0x68]; 
0x0804fd2e: hlt; idiv esp; call dword ptr [eax + 0x55]; 
0x08068537: hlt; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x08067fde: hlt; mov dword ptr [edx - 8], eax; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x08096f33: hlt; mov eax, dword ptr [esp + 8]; pop ebx; add eax, ecx; ret; 
0x08049c66: hlt; mov ebx, dword ptr [esp]; ret; 
0x080b06e2: hlt; mov esi, dword ptr [ebp - 8]; add esp, 0x10; mov edi, dword ptr [ebp - 4]; leave; ret; 
0x080b04a2: hlt; mov esi, dword ptr [ebp - 8]; mov eax, 3; mov edi, dword ptr [ebp - 4]; leave; ret; 
0x080b048e: hlt; mov esi, dword ptr [ebp - 8]; mov edi, dword ptr [ebp - 4]; leave; ret; 
0x0804b5ac: hlt; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x08097eca: hlt; pop edi; ret; 
0x0805faeb: hlt; ret; 
0x080769b8: hlt; sub eax, dword ptr [eax]; add byte ptr [ebp - 0x2e4977d], cl; call dword ptr [eax - 0x73]; 
0x0806b4e7: hlt; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x080752a7: hlt; xor eax, eax; ret; 
0x0809e20b: idiv bh; call dword ptr [eax - 1]; 
0x0804bebe: idiv bh; dec dword ptr [ebp + 0x15509a]; add byte ptr [eax + 0xf0], bh; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08090445: idiv bh; dec dword ptr [ebx - 0x137ce7ec]; add al, 0x51; push esi; push dword ptr [ebp - 0x8a0]; call edx; 
0x08082c52: idiv bh; dec dword ptr [ebx - 0x72cfdba4]; and dword ptr [eax + 0x37], 0xfffffffd; call dword ptr [eax + 0x68]; 
0x0809091b: idiv bh; dec dword ptr [edi]; xchg eax, ebp; ret; 
0x0806188b: idiv bh; jmp dword ptr [esi - 0x70]; 
0x0809f2a9: idiv byte ptr [ecx]; ret 0x440f; 
0x0804bf7d: idiv byte ptr [edx + 1]; call dword ptr gs:[0x10]; 
0x0804a961: idiv dword ptr [esi]; jmp edi; 
0x080ab982: idiv ecx; call dword ptr [eax + 0x6a]; 
0x080544cd: idiv edi; call dword ptr [eax + 0x50]; 
0x0805437f: idiv edi; call dword ptr [eax + 0x51]; 
0x080524e3: idiv edi; call dword ptr [eax + 0x52]; 
0x080542ed: idiv edi; call dword ptr [eax + 0x53]; 
0x0805447c: idiv edi; call dword ptr [eax + 0x56]; 
0x0805317b: idiv edi; call dword ptr [eax + 0x6b]; 
0x0805309b: idiv edi; call dword ptr [eax - 0x18]; 
0x080905dc: idiv edi; call dword ptr [eax - 0x73]; 
0x08053186: idiv edi; call dword ptr [eax - 1]; 
0x08051dac: idiv edi; call dword ptr [eax]; 
0x08053209: idiv edi; call dword ptr [ebx + 0xf]; 
0x08053d94: idiv edi; call dword ptr [ebx - 0x77]; 
0x08051ae5: idiv edi; call dword ptr [ebx]; 
0x08052bca: idiv edi; call dword ptr [ecx + 0x6a]; 
0x0809179e: idiv edi; call dword ptr [ecx - 0x18]; 
0x08091230: idiv edi; call dword ptr [ecx - 0x75]; 
0x08051cb6: idiv edi; call dword ptr [edx + 0x50]; 
0x08090674: idiv edi; call dword ptr [edx + 0x51]; 
0x080535bf: idiv edi; call dword ptr [edx + 0x6a]; 
0x08054579: idiv edi; call dword ptr [edx - 0x18]; 
0x080530e1: idiv edi; call dword ptr [edx - 0x75]; 
0x080539ff: idiv edi; call dword ptr [edx - 1]; 
0x08052b73: idiv edi; call dword ptr [esi + 0x52]; 
0x08053f62: idiv edi; call dword ptr [esi + 0x6a]; 
0x0805369e: idiv edi; call dword ptr [esi - 0x18]; 
0x08055057: idiv edi; dec dword ptr [ebp + 0xb6]; add byte ptr [ebx - 0x4937b], cl; jmp dword ptr [ebp - 0x39]; 
0x0807ae2a: idiv edi; dec dword ptr [ebp - 0x2d5877d]; call dword ptr [eax - 0x73]; 
0x080531aa: idiv edi; dec dword ptr [ebp - 0x3068b79]; call dword ptr [eax + 0x68]; 
0x08056e4a: idiv edi; dec dword ptr [ebx - 0x4937b]; jmp dword ptr [ebp - 0x39]; 
0x080539f6: idiv edi; dec dword ptr [ebx - 0x4a0067fc]; insb byte ptr es:[edi], dx; idiv edi; call dword ptr [edx - 1]; 
0x080918ea: idiv edi; dec dword ptr [ebx - 0x4a0067fc]; pop esp; idiv edi; call dword ptr [edx - 1]; 
0x08051a5e: idiv edi; dec dword ptr [ebx - 0x4a76dbbb]; push esp; idiv edi; dec dword ptr [ecx - 0x8a77b]; jmp dword ptr [ebp - 0x75]; 
0x08083f38: idiv edi; dec dword ptr [ebx - 0x72cbdba4]; xor dword ptr [eax + 0x35], 0xfffffffd; call dword ptr [eax - 0x73]; 
0x0808f5ab: idiv edi; dec dword ptr [ebx - 0x7a76dbbb]; dec esp; idiv edi; jmp dword ptr [ebp - 0x75]; 
0x080525c5: idiv edi; dec dword ptr [ebx - 0x7c2776f0]; ret; 
0x080530db: idiv edi; dec dword ptr [ebx - 0x8af7b]; call dword ptr [edx - 0x75]; 
0x08053698: idiv edi; dec dword ptr [ebx - 0x8af7b]; call dword ptr [esi - 0x18]; 
0x080918e4: idiv edi; dec dword ptr [ebx - 0x8d34b]; dec dword ptr [ebx - 0x4a0067fc]; pop esp; idiv edi; call dword ptr [edx - 1]; 
0x080530d5: idiv edi; dec dword ptr [ebx - 0x8df73]; dec dword ptr [ebx - 0x8af7b]; call dword ptr [edx - 0x75]; 
0x08053690: idiv edi; dec dword ptr [ecx + 0x208d8bc2]; idiv edi; dec dword ptr [ebx - 0x8af7b]; call dword ptr [esi - 0x18]; 
0x0808eb20: idiv edi; dec dword ptr [ecx - 0x16e3db8c]; ret; 
0x080524dd: idiv edi; dec dword ptr [ecx - 0x88b6b]; call dword ptr [eax + 0x52]; 
0x08051a67: idiv edi; dec dword ptr [ecx - 0x8a77b]; jmp dword ptr [ebp - 0x75]; 
0x0808f5a5: idiv edi; dec dword ptr [ecx - 0x8bb7b]; dec dword ptr [ebx - 0x7a76dbbb]; dec esp; idiv edi; jmp dword ptr [ebp - 0x75]; 
0x0809142d: idiv edi; dec dword ptr [ecx - 0x8d763]; dec dword ptr [edi]; dec ecx; ret; 
0x0808f9d5: idiv edi; dec dword ptr [edi]; cmp byte ptr [edx - 2], 0xff; jmp dword ptr [esi - 0x70]; 
0x08091433: idiv edi; dec dword ptr [edi]; dec ecx; ret; 
0x0808f629: idiv edi; inc dword ptr [eax]; add byte ptr [eax], al; add bh, al; test dword ptr [edi + esi*8 - 1], ebp; call dword ptr [ebx]; 
0x08051adb: idiv edi; inc dword ptr [eax]; add byte ptr [eax], al; add bh, al; test dword ptr [edi + esi*8 - 1], edi; call dword ptr [ebx]; 
0x08053f2a: idiv edi; inc dword ptr [eax]; add byte ptr [eax], al; add bh, al; test dword ptr [edi + esi*8 - 1], esp; call dword ptr [eax]; 
0x080905d2: idiv edi; inc dword ptr [eax]; add byte ptr [eax], al; add byte ptr [ebp - 0x8777b], cl; call dword ptr [eax - 0x73]; 
0x080904fb: idiv edi; inc dword ptr [ebp - 0x787af040]; adc al, byte ptr [eax]; add byte ptr [ebx - 0x89b43], al; call dword ptr [ebx + 0xf]; 
0x08090e62: idiv edi; inc dword ptr [ebp - 0x7c7bf02e]; add byte ptr [eax], al; add byte ptr [ebx - 0x8bf43], al; call dword ptr [eax]; 
0x08053410: idiv edi; inc dword ptr [ebx - 0x1f3efe20]; add al, 0x89; ret 0xb60f; 
0x080542e4: idiv edi; inc dword ptr [ebx - 0x7276f714]; idiv edi; call dword ptr [eax + 0x53]; 
0x0807ae0c: idiv edi; inc dword ptr [ebx - 0x7c72f714]; and al, 0x2a; std; call dword ptr [edx + 0x50]; 
0x080908ee: idiv edi; inc esi; test dword ptr [ebx], esp; idiv edi; jmp dword ptr [eax]; 
0x0809074f: idiv edi; jmp dword ptr [eax]; 
0x08051a6d: idiv edi; jmp dword ptr [ebp - 0x75]; 
0x080acc6b: idiv edi; jmp dword ptr [esi - 0x70]; 
0x080a0eb1: idiv edi; jmp dword ptr [esi - 0x7b]; 
0x0805308f: idiv edi; lcall [eax + 0xf]; xchg eax, esp; ret 0x5652; 
0x0805293e: idiv edi; ljmp [ecx]; rcl byte ptr [eax + 0x52], 1; push dword ptr [ebp - 0x890]; call dword ptr [ebx + 0x1c]; 
0x08061f2a: idiv edi; mov dword ptr [eax + 0x4c0], edx; ret; 
0x08061f1e: idiv edi; mov dword ptr [eax + 0x4c4], edx; lea edx, [eax - 0x80650]; mov dword ptr [eax + 0x4c0], edx; ret; 
0x08053087: idiv edi; push dword ptr [ecx]; rol byte ptr [eax - 0x8c743], cl; lcall [eax + 0xf]; xchg eax, esp; ret 0x5652; 
0x0807ae06: idiv edi; test dword ptr [edi], 0xfff77d84; inc dword ptr [ebx - 0x7c72f714]; and al, 0x2a; std; call dword ptr [edx + 0x50]; 
0x0809bdcd: idiv edi; test dword ptr [edi], 0xfffb7c84; inc dword ptr [ebx - 0x7c72f714]; and al, 0x2a; std; call dword ptr [edx + 0x50]; 
0x0804fd1c: idiv esp; call dword ptr [eax + 0x55]; 
0x0806b507: imul byte ptr [ecx]; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x0806cf38: imul byte ptr [ecx]; ret 0x280f; 
0x08099c93: imul byte ptr [ecx]; ret 0x5589; 
0x0806b498: imul dword ptr [ecx]; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x0806d068: imul dword ptr [ecx]; ret 0x280f; 
0x080545ff: imul eax, dword ptr [eax], 0x74878d00; stc; cld; call dword ptr [eax + 0x68]; 
0x08062f45: imul eax, dword ptr [edx], 0; add byte ptr [ebx - 0x72efdb84], cl; xchg dword ptr [esi + ecx - 0x68720003], eax; push -2; cld; call dword ptr [eax - 0x73]; 
0x0804b823: imul eax, ecx, 0xc4830001; adc byte ptr [ebp - 0x107bf040], al; add dword ptr [eax], eax; add byte ptr [ebp - 0x137cf7b0], cl; or byte ptr [ebp - 0x30cd77d], cl; call dword ptr [eax + 0x52]; 
0x080998a1: imul ebp, dword ptr [edx], -2; inc dword ptr [ebx + 0x5e5b04c4]; ret; 
0x080abc41: imul ebx, ecx, -4; jmp dword ptr [esi - 0x70]; 
0x080a3293: imul edi, edx, 0x6ac381ff; sbb eax, 0xec830004; adc byte ptr [ebp - 0x1b5bb7d], cl; call dword ptr [eax + 0x6a]; 
0x08059ae8: imul edi, esi, 0x748dffff; add byte ptr es:[ebx - 0x38e7dbbc], cl; ret 0x5f80; 
0x08085a31: imul edx, dword ptr [ebp - 1], -1; mov dword ptr [esp], esi; call edi; 
0x08060556: imul edx, dword ptr [ebx + eax*4], -0x3c; sub al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x08076c67: in al, 0x1b; std; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x08058068: in al, 0x81; jmp eax; 
0x08095a68: in al, 0x83; in al, dx; add al, 0x53; push dword ptr [ebp + 8]; push esi; call dword ptr [eax + 0x1c]; 
0x0804aedb: in al, 0x83; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x080a45b8: in al, 0x89; inc ebp; mov al, 0xb8; and dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0809a590: in al, 0x89; shl dword ptr [0xfffff000], 0x29; ret 0xe183; 
0x08057fe0: in al, 0x8b; lahf; xchg eax, esp; add byte ptr [eax], al; add bh, al; ret 0x5f80; 
0x08095c5b: in al, 0x8b; sahf; xchg eax, esp; add byte ptr [eax], al; add bh, al; ret 0x5f80; 
0x080a9048: in al, 0x8d; inc ebp; fcom dword ptr [eax - 0x73]; and dword ptr [eax + 0x36], 0xfffffffc; call dword ptr [eax + 0x6a]; 
0x0805b42d: in al, 0xc7; rcl ah, 0x62; push cs; or bh, al; ret 0x5f80; 
0x0805b5d2: in al, 0xc7; rcl ah, 0x62; push cs; or bh, al; ret; 
0x0805b578: in al, 0xc7; ret; 
0x08095b3e: in al, 0xe9; insd dword ptr es:[edi], dx; cmp bh, bl; jmp dword ptr [esi - 0x70]; 
0x08096077: in al, 0xe9; out 0x35, eax; sti; jmp dword ptr [esi - 0x70]; 
0x0805836f: in al, 0xe9; push ebp; adc bh, bh; jmp dword ptr [esi - 0x70]; 
0x08066d78: in al, 0xe; std; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x080576f9: in al, 0xfa; cld; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x080aaa72: in al, 1; ret 0xde39; 
0x08079381: in al, dx; adc al, 0x8d; adc dword ptr [eax], 0x21; std; call dword ptr [eax - 0x18]; 
0x080795c1: in al, dx; adc al, 0x8d; cmp dword ptr [ecx], 0x21; std; call dword ptr [eax - 0x18]; 
0x080aba4f: in al, dx; adc al, 0xff; je 0x63a78; sbb byte ptr [ebp - 0x395cf80], cl; call dword ptr [eax - 0x18]; 
0x080a77c1: in al, dx; adc byte ptr [ebp - 0x16d367d], cl; call dword ptr [eax - 1]; 
0x080a3f1d: in al, dx; adc byte ptr [ebp - 0x1b3937d], cl; call dword ptr [eax + 0x6a]; 
0x080a329d: in al, dx; adc byte ptr [ebp - 0x1b5bb7d], cl; call dword ptr [eax + 0x6a]; 
0x080b2e81: in al, dx; adc byte ptr [ebp - 0x321cf7d], cl; call dword ptr [eax - 1]; 
0x08077038: in al, dx; adc byte ptr [ebx - 0x9dbdbac], cl; ret 0x7540; 
0x0805b4e7: in al, dx; add al, 0x29; ret 0x5052; 
0x080597c9: in al, dx; add al, 0x50; push edx; push dword ptr [esp + 0x24]; call ecx; 
0x0805c19b: in al, dx; add al, 0x50; push edx; push esi; call ecx; 
0x08078001: in al, dx; add al, 0x51; push 3; push ebx; call edx; 
0x08065841: in al, dx; add al, 0x51; push edx; push ebx; call eax; 
0x0809044c: in al, dx; add al, 0x51; push esi; push dword ptr [ebp - 0x8a0]; call edx; 
0x0805c72a: in al, dx; add al, 0x52; push ebp; push esi; call dword ptr [ebx + 0x38]; 
0x08095a6a: in al, dx; add al, 0x53; push dword ptr [ebp + 8]; push esi; call dword ptr [eax + 0x1c]; 
0x080528ae: in al, dx; add al, 0x53; push dword ptr [ebp - 0x884]; push dword ptr [ebp - 0x890]; call edx; 
0x0805740f: in al, dx; add al, 0x53; push dword ptr [esp + 0x3c]; push esi; call dword ptr [edx + 0x1c]; 
0x08051991: in al, dx; add al, 0x53; push eax; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x1c]; 
0x080b2871: in al, dx; add al, 0x55; push 0x28; push dword ptr [esp + 0x20]; mov eax, dword ptr [esp + 0x28]; call eax; 
0x0808914d: in al, dx; add al, 0x55; push dword ptr [esp + 0x20]; push esi; call edi; 
0x0805c64b: in al, dx; add al, 0x55; push dword ptr [esp + 0x3c]; push edi; call dword ptr [eax + 0x20]; 
0x08088e54: in al, dx; add al, 0x55; push ebx; push esi; call edi; 
0x08058929: in al, dx; add al, 0x55; push edi; push esi; call dword ptr [edx + 0x1c]; 
0x08088e31: in al, dx; add al, 0x55; push esi; push dword ptr [esp + 0x10]; call edi; 
0x08088e04: in al, dx; add al, 0x55; push esi; push dword ptr [esp + 0x20]; call edi; 
0x08051e73: in al, dx; add al, 0x56; push dword ptr [ebp - 0x898]; push dword ptr [ebp - 0x890]; call dword ptr [ebx + 0x1c]; 
0x0805329d: in al, dx; add al, 0x56; push dword ptr [ebp - 0x89c]; push dword ptr [ebp - 0x890]; call dword ptr [ebx + 0x1c]; 
0x08077fca: in al, dx; add al, 0x57; push 0; push ebx; call esi; 
0x08077fde: in al, dx; add al, 0x57; push 1; push ebx; call esi; 
0x08077ff1: in al, dx; add al, 0x57; push 2; push ebx; call esi; 
0x08058a24: in al, dx; add al, 0x57; push dword ptr [ebp + 8]; push eax; call dword ptr [ebx + 0x1c]; 
0x08095c7d: in al, dx; add al, 0x57; push dword ptr [ebp + 8]; push esi; call dword ptr [ebx + 0x1c]; 
0x080ad021: in al, dx; add al, 0x57; push esi; push ebp; call dword ptr [ebx]; 
0x080588c1: in al, dx; add al, 0x6a; adc byte ptr [edi + 0x56], dl; call dword ptr [eax + 0x1c]; 
0x0805f523: in al, dx; add al, 0x6a; add byte ptr [edx], ch; push ebp; call dword ptr [ebx + 0x2c]; 
0x080a8dba: in al, dx; add al, 0x83; ret; 
0x08052b6e: in al, dx; add al, 0x89; lea ebp, [edi + esi*8 - 1]; call dword ptr [esi + 0x52]; 
0x080a48f1: in al, dx; add al, 0x89; ret; 
0x080555fe: in al, dx; add al, 0x89; xchg eax, ebp; cmp bl, 0xff; call dword ptr [edx + 0x51]; 
0x08054c7d: in al, dx; add al, 0x89; xchg eax, ebp; cmp bl, 0xff; call dword ptr [edx - 1]; 
0x080912c7: in al, dx; add al, 0x89; xchg eax, ebp; idiv edi; call dword ptr [ebx - 0x77]; 
0x0809066f: in al, dx; add al, 0x89; xchg eax, ebp; inc eax; idiv edi; call dword ptr [edx + 0x51]; 
0x080864b1: in al, dx; add al, 0x8d; and dword ptr [eax + 0x12], 0xfffffffa; call dword ptr [esi + 0x31]; 
0x0809d051: in al, dx; add al, 0x8d; or dword ptr [eax + 0x3c], 0xfffffffe; call dword ptr [ebp + 0x56]; 
0x080885d8: in al, dx; add al, 0x8d; test dword ptr [esi + edi*8 - 1], ebx; dec dword ptr [ecx - 0x1bb73]; call dword ptr [eax - 1]; 
0x080acea1: in al, dx; add al, 0xff; je 0x64eca; xor al, 0x57; push esi; call dword ptr [ebp]; 
0x080b1b71: in al, dx; add al, 0xff; push dword ptr ss:[ebx + ebp + 4]; push dword ptr [esp + 0x20]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x080b0881: in al, dx; add al, 0xff; xor dword ptr [ecx + 0x5014244c], ecx; push dword ptr [esp + 0x10]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x0804d032: in al, dx; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0809b574: in al, dx; add dword ptr [eax], eax; add byte ptr [ecx], cl; ret 0xbc75; 
0x0807eb19: in al, dx; call 0x36640; or dword ptr [ebx + 0x195c], 2; add esp, 8; pop ebx; ret; 
0x0804fd1b: in al, dx; idiv esp; call dword ptr [eax + 0x55]; 
0x0804a232: in al, dx; jo 0x21fc; ret 0; 
0x08068372: in al, dx; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x08058631: in al, dx; or al, 0x31; call dword ptr [esi - 0x18]; 
0x080b31c8: in al, dx; or al, 0x50; call edx; 
0x0805e7e5: in al, dx; or al, 0x53; call dword ptr [esi + 0x10]; 
0x0805eacf: in al, dx; or al, 0x56; call dword ptr [ebp + 0x30]; 
0x080582b9: in al, dx; or al, 0x56; call dword ptr [ebx + 0x30]; 
0x0805e73a: in al, dx; or al, 0x56; call dword ptr [edi + 0x34]; 
0x0805cfef: in al, dx; or al, 0x56; call dword ptr [edi + 0x44]; 
0x08087b80: in al, dx; or al, 0x56; call eax; 
0x0807cc54: in al, dx; or al, 0x57; call 0x32fa0; mov dword ptr [esp], esi; call edi; 
0x080a5501: in al, dx; or al, 0x65; mov dword ptr [ebx], 0; push dword ptr [esp + 0x28]; mov eax, dword ptr [esp + 0x28]; call eax; 
0x0804b0b1: in al, dx; or al, 0x6a; add eax, 0xf2a4838d; cld; call dword ptr [eax - 1]; 
0x080a8c05: in al, dx; or al, 0x83; ret; 
0x0807aa2a: in al, dx; or al, 0x89; adc byte ptr [ebp - 0x2d6b87d], cl; call dword ptr [eax - 0x18]; 
0x0807a9ff: in al, dx; or al, 0x89; adc byte ptr [ebp - 0x2d6c87d], cl; call dword ptr [eax - 0x18]; 
0x0807a9d7: in al, dx; or al, 0x89; adc byte ptr [ebp - 0x2d6d47d], cl; call dword ptr [eax - 0x18]; 
0x08065b93: in al, dx; or al, 0x89; adc edx, dword ptr [eax - 0x18]; ret; 
0x080ac126: in al, dx; or al, 0x89; lea edi, [ebx + edi*8 - 1]; call dword ptr [eax - 0x18]; 
0x08094d82: in al, dx; or al, 0x89; lea esp, [ebx + edi*8 - 1]; call dword ptr [edx - 0x18]; 
0x0807a982: in al, dx; or al, 0x89; or dword ptr [ebp + edi*8 - 0x7c720001], 0xf; sub ebp, edi; call dword ptr [eax - 0x18]; 
0x080b1159: in al, dx; or al, 0x89; ret 0x458b; 
0x080b2915: in al, dx; or al, 0x89; ret; 
0x0808873f: in al, dx; or al, 0x89; test dword ptr [esi + edi*8 - 1], edx; call dword ptr [esi - 0x18]; 
0x08054574: in al, dx; or al, 0x89; xchg eax, ebp; inc esp; idiv edi; call dword ptr [edx - 0x18]; 
0x080a51b2: in al, dx; or al, 0x8b; je 0x5d1db; sbb byte ptr [ebp - 0x1b28f7d], cl; call dword ptr [eax + 0x56]; 
0x0808709b: in al, dx; or al, 0x8d; adc dword ptr [eax + 0x3a], -3; call dword ptr [eax - 0x18]; 
0x0804bafd: in al, dx; or al, 0x8d; adc dword ptr [eax], -0xd; cld; call dword ptr [eax - 0x18]; 
0x0804e2c1: in al, dx; or al, 0x8d; add dword ptr [eax - 1], -1; call dword ptr [eax - 0x75]; 
0x080b10db: in al, dx; or al, 0x8d; dec esi; add al, 0x89; ret 0x448d; 
0x08049dc5: in al, dx; or al, 0x8d; or dword ptr [eax], 0xfffffff0; cld; call dword ptr [eax - 0x18]; 
0x08087039: in al, dx; or al, 0x8d; or dword ptr [ecx + 0x3a], 0xfffffffd; call dword ptr [eax - 0x18]; 
0x08049e06: in al, dx; or al, 0x8d; sbb dword ptr [eax], -0x10; cld; call dword ptr [eax - 0x18]; 
0x0807aabd: in al, dx; or al, 0x8d; sbb dword ptr [ecx + 0x29], -3; call dword ptr [eax - 0x18]; 
0x08056c64: in al, dx; or al, 0x8d; xchg dword ptr [eax - 7], ecx; cld; call dword ptr [eax - 0x18]; 
0x0805afd3: in al, dx; or al, 0x8d; xchg eax, ebx; and al, 0xfd; cld; call dword ptr [edx - 0x18]; 
0x0809c244: in al, dx; or al, 0xba; add eax, 0x83000000; cmp dword ptr [0x3911430f], eax; ret 0x430f; 
0x0805b0b4: in al, dx; or al, 0xc7; rcl ah, 0x62; push cs; or bh, al; ret 0x5f80; 
0x08086501: in al, dx; or al, 0xff; je 0x3e52a; adc al, 0x8d; and dword ptr [eax + 0x12], 0xfffffffa; call dword ptr [eax - 1]; 
0x080aefc5: in al, dx; or al, 0xff; je 0x66fee; and al, 0x89; ret 0xd889; 
0x08087384: in al, dx; or al, 0xff; xor al, ch; ret; 
0x0807eae1: in al, dx; or bh, al; ret 0; 
0x08089931: in al, dx; or bh, al; ret 0x4da0; 
0x08065571: in al, dx; or bh, bh; je 0x1d59a; and al, 0x56; call eax; 
0x08065ae9: in al, dx; or bh, bh; je 0x1db12; and al, 0x53; call eax; 
0x080b07e1: in al, dx; or bh, bh; jne 0x687f2; push ebx; call dword ptr [ebp + 8]; 
0x080a8a53: in al, dx; or byte ptr [eax + 0x6a], dl; add al, ch; ret; 
0x08049e89: in al, dx; or byte ptr [eax - 0x73], dl; sub dword ptr [esi - 0x10], -4; call dword ptr [eax - 0x18]; 
0x08078e54: in al, dx; or byte ptr [eax], ch; add byte ptr [eax], cl; add byte ptr [ecx + 0x4589d445], cl; fmul dword ptr [ebp - 0x2df2a7d]; call dword ptr [eax - 0x18]; 
0x080958b5: in al, dx; or byte ptr [ebp + 0x50142444], cl; push esi; call dword ptr [ebx + 0x48]; 
0x0805bad0: in al, dx; or byte ptr [ebp + 0x50242444], cl; push esi; call dword ptr [edi + 0x48]; 
0x0805b767: in al, dx; or byte ptr [ebp + 0x50342444], cl; push esi; call dword ptr [edi + 0x48]; 
0x080593ab: in al, dx; or byte ptr [ebp + 0x503c2444], cl; push dword ptr [esp + 0x24]; call dword ptr [ebx + 0x48]; 
0x0805be09: in al, dx; or byte ptr [ebp + 0x50442444], cl; push esi; call dword ptr [ebx + 0x48]; 
0x0805e8a1: in al, dx; or byte ptr [ebp + 0x5150017e], cl; mov dword ptr [esp + 0x40], ecx; call dword ptr [ebx + 0xc]; 
0x08098c04: in al, dx; or byte ptr [ebp + 0x550c246c], cl; push ebx; call eax; 
0x080aa6fd: in al, dx; or byte ptr [ebp - 0x1676f7d], cl; call dword ptr [eax + 0x6a]; 
0x080a95c5: in al, dx; or byte ptr [ebp - 0x169cf7d], cl; call dword ptr [eax + 0x6a]; 
0x080a868d: in al, dx; or byte ptr [ebp - 0x16c576d], cl; call dword ptr [edx + 0x6a]; 
0x080a51d5: in al, dx; or byte ptr [ebp - 0x1b2817d], cl; call dword ptr [eax + 0x56]; 
0x080a4ab4: in al, dx; or byte ptr [ebp - 0x1b3117a], cl; call dword ptr [eax - 0x73]; 
0x0809cce4: in al, dx; or byte ptr [ebp - 0x1c27b7d], cl; jmp dword ptr [esi - 0x7f]; 
0x0808660a: in al, dx; or byte ptr [ebp - 0x1df8b7d], cl; call dword ptr [eax + 0x56]; 
0x080863a6: in al, dx; or byte ptr [ebp - 0x2c6b67d], cl; call dword ptr [eax - 1]; 
0x08086388: in al, dx; or byte ptr [ebp - 0x2c6bc6d], cl; call dword ptr [edx + 0x50]; 
0x0807ae10: in al, dx; or byte ptr [ebp - 0x2d5db7d], cl; call dword ptr [edx + 0x50]; 
0x08066fab: in al, dx; or byte ptr [ebp - 0x2ff1f7d], cl; call dword ptr [esi + 0x50]; 
0x0804fd17: in al, dx; or byte ptr [ebp - 0x308137d], cl; call dword ptr [eax + 0x55]; 
0x0804b836: in al, dx; or byte ptr [ebp - 0x30cd77d], cl; call dword ptr [eax + 0x52]; 
0x0804b818: in al, dx; or byte ptr [ebp - 0x30ce06d], cl; call dword ptr [edx + 0x50]; 
0x080b2d73: in al, dx; or byte ptr [ebp - 0x3240f6d], cl; call dword ptr [edx + 0x50]; 
0x080afe5d: in al, dx; or byte ptr [ebp - 0x363df7d], cl; call dword ptr [eax - 0x73]; 
0x080a72be: in al, dx; or byte ptr [ebp - 0x3da2f7d], cl; call dword ptr [eax - 0x73]; 
0x080a7329: in al, dx; or byte ptr [ebp - 0x3dd5f7d], cl; call dword ptr [eax - 0x73]; 
0x080a7329: in al, dx; or byte ptr [ebp - 0x3dd5f7d], cl; call dword ptr [eax - 0x73]; adc dword ptr [eax + 0x5000001a], -0x18; ret 0xf58c; 
0x0807eaee: in al, dx; or byte ptr [ebp - 0x669bf7d], cl; call dword ptr [eax - 0x73]; 
0x0805efa4: in al, dx; or byte ptr [ebx + 0x56], dl; call dword ptr [edi + 0x18]; 
0x0807bff2: in al, dx; or byte ptr [ebx + 0x6a142474], cl; add ecx, dword ptr [ebp - 0x1b2067d]; call dword ptr [eax - 1]; 
0x08087df4: in al, dx; or byte ptr [ebx], al; test dword ptr [esi + edi*8 - 1], eax; dec dword ptr [ecx - 0x1b773]; call dword ptr [eax - 1]; 
0x080524d6: in al, dx; or byte ptr [ecx + 0x688d89fb], cl; idiv edi; dec dword ptr [ecx - 0x88b6b]; call dword ptr [eax + 0x52]; 
0x08054378: in al, dx; or byte ptr [ecx + 0x6c9589fb], cl; idiv edi; call dword ptr [eax + 0x51]; 
0x0804e76f: in al, dx; or byte ptr [ecx - 0x1cb6b], cl; call dword ptr [eax - 1]; 
0x080542e8: in al, dx; or byte ptr [ecx - 0x89b73], cl; call dword ptr [eax + 0x53]; 
0x08087861: in al, dx; or byte ptr [ecx - 0x8f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x0809b377: in al, dx; or byte ptr [ecx], ch; ret 0x76ff; 
0x08098bb5: in al, dx; or byte ptr [edi + 0x53], dl; call eax; 
0x0805b600: in al, dx; or byte ptr [edx - 1], ch; push dword ptr [eax]; call dword ptr [ebx + 0xc]; 
0x080590eb: in al, dx; or byte ptr [edx - 1], ch; push dword ptr [ebx]; call dword ptr [eax + 0xc]; 
0x08058002: in al, dx; or byte ptr [edx], ch; push edi; call dword ptr [ebx + 8]; 
0x080a32d4: in al, dx; sbb al, 0xc7; ret; 
0x080614d2: in al, dx; sbb byte ptr [ebp - 0x2f1db70], cl; call dword ptr [edx - 0x73]; 
0x0805bb24: in al, dx; sbb byte ptr [ebx + 0x5e], 0x5f; ret; 
0x0805f755: in al, dx; sbb byte ptr [edx + 1], ch; call 0x170a0; add esp, 0x1c; ret; 
0x0806033a: in al, dx; std; cld; call dword ptr [eax - 0x73]; 
0x08098e57: in al, dx; std; jmp dword ptr [ebp - 0x77]; 
0x080719f7: in eax, 0; add byte ptr [eax], al; lea eax, [eax + 0xb]; pop edi; ret; 
0x0807e241: in eax, 0x5b; xor eax, eax; pop esi; pop edi; ret; 
0x080b2be2: in eax, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x08099f4a: in eax, 0x83; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x08098a63: in eax, 0xf; je 0x50a80; add eax, 2; ret; 
0x0807cac6: in eax, 0xfc; dec dword ptr [ebp - 0x2d2677d]; call dword ptr [eax - 0x73]; 
0x0807cae2: in eax, 0xfc; jmp dword ptr [esi - 0x70]; 
0x08067ddd: in eax, 2; lea edx, [edx - 0x73240]; cmovne eax, edx; ret; 
0x08067d1d: in eax, 2; lea edx, [edx - 0x7acc0]; cmovne eax, edx; ret; 
0x0806722d: in eax, 2; lea edx, [edx - 0x7c470]; cmovne eax, edx; ret; 
0x08076822: in eax, dx; add dword ptr [ebp - 0x57c03b0], ecx; add ecx, dword ptr [edi]; xchg eax, esi; ret 0xc085; 
0x0808f160: in eax, dx; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08068342: in eax, dx; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x080788c3: inc byte ptr [ebp - 0x748f8b40]; push eax; add al, 0xf6; ret 0x7401; 
0x08078970: inc byte ptr [ebx - 0x7401fba0]; inc ebx; add al, 0x89; ret 0xe083; 
0x0808f4cd: inc byte ptr [edx]; push esi; push edx; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x1c]; 
0x080a80f8: inc dword ptr [0x3cf07]; mov eax, 0x80e6f60; mov eax, dword ptr [eax]; ret; 
0x08088888: inc dword ptr [0x5c777]; mov eax, 0xfffffff0; add eax, dword ptr gs:[0]; ret; 
0x08088868: inc dword ptr [0x5c797]; mov eax, 0xfffffff4; add eax, dword ptr gs:[0]; ret; 
0x08088848: inc dword ptr [0x5c7b7]; mov eax, 0xfffffff8; add eax, dword ptr gs:[0]; ret; 
0x08088828: inc dword ptr [0x5c7d7]; mov edx, dword ptr [esp + 4]; mov eax, 0xffffffd8; mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x08085a88: inc dword ptr [0x5f577]; mov eax, dword ptr [eax + 0x1968]; ret; 
0x0807cc08: inc dword ptr [0x683f7]; mov eax, dword ptr [eax + 0x1fa8]; ret; 
0x0807cbe8: inc dword ptr [0x68417]; mov eax, dword ptr [eax + 0x1fa0]; ret; 
0x0807aee8: inc dword ptr [0x6a117]; lea eax, [eax + 0xa60]; ret; 
0x08060a78: inc dword ptr [0x84587]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x4bc], edx; ret; 
0x08060978: inc dword ptr [0x84687]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x186c], edx; ret; 
0x0805fdf8: inc dword ptr [0x85207]; mov eax, 0x80e5098; mov eax, dword ptr [eax]; ret; 
0x080a217f: inc dword ptr [eax + 0xf2a017e]; test byte ptr [ecx + eax], ch; add byte ptr [ebx - 0x23b63], cl; dec dword ptr [ebp - 0x1b72b7d]; call dword ptr [eax - 0x73]; 
0x08057952: inc dword ptr [eax + 0xf68017d]; test byte ptr [esi - 0x72ffffff], dh; inc ebp; add al, byte ptr [eax - 0x76fdf3b2]; aad 0x89; ret 0xa3e9; 
0x080944e7: inc dword ptr [eax - 0x41273]; call dword ptr [eax]; 
0x080564df: inc dword ptr [eax - 0x42273]; call dword ptr [eax]; 
0x0806722b: inc dword ptr [eax - 0x6d72fd1b]; nop; cmp edi, eax; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x08067ddb: inc dword ptr [eax - 0x6d72fd1b]; ror ch, 0xf8; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0809116c: inc dword ptr [eax - 0x8dc43]; jmp dword ptr [eax]; 
0x0808cb75: inc dword ptr [eax - 0xcf43]; jmp dword ptr [edi + 0x75]; 
0x0808c81d: inc dword ptr [eax - 0xcf43]; jmp dword ptr [edi - 0x75]; 
0x080924e3: inc dword ptr [eax]; add byte ptr [eax], al; add bh, al; test dword ptr [ebx + edi*8 - 1], ebx; jmp dword ptr [eax]; 
0x0808f62b: inc dword ptr [eax]; add byte ptr [eax], al; add bh, al; test dword ptr [edi + esi*8 - 1], ebp; call dword ptr [ebx]; 
0x08051add: inc dword ptr [eax]; add byte ptr [eax], al; add bh, al; test dword ptr [edi + esi*8 - 1], edi; call dword ptr [ebx]; 
0x08053f2c: inc dword ptr [eax]; add byte ptr [eax], al; add bh, al; test dword ptr [edi + esi*8 - 1], esp; call dword ptr [eax]; 
0x08093393: inc dword ptr [eax]; add byte ptr [eax], al; add byte ptr [ebp - 0x40b7b], cl; call dword ptr [eax - 0x73]; 
0x080acdf3: inc dword ptr [eax]; add byte ptr [eax], al; add byte ptr [ebp - 0x44b7b], cl; call dword ptr [ecx + 0x6a]; 
0x080905d4: inc dword ptr [eax]; add byte ptr [eax], al; add byte ptr [ebp - 0x8777b], cl; call dword ptr [eax - 0x73]; 
0x0809b033: inc dword ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx - 0xbf7b], cl; jmp dword ptr [esi - 0x70]; 
0x08053aad: inc dword ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], dh; rol bh, cl; test dword ptr [edi + esi*8 - 1], esp; call dword ptr [eax]; 
0x0809804c: inc dword ptr [eax]; add byte ptr [eax], al; jne 0x4fe80; xor eax, eax; pop edi; ret; 
0x0809a414: inc dword ptr [eax]; add byte ptr [edi], cl; xchg dword ptr [ebx - 0x7cfffffe], ebx; rcr byte ptr [ebx], 0x89; out 0x89, eax; ret 0x25; 
0x08060a57: inc dword ptr [eax]; add byte ptr [esi + 4], dh; ret; 
0x080749ef: inc dword ptr [eax]; je 0x2c9f4; inc eax; pop edi; ret; 
0x08074b93: inc dword ptr [eax]; je 0x2cb98; inc eax; pop edi; pop esi; ret; 
0x080925e3: inc dword ptr [ebp + 0x24850fdb]; add dword ptr [eax], eax; add byte ptr [ebx - 0x47f7b], cl; jmp dword ptr [ebp - 0x39]; 
0x080932bc: inc dword ptr [ebp + 0x5b850fc0]; adc dword ptr [eax], eax; add byte ptr [ebx - 0x46f43], al; call dword ptr [ebx + 0xf]; 
0x0805557a: inc dword ptr [ebp + 0x65850fc0]; adc byte ptr [eax], al; add byte ptr [eax - 0x47f43], al; call dword ptr [ebx + 0xf]; 
0x08094b82: inc dword ptr [ebp - 0x2276f040]; call 0xec88cb8c; or al, 0x8d; xchg dword ptr [eax - 7], ecx; cld; call dword ptr [eax - 0x18]; 
0x08098c88: inc dword ptr [ebp - 0x38388b40]; ret 0xffe0; 
0x080aba60: inc dword ptr [ebp - 0x3f6af040]; add esp, 0x1c; movzx eax, al; neg eax; ret; 
0x0808238f: inc dword ptr [ebp - 0x427af00a]; or byte ptr [eax], al; add byte ptr [ebx - 0x76efdb8c], cl; ret 0xb60f; 
0x08093a4f: inc dword ptr [ebp - 0x6c7bf040]; add byte ptr [eax], al; add byte ptr [ebx - 0x48f43], al; call dword ptr [eax]; 
0x08093129: inc dword ptr [ebp - 0x777bf040]; add byte ptr [eax], al; add byte ptr [ebx - 0x48f43], al; call dword ptr [eax]; 
0x080904fd: inc dword ptr [ebp - 0x787af040]; adc al, byte ptr [eax]; add byte ptr [ebx - 0x89b43], al; call dword ptr [ebx + 0xf]; 
0x08090e64: inc dword ptr [ebp - 0x7c7bf02e]; add byte ptr [eax], al; add byte ptr [ebx - 0x8bf43], al; call dword ptr [eax]; 
0x08064ecf: inc dword ptr [ebx + 0x13b90cec]; adc al, byte ptr [eax]; add byte ptr [ebx - 0x72ebdb8c], cl; xchg byte ptr [esi + ecx - 3], dl; dec dword ptr [ebp - 0x301e66a]; call dword ptr [eax - 0x73]; 
0x0807eb1e: inc dword ptr [ebx + 0x195c8b]; add byte ptr [edx], al; add esp, 8; pop ebx; ret; 
0x0807a9bb: inc dword ptr [ebx + 0x1ba10c4]; add byte ptr [eax], al; add byte ptr [ebp + 0x310874c0], al; rol byte ptr [eax - 0x6bf0ffc8], cl; ret 0xc0c7; 
0x0804a34e: inc dword ptr [ebx + 0x3b810c4]; add byte ptr [eax], al; add byte ptr [ebx - 0x38f3db84], cl; ret 0x68c0; 
0x0807e4ac: inc dword ptr [ebx + 0x45890cc4]; fmul qword ptr [ebp - 0x6849f7d]; call dword ptr [eax - 0x73]; 
0x080a3a20: inc dword ptr [ebx + 0x478910c4]; add al, 0x89; ret 0xc085; 
0x080b10d9: inc dword ptr [ebx + 0x4e8d0cec]; add al, 0x89; ret 0x448d; 
0x0807af4c: inc dword ptr [ebx + 0x5e5b04c4]; ret; 
0x080780e1: inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0805cd18: inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0805a437: inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x080b171d: inc dword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x080798fe: inc dword ptr [ebx + 0x5e5b3cc4]; pop edi; pop ebp; ret; 
0x080a4c6b: inc dword ptr [ebx + 0xf76fdfa]; add esp, 8; pop ebx; ret; 
0x0809c778: inc dword ptr [ebx - 0x17aaf314]; ficom word ptr [edx - 0x3b7c0004]; adc byte ptr [ebp - 0x1c47b7d], cl; call dword ptr [eax + 0x6a]; 
0x0809d3c2: inc dword ptr [ebx - 0x17adf314]; xchg eax, esp; xchg ah, bh; dec dword ptr [ebp - 0x1c77b7d]; call dword ptr [eax + 0x6a]; 
0x08053412: inc dword ptr [ebx - 0x1f3efe20]; add al, 0x89; ret 0xb60f; 
0x0805f009: inc dword ptr [ebx - 0x3b7c10dd]; add al, 0x5b; pop esi; ret; 
0x080760e0: inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x080a172f: inc dword ptr [ebx - 0x3e7c0025]; add dword ptr [edi], ecx; movsd dword ptr es:[edi], dword ptr [esi]; ret 0xe0d3; 
0x080ae41d: inc dword ptr [ebx - 0x3fcef73c]; pop ebx; ret; 
0x08054b58: inc dword ptr [ebx - 0x4ab43]; call dword ptr [eax]; 
0x080a1732: inc dword ptr [ebx - 0x5af0fe3f]; ret 0xe0d3; 
0x08054572: inc dword ptr [ebx - 0x6a76f314]; inc esp; idiv edi; call dword ptr [edx - 0x18]; 
0x080912c5: inc dword ptr [ebx - 0x6a76fb14]; idiv edi; call dword ptr [ebx - 0x77]; 
0x0808b7d7: inc dword ptr [ebx - 0x6af0cf08]; ret 0xf883; 
0x080542e6: inc dword ptr [ebx - 0x7276f714]; idiv edi; call dword ptr [eax + 0x53]; 
0x08060eea: inc dword ptr [ebx - 0x72aff314]; cmp eax, 0; std; call dword ptr [edi - 1]; 
0x08099536: inc dword ptr [ebx - 0x77cef3c]; push dword ptr [esi + edi - 0x77]; ret 0xe283; 
0x08056c62: inc dword ptr [ebx - 0x7872f314]; dec eax; stc; cld; call dword ptr [eax - 0x18]; 
0x08056e84: inc dword ptr [ebx - 0x7af00008]; ret; 
0x0807ae0e: inc dword ptr [ebx - 0x7c72f714]; and al, 0x2a; std; call dword ptr [edx + 0x50]; 
0x0809d04f: inc dword ptr [ebx - 0x7c72fb14]; dec eax; cmp al, 0xfe; call dword ptr [ebp + 0x56]; 
0x0807b391: inc dword ptr [ebx - 0x7c72fb14]; ret; 
0x080a3c48: inc dword ptr [ebx - 0xf76ef3c]; pop ebx; pop esi; pop edi; ret; 
0x08098141: inc dword ptr [ebx]; add byte ptr [eax], al; jne 0x4fe80; xor eax, eax; pop edi; ret; 
0x080b32db: inc dword ptr [ecx + 0x31d24c3]; add byte ptr [ebx + 0x1ff883], cl; add byte ptr [ebp + 0x314574c0], al; jmp dword ptr [esi - 0x70]; 
0x080b2e79: inc dword ptr [ecx + 0x32186c3]; add byte ptr [ebx - 0x7c72ef14], al; xor dh, bl; cld; call dword ptr [eax - 1]; 
0x080ace19: inc dword ptr [ecx + 0x381e6c6]; add byte ptr [ebx - 0x77], dl; ret; 
0x080aab5b: inc dword ptr [ecx + 0x3a4a4c3]; add byte ptr [ecx], bh; ret 0xa74; 
0x080a7bc8: inc dword ptr [ecx + 0x3d437c2]; add byte ptr [ebx - 0x39], dl; ret; 
0x080a3ab3: inc dword ptr [ecx + 0x4154cc6]; add byte ptr [ebp - 0x72efdbb4], cl; sahf; adc cl, byte ptr [esi + edi*8 - 1]; call dword ptr gs:[0x10]; 
0x0809ef9f: inc dword ptr [ecx + 0x46060c3]; add byte ptr [ebx - 0x38ebdb8c], cl; ret 0; 
0x08099998: inc dword ptr [ecx + 0x4b667c2]; add byte ptr [ebx - 0x48], dl; sub eax, 0x8b000000; pop esp; and al, 8; int 0x80; 
0x080985b8: inc dword ptr [ecx + 0x4ca47c2]; add byte ptr [ebx - 0x39], dl; ret; 
0x08086dd7: inc dword ptr [ecx + 0x5e228c6]; add byte ptr [ebx - 0x77], dl; ret; 
0x0807e269: inc dword ptr [ecx + 0x66d96c6]; add byte ptr [ebx - 0x77], dl; ret; 
0x080795b9: inc dword ptr [ecx + 0x6ba46c3]; add byte ptr [ebx - 0x7c72eb14], al; cmp dword ptr [ecx], esp; std; call dword ptr [eax - 0x18]; 
0x08079379: inc dword ptr [ecx + 0x6bc86c3]; add byte ptr [ebx - 0x7c72eb14], al; adc byte ptr [ecx], ah; std; call dword ptr [eax - 0x18]; 
0x080674b8: inc dword ptr [ecx + 0x7db47c2]; add byte ptr [ebx - 0x39], dl; ret; 
0x08067288: inc dword ptr [ecx + 0x7dd77c2]; add byte ptr [ebx - 0x39], dl; ret; 
0x08092fbd: inc dword ptr [ecx]; add byte ptr [eax], al; add bh, al; test dword ptr [ebx + edi*8 - 1], ebx; jmp dword ptr [eax]; 
0x08055c0b: inc dword ptr [ecx]; add byte ptr [eax], al; add bh, al; test dword ptr [ebx + edi*8 - 1], edx; call dword ptr [eax]; 
0x08098131: inc dword ptr [ecx]; add byte ptr [eax], al; jne 0x4fe80; xor eax, eax; pop edi; ret; 
0x08076c6a: inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x080953df: inc dword ptr [ecx]; fistp qword ptr [esi]; jmp edi; 
0x08057650: inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x0804a95f: inc dword ptr [ecx]; idiv dword ptr [esi]; jmp edi; 
0x0809ba02: inc dword ptr [ecx]; ret 0x9789; 
0x0804ec4d: inc dword ptr [ecx]; ret 0xd089; 
0x0809b267: inc dword ptr [ecx]; ret 0xf029; 
0x0808cc35: inc dword ptr [ecx]; ret; 
0x08098151: inc dword ptr [edi]; add byte ptr [eax], al; jne 0x4fe80; xor eax, eax; pop edi; ret; 
0x0809bd2d: inc dword ptr [edi]; mov eax, 0x80e5cd4; push dword ptr [ebp + 0x18]; call dword ptr [eax]; 
0x08082b9d: inc dword ptr [esp + edi*8 + 0x245c8bff]; xor byte ptr [ebp - 0x2c89f7d], cl; call dword ptr [eax - 0x73]; 
0x0808340f: inc eax; aaa; std; call dword ptr [eax + 0x68]; 
0x080832c3: inc eax; aaa; std; call dword ptr [eax - 0x73]; 
0x080616da: inc eax; adc al, 0x89; dec eax; adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0807194c: inc eax; adc byte ptr [ebp - 0x74f18a2e], al; inc esp; and al, 0xc; pop edi; ret; 
0x08059d34: inc eax; adc byte ptr [ebx + 0x5e5b04c4], al; jmp eax; 
0x08071a5a: inc eax; add al, 0x5f; ret; 
0x080a4cc5: inc eax; add al, 0x65; sub eax, dword ptr [0]; ret; 
0x0807e701: inc eax; add al, 0x89; loope 0x3668f; inc ebp; mov esp, 0x8929c083; ret 0x25; 
0x08049e84: inc eax; add al, 0x8b; add byte ptr [ebx - 0x72aff714], al; sub dword ptr [esi - 0x10], -4; call dword ptr [eax - 0x18]; 
0x0809b3c5: inc eax; add al, byte ptr [eax]; add byte ptr [ebx + 0x508d084e], cl; jmp dword ptr [ecx]; 
0x08075368: inc eax; add esp, 0x100; sub eax, edx; ret; 
0x08096a6f: inc eax; and al, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x080a9044: inc eax; and byte ptr [ecx + 0x458de445], cl; fcom dword ptr [eax - 0x73]; and dword ptr [eax + 0x36], 0xfffffffc; call dword ptr [eax + 0x6a]; 
0x080796e0: inc eax; and byte ptr [ecx], al; pop ebx; ret; 
0x0805e8ab: inc eax; call dword ptr [ebx + 0xc]; 
0x08075433: inc eax; cmp cl, 0; je 0x2d43a; inc eax; sub eax, dword ptr [esp + 4]; ret; 
0x080b01d9: inc eax; dec eax; ret; 
0x080b0249: inc eax; dec esp; ret; 
0x080ae26d: inc eax; fld1; fdiv dword ptr [esp + 4]; fstp st(0); add esp, 0x20; ret; 
0x08090737: inc eax; idiv edi; call dword ptr [eax]; 
0x08090673: inc eax; idiv edi; call dword ptr [edx + 0x51]; 
0x080904fa: inc eax; idiv edi; inc dword ptr [ebp - 0x787af040]; adc al, byte ptr [eax]; add byte ptr [ebx - 0x89b43], al; call dword ptr [ebx + 0xf]; 
0x0805f008: inc eax; inc dword ptr [ebx - 0x3b7c10dd]; add al, 0x5b; pop esi; ret; 
0x08075367: inc eax; inc eax; add esp, 0x100; sub eax, edx; ret; 
0x08075366: inc eax; inc eax; inc eax; add esp, 0x100; sub eax, edx; ret; 
0x0804a491: inc eax; int 0x80; 
0x08069f2d: inc eax; jne 0x21fa0; movzx ecx, byte ptr [eax + 7]; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x08070505: inc eax; jne 0x285d0; lea eax, [edi + 7]; pop edi; ret; 
0x08070558: inc eax; jne 0x28640; lea eax, [edi + 0xf]; pop edi; ret; 
0x08070479: inc eax; jne 0x28650; lea eax, [edi + 0xf]; pop edi; ret; 
0x080703d6: inc eax; jne 0x28650; lea eax, [edi + 7]; pop edi; ret; 
0x080709a1: inc eax; jne 0x28ad0; lea eax, [edi + 7]; pop edi; ret; 
0x080709f4: inc eax; jne 0x28b30; lea eax, [edi + 0xf]; pop edi; ret; 
0x08071241: inc eax; jne 0x292f0; lea eax, [edx + 7]; ret; 
0x08071294: inc eax; jne 0x29350; lea eax, [edx + 0xf]; ret; 
0x08071894: inc eax; jne 0x29c49; add eax, 7; pop edi; ret; 
0x080718e4: inc eax; jne 0x29c71; add eax, 0xf; pop edi; ret; 
0x080ae402: inc eax; jne 0x66428; mov eax, dword ptr [edx + 0x5c]; add esp, 8; pop ebx; ret; 
0x0809e0fe: inc eax; lea ebx, [eax + eax*4]; shl ebx, 4; add ebx, dword ptr [esp + 0x44]; push dword ptr [esp + 0x38]; call dword ptr [ebx + 0x38]; 
0x0809726a: inc eax; lea edx, [edx - 0x4ce70]; cmove eax, edx; ret; 
0x08067cda: inc eax; lea edx, [edx - 0x74320]; cmove eax, edx; ret; 
0x080671ea: inc eax; lea edx, [edx - 0x749a0]; cmove eax, edx; ret; 
0x080998d1: inc eax; lea edx, [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x080ab0d4: inc eax; mov eax, 0x180; mov ebx, 0x3005; call dword ptr gs:[0x10]; 
0x08071ab6: inc eax; or al, 0x5f; ret; 
0x080a9ada: inc eax; or al, 0x83; ret 0x8501; 
0x08060dd4: inc eax; or al, 0x83; ret; 
0x08060e9c: inc eax; or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx + 0x5e5b3858], cl; ret; 
0x0804c973: inc eax; or byte ptr [ebp - 0x74358a40], al; inc ebx; add al, 0x83; ret; 
0x080b02e9: inc eax; pop eax; ret; 
0x080751c0: inc eax; pop ebp; pop ebx; pop esi; pop edi; ret; 
0x08074b97: inc eax; pop edi; pop esi; ret; 
0x08067f8c: inc eax; pop edi; ret; 
0x080719c5: inc eax; pop es; pop edi; ret; 
0x080b0299: inc eax; pop esp; ret; 
0x08075ae9: inc eax; push 0x7401f883; adc byte ptr [ebx + 0x1b7402f8], al; xor eax, eax; ret; 
0x08071ad6: inc eax; push cs; pop edi; ret; 
0x08098884: inc eax; push eax; push dword ptr [ebp]; call esi; 
0x080b0289: inc eax; push eax; ret; 
0x08067d21: inc eax; push ebx; clc; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x08065ebe: inc eax; push edi; push ebp; call eax; 
0x08071a76: inc eax; push es; pop edi; ret; 
0x080b02f9: inc eax; push esp; ret; 
0x0808883e: inc eax; ret; 
0x0808d0d6: inc eax; sbb al, byte ptr [eax]; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x08075439: inc eax; sub eax, dword ptr [esp + 4]; ret; 
0x0805d63f: inc eax; sub esp, 0xc; push esi; call dword ptr [edi + 0x44]; 
0x080749ea: inc eax; test ecx, 0xff0000; je 0x2c9f4; inc eax; pop edi; ret; 
0x0807eaf2: inc eax; xchg eax, esi; stc; call dword ptr [eax - 0x73]; 
0x080a93be: inc ebp; aam 0x56; call dword ptr [eax]; 
0x0805b5fd: inc ebp; aam 0x83; in al, dx; or byte ptr [edx - 1], ch; push dword ptr [eax]; call dword ptr [ebx + 0xc]; 
0x08078e5c: inc ebp; aam 0x89; inc ebp; fmul dword ptr [ebp - 0x2df2a7d]; call dword ptr [eax - 0x18]; 
0x08078d7c: inc ebp; aam 0x89; inc ebp; fmul dword ptr [ebp - 0x2df5f7d]; call dword ptr [eax - 0x18]; 
0x0805ad2a: inc ebp; aam 0x89; ret 0xf889; 
0x08086eff: inc ebp; adc al, 0x89; inc ebp; les ecx, ptr [ebx - 0x194472d0]; sub edi, ebp; jmp dword ptr [ebp - 0x75]; 
0x0809f72a: inc ebp; adc bh, al; ret 0x4d84; 
0x08054658: inc ebp; adc byte ptr [ecx - 0x4737b], cl; jmp dword ptr [ebp - 0x5f]; 
0x08090af9: inc ebp; adc byte ptr [ecx], bh; ret; 
0x080577d9: inc ebp; add al, byte ptr [eax - 0x7605f39a]; aad 0x89; ret 0x28e9; 
0x0805795e: inc ebp; add al, byte ptr [eax - 0x76fdf3b2]; aad 0x89; ret 0xa3e9; 
0x080a8214: inc ebp; add byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x08050071: inc ebp; add byte ptr [ebx - 0x3a7cfe11], al; add al, 0x89; add ecx, dword ptr [ebx - 0x7cfbdbbc]; ret; 
0x0808117b: inc ebp; add dword ptr [eax], eax; add byte ptr [ebx + 0x247c8b06], cl; cmp al, 0x89; ret 0xf989; 
0x08051a62: inc ebp; and al, 0x89; mov ch, 0x54; idiv edi; dec dword ptr [ecx - 0x8a77b]; jmp dword ptr [ebp - 0x75]; 
0x0808f5af: inc ebp; and al, 0x89; test dword ptr [edi + esi*8 - 1], ecx; jmp dword ptr [ebp - 0x75]; 
0x0805bd0a: inc ebp; and byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; jmp eax; 
0x08049dc2: inc ebp; call 0x8d0d0a4b; or dword ptr [eax], 0xfffffff0; cld; call dword ptr [eax - 0x18]; 
0x080a2d43: inc ebp; cld; call dword ptr [eax - 1]; 
0x080a0230: inc ebp; cwde; add esp, 0x20; lea esi, [esi]; call eax; 
0x08049dbc: inc ebp; fadd dword ptr [ebx + 0x458914c0]; call 0x8d0d0a4b; or dword ptr [eax], 0xfffffff0; cld; call dword ptr [eax - 0x18]; 
0x08099ca4: inc ebp; fadd dword ptr [ebx - 0x377cf040]; add eax, dword ptr [ecx]; ret 0x458b; 
0x08049e44: inc ebp; fadd dword ptr [ebx - 0x72afeb40]; sub dword ptr [eax + esi*8], -4; call dword ptr [eax - 0x18]; 
0x080a904a: inc ebp; fcom dword ptr [eax - 0x73]; and dword ptr [eax + 0x36], 0xfffffffc; call dword ptr [eax + 0x6a]; 
0x08078e5f: inc ebp; fmul dword ptr [ebp - 0x2df2a7d]; call dword ptr [eax - 0x18]; 
0x08078d7f: inc ebp; fmul dword ptr [ebp - 0x2df5f7d]; call dword ptr [eax - 0x18]; 
0x0807cd15: inc ebp; fmul dword ptr [ebp - 0x6846f7d]; call dword ptr [eax - 0x77]; 
0x08095f3c: inc ebp; fmul qword ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x0807e4b1: inc ebp; fmul qword ptr [ebp - 0x6849f7d]; call dword ptr [eax - 0x73]; 
0x080a9047: inc ebp; in al, 0x8d; inc ebp; fcom dword ptr [eax - 0x73]; and dword ptr [eax + 0x36], 0xfffffffc; call dword ptr [eax + 0x6a]; 
0x0805b577: inc ebp; in al, 0xc7; ret; 
0x08095b3d: inc ebp; in al, 0xe9; insd dword ptr es:[edi], dx; cmp bh, bl; jmp dword ptr [esi - 0x70]; 
0x08096076: inc ebp; in al, 0xe9; out 0x35, eax; sti; jmp dword ptr [esi - 0x70]; 
0x0805836e: inc ebp; in al, 0xe9; push ebp; adc bh, bh; jmp dword ptr [esi - 0x70]; 
0x080b02c8: inc ebp; inc esp; and al, 0x1c; add esp, 0x28; pop ebx; ret; 
0x08078ee0: inc ebp; les ecx, ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x08086f02: inc ebp; les ecx, ptr [ebx - 0x194472d0]; sub edi, ebp; jmp dword ptr [ebp - 0x75]; 
0x0804c1b2: inc ebp; les edx, ptr [eax - 0x18]; push es; ret 2; 
0x080a0a9d: inc ebp; lodsb al, byte ptr [esi]; call eax; 
0x0804b8d1: inc ebp; mov ah, 0x83; shl byte ptr [esi], 0x89; ret 0x25; 
0x0809ffb3: inc ebp; mov al, 0x8b; add byte ptr [ebx], al; add ecx, dword ptr [ebx - 0x247a73a3]; jne 0x57e8c; call eax; 
0x080a0ee4: inc ebp; mov al, 0x8b; add byte ptr [ebx], al; inc edx; add al, 0x89; ret 0x858b; 
0x080a053a: inc ebp; mov al, 0x8b; inc esi; add al, 0x89; ret; 
0x080a45ba: inc ebp; mov al, 0xb8; and dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x080a98cc: inc ebp; mov eax, 0x6f2cc0c7; push cs; or byte ptr [ecx - 0x8f63], cl; inc edi; ret; 
0x0804c4a2: inc ebp; mov edi, es; ret 0x6ef4; 
0x08078d77: inc ebp; mov esp, 0x4589c789; aam 0x89; inc ebp; fmul dword ptr [ebp - 0x2df5f7d]; call dword ptr [eax - 0x18]; 
0x08058c9d: inc ebp; mov esp, 0x5250d029; push edi; call dword ptr [ebx + 0x38]; 
0x0807e706: inc ebp; mov esp, 0x8929c083; ret 0x25; 
0x0804c1e0: inc ebp; mov word ptr [ebp - 0x38ec8b40], es; ret 0x6ef4; 
0x080a0eaa: inc ebp; mov word ptr [ebp - 0xd7af040], es; idiv edi; jmp dword ptr [esi - 0x7b]; 
0x080a0366: inc ebp; movsb byte ptr es:[edi], byte ptr [esi]; add esp, 0x20; mov dword ptr [ebp - 0x5c], edx; call eax; 
0x080a0f20: inc ebp; movsb byte ptr es:[edi], byte ptr [esi]; call eax; 
0x08060a7b: inc ebp; or byte ptr [eax], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x4bc], edx; ret; 
0x080877ec: inc ebp; or byte ptr [ecx - 0x8b7b], cl; jmp dword ptr [ebp - 0x75]; 
0x0808bb13: inc ebp; or byte ptr [edi], 0xb6; push eax; or al, 0x89; sal esi, 1; ret 0xf40; 
0x0808abf6: inc ebp; or byte ptr [edi], 0xb6; push eax; or al, 0xf6; ret 0x7540; 
0x0806c52a: inc ebp; pop ebx; ret; 
0x0809abb7: inc ebp; push ebp; or byte ptr [ecx + 0x44898055], 0xb7; adc al, 0x83; mov byte ptr [ecx], 0xe9; ret 0xfffe; 
0x080787a6: inc ebp; ret 0x4189; 
0x08078965: inc ebp; ret 0x4389; 
0x080676fc: inc ebp; ret 0x4401; 
0x0807f1d9: inc ebp; ret 0x4489; 
0x0807cced: inc ebp; ret 0x4589; 
0x080964b6: inc ebp; ret 0x4689; 
0x08067236: inc ebp; ret 0x66c3; 
0x0805e6c2: inc ebp; ret 0x689; 
0x08060abe: inc ebp; ret 0x8189; 
0x080755b4: inc ebp; ret 0x82eb; 
0x0809b3d4: inc ebp; ret 0x8789; 
0x08083585: inc ebp; ret 0x948b; 
0x080ab2db: inc ebp; ret 0xa365; 
0x08050e91: inc ebp; ret 0xc483; 
0x080a1a2e: inc ebp; ret 0xe083; 
0x080803d8: inc ebp; ret 0xea89; 
0x08095b7e: inc ebp; ret 0xec83; 
0x080a5cd6: inc ebp; rol byte ptr [ecx], 1; ret; 
0x0807851d: inc ebp; ror byte ptr [ebp + 0x5e5bf465], 0x5f; pop ebp; ret; 
0x0809a2fe: inc ebp; ror byte ptr [ebp + 0x5e5bf465], 1; pop edi; pop ebp; ret; 
0x08088b3e: inc ebp; sar byte ptr [esi + 8], 1; mov eax, 0xae; call dword ptr gs:[0x10]; 
0x0804d14f: inc ebp; sub byte ptr [eax], al; add byte ptr [eax], al; add bh, al; ret 0; 
0x080999c7: inc ebp; sub esi, edi; jmp dword ptr [esi - 0x70]; 
0x0808b870: inc ebp; test byte ptr [ecx], bh; ret; 
0x080abd39: inc ebx; adc al, 0x83; les ebp, ptr [eax]; pop ebx; ret; 
0x0809c24f: inc ebx; adc dword ptr [ecx], edi; ret 0x430f; 
0x0804c97a: inc ebx; add al, 0x83; ret; 
0x0805ba67: inc ebx; add al, 0x89; inc ebx; or byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x0807888e: inc ebx; add al, 0x89; ret 0xe083; 
0x08077f44: inc ebx; add byte ptr [eax], al; ret; 
0x0805d5ad: inc ebx; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; add dword ptr [eax], -3; cld; call dword ptr [eax - 0x18]; 
0x0805e99b: inc ebx; and byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; jmp eax; 
0x0808638c: inc ebx; cmp ebp, edi; call dword ptr [edx + 0x50]; 
0x080b1349: inc ebx; dec dword ptr [ecx + 0x48d2404]; ret 0x188b; 
0x08056e49: inc ebx; idiv edi; dec dword ptr [ebx - 0x4937b]; jmp dword ptr [ebp - 0x39]; 
0x080ab359: inc ebx; mov al, byte ptr [0x768dffff]; add byte ptr [ebx - 0x72ebdba4], cl; cmp dword ptr [eax - 0x67], -2; call dword ptr [eax - 0x73]; 
0x080a4d8a: inc ebx; or al, 0x83; les ebp, ptr [eax]; pop ebx; ret; 
0x080a7a68: inc ebx; or al, 0x83; les esp, ptr [ebx + ebx*2]; pop esi; ret; 
0x080597fb: inc ebx; or al, 1; ret 0xc101; 
0x080a78c9: inc ebx; or byte ptr [ebx + 0x10891852], cl; add esp, 4; pop ebx; pop esi; ret; 
0x080a78e1: inc ebx; or byte ptr [ecx + 0x4c48310], cl; pop ebx; pop esi; ret; 
0x0805ba6a: inc ebx; or byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x080672a3: inc ebx; or dl, byte ptr [eax]; pop ebx; cmovne eax, ecx; ret; 
0x080603cf: inc ebx; push ebx; or byte ptr [ecx + 0x29182454], cl; ret 0x5489; 
0x0809c254: inc ebx; ret 0xe883; 
0x080ad320: inc ebx; ret; 
0x080597f8: inc ebx; sbb al, 0x89; inc ebx; or al, 1; ret 0xc101; 
0x0805e34e: inc ebx; sbb byte ptr [ecx - 0x3fceefbd], cl; add esp, 4; pop ebx; pop esi; ret; 
0x080a527d: inc ebx; std; call dword ptr [ebp + 0x57]; 
0x08077fdc: inc ebx; sub esp, 4; push edi; push 1; push ebx; call esi; 
0x0805fa8a: inc ebx; xor byte ptr [ecx + 0x30738906], cl; add esp, 4; pop ebx; pop esi; ret; 
0x08076310: inc ecx; adc al, 0x8d; xchg dword ptr [eax - 0x760006f0], edx; inc ecx; adc bh, al; ret 0; 
0x08076319: inc ecx; adc bh, al; ret 0; 
0x0806f406: inc ecx; add al, 0x66; mov dword ptr [edx + 4], eax; lea eax, [edx + 5]; pop edi; ret; 
0x0806f546: inc ecx; add al, 0x66; mov dword ptr [edx + 4], eax; lea eax, [edx + 5]; ret; 
0x0806dba6: inc ecx; add al, 0x66; mov dword ptr [edx + 4], eax; mov eax, edi; pop edi; ret; 
0x0806dcd6: inc ecx; add al, 0x66; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x080862dc: inc ecx; add al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x080787b8: inc ecx; add al, 0x89; ret 0xe083; 
0x080559f3: inc ecx; add al, 0x89; ret 0xeac1; 
0x0807afcb: inc ecx; add byte ptr [edx], 0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0806dca7: inc ecx; add cl, byte ptr [eax - 0x2f76fdbe]; ret; 
0x0806db87: inc ecx; add cl, byte ptr [eax - 0x776fdbe]; pop edi; ret; 
0x080700ab: inc ecx; add eax, 0x42130f66; add eax, 0x5f0c428d; ret; 
0x0806f425: inc ecx; add ecx, dword ptr [ecx + 0x428d0342]; push es; pop edi; ret; 
0x0806f555: inc ecx; add ecx, dword ptr [ecx + 0x428d0342]; push es; ret; 
0x0806dce5: inc ecx; add ecx, dword ptr [ecx - 0x2f76fcbe]; ret; 
0x0806dbb5: inc ecx; add ecx, dword ptr [ecx - 0x776fcbe]; pop edi; ret; 
0x08092d28: inc ecx; clc; add dl, byte ptr [eax + 0x51]; push esi; call dword ptr [ebx + 0x1c]; 
0x08088219: inc ecx; dec dword ptr [ecx - 0x1bb43]; dec dword ptr [ecx - 0x1cf7b]; jmp dword ptr [ecx]; 
0x08097268: inc ecx; inc eax; lea edx, [edx - 0x4ce70]; cmove eax, edx; ret; 
0x08067cd8: inc ecx; inc eax; lea edx, [edx - 0x74320]; cmove eax, edx; ret; 
0x080671e8: inc ecx; inc eax; lea edx, [edx - 0x749a0]; cmove eax, edx; ret; 
0x080752a2: inc ecx; inc edx; test al, al; jne 0x2d29c; xor eax, eax; ret; 
0x0806d339: inc ecx; jmp dword ptr [esi + 0xf]; 
0x0805b13b: inc ecx; leave; add dword ptr [eax], eax; add esp, 0x18; pop ebx; ret; 
0x0806fb6b: inc ecx; or byte ptr [eax - 0x2f76f7be], cl; ret; 
0x0806fa0b: inc ecx; or byte ptr [eax - 0x776f7be], cl; pop edi; ret; 
0x080787b2: inc ecx; or byte ptr [ecx + 0x418b0447], cl; add al, 0x89; ret 0xe083; 
0x0806fbcb: inc ecx; or byte ptr [ecx - 0x2f76f7be], cl; ret; 
0x0806fa6b: inc ecx; or byte ptr [ecx - 0x776f7be], cl; pop edi; ret; 
0x0806ff7a: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; lea eax, [edx + 0xf]; pop edi; ret; 
0x0807026b: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; lea eax, [edx + 0xf]; ret; 
0x0806f97a: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; mov eax, edi; pop edi; ret; 
0x0806fc4b: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; mov eax, edx; ret; 
0x0806f575: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x0806dd05: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x0806f5d5: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x0806dd65: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x0806f596: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x0806dd26: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x08067d9e: inc ecx; or dword ptr [edx], eax; lea edx, [edx - 0x77210]; cmovne eax, edx; ret; 
0x0806726e: inc ecx; or dword ptr [edx], eax; lea edx, [edx - 0x78a60]; cmovne eax, edx; ret; 
0x0807006b: inc ecx; pop es; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; pop edi; ret; 
0x080701cb: inc ecx; pop es; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x0806fa4b: inc ecx; pop es; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x0806fbab: inc ecx; pop es; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x080700eb: inc ecx; pop es; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x0807024b: inc ecx; pop es; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x0806facb: inc ecx; pop es; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x0806fc2b: inc ecx; pop es; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x0806f5b5: inc ecx; pop es; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x0806dd45: inc ecx; pop es; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x080700cb: inc ecx; push es; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x0807022b: inc ecx; push es; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x0806faab: inc ecx; push es; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x0806fc0b: inc ecx; push es; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x08088730: inc ecx; std; call dword ptr [eax - 0x18]; 
0x08088790: inc ecx; std; call dword ptr [eax - 0x18]; pop es; sub esp, edi; jmp dword ptr [esi - 0x70]; 
0x080b327f: inc ecx; std; call dword ptr [eax - 0x18]; sbb byte ptr [esi - 7], bh; jmp dword ptr [esi - 0x70]; 
0x080877aa: inc ecx; std; call dword ptr [eax - 0x73]; 
0x0805e601: inc edi; adc al, 0x5e; pop edi; jmp eax; 
0x0805caaa: inc edi; adc byte ptr [esi + 0x5f], bl; jmp eax; 
0x080705b1: inc edi; add al, 0x5f; ret; 
0x080a3a25: inc edi; add al, 0x89; ret 0xc085; 
0x080aafc0: inc edi; add al, 0x89; ret; 
0x080787b5: inc edi; add al, 0x8b; inc ecx; add al, 0x89; ret 0xe083; 
0x08077bb2: inc edi; add byte ptr [eax], al; add esp, 4; pop ebx; pop esi; ret; 
0x08097ef3: inc edi; clc; pop edi; ret; 
0x08097f1c: inc edi; cld; pop edi; ret; 
0x08050801: inc edi; cld; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x08097f91: inc edi; cli; pop edi; ret; 
0x08097f51: inc edi; cmc; pop edi; ret; 
0x080674bb: inc edi; fild dword ptr [edi]; add byte ptr [ebx - 0x39], dl; ret; 
0x08097ec9: inc edi; hlt; pop edi; ret; 
0x08097f21: inc edi; int1; pop edi; ret; 
0x08070621: inc edi; or al, 0x5f; ret; 
0x08097f31: inc edi; pop edi; ret; 
0x080703de: inc edi; pop es; pop edi; ret; 
0x08070641: inc edi; push cs; pop edi; ret; 
0x080705d1: inc edi; push es; pop edi; ret; 
0x080b2b3a: inc edi; ret 0; 
0x08063d3e: inc edi; ret 0x4c89; 
0x080638c0: inc edi; ret 0x548b; 
0x080a90a6: inc edi; ret 0x5a00; 
0x0804b052: inc edi; ret 0x65c8; 
0x0804a79d: inc edi; ret 0x68c0; 
0x08066885: inc edi; ret 0xc083; 
0x0804db59: inc edi; ret 0xc189; 
0x080a097e: inc edi; ret 0xec83; 
0x08071cc0: inc edi; ret 0xf029; 
0x0809bb02: inc edi; ret 0xffe0; 
0x080b2fca: inc edi; ret 2; 
0x0804b4e8: inc edi; ret; 
0x080a3a6e: inc edi; shr al, 0x6e; push cs; or byte ptr [ebx - 0x7c72ff00], al; mov byte ptr [ebx - 2], cl; call dword ptr [eax - 0x73]; 
0x080a3ce1: inc edi; shr byte ptr [edi + ebp*2], 0xe; or byte ptr [esi + 1], bh; call dword ptr [eax]; 
0x08097f81: inc edi; stc; pop edi; ret; 
0x08097fb1: inc edi; std; pop edi; ret; 
0x08097fa1: inc edi; sti; pop edi; ret; 
0x0807aa30: inc edi; sub ebp, edi; call dword ptr [eax - 0x18]; 
0x080928fe: inc edi; test dword ptr [ebx + edi*8 - 1], ebx; jmp dword ptr [eax]; 
0x0806b493: inc edi; test dword ptr [edi], 0x29f756b6; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x0807ebf2: inc edi; xor byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x080a96f6: inc edx; add al, 0x5e; pop edi; jmp eax; 
0x0806f3fb: inc edx; add al, 0x5f; ret; 
0x080701a8: inc edx; add al, 0x66; mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x0806fb88: inc edx; add al, 0x66; mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x0807c01f: inc edx; add al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x080953f1: inc edx; add al, 0x83; ret 0xb904; 
0x08079ff1: inc edx; add al, 0x83; ret 0xc608; 
0x0806db98: inc edx; add al, 0x89; clc; pop edi; ret; 
0x080a0ee9: inc edx; add al, 0x89; ret 0x858b; 
0x0806253d: inc edx; add al, 0x89; ret; 
0x0806fb68: inc edx; add al, 0x8a; inc ecx; or byte ptr [eax - 0x2f76f7be], cl; ret; 
0x0806fa08: inc edx; add al, 0x8a; inc ecx; or byte ptr [eax - 0x776f7be], cl; pop edi; ret; 
0x0806fbc8: inc edx; add al, 0x8b; inc ecx; or byte ptr [ecx - 0x2f76f7be], cl; ret; 
0x0806fa68: inc edx; add al, 0x8b; inc ecx; or byte ptr [ecx - 0x776f7be], cl; pop edi; ret; 
0x0806f3f8: inc edx; add al, 0x8d; inc edx; add al, 0x5f; ret; 
0x0806ff29: inc edx; add al, 0x8d; inc edx; pop es; pop edi; ret; 
0x08070178: inc edx; add al, 0x8d; inc edx; pop es; ret; 
0x080b0a71: inc edx; add al, 0xeb; ror byte ptr [ebp - 0x3fceff8a], cl; ret; 
0x0805d5cc: inc edx; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; sub edx, -4; cld; call dword ptr [eax - 0x18]; 
0x0809b25e: inc edx; add dword ptr [eax], eax; add byte ptr [ebx - 0x976b], cl; inc dword ptr [ecx]; ret 0xf029; 
0x080700b0: inc edx; add eax, 0x5f0c428d; ret; 
0x08077af4: inc edx; add esp, 0x18; pop ebx; ret; 
0x080a756a: inc edx; and ch, bh; jmp dword ptr [esi - 0x70]; 
0x08068441: inc edx; call 0x42d813ad; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x080689c1: inc edx; call 0x42d8192d; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x08067fe0: inc edx; clc; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x08068446: inc edx; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x08067fe3: inc edx; cld; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x08068023: inc edx; cli; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x08068027: inc edx; dec byte ptr [ebx + 0x5b082444]; ret; 
0x08068006: inc edx; dec dword ptr [ebx + 0x5b082444]; ret; 
0x08074dc9: inc edx; dec dword ptr [edi]; test dword ptr [ebx + 0x5e000000], ebx; xor eax, eax; pop ebx; ret; 
0x08074cbe: inc edx; dec dword ptr [edi]; test dword ptr [esi + 0x5e000001], esp; xor eax, eax; pop ebx; ret; 
0x080b0265: inc edx; dec esp; ret; 
0x08094cba: inc edx; fcos; jmp dword ptr [esi - 0x70]; 
0x080683cc: inc edx; fisub dword ptr [esi + 0xf]; jg 0x20414; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x0806894c: inc edx; fisub dword ptr [esi + 0xf]; jg 0x20994; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x08068536: inc edx; hlt; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x08068371: inc edx; in al, dx; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x08083f5a: inc edx; jno 0x3bf59; dec dword ptr [ebx - 0x72cbdba4]; xor dword ptr [eax + 0x35], 0xfffffffd; call dword ptr [eax - 0x73]; 
0x080681a2: inc edx; jo 0x20126; ret 0x80; 
0x08068209: inc edx; jo 0x2018d; ret 0x80; 
0x0806825b: inc edx; jo 0x201df; ret 0x80; 
0x080683d1: inc edx; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x08068576: inc edx; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x080685b6: inc edx; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x080684b6: inc edx; mul byte ptr [esi - 0x77]; inc edx; dec byte ptr [ebx + 0x5b082444]; ret; 
0x0806f4a3: inc edx; or al, 0x5f; ret; 
0x08093c99: inc edx; or al, byte ptr [eax]; add byte ptr [ebp - 0x7a74ff8a], cl; cmp bl, 0xff; jmp dword ptr [ebp - 0x39]; 
0x080a39fd: inc edx; or byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x08068311: inc edx; out dx, al; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x080682e1: inc edx; out dx, eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x080ae439: inc edx; pop eax; add esp, 8; pop ebx; ret; 
0x0806f47c: inc edx; pop es; lea eax, [edx + 0xa]; pop edi; ret; 
0x0806f5bc: inc edx; pop es; lea eax, [edx + 0xa]; ret; 
0x080700f0: inc edx; pop es; lea eax, [edx + 0xe]; pop edi; ret; 
0x08070250: inc edx; pop es; lea eax, [edx + 0xe]; ret; 
0x0806dc0c: inc edx; pop es; mov eax, edi; pop edi; ret; 
0x0806dd4c: inc edx; pop es; mov eax, edx; ret; 
0x0806f329: inc edx; pop es; pop edi; ret; 
0x0806f569: inc edx; pop es; ret; 
0x08069f36: inc edx; pop es; sub eax, ecx; ret; 
0x080ae406: inc edx; pop esp; add esp, 8; pop ebx; ret; 
0x0806f4e3: inc edx; push cs; pop edi; ret; 
0x0806f643: inc edx; push cs; ret; 
0x080700d0: inc edx; push es; lea eax, [edx + 0xd]; pop edi; ret; 
0x08070230: inc edx; push es; lea eax, [edx + 0xd]; ret; 
0x0806fab0: inc edx; push es; mov eax, edi; pop edi; ret; 
0x0806fc10: inc edx; push es; mov eax, edx; ret; 
0x0806f42b: inc edx; push es; pop edi; ret; 
0x0806f55b: inc edx; push es; ret; 
0x08069fa6: inc edx; push es; sub eax, ecx; ret; 
0x080ae3f5: inc edx; push esp; add esp, 8; pop ebx; ret; 
0x080b025d: inc edx; pushal; shr eax, 0x1f; mov dword ptr [ecx], eax; mov eax, dword ptr [edx + 0x4c]; ret; 
0x080ac349: inc edx; ret 0xe883; 
0x08071c9e: inc edx; ret 0xf289; 
0x08088ee1: inc edx; ret 0xf301; 
0x080685a7: inc edx; ret 0xf66; 
0x08066354: inc edx; ret; 
0x0808871d: inc edx; std; call dword ptr [eax - 0x73]; 
0x08068047: inc edx; std; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x08068003: inc edx; sti; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x080752a3: inc edx; test al, al; jne 0x2d29c; xor eax, eax; ret; 
0x08068020: inc edx; test byte ptr [ecx - 0x769905be], 0x42; dec byte ptr [ebx + 0x5b082444]; ret; 
0x080888e5: inc edx; xor byte ptr [0x200], al; mov dword ptr gs:[ecx], eax; pop ebx; ret; 
0x08087b79: inc esi; adc byte ptr [ebp - 0x7cf68b40], al; in al, dx; or al, 0x56; call eax; 
0x080abb79: inc esi; adc byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x080b004f: inc esi; adc byte ptr [edi], cl; xchg eax, esp; ret 0xe2c1; 
0x0805bc8f: inc esi; adc byte ptr [esi + 0x5f], bl; jmp eax; 
0x0806213b: inc esi; add al, 0; add byte ptr [eax], al; add byte ptr [ebp + 0x39b374d2], al; ret 0xaf74; 
0x0804b34b: inc esi; add al, 0x5b; pop esi; pop edi; ret; 
0x080ab680: inc esi; add al, 0x85; sal byte ptr [edx + edi*4 - 0x75], 0x55; add byte ptr [ecx], al; ret 0xd139; 
0x080a053d: inc esi; add al, 0x89; ret; 
0x080ab72b: inc esi; add al, 0x8b; push ebp; add byte ptr [ecx], al; ret 0xd139; 
0x0805c760: inc esi; add al, 0x8b; push esi; or byte ptr [ecx], ch; ret 0xfa39; 
0x0807e60a: inc esi; add al, 0x8d; and dword ptr [eax + 0x7b], 0xfffffff9; call dword ptr [eax - 0x73]; 
0x0808b1c7: inc esi; add al, 0xc7; ret 0xfff0; 
0x08077c22: inc esi; add byte ptr [eax], al; add esp, 4; pop ebx; pop esi; ret; 
0x080aeb45: inc esi; add dword ptr [ebp - 0x50f0fca2], ecx; xchg dword ptr [eax + 0x1000000], esi; ret 0x9789; 
0x080aebd5: inc esi; add dword ptr [ebp - 0x50f0fda2], ecx; xchg dword ptr [eax + 0x1000000], esi; ret 0x9789; 
0x080aeb6c: inc esi; add dword ptr [ecx], eax; ret 0x458b; 
0x080985a8: inc esi; add ebx, dword ptr [esi + 0x5f]; ret; 
0x0807cc81: inc esi; and byte ptr [ebp - 0x720e8b40], al; add esp, 0x2d; std; call dword ptr [eax - 0x73]; 
0x0805b88a: inc esi; and byte ptr [ebx], ch; inc esi; sbb al, 0x89; ret; 
0x0805c196: inc esi; and byte ptr [ecx], ch; rol byte ptr [ebx + 0x525004ec], 1; push esi; call ecx; 
0x080964b9: inc esi; cmp al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x080795bc: inc esi; mov edx, 0xec830006; adc al, 0x8d; cmp dword ptr [ecx], 0x21; std; call dword ptr [eax - 0x18]; 
0x0805e42d: inc esi; or al, 0x5e; pop edi; jmp eax; 
0x080aba96: inc esi; or al, 0x83; les edx, ptr [ebx + ebx*2]; pop esi; ret; 
0x080ad846: inc esi; or bh, bh; dec dword ptr [ecx + 0x28c48303]; pop ebx; ret; 
0x080a43ae: inc esi; or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x0806097b: inc esi; or byte ptr [eax], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x186c], edx; ret; 
0x080609eb: inc esi; or byte ptr [eax], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x48c], edx; ret; 
0x080609cb: inc esi; or byte ptr [eax], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x490], edx; ret; 
0x080a31fc: inc esi; or byte ptr [ebx + 0x5e5b20c4], al; pop edi; pop ebp; ret; 
0x080ab968: inc esi; or byte ptr [ebx + 0x5e5b24c4], al; ret; 
0x080a08d4: inc esi; or byte ptr [ebx], al; add ecx, dword ptr [ebx - 0x247a73a3]; jne 0x588ab; call eax; 
0x0805b190: inc esi; or byte ptr [ecx + 0x4c483f0], cl; pop ebx; pop esi; ret; 
0x08090c27: inc esi; or eax, 0x9efe083; ror byte ptr [eax - 0x7a72f2ba], 1; xor bh, 0xff; call dword ptr [eax + 0x56]; 
0x08058f00: inc esi; ret 0x558d; 
0x08060870: inc esi; sal byte ptr [ecx], 1; sar byte ptr [ebx], 0x54; and al, 4; setae al; ret; 
0x0805b88d: inc esi; sbb al, 0x89; ret; 
0x080a5631: inc esi; sbb byte ptr [ebx - 0x3fcefb3c], al; pop ebx; pop esi; ret; 
0x08052939: inc esi; sbb byte ptr [ecx - 0x88b7b], cl; ljmp [ecx]; rcl byte ptr [eax + 0x52], 1; push dword ptr [ebp - 0x890]; call dword ptr [ebx + 0x1c]; 
0x08079675: inc esi; stc; dec dword ptr [ecx + 0x5e5b0850]; ret; 
0x080769d8: inc esi; std; dec dword ptr [ebp - 0x2e4977d]; call dword ptr [eax - 0x73]; 
0x0805e3d0: inc esi; sub byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x080579a9: inc esi; sub byte ptr [eax], al; or byte ptr [eax], al; add bl, ch; ret; 
0x080908f0: inc esi; test dword ptr [ebx], esp; idiv edi; jmp dword ptr [eax]; 
0x08049faa: inc esi; xor byte ptr [ecx + 0x4e89345e], cl; cmp byte ptr [ecx + 0x5e8b3c56], cl; or bh, dh; ret; 
0x080550b7: inc esp; adc al, ah; mov eax, dword ptr [ecx + eax*4]; jmp eax; 
0x08055b69: inc esp; adc al, ah; mov eax, dword ptr [edi + eax*4 - 0x17a0]; jmp eax; 
0x08054d77: inc esp; adc al, ah; mov eax, dword ptr [edi + eax*4 - 0x1820]; jmp eax; 
0x08055ac9: inc esp; adc al, ah; mov eax, dword ptr [edi + eax*4 - 0x18a0]; jmp eax; 
0x08071544: inc esp; adc al, dh; ret; 
0x08071574: inc esp; adc byte ptr [eax], ah; ret; 
0x08071564: inc esp; adc byte ptr [eax], dl; ret; 
0x080668e7: inc esp; adc byte ptr [ebx + eax*4], al; ljmp 0x450f:0x1e08304; ret 0xc483; 
0x080623a4: inc esp; add bh, ch; call dword ptr [eax - 1]; 
0x0807153b: inc esp; add dh, byte ptr [eax]; ret; 
0x0808802e: inc esp; add dword ptr [ecx + ecx*4], ebx; shl dword ptr [0xfffff000], 0x29; ret 0xe183; 
0x08082499: inc esp; and al, 0x10; add eax, 0xe9000000; ret; 
0x0806363c: inc esp; and al, 0x10; call ecx; 
0x08066f5b: inc esp; and al, 0x10; mov dword ptr [eax], edx; xor eax, eax; add esp, 0xc; ret; 
0x08075284: inc esp; and al, 0x10; pop ebx; pop esi; pop edi; ret; 
0x08088f8f: inc esp; and al, 0x14; call eax; 
0x080958b8: inc esp; and al, 0x14; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x0805199a: inc esp; and al, 0x18; call dword ptr [eax + 0x1c]; 
0x080b088f: inc esp; and al, 0x18; call eax; 
0x080b02c9: inc esp; and al, 0x1c; add esp, 0x28; pop ebx; ret; 
0x0804ff5a: inc esp; and al, 0x1c; call eax; 
0x080a24c6: inc esp; and al, 0x20; call 0x59e80; add esp, 0x1c; ret; 
0x080b00d0: inc esp; and al, 0x24; call eax; 
0x0805bad3: inc esp; and al, 0x24; push eax; push esi; call dword ptr [edi + 0x48]; 
0x080a550f: inc esp; and al, 0x28; call eax; 
0x0805a853: inc esp; and al, 0x30; push eax; call esi; 
0x08075c04: inc esp; and al, 0x34; push eax; push dword ptr [ebp + 8]; call esi; 
0x0805b76a: inc esp; and al, 0x34; push eax; push esi; call dword ptr [edi + 0x48]; 
0x08085686: inc esp; and al, 0x38; call eax; 
0x0804fcac: inc esp; and al, 0x38; or eax, 0x83000000; ret 0xc702; 
0x080593ae: inc esp; and al, 0x3c; push eax; push dword ptr [esp + 0x24]; call dword ptr [ebx + 0x48]; 
0x08098882: inc esp; and al, 0x40; push eax; push dword ptr [ebp]; call esi; 
0x0807f32a: inc esp; and al, 0x44; call eax; 
0x0805be0c: inc esp; and al, 0x44; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x0807ee58: inc esp; and al, 0x48; call eax; 
0x0804dbbd: inc esp; and al, 0x4c; add dword ptr [ebx - 0x16c3db94], ecx; ret 0xfffe; 
0x080814cd: inc esp; and al, 0x4c; call eax; 
0x080804de: inc esp; and al, 0x50; call eax; 
0x08079e26: inc esp; and al, 0x53; add byte ptr [ecx - 0x38dfdba4], cl; ret; 
0x08083691: inc esp; and al, 0x54; call eax; 
0x0807c9fc: inc esp; and al, 0x5c; push dword ptr [eax + 4]; call edi; 
0x08075e42: inc esp; and al, 0x64; mov dword ptr [esp + 0x38], edx; push eax; push dword ptr [esp + 0x38]; call esi; 
0x080a3e21: inc esp; and al, 0xc; add esp, 0x20; jmp ecx; 
0x0809971c: inc esp; and al, 0xc; mov eax, 0x8c; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x08071953: inc esp; and al, 0xc; pop edi; ret; 
0x080a3dc9: inc esp; and al, 4; add esp, 0x10; jmp ecx; 
0x0805fe25: inc esp; and al, 4; mov eax, dword ptr [eax + 0x34]; ret; 
0x080b01d5: inc esp; and al, 4; mov eax, dword ptr [eax + 0x48]; ret; 
0x080b0245: inc esp; and al, 4; mov eax, dword ptr [eax + 0x4c]; ret; 
0x080b0285: inc esp; and al, 4; mov eax, dword ptr [eax + 0x50]; ret; 
0x080b02f5: inc esp; and al, 4; mov eax, dword ptr [eax + 0x54]; ret; 
0x080b02e5: inc esp; and al, 4; mov eax, dword ptr [eax + 0x58]; ret; 
0x080b0295: inc esp; and al, 4; mov eax, dword ptr [eax + 0x5c]; ret; 
0x08060a10: inc esp; and al, 4; mov eax, dword ptr [eax]; cmp eax, 0x3fc; jbe 0x18a20; ret; 
0x08060aa0: inc esp; and al, 4; mov eax, dword ptr [eax]; cmp eax, 0x50; jbe 0x18ab0; ret; 
0x080608e0: inc esp; and al, 4; mov eax, dword ptr [eax]; cmp eax, 0x80000; jbe 0x188f0; ret; 
0x08060a50: inc esp; and al, 4; mov eax, dword ptr [eax]; cmp eax, 0xffff; jbe 0x18a60; ret; 
0x080b0275: inc esp; and al, 4; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x4c], edx; ret; 
0x0805fb05: inc esp; and al, 4; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x08087bf5: inc esp; and al, 4; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x080a3e73: inc esp; and al, 4; ret 0x14; 
0x080a3d9c: inc esp; and al, 4; ret 0xc; 
0x0805fe35: inc esp; and al, 4; ret; 
0x0809c05f: inc esp; and al, 7; add bh, al; sar dword ptr [edi + ebp*2], 0xe; or bh, al; ret 0x4da0; 
0x08074f86: inc esp; and al, 8; cld; pop edi; ret; 
0x080a3465: inc esp; and al, 8; mov dword ptr [eax], edx; ret; 
0x080a8825: inc esp; and al, 8; mov eax, 0x80e6f2c; call dword ptr [eax]; 
0x080a56c3: inc esp; and al, 8; mov esp, ecx; jmp edx; 
0x08096f35: inc esp; and al, 8; pop ebx; add eax, ecx; ret; 
0x0805f085: inc esp; and al, 8; pop ebx; ret; 
0x08074f5c: inc esp; and al, 8; pop edi; ret; 
0x0807f32c: inc esp; call eax; 
0x08070fb4: inc esp; cmp al, dh; pop edi; ret; 
0x08070fe4: inc esp; cmp byte ptr [eax], ah; pop edi; ret; 
0x08070fd4: inc esp; cmp byte ptr [eax], dl; pop edi; ret; 
0x0809122f: inc esp; idiv edi; call dword ptr [ecx - 0x75]; 
0x08054578: inc esp; idiv edi; call dword ptr [edx - 0x18]; 
0x0808f5aa: inc esp; idiv edi; dec dword ptr [ebx - 0x7a76dbbb]; dec esp; idiv edi; jmp dword ptr [ebp - 0x75]; 
0x080998cd: inc esp; mov ebx, dword ptr [esp + 0x40]; lea edx, [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x08088cab: inc esp; mov ecx, esi; mov ebx, dword ptr [esp + 0xa0]; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x0808883c: inc esp; nop; inc eax; ret; 
0x08093654: inc esp; or ah, al; mov dword ptr [ebp - 0x494], 0; mov eax, dword ptr [edi + eax*4 - 0x12c0]; jmp eax; 
0x080938a4: inc esp; or ah, al; mov dword ptr [ebp - 0x494], 1; mov eax, dword ptr [edi + eax*4 - 0x12c0]; jmp eax; 
0x08092db4: inc esp; or ah, al; mov eax, dword ptr [edi + eax*4 - 0x1240]; jmp eax; 
0x08093944: inc esp; or ah, al; mov eax, dword ptr [edi + eax*4 - 0x1340]; jmp eax; 
0x08092bef: inc esp; or ah, al; mov ebx, dword ptr [ebp - 0x4c0]; mov dword ptr [ebp - 0x4a0], 1; mov eax, dword ptr [ebx + eax*4]; jmp eax; 
0x08092aaa: inc esp; or ah, al; mov ebx, dword ptr [ebp - 0x4c0]; mov dword ptr [ebp - 0x4ac], 1; mov eax, dword ptr [ebx + eax*4]; jmp eax; 
0x08092b9a: inc esp; or ah, al; mov ebx, dword ptr [ebp - 0x4c0]; mov dword ptr [ebp - 0x4bc], 1; mov eax, dword ptr [ebx + eax*4]; jmp eax; 
0x08092b08: inc esp; or al, ah; mov eax, dword ptr [ebx + eax*4]; jmp eax; 
0x0804981e: inc esp; or dword ptr [eax], eax; add byte ptr [ecx - 0x763fcf10], cl; ret 0x8789; 
0x080938f4: inc esp; or esp, eax; mov dword ptr [ebp - 0x494], 0; mov eax, dword ptr [edi + eax*4 - 0x12c0]; jmp eax; 
0x080939d4: inc esp; or esp, eax; mov dword ptr [ebp - 0x494], 1; mov eax, dword ptr [edi + eax*4 - 0x12c0]; jmp eax; 
0x08092a64: inc esp; or esp, eax; mov dword ptr [ebp - 0x4a4], 0x20; mov ebx, dword ptr [ebp - 0x4c0]; mov eax, dword ptr [ebx + eax*4]; jmp eax; 
0x08093984: inc esp; or esp, eax; mov dword ptr [ebp - 0x4a8], 0; mov eax, dword ptr [edi + eax*4 - 0x12c0]; jmp eax; 
0x08092a1c: inc esp; or esp, eax; mov ebx, dword ptr [ebp - 0x4c0]; mov eax, dword ptr [ebx + eax*4]; jmp eax; 
0x08079c43: inc esp; pop es; and al, 0xe9; ret; 
0x080a66b3: inc esp; popfd; add byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x0809e108: inc esp; push dword ptr [esp + 0x38]; call dword ptr [ebx + 0x38]; 
0x0805be0e: inc esp; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x08087b48: inc esp; push ss; dec byte ptr [ebx - 0x9773]; jmp dword ptr [esi - 0x77]; 
0x080813b9: inc esp; ret 0x308b; 
0x0809e586: inc esp; ret 0x3980; 
0x08075b9c: inc esp; ret 0x4489; 
0x080ad086: inc esp; ret 0x4c89; 
0x0809fc3d: inc esp; ret 0x4d8b; 
0x080671f2: inc esp; ret 0x66c3; 
0x080a0f5d: inc esp; ret 0x758b; 
0x08066da7: inc esp; ret 0x8389; 
0x080a3962: inc esp; ret 0x8dc3; 
0x0809bed0: inc esp; ret 0x95e9; 
0x08067015: inc esp; ret 0xc483; 
0x080ad70c: inc esp; ret 0xec83; 
0x08075d45: inc esp; ret 0xff65; 
0x08089c6c: inc esp; ret; 
0x080a7e83: inc esp; std; jmp dword ptr [esi - 0x70]; 
0x080a141a: inc esp; test dword ptr [edi + edi*8 - 1], esi; call dword ptr [eax - 1]; 
0x08088dec: insb byte ptr es:[edi], dx; add dword ptr [eax], eax; add byte ptr [ebp + 0x51], dl; lea esi, [ecx + eax]; push esi; call edi; 
0x080a2186: insb byte ptr es:[edi], dx; add dword ptr [eax], eax; add byte ptr [ebx - 0x23b63], cl; dec dword ptr [ebp - 0x1b72b7d]; call dword ptr [eax - 0x73]; 
0x08098c07: insb byte ptr es:[edi], dx; and al, 0xc; push ebp; push ebx; call eax; 
0x0809d28f: insb byte ptr es:[edi], dx; cmp al, 0xfe; call dword ptr [eax - 0x39]; 
0x0805437e: insb byte ptr es:[edi], dx; idiv edi; call dword ptr [eax + 0x51]; 
0x0808f632: insb byte ptr es:[edi], dx; idiv edi; call dword ptr [ebx]; 
0x08053e1c: insb byte ptr es:[edi], dx; idiv edi; call dword ptr [ecx + 0x6a]; 
0x080535be: insb byte ptr es:[edi], dx; idiv edi; call dword ptr [edx + 0x6a]; 
0x080539fe: insb byte ptr es:[edi], dx; idiv edi; call dword ptr [edx - 1]; 
0x08052b72: insb byte ptr es:[edi], dx; idiv edi; call dword ptr [esi + 0x52]; 
0x0804aab8: insb byte ptr es:[edi], dx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x080804d3: insb byte ptr es:[edi], dx; push eax; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x0807fec0: insb byte ptr es:[edi], dx; push eax; push dword ptr [esp + 0x60]; push dword ptr [esp + 0x68]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x08090c40: insb byte ptr es:[edi], dx; ret; 
0x080a2bf9: insb byte ptr es:[edi], dx; sbb al, byte ptr [eax]; add byte ptr [ebx + 0x1a6887], cl; add byte ptr [ecx], bh; ret 0x273; 
0x0807ae7a: insb byte ptr es:[edi], dx; sub ebp, edi; call dword ptr [eax - 0x18]; 
0x08062c79: insd dword ptr es:[edi], dx; add dword ptr [eax], eax; add byte ptr [edi], cl; xchg eax, ebp; ret; 
0x08095b40: insd dword ptr es:[edi], dx; cmp bh, bl; jmp dword ptr [esi - 0x70]; 
0x08070d42: insd dword ptr es:[edi], dx; lea esi, [esi]; lea esi, [esi]; xor eax, eax; ret; 
0x0807e26d: insd dword ptr es:[edi], dx; push es; add byte ptr [ebx - 0x77], dl; ret; 
0x08058a22: insd dword ptr es:[edi], dx; sub esp, 4; push edi; push dword ptr [ebp + 8]; push eax; call dword ptr [ebx + 0x1c]; 
0x0804a492: int 0x80; 
0x08079d40: int 0x80; ret; 
0x08067de2: int 0xf8; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x08067dd9: int 0xf8; inc dword ptr [eax - 0x6d72fd1b]; ror ch, 0xf8; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0804db57: int 0xf; inc edi; ret 0xc189; 
0x0804a4cf: int1; cld; call dword ptr [eax - 0x18]; 
0x0804a95d: int1; cld; inc dword ptr [ecx]; idiv dword ptr [esi]; jmp edi; 
0x0809bf3c: int1; cli; dec dword ptr [ebp - 0x1c3737d]; call dword ptr [eax - 0x73]; 
0x0809bf1d: int1; cli; dec dword ptr [ebp - 0x2d59f7d]; call dword ptr [eax - 0x73]; 
0x08088cad: int1; mov ebx, dword ptr [esp + 0xa0]; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x08097f22: int1; pop edi; ret; 
0x080aab59: int1; stc; inc dword ptr [ecx + 0x3a4a4c3]; add byte ptr [ecx], bh; ret 0xa74; 
0x0806b4b7: int1; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x08064eb0: into; adc dword ptr [eax], eax; add byte ptr [ebx - 0x72ebdb8c], cl; xchg byte ptr [esi + ecx - 3], dl; dec dword ptr [ebp - 0x301e66a]; call dword ptr [eax - 0x73]; 
0x0809e967: into; jmp dword ptr [ebp - 0x39]; 
0x080985a4: into; jne 0x505aa; lea eax, [esi + 3]; pop esi; pop edi; ret; 
0x080a80fb: iretd; add eax, dword ptr [eax]; mov eax, 0x80e6f60; mov eax, dword ptr [eax]; ret; 
0x08099248: iretd; call dword ptr gs:[0x10]; 
0x080b2a90: iretd; pop ebx; pop esi; pop edi; ret; 
0x0805f082: ja 0x17078; add eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0806728b: ja 0x1f26a; pop es; add byte ptr [ebx - 0x39], dl; ret; 
0x08069ff5: ja 0x21ff9; neg eax; ret; 
0x0806a1b5: ja 0x221b9; neg eax; ret; 
0x0806a37d: ja 0x22381; neg eax; ret; 
0x0806b9f6: ja 0x239fa; neg eax; ret; 
0x0806baa5: ja 0x23aa9; neg eax; ret; 
0x0806c58c: ja 0x24590; neg eax; ret; 
0x080706b2: ja 0x28760; add eax, edi; add eax, ecx; pop edi; ret; 
0x08070752: ja 0x28760; sub edi, 0x10; add eax, edi; pop edi; ret; 
0x08074285: ja 0x2c289; neg eax; add esp, 4; pop ebx; ret; 
0x08074605: ja 0x2c609; neg eax; pop edi; pop ebx; ret; 
0x08076fee: ja 0x2eff8; pop ebx; ret; 
0x0807701e: ja 0x2f028; pop ebx; ret; 
0x08077077: ja 0x2f0e0; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x08077122: ja 0x2f170; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x080771c2: ja 0x2f210; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x08077a9a: ja 0x2faa0; pop ebx; ret; 
0x08077b9c: ja 0x2fbb0; add esp, 4; pop ebx; pop esi; ret; 
0x08077c01: ja 0x2fc20; add esp, 4; pop ebx; pop esi; ret; 
0x08077c52: ja 0x2fc60; pop ebx; ret; 
0x08077c92: ja 0x2fca0; pop ebx; ret; 
0x08077cce: ja 0x2fcd8; pop ebx; ret; 
0x08077e6d: ja 0x2fe7d; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x08088aaa: ja 0x40aac; add byte ptr [eax], al; int 0x80; 
0x0808a757: ja 0x42740; mov eax, ebx; pop ebx; pop esi; ret; 
0x08096f32: ja 0x4ef28; mov eax, dword ptr [esp + 8]; pop ebx; add eax, ecx; ret; 
0x0809966e: ja 0x51678; pop ebx; ret; 
0x0809981f: ja 0x51840; add esp, 4; pop ebx; pop esi; ret; 
0x0809988b: ja 0x518a0; add esp, 4; pop ebx; pop esi; ret; 
0x080999b3: ja 0x519c0; xor eax, eax; pop ebx; ret; 
0x080a7e7c: ja 0x5fe80; pop ebx; ret; 
0x080a7edc: ja 0x5fee8; pop ebx; pop esi; pop edi; ret; 
0x080b0847: ja 0x6884b; sbb eax, eax; ret; 
0x080590e1: jae 0x11179; mov eax, dword ptr [ebp - 0x40]; sub esp, 8; push -1; push dword ptr [ebx]; call dword ptr [eax + 0xc]; 
0x0805ad5a: jae 0x12dd1; fild dword ptr [eax - 0x76da2b83]; ret 0x5b74; 
0x0805b5fa: jae 0x13650; mov eax, dword ptr [ebp - 0x2c]; sub esp, 8; push -1; push dword ptr [eax]; call dword ptr [ebx + 0xc]; 
0x0805c040: jae 0x143d8; push dword ptr [esp + 0xcc]; push dword ptr [esp + 0x10]; push dword ptr [esp + 0x10]; push esi; call dword ptr [ebx + 0x40]; 
0x0805ca5c: jae 0x14a68; movzx eax, byte ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x0805fa8f: jae 0x17ac1; add esp, 4; pop ebx; pop esi; ret; 
0x0805ffa0: jae 0x17fc0; movzx eax, byte ptr [edx]; pop ebx; pop esi; ret; 
0x0806bdf9: jae 0x23e02; add byte ptr [eax], al; pop ebx; ret; 
0x080703d9: jae 0x283dd; add byte ptr [eax], al; lea eax, [edi + 7]; pop edi; ret; 
0x08074fcc: jae 0x2cfd0; movsw word ptr es:[edi], word ptr [esi]; rep movsd dword ptr es:[edi], dword ptr [esi]; xchg eax, edi; mov esi, edx; ret; 
0x08076f65: jae 0x34310; ret; 
0x080921d3: jae 0x4a1d3; dec dword ptr [ebp - 0x3068b79]; call dword ptr [eax + 0x68]; 
0x08096f84: jae 0x4efb6; add esp, 4; pop ebx; pop esi; ret; 
0x080a398f: jae 0x5b953; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x080a50aa: jae 0x5d0b0; call 0x56290; mov dword ptr [ebx + 8], eax; add esp, 0x28; pop ebx; ret; 
0x080a50ec: jae 0x5d0f2; call 0x56290; mov dword ptr [ebx + 8], eax; add esp, 0x28; pop ebx; ret; 
0x0805e700: jae 0x5e5c73ca; pop edi; pop ebp; ret; 
0x08086280: jae 0x5e5ee74a; ret; 
0x080a38e8: jae 0x5e60c5b2; pop edi; pop ebp; ret; 
0x080a4fcc: jae 0x5e610496; ret; 
0x080b33bc: jae 0x5e61c486; pop edi; ret; 
0x080a7f1e: jae 0x5ff2b; mov edx, dword ptr [ecx + 0x1b68]; add word ptr [edx + eax*2], 1; ret; 
0x080ab7d8: jae 0x637c0; mov eax, 1; pop ebx; ret; 
0x080ad843: jae 0x65849; call 0x56290; mov dword ptr [ebx], eax; add esp, 0x28; pop ebx; ret; 
0x080b00ed: jae 0x680f3; push dword ptr [ebx]; push 0xa; push 1; call eax; 
0x080b23d3: jae 0x6a3ce; ljmp [eax - 0x7b7af0a0]; jae 0x6a3d6; inc dword ptr [ebx - 0x3fcef73c]; pop ebx; ret; 
0x080b23db: jae 0x6a3d6; inc dword ptr [ebx - 0x3fcef73c]; pop ebx; ret; 
0x080a20c0: jae 0xc08991a6; or al, 0x89; ret; 
0x080a2164: jae 0xc089924a; or al, 0x89; ret; 
0x0806bac0: jb 0x23ad0; movzx eax, byte ptr [eax]; movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x08070c93: jb 0x28cd0; lea eax, [edi + 0xa]; pop edi; ret; 
0x08070bd5: jb 0x28cd0; lea eax, [edi + 0xb]; pop edi; ret; 
0x08070ca3: jb 0x28cd0; lea eax, [edi + 0xc]; pop edi; ret; 
0x08070cb3: jb 0x28cd0; lea eax, [edi + 0xd]; pop edi; ret; 
0x08070cc3: jb 0x28cd0; lea eax, [edi + 0xe]; pop edi; ret; 
0x08070bfe: jb 0x28cd0; lea eax, [edi + 0xf]; pop edi; ret; 
0x08070c23: jb 0x28cd0; lea eax, [edi + 1]; pop edi; ret; 
0x08070c33: jb 0x28cd0; lea eax, [edi + 2]; pop edi; ret; 
0x08070b6a: jb 0x28cd0; lea eax, [edi + 3]; pop edi; ret; 
0x08070c43: jb 0x28cd0; lea eax, [edi + 4]; pop edi; ret; 
0x08070c53: jb 0x28cd0; lea eax, [edi + 5]; pop edi; ret; 
0x08070c63: jb 0x28cd0; lea eax, [edi + 6]; pop edi; ret; 
0x08070b9b: jb 0x28cd0; lea eax, [edi + 7]; pop edi; ret; 
0x08070c73: jb 0x28cd0; lea eax, [edi + 8]; pop edi; ret; 
0x08070c83: jb 0x28cd0; lea eax, [edi + 9]; pop edi; ret; 
0x08071aa3: jb 0x29ae0; lea eax, [eax + 0xa]; pop edi; ret; 
0x080719f5: jb 0x29ae0; lea eax, [eax + 0xb]; pop edi; ret; 
0x08071ab3: jb 0x29ae0; lea eax, [eax + 0xc]; pop edi; ret; 
0x08071ac3: jb 0x29ae0; lea eax, [eax + 0xd]; pop edi; ret; 
0x08071ad3: jb 0x29ae0; lea eax, [eax + 0xe]; pop edi; ret; 
0x08071a1e: jb 0x29ae0; lea eax, [eax + 0xf]; pop edi; ret; 
0x08071a33: jb 0x29ae0; lea eax, [eax + 1]; pop edi; ret; 
0x08071a43: jb 0x29ae0; lea eax, [eax + 2]; pop edi; ret; 
0x0807198b: jb 0x29ae0; lea eax, [eax + 3]; pop edi; ret; 
0x08071a53: jb 0x29ae0; lea eax, [eax + 4]; pop edi; ret; 
0x08071a63: jb 0x29ae0; lea eax, [eax + 5]; pop edi; ret; 
0x08071a73: jb 0x29ae0; lea eax, [eax + 6]; pop edi; ret; 
0x080719be: jb 0x29ae0; lea eax, [eax + 7]; pop edi; ret; 
0x08071a83: jb 0x29ae0; lea eax, [eax + 8]; pop edi; ret; 
0x08071a93: jb 0x29ae0; lea eax, [eax + 9]; pop edi; ret; 
0x0807602a: jb 0x2e07c; std; dec dword ptr [ebp - 0x2e5437d]; call dword ptr [eax - 0x73]; 
0x080796d7: jb 0x316e3; mov dword ptr [eax + 0x18], ebx; mov dword ptr [eax + 0x1c], edx; mov byte ptr [eax + 0x20], 1; pop ebx; ret; 
0x0808ec32: jb 0x46bdd; sti; jmp dword ptr [esi - 0x70]; 
0x08057ffb: jbe 0x10160; sub esp, 8; push 0; push edi; call dword ptr [ebx + 8]; 
0x080582b6: jbe 0x10318; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x080588be: jbe 0x108c0; sub esp, 4; push 0x10; push edi; push esi; call dword ptr [eax + 0x1c]; 
0x08058926: jbe 0x1094d; sub esp, 4; push ebp; push edi; push esi; call dword ptr [edx + 0x1c]; 
0x08058a21: jbe 0x10a90; sub esp, 4; push edi; push dword ptr [ebp + 8]; push eax; call dword ptr [ebx + 0x1c]; 
0x08059b0e: jbe 0x11cbd; push 1; push 0; push 0; push dword ptr [esp + 0x24]; call dword ptr [ebx + 0x40]; 
0x08059d3e: jbe 0x11d40; add esp, 4; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x0805a007: jbe 0x11f8c; les ecx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x0805b0dc: jbe 0x13100; push dword ptr [esp + 0x2c]; push edi; push esi; push ebx; call dword ptr [ebp + 0x40]; 
0x0805c648: jbe 0x14660; sub esp, 4; push ebp; push dword ptr [esp + 0x3c]; push edi; call dword ptr [eax + 0x20]; 
0x0805c723: jbe 0x14838; sub esp, 4; push edx; push ebp; push esi; call dword ptr [ebx + 0x38]; 
0x0805cdfa: jbe 0x14e78; push 2; push 0; push 0; push esi; call dword ptr [edi + 0x40]; 
0x0805cfe8: jbe 0x15110; sub esp, 0xc; push esi; call dword ptr [edi + 0x44]; 
0x0805d63e: jbe 0x15680; sub esp, 0xc; push esi; call dword ptr [edi + 0x44]; 
0x0805e516: jbe 0x16518; movzx eax, byte ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x0805e737: jbe 0x16790; sub esp, 0xc; push esi; call dword ptr [edi + 0x34]; 
0x0805e7e2: jbe 0x16808; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x0805eac8: jbe 0x16b90; sub esp, 0xc; push esi; call dword ptr [ebp + 0x30]; 
0x0805efa1: jbe 0x16fd0; sub esp, 8; push ebx; push esi; call dword ptr [edi + 0x18]; 
0x0805fc1e: jbe 0x17c20; ret; 
0x080608be: jbe 0x188c0; pop ebx; pop esi; ret; 
0x080608ee: jbe 0x188f0; mov dword ptr [edx + 0x488], eax; mov dword ptr [edx + 0x4a0], 1; ret; 
0x080608ea: jbe 0x188f0; ret; 
0x08060a1a: jbe 0x18a20; ret; 
0x08060a5e: jbe 0x18a60; mov dword ptr [edx + 0x4b8], eax; ret; 
0x08060a5a: jbe 0x18a60; ret; 
0x08060aa8: jbe 0x18ab0; ret; 
0x08060fa6: jbe 0x18fa8; ret; 
0x0806362e: jbe 0x1b630; call eax; 
0x08065ae6: jbe 0x1dae8; sub esp, 8; push dword ptr [esp + 0x24]; push ebx; call eax; 
0x08049e53: jbe 0x1e55; add byte ptr [ebx + 0x5d8b10c4], al; cld; leave; ret; 
0x08066f6e: jbe 0x1ef70; mov eax, 0x16; add esp, 0xc; ret; 
0x08066fce: jbe 0x1efd0; add esp, 4; mov eax, 0x16; pop ebx; pop esi; ret; 
0x0806b9ee: jbe 0x239f0; pop ebx; mov eax, 1; ja 0x239fa; neg eax; ret; 
0x0806dc7e: jbe 0x25c80; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edx; ret; 
0x0806dcee: jbe 0x25cf0; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x0806f3ae: jbe 0x273b0; mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, [edx]; pop edi; ret; 
0x0806f64e: jbe 0x27650; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; ret; 
0x0806fade: jbe 0x27ae0; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edx; ret; 
0x0806ff8e: jbe 0x27f90; mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, [edx]; pop edi; ret; 
0x08070d22: jbe 0x28d50; add eax, ecx; ret; 
0x08070ff5: jbe 0x29030; add eax, edi; pop edi; ret; 
0x08071008: jbe 0x29030; lea eax, [edi + eax + 0x10]; pop edi; ret; 
0x08071018: jbe 0x29030; lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x08071028: jbe 0x29030; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x0807155e: jbe 0x29560; bsf eax, eax; lea eax, [eax + edx + 0x10]; ret; 
0x08077c1e: jbe 0x2fc20; call 0x34310; add esp, 4; pop ebx; pop esi; ret; 
0x08078ac6: jbe 0x30ac8; ret; 
0x08079d2e: jbe 0x31d30; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0807ae1c: jbe 0x32e20; add byte ptr [ebx + 0x20c86], cl; add byte ptr [ebx + 0x5fe910c4], al; idiv edi; dec dword ptr [ebp - 0x2d5877d]; call dword ptr [eax - 0x73]; 
0x0807ca64: jbe 0x34a6a; call edi; 
0x0807cc05: jbe 0x34be5; cld; inc dword ptr [0x683f7]; mov eax, dword ptr [eax + 0x1fa8]; ret; 
0x0808cffe: jbe 0x45000; xor eax, eax; ret; 
0x0808f1eb: jbe 0x471bf; mov dword ptr [ebx], edi; pop ebx; pop esi; pop edi; ret; 
0x08090ac4: jbe 0x49d16; sub esp, 4; push dword ptr [ebp - 0x8a8]; push dword ptr [ebp - 0x8e8]; push dword ptr [ebp - 0x8a0]; call dword ptr [ebx + 0x1c]; 
0x0809527b: jbe 0x4d24f; mov dword ptr [ebx], edi; pop ebx; pop esi; pop edi; ret; 
0x0809610e: jbe 0x4e110; sub esp, 4; push 0x10; push edi; push esi; call dword ptr [eax + 0x1c]; 
0x08096176: jbe 0x4e19d; sub esp, 4; push ebp; push edi; push esi; call dword ptr [edx + 0x1c]; 
0x08096756: jbe 0x4e758; add esp, 4; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x08096732: jbe 0x4e768; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x08096cbe: jbe 0x4ecc0; pop ebx; mov eax, dword ptr [edx]; pop esi; pop edi; ret; 
0x08096e53: jbe 0x4ee80; sub esp, 8; push ebx; push esi; call dword ptr [edi + 0x18]; 
0x080970ae: jbe 0x4f0b0; ret; 
0x080980de: jbe 0x500e0; and eax, 3; jne 0x4fe80; xor eax, eax; pop edi; ret; 
0x080980ee: jbe 0x500f0; and eax, 7; jne 0x4fe80; xor eax, eax; pop edi; ret; 
0x080980fe: jbe 0x50100; and eax, 0x1f; jne 0x4fe80; xor eax, eax; pop edi; ret; 
0x0809810e: jbe 0x50110; and eax, 0x3f; jne 0x4fe80; xor eax, eax; pop edi; ret; 
0x0809811e: jbe 0x50120; and eax, 0x7f; jne 0x4fe80; xor eax, eax; pop edi; ret; 
0x0809812e: jbe 0x50130; and eax, 0x1ff; jne 0x4fe80; xor eax, eax; pop edi; ret; 
0x0809835e: jbe 0x50360; xor eax, eax; pop edi; ret; 
0x08098aae: jbe 0x50ab0; mov eax, 2; ret; 
0x08098abe: jbe 0x50ac0; mov eax, 3; ret; 
0x08098ace: jbe 0x50ad0; mov eax, 4; ret; 
0x08098ade: jbe 0x50ae0; mov eax, 5; ret; 
0x08098aee: jbe 0x50af0; mov eax, 6; ret; 
0x08098afe: jbe 0x50b00; mov eax, 7; ret; 
0x0809983e: jbe 0x51840; call 0x34310; add esp, 4; pop ebx; pop esi; ret; 
0x080a0236: jbe 0x58238; call eax; 
0x080a4c6f: jbe 0x5cc80; add esp, 8; pop ebx; ret; 
0x080a54fe: jbe 0x5d500; sub esp, 0xc; mov dword ptr gs:[ebx], 0; push dword ptr [esp + 0x28]; mov eax, dword ptr [esp + 0x28]; call eax; 
0x080a76c9: jbe 0x5f656; mov bl, 0x98; sbb al, byte ptr [eax]; add byte ptr [ebp - 0x386e8a0a], al; ret 0; 
0x080ace9e: jbe 0x64ea0; sub esp, 4; push dword ptr [esp + 0x34]; push edi; push esi; call dword ptr [ebp]; 
0x080ad94e: jbe 0x65950; call eax; 
0x080b0006: jbe 0x6800c; push dword ptr [esi]; mov dword ptr [esp + 0x1c], edx; push ecx; push 1; call eax; 
0x080b03de: jbe 0x683e0; endbr32; ret; 
0x080b0456: jbe 0x6845c; push dword ptr [esi]; push 1; push 1; call eax; 
0x080b0a76: jbe 0x68a78; xor eax, eax; ret; 
0x080b0ad6: jbe 0x68ad8; xor eax, eax; ret; 
0x080b1e96: jbe 0x69e98; ret; 
0x0804fe2e: jbe 0x7e30; xor eax, eax; ret; 
0x080507fe: jbe 0x8800; mov eax, dword ptr [edi - 4]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x08051560: jbe 0x9542; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x08057408: jbe 0xf508; sub esp, 4; push ebx; push dword ptr [esp + 0x3c]; push esi; call dword ptr [edx + 0x1c]; 
0x080575e0: jbe 0xf5c2; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0804901b: je 0x101f; call eax; 
0x0804901b: je 0x101f; call eax; add esp, 8; pop ebx; ret; 
0x0805845d: je 0x10485; add dh, dh; ret 0x7420; 
0x08059584: je 0x115aa; sbb byte ptr [ecx], ch; ret; 
0x08059660: je 0x11686; adc bh, bh; je 0x1168a; adc byte ptr [ebx + 0x5724247c], cl; call dword ptr [ebx + 0x40]; 
0x08059664: je 0x1168a; adc byte ptr [ebx + 0x5724247c], cl; call dword ptr [ebx + 0x40]; 
0x0805976a: je 0x11790; and al, 0x56; call dword ptr [ebx + 0x40]; 
0x08059aed: je 0x11b15; add byte ptr [ebx - 0x38e7dbbc], cl; ret 0x5f80; 
0x08059d30: je 0x11d56; adc byte ptr [ebx - 0x3b7cefc0], cl; add al, 0x5b; pop esi; jmp eax; 
0x0805afcb: je 0x12fd2; add esp, 8; pop ebx; ret; 
0x0805b0df: je 0x13105; sub al, 0x57; push esi; push ebx; call dword ptr [ebp + 0x40]; 
0x0805c64f: je 0x14675; cmp al, 0x57; call dword ptr [eax + 0x20]; 
0x0805ebf2: je 0x16c18; cmp byte ptr [edx], ch; push edi; push esi; push ebp; call dword ptr [ebx + 0x24]; 
0x0805ed6d: je 0x16d83; mov dword ptr [eax], 0; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], 0; ret; 
0x0805efb1: je 0x16fb6; and dword ptr [esi], 0xffffffef; pop ebx; pop esi; pop edi; ret; 
0x0805f07e: je 0x17090; cmp edx, ecx; ja 0x17078; add eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0805fae2: je 0x17af0; mov edx, eax; mov eax, dword ptr [eax]; test eax, eax; jne 0x17ae0; ret; 
0x0806089a: je 0x188c0; mov eax, 0xf0; mov ecx, 0x80; mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x080628db: je 0x1a901; sbb byte ptr [eax + 0xf0], bh; mov ecx, 0x81; mov ebx, edi; mov edx, 1; call dword ptr gs:[0x10]; 
0x0806381c: je 0x1b844; add byte ptr [eax - 0x74fbb477], dl; test dword ptr [eax - 0x7d000000], eax; ret 0x8b08; 
0x08064441: je 0x1c467; adc byte ptr [ebp - 0x2f1577a], cl; dec dword ptr [ebp - 0x301e66a]; call dword ptr [eax - 0x73]; 
0x080644bc: je 0x1c4e2; adc byte ptr [ebp - 0x2f1577a], cl; dec dword ptr [ebp - 0x301e66a]; call dword ptr [eax - 0x73]; 
0x080644ef: je 0x1c515; adc byte ptr [ebp - 0x2f1577a], cl; dec dword ptr [ebp - 0x301e66a]; call dword ptr [eax - 0x73]; 
0x08064546: je 0x1c56c; adc byte ptr [ebp - 0x2f1577a], cl; dec dword ptr [ebp - 0x301e66a]; call dword ptr [eax - 0x73]; 
0x0806456a: je 0x1c590; adc byte ptr [ebp - 0x2f1577a], cl; dec dword ptr [ebp - 0x301e66a]; call dword ptr [eax - 0x73]; 
0x08049ca3: je 0x1cc0; push ebp; mov ebp, esp; sub esp, 0x14; push 0x80e5f40; call eax; 
0x08064eb5: je 0x1cedb; adc al, 0x8d; xchg byte ptr [esi + ecx - 3], dl; dec dword ptr [ebp - 0x301e66a]; call dword ptr [eax - 0x73]; 
0x08064ed9: je 0x1ceff; adc al, 0x8d; xchg byte ptr [esi + ecx - 3], dl; dec dword ptr [ebp - 0x301e66a]; call dword ptr [eax - 0x73]; 
0x08065574: je 0x1d59a; and al, 0x56; call eax; 
0x08065aec: je 0x1db12; and al, 0x53; call eax; 
0x08065ebc: je 0x1dee2; inc eax; push edi; push ebp; call eax; 
0x0806645d: je 0x1e483; or byte ptr [ecx], bh; ret; 
0x08066f58: je 0x1ef62; mov eax, dword ptr [esp + 0x10]; mov dword ptr [eax], edx; xor eax, eax; add esp, 0xc; ret; 
0x08067d4f: je 0x1fd64; lea eax, [edx - 0x7c9f0]; test byte ptr [ecx + 0x64], 4; lea edx, [edx - 0x7d070]; cmove eax, edx; ret; 
0x08067f86: je 0x1ff8d; cmp cl, dl; je 0x1ff8d; inc eax; pop edi; ret; 
0x08067f8a: je 0x1ff8d; inc eax; pop edi; ret; 
0x080687fc: je 0x20800; mov byte ptr [edi], al; pop edi; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x08069f3c: je 0x21f64; add byte ptr [eax + 0xf08b60f], dl; mov dh, 2; sub eax, ecx; ret; 
0x08069f5c: je 0x21f84; add byte ptr [eax + 0x248b60f], dl; movzx eax, byte ptr [edx + 2]; sub eax, ecx; ret; 
0x08069f6c: je 0x21f94; add byte ptr [eax + 0x348b60f], dl; movzx eax, byte ptr [edx + 3]; sub eax, ecx; ret; 
0x08069f7c: je 0x21fa4; add byte ptr [eax + 0x448b60f], dl; movzx eax, byte ptr [edx + 4]; sub eax, ecx; ret; 
0x08069f8c: je 0x21fb4; add byte ptr [eax + 0x548b60f], dl; movzx eax, byte ptr [edx + 5]; sub eax, ecx; ret; 
0x08069f9c: je 0x21fc4; add byte ptr [eax + 0x648b60f], dl; movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x08069fac: je 0x21fd4; add byte ptr [eax - 0x7cf73f7d], dl; ret 0xf608; 
0x08069fec: je 0x22014; add byte ptr [eax + 0x1b8], dl; add byte ptr [edi + 2], dh; neg eax; ret; 
0x0806a30c: je 0x22334; add byte ptr [eax - 0x7cfe49f1], dl; rol dword ptr [ecx], 0x83; ret 0xf01; 
0x0806a376: je 0x22390; mov eax, 1; ja 0x22381; neg eax; ret; 
0x0806ba9d: je 0x23ab0; pop ebx; mov eax, 1; ja 0x23aa9; neg eax; ret; 
0x0806babc: je 0x23ae4; add byte ptr [eax - 0x49f0f18e], dl; add byte ptr [edi], cl; mov dh, 0x12; sub eax, edx; ret; 
0x0806c29c: je 0x242c4; add byte ptr [eax + 0x486f0ff3], dl; ret; 
0x0804a7ff: je 0x249c; mov eax, 0x180; mov ebx, 0x3003; xor ecx, ecx; int 0x80; 
0x0806db4c: je 0x25b74; add byte ptr [eax + 0x16f0ff3], dl; movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x0806db5d: je 0x25b85; add byte ptr [edx - 0x76fd77ff], cl; clc; pop edi; ret; 
0x0806dddd: je 0x25e05; add bl, dh; movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x0806f39c: je 0x273c4; add byte ptr [eax + 0x16f0ff3], dl; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x0806f98d: je 0x279b5; add byte ptr [edx - 0x76fd77ff], cl; clc; pop edi; ret; 
0x0807057c: je 0x285a4; add byte ptr [eax + 0x5f01478d], dl; ret; 
0x0804a859: je 0x287f; or al, 0xc7; ret 0x6f84; 
0x08070a8c: je 0x28ab4; add byte ptr [eax + 0x5f01478d], dl; ret; 
0x08070d1b: je 0x28d30; bsf ecx, ecx; sub edx, ecx; jbe 0x28d50; add eax, ecx; ret; 
0x08070ee9: je 0x28f3a; xor byte ptr [esi + 0xf], ah; xlatb; ret; 
0x08070f9b: je 0x28fec; adc byte ptr [esi + 0xf], ah; xlatb; rol dword ptr [ebp + 0x315a75c0], 0xc0; pop edi; ret; 
0x080713a3: je 0x293b0; bsf ecx, ecx; add eax, ecx; ret; 
0x080713e8: je 0x29400; bsf eax, eax; add eax, edx; add eax, ecx; ret; 
0x0804a91e: je 0x2944; or al, 0xc7; ret 0x68c0; 
0x0804a95c: je 0x294f; cld; inc dword ptr [ecx]; idiv dword ptr [esi]; jmp edi; 
0x08071528: je 0x29574; xor byte ptr [esi + 0xf], ah; xlatb; ret; 
0x08071b37: je 0x29c3a; mov eax, 4; pop edi; ret; 
0x08071b90: je 0x29c4e; mov eax, 8; pop edi; ret; 
0x08071be0: je 0x29c62; mov eax, 0xc; pop edi; ret; 
0x08071c12: je 0x29c76; cmp byte ptr [edx + 0xf], 0; je 0x29c76; mov eax, 0x10; pop edi; ret; 
0x08071c18: je 0x29c76; mov eax, 0x10; pop edi; ret; 
0x08071d6f: je 0x29d50; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x080749f1: je 0x2c9f4; inc eax; pop edi; ret; 
0x08074b95: je 0x2cb98; inc eax; pop edi; pop esi; ret; 
0x08074f67: je 0x2cf77; call ecx; 
0x08075437: je 0x2d43a; inc eax; sub eax, dword ptr [esp + 4]; ret; 
0x08075535: je 0x2d55d; add byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x08075aee: je 0x2db00; cmp eax, 2; je 0x2db10; xor eax, eax; ret; 
0x08075af3: je 0x2db10; xor eax, eax; ret; 
0x08075b40: je 0x2db66; sbb al, 0xe8; push 0x83fffff4; les ebx, ptr [eax]; pop ebx; ret; 
0x08076673: je 0x2e680; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x08077321: je 0x2f2f6; mov dword ptr [esp + 8], esi; mov ebx, dword ptr [esp + 8]; mov eax, 0xb7; mov ecx, edi; call dword ptr gs:[0x10]; 
0x08077324: je 0x2f34a; or byte ptr [ebx - 0x47f7dba4], cl; mov bh, 0; add byte ptr [eax], al; mov ecx, edi; call dword ptr gs:[0x10]; 
0x08077acf: je 0x2fb00; mov ebx, dword ptr [esp + 0x20]; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x08077b80: je 0x2fba8; mov ecx, dword ptr [esp + 0x10]; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x08077dad: je 0x2fdb4; add esp, 8; pop ebx; ret; 
0x08077fc7: je 0x30000; sub esp, 4; push edi; push 0; push ebx; call esi; 
0x08078047: je 0x30080; sub esp, 4; push edi; push 0; push ebx; call esi; 
0x080783f8: je 0x30418; sub esp, 8; push dword ptr [ebx]; mov ebp, ebx; push esi; call edi; 
0x08078a6e: je 0x30a74; test edx, edx; jne 0x30a78; ret; 
0x08078a92: je 0x30a98; test edx, edx; jne 0x30aa0; ret; 
0x0804b0f6: je 0x311c; sub al, 0xe8; mov dl, 0xf; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0807926b: je 0x3126d; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x08079fe4: je 0x32041; pop esi; pop edi; pop ebp; ret; 
0x0807aedc: je 0x32f04; add byte ptr [eax - 0x4e1f00d], dl; call 0x2a7f; add eax, 0x6a117; lea eax, [eax + 0xa60]; ret; 
0x0807af1e: je 0x32f30; add esp, 4; pop ebx; pop esi; ret; 
0x0807af45: je 0x32f58; mov dword ptr [ebx - 0x260], eax; add esp, 4; pop ebx; pop esi; ret; 
0x0807af88: je 0x32fae; sbb al, ch; add byte ptr [eax - 0x3b7cfffe], 0x18; pop ebx; ret; 
0x0807bff5: je 0x3401b; adc al, 0x6a; add ecx, dword ptr [ebp - 0x1b2067d]; call dword ptr [eax - 1]; 
0x0807c0b5: je 0x340db; adc al, 0x6a; add ecx, dword ptr [ebp - 0x1b2067d]; call dword ptr [eax - 1]; 
0x0807c1b4: je 0x341dc; add byte ptr [eax - 0x7c76fb73], dl; ret; 
0x0807c9f8: je 0x34a1e; xor byte ptr [ebx - 0xa3dbbc], cl; jo 0x34a06; call edi; 
0x0807cadb: je 0x34b0a; std; call dword ptr [eax - 0x18]; 
0x0807cc51: je 0x34c66; sub esp, 0xc; push edi; call 0x32fa0; mov dword ptr [esp], esi; call edi; 
0x0807ee4c: je 0x36e72; pushal; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0807ee50: je 0x36e76; pop esp; push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0807ee54: je 0x36e7a; mov eax, dword ptr fs:[esp + 0x48]; call eax; 
0x0807eff4: je 0x3701a; pop esp; push dword ptr [esp + 0x64]; call edi; 
0x0807f31e: je 0x37344; pushal; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x0807f322: je 0x37348; pop esp; push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x0807f326: je 0x3734c; mov eax, dword ptr fs:[esp + 0x44]; call eax; 
0x0807f5e3: je 0x37609; pop esp; push dword ptr [esp + 0x64]; call edi; 
0x0807f8f7: je 0x3791d; pushal; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; mov edx, dword ptr [esp + 0x54]; call edx; 
0x0807f8fb: je 0x37921; pop esp; push dword ptr [esp + 0x64]; mov edx, dword ptr [esp + 0x54]; call edx; 
0x0807f8ff: je 0x37925; mov edx, dword ptr fs:[esp + 0x54]; call edx; 
0x0807fb50: je 0x37b76; pop esp; push dword ptr [esp + 0x64]; call edi; 
0x0807fec3: je 0x37ee9; pushal; push dword ptr [esp + 0x68]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0807fec7: je 0x37eed; push 0x4824448b; call eax; 
0x08080179: je 0x3819f; pushal; push dword ptr [esp + 0x68]; call edi; 
0x080804d6: je 0x384fc; pop esp; push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x080804da: je 0x38500; mov eax, dword ptr fs:[esp + 0x50]; call eax; 
0x080806f5: je 0x3871b; pop esp; push dword ptr [esp + 0x64]; call edi; 
0x0808098e: je 0x389b4; pop eax; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x08080992: je 0x389b8; pop eax; mov eax, dword ptr [esp + 0x48]; call eax; 
0x08080e78: je 0x38e9e; pop eax; push dword ptr [esp + 0x58]; call edi; 
0x08080e7c: je 0x38ea2; pop eax; call edi; 
0x080814c5: je 0x394eb; pushal; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x080814c9: je 0x394ef; pushal; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x08081935: je 0x3995b; pushal; push dword ptr [esp + 0x60]; call edi; 
0x08081939: je 0x3995f; pushal; call edi; 
0x080821ca: je 0x3a1f0; pushal; push dword ptr [esp + 0x60]; call esi; 
0x080821ce: je 0x3a1f4; pushal; call esi; 
0x080823a8: je 0x3a3ce; xor byte ptr [edi], cl; mov dh, 0x9c; push ss; ret 0xfd35; 
0x080826be: je 0x3a6e4; pushal; push dword ptr [esp + 0x60]; call edi; 
0x080826c2: je 0x3a6e8; pushal; call edi; 
0x08082930: je 0x3a956; adc al, 0x89; ret 0x542b; 
0x08082eee: je 0x3af14; pop esp; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x08082ef2: je 0x3af18; pop esp; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0808325e: je 0x3b284; pop esp; push dword ptr [esp + 0x5c]; call edi; 
0x08083262: je 0x3b288; pop esp; call edi; 
0x08083428: je 0x3b4a6; cld; dec dword ptr [ebx - 0x72d3dba4]; add dword ptr [eax + 0x37], -3; call dword ptr [eax - 0x73]; 
0x08083689: je 0x3b6af; push 0x682474ff; mov eax, dword ptr [esp + 0x54]; call eax; 
0x0808368d: je 0x3b6b3; push 0x5424448b; call eax; 
0x08083b75: je 0x3bb9b; push 0x682474ff; call edi; 
0x08084248: je 0x3c26e; pop esp; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0808424c: je 0x3c272; pop esp; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0808461d: je 0x3c643; pop esp; push dword ptr [esp + 0x5c]; call edi; 
0x08084621: je 0x3c647; pop esp; call edi; 
0x08084a59: je 0x3ca7f; push 0x682474ff; mov eax, dword ptr [esp + 0x54]; call eax; 
0x08084a5d: je 0x3ca83; push 0x5424448b; call eax; 
0x08084f40: je 0x3cf66; push 0x682474ff; call edi; 
0x0808567a: je 0x3d6a0; pop esp; push dword ptr [esp + 0x50]; push dword ptr [esp + 0x50]; mov eax, dword ptr [esp + 0x38]; call eax; 
0x0808567e: je 0x3d6a4; push eax; push dword ptr [esp + 0x50]; mov eax, dword ptr [esp + 0x38]; call eax; 
0x08085682: je 0x3d6a8; push eax; mov eax, dword ptr [esp + 0x38]; call eax; 
0x080857a4: je 0x3d7ca; push eax; push dword ptr [esp + 0x50]; call esi; 
0x080857a8: je 0x3d7ce; push eax; call esi; 
0x08085a2a: je 0x3da4f; sub esp, 0xc; push edi; call 0x32fa0; mov dword ptr [esp], esi; call edi; 
0x0808627f: je 0x3e290; add esp, 4; pop ebx; pop esi; ret; 
0x0808640d: je 0x3e435; add byte ptr [ebp - 0x7aef8b2e], al; sar byte ptr [edx], 0xf; dec eax; ret 0xc083; 
0x080864d2: je 0x3e50d; std; call dword ptr [eax - 0x73]; 
0x08086504: je 0x3e52a; adc al, 0x8d; and dword ptr [eax + 0x12], 0xfffffffa; call dword ptr [eax - 1]; 
0x08086a21: je 0x3ea25; call edx; 
0x08086bee: je 0x3ebf2; call edx; 
0x08087b7d: je 0x3fb88; sub esp, 0xc; push esi; call eax; 
0x080887f3: je 0x40800; pop ebx; pop esi; pop edi; ret; 
0x08088f86: je 0x40fac; or al, 0x53; push dword ptr [esp + 0xc]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x08088f8b: je 0x40fb1; or al, 0x8b; inc esp; and al, 0x14; call eax; 
0x0808d1b2: je 0x451d8; adc al, 0xf6; ret 0xf01; 
0x0808d501: je 0x45527; adc byte ptr [edi], cl; mov dh, 0x56; or al, 0xf6; ret 0xf01; 
0x0808e365: je 0x4638d; add dh, dh; ret 0xf08; 
0x0808eb24: je 0x46b4a; sbb al, 0xe9; ret; 
0x0808fd0c: je 0x47d34; add byte ptr [eax - 0x3f7cef77], dl; add al, 0x83; ret 0x3910; 
0x0809047b: je 0x48476; cld; call dword ptr [eax + 0x68]; 
0x08092134: je 0x4a12f; cld; call dword ptr [eax + 0x68]; 
0x08092155: je 0x4a150; cld; call dword ptr [eax + 0x68]; 
0x0809216d: je 0x4a168; cld; call dword ptr [eax + 0x68]; 
0x0809218c: je 0x4a187; cld; call dword ptr [eax + 0x68]; 
0x0809219d: je 0x4a198; cld; call dword ptr [eax + 0x68]; 
0x080921d8: je 0x4a1d3; cld; call dword ptr [eax + 0x68]; 
0x08093edd: je 0x4bf05; add byte ptr [ebx - 0x4a343], al; jmp dword ptr [eax]; 
0x080968f4: je 0x4e900; add esp, 8; pop ebx; ret; 
0x08096b28: je 0x4eb4e; adc byte ptr [ebx - 0x75], bl; inc edi; adc al, 0x5e; pop edi; jmp eax; 
0x08096c88: je 0x4ecae; adc byte ptr [ebx - 0x75], bl; inc edi; adc byte ptr [esi + 0x5f], bl; jmp eax; 
0x08096e63: je 0x4ee68; and dword ptr [esi], 0xffffffef; pop ebx; pop esi; pop edi; ret; 
0x08096ebd: je 0x4eec2; and dword ptr [ebx], 0xffffffef; add esp, 4; pop ebx; pop esi; ret; 
0x08096f3d: je 0x4ef65; add byte ptr [ecx], ch; ret; 
0x08097101: je 0x4f114; pop ebx; pop esi; pop edi; ret; 
0x08097195: je 0x4f1bd; add byte ptr [ebp + 0xf0], bh; xor esi, esi; mov eax, ebp; mov ecx, 0x80; call dword ptr gs:[0x10]; 
0x080981ff: je 0x50360; bsr eax, eax; add eax, edi; pop edi; ret; 
0x080983cf: je 0x503b0; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x08098625: je 0x5064d; add byte ptr [ecx], dh; fild dword ptr [ebp - 0x760d8b37]; ret; 
0x080986c0: je 0x506e6; sbb al, 0xe8; push 0x83fffdc8; les ebx, ptr [eax]; pop ebx; ret; 
0x08098728: je 0x50730; mov eax, esi; pop ebx; pop esi; ret; 
0x08098900: je 0x50906; test edx, edx; jne 0x508f8; ret; 
0x08098a47: je 0x50a60; mov cl, dl; and cl, 0xf; je 0x50a70; ret; 
0x08098a4e: je 0x50a70; ret; 
0x08098a65: je 0x50a80; add eax, 2; ret; 
0x08098b44: je 0x50b58; cmp dword ptr [edx + eax*4 + 4], 0; lea ecx, [eax + 1]; jne 0x50b28; mov eax, ecx; ret; 
0x08098b54: je 0x50b7c; add byte ptr [eax - 0x37763e77], dl; ret; 
0x08098bae: je 0x50c70; sub esp, 8; push edi; push ebx; call eax; 
0x08098e52: je 0x50e78; sub al, 0xe8; in al, dx; std; jmp dword ptr [ebp - 0x77]; 
0x08099698: je 0x516be; sbb al, 0x75; and edi, dword ptr [eax + 0x12c]; call dword ptr gs:[0x10]; 
0x08099800: je 0x51830; mov ecx, dword ptr [esp + 0x10]; or dh, 0x80; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x08099870: je 0x51898; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x080998cb: je 0x518f1; inc esp; mov ebx, dword ptr [esp + 0x40]; lea edx, [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x08099c9c: je 0x51cc4; add byte ptr [eax - 0x74fba875], dl; inc ebp; fadd dword ptr [ebx - 0x377cf040]; add eax, dword ptr [ecx]; ret 0x458b; 
0x0809e5b2: je 0x565d8; adc al, 0xc7; ret 0x4d84; 
0x0809efa7: je 0x56fcd; adc al, 0xc7; ret 0; 
0x0809f426: je 0x57448; sub esp, 0xc; mov eax, 0x80e59e4; push ebx; call dword ptr [eax]; 
0x080a1b3c: je 0x59b64; add byte ptr [eax - 0x3f7cf775], dl; or byte ptr [ebp + 0x39010a54], cl; ret; 
0x080a2e45: je 0x5ae6d; add bh, al; ret 0x59b0; 
0x080a3c12: je 0x5bc0e; jmp dword ptr [esi - 0x70]; 
0x080a51b5: je 0x5d1db; sbb byte ptr [ebp - 0x1b28f7d], cl; call dword ptr [eax + 0x56]; 
0x080a72d8: je 0x5f2e6; lea eax, [ebx + 0x1a9c]; mov dword ptr [ebx + 0x1a98], eax; add esp, 8; pop ebx; ret; 
0x080a96d9: je 0x616eb; lea ebx, [esi + edx*4]; nop; call dword ptr [ebx]; 
0x080a96fd: je 0x61725; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x080aa5e8: je 0x6210b; mov eax, dword ptr [ebp - 0x9c]; call dword ptr [eax]; 
0x080aa5de: je 0x6210b; mov esi, dword ptr [eax]; test esi, esi; je 0x6210b; mov eax, dword ptr [ebp - 0x9c]; call dword ptr [eax]; 
0x080aab64: je 0x62b70; pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x080aaf0d: je 0x62f18; add esp, 8; pop ebx; ret; 
0x080aaf15: je 0x62f3d; add bh, al; ret 0; 
0x080aba52: je 0x63a78; sbb byte ptr [ebp - 0x395cf80], cl; call dword ptr [eax - 0x18]; 
0x080ace6a: je 0x64e90; xor al, 0x57; push esi; call eax; 
0x080acea4: je 0x64eca; xor al, 0x57; push esi; call dword ptr [ebp]; 
0x080add4d: je 0x65d73; or al, 0xb; je 0x65d77; or byte ptr [edi], cl; xchg eax, esp; ret; 
0x080add51: je 0x65d77; or byte ptr [edi], cl; xchg eax, esp; ret; 
0x080addf5: je 0x65e1b; adc byte ptr [edi], cl; test byte ptr [edx], dh; add dword ptr [eax], eax; add byte ptr [ebx + 0x3924245c], cl; ret; 
0x080adeb9: je 0x65edf; or al, 0xb; je 0x65ee3; or byte ptr [edi], cl; xchg eax, esp; ret; 
0x080adebd: je 0x65ee3; or byte ptr [edi], cl; xchg eax, esp; ret; 
0x080ae71c: je 0x66744; add byte ptr [eax - 0x7cec49f1], dl; ret; 
0x080aefc8: je 0x66fee; and al, 0x89; ret 0xd889; 
0x080af8ec: je 0x67914; add byte ptr [eax - 0x7cec49f1], dl; ret; 
0x080afb54: je 0x67b7c; add byte ptr [eax - 0x7cec49f1], dl; ret; 
0x080b059b: je 0x685a8; mov ebx, dword ptr [ebp - 0xc]; mov esi, dword ptr [ebp - 8]; mov edi, dword ptr [ebp - 4]; leave; ret; 
0x080b0790: je 0x6879d; sub esp, 8; push edx; push 1; call eax; 
0x080b07dc: je 0x68804; add byte ptr [eax - 0xf7137d], dl; jne 0x687f2; push ebx; call dword ptr [ebp + 8]; 
0x080b1009: je 0x6902f; or byte ptr [ecx - 0x76f3db94], cl; jl 0x69037; add al, 0x39; ret 0xb975; 
0x080b18ad: je 0x698d3; and al, 0x89; ret 0xe889; 
0x080b1a95: je 0x69abd; add byte ptr [ecx - 0x7c17760e], cl; ret; 
0x080b271b: je 0x6a741; adc al, 0x89; ret 0xd889; 
0x080b2eee: je 0x6aefa; mov dword ptr [esp + 8], edx; call eax; 
0x080b31c5: je 0x6b1d4; sub esp, 0xc; push eax; call edx; 
0x0804f4cf: je 0x74f5; and byte ptr [ecx + 0x244489c7], cl; and al, 0x89; ret; 
0x0804fc5e: je 0x7c84; xor al, 0x83; ret 0xc702; 
0x0804fca8: je 0x7cce; xor al, 0xc7; inc esp; and al, 0x38; or eax, 0x83000000; ret 0xc702; 
0x0804ff54: je 0x7f7a; or al, 0x55; push esi; mov eax, dword ptr [esp + 0x1c]; call eax; 
0x0804ffb6: je 0x7fdc; or al, 0xff; jne 0x7fbc; push dword ptr [esi]; mov eax, dword ptr [esp + 0x1c]; call eax; 
0x08050096: je 0x80bc; or al, 0x55; push esi; mov eax, dword ptr [esp + 0x1c]; call eax; 
0x08050106: je 0x812c; or al, 0x55; push esi; mov eax, dword ptr [esp + 0x1c]; call eax; 
0x080507dd: je 0x8803; dec eax; push dword ptr [edi]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x08050821: je 0x8847; dec esp; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x08050e7b: je 0x8ea1; adc byte ptr [ebp + 0x61850ff6], al; add eax, dword ptr [eax]; add byte ptr [ebx - 0x76d7dba4], cl; ret 0xdaf7; 
0x08051134: je 0x915c; add byte ptr [eax + 0x3901c083], dl; ret; 
0x080531af: je 0xb1aa; cld; call dword ptr [eax + 0x68]; 
0x08054505: je 0xc500; cld; call dword ptr [eax + 0x68]; 
0x08054516: je 0xc511; cld; call dword ptr [eax + 0x68]; 
0x08054527: je 0xc522; cld; call dword ptr [eax + 0x68]; 
0x080545e2: je 0xc5dd; cld; call dword ptr [eax + 0x68]; 
0x08054604: je 0xc5ff; cld; call dword ptr [eax + 0x68]; 
0x08054615: je 0xc610; cld; call dword ptr [eax + 0x68]; 
0x080568fd: je 0xe925; add byte ptr [ebx - 0x4e77b], cl; jmp dword ptr [ebp - 0x75]; 
0x08057413: je 0xf439; cmp al, 0x56; call dword ptr [edx + 0x1c]; 
0x08061779: jecxz 0x196fe; les ebp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0806bf9f: jecxz 0x23fa6; add byte ptr [eax], al; pop ebx; ret; 
0x080711ae: jecxz 0x29133; ret 0x6640; 
0x08074e40: jecxz 0x2cdc5; ret 0x8304; 
0x0807854c: jecxz 0x30577; ret; 
0x08078630: jecxz 0x3065b; ret; 
0x0808bc1d: jecxz 0x43ba2; rcr byte ptr [ebx], 0x89; ret 0x25; 
0x0808fcc0: jecxz 0x47ceb; ret; 
0x0809282e: jecxz 0x4a859; ret; 
0x0809297b: jecxz 0x4a9a6; ret; 
0x08094774: jecxz 0x4c79f; ret; 
0x08099dec: jecxz 0x51d77; shl dword ptr [0xfffff000], 0x29; ret; 
0x0809e103: jecxz 0x56109; add ebx, dword ptr [esp + 0x44]; push dword ptr [esp + 0x38]; call dword ptr [ebx + 0x38]; 
0x080a258c: jecxz 0x5a519; add bl, byte ptr [ebx + 0x5e]; ret; 
0x080a5b70: jecxz 0x5dafb; pop ds; pop ebx; pop esi; pop edi; ret; 
0x080acd61: jecxz 0x64d5c; dec dword ptr [ebp - 0x1657b7d]; call dword ptr [eax + 0x6a]; 
0x080b2d10: jecxz 0x6ac95; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x080551f3: jecxz 0xd178; rcr byte ptr [ebx], 0x89; shl dword ptr [0xfffff000], 0x29; ret; 
0x08055336: jecxz 0xd2bb; rcr byte ptr [ebx], 0x89; shl dword ptr [0xfffff000], 0x29; ret; 
0x0805664a: jecxz 0xe5cf; rcr byte ptr [ebx], 0x89; ret 0x25; 
0x08056858: jecxz 0xe7dd; rcr byte ptr [ebx], 0x89; shl dword ptr [0xfffff000], 0x29; ret; 
0x08056d68: jecxz 0xeced; rcr byte ptr [ebx], 0x89; shl dword ptr [0xfffff000], 0x29; ret; 
0x08060400: jg 0x1842b; ret 0xf789; 
0x08068208: jg 0x2024c; jo 0x2018d; ret 0x80; 
0x080682e0: jg 0x20324; out dx, eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x08068310: jg 0x20354; out dx, al; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x08068370: jg 0x203b4; in al, dx; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x080683cb: jg 0x2040f; fisub dword ptr [esi + 0xf]; jg 0x20414; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x080683d0: jg 0x20414; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x08068440: jg 0x20484; call 0x42d813ad; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x08068566: jg 0x205aa; ret; 
0x080685a6: jg 0x205ea; ret 0xf66; 
0x08068860: jg 0x208a4; out dx, eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x08068890: jg 0x208d4; out dx, al; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x080688f0: jg 0x20934; in al, dx; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0806894b: jg 0x2098f; fisub dword ptr [esi + 0xf]; jg 0x20994; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x08068950: jg 0x20994; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x080689c0: jg 0x20a04; call 0x42d8192d; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x08068ae6: jg 0x20b2a; ret; 
0x08068b26: jg 0x20b6a; ret 0xf66; 
0x0806db56: jg 0x25b5a; mov eax, edi; pop edi; ret; 
0x0806dde6: jg 0x25dea; mov eax, edx; ret; 
0x0806f3a6: jg 0x273aa; lea eax, [edx + 0xf]; pop edi; ret; 
0x0806f656: jg 0x2765a; lea eax, [edx + 0xf]; ret; 
0x080754ff: jg 0x2d53a; ret 0x3477; 
0x08090af7: jg 0x48b24; inc ebp; adc byte ptr [ecx], bh; ret; 
0x08090c60: jg 0x48c8d; push ebp; adc byte ptr [ecx], bh; ret 0x820f; 
0x08094b33: jg 0x4cb5e; ret 0xca39; 
0x0809d3da: jg 0x553dc; add byte ptr [ebp - 0x1c33b7d], cl; call dword ptr [eax - 0x73]; 
0x080a5315: jg 0x5d2ff; fist word ptr [esi]; std; call dword ptr [edx + 0x68]; 
0x080ad31a: jg 0x6531c; add byte ptr [ecx], bh; ret; 
0x080528e4: jg 0xa911; push ebp; adc byte ptr [ecx], bh; ret 0x820f; 
0x080531a6: jg 0xb1b7; xchg byte ptr [ebx], dh; idiv edi; dec dword ptr [ebp - 0x3068b79]; call dword ptr [eax + 0x68]; 
0x0805584f: jg 0xd87a; fidivr dword ptr [ecx]; ret 0x820f; 
0x08056bfb: jg 0xeb88; lea eax, [eax + 0x29fffffb]; ret 0xda39; 
0x08077f62: jge 0x2ff64; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x08097e9f: jge 0x4fea1; add byte ptr [eax], al; lea eax, [edi - 0x10]; pop edi; ret; 
0x080a0cc1: jge 0x58c73; sub dword ptr [ebx - 0x6bf0f7b3], ecx; ret 0x940f; 
0x080a1851: jge 0x59817; mov eax, 0x21; xor ecx, ecx; lea ebx, [edi - 0x1b7e5]; call dword ptr gs:[0x10]; 
0x080a3312: jge 0x5b2db; ret 0x6ee0; 
0x080a787f: jge 0x5f8bc; add byte ptr [eax], al; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x080b0493: jge 0x68491; leave; ret; 
0x080b04ac: jge 0x684aa; leave; ret; 
0x080b0534: jge 0x68532; mov ebp, dword ptr [ebp]; mov esp, ecx; pop ecx; jmp ecx; 
0x080b05a4: jge 0x685a2; leave; ret; 
0x080b05db: jge 0x685d9; mov ebp, dword ptr [ebp]; mov esp, ecx; pop ecx; jmp ecx; 
0x080b0690: jge 0x6868e; mov ebp, dword ptr [ebp]; mov esp, ecx; pop ecx; jmp ecx; 
0x080b06ea: jge 0x686e8; leave; ret; 
0x080b076a: jge 0x68768; mov ebp, dword ptr [ebp]; mov esp, ecx; pop ecx; jmp ecx; 
0x080a90fb: jge 0x83063775; ret; 
0x08059580: jl 0x115a6; sbb al, 0x8b; je 0x115aa; sbb byte ptr [ecx], ch; ret; 
0x08059668: jl 0x1168e; and al, 0x57; call dword ptr [ebx + 0x40]; 
0x0805c1a3: jl 0x141c9; sub byte ptr [ebx - 0x76d3db94], cl; ret; 
0x0805cdfb: jl 0x14e67; add ch, byte ptr [edx]; push 0; push esi; call dword ptr [edi + 0x40]; 
0x08060df2: jl 0x18e18; adc byte ptr [ecx], al; pop eax; add al, 0x89; ret; 
0x08062eb5: jl 0x1aedb; adc byte ptr [ebp - 0x2f17b79], cl; dec dword ptr [ebp - 0x3019569]; call dword ptr [eax - 0x73]; 
0x08062ed9: jl 0x1aeff; adc byte ptr [ebp - 0x2f17b79], cl; dec dword ptr [ebp - 0x3019569]; call dword ptr [eax - 0x73]; 
0x08062efd: jl 0x1af23; adc byte ptr [ebp - 0x2f17b79], cl; dec dword ptr [ebp - 0x3019569]; call dword ptr [eax - 0x73]; 
0x08062f21: jl 0x1af47; adc byte ptr [ebp - 0x2f17b79], cl; dec dword ptr [ebp - 0x3019569]; call dword ptr [eax - 0x73]; 
0x08062f4a: jl 0x1af70; adc byte ptr [ebp - 0x2f17b79], cl; dec dword ptr [ebp - 0x3019569]; call dword ptr [eax - 0x73]; 
0x08062f6e: jl 0x1af94; adc byte ptr [ebp - 0x2f16f79], cl; dec dword ptr [ebp - 0x301e669]; call dword ptr [eax - 0x73]; 
0x08064987: jl 0x1c9ad; adc al, 0x8d; xchg dword ptr [esi + ecx - 0x68720003], esi; sbb esi, edi; cld; call dword ptr [eax - 0x73]; 
0x08065dff: jl 0x1de25; sub byte ptr [ebp - 0x2f20379], cl; dec dword ptr [ebp - 0x301e669]; call dword ptr [eax - 0x73]; 
0x08065fab: jl 0x1dfd1; sub byte ptr [ebp - 0x2f20379], cl; dec dword ptr [ebp - 0x301e669]; call dword ptr [eax - 0x73]; 
0x0804a358: jl 0x237e; or al, 0xc7; ret 0x68c0; 
0x0804a845: jl 0x286b; or al, 0xc7; ret 0x6f84; 
0x08071be2: jl 0x29be4; add byte ptr [eax], al; mov eax, 0xc; pop edi; ret; 
0x08077255: jl 0x2f27b; sub al, 0xb8; mov word ptr [eax], es; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x08078dff: jl 0x30e0b; add dword ptr [ebx + 0x7d89d855], ecx; les edi, ptr [ecx]; ret 0x2c76; 
0x080791d8: jl 0x311fe; adc al, 0xe8; mov al, byte ptr [0x81fffd0a]; ret; 
0x080793b3: jl 0x313d9; push 0xf37b838d; cld; call dword ptr [eax - 0x73]; 
0x0807ae96: jl 0x32ec0; std; call dword ptr [eax - 0x18]; 
0x0807ff52: jl 0x37f78; or al, 0x89; ret; 
0x08080a23: jl 0x38a80; pop esi; pop edi; pop ebp; ret; 
0x08081182: jl 0x391a8; cmp al, 0x89; ret 0xf989; 
0x08081553: jl 0x395b0; pop esi; pop edi; pop ebp; ret; 
0x0808224f: jl 0x3a2ac; pop esi; pop edi; pop ebp; ret; 
0x08082495: jl 0x3a4bb; or bh, al; inc esp; and al, 0x10; add eax, 0xe9000000; ret; 
0x080825f2: jl 0x3a618; sbb byte ptr [ecx + 0xfce3938], cl; test byte ptr [ebp + eax], bl; add byte ptr [ebx - 0x72cfdba4], cl; and dword ptr [eax + 0x37], 0xfffffffd; call dword ptr [eax - 0x73]; 
0x08083406: jl 0x3b404; dec dword ptr [ebx - 0x72d3dba4]; add dword ptr [eax + 0x37], -3; call dword ptr [eax + 0x68]; 
0x08083429: jl 0x3b427; dec dword ptr [ebx - 0x72d3dba4]; add dword ptr [eax + 0x37], -3; call dword ptr [eax - 0x73]; 
0x0808371b: jl 0x3b778; pop esi; pop edi; pop ebp; ret; 
0x08084020: jl 0x3c092; cld; dec dword ptr [ebx - 0x72cbdba4]; xor dword ptr [eax + 0x35], 0xfffffffd; call dword ptr [eax - 0x73]; 
0x08084aeb: jl 0x3cb48; pop esi; pop edi; pop ebp; ret; 
0x080855e8: jl 0x3d645; pop esi; pop edi; pop ebp; ret; 
0x08095925: jl 0x4d982; pop esi; pop edi; pop ebp; ret; 
0x08098b47: jl 0x50acb; add al, 0; lea ecx, [eax + 1]; jne 0x50b28; mov eax, ecx; ret; 
0x0809e5d4: jl 0x565fa; xor byte ptr [ebp - 0x1c07f79], cl; call dword ptr [eax - 0x18]; 
0x0809eb5e: jl 0x56b84; xor byte ptr [ebp - 0x1c0bf79], cl; call dword ptr [eax - 0x18]; 
0x0809eb5e: jl 0x56b84; xor byte ptr [ebp - 0x1c0bf79], cl; call dword ptr [eax - 0x18]; ret; 
0x080a4d20: jl 0x5cd82; add byte ptr [eax], al; pop edx; pop ecx; pop eax; jmp dword ptr [eax]; 
0x080a81c3: jl 0x601e9; sub byte ptr [ebx], al; cmp dword ptr [edi - 0x18], edx; ret 0xff60; 
0x080ad1b7: jl 0x651dd; sbb al, 0x8b; push eax; or byte ptr [ecx], al; ret 0xd789; 
0x080ad34e: jl 0x65381; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x080af525: jl 0x6754b; or al, 0x83; ret; 
0x080af646: jl 0x6766c; or al, 0x89; ret; 
0x080af6f5: jl 0x6771b; or al, 0x83; ret; 
0x080af705: jl 0x6772b; or al, 0x83; ret; 
0x080af786: jl 0x677ac; or al, 0x83; ret; 
0x080af796: jl 0x677bc; or al, 0x83; ret; 
0x080b1011: jl 0x69037; add al, 0x39; ret 0xb975; 
0x080b1a8d: jl 0x69a88; dec dword ptr [ebp - 0x72c7db8c]; je 0x69abd; add byte ptr [ecx - 0x7c17760e], cl; ret; 
0x08050906: jl 0x888e; add al, 0x8d; mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr [esi]; 
0x0805834f: jle 0x102fa; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x080584d7: jle 0x10452; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08058ae7: jle 0x10a7a; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0805918a: jle 0x10bf3; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08049238: jle 0x1251; mov eax, 0xf0; lea ebx, [ebp + 0x15cc]; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x0805b667: jle 0x134a2; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x080493b0: jle 0x139b; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0804940a: jle 0x13f6; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08049463: jle 0x1450; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x080494bc: jle 0x14a9; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08049515: jle 0x1502; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0804956e: jle 0x155b; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0805dc77: jle 0x15be4; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0805dc4b: jle 0x15c10; mov eax, 0xf0; lea ebx, [edi + 0x1818]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x080495f1: jle 0x15dd; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0805de02: jle 0x15e20; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0805defb: jle 0x15e5c; mov eax, 0xf0; lea ebx, [edi + 0x1818]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0805e1eb: jle 0x16113; mov eax, 0xf0; lea ebx, [edi + 0x1818]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0805e187: jle 0x161a0; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0804964a: jle 0x1637; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0805e8a4: jle 0x168a7; push eax; push ecx; mov dword ptr [esp + 0x40], ecx; call dword ptr [ebx + 0xc]; 
0x080496a5: jle 0x1690; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0805f35f: jle 0x171f0; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0805f305: jle 0x17296; mov eax, 0xf0; lea ebx, [ebp + 0x1818]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0805f727: jle 0x17490; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0805f66b: jle 0x175d2; mov eax, 0xf0; lea ebx, [edi + 0x1818]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0805f9cf: jle 0x1789c; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0805f9fb: jle 0x17932; mov eax, 0xf0; lea ebx, [ebp + 0x1818]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0805ff0b: jle 0x17efd; lea ebx, [edx + 0x1818]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0806160d: jle 0x1958e; mov eax, 0xf0; lea ebx, [ebx + 0x1868]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08061acd: jle 0x199c2; mov eax, 0xf0; lea ebx, [ebp + 0x1868]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08061d12: jle 0x19c13; mov eax, 0xf0; lea ebx, [ebp + 0x1860]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08061d9b: jle 0x19c65; mov eax, 0xf0; lea ebx, [ebp + 0x1868]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08061e59: jle 0x19dff; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08061eb5: jle 0x19e31; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x080623f9: jle 0x1a1d5; mov ebx, dword ptr [esp + 0x1c]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08062d69: jle 0x1a882; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08064635: jle 0x1c5f0; mov eax, 0xf0; lea ebx, [ebx + 0x4e0]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08064791: jle 0x1c6c7; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08064b0d: jle 0x1ca5a; mov eax, 0xf0; lea ebx, [ebx + 0x4e0]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08064c5d: jle 0x1cbb4; mov eax, 0xf0; lea ebx, [ebx + 0x4e0]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08064bcb: jle 0x1cbe9; mov eax, 0xf0; lea ebx, [ebx + 0x4e0]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08065115: jle 0x1cf89; mov eax, 0xf0; lea ebx, [ebp + 0x4e0]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0806514d: jle 0x1d028; mov eax, 0xf0; lea ebx, [ebp + 0x4e0]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x080652f7: jle 0x1d2cd; mov ecx, 0x81; mov edx, 1; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x080656ba: jle 0x1d5db; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x080659c0: jle 0x1d8b7; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08065c65: jle 0x1dc0d; mov eax, 0xf0; lea ebx, [edi + 0x1868]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08066024: jle 0x1df6b; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08066524: jle 0x1e25a; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08066a77: jle 0x1e9f7; mov eax, 0xf0; mov ecx, 0x81; mov edx, edi; call dword ptr gs:[0x10]; 
0x08066cb8: jle 0x1ec13; mov eax, 0xf0; mov ecx, 0x81; mov ebx, ebp; mov edx, 1; call dword ptr gs:[0x10]; 
0x08066eed: jle 0x1edd5; mov eax, 0xf0; lea ebx, [ebx + 0x4e0]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x080717ce: jle 0x29759; ret 0xe283; 
0x08089525: jle 0x41358; mov eax, 0xf0; lea ebx, [ebx + 0x1a3c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08089637: jle 0x41613; mov eax, 0xf0; lea ebx, [ebx + 0x1a3c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08089805: jle 0x417a7; mov eax, 0xf0; lea ebx, [ebx + 0x1a3c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x080898cd: jle 0x41899; mov eax, 0xf0; lea ebx, [ebx + 0x1a3c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0808a488: jle 0x423b5; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0808d0cd: jle 0x4507d; mov eax, 0xf0; lea ebx, [ebx + 0x1a40]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0808edb5: jle 0x46c8b; mov eax, 0xf0; lea ebx, [ebx + 0x1a48]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0808f095: jle 0x47050; mov eax, 0xf0; lea ebx, [ebx + 0x1a4c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0808f15f: jle 0x4714e; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x080943f7: jle 0x4a59c; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x080951e7: jle 0x4d0ec; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08095b17: jle 0x4da88; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08095d59: jle 0x4dcbd; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08096034: jle 0x4df3b; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0804d07b: jle 0x501c; mov eax, 0xf0; lea ebx, [ebx + 0x15a4]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x080990e4: jle 0x510c6; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x080991d2: jle 0x5119c; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; mov ebx, edi; call dword ptr gs:[0x10]; 
0x08099490: jle 0x5146e; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x080a2181: jle 0x5a184; sub cl, byte ptr [edi]; test byte ptr [ecx + eax], ch; add byte ptr [ebx - 0x23b63], cl; dec dword ptr [ebp - 0x1b72b7d]; call dword ptr [eax - 0x73]; 
0x080a54a6: jle 0x5d4a8; add byte ptr [eax], al; sub esp, 0xc; push dword ptr [esp + 0x28]; mov edx, dword ptr [esp + 0x28]; call edx; 
0x080a7ccb: jle 0x5fd68; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0804ea01: jle 0x691a; mov eax, 0xf0; lea ebx, [ebx + 0x15c4]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x080b3285: jle 0x6b280; jmp dword ptr [esi - 0x70]; 
0x0805094f: jle 0x8708; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x08050868: jle 0x87b7; mov ecx, 0x81; mov edx, 1; mov eax, 0xf0; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x08050988: jle 0x88e2; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x08050bef: jle 0x8b60; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08050b99: jle 0x8b60; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; mov esi, edi; call dword ptr gs:[0x10]; 
0x080531cb: jle 0xb1cc; jmp dword ptr [esi - 0x70]; 
0x080564a7: jle 0xc9bc; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08057547: jle 0xf457; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08057e27: jle 0xfde9; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08057f6f: jle 0xff1f; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0805820f: jle 0xffde; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0805491a: jmp dword ptr [eax]; 
0x08088853: jmp dword ptr [ebp + 3]; 
0x08050ea9: jmp dword ptr [ebp - 0x39]; 
0x0804e904: jmp dword ptr [ebp - 0x5f]; 
0x0804bab1: jmp dword ptr [ebp - 0x75]; 
0x0805d3db: jmp dword ptr [ebp - 0x77]; 
0x0804aac3: jmp dword ptr [ebp - 0x7d]; 
0x08050c58: jmp dword ptr [ebp - 1]; 
0x08094bad: jmp dword ptr [ebx - 4]; 
0x0805b96a: jmp dword ptr [ebx]; 
0x080611ab: jmp dword ptr [ecx]; 
0x080a28cc: jmp dword ptr [edi + 0x6d]; 
0x0808cb7b: jmp dword ptr [edi + 0x75]; 
0x0808c823: jmp dword ptr [edi - 0x75]; 
0x0809a33e: jmp dword ptr [esi + 0x39]; 
0x0808e700: jmp dword ptr [esi + 0x3d]; 
0x0806bbbe: jmp dword ptr [esi + 0xf]; 
0x0804976d: jmp dword ptr [esi - 0x70]; 
0x0804e371: jmp dword ptr [esi - 0x77]; 
0x080a0eb3: jmp dword ptr [esi - 0x7b]; 
0x080777b9: jmp dword ptr [esi - 0x7d]; 
0x0809cceb: jmp dword ptr [esi - 0x7f]; 
0x08054926: jmp eax; 
0x08049bef: jmp ebx; 
0x0804f8ee: jmp ecx; 
0x0804a963: jmp edi; 
0x0804f689: jmp edx; 
0x080a78c0: jmp esi; 
0x080a755d: jmp esp; 
0x08058a28: jne 0x10a32; push eax; call dword ptr [ebx + 0x1c]; 
0x0805a6b3: jne 0x1277f; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0805a9cf: jne 0x129e0; mov eax, dword ptr [edx + 0x28]; cmp dword ptr [edx + 0x24], eax; cmovne eax, ecx; ret; 
0x0805aab7: jne 0x12a85; push ecx; push eax; push edi; call esi; 
0x0805cf50: jne 0x14f60; add esp, 8; pop ebx; ret; 
0x0805dc07: jne 0x15c40; sub dword ptr [edi + 0x1818], 1; pop ebx; pop esi; pop edi; ret; 
0x0805e27c: jne 0x16270; ret; 
0x080ae418: jne 0x16c6; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0805eccc: jne 0x16cc0; ret; 
0x0805f043: jne 0x1700a; add esp, 4; pop ebx; pop esi; ret; 
0x080b01bc: jne 0x171a; mov eax, dword ptr [eax]; add esp, 8; pop ebx; ret; 
0x080b021f: jne 0x171f; mov ebx, dword ptr [esp + 0x18]; mov dword ptr [eax], ebx; add esp, 8; pop ebx; ret; 
0x080b09d2: jne 0x1736; mov eax, 8; add esp, 8; pop ebx; ret; 
0x080b23d8: jne 0x1762; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0805faea: jne 0x17ae0; ret; 
0x0805fb38: jne 0x17b48; sub edx, dword ptr [eax + 0xc]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x0805fef4: jne 0x17f00; sub dword ptr [edx + 0x1818], 1; pop ebx; pop esi; ret; 
0x08060f9e: jne 0x18fa9; add esp, 8; pop ebx; ret; 
0x080614ae: jne 0x194b6; add esp, 0x14; pop ebx; pop esi; ret; 
0x08064c0a: jne 0x1cbc0; sub dword ptr [ebx + 0x4e0], 1; pop ebx; pop esi; pop edi; ret; 
0x08067224: jne 0x1f238; lea eax, [edx - 0x6fd70]; and ch, 2; lea edx, [edx - 0x7c470]; cmovne eax, edx; ret; 
0x08067274: jne 0x1f26e; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x08067d14: jne 0x1fd28; lea eax, [edx - 0x70460]; and ch, 2; lea edx, [edx - 0x7acc0]; cmovne eax, edx; ret; 
0x08067dd4: jne 0x1fde8; lea eax, [edx - 0x732d0]; and ch, 2; lea edx, [edx - 0x73240]; cmovne eax, edx; ret; 
0x08069f2e: jne 0x21fa0; movzx ecx, byte ptr [eax + 7]; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x0806b7a9: jne 0x239d0; pop ebx; ret; 
0x0806b866: jne 0x239f0; pop ebx; ret; 
0x0806bdf7: jne 0x24570; pop ebx; ret; 
0x0806bc30: jne 0x24586; pop ebx; ret; 
0x080704fe: jne 0x285c0; test al, 0x40; jne 0x285d0; lea eax, [edi + 7]; pop edi; ret; 
0x08070506: jne 0x285d0; lea eax, [edi + 7]; pop edi; ret; 
0x080703ce: jne 0x285d0; test dl, 0x40; jne 0x28650; lea eax, [edi + 7]; pop edi; ret; 
0x08070559: jne 0x28640; lea eax, [edi + 0xf]; pop edi; ret; 
0x080704c0: jne 0x28650; lea eax, [edi + 0xb]; pop edi; ret; 
0x0807047a: jne 0x28650; lea eax, [edi + 0xf]; pop edi; ret; 
0x0807041d: jne 0x28650; lea eax, [edi + 3]; pop edi; ret; 
0x080703d7: jne 0x28650; lea eax, [edi + 7]; pop edi; ret; 
0x0807097f: jne 0x28aa0; lea eax, [edi + 3]; pop edi; ret; 
0x080709a2: jne 0x28ad0; lea eax, [edi + 7]; pop edi; ret; 
0x080709c3: jne 0x28af0; test ah, 4; jne 0x28b00; lea eax, [edi + 0xb]; pop edi; ret; 
0x080709cc: jne 0x28b00; lea eax, [edi + 0xb]; pop edi; ret; 
0x080709ec: jne 0x28b20; test ah, 0x40; jne 0x28b30; lea eax, [edi + 0xf]; pop edi; ret; 
0x080709f5: jne 0x28b30; lea eax, [edi + 0xf]; pop edi; ret; 
0x08070a72: jne 0x28b40; xor eax, eax; pop edi; ret; 
0x08070b61: jne 0x28c30; sub edx, 4; jb 0x28cd0; lea eax, [edi + 3]; pop edi; ret; 
0x08070b92: jne 0x28c60; sub edx, 8; jb 0x28cd0; lea eax, [edi + 7]; pop edi; ret; 
0x08070bcc: jne 0x28c90; sub edx, 0xc; jb 0x28cd0; lea eax, [edi + 0xb]; pop edi; ret; 
0x08070ef2: jne 0x28fe0; pmovmskb eax, xmm1; bsf eax, eax; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x08070fa4: jne 0x29000; xor eax, eax; pop edi; ret; 
0x08070f6a: jne 0x29020; xor eax, eax; pop edi; ret; 
0x08071217: jne 0x292b0; test al, 4; jne 0x292c0; lea eax, [edx + 3]; ret; 
0x0807121f: jne 0x292c0; lea eax, [edx + 3]; ret; 
0x0807123a: jne 0x292e0; test al, 0x40; jne 0x292f0; lea eax, [edx + 7]; ret; 
0x08071242: jne 0x292f0; lea eax, [edx + 7]; ret; 
0x08071263: jne 0x29310; test ah, 4; jne 0x29320; lea eax, [edx + 0xb]; ret; 
0x0807126c: jne 0x29320; lea eax, [edx + 0xb]; ret; 
0x0807128c: jne 0x29340; test ah, 0x40; jne 0x29350; lea eax, [edx + 0xf]; ret; 
0x08071295: jne 0x29350; lea eax, [edx + 0xf]; ret; 
0x08071531: jne 0x29570; pmovmskb eax, xmm1; bsf eax, eax; lea eax, [edx + eax + 0x30]; ret; 
0x08071950: jne 0x29960; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x08071982: jne 0x29a40; sub edi, 4; jb 0x29ae0; lea eax, [eax + 3]; pop edi; ret; 
0x0807186f: jne 0x29c35; add eax, 3; pop edi; ret; 
0x08071895: jne 0x29c49; add eax, 7; pop edi; ret; 
0x080718b3: jne 0x29c58; test dh, 4; jne 0x29c5d; add eax, 0xb; pop edi; ret; 
0x080718bc: jne 0x29c5d; add eax, 0xb; pop edi; ret; 
0x080718e5: jne 0x29c71; add eax, 0xf; pop edi; ret; 
0x08074bbb: jne 0x2cbc1; xor eax, eax; pop ebx; ret; 
0x08074c4c: jne 0x2ce58; pop esi; xor eax, eax; pop ebx; ret; 
0x08074cc0: jne 0x2ce6c; pop esi; xor eax, eax; pop ebx; ret; 
0x080752a6: jne 0x2d29c; xor eax, eax; ret; 
0x08075c09: jne 0x2dc13; call esi; 
0x08075c6f: jne 0x2dc79; call esi; 
0x08076142: jne 0x2e16c; add esp, 0x18; pop ebx; ret; 
0x08076fb1: jne 0x2efc7; add esp, 0x18; pop ebx; ret; 
0x0807705b: jne 0x2f090; mov ecx, dword ptr [esp + 0x20]; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x0807710d: jne 0x2f130; mov eax, 3; call dword ptr gs:[0x10]; 
0x080771ad: jne 0x2f1d0; mov eax, 4; call dword ptr gs:[0x10]; 
0x08077282: jne 0x2f297; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x08077af3: jne 0x2fb37; add esp, 0x18; pop ebx; ret; 
0x08077e15: jne 0x2fe1c; add esp, 0x18; pop ebx; ret; 
0x08077e55: jne 0x2fe78; shr eax, 0xc; mov ebp, eax; mov eax, 0xc0; call dword ptr gs:[0x10]; 
0x08077fee: jne 0x30010; sub esp, 4; push edi; push 2; push ebx; call esi; 
0x08077fdb: jne 0x30020; sub esp, 4; push edi; push 1; push ebx; call esi; 
0x0807806e: jne 0x30090; sub esp, 4; push edi; push 2; push ebx; call esi; 
0x0807805b: jne 0x300a0; sub esp, 4; push edi; push 1; push ebx; call esi; 
0x080780cf: jne 0x300fc; sub esp, 0xc; push dword ptr [ebx]; call esi; 
0x080784c3: jne 0x3048d; mov dword ptr [ebp - 0x30], edx; call eax; 
0x08078a72: jne 0x30a78; ret; 
0x08078a96: jne 0x30aa0; ret; 
0x08078cb7: jne 0x30cb0; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x08079359: jne 0x31360; mov eax, edx; pop ebx; pop esi; ret; 
0x0807e240: jne 0x36227; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x0807eb18: jne 0x36b06; call 0x36640; or dword ptr [ebx + 0x195c], 2; add esp, 8; pop ebx; ret; 
0x0808898f: jne 0x40996; add esp, 0x18; pop ebx; ret; 
0x08088caa: jne 0x40cf0; mov ecx, esi; mov ebx, dword ptr [esp + 0xa0]; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x08088cdb: jne 0x40d17; add esp, 0x90; pop ebx; pop esi; pop edi; ret; 
0x08089658: jne 0x41622; mov eax, 0xf0; lea ebx, [ebx + 0x1a3c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0808f149: jne 0x47158; sub dword ptr [ebx], 1; pop ebx; pop esi; ret; 
0x08095a6e: jne 0x4da78; push esi; call dword ptr [eax + 0x1c]; 
0x08095c81: jne 0x4dc8b; push esi; call dword ptr [ebx + 0x1c]; 
0x0809640c: jne 0x4e400; ret; 
0x08096903: jne 0x4e91d; sub esp, 0xc; mov eax, dword ptr [eax + 0x88]; push ebx; call dword ptr [eax + 0x34]; 
0x08096b47: jne 0x4eab3; pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x08096ca7: jne 0x4ec13; pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x0809801d: jne 0x4fe80; xor eax, eax; pop edi; ret; 
0x08097e9d: jne 0x4ff20; lea eax, [edi - 0x10]; pop edi; ret; 
0x08097ec2: jne 0x4ff50; lea eax, [edi - 0xc]; pop edi; ret; 
0x08097eec: jne 0x4ff80; lea eax, [edi - 8]; pop edi; ret; 
0x08097f15: jne 0x4ffb0; lea eax, [edi - 4]; pop edi; ret; 
0x08098014: jne 0x500f0; and eax, 0xf; jne 0x4fe80; xor eax, eax; pop edi; ret; 
0x080985a5: jne 0x505aa; lea eax, [esi + 3]; pop esi; pop edi; ret; 
0x08098648: jne 0x50620; lea ebx, [eax + 8]; mov eax, ebx; pop ebx; ret; 
0x080987cb: jne 0x507cd; call edi; 
0x08098887: jne 0x50889; call esi; 
0x08098904: jne 0x508f8; ret; 
0x08098b4e: jne 0x50b28; mov eax, ecx; ret; 
0x08098c1b: jne 0x50cb0; mov eax, 0x109; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x08098ed3: jne 0x50f04; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x08099561: jne 0x51599; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x0809969b: jne 0x516c0; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x080997d0: jne 0x517da; add esp, 0x48; movzx eax, al; pop ebx; ret; 
0x08099971: jne 0x5198a; add esp, 0x34; pop ebx; pop esi; ret; 
0x0809bd36: jne 0x53d50; call dword ptr [eax]; 
0x0809f49f: jne 0x574a7; add esp, 4; pop ebx; pop esi; ret; 
0x0809f558: jne 0x57560; add esp, 4; pop ebx; pop esi; ret; 
0x080a09f6: jne 0x57abe; mov eax, dword ptr [ebp - 0x60]; call eax; 
0x080a09eb: jne 0x57abe; mov eax, dword ptr [ebp - 0x74]; test eax, eax; jne 0x57abe; mov eax, dword ptr [ebp - 0x60]; call eax; 
0x0809fe84: jne 0x57e22; call eax; 
0x0809ffbe: jne 0x57e8c; call eax; 
0x080a0a93: jne 0x58610; mov dword ptr [ebp - 0x60], edx; mov eax, dword ptr [ebp - 0x54]; call eax; 
0x080a0737: jne 0x5873b; call eax; 
0x080a08dd: jne 0x588ab; call eax; 
0x080a1503: jne 0x59507; call eax; 
0x080a1f40: jne 0x59ed0; mov edx, edi; mov ebx, dword ptr [ebp - 0x248]; lea ecx, [ebp - 0x218]; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x080a258b: jne 0x5a570; mov eax, dword ptr [edx]; pop ebx; pop esi; ret; 
0x080a33e7: jne 0x5b3f8; mov eax, 0x80e6cc8; mov edx, dword ptr [eax]; mov eax, edx; ret; 
0x080a3434: jne 0x5b410; mov eax, edx; pop ebx; ret; 
0x080a4df4: jne 0x5ce20; add esp, 0x28; pop ebx; ret; 
0x080a4ebe: jne 0x5cecc; add esp, 0x2c; ret; 
0x080a4fcb: jne 0x5cfdc; add esp, 0x34; pop ebx; pop esi; ret; 
0x080a506d: jne 0x5d074; add esp, 0x28; pop ebx; ret; 
0x080a517e: jne 0x5d18c; add esp, 0x2c; ret; 
0x080a5275: jne 0x5d27b; add esp, 0x2c; ret; 
0x080a54a4: jne 0x5d528; sub esp, 0xc; push dword ptr [esp + 0x28]; mov edx, dword ptr [esp + 0x28]; call edx; 
0x080a54f1: jne 0x5d53f; add esp, 0xd8; mov eax, ebx; pop ebx; ret; 
0x080a55a5: jne 0x5d5ae; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x080a79ff: jne 0x5fa05; add esp, 0x1c; ret; 
0x080a7b12: jne 0x5fb18; add esp, 0x2c; ret; 
0x080a8076: jne 0x600df; add esp, 0xa0; pop ebx; pop esi; pop edi; ret; 
0x080a88b5: jne 0x608bd; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x080ab0cb: jne 0x63380; lea ecx, [esp + 0x40]; mov eax, 0x180; mov ebx, 0x3005; call dword ptr gs:[0x10]; 
0x080aba1a: jne 0x63a20; add esp, 0x2c; ret; 
0x080abb3e: jne 0x63b48; add esp, 0x24; mov eax, esi; pop ebx; pop esi; ret; 
0x080abc36: jne 0x63c40; add esp, 0x24; mov eax, esi; pop ebx; pop esi; ret; 
0x080adb35: jne 0x65b3c; add esp, 0x28; pop ebx; ret; 
0x080ae3f2: jne 0x66410; mov eax, dword ptr [edx + 0x54]; add esp, 8; pop ebx; ret; 
0x080ae403: jne 0x66428; mov eax, dword ptr [edx + 0x5c]; add esp, 8; pop ebx; ret; 
0x080b0453: jne 0x6845d; push dword ptr [esi + 4]; push dword ptr [esi]; push 1; push 1; call eax; 
0x080b0490: jne 0x6848a; mov edi, dword ptr [ebp - 4]; leave; ret; 
0x080b04a4: jne 0x6849e; mov eax, 3; mov edi, dword ptr [ebp - 4]; leave; ret; 
0x080b0531: jne 0x6852b; mov edi, dword ptr [ebp - 4]; mov ebp, dword ptr [ebp]; mov esp, ecx; pop ecx; jmp ecx; 
0x080b05a1: jne 0x6859b; mov edi, dword ptr [ebp - 4]; leave; ret; 
0x080b05d8: jne 0x685d2; mov edi, dword ptr [ebp - 4]; mov ebp, dword ptr [ebp]; mov esp, ecx; pop ecx; jmp ecx; 
0x080b068d: jne 0x68687; mov edi, dword ptr [ebp - 4]; mov ebp, dword ptr [ebp]; mov esp, ecx; pop ecx; jmp ecx; 
0x080b06e4: jne 0x686de; add esp, 0x10; mov edi, dword ptr [ebp - 4]; leave; ret; 
0x080b0767: jne 0x68761; mov edi, dword ptr [ebp - 4]; mov ebp, dword ptr [ebp]; mov esp, ecx; pop ecx; jmp ecx; 
0x080b07e4: jne 0x687f2; push ebx; call dword ptr [ebp + 8]; 
0x080b09ea: jne 0x68a14; add esp, 8; mov eax, 4; pop ebx; ret; 
0x080b0a42: jne 0x68a50; mov eax, dword ptr [edx + 8]; add esp, 8; pop ebx; ret; 
0x080b0a53: jne 0x68a7b; add esp, 8; xor eax, eax; pop ebx; ret; 
0x080b0aa2: jne 0x68ab0; mov eax, dword ptr [edx + 8]; add esp, 8; pop ebx; ret; 
0x080b0ab3: jne 0x68adb; add esp, 8; xor eax, eax; pop ebx; ret; 
0x080b1ebc: jne 0x69ec8; add esp, 4; pop ebx; pop esi; ret; 
0x080b212b: jne 0x6a138; add esp, 8; pop ebx; ret; 
0x080b2a8f: jne 0x6aa60; pop ebx; pop esi; pop edi; ret; 
0x080b2be1: jne 0x6abc8; add esp, 4; pop ebx; pop esi; ret; 
0x080b2d0f: jne 0x6acf4; add esp, 4; pop ebx; pop esi; ret; 
0x0804fe2a: jne 0x7e09; ret; 
0x0804ffba: jne 0x7fbc; push dword ptr [esi]; mov eax, dword ptr [esp + 0x1c]; call eax; 
0x08083f5b: jno 0x3bf59; dec dword ptr [ebx - 0x72cbdba4]; xor dword ptr [eax + 0x35], 0xfffffffd; call dword ptr [eax - 0x73]; 
0x08083f7e: jno 0x3bf7c; dec dword ptr [ebx - 0x72cbdba4]; and dword ptr [eax], 0x37; std; call dword ptr [eax + 0x68]; 
0x080793b8: jnp 0x313ad; cld; call dword ptr [eax - 0x73]; 
0x0807cd1a: jnp 0x34d15; call dword ptr [eax - 0x77]; 
0x0807cf00: jnp 0x34efb; call dword ptr [eax - 0x77]; 
0x0807e4b6: jnp 0x364b1; call dword ptr [eax - 0x73]; 
0x0807e60f: jnp 0x3660a; call dword ptr [eax - 0x73]; 
0x080a3e9c: jnp 0x5bea2; mov dword ptr [ebx], eax; mov edx, dword ptr [ebx + 0xc]; mov ecx, dword ptr [ebx + 0x10]; mov eax, dword ptr [ebx + 0x14]; call dword ptr [ebx]; 
0x080a6cb4: jnp 0x5ecba; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x08099739: jnp 0x89153b83; ret; 
0x08049eba: jns 0x1eac; cld; call dword ptr [eax - 0x18]; 
0x0808000d: jns 0x38016; or byte ptr [edi], 0x87; ret; 
0x080a3e18: jns 0x5be79; mov edx, dword ptr [esp + 4]; mov ecx, eax; mov eax, dword ptr [esp + 0xc]; add esp, 0x20; jmp ecx; 
0x08060ac2: jo 0x18adc; add byte ptr [eax], al; ret; 
0x08067e1d: jo 0x1fde2; clc; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x08068066: jo 0x20028; add bh, dh; ret 0xf; 
0x080681a3: jo 0x20126; ret 0x80; 
0x0806820a: jo 0x2018d; ret 0x80; 
0x0806825c: jo 0x201df; ret 0x80; 
0x080686e6: jo 0x206a8; add bh, dh; ret 0xf; 
0x08069f2f: jo 0x21f40; mov dh, 0x48; pop es; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x0804a233: jo 0x21fc; ret 0; 
0x0804a471: jo 0x246c; call dword ptr [eax - 0x73]; 
0x0807767f: jo 0x2f68a; ret 0x850f; 
0x080788c7: jo 0x30854; push eax; add al, 0xf6; ret 0x7401; 
0x0807ca00: jo 0x34a06; call edi; 
0x08083f41: jo 0x3bf78; std; call dword ptr [eax - 0x73]; 
0x08083f64: jo 0x3bf9b; std; call dword ptr [eax - 0x73]; 
0x08083fa1: jo 0x3bf9f; dec dword ptr [ebx - 0x72cbdba4]; and dword ptr [eax], 0x37; std; call dword ptr [eax - 0x73]; 
0x08083fc4: jo 0x3bfc2; dec dword ptr [ebx - 0x72cbdba4]; and dword ptr [eax], 0x37; std; call dword ptr [eax + 0x68]; 
0x08083ffe: jo 0x3bffc; dec dword ptr [ebx - 0x72cbdba4]; xor dword ptr [eax + 0x35], 0xfffffffd; call dword ptr [eax - 0x73]; 
0x08083fe4: jo 0x3c01b; std; call dword ptr [eax - 0x73]; 
0x08084021: jo 0x3c01f; dec dword ptr [ebx - 0x72cbdba4]; xor dword ptr [eax + 0x35], 0xfffffffd; call dword ptr [eax - 0x73]; 
0x08084007: jo 0x3c03e; std; call dword ptr [eax - 0x73]; 
0x0808402a: jo 0x3c061; std; call dword ptr [eax - 0x73]; 
0x0808d42e: jo 0x453b9; ret 0xc483; 
0x080950a5: jo 0x4d0b3; push esi; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x1c]; 
0x08098ed7: jo 0x50f34; pop esi; pop edi; ret; 
0x08099565: jo 0x515c2; pop esi; pop edi; ret; 
0x080a56ba: jo 0x5d6c0; mov edi, dword ptr [eax + 8]; mov ebp, dword ptr [eax + 0xc]; mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x080a8672: jo 0x60678; push dword ptr [eax]; call 0x64f40; add esp, 0x1c; ret; 
0x080a866f: jo 0x60679; push dword ptr [eax + 4]; push dword ptr [eax]; call 0x64f40; add esp, 0x1c; ret; 
0x080a8982: jo 0x609c0; cld; call dword ptr [eax - 0x73]; 
0x080a9926: jo 0x61981; push cs; or byte ptr [ecx - 0xb363], cl; inc edi; ret; 
0x080abafd: jo 0x63b69; cld; call dword ptr [eax - 0x18]; 
0x08071b7a: jp 0x29b82; add byte ptr [edi], cl; test dh, al; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x08071bdd: jp 0x29bea; add byte ptr [edi], cl; test byte ptr [eax + eax], bh; add byte ptr [eax + 0xc], bh; pop edi; ret; 
0x08071c15: jp 0x29c26; add byte ptr [esp + ebx*2 - 0x48], dh; adc byte ptr [eax], al; add byte ptr [eax], al; pop edi; ret; 
0x08089fa0: jp 0x41f25; call dword ptr [eax]; 
0x080995ab: jp 0x515ad; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0805ad58: js 0x12d5b; jae 0x12dd1; fild dword ptr [eax - 0x76da2b83]; ret 0x5b74; 
0x08076024: js 0x2e040; std; call dword ptr [eax - 0x18]; 
0x080769f0: js 0x2ea0c; std; call dword ptr [eax - 0x18]; 
0x0807ae2f: js 0x32e5b; std; call dword ptr [eax - 0x73]; 
0x0807bfa7: js 0x33f2c; pushal; mov edi, 0xfff23fe9; call dword ptr [eax - 0x73]; 
0x080966cf: js 0x4e6cd; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x080a37ee: js 0x5b7ea; dec dword ptr [ebp - 0x1b43f7d]; call dword ptr [eax - 0x73]; 
0x080a380d: js 0x5b809; dec dword ptr [ebp - 0x1b43f7d]; call dword ptr [eax - 0x73]; 
0x080a56bd: js 0x5d6c7; mov ebp, dword ptr [eax + 0xc]; mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x080af029: js 0x67030; int 0x80; 
0x080af23c: js 0x67244; int 0x80; 
0x0809e57b: lahf; cmp eax, 0x968dfffe; test eax, 0xffffe3d; inc esp; ret 0x3980; 
0x08083ffd: lahf; jo 0x3bffc; dec dword ptr [ebx - 0x72cbdba4]; xor dword ptr [eax + 0x35], 0xfffffffd; call dword ptr [eax - 0x73]; 
0x0804d07c: lahf; mov eax, 0xf0; lea ebx, [ebx + 0x15a4]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x080754f8: lahf; ret 0xea81; 
0x0805dc53: lahf; sbb byte ptr [eax], bl; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x080a185b: lahf; sbb ecx, dword ptr [eax - 2]; jmp dword ptr [ebp - 1]; 
0x08057fe2: lahf; xchg eax, esp; add byte ptr [eax], al; add bh, al; ret 0x5f80; 
0x08060712: lcall 0x14c4:0x83ffffe7; pop ebx; pop esi; ret; 
0x080802d5: lcall 0x838d:0x50000002; xor al, 0xfd; call dword ptr [eax - 0x18]; 
0x0804bec2: lcall 0xf0b8:0x1550; add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0805ff0e: lcall 0xf0b8:0x1818; add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x080a8560: lcall 1:0x9891b60f; add dh, dh; ret 0x7510; 
0x08053091: lcall [eax + 0xf]; xchg eax, esp; ret 0x5652; 
0x08055ef6: lcall [eax + 0xf]; xchg eax, esp; ret 0xff52; 
0x080a7d2f: lcall [ebx + 0x31]; rcr byte ptr [esi + 0x5f], 0x5d; ret; 
0x0805a18a: lcall [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x08059d47: lcall [ebx + 0x5e]; ret; 
0x080999c4: lcall [ebx - 0x17]; inc ebp; sub esi, edi; jmp dword ptr [esi - 0x70]; 
0x08058494: lcall [ebx - 0x77]; clc; pop esi; pop edi; pop ebp; ret; 
0x08098161: lcall [edi]; add byte ptr [eax], al; jne 0x4fe80; xor eax, eax; pop edi; ret; 
0x08074e70: lcall [esi + 0x5b]; ret; 
0x08095bcd: lcall [esi + 0x5f]; ret; 
0x08077006: lds eax, ptr [eax]; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0805f044: lds eax, ptr [ebx + 0x5e5b04c4]; ret; 
0x08050077: lds eax, ptr [ecx + ecx*4]; add ecx, dword ptr [ebx - 0x7cfbdbbc]; ret; 
0x080769d7: lds eax, ptr [esi - 3]; dec dword ptr [ebp - 0x2e4977d]; call dword ptr [eax - 0x73]; 
0x080a843b: lds ebx, ptr [ebx + 0x5e]; mov eax, ebp; pop edi; pop ebp; ret 8; 
0x0805b888: lds ecx, ptr [ebx + 0x462b2046]; sbb al, 0x89; ret; 
0x080aafd5: lds ecx, ptr [edi]; xchg eax, esp; ret 0xf883; 
0x08077e5b: lds edi, ptr [eax + 0xc0]; call dword ptr gs:[0x10]; 
0x08050b9a: lds edi, ptr [eax + 0xf0]; mov ecx, 0x81; mov edx, 1; mov esi, edi; call dword ptr gs:[0x10]; 
0x0807194b: lea eax, [eax + 0x10]; test edx, edx; jne 0x29960; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x08056bfd: lea eax, [eax + 0x29fffffb]; ret 0xda39; 
0x0807aeee: lea eax, [eax + 0xa60]; ret; 
0x08071aa5: lea eax, [eax + 0xa]; pop edi; ret; 
0x080719fb: lea eax, [eax + 0xb]; pop edi; ret; 
0x08071ab5: lea eax, [eax + 0xc]; pop edi; ret; 
0x08071ac5: lea eax, [eax + 0xd]; pop edi; ret; 
0x08071ad5: lea eax, [eax + 0xe]; pop edi; ret; 
0x08071a24: lea eax, [eax + 0xf]; pop edi; ret; 
0x08071a39: lea eax, [eax + 1]; pop edi; ret; 
0x08071a49: lea eax, [eax + 2]; pop edi; ret; 
0x08071991: lea eax, [eax + 3]; pop edi; ret; 
0x08071a59: lea eax, [eax + 4]; pop edi; ret; 
0x08071a65: lea eax, [eax + 5]; pop edi; ret; 
0x08071a75: lea eax, [eax + 6]; pop edi; ret; 
0x080719c4: lea eax, [eax + 7]; pop edi; ret; 
0x08071a85: lea eax, [eax + 8]; pop edi; ret; 
0x08071a95: lea eax, [eax + 9]; pop edi; ret; 
0x080ab837: lea eax, [eax + eax*8 + 2]; call 0x637f0; add eax, ebx; jmp eax; 
0x08070fd3: lea eax, [eax + edi + 0x10]; pop edi; ret; 
0x08070fe3: lea eax, [eax + edi + 0x20]; pop edi; ret; 
0x08070fb3: lea eax, [eax + edi - 0x10]; pop edi; ret; 
0x08071563: lea eax, [eax + edx + 0x10]; ret; 
0x08071573: lea eax, [eax + edx + 0x20]; ret; 
0x08071543: lea eax, [eax + edx - 0x10]; ret; 
0x08054cab: lea eax, [eax - 0x74fffff7]; test dword ptr [ebx + edi*8 - 1], ebp; jmp dword ptr [ebp - 0x39]; 
0x080a72da: lea eax, [ebx + 0x1a9c]; mov dword ptr [ebx + 0x1a98], eax; add esp, 8; pop ebx; ret; 
0x080a84e0: lea eax, [ebx - 0x16cb4]; push eax; call 0x30a0; lea esi, [esi]; endbr32; ret 4; 
0x080769ee: lea eax, [ebx - 0x2e588]; push eax; call 0x30a0; mov ebx, dword ptr [esp + 4]; mov eax, 0xfc; call dword ptr gs:[0x10]; 
0x0805f092: lea eax, [ebx - 1]; pop ebx; ret; 
0x08070600: lea eax, [edi + 0xa]; pop edi; ret; 
0x080704c6: lea eax, [edi + 0xb]; pop edi; ret; 
0x08070620: lea eax, [edi + 0xc]; pop edi; ret; 
0x08070630: lea eax, [edi + 0xd]; pop edi; ret; 
0x08070640: lea eax, [edi + 0xe]; pop edi; ret; 
0x08070480: lea eax, [edi + 0xf]; pop edi; ret; 
0x08070580: lea eax, [edi + 1]; pop edi; ret; 
0x08070590: lea eax, [edi + 2]; pop edi; ret; 
0x08070423: lea eax, [edi + 3]; pop edi; ret; 
0x080705b0: lea eax, [edi + 4]; pop edi; ret; 
0x080705c0: lea eax, [edi + 5]; pop edi; ret; 
0x080705d0: lea eax, [edi + 6]; pop edi; ret; 
0x080703dd: lea eax, [edi + 7]; pop edi; ret; 
0x080705e0: lea eax, [edi + 8]; pop edi; ret; 
0x080705f0: lea eax, [edi + 9]; pop edi; ret; 
0x0807100a: lea eax, [edi + eax + 0x10]; pop edi; ret; 
0x0807101a: lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x08070eff: lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x08097ea3: lea eax, [edi - 0x10]; pop edi; ret; 
0x08097f60: lea eax, [edi - 0xa]; pop edi; ret; 
0x08097f50: lea eax, [edi - 0xb]; pop edi; ret; 
0x08097ec8: lea eax, [edi - 0xc]; pop edi; ret; 
0x08097f40: lea eax, [edi - 0xd]; pop edi; ret; 
0x08097f30: lea eax, [edi - 0xe]; pop edi; ret; 
0x08097f20: lea eax, [edi - 0xf]; pop edi; ret; 
0x08097fd0: lea eax, [edi - 1]; pop edi; ret; 
0x08097fc0: lea eax, [edi - 2]; pop edi; ret; 
0x08097fb0: lea eax, [edi - 3]; pop edi; ret; 
0x08097f1b: lea eax, [edi - 4]; pop edi; ret; 
0x08097fa0: lea eax, [edi - 5]; pop edi; ret; 
0x08097f90: lea eax, [edi - 6]; pop edi; ret; 
0x08097f80: lea eax, [edi - 7]; pop edi; ret; 
0x08097ef2: lea eax, [edi - 8]; pop edi; ret; 
0x08097f70: lea eax, [edi - 9]; pop edi; ret; 
0x08070570: lea eax, [edi]; pop edi; ret; 
0x0806f47e: lea eax, [edx + 0xa]; pop edi; ret; 
0x0806f5be: lea eax, [edx + 0xa]; ret; 
0x0806f36e: lea eax, [edx + 0xb]; pop edi; ret; 
0x0806f5de: lea eax, [edx + 0xb]; ret; 
0x0806f4a2: lea eax, [edx + 0xc]; pop edi; ret; 
0x0806f602: lea eax, [edx + 0xc]; ret; 
0x0806f4c2: lea eax, [edx + 0xd]; pop edi; ret; 
0x0806f622: lea eax, [edx + 0xd]; ret; 
0x0806f4e2: lea eax, [edx + 0xe]; pop edi; ret; 
0x0806f642: lea eax, [edx + 0xe]; ret; 
0x0806f3a8: lea eax, [edx + 0xf]; pop edi; ret; 
0x0806f658: lea eax, [edx + 0xf]; ret; 
0x0806f3c6: lea eax, [edx + 1]; pop edi; ret; 
0x0806f506: lea eax, [edx + 1]; ret; 
0x0806f3dc: lea eax, [edx + 2]; pop edi; ret; 
0x0806f51c: lea eax, [edx + 2]; ret; 
0x0806f2f4: lea eax, [edx + 3]; pop edi; ret; 
0x0806f524: lea eax, [edx + 3]; ret; 
0x0806f3fa: lea eax, [edx + 4]; pop edi; ret; 
0x0806f53a: lea eax, [edx + 4]; ret; 
0x0806f40c: lea eax, [edx + 5]; pop edi; ret; 
0x0806f54c: lea eax, [edx + 5]; ret; 
0x0806f42a: lea eax, [edx + 6]; pop edi; ret; 
0x0806f55a: lea eax, [edx + 6]; ret; 
0x0806f328: lea eax, [edx + 7]; pop edi; ret; 
0x0806f568: lea eax, [edx + 7]; ret; 
0x0806f43e: lea eax, [edx + 8]; pop edi; ret; 
0x0806f57e: lea eax, [edx + 8]; ret; 
0x0806f460: lea eax, [edx + 9]; pop edi; ret; 
0x0806f5a0: lea eax, [edx + 9]; ret; 
0x0807153a: lea eax, [edx + eax + 0x30]; ret; 
0x080985cc: lea eax, [edx - 0x4c4f0]; test byte ptr [ebx + 0xf], 4; pop ebx; cmovne eax, ecx; ret; 
0x08067226: lea eax, [edx - 0x6fd70]; and ch, 2; lea edx, [edx - 0x7c470]; cmovne eax, edx; ret; 
0x08067d16: lea eax, [edx - 0x70460]; and ch, 2; lea edx, [edx - 0x7acc0]; cmovne eax, edx; ret; 
0x08067dd6: lea eax, [edx - 0x732d0]; and ch, 2; lea edx, [edx - 0x73240]; cmovne eax, edx; ret; 
0x080674cc: lea eax, [edx - 0x73380]; test byte ptr [ebx + 0xf], 4; pop ebx; cmovne eax, ecx; ret; 
0x08067d51: lea eax, [edx - 0x7c9f0]; test byte ptr [ecx + 0x64], 4; lea edx, [edx - 0x7d070]; cmove eax, edx; ret; 
0x0806f3b4: lea eax, [edx]; pop edi; ret; 
0x0806f4f4: lea eax, [edx]; ret; 
0x0809560e: lea eax, [esi + 0x28]; push eax; push 1; push esi; call edx; 
0x080985a7: lea eax, [esi + 3]; pop esi; pop edi; ret; 
0x080885e1: lea eax, [esi + edi*8 - 1]; call dword ptr [eax - 1]; 
0x080958b7: lea eax, [esp + 0x14]; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x0805bad2: lea eax, [esp + 0x24]; push eax; push esi; call dword ptr [edi + 0x48]; 
0x08075c03: lea eax, [esp + 0x34]; push eax; push dword ptr [ebp + 8]; call esi; 
0x0805b769: lea eax, [esp + 0x34]; push eax; push esi; call dword ptr [edi + 0x48]; 
0x080593ad: lea eax, [esp + 0x3c]; push eax; push dword ptr [esp + 0x24]; call dword ptr [ebx + 0x48]; 
0x08098881: lea eax, [esp + 0x40]; push eax; push dword ptr [ebp]; call esi; 
0x0805be0b: lea eax, [esp + 0x44]; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x08075e41: lea eax, [esp + 0x64]; mov dword ptr [esp + 0x38], edx; push eax; push dword ptr [esp + 0x38]; call esi; 
0x08071009: lea eax, es:[edi + eax + 0x10]; pop edi; ret; 
0x08053e1b: lea ebp, [edi + esi*8 - 1]; call dword ptr [ecx + 0x6a]; 
0x08052b71: lea ebp, [edi + esi*8 - 1]; call dword ptr [esi + 0x52]; 
0x08098c06: lea ebp, [esp + 0xc]; push ebp; push ebx; call eax; 
0x08098660: lea ebx, [eax + 0xc]; mov eax, ebx; pop ebx; ret; 
0x08098658: lea ebx, [eax + 4]; mov eax, ebx; pop ebx; ret; 
0x0809864a: lea ebx, [eax + 8]; mov eax, ebx; pop ebx; ret; 
0x0809e0ff: lea ebx, [eax + eax*4]; shl ebx, 4; add ebx, dword ptr [esp + 0x44]; push dword ptr [esp + 0x38]; call dword ptr [ebx + 0x38]; 
0x080ab830: lea ebx, [eax*4 - 4]; lea eax, [eax + eax*8 + 2]; call 0x637f0; add eax, ebx; jmp eax; 
0x0804923f: lea ebx, [ebp + 0x15cc]; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x0805f30c: lea ebx, [ebp + 0x1818]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08061d1d: lea ebx, [ebp + 0x1860]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08061ad8: lea ebx, [ebp + 0x1868]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08065120: lea ebx, [ebp + 0x4e0]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x080b08aa: lea ebx, [ebp + edx*4]; push eax; push dword ptr [ebx]; push dword ptr [esp + 0x10]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x0804d082: lea ebx, [ebx + 0x15a4]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0804ea0c: lea ebx, [ebx + 0x15c4]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08061618: lea ebx, [ebx + 0x1868]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08089530: lea ebx, [ebx + 0x1a3c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0808d0d4: lea ebx, [ebx + 0x1a40]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0808edc0: lea ebx, [ebx + 0x1a48]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0808f09c: lea ebx, [ebx + 0x1a4c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0806463c: lea ebx, [ebx + 0x4e0]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x080b1c6c: lea ebx, [ebx - 1]; push dword ptr [esp + 0x10]; push dword ptr [ebp + ebx*4 + 8]; push dword ptr [esp + 0x20]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x0805dc52: lea ebx, [edi + 0x1818]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08065c6c: lea ebx, [edi + 0x1868]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x080a185a: lea ebx, [edi - 0x1b7e5]; call dword ptr gs:[0x10]; 
0x08079c56: lea ebx, [edi - 0x2de88]; int 0x80; 
0x0804bec1: lea ebx, [edx + 0x1550]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0804c040: lea ebx, [edx + 0x1550]; mov edx, 1; call dword ptr gs:[0x10]; 
0x0805ff0d: lea ebx, [edx + 0x1818]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x080a96db: lea ebx, [esi + edx*4]; nop; call dword ptr [ebx]; 
0x080a3abe: lea ebx, [esi - 0x1b3ee]; call dword ptr gs:[0x10]; 
0x08098b4b: lea ecx, [eax + 1]; jne 0x50b28; mov eax, ecx; ret; 
0x080a1f4a: lea ecx, [ebp - 0x218]; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x080a5302: lea ecx, [ebp - 2]; call dword ptr [edi + 0x56]; 
0x080559ed: lea ecx, [ebx + edi*8 + 0x418bffff]; add al, 0x89; ret 0xeac1; 
0x0805a84e: lea ecx, [edi + 0x28]; push ecx; mov eax, dword ptr [esp + 0x30]; push eax; call esi; 
0x0805a94d: lea ecx, [edi + 4]; push ecx; mov eax, dword ptr [esp + 0x30]; push eax; call esi; 
0x080985c6: lea ecx, [edx - 0x4c6f0]; lea eax, [edx - 0x4c4f0]; test byte ptr [ebx + 0xf], 4; pop ebx; cmovne eax, ecx; ret; 
0x080674c6: lea ecx, [edx - 0x73a70]; lea eax, [edx - 0x73380]; test byte ptr [ebx + 0xf], 4; pop ebx; cmovne eax, ecx; ret; 
0x080a3aba: lea ecx, [esp + 0x10]; lea ebx, [esi - 0x1b3ee]; call dword ptr gs:[0x10]; 
0x0804a48e: lea ecx, [esp + 0x40]; int 0x80; 
0x080ab0d1: lea ecx, [esp + 0x40]; mov eax, 0x180; mov ebx, 0x3005; call dword ptr gs:[0x10]; 
0x08088a06: lea ecx, [esp + 0x8c]; call dword ptr gs:[0x10]; 
0x080ac129: lea edi, [ebx + edi*8 - 1]; call dword ptr [eax - 0x18]; 
0x0805e8a3: lea edi, [esi + 1]; push eax; push ecx; mov dword ptr [esp + 0x40], ecx; call dword ptr [ebx + 0xc]; 
0x08050905: lea edi, [esi + eax*4 + 4]; lea esi, [esi]; call dword ptr [esi]; 
0x08094484: lea edx, [eax - 0x17000005]; ret 0xfe1b; 
0x08092d24: lea edx, [eax - 0x3e000005]; clc; add dl, byte ptr [eax + 0x51]; push esi; call dword ptr [ebx + 0x1c]; 
0x08061f26: lea edx, [eax - 0x80650]; mov dword ptr [eax + 0x4c0], edx; ret; 
0x080a4c69: lea edx, [eax - 1]; cmp edx, -3; jbe 0x5cc80; add esp, 8; pop ebx; ret; 
0x080a96d6: lea edx, [eax - 1]; je 0x616eb; lea ebx, [esi + edx*4]; nop; call dword ptr [ebx]; 
0x08079672: lea edx, [ecx - 0x6b9f0]; mov dword ptr [eax + 8], edx; pop ebx; pop esi; ret; 
0x0808f804: lea edx, [edi + esi*8 - 1]; call dword ptr [edx + 0x50]; 
0x08058535: lea edx, [edx + 0xfe0]; mov ecx, edx; mov dword ptr [eax + 0x94], ecx; mov ecx, dword ptr [eax + 0x58]; mov dword ptr [ecx + 0x88], edx; ret; 
0x0809726b: lea edx, [edx - 0x4ce70]; cmove eax, edx; ret; 
0x08067ddf: lea edx, [edx - 0x73240]; cmovne eax, edx; ret; 
0x08067cdb: lea edx, [edx - 0x74320]; cmove eax, edx; ret; 
0x080671eb: lea edx, [edx - 0x749a0]; cmove eax, edx; ret; 
0x08067da1: lea edx, [edx - 0x77210]; cmovne eax, edx; ret; 
0x08067271: lea edx, [edx - 0x78a60]; cmovne eax, edx; ret; 
0x08067d1f: lea edx, [edx - 0x7acc0]; cmovne eax, edx; ret; 
0x0806722f: lea edx, [edx - 0x7c470]; cmovne eax, edx; ret; 
0x08067d5b: lea edx, [edx - 0x7d070]; cmove eax, edx; ret; 
0x08057a65: lea edx, [esi + 0x28]; push edx; push 1; push esi; call eax; 
0x08077b04: lea edx, [esp + 4]; mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x08079748: lea edx, [esp + 8]; call 0x316b0; add esp, 0x18; pop ebx; ret; 
0x080998d2: lea edx, [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0807927f: lea esi, [eax]; add byte ptr [eax], al; ret; 
0x08093efb: lea esi, [ebx + edi*8 - 1]; call dword ptr [ecx + 0x6a]; 
0x08088df2: lea esi, [ecx + eax]; push esi; call edi; 
0x0808c197: lea esi, [edi + edi*8 - 1]; call dword ptr [edx + 0x56]; 
0x080544cb: lea esi, [edi + esi*8 - 1]; call dword ptr [eax + 0x50]; 
0x0805447a: lea esi, [edi + esi*8 - 1]; call dword ptr [eax + 0x56]; 
0x08052bc8: lea esi, [edi + esi*8 - 1]; call dword ptr [ecx + 0x6a]; 
0x08066fcd: lea esi, [esi]; add esp, 4; mov eax, 0x16; pop ebx; pop esi; ret; 
0x08059d3d: lea esi, [esi]; add esp, 4; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x08096984: lea esi, [esi]; add esp, 8; mov eax, 0xffffffff; pop ebx; ret; 
0x080980fd: lea esi, [esi]; and eax, 0x1f; jne 0x4fe80; xor eax, eax; pop edi; ret; 
0x0809812d: lea esi, [esi]; and eax, 0x1ff; jne 0x4fe80; xor eax, eax; pop edi; ret; 
0x0809810d: lea esi, [esi]; and eax, 0x3f; jne 0x4fe80; xor eax, eax; pop edi; ret; 
0x0809811d: lea esi, [esi]; and eax, 0x7f; jne 0x4fe80; xor eax, eax; pop edi; ret; 
0x080980dd: lea esi, [esi]; and eax, 3; jne 0x4fe80; xor eax, eax; pop edi; ret; 
0x080980ed: lea esi, [esi]; and eax, 7; jne 0x4fe80; xor eax, eax; pop edi; ret; 
0x08070faa: lea esi, [esi]; bsf eax, eax; lea eax, [eax + edi - 0x10]; pop edi; ret; 
0x0807155d: lea esi, [esi]; bsf eax, eax; lea eax, [eax + edx + 0x10]; ret; 
0x08077c1d: lea esi, [esi]; call 0x34310; add esp, 4; pop ebx; pop esi; ret; 
0x08050909: lea esi, [esi]; call dword ptr [esi]; 
0x080624fa: lea esi, [esi]; call eax; 
0x0807cbfc: lea esi, [esi]; endbr32; call 0x2a7f; add eax, 0x683f7; mov eax, dword ptr [eax + 0x1fa8]; ret; 
0x0805ef4c: lea esi, [esi]; endbr32; mov eax, 0xffffffff; mov edx, 0xffffffff; ret; 
0x0805fdaa: lea esi, [esi]; endbr32; mov eax, 0xffffffff; ret; 
0x080b023c: lea esi, [esi]; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x080b02ec: lea esi, [esi]; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x54]; ret; 
0x080b028c: lea esi, [esi]; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x5c]; ret; 
0x0805fe2c: lea esi, [esi]; endbr32; mov eax, dword ptr [esp + 4]; ret; 
0x080a84ec: lea esi, [esi]; endbr32; ret 4; 
0x0805fdda: lea esi, [esi]; endbr32; ret; 
0x0805ee99: lea esi, [esi]; endbr32; xor eax, eax; ret; 
0x08055cb4: lea esi, [esi]; jmp eax; 
0x080705fc: lea esi, [esi]; lea eax, [edi + 0xa]; pop edi; ret; 
0x0807060c: lea esi, [esi]; lea eax, [edi + 0xb]; pop edi; ret; 
0x0807061c: lea esi, [esi]; lea eax, [edi + 0xc]; pop edi; ret; 
0x0807062c: lea esi, [esi]; lea eax, [edi + 0xd]; pop edi; ret; 
0x0807063c: lea esi, [esi]; lea eax, [edi + 0xe]; pop edi; ret; 
0x0807058c: lea esi, [esi]; lea eax, [edi + 2]; pop edi; ret; 
0x0807059c: lea esi, [esi]; lea eax, [edi + 3]; pop edi; ret; 
0x080705ac: lea esi, [esi]; lea eax, [edi + 4]; pop edi; ret; 
0x080705bc: lea esi, [esi]; lea eax, [edi + 5]; pop edi; ret; 
0x080705cc: lea esi, [esi]; lea eax, [edi + 6]; pop edi; ret; 
0x080705dc: lea esi, [esi]; lea eax, [edi + 8]; pop edi; ret; 
0x080705ec: lea esi, [esi]; lea eax, [edi + 9]; pop edi; ret; 
0x08097f5c: lea esi, [esi]; lea eax, [edi - 0xa]; pop edi; ret; 
0x08097f4c: lea esi, [esi]; lea eax, [edi - 0xb]; pop edi; ret; 
0x08097f3c: lea esi, [esi]; lea eax, [edi - 0xd]; pop edi; ret; 
0x08097f2c: lea esi, [esi]; lea eax, [edi - 0xe]; pop edi; ret; 
0x08097fcc: lea esi, [esi]; lea eax, [edi - 1]; pop edi; ret; 
0x08097fbc: lea esi, [esi]; lea eax, [edi - 2]; pop edi; ret; 
0x08097fac: lea esi, [esi]; lea eax, [edi - 3]; pop edi; ret; 
0x08097f9c: lea esi, [esi]; lea eax, [edi - 5]; pop edi; ret; 
0x08097f8c: lea esi, [esi]; lea eax, [edi - 6]; pop edi; ret; 
0x08097f7c: lea esi, [esi]; lea eax, [edi - 7]; pop edi; ret; 
0x08097f6c: lea esi, [esi]; lea eax, [edi - 9]; pop edi; ret; 
0x080712aa: lea esi, [esi]; lea eax, [edx + 1]; ret; 
0x080712a3: lea esi, [esi]; lea esi, [esi]; lea eax, [edx + 1]; ret; 
0x08098a93: lea esi, [esi]; lea esi, [esi]; mov eax, 1; ret; 
0x08098aa6: lea esi, [esi]; lea esi, [esi]; mov eax, 2; ret; 
0x08098ab6: lea esi, [esi]; lea esi, [esi]; mov eax, 3; ret; 
0x08098ac6: lea esi, [esi]; lea esi, [esi]; mov eax, 4; ret; 
0x08098ad6: lea esi, [esi]; lea esi, [esi]; mov eax, 5; ret; 
0x08098ae6: lea esi, [esi]; lea esi, [esi]; mov eax, 6; ret; 
0x08098af6: lea esi, [esi]; lea esi, [esi]; mov eax, 7; ret; 
0x0805fc16: lea esi, [esi]; lea esi, [esi]; ret; 
0x0806a192: lea esi, [esi]; lea esi, [esi]; xor eax, eax; ret; 
0x0806f3ad: lea esi, [esi]; mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, [edx]; pop edi; ret; 
0x0806db5c: lea esi, [esi]; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edi; pop edi; ret; 
0x0806dc7d: lea esi, [esi]; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edx; ret; 
0x080608ed: lea esi, [esi]; mov dword ptr [edx + 0x488], eax; mov dword ptr [edx + 0x4a0], 1; ret; 
0x08060a5d: lea esi, [esi]; mov dword ptr [edx + 0x4b8], eax; ret; 
0x08066f6d: lea esi, [esi]; mov eax, 0x16; add esp, 0xc; ret; 
0x08098c69: lea esi, [esi]; mov eax, 0x193; mov ecx, edi; call dword ptr gs:[0x10]; 
0x080a3c7c: lea esi, [esi]; mov eax, 0x80e6f2c; call dword ptr [eax]; 
0x0806a1aa: lea esi, [esi]; mov eax, 1; ja 0x221b9; neg eax; ret; 
0x08098a9a: lea esi, [esi]; mov eax, 1; ret; 
0x08098aad: lea esi, [esi]; mov eax, 2; ret; 
0x08098abd: lea esi, [esi]; mov eax, 3; ret; 
0x08098acd: lea esi, [esi]; mov eax, 4; ret; 
0x08098add: lea esi, [esi]; mov eax, 5; ret; 
0x08098aed: lea esi, [esi]; mov eax, 6; ret; 
0x08098afd: lea esi, [esi]; mov eax, 7; ret; 
0x080507fd: lea esi, [esi]; mov eax, dword ptr [edi - 4]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x080ae432: lea esi, [esi]; mov eax, dword ptr [edx + 0x58]; add esp, 8; pop ebx; ret; 
0x08071ada: lea esi, [esi]; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x0805ae8a: lea esi, [esi]; mov eax, edi; call dword ptr gs:[0x10]; 
0x08070a7c: lea esi, [esi]; mov eax, edi; pop edi; ret; 
0x0804a771: lea esi, [esi]; mov eax, edx; int 0x80; 
0x08097194: lea esi, [esi]; mov ebp, 0xf0; xor esi, esi; mov eax, ebp; mov ecx, 0x80; call dword ptr gs:[0x10]; 
0x0806f64d: lea esi, [esi]; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; ret; 
0x0806dddc: lea esi, [esi]; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x0806dced: lea esi, [esi]; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x0805e515: lea esi, [esi]; movzx eax, byte ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x08098a6b: lea esi, [esi]; nop; add eax, 1; ret; 
0x08098a7b: lea esi, [esi]; nop; add eax, 3; ret; 
0x08089953: lea esi, [esi]; nop; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0807057b: lea esi, [esi]; nop; lea eax, [edi + 1]; pop edi; ret; 
0x0807056b: lea esi, [esi]; nop; lea eax, [edi]; pop edi; ret; 
0x0807131b: lea esi, [esi]; nop; lea eax, [edx + 0xa]; ret; 
0x0807132b: lea esi, [esi]; nop; lea eax, [edx + 0xc]; ret; 
0x0807133b: lea esi, [esi]; nop; lea eax, [edx + 0xd]; ret; 
0x0807134b: lea esi, [esi]; nop; lea eax, [edx + 0xe]; ret; 
0x080712bb: lea esi, [esi]; nop; lea eax, [edx + 2]; ret; 
0x080712cb: lea esi, [esi]; nop; lea eax, [edx + 4]; ret; 
0x080712db: lea esi, [esi]; nop; lea eax, [edx + 5]; ret; 
0x080712eb: lea esi, [esi]; nop; lea eax, [edx + 6]; ret; 
0x080712fb: lea esi, [esi]; nop; lea eax, [edx + 8]; ret; 
0x0807130b: lea esi, [esi]; nop; lea eax, [edx + 9]; ret; 
0x0805a9db: lea esi, [esi]; nop; mov eax, 0xffffffff; ret; 
0x08069feb: lea esi, [esi]; nop; mov eax, 1; ja 0x21ff9; neg eax; ret; 
0x08098b53: lea esi, [esi]; nop; mov ecx, eax; mov eax, ecx; ret; 
0x08069f5b: lea esi, [esi]; nop; movzx ecx, byte ptr [eax + 2]; movzx eax, byte ptr [edx + 2]; sub eax, ecx; ret; 
0x08069f6b: lea esi, [esi]; nop; movzx ecx, byte ptr [eax + 3]; movzx eax, byte ptr [edx + 3]; sub eax, ecx; ret; 
0x08069f7b: lea esi, [esi]; nop; movzx ecx, byte ptr [eax + 4]; movzx eax, byte ptr [edx + 4]; sub eax, ecx; ret; 
0x08069f8b: lea esi, [esi]; nop; movzx ecx, byte ptr [eax + 5]; movzx eax, byte ptr [edx + 5]; sub eax, ecx; ret; 
0x08069f9b: lea esi, [esi]; nop; movzx ecx, byte ptr [eax + 6]; movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x08069f3b: lea esi, [esi]; nop; movzx ecx, byte ptr [eax]; movzx eax, byte ptr [edx]; sub eax, ecx; ret; 
0x080b1e58: lea esi, [esi]; nop; pop ebx; ret; 
0x08049cb7: lea esi, [esi]; nop; ret; 
0x0805fb43: lea esi, [esi]; nop; sub edx, dword ptr [eax + 8]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x080b07db: lea esi, [esi]; nop; sub esp, 8; push dword ptr [ebp + 0xc]; push ebx; call dword ptr [ebp + 8]; 
0x0807075b: lea esi, [esi]; nop; xor eax, eax; pop edi; ret; 
0x0806bacb: lea esi, [esi]; nop; xor eax, eax; ret; 
0x0806b9ed: lea esi, [esi]; pop ebx; mov eax, 1; ja 0x239fa; neg eax; ret; 
0x08096cbd: lea esi, [esi]; pop ebx; mov eax, dword ptr [edx]; pop esi; pop edi; ret; 
0x08079d2d: lea esi, [esi]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x080a96fc: lea esi, [esi]; pop ebx; pop esi; pop edi; ret; 
0x080608bd: lea esi, [esi]; pop ebx; pop esi; ret; 
0x0806baaa: lea esi, [esi]; pop ebx; xor eax, eax; ret; 
0x08049d04: lea esi, [esi]; ret; 
0x0805f08a: lea esi, [esi]; sub ebx, edx; lea eax, [ebx - 1]; pop ebx; ret; 
0x080a54fd: lea esi, [esi]; sub esp, 0xc; mov dword ptr gs:[ebx], 0; push dword ptr [esp + 0x28]; mov eax, dword ptr [esp + 0x28]; call eax; 
0x080588bd: lea esi, [esi]; sub esp, 4; push 0x10; push edi; push esi; call dword ptr [eax + 0x1c]; 
0x080ace9d: lea esi, [esi]; sub esp, 4; push dword ptr [esp + 0x34]; push edi; push esi; call dword ptr [ebp]; 
0x08065ae5: lea esi, [esi]; sub esp, 8; push dword ptr [esp + 0x24]; push ebx; call eax; 
0x08075534: lea esi, [esi]; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x080996cc: lea esi, [esi]; xor eax, eax; pop ebx; pop esi; ret; 
0x080ab7e1: lea esi, [esi]; xor eax, eax; pop ebx; ret; 
0x0807064c: lea esi, [esi]; xor eax, eax; pop edi; ret; 
0x0804fe2d: lea esi, [esi]; xor eax, eax; ret; 
0x080530d9: lea esp, [eax]; idiv edi; dec dword ptr [ebx - 0x8af7b]; call dword ptr [edx - 0x75]; 
0x08053696: lea esp, [eax]; idiv edi; dec dword ptr [ebx - 0x8af7b]; call dword ptr [esi - 0x18]; 
0x0804b5aa: lea esp, [ebp - 0xc]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x08049ee7: lea esp, [ebp - 8]; pop ecx; pop ebx; pop ebp; lea esp, [ecx - 4]; ret; 
0x080570b9: lea esp, [ebx + edi*8 - 1]; call dword ptr [eax + 0x56]; 
0x0805611b: lea esp, [ebx + edi*8 - 1]; call dword ptr [ecx + 0x6a]; 
0x08094d85: lea esp, [ebx + edi*8 - 1]; call dword ptr [edx - 0x18]; 
0x080927ea: lea esp, [ebx + edi*8 - 1]; call dword ptr [edx - 0x77]; 
0x08094042: lea esp, [ebx + edi*8 - 1]; dec dword ptr [ebp - 0x4037b]; call dword ptr [ebx - 0x18]; 
0x08049eed: lea esp, [ecx - 4]; ret; 
0x080542eb: lea esp, [edi + esi*8 - 1]; call dword ptr [eax + 0x53]; 
0x08051cb4: lea esp, [edi + esi*8 - 1]; call dword ptr [edx + 0x50]; 
0x08083bb6: leave; add al, byte ptr [eax]; add byte ptr [ebx - 0x72cbdba4], cl; and dword ptr [eax], 0x37; std; call dword ptr [eax - 0x73]; 
0x080995f5: leave; add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; ret; 
0x0808126d: leave; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; adc eax, 0x34; std; call dword ptr [eax - 0x18]; 
0x0805b13c: leave; add dword ptr [eax], eax; add esp, 0x18; pop ebx; ret; 
0x080713a7: leave; add eax, ecx; ret; 
0x080ab2bc: leave; call dword ptr gs:[0x10]; 
0x080747de: leave; cmp al, byte ptr [ebx - 0x7bf0ef07]; pop ss; add dword ptr [eax], eax; add byte ptr [ebx - 0x76f3dbbc], cl; ret 0xe283; 
0x08082c51: leave; idiv bh; dec dword ptr [ebx - 0x72cfdba4]; and dword ptr [eax + 0x37], 0xfffffffd; call dword ptr [eax + 0x68]; 
0x08083f37: leave; idiv edi; dec dword ptr [ebx - 0x72cbdba4]; xor dword ptr [eax + 0x35], 0xfffffffd; call dword ptr [eax - 0x73]; 
0x08077f43: leave; inc ebx; add byte ptr [eax], al; ret; 
0x0804a810: leave; int 0x80; 
0x080713a2: leave; je 0x293b0; bsf ecx, ecx; add eax, ecx; ret; 
0x080b1a8c: leave; jl 0x69a88; dec dword ptr [ebp - 0x72c7db8c]; je 0x69abd; add byte ptr [ecx - 0x7c17760e], cl; ret; 
0x0805a9ce: leave; jne 0x129e0; mov eax, dword ptr [edx + 0x28]; cmp dword ptr [edx + 0x24], eax; cmovne eax, ecx; ret; 
0x08079358: leave; jne 0x31360; mov eax, edx; pop ebx; pop esi; ret; 
0x080a3433: leave; jne 0x5b410; mov eax, edx; pop ebx; ret; 
0x080a1859: leave; lea ebx, [edi - 0x1b7e5]; call dword ptr gs:[0x10]; 
0x08079c55: leave; lea ebx, [edi - 0x2de88]; int 0x80; 
0x0804fe7e: leave; mov dword ptr [edx + 0x28], ecx; ret; 
0x08049cb5: leave; ret; 
0x08070d1f: leave; sub edx, ecx; jbe 0x28d50; add eax, ecx; ret; 
0x080660a7: les eax, ptr [eax + eax]; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x46480], cl; add byte ptr [ebp - 0x17fa8640], al; ret 0xffb2; 
0x08066fd1: les eax, ptr [eax + edi*4]; push ss; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x08070508: les eax, ptr [eax]; add byte ptr [eax], al; lea eax, [edi + 7]; pop edi; ret; 
0x08099656: les eax, ptr [eax]; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0807145d: les eax, ptr [ebp - 0x257af040]; add byte ptr [eax], al; add bh, dh; ret 0x3f; 
0x08059d37: les eax, ptr [ebx + ebx*2]; pop esi; jmp eax; 
0x08060b4c: les eax, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0804af37: les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0807428a: les eax, ptr [ebx + ebx*2]; ret; 
0x080a44b9: les eax, ptr [ecx + ebp]; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x0806617b: les eax, ptr [ecx + ebp]; ret 0xda21; 
0x08071261: les eax, ptr [edx]; jne 0x29310; test ah, 4; jne 0x29320; lea eax, [edx + 0xb]; ret; 
0x08097eea: les eax, ptr [edx]; jne 0x4ff80; lea eax, [edi - 8]; pop edi; ret; 
0x080596c5: les ebp, ptr [eax + eax + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x080847d8: les ebp, ptr [eax - 4]; dec dword ptr [ebx - 0x72d3dba4]; and eax, 0x36; std; call dword ptr [eax - 0x73]; 
0x08050c72: les ebp, ptr [eax]; pop ebx; ret; 
0x0807a76a: les ebp, ptr [eax]; std; call dword ptr [eax - 0x18]; 
0x0804aab7: les ebp, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x080a841b: les ebp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret 8; 
0x0804efa3: les ebp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0804edfa: les ebp, ptr [ecx + ecx*4]; call 0x5d5fcc5d; ret; 
0x0806491a: les ebp, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x0804e2dc: les ebx, ptr [eax]; pop ebx; ret; 
0x0805d1a6: les ebx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x080516ab: les ebx, ptr [ebx + ebx*2]; mov eax, edx; pop esi; pop edi; pop ebp; ret; 
0x0806015b: les ebx, ptr [ebx + ebx*2]; neg eax; pop esi; pop edi; pop ebp; ret; 
0x080866d8: les ebx, ptr [ebx + ebx*2]; pop esi; mov eax, ebp; pop edi; pop ebp; ret; 
0x0805bd0d: les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; jmp eax; 
0x0804aedd: les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0809936e: les ebx, ptr [ecx + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0804b155: les ebx, ptr [ecx + ecx*4]; call 0x5d5f8fb8; ret; 
0x08078b2b: les ebx, ptr [ecx + ecx*4]; call 0x5d62698e; ret; 
0x08086629: les ebx, ptr [ecx + ecx*4]; call 0x5d63448c; ret; 
0x080783aa: les ebx, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x0805159b: les ebx, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x0804f427: les ebx, ptr [ecx + esi]; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x080aba67: les ebx, ptr [edi + ecx]; mov dh, 0xc0; neg eax; ret; 
0x080997d3: les ecx, ptr [eax + 0xf]; mov dh, 0xc0; pop ebx; ret; 
0x08096989: les ecx, ptr [eax]; mov eax, 0xffffffff; pop ebx; ret; 
0x080b09ed: les ecx, ptr [eax]; mov eax, 4; pop ebx; ret; 
0x0805cf75: les ecx, ptr [eax]; movzx eax, al; pop ebx; neg eax; ret; 
0x08049020: les ecx, ptr [eax]; pop ebx; ret; 
0x08089959: les ecx, ptr [eax]; xor eax, eax; pop ebx; ret; 
0x0807e6fc: les ecx, ptr [ebp + 0x408b0076]; add al, 0x89; loope 0x3668f; inc ebp; mov esp, 0x8929c083; ret 0x25; 
0x08078ee1: les ecx, ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x080a1b6c: les ecx, ptr [ebp - 0x1b7b87d]; call dword ptr [eax + 0x6a]; 
0x08066a5e: les ecx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret 4; 
0x08050201: les ecx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x0805e99e: les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; jmp eax; 
0x08050a7b: les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x08086f03: les ecx, ptr [ebx - 0x194472d0]; sub edi, ebp; jmp dword ptr [ebp - 0x75]; 
0x0808904a: les ecx, ptr [ecx + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0807840c: les ecx, ptr [ecx + ecx*4]; call 0x5d62626f; ret; 
0x0805cf11: les ecx, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x0807e4ae: les ecx, ptr [ecx + ecx*4]; inc ebp; fmul qword ptr [ebp - 0x6849f7d]; call dword ptr [eax - 0x73]; 
0x0805b04d: les ecx, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x0805ce51: les ecx, ptr [ecx + esi]; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x08060f43: les ecx, ptr [ecx - 2]; call dword ptr [eax + 0x6a]; 
0x0804a46c: les ecx, ptr [ecx*4 - 0x68f5f7d]; call dword ptr [eax - 0x73]; 
0x08061473: les ecx, ptr [ecx*4 - 0x8458f7d]; call dword ptr [eax + 0x56]; 
0x08061461: les ecx, ptr [ecx*4 - 0x845bf7d]; call dword ptr [eax + 0x56]; 
0x080613e3: les ecx, ptr [ecx*4 - 0x8468f7d]; call dword ptr [eax + 0x56]; 
0x080613d1: les ecx, ptr [ecx*4 - 0x846bf7d]; call dword ptr [eax + 0x56]; 
0x080a1852: les edi, ptr [eax + 0x21]; xor ecx, ecx; lea ebx, [edi - 0x1b7e5]; call dword ptr gs:[0x10]; 
0x080afc8c: les edi, ptr [eax + eax + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x080af034: les edi, ptr [eax + edi*4]; add eax, 0x5b000000; pop esi; pop edi; pop ebp; ret; 
0x08080a22: les edi, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x08049854: les edi, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x08085bed: les edi, ptr [ecx + ecx*4 - 0x38]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x08058944: les edi, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x080ad34d: les edi, ptr [ecx + esi - 0x40]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x080b0f09: les edi, ptr [ecx + esi]; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x08078e07: les edi, ptr [ecx]; ret 0x2c76; 
0x0809d3a6: les edi, ptr [esi + edi*8]; call dword ptr [eax - 0x73]; 
0x0804ea0e: les edx, ptr [0x81b90000]; add byte ptr [eax], al; add byte ptr [edx + 1], bh; call dword ptr gs:[0x10]; 
0x08088cde: les edx, ptr [eax + 0x5b000000]; pop esi; pop edi; ret; 
0x0804c1b3: les edx, ptr [eax - 0x18]; push es; ret 2; 
0x08065af3: les edx, ptr [eax]; add esp, 0x14; pop ebx; pop esi; ret; 
0x080b079b: les edx, ptr [eax]; add esp, 0xc; ret; 
0x0804f389: les edx, ptr [eax]; add esp, 4; pop ebx; pop esi; ret; 
0x0805caf3: les edx, ptr [eax]; add esp, 8; pop ebx; ret; 
0x080a3dcd: les edx, ptr [eax]; jmp ecx; 
0x08079746: les edx, ptr [eax]; lea edx, [esp + 8]; call 0x316b0; add esp, 0x18; pop ebx; ret; 
0x08049cb3: les edx, ptr [eax]; leave; ret; 
0x08049d3f: les edx, ptr [eax]; mov byte ptr [0x80e62e0], 1; leave; ret; 
0x0804a482: les edx, ptr [eax]; mov eax, 0x180; mov ebx, 0x3001; lea ecx, [esp + 0x40]; int 0x80; 
0x08096978: les edx, ptr [eax]; mov eax, 1; add esp, 8; pop ebx; ret; 
0x08095ba4: les edx, ptr [eax]; mov eax, 1; pop ebx; pop esi; pop edi; ret; 
0x08077166: les edx, ptr [eax]; mov eax, ebx; add esp, 0x14; pop ebx; pop esi; ret; 
0x08058644: les edx, ptr [eax]; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x080b0ce9: les edx, ptr [eax]; mov eax, edx; pop ebx; pop esi; pop edi; ret; 
0x080a3c4a: les edx, ptr [eax]; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x08049e57: les edx, ptr [eax]; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x080a5268: les edx, ptr [eax]; mov ecx, dword ptr [esp + 0x1c]; xor ecx, dword ptr gs:[0x14]; jne 0x5d27b; add esp, 0x2c; ret; 
0x080a7b05: les edx, ptr [eax]; mov ecx, dword ptr [esp + 0x1c]; xor ecx, dword ptr gs:[0x14]; jne 0x5fb18; add esp, 0x2c; ret; 
0x080aba0d: les edx, ptr [eax]; mov ecx, dword ptr [esp + 0x1c]; xor ecx, dword ptr gs:[0x14]; jne 0x63a20; add esp, 0x2c; ret; 
0x080b06e7: les edx, ptr [eax]; mov edi, dword ptr [ebp - 4]; leave; ret; 
0x080b0d8f: les edx, ptr [eax]; pop ebx; pop esi; mov eax, edx; pop edi; ret; 
0x08086ec2: les edx, ptr [eax]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0805d656: les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x08060e20: les edx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0805b70f: les edx, ptr [ebx + ebx*2]; pop esi; ret; 
0x08077125: les edx, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; ret; 
0x08098ed6: les esi, ptr [eax + 0x5b]; pop esi; pop edi; ret; 
0x08079fe3: les esi, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x08099974: les esi, ptr [ebx + ebx*2]; pop esi; ret; 
0x080a8079: les esp, ptr [eax + 0x5b000000]; pop esi; pop edi; ret; 
0x080a23fb: les esp, ptr [eax + 0x5b]; pop esi; pop edi; ret; 
0x080a23b0: les esp, ptr [eax - 0x77]; clc; pop ebx; pop esi; pop edi; ret; 
0x080a3e25: les esp, ptr [eax]; jmp ecx; 
0x0807128a: les esp, ptr [eax]; jne 0x29340; test ah, 0x40; jne 0x29350; lea eax, [edx + 0xf]; ret; 
0x08097f13: les esp, ptr [eax]; jne 0x4ffb0; lea eax, [edi - 4]; pop edi; ret; 
0x080a0233: les esp, ptr [eax]; lea esi, [esi]; call eax; 
0x080a0369: les esp, ptr [eax]; mov dword ptr [ebp - 0x5c], edx; call eax; 
0x080a0f1a: les esp, ptr [eax]; mov eax, dword ptr [ebp - 0x60]; add eax, dword ptr [ebp - 0x5c]; call eax; 
0x08098d30: les esp, ptr [eax]; mov eax, ecx; pop ebx; pop esi; pop edi; ret; 
0x080a31ff: les esp, ptr [eax]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0805a6ba: les esp, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x080ae277: les esp, ptr [eax]; ret; 
0x080a7a6b: les esp, ptr [ebx + ebx*2]; pop esi; ret; 
0x080a76a8: les esp, ptr [edi + ecx]; mov dh, 0xc0; pop ebx; pop esi; ret; 
0x080a5312: les esp, ptr [edx + ebp*2]; jg 0x5d2ff; fist word ptr [esi]; std; call dword ptr [edx + 0x68]; 
0x080a7612: ljmp 0x10c4:0x83f7f589; add esp, 4; pop ebx; pop esi; ret; 
0x080683d2: ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x08095b78: ljmp 0x450f:0x107f602; ret 0xec83; 
0x080668eb: ljmp 0x450f:0x1e08304; ret 0xc483; 
0x08070c51: ljmp 0x547:0x8d7b7206; pop edi; ret; 
0x08096fe7: ljmp 0x5bff:0xffffffb8; ret; 
0x080687fa: ljmp 0x5f07:0x88027402; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x080aceb5: ljmp 0x5f5e:0x5b1cc483; pop ebp; ret; 
0x08070c61: ljmp 0x647:0x8d6b7207; pop edi; ret; 
0x080a3292: ljmp 0x6ac3:0x81fffa69; sbb eax, 0xec830004; adc byte ptr [ebp - 0x1b5bb7d], cl; call dword ptr [eax + 0x6a]; 
0x08092197: ljmp 0x7487:0x8dffffe2; stc; cld; call dword ptr [eax + 0x68]; 
0x08098fec: ljmp 0x8310:0xc483fffd; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x08070c71: ljmp 0x847:0x8d5b7209; pop edi; ret; 
0x08070c81: ljmp 0x947:0x8d4b720a; pop edi; ret; 
0x08070c91: ljmp 0xa47:0x8d3b720b; pop edi; ret; 
0x08071001: ljmp 0xc229:0xc0bc0f10; jbe 0x29030; lea eax, [edi + eax + 0x10]; pop edi; ret; 
0x08071011: ljmp 0xc229:0xc0bc0f20; jbe 0x29030; lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x08071021: ljmp 0xc229:0xc0bc0f30; jbe 0x29030; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x08070ca1: ljmp 0xc47:0x8d2b720d; pop edi; ret; 
0x08070cb1: ljmp 0xd47:0x8d1b720e; pop edi; ret; 
0x08070cc1: ljmp 0xe47:0x8d0b720f; pop edi; ret; 
0x0806beca: ljmp 0xf66:0xd1ef0f66; cmp byte ptr [edi], dl; ret 0x830f; 
0x0804fe1c: ljmp 0xfff:0xffff2518; xor eax, edx; movzx edx, byte ptr [ecx]; test dl, dl; jne 0x7e09; ret; 
0x080b3275: ljmp [eax + 0x16]; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xor ebp, 0x41; std; call dword ptr [eax - 0x18]; 
0x08087565: ljmp [eax + 0x1b]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; and dword ptr [edx + 0x3a], 0xfffffffd; call dword ptr [eax - 0x18]; 
0x0807f0b8: ljmp [eax + 0x1e]; add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; sbb dword ptr [ebx], 0x34; std; call dword ptr [eax - 0x18]; 
0x080aa76c: ljmp [eax + 0x2f]; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; sub dword ptr [eax - 0x69], -2; call dword ptr [eax - 0x18]; 
0x0805d5ca: ljmp [eax + 0x42]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; sub edx, -4; cld; call dword ptr [eax - 0x18]; 
0x0805d5ab: ljmp [eax + 0x43]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; add dword ptr [eax], -3; cld; call dword ptr [eax - 0x18]; 
0x080aa6e6: ljmp [eax + 0x74]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; or dword ptr [ebp - 0x69], 0xfffffffe; call dword ptr [eax - 0x18]; 
0x0807f0db: ljmp [eax - 0x16]; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; or dword ptr [edx], 0x34; std; call dword ptr [eax - 0x18]; 
0x08060344: ljmp [eax - 0x22]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; sbb eax, -3; cld; call dword ptr [eax - 0x18]; 
0x080812d4: ljmp [eax - 0x25]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; cmp eax, 0x34; std; call dword ptr [eax - 0x18]; 
0x0808126b: ljmp [eax - 0x37]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; adc eax, 0x34; std; call dword ptr [eax - 0x18]; 
0x08088726: ljmp [eax - 0x46]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; sbb esp, 0x41; std; call dword ptr [eax - 0x18]; 
0x0807e0cc: ljmp [eax - 0x4a]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; and esi, 0x2d; std; call dword ptr [eax - 0x18]; 
0x08088786: ljmp [eax - 0x4e]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; add edi, 0x41; std; call dword ptr [eax - 0x18]; 
0x08099fe5: ljmp [eax - 0x51]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; sbb dword ptr [ebp + 0x35], -2; call dword ptr [eax - 0x18]; 
0x080ae415: ljmp [eax - 0x577af0a0]; mov dl, 0xf9; inc dword ptr [ebx - 0x3fcef73c]; pop ebx; ret; 
0x080a93de: ljmp [eax - 0x5a]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; sbb dword ptr [edx - 0x6c], -2; call dword ptr [eax - 0x18]; 
0x080862f0: ljmp [eax - 0x5b]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; sbb dword ptr [ecx + edi], -3; call dword ptr [eax - 0x18]; 
0x08080791: ljmp [eax - 0x5c]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xor esi, 0x33; std; call dword ptr [eax - 0x18]; 
0x080802d3: ljmp [eax - 0x66]; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; cmp dword ptr [esi], 0x34; std; call dword ptr [eax - 0x18]; 
0x080877b3: ljmp [eax - 0x70]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; add dword ptr [ecx], 0x3b; std; call dword ptr [eax - 0x18]; 
0x080769e7: ljmp [eax - 0x72]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; cmp dword ptr [eax + 0x1a], -3; call dword ptr [eax - 0x18]; 
0x080769c8: ljmp [eax - 0x73]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; sub dword ptr [esi], 0x1b; std; call dword ptr [eax - 0x18]; 
0x0807ae55: ljmp [eax - 0x79]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xor eax, 0x29; std; call dword ptr [eax - 0x18]; 
0x080b23d5: ljmp [eax - 0x7b7af0a0]; jae 0x6a3d6; inc dword ptr [ebx - 0x3fcef73c]; pop ebx; ret; 
0x0807e0a8: ljmp [eax - 0xc]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xor ebp, 0x2d; std; call dword ptr [eax - 0x18]; 
0x0807e07e: ljmp [eax - 6]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; add dword ptr [edx], 0x2e; std; call dword ptr [eax - 0x18]; 
0x080a9c62: ljmp [eax - 8]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; add dword ptr [eax + ebx*4], -2; call dword ptr [eax - 0x18]; 
0x08052940: ljmp [ecx]; rcl byte ptr [eax + 0x52], 1; push dword ptr [ebp - 0x890]; call dword ptr [ebx + 0x1c]; 
0x0806d9e8: ljmp [ecx]; ret 0x280f; 
0x08055f7b: ljmp [ecx]; ret 0x45e9; 
0x0805622f: ljmp [ecx]; ret 0x79e9; 
0x0809304e: ljmp [ecx]; ret 0x8d8b; 
0x080a20f9: ljmp [ecx]; ret 0xbd83; 
0x0808b4a6: ljmp [ecx]; ret 0xd189; 
0x08056ad4: ljmp [ecx]; ret 0xda39; 
0x0807c6e9: ljmp [ecx]; ret 0xe183; 
0x080551fd: ljmp [ecx]; ret; 
0x0809b6df: ljmp [ecx]; ror dword ptr [ecx + 0x1548f], 1; add cl, ch; ret; 
0x080a0f11: ljmp [edx + 2]; call 0x5a4b0; add esp, 0x20; mov eax, dword ptr [ebp - 0x60]; add eax, dword ptr [ebp - 0x5c]; call eax; 
0x080a0227: ljmp [edx + 2]; call 0x5a4b0; mov eax, dword ptr [ebp - 0x68]; add esp, 0x20; lea esi, [esi]; call eax; 
0x0804d07e: lock add byte ptr [eax], al; add byte ptr [ebp + 0x15a49b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0804ea08: lock add byte ptr [eax], al; add byte ptr [ebp + 0x15c49b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0804923b: lock add byte ptr [eax], al; add byte ptr [ebp + 0x15cc9d], cl; add byte ptr [ecx + 0x81], bh; call dword ptr gs:[0x10]; 
0x0805f308: lock add byte ptr [eax], al; add byte ptr [ebp + 0x18189d], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0805dc4e: lock add byte ptr [eax], al; add byte ptr [ebp + 0x18189f], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x08061d19: lock add byte ptr [eax], al; add byte ptr [ebp + 0x18609d], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x08061614: lock add byte ptr [eax], al; add byte ptr [ebp + 0x18689b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x08061ad4: lock add byte ptr [eax], al; add byte ptr [ebp + 0x18689d], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x08065c68: lock add byte ptr [eax], al; add byte ptr [ebp + 0x18689f], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0808952c: lock add byte ptr [eax], al; add byte ptr [ebp + 0x1a3c9b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0808d0d0: lock add byte ptr [eax], al; add byte ptr [ebp + 0x1a409b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0808edbc: lock add byte ptr [eax], al; add byte ptr [ebp + 0x1a489b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0808f098: lock add byte ptr [eax], al; add byte ptr [ebp + 0x1a4c9b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x08064638: lock add byte ptr [eax], al; add byte ptr [ebp + 0x4e09b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0806511c: lock add byte ptr [eax], al; add byte ptr [ebp + 0x4e09d], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x08075947: lock add byte ptr [eax], al; add byte ptr [ebp - 0x2ea2f7d], cl; call dword ptr [eax - 0x73]; 
0x0809e9e0: lock add byte ptr [eax], al; add byte ptr [ebx - 0x7e46e33d], al; add byte ptr [eax], al; add byte ptr [edx + 1], bh; call dword ptr gs:[0x10]; 
0x0806089d: lock add byte ptr [eax], al; add byte ptr [ecx + 0x80], bh; mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x0804c037: lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; lea ebx, [edx + 0x1550]; mov edx, 1; call dword ptr gs:[0x10]; 
0x08066cbf: lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov ebx, ebp; mov edx, 1; call dword ptr gs:[0x10]; 
0x080628df: lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov ebx, edi; mov edx, 1; call dword ptr gs:[0x10]; 
0x080493b3: lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x08050956: lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x080991d5: lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; mov ebx, edi; call dword ptr gs:[0x10]; 
0x08050b9c: lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; mov esi, edi; call dword ptr gs:[0x10]; 
0x08066a7e: lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, edi; call dword ptr gs:[0x10]; 
0x0804bf73: lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; xor esi, esi; mov edx, 1; call dword ptr gs:[0x10]; 
0x0806107b: lock dec dword ptr [ecx + 0xae8df2]; add byte ptr [eax], dl; add byte ptr [ecx], ch; ret 0x850f; 
0x08063437: lodsb al, byte ptr [esi]; add al, 0; add cl, ch; ret; 
0x080596c6: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x080793d0: lodsb al, byte ptr [esi]; add dword ptr [eax], eax; add byte ptr [ecx - 0x76ff743a], cl; ret 0xce80; 
0x080a0a9e: lodsb al, byte ptr [esi]; call eax; 
0x0805271f: lodsb al, byte ptr [esi]; clc; cld; call dword ptr [eax - 0x18]; 
0x0809ef9d: lodsb al, byte ptr [esi]; cli; inc dword ptr [ecx + 0x46060c3]; add byte ptr [ebx - 0x38ebdb8c], cl; ret 0; 
0x0809becb: lodsb al, byte ptr [esi]; cmp dh, bh; dec dword ptr [edi]; inc esp; ret 0x95e9; 
0x08066784: lodsd eax, dword ptr [esi]; adc al, byte ptr [eax]; add byte ptr [ebx - 0x72d3dbac], cl; adc ah, 0xd; std; call dword ptr [eax - 0x77]; 
0x080802c0: lodsd eax, dword ptr [esi]; cld; dec dword ptr [ebx - 0x72cfdba4]; add dword ptr [esi + esi], -3; call dword ptr [eax - 0x73]; 
0x080802e3: lodsd eax, dword ptr [esi]; cld; dec dword ptr [ebx - 0x72cfdba4]; and dword ptr [eax], 0x38; std; call dword ptr [eax + 0x68]; 
0x080571cb: lodsd eax, dword ptr [esi]; loope 0xf1cd; dec dword ptr [ebp - 0x3067779]; call dword ptr [eax - 0x73]; 
0x080a5bc6: lodsd eax, dword ptr [esi]; ret; 
0x0805ad56: loope 0x12cd8; js 0x12d5b; jae 0x12dd1; fild dword ptr [eax - 0x76da2b83]; ret 0x5b74; 
0x0807055b: loope 0x2855d; add byte ptr [eax], al; lea eax, [edi + 0xf]; pop edi; ret; 
0x08071456: loope 0x293db; ret 0x6640; 
0x0807e704: loope 0x3668f; inc ebp; mov esp, 0x8929c083; ret 0x25; 
0x0804b98a: loope 0x390f; rcr byte ptr [esi], 0x89; ret 0x25; 
0x08087225: loope 0x3f1b0; ret 0x25; 
0x08094f26: loope 0x4cf27; dec dword ptr [ebp - 0x1dadb79]; call dword ptr [eax + 0x68]; 
0x08098a4c: loope 0x50a5d; je 0x50a70; ret; 
0x0809a7f3: loope 0x5277e; ret 0x25; 
0x080ac35c: loope 0x642e7; ret 0x25; 
0x0804fccb: loope 0x7c65; add al, byte ptr [eax]; mov ebp, dword ptr [esp]; ret; 
0x080571cc: loope 0xf1cd; dec dword ptr [ebp - 0x3067779]; call dword ptr [eax - 0x73]; 
0x0809760f: mov ah, 0x24; push eax; add al, 0; add byte ptr [ecx], al; ret; 
0x0805090a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr [esi]; 
0x0805ee9a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; endbr32; xor eax, eax; ret; 
0x080712a4: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 1]; ret; 
0x08098a94: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 1; ret; 
0x08098aa7: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 2; ret; 
0x08098ab7: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 3; ret; 
0x08098ac7: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 4; ret; 
0x08098ad7: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 5; ret; 
0x08098ae7: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 6; ret; 
0x08098af7: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 7; ret; 
0x0805fc17: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; ret; 
0x0806a193: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; xor eax, eax; ret; 
0x08098c6a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x193; mov ecx, edi; call dword ptr gs:[0x10]; 
0x08070c0a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, edi; pop edi; ret; 
0x0804a772: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, edx; int 0x80; 
0x080b1e59: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; pop ebx; ret; 
0x08049cb8: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; ret; 
0x080713b9: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; xor eax, eax; ret; 
0x080ab7e2: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; pop ebx; ret; 
0x0806a19a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x0804b8d2: mov ah, 0x83; shl byte ptr [esi], 0x89; ret 0x25; 
0x080b05b3: mov ah, 0x89; ret 0x5050; 
0x0808aee2: mov ah, 0x89; ret 0xe283; 
0x0809f508: mov ah, 0x9b; cli; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0807d2a0: mov ah, 0xe9; ret 0xfffd; 
0x0806498c: mov ah, 0xe; std; dec dword ptr [ebp - 0x301e669]; call dword ptr [eax - 0x73]; 
0x0807fc65: mov ah, 0xfc; dec dword ptr [ebp - 0x2c79f7d]; call dword ptr [eax + 0x68]; 
0x0807e0bd: mov ah, 0xff; dec dword ptr [ebp - 0x2d0b77d]; call dword ptr [eax - 0x73]; 
0x080ada0b: mov ah, bh; call dword ptr [eax - 0x73]; 
0x08070f6c: mov al, 0; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x08077da5: mov al, 0x59; push cs; or byte ptr [ebx + 0x74c08500], cl; add eax, 0x5b08c483; ret; 
0x08062477: mov al, 0x59; push cs; or byte ptr [ecx], ch; ret 0x98b; 
0x0809ffb4: mov al, 0x8b; add byte ptr [ebx], al; add ecx, dword ptr [ebx - 0x247a73a3]; jne 0x57e8c; call eax; 
0x080a0ee5: mov al, 0x8b; add byte ptr [ebx], al; inc edx; add al, 0x89; ret 0x858b; 
0x080a053b: mov al, 0x8b; inc esi; add al, 0x89; ret; 
0x080a45bb: mov al, 0xb8; and dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x08061f28: mov al, 0xf9; idiv edi; mov dword ptr [eax + 0x4c0], edx; ret; 
0x080591c3: mov al, 0xfc; cld; call dword ptr [eax - 0x18]; 
0x08060a37: mov al, 4; add byte ptr [eax], al; ret; 
0x080a807a: mov al, byte ptr [0x5b000000]; pop esi; pop edi; ret; 
0x080ab35a: mov al, byte ptr [0x768dffff]; add byte ptr [ebx - 0x72ebdba4], cl; cmp dword ptr [eax - 0x67], -2; call dword ptr [eax - 0x73]; 
0x08067d18: mov al, byte ptr [0x80fff8fb]; in eax, 2; lea edx, [edx - 0x7acc0]; cmovne eax, edx; ret; 
0x080791dc: mov al, byte ptr [0x81fffd0a]; ret; 
0x08071ddc: mov al, byte ptr [0x81fffd7e]; ret; 
0x0807af49: mov al, byte ptr [0x83fffffd]; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0805b8f1: mov al, byte ptr [0x89080e60]; ret 0x9689; 
0x080a2beb: mov al, byte ptr [0x8bfffffd]; adc dword ptr [ecx - 0x2537b], ecx; dec dword ptr [ecx + 0x1a6c87]; add byte ptr [ebx + 0x1a6887], cl; add byte ptr [ecx], bh; ret 0x273; 
0x0808707a: mov al, byte ptr [0x8dfffd39]; test byte ptr [ebx], al; sar byte ptr [ecx], 0xfd; call dword ptr [eax - 0x18]; 
0x08092167: mov al, byte ptr [0x8dffffe8]; xchg dword ptr [ecx + edi*8 - 4], esi; call dword ptr [eax + 0x68]; 
0x0807123c: mov al, byte ptr [0xa8000000]; inc eax; jne 0x292f0; lea eax, [edx + 7]; ret; 
0x08088cb1: mov al, byte ptr [0xb8000000]; scasd eax, dword ptr es:[edi]; add byte ptr [eax], al; add byte ptr [esi + 8], bh; call dword ptr gs:[0x10]; 
0x08089806: mov al, byte ptr [0xf0b8]; add byte ptr [ebp + 0x1a3c9b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x08067273: mov al, byte ptr [0xffff875]; inc ebp; ret 0x66c3; 
0x0806f3d6: mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, [edx + 2]; pop edi; ret; 
0x0806f516: mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, [edx + 2]; ret; 
0x0806db86: mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edi; pop edi; ret; 
0x0806dca6: mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edx; ret; 
0x0806f534: mov al, byte ptr [ecx + 4]; mov byte ptr [edx + 4], al; lea eax, [edx + 4]; ret; 
0x0806dcc4: mov al, byte ptr [ecx + 4]; mov byte ptr [edx + 4], al; mov eax, edx; ret; 
0x0807002a: mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; pop edi; ret; 
0x0807018a: mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x0806fa0a: mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x0806fb6a: mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x0806f574: mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x0806dd04: mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x080704c2: mov al, byte ptr [ecx]; add byte ptr [eax], al; lea eax, [edi + 0xb]; pop edi; ret; 
0x0806f3b0: mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, [edx]; pop edi; ret; 
0x0806f4f0: mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, [edx]; ret; 
0x0806db60: mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edi; pop edi; ret; 
0x0806dc80: mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edx; ret; 
0x0806f404: mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; lea eax, [edx + 5]; pop edi; ret; 
0x0806f544: mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; lea eax, [edx + 5]; ret; 
0x0806dba4: mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; mov eax, edi; pop edi; ret; 
0x0806dcd4: mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; mov eax, edx; ret; 
0x0807004a: mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; pop edi; ret; 
0x080701aa: mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x0806fa2a: mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x0806fb8a: mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x0806f594: mov ax, word ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x0806dd24: mov ax, word ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x0806f3c0: mov ax, word ptr [ecx]; mov word ptr [edx], ax; lea eax, [edx + 1]; pop edi; ret; 
0x0806f500: mov ax, word ptr [ecx]; mov word ptr [edx], ax; lea eax, [edx + 1]; ret; 
0x0806f510: mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, [edx + 2]; ret; 
0x0806dca0: mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edx; ret; 
0x0806db70: mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edi; pop edi; ret; 
0x0806dc90: mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edx; ret; 
0x0807732c: mov bh, 0; add byte ptr [eax], al; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0807a089: mov bh, 0x42; add al, 0x83; ret 0xc608; 
0x08087b47: mov bh, 0x44; push ss; dec byte ptr [ebx - 0x9773]; jmp dword ptr [esi - 0x77]; 
0x080aeb44: mov bh, 0x46; add dword ptr [ebp - 0x50f0fca2], ecx; xchg dword ptr [eax + 0x1000000], esi; ret 0x9789; 
0x080afd96: mov bh, 0x52; add eax, 0xcdfa8166; xor byte ptr [ebx + ecx + 0x66], 0x81; cli; syscall; 
0x080af792: mov bh, 0x73; add dword ptr [ebx - 0x7cf3db84], ecx; ret; 
0x080aaa6b: mov bh, 0x76; add al, byte ptr [ecx]; shr byte ptr [ebx], 0x5d; in al, 1; ret 0xde39; 
0x080a990b: mov bh, al; ret; 
0x0805c926: mov bh, bl; add byte ptr [eax], al; add byte ptr [ebx + 0x94b3], cl; add bh, al; ret 0x5f80; 
0x08099fd6: mov bl, 0; add byte ptr [ebp - 0x1c34f7d], cl; call dword ptr [eax - 0x73]; 
0x08062144: mov bl, 0x39; ret 0xaf74; 
0x0805bc6e: mov bl, 0x94; add byte ptr [eax], al; add bh, al; ret 0x5f80; 
0x080a76cb: mov bl, 0x98; sbb al, byte ptr [eax]; add byte ptr [ebp - 0x386e8a0a], al; ret 0; 
0x08076c66: mov bl, 0xe4; sbb edi, ebp; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x08049c47: mov bl, 9; add byte ptr [ebp - 0x9a10f7d], cl; call dword ptr [eax - 0x73]; 
0x08049d41: mov byte ptr [0x80e62e0], 1; leave; ret; 
0x08049d3a: mov byte ptr [0x83000682], al; les edx, ptr [eax]; mov byte ptr [0x80e62e0], 1; leave; ret; 
0x08049f34: mov byte ptr [0x890c5689], al; ret 0xeac1; 
0x080759e2: mov byte ptr [0xc247c83], al; add dword ptr [ecx - 0x76ebdbac], ecx; ret 0x4c89; 
0x0806b46a: mov byte ptr [0xf6000000], al; ret 0x7501; 
0x080796df: mov byte ptr [eax + 0x20], 1; pop ebx; ret; 
0x08070478: mov byte ptr [eax + 0xf], 0x85; rol byte ptr [ecx], 1; add byte ptr [eax], al; lea eax, [edi + 0xf]; pop edi; ret; 
0x080718e3: mov byte ptr [eax + 0xf], 0x85; xchg byte ptr [ebx], al; add byte ptr [eax], al; add eax, 0xf; pop edi; ret; 
0x0805853e: mov byte ptr [eax + eax + 0x488b0000], dl; pop eax; mov dword ptr [ecx + 0x88], edx; ret; 
0x0809588f: mov byte ptr [eax + eax - 0x61750000], bl; xchg eax, esp; add byte ptr [eax], al; add bh, al; ret 0x5f80; 
0x080608f2: mov byte ptr [eax + eax], al; add bh, al; and byte ptr [eax + 0x1000004], 0; add byte ptr [eax], al; ret; 
0x0805a6b5: mov byte ptr [eax], 0; add byte ptr [ebx + 0x5e5b20c4], al; pop edi; ret; 
0x08071b7f: mov byte ptr [eax], 0; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x08097ec4: mov byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edi - 0xc]; pop edi; ret; 
0x0808579e: mov byte ptr [eax], al; add byte ptr [eax], al; push eax; push dword ptr [esp + 0x50]; push dword ptr [esp + 0x50]; call esi; 
0x0809690a: mov byte ptr [eax], al; add byte ptr [eax], al; push ebx; call dword ptr [eax + 0x34]; 
0x08058548: mov byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x080a0bed: mov byte ptr [ebp + 0x390875f6], al; ret 0x840f; 
0x08071509: mov byte ptr [ebx + 0xf6640ea], 0xd7; rol byte ptr [ebp + 0x663b75c0], 0xf; xlatb; ret 0xc085; 
0x080a3a7a: mov byte ptr [ebx - 2], cl; call dword ptr [eax - 0x73]; 
0x080a8db0: mov byte ptr [ecx + eax], dh; add byte ptr [ebp - 0x7c208a37], al; in al, dx; add al, 0x83; ret; 
0x0807eb7b: mov byte ptr [ecx], 0x83; dec byte ptr [esi*2 - 0x377c7222]; xor edi, ebp; call dword ptr [eax - 0x73]; 
0x080a2013: mov byte ptr [ecx], 0x83; ret 0x8b04; 
0x08082901: mov byte ptr [ecx], 0x83; ret; 
0x08097a16: mov byte ptr [ecx], 0x84; sal byte ptr [esp + 0xf], cl; mov esi, 0x39da891e; ret; 
0x0809abc2: mov byte ptr [ecx], 0xe9; ret 0xfffe; 
0x0808279a: mov byte ptr [ecx], 9; ret 0x7439; 
0x080704be: mov byte ptr [edi + ecx], 0x85; mov al, byte ptr [ecx]; add byte ptr [eax], al; lea eax, [edi + 0xb]; pop edi; ret; 
0x0808fd79: mov byte ptr [edi - 0x9ffffe5], dl; ret 0xf40; 
0x08075281: mov byte ptr [edi], ah; mov eax, dword ptr [esp + 0x10]; pop ebx; pop esi; pop edi; ret; 
0x080754c7: mov byte ptr [edi], ah; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x080687fe: mov byte ptr [edi], al; pop edi; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0806f3d9: mov byte ptr [edx + 2], al; lea eax, [edx + 2]; pop edi; ret; 
0x0806f519: mov byte ptr [edx + 2], al; lea eax, [edx + 2]; ret; 
0x0806db89: mov byte ptr [edx + 2], al; mov eax, edi; pop edi; ret; 
0x0806dca9: mov byte ptr [edx + 2], al; mov eax, edx; ret; 
0x0806f3f7: mov byte ptr [edx + 4], al; lea eax, [edx + 4]; pop edi; ret; 
0x0806f537: mov byte ptr [edx + 4], al; lea eax, [edx + 4]; ret; 
0x0806db97: mov byte ptr [edx + 4], al; mov eax, edi; pop edi; ret; 
0x0806dcc7: mov byte ptr [edx + 4], al; mov eax, edx; ret; 
0x0806f43b: mov byte ptr [edx + 8], al; lea eax, [edx + 8]; pop edi; ret; 
0x0806f57b: mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x0806dbcb: mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x0806dd0b: mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x0806b465: mov byte ptr [edx + edx*8 + 0xa2840f], 0; add dh, dh; ret 0x7501; 
0x08068005: mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0805069b: mov byte ptr [edx], 0x5b; mov eax, esi; pop esi; pop edi; pop ebp; ret; 
0x080a22fd: mov byte ptr [edx], 0x83; ret; 
0x0806f3b2: mov byte ptr [edx], al; lea eax, [edx]; pop edi; ret; 
0x0806f4f2: mov byte ptr [edx], al; lea eax, [edx]; ret; 
0x0806db62: mov byte ptr [edx], al; mov eax, edi; pop edi; ret; 
0x0806dc82: mov byte ptr [edx], al; mov eax, edx; ret; 
0x0804a83f: mov byte ptr [esi], ch; add dword ptr [eax], eax; add byte ptr [ebx - 0x38f3db84], cl; ret 0x6f84; 
0x0808accc: mov ch, 0; add byte ptr [eax], al; add byte ptr [ecx], ch; ret; 
0x08071297: mov ch, 0; add byte ptr [eax], al; lea eax, [edx + 0xf]; ret; 
0x08053099: mov ch, 0x20; idiv edi; call dword ptr [eax - 0x18]; 
0x080918e8: mov ch, 0x2c; idiv edi; dec dword ptr [ebx - 0x4a0067fc]; pop esp; idiv edi; call dword ptr [edx - 1]; 
0x080540b6: mov ch, 0x48; idiv edi; call dword ptr [edx - 1]; 
0x080530d3: mov ch, 0x54; idiv edi; dec dword ptr [ebx - 0x8df73]; dec dword ptr [ebx - 0x8af7b]; call dword ptr [edx - 0x75]; 
0x0805368e: mov ch, 0x54; idiv edi; dec dword ptr [ecx + 0x208d8bc2]; idiv edi; dec dword ptr [ebx - 0x8af7b]; call dword ptr [esi - 0x18]; 
0x08051a65: mov ch, 0x54; idiv edi; dec dword ptr [ecx - 0x8a77b]; jmp dword ptr [ebp - 0x75]; 
0x080918f1: mov ch, 0x5c; idiv edi; call dword ptr [edx - 1]; 
0x0808ffa3: mov ch, 0x68; idiv edi; dec dword ptr [ebx - 0x7c2776f0]; ret; 
0x080539fd: mov ch, 0x6c; idiv edi; call dword ptr [edx - 1]; 
0x080905e7: mov ch, 0x70; idiv edi; call dword ptr [eax + 0x51]; 
0x08053bbf: mov ch, 0x74; idiv edi; call dword ptr [eax - 1]; 
0x080525c3: mov ch, 0x78; idiv edi; dec dword ptr [ebx - 0x7c2776f0]; ret; 
0x0805340e: mov ch, 0x7c; idiv edi; inc dword ptr [ebx - 0x1f3efe20]; add al, 0x89; ret 0xb60f; 
0x0806bccd: mov ch, 8; add byte ptr [eax], al; pop ebx; ret; 
0x08098a60: mov ch, dh; and ch, 0xf; je 0x50a80; add eax, 2; ret; 
0x080985b5: mov cl, 0; cld; inc dword ptr [ecx + 0x4ca47c2]; add byte ptr [ebx - 0x39], dl; ret; 
0x08079d88: mov cl, 0xe0; or dword ptr [eax], eax; add bh, al; ret; 
0x080571f0: mov cl, bh; cld; call dword ptr [eax + 0x68]; 
0x080571d1: mov cl, bh; cld; call dword ptr [eax - 0x73]; 
0x08098a49: mov cl, dl; and cl, 0xf; je 0x50a70; ret; 
0x0805f360: mov cs, word ptr [ebx - 0x47000002]; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x08095993: mov dh, 0; add byte ptr [eax], al; add bh, al; ret; 
0x08076b6b: mov dh, 0; add byte ptr [eax], al; add bh, al; test dword ptr [edi + edi*8 - 1], esi; call dword ptr [eax]; 
0x0806a1ab: mov dh, 0; add byte ptr [eax], al; add byte ptr [eax + 1], bh; ja 0x221b9; neg eax; ret; 
0x08098a9b: mov dh, 0; add byte ptr [eax], al; add byte ptr [eax + 1], bh; ret; 
0x08064293: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x598b1049], cl; add al, 0xf6; ret; 
0x08071adb: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x5f0c2444], cl; ret; 
0x08099673: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x17], bl; xchg eax, edx; sub al, 0xfe; jmp dword ptr [esi - 0x70]; 
0x080b0a6b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x2d14fbbe], cl; lea esi, [esi]; xor eax, eax; ret; 
0x0805505b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x4937b], cl; jmp dword ptr [ebp - 0x39]; 
0x08094253: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x49b7b], cl; jmp dword ptr [esi - 0x70]; 
0x080a338b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x7cfbdbac], cl; ret 0x3901; 
0x080a97a3: mov dh, 0; add byte ptr [eax], al; add byte ptr [ecx + 0x75c984e9], cl; push -0x39; ret 0x6eec; 
0x08083a2b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ecx - 0x769fdbbc], cl; ret 0xe9e9; 
0x080955c3: mov dh, 0; add byte ptr [eax], al; add byte ptr [edi], cl; mov dh, 0x56; or al, 0xf6; ret 0xf01; 
0x0807187b: mov dh, 0; add byte ptr [eax], al; add dh, dh; ret 0xf10; 
0x0805e7fd: mov dh, 0; add esp, 4; pop ebx; pop esi; ret; 
0x0806bac3: mov dh, 0; movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x0805ca5f: mov dh, 0; pop ebx; pop esi; pop edi; ret; 
0x0804fe26: mov dh, 0x11; test dl, dl; jne 0x7e09; ret; 
0x0806bac6: mov dh, 0x12; sub eax, edx; ret; 
0x0805f007: mov dh, 0x40; inc dword ptr [ebx - 0x3b7c10dd]; add al, 0x5b; pop esi; ret; 
0x08069f35: mov dh, 0x42; pop es; sub eax, ecx; ret; 
0x08069fa5: mov dh, 0x42; push es; sub eax, ecx; ret; 
0x080550b6: mov dh, 0x44; adc al, ah; mov eax, dword ptr [ecx + eax*4]; jmp eax; 
0x08055b68: mov dh, 0x44; adc al, ah; mov eax, dword ptr [edi + eax*4 - 0x17a0]; jmp eax; 
0x08054d76: mov dh, 0x44; adc al, ah; mov eax, dword ptr [edi + eax*4 - 0x1820]; jmp eax; 
0x08055ac8: mov dh, 0x44; adc al, ah; mov eax, dword ptr [edi + eax*4 - 0x18a0]; jmp eax; 
0x08093653: mov dh, 0x44; or ah, al; mov dword ptr [ebp - 0x494], 0; mov eax, dword ptr [edi + eax*4 - 0x12c0]; jmp eax; 
0x080938a3: mov dh, 0x44; or ah, al; mov dword ptr [ebp - 0x494], 1; mov eax, dword ptr [edi + eax*4 - 0x12c0]; jmp eax; 
0x08092db3: mov dh, 0x44; or ah, al; mov eax, dword ptr [edi + eax*4 - 0x1240]; jmp eax; 
0x08093943: mov dh, 0x44; or ah, al; mov eax, dword ptr [edi + eax*4 - 0x1340]; jmp eax; 
0x08092bee: mov dh, 0x44; or ah, al; mov ebx, dword ptr [ebp - 0x4c0]; mov dword ptr [ebp - 0x4a0], 1; mov eax, dword ptr [ebx + eax*4]; jmp eax; 
0x08092aa9: mov dh, 0x44; or ah, al; mov ebx, dword ptr [ebp - 0x4c0]; mov dword ptr [ebp - 0x4ac], 1; mov eax, dword ptr [ebx + eax*4]; jmp eax; 
0x08092b99: mov dh, 0x44; or ah, al; mov ebx, dword ptr [ebp - 0x4c0]; mov dword ptr [ebp - 0x4bc], 1; mov eax, dword ptr [ebx + eax*4]; jmp eax; 
0x08092b07: mov dh, 0x44; or al, ah; mov eax, dword ptr [ebx + eax*4]; jmp eax; 
0x080938f3: mov dh, 0x44; or esp, eax; mov dword ptr [ebp - 0x494], 0; mov eax, dword ptr [edi + eax*4 - 0x12c0]; jmp eax; 
0x080939d3: mov dh, 0x44; or esp, eax; mov dword ptr [ebp - 0x494], 1; mov eax, dword ptr [edi + eax*4 - 0x12c0]; jmp eax; 
0x08092a63: mov dh, 0x44; or esp, eax; mov dword ptr [ebp - 0x4a4], 0x20; mov ebx, dword ptr [ebp - 0x4c0]; mov eax, dword ptr [ebx + eax*4]; jmp eax; 
0x08093983: mov dh, 0x44; or esp, eax; mov dword ptr [ebp - 0x4a8], 0; mov eax, dword ptr [edi + eax*4 - 0x12c0]; jmp eax; 
0x08092a1b: mov dh, 0x44; or esp, eax; mov ebx, dword ptr [ebp - 0x4c0]; mov eax, dword ptr [ebx + eax*4]; jmp eax; 
0x0805ad29: mov dh, 0x45; aam 0x89; ret 0xf889; 
0x080aebd4: mov dh, 0x46; add dword ptr [ebp - 0x50f0fda2], ecx; xchg dword ptr [eax + 0x1000000], esi; ret 0x9789; 
0x08090c26: mov dh, 0x46; or eax, 0x9efe083; ror byte ptr [eax - 0x7a72f2ba], 1; xor bh, 0xff; call dword ptr [eax + 0x56]; 
0x0806b492: mov dh, 0x47; test dword ptr [edi], 0x29f756b6; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x08069f91: mov dh, 0x48; add eax, 0x542b60f; sub eax, ecx; ret; 
0x08069f31: mov dh, 0x48; pop es; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x08069fa1: mov dh, 0x48; push es; movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x0808bb16: mov dh, 0x50; or al, 0x89; sal esi, 1; ret 0xf40; 
0x0808abf9: mov dh, 0x50; or al, 0xf6; ret 0x7540; 
0x0806b505: mov dh, 0x56; imul byte ptr [ecx]; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x0806b496: mov dh, 0x56; imul dword ptr [ecx]; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x0808fd73: mov dh, 0x56; or al, 0x84; ror byte ptr [edi], cl; mov byte ptr [edi - 0x9ffffe5], dl; ret 0xf40; 
0x0808d505: mov dh, 0x56; or al, 0xf6; ret 0xf01; 
0x0808fd48: mov dh, 0x56; or al, 0xf6; ret 0xf08; 
0x0806b4c5: mov dh, 0x56; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x080af701: mov dh, 0x73; add dword ptr [ebx - 0x7cf3db84], ecx; ret; 
0x0804fa2f: mov dh, 0x83; ret 0x8d01; 
0x08087077: mov dh, 0x84; add esp, dword ptr [eax - 0x720002c7]; test byte ptr [ebx], al; sar byte ptr [ecx], 0xfd; call dword ptr [eax - 0x18]; 
0x080a01df: mov dh, 0x91; cwde; add dword ptr [eax], eax; add dh, dh; ret 0x7403; 
0x080a8562: mov dh, 0x91; cwde; add dword ptr [eax], eax; add dh, dh; ret 0x7510; 
0x080823ac: mov dh, 0x9c; push ss; ret 0xfd35; 
0x080aba6a: mov dh, 0xc0; neg eax; ret; 
0x0805cf78: mov dh, 0xc0; pop ebx; neg eax; ret; 
0x080a76ab: mov dh, 0xc0; pop ebx; pop esi; ret; 
0x080997d6: mov dh, 0xc0; pop ebx; ret; 
0x0807ec0b: mov dh, 0xc2; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x08089c21: mov dh, 0xc; adc byte ptr [eax], bh; dec esp; adc eax, 0x83167500; ret 0x3901; 
0x08050ef1: mov dh, 0xc; adc edi, dword ptr [eax]; dec esp; adc eax, 0x83167500; ret 0x3901; 
0x0806a18a: mov dh, 0xc; push cs; sub eax, ecx; pop esi; pop edi; ret; 
0x08088d16: mov dh, 0xe8; xchg eax, esp; or bh, bh; jmp dword ptr [esi - 0x70]; 
0x080987c7: mov dh, 0xf0; push esi; push dword ptr [ebp]; call edi; 
0x080671ee: mov dh, 0xf8; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x0806a32a: mov dh, 0xfb; pop ebx; pop esi; sub eax, edi; pop edi; ret; 
0x08065ae2: mov dh, 0xff; dec dword ptr [ebp - 0x137cff8a]; or bh, bh; je 0x1db12; and al, 0x53; call eax; 
0x08074144: mov dh, 2; mov ecx, dword ptr [ebx + ecx*4 - 0x2b4c0]; mov eax, dword ptr [ebx + eax*4 - 0x2b4c0]; sub eax, ecx; pop ebx; ret; 
0x0805ffa3: mov dh, 2; pop ebx; pop esi; ret; 
0x08069f44: mov dh, 2; sub eax, ecx; ret; 
0x0809999c: mov dh, 4; add byte ptr [ebx - 0x48], dl; sub eax, 0x8b000000; pop esp; and al, 8; int 0x80; 
0x08074bb7: mov dh, 8; cmp cl, byte ptr [edx]; jne 0x2cbc1; xor eax, eax; pop ebx; ret; 
0x08069f41: mov dh, 8; movzx eax, byte ptr [edx]; sub eax, ecx; ret; 
0x0809a11c: mov dl, 0x83; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x080a5a27: mov dl, 0x89; fmul dword ptr [ecx - 0x76080836]; ret; 
0x0807f0ea: mov dl, 0xbf; cld; dec dword ptr [ebx - 0x72cfdba4]; add eax, 0x38; std; call dword ptr [eax + 0x68]; 
0x080ae41b: mov dl, 0xf9; inc dword ptr [ebx - 0x3fcef73c]; pop ebx; ret; 
0x080ae413: mov dl, 0xf9; ljmp [eax - 0x577af0a0]; mov dl, 0xf9; inc dword ptr [ebx - 0x3fcef73c]; pop ebx; ret; 
0x0804b0fa: mov dl, 0xf; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x08094081: mov dl, 0xff; ljmp [ecx]; ret; 
0x08051967: mov ds, word ptr [eax - 0x39000000]; ret 0x62d4; 
0x080943f8: mov ds, word ptr [edi - 0x4700001f]; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x080af2da: mov dword ptr [0x7c80fff9], eax; add ebp, dword ptr [eax + eax + 0x75]; mov esp, 0x950ff685; ret 0xc985; 
0x080b33d9: mov dword ptr [0x81fff968], eax; ret; 
0x0809c1d9: mov dword ptr [0x81fffada], eax; ret; 
0x080999d9: mov dword ptr [0x81fffb02], eax; ret; 
0x080651d9: mov dword ptr [0x81fffe4a], eax; ret; 
0x0805ffd9: mov dword ptr [0x81fffe9c], eax; ret; 
0x0807ffe5: mov dword ptr [0x83000001], eax; rol byte ptr [ecx], 0x83; ret 0x8901; 
0x08056c5e: mov dword ptr [0x83ffffef], ebp; in al, dx; or al, 0x8d; xchg dword ptr [eax - 7], ecx; cld; call dword ptr [eax - 0x18]; 
0x0808f3b9: mov dword ptr [0xc7000000], eax; ret 0xffd0; 
0x0808888b: mov dword ptr [0xf0c0c700], 0x65ffffff; add eax, dword ptr [0]; ret; 
0x0808886b: mov dword ptr [0xf4c0c700], 0x65ffffff; add eax, dword ptr [0]; ret; 
0x0808884b: mov dword ptr [0xf8c0c700], 0x65ffffff; add eax, dword ptr [0]; ret; 
0x080616dc: mov dword ptr [eax + 0x10], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x0805ff52: mov dword ptr [eax + 0x1820], 0; ret; 
0x08060984: mov dword ptr [eax + 0x186c], edx; ret; 
0x080796d9: mov dword ptr [eax + 0x18], ebx; mov dword ptr [eax + 0x1c], edx; mov byte ptr [eax + 0x20], 1; pop ebx; ret; 
0x08079700: mov dword ptr [eax + 0x18], edx; ret; 
0x080796dc: mov dword ptr [eax + 0x1c], edx; mov byte ptr [eax + 0x20], 1; pop ebx; ret; 
0x08096467: mov dword ptr [eax + 0x20], ecx; mov dword ptr [eax], edx; pop ebx; ret; 
0x08096438: mov dword ptr [eax + 0x20], ecx; ret; 
0x08096a6e: mov dword ptr [eax + 0x24], 0; pop ebx; pop esi; pop edi; ret; 
0x0805e2a0: mov dword ptr [eax + 0x24], ecx; mov dword ptr [eax + 0xc], edx; mov dword ptr [eax + 4], edx; ret; 
0x0805e2d4: mov dword ptr [eax + 0x24], ecx; mov dword ptr [eax + 4], edx; pop ebx; ret; 
0x0805e29a: mov dword ptr [eax + 0x2c], edx; mov edx, dword ptr [eax + 0x24]; mov dword ptr [eax + 0x24], ecx; mov dword ptr [eax + 0xc], edx; mov dword ptr [eax + 4], edx; ret; 
0x08060ea2: mov dword ptr [eax + 0x38], ebx; pop ebx; pop esi; ret; 
0x080609ae: mov dword ptr [eax + 0x480], edx; ret; 
0x0806095e: mov dword ptr [eax + 0x484], edx; ret; 
0x080609f4: mov dword ptr [eax + 0x48c], edx; ret; 
0x080609d4: mov dword ptr [eax + 0x490], edx; ret; 
0x0806092e: mov dword ptr [eax + 0x498], edx; ret; 
0x080609a4: mov dword ptr [eax + 0x4a0], 1; mov dword ptr [eax + 0x480], edx; ret; 
0x08060954: mov dword ptr [eax + 0x4a0], 1; mov dword ptr [eax + 0x484], edx; ret; 
0x08060924: mov dword ptr [eax + 0x4a0], 1; mov dword ptr [eax + 0x498], edx; ret; 
0x08060a84: mov dword ptr [eax + 0x4bc], edx; ret; 
0x08061f2c: mov dword ptr [eax + 0x4c0], edx; ret; 
0x08061f20: mov dword ptr [eax + 0x4c4], edx; lea edx, [eax - 0x80650]; mov dword ptr [eax + 0x4c0], edx; ret; 
0x080b027c: mov dword ptr [eax + 0x4c], edx; ret; 
0x0805853d: mov dword ptr [eax + 0x94], ecx; mov ecx, dword ptr [eax + 0x58]; mov dword ptr [ecx + 0x88], edx; ret; 
0x0805e2a3: mov dword ptr [eax + 0xc], edx; mov dword ptr [eax + 4], edx; ret; 
0x0805ed75: mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], 0; ret; 
0x0809642d: mov dword ptr [eax + 4], ecx; mov ecx, dword ptr [eax + 8]; mov dword ptr [eax], edx; mov dword ptr [eax + 8], edx; mov dword ptr [eax + 0x20], ecx; ret; 
0x0805fb8d: mov dword ptr [eax + 4], ecx; xor eax, eax; pop ebx; pop esi; ret; 
0x0807966f: mov dword ptr [eax + 4], edx; lea edx, [ecx - 0x6b9f0]; mov dword ptr [eax + 8], edx; pop ebx; pop esi; ret; 
0x08096461: mov dword ptr [eax + 4], edx; mov dword ptr [eax + 8], ebx; mov dword ptr [eax + 0x20], ecx; mov dword ptr [eax], edx; pop ebx; ret; 
0x0805e2d7: mov dword ptr [eax + 4], edx; pop ebx; ret; 
0x0805e2a6: mov dword ptr [eax + 4], edx; ret; 
0x08060e9b: mov dword ptr [eax + 8], 0; mov dword ptr [eax + 0x38], ebx; pop ebx; pop esi; ret; 
0x0805ed7c: mov dword ptr [eax + 8], 0; ret; 
0x08096464: mov dword ptr [eax + 8], ebx; mov dword ptr [eax + 0x20], ecx; mov dword ptr [eax], edx; pop ebx; ret; 
0x08096435: mov dword ptr [eax + 8], edx; mov dword ptr [eax + 0x20], ecx; ret; 
0x08098730: mov dword ptr [eax + 8], edx; mov eax, esi; pop ebx; pop esi; ret; 
0x08079678: mov dword ptr [eax + 8], edx; pop ebx; pop esi; ret; 
0x0805ed6f: mov dword ptr [eax], 0; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], 0; ret; 
0x08088c57: mov dword ptr [eax], 0x16; mov eax, 0xffffffff; ret; 
0x080995d5: mov dword ptr [eax], 0xff650000; adc eax, 0x10; ret; 
0x08098f57: mov dword ptr [eax], 2; add esp, 8; xor eax, eax; pop ebx; ret; 
0x080b0229: mov dword ptr [eax], ebx; add esp, 8; pop ebx; ret; 
0x08096b63: mov dword ptr [eax], ecx; mov eax, dword ptr [edx]; pop ebx; pop esi; pop edi; ret; 
0x080a51f1: mov dword ptr [eax], edx; add esp, 4; pop ebx; pop esi; ret; 
0x080a77e0: mov dword ptr [eax], edx; add esp, 8; pop ebx; ret; 
0x08096433: mov dword ptr [eax], edx; mov dword ptr [eax + 8], edx; mov dword ptr [eax + 0x20], ecx; ret; 
0x08088819: mov dword ptr [eax], edx; pop ebx; pop esi; pop edi; ret; 
0x0809646a: mov dword ptr [eax], edx; pop ebx; ret; 
0x080a3468: mov dword ptr [eax], edx; ret; 
0x08066f5e: mov dword ptr [eax], edx; xor eax, eax; add esp, 0xc; ret; 
0x08097022: mov dword ptr [eax], edx; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x080784c5: mov dword ptr [ebp - 0x30], edx; call eax; 
0x08058c9c: mov dword ptr [ebp - 0x44], eax; sub eax, edx; push eax; push edx; push edi; call dword ptr [ebx + 0x38]; 
0x080923af: mov dword ptr [ebp - 0x45c], eax; call dword ptr [ebx + 0x1c]; 
0x080547dc: mov dword ptr [ebp - 0x46c], eax; call dword ptr [ebx + 0x1c]; 
0x08092d23: mov dword ptr [ebp - 0x470], ecx; sar eax, 2; push eax; push ecx; push esi; call dword ptr [ebx + 0x1c]; 
0x0807d49a: mov dword ptr [ebp - 0x48], edx; push edi; call 0x32fa0; mov dword ptr [esp], esi; call edi; 
0x0807cdc3: mov dword ptr [ebp - 0x48], edx; push edx; call 0x32fa0; mov dword ptr [esp], esi; mov edx, dword ptr [ebp - 0x48]; call edx; 
0x08093657: mov dword ptr [ebp - 0x494], 0; mov eax, dword ptr [edi + eax*4 - 0x12c0]; jmp eax; 
0x080938a7: mov dword ptr [ebp - 0x494], 1; mov eax, dword ptr [edi + eax*4 - 0x12c0]; jmp eax; 
0x08093d34: mov dword ptr [ebp - 0x494], ecx; call dword ptr [ebx + 0x1c]; 
0x080924fc: mov dword ptr [ebp - 0x49c], ebx; jmp eax; 
0x08092bf8: mov dword ptr [ebp - 0x4a0], 1; mov eax, dword ptr [ebx + eax*4]; jmp eax; 
0x08092a67: mov dword ptr [ebp - 0x4a4], 0x20; mov ebx, dword ptr [ebp - 0x4c0]; mov eax, dword ptr [ebx + eax*4]; jmp eax; 
0x08093987: mov dword ptr [ebp - 0x4a8], 0; mov eax, dword ptr [edi + eax*4 - 0x12c0]; jmp eax; 
0x08092ab3: mov dword ptr [ebp - 0x4ac], 1; mov eax, dword ptr [ebx + eax*4]; jmp eax; 
0x08056056: mov dword ptr [ebp - 0x4ac], ecx; call dword ptr [ebx + 0x1c]; 
0x08092ba3: mov dword ptr [ebp - 0x4bc], 1; mov eax, dword ptr [ebx + eax*4]; jmp eax; 
0x080a45b9: mov dword ptr [ebp - 0x50], eax; mov eax, 0x21; call dword ptr gs:[0x10]; 
0x080a036b: mov dword ptr [ebp - 0x5c], edx; call eax; 
0x080a0a99: mov dword ptr [ebp - 0x60], edx; mov eax, dword ptr [ebp - 0x54]; call eax; 
0x0808b4e3: mov dword ptr [ebp - 0x78], ecx; push ecx; push dword ptr [ebp - 0xa0]; push dword ptr [ebp - 0x88]; call eax; 
0x0805293b: mov dword ptr [ebp - 0x88c], eax; sub eax, edx; push eax; push edx; push dword ptr [ebp - 0x890]; call dword ptr [ebx + 0x1c]; 
0x0809067f: mov dword ptr [ebp - 0x8ac], ecx; call dword ptr [ebx + 0x1c]; 
0x08084823: mov dword ptr [ebp - 1], ecx; dec dword ptr [ebx - 0x72d3dba4]; and eax, 0x36; std; call dword ptr [eax + 0x68]; 
0x0805e350: mov dword ptr [ebx + 0x10], eax; xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x080abd38: mov dword ptr [ebx + 0x14], eax; add esp, 0x28; pop ebx; ret; 
0x080b2e95: mov dword ptr [ebx + 0x196c], 0; add esp, 0x18; pop ebx; ret; 
0x080a72e0: mov dword ptr [ebx + 0x1a98], eax; add esp, 8; pop ebx; ret; 
0x0805fa8e: mov dword ptr [ebx + 0x30], esi; add esp, 4; pop ebx; pop esi; ret; 
0x0807c115: mov dword ptr [ebx + 0x428908c8], 0x4c48304; pop ebx; pop esi; ret; 
0x0807c0da: mov dword ptr [ebx + 0x428910c8], 0x4c48304; pop ebx; pop esi; ret; 
0x080affb9: mov dword ptr [ebx + 0x4c], edx; pop ebx; pop esi; pop edi; ret; 
0x0807920e: mov dword ptr [ebx + 0x968], eax; pop ebx; pop esi; pop edi; ret; 
0x080a7a67: mov dword ptr [ebx + 0xc], eax; add esp, 0x24; pop ebx; pop esi; ret; 
0x080a4d89: mov dword ptr [ebx + 0xc], eax; add esp, 0x28; pop ebx; ret; 
0x080a6cb3: mov dword ptr [ebx + 4], edi; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x080a50b1: mov dword ptr [ebx + 8], eax; add esp, 0x28; pop ebx; ret; 
0x0805ba69: mov dword ptr [ebx + 8], eax; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0807af47: mov dword ptr [ebx - 0x260], eax; add esp, 4; pop ebx; pop esi; ret; 
0x080a5504: mov dword ptr [ebx], 0; push dword ptr [esp + 0x28]; mov eax, dword ptr [esp + 0x28]; call eax; 
0x080ad84a: mov dword ptr [ebx], eax; add esp, 0x28; pop ebx; ret; 
0x0808a469: mov dword ptr [ebx], eax; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x080a3e9e: mov dword ptr [ebx], eax; mov edx, dword ptr [ebx + 0xc]; mov ecx, dword ptr [ebx + 0x10]; mov eax, dword ptr [ebx + 0x14]; call dword ptr [ebx]; 
0x080969f7: mov dword ptr [ebx], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x08088816: mov dword ptr [ebx], ecx; mov dword ptr gs:[eax], edx; pop ebx; pop esi; pop edi; ret; 
0x0808f1ed: mov dword ptr [ebx], edi; pop ebx; pop esi; pop edi; ret; 
0x08060ac0: mov dword ptr [ecx + 0x1870], eax; ret; 
0x08058546: mov dword ptr [ecx + 0x88], edx; ret; 
0x080862db: mov dword ptr [ecx + 4], eax; add esp, 4; pop ebx; pop esi; ret; 
0x0808a3ec: mov dword ptr [ecx + edx*4], eax; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0808878f: mov dword ptr [ecx - 3], 0x7e850ff; sub esp, edi; jmp dword ptr [esi - 0x70]; 
0x080754c5: mov dword ptr [ecx], 0xf8892788; pop ebx; pop esi; pop edi; ret; 
0x080b0262: mov dword ptr [ecx], eax; mov eax, dword ptr [edx + 0x4c]; ret; 
0x080888ed: mov dword ptr [ecx], eax; pop ebx; ret; 
0x080a5b68: mov dword ptr [edi], eax; pop eax; pop ebx; pop esi; pop edi; ret; 
0x080a5b71: mov dword ptr [edi], ebx; pop ebx; pop esi; pop edi; ret; 
0x0804fe7f: mov dword ptr [edx + 0x28], ecx; ret; 
0x080608f0: mov dword ptr [edx + 0x488], eax; mov dword ptr [edx + 0x4a0], 1; ret; 
0x080608f6: mov dword ptr [edx + 0x4a0], 1; ret; 
0x08060a35: mov dword ptr [edx + 0x4b0], eax; ret; 
0x08060a60: mov dword ptr [edx + 0x4b8], eax; ret; 
0x0806f427: mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; pop edi; ret; 
0x0806f557: mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; ret; 
0x0806dbb7: mov dword ptr [edx + 3], eax; mov eax, edi; pop edi; ret; 
0x0806dce7: mov dword ptr [edx + 3], eax; mov eax, edx; ret; 
0x0807c01e: mov dword ptr [edx + 4], eax; add esp, 4; pop ebx; pop esi; ret; 
0x0806f409: mov dword ptr [edx + 4], eax; lea eax, [edx + 5]; pop edi; ret; 
0x0806f549: mov dword ptr [edx + 4], eax; lea eax, [edx + 5]; ret; 
0x0806ff28: mov dword ptr [edx + 4], eax; lea eax, [edx + 7]; pop edi; ret; 
0x08070177: mov dword ptr [edx + 4], eax; lea eax, [edx + 7]; ret; 
0x08070027: mov dword ptr [edx + 4], eax; mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; pop edi; ret; 
0x08070187: mov dword ptr [edx + 4], eax; mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x0806fa07: mov dword ptr [edx + 4], eax; mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x0806fb67: mov dword ptr [edx + 4], eax; mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x080701a7: mov dword ptr [edx + 4], eax; mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x0806fb87: mov dword ptr [edx + 4], eax; mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x08070087: mov dword ptr [edx + 4], eax; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; pop edi; ret; 
0x080701e7: mov dword ptr [edx + 4], eax; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x0806fa67: mov dword ptr [edx + 4], eax; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x0806fbc7: mov dword ptr [edx + 4], eax; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x0806dba9: mov dword ptr [edx + 4], eax; mov eax, edi; pop edi; ret; 
0x0806dcd9: mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x0806f47b: mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; pop edi; ret; 
0x0806f5bb: mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x0806dc0b: mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x0806dd4b: mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x0806f36b: mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; pop edi; ret; 
0x0806f5db: mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x0806f45d: mov dword ptr [edx + 8], eax; lea eax, [edx + 9]; pop edi; ret; 
0x0806f59d: mov dword ptr [edx + 8], eax; lea eax, [edx + 9]; ret; 
0x0806db1b: mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x0806dd2d: mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x080b0234: mov dword ptr [edx + eax*4], ecx; add esp, 8; pop ebx; ret; 
0x080b2ee9: mov dword ptr [edx + ebp*4], ecx; test eax, eax; je 0x6aefa; mov dword ptr [esp + 8], edx; call eax; 
0x0806801f: mov dword ptr [edx - 0xa], eax; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x08068026: mov dword ptr [edx - 2], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x08068046: mov dword ptr [edx - 3], eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x08067fe2: mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x08068002: mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x08068022: mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x08067fdf: mov dword ptr [edx - 8], eax; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x08067fff: mov dword ptr [edx - 9], eax; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x080a796f: mov dword ptr [edx], eax; add esp, 4; pop ebx; pop esi; ret; 
0x0806f3c4: mov dword ptr [edx], eax; lea eax, [edx + 1]; pop edi; ret; 
0x0806f504: mov dword ptr [edx], eax; lea eax, [edx + 1]; ret; 
0x0806f2f2: mov dword ptr [edx], eax; lea eax, [edx + 3]; pop edi; ret; 
0x0806f522: mov dword ptr [edx], eax; lea eax, [edx + 3]; ret; 
0x0806f3d4: mov dword ptr [edx], eax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, [edx + 2]; pop edi; ret; 
0x0806f514: mov dword ptr [edx], eax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, [edx + 2]; ret; 
0x0806db84: mov dword ptr [edx], eax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edi; pop edi; ret; 
0x0806dca4: mov dword ptr [edx], eax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edx; ret; 
0x0806f532: mov dword ptr [edx], eax; mov al, byte ptr [ecx + 4]; mov byte ptr [edx + 4], al; lea eax, [edx + 4]; ret; 
0x0806dcc2: mov dword ptr [edx], eax; mov al, byte ptr [ecx + 4]; mov byte ptr [edx + 4], al; mov eax, edx; ret; 
0x0806f542: mov dword ptr [edx], eax; mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; lea eax, [edx + 5]; ret; 
0x0806dcd2: mov dword ptr [edx], eax; mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; mov eax, edx; ret; 
0x0807c328: mov dword ptr [edx], eax; mov eax, 0xffffffff; ret; 
0x0806f422: mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; pop edi; ret; 
0x0806f552: mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; ret; 
0x0806dbb2: mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; mov eax, edi; pop edi; ret; 
0x0806dce2: mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; mov eax, edx; ret; 
0x0806fb52: mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 4]; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x0806daa2: mov dword ptr [edx], eax; mov eax, edi; pop edi; ret; 
0x0806dc94: mov dword ptr [edx], eax; mov eax, edx; ret; 
0x0805faf2: mov dword ptr [edx], eax; ret; 
0x0809674d: mov dword ptr [edx], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x080a3460: mov dword ptr [edx], ecx; mov edx, dword ptr [eax]; mov eax, dword ptr [esp + 8]; mov dword ptr [eax], edx; ret; 
0x080abb78: mov dword ptr [esi + 0x10], eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x080a5630: mov dword ptr [esi + 0x18], eax; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0805e3cf: mov dword ptr [esi + 0x28], 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x0805cd12: mov dword ptr [esi + 0x38], 0xffffffff; add esp, 0x14; pop ebx; pop esi; ret; 
0x080964b8: mov dword ptr [esi + 0x3c], eax; add esp, 4; pop ebx; pop esi; ret; 
0x080aba95: mov dword ptr [esi + 0xc], eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x080a43ad: mov dword ptr [esi + 8], 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x080ab967: mov dword ptr [esi + 8], eax; add esp, 0x24; pop ebx; pop esi; ret; 
0x0805b18f: mov dword ptr [esi + 8], eax; mov eax, esi; add esp, 4; pop ebx; pop esi; ret; 
0x0805e6c4: mov dword ptr [esi], eax; add esp, 4; pop ebx; pop esi; ret; 
0x0805fa8c: mov dword ptr [esi], eax; mov dword ptr [ebx + 0x30], esi; add esp, 4; pop ebx; pop esi; ret; 
0x080a7c29: mov dword ptr [esi], eax; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x080aabb6: mov dword ptr [esi], eax; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0806363b: mov dword ptr [esp + 0x10], eax; call ecx; 
0x08059d2f: mov dword ptr [esp + 0x10], esi; mov eax, dword ptr [eax + 0x10]; add esp, 4; pop ebx; pop esi; jmp eax; 
0x08096c87: mov dword ptr [esp + 0x10], esi; pop ebx; mov eax, dword ptr [edi + 0x10]; pop esi; pop edi; jmp eax; 
0x08096b27: mov dword ptr [esp + 0x10], esi; pop ebx; mov eax, dword ptr [edi + 0x14]; pop esi; pop edi; jmp eax; 
0x080b0885: mov dword ptr [esp + 0x14], ecx; push eax; push dword ptr [esp + 0x10]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x08063637: mov dword ptr [esp + 0x14], edx; mov dword ptr [esp + 0x10], eax; call ecx; 
0x080b000a: mov dword ptr [esp + 0x1c], edx; push ecx; push 1; call eax; 
0x08050170: mov dword ptr [esp + 0x28], ecx; push esi; mov eax, dword ptr [esp + 0x1c]; call eax; 
0x08075e45: mov dword ptr [esp + 0x38], edx; push eax; push dword ptr [esp + 0x38]; call esi; 
0x0804ace7: mov dword ptr [esp + 0x3c], 0x51; int 0x80; 
0x0805e8a8: mov dword ptr [esp + 0x40], ecx; call dword ptr [ebx + 0xc]; 
0x0809971b: mov dword ptr [esp + 0xc], eax; mov eax, 0x8c; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x080b2ef0: mov dword ptr [esp + 8], edx; call eax; 
0x08077323: mov dword ptr [esp + 8], esi; mov ebx, dword ptr [esp + 8]; mov eax, 0xb7; mov ecx, edi; call dword ptr gs:[0x10]; 
0x080b2141: mov dword ptr [esp], eax; call 0x1da60; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x080a3e6f: mov dword ptr [esp], eax; mov eax, dword ptr [esp + 4]; ret 0x14; 
0x080a3d98: mov dword ptr [esp], eax; mov eax, dword ptr [esp + 4]; ret 0xc; 
0x080b2c58: mov dword ptr [esp], ebp; call edi; 
0x0807cc5c: mov dword ptr [esp], esi; call edi; 
0x0807cdcc: mov dword ptr [esp], esi; mov edx, dword ptr [ebp - 0x48]; call edx; 
0x08075e44: mov dword ptr fs:[esp + 0x38], edx; push eax; push dword ptr [esp + 0x38]; call esi; 
0x08088c56: mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; ret; 
0x08098f56: mov dword ptr gs:[eax], 2; add esp, 8; xor eax, eax; pop ebx; ret; 
0x08088818: mov dword ptr gs:[eax], edx; pop ebx; pop esi; pop edi; ret; 
0x080a5503: mov dword ptr gs:[ebx], 0; push dword ptr [esp + 0x28]; mov eax, dword ptr [esp + 0x28]; call eax; 
0x08088815: mov dword ptr gs:[ebx], ecx; mov dword ptr gs:[eax], edx; pop ebx; pop esi; pop edi; ret; 
0x080888ec: mov dword ptr gs:[ecx], eax; pop ebx; ret; 
0x0807c327: mov dword ptr gs:[edx], eax; mov eax, 0xffffffff; ret; 
0x080b0009: mov dword ptr ss:[esp + 0x1c], edx; push ecx; push 1; call eax; 
0x0806b7a4: mov eax, 0; jne 0x239d0; pop ebx; ret; 
0x0806b861: mov eax, 0; jne 0x239f0; pop ebx; ret; 
0x0806bdf2: mov eax, 0; jne 0x24570; pop ebx; ret; 
0x0806bc2b: mov eax, 0; jne 0x24586; pop ebx; ret; 
0x08049013: mov eax, 0; test eax, eax; je 0x101f; call eax; 
0x08098c21: mov eax, 0x109; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x08071c1a: mov eax, 0x10; pop edi; ret; 
0x08088a37: mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x080770a8: mov eax, 0x127; call dword ptr gs:[0x10]; 
0x08077061: mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x0809969d: mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x08088a14: mov eax, 0x14; call dword ptr gs:[0x10]; 
0x080a7e94: mov eax, 0x14; call dword ptr gs:[0x10]; ret; 
0x08066f70: mov eax, 0x16; add esp, 0xc; ret; 
0x08066fd3: mov eax, 0x16; pop ebx; pop esi; ret; 
0x0804a484: mov eax, 0x180; mov ebx, 0x3001; lea ecx, [esp + 0x40]; int 0x80; 
0x0804a7c9: mov eax, 0x180; mov ebx, 0x3002; int 0x80; 
0x0804a805: mov eax, 0x180; mov ebx, 0x3003; xor ecx, ecx; int 0x80; 
0x080ab0d5: mov eax, 0x180; mov ebx, 0x3005; call dword ptr gs:[0x10]; 
0x080ab2b3: mov eax, 0x180; sete cl; add ecx, ecx; call dword ptr gs:[0x10]; 
0x08098c70: mov eax, 0x193; mov ecx, edi; call dword ptr gs:[0x10]; 
0x080a45bc: mov eax, 0x21; call dword ptr gs:[0x10]; 
0x080a1853: mov eax, 0x21; xor ecx, ecx; lea ebx, [edi - 0x1b7e5]; call dword ptr gs:[0x10]; 
0x08079c4f: mov eax, 0x21; xor ecx, ecx; lea ebx, [edi - 0x2de88]; int 0x80; 
0x0808cad8: mov eax, 0x2901c083; fidivr dword ptr [ecx]; ret 0xee7f; 
0x080999a0: mov eax, 0x2d; mov ebx, dword ptr [esp + 8]; int 0x80; 
0x080998d6: mov eax, 0x36; call dword ptr gs:[0x10]; 
0x080603b4: mov eax, 0x39000001; ret 0x870f; 
0x08062e37: mov eax, 0x460; add byte ptr [edi], cl; xchg eax, ebp; ret; 
0x08077f2e: mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x080a9079: mov eax, 0x5bf4658d; pop esi; pop edi; pop ebp; ret; 
0x080abc61: mov eax, 0x68; call dword ptr gs:[0x10]; 
0x080a98cd: mov eax, 0x6f2cc0c7; push cs; or byte ptr [ecx - 0x8f63], cl; inc edi; ret; 
0x0807926a: mov eax, 0x74; call dword ptr gs:[0x10]; 
0x08088aa9: mov eax, 0x77; int 0x80; 
0x080995aa: mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x08077f61: mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x0805afc3: mov eax, 0x80ab9a0; test eax, eax; je 0x12fd2; add esp, 8; pop ebx; ret; 
0x0805fdfe: mov eax, 0x80e5098; mov eax, dword ptr [eax]; ret; 
0x080514bc: mov eax, 0x80e5450; push dword ptr [eax]; call 0xc630; add esp, 0x1c; ret; 
0x080a2452: mov eax, 0x80e59ac; mov eax, dword ptr [eax]; call 0x59e80; add esp, 0x1c; ret; 
0x0809f42b: mov eax, 0x80e59e4; push ebx; call dword ptr [eax]; 
0x0809bd2f: mov eax, 0x80e5cd4; push dword ptr [ebp + 0x18]; call dword ptr [eax]; 
0x080a33e9: mov eax, 0x80e6cc8; mov edx, dword ptr [eax]; mov eax, edx; ret; 
0x080a3c80: mov eax, 0x80e6f2c; call dword ptr [eax]; 
0x080a3ce2: mov eax, 0x80e6f2c; mov esi, 1; call dword ptr [eax]; 
0x080a80fe: mov eax, 0x80e6f60; mov eax, dword ptr [eax]; ret; 
0x080791b3: mov eax, 0x80e6f60; mov eax, dword ptr [eax]; test eax, eax; cmove eax, edx; ret; 
0x080b34a4: mov eax, 0x83fffb25; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x08077258: mov eax, 0x8c; call dword ptr gs:[0x10]; 
0x0809971f: mov eax, 0x8c; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x080a1f50: mov eax, 0x92; call dword ptr gs:[0x10]; 
0x08076f54: mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x0807923b: mov eax, 0xa3; call dword ptr gs:[0x10]; 
0x08088aa0: mov eax, 0xad; int 0x80; 
0x08088b45: mov eax, 0xae; call dword ptr gs:[0x10]; 
0x08088cb5: mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x0807732b: mov eax, 0xb7; mov ecx, edi; call dword ptr gs:[0x10]; 
0x08071b92: mov eax, 0xb8000000; or byte ptr [eax], al; add byte ptr [eax], al; pop edi; ret; 
0x08077cb5: mov eax, 0xbf; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x08077e5c: mov eax, 0xc0; call dword ptr gs:[0x10]; 
0x08076fd5: mov eax, 0xc3; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x08099655: mov eax, 0xc4; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x08077005: mov eax, 0xc5; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x080995d4: mov eax, 0xc7; call dword ptr gs:[0x10]; 
0x080995d4: mov eax, 0xc7; call dword ptr gs:[0x10]; ret; 
0x08099614: mov eax, 0xc8; call dword ptr gs:[0x10]; 
0x08099614: mov eax, 0xc8; call dword ptr gs:[0x10]; ret; 
0x080995f4: mov eax, 0xc9; call dword ptr gs:[0x10]; 
0x080995f4: mov eax, 0xc9; call dword ptr gs:[0x10]; ret; 
0x08071be6: mov eax, 0xc; pop edi; ret; 
0x08099634: mov eax, 0xca; call dword ptr gs:[0x10]; 
0x08099634: mov eax, 0xca; call dword ptr gs:[0x10]; ret; 
0x08077f91: mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x080a7e6b: mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x08099242: mov eax, 0xdc; mov edi, ecx; call dword ptr gs:[0x10]; 
0x08077ad5: mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x08077b08: mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x08088a22: mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x0809e9df: mov eax, 0xf0; add ebx, 0x1c; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08065303: mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0804923a: mov eax, 0xf0; lea ebx, [ebp + 0x15cc]; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x0805f307: mov eax, 0xf0; lea ebx, [ebp + 0x1818]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08061d18: mov eax, 0xf0; lea ebx, [ebp + 0x1860]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08061ad3: mov eax, 0xf0; lea ebx, [ebp + 0x1868]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0806511b: mov eax, 0xf0; lea ebx, [ebp + 0x4e0]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0804d07d: mov eax, 0xf0; lea ebx, [ebx + 0x15a4]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0804ea07: mov eax, 0xf0; lea ebx, [ebx + 0x15c4]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08061613: mov eax, 0xf0; lea ebx, [ebx + 0x1868]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0808952b: mov eax, 0xf0; lea ebx, [ebx + 0x1a3c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0808d0cf: mov eax, 0xf0; lea ebx, [ebx + 0x1a40]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0808edbb: mov eax, 0xf0; lea ebx, [ebx + 0x1a48]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0808f097: mov eax, 0xf0; lea ebx, [ebx + 0x1a4c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08064637: mov eax, 0xf0; lea ebx, [ebx + 0x4e0]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0805dc4d: mov eax, 0xf0; lea ebx, [edi + 0x1818]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08065c67: mov eax, 0xf0; lea ebx, [edi + 0x1868]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08050878: mov eax, 0xf0; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x0806089c: mov eax, 0xf0; mov ecx, 0x80; mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x0804c036: mov eax, 0xf0; mov ecx, 0x81; lea ebx, [edx + 0x1550]; mov edx, 1; call dword ptr gs:[0x10]; 
0x08066cbe: mov eax, 0xf0; mov ecx, 0x81; mov ebx, ebp; mov edx, 1; call dword ptr gs:[0x10]; 
0x080628de: mov eax, 0xf0; mov ecx, 0x81; mov ebx, edi; mov edx, 1; call dword ptr gs:[0x10]; 
0x080493b2: mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08050955: mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x080991d4: mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; mov ebx, edi; call dword ptr gs:[0x10]; 
0x08050b9b: mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; mov esi, edi; call dword ptr gs:[0x10]; 
0x08066a7d: mov eax, 0xf0; mov ecx, 0x81; mov edx, edi; call dword ptr gs:[0x10]; 
0x0804bf72: mov eax, 0xf0; mov ecx, 0x81; xor esi, esi; mov edx, 1; call dword ptr gs:[0x10]; 
0x080a1a5f: mov eax, 0xf20c1f6; xchg eax, esp; ror byte ptr [edi], 0x95; ret 0xe0d3; 
0x080769fe: mov eax, 0xfc; call dword ptr gs:[0x10]; 
0x080769fe: mov eax, 0xfc; call dword ptr gs:[0x10]; mov eax, 1; int 0x80; 
0x080591ad: mov eax, 0xfccc838d; cld; call dword ptr [eax - 0x73]; 
0x08083fd8: mov eax, 0xff55d2e8; dec dword ptr [ebx - 0x72cbdba4]; xor dword ptr [eax + 0x35], 0xfffffffd; call dword ptr [eax - 0x73]; 
0x08088832: mov eax, 0xffffffd8; mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x0808cfc9: mov eax, 0xffffffd8; push dword ptr gs:[eax]; push dword ptr [esp + 0x1c]; call 0x42770; add esp, 0x1c; ret; 
0x08088c50: mov eax, 0xffffffe0; mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; ret; 
0x08098f50: mov eax, 0xffffffe0; mov dword ptr gs:[eax], 2; add esp, 8; xor eax, eax; pop ebx; ret; 
0x080a3d64: mov eax, 0xffffffe0; mov eax, dword ptr gs:[eax]; add esp, 4; pop ebx; pop esi; ret; 
0x0808888e: mov eax, 0xfffffff0; add eax, dword ptr gs:[0]; ret; 
0x0808886e: mov eax, 0xfffffff4; add eax, dword ptr gs:[0]; ret; 
0x0808884e: mov eax, 0xfffffff8; add eax, dword ptr gs:[0]; ret; 
0x0805ef54: mov eax, 0xffffffff; mov edx, 0xffffffff; ret; 
0x0805a186: mov eax, 0xffffffff; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x08059d43: mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x0809698b: mov eax, 0xffffffff; pop ebx; ret; 
0x08095bc9: mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x0805a9e0: mov eax, 0xffffffff; ret; 
0x0809697a: mov eax, 1; add esp, 8; pop ebx; ret; 
0x08076a0a: mov eax, 1; int 0x80; 
0x08069ff0: mov eax, 1; ja 0x21ff9; neg eax; ret; 
0x0806a1b0: mov eax, 1; ja 0x221b9; neg eax; ret; 
0x0806a378: mov eax, 1; ja 0x22381; neg eax; ret; 
0x0806b9f1: mov eax, 1; ja 0x239fa; neg eax; ret; 
0x0806baa0: mov eax, 1; ja 0x23aa9; neg eax; ret; 
0x0806c587: mov eax, 1; ja 0x24590; neg eax; ret; 
0x080752ab: mov eax, 1; mov ecx, 0xffffffff; cmovb eax, ecx; ret; 
0x08095ba6: mov eax, 1; pop ebx; pop esi; pop edi; ret; 
0x080ab7da: mov eax, 1; pop ebx; ret; 
0x0807e251: mov eax, 1; pop esi; pop edi; ret; 
0x08098aa0: mov eax, 1; ret; 
0x08098ab0: mov eax, 2; ret; 
0x0807710f: mov eax, 3; call dword ptr gs:[0x10]; 
0x08077c35: mov eax, 3; mov ecx, dword ptr [esp + 0xc]; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x080b04a6: mov eax, 3; mov edi, dword ptr [ebp - 4]; leave; ret; 
0x08098ac0: mov eax, 3; ret; 
0x080771af: mov eax, 4; call dword ptr gs:[0x10]; 
0x08077c75: mov eax, 4; mov ecx, dword ptr [esp + 0xc]; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x080b09ef: mov eax, 4; pop ebx; ret; 
0x08071b3d: mov eax, 4; pop edi; ret; 
0x08098ad0: mov eax, 4; ret; 
0x080af036: mov eax, 5; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x08098ae0: mov eax, 5; ret; 
0x08077a85: mov eax, 6; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x08098af0: mov eax, 6; ret; 
0x08098b00: mov eax, 7; ret; 
0x080b09d8: mov eax, 8; add esp, 8; pop ebx; ret; 
0x08060ab8: mov eax, 8; cmovne eax, edx; mov dword ptr [ecx + 0x1870], eax; ret; 
0x08071b96: mov eax, 8; pop edi; ret; 
0x08054f9b: mov eax, dword ptr [0x1000012]; ret; 
0x080a7bc5: mov eax, dword ptr [0x81fffb0a]; ret 0xd437; 
0x080877db: mov eax, dword ptr [0x81fffc24]; ret; 
0x08079cc5: mov eax, dword ptr [0x81fffde9]; ret 0xb337; 
0x080671c5: mov eax, dword ptr [0x81ffff14]; ret 0xde37; 
0x0805fec5: mov eax, dword ptr [0x81ffff87]; ret 0x5137; 
0x080ab67b: mov eax, dword ptr [0x8b000000]; inc esi; add al, 0x85; sal byte ptr [edx + edi*4 - 0x75], 0x55; add byte ptr [ecx], al; ret 0xd139; 
0x08077106: mov eax, dword ptr [0xc]; test eax, eax; jne 0x2f130; mov eax, 3; call dword ptr gs:[0x10]; 
0x080771a6: mov eax, dword ptr [0xc]; test eax, eax; jne 0x2f1d0; mov eax, 4; call dword ptr gs:[0x10]; 
0x08059d33: mov eax, dword ptr [eax + 0x10]; add esp, 4; pop ebx; pop esi; jmp eax; 
0x080616d9: mov eax, dword ptr [eax + 0x14]; mov dword ptr [eax + 0x10], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x08085a8e: mov eax, dword ptr [eax + 0x1968]; ret; 
0x0807cbee: mov eax, dword ptr [eax + 0x1fa0]; ret; 
0x0807cc0e: mov eax, dword ptr [eax + 0x1fa8]; ret; 
0x0805fe28: mov eax, dword ptr [eax + 0x34]; ret; 
0x0805ecc7: mov eax, dword ptr [eax + 0x34]; test eax, eax; jne 0x16cc0; ret; 
0x080b01d8: mov eax, dword ptr [eax + 0x48]; ret; 
0x080b0248: mov eax, dword ptr [eax + 0x4c]; ret; 
0x080b0288: mov eax, dword ptr [eax + 0x50]; ret; 
0x080b02f8: mov eax, dword ptr [eax + 0x54]; ret; 
0x080b02e8: mov eax, dword ptr [eax + 0x58]; ret; 
0x080b0298: mov eax, dword ptr [eax + 0x5c]; ret; 
0x08096908: mov eax, dword ptr [eax + 0x88]; push ebx; call dword ptr [eax + 0x34]; 
0x080a4cb4: mov eax, dword ptr [eax + 4]; ret; 
0x080a4cc4: mov eax, dword ptr [eax + 4]; sub eax, dword ptr gs:[0]; ret; 
0x0805fb0c: mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x0808883b: mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x0809ffb5: mov eax, dword ptr [eax]; add eax, dword ptr [ebx]; mov ebx, dword ptr [ebp - 0x74]; test ebx, ebx; jne 0x57e8c; call eax; 
0x0809fe7e: mov eax, dword ptr [eax]; add eax, dword ptr [esi]; test ebx, ebx; jne 0x57e22; call eax; 
0x080a3d6b: mov eax, dword ptr [eax]; add esp, 4; pop ebx; pop esi; ret; 
0x080b01c2: mov eax, dword ptr [eax]; add esp, 8; pop ebx; ret; 
0x080a2458: mov eax, dword ptr [eax]; call 0x59e80; add esp, 0x1c; ret; 
0x08060a13: mov eax, dword ptr [eax]; cmp eax, 0x3fc; jbe 0x18a20; ret; 
0x08060aa3: mov eax, dword ptr [eax]; cmp eax, 0x50; jbe 0x18ab0; ret; 
0x080608e3: mov eax, dword ptr [eax]; cmp eax, 0x80000; jbe 0x188f0; ret; 
0x08060a53: mov eax, dword ptr [eax]; cmp eax, 0xffff; jbe 0x18a60; ret; 
0x0809674b: mov eax, dword ptr [eax]; mov dword ptr [edx], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x08088839: mov eax, dword ptr [eax]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x0805fe04: mov eax, dword ptr [eax]; ret; 
0x08087bfc: mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x080791b9: mov eax, dword ptr [eax]; test eax, eax; cmove eax, edx; ret; 
0x08077da9: mov eax, dword ptr [eax]; test eax, eax; je 0x2fdb4; add esp, 8; pop ebx; ret; 
0x0805fae6: mov eax, dword ptr [eax]; test eax, eax; jne 0x17ae0; ret; 
0x080a93bd: mov eax, dword ptr [ebp - 0x2c]; push esi; call dword ptr [eax]; 
0x0805b5fc: mov eax, dword ptr [ebp - 0x2c]; sub esp, 8; push -1; push dword ptr [eax]; call dword ptr [ebx + 0xc]; 
0x080784bf: mov eax, dword ptr [ebp - 0x3c]; push dword ptr [ebp - 0x38]; mov dword ptr [ebp - 0x30], edx; call eax; 
0x080590e7: mov eax, dword ptr [ebp - 0x40]; sub esp, 8; push -1; push dword ptr [ebx]; call dword ptr [eax + 0xc]; 
0x080a0a9c: mov eax, dword ptr [ebp - 0x54]; call eax; 
0x080a0365: mov eax, dword ptr [ebp - 0x5c]; add esp, 0x20; mov dword ptr [ebp - 0x5c], edx; call eax; 
0x080a0f1c: mov eax, dword ptr [ebp - 0x60]; add eax, dword ptr [ebp - 0x5c]; call eax; 
0x080a09fc: mov eax, dword ptr [ebp - 0x60]; call eax; 
0x080a022f: mov eax, dword ptr [ebp - 0x68]; add esp, 0x20; lea esi, [esi]; call eax; 
0x080a09f1: mov eax, dword ptr [ebp - 0x74]; test eax, eax; jne 0x57abe; mov eax, dword ptr [ebp - 0x60]; call eax; 
0x080a0a8e: mov eax, dword ptr [ebp - 0x74]; test eax, eax; jne 0x58610; mov dword ptr [ebp - 0x60], edx; mov eax, dword ptr [ebp - 0x54]; call eax; 
0x080aa5ee: mov eax, dword ptr [ebp - 0x9c]; call dword ptr [eax]; 
0x080a3ea6: mov eax, dword ptr [ebx + 0x14]; call dword ptr [ebx]; 
0x080ae119: mov eax, dword ptr [ebx + 0x5e5b4cc4]; pop edi; pop ebp; ret; 
0x080a78e0: mov eax, dword ptr [ebx + 8]; mov dword ptr [eax], edx; add esp, 4; pop ebx; pop esi; ret; 
0x080780ca: mov eax, dword ptr [ebx + 8]; test eax, eax; jne 0x300fc; sub esp, 0xc; push dword ptr [ebx]; call esi; 
0x08074135: mov eax, dword ptr [ebx + eax*4 - 0x2b4c0]; sub eax, ecx; pop ebx; ret; 
0x08092a25: mov eax, dword ptr [ebx + eax*4]; jmp eax; 
0x080b2ee2: mov eax, dword ptr [ebx + ebp*4 - 0x180]; mov dword ptr [edx + ebp*4], ecx; test eax, eax; je 0x6aefa; mov dword ptr [esp + 8], edx; call eax; 
0x0806f424: mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; pop edi; ret; 
0x0806f554: mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; ret; 
0x0806dbb4: mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; mov eax, edi; pop edi; ret; 
0x0806dce4: mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; mov eax, edx; ret; 
0x08070184: mov eax, dword ptr [ecx + 4]; mov dword ptr [edx + 4], eax; mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x080701e4: mov eax, dword ptr [ecx + 4]; mov dword ptr [edx + 4], eax; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x0806fb54: mov eax, dword ptr [ecx + 4]; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x0806f405: mov eax, dword ptr [ecx + 4]; mov word ptr [edx + 4], ax; lea eax, [edx + 5]; pop edi; ret; 
0x0806f545: mov eax, dword ptr [ecx + 4]; mov word ptr [edx + 4], ax; lea eax, [edx + 5]; ret; 
0x0806dba5: mov eax, dword ptr [ecx + 4]; mov word ptr [edx + 4], ax; mov eax, edi; pop edi; ret; 
0x0806dcd5: mov eax, dword ptr [ecx + 4]; mov word ptr [edx + 4], ax; mov eax, edx; ret; 
0x0807006a: mov eax, dword ptr [ecx + 7]; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; pop edi; ret; 
0x080701ca: mov eax, dword ptr [ecx + 7]; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x0806fa4a: mov eax, dword ptr [ecx + 7]; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x0806fbaa: mov eax, dword ptr [ecx + 7]; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x0806f5b4: mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x0806dd44: mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x0807008a: mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; pop edi; ret; 
0x080701ea: mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x0806fa6a: mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x0806fbca: mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x0807004b: mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; pop edi; ret; 
0x080701ab: mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x0806fa2b: mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x0806fb8b: mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x0806f5d4: mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x0806dd64: mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x0806f595: mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x0806dd25: mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x08096fd2: mov eax, dword ptr [ecx + 8]; pop ebx; sub eax, edx; ret; 
0x0805fb3d: mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x080550ba: mov eax, dword ptr [ecx + eax*4]; jmp eax; 
0x0806f2f0: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; lea eax, [edx + 3]; pop edi; ret; 
0x0806f520: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; lea eax, [edx + 3]; ret; 
0x0806f530: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov al, byte ptr [ecx + 4]; mov byte ptr [edx + 4], al; lea eax, [edx + 4]; ret; 
0x0806dcc0: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov al, byte ptr [ecx + 4]; mov byte ptr [edx + 4], al; mov eax, edx; ret; 
0x0806f540: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; lea eax, [edx + 5]; ret; 
0x0806dcd0: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; mov eax, edx; ret; 
0x0806f550: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; ret; 
0x0806dce0: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; mov eax, edx; ret; 
0x0806fb50: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 4]; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x0806daa0: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edi; pop edi; ret; 
0x0806dcb0: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edx; ret; 
0x0805faf0: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; ret; 
0x0806f3c1: mov eax, dword ptr [ecx]; mov word ptr [edx], ax; lea eax, [edx + 1]; pop edi; ret; 
0x0806f501: mov eax, dword ptr [ecx]; mov word ptr [edx], ax; lea eax, [edx + 1]; ret; 
0x0806f511: mov eax, dword ptr [ecx]; mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, [edx + 2]; ret; 
0x0806dca1: mov eax, dword ptr [ecx]; mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edx; ret; 
0x0806db71: mov eax, dword ptr [ecx]; mov word ptr [edx], ax; mov eax, edi; pop edi; ret; 
0x0806dc91: mov eax, dword ptr [ecx]; mov word ptr [edx], ax; mov eax, edx; ret; 
0x0805caa9: mov eax, dword ptr [edi + 0x10]; pop esi; pop edi; jmp eax; 
0x0805e600: mov eax, dword ptr [edi + 0x14]; pop esi; pop edi; jmp eax; 
0x08092db7: mov eax, dword ptr [edi + eax*4 - 0x1240]; jmp eax; 
0x08093661: mov eax, dword ptr [edi + eax*4 - 0x12c0]; jmp eax; 
0x08093947: mov eax, dword ptr [edi + eax*4 - 0x1340]; jmp eax; 
0x08055b6c: mov eax, dword ptr [edi + eax*4 - 0x17a0]; jmp eax; 
0x08054d7a: mov eax, dword ptr [edi + eax*4 - 0x1820]; jmp eax; 
0x08055acc: mov eax, dword ptr [edi + eax*4 - 0x18a0]; jmp eax; 
0x08050800: mov eax, dword ptr [edi - 4]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0807920c: mov eax, dword ptr [edi]; mov dword ptr [ebx + 0x968], eax; pop ebx; pop esi; pop edi; ret; 
0x080a96f2: mov eax, dword ptr [edi]; pop ebx; add eax, dword ptr [edx + 4]; pop esi; pop edi; jmp eax; 
0x08060828: mov eax, dword ptr [edx + 0x14]; cmp dword ptr [edx + 8], eax; cmovae eax, dword ptr [edx + 8]; sub eax, dword ptr [edx + 0xc]; ret; 
0x0805a9d1: mov eax, dword ptr [edx + 0x28]; cmp dword ptr [edx + 0x24], eax; cmovne eax, ecx; ret; 
0x080888e4: mov eax, dword ptr [edx + 0x30]; add eax, 0x200; mov dword ptr gs:[ecx], eax; pop ebx; ret; 
0x080b0264: mov eax, dword ptr [edx + 0x4c]; ret; 
0x080ae3f4: mov eax, dword ptr [edx + 0x54]; add esp, 8; pop ebx; ret; 
0x080ae438: mov eax, dword ptr [edx + 0x58]; add esp, 8; pop ebx; ret; 
0x080ae405: mov eax, dword ptr [edx + 0x5c]; add esp, 8; pop ebx; ret; 
0x080b025c: mov eax, dword ptr [edx + 0x60]; shr eax, 0x1f; mov dword ptr [ecx], eax; mov eax, dword ptr [edx + 0x4c]; ret; 
0x080b0a44: mov eax, dword ptr [edx + 8]; add esp, 8; pop ebx; ret; 
0x08096b65: mov eax, dword ptr [edx]; pop ebx; pop esi; pop edi; ret; 
0x080a258d: mov eax, dword ptr [edx]; pop ebx; pop esi; ret; 
0x08096cc1: mov eax, dword ptr [edx]; pop esi; pop edi; ret; 
0x0805bc8e: mov eax, dword ptr [esi + 0x10]; pop esi; pop edi; jmp eax; 
0x08087b78: mov eax, dword ptr [esi + 0x10]; test eax, eax; je 0x3fb88; sub esp, 0xc; push esi; call eax; 
0x0805e42c: mov eax, dword ptr [esi + 0xc]; pop esi; pop edi; jmp eax; 
0x080a08d3: mov eax, dword ptr [esi + 8]; add eax, dword ptr [ebx]; mov ebx, dword ptr [ebp - 0x74]; test ebx, ebx; jne 0x588ab; call eax; 
0x080a0730: mov eax, dword ptr [esi + 8]; add eax, dword ptr [ebx]; test edx, edx; jne 0x5873b; call eax; 
0x080a14fd: mov eax, dword ptr [esi]; add eax, dword ptr [ecx]; test edx, edx; jne 0x59507; call eax; 
0x08066f5a: mov eax, dword ptr [esp + 0x10]; mov dword ptr [eax], edx; xor eax, eax; add esp, 0xc; ret; 
0x08075283: mov eax, dword ptr [esp + 0x10]; pop ebx; pop esi; pop edi; ret; 
0x08088f8e: mov eax, dword ptr [esp + 0x14]; call eax; 
0x08051999: mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x1c]; 
0x080b088e: mov eax, dword ptr [esp + 0x18]; call eax; 
0x0804ff59: mov eax, dword ptr [esp + 0x1c]; call eax; 
0x080a24c5: mov eax, dword ptr [esp + 0x20]; call 0x59e80; add esp, 0x1c; ret; 
0x080b00cf: mov eax, dword ptr [esp + 0x24]; call eax; 
0x080a550e: mov eax, dword ptr [esp + 0x28]; call eax; 
0x0805a852: mov eax, dword ptr [esp + 0x30]; push eax; call esi; 
0x08085685: mov eax, dword ptr [esp + 0x38]; call eax; 
0x0807f329: mov eax, dword ptr [esp + 0x44]; call eax; 
0x0807ee57: mov eax, dword ptr [esp + 0x48]; call eax; 
0x080814cc: mov eax, dword ptr [esp + 0x4c]; call eax; 
0x080804dd: mov eax, dword ptr [esp + 0x50]; call eax; 
0x08083690: mov eax, dword ptr [esp + 0x54]; call eax; 
0x0807c9fb: mov eax, dword ptr [esp + 0x5c]; push dword ptr [eax + 4]; call edi; 
0x080a3e20: mov eax, dword ptr [esp + 0xc]; add esp, 0x20; jmp ecx; 
0x08071952: mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x080a3dc8: mov eax, dword ptr [esp + 4]; add esp, 0x10; jmp ecx; 
0x0805fe24: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x080b01d4: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x48]; ret; 
0x080b0244: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x080b0284: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x50]; ret; 
0x080b02f4: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x54]; ret; 
0x080b02e4: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x58]; ret; 
0x080b0294: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x5c]; ret; 
0x08060a0f: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; cmp eax, 0x3fc; jbe 0x18a20; ret; 
0x08060a9f: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; cmp eax, 0x50; jbe 0x18ab0; ret; 
0x080608df: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; cmp eax, 0x80000; jbe 0x188f0; ret; 
0x08060a4f: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; cmp eax, 0xffff; jbe 0x18a60; ret; 
0x080b0274: mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x4c], edx; ret; 
0x0805fb04: mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x08087bf4: mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x080a3e72: mov eax, dword ptr [esp + 4]; ret 0x14; 
0x080a3d9b: mov eax, dword ptr [esp + 4]; ret 0xc; 
0x0805fe34: mov eax, dword ptr [esp + 4]; ret; 
0x08074f85: mov eax, dword ptr [esp + 8]; cld; pop edi; ret; 
0x080a3464: mov eax, dword ptr [esp + 8]; mov dword ptr [eax], edx; ret; 
0x080a8824: mov eax, dword ptr [esp + 8]; mov eax, 0x80e6f2c; call dword ptr [eax]; 
0x080a56c2: mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x08096f34: mov eax, dword ptr [esp + 8]; pop ebx; add eax, ecx; ret; 
0x08067fe5: mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x08074f5b: mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0804aa7f: mov eax, dword ptr [esp]; ret; 
0x080780c9: mov eax, dword ptr es:[ebx + 8]; test eax, eax; jne 0x300fc; sub esp, 0xc; push dword ptr [ebx]; call esi; 
0x0807f328: mov eax, dword ptr fs:[esp + 0x44]; call eax; 
0x0807ee56: mov eax, dword ptr fs:[esp + 0x48]; call eax; 
0x080804dc: mov eax, dword ptr fs:[esp + 0x50]; call eax; 
0x08077105: mov eax, dword ptr gs:[0xc]; test eax, eax; jne 0x2f130; mov eax, 3; call dword ptr gs:[0x10]; 
0x080771a5: mov eax, dword ptr gs:[0xc]; test eax, eax; jne 0x2f1d0; mov eax, 4; call dword ptr gs:[0x10]; 
0x080a3d6a: mov eax, dword ptr gs:[eax]; add esp, 4; pop ebx; pop esi; ret; 
0x08088838: mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x0804ffbd: mov eax, dword ptr ss:[esp + 0x1c]; call eax; 
0x0809719f: mov eax, ebp; mov ecx, 0x80; call dword ptr gs:[0x10]; 
0x080a5ffa: mov eax, ebp; pop ebx; pop ebp; pop esi; pop edi; ret; 
0x0804b157: mov eax, ebp; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x080a843e: mov eax, ebp; pop edi; pop ebp; ret 8; 
0x080866dc: mov eax, ebp; pop edi; pop ebp; ret; 
0x0804b1ce: mov eax, ebp; pop esi; pop edi; pop ebp; ret; 
0x0805bfda: mov eax, ebp; push ebx; push ecx; push esi; call dword ptr [eax + 0x40]; 
0x08077168: mov eax, ebx; add esp, 0x14; pop ebx; pop esi; ret; 
0x08079720: mov eax, ebx; call 0x316b0; add esp, 0x18; pop ebx; ret; 
0x08079d1e: mov eax, ebx; pop ebx; pop esi; pop edi; pop ebp; jmp eax; 
0x08058946: mov eax, ebx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x080a88a3: mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x08077127: mov eax, ebx; pop ebx; pop esi; ret; 
0x08098620: mov eax, ebx; pop ebx; ret; 
0x080612e3: mov eax, ecx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x08098d32: mov eax, ecx; pop ebx; pop esi; pop edi; ret; 
0x080612f6: mov eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x08098b50: mov eax, ecx; ret; 
0x080a23f8: mov eax, edi; add esp, 0x60; pop ebx; pop esi; pop edi; ret; 
0x0805ae90: mov eax, edi; call dword ptr gs:[0x10]; 
0x0804b3c0: mov eax, edi; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x08050b60: mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x0806daa4: mov eax, edi; pop edi; ret; 
0x08058496: mov eax, edi; pop esi; pop edi; pop ebp; ret; 
0x080abccb: mov eax, edi; sar eax, 2; pop ebx; pop esi; pop edi; ret; 
0x0804a778: mov eax, edx; int 0x80; 
0x080a4eb1: mov eax, edx; mov ecx, dword ptr [esp + 0x1c]; xor ecx, dword ptr gs:[0x14]; jne 0x5cecc; add esp, 0x2c; ret; 
0x080a5171: mov eax, edx; mov ecx, dword ptr [esp + 0x1c]; xor ecx, dword ptr gs:[0x14]; jne 0x5d18c; add esp, 0x2c; ret; 
0x0805159d: mov eax, edx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x080b0ceb: mov eax, edx; pop ebx; pop esi; pop edi; ret; 
0x0807935b: mov eax, edx; pop ebx; pop esi; ret; 
0x080a3436: mov eax, edx; pop ebx; ret; 
0x0809aa30: mov eax, edx; pop edi; pop ebp; ret; 
0x080b0d93: mov eax, edx; pop edi; ret; 
0x08050abc: mov eax, edx; pop esi; pop edi; pop ebp; ret; 
0x08076676: mov eax, edx; pop esi; pop edi; ret; 
0x0805c82e: mov eax, edx; ret; 
0x0805b192: mov eax, esi; add esp, 4; pop ebx; pop esi; ret; 
0x0804c5c1: mov eax, esi; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x08071d71: mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0809872a: mov eax, esi; pop ebx; pop esi; ret; 
0x0805069e: mov eax, esi; pop esi; pop edi; pop ebp; ret; 
0x08071d83: mov eax, esi; pop esi; pop edi; ret; 
0x08098206: mov ebp, 0x5ff801c0; ret; 
0x08067786: mov ebp, 0x83000001; ret 0xe901; 
0x080a9c52: mov ebp, 0x8dcc5d8b; sbb dword ptr [ecx + ebx*4], -2; call dword ptr [eax - 0x73]; 
0x08076960: mov ebp, 0x8dfffffe; sub dword ptr [eax + 0x1b], -3; call dword ptr [eax - 0x73]; 
0x080b30ef: mov ebp, 0xc7fffffd; ret 0; 
0x08097198: mov ebp, 0xf0; xor esi, esi; mov eax, ebp; mov ecx, 0x80; call dword ptr gs:[0x10]; 
0x08099598: mov ebp, 0xfe0012e8; jmp dword ptr [esi - 0x70]; 
0x080a56bf: mov ebp, dword ptr [eax + 0xc]; mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x080b0536: mov ebp, dword ptr [ebp]; mov esp, ecx; pop ecx; jmp ecx; 
0x0804fccf: mov ebp, dword ptr [esp]; ret; 
0x08077e5a: mov ebp, eax; mov eax, 0xc0; call dword ptr gs:[0x10]; 
0x08077ee3: mov ebp, eax; mov ecx, dword ptr [esp + 8]; mov eax, 0xc0; call dword ptr gs:[0x10]; 
0x08094b86: mov ebp, ebx; call 0xec88cb8c; or al, 0x8d; xchg dword ptr [eax - 7], ecx; cld; call dword ptr [eax - 0x18]; 
0x080783ff: mov ebp, ebx; push esi; call edi; 
0x08049cf2: mov ebp, esp; sub esp, 0x10; push eax; push 0x80e5f40; call edx; 
0x08049ca6: mov ebp, esp; sub esp, 0x14; push 0x80e5f40; call eax; 
0x0807687c: mov ebx, 0x1b68838d; std; call dword ptr [eax - 0x73]; 
0x0804a489: mov ebx, 0x3001; lea ecx, [esp + 0x40]; int 0x80; 
0x0804a7ce: mov ebx, 0x3002; int 0x80; 
0x0804a80a: mov ebx, 0x3003; xor ecx, ecx; int 0x80; 
0x080ab0da: mov ebx, 0x3005; call dword ptr gs:[0x10]; 
0x080970fd: mov ebx, 0x740af983; adc dword ptr [ebx + 0x5e], ebx; pop edi; ret; 
0x0807aeb9: mov ebx, 0x838dffff; pushal; sub bh, ch; call dword ptr [eax - 0x73]; 
0x080aba91: mov ebx, 0x89000020; inc esi; or al, 0x83; les edx, ptr [ebx + ebx*2]; pop esi; ret; 
0x080aba5e: mov ebx, 0xc085ffff; setne al; add esp, 0x1c; movzx eax, al; neg eax; ret; 
0x08088a90: mov ebx, 0xff0b1ae8; jmp dword ptr [esi - 0x70]; 
0x08077066: mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x0805ae82: mov ebx, 2; mov ecx, dword ptr [ebp - 0x38]; lea esi, [esi]; mov eax, edi; call dword ptr gs:[0x10]; 
0x08088a51: mov ebx, 2; xor edx, edx; mov ecx, ebp; mov esi, 8; call dword ptr gs:[0x10]; 
0x080a1f44: mov ebx, dword ptr [ebp - 0x248]; lea ecx, [ebp - 0x218]; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x08092bf2: mov ebx, dword ptr [ebp - 0x4c0]; mov dword ptr [ebp - 0x4a0], 1; mov eax, dword ptr [ebx + eax*4]; jmp eax; 
0x08092aad: mov ebx, dword ptr [ebp - 0x4c0]; mov dword ptr [ebp - 0x4ac], 1; mov eax, dword ptr [ebx + eax*4]; jmp eax; 
0x08092b9d: mov ebx, dword ptr [ebp - 0x4c0]; mov dword ptr [ebp - 0x4bc], 1; mov eax, dword ptr [ebx + eax*4]; jmp eax; 
0x08092a1f: mov ebx, dword ptr [ebp - 0x4c0]; mov eax, dword ptr [ebx + eax*4]; jmp eax; 
0x0809fe7b: mov ebx, dword ptr [ebp - 0x74]; mov eax, dword ptr [eax]; add eax, dword ptr [esi]; test ebx, ebx; jne 0x57e22; call eax; 
0x0809ffb9: mov ebx, dword ptr [ebp - 0x74]; test ebx, ebx; jne 0x57e8c; call eax; 
0x080a08d8: mov ebx, dword ptr [ebp - 0x74]; test ebx, ebx; jne 0x588ab; call eax; 
0x080b048c: mov ebx, dword ptr [ebp - 0xc]; mov esi, dword ptr [ebp - 8]; mov edi, dword ptr [ebp - 4]; leave; ret; 
0x08049e59: mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x0807eb20: mov ebx, dword ptr [ecx + ebx]; add byte ptr [edx], al; add esp, 8; pop ebx; ret; 
0x0806c553: mov ebx, dword ptr [edx + 0xc]; cmp ecx, ebx; mov eax, 0; jne 0x24570; pop ebx; ret; 
0x08099876: mov ebx, dword ptr [esp + 0x10]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x08079237: mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa3; call dword ptr gs:[0x10]; 
0x08077bea: mov ebx, dword ptr [esp + 0x10]; mov edx, eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x080a7ec4: mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x1c]; mov edi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x080b0225: mov ebx, dword ptr [esp + 0x18]; mov dword ptr [eax], ebx; add esp, 8; pop ebx; ret; 
0x080623ff: mov ebx, dword ptr [esp + 0x1c]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08077b00: mov ebx, dword ptr [esp + 0x20]; lea edx, [esp + 4]; mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x08077ad1: mov ebx, dword ptr [esp + 0x20]; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x08077250: mov ebx, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x2c]; mov eax, 0x8c; call dword ptr gs:[0x10]; 
0x080998ce: mov ebx, dword ptr [esp + 0x40]; lea edx, [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x08088cae: mov ebx, dword ptr [esp + 0xa0]; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x08076fde: mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x080659c6: mov ebx, dword ptr [esp + 0xc]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08077f2a: mov ebx, dword ptr [esp + 4]; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x08079266: mov ebx, dword ptr [esp + 4]; mov eax, 0x74; call dword ptr gs:[0x10]; 
0x080995a6: mov ebx, dword ptr [esp + 4]; mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x080769fa: mov ebx, dword ptr [esp + 4]; mov eax, 0xfc; call dword ptr gs:[0x10]; 
0x08077a8a: mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x080999a5: mov ebx, dword ptr [esp + 8]; int 0x80; 
0x080abc5d: mov ebx, dword ptr [esp + 8]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x08077f5d: mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x08077327: mov ebx, dword ptr [esp + 8]; mov eax, 0xb7; mov ecx, edi; call dword ptr gs:[0x10]; 
0x08077f8d: mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x080a7e62: mov ebx, dword ptr [esp + 8]; test edx, edx; cmovs edx, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x08049c67: mov ebx, dword ptr [esp]; ret; 
0x08088a20: mov ebx, eax; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x0805087d: mov ebx, ebp; call dword ptr gs:[0x10]; 
0x08066cc8: mov ebx, ebp; mov edx, 1; call dword ptr gs:[0x10]; 
0x080aba21: mov ebx, ebx; cld; jmp dword ptr [esi - 0x70]; 
0x08088a04: mov ebx, ecx; lea ecx, [esp + 0x8c]; call dword ptr gs:[0x10]; 
0x080991e3: mov ebx, edi; call dword ptr gs:[0x10]; 
0x080628e8: mov ebx, edi; mov edx, 1; call dword ptr gs:[0x10]; 
0x08077f3a: mov ebx, edx; cmp eax, 0xfffff001; jae 0x34310; ret; 
0x0804af2f: mov ebx, esi; call 0x6b4f0; add esp, 4; pop ebx; pop esi; ret; 
0x08077b0d: mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x080971a1: mov ecx, 0x80; call dword ptr gs:[0x10]; 
0x080608a1: mov ecx, 0x80; mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x08049245: mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x0804c03b: mov ecx, 0x81; lea ebx, [edx + 0x1550]; mov edx, 1; call dword ptr gs:[0x10]; 
0x08066cc3: mov ecx, 0x81; mov ebx, ebp; mov edx, 1; call dword ptr gs:[0x10]; 
0x080628e3: mov ecx, 0x81; mov ebx, edi; mov edx, 1; call dword ptr gs:[0x10]; 
0x080493b7: mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x080652f9: mov ecx, 0x81; mov edx, 1; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0805086e: mov ecx, 0x81; mov edx, 1; mov eax, 0xf0; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x0805095a: mov ecx, 0x81; mov edx, 1; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x080991d9: mov ecx, 0x81; mov edx, 1; mov ebx, edi; call dword ptr gs:[0x10]; 
0x08050ba0: mov ecx, 0x81; mov edx, 1; mov esi, edi; call dword ptr gs:[0x10]; 
0x08066a82: mov ecx, 0x81; mov edx, edi; call dword ptr gs:[0x10]; 
0x0804bf77: mov ecx, 0x81; xor esi, esi; mov edx, 1; call dword ptr gs:[0x10]; 
0x0805afc6: mov ecx, 0xc085080a; je 0x12fd2; add esp, 8; pop ebx; ret; 
0x0808f096: mov ecx, 0xf0b8; add byte ptr [ebp + 0x1a4c9b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x08064636: mov ecx, 0xf0b8; add byte ptr [ebp + 0x4e09b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0807fc43: mov ecx, 0xff9967e8; dec dword ptr [ebp - 0x2c79f7d]; call dword ptr [eax - 0x73]; 
0x080888de: mov ecx, 0xfffffff0; mov eax, dword ptr [edx + 0x30]; add eax, 0x200; mov dword ptr gs:[ecx], eax; pop ebx; ret; 
0x080752b0: mov ecx, 0xffffffff; cmovb eax, ecx; ret; 
0x08058543: mov ecx, dword ptr [eax + 0x58]; mov dword ptr [ecx + 0x88], edx; ret; 
0x08096430: mov ecx, dword ptr [eax + 8]; mov dword ptr [eax], edx; mov dword ptr [eax + 8], edx; mov dword ptr [eax + 0x20], ecx; ret; 
0x0805ae87: mov ecx, dword ptr [ebp - 0x38]; lea esi, [esi]; mov eax, edi; call dword ptr gs:[0x10]; 
0x080550af: mov ecx, dword ptr [ebp - 0x4cc]; movzx eax, byte ptr [eax + edx - 0x20]; mov eax, dword ptr [ecx + eax*4]; jmp eax; 
0x080a3ea3: mov ecx, dword ptr [ebx + 0x10]; mov eax, dword ptr [ebx + 0x14]; call dword ptr [ebx]; 
0x0807412e: mov ecx, dword ptr [ebx + ecx*4 - 0x2b4c0]; mov eax, dword ptr [ebx + eax*4 - 0x2b4c0]; sub eax, ecx; pop ebx; ret; 
0x080745d4: mov ecx, dword ptr [ebx + ecx*4 - 0x2b4c0]; sub eax, ecx; pop esi; pop edi; pop ebx; ret; 
0x08077b82: mov ecx, dword ptr [esp + 0x10]; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x08076fda: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x08099802: mov ecx, dword ptr [esp + 0x10]; or dh, 0x80; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x08099872: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x08079233: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa3; call dword ptr gs:[0x10]; 
0x08077be6: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov edx, eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x080b0230: mov ecx, dword ptr [esp + 0x18]; mov dword ptr [edx + eax*4], ecx; add esp, 8; pop ebx; ret; 
0x080a4eb3: mov ecx, dword ptr [esp + 0x1c]; xor ecx, dword ptr gs:[0x14]; jne 0x5cecc; add esp, 0x2c; ret; 
0x080a5173: mov ecx, dword ptr [esp + 0x1c]; xor ecx, dword ptr gs:[0x14]; jne 0x5d18c; add esp, 0x2c; ret; 
0x080a526a: mov ecx, dword ptr [esp + 0x1c]; xor ecx, dword ptr gs:[0x14]; jne 0x5d27b; add esp, 0x2c; ret; 
0x080a7b07: mov ecx, dword ptr [esp + 0x1c]; xor ecx, dword ptr gs:[0x14]; jne 0x5fb18; add esp, 0x2c; ret; 
0x080aba0f: mov ecx, dword ptr [esp + 0x1c]; xor ecx, dword ptr gs:[0x14]; jne 0x63a20; add esp, 0x2c; ret; 
0x0807705d: mov ecx, dword ptr [esp + 0x20]; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x0807709e: mov ecx, dword ptr [esp + 0x20]; mov edx, dword ptr [esp + 0x24]; mov edi, eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x080a24c1: mov ecx, dword ptr [esp + 0x24]; mov eax, dword ptr [esp + 0x20]; call 0x59e80; add esp, 0x1c; ret; 
0x08099724: mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x08077cba: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x080abc59: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x08077f59: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x08077f89: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x08077c3a: mov ecx, dword ptr [esp + 0xc]; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x080a79f4: mov ecx, dword ptr [esp + 0xc]; xor ecx, dword ptr gs:[0x14]; jne 0x5fa05; add esp, 0x1c; ret; 
0x08077ee5: mov ecx, dword ptr [esp + 8]; mov eax, 0xc0; call dword ptr gs:[0x10]; 
0x08077f26: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x0807713d: mov ecx, dword ptr [esp + 8]; mov edx, dword ptr [esp + 0xc]; mov esi, eax; mov eax, 3; call dword ptr gs:[0x10]; 
0x080771dd: mov ecx, dword ptr [esp + 8]; mov edx, dword ptr [esp + 0xc]; mov esi, eax; mov eax, 4; call dword ptr gs:[0x10]; 
0x080a3e6c: mov ecx, dword ptr [esp]; mov dword ptr [esp], eax; mov eax, dword ptr [esp + 4]; ret 0x14; 
0x080a3d95: mov ecx, dword ptr [esp]; mov dword ptr [esp], eax; mov eax, dword ptr [esp + 4]; ret 0xc; 
0x0805ff5d: mov ecx, dword ptr [esp]; ret; 
0x08099801: mov ecx, dword ptr cs:[esp + 0x10]; or dh, 0x80; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x08077b81: mov ecx, dword ptr es:[esp + 0x10]; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x08099871: mov ecx, dword ptr es:[esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0804a7c7: mov ecx, eax; mov eax, 0x180; mov ebx, 0x3002; int 0x80; 
0x080a3e1e: mov ecx, eax; mov eax, dword ptr [esp + 0xc]; add esp, 0x20; jmp ecx; 
0x080a3dc6: mov ecx, eax; mov eax, dword ptr [esp + 4]; add esp, 0x10; jmp ecx; 
0x08098b58: mov ecx, eax; mov eax, ecx; ret; 
0x08088a2e: mov ecx, eax; mov edx, dword ptr [esp + 0x130]; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x08098c26: mov ecx, ebp; call dword ptr gs:[0x10]; 
0x08088a58: mov ecx, ebp; mov esi, 8; call dword ptr gs:[0x10]; 
0x08077330: mov ecx, edi; call dword ptr gs:[0x10]; 
0x0805853b: mov ecx, edx; mov dword ptr [eax + 0x94], ecx; mov ecx, dword ptr [eax + 0x58]; mov dword ptr [ecx + 0x88], edx; ret; 
0x0807501d: mov ecx, edx; rep stosb byte ptr es:[edi], al; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x08088cac: mov ecx, esi; mov ebx, dword ptr [esp + 0xa0]; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x0807968c: mov edi, 0x100; add byte ptr [ebp - 0x38388a25], al; ret; 
0x080aba5d: mov edi, 0x85ffffbb; ror byte ptr [edi], 0x95; rol byte ptr [ebx - 0x49f0e33c], 0xc0; neg eax; ret; 
0x08077cb6: mov edi, 0x8b000000; dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x08049010: mov edi, 0xc0c70009; add byte ptr [eax], al; add byte ptr [eax], al; test eax, eax; je 0x101f; call eax; 
0x0807bfab: mov edi, 0xfff23fe9; call dword ptr [eax - 0x73]; 
0x08098c8c: mov edi, 0xffffe0c2; jmp dword ptr [ebp - 0x75]; 
0x080a56bc: mov edi, dword ptr [eax + 8]; mov ebp, dword ptr [eax + 0xc]; mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x080a1850: mov edi, dword ptr [ebp - 0x3c]; mov eax, 0x21; xor ecx, ecx; lea ebx, [edi - 0x1b7e5]; call dword ptr gs:[0x10]; 
0x080b0492: mov edi, dword ptr [ebp - 4]; leave; ret; 
0x080b0533: mov edi, dword ptr [ebp - 4]; mov ebp, dword ptr [ebp]; mov esp, ecx; pop ecx; jmp ecx; 
0x080a3e9b: mov edi, dword ptr [ebx + 4]; mov dword ptr [ebx], eax; mov edx, dword ptr [ebx + 0xc]; mov ecx, dword ptr [ebx + 0x10]; mov eax, dword ptr [ebx + 0x14]; call dword ptr [ebx]; 
0x0806ba3d: mov edi, dword ptr [esi]; jmp ebx; 
0x080a7ecc: mov edi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x08059667: mov edi, dword ptr [esp + 0x24]; push edi; call dword ptr [ebx + 0x40]; 
0x08077254: mov edi, dword ptr [esp + 0x2c]; mov eax, 0x8c; call dword ptr gs:[0x10]; 
0x0804ae37: mov edi, dword ptr [esp]; ret; 
0x080770a6: mov edi, eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x08074ef1: mov edi, eax; mov esi, edx; mov eax, dword ptr [esp + 4]; ret; 
0x08099247: mov edi, ecx; call dword ptr gs:[0x10]; 
0x0804c4a3: mov edi, es; ret 0x6ef4; 
0x080ab685: mov edx, 0x100558b; ret 0xd139; 
0x080791ae: mov edx, 0x64; mov eax, 0x80e6f60; mov eax, dword ptr [eax]; test eax, eax; cmove eax, edx; ret; 
0x08080008: mov edx, 0x80000001; jns 0x38016; or byte ptr [edi], 0x87; ret; 
0x0804af32: mov edx, 0x83000685; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x08075cf2: mov edx, 0x8d000038; or dword ptr [eax + 0x1a], 0xfffffffd; call dword ptr [eax - 0x73]; 
0x080795bd: mov edx, 0xec830006; adc al, 0x8d; cmp dword ptr [ecx], 0x21; std; call dword ptr [eax - 0x18]; 
0x0805e514: mov edx, 0xf00768d; mov dh, 0; pop ebx; pop esi; pop edi; ret; 
0x08049c62: mov edx, 0xf4000005; mov ebx, dword ptr [esp]; ret; 
0x0807c321: mov edx, 0xffffffe0; mov dword ptr gs:[edx], eax; mov eax, 0xffffffff; ret; 
0x0807ec0d: mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x080a248d: mov edx, 0xffffffff; mov eax, 0x80e59ac; mov eax, dword ptr [eax]; call 0x59e80; add esp, 0x1c; ret; 
0x0805ef59: mov edx, 0xffffffff; ret; 
0x080493bc: mov edx, 1; call dword ptr gs:[0x10]; 
0x080652fe: mov edx, 1; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x08050873: mov edx, 1; mov eax, 0xf0; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x0805095f: mov edx, 1; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x080991de: mov edx, 1; mov ebx, edi; call dword ptr gs:[0x10]; 
0x08050ba5: mov edx, 1; mov esi, edi; call dword ptr gs:[0x10]; 
0x0804a76a: mov edx, 1; xor ebx, ebx; lea esi, [esi]; mov eax, edx; int 0x80; 
0x080608a6: mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x080b31c0: mov edx, dword ptr [eax + 0x10]; test edx, edx; je 0x6b1d4; sub esp, 0xc; push eax; call edx; 
0x080968ef: mov edx, dword ptr [eax + 0x18]; test edx, edx; je 0x4e900; add esp, 8; pop ebx; ret; 
0x0805e29d: mov edx, dword ptr [eax + 0x24]; mov dword ptr [eax + 0x24], ecx; mov dword ptr [eax + 0xc], edx; mov dword ptr [eax + 4], edx; ret; 
0x08090448: mov edx, dword ptr [eax + ebx]; sub esp, 4; push ecx; push esi; push dword ptr [ebp - 0x8a0]; call edx; 
0x080528aa: mov edx, dword ptr [eax + ecx*4]; sub esp, 4; push ebx; push dword ptr [ebp - 0x884]; push dword ptr [ebp - 0x890]; call edx; 
0x080a3462: mov edx, dword ptr [eax]; mov eax, dword ptr [esp + 8]; mov dword ptr [eax], edx; ret; 
0x080a33ef: mov edx, dword ptr [eax]; mov eax, edx; ret; 
0x080b2127: mov edx, dword ptr [eax]; test edx, edx; jne 0x6a138; add esp, 8; pop ebx; ret; 
0x0804c033: mov edx, dword ptr [ebp - 0x30]; mov eax, 0xf0; mov ecx, 0x81; lea ebx, [edx + 0x1550]; mov edx, 1; call dword ptr gs:[0x10]; 
0x0807cdcf: mov edx, dword ptr [ebp - 0x48]; call edx; 
0x080a0362: mov edx, dword ptr [ebp - 0x64]; mov eax, dword ptr [ebp - 0x5c]; add esp, 0x20; mov dword ptr [ebp - 0x5c], edx; call eax; 
0x080a072d: mov edx, dword ptr [ebp - 0x74]; mov eax, dword ptr [esi + 8]; add eax, dword ptr [ebx]; test edx, edx; jne 0x5873b; call eax; 
0x080a14fa: mov edx, dword ptr [ebp - 0x74]; mov eax, dword ptr [esi]; add eax, dword ptr [ecx]; test edx, edx; jne 0x59507; call eax; 
0x080a3ea0: mov edx, dword ptr [ebx + 0xc]; mov ecx, dword ptr [ebx + 0x10]; mov eax, dword ptr [ebx + 0x14]; call dword ptr [ebx]; 
0x080a4cdc: mov edx, dword ptr [ebx + 4]; call 0x62bc0; pop edx; pop ecx; pop eax; jmp dword ptr [eax]; 
0x080a796c: mov edx, dword ptr [ebx + 8]; mov dword ptr [edx], eax; add esp, 4; pop ebx; pop esi; ret; 
0x080a7f20: mov edx, dword ptr [ecx + 0x1b68]; add word ptr [edx + eax*2], 1; ret; 
0x080a78cb: mov edx, dword ptr [edx + 0x18]; mov dword ptr [eax], edx; add esp, 4; pop ebx; pop esi; ret; 
0x080b0841: mov edx, dword ptr [edx + 8]; cmp dword ptr [ecx + 8], edx; ja 0x6884b; sbb eax, eax; ret; 
0x0805e273: mov edx, dword ptr [edx]; cmp eax, ecx; cmovg eax, ecx; test edx, edx; jne 0x16270; ret; 
0x08096403: mov edx, dword ptr [edx]; cmp eax, ecx; cmovg eax, ecx; test edx, edx; jne 0x4e400; ret; 
0x08060982: mov edx, dword ptr [edx]; mov dword ptr [eax + 0x186c], edx; ret; 
0x080609f2: mov edx, dword ptr [edx]; mov dword ptr [eax + 0x48c], edx; ret; 
0x080609d2: mov edx, dword ptr [edx]; mov dword ptr [eax + 0x490], edx; ret; 
0x080609a2: mov edx, dword ptr [edx]; mov dword ptr [eax + 0x4a0], 1; mov dword ptr [eax + 0x480], edx; ret; 
0x08060952: mov edx, dword ptr [edx]; mov dword ptr [eax + 0x4a0], 1; mov dword ptr [eax + 0x484], edx; ret; 
0x08060922: mov edx, dword ptr [edx]; mov dword ptr [eax + 0x4a0], 1; mov dword ptr [eax + 0x498], edx; ret; 
0x08060a82: mov edx, dword ptr [edx]; mov dword ptr [eax + 0x4bc], edx; ret; 
0x080affb7: mov edx, dword ptr [edx]; mov dword ptr [ebx + 0x4c], edx; pop ebx; pop esi; pop edi; ret; 
0x08077c3e: mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x080abc55: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x08077f55: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x08077f85: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x08088a30: mov edx, dword ptr [esp + 0x130]; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x080a7ec0: mov edx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x1c]; mov edi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x0807922f: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa3; call dword ptr gs:[0x10]; 
0x08099693: mov edx, dword ptr [esp + 0x18]; mov esi, dword ptr [esp + 0x1c]; jne 0x516c0; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x080770a2: mov edx, dword ptr [esp + 0x24]; mov edi, eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x080a54b1: mov edx, dword ptr [esp + 0x28]; call edx; 
0x080b2c51: mov edx, dword ptr [esp + 0x30]; add ebp, dword ptr [edx + 8]; mov dword ptr [esp], ebp; call edi; 
0x0807f902: mov edx, dword ptr [esp + 0x54]; call edx; 
0x08077edf: mov edx, dword ptr [esp + 0xc]; mov ebp, eax; mov ecx, dword ptr [esp + 8]; mov eax, 0xc0; call dword ptr gs:[0x10]; 
0x08077141: mov edx, dword ptr [esp + 0xc]; mov esi, eax; mov eax, 3; call dword ptr gs:[0x10]; 
0x080771e1: mov edx, dword ptr [esp + 0xc]; mov esi, eax; mov eax, 4; call dword ptr gs:[0x10]; 
0x0808882e: mov edx, dword ptr [esp + 4]; mov eax, 0xffffffd8; mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x080a3e1a: mov edx, dword ptr [esp + 4]; mov ecx, eax; mov eax, dword ptr [esp + 0xc]; add esp, 0x20; jmp ecx; 
0x0806097e: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x186c], edx; ret; 
0x080609ee: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x48c], edx; ret; 
0x080609ce: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x490], edx; ret; 
0x0806099e: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x4a0], 1; mov dword ptr [eax + 0x480], edx; ret; 
0x0806094e: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x4a0], 1; mov dword ptr [eax + 0x484], edx; ret; 
0x0806091e: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x4a0], 1; mov dword ptr [eax + 0x498], edx; ret; 
0x08060a7e: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x4bc], edx; ret; 
0x080b0278: mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x4c], edx; ret; 
0x0805fb08: mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x08087bf8: mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x080a3dc3: mov edx, dword ptr [esp]; mov ecx, eax; mov eax, dword ptr [esp + 4]; add esp, 0x10; jmp ecx; 
0x0805866a: mov edx, dword ptr [esp]; ret; 
0x0807f901: mov edx, dword ptr fs:[esp + 0x54]; call edx; 
0x08077bee: mov edx, eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0805fae4: mov edx, eax; mov eax, dword ptr [eax]; test eax, eax; jne 0x17ae0; ret; 
0x080a2729: mov edx, ebp; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x08079264: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x74; call dword ptr gs:[0x10]; 
0x080995a4: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x08077f24: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x08066a87: mov edx, edi; call dword ptr gs:[0x10]; 
0x080a1f42: mov edx, edi; mov ebx, dword ptr [ebp - 0x248]; lea ecx, [ebp - 0x218]; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x080604a1: mov edx, edi; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x08097eee: mov es, word ptr [eax]; add byte ptr [eax], al; lea eax, [edi - 8]; pop edi; ret; 
0x08051461: mov esi, 0x390f2454; ret 0x8d0f; 
0x08097a1d: mov esi, 0x39da891e; ret; 
0x08055b65: mov esi, 0x44b60fc1; adc al, ah; mov eax, dword ptr [edi + eax*4 - 0x17a0]; jmp eax; 
0x08055ac5: mov esi, 0x44b60fc1; adc al, ah; mov eax, dword ptr [edi + eax*4 - 0x18a0]; jmp eax; 
0x08051310: mov esi, 0x83c12913; ret 0x3901; 
0x08082c35: mov esi, 0x89fffffb; ret 0xe283; 
0x0809212e: mov esi, 0x8dffffd7; xchg dword ptr [ecx + edi*8 - 4], esi; call dword ptr [eax + 0x68]; 
0x0808e931: mov esi, 0xc7542444; ret 0xfff0; 
0x080754f3: mov esi, 0xf000000; lahf; ret 0xea81; 
0x08094f21: mov esi, 0xfbe9c931; loope 0x4cf27; dec dword ptr [ebp - 0x1dadb79]; call dword ptr [eax + 0x68]; 
0x080a3ce8: mov esi, 1; call dword ptr [eax]; 
0x08088a5a: mov esi, 8; call dword ptr gs:[0x10]; 
0x08088b40: mov esi, 8; mov eax, 0xae; call dword ptr gs:[0x10]; 
0x080a56b9: mov esi, dword ptr [eax + 4]; mov edi, dword ptr [eax + 8]; mov ebp, dword ptr [eax + 0xc]; mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x080aa5e4: mov esi, dword ptr [eax]; test esi, esi; je 0x6210b; mov eax, dword ptr [ebp - 0x9c]; call dword ptr [eax]; 
0x08089657: mov esi, dword ptr [ebp - 0x38]; mov eax, 0xf0; lea ebx, [ebx + 0x1a3c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x080b06e3: mov esi, dword ptr [ebp - 8]; add esp, 0x10; mov edi, dword ptr [ebp - 4]; leave; ret; 
0x080b04a3: mov esi, dword ptr [ebp - 8]; mov eax, 3; mov edi, dword ptr [ebp - 4]; leave; ret; 
0x080b048f: mov esi, dword ptr [ebp - 8]; mov edi, dword ptr [ebp - 4]; leave; ret; 
0x080b0530: mov esi, dword ptr [ebp - 8]; mov edi, dword ptr [ebp - 4]; mov ebp, dword ptr [ebp]; mov esp, ecx; pop ecx; jmp ecx; 
0x08065ae1: mov esi, dword ptr [esi + 0x768dffff]; add byte ptr [ebx + 0x74ff08ec], al; and al, 0x24; push ebx; call eax; 
0x080628da: mov esi, dword ptr [esp + 0x18]; mov eax, 0xf0; mov ecx, 0x81; mov ebx, edi; mov edx, 1; call dword ptr gs:[0x10]; 
0x08099697: mov esi, dword ptr [esp + 0x1c]; jne 0x516c0; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x080a7ec8: mov esi, dword ptr [esp + 0x1c]; mov edi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x08059769: mov esi, dword ptr [esp + 0x24]; push esi; call dword ptr [ebx + 0x40]; 
0x080998ca: mov esi, dword ptr [esp + 0x44]; mov ebx, dword ptr [esp + 0x40]; lea edx, [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0804aa83: mov esi, dword ptr [esp]; ret; 
0x08077145: mov esi, eax; mov eax, 3; call dword ptr gs:[0x10]; 
0x080771e5: mov esi, eax; mov eax, 4; call dword ptr gs:[0x10]; 
0x08050baa: mov esi, edi; call dword ptr gs:[0x10]; 
0x08074ef3: mov esi, edx; mov eax, dword ptr [esp + 4]; ret; 
0x08074f83: mov esi, edx; mov eax, dword ptr [esp + 8]; cld; pop edi; ret; 
0x08074f59: mov esi, edx; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x08074fd3: mov esi, edx; ret; 
0x0807724e: mov esi, esp; mov ebx, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x2c]; mov eax, 0x8c; call dword ptr gs:[0x10]; 
0x08067cde: mov esp, 0x440ffff8; ret 0x66c3; 
0x08078d78: mov esp, 0x4589c789; aam 0x89; inc ebp; fmul dword ptr [ebp - 0x2df5f7d]; call dword ptr [eax - 0x18]; 
0x08058c9e: mov esp, 0x5250d029; push edi; call dword ptr [ebx + 0x38]; 
0x080afc8d: mov esp, 0x5b000000; pop esi; pop edi; pop ebp; ret; 
0x08070fc1: mov esp, 0x5ff801c0; ret; 
0x08070ff1: mov esp, 0x76c229c0; cmp dword ptr [ecx], eax; clc; pop edi; ret; 
0x08071004: mov esp, 0x76c229c0; lea eax, es:[edi + eax + 0x10]; pop edi; ret; 
0x08071024: mov esp, 0x76c229c0; push es; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x08071014: mov esp, 0x76c229c0; push ss; lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x08098bb0: mov esp, 0x83000000; in al, dx; or byte ptr [edi + 0x53], dl; call eax; 
0x0807e707: mov esp, 0x8929c083; ret 0x25; 
0x0807a275: mov esp, 0x8d00000b; cmp dword ptr [edi], 0x28; std; call dword ptr [eax - 0x18]; 
0x08087099: mov esp, 0x8d0cec83; adc dword ptr [eax + 0x3a], -3; call dword ptr [eax - 0x18]; 
0x080af2e3: mov esp, 0x950ff685; ret 0xc985; 
0x08070500: mov esp, 0xa8000000; inc eax; jne 0x285d0; lea eax, [edi + 7]; pop edi; ret; 
0x08089656: mov esp, 0xb8c8758b; lock add byte ptr [eax], al; add byte ptr [ebp + 0x1a3c9b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0807937d: mov esp, 0xec830006; adc al, 0x8d; adc dword ptr [eax], 0x21; std; call dword ptr [eax - 0x18]; 
0x0804a95a: mov esp, 0xfcf1748e; inc dword ptr [ecx]; idiv dword ptr [esi]; jmp edi; 
0x080953da: mov esp, 0xfe337093; inc dword ptr [ecx]; fistp qword ptr [esi]; jmp edi; 
0x080a56c6: mov esp, ecx; jmp edx; 
0x080b0539: mov esp, ecx; pop ecx; jmp ecx; 
0x08089526: mov gs, word ptr [0xb8fffffe]; lock add byte ptr [eax], al; add byte ptr [ebp + 0x1a3c9b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0807600e: mov ss, word ptr [eax - 3]; dec dword ptr [ebp - 0x2e5437d]; call dword ptr [eax - 0x73]; 
0x08075d0e: mov ss, word ptr [ebx - 3]; jmp dword ptr [esi - 0x70]; 
0x080a7ccc: mov ss, word ptr [edi + 0x5b000000]; pop esi; pop edi; pop ebp; ret; 
0x080a5438: mov word ptr [eax + ebp*8], fs; add byte ptr [eax], al; add byte ptr [ecx - 0x38f3dbbc], cl; ret; 
0x0804a271: mov word ptr [eax + ebx*4], fs; add byte ptr [eax], al; add byte ptr [ebp - 0x76fb4fbc], cl; add al, bh; ret 0x4d88; 
0x08077259: mov word ptr [eax], es; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x08099720: mov word ptr [eax], es; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0808d425: mov word ptr [eax], fs; add dword ptr [eax], eax; add byte ptr [ecx - 0x768fdbbc], cl; ret 0xc483; 
0x0804c1e1: mov word ptr [ebp - 0x38ec8b40], es; ret 0x6ef4; 
0x080a0eab: mov word ptr [ebp - 0xd7af040], es; idiv edi; jmp dword ptr [esi - 0x7b]; 
0x080a072f: mov word ptr [ebx + 0x3030846], cs; test edx, edx; jne 0x5873b; call eax; 
0x0807412f: mov word ptr [ebx - 0x2b4c0], cs; mov eax, dword ptr [ebx + eax*4 - 0x2b4c0]; sub eax, ecx; pop ebx; ret; 
0x080745d5: mov word ptr [ebx - 0x2b4c0], cs; sub eax, ecx; pop esi; pop edi; pop ebx; ret; 
0x080a14fc: mov word ptr [ebx - 0x7afefcfa], cs; sal byte ptr [ebp + 2], cl; call eax; 
0x08094f10: mov word ptr [ecx - 5], fs; dec dword ptr [ebp - 0x1dadb79]; call dword ptr [eax + 0x68]; 
0x08075941: mov word ptr [ecx], ds; std; call dword ptr [eax + 0x68]; 
0x0806f408: mov word ptr [edx + 4], ax; lea eax, [edx + 5]; pop edi; ret; 
0x0806f548: mov word ptr [edx + 4], ax; lea eax, [edx + 5]; ret; 
0x0806dba8: mov word ptr [edx + 4], ax; mov eax, edi; pop edi; ret; 
0x0806dcd8: mov word ptr [edx + 4], ax; mov eax, edx; ret; 
0x0806f45c: mov word ptr [edx + 8], ax; lea eax, [edx + 9]; pop edi; ret; 
0x0806f59c: mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x0806dbec: mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x0806dd2c: mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x08068025: mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x08068045: mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0806f3c3: mov word ptr [edx], ax; lea eax, [edx + 1]; pop edi; ret; 
0x0806f503: mov word ptr [edx], ax; lea eax, [edx + 1]; ret; 
0x0806f3d3: mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, [edx + 2]; pop edi; ret; 
0x0806f513: mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, [edx + 2]; ret; 
0x0806db83: mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edi; pop edi; ret; 
0x0806dca3: mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edx; ret; 
0x0806db73: mov word ptr [edx], ax; mov eax, edi; pop edi; ret; 
0x0806dc93: mov word ptr [edx], ax; mov eax, edx; ret; 
0x0807c31c: mov word ptr [esi], es; add bh, dh; fadd st(7); ret 0xffe0; 
0x0807a98c: movaps xmm5, xmm7; call dword ptr [eax - 0x18]; 
0x080682ae: movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x080682de: movdqa xmmword ptr [edx - 0x11], xmm0; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0806830e: movdqa xmmword ptr [edx - 0x12], xmm0; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0806836e: movdqa xmmword ptr [edx - 0x14], xmm0; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0806839e: movdqa xmmword ptr [edx - 0x15], xmm0; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x080683ce: movdqa xmmword ptr [edx - 0x16], xmm0; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0806843e: movdqa xmmword ptr [edx - 0x18], xmm0; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0806846e: movdqa xmmword ptr [edx - 0x19], xmm0; movq qword ptr [edx - 9], xmm0; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x080684ae: movdqa xmmword ptr [edx - 0x1a], xmm0; movq qword ptr [edx - 0xa], xmm0; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x080682a9: movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x080682a4: movdqa xmmword ptr [edx - 0x30], xmm0; movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0806f3a0: movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x0806f650: movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; ret; 
0x0806db50: movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x0806dde0: movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x0806f3a4: movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x0806f654: movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; ret; 
0x0806db54: movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x0806dde4: movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x080700ad: movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x0807020d: movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x0806fa8d: movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x0806fbed: movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x0806f49d: movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x0806f5fd: movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x0806dc2d: movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x0806dd8d: movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x080700cd: movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x0807022d: movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x0806faad: movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x0806fc0d: movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x0806f4bd: movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; pop edi; ret; 
0x0806f61d: movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x0806dc4d: movlpd qword ptr [edx + 6], xmm1; mov eax, edi; pop edi; ret; 
0x0806ddad: movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x080700ed: movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x0807024d: movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x0806facd: movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x0806fc2d: movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x0806f4dd: movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; pop edi; ret; 
0x0806f63d: movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x0806dc6d: movlpd qword ptr [edx + 7], xmm1; mov eax, edi; pop edi; ret; 
0x0806ddcd: movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x0806ff7c: movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x0807026d: movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x0806f97c: movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x0806fc4d: movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x0806f324: movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; pop edi; ret; 
0x0806f564: movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; ret; 
0x0806f437: movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; pop edi; ret; 
0x0806f577: movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x0806dbc7: movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x0806dd07: movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x0806f477: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; pop edi; ret; 
0x0806f5b7: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x0806dc07: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x0806dd47: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x0806f367: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; pop edi; ret; 
0x0806f5d7: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x0806db17: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x0806dd67: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x0806dad4: movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x0806dcf4: movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x0806f458: movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; pop edi; ret; 
0x0806f598: movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x0806dbe8: movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x0806dd28: movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x0806f499: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x0806f5f9: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x0806dc29: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x0806dd89: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x0806f4b9: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; pop edi; ret; 
0x0806f619: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x0806dc49: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edi; pop edi; ret; 
0x0806dda9: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x0806f4d9: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; pop edi; ret; 
0x0806f639: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x0806dc69: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edi; pop edi; ret; 
0x0806ddc9: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x080700a4: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x08070204: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x0806fa84: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x0806fbe4: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x080700c4: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x08070224: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x0806faa4: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x0806fc04: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x080700e4: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x08070244: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x0806fac4: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x0806fc24: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x0806ff73: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x08070264: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x0806f973: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x0806fc44: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x080700a8: movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x08070208: movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x0806fa88: movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x0806fbe8: movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x080700c8: movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x08070228: movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x0806faa8: movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x0806fc08: movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x080700e8: movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x08070248: movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x0806fac8: movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x0806fc28: movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x0806ff77: movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x08070268: movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x0806f977: movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x0806fc48: movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x0806f570: movlpd xmm0, qword ptr [ecx]; mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x0806dd00: movlpd xmm0, qword ptr [ecx]; mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x0806f5b0: movlpd xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x0806dd40: movlpd xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x0806f5d0: movlpd xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x0806dd60: movlpd xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x0806f320: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; pop edi; ret; 
0x0806f560: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; ret; 
0x0806dad0: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x0806dcf0: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x08070200: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x0806fbe0: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x08070220: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x0806fc00: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x08070240: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x0806fc20: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x08070260: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x0806fc40: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x0806f5f0: movlpd xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x0806dd80: movlpd xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x0806f610: movlpd xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x0806dda0: movlpd xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x0806f630: movlpd xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x0806ddc0: movlpd xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x0806f494: movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x0806f5f4: movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x0806dc24: movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x0806dd84: movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x0806f614: movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x0806dda4: movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x0806f634: movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x0806ddc4: movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x080700ae: movlps qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x0807020e: movlps qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x0806fa8e: movlps qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x0806fbee: movlps qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x0806f49e: movlps qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x0806f5fe: movlps qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x0806dc2e: movlps qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x0806dd8e: movlps qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x080700ce: movlps qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x0807022e: movlps qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x0806faae: movlps qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x0806fc0e: movlps qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x0806f4be: movlps qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; pop edi; ret; 
0x0806f61e: movlps qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x0806dc4e: movlps qword ptr [edx + 6], xmm1; mov eax, edi; pop edi; ret; 
0x0806ddae: movlps qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x080700ee: movlps qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x0807024e: movlps qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x0806face: movlps qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x0806fc2e: movlps qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x0806f4de: movlps qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; pop edi; ret; 
0x0806f63e: movlps qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x0806dc6e: movlps qword ptr [edx + 7], xmm1; mov eax, edi; pop edi; ret; 
0x0806ddce: movlps qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x0806ff7d: movlps qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x0807026e: movlps qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x0806f97d: movlps qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x0806fc4e: movlps qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x0806f325: movlps qword ptr [edx], xmm0; lea eax, [edx + 7]; pop edi; ret; 
0x0806f565: movlps qword ptr [edx], xmm0; lea eax, [edx + 7]; ret; 
0x0806f438: movlps qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; pop edi; ret; 
0x0806f578: movlps qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x0806dbc8: movlps qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x0806dd08: movlps qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x0806f478: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; pop edi; ret; 
0x0806f5b8: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x0806dc08: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x0806dd48: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x0806f368: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; pop edi; ret; 
0x0806f5d8: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x0806db18: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x0806dd68: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x0806dad5: movlps qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x0806dcf5: movlps qword ptr [edx], xmm0; mov eax, edx; ret; 
0x0806f459: movlps qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; pop edi; ret; 
0x0806f599: movlps qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x0806dbe9: movlps qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x0806dd29: movlps qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x0806f49a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x0806f5fa: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x0806dc2a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x0806dd8a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x0806f4ba: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; pop edi; ret; 
0x0806f61a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x0806dc4a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edi; pop edi; ret; 
0x0806ddaa: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x0806f4da: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; pop edi; ret; 
0x0806f63a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x0806dc6a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edi; pop edi; ret; 
0x0806ddca: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x080700a5: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x08070205: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x0806fa85: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x0806fbe5: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x080700c5: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x08070225: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x0806faa5: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x0806fc05: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x080700e5: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x08070245: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x0806fac5: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x0806fc25: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x0806ff74: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x08070265: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x0806f974: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x0806fc45: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x080700a9: movlps xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x08070209: movlps xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x0806fa89: movlps xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x0806fbe9: movlps xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x080700c9: movlps xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x08070229: movlps xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x0806faa9: movlps xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x0806fc09: movlps xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x080700e9: movlps xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x08070249: movlps xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x0806fac9: movlps xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x0806fc29: movlps xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x0806ff78: movlps xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x08070269: movlps xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x0806f978: movlps xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x0806fc49: movlps xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x0806f571: movlps xmm0, qword ptr [ecx]; mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x0806dd01: movlps xmm0, qword ptr [ecx]; mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x0806f5b1: movlps xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x0806dd41: movlps xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x0806f5d1: movlps xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x0806dd61: movlps xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x0806f321: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; pop edi; ret; 
0x0806f561: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; ret; 
0x0806dad1: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x0806dcf1: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x08070201: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x0806fbe1: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x08070221: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x0806fc01: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x08070241: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x0806fc21: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x08070261: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x0806fc41: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x0806f5f1: movlps xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x0806dd81: movlps xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x0806f611: movlps xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x0806dda1: movlps xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x0806f631: movlps xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x0806ddc1: movlps xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x0806f495: movlps xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x0806f5f5: movlps xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x0806dc25: movlps xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x0806dd85: movlps xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x0806f615: movlps xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x0806dda5: movlps xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x0806f635: movlps xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x0806ddc5: movlps xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x0806f3a1: movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x0806f651: movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; ret; 
0x0806db51: movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x0806dde1: movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x080682af: movq qword ptr [edx - 0x10], mm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x080682df: movq qword ptr [edx - 0x11], mm0; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0806830f: movq qword ptr [edx - 0x12], mm0; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0806836f: movq qword ptr [edx - 0x14], mm0; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0806839f: movq qword ptr [edx - 0x15], mm0; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x080683cf: movq qword ptr [edx - 0x16], mm0; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0806843f: movq qword ptr [edx - 0x18], mm0; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0806846f: movq qword ptr [edx - 0x19], mm0; movq qword ptr [edx - 9], xmm0; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x080684af: movq qword ptr [edx - 0x1a], mm0; movq qword ptr [edx - 0xa], xmm0; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x080682aa: movq qword ptr [edx - 0x20], mm0; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x080682a5: movq qword ptr [edx - 0x30], mm0; movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x080684b3: movq qword ptr [edx - 0xa], xmm0; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x08068443: movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x08068473: movq qword ptr [edx - 9], xmm0; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0806f3a5: movq qword ptr [edx], mm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x0806f655: movq qword ptr [edx], mm0; lea eax, [edx + 0xf]; ret; 
0x0806db55: movq qword ptr [edx], mm0; mov eax, edi; pop edi; ret; 
0x0806dde5: movq qword ptr [edx], mm0; mov eax, edx; ret; 
0x0804d084: movsb byte ptr es:[edi], byte ptr [esi]; adc eax, 0x81b90000; add byte ptr [eax], al; add byte ptr [edx + 1], bh; call dword ptr gs:[0x10]; 
0x08081dc3: movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebx - 0x763076fa], cl; ret 0xe083; 
0x08080793: movsb byte ptr es:[edi], byte ptr [esi]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xor esi, 0x33; std; call dword ptr [eax - 0x18]; 
0x0807f726: movsb byte ptr es:[edi], byte ptr [esi]; add dword ptr [eax], eax; add byte ptr [ebp - 0x2cc1d7d], cl; call dword ptr [eax - 0x73]; 
0x080a0367: movsb byte ptr es:[edi], byte ptr [esi]; add esp, 0x20; mov dword ptr [ebp - 0x5c], edx; call eax; 
0x080a036d: movsb byte ptr es:[edi], byte ptr [esi]; call eax; 
0x0804b0b7: movsb byte ptr es:[edi], byte ptr [esi]; cld; call dword ptr [eax - 1]; 
0x08061e5a: movsb byte ptr es:[edi], byte ptr [esi]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x080581c5: movsb byte ptr es:[edi], byte ptr [esi]; pop ds; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0807dbf7: movsb byte ptr es:[edi], byte ptr [esi]; pop ds; add byte ptr [eax], al; mov ecx, 0x81; mov edx, edi; call dword ptr gs:[0x10]; 
0x08074eef: movsb byte ptr es:[edi], byte ptr [esi]; pop eax; mov edi, eax; mov esi, edx; mov eax, dword ptr [esp + 4]; ret; 
0x080862f2: movsd dword ptr es:[edi], dword ptr [esi]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; sbb dword ptr [ecx + edi], -3; call dword ptr [eax - 0x18]; 
0x0805caef: movsd dword ptr es:[edi], dword ptr [esi]; add dword ptr [eax], eax; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x080a5b40: movsd dword ptr es:[edi], dword ptr [esi]; fmul dword ptr [edx + 0x74]; sub dl, byte ptr [eax - 0xa]; ret 0x7501; 
0x08074f82: movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; mov eax, dword ptr [esp + 8]; cld; pop edi; ret; 
0x08074f58: movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x08076f67: movsd dword ptr es:[edi], dword ptr [esi]; push ebx; add byte ptr [eax], al; ret; 
0x08074f56: movsd dword ptr es:[edi], dword ptr [esi]; rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x08074fcf: movsd dword ptr es:[edi], dword ptr [esi]; rep movsd dword ptr es:[edi], dword ptr [esi]; xchg eax, edi; mov esi, edx; ret; 
0x080a1737: movsd dword ptr es:[edi], dword ptr [esi]; ret 0xe0d3; 
0x080a5b5e: movsd dword ptr es:[edi], dword ptr [esi]; ret; 
0x08074fd1: movsd dword ptr es:[edi], dword ptr [esi]; xchg eax, edi; mov esi, edx; ret; 
0x08074f55: movsw word ptr es:[edi], word ptr [esi]; rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x08074fce: movsw word ptr es:[edi], word ptr [esi]; rep movsd dword ptr es:[edi], dword ptr [esi]; xchg eax, edi; mov esi, edx; ret; 
0x080550ac: movsx eax, cl; mov ecx, dword ptr [ebp - 0x4cc]; movzx eax, byte ptr [eax + edx - 0x20]; mov eax, dword ptr [ecx + eax*4]; jmp eax; 
0x08055b64: movsx eax, cl; movzx eax, byte ptr [eax + edx - 0x20]; mov eax, dword ptr [edi + eax*4 - 0x17a0]; jmp eax; 
0x08055ac4: movsx eax, cl; movzx eax, byte ptr [eax + edx - 0x20]; mov eax, dword ptr [edi + eax*4 - 0x18a0]; jmp eax; 
0x080aba69: movzx eax, al; neg eax; ret; 
0x0805cf77: movzx eax, al; pop ebx; neg eax; ret; 
0x080a76aa: movzx eax, al; pop ebx; pop esi; ret; 
0x080997d5: movzx eax, al; pop ebx; ret; 
0x08092b06: movzx eax, byte ptr [eax + ecx - 0x20]; mov eax, dword ptr [ebx + eax*4]; jmp eax; 
0x080550b5: movzx eax, byte ptr [eax + edx - 0x20]; mov eax, dword ptr [ecx + eax*4]; jmp eax; 
0x08055b67: movzx eax, byte ptr [eax + edx - 0x20]; mov eax, dword ptr [edi + eax*4 - 0x17a0]; jmp eax; 
0x08054d75: movzx eax, byte ptr [eax + edx - 0x20]; mov eax, dword ptr [edi + eax*4 - 0x1820]; jmp eax; 
0x08055ac7: movzx eax, byte ptr [eax + edx - 0x20]; mov eax, dword ptr [edi + eax*4 - 0x18a0]; jmp eax; 
0x0805f006: movzx eax, byte ptr [eax - 1]; and dword ptr [ebx], 0xffffffef; add esp, 4; pop ebx; pop esi; ret; 
0x0806b9b7: movzx eax, byte ptr [eax - 1]; cmp al, byte ptr [edx - 1]; mov eax, 0; jne 0x239f0; pop ebx; ret; 
0x0806bd6d: movzx eax, byte ptr [eax - 1]; cmp al, byte ptr [edx - 1]; mov eax, 0; jne 0x24586; pop ebx; ret; 
0x0805e7fc: movzx eax, byte ptr [eax]; add esp, 4; pop ebx; pop esi; ret; 
0x0806bac2: movzx eax, byte ptr [eax]; movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x0805ca5e: movzx eax, byte ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x080938f2: movzx eax, byte ptr [ebx + ecx - 0x20]; mov dword ptr [ebp - 0x494], 0; mov eax, dword ptr [edi + eax*4 - 0x12c0]; jmp eax; 
0x080939d2: movzx eax, byte ptr [ebx + ecx - 0x20]; mov dword ptr [ebp - 0x494], 1; mov eax, dword ptr [edi + eax*4 - 0x12c0]; jmp eax; 
0x08092a62: movzx eax, byte ptr [ebx + ecx - 0x20]; mov dword ptr [ebp - 0x4a4], 0x20; mov ebx, dword ptr [ebp - 0x4c0]; mov eax, dword ptr [ebx + eax*4]; jmp eax; 
0x08093982: movzx eax, byte ptr [ebx + ecx - 0x20]; mov dword ptr [ebp - 0x4a8], 0; mov eax, dword ptr [edi + eax*4 - 0x12c0]; jmp eax; 
0x08092a1a: movzx eax, byte ptr [ebx + ecx - 0x20]; mov ebx, dword ptr [ebp - 0x4c0]; mov eax, dword ptr [ebx + eax*4]; jmp eax; 
0x0806a185: movzx eax, byte ptr [edi + ecx]; movzx ecx, byte ptr [esi + ecx]; sub eax, ecx; pop esi; pop edi; ret; 
0x08074164: movzx eax, byte ptr [edx + 1]; mov ecx, dword ptr [ebx + ecx*4 - 0x2b4c0]; mov eax, dword ptr [ebx + eax*4 - 0x2b4c0]; sub eax, ecx; pop ebx; ret; 
0x08069f54: movzx eax, byte ptr [edx + 1]; sub eax, ecx; ret; 
0x08074184: movzx eax, byte ptr [edx + 2]; mov ecx, dword ptr [ebx + ecx*4 - 0x2b4c0]; mov eax, dword ptr [ebx + eax*4 - 0x2b4c0]; sub eax, ecx; pop ebx; ret; 
0x08069f64: movzx eax, byte ptr [edx + 2]; sub eax, ecx; ret; 
0x080741a4: movzx eax, byte ptr [edx + 3]; mov ecx, dword ptr [ebx + ecx*4 - 0x2b4c0]; mov eax, dword ptr [ebx + eax*4 - 0x2b4c0]; sub eax, ecx; pop ebx; ret; 
0x08069f74: movzx eax, byte ptr [edx + 3]; sub eax, ecx; ret; 
0x08069f84: movzx eax, byte ptr [edx + 4]; sub eax, ecx; ret; 
0x080741e4: movzx eax, byte ptr [edx + 5]; mov ecx, dword ptr [ebx + ecx*4 - 0x2b4c0]; mov eax, dword ptr [ebx + eax*4 - 0x2b4c0]; sub eax, ecx; pop ebx; ret; 
0x08069f94: movzx eax, byte ptr [edx + 5]; sub eax, ecx; ret; 
0x08069fa4: movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x08069f34: movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x08093652: movzx eax, byte ptr [edx + ecx - 0x20]; mov dword ptr [ebp - 0x494], 0; mov eax, dword ptr [edi + eax*4 - 0x12c0]; jmp eax; 
0x080938a2: movzx eax, byte ptr [edx + ecx - 0x20]; mov dword ptr [ebp - 0x494], 1; mov eax, dword ptr [edi + eax*4 - 0x12c0]; jmp eax; 
0x08092db2: movzx eax, byte ptr [edx + ecx - 0x20]; mov eax, dword ptr [edi + eax*4 - 0x1240]; jmp eax; 
0x08093942: movzx eax, byte ptr [edx + ecx - 0x20]; mov eax, dword ptr [edi + eax*4 - 0x1340]; jmp eax; 
0x08092bed: movzx eax, byte ptr [edx + ecx - 0x20]; mov ebx, dword ptr [ebp - 0x4c0]; mov dword ptr [ebp - 0x4a0], 1; mov eax, dword ptr [ebx + eax*4]; jmp eax; 
0x08092aa8: movzx eax, byte ptr [edx + ecx - 0x20]; mov ebx, dword ptr [ebp - 0x4c0]; mov dword ptr [ebp - 0x4ac], 1; mov eax, dword ptr [ebx + eax*4]; jmp eax; 
0x08092b98: movzx eax, byte ptr [edx + ecx - 0x20]; mov ebx, dword ptr [ebp - 0x4c0]; mov dword ptr [ebp - 0x4bc], 1; mov eax, dword ptr [ebx + eax*4]; jmp eax; 
0x08074143: movzx eax, byte ptr [edx]; mov ecx, dword ptr [ebx + ecx*4 - 0x2b4c0]; mov eax, dword ptr [ebx + eax*4 - 0x2b4c0]; sub eax, ecx; pop ebx; ret; 
0x0805ffa2: movzx eax, byte ptr [edx]; pop ebx; pop esi; ret; 
0x08069f43: movzx eax, byte ptr [edx]; sub eax, ecx; ret; 
0x0807ec0a: movzx eax, dl; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x08069f50: movzx ecx, byte ptr [eax + 1]; movzx eax, byte ptr [edx + 1]; sub eax, ecx; ret; 
0x08069f60: movzx ecx, byte ptr [eax + 2]; movzx eax, byte ptr [edx + 2]; sub eax, ecx; ret; 
0x08069f70: movzx ecx, byte ptr [eax + 3]; movzx eax, byte ptr [edx + 3]; sub eax, ecx; ret; 
0x08069f80: movzx ecx, byte ptr [eax + 4]; movzx eax, byte ptr [edx + 4]; sub eax, ecx; ret; 
0x08069f90: movzx ecx, byte ptr [eax + 5]; movzx eax, byte ptr [edx + 5]; sub eax, ecx; ret; 
0x08069fa0: movzx ecx, byte ptr [eax + 6]; movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x08069f30: movzx ecx, byte ptr [eax + 7]; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x0806b85a: movzx ecx, byte ptr [eax - 1]; cmp cl, byte ptr [edx - 1]; mov eax, 0; jne 0x239f0; pop ebx; ret; 
0x0806bc24: movzx ecx, byte ptr [eax - 1]; cmp cl, byte ptr [edx - 1]; mov eax, 0; jne 0x24586; pop ebx; ret; 
0x08074bb6: movzx ecx, byte ptr [eax]; cmp cl, byte ptr [edx]; jne 0x2cbc1; xor eax, eax; pop ebx; ret; 
0x08069f40: movzx ecx, byte ptr [eax]; movzx eax, byte ptr [edx]; sub eax, ecx; ret; 
0x0806a189: movzx ecx, byte ptr [esi + ecx]; sub eax, ecx; pop esi; pop edi; ret; 
0x0806a329: movzx edi, bl; pop ebx; pop esi; sub eax, edi; pop edi; ret; 
0x0804fe25: movzx edx, byte ptr [ecx]; test dl, dl; jne 0x7e09; ret; 
0x0806bac5: movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x0806b4a4: movzx edx, byte ptr [esi - 0x10]; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x0806b504: movzx edx, byte ptr [esi - 0xa]; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x0806b4d4: movzx edx, byte ptr [esi - 0xd]; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x0806b4c4: movzx edx, byte ptr [esi - 0xe]; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x0806b495: movzx edx, byte ptr [esi - 9]; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x080987c6: movzx esi, al; push esi; push dword ptr [ebp]; call edi; 
0x08088885: mul byte ptr [ecx]; cld; inc dword ptr [0x5c777]; mov eax, 0xfffffff0; add eax, dword ptr gs:[0]; ret; 
0x080684b7: mul byte ptr [esi - 0x77]; inc edx; dec byte ptr [ebx + 0x5b082444]; ret; 
0x08074287: neg eax; add esp, 4; pop ebx; ret; 
0x080a79f2: neg eax; mov ecx, dword ptr [esp + 0xc]; xor ecx, dword ptr gs:[0x14]; jne 0x5fa05; add esp, 0x1c; ret; 
0x0807c31f: neg eax; mov edx, 0xffffffe0; mov dword ptr gs:[edx], eax; mov eax, 0xffffffff; ret; 
0x080a6bdb: neg eax; pop ebx; pop esi; pop edi; ret; 
0x08074607: neg eax; pop edi; pop ebx; ret; 
0x0806015e: neg eax; pop esi; pop edi; pop ebp; ret; 
0x0805cf7b: neg eax; ret; 
0x080609af: nop; add byte ptr [eax + eax], 0; ret; 
0x080afab3: nop; add byte ptr [eax], al; add bh, dh; ret 0; 
0x080877b5: nop; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; add dword ptr [ecx], 0x3b; std; call dword ptr [eax - 0x18]; 
0x08088cdf: nop; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x080ad1b2: nop; add byte ptr [eax], al; add byte ptr [ecx - 0x74e3db84], cl; push eax; or byte ptr [ecx], al; ret 0xd789; 
0x08071c2f: nop; add eax, 1; pop edi; ret; 
0x08098a6f: nop; add eax, 1; ret; 
0x08098a7f: nop; add eax, 3; ret; 
0x080ab7ef: nop; add eax, dword ptr [esp]; ret; 
0x0805ef1f: nop; add esp, 4; pop ebx; pop esi; ret; 
0x08089957: nop; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0808771b: nop; and al, 0x83; ret 0x3901; 
0x080614d5: nop; and al, 0xe; std; call dword ptr [edx - 0x73]; 
0x0809815f: nop; and eax, 0x1fff; jne 0x4fe80; xor eax, eax; pop edi; ret; 
0x0809813f: nop; and eax, 0x3ff; jne 0x4fe80; xor eax, eax; pop edi; ret; 
0x0809816f: nop; and eax, 0x3fff; jne 0x4fe80; xor eax, eax; pop edi; ret; 
0x0809814f: nop; and eax, 0x7ff; jne 0x4fe80; xor eax, eax; pop edi; ret; 
0x0809817f: nop; and eax, 0x7fff; jne 0x4fe80; xor eax, eax; pop edi; ret; 
0x0807154f: nop; bsf eax, eax; add eax, edx; ret; 
0x08070fcf: nop; bsf eax, eax; lea eax, [eax + edi + 0x10]; pop edi; ret; 
0x0807156f: nop; bsf eax, eax; lea eax, [eax + edx + 0x20]; ret; 
0x0807153f: nop; bsf eax, eax; lea eax, [eax + edx - 0x10]; ret; 
0x0809989f: nop; call 0x34310; add esp, 4; pop ebx; pop esi; ret; 
0x080a96df: nop; call dword ptr [ebx]; 
0x0809b422: nop; cmp bh, dh; call dword ptr [eax - 0x18]; 
0x08067231: nop; cmp edi, eax; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x08067d5d: nop; das; clc; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x08085a7f: nop; endbr32; call 0x2a7f; add eax, 0x5f577; mov eax, dword ptr [eax + 0x1968]; ret; 
0x0807aedf: nop; endbr32; call 0x2a7f; add eax, 0x6a117; lea eax, [eax + 0xa60]; ret; 
0x080a7e8f: nop; endbr32; mov eax, 0x14; call dword ptr gs:[0x10]; 
0x080a7e8f: nop; endbr32; mov eax, 0x14; call dword ptr gs:[0x10]; ret; 
0x08076f4f: nop; endbr32; mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x080995cf: nop; endbr32; mov eax, 0xc7; call dword ptr gs:[0x10]; 
0x080995cf: nop; endbr32; mov eax, 0xc7; call dword ptr gs:[0x10]; ret; 
0x0809960f: nop; endbr32; mov eax, 0xc8; call dword ptr gs:[0x10]; 
0x0809960f: nop; endbr32; mov eax, 0xc8; call dword ptr gs:[0x10]; ret; 
0x080995ef: nop; endbr32; mov eax, 0xc9; call dword ptr gs:[0x10]; 
0x080995ef: nop; endbr32; mov eax, 0xc9; call dword ptr gs:[0x10]; ret; 
0x0809962f: nop; endbr32; mov eax, 0xca; call dword ptr gs:[0x10]; 
0x0809962f: nop; endbr32; mov eax, 0xca; call dword ptr gs:[0x10]; ret; 
0x0805e79f: nop; endbr32; mov eax, 0xffffffff; ret; 
0x080a4caf: nop; endbr32; mov eax, dword ptr [eax + 4]; ret; 
0x080a4cbf: nop; endbr32; mov eax, dword ptr [eax + 4]; sub eax, dword ptr gs:[0]; ret; 
0x0805fe1f: nop; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x080b02df: nop; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x58]; ret; 
0x080b026f: nop; endbr32; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x4c], edx; ret; 
0x0807925f: nop; endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x74; call dword ptr gs:[0x10]; 
0x0809959f: nop; endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x08077a7f: nop; endbr32; push ebx; mov eax, 6; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x08049c6f: nop; endbr32; ret; 
0x0805fe0f: nop; endbr32; xor eax, eax; ret; 
0x0808883d: nop; inc eax; ret; 
0x08079d3f: nop; int 0x80; 
0x08079d3f: nop; int 0x80; ret; 
0x0806babf: nop; jb 0x23ad0; movzx eax, byte ptr [eax]; movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x0807cd19: nop; jnp 0x34d15; call dword ptr [eax - 0x77]; 
0x0807ceff: nop; jnp 0x34efb; call dword ptr [eax - 0x77]; 
0x080a380c: nop; js 0x5b809; dec dword ptr [ebp - 0x1b43f7d]; call dword ptr [eax - 0x73]; 
0x0807057f: nop; lea eax, [edi + 1]; pop edi; ret; 
0x0807056f: nop; lea eax, [edi]; pop edi; ret; 
0x0807131f: nop; lea eax, [edx + 0xa]; ret; 
0x0807132f: nop; lea eax, [edx + 0xc]; ret; 
0x0807133f: nop; lea eax, [edx + 0xd]; ret; 
0x0807134f: nop; lea eax, [edx + 0xe]; ret; 
0x080712bf: nop; lea eax, [edx + 2]; ret; 
0x080712cf: nop; lea eax, [edx + 4]; ret; 
0x080712df: nop; lea eax, [edx + 5]; ret; 
0x080712ef: nop; lea eax, [edx + 6]; ret; 
0x080712ff: nop; lea eax, [edx + 8]; ret; 
0x0807130f: nop; lea eax, [edx + 9]; ret; 
0x0809865f: nop; lea ebx, [eax + 0xc]; mov eax, ebx; pop ebx; ret; 
0x08061f27: nop; mov al, 0xf9; idiv edi; mov dword ptr [eax + 0x4c0], edx; ret; 
0x0806f4ef: nop; mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, [edx]; ret; 
0x080700ff: nop; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edx; ret; 
0x0806f3bf: nop; mov ax, word ptr [ecx]; mov word ptr [edx], ax; lea eax, [edx + 1]; pop edi; ret; 
0x0806f4ff: nop; mov ax, word ptr [ecx]; mov word ptr [edx], ax; lea eax, [edx + 1]; ret; 
0x0806db6f: nop; mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edi; pop edi; ret; 
0x0806dc8f: nop; mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edx; ret; 
0x08098a5f: nop; mov ch, dh; and ch, 0xf; je 0x50a80; add eax, 2; ret; 
0x080796ff: nop; mov dword ptr [eax + 0x18], edx; ret; 
0x0809872f: nop; mov dword ptr [eax + 8], edx; mov eax, esi; pop ebx; pop esi; ret; 
0x08088a9f: nop; mov eax, 0xad; int 0x80; 
0x08088c4f: nop; mov eax, 0xffffffe0; mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; ret; 
0x0805a9df: nop; mov eax, 0xffffffff; ret; 
0x08069fef: nop; mov eax, 1; ja 0x21ff9; neg eax; ret; 
0x0806f2ef: nop; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; lea eax, [edx + 3]; pop edi; ret; 
0x0806da9f: nop; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edi; pop edi; ret; 
0x0806dcaf: nop; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edx; ret; 
0x0807129f: nop; mov eax, edx; ret; 
0x08049c7f: nop; mov ebx, dword ptr [esp]; ret; 
0x08098b57: nop; mov ecx, eax; mov eax, ecx; ret; 
0x0806f39f: nop; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x0806db4f: nop; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x0806f31f: nop; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; pop edi; ret; 
0x0806f55f: nop; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; ret; 
0x0806dacf: nop; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x08069f5f: nop; movzx ecx, byte ptr [eax + 2]; movzx eax, byte ptr [edx + 2]; sub eax, ecx; ret; 
0x08069f6f: nop; movzx ecx, byte ptr [eax + 3]; movzx eax, byte ptr [edx + 3]; sub eax, ecx; ret; 
0x08069f7f: nop; movzx ecx, byte ptr [eax + 4]; movzx eax, byte ptr [edx + 4]; sub eax, ecx; ret; 
0x08069f8f: nop; movzx ecx, byte ptr [eax + 5]; movzx eax, byte ptr [edx + 5]; sub eax, ecx; ret; 
0x08069f9f: nop; movzx ecx, byte ptr [eax + 6]; movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x08069f3f: nop; movzx ecx, byte ptr [eax]; movzx eax, byte ptr [edx]; sub eax, ecx; ret; 
0x080ab7ed: nop; nop; add eax, dword ptr [esp]; ret; 
0x080a7e8d: nop; nop; endbr32; mov eax, 0x14; call dword ptr gs:[0x10]; 
0x080a7e8d: nop; nop; endbr32; mov eax, 0x14; call dword ptr gs:[0x10]; ret; 
0x08076f4e: nop; nop; endbr32; mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x080995cd: nop; nop; endbr32; mov eax, 0xc7; call dword ptr gs:[0x10]; 
0x080995cd: nop; nop; endbr32; mov eax, 0xc7; call dword ptr gs:[0x10]; ret; 
0x0809960e: nop; nop; endbr32; mov eax, 0xc8; call dword ptr gs:[0x10]; 
0x0809960e: nop; nop; endbr32; mov eax, 0xc8; call dword ptr gs:[0x10]; ret; 
0x080995ee: nop; nop; endbr32; mov eax, 0xc9; call dword ptr gs:[0x10]; 
0x080995ee: nop; nop; endbr32; mov eax, 0xc9; call dword ptr gs:[0x10]; ret; 
0x0809962e: nop; nop; endbr32; mov eax, 0xca; call dword ptr gs:[0x10]; 
0x0809962e: nop; nop; endbr32; mov eax, 0xca; call dword ptr gs:[0x10]; ret; 
0x080a4cae: nop; nop; endbr32; mov eax, dword ptr [eax + 4]; ret; 
0x08049c6e: nop; nop; endbr32; ret; 
0x08088a9d: nop; nop; mov eax, 0xad; int 0x80; 
0x08049c7e: nop; nop; mov ebx, dword ptr [esp]; ret; 
0x080a7e8b: nop; nop; nop; endbr32; mov eax, 0x14; call dword ptr gs:[0x10]; 
0x08076f4c: nop; nop; nop; endbr32; mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x080995cb: nop; nop; nop; endbr32; mov eax, 0xc7; call dword ptr gs:[0x10]; 
0x0809960c: nop; nop; nop; endbr32; mov eax, 0xc8; call dword ptr gs:[0x10]; 
0x080995ec: nop; nop; nop; endbr32; mov eax, 0xc9; call dword ptr gs:[0x10]; 
0x0809962c: nop; nop; nop; endbr32; mov eax, 0xca; call dword ptr gs:[0x10]; 
0x080a4cac: nop; nop; nop; endbr32; mov eax, dword ptr [eax + 4]; ret; 
0x08049c6c: nop; nop; nop; endbr32; ret; 
0x08088a9b: nop; nop; nop; mov eax, 0xad; int 0x80; 
0x08049c7c: nop; nop; nop; mov ebx, dword ptr [esp]; ret; 
0x0807960a: nop; nop; nop; nop; endbr32; ret; 
0x08088a99: nop; nop; nop; nop; mov eax, 0xad; int 0x80; 
0x08049c7a: nop; nop; nop; nop; mov ebx, dword ptr [esp]; ret; 
0x0805ecbf: nop; or dword ptr [eax + 0x3c], 0x80; mov eax, dword ptr [eax + 0x34]; test eax, eax; jne 0x16cc0; ret; 
0x08088aa7: nop; pop eax; mov eax, 0x77; int 0x80; 
0x0807e24f: nop; pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x0809836f: nop; pop ebx; pop esi; pop edi; xor eax, eax; ret; 
0x08097caf: nop; pop ebx; pop esi; xor eax, eax; pop edi; ret; 
0x080b1e5f: nop; pop ebx; ret; 
0x08062f73: nop; push cs; std; dec dword ptr [ebp - 0x301e669]; call dword ptr [eax - 0x73]; 
0x08049cbf: nop; ret; 
0x08061f2d: nop; rol byte ptr [eax + eax], 0; ret; 
0x080a7334: nop; sbb al, byte ptr [eax]; add byte ptr [eax - 0x18], dl; ret 0xf58c; 
0x0807b1d8: nop; sub al, 0xfd; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x08071a3f: nop; sub edi, 3; jb 0x29ae0; lea eax, [eax + 2]; pop edi; ret; 
0x08071a4f: nop; sub edi, 5; jb 0x29ae0; lea eax, [eax + 4]; pop edi; ret; 
0x08071a5f: nop; sub edi, 6; jb 0x29ae0; lea eax, [eax + 5]; pop edi; ret; 
0x08070c1f: nop; sub edx, 2; jb 0x28cd0; lea eax, [edi + 1]; pop edi; ret; 
0x08070c2f: nop; sub edx, 3; jb 0x28cd0; lea eax, [edi + 2]; pop edi; ret; 
0x08070c3f: nop; sub edx, 5; jb 0x28cd0; lea eax, [edi + 4]; pop edi; ret; 
0x08070c4f: nop; sub edx, 6; jb 0x28cd0; lea eax, [edi + 5]; pop edi; ret; 
0x0805fb47: nop; sub edx, dword ptr [eax + 8]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x08088e2f: nop; sub esp, 4; push ebp; push esi; push dword ptr [esp + 0x10]; call edi; 
0x080b07df: nop; sub esp, 8; push dword ptr [ebp + 0xc]; push ebx; call dword ptr [ebp + 8]; 
0x0806638f: nop; sub esp, 8; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x10]; call eax; 
0x080a570f: nop; xor eax, eax; pop ebx; pop esi; ret; 
0x080745ef: nop; xor eax, eax; pop edi; pop ebx; ret; 
0x0807075f: nop; xor eax, eax; pop edi; ret; 
0x0806bacf: nop; xor eax, eax; ret; 
0x0809726d: nop; xor ebx, edi; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x08070bff: or ah, 0; add byte ptr [eax], al; lea eax, [edi + 0xf]; pop edi; ret; 
0x08077be3: or ah, 0x80; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov edx, eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x08093655: or ah, al; mov dword ptr [ebp - 0x494], 0; mov eax, dword ptr [edi + eax*4 - 0x12c0]; jmp eax; 
0x080938a5: or ah, al; mov dword ptr [ebp - 0x494], 1; mov eax, dword ptr [edi + eax*4 - 0x12c0]; jmp eax; 
0x08092db5: or ah, al; mov eax, dword ptr [edi + eax*4 - 0x1240]; jmp eax; 
0x08093945: or ah, al; mov eax, dword ptr [edi + eax*4 - 0x1340]; jmp eax; 
0x08092bf0: or ah, al; mov ebx, dword ptr [ebp - 0x4c0]; mov dword ptr [ebp - 0x4a0], 1; mov eax, dword ptr [ebx + eax*4]; jmp eax; 
0x08092aab: or ah, al; mov ebx, dword ptr [ebp - 0x4c0]; mov dword ptr [ebp - 0x4ac], 1; mov eax, dword ptr [ebx + eax*4]; jmp eax; 
0x08092b9b: or ah, al; mov ebx, dword ptr [ebp - 0x4c0]; mov dword ptr [ebp - 0x4bc], 1; mov eax, dword ptr [ebx + eax*4]; jmp eax; 
0x08074f88: or ah, bh; pop edi; ret; 
0x080775e0: or al, 0; add byte ptr [eax], al; add bl, ch; ret 0xb48d; 
0x08071be7: or al, 0; add byte ptr [eax], al; pop edi; ret; 
0x08077107: or al, 0; add byte ptr [eax], al; test eax, eax; jne 0x2f130; mov eax, 3; call dword ptr gs:[0x10]; 
0x080771a7: or al, 0; add byte ptr [eax], al; test eax, eax; jne 0x2f1d0; mov eax, 4; call dword ptr gs:[0x10]; 
0x080a3e6d: or al, 0x24; mov dword ptr [esp], eax; mov eax, dword ptr [esp + 4]; ret 0x14; 
0x080a3d96: or al, 0x24; mov dword ptr [esp], eax; mov eax, dword ptr [esp + 4]; ret 0xc; 
0x0805ff5e: or al, 0x24; ret; 
0x08058632: or al, 0x31; call dword ptr [esi - 0x18]; 
0x0805ce52: or al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x080969f4: or al, 0x31; ror byte ptr [ecx + 0x4c4830b], 0x5b; pop esi; ret; 
0x0805112c: or al, 0x31; ror byte ptr [ecx - 0x72eb1436], 0x74; add byte ptr es:[eax + 0x3901c083], dl; ret; 
0x0806c555: or al, 0x39; fnstcw word ptr [eax]; jne 0x24570; pop ebx; ret; 
0x0807909e: or al, 0x39; ret 0xb574; 
0x080511a5: or al, 0x39; ret; 
0x080b326b: or al, 0x42; std; call dword ptr [eax - 0x73]; 
0x080b2dbb: or al, 0x50; call 0x1da60; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x080b31c9: or al, 0x50; call edx; 
0x080a24bf: or al, 0x50; mov ecx, dword ptr [esp + 0x24]; mov eax, dword ptr [esp + 0x20]; call 0x59e80; add esp, 0x1c; ret; 
0x080b23bf: or al, 0x52; call 0x68290; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x080b23fa: or al, 0x52; call 0x682e0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x080b23a6: or al, 0x52; call 0x682f0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x080b07e5: or al, 0x53; call dword ptr [ebp + 8]; 
0x0805e7e6: or al, 0x53; call dword ptr [esi + 0x10]; 
0x08088f88: or al, 0x53; push dword ptr [esp + 0xc]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x08098c09: or al, 0x55; push ebx; call eax; 
0x0804ff56: or al, 0x55; push esi; mov eax, dword ptr [esp + 0x1c]; call eax; 
0x080966cb: or al, 0x56; call 0x15f80; add esp, 0x14; pop ebx; pop esi; ret; 
0x08087bbc: or al, 0x56; call 0x1da60; add esp, 0x14; pop ebx; pop esi; ret; 
0x0805ead0: or al, 0x56; call dword ptr [ebp + 0x30]; 
0x080582ba: or al, 0x56; call dword ptr [ebx + 0x30]; 
0x0805e73b: or al, 0x56; call dword ptr [edi + 0x34]; 
0x0805cff0: or al, 0x56; call dword ptr [edi + 0x44]; 
0x08087b81: or al, 0x56; call eax; 
0x080950a6: or al, 0x56; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x1c]; 
0x0807cc55: or al, 0x57; call 0x32fa0; mov dword ptr [esp], esi; call edi; 
0x080b2c4a: or al, 0x57; call 0x32fa0; mov edx, dword ptr [esp + 0x30]; add ebp, dword ptr [edx + 8]; mov dword ptr [esp], ebp; call edi; 
0x0805e99f: or al, 0x5b; pop esi; pop edi; pop ebp; jmp eax; 
0x08050a7c: or al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x08077c53: or al, 0x5b; ret; 
0x0805e42e: or al, 0x5e; pop edi; jmp eax; 
0x0806f4a4: or al, 0x5f; ret; 
0x08076fe1: or al, 0x65; call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x2eff8; pop ebx; ret; 
0x08077011: or al, 0x65; call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x2f028; pop ebx; ret; 
0x08099661: or al, 0x65; call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x51678; pop ebx; ret; 
0x080a5502: or al, 0x65; mov dword ptr [ebx], 0; push dword ptr [esp + 0x28]; mov eax, dword ptr [esp + 0x28]; call eax; 
0x08088987: or al, 0x65; xor eax, dword ptr [0x14]; jne 0x40996; add esp, 0x18; pop ebx; ret; 
0x08077aeb: or al, 0x65; xor ebx, dword ptr [0x14]; jne 0x2fb37; add esp, 0x18; pop ebx; ret; 
0x0807613a: or al, 0x65; xor ecx, dword ptr [0x14]; jne 0x2e16c; add esp, 0x18; pop ebx; ret; 
0x080a79f7: or al, 0x65; xor ecx, dword ptr [0x14]; jne 0x5fa05; add esp, 0x1c; ret; 
0x08076fa9: or al, 0x65; xor edx, dword ptr [0x14]; jne 0x2efc7; add esp, 0x18; pop ebx; ret; 
0x08077e0d: or al, 0x65; xor edx, dword ptr [0x14]; jne 0x2fe1c; add esp, 0x18; pop ebx; ret; 
0x0804b0b2: or al, 0x6a; add eax, 0xf2a4838d; cld; call dword ptr [eax - 1]; 
0x0805cef6: or al, 0x6a; add ebp, dword ptr [edx + 1]; push 0; push 0; push ebx; call dword ptr [ebp + 0x24]; 
0x0807eb7f: or al, 0x75; fimul word ptr [ebp - 0x2cc377d]; call dword ptr [eax - 0x73]; 
0x080b0235: or al, 0x82; add esp, 8; pop ebx; ret; 
0x080971bf: or al, 0x83; clc; add al, 0x75; ret; 
0x0805c844: or al, 0x83; in al, dx; add al, 0x52; push ebp; push esi; call dword ptr [ebx + 0x38]; 
0x080a4d8b: or al, 0x83; les ebp, ptr [eax]; pop ebx; ret; 
0x080b15da: or al, 0x83; les ebp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0804f0d4: or al, 0x83; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x08066a5c: or al, 0x83; les ecx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret 4; 
0x0805f2c6: or al, 0x83; les ecx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x080967bb: or al, 0x83; les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; jmp eax; 
0x08080a20: or al, 0x83; les edi, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x080770ce: or al, 0x83; les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x080aba97: or al, 0x83; les edx, ptr [ebx + ebx*2]; pop esi; ret; 
0x080a3e23: or al, 0x83; les esp, ptr [eax]; jmp ecx; 
0x080a7a69: or al, 0x83; les esp, ptr [ebx + ebx*2]; pop esi; ret; 
0x08070753: or al, 0x83; out dx, eax; adc byte ptr [ecx], al; clc; pop edi; ret; 
0x080a9adb: or al, 0x83; ret 0x8501; 
0x08060dd5: or al, 0x83; ret; 
0x0808fd75: or al, 0x84; ror byte ptr [edi], cl; mov byte ptr [edi - 0x9ffffe5], dl; ret 0xf40; 
0x080af720: or al, 0x85; ror byte ptr [edi], 0x84; ret; 
0x08078a8f: or al, 0x85; sal byte ptr [esp + eax - 0x7b], 0xd2; jne 0x30aa0; ret; 
0x0807aa2b: or al, 0x89; adc byte ptr [ebp - 0x2d6b87d], cl; call dword ptr [eax - 0x18]; 
0x0807aa00: or al, 0x89; adc byte ptr [ebp - 0x2d6c87d], cl; call dword ptr [eax - 0x18]; 
0x0807a9d8: or al, 0x89; adc byte ptr [ebp - 0x2d6d47d], cl; call dword ptr [eax - 0x18]; 
0x08065b94: or al, 0x89; adc edx, dword ptr [eax - 0x18]; ret; 
0x0807840d: or al, 0x89; call 0x5d62626f; ret; 
0x0805e2d3: or al, 0x89; dec eax; and al, 0x89; push eax; add al, 0x5b; ret; 
0x0805cf12: or al, 0x89; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x0807e4af: or al, 0x89; inc ebp; fmul qword ptr [ebp - 0x6849f7d]; call dword ptr [eax - 0x73]; 
0x080b100f: or al, 0x89; jl 0x69037; add al, 0x39; ret 0xb975; 
0x080aafd3: or al, 0x89; lds ecx, ptr [edi]; xchg eax, esp; ret 0xf883; 
0x08077e59: or al, 0x89; lds edi, ptr [eax + 0xc0]; call dword ptr gs:[0x10]; 
0x080ac127: or al, 0x89; lea edi, [ebx + edi*8 - 1]; call dword ptr [eax - 0x18]; 
0x08094d83: or al, 0x89; lea esp, [ebx + edi*8 - 1]; call dword ptr [edx - 0x18]; 
0x0807a983: or al, 0x89; or dword ptr [ebp + edi*8 - 0x7c720001], 0xf; sub ebp, edi; call dword ptr [eax - 0x18]; 
0x0805b04e: or al, 0x89; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x080b115a: or al, 0x89; ret 0x458b; 
0x0805fae3: or al, 0x89; ret 0x8b; 
0x080747ec: or al, 0x89; ret 0xe283; 
0x08049f37: or al, 0x89; ret 0xeac1; 
0x0804b1ac: or al, 0x89; ret; 
0x0808bb18: or al, 0x89; sal esi, 1; ret 0xf40; 
0x08088740: or al, 0x89; test dword ptr [esi + edi*8 - 1], edx; call dword ptr [esi - 0x18]; 
0x08054575: or al, 0x89; xchg eax, ebp; inc esp; idiv edi; call dword ptr [edx - 0x18]; 
0x080668e5: or al, 0x8b; inc esp; adc byte ptr [ebx + eax*4], al; ljmp 0x450f:0x1e08304; ret 0xc483; 
0x08088f8d: or al, 0x8b; inc esp; and al, 0x14; call eax; 
0x080a56c1: or al, 0x8b; inc esp; and al, 8; mov esp, ecx; jmp edx; 
0x08079c41: or al, 0x8b; inc esp; pop es; and al, 0xe9; ret; 
0x080a51b3: or al, 0x8b; je 0x5d1db; sbb byte ptr [ebp - 0x1b28f7d], cl; call dword ptr [eax + 0x56]; 
0x08077cbd: or al, 0x8b; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x080abc5c: or al, 0x8b; pop esp; and al, 8; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x08077f5c: or al, 0x8b; pop esp; and al, 8; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x08077f8c: or al, 0x8b; pop esp; and al, 8; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x08077c3d: or al, 0x8b; push esp; and al, 0x10; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0808709c: or al, 0x8d; adc dword ptr [eax + 0x3a], -3; call dword ptr [eax - 0x18]; 
0x0804bafe: or al, 0x8d; adc dword ptr [eax], -0xd; cld; call dword ptr [eax - 0x18]; 
0x08061462: or al, 0x8d; add dword ptr [eax - 0x46], -9; call dword ptr [eax + 0x56]; 
0x080613d2: or al, 0x8d; add dword ptr [eax - 0x47], -9; call dword ptr [eax + 0x56]; 
0x0804e2c2: or al, 0x8d; add dword ptr [eax - 1], -1; call dword ptr [eax - 0x75]; 
0x080b18a8: or al, 0x8d; dec edi; or bh, bh; je 0x698d3; and al, 0x89; ret 0xe889; 
0x080b10dc: or al, 0x8d; dec esi; add al, 0x89; ret 0x448d; 
0x08049dc6: or al, 0x8d; or dword ptr [eax], 0xfffffff0; cld; call dword ptr [eax - 0x18]; 
0x0808703a: or al, 0x8d; or dword ptr [ecx + 0x3a], 0xfffffffd; call dword ptr [eax - 0x18]; 
0x08049e07: or al, 0x8d; sbb dword ptr [eax], -0x10; cld; call dword ptr [eax - 0x18]; 
0x0807aabe: or al, 0x8d; sbb dword ptr [ecx + 0x29], -3; call dword ptr [eax - 0x18]; 
0x080a8611: or al, 0x8d; sub dword ptr [eax - 0x6a], -2; call dword ptr [eax - 0x73]; 
0x08056c65: or al, 0x8d; xchg dword ptr [eax - 7], ecx; cld; call dword ptr [eax - 0x18]; 
0x0805afd4: or al, 0x8d; xchg eax, ebx; and al, 0xfd; cld; call dword ptr [edx - 0x18]; 
0x08061474: or al, 0x8d; xor dword ptr [eax - 0x46], 0xfffffff7; call dword ptr [eax + 0x56]; 
0x080613e4: or al, 0x8d; xor dword ptr [eax - 0x47], 0xfffffff7; call dword ptr [eax + 0x56]; 
0x080b2eea: or al, 0xaa; test eax, eax; je 0x6aefa; mov dword ptr [esp + 8], edx; call eax; 
0x08079c4e: or al, 0xb8; and dword ptr [eax], eax; add byte ptr [eax], al; xor ecx, ecx; lea ebx, [edi - 0x2de88]; int 0x80; 
0x080659c9: or al, 0xb8; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0806681c: or al, 0xb8; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; xor esi, esi; mov edx, 1; call dword ptr gs:[0x10]; 
0x0809971e: or al, 0xb8; mov word ptr [eax], es; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x08062eae: or al, 0xb9; push 0x8b000002; jl 0x1aedb; adc byte ptr [ebp - 0x2f17b79], cl; dec dword ptr [ebp - 0x3019569]; call dword ptr [eax - 0x73]; 
0x080add4f: or al, 0xb; je 0x65d77; or byte ptr [edi], cl; xchg eax, esp; ret; 
0x080adebb: or al, 0xb; je 0x65ee3; or byte ptr [edi], cl; xchg eax, esp; ret; 
0x0809c245: or al, 0xba; add eax, 0x83000000; cmp dword ptr [0x3911430f], eax; ret 0x430f; 
0x0805b0b5: or al, 0xc7; rcl ah, 0x62; push cs; or bh, al; ret 0x5f80; 
0x0804a35a: or al, 0xc7; ret 0x68c0; 
0x0804a78d: or al, 0xc7; ret 0x6f40; 
0x0804a847: or al, 0xc7; ret 0x6f84; 
0x0804a49f: or al, 0xc7; ret; 
0x0809d3d7: or al, 0xe8; ret; 
0x08059ae6: or al, 0xe9; imul edi, esi, 0x748dffff; add byte ptr es:[ebx - 0x38e7dbbc], cl; ret 0x5f80; 
0x0806a18b: or al, 0xe; sub eax, ecx; pop esi; pop edi; ret; 
0x0804a4ce: or al, 0xf1; cld; call dword ptr [eax - 0x18]; 
0x0808abfb: or al, 0xf6; ret 0x7540; 
0x0808d507: or al, 0xf6; ret 0xf01; 
0x0808fd4a: or al, 0xf6; ret 0xf08; 
0x080a6ebf: or al, 0xf7; ret 0; 
0x080719f4: or al, 0xf; and ch, 0; add byte ptr [eax], al; lea eax, [eax + 0xb]; pop edi; ret; 
0x080aaa69: or al, 0xf; mov bh, 0x76; add al, byte ptr [ecx]; shr byte ptr [ebx], 0x5d; in al, 1; ret 0xde39; 
0x08087075: or al, 0xf; mov dh, 0x84; add esp, dword ptr [eax - 0x720002c7]; test byte ptr [ebx], al; sar byte ptr [ecx], 0xfd; call dword ptr [eax - 0x18]; 
0x0808e92f: or al, 0xf; mov esi, 0xc7542444; ret 0xfff0; 
0x08070bd4: or al, 0xf; xor ch, 0; add byte ptr [eax], al; lea eax, [edi + 0xb]; pop edi; ret; 
0x080988db: or al, 0xfe; jmp dword ptr [esi - 0x70]; 
0x08086502: or al, 0xff; je 0x3e52a; adc al, 0x8d; and dword ptr [eax + 0x12], 0xfffffffa; call dword ptr [eax - 1]; 
0x080aefc6: or al, 0xff; je 0x66fee; and al, 0x89; ret 0xd889; 
0x08088998: or al, 0xff; jmp dword ptr [esi - 0x70]; 
0x0804ffb8: or al, 0xff; jne 0x7fbc; push dword ptr [esi]; mov eax, dword ptr [esp + 0x1c]; call eax; 
0x08087385: or al, 0xff; xor al, ch; ret; 
0x080597fc: or al, 1; ret 0xc101; 
0x0806be76: or al, 7; add byte ptr [eax], al; pop ebx; ret; 
0x08049d37: or al, 8; call 0x69fe0; add esp, 0x10; mov byte ptr [0x80e62e0], 1; leave; ret; 
0x08092b09: or al, ah; mov eax, dword ptr [ebx + eax*4]; jmp eax; 
0x080acded: or al, bh; test dword ptr [eax + 0xfffffb], eax; add byte ptr [eax], al; add byte ptr [ebp - 0x44b7b], cl; call dword ptr [ecx + 0x6a]; 
0x0805304a: or al, byte ptr [eax]; add bh, al; test dword ptr [edi + esi*8 - 1], esp; call dword ptr [eax]; 
0x08093c9a: or al, byte ptr [eax]; add byte ptr [ebp - 0x7a74ff8a], cl; cmp bl, 0xff; jmp dword ptr [ebp - 0x39]; 
0x08055572: or al, byte ptr [eax]; add byte ptr [ebx - 0x4ab7b], cl; inc dword ptr [ebp + 0x65850fc0]; adc byte ptr [eax], al; add byte ptr [eax - 0x47f43], al; call dword ptr [ebx + 0xf]; 
0x0805fef5: or al, byte ptr [ebx + 0x1818aa]; add byte ptr [ecx], al; pop ebx; pop esi; ret; 
0x0809674e: or al, byte ptr [ebx + 0x5e5b04c4]; ret; 
0x080a3d55: or al, byte ptr [ecx]; add esp, 4; pop ebx; pop esi; ret; 
0x080613dc: or al, ch; fimul word ptr [eax - 0x3b7cffff]; or al, 0x8d; xor dword ptr [eax - 0x47], 0xfffffff7; call dword ptr [eax + 0x56]; 
0x0806676f: or al, ch; fstp xword ptr [edi + edi*8 + 0x24548bff]; or byte ptr [ecx], cl; ret 0x3ee9; 
0x08049d38: or al, ch; mov byte ptr [0x83000682], al; les edx, ptr [eax]; mov byte ptr [0x80e62e0], 1; leave; ret; 
0x08049dc9: or al, dh; cld; call dword ptr [eax - 0x18]; 
0x08082497: or bh, al; inc esp; and al, 0x10; add eax, 0xe9000000; ret; 
0x0807eae2: or bh, al; ret 0; 
0x08089932: or bh, al; ret 0x4da0; 
0x0807c2e5: or bh, al; ret 0x59a4; 
0x08058e07: or bh, al; ret 0x5f80; 
0x08058a0e: or bh, al; ret 0x62d4; 
0x080a978a: or bh, al; ret 0x6cc8; 
0x080a8206: or bh, al; ret 0x6f34; 
0x080588a3: or bh, al; ret; 
0x0805afc2: or bh, al; shl byte ptr [eax - 0x7af7f547], 0xc0; je 0x12fd2; add esp, 8; pop ebx; ret; 
0x080ad847: or bh, bh; dec dword ptr [ecx + 0x28c48303]; pop ebx; ret; 
0x080b0454: or bh, bh; jbe 0x6845c; push dword ptr [esi]; push 1; push 1; call eax; 
0x08065572: or bh, bh; je 0x1d59a; and al, 0x56; call eax; 
0x08065aea: or bh, bh; je 0x1db12; and al, 0x53; call eax; 
0x080b18ab: or bh, bh; je 0x698d3; and al, 0x89; ret 0xe889; 
0x08088d19: or bh, bh; jmp dword ptr [esi - 0x70]; 
0x0809bd34: or bh, bh; jne 0x53d50; call dword ptr [eax]; 
0x080b07e2: or bh, bh; jne 0x687f2; push ebx; call dword ptr [ebp + 8]; 
0x080a8670: or bh, bh; jo 0x60678; push dword ptr [eax]; call 0x64f40; add esp, 0x1c; ret; 
0x080530d1: or bh, bh; mov ch, 0x54; idiv edi; dec dword ptr [ebx - 0x8df73]; dec dword ptr [ebx - 0x8af7b]; call dword ptr [edx - 0x75]; 
0x080a7bc6: or bh, bl; inc dword ptr [ecx + 0x3d437c2]; add byte ptr [ebx - 0x39], dl; ret; 
0x08049fb7: or bh, dh; ret; 
0x080a7edd: or bl, byte ptr [ebx + 0x5e]; pop edi; ret; 
0x080aab65: or bl, byte ptr [ebx - 0x48]; add dword ptr [eax], eax; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x0804a4ab: or bl, ch; pop es; call dword ptr [esi]; 
0x080998d5: or byte ptr [eax + 0x36], bh; call dword ptr gs:[0x10]; 
0x080abc60: or byte ptr [eax + 0x68], bh; call dword ptr gs:[0x10]; 
0x080a8a54: or byte ptr [eax + 0x6a], dl; add al, ch; ret; 
0x08077f60: or byte ptr [eax + 0x7d], bh; call dword ptr gs:[0x10]; 
0x0807732a: or byte ptr [eax + 0xb7], bh; mov ecx, edi; call dword ptr gs:[0x10]; 
0x08077ee8: or byte ptr [eax + 0xc0], bh; call dword ptr gs:[0x10]; 
0x08077f90: or byte ptr [eax + 0xdb], bh; call dword ptr gs:[0x10]; 
0x080a33e3: or byte ptr [eax + 0xf75003a], al; mov eax, 0x80e6cc8; mov edx, dword ptr [eax]; mov eax, edx; ret; 
0x080b09ee: or byte ptr [eax + 4], bh; pop ebx; ret; 
0x08049c5f: or byte ptr [eax - 0x18], dl; mov edx, 0xf4000005; mov ebx, dword ptr [esp]; ret; 
0x0806fb6c: or byte ptr [eax - 0x2f76f7be], cl; ret; 
0x08049e8a: or byte ptr [eax - 0x73], dl; sub dword ptr [esi - 0x10], -4; call dword ptr [eax - 0x18]; 
0x0806fa0c: or byte ptr [eax - 0x776f7be], cl; pop edi; ret; 
0x0809698a: or byte ptr [eax - 1], bh; pop ebx; ret; 
0x0807a57a: or byte ptr [eax], al; add bh, al; ret 0x6f28; 
0x080579ac: or byte ptr [eax], al; add bl, ch; ret; 
0x08053203: or byte ptr [eax], al; add byte ptr [eax - 0x89743], al; call dword ptr [ebx + 0xf]; 
0x080a43af: or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x08060e9d: or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx + 0x5e5b3858], cl; ret; 
0x080b0f94: or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx], al; ret 0x44c7; 
0x080b09d9: or byte ptr [eax], al; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x08088a5b: or byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x08060ab9: or byte ptr [eax], al; add byte ptr [eax], al; cmovne eax, edx; mov dword ptr [ecx + 0x1870], eax; ret; 
0x08088b41: or byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0xae; call dword ptr gs:[0x10]; 
0x08071b97: or byte ptr [eax], al; add byte ptr [eax], al; pop edi; ret; 
0x0805452e: or byte ptr [eax], al; add byte ptr [ebp - 0x3077f79], cl; dec dword ptr [ecx - 0x7872af05]; and al, 0xf9; cld; call dword ptr [eax - 0x18]; 
0x080593a7: or byte ptr [eax], al; add byte ptr [ebx + 0x448d08ec], al; and al, 0x3c; push eax; push dword ptr [esp + 0x24]; call dword ptr [ebx + 0x48]; 
0x08082395: or byte ptr [eax], al; add byte ptr [ebx - 0x76efdb8c], cl; ret 0xb60f; 
0x08092193: or byte ptr [eax], al; add cl, ch; ljmp 0x7487:0x8dffffe2; stc; cld; call dword ptr [eax + 0x68]; 
0x080608e8: or byte ptr [eax], al; jbe 0x188f0; ret; 
0x0805fdfc: or byte ptr [eax], al; mov eax, 0x80e5098; mov eax, dword ptr [eax]; ret; 
0x08060a0d: or byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; cmp eax, 0x3fc; jbe 0x18a20; ret; 
0x08060a9d: or byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; cmp eax, 0x50; jbe 0x18ab0; ret; 
0x080608dd: or byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; cmp eax, 0x80000; jbe 0x188f0; ret; 
0x08060a4d: or byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; cmp eax, 0xffff; jbe 0x18a60; ret; 
0x0806097c: or byte ptr [eax], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x186c], edx; ret; 
0x080609ec: or byte ptr [eax], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x48c], edx; ret; 
0x080609cc: or byte ptr [eax], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x490], edx; ret; 
0x0806099c: or byte ptr [eax], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x4a0], 1; mov dword ptr [eax + 0x480], edx; ret; 
0x0806094c: or byte ptr [eax], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x4a0], 1; mov dword ptr [eax + 0x484], edx; ret; 
0x0806091c: or byte ptr [eax], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x4a0], 1; mov dword ptr [eax + 0x498], edx; ret; 
0x08060a7c: or byte ptr [eax], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x4bc], edx; ret; 
0x08078e55: or byte ptr [eax], ch; add byte ptr [eax], cl; add byte ptr [ecx + 0x4589d445], cl; fmul dword ptr [ebp - 0x2df2a7d]; call dword ptr [eax - 0x18]; 
0x0808637e: or byte ptr [ebp + 0x1d840fc0], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x6c72f714], al; inc ebx; cmp ebp, edi; call dword ptr [edx + 0x50]; 
0x080a1b44: or byte ptr [ebp + 0x39010a54], cl; ret; 
0x080958b6: or byte ptr [ebp + 0x50142444], cl; push esi; call dword ptr [ebx + 0x48]; 
0x0805bad1: or byte ptr [ebp + 0x50242444], cl; push esi; call dword ptr [edi + 0x48]; 
0x0805b768: or byte ptr [ebp + 0x50342444], cl; push esi; call dword ptr [edi + 0x48]; 
0x080593ac: or byte ptr [ebp + 0x503c2444], cl; push dword ptr [esp + 0x24]; call dword ptr [ebx + 0x48]; 
0x0805be0a: or byte ptr [ebp + 0x50442444], cl; push esi; call dword ptr [ebx + 0x48]; 
0x0805e8a2: or byte ptr [ebp + 0x5150017e], cl; mov dword ptr [esp + 0x40], ecx; call dword ptr [ebx + 0xc]; 
0x08098c05: or byte ptr [ebp + 0x550c246c], cl; push ebx; call eax; 
0x080a9a7e: or byte ptr [ebp + 0x5e5bf465], cl; pop edi; pop ebp; ret; 
0x080ad3a7: or byte ptr [ebp - 0x162877d], cl; call dword ptr [eax - 0x73]; 
0x080ad78d: or byte ptr [ebp - 0x162977d], cl; call dword ptr [eax - 0x73]; 
0x080aa6fe: or byte ptr [ebp - 0x1676f7d], cl; call dword ptr [eax + 0x6a]; 
0x080a95c6: or byte ptr [ebp - 0x169cf7d], cl; call dword ptr [eax + 0x6a]; 
0x080a868e: or byte ptr [ebp - 0x16c576d], cl; call dword ptr [edx + 0x6a]; 
0x080a8298: or byte ptr [ebp - 0x16c6b7d], cl; call dword ptr [eax - 0x73]; 
0x0808a5b7: or byte ptr [ebp - 0x18], dl; ret 0xfead; 
0x080a51d6: or byte ptr [ebp - 0x1b2817d], cl; call dword ptr [eax + 0x56]; 
0x080a4ab5: or byte ptr [ebp - 0x1b3117a], cl; call dword ptr [eax - 0x73]; 
0x0809cce5: or byte ptr [ebp - 0x1c27b7d], cl; jmp dword ptr [esi - 0x7f]; 
0x0809bec2: or byte ptr [ebp - 0x1c72f7d], cl; dec dword ptr [ebp - 0x1c7536d]; dec dword ptr [edi]; inc esp; ret 0x95e9; 
0x080a8b16: or byte ptr [ebp - 0x1c9f967], cl; dec dword ptr [ebx - 0x7aff7500]; ror byte ptr [edi], 0x44; ret; 
0x080ad745: or byte ptr [ebp - 0x1c9f96a], cl; dec dword ptr [ebx - 0x7aff7500]; ror byte ptr [edi], 0x44; ret 0xec83; 
0x080ad078: or byte ptr [ebp - 0x1c9f96e], cl; dec dword ptr [ebx - 0x7aff7500]; ror byte ptr [edi], 0x44; ret 0x4c89; 
0x080ad6fe: or byte ptr [ebp - 0x1c9f96f], cl; dec dword ptr [ebx - 0x7aff7500]; ror byte ptr [edi], 0x44; ret 0xec83; 
0x0808660b: or byte ptr [ebp - 0x1df8b7d], cl; call dword ptr [eax + 0x56]; 
0x08098647: or byte ptr [ebp - 0x2a], dh; lea ebx, [eax + 8]; mov eax, ebx; pop ebx; ret; 
0x080863a7: or byte ptr [ebp - 0x2c6b67d], cl; call dword ptr [eax - 1]; 
0x08086389: or byte ptr [ebp - 0x2c6bc6d], cl; call dword ptr [edx + 0x50]; 
0x0807ae11: or byte ptr [ebp - 0x2d5db7d], cl; call dword ptr [edx + 0x50]; 
0x080a7e65: or byte ptr [ebp - 0x2fb7f02e], al; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x08066fac: or byte ptr [ebp - 0x2ff1f7d], cl; call dword ptr [esi + 0x50]; 
0x0804fd18: or byte ptr [ebp - 0x308137d], cl; call dword ptr [eax + 0x55]; 
0x0804b837: or byte ptr [ebp - 0x30cd77d], cl; call dword ptr [eax + 0x52]; 
0x0804b819: or byte ptr [ebp - 0x30ce06d], cl; call dword ptr [edx + 0x50]; 
0x080b2d74: or byte ptr [ebp - 0x3240f6d], cl; call dword ptr [edx + 0x50]; 
0x080afe5e: or byte ptr [ebp - 0x363df7d], cl; call dword ptr [eax - 0x73]; 
0x080a72bf: or byte ptr [ebp - 0x3da2f7d], cl; call dword ptr [eax - 0x73]; 
0x080a732a: or byte ptr [ebp - 0x3dd5f7d], cl; call dword ptr [eax - 0x73]; 
0x080a732a: or byte ptr [ebp - 0x3dd5f7d], cl; call dword ptr [eax - 0x73]; adc dword ptr [eax + 0x5000001a], -0x18; ret 0xf58c; 
0x08088bfb: or byte ptr [ebp - 0x5c5576d], cl; dec dword ptr [edi]; inc esp; ret 0x4489; 
0x0807eaef: or byte ptr [ebp - 0x669bf7d], cl; call dword ptr [eax - 0x73]; 
0x0804c974: or byte ptr [ebp - 0x74358a40], al; inc ebx; add al, 0x83; ret; 
0x080953eb: or byte ptr [ebp - 0x74ffd98c], cl; inc edx; add al, 0x83; ret 0xb904; 
0x08078a6b: or byte ptr [ebp - 0x7afb8b40], al; sal byte ptr [ebp + 4], cl; ret; 
0x0805afc8: or byte ptr [ebp - 0x7cfa8b40], al; les ecx, ptr [eax]; pop ebx; ret; 
0x080b07bb: or byte ptr [ebp - 0xd74b], cl; call dword ptr [ebx - 0x73]; 
0x08077a8d: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x2faa0; pop ebx; ret; 
0x08077c45: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x2fc60; pop ebx; ret; 
0x08077c85: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x2fca0; pop ebx; ret; 
0x08077cc1: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x2fcd8; pop ebx; ret; 
0x080a78ca: or byte ptr [ebx + 0x10891852], cl; add esp, 4; pop ebx; pop esi; ret; 
0x080a08d2: or byte ptr [ebx + 0x3030846], cl; mov ebx, dword ptr [ebp - 0x74]; test ebx, ebx; jne 0x588ab; call eax; 
0x080a56be: or byte ptr [ebx + 0x448b0c68], cl; and al, 8; mov esp, ecx; jmp edx; 
0x080a9042: or byte ptr [ebx + 0x45892040], cl; in al, 0x8d; inc ebp; fcom dword ptr [eax - 0x73]; and dword ptr [eax + 0x36], 0xfffffffc; call dword ptr [eax + 0x6a]; 
0x080a85b3: or byte ptr [ebx + 0x508b044a], cl; adc byte ptr [ecx + 0x39c829f8], cl; ret 0x6f72; 
0x0805efa5: or byte ptr [ebx + 0x56], dl; call dword ptr [edi + 0x18]; 
0x0809c242: or byte ptr [ebx + 0x5ba0cec], al; add byte ptr [eax], al; add byte ptr [ebx + 0x430f0539], al; adc dword ptr [ecx], edi; ret 0x430f; 
0x080a39fe: or byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x08060e1e: or byte ptr [ebx + 0x5e5b14c4], al; pop edi; pop ebp; ret; 
0x08060125: or byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x080a31fd: or byte ptr [ebx + 0x5e5b20c4], al; pop edi; pop ebp; ret; 
0x080ab969: or byte ptr [ebx + 0x5e5b24c4], al; ret; 
0x0804fdda: or byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x08082e82: or byte ptr [ebx + 0x5e5b5cc4], al; pop edi; pop ebp; ret; 
0x0804aab5: or byte ptr [ebx + 0x5e5b6cc4], al; pop edi; pop ebp; ret; 
0x0807967a: or byte ptr [ebx + 0x5e], bl; ret; 
0x08096b64: or byte ptr [ebx + 0x5f5e5b02], cl; ret; 
0x080a14f9: or byte ptr [ebx + 0x68b8c55], cl; add eax, dword ptr [ecx]; test edx, edx; jne 0x59507; call eax; 
0x0807bff3: or byte ptr [ebx + 0x6a142474], cl; add ecx, dword ptr [ebp - 0x1b2067d]; call dword ptr [eax - 1]; 
0x08077da8: or byte ptr [ebx + 0x74c08500], cl; add eax, 0x5b08c483; ret; 
0x0809fe7a: or byte ptr [ebx + 0x8b8c5d], cl; add eax, dword ptr [esi]; test ebx, ebx; jne 0x57e22; call eax; 
0x0805ca5b: or byte ptr [ebx + 0xa], dh; movzx eax, byte ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x080791b8: or byte ptr [ebx + 0xfc08500], cl; inc esp; ret 0x66c3; 
0x0804aba3: or byte ptr [ebx + 0xfc08500], cl; test byte ptr [edx], al; add al, byte ptr [eax]; add bh, al; ret 0x6f74; 
0x0804a84d: or byte ptr [ebx + 0xfd28512], cl; test dword ptr [0x8b000001], ecx; je 0x287f; or al, 0xc7; ret 0x6f84; 
0x0805f802: or byte ptr [ebx + 0xfff8538], cl; test ah, bh; add byte ptr [eax], al; add bh, al; ret; 
0x080b025b: or byte ptr [ebx - 0x173e9fbe], cl; pop ds; mov dword ptr [ecx], eax; mov eax, dword ptr [edx + 0x4c]; ret; 
0x0805fb4a: or byte ptr [ebx - 0x2fd6f7bf], cl; ret; 
0x080abbb7: or byte ptr [ebx - 0x38cbdbbc], cl; ret 0; 
0x0804a91c: or byte ptr [ebx - 0x38f3db8c], cl; ret 0x68c0; 
0x080a398e: or byte ptr [ebx - 0x3e], dh; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x08077326: or byte ptr [ebx - 0x47f7dba4], cl; mov bh, 0; add byte ptr [eax], al; mov ecx, edi; call dword ptr gs:[0x10]; 
0x080aea32: or byte ptr [ebx - 0x50f0c020], al; xchg byte ptr [eax + 0x1000000], dh; ret 0x9689; 
0x08077be5: or byte ptr [ebx - 0x74ebdbb4], 0x5c; and al, 0x10; mov edx, eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x08058297: or byte ptr [ebx - 0x74fefbbf], al; sahf; xchg eax, esp; add byte ptr [eax], al; add bh, al; ret 0x5f80; 
0x0807ff50: or byte ptr [ebx - 0x76f3db84], cl; ret; 
0x080803cb: or byte ptr [ebx - 0x7aebdbbc], cl; sar byte ptr [eax], 0xf; inc ebp; ret 0xea89; 
0x0804b834: or byte ptr [ebx - 0x7c72f714], al; sub bl, dh; cld; call dword ptr [eax + 0x52]; 
0x080a3a74: or byte ptr [ebx - 0x7c72ff00], al; mov byte ptr [ebx - 2], cl; call dword ptr [eax - 0x73]; 
0x080abb3f: or byte ptr [ebx - 0xf76db3c], al; pop ebx; pop esi; ret; 
0x080a08d5: or byte ptr [ebx], al; add ecx, dword ptr [ebx - 0x247a73a3]; jne 0x588ab; call eax; 
0x08087df5: or byte ptr [ebx], al; test dword ptr [esi + edi*8 - 1], eax; dec dword ptr [ecx - 0x1b773]; call dword ptr [eax - 1]; 
0x08096466: or byte ptr [ecx + 0x10892048], cl; pop ebx; ret; 
0x0805bded: or byte ptr [ecx + 0x244489d7], cl; adc al, 0x89; ret 0xc729; 
0x0804ff33: or byte ptr [ecx + 0x24448b03], cl; add al, 0x83; ret; 
0x080603d1: or byte ptr [ecx + 0x29182454], cl; ret 0x5489; 
0x080787b3: or byte ptr [ecx + 0x418b0447], cl; add al, 0x89; ret 0xe083; 
0x0809abb9: or byte ptr [ecx + 0x44898055], 0xb7; adc al, 0x83; mov byte ptr [ecx], 0xe9; ret 0xfffe; 
0x08086efa: or byte ptr [ecx + 0x458bc045], cl; adc al, 0x89; inc ebp; les ecx, ptr [ebx - 0x194472d0]; sub edi, ebp; jmp dword ptr [ebp - 0x75]; 
0x080a796e: or byte ptr [ecx + 0x4c48302], cl; pop ebx; pop esi; ret; 
0x080a78e2: or byte ptr [ecx + 0x4c48310], cl; pop ebx; pop esi; ret; 
0x0805b191: or byte ptr [ecx + 0x4c483f0], cl; pop ebx; pop esi; ret; 
0x08096460: or byte ptr [ecx + 0x58890450], cl; or byte ptr [ecx + 0x10892048], cl; pop ebx; ret; 
0x080524d7: or byte ptr [ecx + 0x688d89fb], cl; idiv edi; dec dword ptr [ecx - 0x88b6b]; call dword ptr [eax + 0x52]; 
0x08054379: or byte ptr [ecx + 0x6c9589fb], cl; idiv edi; call dword ptr [eax + 0x51]; 
0x08096432: or byte ptr [ecx + 0x8508910], cl; mov dword ptr [eax + 0x20], ecx; ret; 
0x08079b84: or byte ptr [ecx + ecx*8 + 0x438be775], al; add al, 0x83; ret; 
0x08059ae2: or byte ptr [ecx - 0x16f3dbac], cl; imul edi, esi, 0x748dffff; add byte ptr es:[ebx - 0x38e7dbbc], cl; ret 0x5f80; 
0x0804e770: or byte ptr [ecx - 0x1cb6b], cl; call dword ptr [eax - 1]; 
0x0806fbcc: or byte ptr [ecx - 0x2f76f7be], cl; ret; 
0x08058c9b: or byte ptr [ecx - 0x2fd643bb], cl; push eax; push edx; push edi; call dword ptr [ebx + 0x38]; 
0x08079df0: or byte ptr [ecx - 0x38b7db84], cl; ret; 
0x0807c118: or byte ptr [ecx - 0x3b7cfbbe], cl; add al, 0x5b; pop esi; ret; 
0x0807a26b: or byte ptr [ecx - 0x74d7dbbc], cl; add byte ptr [esi - 0x77], ah; cmp dword ptr [ebx + ecx - 0x7c730000], 0x3f; sub ch, bh; call dword ptr [eax - 0x18]; 
0x080aafba: or byte ptr [ecx - 0x74ebdbbc], cl; inc edi; add al, 0x89; ret; 
0x080b100b: or byte ptr [ecx - 0x76f3db94], cl; jl 0x69037; add al, 0x39; ret 0xb975; 
0x0806fa6c: or byte ptr [ecx - 0x776f7be], cl; pop edi; ret; 
0x0808de2b: or byte ptr [ecx - 0x7ca7dbac], cl; ret 0x3917; 
0x0809abbc: or byte ptr [ecx - 0x7ceb48bc], 0xc6; add ecx, ebp; ret 0xfffe; 
0x080542e9: or byte ptr [ecx - 0x89b73], cl; call dword ptr [eax + 0x53]; 
0x080877ed: or byte ptr [ecx - 0x8b7b], cl; jmp dword ptr [ebp - 0x75]; 
0x080a98d3: or byte ptr [ecx - 0x8f63], cl; inc edi; ret; 
0x08087862: or byte ptr [ecx - 0x8f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x080a9935: or byte ptr [ecx - 0xab4b], cl; dec dword ptr [ecx - 0xb763]; inc edi; ret; 
0x080a9929: or byte ptr [ecx - 0xb363], cl; inc edi; ret; 
0x080a1659: or byte ptr [ecx - 2], al; call dword ptr [eax - 0x18]; 
0x08054cac: or byte ptr [ecx], 0; add byte ptr [ebx - 0x4937b], cl; jmp dword ptr [ebp - 0x39]; 
0x08049d46: or byte ptr [ecx], al; leave; ret; 
0x080ad1bc: or byte ptr [ecx], al; ret 0xd789; 
0x080b0843: or byte ptr [ecx], bh; push ecx; or byte ptr [edi + 2], dh; sbb eax, eax; ret; 
0x080974d3: or byte ptr [ecx], bh; ret 0x1373; 
0x080a0bf1: or byte ptr [ecx], bh; ret 0x840f; 
0x080890dd: or byte ptr [ecx], bh; ret 0x8e0f; 
0x08066350: or byte ptr [ecx], bh; ret; 
0x0805145d: or byte ptr [ecx], ch; fmul dword ptr [edi]; mov esi, 0x390f2454; ret 0x8d0f; 
0x0809b378: or byte ptr [ecx], ch; ret 0x76ff; 
0x0806247a: or byte ptr [ecx], ch; ret 0x98b; 
0x0805c764: or byte ptr [ecx], ch; ret 0xfa39; 
0x08066778: or byte ptr [ecx], cl; ret 0x3ee9; 
0x080990ad: or byte ptr [ecx], dh; jmp dword ptr [ebp - 0x77]; 
0x0805ba6b: or byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x0807a28d: or byte ptr [ecx], dh; rol byte ptr [eax - 0x6af0ffc8], cl; ret 0xc0c7; 
0x0807a9c7: or byte ptr [ecx], dh; rol byte ptr [eax - 0x6bf0ffc8], cl; ret 0xc0c7; 
0x08098bb6: or byte ptr [edi + 0x53], dl; call eax; 
0x080b0846: or byte ptr [edi + 2], dh; sbb eax, eax; ret; 
0x0808000f: or byte ptr [edi], 0x87; ret; 
0x0808bb14: or byte ptr [edi], 0xb6; push eax; or al, 0x89; sal esi, 1; ret 0xf40; 
0x0808abf7: or byte ptr [edi], 0xb6; push eax; or al, 0xf6; ret 0x7540; 
0x080aeb42: or byte ptr [edi], cl; mov bh, 0x46; add dword ptr [ebp - 0x50f0fca2], ecx; xchg dword ptr [eax + 0x1000000], esi; ret 0x9789; 
0x080aebd2: or byte ptr [edi], cl; mov dh, 0x46; add dword ptr [ebp - 0x50f0fda2], ecx; xchg dword ptr [eax + 0x1000000], esi; ret 0x9789; 
0x0805cf76: or byte ptr [edi], cl; mov dh, 0xc0; pop ebx; neg eax; ret; 
0x08069f42: or byte ptr [edi], cl; mov dh, 2; sub eax, ecx; ret; 
0x08070b9a: or byte ptr [edi], cl; sub byte ptr [edi], 1; add byte ptr [eax], al; lea eax, [edi + 7]; pop edi; ret; 
0x08056523: or byte ptr [edi], cl; test ah, dh; add dword ptr [eax], eax; add byte ptr [ebx - 0x4737b], cl; inc dword ptr [eax - 0x42273]; call dword ptr [eax]; 
0x080564d3: or byte ptr [edi], cl; test byte ptr [edi], bl; add al, byte ptr [eax]; add byte ptr [ebx - 0x4737b], cl; inc dword ptr [eax - 0x42273]; call dword ptr [eax]; 
0x080603b1: or byte ptr [edi], cl; test dword ptr [eax + 0x39000001], edi; ret 0x870f; 
0x0807a576: or byte ptr [edi], cl; test dword ptr [ebx], edi; or byte ptr [eax], al; add bh, al; ret 0x6f28; 
0x0805c722: or byte ptr [edi], cl; xchg byte ptr [edi], cl; add dword ptr [eax], eax; add byte ptr [ebx + 0x555204ec], al; push esi; call dword ptr [ebx + 0x38]; 
0x080a03c1: or byte ptr [edi], cl; xchg eax, esp; ret 0x940f; 
0x0804a75e: or byte ptr [edi], cl; xchg eax, esp; ret 0xd284; 
0x0805806e: or byte ptr [edi], cl; xchg eax, esp; ret 0xff81; 
0x080add53: or byte ptr [edi], cl; xchg eax, esp; ret; 
0x080a01db: or byte ptr [edx + ebx*2 + 0xf], dh; mov dh, 0x91; cwde; add dword ptr [eax], eax; add dh, dh; ret 0x7403; 
0x0805b601: or byte ptr [edx - 1], ch; push dword ptr [eax]; call dword ptr [ebx + 0xc]; 
0x080590ec: or byte ptr [edx - 1], ch; push dword ptr [ebx]; call dword ptr [eax + 0xc]; 
0x08074bb8: or byte ptr [edx], bh; or dh, byte ptr [ebp + 4]; xor eax, eax; pop ebx; ret; 
0x08058003: or byte ptr [edx], ch; push edi; call dword ptr [ebx + 8]; 
0x0806ff7b: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; lea eax, [edx + 0xf]; pop edi; ret; 
0x0807026c: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; lea eax, [edx + 0xf]; ret; 
0x0806f97b: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; mov eax, edi; pop edi; ret; 
0x0806fc4c: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; mov eax, edx; ret; 
0x0806f436: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; pop edi; ret; 
0x0806f576: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x0806dbc6: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x0806dd06: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x0806f366: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; pop edi; ret; 
0x0806f5d6: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x0806db16: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x0806dd66: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x0806f457: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; pop edi; ret; 
0x0806f597: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x0806dbe7: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x0806dd27: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x080a3ce7: or byte ptr [esi + 1], bh; call dword ptr [eax]; 
0x0809213a: or byte ptr ds:[eax], al; add byte ptr [ebp - 0x3077f79], cl; dec dword ptr [ecx - 0x7872af05]; and al, 0xf9; cld; call dword ptr [eax - 0x18]; 
0x08093afc: or ch, byte ptr [ecx]; ret; 
0x080b00f2: or ch, byte ptr [edx + 1]; call eax; 
0x080b00cc: or ch, byte ptr [edx + 1]; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0805afc7: or cl, byte ptr [eax]; test eax, eax; je 0x12fd2; add esp, 8; pop ebx; ret; 
0x080796d8: or cl, byte ptr [ecx + 0x50891858]; sbb al, 0xc6; inc eax; and byte ptr [ecx], al; pop ebx; ret; 
0x0805ca5d: or cl, byte ptr [edi]; mov dh, 0; pop ebx; pop esi; pop edi; ret; 
0x0804f9d7: or cl, ch; ret; 
0x08099806: or dh, 0x80; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x08098d56: or dh, bh; jmp dword ptr [esi - 0x70]; 
0x0806a375: or dh, byte ptr [eax + ebx - 0x48]; add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x22381; neg eax; ret; 
0x0805f07d: or dh, byte ptr [eax + edx + 0x39]; retf 0xf477; add eax, dword ptr [esp + 8]; pop ebx; ret; 
0x08074bba: or dh, byte ptr [ebp + 4]; xor eax, eax; pop ebx; ret; 
0x08097100: or dh, byte ptr [ecx + edx + 0x5b]; pop esi; pop edi; ret; 
0x08071a92: or dh, byte ptr [edx + 0x4b]; lea eax, [eax + 9]; pop edi; ret; 
0x08070c82: or dh, byte ptr [edx + 0x4b]; lea eax, [edi + 9]; pop edi; ret; 
0x08089f9e: or dh, byte ptr [edx + edi*2 - 0x7d]; call dword ptr [eax]; 
0x0807872f: or dh, dh; ret 0x7401; 
0x080672a4: or dl, byte ptr [eax]; pop ebx; cmovne eax, ecx; ret; 
0x08075cf7: or dword ptr [eax + 0x1a], 0xfffffffd; call dword ptr [eax - 0x73]; 
0x0807e073: or dword ptr [eax + 0x2f], 0xfffffffd; call dword ptr [eax - 0x73]; 
0x0805ecc0: or dword ptr [eax + 0x3c], 0x80; mov eax, dword ptr [eax + 0x34]; test eax, eax; jne 0x16cc0; ret; 
0x0809d054: or dword ptr [eax + 0x3c], 0xfffffffe; call dword ptr [ebp + 0x56]; 
0x08049dc8: or dword ptr [eax], 0xfffffff0; cld; call dword ptr [eax - 0x18]; 
0x08079d8a: or dword ptr [eax], eax; add bh, al; ret; 
0x08079211: or dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x08054cad: or dword ptr [eax], eax; add byte ptr [ebx - 0x4937b], cl; jmp dword ptr [ebp - 0x39]; 
0x08054712: or dword ptr [eax], eax; add byte ptr [ebx - 0x7a72fb14], al; sar bl, 0xff; call dword ptr [esi - 1]; 
0x0804981f: or dword ptr [eax], eax; add byte ptr [ecx - 0x763fcf10], cl; ret 0x8789; 
0x080497ed: or dword ptr [eax], eax; add byte ptr [ecx - 0x763fcf30], cl; ret 0x8789; 
0x08079e22: or dword ptr [eax], eax; add dh, al; inc esp; and al, 0x53; add byte ptr [ecx - 0x38dfdba4], cl; ret; 
0x08049011: or dword ptr [eax], eax; mov eax, 0; test eax, eax; je 0x101f; call eax; 
0x080507e4: or dword ptr [ebp + 0x33], esp; add eax, 0x18; call eax; 
0x0807a985: or dword ptr [ebp + edi*8 - 0x7c720001], 0xf; sub ebp, edi; call dword ptr [eax - 0x18]; 
0x080aa6ee: or dword ptr [ebp - 0x69], 0xfffffffe; call dword ptr [eax - 0x18]; 
0x0807eb1f: or dword ptr [ebx + 0x195c], 2; add esp, 8; pop ebx; ret; 
0x080a9784: or dword ptr [ebx + 0x4a8901c1], eax; or bh, al; ret 0x6cc8; 
0x080a84e1: or dword ptr [ebx + edx*4 - 2], 0xffffffff; push eax; call 0x30a0; lea esi, [esi]; endbr32; ret 4; 
0x0809bd28: or dword ptr [ebx - 0x30], 7; mov eax, 0x80e5cd4; push dword ptr [ebp + 0x18]; call dword ptr [eax]; 
0x08060817: or dword ptr [ebx], 8; add esp, 0x18; pop ebx; ret; 
0x080863a9: or dword ptr [ecx + 0x39], 0xfffffffd; call dword ptr [eax - 1]; 
0x0808703c: or dword ptr [ecx + 0x3a], 0xfffffffd; call dword ptr [eax - 0x18]; 
0x080752a1: or dword ptr [ecx + 0x42], eax; test al, al; jne 0x2d29c; xor eax, eax; ret; 
0x0804a4cd: or dword ptr [ecx + esi*8], 0xfffffffc; call dword ptr [eax - 0x18]; 
0x08098c22: or dword ptr [ecx], eax; add byte ptr [eax], al; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x08067048: or dword ptr [ecx], edi; ret 0x3374; 
0x08077ace: or dword ptr [edi + ebp - 0x75], esi; pop esp; and al, 0x20; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x08060ee1: or dword ptr [edi - 2], ecx; dec dword ptr [ebp - 0x30d5f45]; inc dword ptr [ebx - 0x72aff314]; cmp eax, 0; std; call dword ptr [edi - 1]; 
0x080a0f58: or dword ptr [edi - 2], ecx; dec dword ptr [edi]; inc esp; ret 0x758b; 
0x0807a98b: or dword ptr [edi], 0x29; std; call dword ptr [eax - 0x18]; 
0x080a43f4: or dword ptr [edi], ecx; xchg byte ptr [eax + 0x38000000], dh; ror byte ptr [edi], 1; test dword ptr [ebp - 0x7d000000], esi; ret; 
0x08071a82: or dword ptr [edx + 0x5b], esi; lea eax, [eax + 8]; pop edi; ret; 
0x08070c72: or dword ptr [edx + 0x5b], esi; lea eax, [edi + 8]; pop edi; ret; 
0x080b326a: or dword ptr [edx + eax*2], 0xfffffffd; call dword ptr [eax - 0x73]; 
0x080accf3: or dword ptr [edx + ebx*4], 0xfffffffe; call dword ptr [eax + 0x6a]; 
0x0807f0e3: or dword ptr [edx], 0x34; std; call dword ptr [eax - 0x18]; 
0x08083bd2: or dword ptr [edx], 0x34; std; call dword ptr [eax - 0x18]; ret; 
0x080a3d54: or dword ptr [edx], 1; add esp, 4; pop ebx; pop esi; ret; 
0x08067d9f: or dword ptr [edx], eax; lea edx, [edx - 0x77210]; cmovne eax, edx; ret; 
0x0806726f: or dword ptr [edx], eax; lea edx, [edx - 0x78a60]; cmovne eax, edx; ret; 
0x0805155f: or dword ptr [esi - 0x20], esi; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0807c0db: or eax, 0x10; mov dword ptr [edx + 4], eax; add esp, 4; pop ebx; pop esi; ret; 
0x0807613d: or eax, 0x14; jne 0x2e16c; add esp, 0x18; pop ebx; ret; 
0x080a4def: or eax, 0x14; jne 0x5ce20; add esp, 0x28; pop ebx; ret; 
0x080a4eb9: or eax, 0x14; jne 0x5cecc; add esp, 0x2c; ret; 
0x080a5179: or eax, 0x14; jne 0x5d18c; add esp, 0x2c; ret; 
0x080a5270: or eax, 0x14; jne 0x5d27b; add esp, 0x2c; ret; 
0x080a79fa: or eax, 0x14; jne 0x5fa05; add esp, 0x1c; ret; 
0x080a7b0d: or eax, 0x14; jne 0x5fb18; add esp, 0x2c; ret; 
0x080aba15: or eax, 0x14; jne 0x63a20; add esp, 0x2c; ret; 
0x080adb30: or eax, 0x14; jne 0x65b3c; add esp, 0x28; pop ebx; ret; 
0x0807eb83: or eax, 0x33; std; call dword ptr [eax - 0x73]; 
0x08071ab2: or eax, 0x408d2b72; or al, 0x5f; ret; 
0x080abd35: or eax, 0x4389ffff; adc al, 0x83; les ebp, ptr [eax]; pop ebx; ret; 
0x08070ca2: or eax, 0x478d2b72; or al, 0x5f; ret; 
0x080b31c6: or eax, 0x500cec83; call edx; 
0x0808f14a: or eax, 0x5b012b83; pop esi; ret; 
0x080a75a2: or eax, 0x5b0cc483; pop esi; pop edi; pop ebp; ret; 
0x080a34f2: or eax, 0x5b1cc483; pop esi; pop edi; pop ebp; ret; 
0x0808a316: or eax, 0x5b2cc483; pop esi; pop edi; pop ebp; ret; 
0x0808a386: or eax, 0x5b3cc483; pop esi; pop edi; pop ebp; ret; 
0x0806826f: or eax, 0x81fffe1a; ret; 
0x0804fcaf: or eax, 0x83000000; ret 0xc702; 
0x0804a854: or eax, 0x8b000001; je 0x287f; or al, 0xc7; ret 0x6f84; 
0x08065e05: or eax, 0x978dfffd; sbb esi, edi; cld; call dword ptr [eax - 0x73]; 
0x08090c28: or eax, 0x9efe083; ror byte ptr [eax - 0x7a72f2ba], 1; xor bh, 0xff; call dword ptr [eax + 0x56]; 
0x0807c056: or eax, 1; mov dword ptr [edx + 4], eax; add esp, 4; pop ebx; pop esi; ret; 
0x0807c01b: or eax, 2; mov dword ptr [edx + 4], eax; add esp, 4; pop ebx; pop esi; ret; 
0x0804a7c4: or eax, 2; mov ecx, eax; mov eax, 0x180; mov ebx, 0x3002; int 0x80; 
0x0807c116: or eax, 8; mov dword ptr [edx + 4], eax; add esp, 4; pop ebx; pop esi; ret; 
0x0807a276: or eax, dword ptr [eax]; add byte ptr [ebp - 0x2d7c07d], cl; call dword ptr [eax - 0x18]; 
0x08071bde: or eax, dword ptr [eax]; je 0x29c62; mov eax, 0xc; pop edi; ret; 
0x080b1a87: or eax, dword ptr [ebp - 0x367bf037]; jl 0x69a88; dec dword ptr [ebp - 0x72c7db8c]; je 0x69abd; add byte ptr [ecx - 0x7c17760e], cl; ret; 
0x080969f8: or eax, dword ptr [ebx + 0x5e5b04c4]; ret; 
0x08079377: or ebp, edi; inc dword ptr [ecx + 0x6bc86c3]; add byte ptr [ebx - 0x7c72eb14], al; adc byte ptr [ecx], ah; std; call dword ptr [eax - 0x18]; 
0x080887f4: or ebx, dword ptr [ebx + 0x5e]; pop edi; ret; 
0x08076674: or ebx, dword ptr [ebx - 0x77]; rcr byte ptr [esi + 0x5f], 1; ret; 
0x08077f42: or ecx, 0x43; add byte ptr [eax], al; ret; 
0x08060818: or ecx, dword ptr [eax]; add esp, 0x18; pop ebx; ret; 
0x080b059c: or ecx, dword ptr [ebx + 0x758bf45d]; clc; mov edi, dword ptr [ebp - 4]; leave; ret; 
0x08088a93: or edi, edi; jmp dword ptr [esi - 0x70]; 
0x08078c60: or edx, 0x20; std; call dword ptr [eax - 0x18]; 
0x080aa6f6: or edx, edi; dec dword ptr [ebx - 0x137c33a3]; or byte ptr [ebp - 0x1676f7d], cl; call dword ptr [eax + 0x6a]; 
0x08071aa2: or esi, dword ptr [edx + 0x3b]; lea eax, [eax + 0xa]; pop edi; ret; 
0x08070c92: or esi, dword ptr [edx + 0x3b]; lea eax, [edi + 0xa]; pop edi; ret; 
0x08099533: or esi, esp; std; inc dword ptr [ebx - 0x77cef3c]; push dword ptr [esi + edi - 0x77]; ret 0xe283; 
0x08081e2a: or esp, 0x35; std; call dword ptr [eax - 0x73]; 
0x080591af: or esp, 0xfffffffc; cld; call dword ptr [eax - 0x73]; 
0x08088817: or esp, dword ptr [ebp - 0x77]; adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x080afd9f: or esp, dword ptr [esi - 0x7f]; cli; syscall; 
0x080938f5: or esp, eax; mov dword ptr [ebp - 0x494], 0; mov eax, dword ptr [edi + eax*4 - 0x12c0]; jmp eax; 
0x080939d5: or esp, eax; mov dword ptr [ebp - 0x494], 1; mov eax, dword ptr [edi + eax*4 - 0x12c0]; jmp eax; 
0x08092a65: or esp, eax; mov dword ptr [ebp - 0x4a4], 0x20; mov ebx, dword ptr [ebp - 0x4c0]; mov eax, dword ptr [ebx + eax*4]; jmp eax; 
0x08093985: or esp, eax; mov dword ptr [ebp - 0x4a8], 0; mov eax, dword ptr [edi + eax*4 - 0x12c0]; jmp eax; 
0x08092a1d: or esp, eax; mov ebx, dword ptr [ebp - 0x4c0]; mov eax, dword ptr [ebx + eax*4]; jmp eax; 
0x08061078: out 0, al; add al, dh; dec dword ptr [ecx + 0xae8df2]; add byte ptr [eax], dl; add byte ptr [ecx], ch; ret 0x850f; 
0x0806c49b: out 0, eax; add byte ptr [eax], al; pop ebx; ret; 
0x08086f08: out 0x2b, al; std; jmp dword ptr [ebp - 0x75]; 
0x0807e0d5: out 0x2d, al; std; call dword ptr [eax - 0x18]; 
0x08096079: out 0x35, eax; sti; jmp dword ptr [esi - 0x70]; 
0x0804a964: out 0x39, eax; ret 0x860f; 
0x0806825a: out 0x42, eax; jo 0x201df; ret 0x80; 
0x080b2a29: out 0x83, al; les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x080ac16a: out 0x89, al; ret 0x25; 
0x0808a758: out 0x89, eax; fcomp dword ptr [ebx + 0x5e]; ret; 
0x0809a421: out 0x89, eax; ret 0x25; 
0x0807724f: out 0x8b, al; pop esp; and al, 0x20; mov edi, dword ptr [esp + 0x2c]; mov eax, 0x8c; call dword ptr gs:[0x10]; 
0x08079b88: out 0x8b, eax; inc ebx; add al, 0x83; ret; 
0x0807c31b: out 0x8c, eax; push es; add bh, dh; fadd st(7); ret 0xffe0; 
0x08092186: out 0x8d, al; cld; dec dword ptr [ebp - 0x3068b79]; call dword ptr [eax + 0x68]; 
0x080ab7d9: out 0xb8, al; add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; ret; 
0x0809ca5f: out 0xfa, al; dec dword ptr [ebp - 0x1c47b7d]; call dword ptr [eax + 0x6a]; 
0x08099534: out 0xfd, al; inc dword ptr [ebx - 0x77cef3c]; push dword ptr [esi + edi - 0x77]; ret 0xe283; 
0x0805fc13: out 0xff, eax; dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; lea esi, [esi]; ret; 
0x08060713: out 0xff, eax; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x080912c3: out 0xff, eax; inc dword ptr [ebx - 0x6a76fb14]; idiv edi; call dword ptr [ebx - 0x77]; 
0x08098462: out dx, al; add al, 0x83; out dx, al; add al, 0xf7; ret 0; 
0x08098465: out dx, al; add al, 0xf7; ret 0; 
0x08070ece: out dx, al; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret 0xc085; 
0x08068312: out dx, al; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x08082748: out dx, al; ret 0; 
0x08070755: out dx, eax; adc byte ptr [ecx], al; clc; pop edi; ret; 
0x08071a1c: out dx, eax; adc byte ptr [edi], cl; cmp byte ptr [eax + eax + 0x408d0000], 0xf; pop edi; ret; 
0x0804b82e: out dx, eax; add dword ptr [eax], eax; add byte ptr [ebp - 0x137cf7b0], cl; or byte ptr [ebp - 0x30cd77d], cl; call dword ptr [eax + 0x52]; 
0x08071a51: out dx, eax; add eax, 0x87820f; add byte ptr [eax], al; lea eax, [eax + 4]; pop edi; ret; 
0x0805f00c: out dx, eax; add esp, 4; pop ebx; pop esi; ret; 
0x080682e2: out dx, eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x08071a91: out dx, eax; or dh, byte ptr [edx + 0x4b]; lea eax, [eax + 9]; pop edi; ret; 
0x08071a81: out dx, eax; or dword ptr [edx + 0x5b], esi; lea eax, [eax + 8]; pop edi; ret; 
0x08071ab1: out dx, eax; or eax, 0x408d2b72; or al, 0x5f; ret; 
0x08071aa1: out dx, eax; or esi, dword ptr [edx + 0x3b]; lea eax, [eax + 0xa]; pop edi; ret; 
0x0805efb5: out dx, eax; pop ebx; pop esi; pop edi; ret; 
0x08071a71: out dx, eax; pop es; jb 0x29ae0; lea eax, [eax + 6]; pop edi; ret; 
0x08071ac1: out dx, eax; push cs; jb 0x29ae0; lea eax, [eax + 0xd]; pop edi; ret; 
0x08071a61: out dx, eax; push es; jb 0x29ae0; lea eax, [eax + 5]; pop edi; ret; 
0x0806bb34: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x2c73; 
0x0806c4f5: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x3273; 
0x0806bb1f: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x3e73; 
0x0806c4db: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x4c73; 
0x0806bb0a: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x5073; 
0x0806baf5: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x6273; 
0x0806c4c1: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x6673; 
0x0806bbc1: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0807a8ae: out dx, eax; sub ch, bh; call dword ptr [eax - 0x18]; 
0x080516ee: outsb dx, byte ptr [esi]; clc; cld; call dword ptr [eax - 0x18]; 
0x08055056: outsb dx, byte ptr [esi]; idiv edi; dec dword ptr [ebp + 0xb6]; add byte ptr [ebx - 0x4937b], cl; jmp dword ptr [ebp - 0x39]; 
0x080545fe: outsb dx, byte ptr [esi]; imul eax, dword ptr [eax], 0x74878d00; stc; cld; call dword ptr [eax + 0x68]; 
0x08060124: outsb dx, byte ptr [esi]; or byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x080a3a72: outsb dx, byte ptr [esi]; push cs; or byte ptr [ebx - 0x7c72ff00], al; mov byte ptr [ebx - 2], cl; call dword ptr [eax - 0x73]; 
0x080a9933: outsb dx, byte ptr [esi]; push cs; or byte ptr [ecx - 0xab4b], cl; dec dword ptr [ecx - 0xb763]; inc edi; ret; 
0x08068062: outsb dx, byte ptr [esi]; shl byte ptr [esi + 0xf], 0x70; rol byte ptr [eax], 0xf7; ret 0xf; 
0x0806baf1: outsd dx, dword ptr [esi]; adc ah, byte ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x6273; 
0x08081b78: outsd dx, dword ptr [esi]; add dword ptr [eax], eax; add bh, dh; ret; 
0x080832b9: outsd dx, dword ptr [esi]; add dword ptr [eax], eax; add byte ptr [ebx - 0x72d3dba4], cl; add dword ptr [eax + 0x37], -3; call dword ptr [eax - 0x73]; 
0x0806f3a2: outsd dx, dword ptr [esi]; add ebx, esi; movq qword ptr [edx], mm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x0806f652: outsd dx, dword ptr [esi]; add ebx, esi; movq qword ptr [edx], mm0; lea eax, [edx + 0xf]; ret; 
0x0806db52: outsd dx, dword ptr [esi]; add ebx, esi; movq qword ptr [edx], mm0; mov eax, edi; pop edi; ret; 
0x0806dde2: outsd dx, dword ptr [esi]; add ebx, esi; movq qword ptr [edx], mm0; mov eax, edx; ret; 
0x0805ec5e: outsd dx, dword ptr [esi]; and byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x0806c342: outsd dx, dword ptr [esi]; dec eax; ret 0xff3; 
0x0806c2a2: outsd dx, dword ptr [esi]; dec eax; ret; 
0x0809c066: outsd dx, dword ptr [esi]; push cs; or bh, al; ret 0x4da0; 
0x080791b6: outsd dx, dword ptr [esi]; push cs; or byte ptr [ebx + 0xfc08500], cl; inc esp; ret 0x66c3; 
0x08079dee: outsd dx, dword ptr [esi]; push cs; or byte ptr [ecx - 0x38b7db84], cl; ret; 
0x080aafb8: outsd dx, dword ptr [esi]; push cs; or byte ptr [ecx - 0x74ebdbbc], cl; inc edi; add al, 0x89; ret; 
0x080a98d1: outsd dx, dword ptr [esi]; push cs; or byte ptr [ecx - 0x8f63], cl; inc edi; ret; 
0x080a3ce5: outsd dx, dword ptr [esi]; push cs; or byte ptr [esi + 1], bh; call dword ptr [eax]; 
0x0806bec8: outsd dx, dword ptr [esi]; push edx; ljmp 0xf66:0xd1ef0f66; cmp byte ptr [edi], dl; ret 0x830f; 
0x0806c347: outsd dx, dword ptr [esi]; push edx; ret 0xc2bb; 
0x0806c2a7: outsd dx, dword ptr [esi]; push edx; ret; 
0x080a7d07: outsd dx, dword ptr [esi]; ret; 
0x0804a45b: outsd dx, dword ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x080a862d: outsd dx, dword ptr [esi]; sub bh, dl; dec dword ptr [ebx - 0x72f3dba4]; sub dword ptr [eax - 0x6a], -2; call dword ptr [eax - 0x73]; 
0x08098a64: pcmpeqb mm3, qword ptr [ecx]; add eax, 2; ret; 
0x08098a4d: pcmpeqb mm4, qword ptr [eax]; ret; 
0x0807bcdd: pmaddwd mm7, mm7; call dword ptr [ebp + 0x6a]; 
0x08070ef9: pmovmskb eax, mm1; bsf eax, eax; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x08071534: pmovmskb eax, mm1; bsf eax, eax; lea eax, [edx + eax + 0x30]; ret; 
0x08070a6d: pmovmskb eax, mm1; test eax, eax; jne 0x28b40; xor eax, eax; pop edi; ret; 
0x08070f9f: pmovmskb eax, mm1; test eax, eax; jne 0x29000; xor eax, eax; pop edi; ret; 
0x08070f65: pmovmskb eax, mm1; test eax, eax; jne 0x29020; xor eax, eax; pop edi; ret; 
0x08070ef8: pmovmskb eax, xmm1; bsf eax, eax; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x08071533: pmovmskb eax, xmm1; bsf eax, eax; lea eax, [edx + eax + 0x30]; ret; 
0x08070a6c: pmovmskb eax, xmm1; test eax, eax; jne 0x28b40; xor eax, eax; pop edi; ret; 
0x08070f9e: pmovmskb eax, xmm1; test eax, eax; jne 0x29000; xor eax, eax; pop edi; ret; 
0x08070f64: pmovmskb eax, xmm1; test eax, eax; jne 0x29020; xor eax, eax; pop edi; ret; 
0x0807139e: pmovmskb ecx, mm0; test ecx, ecx; je 0x293b0; bsf ecx, ecx; add eax, ecx; ret; 
0x0807139d: pmovmskb ecx, xmm0; test ecx, ecx; je 0x293b0; bsf ecx, ecx; add eax, ecx; ret; 
0x080564d6: pop ds; add al, byte ptr [eax]; add byte ptr [ebx - 0x4737b], cl; inc dword ptr [eax - 0x42273]; call dword ptr [eax]; 
0x08098162: pop ds; add byte ptr [eax], al; jne 0x4fe80; xor eax, eax; pop edi; ret; 
0x080581c6: pop ds; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0807dbf8: pop ds; add byte ptr [eax], al; mov ecx, 0x81; mov edx, edi; call dword ptr gs:[0x10]; 
0x0807cbf1: pop ds; add byte ptr [eax], al; ret; 
0x08099820: pop ds; add esp, 4; pop ebx; pop esi; ret; 
0x080afdd0: pop ds; cdq; stc; dec dword ptr [ecx - 0x8d3dbbc]; ret 0; 
0x0804b81c: pop ds; cld; call dword ptr [edx + 0x50]; 
0x08098102: pop ds; jne 0x4fe80; xor eax, eax; pop edi; ret; 
0x08083f7d: pop ds; jno 0x3bf7c; dec dword ptr [ebx - 0x72cbdba4]; and dword ptr [eax], 0x37; std; call dword ptr [eax + 0x68]; 
0x080b0261: pop ds; mov dword ptr [ecx], eax; mov eax, dword ptr [edx + 0x4c]; ret; 
0x0809971a: pop ds; mov dword ptr [esp + 0xc], eax; mov eax, 0x8c; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x080a5b72: pop ds; pop ebx; pop esi; pop edi; ret; 
0x080a3a1d: pop ds; sbb bh, ah; inc dword ptr [ebx + 0x478910c4]; add al, 0x89; ret 0xc085; 
0x080773bd: pop ds; std; call dword ptr [eax + 0x6a]; 
0x080778a4: pop ds; std; call dword ptr [eax - 0x18]; 
0x08098c1d: pop dword ptr [eax]; add byte ptr [eax], al; mov eax, 0x109; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x0809483b: pop eax; adc bh, al; add ah, byte ptr [eax]; add byte ptr [eax], al; add cl, ch; ret 0xffe8; 
0x08060df6: pop eax; add al, 0x89; ret; 
0x080ae43a: pop eax; add esp, 8; pop ebx; ret; 
0x0808cf52: pop eax; and al, 0xfe; call dword ptr [eax + 0x56]; 
0x08080e7e: pop eax; call edi; 
0x08060ea3: pop eax; cmp byte ptr [ebx + 0x5e], bl; ret; 
0x08051a6c: pop eax; idiv edi; jmp dword ptr [ebp - 0x75]; 
0x080a4ce6: pop eax; jmp dword ptr [eax]; 
0x080713b7: pop eax; lea esi, [esi]; nop; xor eax, eax; ret; 
0x08058545: pop eax; mov dword ptr [ecx + 0x88], edx; ret; 
0x08088aa8: pop eax; mov eax, 0x77; int 0x80; 
0x08080994: pop eax; mov eax, dword ptr [esp + 0x48]; call eax; 
0x08074ef0: pop eax; mov edi, eax; mov esi, edx; mov eax, dword ptr [esp + 4]; ret; 
0x08096465: pop eax; or byte ptr [ecx + 0x10892048], cl; pop ebx; ret; 
0x080a5b6a: pop eax; pop ebx; pop esi; pop edi; ret; 
0x0805edb8: pop eax; pop edx; pop ebx; ret; 
0x08080e7a: pop eax; push dword ptr [esp + 0x58]; call edi; 
0x08080990: pop eax; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0807c9f5: pop eax; push ebp; push dword ptr [esp + 0x30]; mov eax, dword ptr [esp + 0x5c]; push dword ptr [eax + 4]; call edi; 
0x080b02ea: pop eax; ret; 
0x080796da: pop eax; sbb byte ptr [ecx + 0x40c61c50], cl; and byte ptr [ecx], al; pop ebx; ret; 
0x080b01be: pop eax; xchg eax, ebp; stc; dec dword ptr [ebx + 0x8c48300]; pop ebx; ret; 
0x0808533d: pop ebp; cld; dec dword ptr [ebx - 0x72cbdba4]; and dword ptr [eax + 0x36], 0xfffffffd; call dword ptr [eax + 0x68]; 
0x0808531a: pop ebp; cld; dec dword ptr [ebx - 0x72cbdba4]; and dword ptr [eax + 0x36], 0xfffffffd; call dword ptr [eax - 0x73]; 
0x08049e5a: pop ebp; cld; leave; ret; 
0x080b048d: pop ebp; hlt; mov esi, dword ptr [ebp - 8]; mov edi, dword ptr [ebp - 4]; leave; ret; 
0x0805b5d1: pop ebp; in al, 0xc7; rcl ah, 0x62; push cs; or bh, al; ret; 
0x080aaa71: pop ebp; in al, 1; ret 0xde39; 
0x0805bd12: pop ebp; jmp eax; 
0x08049eec: pop ebp; lea esp, [ecx - 4]; ret; 
0x080a1b6b: pop ebp; les ecx, ptr [ebp - 0x1b7b87d]; call dword ptr [eax + 0x6a]; 
0x080b05b2: pop ebp; mov ah, 0x89; ret 0x5050; 
0x080a990a: pop ebp; mov bh, al; ret; 
0x080a1a5e: pop ebp; mov eax, 0xf20c1f6; xchg eax, esp; ror byte ptr [edi], 0x95; ret 0xe0d3; 
0x080591ac: pop ebp; mov eax, 0xfccc838d; cld; call dword ptr [eax - 0x73]; 
0x0805c82d: pop ebp; mov eax, edx; ret; 
0x080a08d1: pop ebp; or byte ptr [ebx + 0x3030846], cl; mov ebx, dword ptr [ebp - 0x74]; test ebx, ebx; jne 0x588ab; call eax; 
0x080751c1: pop ebp; pop ebx; pop esi; pop edi; ret; 
0x080a5ffd: pop ebp; pop esi; pop edi; ret; 
0x08066a63: pop ebp; ret 4; 
0x080a8420: pop ebp; ret 8; 
0x08049859: pop ebp; ret; 
0x0804bafa: pop ebp; rol byte ptr [ebx - 0x7c72f314], 1; adc bl, dh; cld; call dword ptr [eax - 0x18]; 
0x080a1a7f: pop ebp; ror byte ptr [ebp - 0x76f7cd8c], 1; ret 0xc383; 
0x080932c1: pop ebx; adc dword ptr [eax], eax; add byte ptr [ebx - 0x46f43], al; call dword ptr [ebx + 0xf]; 
0x08079d83: pop ebx; add al, byte ptr [eax]; add byte ptr [ebx + 0x9e0b1], cl; add bh, al; ret; 
0x08098201: pop ebx; add dword ptr [eax], eax; add byte ptr [edi], cl; mov ebp, 0x5ff801c0; ret; 
0x080af743: pop ebx; add dword ptr [ecx], eax; ret; 
0x080a96f4: pop ebx; add eax, dword ptr [edx + 4]; pop esi; pop edi; jmp eax; 
0x08096f38: pop ebx; add eax, ecx; ret; 
0x080672a6: pop ebx; cmovne eax, ecx; ret; 
0x08077f6d: pop ebx; cmp eax, 0xfffff001; jae 0x34310; ret; 
0x080ab981: pop ebx; idiv ecx; call dword ptr [eax + 0x6a]; 
0x08071a84: pop ebx; lea eax, [eax + 8]; pop edi; ret; 
0x08070c74: pop ebx; lea eax, [edi + 8]; pop edi; ret; 
0x08095bc8: pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x0806b9f0: pop ebx; mov eax, 1; ja 0x239fa; neg eax; ret; 
0x0806ba9f: pop ebx; mov eax, 1; ja 0x23aa9; neg eax; ret; 
0x0806c586: pop ebx; mov eax, 1; ja 0x24590; neg eax; ret; 
0x0807e250: pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x0805caa8: pop ebx; mov eax, dword ptr [edi + 0x10]; pop esi; pop edi; jmp eax; 
0x0805e5ff: pop ebx; mov eax, dword ptr [edi + 0x14]; pop esi; pop edi; jmp eax; 
0x08096cc0: pop ebx; mov eax, dword ptr [edx]; pop esi; pop edi; ret; 
0x0805bc8d: pop ebx; mov eax, dword ptr [esi + 0x10]; pop esi; pop edi; jmp eax; 
0x0805e42b: pop ebx; mov eax, dword ptr [esi + 0xc]; pop esi; pop edi; jmp eax; 
0x0804b1cd: pop ebx; mov eax, ebp; pop esi; pop edi; pop ebp; ret; 
0x080612f5: pop ebx; mov eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x08058495: pop ebx; mov eax, edi; pop esi; pop edi; pop ebp; ret; 
0x08050abb: pop ebx; mov eax, edx; pop esi; pop edi; pop ebp; ret; 
0x08076675: pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x0805069d: pop ebx; mov eax, esi; pop esi; pop edi; pop ebp; ret; 
0x08071d82: pop ebx; mov eax, esi; pop esi; pop edi; ret; 
0x0806015d: pop ebx; neg eax; pop esi; pop edi; pop ebp; ret; 
0x0805cf7a: pop ebx; neg eax; ret; 
0x08053049: pop ebx; or al, byte ptr [eax]; add bh, al; test dword ptr [edi + esi*8 - 1], esp; call dword ptr [eax]; 
0x08049eeb: pop ebx; pop ebp; lea esp, [ecx - 4]; ret; 
0x080a5ffc: pop ebx; pop ebp; pop esi; pop edi; ret; 
0x08059d39: pop ebx; pop esi; jmp eax; 
0x080a843c: pop ebx; pop esi; mov eax, ebp; pop edi; pop ebp; ret 8; 
0x080866da: pop ebx; pop esi; mov eax, ebp; pop edi; pop ebp; ret; 
0x0809aa2e: pop ebx; pop esi; mov eax, edx; pop edi; pop ebp; ret; 
0x080b0d91: pop ebx; pop esi; mov eax, edx; pop edi; ret; 
0x080a395b: pop ebx; pop esi; pop edi; cmp eax, -1; cmove eax, edx; ret; 
0x08079247: pop ebx; pop esi; pop edi; cmp eax, 0xfffff001; jae 0x34310; ret; 
0x0805bd0f: pop ebx; pop esi; pop edi; pop ebp; jmp eax; 
0x08066a60: pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x080a841d: pop ebx; pop esi; pop edi; pop ebp; ret 8; 
0x08049856: pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0804b34d: pop ebx; pop esi; pop edi; ret; 
0x08098370: pop ebx; pop esi; pop edi; xor eax, eax; ret; 
0x0804af39: pop ebx; pop esi; ret; 
0x080a5704: pop ebx; pop esi; sbb eax, eax; and eax, 2; sub eax, 1; ret; 
0x08098319: pop ebx; pop esi; sub eax, 0x10; pop edi; ret; 
0x0806a32c: pop ebx; pop esi; sub eax, edi; pop edi; ret; 
0x080a7d5d: pop ebx; pop esi; sub eax, edx; pop edi; pop ebp; ret; 
0x08097cb0: pop ebx; pop esi; xor eax, eax; pop edi; ret; 
0x08049022: pop ebx; ret; 
0x0805d651: pop ebx; sbb byte ptr [eax], al; add byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x0805c4a1: pop ebx; stosd dword ptr es:[edi], eax; add dword ptr [eax], eax; add esp, 0x18; pop ebx; ret; 
0x08096fd5: pop ebx; sub eax, edx; ret; 
0x080a7d30: pop ebx; xor eax, eax; pop esi; pop edi; pop ebp; ret; 
0x0807e242: pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x0806bab0: pop ebx; xor eax, eax; ret; 
0x08059a17: pop ecx; add al, 0x29; ret 0xd089; 
0x08064281: pop ecx; add al, 0xf6; ret; 
0x080a90a3: pop ecx; add dl, bh; inc edi; ret 0x5a00; 
0x080b053b: pop ecx; jmp ecx; 
0x080987c5: pop ecx; movzx esi, al; push esi; push dword ptr [ebp]; call edi; 
0x080a4ce5: pop ecx; pop eax; jmp dword ptr [eax]; 
0x08049eea: pop ecx; pop ebx; pop ebp; lea esp, [ecx - 4]; ret; 
0x08077da6: pop ecx; push cs; or byte ptr [ebx + 0x74c08500], cl; add eax, 0x5b08c483; ret; 
0x080a9927: pop ecx; push cs; or byte ptr [ecx - 0xb363], cl; inc edi; ret; 
0x08062478: pop ecx; push cs; or byte ptr [ecx], ch; ret 0x98b; 
0x0807aac1: pop ecx; sub ebp, edi; call dword ptr [eax - 0x18]; 
0x080a4d01: pop edi; add byte ptr [eax], al; pop edx; pop ecx; pop eax; jmp dword ptr [eax]; 
0x08057ffd: pop edi; add dword ptr [eax], eax; add byte ptr [ebx + 0x6a08ec], al; push edi; call dword ptr [ebx + 8]; 
0x080a395d: pop edi; cmp eax, -1; cmove eax, edx; ret; 
0x08079249: pop edi; cmp eax, 0xfffff001; jae 0x34310; ret; 
0x0807ae29: pop edi; idiv edi; dec dword ptr [ebp - 0x2d5877d]; call dword ptr [eax - 0x73]; 
0x0805bc92: pop edi; jmp eax; 
0x08068800: pop edi; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x080a3e19: pop edi; mov edx, dword ptr [esp + 4]; mov ecx, eax; mov eax, dword ptr [esp + 0xc]; add esp, 0x20; jmp ecx; 
0x0805bd11: pop edi; pop ebp; jmp eax; 
0x0805c82c: pop edi; pop ebp; mov eax, edx; ret; 
0x08066a62: pop edi; pop ebp; ret 4; 
0x080a841f: pop edi; pop ebp; ret 8; 
0x08049858: pop edi; pop ebp; ret; 
0x080745de: pop edi; pop ebx; ret; 
0x0806b49b: pop edi; pop esi; pop ebx; ret; 
0x08074b98: pop edi; pop esi; ret; 
0x08058a0c: pop edi; push cs; or bh, al; ret 0x62d4; 
0x0804b34f: pop edi; ret; 
0x0804a3a6: pop edi; stc; call dword ptr [eax - 0x73]; 
0x08098372: pop edi; xor eax, eax; ret; 
0x0808ef5d: pop edx; add al, 0x83; ret 0x8304; 
0x08077dc6: pop edx; and ch, bh; call dword ptr [eax - 0x18]; 
0x080a3e6b: pop edx; mov ecx, dword ptr [esp]; mov dword ptr [esp], eax; mov eax, dword ptr [esp + 4]; ret 0x14; 
0x080a3d94: pop edx; mov ecx, dword ptr [esp]; mov dword ptr [esp], eax; mov eax, dword ptr [esp + 4]; ret 0xc; 
0x0806c554: pop edx; or al, 0x39; fnstcw word ptr [eax]; jne 0x24570; pop ebx; ret; 
0x080661a6: pop edx; pop ebx; pop esi; ret; 
0x0805edb9: pop edx; pop ebx; ret; 
0x080987c4: pop edx; pop ecx; movzx esi, al; push esi; push dword ptr [ebp]; call edi; 
0x080a4ce4: pop edx; pop ecx; pop eax; jmp dword ptr [eax]; 
0x080a3e6a: pop edx; pop edx; mov ecx, dword ptr [esp]; mov dword ptr [esp], eax; mov eax, dword ptr [esp + 4]; ret 0x14; 
0x080ad121: pop edx; push cs; or bh, al; ret; 
0x08070fa5: pop edx; xor eax, eax; pop edi; ret; 
0x0809c061: pop es; add bh, al; sar dword ptr [edi + ebp*2], 0xe; or bh, al; ret 0x4da0; 
0x08098152: pop es; add byte ptr [eax], al; jne 0x4fe80; xor eax, eax; pop edi; ret; 
0x0806bdfa: pop es; add byte ptr [eax], al; pop ebx; ret; 
0x0806728d: pop es; add byte ptr [ebx - 0x39], dl; ret; 
0x08095b7b: pop es; add dword ptr [edi], ecx; inc ebp; ret 0xec83; 
0x080a55a6: pop es; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x08079c44: pop es; and al, 0xe9; ret; 
0x0804a4ad: pop es; call dword ptr [esi]; 
0x080a80fa: pop es; iretd; add eax, dword ptr [eax]; mov eax, 0x80e6f60; mov eax, dword ptr [eax]; ret; 
0x08070c62: pop es; jb 0x28cd0; lea eax, [edi + 6]; pop edi; ret; 
0x08071a72: pop es; jb 0x29ae0; lea eax, [eax + 6]; pop edi; ret; 
0x080980f2: pop es; jne 0x4fe80; xor eax, eax; pop edi; ret; 
0x0806f47d: pop es; lea eax, [edx + 0xa]; pop edi; ret; 
0x0806f5bd: pop es; lea eax, [edx + 0xa]; ret; 
0x0806f4e1: pop es; lea eax, [edx + 0xe]; pop edi; ret; 
0x0806f641: pop es; lea eax, [edx + 0xe]; ret; 
0x0807920d: pop es; mov dword ptr [ebx + 0x968], eax; pop ebx; pop esi; pop edi; ret; 
0x0807006c: pop es; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; pop edi; ret; 
0x080701cc: pop es; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x0806fa4c: pop es; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x0806fbac: pop es; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x0809bd2e: pop es; mov eax, 0x80e5cd4; push dword ptr [ebp + 0x18]; call dword ptr [eax]; 
0x0806dc0d: pop es; mov eax, edi; pop edi; ret; 
0x0806dd4d: pop es; mov eax, edx; ret; 
0x0807412d: pop es; mov ecx, dword ptr [ebx + ecx*4 - 0x2b4c0]; mov eax, dword ptr [ebx + eax*4 - 0x2b4c0]; sub eax, ecx; pop ebx; ret; 
0x080700ec: pop es; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x0807024c: pop es; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x0806facc: pop es; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x0806fc2c: pop es; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x0806f476: pop es; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; pop edi; ret; 
0x0806f5b6: pop es; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x0806dc06: pop es; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x0806dd46: pop es; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x0806f4d8: pop es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; pop edi; ret; 
0x0806f638: pop es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x0806dc68: pop es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edi; pop edi; ret; 
0x0806ddc8: pop es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x08069f33: pop es; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x0808000e: pop es; or byte ptr [edi], 0x87; ret; 
0x080a5b69: pop es; pop eax; pop ebx; pop esi; pop edi; ret; 
0x080a96f3: pop es; pop ebx; add eax, dword ptr [edx + 4]; pop esi; pop edi; jmp eax; 
0x080687ff: pop es; pop edi; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0806f32a: pop es; pop edi; ret; 
0x0805fdfa: pop es; push edx; or byte ptr [eax], al; mov eax, 0x80e5098; mov eax, dword ptr [eax]; ret; 
0x0806f56a: pop es; ret; 
0x08069f37: pop es; sub eax, ecx; ret; 
0x08088795: pop es; sub esp, edi; jmp dword ptr [esi - 0x70]; 
0x080a4ce1: pop esi; add byte ptr [eax], al; pop edx; pop ecx; pop eax; jmp dword ptr [eax]; 
0x080aebd8: pop esi; add cl, byte ptr [edi]; scasd eax, dword ptr es:[edi]; xchg dword ptr [eax + 0x1000000], esi; ret 0x9789; 
0x080aeb48: pop esi; add ecx, dword ptr [edi]; scasd eax, dword ptr es:[edi]; xchg dword ptr [eax + 0x1000000], esi; ret 0x9789; 
0x08098352: pop esi; bsr eax, eax; add eax, edi; sub eax, 0x10; pop edi; ret; 
0x0809588a: pop esi; cmp byte ptr [ebp - 0x6377f025], al; add byte ptr [eax], al; add byte ptr [ebx + 0x949e], cl; add bh, al; ret 0x5f80; 
0x08059d3a: pop esi; jmp eax; 
0x080a843d: pop esi; mov eax, ebp; pop edi; pop ebp; ret 8; 
0x080866db: pop esi; mov eax, ebp; pop edi; pop ebp; ret; 
0x0809aa2f: pop esi; mov eax, edx; pop edi; pop ebp; ret; 
0x080b0d92: pop esi; mov eax, edx; pop edi; ret; 
0x08049fb6: pop esi; or bh, dh; ret; 
0x0806b49c: pop esi; pop ebx; ret; 
0x080a395c: pop esi; pop edi; cmp eax, -1; cmove eax, edx; ret; 
0x08079248: pop esi; pop edi; cmp eax, 0xfffff001; jae 0x34310; ret; 
0x0805bc91: pop esi; pop edi; jmp eax; 
0x0805bd10: pop esi; pop edi; pop ebp; jmp eax; 
0x08066a61: pop esi; pop edi; pop ebp; ret 4; 
0x080a841e: pop esi; pop edi; pop ebp; ret 8; 
0x08049857: pop esi; pop edi; pop ebp; ret; 
0x080745dd: pop esi; pop edi; pop ebx; ret; 
0x0804b34e: pop esi; pop edi; ret; 
0x08098371: pop esi; pop edi; xor eax, eax; ret; 
0x0807c2e3: pop esi; push cs; or bh, al; ret 0x59a4; 
0x0804af3a: pop esi; ret; 
0x08076008: pop esi; sbb bh, ch; call dword ptr [eax - 0x18]; 
0x080a5705: pop esi; sbb eax, eax; and eax, 2; sub eax, 1; ret; 
0x0809831a: pop esi; sub eax, 0x10; pop edi; ret; 
0x0806a32d: pop esi; sub eax, edi; pop edi; ret; 
0x080a7d5e: pop esi; sub eax, edx; pop edi; pop ebp; ret; 
0x0805c829: pop esi; sub edx, edi; pop edi; pop ebp; mov eax, edx; ret; 
0x08049fad: pop esi; xor al, 0x89; dec esi; cmp byte ptr [ecx + 0x5e8b3c56], cl; or bh, dh; ret; 
0x08074c52: pop esi; xor eax, eax; pop ebx; ret; 
0x08097cb1: pop esi; xor eax, eax; pop edi; ret; 
0x0808e928: pop esp; add al, byte ptr [eax]; add byte ptr [ebx + 0xf0c2454], cl; mov esi, 0xc7542444; ret 0xfff0; 
0x0809936f: pop esp; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x080a67c0: pop esp; add eax, dword ptr [eax]; add byte ptr [ebx + 0x29342454], cl; ret 0x5489; 
0x080ae407: pop esp; add esp, 8; pop ebx; ret; 
0x08099877: pop esp; and al, 0x10; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x08079238: pop esp; and al, 0x10; mov eax, 0xa3; call dword ptr gs:[0x10]; 
0x08077beb: pop esp; and al, 0x10; mov edx, eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x080a7ec5: pop esp; and al, 0x10; mov esi, dword ptr [esp + 0x1c]; mov edi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x080b0226: pop esp; and al, 0x18; mov dword ptr [eax], ebx; add esp, 8; pop ebx; ret; 
0x08062400: pop esp; and al, 0x1c; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08077b01: pop esp; and al, 0x20; lea edx, [esp + 4]; mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x08077ad2: pop esp; and al, 0x20; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x08077251: pop esp; and al, 0x20; mov edi, dword ptr [esp + 0x2c]; mov eax, 0x8c; call dword ptr gs:[0x10]; 
0x080998cf: pop esp; and al, 0x40; lea edx, [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0809e106: pop esp; and al, 0x44; push dword ptr [esp + 0x38]; call dword ptr [ebx + 0x38]; 
0x08076fdf: pop esp; and al, 0xc; call dword ptr gs:[0x10]; 
0x080659c7: pop esp; and al, 0xc; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08077f2b: pop esp; and al, 4; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x08079267: pop esp; and al, 4; mov eax, 0x74; call dword ptr gs:[0x10]; 
0x080995a7: pop esp; and al, 4; mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x080769fb: pop esp; and al, 4; mov eax, 0xfc; call dword ptr gs:[0x10]; 
0x08077a8b: pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x080999a6: pop esp; and al, 8; int 0x80; 
0x080abc5e: pop esp; and al, 8; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x08077f5e: pop esp; and al, 8; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x08077328: pop esp; and al, 8; mov eax, 0xb7; mov ecx, edi; call dword ptr gs:[0x10]; 
0x08077f8e: pop esp; and al, 8; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x080a7e63: pop esp; and al, 8; test edx, edx; cmovs edx, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x08083264: pop esp; call edi; 
0x08050bcb: pop esp; clc; cld; call dword ptr [eax - 0x73]; 
0x080853bd: pop esp; cld; dec dword ptr [ebx - 0x72cbdba4]; and dword ptr [eax], 0x36; std; call dword ptr [eax - 0x73]; 
0x08085403: pop esp; cld; jmp dword ptr [esi - 0x70]; 
0x0809c2bc: pop esp; cmp edi, esi; call dword ptr [eax - 0x18]; 
0x080918f2: pop esp; idiv edi; call dword ptr [edx - 1]; 
0x08071c19: pop esp; mov eax, 0x10; pop edi; ret; 
0x08082ef4: pop esp; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0805d1a7: pop esp; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0809bd32: pop esp; push cs; or bh, bh; jne 0x53d50; call dword ptr [eax]; 
0x0807c9fe: pop esp; push dword ptr [eax + 4]; call edi; 
0x0808567c: pop esp; push dword ptr [esp + 0x50]; push dword ptr [esp + 0x50]; mov eax, dword ptr [esp + 0x38]; call eax; 
0x08083260: pop esp; push dword ptr [esp + 0x5c]; call edi; 
0x08082ef0: pop esp; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0807eff6: pop esp; push dword ptr [esp + 0x64]; call edi; 
0x0807f324: pop esp; push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x0807ee52: pop esp; push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x080804d8: pop esp; push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x0807f8fd: pop esp; push dword ptr [esp + 0x64]; mov edx, dword ptr [esp + 0x54]; call edx; 
0x080b029a: pop esp; ret; 
0x0807eb21: pop esp; sbb dword ptr [eax], eax; add byte ptr [edx], al; add esp, 8; pop ebx; ret; 
0x080747e5: pop ss; add dword ptr [eax], eax; add byte ptr [ebx - 0x76f3dbbc], cl; ret 0xe283; 
0x08099972: pop ss; add esp, 0x34; pop ebx; pop esi; ret; 
0x080a7295: pop ss; and edi, ebp; jmp dword ptr [esi - 0x70]; 
0x08098a48: pop ss; mov cl, dl; and cl, 0xf; je 0x50a70; ret; 
0x08049239: pop ss; mov eax, 0xf0; lea ebx, [ebp + 0x15cc]; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x0805e188: pop ss; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0806bb39: pop ss; ret 0x2c73; 
0x0806c4fa: pop ss; ret 0x3273; 
0x0806bb24: pop ss; ret 0x3e73; 
0x0806c4e0: pop ss; ret 0x4c73; 
0x0806bb0f: pop ss; ret 0x5073; 
0x0806bafa: pop ss; ret 0x6273; 
0x0806c4c6: pop ss; ret 0x6673; 
0x0806a059: pop ss; ret 0x830f; 
0x080a4d41: popal; add byte ptr [eax], al; pop edx; pop ecx; pop eax; jmp dword ptr [eax]; 
0x08050e82: popal; add eax, dword ptr [eax]; add byte ptr [ebx - 0x76d7dba4], cl; ret 0xdaf7; 
0x08049eee: popal; cld; ret; 
0x0809bf3b: popal; int1; cli; dec dword ptr [ebp - 0x1c3737d]; call dword ptr [eax - 0x73]; 
0x08094f11: popal; sti; dec dword ptr [ebp - 0x1dadb79]; call dword ptr [eax + 0x68]; 
0x08094ef2: popal; sti; dec dword ptr [ebp - 0x1dadb79]; call dword ptr [eax - 0x73]; 
0x080a66b4: popfd; add byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x0808dadf: popfd; add dword ptr [eax], eax; add dh, dh; ret 0xf50; 
0x0808129e: popfd; cld; dec dword ptr [ebx - 0x72d7dba4]; sub eax, 0x35; std; call dword ptr [eax - 0x73]; 
0x08090919: popfd; cld; idiv bh; dec dword ptr [edi]; xchg eax, ebp; ret; 
0x08087bbf: popfd; fdivp st(5); inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0808f9d3: popfd; idiv edi; dec dword ptr [edi]; cmp byte ptr [edx - 2], 0xff; jmp dword ptr [esi - 0x70]; 
0x08063436: popfd; lodsb al, byte ptr [esi]; add al, 0; add cl, ch; ret; 
0x0808cc2b: popfd; push 0x8bffffff; test dword ptr [edi + edi*8 - 1], edi; inc dword ptr [ecx]; ret; 
0x08061d1e: popfd; pushal; sbb byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0805f30d: popfd; sbb byte ptr [eax], bl; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0809f031: psadbw mm6, mm7; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x08086dbe: psubq mm7, mm7; jmp dword ptr [esi - 0x70]; 
0x08097232: push -0x24; std; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x080a97ad: push -0x39; ret 0x6eec; 
0x0807acb5: push -0x7d; les ebx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x0805b602: push -1; push dword ptr [eax]; call dword ptr [ebx + 0xc]; 
0x080590ed: push -1; push dword ptr [ebx]; call dword ptr [eax + 0xc]; 
0x08062ec0: push -2; cld; call dword ptr [eax - 0x73]; 
0x080aba58: push -4; call dword ptr [eax - 0x18]; 
0x08075c01: push 0; lea eax, [esp + 0x34]; push eax; push dword ptr [ebp + 8]; call esi; 
0x0805bfd8: push 0; mov eax, ebp; push ebx; push ecx; push esi; call dword ptr [eax + 0x40]; 
0x08075bff: push 0; push 0; lea eax, [esp + 0x34]; push eax; push dword ptr [ebp + 8]; call esi; 
0x08080e71: push 0; push 0; push 0; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; call edi; 
0x08083257: push 0; push 0; push 0; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x5c]; call edi; 
0x0807efed: push 0; push 0; push 0; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; call edi; 
0x0808192e: push 0; push 0; push 0; push dword ptr [esp + 0x60]; push dword ptr [esp + 0x60]; call edi; 
0x08080172: push 0; push 0; push 0; push dword ptr [esp + 0x60]; push dword ptr [esp + 0x68]; call edi; 
0x08083b6e: push 0; push 0; push 0; push dword ptr [esp + 0x68]; push dword ptr [esp + 0x68]; call edi; 
0x0807ca5c: push 0; push 0; push 0; push eax; push dword ptr [esi + 4]; call edi; 
0x08059b16: push 0; push 0; push dword ptr [esp + 0x24]; call dword ptr [ebx + 0x40]; 
0x080598b1: push 0; push 0; push dword ptr [esp + 0x24]; call dword ptr [edi + 0x40]; 
0x08080e73: push 0; push 0; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; call edi; 
0x08083259: push 0; push 0; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x5c]; call edi; 
0x0807efef: push 0; push 0; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; call edi; 
0x08081930: push 0; push 0; push dword ptr [esp + 0x60]; push dword ptr [esp + 0x60]; call edi; 
0x08080174: push 0; push 0; push dword ptr [esp + 0x60]; push dword ptr [esp + 0x68]; call edi; 
0x08083b70: push 0; push 0; push dword ptr [esp + 0x68]; push dword ptr [esp + 0x68]; call edi; 
0x0807ca5e: push 0; push 0; push eax; push dword ptr [esi + 4]; call edi; 
0x0805f525: push 0; push 0; push ebp; call dword ptr [ebx + 0x2c]; 
0x0805cefb: push 0; push 0; push ebx; call dword ptr [ebp + 0x24]; 
0x0805c257: push 0; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x0805cdfe: push 0; push 0; push esi; call dword ptr [edi + 0x40]; 
0x0805aab4: push 0; push dword ptr [ebp - 0x34]; push ecx; push eax; push edi; call esi; 
0x080b1f99: push 0; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x69ef0; add esp, 0x1c; ret; 
0x08059b18: push 0; push dword ptr [esp + 0x24]; call dword ptr [ebx + 0x40]; 
0x080598b3: push 0; push dword ptr [esp + 0x24]; call dword ptr [edi + 0x40]; 
0x08075f7d: push 0; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x38]; call esi; 
0x08076925: push 0; push dword ptr [esp + 0x38]; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x34]; call edi; 
0x08080e75: push 0; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; call edi; 
0x0808325b: push 0; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x5c]; call edi; 
0x0807eff1: push 0; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; call edi; 
0x08081932: push 0; push dword ptr [esp + 0x60]; push dword ptr [esp + 0x60]; call edi; 
0x08080176: push 0; push dword ptr [esp + 0x60]; push dword ptr [esp + 0x68]; call edi; 
0x08083b72: push 0; push dword ptr [esp + 0x68]; push dword ptr [esp + 0x68]; call edi; 
0x0807ca60: push 0; push eax; push dword ptr [esi + 4]; call edi; 
0x0805f527: push 0; push ebp; call dword ptr [ebx + 0x2c]; 
0x0805c94b: push 0; push ebp; push edi; push ebx; call dword ptr [esi + 0x40]; 
0x0805cefd: push 0; push ebx; call dword ptr [ebp + 0x24]; 
0x08077fcd: push 0; push ebx; call esi; 
0x080595f5: push 0; push ebx; push ecx; push dword ptr [esp + 0x24]; call dword ptr [edi + 0x40]; 
0x08058004: push 0; push edi; call dword ptr [ebx + 8]; 
0x0805ebf5: push 0; push edi; push esi; push ebp; call dword ptr [ebx + 0x24]; 
0x08059765: push 0; push edx; push eax; mov esi, dword ptr [esp + 0x24]; push esi; call dword ptr [ebx + 0x40]; 
0x0805c13e: push 0; push edx; push eax; push esi; call dword ptr [ebx + 0x40]; 
0x0805c259: push 0; push esi; call dword ptr [ebx + 0x40]; 
0x0805ce00: push 0; push esi; call dword ptr [edi + 0x40]; 
0x080767b7: push 0; push esi; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x34]; call edi; 
0x080588c3: push 0x10; push edi; push esi; call dword ptr [eax + 0x1c]; 
0x080b013d: push 0x1a; push 1; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0809b264: push 0x1ffffff; ret 0xf029; 
0x08082eeb: push 0x2474ff50; pop esp; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x080b2874: push 0x28; push dword ptr [esp + 0x20]; mov eax, dword ptr [esp + 0x28]; call eax; 
0x080a2bff: push 0x3900001a; ret 0x273; 
0x0807fec9: push 0x4824448b; call eax; 
0x0808368f: push 0x5424448b; call eax; 
0x08079210: push 0x5b000009; pop esi; pop edi; ret; 
0x080a7f22: push 0x6600001b; add dword ptr [edx + eax*2], 1; ret; 
0x08083b77: push 0x682474ff; call edi; 
0x0808368b: push 0x682474ff; mov eax, dword ptr [esp + 0x54]; call eax; 
0x08075aea: push 0x7401f883; adc byte ptr [ebx + 0x1b7402f8], al; xor eax, eax; ret; 
0x08049cab: push 0x80e5f40; call eax; 
0x08049cab: push 0x80e5f40; call eax; add esp, 0x10; leave; ret; 
0x08049cf8: push 0x80e5f40; call edx; 
0x08049cf8: push 0x80e5f40; call edx; add esp, 0x10; leave; ret; 
0x080986c4: push 0x83fffdc8; les ebx, ptr [eax]; pop ebx; ret; 
0x08075b44: push 0x83fffff4; les ebx, ptr [eax]; pop ebx; ret; 
0x0808bc18: push 0x89ffffff; jecxz 0x43ba2; rcr byte ptr [ebx], 0x89; ret 0x25; 
0x08062eb0: push 0x8b000002; jl 0x1aedb; adc byte ptr [ebp - 0x2f17b79], cl; dec dword ptr [ebp - 0x3019569]; call dword ptr [eax - 0x73]; 
0x0808cc2c: push 0x8bffffff; test dword ptr [edi + edi*8 - 1], edi; inc dword ptr [ecx]; ret; 
0x0804a26d: push 0x8c8b080e; and al, 0x98; add byte ptr [eax], al; add byte ptr [ebp - 0x76fb4fbc], cl; add al, bh; ret 0x4d88; 
0x0808fd07: push 0x8dfffff7; je 0x47d34; add byte ptr [eax - 0x3f7cef77], dl; add al, 0x83; ret 0x3910; 
0x080b00f1: push 0xa; push 1; call eax; 
0x080b00cb: push 0xa; push 1; mov eax, dword ptr [esp + 0x24]; call eax; 
0x080793b5: push 0xf37b838d; cld; call dword ptr [eax - 0x73]; 
0x0805f757: push 1; call 0x170a0; add esp, 0x1c; ret; 
0x080b000f: push 1; call eax; 
0x080b0796: push 1; call eax; add esp, 0x10; add esp, 0xc; ret; 
0x0805b2f2: push 1; cdq; push edx; push eax; push esi; call dword ptr [edi + 0x40]; 
0x0805a407: push 1; cdq; push edx; push edi; push esi; call dword ptr [ebp + 0x40]; 
0x080b00cd: push 1; mov eax, dword ptr [esp + 0x24]; call eax; 
0x08059b14: push 1; push 0; push 0; push dword ptr [esp + 0x24]; call dword ptr [ebx + 0x40]; 
0x0805cef9: push 1; push 0; push 0; push ebx; call dword ptr [ebp + 0x24]; 
0x0805c364: push 1; push 0; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x080b045a: push 1; push 1; call eax; 
0x08058657: push 1; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x10560; add esp, 0x1c; ret; 
0x08077fe1: push 1; push ebx; call esi; 
0x0805d925: push 1; push edx; push eax; push esi; call dword ptr [edi + 0x40]; 
0x08057a69: push 1; push esi; call eax; 
0x08095612: push 1; push esi; call edx; 
0x080a0f12: push 2; call 0x5a4b0; add esp, 0x20; mov eax, dword ptr [ebp - 0x60]; add eax, dword ptr [ebp - 0x5c]; call eax; 
0x080a0228: push 2; call 0x5a4b0; mov eax, dword ptr [ebp - 0x68]; add esp, 0x20; lea esi, [esi]; call eax; 
0x080598af: push 2; push 0; push 0; push dword ptr [esp + 0x24]; call dword ptr [edi + 0x40]; 
0x0805c255: push 2; push 0; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x0805cdfc: push 2; push 0; push 0; push esi; call dword ptr [edi + 0x40]; 
0x08077ff4: push 2; push ebx; call esi; 
0x0805cef7: push 3; push 1; push 0; push 0; push ebx; call dword ptr [ebp + 0x24]; 
0x08078004: push 3; push ebx; call edx; 
0x080b2c56: push 8; mov dword ptr [esp], ebp; call edi; 
0x080a735e: push cs; add byte ptr [eax], al; add byte ptr [ebp - 0x16d4f45], cl; dec dword ptr [ecx + 0xfa6f3c6]; xchg eax, edi; ret 0xda80; 
0x0805cf51: push cs; add esp, 8; pop ebx; ret; 
0x08074f68: push cs; call ecx; 
0x08064bfe: push cs; fcos; jmp dword ptr [ebp - 0x5f]; 
0x08070cb2: push cs; jb 0x28cd0; lea eax, [edi + 0xd]; pop edi; ret; 
0x08071ac2: push cs; jb 0x29ae0; lea eax, [eax + 0xd]; pop edi; ret; 
0x080a17fe: push cs; jmp dword ptr [ecx]; 
0x08071951: push cs; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x0806bac1: push cs; movzx eax, byte ptr [eax]; movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x0809c067: push cs; or bh, al; ret 0x4da0; 
0x0807c2e4: push cs; or bh, al; ret 0x59a4; 
0x08058e06: push cs; or bh, al; ret 0x5f80; 
0x08058a0d: push cs; or bh, al; ret 0x62d4; 
0x0805b5d7: push cs; or bh, al; ret; 
0x0809bd33: push cs; or bh, bh; jne 0x53d50; call dword ptr [eax]; 
0x080a33e2: push cs; or byte ptr [eax + 0xf75003a], al; mov eax, 0x80e6cc8; mov edx, dword ptr [eax]; mov eax, edx; ret; 
0x080a8b15: push cs; or byte ptr [ebp - 0x1c9f967], cl; dec dword ptr [ebx - 0x7aff7500]; ror byte ptr [edi], 0x44; ret; 
0x080ad744: push cs; or byte ptr [ebp - 0x1c9f96a], cl; dec dword ptr [ebx - 0x7aff7500]; ror byte ptr [edi], 0x44; ret 0xec83; 
0x080ad077: push cs; or byte ptr [ebp - 0x1c9f96e], cl; dec dword ptr [ebx - 0x7aff7500]; ror byte ptr [edi], 0x44; ret 0x4c89; 
0x080ad6fd: push cs; or byte ptr [ebp - 0x1c9f96f], cl; dec dword ptr [ebx - 0x7aff7500]; ror byte ptr [edi], 0x44; ret 0xec83; 
0x0809c241: push cs; or byte ptr [ebx + 0x5ba0cec], al; add byte ptr [eax], al; add byte ptr [ebx + 0x430f0539], al; adc dword ptr [ecx], edi; ret 0x430f; 
0x08077da7: push cs; or byte ptr [ebx + 0x74c08500], cl; add eax, 0x5b08c483; ret; 
0x080791b7: push cs; or byte ptr [ebx + 0xfc08500], cl; inc esp; ret 0x66c3; 
0x0804aba2: push cs; or byte ptr [ebx + 0xfc08500], cl; test byte ptr [edx], al; add al, byte ptr [eax]; add bh, al; ret 0x6f74; 
0x0804a84c: push cs; or byte ptr [ebx + 0xfd28512], cl; test dword ptr [0x8b000001], ecx; je 0x287f; or al, 0xc7; ret 0x6f84; 
0x0805f801: push cs; or byte ptr [ebx + 0xfff8538], cl; test ah, bh; add byte ptr [eax], al; add bh, al; ret; 
0x080a3a73: push cs; or byte ptr [ebx - 0x7c72ff00], al; mov byte ptr [ebx - 2], cl; call dword ptr [eax - 0x73]; 
0x0805bdec: push cs; or byte ptr [ecx + 0x244489d7], cl; adc al, 0x89; ret 0xc729; 
0x08079def: push cs; or byte ptr [ecx - 0x38b7db84], cl; ret; 
0x0807a26a: push cs; or byte ptr [ecx - 0x74d7dbbc], cl; add byte ptr [esi - 0x77], ah; cmp dword ptr [ebx + ecx - 0x7c730000], 0x3f; sub ch, bh; call dword ptr [eax - 0x18]; 
0x080aafb9: push cs; or byte ptr [ecx - 0x74ebdbbc], cl; inc edi; add al, 0x89; ret; 
0x080a98d2: push cs; or byte ptr [ecx - 0x8f63], cl; inc edi; ret; 
0x080a9934: push cs; or byte ptr [ecx - 0xab4b], cl; dec dword ptr [ecx - 0xb763]; inc edi; ret; 
0x080a9928: push cs; or byte ptr [ecx - 0xb363], cl; inc edi; ret; 
0x08049d45: push cs; or byte ptr [ecx], al; leave; ret; 
0x08062479: push cs; or byte ptr [ecx], ch; ret 0x98b; 
0x0805806d: push cs; or byte ptr [edi], cl; xchg eax, esp; ret 0xff81; 
0x080a3ce6: push cs; or byte ptr [esi + 1], bh; call dword ptr [eax]; 
0x08077e6e: push cs; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0806f4e4: push cs; pop edi; ret; 
0x0805bb7e: push cs; ret; 
0x080614d7: push cs; std; call dword ptr [edx - 0x73]; 
0x08062ebb: push cs; std; dec dword ptr [ebp - 0x3019569]; call dword ptr [eax - 0x73]; 
0x08062f74: push cs; std; dec dword ptr [ebp - 0x301e669]; call dword ptr [eax - 0x73]; 
0x08064447: push cs; std; dec dword ptr [ebp - 0x301e66a]; call dword ptr [eax - 0x73]; 
0x08066d79: push cs; std; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x0806a18c: push cs; sub eax, ecx; pop esi; pop edi; ret; 
0x0805fb39: push cs; sub edx, dword ptr [eax + 0xc]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x0807f0ba: push ds; add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; sbb dword ptr [ebx], 0x34; std; call dword ptr [eax - 0x18]; 
0x0804fe7d: push ds; leave; mov dword ptr [edx + 0x28], ecx; ret; 
0x0805ffa1: push ds; movzx eax, byte ptr [edx]; pop ebx; pop esi; ret; 
0x08085a82: push ds; sti; call 0x2a7f; add eax, 0x5f577; mov eax, dword ptr [eax + 0x1968]; ret; 
0x0807cc02: push ds; sti; call 0x2a7f; add eax, 0x683f7; mov eax, dword ptr [eax + 0x1fa8]; ret; 
0x0807cbe2: push ds; sti; call 0x2a7f; add eax, 0x68417; mov eax, dword ptr [eax + 0x1fa0]; ret; 
0x0807aee2: push ds; sti; call 0x2a7f; add eax, 0x6a117; lea eax, [eax + 0xa60]; ret; 
0x080a7e92: push ds; sti; mov eax, 0x14; call dword ptr gs:[0x10]; 
0x080a7e92: push ds; sti; mov eax, 0x14; call dword ptr gs:[0x10]; ret; 
0x08076f52: push ds; sti; mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x080995d2: push ds; sti; mov eax, 0xc7; call dword ptr gs:[0x10]; 
0x080995d2: push ds; sti; mov eax, 0xc7; call dword ptr gs:[0x10]; ret; 
0x08099612: push ds; sti; mov eax, 0xc8; call dword ptr gs:[0x10]; 
0x08099612: push ds; sti; mov eax, 0xc8; call dword ptr gs:[0x10]; ret; 
0x080995f2: push ds; sti; mov eax, 0xc9; call dword ptr gs:[0x10]; 
0x080995f2: push ds; sti; mov eax, 0xc9; call dword ptr gs:[0x10]; ret; 
0x08099632: push ds; sti; mov eax, 0xca; call dword ptr gs:[0x10]; 
0x08099632: push ds; sti; mov eax, 0xca; call dword ptr gs:[0x10]; ret; 
0x0805ef52: push ds; sti; mov eax, 0xffffffff; mov edx, 0xffffffff; ret; 
0x0805e7a2: push ds; sti; mov eax, 0xffffffff; ret; 
0x080a4cb2: push ds; sti; mov eax, dword ptr [eax + 4]; ret; 
0x080a4cc2: push ds; sti; mov eax, dword ptr [eax + 4]; sub eax, dword ptr gs:[0]; ret; 
0x0805fe22: push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x080b01d2: push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x48]; ret; 
0x080b0242: push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x080b0282: push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x50]; ret; 
0x080b02f2: push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x54]; ret; 
0x080b02e2: push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x58]; ret; 
0x080b0292: push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x5c]; ret; 
0x080b0272: push ds; sti; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x4c], edx; ret; 
0x0805fe32: push ds; sti; mov eax, dword ptr [esp + 4]; ret; 
0x08079262: push ds; sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x74; call dword ptr gs:[0x10]; 
0x080995a2: push ds; sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x08077a82: push ds; sti; push ebx; mov eax, 6; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x080a84f2: push ds; sti; ret 4; 
0x08049c72: push ds; sti; ret; 
0x0805eea2: push ds; sti; xor eax, eax; ret; 
0x080783f9: push ds; sub esp, 8; push dword ptr [ebx]; mov ebp, ebx; push esi; call edi; 
0x080950a4: push dword ptr [eax + 0xc]; push esi; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x1c]; 
0x0807c9ff: push dword ptr [eax + 4]; call edi; 
0x080a8671: push dword ptr [eax + 4]; push dword ptr [eax]; call 0x64f40; add esp, 0x1c; ret; 
0x080a866e: push dword ptr [eax + 8]; push dword ptr [eax + 4]; push dword ptr [eax]; call 0x64f40; add esp, 0x1c; ret; 
0x080a96d8: push dword ptr [eax + edx - 0x73]; sbb al, 0x96; nop; call dword ptr [ebx]; 
0x0804e2d4: push dword ptr [eax]; call 0x10b0; add esp, 0x18; pop ebx; ret; 
0x0807cb7d: push dword ptr [eax]; call 0x10d0; add esp, 0x18; pop ebx; ret; 
0x080a8674: push dword ptr [eax]; call 0x64f40; add esp, 0x1c; ret; 
0x080514c2: push dword ptr [eax]; call 0xc630; add esp, 0x1c; ret; 
0x0805b604: push dword ptr [eax]; call dword ptr [ebx + 0xc]; 
0x080784bd: push dword ptr [eax]; mov eax, dword ptr [ebp - 0x3c]; push dword ptr [ebp - 0x38]; mov dword ptr [ebp - 0x30], edx; call eax; 
0x0808cfd0: push dword ptr [eax]; push dword ptr [esp + 0x1c]; call 0x42770; add esp, 0x1c; ret; 
0x0809bd35: push dword ptr [ebp + 0x18]; call dword ptr [eax]; 
0x080b07e3: push dword ptr [ebp + 0xc]; push ebx; call dword ptr [ebp + 8]; 
0x08075c08: push dword ptr [ebp + 8]; call esi; 
0x080b0452: push dword ptr [ebp + 8]; push dword ptr [esi + 4]; push dword ptr [esi]; push 1; push 1; call eax; 
0x08058a27: push dword ptr [ebp + 8]; push eax; call dword ptr [ebx + 0x1c]; 
0x08095a6d: push dword ptr [ebp + 8]; push esi; call dword ptr [eax + 0x1c]; 
0x08095c80: push dword ptr [ebp + 8]; push esi; call dword ptr [ebx + 0x1c]; 
0x080b1c73: push dword ptr [ebp + ebx*4 + 8]; push dword ptr [esp + 0x20]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x080b2a8e: push dword ptr [ebp - 0x31]; pop ebx; pop esi; pop edi; ret; 
0x0805aab6: push dword ptr [ebp - 0x34]; push ecx; push eax; push edi; call esi; 
0x080784c2: push dword ptr [ebp - 0x38]; mov dword ptr [ebp - 0x30], edx; call eax; 
0x0805f042: push dword ptr [ebp - 0x3b]; add esp, 4; pop ebx; pop esi; ret; 
0x080528b1: push dword ptr [ebp - 0x884]; push dword ptr [ebp - 0x890]; call edx; 
0x0808b4ed: push dword ptr [ebp - 0x88]; call eax; 
0x08051e7c: push dword ptr [ebp - 0x890]; call dword ptr [ebx + 0x1c]; 
0x080528b7: push dword ptr [ebp - 0x890]; call edx; 
0x08051e76: push dword ptr [ebp - 0x898]; push dword ptr [ebp - 0x890]; call dword ptr [ebx + 0x1c]; 
0x080532a0: push dword ptr [ebp - 0x89c]; push dword ptr [ebp - 0x890]; call dword ptr [ebx + 0x1c]; 
0x08090289: push dword ptr [ebp - 0x8a0]; call dword ptr [ebx + 0x1c]; 
0x08090450: push dword ptr [ebp - 0x8a0]; call edx; 
0x08090679: push dword ptr [ebp - 0x8a0]; mov dword ptr [ebp - 0x8ac], ecx; call dword ptr [ebx + 0x1c]; 
0x08090acd: push dword ptr [ebp - 0x8a8]; push dword ptr [ebp - 0x8e8]; push dword ptr [ebp - 0x8a0]; call dword ptr [ebx + 0x1c]; 
0x08090ad3: push dword ptr [ebp - 0x8e8]; push dword ptr [ebp - 0x8a0]; call dword ptr [ebx + 0x1c]; 
0x0808b4e7: push dword ptr [ebp - 0xa0]; push dword ptr [ebp - 0x88]; call eax; 
0x080987ca: push dword ptr [ebp]; call edi; 
0x08098886: push dword ptr [ebp]; call esi; 
0x0804ffb9: push dword ptr [ebp]; push dword ptr [esi]; mov eax, dword ptr [esp + 0x1c]; call eax; 
0x0808650e: push dword ptr [ebx + 0x196c]; call 0x30a80; add esp, 0x18; pop ebx; ret; 
0x080a50a9: push dword ptr [ebx + 4]; call 0x56290; mov dword ptr [ebx + 8], eax; add esp, 0x28; pop ebx; ret; 
0x080ad842: push dword ptr [ebx + 4]; call 0x56290; mov dword ptr [ebx], eax; add esp, 0x28; pop ebx; ret; 
0x080b00ec: push dword ptr [ebx + 4]; push dword ptr [ebx]; push 0xa; push 1; call eax; 
0x08096ebc: push dword ptr [ebx + eax - 0x7d]; and ebp, edi; add esp, 4; pop ebx; pop esi; ret; 
0x0805efb0: push dword ptr [ebx + eax - 0x7d]; out dx, eax; pop ebx; pop esi; pop edi; ret; 
0x080b1b75: push dword ptr [ebx + ebp + 4]; push dword ptr [esp + 0x20]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x0807cc50: push dword ptr [ebx + edx - 0x7d]; in al, dx; or al, 0x57; call 0x32fa0; mov dword ptr [esp], esi; call edi; 
0x080aaf40: push dword ptr [ebx - 0x14]; call 0xf7fb8000; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x08085a29: push dword ptr [ebx - 0x7d]; in al, dx; or al, 0x57; call 0x32fa0; mov dword ptr [esp], esi; call edi; 
0x080a4d82: push dword ptr [ebx]; call 0x608e0; mov dword ptr [ebx + 0xc], eax; add esp, 0x28; pop ebx; ret; 
0x080590ef: push dword ptr [ebx]; call dword ptr [eax + 0xc]; 
0x080780d4: push dword ptr [ebx]; call esi; 
0x080783fd: push dword ptr [ebx]; mov ebp, ebx; push esi; call edi; 
0x080b00ef: push dword ptr [ebx]; push 0xa; push 1; call eax; 
0x080b08af: push dword ptr [ebx]; push dword ptr [esp + 0x10]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x0805c75c: push dword ptr [ecx - 0x75]; inc esi; add al, 0x8b; push esi; or byte ptr [ecx], ch; ret 0xfa39; 
0x08065555: push dword ptr [ecx]; jmp dword ptr [ebp - 0x39]; 
0x0809b79c: push dword ptr [ecx]; jmp dword ptr [ebp - 0x75]; 
0x080b0883: push dword ptr [ecx]; mov dword ptr [esp + 0x14], ecx; push eax; push dword ptr [esp + 0x10]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x08053089: push dword ptr [ecx]; rol byte ptr [eax - 0x8c743], cl; lcall [eax + 0xf]; xchg eax, esp; ret 0x5652; 
0x080a0cfb: push dword ptr [ecx]; shr cl, cl; ret; 
0x08077b9b: push dword ptr [edi + 0x12]; add esp, 4; pop ebx; pop esi; ret; 
0x0809988a: push dword ptr [edi + 0x13]; add esp, 4; pop ebx; pop esi; ret; 
0x08077c00: push dword ptr [edi + 0x1d]; add esp, 4; pop ebx; pop esi; ret; 
0x0809981e: push dword ptr [edi + 0x1f]; add esp, 4; pop ebx; pop esi; ret; 
0x08077121: push dword ptr [edi + 0x4c]; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x08077076: push dword ptr [edi + 0x67]; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x080a7edb: push dword ptr [edi + 0xa]; pop ebx; pop esi; pop edi; ret; 
0x08077c51: push dword ptr [edi + 0xc]; pop ebx; ret; 
0x08077e6c: push dword ptr [edi + 0xe]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x080a7e7b: push dword ptr [edi + 2]; pop ebx; ret; 
0x08077a99: push dword ptr [edi + 4]; pop ebx; ret; 
0x08076fed: push dword ptr [edi + 8]; pop ebx; ret; 
0x0805081e: push dword ptr [edi]; push dword ptr [esp + 0x4c]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x080507e0: push dword ptr [edi]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x080a9e22: push dword ptr [edx + edx - 0x75]; add dword ptr [ebx + 0x1be04c1], eax; add byte ptr [eax], al; add byte ptr [ebp + 0x391074c0], al; ret 0xd975; 
0x0807ca63: push dword ptr [esi + 4]; call edi; 
0x080b0005: push dword ptr [esi + 4]; push dword ptr [esi]; mov dword ptr [esp + 0x1c], edx; push ecx; push 1; call eax; 
0x080b0455: push dword ptr [esi + 4]; push dword ptr [esi]; push 1; push 1; call eax; 
0x0809953c: push dword ptr [esi + edi - 0x77]; ret 0xe283; 
0x0808f1ea: push dword ptr [esi - 0x2e]; mov dword ptr [ebx], edi; pop ebx; pop esi; pop edi; ret; 
0x080b0008: push dword ptr [esi]; mov dword ptr [esp + 0x1c], edx; push ecx; push 1; call eax; 
0x0804ffbc: push dword ptr [esi]; mov eax, dword ptr [esp + 0x1c]; call eax; 
0x080b0458: push dword ptr [esi]; push 1; push 1; call eax; 
0x080b1b73: push dword ptr [esi]; push dword ptr [ebx + ebp + 4]; push dword ptr [esp + 0x20]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x08066397: push dword ptr [esp + 0x10]; call eax; 
0x08088e35: push dword ptr [esp + 0x10]; call edi; 
0x080b088a: push dword ptr [esp + 0x10]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x08059663: push dword ptr [esp + 0x10]; mov edi, dword ptr [esp + 0x24]; push edi; call dword ptr [ebx + 0x40]; 
0x080b1c6f: push dword ptr [esp + 0x10]; push dword ptr [ebp + ebx*4 + 8]; push dword ptr [esp + 0x20]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x0805965f: push dword ptr [esp + 0x10]; push dword ptr [esp + 0x10]; mov edi, dword ptr [esp + 0x24]; push edi; call dword ptr [ebx + 0x40]; 
0x0805c04d: push dword ptr [esp + 0x10]; push dword ptr [esp + 0x10]; push esi; call dword ptr [ebx + 0x40]; 
0x0805b28b: push dword ptr [esp + 0x10]; push dword ptr [esp + 0x10]; push esi; call dword ptr [edi + 0x3c]; 
0x0805c051: push dword ptr [esp + 0x10]; push esi; call dword ptr [ebx + 0x40]; 
0x0805b28f: push dword ptr [esp + 0x10]; push esi; call dword ptr [edi + 0x3c]; 
0x0807af87: push dword ptr [esp + 0x18]; call 0x5b010; add esp, 0x18; pop ebx; ret; 
0x080514b8: push dword ptr [esp + 0x18]; mov eax, 0x80e5450; push dword ptr [eax]; call 0xc630; add esp, 0x1c; ret; 
0x08051995: push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x1c]; 
0x0805865d: push dword ptr [esp + 0x1c]; call 0x10560; add esp, 0x1c; ret; 
0x080514e2: push dword ptr [esp + 0x1c]; call 0x12af0; add esp, 0x1c; ret; 
0x08086210: push dword ptr [esp + 0x1c]; call 0x1da60; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0809868f: push dword ptr [esp + 0x1c]; call 0x2cea0; add esp, 0x18; pop ebx; ret; 
0x080986bf: push dword ptr [esp + 0x1c]; call 0x2cf30; add esp, 0x18; pop ebx; ret; 
0x08075b3f: push dword ptr [esp + 0x1c]; call 0x2cfb0; add esp, 0x18; pop ebx; ret; 
0x08077b4f: push dword ptr [esp + 0x1c]; call 0x2fab0; add esp, 0x1c; ret; 
0x0808cfd2: push dword ptr [esp + 0x1c]; call 0x42770; add esp, 0x1c; ret; 
0x080a7849: push dword ptr [esp + 0x1c]; call 0x63400; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x080a780b: push dword ptr [esp + 0x1c]; call 0x63400; add esp, 0x18; pop ebx; ret; 
0x080b1f9f: push dword ptr [esp + 0x1c]; call 0x69ef0; add esp, 0x1c; ret; 
0x08089942: push dword ptr [esp + 0x1c]; call 0x85b0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x08050c30: push dword ptr [esp + 0x1c]; call 0x8ae0; add esp, 0x1c; ret; 
0x0808f112: push dword ptr [esp + 0x1c]; call 0xc630; add esp, 0x1c; ret; 
0x08057e62: push dword ptr [esp + 0x1c]; call 0xfd50; add esp, 0x1c; ret; 
0x08058659: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x10560; add esp, 0x1c; ret; 
0x080514de: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x12af0; add esp, 0x1c; ret; 
0x0809868b: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x2cea0; add esp, 0x18; pop ebx; ret; 
0x08077b4b: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x2fab0; add esp, 0x1c; ret; 
0x080a7807: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x63400; add esp, 0x18; pop ebx; ret; 
0x080b1f9b: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x69ef0; add esp, 0x1c; ret; 
0x08050c2c: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x8ae0; add esp, 0x1c; ret; 
0x0808f10e: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xc630; add esp, 0x1c; ret; 
0x08057e5e: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xfd50; add esp, 0x1c; ret; 
0x0805acb9: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x12af0; add esp, 0x1c; ret; 
0x08077b47: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x2fab0; add esp, 0x1c; ret; 
0x08050c28: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x8ae0; add esp, 0x1c; ret; 
0x08088e08: push dword ptr [esp + 0x20]; call edi; 
0x080b1b79: push dword ptr [esp + 0x20]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x080b2876: push dword ptr [esp + 0x20]; mov eax, dword ptr [esp + 0x28]; call eax; 
0x08089150: push dword ptr [esp + 0x20]; push esi; call edi; 
0x08059b1a: push dword ptr [esp + 0x24]; call dword ptr [ebx + 0x40]; 
0x080593b2: push dword ptr [esp + 0x24]; call dword ptr [ebx + 0x48]; 
0x080595f9: push dword ptr [esp + 0x24]; call dword ptr [edi + 0x40]; 
0x080597cd: push dword ptr [esp + 0x24]; call ecx; 
0x08065aeb: push dword ptr [esp + 0x24]; push ebx; call eax; 
0x08065573: push dword ptr [esp + 0x24]; push esi; call eax; 
0x080a550a: push dword ptr [esp + 0x28]; mov eax, dword ptr [esp + 0x28]; call eax; 
0x080a54ad: push dword ptr [esp + 0x28]; mov edx, dword ptr [esp + 0x28]; call edx; 
0x08058829: push dword ptr [esp + 0x2c]; call 0x10670; add esp, 0x2c; ret; 
0x08075d53: push dword ptr [esp + 0x2c]; call 0x2e6a0; add esp, 0x2c; ret; 
0x0804b0f5: push dword ptr [esp + 0x2c]; call 0x40b0; add esp, 0x2c; ret; 
0x08089988: push dword ptr [esp + 0x2c]; call 0x419e0; add esp, 0x28; pop ebx; ret; 
0x08089f55: push dword ptr [esp + 0x2c]; call 0x419e0; add esp, 0x2c; ret; 
0x080b1fcf: push dword ptr [esp + 0x2c]; call 0x69ef0; add esp, 0x28; pop ebx; ret; 
0x08050595: push dword ptr [esp + 0x2c]; call 0x8240; add esp, 0x2c; ret; 
0x08050c68: push dword ptr [esp + 0x2c]; call 0x8cc0; add esp, 0x28; pop ebx; ret; 
0x08051225: push dword ptr [esp + 0x2c]; call 0x8cc0; add esp, 0x2c; ret; 
0x08058825: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x10670; add esp, 0x2c; ret; 
0x08075d4f: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x2e6a0; add esp, 0x2c; ret; 
0x08089984: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x419e0; add esp, 0x28; pop ebx; ret; 
0x08089f51: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x419e0; add esp, 0x2c; ret; 
0x08050591: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x8240; add esp, 0x2c; ret; 
0x08050c64: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x8cc0; add esp, 0x28; pop ebx; ret; 
0x08051221: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x8cc0; add esp, 0x2c; ret; 
0x08058821: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x10670; add esp, 0x2c; ret; 
0x08075d4b: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x2e6a0; add esp, 0x2c; ret; 
0x08089f4d: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x419e0; add esp, 0x2c; ret; 
0x0805058d: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x8240; add esp, 0x2c; ret; 
0x0805121d: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x8cc0; add esp, 0x2c; ret; 
0x0805b0de: push dword ptr [esp + 0x2c]; push edi; push esi; push ebx; call dword ptr [ebp + 0x40]; 
0x0807c9f7: push dword ptr [esp + 0x30]; mov eax, dword ptr [esp + 0x5c]; push dword ptr [eax + 4]; call edi; 
0x08075f7f: push dword ptr [esp + 0x30]; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x38]; call esi; 
0x080767c2: push dword ptr [esp + 0x34]; call edi; 
0x08066393: push dword ptr [esp + 0x34]; push dword ptr [esp + 0x10]; call eax; 
0x080767ba: push dword ptr [esp + 0x34]; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x34]; call edi; 
0x080acea3: push dword ptr [esp + 0x34]; push edi; push esi; call dword ptr [ebp]; 
0x080ace69: push dword ptr [esp + 0x34]; push edi; push esi; call eax; 
0x0809e109: push dword ptr [esp + 0x38]; call dword ptr [ebx + 0x38]; 
0x08075e4a: push dword ptr [esp + 0x38]; call esi; 
0x0805ebf1: push dword ptr [esp + 0x38]; push 0; push edi; push esi; push ebp; call dword ptr [ebx + 0x24]; 
0x08076927: push dword ptr [esp + 0x38]; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x34]; call edi; 
0x080767be: push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x34]; call edi; 
0x08075f87: push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x38]; call esi; 
0x08075f83: push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x38]; call esi; 
0x0805c64e: push dword ptr [esp + 0x3c]; push edi; call dword ptr [eax + 0x20]; 
0x08057412: push dword ptr [esp + 0x3c]; push esi; call dword ptr [edx + 0x1c]; 
0x08065ebb: push dword ptr [esp + 0x40]; push edi; push ebp; call eax; 
0x080507dc: push dword ptr [esp + 0x48]; push dword ptr [edi]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x08050820: push dword ptr [esp + 0x4c]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x080857a7: push dword ptr [esp + 0x50]; call esi; 
0x08085681: push dword ptr [esp + 0x50]; mov eax, dword ptr [esp + 0x38]; call eax; 
0x080857a3: push dword ptr [esp + 0x50]; push dword ptr [esp + 0x50]; call esi; 
0x0808567d: push dword ptr [esp + 0x50]; push dword ptr [esp + 0x50]; mov eax, dword ptr [esp + 0x38]; call eax; 
0x08080e7b: push dword ptr [esp + 0x58]; call edi; 
0x08080991: push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x08080e77: push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; call edi; 
0x0808098d: push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x08083261: push dword ptr [esp + 0x5c]; call edi; 
0x08082ef1: push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x08085679: push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x50]; push dword ptr [esp + 0x50]; mov eax, dword ptr [esp + 0x38]; call eax; 
0x0808325d: push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x5c]; call edi; 
0x08082eed: push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0807eff3: push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; call edi; 
0x0807f321: push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x0807ee4f: push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x080804d5: push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x0807f8fa: push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; mov edx, dword ptr [esp + 0x54]; call edx; 
0x08081938: push dword ptr [esp + 0x60]; call edi; 
0x080821cd: push dword ptr [esp + 0x60]; call esi; 
0x080814c8: push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0807f31d: push dword ptr [esp + 0x60]; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x0807ee4b: push dword ptr [esp + 0x60]; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0807f8f6: push dword ptr [esp + 0x60]; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; mov edx, dword ptr [esp + 0x54]; call edx; 
0x08081934: push dword ptr [esp + 0x60]; push dword ptr [esp + 0x60]; call edi; 
0x080821c9: push dword ptr [esp + 0x60]; push dword ptr [esp + 0x60]; call esi; 
0x080814c4: push dword ptr [esp + 0x60]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x08080178: push dword ptr [esp + 0x60]; push dword ptr [esp + 0x68]; call edi; 
0x0807fec2: push dword ptr [esp + 0x60]; push dword ptr [esp + 0x68]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0807eff7: push dword ptr [esp + 0x64]; call edi; 
0x0807f325: push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x0807ee53: push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x080804d9: push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x0807f8fe: push dword ptr [esp + 0x64]; mov edx, dword ptr [esp + 0x54]; call edx; 
0x0808017c: push dword ptr [esp + 0x68]; call edi; 
0x0807fec6: push dword ptr [esp + 0x68]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0808368c: push dword ptr [esp + 0x68]; mov eax, dword ptr [esp + 0x54]; call eax; 
0x08083b74: push dword ptr [esp + 0x68]; push dword ptr [esp + 0x68]; call edi; 
0x08083688: push dword ptr [esp + 0x68]; push dword ptr [esp + 0x68]; mov eax, dword ptr [esp + 0x54]; call eax; 
0x08088f8a: push dword ptr [esp + 0xc]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x0804ffb5: push dword ptr [esp + 0xc]; push dword ptr [ebp]; push dword ptr [esi]; mov eax, dword ptr [esp + 0x1c]; call eax; 
0x0804ff53: push dword ptr [esp + 0xc]; push ebp; push esi; mov eax, dword ptr [esp + 0x1c]; call eax; 
0x08088f85: push dword ptr [esp + 0xc]; push ebx; push dword ptr [esp + 0xc]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x0805c046: push dword ptr [esp + 0xcc]; push dword ptr [esp + 0x10]; push dword ptr [esp + 0x10]; push esi; call dword ptr [ebx + 0x40]; 
0x0808cfcf: push dword ptr gs:[eax]; push dword ptr [esp + 0x1c]; call 0x42770; add esp, 0x1c; ret; 
0x080b1b74: push dword ptr ss:[ebx + ebp + 4]; push dword ptr [esp + 0x20]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x080b31c1: push eax; adc byte ptr [ebp - 0x7cf28b2e], al; in al, dx; or al, 0x50; call edx; 
0x080713b1: push eax; adc byte ptr [ebx + 0x58ebf0e2], al; lea esi, [esi]; nop; xor eax, eax; ret; 
0x080a85b8: push eax; adc byte ptr [ecx + 0x39c829f8], cl; ret 0x6f72; 
0x0804bec3: push eax; adc eax, 0xf0b80000; add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x08097611: push eax; add al, 0; add byte ptr [ecx], al; ret; 
0x0805e2d8: push eax; add al, 0x5b; ret; 
0x0805258d: push eax; add al, 0x89; adc dword ptr [ebx - 0x7c2776f0], ecx; ret; 
0x08096462: push eax; add al, 0x89; pop eax; or byte ptr [ecx + 0x10892048], cl; pop ebx; ret; 
0x08052562: push eax; add al, 0x8b; add byte ptr [ecx - 0x7c2576ea], cl; ret; 
0x08060dd1: push eax; add al, 0x8b; inc eax; or al, 0x83; ret; 
0x08079670: push eax; add al, 0x8d; xchg eax, ecx; adc byte ptr [esi - 7], al; dec dword ptr [ecx + 0x5e5b0850]; ret; 
0x080788c9: push eax; add al, 0xf6; ret 0x7401; 
0x0809642b: push eax; and byte ptr [ecx + 0x488b0448], cl; or byte ptr [ecx + 0x8508910], cl; mov dword ptr [eax + 0x20], ecx; ret; 
0x0809f506: push eax; call 0x10c0; add esp, 0x14; pop ebx; pop esi; ret; 
0x080606b9: push eax; call 0x17c30; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x080b2dbc: push eax; call 0x1da60; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x08049c60: push eax; call 0x2220; hlt; mov ebx, dword ptr [esp]; ret; 
0x080b2e00: push eax; call 0x2ff20; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x080a84e6: push eax; call 0x30a0; lea esi, [esi]; endbr32; ret 4; 
0x080769f4: push eax; call 0x30a0; mov ebx, dword ptr [esp + 4]; mov eax, 0xfc; call dword ptr gs:[0x10]; 
0x080b2d7c: push eax; call 0x30ab0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x080abd32: push eax; call 0x54a80; mov dword ptr [ebx + 0x14], eax; add esp, 0x28; pop ebx; ret; 
0x08049e50: push eax; call 0x94a0; add esp, 0x10; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x0807eafd: push eax; call 0xf7fb8000; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x08058a2a: push eax; call dword ptr [ebx + 0x1c]; 
0x080804e0: push eax; call eax; 
0x080b31ca: push eax; call edx; 
0x0805a856: push eax; call esi; 
0x0808709f: push eax; cmp bh, ch; call dword ptr [eax - 0x18]; 
0x080b027d: push eax; dec esp; ret; 
0x080530e0: push eax; idiv edi; call dword ptr [edx - 0x75]; 
0x0805369d: push eax; idiv edi; call dword ptr [esi - 0x18]; 
0x080a4c6a: push eax; inc dword ptr [ebx + 0xf76fdfa]; add esp, 8; pop ebx; ret; 
0x08060aa7: push eax; jbe 0x18ab0; ret; 
0x0809b3cd: push eax; jmp dword ptr [ecx]; 
0x080b0a52: push eax; jne 0x68a7b; add esp, 8; xor eax, eax; pop ebx; ret; 
0x080b0ab2: push eax; jne 0x68adb; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0809560d: push eax; lea eax, [esi + 0x28]; push eax; push 1; push esi; call edx; 
0x08075c68: push eax; lea eax, [esp + 0x34]; push eax; push dword ptr [ebp + 8]; call esi; 
0x08085684: push eax; mov eax, dword ptr [esp + 0x38]; call eax; 
0x080a24c0: push eax; mov ecx, dword ptr [esp + 0x24]; mov eax, dword ptr [esp + 0x20]; call 0x59e80; add esp, 0x1c; ret; 
0x08059768: push eax; mov esi, dword ptr [esp + 0x24]; push esi; call dword ptr [ebx + 0x40]; 
0x080969f3: push eax; or al, 0x31; ror byte ptr [ecx + 0x4c4830b], 0x5b; pop esi; ret; 
0x0808bb17: push eax; or al, 0x89; sal esi, 1; ret 0xf40; 
0x0808abfa: push eax; or al, 0xf6; ret 0x7540; 
0x08098646: push eax; or byte ptr [ebp - 0x2a], dh; lea ebx, [eax + 8]; mov eax, ebx; pop ebx; ret; 
0x080a85b2: push eax; or byte ptr [ebx + 0x508b044a], cl; adc byte ptr [ecx + 0x39c829f8], cl; ret 0x6f72; 
0x08079679: push eax; or byte ptr [ebx + 0x5e], bl; ret; 
0x0805fb49: push eax; or byte ptr [ebx - 0x2fd6f7bf], cl; ret; 
0x0804b833: push eax; or byte ptr [ebx - 0x7c72f714], al; sub bl, dh; cld; call dword ptr [eax + 0x52]; 
0x080ad1bb: push eax; or byte ptr [ecx], al; ret 0xd789; 
0x0804f9d6: push eax; or cl, ch; ret; 
0x080b013c: push eax; push 0x1a; push 1; mov eax, dword ptr [esp + 0x24]; call eax; 
0x08049cf7: push eax; push 0x80e5f40; call edx; 
0x08049cf7: push eax; push 0x80e5f40; call edx; add esp, 0x10; leave; ret; 
0x080b00ca: push eax; push 0xa; push 1; mov eax, dword ptr [esp + 0x24]; call eax; 
0x08095611: push eax; push 1; push esi; call edx; 
0x080a96d7: push eax; push dword ptr [eax + edx - 0x73]; sbb al, 0x96; nop; call dword ptr [ebx]; 
0x08075c07: push eax; push dword ptr [ebp + 8]; call esi; 
0x08098885: push eax; push dword ptr [ebp]; call esi; 
0x0808650d: push eax; push dword ptr [ebx + 0x196c]; call 0x30a80; add esp, 0x18; pop ebx; ret; 
0x080b08ae: push eax; push dword ptr [ebx]; push dword ptr [esp + 0x10]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x0807ca62: push eax; push dword ptr [esi + 4]; call edi; 
0x080b0889: push eax; push dword ptr [esp + 0x10]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x08051994: push eax; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x1c]; 
0x080514dd: push eax; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x12af0; add esp, 0x1c; ret; 
0x0808f10d: push eax; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xc630; add esp, 0x1c; ret; 
0x08057e5d: push eax; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xfd50; add esp, 0x1c; ret; 
0x080593b1: push eax; push dword ptr [esp + 0x24]; call dword ptr [ebx + 0x48]; 
0x080b1fce: push eax; push dword ptr [esp + 0x2c]; call 0x69ef0; add esp, 0x28; pop ebx; ret; 
0x08075e49: push eax; push dword ptr [esp + 0x38]; call esi; 
0x080857a6: push eax; push dword ptr [esp + 0x50]; call esi; 
0x08085680: push eax; push dword ptr [esp + 0x50]; mov eax, dword ptr [esp + 0x38]; call eax; 
0x080857a2: push eax; push dword ptr [esp + 0x50]; push dword ptr [esp + 0x50]; call esi; 
0x0808098c: push eax; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x08082eec: push eax; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x080804d4: push eax; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x080821c8: push eax; push dword ptr [esp + 0x60]; push dword ptr [esp + 0x60]; call esi; 
0x080814c3: push eax; push dword ptr [esp + 0x60]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0807fec1: push eax; push dword ptr [esp + 0x60]; push dword ptr [esp + 0x68]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x08083687: push eax; push dword ptr [esp + 0x68]; push dword ptr [esp + 0x68]; mov eax, dword ptr [esp + 0x54]; call eax; 
0x0805e8a6: push eax; push ecx; mov dword ptr [esp + 0x40], ecx; call dword ptr [ebx + 0xc]; 
0x08054f69: push eax; push ecx; push esi; call dword ptr [ebx + 0x1c]; 
0x080923ac: push eax; push ecx; push esi; mov dword ptr [ebp - 0x45c], eax; call dword ptr [ebx + 0x1c]; 
0x080547d9: push eax; push ecx; push esi; mov dword ptr [ebp - 0x46c], eax; call dword ptr [ebx + 0x1c]; 
0x0805b4ec: push eax; push edi; call dword ptr [ebx + 0x38]; 
0x0805aaba: push eax; push edi; call esi; 
0x0809887f: push eax; push edi; lea eax, [esp + 0x40]; push eax; push dword ptr [ebp]; call esi; 
0x080aaf85: push eax; push edx; call 0x2ff20; add esp, 0x18; pop ebx; ret; 
0x08052943: push eax; push edx; push dword ptr [ebp - 0x890]; call dword ptr [ebx + 0x1c]; 
0x08090287: push eax; push edx; push dword ptr [ebp - 0x8a0]; call dword ptr [ebx + 0x1c]; 
0x080597cb: push eax; push edx; push dword ptr [esp + 0x24]; call ecx; 
0x08058ca1: push eax; push edx; push edi; call dword ptr [ebx + 0x38]; 
0x0805c19d: push eax; push edx; push esi; call ecx; 
0x0805c141: push eax; push esi; call dword ptr [ebx + 0x40]; 
0x0805be0f: push eax; push esi; call dword ptr [ebx + 0x48]; 
0x0805b2f6: push eax; push esi; call dword ptr [edi + 0x40]; 
0x0805b76d: push eax; push esi; call dword ptr [edi + 0x48]; 
0x080b028a: push eax; ret; 
0x080796dd: push eax; sbb al, 0xc6; inc eax; and byte ptr [ecx], al; pop ebx; ret; 
0x080588c8: push eax; sbb al, 1; ret; 
0x080999ad: push eax; sbb al, byte ptr [eax]; add byte ptr [ecx], bh; ret; 
0x080968f0: push eax; sbb byte ptr [ebp - 0x7cf58b2e], al; les ecx, ptr [eax]; pop ebx; ret; 
0x0807600f: push eax; std; dec dword ptr [ebp - 0x2e5437d]; call dword ptr [eax - 0x73]; 
0x08076047: push eax; std; jmp dword ptr [esi - 0x70]; 
0x080a1745: push ebp; aam 0x89; ret 0xf221; 
0x08058371: push ebp; adc bh, bh; jmp dword ptr [esi - 0x70]; 
0x080528e6: push ebp; adc byte ptr [ecx], bh; ret 0x820f; 
0x080ab687: push ebp; add byte ptr [ecx], al; ret 0xd139; 
0x0805cf01: push ebp; and al, 0x21; ret 0xc483; 
0x0805ebf9: push ebp; call dword ptr [ebx + 0x24]; 
0x0805f529: push ebp; call dword ptr [ebx + 0x2c]; 
0x080ad025: push ebp; call dword ptr [ebx]; 
0x08065ec0: push ebp; call eax; 
0x0805b42c: push ebp; in al, 0xc7; rcl ah, 0x62; push cs; or bh, al; ret 0x5f80; 
0x0808aee1: push ebp; mov ah, 0x89; ret 0xe283; 
0x0808cad7: push ebp; mov eax, 0x2901c083; fidivr dword ptr [ecx]; ret 0xee7f; 
0x08049cf1: push ebp; mov ebp, esp; sub esp, 0x10; push eax; push 0x80e5f40; call edx; 
0x08049ca5: push ebp; mov ebp, esp; sub esp, 0x14; push 0x80e5f40; call eax; 
0x080a072e: push ebp; mov word ptr [ebx + 0x3030846], cs; test edx, edx; jne 0x5873b; call eax; 
0x080a14fb: push ebp; mov word ptr [ebx - 0x7afefcfa], cs; sal byte ptr [ebp + 2], cl; call eax; 
0x080a036c: push ebp; movsb byte ptr es:[edi], byte ptr [esi]; call eax; 
0x080b07ba: push ebp; or byte ptr [ebp - 0xd74b], cl; call dword ptr [ebx - 0x73]; 
0x0809abb8: push ebp; or byte ptr [ecx + 0x44898055], 0xb7; adc al, 0x83; mov byte ptr [ecx], 0xe9; ret 0xfffe; 
0x0809abbb: push ebp; or byte ptr [ecx - 0x7ceb48bc], 0xc6; add ecx, ebp; ret 0xfffe; 
0x080b2873: push ebp; push 0x28; push dword ptr [esp + 0x20]; mov eax, dword ptr [esp + 0x28]; call eax; 
0x0808914f: push ebp; push dword ptr [esp + 0x20]; push esi; call edi; 
0x0807c9f6: push ebp; push dword ptr [esp + 0x30]; mov eax, dword ptr [esp + 0x5c]; push dword ptr [eax + 4]; call edi; 
0x0805c64d: push ebp; push dword ptr [esp + 0x3c]; push edi; call dword ptr [eax + 0x20]; 
0x0807f8f5: push ebp; push dword ptr [esp + 0x60]; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; mov edx, dword ptr [esp + 0x54]; call edx; 
0x08098c0a: push ebp; push ebx; call eax; 
0x08088e56: push ebp; push ebx; push esi; call edi; 
0x08088df0: push ebp; push ecx; lea esi, [ecx + eax]; push esi; call edi; 
0x0805c94d: push ebp; push edi; push ebx; call dword ptr [esi + 0x40]; 
0x0805892b: push ebp; push edi; push esi; call dword ptr [edx + 0x1c]; 
0x0805c72d: push ebp; push esi; call dword ptr [ebx + 0x38]; 
0x0804ff57: push ebp; push esi; mov eax, dword ptr [esp + 0x1c]; call eax; 
0x08088e33: push ebp; push esi; push dword ptr [esp + 0x10]; call edi; 
0x08088e06: push ebp; push esi; push dword ptr [esp + 0x20]; call edi; 
0x080a0363: push ebp; pushfd; mov eax, dword ptr [ebp - 0x5c]; add esp, 0x20; mov dword ptr [ebp - 0x5c], edx; call eax; 
0x0804c034: push ebp; sar byte ptr [eax + 0xf0], 1; mov ecx, 0x81; lea ebx, [edx + 0x1550]; mov edx, 1; call dword ptr gs:[0x10]; 
0x080783e9: push ebx; add al, 0x83; ret; 
0x08096fe1: push ebx; add al, 0xc1; cli; add ch, bl; ljmp 0x5bff:0xffffffb8; ret; 
0x080a4cdd: push ebx; add al, 0xe8; fcomp qword ptr [esi]; add byte ptr [edx + 0x59], bl; pop eax; jmp dword ptr [eax]; 
0x08054dff: push ebx; add al, 0xff; xor ecx, dword ptr [ecx - 0x49f6b]; dec dword ptr [ebp - 0x4136b]; call dword ptr [edx - 0x39]; 
0x08076f68: push ebx; add byte ptr [eax], al; ret; 
0x08079e28: push ebx; add byte ptr [ecx - 0x38dfdba4], cl; ret; 
0x0809778d: push ebx; add dword ptr [eax], eax; add byte ptr [ebx + 0x3910245c], cl; ret; 
0x08060811: push ebx; call 0x18730; or dword ptr [ebx], 8; add esp, 0x18; pop ebx; ret; 
0x0809692c: push ebx; call 0x4e470; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0809690e: push ebx; call dword ptr [eax + 0x34]; 
0x080969c3: push ebx; call dword ptr [eax + 0xc]; 
0x0809f431: push ebx; call dword ptr [eax]; 
0x0805ceff: push ebx; call dword ptr [ebp + 0x24]; 
0x0805b0e4: push ebx; call dword ptr [ebp + 0x40]; 
0x080b07e6: push ebx; call dword ptr [ebp + 8]; 
0x0805e7e7: push ebx; call dword ptr [esi + 0x10]; 
0x0805f039: push ebx; call dword ptr [esi + 0x18]; 
0x0805c94f: push ebx; call dword ptr [esi + 0x40]; 
0x0805e321: push ebx; call dword ptr [esi + 0xc]; 
0x08065845: push ebx; call eax; 
0x08078006: push ebx; call edx; 
0x08077fcf: push ebx; call esi; 
0x08067d22: push ebx; clc; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x080affba: push ebx; dec esp; pop ebx; pop esi; pop edi; ret; 
0x0809999f: push ebx; mov eax, 0x2d; mov ebx, dword ptr [esp + 8]; int 0x80; 
0x08077cb4: push ebx; mov eax, 0xbf; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x08076fd4: push ebx; mov eax, 0xc3; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x08099654: push ebx; mov eax, 0xc4; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x08077004: push ebx; mov eax, 0xc5; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x08077c34: push ebx; mov eax, 3; mov ecx, dword ptr [esp + 0xc]; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x08077c74: push ebx; mov eax, 4; mov ecx, dword ptr [esp + 0xc]; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x08077a84: push ebx; mov eax, 6; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x080abc54: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x08077f54: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x08077f84: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x080603d0: push ebx; or byte ptr [ecx + 0x29182454], cl; ret 0x5489; 
0x080a796d: push ebx; or byte ptr [ecx + 0x4c48302], cl; pop ebx; pop esi; ret; 
0x080950a3: push ebx; push dword ptr [eax + 0xc]; push esi; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x1c]; 
0x08095a6c: push ebx; push dword ptr [ebp + 8]; push esi; call dword ptr [eax + 0x1c]; 
0x080528b0: push ebx; push dword ptr [ebp - 0x884]; push dword ptr [ebp - 0x890]; call edx; 
0x080b00eb: push ebx; push dword ptr [ebx + 4]; push dword ptr [ebx]; push 0xa; push 1; call eax; 
0x08057411: push ebx; push dword ptr [esp + 0x3c]; push esi; call dword ptr [edx + 0x1c]; 
0x08088f89: push ebx; push dword ptr [esp + 0xc]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x08051993: push ebx; push eax; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x1c]; 
0x080595f7: push ebx; push ecx; push dword ptr [esp + 0x24]; call dword ptr [edi + 0x40]; 
0x0805bfdc: push ebx; push ecx; push esi; call dword ptr [eax + 0x40]; 
0x0805efa6: push ebx; push esi; call dword ptr [edi + 0x18]; 
0x08088e57: push ebx; push esi; call edi; 
0x08075d0f: push ebx; std; jmp dword ptr [esi - 0x70]; 
0x08099fe2: push ebx; xor eax, 0xaf68fffe; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; sbb dword ptr [ebp + 0x35], -2; call dword ptr [eax - 0x18]; 
0x08062088: push ecx; add al, 0x83; rcl dword ptr [eax], 0x83; ret; 
0x08066f31: push ecx; jmp dword ptr [ecx]; 
0x0805a84d: push ecx; lea ecx, [edi + 0x28]; push ecx; mov eax, dword ptr [esp + 0x30]; push eax; call esi; 
0x0805a94c: push ecx; lea ecx, [edi + 4]; push ecx; mov eax, dword ptr [esp + 0x30]; push eax; call esi; 
0x08088df1: push ecx; lea esi, [ecx + eax]; push esi; call edi; 
0x0805e8a7: push ecx; mov dword ptr [esp + 0x40], ecx; call dword ptr [ebx + 0xc]; 
0x0805a851: push ecx; mov eax, dword ptr [esp + 0x30]; push eax; call esi; 
0x080b0845: push ecx; or byte ptr [edi + 2], dh; sbb eax, eax; ret; 
0x080b000e: push ecx; push 1; call eax; 
0x08078003: push ecx; push 3; push ebx; call edx; 
0x0805806c: push ecx; push cs; or byte ptr [edi], cl; xchg eax, esp; ret 0xff81; 
0x0809139f: push ecx; push dword ptr [ebp - 0x8a0]; call dword ptr [ebx + 0x1c]; 
0x08090678: push ecx; push dword ptr [ebp - 0x8a0]; mov dword ptr [ebp - 0x8ac], ecx; call dword ptr [ebx + 0x1c]; 
0x0808b4e6: push ecx; push dword ptr [ebp - 0xa0]; push dword ptr [ebp - 0x88]; call eax; 
0x080595f8: push ecx; push dword ptr [esp + 0x24]; call dword ptr [edi + 0x40]; 
0x0805aab9: push ecx; push eax; push edi; call esi; 
0x08065843: push ecx; push edx; push ebx; call eax; 
0x08054e9a: push ecx; push edx; push esi; call dword ptr [ebx + 0x1c]; 
0x0805bfdd: push ecx; push esi; call dword ptr [eax + 0x40]; 
0x08054f6a: push ecx; push esi; call dword ptr [ebx + 0x1c]; 
0x080923ad: push ecx; push esi; mov dword ptr [ebp - 0x45c], eax; call dword ptr [ebx + 0x1c]; 
0x080547da: push ecx; push esi; mov dword ptr [ebp - 0x46c], eax; call dword ptr [ebx + 0x1c]; 
0x08093d32: push ecx; push esi; mov dword ptr [ebp - 0x494], ecx; call dword ptr [ebx + 0x1c]; 
0x08056054: push ecx; push esi; mov dword ptr [ebp - 0x4ac], ecx; call dword ptr [ebx + 0x1c]; 
0x0809044e: push ecx; push esi; push dword ptr [ebp - 0x8a0]; call edx; 
0x0807c315: push ecx; ret; 
0x08064e67: push edi; adc byte ptr [ecx], bh; ret 0x870f; 
0x08099ca1: push edi; add al, 0x8b; inc ebp; fadd dword ptr [ebx - 0x377cf040]; add eax, dword ptr [ecx]; ret 0x458b; 
0x0807ae45: push edi; add bh, ch; dec dword ptr [ebp - 0x2d59f7d]; call dword ptr [eax - 0x73]; 
0x08087555: push edi; and bh, bh; dec dword ptr [ebp - 0x2c57b7d]; call dword ptr [eax - 0x73]; 
0x0805b4e4: push edi; and byte ptr [ebx - 0x3dd6fb14], al; push edx; push eax; push edi; call dword ptr [ebx + 0x38]; 
0x0807cc56: push edi; call 0x32fa0; mov dword ptr [esp], esi; call edi; 
0x080b2c4b: push edi; call 0x32fa0; mov edx, dword ptr [esp + 0x30]; add ebp, dword ptr [edx + 8]; mov dword ptr [esp], ebp; call edi; 
0x0805c652: push edi; call dword ptr [eax + 0x20]; 
0x08058ca3: push edi; call dword ptr [ebx + 0x38]; 
0x0805966b: push edi; call dword ptr [ebx + 0x40]; 
0x0805f196: push edi; call dword ptr [ebx + 0xc]; 
0x08058006: push edi; call dword ptr [ebx + 8]; 
0x0805aabb: push edi; call esi; 
0x08098880: push edi; lea eax, [esp + 0x40]; push eax; push dword ptr [ebp]; call esi; 
0x080a3fc3: push edi; or byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x08058c9a: push edi; or byte ptr [ecx - 0x2fd643bb], cl; push eax; push edx; push edi; call dword ptr [ebx + 0x38]; 
0x08098d55: push edi; or dh, bh; jmp dword ptr [esi - 0x70]; 
0x08077fcc: push edi; push 0; push ebx; call esi; 
0x08077fe0: push edi; push 1; push ebx; call esi; 
0x08077ff3: push edi; push 2; push ebx; call esi; 
0x08058a26: push edi; push dword ptr [ebp + 8]; push eax; call dword ptr [ebx + 0x1c]; 
0x08095c7f: push edi; push dword ptr [ebp + 8]; push esi; call dword ptr [ebx + 0x1c]; 
0x08065ebf: push edi; push ebp; call eax; 
0x0805c94e: push edi; push ebx; call dword ptr [esi + 0x40]; 
0x08098bb7: push edi; push ebx; call eax; 
0x080588c5: push edi; push esi; call dword ptr [eax + 0x1c]; 
0x0805a40b: push edi; push esi; call dword ptr [ebp + 0x40]; 
0x080acea7: push edi; push esi; call dword ptr [ebp]; 
0x0805892c: push edi; push esi; call dword ptr [edx + 0x1c]; 
0x080ace6d: push edi; push esi; call eax; 
0x0805ebf7: push edi; push esi; push ebp; call dword ptr [ebx + 0x24]; 
0x080ad023: push edi; push esi; push ebp; call dword ptr [ebx]; 
0x0805b0e2: push edi; push esi; push ebx; call dword ptr [ebp + 0x40]; 
0x0804a0d1: push edi; ret; 
0x0805e738: push edi; sub esp, 0xc; push esi; call dword ptr [edi + 0x34]; 
0x0806bb06: push edx; adc byte ptr [esi + 0xf], ah; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x5073; 
0x080afd97: push edx; add eax, 0xcdfa8166; xor byte ptr [ebx + ecx + 0x66], 0x81; cli; syscall; 
0x0806bb1b: push edx; and byte ptr [esi + 0xf], ah; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x3e73; 
0x0805caec: push edx; call 0x2f0f0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0805cb08: push edx; call 0x2fc30; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x080aaf86: push edx; call 0x2ff20; add esp, 0x18; pop ebx; ret; 
0x0807cdc6: push edx; call 0x32fa0; mov dword ptr [esp], esi; mov edx, dword ptr [ebp - 0x48]; call edx; 
0x080b23c0: push edx; call 0x68290; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x080b23fb: push edx; call 0x682e0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x080b23a7: push edx; call 0x682f0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0806beab: push edx; fisub dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0806bc6b: push edx; fisub word ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0806bf3b: push edx; fldenv [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0806bd0b: push edx; frstor dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0806bfdb: push edx; fsub dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x08075e40: push edx; lea eax, [esp + 0x64]; mov dword ptr [esp + 0x38], edx; push eax; push dword ptr [esp + 0x38]; call esi; 
0x08057a64: push edx; lea edx, [esi + 0x28]; push edx; push 1; push esi; call eax; 
0x0806bec9: push edx; ljmp 0xf66:0xd1ef0f66; cmp byte ptr [edi], dl; ret 0x830f; 
0x0805fdfb: push edx; or byte ptr [eax], al; mov eax, 0x80e5098; mov eax, dword ptr [eax]; ret; 
0x0808de2a: push edx; or byte ptr [ecx - 0x7ca7dbac], cl; ret 0x3917; 
0x080b0842: push edx; or byte ptr [ecx], bh; push ecx; or byte ptr [edi + 2], dh; sbb eax, eax; ret; 
0x080b0795: push edx; push 1; call eax; 
0x080b0795: push edx; push 1; call eax; add esp, 0x10; add esp, 0xc; ret; 
0x08057a68: push edx; push 1; push esi; call eax; 
0x08052944: push edx; push dword ptr [ebp - 0x890]; call dword ptr [ebx + 0x1c]; 
0x08090288: push edx; push dword ptr [ebp - 0x8a0]; call dword ptr [ebx + 0x1c]; 
0x08090f4e: push edx; push dword ptr [ebp - 0x8e8]; push dword ptr [ebp - 0x8a0]; call dword ptr [ebx + 0x1c]; 
0x0808f4d0: push edx; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x1c]; 
0x080597cc: push edx; push dword ptr [esp + 0x24]; call ecx; 
0x08059767: push edx; push eax; mov esi, dword ptr [esp + 0x24]; push esi; call dword ptr [ebx + 0x40]; 
0x080b013b: push edx; push eax; push 0x1a; push 1; mov eax, dword ptr [esp + 0x24]; call eax; 
0x080b00c9: push edx; push eax; push 0xa; push 1; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0805b4eb: push edx; push eax; push edi; call dword ptr [ebx + 0x38]; 
0x0805c140: push edx; push eax; push esi; call dword ptr [ebx + 0x40]; 
0x0805b2f5: push edx; push eax; push esi; call dword ptr [edi + 0x40]; 
0x0805c72c: push edx; push ebp; push esi; call dword ptr [ebx + 0x38]; 
0x08065844: push edx; push ebx; call eax; 
0x0809139e: push edx; push ecx; push dword ptr [ebp - 0x8a0]; call dword ptr [ebx + 0x1c]; 
0x08090677: push edx; push ecx; push dword ptr [ebp - 0x8a0]; mov dword ptr [ebp - 0x8ac], ecx; call dword ptr [ebx + 0x1c]; 
0x08055606: push edx; push ecx; push esi; call dword ptr [ebx + 0x1c]; 
0x08093d31: push edx; push ecx; push esi; mov dword ptr [ebp - 0x494], ecx; call dword ptr [ebx + 0x1c]; 
0x08056053: push edx; push ecx; push esi; mov dword ptr [ebp - 0x4ac], ecx; call dword ptr [ebx + 0x1c]; 
0x08058ca2: push edx; push edi; call dword ptr [ebx + 0x38]; 
0x0805a40a: push edx; push edi; push esi; call dword ptr [ebp + 0x40]; 
0x08054e9b: push edx; push esi; call dword ptr [ebx + 0x1c]; 
0x0805c19e: push edx; push esi; call ecx; 
0x0806c348: push edx; ret 0xc2bb; 
0x0806c2a8: push edx; ret; 
0x0805892f: push edx; sbb al, 1; ret; 
0x080a78cc: push edx; sbb byte ptr [ecx + 0x4c48310], cl; pop ebx; pop esi; ret; 
0x0806c36b: push edx; shl byte ptr [esi + 0xf], cl; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0806c41b: push edx; shl dword ptr [esi + 0xf], 1; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0806c2cb: push edx; shl dword ptr [esi + 0xf], cl; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0806bb30: push edx; xor byte ptr [esi + 0xf], ah; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x2c73; 
0x0807c31d: push es; add bh, dh; fadd st(7); ret 0xffe0; 
0x0806bf02: push es; add byte ptr [eax], al; pop ebx; ret; 
0x0804af34: push es; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0807e26e: push es; add byte ptr [ebx - 0x77], dl; ret; 
0x0807937e: push es; add byte ptr [ebx - 0x7c72eb14], al; adc byte ptr [ecx], ah; std; call dword ptr [eax - 0x18]; 
0x080795be: push es; add byte ptr [ebx - 0x7c72eb14], al; cmp dword ptr [ecx], esp; std; call dword ptr [eax - 0x18]; 
0x08071b7b: push es; add byte ptr [edi], cl; test dh, al; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x080a14fe: push es; add eax, dword ptr [ecx]; test edx, edx; jne 0x59507; call eax; 
0x080614af: push es; add esp, 0x14; pop ebx; pop esi; ret; 
0x0805e6c5: push es; add esp, 4; pop ebx; pop esi; ret; 
0x080af23d: push es; int 0x80; 
0x08070c52: push es; jb 0x28cd0; lea eax, [edi + 5]; pop edi; ret; 
0x08071a62: push es; jb 0x29ae0; lea eax, [eax + 5]; pop edi; ret; 
0x08071029: push es; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x0806f4c1: push es; lea eax, [edx + 0xd]; pop edi; ret; 
0x0806f621: push es; lea eax, [edx + 0xd]; ret; 
0x0805fa8d: push es; mov dword ptr [ebx + 0x30], esi; add esp, 4; pop ebx; pop esi; ret; 
0x080a88b6: push es; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x080a7c2a: push es; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x0806dc51: push es; mov eax, edi; pop edi; ret; 
0x0806ddb1: push es; mov eax, edx; ret; 
0x08098729: push es; mov eax, esi; pop ebx; pop esi; ret; 
0x08074207: push es; mov ecx, dword ptr [ebx + ecx*4 - 0x2b4c0]; mov eax, dword ptr [ebx + eax*4 - 0x2b4c0]; sub eax, ecx; pop ebx; ret; 
0x080700cc: push es; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x0807022c: push es; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x0806faac: push es; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x0806fc0c: push es; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x0806f4b8: push es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; pop edi; ret; 
0x0806f618: push es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x0806dc48: push es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edi; pop edi; ret; 
0x0806dda8: push es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x08069fa3: push es; movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x0806f42c: push es; pop edi; ret; 
0x0804c1b6: push es; ret 2; 
0x08060aa9: push es; ret; 
0x08069fa7: push es; sub eax, ecx; ret; 
0x0809fe81: push es; test ebx, ebx; jne 0x57e22; call eax; 
0x080aabb7: push es; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x08086402: push esi; adc byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x080648da: push esi; adc byte ptr [ecx], bh; ret 0x3973; 
0x080811bd: push esi; add al, 0x83; rol byte ptr [ecx], 0x83; ret 0x8901; 
0x080966cc: push esi; call 0x15f80; add esp, 0x14; pop ebx; pop esi; ret; 
0x08060710: push esi; call 0x16eb0; add esp, 0x14; pop ebx; pop esi; ret; 
0x08087bbd: push esi; call 0x1da60; add esp, 0x14; pop ebx; pop esi; ret; 
0x080588c6: push esi; call dword ptr [eax + 0x1c]; 
0x0805bfde: push esi; call dword ptr [eax + 0x40]; 
0x080a93c0: push esi; call dword ptr [eax]; 
0x0805ead1: push esi; call dword ptr [ebp + 0x30]; 
0x0805a40c: push esi; call dword ptr [ebp + 0x40]; 
0x080acea8: push esi; call dword ptr [ebp]; 
0x08054c8c: push esi; call dword ptr [ebx + 0x1c]; 
0x080582bb: push esi; call dword ptr [ebx + 0x30]; 
0x0805c72e: push esi; call dword ptr [ebx + 0x38]; 
0x0805976d: push esi; call dword ptr [ebx + 0x40]; 
0x0805be10: push esi; call dword ptr [ebx + 0x48]; 
0x0805efa7: push esi; call dword ptr [edi + 0x18]; 
0x0805e73c: push esi; call dword ptr [edi + 0x34]; 
0x0805b293: push esi; call dword ptr [edi + 0x3c]; 
0x0805b2f7: push esi; call dword ptr [edi + 0x40]; 
0x0805cff1: push esi; call dword ptr [edi + 0x44]; 
0x0805b76e: push esi; call dword ptr [edi + 0x48]; 
0x0805cc11: push esi; call dword ptr [edi + 0xc]; 
0x08057416: push esi; call dword ptr [edx + 0x1c]; 
0x08057a6b: push esi; call eax; 
0x080a700f: push esi; call ebx; 
0x0805c19f: push esi; call ecx; 
0x08078401: push esi; call edi; 
0x08095614: push esi; call edx; 
0x08049fb3: push esi; cmp al, 0x8b; pop esi; or bh, dh; ret; 
0x0806b506: push esi; imul byte ptr [ecx]; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x0806b497: push esi; imul dword ptr [ecx]; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x080672a1: push esi; inc ebx; or dl, byte ptr [eax]; pop ebx; cmovne eax, ecx; ret; 
0x08097266: push esi; inc ecx; inc eax; lea edx, [edx - 0x4ce70]; cmove eax, edx; ret; 
0x08067cd6: push esi; inc ecx; inc eax; lea edx, [edx - 0x74320]; cmove eax, edx; ret; 
0x080671e6: push esi; inc ecx; inc eax; lea edx, [edx - 0x749a0]; cmove eax, edx; ret; 
0x08067d9c: push esi; inc ecx; or dword ptr [edx], eax; lea edx, [edx - 0x77210]; cmovne eax, edx; ret; 
0x0806726c: push esi; inc ecx; or dword ptr [edx], eax; lea edx, [edx - 0x78a60]; cmovne eax, edx; ret; 
0x080923ae: push esi; mov dword ptr [ebp - 0x45c], eax; call dword ptr [ebx + 0x1c]; 
0x080547db: push esi; mov dword ptr [ebp - 0x46c], eax; call dword ptr [ebx + 0x1c]; 
0x08093d33: push esi; mov dword ptr [ebp - 0x494], ecx; call dword ptr [ebx + 0x1c]; 
0x08056055: push esi; mov dword ptr [ebp - 0x4ac], ecx; call dword ptr [ebx + 0x1c]; 
0x080950a7: push esi; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x1c]; 
0x0804ff58: push esi; mov eax, dword ptr [esp + 0x1c]; call eax; 
0x0808fd74: push esi; or al, 0x84; ror byte ptr [edi], cl; mov byte ptr [edi - 0x9ffffe5], dl; ret 0xf40; 
0x08049f36: push esi; or al, 0x89; ret 0xeac1; 
0x0808d506: push esi; or al, 0xf6; ret 0xf01; 
0x0808fd49: push esi; or al, 0xf6; ret 0xf08; 
0x0805c763: push esi; or byte ptr [ecx], ch; ret 0xfa39; 
0x08051e75: push esi; push dword ptr [ebp - 0x898]; push dword ptr [ebp - 0x890]; call dword ptr [ebx + 0x1c]; 
0x0805329f: push esi; push dword ptr [ebp - 0x89c]; push dword ptr [ebp - 0x890]; call dword ptr [ebx + 0x1c]; 
0x0809044f: push esi; push dword ptr [ebp - 0x8a0]; call edx; 
0x080987c9: push esi; push dword ptr [ebp]; call edi; 
0x08088e34: push esi; push dword ptr [esp + 0x10]; call edi; 
0x08088e07: push esi; push dword ptr [esp + 0x20]; call edi; 
0x080767b9: push esi; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x34]; call edi; 
0x08085678: push esi; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x50]; push dword ptr [esp + 0x50]; mov eax, dword ptr [esp + 0x38]; call eax; 
0x0807f31c: push esi; push dword ptr [esp + 0x60]; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x08076046: push esi; push eax; std; jmp dword ptr [esi - 0x70]; 
0x0805ebf8: push esi; push ebp; call dword ptr [ebx + 0x24]; 
0x080ad024: push esi; push ebp; call dword ptr [ebx]; 
0x0805b0e3: push esi; push ebx; call dword ptr [ebp + 0x40]; 
0x08052b76: push esi; push edx; push dword ptr [ebp - 0x890]; call dword ptr [ebx + 0x1c]; 
0x0808f4cf: push esi; push edx; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x1c]; 
0x0808ac69: push esi; ret 0x7440; 
0x0809579a: push esi; ret 0x7504; 
0x08071975: push esi; ret 0xf02; 
0x08091755: push esi; ret 0xf10; 
0x0804a19a: push esi; sbb al, 0xf6; ret 0x7408; 
0x0806b4c6: push esi; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x080639e2: push esp; add al, 0; add byte ptr [ecx], bh; ret; 
0x0809b6e4: push esp; add dword ptr [eax], eax; add cl, ch; ret; 
0x080ae3f6: push esp; add esp, 8; pop ebx; ret; 
0x08077c3f: push esp; and al, 0x10; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x080abc56: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x08077f56: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x08077f86: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x08063638: push esp; and al, 0x14; mov dword ptr [esp + 0x10], eax; call ecx; 
0x080a7ec1: push esp; and al, 0x18; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x1c]; mov edi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x08079230: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa3; call dword ptr gs:[0x10]; 
0x08099694: push esp; and al, 0x18; mov esi, dword ptr [esp + 0x1c]; jne 0x516c0; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x080b000b: push esp; and al, 0x1c; push ecx; push 1; call eax; 
0x080770a3: push esp; and al, 0x24; mov edi, eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x080a54b2: push esp; and al, 0x28; call edx; 
0x080b2c52: push esp; and al, 0x30; add ebp, dword ptr [edx + 8]; mov dword ptr [esp], ebp; call edi; 
0x08075e46: push esp; and al, 0x38; push eax; push dword ptr [esp + 0x38]; call esi; 
0x0807f903: push esp; and al, 0x54; call edx; 
0x08077ee0: push esp; and al, 0xc; mov ebp, eax; mov ecx, dword ptr [esp + 8]; mov eax, 0xc0; call dword ptr gs:[0x10]; 
0x08077142: push esp; and al, 0xc; mov esi, eax; mov eax, 3; call dword ptr gs:[0x10]; 
0x080771e2: push esp; and al, 0xc; mov esi, eax; mov eax, 4; call dword ptr gs:[0x10]; 
0x08077b05: push esp; and al, 4; mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x0808882f: push esp; and al, 4; mov eax, 0xffffffd8; mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x080a3e1b: push esp; and al, 4; mov ecx, eax; mov eax, dword ptr [esp + 0xc]; add esp, 0x20; jmp ecx; 
0x0806097f: push esp; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x186c], edx; ret; 
0x080609ef: push esp; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x48c], edx; ret; 
0x080609cf: push esp; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x490], edx; ret; 
0x0806099f: push esp; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x4a0], 1; mov dword ptr [eax + 0x480], edx; ret; 
0x0806094f: push esp; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x4a0], 1; mov dword ptr [eax + 0x484], edx; ret; 
0x0806091f: push esp; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x4a0], 1; mov dword ptr [eax + 0x498], edx; ret; 
0x08060a7f: push esp; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x4bc], edx; ret; 
0x08060875: push esp; and al, 4; setae al; ret; 
0x08079749: push esp; and al, 8; call 0x316b0; add esp, 0x18; pop ebx; ret; 
0x080b2ef1: push esp; and al, 8; call eax; 
0x080b0279: push esp; and al, 8; mov dword ptr [eax + 0x4c], edx; ret; 
0x080998d3: push esp; and al, 8; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0805fb09: push esp; and al, 8; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x08087bf9: push esp; and al, 8; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x08083693: push esp; call eax; 
0x0807f905: push esp; call edx; 
0x0808e924: push esp; cmp dword ptr [edi], ecx; test byte ptr [edx + eax], bl; add byte ptr [ebx + 0xf0c2454], cl; mov esi, 0xc7542444; ret 0xfff0; 
0x0808f805: push esp; idiv edi; call dword ptr [edx + 0x50]; 
0x080530d4: push esp; idiv edi; dec dword ptr [ebx - 0x8df73]; dec dword ptr [ebx - 0x8af7b]; call dword ptr [edx - 0x75]; 
0x0805368f: push esp; idiv edi; dec dword ptr [ecx + 0x208d8bc2]; idiv edi; dec dword ptr [ebx - 0x8af7b]; call dword ptr [esi - 0x18]; 
0x08051a66: push esp; idiv edi; dec dword ptr [ecx - 0x8a77b]; jmp dword ptr [ebp - 0x75]; 
0x0805b5fb: push esp; mov eax, dword ptr [ebp - 0x2c]; sub esp, 8; push -1; push dword ptr [eax]; call dword ptr [ebx + 0xc]; 
0x080497ec: push esp; or dword ptr [eax], eax; add byte ptr [ecx - 0x763fcf30], cl; ret 0x8789; 
0x08064eba: push esp; push cs; std; dec dword ptr [ebp - 0x301e66a]; call dword ptr [eax - 0x73]; 
0x080b02fa: push esp; ret; 
0x0809a7ea: push esp; sbb al, byte ptr [eax]; add byte ptr [ebp - 0x76e4febc], cl; loope 0x5277e; ret 0x25; 
0x080b2d6a: push esp; sbb dword ptr [eax], eax; add byte ptr [ebp - 0x7cec8b40], al; in al, dx; or byte ptr [ebp - 0x3240f6d], cl; call dword ptr [edx + 0x50]; 
0x0807ae3f: push esp; sub ch, bh; call dword ptr [eax - 0x18]; 
0x080a63b9: push esp; xchg dword ptr [ebx + eax*4], eax; ret 0x8901; 
0x080b3277: push ss; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xor ebp, 0x41; std; call dword ptr [eax - 0x18]; 
0x08088c59: push ss; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x08066fd4: push ss; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x08088865: push ss; and bh, ah; inc dword ptr [0x5c797]; mov eax, 0xfffffff4; add eax, dword ptr gs:[0]; ret; 
0x080713e9: push ss; bsf eax, eax; add eax, edx; add eax, ecx; ret; 
0x080a7930: push ss; cli; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x08087b49: push ss; dec byte ptr [ebx - 0x9773]; jmp dword ptr [esi - 0x77]; 
0x08071019: push ss; lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x080823ae: push ss; ret 0xfd35; 
0x080a5318: push ss; std; call dword ptr [edx + 0x68]; 
0x0805c649: push ss; sub esp, 4; push ebp; push dword ptr [esp + 0x3c]; push edi; call dword ptr [eax + 0x20]; 
0x08082b84: pushal; aaa; std; call dword ptr [eax + 0x68]; 
0x08082605: pushal; aaa; std; call dword ptr [eax - 0x73]; 
0x08086509: pushal; adc bh, dl; call dword ptr [eax - 1]; 
0x080864b5: pushal; adc bh, dl; call dword ptr [esi + 0x31]; 
0x080a4d21: pushal; add byte ptr [eax], al; pop edx; pop ecx; pop eax; jmp dword ptr [eax]; 
0x0808d427: pushal; add dword ptr [eax], eax; add byte ptr [ecx - 0x768fdbbc], cl; ret 0xc483; 
0x0808193b: pushal; call edi; 
0x080821d0: pushal; call esi; 
0x080a904f: pushal; cld; call dword ptr [eax + 0x6a]; 
0x0807fc6a: pushal; cmp ch, bh; call dword ptr [eax + 0x68]; 
0x0807fb8a: pushal; cmp ch, bh; call dword ptr [eax - 0x73]; 
0x080862e6: pushal; cmp ebp, edi; call dword ptr [eax - 0x73]; 
0x080ae417: pushal; jne 0x16c6; add esp, 8; xor eax, eax; pop ebx; ret; 
0x080b23d7: pushal; jne 0x1762; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0807e4b5: pushal; jnp 0x364b1; call dword ptr [eax - 0x73]; 
0x0807e60e: pushal; jnp 0x3660a; call dword ptr [eax - 0x73]; 
0x080671ed: pushal; mov dh, 0xf8; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x080814cb: pushal; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x080a23b1: pushal; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x0807bfa9: pushal; mov edi, 0xfff23fe9; call dword ptr [eax - 0x73]; 
0x080791b5: pushal; outsd dx, dword ptr [esi]; push cs; or byte ptr [ebx + 0xfc08500], cl; inc esp; ret 0x66c3; 
0x08079ded: pushal; outsd dx, dword ptr [esi]; push cs; or byte ptr [ecx - 0x38b7db84], cl; ret; 
0x0808533c: pushal; pop ebp; cld; dec dword ptr [ebx - 0x72cbdba4]; and dword ptr [eax + 0x36], 0xfffffffd; call dword ptr [eax + 0x68]; 
0x080a23fc: pushal; pop ebx; pop esi; pop edi; ret; 
0x0807f320: pushal; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x0807ee4e: pushal; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0807f8f9: pushal; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; mov edx, dword ptr [esp + 0x54]; call edx; 
0x08081937: pushal; push dword ptr [esp + 0x60]; call edi; 
0x080821cc: pushal; push dword ptr [esp + 0x60]; call esi; 
0x080814c7: pushal; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0808017b: pushal; push dword ptr [esp + 0x68]; call edi; 
0x0807fec5: pushal; push dword ptr [esp + 0x68]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0806461c: pushal; ret 0xffff; 
0x08061d1f: pushal; sbb byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x080b025e: pushal; shr eax, 0x1f; mov dword ptr [ecx], eax; mov eax, dword ptr [edx + 0x4c]; ret; 
0x08085346: pushal; std; call dword ptr [eax + 0x68]; 
0x08084f8b: pushal; std; call dword ptr [eax - 0x73]; 
0x0807ae4b: pushal; sub bh, ch; call dword ptr [eax - 0x73]; 
0x080582b7: pushal; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x08095890: pushfd; add byte ptr [eax], al; add byte ptr [ebx + 0x949e], cl; add bh, al; ret 0x5f80; 
0x08094586: pushfd; add byte ptr [eax], al; add byte ptr [ebx - 0x4637b], cl; inc dword ptr [eax - 0x41273]; call dword ptr [eax]; 
0x08088caf: pushfd; and al, 0xa0; add byte ptr [eax], al; add byte ptr [eax + 0xaf], bh; mov esi, 8; call dword ptr gs:[0x10]; 
0x0809fe85: pushfd; call eax; 
0x080afe62: pushfd; cld; call dword ptr [eax - 0x73]; 
0x0805317a: pushfd; idiv edi; call dword ptr [eax + 0x6b]; 
0x080a0364: pushfd; mov eax, dword ptr [ebp - 0x5c]; add esp, 0x20; mov dword ptr [ebp - 0x5c], edx; call eax; 
0x080823ad: pushfd; push ss; ret 0xfd35; 
0x0809bd30: rcl ah, 0x5c; push cs; or bh, bh; jne 0x53d50; call dword ptr [eax]; 
0x0807c2e1: rcl ah, 0x5e; push cs; or bh, al; ret 0x59a4; 
0x0805b0b7: rcl ah, 0x62; push cs; or bh, al; ret 0x5f80; 
0x0805b5d4: rcl ah, 0x62; push cs; or bh, al; ret; 
0x080aaf84: rcl byte ptr [eax + 0x52], 1; call 0x2ff20; add esp, 0x18; pop ebx; ret; 
0x08052942: rcl byte ptr [eax + 0x52], 1; push dword ptr [ebp - 0x890]; call dword ptr [ebx + 0x1c]; 
0x08058ca0: rcl byte ptr [eax + 0x52], 1; push edi; call dword ptr [ebx + 0x38]; 
0x08049e47: rcl byte ptr [eax + edx*2], 0x8d; sub dword ptr [eax + esi*8], -4; call dword ptr [eax - 0x18]; 
0x08068ca3: rcl byte ptr [eax], 0x83; ret 0x5310; 
0x08071e99: rcl byte ptr [eax], 0x83; ret 0x5710; 
0x080a7f16: rcl byte ptr [eax], 1; cmp eax, dword ptr [ecx + 0x1b64]; jae 0x5ff2b; mov edx, dword ptr [ecx + 0x1b68]; add word ptr [edx + eax*2], 1; ret; 
0x08083fda: rcl byte ptr [ebp - 1], cl; dec dword ptr [ebx - 0x72cbdba4]; xor dword ptr [eax + 0x35], 0xfffffffd; call dword ptr [eax - 0x73]; 
0x08049dbf: rcl byte ptr [ecx + ecx*4], 0x45; call 0x8d0d0a4b; or dword ptr [eax], 0xfffffff0; cld; call dword ptr [eax - 0x18]; 
0x0805b1ba: rcl byte ptr [ecx], 0; add bh, al; ret 0x60a0; 
0x080b0d73: rcl byte ptr [esi - 0x7d], cl; ret; 
0x0806208b: rcl dword ptr [eax], 0x83; ret; 
0x0805fdff: rcr byte ptr [eax - 0x74f7f1b0], 0; ret; 
0x0804f42a: rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x0805ba6d: rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x0805159e: rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x080b0cec: rcr byte ptr [ebx + 0x5e], 1; pop edi; ret; 
0x0807935c: rcr byte ptr [ebx + 0x5e], 1; ret; 
0x08050aba: rcr byte ptr [ebx - 0x77], cl; rcr byte ptr [esi + 0x5f], 1; pop ebp; ret; 
0x0805cf79: rcr byte ptr [ebx - 9], 0xd8; ret; 
0x08099de9: rcr byte ptr [ebx], 0x89; jecxz 0x51d77; shl dword ptr [0xfffff000], 0x29; ret; 
0x0809a41e: rcr byte ptr [ebx], 0x89; out 0x89, eax; ret 0x25; 
0x08053988: rcr byte ptr [ebx], 0x89; ret 0x25; 
0x080551f5: rcr byte ptr [ebx], 0x89; shl dword ptr [0xfffff000], 0x29; ret; 
0x0809aa31: rcr byte ptr [edi + 0x5d], 1; ret; 
0x0806b49a: rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x080661a5: rcr byte ptr [edx + 0x5b], 0x5e; ret; 
0x080a7d32: rcr byte ptr [esi + 0x5f], 0x5d; ret; 
0x08050abd: rcr byte ptr [esi + 0x5f], 1; pop ebp; ret; 
0x08076677: rcr byte ptr [esi + 0x5f], 1; ret; 
0x08087222: rcr byte ptr [esi], 0x89; loope 0x3f1b0; ret 0x25; 
0x0804b98c: rcr byte ptr [esi], 0x89; ret 0x25; 
0x080a5703: rcr dword ptr [ebx + 0x5e], 1; sbb eax, eax; and eax, 2; sub eax, 1; ret; 
0x080612f4: rcr dword ptr [ebx - 0x77], 0xc8; pop esi; pop edi; pop ebp; ret; 
0x080773bc: rcr dword ptr [edi], 0xfd; call dword ptr [eax + 0x6a]; 
0x0804fe22: rdtsc; ror byte ptr [edi], 1; mov dh, 0x11; test dl, dl; jne 0x7e09; ret; 
0x08074eee: rep movsb byte ptr es:[edi], byte ptr [esi]; pop eax; mov edi, eax; mov esi, edx; mov eax, dword ptr [esp + 4]; ret; 
0x08074f81: rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; mov eax, dword ptr [esp + 8]; cld; pop edi; ret; 
0x08074f57: rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x08074fd0: rep movsd dword ptr es:[edi], dword ptr [esi]; xchg eax, edi; mov esi, edx; ret; 
0x0807501f: rep stosb byte ptr es:[edi], al; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0807501b: rep stosd dword ptr es:[edi], eax; mov ecx, edx; rep stosb byte ptr es:[edi], al; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x08049891: ret 0; 
0x08087d37: ret 0x101; 
0x0809dfe8: ret 0x105; 
0x0809559f: ret 0x107; 
0x08063f99: ret 0x108; 
0x0807f679: ret 0x1189; 
0x08093a8a: ret 0x11; 
0x080aa3ef: ret 0x11eb; 
0x080ab23a: ret 0x1309; 
0x080974d5: ret 0x1373; 
0x0807df4e: ret 0x142b; 
0x080a3e76: ret 0x14; 
0x080970f8: ret 0x1575; 
0x0805807c: ret 0x1675; 
0x08071017: ret 0x1676; 
0x0805cdd5: ret 0x1689; 
0x08058891: ret 0x1888; 
0x080960e1: ret 0x1889; 
0x080b1350: ret 0x188b; 
0x08079861: ret 0x1975; 
0x080970e6: ret 0x1a74; 
0x0807af3d: ret 0x1b8; 
0x08064bf1: ret 0x1b9; 
0x0806355b: ret 0x1c8d; 
0x0807071e: ret 0x1d75; 
0x080ad93e: ret 0x1d8; 
0x080887d3: ret 0x200; 
0x08054c9a: ret 0x2075; 
0x0807538e: ret 0x2474; 
0x0804b8d7: ret 0x25; 
0x08071007: ret 0x2676; 
0x0804eaba: ret 0x268; 
0x080a2c04: ret 0x273; 
0x08070739: ret 0x275; 
0x08077bef: ret 0x27b8; 
0x0806c91a: ret 0x280f; 
0x080577e2: ret 0x28e9; 
0x0804b47a: ret 0x2901; 
0x0806807b: ret 0x2910; 
0x080a7cb9: ret 0x2912; 
0x0809e1c0: ret 0x291d; 
0x080a9721: ret 0x2953; 
0x0806bb3a: ret 0x2c73; 
0x08078e09: ret 0x2c76; 
0x0808a265: ret 0x2c8d; 
0x08062472: ret 0x2e76; 
0x080944a2: ret 0x2ee9; 
0x080813ba: ret 0x308b; 
0x080a3990: ret 0x315b; 
0x0806c4fb: ret 0x3273; 
0x0804ec3f: ret 0x3325; 
0x0806704a: ret 0x3374; 
0x08075501: ret 0x3477; 
0x080668d8: ret 0x3574; 
0x08070703: ret 0x3875; 
0x08061736: ret 0x38cb; 
0x0804f0a2: ret 0x3901; 
0x080a0e6c: ret 0x3903; 
0x0807f276: ret 0x3904; 
0x080a03eb: ret 0x3905; 
0x08060e87: ret 0x3908; 
0x080522ee: ret 0x3910; 
0x0808de31: ret 0x3917; 
0x080648dd: ret 0x3973; 
0x08070ff4: ret 0x3976; 
0x0809e587: ret 0x3980; 
0x0809ecf7: ret 0x39e9; 
0x0805d2f6: ret 0x3a3c; 
0x080a9c36: ret 0x3b01; 
0x0805d1d0: ret 0x3c01; 
0x0806bb25: ret 0x3e73; 
0x0806677a: ret 0x3ee9; 
0x08071467: ret 0x3f; 
0x0809efe1: ret 0x408b; 
0x0809888c: ret 0x408d; 
0x08060f38: ret 0x40c9; 
0x080787a7: ret 0x4189; 
0x080ad293: ret 0x418b; 
0x08088edf: ret 0x420f; 
0x0804bf44: ret 0x42c6; 
0x0809c252: ret 0x430f; 
0x08078966: ret 0x4389; 
0x08091cba: ret 0x43; 
0x0809d1bd: ret 0x43e9; 
0x080676fd: ret 0x4401; 
0x0809f2ab: ret 0x440f; 
0x0805b7f5: ret 0x4489; 
0x08051651: ret 0x448b; 
0x080af081: ret 0x448d; 
0x08083799: ret 0x44c7; 
0x0807ccee: ret 0x4589; 
0x08078f25: ret 0x458b; 
0x08060a4a: ret 0x45b7; 
0x08055f7d: ret 0x45e9; 
0x08060a0a: ret 0x45f7; 
0x08058efe: ret 0x460f; 
0x08095618: ret 0x4689; 
0x0805b7df: ret 0x468b; 
0x080a220f: ret 0x470f; 
0x080608da: ret 0x4727; 
0x080ad555: ret 0x478b; 
0x08060e09: ret 0x48b; 
0x080a1807: ret 0x48d; 
0x08070933: ret 0x498d; 
0x08077446: ret 0x4c39; 
0x0806c4e1: ret 0x4c73; 
0x08063d3f: ret 0x4c89; 
0x0809e58e: ret 0x4d84; 
0x0804a27e: ret 0x4d88; 
0x0809fc3e: ret 0x4d8b; 
0x0807aa4e: ret 0x4da0; 
0x0807d118: ret 0x4e0f; 
0x0808fee6: ret 0x4e9; 
0x080b0fce: ret 0x4f74; 
0x0808a261: ret 0x4f7d; 
0x080b050b: ret 0x5050; 
0x0805b4ea: ret 0x5052; 
0x0806bb10: ret 0x5073; 
0x080a344f: ret 0x5088; 
0x0805feca: ret 0x5137; 
0x08067bf9: ret 0x51e9; 
0x0806c89e: ret 0x528d; 
0x08068ca6: ret 0x5310; 
0x080706e8: ret 0x5375; 
0x08090f80: ret 0x537f; 
0x08058cbc: ret 0x5389; 
0x0805d30e: ret 0x540a; 
0x08077555: ret 0x5422; 
0x08082934: ret 0x542b; 
0x0807744f: ret 0x5488; 
0x080603d7: ret 0x5489; 
0x080638c1: ret 0x548b; 
0x08099c95: ret 0x5589; 
0x08058f01: ret 0x558d; 
0x080744f8: ret 0x5608; 
0x08059018: ret 0x562b; 
0x08053095: ret 0x5652; 
0x08060fc2: ret 0x5657; 
0x08095838: ret 0x5689; 
0x0805676d: ret 0x56e9; 
0x0806a119: ret 0x5708; 
0x08071e9c: ret 0x5710; 
0x08076844: ret 0x5973; 
0x080a3d49: ret 0x59a0; 
0x0807c2e7: ret 0x59a4; 
0x0806118a: ret 0x59b0; 
0x080b34c4: ret 0x59e8; 
0x08079668: ret 0x5a00; 
0x0805ad62: ret 0x5b74; 
0x080597ee: ret 0x5c8b; 
0x0804bda1: ret 0x5e9; 
0x08057fe8: ret 0x5f80; 
0x0805efea: ret 0x6017; 
0x0805ef6a: ret 0x6097; 
0x0805b1bf: ret 0x60a0; 
0x0806bafb: ret 0x6273; 
0x0805196d: ret 0x62d4; 
0x0805ebba: ret 0x6447; 
0x080a4648: ret 0x658d; 
0x0804a64a: ret 0x65; 
0x0804b054: ret 0x65c8; 
0x080a31a1: ret 0x6601; 
0x080641af: ret 0x6608; 
0x0806f833: ret 0x6640; 
0x0806c4c7: ret 0x6673; 
0x0805e95a: ret 0x66a7; 
0x080671f3: ret 0x66c3; 
0x0809f557: ret 0x675; 
0x08071027: ret 0x676; 
0x0805e7ba: ret 0x6847; 
0x0804a26b: ret 0x688c; 
0x0805e6c3: ret 0x689; 
0x0804ff65: ret 0x68b; 
0x0804a35c: ret 0x68c0; 
0x080673de: ret 0x6c3b; 
0x080a978c: ret 0x6cc8; 
0x080a36fc: ret 0x6ce0; 
0x0805e2ea: ret 0x6d17; 
0x08070d40: ret 0x6deb; 
0x080a3314: ret 0x6ee0; 
0x080a33df: ret 0x6ee4; 
0x080a9356: ret 0x6ee8; 
0x080a97af: ret 0x6eec; 
0x0804c1e7: ret 0x6ef4; 
0x0807a57e: ret 0x6f28; 
0x080a8208: ret 0x6f34; 
0x0804a78f: ret 0x6f40; 
0x080a8e20: ret 0x6f48; 
0x08088b07: ret 0x6f68; 
0x080a85bf: ret 0x6f72; 
0x0804abaf: ret 0x6f74; 
0x0804a849: ret 0x6f84; 
0x08067bb2: ret 0x7074; 
0x080620ba: ret 0x7189; 
0x08078731: ret 0x7401; 
0x0804a1d2: ret 0x7402; 
0x08071cb4: ret 0x7403; 
0x0807a550: ret 0x7404; 
0x0804a19d: ret 0x7408; 
0x08058461: ret 0x7420; 
0x0808279d: ret 0x7439; 
0x0804a1de: ret 0x7440; 
0x080810db: ret 0x74ff; 
0x0806b46f: ret 0x7501; 
0x0806b474: ret 0x7502; 
0x0806b479: ret 0x7504; 
0x0806b47e: ret 0x7508; 
0x0806b483: ret 0x7510; 
0x0806b488: ret 0x7520; 
0x0806b48d: ret 0x7540; 
0x080a0f5e: ret 0x758b; 
0x0804cafe: ret 0x758d; 
0x0809b37a: ret 0x76ff; 
0x08056231: ret 0x79e9; 
0x0804ce99: ret 0x7c80; 
0x080a18e8: ret 0x7d89; 
0x0806a159: ret 0x7e10; 
0x080947f1: ret 0x7f3c; 
0x0804a2ad: ret 0x8000; 
0x0804f8b2: ret 0x8001; 
0x080653c8: ret 0x808b; 
0x080681a5: ret 0x80; 
0x08071cd9: ret 0x8104; 
0x080b1553: ret 0x8166; 
0x0805ce9a: ret 0x8167; 
0x08060abf: ret 0x8189; 
0x080528e9: ret 0x820f; 
0x0809444e: ret 0x82e9; 
0x080755b5: ret 0x82eb; 
0x0804b937: ret 0x8301; 
0x0805289b: ret 0x8304; 
0x08068c4b: ret 0x8308; 
0x0805bd92: ret 0x830f; 
0x0806a062: ret 0x8310; 
0x08074e25: ret 0x8320; 
0x0806f884: ret 0x8340; 
0x08066da8: ret 0x8389; 
0x080a5330: ret 0x838d; 
0x08051175: ret 0x8401; 
0x0808ee77: ret 0x8404; 
0x08059791: ret 0x840f; 
0x0807c187: ret 0x848d; 
0x080620ac: ret 0x8501; 
0x0809e6b3: ret 0x8504; 
0x08079ecc: ret 0x8508; 
0x080535da: ret 0x850f; 
0x080714ba: ret 0x8540; 
0x08088541: ret 0x8589; 
0x0804e5fc: ret 0x858b; 
0x0809f549: ret 0x8603; 
0x0804a966: ret 0x860f; 
0x08055629: ret 0x870f; 
0x080947f8: ret 0x875; 
0x080497f5: ret 0x8789; 
0x0804c699: ret 0x8801; 
0x08057b08: ret 0x8901; 
0x0804fa6c: ret 0x8902; 
0x08051fc0: ret 0x8904; 
0x0807a039: ret 0x8908; 
0x0807cde2: ret 0x8909; 
0x08088577: ret 0x8910; 
0x08057c0a: ret 0x891b; 
0x08099a90: ret 0x891d; 
0x080b1ee0: ret 0x895b; 
0x080a2feb: ret 0x8960; 
0x0805d457: ret 0x8b01; 
0x08074e54: ret 0x8b04; 
0x0804da69: ret 0x8b08; 
0x08061b9c: ret 0x8b10; 
0x0805faee: ret 0x8b30; 
0x0807cd60: ret 0x8b3c; 
0x080a9205: ret 0x8b8b; 
0x0809620e: ret 0x8b90; 
0x0805fae5: ret 0x8b; 
0x0808c345: ret 0x8c0f; 
0x0807c31a: ret 0x8ce7; 
0x0804fa31: ret 0x8d01; 
0x08051466: ret 0x8d0f; 
0x08071401: ret 0x8d10; 
0x080b149d: ret 0x8d58; 
0x08053694: ret 0x8d8b; 
0x0807ec14: ret 0x8dc3; 
0x080890df: ret 0x8e0f; 
0x08091809: ret 0x8e9; 
0x08093b6e: ret 0x8f0f; 
0x08074854: ret 0x920f; 
0x0805bcba: ret 0x9347; 
0x080a03c4: ret 0x940f; 
0x08083586: ret 0x948b; 
0x08077443: ret 0x950f; 
0x080555c8: ret 0x9529; 
0x08051e38: ret 0x9589; 
0x0809bed1: ret 0x95e9; 
0x080aa4a2: ret 0x962b; 
0x080585fb: ret 0x9689; 
0x08085e31: ret 0x973b; 
0x080aaf0c: ret 0x974; 
0x0809ba04: ret 0x9789; 
0x0806247c: ret 0x98b; 
0x080978dd: ret 0x98eb; 
0x0805c712: ret 0x9e8b; 
0x0809eea7: ret 0x9e9; 
0x0805b0aa: ret 0x9f57; 
0x080a2c65: ret 0x9f8b; 
0x080ab2dc: ret 0xa365; 
0x08057967: ret 0xa3e9; 
0x080aab63: ret 0xa74; 
0x08063244: ret 0xa7e; 
0x08050771: ret 0xab75; 
0x08062146: ret 0xaf74; 
0x08049d70: ret 0xb292; 
0x08079cca: ret 0xb337; 
0x0804ffd6: ret 0xb48d; 
0x080790a0: ret 0xb574; 
0x0804b8c3: ret 0xb60f; 
0x0809999a: ret 0xb667; 
0x080b2949: ret 0xb6eb; 
0x080ad489: ret 0xb70f; 
0x080a1756: ret 0xb775; 
0x0807976a: ret 0xb897; 
0x080953f4: ret 0xb904; 
0x080b1015: ret 0xb975; 
0x0807555a: ret 0xb9; 
0x080a3955: ret 0xba; 
0x080a5689: ret 0xbb01; 
0x0809b579: ret 0xbc75; 
0x080604b1: ret 0xbc77; 
0x080534fd: ret 0xbd83; 
0x080841c9: ret 0xbdeb; 
0x0808f19d: ret 0xbe08; 
0x080a1741: ret 0xc031; 
0x08050a56: ret 0xc083; 
0x0804c76e: ret 0xc085; 
0x0806c7d3: ret 0xc0be; 
0x0807a295: ret 0xc0c7; 
0x080597fe: ret 0xc101; 
0x0808b76a: ret 0xc108; 
0x08085087: ret 0xc183; 
0x0804db5a: ret 0xc189; 
0x080a27ca: ret 0xc239; 
0x0806c349: ret 0xc2bb; 
0x08086ebb: ret 0xc301; 
0x080a1a86: ret 0xc383; 
0x08078365: ret 0xc389; 
0x08050e92: ret 0xc483; 
0x08086e6f: ret 0xc601; 
0x08079ff4: ret 0xc608; 
0x0809b357: ret 0xc639; 
0x0809a3d1: ret 0xc683; 
0x080a1ba9: ret 0xc689; 
0x0804fb69: ret 0xc702; 
0x0808392d: ret 0xc704; 
0x0805bdf5: ret 0xc729; 
0x080a3398: ret 0xc75; 
0x080aea79: ret 0xc789; 
0x0809bc9c: ret 0xc801; 
0x0805e6b8: ret 0xc883; 
0x0807c62e: ret 0xc889; 
0x080a283b: ret 0xc977; 
0x08055f19: ret 0xc985; 
0x080a3d9f: ret 0xc; 
0x08049a82: ret 0xca21; 
0x08094b35: ret 0xca39; 
0x080985ba: ret 0xca47; 
0x08088be9: ret 0xca81; 
0x080ab2d4: ret 0xca83; 
0x0805851a: ret 0xcae7; 
0x08089b0c: ret 0xcb01; 
0x08066f50: ret 0xcb8; 
0x0805bc30: ret 0xcde9; 
0x0805c61b: ret 0xce01; 
0x0804e3a5: ret 0xce80; 
0x0805793b: ret 0xcfe9; 
0x0804abba: ret 0xd039; 
0x0804b8e6: ret 0xd089; 
0x080ab68a: ret 0xd139; 
0x08049b5a: ret 0xd189; 
0x08067dfa: ret 0xd207; 
0x08067dba: ret 0xd247; 
0x0804a761: ret 0xd284; 
0x0804b7ab: ret 0xd285; 
0x08067d7a: ret 0xd287; 
0x08067d3a: ret 0xd2c7; 
0x0804eb45: ret 0xd2f7; 
0x08067cfa: ret 0xd307; 
0x08067cba: ret 0xd347; 
0x080a7bca: ret 0xd437; 
0x080ab010: ret 0xd689; 
0x0804ce84: ret 0xd789; 
0x0809b55d: ret 0xd875; 
0x080547bb: ret 0xd889; 
0x080a9e34: ret 0xd975; 
0x0806617e: ret 0xda21; 
0x0809779e: ret 0xda29; 
0x08056ad6: ret 0xda39; 
0x080a736e: ret 0xda80; 
0x08050e8b: ret 0xdaf7; 
0x0806f73e: ret 0xdb31; 
0x080674ba: ret 0xdb47; 
0x08094029: ret 0xdb85; 
0x0806728a: ret 0xdd77; 
0x0806724a: ret 0xddb7; 
0x0806720a: ret 0xddf7; 
0x080671ca: ret 0xde37; 
0x080aaa74: ret 0xde39; 
0x08078799: ret 0xe083; 
0x08067fa1: ret 0xe0c1; 
0x080a1738: ret 0xe0d3; 
0x080a99c9: ret 0xe181; 
0x080713d1: ret 0xe183; 
0x08097e85: ret 0xe280; 
0x0804fe12: ret 0xe281; 
0x08049fca: ret 0xe283; 
0x080b0053: ret 0xe2c1; 
0x0808b920: ret 0xe3c1; 
0x080a99ff: ret 0xe689; 
0x080892f8: ret 0xe74; 
0x08079a96: ret 0xe774; 
0x0809c255: ret 0xe883; 
0x080b18b1: ret 0xe889; 
0x0809caef: ret 0xe8c0; 
0x08049cdb: ret 0xe8c1; 
0x0809670a: ret 0xe8f7; 
0x0804c681: ret 0xe901; 
0x0805209f: ret 0xe9c0; 
0x08083a35: ret 0xe9e9; 
0x08056349: ret 0xe; 
0x0805d2fd: ret 0xea09; 
0x0806295c: ret 0xea39; 
0x080754f9: ret 0xea81; 
0x08070d95: ret 0xea83; 
0x080803d9: ret 0xea89; 
0x0808a7c6: ret 0xeac0; 
0x08049f39: ret 0xeac1; 
0x0809d89e: ret 0xead3; 
0x0804da60: ret 0xeb04; 
0x08067c22: ret 0xeb75; 
0x0806668d: ret 0xec83; 
0x0808cadf: ret 0xee7f; 
0x0806a317: ret 0xf01; 
0x08071cc1: ret 0xf029; 
0x0807040a: ret 0xf02; 
0x08099d05: ret 0xf03; 
0x0806a2e6: ret 0xf04; 
0x0804ac76: ret 0xf089; 
0x08054695: ret 0xf08; 
0x080703b3: ret 0xf10; 
0x080a5f0c: ret 0xf175; 
0x080703c4: ret 0xf20; 
0x080a1748: ret 0xf221; 
0x0808d3bd: ret 0xf229; 
0x0809dab6: ret 0xf231; 
0x0808affb: ret 0xf27f; 
0x08071c9f: ret 0xf289; 
0x08075d2a: ret 0xf2d7; 
0x08088ee2: ret 0xf301; 
0x080a5c5a: ret 0xf375; 
0x080703d5: ret 0xf40; 
0x0809c3e1: ret 0xf475; 
0x0808ac49: ret 0xf50; 
0x0809c4e0: ret 0xf575; 
0x080a733a: ret 0xf58c; 
0x08071cb1: ret 0xf601; 
0x080ab541: ret 0xf604; 
0x08069fb4: ret 0xf608; 
0x08077bd2: ret 0xf631; 
0x080685a8: ret 0xf66; 
0x080786d2: ret 0xf685; 
0x08075976: ret 0xf68b; 
0x08055153: ret 0xf6ff; 
0x0809783b: ret 0xf739; 
0x08060402: ret 0xf789; 
0x0807607a: ret 0xf829; 
0x08056d00: ret 0xf883; 
0x0805ad2d: ret 0xf889; 
0x0805bb60: ret 0xf919; 
0x0808d6e8: ret 0xf980; 
0x08081186: ret 0xf989; 
0x080a9afa: ret 0xf9f5; 
0x0806806a: ret 0xf; 
0x080a88da: ret 0xfa27; 
0x0805c766: ret 0xfa39; 
0x08099d4c: ret 0xfa83; 
0x0804ec5d: ret 0xfac1; 
0x0807694d: ret 0xfba9; 
0x080991ba: ret 0xfc76; 
0x0807db0a: ret 0xfcb5; 
0x080823af: ret 0xfd35; 
0x0809448a: ret 0xfe1b; 
0x080a7506: ret 0xfe3d; 
0x0804cc93: ret 0xfe81; 
0x0808a5ba: ret 0xfead; 
0x0806c344: ret 0xff3; 
0x0806080b: ret 0xff50; 
0x08055efa: ret 0xff52; 
0x080a81ca: ret 0xff60; 
0x08075d46: ret 0xff65; 
0x08058071: ret 0xff81; 
0x0805eae7: ret 0xff85; 
0x080660ba: ret 0xffb2; 
0x0807ec0c: ret 0xffba; 
0x080888b0: ret 0xffd0; 
0x08050301: ret 0xffe0; 
0x08053a91: ret 0xffe8; 
0x08056109: ret 0xffea; 
0x0806139d: ret 0xffec; 
0x0808b1ca: ret 0xfff0; 
0x0804fd54: ret 0xfff8; 
0x0804976a: ret 0xfff9; 
0x08091f95: ret 0xfffb; 
0x080aa716: ret 0xfffc; 
0x0807a112: ret 0xfffd; 
0x0804dbc6: ret 0xfffe; 
0x0806461d: ret 0xffff; 
0x08058c67: ret 1; 
0x0804c1b7: ret 2; 
0x08089a92: ret 3; 
0x08066a64: ret 4; 
0x0809113b: ret 5; 
0x0808ddca: ret 6; 
0x08069721: ret 7; 
0x0806bcc0: ret 8; 
0x0804900e: ret; 
0x08099635: retf 0; add byte ptr [ebp - 1], ah; adc eax, 0x10; ret; 
0x080904f4: retf 0x11; add byte ptr [ebx - 0x8bf7b], cl; inc dword ptr [ebp - 0x787af040]; adc al, byte ptr [eax]; add byte ptr [ebx - 0x89b43], al; call dword ptr [ebx + 0xf]; 
0x0805ff9f: retf 0x1e73; movzx eax, byte ptr [edx]; pop ebx; pop esi; ret; 
0x08070d21: retf 0x2c76; add eax, ecx; ret; 
0x0804c978: retf 0x438b; add al, 0x83; ret; 
0x080988ff: retf 0x474; test edx, edx; jne 0x508f8; ret; 
0x0808e363: retf 0x748d; add dh, dh; ret 0xf08; 
0x080ab2d6: retf 0x8402; fisttp dword ptr [edi]; inc ebp; ret 0xa365; 
0x08060f9d: retf 0x975; add esp, 8; pop ebx; ret; 
0x0804b8ba: retf 0xc083; add dword ptr [eax - 0x6bf0d006], eax; ret 0xb60f; 
0x0807074f: retf 0xc839; ja 0x28760; sub edi, 0x10; add eax, edi; pop edi; ret; 
0x0805eac5: retf 0xd039; jbe 0x16b90; sub esp, 0xc; push esi; call dword ptr [ebp + 0x30]; 
0x0805ef9e: retf 0xd039; jbe 0x16fd0; sub esp, 8; push ebx; push esi; call dword ptr [edi + 0x18]; 
0x080a258a: retf 0xe375; mov eax, dword ptr [edx]; pop ebx; pop esi; ret; 
0x080a0ac7: retf 0xe904; sub bh, 0xff; jmp dword ptr [esi - 0x70]; 
0x080898ce: retf 0xf0b8; add byte ptr [eax], al; add byte ptr [ebp + 0x1a3c9b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0805f081: retf 0xf477; add eax, dword ptr [esp + 8]; pop ebx; ret; 
0x08078c61: retf 0xfd20; call dword ptr [eax - 0x18]; 
0x0807a00a: retf 0xfffe; jmp dword ptr [esi - 0x70]; 
0x0806be8b: retf 0xffff; jmp dword ptr [esi + 0xf]; 
0x08074850: retf; add cl, byte ptr [edi]; xchg eax, esp; ret 0x920f; 
0x08088a05: retf; lea ecx, [esp + 0x8c]; call dword ptr gs:[0x10]; 
0x08099841: retf; sub bh, dh; inc dword ptr [ebx + 0x5e5b04c4]; ret; 
0x08053ab3: rol bh, cl; test dword ptr [edi + esi*8 - 1], esp; call dword ptr [eax]; 
0x08061f2e: rol byte ptr [eax + eax], 0; ret; 
0x08055ef0: rol byte ptr [eax - 0x47f43], cl; lcall [eax + 0xf]; xchg eax, esp; ret 0xff52; 
0x0807a28f: rol byte ptr [eax - 0x6af0ffc8], cl; ret 0xc0c7; 
0x0807a9c9: rol byte ptr [eax - 0x6bf0ffc8], cl; ret 0xc0c7; 
0x0805308b: rol byte ptr [eax - 0x8c743], cl; lcall [eax + 0xf]; xchg eax, esp; ret 0x5652; 
0x08049014: rol byte ptr [eax], 0; add byte ptr [eax], al; test eax, eax; je 0x101f; call eax; 
0x08099d00: rol byte ptr [eax], 0; add dh, dh; ret 0xf03; 
0x08068067: rol byte ptr [eax], 0xf7; ret 0xf; 
0x0807a289: rol byte ptr [ebp + 0x310874c0], cl; rol byte ptr [eax - 0x6af0ffc8], cl; ret 0xc0c7; 
0x08071510: rol byte ptr [ebp + 0x663b75c0], 0xf; xlatb; ret 0xc085; 
0x0805c199: rol byte ptr [ebx + 0x525004ec], 1; push esi; call ecx; 
0x0805d704: rol byte ptr [ebx + 0x5e5b0cc4], 0x5f; pop ebp; ret; 
0x0808eec7: rol byte ptr [ebx + 0x5e5b10c4], 0x5f; pop ebp; ret; 
0x080b0c9e: rol byte ptr [ebx + 0x5e5b10c4], 0x5f; ret; 
0x08078008: rol byte ptr [ebx + 0x5e5b10c4], cl; pop edi; ret; 
0x080757b1: rol byte ptr [ebx + 0x5e5b1cc4], 0x5f; pop ebp; ret; 
0x0805da2a: rol byte ptr [ebx + 0x5e5b2cc4], 0x5f; pop ebp; ret; 
0x08050eb2: rol byte ptr [ebx + 0x5e5b3cc4], 0x5f; pop ebp; ret; 
0x080a5707: rol byte ptr [ebx - 0x177cfd20], 1; ret; 
0x080b0ce7: rol byte ptr [ebx - 0x2f76ef3c], cl; pop ebx; pop esi; pop edi; ret; 
0x08065af1: rol byte ptr [ebx - 0x3b7cef3c], 1; adc al, 0x5b; pop esi; ret; 
0x080aba65: rol byte ptr [ebx - 0x49f0e33c], 0xc0; neg eax; ret; 
0x0805cf73: rol byte ptr [ebx - 0x49f0f73c], 0xc0; pop ebx; neg eax; ret; 
0x08049a7c: rol byte ptr [ebx - 0x6bf0fc05], cl; ret 0xca21; 
0x080971bc: rol byte ptr [ebx - 0x77cf320], 1; add al, 0x75; ret; 
0x0804bafb: rol byte ptr [ebx - 0x7c72f314], 1; adc bl, dh; cld; call dword ptr [eax - 0x18]; 
0x08071876: rol byte ptr [ebx], 0x5f; ret; 
0x080754f0: rol byte ptr [ecx + 0xbefe], cl; add byte ptr [edi], cl; lahf; ret 0xea81; 
0x080988fc: rol byte ptr [ecx + edi], 0xca; je 0x50906; test edx, edx; jne 0x508f8; ret; 
0x0808cada: rol byte ptr [ecx], 0x29; fidivr dword ptr [ecx]; ret 0xee7f; 
0x0808aff8: rol byte ptr [ecx], 0x39; ret 0xf27f; 
0x0809c3de: rol byte ptr [ecx], 0x39; ret 0xf475; 
0x0809c4dd: rol byte ptr [ecx], 0x39; ret 0xf575; 
0x08051139: rol byte ptr [ecx], 0x39; ret; 
0x0809887d: rol byte ptr [ecx], 0x50; push edi; lea eax, [esp + 0x40]; push eax; push dword ptr [ebp]; call esi; 
0x08071c31: rol byte ptr [ecx], 0x5f; ret; 
0x08082410: rol byte ptr [ecx], 0x83; ret 0x8801; 
0x0807ed2a: rol byte ptr [ecx], 0x83; ret 0x8901; 
0x0805d454: rol byte ptr [ecx], 0x83; ret 0x8b01; 
0x080675fb: rol byte ptr [ecx], 0x83; ret; 
0x08049b57: rol byte ptr [ecx], 0x89; ret 0xd189; 
0x080713ec: rol byte ptr [ecx], 0xd0; add eax, ecx; ret; 
0x08071552: rol byte ptr [ecx], 0xd0; ret; 
0x08070fc2: rol byte ptr [ecx], 0xf8; pop edi; ret; 
0x08098355: rol byte ptr [ecx], 0xf8; sub eax, 0x10; pop edi; ret; 
0x0807047c: rol byte ptr [ecx], 1; add byte ptr [eax], al; lea eax, [edi + 0xf]; pop edi; ret; 
0x080a5cd7: rol byte ptr [ecx], 1; ret; 
0x0807189c: rol byte ptr [edi], 0x5f; ret; 
0x080ab839: rol byte ptr [edx], 0; add byte ptr [eax], al; call 0x637f0; add eax, ebx; jmp eax; 
0x08071c36: rol byte ptr [edx], 0x5f; ret; 
0x08071c4a: rol byte ptr [esi], 0x5f; ret; 
0x08090283: rol cl, 1; clc; add dl, byte ptr [eax + 0x52]; push dword ptr [ebp - 0x8a0]; call dword ptr [ebx + 0x1c]; 
0x08098a4a: rol dword ptr [eax + 0x20740fe1], 1; ret; 
0x08069f2c: rol dword ptr [eax + 0x75], 0x70; movzx ecx, byte ptr [eax + 7]; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x080749ec: rol dword ptr [eax], 0; inc dword ptr [eax]; je 0x2c9f4; inc eax; pop edi; ret; 
0x080ad11f: rol dword ptr [eax], 0x5a; push cs; or bh, al; ret; 
0x08070fa1: rol dword ptr [ebp + 0x315a75c0], 0xc0; pop edi; ret; 
0x08070a6f: rol dword ptr [ebp - 0x377af040], 0; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x08070f67: rol dword ptr [ebp - 0x4f7af040], 0; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x08078726: rol dword ptr [ebx + 0x4d89fee1], 1; aam 0x8b; dec eax; or dh, dh; ret 0x7401; 
0x080acfdc: rol dword ptr [ebx + 0x5e5b1cc4], cl; pop edi; pop ebp; ret; 
0x080a1a6e: rol dword ptr [ecx], 0x31; ret; 
0x080a1d44: rol dword ptr [ecx], 0x75; call 0x83fdf7d7; ret 0x8908; 
0x08097a13: rol dword ptr [ecx], 0x83; mov byte ptr [ecx], 0x84; sal byte ptr [esp + 0xf], cl; mov esi, 0x39da891e; ret; 
0x0807f53e: rol dword ptr [ecx], 0x83; ret 0x3904; 
0x0808ee74: rol dword ptr [ecx], 0x83; ret 0x8404; 
0x08088574: rol dword ptr [ecx], 0x83; ret 0x8910; 
0x080762a4: rol dword ptr [ecx], 0x83; ret 0x8b01; 
0x0806a314: rol dword ptr [ecx], 0x83; ret 0xf01; 
0x08080faf: rol dword ptr [ecx], 0x83; ret; 
0x080a9786: rol dword ptr [ecx], 0x89; dec edx; or bh, al; ret 0x6cc8; 
0x080ab2ba: rol dword ptr [ecx], 0xc9; call dword ptr gs:[0x10]; 
0x080a1734: rol dword ptr [ecx], 0xf; movsd dword ptr es:[edi], dword ptr [esi]; ret 0xe0d3; 
0x080935df: rol dword ptr [edi + ecx], 0xb6; add byte ptr [ecx - 0x46373], cl; call dword ptr [eax - 0x18]; 
0x080b266e: rol dword ptr [edi], 9; ret; 
0x080a9e28: rol dword ptr [esi + edi*4], 1; add byte ptr [eax], al; add byte ptr [ebp + 0x391074c0], al; ret 0xd975; 
0x0809b2c3: rol edi, 1; ret 0x59b0; 
0x08095089: rol edi, cl; ret 0x62d4; 
0x08053429: ror byte ptr [eax - 0x7a72f2ba], 1; cwde; idiv edi; call dword ptr [eax + 0x6b]; 
0x08053174: ror byte ptr [eax - 0x7a72f2ba], 1; pushfd; idiv edi; call dword ptr [eax + 0x6b]; 
0x08090c2d: ror byte ptr [eax - 0x7a72f2ba], 1; xor bh, 0xff; call dword ptr [eax + 0x56]; 
0x08071c54: ror byte ptr [eax], 0x5f; ret; 
0x080744f5: ror byte ptr [eax], 0x83; ret 0x5608; 
0x0806a116: ror byte ptr [eax], 0x83; ret 0x5708; 
0x08069fb1: ror byte ptr [eax], 0x83; ret 0xf608; 
0x0807851e: ror byte ptr [ebp + 0x5e5bf465], 0x5f; pop ebp; ret; 
0x0809a2ff: ror byte ptr [ebp + 0x5e5bf465], 1; pop edi; pop ebp; ret; 
0x080ae577: ror byte ptr [ebp + 0x5e5bf465], cl; pop edi; pop ebp; ret; 
0x080b0a74: ror byte ptr [ebp - 0x3fceff8a], cl; ret; 
0x080a1a80: ror byte ptr [ebp - 0x76f7cd8c], 1; ret 0xc383; 
0x080a4eb2: ror byte ptr [ebx + 0x651c244c], 1; xor ecx, dword ptr [0x14]; jne 0x5cecc; add esp, 0x2c; ret; 
0x080a5172: ror byte ptr [ebx + 0x651c244c], 1; xor ecx, dword ptr [0x14]; jne 0x5d18c; add esp, 0x2c; ret; 
0x080576f5: ror byte ptr [ebx - 0x51b7c74], 0xfc; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x08057649: ror byte ptr [ebx - 0x5c37c74], 0xfc; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x080793b1: ror byte ptr [ebx - 0x7297db84], 0x83; jnp 0x313ad; cld; call dword ptr [eax - 0x73]; 
0x080998c9: ror byte ptr [ebx - 0x74bbdb8c], 0x5c; and al, 0x40; lea edx, [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x080718c3: ror byte ptr [ebx], 0x5f; ret; 
0x080969f6: ror byte ptr [ecx + 0x4c4830b], 0x5b; pop esi; ret; 
0x0808f1ec: ror byte ptr [ecx + 0x5f5e5b3b], cl; ret; 
0x08088a57: ror byte ptr [ecx + 0x8bee9], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x080a565a: ror byte ptr [ecx - 0x3b7ce7ba], 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0805112e: ror byte ptr [ecx - 0x72eb1436], 0x74; add byte ptr es:[eax + 0x3901c083], dl; ret; 
0x08071c59: ror byte ptr [ecx], 0x5f; ret; 
0x080ad084: ror byte ptr [edi], 0x44; ret 0x4c89; 
0x080791bc: ror byte ptr [edi], 0x44; ret 0x66c3; 
0x080ad70a: ror byte ptr [edi], 0x44; ret 0xec83; 
0x080a8b22: ror byte ptr [edi], 0x44; ret; 
0x080a1418: ror byte ptr [edi], 0x44; test dword ptr [edi + edi*8 - 1], esi; call dword ptr [eax - 1]; 
0x080b02c6: ror byte ptr [edi], 0x45; inc esp; and al, 0x1c; add esp, 0x28; pop ebx; ret; 
0x0809b3d2: ror byte ptr [edi], 0x45; ret 0x8789; 
0x080607de: ror byte ptr [edi], 0x48; ret 0x4489; 
0x08060808: ror byte ptr [edi], 0x48; ret 0xff50; 
0x080718ec: ror byte ptr [edi], 0x5f; ret; 
0x0807aa46: ror byte ptr [edi], 0x84; add al, byte ptr [eax]; add bh, al; ret 0x4da0; 
0x080793cd: ror byte ptr [edi], 0x84; lodsb al, byte ptr [esi]; add dword ptr [eax], eax; add byte ptr [ecx - 0x76ff743a], cl; ret 0xce80; 
0x08098bad: ror byte ptr [edi], 0x84; mov esp, 0x83000000; in al, dx; or byte ptr [edi + 0x53], dl; call eax; 
0x0804b82b: ror byte ptr [edi], 0x84; out dx, eax; add dword ptr [eax], eax; add byte ptr [ebp - 0x137cf7b0], cl; or byte ptr [ebp - 0x30cd77d], cl; call dword ptr [eax + 0x52]; 
0x08079d80: ror byte ptr [edi], 0x84; pop ebx; add al, byte ptr [eax]; add byte ptr [ebx + 0x9e0b1], cl; add bh, al; ret; 
0x08058583: ror byte ptr [edi], 0x84; ret 0; 
0x08091138: ror byte ptr [edi], 0x84; ret 5; 
0x0808ddc7: ror byte ptr [edi], 0x84; ret 6; 
0x080505de: ror byte ptr [edi], 0x84; ret; 
0x08086380: ror byte ptr [edi], 0x84; sbb eax, 0x83000001; in al, dx; or byte ptr [ebp - 0x2c6bc6d], cl; call dword ptr [edx + 0x50]; 
0x08093a51: ror byte ptr [edi], 0x84; xchg eax, ebx; add byte ptr [eax], al; add byte ptr [ebx - 0x48f43], al; call dword ptr [eax]; 
0x0809d79c: ror byte ptr [edi], 0x84; xor eax, 0x8dffffff; xor dword ptr [eax + eax*2], 0xfffffffe; call dword ptr [eax - 0x73]; 
0x0805557c: ror byte ptr [edi], 0x85; adc byte ptr gs:[eax], al; add byte ptr [eax - 0x47f43], al; call dword ptr [ebx + 0xf]; 
0x08089a83: ror byte ptr [edi], 0x85; dec esi; add dword ptr [eax], eax; add byte ptr [ebx - 0x7af7dbbc], cl; ror byte ptr [edi], 0x85; ret 3; 
0x080a0ead: ror byte ptr [edi], 0x85; idiv edi; jmp dword ptr [esi - 0x7b]; 
0x08070f69: ror byte ptr [edi], 0x85; mov al, 0; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x08070ecb: ror byte ptr [edi], 0x85; out dx, al; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret 0xc085; 
0x080932be: ror byte ptr [edi], 0x85; pop ebx; adc dword ptr [eax], eax; add byte ptr [ebx - 0x46f43], al; call dword ptr [ebx + 0xf]; 
0x080a09f5: ror byte ptr [edi], 0x85; ret 0xfff0; 
0x08089a8f: ror byte ptr [edi], 0x85; ret 3; 
0x0804a83d: ror byte ptr [edi], 0x88; add dword ptr cs:[eax], eax; add byte ptr [ebx - 0x38f3db84], cl; ret 0x6f84; 
0x08062c76: ror byte ptr [edi], 0x88; insd dword ptr es:[edi], dx; add dword ptr [eax], eax; add byte ptr [edi], cl; xchg eax, ebp; ret; 
0x0804afe0: ror byte ptr [edi], 0x88; xchg eax, ebx; add byte ptr [eax], al; add byte ptr [ebp - 0x16d397d], cl; call dword ptr [esi - 1]; 
0x0809ac53: ror byte ptr [edi], 0x89; ret 0x25; 
0x080947ee: ror byte ptr [edi], 0x94; ret 0x7f3c; 
0x080a769d: ror byte ptr [edi], 0x94; ret 0x950f; 
0x080a1a65: ror byte ptr [edi], 0x95; ret 0xe0d3; 
0x080aba62: ror byte ptr [edi], 0x95; rol byte ptr [ebx - 0x49f0e33c], 0xc0; neg eax; ret; 
0x080a5b3e: ror byte ptr [edi], 0xa5; fmul dword ptr [edx + 0x74]; sub dl, byte ptr [eax - 0xa]; ret 0x7501; 
0x080787a4: ror byte ptr [edi], 1; inc ebp; ret 0x4189; 
0x08071cbe: ror byte ptr [edi], 1; inc edi; ret 0xf029; 
0x080ac347: ror byte ptr [edi], 1; inc edx; ret 0xe883; 
0x08054ca9: ror byte ptr [edi], 1; lea eax, [eax - 0x74fffff7]; test dword ptr [ebx + edi*8 - 1], ebp; jmp dword ptr [ebp - 0x39]; 
0x0804fe24: ror byte ptr [edi], 1; mov dh, 0x11; test dl, dl; jne 0x7e09; ret; 
0x08098280: ror byte ptr [edi], 1; test cl, bl; add byte ptr [eax], al; add byte ptr [edi], cl; mov ebp, 0x5ff801c0; ret; 
0x080a43fc: ror byte ptr [edi], 1; test dword ptr [ebp - 0x7d000000], esi; ret; 
0x080706b1: ror byte ptr [edi], 1; xchg dword ptr [eax + 0x1000000], ebp; clc; add eax, ecx; pop edi; ret; 
0x080a7e67: ror byte ptr [edi], cl; dec eax; sar byte ptr [eax + 0xdc], 1; call dword ptr gs:[0x10]; 
0x0807cceb: ror byte ptr [edi], cl; inc ebp; ret 0x4589; 
0x0808fd77: ror byte ptr [edi], cl; mov byte ptr [edi - 0x9ffffe5], dl; ret 0xf40; 
0x0807ec09: ror byte ptr [edi], cl; mov dh, 0xc2; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x0807cd58: ror byte ptr [edi], cl; test byte ptr [edi + 0x6b000000], dl; ret 0x8b3c; 
0x0806b467: ror byte ptr [edi], cl; test byte ptr [edx - 0xa000000], ah; ret 0x7501; 
0x08085751: ror byte ptr [edi], cl; test byte ptr [esi - 0x7d000000], dh; ret; 
0x0804a851: ror byte ptr [edi], cl; test dword ptr [0x8b000001], ecx; je 0x287f; or al, 0xc7; ret 0x6f84; 
0x08071c5e: ror byte ptr [edx], 0x5f; ret; 
0x080988da: ror byte ptr [esi + edi*8], cl; jmp dword ptr [esi - 0x70]; 
0x08071c72: ror byte ptr [esi], 0x5f; ret; 
0x08067de1: ror ch, 0xf8; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x08070827: ror dword ptr [ebp + 0xf661049], 1; xlatb; ret 0xc085; 
0x0807194a: ror dword ptr [ebp - 0x2d7aefc0], 1; jne 0x29960; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x08088a2f: ror dword ptr [ebx + 0x1302494], 0; add byte ptr [eax + 0x10e], bh; call dword ptr gs:[0x10]; 
0x080550ae: ror dword ptr [ebx - 0x4cb73], 0xff; movzx eax, byte ptr [eax + edx - 0x20]; mov eax, dword ptr [ecx + eax*4]; jmp eax; 
0x0809b6e1: ror dword ptr [ecx + 0x1548f], 1; add cl, ch; ret; 
0x0805853c: ror dword ptr [ecx + 0x9488], 1; add byte ptr [ebx - 0x6e76a7b8], cl; mov byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x08077322: ror dword ptr [ecx - 0x74f7db8c], cl; pop esp; and al, 8; mov eax, 0xb7; mov ecx, edi; call dword ptr gs:[0x10]; 
0x080a2693: ror dword ptr [edi], 0xaf; fild word ptr [ecx]; ret; 
0x08055b66: ror dword ptr [edi], 0xb6; inc esp; adc al, ah; mov eax, dword ptr [edi + eax*4 - 0x17a0]; jmp eax; 
0x08055ac6: ror dword ptr [edi], 0xb6; inc esp; adc al, ah; mov eax, dword ptr [edi + eax*4 - 0x18a0]; jmp eax; 
0x080507e2: ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x080a3abf: sahf; adc cl, byte ptr [esi + edi*8 - 1]; call dword ptr gs:[0x10]; 
0x08081258: sahf; cld; dec dword ptr [ebx - 0x72d7dba4]; sub eax, 0x35; std; call dword ptr [eax - 0x73]; 
0x080639e1: sahf; push esp; add al, 0; add byte ptr [ecx], bh; ret; 
0x0805829d: sahf; xchg eax, esp; add byte ptr [eax], al; add bh, al; ret 0x5f80; 
0x080a79f1: sal bh, 0xd8; mov ecx, dword ptr [esp + 0xc]; xor ecx, dword ptr gs:[0x14]; jne 0x5fa05; add esp, 0x1c; ret; 
0x080a6bda: sal bh, 0xd8; pop ebx; pop esi; pop edi; ret; 
0x080aba6b: sal bh, 0xd8; ret; 
0x08052de1: sal byte ptr [eax + edi*2 - 0x7d], 0xbd; idiv edi; call dword ptr [eax]; 
0x08086411: sal byte ptr [eax + edx - 0x7b], cl; sar byte ptr [edx], 0xf; dec eax; ret 0xc083; 
0x0807af1d: sal byte ptr [eax + edx - 0x7d], 0xc4; add al, 0x5b; pop esi; ret; 
0x080788c5: sal byte ptr [eax + esi*2 - 0x75], 0x50; add al, 0xf6; ret 0x7401; 
0x08077da4: sal byte ptr [eax - 0x74f7f1a7], 0; test eax, eax; je 0x2fdb4; add esp, 8; pop ebx; ret; 
0x080a3d45: sal byte ptr [ebp + 0x18], 0xc7; ret 0x59a0; 
0x0807c047: sal byte ptr [ebp + 0x1e], 0xc7; ret 0x6f40; 
0x08077fed: sal byte ptr [ebp + 0x20], 0x83; in al, dx; add al, 0x57; push 2; push ebx; call esi; 
0x080771ac: sal byte ptr [ebp + 0x21], 0xb8; add al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0807710c: sal byte ptr [ebp + 0x21], 0xb8; add eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0807c00c: sal byte ptr [ebp + 0x21], 0xc7; ret 0x6f40; 
0x080b09e9: sal byte ptr [ebp + 0x28], 0x83; les ecx, ptr [eax]; mov eax, 4; pop ebx; ret; 
0x0807705a: sal byte ptr [ebp + 0x33], 0x8b; dec esp; and al, 0x20; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x08071530: sal byte ptr [ebp + 0x3d], 0x66; pmovmskb eax, mm1; bsf eax, eax; lea eax, [edx + eax + 0x30]; ret; 
0x080b1ebb: sal byte ptr [ebp + 0xa], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0805fef3: sal byte ptr [ebp + 0xa], 0x83; stosb byte ptr es:[edi], al; sbb byte ptr [eax], bl; add byte ptr [eax], al; add dword ptr [ebx + 0x5e], ebx; ret; 
0x080b212a: sal byte ptr [ebp + 0xb], cl; add esp, 8; pop ebx; ret; 
0x0808f148: sal byte ptr [ebp + 0xd], 0x83; sub eax, dword ptr [ecx]; pop ebx; pop esi; ret; 
0x0807194f: sal byte ptr [ebp + 0xe], cl; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x080a0736: sal byte ptr [ebp + 2], cl; call eax; 
0x08078a71: sal byte ptr [ebp + 4], cl; ret; 
0x0809f49e: sal byte ptr [ebp + 6], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x080a88b4: sal byte ptr [ebp + 6], 0x89; fcomp dword ptr [ebx + 0x5e]; pop edi; ret; 
0x08078a95: sal byte ptr [ebp + 8], cl; ret; 
0x080a72ba: sal byte ptr [ebp + ebx - 0x7d], 0xec; or byte ptr [ebp - 0x3da2f7d], cl; call dword ptr [eax - 0x73]; 
0x080b31c4: sal byte ptr [ebp + ecx - 0x7d], cl; in al, dx; or al, 0x50; call edx; 
0x080a1b67: sal byte ptr [ebp + edx - 0x75], 0x5d; les ecx, ptr [ebp - 0x1b7b87d]; call dword ptr [eax + 0x6a]; 
0x08065ba3: sal byte ptr [ebp - 0x16], 0x83; ret; 
0x0804fe29: sal byte ptr [ebp - 0x23], cl; ret; 
0x0804c976: sal byte ptr [ebp - 0x36], 0x8b; inc ebx; add al, 0x83; ret; 
0x0807c07f: sal byte ptr [ebp - 0x61], 0xc7; ret 0x6f40; 
0x0805e27b: sal byte ptr [ebp - 0xe], cl; ret; 
0x08076672: sal byte ptr [ebx + ecx + 0x5b], 0x89; rcr byte ptr [esi + 0x5f], 1; ret; 
0x0805ad4f: sal byte ptr [ebx + ecx - 0x80], cl; cli; and eax, 0x7880e175; add dword ptr [ebx + 0x75], esi; fild dword ptr [eax - 0x76da2b83]; ret 0x5b74; 
0x08079a92: sal byte ptr [ebx + edi + 0x38], cl; ret 0xe774; 
0x080b2d6f: sal byte ptr [ebx + edx - 0x7d], 0xec; or byte ptr [ebp - 0x3240f6d], cl; call dword ptr [edx + 0x50]; 
0x08096792: sal byte ptr [ebx + esi - 0x75], 0xae; xchg eax, esp; add byte ptr [eax], al; add bh, al; ret 0x5f80; 
0x08062142: sal byte ptr [ebx + esi*4 + 0x39], cl; ret 0xaf74; 
0x0807eaea: sal byte ptr [ebx - 0x7d], cl; in al, dx; or byte ptr [ebp - 0x669bf7d], cl; call dword ptr [eax - 0x73]; 
0x080a7587: sal byte ptr [ecx + ebx - 0x47], 0xe; add byte ptr [eax], al; add byte ptr [ebp - 0x16d4f45], cl; dec dword ptr [ecx + 0xfa6f3c6]; xchg eax, edi; ret 0xda80; 
0x08087b7c: sal byte ptr [ecx + ecx - 0x7d], 0xec; or al, 0x56; call eax; 
0x08060871: sal byte ptr [ecx], 1; sar byte ptr [ebx], 0x54; and al, 4; setae al; ret; 
0x080b004b: sal byte ptr [ecx], 1; sar byte ptr [ecx], cl; inc esi; adc byte ptr [edi], cl; xchg eax, esp; ret 0xe2c1; 
0x08086606: sal byte ptr [edi + ebx - 0x7d], 0xec; or byte ptr [ebp - 0x1df8b7d], cl; call dword ptr [eax + 0x56]; 
0x08098a46: sal byte ptr [edi + edx - 0x78], cl; rol dword ptr [eax + 0x20740fe1], 1; ret; 
0x08077fc6: sal byte ptr [edi + esi - 0x7d], 0xec; add al, 0x57; push 0; push ebx; call esi; 
0x08096f31: sal byte ptr [edi - 0xc], 1; mov eax, dword ptr [esp + 8]; pop ebx; add eax, ecx; ret; 
0x0804901a: sal byte ptr [edx + eax - 1], 0xd0; add esp, 8; pop ebx; ret; 
0x080b2eed: sal byte ptr [edx + ecx - 0x77], 0x54; and al, 8; call eax; 
0x080968f3: sal byte ptr [edx + ecx - 0x7d], cl; les ecx, ptr [eax]; pop ebx; ret; 
0x080ab683: sal byte ptr [edx + edi*4 - 0x75], 0x55; add byte ptr [ecx], al; ret 0xd139; 
0x0805efa0: sal byte ptr [esi + 0x2d], 1; sub esp, 8; push ebx; push esi; call dword ptr [edi + 0x18]; 
0x080ad482: sal byte ptr [esi + ebx - 0x73], 0x76; add byte ptr [ecx], al; ret 0xb70f; 
0x080713e7: sal byte ptr [esi + edx + 0xf], 0xbc; rol byte ptr [ecx], 0xd0; add eax, ecx; ret; 
0x080a76c7: sal byte ptr [esi + esi*2 - 0x75], cl; mov bl, 0x98; sbb al, byte ptr [eax]; add byte ptr [ebp - 0x386e8a0a], al; ret 0; 
0x0809bf54: sal byte ptr [esi], 0xfe; call dword ptr [eax - 0x18]; 
0x08097a19: sal byte ptr [esp + 0xf], cl; mov esi, 0x39da891e; ret; 
0x08078a6d: sal byte ptr [esp + eax - 0x7b], 0xd2; jne 0x30a78; ret; 
0x08078a91: sal byte ptr [esp + eax - 0x7b], 0xd2; jne 0x30aa0; ret; 
0x08090a12: sal byte ptr [esp + edi*2 - 0x7d], 0xbd; inc eax; idiv edi; call dword ptr [eax]; 
0x0805ed6c: sal byte ptr [esp + edx - 0x39], 0; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], 0; ret; 
0x08060899: sal byte ptr [esp - 0x48], 0xf0; add byte ptr [eax], al; add byte ptr [ecx + 0x80], bh; mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x08067f89: sal dword ptr [ecx + eax + 0x40], 1; pop edi; ret; 
0x08080209: sal dword ptr [edi + ecx*4 - 0x7d], cl; ret 0x3904; 
0x080796d6: sal dword ptr [edx + 0xa], 1; mov dword ptr [eax + 0x18], ebx; mov dword ptr [eax + 0x1c], edx; mov byte ptr [eax + 0x20], 1; pop ebx; ret; 
0x0805fae1: sal dword ptr [esp + ecx - 0x77], 0xc2; mov eax, dword ptr [eax]; test eax, eax; jne 0x17ae0; ret; 
0x08074eed: sal ebx, 0xa4; pop eax; mov edi, eax; mov esi, edx; mov eax, dword ptr [esp + 4]; ret; 
0x0807501e: sal ebx, 1; stosb byte ptr es:[edi], al; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0808bb1a: sal esi, 1; ret 0xf40; 
0x08077ff8: salc; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0808c816: salc; dec dword ptr [ecx - 0xa74b]; inc dword ptr [eax - 0xcf43]; jmp dword ptr [edi - 0x75]; 
0x08091c16: salc; fdiv st(7), st(0); dec dword ptr [edi]; mov dh, 0x56; or al, 0xf6; ret 0xf08; 
0x08068445: salc; inc edx; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x080684b5: salc; inc edx; mul byte ptr [esi - 0x77]; inc edx; dec byte ptr [ebx + 0x5b082444]; ret; 
0x08098649: salc; lea ebx, [eax + 8]; mov eax, ebx; pop ebx; ret; 
0x08074ef4: salc; mov eax, dword ptr [esp + 4]; ret; 
0x08074f84: salc; mov eax, dword ptr [esp + 8]; cld; pop edi; ret; 
0x08074f5a: salc; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0804a769: salc; mov edx, 1; xor ebx, ebx; lea esi, [esi]; mov eax, edx; int 0x80; 
0x08074fd4: salc; ret; 
0x0809c7c1: sar bh, 0xff; call dword ptr [eax - 0x39]; 
0x0806c4bb: sar bh, 0xff; jmp dword ptr [esi + 0xf]; 
0x080ac1d3: sar bl, 0xff; call dword ptr [eax - 0x73]; 
0x0805471a: sar bl, 0xff; call dword ptr [esi - 1]; 
0x080ac897: sar bl, 0xff; dec dword ptr [ebp - 0x44b4b]; call dword ptr [eax - 1]; 
0x080ab2b2: sar byte ptr [eax + 0x180], 0xf; xchg eax, esp; rol dword ptr [ecx], 0xc9; call dword ptr gs:[0x10]; 
0x08066fa7: sar byte ptr [eax + 0x36], 0x83; in al, dx; or byte ptr [ebp - 0x2ff1f7d], cl; call dword ptr [esi + 0x50]; 
0x080a7e6a: sar byte ptr [eax + 0xdc], 1; call dword ptr gs:[0x10]; 
0x0804c035: sar byte ptr [eax + 0xf0], 1; mov ecx, 0x81; lea ebx, [edx + 0x1550]; mov edx, 1; call dword ptr gs:[0x10]; 
0x08060ab7: sar byte ptr [eax + 8], 0xf; inc ebp; ret 0x8189; 
0x08082018: sar byte ptr [eax], 0xf; inc ebp; ret 0x4489; 
0x0808357e: sar byte ptr [eax], 0xf; inc ebp; ret 0x948b; 
0x080803d1: sar byte ptr [eax], 0xf; inc ebp; ret 0xea89; 
0x0807f086: sar byte ptr [eax], 0xfd; call dword ptr [eax + 0x68]; 
0x0807ef86: sar byte ptr [eax], 0xfd; call dword ptr [eax - 0x73]; 
0x08060873: sar byte ptr [ebx], 0x54; and al, 4; setae al; ret; 
0x080a3e17: sar byte ptr [ecx + 0x5f], cl; mov edx, dword ptr [esp + 4]; mov ecx, eax; mov eax, dword ptr [esp + 0xc]; add esp, 0x20; jmp ecx; 
0x080660b6: sar byte ptr [ecx + 5], 0xe8; ret 0xffb2; 
0x0808251b: sar byte ptr [ecx - 0x26], 0x2d; ret 0; 
0x08082095: sar byte ptr [ecx - 0x28], 0x2d; ret 0; 
0x08087081: sar byte ptr [ecx], 0xfd; call dword ptr [eax - 0x18]; 
0x080a1606: sar byte ptr [ecx], 1; ret 0x820f; 
0x080a0f9f: sar byte ptr [ecx], 1; ret 0x830f; 
0x080b004d: sar byte ptr [ecx], cl; inc esi; adc byte ptr [edi], cl; xchg eax, esp; ret 0xe2c1; 
0x08086415: sar byte ptr [edx], 0xf; dec eax; ret 0xc083; 
0x08088b3f: sar byte ptr [esi + 8], 1; mov eax, 0xae; call dword ptr gs:[0x10]; 
0x080531ca: sar byte ptr [esi - 1], cl; jmp dword ptr [esi - 0x70]; 
0x080a20f6: sar ch, 0xff; ljmp [ecx]; ret 0xbd83; 
0x0805b5cc: sar dh, 0xff; dec dword ptr [ebx - 0x3f381ba3]; aam 0x62; push cs; or bh, al; ret; 
0x08077f3b: sar dword ptr [0xfffff001], cl; jae 0x34310; ret; 
0x0804a7c8: sar dword ptr [eax + 0x180], 0xbb; add dh, byte ptr [eax]; add byte ptr [eax], al; int 0x80; 
0x0809c064: sar dword ptr [edi + ebp*2], 0xe; or bh, al; ret 0x4da0; 
0x08099718: sar eax, 0x1f; mov dword ptr [esp + 0xc], eax; mov eax, 0x8c; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x080abccd: sar eax, 2; pop ebx; pop esi; pop edi; ret; 
0x08092d29: sar eax, 2; push eax; push ecx; push esi; call dword ptr [ebx + 0x1c]; 
0x080923a9: sar eax, 2; push eax; push ecx; push esi; mov dword ptr [ebp - 0x45c], eax; call dword ptr [ebx + 0x1c]; 
0x08090284: sar eax, 2; push eax; push edx; push dword ptr [ebp - 0x8a0]; call dword ptr [ebx + 0x1c]; 
0x0807607e: sar eax, 2; test edx, edx; cmove eax, esi; pop esi; pop edi; ret; 
0x08096f42: sar ebx, 2; lea eax, [ebx - 1]; pop ebx; ret; 
0x0806c3fb: sar edi, 0xff; jmp dword ptr [esi + 0xf]; 
0x08096fcf: sar edx, 2; mov eax, dword ptr [ecx + 8]; pop ebx; sub eax, edx; ret; 
0x0808f4cc: sar esi, 2; push esi; push edx; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x1c]; 
0x0805fe81: sbb al, 0x18; add byte ptr [eax], al; add dword ptr [ebx + 0x5e5b04c4], eax; ret; 
0x08049c68: sbb al, 0x24; ret; 
0x08088e51: sbb al, 0x24; sub esp, 4; push ebp; push ebx; push esi; call edi; 
0x0804f428: sbb al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x080812ba: sbb al, 0x35; std; call dword ptr [eax - 0x18]; 
0x08080207: sbb al, 0x39; sal dword ptr [edi + ecx*4 - 0x7d], cl; ret 0x3904; 
0x080862f9: sbb al, 0x39; std; call dword ptr [eax - 0x18]; 
0x080b000d: sbb al, 0x51; push 1; call eax; 
0x08060810: sbb al, 0x53; call 0x18730; or dword ptr [ebx], 8; add esp, 0x18; pop ebx; ret; 
0x080516ac: sbb al, 0x5b; mov eax, edx; pop esi; pop edi; pop ebp; ret; 
0x0806015c: sbb al, 0x5b; neg eax; pop esi; pop edi; pop ebp; ret; 
0x080866d9: sbb al, 0x5b; pop esi; mov eax, ebp; pop edi; pop ebp; ret; 
0x0805bd0e: sbb al, 0x5b; pop esi; pop edi; pop ebp; jmp eax; 
0x0804aede: sbb al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x080a5065: sbb al, 0x65; xor eax, dword ptr [0x14]; jne 0x5d074; add esp, 0x28; pop ebx; ret; 
0x080a4dec: sbb al, 0x65; xor ecx, dword ptr [0x14]; jne 0x5ce20; add esp, 0x28; pop ebx; ret; 
0x080a4eb6: sbb al, 0x65; xor ecx, dword ptr [0x14]; jne 0x5cecc; add esp, 0x2c; ret; 
0x080a5176: sbb al, 0x65; xor ecx, dword ptr [0x14]; jne 0x5d18c; add esp, 0x2c; ret; 
0x080a526d: sbb al, 0x65; xor ecx, dword ptr [0x14]; jne 0x5d27b; add esp, 0x2c; ret; 
0x080a7b0a: sbb al, 0x65; xor ecx, dword ptr [0x14]; jne 0x5fb18; add esp, 0x2c; ret; 
0x080aba12: sbb al, 0x65; xor ecx, dword ptr [0x14]; jne 0x63a20; add esp, 0x2c; ret; 
0x080adb2d: sbb al, 0x65; xor ecx, dword ptr [0x14]; jne 0x65b3c; add esp, 0x28; pop ebx; ret; 
0x0809969a: sbb al, 0x75; and edi, dword ptr [eax + 0x12c]; call dword ptr gs:[0x10]; 
0x0809e100: sbb al, 0x80; shl ebx, 4; add ebx, dword ptr [esp + 0x44]; push dword ptr [esp + 0x38]; call dword ptr [ebx + 0x38]; 
0x080b02cb: sbb al, 0x83; les ebp, ptr [eax]; pop ebx; ret; 
0x0805d1a4: sbb al, 0x83; les ebx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x0808494c: sbb al, 0x85; sar byte ptr [eax], 0xf; inc ebp; ret 0x4489; 
0x0808357c: sbb al, 0x85; sar byte ptr [eax], 0xf; inc ebp; ret 0x948b; 
0x0804b156: sbb al, 0x89; call 0x5d5f8fb8; ret; 
0x08078b2c: sbb al, 0x89; call 0x5d62698e; ret; 
0x0808662a: sbb al, 0x89; call 0x5d63448c; ret; 
0x080783ab: sbb al, 0x89; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x080597f9: sbb al, 0x89; inc ebx; or al, 1; ret 0xc101; 
0x0805159c: sbb al, 0x89; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x0805b7dd: sbb al, 0x89; ret 0x468b; 
0x080978db: sbb al, 0x89; ret 0x98eb; 
0x080964aa: sbb al, 0x89; ret 0xc883; 
0x0805eae5: sbb al, 0x89; ret 0xff85; 
0x0805b88e: sbb al, 0x89; ret; 
0x08088030: sbb al, 0x89; shl dword ptr [0xfffff000], 0x29; ret 0xe183; 
0x080ae3f3: sbb al, 0x8b; inc edx; push esp; add esp, 8; pop ebx; ret; 
0x08059582: sbb al, 0x8b; je 0x115aa; sbb byte ptr [ecx], ch; ret; 
0x080ad1b9: sbb al, 0x8b; push eax; or byte ptr [ecx], al; ret 0xd789; 
0x0809b8b3: sbb al, 0x8d; and dword ptr [eax + 0x2a], 0xfffffffd; call dword ptr [eax - 0x73]; 
0x080a96dc: sbb al, 0x96; nop; call dword ptr [ebx]; 
0x08064bcc: sbb al, 0xb8; lock add byte ptr [eax], al; add byte ptr [ebp + 0x4e09b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0805de03: sbb al, 0xb8; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x080796de: sbb al, 0xc6; inc eax; and byte ptr [ecx], al; pop ebx; ret; 
0x080a32d5: sbb al, 0xc7; ret; 
0x080986c2: sbb al, 0xe8; push 0x83fffdc8; les ebx, ptr [eax]; pop ebx; ret; 
0x08075b42: sbb al, 0xe8; push 0x83fffff4; les ebx, ptr [eax]; pop ebx; ret; 
0x0804a648: sbb al, 0xe8; ret 0x65; 
0x0807f6a5: sbb al, 0xe9; ret; 
0x0804a19b: sbb al, 0xf6; ret 0x7408; 
0x080aba68: sbb al, 0xf; mov dh, 0xc0; neg eax; ret; 
0x080a2690: sbb al, 0xf; scasd eax, dword ptr es:[edi]; ror dword ptr [edi], 0xaf; fild word ptr [ecx]; ret; 
0x08097980: sbb al, 0xfe; jmp dword ptr [esi - 0x70]; 
0x080719c0: sbb al, 1; add byte ptr [eax], al; lea eax, [eax + 7]; pop edi; ret; 
0x080588c9: sbb al, 1; ret; 
0x0807ae80: sbb al, 2; std; dec dword ptr [ebp - 0x2d59f7d]; call dword ptr [eax - 0x73]; 
0x080a33db: sbb al, 4; add bh, al; ret 0x6ee4; 
0x080a7335: sbb al, byte ptr [eax]; add byte ptr [eax - 0x18], dl; ret 0xf58c; 
0x080898b7: sbb al, byte ptr [eax]; add byte ptr [eax], al; add byte ptr [eax], al; add bl, ch; ret 0xf631; 
0x080a76cd: sbb al, byte ptr [eax]; add byte ptr [ebp - 0x386e8a0a], al; ret 0; 
0x080a76c3: sbb al, byte ptr [eax]; add byte ptr [ebp - 0x74898b2e], al; mov bl, 0x98; sbb al, byte ptr [eax]; add byte ptr [ebp - 0x386e8a0a], al; ret 0; 
0x0809a7eb: sbb al, byte ptr [eax]; add byte ptr [ebp - 0x76e4febc], cl; loope 0x5277e; ret 0x25; 
0x080a2bfa: sbb al, byte ptr [eax]; add byte ptr [ebx + 0x1a6887], cl; add byte ptr [ecx], bh; ret 0x273; 
0x08088212: sbb al, byte ptr [eax]; add byte ptr [ebx + 0x418d10c4], al; dec dword ptr [ecx - 0x1bb43]; dec dword ptr [ecx - 0x1cf7b]; jmp dword ptr [ecx]; 
0x08089533: sbb al, byte ptr [eax]; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x080a2c00: sbb al, byte ptr [eax]; add byte ptr [ecx], bh; ret 0x273; 
0x080999ae: sbb al, byte ptr [eax]; add byte ptr [ecx], bh; ret; 
0x080519e3: sbb al, byte ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x0807af8a: sbb al, ch; add byte ptr [eax - 0x3b7cfffe], 0x18; pop ebx; ret; 
0x08049e0a: sbb al, dh; cld; call dword ptr [eax - 0x18]; 
0x080a3a1e: sbb bh, ah; inc dword ptr [ebx + 0x478910c4]; add al, 0x89; ret 0xc085; 
0x080a3d47: sbb bh, al; ret 0x59a0; 
0x080595d4: sbb bh, al; ret 0x5f80; 
0x0805937d: sbb bh, al; ret 0x62d4; 
0x0807af86: sbb bh, bh; je 0x32fae; sbb al, ch; add byte ptr [eax - 0x3b7cfffe], 0x18; pop ebx; ret; 
0x08076009: sbb bh, ch; call dword ptr [eax - 0x18]; 
0x08076041: sbb bh, ch; call dword ptr [eax - 0x18]; push esi; push eax; std; jmp dword ptr [esi - 0x70]; 
0x08075cf9: sbb bh, ch; call dword ptr [eax - 0x73]; 
0x0808733c: sbb bh, ch; call dword ptr [edx + 0x50]; 
0x080a7b1a: sbb bh, ch; jmp dword ptr [esi - 0x70]; 
0x0804fe1d: sbb byte ptr [0xfffffff], ah; xor eax, edx; movzx edx, byte ptr [ecx]; test dl, dl; jne 0x7e09; ret; 
0x0808cf51: sbb byte ptr [eax + 0x24], 0xfe; call dword ptr [eax + 0x56]; 
0x0809e21a: sbb byte ptr [eax + 0x3e], 0xfe; call dword ptr [eax - 0x18]; 
0x080628dd: sbb byte ptr [eax + 0xf0], bh; mov ecx, 0x81; mov ebx, edi; mov edx, 1; call dword ptr gs:[0x10]; 
0x0806a377: sbb byte ptr [eax + 1], bh; ja 0x22381; neg eax; ret; 
0x080773b8: sbb byte ptr [eax - 0x73], dl; test ecx, eax; pop ds; std; call dword ptr [eax + 0x6a]; 
0x08077bcc: sbb byte ptr [eax - 0x76c08ac0], ch; ret 0xf631; 
0x0805ff10: sbb byte ptr [eax], al; add byte ptr [eax + 0xf0], bh; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08080824: sbb byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx - 0x72d3dbb4], cl; dec ebp; and byte ptr [ecx - 0x9cfdbb4], cl; ret 0x7501; 
0x08082d1b: sbb byte ptr [eax], al; add byte ptr [eax], al; add dh, dh; ret; 
0x080507e8: sbb byte ptr [eax], al; add byte ptr [eax], al; call eax; 
0x0805d652: sbb byte ptr [eax], al; add byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x0805dc55: sbb byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0805fe82: sbb byte ptr [eax], al; add byte ptr [ecx], al; add esp, 4; pop ebx; pop esi; ret; 
0x0805dc0c: sbb byte ptr [eax], al; add byte ptr [ecx], al; pop ebx; pop esi; pop edi; ret; 
0x0805fef9: sbb byte ptr [eax], al; add byte ptr [ecx], al; pop ebx; pop esi; ret; 
0x08075b98: sbb byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret 0x4489; 
0x08075d41: sbb byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret 0xff65; 
0x0805dc0b: sbb byte ptr [eax], bl; add byte ptr [eax], al; add dword ptr [ebx + 0x5e], ebx; pop edi; ret; 
0x0805fef8: sbb byte ptr [eax], bl; add byte ptr [eax], al; add dword ptr [ebx + 0x5e], ebx; ret; 
0x0805ff0f: sbb byte ptr [eax], bl; add byte ptr [eax], al; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0805dc54: sbb byte ptr [eax], bl; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x080ad093: sbb byte ptr [ebp - 0x1643f80], cl; call dword ptr [eax - 0x18]; 
0x080aceeb: sbb byte ptr [ebp - 0x1645380], cl; call dword ptr [eax - 0x18]; 
0x080a51b7: sbb byte ptr [ebp - 0x1b28f7d], cl; call dword ptr [eax + 0x56]; 
0x080a4292: sbb byte ptr [ebp - 0x1b3537d], cl; call dword ptr [eax + 0x6a]; 
0x080614d3: sbb byte ptr [ebp - 0x2f1db70], cl; call dword ptr [edx - 0x73]; 
0x0804a978: sbb byte ptr [ebp - 0x30ec77d], cl; call dword ptr [eax - 0x18]; 
0x0804a4cb: sbb byte ptr [ebp - 0x30ef37d], cl; call dword ptr [eax - 0x18]; 
0x0804a875: sbb byte ptr [ebp - 0x30f3a7d], cl; call dword ptr [eax - 0x18]; 
0x080aba54: sbb byte ptr [ebp - 0x395cf80], cl; call dword ptr [eax - 0x18]; 
0x0805cf4d: sbb byte ptr [ebp - 0x7cf18a25], al; les ecx, ptr [eax]; pop ebx; ret; 
0x080968f1: sbb byte ptr [ebp - 0x7cf58b2e], al; les ecx, ptr [eax]; pop ebx; ret; 
0x0807909a: sbb byte ptr [ebx + 0x390c2454], cl; ret 0xb574; 
0x080862d7: sbb byte ptr [ebx + 0x418901e8], al; add al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0809044a: sbb byte ptr [ebx + 0x565104ec], al; push dword ptr [ebp - 0x8a0]; call edx; 
0x080a5923: sbb byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x080a89f5: sbb byte ptr [ebx + 0x5e5b3cc4], al; pop edi; pop ebp; ret; 
0x0805bb25: sbb byte ptr [ebx + 0x5e], 0x5f; ret; 
0x08099696: sbb byte ptr [ebx + 0x751c2474], cl; and edi, dword ptr [eax + 0x12c]; call dword ptr gs:[0x10]; 
0x080a56b8: sbb byte ptr [ebx + 0x788b0470], cl; or byte ptr [ebx + 0x448b0c68], cl; and al, 8; mov esp, ecx; jmp edx; 
0x08082493: sbb byte ptr [ebx - 0x38f7db84], cl; inc esp; and al, 0x10; add eax, 0xe9000000; ret; 
0x080a5632: sbb byte ptr [ebx - 0x3fcefb3c], al; pop ebx; pop esi; ret; 
0x08079232: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0xa3; call dword ptr gs:[0x10]; 
0x080597f2: sbb byte ptr [ebx - 0x74efdbb4], cl; inc ebx; sbb al, 0x89; inc ebx; or al, 1; ret 0xc101; 
0x080817c4: sbb byte ptr [ebx - 0x7cdfdb84], cl; rol byte ptr [ecx], 0x83; ret; 
0x08096904: sbb byte ptr [ebx - 0x7f74f314], al; mov byte ptr [eax], al; add byte ptr [eax], al; push ebx; call dword ptr [eax + 0x34]; 
0x0809b345: sbb byte ptr [ebx - 0x8f7b], cl; dec dword ptr [ebx - 0x9f6b]; dec dword ptr [ebp + 0x48d4004]; ret 0xc639; 
0x080796db: sbb byte ptr [ecx + 0x40c61c50], cl; and byte ptr [ecx], al; pop ebx; ret; 
0x080a78cd: sbb byte ptr [ecx + 0x4c48310], cl; pop ebx; pop esi; ret; 
0x080b0228: sbb byte ptr [ecx + 0x8c48318], cl; pop ebx; ret; 
0x080825f4: sbb byte ptr [ecx + 0xfce3938], cl; test byte ptr [ebp + eax], bl; add byte ptr [ebx - 0x72cfdba4], cl; and dword ptr [eax + 0x37], 0xfffffffd; call dword ptr [eax - 0x73]; 
0x0805e34f: sbb byte ptr [ecx - 0x3fceefbd], cl; add esp, 4; pop ebx; pop esi; ret; 
0x08079d3a: sbb byte ptr [ecx - 0x6f3c14f2], cl; int 0x80; 
0x0805293a: sbb byte ptr [ecx - 0x88b7b], cl; ljmp [ecx]; rcl byte ptr [eax + 0x52], 1; push dword ptr [ebp - 0x890]; call dword ptr [ebx + 0x1c]; 
0x0808dd0f: sbb byte ptr [ecx - 0x9e7dbbc], cl; ret 0xf40; 
0x080603d5: sbb byte ptr [ecx], ch; ret 0x5489; 
0x080a22de: sbb byte ptr [ecx], ch; ret 0xfa39; 
0x08059586: sbb byte ptr [ecx], ch; ret; 
0x08067783: sbb byte ptr [edi], cl; test byte ptr [ebp - 0x7cffffff], bh; ret 0xe901; 
0x0805f756: sbb byte ptr [edx + 1], ch; call 0x170a0; add esp, 0x1c; ret; 
0x080b3284: sbb byte ptr [esi - 7], bh; jmp dword ptr [esi - 0x70]; 
0x080b013e: sbb ch, byte ptr [edx + 1]; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0809736b: sbb cl, byte ptr [ebp - 0x76ffd98c]; ret; 
0x0804de42: sbb cl, ch; ret; 
0x0809985c: sbb dh, dh; ret 0x7540; 
0x0808dd13: sbb dh, dh; ret 0xf40; 
0x0805fe80: sbb dword ptr [eax + ebx], 0; add byte ptr [ecx], al; add esp, 4; pop ebx; pop esi; ret; 
0x08049e09: sbb dword ptr [eax], -0x10; cld; call dword ptr [eax - 0x18]; 
0x080b2d6b: sbb dword ptr [eax], eax; add byte ptr [ebp - 0x7cec8b40], al; in al, dx; or byte ptr [ebp - 0x3240f6d], cl; call dword ptr [edx + 0x50]; 
0x080555fa: sbb dword ptr [eax], eax; add byte ptr [ebx - 0x6a76fb14], al; cmp bl, 0xff; call dword ptr [edx + 0x51]; 
0x0807eb22: sbb dword ptr [eax], eax; add byte ptr [edx], al; add esp, 8; pop ebx; ret; 
0x0807cabe: sbb dword ptr [ebp + 0x2d], -3; call dword ptr [eax - 0x18]; 
0x08099fed: sbb dword ptr [ebp + 0x35], -2; call dword ptr [eax - 0x18]; 
0x08079356: sbb dword ptr [ebp - 0x76fa8a37], eax; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0809cf09: sbb dword ptr [ebx + 0x37], -2; call dword ptr [eax + 0x6a]; 
0x0809e5b0: sbb dword ptr [ebx - 0x38ebdb8c], ecx; ret 0x4d84; 
0x0807f0c0: sbb dword ptr [ebx], 0x34; std; call dword ptr [eax - 0x18]; 
0x0804a839: sbb dword ptr [ebx], eax; add byte ptr [ebp + 0x2e880fc0], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x38f3db84], cl; ret 0x6f84; 
0x0807aac0: sbb dword ptr [ecx + 0x29], -3; call dword ptr [eax - 0x18]; 
0x080a9bd7: sbb dword ptr [ecx + ebx*4], -2; call dword ptr [eax - 0x73]; 
0x080862f8: sbb dword ptr [ecx + edi], -3; call dword ptr [eax - 0x18]; 
0x08077dc5: sbb dword ptr [edx + 0x20], -3; call dword ptr [eax - 0x18]; 
0x080a93e6: sbb dword ptr [edx - 0x6c], -2; call dword ptr [eax - 0x18]; 
0x08076007: sbb dword ptr [esi + 0x1a], -3; call dword ptr [eax - 0x18]; 
0x080a93da: sbb dword ptr [esi + 0x68fffe93], -0x5a; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; sbb dword ptr [edx - 0x6c], -2; call dword ptr [eax - 0x18]; 
0x08074bc3: sbb eax, -1; pop ebx; ret; 
0x08074e6e: sbb eax, -1; pop esi; pop ebx; ret; 
0x0806034c: sbb eax, -3; cld; call dword ptr [eax - 0x18]; 
0x08077aee: sbb eax, 0x14; jne 0x2fb37; add esp, 0x18; pop ebx; ret; 
0x08079ca0: sbb eax, 0x23; std; call dword ptr [eax + 0x6a]; 
0x080a63b0: sbb eax, 0x26b48d; add byte ptr [eax], al; add byte ptr [ebx - 0x7cfb78ac], cl; ret 0x8901; 
0x08077c02: sbb eax, 0x5b04c483; pop esi; ret; 
0x08086383: sbb eax, 0x83000001; in al, dx; or byte ptr [ebp - 0x2c6bc6d], cl; call dword ptr [edx + 0x50]; 
0x0808e946: sbb eax, 0x83000002; ret; 
0x080a72bc: sbb eax, 0x8d08ec83; adc eax, 0x25; cld; call dword ptr [eax - 0x73]; 
0x080a3299: sbb eax, 0xec830004; adc byte ptr [ebp - 0x1b5bb7d], cl; call dword ptr [eax + 0x6a]; 
0x080a7f1b: sbb eax, dword ptr [eax]; add byte ptr [ebx + 0xb], dh; mov edx, dword ptr [ecx + 0x1b68]; add word ptr [edx + eax*2], 1; ret; 
0x0808fd7b: sbb eax, dword ptr [eax]; add dh, dh; ret 0xf40; 
0x08075aac: sbb eax, dword ptr [ebx + 0x5e5b3cc4]; pop edi; pop ebp; ret; 
0x0806b6f4: sbb eax, dword ptr [ebx - 0x7bf0d207]; ret 0; 
0x08070981: sbb eax, dword ptr [ecx]; add byte ptr [eax], al; lea eax, [edi + 3]; pop edi; ret; 
0x080a7f1a: sbb eax, dword ptr fs:[eax]; add byte ptr [ebx + 0xb], dh; mov edx, dword ptr [ecx + 0x1b68]; add word ptr [edx + eax*2], 1; ret; 
0x080b0c9d: sbb eax, eax; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x080a5706: sbb eax, eax; and eax, 2; sub eax, 1; ret; 
0x080a6bd9: sbb eax, eax; neg eax; pop ebx; pop esi; pop edi; ret; 
0x080b0849: sbb eax, eax; ret; 
0x08074bc1: sbb eax, eax; sbb eax, -1; pop ebx; ret; 
0x08074e6c: sbb eax, eax; sbb eax, -1; pop esi; pop ebx; ret; 
0x0807e266: sbb eax, ecx; cld; inc dword ptr [ecx + 0x66d96c6]; add byte ptr [ebx - 0x77], dl; ret; 
0x08075942: sbb ebp, edi; call dword ptr [eax + 0x68]; 
0x08075d09: sbb ebp, edi; call dword ptr [eax - 0x18]; 
0x08075d09: sbb ebp, edi; call dword ptr [eax - 0x18]; mov ss, word ptr [ebx - 3]; jmp dword ptr [esi - 0x70]; 
0x0807a80b: sbb ebx, 0x28; std; call dword ptr [eax - 0x18]; 
0x080a185c: sbb ecx, dword ptr [eax - 2]; jmp dword ptr [ebp - 1]; 
0x0807b1d4: sbb ecx, dword ptr [ebx + 0x2c90838c]; std; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x08062e31: sbb ecx, dword ptr [ebx - 0x7cfbdbbc]; mov eax, 0x460; add byte ptr [edi], cl; xchg eax, ebp; ret; 
0x080b290f: sbb ecx, dword ptr [ecx - 0x7cf7dbac]; in al, dx; or al, 0x89; ret; 
0x0809ef83: sbb ecx, eax; cli; jmp dword ptr [esi - 0x70]; 
0x08076977: sbb edi, ebp; call dword ptr [eax - 0x18]; 
0x08076880: sbb edi, ebp; call dword ptr [eax - 0x73]; 
0x08076c68: sbb edi, ebp; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x080a7a07: sbb edi, ebp; jmp dword ptr [esi - 0x70]; 
0x080769e5: sbb edi, ebp; ljmp [eax - 0x72]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; cmp dword ptr [eax + 0x1a], -3; call dword ptr [eax - 0x18]; 
0x08062f79: sbb esi, edi; cld; call dword ptr [eax - 0x73]; 
0x0808872e: sbb esp, 0x41; std; call dword ptr [eax - 0x18]; 
0x080719ae: scasb al, byte ptr es:[edi]; add byte ptr [eax], al; add dh, dh; ret 0xf40; 
0x0808029d: scasb al, byte ptr es:[edi]; cld; dec dword ptr [ebx - 0x72cfdba4]; and dword ptr [eax], 0x38; std; call dword ptr [eax + 0x68]; 
0x080966ce: scasb al, byte ptr es:[edi]; js 0x4e6cd; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0808d0ce: scasb al, byte ptr es:[edi]; mov eax, 0xf0; lea ebx, [ebx + 0x1a40]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08057f70: scasb al, byte ptr es:[edi]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0805a3e6: scasb al, byte ptr es:[edi]; xchg eax, esp; add byte ptr [eax], al; add bh, al; ret 0x5f80; 
0x080ab0cd: scasd eax, dword ptr es:[edi]; add al, byte ptr [eax]; add byte ptr [ebp - 0x47bfdbb4], cl; add byte ptr [ecx], 0; add byte ptr [ebx + 0x3005], bh; call dword ptr gs:[0x10]; 
0x08088cb6: scasd eax, dword ptr es:[edi]; add byte ptr [eax], al; add byte ptr [esi + 8], bh; call dword ptr gs:[0x10]; 
0x08099fe7: scasd eax, dword ptr es:[edi]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; sbb dword ptr [ebp + 0x35], -2; call dword ptr [eax - 0x18]; 
0x080a2695: scasd eax, dword ptr es:[edi]; fild word ptr [ecx]; ret; 
0x080aeb6b: scasd eax, dword ptr es:[edi]; inc esi; add dword ptr [ecx], eax; ret 0x458b; 
0x080a37ed: scasd eax, dword ptr es:[edi]; js 0x5b7ea; dec dword ptr [ebp - 0x1b43f7d]; call dword ptr [eax - 0x73]; 
0x08062087: scasd eax, dword ptr es:[edi]; push ecx; add al, 0x83; rcl dword ptr [eax], 0x83; ret; 
0x080620b9: scasd eax, dword ptr es:[edi]; ret 0x7189; 
0x0804ac73: scasd eax, dword ptr es:[edi]; ret; 
0x080a2692: scasd eax, dword ptr es:[edi]; ror dword ptr [edi], 0xaf; fild word ptr [ecx]; ret; 
0x0805dc0a: scasd eax, dword ptr es:[edi]; sbb byte ptr [eax], bl; add byte ptr [eax], al; add dword ptr [ebx + 0x5e], ebx; pop edi; ret; 
0x0807a6c7: scasd eax, dword ptr es:[edi]; sub ch, bh; call dword ptr [esi + 0x50]; 
0x080aea37: scasd eax, dword ptr es:[edi]; xchg byte ptr [eax + 0x1000000], dh; ret 0x9689; 
0x080aeb4b: scasd eax, dword ptr es:[edi]; xchg dword ptr [eax + 0x1000000], esi; ret 0x9789; 
0x08060878: setae al; ret; 
0x080ab2b8: sete cl; add ecx, ecx; call dword ptr gs:[0x10]; 
0x080aba63: setne al; add esp, 0x1c; movzx eax, al; neg eax; ret; 
0x0805cf71: setne al; add esp, 8; movzx eax, al; pop ebx; neg eax; ret; 
0x0805c725: sgdt [eax]; add byte ptr [ebx + 0x555204ec], al; push esi; call dword ptr [ebx + 0x38]; 
0x080791b4: shl byte ptr [eax + 0x6f], 0xe; or byte ptr [ebx + 0xfc08500], cl; inc esp; ret 0x66c3; 
0x0805afc4: shl byte ptr [eax - 0x7af7f547], 0xc0; je 0x12fd2; add esp, 8; pop ebx; ret; 
0x080a2801: shl byte ptr [eax], 0x39; ret 0x3976; 
0x080b0fcb: shl byte ptr [eax], 0x39; ret 0x4f74; 
0x080a2838: shl byte ptr [eax], 0x39; ret 0xc977; 
0x080b1006: shl byte ptr [eax], 0x89; je 0x6902f; or byte ptr [ecx - 0x76f3db94], cl; jl 0x69037; add al, 0x39; ret 0xb975; 
0x08078c51: shl byte ptr [eax], 0xfd; call dword ptr [eax - 0x73]; 
0x08049afe: shl byte ptr [ecx], 1; ret; 
0x08068063: shl byte ptr [esi + 0xf], 0x70; rol byte ptr [eax], 0xf7; ret 0xf; 
0x0806a055: shl byte ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0806c36c: shl byte ptr [esi + 0xf], cl; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0804b8d4: shl byte ptr [esi], 0x89; ret 0x25; 
0x08087284: shl dword ptr [0xfffff000], 0x29; ret 0xe183; 
0x080551f8: shl dword ptr [0xfffff000], 0x29; ret; 
0x080a173c: shl dword ptr [eax], 0x74; add al, 0x89; ret 0xc031; 
0x080a1a2b: shl dword ptr [eax], 0xf; inc ebp; ret 0xe083; 
0x080a1a61: shl dword ptr [eax], 0xf; xchg eax, esp; ror byte ptr [edi], 0x95; ret 0xe0d3; 
0x0806bb35: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x2c73; 
0x0806c4f6: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x3273; 
0x0806bb20: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x3e73; 
0x0806c4dc: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x4c73; 
0x0806bb0b: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x5073; 
0x0806baf6: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x6273; 
0x0806c4c2: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x6673; 
0x0806bbc2: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0806c41c: shl dword ptr [esi + 0xf], 1; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x08070dd5: shl dword ptr [esi + 0xf], 1; xlatb; ret 0xc085; 
0x0806c2cc: shl dword ptr [esi + 0xf], cl; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0809e102: shl ebx, 4; add ebx, dword ptr [esp + 0x44]; push dword ptr [esp + 0x38]; call dword ptr [ebx + 0x38]; 
0x080a5b6f: shl ebx, cl; mov dword ptr [edi], ebx; pop ebx; pop esi; pop edi; ret; 
0x080a3a70: shr al, 0x6e; push cs; or byte ptr [ebx - 0x7c72ff00], al; mov byte ptr [ebx - 2], cl; call dword ptr [eax - 0x73]; 
0x080a8221: shr bl, 0xd0; lea esi, [esi]; call eax; 
0x0804a767: shr bl, 0xd6; mov edx, 1; xor ebx, ebx; lea esi, [esi]; mov eax, edx; int 0x80; 
0x080aaa6f: shr byte ptr [ebx], 0x5d; in al, 1; ret 0xde39; 
0x0807e709: shr byte ptr [ecx], 0x89; ret 0x25; 
0x08070ff2: shr byte ptr [ecx], 0xc2; jbe 0x29030; add eax, edi; pop edi; ret; 
0x08071005: shr byte ptr [ecx], 0xc2; jbe 0x29030; lea eax, [edi + eax + 0x10]; pop edi; ret; 
0x08071015: shr byte ptr [ecx], 0xc2; jbe 0x29030; lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x08071025: shr byte ptr [ecx], 0xc2; jbe 0x29030; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x080a98cf: shr byte ptr [edi + ebp*2], 0xe; or byte ptr [ecx - 0x8f63], cl; inc edi; ret; 
0x080a3ce3: shr byte ptr [edi + ebp*2], 0xe; or byte ptr [esi + 1], bh; call dword ptr [eax]; 
0x08076641: shr byte ptr [esi], 0xfd; call dword ptr [edx + 0x56]; 
0x0808eb1d: shr cl, 0x8c; idiv edi; dec dword ptr [ecx - 0x16e3db8c]; ret; 
0x080afd68: shr cl, 1; ret 0xfffe; 
0x0807ad71: shr cl, cl; ret; 
0x0804bdc4: shr dword ptr [ecx], cl; ret; 
0x080b025f: shr eax, 0x1f; mov dword ptr [ecx], eax; mov eax, dword ptr [edx + 0x4c]; ret; 
0x08077e57: shr eax, 0xc; mov ebp, eax; mov eax, 0xc0; call dword ptr gs:[0x10]; 
0x080ab82d: shr eax, 2; lea ebx, [eax*4 - 4]; lea eax, [eax + eax*8 + 2]; call 0x637f0; add eax, ebx; jmp eax; 
0x08050902: shr eax, 2; lea edi, [esi + eax*4 + 4]; lea esi, [esi]; call dword ptr [esi]; 
0x080a96d3: shr eax, 2; lea edx, [eax - 1]; je 0x616eb; lea ebx, [esi + edx*4]; nop; call dword ptr [ebx]; 
0x08060a2f: shr eax, 4; add eax, 1; mov dword ptr [edx + 0x4b0], eax; ret; 
0x080a5bd7: shr ebx, cl; mov dword ptr [edi], ebx; pop ebx; pop esi; pop edi; ret; 
0x0804b0fb: sldt word ptr [eax]; add esp, 0x2c; ret; 
0x08077e52: sldt word ptr [eax]; jne 0x2fe78; shr eax, 0xc; mov ebp, eax; mov eax, 0xc0; call dword ptr gs:[0x10]; 
0x08098084: sldt word ptr [eax]; jne 0x4fe80; xor eax, eax; pop edi; ret; 
0x080a77dd: sldt word ptr [eax]; mov dword ptr [eax], edx; add esp, 8; pop ebx; ret; 
0x08058538: sldt word ptr [eax]; mov ecx, edx; mov dword ptr [eax + 0x94], ecx; mov ecx, dword ptr [eax + 0x58]; mov dword ptr [ecx + 0x88], edx; ret; 
0x08061075: sldt word ptr [ecx - 0xfffff1a]; dec dword ptr [ecx + 0xae8df2]; add byte ptr [eax], dl; add byte ptr [ecx], ch; ret 0x850f; 
0x080747e1: stc; adc byte ptr [edi], cl; test byte ptr [edi], dl; add dword ptr [eax], eax; add byte ptr [ebx - 0x76f3dbbc], cl; ret 0xe283; 
0x08075435: stc; add byte ptr [ecx + eax + 0x40], dh; sub eax, dword ptr [esp + 4]; ret; 
0x08068c42: stc; add byte ptr [edi], cl; test byte ptr [eax - 0x7cffffed], dh; ret 0x8308; 
0x0806a10d: stc; add byte ptr [edi], cl; test byte ptr [ebx - 0x7d000000], cl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x080ae3f0: stc; and byte ptr [ebp + 0x1c], dh; mov eax, dword ptr [edx + 0x54]; add esp, 8; pop ebx; ret; 
0x080ab983: stc; call dword ptr [eax + 0x6a]; 
0x0804a3a7: stc; call dword ptr [eax - 0x73]; 
0x0807cd1b: stc; call dword ptr [eax - 0x77]; 
0x080b0ade: stc; call dword ptr [ebp + 0x57]; 
0x08077331: stc; call dword ptr gs:[0x10]; 
0x080531b0: stc; cld; call dword ptr [eax + 0x68]; 
0x0805453d: stc; cld; call dword ptr [eax - 0x18]; 
0x080571d2: stc; cld; call dword ptr [eax - 0x73]; 
0x080acd62: stc; dec dword ptr [ebp - 0x1657b7d]; call dword ptr [eax + 0x6a]; 
0x080b1a8e: stc; dec dword ptr [ebp - 0x72c7db8c]; je 0x69abd; add byte ptr [ecx - 0x7c17760e], cl; ret; 
0x080affb5: stc; dec dword ptr [ebx + 0x4c538912]; pop ebx; pop esi; pop edi; ret; 
0x080b01c0: stc; dec dword ptr [ebx + 0x8c48300]; pop ebx; ret; 
0x08079676: stc; dec dword ptr [ecx + 0x5e5b0850]; ret; 
0x080afdd2: stc; dec dword ptr [ecx - 0x8d3dbbc]; ret 0; 
0x08061f29: stc; idiv edi; mov dword ptr [eax + 0x4c0], edx; ret; 
0x080ae41c: stc; inc dword ptr [ebx - 0x3fcef73c]; pop ebx; ret; 
0x080b32da: stc; inc dword ptr [ecx + 0x31d24c3]; add byte ptr [ebx + 0x1ff883], cl; add byte ptr [ebp + 0x314574c0], al; jmp dword ptr [esi - 0x70]; 
0x080b2e78: stc; inc dword ptr [ecx + 0x32186c3]; add byte ptr [ebx - 0x7c72ef14], al; xor dh, bl; cld; call dword ptr [eax - 1]; 
0x080ace18: stc; inc dword ptr [ecx + 0x381e6c6]; add byte ptr [ebx - 0x77], dl; ret; 
0x080aab5a: stc; inc dword ptr [ecx + 0x3a4a4c3]; add byte ptr [ecx], bh; ret 0xa74; 
0x080b3286: stc; jmp dword ptr [esi - 0x70]; 
0x080ae414: stc; ljmp [eax - 0x577af0a0]; mov dl, 0xf9; inc dword ptr [ebx - 0x3fcef73c]; pop ebx; ret; 
0x080b23d4: stc; ljmp [eax - 0x7b7af0a0]; jae 0x6a3d6; inc dword ptr [ebx - 0x3fcef73c]; pop ebx; ret; 
0x08068044: stc; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x080970ff: stc; or dh, byte ptr [ecx + edx + 0x5b]; pop esi; pop edi; ret; 
0x08077acd: stc; or dword ptr [edi + ebp - 0x75], esi; pop esp; and al, 0x20; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x080a43f3: stc; or dword ptr [edi], ecx; xchg byte ptr [eax + 0x38000000], dh; ror byte ptr [edi], 1; test dword ptr [ebp - 0x7d000000], esi; ret; 
0x08097f82: stc; pop edi; ret; 
0x0806b6f1: stc; sub al, 0x74; sbb eax, dword ptr [ebx - 0x7bf0d207]; ret 0; 
0x080a55af: std; aas; std; jmp dword ptr [esi - 0x70]; 
0x08071b39: std; add byte ptr [eax], al; add byte ptr [eax + 4], bh; pop edi; ret; 
0x08086eb7: std; add cl, byte ptr [edi]; dec edi; ret 0xc301; 
0x080703bf: std; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x08075943: std; call dword ptr [eax + 0x68]; 
0x080773be: std; call dword ptr [eax + 0x6a]; 
0x08066c35: std; call dword ptr [eax - 0x18]; 
0x0807eb96: std; call dword ptr [eax - 0x18]; add al, ch; cld; jmp dword ptr [esi - 0x70]; 
0x08075d0a: std; call dword ptr [eax - 0x18]; mov ss, word ptr [ebx - 3]; jmp dword ptr [esi - 0x70]; 
0x08088791: std; call dword ptr [eax - 0x18]; pop es; sub esp, edi; jmp dword ptr [esi - 0x70]; 
0x08076042: std; call dword ptr [eax - 0x18]; push esi; push eax; std; jmp dword ptr [esi - 0x70]; 
0x08083bd5: std; call dword ptr [eax - 0x18]; ret; 
0x080b3280: std; call dword ptr [eax - 0x18]; sbb byte ptr [esi - 7], bh; jmp dword ptr [esi - 0x70]; 
0x0807594f: std; call dword ptr [eax - 0x73]; 
0x08066790: std; call dword ptr [eax - 0x77]; 
0x080623a6: std; call dword ptr [eax - 1]; 
0x080a527e: std; call dword ptr [ebp + 0x57]; 
0x08086cd6: std; call dword ptr [edi + 3]; 
0x08060ef3: std; call dword ptr [edi - 1]; 
0x0807ae16: std; call dword ptr [edx + 0x50]; 
0x08076643: std; call dword ptr [edx + 0x56]; 
0x080a5319: std; call dword ptr [edx + 0x68]; 
0x0807bdfc: std; call dword ptr [edx + 0x6a]; 
0x080614d8: std; call dword ptr [edx - 0x73]; 
0x08087a31: std; call dword ptr [edx - 1]; 
0x08066fb1: std; call dword ptr [esi + 0x50]; 
0x0807aea4: std; call dword ptr [esi + 0x56]; 
0x0805a799: std; cld; call dword ptr [eax - 0x18]; 
0x0805d5a2: std; cld; call dword ptr [eax - 0x73]; 
0x0805afd8: std; cld; call dword ptr [edx - 0x18]; 
0x0808707c: std; dec dword ptr [ebp + 0x39c00384]; std; call dword ptr [eax - 0x18]; 
0x0807ae47: std; dec dword ptr [ebp - 0x2d59f7d]; call dword ptr [eax - 0x73]; 
0x0807ae9e: std; dec dword ptr [ebp - 0x2d7697d]; call dword ptr [esi + 0x56]; 
0x080769d9: std; dec dword ptr [ebp - 0x2e4977d]; call dword ptr [eax - 0x73]; 
0x08076010: std; dec dword ptr [ebp - 0x2e5437d]; call dword ptr [eax - 0x73]; 
0x08062ebc: std; dec dword ptr [ebp - 0x3019569]; call dword ptr [eax - 0x73]; 
0x08062f75: std; dec dword ptr [ebp - 0x301e669]; call dword ptr [eax - 0x73]; 
0x08064448: std; dec dword ptr [ebp - 0x301e66a]; call dword ptr [eax - 0x73]; 
0x0807a9ba: std; inc dword ptr [ebx + 0x1ba10c4]; add byte ptr [eax], al; add byte ptr [ebp + 0x310874c0], al; rol byte ptr [eax - 0x6bf0ffc8], cl; ret 0xc0c7; 
0x08097234: std; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x08087bc1: std; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x08098fed: std; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x08099535: std; inc dword ptr [ebx - 0x77cef3c]; push dword ptr [esi + edi - 0x77]; ret 0xe283; 
0x080795b8: std; inc dword ptr [ecx + 0x6ba46c3]; add byte ptr [ebx - 0x7c72eb14], al; cmp dword ptr [ecx], esp; std; call dword ptr [eax - 0x18]; 
0x08079378: std; inc dword ptr [ecx + 0x6bc86c3]; add byte ptr [ebx - 0x7c72eb14], al; adc byte ptr [ecx], ah; std; call dword ptr [eax - 0x18]; 
0x08076c69: std; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x08066d7a: std; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x080a4c6e: std; jbe 0x5cc80; add esp, 8; pop ebx; ret; 
0x08086f0a: std; jmp dword ptr [ebp - 0x75]; 
0x08098e58: std; jmp dword ptr [ebp - 0x77]; 
0x08071e3a: std; jmp dword ptr [esi + 0xf]; 
0x08075d10: std; jmp dword ptr [esi - 0x70]; 
0x08087564: std; ljmp [eax + 0x1b]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; and dword ptr [edx + 0x3a], 0xfffffffd; call dword ptr [eax - 0x18]; 
0x080862ef: std; ljmp [eax - 0x5b]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; sbb dword ptr [ecx + edi], -3; call dword ptr [eax - 0x18]; 
0x080769e6: std; ljmp [eax - 0x72]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; cmp dword ptr [eax + 0x1a], -3; call dword ptr [eax - 0x18]; 
0x08068048: std; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0806b91b: std; mov eax, 0; jne 0x239f0; pop ebx; ret; 
0x0806bcc5: std; mov eax, 0; jne 0x24586; pop ebx; ret; 
0x08097fb2: std; pop edi; ret; 
0x080aabb3: std; sti; dec dword ptr [ecx + 0x5bc03106]; pop esi; pop edi; ret; 
0x080aafce: sti; add cl, byte ptr [ecx - 0x76f3dbbc]; lds ecx, ptr [edi]; xchg eax, esp; ret 0xf883; 
0x080ab008: sti; add dword ptr [eax + 0xf2e2454], ecx; xchg eax, ebp; ret 0xd689; 
0x08049a7e: sti; add ecx, dword ptr [edi]; xchg eax, esp; ret 0xca21; 
0x080a80f3: sti; call 0x2a7f; add eax, 0x3cf07; mov eax, 0x80e6f60; mov eax, dword ptr [eax]; ret; 
0x08088883: sti; call 0x2a7f; add eax, 0x5c777; mov eax, 0xfffffff0; add eax, dword ptr gs:[0]; ret; 
0x08088863: sti; call 0x2a7f; add eax, 0x5c797; mov eax, 0xfffffff4; add eax, dword ptr gs:[0]; ret; 
0x08088843: sti; call 0x2a7f; add eax, 0x5c7b7; mov eax, 0xfffffff8; add eax, dword ptr gs:[0]; ret; 
0x08085a83: sti; call 0x2a7f; add eax, 0x5f577; mov eax, dword ptr [eax + 0x1968]; ret; 
0x0807cc03: sti; call 0x2a7f; add eax, 0x683f7; mov eax, dword ptr [eax + 0x1fa8]; ret; 
0x0807cbe3: sti; call 0x2a7f; add eax, 0x68417; mov eax, dword ptr [eax + 0x1fa0]; ret; 
0x0807aee3: sti; call 0x2a7f; add eax, 0x6a117; lea eax, [eax + 0xa60]; ret; 
0x0805fdf3: sti; call 0x2a7f; add eax, 0x85207; mov eax, 0x80e5098; mov eax, dword ptr [eax]; ret; 
0x080991e4: sti; call dword ptr gs:[0x10]; 
0x0807aee6: sti; cld; inc dword ptr [0x6a117]; lea eax, [eax + 0xa60]; ret; 
0x08094f12: sti; dec dword ptr [ebp - 0x1dadb79]; call dword ptr [eax + 0x68]; 
0x08094ef3: sti; dec dword ptr [ebp - 0x1dadb79]; call dword ptr [eax - 0x73]; 
0x08092151: sti; dec dword ptr [ebp - 0x3068b79]; call dword ptr [eax + 0x68]; 
0x080aabb4: sti; dec dword ptr [ecx + 0x5bc03106]; pop esi; pop edi; ret; 
0x0809726f: sti; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x080b332c: sti; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x080b2e62: sti; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x080b2b84: sti; inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x080a7bc7: sti; inc dword ptr [ecx + 0x3d437c2]; add byte ptr [ebx - 0x39], dl; ret; 
0x080b2b39: sti; inc edi; ret 0; 
0x0808ec34: sti; jmp dword ptr [esi - 0x70]; 
0x08094f25: sti; loope 0x4cf27; dec dword ptr [ebp - 0x1dadb79]; call dword ptr [eax + 0x68]; 
0x08068004: sti; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x080a7e93: sti; mov eax, 0x14; call dword ptr gs:[0x10]; 
0x080a7e93: sti; mov eax, 0x14; call dword ptr gs:[0x10]; ret; 
0x08076f53: sti; mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x080995d3: sti; mov eax, 0xc7; call dword ptr gs:[0x10]; 
0x080995d3: sti; mov eax, 0xc7; call dword ptr gs:[0x10]; ret; 
0x08099613: sti; mov eax, 0xc8; call dword ptr gs:[0x10]; 
0x08099613: sti; mov eax, 0xc8; call dword ptr gs:[0x10]; ret; 
0x080995f3: sti; mov eax, 0xc9; call dword ptr gs:[0x10]; 
0x080995f3: sti; mov eax, 0xc9; call dword ptr gs:[0x10]; ret; 
0x08099633: sti; mov eax, 0xca; call dword ptr gs:[0x10]; 
0x08099633: sti; mov eax, 0xca; call dword ptr gs:[0x10]; ret; 
0x0805ef53: sti; mov eax, 0xffffffff; mov edx, 0xffffffff; ret; 
0x0805e7a3: sti; mov eax, 0xffffffff; ret; 
0x080a4cb3: sti; mov eax, dword ptr [eax + 4]; ret; 
0x080a4cc3: sti; mov eax, dword ptr [eax + 4]; sub eax, dword ptr gs:[0]; ret; 
0x080a93bc: sti; mov eax, dword ptr [ebp - 0x2c]; push esi; call dword ptr [eax]; 
0x0805fe23: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x080b01d3: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x48]; ret; 
0x080b0243: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x080b0283: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x50]; ret; 
0x080b02f3: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x54]; ret; 
0x080b02e3: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x58]; ret; 
0x080b0293: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x5c]; ret; 
0x080b0273: sti; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x4c], edx; ret; 
0x0805fb03: sti; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x08087bf3: sti; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x0805fe33: sti; mov eax, dword ptr [esp + 4]; ret; 
0x080628e9: sti; mov edx, 1; call dword ptr gs:[0x10]; 
0x08079263: sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x74; call dword ptr gs:[0x10]; 
0x080995a3: sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x08077f23: sti; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x0806a32b: sti; pop ebx; pop esi; sub eax, edi; pop edi; ret; 
0x08097fa2: sti; pop edi; ret; 
0x08077cb3: sti; push ebx; mov eax, 0xbf; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x08076fd3: sti; push ebx; mov eax, 0xc3; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x08099653: sti; push ebx; mov eax, 0xc4; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x08077003: sti; push ebx; mov eax, 0xc5; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x08077a83: sti; push ebx; mov eax, 6; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x080a84f3: sti; ret 4; 
0x08049c73: sti; ret; 
0x0807a950: sti; sub ch, bh; call dword ptr [eax - 0x18]; 
0x080a03bd: sti; sub dword ptr [ebx - 0x6bf0f7b3], ecx; ret 0x940f; 
0x0805f753: sti; sub esp, 0x18; push 1; call 0x170a0; add esp, 0x1c; ret; 
0x0804c1da: sti; test dword ptr [ebx + 0x458b10c4], 0x74c0858c; adc eax, edi; ret 0x6ef4; 
0x080b0a40: sti; xor byte ptr [ebp + 0xc], dh; mov eax, dword ptr [edx + 8]; add esp, 8; pop ebx; ret; 
0x0805eea3: sti; xor eax, eax; ret; 
0x0809f722: stosb byte ptr es:[edi], al; adc al, 0; add byte ptr [ebx + 0x458b0875], cl; adc bh, al; ret 0x4d84; 
0x0804fd12: stosb byte ptr es:[edi], al; add byte ptr [eax], al; add byte ptr [ebx - 0x7c72f714], al; in al, dx; idiv esp; call dword ptr [eax + 0x55]; 
0x08075020: stosb byte ptr es:[edi], al; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0805fef7: stosb byte ptr es:[edi], al; sbb byte ptr [eax], bl; add byte ptr [eax], al; add dword ptr [ebx + 0x5e], ebx; ret; 
0x080b2eeb: stosb byte ptr es:[edi], al; test eax, eax; je 0x6aefa; mov dword ptr [esp + 8], edx; call eax; 
0x0805c4a2: stosd dword ptr es:[edi], eax; add dword ptr [eax], eax; add esp, 0x18; pop ebx; ret; 
0x08086dd4: stosd dword ptr es:[edi], eax; cmp al, 0xfc; inc dword ptr [ecx + 0x5e228c6]; add byte ptr [ebx - 0x77], dl; ret; 
0x080b2ee4: stosd dword ptr es:[edi], eax; cmp dh, 0xff; dec dword ptr [ecx - 0x3f7a55f4]; je 0x6aefa; mov dword ptr [esp + 8], edx; call eax; 
0x080624f9: stosd dword ptr es:[edi], eax; lea esi, [esi]; call eax; 
0x0807501c: stosd dword ptr es:[edi], eax; mov ecx, edx; rep stosb byte ptr es:[edi], al; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x08094ef1: stosd dword ptr es:[edi], eax; popal; sti; dec dword ptr [ebp - 0x1dadb79]; call dword ptr [eax - 0x73]; 
0x080b2c59: sub al, 0x24; call edi; 
0x0804fcd0: sub al, 0x24; ret; 
0x080998c7: sub al, 0x31; ror byte ptr [ebx - 0x74bbdb8c], 0x5c; and al, 0x40; lea edx, [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x08075c67: sub al, 0x50; lea eax, [esp + 0x34]; push eax; push dword ptr [ebp + 8]; call esi; 
0x0805b0e1: sub al, 0x57; push esi; push ebx; call dword ptr [ebp + 0x40]; 
0x080a841c: sub al, 0x5b; pop esi; pop edi; pop ebp; ret 8; 
0x0804efa4: sub al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x08080e70: sub al, 0x6a; add byte ptr [edx], ch; push 0; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; call edi; 
0x08083256: sub al, 0x6a; add byte ptr [edx], ch; push 0; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x5c]; call edi; 
0x0807fb48: sub al, 0x6a; add byte ptr [edx], ch; push 0; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; call edi; 
0x080a98d0: sub al, 0x6f; push cs; or byte ptr [ecx - 0x8f63], cl; inc edi; ret; 
0x080a3ce4: sub al, 0x6f; push cs; or byte ptr [esi + 1], bh; call dword ptr [eax]; 
0x0806b6f2: sub al, 0x74; sbb eax, dword ptr [ebx - 0x7bf0d207]; ret 0; 
0x0805a88a: sub al, 0x83; les ebp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x080666f2: sub al, 0x83; les edi, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0804edfb: sub al, 0x89; call 0x5d5fcc5d; ret; 
0x0805016f: sub al, 0x89; dec esp; and al, 0x28; push esi; mov eax, dword ptr [esp + 0x1c]; call eax; 
0x0806491b: sub al, 0x89; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x0805c1a9: sub al, 0x89; ret; 
0x0806678b: sub al, 0x8d; adc ah, 0xd; std; call dword ptr [eax - 0x77]; 
0x0808340c: sub al, 0x8d; add dword ptr [eax + 0x37], -3; call dword ptr [eax + 0x68]; 
0x080832c0: sub al, 0x8d; add dword ptr [eax + 0x37], -3; call dword ptr [eax - 0x73]; 
0x08084802: sub al, 0x8d; and eax, 0x36; std; call dword ptr [eax + 0x68]; 
0x08084676: sub al, 0x8d; and eax, 0x36; std; call dword ptr [eax - 0x73]; 
0x0808082c: sub al, 0x8d; dec ebp; and byte ptr [ecx - 0x9cfdbb4], cl; ret 0x7501; 
0x080667bb: sub al, 0x8d; xchg esp, edx; or eax, 0x978dfffd; sbb esi, edi; cld; call dword ptr [eax - 0x73]; 
0x08077257: sub al, 0xb8; mov word ptr [eax], es; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0804a2ab: sub al, 0xc7; ret 0x8000; 
0x08050ca9: sub al, 0xe8; adc dword ptr [eax], eax; add byte ptr [eax], al; add esp, 0x28; pop ebx; ret; 
0x08098e54: sub al, 0xe8; in al, dx; std; jmp dword ptr [ebp - 0x77]; 
0x0804b0f8: sub al, 0xe8; mov dl, 0xf; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x08049e4c: sub al, 0xf0; cld; call dword ptr [eax - 0x18]; 
0x0804c269: sub al, 0xf3; cld; call dword ptr [eax - 0x73]; 
0x080afdd7: sub al, 0xf7; ret 0; 
0x0807eda5: sub al, 0xf; dec edi; ret; 
0x08077552: sub al, 0xf; xchg eax, esp; ret 0x5422; 
0x0807b1d9: sub al, 0xfd; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x0809967b: sub al, 0xfe; jmp dword ptr [esi - 0x70]; 
0x0809969e: sub al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x080a0aca: sub bh, 0xff; jmp dword ptr [esi - 0x70]; 
0x080888ce: sub bh, al; ret; 
0x0807ae30: sub bh, ch; call dword ptr [eax - 0x73]; 
0x0807ae15: sub bh, ch; call dword ptr [edx + 0x50]; 
0x0807bdfb: sub bh, ch; call dword ptr [edx + 0x6a]; 
0x080a6b15: sub bh, ch; jmp dword ptr [esi - 0x70]; 
0x08099842: sub bh, dh; inc dword ptr [ebx + 0x5e5b04c4]; ret; 
0x080a862e: sub bh, dl; dec dword ptr [ebx - 0x72f3dba4]; sub dword ptr [eax - 0x6a], -2; call dword ptr [eax - 0x73]; 
0x0804b83a: sub bl, dh; cld; call dword ptr [eax + 0x52]; 
0x0809c476: sub byte ptr [eax - 0x18], dl; ret; 
0x080ada06: sub byte ptr [eax - 0x73], dl; xchg dword ptr [eax], esp; mov ah, bh; call dword ptr [eax - 0x73]; 
0x0804d150: sub byte ptr [eax], al; add byte ptr [eax], al; add bh, al; ret 0; 
0x0805e3d1: sub byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x080579aa: sub byte ptr [eax], al; or byte ptr [eax], al; add bl, ch; ret; 
0x08081201: sub byte ptr [ebp - 0x2c85f7d], cl; call dword ptr [eax + 0x68]; 
0x08080ed5: sub byte ptr [ebp - 0x2c85f7d], cl; call dword ptr [eax - 0x73]; 
0x080811de: sub byte ptr [ebp - 0x2ca177d], cl; call dword ptr [eax - 0x73]; 
0x08065e01: sub byte ptr [ebp - 0x2f20379], cl; dec dword ptr [ebp - 0x301e669]; call dword ptr [eax - 0x73]; 
0x08077acb: sub byte ptr [ebx + 0x2f7409f9], al; mov ebx, dword ptr [esp + 0x20]; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x080a5266: sub byte ptr [ebx + 0x4c8b10c4], al; and al, 0x1c; xor ecx, dword ptr gs:[0x14]; jne 0x5d27b; add esp, 0x2c; ret; 
0x08096dc5: sub byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x0805c1a5: sub byte ptr [ebx - 0x76d3db94], cl; ret; 
0x0807a26f: sub byte ptr [ebx - 0x7c769a00], cl; mov esp, 0x8d00000b; cmp dword ptr [edi], 0x28; std; call dword ptr [eax - 0x18]; 
0x080a81c5: sub byte ptr [ebx], al; cmp dword ptr [edi - 0x18], edx; ret 0xff60; 
0x0807724d: sub byte ptr [ecx + 0x245c8be6], cl; and byte ptr [ebx - 0x47d3db84], cl; mov word ptr [eax], es; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0809122a: sub byte ptr [ecx + 0x44858bc2], cl; idiv edi; call dword ptr [ecx - 0x75]; 
0x0805a850: sub byte ptr [ecx - 0x75], dl; inc esp; and al, 0x30; push eax; call esi; 
0x080709a4: sub byte ptr [ecx], al; add byte ptr [eax], al; lea eax, [edi + 7]; pop edi; ret; 
0x08070b9c: sub byte ptr [edi], 1; add byte ptr [eax], al; lea eax, [edi + 7]; pop edi; ret; 
0x0809e742: sub byte ptr [edx], 0xf3; cld; call dword ptr [eax - 0x18]; 
0x0807efec: sub byte ptr [edx], ch; push 0; push 0; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; call edi; 
0x08080171: sub byte ptr [edx], ch; push 0; push 0; push dword ptr [esp + 0x60]; push dword ptr [esp + 0x68]; call edi; 
0x08050173: sub byte ptr [esi - 0x75], dl; inc esp; and al, 0x1c; call eax; 
0x0809e278: sub ch, bh; call dword ptr [eax + 0x6a]; 
0x0807a27c: sub ch, bh; call dword ptr [eax - 0x18]; 
0x0807a6c8: sub ch, bh; call dword ptr [esi + 0x50]; 
0x0807aea3: sub ch, bh; call dword ptr [esi + 0x56]; 
0x080a2183: sub cl, byte ptr [edi]; test byte ptr [ecx + eax], ch; add byte ptr [ebx - 0x23b63], cl; dec dword ptr [ebp - 0x1b72b7d]; call dword ptr [eax - 0x73]; 
0x0809e743: sub dh, bl; cld; call dword ptr [eax - 0x18]; 
0x080a5b44: sub dl, byte ptr [eax - 0xa]; ret 0x7501; 
0x0807687e: sub dword ptr [eax + 0x1b], -3; call dword ptr [eax - 0x73]; 
0x08075d07: sub dword ptr [eax + 0x50fffd19], -0x18; mov ss, word ptr [ebx - 3]; jmp dword ptr [esi - 0x70]; 
0x0807920f: sub dword ptr [eax + 9], 0; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x08049e4b: sub dword ptr [eax + esi*8], -4; call dword ptr [eax - 0x18]; 
0x080ad78f: sub dword ptr [eax - 0x63], -2; call dword ptr [eax - 0x73]; 
0x080aa774: sub dword ptr [eax - 0x69], -2; call dword ptr [eax - 0x18]; 
0x080a8613: sub dword ptr [eax - 0x6a], -2; call dword ptr [eax - 0x73]; 
0x08050bd7: sub dword ptr [eax - 0x73], edx; cmp dword ptr [edi], -8; cld; call dword ptr [eax - 0x18]; 
0x0804b839: sub dword ptr [eax], -0xd; cld; call dword ptr [eax + 0x52]; 
0x08049eb2: sub dword ptr [eax], 0; add byte ptr [eax - 0x73], dl; cmp dword ptr [ecx - 0x10], -4; call dword ptr [eax - 0x18]; 
0x08064c0c: sub dword ptr [ebx + 0x4e0], 1; pop ebx; pop esi; pop edi; ret; 
0x0804c268: sub dword ptr [ebx + esi*8], -4; call dword ptr [eax - 0x73]; 
0x080a03be: sub dword ptr [ebx - 0x6bf0f7b3], ecx; ret 0x940f; 
0x0807a9dc: sub dword ptr [ebx], 0x29; std; call dword ptr [eax - 0x18]; 
0x08050b5d: sub dword ptr [ebx], 1; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x0808f14b: sub dword ptr [ebx], 1; pop ebx; pop esi; ret; 
0x080b2e96: sub dword ptr [ecx + ebx], 0; add byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x080793be: sub dword ptr [ecx], 0x21; std; call dword ptr [eax - 0x18]; 
0x08063242: sub dword ptr [ecx], edi; ret 0xa7e; 
0x080793bf: sub dword ptr [ecx], esp; std; call dword ptr [eax - 0x18]; 
0x0805dc09: sub dword ptr [edi + 0x1818], 1; pop ebx; pop esi; pop edi; ret; 
0x0809b7a9: sub dword ptr [edi + 0x36], -2; jmp dword ptr [esi - 0x70]; 
0x0805fef6: sub dword ptr [edx + 0x1818], 1; pop ebx; pop esi; ret; 
0x08049e8d: sub dword ptr [esi - 0x10], -4; call dword ptr [eax - 0x18]; 
0x080516ed: sub dword ptr [esi - 8], -4; call dword ptr [eax - 0x18]; 
0x080769d0: sub dword ptr [esi], 0x1b; std; call dword ptr [eax - 0x18]; 
0x0809831b: sub eax, 0x10; pop edi; ret; 
0x080811e0: sub eax, 0x35; std; call dword ptr [eax - 0x73]; 
0x0805efa2: sub eax, 0x5308ec83; push esi; call dword ptr [edi + 0x18]; 
0x08085d24: sub eax, 0x5b1cc483; pop esi; pop edi; pop ebp; ret; 
0x0805a989: sub eax, 0x5b2cc483; pop esi; pop edi; pop ebp; ret; 
0x0807e58b: sub eax, 0x5bf4658d; pop esi; pop edi; pop ebp; ret; 
0x08056c5f: sub eax, 0x83ffffef; in al, dx; or al, 0x8d; xchg dword ptr [eax - 7], ecx; cld; call dword ptr [eax - 0x18]; 
0x080896bf: sub eax, 0x83fffffb; les edx, ptr [eax]; add esp, 4; pop ebx; pop esi; ret; 
0x080999a1: sub eax, 0x8b000000; pop esp; and al, 8; int 0x80; 
0x08089527: sub eax, 0xb8fffffe; lock add byte ptr [eax], al; add byte ptr [ebp + 0x1a3c9b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x080b2cb4: sub eax, 0xc483fffb; sbb al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x080493ad: sub eax, 1; jle 0x139b; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08049407: sub eax, 1; jle 0x13f6; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08049460: sub eax, 1; jle 0x1450; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x080494b9: sub eax, 1; jle 0x14a9; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08049512: sub eax, 1; jle 0x1502; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0804956b: sub eax, 1; jle 0x155b; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x080495ee: sub eax, 1; jle 0x15dd; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08049647: sub eax, 1; jle 0x1637; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x080496a2: sub eax, 1; jle 0x1690; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x08050bec: sub eax, 1; jle 0x8b60; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x080862d8: sub eax, 1; mov dword ptr [ecx + 4], eax; add esp, 4; pop ebx; pop esi; ret; 
0x080a570b: sub eax, 1; ret; 
0x08060a2c: sub eax, 1; shr eax, 4; add eax, 1; mov dword ptr [edx + 0x4b0], eax; ret; 
0x080a4cc8: sub eax, dword ptr [0]; ret; 
0x080769b9: sub eax, dword ptr [eax]; add byte ptr [ebp - 0x2e4977d], cl; call dword ptr [eax - 0x73]; 
0x080780d0: sub eax, dword ptr [ebx + 0x33ff0cec]; call esi; 
0x08096e54: sub eax, dword ptr [ebx + 0x565308ec]; call dword ptr [edi + 0x18]; 
0x08050b5e: sub eax, dword ptr [ecx]; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x0808f14c: sub eax, dword ptr [ecx]; pop ebx; pop esi; ret; 
0x08060832: sub eax, dword ptr [edx + 0xc]; ret; 
0x0805fb0f: sub eax, dword ptr [edx + 8]; ret; 
0x08087bfe: sub eax, dword ptr [edx]; ret; 
0x0804b34a: sub eax, dword ptr [esi + 4]; pop ebx; pop esi; pop edi; ret; 
0x0807543a: sub eax, dword ptr [esp + 4]; ret; 
0x080a4cc7: sub eax, dword ptr gs:[0]; ret; 
0x080aaf09: sub eax, ecx; cmp edx, eax; je 0x62f18; add esp, 8; pop ebx; ret; 
0x0807413c: sub eax, ecx; pop ebx; ret; 
0x080745db: sub eax, ecx; pop esi; pop edi; pop ebx; ret; 
0x0806a18d: sub eax, ecx; pop esi; pop edi; ret; 
0x080547d7: sub eax, ecx; push eax; push ecx; push esi; mov dword ptr [ebp - 0x46c], eax; call dword ptr [ebx + 0x1c]; 
0x08069f38: sub eax, ecx; ret; 
0x0806a32e: sub eax, edi; pop edi; ret; 
0x080a44bb: sub eax, edx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x080a7d5f: sub eax, edx; pop edi; pop ebp; ret; 
0x0806b499: sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x08052941: sub eax, edx; push eax; push edx; push dword ptr [ebp - 0x890]; call dword ptr [ebx + 0x1c]; 
0x08058c9f: sub eax, edx; push eax; push edx; push edi; call dword ptr [ebx + 0x38]; 
0x0805fb40: sub eax, edx; ret; 
0x08090282: sub eax, edx; sar eax, 2; push eax; push edx; push dword ptr [ebp - 0x8a0]; call dword ptr [ebx + 0x1c]; 
0x0805c198: sub eax, edx; sub esp, 4; push eax; push edx; push esi; call ecx; 
0x08071cc2: sub eax, esi; pop ebx; pop esi; ret; 
0x08050900: sub eax, esi; shr eax, 2; lea edi, [esi + eax*4 + 4]; lea esi, [esi]; call dword ptr [esi]; 
0x0807a9dd: sub ebp, dword ptr [ecx]; std; call dword ptr [eax - 0x18]; 
0x08091f93: sub ebp, ecx; ret 0xfffb; 
0x0807a98d: sub ebp, edi; call dword ptr [eax - 0x18]; 
0x0805f090: sub ebx, edx; lea eax, [ebx - 1]; pop ebx; ret; 
0x080582b2: sub ecx, edx; cmp eax, ecx; jbe 0x10318; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x0805cfe4: sub ecx, edx; cmp eax, ecx; jbe 0x15110; sub esp, 0xc; push esi; call dword ptr [edi + 0x44]; 
0x0805d63a: sub ecx, edx; cmp eax, ecx; jbe 0x15680; sub esp, 0xc; push esi; call dword ptr [edi + 0x44]; 
0x0805e733: sub ecx, edx; cmp eax, ecx; jbe 0x16790; sub esp, 0xc; push esi; call dword ptr [edi + 0x34]; 
0x0805e7de: sub ecx, edx; cmp eax, ecx; jbe 0x16808; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x0809672e: sub ecx, edx; cmp eax, ecx; jbe 0x4e768; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x08070754: sub edi, 0x10; add eax, edi; pop edi; ret; 
0x08071a1b: sub edi, 0x10; jb 0x29ae0; lea eax, [eax + 0xf]; pop edi; ret; 
0x0807a8ad: sub edi, 0x28; std; call dword ptr [eax - 0x18]; 
0x08071a90: sub edi, 0xa; jb 0x29ae0; lea eax, [eax + 9]; pop edi; ret; 
0x08071aa0: sub edi, 0xb; jb 0x29ae0; lea eax, [eax + 0xa]; pop edi; ret; 
0x08071ab0: sub edi, 0xd; jb 0x29ae0; lea eax, [eax + 0xc]; pop edi; ret; 
0x08071ac0: sub edi, 0xe; jb 0x29ae0; lea eax, [eax + 0xd]; pop edi; ret; 
0x08071ad0: sub edi, 0xf; jb 0x29ae0; lea eax, [eax + 0xe]; pop edi; ret; 
0x08071a30: sub edi, 2; jb 0x29ae0; lea eax, [eax + 1]; pop edi; ret; 
0x08071a40: sub edi, 3; jb 0x29ae0; lea eax, [eax + 2]; pop edi; ret; 
0x08071988: sub edi, 4; jb 0x29ae0; lea eax, [eax + 3]; pop edi; ret; 
0x08071a50: sub edi, 5; jb 0x29ae0; lea eax, [eax + 4]; pop edi; ret; 
0x08071a60: sub edi, 6; jb 0x29ae0; lea eax, [eax + 5]; pop edi; ret; 
0x08071a70: sub edi, 7; jb 0x29ae0; lea eax, [eax + 6]; pop edi; ret; 
0x080719bb: sub edi, 8; jb 0x29ae0; lea eax, [eax + 7]; pop edi; ret; 
0x08071a80: sub edi, 9; jb 0x29ae0; lea eax, [eax + 8]; pop edi; ret; 
0x08062952: sub edi, dword ptr [ecx]; ret 0x840f; 
0x08086f09: sub edi, ebp; jmp dword ptr [ebp - 0x75]; 
0x080b2e61: sub edi, ebx; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x080881f0: sub edi, edx; call dword ptr [eax - 0x73]; 
0x0805d5d2: sub edx, -4; cld; call dword ptr [eax - 0x18]; 
0x0805d5d2: sub edx, -4; cld; call dword ptr [eax - 0x18]; ret; 
0x08070bfb: sub edx, 0x10; jb 0x28cd0; lea eax, [edi + 0xf]; pop edi; ret; 
0x08070c80: sub edx, 0xa; jb 0x28cd0; lea eax, [edi + 9]; pop edi; ret; 
0x08070c90: sub edx, 0xb; jb 0x28cd0; lea eax, [edi + 0xa]; pop edi; ret; 
0x08070bd2: sub edx, 0xc; jb 0x28cd0; lea eax, [edi + 0xb]; pop edi; ret; 
0x08070ca0: sub edx, 0xd; jb 0x28cd0; lea eax, [edi + 0xc]; pop edi; ret; 
0x08070cb0: sub edx, 0xe; jb 0x28cd0; lea eax, [edi + 0xd]; pop edi; ret; 
0x08070cc0: sub edx, 0xf; jb 0x28cd0; lea eax, [edi + 0xe]; pop edi; ret; 
0x08070c20: sub edx, 2; jb 0x28cd0; lea eax, [edi + 1]; pop edi; ret; 
0x08070c30: sub edx, 3; jb 0x28cd0; lea eax, [edi + 2]; pop edi; ret; 
0x08070b67: sub edx, 4; jb 0x28cd0; lea eax, [edi + 3]; pop edi; ret; 
0x08070c40: sub edx, 5; jb 0x28cd0; lea eax, [edi + 4]; pop edi; ret; 
0x08070c50: sub edx, 6; jb 0x28cd0; lea eax, [edi + 5]; pop edi; ret; 
0x08070c60: sub edx, 7; jb 0x28cd0; lea eax, [edi + 6]; pop edi; ret; 
0x08070b98: sub edx, 8; jb 0x28cd0; lea eax, [edi + 7]; pop edi; ret; 
0x08070c70: sub edx, 9; jb 0x28cd0; lea eax, [edi + 8]; pop edi; ret; 
0x0805fb3a: sub edx, dword ptr [eax + 0xc]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x0805fb48: sub edx, dword ptr [eax + 8]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x0807cabb: sub edx, dword ptr [eax - 0x73]; sbb dword ptr [ebp + 0x2d], -3; call dword ptr [eax - 0x18]; 
0x08096fcc: sub edx, dword ptr [ebx + 8]; sar edx, 2; mov eax, dword ptr [ecx + 8]; pop ebx; sub eax, edx; ret; 
0x08070ff3: sub edx, eax; jbe 0x29030; add eax, edi; pop edi; ret; 
0x08071006: sub edx, eax; jbe 0x29030; lea eax, [edi + eax + 0x10]; pop edi; ret; 
0x08071016: sub edx, eax; jbe 0x29030; lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x08071026: sub edx, eax; jbe 0x29030; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x0805b4e9: sub edx, eax; push edx; push eax; push edi; call dword ptr [ebx + 0x38]; 
0x0805eac4: sub edx, ecx; cmp eax, edx; jbe 0x16b90; sub esp, 0xc; push esi; call dword ptr [ebp + 0x30]; 
0x08070d20: sub edx, ecx; jbe 0x28d50; add eax, ecx; ret; 
0x080a80f6: sub edx, edi; inc dword ptr [0x3cf07]; mov eax, 0x80e6f60; mov eax, dword ptr [eax]; ret; 
0x0805c82a: sub edx, edi; pop edi; pop ebp; mov eax, edx; ret; 
0x080999c8: sub esi, edi; jmp dword ptr [esi - 0x70]; 
0x0805bb23: sub esp, -0x80; pop ebx; pop esi; pop edi; ret; 
0x08060339: sub esp, -3; cld; call dword ptr [eax - 0x73]; 
0x0804fd1a: sub esp, -9; cld; call dword ptr [eax + 0x55]; 
0x08049cf4: sub esp, 0x10; push eax; push 0x80e5f40; call edx; 
0x08049ca8: sub esp, 0x14; push 0x80e5f40; call eax; 
0x08049ca8: sub esp, 0x14; push 0x80e5f40; call eax; add esp, 0x10; leave; ret; 
0x0805f754: sub esp, 0x18; push 1; call 0x170a0; add esp, 0x1c; ret; 
0x0807d497: sub esp, 0xc; mov dword ptr [ebp - 0x48], edx; push edi; call 0x32fa0; mov dword ptr [esp], esi; call edi; 
0x080a5500: sub esp, 0xc; mov dword ptr gs:[ebx], 0; push dword ptr [esp + 0x28]; mov eax, dword ptr [esp + 0x28]; call eax; 
0x0809f428: sub esp, 0xc; mov eax, 0x80e59e4; push ebx; call dword ptr [eax]; 
0x08096905: sub esp, 0xc; mov eax, dword ptr [eax + 0x88]; push ebx; call dword ptr [eax + 0x34]; 
0x0809bd25: sub esp, 0xc; or dword ptr [ebx - 0x30], 7; mov eax, 0x80e5cd4; push dword ptr [ebp + 0x18]; call dword ptr [eax]; 
0x080780d1: sub esp, 0xc; push dword ptr [ebx]; call esi; 
0x080a54aa: sub esp, 0xc; push dword ptr [esp + 0x28]; mov edx, dword ptr [esp + 0x28]; call edx; 
0x080b31c7: sub esp, 0xc; push eax; call edx; 
0x0805e7e4: sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x0807cc53: sub esp, 0xc; push edi; call 0x32fa0; mov dword ptr [esp], esi; call edi; 
0x0805eace: sub esp, 0xc; push esi; call dword ptr [ebp + 0x30]; 
0x080582b8: sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x0805e739: sub esp, 0xc; push esi; call dword ptr [edi + 0x34]; 
0x0805cfee: sub esp, 0xc; push esi; call dword ptr [edi + 0x44]; 
0x08087b7f: sub esp, 0xc; push esi; call eax; 
0x0808b4e0: sub esp, 4; mov dword ptr [ebp - 0x78], ecx; push ecx; push dword ptr [ebp - 0xa0]; push dword ptr [ebp - 0x88]; call eax; 
0x0805f522: sub esp, 4; push 0; push 0; push ebp; call dword ptr [ebx + 0x2c]; 
0x080588c0: sub esp, 4; push 0x10; push edi; push esi; call dword ptr [eax + 0x1c]; 
0x08090aca: sub esp, 4; push dword ptr [ebp - 0x8a8]; push dword ptr [ebp - 0x8e8]; push dword ptr [ebp - 0x8a0]; call dword ptr [ebx + 0x1c]; 
0x080b1b70: sub esp, 4; push dword ptr [esi]; push dword ptr [ebx + ebp + 4]; push dword ptr [esp + 0x20]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x0805b288: sub esp, 4; push dword ptr [esp + 0x10]; push dword ptr [esp + 0x10]; push esi; call dword ptr [edi + 0x3c]; 
0x080acea0: sub esp, 4; push dword ptr [esp + 0x34]; push edi; push esi; call dword ptr [ebp]; 
0x080597c8: sub esp, 4; push eax; push edx; push dword ptr [esp + 0x24]; call ecx; 
0x0805c19a: sub esp, 4; push eax; push edx; push esi; call ecx; 
0x080b2870: sub esp, 4; push ebp; push 0x28; push dword ptr [esp + 0x20]; mov eax, dword ptr [esp + 0x28]; call eax; 
0x0808914c: sub esp, 4; push ebp; push dword ptr [esp + 0x20]; push esi; call edi; 
0x0805c64a: sub esp, 4; push ebp; push dword ptr [esp + 0x3c]; push edi; call dword ptr [eax + 0x20]; 
0x08088e53: sub esp, 4; push ebp; push ebx; push esi; call edi; 
0x08058928: sub esp, 4; push ebp; push edi; push esi; call dword ptr [edx + 0x1c]; 
0x08088e30: sub esp, 4; push ebp; push esi; push dword ptr [esp + 0x10]; call edi; 
0x08088e03: sub esp, 4; push ebp; push esi; push dword ptr [esp + 0x20]; call edi; 
0x08095a69: sub esp, 4; push ebx; push dword ptr [ebp + 8]; push esi; call dword ptr [eax + 0x1c]; 
0x080528ad: sub esp, 4; push ebx; push dword ptr [ebp - 0x884]; push dword ptr [ebp - 0x890]; call edx; 
0x0805740e: sub esp, 4; push ebx; push dword ptr [esp + 0x3c]; push esi; call dword ptr [edx + 0x1c]; 
0x08051990: sub esp, 4; push ebx; push eax; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x1c]; 
0x08078000: sub esp, 4; push ecx; push 3; push ebx; call edx; 
0x08065840: sub esp, 4; push ecx; push edx; push ebx; call eax; 
0x0809044b: sub esp, 4; push ecx; push esi; push dword ptr [ebp - 0x8a0]; call edx; 
0x08077fc9: sub esp, 4; push edi; push 0; push ebx; call esi; 
0x08077fdd: sub esp, 4; push edi; push 1; push ebx; call esi; 
0x08077ff0: sub esp, 4; push edi; push 2; push ebx; call esi; 
0x08058a23: sub esp, 4; push edi; push dword ptr [ebp + 8]; push eax; call dword ptr [ebx + 0x1c]; 
0x08095c7c: sub esp, 4; push edi; push dword ptr [ebp + 8]; push esi; call dword ptr [ebx + 0x1c]; 
0x080ad020: sub esp, 4; push edi; push esi; push ebp; call dword ptr [ebx]; 
0x0805c729: sub esp, 4; push edx; push ebp; push esi; call dword ptr [ebx + 0x38]; 
0x08051e72: sub esp, 4; push esi; push dword ptr [ebp - 0x898]; push dword ptr [ebp - 0x890]; call dword ptr [ebx + 0x1c]; 
0x0805329c: sub esp, 4; push esi; push dword ptr [ebp - 0x89c]; push dword ptr [ebp - 0x890]; call dword ptr [ebx + 0x1c]; 
0x0805b4e6: sub esp, 4; sub edx, eax; push edx; push eax; push edi; call dword ptr [ebx + 0x38]; 
0x080958b4: sub esp, 8; lea eax, [esp + 0x14]; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x0805bacf: sub esp, 8; lea eax, [esp + 0x24]; push eax; push esi; call dword ptr [edi + 0x48]; 
0x0805b766: sub esp, 8; lea eax, [esp + 0x34]; push eax; push esi; call dword ptr [edi + 0x48]; 
0x080593aa: sub esp, 8; lea eax, [esp + 0x3c]; push eax; push dword ptr [esp + 0x24]; call dword ptr [ebx + 0x48]; 
0x0805be08: sub esp, 8; lea eax, [esp + 0x44]; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x08098c03: sub esp, 8; lea ebp, [esp + 0xc]; push ebp; push ebx; call eax; 
0x0805e8a0: sub esp, 8; lea edi, [esi + 1]; push eax; push ecx; mov dword ptr [esp + 0x40], ecx; call dword ptr [ebx + 0xc]; 
0x0805b5ff: sub esp, 8; push -1; push dword ptr [eax]; call dword ptr [ebx + 0xc]; 
0x080590ea: sub esp, 8; push -1; push dword ptr [ebx]; call dword ptr [eax + 0xc]; 
0x08058001: sub esp, 8; push 0; push edi; call dword ptr [ebx + 8]; 
0x080784ba: sub esp, 8; push dword ptr [eax]; mov eax, dword ptr [ebp - 0x3c]; push dword ptr [ebp - 0x38]; mov dword ptr [ebp - 0x30], edx; call eax; 
0x080b07e0: sub esp, 8; push dword ptr [ebp + 0xc]; push ebx; call dword ptr [ebp + 8]; 
0x080783fa: sub esp, 8; push dword ptr [ebx]; mov ebp, ebx; push esi; call edi; 
0x08065ae8: sub esp, 8; push dword ptr [esp + 0x24]; push ebx; call eax; 
0x08065570: sub esp, 8; push dword ptr [esp + 0x24]; push esi; call eax; 
0x08066390: sub esp, 8; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x10]; call eax; 
0x0805efa3: sub esp, 8; push ebx; push esi; call dword ptr [edi + 0x18]; 
0x08098bb4: sub esp, 8; push edi; push ebx; call eax; 
0x080b0792: sub esp, 8; push edx; push 1; call eax; 
0x08088777: sub esp, edi; dec dword ptr [ebp - 0x2bddb7d]; call dword ptr [eax - 0x73]; 
0x08088796: sub esp, edi; jmp dword ptr [esi - 0x70]; 
0x0806af3d: syscall; 
0x08071289: test ah, 0x20; jne 0x29340; test ah, 0x40; jne 0x29350; lea eax, [edx + 0xf]; ret; 
0x08097f12: test ah, 0x20; jne 0x4ffb0; lea eax, [edi - 4]; pop edi; ret; 
0x08070556: test ah, 0x40; jne 0x28640; lea eax, [edi + 0xf]; pop edi; ret; 
0x080709f2: test ah, 0x40; jne 0x28b30; lea eax, [edi + 0xf]; pop edi; ret; 
0x08071292: test ah, 0x40; jne 0x29350; lea eax, [edx + 0xf]; ret; 
0x08071260: test ah, 2; jne 0x29310; test ah, 4; jne 0x29320; lea eax, [edx + 0xb]; ret; 
0x08097ee9: test ah, 2; jne 0x4ff80; lea eax, [edi - 8]; pop edi; ret; 
0x080709c9: test ah, 4; jne 0x28b00; lea eax, [edi + 0xb]; pop edi; ret; 
0x08071269: test ah, 4; jne 0x29320; lea eax, [edx + 0xb]; ret; 
0x0805f808: test ah, bh; add byte ptr [eax], al; add bh, al; ret; 
0x08082b9e: test ah, bh; dec dword ptr [ebx - 0x72cfdba4]; and dword ptr [eax + 0x37], 0xfffffffd; call dword ptr [eax - 0x73]; 
0x08056525: test ah, dh; add dword ptr [eax], eax; add byte ptr [ebx - 0x4737b], cl; inc dword ptr [eax - 0x42273]; call dword ptr [eax]; 
0x080706b4: test al, 0; add byte ptr [eax], al; add eax, edi; add eax, ecx; pop edi; ret; 
0x08071244: test al, 0; add byte ptr [eax], al; lea eax, [edx + 7]; ret; 
0x08075d08: test al, 0x19; std; call dword ptr [eax - 0x18]; 
0x08075d08: test al, 0x19; std; call dword ptr [eax - 0x18]; mov ss, word ptr [ebx - 3]; jmp dword ptr [esi - 0x70]; 
0x0807cc10: test al, 0x1f; add byte ptr [eax], al; ret; 
0x08071238: test al, 0x20; jne 0x292e0; test al, 0x40; jne 0x292f0; lea eax, [edx + 7]; ret; 
0x08097ec0: test al, 0x20; jne 0x4ff50; lea eax, [edi - 0xc]; pop edi; ret; 
0x080829ce: test al, 0x35; std; call dword ptr [eax - 0x73]; 
0x08088bfe: test al, 0x3a; cli; dec dword ptr [edi]; inc esp; ret 0x4489; 
0x08070504: test al, 0x40; jne 0x285d0; lea eax, [edi + 7]; pop edi; ret; 
0x080709a0: test al, 0x40; jne 0x28ad0; lea eax, [edi + 7]; pop edi; ret; 
0x08071240: test al, 0x40; jne 0x292f0; lea eax, [edx + 7]; ret; 
0x080ae416: test al, 0x60; jne 0x16c6; add esp, 8; xor eax, eax; pop ebx; ret; 
0x080b23d6: test al, 0x60; jne 0x1762; add esp, 8; xor eax, eax; pop ebx; ret; 
0x080ae41a: test al, 0xb2; stc; inc dword ptr [ebx - 0x3fcef73c]; pop ebx; ret; 
0x08064446: test al, 0xe; std; dec dword ptr [ebp - 0x301e66a]; call dword ptr [eax - 0x73]; 
0x08071215: test al, 2; jne 0x292b0; test al, 4; jne 0x292c0; lea eax, [edx + 3]; ret; 
0x08097e9b: test al, 2; jne 0x4ff20; lea eax, [edi - 0x10]; pop edi; ret; 
0x0807097d: test al, 4; jne 0x28aa0; lea eax, [edi + 3]; pop edi; ret; 
0x0807121d: test al, 4; jne 0x292c0; lea eax, [edx + 3]; ret; 
0x080ab838: test al, al; add al, byte ptr [eax]; add byte ptr [eax], al; call 0x637f0; add eax, ebx; jmp eax; 
0x080752a4: test al, al; jne 0x2d29c; xor eax, eax; ret; 
0x080b09e8: test al, al; jne 0x68a14; add esp, 8; mov eax, 4; pop ebx; ret; 
0x080ab2b1: test al, al; mov eax, 0x180; sete cl; add ecx, ecx; call dword ptr gs:[0x10]; 
0x0804b82d: test bh, ch; add dword ptr [eax], eax; add byte ptr [ebp - 0x137cf7b0], cl; or byte ptr [ebp - 0x30cd77d], cl; call dword ptr [eax + 0x52]; 
0x080a1ee7: test bh, dl; add byte ptr [eax], al; add byte ptr [ebp + 0xff289c9], al; xchg eax, esp; ret; 
0x0807aa48: test bl, dh; add al, byte ptr [eax]; add bh, al; ret 0x4da0; 
0x08086382: test byte ptr [0x83000001], bl; in al, dx; or byte ptr [ebp - 0x2c6bc6d], cl; call dword ptr [edx + 0x50]; 
0x0809d79e: test byte ptr [0x8dffffff], dh; xor dword ptr [eax + eax*2], 0xfffffffe; call dword ptr [eax - 0x73]; 
0x080afe57: test byte ptr [eax + eax - 0x137d0000], al; or byte ptr [ebp - 0x363df7d], cl; call dword ptr [eax - 0x73]; 
0x08098baf: test byte ptr [eax + eax - 0x137d0000], bh; or byte ptr [edi + 0x53], dl; call eax; 
0x08071be1: test byte ptr [eax + eax], bh; add byte ptr [eax + 0xc], bh; pop edi; ret; 
0x0809e5f9: test byte ptr [eax + ecx*4], ah; add byte ptr [eax], al; add bh, bh; xor byte ptr [ebp - 0x1c22279], cl; call dword ptr [eax - 0x18]; 
0x08083f31: test byte ptr [eax - 0x16000009], cl; leave; idiv edi; dec dword ptr [ebx - 0x72cbdba4]; xor dword ptr [eax + 0x35], 0xfffffffd; call dword ptr [eax - 0x73]; 
0x08071b91: test byte ptr [eax - 0x48000000], bh; or byte ptr [eax], al; add byte ptr [eax], al; pop edi; ret; 
0x08068c45: test byte ptr [eax - 0x7cffffed], dh; ret 0x8308; 
0x080a7499: test byte ptr [eax - 0x7d000000], al; in al, dx; or byte ptr [ebp - 0x3da2f7d], cl; call dword ptr [eax - 0x73]; 
0x080821c4: test byte ptr [eax], al; add byte ptr [eax], al; push eax; push dword ptr [esp + 0x60]; push dword ptr [esp + 0x60]; call esi; 
0x08081b83: test byte ptr [eax], bh; add eax, dword ptr [eax]; add bh, dh; ret; 
0x080ada02: test byte ptr [ebp + 0x50282444], 0x8d; xchg dword ptr [eax], esp; mov ah, bh; call dword ptr [eax - 0x73]; 
0x080a8b13: test byte ptr [ebp + 0xe], cl; or byte ptr [ebp - 0x1c9f967], cl; dec dword ptr [ebx - 0x7aff7500]; ror byte ptr [edi], 0x44; ret; 
0x080ad742: test byte ptr [ebp + 0xe], cl; or byte ptr [ebp - 0x1c9f96a], cl; dec dword ptr [ebx - 0x7aff7500]; ror byte ptr [edi], 0x44; ret 0xec83; 
0x080ad075: test byte ptr [ebp + 0xe], cl; or byte ptr [ebp - 0x1c9f96e], cl; dec dword ptr [ebx - 0x7aff7500]; ror byte ptr [edi], 0x44; ret 0x4c89; 
0x080ad6fb: test byte ptr [ebp + 0xe], cl; or byte ptr [ebp - 0x1c9f96f], cl; dec dword ptr [ebx - 0x7aff7500]; ror byte ptr [edi], 0x44; ret 0xec83; 
0x080825fa: test byte ptr [ebp + eax], bl; add byte ptr [ebx - 0x72cfdba4], cl; and dword ptr [eax + 0x37], 0xfffffffd; call dword ptr [eax - 0x73]; 
0x0807695f: test byte ptr [ebp - 0x72000002], bh; sub dword ptr [eax + 0x1b], -3; call dword ptr [eax - 0x73]; 
0x0809cf03: test byte ptr [ebp - 0x72fffffd], al; sbb dword ptr [ebx + 0x37], -2; call dword ptr [eax + 0x6a]; 
0x08067785: test byte ptr [ebp - 0x7cffffff], bh; ret 0xe901; 
0x08049fed: test byte ptr [ebp - 0x7d000000], dh; ret; 
0x080672a2: test byte ptr [ebx + 0xa], 0x10; pop ebx; cmovne eax, ecx; ret; 
0x080674d2: test byte ptr [ebx + 0xf], 4; pop ebx; cmovne eax, ecx; ret; 
0x08098200: test byte ptr [ebx + 1], bl; add byte ptr [eax], al; bsr eax, eax; add eax, edi; pop edi; ret; 
0x0809bdd1: test byte ptr [ebx + edi*8 - 1], bh; inc dword ptr [ebx - 0x7c72f714]; and al, 0x2a; std; call dword ptr [edx + 0x50]; 
0x080b2ee3: test byte ptr [ebx - 0x180], ch; mov dword ptr [edx + ebp*4], ecx; test eax, eax; je 0x6aefa; mov dword ptr [esp + 8], edx; call eax; 
0x08074136: test byte ptr [ebx - 0x2b4c0], al; sub eax, ecx; pop ebx; ret; 
0x0807ffe4: test byte ptr [ebx - 0x7cffffff], ah; rol byte ptr [ecx], 0x83; ret 0x8901; 
0x0806a110: test byte ptr [ebx - 0x7d000000], cl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x080b23da: test byte ptr [ebx - 7], dh; inc dword ptr [ebx - 0x3fcef73c]; pop ebx; ret; 
0x08096900: test byte ptr [ebx], 2; jne 0x4e91d; sub esp, 0xc; mov eax, dword ptr [eax + 0x88]; push ebx; call dword ptr [eax + 0x34]; 
0x0808466e: test byte ptr [ebx], ah; add dword ptr [eax], eax; add byte ptr [ebx - 0x72d3dba4], cl; and eax, 0x36; std; call dword ptr [eax - 0x73]; 
0x08087078: test byte ptr [ebx], al; mov al, byte ptr [0x8dfffd39]; test byte ptr [ebx], al; sar byte ptr [ecx], 0xfd; call dword ptr [eax - 0x18]; 
0x0808707f: test byte ptr [ebx], al; sar byte ptr [ecx], 0xfd; call dword ptr [eax - 0x18]; 
0x08054710: test byte ptr [ebx], bl; or dword ptr [eax], eax; add byte ptr [ebx - 0x7a72fb14], al; sar bl, 0xff; call dword ptr [esi - 1]; 
0x080863a0: test byte ptr [ebx], cl; add dword ptr [eax], eax; add byte ptr [ebx - 0x7c72f714], al; dec ecx; cmp ebp, edi; call dword ptr [eax - 1]; 
0x08099238: test byte ptr [ecx + 0x10dfa], 0; cmovae ecx, eax; mov eax, 0xdc; mov edi, ecx; call dword ptr gs:[0x10]; 
0x08097267: test byte ptr [ecx + 0x64], 0x40; lea edx, [edx - 0x4ce70]; cmove eax, edx; ret; 
0x08067cd7: test byte ptr [ecx + 0x64], 0x40; lea edx, [edx - 0x74320]; cmove eax, edx; ret; 
0x080671e7: test byte ptr [ecx + 0x64], 0x40; lea edx, [edx - 0x749a0]; cmove eax, edx; ret; 
0x08067d57: test byte ptr [ecx + 0x64], 4; lea edx, [edx - 0x7d070]; cmove eax, edx; ret; 
0x08067d9d: test byte ptr [ecx + 9], 2; lea edx, [edx - 0x77210]; cmovne eax, edx; ret; 
0x0806726d: test byte ptr [ecx + 9], 2; lea edx, [edx - 0x78a60]; cmovne eax, edx; ret; 
0x080a2185: test byte ptr [ecx + eax], ch; add byte ptr [ebx - 0x23b63], cl; dec dword ptr [ebp - 0x1b72b7d]; call dword ptr [eax - 0x73]; 
0x08068021: test byte ptr [ecx - 0x769905be], 0x42; dec byte ptr [ebx + 0x5b082444]; ret; 
0x080a1152: test byte ptr [ecx - 2], al; call dword ptr [eax + 0x6a]; 
0x0806b868: test byte ptr [ecx], al; add byte ptr [eax], al; pop ebx; ret; 
0x080a2209: test byte ptr [ecx], al; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret 0x470f; 
0x0808b871: test byte ptr [ecx], bh; ret; 
0x0807fdfc: test byte ptr [ecx], dl; add eax, dword ptr [eax]; add byte ptr [ebp - 0x7c948b13], al; ret 0x8301; 
0x080a0cf7: test byte ptr [edi + 0x31fffffe], dl; shr cl, cl; ret; 
0x0807cd5a: test byte ptr [edi + 0x6b000000], dl; ret 0x8b3c; 
0x08092db8: test byte ptr [edi - 0x1240], al; jmp eax; 
0x08093662: test byte ptr [edi - 0x12c0], al; jmp eax; 
0x08093948: test byte ptr [edi - 0x1340], al; jmp eax; 
0x08055b6d: test byte ptr [edi - 0x17a0], al; jmp eax; 
0x08054d7b: test byte ptr [edi - 0x1820], al; jmp eax; 
0x08055acd: test byte ptr [edi - 0x18a0], al; jmp eax; 
0x0804a800: test byte ptr [edi - 0x47000004], dl; add byte ptr [ecx], 0; add byte ptr [ebx + 0x3003], bh; xor ecx, ecx; int 0x80; 
0x0804c49c: test byte ptr [edi - 0x74fffffe], dl; inc ebp; mov edi, es; ret 0x6ef4; 
0x08086f34: test byte ptr [edi - 0x7cffffff], cl; in al, dx; or byte ptr [ebp - 0x1df8b7d], cl; call dword ptr [eax + 0x56]; 
0x08085a85: test byte ptr [edi - 4], 0xff; add eax, 0x5f577; mov eax, dword ptr [eax + 0x1968]; ret; 
0x08066da5: test byte ptr [edi], 0x44; ret 0x8389; 
0x08089c6a: test byte ptr [edi], 0x44; ret; 
0x0808c3c0: test byte ptr [edi], 0x49; ret; 
0x0808baa2: test byte ptr [edi], 0x85; cmpsd dword ptr [esi], dword ptr es:[edi]; add eax, dword ptr [eax]; add dh, dh; ret 0xf50; 
0x08050e7f: test byte ptr [edi], 0x85; popal; add eax, dword ptr [eax]; add byte ptr [ebx - 0x76d7dba4], cl; ret 0xdaf7; 
0x080af2e5: test byte ptr [edi], 0x95; ret 0xc985; 
0x0806b503: test byte ptr [edi], 0xb6; push esi; imul byte ptr [ecx]; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x080564d5: test byte ptr [edi], bl; add al, byte ptr [eax]; add byte ptr [ebx - 0x4737b], cl; inc dword ptr [eax - 0x42273]; call dword ptr [eax]; 
0x080747e4: test byte ptr [edi], dl; add dword ptr [eax], eax; add byte ptr [ebx - 0x76f3dbbc], cl; ret 0xe283; 
0x0808e927: test byte ptr [edx + eax], bl; add byte ptr [ebx + 0xf0c2454], cl; mov esi, 0xc7542444; ret 0xfff0; 
0x0804fd11: test byte ptr [edx - 0x7d000000], ch; in al, dx; or byte ptr [ebp - 0x308137d], cl; call dword ptr [eax + 0x55]; 
0x0806b469: test byte ptr [edx - 0xa000000], ah; ret 0x7501; 
0x08081b8f: test byte ptr [edx], ah; add eax, dword ptr [eax]; add bh, dh; ret; 
0x0804aba9: test byte ptr [edx], al; add al, byte ptr [eax]; add bh, al; ret 0x6f74; 
0x0808755b: test byte ptr [edx], bh; std; call dword ptr [eax - 0x73]; 
0x0804b812: test byte ptr [edx], cl; add al, byte ptr [eax]; add byte ptr [ebx - 0x6c72f714], al; pop ds; cld; call dword ptr [edx + 0x50]; 
0x080addf9: test byte ptr [edx], dh; add dword ptr [eax], eax; add byte ptr [ebx + 0x3924245c], cl; ret; 
0x08057958: test byte ptr [esi - 0x72ffffff], dh; inc ebp; add al, byte ptr [eax - 0x76fdf3b2]; aad 0x89; ret 0xa3e9; 
0x08085753: test byte ptr [esi - 0x7d000000], dh; ret; 
0x08062eba: test byte ptr [esi], cl; std; dec dword ptr [ebp - 0x3019569]; call dword ptr [eax - 0x73]; 
0x08088dea: test byte ptr [esp + ebp*2], ah; add dword ptr [eax], eax; add byte ptr [ebp + 0x51], dl; lea esi, [ecx + eax]; push esi; call edi; 
0x08069fd4: test ch, 0x40; jne 0x21fa0; movzx ecx, byte ptr [eax + 7]; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x080a8746: test ch, al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x08071b38: test ch, bh; add byte ptr [eax], al; add byte ptr [eax + 4], bh; pop edi; ret; 
0x08069f2b: test cl, 0x40; jne 0x21fa0; movzx ecx, byte ptr [eax + 7]; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x08098282: test cl, bl; add byte ptr [eax], al; add byte ptr [edi], cl; mov ebp, 0x5ff801c0; ret; 
0x08083bb5: test cl, cl; add al, byte ptr [eax]; add byte ptr [ebx - 0x72cbdba4], cl; and dword ptr [eax], 0x37; std; call dword ptr [eax - 0x73]; 
0x080b1a8b: test cl, cl; jl 0x69a88; dec dword ptr [ebp - 0x72c7db8c]; je 0x69abd; add byte ptr [ecx - 0x7c17760e], cl; ret; 
0x08070477: test dh, 0x40; jne 0x28650; lea eax, [edi + 0xf]; pop edi; ret; 
0x080718e2: test dh, 0x40; jne 0x29c71; add eax, 0xf; pop edi; ret; 
0x080704bd: test dh, 4; jne 0x28650; lea eax, [edi + 0xb]; pop edi; ret; 
0x080718b9: test dh, 4; jne 0x29c5d; add eax, 0xb; pop edi; ret; 
0x08071b7e: test dh, al; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x08091c15: test dh, dl; fdiv st(7), st(0); dec dword ptr [edi]; mov dh, 0x56; or al, 0xf6; ret 0xf08; 
0x080703d4: test dl, 0x40; jne 0x28650; lea eax, [edi + 7]; pop edi; ret; 
0x08071892: test dl, 0x40; jne 0x29c49; add eax, 7; pop edi; ret; 
0x0807041a: test dl, 4; jne 0x28650; lea eax, [edi + 3]; pop edi; ret; 
0x0807186c: test dl, 4; jne 0x29c35; add eax, 3; pop edi; ret; 
0x0804a497: test dl, ah; add al, byte ptr [eax]; add byte ptr [ebx - 0x38f3dbbc], cl; ret; 
0x0808292a: test dl, bl; add byte ptr [eax], al; add byte ptr [ebx - 0x76ebdb8c], cl; ret 0x542b; 
0x08098a45: test dl, dl; je 0x50a60; mov cl, dl; and cl, 0xf; je 0x50a70; ret; 
0x0804fe28: test dl, dl; jne 0x7e09; ret; 
0x0807ec08: test dl, dl; movzx eax, dl; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x0804a853: test dword ptr [0x8b000001], ecx; je 0x287f; or al, 0xc7; ret 0x6f84; 
0x080603b3: test dword ptr [eax + 0x39000001], edi; ret 0x870f; 
0x080a2c5f: test dword ptr [eax + 0x75fffffd], ebp; ret 0x9f8b; 
0x080905d0: test dword ptr [eax + 0xfffff7], ecx; add byte ptr [eax], al; add byte ptr [ebp - 0x8777b], cl; call dword ptr [eax - 0x73]; 
0x080acdef: test dword ptr [eax + 0xfffffb], eax; add byte ptr [eax], al; add byte ptr [ebp - 0x44b7b], cl; call dword ptr [ecx + 0x6a]; 
0x0806c331: test dword ptr [eax + 2], edx; add byte ptr [eax], al; pop ebx; ret; 
0x0806bc31: test dword ptr [eax + 9], edx; add byte ptr [eax], al; pop ebx; ret; 
0x080704ff: test dword ptr [eax + eax + 0x40a80000], edi; jne 0x285d0; lea eax, [edi + 7]; pop edi; ret; 
0x0806a107: test dword ptr [eax + eax - 0x67d0000], esp; add byte ptr [edi], cl; test byte ptr [ebx - 0x7d000000], cl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x0807123b: test dword ptr [eax - 0x58000000], esp; inc eax; jne 0x292f0; lea eax, [edx + 7]; ret; 
0x080b01bd: test dword ptr [eax - 0x6b], ebx; stc; dec dword ptr [ebx + 0x8c48300]; pop ebx; ret; 
0x08071243: test dword ptr [eax - 0x73000000], ebp; inc edx; pop es; ret; 
0x08097ec3: test dword ptr [eax - 0x73000000], ecx; inc edi; hlt; pop edi; ret; 
0x0808abf0: test dword ptr [eax - 0x74000003], ebp; inc ebp; or byte ptr [edi], 0xb6; push eax; or al, 0xf6; ret 0x7540; 
0x080a2bea: test dword ptr [eax - 0x74000003], esp; adc dword ptr [ecx - 0x2537b], ecx; dec dword ptr [ecx + 0x1a6c87]; add byte ptr [ebx + 0x1a6887], cl; add byte ptr [ecx], bh; ret 0x273; 
0x08054652: test dword ptr [eax - 0x74000005], edx; inc ebp; adc byte ptr [ecx - 0x4737b], cl; jmp dword ptr [ebp - 0x5f]; 
0x080551ed: test dword ptr [eax - 0x76000005], eax; jecxz 0xd178; rcr byte ptr [ebx], 0x89; shl dword ptr [0xfffff000], 0x29; ret; 
0x08055330: test dword ptr [eax - 0x76000005], eax; jecxz 0xd2bb; rcr byte ptr [ebx], 0x89; shl dword ptr [0xfffff000], 0x29; ret; 
0x08056852: test dword ptr [eax - 0x76000005], eax; jecxz 0xe7dd; rcr byte ptr [ebx], 0x89; shl dword ptr [0xfffff000], 0x29; ret; 
0x0805486b: test dword ptr [eax - 0x76000005], eax; ret; 
0x080ae419: test dword ptr [eax - 0x7c00064e], ebp; les ecx, ptr [eax]; xor eax, eax; pop ebx; ret; 
0x08063824: test dword ptr [eax - 0x7d000000], eax; ret 0x8b08; 
0x0808c689: test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx], ch; ret; 
0x080542e2: test dword ptr [eax], edi; idiv edi; inc dword ptr [ebx - 0x7276f714]; idiv edi; call dword ptr [eax + 0x53]; 
0x0806c3dc: test dword ptr [ebp + 0x5b000001], esp; ret; 
0x0806c1fc: test dword ptr [ebp + 0x5b000003], eax; ret; 
0x0806bccc: test dword ptr [ebp + 0x5b000008], esi; ret; 
0x0806c026: test dword ptr [ebp + 5], eax; add byte ptr [eax], al; pop ebx; ret; 
0x080a2bf2: test dword ptr [ebp + edi*8 - 0x78760001], ebp; insb byte ptr es:[edi], dx; sbb al, byte ptr [eax]; add byte ptr [ebx + 0x1a6887], cl; add byte ptr [ecx], bh; ret 0x273; 
0x080703b6: test dword ptr [ebp - 0x57fffffe], edx; and byte ptr [edi], cl; test ebp, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x08097f16: test dword ptr [ebp - 0x73000000], edx; inc edi; cld; pop edi; ret; 
0x0808b490: test dword ptr [ebp - 0x74ffffe9], edx; test dword ptr [edi + edi*8 - 1], edi; dec dword ptr [ecx - 0x9f7b]; dec dword ptr [ebx - 0x9f7b]; ljmp [ecx]; ret 0xd189; 
0x080a43fe: test dword ptr [ebp - 0x7d000000], esi; ret; 
0x0808dade: test dword ptr [ebp - 0x9ffffff], ebx; ret 0xf50; 
0x08097e9e: test dword ptr [ebp], edi; add byte ptr [eax], al; lea eax, [edi - 0x10]; pop edi; ret; 
0x0804c1db: test dword ptr [ebx + 0x458b10c4], 0x74c0858c; adc eax, edi; ret 0x6ef4; 
0x08074dcc: test dword ptr [ebx + 0x5e000000], ebx; xor eax, eax; pop ebx; ret; 
0x080703d8: test dword ptr [ebx + 2], esi; add byte ptr [eax], al; lea eax, [edi + 7]; pop edi; ret; 
0x0806bdf8: test dword ptr [ebx + 7], esi; add byte ptr [eax], al; pop ebx; ret; 
0x0809c4da: test dword ptr [ebx + eax*4], edx; rol byte ptr [ecx], 0x39; ret 0xf575; 
0x08054cb1: test dword ptr [ebx + edi*8 - 1], ebp; jmp dword ptr [ebp - 0x39]; 
0x08054672: test dword ptr [ebx + edi*8 - 1], ebp; jmp dword ptr [ebp - 0x75]; 
0x080924e9: test dword ptr [ebx + edi*8 - 1], ebx; jmp dword ptr [eax]; 
0x080549f5: test dword ptr [ebx + edi*8 - 1], edx; call dword ptr [eax]; 
0x08055f6d: test dword ptr [ebx + edi*8 - 1], edx; dec dword ptr [edx]; add byte ptr [eax], al; add byte ptr [ecx - 0x4b77b], cl; ljmp [ecx]; ret 0x45e9; 
0x08055576: test dword ptr [ebx + edi*8 - 1], edx; inc dword ptr [ebp + 0x65850fc0]; adc byte ptr [eax], al; add byte ptr [eax - 0x47f43], al; call dword ptr [ebx + 0xf]; 
0x080928fa: test dword ptr [ebx + edi*8 - 1], esi; inc edi; test dword ptr [ebx + edi*8 - 1], ebx; jmp dword ptr [eax]; 
0x08094259: test dword ptr [ebx + edi*8 - 1], esp; jmp dword ptr [esi - 0x70]; 
0x080718bd: test dword ptr [ebx - 0x7cfffffd], ebx; ror byte ptr [ebx], 0x5f; ret; 
0x0807cc0a: test dword ptr [ebx - 0x7f74fffa], 0x1fa8; ret; 
0x0807185e: test dword ptr [ebx - 0xa000000], ecx; ret 0xf02; 
0x0806c1fd: test dword ptr [ebx], eax; add byte ptr [eax], al; pop ebx; ret; 
0x0807a578: test dword ptr [ebx], edi; or byte ptr [eax], al; add bh, al; ret 0x6f28; 
0x0809074d: test dword ptr [ebx], esp; idiv edi; jmp dword ptr [eax]; 
0x0806bf00: test dword ptr [ecx + 0x5b000006], eax; ret; 
0x080ab67a: test dword ptr [ecx - 0x75000000], esp; inc esi; add al, 0x85; sal byte ptr [edx + edi*4 - 0x75], 0x55; add byte ptr [ecx], al; ret 0xd139; 
0x0807197a: test dword ptr [ecx - 0xa000000], esi; ret 0xf04; 
0x0806be75: test dword ptr [edi + eax], ecx; add byte ptr [eax], al; pop ebx; ret; 
0x0808bbec: test dword ptr [edi + edi*8 - 1], eax; dec dword ptr [edi]; scasd eax, dword ptr es:[edi]; ret; 
0x08076a54: test dword ptr [edi + edi*8 - 1], ebp; dec dword ptr [ebp - 0x2e4787d]; call dword ptr [eax - 0x18]; 
0x0809b126: test dword ptr [edi + edi*8 - 1], ebp; jmp dword ptr [ecx]; 
0x08074898: test dword ptr [edi + edi*8 - 1], ecx; jmp dword ptr [esi + 0xf]; 
0x0808cdc4: test dword ptr [edi + edi*8 - 1], edi; call dword ptr [eax + 0x50]; 
0x0808b496: test dword ptr [edi + edi*8 - 1], edi; dec dword ptr [ecx - 0x9f7b]; dec dword ptr [ebx - 0x9f7b]; ljmp [ecx]; ret 0xd189; 
0x0808cc31: test dword ptr [edi + edi*8 - 1], edi; inc dword ptr [ecx]; ret; 
0x0808c3b6: test dword ptr [edi + edi*8 - 1], edx; dec dword ptr [ecx - 0x7a0fd628]; test byte ptr [edi], 0x49; ret; 
0x080a141b: test dword ptr [edi + edi*8 - 1], esi; call dword ptr [eax - 1]; 
0x08076b71: test dword ptr [edi + edi*8 - 1], esi; call dword ptr [eax]; 
0x0808bbe6: test dword ptr [edi + edi*8 - 1], esi; dec dword ptr [ebx - 0xbb7b]; dec dword ptr [edi]; scasd eax, dword ptr es:[edi]; ret; 
0x0807ca93: test dword ptr [edi + edi*8 - 1], esi; inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x0809f8d0: test dword ptr [edi + edi*8 - 1], esi; inc edi; ret; 
0x080877ef: test dword ptr [edi + edi*8 - 1], esi; jmp dword ptr [ebp - 0x75]; 
0x0809122e: test dword ptr [edi + esi*8 - 1], eax; call dword ptr [ecx - 0x75]; 
0x0808f5a9: test dword ptr [edi + esi*8 - 1], eax; dec dword ptr [ebx - 0x7a76dbbb]; dec esp; idiv edi; jmp dword ptr [ebp - 0x75]; 
0x0808f631: test dword ptr [edi + esi*8 - 1], ebp; call dword ptr [ebx]; 
0x0808f5b2: test dword ptr [edi + esi*8 - 1], ecx; jmp dword ptr [ebp - 0x75]; 
0x08051ae3: test dword ptr [edi + esi*8 - 1], edi; call dword ptr [ebx]; 
0x080539f4: test dword ptr [edi + esi*8 - 1], edi; dec dword ptr [ebx - 0x4a0067fc]; insb byte ptr es:[edi], dx; idiv edi; call dword ptr [edx - 1]; 
0x0808f627: test dword ptr [edi + esi*8 - 1], esi; inc dword ptr [eax]; add byte ptr [eax], al; add bh, al; test dword ptr [edi + esi*8 - 1], ebp; call dword ptr [ebx]; 
0x0805293c: test dword ptr [edi + esi*8 - 1], esi; ljmp [ecx]; rcl byte ptr [eax + 0x52], 1; push dword ptr [ebp - 0x890]; call dword ptr [ebx + 0x1c]; 
0x0805304e: test dword ptr [edi + esi*8 - 1], esp; call dword ptr [eax]; 
0x0807a004: test dword ptr [edi - 0x16000002], edx; retf 0xfffe; jmp dword ptr [esi - 0x70]; 
0x0807a10c: test dword ptr [edi - 0x16000003], ecx; ret 0xfffd; 
0x08098c1c: test dword ptr [edi - 0x48000000], ecx; or dword ptr [ecx], eax; add byte ptr [eax], al; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x080ab0cc: test dword ptr [edi - 0x72fffffe], ebp; dec esp; and al, 0x40; mov eax, 0x180; mov ebx, 0x3005; call dword ptr gs:[0x10]; 
0x08068c3c: test dword ptr [edi - 0x7cffffed], ebp; stc; add byte ptr [edi], cl; test byte ptr [eax - 0x7cffffed], dh; ret 0x8308; 
0x0808baa4: test dword ptr [edi - 0x9fffffd], esp; ret 0xf50; 
0x080719a4: test dword ptr [edi - 0xa000000], esp; ret 0xf20; 
0x0806b494: test dword ptr [edi], 0x29f756b6; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x0807ae08: test dword ptr [edi], 0xfff77d84; inc dword ptr [ebx - 0x7c72f714]; and al, 0x2a; std; call dword ptr [edx + 0x50]; 
0x0809bdcf: test dword ptr [edi], 0xfffb7c84; inc dword ptr [ebx - 0x7c72f714]; and al, 0x2a; std; call dword ptr [edx + 0x50]; 
0x080afdcf: test dword ptr [edi], ebx; cdq; stc; dec dword ptr [ecx - 0x8d3dbbc]; ret 0; 
0x080a1445: test dword ptr [edx + esi*8 - 1], ebx; jmp dword ptr [esi - 0x7b]; 
0x0807bf9f: test dword ptr [edx + esi*8 - 1], ecx; dec dword ptr [ebx - 0x7c87dbbc]; pushal; mov edi, 0xfff23fe9; call dword ptr [eax - 0x73]; 
0x0807fb83: test dword ptr [edx - 0x73000000], edx; and dword ptr [eax + 0x38], 0xfffffffd; call dword ptr [eax - 0x73]; 
0x080a0ac1: test dword ptr [edx - 0x7c000011], ecx; retf 0xe904; sub bh, 0xff; jmp dword ptr [esi - 0x70]; 
0x0807188d: test dword ptr [edx - 0x9fffffd], esi; ret 0xf40; 
0x08074cc1: test dword ptr [esi + 0x5e000001], esp; xor eax, eax; pop ebx; ret; 
0x08087df7: test dword ptr [esi + edi*8 - 1], eax; dec dword ptr [ecx - 0x1b773]; call dword ptr [eax - 1]; 
0x080885db: test dword ptr [esi + edi*8 - 1], ebx; dec dword ptr [ecx - 0x1bb73]; call dword ptr [eax - 1]; 
0x08088742: test dword ptr [esi + edi*8 - 1], edx; call dword ptr [esi - 0x18]; 
0x080703a5: test dword ptr [esi - 0x57fffffe], esp; adc byte ptr [edi], cl; test esi, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x08097eed: test dword ptr [esi - 0x73000000], ecx; inc edi; clc; pop edi; ret; 
0x080718e6: test dword ptr [esi - 0x7cfffffd], eax; ror byte ptr [edi], 0x5f; ret; 
0x08071896: test dword ptr [esi - 0x7cfffffd], ebp; rol byte ptr [edi], 0x5f; ret; 
0x08071884: test dword ptr [esi - 0x9fffffd], esi; ret 0xf20; 
0x080719ad: test dword ptr [esi - 0xa000000], ebp; ret 0xf40; 
0x0804af33: test dword ptr [esi], eax; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0807040d: test dword ptr [esi], edi; add al, byte ptr [eax]; add byte ptr [eax + 0x76850f04], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf04; 
0x080a54a5: test dword ptr [esi], edi; add byte ptr [eax], al; sub esp, 0xc; push dword ptr [esp + 0x28]; mov edx, dword ptr [esp + 0x28]; call edx; 
0x0806ba38: test eax, 0x1c030004; mov edi, dword ptr [esi]; jmp ebx; 
0x08059b10: test eax, 0x6a000001; add dword ptr [edx], ebp; push 0; push dword ptr [esp + 0x24]; call dword ptr [ebx + 0x40]; 
0x080b2cb3: test eax, 0x83fffb2d; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x08058350: test eax, 0xf0b8; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0809e581: test eax, 0xffffe3d; inc esp; ret 0x3980; 
0x080791bb: test eax, eax; cmove eax, edx; ret; 
0x080b02c5: test eax, eax; cmovne eax, dword ptr [esp + 0x1c]; add esp, 0x28; pop ebx; ret; 
0x08049019: test eax, eax; je 0x101f; call eax; 
0x08049019: test eax, eax; je 0x101f; call eax; add esp, 8; pop ebx; ret; 
0x0805afc9: test eax, eax; je 0x12fd2; add esp, 8; pop ebx; ret; 
0x0805ed6b: test eax, eax; je 0x16d83; mov dword ptr [eax], 0; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], 0; ret; 
0x080713e6: test eax, eax; je 0x29400; bsf eax, eax; add eax, edx; add eax, ecx; ret; 
0x08077dab: test eax, eax; je 0x2fdb4; add esp, 8; pop ebx; ret; 
0x08078a6c: test eax, eax; je 0x30a74; test edx, edx; jne 0x30a78; ret; 
0x08078a90: test eax, eax; je 0x30a98; test edx, edx; jne 0x30aa0; ret; 
0x0807af1c: test eax, eax; je 0x32f30; add esp, 4; pop ebx; pop esi; ret; 
0x08087b7b: test eax, eax; je 0x3fb88; sub esp, 0xc; push esi; call eax; 
0x08098bac: test eax, eax; je 0x50c70; sub esp, 8; push edi; push ebx; call eax; 
0x080b078e: test eax, eax; je 0x6879d; sub esp, 8; push edx; push 1; call eax; 
0x080b2eec: test eax, eax; je 0x6aefa; mov dword ptr [esp + 8], edx; call eax; 
0x0805ecca: test eax, eax; jne 0x16cc0; ret; 
0x0805fae8: test eax, eax; jne 0x17ae0; ret; 
0x0805fef2: test eax, eax; jne 0x17f00; sub dword ptr [edx + 0x1818], 1; pop ebx; pop esi; ret; 
0x08070a70: test eax, eax; jne 0x28b40; xor eax, eax; pop edi; ret; 
0x08070fa2: test eax, eax; jne 0x29000; xor eax, eax; pop edi; ret; 
0x08070f68: test eax, eax; jne 0x29020; xor eax, eax; pop edi; ret; 
0x0807152f: test eax, eax; jne 0x29570; pmovmskb eax, xmm1; bsf eax, eax; lea eax, [edx + eax + 0x30]; ret; 
0x08077059: test eax, eax; jne 0x2f090; mov ecx, dword ptr [esp + 0x20]; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x0807710b: test eax, eax; jne 0x2f130; mov eax, 3; call dword ptr gs:[0x10]; 
0x080771ab: test eax, eax; jne 0x2f1d0; mov eax, 4; call dword ptr gs:[0x10]; 
0x080780cd: test eax, eax; jne 0x300fc; sub esp, 0xc; push dword ptr [ebx]; call esi; 
0x0808f147: test eax, eax; jne 0x47158; sub dword ptr [ebx], 1; pop ebx; pop esi; ret; 
0x0809f49d: test eax, eax; jne 0x574a7; add esp, 4; pop ebx; pop esi; ret; 
0x080a09f4: test eax, eax; jne 0x57abe; mov eax, dword ptr [ebp - 0x60]; call eax; 
0x080a0a91: test eax, eax; jne 0x58610; mov dword ptr [ebp - 0x60], edx; mov eax, dword ptr [ebp - 0x54]; call eax; 
0x080b1eba: test eax, eax; jne 0x69ec8; add esp, 4; pop ebx; pop esi; ret; 
0x08060ab6: test eax, eax; mov eax, 8; cmovne eax, edx; mov dword ptr [ecx + 0x1870], eax; ret; 
0x080aba61: test eax, eax; setne al; add esp, 0x1c; movzx eax, al; neg eax; ret; 
0x080778a2: test eax, ebp; pop ds; std; call dword ptr [eax - 0x18]; 
0x080703be: test ebp, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x0805cf4e: test ebx, ebx; jne 0x14f60; add esp, 8; pop ebx; ret; 
0x0809fe82: test ebx, ebx; jne 0x57e22; call eax; 
0x0809ffbc: test ebx, ebx; jne 0x57e8c; call eax; 
0x080a08db: test ebx, ebx; jne 0x588ab; call eax; 
0x080749eb: test ecx, 0xff0000; je 0x2c9f4; inc eax; pop edi; ret; 
0x080773bb: test ecx, eax; pop ds; std; call dword ptr [eax + 0x6a]; 
0x080713a1: test ecx, ecx; je 0x293b0; bsf ecx, ecx; add eax, ecx; ret; 
0x0805a9cd: test ecx, ecx; jne 0x129e0; mov eax, dword ptr [edx + 0x28]; cmp dword ptr [edx + 0x24], eax; cmovne eax, ecx; ret; 
0x08079357: test ecx, ecx; jne 0x31360; mov eax, edx; pop ebx; pop esi; ret; 
0x080a3432: test ecx, ecx; jne 0x5b410; mov eax, edx; pop ebx; ret; 
0x0808064a: test ecx, esp; add byte ptr [eax], al; add byte ptr [ebx - 0x72cfdba4], cl; and eax, 0x37; std; call dword ptr [eax - 0x73]; 
0x080acdb2: test edi, edi; dec dword ptr [ebp - 0x164677d]; call dword ptr [eax + 0x68]; 
0x080ace0a: test edi, edi; jmp dword ptr [esi - 0x70]; 
0x080b2a8d: test edi, edi; jne 0x6aa60; pop ebx; pop esi; pop edi; ret; 
0x080af2d8: test edi, edi; mov dword ptr [0x7c80fff9], eax; add ebp, dword ptr [eax + eax + 0x75]; mov esp, 0x950ff685; ret 0xc985; 
0x08053201: test edi, esi; or byte ptr [eax], al; add byte ptr [eax - 0x89743], al; call dword ptr [ebx + 0xf]; 
0x080ac88d: test edx, ebp; add eax, dword ptr [eax]; add byte ptr [ebx - 0x7a72fb14], al; sar bl, 0xff; dec dword ptr [ebp - 0x44b4b]; call dword ptr [eax - 1]; 
0x08071461: test edx, ebx; add byte ptr [eax], al; add bh, dh; ret 0x3f; 
0x08076081: test edx, edx; cmove eax, esi; pop esi; pop edi; ret; 
0x080a7e66: test edx, edx; cmovs edx, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x08086a1f: test edx, edx; je 0x3ea25; call edx; 
0x08086bec: test edx, edx; je 0x3ebf2; call edx; 
0x080968f2: test edx, edx; je 0x4e900; add esp, 8; pop ebx; ret; 
0x080b31c3: test edx, edx; je 0x6b1d4; sub esp, 0xc; push eax; call edx; 
0x0805e27a: test edx, edx; jne 0x16270; ret; 
0x0807194e: test edx, edx; jne 0x29960; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x08078a70: test edx, edx; jne 0x30a78; ret; 
0x08078a94: test edx, edx; jne 0x30aa0; ret; 
0x0809640a: test edx, edx; jne 0x4e400; ret; 
0x08098902: test edx, edx; jne 0x508f8; ret; 
0x080a0735: test edx, edx; jne 0x5873b; call eax; 
0x080a1501: test edx, edx; jne 0x59507; call eax; 
0x080b2129: test edx, edx; jne 0x6a138; add esp, 8; pop ebx; ret; 
0x080a0eaf: test edx, esi; idiv edi; jmp dword ptr [esi - 0x7b]; 
0x0805a6b4: test esi, eax; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b20c4], al; pop edi; ret; 
0x08070ecd: test esi, ebp; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret 0xc085; 
0x080703ad: test esi, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x080aa5e6: test esi, esi; je 0x6210b; mov eax, dword ptr [ebp - 0x9c]; call dword ptr [eax]; 
0x080b2bdf: test esi, esi; jne 0x6abc8; add esp, 4; pop ebx; pop esi; ret; 
0x080b2d0d: test esi, esi; jne 0x6acf4; add esp, 4; pop ebx; pop esi; ret; 
0x08071867: test esp, eax; add eax, dword ptr [eax]; add dh, dh; ret 0xf04; 
0x080703cf: test esp, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf40; 
0x08082b7b: test esp, edi; dec dword ptr [ebx - 0x72cfdba4]; and dword ptr [eax + 0x37], 0xfffffffd; call dword ptr [eax + 0x68]; 
0x08058500: ud0; jmp dword ptr [esi - 0x70]; 
0x080908e7: unpcklps xmm0, xmmword ptr [eax]; add byte ptr [ebx - 0x8c37b], cl; inc esi; test dword ptr [ebx], esp; idiv edi; jmp dword ptr [eax]; 
0x0809f509: wait; cli; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x08089531: wait; cmp al, 0x1a; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0808edc1: wait; dec eax; sbb al, byte ptr [eax]; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0808f09d: wait; dec esp; sbb al, byte ptr [eax]; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0808d0d5: wait; inc eax; sbb al, byte ptr [eax]; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0804ea0d: wait; les edx, ptr [0x81b90000]; add byte ptr [eax], al; add byte ptr [edx + 1], bh; call dword ptr gs:[0x10]; 
0x0804d083: wait; movsb byte ptr es:[edi], byte ptr [esi]; adc eax, 0x81b90000; add byte ptr [eax], al; add byte ptr [edx + 1], bh; call dword ptr gs:[0x10]; 
0x0809d3c9: xchg ah, bh; dec dword ptr [ebp - 0x1c77b7d]; call dword ptr [eax + 0x6a]; 
0x0809d3c9: xchg ah, bh; dec dword ptr [ebp - 0x1c77b7d]; call dword ptr [eax + 0x6a]; add byte ptr [esi + 0x6a], dl; or al, 0xe8; ret; 
0x08099cff: xchg al, al; add byte ptr [eax], al; add dh, dh; ret 0xf03; 
0x080acd1b: xchg bh, bh; dec dword ptr [ebp - 0x164677d]; call dword ptr [eax + 0x68]; 
0x080acd05: xchg bh, bh; dec dword ptr [ebp - 0x166177d]; call dword ptr [eax - 0x75]; 
0x080aea38: xchg byte ptr [eax + 0x1000000], dh; ret 0x9689; 
0x080a43f6: xchg byte ptr [eax + 0x38000000], dh; ror byte ptr [edi], 1; test dword ptr [ebp - 0x7d000000], esi; ret; 
0x0809f4a8: xchg byte ptr [eax + eax*2 - 2], dl; call dword ptr [eax + 0x6a]; 
0x08064445: xchg byte ptr [eax - 0x720002f2], ch; xchg eax, esi; sbb esi, edi; cld; call dword ptr [eax - 0x73]; 
0x080aa17c: xchg byte ptr [eax - 0x76ffffff], bl; ret 0xe283; 
0x08095d81: xchg byte ptr [eax], bh; sti; jmp dword ptr [esi - 0x70]; 
0x08057273: xchg byte ptr [ebp - 0x3067779], cl; call dword ptr [eax + 0x68]; 
0x0808cad5: xchg byte ptr [ebx - 0x3f7c47ab], cl; add dword ptr [ecx], ebp; fidivr dword ptr [ecx]; ret 0xee7f; 
0x080555f8: xchg byte ptr [ebx - 0x7cffffe7], dl; in al, dx; add al, 0x89; xchg eax, ebp; cmp bl, 0xff; call dword ptr [edx + 0x51]; 
0x080718e7: xchg byte ptr [ebx], al; add byte ptr [eax], al; add eax, 0xf; pop edi; ret; 
0x080531a8: xchg byte ptr [ebx], dh; idiv edi; dec dword ptr [ebp - 0x3068b79]; call dword ptr [eax + 0x68]; 
0x08059b0f: xchg byte ptr [ecx + 0x6a000001], ch; add dword ptr [edx], ebp; push 0; push dword ptr [esp + 0x24]; call dword ptr [ebx + 0x40]; 
0x08050907: xchg byte ptr [ecx*4 + 0x26b4], al; add byte ptr [eax], al; call dword ptr [esi]; 
0x080a80f5: xchg byte ptr [ecx], ch; cli; inc dword ptr [0x3cf07]; mov eax, 0x80e6f60; mov eax, dword ptr [eax]; ret; 
0x08057ffc: xchg byte ptr [edi + 1], bl; add byte ptr [eax], al; sub esp, 8; push 0; push edi; call dword ptr [ebx + 8]; 
0x080a3385: xchg byte ptr [edi + edi*8 - 1], ch; dec dword ptr [ebp + 0xb6]; add byte ptr [ebx - 0x7cfbdbac], cl; ret 0x3901; 
0x0809e57a: xchg byte ptr [edi - 0x720001c3], bl; xchg eax, esi; test eax, 0xffffe3d; inc esp; ret 0x3980; 
0x0805c724: xchg byte ptr [edi], cl; add dword ptr [eax], eax; add byte ptr [ebx + 0x555204ec], al; push esi; call dword ptr [ebx + 0x38]; 
0x08080007: xchg byte ptr [edx - 0x7fffffff], bh; jns 0x38016; or byte ptr [edi], 0x87; ret; 
0x080a03b7: xchg byte ptr [edx], bl; add eax, dword ptr [eax]; add byte ptr [ebx + 0x4d8b29fb], al; or byte ptr [edi], cl; xchg eax, esp; ret 0x940f; 
0x08064eb9: xchg byte ptr [esi + ecx - 3], dl; dec dword ptr [ebp - 0x301e66a]; call dword ptr [eax - 0x73]; 
0x0805fdf5: xchg byte ptr [esi + edi*8 + 0x520705ff], ch; or byte ptr [eax], al; mov eax, 0x80e5098; mov eax, dword ptr [eax]; ret; 
0x08057409: xchg dl, bh; add byte ptr [eax], al; add byte ptr [ebx - 0xacfb14], al; je 0xf439; cmp al, 0x56; call dword ptr [edx + 0x1c]; 
0x080706b3: xchg dword ptr [eax + 0x1000000], ebp; clc; add eax, ecx; pop edi; ret; 
0x080aeb4c: xchg dword ptr [eax + 0x1000000], esi; ret 0x9789; 
0x08062f72: xchg dword ptr [eax - 0x720002f2], edx; xchg eax, edi; sbb esi, edi; cld; call dword ptr [eax - 0x73]; 
0x08076313: xchg dword ptr [eax - 0x760006f0], edx; inc ecx; adc bh, al; ret 0; 
0x080a2333: xchg dword ptr [eax - 2], ecx; call dword ptr [eax - 0x18]; 
0x08056c67: xchg dword ptr [eax - 7], ecx; cld; call dword ptr [eax - 0x18]; 
0x080502fb: xchg dword ptr [eax], eax; add al, byte ptr [eax]; add bh, al; ret 0xffe0; 
0x08071a55: xchg dword ptr [eax], eax; add byte ptr [eax], al; lea eax, [eax + 4]; pop edi; ret; 
0x08070c45: xchg dword ptr [eax], eax; add byte ptr [eax], al; lea eax, [edi + 4]; pop edi; ret; 
0x0805a797: xchg dword ptr [eax], eax; std; cld; call dword ptr [eax - 0x18]; 
0x080ada09: xchg dword ptr [eax], esp; mov ah, bh; call dword ptr [eax - 0x73]; 
0x080a63ba: xchg dword ptr [ebx + eax*4], eax; ret 0x8901; 
0x080b23d1: xchg dword ptr [ebx + esi*2 + 0x60a8fff9], ecx; jne 0x1762; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0809a418: xchg dword ptr [ebx - 0x7cfffffe], ebx; rcr byte ptr [ebx], 0x89; out 0x89, eax; ret 0x25; 
0x08076a5b: xchg dword ptr [ebx], ebx; std; call dword ptr [eax - 0x18]; 
0x0804981d: xchg dword ptr [ecx + ecx], eax; add byte ptr [ecx - 0x763fcf10], cl; ret 0x8789; 
0x080497eb: xchg dword ptr [ecx + ecx], edx; add byte ptr [ecx - 0x763fcf30], cl; ret 0x8789; 
0x080531ae: xchg dword ptr [ecx + edi*8 - 4], esi; call dword ptr [eax + 0x68]; 
0x0805453b: xchg dword ptr [ecx + edi*8], esp; cld; call dword ptr [eax - 0x18]; 
0x0809cae9: xchg dword ptr [ecx - 0x76ffffff], ebx; ret 0xe8c0; 
0x080953d4: xchg dword ptr [edi - 0x74ffffff], eax; mov esp, 0xfe337093; inc dword ptr [ecx]; fistp qword ptr [esi]; jmp edi; 
0x080a2bf8: xchg dword ptr [edx + ebx], ebp; add byte ptr [ebx + 0x1a6887], cl; add byte ptr [ecx], bh; ret 0x273; 
0x08062eb9: xchg dword ptr [esi + ecx - 0x68720003], eax; push -2; cld; call dword ptr [eax - 0x73]; 
0x0806498b: xchg dword ptr [esi + ecx - 0x68720003], esi; sbb esi, edi; cld; call dword ptr [eax - 0x73]; 
0x080703b7: xchg eax, ebp; add al, byte ptr [eax]; add byte ptr [eax - 0x27af0e0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x08055601: xchg eax, ebp; cmp bl, 0xff; call dword ptr [edx + 0x51]; 
0x08054c80: xchg eax, ebp; cmp bl, 0xff; call dword ptr [edx - 1]; 
0x080912ca: xchg eax, ebp; idiv edi; call dword ptr [ebx - 0x77]; 
0x08090672: xchg eax, ebp; inc eax; idiv edi; call dword ptr [edx + 0x51]; 
0x08054577: xchg eax, ebp; inc esp; idiv edi; call dword ptr [edx - 0x18]; 
0x0805437d: xchg eax, ebp; insb byte ptr es:[edi], dx; idiv edi; call dword ptr [eax + 0x51]; 
0x080535bd: xchg eax, ebp; insb byte ptr es:[edi], dx; idiv edi; call dword ptr [edx + 0x6a]; 
0x0809b263: xchg eax, ebp; push 0x1ffffff; ret 0xf029; 
0x0808fd06: xchg eax, ebp; push 0x8dfffff7; je 0x47d34; add byte ptr [eax - 0x3f7cef77], dl; add al, 0x83; ret 0x3910; 
0x08077445: xchg eax, ebp; ret 0x4c39; 
0x08095837: xchg eax, ebp; ret 0x5689; 
0x0807a294: xchg eax, ebp; ret 0xc0c7; 
0x080af2e7: xchg eax, ebp; ret 0xc985; 
0x080ab00f: xchg eax, ebp; ret 0xd689; 
0x080af2ee: xchg eax, ebp; ret 0xd789; 
0x080a1a67: xchg eax, ebp; ret 0xe0d3; 
0x0808b7dc: xchg eax, ebp; ret 0xf883; 
0x08062c7e: xchg eax, ebp; ret; 
0x080aba64: xchg eax, ebp; rol byte ptr [ebx - 0x49f0e33c], 0xc0; neg eax; ret; 
0x0805cf72: xchg eax, ebp; rol byte ptr [ebx - 0x49f0f73c], 0xc0; pop ebx; neg eax; ret; 
0x080b01bf: xchg eax, ebp; stc; dec dword ptr [ebx + 0x8c48300]; pop ebx; ret; 
0x0804afe3: xchg eax, ebx; add byte ptr [eax], al; add byte ptr [ebp - 0x16d397d], cl; call dword ptr [esi - 1]; 
0x08093a54: xchg eax, ebx; add byte ptr [eax], al; add byte ptr [ebx - 0x48f43], al; call dword ptr [eax]; 
0x0805afd6: xchg eax, ebx; and al, 0xfd; cld; call dword ptr [edx - 0x18]; 
0x0808733a: xchg eax, ebx; fcomp dword ptr [edx]; std; call dword ptr [edx + 0x50]; 
0x0808638b: xchg eax, ebx; inc ebx; cmp ebp, edi; call dword ptr [edx + 0x50]; 
0x0809beca: xchg eax, ebx; lodsb al, byte ptr [esi]; cmp dh, bh; dec dword ptr [edi]; inc esp; ret 0x95e9; 
0x0804b81b: xchg eax, ebx; pop ds; cld; call dword ptr [edx + 0x50]; 
0x08098d6f: xchg eax, ebx; ret 4; 
0x080a7b19: xchg eax, ebx; sbb bh, ch; jmp dword ptr [esi - 0x70]; 
0x080555f9: xchg eax, ebx; sbb dword ptr [eax], eax; add byte ptr [ebx - 0x6a76fb14], al; cmp bl, 0xff; call dword ptr [edx + 0x51]; 
0x08088bfd: xchg eax, ebx; test al, 0x3a; cli; dec dword ptr [edi]; inc esp; ret 0x4489; 
0x08079673: xchg eax, ecx; adc byte ptr [esi - 7], al; dec dword ptr [ecx + 0x5e5b0850]; ret; 
0x08081ef4: xchg eax, ecx; cld; dec dword ptr [ebx - 0x72cfdba4]; or esp, 0x35; std; call dword ptr [eax - 0x73]; 
0x080a01e0: xchg eax, ecx; cwde; add dword ptr [eax], eax; add dh, dh; ret 0x7403; 
0x080a8563: xchg eax, ecx; cwde; add dword ptr [eax], eax; add dh, dh; ret 0x7510; 
0x08098feb: xchg eax, ecx; ljmp 0x8310:0xc483fffd; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x08058547: xchg eax, ecx; mov byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x08058ae8: xchg eax, ecx; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0808a3ee: xchg eax, ecx; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x080a7f21: xchg eax, ecx; push 0x6600001b; add dword ptr [edx + eax*2], 1; ret; 
0x080a0f15: xchg eax, edi; adc eax, 0xc4830000; and byte ptr [ebx + 0x4503a045], cl; movsb byte ptr es:[edi], byte ptr [esi]; call eax; 
0x080a7ccd: xchg eax, edi; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x080944de: xchg eax, edi; add dword ptr [eax], eax; add byte ptr [ebx - 0x4637b], cl; inc dword ptr [eax - 0x41273]; call dword ptr [eax]; 
0x0809b573: xchg eax, edi; in al, dx; add dword ptr [eax], eax; add byte ptr [ecx], cl; ret 0xbc75; 
0x08077f75: xchg eax, edi; inc ebx; add byte ptr [eax], al; ret; 
0x08083405: xchg eax, edi; jl 0x3b404; dec dword ptr [ebx - 0x72d3dba4]; add dword ptr [eax + 0x37], -3; call dword ptr [eax + 0x68]; 
0x0808886a: xchg eax, edi; mov dword ptr [0xf4c0c700], 0x65ffffff; add eax, dword ptr [0]; ret; 
0x08074fd2: xchg eax, edi; mov esi, edx; ret; 
0x080a0f57: xchg eax, edi; or dword ptr [edi - 2], ecx; dec dword ptr [edi]; inc esp; ret 0x758b; 
0x08062ebf: xchg eax, edi; push -2; cld; call dword ptr [eax - 0x73]; 
0x080a736d: xchg eax, edi; ret 0xda80; 
0x08083098: xchg eax, edi; ret; 
0x0808fd7a: xchg eax, edi; sbb eax, dword ptr [eax]; add dh, dh; ret 0xf40; 
0x08062f78: xchg eax, edi; sbb esi, edi; cld; call dword ptr [eax - 0x73]; 
0x0807bdfa: xchg eax, edi; sub bh, ch; call dword ptr [edx + 0x6a]; 
0x0807fb84: xchg eax, edx; add byte ptr [eax], al; add byte ptr [ebp - 0x2c79f7d], cl; call dword ptr [eax - 0x73]; 
0x080590e3: xchg eax, edx; add byte ptr [eax], al; add byte ptr [ebx - 0x137c3fbb], cl; or byte ptr [edx - 1], ch; push dword ptr [ebx]; call dword ptr [eax + 0xc]; 
0x08081e45: xchg eax, edx; cld; dec dword ptr [ebx - 0x72cfdba4]; or esp, 0x35; std; call dword ptr [eax - 0x73]; 
0x08067e1c: xchg eax, edx; jo 0x1fde2; clc; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x08067272: xchg eax, edx; mov al, byte ptr [0xffff875]; inc ebp; ret 0x66c3; 
0x08067230: xchg eax, edx; nop; cmp edi, eax; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0809726c: xchg eax, edx; nop; xor ebx, edi; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x080671ec: xchg eax, edx; pushal; mov dh, 0xf8; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x08074856: xchg eax, edx; ret; 
0x08067de0: xchg eax, edx; ror ch, 0xf8; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0809967a: xchg eax, edx; sub al, 0xfe; jmp dword ptr [esi - 0x70]; 
0x080514e8: xchg eax, esi; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0807cbe5: xchg eax, esi; fdivp st(4); inc dword ptr [0x68417]; mov eax, dword ptr [eax + 0x1fa0]; ret; 
0x0807e26c: xchg eax, esi; insd dword ptr es:[edi], dx; push es; add byte ptr [ebx - 0x77], dl; ret; 
0x080a96dd: xchg eax, esi; nop; call dword ptr [ebx]; 
0x0805d30d: xchg eax, esi; ret 0x540a; 
0x0807682b: xchg eax, esi; ret 0xc085; 
0x08076877: xchg eax, esi; ret 0xd284; 
0x0806444b: xchg eax, esi; sbb esi, edi; cld; call dword ptr [eax - 0x73]; 
0x0807eaf3: xchg eax, esi; stc; call dword ptr [eax - 0x73]; 
0x0807aee5: xchg eax, esi; sti; cld; inc dword ptr [0x6a117]; lea eax, [eax + 0xa60]; ret; 
0x0809e277: xchg eax, esi; sub ch, bh; call dword ptr [eax + 0x6a]; 
0x0807aea2: xchg eax, esi; sub ch, bh; call dword ptr [esi + 0x56]; 
0x0809e580: xchg eax, esi; test eax, 0xffffe3d; inc esp; ret 0x3980; 
0x08057fe3: xchg eax, esp; add byte ptr [eax], al; add bh, al; ret 0x5f80; 
0x0805b246: xchg eax, esp; add byte ptr [eax], al; add bh, al; ret; 
0x0805853f: xchg eax, esp; add byte ptr [eax], al; add byte ptr [ebx - 0x6e76a7b8], cl; mov byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x08088a31: xchg eax, esp; and al, 0x30; add dword ptr [eax], eax; add byte ptr [eax + 0x10e], bh; call dword ptr gs:[0x10]; 
0x080afab1: xchg eax, esp; and al, 0x90; add byte ptr [eax], al; add bh, dh; ret 0; 
0x08054569: xchg eax, esp; clc; cld; call dword ptr [eax - 0x18]; 
0x080877a9: xchg eax, esp; inc ecx; std; call dword ptr [eax - 0x73]; 
0x08088d18: xchg eax, esp; or bh, bh; jmp dword ptr [esi - 0x70]; 
0x0805d2f5: xchg eax, esp; ret 0x3a3c; 
0x08077554: xchg eax, esp; ret 0x5422; 
0x08053094: xchg eax, esp; ret 0x5652; 
0x0804ce98: xchg eax, esp; ret 0x7c80; 
0x080947f0: xchg eax, esp; ret 0x7f3c; 
0x08074853: xchg eax, esp; ret 0x920f; 
0x080a03c3: xchg eax, esp; ret 0x940f; 
0x080a769f: xchg eax, esp; ret 0x950f; 
0x0804b8c2: xchg eax, esp; ret 0xb60f; 
0x0807a9ce: xchg eax, esp; ret 0xc0c7; 
0x08049a81: xchg eax, esp; ret 0xca21; 
0x0804a760: xchg eax, esp; ret 0xd284; 
0x0804ce83: xchg eax, esp; ret 0xd789; 
0x080b0052: xchg eax, esp; ret 0xe2c1; 
0x0805d2fc: xchg eax, esp; ret 0xea09; 
0x080aafd7: xchg eax, esp; ret 0xf883; 
0x08055ef9: xchg eax, esp; ret 0xff52; 
0x08058070: xchg eax, esp; ret 0xff81; 
0x0804aa30: xchg eax, esp; ret; 
0x080ab2b9: xchg eax, esp; rol dword ptr [ecx], 0xc9; call dword ptr gs:[0x10]; 
0x080a1a64: xchg eax, esp; ror byte ptr [edi], 0x95; ret 0xe0d3; 
0x08076040: xchg eax, esp; sbb bh, ch; call dword ptr [eax - 0x18]; 
0x0808eb1c: xchg eax, esp; shr cl, 0x8c; idiv edi; dec dword ptr [ecx - 0x16e3db8c]; ret; 
0x0809d3c8: xchg eax, esp; xchg ah, bh; dec dword ptr [ebp - 0x1c77b7d]; call dword ptr [eax + 0x6a]; 
0x0805a7b5: xchg edx, ebp; cld; cld; call dword ptr [eax - 0x18]; 
0x08065e03: xchg esp, edi; or eax, 0x978dfffd; sbb esi, edi; cld; call dword ptr [eax - 0x73]; 
0x080667bd: xchg esp, edx; or eax, 0x978dfffd; sbb esi, edi; cld; call dword ptr [eax - 0x73]; 
0x080531c3: xchg esp, esi; clc; cld; call dword ptr [eax - 0x18]; 
0x080531c3: xchg esp, esi; clc; cld; call dword ptr [eax - 0x18]; sar byte ptr [esi - 1], cl; jmp dword ptr [esi - 0x70]; 
0x080a1ee8: xlatb; add byte ptr [eax], al; add byte ptr [ebp + 0xff289c9], al; xchg eax, esp; ret; 
0x0807cac5: xlatb; in eax, 0xfc; dec dword ptr [ebp - 0x2d2677d]; call dword ptr [eax - 0x73]; 
0x0807145c: xlatb; les eax, ptr [ebp - 0x257af040]; add byte ptr [eax], al; add bh, dh; ret 0x3f; 
0x08070932: xlatb; ret 0x498d; 
0x0807082d: xlatb; ret 0xc085; 
0x0806c806: xlatb; ret; 
0x0807150f: xlatb; rol byte ptr [ebp + 0x663b75c0], 0xf; xlatb; ret 0xc085; 
0x08070fa0: xlatb; rol dword ptr [ebp + 0x315a75c0], 0xc0; pop edi; ret; 
0x08070a6e: xlatb; rol dword ptr [ebp - 0x377af040], 0; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x08070f66: xlatb; rol dword ptr [ebp - 0x4f7af040], 0; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x08071949: xlatb; ror dword ptr [ebp - 0x2d7aefc0], 1; jne 0x29960; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x080b332a: xor ah, byte ptr [edi]; sti; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0807cc5d: xor al, 0x24; call edi; 
0x0807cdcd: xor al, 0x24; mov edx, dword ptr [ebp - 0x48]; call edx; 
0x0804aa84: xor al, 0x24; ret; 
0x080a67c7: xor al, 0x29; ret 0x5489; 
0x0808da21: xor al, 0x29; ret; 
0x0807743f: xor al, 0x31; fmul dword ptr [ecx]; ret 0x950f; 
0x0807fdbe: xor al, 0x39; fmul dword ptr [edi]; dec edi; ret; 
0x0808e05a: xor al, 0x39; ret; 
0x08075c06: xor al, 0x50; push dword ptr [ebp + 8]; call esi; 
0x0805b76c: xor al, 0x50; push esi; call dword ptr [edi + 0x48]; 
0x08075e3f: xor al, 0x52; lea eax, [esp + 0x64]; mov dword ptr [esp + 0x38], edx; push eax; push dword ptr [esp + 0x38]; call esi; 
0x080acea6: xor al, 0x57; push esi; call dword ptr [ebp]; 
0x080ace6c: xor al, 0x57; push esi; call eax; 
0x08099975: xor al, 0x5b; pop esi; ret; 
0x08083b6d: xor al, 0x6a; add byte ptr [edx], ch; push 0; push dword ptr [esp + 0x68]; push dword ptr [esp + 0x68]; call edi; 
0x08096733: xor al, 0x83; in al, dx; or al, 0x53; call dword ptr [esi + 0x10]; 
0x08058747: xor al, 0x83; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0805cc93: xor al, 0x83; ret 0x8901; 
0x0804fc60: xor al, 0x83; ret 0xc702; 
0x08049fae: xor al, 0x89; dec esi; cmp byte ptr [ecx + 0x5e8b3c56], cl; or bh, dh; ret; 
0x08085343: xor al, 0x8d; and dword ptr [eax + 0x36], 0xfffffffd; call dword ptr [eax + 0x68]; 
0x08084f88: xor al, 0x8d; and dword ptr [eax + 0x36], 0xfffffffd; call dword ptr [eax - 0x73]; 
0x080852fd: xor al, 0x8d; and dword ptr [eax], 0x36; std; call dword ptr [eax - 0x73]; 
0x08083f84: xor al, 0x8d; and dword ptr [eax], 0x37; std; call dword ptr [eax + 0x68]; 
0x08083bbd: xor al, 0x8d; and dword ptr [eax], 0x37; std; call dword ptr [eax - 0x73]; 
0x08083f3e: xor al, 0x8d; xor dword ptr [eax + 0x35], 0xfffffffd; call dword ptr [eax - 0x73]; 
0x0804fcaa: xor al, 0xc7; inc esp; and al, 0x38; or eax, 0x83000000; ret 0xc702; 
0x080abbbb: xor al, 0xc7; ret 0; 
0x0807ef9a: xor al, 0xfd; call dword ptr [eax - 0x18]; 
0x08083bd4: xor al, 0xfd; call dword ptr [eax - 0x18]; ret; 
0x08088df3: xor al, 1; push esi; call edi; 
0x08087387: xor al, ch; ret; 
0x08090c33: xor bh, 0xff; call dword ptr [eax + 0x56]; 
0x08053185: xor bh, 0xff; call dword ptr [eax - 1]; 
0x0809dcfe: xor bh, al; ret 0; 
0x080888e6: xor byte ptr [0x200], al; mov dword ptr gs:[ecx], eax; pop ebx; ret; 
0x080aeb65: xor byte ptr [eax + 0xf000000], 0xaf; inc esi; add dword ptr [ecx], eax; ret 0x458b; 
0x080b1314: xor byte ptr [eax - 0x77], dl; fsubr st(0); ret; 
0x080aba56: xor byte ptr [eax], 0x6a; cld; call dword ptr [eax - 0x18]; 
0x080ab2ae: xor byte ptr [eax], al; add byte ptr [eax + eax*8 + 0x180b8], al; add byte ptr [edi], cl; xchg eax, esp; rol dword ptr [ecx], 0xc9; call dword ptr gs:[0x10]; 
0x0804a80c: xor byte ptr [eax], al; add byte ptr [ecx], dh; leave; int 0x80; 
0x08076b61: xor byte ptr [ebp + 0x5e5bf465], cl; pop edi; pop ebp; ret; 
0x080b0a41: xor byte ptr [ebp + 0xc], dh; mov eax, dword ptr [edx + 8]; add esp, 8; pop ebx; ret; 
0x0809e5d6: xor byte ptr [ebp - 0x1c07f79], cl; call dword ptr [eax - 0x18]; 
0x0809eb60: xor byte ptr [ebp - 0x1c0bf79], cl; call dword ptr [eax - 0x18]; 
0x0809eb60: xor byte ptr [ebp - 0x1c0bf79], cl; call dword ptr [eax - 0x18]; ret; 
0x0809eeb7: xor byte ptr [ebp - 0x1c0fb80], cl; call dword ptr [eax - 0x18]; 
0x0809e600: xor byte ptr [ebp - 0x1c22279], cl; call dword ptr [eax - 0x18]; 
0x0807f083: xor byte ptr [ebp - 0x2c73f7d], cl; call dword ptr [eax + 0x68]; 
0x0807ef83: xor byte ptr [ebp - 0x2c73f7d], cl; call dword ptr [eax - 0x73]; 
0x080802a3: xor byte ptr [ebp - 0x2c7df7d], cl; call dword ptr [eax + 0x68]; 
0x080801a6: xor byte ptr [ebp - 0x2c7df7d], cl; call dword ptr [eax - 0x73]; 
0x08080652: xor byte ptr [ebp - 0x2c81f7d], cl; call dword ptr [eax - 0x73]; 
0x08081ed7: xor byte ptr [ebp - 0x2c87f7d], cl; call dword ptr [eax + 0x68]; 
0x0808188b: xor byte ptr [ebp - 0x2c87f7d], cl; call dword ptr [eax - 0x73]; 
0x08082b81: xor byte ptr [ebp - 0x2c89f7d], cl; call dword ptr [eax + 0x68]; 
0x08082602: xor byte ptr [ebp - 0x2c89f7d], cl; call dword ptr [eax - 0x73]; 
0x080802c6: xor byte ptr [ebp - 0x2c9fb7d], cl; call dword ptr [eax - 0x73]; 
0x08081e28: xor byte ptr [ebp - 0x2ca337d], cl; call dword ptr [eax - 0x73]; 
0x080829cb: xor byte ptr [ebp - 0x2ca577d], cl; call dword ptr [eax - 0x73]; 
0x08086f05: xor byte ptr [ebp - 0x2d41945], cl; jmp dword ptr [ebp - 0x75]; 
0x0804afde: xor byte ptr [ebp - 0x6c77f040], al; add byte ptr [eax], al; add byte ptr [ebp - 0x16d397d], cl; call dword ptr [esi - 1]; 
0x08066f9f: xor byte ptr [ebx + 0x46483], cl; add byte ptr [ebp - 0x7cc98740], al; in al, dx; or byte ptr [ebp - 0x2ff1f7d], cl; call dword ptr [esi + 0x50]; 
0x0805fa90: xor byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0807ebf3: xor byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x0805cddf: xor byte ptr [ebx + 0x94be], cl; add bh, al; ret 0x5f80; 
0x080afd9d: xor byte ptr [ebx + ecx + 0x66], 0x81; cli; syscall; 
0x080539f2: xor byte ptr [ebx - 0x8837b], cl; dec dword ptr [ebx - 0x4a0067fc]; insb byte ptr es:[edi], dx; idiv edi; call dword ptr [edx - 1]; 
0x0807c9fa: xor byte ptr [ebx - 0xa3dbbc], cl; jo 0x34a06; call edi; 
0x080a527c: xor byte ptr [ebx - 3], al; call dword ptr [ebp + 0x57]; 
0x080b2c54: xor byte ptr [ebx], al; push 8; mov dword ptr [esp], ebp; call edi; 
0x0805fa8b: xor byte ptr [ecx + 0x30738906], cl; add esp, 4; pop ebx; pop esi; ret; 
0x08049fab: xor byte ptr [ecx + 0x4e89345e], cl; cmp byte ptr [ecx + 0x5e8b3c56], cl; or bh, dh; ret; 
0x08054997: xor byte ptr [ecx - 0x46b7b], cl; jmp dword ptr [esi - 0x70]; 
0x08088a33: xor byte ptr [ecx], al; add byte ptr [eax], al; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0807f226: xor byte ptr [ecx], bh; fmul dword ptr [edi]; dec edi; ret; 
0x080a690a: xor byte ptr [ecx], ch; ret 0x5489; 
0x08081eda: xor byte ptr [edi], 0xfd; call dword ptr [eax + 0x68]; 
0x0808188e: xor byte ptr [edi], 0xfd; call dword ptr [eax - 0x73]; 
0x080823aa: xor byte ptr [edi], cl; mov dh, 0x9c; push ss; ret 0xfd35; 
0x08071022: xor byte ptr [edi], cl; mov esp, 0x76c229c0; push es; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x0808b7da: xor byte ptr [edi], cl; xchg eax, ebp; ret 0xf883; 
0x080aba57: xor byte ptr [edx - 4], ch; call dword ptr [eax - 0x18]; 
0x0806bb31: xor byte ptr [esi + 0xf], ah; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x2c73; 
0x0807092f: xor byte ptr [esi + 0xf], ah; xlatb; ret 0x498d; 
0x08070eeb: xor byte ptr [esi + 0xf], ah; xlatb; ret; 
0x08070bd6: xor ch, 0; add byte ptr [eax], al; lea eax, [edi + 0xb]; pop edi; ret; 
0x080aabb2: xor ch, bh; sti; dec dword ptr [ecx + 0x5bc03106]; pop esi; pop edi; ret; 
0x0809bf1c: xor cl, 0xfa; dec dword ptr [ebp - 0x2d59f7d]; call dword ptr [eax - 0x73]; 
0x080595d0: xor cl, byte ptr [ebx - 0x38e7dbbc]; ret 0x5f80; 
0x08049923: xor cl, byte ptr [ebx - 0x9efdba4]; ret; 
0x080b2e85: xor dh, bl; cld; call dword ptr [eax - 1]; 
0x08080833: xor dh, dh; ret 0x7501; 
0x08083f40: xor dword ptr [eax + 0x35], 0xfffffffd; call dword ptr [eax - 0x73]; 
0x080a8981: xor dword ptr [eax + 0x3c], 0xfffffffc; call dword ptr [eax - 0x73]; 
0x080a51b9: xor dword ptr [eax + 0x4d], 0xfffffffe; call dword ptr [eax + 0x56]; 
0x080abafc: xor dword ptr [eax + 0x6a], 0xfffffffc; call dword ptr [eax - 0x18]; 
0x0809d7a4: xor dword ptr [eax + eax*2], 0xfffffffe; call dword ptr [eax - 0x73]; 
0x08061476: xor dword ptr [eax - 0x46], 0xfffffff7; call dword ptr [eax + 0x56]; 
0x080613e6: xor dword ptr [eax - 0x47], 0xfffffff7; call dword ptr [eax + 0x56]; 
0x080b2e84: xor dword ptr [eax], 0xffffffde; cld; call dword ptr [eax - 1]; 
0x080aabb1: xor dword ptr [eax], 0xfffffffd; sti; dec dword ptr [ecx + 0x5bc03106]; pop esi; pop edi; ret; 
0x080b0884: xor dword ptr [ecx + 0x5014244c], ecx; push dword ptr [esp + 0x10]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x080a5e26: xor dword ptr [ecx - 0x397cc4fc], ecx; add al, 0x83; ret; 
0x0807aa04: xor dword ptr [edi], 0x29; std; call dword ptr [eax - 0x18]; 
0x080898b5: xor dword ptr [edx + ebx], 0; add byte ptr [eax], al; add byte ptr [eax], al; add bl, ch; ret 0xf631; 
0x0807ae5d: xor eax, 0x29; std; call dword ptr [eax - 0x18]; 
0x080881ee: xor eax, 0x2b; cli; call dword ptr [eax - 0x73]; 
0x08089847: xor eax, 0x81fffc04; ret; 
0x0805fe47: xor eax, 0x81fffe9e; ret; 
0x08061731: xor eax, 0x81ffff6f; ret 0x38cb; 
0x0809d79f: xor eax, 0x8dffffff; xor dword ptr [eax + eax*2], 0xfffffffe; call dword ptr [eax - 0x73]; 
0x08099fe3: xor eax, 0xaf68fffe; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; sbb dword ptr [ebp + 0x35], -2; call dword ptr [eax - 0x18]; 
0x0805b669: xor eax, 0xb8fffffe; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x08088989: xor eax, dword ptr [0x14]; jne 0x40996; add esp, 0x18; pop ebx; ret; 
0x080a5067: xor eax, dword ptr [0x14]; jne 0x5d074; add esp, 0x28; pop ebx; ret; 
0x080507e6: xor eax, dword ptr [0x18]; call eax; 
0x0804ec42: xor eax, dword ptr [eax]; add cl, al; cli; add al, byte ptr [ecx - 0xccc1e]; inc dword ptr [ecx]; ret 0xd089; 
0x08050b5c: xor eax, dword ptr [ebx - 0x776fed5]; pop ebx; pop esi; pop edi; ret; 
0x08088988: xor eax, dword ptr gs:[0x14]; jne 0x40996; add esp, 0x18; pop ebx; ret; 
0x080a5066: xor eax, dword ptr gs:[0x14]; jne 0x5d074; add esp, 0x28; pop ebx; ret; 
0x080507e5: xor eax, dword ptr gs:[0x18]; call eax; 
0x080b3386: xor eax, eax; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x08066f60: xor eax, eax; add esp, 0xc; ret; 
0x0805e353: xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x08060872: xor eax, eax; cmp edx, dword ptr [esp + 4]; setae al; ret; 
0x080969f5: xor eax, eax; mov dword ptr [ebx], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x080998c8: xor eax, eax; mov esi, dword ptr [esp + 0x44]; mov ebx, dword ptr [esp + 0x40]; lea edx, [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0804f429: xor eax, eax; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0805ba6c: xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0805fb90: xor eax, eax; pop ebx; pop esi; ret; 
0x08074bbd: xor eax, eax; pop ebx; ret; 
0x080745f0: xor eax, eax; pop edi; pop ebx; ret; 
0x08070650: xor eax, eax; pop edi; ret; 
0x080661a4: xor eax, eax; pop edx; pop ebx; pop esi; ret; 
0x080a7d31: xor eax, eax; pop esi; pop edi; pop ebp; ret; 
0x0807e243: xor eax, eax; pop esi; pop edi; ret; 
0x0804fe30: xor eax, eax; ret; 
0x0804fe23: xor eax, edx; movzx edx, byte ptr [ecx]; test dl, dl; jne 0x7e09; ret; 
0x0807e0b0: xor ebp, 0x2d; std; call dword ptr [eax - 0x18]; 
0x080b327d: xor ebp, 0x41; std; call dword ptr [eax - 0x18]; 
0x080b327d: xor ebp, 0x41; std; call dword ptr [eax - 0x18]; sbb byte ptr [esi - 7], bh; jmp dword ptr [esi - 0x70]; 
0x080b00f0: xor ebp, dword ptr [edx + 0xa]; push 1; call eax; 
0x08077aed: xor ebx, dword ptr [0x14]; jne 0x2fb37; add esp, 0x18; pop ebx; ret; 
0x08077aec: xor ebx, dword ptr gs:[0x14]; jne 0x2fb37; add esp, 0x18; pop ebx; ret; 
0x0804a76f: xor ebx, ebx; lea esi, [esi]; mov eax, edx; int 0x80; 
0x080a88a1: xor ebx, ebx; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0809726e: xor ebx, edi; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x0807613c: xor ecx, dword ptr [0x14]; jne 0x2e16c; add esp, 0x18; pop ebx; ret; 
0x080a4dee: xor ecx, dword ptr [0x14]; jne 0x5ce20; add esp, 0x28; pop ebx; ret; 
0x080a4eb8: xor ecx, dword ptr [0x14]; jne 0x5cecc; add esp, 0x2c; ret; 
0x080a5178: xor ecx, dword ptr [0x14]; jne 0x5d18c; add esp, 0x2c; ret; 
0x080a526f: xor ecx, dword ptr [0x14]; jne 0x5d27b; add esp, 0x2c; ret; 
0x080a79f9: xor ecx, dword ptr [0x14]; jne 0x5fa05; add esp, 0x1c; ret; 
0x080a7b0c: xor ecx, dword ptr [0x14]; jne 0x5fb18; add esp, 0x2c; ret; 
0x080aba14: xor ecx, dword ptr [0x14]; jne 0x63a20; add esp, 0x2c; ret; 
0x080adb2f: xor ecx, dword ptr [0x14]; jne 0x65b3c; add esp, 0x28; pop ebx; ret; 
0x080a3e9a: xor ecx, dword ptr [ebx + 0x389047b]; mov edx, dword ptr [ebx + 0xc]; mov ecx, dword ptr [ebx + 0x10]; mov eax, dword ptr [ebx + 0x14]; call dword ptr [ebx]; 
0x08096794: xor ecx, dword ptr [ebx + 0x94ae]; add bh, al; ret 0x5f80; 
0x0807705c: xor ecx, dword ptr [ebx - 0x47dfdbb4]; daa; add dword ptr [eax], eax; add byte ptr [ebx - 0x64], bh; call dword ptr gs:[0x10]; 
0x08054e02: xor ecx, dword ptr [ecx - 0x49f6b]; dec dword ptr [ebp - 0x4136b]; call dword ptr [edx - 0x39]; 
0x0807613b: xor ecx, dword ptr gs:[0x14]; jne 0x2e16c; add esp, 0x18; pop ebx; ret; 
0x080a4ded: xor ecx, dword ptr gs:[0x14]; jne 0x5ce20; add esp, 0x28; pop ebx; ret; 
0x080a4eb7: xor ecx, dword ptr gs:[0x14]; jne 0x5cecc; add esp, 0x2c; ret; 
0x080a5177: xor ecx, dword ptr gs:[0x14]; jne 0x5d18c; add esp, 0x2c; ret; 
0x080a526e: xor ecx, dword ptr gs:[0x14]; jne 0x5d27b; add esp, 0x2c; ret; 
0x080a79f8: xor ecx, dword ptr gs:[0x14]; jne 0x5fa05; add esp, 0x1c; ret; 
0x080a7b0b: xor ecx, dword ptr gs:[0x14]; jne 0x5fb18; add esp, 0x2c; ret; 
0x080aba13: xor ecx, dword ptr gs:[0x14]; jne 0x63a20; add esp, 0x2c; ret; 
0x080adb2e: xor ecx, dword ptr gs:[0x14]; jne 0x65b3c; add esp, 0x28; pop ebx; ret; 
0x0804a80f: xor ecx, ecx; int 0x80; 
0x080a1858: xor ecx, ecx; lea ebx, [edi - 0x1b7e5]; call dword ptr gs:[0x10]; 
0x08079c54: xor ecx, ecx; lea ebx, [edi - 0x2de88]; int 0x80; 
0x0807eb95: xor edi, ebp; call dword ptr [eax - 0x18]; 
0x0807eb95: xor edi, ebp; call dword ptr [eax - 0x18]; add al, ch; cld; jmp dword ptr [esi - 0x70]; 
0x0807eb85: xor edi, ebp; call dword ptr [eax - 0x73]; 
0x080953dd: xor edi, esi; inc dword ptr [ecx]; fistp qword ptr [esi]; jmp edi; 
0x08076fab: xor edx, dword ptr [0x14]; jne 0x2efc7; add esp, 0x18; pop ebx; ret; 
0x08077e0f: xor edx, dword ptr [0x14]; jne 0x2fe1c; add esp, 0x18; pop ebx; ret; 
0x08076faa: xor edx, dword ptr gs:[0x14]; jne 0x2efc7; add esp, 0x18; pop ebx; ret; 
0x08077e0e: xor edx, dword ptr gs:[0x14]; jne 0x2fe1c; add esp, 0x18; pop ebx; ret; 
0x08088a56: xor edx, edx; mov ecx, ebp; mov esi, 8; call dword ptr gs:[0x10]; 
0x0807f098: xor esi, 0x33; std; call dword ptr [eax - 0x18]; 
0x080608ab: xor esi, esi; call dword ptr gs:[0x10]; 
0x08099237: xor esi, esi; cmp edx, 0x10d; cmovae ecx, eax; mov eax, 0xdc; mov edi, ecx; call dword ptr gs:[0x10]; 
0x0809719d: xor esi, esi; mov eax, ebp; mov ecx, 0x80; call dword ptr gs:[0x10]; 
0x0804bf7c: xor esi, esi; mov edx, 1; call dword ptr gs:[0x10]; 
0x08071d80: xor esi, esi; pop ebx; mov eax, esi; pop esi; pop edi; ret; 
0x0807196c: xor esi, esi; ret 0xf01; 
0x0804fd2d: xor esp, 0xfffffff7; cld; call dword ptr [eax + 0x55]; 

14345 gadgets found
