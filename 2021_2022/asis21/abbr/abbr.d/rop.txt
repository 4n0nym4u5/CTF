TARGET 0 - 'abbr': ELF-X64, 0x00000000401c80 entry, 639809/1 executable bytes/segments 

0x000000004293c5: adc [eax], al; add [rax-0x73], cl; adc eax, 0x2760; cmovne rax, rdx; ret; 
0x0000000045b807: adc [r11+0x94801e0], al; ror byte ptr [rcx-0x77], 0x1; or [r9-0x75], cl; add [rbx+0x94901e0], eax; ret; 
0x000000004957b5: adc [r13+0x2d840fc0], al; add eax, [rax]; add [rax+0x1], cl; ret; 
0x0000000045bf43: adc [r13-0x7b], r9b; ror byte ptr [rdi], 0x85; adc eax, 0x49000007; mov edi, [rdi]; call rbx; 
0x0000000045c020: adc [r13-0x7b], r9b; shl byte ptr [rbp+0x3b], 0x49; mov edi, [rdi]; call rbx; 
0x0000000045c049: adc [r13-0x7b], r9b; shl byte ptr [rbp+0x7d], 0x49; mov edi, [rdi]; call rbx; 
0x0000000043193f: adc [r14+0xf], r12b; xlat [rbx]; rol dword ptr [rbp+0x315775c0], 0xc0; ret; 
0x000000004568e6: adc [r15], r9b; adc [rdi+rdx-0x10], edx; movups [rdi+rdx-0x20], xmm3; ret; 
0x00000000419f62: adc [r8+0x1], r9b; ret; 
0x0000000048cb83: adc [r8+0x5a], bl; pop rbx; ret; 
0x000000004208bc: adc [r9], r13b; rol bl, 0x1; mov eax, 0xffffffff; ret; 
0x00000000459eff: adc [rax+0x1], bh; syscall; 
0x0000000049b96e: adc [rax+0x1], cl; out dx, eax; call r12; 
0x00000000419f63: adc [rax+0x1], cl; ret; 
0x0000000045e5da: adc [rax+0x1], ecx; ret far; 
0x000000004873a6: adc [rax+0x39], ecx; ret; 
0x00000000493c03: adc [rax+0x3b], cl; sub [rbx-0x1b], sil; mov eax, 0x1; ret; 
0x0000000047ddda: adc [rax+0x40], eax; pop rbx; ret; 
0x0000000048cb84: adc [rax+0x5a], bl; pop rbx; ret; 
0x00000000463703: adc [rax+0x63], cl; fisttp dword ptr [rcx+0x39], st; test dword ptr [rdi], 0x33486; add [rcx-0xa], al; ret; 
0x00000000410251: adc [rax+rcx*2+0x33], esp; adc al, 0x25; xor [rax], al; add [rax], al; call rdx; 
0x0000000041026f: adc [rax+rcx*2+0x33], esp; add al, 0x25; xor [rax], al; add [rax], al; call rax; 
0x0000000048ffda: adc [rax-0x73], cl; adc eax, 0x11e; lea rax, [rip+0x67]; cmovne rax, rdx; ret; 
0x0000000042944a: adc [rax-0x73], cl; adc eax, 0x2ceee; lea rax, [rip+0x2ce37]; cmovne rax, rdx; ret; 
0x00000000429f0a: adc [rax-0x73], cl; adc eax, 0xfffffc9e; lea rax, [rip+0x2bed7]; cmove rax, rdx; ret; 
0x0000000045d554: adc [rax-0x73], cl; or al, 0x8e; add eax, [rcx+rdx]; ret; 
0x0000000045d83c: adc [rax-0x73], ecx; or eax, 0xffffff9c; mov [rax+0x10], rcx; mov [rax+0x8], rdx; ret; 
0x0000000045d553: adc [rax-0x73], r9b; or al, 0x8e; add eax, [rcx+rdx]; ret; 
0x0000000041e2f2: adc [rax-0x75], cl; adc cl, [rax+0x39]; ret far; 
0x00000000402868: adc [rax-0x75], cl; and al, 0x18; call rax; 
0x00000000401f3f: adc [rax-0x75], cl; clc; leave; ret; 
0x0000000040202a: adc [rax-0x75], cl; clc; mov rax, [rax+0x8]; mov rdi, rax; call rdx; 
0x000000004193ab: adc [rax-0x75], cl; push rbx; mov rdi, rbx; sub rdx, rsi; call qword ptr [rax+0x70]; 
0x0000000047cf77: adc [rax-0x77], cl; adc [rax-0x77], cl; push rax; adc [rax-0x77], cl; ret; 
0x000000004180c2: adc [rax-0x77], cl; je short 0x00000000004180eb; or al, ch; ret; 
0x0000000047e06b: adc [rax-0x77], cl; jo short 0x000000000047e0b0; mov [rax], rdx; xor eax, eax; ret; 
0x0000000041bee5: adc [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x90]; 
0x0000000047cf7b: adc [rax-0x77], cl; push rax; adc [rax-0x77], cl; ret; 
0x0000000047cfbc: adc [rax-0x77], cl; push rax; movups [rax], xmm0; ret; 
0x0000000045d846: adc [rax-0x77], cl; push rax; or bl, al; nop [rax]; ret; 
0x0000000047cf7f: adc [rax-0x77], cl; ret; 
0x0000000047c8ee: adc [rax-0x77], ecx; ret far; 
0x0000000045ae29: adc [rax-0x7b], cl; push qword ptr [rbp+0x27]; mov rdi, [rbp]; call rbx; 
0x0000000045c70d: adc [rax-0x7b], cl; push qword ptr [rbp+0x44]; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c6de: adc [rax-0x7b], cl; push qword ptr [rbp+0x4b]; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x00000000425bdb: adc [rax-0x7d], cl; call qword ptr [rax]; 
0x00000000402623: adc [rax-0x7d], cl; ret; 
0x000000004293c6: adc [rax], al; add [rax-0x73], cl; adc eax, 0x2760; cmovne rax, rdx; ret; 
0x000000004599b2: adc [rax], al; add [rax-0x77], cl; ret; 
0x00000000421b0d: adc [rax], al; add [rax], al; cmovne rax, rdx; mov [rip+0xaa55c], rax; ret; 
0x0000000045a7be: adc [rax], al; add [rax], al; mov eax, 0x48; syscall; 
0x00000000418e29: adc [rax], al; add [rax], al; mov rsi, r13; mov rdi, r15; call qword ptr [r14+0x38]; 
0x00000000457ac2: adc [rax], al; add [rax], al; pop rbx; ret; 
0x000000004805d4: adc [rax], al; add [rax], al; syscall; 
0x0000000042d9b8: adc [rax], al; add [rbp-0x77], cl; ret far; 
0x00000000412790: adc [rax], al; add [rcx+rcx*4-0x16], cl; mov rsi, r10; mov rdi, r15; call qword ptr [rbx+0x38]; 
0x00000000455dce: adc [rax], bh; enter 0x275, 0x39; enter 0xc019, 0x83; fdivr st, st(7); ret; 
0x00000000490288: adc [rax], eax; add [rax], al; syscall; 
0x0000000042d838: adc [rax], eax; add [rbp-0x77], cl; ret far; 
0x00000000470dc7: adc [rax], eax; add [rbx-0x70f0fb08], al; cmp eax, 0xc7000015; test [rdi+rdi*8-0x1], esp; jmp qword ptr [rsi]; 
0x00000000470dc6: adc [rax], eax; add [rbx-0x70f0fb08], al; cmp eax, 0xc7000015; test [rdi+rdi*8-0x1], esp; jmp qword ptr [rsi]; 
0x0000000047cfc3: adc [rax], eax; ret; 
0x00000000401d0e: adc [rax], edi; test rax, rax; je short 0x0000000000401d20; mov edi, 0x4caed0; jmp rax; 
0x000000004957b6: adc [rbp+0x2d840fc0], al; add eax, [rax]; add [rax+0x1], cl; ret; 
0x0000000041f94f: adc [rbp+0x38], eax; pop rbp; pop r12; ret; 
0x0000000046b8ea: adc [rbp+0x41], bl; pop rsp; pop r13; ret; 
0x0000000045bca1: adc [rbp-0x7b], cl; dec dword ptr [rdi]; test [rbp+0x49000002], esi; mov edi, [rsi]; call rbx; 
0x0000000045bd01: adc [rbp-0x7b], cl; dec dword ptr [rdi]; test [rcx+0x49000001], esp; mov edi, [rsi]; call rbx; 
0x0000000045bc0d: adc [rbp-0x7b], cl; div byte ptr [rbp+0x1d]; mov rdi, [r13]; call rbx; 
0x0000000045bada: adc [rbp-0x7b], cl; in al, 0x75; sub [rax-0x75], cl; jge short 0x000000000045bae4; call rbx; 
0x0000000045bb1b: adc [rbp-0x7b], cl; in eax, dx; jne short 0x000000000045bb70; mov rdi, [r12]; call rbx; 
0x0000000045bb4b: adc [rbp-0x7b], cl; in eax, dx; jne short 0x000000000045bbd0; mov rdi, [r12]; call rbx; 
0x0000000045bd5d: adc [rbp-0x7b], cl; push qword ptr [rbp+0x3e]; mov rdi, [r14]; call rbx; 
0x0000000045bd89: adc [rbp-0x7b], cl; push qword ptr [rbp+0x69]; mov rdi, [r14]; call rbx; 
0x0000000045bf44: adc [rbp-0x7b], cl; ror byte ptr [rdi], 0x85; adc eax, 0x49000007; mov edi, [rdi]; call rbx; 
0x0000000045c021: adc [rbp-0x7b], cl; shl byte ptr [rbp+0x3b], 0x49; mov edi, [rdi]; call rbx; 
0x0000000045c04a: adc [rbp-0x7b], cl; shl byte ptr [rbp+0x7d], 0x49; mov edi, [rdi]; call rbx; 
0x0000000045bbb1: adc [rbp-0x7b], cl; test byte ptr [rdi], 0x85; xor eax, 0x49000001; mov edi, [rbp]; call rbx; 
0x00000000457fce: adc [rbx+0x147402f8], eax; xor eax, eax; ret; 
0x0000000041b7e3: adc [rbx+0x18], eax; movups [rbx+0x28], xmm0; pop rbx; ret; 
0x0000000041b7e7: adc [rbx+0x28], eax; pop rbx; ret; 
0x0000000041f1e6: adc [rbx+0x38], eax; pop rbx; pop rbp; pop r12; ret; 
0x0000000041ecd5: adc [rbx+0x48], eax; pop rbx; ret; 
0x000000004999c7: adc [rbx+0x5d], bl; pop r12; pop r13; pop r14; ret; 
0x00000000419898: adc [rbx+0x5d], bl; pop r12; ret; 
0x0000000048a21e: adc [rbx+0x5d], bl; ret; 
0x0000000041b7df: adc [rbx+0x8], eax; movups [rbx+0x18], xmm0; movups [rbx+0x28], xmm0; pop rbx; ret; 
0x0000000041bc26: adc [rbx+0x8], eax; pop rbx; ret; 
0x0000000045b808: adc [rbx+0x94801e0], al; ror byte ptr [rcx-0x77], 0x1; or [r9-0x75], cl; add [rbx+0x94901e0], eax; ret; 
0x00000000420cd7: adc [rbx+0xa], esi; add [rax], al; mov qword ptr [rip+0xab30e], 0x0; ret; 
0x0000000041e4cf: adc [rbx+0xadb192d], al; add [rcx], al; ret; 
0x00000000453837: adc [rbx+0xff3174e], cl; jg short 0x0000000000453846; mov [rdi+0x10], rdx; mov [rdi+0x17], ecx; ret; 
0x00000000453857: adc [rbx+0xff3184e], cl; jg short 0x0000000000453866; mov [rdi+0x10], rdx; mov [rdi+0x18], ecx; ret; 
0x000000004208ba: adc [rbx-0x2fd6efb9], cl; ret; 
0x0000000047d86e: adc [rbx-0x3b7cb7ff], cl; or [rbx+0x5d], bl; ret; 
0x0000000048a947: adc [rbx-0x55], dh; xor eax, eax; ret; 
0x0000000048634d: adc [rbx], al; add [rax], al; ret; 
0x00000000426834: adc [rbx], dh; or al, [rax]; lea rax, [rip-0xc6f]; mov [rip+0xa32fa], rax; ret; 
0x0000000048bf4e: adc [rbx], eax; pop rbx; ret; 
0x00000000456a0c: adc [rbx], eax; ret; 
0x00000000456985: adc [rbx], esp; ret; 
0x0000000041fbe8: adc [rcx+0x20], eax; movups [rcx+0x30], xmm0; movups [rcx+0x40], xmm0; mov qword ptr [rdi+0xa8], 0x0; ret; 
0x0000000041fbec: adc [rcx+0x30], eax; movups [rcx+0x40], xmm0; mov qword ptr [rdi+0xa8], 0x0; ret; 
0x000000004741ea: adc [rcx+0x39], cl; ret; 
0x0000000041fbf0: adc [rcx+0x40], eax; mov qword ptr [rdi+0xa8], 0x0; ret; 
0x0000000043ee56: adc [rcx+0x4], esp; vmovups [r9+0x140], zmm13; vmovups [r9+0x180], zmm14; vmovups [r9+0x1c0], zmm15; ret; 
0x0000000043ee55: adc [rcx+0x4], rsp; vmovups [r9+0x140], zmm13; vmovups [r9+0x180], zmm14; vmovups [r9+0x1c0], zmm15; ret; 
0x0000000043ee5d: adc [rcx+0x5], ebp; vmovups [r9+0x180], zmm14; vmovups [r9+0x1c0], zmm15; ret; 
0x0000000043ee5c: adc [rcx+0x5], rbp; vmovups [r9+0x180], zmm14; vmovups [r9+0x1c0], zmm15; ret; 
0x0000000043ee64: adc [rcx+0x6], esi; vmovups [r9+0x1c0], zmm15; ret; 
0x0000000043ee63: adc [rcx+0x6], rsi; vmovups [r9+0x1c0], zmm15; ret; 
0x0000000043ee6b: adc [rcx+0x7], edi; ret; 
0x0000000043ee6a: adc [rcx+0x7], rdi; ret; 
0x0000000040db33: adc [rcx+rcx*4+0x4], cl; and al, 0xe8; ret; 
0x0000000049aa56: adc [rcx+rcx*4-0x11], cl; call rax; 
0x000000004584ee: adc [rcx+rcx*4-0x19], cl; mov rsi, [rsp+0x18]; call rbx; 
0x0000000046b912: adc [rcx+rcx*4-0x20], cl; pop rbp; pop r12; pop r13; ret; 
0x0000000047c03b: adc [rcx+rcx*4-0x20], cl; pop rbx; pop rbp; pop r12; ret; 
0x0000000041072c: adc [rcx+rcx*4-0x40], al; pop rbx; ret; 
0x00000000425d22: adc [rcx+rcx*4-0x40], cl; pop rbp; ret; 
0x00000000425b2b: adc [rcx+rcx*4-0x40], cl; pop rbx; ret; 
0x00000000456977: adc [rcx-0x10], esi; movups [rcx-0x20], xmm7; movups [rcx-0x30], xmm8; movups [r11], xmm4; ret; 
0x0000000043eb06: adc [rcx-0x1], ebx; ret; 
0x0000000043eaca: adc [rcx-0x1], edi; ret; 
0x0000000043eb05: adc [rcx-0x1], rbx; ret; 
0x0000000043eac9: adc [rcx-0x1], rdi; ret; 
0x0000000045697b: adc [rcx-0x20], edi; movups [rcx-0x30], xmm8; movups [r11], xmm4; ret; 
0x0000000043eaff: adc [rcx-0x2], edx; vmovups [r9-0x40], zmm3; ret; 
0x0000000043ecfd: adc [rcx-0x2], esi; vmovups [r9-0x40], zmm15; ret; 
0x0000000043eac3: adc [rcx-0x2], esi; vmovups [r9-0x40], zmm7; ret; 
0x0000000043eafe: adc [rcx-0x2], rdx; vmovups [r9-0x40], zmm3; ret; 
0x0000000043ecfc: adc [rcx-0x2], rsi; vmovups [r9-0x40], zmm15; ret; 
0x0000000043eac2: adc [rcx-0x2], rsi; vmovups [r9-0x40], zmm7; ret; 
0x00000000456980: adc [rcx-0x30], eax; movups [r11], xmm4; ret; 
0x0000000043ecf6: adc [rcx-0x3], ebp; vmovups [r9-0x80], zmm14; vmovups [r9-0x40], zmm15; ret; 
0x0000000043eabc: adc [rcx-0x3], ebp; vmovups [r9-0x80], zmm6; vmovups [r9-0x40], zmm7; ret; 
0x0000000043ecf5: adc [rcx-0x3], rbp; vmovups [r9-0x80], zmm14; vmovups [r9-0x40], zmm15; ret; 
0x0000000043eabb: adc [rcx-0x3], rbp; vmovups [r9-0x80], zmm6; vmovups [r9-0x40], zmm7; ret; 
0x0000000043ecef: adc [rcx-0x4], esp; vmovups [r9-0xc0], zmm13; vmovups [r9-0x80], zmm14; vmovups [r9-0x40], zmm15; ret; 
0x0000000043eab5: adc [rcx-0x4], esp; vmovups [r9-0xc0], zmm5; vmovups [r9-0x80], zmm6; vmovups [r9-0x40], zmm7; ret; 
0x0000000043ecee: adc [rcx-0x4], rsp; vmovups [r9-0xc0], zmm13; vmovups [r9-0x80], zmm14; vmovups [r9-0x40], zmm15; ret; 
0x0000000043eab4: adc [rcx-0x4], rsp; vmovups [r9-0xc0], zmm5; vmovups [r9-0x80], zmm6; vmovups [r9-0x40], zmm7; ret; 
0x00000000459e90: adc [rcx-0x77], al; ror byte ptr [rbx+0x3108247c], 0xc0; syscall; 
0x00000000496571: adc [rcx-0x77], cl; ret; 
0x0000000049853d: adc [rcx-0x7d], cl; call qword ptr [rdx]; 
0x0000000048d591: adc [rcx], al; add [rax], al; mov eax, r12d; pop r12; ret; 
0x0000000041751c: adc [rcx], al; add [rax], al; movsxd rdx, r13d; mov rdi, rbx; call qword ptr [r14+0x38]; 
0x000000004563a7: adc [rcx], ch; cmp edx, ecx; jle short 0x00000000004563c4; movsxd rax, ecx; ret; 
0x000000004208bd: adc [rcx], ch; rol bl, 0x1; mov eax, 0xffffffff; ret; 
0x0000000047e072: adc [rcx], dh; rol bl, 0x66; nop [rax+rax]; mov eax, 0xffffffff; ret; 
0x00000000419a57: adc [rcx], dh; ror byte ptr [rcx+rcx*4-0x1], cl; call qword ptr [r14+0x80]; 
0x000000004569ff: adc [rdi+0x10], ebp; movups [rdi+0x20], xmm6; movups [rdi+0x30], xmm7; movups [r11], xmm8; ret; 
0x000000004568e5: adc [rdi+0x10], ecx; movups [rdi+rdx-0x10], xmm2; movups [rdi+rdx-0x20], xmm3; ret; 
0x0000000049947f: adc [rdi+0x1], bh; jmp rax; 
0x0000000043eaf8: adc [rdi+0x1], ecx; vmovups [r9-0x80], zmm2; vmovups [r9-0x40], zmm3; ret; 
0x00000000456515: adc [rdi+0x1], edx; vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x0000000043eaf7: adc [rdi+0x1], rcx; vmovups [r9-0x80], zmm2; vmovups [r9-0x40], zmm3; ret; 
0x00000000456514: adc [rdi+0x1], rdx; vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x00000000456a03: adc [rdi+0x20], esi; movups [rdi+0x30], xmm7; movups [r11], xmm8; ret; 
0x00000000456a07: adc [rdi+0x30], edi; movups [r11], xmm8; ret; 
0x0000000041ebec: adc [rdi+0x8], eax; ret; 
0x0000000041f9ff: adc [rdi+0xa0], eax; ret; 
0x00000000456747: adc [rdi+rdx-0x10], ecx; ret; 
0x000000004568e9: adc [rdi+rdx-0x10], edx; movups [rdi+rdx-0x20], xmm3; ret; 
0x000000004568bc: adc [rdi+rdx-0x10], esp; movups [rdi+rdx-0x20], xmm5; movups [rdi+rdx-0x30], xmm6; movups [rdi+rdx-0x40], xmm7; ret; 
0x000000004568c1: adc [rdi+rdx-0x20], ebp; movups [rdi+rdx-0x30], xmm6; movups [rdi+rdx-0x40], xmm7; ret; 
0x000000004568ee: adc [rdi+rdx-0x20], ebx; ret; 
0x000000004568c6: adc [rdi+rdx-0x30], esi; movups [rdi+rdx-0x40], xmm7; ret; 
0x000000004568cb: adc [rdi+rdx-0x40], edi; ret; 
0x0000000043efb8: adc [rdi-0x5], esp; vmovups [rdi-0x180], zmm13; vmovups [rdi-0x1c0], zmm14; vmovups [rdi-0x200], zmm15; ret; 
0x0000000043efb7: adc [rdi-0x5], rsp; vmovups [rdi-0x180], zmm13; vmovups [rdi-0x1c0], zmm14; vmovups [rdi-0x200], zmm15; ret; 
0x0000000043efbf: adc [rdi-0x6], ebp; vmovups [rdi-0x1c0], zmm14; vmovups [rdi-0x200], zmm15; ret; 
0x0000000043efbe: adc [rdi-0x6], rbp; vmovups [rdi-0x1c0], zmm14; vmovups [rdi-0x200], zmm15; ret; 
0x0000000043efc6: adc [rdi-0x7], esi; vmovups [rdi-0x200], zmm15; ret; 
0x0000000043efc5: adc [rdi-0x7], rsi; vmovups [rdi-0x200], zmm15; ret; 
0x0000000043efcd: adc [rdi-0x8], edi; ret; 
0x0000000043efcc: adc [rdi-0x8], rdi; ret; 
0x00000000469a24: adc [rdi], al; add [rax], al; add cl, ch; ret; 
0x00000000456a01: adc [rdi], cl; adc [rdi+0x20], esi; movups [rdi+0x30], xmm7; movups [r11], xmm8; ret; 
0x000000004568e7: adc [rdi], cl; adc [rdi+rdx-0x10], edx; movups [rdi+rdx-0x20], xmm3; ret; 
0x00000000427b99: adc [rdi], cl; xchg al, al; add [rax], al; add [rax-0x7d], cl; call far fword ptr [rdi]; 
0x0000000048f785: adc [rdi], eax; mov [rdx], eax; mov eax, 0x2; ret; 
0x000000004568e2: adc [rdi], eax; movups [rdi+0x10], xmm1; movups [rdi+rdx-0x10], xmm2; movups [rdi+rdx-0x20], xmm3; ret; 
0x00000000456744: adc [rdi], eax; movups [rdi+rdx-0x10], xmm1; ret; 
0x0000000043eaf2: adc [rdi], eax; vmovups [rdi+0x40], zmm1; vmovups [r9-0x80], zmm2; vmovups [r9-0x40], zmm3; ret; 
0x0000000045650f: adc [rdi], edx; vmovups [rdi+0x40], zmm2; vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x00000000456530: adc [rdi], edx; vmovups [rsi-0x40], zmm2; ret; 
0x0000000043eaf1: adc [rdi], rax; vmovups [rdi+0x40], zmm1; vmovups [r9-0x80], zmm2; vmovups [r9-0x40], zmm3; ret; 
0x0000000045650e: adc [rdi], rdx; vmovups [rdi+0x40], zmm2; vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x0000000045652f: adc [rdi], rdx; vmovups [rsi-0x40], zmm2; ret; 
0x000000004581c8: adc [rdx+0x1], ch; push 0x0; lea rcx, [rax+0x4]; lea r9, [rsp+0x20]; call rbx; 
0x0000000045815a: adc [rdx+0x1], ch; xor edx, edx; push 0x1; lea r9, [rsp+0x20]; call rbx; 
0x00000000462c8f: adc [rdx+0x48], eax; ret; 
0x000000004344ba: adc [rdx+0x9], dh; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000040f6ea: adc [rdx+rdx*8-0x3c3c268b], eax; nop [rax]; xor eax, eax; ret; 
0x00000000428afe: adc [rdx], cl; add [rax+0x39], cl; ret; 
0x000000004333eb: adc [rdx], cl; add [rax], al; xor eax, eax; ret; 
0x0000000049683e: adc [rip+0x23774], al; divss xmm0, [rip+0x23770]; ret; 
0x000000004770b3: adc [rip-0x7cbf0000], al; out dx, eax; add [rax-0x93343], eax; jmp qword ptr [rax]; 
0x00000000456655: adc [rsi+0x1], edx; vmovups [rsi+0x80], zmm2; vmovups [rsi+0xc0], zmm2; ret; 
0x00000000456654: adc [rsi+0x1], rdx; vmovups [rsi+0x80], zmm2; vmovups [rsi+0xc0], zmm2; ret; 
0x0000000045665c: adc [rsi+0x2], edx; vmovups [rsi+0xc0], zmm2; ret; 
0x0000000045665b: adc [rsi+0x2], rdx; vmovups [rsi+0xc0], zmm2; ret; 
0x00000000456663: adc [rsi+0x3], edx; ret; 
0x00000000456662: adc [rsi+0x3], rdx; ret; 
0x000000004566eb: adc [rsi+0x4], edx; vmovups [rsi+0x140], zmm2; vmovups [rsi+0x180], zmm2; vmovups [rsi+0x1c0], zmm2; ret; 
0x000000004566ea: adc [rsi+0x4], rdx; vmovups [rsi+0x140], zmm2; vmovups [rsi+0x180], zmm2; vmovups [rsi+0x1c0], zmm2; ret; 
0x000000004566f2: adc [rsi+0x5], edx; vmovups [rsi+0x180], zmm2; vmovups [rsi+0x1c0], zmm2; ret; 
0x000000004566f1: adc [rsi+0x5], rdx; vmovups [rsi+0x180], zmm2; vmovups [rsi+0x1c0], zmm2; ret; 
0x000000004566f9: adc [rsi+0x6], edx; vmovups [rsi+0x1c0], zmm2; ret; 
0x000000004566f8: adc [rsi+0x6], rdx; vmovups [rsi+0x1c0], zmm2; ret; 
0x00000000456700: adc [rsi+0x7], edx; ret; 
0x000000004566ff: adc [rsi+0x7], rdx; ret; 
0x0000000043329a: adc [rsi+0xf], ah; cmp [rdi], dl; ret; 
0x0000000042a65b: adc [rsi+0xf], ah; outsd dx, [rsi]; fsub st(1), st; imul edi, 0xffffffff; jmp qword ptr [rsi+0x66]; 
0x00000000431940: adc [rsi+0xf], ah; xlat [rbx]; rol dword ptr [rbp+0x315775c0], 0xc0; ret; 
0x0000000045673f: adc [rsi+rdx-0x10], cl; movups [rdi], xmm0; movups [rdi+rdx-0x10], xmm1; ret; 
0x00000000456502: adc [rsi-0x1], edx; ret; 
0x00000000456501: adc [rsi-0x1], rdx; ret; 
0x000000004564fb: adc [rsi-0x2], edx; vmovups [rsi-0x40], zmm2; ret; 
0x000000004564fa: adc [rsi-0x2], rdx; vmovups [rsi-0x40], zmm2; ret; 
0x000000004564f4: adc [rsi-0x3], edx; vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x000000004564f3: adc [rsi-0x3], rdx; vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x000000004564ed: adc [rsi-0x4], edx; vmovups [rsi-0xc0], zmm2; vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x000000004564ec: adc [rsi-0x4], rdx; vmovups [rsi-0xc0], zmm2; vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x0000000043eb8e: adc [rsi-0x75], ah; mov cx, [rcx-0x2]; mov [rdi], si; mov [r9-0x2], cx; ret; 
0x0000000045673c: adc [rsi], al; movups xmm1, [rsi+rdx-0x10]; movups [rdi], xmm0; movups [rdi+rdx-0x10], xmm1; ret; 
0x0000000045664f: adc [rsi], edx; vmovups [rsi+0x40], zmm2; vmovups [rsi+0x80], zmm2; vmovups [rsi+0xc0], zmm2; ret; 
0x0000000045664e: adc [rsi], rdx; vmovups [rsi+0x40], zmm2; vmovups [rsi+0x80], zmm2; vmovups [rsi+0xc0], zmm2; ret; 
0x0000000046dddd: adc [rsp+0x78], esi; movups [rsp+0x88], xmm7; mov r10d, 0x8; mov eax, 0xd; syscall; 
0x0000000046dde2: adc [rsp+0x88], edi; mov r10d, 0x8; mov eax, 0xd; syscall; 
0x0000000048ab9c: adc ah, [rcx-0x1417fffe]; xchg bh, dh; jmp qword ptr [rsi+0x2e]; 
0x00000000433e0d: adc ah, [rip+0xffff]; and ecx, 0xffff; sub eax, ecx; ret; 
0x0000000041d3f5: adc al, 0x0; add [rax-0x77], cl; fcomp st, dword ptr [rbx+0x5d]; pop r12; ret; 
0x00000000488e1b: adc al, 0x0; add [rax], al; syscall; 
0x0000000042d538: adc al, 0x0; add [rbp-0x77], cl; ret far; 
0x000000004124e7: adc al, 0x0; add [rcx+rcx*4-0x16], cl; mov rsi, r12; mov rdi, r15; call qword ptr [rcx+0x38]; 
0x0000000045d83b: adc al, 0x11; lea rcx, [rip-0x64]; mov [rax+0x10], rcx; mov [rax+0x8], rdx; ret; 
0x0000000045d53f: adc al, 0x11; test edx, edx; jne short 0x000000000045d550; ret; 
0x00000000433fb5: adc al, 0x13; notrack jmp rdx; 
0x0000000042b8c9: adc al, 0x16; sub eax, edx; ret; 
0x0000000042cde0: adc al, 0x16; sub eax, edx; vzeroupper; ret; 
0x0000000049d2af: adc al, 0x18; add [rsp-0x17], dh; ret far; 
0x00000000410ac7: adc al, 0x1; add [rax], al; add [rax-0x7d], cl; ret; 
0x00000000428882: adc al, 0x1; cmp dl, r8b; jne short 0x0000000000428870; sub rax, 0x10; ret; 
0x0000000049a928: adc al, 0x24; mov rdi, r14; call rbp; 
0x00000000410255: adc al, 0x25; xor [rax], al; add [rax], al; call rdx; 
0x00000000414c38: adc al, 0x3; lea rax, [rip+0xb19df]; jmp qword ptr [rax+rdx*8]; 
0x00000000414a35: adc al, 0x3; lea rax, [rip+0xb1ae2]; jmp qword ptr [rax+rdx*8]; 
0x000000004313bd: adc al, 0x3a; sub eax, edx; vzeroupper; ret; 
0x00000000459c3c: adc al, 0x48; add esp, 0x28; ret; 
0x00000000453e40: adc al, 0x48; lea eax, [rdi+0x14]; ret; 
0x0000000041f43b: adc al, 0x48; mov eax, [rbx+0x40]; add rsp, 0x20; pop rbx; jmp rax; 
0x00000000421ad4: adc al, 0x80; or al, [rax]; ret; 
0x00000000465294: adc al, 0x85; add [rax], al; add [rax+0x39], cl; ret far; 
0x0000000047e035: adc al, 0x90; mov [rax], rdx; xor eax, eax; ret; 
0x0000000047bc44: adc al, 0x91; add rdx, rcx; notrack jmp rdx; 
0x00000000445070: adc al, 0x91; mov eax, [rcx+rax*4]; sub eax, edx; ret; 
0x0000000044379e: adc al, 0x91; sub eax, edx; ret; 
0x0000000040f1ae: adc al, 0x93; add r10, r11; notrack jmp r10; 
0x00000000433fb1: adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000040eeab: adc al, 0x96; add rdx, rsi; notrack jmp rdx; 
0x0000000042a4c7: adc al, 0xa; notrack jmp r10; 
0x0000000042ba33: adc al, 0xa; sub eax, edx; ret; 
0x0000000042cf5d: adc al, 0xa; sub eax, edx; vzeroupper; ret; 
0x000000004567a8: adc al, 0xe; cmp rdi, rdx; jb short 0x00000000004567b2; rep movsb [rdi], [rsi]; ret; 
0x0000000043031a: adc al, 0xe; sub eax, edx; ret; 
0x0000000043252a: adc al, 0xe; sub eax, edx; vzeroupper; ret; 
0x000000004100c0: adc al, 0xeb; sbb eax, 0x441f0f; add [rbx+rcx*4+0x63], cl; or [rax-0x7d], cl; ret; 
0x00000000498b72: adc al, 0xf7; add rsp, 0x8; ret; 
0x0000000049507d: adc al, 0xf8; add cl, ch; out dx, al; idiv bh; jmp qword ptr [rsi+0x2e]; 
0x0000000044da4f: adc al, [rax]; add [rbp-0x77], cl; ret far; 
0x0000000042eef8: adc al, [rax]; add [rbp-0x77], cl; ret far; 
0x0000000049b86e: adc al, ch; in al, dx; sti; call far fword ptr [rbx+0x4c]; 
0x0000000048bf3b: adc al, ch; jmp far fword ptr [rsi+0xf66fff9]; 
0x0000000040aa37: adc al, ch; ret; 
0x0000000047c4dc: adc bh, dh; call qword ptr [rax-0x5e1f00d]; 
0x00000000431977: adc bl, al; nop [rax]; bsf eax, eax; lea rax, [rax+rdi+0x20]; ret; 
0x0000000048dde6: adc bl, ch; jge short 0x000000000048de33; shl ecx, cl; mov [rdi], r9; ret; 
0x0000000043b830: adc bl, dh; movq [rdi+0x10], mm0; lddqu xmm0, [rsi]; movdqu [rdi], xmm0; ret; 
0x0000000045754a: adc bl, dh; movq [rdi+rdx-0x10], mm0; movdqu [rdi+rdx-0x20], xmm0; ret; 
0x00000000453dd7: adc bl, dh; movq [rdi], mm0; mov [rdi+0x10], cx; lea rax, [rdi+0x11]; ret; 
0x00000000453737: adc bl, dh; movq [rdi], mm0; mov [rdi+0x10], cx; ret; 
0x00000000453e16: adc bl, dh; movq [rdi], mm0; mov [rdi+0x10], ecx; lea rax, [rdi+0x13]; ret; 
0x00000000453776: adc bl, dh; movq [rdi], mm0; mov [rdi+0x10], ecx; mov [rdi+0x14], dh; ret; 
0x00000000453766: adc bl, dh; movq [rdi], mm0; mov [rdi+0x10], ecx; ret; 
0x00000000453e97: adc bl, dh; movq [rdi], mm0; mov [rdi+0x10], rcx; lea rax, [rdi+0x17]; ret; 
0x000000004537f7: adc bl, dh; movq [rdi], mm0; mov [rdi+0x10], rcx; mov [rdi+0x18], dh; ret; 
0x000000004537d7: adc bl, dh; movq [rdi], mm0; mov [rdi+0x10], rcx; ret; 
0x00000000453f98: adc bl, dh; movq [rdi], mm0; movdqu [rdi+0x10], xmm2; lea rax, [rdi+0x1f]; ret; 
0x000000004538d8: adc bl, dh; movq [rdi], mm0; movdqu [rdi+0x10], xmm2; ret; 
0x0000000049683b: adc bl, dh; movups xmm0, [rip+0x23774]; divss xmm0, [rip+0x23770]; ret; 
0x0000000043b82f: adc bl, r14b; movq [rdi+0x10], mm0; lddqu xmm0, [rsi]; movdqu [rdi], xmm0; ret; 
0x00000000453dd6: adc bl, r14b; movq [rdi], mm0; mov [rdi+0x10], cx; lea rax, [rdi+0x11]; ret; 
0x00000000453736: adc bl, r14b; movq [rdi], mm0; mov [rdi+0x10], cx; ret; 
0x00000000453e15: adc bl, r14b; movq [rdi], mm0; mov [rdi+0x10], ecx; lea rax, [rdi+0x13]; ret; 
0x00000000453775: adc bl, r14b; movq [rdi], mm0; mov [rdi+0x10], ecx; mov [rdi+0x14], dh; ret; 
0x00000000453765: adc bl, r14b; movq [rdi], mm0; mov [rdi+0x10], ecx; ret; 
0x00000000453e96: adc bl, r14b; movq [rdi], mm0; mov [rdi+0x10], rcx; lea rax, [rdi+0x17]; ret; 
0x000000004537f6: adc bl, r14b; movq [rdi], mm0; mov [rdi+0x10], rcx; mov [rdi+0x18], dh; ret; 
0x000000004537d6: adc bl, r14b; movq [rdi], mm0; mov [rdi+0x10], rcx; ret; 
0x00000000447afd: adc byte ptr [rdx], 0x0; add [rbp-0x77], cl; ret far; 
0x00000000449c6d: adc byte ptr [rsi], 0x0; add [rbp-0x77], cl; ret far; 
0x0000000041eb7e: adc cl, [rax+0x39]; enter 0xf48, 0x4f; ror dword ptr [rax-0x7b], 0xd2; jne short 0x000000000041eb78; ret; 
0x0000000047cf36: adc cl, [rax+0x39]; enter 0xf48, 0x4f; ror dword ptr [rax-0x7b], 0xd2; jne short 0x000000000047cf30; ret; 
0x0000000041e2f6: adc cl, [rax+0x39]; ret far; 
0x0000000048532e: adc cl, [rax-0x73]; jl short 0x0000000000485339; and [rcx+rcx*4+0x4], cl; and al, 0xe8; ret; 
0x000000004027fb: adc cl, [rax-0x75]; adc eax, 0xc9895; mov rsi, [rsp+0x10]; mov edi, [rsp+0xc]; call rbp; 
0x0000000041f8bd: adc cl, [rax-0x75]; add rsp, 0x20; xor edx, edx; pop rbx; jmp rax; 
0x00000000499591: adc cl, [rax-0x75]; and al, 0x8; mov [rsp+0x10], r10; call rax; 
0x0000000045d8f9: adc cl, [rax-0x77]; and sil, al; sub [rcx], al; ret; 
0x0000000041af3d: adc cl, [rbx+0x42394c42]; cmovne rax, rcx; ret; 
0x0000000047305d: adc cl, [rdi]; mov esi, 0x77cf390e; jrcxz 0x00000000004730aa; mov eax, eax; ret; 
0x000000004738b4: adc cl, bl; in eax, 0xdf; loopne 0x0000000000473843; ret; 
0x000000004901f9: adc dh, [rbx-0xc]; movsxd rcx, ecx; add rax, rcx; sub rax, rdi; ret; 
0x000000004324da: adc dword ptr [rcx+0x31000002], 0xffffffc0; vzeroupper; ret; 
0x0000000048ffdd: adc eax, 0x11e; lea rax, [rip+0x67]; cmovne rax, rdx; ret; 
0x0000000042a03a: adc eax, 0x11ea1; cmovne rax, rdx; ret; 
0x0000000042a2de: adc eax, 0x170fd; cmovne rax, rdx; ret; 
0x0000000042a28e: adc eax, 0x1eb1d; cmovne rax, rdx; ret; 
0x0000000049cdb3: adc eax, 0x20478b48; test rax, rax; je short 0x000000000049cdc4; call rax; 
0x0000000042a414: adc eax, 0x24f07; lea rax, [rip+0x24ac0]; cmove rax, rdx; ret; 
0x00000000429664: adc eax, 0x26267; lea rax, [rip+0x25ea0]; cmove rax, rdx; ret; 
0x000000004296a4: adc eax, 0x263c7; lea rax, [rip+0x26000]; cmove rax, rdx; ret; 
0x0000000042942b: adc eax, 0x26ed0; cmovne rax, rdx; ret; 
0x000000004293cb: adc eax, 0x2760; cmovne rax, rdx; ret; 
0x0000000042a23b: adc eax, 0x27870; cmovne rax, rdx; ret; 
0x0000000048fd2a: adc eax, 0x29741; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000429f9c: adc eax, 0x2a6df; cmovne rax, rdx; ret; 
0x0000000042936b: adc eax, 0x2aff0; cmovne rax, rdx; ret; 
0x0000000042a399: adc eax, 0x2c382; lea rax, [rip+0x2c43b]; cmove rax, rdx; ret; 
0x0000000042a1d9: adc eax, 0x2c532; lea rax, [rip+0x2c5eb]; cmove rax, rdx; ret; 
0x0000000042a079: adc eax, 0x2c6a2; lea rax, [rip+0x2c75b]; cmove rax, rdx; ret; 
0x0000000042a32b: adc eax, 0x2c7c0; lea rax, [rip+0x2c809]; cmove rax, rdx; ret; 
0x0000000042a16b: adc eax, 0x2c970; lea rax, [rip+0x2c9b9]; cmove rax, rdx; ret; 
0x0000000042a00b: adc eax, 0x2cae0; lea rax, [rip+0x2cb29]; cmove rax, rdx; ret; 
0x0000000042a37d: adc eax, 0x2cbae; lea rax, [rip+0x2cbf7]; cmove rax, rdx; ret; 
0x0000000042a1bd: adc eax, 0x2cd5e; lea rax, [rip+0x2cda7]; cmove rax, rdx; ret; 
0x0000000042a05d: adc eax, 0x2cece; lea rax, [rip+0x2cf17]; cmove rax, rdx; ret; 
0x0000000042944d: adc eax, 0x2ceee; lea rax, [rip+0x2ce37]; cmovne rax, rdx; ret; 
0x0000000042a0f4: adc eax, 0x2d407; lea rax, [rip+0x2d390]; cmovne rax, rdx; ret; 
0x0000000042a0d5: adc eax, 0x2d536; lea rax, [rip+0x2d57f]; cmove rax, rdx; ret; 
0x0000000042a11d: adc eax, 0x2d66e; lea rax, [rip+0x2d6c7]; cmove rax, rdx; ret; 
0x0000000048fcbb: adc eax, 0x3b1a0; mov [rax], rdx; add rsp, 0x8; ret; 
0x00000000490300: adc eax, 0x3c193; add word ptr [rdx+rax*2], 0x1; ret; 
0x00000000486843: adc eax, 0x43cb8; xor eax, eax; add rsp, 0x8; ret; 
0x00000000459689: adc eax, 0x441f0f66; add [rax], al; mov edi, edx; mov eax, esi; syscall; 
0x0000000043bce4: adc eax, 0x46f00ff2; add eax, 0xef00ff2; movdqu [rdi+0x5], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000042a2d1: adc eax, 0x4802e680; lea eax, [rip+0x14eb4]; lea rdx, [rip+0x170fd]; cmovne rax, rdx; ret; 
0x0000000042a281: adc eax, 0x4802e680; lea eax, [rip+0x1c4c4]; lea rdx, [rip+0x1eb1d]; cmovne rax, rdx; ret; 
0x00000000429708: adc eax, 0x4802e680; lea eax, [rip+0x3acd]; lea rdx, [rip+0x5326]; cmovne rax, rdx; ret; 
0x00000000429f8f: adc eax, 0x4802e680; lea eax, [rip+0x8076]; lea rdx, [rip+0x2a6df]; cmovne rax, rdx; ret; 
0x000000004598d2: adc eax, 0x4881d; movsxd rax, [rdx+rbp*4]; add rax, rdx; notrack jmp rax; 
0x0000000045bf4a: adc eax, 0x49000007; mov edi, [rdi]; call rbx; 
0x000000004535a7: adc eax, 0x490004e4; movsxd ecx, [rbx+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000004393a7: adc eax, 0x49000678; movsxd edx, [rbx+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004374a7: adc eax, 0x49000697; movsxd edx, [rbx+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000429715: adc eax, 0x5326; cmovne rax, rdx; ret; 
0x0000000044d408: adc eax, 0x54573; movsxd r9, [r10+r9*4]; vpcmpeqb xmm0, xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000044ec98: adc eax, 0x56303; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000044ec73: adc eax, 0x56328; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000044b448: adc eax, 0x564f3; movsxd r9, [r10+r9*4]; pcmpeqb xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000044d2d8: adc eax, 0x57cc3; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000044d2b3: adc eax, 0x57ce8; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x00000000448eec: adc eax, 0x58a0f; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000044b308: adc eax, 0x59c93; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000044b2e3: adc eax, 0x59cb8; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000047f014: adc eax, 0x5a7; lea rax, [rip+0x270]; cmove rax, rdx; ret; 
0x0000000044688c: adc eax, 0x5b02f; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000448d98: adc eax, 0x5c203; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x00000000448d73: adc eax, 0x5c228; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x000000004451c8: adc eax, 0x5c6b3; movsxd r9, [r10+r9*4]; vpcmpeqb xmm0, xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000046dae9: adc eax, 0x5d2ca; cmp fs:[rdi], rsi; je short 0x000000000046daf8; ret; 
0x00000000443628: adc eax, 0x5e203; movsxd r9, [r10+r9*4]; pcmpeqb xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000446738: adc eax, 0x5e863; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000044671e: adc eax, 0x5e87d; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x000000004450b8: adc eax, 0x5fee3; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000044509e: adc eax, 0x5fefd; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x000000004414dc: adc eax, 0x6030f; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000443508: adc eax, 0x61a93; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x000000004434ee: adc eax, 0x61aad; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000043f28c: adc eax, 0x6251f; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x000000004413a8: adc eax, 0x63bf3; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000044138e: adc eax, 0x63c0d; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x00000000430258: adc eax, 0x70623; movsxd r9, [r10+r9*4]; pcmpeqb xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000042eaec: adc eax, 0x71d4f; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000042d28c: adc eax, 0x7356f; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000042bbbc: adc eax, 0x74bff; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000042a4bc: adc eax, 0x762bf; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000428c7c: adc eax, 0x77a77; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000042a3d4: adc eax, 0x7ae7; lea rax, [rip+0x7600]; cmove rax, rdx; ret; 
0x00000000429f44: adc eax, 0x7ca7; lea rax, [rip+0x7760]; cmove rax, rdx; ret; 
0x0000000041d89d: adc eax, 0x81a1a; movzx eax, al; movsxd rax, [r10+rax*4]; add rax, r10; notrack jmp rax; 
0x0000000041d997: adc eax, 0x81aec; movzx eax, al; movsxd rax, [r10+rax*4]; add rax, r10; notrack jmp rax; 
0x0000000042ec18: adc eax, 0x894d0000; ret far; 
0x0000000044d74f: adc eax, 0x894d0000; ret far; 
0x0000000041a14a: adc eax, 0x8b490000; mov bh, 0x90; add [rax], al; add cl, ch; ret far; 
0x000000004033af: adc eax, 0x9b410; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000401bec: adc eax, 0x9ffd3; movsxd rax, [rdx+rcx*4]; add rax, rdx; notrack jmp rax; 
0x00000000422924: adc eax, 0xa7237; lea rax, [rip+0xa7230]; add rsp, 0x10; pop rbp; ret; 
0x00000000421729: adc eax, 0xa83e2; ret; 
0x000000004585fb: adc eax, 0xa90; cmovne rax, rdx; ret; 
0x00000000420c3a: adc eax, 0xab3b1; mov [rip+0xab3b2], rbx; add dword ptr [rip+0xab3a7], 0x1; pop rbx; ret; 
0x0000000047efd4: adc eax, 0xb57; lea rax, [rip+0x8b0]; cmove rax, rdx; ret; 
0x0000000047e244: adc eax, 0xb97; lea rax, [rip+0x890]; cmove rax, rdx; ret; 
0x0000000040285b: adc eax, 0xc9838; mov edi, [rsp+0xc]; mov rsi, [rsp+0x10]; mov rax, [rsp+0x18]; call rax; 
0x000000004027fe: adc eax, 0xc9895; mov rsi, [rsp+0x10]; mov edi, [rsp+0xc]; call rbp; 
0x0000000047fa6a: adc eax, 0xe180d188; pcmpeqb mm3, [rsi]; ret; 
0x0000000046671a: adc eax, 0xe80003d1; insd [rdi], dx; ret far; 
0x0000000047cc67: adc eax, 0xebfff9ea; ret; 
0x0000000042a35a: adc eax, 0xf091; cmovne rax, rdx; ret; 
0x0000000042a19a: adc eax, 0xf231; cmovne rax, rdx; ret; 
0x000000004575c8: adc eax, 0xf880272; ret; 
0x00000000403100: adc eax, 0xff588d48; nop [rax]; call qword ptr [rbp+rbx*8]; 
0x00000000429f0d: adc eax, 0xfffffc9e; lea rax, [rip+0x2bed7]; cmove rax, rdx; ret; 
0x00000000401f38: adc eax, 0xfffffe68; mov [rax], rdx; mov rax, [rbp-0x8]; leave; ret; 
0x000000004575c3: adc eax, [rax+0x157701fa]; jb short 0x00000000004575cd; mov [rdi], cl; ret; 
0x0000000042d6b8: adc eax, [rax]; add [rbp-0x77], cl; ret far; 
0x0000000047650c: adc eax, [rax]; add [rcx-0x8ef63], cl; dec dword ptr [rax-0x77]; ret far; 
0x00000000421a18: adc eax, [rbp+0x1]; sbb [r8+0x39], cl; ret; 
0x0000000045f0d1: adc eax, [rdx]; add [rcx], bh; ret; 
0x0000000048f42d: adc eax, eax; ret; 
0x0000000048f566: adc eax, edx; pop rbp; pop rbx; ret; 
0x0000000041f86e: adc ebp, ebx; ret far; 
0x0000000041086f: adc ecx, [rax+0xf]; mov esi, 0x83480143; ret; 
0x000000004973e2: adc ecx, [rax-0x77]; ror byte ptr [rax-0x7d], 0x1; ret; 
0x00000000410379: adc ecx, [rax-0x7d]; ret; 
0x00000000486d25: adc ecx, [rbx+rcx*4+0x33]; mov rax, [rbx+0x10]; add rax, [r13]; call rax; 
0x0000000048a3ac: adc ecx, [rbx+rcx*4+0x5]; sbb al, 0x23; add al, 0x0; mov rax, r8; ret; 
0x0000000046ac34: adc ecx, [rcx+0x29d231fb]; ret; 
0x00000000411866: adc ecx, [rcx+rax-0x6]; call qword ptr [rax+r9*8]; 
0x000000004876c2: adc ecx, [rcx-0x75]; add ecx, [rax-0x7d]; ret; 
0x0000000048bcfc: adc ecx, [rdi]; mov dh, 0x45; add cl, [rax-0x7d]; ret; 
0x00000000434d3c: adc ecx, [rdi]; sub [rdi-0x20], esp; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000419984: adc edi, 0x6; add [rax], al; lea rsi, [rsp+0x30]; mov rdi, r15; call qword ptr [r14+0x90]; 
0x000000004996e4: adc edi, [rax+0x4]; cmp dil, 0x3; jne short 0x0000000000499710; add rsp, 0x8; ret; 
0x000000004969b4: adc edi, [rax]; jne short 0x00000000004969e0; mov rax, [rsi+0xa8]; add rsp, 0x8; ret; 
0x00000000401ccc: adc edi, [rax]; test rax, rax; je short 0x0000000000401ce0; mov edi, 0x4caed0; jmp rax; 
0x00000000433fb6: adc edi, [rsi]; jmp rdx; 
0x0000000041209c: adc edi, edi; call qword ptr [rax-0x3f7c3977]; 
0x00000000461f7f: adc edi, edx; jmp qword ptr [rsi+0x66]; 
0x00000000493c75: adc edx, ebx; mov [rdi+0x8], r10; mov eax, ecx; adc eax, eax; ret; 
0x0000000045bad9: adc gs:[rbp-0x7b], cl; in al, 0x75; sub [rax-0x75], cl; jge short 0x000000000045bae4; call rbx; 
0x00000000493c73: adc r10, r11; mov [rdi+0x8], r10; mov eax, ecx; adc eax, eax; ret; 
0x00000000457549: adc r11b, r14b; movq [rdi+rdx-0x10], mm0; movdqu [rdi+rdx-0x20], xmm0; ret; 
0x0000000048f565: adc rax, rdx; pop rbp; pop rbx; ret; 
0x0000000043eaf9: add [r10-0x2f], r12; jl short 0x000000000043eb47; adc [rcx-0x2], edx; vmovups [r9-0x40], zmm3; ret; 
0x00000000495688: add [r13+0x31], r8b; jmp qword ptr [rsi-0x7d]; 
0x0000000045a96f: add [r13+rbp-0x48], sil; add [rcx], eax; add [rax], al; syscall; 
0x0000000041f947: add [r8+0x1], r15b; movups [rbp+0x38], xmm0; pop rbp; pop r12; ret; 
0x00000000468197: add [r8+0x39], r9d; ret; 
0x00000000420785: add [r8-0x77], r9b; imul esp, [rax+0x5b], 0x5d; pop r12; ret; 
0x00000000406844: add [r8-0x7d], ecx; ret; 
0x00000000410a12: add [r8-0x7d], rcx; ret; 
0x0000000047e9fa: add [r8], r8b; add [rax], al; add bl, ch; ret far; 
0x0000000047e2af: add [r9+rcx*4-0x20], r9b; pop rbp; pop r12; pop r13; ret; 
0x000000004545ae: add [rax+0x1478d48], dl; ret; 
0x0000000045de66: add [rax+0x15], bh; syscall; 
0x0000000048f6ac: add [rax+0x1], bh; mov dword ptr [rdx], 0xffffc002; ret; 
0x0000000041f948: add [rax+0x1], bh; movups [rbp+0x38], xmm0; pop rbp; pop r12; ret; 
0x0000000048f5c0: add [rax+0x1], bh; ret; 
0x00000000431734: add [rax+0x1], cl; clc; add rax, rcx; ret; 
0x00000000431c71: add [rax+0x1], cl; clc; add rax, rcx; vzeroupper; ret; 
0x0000000046bb98: add [rax+0x1], cl; fsubp st(0), st; call qword ptr [rcx+rdi*8-0x1]; 
0x0000000045d621: add [rax+0x1], cl; ret far; 
0x00000000421ea0: add [rax+0x1], cl; ret; 
0x00000000486995: add [rax+0x21], cl; test dword ptr [rax+0x21], 0xc73948f0; jne short 0x00000000004869a8; pop rbx; ret; 
0x00000000453151: add [rax+0x28d4802], ecx; ret; 
0x0000000041fdd7: add [rax+0x29], cl; enter 0xe883, 0x1; ret; 
0x00000000403f97: add [rax+0x29], cl; ret far; 
0x00000000475a0e: add [rax+0x29], cl; ret; 
0x00000000425b1b: add [rax+0x29], cl; ror byte ptr [rax+0x39], 0x1; ret; 
0x0000000048f733: add [rax+0x2], bh; ret; 
0x0000000048372e: add [rax+0x2f7c8043], dl; jmp far fword ptr [rdi]; 
0x000000004951bd: add [rax+0x31ca0], al; add [rdi-0x2c517], bl; jmp qword ptr [rsi+0xf]; 
0x000000004681e4: add [rax+0x39480751], ecx; ret; 
0x0000000049953c: add [rax+0x39], cl; or [rdi+0x2], r14b; sbb eax, eax; ret; 
0x00000000465298: add [rax+0x39], cl; ret far; 
0x0000000041035f: add [rax+0x39], cl; ret; 
0x0000000049b980: add [rax+0x39], ecx; ret far; 
0x00000000424f1b: add [rax+0x39], ecx; ret; 
0x0000000041035e: add [rax+0x39], r9b; ret; 
0x00000000457a77: add [rax+0x485bf0e5], al; cmovne eax, edx; ret; 
0x00000000429360: add [rax+0x48], al; lea eax, [rip+0x25947]; lea rdx, [rip+0x2aff0]; cmovne rax, rdx; ret; 
0x0000000045a7c1: add [rax+0x48], bh; syscall; 
0x0000000048aa75: add [rax+0x59], bh; mov rbp, rsp; mov rsi, rbp; syscall; 
0x0000000047bc41: add [rax+0x63], cl; adc al, 0x91; add rdx, rcx; notrack jmp rdx; 
0x000000004177ed: add [rax+0x63], cl; add al, 0x81; add rax, rcx; notrack jmp rax; 
0x000000004033b3: add [rax+0x63], cl; add al, 0x82; add rax, rdx; notrack jmp rax; 
0x00000000401bf0: add [rax+0x63], cl; add al, 0x8a; add rax, rdx; notrack jmp rax; 
0x000000004598d6: add [rax+0x63], cl; add al, 0xaa; add rax, rdx; notrack jmp rax; 
0x00000000457998: add [rax+0x63], cl; add al, 0xbe; add rax, rsi; notrack jmp rax; 
0x00000000402afe: add [rax+0x63], cl; or al, 0x8e; add rcx, rsi; notrack jmp rcx; 
0x0000000047bbdd: add [rax+0x63], cl; or al, 0x8f; add rcx, rdi; notrack jmp rcx; 
0x00000000488e66: add [rax+0x63], cl; ret; 
0x00000000453c4f: add [rax+0x78d4837], cl; ret; 
0x0000000045b80b: add [rax+0x9], ecx; ror byte ptr [rcx-0x77], 0x1; or [r9-0x75], cl; add [rbx+0x94901e0], eax; ret; 
0x00000000402607: add [rax+0x9e], bh; syscall; 
0x0000000049cf21: add [rax+0xca], bh; lea rdi, [rip+0x2f3b2]; syscall; 
0x00000000475591: add [rax+0xca], bh; lea rdi, [rip+0x56d52]; syscall; 
0x0000000047530d: add [rax+0xca], bh; lea rdi, [rip+0x56fd2]; syscall; 
0x00000000473289: add [rax+0xca], bh; lea rdi, [rip+0x5904e]; syscall; 
0x00000000473149: add [rax+0xca], bh; lea rdi, [rip+0x5918e]; syscall; 
0x0000000046f681: add [rax+0xca], bh; lea rdi, [rip+0x5cc52]; syscall; 
0x0000000046f5bc: add [rax+0xca], bh; lea rdi, [rip+0x5cd17]; syscall; 
0x0000000046f41a: add [rax+0xca], bh; lea rdi, [rip+0x5ceb9]; syscall; 
0x0000000046f340: add [rax+0xca], bh; lea rdi, [rip+0x5cf93]; syscall; 
0x00000000461b71: add [rax+0xca], bh; lea rdi, [rip+0x6b0f2]; syscall; 
0x00000000461a05: add [rax+0xca], bh; lea rdi, [rip+0x6b25e]; syscall; 
0x000000004618e5: add [rax+0xca], bh; lea rdi, [rip+0x6b37e]; syscall; 
0x00000000458bed: add [rax+0xca], bh; lea rdi, [rip+0x74076]; syscall; 
0x00000000428e0d: add [rax+0xca], bh; lea rdi, [rip+0xa0d46]; syscall; 
0x0000000042620d: add [rax+0xca], bh; lea rdi, [rip+0xa3946]; syscall; 
0x000000004261ad: add [rax+0xca], bh; lea rdi, [rip+0xa39a6]; syscall; 
0x00000000425ded: add [rax+0xca], bh; lea rdi, [rip+0xa3d66]; syscall; 
0x00000000425b8d: add [rax+0xca], bh; lea rdi, [rip+0xa3fc6]; syscall; 
0x000000004255b5: add [rax+0xca], bh; lea rdi, [rip+0xa459e]; syscall; 
0x0000000042557d: add [rax+0xca], bh; lea rdi, [rip+0xa45d6]; syscall; 
0x0000000042716d: add [rax+0xca], bh; lea rdi, [rip+0xa4ef6]; syscall; 
0x00000000426721: add [rax+0xca], bh; lea rdi, [rip+0xa5932]; syscall; 
0x0000000042287e: add [rax+0xca], bh; lea rdi, [rip+0xa97d5]; syscall; 
0x0000000042284d: add [rax+0xca], bh; lea rdi, [rip+0xa9816]; syscall; 
0x000000004225cd: add [rax+0xca], bh; lea rdi, [rip+0xa9a96]; syscall; 
0x000000004220a9: add [rax+0xca], bh; lea rdi, [rip+0xa9fba]; syscall; 
0x00000000420cbf: add [rax+0xca], bh; lea rdi, [rip+0xab324]; syscall; 
0x000000004206ff: add [rax+0xca], bh; lea rdi, [rip+0xab8e4]; syscall; 
0x00000000420393: add [rax+0xca], bh; lea rdi, [rip+0xabc50]; syscall; 
0x00000000420051: add [rax+0xca], bh; lea rdi, [rip+0xabf92]; syscall; 
0x0000000041eaeb: add [rax+0xca], bh; lea rdi, [rip+0xad4f8]; syscall; 
0x0000000041e84b: add [rax+0xca], bh; lea rdi, [rip+0xad798]; syscall; 
0x0000000041e4f7: add [rax+0xca], bh; lea rdi, [rip+0xadaec]; syscall; 
0x0000000041866d: add [rax+0xca], bh; lea rdi, [rip+0xb45f6]; syscall; 
0x0000000041077c: add [rax+0xca], bh; lea rdi, [rip+0xbc387]; syscall; 
0x0000000041063c: add [rax+0xca], bh; lea rdi, [rip+0xbc4c7]; syscall; 
0x00000000410405: add [rax+0xca], bh; lea rdi, [rip+0xbc6fe]; syscall; 
0x000000004103ca: add [rax+0xca], bh; lea rdi, [rip+0xbc739]; syscall; 
0x000000004102e6: add [rax+0xca], bh; lea rdi, [rip+0xbc81d]; syscall; 
0x00000000406d1a: add [rax+0xca], bh; lea rdi, [rip+0xc4e51]; syscall; 
0x00000000405377: add [rax+0xca], bh; lea rdi, [rip+0xc67bc]; syscall; 
0x000000004041f8: add [rax+0xca], bh; lea rdi, [rip+0xc7893]; syscall; 
0x000000004041ca: add [rax+0xca], bh; lea rdi, [rip+0xc78c1]; syscall; 
0x0000000040407e: add [rax+0xca], bh; lea rdi, [rip+0xc7a0d]; syscall; 
0x000000004012d6: add [rax+0xca], bh; lea rdi, [rip+0xca8ad]; syscall; 
0x00000000401445: add [rax+0xca], bh; syscall; 
0x0000000047e1ac: add [rax+0xca], bh; xor r10, r10; add rdi, 0x308; mov esi, 0x80; syscall; 
0x0000000046ddee: add [rax+0xd], bh; syscall; 
0x0000000040f7d3: add [rax+0xe], bh; syscall; 
0x000000004059af: add [rax+0xf000578], al; test [rsi], esp; add [rax], eax; add [rax-0x80], al; jmp qword ptr [rdi+rcx-0x7c]; 
0x0000000041fdc3: add [rax+0xf740a39], eax; cmp rcx, rsi; ja short 0x000000000041fdc0; lea eax, [rdx+rdi]; ret; 
0x0000000047eb39: add [rax+0xf], cl; mov ebp, 0xf80148c0; ret; 
0x0000000048f73f: add [rax+0xf], cl; mov edx, 0x894830e8; or [r8+0x2], r15b; ret; 
0x0000000042167a: add [rax+0xf], cl; shl byte ptr [rcx], 0x1; ror byte ptr [rax+0x39], 0xfa; setae al; ret; 
0x000000004969c7: add [rax+rax*2], bh; jne short 0x0000000000496a00; mov rax, [rsi+0xb8]; add rsp, 0x8; ret; 
0x000000004806d1: add [rax+rax], cl; add [rax], al; mov eax, 0xffffffff; ret; 
0x000000004248ec: add [rax+rax], cl; add [rax], al; mov rax, r8; ret; 
0x000000004687f1: add [rax+rcx*4-0x7c], eax; adc al, 0x85; add [rax], al; add [rax+0x39], cl; ret far; 
0x00000000428883: add [rax+rdi-0x3e], eax; jne short 0x0000000000428870; sub rax, 0x10; ret; 
0x00000000499767: add [rax+rdx*2], bh; jne short 0x0000000000499793; xor eax, eax; add rsp, 0x8; ret; 
0x000000004997c7: add [rax+rdx*2], bh; jne short 0x00000000004997f3; xor eax, eax; add rsp, 0x8; ret; 
0x0000000049b177: add [rax+rdx*2], bh; jne short 0x000000000049b19b; xor eax, eax; add rsp, 0x8; ret; 
0x00000000470d8a: add [rax-0x13b43], al; jmp qword ptr [rsi+0xf]; 
0x0000000046f47d: add [rax-0x1], bh; pop rbp; pop r12; pop r13; ret; 
0x0000000041a18f: add [rax-0x1], bh; pop rbp; ret; 
0x0000000041af4f: add [rax-0x1], bh; ret; 
0x0000000041bb66: add [rax-0x1], dil; ret; 
0x00000000420cde: add [rax-0x39], cl; add eax, 0xab30e; add [rax], al; add [rax], al; ret; 
0x00000000410358: add [rax-0x39], cl; rcl al, 0xb5; add [rax+0x39], r9b; ret; 
0x00000000402617: add [rax-0x39], cl; ret; 
0x0000000047fadf: add [rax-0x39], cl; rol byte ptr [rbx], 0x0; add [rax], al; ret; 
0x0000000047fb1f: add [rax-0x39], cl; rol byte ptr [rdi], 0x0; add [rax], al; ret; 
0x0000000047facf: add [rax-0x39], cl; rol byte ptr [rdx], 0x0; add [rax], al; ret; 
0x0000000047fb0f: add [rax-0x39], cl; rol byte ptr [rsi], 0x0; add [rax], al; ret; 
0x0000000046dd1e: add [rax-0x39], cl; ror byte ptr [rdi], 0x0; add [rax], al; syscall; 
0x00000000410357: add [rax-0x39], r9b; rcl al, 0xb5; add [rax+0x39], r9b; ret; 
0x0000000041996e: add [rax-0x39], r9b; ret; 
0x0000000045459e: add [rax-0x3cf872b8], dl; nop [rax+rax]; nop; lea rax, [rdi+0x1]; ret; 
0x0000000044f9de: add [rax-0x3f43f00d], dl; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x0000000041185e: add [rax-0x3f], cl; loop 0x0000000000411865; lea rcx, [rbx+rdx]; add rdx, r15; call qword ptr [rax+r9*8]; 
0x00000000475d1e: add [rax-0x3f], cl; loop 0x0000000000475d25; lea rcx, [rbx+rdx]; add rdx, r15; call qword ptr [rax+r9*8]; 
0x0000000048f68f: add [rax-0x3ffe], bh; sub eax, ecx; mov [rdx], eax; mov eax, 0x1; ret; 
0x0000000048f6a8: add [rax-0x47ff76b7], al; add [rax], eax; add [rax], al; mov dword ptr [rdx], 0xffffc002; ret; 
0x00000000415b7f: add [rax-0x50743], al; jmp qword ptr [rax]; 
0x00000000415256: add [rax-0x50743], eax; jmp qword ptr [rax]; 
0x0000000045acbe: add [rax-0x5e1f00d], dl; mov eax, 0x1c; syscall; 
0x0000000048045e: add [rax-0x5e1f00d], dl; mov eax, 0x66; syscall; 
0x0000000045ac8e: add [rax-0x5e1f00d], dl; mov eax, 0xa; syscall; 
0x0000000045ac5e: add [rax-0x5e1f00d], dl; mov eax, 0xb; syscall; 
0x00000000498b0e: add [rax-0x5e1f00d], dl; mov rax, [rdi+0x90]; ret; 
0x0000000045908e: add [rax-0x5e1f00d], dl; test rsi, rsi; jne short 0x000000000045909d; xor rax, rax; ret; 
0x000000004154d8: add [rax-0x68], cl; movzx eax, byte ptr [rbx+rax]; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000042a037: add [rax-0x73], cl; adc eax, 0x11ea1; cmovne rax, rdx; ret; 
0x0000000042a2db: add [rax-0x73], cl; adc eax, 0x170fd; cmovne rax, rdx; ret; 
0x0000000042a28b: add [rax-0x73], cl; adc eax, 0x1eb1d; cmovne rax, rdx; ret; 
0x00000000429428: add [rax-0x73], cl; adc eax, 0x26ed0; cmovne rax, rdx; ret; 
0x000000004293c8: add [rax-0x73], cl; adc eax, 0x2760; cmovne rax, rdx; ret; 
0x0000000042a238: add [rax-0x73], cl; adc eax, 0x27870; cmovne rax, rdx; ret; 
0x00000000429f99: add [rax-0x73], cl; adc eax, 0x2a6df; cmovne rax, rdx; ret; 
0x00000000429368: add [rax-0x73], cl; adc eax, 0x2aff0; cmovne rax, rdx; ret; 
0x00000000429712: add [rax-0x73], cl; adc eax, 0x5326; cmovne rax, rdx; ret; 
0x000000004585f8: add [rax-0x73], cl; adc eax, 0xa90; cmovne rax, rdx; ret; 
0x0000000042a357: add [rax-0x73], cl; adc eax, 0xf091; cmovne rax, rdx; ret; 
0x0000000042a197: add [rax-0x73], cl; adc eax, 0xf231; cmovne rax, rdx; ret; 
0x0000000047f209: add [rax-0x73], cl; add [rbp+rcx*4+0x4c], rcx; and al, 0x28; call rbx; 
0x000000004581cc: add [rax-0x73], cl; add al, 0x4c; lea ecx, [rsp+0x20]; call rbx; 
0x0000000044ecfe: add [rax-0x73], cl; add al, 0x7; cmp [rax], sil; cmovne rax, rdx; ret; 
0x00000000486371: add [rax-0x73], cl; add al, 0x90; mov [rdi+0x2f4], edx; mov [rdi+0x308], rax; ret; 
0x0000000048633f: add [rax-0x73], cl; add al, 0x90; mov [rdi+0x2fc], ecx; mov [rdi+0x310], rax; ret; 
0x000000004545df: add [rax-0x73], cl; add al, 0xc3; nop [rax+rax]; lea rax, [rdi+0x5]; ret; 
0x0000000042a418: add [rax-0x73], cl; add eax, 0x24ac0; cmove rax, rdx; ret; 
0x00000000429668: add [rax-0x73], cl; add eax, 0x25ea0; cmove rax, rdx; ret; 
0x000000004296a8: add [rax-0x73], cl; add eax, 0x26000; cmove rax, rdx; ret; 
0x0000000047f018: add [rax-0x73], cl; add eax, 0x270; cmove rax, rdx; ret; 
0x0000000042a39d: add [rax-0x73], cl; add eax, 0x2c43b; cmove rax, rdx; ret; 
0x0000000042a1dd: add [rax-0x73], cl; add eax, 0x2c5eb; cmove rax, rdx; ret; 
0x0000000042a07d: add [rax-0x73], cl; add eax, 0x2c75b; cmove rax, rdx; ret; 
0x0000000042a32f: add [rax-0x73], cl; add eax, 0x2c809; cmove rax, rdx; ret; 
0x0000000042a16f: add [rax-0x73], cl; add eax, 0x2c9b9; cmove rax, rdx; ret; 
0x0000000042a00f: add [rax-0x73], cl; add eax, 0x2cb29; cmove rax, rdx; ret; 
0x0000000042a381: add [rax-0x73], cl; add eax, 0x2cbf7; cmove rax, rdx; ret; 
0x0000000042a1c1: add [rax-0x73], cl; add eax, 0x2cda7; cmove rax, rdx; ret; 
0x00000000429451: add [rax-0x73], cl; add eax, 0x2ce37; cmovne rax, rdx; ret; 
0x0000000042a061: add [rax-0x73], cl; add eax, 0x2cf17; cmove rax, rdx; ret; 
0x0000000042a0f8: add [rax-0x73], cl; add eax, 0x2d390; cmovne rax, rdx; ret; 
0x0000000042a0d9: add [rax-0x73], cl; add eax, 0x2d57f; cmove rax, rdx; ret; 
0x0000000042a121: add [rax-0x73], cl; add eax, 0x2d6c7; cmove rax, rdx; ret; 
0x000000004545ef: add [rax-0x73], cl; add eax, 0x2e6666c3; nop [rax+rax]; lea rax, [rdi+0x6]; ret; 
0x00000000422a2d: add [rax-0x73], cl; add eax, 0x319b; mov [rip+0xa7104], rax; ret; 
0x0000000048f82e: add [rax-0x73], cl; add eax, 0x3cb69; mov [rip+0x3cb4a], rax; ret; 
0x0000000048ffe1: add [rax-0x73], cl; add eax, 0x67; cmovne rax, rdx; ret; 
0x0000000042a3d8: add [rax-0x73], cl; add eax, 0x7600; cmove rax, rdx; ret; 
0x00000000429f48: add [rax-0x73], cl; add eax, 0x7760; cmove rax, rdx; ret; 
0x0000000047e248: add [rax-0x73], cl; add eax, 0x890; cmove rax, rdx; ret; 
0x0000000047efd8: add [rax-0x73], cl; add eax, 0x8b0; cmove rax, rdx; ret; 
0x00000000422928: add [rax-0x73], cl; add eax, 0xa7230; add rsp, 0x10; pop rbp; ret; 
0x00000000426837: add [rax-0x73], cl; add eax, 0xfffff391; mov [rip+0xa32fa], rax; ret; 
0x000000004545bf: add [rax-0x73], cl; add r8b, r11b; nop [rax+rax]; lea rax, [rdi+0x3]; ret; 
0x000000004545cf: add [rax-0x73], cl; add r8d, r11d; nop [rax+rax]; lea rax, [rdi+0x4]; ret; 
0x00000000487525: add [rax-0x73], cl; cmp eax, 0x2d1cb; movsxd rax, [rdi+r12*4]; add rax, rdi; notrack jmp rax; 
0x0000000049cf26: add [rax-0x73], cl; cmp eax, 0x2f3b2; syscall; 
0x000000004767bf: add [rax-0x73], cl; cmp eax, 0x3c059; lea rsi, [rip+0x503f2]; movzx eax, byte ptr [rdi+rax]; jmp qword ptr [rsi+rax*8]; 
0x00000000475596: add [rax-0x73], cl; cmp eax, 0x56d52; syscall; 
0x00000000475312: add [rax-0x73], cl; cmp eax, 0x56fd2; syscall; 
0x0000000047328e: add [rax-0x73], cl; cmp eax, 0x5904e; syscall; 
0x0000000047314e: add [rax-0x73], cl; cmp eax, 0x5918e; syscall; 
0x0000000046f686: add [rax-0x73], cl; cmp eax, 0x5cc52; syscall; 
0x0000000046f5c1: add [rax-0x73], cl; cmp eax, 0x5cd17; syscall; 
0x0000000046f41f: add [rax-0x73], cl; cmp eax, 0x5ceb9; syscall; 
0x0000000046f345: add [rax-0x73], cl; cmp eax, 0x5cf93; syscall; 
0x00000000461b76: add [rax-0x73], cl; cmp eax, 0x6b0f2; syscall; 
0x00000000461a0a: add [rax-0x73], cl; cmp eax, 0x6b25e; syscall; 
0x000000004618ea: add [rax-0x73], cl; cmp eax, 0x6b37e; syscall; 
0x00000000458bf2: add [rax-0x73], cl; cmp eax, 0x74076; syscall; 
0x00000000428e12: add [rax-0x73], cl; cmp eax, 0xa0d46; syscall; 
0x00000000426212: add [rax-0x73], cl; cmp eax, 0xa3946; syscall; 
0x000000004261b2: add [rax-0x73], cl; cmp eax, 0xa39a6; syscall; 
0x00000000425df2: add [rax-0x73], cl; cmp eax, 0xa3d66; syscall; 
0x00000000425b92: add [rax-0x73], cl; cmp eax, 0xa3fc6; syscall; 
0x000000004255ba: add [rax-0x73], cl; cmp eax, 0xa459e; syscall; 
0x00000000425582: add [rax-0x73], cl; cmp eax, 0xa45d6; syscall; 
0x00000000427172: add [rax-0x73], cl; cmp eax, 0xa4ef6; syscall; 
0x00000000426726: add [rax-0x73], cl; cmp eax, 0xa5932; syscall; 
0x00000000422883: add [rax-0x73], cl; cmp eax, 0xa97d5; syscall; 
0x00000000422852: add [rax-0x73], cl; cmp eax, 0xa9816; syscall; 
0x000000004225d2: add [rax-0x73], cl; cmp eax, 0xa9a96; syscall; 
0x000000004220ae: add [rax-0x73], cl; cmp eax, 0xa9fba; syscall; 
0x00000000420cc4: add [rax-0x73], cl; cmp eax, 0xab324; syscall; 
0x00000000420704: add [rax-0x73], cl; cmp eax, 0xab8e4; syscall; 
0x00000000420398: add [rax-0x73], cl; cmp eax, 0xabc50; syscall; 
0x00000000420056: add [rax-0x73], cl; cmp eax, 0xabf92; syscall; 
0x0000000041eaf0: add [rax-0x73], cl; cmp eax, 0xad4f8; syscall; 
0x0000000041e850: add [rax-0x73], cl; cmp eax, 0xad798; syscall; 
0x0000000041e4fc: add [rax-0x73], cl; cmp eax, 0xadaec; syscall; 
0x00000000418672: add [rax-0x73], cl; cmp eax, 0xb45f6; syscall; 
0x00000000410781: add [rax-0x73], cl; cmp eax, 0xbc387; syscall; 
0x00000000410641: add [rax-0x73], cl; cmp eax, 0xbc4c7; syscall; 
0x0000000041040a: add [rax-0x73], cl; cmp eax, 0xbc6fe; syscall; 
0x000000004103cf: add [rax-0x73], cl; cmp eax, 0xbc739; syscall; 
0x000000004102eb: add [rax-0x73], cl; cmp eax, 0xbc81d; syscall; 
0x00000000406d1f: add [rax-0x73], cl; cmp eax, 0xc4e51; syscall; 
0x0000000040537c: add [rax-0x73], cl; cmp eax, 0xc67bc; syscall; 
0x000000004041fd: add [rax-0x73], cl; cmp eax, 0xc7893; syscall; 
0x000000004041cf: add [rax-0x73], cl; cmp eax, 0xc78c1; syscall; 
0x00000000404083: add [rax-0x73], cl; cmp eax, 0xc7a0d; syscall; 
0x000000004012db: add [rax-0x73], cl; cmp eax, 0xca8ad; syscall; 
0x00000000419988: add [rax-0x73], cl; je short 0x00000000004199b1; xor [rcx+rcx*4-0x1], cl; call qword ptr [r14+0x90]; 
0x0000000041bee0: add [rax-0x73], cl; je short 0x000000000041bf09; adc [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x90]; 
0x0000000041c54a: add [rax-0x73], cl; je short 0x000000000041c573; adc [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x90]; 
0x000000004968ba: add [rax-0x73], cl; or [rcx+rcx*4+0x1], cl; ret; 
0x0000000045464f: add [rax-0x73], cl; or al, 0xc3; nop [rax+rax]; lea rax, [rdi+0xd]; ret; 
0x0000000045465f: add [rax-0x73], cl; or eax, 0x2e6666c3; nop [rax+rax]; lea rax, [rdi+0xe]; ret; 
0x0000000047bc3a: add [rax-0x73], cl; or eax, 0x37a56; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x000000004177e6: add [rax-0x73], cl; or eax, 0x878ea; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x0000000041b854: add [rax-0x73], cl; or eax, 0xaf844; mov [rdx+0xe0], rcx; pop rbx; ret; 
0x0000000045460f: add [rax-0x73], cl; or r11b, r8b; nop [rax+rax]; lea rax, [rdi+0x9]; ret; 
0x0000000045461f: add [rax-0x73], cl; or r11d, r8d; nop [rax+rax]; lea rax, [rdi+0xa]; ret; 
0x0000000045462f: add [rax-0x73], cl; or r8b, r11b; nop [rax+rax]; lea rax, [rdi+0xb]; ret; 
0x0000000045463f: add [rax-0x73], cl; or r8d, r11d; nop [rax+rax]; lea rax, [rdi+0xc]; ret; 
0x0000000045b286: add [rax-0x73], cl; push rbx; or [rax-0x7d], cl; ret; 
0x00000000486fe8: add [rax-0x73], cl; xor eax, 0x2d670; movsxd rax, [rsi+r12*4]; add rax, rsi; notrack jmp rax; 
0x00000000493487: add [rax-0x73], cl; xor eax, 0x397b1; mov edi, 0x3005; mov eax, 0x9e; syscall; 
0x00000000457991: add [rax-0x73], cl; xor eax, 0x4a187; movsxd rax, [rsi+rdi*4]; add rax, rsi; notrack jmp rax; 
0x000000004767c6: add [rax-0x73], cl; xor eax, 0x503f2; movzx eax, byte ptr [rdi+rax]; jmp qword ptr [rsi+rax*8]; 
0x000000004876bf: add [rax-0x75], cl; adc ecx, [rcx-0x75]; add ecx, [rax-0x7d]; ret; 
0x0000000045192f: add [rax-0x75], cl; add [rax-0x77], ecx; add cl, [rax-0x77]; clc; ret; 
0x000000004963ab: add [rax-0x75], cl; add al, 0x24; add rsp, 0x38; ret; 
0x00000000478aea: add [rax-0x75], cl; add al, 0xc6; jmp rax; 
0x000000004149d4: add [rax-0x75], cl; add al, 0xc8; jmp rax; 
0x0000000049cade: add [rax-0x75], cl; add al, 0xd8; test rax, rax; je short 0x000000000049caea; call rax; 
0x0000000046c212: add [rax-0x75], cl; add al, 0xe8; test rax, rax; je short 0x000000000046c21e; call rax; 
0x000000004796ff: add [rax-0x75], cl; add al, 0xf0; jmp rax; 
0x00000000419ec6: add [rax-0x75], cl; and [r11+rcx*4+0x6d], r9b; sbb [rax-0x77], cl; ret far; 
0x0000000048d5a8: add [rax-0x75], cl; and al, 0x10; mov rdi, [rsp+0x18]; call rax; 
0x0000000048d54b: add [rax-0x75], cl; and al, 0x10; mov rdi, [rsp+0x18]; call rcx; 
0x000000004650fd: add [rax-0x75], cl; and al, 0x20; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x48]; call r13; 
0x00000000459eb0: add [rax-0x75], cl; and al, 0x8; add rsp, 0x28; ret; 
0x000000004269bf: add [rax-0x75], cl; je short 0x00000000004269e8; sbb [rbx+0x5d], bl; pop r12; jmp rax; 
0x000000004270ef: add [rax-0x75], cl; je short 0x0000000000427118; cmp [rcx+rcx*4-0x9], cl; call rax; 
0x0000000042830f: add [rax-0x75], cl; je short 0x0000000000428338; sub [rcx+rcx*4-0x19], cl; call rax; 
0x0000000049656c: add [rax-0x75], cl; je short 0x0000000000496595; adc [rcx-0x77], cl; ret; 
0x00000000487276: add [rax-0x75], cl; mov [r8-0x7b], r9b; ror byte ptr [rdi], 0x84; ret; 
0x0000000043623f: add [rax-0x75], cl; mov rdx, [rsi-0x8]; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043643f: add [rax-0x75], cl; mov rdx, [rsi-0x8]; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000480d0f: add [rax-0x75], cl; or [r8-0x7b], cl; shl byte ptr [rdi+0x48], 0x89; ret; 
0x00000000495681: add [rax-0x75], cl; or [rax+0x3], cl; add [r13+0x31], r8b; jmp qword ptr [rsi-0x7d]; 
0x00000000499090: add [rax-0x75], cl; push rbp; or al, ch; idiv dil; jmp qword ptr [rsi+0xf]; 
0x0000000041b9e4: add [rax-0x75], cl; push rbx; mov rdi, rbx; sub rdx, rsi; call qword ptr [r12+0x70]; 
0x0000000041b5cf: add [rax-0x75], cl; push rbx; or [rax-0x75], cl; xor ecx, [rax-0x7d]; ret; 
0x000000004358ee: add [rax-0x75], cl; push rsi; clc; mov [rdi-0x8], rdx; ret; 
0x0000000043b3ce: add [rax-0x75], cl; push rsi; test dword ptr [rbx-0x76b703b2], 0x4f89f757; cld; ret; 
0x00000000410267: add [rax-0x75], cl; sbb [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x00000000435aaf: add [rax-0x75], cl; test qword ptr [rbx-0x76b703aa], 0x5789f74f; cld; ret; 
0x00000000496a17: add [rax-0x75], cl; xchg [rax+0x48000000], dh; add esp, 0x8; ret; 
0x000000004189d2: add [rax-0x75], cl; xchg edi, eax; mov al, [0xe08a8948000000]; add [rax], al; ret; 
0x0000000045b367: add [rax-0x75], cl; xor [rcx+rcx*4-0x9], cl; mov rax, [rbp-0x58]; mov r15d, r13d; call rax; 
0x000000004043c2: add [rax-0x76b7bcc8], al; ret; 
0x000000004519a1: add [rax-0x776b7fe], ecx; ret; 
0x00000000498b6f: add [rax-0x77], cl; adc al, 0xf7; add rsp, 0x8; ret; 
0x0000000046dae6: add [rax-0x77], cl; adc eax, 0x5d2ca; cmp fs:[rdi], rsi; je short 0x000000000046daf8; ret; 
0x0000000048f836: add [rax-0x77], cl; add eax, 0x3cb4a; ret; 
0x0000000048f81f: add [rax-0x77], cl; add eax, 0x3cb61; add rsp, 0x8; ret; 
0x00000000422a34: add [rax-0x77], cl; add eax, 0xa7104; ret; 
0x00000000422a26: add [rax-0x77], cl; add eax, 0xa711a; lea rax, [rip+0x319b]; mov [rip+0xa7104], rax; ret; 
0x00000000421aaa: add [rax-0x77], cl; add eax, 0xa801e; ret; 
0x00000000421a81: add [rax-0x77], cl; add eax, 0xa803f; ret; 
0x00000000421a61: add [rax-0x77], cl; add eax, 0xa8057; ret; 
0x00000000419a52: add [rax-0x77], cl; and al, 0x10; xor edx, edx; mov rdi, r15; call qword ptr [r14+0x80]; 
0x0000000041d3f7: add [rax-0x77], cl; fcomp st, dword ptr [rbx+0x5d]; pop r12; ret; 
0x0000000041b2ec: add [rax-0x77], cl; fidivr st, word ptr [rdi+0x2]; mov eax, r9d; syscall; 
0x00000000412b7c: add [rax-0x77], cl; fimul st, dword ptr [rcx+rcx*4-0x1a]; mov rdi, r15; call qword ptr [rcx+0x38]; 
0x000000004274ef: add [rax-0x77], cl; fistp qword ptr [rax+0xca], st; syscall; 
0x00000000420786: add [rax-0x77], cl; imul esp, [rax+0x5b], 0x5d; pop r12; ret; 
0x0000000048aa7a: add [rax-0x77], cl; in eax, 0x48; mov esi, ebp; syscall; 
0x0000000045d89f: add [rax-0x77], cl; ja short 0x000000000045d8c4; ret; 
0x0000000045d907: add [rax-0x77], cl; jo short 0x000000000045d92c; ret; 
0x00000000402efd: add [rax-0x77], cl; mov [rsi+0x10], rsi; syscall; 
0x0000000041cedd: add [rax-0x77], cl; out 0x48, al; mov edi, ebp; call qword ptr [r13+0x90]; 
0x0000000041bc97: add [rax-0x77], cl; out 0x48, al; mov edi, ebp; call qword ptr [r15+0x90]; 
0x0000000047c3d6: add [rax-0x77], cl; out 0x48, al; mov edi, ebp; call qword ptr [rbx+0x90]; 
0x0000000041cf43: add [rax-0x77], cl; out dx, eax; call qword ptr [r13+0x20]; 
0x0000000041ccf3: add [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x80]; 
0x0000000041c1d9: add [rax-0x77], cl; out dx, eax; call qword ptr [rbx+0x80]; 
0x0000000042342b: add [rax-0x77], cl; out dx, eax; mov eax, 0xca; syscall; 
0x0000000046d415: add [rax-0x77], cl; push rbp; enter 0xd231, 0xe8; out dx, eax; ret; 
0x00000000457a9f: add [rax-0x77], cl; rcr byte ptr [rbx-0x3d], 0x1; mov eax, 0x60; pop rbx; ret; 
0x0000000046363f: add [rax-0x77], cl; ret far; 
0x00000000402e64: add [rax-0x77], cl; ret; 
0x0000000048cab5: add [rax-0x77], cl; sbb [r8+0x5a], bl; pop rbx; ret; 
0x00000000420c3e: add [rax-0x77], cl; sbb eax, 0xab3b2; add dword ptr [rip+0xab3a7], 0x1; pop rbx; ret; 
0x00000000456824: add [rax-0x77], cl; shl ebx, 0x1; movsb [rdi], [rsi]; ret; 
0x00000000421726: add [rax-0x77], ecx; adc eax, 0xa83e2; ret; 
0x00000000453262: add [rax-0x77], ecx; add cl, [rax-0x75]; add eax, 0x5428948; lea rax, [rdx+0xc]; ret; 
0x00000000451a52: add [rax-0x77], ecx; add cl, [rax-0x75]; add eax, 0x5428948; mov rax, rdi; ret; 
0x00000000451932: add [rax-0x77], ecx; add cl, [rax-0x77]; clc; ret; 
0x000000004531e2: add [rax-0x77], ecx; add cl, [rbx+0x42890541]; add eax, 0x8428d48; ret; 
0x00000000451a42: add [rax-0x77], ecx; add cl, [rbx+0x42890841]; or [rax-0x77], cl; clc; ret; 
0x0000000048a2b6: add [rax-0x77], ecx; add eax, 0x42411; ret; 
0x00000000474a61: add [rax-0x77], ecx; push rbp; sub dh, al; add [rip-0xb9517], ch; jmp qword ptr [rsi-0x70]; 
0x00000000465290: add [rax-0x78], eax; mov esp, 0x8514; add [rax+0x39], cl; ret far; 
0x0000000048818f: add [rax-0x7af0f506], al; ret far; 
0x00000000498bf3: add [rax-0x7b], cl; ror byte ptr [rax+0xf], 0x45; and al, 0x10; add rsp, 0x28; ret; 
0x00000000418a0e: add [rax-0x7b], cl; ror byte ptr [rdi], 0x84; mov dword ptr [rax], 0x89480000; ret; 
0x0000000040100e: add [rax-0x7b], cl; shl byte ptr [rdx+rax-0x1], 0xd0; add rsp, 0x8; ret; 
0x000000004174db: add [rax-0x7bf10000], al; ret; 
0x000000004996f7: add [rax-0x7c], al; push qword ptr [rbp+0x36]; mov eax, 0x8; add rsp, 0x8; ret; 
0x00000000425be5: add [rax-0x7d], cl; call far fword ptr [rdi]; 
0x000000004278c0: add [rax-0x7d], cl; call qword ptr [rax]; 
0x00000000465f81: add [rax-0x7d], cl; cli; add ecx, [rdi]; xchg [rax*1+0x39480000], esp; ret; 
0x00000000490fe0: add [rax-0x7d], cl; cmp al, 0x28; add [rdi], cl; test [rdi+rdi*8-0x1], ebp; call far fword ptr [rbx+0x48]; 
0x00000000483d29: add [rax-0x7d], cl; jge short 0x0000000000483cf6; add [rax-0x77], cl; ret; 
0x00000000425d5f: add [rax-0x7d], cl; jmp qword ptr [rax]; 
0x00000000423063: add [rax-0x7d], cl; ret far; 
0x0000000040489f: add [rax-0x7d], cl; ret; 
0x0000000046aaed: add [rax-0x7d], cl; rol byte ptr [rax+rcx*2], 0x83; ret; 
0x0000000047fa9f: add [rax-0x7d], cl; rol byte ptr [rbx], 0xc3; nop [rax+rax]; xor rax, rax; ret; 
0x0000000047fa8e: add [rax-0x7d], cl; rol byte ptr [rcx], 0xc3; nop [rax+rax]; add rax, 0x3; ret; 
0x00000000406845: add [rax-0x7d], ecx; ret; 
0x000000004051d1: add [rax-0x80], al; call far fword ptr [rax+0xf]; 
0x000000004970f4: add [rax-0x80], al; call qword ptr [rcx]; 
0x000000004996e9: add [rax-0x80], al; inc dword ptr [rbx]; jne short 0x0000000000499710; add rsp, 0x8; ret; 
0x00000000405961: add [rax-0x80], al; jmp qword ptr [rdi+rcx-0x7c]; 
0x000000004145f6: add [rax-0x80], al; jmp qword ptr [rdi+rcx]; 
0x00000000412690: add [rax-0x8ff43], eax; jmp qword ptr [rax]; 
0x000000004770ba: add [rax-0x93343], eax; jmp qword ptr [rax]; 
0x00000000406f88: add [rax-0x9], ecx; ror byte ptr [rax+0x1], 0x1; ret; 
0x0000000045a96d: add [rax], al; add [r13+rbp-0x48], sil; add [rcx], eax; add [rax], al; syscall; 
0x000000004545ac: add [rax], al; add [rax+0x1478d48], dl; ret; 
0x0000000048f5be: add [rax], al; add [rax+0x1], bh; ret; 
0x0000000045d61f: add [rax], al; add [rax+0x1], cl; ret far; 
0x000000004151ed: add [rax], al; add [rax+0x29], cl; ret far; 
0x00000000475a0c: add [rax], al; add [rax+0x29], cl; ret; 
0x0000000048f731: add [rax], al; add [rax+0x2], bh; ret; 
0x000000004951bb: add [rax], al; add [rax+0x31ca0], al; add [rdi-0x2c517], bl; jmp qword ptr [rsi+0xf]; 
0x0000000049953a: add [rax], al; add [rax+0x39], cl; or [rdi+0x2], r14b; sbb eax, eax; ret; 
0x00000000465296: add [rax], al; add [rax+0x39], cl; ret far; 
0x00000000478777: add [rax], al; add [rax+0x39], cl; ret; 
0x00000000457a75: add [rax], al; add [rax+0x485bf0e5], al; cmovne eax, edx; ret; 
0x0000000045a7bf: add [rax], al; add [rax+0x48], bh; syscall; 
0x00000000453c4d: add [rax], al; add [rax+0x78d4837], cl; ret; 
0x0000000049cf1f: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x2f3b2]; syscall; 
0x0000000047558f: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x56d52]; syscall; 
0x0000000047530b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x56fd2]; syscall; 
0x00000000473287: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x5904e]; syscall; 
0x00000000473147: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x5918e]; syscall; 
0x0000000046f67f: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x5cc52]; syscall; 
0x0000000046f5ba: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x5cd17]; syscall; 
0x0000000046f418: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x5ceb9]; syscall; 
0x0000000046f33e: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x5cf93]; syscall; 
0x00000000461b6f: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x6b0f2]; syscall; 
0x00000000461a03: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x6b25e]; syscall; 
0x000000004618e3: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x6b37e]; syscall; 
0x00000000458beb: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x74076]; syscall; 
0x00000000428e0b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xa0d46]; syscall; 
0x0000000042620b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xa3946]; syscall; 
0x000000004261ab: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xa39a6]; syscall; 
0x00000000425deb: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xa3d66]; syscall; 
0x00000000425b8b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xa3fc6]; syscall; 
0x000000004255b3: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xa459e]; syscall; 
0x0000000042557b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xa45d6]; syscall; 
0x0000000042716b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xa4ef6]; syscall; 
0x0000000042671f: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xa5932]; syscall; 
0x0000000042287c: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xa97d5]; syscall; 
0x0000000042284b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xa9816]; syscall; 
0x000000004225cb: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xa9a96]; syscall; 
0x000000004220a7: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xa9fba]; syscall; 
0x00000000420cbd: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xab324]; syscall; 
0x000000004206fd: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xab8e4]; syscall; 
0x00000000420391: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xabc50]; syscall; 
0x0000000042004f: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xabf92]; syscall; 
0x0000000041eae9: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xad4f8]; syscall; 
0x0000000041e849: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xad798]; syscall; 
0x0000000041e4f5: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xadaec]; syscall; 
0x0000000041866b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xb45f6]; syscall; 
0x0000000041077a: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xbc387]; syscall; 
0x0000000041063a: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xbc4c7]; syscall; 
0x00000000410403: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xbc6fe]; syscall; 
0x000000004103c8: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xbc739]; syscall; 
0x000000004102e4: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xbc81d]; syscall; 
0x00000000406d18: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xc4e51]; syscall; 
0x00000000405375: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xc67bc]; syscall; 
0x000000004041f6: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xc7893]; syscall; 
0x000000004041c8: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xc78c1]; syscall; 
0x0000000040407c: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xc7a0d]; syscall; 
0x000000004012d4: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xca8ad]; syscall; 
0x00000000401443: add [rax], al; add [rax+0xca], bh; syscall; 
0x0000000046ddec: add [rax], al; add [rax+0xd], bh; syscall; 
0x0000000040f7d1: add [rax], al; add [rax+0xe], bh; syscall; 
0x0000000041af4d: add [rax], al; add [rax-0x1], bh; ret; 
0x00000000421f8f: add [rax], al; add [rax-0x39], cl; ret; 
0x0000000047fadd: add [rax], al; add [rax-0x39], cl; rol byte ptr [rbx], 0x0; add [rax], al; ret; 
0x0000000047fb1d: add [rax], al; add [rax-0x39], cl; rol byte ptr [rdi], 0x0; add [rax], al; ret; 
0x0000000047facd: add [rax], al; add [rax-0x39], cl; rol byte ptr [rdx], 0x0; add [rax], al; ret; 
0x0000000047fb0d: add [rax], al; add [rax-0x39], cl; rol byte ptr [rsi], 0x0; add [rax], al; ret; 
0x0000000045acbc: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x1c; syscall; 
0x0000000048045c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x66; syscall; 
0x0000000045ac8c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0xa; syscall; 
0x0000000045ac5c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0xb; syscall; 
0x00000000498b0c: add [rax], al; add [rax-0x5e1f00d], dl; mov rax, [rdi+0x90]; ret; 
0x000000004154d6: add [rax], al; add [rax-0x68], cl; movzx eax, byte ptr [rbx+rax]; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000049cf24: add [rax], al; add [rax-0x73], cl; cmp eax, 0x2f3b2; syscall; 
0x00000000475594: add [rax], al; add [rax-0x73], cl; cmp eax, 0x56d52; syscall; 
0x00000000475310: add [rax], al; add [rax-0x73], cl; cmp eax, 0x56fd2; syscall; 
0x0000000047328c: add [rax], al; add [rax-0x73], cl; cmp eax, 0x5904e; syscall; 
0x0000000047314c: add [rax], al; add [rax-0x73], cl; cmp eax, 0x5918e; syscall; 
0x0000000046f684: add [rax], al; add [rax-0x73], cl; cmp eax, 0x5cc52; syscall; 
0x0000000046f5bf: add [rax], al; add [rax-0x73], cl; cmp eax, 0x5cd17; syscall; 
0x0000000046f41d: add [rax], al; add [rax-0x73], cl; cmp eax, 0x5ceb9; syscall; 
0x0000000046f343: add [rax], al; add [rax-0x73], cl; cmp eax, 0x5cf93; syscall; 
0x00000000461b74: add [rax], al; add [rax-0x73], cl; cmp eax, 0x6b0f2; syscall; 
0x00000000461a08: add [rax], al; add [rax-0x73], cl; cmp eax, 0x6b25e; syscall; 
0x000000004618e8: add [rax], al; add [rax-0x73], cl; cmp eax, 0x6b37e; syscall; 
0x00000000458bf0: add [rax], al; add [rax-0x73], cl; cmp eax, 0x74076; syscall; 
0x00000000428e10: add [rax], al; add [rax-0x73], cl; cmp eax, 0xa0d46; syscall; 
0x00000000426210: add [rax], al; add [rax-0x73], cl; cmp eax, 0xa3946; syscall; 
0x000000004261b0: add [rax], al; add [rax-0x73], cl; cmp eax, 0xa39a6; syscall; 
0x00000000425df0: add [rax], al; add [rax-0x73], cl; cmp eax, 0xa3d66; syscall; 
0x00000000425b90: add [rax], al; add [rax-0x73], cl; cmp eax, 0xa3fc6; syscall; 
0x000000004255b8: add [rax], al; add [rax-0x73], cl; cmp eax, 0xa459e; syscall; 
0x00000000425580: add [rax], al; add [rax-0x73], cl; cmp eax, 0xa45d6; syscall; 
0x00000000427170: add [rax], al; add [rax-0x73], cl; cmp eax, 0xa4ef6; syscall; 
0x00000000426724: add [rax], al; add [rax-0x73], cl; cmp eax, 0xa5932; syscall; 
0x00000000422881: add [rax], al; add [rax-0x73], cl; cmp eax, 0xa97d5; syscall; 
0x00000000422850: add [rax], al; add [rax-0x73], cl; cmp eax, 0xa9816; syscall; 
0x000000004225d0: add [rax], al; add [rax-0x73], cl; cmp eax, 0xa9a96; syscall; 
0x000000004220ac: add [rax], al; add [rax-0x73], cl; cmp eax, 0xa9fba; syscall; 
0x00000000420cc2: add [rax], al; add [rax-0x73], cl; cmp eax, 0xab324; syscall; 
0x00000000420702: add [rax], al; add [rax-0x73], cl; cmp eax, 0xab8e4; syscall; 
0x00000000420396: add [rax], al; add [rax-0x73], cl; cmp eax, 0xabc50; syscall; 
0x00000000420054: add [rax], al; add [rax-0x73], cl; cmp eax, 0xabf92; syscall; 
0x0000000041eaee: add [rax], al; add [rax-0x73], cl; cmp eax, 0xad4f8; syscall; 
0x0000000041e84e: add [rax], al; add [rax-0x73], cl; cmp eax, 0xad798; syscall; 
0x0000000041e4fa: add [rax], al; add [rax-0x73], cl; cmp eax, 0xadaec; syscall; 
0x00000000418670: add [rax], al; add [rax-0x73], cl; cmp eax, 0xb45f6; syscall; 
0x0000000041077f: add [rax], al; add [rax-0x73], cl; cmp eax, 0xbc387; syscall; 
0x0000000041063f: add [rax], al; add [rax-0x73], cl; cmp eax, 0xbc4c7; syscall; 
0x00000000410408: add [rax], al; add [rax-0x73], cl; cmp eax, 0xbc6fe; syscall; 
0x000000004103cd: add [rax], al; add [rax-0x73], cl; cmp eax, 0xbc739; syscall; 
0x000000004102e9: add [rax], al; add [rax-0x73], cl; cmp eax, 0xbc81d; syscall; 
0x00000000406d1d: add [rax], al; add [rax-0x73], cl; cmp eax, 0xc4e51; syscall; 
0x0000000040537a: add [rax], al; add [rax-0x73], cl; cmp eax, 0xc67bc; syscall; 
0x000000004041fb: add [rax], al; add [rax-0x73], cl; cmp eax, 0xc7893; syscall; 
0x000000004041cd: add [rax], al; add [rax-0x73], cl; cmp eax, 0xc78c1; syscall; 
0x00000000404081: add [rax], al; add [rax-0x73], cl; cmp eax, 0xc7a0d; syscall; 
0x000000004012d9: add [rax], al; add [rax-0x73], cl; cmp eax, 0xca8ad; syscall; 
0x000000004876bd: add [rax], al; add [rax-0x75], cl; adc ecx, [rcx-0x75]; add ecx, [rax-0x7d]; ret; 
0x00000000478ae8: add [rax], al; add [rax-0x75], cl; add al, 0xc6; jmp rax; 
0x000000004796fd: add [rax], al; add [rax-0x75], cl; add al, 0xf0; jmp rax; 
0x00000000419ec4: add [rax], al; add [rax-0x75], cl; and [r11+rcx*4+0x6d], r9b; sbb [rax-0x77], cl; ret far; 
0x0000000048d5a6: add [rax], al; add [rax-0x75], cl; and al, 0x10; mov rdi, [rsp+0x18]; call rax; 
0x0000000048d549: add [rax], al; add [rax-0x75], cl; and al, 0x10; mov rdi, [rsp+0x18]; call rcx; 
0x0000000042830d: add [rax], al; add [rax-0x75], cl; je short 0x0000000000428338; sub [rcx+rcx*4-0x19], cl; call rax; 
0x00000000435aad: add [rax], al; add [rax-0x75], cl; test qword ptr [rbx-0x76b703aa], 0x5789f74f; cld; ret; 
0x00000000498b6d: add [rax], al; add [rax-0x77], cl; adc al, 0xf7; add rsp, 0x8; ret; 
0x00000000421aa8: add [rax], al; add [rax-0x77], cl; add eax, 0xa801e; ret; 
0x00000000421a7f: add [rax], al; add [rax-0x77], cl; add eax, 0xa803f; ret; 
0x00000000421a5f: add [rax], al; add [rax-0x77], cl; add eax, 0xa8057; ret; 
0x0000000041b2ea: add [rax], al; add [rax-0x77], cl; fidivr st, word ptr [rdi+0x2]; mov eax, r9d; syscall; 
0x000000004274ed: add [rax], al; add [rax-0x77], cl; fistp qword ptr [rax+0xca], st; syscall; 
0x0000000048aa78: add [rax], al; add [rax-0x77], cl; in eax, 0x48; mov esi, ebp; syscall; 
0x0000000045d89d: add [rax], al; add [rax-0x77], cl; ja short 0x000000000045d8c4; ret; 
0x00000000402efb: add [rax], al; add [rax-0x77], cl; mov [rsi+0x10], rsi; syscall; 
0x0000000047c3d4: add [rax], al; add [rax-0x77], cl; out 0x48, al; mov edi, ebp; call qword ptr [rbx+0x90]; 
0x0000000041cf41: add [rax], al; add [rax-0x77], cl; out dx, eax; call qword ptr [r13+0x20]; 
0x0000000041ccf1: add [rax], al; add [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x80]; 
0x0000000041c1d7: add [rax], al; add [rax-0x77], cl; out dx, eax; call qword ptr [rbx+0x80]; 
0x00000000423429: add [rax], al; add [rax-0x77], cl; out dx, eax; mov eax, 0xca; syscall; 
0x0000000046e0a3: add [rax], al; add [rax-0x77], cl; ret far; 
0x000000004111fa: add [rax], al; add [rax-0x77], cl; ret; 
0x0000000040edb9: add [rax], al; add [rax-0x77], cl; ret; 
0x0000000048818d: add [rax], al; add [rax-0x7af0f506], al; ret far; 
0x0000000040100c: add [rax], al; add [rax-0x7b], cl; shl byte ptr [rdx+rax-0x1], 0xd0; add rsp, 0x8; ret; 
0x000000004278c8: add [rax], al; add [rax-0x7d], cl; call far fword ptr [rdi]; 
0x000000004278be: add [rax], al; add [rax-0x7d], cl; call qword ptr [rax]; 
0x00000000425d5d: add [rax], al; add [rax-0x7d], cl; jmp qword ptr [rax]; 
0x0000000040489d: add [rax], al; add [rax-0x7d], cl; ret; 
0x000000004062eb: add [rax], al; add [rax-0x80], al; jmp qword ptr [rdi+rcx-0x7c]; 
0x000000004545aa: add [rax], al; add [rax], al; add [rax+0x1478d48], dl; ret; 
0x00000000453c4b: add [rax], al; add [rax], al; add [rax+0x78d4837], cl; ret; 
0x0000000041af4b: add [rax], al; add [rax], al; add [rax-0x1], bh; ret; 
0x0000000045acba: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x1c; syscall; 
0x0000000048045a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x66; syscall; 
0x0000000045ac8a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0xa; syscall; 
0x0000000045ac5a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0xb; syscall; 
0x00000000498b0a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov rax, [rdi+0x90]; ret; 
0x0000000045d89b: add [rax], al; add [rax], al; add [rax-0x77], cl; ja short 0x000000000045d8c4; ret; 
0x0000000040489b: add [rax], al; add [rax], al; add [rax-0x7d], cl; ret; 
0x0000000041fbf8: add [rax], al; add [rax], al; add [rax], al; ret; 
0x0000000045365b: add [rax], al; add [rax], al; add [rbx+0x477880e], cl; mov [rdi], ecx; ret; 
0x0000000049889b: add [rax], al; add [rax], al; add [rbx-0x70f0ee08], al; mov [0x148b489848fff68e], al; ret; 
0x0000000045610b: add [rax], al; add [rax], al; add [rcx+0x1], cl; ret; 
0x00000000491fbb: add [rax], al; add [rax], al; add [rcx+0x39], al; ret; 
0x00000000428f8b: add [rax], al; add [rax], al; add [rcx+rcx*4-0x1a], cl; call rax; 
0x0000000044fcdb: add [rax], al; add [rax], al; add [rcx+rcx*4-0x40], cl; vzeroupper; ret; 
0x0000000042918b: add [rax], al; add [rax], al; add al, ch; ret far; 
0x0000000047e9fb: add [rax], al; add [rax], al; add bl, ch; ret far; 
0x0000000047fa9c: add [rax], al; add [rax], al; add rax, 0x3; ret; 
0x00000000426ecc: add [rax], al; add [rax], al; add rsp, 0x18; ret; 
0x0000000048c947: add [rax], al; add [rax], al; add rsp, 0x8; ret; 
0x0000000043195c: add [rax], al; add [rax], al; bsf eax, eax; add rax, rdi; ret; 
0x0000000043196c: add [rax], al; add [rax], al; bsf eax, eax; lea rax, [rax+rdi+0x10]; ret; 
0x0000000043197c: add [rax], al; add [rax], al; bsf eax, eax; lea rax, [rax+rdi+0x20]; ret; 
0x00000000491b7c: add [rax], al; add [rax], al; call qword ptr [rbx]; 
0x00000000490864: add [rax], al; add [rax], al; call r13; 
0x0000000048a8fe: add [rax], al; add [rax], al; cmp rax, 0xffffffffffffffff; cmove rax, rdx; ret; 
0x00000000459bcc: add [rax], al; add [rax], al; endbr64; mov eax, 0x18; syscall; 
0x0000000049409c: add [rax], al; add [rax], al; endbr64; mov eax, 0x26; syscall; 
0x0000000045d44c: add [rax], al; add [rax], al; endbr64; mov eax, 0x63; syscall; 
0x00000000459f8c: add [rax], al; add [rax], al; endbr64; mov eax, 0x8; syscall; 
0x0000000048067c: add [rax], al; add [rax], al; endbr64; mov eax, 0xc; syscall; 
0x0000000041f21c: add [rax], al; add [rax], al; endbr64; mov eax, 0xffffffff; ret; 
0x00000000420bec: add [rax], al; add [rax], al; endbr64; mov rax, [rdi+0x68]; ret; 
0x00000000498b7c: add [rax], al; add [rax], al; endbr64; mov rax, [rdi+0x98]; ret; 
0x0000000046af7c: add [rax], al; add [rax], al; endbr64; mov rax, [rip+0x61225]; ret; 
0x000000004615cc: add [rax], al; add [rax], al; endbr64; mov rax, [rip+0x6b68d]; ret; 
0x00000000420bcc: add [rax], al; add [rax], al; endbr64; mov rax, [rip+0xa8905]; ret; 
0x00000000420bfc: add [rax], al; add [rax], al; endbr64; mov rax, rdi; ret; 
0x0000000041fc1c: add [rax], al; add [rax], al; endbr64; xor eax, eax; ret; 
0x000000004545bc: add [rax], al; add [rax], al; lea rax, [rdi+0x2]; ret; 
0x000000004545cc: add [rax], al; add [rax], al; lea rax, [rdi+0x3]; ret; 
0x000000004545dc: add [rax], al; add [rax], al; lea rax, [rdi+0x4]; ret; 
0x000000004545ec: add [rax], al; add [rax], al; lea rax, [rdi+0x5]; ret; 
0x000000004545fc: add [rax], al; add [rax], al; lea rax, [rdi+0x6]; ret; 
0x0000000045460c: add [rax], al; add [rax], al; lea rax, [rdi+0x8]; ret; 
0x0000000045461c: add [rax], al; add [rax], al; lea rax, [rdi+0x9]; ret; 
0x0000000045462c: add [rax], al; add [rax], al; lea rax, [rdi+0xa]; ret; 
0x0000000045463c: add [rax], al; add [rax], al; lea rax, [rdi+0xb]; ret; 
0x0000000045464c: add [rax], al; add [rax], al; lea rax, [rdi+0xc]; ret; 
0x0000000045465c: add [rax], al; add [rax], al; lea rax, [rdi+0xd]; ret; 
0x0000000045466c: add [rax], al; add [rax], al; lea rax, [rdi+0xe]; ret; 
0x00000000402058: add [rax], al; add [rax], al; leave; ret; 
0x0000000045d89c: add [rax], al; add [rax], al; mov [rdi+0x20], rsi; ret; 
0x00000000498b6c: add [rax], al; add [rax], al; mov [rdi+rsi*8], rdx; add rsp, 0x8; ret; 
0x00000000453c4c: add [rax], al; add [rax], al; mov [rdi], dh; lea rax, [rdi]; ret; 
0x0000000045361c: add [rax], al; add [rax], al; mov [rdi], dh; ret; 
0x00000000414398: add [rax], al; add [rax], al; mov byte ptr [rbp-0x508], 0x20; mov [rbp-0x4f8], rsi; jmp rax; 
0x000000004788af: add [rax], al; add [rax], al; mov dword ptr [rbp-0x4f0], 0x20; jmp rax; 
0x0000000048f5bd: add [rax], al; add [rax], al; mov eax, 0x1; ret; 
0x0000000048f730: add [rax], al; add [rax], al; mov eax, 0x2; ret; 
0x0000000041af4c: add [rax], al; add [rax], al; mov eax, 0xffffffff; ret; 
0x0000000043bd6c: add [rax], al; add [rax], al; mov edx, [rsi]; mov [rdi], edx; ret; 
0x0000000041fb40: add [rax], al; add [rax], al; mov qword ptr [rax+0x8], 0x0; ret; 
0x000000004788a4: add [rax], al; add [rax], al; mov qword ptr [rbp-0x4c8], 0x0; mov dword ptr [rbp-0x4f0], 0x20; jmp rax; 
0x00000000420cdb: add [rax], al; add [rax], al; mov qword ptr [rip+0xab30e], 0x0; ret; 
0x0000000047facc: add [rax], al; add [rax], al; mov rax, 0x2; ret; 
0x0000000047fadc: add [rax], al; add [rax], al; mov rax, 0x3; ret; 
0x0000000047faec: add [rax], al; add [rax], al; mov rax, 0x4; ret; 
0x0000000047fafc: add [rax], al; add [rax], al; mov rax, 0x5; ret; 
0x0000000047fb0c: add [rax], al; add [rax], al; mov rax, 0x6; ret; 
0x0000000047fb1c: add [rax], al; add [rax], al; mov rax, 0x7; ret; 
0x00000000479c06: add [rax], al; add [rax], al; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000048d5a5: add [rax], al; add [rax], al; mov rax, [rsp+0x10]; mov rdi, [rsp+0x18]; call rax; 
0x0000000044fcdc: add [rax], al; add [rax], al; mov rax, r8; vzeroupper; ret; 
0x0000000043bbac: add [rax], al; add [rax], al; mov rdx, [rsi]; mov [rdi], rdx; ret; 
0x0000000042830c: add [rax], al; add [rax], al; mov rsi, [rsp+0x28]; mov rdi, r12; call rax; 
0x00000000428f8c: add [rax], al; add [rax], al; mov rsi, r12; call rax; 
0x0000000047ddd5: add [rax], al; add [rax], al; movups [rax+0x40], xmm0; pop rbx; ret; 
0x0000000041ecd0: add [rax], al; add [rax], al; movups [rbx+0x48], xmm0; pop rbx; ret; 
0x0000000048bf49: add [rax], al; add [rax], al; movups [rbx], xmm0; pop rbx; ret; 
0x00000000457a2c: add [rax], al; add [rax], al; movzx eax, cl; pop rbx; ret; 
0x0000000043bebc: add [rax], al; add [rax], al; movzx edx, byte ptr [rsi]; mov [rdi], dl; ret; 
0x0000000043be4c: add [rax], al; add [rax], al; movzx edx, word ptr [rsi]; mov [rdi], dx; ret; 
0x0000000046dd18: add [rax], al; add [rax], al; nop [rax]; mov rax, 0xf; syscall; 
0x00000000456279: add [rax], al; add [rax], al; nop [rax]; xor eax, eax; ret; 
0x000000004545ab: add [rax], al; add [rax], al; nop; lea rax, [rdi+0x1]; ret; 
0x0000000045459b: add [rax], al; add [rax], al; nop; lea rax, [rdi]; ret; 
0x0000000047fabb: add [rax], al; add [rax], al; nop; mov rax, 0x1; ret; 
0x00000000458654: add [rax], al; add [rax], al; pop rbp; ret; 
0x000000004579e7: add [rax], al; add [rax], al; pop rbx; cmove rax, rdx; ret; 
0x0000000048acba: add [rax], al; add [rax], al; pop rbx; or dword ptr [rip+0x3f802], 0x1; ret; 
0x0000000046b7ba: add [rax], al; add [rax], al; pop rbx; ret; 
0x000000004017db: add [rax], al; add [rax], al; pop rdx; ret; 
0x0000000041fb48: add [rax], al; add [rax], al; ret; 
0x0000000040100b: add [rax], al; add [rax], al; test rax, rax; je short 0x0000000000401016; call rax; 
0x0000000040f6f4: add [rax], al; add [rax], al; xor eax, eax; ret; 
0x0000000040289c: add [rax], al; add [rax], al; xor edi, edi; mov eax, edx; syscall; 
0x0000000041b724: add [rax], al; add [rax], al; xor r8d, r8d; mov rax, r8; ret; 
0x000000004543dc: add [rax], al; add [rax], al; xor rax, rax; ret; 
0x00000000459c38: add [rax], al; add [rbp+0x14], dh; add rsp, 0x28; ret; 
0x0000000046fee2: add [rax], al; add [rbp+0x1e], dh; add rsp, 0x38; ret; 
0x000000004586b0: add [rax], al; add [rbp+0x1f], dh; add rsp, 0x20; pop rbx; ret; 
0x0000000048064a: add [rax], al; add [rbp+0x25], dh; mov eax, r9d; add rsp, 0x38; ret; 
0x0000000040f7e9: add [rax], al; add [rbp+0x26], dh; mov eax, r8d; add rsp, 0x118; ret; 
0x0000000048cc36: add [rax], al; add [rbp+0x28], dh; add rsp, 0x38; ret; 
0x0000000048cd02: add [rax], al; add [rbp+0x2d], dh; add rsp, 0x58; ret; 
0x00000000496b61: add [rax], al; add [rbp+0x39], cl; out 0x77, eax; ret far; 
0x0000000048ce74: add [rax], al; add [rbp+0x3b], dh; add rsp, 0x68; ret; 
0x000000004753fb: add [rax], al; add [rbp+0x41], bl; pop rsp; pop r13; ret; 
0x0000000047d6b6: add [rax], al; add [rbp+0x41], bl; pop rsp; ret; 
0x0000000046debd: add [rax], al; add [rbp+0x42], dh; mov eax, r9d; add rsp, 0x148; ret; 
0x0000000045a7a8: add [rax], al; add [rbp+0x46], dh; add rsp, 0x68; ret; 
0x0000000045a837: add [rax], al; add [rbp+0x47], dh; add rsp, 0x18; ret; 
0x0000000045a8ef: add [rax], al; add [rbp+0x47], dh; add rsp, 0x58; ret; 
0x0000000045a98d: add [rax], al; add [rbp+0x49], dh; add rsp, 0x58; ret; 
0x0000000046dc42: add [rax], al; add [rbp+0x5], dh; add rsp, 0x18; ret; 
0x0000000045ab9b: add [rax], al; add [rbp+0x5], dh; add rsp, 0x28; ret; 
0x0000000048ff27: add [rax], al; add [rbp+0x5], dh; add rsp, 0x38; ret; 
0x000000004259d9: add [rax], al; add [rbp+0x6], dh; add rsp, 0x10; pop rbp; ret; 
0x0000000048cb3b: add [rax], al; add [rbp+0x6], dh; add rsp, 0x20; pop rbx; ret; 
0x00000000410f97: add [rax], al; add [rbp+0x8], dh; add rsp, 0xd8; ret; 
0x00000000480590: add [rax], al; add [rbp+0x8], dh; movzx eax, al; add rsp, 0x58; ret; 
0x000000004163a8: add [rax], al; add [rbp+rcx*4+0x1d], cl; sbb ecx, [rdx-0x16fff8]; in al, 0xff; jmp qword ptr [rsi+0xf]; 
0x0000000045d3ac: add [rax], al; add [rbp-0x3dbbf040], al; ret; 
0x00000000459ef9: add [rax], al; add [rbp-0x47ef8a40], al; add [rax], eax; add [rax], al; syscall; 
0x00000000431078: add [rax], al; add [rbp-0x77], cl; ret far; 
0x0000000041d41d: add [rax], al; add [rbx+0x31], bl; rcr byte ptr [rbp+0x41], 0x5c; ret; 
0x00000000453c8d: add [rax], al; add [rbx+0x477880e], cl; mov [rdi], ecx; lea rax, [rdi+0x4]; ret; 
0x0000000045365d: add [rax], al; add [rbx+0x477880e], cl; mov [rdi], ecx; ret; 
0x000000004579e8: add [rax], al; add [rbx+0x48], bl; cmove eax, edx; ret; 
0x0000000041cf66: add [rax], al; add [rbx+0x5d], bl; pop r12; pop r13; ret; 
0x000000004292d5: add [rax], al; add [rbx+0x5d], bl; pop r12; ret; 
0x0000000045d300: add [rax], al; add [rbx+0x5d], bl; ret; 
0x000000004984a7: add [rax], al; add [rbx+0x63490843], cl; add al, 0x84; add rax, r12; notrack jmp rax; 
0x00000000425519: add [rax], al; add [rbx+0xa463d2d], al; add [rcx], al; pop rbp; ret; 
0x0000000043bcfd: add [rax], al; add [rbx+0xe8b0156], cl; mov [rdi+0x1], edx; mov [rdi], ecx; ret; 
0x0000000043bc8d: add [rax], al; add [rbx+0xe8b0256], cl; mov [rdi+0x2], edx; mov [rdi], ecx; ret; 
0x0000000043bc1d: add [rax], al; add [rbx+0xe8b0356], cl; mov [rdi+0x3], edx; mov [rdi], ecx; ret; 
0x00000000457abc: add [rax], al; add [rbx-0x3d], bl; mov eax, 0x10; pop rbx; ret; 
0x00000000457ab5: add [rax], al; add [rbx-0x3d], bl; mov eax, 0x20; pop rbx; ret; 
0x00000000457aad: add [rax], al; add [rbx-0x3d], bl; mov eax, 0x30; pop rbx; ret; 
0x00000000457aa7: add [rax], al; add [rbx-0x3d], bl; mov eax, 0x40; pop rbx; ret; 
0x00000000457aca: add [rax], al; add [rbx-0x3d], bl; mov eax, 0x80; pop rbx; ret; 
0x00000000457ac3: add [rax], al; add [rbx-0x3d], bl; mov eax, 0x8; pop rbx; ret; 
0x00000000479cee: add [rax], al; add [rbx-0x4ff43], al; call qword ptr [rax]; 
0x000000004145dc: add [rax], al; add [rbx-0x67b7df18], al; movzx eax, byte ptr [rbx+rax]; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000049889d: add [rax], al; add [rbx-0x70f0ee08], al; mov [0x148b489848fff68e], al; ret; 
0x0000000044ffe1: add [rax], al; add [rbx-0x7cf0fb06], al; ret; 
0x0000000045d54d: add [rax], al; add [rcx+0x104e23c1], cl; lea rcx, [rsi+rcx*4]; add eax, [rcx+rdx]; ret; 
0x000000004193ca: add [rax], al; add [rcx+0x1], cl; ret; 
0x00000000489755: add [rax], al; add [rcx+0x39], al; ret; 
0x00000000473859: add [rax], al; add [rcx+0x39], cl; ret; 
0x0000000040f79c: add [rax], al; add [rcx+0x48050fc8], cl; mov edi, eax; mov eax, 0xba; syscall; 
0x0000000049a46c: add [rax], al; add [rcx+0xf], al; mov bh, 0x5d; and [rsi-0x9], ah; ret; 
0x0000000045c67b: add [rax], al; add [rcx+rcx*4+0x44], cl; and al, 0x8; mov rdi, [r8]; call rbx; 
0x0000000049b5d4: add [rax], al; add [rcx+rcx*4-0x11], cl; call rbx; 
0x00000000427b27: add [rax], al; add [rcx+rcx*4-0x11], cl; mov eax, 0xca; syscall; 
0x00000000418e2a: add [rax], al; add [rcx+rcx*4-0x12], cl; mov rdi, r15; call qword ptr [r14+0x38]; 
0x0000000041bcfb: add [rax], al; add [rcx+rcx*4-0x16], cl; mov rsi, r12; mov rdi, rbp; call qword ptr [r15+0x40]; 
0x0000000041c72e: add [rax], al; add [rcx+rcx*4-0x16], cl; mov rsi, r15; mov rdi, rbp; call qword ptr [rax+0x40]; 
0x00000000426594: add [rax], al; add [rcx+rcx*4-0x19], cl; mov eax, 0xca; syscall; 
0x00000000419d3d: add [rax], al; add [rcx+rcx*4-0x1], cl; call qword ptr [r13+0x80]; 
0x00000000419f33: add [rax], al; add [rcx+rcx*4-0x1], cl; call qword ptr [rbp+0x80]; 
0x00000000428768: add [rax], al; add [rcx+rcx*4-0x1], cl; mov eax, 0xca; syscall; 
0x00000000428f8d: add [rax], al; add [rcx+rcx*4-0x1a], cl; call rax; 
0x0000000047c7a1: add [rax], al; add [rcx+rcx*4-0x1e], cl; mov rsi, r14; mov rdi, rbx; call qword ptr [r15+0x38]; 
0x0000000047c57b: add [rax], al; add [rcx+rcx*4-0x1e], cl; mov rsi, rbp; mov rdi, rbx; call qword ptr [r13+0x38]; 
0x00000000418fd5: add [rax], al; add [rcx+rcx*4-0x1e], cl; mov rsi, rbp; mov rdi, rbx; call qword ptr [r13+0x58]; 
0x0000000041b2f2: add [rax], al; add [rcx+rcx*4-0x38], al; syscall; 
0x0000000046df8e: add [rax], al; add [rcx+rcx*4-0x3a], cl; mov eax, 0xe; syscall; 
0x0000000046b0e2: add [rax], al; add [rcx+rcx*4-0x40], al; pop rbp; pop r12; ret; 
0x00000000418242: add [rax], al; add [rcx+rcx*4-0x40], al; pop rbx; pop rbp; ret; 
0x000000004248ee: add [rax], al; add [rcx+rcx*4-0x40], cl; ret; 
0x000000004594b0: add [rax], al; add [rcx+rcx*4-0x40], cl; shr rax, 0x2; vzeroupper; ret; 
0x0000000044fc1d: add [rax], al; add [rcx+rcx*4-0x40], cl; vzeroupper; ret; 
0x0000000041c8ca: add [rax], al; add [rcx+rcx*4-0x6], cl; mov rsi, r14; mov rdi, rbx; call qword ptr [rbp+0x70]; 
0x0000000048a345: add [rax], al; add [rcx+rdi-0x40], cl; ja short 0x000000000048a358; add rsp, 0x8; ret; 
0x0000000045ad0f: add [rax], al; add [rcx+rsi+0x48], dh; mov edi, ebp; xor esi, esi; call r12; 
0x00000000471f0b: add [rax], al; add [rcx-0x1177b], cl; jmp far fword ptr [rcx]; 
0x0000000045e53a: add [rax], al; add [rcx-0x48], al; add [rax], al; add [rax+0x1], cl; ret far; 
0x0000000049426d: add [rax], al; add [rcx-0x4cf7b], cl; jmp qword ptr [rsi+0x2e]; 
0x0000000045bbe8: add [rax], al; add [rcx-0x75], cl; jge short 0x000000000045bbef; call rbx; 
0x0000000046552a: add [rax], al; add [rcx-0x77], al; ret; 
0x0000000047b21d: add [rax], al; add [rcx-0x77], cl; ret; 
0x000000004639cd: add [rax], al; add [rcx-0x7d], cl; rol byte ptr [rcx], 0x89; xor [rax-0x7d], ecx; ret; 
0x0000000046c632: add [rax], al; add [rcx], ch; ret far; 
0x0000000040731a: add [rax], al; add [rcx], dh; call qword ptr [rax+0x480ab60f]; 
0x00000000429317: add [rax], al; add [rcx], dh; rcr byte ptr [rbx+0x5d], 0x41; pop rsp; ret; 
0x000000004244fe: add [rax], al; add [rcx], dh; ror byte ptr [rax-0x73], 0x3c; ret; 
0x0000000041c341: add [rax], al; add [rcx], dh; ror byte ptr [rax-0x77], cl; out dx, eax; call qword ptr [rbx+0x80]; 
0x000000004905fd: add [rax], al; add [rcx], dh; shr bl, 0xcf; nop [rax]; call rax; 
0x00000000498a07: add [rax], al; add [rdi+0x1], bh; call rax; 
0x00000000439488: add [rax], al; add [rdi+0x63], cl; or al, 0x8b; add r9, r11; notrack jmp r9; 
0x0000000045b986: add [rax], al; add [rdi+rbp+0x48], dh; mov edi, ebp; xor esi, esi; call r12; 
0x0000000047ddd6: add [rax], al; add [rdi], cl; adc [rax+0x40], eax; pop rbx; ret; 
0x0000000041ecd1: add [rax], al; add [rdi], cl; adc [rbx+0x48], eax; pop rbx; ret; 
0x0000000048bf4a: add [rax], al; add [rdi], cl; adc [rbx], eax; pop rbx; ret; 
0x00000000428770: add [rax], al; add [rdi], cl; add eax, 0xfffebee9; jmp qword ptr [rsi+0xf]; 
0x000000004252a0: add [rax], al; add [rdi], cl; add eax, 0xffff01e9; jmp qword ptr [rsi+0xf]; 
0x0000000041e55a: add [rax], al; add [rdi], cl; add eax, 0xffff44e9; jmp qword ptr [rsi+0x66]; 
0x000000004229d8: add [rax], al; add [rdi], cl; add eax, 0xffff70e9; jmp qword ptr [rsi+0x66]; 
0x0000000043be4d: add [rax], al; add [rdi], cl; mov bh, 0x16; mov [rdi], dx; ret; 
0x0000000043bebd: add [rax], al; add [rdi], cl; mov dh, 0x16; mov [rdi], dl; ret; 
0x00000000407505: add [rax], al; add [rdi], cl; mov dh, 0x43; add [rax-0x7d], ecx; ret; 
0x00000000410a0d: add [rax], al; add [rdi], cl; mov dh, 0x4b; add [rax-0x7d], ecx; ret; 
0x00000000457a2d: add [rax], al; add [rdi], cl; mov dh, 0xc1; pop rbx; ret; 
0x0000000043197d: add [rax], al; add [rdi], cl; mov esp, 0x448d48c0; cmp [rax], ah; ret; 
0x0000000043196d: add [rax], al; add [rdi], cl; mov esp, 0x448d48c0; cmp [rax], dl; ret; 
0x0000000043195d: add [rax], al; add [rdi], cl; mov esp, 0xf80148c0; ret; 
0x0000000040f785: add [rax], al; add [rdi], cl; sub [rsp+0xe0], eax; movaps [rsp+0xf0], xmm0; syscall; 
0x0000000040f78d: add [rax], al; add [rdi], cl; sub [rsp+0xf0], eax; syscall; 
0x0000000046dfb5: add [rax], al; add [rdi], cl; test [rax+0x48000000], ebx; add esp, 0x98; ret; 
0x00000000418e25: add [rax], al; add [rdx+0x10], bh; mov rsi, r13; mov rdi, r15; call qword ptr [r14+0x38]; 
0x0000000041d4b6: add [rax], al; add [rdx+0x1], bh; mov rdi, rbx; call qword ptr [rbp+0x48]; 
0x0000000041a888: add [rax], al; add [rdx+0x1], bh; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x00000000421a99: add [rax], al; add [rdx], al; jbe short 0x0000000000421aa0; ret; 
0x0000000045a968: add [rax], al; add [rip+0x410000], dil; je short 0x000000000045a9a0; mov eax, 0x101; syscall; 
0x00000000421afa: add [rax], al; add [rsi+0x1], dh; ret; 
0x0000000046ceb6: add [rax], al; add [rsi+0x63], cl; add al, 0x8a; add r8, rdx; notrack jmp r8; 
0x000000004216ac: add [rax], al; add [rsi+0x80], bh; mov eax, 0xca; syscall; 
0x0000000049cf1a: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x2f3b2]; syscall; 
0x0000000047558a: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x56d52]; syscall; 
0x00000000475306: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x56fd2]; syscall; 
0x00000000473282: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x5904e]; syscall; 
0x00000000473142: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x5918e]; syscall; 
0x0000000046f67a: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x5cc52]; syscall; 
0x0000000046f5b5: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x5cd17]; syscall; 
0x0000000046f413: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x5ceb9]; syscall; 
0x0000000046f339: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x5cf93]; syscall; 
0x00000000461b6a: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x6b0f2]; syscall; 
0x000000004619fe: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x6b25e]; syscall; 
0x000000004618de: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x6b37e]; syscall; 
0x00000000458be6: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x74076]; syscall; 
0x00000000428e06: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xa0d46]; syscall; 
0x00000000426206: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xa3946]; syscall; 
0x000000004261a6: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xa39a6]; syscall; 
0x00000000425de6: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xa3d66]; syscall; 
0x00000000425b86: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xa3fc6]; syscall; 
0x000000004255ae: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xa459e]; syscall; 
0x00000000425576: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xa45d6]; syscall; 
0x00000000427166: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xa4ef6]; syscall; 
0x0000000042671a: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xa5932]; syscall; 
0x00000000422877: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xa97d5]; syscall; 
0x00000000422846: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xa9816]; syscall; 
0x000000004225c6: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xa9a96]; syscall; 
0x000000004220a2: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xa9fba]; syscall; 
0x00000000420cb8: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xab324]; syscall; 
0x000000004206f8: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xab8e4]; syscall; 
0x0000000042038c: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xabc50]; syscall; 
0x0000000042004a: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xabf92]; syscall; 
0x0000000041eae4: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xad4f8]; syscall; 
0x0000000041e844: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xad798]; syscall; 
0x0000000041e4f0: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xadaec]; syscall; 
0x00000000418666: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb45f6]; syscall; 
0x00000000410775: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbc387]; syscall; 
0x00000000410635: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbc4c7]; syscall; 
0x000000004103fe: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbc6fe]; syscall; 
0x000000004103c3: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbc739]; syscall; 
0x000000004102df: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbc81d]; syscall; 
0x00000000406d13: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xc4e51]; syscall; 
0x00000000405370: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xc67bc]; syscall; 
0x000000004041f1: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xc7893]; syscall; 
0x000000004041c3: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xc78c1]; syscall; 
0x00000000404077: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xc7a0d]; syscall; 
0x000000004012cf: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xca8ad]; syscall; 
0x0000000040143e: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; syscall; 
0x000000004266ef: add [rax], al; add [rsi+0x81], bh; mov eax, ebx; syscall; 
0x0000000042658f: add [rax], al; add [rsi+0x81], bh; mov rdi, r12; mov eax, 0xca; syscall; 
0x00000000427b22: add [rax], al; add [rsi+0x81], bh; mov rdi, r13; mov eax, 0xca; syscall; 
0x00000000428763: add [rax], al; add [rsi+0x81], bh; mov rdi, r15; mov eax, 0xca; syscall; 
0x00000000423424: add [rax], al; add [rsi+0x81], bh; mov rdi, rbp; mov eax, 0xca; syscall; 
0x000000004274e8: add [rax], al; add [rsi+0x81], bh; mov rdi, rbx; mov eax, 0xca; syscall; 
0x0000000047d70d: add [rax], al; add [rsi-0x1], bh; call qword ptr [rax+0x18]; 
0x0000000041ee8e: add [rax], al; add [rsi-0x1], bh; mov rdi, rbp; call qword ptr [rbx+0x18]; 
0x000000004205fc: add [rax], al; add [rsi-0x1], bh; mov rdi, rbx; call qword ptr [r13+0x18]; 
0x0000000045362b: add [rax], al; add [rsi-0x70], ah; mov dx, [rsi]; mov [rdi], dx; ret; 
0x00000000423354: add [rax], al; add [rsi-0x77], ah; psubsw mm2, [rsi+rdi*8-0x1]; call qword ptr [rax-0x2bc272b8]; 
0x00000000480cce: add [rax], al; add al, ch; or cl, bl; std; call qword ptr [rax+0x31f1894c]; 
0x0000000048fc3d: add [rax], al; add al, ch; or eax, [rbp-0x76b70007]; ret; 
0x0000000048ba0b: add [rax], al; add al, ch; pop rbp; fdiv st(4), st; jmp qword ptr [rsi+0x66]; 
0x0000000041f285: add [rax], al; add al, ch; rep ret; 
0x0000000042918d: add [rax], al; add al, ch; ret far; 
0x0000000048f6af: add [rax], al; add bh, al; add al, [rdx]; sar bh, 0xff; ret; 
0x00000000499482: add [rax], al; add bh, bh; loopne 0x00000000004994ee; nop [rax+rax]; ret; 
0x00000000484335: add [rax], al; add bh, dh; ret; 
0x0000000047fac4: add [rax], al; add bl, al; nop [rax+rax]; mov rax, 0x2; ret; 
0x0000000047fad4: add [rax], al; add bl, al; nop [rax+rax]; mov rax, 0x3; ret; 
0x0000000047fae4: add [rax], al; add bl, al; nop [rax+rax]; mov rax, 0x4; ret; 
0x0000000047faf4: add [rax], al; add bl, al; nop [rax+rax]; mov rax, 0x5; ret; 
0x0000000047fb04: add [rax], al; add bl, al; nop [rax+rax]; mov rax, 0x6; ret; 
0x0000000047fb14: add [rax], al; add bl, al; nop [rax+rax]; mov rax, 0x7; ret; 
0x00000000493c0d: add [rax], al; add bl, al; nop [rax]; xor eax, eax; ret; 
0x0000000047c048: add [rax], al; add bl, ch; ret far; 
0x0000000048184e: add [rax], al; add bl, ch; ret; 
0x0000000042306e: add [rax], al; add bl, ch; stosb [rdi]; nop [rax+rax]; call rax; 
0x000000004574b9: add [rax], al; add bl, dh; movq [rdi+rdx-0x10], mm0; movdqu [rdi], xmm0; ret; 
0x00000000459bcd: add [rax], al; add bl, dh; nop edx, edi; mov eax, 0x18; syscall; 
0x0000000049409d: add [rax], al; add bl, dh; nop edx, edi; mov eax, 0x26; syscall; 
0x0000000045d44d: add [rax], al; add bl, dh; nop edx, edi; mov eax, 0x63; syscall; 
0x00000000459f8d: add [rax], al; add bl, dh; nop edx, edi; mov eax, 0x8; syscall; 
0x0000000048067d: add [rax], al; add bl, dh; nop edx, edi; mov eax, 0xc; syscall; 
0x0000000041f21d: add [rax], al; add bl, dh; nop edx, edi; mov eax, 0xffffffff; ret; 
0x00000000420bed: add [rax], al; add bl, dh; nop edx, edi; mov rax, [rdi+0x68]; ret; 
0x00000000498b7d: add [rax], al; add bl, dh; nop edx, edi; mov rax, [rdi+0x98]; ret; 
0x0000000046af7d: add [rax], al; add bl, dh; nop edx, edi; mov rax, [rip+0x61225]; ret; 
0x000000004615cd: add [rax], al; add bl, dh; nop edx, edi; mov rax, [rip+0x6b68d]; ret; 
0x00000000420bcd: add [rax], al; add bl, dh; nop edx, edi; mov rax, [rip+0xa8905]; ret; 
0x00000000420bfd: add [rax], al; add bl, dh; nop edx, edi; mov rax, rdi; ret; 
0x0000000041fc1d: add [rax], al; add bl, dh; nop edx, edi; xor eax, eax; ret; 
0x00000000401bfd: add [rax], al; add cl, ch; ret far; 
0x00000000469a26: add [rax], al; add cl, ch; ret; 
0x00000000402059: add [rax], al; add cl, cl; ret; 
0x00000000421a9a: add [rax], al; add dh, [rsi+0x1]; ret; 
0x00000000413746: add [rax], al; add dh, al; test [rax], eax; idiv edi; jmp qword ptr [rax]; 
0x000000004773cf: add [rax], al; add dh, al; test esp, ecx; idiv bh; jmp qword ptr [rax]; 
0x00000000492cd7: add [rax], al; add dh, dh; add eax, 0x39e9f; jne short 0x0000000000492ce8; ret; 
0x0000000047fa9e: add [rax], al; add rax, 0x3; ret; 
0x00000000431733: add [rax], al; add rax, rdi; add rax, rcx; ret; 
0x00000000431c70: add [rax], al; add rax, rdi; add rax, rcx; vzeroupper; ret; 
0x00000000425d9f: add [rax], al; add rsp, 0x10; mov rax, r8; pop rbp; ret; 
0x0000000041a274: add [rax], al; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x00000000426ece: add [rax], al; add rsp, 0x18; ret; 
0x0000000041ac21: add [rax], al; add rsp, 0x38; pop rbx; pop rbp; ret; 
0x00000000459d99: add [rax], al; add rsp, 0x68; pop rbp; pop r12; ret; 
0x00000000496190: add [rax], al; add rsp, 0x78; pop rbp; pop r12; ret; 
0x00000000458b60: add [rax], al; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000048c949: add [rax], al; add rsp, 0x8; ret; 
0x00000000495ebd: add [rax], al; add rsp, 0x98; pop rbp; pop r12; ret; 
0x00000000402c50: add [rax], al; add rsp, 0x98; ret; 
0x00000000457a76: add [rax], al; and ch, 0xf0; pop rbx; cmovne rax, rdx; ret; 
0x00000000433551: add [rax], al; and eax, 0xffff; and ecx, 0xffff; sub eax, ecx; ret; 
0x00000000433e23: add [rax], al; and ecx, 0xff; sub eax, ecx; ret; 
0x00000000433556: add [rax], al; and ecx, 0xffff; sub eax, ecx; ret; 
0x0000000043195e: add [rax], al; bsf eax, eax; add rax, rdi; ret; 
0x0000000043196e: add [rax], al; bsf eax, eax; lea rax, [rax+rdi+0x10]; ret; 
0x0000000043197e: add [rax], al; bsf eax, eax; lea rax, [rax+rdi+0x20]; ret; 
0x0000000044f750: add [rax], al; bsf rax, rdx; ret; 
0x00000000459134: add [rax], al; bsf rax, rdx; shr rax, 0x2; ret; 
0x0000000047eb38: add [rax], al; bsr rax, rax; add rax, rdi; ret; 
0x0000000047ebd2: add [rax], al; bsr rsi, rsi; lea rax, [rdi+rsi]; ret; 
0x0000000048f73e: add [rax], al; bts rax, 0x30; mov [rdi+0x8], rax; mov eax, 0x2; ret; 
0x0000000048f5ce: add [rax], al; bts rsi, 0x34; mov eax, 0x1; mov [rdi], rsi; ret; 
0x0000000041d570: add [rax], al; call qword ptr [r14+0x80]; 
0x0000000047d5d9: add [rax], al; call qword ptr [rax+0x68]; 
0x00000000491b7e: add [rax], al; call qword ptr [rbx]; 
0x0000000045ad2f: add [rax], al; call r12; 
0x00000000490866: add [rax], al; call r13; 
0x0000000046aca5: add [rax], al; call r15; 
0x00000000410277: add [rax], al; call rax; 
0x00000000410259: add [rax], al; call rdx; 
0x000000004154d7: add [rax], al; cdqe; movzx eax, byte ptr [rbx+rax]; mov rax, [rsi+rax*8]; jmp rax; 
0x00000000457a22: add [rax], al; cmove rax, rcx; ret; 
0x00000000429f4e: add [rax], al; cmove rax, rdx; ret; 
0x00000000421b0f: add [rax], al; cmovne rax, rdx; mov [rip+0xaa55c], rax; ret; 
0x0000000042a19c: add [rax], al; cmovne rax, rdx; ret; 
0x000000004293ce: add [rax], al; cmovne rax, rdx; ret; 
0x0000000049953b: add [rax], al; cmp [rsi+0x8], rcx; ja short 0x0000000000499545; sbb eax, eax; ret; 
0x000000004996e8: add [rax], al; cmp dil, 0x3; jne short 0x0000000000499710; add rsp, 0x8; ret; 
0x00000000455d18: add [rax], al; cmp eax, ecx; jne 0x0000000000455dd5; xor eax, eax; ret; 
0x0000000047d5b9: add [rax], al; cmp qword ptr [rax+0x30], 0x0; je short 0x000000000047d5c8; ret; 
0x000000004291b0: add [rax], al; cmp rax, 0xffffffffffffffff; cmove rax, rdx; add rsp, 0x8; ret; 
0x0000000048a900: add [rax], al; cmp rax, 0xffffffffffffffff; cmove rax, rdx; ret; 
0x0000000048a346: add [rax], al; cmp rax, r8; ja short 0x000000000048a358; add rsp, 0x8; ret; 
0x00000000457713: add [rax], al; cmp rdx, rcx; jne short 0x00000000004576fb; vzeroupper; ret; 
0x000000004578d6: add [rax], al; cmp rdx, rcx; jne short 0x00000000004578b6; vzeroupper; ret; 
0x0000000041f15e: add [rax], al; endbr64; cmp qword ptr [rdi+0x38], 0x0; je short 0x000000000041f170; ret; 
0x0000000045f07e: add [rax], al; endbr64; lea rax, [rip+0x6b555]; ret; 
0x00000000459bce: add [rax], al; endbr64; mov eax, 0x18; syscall; 
0x0000000049409e: add [rax], al; endbr64; mov eax, 0x26; syscall; 
0x0000000045d44e: add [rax], al; endbr64; mov eax, 0x63; syscall; 
0x00000000459f8e: add [rax], al; endbr64; mov eax, 0x8; syscall; 
0x0000000048067e: add [rax], al; endbr64; mov eax, 0xc; syscall; 
0x0000000041f21e: add [rax], al; endbr64; mov eax, 0xffffffff; ret; 
0x0000000045d41e: add [rax], al; endbr64; mov r10, rcx; mov eax, 0x19; syscall; 
0x0000000046db7e: add [rax], al; endbr64; mov rax, 0xffffffffffffffe0; add rax, fs:[0x0]; ret; 
0x0000000046db5e: add [rax], al; endbr64; mov rax, 0xffffffffffffffe8; add rax, fs:[0x0]; ret; 
0x0000000046db3e: add [rax], al; endbr64; mov rax, 0xfffffffffffffff0; add rax, fs:[0x0]; ret; 
0x00000000420b8e: add [rax], al; endbr64; mov rax, 0xffffffffffffffff; ret; 
0x0000000048c95e: add [rax], al; endbr64; mov rax, [rax+0x8]; sub rax, fs:[0x0]; ret; 
0x00000000420bee: add [rax], al; endbr64; mov rax, [rdi+0x68]; ret; 
0x00000000498b7e: add [rax], al; endbr64; mov rax, [rdi+0x98]; ret; 
0x0000000046af7e: add [rax], al; endbr64; mov rax, [rip+0x61225]; ret; 
0x000000004615ce: add [rax], al; endbr64; mov rax, [rip+0x6b68d]; ret; 
0x00000000420bce: add [rax], al; endbr64; mov rax, [rip+0xa8905]; ret; 
0x00000000420bfe: add [rax], al; endbr64; mov rax, rdi; ret; 
0x00000000420bbe: add [rax], al; endbr64; ret; 
0x0000000041fc1e: add [rax], al; endbr64; xor eax, eax; ret; 
0x0000000045a9de: add [rax], al; endbr64; xor eax, eax; syscall; 
0x00000000401cac: add [rax], al; hlt; nop; endbr64; ret; 
0x000000004216fb: add [rax], al; jbe short 0x0000000000421700; ret; 
0x0000000042173b: add [rax], al; jbe short 0x0000000000421740; ret; 
0x00000000421afb: add [rax], al; jbe short 0x0000000000421b00; ret; 
0x0000000041b68a: add [rax], al; je short 0x000000000041b68f; ret; 
0x0000000044fffd: add [rax], al; je short 0x0000000000450080; mov byte ptr [rdi], 0x0; vzeroupper; ret; 
0x0000000045ad10: add [rax], al; je short 0x000000000045ad45; mov rdi, rbp; xor esi, esi; call r12; 
0x0000000045ada0: add [rax], al; je short 0x000000000045add5; mov rdi, rbp; xor esi, esi; call r12; 
0x0000000045b987: add [rax], al; je short 0x000000000045b9ba; mov rdi, rbp; xor esi, esi; call r12; 
0x0000000045ba38: add [rax], al; je short 0x000000000045ba6d; mov rdi, rbp; xor esi, esi; call r12; 
0x000000004788bb: add [rax], al; jmp rax; 
0x00000000432612: add [rax], al; jne 0x0000000000432520; ret; 
0x0000000046dfb6: add [rax], al; jne 0x000000000046e056; add rsp, 0x98; ret; 
0x0000000048f340: add [rax], al; jne 0x000000000048f3c5; leave; ret; 
0x0000000040f7ea: add [rax], al; jne short 0x000000000040f814; mov eax, r8d; add rsp, 0x118; ret; 
0x00000000410f98: add [rax], al; jne short 0x0000000000410fa4; add rsp, 0xd8; ret; 
0x00000000411056: add [rax], al; jne short 0x0000000000411062; add rsp, 0xd8; ret; 
0x000000004259da: add [rax], al; jne short 0x00000000004259e4; add rsp, 0x10; pop rbp; ret; 
0x000000004586b1: add [rax], al; jne short 0x00000000004586d4; add rsp, 0x20; pop rbx; ret; 
0x00000000459c39: add [rax], al; jne short 0x0000000000459c51; add rsp, 0x28; ret; 
0x0000000045a7a9: add [rax], al; jne short 0x000000000045a7f3; add rsp, 0x68; ret; 
0x0000000045a838: add [rax], al; jne short 0x000000000045a883; add rsp, 0x18; ret; 
0x0000000045a8f0: add [rax], al; jne short 0x000000000045a93b; add rsp, 0x58; ret; 
0x0000000045a98e: add [rax], al; jne short 0x000000000045a9db; add rsp, 0x58; ret; 
0x0000000045ab9c: add [rax], al; jne short 0x000000000045aba5; add rsp, 0x28; ret; 
0x0000000046dc43: add [rax], al; jne short 0x000000000046dc4c; add rsp, 0x18; ret; 
0x0000000046debe: add [rax], al; jne short 0x000000000046df04; mov eax, r9d; add rsp, 0x148; ret; 
0x0000000046fee3: add [rax], al; jne short 0x000000000046ff05; add rsp, 0x38; ret; 
0x00000000475696: add [rax], al; jne short 0x00000000004756a2; add rsp, 0xd8; ret; 
0x00000000480591: add [rax], al; jne short 0x000000000048059d; movzx eax, al; add rsp, 0x58; ret; 
0x0000000048064b: add [rax], al; jne short 0x0000000000480674; mov eax, r9d; add rsp, 0x38; ret; 
0x0000000048a3a9: add [rax], al; jne short 0x000000000048a3c0; mov r8, [rip+0x4231c]; mov rax, r8; ret; 
0x0000000048cb3c: add [rax], al; jne short 0x000000000048cb46; add rsp, 0x20; pop rbx; ret; 
0x0000000048cc37: add [rax], al; jne short 0x000000000048cc63; add rsp, 0x38; ret; 
0x0000000048cd03: add [rax], al; jne short 0x000000000048cd34; add rsp, 0x58; ret; 
0x0000000048ce75: add [rax], al; jne short 0x000000000048ceb4; add rsp, 0x68; ret; 
0x0000000048d193: add [rax], al; jne short 0x000000000048d1c4; add rsp, 0x58; ret; 
0x0000000048fe3a: add [rax], al; jne short 0x000000000048fe43; add rsp, 0x28; ret; 
0x0000000048ff28: add [rax], al; jne short 0x000000000048ff31; add rsp, 0x38; ret; 
0x00000000493ea3: add [rax], al; jne short 0x0000000000493eac; add rsp, 0x38; ret; 
0x0000000043befd: add [rax], al; lea r11, [rip+0x6537a]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000486370: add [rax], al; lea rax, [rax+rdx*4]; mov [rdi+0x2f4], edx; mov [rdi+0x308], rax; ret; 
0x0000000048633e: add [rax], al; lea rax, [rax+rdx*4]; mov [rdi+0x2fc], ecx; mov [rdi+0x310], rax; ret; 
0x000000004545be: add [rax], al; lea rax, [rdi+0x2]; ret; 
0x000000004545ce: add [rax], al; lea rax, [rdi+0x3]; ret; 
0x000000004545de: add [rax], al; lea rax, [rdi+0x4]; ret; 
0x000000004545ee: add [rax], al; lea rax, [rdi+0x5]; ret; 
0x000000004545fe: add [rax], al; lea rax, [rdi+0x6]; ret; 
0x0000000045453a: add [rax], al; lea rax, [rdi+0x7]; ret; 
0x0000000045460e: add [rax], al; lea rax, [rdi+0x8]; ret; 
0x0000000045461e: add [rax], al; lea rax, [rdi+0x9]; ret; 
0x0000000045462e: add [rax], al; lea rax, [rdi+0xa]; ret; 
0x0000000045463e: add [rax], al; lea rax, [rdi+0xb]; ret; 
0x0000000045464e: add [rax], al; lea rax, [rdi+0xc]; ret; 
0x0000000045465e: add [rax], al; lea rax, [rdi+0xd]; ret; 
0x0000000045466e: add [rax], al; lea rax, [rdi+0xe]; ret; 
0x0000000045458d: add [rax], al; lea rax, [rdi+0xf]; ret; 
0x0000000044ecfd: add [rax], al; lea rax, [rdi+rax]; cmp [rax], sil; cmovne rax, rdx; ret; 
0x0000000047f017: add [rax], al; lea rax, [rip+0x270]; cmove rax, rdx; ret; 
0x0000000048ffe0: add [rax], al; lea rax, [rip+0x67]; cmovne rax, rdx; ret; 
0x0000000042a3d7: add [rax], al; lea rax, [rip+0x7600]; cmove rax, rdx; ret; 
0x00000000429f47: add [rax], al; lea rax, [rip+0x7760]; cmove rax, rdx; ret; 
0x0000000047e247: add [rax], al; lea rax, [rip+0x890]; cmove rax, rdx; ret; 
0x0000000047efd7: add [rax], al; lea rax, [rip+0x8b0]; cmove rax, rdx; ret; 
0x0000000047bc39: add [rax], al; lea rcx, [rip+0x37a56]; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x000000004177e5: add [rax], al; lea rcx, [rip+0x878ea]; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x0000000041b853: add [rax], al; lea rcx, [rip+0xaf844]; mov [rdx+0xe0], rcx; pop rbx; ret; 
0x00000000487524: add [rax], al; lea rdi, [rip+0x2d1cb]; movsxd rax, [rdi+r12*4]; add rax, rdi; notrack jmp rax; 
0x0000000049cf25: add [rax], al; lea rdi, [rip+0x2f3b2]; syscall; 
0x000000004767be: add [rax], al; lea rdi, [rip+0x3c059]; lea rsi, [rip+0x503f2]; movzx eax, byte ptr [rdi+rax]; jmp qword ptr [rsi+rax*8]; 
0x00000000475595: add [rax], al; lea rdi, [rip+0x56d52]; syscall; 
0x00000000475311: add [rax], al; lea rdi, [rip+0x56fd2]; syscall; 
0x0000000047328d: add [rax], al; lea rdi, [rip+0x5904e]; syscall; 
0x0000000047314d: add [rax], al; lea rdi, [rip+0x5918e]; syscall; 
0x0000000046f685: add [rax], al; lea rdi, [rip+0x5cc52]; syscall; 
0x0000000046f5c0: add [rax], al; lea rdi, [rip+0x5cd17]; syscall; 
0x0000000046f41e: add [rax], al; lea rdi, [rip+0x5ceb9]; syscall; 
0x0000000046f344: add [rax], al; lea rdi, [rip+0x5cf93]; syscall; 
0x00000000461b75: add [rax], al; lea rdi, [rip+0x6b0f2]; syscall; 
0x00000000461a09: add [rax], al; lea rdi, [rip+0x6b25e]; syscall; 
0x000000004618e9: add [rax], al; lea rdi, [rip+0x6b37e]; syscall; 
0x00000000458bf1: add [rax], al; lea rdi, [rip+0x74076]; syscall; 
0x00000000428e11: add [rax], al; lea rdi, [rip+0xa0d46]; syscall; 
0x00000000426211: add [rax], al; lea rdi, [rip+0xa3946]; syscall; 
0x000000004261b1: add [rax], al; lea rdi, [rip+0xa39a6]; syscall; 
0x00000000425df1: add [rax], al; lea rdi, [rip+0xa3d66]; syscall; 
0x00000000425b91: add [rax], al; lea rdi, [rip+0xa3fc6]; syscall; 
0x000000004255b9: add [rax], al; lea rdi, [rip+0xa459e]; syscall; 
0x00000000425581: add [rax], al; lea rdi, [rip+0xa45d6]; syscall; 
0x00000000427171: add [rax], al; lea rdi, [rip+0xa4ef6]; syscall; 
0x00000000426725: add [rax], al; lea rdi, [rip+0xa5932]; syscall; 
0x00000000422882: add [rax], al; lea rdi, [rip+0xa97d5]; syscall; 
0x00000000422851: add [rax], al; lea rdi, [rip+0xa9816]; syscall; 
0x000000004225d1: add [rax], al; lea rdi, [rip+0xa9a96]; syscall; 
0x000000004220ad: add [rax], al; lea rdi, [rip+0xa9fba]; syscall; 
0x00000000420cc3: add [rax], al; lea rdi, [rip+0xab324]; syscall; 
0x00000000420703: add [rax], al; lea rdi, [rip+0xab8e4]; syscall; 
0x00000000420397: add [rax], al; lea rdi, [rip+0xabc50]; syscall; 
0x00000000420055: add [rax], al; lea rdi, [rip+0xabf92]; syscall; 
0x0000000041eaef: add [rax], al; lea rdi, [rip+0xad4f8]; syscall; 
0x0000000041e84f: add [rax], al; lea rdi, [rip+0xad798]; syscall; 
0x0000000041e4fb: add [rax], al; lea rdi, [rip+0xadaec]; syscall; 
0x00000000418671: add [rax], al; lea rdi, [rip+0xb45f6]; syscall; 
0x00000000410780: add [rax], al; lea rdi, [rip+0xbc387]; syscall; 
0x00000000410640: add [rax], al; lea rdi, [rip+0xbc4c7]; syscall; 
0x00000000410409: add [rax], al; lea rdi, [rip+0xbc6fe]; syscall; 
0x000000004103ce: add [rax], al; lea rdi, [rip+0xbc739]; syscall; 
0x000000004102ea: add [rax], al; lea rdi, [rip+0xbc81d]; syscall; 
0x00000000406d1e: add [rax], al; lea rdi, [rip+0xc4e51]; syscall; 
0x0000000040537b: add [rax], al; lea rdi, [rip+0xc67bc]; syscall; 
0x000000004041fc: add [rax], al; lea rdi, [rip+0xc7893]; syscall; 
0x000000004041ce: add [rax], al; lea rdi, [rip+0xc78c1]; syscall; 
0x00000000404082: add [rax], al; lea rdi, [rip+0xc7a0d]; syscall; 
0x000000004012da: add [rax], al; lea rdi, [rip+0xca8ad]; syscall; 
0x0000000042a036: add [rax], al; lea rdx, [rip+0x11ea1]; cmovne rax, rdx; ret; 
0x000000004293c7: add [rax], al; lea rdx, [rip+0x2760]; cmovne rax, rdx; ret; 
0x00000000429f98: add [rax], al; lea rdx, [rip+0x2a6df]; cmovne rax, rdx; ret; 
0x00000000429711: add [rax], al; lea rdx, [rip+0x5326]; cmovne rax, rdx; ret; 
0x000000004585f7: add [rax], al; lea rdx, [rip+0xa90]; cmovne rax, rdx; ret; 
0x0000000042a356: add [rax], al; lea rdx, [rip+0xf091]; cmovne rax, rdx; ret; 
0x0000000042a196: add [rax], al; lea rdx, [rip+0xf231]; cmovne rax, rdx; ret; 
0x0000000045a7b6: add [rax], al; lea rdx, [rsp+0x8]; mov esi, 0x10; mov eax, 0x48; syscall; 
0x00000000486fe7: add [rax], al; lea rsi, [rip+0x2d670]; movsxd rax, [rsi+r12*4]; add rax, rsi; notrack jmp rax; 
0x00000000493486: add [rax], al; lea rsi, [rip+0x397b1]; mov edi, 0x3005; mov eax, 0x9e; syscall; 
0x00000000457990: add [rax], al; lea rsi, [rip+0x4a187]; movsxd rax, [rsi+rdi*4]; add rax, rsi; notrack jmp rax; 
0x0000000041bedf: add [rax], al; lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax+0x90]; 
0x00000000419987: add [rax], al; lea rsi, [rsp+0x30]; mov rdi, r15; call qword ptr [r14+0x90]; 
0x0000000040205a: add [rax], al; leave; ret; 
0x0000000045d906: add [rax], al; mov [rax+0x20], rsi; ret; 
0x0000000048fda8: add [rax], al; mov [rax], rdx; pop rbx; ret; 
0x00000000493f16: add [rax], al; mov [rbx+0x18], rax; pop rbx; ret; 
0x00000000493fda: add [rax], al; mov [rbx+0x20], rax; pop rbx; ret; 
0x0000000045d89e: add [rax], al; mov [rdi+0x20], rsi; ret; 
0x0000000048637a: add [rax], al; mov [rdi+0x308], rax; ret; 
0x00000000486348: add [rax], al; mov [rdi+0x310], rax; ret; 
0x00000000498b6e: add [rax], al; mov [rdi+rsi*8], rdx; add rsp, 0x8; ret; 
0x00000000453c4e: add [rax], al; mov [rdi], dh; lea rax, [rdi]; ret; 
0x0000000045361e: add [rax], al; mov [rdi], dh; ret; 
0x0000000048f5d8: add [rax], al; mov [rdi], rsi; ret; 
0x000000004189d8: add [rax], al; mov [rdx+0xe0], rcx; ret; 
0x00000000422a33: add [rax], al; mov [rip+0xa7104], rax; ret; 
0x00000000422a25: add [rax], al; mov [rip+0xa711a], rax; lea rax, [rip+0x319b]; mov [rip+0xa7104], rax; ret; 
0x00000000421ad0: add [rax], al; mov [rip+0xa8014], eax; ret; 
0x00000000421aa9: add [rax], al; mov [rip+0xa801e], rax; ret; 
0x00000000421a80: add [rax], al; mov [rip+0xa803f], rax; ret; 
0x00000000421a60: add [rax], al; mov [rip+0xa8057], rax; ret; 
0x00000000402efc: add [rax], al; mov [rsi], rsi; mov [rsi+0x10], rsi; syscall; 
0x00000000419a51: add [rax], al; mov [rsp+0x10], rcx; xor edx, edx; mov rdi, r15; call qword ptr [r14+0x80]; 
0x0000000045c07b: add [rax], al; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045315e: add [rax], al; mov ax, [rcx]; mov [rdx], ax; lea rax, [rdx+0x1]; ret; 
0x000000004519ae: add [rax], al; mov ax, [rcx]; mov [rdx], ax; mov rax, rdi; ret; 
0x0000000041439a: add [rax], al; mov byte ptr [rbp-0x508], 0x20; mov [rbp-0x4f8], rsi; jmp rax; 
0x0000000045363e: add [rax], al; mov cx, [rsi]; mov [rdi], cx; mov [rdi+0x2], dh; ret; 
0x00000000479bfe: add [rax], al; mov dword ptr [rbp-0x4e8], 0x0; mov rax, [rsi+rax*8]; jmp rax; 
0x000000004788b1: add [rax], al; mov dword ptr [rbp-0x4f0], 0x20; jmp rax; 
0x00000000479b36: add [rax], al; mov dword ptr [rbp-0x4f0], 0x20; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000047889c: add [rax], al; mov dword ptr [rbp-0x514], 0x0; mov qword ptr [rbp-0x4c8], 0x0; mov dword ptr [rbp-0x4f0], 0x20; jmp rax; 
0x0000000041d31c: add [rax], al; mov dword ptr [rbx+0x70], 0xffffffff; pop rbx; ret; 
0x0000000048f6b0: add [rax], al; mov dword ptr [rdx], 0xffffc002; ret; 
0x00000000492cce: add [rax], al; mov dword ptr [rip+0x397c6], 0x2; test byte ptr [rip+0x39e9f], 0x40; jne short 0x0000000000492ce8; ret; 
0x00000000453c5e: add [rax], al; mov dx, [rsi]; mov [rdi], dx; lea rax, [rdi+0x1]; ret; 
0x0000000048f5bf: add [rax], al; mov eax, 0x1; ret; 
0x0000000048f732: add [rax], al; mov eax, 0x2; ret; 
0x0000000045a7c0: add [rax], al; mov eax, 0x48; syscall; 
0x00000000402606: add [rax], al; mov eax, 0x9e; syscall; 
0x0000000049cf20: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x2f3b2]; syscall; 
0x00000000475590: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x56d52]; syscall; 
0x0000000047530c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x56fd2]; syscall; 
0x00000000473288: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x5904e]; syscall; 
0x00000000473148: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x5918e]; syscall; 
0x0000000046f680: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x5cc52]; syscall; 
0x0000000046f5bb: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x5cd17]; syscall; 
0x0000000046f419: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x5ceb9]; syscall; 
0x0000000046f33f: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x5cf93]; syscall; 
0x00000000461b70: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x6b0f2]; syscall; 
0x00000000461a04: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x6b25e]; syscall; 
0x000000004618e4: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x6b37e]; syscall; 
0x00000000458bec: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x74076]; syscall; 
0x00000000428e0c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xa0d46]; syscall; 
0x0000000042620c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xa3946]; syscall; 
0x000000004261ac: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xa39a6]; syscall; 
0x00000000425dec: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xa3d66]; syscall; 
0x00000000425b8c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xa3fc6]; syscall; 
0x000000004255b4: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xa459e]; syscall; 
0x0000000042557c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xa45d6]; syscall; 
0x0000000042716c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xa4ef6]; syscall; 
0x00000000426720: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xa5932]; syscall; 
0x0000000042287d: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xa97d5]; syscall; 
0x0000000042284c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xa9816]; syscall; 
0x000000004225cc: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xa9a96]; syscall; 
0x000000004220a8: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xa9fba]; syscall; 
0x00000000420cbe: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xab324]; syscall; 
0x000000004206fe: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xab8e4]; syscall; 
0x00000000420392: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xabc50]; syscall; 
0x00000000420050: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xabf92]; syscall; 
0x0000000041eaea: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xad4f8]; syscall; 
0x0000000041e84a: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xad798]; syscall; 
0x0000000041e4f6: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xadaec]; syscall; 
0x0000000041866c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xb45f6]; syscall; 
0x0000000041077b: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xbc387]; syscall; 
0x0000000041063b: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xbc4c7]; syscall; 
0x00000000410404: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xbc6fe]; syscall; 
0x000000004103c9: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xbc739]; syscall; 
0x000000004102e5: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xbc81d]; syscall; 
0x00000000406d19: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xc4e51]; syscall; 
0x00000000405376: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xc67bc]; syscall; 
0x000000004041f7: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xc7893]; syscall; 
0x000000004041c9: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xc78c1]; syscall; 
0x0000000040407d: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xc7a0d]; syscall; 
0x000000004012d5: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xca8ad]; syscall; 
0x00000000401444: add [rax], al; mov eax, 0xca; syscall; 
0x0000000046dded: add [rax], al; mov eax, 0xd; syscall; 
0x0000000040f7d2: add [rax], al; mov eax, 0xe; syscall; 
0x0000000041a18e: add [rax], al; mov eax, 0xffffffff; pop rbp; ret; 
0x0000000041af4e: add [rax], al; mov eax, 0xffffffff; ret; 
0x000000004984a8: add [rax], al; mov eax, [rbx+0x8]; movsxd rax, [r12+rax*4]; add rax, r12; notrack jmp rax; 
0x00000000462a66: add [rax], al; mov eax, [rip+0x6972e]; test eax, eax; je short 0x0000000000462a78; ret; 
0x000000004266f5: add [rax], al; mov eax, ebx; syscall; 
0x0000000040f79d: add [rax], al; mov eax, ecx; syscall; 
0x0000000048d593: add [rax], al; mov eax, r12d; pop r12; ret; 
0x0000000046b0e3: add [rax], al; mov eax, r8d; pop rbp; pop r12; ret; 
0x00000000418243: add [rax], al; mov eax, r8d; pop rbx; pop rbp; ret; 
0x0000000041b2f3: add [rax], al; mov eax, r9d; syscall; 
0x0000000045365e: add [rax], al; mov ecx, [rsi]; mov [rdi+0x4], dh; mov [rdi], ecx; ret; 
0x00000000498a08: add [rax], al; mov edi, 0x1; call rax; 
0x0000000045968e: add [rax], al; mov edi, edx; mov eax, esi; syscall; 
0x00000000418e26: add [rax], al; mov edx, 0x10; mov rsi, r13; mov rdi, r15; call qword ptr [r14+0x38]; 
0x0000000041d4b7: add [rax], al; mov edx, 0x1; mov rdi, rbx; call qword ptr [rbp+0x48]; 
0x0000000041a889: add [rax], al; mov edx, 0x1; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x0000000043bd6e: add [rax], al; mov edx, [rsi]; mov [rdi], edx; ret; 
0x00000000419c64: add [rax], al; mov edx, r12d; mov rsi, rbp; mov rdi, r15; call qword ptr [r14+0x80]; 
0x0000000041c11c: add [rax], al; mov edx, r13d; mov rsi, r12; mov rdi, rbp; call qword ptr [r15+0x80]; 
0x000000004216ad: add [rax], al; mov esi, 0x80; mov eax, 0xca; syscall; 
0x0000000047e1ba: add [rax], al; mov esi, 0x80; syscall; 
0x0000000049cf1b: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x2f3b2]; syscall; 
0x0000000047558b: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x56d52]; syscall; 
0x00000000475307: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x56fd2]; syscall; 
0x00000000473283: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x5904e]; syscall; 
0x00000000473143: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x5918e]; syscall; 
0x0000000046f67b: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x5cc52]; syscall; 
0x0000000046f5b6: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x5cd17]; syscall; 
0x0000000046f414: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x5ceb9]; syscall; 
0x0000000046f33a: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x5cf93]; syscall; 
0x00000000461b6b: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x6b0f2]; syscall; 
0x000000004619ff: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x6b25e]; syscall; 
0x000000004618df: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x6b37e]; syscall; 
0x00000000458be7: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x74076]; syscall; 
0x00000000428e07: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa0d46]; syscall; 
0x00000000426207: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa3946]; syscall; 
0x000000004261a7: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa39a6]; syscall; 
0x00000000425de7: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa3d66]; syscall; 
0x00000000425b87: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa3fc6]; syscall; 
0x000000004255af: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa459e]; syscall; 
0x00000000425577: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa45d6]; syscall; 
0x00000000427167: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa4ef6]; syscall; 
0x0000000042671b: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa5932]; syscall; 
0x00000000422878: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa97d5]; syscall; 
0x00000000422847: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa9816]; syscall; 
0x000000004225c7: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa9a96]; syscall; 
0x000000004220a3: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa9fba]; syscall; 
0x00000000420cb9: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xab324]; syscall; 
0x000000004206f9: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xab8e4]; syscall; 
0x0000000042038d: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xabc50]; syscall; 
0x0000000042004b: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xabf92]; syscall; 
0x0000000041eae5: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xad4f8]; syscall; 
0x0000000041e845: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xad798]; syscall; 
0x0000000041e4f1: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xadaec]; syscall; 
0x00000000418667: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb45f6]; syscall; 
0x00000000410776: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbc387]; syscall; 
0x00000000410636: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbc4c7]; syscall; 
0x000000004103ff: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbc6fe]; syscall; 
0x000000004103c4: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbc739]; syscall; 
0x000000004102e0: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbc81d]; syscall; 
0x00000000406d14: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc4e51]; syscall; 
0x00000000405371: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc67bc]; syscall; 
0x000000004041f2: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc7893]; syscall; 
0x000000004041c4: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc78c1]; syscall; 
0x00000000404078: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc7a0d]; syscall; 
0x000000004012d0: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xca8ad]; syscall; 
0x0000000040143f: add [rax], al; mov esi, 0x81; mov eax, 0xca; syscall; 
0x000000004266f0: add [rax], al; mov esi, 0x81; mov eax, ebx; syscall; 
0x00000000426590: add [rax], al; mov esi, 0x81; mov rdi, r12; mov eax, 0xca; syscall; 
0x00000000427b23: add [rax], al; mov esi, 0x81; mov rdi, r13; mov eax, 0xca; syscall; 
0x00000000428764: add [rax], al; mov esi, 0x81; mov rdi, r15; mov eax, 0xca; syscall; 
0x00000000423425: add [rax], al; mov esi, 0x81; mov rdi, rbp; mov eax, 0xca; syscall; 
0x000000004274e9: add [rax], al; mov esi, 0x81; mov rdi, rbx; mov eax, 0xca; syscall; 
0x0000000047d70e: add [rax], al; mov esi, 0xffffffff; call qword ptr [rax+0x18]; 
0x0000000041cc38: add [rax], al; mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rax+0x18]; 
0x0000000041ee8f: add [rax], al; mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rbx+0x18]; 
0x000000004205fd: add [rax], al; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [r13+0x18]; 
0x0000000041fec6: add [rax], al; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [r15+0x18]; 
0x0000000041f5ef: add [rax], al; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp+0x18]; 
0x0000000041024a: add [rax], al; mov esi, ebp; ror rdx, 0x11; xor rdx, fs:[0x30]; call rdx; 
0x0000000047d3c5: add [rax], al; mov esi, r15d; mov rdi, rbp; call qword ptr [r14+0x18]; 
0x0000000046dbed: add [rax], al; mov fs:[rdx], rax; ret; 
0x0000000041fb42: add [rax], al; mov qword ptr [rax+0x8], 0x0; ret; 
0x000000004788a6: add [rax], al; mov qword ptr [rbp-0x4c8], 0x0; mov dword ptr [rbp-0x4f0], 0x20; jmp rax; 
0x0000000041438f: add [rax], al; mov qword ptr [rbp-0x4e0], 0x0; mov byte ptr [rbp-0x508], 0x20; mov [rbp-0x4f8], rsi; jmp rax; 
0x00000000420cdd: add [rax], al; mov qword ptr [rip+0xab30e], 0x0; ret; 
0x0000000048d59e: add [rax], al; mov qword ptr fs:[r12], 0x0; mov rax, [rsp+0x10]; mov rdi, [rsp+0x18]; call rax; 
0x0000000048778b: add [rax], al; mov r10, [rbp-0x90]; call r10; 
0x0000000046dde7: add [rax], al; mov r10d, 0x8; mov eax, 0xd; syscall; 
0x000000004968c6: add [rax], al; mov r8, [r8]; mov [r9], r8; add rsp, 0x8; ret; 
0x00000000479bbe: add [rax], al; mov r9d, 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000047face: add [rax], al; mov rax, 0x2; ret; 
0x0000000047fade: add [rax], al; mov rax, 0x3; ret; 
0x0000000047faee: add [rax], al; mov rax, 0x4; ret; 
0x0000000047fafe: add [rax], al; mov rax, 0x5; ret; 
0x0000000047fb0e: add [rax], al; mov rax, 0x6; ret; 
0x0000000047fb1e: add [rax], al; mov rax, 0x7; ret; 
0x00000000459c9e: add [rax], al; mov rax, 0xffffffffffffffc0; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000045abe6: add [rax], al; mov rax, 0xffffffffffffffc0; mov dword ptr fs:[rax], 0x16; mov rax, 0xffffffffffffffff; ret; 
0x000000004806c6: add [rax], al; mov rax, 0xffffffffffffffc0; mov dword ptr fs:[rax], 0xc; mov eax, 0xffffffff; ret; 
0x0000000045abf4: add [rax], al; mov rax, 0xffffffffffffffff; ret; 
0x00000000410266: add [rax], al; mov rax, [rax+0x18]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000041a182: add [rax], al; mov rax, [rax+0x20]; jmp rax; 
0x0000000041facd: add [rax], al; mov rax, [rax+0x68]; test rax, rax; jne short 0x000000000041fac8; ret; 
0x000000004796fe: add [rax], al; mov rax, [rax+rsi*8]; jmp rax; 
0x00000000496a16: add [rax], al; mov rax, [rsi+0xb0]; add rsp, 0x8; ret; 
0x00000000478ae9: add [rax], al; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000048d5a7: add [rax], al; mov rax, [rsp+0x10]; mov rdi, [rsp+0x18]; call rax; 
0x000000004963aa: add [rax], al; mov rax, [rsp]; add rsp, 0x38; ret; 
0x000000004248ef: add [rax], al; mov rax, r8; ret; 
0x000000004594b1: add [rax], al; mov rax, r8; shr rax, 0x2; vzeroupper; ret; 
0x0000000044fc1e: add [rax], al; mov rax, r8; vzeroupper; ret; 
0x00000000498d30: add [rax], al; mov rax, rbp; pop rbx; pop rbp; ret; 
0x0000000048aa79: add [rax], al; mov rbp, rsp; mov rsi, rbp; syscall; 
0x0000000045369e: add [rax], al; mov rcx, [rsi]; mov [rdi+0x8], dh; mov [rdi], rcx; ret; 
0x0000000048d54a: add [rax], al; mov rcx, [rsp+0x10]; mov rdi, [rsp+0x18]; call rcx; 
0x00000000456823: add [rax], al; mov rcx, rdx; rep movsb [rdi], [rsi]; ret; 
0x0000000045bb89: add [rax], al; mov rdi, [r13]; call rbx; 
0x0000000045bc49: add [rax], al; mov rdi, [r14]; call rbx; 
0x0000000045bdba: add [rax], al; mov rdi, [r15]; call rbx; 
0x0000000046e206: add [rax], al; mov rdi, [rsp+0x18]; mov rdx, rbp; mov rsi, r12; call rbx; 
0x00000000426595: add [rax], al; mov rdi, r12; mov eax, 0xca; syscall; 
0x0000000047db89: add [rax], al; mov rdi, r13; call qword ptr [r14+0x20]; 
0x0000000049b5d6: add [rax], al; mov rdi, r13; call rbx; 
0x00000000427b28: add [rax], al; mov rdi, r13; mov eax, 0xca; syscall; 
0x00000000419d3e: add [rax], al; mov rdi, r15; call qword ptr [r13+0x80]; 
0x00000000419f34: add [rax], al; mov rdi, r15; call qword ptr [rbp+0x80]; 
0x00000000428769: add [rax], al; mov rdi, r15; mov eax, 0xca; syscall; 
0x0000000041cf42: add [rax], al; mov rdi, rbp; call qword ptr [r13+0x20]; 
0x0000000041ccf2: add [rax], al; mov rdi, rbp; call qword ptr [rax+0x80]; 
0x0000000041c1d8: add [rax], al; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x0000000042342a: add [rax], al; mov rdi, rbp; mov eax, 0xca; syscall; 
0x0000000041d6e3: add [rax], al; mov rdi, rbx; call qword ptr [r12+0x88]; 
0x0000000041f7ac: add [rax], al; mov rdi, rbx; call qword ptr [r13+0x60]; 
0x0000000041f573: add [rax], al; mov rdi, rbx; call qword ptr [rbp+0x20]; 
0x0000000041d4bc: add [rax], al; mov rdi, rbx; call qword ptr [rbp+0x48]; 
0x0000000041a88e: add [rax], al; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x0000000047bfa5: add [rax], al; mov rdi, rbx; call r8; 
0x00000000417d0f: add [rax], al; mov rdi, rbx; call rax; 
0x000000004274ee: add [rax], al; mov rdi, rbx; mov eax, 0xca; syscall; 
0x0000000041b9e3: add [rax], al; mov rdx, [rbx+0x40]; mov rdi, rbx; sub rdx, rsi; call qword ptr [r12+0x70]; 
0x0000000048fda1: add [rax], al; mov rdx, [rdi+0x458]; mov [rax], rdx; pop rbx; ret; 
0x000000004189d1: add [rax], al; mov rdx, [rdi+0xa0]; mov [rdx+0xe0], rcx; ret; 
0x0000000043bbae: add [rax], al; mov rdx, [rsi]; mov [rdi], rdx; ret; 
0x0000000047c7a2: add [rax], al; mov rdx, r12; mov rsi, r14; mov rdi, rbx; call qword ptr [r15+0x38]; 
0x0000000047c57c: add [rax], al; mov rdx, r12; mov rsi, rbp; mov rdi, rbx; call qword ptr [r13+0x38]; 
0x00000000418fd6: add [rax], al; mov rdx, r12; mov rsi, rbp; mov rdi, rbx; call qword ptr [r13+0x58]; 
0x00000000412791: add [rax], al; mov rdx, r13; mov rsi, r10; mov rdi, r15; call qword ptr [rbx+0x38]; 
0x00000000412e36: add [rax], al; mov rdx, r13; mov rsi, r10; mov rdi, r15; call qword ptr [rcx+0x38]; 
0x00000000403076: add [rax], al; mov rdx, r13; mov rsi, r12; mov edi, ebp; call qword ptr [r15+rbx*8]; 
0x0000000049545e: add [rax], al; mov rdx, r13; mov rsi, r12; mov edi, ebp; call qword ptr [rbx]; 
0x000000004124e8: add [rax], al; mov rdx, r13; mov rsi, r12; mov rdi, r15; call qword ptr [rcx+0x38]; 
0x0000000041bcfc: add [rax], al; mov rdx, r13; mov rsi, r12; mov rdi, rbp; call qword ptr [r15+0x40]; 
0x0000000041c72f: add [rax], al; mov rdx, r13; mov rsi, r15; mov rdi, rbp; call qword ptr [rax+0x40]; 
0x0000000041c8cb: add [rax], al; mov rdx, r15; mov rsi, r14; mov rdi, rbx; call qword ptr [rbp+0x70]; 
0x0000000049b5ce: add [rax], al; mov rdx, rbp; mov esi, 0x40; mov rdi, r13; call rbx; 
0x0000000041d5a2: add [rax], al; mov rdx, rbp; mov rsi, r12; mov rdi, rbx; call qword ptr [r14+0x78]; 
0x00000000412b7b: add [rax], al; mov rdx, rbx; mov rsi, r12; mov rdi, r15; call qword ptr [rcx+0x38]; 
0x0000000045a846: add [rax], al; mov rdx, rsp; mov esi, 0x10; mov eax, 0x48; syscall; 
0x0000000045aec3: add [rax], al; mov rsi, [r14]; mov rax, [rsp+0x8]; mov rdi, r13; call rax; 
0x0000000042830e: add [rax], al; mov rsi, [rsp+0x28]; mov rdi, r12; call rax; 
0x00000000428f8e: add [rax], al; mov rsi, r12; call rax; 
0x00000000418e2b: add [rax], al; mov rsi, r13; mov rdi, r15; call qword ptr [r14+0x38]; 
0x0000000046df8f: add [rax], al; mov rsi, r8; mov eax, 0xe; syscall; 
0x0000000041b2eb: add [rax], al; mov rsi, rbx; mov edi, 0x2; mov eax, r9d; syscall; 
0x0000000041cedc: add [rax], al; mov rsi, rsp; mov rdi, rbp; call qword ptr [r13+0x90]; 
0x0000000041bc96: add [rax], al; mov rsi, rsp; mov rdi, rbp; call qword ptr [r15+0x90]; 
0x0000000047c3d5: add [rax], al; mov rsi, rsp; mov rdi, rbp; call qword ptr [rbx+0x90]; 
0x0000000040f77e: add [rax], al; movaps [rsp+0xd0], xmm0; movaps [rsp+0xe0], xmm0; movaps [rsp+0xf0], xmm0; syscall; 
0x0000000040f786: add [rax], al; movaps [rsp+0xe0], xmm0; movaps [rsp+0xf0], xmm0; syscall; 
0x0000000040f78e: add [rax], al; movaps [rsp+0xf0], xmm0; syscall; 
0x0000000041fa7a: add [rax], al; movdqa xmm0, [rip+0x7fa8c]; mov dword ptr [rdi+0xc0], 0xffffffff; movups [rdi+0xa0], xmm0; ret; 
0x0000000041f9ea: add [rax], al; movdqa xmm0, [rip+0x7fb1c]; mov dword ptr [rdi+0xc0], 0xffffffff; movups [rdi+0xa0], xmm0; ret; 
0x000000004574ba: add [rax], al; movdqu [rdi+rdx-0x10], xmm0; movdqu [rdi], xmm0; ret; 
0x0000000045371e: add [rax], al; movdqu xmm0, [rsi]; movdqu [rdi], xmm0; mov [rdi+0x10], dh; ret; 
0x0000000046ceb7: add [rax], al; movsxd r8, [rdx+r9*4]; add r8, rdx; notrack jmp r8; 
0x00000000439489: add [rax], al; movsxd r9, [r11+r9*4]; add r9, r11; notrack jmp r9; 
0x000000004118cd: add [rax], al; movsxd rax, [r14+rax*4]; add rax, r14; notrack jmp rax; 
0x0000000048239a: add [rax], al; movsxd rdx, [r13+rdx*4]; add rdx, r13; notrack jmp rdx; 
0x0000000047b96b: add [rax], al; movsxd rdx, ebp; mov rdi, rbx; call qword ptr [r14+0x38]; 
0x0000000041751e: add [rax], al; movsxd rdx, r13d; mov rdi, rbx; call qword ptr [r14+0x38]; 
0x0000000047ddd7: add [rax], al; movups [rax+0x40], xmm0; pop rbx; ret; 
0x0000000041f94c: add [rax], al; movups [rbp+0x38], xmm0; pop rbp; pop r12; ret; 
0x0000000041ecd2: add [rax], al; movups [rbx+0x48], xmm0; pop rbx; ret; 
0x0000000048bf4b: add [rax], al; movups [rbx], xmm0; pop rbx; ret; 
0x000000004336be: add [rax], al; movzx eax, byte ptr [rdi-0x1]; movzx ecx, byte ptr [rsi-0x1]; sub eax, ecx; ret; 
0x00000000433471: add [rax], al; movzx eax, byte ptr [rdi-0x1]; movzx edx, byte ptr [rsi-0x1]; sub eax, edx; ret; 
0x000000004558fe: add [rax], al; movzx eax, byte ptr [rdi-0xa]; movzx edx, byte ptr [rsi-0xa]; sub eax, edx; ret; 
0x000000004558ee: add [rax], al; movzx eax, byte ptr [rdi-0xb]; movzx edx, byte ptr [rsi-0xb]; sub eax, edx; ret; 
0x000000004558de: add [rax], al; movzx eax, byte ptr [rdi-0xc]; movzx edx, byte ptr [rsi-0xc]; sub eax, edx; ret; 
0x000000004558ce: add [rax], al; movzx eax, byte ptr [rdi-0xd]; movzx edx, byte ptr [rsi-0xd]; sub eax, edx; ret; 
0x000000004558be: add [rax], al; movzx eax, byte ptr [rdi-0xe]; movzx edx, byte ptr [rsi-0xe]; sub eax, edx; ret; 
0x000000004558ae: add [rax], al; movzx eax, byte ptr [rdi-0xf]; movzx edx, byte ptr [rsi-0xf]; sub eax, edx; ret; 
0x0000000043259e: add [rax], al; movzx eax, byte ptr [rdi]; movzx ecx, byte ptr [rsi]; sub eax, ecx; ret; 
0x0000000049d02e: add [rax], al; movzx eax, byte ptr [rsp+0xf]; add rsp, 0x10; pop rbx; ret; 
0x00000000457a2e: add [rax], al; movzx eax, cl; pop rbx; ret; 
0x0000000042ea2e: add [rax], al; movzx ecx, byte ptr [rsi]; movzx eax, byte ptr [rdi]; sub eax, ecx; ret; 
0x0000000043bebe: add [rax], al; movzx edx, byte ptr [rsi]; mov [rdi], dl; ret; 
0x0000000043be4e: add [rax], al; movzx edx, word ptr [rsi]; mov [rdi], dx; ret; 
0x0000000045007e: add [rax], al; movzx edx, word ptr [rsi]; mov [rdi], dx; vzeroupper; ret; 
0x00000000402894: add [rax], al; nop [rax+rax]; xor edi, edi; mov eax, edx; syscall; 
0x00000000431bab: add [rax], al; nop [rax]; bsf eax, eax; lea rax, [rax+rdi-0x10]; ret; 
0x0000000045963a: add [rax], al; nop [rax]; endbr64; mov eax, 0x25; syscall; 
0x0000000045a71b: add [rax], al; nop [rax]; endbr64; mov eax, 0x3; syscall; 
0x00000000498c0b: add [rax], al; nop [rax]; endbr64; mov rax, [rdi+0xb0]; ret; 
0x0000000043b64a: add [rax], al; nop [rax]; mov edx, [rsi-0x4]; mov [rdi-0x4], edx; ret; 
0x0000000046dd1a: add [rax], al; nop [rax]; mov rax, 0xf; syscall; 
0x000000004358ea: add [rax], al; nop [rax]; mov rdx, [rsi-0x8]; mov [rdi-0x8], rdx; ret; 
0x0000000043b7da: add [rax], al; nop [rax]; movzx edx, byte ptr [rsi-0x1]; mov [rdi-0x1], dl; ret; 
0x0000000043b75a: add [rax], al; nop [rax]; movzx edx, word ptr [rsi-0x2]; mov [rdi-0x2], dx; ret; 
0x0000000045627b: add [rax], al; nop [rax]; xor eax, eax; ret; 
0x0000000047ef9b: add [rax], al; nop [rax]; xor eax, eax; vzeroupper; ret; 
0x0000000045acbd: add [rax], al; nop; endbr64; mov eax, 0x1c; syscall; 
0x0000000048045d: add [rax], al; nop; endbr64; mov eax, 0x66; syscall; 
0x0000000045ac8d: add [rax], al; nop; endbr64; mov eax, 0xa; syscall; 
0x0000000045ac5d: add [rax], al; nop; endbr64; mov eax, 0xb; syscall; 
0x00000000498b0d: add [rax], al; nop; endbr64; mov rax, [rdi+0x90]; ret; 
0x000000004545ad: add [rax], al; nop; lea rax, [rdi+0x1]; ret; 
0x0000000045459d: add [rax], al; nop; lea rax, [rdi]; ret; 
0x0000000047fabd: add [rax], al; nop; mov rax, 0x1; ret; 
0x00000000431e4d: add [rax], al; nop; vzeroupper; xor eax, eax; ret; 
0x0000000048f6a7: add [rax], al; or byte ptr [rcx-0x77], 0x0; mov eax, 0x1; mov dword ptr [rdx], 0xffffc002; ret; 
0x0000000041bc2e: add [rax], al; or dword ptr [rbx], 0x20; mov eax, 0xffffffff; pop rbx; ret; 
0x000000004318a9: add [rax], al; pmovmskb eax, xmm1; bsf eax, eax; lea rax, [rdi+rax+0x30]; ret; 
0x000000004753fc: add [rax], al; pop rbp; pop r12; pop r13; ret; 
0x0000000047d6b7: add [rax], al; pop rbp; pop r12; ret; 
0x00000000458656: add [rax], al; pop rbp; ret; 
0x000000004579e9: add [rax], al; pop rbx; cmove rax, rdx; ret; 
0x0000000048acbc: add [rax], al; pop rbx; or dword ptr [rip+0x3f802], 0x1; ret; 
0x000000004292d6: add [rax], al; pop rbx; pop rbp; pop r12; ret; 
0x0000000045d301: add [rax], al; pop rbx; pop rbp; ret; 
0x00000000402229: add [rax], al; pop rbx; ret; 
0x000000004017dd: add [rax], al; pop rdx; ret; 
0x000000004209d2: add [rax], al; pxor xmm0, xmm0; movups [rbx+0x48], xmm0; pop rbx; ret; 
0x00000000401d66: add [rax], al; ret; 
0x000000004251dd: add [rax], al; shr ecx, 0x3; rep stosq [rdi]; pop rbp; ret; 
0x0000000042551a: add [rax], al; sub dword ptr [rip+0xa463d], 0x1; pop rbp; ret; 
0x0000000043355c: add [rax], al; sub eax, ecx; ret; 
0x000000004208b6: add [rax], al; sub edx, [rax+0x10]; mov eax, [rdi+0x10]; sub eax, edx; ret; 
0x0000000041fdd6: add [rax], al; sub rax, rcx; sub eax, 0x1; ret; 
0x00000000456331: add [rax], al; sub rax, rdx; ret; 
0x0000000047df06: add [rax], al; sub rcx, rax; sar rcx, 0x2; lea eax, [rcx-0x1]; ret; 
0x0000000041d565: add [rax], al; sub rsi, rdx; mov rdi, rbx; mov edx, 0x1; call qword ptr [r14+0x80]; 
0x00000000401449: add [rax], al; syscall; 
0x00000000454584: add [rax], al; test ah, 0x40; jne 0x0000000000454670; lea rax, [rdi+0xf]; ret; 
0x00000000454532: add [rax], al; test al, 0x40; jne 0x0000000000454600; lea rax, [rdi+0x7]; ret; 
0x00000000492cd8: add [rax], al; test byte ptr [rip+0x39e9f], 0x40; jne short 0x0000000000492ce8; ret; 
0x00000000429fbd: add [rax], al; test byte ptr [rip+0xa217f], 0x1; je short 0x0000000000429f81; ret; 
0x000000004544a5: add [rax], al; test dh, 0x40; jne 0x00000000004543e0; lea rax, [rdi+0xf]; ret; 
0x000000004544eb: add [rax], al; test dh, 0x4; jne 0x00000000004543e0; lea rax, [rdi+0xb]; ret; 
0x00000000454422: add [rax], al; test dl, 0x40; jne short 0x00000000004543e0; lea rax, [rdi+0x7]; ret; 
0x00000000454450: add [rax], al; test dl, 0x4; jne short 0x00000000004543e0; lea rax, [rdi+0x3]; ret; 
0x0000000045d3ad: add [rax], al; test eax, eax; cmove eax, edx; ret; 
0x00000000459e5a: add [rax], al; test eax, eax; jne short 0x0000000000459e70; syscall; 
0x00000000459efa: add [rax], al; test eax, eax; jne short 0x0000000000459f10; mov eax, 0x1; syscall; 
0x0000000041e4ca: add [rax], al; test edx, edx; jne short 0x000000000041e4e0; sub dword ptr [rip+0xadb19], 0x1; ret; 
0x00000000420c96: add [rax], al; test edx, edx; jne short 0x0000000000420ca8; sub dword ptr [rip+0xab34d], 0x1; ret; 
0x000000004756d4: add [rax], al; test edx, edx; jne short 0x00000000004756e0; sub dword ptr [rdi], 0x1; ret; 
0x00000000498bf2: add [rax], al; test rax, rax; cmovne rax, [rsp+0x10]; add rsp, 0x28; ret; 
0x0000000040100d: add [rax], al; test rax, rax; je short 0x0000000000401016; call rax; 
0x00000000401cd0: add [rax], al; test rax, rax; je short 0x0000000000401ce0; mov edi, 0x4caed0; jmp rax; 
0x00000000401d12: add [rax], al; test rax, rax; je short 0x0000000000401d20; mov edi, 0x4caed0; jmp rax; 
0x00000000431e5e: add [rax], al; tzcnt eax, eax; add rax, rdi; vzeroupper; ret; 
0x0000000045362c: add [rax], al; xchg ax, ax; mov dx, [rsi]; mov [rdi], dx; ret; 
0x0000000046cdcc: add [rax], al; xchg ax, ax; ret; 
0x00000000498d45: add [rax], al; xor eax, eax; pop rbx; pop rbp; ret; 
0x000000004579a6: add [rax], al; xor eax, eax; pop rbx; ret; 
0x0000000040f6f6: add [rax], al; xor eax, eax; ret; 
0x0000000043156e: add [rax], al; xor eax, eax; vzeroupper; ret; 
0x0000000040289e: add [rax], al; xor edi, edi; mov eax, edx; syscall; 
0x0000000045ac14: add [rax], al; xor edi, edi; or r10d, 0x40; mov eax, ecx; syscall; 
0x0000000045aa4e: add [rax], al; xor edi, edi; syscall; 
0x0000000041a022: add [rax], al; xor edx, edx; mov rdi, r15; call qword ptr [rbx+0x80]; 
0x0000000041c040: add [rax], al; xor edx, edx; mov rdi, rbp; call qword ptr [rax+0x80]; 
0x0000000041c342: add [rax], al; xor edx, edx; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x0000000041ca56: add [rax], al; xor edx, edx; mov rsi, rbp; mov rdi, rbx; call qword ptr [r12+0x80]; 
0x00000000420239: add [rax], al; xor edx, edx; xor esi, esi; mov rdi, rbx; call qword ptr [r15+0x58]; 
0x00000000419f2d: add [rax], al; xor esi, esi; mov edx, 0x1; mov rdi, r15; call qword ptr [rbp+0x80]; 
0x0000000041c2a5: add [rax], al; xor esi, esi; mov edx, 0x1; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x00000000419d37: add [rax], al; xor esi, esi; mov edx, 0x2; mov rdi, r15; call qword ptr [r13+0x80]; 
0x0000000041c1d1: add [rax], al; xor esi, esi; mov edx, 0x2; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x000000004184b7: add [rax], al; xor esi, esi; mov rdi, rbp; call qword ptr [rbx+0x10]; 
0x0000000047e1b0: add [rax], al; xor r10, r10; add rdi, 0x308; mov esi, 0x80; syscall; 
0x0000000041b726: add [rax], al; xor r8d, r8d; mov rax, r8; ret; 
0x000000004543de: add [rax], al; xor rax, rax; ret; 
0x0000000046dfad: add [rax], al; xor rcx, fs:[0x28]; jne 0x000000000046e056; add rsp, 0x98; ret; 
0x000000004585f0: add [rax], cl; lea rax, [rip+0xcb7]; lea rdx, [rip+0xa90]; cmovne rax, rdx; ret; 
0x00000000497312: add [rax], cl; mov byte ptr [rip+0x351b5], 0x8; ret; 
0x0000000049730b: add [rax], cl; mov byte ptr [rip+0x351bb], 0x8; mov byte ptr [rip+0x351b5], 0x8; ret; 
0x00000000497304: add [rax], cl; mov byte ptr [rip+0x351c1], 0x8; mov byte ptr [rip+0x351bb], 0x8; mov byte ptr [rip+0x351b5], 0x8; ret; 
0x00000000497319: add [rax], cl; ret; 
0x0000000048ffd9: add [rax], dl; lea rdx, [rip+0x11e]; lea rax, [rip+0x67]; cmovne rax, rdx; ret; 
0x00000000429449: add [rax], dl; lea rdx, [rip+0x2ceee]; lea rax, [rip+0x2ce37]; cmovne rax, rdx; ret; 
0x00000000429f09: add [rax], dl; lea rdx, [rip-0x362]; lea rax, [rip+0x2bed7]; cmove rax, rdx; ret; 
0x00000000488f10: add [rax], eax; add [rax+0x63], cl; ret; 
0x0000000047eb37: add [rax], eax; add [rax+0xf], cl; mov ebp, 0xf80148c0; ret; 
0x0000000048ffdf: add [rax], eax; add [rax-0x73], cl; add eax, 0x67; cmovne rax, rdx; ret; 
0x0000000049567f: add [rax], eax; add [rax-0x75], cl; or [rax+0x3], cl; add [r13+0x31], r8b; jmp qword ptr [rsi-0x7d]; 
0x0000000041cedb: add [rax], eax; add [rax-0x77], cl; out 0x48, al; mov edi, ebp; call qword ptr [r13+0x90]; 
0x0000000041bc95: add [rax], eax; add [rax-0x77], cl; out 0x48, al; mov edi, ebp; call qword ptr [r15+0x90]; 
0x00000000456822: add [rax], eax; add [rax-0x77], cl; shl ebx, 0x1; movsb [rdi], [rsi]; ret; 
0x00000000425be3: add [rax], eax; add [rax-0x7d], cl; call far fword ptr [rdi]; 
0x00000000483d27: add [rax], eax; add [rax-0x7d], cl; jge short 0x0000000000483cf6; add [rax-0x77], cl; ret; 
0x00000000406278: add [rax], eax; add [rax-0x80], al; call far fword ptr [rax+0xf]; 
0x000000004970f2: add [rax], eax; add [rax-0x80], al; call qword ptr [rcx]; 
0x000000004059b7: add [rax], eax; add [rax-0x80], al; jmp qword ptr [rdi+rcx-0x7c]; 
0x000000004059b6: add [rax], eax; add [rax-0x80], al; jmp qword ptr [rdi+rcx-0x7c]; 
0x0000000041d56e: add [rax], eax; add [rax], al; call qword ptr [r14+0x80]; 
0x0000000045ad2d: add [rax], eax; add [rax], al; call r12; 
0x00000000498935: add [rax], eax; add [rax], al; call rax; 
0x00000000499481: add [rax], eax; add [rax], al; jmp rax; 
0x0000000048f5d6: add [rax], eax; add [rax], al; mov [rdi], rsi; ret; 
0x00000000421ace: add [rax], eax; add [rax], al; mov [rip+0xa8014], eax; ret; 
0x00000000421aa7: add [rax], eax; add [rax], al; mov [rip+0xa801e], rax; ret; 
0x00000000421a7e: add [rax], eax; add [rax], al; mov [rip+0xa803f], rax; ret; 
0x00000000421a5e: add [rax], eax; add [rax], al; mov [rip+0xa8057], rax; ret; 
0x00000000479bfc: add [rax], eax; add [rax], al; mov dword ptr [rbp-0x4e8], 0x0; mov rax, [rsi+rax*8]; jmp rax; 
0x00000000479b34: add [rax], eax; add [rax], al; mov dword ptr [rbp-0x4f0], 0x20; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000048f6ae: add [rax], eax; add [rax], al; mov dword ptr [rdx], 0xffffc002; ret; 
0x00000000498e9f: add [rax], eax; add [rax], al; mov edi, 0x1; call rax; 
0x0000000040143d: add [rax], eax; add [rax], al; mov esi, 0x81; mov eax, 0xca; syscall; 
0x000000004266ee: add [rax], eax; add [rax], al; mov esi, 0x81; mov eax, ebx; syscall; 
0x00000000479bbc: add [rax], eax; add [rax], al; mov r9d, 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x000000004796fc: add [rax], eax; add [rax], al; mov rax, [rax+rsi*8]; jmp rax; 
0x00000000478ae7: add [rax], eax; add [rax], al; mov rax, [rsi+rax*8]; jmp rax; 
0x00000000419f32: add [rax], eax; add [rax], al; mov rdi, r15; call qword ptr [rbp+0x80]; 
0x0000000041ccf0: add [rax], eax; add [rax], al; mov rdi, rbp; call qword ptr [rax+0x80]; 
0x0000000041c2aa: add [rax], eax; add [rax], al; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x0000000041d4ba: add [rax], eax; add [rax], al; mov rdi, rbx; call qword ptr [rbp+0x48]; 
0x0000000041a88c: add [rax], eax; add [rax], al; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x0000000047bfa3: add [rax], eax; add [rax], al; mov rdi, rbx; call r8; 
0x00000000417d0d: add [rax], eax; add [rax], al; mov rdi, rbx; call rax; 
0x0000000047d6b5: add [rax], eax; add [rax], al; pop rbp; pop r12; ret; 
0x0000000047c6bb: add [rax], eax; add [rax], al; pop rbx; pop rbp; ret; 
0x0000000047fac3: add [rax], eax; add [rax], al; ret; 
0x00000000459f01: add [rax], eax; add [rax], al; syscall; 
0x0000000042e8b8: add [rax], eax; add [rbp-0x77], cl; ret far; 
0x00000000463c97: add [rax], eax; add [rbp-0x7b], al; ror byte ptr [rdi], 0x85; ret; 
0x000000004987c1: add [rax], eax; add [rbx+0x5d], bl; pop r12; pop r13; ret; 
0x0000000045fed3: add [rax], eax; add [rbx+0x5d], bl; pop r12; ret; 
0x00000000467b19: add [rax], eax; add [rcx+0x3948fc51], cl; ret; 
0x0000000045c60d: add [rax], eax; add [rcx+rcx*4+0x44], cl; and al, 0x8; mov rdi, [r8]; call rbx; 
0x0000000047db88: add [rax], eax; add [rcx+rcx*4-0x11], cl; call qword ptr [r14+0x20]; 
0x0000000048d592: add [rax], eax; add [rcx+rcx*4-0x20], al; pop r12; ret; 
0x0000000047d3c4: add [rax], eax; add [rcx+rcx*4-0x2], al; mov rdi, rbp; call qword ptr [r14+0x18]; 
0x00000000469870: add [rax], eax; add [rcx-0x73], cl; add cl, [rax+0x39]; ret far; 
0x0000000045bb88: add [rax], eax; add [rcx-0x75], cl; jge short 0x000000000045bb8f; call rbx; 
0x0000000045bbb8: add [rax], eax; add [rcx-0x75], cl; jge short 0x000000000045bbbf; call rbx; 
0x0000000045bd08: add [rax], eax; add [rcx-0x75], cl; notrack call rbx; 
0x00000000488f4d: add [rax], eax; add [rcx-0x77], cl; ret far; 
0x00000000419f2c: add [rax], eax; add [rcx], dh; idiv byte ptr [rdx+0x1]; mov rdi, r15; call qword ptr [rbp+0x80]; 
0x0000000041c2a4: add [rax], eax; add [rcx], dh; idiv byte ptr [rdx+0x1]; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x0000000040497b: add [rax], eax; add [rcx], dh; imul al; ret far; 
0x00000000464fc2: add [rax], eax; add [rcx], dh; ror byte ptr [rcx+rcx*4+0x5c], 0x24; sub [rcx-0x77], cl; ret; 
0x00000000464fc1: add [rax], eax; add [rcx], dh; ror byte ptr [rcx+rcx*4+0x5c], 0x24; sub [rcx-0x77], cl; ret; 
0x0000000041a021: add [rax], eax; add [rcx], dh; ror byte ptr [rcx+rcx*4-0x1], cl; call qword ptr [rbx+0x80]; 
0x00000000420238: add [rax], eax; add [rcx], dh; shl byte ptr [rcx], cl; test byte ptr [rax-0x77], 0xdf; call qword ptr [r15+0x58]; 
0x000000004184b6: add [rax], eax; add [rcx], dh; test byte ptr [rax-0x77], 0xef; call qword ptr [rbx+0x10]; 
0x0000000048bd17: add [rax], eax; add [rdi], cl; mov dh, 0x45; add cl, [rax-0x7d]; ret; 
0x0000000041cc37: add [rax], eax; add [rsi-0x1], bh; mov rdi, rbp; call qword ptr [rax+0x18]; 
0x0000000041fec5: add [rax], eax; add [rsi-0x1], bh; mov rdi, rbx; call qword ptr [r15+0x18]; 
0x0000000041f5ee: add [rax], eax; add [rsi-0x1], bh; mov rdi, rbx; call qword ptr [rbp+0x18]; 
0x0000000042a03d: add [rax], eax; cmovne rax, rdx; ret; 
0x0000000042a2da: add [rax], eax; lea rdx, [rip+0x170fd]; cmovne rax, rdx; ret; 
0x0000000042a28a: add [rax], eax; lea rdx, [rip+0x1eb1d]; cmovne rax, rdx; ret; 
0x0000000049b1bf: add [rax], eax; movzx eax, al; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x0000000049b1be: add [rax], eax; movzx eax, al; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x00000000407652: add [rax], eax; nop [rax]; ret; 
0x0000000042881b: add [rax], ecx; sub rdx, 0x8; and eax, 0x1; cmovne rax, rdx; ret; 
0x00000000402604: add [rax], esi; add [rax], al; mov eax, 0x9e; syscall; 
0x0000000042a2d9: add [rax], r8; lea rdx, [rip+0x170fd]; cmovne rax, rdx; ret; 
0x00000000460935: add [rax], r8b; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000048f73d: add [rax], r8b; bts rax, 0x30; mov [rdi+0x8], rax; mov eax, 0x2; ret; 
0x00000000423075: add [rax], r8b; call rax; 
0x0000000045f07d: add [rax], r8b; endbr64; lea rax, [rip+0x6b555]; ret; 
0x0000000048685d: add [rax], r8b; endbr64; mov eax, 0xffffffff; ret; 
0x0000000045d41d: add [rax], r8b; endbr64; mov r10, rcx; mov eax, 0x19; syscall; 
0x0000000046db3d: add [rax], r8b; endbr64; mov rax, 0xfffffffffffffff0; add rax, fs:[0x0]; ret; 
0x00000000420b8d: add [rax], r8b; endbr64; mov rax, 0xffffffffffffffff; ret; 
0x00000000420bbd: add [rax], r8b; endbr64; ret; 
0x0000000045a7b5: add [rax], r8b; lea rdx, [rsp+0x8]; mov esi, 0x10; mov eax, 0x48; syscall; 
0x0000000045d905: add [rax], r8b; mov [rax+0x20], rsi; ret; 
0x0000000041a18d: add [rax], r8b; mov eax, 0xffffffff; pop rbp; ret; 
0x00000000420d45: add [rax], r8b; mov eax, 0xffffffff; ret; 
0x0000000045968d: add [rax], r8b; mov edi, edx; mov eax, esi; syscall; 
0x0000000045364d: add [rax], r8b; mov edx, [rsi]; mov [rdi], edx; ret; 
0x0000000048d59d: add [rax], r8b; mov qword ptr fs:[r12], 0x0; mov rax, [rsp+0x10]; mov rdi, [rsp+0x18]; call rax; 
0x000000004968c5: add [rax], r8b; mov r8, [r8]; mov [r9], r8; add rsp, 0x8; ret; 
0x00000000459c9d: add [rax], r8b; mov rax, 0xffffffffffffffc0; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000004806c5: add [rax], r8b; mov rax, 0xffffffffffffffc0; mov dword ptr fs:[rax], 0xc; mov eax, 0xffffffff; ret; 
0x00000000410265: add [rax], r8b; mov rax, [rax+0x18]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000496a15: add [rax], r8b; mov rax, [rsi+0xb0]; add rsp, 0x8; ret; 
0x0000000045956d: add [rax], r8b; mov rax, r8; shr rax, 0x2; vzeroupper; ret; 
0x0000000045368d: add [rax], r8b; mov rdx, [rsi]; mov [rdi], rdx; ret; 
0x00000000403075: add [rax], r8b; mov rdx, r13; mov rsi, r12; mov edi, ebp; call qword ptr [r15+rbx*8]; 
0x0000000049545d: add [rax], r8b; mov rdx, r13; mov rsi, r12; mov edi, ebp; call qword ptr [rbx]; 
0x0000000049b5cd: add [rax], r8b; mov rdx, rbp; mov esi, 0x40; mov rdi, r13; call rbx; 
0x000000004558fd: add [rax], r8b; movzx eax, byte ptr [rdi-0xa]; movzx edx, byte ptr [rsi-0xa]; sub eax, edx; ret; 
0x000000004558ed: add [rax], r8b; movzx eax, byte ptr [rdi-0xb]; movzx edx, byte ptr [rsi-0xb]; sub eax, edx; ret; 
0x000000004558dd: add [rax], r8b; movzx eax, byte ptr [rdi-0xc]; movzx edx, byte ptr [rsi-0xc]; sub eax, edx; ret; 
0x000000004558cd: add [rax], r8b; movzx eax, byte ptr [rdi-0xd]; movzx edx, byte ptr [rsi-0xd]; sub eax, edx; ret; 
0x000000004558bd: add [rax], r8b; movzx eax, byte ptr [rdi-0xe]; movzx edx, byte ptr [rsi-0xe]; sub eax, edx; ret; 
0x000000004558ad: add [rax], r8b; movzx eax, byte ptr [rdi-0xf]; movzx edx, byte ptr [rsi-0xf]; sub eax, edx; ret; 
0x0000000043259d: add [rax], r8b; movzx eax, byte ptr [rdi]; movzx ecx, byte ptr [rsi]; sub eax, ecx; ret; 
0x0000000041bc2d: add [rax], r8b; or dword ptr [rbx], 0x20; mov eax, 0xffffffff; pop rbx; ret; 
0x0000000048fb1d: add [rax], r8b; pop rbp; ret; 
0x00000000401d65: add [rax], r8b; ret; 
0x000000004208b5: add [rax], r8b; sub edx, [rax+0x10]; mov eax, [rdi+0x10]; sub eax, edx; ret; 
0x0000000041fdd5: add [rax], r8b; sub rax, rcx; sub eax, 0x1; ret; 
0x0000000047df05: add [rax], r8b; sub rcx, rax; sar rcx, 0x2; lea eax, [rcx-0x1]; ret; 
0x000000004579a5: add [rax], r8b; xor eax, eax; pop rbx; ret; 
0x0000000041aadd: add [rax], r8b; xor eax, eax; ret; 
0x0000000043156d: add [rax], r8b; xor eax, eax; vzeroupper; ret; 
0x00000000463c96: add [rax], r8d; add [rbp-0x7b], al; ror byte ptr [rdi], 0x85; ret; 
0x0000000042881a: add [rax], r9d; sub rdx, 0x8; and eax, 0x1; cmovne rax, rdx; ret; 
0x0000000048a3aa: add [rbp+0x13], dh; mov r8, [rip+0x4231c]; mov rax, r8; ret; 
0x00000000459c3a: add [rbp+0x14], dh; add rsp, 0x28; ret; 
0x0000000046e246: add [rbp+0x1], cl; test dword ptr [rax-0x77], 0xfe894cea; mov rdi, r12; call rbx; 
0x00000000494267: add [rbp+0x1bf0142], cl; add [rax], al; add [rcx-0x4cf7b], cl; jmp qword ptr [rsi+0x2e]; 
0x0000000046fee4: add [rbp+0x1e], dh; add rsp, 0x38; ret; 
0x000000004586b2: add [rbp+0x1f], dh; add rsp, 0x20; pop rbx; ret; 
0x0000000048fdb9: add [rbp+0x24], dh; mov rdx, [rbx+0x10]; mov [rdx], rax; pop rbx; ret; 
0x0000000048064c: add [rbp+0x25], dh; mov eax, r9d; add rsp, 0x38; ret; 
0x0000000040f7eb: add [rbp+0x26], dh; mov eax, r8d; add rsp, 0x118; ret; 
0x0000000048cc38: add [rbp+0x28], dh; add rsp, 0x38; ret; 
0x0000000048cd04: add [rbp+0x2d], dh; add rsp, 0x58; ret; 
0x00000000495689: add [rbp+0x31], al; jmp qword ptr [rsi-0x7d]; 
0x00000000426c6f: add [rbp+0x31], al; rcr byte ptr [rbp+0x41], 0x5c; mov rax, r8; pop r13; ret; 
0x00000000426407: add [rbp+0x31], al; rcr byte ptr [rbx+0x5d], 0x4c; mov eax, eax; pop r12; ret; 
0x000000004803f2: add [rbp+0x35], dh; add rsp, 0xa8; pop rbp; pop r12; ret; 
0x00000000496b63: add [rbp+0x39], cl; out 0x77, eax; ret far; 
0x00000000423e22: add [rbp+0x39], cl; ret; 
0x0000000048ce76: add [rbp+0x3b], dh; add rsp, 0x68; ret; 
0x0000000042799e: add [rbp+0x41], bl; pop rsp; pop r13; jmp rax; 
0x000000004753fd: add [rbp+0x41], bl; pop rsp; pop r13; ret; 
0x0000000047d6b8: add [rbp+0x41], bl; pop rsp; ret; 
0x0000000046debf: add [rbp+0x42], dh; mov eax, r9d; add rsp, 0x148; ret; 
0x0000000045a7aa: add [rbp+0x46], dh; add rsp, 0x68; ret; 
0x0000000045a839: add [rbp+0x47], dh; add rsp, 0x18; ret; 
0x0000000045a8f1: add [rbp+0x47], dh; add rsp, 0x58; ret; 
0x000000004905e8: add [rbp+0x480375d2], al; mov [rbx], eax; add rsp, 0x10; pop rbx; ret; 
0x0000000045a98f: add [rbp+0x49], dh; add rsp, 0x58; ret; 
0x00000000426c07: add [rbp+0x4c], bl; mov eax, eax; pop r12; pop r13; ret; 
0x00000000427c7e: add [rbp+0x4c], bl; mov esi, esp; pop r12; pop r13; jmp rax; 
0x0000000048d58b: add [rbp+0x51], dh; add rsp, 0x110; mov eax, r12d; pop r12; ret; 
0x0000000046dc44: add [rbp+0x5], dh; add rsp, 0x18; ret; 
0x0000000045ab9d: add [rbp+0x5], dh; add rsp, 0x28; ret; 
0x0000000048ff29: add [rbp+0x5], dh; add rsp, 0x38; ret; 
0x000000004259db: add [rbp+0x6], dh; add rsp, 0x10; pop rbp; ret; 
0x0000000048cb3d: add [rbp+0x6], dh; add rsp, 0x20; pop rbx; ret; 
0x00000000497abb: add [rbp+0x7], dh; cmp qword ptr [r9+0x38], 0x0; je short 0x0000000000497b14; add rsp, 0x18; ret; 
0x00000000410f99: add [rbp+0x8], dh; add rsp, 0xd8; ret; 
0x00000000480592: add [rbp+0x8], dh; movzx eax, al; add rsp, 0x58; ret; 
0x00000000493fa9: add [rbp+0xa], dh; add rsp, 0x30; mov rax, r12; pop r12; ret; 
0x0000000045d2f9: add [rbp+0xa], dh; add rsp, 0x88; pop rbx; pop rbp; ret; 
0x0000000048a2b1: add [rbp+0xc], dh; lea rax, [r8+0x1]; mov [rip+0x42411], rax; ret; 
0x0000000040f1a7: add [rbp+0xf], al; mov dh, 0xd2; movsxd r10, [r11+r10*4]; add r10, r11; notrack jmp r10; 
0x0000000048df5f: add [rbp+0xf], cl; lodsd [rsi]; ret; 
0x0000000048de4f: add [rbp+0xf], cl; movsd [rdi], [rsi]; ret; 
0x000000004208a6: add [rbp+0xf], dh; sub edx, [rax+0x18]; mov eax, [rdi+0x10]; sub eax, edx; ret; 
0x0000000045a970: add [rbp+rbp-0x48], dh; add [rcx], eax; add [rax], al; syscall; 
0x00000000434e01: add [rbp+rcx*4+0x1d], cl; idiv dword ptr [rbx+0x63490006]; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434cb1: add [rbp+rcx*4+0x1d], cl; mov r13d, 0x63490006; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004163aa: add [rbp+rcx*4+0x1d], cl; sbb ecx, [rdx-0x16fff8]; in al, 0xff; jmp qword ptr [rsi+0xf]; 
0x00000000437fc1: add [rbp+rcx*4+0x1d], cl; test dword ptr [rbx+0x63490006], 0x8d499314; adc al, 0x13; notrack jmp rdx; 
0x00000000437931: add [rbp+rcx*4+0x1d], cl; xchg [rdx+0x63490006], edx; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434621: add [rbp+rcx*4+0x1d], cl; xlat [rbx]; ret; 
0x00000000475a06: add [rbp+rcx*4+0x2c], cl; test [rax], eax; add [rax], al; add [rax+0x29], cl; ret; 
0x00000000458160: add [rbp+rcx*4+0x4c], ecx; and al, 0x20; call rbx; 
0x0000000047f20d: add [rbp+rcx*4+0x4c], ecx; and al, 0x28; call rbx; 
0x0000000047f20c: add [rbp+rcx*4+0x4c], rcx; and al, 0x28; call rbx; 
0x0000000045df08: add [rbp+rdx+0x48], dh; test edx, edx; je short 0x000000000045df20; lea rdi, [rcx+rsi+0x20]; jmp rdx; 
0x0000000047e132: add [rbp-0x19], dh; and r11d, 0xffffffbb; cmp r11d, 0xa; je short 0x000000000047e140; ret; 
0x0000000047306f: add [rbp-0x2dce00b9], cl; div ecx; add r8d, eax; mov eax, r8d; ret; 
0x00000000401d60: add [rbp-0x3d], ebx; nop [rax+rax]; ret; 
0x00000000425522: add [rbp-0x3d], ebx; nop [rax]; ret; 
0x0000000045d3ae: add [rbp-0x3dbbf040], al; ret; 
0x00000000459efb: add [rbp-0x47ef8a40], al; add [rax], eax; add [rax], al; syscall; 
0x0000000045c046: add [rbp-0x75], cl; adc [r13-0x7b], r9b; shl byte ptr [rbp+0x7d], 0x49; mov edi, [rdi]; call rbx; 
0x0000000042d2dd: add [rbp-0x77], cl; ret far; 
0x00000000463c99: add [rbp-0x7b], al; ror byte ptr [rdi], 0x85; ret; 
0x0000000047553d: add [rbp-0x7cc98a40], al; sub eax, 0x56da7; add [rcx+rcx*4-0x40], eax; pop rbx; ret; 
0x00000000481675: add [rbp-0x7d7af00a], al; add [rax], al; add [rax-0x7d], cl; ret; 
0x00000000457fc9: add [rbx+0x117401f8], al; cmp eax, 0x2; je short 0x0000000000457fe8; xor eax, eax; ret; 
0x00000000443799: add [rbx+0x148b8104], cl; xchg ecx, eax; sub eax, edx; ret; 
0x0000000043bd02: add [rbx+0x157890e], ecx; mov [rdi], ecx; ret; 
0x0000000041d41f: add [rbx+0x31], bl; rcr byte ptr [rbp+0x41], 0x5c; ret; 
0x00000000461b45: add [rbx+0x31], ebx; rcr byte ptr [rbp+0x41], 0x5c; pop r13; pop r14; ret; 
0x00000000453cbe: add [rbx+0x3568b0e], cl; mov [rdi], ecx; mov [rdi+0x3], edx; lea rax, [rdi+0x6]; ret; 
0x0000000045367f: add [rbx+0x3568b0e], cl; mov [rdi], ecx; mov [rdi+0x3], edx; ret; 
0x000000004730e9: add [rbx+0x44], ebx; mov eax, eax; pop rbp; pop r12; ret; 
0x00000000453c8f: add [rbx+0x477880e], cl; mov [rdi], ecx; lea rax, [rdi+0x4]; ret; 
0x0000000045365f: add [rbx+0x477880e], cl; mov [rdi], ecx; ret; 
0x0000000045318e: add [rbx+0x48028901], cl; lea eax, [rdx+0x3]; ret; 
0x0000000040285f: add [rbx+0x480c247c], cl; mov esi, [rsp+0x10]; mov rax, [rsp+0x18]; call rax; 
0x000000004542cf: add [rbx+0x48178916], cl; lea eax, [rdi+0x3]; vzeroupper; ret; 
0x000000004579ea: add [rbx+0x48], bl; cmove eax, edx; ret; 
0x00000000465524: add [rbx+0x4be02e0], al; add [rax], al; add [rcx-0x77], al; ret; 
0x00000000426343: add [rbx+0x4c], bl; mov eax, eax; pop rbp; pop r12; ret; 
0x0000000043665e: add [rbx+0x4e8bf956], cl; cld; mov [rdi-0x7], edx; mov [rdi-0x4], ecx; ret; 
0x0000000043645e: add [rbx+0x4e8bfa56], cl; cld; mov [rdi-0x6], edx; mov [rdi-0x4], ecx; ret; 
0x0000000043625e: add [rbx+0x4e8bfb56], cl; cld; mov [rdi-0x5], edx; mov [rdi-0x4], ecx; ret; 
0x0000000043b64e: add [rbx+0x5789fc56], cl; cld; ret; 
0x0000000047e963: add [rbx+0x5d], bl; pop r12; pop r13; pop r14; ret; 
0x0000000041cf68: add [rbx+0x5d], bl; pop r12; pop r13; ret; 
0x000000004292d7: add [rbx+0x5d], bl; pop r12; ret; 
0x0000000045d302: add [rbx+0x5d], bl; ret; 
0x00000000402afb: add [rbx+0x63480009], edi; or al, 0x8e; add rcx, rsi; notrack jmp rcx; 
0x000000004984a9: add [rbx+0x63490843], cl; add al, 0x84; add rax, r12; notrack jmp rax; 
0x00000000486d1f: add [rbx+0x7525087b], al; adc ecx, [rbx+rcx*4+0x33]; mov rax, [rbx+0x10]; add rax, [r13]; call rax; 
0x00000000402af2: add [rbx+0x7d7745f9], al; lea rsi, [rip+0x9bb01]; movsxd rcx, [rsi+rcx*4]; add rcx, rsi; notrack jmp rcx; 
0x0000000045b815: add [rbx+0x94901e0], eax; ret; 
0x0000000042551b: add [rbx+0xa463d2d], al; add [rcx], al; pop rbp; ret; 
0x00000000420c45: add [rbx+0xab3a705], al; add [rcx], al; pop rbx; ret; 
0x00000000403ca7: add [rbx+0xc7dd215], cl; add [rbx+rcx*4+0x3d], cl; ret; 
0x000000004902fb: add [rbx+0xc], dh; mov rdx, [rip+0x3c193]; add word ptr [rdx+rax*2], 0x1; ret; 
0x0000000043bcff: add [rbx+0xe8b0156], cl; mov [rdi+0x1], edx; mov [rdi], ecx; ret; 
0x0000000043bc8f: add [rbx+0xe8b0256], cl; mov [rdi+0x2], edx; mov [rdi], ecx; ret; 
0x0000000043bc1f: add [rbx+0xe8b0356], cl; mov [rdi+0x3], edx; mov [rdi], ecx; ret; 
0x00000000403cad: add [rbx+rcx*4+0x3d], cl; ret; 
0x00000000408388: add [rbx+rcx*4+0x4], cl; and al, 0xe9; idiv edi; jmp qword ptr [rsi+0xf]; 
0x00000000408578: add [rbx+rcx*4+0x4], cl; and al, 0xe9; xchg edi, eax; idiv edi; jmp qword ptr [rsi+0xf]; 
0x000000004100c7: add [rbx+rcx*4+0x63], cl; or [rax-0x7d], cl; ret; 
0x00000000476fe2: add [rbx+rcx*4-0x5b], cl; clc; idiv bh; dec dword ptr [rbp+0x63]; ret; 
0x00000000483f15: add [rbx+rdi+0xd], cl; ret far; 
0x00000000489b01: add [rbx-0x28f7b], cl; jmp qword ptr [rsi+0xf]; 
0x0000000047d9ef: add [rbx-0x3b7cb7ff], cl; or [rbx+0x5d], bl; ret; 
0x000000004028e8: add [rbx-0x3d76fd38], al; mov esi, edx; mov edi, 0x3002; mov eax, 0x9e; syscall; 
0x00000000457abe: add [rbx-0x3d], bl; mov eax, 0x10; pop rbx; ret; 
0x00000000457ab7: add [rbx-0x3d], bl; mov eax, 0x20; pop rbx; ret; 
0x00000000457ab0: add [rbx-0x3d], bl; mov eax, 0x30; pop rbx; ret; 
0x00000000457aa9: add [rbx-0x3d], bl; mov eax, 0x40; pop rbx; ret; 
0x00000000457acc: add [rbx-0x3d], bl; mov eax, 0x80; pop rbx; ret; 
0x00000000457ac5: add [rbx-0x3d], bl; mov eax, 0x8; pop rbx; ret; 
0x000000004792d0: add [rbx-0x4d77b], cl; dec dword ptr [rcx-0x4df73]; jmp far fword ptr [rcx]; 
0x0000000041484f: add [rbx-0x4e763], cl; inc dword ptr [rbp+0x22850fdb]; sbb [rax], eax; add [rcx-0x80], al; call qword ptr [rbx+0xf]; 
0x00000000479327: add [rbx-0x4ef43], eax; jmp qword ptr [rax]; 
0x00000000479cf0: add [rbx-0x4ff43], al; call qword ptr [rax]; 
0x000000004792f8: add [rbx-0x4ff43], eax; call qword ptr [rax]; 
0x0000000041522a: add [rbx-0x50f43], eax; call qword ptr [rax]; 
0x00000000414e7f: add [rbx-0x67b7df18], al; movzx eax, byte ptr [rbx+rax]; jmp qword ptr [rsi+rax*8]; 
0x000000004145de: add [rbx-0x67b7df18], al; movzx eax, byte ptr [rbx+rax]; mov rax, [rsi+rax*8]; jmp rax; 
0x00000000415474: add [rbx-0x67b7df18], al; movzx ecx, byte ptr [rbx+rax]; lea rax, [rip+0xb0d9b]; mov rax, [rax+rcx*8]; jmp rax; 
0x000000004149c4: add [rbx-0x67b7df18], al; movzx ecx, byte ptr [rbx+rax]; lea rax, [rip+0xb1a4b]; mov rax, [rax+rcx*8]; jmp rax; 
0x0000000049889f: add [rbx-0x70f0ee08], al; mov [0x148b489848fff68e], al; ret; 
0x00000000470dc9: add [rbx-0x70f0fb08], al; cmp eax, 0xc7000015; test [rdi+rdi*8-0x1], esp; jmp qword ptr [rsi]; 
0x0000000048fd24: add [rbx-0x72b7f7bd], cl; adc eax, 0x29741; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000045319f: add [rbx-0x75fd76ff], cl; add al, 0x88; add al, 0x48; lea eax, [rdx+0x4]; ret; 
0x000000004519df: add [rbx-0x75fd76ff], cl; add al, 0x88; add al, 0x48; mov eax, edi; ret; 
0x000000004118c5: add [rbx-0x78f0f808], al; mov [0x4c86046349000006], al; add eax, esi; notrack jmp rax; 
0x00000000402c48: add [rbx-0x7bf00008], al; out 0x0, al; add [rax], al; add rsp, 0x98; ret; 
0x0000000040c8f7: add [rbx-0x7bf0fc08], al; xchg esi, eax; sbb eax, [rax]; add [rbx-0x7bf0fe08], al; ret; 
0x000000004090a3: add [rbx-0x7bf0fd08], al; call qword ptr [rcx]; 
0x0000000040c990: add [rbx-0x7bf0fe08], al; ret far; 
0x0000000040865b: add [rbx-0x7bf0fe08], al; ret; 
0x0000000047519e: add [rbx-0x7cb7fbbd], cl; ret; 
0x0000000044ffe3: add [rbx-0x7cf0fb06], al; ret; 
0x0000000045fd65: add [rbx-0x7d], bl; loopne 0x000000000045fd62; or eax, 0x1; mov [rip+0x6ce41], eax; ret; 
0x0000000045fd95: add [rbx-0x7d], bl; loopne 0x000000000045fd92; or eax, 0x3; mov [rip+0x6ce11], eax; ret; 
0x0000000045fe05: add [rbx-0x7d], bl; loopne 0x000000000045fdd1; or eax, 0x8; mov [rip+0x6cda1], eax; ret; 
0x0000000045fe35: add [rbx-0x7d], bl; loopne 0x000000000045fe01; or eax, 0x18; mov [rip+0x6cd71], eax; ret; 
0x000000004208b7: add [rbx], ch; push rax; adc [rbx-0x2fd6efb9], cl; ret; 
0x0000000045d54f: add [rcx+0x104e23c1], cl; lea rcx, [rsi+rcx*4]; add eax, [rcx+rdx]; ret; 
0x0000000040eea6: add [rcx+0x146348d2], cl; xchg esi, eax; add rdx, rsi; notrack jmp rdx; 
0x00000000421a15: add [rcx+0x1], al; adc eax, [rbp+0x1]; sbb [r8+0x39], cl; ret; 
0x000000004193cc: add [rcx+0x1], cl; ret; 
0x00000000430305: add [rcx+0x29], cl; ret far; 
0x00000000419f5f: add [rcx+0x2b], cl; adc [r8+0x1], r9b; ret; 
0x000000004531d1: add [rcx+0x3418b02], ecx; mov [rdx+0x3], eax; lea rax, [rdx+0x6]; ret; 
0x00000000451a01: add [rcx+0x3418b02], ecx; mov [rdx+0x3], eax; mov rax, rdi; ret; 
0x00000000467b1b: add [rcx+0x3948fc51], cl; ret; 
0x00000000489757: add [rcx+0x39], al; ret; 
0x0000000044f81f: add [rcx+0x39], cl; ret; 
0x000000004531b1: add [rcx+0x418b6602], ecx; add al, 0x66; mov [rdx+0x4], eax; lea rax, [rdx+0x5]; ret; 
0x000000004519f1: add [rcx+0x418b6602], ecx; add al, 0x66; mov [rdx+0x4], eax; mov rax, rdi; ret; 
0x000000004531a1: add [rcx+0x4418a02], ecx; mov [rdx+0x4], al; lea rax, [rdx+0x4]; ret; 
0x000000004519e1: add [rcx+0x4418a02], ecx; mov [rdx+0x4], al; mov rax, rdi; ret; 
0x0000000040f79e: add [rcx+0x48050fc8], cl; mov edi, eax; mov eax, 0xba; syscall; 
0x00000000433fae: add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004118ce: add [rcx+0x63], cl; add al, 0x86; add rax, r14; notrack jmp rax; 
0x00000000432810: add [rcx+0x63], cl; or al, 0x93; add rcx, r11; notrack jmp rcx; 
0x000000004534d8: add [rcx+0x63], cl; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000048239b: add [rcx+0x63], cl; push rsp; xchg ebp, eax; add [rcx+rax-0x16], cl; notrack jmp rdx; 
0x0000000045b818: add [rcx+0x9], ecx; ret; 
0x0000000049a46e: add [rcx+0xf], al; mov bh, 0x5d; and [rsi-0x9], ah; ret; 
0x0000000048a218: add [rcx+rax-0x10], dh; inc dword ptr [r8+0x10]; pop rbx; pop rbp; ret; 
0x000000004823a0: add [rcx+rax-0x16], cl; notrack jmp rdx; 
0x00000000497bbb: add [rcx+rax-0x18], cl; notrack jmp rax; 
0x0000000045c07c: add [rcx+rcx*4+0x44], cl; and al, 0x8; mov rdi, [r8]; call rbx; 
0x00000000424147: add [rcx+rcx*4+0x54], cl; and al, 0x18; mov [rsp+0x10], r8; call rax; 
0x0000000047db8a: add [rcx+rcx*4-0x11], cl; call qword ptr [r14+0x20]; 
0x0000000049b5d7: add [rcx+rcx*4-0x11], cl; call rbx; 
0x00000000427b29: add [rcx+rcx*4-0x11], cl; mov eax, 0xca; syscall; 
0x0000000046e30e: add [rcx+rcx*4-0x12], cl; mov rdi, r14; mov rdx, r12; call rbp; 
0x00000000418e2c: add [rcx+rcx*4-0x12], cl; mov rdi, r15; call qword ptr [r14+0x38]; 
0x0000000041c11d: add [rcx+rcx*4-0x16], al; mov rsi, r12; mov rdi, rbp; call qword ptr [r15+0x80]; 
0x000000004584e6: add [rcx+rcx*4-0x16], cl; mov r9, [rsp+0x10]; mov rdi, r12; mov rsi, [rsp+0x18]; call rbx; 
0x00000000412792: add [rcx+rcx*4-0x16], cl; mov rsi, r10; mov rdi, r15; call qword ptr [rbx+0x38]; 
0x00000000412e37: add [rcx+rcx*4-0x16], cl; mov rsi, r10; mov rdi, r15; call qword ptr [rcx+0x38]; 
0x00000000403077: add [rcx+rcx*4-0x16], cl; mov rsi, r12; mov edi, ebp; call qword ptr [r15+rbx*8]; 
0x0000000049545f: add [rcx+rcx*4-0x16], cl; mov rsi, r12; mov edi, ebp; call qword ptr [rbx]; 
0x000000004124e9: add [rcx+rcx*4-0x16], cl; mov rsi, r12; mov rdi, r15; call qword ptr [rcx+0x38]; 
0x0000000041bcfd: add [rcx+rcx*4-0x16], cl; mov rsi, r12; mov rdi, rbp; call qword ptr [r15+0x40]; 
0x0000000041c730: add [rcx+rcx*4-0x16], cl; mov rsi, r15; mov rdi, rbp; call qword ptr [rax+0x40]; 
0x00000000458392: add [rcx+rcx*4-0x16], cl; xor r8d, r8d; mov rdi, r12; lea r9, [rsp+0x30]; call rbx; 
0x00000000426596: add [rcx+rcx*4-0x19], cl; mov eax, 0xca; syscall; 
0x0000000041f2fc: add [rcx+rcx*4-0x19], ecx; call qword ptr [rbx+0x18]; 
0x00000000419d3f: add [rcx+rcx*4-0x1], cl; call qword ptr [r13+0x80]; 
0x00000000419f35: add [rcx+rcx*4-0x1], cl; call qword ptr [rbp+0x80]; 
0x0000000042876a: add [rcx+rcx*4-0x1], cl; mov eax, 0xca; syscall; 
0x00000000428f8f: add [rcx+rcx*4-0x1a], cl; call rax; 
0x0000000047fd3f: add [rcx+rcx*4-0x1a], cl; mov edi, ebp; mov eax, 0xe4; syscall; 
0x00000000419c65: add [rcx+rcx*4-0x1e], al; mov rsi, rbp; mov rdi, r15; call qword ptr [r14+0x80]; 
0x0000000047c7a3: add [rcx+rcx*4-0x1e], cl; mov rsi, r14; mov rdi, rbx; call qword ptr [r15+0x38]; 
0x0000000047c57d: add [rcx+rcx*4-0x1e], cl; mov rsi, rbp; mov rdi, rbx; call qword ptr [r13+0x38]; 
0x00000000418fd7: add [rcx+rcx*4-0x1e], cl; mov rsi, rbp; mov rdi, rbx; call qword ptr [r13+0x58]; 
0x0000000048d594: add [rcx+rcx*4-0x20], al; pop r12; ret; 
0x0000000041854b: add [rcx+rcx*4-0x20], al; pop rbx; pop rbp; pop r12; ret; 
0x0000000047e2b0: add [rcx+rcx*4-0x20], cl; pop rbp; pop r12; pop r13; ret; 
0x0000000047d3c6: add [rcx+rcx*4-0x2], al; mov rdi, rbp; call qword ptr [r14+0x18]; 
0x0000000041b2f4: add [rcx+rcx*4-0x38], al; syscall; 
0x000000004073a6: add [rcx+rcx*4-0x38], cl; pop rbx; pop rbp; pop r12; ret; 
0x0000000046df90: add [rcx+rcx*4-0x3a], cl; mov eax, 0xe; syscall; 
0x0000000046b0e4: add [rcx+rcx*4-0x40], al; pop rbp; pop r12; ret; 
0x00000000418244: add [rcx+rcx*4-0x40], al; pop rbx; pop rbp; ret; 
0x00000000426428: add [rcx+rcx*4-0x40], cl; pop rbx; pop rbp; pop r12; ret; 
0x000000004248f0: add [rcx+rcx*4-0x40], cl; ret; 
0x000000004594b2: add [rcx+rcx*4-0x40], cl; shr rax, 0x2; vzeroupper; ret; 
0x0000000044fc1f: add [rcx+rcx*4-0x40], cl; vzeroupper; ret; 
0x00000000475548: add [rcx+rcx*4-0x40], eax; pop rbx; ret; 
0x0000000041c8cc: add [rcx+rcx*4-0x6], cl; mov rsi, r14; mov rdi, rbx; call qword ptr [rbp+0x70]; 
0x0000000040fa47: add [rcx+rcx*4-0xe], cl; mov rax, [rsp]; mov rsi, r12; mov rdi, r13; call rax; 
0x00000000429fb5: add [rcx+rcx*8+0x48], dh; lea eax, [rip+0x8451]; test byte ptr [rip+0xa217f], 0x1; je short 0x0000000000429f81; ret; 
0x00000000429fb4: add [rcx+rcx*8+0x48], sil; lea eax, [rip+0x8451]; test byte ptr [rip+0xa217f], 0x1; je short 0x0000000000429f81; ret; 
0x000000004808dc: add [rcx+rdi-0x37], dh; xor eax, eax; ret; 
0x0000000045f0b4: add [rcx+rdi-0x3d], al; je short 0x000000000045f0c8; mov [rip+0x699e0], eax; pop rbx; ret; 
0x0000000048a347: add [rcx+rdi-0x40], cl; ja short 0x000000000048a358; add rsp, 0x8; ret; 
0x0000000045ad11: add [rcx+rsi+0x48], dh; mov edi, ebp; xor esi, esi; call r12; 
0x00000000471f0e: add [rcx-0x1177b], cl; jmp far fword ptr [rcx]; 
0x000000004855d3: add [rcx-0x3f], cl; in al, 0x4; add r12, rax; call qword ptr [r12+0x60]; 
0x0000000046dde8: add [rcx-0x46], al; or [rax], al; add [rax], al; mov eax, 0xd; syscall; 
0x00000000479bbf: add [rcx-0x47], al; add [rax], eax; add [rax], al; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000045e53c: add [rcx-0x48], al; add [rax], al; add [rax+0x1], cl; ret far; 
0x000000004785e5: add [rcx-0x4a773], cl; jmp qword ptr [rax+rcx*2-0x75]; 
0x000000004140c0: add [rcx-0x4b773], cl; jmp qword ptr [rax+rcx*2-0x75]; 
0x0000000049426f: add [rcx-0x4cf7b], cl; jmp qword ptr [rsi+0x2e]; 
0x00000000469612: add [rcx-0x73], cl; add cl, [rax+0x39]; ret far; 
0x00000000467ad0: add [rcx-0x73], cl; add r9b, [r8+0x39]; ret; 
0x00000000423ace: add [rcx-0x73], cl; dec dword ptr [rcx-0x7b]; ret; 
0x0000000040f953: add [rcx-0x75], cl; cmp al, 0x24; mov rdx, r14; mov rax, [rsp]; call rax; 
0x0000000045bb8a: add [rcx-0x75], cl; jge short 0x000000000045bb8f; call rbx; 
0x0000000045bbba: add [rcx-0x75], cl; jge short 0x000000000045bbbf; call rbx; 
0x0000000045bbea: add [rcx-0x75], cl; jge short 0x000000000045bbef; call rbx; 
0x0000000041a14c: add [rcx-0x75], cl; mov bh, 0x90; add [rax], al; add cl, ch; ret far; 
0x0000000045aec4: add [rcx-0x75], cl; mov rax, [rsp+0x8]; mov rdi, r13; call rax; 
0x0000000045bc4a: add [rcx-0x75], cl; notrack call rbx; 
0x00000000478719: add [rcx-0x75], cl; test [rax+rbx*8], ah; add [rax], al; add [rax-0x39], cl; ret; 
0x000000004519d1: add [rcx-0x776b7fe], ecx; ret; 
0x00000000421a39: add [rcx-0x77], al; imul esp, [rbx*2+0x10438941], 0x41; mov dword ptr [rbx+0x14], 0x0; ret; 
0x0000000046552c: add [rcx-0x77], al; ret; 
0x0000000046803d: add [rcx-0x77], al; xor ecx, [rcx-0x77]; ret far; 
0x00000000407547: add [rcx-0x77], cl; fisttp word ptr [rax-0x7d], st; ret; 
0x0000000042496a: add [rcx-0x77], cl; push rcx; or [rax+0x39], cl; ret; 
0x00000000478ada: add [rcx-0x77], cl; ret far; 
0x000000004172ab: add [rcx-0x77], cl; ret; 
0x00000000411df5: add [rcx-0x77], ecx; push rdi; sub dh, al; add [rcx-0x7d], cl; ret; 
0x0000000048eb30: add [rcx-0x77], ecx; push rsp; ret; 
0x0000000046b786: add [rcx-0x77cf7bd], ecx; std; je short 0x000000000046b7a8; pop rbx; ret; 
0x0000000041268c: add [rcx-0x7d], al; in al, dx; add [rax-0x8ff43], eax; jmp qword ptr [rax]; 
0x0000000047201f: add [rcx-0x7d], al; in eax, dx; add [rax+0x39], ecx; ret; 
0x000000004770b6: add [rcx-0x7d], al; out dx, eax; add [rax-0x93343], eax; jmp qword ptr [rax]; 
0x0000000045af70: add [rcx-0x7d], cl; ret far; 
0x00000000411dfb: add [rcx-0x7d], cl; ret; 
0x0000000046382e: add [rcx-0x7d], cl; rol byte ptr [rcx], 0x89; xor [rax-0x7d], ecx; ret; 
0x00000000465a1b: add [rcx-0x7d], ecx; ret; 
0x0000000047aa10: add [rcx-0x7f], al; clc; fdivp st(7), st; call far fword ptr [rdi]; 
0x0000000041485d: add [rcx-0x80], al; call qword ptr [rbx+0xf]; 
0x0000000047ef1b: add [rcx-0x876b730], cl; bsr eax, eax; lea rax, [rdi+rax-0x20]; vzeroupper; ret; 
0x0000000047650e: add [rcx-0x8ef63], cl; dec dword ptr [rax-0x77]; ret far; 
0x0000000046370f: add [rcx-0xa], al; ret; 
0x00000000421aa6: add [rcx], al; add [rax], al; add [rax-0x77], cl; add eax, 0xa801e; ret; 
0x00000000421a7d: add [rcx], al; add [rax], al; add [rax-0x77], cl; add eax, 0xa803f; ret; 
0x00000000421a5d: add [rcx], al; add [rax], al; add [rax-0x77], cl; add eax, 0xa8057; ret; 
0x0000000045632f: add [rcx], al; add [rax], al; sub rax, rdx; ret; 
0x00000000410727: add [rcx], al; add rsp, 0x10; mov eax, r8d; pop rbx; ret; 
0x000000004104e2: add [rcx], al; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000045a969: add [rcx], al; cmp eax, 0x410000; je short 0x000000000045a9a0; mov eax, 0x101; syscall; 
0x00000000429fc4: add [rcx], al; je short 0x0000000000429f81; ret; 
0x0000000045a96e: add [rcx], al; je short 0x000000000045a9a0; mov eax, 0x101; syscall; 
0x00000000475547: add [rcx], al; mov eax, r8d; pop rbx; ret; 
0x00000000401d5f: add [rcx], al; pop rbp; ret; 
0x00000000420c4b: add [rcx], al; pop rbx; ret; 
0x0000000041e4d5: add [rcx], al; ret; 
0x0000000046f645: add [rcx], al; xor eax, eax; add rsp, 0x8; ret; 
0x0000000045f0d3: add [rcx], bh; ret; 
0x0000000046c634: add [rcx], ch; ret far; 
0x0000000040731c: add [rcx], dh; call qword ptr [rax+0x480ab60f]; 
0x00000000461c65: add [rcx], dh; div byte ptr [rcx]; jmp qword ptr [rsi+0xf]; 
0x00000000419f2e: add [rcx], dh; idiv byte ptr [rdx+0x1]; mov rdi, r15; call qword ptr [rbp+0x80]; 
0x0000000041c2a6: add [rcx], dh; idiv byte ptr [rdx+0x1]; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x00000000419d38: add [rcx], dh; idiv byte ptr [rdx+0x2]; mov rdi, r15; call qword ptr [r13+0x80]; 
0x0000000041c1d2: add [rcx], dh; idiv byte ptr [rdx+0x2]; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x0000000040497d: add [rcx], dh; imul al; ret far; 
0x0000000049cb95: add [rcx], dh; jmp qword ptr [rax+rcx*2-0x75]; 
0x00000000429319: add [rcx], dh; rcr byte ptr [rbx+0x5d], 0x41; pop rsp; ret; 
0x00000000498d46: add [rcx], dh; rcr byte ptr [rbx+0x5d], 0xc3; nop [rax]; endbr64; ret; 
0x00000000496447: add [rcx], dh; rol byte ptr [rbp-0x7b], 0xc0; jne 0x00000000004963a0; add rsp, 0x38; ret; 
0x00000000487e0e: add [rcx], dh; ror byte ptr [rax-0x73], 0x35; add bh, 0x2; add al, ch; ret; 
0x00000000424500: add [rcx], dh; ror byte ptr [rax-0x73], 0x3c; ret; 
0x0000000041ca57: add [rcx], dh; ror byte ptr [rax-0x77], cl; out dx, al; mov rdi, rbx; call qword ptr [r12+0x80]; 
0x0000000041c041: add [rcx], dh; ror byte ptr [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x80]; 
0x0000000041c343: add [rcx], dh; ror byte ptr [rax-0x77], cl; out dx, eax; call qword ptr [rbx+0x80]; 
0x00000000464fc4: add [rcx], dh; ror byte ptr [rcx+rcx*4+0x5c], 0x24; sub [rcx-0x77], cl; ret; 
0x0000000041a023: add [rcx], dh; ror byte ptr [rcx+rcx*4-0x1], cl; call qword ptr [rbx+0x80]; 
0x0000000040f7c9: add [rcx], dh; ror byte ptr [rcx+rcx*4-0x32], cl; mov edi, 0x2; mov eax, 0xe; syscall; 
0x0000000042023a: add [rcx], dh; shl byte ptr [rcx], cl; test byte ptr [rax-0x77], 0xdf; call qword ptr [r15+0x58]; 
0x0000000048c7c6: add [rcx], dh; shr al, 0xb2; ret far; 
0x000000004905ff: add [rcx], dh; shr bl, 0xcf; nop [rax]; call rax; 
0x000000004184b8: add [rcx], dh; test byte ptr [rax-0x77], 0xef; call qword ptr [rbx+0x10]; 
0x00000000459d75: add [rcx], eax; add [rax], al; syscall; 
0x0000000047695b: add [rcx], eax; ret; 
0x0000000045815c: add [rcx], esi; shr byte ptr [rdx+0x1], cl; lea r9, [rsp+0x20]; call rbx; 
0x0000000049cb94: add [rcx], r14b; jmp qword ptr [rax+rcx*2-0x75]; 
0x00000000457816: add [rdi+0x12], dh; vmovdqu64 [rdi+rdx-0x40], zmm0; vmovdqu64 [rdi], zmm0; vzeroupper; ret; 
0x000000004575c6: add [rdi+0x15], esi; jb short 0x00000000004575cd; mov [rdi], cl; ret; 
0x00000000498a09: add [rdi+0x1], bh; call rax; 
0x00000000456837: add [rdi+0x26], esi; jb short 0x0000000000456841; movzx ecx, byte ptr [rsi]; mov [rdi], cl; ret; 
0x00000000457734: add [rdi+0x2c], esi; jb short 0x000000000045773b; mov [rdi], cl; vzeroupper; ret; 
0x00000000459c70: add [rdi+0x2d], esi; mov eax, 0x4; syscall; 
0x000000004804b0: add [rdi+0x2d], esi; mov eax, 0x6; syscall; 
0x00000000459ccf: add [rdi+0x2e], esi; mov eax, 0x5; syscall; 
0x0000000049348e: add [rdi+0x3005], bh; mov eax, 0x9e; syscall; 
0x00000000480515: add [rdi+0x30], esi; mov eax, 0x106; syscall; 
0x000000004578fc: add [rdi+0x3a], esi; jb short 0x0000000000457903; mov [rdi], cl; vzeroupper; ret; 
0x00000000456ba7: add [rdi+0x3b], esi; jb short 0x0000000000456bb1; movzx ecx, byte ptr [rsi]; mov [rdi], cl; ret; 
0x00000000456ff7: add [rdi+0x53], esi; jb short 0x0000000000457001; movzx ecx, byte ptr [rsi]; mov [rdi], cl; ret; 
0x0000000042a4c0: add [rdi+0x63], cl; or al, 0x8a; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000043025c: add [rdi+0x63], cl; or al, 0x8a; pcmpeqb xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x000000004451cc: add [rdi+0x63], cl; or al, 0x8a; vpcmpeqb xmm0, xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000043948a: add [rdi+0x63], cl; or al, 0x8b; add r9, r11; notrack jmp r9; 
0x00000000433eda: add [rdi+0x63], cl; or al, 0x8b; lea r9, [r11+r9]; notrack jmp r9; 
0x000000004598cd: add [rdi+0x68], dh; lea rdx, [rip+0x4881d]; movsxd rax, [rdx+rbp*4]; add rax, rdx; notrack jmp rax; 
0x000000004577b6: add [rdi+0x7b], dh; vmovdqu64 [rdi+rdx-0x40], zmm0; vmovdqu64 [rdi], zmm0; vzeroupper; ret; 
0x0000000045b988: add [rdi+rbp+0x48], dh; mov edi, ebp; xor esi, esi; call r12; 
0x00000000496ab8: add [rdi+rbp], bh; ja 0x0000000000401723; movsxd rax, [r14+rax*4]; add rax, r14; notrack jmp rax; 
0x00000000497ac2: add [rdi+rcx*2+0x48], dh; add esp, 0x18; ret; 
0x00000000474b7a: add [rdi+rcx], cl; test [rdi-0x1600000f], ah; mov ecx, edx; clc; jmp qword ptr [rsi+0xf]; 
0x000000004951c3: add [rdi-0x2c517], bl; jmp qword ptr [rsi+0xf]; 
0x0000000047ddd8: add [rdi], cl; adc [rax+0x40], eax; pop rbx; ret; 
0x0000000041f94d: add [rdi], cl; adc [rbp+0x38], eax; pop rbp; pop r12; ret; 
0x0000000041ecd3: add [rdi], cl; adc [rbx+0x48], eax; pop rbx; ret; 
0x0000000048bf4c: add [rdi], cl; adc [rbx], eax; pop rbx; ret; 
0x00000000428772: add [rdi], cl; add eax, 0xfffebee9; jmp qword ptr [rsi+0xf]; 
0x00000000406d26: add [rdi], cl; add eax, 0xfffefbe9; jmp qword ptr [rsi-0x70]; 
0x000000004252a2: add [rdi], cl; add eax, 0xffff01e9; jmp qword ptr [rsi+0xf]; 
0x000000004102f2: add [rdi], cl; add eax, 0xffff28e9; jmp qword ptr [rsi+0xf]; 
0x0000000041eaf7: add [rdi], cl; add eax, 0xffff2be9; call qword ptr [rax+0xff0c889]; 
0x0000000042039f: add [rdi], cl; add eax, 0xffff3ee9; jmp qword ptr [rsi+0xf]; 
0x0000000041e55c: add [rdi], cl; add eax, 0xffff44e9; jmp qword ptr [rsi+0x66]; 
0x000000004229da: add [rdi], cl; add eax, 0xffff70e9; jmp qword ptr [rsi+0x66]; 
0x0000000043be4f: add [rdi], cl; mov bh, 0x16; mov [rdi], dx; ret; 
0x0000000045007f: add [rdi], cl; mov bh, 0x16; mov [rdi], dx; vzeroupper; ret; 
0x0000000043bebf: add [rdi], cl; mov dh, 0x16; mov [rdi], dl; ret; 
0x00000000407507: add [rdi], cl; mov dh, 0x43; add [rax-0x7d], ecx; ret; 
0x0000000048bd19: add [rdi], cl; mov dh, 0x45; add cl, [rax-0x7d]; ret; 
0x000000004336bf: add [rdi], cl; mov dh, 0x47; dec dword ptr [rdi]; mov dh, 0x4e; jmp far fword ptr [rcx]; 
0x00000000433472: add [rdi], cl; mov dh, 0x47; dec dword ptr [rdi]; mov dh, 0x56; jmp far fword ptr [rcx]; 
0x000000004558cf: add [rdi], cl; mov dh, 0x47; movzx edx, byte ptr [rsi-0xd]; sub eax, edx; ret; 
0x000000004558bf: add [rdi], cl; mov dh, 0x47; movzx edx, byte ptr [rsi-0xe]; sub eax, edx; ret; 
0x00000000410a0f: add [rdi], cl; mov dh, 0x4b; add [rax-0x7d], ecx; ret; 
0x0000000043259f: add [rdi], cl; mov dh, 0x7; movzx ecx, byte ptr [rsi]; sub eax, ecx; ret; 
0x0000000041d8a1: add [rdi], cl; mov dh, 0xc0; movsxd rax, [r10+rax*4]; add rax, r10; notrack jmp rax; 
0x0000000041d8d3: add [rdi], cl; mov dh, 0xc0; movsxd rax, [r11+rax*4]; add rax, r11; notrack jmp rax; 
0x00000000496870: add [rdi], cl; mov dh, 0xc0; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x00000000417791: add [rdi], cl; mov dh, 0xc0; movsxd rax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x00000000457a2f: add [rdi], cl; mov dh, 0xc1; pop rbx; ret; 
0x0000000042b86f: add [rdi], cl; mov dh, 0xe; movzx eax, byte ptr [rdi]; sub eax, ecx; ret; 
0x0000000043197f: add [rdi], cl; mov esp, 0x448d48c0; cmp [rax], ah; ret; 
0x0000000043196f: add [rdi], cl; mov esp, 0x448d48c0; cmp [rax], dl; ret; 
0x0000000043194e: add [rdi], cl; mov esp, 0x448d48c0; cmp al, dh; ret; 
0x0000000043198f: add [rdi], cl; mov esp, 0xc22948c0; jbe short 0x00000000004319d0; add rax, rdi; ret; 
0x0000000043199e: add [rdi], cl; mov esp, 0xc22948c0; jbe short 0x00000000004319d0; lea rax, [rdi+rax+0x10]; ret; 
0x0000000047f56f: add [rdi], cl; mov esp, 0xc22948c0; jbe short 0x000000000047f5b0; add rax, rdi; ret; 
0x0000000047f57e: add [rdi], cl; mov esp, 0xc22948c0; jbe short 0x000000000047f5b0; lea rax, [rdi+rax+0x10]; ret; 
0x0000000043195f: add [rdi], cl; mov esp, 0xf80148c0; ret; 
0x0000000040f77f: add [rdi], cl; sub [rsp+0xd0], eax; movaps [rsp+0xe0], xmm0; movaps [rsp+0xf0], xmm0; syscall; 
0x0000000040f787: add [rdi], cl; sub [rsp+0xe0], eax; movaps [rsp+0xf0], xmm0; syscall; 
0x0000000040f78f: add [rdi], cl; sub [rsp+0xf0], eax; syscall; 
0x000000004302ff: add [rdi], cl; sub dword ptr [rsi+0xe], 0x0; add [rcx+0x29], cl; ret far; 
0x0000000046dfb7: add [rdi], cl; test [rax+0x48000000], ebx; add esp, 0x98; ret; 
0x0000000048f341: add [rdi], cl; test [rbp], edi; add [rax], al; leave; ret; 
0x0000000040576c: add [rdi], cl; test [rcx+rdi*8-0x1], eax; inc dword ptr [rax-0x80]; jmp qword ptr [rdi+rcx-0x7c]; 
0x00000000490fe5: add [rdi], cl; test [rdi+rdi*8-0x1], ebp; call far fword ptr [rbx+0x48]; 
0x000000004059b3: add [rdi], cl; test [rsi], esp; add [rax], eax; add [rax-0x80], al; jmp qword ptr [rdi+rcx-0x7c]; 
0x000000004058e1: add [rdi], cl; test edi, ecx; idiv edi; inc dword ptr [rax-0x80]; jmp qword ptr [rdi+rcx-0x7c]; 
0x00000000478d55: add [rdi], cl; xchg esp, edx; sub [rax], al; add [rax-0x7d], cl; ret; 
0x00000000418e27: add [rdx+0x10], bh; mov rsi, r13; mov rdi, r15; call qword ptr [r14+0x38]; 
0x0000000041d4b8: add [rdx+0x1], bh; mov rdi, rbx; call qword ptr [rbp+0x48]; 
0x0000000041a88a: add [rdx+0x1], bh; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x0000000041b2e7: add [rdx+0x1], bh; mov rsi, rbx; mov edi, 0x2; mov eax, r9d; syscall; 
0x0000000041b2e6: add [rdx+0x1], dil; mov rsi, rbx; mov edi, 0x2; mov eax, r9d; syscall; 
0x00000000456580: add [rdx+0x2], esi; mov [rdi], cl; ret; 
0x00000000445066: add [rdx+0x310d8d48], edx; inc dword ptr [rip-0x6eeb7500]; mov eax, [rcx+rax*4]; sub eax, edx; ret; 
0x0000000045199f: add [rdx+0x48028801], cl; mov eax, edi; ret; 
0x0000000043eba1: add [rdx+0x4], esi; mov cl, [rsi]; mov [rdi], cl; ret; 
0x0000000044ec3b: add [rdx+0x5c0d8d48], edx; movsxd eax, [rip-0x6eeb7500]; mov eax, [rcx+rax*4]; sub eax, edx; ret; 
0x00000000486fef: add [rdx+0x63], cl; add al, 0xa6; add rax, rsi; notrack jmp rax; 
0x0000000048752c: add [rdx+0x63], cl; add al, 0xa7; add rax, rdi; notrack jmp rax; 
0x0000000045d3a9: add [rdx+0x64], bh; test eax, eax; cmove eax, edx; ret; 
0x0000000045740e: add [rdx-0x2f], esp; jge short 0x000000000045745b; out 0x49, eax; jmp qword ptr [rdx-0x2f]; 
0x0000000043eafa: add [rdx-0x2f], esp; jl short 0x000000000043eb47; adc [rcx-0x2], edx; vmovups [r9-0x40], zmm3; ret; 
0x0000000045728b: add [rdx-0x2f], esp; std; jg short 0x00000000004572db; jmp qword ptr [rdx-0x2f]; 
0x0000000046bf8c: add [rdx-0x75], cl; add al, 0xe0; test rax, rax; je short 0x000000000046bf98; call rax; 
0x00000000424f15: add [rdx-0x7d], cl; xor [rax], r9; add [rax+0x39], ecx; ret; 
0x0000000045725c: add [rdx-0xf], ah; dec byte ptr [rax+0x6f]; add [rdx-0xf], esp; dec byte ptr [rax+0x6f]; jmp qword ptr [r10-0xf]; 
0x00000000457262: add [rdx-0xf], esp; dec byte ptr [rax+0x6f]; jmp qword ptr [r10-0xf]; 
0x00000000456517: add [rdx-0xf], esp; jl short 0x0000000000456564; adc [rsi-0x2], edx; vmovups [rsi-0x40], zmm2; ret; 
0x00000000456657: add [rdx-0xf], esp; jl short 0x00000000004566a4; adc [rsi+0x2], edx; vmovups [rsi+0xc0], zmm2; ret; 
0x0000000046dbeb: add [rdx], al; add [rax], al; mov fs:[rdx], rax; ret; 
0x00000000462a86: add [rdx], al; add rsp, 0x8; ret; 
0x00000000421a9b: add [rdx], al; jbe short 0x0000000000421aa0; ret; 
0x000000004293c0: add [rdx], al; lea rax, [rip+0x1067]; lea rdx, [rip+0x2760]; cmovne rax, rdx; ret; 
0x0000000042a230: add [rdx], al; lea rax, [rip+0x25fd7]; lea rdx, [rip+0x27870]; cmovne rax, rdx; ret; 
0x00000000429420: add [rdx], al; lea rax, [rip+0x26cf7]; lea rdx, [rip+0x26ed0]; cmovne rax, rdx; ret; 
0x0000000042a395: add [rdx], al; lea rdx, [rip+0x2c382]; lea rax, [rip+0x2c43b]; cmove rax, rdx; ret; 
0x0000000042a1d5: add [rdx], al; lea rdx, [rip+0x2c532]; lea rax, [rip+0x2c5eb]; cmove rax, rdx; ret; 
0x0000000042a075: add [rdx], al; lea rdx, [rip+0x2c6a2]; lea rax, [rip+0x2c75b]; cmove rax, rdx; ret; 
0x0000000042a327: add [rdx], al; lea rdx, [rip+0x2c7c0]; lea rax, [rip+0x2c809]; cmove rax, rdx; ret; 
0x0000000042a167: add [rdx], al; lea rdx, [rip+0x2c970]; lea rax, [rip+0x2c9b9]; cmove rax, rdx; ret; 
0x0000000042a007: add [rdx], al; lea rdx, [rip+0x2cae0]; lea rax, [rip+0x2cb29]; cmove rax, rdx; ret; 
0x0000000042a379: add [rdx], al; lea rdx, [rip+0x2cbae]; lea rax, [rip+0x2cbf7]; cmove rax, rdx; ret; 
0x0000000042a1b9: add [rdx], al; lea rdx, [rip+0x2cd5e]; lea rax, [rip+0x2cda7]; cmove rax, rdx; ret; 
0x0000000042a059: add [rdx], al; lea rdx, [rip+0x2cece]; lea rax, [rip+0x2cf17]; cmove rax, rdx; ret; 
0x0000000042a119: add [rdx], al; lea rdx, [rip+0x2d66e]; lea rax, [rip+0x2d6c7]; cmove rax, rdx; ret; 
0x000000004291ac: add [rdx], bh; cmp rax, 0xffffffffffffffff; cmove rax, rdx; add rsp, 0x8; ret; 
0x000000004581ca: add [rdx], ebp; lea rcx, [rax+0x4]; lea r9, [rsp+0x20]; call rbx; 
0x0000000045a96b: add [rip+0x410000], bh; je short 0x000000000045a9a0; mov eax, 0x101; syscall; 
0x0000000045a96a: add [rip+0x410000], dil; je short 0x000000000045a9a0; mov eax, 0x101; syscall; 
0x00000000433e1f: add [rip+0xff], ah; and ecx, 0xff; sub eax, ecx; ret; 
0x00000000433e1e: add [rip+0xff], spl; and ecx, 0xff; sub eax, ecx; ret; 
0x00000000433552: add [rip+0xffff], ah; and ecx, 0xffff; sub eax, ecx; ret; 
0x00000000474a67: add [rip-0xb9517], ch; jmp qword ptr [rsi-0x70]; 
0x000000004216fc: add [rsi+0x1], dh; ret; 
0x00000000402895: add [rsi+0x2e], ah; nop [rax+rax]; xor edi, edi; mov eax, edx; syscall; 
0x0000000045ad0c: add [rsi+0x3], bh; je short 0x000000000045ad45; mov rdi, rbp; xor esi, esi; call r12; 
0x0000000045ad9c: add [rsi+0x3], bh; je short 0x000000000045add5; mov rdi, rbp; xor esi, esi; call r12; 
0x0000000045b983: add [rsi+0x3], bh; je short 0x000000000045b9ba; mov rdi, rbp; xor esi, esi; call r12; 
0x0000000045ba34: add [rsi+0x3], bh; je short 0x000000000045ba6d; mov rdi, rbp; xor esi, esi; call r12; 
0x0000000046ceb8: add [rsi+0x63], cl; add al, 0x8a; add r8, rdx; notrack jmp r8; 
0x000000004216ae: add [rsi+0x80], bh; mov eax, 0xca; syscall; 
0x0000000047e1bb: add [rsi+0x80], bh; syscall; 
0x0000000049cf1c: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x2f3b2]; syscall; 
0x0000000047558c: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x56d52]; syscall; 
0x00000000475308: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x56fd2]; syscall; 
0x00000000473284: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x5904e]; syscall; 
0x00000000473144: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x5918e]; syscall; 
0x0000000046f67c: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x5cc52]; syscall; 
0x0000000046f5b7: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x5cd17]; syscall; 
0x0000000046f415: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x5ceb9]; syscall; 
0x0000000046f33b: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x5cf93]; syscall; 
0x00000000461b6c: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x6b0f2]; syscall; 
0x00000000461a00: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x6b25e]; syscall; 
0x000000004618e0: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x6b37e]; syscall; 
0x00000000458be8: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x74076]; syscall; 
0x00000000428e08: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xa0d46]; syscall; 
0x00000000426208: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xa3946]; syscall; 
0x000000004261a8: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xa39a6]; syscall; 
0x00000000425de8: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xa3d66]; syscall; 
0x00000000425b88: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xa3fc6]; syscall; 
0x000000004255b0: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xa459e]; syscall; 
0x00000000425578: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xa45d6]; syscall; 
0x00000000427168: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xa4ef6]; syscall; 
0x0000000042671c: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xa5932]; syscall; 
0x00000000422879: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xa97d5]; syscall; 
0x00000000422848: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xa9816]; syscall; 
0x000000004225c8: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xa9a96]; syscall; 
0x000000004220a4: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xa9fba]; syscall; 
0x00000000420cba: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xab324]; syscall; 
0x000000004206fa: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xab8e4]; syscall; 
0x0000000042038e: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xabc50]; syscall; 
0x0000000042004c: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xabf92]; syscall; 
0x0000000041eae6: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xad4f8]; syscall; 
0x0000000041e846: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xad798]; syscall; 
0x0000000041e4f2: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xadaec]; syscall; 
0x00000000418668: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb45f6]; syscall; 
0x00000000410777: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbc387]; syscall; 
0x00000000410637: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbc4c7]; syscall; 
0x00000000410400: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbc6fe]; syscall; 
0x000000004103c5: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbc739]; syscall; 
0x000000004102e1: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbc81d]; syscall; 
0x00000000406d15: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xc4e51]; syscall; 
0x00000000405372: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xc67bc]; syscall; 
0x000000004041f3: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xc7893]; syscall; 
0x000000004041c5: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xc78c1]; syscall; 
0x00000000404079: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xc7a0d]; syscall; 
0x000000004012d1: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xca8ad]; syscall; 
0x00000000401440: add [rsi+0x81], bh; mov eax, 0xca; syscall; 
0x000000004266f1: add [rsi+0x81], bh; mov eax, ebx; syscall; 
0x00000000426591: add [rsi+0x81], bh; mov rdi, r12; mov eax, 0xca; syscall; 
0x00000000427b24: add [rsi+0x81], bh; mov rdi, r13; mov eax, 0xca; syscall; 
0x00000000428765: add [rsi+0x81], bh; mov rdi, r15; mov eax, 0xca; syscall; 
0x00000000423426: add [rsi+0x81], bh; mov rdi, rbp; mov eax, 0xca; syscall; 
0x000000004274ea: add [rsi+0x81], bh; mov rdi, rbx; mov eax, 0xca; syscall; 
0x000000004209d3: add [rsi+0xf], ah; out dx, eax; ror byte ptr [rdi], 0x11; pop rbx; ret; 
0x00000000489b17: add [rsi+0xf], ah; outsd dx, [rsi]; xchg ebp, eax; cmp ch, 0xff; jmp qword ptr [rsi+0xf]; 
0x0000000047d70f: add [rsi-0x1], bh; call qword ptr [rax+0x18]; 
0x0000000041cc39: add [rsi-0x1], bh; mov rdi, rbp; call qword ptr [rax+0x18]; 
0x0000000041ee90: add [rsi-0x1], bh; mov rdi, rbp; call qword ptr [rbx+0x18]; 
0x000000004205fe: add [rsi-0x1], bh; mov rdi, rbx; call qword ptr [r13+0x18]; 
0x0000000041fec7: add [rsi-0x1], bh; mov rdi, rbx; call qword ptr [r15+0x18]; 
0x0000000041f5f0: add [rsi-0x1], bh; mov rdi, rbx; call qword ptr [rbp+0x18]; 
0x0000000045314d: add [rsi-0x70], ah; mov al, [rcx]; mov [rdx], al; lea rax, [rdx]; ret; 
0x0000000045362d: add [rsi-0x70], ah; mov dx, [rsi]; mov [rdi], dx; ret; 
0x00000000453dad: add [rsi-0x70], ah; movdqu xmm0, [rsi]; movdqu [rdi], xmm0; lea rax, [rdi+0xf]; ret; 
0x0000000046cdcd: add [rsi-0x70], ah; ret; 
0x000000004519af: add [rsi-0x75], ah; add [rsi-0x77], esp; add cl, [rax-0x77]; clc; ret; 
0x00000000423356: add [rsi-0x77], ah; psubsw mm2, [rsi+rdi*8-0x1]; call qword ptr [rax-0x2bc272b8]; 
0x000000004519b2: add [rsi-0x77], esp; add cl, [rax-0x77]; clc; ret; 
0x000000004519c2: add [rsi-0x77], esp; add cl, [rdx+0x42880241]; add cl, [rax-0x77]; clc; ret; 
0x00000000459ca9: add [rsi], dl; add [rax], al; add [rax-0x1], bh; ret; 
0x0000000049d2b1: add [rsp-0x17], dh; ret far; 
0x0000000045665e: add ah, [rdx-0xf]; jl short 0x00000000004566ab; adc [rsi+0x3], edx; ret; 
0x000000004531b3: add ah, [rsi-0x75]; add al, 0x66; mov [rdx+0x4], eax; lea rax, [rdx+0x5]; ret; 
0x000000004519f3: add ah, [rsi-0x75]; add al, 0x66; mov [rdx+0x4], eax; mov rax, rdi; ret; 
0x00000000457a1a: add ah, bh; add eax, [rax]; cmp edx, 0xff; cmove rax, rcx; ret; 
0x000000004579ff: add ah, bh; add eax, [rax]; ret; 
0x00000000457af9: add ah, bh; inc dword ptr [rbx]; div ecx; mov eax, eax; ret; 
0x00000000457a4a: add ah, bh; inc dword ptr [rbx]; ret; 
0x00000000401cad: add ah, dh; nop; endbr64; ret; 
0x00000000469f61: add al, 0x0; add [rax+0x39], cl; ret far; 
0x00000000488e64: add al, 0x0; add [rax+0x63], cl; ret; 
0x000000004597bf: add al, 0x0; add [rax-0x39], cl; ret; 
0x000000004963a9: add al, 0x0; add [rax-0x75], cl; add al, 0x24; add rsp, 0x38; ret; 
0x0000000046363d: add al, 0x0; add [rax-0x77], cl; ret far; 
0x000000004235aa: add al, 0x0; add [rax-0x7d], cl; ret far; 
0x0000000047faf3: add al, 0x0; add [rax], al; ret; 
0x00000000459c74: add al, 0x0; add [rax], al; syscall; 
0x0000000048a3a8: add al, 0x0; add [rbp+0x13], dh; mov r8, [rip+0x4231c]; mov rax, r8; ret; 
0x0000000042e5b8: add al, 0x0; add [rbp-0x77], cl; ret far; 
0x0000000045c3e7: add al, 0x0; add [rcx+rcx*4+0x44], cl; and al, 0x8; mov rdi, [r8]; call rbx; 
0x00000000486fc4: add al, 0x0; add [rcx-0x77], cl; ret; 
0x000000004216fa: add al, 0x0; add [rsi+0x1], dh; ret; 
0x000000004932a1: add al, 0x0; add bl, ch; ret; 
0x00000000471747: add al, 0x0; add dh, dh; ret; 
0x00000000480698: add al, 0x0; cmp rdi, rax; ja short 0x00000000004806c8; xor eax, eax; ret; 
0x0000000047974f: add al, 0x0; jmp qword ptr [rax+rcx*8]; 
0x0000000047950b: add al, 0x0; jmp qword ptr [rcx+rax*8]; 
0x0000000048a2b0: add al, 0x0; jne short 0x000000000048a2c0; lea rax, [r8+0x1]; mov [rip+0x42411], rax; ret; 
0x0000000048a423: add al, 0x0; mov [rsi], rax; ret; 
0x00000000479b2c: add al, 0x0; mov dword ptr [rbp-0x4e0], 0x1; mov dword ptr [rbp-0x4f0], 0x20; mov rax, [rsi+rax*8]; jmp rax; 
0x00000000479bf4: add al, 0x0; mov dword ptr [rbp-0x530], 0x1; mov dword ptr [rbp-0x4e8], 0x0; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000045de64: add al, 0x0; mov eax, 0x15; syscall; 
0x00000000479959: add al, 0x0; mov r11, rcx; mov dword ptr [rbp-0x4d0], 0x1; mov rax, [rax+rsi*8]; jmp rax; 
0x000000004796f1: add al, 0x0; mov r11, rcx; mov dword ptr [rbp-0x4e8], 0x1; mov rax, [rax+rsi*8]; jmp rax; 
0x00000000479b71: add al, 0x0; mov r11, rcx; mov dword ptr [rbp-0x4f8], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x00000000479c79: add al, 0x0; mov r11, rcx; mov dword ptr [rbp-0x508], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x00000000479531: add al, 0x0; mov r11, rcx; mov dword ptr [rbp-0x514], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x00000000479c3f: add al, 0x0; mov r11, rcx; mov dword ptr [rbp-0x520], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x000000004794b1: add al, 0x0; mov r11, rcx; mov dword ptr [rbp-0x528], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000048a3b2: add al, 0x0; mov rax, r8; ret; 
0x000000004598d5: add al, 0x0; movsxd rax, [rdx+rbp*4]; add rax, rdx; notrack jmp rax; 
0x00000000457997: add al, 0x0; movsxd rax, [rsi+rdi*4]; add rax, rsi; notrack jmp rax; 
0x000000004534d7: add al, 0x0; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000004868fe: add al, 0x0; or byte ptr [rdi+0x31d], 0x4; ret; 
0x0000000048a2bd: add al, 0x0; ret; 
0x000000004855d1: add al, 0x0; shl r12, 0x4; add r12, rax; call qword ptr [r12+0x60]; 
0x0000000047fd05: add al, 0x0; test rax, rax; je short 0x000000000047fd40; call rax; 
0x00000000486846: add al, 0x0; xor eax, eax; add rsp, 0x8; ret; 
0x0000000045d55a: add al, 0x11; ret; 
0x00000000457a94: add al, 0x12; pop rbx; and eax, 0x7ff80000; ret; 
0x0000000046038d: add al, 0x17; add al, ch; ret far; 
0x0000000042b8c5: add al, 0x17; movzx edx, byte ptr [rsi+rdx]; sub eax, edx; ret; 
0x0000000042cddc: add al, 0x17; movzx edx, byte ptr [rsi+rdx]; sub eax, edx; vzeroupper; ret; 
0x0000000042b85a: add al, 0x17; sub eax, ecx; ret; 
0x000000004542ee: add al, 0x17; vzeroupper; ret; 
0x000000004801f6: add al, 0x1; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000004963ae: add al, 0x24; add rsp, 0x38; ret; 
0x0000000040f95d: add al, 0x24; call rax; 
0x0000000042416a: add al, 0x24; call rdx; 
0x0000000041cced: add al, 0x24; mov edx, 0x1; mov rdi, rbp; call qword ptr [rax+0x80]; 
0x00000000419706: add al, 0x24; mov esi, 0xffffffff; mov rdi, r8; call qword ptr [rax+0x18]; 
0x0000000040fac2: add al, 0x24; mov r13, r15; add r15, r12; call rax; 
0x0000000040f8c2: add al, 0x24; mov rdx, r14; mov rsi, r13; mov rdi, r12; call rax; 
0x0000000041cd2a: add al, 0x24; mov rdx, r8; mov rsi, r12; mov rdi, rbp; call qword ptr [rax+0x78]; 
0x0000000040fa4d: add al, 0x24; mov rsi, r12; mov rdi, r13; call rax; 
0x0000000048b84f: add al, 0x24; mov rsp, rbx; mov rbx, [rsp]; add rsp, 0x18; bnd jmp r11; 
0x0000000046db4e: add al, 0x25; add [rax], al; add [rax], al; ret; 
0x00000000410273: add al, 0x25; xor [rax], al; add [rax], al; call rax; 
0x00000000479504: add al, 0x2; lea rcx, [rip+0x4dcb3]; jmp qword ptr [rcx+rax*8]; 
0x0000000048a8fb: add al, 0x2; mov edx, 0x0; cmp rax, 0xffffffffffffffff; cmove rax, rdx; ret; 
0x00000000473856: add al, 0x30; add [rax], al; add [rcx+0x39], cl; ret; 
0x0000000047ecde: add al, 0x31; ret; 
0x0000000047ebda: add al, 0x37; ret; 
0x000000004313b9: add al, 0x38; movzx edx, byte ptr [rdx+rdi]; sub eax, edx; vzeroupper; ret; 
0x0000000047f286: add al, 0x39; bnd je short 0x000000000047f28f; test edx, edx; jne short 0x000000000047f280; ret; 
0x000000004231aa: add al, 0x39; ret; 
0x00000000433af7: add al, 0x3; add [rax], al; xor eax, eax; ret; 
0x00000000414e87: add al, 0x3; jmp qword ptr [rsi+rax*8]; 
0x000000004145e6: add al, 0x3; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000041fdcf: add al, 0x3a; ret; 
0x00000000453cab: add al, 0x48; lea eax, [rdi+0x5]; ret; 
0x000000004531a8: add al, 0x48; lea eax, [rdx+0x4]; ret; 
0x000000004531ba: add al, 0x48; lea eax, [rdx+0x5]; ret; 
0x00000000421722: add al, 0x48; lea edx, [rax+0x1]; mov [rip+0xa83e2], rdx; ret; 
0x0000000043b9fa: add al, 0x48; mov [rdi], ecx; ret; 
0x000000004519e8: add al, 0x48; mov eax, edi; ret; 
0x0000000043b9f3: add al, 0x48; mov ecx, [rsi]; mov [rdi+0x4], rdx; mov [rdi], rcx; ret; 
0x0000000044f6b8: add al, 0x48; xor eax, eax; ret; 
0x000000004855d7: add al, 0x49; add esp, eax; call qword ptr [r12+0x60]; 
0x0000000047f09c: add al, 0x4c; cmovne eax, eax; mov rax, r8; ret; 
0x0000000048a942: add al, 0x4c; cmp eax, [rcx+rsi+0x10]; jae short 0x000000000048a8f5; xor eax, eax; ret; 
0x000000004581cf: add al, 0x4c; lea ecx, [rsp+0x20]; call rbx; 
0x000000004531b6: add al, 0x66; mov [rdx+0x4], eax; lea rax, [rdx+0x5]; ret; 
0x000000004519f6: add al, 0x66; mov [rdx+0x4], eax; mov rax, rdi; ret; 
0x00000000422a38: add al, 0x71; or al, [rax]; ret; 
0x0000000046ac32: add al, 0x72; adc ecx, [rcx+0x29d231fb]; ret; 
0x000000004575c1: add al, 0x73; adc eax, [rax+0x157701fa]; jb short 0x00000000004575cd; mov [rdi], cl; ret; 
0x0000000044ed01: add al, 0x7; cmp [rax], sil; cmovne rax, rdx; ret; 
0x0000000044f16e: add al, 0x7; cmp sil, [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x00000000412133: add al, 0x7; jmp qword ptr [rsi+rax*8]; 
0x0000000044ef2c: add al, 0x7; ret; 
0x0000000045807c: add al, 0x80; sub eax, [r8+r9*4]; je short 0x0000000000458060; ret; 
0x000000004177f0: add al, 0x81; add rax, rcx; notrack jmp rax; 
0x00000000458022: add al, 0x81; je short 0x0000000000458008; ret; 
0x0000000044379b: add al, 0x81; mov edx, [rcx+rdx*4]; sub eax, edx; ret; 
0x0000000045801e: add al, 0x81; sub eax, [rcx+r8*4]; je short 0x0000000000458008; ret; 
0x00000000445073: add al, 0x81; sub eax, edx; ret; 
0x0000000041d8a7: add al, 0x82; add rax, r10; notrack jmp rax; 
0x000000004033b6: add al, 0x82; add rax, rdx; notrack jmp rax; 
0x00000000441397: add al, 0x82; sub eax, ecx; ret; 
0x0000000041d8d9: add al, 0x83; add rax, r11; notrack jmp rax; 
0x0000000045f18a: add al, 0x83; add rax, rbx; notrack jmp rax; 
0x000000004739a4: add al, 0x83; ret; 
0x000000004984af: add al, 0x84; add rax, r12; notrack jmp rax; 
0x0000000047f28a: add al, 0x85; shl byte ptr [rbp-0xf], cl; ret; 
0x000000004118d1: add al, 0x86; add rax, r14; notrack jmp rax; 
0x000000004176ec: add al, 0x86; add rax, rsi; notrack jmp rax; 
0x0000000047bb44: add al, 0x87; add rax, rdi; notrack jmp rax; 
0x000000004531a5: add al, 0x88; add al, 0x48; lea eax, [rdx+0x4]; ret; 
0x000000004519e5: add al, 0x88; add al, 0x48; mov eax, edi; ret; 
0x00000000458080: add al, 0x88; je short 0x0000000000458060; ret; 
0x0000000042ba2f: add al, 0x8; movzx edx, byte ptr [rdx+rcx]; sub eax, edx; ret; 
0x0000000042cf59: add al, 0x8; movzx edx, byte ptr [rdx+rcx]; sub eax, edx; vzeroupper; ret; 
0x0000000046cebb: add al, 0x8a; add r8, rdx; notrack jmp r8; 
0x00000000401bf3: add al, 0x8a; add rax, rdx; notrack jmp rax; 
0x00000000486374: add al, 0x90; mov [rdi+0x2f4], edx; mov [rdi+0x308], rax; ret; 
0x00000000486342: add al, 0x90; mov [rdi+0x2fc], ecx; mov [rdi+0x310], rax; ret; 
0x00000000457a63: add al, 0x96; add rax, rsi; notrack jmp rax; 
0x00000000486ff2: add al, 0xa6; add rax, rsi; notrack jmp rax; 
0x0000000048752f: add al, 0xa7; add rax, rdi; notrack jmp rax; 
0x000000004598d9: add al, 0xaa; add rax, rdx; notrack jmp rax; 
0x00000000497d32: add al, 0xb1; add rax, r9; notrack jmp rax; 
0x00000000497d6f: add al, 0xb4; add rax, r12; notrack jmp rax; 
0x0000000045799b: add al, 0xbe; add rax, rsi; notrack jmp rax; 
0x000000004545e2: add al, 0xc3; nop [rax+rax]; lea rax, [rdi+0x5]; ret; 
0x000000004145ea: add al, 0xc6; jmp rax; 
0x00000000473854: add al, 0xc7; add al, 0x30; add [rax], al; add [rcx+0x39], cl; ret; 
0x000000004149d7: add al, 0xc8; jmp rax; 
0x0000000049cae1: add al, 0xd8; test rax, rax; je short 0x000000000049caea; call rax; 
0x00000000453c38: add al, 0xde; add al, 0x0; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000046bf8f: add al, 0xe0; test rax, rax; je short 0x000000000046bf98; call rax; 
0x0000000046c215: add al, 0xe8; test rax, rax; je short 0x000000000046c21e; call rax; 
0x00000000479702: add al, 0xf0; jmp rax; 
0x0000000043bd62: add al, 0xf3; movq [rdi], mm1; ret; 
0x00000000430316: add al, 0xf; movzx edx, byte ptr [rsi+rcx]; sub eax, edx; ret; 
0x00000000432526: add al, 0xf; movzx edx, byte ptr [rsi+rcx]; sub eax, edx; vzeroupper; ret; 
0x00000000410d2d: add al, 0xff; dec dword ptr [rcx-0x77]; ret; 
0x00000000431732: add al, [rax]; add [rax+0x1], cl; clc; add rax, rcx; ret; 
0x000000004822b8: add al, [rax]; add [rax+0x29], cl; ret; 
0x0000000048372c: add al, [rax]; add [rax+0x2f7c8043], dl; jmp far fword ptr [rdi]; 
0x00000000402615: add al, [rax]; add [rax-0x39], cl; ret; 
0x00000000456fd8: add al, [rax]; add [rax-0x77], cl; shl ebx, 0x1; movsb [rdi], [rsi]; ret; 
0x0000000048f5bc: add al, [rax]; add [rax], al; add [rax+0x1], bh; ret; 
0x0000000048f72f: add al, [rax]; add [rax], al; add [rax+0x2], bh; ret; 
0x0000000049ca90: add al, [rax]; add [rax], al; add [rax], al; add rsp, 0x8; ret; 
0x0000000049cedd: add al, [rax]; add [rax], al; add [rax], al; add rsp, 0x8; ret; 
0x0000000040f7d0: add al, [rax]; add [rax], al; mov eax, 0xe; syscall; 
0x0000000041b2f1: add al, [rax]; add [rax], al; mov eax, r9d; syscall; 
0x000000004216ab: add al, [rax]; add [rax], al; mov esi, 0x80; mov eax, 0xca; syscall; 
0x00000000419d3c: add al, [rax]; add [rax], al; mov rdi, r15; call qword ptr [r13+0x80]; 
0x0000000041c1d6: add al, [rax]; add [rax], al; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x0000000041d3dd: add al, [rax]; add [rax], al; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x0000000047fad3: add al, [rax]; add [rax], al; ret; 
0x00000000492cd6: add al, [rax]; add [rax], al; test byte ptr [rip+0x39e9f], 0x40; jne short 0x0000000000492ce8; ret; 
0x0000000042e738: add al, [rax]; add [rbp-0x77], cl; ret far; 
0x00000000489aff: add al, [rax]; add [rbx-0x28f7b], cl; jmp qword ptr [rsi+0xf]; 
0x0000000045c59e: add al, [rax]; add [rcx+rcx*4+0x44], cl; and al, 0x8; mov rdi, [r8]; call rbx; 
0x0000000045c531: add al, [rax]; add [rcx+rcx*4+0x44], cl; and al, 0x8; mov rdi, [r8]; call rbx; 
0x0000000041c11a: add al, [rax]; add [rcx+rcx*4-0x16], al; mov rsi, r12; mov rdi, rbp; call qword ptr [r15+0x80]; 
0x00000000419c63: add al, [rax]; add [rcx+rcx*4-0x1e], al; mov rsi, rbp; mov rdi, r15; call qword ptr [r14+0x80]; 
0x0000000045bc48: add al, [rax]; add [rcx-0x75], cl; notrack call rbx; 
0x0000000046803b: add al, [rax]; add [rcx-0x77], al; xor ecx, [rcx-0x77]; ret far; 
0x0000000045af6e: add al, [rax]; add [rcx-0x7d], cl; ret far; 
0x00000000477974: add al, [rax]; add [rcx-0x8ef63], cl; dec dword ptr [rax-0x77]; ret far; 
0x0000000041c1d0: add al, [rax]; add [rcx], dh; idiv byte ptr [rdx+0x2]; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x0000000042966e: add al, [rax]; cmove rax, rdx; ret; 
0x0000000042936e: add al, [rax]; cmovne rax, rdx; ret; 
0x00000000496842: add al, [rax]; divss xmm0, [rip+0x23770]; ret; 
0x000000004542b8: add al, [rax]; lea rax, [rdi+0x2]; vzeroupper; ret; 
0x0000000042a417: add al, [rax]; lea rax, [rip+0x24ac0]; cmove rax, rdx; ret; 
0x00000000429667: add al, [rax]; lea rax, [rip+0x25ea0]; cmove rax, rdx; ret; 
0x000000004296a7: add al, [rax]; lea rax, [rip+0x26000]; cmove rax, rdx; ret; 
0x0000000042a39c: add al, [rax]; lea rax, [rip+0x2c43b]; cmove rax, rdx; ret; 
0x0000000042a1dc: add al, [rax]; lea rax, [rip+0x2c5eb]; cmove rax, rdx; ret; 
0x0000000042a07c: add al, [rax]; lea rax, [rip+0x2c75b]; cmove rax, rdx; ret; 
0x0000000042a32e: add al, [rax]; lea rax, [rip+0x2c809]; cmove rax, rdx; ret; 
0x0000000042a16e: add al, [rax]; lea rax, [rip+0x2c9b9]; cmove rax, rdx; ret; 
0x0000000042a00e: add al, [rax]; lea rax, [rip+0x2cb29]; cmove rax, rdx; ret; 
0x0000000042a380: add al, [rax]; lea rax, [rip+0x2cbf7]; cmove rax, rdx; ret; 
0x0000000042a1c0: add al, [rax]; lea rax, [rip+0x2cda7]; cmove rax, rdx; ret; 
0x00000000429450: add al, [rax]; lea rax, [rip+0x2ce37]; cmovne rax, rdx; ret; 
0x0000000042a060: add al, [rax]; lea rax, [rip+0x2cf17]; cmove rax, rdx; ret; 
0x0000000042a0f7: add al, [rax]; lea rax, [rip+0x2d390]; cmovne rax, rdx; ret; 
0x0000000042a0d8: add al, [rax]; lea rax, [rip+0x2d57f]; cmove rax, rdx; ret; 
0x0000000042a120: add al, [rax]; lea rax, [rip+0x2d6c7]; cmove rax, rdx; ret; 
0x00000000429427: add al, [rax]; lea rdx, [rip+0x26ed0]; cmovne rax, rdx; ret; 
0x0000000042a237: add al, [rax]; lea rdx, [rip+0x27870]; cmovne rax, rdx; ret; 
0x00000000429367: add al, [rax]; lea rdx, [rip+0x2aff0]; cmovne rax, rdx; ret; 
0x0000000048aa74: add al, [rax]; mov eax, 0x59; mov rbp, rsp; mov rsi, rbp; syscall; 
0x0000000046b7b4: add al, [rax]; mov qword ptr [rbx+0x10], 0x0; pop rbx; ret; 
0x000000004017d2: add al, [rax]; mov qword ptr [rip+0xcabd9], 0x0; pop rdx; ret; 
0x00000000459eae: add al, [rax]; mov rax, [rsp+0x8]; add rsp, 0x28; ret; 
0x0000000048752b: add al, [rax]; movsxd rax, [rdi+r12*4]; add rax, rdi; notrack jmp rax; 
0x0000000048fd2d: add al, [rax]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000486fee: add al, [rax]; movsxd rax, [rsi+r12*4]; add rax, rsi; notrack jmp rax; 
0x0000000049686f: add al, [rax]; movzx eax, al; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x0000000045f108: add al, [rax]; nop [rax+rax]; ret; 
0x0000000049684a: add al, [rax]; ret; 
0x0000000049cf2c: add al, [rax]; syscall; 
0x0000000049cf2b: add al, [rax]; syscall; 
0x00000000450098: add al, [rax]; vzeroupper; ret; 
0x0000000047bb39: add al, [rbx-0x77cdf18]; sub [rdi+0xe], esi; movsxd rax, [rdi+rax*4]; add rax, rdi; notrack jmp rax; 
0x0000000047e122: add al, [rcx+0x39]; ret; 
0x00000000415845: add al, [rcx]; ret far; 
0x0000000047fa66: add al, [rdx+rdx*8-0x2e77ea8c]; and cl, 0xf; je short 0x000000000047fa90; ret; 
0x0000000048f6b3: add al, [rdx]; sar bh, 0xff; ret; 
0x000000004545c3: add al, bl; nop [rax+rax]; lea rax, [rdi+0x3]; ret; 
0x00000000453648: add al, bl; nop [rax+rax]; mov edx, [rsi]; mov [rdi], edx; ret; 
0x0000000047fa8a: add al, bl; nop [rax]; add rax, 0x1; ret; 
0x0000000049c86e: add al, bpl; ret far; 
0x00000000460b68: add al, ch; and al, [rsi]; cli; jmp qword ptr [rsi+0xf]; 
0x00000000460b67: add al, ch; and al, [rsi]; cli; jmp qword ptr [rsi+0xf]; 
0x00000000461668: add al, ch; and bl, [rdx+rdi*8]; jmp qword ptr [rsi-0x70]; 
0x00000000476769: add al, ch; and ebx, ecx; clc; call qword ptr [rax-0x3f7c3977]; 
0x0000000046da90: add al, ch; cli; push rdi; stc; jmp qword ptr [rsi+0x2e]; 
0x0000000048cbbc: add al, ch; dec byte ptr [rbx-0x76b70001]; adc [r8+0x5a], bl; pop rbx; ret; 
0x0000000048f9fc: add al, ch; inc byte ptr [rip-0x76b70049]; ret; 
0x0000000046671d: add al, ch; insd [rdi], dx; ret far; 
0x0000000046f58b: add al, ch; jmp qword ptr [rax]; 
0x0000000047b801: add al, ch; mov [rdx-0x8], edi; jmp qword ptr [rsi+0xf]; 
0x0000000046b7d9: add al, ch; mov cl, 0x7a; stc; call qword ptr [rax-0x5e1f00d]; 
0x0000000045827e: add al, ch; or al, 0xb0; cli; jmp qword ptr [rsi+0x2e]; 
0x00000000480cd0: add al, ch; or cl, bl; std; call qword ptr [rax+0x31f1894c]; 
0x0000000048fc3f: add al, ch; or eax, [rbp-0x76b70007]; ret; 
0x00000000457b1b: add al, ch; outsd dx, [rsi]; mov bh, 0xfa; jmp qword ptr [rsi+0x66]; 
0x0000000048ba0d: add al, ch; pop rbp; fdiv st(4), st; jmp qword ptr [rsi+0x66]; 
0x000000004265bf: add al, ch; pop rbx; mov ch, 0xff; jmp qword ptr [rsi+0x66]; 
0x00000000465b2e: add al, ch; pop rsp; xlat [rbx]; stc; jmp qword ptr [rsi+0x66]; 
0x00000000428a95: add al, ch; push rbp; ret far; 
0x00000000490a39: add al, ch; push rcx; sub bh, dh; call qword ptr [rax-0x5e1f00d]; 
0x0000000041f287: add al, ch; rep ret; 
0x000000004237af: add al, ch; ret far; 
0x000000004187b7: add al, ch; ret; 
0x000000004597bc: add al, ch; sahf; add al, 0x0; add [rax-0x39], cl; ret; 
0x0000000046a86e: add al, ch; sbb al, 0x8a; stc; jmp qword ptr [rsi+0x2e]; 
0x000000004583dc: add al, ch; scasb [rdi]; scasb [rdi]; cli; jmp qword ptr [rsi+0xf]; 
0x0000000041ad49: add al, ch; test r14d, edi; call qword ptr [rax-0x5e1f00d]; 
0x00000000469b48: add al, ch; xchg edi, eax; stc; jmp qword ptr [rsi-0x70]; 
0x00000000428ed3: add al, ch; xlat [rbx]; ret; 
0x00000000468157: add al, ch; xor esi, [rcx-0x76b60007]; ret far; 
0x00000000487e14: add bh, 0x2; add al, ch; ret; 
0x0000000048f5f9: add bh, [rax+0x1]; ret; 
0x0000000048f788: add bh, [rax+0x2]; ret; 
0x00000000459c93: add bh, [rax-0x1]; ret; 
0x00000000455dd2: add bh, [rcx]; enter 0xc019, 0x83; fdivr st, st(7); ret; 
0x00000000498933: add bh, [rdi+0x1]; call rax; 
0x0000000048a8fc: add bh, [rdx]; cmp rax, 0xffffffffffffffff; cmove rax, rdx; ret; 
0x0000000048f6b1: add bh, al; add al, [rdx]; sar bh, 0xff; ret; 
0x00000000470dd2: add bh, al; test [rdi+rdi*8-0x1], esp; jmp qword ptr [rsi]; 
0x00000000412947: add bh, al; test eax, edi; idiv bh; call qword ptr [rax]; 
0x00000000410377: add bh, bh; adc ecx, [rax-0x7d]; ret; 
0x0000000046b9f7: add bh, bh; jmp qword ptr [rsi+0xf]; 
0x00000000401cdb: add bh, bh; loopne 0x0000000000401d45; nop; ret; 
0x00000000499484: add bh, bh; loopne 0x00000000004994ee; nop [rax+rax]; ret; 
0x00000000487174: add bh, bh; ror byte ptr [rax-0x7d], 0x1; ret; 
0x00000000484337: add bh, dh; ret; 
0x0000000041fc15: add bl, al; nop [rax+rax]; endbr64; xor eax, eax; ret; 
0x0000000047fac6: add bl, al; nop [rax+rax]; mov rax, 0x2; ret; 
0x0000000047fad6: add bl, al; nop [rax+rax]; mov rax, 0x3; ret; 
0x0000000047fae6: add bl, al; nop [rax+rax]; mov rax, 0x4; ret; 
0x0000000047faf6: add bl, al; nop [rax+rax]; mov rax, 0x5; ret; 
0x0000000047fb06: add bl, al; nop [rax+rax]; mov rax, 0x6; ret; 
0x0000000047fb16: add bl, al; nop [rax+rax]; mov rax, 0x7; ret; 
0x00000000498baa: add bl, al; nop [rax]; endbr64; mov [rdi+0x98], rsi; ret; 
0x00000000498bba: add bl, al; nop [rax]; endbr64; mov rax, [rdi+0xa0]; ret; 
0x00000000498c1a: add bl, al; nop [rax]; endbr64; mov rax, [rdi+0xa8]; ret; 
0x00000000498bca: add bl, al; nop [rax]; endbr64; mov rax, [rdi+0xb8]; ret; 
0x000000004615da: add bl, al; nop [rax]; endbr64; mov rax, [rip+0x6b68d]; ret; 
0x00000000420bda: add bl, al; nop [rax]; endbr64; xor eax, eax; ret; 
0x00000000493c0f: add bl, al; nop [rax]; xor eax, eax; ret; 
0x0000000041fbfd: add bl, al; nop; mov qword ptr [rdi+0xa0], 0xffffffffffffffff; mov qword ptr [rdi+0xa8], 0x0; ret; 
0x0000000040261d: add bl, bpl; or bh, bh; push rbx; adc [rax-0x7d], cl; ret; 
0x00000000499724: add bl, ch; leave; nop [rax+rax]; xor eax, eax; ret; 
0x0000000040261e: add bl, ch; or bh, bh; push rbx; adc [rax-0x7d], cl; ret; 
0x0000000047c04a: add bl, ch; ret far; 
0x00000000418e62: add bl, ch; ret; 
0x00000000428f84: add bl, ch; sahf; nop [rax+rax]; mov rsi, r12; call rax; 
0x00000000423070: add bl, ch; stosb [rdi]; nop [rax+rax]; call rax; 
0x00000000431e5f: add bl, dh; bsf eax, eax; add rax, rdi; vzeroupper; ret; 
0x00000000496843: add bl, dh; divps xmm0, [rip+0x23770]; ret; 
0x000000004574bb: add bl, dh; movq [rdi+rdx-0x10], mm0; movdqu [rdi], xmm0; ret; 
0x0000000045371f: add bl, dh; movq mm0, [rsi]; movdqu [rdi], xmm0; mov [rdi+0x10], dh; ret; 
0x0000000041f15f: add bl, dh; nop edx, edi; cmp qword ptr [rdi+0x38], 0x0; je short 0x000000000041f170; ret; 
0x0000000045f07f: add bl, dh; nop edx, edi; lea rax, [rip+0x6b555]; ret; 
0x00000000498baf: add bl, dh; nop edx, edi; mov [rdi+0x98], rsi; ret; 
0x00000000459bcf: add bl, dh; nop edx, edi; mov eax, 0x18; syscall; 
0x0000000045aa0f: add bl, dh; nop edx, edi; mov eax, 0x1; syscall; 
0x0000000045963f: add bl, dh; nop edx, edi; mov eax, 0x25; syscall; 
0x0000000049409f: add bl, dh; nop edx, edi; mov eax, 0x26; syscall; 
0x0000000049026f: add bl, dh; nop edx, edi; mov eax, 0x27; syscall; 
0x0000000045a71f: add bl, dh; nop edx, edi; mov eax, 0x3; syscall; 
0x0000000045d44f: add bl, dh; nop edx, edi; mov eax, 0x63; syscall; 
0x0000000048047f: add bl, dh; nop edx, edi; mov eax, 0x68; syscall; 
0x0000000048046f: add bl, dh; nop edx, edi; mov eax, 0x6b; syscall; 
0x0000000048048f: add bl, dh; nop edx, edi; mov eax, 0x6c; syscall; 
0x00000000459f8f: add bl, dh; nop edx, edi; mov eax, 0x8; syscall; 
0x0000000048067f: add bl, dh; nop edx, edi; mov eax, 0xc; syscall; 
0x0000000041f21f: add bl, dh; nop edx, edi; mov eax, 0xffffffff; ret; 
0x0000000042087f: add bl, dh; nop edx, edi; mov eax, [rdi+0x10]; sub eax, [rsi+0x10]; ret; 
0x0000000049027f: add bl, dh; nop edx, edi; mov r10, rcx; mov eax, 0x11; syscall; 
0x0000000045d41f: add bl, dh; nop edx, edi; mov r10, rcx; mov eax, 0x19; syscall; 
0x0000000046db7f: add bl, dh; nop edx, edi; mov rax, 0xffffffffffffffe0; add rax, fs:[0x0]; ret; 
0x0000000046db5f: add bl, dh; nop edx, edi; mov rax, 0xffffffffffffffe8; add rax, fs:[0x0]; ret; 
0x0000000046db3f: add bl, dh; nop edx, edi; mov rax, 0xfffffffffffffff0; add rax, fs:[0x0]; ret; 
0x00000000420b8f: add bl, dh; nop edx, edi; mov rax, 0xffffffffffffffff; ret; 
0x0000000048c95f: add bl, dh; nop edx, edi; mov rax, [rax+0x8]; sub rax, fs:[0x0]; ret; 
0x00000000420bef: add bl, dh; nop edx, edi; mov rax, [rdi+0x68]; ret; 
0x00000000498b7f: add bl, dh; nop edx, edi; mov rax, [rdi+0x98]; ret; 
0x00000000498bbf: add bl, dh; nop edx, edi; mov rax, [rdi+0xa0]; ret; 
0x00000000498c1f: add bl, dh; nop edx, edi; mov rax, [rdi+0xa8]; ret; 
0x00000000498c0f: add bl, dh; nop edx, edi; mov rax, [rdi+0xb0]; ret; 
0x00000000498bcf: add bl, dh; nop edx, edi; mov rax, [rdi+0xb8]; ret; 
0x0000000046af7f: add bl, dh; nop edx, edi; mov rax, [rip+0x61225]; ret; 
0x000000004615cf: add bl, dh; nop edx, edi; mov rax, [rip+0x6b68d]; ret; 
0x00000000420bcf: add bl, dh; nop edx, edi; mov rax, [rip+0xa8905]; ret; 
0x00000000420bff: add bl, dh; nop edx, edi; mov rax, rdi; ret; 
0x00000000420bbf: add bl, dh; nop edx, edi; ret; 
0x0000000041fc1f: add bl, dh; nop edx, edi; xor eax, eax; ret; 
0x0000000045a9df: add bl, dh; nop edx, edi; xor eax, eax; syscall; 
0x00000000498bae: add bl, sil; nop edx, edi; mov [rdi+0x98], rsi; ret; 
0x0000000045aa0e: add bl, sil; nop edx, edi; mov eax, 0x1; syscall; 
0x0000000045963e: add bl, sil; nop edx, edi; mov eax, 0x25; syscall; 
0x0000000049026e: add bl, sil; nop edx, edi; mov eax, 0x27; syscall; 
0x0000000048047e: add bl, sil; nop edx, edi; mov eax, 0x68; syscall; 
0x0000000048046e: add bl, sil; nop edx, edi; mov eax, 0x6b; syscall; 
0x0000000048048e: add bl, sil; nop edx, edi; mov eax, 0x6c; syscall; 
0x00000000420b7e: add bl, sil; nop edx, edi; mov eax, 0xffffffff; ret; 
0x0000000042087e: add bl, sil; nop edx, edi; mov eax, [rdi+0x10]; sub eax, [rsi+0x10]; ret; 
0x0000000049027e: add bl, sil; nop edx, edi; mov r10, rcx; mov eax, 0x11; syscall; 
0x00000000498bbe: add bl, sil; nop edx, edi; mov rax, [rdi+0xa0]; ret; 
0x00000000498c1e: add bl, sil; nop edx, edi; mov rax, [rdi+0xa8]; ret; 
0x00000000498bce: add bl, sil; nop edx, edi; mov rax, [rdi+0xb8]; ret; 
0x000000004615de: add bl, sil; nop edx, edi; mov rax, [rip+0x6b68d]; ret; 
0x0000000045d7de: add bl, sil; nop edx, edi; ret; 
0x00000000420b9e: add bl, sil; nop edx, edi; xor eax, eax; ret; 
0x000000004216b0: add byte ptr [rax], 0x0; add [rax+0xca], bh; syscall; 
0x0000000043195b: add byte ptr [rax], 0x0; add [rax], al; bsf eax, eax; add rax, rdi; ret; 
0x0000000043197b: add byte ptr [rax], 0x0; add [rax], al; bsf eax, eax; lea rax, [rax+rdi+0x20]; ret; 
0x00000000491b7b: add byte ptr [rax], 0x0; add [rax], al; call qword ptr [rbx]; 
0x00000000490863: add byte ptr [rax], 0x0; add [rax], al; call r13; 
0x0000000049409b: add byte ptr [rax], 0x0; add [rax], al; endbr64; mov eax, 0x26; syscall; 
0x00000000459f8b: add byte ptr [rax], 0x0; add [rax], al; endbr64; mov eax, 0x8; syscall; 
0x0000000048067b: add byte ptr [rax], 0x0; add [rax], al; endbr64; mov eax, 0xc; syscall; 
0x00000000498b7b: add byte ptr [rax], 0x0; add [rax], al; endbr64; mov rax, [rdi+0x98]; ret; 
0x00000000420bfb: add byte ptr [rax], 0x0; add [rax], al; endbr64; mov rax, rdi; ret; 
0x0000000043bd6b: add byte ptr [rax], 0x0; add [rax], al; mov edx, [rsi]; mov [rdi], edx; ret; 
0x0000000043bbab: add byte ptr [rax], 0x0; add [rax], al; mov rdx, [rsi]; mov [rdi], rdx; ret; 
0x00000000457a2b: add byte ptr [rax], 0x0; add [rax], al; movzx eax, cl; pop rbx; ret; 
0x0000000043bebb: add byte ptr [rax], 0x0; add [rax], al; movzx edx, byte ptr [rsi]; mov [rdi], dl; ret; 
0x0000000043be4b: add byte ptr [rax], 0x0; add [rax], al; movzx edx, word ptr [rsi]; mov [rdi], dx; ret; 
0x00000000458653: add byte ptr [rax], 0x0; add [rax], al; pop rbp; ret; 
0x0000000045b9cb: add byte ptr [rax], 0x0; add [rax], al; ret; 
0x0000000040f6f3: add byte ptr [rax], 0x0; add [rax], al; xor eax, eax; ret; 
0x0000000041b723: add byte ptr [rax], 0x0; add [rax], al; xor r8d, r8d; mov rax, r8; ret; 
0x00000000439487: add byte ptr [rax], 0x0; add [rdi+0x63], cl; or al, 0x8b; add r9, r11; notrack jmp r9; 
0x00000000423353: add byte ptr [rax], 0x0; add [rsi-0x77], ah; psubsw mm2, [rsi+rdi*8-0x1]; call qword ptr [rax-0x2bc272b8]; 
0x000000004574b8: add byte ptr [rax], 0x0; add bl, dh; movq [rdi+rdx-0x10], mm0; movdqu [rdi], xmm0; ret; 
0x00000000429f97: add byte ptr [rax], 0x0; lea rdx, [rip+0x2a6df]; cmovne rax, rdx; ret; 
0x0000000045807d: add byte ptr [rbx+0x2b], 0x4; mov [rsp+rbx*8-0x3d], dh; nop [rax]; xor eax, eax; ret; 
0x0000000047dfca: add ch, [rcx]; rol bl, 0x1; mov eax, 0xffffffff; ret; 
0x00000000480671: add ch, bl; ret far; 
0x00000000412aa8: add ch, cl; ret far; 
0x00000000458097: add ch, cl; ret; 
0x000000004519c7: add cl, [r8-0x76b7fdbe]; clc; ret; 
0x000000004682ae: add cl, [rax+0x39]; ret far; 
0x00000000467ad4: add cl, [rax+0x39]; ret; 
0x00000000457738: add cl, [rax+0x77f8c50f]; ret; 
0x00000000419dbd: add cl, [rax+0xf]; scasd [rdi]; ret; 
0x0000000042a396: add cl, [rax-0x73]; adc eax, 0x2c382; lea rax, [rip+0x2c43b]; cmove rax, rdx; ret; 
0x0000000042a1d6: add cl, [rax-0x73]; adc eax, 0x2c532; lea rax, [rip+0x2c5eb]; cmove rax, rdx; ret; 
0x0000000042a076: add cl, [rax-0x73]; adc eax, 0x2c6a2; lea rax, [rip+0x2c75b]; cmove rax, rdx; ret; 
0x0000000042a328: add cl, [rax-0x73]; adc eax, 0x2c7c0; lea rax, [rip+0x2c809]; cmove rax, rdx; ret; 
0x0000000042a168: add cl, [rax-0x73]; adc eax, 0x2c970; lea rax, [rip+0x2c9b9]; cmove rax, rdx; ret; 
0x0000000042a008: add cl, [rax-0x73]; adc eax, 0x2cae0; lea rax, [rip+0x2cb29]; cmove rax, rdx; ret; 
0x0000000042a37a: add cl, [rax-0x73]; adc eax, 0x2cbae; lea rax, [rip+0x2cbf7]; cmove rax, rdx; ret; 
0x0000000042a1ba: add cl, [rax-0x73]; adc eax, 0x2cd5e; lea rax, [rip+0x2cda7]; cmove rax, rdx; ret; 
0x0000000042a05a: add cl, [rax-0x73]; adc eax, 0x2cece; lea rax, [rip+0x2cf17]; cmove rax, rdx; ret; 
0x0000000042a11a: add cl, [rax-0x73]; adc eax, 0x2d66e; lea rax, [rip+0x2d6c7]; cmove rax, rdx; ret; 
0x000000004293c1: add cl, [rax-0x73]; add eax, 0x1067; lea rdx, [rip+0x2760]; cmovne rax, rdx; ret; 
0x0000000042a2d4: add cl, [rax-0x73]; add eax, 0x14eb4; lea rdx, [rip+0x170fd]; cmovne rax, rdx; ret; 
0x0000000042a284: add cl, [rax-0x73]; add eax, 0x1c4c4; lea rdx, [rip+0x1eb1d]; cmovne rax, rdx; ret; 
0x0000000042a231: add cl, [rax-0x73]; add eax, 0x25fd7; lea rdx, [rip+0x27870]; cmovne rax, rdx; ret; 
0x00000000429421: add cl, [rax-0x73]; add eax, 0x26cf7; lea rdx, [rip+0x26ed0]; cmovne rax, rdx; ret; 
0x0000000042970b: add cl, [rax-0x73]; add eax, 0x3acd; lea rdx, [rip+0x5326]; cmovne rax, rdx; ret; 
0x0000000047992a: add cl, [rax-0x73]; add eax, 0x4d78e; jmp qword ptr [rax+rcx*8]; 
0x00000000479749: add cl, [rax-0x73]; add eax, 0x4d86f; jmp qword ptr [rax+rcx*8]; 
0x00000000429f92: add cl, [rax-0x73]; add eax, 0x8076; lea rdx, [rip+0x2a6df]; cmovne rax, rdx; ret; 
0x00000000411862: add cl, [rax-0x73]; or al, 0x13; add rdx, r15; call qword ptr [rax+r9*8]; 
0x00000000479505: add cl, [rax-0x73]; or eax, 0x4dcb3; jmp qword ptr [rcx+rax*8]; 
0x00000000424ee0: add cl, [rax-0x73]; push rsp; ret; 
0x00000000453265: add cl, [rax-0x75]; add eax, 0x5428948; lea rax, [rdx+0xc]; ret; 
0x00000000451a55: add cl, [rax-0x75]; add eax, 0x5428948; mov rax, rdi; ret; 
0x00000000451985: add cl, [rax-0x75]; or [r8-0x77], cl; or [rax-0x77], cl; clc; ret; 
0x000000004519c8: add cl, [rax-0x76b7fdbe]; clc; ret; 
0x00000000451935: add cl, [rax-0x77]; clc; ret; 
0x000000004592d3: add cl, [rax-0x7b]; ror byte ptr [rax+0xf], cl; ret; 
0x0000000048bd00: add cl, [rax-0x7d]; ret; 
0x0000000043bc92: add cl, [rbx+0x257890e]; mov [rdi], ecx; ret; 
0x00000000451a03: add cl, [rbx+0x42890341]; add ecx, [rax-0x77]; clc; ret; 
0x000000004531e5: add cl, [rbx+0x42890541]; add eax, 0x8428d48; ret; 
0x00000000451a45: add cl, [rbx+0x42890841]; or [rax-0x77], cl; clc; ret; 
0x00000000478760: add cl, [rcx+rcx*4-0x16]; call qword ptr [rax+0x38]; 
0x000000004028eb: add cl, [rcx-0x4029763e]; add dh, [rax]; add [rax], al; mov eax, 0x9e; syscall; 
0x00000000479b23: add cl, [rcx-0x77]; ret far; 
0x0000000047cd1c: add cl, [rcx-0x77]; ret; 
0x000000004519c5: add cl, [rdx+0x42880241]; add cl, [rax-0x77]; clc; ret; 
0x000000004531a3: add cl, [rdx+0x42880441]; add al, 0x48; lea eax, [rdx+0x4]; ret; 
0x000000004519e3: add cl, [rdx+0x42880441]; add al, 0x48; mov eax, edi; ret; 
0x000000004163b1: add cl, ch; jmp rsp; 
0x0000000046cdc8: add cl, ch; mov dl, 0x5; add [rax], al; xchg ax, ax; ret; 
0x00000000495080: add cl, ch; out dx, al; idiv bh; jmp qword ptr [rsi+0x2e]; 
0x0000000040c030: add cl, ch; pop rdx; idiv bh; jmp qword ptr [rsi+0x2e]; 
0x00000000405a5c: add cl, ch; push rbp; idiv bh; jmp qword ptr [rsi+0xf]; 
0x00000000401bff: add cl, ch; ret far; 
0x00000000407d20: add cl, ch; ret; 
0x0000000049ca30: add cl, ch; sub ah, dl; sti; jmp qword ptr [rsi+0x2e]; 
0x00000000492cf4: add cl, ch; xchg [rsi-0x1], ah; jmp qword ptr [rsi+0xf]; 
0x0000000040205b: add cl, cl; ret; 
0x000000004028f1: add dh, [rax]; add [rax], al; mov eax, 0x9e; syscall; 
0x00000000455ed7: add dh, [rbp+0x16]; movzx ecx, byte ptr [rsi+rdx+0x3]; test cl, cl; jne short 0x0000000000455ed0; ret; 
0x00000000455f87: add dh, [rbp+0x16]; movzx ecx, byte ptr [rsi+rdx+0x3]; test cl, cl; jne short 0x0000000000455f80; ret; 
0x0000000047d5d1: add dh, [rbp+0x74]; mov rax, [rax+0xe0]; call qword ptr [rax+0x68]; 
0x00000000456573: add dh, [rdx+0x8]; mov [rdi], cx; mov [rsi-0x2], cx; ret; 
0x00000000421a9c: add dh, [rsi+0x1]; ret; 
0x00000000401d59: add dh, al; add eax, 0xc987f; add [rbp-0x3d], ebx; nop [rax+rax]; ret; 
0x00000000413748: add dh, al; test [rax], eax; idiv edi; jmp qword ptr [rax]; 
0x000000004773d1: add dh, al; test esp, ecx; idiv bh; jmp qword ptr [rax]; 
0x0000000043be43: add dh, bl; movq [rdi], mm1; ret; 
0x00000000461c5a: add dh, ch; stc; jmp qword ptr [rsi+0xf]; 
0x00000000492cd9: add dh, dh; add eax, 0x39e9f; jne short 0x0000000000492ce8; ret; 
0x0000000047066f: add dh, dh; ret; 
0x00000000471e66: add dil, al; test [rdi+rdi*8-0x1], esp; jmp qword ptr [rsi]; 
0x00000000401cda: add dil, r15b; loopne 0x0000000000401d45; nop; ret; 
0x00000000406d44: add dl, [rbx-0x77]; ret far; 
0x000000004274ec: add dword ptr [rax], 0x89480000; fistp qword ptr [rax+0xca], st; syscall; 
0x00000000423428: add dword ptr [rax], 0x89480000; out dx, eax; mov eax, 0xca; syscall; 
0x00000000427b26: add dword ptr [rax], 0x894c0000; out dx, eax; mov eax, 0xca; syscall; 
0x0000000049cf1e: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x2f3b2; syscall; 
0x0000000047558e: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x56d52; syscall; 
0x0000000047530a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x56fd2; syscall; 
0x00000000473286: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x5904e; syscall; 
0x00000000473146: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x5918e; syscall; 
0x0000000046f67e: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x5cc52; syscall; 
0x0000000046f5b9: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x5cd17; syscall; 
0x0000000046f417: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x5ceb9; syscall; 
0x0000000046f33d: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x5cf93; syscall; 
0x00000000461b6e: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x6b0f2; syscall; 
0x00000000461a02: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x6b25e; syscall; 
0x000000004618e2: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x6b37e; syscall; 
0x00000000458bea: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x74076; syscall; 
0x00000000428e0a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xa0d46; syscall; 
0x0000000042620a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xa3946; syscall; 
0x000000004261aa: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xa39a6; syscall; 
0x00000000425dea: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xa3d66; syscall; 
0x00000000425b8a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xa3fc6; syscall; 
0x000000004255b2: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xa459e; syscall; 
0x0000000042557a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xa45d6; syscall; 
0x0000000042716a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xa4ef6; syscall; 
0x0000000042671e: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xa5932; syscall; 
0x0000000042287b: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xa97d5; syscall; 
0x0000000042284a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xa9816; syscall; 
0x000000004225ca: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xa9a96; syscall; 
0x000000004220a6: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xa9fba; syscall; 
0x00000000420cbc: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xab324; syscall; 
0x000000004206fc: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xab8e4; syscall; 
0x00000000420390: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xabc50; syscall; 
0x0000000042004e: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xabf92; syscall; 
0x0000000041eae8: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xad4f8; syscall; 
0x0000000041e848: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xad798; syscall; 
0x0000000041e4f4: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xadaec; syscall; 
0x0000000041866a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xb45f6; syscall; 
0x00000000410779: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xbc387; syscall; 
0x00000000410639: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xbc4c7; syscall; 
0x00000000410402: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xbc6fe; syscall; 
0x000000004103c7: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xbc739; syscall; 
0x000000004102e3: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xbc81d; syscall; 
0x00000000406d17: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xc4e51; syscall; 
0x00000000405374: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xc67bc; syscall; 
0x000000004041f5: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xc7893; syscall; 
0x000000004041c7: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xc78c1; syscall; 
0x0000000040407b: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xc7a0d; syscall; 
0x000000004012d3: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xca8ad; syscall; 
0x0000000041e554: add dword ptr [rax], 0xcab80000; add [rax], al; add [rdi], cl; add eax, 0xffff44e9; jmp qword ptr [rsi+0x66]; 
0x000000004229d2: add dword ptr [rax], 0xcab80000; add [rax], al; add [rdi], cl; add eax, 0xffff70e9; jmp qword ptr [rsi+0x66]; 
0x000000004266f3: add dword ptr [rax], 0xd8890000; syscall; 
0x0000000046b7cf: add dword ptr [rbp-0x72b7fffd], 0x385853d; add al, ch; mov cl, 0x7a; stc; call qword ptr [rax-0x5e1f00d]; 
0x0000000045801f: add dword ptr [rdx+0x2b], 0xe2748104; ret; 
0x00000000490306: add dword ptr [rdx+rax*2], 0x1; ret; 
0x00000000420c46: add dword ptr [rip+0xab3a7], 0x1; pop rbx; ret; 
0x000000004104dd: add dword ptr [rip+0xbc634], 0x1; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000004293c4: add eax, 0x1067; lea rdx, [rip+0x2760]; cmovne rax, rdx; ret; 
0x0000000042a2d7: add eax, 0x14eb4; lea rdx, [rip+0x170fd]; cmovne rax, rdx; ret; 
0x0000000046dc46: add eax, 0x18c48348; ret; 
0x000000004607ed: add eax, 0x1; push rax; call rbx; 
0x0000000047fa91: add eax, 0x1; ret; 
0x0000000042a287: add eax, 0x1c4c4; lea rdx, [rip+0x1eb1d]; cmovne rax, rdx; ret; 
0x0000000046dbea: add eax, 0x200; mov fs:[rdx], rax; ret; 
0x0000000044f9f5: add eax, 0x20; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x00000000431dfa: add eax, 0x20; add rax, rdi; vzeroupper; ret; 
0x00000000496847: add eax, 0x23770; ret; 
0x0000000049683f: add eax, 0x23774; divss xmm0, [rip+0x23770]; ret; 
0x0000000042a41b: add eax, 0x24ac0; cmove rax, rdx; ret; 
0x00000000429364: add eax, 0x25947; lea rdx, [rip+0x2aff0]; cmovne rax, rdx; ret; 
0x0000000042966b: add eax, 0x25ea0; cmove rax, rdx; ret; 
0x0000000042a234: add eax, 0x25fd7; lea rdx, [rip+0x27870]; cmovne rax, rdx; ret; 
0x000000004296ab: add eax, 0x26000; cmove rax, rdx; ret; 
0x000000004059b2: add eax, 0x26850f00; add [rax], eax; add [rax-0x80], al; jmp qword ptr [rdi+rcx-0x7c]; 
0x00000000429424: add eax, 0x26cf7; lea rdx, [rip+0x26ed0]; cmovne rax, rdx; ret; 
0x0000000047f01b: add eax, 0x270; cmove rax, rdx; ret; 
0x0000000040f799: add eax, 0x27b9; add [rcx+0x48050fc8], cl; mov edi, eax; mov eax, 0xba; syscall; 
0x0000000045ab9f: add eax, 0x28c48348; ret; 
0x0000000047fa88: add eax, 0x2; ret; 
0x00000000429f14: add eax, 0x2bed7; cmove rax, rdx; ret; 
0x0000000042a3a0: add eax, 0x2c43b; cmove rax, rdx; ret; 
0x0000000042a1e0: add eax, 0x2c5eb; cmove rax, rdx; ret; 
0x0000000042a080: add eax, 0x2c75b; cmove rax, rdx; ret; 
0x0000000042a332: add eax, 0x2c809; cmove rax, rdx; ret; 
0x0000000042a172: add eax, 0x2c9b9; cmove rax, rdx; ret; 
0x0000000042a012: add eax, 0x2cb29; cmove rax, rdx; ret; 
0x0000000042a384: add eax, 0x2cbf7; cmove rax, rdx; ret; 
0x0000000042a1c4: add eax, 0x2cda7; cmove rax, rdx; ret; 
0x00000000429454: add eax, 0x2ce37; cmovne rax, rdx; ret; 
0x0000000042a064: add eax, 0x2cf17; cmove rax, rdx; ret; 
0x0000000042a0fb: add eax, 0x2d390; cmovne rax, rdx; ret; 
0x0000000042a0dc: add eax, 0x2d57f; cmove rax, rdx; ret; 
0x0000000042a124: add eax, 0x2d6c7; cmove rax, rdx; ret; 
0x0000000046f4eb: add eax, 0x2d8b4800; movsb [rdi], [rsi]; ret far; 
0x000000004545f2: add eax, 0x2e6666c3; nop [rax+rax]; lea rax, [rdi+0x6]; ret; 
0x00000000496ab6: add eax, 0x2f3c0000; ja 0x0000000000401723; movsxd rax, [r14+rax*4]; add rax, r14; notrack jmp rax; 
0x0000000049cedc: add eax, 0x2f3f3; add [rax], al; add [rax], al; add rsp, 0x8; ret; 
0x0000000049ca8d: add eax, 0x2f722; add [rax], al; add [rax], al; add rsp, 0x8; ret; 
0x00000000422a30: add eax, 0x319b; mov [rip+0xa7104], rax; ret; 
0x00000000422a22: add eax, 0x3429; mov [rip+0xa711a], rax; lea rax, [rip+0x319b]; mov [rip+0xa7104], rax; ret; 
0x0000000048ff2b: add eax, 0x38c48348; ret; 
0x00000000465f89: add eax, 0x39480000; ret; 
0x00000000492cdb: add eax, 0x39e9f; jne short 0x0000000000492ce8; ret; 
0x0000000047faa1: add eax, 0x3; ret; 
0x0000000042970e: add eax, 0x3acd; lea rdx, [rip+0x5326]; cmovne rax, rdx; ret; 
0x000000004902f7: add eax, 0x3c194; jae short 0x000000000049030a; mov rdx, [rip+0x3c193]; add word ptr [rdx+rax*2], 0x1; ret; 
0x000000004904c5: add eax, 0x3c71e; ret; 
0x0000000048f839: add eax, 0x3cb4a; ret; 
0x0000000048f822: add eax, 0x3cb61; add rsp, 0x8; ret; 
0x0000000048f832: add eax, 0x3cb69; mov [rip+0x3cb4a], rax; ret; 
0x0000000048f81b: add eax, 0x3cb80; mov [rip+0x3cb61], rax; add rsp, 0x8; ret; 
0x0000000048a416: add eax, 0x3f0a5; mov [rdi], rax; mov rax, [rip+0x422a3]; mov [rsi], rax; ret; 
0x0000000048c942: add eax, 0x3fa15; add [rax], al; add [rax], al; add rsp, 0x8; ret; 
0x0000000048047a: add eax, 0x401f0fc3; add bl, dh; nop edx, edi; mov eax, 0x68; syscall; 
0x0000000048046a: add eax, 0x401f0fc3; add bl, dh; nop edx, edi; mov eax, 0x6b; syscall; 
0x0000000048048a: add eax, 0x401f0fc3; add bl, dh; nop edx, edi; mov eax, 0x6c; syscall; 
0x0000000044fa15: add eax, 0x40; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x00000000431e1a: add eax, 0x40; add rax, rdi; vzeroupper; ret; 
0x0000000048a420: add eax, 0x422a3; mov [rsi], rax; ret; 
0x0000000048a3af: add eax, 0x4231c; mov rax, r8; ret; 
0x0000000048a2ba: add eax, 0x42411; ret; 
0x0000000048a2ad: add eax, 0x4241e; jne short 0x000000000048a2c0; lea rax, [r8+0x1]; mov [rip+0x42411], rax; ret; 
0x000000004730e7: add eax, 0x445b0100; mov eax, eax; pop rbp; pop r12; ret; 
0x000000004855cf: add eax, 0x44f6c; shl r12, 0x4; add r12, rax; call qword ptr [r12+0x60]; 
0x000000004531e7: add eax, 0x48054289; lea eax, [rdx+0x8]; ret; 
0x00000000451a17: add eax, 0x48054289; mov eax, edi; ret; 
0x0000000043b983: add eax, 0x480e8b48; mov [rdi+0x5], edx; mov [rdi], rcx; ret; 
0x00000000453d56: add eax, 0x480f8948; mov [rdi+0x5], edx; lea rax, [rdi+0xc]; ret; 
0x000000004536e6: add eax, 0x480f8948; mov [rdi+0x5], edx; ret; 
0x0000000043ee5f: add eax, 0x487c5162; adc [rcx+0x6], esi; vmovups [r9+0x1c0], zmm15; ret; 
0x000000004566f4: add eax, 0x487cf162; adc [rsi+0x6], edx; vmovups [rsi+0x1c0], zmm2; ret; 
0x0000000046bf8b: add eax, 0x48b4a00; loopne 0x000000000046bfda; test eax, eax; je short 0x000000000046bf98; call rax; 
0x0000000047fd02: add eax, 0x48d91; test rax, rax; je short 0x000000000047fd40; call rax; 
0x000000004370b7: add eax, 0x4900069b; movsxd edx, [rbx+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004353f7: add eax, 0x490006b6; movsxd edx, [rbx+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000480695: add eax, 0x4bc5e; cmp rdi, rax; ja short 0x00000000004806c8; xor eax, eax; ret; 
0x00000000479956: add eax, 0x4d365; mov r11, rcx; mov dword ptr [rbp-0x4d0], 0x1; mov rax, [rax+rsi*8]; jmp rax; 
0x0000000047992d: add eax, 0x4d78e; jmp qword ptr [rax+rcx*8]; 
0x000000004796ee: add eax, 0x4d7cd; mov r11, rcx; mov dword ptr [rbp-0x4e8], 0x1; mov rax, [rax+rsi*8]; jmp rax; 
0x0000000047974c: add eax, 0x4d86f; jmp qword ptr [rax+rcx*8]; 
0x00000000453268: add eax, 0x5428948; lea rax, [rdx+0xc]; ret; 
0x00000000451a58: add eax, 0x5428948; mov rax, rdi; ret; 
0x00000000475d1a: add eax, 0x57009; shl rdx, 0x2; lea rcx, [rbx+rdx]; add rdx, r15; call qword ptr [rax+r9*8]; 
0x0000000046c20e: add eax, 0x5ca2d; mov rax, [rax+rbp*8]; test rax, rax; je short 0x000000000046c21e; call rax; 
0x0000000046bf88: add eax, 0x5ccb3; mov rax, [rax+r12*8]; test rax, rax; je short 0x000000000046bf98; call rax; 
0x0000000046dae2: add eax, 0x5d2c9; mov [rip+0x5d2ca], rdx; cmp fs:[rdi], rsi; je short 0x000000000046daf8; ret; 
0x0000000044fa61: add eax, 0x60; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x00000000431e3a: add eax, 0x60; add rax, rdi; vzeroupper; ret; 
0x0000000046af86: add eax, 0x61225; ret; 
0x0000000048ffe4: add eax, 0x67; cmovne rax, rdx; ret; 
0x00000000462a69: add eax, 0x6972e; test eax, eax; je short 0x0000000000462a78; ret; 
0x0000000045f0bb: add eax, 0x699e0; pop rbx; ret; 
0x0000000045f086: add eax, 0x6b555; ret; 
0x000000004615d6: add eax, 0x6b68d; ret; 
0x0000000045fe3e: add eax, 0x6cd71; ret; 
0x0000000045fe0e: add eax, 0x6cda1; ret; 
0x0000000045fddd: add eax, 0x6cdd2; pop rbx; ret; 
0x0000000045fd9e: add eax, 0x6ce11; ret; 
0x0000000045fd6e: add eax, 0x6ce41; ret; 
0x0000000045fd3d: add eax, 0x6ce72; pop rbx; ret; 
0x0000000045d3fe: add eax, 0x6d04d; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000045f095: add eax, 0x6dbb6; test eax, eax; je short 0x000000000045f0a0; ret; 
0x0000000045d3a5: add eax, 0x6f83e; mov edx, 0x64; test eax, eax; cmove eax, edx; ret; 
0x0000000045ab26: add eax, 0x6f9ad; test rax, rax; je short 0x000000000045ab31; ret; 
0x000000004025fc: add eax, 0x748d4800; and al, 0x70; mov edi, 0x3001; mov eax, 0x9e; syscall; 
0x0000000042a3db: add eax, 0x7600; cmove rax, rdx; ret; 
0x00000000429f4b: add eax, 0x7760; cmove rax, rdx; ret; 
0x0000000041fa7f: add eax, 0x7fa8c; mov dword ptr [rdi+0xc0], 0xffffffff; movups [rdi+0xa0], xmm0; ret; 
0x0000000041f9ef: add eax, 0x7fb1c; mov dword ptr [rdi+0xc0], 0xffffffff; movups [rdi+0xa0], xmm0; ret; 
0x00000000429f95: add eax, 0x8076; lea rdx, [rip+0x2a6df]; cmovne rax, rdx; ret; 
0x000000004452d8: add eax, 0x81048b00; mov edx, [rcx+rdx*4]; sub eax, edx; ret; 
0x000000004770b4: add eax, 0x83410000; out dx, eax; add [rax-0x93343], eax; jmp qword ptr [rax]; 
0x000000004531ea: add eax, 0x8428d48; ret; 
0x00000000429fba: add eax, 0x8451; test byte ptr [rip+0xa217f], 0x1; je short 0x0000000000429f81; ret; 
0x0000000047e24b: add eax, 0x890; cmove rax, rdx; ret; 
0x00000000415205: add eax, 0x89440000; ror byte ptr [rcx-0x4ef73], 0x1; jmp far fword ptr [rcx]; 
0x00000000419a50: add eax, 0x89480000; and al, 0x10; xor edx, edx; mov rdi, r15; call qword ptr [r14+0x80]; 
0x0000000048f9ff: add eax, 0x8948ffb7; ret; 
0x0000000045c30b: add eax, 0x894c0000; and al, 0x8; mov rdi, [r8]; call rbx; 
0x0000000042e438: add eax, 0x894d0000; ret far; 
0x000000004450a1: add eax, 0x8a0c8b00; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000047efdb: add eax, 0x8b0; cmove rax, rdx; ret; 
0x0000000047f016: add eax, 0x8d480000; add eax, 0x270; cmove rax, rdx; ret; 
0x0000000046cdcb: add eax, 0x90660000; ret; 
0x0000000044506d: add eax, 0x91148b00; mov eax, [rcx+rax*4]; sub eax, edx; ret; 
0x0000000042a353: add eax, 0x9b08; lea rdx, [rip+0xf091]; cmovne rax, rdx; ret; 
0x0000000042a193: add eax, 0x9ca8; lea rdx, [rip+0xf231]; cmovne rax, rdx; ret; 
0x0000000042935c: add eax, 0xa2de2; lea rax, [rip+0x25947]; lea rdx, [rip+0x2aff0]; cmovne rax, rdx; ret; 
0x00000000426841: add eax, 0xa32fa; ret; 
0x00000000426833: add eax, 0xa3310; lea rax, [rip-0xc6f]; mov [rip+0xa32fa], rax; ret; 
0x000000004267df: add eax, 0xa5878; add [rax], al; add [rax], al; ret; 
0x00000000422a37: add eax, 0xa7104; ret; 
0x00000000422a29: add eax, 0xa711a; lea rax, [rip+0x319b]; mov [rip+0xa7104], rax; ret; 
0x0000000042292b: add eax, 0xa7230; add rsp, 0x10; pop rbp; ret; 
0x00000000421ad3: add eax, 0xa8014; ret; 
0x00000000421aad: add eax, 0xa801e; ret; 
0x00000000421ac9: add eax, 0xa8022; add [rax], eax; add [rax], al; mov [rip+0xa8014], eax; ret; 
0x00000000421a84: add eax, 0xa803f; ret; 
0x00000000421aa2: add eax, 0xa8049; add [rax], eax; add [rax], al; mov [rip+0xa801e], rax; ret; 
0x00000000421a64: add eax, 0xa8057; ret; 
0x00000000421a79: add eax, 0xa8072; add [rax], eax; add [rax], al; mov [rip+0xa803f], rax; ret; 
0x00000000421a59: add eax, 0xa8092; add [rax], eax; add [rax], al; mov [rip+0xa8057], rax; ret; 
0x0000000042175a: add eax, 0xa83c9; ret; 
0x00000000421743: add eax, 0xa83d8; ret; 
0x000000004216ea: add eax, 0xa83e9; ret; 
0x000000004216da: add eax, 0xa8401; ret; 
0x00000000420bd6: add eax, 0xa8905; ret; 
0x00000000421b17: add eax, 0xaa55c; ret; 
0x00000000421ae9: add eax, 0xaa586; ret; 
0x00000000420ce1: add eax, 0xab30e; add [rax], al; add [rax], al; ret; 
0x00000000420cd6: add eax, 0xab311; add [rax], al; add [rax], al; mov qword ptr [rip+0xab30e], 0x0; ret; 
0x00000000415480: add eax, 0xb0d9b; mov rax, [rax+rcx*8]; jmp rax; 
0x00000000414c3c: add eax, 0xb19df; jmp qword ptr [rax+rdx*8]; 
0x000000004149d0: add eax, 0xb1a4b; mov rax, [rax+rcx*8]; jmp rax; 
0x00000000414a39: add eax, 0xb1ae2; jmp qword ptr [rax+rdx*8]; 
0x0000000041185a: add eax, 0xbb4c9; shl rdx, 0x2; lea rcx, [rbx+rdx]; add rdx, r15; call qword ptr [rax+r9*8]; 
0x0000000043384a: add eax, 0xc0310000; ret; 
0x000000004338c9: add eax, 0xc0310000; ret; 
0x0000000046f644: add eax, 0xc0310100; add rsp, 0x8; ret; 
0x0000000047fb03: add eax, 0xc3000000; nop [rax+rax]; mov rax, 0x6; ret; 
0x00000000420bd7: add eax, 0xc3000a89; nop [rax]; endbr64; xor eax, eax; ret; 
0x0000000045326c: add eax, 0xc428d48; ret; 
0x00000000453d5d: add eax, 0xc478d48; ret; 
0x0000000044362b: add eax, 0xc634f00; mov ah, [rsi+0xf]; je short 0x00000000004435f6; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000044b44b: add eax, 0xc634f00; mov ah, [rsi+0xf]; je short 0x000000000044b416; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000044b449: add eax, 0xc634f00; mov ah, [rsi+0xf]; je short 0x000000000044b416; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000044b44a: add eax, 0xc634f00; mov ah, [rsi+0xf]; je short 0x000000000044b416; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000044688f: add eax, 0xc634f00; mov cl, [rdi-0x73]; adc al, 0xa; notrack jmp r10; 
0x0000000042a033: add eax, 0xc808; lea rdx, [rip+0x11ea1]; cmovne rax, rdx; ret; 
0x00000000401d5b: add eax, 0xc987f; add [rbp-0x3d], ebx; nop [rax+rax]; ret; 
0x0000000040221f: add eax, 0xc9f3c; add rsp, 0x88; pop rbx; ret; 
0x000000004017d6: add eax, 0xcabd9; add [rax], al; add [rax], al; pop rdx; ret; 
0x000000004585f4: add eax, 0xcb7; lea rdx, [rip+0xa90]; cmovne rax, rdx; ret; 
0x00000000475d1d: add eax, 0xe2c14800; add cl, [rax-0x73]; or al, 0x13; add rdx, r15; call qword ptr [rax+r9*8]; 
0x0000000043bce9: add eax, 0xef00ff2; movdqu [rdi+0x5], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000043bcf2: add eax, 0xf7f0ff3; ret; 
0x00000000402c47: add eax, 0xfff88300; je 0x0000000000402d38; add rsp, 0x98; ret; 
0x0000000047f094: add eax, 0xfffd8557; cmp rdx, 0x4; cmovne r8, rax; mov rax, r8; ret; 
0x00000000428774: add eax, 0xfffebee9; jmp qword ptr [rsi+0xf]; 
0x00000000406d28: add eax, 0xfffefbe9; jmp qword ptr [rsi-0x70]; 
0x000000004252a4: add eax, 0xffff01e9; jmp qword ptr [rsi+0xf]; 
0x000000004102f4: add eax, 0xffff28e9; jmp qword ptr [rsi+0xf]; 
0x0000000041eaf9: add eax, 0xffff2be9; call qword ptr [rax+0xff0c889]; 
0x000000004203a1: add eax, 0xffff3ee9; jmp qword ptr [rsi+0xf]; 
0x0000000041e55e: add eax, 0xffff44e9; jmp qword ptr [rsi+0x66]; 
0x000000004229dc: add eax, 0xffff70e9; jmp qword ptr [rsi+0x66]; 
0x0000000042683a: add eax, 0xfffff391; mov [rip+0xa32fa], rax; ret; 
0x0000000042682c: add eax, 0xfffff61f; mov [rip+0xa3310], rax; lea rax, [rip-0xc6f]; mov [rip+0xa32fa], rax; ret; 
0x0000000046db4d: add eax, [0x0]; ret; 
0x0000000040511a: add eax, [rax-0x80]; jmp qword ptr [rcx+rax*2+0xf]; 
0x000000004957bc: add eax, [rax]; add [rax+0x1], cl; ret; 
0x00000000485b9f: add eax, [rax]; add [rax-0x77], cl; ret; 
0x0000000048c945: add eax, [rax]; add [rax], al; add [rax], al; add rsp, 0x8; ret; 
0x0000000041d4b5: add eax, [rax]; add [rax], al; mov edx, 0x1; mov rdi, rbx; call qword ptr [rbp+0x48]; 
0x0000000047fae3: add eax, [rax]; add [rax], al; ret; 
0x0000000045a725: add eax, [rax]; add [rax], al; syscall; 
0x00000000430da8: add eax, [rax]; add [rbp-0x77], cl; ret far; 
0x0000000044e94f: add eax, [rax]; add [rbp-0x77], cl; ret far; 
0x00000000465522: add eax, [rax]; add [rbx+0x4be02e0], al; add [rax], al; add [rcx-0x77], al; ret; 
0x0000000045c4c3: add eax, [rax]; add [rcx+rcx*4+0x44], cl; and al, 0x8; mov rdi, [r8]; call rbx; 
0x00000000469610: add eax, [rax]; add [rcx-0x73], cl; add cl, [rax+0x39]; ret far; 
0x00000000467ace: add eax, [rax]; add [rcx-0x73], cl; add r9b, [r8+0x39]; ret; 
0x0000000045aec2: add eax, [rax]; add [rcx-0x75], cl; mov rax, [rsp+0x8]; mov rdi, r13; call rax; 
0x0000000045bc78: add eax, [rax]; add [rcx-0x75], cl; notrack call rbx; 
0x0000000047e119: add eax, [rax]; add [rcx-0x77], al; ret; 
0x0000000046370d: add eax, [rax]; add [rcx-0xa], al; ret; 
0x00000000419d36: add eax, [rax]; add [rcx], dh; idiv byte ptr [rdx+0x2]; mov rdi, r15; call qword ptr [r13+0x80]; 
0x0000000041c03e: add eax, [rax]; add [rcx], dh; ror byte ptr [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x80]; 
0x0000000041c03f: add eax, [rax]; add [rcx], dh; ror byte ptr [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x80]; 
0x000000004951c1: add eax, [rax]; add [rdi-0x2c517], bl; jmp qword ptr [rsi+0xf]; 
0x0000000047e1b9: add eax, [rax]; add [rsi+0x80], bh; syscall; 
0x0000000048f825: add eax, [rax]; add rsp, 0x8; ret; 
0x00000000490303: add eax, [rax]; add word ptr [rdx+rax*2], 0x1; ret; 
0x00000000457a1c: add eax, [rax]; cmp edx, 0xff; cmove rax, rcx; ret; 
0x000000004902fa: add eax, [rax]; jae short 0x000000000049030a; mov rdx, [rip+0x3c193]; add word ptr [rdx+rax*2], 0x1; ret; 
0x00000000492cde: add eax, [rax]; jne short 0x0000000000492ce8; ret; 
0x0000000048c919: add eax, [rax]; lea rax, [rdi-0x1]; cmp rax, 0xfffffffffffffffd; jbe short 0x000000000048c930; ret; 
0x000000004767c5: add eax, [rax]; lea rsi, [rip+0x503f2]; movzx eax, byte ptr [rdi+rax]; jmp qword ptr [rsi+rax*8]; 
0x0000000048fcbe: add eax, [rax]; mov [rax], rdx; add rsp, 0x8; ret; 
0x0000000048a419: add eax, [rax]; mov [rdi], rax; mov rax, [rip+0x422a3]; mov [rsi], rax; ret; 
0x0000000048f835: add eax, [rax]; mov [rip+0x3cb4a], rax; ret; 
0x0000000048f81e: add eax, [rax]; mov [rip+0x3cb61], rax; add rsp, 0x8; ret; 
0x0000000049348d: add eax, [rax]; mov edi, 0x3005; mov eax, 0x9e; syscall; 
0x0000000047bbdc: add eax, [rax]; movsxd rcx, [rdi+rcx*4]; add rcx, rdi; notrack jmp rcx; 
0x0000000047bc40: add eax, [rax]; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x00000000457a01: add eax, [rax]; ret; 
0x0000000049b8f8: add eax, [rax]; test rbx, rbx; jne short 0x000000000049b8e0; pop rbx; ret; 
0x0000000049544d: add eax, [rbp-0x72de8b2e]; dec dword ptr [rbp+r9*4+0x74]; ret; 
0x00000000487b41: add eax, [rbp-0x7b]; leave; jne short 0x0000000000487b57; mov [rbp-0xd8], r11; call rax; 
0x00000000486d2e: add eax, [rbp]; call rax; 
0x000000004033a7: add eax, [rbx+0x26770af8]; lea rdx, [rip+0x9b410]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000495423: add eax, [rbx]; mov rsi, r12; mov edi, ebp; call rax; 
0x00000000487b40: add eax, [rbx]; test r9d, r9d; jne short 0x0000000000487b57; mov [rbp-0xd8], r11; call rax; 
0x0000000045fef4: add eax, [rcx+0x5c]; shl eax, cl; ret; 
0x00000000455f8e: add eax, [rcx+rcx*8+0x31c3ed75]; rol bl, 0x48; mov eax, edi; ret; 
0x0000000045d559: add eax, [rcx+rdx]; ret; 
0x0000000048716f: add eax, [rdi]; test ecx, ecx; jne short 0x0000000000487177; call rax; 
0x00000000487a0c: add eax, [rdi]; test edx, edx; jne short 0x0000000000487a14; call rax; 
0x000000004872fc: add eax, [rdi]; test r11d, r11d; jne short 0x0000000000487305; call rax; 
0x00000000491ba1: add eax, [rdx+0x8]; pop rbp; pop r12; jmp rax; 
0x000000004414de: add eax, [rsi]; add [rdi+0x63], cl; or al, 0x8a; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000473078: add eax, eax; mov eax, r8d; ret; 
0x0000000045f1d5: add eax, ebp; notrack jmp rax; 
0x00000000480e97: add eax, ebp; ret; 
0x000000004545d3: add eax, ebx; nop [rax+rax]; lea rax, [rdi+0x4]; ret; 
0x00000000453689: add eax, ebx; nop [rax+rax]; mov rdx, [rsi]; mov [rdi], rdx; ret; 
0x0000000047faa3: add eax, ebx; nop [rax+rax]; xor rax, rax; ret; 
0x0000000041d8dc: add eax, ebx; notrack jmp rax; 
0x0000000044f398: add eax, ecx; add rax, rdi; vzeroupper; ret; 
0x00000000420959: add eax, ecx; mov [rdi+0x18], rsi; mov [rdi+0x8], rax; xor eax, eax; ret; 
0x0000000042091d: add eax, ecx; mov [rdi+0x8], rax; xor eax, eax; ret; 
0x000000004177f3: add eax, ecx; notrack jmp rax; 
0x00000000431739: add eax, ecx; ret; 
0x000000004563e6: add eax, ecx; sub rax, rdi; ret; 
0x00000000459376: add eax, ecx; sub rax, rdx; shr rax, 0x2; vzeroupper; ret; 
0x0000000044f92d: add eax, ecx; sub rax, rdx; vzeroupper; ret; 
0x00000000431c76: add eax, ecx; vzeroupper; ret; 
0x00000000431736: add eax, edi; add rax, rcx; ret; 
0x0000000044f92a: add eax, edi; add rax, rcx; sub rax, rdx; vzeroupper; ret; 
0x00000000431c73: add eax, edi; add rax, rcx; vzeroupper; ret; 
0x0000000047bb47: add eax, edi; notrack jmp rax; 
0x00000000431964: add eax, edi; ret; 
0x000000004594fa: add eax, edi; sub rax, rdx; shr rax, 0x2; vzeroupper; ret; 
0x0000000044f9e5: add eax, edi; sub rax, rdx; vzeroupper; ret; 
0x00000000431dea: add eax, edi; vzeroupper; ret; 
0x00000000448d99: add eax, edx; add eax, 0x8a0c8b00; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000046cebe: add eax, edx; notrack jmp r8; 
0x00000000401bf6: add eax, edx; notrack jmp rax; 
0x0000000044f6a6: add eax, edx; sub rax, rdi; ret; 
0x0000000045924b: add eax, edx; sub rax, rdi; shr rax, 0x2; ret; 
0x0000000048a21a: add eax, esi; inc dword ptr [r8+0x10]; pop rbx; pop rbp; ret; 
0x000000004118d4: add eax, esi; notrack jmp rax; 
0x00000000497d72: add eax, esp; notrack jmp rax; 
0x00000000470c8f: add ebp, eax; ret far; 
0x0000000048d5e1: add ebp, edi; jmp qword ptr [rsi+0x66]; 
0x0000000048d656: add ebp, edi; jmp qword ptr [rsi+0xf]; 
0x0000000048d657: add ebp, edi; jmp qword ptr [rsi+0xf]; 
0x000000004955b9: add ebx, 0x8; mov rdx, r13; mov rsi, r12; mov edi, ebp; call qword ptr [rax]; 
0x00000000495dae: add ebx, [rax+0x5a]; pop rbx; ret; 
0x0000000049412e: add ebx, [rbx+0x5d]; pop r12; ret; 
0x00000000421a21: add ebx, [rbx+0x5d]; ret; 
0x0000000047fa93: add ebx, eax; nop [rax+rax]; add rax, 0x3; ret; 
0x000000004545b3: add ebx, eax; nop [rax+rax]; lea rax, [rdi+0x2]; ret; 
0x0000000045d901: add ebx, eax; nop [rax+rax]; mov [rax+0x20], rsi; ret; 
0x0000000045d895: add ebx, eax; nop [rax+rax]; mov [rdi+0x20], rsi; ret; 
0x0000000048d721: add ebx, eax; nop [rax+rax]; xor eax, eax; ret; 
0x0000000043256b: add ebx, eax; nop [rax]; ret; 
0x0000000042173e: add ebx, eax; nop; mov [rip+0xa83d8], rax; ret; 
0x00000000421a9e: add ebx, eax; nop; mov dword ptr [rip+0xa8049], 0x1; mov [rip+0xa801e], rax; ret; 
0x00000000464b47: add ebx, ebp; ret far; 
0x0000000043beb3: add ebx, esi; movq [rdi], mm1; ret; 
0x000000004578d2: add ecx, 0x100; cmp rdx, rcx; jne short 0x00000000004578b6; vzeroupper; ret; 
0x000000004575ab: add ecx, 0x40; cmp rdx, rcx; jne short 0x0000000000457597; rep ret; 
0x0000000045770f: add ecx, 0x80; cmp rdx, rcx; jne short 0x00000000004576fb; vzeroupper; ret; 
0x00000000451a05: add ecx, [r9-0x76b7fcbe]; clc; ret; 
0x000000004222cc: add ecx, [rax+0x29]; ret; 
0x0000000041547d: add ecx, [rax-0x73]; add eax, 0xb0d9b; mov rax, [rax+rcx*8]; jmp rax; 
0x00000000414c39: add ecx, [rax-0x73]; add eax, 0xb19df; jmp qword ptr [rax+rdx*8]; 
0x000000004149cd: add ecx, [rax-0x73]; add eax, 0xb1a4b; mov rax, [rax+rcx*8]; jmp rax; 
0x00000000414a36: add ecx, [rax-0x73]; add eax, 0xb1ae2; jmp qword ptr [rax+rdx*8]; 
0x000000004145e7: add ecx, [rax-0x75]; add al, 0xc6; jmp rax; 
0x00000000451a08: add ecx, [rax-0x77]; clc; ret; 
0x00000000489723: add ecx, [rax-0x77]; mov rax, r8; ret; 
0x000000004876c5: add ecx, [rax-0x7d]; ret; 
0x0000000041036f: add ecx, [rbp+rcx*4+0x64]; ret; 
0x00000000491b6c: add ecx, [rbp-0x3f7a00b0]; je short 0x0000000000491b8e; lea rbx, [rbp+rdx*8]; nop [rax]; call qword ptr [rbx]; 
0x000000004975cd: add ecx, [rbp-0x73]; or ecx, [eax-0x7d]; ret; 
0x0000000043bc22: add ecx, [rbx+0x357890e]; mov [rdi], ecx; ret; 
0x00000000453cc4: add ecx, [rcx+0x357890f]; lea rax, [rdi+0x6]; ret; 
0x00000000453684: add ecx, [rcx+0x357890f]; ret; 
0x00000000495424: add ecx, [rcx+rcx*4-0x1a]; mov edi, ebp; call rax; 
0x00000000451a06: add ecx, [rcx-0x76b7fcbe]; clc; ret; 
0x00000000465f85: add ecx, [rdi]; xchg [rax*1+0x39480000], esp; ret; 
0x00000000469f5d: add ecx, [rdi]; xchg ebp, ecx; add al, 0x0; add [rax+0x39], cl; ret far; 
0x00000000463a1c: add ecx, ebp; ret far; 
0x00000000488f34: add ecx, ebp; ret; 
0x00000000479a21: add ecx, ebp; shl ecx, 0xff; jmp qword ptr [rsi+0xf]; 
0x00000000433e7f: add ecx, ebx; notrack jmp r9; 
0x00000000432816: add ecx, ebx; notrack jmp rcx; 
0x0000000047bbe3: add ecx, edi; notrack jmp rcx; 
0x00000000402b04: add ecx, esi; notrack jmp rcx; 
0x00000000453bfd: add edi, 0x10; lea r11, [rip+0x4de39]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000004535cd: add edi, 0x10; lea r11, [rip+0x4e3e9]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000485f49: add edi, 0x1c; mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x00000000453c32: add edi, 0x20; lea r11, [rip+0x4de04]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000453602: add edi, 0x20; lea r11, [rip+0x4e3b4]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000047e1b6: add edi, 0x308; mov esi, 0x80; syscall; 
0x00000000453aff: add edi, 0x30; lea r11, [rip+0x4df37]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000004534cf: add edi, 0x30; lea r11, [rip+0x4e4e7]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000041bedc: add edi, 0x4; add [rax], al; lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax+0x90]; 
0x000000004292d2: add edi, [rax+0x1]; pop rbx; pop rbp; pop r12; ret; 
0x00000000471f04: add edi, eax; test [rdi+rdi*8-0x1], esp; jmp qword ptr [rsi]; 
0x0000000049b970: add edi, ebp; call r12; 
0x0000000049bbab: add edi, edi; sti; call qword ptr [rax+0x30658b4c]; 
0x00000000433e7c: add edi, edx; add r9, r11; notrack jmp r9; 
0x00000000460e37: add edi, edx; jmp qword ptr [rsi+0x48]; 
0x0000000043d92c: add edi, edx; lea r11, [rip+0x63b8b]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c087: add edi, edx; lea r11, [rip+0x65430]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043bf20: add edi, edx; lea r11, [rip+0x65597]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043ae18: add edi, edx; lea r11, [rip+0x6619f]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004391fa: add edi, edx; lea r11, [rip+0x679bd]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439587: add edi, edx; lea r11, [rip+0x67a30]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439409: add edi, edx; lea r11, [rip+0x67bae]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000436a4b: add edi, edx; lea r11, [rip+0x6a16c]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000436986: add edi, edx; lea r11, [rip+0x6a231]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043406b: add edi, edx; lea r11, [rip+0x6c98c]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000433fa6: add edi, edx; lea r11, [rip+0x6ca51]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000433261: add edi, edx; lea r11, [rip+0x6d656]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x000000004331e7: add edi, edx; lea r11, [rip+0x6d6d0]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000433158: add edi, edx; lea r11, [rip+0x6d75f]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000432f4d: add edi, edx; lea r11, [rip+0x6d96a]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000432e1b: add edi, edx; lea r11, [rip+0x6da9c]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000432d55: add edi, edx; lea r11, [rip+0x6db62]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000432cd7: add edi, edx; lea r11, [rip+0x6dbe0]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000432c42: add edi, edx; lea r11, [rip+0x6dc75]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000432a45: add edi, edx; lea r11, [rip+0x6de72]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000432913: add edi, edx; lea r11, [rip+0x6dfa4]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000432808: add edi, edx; lea r11, [rip+0x6e0af]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000046e249: add edi, esi; mov rdx, rbp; mov rsi, r15; mov rdi, r12; call rbx; 
0x0000000040fac8: add edi, esp; call rax; 
0x00000000420872: add edx, 0x60; mov rax, [rdi]; mov [rdx], rax; ret; 
0x0000000048e572: add edx, eax; mov rax, rdx; pop rbx; ret; 
0x000000004823a2: add edx, ebp; notrack jmp rdx; 
0x0000000040f1b1: add edx, ebx; notrack jmp r10; 
0x0000000047bc47: add edx, ecx; notrack jmp rdx; 
0x00000000411868: add edx, edi; call qword ptr [rax+r9*8]; 
0x00000000460ffb: add edx, edi; jmp qword ptr [rsi+0x48]; 
0x0000000046310b: add edx, edi; jmp qword ptr [rsi-0x70]; 
0x0000000040eeae: add edx, esi; notrack jmp rdx; 
0x00000000402922: add esi, [rax]; add [rax], al; mov eax, 0x9e; syscall; 
0x000000004996ed: add esi, [rbp+0x20]; add rsp, 0x8; ret; 
0x000000004030fe: add esi, [rbp+rdx+0x48]; lea ebx, [rax-0x1]; nop [rax]; call qword ptr [rbp+rbx*8]; 
0x0000000043bdd3: add esi, ebx; movq [rdi], mm1; ret; 
0x000000004567ae: add esi, ebx; movsb [rdi], [rsi]; ret; 
0x000000004251e1: add esi, ebx; stosq [rdi]; pop rbp; ret; 
0x00000000433e79: add esi, edx; add rdi, rdx; add r9, r11; notrack jmp r9; 
0x0000000043d6c4: add esi, edx; lea r11, [rip+0x63df3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043d544: add esi, edx; lea r11, [rip+0x63f73]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043d3c4: add esi, edx; lea r11, [rip+0x640f3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043d245: add esi, edx; lea r11, [rip+0x64272]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043d0c4: add esi, edx; lea r11, [rip+0x643f3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043cf44: add esi, edx; lea r11, [rip+0x64573]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043cdc4: add esi, edx; lea r11, [rip+0x646f3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043cc44: add esi, edx; lea r11, [rip+0x64873]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043cac4: add esi, edx; lea r11, [rip+0x649f3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c944: add esi, edx; lea r11, [rip+0x64b73]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c7c4: add esi, edx; lea r11, [rip+0x64cf3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c644: add esi, edx; lea r11, [rip+0x64e73]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c4c4: add esi, edx; lea r11, [rip+0x64ff3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c344: add esi, edx; lea r11, [rip+0x65173]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c1c4: add esi, edx; lea r11, [rip+0x652f3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043abc4: add esi, edx; lea r11, [rip+0x663f3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043aa44: add esi, edx; lea r11, [rip+0x66573]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043a8c4: add esi, edx; lea r11, [rip+0x666f3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043a745: add esi, edx; lea r11, [rip+0x66872]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043a5c4: add esi, edx; lea r11, [rip+0x669f3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043a444: add esi, edx; lea r11, [rip+0x66b73]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043a2c4: add esi, edx; lea r11, [rip+0x66cf3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043a144: add esi, edx; lea r11, [rip+0x66e73]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439fc4: add esi, edx; lea r11, [rip+0x66ff3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439e44: add esi, edx; lea r11, [rip+0x67173]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439cc4: add esi, edx; lea r11, [rip+0x672f3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439b44: add esi, edx; lea r11, [rip+0x67473]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004399c4: add esi, edx; lea r11, [rip+0x675f3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439844: add esi, edx; lea r11, [rip+0x67773]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004396c4: add esi, edx; lea r11, [rip+0x678f3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000438072: add esi, edx; lea r11, [rip+0x68b45]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437f22: add esi, edx; lea r11, [rip+0x68c95]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437dd2: add esi, edx; lea r11, [rip+0x68de5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437c82: add esi, edx; lea r11, [rip+0x68f35]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437b32: add esi, edx; lea r11, [rip+0x69085]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004379e2: add esi, edx; lea r11, [rip+0x691d5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437892: add esi, edx; lea r11, [rip+0x69325]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004375f2: add esi, edx; lea r11, [rip+0x695c5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004374a2: add esi, edx; lea r11, [rip+0x69715]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437352: add esi, edx; lea r11, [rip+0x69865]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437202: add esi, edx; lea r11, [rip+0x699b5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004370b2: add esi, edx; lea r11, [rip+0x69b05]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000436f62: add esi, edx; lea r11, [rip+0x69c55]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000436e12: add esi, edx; lea r11, [rip+0x69da5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000436b4a: add esi, edx; lea r11, [rip+0x6a06d]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000435692: add esi, edx; lea r11, [rip+0x6b365]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000435542: add esi, edx; lea r11, [rip+0x6b4b5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004353f2: add esi, edx; lea r11, [rip+0x6b605]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004352a2: add esi, edx; lea r11, [rip+0x6b755]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000435152: add esi, edx; lea r11, [rip+0x6b8a5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000435002: add esi, edx; lea r11, [rip+0x6b9f5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434eb2: add esi, edx; lea r11, [rip+0x6bb45]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434c12: add esi, edx; lea r11, [rip+0x6bde5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434ac2: add esi, edx; lea r11, [rip+0x6bf35]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434972: add esi, edx; lea r11, [rip+0x6c085]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434822: add esi, edx; lea r11, [rip+0x6c1d5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004346d2: add esi, edx; lea r11, [rip+0x6c325]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434582: add esi, edx; lea r11, [rip+0x6c475]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434432: add esi, edx; lea r11, [rip+0x6c5c5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043416a: add esi, edx; lea r11, [rip+0x6c88d]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000045632d: add esp, 0x100; sub rax, rdx; ret; 
0x0000000041072a: add esp, 0x10; mov eax, r8d; pop rbx; ret; 
0x00000000425d20: add esp, 0x10; mov rax, r8; pop rbp; ret; 
0x00000000425b29: add esp, 0x10; mov rax, r8; pop rbx; ret; 
0x0000000046b8e8: add esp, 0x10; pop rbp; pop r12; pop r13; ret; 
0x00000000422931: add esp, 0x10; pop rbp; ret; 
0x0000000041ed25: add esp, 0x10; pop rbx; jmp rax; 
0x00000000419896: add esp, 0x10; pop rbx; pop rbp; pop r12; ret; 
0x000000004905f1: add esp, 0x10; pop rbx; ret; 
0x0000000048d58f: add esp, 0x110; mov eax, r12d; pop r12; ret; 
0x0000000040f7f2: add esp, 0x118; ret; 
0x0000000046dec6: add esp, 0x148; ret; 
0x0000000048b859: add esp, 0x18; bnd jmp r11; 
0x00000000426ede: add esp, 0x18; jmp rax; 
0x000000004105ea: add esp, 0x18; mov eax, r8d; pop rbx; pop rbp; ret; 
0x00000000499ac0: add esp, 0x18; pop rbx; pop rbp; mov eax, r8d; ret; 
0x0000000041a277: add esp, 0x18; pop rbx; pop rbp; ret; 
0x00000000426ed1: add esp, 0x18; ret; 
0x0000000045fed0: add esp, 0x1d0; pop rbx; pop rbp; pop r12; ret; 
0x0000000041f441: add esp, 0x20; pop rbx; jmp rax; 
0x0000000046b20d: add esp, 0x20; pop rbx; pop rbp; pop r12; ret; 
0x000000004586b6: add esp, 0x20; pop rbx; ret; 
0x0000000041f8c3: add esp, 0x20; xor edx, edx; pop rbx; jmp rax; 
0x00000000498d2c: add esp, 0x278; mov rax, rbp; pop rbx; pop rbp; ret; 
0x00000000498d41: add esp, 0x278; xor eax, eax; pop rbx; pop rbp; ret; 
0x0000000041809a: add esp, 0x28; mov eax, r8d; pop rbx; pop rbp; ret; 
0x00000000459c3e: add esp, 0x28; ret; 
0x0000000048b040: add esp, 0x30; bnd jmp r11; 
0x0000000048b152: add esp, 0x30; bnd ret; 
0x00000000493fad: add esp, 0x30; mov rax, r12; pop r12; ret; 
0x0000000041e71a: add esp, 0x30; pop rbx; pop rbp; pop r12; ret; 
0x000000004965fa: add esp, 0x30; pop rbx; pop rbp; pop r14; ret; 
0x0000000041ac24: add esp, 0x38; pop rbx; pop rbp; ret; 
0x0000000046fee8: add esp, 0x38; ret; 
0x0000000048ca70: add esp, 0x48; jmp qword ptr [rax]; 
0x0000000048c9ee: add esp, 0x58; jmp qword ptr [rax]; 
0x0000000045a8f5: add esp, 0x58; ret; 
0x00000000459d9c: add esp, 0x68; pop rbp; pop r12; ret; 
0x0000000045a7ae: add esp, 0x68; ret; 
0x000000004581fa: add esp, 0x70; pop rbx; pop rbp; pop r12; ret; 
0x00000000496193: add esp, 0x78; pop rbp; pop r12; ret; 
0x0000000045d2fd: add esp, 0x88; pop rbx; pop rbp; ret; 
0x00000000402225: add esp, 0x88; pop rbx; ret; 
0x0000000047c6b7: add esp, 0x8; mov eax, 0x1; pop rbx; pop rbp; ret; 
0x0000000041a605: add esp, 0x8; mov eax, 0xffffffff; pop rbx; pop rbp; ret; 
0x0000000041a61b: add esp, 0x8; mov eax, ebx; pop rbx; pop rbp; ret; 
0x0000000048abd2: add esp, 0x8; mov eax, r12d; pop rbp; pop r12; ret; 
0x0000000046ff71: add esp, 0x8; mov eax, r12d; pop rbx; pop r12; ret; 
0x000000004187a4: add esp, 0x8; mov eax, r8d; pop rbx; pop rbp; ret; 
0x0000000045aace: add esp, 0x8; mov rax, r12; pop rbx; pop r12; ret; 
0x0000000041ee08: add esp, 0x8; mov rdi, rbp; pop rbx; pop rbp; jmp rax; 
0x00000000493eed: add esp, 0x8; movzx eax, al; neg eax; ret; 
0x0000000045b969: add esp, 0x8; pop rbp; pop r12; ret; 
0x0000000046c654: add esp, 0x8; pop rbx; pop r14; ret; 
0x00000000403547: add esp, 0x8; pop rbx; pop rbp; ret; 
0x00000000401017: add esp, 0x8; ret; 
0x000000004895e1: add esp, 0x8; xor eax, eax; pop rbx; pop rbp; ret; 
0x00000000495ec0: add esp, 0x98; pop rbp; pop r12; ret; 
0x00000000402c53: add esp, 0x98; ret; 
0x0000000047c44a: add esp, 0xa0; pop rbx; pop rbp; pop r12; ret; 
0x000000004803f6: add esp, 0xa8; pop rbp; pop r12; ret; 
0x0000000046b0df: add esp, 0xb8; mov eax, r8d; pop rbp; pop r12; ret; 
0x00000000410f9d: add esp, 0xd8; ret; 
0x0000000041823f: add esp, 0xe8; mov eax, r8d; pop rbx; pop rbp; ret; 
0x00000000436bb9: add esp, [rax+0x63490006]; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004855d9: add esp, eax; call qword ptr [r12+0x60]; 
0x0000000046e569: add esp, ebp; mov rdx, r15; mov rsi, r12; mov rdi, r14; call rbp; 
0x0000000045d3ab: add fs:[rax], al; add [rbp-0x3dbbf040], al; ret; 
0x000000004104dc: add qword ptr [rip+0xbc634], 0x1; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000040f1b0: add r10, r11; notrack jmp r10; 
0x0000000043beb2: add r11d, r14d; movq [rdi], mm1; ret; 
0x000000004545b2: add r11d, r8d; nop [rax+rax]; lea rax, [rdi+0x2]; ret; 
0x0000000046e568: add r12, r13; mov rdx, r15; mov rsi, r12; mov rdi, r14; call rbp; 
0x000000004855d8: add r12, rax; call qword ptr [r12+0x60]; 
0x0000000043be42: add r14b, r11b; movq [rdi], mm1; ret; 
0x0000000043bdd2: add r14d, r11d; movq [rdi], mm1; ret; 
0x0000000040fac7: add r15, r12; call rax; 
0x0000000046e248: add r15, r14; mov rdx, rbp; mov rsi, r15; mov rdi, r12; call rbx; 
0x0000000046cebd: add r8, rdx; notrack jmp r8; 
0x000000004542b7: add r8b, [r8]; lea rax, [rdi+0x2]; vzeroupper; ret; 
0x0000000042a416: add r8b, [r8]; lea rax, [rip+0x24ac0]; cmove rax, rdx; ret; 
0x00000000450097: add r8b, [r8]; vzeroupper; ret; 
0x00000000489afe: add r8b, [rax]; add [rbx-0x28f7b], cl; jmp qword ptr [rsi+0xf]; 
0x000000004545c2: add r8b, r11b; nop [rax+rax]; lea rax, [rdi+0x3]; ret; 
0x00000000473077: add r8d, eax; mov eax, r8d; ret; 
0x000000004545d2: add r8d, r11d; nop [rax+rax]; lea rax, [rdi+0x4]; ret; 
0x00000000433e7e: add r9, r11; notrack jmp r9; 
0x00000000467ad3: add r9b, [r8+0x39]; ret; 
0x0000000048bcff: add r9b, [r8-0x7d]; ret; 
0x0000000048bef5: add r9d, [r8-0x7d]; ret; 
0x0000000047fa90: add rax, 0x1; ret; 
0x0000000046dbe9: add rax, 0x200; mov fs:[rdx], rax; ret; 
0x0000000044f9f4: add rax, 0x20; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x00000000431df9: add rax, 0x20; add rax, rdi; vzeroupper; ret; 
0x0000000047fa87: add rax, 0x2; ret; 
0x0000000047faa0: add rax, 0x3; ret; 
0x0000000044fa14: add rax, 0x40; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x00000000431e19: add rax, 0x40; add rax, rdi; vzeroupper; ret; 
0x0000000044fa60: add rax, 0x60; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x00000000431e39: add rax, 0x60; add rax, rdi; vzeroupper; ret; 
0x0000000046db4c: add rax, [0x0]; ret; 
0x00000000487b3f: add rax, [r11]; test r9d, r9d; jne short 0x0000000000487b57; mov [rbp-0xd8], r11; call rax; 
0x00000000486d2d: add rax, [r13]; call rax; 
0x0000000048716e: add rax, [r15]; test ecx, ecx; jne short 0x0000000000487177; call rax; 
0x00000000487a0b: add rax, [r15]; test edx, edx; jne short 0x0000000000487a14; call rax; 
0x000000004872fb: add rax, [r15]; test r11d, r11d; jne short 0x0000000000487305; call rax; 
0x00000000495422: add rax, [rbx]; mov rsi, r12; mov edi, ebp; call rax; 
0x00000000491ba0: add rax, [rdx+0x8]; pop rbp; pop r12; jmp rax; 
0x0000000046db4b: add rax, fs:[0x0]; ret; 
0x0000000041d8a9: add rax, r10; notrack jmp rax; 
0x0000000041d8db: add rax, r11; notrack jmp rax; 
0x00000000497d71: add rax, r12; notrack jmp rax; 
0x00000000497bbc: add rax, r13; notrack jmp rax; 
0x000000004118d3: add rax, r14; notrack jmp rax; 
0x00000000497d34: add rax, r9; notrack jmp rax; 
0x0000000045f1d4: add rax, rbp; notrack jmp rax; 
0x0000000045f18c: add rax, rbx; notrack jmp rax; 
0x0000000044f397: add rax, rcx; add rax, rdi; vzeroupper; ret; 
0x00000000420958: add rax, rcx; mov [rdi+0x18], rsi; mov [rdi+0x8], rax; xor eax, eax; ret; 
0x0000000042091c: add rax, rcx; mov [rdi+0x8], rax; xor eax, eax; ret; 
0x000000004177f2: add rax, rcx; notrack jmp rax; 
0x00000000431738: add rax, rcx; ret; 
0x000000004563e5: add rax, rcx; sub rax, rdi; ret; 
0x00000000459375: add rax, rcx; sub rax, rdx; shr rax, 0x2; vzeroupper; ret; 
0x0000000044f92c: add rax, rcx; sub rax, rdx; vzeroupper; ret; 
0x00000000431c75: add rax, rcx; vzeroupper; ret; 
0x00000000431735: add rax, rdi; add rax, rcx; ret; 
0x0000000044f929: add rax, rdi; add rax, rcx; sub rax, rdx; vzeroupper; ret; 
0x00000000431c72: add rax, rdi; add rax, rcx; vzeroupper; ret; 
0x0000000047bb46: add rax, rdi; notrack jmp rax; 
0x00000000431963: add rax, rdi; ret; 
0x000000004594f9: add rax, rdi; sub rax, rdx; shr rax, 0x2; vzeroupper; ret; 
0x0000000044f9e4: add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x00000000431de8: add rax, rdi; vzeroupper; ret; 
0x00000000401bf5: add rax, rdx; notrack jmp rax; 
0x0000000044f6a5: add rax, rdx; sub rax, rdi; ret; 
0x0000000045924a: add rax, rdx; sub rax, rdi; shr rax, 0x2; ret; 
0x000000004176ee: add rax, rsi; notrack jmp rax; 
0x000000004955b8: add rbx, 0x8; mov rdx, r13; mov rsi, r12; mov edi, ebp; call qword ptr [rax]; 
0x000000004578d1: add rcx, 0x100; cmp rdx, rcx; jne short 0x00000000004578b6; vzeroupper; ret; 
0x000000004575aa: add rcx, 0x40; cmp rdx, rcx; jne short 0x0000000000457597; rep ret; 
0x0000000045770e: add rcx, 0x80; cmp rdx, rcx; jne short 0x00000000004576fb; vzeroupper; ret; 
0x00000000432815: add rcx, r11; notrack jmp rcx; 
0x0000000047bbe2: add rcx, rdi; notrack jmp rcx; 
0x00000000402b03: add rcx, rsi; notrack jmp rcx; 
0x00000000453bfc: add rdi, 0x10; lea r11, [rip+0x4de39]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000004535cc: add rdi, 0x10; lea r11, [rip+0x4e3e9]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000485f48: add rdi, 0x1c; mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x00000000453c31: add rdi, 0x20; lea r11, [rip+0x4de04]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000453601: add rdi, 0x20; lea r11, [rip+0x4e3b4]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000047e1b5: add rdi, 0x308; mov esi, 0x80; syscall; 
0x00000000453afe: add rdi, 0x30; lea r11, [rip+0x4df37]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000004534ce: add rdi, 0x30; lea r11, [rip+0x4e4e7]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000049b96f: add rdi, rbp; call r12; 
0x00000000433e7b: add rdi, rdx; add r9, r11; notrack jmp r9; 
0x0000000043d92b: add rdi, rdx; lea r11, [rip+0x63b8b]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c086: add rdi, rdx; lea r11, [rip+0x65430]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043bf1f: add rdi, rdx; lea r11, [rip+0x65597]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043ae17: add rdi, rdx; lea r11, [rip+0x6619f]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004391f9: add rdi, rdx; lea r11, [rip+0x679bd]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439586: add rdi, rdx; lea r11, [rip+0x67a30]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439408: add rdi, rdx; lea r11, [rip+0x67bae]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000436a4a: add rdi, rdx; lea r11, [rip+0x6a16c]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000436985: add rdi, rdx; lea r11, [rip+0x6a231]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043406a: add rdi, rdx; lea r11, [rip+0x6c98c]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000433fa5: add rdi, rdx; lea r11, [rip+0x6ca51]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000433260: add rdi, rdx; lea r11, [rip+0x6d656]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x000000004331e6: add rdi, rdx; lea r11, [rip+0x6d6d0]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000433157: add rdi, rdx; lea r11, [rip+0x6d75f]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000432f4c: add rdi, rdx; lea r11, [rip+0x6d96a]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000432e1a: add rdi, rdx; lea r11, [rip+0x6da9c]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000432d54: add rdi, rdx; lea r11, [rip+0x6db62]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000432cd6: add rdi, rdx; lea r11, [rip+0x6dbe0]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000432c41: add rdi, rdx; lea r11, [rip+0x6dc75]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000432a44: add rdi, rdx; lea r11, [rip+0x6de72]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000432912: add rdi, rdx; lea r11, [rip+0x6dfa4]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000432807: add rdi, rdx; lea r11, [rip+0x6e0af]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000420871: add rdx, 0x60; mov rax, [rdi]; mov [rdx], rax; ret; 
0x000000004823a1: add rdx, r13; notrack jmp rdx; 
0x00000000411867: add rdx, r15; call qword ptr [rax+r9*8]; 
0x0000000048e571: add rdx, r8; mov rax, rdx; pop rbx; ret; 
0x0000000047bc46: add rdx, rcx; notrack jmp rdx; 
0x0000000040eead: add rdx, rsi; notrack jmp rdx; 
0x00000000433e78: add rsi, rdx; add rdi, rdx; add r9, r11; notrack jmp r9; 
0x0000000043d6c3: add rsi, rdx; lea r11, [rip+0x63df3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043d543: add rsi, rdx; lea r11, [rip+0x63f73]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043d3c3: add rsi, rdx; lea r11, [rip+0x640f3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043d244: add rsi, rdx; lea r11, [rip+0x64272]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043d0c3: add rsi, rdx; lea r11, [rip+0x643f3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043cf43: add rsi, rdx; lea r11, [rip+0x64573]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043cdc3: add rsi, rdx; lea r11, [rip+0x646f3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043cc43: add rsi, rdx; lea r11, [rip+0x64873]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043cac3: add rsi, rdx; lea r11, [rip+0x649f3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c943: add rsi, rdx; lea r11, [rip+0x64b73]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c7c3: add rsi, rdx; lea r11, [rip+0x64cf3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c643: add rsi, rdx; lea r11, [rip+0x64e73]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c4c3: add rsi, rdx; lea r11, [rip+0x64ff3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c343: add rsi, rdx; lea r11, [rip+0x65173]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c1c3: add rsi, rdx; lea r11, [rip+0x652f3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043abc3: add rsi, rdx; lea r11, [rip+0x663f3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043aa43: add rsi, rdx; lea r11, [rip+0x66573]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043a8c3: add rsi, rdx; lea r11, [rip+0x666f3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043a744: add rsi, rdx; lea r11, [rip+0x66872]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043a5c3: add rsi, rdx; lea r11, [rip+0x669f3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043a443: add rsi, rdx; lea r11, [rip+0x66b73]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043a2c3: add rsi, rdx; lea r11, [rip+0x66cf3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043a143: add rsi, rdx; lea r11, [rip+0x66e73]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439fc3: add rsi, rdx; lea r11, [rip+0x66ff3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439e43: add rsi, rdx; lea r11, [rip+0x67173]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439cc3: add rsi, rdx; lea r11, [rip+0x672f3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439b43: add rsi, rdx; lea r11, [rip+0x67473]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004399c3: add rsi, rdx; lea r11, [rip+0x675f3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439843: add rsi, rdx; lea r11, [rip+0x67773]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004396c3: add rsi, rdx; lea r11, [rip+0x678f3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000438071: add rsi, rdx; lea r11, [rip+0x68b45]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437f21: add rsi, rdx; lea r11, [rip+0x68c95]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437dd1: add rsi, rdx; lea r11, [rip+0x68de5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437c81: add rsi, rdx; lea r11, [rip+0x68f35]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437b31: add rsi, rdx; lea r11, [rip+0x69085]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004379e1: add rsi, rdx; lea r11, [rip+0x691d5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437891: add rsi, rdx; lea r11, [rip+0x69325]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004375f1: add rsi, rdx; lea r11, [rip+0x695c5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004374a1: add rsi, rdx; lea r11, [rip+0x69715]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437351: add rsi, rdx; lea r11, [rip+0x69865]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437201: add rsi, rdx; lea r11, [rip+0x699b5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004370b1: add rsi, rdx; lea r11, [rip+0x69b05]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000436f61: add rsi, rdx; lea r11, [rip+0x69c55]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000436e11: add rsi, rdx; lea r11, [rip+0x69da5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000436b49: add rsi, rdx; lea r11, [rip+0x6a06d]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000435691: add rsi, rdx; lea r11, [rip+0x6b365]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000435541: add rsi, rdx; lea r11, [rip+0x6b4b5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004353f1: add rsi, rdx; lea r11, [rip+0x6b605]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004352a1: add rsi, rdx; lea r11, [rip+0x6b755]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000435151: add rsi, rdx; lea r11, [rip+0x6b8a5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000435001: add rsi, rdx; lea r11, [rip+0x6b9f5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434eb1: add rsi, rdx; lea r11, [rip+0x6bb45]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434c11: add rsi, rdx; lea r11, [rip+0x6bde5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434ac1: add rsi, rdx; lea r11, [rip+0x6bf35]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434971: add rsi, rdx; lea r11, [rip+0x6c085]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434821: add rsi, rdx; lea r11, [rip+0x6c1d5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004346d1: add rsi, rdx; lea r11, [rip+0x6c325]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434581: add rsi, rdx; lea r11, [rip+0x6c475]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434431: add rsi, rdx; lea r11, [rip+0x6c5c5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434169: add rsi, rdx; lea r11, [rip+0x6c88d]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000045632c: add rsp, 0x100; sub rax, rdx; ret; 
0x00000000410729: add rsp, 0x10; mov eax, r8d; pop rbx; ret; 
0x00000000425d1f: add rsp, 0x10; mov rax, r8; pop rbp; ret; 
0x00000000425b28: add rsp, 0x10; mov rax, r8; pop rbx; ret; 
0x0000000046b8e7: add rsp, 0x10; pop rbp; pop r12; pop r13; ret; 
0x00000000422930: add rsp, 0x10; pop rbp; ret; 
0x0000000041ed24: add rsp, 0x10; pop rbx; jmp rax; 
0x00000000419895: add rsp, 0x10; pop rbx; pop rbp; pop r12; ret; 
0x000000004905f0: add rsp, 0x10; pop rbx; ret; 
0x0000000048d58e: add rsp, 0x110; mov eax, r12d; pop r12; ret; 
0x0000000040f7f1: add rsp, 0x118; ret; 
0x0000000046dec5: add rsp, 0x148; ret; 
0x0000000048b858: add rsp, 0x18; bnd jmp r11; 
0x00000000426edd: add rsp, 0x18; jmp rax; 
0x000000004105e9: add rsp, 0x18; mov eax, r8d; pop rbx; pop rbp; ret; 
0x00000000499abf: add rsp, 0x18; pop rbx; pop rbp; mov eax, r8d; ret; 
0x0000000041a276: add rsp, 0x18; pop rbx; pop rbp; ret; 
0x00000000426ed0: add rsp, 0x18; ret; 
0x0000000045fecf: add rsp, 0x1d0; pop rbx; pop rbp; pop r12; ret; 
0x0000000041f43e: add rsp, 0x20; pop rbx; jmp rax; 
0x0000000046b20c: add rsp, 0x20; pop rbx; pop rbp; pop r12; ret; 
0x000000004586b5: add rsp, 0x20; pop rbx; ret; 
0x0000000041f8c0: add rsp, 0x20; xor edx, edx; pop rbx; jmp rax; 
0x00000000498d2b: add rsp, 0x278; mov rax, rbp; pop rbx; pop rbp; ret; 
0x00000000498d40: add rsp, 0x278; xor eax, eax; pop rbx; pop rbp; ret; 
0x00000000418099: add rsp, 0x28; mov eax, r8d; pop rbx; pop rbp; ret; 
0x00000000459c3d: add rsp, 0x28; ret; 
0x0000000048b03f: add rsp, 0x30; bnd jmp r11; 
0x0000000048b151: add rsp, 0x30; bnd ret; 
0x00000000493fac: add rsp, 0x30; mov rax, r12; pop r12; ret; 
0x0000000041e719: add rsp, 0x30; pop rbx; pop rbp; pop r12; ret; 
0x000000004965f9: add rsp, 0x30; pop rbx; pop rbp; pop r14; ret; 
0x0000000041ac23: add rsp, 0x38; pop rbx; pop rbp; ret; 
0x0000000046fee7: add rsp, 0x38; ret; 
0x0000000048ca6e: add rsp, 0x48; jmp qword ptr [rax]; 
0x0000000048c9ec: add rsp, 0x58; jmp qword ptr [rax]; 
0x0000000045a8f3: add rsp, 0x58; ret; 
0x00000000459d9b: add rsp, 0x68; pop rbp; pop r12; ret; 
0x0000000045a7ac: add rsp, 0x68; ret; 
0x000000004581f8: add rsp, 0x70; pop rbx; pop rbp; pop r12; ret; 
0x00000000496192: add rsp, 0x78; pop rbp; pop r12; ret; 
0x0000000045d2fc: add rsp, 0x88; pop rbx; pop rbp; ret; 
0x00000000402224: add rsp, 0x88; pop rbx; ret; 
0x0000000047c6b6: add rsp, 0x8; mov eax, 0x1; pop rbx; pop rbp; ret; 
0x0000000041a604: add rsp, 0x8; mov eax, 0xffffffff; pop rbx; pop rbp; ret; 
0x0000000041a61a: add rsp, 0x8; mov eax, ebx; pop rbx; pop rbp; ret; 
0x0000000048abd1: add rsp, 0x8; mov eax, r12d; pop rbp; pop r12; ret; 
0x0000000046ff70: add rsp, 0x8; mov eax, r12d; pop rbx; pop r12; ret; 
0x000000004187a3: add rsp, 0x8; mov eax, r8d; pop rbx; pop rbp; ret; 
0x0000000045aacd: add rsp, 0x8; mov rax, r12; pop rbx; pop r12; ret; 
0x0000000041ee07: add rsp, 0x8; mov rdi, rbp; pop rbx; pop rbp; jmp rax; 
0x00000000493eec: add rsp, 0x8; movzx eax, al; neg eax; ret; 
0x0000000045b968: add rsp, 0x8; pop rbp; pop r12; ret; 
0x0000000046c653: add rsp, 0x8; pop rbx; pop r14; ret; 
0x00000000403546: add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000401016: add rsp, 0x8; ret; 
0x000000004895e0: add rsp, 0x8; xor eax, eax; pop rbx; pop rbp; ret; 
0x00000000495ebf: add rsp, 0x98; pop rbp; pop r12; ret; 
0x00000000402c52: add rsp, 0x98; ret; 
0x0000000047c449: add rsp, 0xa0; pop rbx; pop rbp; pop r12; ret; 
0x000000004803f5: add rsp, 0xa8; pop rbp; pop r12; ret; 
0x0000000046b0de: add rsp, 0xb8; mov eax, r8d; pop rbp; pop r12; ret; 
0x00000000410f9c: add rsp, 0xd8; ret; 
0x0000000041823e: add rsp, 0xe8; mov eax, r8d; pop rbx; pop rbp; ret; 
0x00000000490305: add word ptr [rdx+rax*2], 0x1; ret; 
0x00000000434411: addr32 loopne 0x0000000000434423; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000434561: addr32 loopne 0x0000000000434573; sub [rdi-0x10], ebp; notrack jmp r9; 
0x000000004346b1: addr32 loopne 0x00000000004346c3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000434801: addr32 loopne 0x0000000000434813; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000434951: addr32 loopne 0x0000000000434963; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000434aa1: addr32 loopne 0x0000000000434ab3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000434bf1: addr32 loopne 0x0000000000434c03; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000434d3f: addr32 loopne 0x0000000000434d51; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000434e91: addr32 loopne 0x0000000000434ea3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000434fe1: addr32 loopne 0x0000000000434ff3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000435131: addr32 loopne 0x0000000000435143; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000435281: addr32 loopne 0x0000000000435293; sub [rdi-0x10], ebp; notrack jmp r9; 
0x000000004353d1: addr32 loopne 0x00000000004353e3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000435521: addr32 loopne 0x0000000000435533; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000435671: addr32 loopne 0x0000000000435683; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000436df1: addr32 loopne 0x0000000000436e03; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000436f41: addr32 loopne 0x0000000000436f53; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000437091: addr32 loopne 0x00000000004370a3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x000000004371e1: addr32 loopne 0x00000000004371f3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000437331: addr32 loopne 0x0000000000437343; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000437481: addr32 loopne 0x0000000000437493; sub [rdi-0x10], ebp; notrack jmp r9; 
0x000000004375d1: addr32 loopne 0x00000000004375e3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x0000000043771f: addr32 loopne 0x0000000000437731; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000437871: addr32 loopne 0x0000000000437883; sub [rdi-0x10], ebp; notrack jmp r9; 
0x000000004379c1: addr32 loopne 0x00000000004379d3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000437b11: addr32 loopne 0x0000000000437b23; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000437c61: addr32 loopne 0x0000000000437c73; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000437db1: addr32 loopne 0x0000000000437dc3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000437f01: addr32 loopne 0x0000000000437f13; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000438051: addr32 loopne 0x0000000000438063; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000419ec9: and [r11+rcx*4+0x6d], r9b; sbb [rax-0x77], cl; ret far; 
0x0000000041fbe9: and [r15], cl; adc [rcx+0x30], eax; movups [rcx+0x40], xmm0; mov qword ptr [rdi+0xa8], 0x0; ret; 
0x00000000419ef7: and [r8+0x1], r9b; ret; 
0x0000000046d387: and [r8-0x77], r9b; std; test rax, rax; je short 0x000000000046d393; call rax; 
0x0000000041ec66: and [r9], sil; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x5d], bl; ret; 
0x0000000044f9f7: and [rax+0x1], cl; clc; sub rax, rdx; vzeroupper; ret; 
0x00000000431dfc: and [rax+0x1], cl; clc; vzeroupper; ret; 
0x00000000419ef8: and [rax+0x1], cl; ret; 
0x0000000040f8be: and [rax+0x24048b48], dl; mov rdx, r14; mov rsi, r13; mov rdi, r12; call rax; 
0x00000000463636: and [rax+0x39], cl; enter 0x830f, 0x24; add al, 0x0; add [rax-0x77], cl; ret far; 
0x00000000496839: and [rax+rdx-0xd], dh; movups xmm0, [rip+0x23774]; divss xmm0, [rip+0x23770]; ret; 
0x0000000041bc32: and [rax-0x1], bh; pop rbx; ret; 
0x00000000414e82: and [rax-0x68], cl; movzx eax, byte ptr [rbx+rax]; jmp qword ptr [rsi+rax*8]; 
0x000000004145e1: and [rax-0x68], cl; movzx eax, byte ptr [rbx+rax]; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000041212e: and [rax-0x68], cl; movzx eax, byte ptr [rdi+rax]; jmp qword ptr [rsi+rax*8]; 
0x00000000415477: and [rax-0x68], cl; movzx ecx, byte ptr [rbx+rax]; lea rax, [rip+0xb0d9b]; mov rax, [rax+rcx*8]; jmp rax; 
0x000000004149c7: and [rax-0x68], cl; movzx ecx, byte ptr [rbx+rax]; lea rax, [rip+0xb1a4b]; mov rax, [rax+rcx*8]; jmp rax; 
0x00000000414c33: and [rax-0x68], cl; movzx edx, byte ptr [rbx+rax]; lea rax, [rip+0xb19df]; jmp qword ptr [rax+rdx*8]; 
0x00000000414a30: and [rax-0x68], cl; movzx edx, byte ptr [rbx+rax]; lea rax, [rip+0xb1ae2]; jmp qword ptr [rax+rdx*8]; 
0x000000004638fb: and [rax-0x75], cl; je short 0x0000000000463924; pop rax; mov rdi, [rsp+0x60]; call r15; 
0x00000000463ee6: and [rax-0x75], cl; je short 0x0000000000463f0f; push rax; mov rdi, [rsp+0x58]; call rbx; 
0x00000000465102: and [rax-0x75], cl; je short 0x000000000046512b; push rax; mov rdi, [rsp+0x48]; call r13; 
0x00000000469766: and [rax-0x75], cl; je short 0x000000000046978f; pop rax; mov rdi, [rsp+0x50]; call rbx; 
0x0000000048b06a: and [rax-0x75], cl; jg short 0x000000000048b097; bnd call r11; 
0x0000000048b4fa: and [rax-0x75], cl; jg short 0x000000000048b527; bnd call r11; 
0x0000000048b756: and [rax-0x75], cl; jg short 0x000000000048b783; bnd call r11; 
0x0000000045b29e: and [rax-0x75], ecx; xor ecx, [rcx-0x77]; fisttp qword ptr [rax-0x77], st; out dx, eax; call r12; 
0x00000000458fa6: and [rax-0x77], cl; out dx, eax; mov rsi, [rsp+0x18]; call rbx; 
0x00000000460c14: and [rax-0x77], cl; ret; 
0x0000000046d388: and [rax-0x77], cl; std; test rax, rax; je short 0x000000000046d393; call rax; 
0x000000004788b9: and [rax], al; add [rax], al; jmp rax; 
0x00000000479b3e: and [rax], al; add [rax], al; mov rax, [rsi+rax*8]; jmp rax; 
0x00000000457abb: and [rax], al; add [rax], al; pop rbx; ret; 
0x00000000446d1e: and [rax], al; add [rbp-0x77], cl; ret far; 
0x0000000044912e: and [rax], eax; add [rbp-0x77], cl; ret far; 
0x000000004969b6: and [rbp+0x27], dh; mov rax, [rsi+0xa8]; add rsp, 0x8; ret; 
0x0000000049ba8b: and [rbp-0x7b], cl; test byte ptr [rdi], 0x84; ret far; 
0x0000000045a788: and [rbx+0x2a7409fe], al; mov eax, 0x48; syscall; 
0x0000000048166f: and [rbx+0x4742a35], cl; add [rbp-0x7d7af00a], al; add [rax], al; add [rax-0x7d], cl; ret; 
0x0000000046b20f: and [rbx+0x5d], bl; pop r12; ret; 
0x0000000047bb3c: and [rbx+0xe7729f8], al; movsxd rax, [rdi+rax*4]; add rax, rdi; notrack jmp rax; 
0x00000000419eca: and [rbx+rcx*4+0x6d], cl; sbb [rax-0x77], cl; ret far; 
0x0000000048d6d4: and [rbx+rcx*4+0x7f], cl; sub [rcx-0x3b76b310], cl; mov rbp, r9; nop; jmp rdx; 
0x0000000047357c: and [rcx+0x9], cl; ret; 
0x00000000485333: and [rcx+rcx*4+0x4], cl; and al, 0xe8; ret; 
0x0000000047691c: and [rcx+rcx*4-0x11], cl; sub rdx, rsi; sar rdx, 0x2; call qword ptr [r12+0x38]; 
0x000000004122d3: and [rcx+rcx*4-0x1], cl; sub rdx, rsi; call qword ptr [rbx+0x38]; 
0x00000000419722: and [rcx-0x3f38b7f9], cl; sar bh, 0xff; jmp qword ptr [rdi+rax*8]; 
0x000000004320ee: and [rcx-0x77], ecx; ret; 
0x00000000429085: and [rcx], dh; imul al; ret; 
0x0000000041ec67: and [rcx], dh; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x5d], bl; ret; 
0x00000000482398: and [rcx], eax; add [rax], al; movsxd rdx, [r13+rdx*4]; add rdx, r13; notrack jmp rdx; 
0x00000000457525: and [rdi+0xb], dh; movdqu [rdi+rdx-0x10], xmm0; movdqu [rdi], xmm0; ret; 
0x0000000041996c: and [rdi-0x38b7ffb4], ch; ret; 
0x0000000041fbea: and [rdi], cl; adc [rcx+0x30], eax; movups [rcx+0x40], xmm0; mov qword ptr [rdi+0xa8], 0x0; ret; 
0x00000000456a05: and [rdi], cl; adc [rdi+0x30], edi; movups [r11], xmm8; ret; 
0x0000000045452d: and [rdi], cl; test [rax+rax+0x40a80000], edi; jne 0x0000000000454600; lea rax, [rdi+0x7]; ret; 
0x00000000427c38: and [rdi], cl; test [rdi+rdi*8-0x1], ch; call qword ptr [rax+0x48ed0148]; 
0x000000004574b5: and [rdi], cl; xchg [rax-0xd000000], eax; movq [rdi+rdx-0x10], mm0; movdqu [rdi], xmm0; ret; 
0x0000000045653c: and [rdx+0xa], dh; vmovdqu [rdi], ymm2; vmovdqu [rsi-0x20], ymm2; ret; 
0x00000000429fc2: and [rdx], ecx; add [rcx], al; je short 0x0000000000429f81; ret; 
0x00000000488775: and [rsi+0xf], ah; insb [rdi], dx; ret; 
0x000000004994dd: and [rsi-0x70], ah; mov rsi, r14; mov rdi, rbx; call r15; 
0x0000000049a473: and [rsi-0x9], ah; ret; 
0x0000000041694d: and al, 0x0; add [rax+0x39], cl; ret; 
0x0000000047d5d6: and al, 0x0; add [rax], al; call qword ptr [rax+0x68]; 
0x0000000047d70b: and al, 0x0; add [rax], al; mov esi, 0xffffffff; call qword ptr [rax+0x18]; 
0x0000000041a17f: and al, 0x0; add [rax], al; mov rax, [rax+0x20]; jmp rax; 
0x00000000446925: and al, 0x0; add [rbp-0x77], cl; ret far; 
0x00000000498bf9: and al, 0x10; add rsp, 0x28; ret; 
0x0000000042414f: and al, 0x10; call rax; 
0x00000000402806: and al, 0x10; mov edi, [rsp+0xc]; call rbp; 
0x00000000459f2f: and al, 0x10; mov r8d, eax; mov edi, [rsp+0x8]; mov eax, 0x1; syscall; 
0x00000000459e8f: and al, 0x10; mov r8d, eax; mov edi, [rsp+0x8]; xor eax, eax; syscall; 
0x00000000402867: and al, 0x10; mov rax, [rsp+0x18]; call rax; 
0x0000000048d5ab: and al, 0x10; mov rdi, [rsp+0x18]; call rax; 
0x0000000048d54e: and al, 0x10; mov rdi, [rsp+0x18]; call rcx; 
0x0000000041f470: and al, 0x10; mov rdi, [rsp+0x8]; add rsp, 0x20; pop rbx; jmp rax; 
0x000000004584ec: and al, 0x10; mov rdi, r12; mov rsi, [rsp+0x18]; call rbx; 
0x0000000041bee4: and al, 0x10; mov rdi, rbp; call qword ptr [rax+0x90]; 
0x0000000046eb10: and al, 0x10; mov rdx, rbp; mov rdi, r12; call rbx; 
0x0000000045bb1a: and al, 0x10; test r13, r13; jne short 0x000000000045bb70; mov rdi, [r12]; call rbx; 
0x0000000045bb4a: and al, 0x10; test r13, r13; jne short 0x000000000045bbd0; mov rdi, [r12]; call rbx; 
0x00000000419a55: and al, 0x10; xor edx, edx; mov rdi, r15; call qword ptr [r14+0x80]; 
0x00000000426edb: and al, 0x18; add rsp, 0x18; jmp rax; 
0x0000000040286b: and al, 0x18; call rax; 
0x0000000041add3: and al, 0x18; call rbp; 
0x000000004584f5: and al, 0x18; call rbx; 
0x0000000048d554: and al, 0x18; call rcx; 
0x0000000042414b: and al, 0x18; mov [rsp+0x10], r8; call rax; 
0x000000004685db: and al, 0x18; mov rcx, [rsp+0x28]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x48]; call r13; 
0x00000000458e23: and al, 0x18; mov rcx, r12; mov rdx, r13; call rbx; 
0x0000000046e20b: and al, 0x18; mov rdx, rbp; mov rsi, r12; call rbx; 
0x0000000046ab2d: and al, 0x18; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; call r15; 
0x00000000465cf3: and al, 0x18; mov rsi, [rsp+0x48]; mov rdi, [rsp+0x40]; call r14; 
0x0000000046317a: and al, 0x18; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; call r14; 
0x00000000464ce1: and al, 0x18; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; call rbx; 
0x00000000467fff: and al, 0x18; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; call rbx; 
0x000000004269c3: and al, 0x18; pop rbx; pop rbp; pop r12; jmp rax; 
0x00000000460778: and al, 0x18; xor r8d, r8d; call rbx; 
0x00000000410f8e: and al, 0x18; xor rcx, fs:[0x28]; jne short 0x0000000000410fa4; add rsp, 0xd8; ret; 
0x0000000041104c: and al, 0x18; xor rcx, fs:[0x28]; jne short 0x0000000000411062; add rsp, 0xd8; ret; 
0x0000000045a8e6: and al, 0x18; xor rcx, fs:[0x28]; jne short 0x000000000045a93b; add rsp, 0x58; ret; 
0x0000000045a984: and al, 0x18; xor rcx, fs:[0x28]; jne short 0x000000000045a9db; add rsp, 0x58; ret; 
0x0000000047568c: and al, 0x18; xor rcx, fs:[0x28]; jne short 0x00000000004756a2; add rsp, 0xd8; ret; 
0x0000000048fe30: and al, 0x18; xor rcx, fs:[0x28]; jne short 0x000000000048fe43; add rsp, 0x28; ret; 
0x00000000459c30: and al, 0x18; xor rdx, fs:[0x28]; jne short 0x0000000000459c51; add rsp, 0x28; ret; 
0x0000000045ab93: and al, 0x18; xor rdx, fs:[0x28]; jne short 0x000000000045aba5; add rsp, 0x28; ret; 
0x0000000041a020: and al, 0x1; add [rax], al; xor edx, edx; mov rdi, r15; call qword ptr [rbx+0x80]; 
0x0000000046e1f6: and al, 0x1; mov r13, rax; mov rdi, r12; call rbx; 
0x00000000464a7b: and al, 0x20; call rax; 
0x00000000458163: and al, 0x20; call rbx; 
0x0000000045a786: and al, 0x20; cmp esi, 0x9; je short 0x000000000045a7b8; mov eax, 0x48; syscall; 
0x00000000458fa4: and al, 0x20; mov rdi, rbp; mov rsi, [rsp+0x18]; call rbx; 
0x00000000465100: and al, 0x20; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x48]; call r13; 
0x00000000463ee4: and al, 0x20; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; call rbx; 
0x00000000463c6e: and al, 0x20; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; mov rax, [rsp+0x30]; call rax; 
0x00000000469764: and al, 0x20; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; call rbx; 
0x000000004638f9: and al, 0x20; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x60]; call r15; 
0x00000000462eda: and al, 0x28; call rax; 
0x0000000047f210: and al, 0x28; call rbx; 
0x00000000428313: and al, 0x28; mov rdi, r12; call rax; 
0x000000004685e0: and al, 0x28; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x48]; call r13; 
0x0000000048b036: and al, 0x28; mov rsp, rbx; mov rbx, [rsp]; add rsp, 0x30; bnd jmp r11; 
0x000000004805cb: and al, 0x28; xor eax, eax; mov rdx, rsp; mov eax, 0x10; syscall; 
0x0000000045a79f: and al, 0x28; xor rcx, fs:[0x28]; jne short 0x000000000045a7f3; add rsp, 0x68; ret; 
0x0000000046fed9: and al, 0x28; xor rcx, fs:[0x28]; jne short 0x000000000046ff05; add rsp, 0x38; ret; 
0x0000000048cc2d: and al, 0x28; xor rcx, fs:[0x28]; jne short 0x000000000048cc63; add rsp, 0x38; ret; 
0x00000000493e99: and al, 0x28; xor rcx, fs:[0x28]; jne short 0x0000000000493eac; add rsp, 0x38; ret; 
0x0000000048ff1f: and al, 0x28; xor rdx, fs:[0x28]; jne short 0x000000000048ff31; add rsp, 0x38; ret; 
0x00000000463c7d: and al, 0x30; call rax; 
0x0000000045839e: and al, 0x30; call rbx; 
0x00000000465cee: and al, 0x30; mov rcx, [rsp+0x18]; mov rsi, [rsp+0x48]; mov rdi, [rsp+0x40]; call r14; 
0x0000000041998c: and al, 0x30; mov rdi, r15; call qword ptr [r14+0x90]; 
0x0000000048ca63: and al, 0x30; mov rdx, [rsp+0x38]; mov rcx, [rsp+0x40]; add rsp, 0x48; jmp qword ptr [rax]; 
0x0000000048c9e1: and al, 0x30; mov rdx, [rsp+0x38]; mov rcx, [rsp+0x40]; add rsp, 0x58; jmp qword ptr [rax]; 
0x00000000467275: and al, 0x30; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; call r15; 
0x00000000466c81: and al, 0x30; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; mov rax, [rsp+0x20]; call rax; 
0x00000000466241: and al, 0x30; mov rsi, [rsp+0x48]; mov rdi, [rsp+0x40]; call rbx; 
0x00000000464a6c: and al, 0x30; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; mov rax, [rsp+0x20]; call rax; 
0x00000000469312: and al, 0x30; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; mov rax, [rsp+0x18]; call rax; 
0x00000000467c15: and al, 0x30; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; mov rax, [rsp+0x20]; call rax; 
0x0000000048b148: and al, 0x30; mov rsp, rbx; mov rbx, [rsp]; add rsp, 0x30; bnd ret; 
0x00000000467280: and al, 0x38; call r15; 
0x0000000046ac9d: and al, 0x38; lea r8, [rsp+0xa0]; call r15; 
0x00000000466c8c: and al, 0x38; mov rax, [rsp+0x20]; call rax; 
0x0000000048ca68: and al, 0x38; mov rcx, [rsp+0x40]; add rsp, 0x48; jmp qword ptr [rax]; 
0x0000000048c9e6: and al, 0x38; mov rcx, [rsp+0x40]; add rsp, 0x58; jmp qword ptr [rax]; 
0x000000004270f3: and al, 0x38; mov rdi, r14; call rax; 
0x0000000048ca6c: and al, 0x40; add rsp, 0x48; jmp qword ptr [rax]; 
0x0000000048c9ea: and al, 0x40; add rsp, 0x58; jmp qword ptr [rax]; 
0x00000000465cfe: and al, 0x40; call r14; 
0x0000000046624c: and al, 0x40; call rbx; 
0x0000000046727b: and al, 0x40; mov rdi, [rsp+0x38]; call r15; 
0x0000000046ac98: and al, 0x40; mov rdi, [rsp+0x38]; lea r8, [rsp+0xa0]; call r15; 
0x00000000466c87: and al, 0x40; mov rdi, [rsp+0x38]; mov rax, [rsp+0x20]; call rax; 
0x0000000047e9d4: and al, 0x41; pop rsp; pop r13; pop r14; ret; 
0x0000000041ed48: and al, 0x48; add esp, 0x10; pop rbx; jmp rax; 
0x0000000048b857: and al, 0x48; add esp, 0x18; bnd jmp r11; 
0x0000000048b03e: and al, 0x48; add esp, 0x30; bnd jmp r11; 
0x0000000048b150: and al, 0x48; add esp, 0x30; bnd ret; 
0x000000004963af: and al, 0x48; add esp, 0x38; ret; 
0x0000000046510b: and al, 0x48; call r13; 
0x0000000046560b: and al, 0x48; call rbx; 
0x0000000041c092: and al, 0x48; mov edi, ebp; call rax; 
0x0000000048fdbb: and al, 0x48; mov edx, [rbx+0x10]; mov [rdx], rax; pop rbx; ret; 
0x0000000048b850: and al, 0x48; mov esp, ebx; mov rbx, [rsp]; add rsp, 0x18; bnd jmp r11; 
0x0000000046ab28: and al, 0x48; mov rcx, [rsp+0x18]; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; call r15; 
0x00000000465cf9: and al, 0x48; mov rdi, [rsp+0x40]; call r14; 
0x00000000466247: and al, 0x48; mov rdi, [rsp+0x40]; call rbx; 
0x0000000048ccf9: and al, 0x48; xor rcx, fs:[0x28]; jne short 0x000000000048cd34; add rsp, 0x58; ret; 
0x0000000048d189: and al, 0x48; xor rcx, fs:[0x28]; jne short 0x000000000048d1c4; add rsp, 0x58; ret; 
0x000000004963a8: and al, 0x4; add [rax], al; mov rax, [rsp]; add rsp, 0x38; ret; 
0x0000000048a2af: and al, 0x4; add [rbp+0xc], dh; lea rax, [r8+0x1]; mov [rip+0x42411], rax; ret; 
0x0000000049a929: and al, 0x4c; mov edi, esi; call rbp; 
0x0000000041cd2b: and al, 0x4c; mov edx, eax; mov rsi, r12; mov rdi, rbp; call qword ptr [rax+0x78]; 
0x0000000040f957: and al, 0x4c; mov edx, esi; mov rax, [rsp]; call rax; 
0x0000000040f8c3: and al, 0x4c; mov edx, esi; mov rsi, r13; mov rdi, r12; call rax; 
0x0000000040fa4e: and al, 0x4c; mov esi, esp; mov rdi, r13; call rax; 
0x0000000040fac3: and al, 0x4d; mov ebp, edi; add r15, r12; call rax; 
0x0000000046800a: and al, 0x50; call rbx; 
0x0000000046931d: and al, 0x50; mov rax, [rsp+0x18]; call rax; 
0x00000000467c20: and al, 0x50; mov rax, [rsp+0x20]; call rax; 
0x00000000465106: and al, 0x50; mov rdi, [rsp+0x48]; call r13; 
0x00000000465606: and al, 0x50; mov rdi, [rsp+0x48]; call rbx; 
0x00000000463180: and al, 0x50; mov rdi, [rsp+0x58]; call r14; 
0x000000004646d0: and al, 0x50; mov rdi, [rsp+0x58]; call r15; 
0x00000000463eea: and al, 0x50; mov rdi, [rsp+0x58]; call rbx; 
0x0000000046424b: and al, 0x50; mov rdi, [rsp+0x58]; mov rax, [rsp+0x18]; call rax; 
0x00000000464a72: and al, 0x50; mov rdi, [rsp+0x58]; mov rax, [rsp+0x20]; call rax; 
0x00000000462ed1: and al, 0x50; mov rdi, [rsp+0x58]; mov rax, [rsp+0x28]; call rax; 
0x00000000463c74: and al, 0x50; mov rdi, [rsp+0x58]; mov rax, [rsp+0x30]; call rax; 
0x00000000463185: and al, 0x58; call r14; 
0x000000004646d5: and al, 0x58; call r15; 
0x00000000463eef: and al, 0x58; call rbx; 
0x00000000464250: and al, 0x58; mov rax, [rsp+0x18]; call rax; 
0x00000000464a77: and al, 0x58; mov rax, [rsp+0x20]; call rax; 
0x00000000462ed6: and al, 0x58; mov rax, [rsp+0x28]; call rax; 
0x00000000463c79: and al, 0x58; mov rax, [rsp+0x30]; call rax; 
0x00000000468005: and al, 0x58; mov rdi, [rsp+0x50]; call rbx; 
0x00000000469318: and al, 0x58; mov rdi, [rsp+0x50]; mov rax, [rsp+0x18]; call rax; 
0x00000000467c1b: and al, 0x58; mov rdi, [rsp+0x50]; mov rax, [rsp+0x20]; call rax; 
0x000000004638ff: and al, 0x58; mov rdi, [rsp+0x60]; call r15; 
0x000000004634bc: and al, 0x58; mov rdi, [rsp+0x60]; mov rax, [rsp+0x18]; call rax; 
0x0000000048ce6b: and al, 0x58; xor rcx, fs:[0x28]; jne short 0x000000000048ceb4; add rsp, 0x68; ret; 
0x00000000491b9e: and al, 0x5b; add rax, [rdx+0x8]; pop rbp; pop r12; jmp rax; 
0x00000000421a3d: and al, 0x5d; mov [r11+0x10], eax; mov dword ptr [r11+0x14], 0x0; ret; 
0x00000000463904: and al, 0x60; call r15; 
0x000000004634c1: and al, 0x60; mov rax, [rsp+0x18]; call rax; 
0x000000004634b7: and al, 0x68; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x60]; mov rax, [rsp+0x18]; call rax; 
0x0000000047f207: and al, 0x6a; add [rax-0x73], cl; add [rbp+rcx*4+0x4c], rcx; and al, 0x28; call rbx; 
0x00000000402601: and al, 0x70; mov edi, 0x3001; mov eax, 0x9e; syscall; 
0x0000000046dddf: and al, 0x78; movups [rsp+0x88], xmm7; mov r10d, 0x8; mov eax, 0xd; syscall; 
0x000000004739d0: and al, 0x83; ret; 
0x0000000041f475: and al, 0x8; add rsp, 0x20; pop rbx; jmp rax; 
0x00000000459eb3: and al, 0x8; add rsp, 0x28; ret; 
0x00000000499594: and al, 0x8; mov [rsp+0x10], r10; call rax; 
0x00000000459f36: and al, 0x8; mov eax, 0x1; syscall; 
0x0000000045a7bb: and al, 0x8; mov esi, 0x10; mov eax, 0x48; syscall; 
0x0000000045c07f: and al, 0x8; mov rdi, [r8]; call rbx; 
0x0000000045aeca: and al, 0x8; mov rdi, r13; call rax; 
0x00000000419ab0: and al, 0x8; mov rdi, r15; call rax; 
0x0000000049aa4c: and al, 0x8; mov rdx, r15; mov rsi, [r12+r14*8+0x10]; mov rdi, r13; call rax; 
0x00000000459e96: and al, 0x8; xor eax, eax; syscall; 
0x0000000046dc39: and al, 0x8; xor rax, fs:[0x28]; jne short 0x000000000046dc4c; add rsp, 0x18; ret; 
0x0000000045a82e: and al, 0x8; xor rcx, fs:[0x28]; jne short 0x000000000045a883; add rsp, 0x18; ret; 
0x00000000420cc8: and al, 0xb3; or al, [rax]; syscall; 
0x000000004822b6: and al, 0xb8; add al, [rax]; add [rax+0x29], cl; ret; 
0x0000000041ccee: and al, 0xba; add [rax], eax; add [rax], al; mov rdi, rbp; call qword ptr [rax+0x80]; 
0x000000004855cb: and al, 0xc0; lea rax, [rip+0x44f6c]; shl r12, 0x4; add r12, rax; call qword ptr [r12+0x60]; 
0x0000000040280a: and al, 0xc; call rbp; 
0x0000000041ed43: and al, 0xc; mov rdi, [rsp]; add rsp, 0x10; pop rbx; jmp rax; 
0x00000000402862: and al, 0xc; mov rsi, [rsp+0x10]; mov rax, [rsp+0x18]; call rax; 
0x0000000047871d: and al, 0xd8; add [rax], al; add [rax-0x39], cl; ret; 
0x0000000040f78b: and al, 0xe0; add [rax], al; add [rdi], cl; sub [rsp+0xf0], eax; syscall; 
0x0000000040a2ee: and al, 0xe8; data64 ret far; 
0x00000000408b3b: and al, 0xe8; jmp rdx; 
0x0000000048f781: and al, 0xe8; movups [rdi], xmm0; mov [rdx], eax; mov eax, 0x2; ret; 
0x0000000040aaaa: and al, 0xe8; push rax; ret far; 
0x00000000409d2f: and al, 0xe8; ret far; 
0x0000000040db37: and al, 0xe8; ret; 
0x0000000040a28c: and al, 0xe8; scasb [rdi]; ret far; 
0x0000000040838c: and al, 0xe9; idiv edi; jmp qword ptr [rsi+0xf]; 
0x0000000040a9c1: and al, 0xe9; ret far; 
0x0000000040857c: and al, 0xe9; xchg edi, eax; idiv edi; jmp qword ptr [rsi+0xf]; 
0x0000000049d032: and al, 0xf; add rsp, 0x10; pop rbx; ret; 
0x0000000047f143: and al, 0xf; mov dh, 0xf3; call rbp; 
0x00000000421aca: and al, [rax+0x1000a]; add [rax], al; mov [rip+0xa8014], eax; ret; 
0x0000000048a422: and al, [rax+rax]; mov [rsi], rax; ret; 
0x00000000406504: and al, [rax-0x80]; call far fword ptr [rax+0xf]; 
0x00000000446ace: and al, [rax]; add [rbp-0x77], cl; ret far; 
0x0000000041ceda: and al, [rcx]; add [rax], al; mov rsi, rsp; mov rdi, rbp; call qword ptr [r13+0x90]; 
0x00000000460b6a: and al, [rsi]; cli; jmp qword ptr [rsi+0xf]; 
0x0000000046b726: and bh, bh; jmp qword ptr [rsi+0xf]; 
0x0000000045df14: and bh, bh; loop 0x000000000045df7e; nop [rax+rax]; ret; 
0x0000000046166a: and bl, [rdx+rdi*8]; jmp qword ptr [rsi-0x70]; 
0x00000000457a78: and ch, 0xf0; pop rbx; cmovne rax, rdx; ret; 
0x0000000047fa82: and ch, 0xf; je short 0x000000000047faa0; add rax, 0x2; ret; 
0x0000000047fa6d: and cl, 0xf; je short 0x000000000047fa90; ret; 
0x0000000047cb9d: and cl, [rbx-0x8]; jmp qword ptr [rsi+0x2e]; 
0x0000000048b9aa: and cl, [rbx]; add [rcx-0x77], cl; ret; 
0x00000000415fe9: and cl, ch; ret far; 
0x0000000042a2d2: and dh, 0x2; lea rax, [rip+0x14eb4]; lea rdx, [rip+0x170fd]; cmovne rax, rdx; ret; 
0x0000000042a282: and dh, 0x2; lea rax, [rip+0x1c4c4]; lea rdx, [rip+0x1eb1d]; cmovne rax, rdx; ret; 
0x00000000429709: and dh, 0x2; lea rax, [rip+0x3acd]; lea rdx, [rip+0x5326]; cmovne rax, rdx; ret; 
0x00000000429f90: and dh, 0x2; lea rax, [rip+0x8076]; lea rdx, [rip+0x2a6df]; cmovne rax, rdx; ret; 
0x000000004579e3: and dh, 0xf0; mov edx, 0x0; pop rbx; cmove rax, rdx; ret; 
0x0000000045969d: and dh, ah; mov edi, edx; mov eax, r8d; syscall; 
0x0000000045d891: and dh, al; sub [r9], r8b; ret; 
0x0000000045d8fd: and dh, al; sub [rcx], al; ret; 
0x0000000047e66a: and dh, cl; std; jmp qword ptr [rsi-0x70]; 
0x0000000041fcfb: and dword ptr [rbx], 0xffffffef; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000041fd53: and dword ptr [rbx], 0xffffffef; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000043befa: and dword ptr [rcx+0x4c000000], 0xffffff8d; sbb eax, 0x6537a; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000421bd1: and dword ptr [rdx+rcx+0x448d4800], 0x1e; dec dword ptr [rax-0x9]; fisttp dword ptr [rax+0x21], st; ret; 
0x0000000046363b: and dword ptr [rsp+rax], 0x0; add [rax-0x77], cl; ret far; 
0x0000000046db4f: and eax, 0x0; ret; 
0x00000000459e57: and eax, 0x18; test eax, eax; jne short 0x0000000000459e70; syscall; 
0x00000000459ef7: and eax, 0x18; test eax, eax; jne short 0x0000000000459f10; mov eax, 0x1; syscall; 
0x0000000041e4c7: and eax, 0x18; test edx, edx; jne short 0x000000000041e4e0; sub dword ptr [rip+0xadb19], 0x1; ret; 
0x00000000420c93: and eax, 0x18; test edx, edx; jne short 0x0000000000420ca8; sub dword ptr [rip+0xab34d], 0x1; ret; 
0x000000004756d1: and eax, 0x18; test edx, edx; jne short 0x00000000004756e0; sub dword ptr [rdi], 0x1; ret; 
0x00000000428821: and eax, 0x1; cmovne rax, rdx; ret; 
0x00000000498b9f: and eax, 0x1; mov [rsi], eax; mov rax, [rdi+0x98]; ret; 
0x0000000046dfb3: and eax, 0x28; jne 0x000000000046e056; add rsp, 0x98; ret; 
0x0000000048f33d: and eax, 0x28; jne 0x000000000048f3c5; leave; ret; 
0x0000000040f7e7: and eax, 0x28; jne short 0x000000000040f814; mov eax, r8d; add rsp, 0x118; ret; 
0x00000000410f95: and eax, 0x28; jne short 0x0000000000410fa4; add rsp, 0xd8; ret; 
0x00000000411053: and eax, 0x28; jne short 0x0000000000411062; add rsp, 0xd8; ret; 
0x000000004259d7: and eax, 0x28; jne short 0x00000000004259e4; add rsp, 0x10; pop rbp; ret; 
0x000000004586ae: and eax, 0x28; jne short 0x00000000004586d4; add rsp, 0x20; pop rbx; ret; 
0x00000000459c36: and eax, 0x28; jne short 0x0000000000459c51; add rsp, 0x28; ret; 
0x0000000045a7a6: and eax, 0x28; jne short 0x000000000045a7f3; add rsp, 0x68; ret; 
0x0000000045a835: and eax, 0x28; jne short 0x000000000045a883; add rsp, 0x18; ret; 
0x0000000045a8ed: and eax, 0x28; jne short 0x000000000045a93b; add rsp, 0x58; ret; 
0x0000000045a98b: and eax, 0x28; jne short 0x000000000045a9db; add rsp, 0x58; ret; 
0x0000000045ab99: and eax, 0x28; jne short 0x000000000045aba5; add rsp, 0x28; ret; 
0x0000000046dc40: and eax, 0x28; jne short 0x000000000046dc4c; add rsp, 0x18; ret; 
0x0000000046debb: and eax, 0x28; jne short 0x000000000046df04; mov eax, r9d; add rsp, 0x148; ret; 
0x0000000046fee0: and eax, 0x28; jne short 0x000000000046ff05; add rsp, 0x38; ret; 
0x00000000475693: and eax, 0x28; jne short 0x00000000004756a2; add rsp, 0xd8; ret; 
0x0000000048058e: and eax, 0x28; jne short 0x000000000048059d; movzx eax, al; add rsp, 0x58; ret; 
0x00000000480648: and eax, 0x28; jne short 0x0000000000480674; mov eax, r9d; add rsp, 0x38; ret; 
0x0000000048cb39: and eax, 0x28; jne short 0x000000000048cb46; add rsp, 0x20; pop rbx; ret; 
0x0000000048cc34: and eax, 0x28; jne short 0x000000000048cc63; add rsp, 0x38; ret; 
0x0000000048cd00: and eax, 0x28; jne short 0x000000000048cd34; add rsp, 0x58; ret; 
0x0000000048ce72: and eax, 0x28; jne short 0x000000000048ceb4; add rsp, 0x68; ret; 
0x0000000048d190: and eax, 0x28; jne short 0x000000000048d1c4; add rsp, 0x58; ret; 
0x0000000048fe37: and eax, 0x28; jne short 0x000000000048fe43; add rsp, 0x28; ret; 
0x0000000048ff25: and eax, 0x28; jne short 0x000000000048ff31; add rsp, 0x38; ret; 
0x00000000493ea0: and eax, 0x28; jne short 0x0000000000493eac; add rsp, 0x38; ret; 
0x0000000048d71c: and eax, 0x2; sub eax, 0x1; ret; 
0x0000000048f5ba: and eax, 0x2c7; add [rax], al; mov eax, 0x1; ret; 
0x00000000410274: and eax, 0x30; call rax; 
0x00000000410256: and eax, 0x30; call rdx; 
0x000000004579fe: and eax, 0x3fc00; ret; 
0x00000000457af8: and eax, 0x3fffc00; div ecx; mov eax, eax; ret; 
0x00000000457a49: and eax, 0x3fffc00; ret; 
0x0000000045a967: and eax, 0x410000; cmp eax, 0x410000; je short 0x000000000045a9a0; mov eax, 0x101; syscall; 
0x000000004868fb: and eax, 0x43c00; or byte ptr [rdi+0x31d], 0x4; ret; 
0x0000000047bc37: and eax, 0x48000002; lea ecx, [rip+0x37a56]; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x0000000041c547: and eax, 0x48000002; lea esi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax+0x90]; 
0x0000000048064e: and eax, 0x48c88944; add esp, 0x38; ret; 
0x0000000049ca87: and eax, 0x48fffbf0; mov dword ptr [rip+0x2f722], 0x0; add rsp, 0x8; ret; 
0x00000000437897: and eax, 0x49000693; movsxd edx, [rbx+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004346d7: and eax, 0x490006c3; movsxd edx, [rbx+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043f28e: and eax, 0x634f0006; or al, 0x8a; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000047d69a: and eax, 0x6e0f4866; ret; 
0x00000000457ae1: and eax, 0x7ff80000; div esi; mov eax, eax; ret; 
0x00000000457a97: and eax, 0x7ff80000; ret; 
0x000000004876de: and eax, 0x8348df74; ret; 
0x0000000047e19b: and eax, 0xc; cmp eax, 0x4; je short 0x000000000047e1a4; ret; 
0x00000000429084: and eax, 0xe8f63120; ret; 
0x00000000490856: and eax, 0xf; cmp al, 0xa; jne 0x00000000004907d9; nop [rax]; call r13; 
0x000000004579cc: and eax, 0xf; movsxd rcx, [rsi+rax*4]; add rcx, rsi; notrack jmp rcx; 
0x00000000433e20: and eax, 0xff; and ecx, 0xff; sub eax, ecx; ret; 
0x00000000433553: and eax, 0xffff; and ecx, 0xffff; sub eax, ecx; ret; 
0x0000000040221a: and eax, 0xffffffc0; mov [rip+0xc9f3c], rax; add rsp, 0x88; pop rbx; ret; 
0x0000000045fdd6: and eax, 0xffffffc7; or eax, 0x10; mov [rip+0x6cdd2], eax; pop rbx; ret; 
0x0000000045fe37: and eax, 0xffffffc7; or eax, 0x18; mov [rip+0x6cd71], eax; ret; 
0x0000000045fe07: and eax, 0xffffffc7; or eax, 0x8; mov [rip+0x6cda1], eax; ret; 
0x000000004968b5: and eax, 0xfffffff8; mov r8, [rax]; lea rax, [rax+0x8]; mov [rcx], r8; ret; 
0x0000000045fd67: and eax, 0xfffffff8; or eax, 0x1; mov [rip+0x6ce41], eax; ret; 
0x0000000045fd36: and eax, 0xfffffff8; or eax, 0x2; mov [rip+0x6ce72], eax; pop rbx; ret; 
0x0000000045fd97: and eax, 0xfffffff8; or eax, 0x3; mov [rip+0x6ce11], eax; ret; 
0x0000000048a3b1: and eax, [rax+rax]; mov rax, r8; ret; 
0x00000000448f85: and eax, [rax]; add [rbp-0x77], cl; ret far; 
0x0000000047eb32: and eax, ecx; je 0x000000000047ed00; bsr rax, rax; add rax, rdi; ret; 
0x0000000048699a: and eax, esi; cmp rdi, rax; jne short 0x00000000004869a8; pop rbx; ret; 
0x0000000041fcfc: and ebp, edi; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000041fd54: and ebp, edi; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000047e136: and ebx, 0xffffffbb; cmp r11d, 0xa; je short 0x000000000047e140; ret; 
0x0000000041b6f4: and ebx, [rbx+0x4c]; mov eax, eax; pop rbp; pop r12; ret; 
0x0000000047676b: and ebx, ecx; clc; call qword ptr [rax-0x3f7c3977]; 
0x00000000495a8a: and ecx, 0x39447fff; ret; 
0x00000000457a18: and ecx, 0x3fc00; cmp edx, 0xff; cmove rax, rcx; ret; 
0x00000000433e25: and ecx, 0xff; sub eax, ecx; ret; 
0x00000000433558: and ecx, 0xffff; sub eax, ecx; ret; 
0x00000000422045: and ecx, [rcx+rcx*4-0x20]; pop rbx; pop rbp; pop r12; ret; 
0x0000000045d552: and ecx, [rsi+0x10]; lea rcx, [rsi+rcx*4]; add eax, [rcx+rdx]; ret; 
0x00000000496837: and edi, 0x20; je short 0x000000000049684c; movss xmm0, [rip+0x23774]; divss xmm0, [rip+0x23770]; ret; 
0x000000004969e6: and edi, 0x60; jne 0x000000000040171e; xor eax, eax; add rsp, 0x8; ret; 
0x00000000499754: and edi, [rax+rsi]; jne short 0x0000000000499768; mov rax, [rsi+0x10]; add rsp, 0x8; ret; 
0x000000004997b4: and edi, [rax+rsi]; jne short 0x00000000004997c8; mov rax, [rsi+0x10]; add rsp, 0x8; ret; 
0x0000000045f071: and edi, [rip+0x16e80004]; cli; jmp qword ptr [rsi+0xf]; 
0x0000000042a34d: and edx, 0x8; lea rax, [rip+0x9b08]; lea rdx, [rip+0xf091]; cmovne rax, rdx; ret; 
0x0000000042a18d: and edx, 0x8; lea rax, [rip+0x9ca8]; lea rdx, [rip+0xf231]; cmovne rax, rdx; ret; 
0x0000000042a02d: and edx, 0x8; lea rax, [rip+0xc808]; lea rdx, [rip+0x11ea1]; cmovne rax, rdx; ret; 
0x00000000457a5e: and edx, 0xf; movsxd rax, [rsi+rdx*4]; add rax, rsi; notrack jmp rax; 
0x000000004934dc: and esi, 0x2; syscall; 
0x0000000047edc2: and esi, eax; je 0x000000000047ed00; bsr rax, rsi; add rax, rdi; ret; 
0x0000000047ebcc: and esi, ecx; je 0x000000000047ed00; bsr rsi, rsi; lea rax, [rdi+rsi]; ret; 
0x0000000047e135: and r11d, 0xffffffbb; cmp r11d, 0xa; je short 0x000000000047e140; ret; 
0x000000004968b4: and rax, 0xfffffffffffffff8; mov r8, [rax]; lea rax, [rax+0x8]; mov [rcx], r8; ret; 
0x0000000047eb31: and rax, rcx; je 0x000000000047ed00; bsr rax, rax; add rax, rdi; ret; 
0x00000000486999: and rax, rsi; cmp rdi, rax; jne short 0x00000000004869a8; pop rbx; ret; 
0x0000000047edc1: and rsi, rax; je 0x000000000047ed00; bsr rax, rsi; add rax, rdi; ret; 
0x0000000047ebcb: and rsi, rcx; je 0x000000000047ed00; bsr rsi, rsi; lea rax, [rdi+rsi]; ret; 
0x0000000045d8fc: and sil, al; sub [rcx], al; ret; 
0x0000000041b9ee: bnd call qword ptr [r12+0x70]; 
0x000000004193b5: bnd call qword ptr [rax+0x70]; 
0x000000004122d9: bnd call qword ptr [rbx+0x38]; 
0x0000000048b06f: bnd call r11; 
0x000000004354bc: bnd jb short 0x00000000004354c7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043556c: bnd jb short 0x0000000000435577; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000437e9c: bnd jb short 0x0000000000437ea7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000437f4c: bnd jb short 0x0000000000437f57; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000047f288: bnd je short 0x000000000047f28f; test edx, edx; jne short 0x000000000047f280; ret; 
0x0000000048b043: bnd jmp r11; 
0x0000000048b155: bnd ret; 
0x00000000431e71: bsf eax, eax; add rax, 0x20; add rax, rdi; vzeroupper; ret; 
0x00000000431e81: bsf eax, eax; add rax, 0x40; add rax, rdi; vzeroupper; ret; 
0x00000000431eaf: bsf eax, eax; add rax, 0x60; add rax, rdi; vzeroupper; ret; 
0x0000000044f394: bsf eax, eax; add rax, rcx; add rax, rdi; vzeroupper; ret; 
0x00000000431a4a: bsf eax, eax; add rax, rdi; add rax, rcx; ret; 
0x00000000431f16: bsf eax, eax; add rax, rdi; add rax, rcx; vzeroupper; ret; 
0x00000000431960: bsf eax, eax; add rax, rdi; ret; 
0x0000000044f9e1: bsf eax, eax; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x00000000431e61: bsf eax, eax; add rax, rdi; vzeroupper; ret; 
0x00000000431970: bsf eax, eax; lea rax, [rax+rdi+0x10]; ret; 
0x00000000431980: bsf eax, eax; lea rax, [rax+rdi+0x20]; ret; 
0x00000000431950: bsf eax, eax; lea rax, [rax+rdi-0x10]; ret; 
0x000000004318af: bsf eax, eax; lea rax, [rdi+rax+0x30]; ret; 
0x0000000044ef27: bsf eax, eax; lea rax, [rdi+rax]; ret; 
0x00000000431990: bsf eax, eax; sub rdx, rax; jbe short 0x00000000004319d0; add rax, rdi; ret; 
0x000000004319a0: bsf eax, eax; sub rdx, rax; jbe short 0x00000000004319d0; lea rax, [rdi+rax+0x10]; ret; 
0x000000004319b0: bsf eax, eax; sub rdx, rax; jbe short 0x00000000004319d0; lea rax, [rdi+rax+0x20]; ret; 
0x000000004319c0: bsf eax, eax; sub rdx, rax; jbe short 0x00000000004319d0; lea rax, [rdi+rax+0x30]; ret; 
0x0000000047f570: bsf eax, eax; sub rdx, rax; jbe short 0x000000000047f5b0; add rax, rdi; ret; 
0x0000000047f580: bsf eax, eax; sub rdx, rax; jbe short 0x000000000047f5b0; lea rax, [rdi+rax+0x10]; ret; 
0x0000000047f590: bsf eax, eax; sub rdx, rax; jbe short 0x000000000047f5b0; lea rax, [rdi+rax+0x20]; ret; 
0x0000000047f5a0: bsf eax, eax; sub rdx, rax; jbe short 0x000000000047f5b0; lea rax, [rdi+rax+0x30]; ret; 
0x0000000044f54a: bsf eax, edx; ret; 
0x00000000459137: bsf eax, edx; shr rax, 0x2; ret; 
0x0000000042ba2a: bsf ecx, ecx; movzx eax, byte ptr [rax+rcx]; movzx edx, byte ptr [rdx+rcx]; sub eax, edx; ret; 
0x0000000042baf0: bsf ecx, edi; movzx eax, byte ptr [rax+rcx]; movzx edx, byte ptr [rdx+rcx]; sub eax, edx; ret; 
0x0000000042b8c0: bsf edx, eax; movzx eax, byte ptr [rdi+rdx]; movzx edx, byte ptr [rsi+rdx]; sub eax, edx; ret; 
0x0000000044f6a2: bsf edx, edx; add rax, rdx; sub rax, rdi; ret; 
0x00000000459247: bsf edx, edx; add rax, rdx; sub rax, rdi; shr rax, 0x2; ret; 
0x00000000453bd1: bsf edx, edx; lea r11, [rip+0x4de65]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000453b99: bsf edx, edx; lea r11, [rip+0x4de9d]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000453b74: bsf edx, edx; lea r11, [rip+0x4dec2]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000453b57: bsf edx, edx; lea r11, [rip+0x4dedf]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000004535a1: bsf edx, edx; lea r11, [rip+0x4e415]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000453569: bsf edx, edx; lea r11, [rip+0x4e44d]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000453544: bsf edx, edx; lea r11, [rip+0x4e472]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000453527: bsf edx, edx; lea r11, [rip+0x4e48f]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000042b851: bsf edx, edx; movzx ecx, byte ptr [rsi+rdx]; movzx eax, byte ptr [rdi+rdx]; sub eax, ecx; ret; 
0x0000000044f040: bsf rax, rax; lea rax, [rdi+rax]; ret; 
0x0000000044f592: bsf rax, rdx; ret; 
0x00000000459136: bsf rax, rdx; shr rax, 0x2; ret; 
0x0000000042ba29: bsf rcx, rcx; movzx eax, byte ptr [rax+rcx]; movzx edx, byte ptr [rdx+rcx]; sub eax, edx; ret; 
0x0000000042baef: bsf rcx, rdi; movzx eax, byte ptr [rax+rcx]; movzx edx, byte ptr [rdx+rcx]; sub eax, edx; ret; 
0x0000000042b8bf: bsf rdx, rax; movzx eax, byte ptr [rdi+rdx]; movzx edx, byte ptr [rsi+rdx]; sub eax, edx; ret; 
0x0000000044f6a1: bsf rdx, rdx; add rax, rdx; sub rax, rdi; ret; 
0x00000000459246: bsf rdx, rdx; add rax, rdx; sub rax, rdi; shr rax, 0x2; ret; 
0x00000000453bd0: bsf rdx, rdx; lea r11, [rip+0x4de65]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000453b98: bsf rdx, rdx; lea r11, [rip+0x4de9d]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000453b73: bsf rdx, rdx; lea r11, [rip+0x4dec2]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000453b56: bsf rdx, rdx; lea r11, [rip+0x4dedf]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000004535a0: bsf rdx, rdx; lea r11, [rip+0x4e415]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000453568: bsf rdx, rdx; lea r11, [rip+0x4e44d]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000453543: bsf rdx, rdx; lea r11, [rip+0x4e472]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000453526: bsf rdx, rdx; lea r11, [rip+0x4e48f]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000042b850: bsf rdx, rdx; movzx ecx, byte ptr [rsi+rdx]; movzx eax, byte ptr [rdi+rdx]; sub eax, ecx; ret; 
0x0000000047eb3b: bsr eax, eax; add rax, rdi; ret; 
0x0000000047ef21: bsr eax, eax; lea rax, [rdi+rax-0x20]; vzeroupper; ret; 
0x0000000047edcb: bsr eax, esi; add rax, rdi; ret; 
0x0000000047ecd9: bsr esi, esi; lea rax, [rcx+rsi]; ret; 
0x0000000047ebd5: bsr esi, esi; lea rax, [rdi+rsi]; ret; 
0x0000000047eb3a: bsr rax, rax; add rax, rdi; ret; 
0x0000000047edca: bsr rax, rsi; add rax, rdi; ret; 
0x0000000047ecd8: bsr rsi, rsi; lea rax, [rcx+rsi]; ret; 
0x0000000047ecd6: bsr rsi, rsi; lea rax, [rcx+rsi]; ret; 
0x0000000047ebd4: bsr rsi, rsi; lea rax, [rdi+rsi]; ret; 
0x0000000043258e: bswap ecx; mov al, [rdi+rdx-0x1]; mov cl, [rsi+rdx-0x1]; sub eax, ecx; ret; 
0x0000000048f741: bts eax, 0x30; mov [rdi+0x8], rax; mov eax, 0x2; ret; 
0x0000000044f863: bts edx, ebx; bsf rdx, rdx; add rax, rdx; sub rax, rdi; ret; 
0x0000000048f5d1: bts esi, 0x34; mov eax, 0x1; mov [rdi], rsi; ret; 
0x0000000048f740: bts rax, 0x30; mov [rdi+0x8], rax; mov eax, 0x2; ret; 
0x0000000044f862: bts rdx, r11; bsf rdx, rdx; add rax, rdx; sub rax, rdi; ret; 
0x0000000048f5d0: bts rsi, 0x34; mov eax, 0x1; mov [rdi], rsi; ret; 
0x0000000041297b: call far fword ptr [rax+0x44]; 
0x0000000041510b: call far fword ptr [rax+0x48]; 
0x000000004051d4: call far fword ptr [rax+0xf]; 
0x0000000049adb5: call far fword ptr [rax]; 
0x0000000045a0d9: call far fword ptr [rbp+0x1bf0004]; 
0x0000000041f975: call far fword ptr [rbp+0x41]; 
0x0000000041a194: call far fword ptr [rbp-0x3d]; 
0x00000000418f8e: call far fword ptr [rbx+0x44]; 
0x0000000041e07c: call far fword ptr [rbx+0x48]; 
0x0000000049b873: call far fword ptr [rbx+0x4c]; 
0x0000000041a60c: call far fword ptr [rbx+0x5d]; 
0x0000000048acda: call far fword ptr [rbx+0x64]; 
0x0000000041bc37: call far fword ptr [rbx-0x3d]; 
0x0000000040ffd2: call far fword ptr [rdi]; 
0x00000000429498: call far fword ptr [rdx+0x31]; 
0x00000000423e05: call far fword ptr [rdx+rcx]; 
0x0000000044727e: call far fword ptr [rdx]; 
0x00000000485d6e: call far fword ptr [rsi+0x5f]; 
0x0000000047dc7f: call far fword ptr [rsi]; 
0x0000000041335c: call qword ptr [r11+rax*8-0x40]; 
0x000000004207cd: call qword ptr [r12+0x18]; 
0x00000000476927: call qword ptr [r12+0x38]; 
0x000000004855db: call qword ptr [r12+0x60]; 
0x0000000041b9ef: call qword ptr [r12+0x70]; 
0x0000000041ca60: call qword ptr [r12+0x80]; 
0x0000000041d6e8: call qword ptr [r12+0x88]; 
0x00000000420607: call qword ptr [r13+0x18]; 
0x0000000041cf47: call qword ptr [r13+0x20]; 
0x00000000411545: call qword ptr [r13+0x38]; 
0x00000000418fe1: call qword ptr [r13+0x58]; 
0x0000000041f7b1: call qword ptr [r13+0x60]; 
0x00000000419d43: call qword ptr [r13+0x80]; 
0x0000000041cee4: call qword ptr [r13+0x90]; 
0x0000000047d3cd: call qword ptr [r14+0x18]; 
0x0000000047db8e: call qword ptr [r14+0x20]; 
0x00000000417526: call qword ptr [r14+0x38]; 
0x0000000041d5ad: call qword ptr [r14+0x78]; 
0x00000000419a5d: call qword ptr [r14+0x80]; 
0x00000000419991: call qword ptr [r14+0x90]; 
0x0000000041bae1: call qword ptr [r15+0x18]; 
0x000000004771d3: call qword ptr [r15+0x38]; 
0x0000000041bd07: call qword ptr [r15+0x40]; 
0x00000000420242: call qword ptr [r15+0x58]; 
0x0000000041c127: call qword ptr [r15+0x80]; 
0x0000000041bc9e: call qword ptr [r15+0x90]; 
0x00000000403080: call qword ptr [r15+rbx*8]; 
0x00000000476de4: call qword ptr [r8+0x38]; 
0x000000004872be: call qword ptr [rax+0x10438b48]; 
0x0000000048181e: call qword ptr [rax+0x107d8348]; 
0x0000000041792e: call qword ptr [rax+0x1428d4c]; 
0x00000000488ebe: call qword ptr [rax+0x142b60f]; 
0x00000000460e8e: call qword ptr [rax+0x14673945]; 
0x0000000045eeae: call qword ptr [rax+0x17e9c031]; 
0x0000000045d0ce: call qword ptr [rax+0x17f8d4c]; 
0x0000000048155e: call qword ptr [rax+0x18858b48]; 
0x00000000415c4e: call qword ptr [rax+0x188d8944]; 
0x00000000419710: call qword ptr [rax+0x18]; 
0x0000000041763e: call qword ptr [rax+0x1b9]; 
0x0000000042257e: call qword ptr [rax+0x1bac031]; 
0x000000004934be: call qword ptr [rax+0x1f88041]; 
0x0000000041a6ce: call qword ptr [rax+0x20758b48]; 
0x0000000049194e: call qword ptr [rax+0x2086c641]; 
0x00000000428db5: call qword ptr [rax+0x221d8948]; 
0x000000004890fe: call qword ptr [rax+0x242b60f]; 
0x0000000048ebde: call qword ptr [rax+0x24348b48]; 
0x0000000042410e: call qword ptr [rax+0x2444894c]; 
0x0000000049603e: call qword ptr [rax+0x24448d48]; 
0x0000000048be5e: call qword ptr [rax+0x24548b48]; 
0x0000000049aade: call qword ptr [rax+0x245c8948]; 
0x0000000047449e: call qword ptr [rax+0x28458b48]; 
0x0000000048a26e: call qword ptr [rax+0x2bf5850]; 
0x0000000049bbae: call qword ptr [rax+0x30658b4c]; 
0x0000000047b2ee: call qword ptr [rax+0x30be]; 
0x00000000419dfe: call qword ptr [rax+0x31ee8948]; 
0x00000000480cd5: call qword ptr [rax+0x31f1894c]; 
0x0000000042870e: call qword ptr [rax+0x330d8d48]; 
0x0000000048973e: call qword ptr [rax+0x37bb41]; 
0x00000000414245: call qword ptr [rax+0x38]; 
0x0000000041c73a: call qword ptr [rax+0x40]; 
0x0000000042872e: call qword ptr [rax+0x41f0c031]; 
0x0000000047d8ae: call qword ptr [rax+0x44a8d48]; 
0x00000000492575: call qword ptr [rax+0x44b04d8b]; 
0x0000000042527e: call qword ptr [rax+0x4587c031]; 
0x0000000047cade: call qword ptr [rax+0x458b48]; 
0x0000000048e1be: call qword ptr [rax+0x48068b48]; 
0x0000000047bf0e: call qword ptr [rax+0x48087e8b]; 
0x0000000040731e: call qword ptr [rax+0x480ab60f]; 
0x0000000047da2e: call qword ptr [rax+0x487d8348]; 
0x00000000471dee: call qword ptr [rax+0x48858b48]; 
0x000000004143f7: call qword ptr [rax+0x48]; 
0x0000000048fd7e: call qword ptr [rax+0x48b78b48]; 
0x00000000427c3e: call qword ptr [rax+0x48ed0148]; 
0x0000000040fbee: call qword ptr [rax+0x4cee894c]; 
0x0000000042834d: call qword ptr [rax+0x4cef8948]; 
0x000000004236be: call qword ptr [rax+0x4cef894c]; 
0x00000000463e6e: call qword ptr [rax+0x4cf1894c]; 
0x000000004876ee: call qword ptr [rax+0x4cf8894c]; 
0x0000000042080e: call qword ptr [rax+0x50738b48]; 
0x0000000040421b: call qword ptr [rax+0x50]; 
0x00000000428d7d: call qword ptr [rax+0x521d8948]; 
0x00000000497b4e: call qword ptr [rax+0x56415741]; 
0x0000000042579e: call qword ptr [rax+0x593d8d48]; 
0x00000000423f3e: call qword ptr [rax+0x5c1d05f6]; 
0x0000000047219e: call qword ptr [rax+0x5c958b44]; 
0x00000000462f0e: call qword ptr [rax+0x5fd8341]; 
0x000000004270fe: call qword ptr [rax+0x61058b48]; 
0x000000004233fe: call qword ptr [rax+0x613d8d48]; 
0x000000004116ce: call qword ptr [rax+0x688d8b48]; 
0x0000000047d5db: call qword ptr [rax+0x68]; 
0x0000000049b03e: call qword ptr [rax+0x692d8d4c]; 
0x0000000041617e: call qword ptr [rax+0x709d894c]; 
0x000000004193b6: call qword ptr [rax+0x70]; 
0x00000000460dce: call qword ptr [rax+0x70b58b48]; 
0x00000000496855: call qword ptr [rax+0x74]; 
0x0000000046b5fe: call qword ptr [rax+0x76148d48]; 
0x000000004229be: call qword ptr [rax+0x787c031]; 
0x0000000041cd35: call qword ptr [rax+0x78]; 
0x0000000045ee3e: call qword ptr [rax+0x792d8b48]; 
0x0000000041c047: call qword ptr [rax+0x80]; 
0x000000004185ce: call qword ptr [rax+0x847c748]; 
0x0000000048a32e: call qword ptr [rax+0x8498b48]; 
0x00000000415f7e: call qword ptr [rax+0x84e8b49]; 
0x0000000047bdde: call qword ptr [rax+0x8578b44]; 
0x000000004752be: call qword ptr [rax+0x8be]; 
0x0000000049abfe: call qword ptr [rax+0x8c48348]; 
0x0000000041bee9: call qword ptr [rax+0x90]; 
0x0000000041a68e: call qword ptr [rax+0xc08d8b]; 
0x0000000044d6be: call qword ptr [rax+0xea8149]; 
0x0000000048d0de: call qword ptr [rax+0xee9c031]; 
0x0000000048ec3e: call qword ptr [rax+0xf66c031]; 
0x0000000045b8de: call qword ptr [rax+0xfc98548]; 
0x0000000048736e: call qword ptr [rax+0xfd83948]; 
0x000000004871ee: call qword ptr [rax+0xfdb854d]; 
0x0000000040fc3e: call qword ptr [rax+0xfef894c]; 
0x0000000041eafe: call qword ptr [rax+0xff0c889]; 
0x00000000401f74: call qword ptr [rax+0xff3c3c9]; 
0x0000000041186a: call qword ptr [rax+r9*8]; 
0x0000000041186b: call qword ptr [rax+rcx*8]; 
0x00000000427ade: call qword ptr [rax-0x1076b370]; 
0x000000004828d2: call qword ptr [rax-0x1107a3a]; 
0x00000000471bbe: call qword ptr [rax-0x1374a75]; 
0x0000000045ce3e: call qword ptr [rax-0x1600cebb]; 
0x0000000041145e: call qword ptr [rax-0x161176b3]; 
0x000000004911c3: call qword ptr [rax-0x170876b4]; 
0x0000000047440e: call qword ptr [rax-0x171076b8]; 
0x0000000042808e: call qword ptr [rax-0x1876b370]; 
0x0000000047892a: call qword ptr [rax-0x18]; 
0x000000004143ff: call qword ptr [rax-0x1]; 
0x0000000041d2ee: call qword ptr [rax-0x1c7418]; 
0x0000000049774e: call qword ptr [rax-0x2049f0c0]; 
0x0000000041d7ce: call qword ptr [rax-0x215418]; 
0x0000000042335e: call qword ptr [rax-0x2bc272b8]; 
0x0000000048f98e: call qword ptr [rax-0x3615ea75]; 
0x000000004248de: call qword ptr [rax-0x3f3f38b8]; 
0x0000000041209e: call qword ptr [rax-0x3f7c3977]; 
0x0000000042494e: call qword ptr [rax-0x46c272b8]; 
0x0000000049480e: call qword ptr [rax-0x4bf7a77]; 
0x0000000049281e: call qword ptr [rax-0x4c117]; 
0x0000000047ba4e: call qword ptr [rax-0x4f3f38b8]; 
0x0000000047a13e: call qword ptr [rax-0x4f77a75]; 
0x0000000040ed5e: call qword ptr [rax-0x5e1f00d]; 
0x0000000045e32e: call qword ptr [rax-0x5eea76b4]; 
0x0000000047450e: call qword ptr [rax-0x5f7a74b8]; 
0x00000000485ece: call qword ptr [rax-0x67c27cb8]; 
0x0000000048d34e: call qword ptr [rax-0x70143fcf]; 
0x0000000047bdae: call qword ptr [rax-0x72fbb975]; 
0x00000000478908: call qword ptr [rax-0x75]; 
0x00000000480bfe: call qword ptr [rax-0x76378a75]; 
0x0000000047ad4e: call qword ptr [rax-0x77276b4]; 
0x0000000048718e: call qword ptr [rax-0x77ba74b8]; 
0x00000000415fee: call qword ptr [rax-0x77cf879]; 
0x000000004954be: call qword ptr [rax-0x7af0fc58]; 
0x00000000401ed6: call qword ptr [rax-0xc3c3670]; 
0x000000004827ee: call qword ptr [rax-0xdb4a75]; 
0x000000004126e3: call qword ptr [rax]; 
0x0000000041ec32: call qword ptr [rbp+0x18]; 
0x0000000041cf48: call qword ptr [rbp+0x20]; 
0x0000000041fcf3: call qword ptr [rbp+0x30]; 
0x00000000411546: call qword ptr [rbp+0x38]; 
0x00000000417e3f: call qword ptr [rbp+0x48]; 
0x000000004892f3: call qword ptr [rbp+0x53]; 
0x00000000418fe2: call qword ptr [rbp+0x58]; 
0x00000000418763: call qword ptr [rbp+0x60]; 
0x00000000425156: call qword ptr [rbp+0x64]; 
0x000000004190a4: call qword ptr [rbp+0x68]; 
0x0000000041c8d6: call qword ptr [rbp+0x70]; 
0x00000000419d44: call qword ptr [rbp+0x80]; 
0x0000000041cee5: call qword ptr [rbp+0x90]; 
0x00000000403108: call qword ptr [rbp+rbx*8]; 
0x00000000422edd: call qword ptr [rbp-0x74b7fffb]; 
0x00000000402621: call qword ptr [rbx+0x10]; 
0x0000000041ee99: call qword ptr [rbx+0x18]; 
0x000000004122da: call qword ptr [rbx+0x38]; 
0x00000000428e65: call qword ptr [rbx+0x48]; 
0x00000000498d8e: call qword ptr [rbx+0x52]; 
0x00000000480264: call qword ptr [rbx+0x64]; 
0x0000000041a029: call qword ptr [rbx+0x80]; 
0x0000000041df54: call qword ptr [rbx+0x88]; 
0x0000000047c3dd: call qword ptr [rbx+0x90]; 
0x00000000414860: call qword ptr [rbx+0xf]; 
0x0000000041335d: call qword ptr [rbx+rax*8-0x40]; 
0x00000000414406: call qword ptr [rbx-0x18]; 
0x00000000410378: call qword ptr [rbx]; 
0x000000004124f3: call qword ptr [rcx+0x38]; 
0x0000000046bb9d: call qword ptr [rcx+rdi*8-0x1]; 
0x000000004090a9: call qword ptr [rcx]; 
0x0000000041bae2: call qword ptr [rdi+0x18]; 
0x000000004771d4: call qword ptr [rdi+0x38]; 
0x0000000041bd08: call qword ptr [rdi+0x40]; 
0x00000000420243: call qword ptr [rdi+0x58]; 
0x0000000041c128: call qword ptr [rdi+0x80]; 
0x0000000041bc9f: call qword ptr [rdi+0x90]; 
0x00000000403081: call qword ptr [rdi+rbx*8]; 
0x00000000402eed: call qword ptr [rdi-0x72b7fff4]; 
0x00000000403b35: call qword ptr [rdx+0xc]; 
0x00000000498540: call qword ptr [rdx]; 
0x0000000047d3ce: call qword ptr [rsi+0x18]; 
0x0000000047db8f: call qword ptr [rsi+0x20]; 
0x00000000417527: call qword ptr [rsi+0x38]; 
0x0000000041d5ae: call qword ptr [rsi+0x78]; 
0x00000000419a5e: call qword ptr [rsi+0x80]; 
0x00000000419992: call qword ptr [rsi+0x90]; 
0x000000004244b8: call qword ptr [rsi+rsi*2]; 
0x00000000447642: call qword ptr [rsi]; 
0x000000004207ce: call qword ptr [rsp+0x18]; 
0x00000000476928: call qword ptr [rsp+0x38]; 
0x000000004855dc: call qword ptr [rsp+0x60]; 
0x0000000041b9f0: call qword ptr [rsp+0x70]; 
0x0000000041ca61: call qword ptr [rsp+0x80]; 
0x0000000041d6e9: call qword ptr [rsp+0x88]; 
0x000000004875f7: call r10; 
0x0000000048b070: call r11; 
0x0000000041b024: call r12; 
0x0000000046510c: call r13; 
0x00000000461ad7: call r14; 
0x00000000463906: call r15; 
0x0000000047bfaa: call r8; 
0x00000000401014: call rax; 
0x0000000040280c: call rbp; 
0x0000000047f146: call rbp; 
0x00000000458166: call rbx; 
0x0000000048d556: call rcx; 
0x00000000463907: call rdi; 
0x00000000402036: call rdx; 
0x000000004611ce: call rsi; 
0x0000000041b025: call rsp; 
0x0000000042eef7: cdq; adc al, [rax]; add [rbp-0x77], cl; ret far; 
0x000000004062ea: cdq; add [rax], al; add [rax-0x80], al; jmp qword ptr [rdi+rcx-0x7c]; 
0x0000000044b5f0: cdq; add eax, 0x81048b00; mov edx, [rcx+rdx*4]; sub eax, edx; ret; 
0x00000000414e83: cdqe; movzx eax, byte ptr [rbx+rax]; jmp qword ptr [rsi+rax*8]; 
0x000000004145e2: cdqe; movzx eax, byte ptr [rbx+rax]; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000041212f: cdqe; movzx eax, byte ptr [rdi+rax]; jmp qword ptr [rsi+rax*8]; 
0x00000000415478: cdqe; movzx ecx, byte ptr [rbx+rax]; lea rax, [rip+0xb0d9b]; mov rax, [rax+rcx*8]; jmp rax; 
0x000000004149c8: cdqe; movzx ecx, byte ptr [rbx+rax]; lea rax, [rip+0xb1a4b]; mov rax, [rax+rcx*8]; jmp rax; 
0x00000000414c34: cdqe; movzx edx, byte ptr [rbx+rax]; lea rax, [rip+0xb19df]; jmp qword ptr [rax+rdx*8]; 
0x00000000414a31: cdqe; movzx edx, byte ptr [rbx+rax]; lea rax, [rip+0xb1ae2]; jmp qword ptr [rax+rdx*8]; 
0x00000000459c6f: clc; add [rdi+0x2d], esi; mov eax, 0x4; syscall; 
0x000000004804af: clc; add [rdi+0x2d], esi; mov eax, 0x6; syscall; 
0x00000000459cce: clc; add [rdi+0x2e], esi; mov eax, 0x5; syscall; 
0x00000000419dbc: clc; add cl, [rax+0xf]; scasd [rdi]; ret; 
0x000000004592d2: clc; add cl, [rax-0x7b]; ror byte ptr [rax+0xf], cl; ret; 
0x0000000049507f: clc; add cl, ch; out dx, al; idiv bh; jmp qword ptr [rsi+0x2e]; 
0x0000000049412d: clc; add ebx, [rbx+0x5d]; pop r12; ret; 
0x000000004030fd: clc; add esi, [rbp+rdx+0x48]; lea ebx, [rax-0x1]; nop [rax]; call qword ptr [rbp+rbx*8]; 
0x00000000431737: clc; add rax, rcx; ret; 
0x0000000044f92b: clc; add rax, rcx; sub rax, rdx; vzeroupper; ret; 
0x00000000431c74: clc; add rax, rcx; vzeroupper; ret; 
0x0000000049b8af: clc; call far fword ptr [rbx+0x4c]; 
0x000000004757bc: clc; call far fword ptr [rbx+0x5d]; 
0x0000000047e20b: clc; call far fword ptr [rdx+0x31]; 
0x0000000047e20c: clc; call far fword ptr [rdx+0x31]; 
0x0000000047676d: clc; call qword ptr [rax-0x3f7c3977]; 
0x0000000049ca6d: clc; call qword ptr [rax-0x5e1f00d]; 
0x000000004333bc: clc; cmp rcx, rax; jne 0x0000000000433df3; xor eax, eax; ret; 
0x00000000433dc8: clc; cmp rcx, rax; jne short 0x0000000000433df3; xor eax, eax; ret; 
0x000000004134e8: clc; dec dword ptr [rax-0x77]; ret; 
0x0000000049b87e: clc; dec dword ptr [rax-0x7d]; ret; 
0x0000000047aa13: clc; fdivp st(7), st; call far fword ptr [rdi]; 
0x000000004126e0: clc; idiv bh; call qword ptr [rax]; 
0x00000000476fe6: clc; idiv bh; dec dword ptr [rbp+0x63]; ret; 
0x00000000477769: clc; idiv bh; inc dword ptr [rcx]; ret far; 
0x000000004776aa: clc; idiv bh; jmp qword ptr [rsi-0x70]; 
0x00000000412386: clc; idiv edi; jmp qword ptr [rsi+0xf]; 
0x00000000416396: clc; in al, 0xff; jmp qword ptr [rsi+0xf]; 
0x0000000044fce4: clc; ja short 0x000000000044fcaa; nop [rax+rax]; xor eax, eax; ret; 
0x00000000459578: clc; ja short 0x000000000045953e; nop [rax+rax]; xor eax, eax; ret; 
0x00000000434cdc: clc; jb short 0x0000000000434ce7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000434d8c: clc; jb short 0x0000000000434d97; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000004376bc: clc; jb short 0x00000000004376c7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043776c: clc; jb short 0x0000000000437777; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000041a01d: clc; jbe 0x000000000041a148; xor edx, edx; mov rdi, r15; call qword ptr [rbx+0x80]; 
0x0000000041f5ea: clc; jbe 0x000000000041f760; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp+0x18]; 
0x0000000047db84: clc; jbe 0x000000000047dd40; mov rdi, r13; call qword ptr [r14+0x20]; 
0x0000000041b76d: clc; jbe short 0x000000000041b790; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x000000004207c2: clc; jbe short 0x0000000000420820; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [r12+0x18]; 
0x0000000047cb9e: clc; jmp qword ptr [rsi+0x2e]; 
0x0000000049aed3: clc; jmp qword ptr [rsi+0x66]; 
0x00000000474b85: clc; jmp qword ptr [rsi+0xf]; 
0x00000000471afe: clc; jmp qword ptr [rsi-0x7f]; 
0x000000004392e6: clc; lea r11, [rip+0x678d2]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439130: clc; lea r11, [rip+0x67a88]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000436812: clc; lea r11, [rip+0x6a1e6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000436738: clc; lea r11, [rip+0x6a2c0]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000401f42: clc; leave; ret; 
0x000000004358d7: clc; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x0000000043622b: clc; mov [rdi-0x15], r11; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043642b: clc; mov [rdi-0x16], r11; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043662b: clc; mov [rdi-0x17], r11; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x000000004358bb: clc; mov [rdi-0x18], r10; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x000000004358f3: clc; mov [rdi-0x8], rdx; ret; 
0x00000000436247: clc; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043b1c6: clc; mov [rdi-0xd], rdx; mov [rdi-0x8], rcx; ret; 
0x00000000436447: clc; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043b136: clc; mov [rdi-0xe], rdx; mov [rdi-0x8], rcx; ret; 
0x00000000436647: clc; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043b0a6: clc; mov [rdi-0xf], rdx; mov [rdi-0x8], rcx; ret; 
0x000000004575d2: clc; mov [rdi], rcx; ret; 
0x00000000457751: clc; mov [rdi], rcx; vzeroupper; ret; 
0x0000000043eb6f: clc; mov [rdi], rsi; mov [r9-0x8], rcx; ret; 
0x0000000045684e: clc; mov [rdi], rsi; ret; 
0x000000004968b7: clc; mov r8, [rax]; lea rax, [rax+0x8]; mov [rcx], r8; ret; 
0x0000000040202d: clc; mov rax, [rax+0x8]; mov rdi, rax; call rdx; 
0x0000000049904f: clc; mov rbp, [rbp]; mov rsp, rcx; pop rcx; jmp rcx; 
0x00000000456846: clc; mov rsi, [rsi]; mov [rdi+rdx-0x8], rcx; mov [rdi], rsi; ret; 
0x0000000047bb48: clc; notrack jmp rax; 
0x0000000046fd1b: clc; or [rdi-0x2f], esi; mov rax, r8; ret; 
0x0000000041b858: clc; or al, [rax]; mov [rdx+0xe0], rcx; pop rbx; ret; 
0x0000000045fd69: clc; or eax, 0x1; mov [rip+0x6ce41], eax; ret; 
0x0000000045fd38: clc; or eax, 0x2; mov [rip+0x6ce72], eax; pop rbx; ret; 
0x0000000045fd99: clc; or eax, 0x3; mov [rip+0x6ce11], eax; ret; 
0x00000000420c06: clc; ret; 
0x0000000048de99: clc; shl r9, cl; mov [rdi-0x10], r9; ret; 
0x0000000045924f: clc; shr rax, 0x2; ret; 
0x000000004639c3: clc; stc; jmp qword ptr [rsi+0x2e]; 
0x0000000048c921: clc; std; jbe short 0x000000000048c930; ret; 
0x0000000046b78b: clc; std; je short 0x000000000046b7a8; pop rbx; ret; 
0x0000000047bb3e: clc; sub [rdi+0xe], esi; movsxd rax, [rdi+rax*4]; add rax, rdi; notrack jmp rax; 
0x000000004594fb: clc; sub rax, rdx; shr rax, 0x2; vzeroupper; ret; 
0x0000000044f9e6: clc; sub rax, rdx; vzeroupper; ret; 
0x00000000431deb: clc; vzeroupper; ret; 
0x0000000048f337: clc; xor rax, fs:[0x28]; jne 0x000000000048f3c5; leave; ret; 
0x000000004452d7: cld; add eax, 0x81048b00; mov edx, [rcx+rdx*4]; sub eax, edx; ret; 
0x00000000457a1b: cld; add eax, [rax]; cmp edx, 0xff; cmove rax, rcx; ret; 
0x00000000457a00: cld; add eax, [rax]; ret; 
0x00000000492574: cld; call qword ptr [rax+0x44b04d8b]; 
0x000000004911c2: cld; call qword ptr [rax-0x170876b4]; 
0x0000000049281d: cld; call qword ptr [rax-0x4c117]; 
0x00000000455bb0: cld; cmp eax, ecx; jne 0x0000000000455dc0; xor eax, eax; ret; 
0x000000004333e5: cld; cmp ecx, eax; jne 0x0000000000433dff; xor eax, eax; ret; 
0x00000000462372: cld; dec dword ptr [rax-0x77]; ret; 
0x0000000049b825: cld; dec dword ptr [rax-0x7d]; ret; 
0x0000000049b969: cld; dec dword ptr [rcx-0x75]; jge short 0x000000000049b97f; add rdi, rbp; call r12; 
0x00000000457afa: cld; inc dword ptr [rbx]; div ecx; mov eax, eax; ret; 
0x00000000457a4b: cld; inc dword ptr [rbx]; ret; 
0x0000000043479c: cld; jb short 0x00000000004347a7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043484c: cld; jb short 0x0000000000434857; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043717c: cld; jb short 0x0000000000437187; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043722c: cld; jb short 0x0000000000437237; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000045a4c6: cld; jmp qword ptr [rcx+rax*2-0x75]; 
0x0000000048e451: cld; jmp qword ptr [rsi+0x2e]; 
0x0000000048e452: cld; jmp qword ptr [rsi+0x2e]; 
0x0000000048a290: cld; jmp qword ptr [rsi+0x66]; 
0x0000000048a291: cld; jmp qword ptr [rsi+0x66]; 
0x0000000048f3c8: cld; jmp qword ptr [rsi+0xf]; 
0x00000000435a9a: cld; mov [rdi-0x11], r11; mov [rdi-0x9], rcx; mov [rdi-0x4], edx; ret; 
0x00000000435c7a: cld; mov [rdi-0x12], r11; mov [rdi-0xa], rcx; mov [rdi-0x4], edx; ret; 
0x00000000435e5a: cld; mov [rdi-0x13], r11; mov [rdi-0xb], rcx; mov [rdi-0x4], edx; ret; 
0x0000000043603a: cld; mov [rdi-0x14], r11; mov [rdi-0xc], rcx; mov [rdi-0x4], edx; ret; 
0x00000000436062: cld; mov [rdi-0x4], edx; ret; 
0x00000000436264: cld; mov [rdi-0x5], edx; mov [rdi-0x4], ecx; ret; 
0x00000000436464: cld; mov [rdi-0x6], edx; mov [rdi-0x4], ecx; ret; 
0x00000000436664: cld; mov [rdi-0x7], edx; mov [rdi-0x4], ecx; ret; 
0x00000000435ab6: cld; mov [rdi-0x9], rcx; mov [rdi-0x4], edx; ret; 
0x0000000043b3d5: cld; mov [rdi-0x9], rdx; mov [rdi-0x4], ecx; ret; 
0x00000000435c96: cld; mov [rdi-0xa], rcx; mov [rdi-0x4], edx; ret; 
0x0000000043b355: cld; mov [rdi-0xa], rdx; mov [rdi-0x4], ecx; ret; 
0x00000000435e76: cld; mov [rdi-0xb], rcx; mov [rdi-0x4], edx; ret; 
0x0000000043b2d5: cld; mov [rdi-0xb], rdx; mov [rdi-0x4], ecx; ret; 
0x00000000436056: cld; mov [rdi-0xc], rcx; mov [rdi-0x4], edx; ret; 
0x0000000043b255: cld; mov [rdi-0xc], rdx; mov [rdi-0x4], ecx; ret; 
0x000000004575da: cld; mov [rdi], ecx; ret; 
0x0000000045775c: cld; mov [rdi], ecx; vzeroupper; ret; 
0x0000000043eb81: cld; mov [rdi], esi; mov [r9-0x4], ecx; ret; 
0x0000000045685c: cld; mov [rdi], esi; ret; 
0x00000000456856: cld; mov esi, [rsi]; mov [rdi+rdx-0x4], ecx; mov [rdi], esi; ret; 
0x0000000047e816: cld; or [rax+0xf], cl; ret; 
0x000000004904be: cld; push rbx; nop edx, edi; mov eax, [rip+0x3c71e]; ret; 
0x00000000435941: cld; ret; 
0x00000000421423: cld; std; dec dword ptr [rax-0x77]; ret; 
0x0000000043ecf1: cld; vmovups [r9-0xc0], zmm13; vmovups [r9-0x80], zmm14; vmovups [r9-0x40], zmm15; ret; 
0x0000000043eab7: cld; vmovups [r9-0xc0], zmm5; vmovups [r9-0x80], zmm6; vmovups [r9-0x40], zmm7; ret; 
0x000000004564ef: cld; vmovups [rsi-0xc0], zmm2; vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x000000004570f6: cld; vzeroupper; ret; 
0x000000004575c5: cli; add [rdi+0x15], esi; jb short 0x00000000004575cd; mov [rdi], cl; ret; 
0x0000000045657f: cli; add [rdx+0x2], esi; mov [rdi], cl; ret; 
0x0000000043eba0: cli; add [rdx+0x4], esi; mov cl, [rsi]; mov [rdi], cl; ret; 
0x0000000047f09b: cli; add al, 0x4c; cmovne eax, eax; mov rax, r8; ret; 
0x0000000047dfc9: cli; add ch, [rcx]; rol bl, 0x1; mov eax, 0xffffffff; ret; 
0x00000000456572: cli; add dh, [rdx+0x8]; mov [rdi], cx; mov [rsi-0x2], cx; ret; 
0x00000000465f84: cli; add ecx, [rdi]; xchg [rax*1+0x39480000], esp; ret; 
0x0000000047fd34: cli; add rsp, 0x8; pop rbp; pop r12; ret; 
0x00000000457524: cli; and [rdi+0xb], dh; movdqu [rdi+rdx-0x10], xmm0; movdqu [rdi], xmm0; ret; 
0x0000000045653b: cli; and [rdx+0xa], dh; vmovdqu [rdi], ymm2; vmovdqu [rsi-0x20], ymm2; ret; 
0x00000000414244: cli; call qword ptr [rax+0x38]; 
0x00000000411869: cli; call qword ptr [rax+r9*8]; 
0x000000004608fd: cli; call qword ptr [rax-0x5e1f00d]; 
0x0000000041f163: cli; cmp qword ptr [rdi+0x38], 0x0; je short 0x000000000041f170; ret; 
0x0000000041b683: cli; cmp qword ptr [rip+0xad914], 0x0; je short 0x000000000041b68f; ret; 
0x00000000459727: cli; dec dword ptr [rax-0x77]; ret; 
0x0000000045a3f3: cli; dec dword ptr [rax-0x77]; ror dword ptr [rax-0x73], 0x40; inc esi; jmp far fword ptr [r15]; 
0x000000004854f5: cli; dec dword ptr [rcx-0x77]; ret; 
0x00000000457a1f: cli; inc dword ptr [rax]; add [rax], al; cmove rax, rcx; ret; 
0x00000000434a3c: cli; jb short 0x0000000000434a47; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000434aec: cli; jb short 0x0000000000434af7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043741c: cli; jb short 0x0000000000437427; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000004374cc: cli; jb short 0x00000000004374d7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000456528: cli; jb short 0x000000000045653a; vmovups [rdi], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x0000000043eb5b: cli; jg short 0x000000000043eb65; vmovdqu [r9-0x10], xmm1; ret; 
0x000000004500eb: cli; jg short 0x0000000000450105; vmovdqu [rdi+rdx-0xf], xmm3; vzeroupper; ret; 
0x0000000045654a: cli; jg short 0x0000000000456554; vmovdqu [rsi-0x10], xmm0; ret; 
0x00000000456bbd: cli; jg short 0x0000000000456bc7; vmovdqu [rdi+rdx-0x10], xmm1; ret; 
0x00000000457025: cli; jg short 0x000000000045702f; vmovdqu [rdi+rdx-0x10], xmm1; ret; 
0x00000000457746: cli; jg short 0x0000000000457750; vzeroupper; ret; 
0x0000000045791c: cli; jg short 0x0000000000457926; vzeroupper; ret; 
0x00000000481f49: cli; jmp far fword ptr [rdx]; 
0x00000000481f4a: cli; jmp far fword ptr [rdx]; 
0x00000000458282: cli; jmp qword ptr [rsi+0x2e]; 
0x00000000460e38: cli; jmp qword ptr [rsi+0x48]; 
0x00000000457b1f: cli; jmp qword ptr [rsi+0x66]; 
0x000000004583e0: cli; jmp qword ptr [rsi+0xf]; 
0x0000000046166c: cli; jmp qword ptr [rsi-0x70]; 
0x0000000045f083: cli; lea rax, [rip+0x6b555]; ret; 
0x00000000498bb3: cli; mov [rdi+0x98], rsi; ret; 
0x00000000436468: cli; mov [rdi-0x4], ecx; ret; 
0x00000000459bd3: cli; mov eax, 0x18; syscall; 
0x0000000045aa13: cli; mov eax, 0x1; syscall; 
0x0000000045acc3: cli; mov eax, 0x1c; syscall; 
0x00000000459643: cli; mov eax, 0x25; syscall; 
0x000000004940a3: cli; mov eax, 0x26; syscall; 
0x00000000490273: cli; mov eax, 0x27; syscall; 
0x0000000045a723: cli; mov eax, 0x3; syscall; 
0x00000000480433: cli; mov eax, 0x3f; syscall; 
0x0000000045d453: cli; mov eax, 0x63; syscall; 
0x00000000480463: cli; mov eax, 0x66; syscall; 
0x00000000480483: cli; mov eax, 0x68; syscall; 
0x00000000480473: cli; mov eax, 0x6b; syscall; 
0x00000000480493: cli; mov eax, 0x6c; syscall; 
0x00000000459f93: cli; mov eax, 0x8; syscall; 
0x0000000045ac93: cli; mov eax, 0xa; syscall; 
0x0000000045ac63: cli; mov eax, 0xb; syscall; 
0x00000000480683: cli; mov eax, 0xc; syscall; 
0x0000000041f223: cli; mov eax, 0xffffffff; ret; 
0x00000000420883: cli; mov eax, [rdi+0x10]; sub eax, [rsi+0x10]; ret; 
0x0000000049ac73: cli; mov eax, [rdi]; test eax, eax; jne short 0x000000000049ac80; ret; 
0x0000000049aeb3: cli; mov eax, [rdi]; test eax, eax; jne short 0x000000000049aec0; ret; 
0x000000004904c3: cli; mov eax, [rip+0x3c71e]; ret; 
0x0000000045f093: cli; mov eax, [rip+0x6dbb6]; test eax, eax; je short 0x000000000045f0a0; ret; 
0x00000000459e53: cli; mov eax, fs:[0x18]; test eax, eax; jne short 0x0000000000459e70; syscall; 
0x00000000436462: cli; mov ecx, [rsi-0x4]; mov [rdi-0x6], edx; mov [rdi-0x4], ecx; ret; 
0x00000000420cd3: cli; mov qword ptr [rip+0xab311], 0x0; mov qword ptr [rip+0xab30e], 0x0; ret; 
0x00000000490283: cli; mov r10, rcx; mov eax, 0x11; syscall; 
0x0000000045d423: cli; mov r10, rcx; mov eax, 0x19; syscall; 
0x0000000048acd3: cli; mov rax, 0xffffffffffffffc0; pop rbx; mov eax, fs:[rax]; ret; 
0x0000000046db83: cli; mov rax, 0xffffffffffffffe0; add rax, fs:[0x0]; ret; 
0x0000000046db63: cli; mov rax, 0xffffffffffffffe8; add rax, fs:[0x0]; ret; 
0x0000000046db43: cli; mov rax, 0xfffffffffffffff0; add rax, fs:[0x0]; ret; 
0x0000000041fca3: cli; mov rax, 0xffffffffffffffff; ret; 
0x0000000048c953: cli; mov rax, [rax+0x8]; ret; 
0x0000000048c963: cli; mov rax, [rax+0x8]; sub rax, fs:[0x0]; ret; 
0x00000000420bf3: cli; mov rax, [rdi+0x68]; ret; 
0x00000000498b13: cli; mov rax, [rdi+0x90]; ret; 
0x00000000498b83: cli; mov rax, [rdi+0x98]; ret; 
0x0000000047d5b3: cli; mov rax, [rdi+0xa0]; cmp qword ptr [rax+0x30], 0x0; je short 0x000000000047d5c8; ret; 
0x00000000498bc3: cli; mov rax, [rdi+0xa0]; ret; 
0x00000000498c23: cli; mov rax, [rdi+0xa8]; ret; 
0x00000000498c13: cli; mov rax, [rdi+0xb0]; ret; 
0x00000000498bd3: cli; mov rax, [rdi+0xb8]; ret; 
0x00000000421a93: cli; mov rax, [rdi]; cmp rax, 0x2000000; jbe short 0x0000000000421aa0; ret; 
0x000000004216f3: cli; mov rax, [rdi]; cmp rax, 0x408; jbe short 0x0000000000421700; ret; 
0x00000000421af3: cli; mov rax, [rdi]; cmp rax, 0xa0; jbe short 0x0000000000421b00; ret; 
0x00000000421733: cli; mov rax, [rdi]; cmp rax, 0xffff; jbe short 0x0000000000421740; ret; 
0x000000004932b3: cli; mov rax, [rdi]; cmp rax, rsi; je short 0x00000000004932c0; ret; 
0x00000000421753: cli; mov rax, [rdi]; nop; mov [rip+0xa83c9], rax; ret; 
0x000000004216e3: cli; mov rax, [rdi]; nop; mov [rip+0xa83e9], rax; ret; 
0x000000004216d3: cli; mov rax, [rdi]; nop; mov [rip+0xa8401], rax; ret; 
0x00000000421ae3: cli; mov rax, [rdi]; nop; mov [rip+0xaa586], eax; ret; 
0x0000000046af83: cli; mov rax, [rip+0x61225]; ret; 
0x000000004615d3: cli; mov rax, [rip+0x6b68d]; ret; 
0x0000000045ab23: cli; mov rax, [rip+0x6f9ad]; test rax, rax; je short 0x000000000045ab31; ret; 
0x00000000420bd3: cli; mov rax, [rip+0xa8905]; ret; 
0x00000000420c03: cli; mov rax, rdi; ret; 
0x0000000049aa51: cli; mov rsi, [r12+r14*8+0x10]; mov rdi, r13; call rax; 
0x000000004148f0: cli; mov rsi, r11; mov rdi, r12; call qword ptr [rcx+0x38]; 
0x0000000046e56d: cli; mov rsi, r12; mov rdi, r14; call rbp; 
0x0000000041c8cf: cli; mov rsi, r14; mov rdi, rbx; call qword ptr [rbp+0x70]; 
0x00000000414711: cli; mov rsi, r8; mov rdi, r12; call qword ptr [rax+0x38]; 
0x00000000432109: cli; movzx edx, dl; sub eax, edx; ret; 
0x00000000456554: cli; or [rdx+0xa], dh; vmovq [rdi], xmm0; vmovq [rsi-0x8], xmm0; ret; 
0x0000000046da92: cli; push rdi; stc; jmp qword ptr [rsi+0x2e]; 
0x000000004574f6: cli; rep stosb [rdi]; mov rax, rdx; ret; 
0x00000000401cb3: cli; ret; 
0x00000000421683: cli; setae al; ret; 
0x000000004215ab: cli; std; dec dword ptr [rax-0x77]; ret; 
0x0000000049d337: cli; sub rsp, 0x8; add rsp, 0x8; ret; 
0x0000000044f748: cli; test rdx, rdx; je 0x000000000044f7f0; bsf rax, rdx; ret; 
0x0000000044f5e9: cli; test rdx, rdx; je short 0x000000000044f600; bsf rax, rdx; ret; 
0x0000000044f58c: cli; test rdx, rdx; je short 0x000000000044f610; bsf rax, rdx; ret; 
0x0000000044f7b8: cli; test rdx, rdx; je short 0x000000000044f7e0; bsf rax, rdx; ret; 
0x000000004574e3: cli; test rdx, rdx; jne short 0x00000000004574ed; mov rax, rdi; ret; 
0x0000000044f6b3: cli; test rsi, rsi; jne short 0x000000000044f6bd; xor rax, rax; ret; 
0x00000000459093: cli; test rsi, rsi; jne short 0x000000000045909d; xor rax, rax; ret; 
0x0000000043efc1: cli; vmovups [rdi-0x1c0], zmm14; vmovups [rdi-0x200], zmm15; ret; 
0x0000000041fc23: cli; xor eax, eax; ret; 
0x0000000045a9e3: cli; xor eax, eax; syscall; 
0x0000000041d503: cli; xor eax, eax; test rdx, rdx; jne short 0x000000000041d510; ret; 
0x0000000047fa81: cmc; and ch, 0xf; je short 0x000000000047faa0; add rax, 0x2; ret; 
0x000000004350cc: cmc; jb short 0x00000000004350d7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043517c: cmc; jb short 0x0000000000435187; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000437aac: cmc; jb short 0x0000000000437ab7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000437b5c: cmc; jb short 0x0000000000437b67; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043b2da: cmc; mov [rdi-0x4], ecx; ret; 
0x00000000435ced: cmc; mov [rdi-0x4], edx; ret; 
0x00000000435007: cmc; mov ecx, 0x63490006; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043b2d3: cmc; mov ecx, [rsi-0x4]; mov [rdi-0xb], rdx; mov [rdi-0x4], ecx; ret; 
0x00000000435e72: cmc; mov edx, [rsi-0x4]; mov [rdi-0xb], rcx; mov [rdi-0x4], edx; ret; 
0x000000004558f2: cmc; movzx edx, byte ptr [rsi-0xb]; sub eax, edx; ret; 
0x00000000461c5b: cmc; stc; jmp qword ptr [rsi+0xf]; 
0x000000004558f7: cmc; sub eax, edx; ret; 
0x00000000490241: cmova edx, eax; mov eax, 0xd9; syscall; 
0x00000000490240: cmova rdx, rax; mov eax, 0xd9; syscall; 
0x0000000042162d: cmovae eax, [rdi+0x10]; sub rax, [rdi+0x18]; ret; 
0x0000000042162c: cmovae rax, [rdi+0x10]; sub rax, [rdi+0x18]; ret; 
0x0000000042167c: cmovbe edx, eax; xor eax, eax; cmp rdx, rdi; setae al; ret; 
0x0000000042167b: cmovbe rdx, rax; xor eax, eax; cmp rdx, rdi; setae al; ret; 
0x0000000048979a: cmove eax, eax; mov rax, r8; ret; 
0x000000004592d8: cmove eax, ebx; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000457a25: cmove eax, ecx; ret; 
0x000000004291b7: cmove eax, edx; add rsp, 0x8; ret; 
0x00000000429671: cmove eax, edx; ret; 
0x00000000489799: cmove r8, rax; mov rax, r8; ret; 
0x000000004592d7: cmove rax, rbx; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000457a24: cmove rax, rcx; ret; 
0x000000004291b6: cmove rax, rdx; add rsp, 0x8; ret; 
0x00000000429670: cmove rax, rdx; ret; 
0x0000000041eb83: cmovg eax, ecx; test rdx, rdx; jne short 0x000000000041eb78; ret; 
0x0000000047cf3b: cmovg eax, ecx; test rdx, rdx; jne short 0x000000000047cf30; ret; 
0x000000004189c9: cmovg edx, ecx; mov [rdi+0xd8], rdx; mov rdx, [rdi+0xa0]; mov [rdx+0xe0], rcx; ret; 
0x0000000041eb82: cmovg rax, rcx; test rdx, rdx; jne short 0x000000000041eb78; ret; 
0x0000000047cf3a: cmovg rax, rcx; test rdx, rdx; jne short 0x000000000047cf30; ret; 
0x000000004189c8: cmovg rdx, rcx; mov [rdi+0xd8], rdx; mov rdx, [rdi+0xa0]; mov [rdx+0xe0], rcx; ret; 
0x0000000045430a: cmovl ecx, [rcx+0x48f9174c]; lea eax, [rdi+rdx]; vzeroupper; ret; 
0x00000000498bf8: cmovne eax, [rsp+0x10]; add rsp, 0x28; ret; 
0x0000000047f09e: cmovne eax, eax; mov rax, r8; ret; 
0x0000000041af44: cmovne eax, ecx; ret; 
0x00000000421b12: cmovne eax, edx; mov [rip+0xaa55c], rax; ret; 
0x00000000428825: cmovne eax, edx; ret; 
0x0000000044f174: cmovne eax, edx; vzeroupper; ret; 
0x0000000047ecd1: cmovne ecx, edi; cmovne rsi, rdx; bsr rsi, rsi; lea rax, [rcx+rsi]; ret; 
0x0000000047ecd5: cmovne esi, edx; bsr rsi, rsi; lea rax, [rcx+rsi]; ret; 
0x0000000047f09d: cmovne r8, rax; mov rax, r8; ret; 
0x00000000498bf7: cmovne rax, [rsp+0x10]; add rsp, 0x28; ret; 
0x0000000041af42: cmovne rax, rcx; ret; 
0x00000000421b11: cmovne rax, rdx; mov [rip+0xaa55c], rax; ret; 
0x00000000428824: cmovne rax, rdx; ret; 
0x0000000044f173: cmovne rax, rdx; vzeroupper; ret; 
0x0000000047ecd0: cmovne rcx, rdi; cmovne rsi, rdx; bsr rsi, rsi; lea rax, [rcx+rsi]; ret; 
0x0000000047ecd4: cmovne rsi, rdx; bsr rsi, rsi; lea rax, [rcx+rsi]; ret; 
0x00000000462d10: cmovs eax, edx; ret; 
0x0000000043eb69: cmovs ecx, [rbx+0x498b4836]; clc; mov [rdi], rsi; mov [r9-0x8], rcx; ret; 
0x0000000045f100: cmovs ecx, [rbx+0x6e9243c]; scasd [rdi]; add al, [rax]; nop [rax+rax]; ret; 
0x000000004231a3: cmovs ecx, [rbx-0x173ef7be]; add al, 0x39; ret; 
0x00000000453709: cmovs ecx, [rcx-0x6f3cf8a9]; movdqu xmm0, [rsi]; movdqu [rdi], xmm0; ret; 
0x00000000457a60: cmovs esp, [rbx+0x4]; xchg esi, eax; add rax, rsi; notrack jmp rax; 
0x0000000041f1e7: cmp [r11+0x5d], bl; pop r12; ret; 
0x0000000041f950: cmp [r13+0x41], r11b; pop rsp; ret; 
0x000000004808da: cmp [r8], rax; je short 0x0000000000480918; leave; xor eax, eax; ret; 
0x0000000041f140: cmp [r9-0x3b7cb7fd], cl; sbb [rbx+0x5d], bl; ret; 
0x00000000431997: cmp [rax+0x1], cl; clc; ret; 
0x00000000478c63: cmp [rax+0x39], cl; ret; 
0x0000000040285c: cmp [rax+0x7c8b000c], bl; and al, 0xc; mov rsi, [rsp+0x10]; mov rax, [rsp+0x18]; call rax; 
0x0000000042fd57: cmp [rax+rax], eax; add [rbp-0x77], cl; ret far; 
0x00000000430537: cmp [rax+rax], ecx; add [rbp-0x77], cl; ret far; 
0x00000000466c8d: cmp [rax-0x75], cl; and al, 0x20; call rax; 
0x0000000048ca69: cmp [rax-0x75], cl; and al, 0x40; add rsp, 0x48; jmp qword ptr [rax]; 
0x0000000048c9e7: cmp [rax-0x75], cl; and al, 0x40; add rsp, 0x58; jmp qword ptr [rax]; 
0x0000000041f91d: cmp [rax-0x77], cl; ret; 
0x00000000431fa6: cmp [rax-0x7f], ecx; mov dword ptr [rax-0x15000000], 0xbc0ff3d0; ror byte ptr [rax+0x1], 0xf8; vzeroupper; ret; 
0x0000000042cf83: cmp [rax], ah; movzx edx, byte ptr [rdx+rdi+0x20]; sub eax, edx; vzeroupper; ret; 
0x00000000431986: cmp [rax], ah; ret; 
0x0000000041f167: cmp [rax], al; je short 0x000000000041f170; ret; 
0x00000000497ac1: cmp [rax], al; je short 0x0000000000497b14; add rsp, 0x18; ret; 
0x0000000044ed04: cmp [rax], dh; cmovne rax, rdx; ret; 
0x00000000431976: cmp [rax], dl; ret; 
0x000000004808db: cmp [rax], eax; je short 0x0000000000480918; leave; xor eax, eax; ret; 
0x00000000431975: cmp [rax], r10b; ret; 
0x0000000042cf82: cmp [rax], r12b; movzx edx, byte ptr [rdx+rdi+0x20]; sub eax, edx; vzeroupper; ret; 
0x00000000431985: cmp [rax], r12b; ret; 
0x0000000044ed03: cmp [rax], sil; cmovne rax, rdx; ret; 
0x0000000041f951: cmp [rbp+0x41], bl; pop rsp; ret; 
0x00000000412864: cmp [rbp], ah; add [rax+0x39], cl; ret; 
0x0000000042066b: cmp [rbx+0x5d], bl; pop r12; pop r13; ret; 
0x0000000041f1e8: cmp [rbx+0x5d], bl; pop r12; ret; 
0x0000000041ac26: cmp [rbx+0x5d], bl; ret; 
0x000000004266ce: cmp [rbx+0xa598a2d], eax; add [rcx], al; pop rbx; ret; 
0x000000004270f4: cmp [rcx+rcx*4-0x9], cl; call rax; 
0x0000000041f141: cmp [rcx-0x3b7cb7fd], cl; sbb [rbx+0x5d], bl; ret; 
0x0000000042309e: cmp [rcx], dh; ror byte ptr [rax-0x75], 0x46; or [rax-0x77], cl; ret; 
0x00000000421629: cmp [rdi+0x10], eax; cmovae rax, [rdi+0x10]; sub rax, [rdi+0x18]; ret; 
0x00000000421628: cmp [rdi+0x10], rax; cmovae rax, [rdi+0x10]; sub rax, [rdi+0x18]; ret; 
0x00000000424bae: cmp [rdi], cl; sbb dword ptr [rcx-0x4], 0xffffffff; jmp qword ptr [rsi+0x49]; 
0x0000000043329d: cmp [rdi], dl; ret; 
0x0000000046daf0: cmp [rdi], esi; je short 0x000000000046daf8; ret; 
0x0000000046daef: cmp [rdi], rsi; je short 0x000000000046daf8; ret; 
0x0000000041af41: cmp [rdx+0x48], eax; cmovne eax, ecx; ret; 
0x0000000041af3f: cmp [rdx+0x48], r8; cmovne eax, ecx; ret; 
0x0000000049953e: cmp [rsi+0x8], ecx; ja short 0x0000000000499545; sbb eax, eax; ret; 
0x0000000049953d: cmp [rsi+0x8], rcx; ja short 0x0000000000499545; sbb eax, eax; ret; 
0x00000000498db6: cmp ah, 0xff; jmp qword ptr [rsi+0xf]; 
0x0000000042cf88: cmp ah, [rax]; sub eax, edx; vzeroupper; ret; 
0x0000000049019f: cmp ah, [rbx-0x25]; cmp ch, [rcx]; shl byte ptr [rsi+0xf], 0x1; outsd dx, [rsi]; ret; 
0x000000004934d7: cmp al, 0x1; sbb esi, esi; and esi, 0x2; syscall; 
0x000000004969b5: cmp al, 0x20; jne short 0x00000000004969e0; mov rax, [rsi+0xa8]; add rsp, 0x8; ret; 
0x0000000041ed47: cmp al, 0x24; add rsp, 0x10; pop rbx; jmp rax; 
0x0000000045bb23: cmp al, 0x24; call rbx; 
0x0000000040f956: cmp al, 0x24; mov rdx, r14; mov rax, [rsp]; call rax; 
0x0000000047f142: cmp al, 0x24; movzx esi, bl; call rbp; 
0x0000000047f206: cmp al, 0x24; push 0x0; lea rcx, [rax+0x1]; lea r9, [rsp+0x28]; call rbx; 
0x0000000041d4e5: cmp al, 0x24; sbb eax, 0xe6ebe074; nop [rax]; xor eax, eax; ret; 
0x00000000490fe3: cmp al, 0x28; add [rdi], cl; test [rdi+rdi*8-0x1], ebp; call far fword ptr [rbx+0x48]; 
0x00000000496ab9: cmp al, 0x2f; ja 0x0000000000401723; movsxd rax, [r14+rax*4]; add rax, r14; notrack jmp rax; 
0x00000000499755: cmp al, 0x30; jne short 0x0000000000499768; mov rax, [rsi+0x10]; add rsp, 0x8; ret; 
0x000000004997b5: cmp al, 0x30; jne short 0x00000000004997c8; mov rax, [rsi+0x10]; add rsp, 0x8; ret; 
0x0000000046e22e: cmp al, 0x30; mov rdx, rbp; mov rsi, r12; mov rdi, r13; call rbx; 
0x000000004969c8: cmp al, 0x40; jne short 0x0000000000496a00; mov rax, [rsi+0xb8]; add rsp, 0x8; ret; 
0x00000000499768: cmp al, 0x50; jne short 0x0000000000499793; xor eax, eax; add rsp, 0x8; ret; 
0x000000004997c8: cmp al, 0x50; jne short 0x00000000004997f3; xor eax, eax; add rsp, 0x8; ret; 
0x0000000049b178: cmp al, 0x50; jne short 0x000000000049b19b; xor eax, eax; add rsp, 0x8; ret; 
0x0000000043d607: cmp al, 0x6; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000498b56: cmp al, 0x8; jne 0x000000000040175a; mov [rcx], rdx; add rsp, 0x8; ret; 
0x00000000402220: cmp al, 0x9f; or al, 0x0; add rsp, 0x88; pop rbx; ret; 
0x00000000490859: cmp al, 0xa; jne 0x00000000004907d9; nop [rax]; call r13; 
0x0000000048e450: cmp al, 0xf3; cld; jmp qword ptr [rsi+0x2e]; 
0x00000000406310: cmp al, [rax-0x80]; call far fword ptr [rax+0xf]; 
0x00000000429710: cmp al, [rax]; add [rax-0x73], cl; adc eax, 0x5326; cmovne rax, rdx; ret; 
0x00000000455c5e: cmp al, [rsi-0x1]; jne 0x0000000000455dd5; xor eax, eax; ret; 
0x00000000455db6: cmp al, [rsi-0x1]; jne short 0x0000000000455dd5; xor eax, eax; ret; 
0x0000000043d787: cmp al, [rsi]; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000041fdd0: cmp al, bl; nop [rax+rax]; sub rax, rcx; sub eax, 0x1; ret; 
0x0000000041931f: cmp al, ch; ret far; 
0x00000000431956: cmp al, dh; ret; 
0x00000000431955: cmp al, r14b; ret; 
0x00000000425df6: cmp ax, 0xa; syscall; 
0x000000004996eb: cmp bh, 0x3; jne short 0x0000000000499710; add rsp, 0x8; ret; 
0x0000000041fc9c: cmp bl, ch; test al, 0x90; endbr64; mov rax, 0xffffffffffffffff; ret; 
0x00000000480918: cmp byte ptr [r8+0x8], 0x2f; jne short 0x00000000004808df; leave; mov eax, 0x1; ret; 
0x00000000480919: cmp byte ptr [rax+0x8], 0x2f; jne short 0x00000000004808df; leave; mov eax, 0x1; ret; 
0x00000000498af2: cmp byte ptr [rdx+rsi], 0x8; jne 0x0000000000401755; mov rax, [rax]; add rsp, 0x8; ret; 
0x0000000048a3a4: cmp byte ptr [rip+0x4273d], 0x0; jne short 0x000000000048a3c0; mov r8, [rip+0x4231c]; mov rax, r8; ret; 
0x000000004342ba: cmp ch, 0xff; jmp qword ptr [rsi+0xf]; 
0x000000004901a2: cmp ch, [rcx]; shl byte ptr [rsi+0xf], 0x1; outsd dx, [rsi]; ret; 
0x0000000045645d: cmp cl, [rax+0x63]; leave; add rax, rcx; sub rax, rdi; ret; 
0x00000000489083: cmp cl, [rcx-0x77]; ret far; 
0x0000000048f665: cmp cx, 0x7fff; jne short 0x000000000048f64c; mov eax, 0x1; ret; 
0x00000000428370: cmp dh, 0xff; jmp qword ptr [rbx+rcx*4+0x4]; 
0x000000004992b8: cmp dh, 0xff; jmp qword ptr [rsi+0xf]; 
0x0000000044f171: cmp dh, [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x000000004578fe: cmp dh, [rdx+0x2]; mov [rdi], cl; vzeroupper; ret; 
0x000000004996ea: cmp dil, 0x3; jne short 0x0000000000499710; add rsp, 0x8; ret; 
0x000000004575c4: cmp dl, 0x1; ja short 0x00000000004575de; jb short 0x00000000004575cd; mov [rdi], cl; ret; 
0x0000000043eb9f: cmp dl, 0x1; jb short 0x000000000043eba8; mov cl, [rsi]; mov [rdi], cl; ret; 
0x0000000045657e: cmp dl, 0x1; jb short 0x0000000000456585; mov [rdi], cl; ret; 
0x0000000045653a: cmp dl, 0x20; jb short 0x0000000000456549; vmovdqu [rdi], ymm2; vmovdqu [rsi-0x20], ymm2; ret; 
0x00000000456571: cmp dl, 0x2; jb short 0x000000000045657e; mov [rdi], cx; mov [rsi-0x2], cx; ret; 
0x00000000456527: cmp dl, 0x40; jb short 0x000000000045653a; vmovups [rdi], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x00000000456566: cmp dl, 0x4; jb short 0x0000000000456571; mov [rdi], ecx; mov [rsi-0x4], ecx; ret; 
0x00000000456553: cmp dl, 0x8; jb short 0x0000000000456562; vmovq [rdi], xmm0; vmovq [rsi-0x8], xmm0; ret; 
0x00000000428885: cmp dl, al; jne short 0x0000000000428870; sub rax, 0x10; ret; 
0x00000000428884: cmp dl, r8b; jne short 0x0000000000428870; sub rax, 0x10; ret; 
0x0000000047d5bc: cmp dword ptr [rax+0x30], 0x0; je short 0x000000000047d5c8; ret; 
0x00000000497abf: cmp dword ptr [rcx+0x38], 0x0; je short 0x0000000000497b14; add rsp, 0x18; ret; 
0x00000000481d62: cmp dword ptr [rcx+0x4c000003], 0xffffff89; ret far; 
0x0000000041f165: cmp dword ptr [rdi+0x38], 0x0; je short 0x000000000041f170; ret; 
0x0000000041b685: cmp dword ptr [rip+0xad914], 0x0; je short 0x000000000041b68f; ret; 
0x0000000042551e: cmp eax, 0x1000a46; pop rbp; ret; 
0x0000000049a924: cmp eax, 0x148b4908; and al, 0x4c; mov edi, esi; call rbp; 
0x0000000045f183: cmp eax, 0x16; ja short 0x000000000045f1a0; movsxd rax, [rbx+rax*4]; add rax, rbx; notrack jmp rax; 
0x0000000045f072: cmp eax, 0x16e80004; cli; jmp qword ptr [rsi+0xf]; 
0x0000000045f1ca: cmp eax, 0x17; ja short 0x000000000045f1a0; movsxd rax, [rbp+rax*4]; add rax, rbp; notrack jmp rax; 
0x00000000459c6e: cmp eax, 0x1; ja short 0x0000000000459ca0; mov eax, 0x4; syscall; 
0x00000000459ccd: cmp eax, 0x1; ja short 0x0000000000459d00; mov eax, 0x5; syscall; 
0x000000004804ae: cmp eax, 0x1; ja short 0x00000000004804e0; mov eax, 0x6; syscall; 
0x0000000045e00d: cmp eax, 0x1e; ja short 0x000000000045e030; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000421a98: cmp eax, 0x2000000; jbe short 0x0000000000421aa0; ret; 
0x0000000047bb3d: cmp eax, 0x29; ja short 0x000000000047bb50; movsxd rax, [rdi+rax*4]; add rax, rdi; notrack jmp rax; 
0x00000000457fcf: cmp eax, 0x2; je short 0x0000000000457fe8; xor eax, eax; ret; 
0x0000000048aa71: cmp eax, 0x2a22d; mov eax, 0x59; mov rbp, rsp; mov rsi, rbp; syscall; 
0x00000000487528: cmp eax, 0x2d1cb; movsxd rax, [rdi+r12*4]; add rax, rdi; notrack jmp rax; 
0x0000000049cf29: cmp eax, 0x2f3b2; syscall; 
0x0000000047bbd9: cmp eax, 0x379fe; movsxd rcx, [rdi+rcx*4]; add rcx, rdi; notrack jmp rcx; 
0x000000004767c2: cmp eax, 0x3c059; lea rsi, [rip+0x503f2]; movzx eax, byte ptr [rdi+rax]; jmp qword ptr [rsi+rax*8]; 
0x0000000048c916: cmp eax, 0x3fa45; lea rax, [rdi-0x1]; cmp rax, 0xfffffffffffffffd; jbe short 0x000000000048c930; ret; 
0x000000004216f8: cmp eax, 0x408; jbe short 0x0000000000421700; ret; 
0x0000000045a96c: cmp eax, 0x410000; je short 0x000000000045a9a0; mov eax, 0x101; syscall; 
0x0000000048a3a5: cmp eax, 0x4273d; add [rbp+0x13], dh; mov r8, [rip+0x4231c]; mov rax, r8; ret; 
0x0000000048a3a6: cmp eax, 0x427; jne short 0x000000000048a3c0; mov r8, [rip+0x4231c]; mov rax, r8; ret; 
0x0000000045de62: cmp eax, 0x44851; mov eax, 0x15; syscall; 
0x0000000047e19e: cmp eax, 0x4; je short 0x000000000047e1a4; ret; 
0x00000000475599: cmp eax, 0x56d52; syscall; 
0x00000000475315: cmp eax, 0x56fd2; syscall; 
0x00000000473291: cmp eax, 0x5904e; syscall; 
0x00000000473151: cmp eax, 0x5918e; syscall; 
0x000000004794f9: cmp eax, 0x5a; ja 0x00000000004789b8; movzx eax, byte ptr [rdx+rax]; lea rcx, [rip+0x4dcb3]; jmp qword ptr [rcx+rax*8]; 
0x0000000047991e: cmp eax, 0x5a; ja 0x00000000004789b8; movzx ecx, byte ptr [rdx+rax]; lea rax, [rip+0x4d78e]; jmp qword ptr [rax+rcx*8]; 
0x0000000047973d: cmp eax, 0x5a; ja 0x00000000004789b8; movzx ecx, byte ptr [rdx+rax]; lea rax, [rip+0x4d86f]; jmp qword ptr [rax+rcx*8]; 
0x0000000046f689: cmp eax, 0x5cc52; syscall; 
0x0000000046f5c4: cmp eax, 0x5cd17; syscall; 
0x0000000046f422: cmp eax, 0x5ceb9; syscall; 
0x0000000046f348: cmp eax, 0x5cf93; syscall; 
0x0000000043d6c9: cmp eax, 0x63490006; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043d487: cmp eax, 0x63490006; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000461b79: cmp eax, 0x6b0f2; syscall; 
0x00000000461a0d: cmp eax, 0x6b25e; syscall; 
0x000000004618ed: cmp eax, 0x6b37e; syscall; 
0x00000000458bf5: cmp eax, 0x74076; syscall; 
0x000000004118c6: cmp eax, 0x7; ja 0x0000000000411f71; movsxd rax, [r14+rax*4]; add rax, r14; notrack jmp rax; 
0x00000000475d86: cmp eax, 0x7; ja 0x0000000000476641; movsxd rax, [r14+rax*4]; add rax, r14; notrack jmp rax; 
0x0000000044d55f: cmp eax, 0x8b00057a; add al, 0x81; mov edx, [rcx+rdx*4]; sub eax, edx; ret; 
0x0000000046fd1a: cmp eax, 0x9; ja short 0x000000000046fcf0; mov rax, r8; ret; 
0x00000000421af8: cmp eax, 0xa0; jbe short 0x0000000000421b00; ret; 
0x00000000428e15: cmp eax, 0xa0d46; syscall; 
0x00000000426215: cmp eax, 0xa3946; syscall; 
0x000000004261b5: cmp eax, 0xa39a6; syscall; 
0x00000000425df5: cmp eax, 0xa3d66; syscall; 
0x00000000425b95: cmp eax, 0xa3fc6; syscall; 
0x000000004255bd: cmp eax, 0xa459e; syscall; 
0x00000000425585: cmp eax, 0xa45d6; syscall; 
0x00000000427175: cmp eax, 0xa4ef6; syscall; 
0x00000000426729: cmp eax, 0xa5932; syscall; 
0x00000000422886: cmp eax, 0xa97d5; syscall; 
0x00000000422855: cmp eax, 0xa9816; syscall; 
0x000000004225d5: cmp eax, 0xa9a96; syscall; 
0x000000004220b1: cmp eax, 0xa9fba; syscall; 
0x00000000420cc7: cmp eax, 0xab324; syscall; 
0x00000000420707: cmp eax, 0xab8e4; syscall; 
0x0000000042039b: cmp eax, 0xabc50; syscall; 
0x00000000420059: cmp eax, 0xabf92; syscall; 
0x0000000041eaf3: cmp eax, 0xad4f8; syscall; 
0x0000000041e853: cmp eax, 0xad798; syscall; 
0x0000000041e4ff: cmp eax, 0xadaec; syscall; 
0x00000000418675: cmp eax, 0xb45f6; syscall; 
0x00000000410784: cmp eax, 0xbc387; syscall; 
0x00000000410644: cmp eax, 0xbc4c7; syscall; 
0x0000000041040d: cmp eax, 0xbc6fe; syscall; 
0x000000004103d2: cmp eax, 0xbc739; syscall; 
0x000000004102ee: cmp eax, 0xbc81d; syscall; 
0x00000000406d22: cmp eax, 0xc4e51; syscall; 
0x0000000040537f: cmp eax, 0xc67bc; syscall; 
0x00000000470dcf: cmp eax, 0xc7000015; test [rdi+rdi*8-0x1], esp; jmp qword ptr [rsi]; 
0x00000000404200: cmp eax, 0xc7893; syscall; 
0x000000004041d2: cmp eax, 0xc78c1; syscall; 
0x00000000404086: cmp eax, 0xc7a0d; syscall; 
0x000000004012de: cmp eax, 0xca8ad; syscall; 
0x00000000421738: cmp eax, 0xffff; jbe short 0x0000000000421740; ret; 
0x00000000459c7b: cmp eax, 0xfffff000; ja short 0x0000000000459c88; ret; 
0x00000000459cda: cmp eax, 0xfffff000; ja short 0x0000000000459ce8; ret; 
0x00000000459e63: cmp eax, 0xfffff000; ja short 0x0000000000459ec0; ret; 
0x00000000459f08: cmp eax, 0xfffff000; ja short 0x0000000000459f60; ret; 
0x00000000459f9c: cmp eax, 0xfffff000; ja short 0x0000000000459fa8; ret; 
0x0000000045a72c: cmp eax, 0xfffff000; ja short 0x000000000045a738; ret; 
0x0000000045a9e9: cmp eax, 0xfffff000; ja short 0x000000000045a9f8; ret; 
0x0000000045aa1c: cmp eax, 0xfffff000; ja short 0x000000000045aa28; ret; 
0x0000000045aa55: cmp eax, 0xfffff000; ja short 0x000000000045aa60; ret; 
0x0000000045abd7: cmp eax, 0xfffff000; ja short 0x000000000045ac40; pop rbx; pop rbp; ret; 
0x000000004804bb: cmp eax, 0xfffff000; ja short 0x00000000004804c8; ret; 
0x00000000480520: cmp eax, 0xfffff000; ja short 0x0000000000480530; ret; 
0x0000000049024c: cmp eax, 0xfffff000; ja short 0x0000000000490258; ret; 
0x0000000049028f: cmp eax, 0xfffff000; ja short 0x00000000004902a0; ret; 
0x0000000045964c: cmp eax, 0xfffff001; jae short 0x0000000000459654; ret; 
0x00000000459bdc: cmp eax, 0xfffff001; jae short 0x0000000000459be4; ret; 
0x0000000045ac6c: cmp eax, 0xfffff001; jae short 0x000000000045ac74; ret; 
0x0000000045ac9c: cmp eax, 0xfffff001; jae short 0x000000000045aca4; ret; 
0x0000000045accc: cmp eax, 0xfffff001; jae short 0x000000000045acd4; ret; 
0x0000000045d42f: cmp eax, 0xfffff001; jae short 0x000000000045d437; ret; 
0x0000000045d45c: cmp eax, 0xfffff001; jae short 0x000000000045d464; ret; 
0x0000000048043c: cmp eax, 0xfffff001; jae short 0x0000000000480444; ret; 
0x000000004940ac: cmp eax, 0xfffff001; jae short 0x00000000004940b4; ret; 
0x0000000048c920: cmp eax, 0xfffffffd; jbe short 0x000000000048c930; ret; 
0x0000000046b78a: cmp eax, 0xfffffffd; je short 0x000000000046b7a8; pop rbx; ret; 
0x000000004291b3: cmp eax, 0xffffffff; cmove rax, rdx; add rsp, 0x8; ret; 
0x0000000048a903: cmp eax, 0xffffffff; cmove rax, rdx; ret; 
0x00000000402c49: cmp eax, 0xffffffff; je 0x0000000000402d38; add rsp, 0x98; ret; 
0x0000000048a944: cmp eax, [rcx+rsi+0x10]; jae short 0x000000000048a8f5; xor eax, eax; ret; 
0x000000004902f6: cmp eax, [rip+0x3c194]; jae short 0x000000000049030a; mov rdx, [rip+0x3c193]; add word ptr [rdx+rax*2], 0x1; ret; 
0x0000000043d932: cmp eax, [rsi]; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000048a349: cmp eax, eax; ja short 0x000000000048a358; add rsp, 0x8; ret; 
0x0000000041bad5: cmp eax, ebp; jae short 0x000000000041bb30; mov esi, 0xffffffff; mov rdi, r8; call qword ptr [r15+0x18]; 
0x00000000419981: cmp eax, ebx; jae 0x000000000041a060; lea rsi, [rsp+0x30]; mov rdi, r15; call qword ptr [r14+0x90]; 
0x0000000041cf3c: cmp eax, ebx; jae 0x000000000041cff0; mov rdi, rbp; call qword ptr [r13+0x20]; 
0x0000000041eb80: cmp eax, ecx; cmovg rax, rcx; test rdx, rdx; jne short 0x000000000041eb78; ret; 
0x0000000047cf38: cmp eax, ecx; cmovg rax, rcx; test rdx, rdx; jne short 0x000000000047cf30; ret; 
0x00000000417518: cmp eax, ecx; jbe 0x0000000000417630; movsxd rdx, r13d; mov rdi, rbx; call qword ptr [r14+0x38]; 
0x000000004184b1: cmp eax, ecx; jbe 0x0000000000418610; xor esi, esi; mov rdi, rbp; call qword ptr [rbx+0x10]; 
0x0000000041a883: cmp eax, ecx; jbe 0x000000000041a960; mov edx, 0x1; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x0000000041c33c: cmp eax, ecx; jbe 0x000000000041c3f0; xor edx, edx; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x0000000041d6dd: cmp eax, ecx; jbe 0x000000000041d7d0; mov rdi, rbx; call qword ptr [r12+0x88]; 
0x0000000041ee89: cmp eax, ecx; jbe 0x000000000041ef10; mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rbx+0x18]; 
0x0000000041f061: cmp eax, ecx; jbe 0x000000000041f0f0; mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rbx+0x18]; 
0x0000000041f56d: cmp eax, ecx; jbe 0x000000000041f718; mov rdi, rbx; call qword ptr [rbp+0x20]; 
0x0000000041f7a6: cmp eax, ecx; jbe 0x000000000041f878; mov rdi, rbx; call qword ptr [r13+0x60]; 
0x0000000041fec0: cmp eax, ecx; jbe 0x0000000000420030; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [r15+0x18]; 
0x0000000047b965: cmp eax, ecx; jbe 0x000000000047ba68; movsxd rdx, ebp; mov rdi, rbx; call qword ptr [r14+0x38]; 
0x0000000047c3cf: cmp eax, ecx; jbe 0x000000000047c4d0; mov rsi, rsp; mov rdi, rbp; call qword ptr [rbx+0x90]; 
0x0000000047d3bf: cmp eax, ecx; jbe 0x000000000047d550; mov esi, r15d; mov rdi, rbp; call qword ptr [r14+0x18]; 
0x0000000041153b: cmp eax, ecx; jbe short 0x00000000004115a0; movsxd r12, r12d; mov rdx, r12; call qword ptr [r13+0x38]; 
0x0000000041df4d: cmp eax, ecx; jbe short 0x000000000041df88; mov rdi, rbp; call qword ptr [rbx+0x88]; 
0x0000000041e239: cmp eax, ecx; jbe short 0x000000000041e298; mov edx, 0x1; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x0000000041f1a6: cmp eax, ecx; jbe short 0x000000000041f210; mov rdi, rbx; call qword ptr [rbp+0x68]; 
0x0000000041f25c: cmp eax, ecx; jbe short 0x000000000041f288; mov rdi, rbx; call qword ptr [rbp+0x20]; 
0x0000000041fcec: cmp eax, ecx; jbe short 0x000000000041fd20; mov rdi, rbx; call qword ptr [rbp+0x30]; 
0x0000000041fd7f: cmp eax, ecx; jbe short 0x000000000041fda0; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp+0x30]; 
0x000000004759da: cmp eax, ecx; jbe short 0x0000000000475a58; movsxd rbx, ebx; mov rdx, rbx; call qword ptr [r13+0x38]; 
0x0000000047de21: cmp eax, ecx; jbe short 0x000000000047de50; mov rdi, rbx; call qword ptr [rbp+0x30]; 
0x00000000455bb2: cmp eax, ecx; jne 0x0000000000455dc0; xor eax, eax; ret; 
0x00000000455d1a: cmp eax, ecx; jne 0x0000000000455dd5; xor eax, eax; ret; 
0x00000000455dd3: cmp eax, ecx; sbb eax, eax; sbb eax, 0xffffffff; ret; 
0x0000000041a01c: cmp eax, edi; jbe 0x000000000041a148; xor edx, edx; mov rdi, r15; call qword ptr [rbx+0x80]; 
0x0000000041f5e9: cmp eax, edi; jbe 0x000000000041f760; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp+0x18]; 
0x0000000047db83: cmp eax, edi; jbe 0x000000000047dd40; mov rdi, r13; call qword ptr [r14+0x20]; 
0x0000000041b76c: cmp eax, edi; jbe short 0x000000000041b790; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x000000004207c1: cmp eax, edi; jbe short 0x0000000000420820; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [r12+0x18]; 
0x00000000420d1f: cmp eax, edx; jae short 0x0000000000420d48; movzx eax, byte ptr [rax]; ret; 
0x0000000042a410: cmp eax, edx; lea rdx, [rip+0x24f07]; lea rax, [rip+0x24ac0]; cmove rax, rdx; ret; 
0x00000000429660: cmp eax, edx; lea rdx, [rip+0x26267]; lea rax, [rip+0x25ea0]; cmove rax, rdx; ret; 
0x000000004296a0: cmp eax, edx; lea rdx, [rip+0x263c7]; lea rax, [rip+0x26000]; cmove rax, rdx; ret; 
0x0000000047f010: cmp eax, edx; lea rdx, [rip+0x5a7]; lea rax, [rip+0x270]; cmove rax, rdx; ret; 
0x0000000042a3d0: cmp eax, edx; lea rdx, [rip+0x7ae7]; lea rax, [rip+0x7600]; cmove rax, rdx; ret; 
0x00000000429f40: cmp eax, edx; lea rdx, [rip+0x7ca7]; lea rax, [rip+0x7760]; cmove rax, rdx; ret; 
0x0000000047efd0: cmp eax, edx; lea rdx, [rip+0xb57]; lea rax, [rip+0x8b0]; cmove rax, rdx; ret; 
0x0000000047e240: cmp eax, edx; lea rdx, [rip+0xb97]; lea rax, [rip+0x890]; cmove rax, rdx; ret; 
0x0000000047defa: cmp eax, esi; ja short 0x000000000047def0; lea eax, [rdx+rdi]; ret; 
0x000000004205f7: cmp eax, esi; jbe 0x00000000004206b0; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [r13+0x18]; 
0x0000000041875c: cmp eax, esi; jbe short 0x00000000004187b8; mov rdi, rbx; call qword ptr [rbp+0x60]; 
0x0000000041909d: cmp eax, esi; jbe short 0x0000000000419114; mov rdi, rbx; call qword ptr [rbp+0x68]; 
0x0000000041ec26: cmp eax, esi; jbe short 0x000000000041ec88; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp+0x18]; 
0x0000000047d2ac: cmp eax, esi; jbe short 0x000000000047d2e8; mov rdi, rbx; call qword ptr [rbp+0x20]; 
0x0000000047debf: cmp eax, esi; jbe short 0x000000000047ded0; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp+0x30]; 
0x000000004932b8: cmp eax, esi; je short 0x00000000004932c0; ret; 
0x0000000042a3a1: cmp eax, esp; add al, [rax]; cmove rax, rdx; ret; 
0x0000000046ceb0: cmp ebp, 0xc; ja 0x000000000046cf93; movsxd r8, [rdx+r9*4]; add r8, rdx; notrack jmp r8; 
0x0000000041cc32: cmp ebp, edx; jbe 0x000000000041cde0; mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rax+0x18]; 
0x0000000047e13a: cmp ebx, 0xa; je short 0x000000000047e140; ret; 
0x0000000041bc90: cmp ebx, eax; jbe 0x000000000041bdc8; mov rsi, rsp; mov rdi, rbp; call qword ptr [r15+0x90]; 
0x0000000041ced6: cmp ebx, eax; jbe 0x000000000041d000; mov rsi, rsp; mov rdi, rbp; call qword ptr [r13+0x90]; 
0x0000000041d0f2: cmp ebx, eax; jbe 0x000000000041d288; mov rsi, rsp; mov rdi, rbp; call qword ptr [r13+0x90]; 
0x0000000041d241: cmp ebx, eax; jbe 0x000000000041d2f0; mov rdi, rbp; call qword ptr [r13+0x20]; 
0x00000000421a1e: cmp ebx, eax; je short 0x0000000000421a25; pop rbx; pop rbp; ret; 
0x0000000045f0b6: cmp ebx, eax; je short 0x000000000045f0c8; mov [rip+0x699e0], eax; pop rbx; ret; 
0x0000000041c543: cmp ebx, edx; jbe 0x000000000041c770; lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax+0x90]; 
0x0000000045f0b5: cmp ebx, r8d; je short 0x000000000045f0c8; mov [rip+0x699e0], eax; pop rbx; ret; 
0x00000000480513: cmp ecx, 0x1; ja short 0x0000000000480548; mov eax, 0x106; syscall; 
0x0000000048f666: cmp ecx, 0xe0757fff; mov eax, 0x1; ret; 
0x0000000045d8f5: cmp ecx, [rax+0x18]; ja short 0x000000000045d90c; mov [rax+0x20], rcx; mov byte ptr [rax+0x28], 0x1; ret; 
0x0000000045d917: cmp ecx, [rax+0x18]; jg short 0x000000000045d90c; mov [rax+0x20], rcx; mov byte ptr [rax+0x28], 0x1; ret; 
0x00000000493c06: cmp ecx, [rax+0x28]; jae short 0x0000000000493bf0; mov eax, 0x1; ret; 
0x000000004608b8: cmp ecx, [rax-0x7d]; ret; 
0x00000000497bcf: cmp ecx, [rcx-0x7d]; ret; 
0x0000000048c01b: cmp ecx, eax; je 0x000000000048bf6a; mov eax, ecx; sub eax, r8d; ret; 
0x000000004333bf: cmp ecx, eax; jne 0x0000000000433df3; xor eax, eax; ret; 
0x000000004333e7: cmp ecx, eax; jne 0x0000000000433dff; xor eax, eax; ret; 
0x00000000433dcb: cmp ecx, eax; jne short 0x0000000000433df3; xor eax, eax; ret; 
0x0000000048d718: cmp ecx, eax; sbb eax, eax; and eax, 0x2; sub eax, 0x1; ret; 
0x000000004808de: cmp ecx, ecx; xor eax, eax; ret; 
0x0000000048962e: cmp ecx, edx; jne short 0x0000000000489608; mov eax, [rcx]; ret; 
0x0000000041fdca: cmp ecx, esi; ja short 0x000000000041fdc0; lea eax, [rdx+rdi]; ret; 
0x0000000048c01a: cmp ecx, r8d; je 0x000000000048bf6a; mov eax, ecx; sub eax, r8d; ret; 
0x0000000048069b: cmp edi, eax; ja short 0x00000000004806c8; xor eax, eax; ret; 
0x0000000048699d: cmp edi, eax; jne short 0x00000000004869a8; pop rbx; ret; 
0x000000004103d3: cmp edi, eax; or eax, [rax]; syscall; 
0x00000000473061: cmp edi, ecx; ja short 0x0000000000473048; mov eax, r8d; ret; 
0x0000000045681d: cmp edi, ecx; jb 0x0000000000456988; mov rcx, rdx; rep movsb [rdi], [rsi]; ret; 
0x00000000456b88: cmp edi, ecx; jb 0x0000000000456d55; mov rcx, rdx; rep movsb [rdi], [rsi]; ret; 
0x00000000456fd3: cmp edi, ecx; jb 0x0000000000457210; mov rcx, rdx; rep movsb [rdi], [rsi]; ret; 
0x000000004567ab: cmp edi, edx; jb short 0x00000000004567b2; rep movsb [rdi], [rsi]; ret; 
0x000000004574b3: cmp edx, 0x20; ja 0x000000000045753c; movdqu [rdi+rdx-0x10], xmm0; movdqu [rdi], xmm0; ret; 
0x00000000457523: cmp edx, 0x20; ja short 0x0000000000457533; movdqu [rdi+rdx-0x10], xmm0; movdqu [rdi], xmm0; ret; 
0x0000000047f09a: cmp edx, 0x4; cmovne r8, rax; mov rax, r8; ret; 
0x00000000482393: cmp edx, 0x7; ja 0x00000000004824bd; movsxd rdx, [r13+rdx*4]; add rdx, r13; notrack jmp rdx; 
0x00000000490235: cmp edx, 0x7fffffff; mov eax, 0x7fffffff; cmova rdx, rax; mov eax, 0xd9; syscall; 
0x00000000457a1e: cmp edx, 0xff; cmove rax, rcx; ret; 
0x0000000047d704: cmp edx, [rax+0x18]; jbe short 0x000000000047d728; mov rax, [rax+0xe0]; mov esi, 0xffffffff; call qword ptr [rax+0x18]; 
0x0000000045d889: cmp edx, [rdi+0x18]; ja short 0x000000000045d8a4; mov [rdi+0x20], rdx; mov byte ptr [rdi+0x28], 0x1; ret; 
0x0000000045d8af: cmp edx, [rdi+0x18]; jg short 0x000000000045d8a4; mov [rdi+0x20], rdx; mov byte ptr [rdi+0x28], 0x1; ret; 
0x00000000431de5: cmp edx, eax; jbe short 0x0000000000431e50; add rax, rdi; vzeroupper; ret; 
0x0000000047f7b5: cmp edx, eax; jbe short 0x000000000047f820; add rax, rdi; vzeroupper; ret; 
0x0000000041c03a: cmp edx, ebx; jae 0x000000000041c370; xor edx, edx; mov rdi, rbp; call qword ptr [rax+0x80]; 
0x0000000041bed9: cmp edx, ebx; jae 0x000000000041c3a8; lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax+0x90]; 
0x0000000046fc96: cmp edx, ecx; jae short 0x000000000046fc7c; mov rax, r8; ret; 
0x0000000049016c: cmp edx, ecx; jle 0x0000000000490210; ret; 
0x000000004563aa: cmp edx, ecx; jle short 0x00000000004563c4; movsxd rax, ecx; ret; 
0x000000004563a9: cmp edx, ecx; jle short 0x00000000004563c4; movsxd rax, ecx; ret; 
0x000000004575af: cmp edx, ecx; jne short 0x0000000000457597; rep ret; 
0x00000000457716: cmp edx, ecx; jne short 0x00000000004576fb; vzeroupper; ret; 
0x000000004578d9: cmp edx, ecx; jne short 0x00000000004578b6; vzeroupper; ret; 
0x00000000421682: cmp edx, edi; setae al; ret; 
0x0000000047f287: cmp edx, esi; je short 0x000000000047f28f; test edx, edx; jne short 0x000000000047f280; ret; 
0x0000000046b768: cmp esi, 0x3; je short 0x000000000046b770; ret; 
0x00000000467b12: cmp esi, 0x860f07ff; pushfq; add [rax], eax; add [rcx+0x3948fc51], cl; ret; 
0x000000004682a8: cmp esi, 0x8d49ffff; add cl, [rax+0x39]; ret far; 
0x0000000045a789: cmp esi, 0x9; je short 0x000000000045a7b8; mov eax, 0x48; syscall; 
0x0000000045a818: cmp esi, 0x9; je short 0x000000000045a848; mov eax, 0x48; syscall; 
0x0000000041d2eb: cmp esi, 0xffffffff; call qword ptr [rax-0x1c7418]; 
0x00000000456ba9: cmp esi, [rdx+0x5]; movzx ecx, byte ptr [rsi]; mov [rdi], cl; ret; 
0x00000000453c03: cmp esi, ebx; add al, 0x0; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000046daee: cmp fs:[rdi], rsi; je short 0x000000000046daf8; ret; 
0x00000000497abe: cmp qword ptr [r9+0x38], 0x0; je short 0x0000000000497b14; add rsp, 0x18; ret; 
0x0000000047d5bb: cmp qword ptr [rax+0x30], 0x0; je short 0x000000000047d5c8; ret; 
0x0000000041f164: cmp qword ptr [rdi+0x38], 0x0; je short 0x000000000041f170; ret; 
0x0000000041b684: cmp qword ptr [rip+0xad914], 0x0; je short 0x000000000041b68f; ret; 
0x0000000041fc9b: cmp r11b, r13b; test al, 0x90; endbr64; mov rax, 0xffffffffffffffff; ret; 
0x0000000047e139: cmp r11d, 0xa; je short 0x000000000047e140; ret; 
0x0000000041cc31: cmp r13, rdx; jbe 0x000000000041cde0; mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rax+0x18]; 
0x0000000048a943: cmp r8, [rcx+rsi+0x10]; jae short 0x000000000048a8f5; xor eax, eax; ret; 
0x000000004934d6: cmp r8b, 0x1; sbb esi, esi; and esi, 0x2; syscall; 
0x00000000459c6d: cmp r8d, 0x1; ja short 0x0000000000459ca0; mov eax, 0x4; syscall; 
0x00000000459ccc: cmp r8d, 0x1; ja short 0x0000000000459d00; mov eax, 0x5; syscall; 
0x000000004804ad: cmp r8d, 0x1; ja short 0x00000000004804e0; mov eax, 0x6; syscall; 
0x00000000480512: cmp r9d, 0x1; ja short 0x0000000000480548; mov eax, 0x106; syscall; 
0x0000000045f182: cmp rax, 0x16; ja short 0x000000000045f1a0; movsxd rax, [rbx+rax*4]; add rax, rbx; notrack jmp rax; 
0x0000000045f1c9: cmp rax, 0x17; ja short 0x000000000045f1a0; movsxd rax, [rbp+rax*4]; add rax, rbp; notrack jmp rax; 
0x0000000045e00c: cmp rax, 0x1e; ja short 0x000000000045e030; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000421a97: cmp rax, 0x2000000; jbe short 0x0000000000421aa0; ret; 
0x000000004216f7: cmp rax, 0x408; jbe short 0x0000000000421700; ret; 
0x0000000046fd19: cmp rax, 0x9; ja short 0x000000000046fcf0; mov rax, r8; ret; 
0x00000000421af7: cmp rax, 0xa0; jbe short 0x0000000000421b00; ret; 
0x00000000421737: cmp rax, 0xffff; jbe short 0x0000000000421740; ret; 
0x00000000459c7a: cmp rax, 0xfffffffffffff000; ja short 0x0000000000459c88; ret; 
0x00000000459cd9: cmp rax, 0xfffffffffffff000; ja short 0x0000000000459ce8; ret; 
0x00000000459e62: cmp rax, 0xfffffffffffff000; ja short 0x0000000000459ec0; ret; 
0x00000000459f07: cmp rax, 0xfffffffffffff000; ja short 0x0000000000459f60; ret; 
0x00000000459f9b: cmp rax, 0xfffffffffffff000; ja short 0x0000000000459fa8; ret; 
0x0000000045a72b: cmp rax, 0xfffffffffffff000; ja short 0x000000000045a738; ret; 
0x0000000045a9e8: cmp rax, 0xfffffffffffff000; ja short 0x000000000045a9f8; ret; 
0x0000000045aa1b: cmp rax, 0xfffffffffffff000; ja short 0x000000000045aa28; ret; 
0x0000000045aa54: cmp rax, 0xfffffffffffff000; ja short 0x000000000045aa60; ret; 
0x0000000045abd6: cmp rax, 0xfffffffffffff000; ja short 0x000000000045ac40; pop rbx; pop rbp; ret; 
0x000000004804ba: cmp rax, 0xfffffffffffff000; ja short 0x00000000004804c8; ret; 
0x0000000048051f: cmp rax, 0xfffffffffffff000; ja short 0x0000000000480530; ret; 
0x0000000049024b: cmp rax, 0xfffffffffffff000; ja short 0x0000000000490258; ret; 
0x0000000049028e: cmp rax, 0xfffffffffffff000; ja short 0x00000000004902a0; ret; 
0x0000000045964b: cmp rax, 0xfffffffffffff001; jae short 0x0000000000459654; ret; 
0x00000000459bdb: cmp rax, 0xfffffffffffff001; jae short 0x0000000000459be4; ret; 
0x0000000045ac6b: cmp rax, 0xfffffffffffff001; jae short 0x000000000045ac74; ret; 
0x0000000045ac9b: cmp rax, 0xfffffffffffff001; jae short 0x000000000045aca4; ret; 
0x0000000045accb: cmp rax, 0xfffffffffffff001; jae short 0x000000000045acd4; ret; 
0x0000000045d42e: cmp rax, 0xfffffffffffff001; jae short 0x000000000045d437; ret; 
0x0000000045d45b: cmp rax, 0xfffffffffffff001; jae short 0x000000000045d464; ret; 
0x0000000048043b: cmp rax, 0xfffffffffffff001; jae short 0x0000000000480444; ret; 
0x000000004940ab: cmp rax, 0xfffffffffffff001; jae short 0x00000000004940b4; ret; 
0x0000000048c91f: cmp rax, 0xfffffffffffffffd; jbe short 0x000000000048c930; ret; 
0x000000004291b2: cmp rax, 0xffffffffffffffff; cmove rax, rdx; add rsp, 0x8; ret; 
0x0000000048a902: cmp rax, 0xffffffffffffffff; cmove rax, rdx; ret; 
0x000000004902f5: cmp rax, [rip+0x3c194]; jae short 0x000000000049030a; mov rdx, [rip+0x3c193]; add word ptr [rdx+rax*2], 0x1; ret; 
0x0000000041bad4: cmp rax, r13; jae short 0x000000000041bb30; mov esi, 0xffffffff; mov rdi, r8; call qword ptr [r15+0x18]; 
0x0000000048a348: cmp rax, r8; ja short 0x000000000048a358; add rsp, 0x8; ret; 
0x00000000419980: cmp rax, rbx; jae 0x000000000041a060; lea rsi, [rsp+0x30]; mov rdi, r15; call qword ptr [r14+0x90]; 
0x0000000041cf3b: cmp rax, rbx; jae 0x000000000041cff0; mov rdi, rbp; call qword ptr [r13+0x20]; 
0x0000000041eb7f: cmp rax, rcx; cmovg rax, rcx; test rdx, rdx; jne short 0x000000000041eb78; ret; 
0x0000000047cf37: cmp rax, rcx; cmovg rax, rcx; test rdx, rdx; jne short 0x000000000047cf30; ret; 
0x00000000417517: cmp rax, rcx; jbe 0x0000000000417630; movsxd rdx, r13d; mov rdi, rbx; call qword ptr [r14+0x38]; 
0x000000004184b0: cmp rax, rcx; jbe 0x0000000000418610; xor esi, esi; mov rdi, rbp; call qword ptr [rbx+0x10]; 
0x0000000041a882: cmp rax, rcx; jbe 0x000000000041a960; mov edx, 0x1; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x0000000041c33b: cmp rax, rcx; jbe 0x000000000041c3f0; xor edx, edx; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x0000000041d6dc: cmp rax, rcx; jbe 0x000000000041d7d0; mov rdi, rbx; call qword ptr [r12+0x88]; 
0x0000000041ee88: cmp rax, rcx; jbe 0x000000000041ef10; mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rbx+0x18]; 
0x0000000041f060: cmp rax, rcx; jbe 0x000000000041f0f0; mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rbx+0x18]; 
0x0000000041f56c: cmp rax, rcx; jbe 0x000000000041f718; mov rdi, rbx; call qword ptr [rbp+0x20]; 
0x0000000041f7a5: cmp rax, rcx; jbe 0x000000000041f878; mov rdi, rbx; call qword ptr [r13+0x60]; 
0x0000000041febf: cmp rax, rcx; jbe 0x0000000000420030; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [r15+0x18]; 
0x0000000047b964: cmp rax, rcx; jbe 0x000000000047ba68; movsxd rdx, ebp; mov rdi, rbx; call qword ptr [r14+0x38]; 
0x0000000047c3ce: cmp rax, rcx; jbe 0x000000000047c4d0; mov rsi, rsp; mov rdi, rbp; call qword ptr [rbx+0x90]; 
0x0000000047d3be: cmp rax, rcx; jbe 0x000000000047d550; mov esi, r15d; mov rdi, rbp; call qword ptr [r14+0x18]; 
0x0000000041153a: cmp rax, rcx; jbe short 0x00000000004115a0; movsxd r12, r12d; mov rdx, r12; call qword ptr [r13+0x38]; 
0x0000000041df4c: cmp rax, rcx; jbe short 0x000000000041df88; mov rdi, rbp; call qword ptr [rbx+0x88]; 
0x0000000041e238: cmp rax, rcx; jbe short 0x000000000041e298; mov edx, 0x1; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x0000000041f1a5: cmp rax, rcx; jbe short 0x000000000041f210; mov rdi, rbx; call qword ptr [rbp+0x68]; 
0x0000000041f25b: cmp rax, rcx; jbe short 0x000000000041f288; mov rdi, rbx; call qword ptr [rbp+0x20]; 
0x0000000041fceb: cmp rax, rcx; jbe short 0x000000000041fd20; mov rdi, rbx; call qword ptr [rbp+0x30]; 
0x0000000041fd7e: cmp rax, rcx; jbe short 0x000000000041fda0; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp+0x30]; 
0x000000004759d9: cmp rax, rcx; jbe short 0x0000000000475a58; movsxd rbx, ebx; mov rdx, rbx; call qword ptr [r13+0x38]; 
0x0000000047de20: cmp rax, rcx; jbe short 0x000000000047de50; mov rdi, rbx; call qword ptr [rbp+0x30]; 
0x0000000041a01b: cmp rax, rdi; jbe 0x000000000041a148; xor edx, edx; mov rdi, r15; call qword ptr [rbx+0x80]; 
0x0000000041f5e8: cmp rax, rdi; jbe 0x000000000041f760; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp+0x18]; 
0x0000000047db82: cmp rax, rdi; jbe 0x000000000047dd40; mov rdi, r13; call qword ptr [r14+0x20]; 
0x0000000041b76b: cmp rax, rdi; jbe short 0x000000000041b790; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x000000004207c0: cmp rax, rdi; jbe short 0x0000000000420820; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [r12+0x18]; 
0x00000000420d1e: cmp rax, rdx; jae short 0x0000000000420d48; movzx eax, byte ptr [rax]; ret; 
0x0000000042a40f: cmp rax, rdx; lea rdx, [rip+0x24f07]; lea rax, [rip+0x24ac0]; cmove rax, rdx; ret; 
0x0000000042965f: cmp rax, rdx; lea rdx, [rip+0x26267]; lea rax, [rip+0x25ea0]; cmove rax, rdx; ret; 
0x0000000042969f: cmp rax, rdx; lea rdx, [rip+0x263c7]; lea rax, [rip+0x26000]; cmove rax, rdx; ret; 
0x0000000047f00f: cmp rax, rdx; lea rdx, [rip+0x5a7]; lea rax, [rip+0x270]; cmove rax, rdx; ret; 
0x0000000042a3cf: cmp rax, rdx; lea rdx, [rip+0x7ae7]; lea rax, [rip+0x7600]; cmove rax, rdx; ret; 
0x00000000429f3f: cmp rax, rdx; lea rdx, [rip+0x7ca7]; lea rax, [rip+0x7760]; cmove rax, rdx; ret; 
0x0000000047efcf: cmp rax, rdx; lea rdx, [rip+0xb57]; lea rax, [rip+0x8b0]; cmove rax, rdx; ret; 
0x0000000047e23f: cmp rax, rdx; lea rdx, [rip+0xb97]; lea rax, [rip+0x890]; cmove rax, rdx; ret; 
0x0000000047def9: cmp rax, rsi; ja short 0x000000000047def0; lea eax, [rdx+rdi]; ret; 
0x000000004205f6: cmp rax, rsi; jbe 0x00000000004206b0; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [r13+0x18]; 
0x0000000041875b: cmp rax, rsi; jbe short 0x00000000004187b8; mov rdi, rbx; call qword ptr [rbp+0x60]; 
0x0000000041909c: cmp rax, rsi; jbe short 0x0000000000419114; mov rdi, rbx; call qword ptr [rbp+0x68]; 
0x0000000041ec25: cmp rax, rsi; jbe short 0x000000000041ec88; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp+0x18]; 
0x0000000047d2ab: cmp rax, rsi; jbe short 0x000000000047d2e8; mov rdi, rbx; call qword ptr [rbp+0x20]; 
0x0000000047debe: cmp rax, rsi; jbe short 0x000000000047ded0; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp+0x30]; 
0x000000004932b7: cmp rax, rsi; je short 0x00000000004932c0; ret; 
0x0000000041bc8f: cmp rbx, rax; jbe 0x000000000041bdc8; mov rsi, rsp; mov rdi, rbp; call qword ptr [r15+0x90]; 
0x0000000041ced5: cmp rbx, rax; jbe 0x000000000041d000; mov rsi, rsp; mov rdi, rbp; call qword ptr [r13+0x90]; 
0x0000000041d0f1: cmp rbx, rax; jbe 0x000000000041d288; mov rsi, rsp; mov rdi, rbp; call qword ptr [r13+0x90]; 
0x0000000041d240: cmp rbx, rax; jbe 0x000000000041d2f0; mov rdi, rbp; call qword ptr [r13+0x20]; 
0x00000000421a1d: cmp rbx, rax; je short 0x0000000000421a25; pop rbx; pop rbp; ret; 
0x0000000041c542: cmp rbx, rdx; jbe 0x000000000041c770; lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax+0x90]; 
0x0000000041c541: cmp rbx, rdx; jbe 0x000000000041c770; lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax+0x90]; 
0x0000000045d8f4: cmp rcx, [rax+0x18]; ja short 0x000000000045d90c; mov [rax+0x20], rcx; mov byte ptr [rax+0x28], 0x1; ret; 
0x0000000045d916: cmp rcx, [rax+0x18]; jg short 0x000000000045d90c; mov [rax+0x20], rcx; mov byte ptr [rax+0x28], 0x1; ret; 
0x00000000493c05: cmp rcx, [rax+0x28]; jae short 0x0000000000493bf0; mov eax, 0x1; ret; 
0x000000004333be: cmp rcx, rax; jne 0x0000000000433df3; xor eax, eax; ret; 
0x00000000433dca: cmp rcx, rax; jne short 0x0000000000433df3; xor eax, eax; ret; 
0x0000000048d717: cmp rcx, rax; sbb eax, eax; and eax, 0x2; sub eax, 0x1; ret; 
0x0000000048962d: cmp rcx, rdx; jne short 0x0000000000489608; mov eax, [rcx]; ret; 
0x0000000041fdc9: cmp rcx, rsi; ja short 0x000000000041fdc0; lea eax, [rdx+rdi]; ret; 
0x0000000045681c: cmp rdi, r9; jb 0x0000000000456988; mov rcx, rdx; rep movsb [rdi], [rsi]; ret; 
0x00000000456b87: cmp rdi, r9; jb 0x0000000000456d55; mov rcx, rdx; rep movsb [rdi], [rsi]; ret; 
0x00000000456fd2: cmp rdi, r9; jb 0x0000000000457210; mov rcx, rdx; rep movsb [rdi], [rsi]; ret; 
0x0000000048069a: cmp rdi, rax; ja short 0x00000000004806c8; xor eax, eax; ret; 
0x0000000048699c: cmp rdi, rax; jne short 0x00000000004869a8; pop rbx; ret; 
0x000000004567aa: cmp rdi, rdx; jb short 0x00000000004567b2; rep movsb [rdi], [rsi]; ret; 
0x000000004574b2: cmp rdx, 0x20; ja 0x000000000045753c; movdqu [rdi+rdx-0x10], xmm0; movdqu [rdi], xmm0; ret; 
0x00000000457522: cmp rdx, 0x20; ja short 0x0000000000457533; movdqu [rdi+rdx-0x10], xmm0; movdqu [rdi], xmm0; ret; 
0x0000000047f099: cmp rdx, 0x4; cmovne r8, rax; mov rax, r8; ret; 
0x00000000490234: cmp rdx, 0x7fffffff; mov eax, 0x7fffffff; cmova rdx, rax; mov eax, 0xd9; syscall; 
0x0000000047d703: cmp rdx, [rax+0x18]; jbe short 0x000000000047d728; mov rax, [rax+0xe0]; mov esi, 0xffffffff; call qword ptr [rax+0x18]; 
0x0000000045d888: cmp rdx, [rdi+0x18]; ja short 0x000000000045d8a4; mov [rdi+0x20], rdx; mov byte ptr [rdi+0x28], 0x1; ret; 
0x0000000045d8ae: cmp rdx, [rdi+0x18]; jg short 0x000000000045d8a4; mov [rdi+0x20], rdx; mov byte ptr [rdi+0x28], 0x1; ret; 
0x00000000431de4: cmp rdx, rax; jbe short 0x0000000000431e50; add rax, rdi; vzeroupper; ret; 
0x0000000047f7b4: cmp rdx, rax; jbe short 0x000000000047f820; add rax, rdi; vzeroupper; ret; 
0x0000000041c038: cmp rdx, rbx; jae 0x000000000041c370; xor edx, edx; mov rdi, rbp; call qword ptr [rax+0x80]; 
0x0000000041c039: cmp rdx, rbx; jae 0x000000000041c370; xor edx, edx; mov rdi, rbp; call qword ptr [rax+0x80]; 
0x0000000041bed8: cmp rdx, rbx; jae 0x000000000041c3a8; lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax+0x90]; 
0x0000000041bed7: cmp rdx, rbx; jae 0x000000000041c3a8; lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax+0x90]; 
0x0000000046fc95: cmp rdx, rcx; jae short 0x000000000046fc7c; mov rax, r8; ret; 
0x000000004575ad: cmp rdx, rcx; jne short 0x0000000000457597; rep ret; 
0x00000000457715: cmp rdx, rcx; jne short 0x00000000004576fb; vzeroupper; ret; 
0x000000004578d8: cmp rdx, rcx; jne short 0x00000000004578b6; vzeroupper; ret; 
0x00000000421681: cmp rdx, rdi; setae al; ret; 
0x0000000044f170: cmp sil, [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x0000000041cc36: cmpsb [rsi], [rdi]; add [rax], eax; add [rsi-0x1], bh; mov rdi, rbp; call qword ptr [rax+0x18]; 
0x00000000429f9e: cmpsb [rsi], [rdi]; add al, [rax]; cmovne rax, rdx; ret; 
0x00000000433849: cmpsb [rsi], [rdi]; add eax, 0xc0310000; ret; 
0x00000000486ff3: cmpsb [rsi], [rdi]; add rax, rsi; notrack jmp rax; 
0x000000004960e6: cmpsb [rsi], [rdi]; jbe short 0x00000000004960e5; jmp qword ptr [rsi+0xf]; 
0x00000000480050: cmpsb [rsi], [rdi]; std; jmp qword ptr [rsp+rax*2-0x77]; 
0x0000000041d245: cmpsd [rsi], [rdi]; add [rax], al; add [rax-0x77], cl; out dx, eax; call qword ptr [r13+0x20]; 
0x0000000047f015: cmpsd [rsi], [rdi]; add eax, 0x8d480000; add eax, 0x270; cmove rax, rdx; ret; 
0x00000000487530: cmpsd [rsi], [rdi]; add rax, rdi; notrack jmp rax; 
0x00000000420c48: cmpsd [rsi], [rdi]; mov bl, 0xa; add [rcx], al; pop rbx; ret; 
0x00000000434f55: cmpsd [rsi], [rdi]; mov edx, 0x63490006; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000422922: cmpxchg [rip+0xa7237], edx; lea rax, [rip+0xa7230]; add rsp, 0x10; pop rbp; ret; 
0x00000000420c38: cmpxchg [rip+0xab3b1], edx; mov [rip+0xab3b2], rbx; add dword ptr [rip+0xab3a7], 0x1; pop rbx; ret; 
0x00000000495ec2: cwde; add [rax], al; add [rbp+0x41], bl; pop rsp; ret; 
0x00000000493eae: cwde; cld; jmp qword ptr [rsi+0x2e]; 
0x00000000414e84: cwde; movzx eax, byte ptr [rbx+rax]; jmp qword ptr [rsi+rax*8]; 
0x000000004145e3: cwde; movzx eax, byte ptr [rbx+rax]; mov rax, [rsi+rax*8]; jmp rax; 
0x00000000412130: cwde; movzx eax, byte ptr [rdi+rax]; jmp qword ptr [rsi+rax*8]; 
0x00000000415479: cwde; movzx ecx, byte ptr [rbx+rax]; lea rax, [rip+0xb0d9b]; mov rax, [rax+rcx*8]; jmp rax; 
0x000000004149c9: cwde; movzx ecx, byte ptr [rbx+rax]; lea rax, [rip+0xb1a4b]; mov rax, [rax+rcx*8]; jmp rax; 
0x00000000414c35: cwde; movzx edx, byte ptr [rbx+rax]; lea rax, [rip+0xb19df]; jmp qword ptr [rax+rdx*8]; 
0x00000000414a32: cwde; movzx edx, byte ptr [rbx+rax]; lea rax, [rip+0xb1ae2]; jmp qword ptr [rax+rdx*8]; 
0x00000000401d5d: cwde; or al, 0x0; add [rbp-0x3d], ebx; nop [rax+rax]; ret; 
0x00000000402800: cwde; or al, 0x0; mov rsi, [rsp+0x10]; mov edi, [rsp+0xc]; call rbp; 
0x00000000422857: cwde; or al, [rax]; syscall; 
0x0000000041e854: cwde; xlat [rbx]; or al, [rax]; syscall; 
0x000000004349c6: data16 ret far; 
0x0000000040a2f0: data64 ret far; 
0x0000000045725f: dec byte ptr [rax+0x6f]; add [rdx-0xf], esp; dec byte ptr [rax+0x6f]; jmp qword ptr [r10-0xf]; 
0x00000000457265: dec byte ptr [rax+0x6f]; jmp qword ptr [r10-0xf]; 
0x0000000043f116: dec byte ptr [rax+0x6f]; pop rcx; jmp qword ptr [rdx-0x2f]; 
0x000000004572c7: dec byte ptr [rax+0x7f]; jg short 0x00000000004572cf; vmovdqu64 [r11], zmm8; vzeroupper; ret; 
0x00000000457451: dec byte ptr [rax+0x7f]; jg short 0x0000000000457459; vmovdqu64 [r11], zmm8; vzeroupper; ret; 
0x000000004570f1: dec byte ptr [rax+0x7f]; jl short 0x000000000045710d; cld; vzeroupper; ret; 
0x00000000457201: dec byte ptr [rax+0x7f]; std; vmovdqu64 [r11], zmm4; vzeroupper; ret; 
0x00000000424a90: dec byte ptr [rax-0x73]; ret; 
0x0000000047d3c9: dec byte ptr [rax-0x77]; out dx, eax; call qword ptr [r14+0x18]; 
0x0000000041c736: dec byte ptr [rax-0x77]; out dx, eax; call qword ptr [rax+0x40]; 
0x00000000405cb5: dec byte ptr [rax-0x77]; ret; 
0x0000000045af38: dec byte ptr [rbp-0x75]; pop rdx; or [rcx-0xa], al; ret; 
0x0000000048cbbe: dec byte ptr [rbx-0x76b70001]; adc [r8+0x5a], bl; pop rbx; ret; 
0x0000000046e250: dec byte ptr [rcx+rcx*4-0x19]; call rbx; 
0x0000000045a78a: dec byte ptr [rcx]; je short 0x000000000045a7b8; mov eax, 0x48; syscall; 
0x0000000045a819: dec byte ptr [rcx]; je short 0x000000000045a848; mov eax, 0x48; syscall; 
0x00000000456864: dec byte ptr [rdi]; mov bh, 0x36; mov [rdi+rdx-0x2], cx; mov [rdi], si; ret; 
0x000000004336c2: dec dword ptr [r15]; mov dh, 0x4e; jmp far fword ptr [rcx]; 
0x00000000433475: dec dword ptr [r15]; mov dh, 0x56; jmp far fword ptr [rcx]; 
0x0000000048c91d: dec dword ptr [r8-0x7d]; clc; std; jbe short 0x000000000048c930; ret; 
0x0000000048bbd6: dec dword ptr [rax+0x1]; ret; 
0x000000004122d6: dec dword ptr [rax+0x29]; bnd call qword ptr [rbx+0x38]; 
0x000000004600e0: dec dword ptr [rax+0x29]; ret far; 
0x00000000406675: dec dword ptr [rax+0x29]; ret; 
0x000000004657e9: dec dword ptr [rax+0x3948074a]; ret; 
0x0000000048d9b0: dec dword ptr [rax+0x39]; ret far; 
0x0000000040efda: dec dword ptr [rax+0x39]; ret; 
0x0000000046dbe8: dec dword ptr [rax+0x5]; add [rdx], al; add [rax], al; mov fs:[rdx], rax; ret; 
0x0000000046db2a: dec dword ptr [rax+0x63]; jmp qword ptr [rax+rcx*2-0x75]; 
0x000000004891f1: dec dword ptr [rax+0x63]; ret; 
0x0000000047edc9: dec dword ptr [rax+0xf]; mov ebp, 0xf80148c6; ret; 
0x0000000047e9f7: dec dword ptr [rax-0x39]; add [r8], r8b; add [rax], al; add bl, ch; ret far; 
0x00000000403eba: dec dword ptr [rax-0x39]; mov al, [0xfff868e9ffffffff]; jmp qword ptr [rbx+rcx*4+0x4]; 
0x000000004042b3: dec dword ptr [rax-0x39]; ret; 
0x00000000497797: dec dword ptr [rax-0x46]; mov eax, 0xf; syscall; 
0x00000000401be9: dec dword ptr [rax-0x73]; adc eax, 0x9ffd3; movsxd rax, [rdx+rcx*4]; add rax, rdx; notrack jmp rax; 
0x00000000429f11: dec dword ptr [rax-0x73]; add eax, 0x2bed7; cmove rax, rdx; ret; 
0x00000000417d03: dec dword ptr [rax-0x73]; lea rdx, [rbx+0x34]; mov esi, 0x1; mov rdi, rbx; call rax; 
0x000000004343b6: dec dword ptr [rax-0x73]; push rdx; sar byte ptr [rsi], 0x41; jmp rcx; 
0x000000004975ca: dec dword ptr [rax-0x75]; add ecx, [rbp-0x73]; or ecx, [eax-0x7d]; ret; 
0x000000004611c6: dec dword ptr [rax-0x75]; jne short 0x000000000046115b; mov rdi, rbx; call rsi; 
0x0000000048cb80: dec dword ptr [rax-0x77]; adc [r8+0x5a], bl; pop rbx; ret; 
0x00000000401f3c: dec dword ptr [rax-0x77]; adc [rax-0x75], cl; clc; leave; ret; 
0x00000000424167: dec dword ptr [rax-0x77]; add al, 0x24; call rdx; 
0x0000000042683e: dec dword ptr [rax-0x77]; add eax, 0xa32fa; ret; 
0x00000000426830: dec dword ptr [rax-0x77]; add eax, 0xa3310; lea rax, [rip-0xc6f]; mov [rip+0xa32fa], rax; ret; 
0x00000000495dab: dec dword ptr [rax-0x77]; add ebx, [rax+0x5a]; pop rbx; ret; 
0x00000000479dc5: dec dword ptr [rax-0x77]; fimul st, dword ptr [rcx+rcx*4-0x32]; mov rdi, r12; call qword ptr [rax+0x38]; 
0x0000000041cc3e: dec dword ptr [rax-0x77]; out dx, eax; call qword ptr [rax+0x18]; 
0x0000000041ee95: dec dword ptr [rax-0x77]; out dx, eax; call qword ptr [rbx+0x18]; 
0x00000000476514: dec dword ptr [rax-0x77]; ret far; 
0x00000000404b26: dec dword ptr [rax-0x77]; ret; 
0x0000000045a3f4: dec dword ptr [rax-0x77]; ror dword ptr [rax-0x73], 0x40; inc esi; jmp far fword ptr [r15]; 
0x00000000475aef: dec dword ptr [rax-0x77]; test [rax], ebp; idiv edi; jmp qword ptr [rax+rcx*2-0x75]; 
0x0000000041163a: dec dword ptr [rax-0x77]; test [rax], edi; idiv edi; jmp qword ptr [rax+rcx*2-0x75]; 
0x0000000048ff52: dec dword ptr [rax-0x7b]; shl byte ptr [rax+rcx+0x5b], 0x5d; pop r12; ret; 
0x000000004134e5: dec dword ptr [rax-0x7d]; clc; dec dword ptr [rax-0x77]; ret; 
0x0000000048c91e: dec dword ptr [rax-0x7d]; clc; std; jbe short 0x000000000048c930; ret; 
0x000000004069ba: dec dword ptr [rax-0x7d]; ret; 
0x0000000045ced9: dec dword ptr [rax-0x7f]; ret; 
0x00000000412a9e: dec dword ptr [rax-0x91c7b]; inc dword ptr [rcx-0x7d]; in al, dx; add ch, cl; ret far; 
0x00000000421bd9: dec dword ptr [rax-0x9]; fisttp dword ptr [rax+0x21], st; ret; 
0x00000000476fe9: dec dword ptr [rbp+0x63]; ret; 
0x00000000495453: dec dword ptr [rbp+r9*4+0x74]; ret; 
0x000000004710e5: dec dword ptr [rbp+rcx*4+0x3d]; ret far; 
0x00000000495454: dec dword ptr [rbp+rcx*4+0x74]; ret; 
0x000000004605e4: dec dword ptr [rbp+rcx*4+0x7b]; jmp qword ptr [rbp+rax*2-0x75]; 
0x0000000040702b: dec dword ptr [rbp-0x73]; je short 0x0000000000407036; add [rax-0x9], ecx; ror byte ptr [rax+0x1], 0x1; ret; 
0x00000000406f83: dec dword ptr [rbp-0x73]; jl short 0x0000000000406f8f; add [rax-0x9], ecx; ror byte ptr [rax+0x1], 0x1; ret; 
0x000000004683e4: dec dword ptr [rbp-0x77]; ret; 
0x0000000042bbbd: dec dword ptr [rbx+0x7]; add [rdi+0x63], cl; or al, 0x8a; lea r10, [r10+r9]; notrack jmp r10; 
0x000000004776a6: dec dword ptr [rbx+rcx*4-0x5b]; clc; idiv bh; jmp qword ptr [rsi-0x70]; 
0x00000000477765: dec dword ptr [rbx+rcx*4-0x73]; clc; idiv bh; inc dword ptr [rcx]; ret far; 
0x00000000479ee4: dec dword ptr [rbx-0x4d76b]; dec dword ptr [rcx-0x4df73]; jmp far fword ptr [rcx]; 
0x000000004627ef: dec dword ptr [rbx-0x8b63]; jmp qword ptr [rcx+rcx*4+0x18]; 
0x000000004127e2: dec dword ptr [rbx-0x8ef4b]; inc dword ptr [rbp-0x7b]; in al, 0xf; lahf; ret; 
0x000000004127bf: dec dword ptr [rbx-0x8ef7b]; inc dword ptr [rcx]; ret; 
0x00000000404872: dec dword ptr [rbx-0xd34b]; jmp qword ptr [rcx+rcx*4+0x30]; 
0x0000000040460a: dec dword ptr [rbx-0xd363]; jmp qword ptr [rcx+rcx*4+0x18]; 
0x00000000404794: dec dword ptr [rbx-0xd373]; jmp qword ptr [rcx+rcx*4+0x8]; 
0x00000000467f5c: dec dword ptr [rcx+0x3948fc51]; ret; 
0x0000000049678d: dec dword ptr [rcx+0x39]; ret far; 
0x00000000405f5b: dec dword ptr [rcx+0x3c8348c9]; ret far; 
0x00000000496ac0: dec dword ptr [rcx+0x63]; add al, 0x86; add rax, r14; notrack jmp rax; 
0x00000000403f3f: dec dword ptr [rcx+rcx*4+0x3d]; xor [rbx+0xc], edi; add cl, ch; ret far; 
0x0000000046f3c9: dec dword ptr [rcx+rcx*4+0x65]; mov eax, 0xfffdd4e9; jmp qword ptr [rbx+rcx*4+0x4]; 
0x00000000414238: dec dword ptr [rcx+rcx*4-0x12]; mov rdi, r12; sub r15, r13; mov rdx, r15; call qword ptr [rax+0x38]; 
0x0000000048a4e7: dec dword ptr [rcx+rcx*4-0x20]; pop rbx; pop rbp; pop r12; ret; 
0x00000000475f69: dec dword ptr [rcx+rcx*4-0x36]; mov rsi, r12; mov rdi, r13; call qword ptr [rcx+0x38]; 
0x0000000041badd: dec dword ptr [rcx+rcx*4-0x39]; call qword ptr [r15+0x18]; 
0x0000000041970c: dec dword ptr [rcx+rcx*4-0x39]; call qword ptr [rax+0x18]; 
0x000000004147dd: dec dword ptr [rcx+rcx*4-0x3a]; mov rdi, r12; sub r15, r8; mov rdx, r15; call qword ptr [rax+0x38]; 
0x000000004771c9: dec dword ptr [rcx+rcx*4-0x3e]; mov rsi, r12; mov rdi, r13; call qword ptr [r15+0x38]; 
0x00000000471a25: dec dword ptr [rcx+rcx*4-0x3e]; mov rsi, r14; mov rdi, r12; mov [rbp-0xe8], r8; call rax; 
0x000000004148ed: dec dword ptr [rcx+rcx*4-0x6]; mov rsi, r11; mov rdi, r12; call qword ptr [rcx+0x38]; 
0x0000000041470e: dec dword ptr [rcx+rcx*4-0x6]; mov rsi, r8; mov rdi, r12; call qword ptr [rax+0x38]; 
0x000000004824e8: dec dword ptr [rcx-0x13343]; jmp qword ptr [rsi-0x7d]; 
0x0000000048c022: dec dword ptr [rcx-0x3fd6bb38]; ret; 
0x000000004792d6: dec dword ptr [rcx-0x4df73]; jmp far fword ptr [rcx]; 
0x000000004682ab: dec dword ptr [rcx-0x73]; add cl, [rax+0x39]; ret far; 
0x000000004995bd: dec dword ptr [rcx-0x73]; sbb al, 0xcc; mov rsi, [rbx]; call rax; 
0x0000000047fec7: dec dword ptr [rcx-0x74bb9b11]; sub ebp, eax; test al, 0xfd; jmp qword ptr [rsp+rax*2-0x77]; 
0x0000000049958e: dec dword ptr [rcx-0x75]; adc cl, [rax-0x75]; and al, 0x8; mov [rsp+0x10], r10; call rax; 
0x0000000047f13f: dec dword ptr [rcx-0x75]; cmp al, 0x24; movzx esi, bl; call rbp; 
0x0000000049b96a: dec dword ptr [rcx-0x75]; jge short 0x000000000049b97f; add rdi, rbp; call r12; 
0x0000000045cfd1: dec dword ptr [rcx-0x77]; jmp qword ptr [rax+rcx*2-0x75]; 
0x00000000468129: dec dword ptr [rcx-0x77]; ret far; 
0x00000000410d2f: dec dword ptr [rcx-0x77]; ret; 
0x00000000423ad1: dec dword ptr [rcx-0x7b]; ret; 
0x00000000468fd4: dec dword ptr [rcx-0x7d]; ret; 
0x000000004217de: dec dword ptr [rcx-0x9]; ret; 
0x00000000401bee: dec dword ptr [rcx]; add [rax+0x63], cl; add al, 0x8a; add rax, rdx; notrack jmp rax; 
0x0000000041f9fd: dec dword ptr [rdi]; adc [rdi+0xa0], eax; ret; 
0x00000000482142: dec dword ptr [rdi]; mov bh, 0x3d; ret; 
0x000000004139a7: dec dword ptr [rdi]; mov bh, 0x8d; pop rsp; idiv edi; jmp qword ptr [rsi-0x77]; 
0x0000000048bef2: dec dword ptr [rdi]; mov dh, 0x45; add ecx, [rax-0x7d]; ret; 
0x00000000479501: dec dword ptr [rdi]; mov dh, 0x4; add cl, [rax-0x73]; or eax, 0x4dcb3; jmp qword ptr [rcx+rax*8]; 
0x00000000479b1f: dec dword ptr [rdi]; mov dh, 0x4; add cl, [rcx-0x77]; ret far; 
0x000000004336c3: dec dword ptr [rdi]; mov dh, 0x4e; jmp far fword ptr [rcx]; 
0x00000000497992: dec dword ptr [rdi]; mov dh, 0x53; add cl, [rax-0x7d]; ret; 
0x00000000433476: dec dword ptr [rdi]; mov dh, 0x56; jmp far fword ptr [rcx]; 
0x00000000471df6: dec dword ptr [rdi]; mov dh, 0x58; or al, 0x89; fdiv st, st(6); ret; 
0x00000000470753: dec dword ptr [rdi]; mov dh, 0x58; or al, 0xf6; ret; 
0x00000000497bb3: dec dword ptr [rdi]; mov dh, 0xc0; movsxd rax, [r13+rax*4]; add rax, r13; notrack jmp rax; 
0x00000000479926: dec dword ptr [rdi]; mov dh, 0xc; add cl, [rax-0x73]; add eax, 0x4d78e; jmp qword ptr [rax+rcx*8]; 
0x00000000479745: dec dword ptr [rdi]; mov dh, 0xc; add cl, [rax-0x73]; add eax, 0x4d86f; jmp qword ptr [rax+rcx*8]; 
0x0000000045bca4: dec dword ptr [rdi]; test [rbp+0x49000002], esi; mov edi, [rsi]; call rbx; 
0x0000000045c640: dec dword ptr [rdi]; test [rbx+0x4c000005], esi; mov [rsp+0x8], eax; mov rdi, [r8]; call rbx; 
0x0000000045c076: dec dword ptr [rdi]; test [rbx+0x4c000009], eax; mov [rsp+0x8], eax; mov rdi, [r8]; call rbx; 
0x0000000045bcd4: dec dword ptr [rdi]; test [rbx], ebp; add al, [rax]; add [rcx-0x75], cl; notrack call rbx; 
0x0000000045bd04: dec dword ptr [rdi]; test [rcx+0x49000001], esp; mov edi, [rsi]; call rbx; 
0x0000000045bc44: dec dword ptr [rdi]; test [rdi], eax; add al, [rax]; add [rcx-0x75], cl; notrack call rbx; 
0x0000000045bc74: dec dword ptr [rdi]; test [rdi], edi; add eax, [rax]; add [rcx-0x75], cl; notrack call rbx; 
0x0000000045c609: dec dword ptr [rdi]; test [rdx+0x4c000001], ebx; mov [rsp+0x8], eax; mov rdi, [r8]; call rbx; 
0x0000000045c1bd: dec dword ptr [rdi]; test [rdx+0x4c000007], esi; mov [rsp+0x8], eax; mov rdi, [r8]; call rbx; 
0x0000000045c1f4: dec dword ptr [rdi]; test [rip+0x4c00000a], ebp; mov [rsp+0x8], eax; mov rdi, [r8]; call rbx; 
0x00000000455c5f: dec dword ptr [rdi]; test [rsi+0x1], ebp; add [rax], al; xor eax, eax; ret; 
0x0000000045c3e3: dec dword ptr [rdi]; test [rsi+0x4c000004], esp; mov [rsp+0x8], eax; mov rdi, [r8]; call rbx; 
0x00000000405f55: dec dword ptr [rdi]; test [rsp+rdi*8-0x1], al; dec dword ptr [rcx+0x3c8348c9]; ret far; 
0x000000004145f0: dec dword ptr [rdi]; test cl, al; or [rax], eax; add [rax-0x80], al; jmp qword ptr [rdi+rcx]; 
0x0000000045bd34: dec dword ptr [rdi]; test ecx, ebx; add al, [rax]; add [rcx-0x75], cl; notrack call rbx; 
0x00000000429080: dec dword ptr [rdx-0x73]; jl short 0x00000000004290aa; and [rcx], dh; imul al; ret; 
0x000000004657e8: dec qword ptr [rax+0x3948074a]; ret; 
0x0000000046b765: div byte ptr [rax+rcx-0x7d]; inc byte ptr [rbx]; je short 0x000000000046b770; ret; 
0x0000000045bc10: div byte ptr [rbp+0x1d]; mov rdi, [r13]; call rbx; 
0x0000000048f5b8: div byte ptr [rbp+0x25]; mov dword ptr [rdx], 0x0; mov eax, 0x1; ret; 
0x0000000048f649: div byte ptr [rbp+0x2c]; mov dword ptr [rdx], 0x0; mov eax, 0x1; ret; 
0x0000000044f6b6: div byte ptr [rbp+0x4]; xor rax, rax; ret; 
0x00000000439786: div byte ptr [rbp+0x6]; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000045b965: div byte ptr [rbp+0x8]; add rsp, 0x8; pop rbp; pop r12; ret; 
0x0000000045ba13: div byte ptr [rbp+0xa]; pop rbp; pop r12; pop r13; ret; 
0x0000000046dcd9: div byte ptr [rbp+0xc]; mov [rbx+0x40], esi; xor eax, eax; pop rbx; ret; 
0x0000000048f662: div byte ptr [rbp-0x13]; cmp cx, 0x7fff; jne short 0x000000000048f64c; mov eax, 0x1; ret; 
0x00000000489721: div byte ptr [rbx+rax+0x48]; mov [rsi], edi; mov rax, r8; ret; 
0x00000000461c67: div byte ptr [rcx]; jmp qword ptr [rsi+0xf]; 
0x00000000439a86: div byte ptr [rdx+0x6]; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434f7c: div byte ptr [rdx+0x7]; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000428809: div byte ptr [rsp+rcx+0x48]; lea eax, [rax-0x10]; ret; 
0x00000000434e2d: div dword ptr [rdx+0x7]; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000473075: div ecx; add r8d, eax; mov eax, r8d; ret; 
0x00000000457afd: div ecx; mov eax, eax; ret; 
0x00000000457ae6: div esi; mov eax, eax; ret; 
0x00000000434e2c: div qword ptr [rdx+0x7]; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000496845: divps xmm0, [rip+0x23770]; ret; 
0x00000000496844: divss xmm0, [rip+0x23770]; ret; 
0x0000000047fd31: endbr64; add rsp, 0x8; pop rbp; pop r12; ret; 
0x0000000041f160: endbr64; cmp qword ptr [rdi+0x38], 0x0; je short 0x000000000041f170; ret; 
0x0000000041b680: endbr64; cmp qword ptr [rip+0xad914], 0x0; je short 0x000000000041b68f; ret; 
0x0000000045f080: endbr64; lea rax, [rip+0x6b555]; ret; 
0x00000000498bb0: endbr64; mov [rdi+0x98], rsi; ret; 
0x00000000459bd0: endbr64; mov eax, 0x18; syscall; 
0x0000000045aa10: endbr64; mov eax, 0x1; syscall; 
0x0000000045acc0: endbr64; mov eax, 0x1c; syscall; 
0x00000000459640: endbr64; mov eax, 0x25; syscall; 
0x000000004940a0: endbr64; mov eax, 0x26; syscall; 
0x00000000490270: endbr64; mov eax, 0x27; syscall; 
0x0000000045a720: endbr64; mov eax, 0x3; syscall; 
0x00000000480430: endbr64; mov eax, 0x3f; syscall; 
0x0000000045d450: endbr64; mov eax, 0x63; syscall; 
0x00000000480460: endbr64; mov eax, 0x66; syscall; 
0x00000000480480: endbr64; mov eax, 0x68; syscall; 
0x00000000480470: endbr64; mov eax, 0x6b; syscall; 
0x00000000480490: endbr64; mov eax, 0x6c; syscall; 
0x00000000459f90: endbr64; mov eax, 0x8; syscall; 
0x0000000045ac90: endbr64; mov eax, 0xa; syscall; 
0x0000000045ac60: endbr64; mov eax, 0xb; syscall; 
0x00000000480680: endbr64; mov eax, 0xc; syscall; 
0x0000000041f220: endbr64; mov eax, 0xffffffff; ret; 
0x00000000420880: endbr64; mov eax, [rdi+0x10]; sub eax, [rsi+0x10]; ret; 
0x0000000049ac70: endbr64; mov eax, [rdi]; test eax, eax; jne short 0x000000000049ac80; ret; 
0x0000000049aeb0: endbr64; mov eax, [rdi]; test eax, eax; jne short 0x000000000049aec0; ret; 
0x000000004904c0: endbr64; mov eax, [rip+0x3c71e]; ret; 
0x0000000045f090: endbr64; mov eax, [rip+0x6dbb6]; test eax, eax; je short 0x000000000045f0a0; ret; 
0x00000000459e50: endbr64; mov eax, fs:[0x18]; test eax, eax; jne short 0x0000000000459e70; syscall; 
0x00000000420cd0: endbr64; mov qword ptr [rip+0xab311], 0x0; mov qword ptr [rip+0xab30e], 0x0; ret; 
0x00000000490280: endbr64; mov r10, rcx; mov eax, 0x11; syscall; 
0x0000000045d420: endbr64; mov r10, rcx; mov eax, 0x19; syscall; 
0x0000000048acd0: endbr64; mov rax, 0xffffffffffffffc0; pop rbx; mov eax, fs:[rax]; ret; 
0x0000000046db80: endbr64; mov rax, 0xffffffffffffffe0; add rax, fs:[0x0]; ret; 
0x0000000046db60: endbr64; mov rax, 0xffffffffffffffe8; add rax, fs:[0x0]; ret; 
0x0000000046db40: endbr64; mov rax, 0xfffffffffffffff0; add rax, fs:[0x0]; ret; 
0x0000000041fca0: endbr64; mov rax, 0xffffffffffffffff; ret; 
0x0000000048c950: endbr64; mov rax, [rax+0x8]; ret; 
0x0000000048c960: endbr64; mov rax, [rax+0x8]; sub rax, fs:[0x0]; ret; 
0x00000000420bf0: endbr64; mov rax, [rdi+0x68]; ret; 
0x00000000498b10: endbr64; mov rax, [rdi+0x90]; ret; 
0x00000000498b80: endbr64; mov rax, [rdi+0x98]; ret; 
0x0000000047d5b0: endbr64; mov rax, [rdi+0xa0]; cmp qword ptr [rax+0x30], 0x0; je short 0x000000000047d5c8; ret; 
0x00000000498bc0: endbr64; mov rax, [rdi+0xa0]; ret; 
0x00000000498c20: endbr64; mov rax, [rdi+0xa8]; ret; 
0x00000000498c10: endbr64; mov rax, [rdi+0xb0]; ret; 
0x00000000498bd0: endbr64; mov rax, [rdi+0xb8]; ret; 
0x00000000421a90: endbr64; mov rax, [rdi]; cmp rax, 0x2000000; jbe short 0x0000000000421aa0; ret; 
0x000000004216f0: endbr64; mov rax, [rdi]; cmp rax, 0x408; jbe short 0x0000000000421700; ret; 
0x00000000421af0: endbr64; mov rax, [rdi]; cmp rax, 0xa0; jbe short 0x0000000000421b00; ret; 
0x00000000421730: endbr64; mov rax, [rdi]; cmp rax, 0xffff; jbe short 0x0000000000421740; ret; 
0x000000004932b0: endbr64; mov rax, [rdi]; cmp rax, rsi; je short 0x00000000004932c0; ret; 
0x00000000421750: endbr64; mov rax, [rdi]; nop; mov [rip+0xa83c9], rax; ret; 
0x000000004216e0: endbr64; mov rax, [rdi]; nop; mov [rip+0xa83e9], rax; ret; 
0x000000004216d0: endbr64; mov rax, [rdi]; nop; mov [rip+0xa8401], rax; ret; 
0x00000000421ae0: endbr64; mov rax, [rdi]; nop; mov [rip+0xaa586], eax; ret; 
0x0000000046af80: endbr64; mov rax, [rip+0x61225]; ret; 
0x000000004615d0: endbr64; mov rax, [rip+0x6b68d]; ret; 
0x0000000045ab20: endbr64; mov rax, [rip+0x6f9ad]; test rax, rax; je short 0x000000000045ab31; ret; 
0x00000000420bd0: endbr64; mov rax, [rip+0xa8905]; ret; 
0x00000000420c00: endbr64; mov rax, rdi; ret; 
0x00000000401cb0: endbr64; ret; 
0x0000000049d334: endbr64; sub rsp, 0x8; add rsp, 0x8; ret; 
0x000000004574e0: endbr64; test rdx, rdx; jne short 0x00000000004574ed; mov rax, rdi; ret; 
0x0000000044f6b0: endbr64; test rsi, rsi; jne short 0x000000000044f6bd; xor rax, rax; ret; 
0x00000000459090: endbr64; test rsi, rsi; jne short 0x000000000045909d; xor rax, rax; ret; 
0x0000000041fc20: endbr64; xor eax, eax; ret; 
0x0000000045a9e0: endbr64; xor eax, eax; syscall; 
0x0000000041d500: endbr64; xor eax, eax; test rdx, rdx; jne short 0x000000000041d510; ret; 
0x0000000042a035: enter 0x0, 0x48; lea edx, [rip+0x11ea1]; cmovne rax, rdx; ret; 
0x0000000041ed1d: enter 0x1076, 0x48; mov eax, [rbx+0x18]; add rsp, 0x10; pop rbx; jmp rax; 
0x0000000044f399: enter 0x148, 0xf8; vzeroupper; ret; 
0x0000000042a334: enter 0x2, 0x48; cmove eax, edx; ret; 
0x00000000455dd0: enter 0x275, 0x39; enter 0xc019, 0x83; fdivr st, st(7); ret; 
0x0000000041f25d: enter 0x2876, 0x48; mov edi, ebx; call qword ptr [rbp+0x20]; 
0x0000000048f696: enter 0x289, 0xb8; add [rax], eax; add [rax], al; ret; 
0x0000000048c024: enter 0x2944, 0xc0; ret; 
0x0000000041b767: enter 0x2948, 0xcf; cmp rax, rdi; jbe short 0x000000000041b790; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x00000000459377: enter 0x2948, 0xd0; shr rax, 0x2; vzeroupper; ret; 
0x0000000044f92e: enter 0x2948, 0xd0; vzeroupper; ret; 
0x000000004563e7: enter 0x2948, 0xf8; ret; 
0x0000000047de22: enter 0x2b76, 0x48; mov edi, ebx; call qword ptr [rbp+0x30]; 
0x0000000041fced: enter 0x3076, 0x48; mov edi, ebx; call qword ptr [rbp+0x30]; 
0x00000000418e94: enter 0x3176, 0x48; movsxd edx, ebx; mov rsi, r13; mov rdi, r15; call qword ptr [rbp+0x38]; 
0x0000000042b85d: enter 0x31c3, 0xc0; ret; 
0x0000000041df4e: enter 0x3776, 0x48; mov edi, ebp; call qword ptr [rbx+0x88]; 
0x00000000475718: enter 0x415d, 0x5c; pop r13; pop r14; ret; 
0x0000000041d4af: enter 0x4676, 0x31; idiv byte ptr [rcx+0x3]; mov edx, 0x1; mov rdi, rbx; call qword ptr [rbp+0x48]; 
0x00000000483d2d: enter 0x4800, 0x89; ret; 
0x0000000040f7a0: enter 0x50f, 0x48; mov edi, eax; mov eax, 0xba; syscall; 
0x0000000041e23a: enter 0x5b76, 0xba; add [rax], eax; add [rax], al; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x000000004073a9: enter 0x5d5b, 0x41; pop rsp; ret; 
0x00000000434170: enter 0x6, 0x49; movsxd edx, [rbx+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000041153c: enter 0x6176, 0x4d; movsxd esp, esp; mov rdx, r12; call qword ptr [r13+0x38]; 
0x0000000041026e: enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x0000000041d3d7: enter 0x6676, 0x31; idiv byte ptr [rdx+0x2]; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x0000000041f1a7: enter 0x6676, 0x48; mov edi, ebx; call qword ptr [rbp+0x68]; 
0x0000000041f2f2: enter 0x6b76, 0x41; movzx esi, byte ptr [rsi]; lea r15, [r14+0x1]; mov rdi, r12; call qword ptr [rbx+0x18]; 
0x000000004759db: enter 0x7a76, 0x48; movsxd ebx, ebx; mov rdx, rbx; call qword ptr [r13+0x38]; 
0x00000000463639: enter 0x830f, 0x24; add al, 0x0; add [rax-0x77], cl; ret far; 
0x0000000047eb33: enter 0x840f, 0xc6; add [rax], eax; add [rax+0xf], cl; mov ebp, 0xf80148c0; ret; 
0x000000004184b2: enter 0x860f, 0x57; add [rax], eax; add [rcx], dh; test byte ptr [rax-0x77], 0xef; call qword ptr [rbx+0x10]; 
0x0000000041fec1: enter 0x860f, 0x68; add [rax], eax; add [rsi-0x1], bh; mov rdi, rbx; call qword ptr [r15+0x18]; 
0x0000000041ee8a: enter 0x860f, 0x7f; add [rax], al; add [rsi-0x1], bh; mov rdi, rbp; call qword ptr [rbx+0x18]; 
0x0000000041f062: enter 0x860f, 0x87; add [rax], al; add [rsi-0x1], bh; mov rdi, rbp; call qword ptr [rbx+0x18]; 
0x0000000047d3c0: enter 0x860f, 0x89; add [rax], eax; add [rcx+rcx*4-0x2], al; mov rdi, rbp; call qword ptr [r14+0x18]; 
0x0000000041a884: enter 0x860f, 0xd5; add [rax], al; add [rdx+0x1], bh; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x000000004028ea: enter 0x8902, 0xc2; mov esi, edx; mov edi, 0x3002; mov eax, 0x9e; syscall; 
0x0000000048de96: enter 0x894c, 0x47; clc; shl r9, cl; mov [rdi-0x10], r9; ret; 
0x0000000048de16: enter 0x894c, 0x7; shl r9, cl; mov [rdi-0x8], r9; ret; 
0x0000000048df30: enter 0x894c, 0x7; shr r9, cl; mov [rdi+0x8], r9; ret; 
0x0000000047e032: enter 0x8d49, 0x14; nop; mov [rax], rdx; xor eax, eax; ret; 
0x000000004102f0: enter 0xb, 0xf; add eax, 0xffff28e9; jmp qword ptr [rsi+0xf]; 
0x00000000455dd4: enter 0xc019, 0x83; fdivr st, st(7); ret; 
0x0000000047fa62: enter 0xc148, 0xe8; add al, [rdx+rdx*8-0x2e77ea8c]; and cl, 0xf; je short 0x000000000047fa90; ret; 
0x0000000046d419: enter 0xd231, 0xe8; out dx, eax; ret; 
0x0000000048f5f1: enter 0xd348, 0xe6; mov [rdi], rsi; mov [rdx], eax; mov eax, 0x1; ret; 
0x0000000041fdda: enter 0xe883, 0x1; ret; 
0x00000000473b7b: enter 0xf41, 0x94; ret; 
0x0000000041eb81: enter 0xf48, 0x4f; ror dword ptr [rax-0x7b], 0xd2; jne short 0x000000000041eb78; ret; 
0x0000000047cf39: enter 0xf48, 0x4f; ror dword ptr [rax-0x7b], 0xd2; jne short 0x000000000047cf30; ret; 
0x0000000044ed59: enter 0xf66, 0xeb; ret; 
0x0000000042d0e0: enter 0xf8c5, 0x77; ret; 
0x00000000433e1a: enter 0xfc3, 0x1f; add [rip+0xff], spl; and ecx, 0xff; sub eax, ecx; ret; 
0x000000004325a7: enter 0xfc3, 0x1f; add byte ptr [rax], 0x0; add [rax], al; xor eax, eax; ret; 
0x0000000045a585: enter 0xfffc, 0xe9; ret far; 
0x0000000049d330: enter 0xfffd, 0xff; endbr64; sub rsp, 0x8; add rsp, 0x8; ret; 
0x00000000432654: enter 0xfffe, 0xff; ret; 
0x00000000458083: fadd st(3), st; nop [rax]; xor eax, eax; ret; 
0x0000000047974e: fadd st, dword ptr [rax+rax]; jmp qword ptr [rax+rcx*8]; 
0x0000000040512d: fadd st, dword ptr [rax-0x80]; jmp far fword ptr [rdi+0x41]; 
0x000000004189cf: fadd st, dword ptr [rax]; add [rax], al; mov rdx, [rdi+0xa0]; mov [rdx+0xe0], rcx; ret; 
0x00000000410f9f: fadd st, dword ptr [rax]; add [rax], al; ret; 
0x000000004151ff: fadd st, dword ptr [rbp-0x777af040]; add eax, 0x89440000; ror byte ptr [rcx-0x4ef73], 0x1; jmp far fword ptr [rcx]; 
0x00000000489796: fadd st, dword ptr [rcx+rcx*8-0x3fbbf0b4]; mov rax, r8; ret; 
0x0000000047950a: fadd st, qword ptr [rax+rax]; jmp qword ptr [rcx+rax*8]; 
0x00000000479530: fadd st, qword ptr [rax+rax]; mov r11, rcx; mov dword ptr [rbp-0x514], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x00000000432c48: fadd st, qword ptr [rsi]; add [rcx+0x63], cl; or al, 0x93; add rcx, r11; notrack jmp rcx; 
0x0000000044fa4b: fcmovnb st, st(5); std; xlat [rbx]; ret; 
0x00000000484adb: fcomp st, dword ptr [rbx+0x5d]; pop r12; pop r13; pop r14; ret; 
0x0000000041d3fa: fcomp st, dword ptr [rbx+0x5d]; pop r12; ret; 
0x0000000041a61f: fcomp st, dword ptr [rbx+0x5d]; ret; 
0x00000000496835: fcomp st, dword ptr [rbx+0x7420e783]; adc bl, dh; movups xmm0, [rip+0x23774]; divss xmm0, [rip+0x23770]; ret; 
0x00000000462370: fcomp st, qword ptr [rbp-0x4]; dec dword ptr [rax-0x77]; ret; 
0x0000000048ba10: fdiv st(4), st; jmp qword ptr [rsi+0x66]; 
0x0000000048fab7: fdiv st(4), st; jmp qword ptr [rsi+0xf]; 
0x0000000047ad4c: fdiv st(7), st; call qword ptr [rax-0x77276b4]; 
0x00000000413cf3: fdiv st(7), st; jmp qword ptr [rsi+0x2e]; 
0x00000000413d34: fdiv st(7), st; jmp qword ptr [rsi+0xf]; 
0x00000000471dfc: fdiv st, st(6); ret; 
0x0000000047984d: fdivp st(7), st; call far fword ptr [rdi]; 
0x00000000413b2f: fdivp st(7), st; jmp qword ptr [rsi+0xf]; 
0x0000000041d8dd: fdivr st, dword ptr [rsi]; jmp rax; 
0x0000000048ff33: fdivr st, st(4); jmp qword ptr [rsi+0x2e]; 
0x0000000046ff07: fdivr st, st(6); jmp qword ptr [rsi+0xf]; 
0x0000000047b2ec: fdivr st, st(7); call qword ptr [rax+0x30be]; 
0x0000000049b349: fdivr st, st(7); dec dword ptr [rax-0x77]; ret; 
0x00000000455dd8: fdivr st, st(7); ret; 
0x0000000042ce61: ffreep st(5); std; xlat [rbx]; ret far; 
0x0000000046ceb5: fiadd st, dword ptr [rax]; add [rax], al; movsxd r8, [rdx+r9*4]; add r8, rdx; notrack jmp r8; 
0x00000000432e21: fiadd st, dword ptr [rsi]; add [rcx+0x63], cl; or al, 0x93; add rcx, r11; notrack jmp rcx; 
0x00000000418a0b: fiadd st, word ptr [r8]; add [rax-0x7b], cl; ror byte ptr [rdi], 0x84; mov dword ptr [rax], 0x89480000; ret; 
0x00000000453b5e: fiadd st, word ptr [rax+rax]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000418a0c: fiadd st, word ptr [rax]; add [rax-0x7b], cl; ror byte ptr [rdi], 0x84; mov dword ptr [rax], 0x89480000; ret; 
0x00000000460442: fiadd st, word ptr [rcx]; add [rax-0x77], cl; ret; 
0x0000000045c30a: fiadd st, word ptr [rip-0x76b40000]; and al, 0x8; mov rdi, [r8]; call rbx; 
0x00000000432a4b: fiadd st, word ptr [rsi]; add [rcx+0x63], cl; or al, 0x93; add rcx, r11; notrack jmp rcx; 
0x00000000453bd7: fiadd st, word ptr gs:[rax+rax]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000457b18: ficomp st, word ptr [rdi+0x6fe80004]; mov bh, 0xfa; jmp qword ptr [rsi+0x66]; 
0x0000000040f1b2: fidivr st, dword ptr [rsi]; jmp r10; 
0x0000000041b2ef: fidivr st, word ptr [rdi+0x2]; mov eax, r9d; syscall; 
0x00000000432cdd: fild st, dword ptr [rsi]; add [rcx+0x63], cl; or al, 0x93; add rcx, r11; notrack jmp rcx; 
0x00000000453b06: fild st, word ptr [rax+rax]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000412975: fild st, word ptr [rax-0x8df43]; call far fword ptr [rax+0x44]; 
0x00000000496ab5: fild st, word ptr [rip+0x2f3c0000]; ja 0x0000000000401723; movsxd rax, [r14+rax*4]; add rax, r14; notrack jmp rax; 
0x00000000432919: fild st, word ptr [rsi]; add [rcx+0x63], cl; or al, 0x93; add rcx, r11; notrack jmp rcx; 
0x0000000044f865: fimul st, dword ptr [rax+0xf]; mov esp, 0xd00148d2; sub rax, rdi; ret; 
0x00000000459245: fimul st, dword ptr [rax+0xf]; mov esp, 0xd00148d2; sub rax, rdi; shr rax, 0x2; ret; 
0x0000000045abcb: fimul st, dword ptr [rax-0x77]; out dx, eax; mov eax, 0x9; syscall; 
0x00000000412b7f: fimul st, dword ptr [rcx+rcx*4-0x1a]; mov rdi, r15; call qword ptr [rcx+0x38]; 
0x00000000479dc8: fimul st, dword ptr [rcx+rcx*4-0x32]; mov rdi, r12; call qword ptr [rax+0x38]; 
0x0000000048f4fc: fimul st, word ptr [rbp+0x11]; ret far; 
0x0000000045e5ab: fimul st, word ptr [rbp-0x75]; sbb [rax+0x1], ecx; ret far; 
0x000000004148f3: fimul st, word ptr [rcx+rcx*4-0x19]; call qword ptr [rcx+0x38]; 
0x0000000041588e: fimul st, word ptr [rcx+rcx*4-0x19]; mov [rbp-0x4f0], r9d; call qword ptr [rax+0x38]; 
0x00000000415351: fimul st, word ptr [rcx+rcx*4-0x19]; mov [rbp-0x4f8], r9d; call qword ptr [rbx+0x38]; 
0x00000000415ae3: fimul st, word ptr [rcx+rcx*4-0x19]; mov [rbp-0x508], r10d; mov [rbp-0x500], r11; call qword ptr [rax+0x38]; 
0x00000000427f72: fimul st, word ptr [rcx+rcx*4-0x3e]; pop rbx; pop rbp; pop r12; jmp rax; 
0x000000004274f2: fistp qword ptr [rax+0xca], st; syscall; 
0x0000000041d56c: fistp qword ptr [rdx+0x1], st; call qword ptr [r14+0x80]; 
0x00000000414c3d: fistp word ptr [rcx], st; or eax, [rax]; jmp qword ptr [rax+rdx*8]; 
0x00000000421bdc: fisttp dword ptr [rax+0x21], st; ret; 
0x000000004966ea: fisttp dword ptr [rax+0x9], st; ror dword ptr [rdi], cl; xchg esp, eax; ret; 
0x0000000048e4d5: fisttp dword ptr [rax-0x77], st; ret; 
0x0000000045ced2: fisttp dword ptr [rax-0x7f], st; jrcxz 0x000000000045ced7; loop 0x000000000045ced8; dec dword ptr [rax-0x7f]; ret; 
0x00000000463706: fisttp dword ptr [rcx+0x39], st; test dword ptr [rdi], 0x33486; add [rcx-0xa], al; ret; 
0x00000000414857: fisttp dword ptr [rdi], st; test [rdx], esp; sbb [rax], eax; add [rcx-0x80], al; call qword ptr [rbx+0xf]; 
0x0000000041e4d3: fisttp dword ptr [rdx], st; add [rcx], al; ret; 
0x0000000042868a: fisttp qword ptr [rax-0x3f], st; in eax, dx; or [rax-0x7f], ecx; sti; jmp far fword ptr [rcx]; 
0x0000000045b2a4: fisttp qword ptr [rax-0x77], st; out dx, eax; call r12; 
0x0000000047875c: fisttp qword ptr [rcx-0x3f], st; std; add cl, [rcx+rcx*4-0x16]; call qword ptr [rax+0x38]; 
0x0000000041b9eb: fisttp word ptr [rax+0x29], st; bnd call qword ptr [r12+0x70]; 
0x000000004193b2: fisttp word ptr [rax+0x29], st; bnd call qword ptr [rax+0x70]; 
0x00000000403083: fisttp word ptr [rax-0x7d], st; ret; 
0x0000000048e56e: fisttp word ptr [rax], st; add rdx, r8; mov rax, rdx; pop rbx; ret; 
0x00000000406841: fisttp word ptr [rdi], st; mov dh, 0x43; add [rax-0x7d], ecx; ret; 
0x00000000490245: fld st, dword ptr [rax]; add [rax], al; syscall; 
0x0000000045bd37: fld st, dword ptr [rdx]; add [rax], al; mov rdi, [r14]; call rbx; 
0x00000000432f53: fld st, dword ptr [rsi]; add [rcx+0x63], cl; or al, 0x93; add rcx, r11; notrack jmp rcx; 
0x000000004794b0: fld st, qword ptr [rax+rax]; mov r11, rcx; mov dword ptr [rbp-0x528], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000049cadd: fld st, qword ptr [rax]; mov rax, [rax+rbx*8]; test rax, rax; je short 0x000000000049caea; call rax; 
0x0000000040f6ee: fld st, st(3); ret; 
0x0000000048b145: fld st, tbyte ptr [rsp+0x30]; mov rsp, rbx; mov rbx, [rsp]; add rsp, 0x30; bnd ret; 
0x000000004017d7: fldcw [rbx+0xc]; add [rax], al; pop rdx; ret; 
0x0000000047f479: fldenv [rsi+0xf]; jbe short 0x000000000047f4cd; xor [rsi+0xf], ah; xlat [rbx]; ret; 
0x00000000431899: fldenv [rsi+0xf]; je short 0x00000000004318ed; xor [rsi+0xf], ah; xlat [rbx]; ret; 
0x00000000431b87: fldenv [rsi+0xf]; je short 0x0000000000431bdb; xor [rsi+0xf], ah; xlat [rbx]; ret; 
0x00000000431791: fldenv [rsi+0xf]; xlat [rbx]; ret; 
0x0000000048f564: fmul st, dword ptr [rax+0x11]; rcr byte ptr [rbp+0x5b], 0x1; ret; 
0x0000000041aa7e: fmul st, dword ptr [rax-0x77]; ret; 
0x0000000049892d: fmul st, dword ptr [rcx+rcx*4-0x1f]; or esi, 0x2; mov edi, 0x1; call rax; 
0x0000000041cf3d: fmul st, dword ptr [rdi]; sub dword ptr [rax+rax-0x76b80000], 0xffffffef; call qword ptr [r13+0x20]; 
0x0000000045aab0: fmul st, dword ptr [rdi]; xchg edx, eax; rol byte ptr [rax+rax*8-0x38b7af8c], 0xc0; sar bh, 0xff; jmp qword ptr [rdi+rax*8]; 
0x0000000048b853: fmul st, qword ptr [rax-0x75]; sbb al, 0x24; add rsp, 0x18; bnd jmp r11; 
0x0000000048b03a: fmul st, qword ptr [rax-0x75]; sbb al, 0x24; add rsp, 0x30; bnd jmp r11; 
0x0000000048b14c: fmul st, qword ptr [rax-0x75]; sbb al, 0x24; add rsp, 0x30; bnd ret; 
0x0000000045a034: fmul st, qword ptr [rax-0x77]; std; mov rdi, rbp; mov eax, 0x4f; syscall; 
0x000000004837b2: fmul st, qword ptr [rax-0x7d]; ret; 
0x00000000433e80: fnstcw [rsi]; jmp r9; 
0x00000000432817: fnstcw [rsi]; jmp rcx; 
0x00000000415924: fsin; jmp qword ptr [rsi+0xf]; 
0x00000000453b5d: fstp st(6), st; add al, 0x0; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000045645c: fstp tbyte ptr [rdx], st; movsxd rcx, ecx; add rax, rcx; sub rax, rdi; ret; 
0x0000000042a65f: fsub st(1), st; imul edi, 0xffffffff; jmp qword ptr [rsi+0x66]; 
0x0000000045965c: fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x00000000459c90: fsub st, dword ptr [rcx+rcx*4+0x2]; mov eax, 0xffffffff; ret; 
0x00000000459ec8: fsub st, dword ptr [rcx+rcx*4+0x2]; mov rax, 0xffffffffffffffff; ret; 
0x000000004806b0: fsub st, dword ptr [rcx+rcx*4+0x2]; xor eax, eax; mov qword ptr [rip+0x4bc37], 0xffffffffffffffff; ret; 
0x00000000493f14: fsub st, dword ptr [rcx]; add [rax], al; mov [rbx+0x18], rax; pop rbx; ret; 
0x00000000450584: fsub st, dword ptr [rsi+0xf]; xlat [rbx]; ret; 
0x0000000044ee7c: fsub st, qword ptr [rsi+0xf]; xlat [rbx]; ret; 
0x0000000046bb9b: fsubp st(0), st; call qword ptr [rcx+rdi*8-0x1]; 
0x00000000431563: fsubr st, qword ptr [rcx]; enter 0xf8c5, 0x77; ret; 
0x00000000483b64: fucomi st, st(3); ret; 
0x0000000042a355: fwait; add [rax], al; lea rdx, [rip+0xf091]; cmovne rax, rdx; ret; 
0x00000000415481: fwait; or eax, 0x8b48000b; add al, 0xc8; jmp rax; 
0x00000000422a31: fwait; xor [rax], eax; add [rax-0x77], cl; add eax, 0xa7104; ret; 
0x0000000040c02d: fxsave [rcx]; add cl, ch; pop rdx; idiv bh; jmp qword ptr [rsi+0x2e]; 
0x0000000047bbd4: hint-not-taken ja short 0x000000000047bc00; lea rdi, [rip+0x379fe]; movsxd rcx, [rdi+rcx*4]; add rcx, rdi; notrack jmp rcx; 
0x0000000049aa55: hlt; adc [rcx+rcx*4-0x11], cl; call rax; 
0x0000000044bfc9: hlt; adc al, [rax]; add [rbp-0x77], cl; ret far; 
0x0000000044cec9: hlt; add eax, [rax]; add [rbp-0x77], cl; ret far; 
0x0000000043521c: hlt; jb short 0x0000000000435227; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000004352cc: hlt; jb short 0x00000000004352d7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000437bfc: hlt; jb short 0x0000000000437c07; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000437cac: hlt; jb short 0x0000000000437cb7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043b25a: hlt; mov [rdi-0x4], ecx; ret; 
0x00000000435edd: hlt; mov [rdi-0x4], edx; ret; 
0x0000000043b253: hlt; mov ecx, [rsi-0x4]; mov [rdi-0xc], rdx; mov [rdi-0x4], ecx; ret; 
0x0000000045969e: hlt; mov edi, edx; mov eax, r8d; syscall; 
0x00000000436052: hlt; mov edx, [rsi-0x4]; mov [rdi-0xc], rcx; mov [rdi-0x4], edx; ret; 
0x000000004901fb: hlt; movsxd rcx, ecx; add rax, rcx; sub rax, rdi; ret; 
0x000000004558e2: hlt; movzx edx, byte ptr [rsi-0xc]; sub eax, edx; ret; 
0x00000000401cae: hlt; nop; endbr64; ret; 
0x000000004558e7: hlt; sub eax, edx; ret; 
0x000000004876ec: idiv bh; call qword ptr [rax+0x4cf8894c]; 
0x0000000045ee3c: idiv bh; call qword ptr [rax+0x792d8b48]; 
0x000000004126e1: idiv bh; call qword ptr [rax]; 
0x00000000476fe7: idiv bh; dec dword ptr [rbp+0x63]; ret; 
0x000000004776a4: idiv bh; dec dword ptr [rbx+rcx*4-0x5b]; clc; idiv bh; jmp qword ptr [rsi-0x70]; 
0x00000000405a16: idiv bh; inc dword ptr [rax-0x80]; jmp qword ptr [rdi+rcx-0x7c]; 
0x000000004876d8: idiv bh; inc dword ptr [rbx+0x7425087b]; fisttp word ptr [rax-0x7d], st; ret; 
0x00000000412aa2: idiv bh; inc dword ptr [rcx-0x7d]; in al, dx; add ch, cl; ret far; 
0x0000000047776a: idiv bh; inc dword ptr [rcx]; ret far; 
0x0000000041389e: idiv bh; inc edi; test eax, edi; idiv bh; call qword ptr [rax]; 
0x00000000475e2d: idiv bh; inc esi; test esp, ecx; idiv bh; jmp qword ptr [rax]; 
0x00000000475e33: idiv bh; jmp qword ptr [rax]; 
0x0000000040c033: idiv bh; jmp qword ptr [rsi+0x2e]; 
0x000000004228e0: idiv bh; jmp qword ptr [rsi+0x66]; 
0x000000004160b6: idiv bh; jmp qword ptr [rsi+0xf]; 
0x00000000405a5f: idiv bh; jmp qword ptr [rsi+0xf]; 
0x0000000047697b: idiv bh; jmp qword ptr [rsi-0x70]; 
0x00000000498b5c: idiv bh; mov [rcx], rdx; add rsp, 0x8; ret; 
0x00000000498afa: idiv bh; mov rax, [rax]; add rsp, 0x8; ret; 
0x00000000496abf: idiv bh; movsxd rax, [r14+rax*4]; add rax, r14; notrack jmp rax; 
0x00000000497bb2: idiv bh; movzx eax, al; movsxd rax, [r13+rax*4]; add rax, r13; notrack jmp rax; 
0x00000000497d67: idiv bh; movzx esi, sil; movsxd rax, [r12+rsi*4]; add rax, r12; notrack jmp rax; 
0x00000000497d2a: idiv bh; movzx esi, sil; movsxd rax, [r9+rsi*4]; add rax, r9; notrack jmp rax; 
0x00000000496a07: idiv bh; nop [rax]; xor eax, eax; ret; 
0x000000004969ed: idiv bh; xor eax, eax; add rsp, 0x8; ret; 
0x0000000041d4b3: idiv byte ptr [rcx+0x3]; mov edx, 0x1; mov rdi, rbx; call qword ptr [rbp+0x48]; 
0x00000000402920: idiv byte ptr [rdi+0x3003]; mov eax, 0x9e; syscall; 
0x00000000419f30: idiv byte ptr [rdx+0x1]; mov rdi, r15; call qword ptr [rbp+0x80]; 
0x0000000041c2a8: idiv byte ptr [rdx+0x1]; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x00000000419d3a: idiv byte ptr [rdx+0x2]; mov rdi, r15; call qword ptr [r13+0x80]; 
0x0000000041c1d4: idiv byte ptr [rdx+0x2]; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x0000000041d3db: idiv byte ptr [rdx+0x2]; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x00000000462d0a: idiv byte ptr [rdx-0x1]; cmovs eax, edx; ret; 
0x0000000043d486: idiv byte ptr [rip+0x63490006]; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000421b71: idiv ch; jmp qword ptr [rsi+0x66]; 
0x000000004749fe: idiv dil; jmp qword ptr [rsi+0xf]; 
0x00000000498b55: idiv dword ptr [rax+rcx]; jne 0x000000000040175a; mov [rcx], rdx; add rsp, 0x8; ret; 
0x00000000434e05: idiv dword ptr [rbx+0x63490006]; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000463ad2: idiv ecx; jmp qword ptr [rsi+0x66]; 
0x00000000412979: idiv edi; call far fword ptr [rax+0x44]; 
0x000000004116cc: idiv edi; call qword ptr [rax+0x688d8b48]; 
0x0000000041617c: idiv edi; call qword ptr [rax+0x709d894c]; 
0x00000000415fec: idiv edi; call qword ptr [rax-0x77cf879]; 
0x00000000476512: idiv edi; dec dword ptr [rax-0x77]; ret far; 
0x00000000475aed: idiv edi; dec dword ptr [rax-0x77]; test [rax], ebp; idiv edi; jmp qword ptr [rax+rcx*2-0x75]; 
0x00000000411638: idiv edi; dec dword ptr [rax-0x77]; test [rax], edi; idiv edi; jmp qword ptr [rax+rcx*2-0x75]; 
0x000000004134e3: idiv edi; dec dword ptr [rax-0x7d]; clc; dec dword ptr [rax-0x77]; ret; 
0x00000000475f67: idiv edi; dec dword ptr [rcx+rcx*4-0x36]; mov rsi, r12; mov rdi, r13; call qword ptr [rcx+0x38]; 
0x000000004771c7: idiv edi; dec dword ptr [rcx+rcx*4-0x3e]; mov rsi, r12; mov rdi, r13; call qword ptr [r15+0x38]; 
0x000000004908ee: idiv edi; endbr64; ret; 
0x000000004058e5: idiv edi; inc dword ptr [rax-0x80]; jmp qword ptr [rdi+rcx-0x7c]; 
0x00000000412b07: idiv edi; inc dword ptr [rax]; add [rax], al; add [rax-0x77], cl; ret; 
0x000000004127e6: idiv edi; inc dword ptr [rbp-0x7b]; in al, 0xf; lahf; ret; 
0x00000000413359: idiv edi; inc dword ptr [rcx-0x1]; push rsp; ret; 
0x000000004127c3: idiv edi; inc dword ptr [rcx]; ret; 
0x000000004130b2: idiv edi; jmp far fword ptr [rcx]; 
0x0000000041163f: idiv edi; jmp qword ptr [rax+rcx*2-0x75]; 
0x0000000041264f: idiv edi; jmp qword ptr [rax]; 
0x0000000045ecf3: idiv edi; jmp qword ptr [rsi+0x2e]; 
0x000000004173e0: idiv edi; jmp qword ptr [rsi+0x66]; 
0x0000000040838e: idiv edi; jmp qword ptr [rsi+0xf]; 
0x0000000040838f: idiv edi; jmp qword ptr [rsi+0xf]; 
0x000000004799db: idiv edi; jmp qword ptr [rsi-0x70]; 
0x000000004139ac: idiv edi; jmp qword ptr [rsi-0x77]; 
0x00000000413358: idiv rdi; inc dword ptr [rcx-0x1]; push rsp; ret; 
0x00000000475b82: idiv rdi; jmp qword ptr [rsi+0x2e]; 
0x0000000040497f: imul al; ret far; 
0x00000000429087: imul al; ret; 
0x00000000403217: imul al; xchg ebx, eax; jns short 0x0000000000403221; add [rax-0x77], cl; ret; 
0x0000000043a386: imul byte ptr [rcx+0x6]; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439d86: imul byte ptr [rdi+0x6]; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000403cf6: imul byte ptr [rdx-0x7e17fff7]; ret; 
0x0000000043a086: imul byte ptr [rsi+rax]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000429425: imul dword ptr [rdx+rax]; lea rdx, [rip+0x26ed0]; cmovne rax, rdx; ret; 
0x00000000405126: imul eax, [rcx+0xf], 0x945c094; fadd st, dword ptr [rax-0x80]; jmp far fword ptr [rdi+0x41]; 
0x0000000041f2f4: imul eax, [rcx+0xf], 0xffffffb6; lea r15, [r14+0x1]; mov rdi, r12; call qword ptr [rbx+0x18]; 
0x000000004801f5: imul eax, [rcx+rax], 0x48; add esp, 0x8; pop rbx; pop rbp; ret; 
0x0000000042e8b7: imul eax, [rcx], 0x894d0000; ret far; 
0x0000000042e2b7: imul eax, [rdi], 0x894d0000; ret far; 
0x0000000043ee5e: imul eax, [rip+0x487c5162], 0x62067111; push rcx; jl short 0x000000000043eeb3; adc [rcx+0x7], edi; ret; 
0x0000000045c5d5: imul eax, [rip-0x76b40000], 0x49082444; mov edi, [rax]; call rbx; 
0x0000000043a207: imul eax, [rsi], 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043a5c9: imul eax, [rsi], 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043a387: imul eax, [rsi], 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000045c41d: imul eax, [rsi], 0x894c0000; and al, 0x8; mov rdi, [r8]; call rbx; 
0x0000000046e1f1: imul eax, edi; lea r12, [rcx+rax]; mov r13, rax; mov rdi, r12; call rbx; 
0x000000004849df: imul eax; sti; ret; 
0x0000000041b163: imul eax; xlat [rbx]; ret; 
0x0000000042f627: imul ecx, [rbx], 0x894d0000; ret far; 
0x00000000419ef4: imul ecx, [rcx+0x2b], 0x47; and [rax+0x1], cl; ret; 
0x00000000430807: imul ecx, [rcx], 0x894d0000; ret far; 
0x0000000042dfb7: imul ecx, [rdx], 0x894d0000; ret far; 
0x0000000048f833: imul ecx, ebx, 0x89480003; add eax, 0x3cb4a; ret; 
0x0000000042a661: imul edi, 0xffffffff; jmp qword ptr [rsi+0x66]; 
0x00000000422f76: imul edi, ebp, 0x3145ffff; sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000043ecf7: imul edi, ebp, 0x487c5162; adc [rcx-0x2], esi; vmovups [r9-0x40], zmm15; ret; 
0x0000000043eabd: imul edi, ebp, 0x487cd162; adc [rcx-0x2], esi; vmovups [r9-0x40], zmm7; ret; 
0x00000000415c4b: imul edi, ebx, 0xffffffff; call qword ptr [rax+0x188d8944]; 
0x0000000042d9b7: imul edx, [rax], 0x894d0000; ret far; 
0x0000000042d6b7: imul edx, [rbx], 0x894d0000; ret far; 
0x0000000042d3b7: imul edx, [rsi], 0x894d0000; ret far; 
0x00000000420789: imul esp, [rax+0x5b], 0x5d; pop r12; ret; 
0x00000000421a3c: imul esp, [rbx*2+0x10438941], 0x41; mov dword ptr [rbx+0x14], 0x0; ret; 
0x00000000448f84: imul esp, [rbx], 0x894d0000; ret far; 
0x000000004808d8: imul esp, [rdx+0x49], 0x39740039; leave; xor eax, eax; ret; 
0x0000000046f021: imul esp, edi, 0xfffffffe; jmp qword ptr [rsi+0x2e]; 
0x0000000046e1f0: imul rax, rdi; lea r12, [rcx+rax]; mov r13, rax; mov rdi, r12; call rbx; 
0x0000000047fd46: in al, 0x0; add [rax], al; syscall; 
0x00000000493fd8: in al, 0x1d; add [rax], al; mov [rbx+0x20], rax; pop rbx; ret; 
0x0000000046542f: in al, 0x29; ret; 
0x000000004534d6: in al, 0x4; add [rcx+0x63], cl; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000004855d6: in al, 0x4; add r12, rax; call qword ptr [r12+0x60]; 
0x00000000435ed6: in al, 0x4c; mov [rdi-0x14], ebx; mov [rdi-0xc], rcx; mov [rdi-0x4], edx; ret; 
0x00000000411541: in al, 0x4c; mov edx, esp; call qword ptr [r13+0x38]; 
0x000000004033d5: in al, 0x5b; pop rbp; mov rax, r12; pop r12; ret; 
0x0000000047e2c6: in al, 0x5d; mov rax, r12; pop r12; pop r13; ret; 
0x0000000045badd: in al, 0x75; sub [rax-0x75], cl; jge short 0x000000000045bae4; call rbx; 
0x00000000420708: in al, 0xb8; or al, [rax]; syscall; 
0x0000000049d2b3: in al, 0xe9; ret far; 
0x0000000048012b: in al, 0xeb; ret far; 
0x0000000043b239: in al, 0xf3; movq [rdi-0x10], mm1; ret; 
0x000000004575b2: in al, 0xf3; ret; 
0x000000004127eb: in al, 0xf; lahf; ret; 
0x000000004789eb: in al, 0xfa; jmp qword ptr [rsi-0x70]; 
0x00000000416397: in al, 0xff; jmp qword ptr [rsi+0xf]; 
0x00000000425bda: in al, dx; adc [rax-0x7d], cl; call qword ptr [rax]; 
0x0000000041268f: in al, dx; add [rax-0x8ff43], eax; jmp qword ptr [rax]; 
0x00000000412aa7: in al, dx; add ch, cl; ret far; 
0x0000000043b62f: in al, dx; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x14], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000435eda: in al, dx; mov [rdi-0xc], rcx; mov [rdi-0x4], edx; ret; 
0x0000000046e56a: in al, dx; mov rdx, r15; mov rsi, r12; mov rdi, r14; call rbp; 
0x0000000043b639: in al, dx; movdqu [rdi-0x10], xmm1; ret; 
0x0000000045d7db: in al, dx; nop [rax]; endbr64; ret; 
0x00000000499639: in al, dx; sbb [rax-0x75], cl; or [rax-0x77], cl; ret; 
0x0000000049b870: in al, dx; sti; call far fword ptr [rbx+0x4c]; 
0x0000000048aa7d: in eax, 0x48; mov esi, ebp; syscall; 
0x00000000435ce6: in eax, 0x4c; mov [rdi-0x13], ebx; mov [rdi-0xb], rcx; mov [rdi-0x4], edx; ret; 
0x00000000458243: in eax, 0x6; add [rax+0x39], cl; ret; 
0x0000000042ce5f: in eax, 0x74; ffreep st(5); std; xlat [rbx]; ret far; 
0x00000000493c0a: in eax, 0xb8; add [rax], eax; add [rax], al; ret; 
0x000000004738b6: in eax, 0xdf; loopne 0x0000000000473843; ret; 
0x00000000457a79: in eax, 0xf0; pop rbx; cmovne rax, rdx; ret; 
0x0000000043b2b9: in eax, 0xf3; movq [rdi-0x10], mm1; ret; 
0x0000000047fa83: in eax, 0xf; je short 0x000000000047faa0; add rax, 0x2; ret; 
0x0000000047a693: in eax, 0xff; jmp qword ptr [rsi+0x2e]; 
0x00000000472c8f: in eax, 0xff; jmp qword ptr [rsi+0xf]; 
0x00000000472022: in eax, dx; add [rax+0x39], ecx; ret; 
0x0000000048f664: in eax, dx; cmp cx, 0x7fff; jne short 0x000000000048f64c; mov eax, 0x1; ret; 
0x0000000045bb1e: in eax, dx; jne short 0x000000000045bb70; mov rdi, [r12]; call rbx; 
0x0000000045bb4e: in eax, dx; jne short 0x000000000045bbd0; mov rdi, [r12]; call rbx; 
0x0000000043b6af: in eax, dx; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x13], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000456102: in eax, dx; lea rax, [rcx-0x1]; ret; 
0x00000000435cea: in eax, dx; mov [rdi-0xb], rcx; mov [rdi-0x4], edx; ret; 
0x0000000043b6b9: in eax, dx; movdqu [rdi-0x10], xmm1; ret; 
0x0000000042868d: in eax, dx; or [rax-0x7f], ecx; sti; jmp far fword ptr [rcx]; 
0x0000000041eb8a: in eax, dx; ret; 
0x00000000456252: in eax, dx; sub rax, 0x1; ret; 
0x0000000045657b: inc bl; cmp dl, 0x1; jb short 0x0000000000456585; mov [rdi], cl; ret; 
0x0000000045c67a: inc byte ptr [rax]; add [rax], al; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045b0a6: inc byte ptr [rbp-0x60f0be2e]; vpaddsw ymm0, ymm15, [rcx+0xf]; lahf; ret; 
0x0000000046b769: inc byte ptr [rbx]; je short 0x000000000046b770; ret; 
0x000000004450a0: inc byte ptr [rip-0x75f37500]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000048f9fe: inc byte ptr [rip-0x76b70049]; ret; 
0x0000000041040e: inc dh; or eax, [rax]; syscall; 
0x0000000048a21c: inc dword ptr [r8+0x10]; pop rbx; pop rbp; ret; 
0x0000000048a21d: inc dword ptr [rax+0x10]; pop rbx; pop rbp; ret; 
0x000000004190b0: inc dword ptr [rax+0x3145fde6]; ror byte ptr [rcx-0xc916ed], 0xff; jmp qword ptr [rsi-0x70]; 
0x00000000405768: inc dword ptr [rax+0xf000678]; test [rcx+rdi*8-0x1], eax; inc dword ptr [rax-0x80]; jmp qword ptr [rdi+rcx-0x7c]; 
0x000000004058dd: inc dword ptr [rax+0xf000a78]; test edi, ecx; idiv edi; inc dword ptr [rax-0x80]; jmp qword ptr [rdi+rcx-0x7c]; 
0x00000000497d68: inc dword ptr [rax+0xf]; mov dh, 0xf6; movsxd rax, [r12+rsi*4]; add rax, r12; notrack jmp rax; 
0x00000000497d2b: inc dword ptr [rax+0xf]; mov dh, 0xf6; movsxd rax, [r9+rsi*4]; add rax, r9; notrack jmp rax; 
0x00000000472b62: inc dword ptr [rax-0x13b43]; jmp qword ptr [rdi+0x75]; 
0x0000000047280b: inc dword ptr [rax-0x13b43]; jmp qword ptr [rdi-0x75]; 
0x000000004599fb: inc dword ptr [rax-0x7af0f506]; ret; 
0x00000000483b31: inc dword ptr [rax-0x7bf0c506]; ret; 
0x0000000040519e: inc dword ptr [rax-0x80]; jmp qword ptr [rdi+rcx-0x7c]; 
0x00000000412f80: inc dword ptr [rax-0x8ff43]; jmp qword ptr [rax]; 
0x000000004775c6: inc dword ptr [rax-0x93343]; jmp qword ptr [rax]; 
0x0000000049656a: inc dword ptr [rax]; add [rax-0x75], cl; je short 0x0000000000496595; adc [rcx-0x77], cl; ret; 
0x00000000479c05: inc dword ptr [rax]; add [rax], al; add [rax-0x75], cl; add al, 0xc6; jmp rax; 
0x00000000412b09: inc dword ptr [rax]; add [rax], al; add [rax-0x77], cl; ret; 
0x00000000433e21: inc dword ptr [rax]; add [rax], al; and ecx, 0xff; sub eax, ecx; ret; 
0x00000000457a20: inc dword ptr [rax]; add [rax], al; cmove rax, rcx; ret; 
0x00000000433e27: inc dword ptr [rax]; add [rax], al; sub eax, ecx; ret; 
0x0000000042173a: inc dword ptr [rax]; add [rsi+0x1], dh; ret; 
0x00000000414855: inc dword ptr [rbp+0x22850fdb]; sbb [rax], eax; add [rcx-0x80], al; call qword ptr [rbx+0xf]; 
0x00000000480128: inc dword ptr [rbp+0x31]; in al, 0xeb; ret far; 
0x0000000045a28e: inc dword ptr [rbp+0x31]; jmp qword ptr [rdi+rax*8]; 
0x00000000415ffa: inc dword ptr [rbp+0x31]; sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; syscall; 
0x000000004248e6: inc dword ptr [rbp+0x31]; shl byte ptr [rdi+rax*8], 0xc; add [rax], al; add [rcx+rcx*4-0x40], cl; ret; 
0x0000000048f814: inc dword ptr [rbp+0x480e74c0]; lea eax, [rip+0x3cb80]; mov [rip+0x3cb61], rax; add rsp, 0x8; ret; 
0x0000000048acb2: inc dword ptr [rbp+0x481975c0]; mov dword ptr [rbx], 0x0; pop rbx; or dword ptr [rip+0x3f802], 0x1; ret; 
0x00000000491b6f: inc dword ptr [rbp+0x481a74c0]; lea ebx, [rbp+rdx*8]; nop [rax]; call qword ptr [rbx]; 
0x00000000493ee6: inc dword ptr [rbp-0x3f6af040]; add rsp, 0x8; movzx eax, al; neg eax; ret; 
0x000000004127e8: inc dword ptr [rbp-0x7b]; in al, 0xf; lahf; ret; 
0x00000000462a80: inc dword ptr [rbx+0x697140d]; add [rdx], al; add rsp, 0x8; ret; 
0x000000004876da: inc dword ptr [rbx+0x7425087b]; fisttp word ptr [rax-0x7d], st; ret; 
0x00000000463a18: inc dword ptr [rbx-0x16feeb93]; ret far; 
0x0000000047a17f: inc dword ptr [rbx-0x4ef43]; jmp qword ptr [rax]; 
0x0000000040df42: inc dword ptr [rbx-0x7af0fe08]; jmp rbx; 
0x00000000409ee3: inc dword ptr [rbx-0x7af0fe08]; ret far; 
0x0000000046cbf3: inc dword ptr [rbx-0x80]; jl short 0x000000000046cc34; jmp far fword ptr [rsi]; 
0x00000000412a88: inc dword ptr [rbx-0x90743]; call qword ptr [rax]; 
0x000000004723f1: inc dword ptr [rbx-0x9b43]; jmp qword ptr [rsi+0xf]; 
0x00000000457afb: inc dword ptr [rbx]; div ecx; mov eax, eax; ret; 
0x000000004996ec: inc dword ptr [rbx]; jne short 0x0000000000499710; add rsp, 0x8; ret; 
0x00000000457a4c: inc dword ptr [rbx]; ret; 
0x00000000412127: inc dword ptr [rcx+0xf]; mov esi, 0x20e883c3; cdqe; movzx eax, byte ptr [rdi+rax]; jmp qword ptr [rsi+rax*8]; 
0x00000000414e74: inc dword ptr [rcx+0xf]; mov esi, 0x358d48c7; mov al, [0x984820e883000b18]; movzx eax, byte ptr [rbx+rax]; jmp qword ptr [rsi+rax*8]; 
0x0000000048f7c1: inc dword ptr [rcx+rbp-0x40]; mov [rdx], eax; mov eax, 0x2; ret; 
0x0000000041d77b: inc dword ptr [rcx+rcx*4-0x20]; pop rbx; pop rbp; pop r12; ret; 
0x0000000047d554: inc dword ptr [rcx+rcx*4-0x2]; mov rdi, rbp; call qword ptr [r14+0x18]; 
0x0000000041335b: inc dword ptr [rcx-0x1]; push rsp; ret; 
0x000000004090a0: inc dword ptr [rcx-0x75]; add [rbx-0x7bf0fd08], al; call qword ptr [rcx]; 
0x000000004151fc: inc dword ptr [rcx-0x77]; fadd st, dword ptr [rbp-0x777af040]; add eax, 0x89440000; ror byte ptr [rcx-0x4ef73], 0x1; jmp far fword ptr [rcx]; 
0x00000000468341: inc dword ptr [rcx-0x77]; ret; 
0x00000000412aa4: inc dword ptr [rcx-0x7d]; in al, dx; add ch, cl; ret far; 
0x00000000415108: inc dword ptr [rcx-0x80]; call far fword ptr [rax+0x48]; 
0x00000000415ed9: inc dword ptr [rcx-0x80]; jmp qword ptr [rdi+rcx]; 
0x00000000478775: inc dword ptr [rcx]; add [rax], al; add [rax+0x39], cl; ret; 
0x00000000478ae6: inc dword ptr [rcx]; add [rax], al; add [rax-0x75], cl; add al, 0xc6; jmp rax; 
0x000000004796fb: inc dword ptr [rcx]; add [rax], al; add [rax-0x75], cl; add al, 0xf0; jmp rax; 
0x00000000415983: inc dword ptr [rcx]; ret far; 
0x000000004127c5: inc dword ptr [rcx]; ret; 
0x0000000044506c: inc dword ptr [rip-0x6eeb7500]; mov eax, [rcx+rax*4]; sub eax, edx; ret; 
0x0000000045632a: inc eax; add rsp, 0x100; sub rax, rdx; ret; 
0x00000000456327: inc eax; inc rax; add rsp, 0x100; sub rax, rdx; ret; 
0x0000000045d446: inc ebx; nop [rax+rax]; endbr64; mov eax, 0x63; syscall; 
0x00000000420b88: inc ebx; nop [rax+rax]; endbr64; mov rax, 0xffffffffffffffff; ret; 
0x00000000420bb8: inc ebx; nop [rax+rax]; endbr64; ret; 
0x00000000455dd9: inc ebx; nop [rax+rax]; xor eax, eax; ret; 
0x0000000045aa0a: inc ebx; nop [rax]; endbr64; mov eax, 0x1; syscall; 
0x0000000049026a: inc ebx; nop [rax]; endbr64; mov eax, 0x27; syscall; 
0x00000000420b7a: inc ebx; nop [rax]; endbr64; mov eax, 0xffffffff; ret; 
0x00000000420b9a: inc ebx; nop [rax]; endbr64; xor eax, eax; ret; 
0x0000000048c02d: inc ebx; sub eax, edx; ret; 
0x00000000492562: inc edi; sbb [rdx], al; add [rax], al; add [rax-0x77], cl; ret; 
0x000000004138a0: inc edi; test eax, edi; idiv bh; call qword ptr [rax]; 
0x0000000045a3fa: inc esi; jmp far fword ptr [r15]; 
0x0000000041264b: inc esi; test [rax], eax; idiv edi; jmp qword ptr [rax]; 
0x00000000475e2f: inc esi; test esp, ecx; idiv bh; jmp qword ptr [rax]; 
0x00000000456329: inc rax; add rsp, 0x100; sub rax, rdx; ret; 
0x00000000456326: inc rax; inc rax; add rsp, 0x100; sub rax, rdx; ret; 
0x000000004855d0: insb [rdi], dx; add al, 0x0; shl r12, 0x4; add r12, rax; call qword ptr [r12+0x60]; 
0x00000000429426: insb [rdi], dx; add al, [rax]; lea rdx, [rip+0x26ed0]; cmovne rax, rdx; ret; 
0x000000004808d7: insb [rdi], dx; imul esp, [rdx+0x49], 0x39740039; leave; xor eax, eax; ret; 
0x00000000436a50: insb [rdi], dx; mov eax, [0x8d49931463490006]; adc al, 0x13; notrack jmp rdx; 
0x0000000041a567: insb [rdi], dx; ret far; 
0x0000000040fdea: insb [rdi], dx; ret; 
0x0000000041f1e3: insb [rdi], dx; ror dword ptr [rdi], 0x11; cmp [r11+0x5d], bl; pop r12; ret; 
0x00000000462c8c: insb [rdi], dx; ror dword ptr [rdi], 0x11; ret; 
0x0000000047d618: insb [rdi], dx; ror dword ptr [rdi], 0x11; xor [rcx+0x5d5b7453], cl; pop r12; ret; 
0x000000004228df: insd [rdi], dx; idiv bh; jmp qword ptr [rsi+0x66]; 
0x00000000436b4f: insd [rdi], dx; mov al, [0x8d49931463490006]; adc al, 0x13; notrack jmp rdx; 
0x0000000046671f: insd [rdi], dx; ret far; 
0x0000000041ebe1: insd [rdi], dx; ror byte ptr [rax-0x77], 0x57; sbb [rax-0x77], cl; movups [rdi+0x8], xmm0; ret; 
0x00000000419ecd: insd [rdi], dx; sbb [rax-0x77], cl; ret far; 
0x000000004214df: insd [rdi], dx; sti; std; dec dword ptr [rax-0x77]; ret; 
0x0000000042a066: iretd; add al, [rax]; cmove rax, rdx; ret; 
0x0000000047ecd2: iretd; cmovne rsi, rdx; bsr rsi, rsi; lea rax, [rcx+rsi]; ret; 
0x0000000041b76a: iretd; cmp rax, rdi; jbe short 0x000000000041b790; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x000000004058e4: iretd; idiv edi; inc dword ptr [rax-0x80]; jmp qword ptr [rdi+rcx-0x7c]; 
0x00000000473062: iretd; ja short 0x0000000000473048; mov eax, r8d; ret; 
0x0000000045681e: iretd; jb 0x0000000000456988; mov rcx, rdx; rep movsb [rdi], [rsi]; ret; 
0x00000000456b89: iretd; jb 0x0000000000456d55; mov rcx, rdx; rep movsb [rdi], [rsi]; ret; 
0x00000000456fd4: iretd; jb 0x0000000000457210; mov rcx, rdx; rep movsb [rdi], [rsi]; ret; 
0x0000000042baf2: iretd; movzx eax, byte ptr [rax+rcx]; movzx edx, byte ptr [rdx+rcx]; sub eax, edx; ret; 
0x00000000490603: iretd; nop [rax]; call rax; 
0x0000000049978d: iretd; xchg ax, ax; xor eax, eax; ret; 
0x00000000496abb: ja 0x0000000000401723; movsxd rax, [r14+rax*4]; add rax, r14; notrack jmp rax; 
0x00000000497bae: ja 0x0000000000401737; movzx eax, al; movsxd rax, [r13+rax*4]; add rax, r13; notrack jmp rax; 
0x00000000497d63: ja 0x0000000000401737; movzx esi, sil; movsxd rax, [r12+rsi*4]; add rax, r12; notrack jmp rax; 
0x00000000497d26: ja 0x0000000000401737; movzx esi, sil; movsxd rax, [r9+rsi*4]; add rax, r9; notrack jmp rax; 
0x00000000401be3: ja 0x00000000004019d0; lea rdx, [rip+0x9ffd3]; movsxd rax, [rdx+rcx*4]; add rax, rdx; notrack jmp rax; 
0x00000000401be4: ja 0x00000000004019d0; lea rdx, [rip+0x9ffd3]; movsxd rax, [rdx+rcx*4]; add rax, rdx; notrack jmp rax; 
0x000000004118c9: ja 0x0000000000411f71; movsxd rax, [r14+rax*4]; add rax, r14; notrack jmp rax; 
0x000000004177e1: ja 0x0000000000417a30; lea rcx, [rip+0x878ea]; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x0000000044fff9: ja 0x0000000000450090; je short 0x0000000000450080; mov byte ptr [rdi], 0x0; vzeroupper; ret; 
0x000000004574b6: ja 0x000000000045753c; movdqu [rdi+rdx-0x10], xmm0; movdqu [rdi], xmm0; ret; 
0x0000000045798c: ja 0x0000000000457b02; lea rsi, [rip+0x4a187]; movsxd rax, [rsi+rdi*4]; add rax, rsi; notrack jmp rax; 
0x0000000046ceb3: ja 0x000000000046cf93; movsxd r8, [rdx+r9*4]; add r8, rdx; notrack jmp r8; 
0x00000000475d89: ja 0x0000000000476641; movsxd rax, [r14+rax*4]; add rax, r14; notrack jmp rax; 
0x000000004794fc: ja 0x00000000004789b8; movzx eax, byte ptr [rdx+rax]; lea rcx, [rip+0x4dcb3]; jmp qword ptr [rcx+rax*8]; 
0x00000000479921: ja 0x00000000004789b8; movzx ecx, byte ptr [rdx+rax]; lea rax, [rip+0x4d78e]; jmp qword ptr [rax+rcx*8]; 
0x00000000479740: ja 0x00000000004789b8; movzx ecx, byte ptr [rdx+rax]; lea rax, [rip+0x4d86f]; jmp qword ptr [rax+rcx*8]; 
0x0000000047bc35: ja 0x000000000047be60; lea rcx, [rip+0x37a56]; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x00000000482396: ja 0x00000000004824bd; movsxd rdx, [r13+rdx*4]; add rdx, r13; notrack jmp rdx; 
0x00000000486fe3: ja 0x0000000000487610; lea rsi, [rip+0x2d670]; movsxd rax, [rsi+r12*4]; add rax, rsi; notrack jmp rax; 
0x00000000487520: ja 0x00000000004881a7; lea rdi, [rip+0x2d1cb]; movsxd rax, [rdi+r12*4]; add rax, rdi; notrack jmp rax; 
0x000000004984a4: ja 0x0000000000498536; mov eax, [rbx+0x8]; movsxd rax, [r12+rax*4]; add rax, r12; notrack jmp rax; 
0x00000000402af5: ja short 0x0000000000402b75; lea rsi, [rip+0x9bb01]; movsxd rcx, [rsi+rcx*4]; add rcx, rsi; notrack jmp rcx; 
0x000000004033ab: ja short 0x00000000004033d3; lea rdx, [rip+0x9b410]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000004176e5: ja short 0x0000000000417710; movzx eax, al; movsxd rax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x0000000041fdcc: ja short 0x000000000041fdc0; lea eax, [rdx+rdi]; ret; 
0x0000000042095d: ja short 0x0000000000420977; mov [rdi+0x8], rax; xor eax, eax; ret; 
0x00000000428c78: ja short 0x0000000000428cd8; lea rdx, [rip+0x77a77]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000431568: ja short 0x000000000043152d; nop [rax+rax]; xor eax, eax; vzeroupper; ret; 
0x0000000043960e: ja short 0x0000000000439616; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043984a: ja short 0x0000000000439852; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043efc7: ja short 0x000000000043efc2; vmovups [rdi-0x200], zmm15; ret; 
0x0000000044fcd5: ja short 0x000000000044fc9a; nop [rax+rax]; mov rax, r8; vzeroupper; ret; 
0x0000000044fce5: ja short 0x000000000044fcaa; nop [rax+rax]; xor eax, eax; ret; 
0x0000000044fc68: ja short 0x000000000044fcb2; add eax, edi; sub rax, rdx; vzeroupper; ret; 
0x00000000453647: ja short 0x000000000045364b; ret; 
0x00000000453663: ja short 0x0000000000453669; mov [rdi], ecx; ret; 
0x000000004536a4: ja short 0x00000000004536ae; mov [rdi], rcx; ret; 
0x00000000453729: ja short 0x000000000045373b; ret; 
0x0000000045377f: ja short 0x0000000000453795; ret; 
0x00000000453801: ja short 0x000000000045381b; ret; 
0x00000000453c77: ja short 0x0000000000453c7b; lea rax, [rdi+0x2]; ret; 
0x00000000453c93: ja short 0x0000000000453c99; mov [rdi], ecx; lea rax, [rdi+0x4]; ret; 
0x00000000453ce4: ja short 0x0000000000453cee; mov [rdi], rcx; lea rax, [rdi+0x8]; ret; 
0x00000000453dc9: ja short 0x0000000000453ddb; lea rax, [rdi+0x10]; ret; 
0x00000000453e3f: ja short 0x0000000000453e55; lea rax, [rdi+0x14]; ret; 
0x00000000453ec1: ja short 0x0000000000453edb; lea rax, [rdi+0x18]; ret; 
0x00000000456838: ja short 0x0000000000456860; jb short 0x0000000000456841; movzx ecx, byte ptr [rsi]; mov [rdi], cl; ret; 
0x00000000456a04: ja short 0x0000000000456a26; movups [rdi+0x30], xmm7; movups [r11], xmm8; ret; 
0x00000000456ad2: ja short 0x0000000000456af4; movups [rdi+0x30], xmm7; movups [r11], xmm8; ret; 
0x00000000456ba8: ja short 0x0000000000456be5; jb short 0x0000000000456bb1; movzx ecx, byte ptr [rsi]; mov [rdi], cl; ret; 
0x00000000456dec: ja short 0x0000000000456e2e; vmovdqu [rdi+0x60], ymm7; vmovdqu [r11], ymm8; vzeroupper; ret; 
0x00000000456f08: ja short 0x0000000000456f4a; vmovdqu [rdi+0x60], ymm7; vmovdqu [r11], ymm8; vzeroupper; ret; 
0x00000000456ff8: ja short 0x000000000045704d; jb short 0x0000000000457001; movzx ecx, byte ptr [rsi]; mov [rdi], cl; ret; 
0x000000004572c3: ja short 0x00000000004572c7; vmovdqu64 [rdi+0xc0], zmm7; vmovdqu64 [r11], zmm8; vzeroupper; ret; 
0x0000000045744d: ja short 0x0000000000457451; vmovdqu64 [rdi+0xc0], zmm7; vmovdqu64 [r11], zmm8; vzeroupper; ret; 
0x00000000457526: ja short 0x0000000000457533; movdqu [rdi+rdx-0x10], xmm0; movdqu [rdi], xmm0; ret; 
0x000000004575c7: ja short 0x00000000004575de; jb short 0x00000000004575cd; mov [rdi], cl; ret; 
0x0000000045767d: ja short 0x000000000045768e; vmovdqu [rdi+rdx-0x20], ymm0; vmovdqu [rdi], ymm0; vzeroupper; ret; 
0x0000000045762d: ja short 0x0000000000457697; vmovdqu [rdi+rdx-0x20], ymm0; vmovdqu [rdi], ymm0; vzeroupper; ret; 
0x0000000045773d: ja short 0x0000000000457702; vmovdqu [rdi+rdx-0x10], xmm0; vmovdqu [rdi], xmm0; vzeroupper; ret; 
0x0000000045774b: ja short 0x0000000000457710; mov [rdi+rdx-0x8], rcx; mov [rdi], rcx; vzeroupper; ret; 
0x00000000457757: ja short 0x000000000045771c; mov [rdi+rdx-0x4], ecx; mov [rdi], ecx; vzeroupper; ret; 
0x00000000457761: ja short 0x0000000000457726; mov [rdi+rdx-0x2], cx; mov [rdi], cx; vzeroupper; ret; 
0x00000000457735: ja short 0x0000000000457763; jb short 0x000000000045773b; mov [rdi], cl; vzeroupper; ret; 
0x00000000457817: ja short 0x000000000045782b; vmovdqu64 [rdi+rdx-0x40], zmm0; vmovdqu64 [rdi], zmm0; vzeroupper; ret; 
0x000000004577b7: ja short 0x0000000000457834; vmovdqu64 [rdi+rdx-0x40], zmm0; vmovdqu64 [rdi], zmm0; vzeroupper; ret; 
0x00000000457905: ja short 0x00000000004578ca; vmovdqu [rdi+rdx-0x20], ymm0; vmovdqu [rdi], ymm0; vzeroupper; ret; 
0x00000000457913: ja short 0x00000000004578d8; vmovdqu [rdi+rdx-0x10], xmm0; vmovdqu [rdi], xmm0; vzeroupper; ret; 
0x00000000457921: ja short 0x00000000004578e6; mov [rdi+rdx-0x8], rcx; mov [rdi], rcx; vzeroupper; ret; 
0x0000000045792d: ja short 0x00000000004578f2; mov [rdi+rdx-0x4], ecx; mov [rdi], ecx; vzeroupper; ret; 
0x00000000457937: ja short 0x00000000004578fc; mov [rdi+rdx-0x2], cx; mov [rdi], cx; vzeroupper; ret; 
0x000000004578fd: ja short 0x0000000000457939; jb short 0x0000000000457903; mov [rdi], cl; vzeroupper; ret; 
0x00000000459579: ja short 0x000000000045953e; nop [rax+rax]; xor eax, eax; ret; 
0x0000000045969c: ja short 0x00000000004596c0; hlt; mov edi, edx; mov eax, r8d; syscall; 
0x000000004598ce: ja short 0x0000000000459938; lea rdx, [rip+0x4881d]; movsxd rax, [rdx+rbp*4]; add rax, rdx; notrack jmp rax; 
0x00000000459c80: ja short 0x0000000000459c88; ret; 
0x00000000459c71: ja short 0x0000000000459ca0; mov eax, 0x4; syscall; 
0x00000000459cdf: ja short 0x0000000000459ce8; ret; 
0x00000000459cd0: ja short 0x0000000000459d00; mov eax, 0x5; syscall; 
0x00000000459e68: ja short 0x0000000000459ec0; ret; 
0x00000000459f0d: ja short 0x0000000000459f60; ret; 
0x00000000459fa1: ja short 0x0000000000459fa8; ret; 
0x0000000045a731: ja short 0x000000000045a738; ret; 
0x0000000045a9ee: ja short 0x000000000045a9f8; ret; 
0x0000000045aa21: ja short 0x000000000045aa28; ret; 
0x0000000045aa5a: ja short 0x000000000045aa60; ret; 
0x0000000045abdc: ja short 0x000000000045ac40; pop rbx; pop rbp; ret; 
0x0000000045d88c: ja short 0x000000000045d8a4; mov [rdi+0x20], rdx; mov byte ptr [rdi+0x28], 0x1; ret; 
0x0000000045d8a2: ja short 0x000000000045d8c4; ret; 
0x0000000045d8f8: ja short 0x000000000045d90c; mov [rax+0x20], rcx; mov byte ptr [rax+0x28], 0x1; ret; 
0x0000000045e010: ja short 0x000000000045e030; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000045f1cd: ja short 0x000000000045f1a0; movsxd rax, [rbp+rax*4]; add rax, rbp; notrack jmp rax; 
0x0000000045f186: ja short 0x000000000045f1a0; movsxd rax, [rbx+rax*4]; add rax, rbx; notrack jmp rax; 
0x0000000046fd1d: ja short 0x000000000046fcf0; mov rax, r8; ret; 
0x00000000473063: ja short 0x0000000000473048; mov eax, r8d; ret; 
0x0000000047bb40: ja short 0x000000000047bb50; movsxd rax, [rdi+rax*4]; add rax, rdi; notrack jmp rax; 
0x0000000047bbd5: ja short 0x000000000047bc00; lea rdi, [rip+0x379fe]; movsxd rcx, [rdi+rcx*4]; add rcx, rdi; notrack jmp rcx; 
0x0000000047defc: ja short 0x000000000047def0; lea eax, [rdx+rdi]; ret; 
0x0000000047fd55: ja short 0x000000000047fd20; add rsp, 0x8; pop rbp; pop r12; ret; 
0x000000004804c0: ja short 0x00000000004804c8; ret; 
0x000000004804b1: ja short 0x00000000004804e0; mov eax, 0x6; syscall; 
0x00000000480525: ja short 0x0000000000480530; ret; 
0x00000000480516: ja short 0x0000000000480548; mov eax, 0x106; syscall; 
0x0000000048069d: ja short 0x00000000004806c8; xor eax, eax; ret; 
0x0000000048a34b: ja short 0x000000000048a358; add rsp, 0x8; ret; 
0x0000000048b069: ja short 0x000000000048b08b; mov rdi, [rdi+0x28]; bnd call r11; 
0x0000000048b4f9: ja short 0x000000000048b51b; mov rdi, [rdi+0x28]; bnd call r11; 
0x0000000048b755: ja short 0x000000000048b777; mov rdi, [rdi+0x28]; bnd call r11; 
0x00000000490251: ja short 0x0000000000490258; ret; 
0x00000000490294: ja short 0x00000000004902a0; ret; 
0x00000000499541: ja short 0x0000000000499545; sbb eax, eax; ret; 
0x00000000419c60: jae 0x0000000000419f50; mov edx, r12d; mov rsi, rbp; mov rdi, r15; call qword ptr [r14+0x80]; 
0x00000000419a4d: jae 0x000000000041a040; mov [rsp+0x10], rcx; xor edx, edx; mov rdi, r15; call qword ptr [r14+0x80]; 
0x00000000419983: jae 0x000000000041a060; lea rsi, [rsp+0x30]; mov rdi, r15; call qword ptr [r14+0x90]; 
0x0000000041b9df: jae 0x000000000041bb00; mov rdx, [rbx+0x40]; mov rdi, rbx; sub rdx, rsi; call qword ptr [r12+0x70]; 
0x0000000041bcf8: jae 0x000000000041bdb8; mov rdx, r13; mov rsi, r12; mov rdi, rbp; call qword ptr [r15+0x40]; 
0x0000000041c03c: jae 0x000000000041c370; xor edx, edx; mov rdi, rbp; call qword ptr [rax+0x80]; 
0x0000000041bedb: jae 0x000000000041c3a8; lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax+0x90]; 
0x0000000041c72b: jae 0x000000000041c7f0; mov rdx, r13; mov rsi, r15; mov rdi, rbp; call qword ptr [rax+0x40]; 
0x0000000041cf3e: jae 0x000000000041cff0; mov rdi, rbp; call qword ptr [r13+0x20]; 
0x000000004324d9: jae 0x0000000000432770; xor eax, eax; vzeroupper; ret; 
0x0000000043bef9: jae 0x000000000043bfa0; lea r11, [rip+0x6537a]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004190a0: jae short 0x00000000004190ea; mov edi, ebx; call qword ptr [rbp+0x68]; 
0x000000004193aa: jae short 0x00000000004193bc; mov rdx, [rbx+0x40]; mov rdi, rbx; sub rdx, rsi; call qword ptr [rax+0x70]; 
0x00000000419702: jae short 0x0000000000419765; mov rax, [rsp]; mov esi, 0xffffffff; mov rdi, r8; call qword ptr [rax+0x18]; 
0x0000000041adc9: jae short 0x000000000041ae0b; xor r8d, r8d; mov rdi, r13; lea r9, [rsp+0x18]; call rbp; 
0x0000000041aeb8: jae short 0x000000000041aec2; xor r8d, r8d; mov rdi, r13; lea r9, [rsp+0x18]; call rbp; 
0x0000000041bad7: jae short 0x000000000041bb30; mov esi, 0xffffffff; mov rdi, r8; call qword ptr [r15+0x18]; 
0x00000000420d21: jae short 0x0000000000420d48; movzx eax, byte ptr [rax]; ret; 
0x00000000423061: jae short 0x000000000042306d; add [rax-0x7d], cl; ret far; 
0x00000000459651: jae short 0x0000000000459654; ret; 
0x00000000459be1: jae short 0x0000000000459be4; ret; 
0x0000000045ac71: jae short 0x000000000045ac74; ret; 
0x0000000045aca1: jae short 0x000000000045aca4; ret; 
0x0000000045acd1: jae short 0x000000000045acd4; ret; 
0x0000000045d434: jae short 0x000000000045d437; ret; 
0x0000000045d461: jae short 0x000000000045d464; ret; 
0x0000000046dcdd: jae short 0x000000000046dd1f; xor eax, eax; pop rbx; ret; 
0x0000000046dd00: jae short 0x000000000046dd42; pop rbx; ret; 
0x0000000046fc98: jae short 0x000000000046fc7c; mov rax, r8; ret; 
0x00000000480441: jae short 0x0000000000480444; ret; 
0x0000000048a948: jae short 0x000000000048a8f5; xor eax, eax; ret; 
0x0000000048df02: jae short 0x000000000048df4d; shr ecx, cl; mov [rdi], r9; ret; 
0x000000004901fa: jae short 0x00000000004901f0; movsxd rcx, ecx; add rax, rcx; sub rax, rdi; ret; 
0x000000004902fc: jae short 0x000000000049030a; mov rdx, [rip+0x3c193]; add word ptr [rdx+rax*2], 0x1; ret; 
0x00000000493c09: jae short 0x0000000000493bf0; mov eax, 0x1; ret; 
0x000000004940b1: jae short 0x00000000004940b4; ret; 
0x0000000045681f: jb 0x0000000000456988; mov rcx, rdx; rep movsb [rdi], [rsi]; ret; 
0x00000000456b8a: jb 0x0000000000456d55; mov rcx, rdx; rep movsb [rdi], [rsi]; ret; 
0x00000000456fd5: jb 0x0000000000457210; mov rcx, rdx; rep movsb [rdi], [rsi]; ret; 
0x0000000040478a: jb short 0x0000000000404744; mov edi, 0xc0c748ff; sar bh, 0xff; dec dword ptr [rbx-0xd373]; jmp qword ptr [rcx+rcx*4+0x8]; 
0x000000004343ae: jb short 0x00000000004343b7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043440d: jb short 0x000000000043441d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043445e: jb short 0x0000000000434467; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000004344bb: jb short 0x00000000004344c6; movaps [rdi], xmm4; notrack jmp r9; 
0x000000004344fe: jb short 0x0000000000434507; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043455d: jb short 0x000000000043456d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x000000004345ae: jb short 0x00000000004345b7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043460b: jb short 0x0000000000434616; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043464e: jb short 0x0000000000434657; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000004346ad: jb short 0x00000000004346bd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x000000004346fe: jb short 0x0000000000434707; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043475b: jb short 0x0000000000434766; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043479e: jb short 0x00000000004347a7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000004347fd: jb short 0x000000000043480d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043484e: jb short 0x0000000000434857; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000004348ab: jb short 0x00000000004348b6; movaps [rdi], xmm4; notrack jmp r9; 
0x000000004348ee: jb short 0x00000000004348f7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043494d: jb short 0x000000000043495d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043499e: jb short 0x00000000004349a7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000004349fb: jb short 0x0000000000434a06; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000434a3e: jb short 0x0000000000434a47; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000434a9d: jb short 0x0000000000434aad; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000434aee: jb short 0x0000000000434af7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000434b4b: jb short 0x0000000000434b56; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000434b8e: jb short 0x0000000000434b97; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000434bed: jb short 0x0000000000434bfd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000434c3e: jb short 0x0000000000434c47; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000434c9b: jb short 0x0000000000434ca6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000434cde: jb short 0x0000000000434ce7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000434d3b: jb short 0x0000000000434d50; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000434d8e: jb short 0x0000000000434d97; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000434deb: jb short 0x0000000000434df6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000434e2e: jb short 0x0000000000434e37; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000434e8d: jb short 0x0000000000434e9d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000434ede: jb short 0x0000000000434ee7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000434f3b: jb short 0x0000000000434f46; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000434f7e: jb short 0x0000000000434f87; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000434fdd: jb short 0x0000000000434fed; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043502e: jb short 0x0000000000435037; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043508b: jb short 0x0000000000435096; movaps [rdi], xmm4; notrack jmp r9; 
0x000000004350ce: jb short 0x00000000004350d7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043512d: jb short 0x000000000043513d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043517e: jb short 0x0000000000435187; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000004351db: jb short 0x00000000004351e6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043521e: jb short 0x0000000000435227; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043527d: jb short 0x000000000043528d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x000000004352ce: jb short 0x00000000004352d7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043532b: jb short 0x0000000000435336; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043536c: jb short 0x0000000000435377; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043536e: jb short 0x0000000000435377; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000004353cd: jb short 0x00000000004353dd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043541c: jb short 0x0000000000435427; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043541e: jb short 0x0000000000435427; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043547b: jb short 0x0000000000435486; movaps [rdi], xmm4; notrack jmp r9; 
0x000000004354be: jb short 0x00000000004354c7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043551d: jb short 0x000000000043552d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043556e: jb short 0x0000000000435577; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000004355cb: jb short 0x00000000004355d6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043560e: jb short 0x0000000000435617; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043566d: jb short 0x000000000043567d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x000000004356be: jb short 0x00000000004356c7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043571b: jb short 0x0000000000435726; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000436d8e: jb short 0x0000000000436d97; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000436ded: jb short 0x0000000000436dfd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000436e3e: jb short 0x0000000000436e47; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000436e9b: jb short 0x0000000000436ea6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000436ede: jb short 0x0000000000436ee7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000436f3d: jb short 0x0000000000436f4d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000436f8e: jb short 0x0000000000436f97; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000436feb: jb short 0x0000000000436ff6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043702e: jb short 0x0000000000437037; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043708d: jb short 0x000000000043709d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x000000004370de: jb short 0x00000000004370e7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043713b: jb short 0x0000000000437146; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043717e: jb short 0x0000000000437187; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000004371dd: jb short 0x00000000004371ed; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043722e: jb short 0x0000000000437237; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043728b: jb short 0x0000000000437296; movaps [rdi], xmm4; notrack jmp r9; 
0x000000004372ce: jb short 0x00000000004372d7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043732d: jb short 0x000000000043733d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043737e: jb short 0x0000000000437387; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000004373db: jb short 0x00000000004373e6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043741e: jb short 0x0000000000437427; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043747d: jb short 0x000000000043748d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x000000004374ce: jb short 0x00000000004374d7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043752b: jb short 0x0000000000437536; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043756e: jb short 0x0000000000437577; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000004375cd: jb short 0x00000000004375dd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043761e: jb short 0x0000000000437627; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043767b: jb short 0x0000000000437686; movaps [rdi], xmm4; notrack jmp r9; 
0x000000004376be: jb short 0x00000000004376c7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043771b: jb short 0x0000000000437730; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043776e: jb short 0x0000000000437777; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000004377cb: jb short 0x00000000004377d6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043780e: jb short 0x0000000000437817; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043786d: jb short 0x000000000043787d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x000000004378be: jb short 0x00000000004378c7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043791b: jb short 0x0000000000437926; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043795e: jb short 0x0000000000437967; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000004379bd: jb short 0x00000000004379cd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000437a0e: jb short 0x0000000000437a17; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000437a6b: jb short 0x0000000000437a76; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000437aae: jb short 0x0000000000437ab7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000437b0d: jb short 0x0000000000437b1d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000437b5e: jb short 0x0000000000437b67; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000437bbb: jb short 0x0000000000437bc6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000437bfe: jb short 0x0000000000437c07; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000437c5d: jb short 0x0000000000437c6d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000437cae: jb short 0x0000000000437cb7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000437d0b: jb short 0x0000000000437d16; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000437d4e: jb short 0x0000000000437d57; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000437d4c: jb short 0x0000000000437d57; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000437dad: jb short 0x0000000000437dbd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000437dfc: jb short 0x0000000000437e07; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000437dfe: jb short 0x0000000000437e07; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000437e5b: jb short 0x0000000000437e66; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000437e9e: jb short 0x0000000000437ea7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000437efd: jb short 0x0000000000437f0d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000437f4e: jb short 0x0000000000437f57; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000437fab: jb short 0x0000000000437fb6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000437fee: jb short 0x0000000000437ff7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043804d: jb short 0x000000000043805d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043809e: jb short 0x00000000004380a7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000004380fb: jb short 0x0000000000438106; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000439a87: jb short 0x0000000000439a8f; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439cc9: jb short 0x0000000000439cd2; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439cca: jb short 0x0000000000439cd2; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043eba2: jb short 0x000000000043eba8; mov cl, [rsi]; mov [rdi], cl; ret; 
0x0000000045354a: jb short 0x0000000000453530; add al, 0x0; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000456529: jb short 0x000000000045653a; vmovups [rdi], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x0000000045653d: jb short 0x0000000000456549; vmovdqu [rdi], ymm2; vmovdqu [rsi-0x20], ymm2; ret; 
0x00000000456556: jb short 0x0000000000456562; vmovq [rdi], xmm0; vmovq [rsi-0x8], xmm0; ret; 
0x00000000456569: jb short 0x0000000000456571; mov [rdi], ecx; mov [rsi-0x4], ecx; ret; 
0x00000000456574: jb short 0x000000000045657e; mov [rdi], cx; mov [rsi-0x2], cx; ret; 
0x00000000456581: jb short 0x0000000000456585; mov [rdi], cl; ret; 
0x000000004567ad: jb short 0x00000000004567b2; rep movsb [rdi], [rsi]; ret; 
0x0000000045683a: jb short 0x0000000000456841; movzx ecx, byte ptr [rsi]; mov [rdi], cl; ret; 
0x00000000456839: jb short 0x0000000000456841; movzx ecx, byte ptr [rsi]; mov [rdi], cl; ret; 
0x00000000456baa: jb short 0x0000000000456bb1; movzx ecx, byte ptr [rsi]; mov [rdi], cl; ret; 
0x00000000456ffa: jb short 0x0000000000457001; movzx ecx, byte ptr [rsi]; mov [rdi], cl; ret; 
0x000000004575c9: jb short 0x00000000004575cd; mov [rdi], cl; ret; 
0x00000000457737: jb short 0x000000000045773b; mov [rdi], cl; vzeroupper; ret; 
0x000000004578ff: jb short 0x0000000000457903; mov [rdi], cl; vzeroupper; ret; 
0x0000000041278d: jbe 0x00000000004137c7; mov rdx, r13; mov rsi, r10; mov rdi, r15; call qword ptr [rbx+0x38]; 
0x00000000412e32: jbe 0x00000000004137df; mov rdx, r13; mov rsi, r10; mov rdi, r15; call qword ptr [rcx+0x38]; 
0x000000004124e4: jbe 0x00000000004138f5; mov rdx, r13; mov rsi, r12; mov rdi, r15; call qword ptr [rcx+0x38]; 
0x00000000412b77: jbe 0x0000000000413ab9; mov rdx, rbx; mov rsi, r12; mov rdi, r15; call qword ptr [rcx+0x38]; 
0x00000000413106: jbe 0x0000000000413b38; mov rdx, rbx; mov rsi, r12; mov rdi, r15; call qword ptr [rcx+0x38]; 
0x0000000041751a: jbe 0x0000000000417630; movsxd rdx, r13d; mov rdi, rbx; call qword ptr [r14+0x38]; 
0x000000004184b3: jbe 0x0000000000418610; xor esi, esi; mov rdi, rbp; call qword ptr [rbx+0x10]; 
0x00000000418fd2: jbe 0x00000000004190c0; mov rdx, r12; mov rsi, rbp; mov rdi, rbx; call qword ptr [r13+0x58]; 
0x00000000419d33: jbe 0x000000000041a122; xor esi, esi; mov edx, 0x2; mov rdi, r15; call qword ptr [r13+0x80]; 
0x00000000419f29: jbe 0x000000000041a12c; xor esi, esi; mov edx, 0x1; mov rdi, r15; call qword ptr [rbp+0x80]; 
0x0000000041a01e: jbe 0x000000000041a148; xor edx, edx; mov rdi, r15; call qword ptr [rbx+0x80]; 
0x0000000041a885: jbe 0x000000000041a960; mov edx, 0x1; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x0000000041bc92: jbe 0x000000000041bdc8; mov rsi, rsp; mov rdi, rbp; call qword ptr [r15+0x90]; 
0x0000000041c118: jbe 0x000000000041c360; mov edx, r13d; mov rsi, r12; mov rdi, rbp; call qword ptr [r15+0x80]; 
0x0000000041c1cd: jbe 0x000000000041c3dc; xor esi, esi; mov edx, 0x2; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x0000000041c2a1: jbe 0x000000000041c3e6; xor esi, esi; mov edx, 0x1; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x0000000041c33e: jbe 0x000000000041c3f0; xor edx, edx; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x0000000041c545: jbe 0x000000000041c770; lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax+0x90]; 
0x0000000041c8c7: jbe 0x000000000041c998; mov rdx, r15; mov rsi, r14; mov rdi, rbx; call qword ptr [rbp+0x70]; 
0x0000000041ca52: jbe 0x000000000041cb00; xor edx, edx; mov rsi, rbp; mov rdi, rbx; call qword ptr [r12+0x80]; 
0x0000000041cc34: jbe 0x000000000041cde0; mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rax+0x18]; 
0x0000000041ced8: jbe 0x000000000041d000; mov rsi, rsp; mov rdi, rbp; call qword ptr [r13+0x90]; 
0x0000000041d0f4: jbe 0x000000000041d288; mov rsi, rsp; mov rdi, rbp; call qword ptr [r13+0x90]; 
0x0000000041d243: jbe 0x000000000041d2f0; mov rdi, rbp; call qword ptr [r13+0x20]; 
0x0000000041d59e: jbe 0x000000000041d650; mov rdx, rbp; mov rsi, r12; mov rdi, rbx; call qword ptr [r14+0x78]; 
0x0000000041d561: jbe 0x000000000041d660; sub rsi, rdx; mov rdi, rbx; mov edx, 0x1; call qword ptr [r14+0x80]; 
0x0000000041d6df: jbe 0x000000000041d7d0; mov rdi, rbx; call qword ptr [r12+0x88]; 
0x0000000041ee8b: jbe 0x000000000041ef10; mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rbx+0x18]; 
0x0000000041f063: jbe 0x000000000041f0f0; mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rbx+0x18]; 
0x0000000041f56f: jbe 0x000000000041f718; mov rdi, rbx; call qword ptr [rbp+0x20]; 
0x0000000041f5eb: jbe 0x000000000041f760; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp+0x18]; 
0x0000000041f7a8: jbe 0x000000000041f878; mov rdi, rbx; call qword ptr [r13+0x60]; 
0x0000000041fec2: jbe 0x0000000000420030; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [r15+0x18]; 
0x00000000420235: jbe 0x00000000004203d0; xor edx, edx; xor esi, esi; mov rdi, rbx; call qword ptr [r15+0x58]; 
0x000000004205f9: jbe 0x00000000004206b0; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [r13+0x18]; 
0x0000000043172f: jbe 0x00000000004319d0; add rax, rdi; add rax, rcx; ret; 
0x00000000431c6c: jbe 0x0000000000431e50; add rax, rdi; add rax, rcx; vzeroupper; ret; 
0x0000000047b967: jbe 0x000000000047ba68; movsxd rdx, ebp; mov rdi, rbx; call qword ptr [r14+0x38]; 
0x0000000047c3d1: jbe 0x000000000047c4d0; mov rsi, rsp; mov rdi, rbp; call qword ptr [rbx+0x90]; 
0x0000000047c578: jbe 0x000000000047c600; mov rdx, r12; mov rsi, rbp; mov rdi, rbx; call qword ptr [r13+0x38]; 
0x0000000047c79e: jbe 0x000000000047c878; mov rdx, r12; mov rsi, r14; mov rdi, rbx; call qword ptr [r15+0x38]; 
0x0000000047d3c1: jbe 0x000000000047d550; mov esi, r15d; mov rdi, rbp; call qword ptr [r14+0x18]; 
0x0000000047db85: jbe 0x000000000047dd40; mov rdi, r13; call qword ptr [r14+0x20]; 
0x0000000047f30f: jbe 0x000000000047f5b0; add rax, rdi; add rax, rcx; ret; 
0x0000000047f63c: jbe 0x000000000047f820; add rax, rdi; add rax, rcx; vzeroupper; ret; 
0x00000000402f03: jbe short 0x0000000000402f15; syscall; 
0x0000000041153d: jbe short 0x00000000004115a0; movsxd r12, r12d; mov rdx, r12; call qword ptr [r13+0x38]; 
0x000000004122ce: jbe short 0x00000000004122e8; mov rdx, [r14+0x20]; mov rdi, r15; sub rdx, rsi; call qword ptr [rbx+0x38]; 
0x0000000041875e: jbe short 0x00000000004187b8; mov rdi, rbx; call qword ptr [rbp+0x60]; 
0x00000000418e95: jbe short 0x0000000000418ec8; movsxd rdx, ebx; mov rsi, r13; mov rdi, r15; call qword ptr [rbp+0x38]; 
0x0000000041909f: jbe short 0x0000000000419114; mov rdi, rbx; call qword ptr [rbp+0x68]; 
0x0000000041b76e: jbe short 0x000000000041b790; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x0000000041d3d8: jbe short 0x000000000041d440; xor esi, esi; mov edx, 0x2; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x0000000041df4f: jbe short 0x000000000041df88; mov rdi, rbp; call qword ptr [rbx+0x88]; 
0x0000000041e23b: jbe short 0x000000000041e298; mov edx, 0x1; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x0000000041ec28: jbe short 0x000000000041ec88; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp+0x18]; 
0x0000000041ed1e: jbe short 0x000000000041ed30; mov rax, [rbx+0x18]; add rsp, 0x10; pop rbx; jmp rax; 
0x0000000041f1a8: jbe short 0x000000000041f210; mov rdi, rbx; call qword ptr [rbp+0x68]; 
0x0000000041f25e: jbe short 0x000000000041f288; mov rdi, rbx; call qword ptr [rbp+0x20]; 
0x0000000041f2f3: jbe short 0x000000000041f360; movzx esi, byte ptr [r14]; lea r15, [r14+0x1]; mov rdi, r12; call qword ptr [rbx+0x18]; 
0x0000000041f43a: jbe short 0x000000000041f450; mov rax, [rbx+0x40]; add rsp, 0x20; pop rbx; jmp rax; 
0x0000000041fcee: jbe short 0x000000000041fd20; mov rdi, rbx; call qword ptr [rbp+0x30]; 
0x0000000041fd81: jbe short 0x000000000041fda0; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp+0x30]; 
0x000000004207c3: jbe short 0x0000000000420820; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [r12+0x18]; 
0x000000004216fd: jbe short 0x0000000000421700; ret; 
0x0000000042173d: jbe short 0x0000000000421740; ret; 
0x00000000421a9d: jbe short 0x0000000000421aa0; ret; 
0x00000000421afd: jbe short 0x0000000000421b00; ret; 
0x00000000429f96: jbe short 0x0000000000429f18; add [rax], al; lea rdx, [rip+0x2a6df]; cmovne rax, rdx; ret; 
0x0000000042ea17: jbe short 0x000000000042ea24; movzx ecx, byte ptr [rsi+rdx]; movzx eax, byte ptr [rdi+rdx]; sub eax, ecx; ret; 
0x00000000430187: jbe short 0x0000000000430194; movzx ecx, byte ptr [rsi+rdx]; movzx eax, byte ptr [rdi+rdx]; sub eax, ecx; ret; 
0x00000000431167: jbe short 0x0000000000431174; movzx ecx, byte ptr [rsi+rdx]; movzx eax, byte ptr [rdi+rdx]; sub eax, ecx; ret; 
0x00000000431996: jbe short 0x00000000004319d0; add rax, rdi; ret; 
0x000000004319a6: jbe short 0x00000000004319d0; lea rax, [rdi+rax+0x10]; ret; 
0x000000004319b6: jbe short 0x00000000004319d0; lea rax, [rdi+rax+0x20]; ret; 
0x000000004319c6: jbe short 0x00000000004319d0; lea rax, [rdi+rax+0x30]; ret; 
0x00000000431df7: jbe short 0x0000000000431e50; add rax, 0x20; add rax, rdi; vzeroupper; ret; 
0x00000000431e17: jbe short 0x0000000000431e50; add rax, 0x40; add rax, rdi; vzeroupper; ret; 
0x00000000431e37: jbe short 0x0000000000431e50; add rax, 0x60; add rax, rdi; vzeroupper; ret; 
0x00000000431de7: jbe short 0x0000000000431e50; add rax, rdi; vzeroupper; ret; 
0x0000000044fc67: jbe short 0x000000000044fce0; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x0000000046f3c6: jbe short 0x000000000046f442; sti; dec dword ptr [rcx+rcx*4+0x65]; mov eax, 0xfffdd4e9; jmp qword ptr [rbx+rcx*4+0x4]; 
0x000000004759dc: jbe short 0x0000000000475a58; movsxd rbx, ebx; mov rdx, rbx; call qword ptr [r13+0x38]; 
0x0000000047cc95: jbe short 0x000000000047ccc8; movsxd rdx, ebx; mov rsi, r13; mov rdi, r15; call qword ptr [rbp+0x38]; 
0x0000000047d2ae: jbe short 0x000000000047d2e8; mov rdi, rbx; call qword ptr [rbp+0x20]; 
0x0000000047d707: jbe short 0x000000000047d728; mov rax, [rax+0xe0]; mov esi, 0xffffffff; call qword ptr [rax+0x18]; 
0x0000000047de23: jbe short 0x000000000047de50; mov rdi, rbx; call qword ptr [rbp+0x30]; 
0x0000000047dec1: jbe short 0x000000000047ded0; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp+0x30]; 
0x0000000047f47c: jbe short 0x000000000047f4cd; xor [rsi+0xf], ah; xlat [rbx]; ret; 
0x0000000047f51e: jbe short 0x000000000047f56f; adc [rsi+0xf], ah; xlat [rbx]; rol dword ptr [rbp+0x315775c0], 0xc0; ret; 
0x0000000047f576: jbe short 0x000000000047f5b0; add rax, rdi; ret; 
0x0000000047f586: jbe short 0x000000000047f5b0; lea rax, [rdi+rax+0x10]; ret; 
0x0000000047f596: jbe short 0x000000000047f5b0; lea rax, [rdi+rax+0x20]; ret; 
0x0000000047f5a6: jbe short 0x000000000047f5b0; lea rax, [rdi+rax+0x30]; ret; 
0x0000000047f7c7: jbe short 0x000000000047f820; add rax, 0x20; add rax, rdi; vzeroupper; ret; 
0x0000000047f7e7: jbe short 0x000000000047f820; add rax, 0x40; add rax, rdi; vzeroupper; ret; 
0x0000000047f807: jbe short 0x000000000047f820; add rax, 0x60; add rax, rdi; vzeroupper; ret; 
0x0000000047f7b7: jbe short 0x000000000047f820; add rax, rdi; vzeroupper; ret; 
0x0000000048c923: jbe short 0x000000000048c930; ret; 
0x000000004960e7: jbe short 0x00000000004960e5; jmp qword ptr [rsi+0xf]; 
0x00000000402919: je 0x0000000000402618; xor esi, esi; mov edi, 0x3003; mov eax, 0x9e; syscall; 
0x00000000402c4c: je 0x0000000000402d38; add rsp, 0x98; ret; 
0x0000000044f74c: je 0x000000000044f7f0; bsf rax, rdx; ret; 
0x00000000457a8d: je 0x00000000004579aa; lea eax, [rdx+rdx]; pop rbx; and eax, 0x7ff80000; ret; 
0x00000000459130: je 0x00000000004591d0; bsf rax, rdx; shr rax, 0x2; ret; 
0x0000000045aebf: je 0x000000000045b24d; mov rsi, [r14]; mov rax, [rsp+0x8]; mov rdi, r13; call rax; 
0x0000000047eb34: je 0x000000000047ed00; bsr rax, rax; add rax, rdi; ret; 
0x0000000047edc4: je 0x000000000047ed00; bsr rax, rsi; add rax, rdi; ret; 
0x0000000047ebce: je 0x000000000047ed00; bsr rsi, rsi; lea rax, [rdi+rsi]; ret; 
0x0000000048c01d: je 0x000000000048bf6a; mov eax, ecx; sub eax, r8d; ret; 
0x00000000401012: je short 0x0000000000401016; call rax; 
0x00000000401cd5: je short 0x0000000000401ce0; mov edi, 0x4caed0; jmp rax; 
0x00000000401d17: je short 0x0000000000401d20; mov edi, 0x4caed0; jmp rax; 
0x000000004027fa: je short 0x000000000040280e; mov rdx, [rip+0xc9895]; mov rsi, [rsp+0x10]; mov edi, [rsp+0xc]; call rbp; 
0x00000000402866: je short 0x000000000040288c; adc [rax-0x75], cl; and al, 0x18; call rax; 
0x000000004030ff: je short 0x0000000000403116; lea rbx, [rax-0x1]; nop [rax]; call qword ptr [rbp+rbx*8]; 
0x0000000040702e: je short 0x0000000000407036; add [rax-0x9], ecx; ror byte ptr [rax+0x1], 0x1; ret; 
0x000000004180c5: je short 0x00000000004180eb; or al, ch; ret; 
0x0000000041998b: je short 0x00000000004199b1; xor [rcx+rcx*4-0x1], cl; call qword ptr [r14+0x90]; 
0x0000000041b68c: je short 0x000000000041b68f; ret; 
0x0000000041bee3: je short 0x000000000041bf09; adc [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x90]; 
0x0000000041c54d: je short 0x000000000041c573; adc [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x90]; 
0x0000000041f169: je short 0x000000000041f170; ret; 
0x0000000041fb3b: je short 0x000000000041fb4c; mov qword ptr [rax], 0x0; mov qword ptr [rax+0x8], 0x0; ret; 
0x0000000041fdc7: je short 0x000000000041fdd8; cmp rcx, rsi; ja short 0x000000000041fdc0; lea eax, [rdx+rdi]; ret; 
0x00000000421a20: je short 0x0000000000421a25; pop rbx; pop rbp; ret; 
0x000000004244b3: je short 0x00000000004244d9; sub [rax-0x7d], cl; call qword ptr [rsi+rsi*2]; 
0x0000000042575c: je short 0x0000000000425763; add [rax-0x77], cl; ret; 
0x000000004269c2: je short 0x00000000004269e8; sbb [rbx+0x5d], bl; pop r12; jmp rax; 
0x000000004270f2: je short 0x0000000000427118; cmp [rcx+rcx*4-0x9], cl; call rax; 
0x00000000428312: je short 0x0000000000428338; sub [rcx+rcx*4-0x19], cl; call rax; 
0x0000000042880a: je short 0x0000000000428818; lea rax, [rax-0x10]; ret; 
0x00000000428805: je short 0x0000000000428838; test rsi, rsi; je short 0x0000000000428818; lea rax, [rax-0x10]; ret; 
0x00000000429fb6: je short 0x0000000000429f81; lea rax, [rip+0x8451]; test byte ptr [rip+0xa217f], 0x1; je short 0x0000000000429f81; ret; 
0x00000000429fc6: je short 0x0000000000429f81; ret; 
0x00000000430263: je short 0x0000000000430226; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000043114a: je short 0x000000000043114d; xchg edx, eax; sub eax, edx; ret; 
0x0000000043189c: je short 0x00000000004318ed; xor [rsi+0xf], ah; xlat [rbx]; ret; 
0x0000000043193e: je short 0x000000000043198f; adc [rsi+0xf], ah; xlat [rbx]; rol dword ptr [rbp+0x315775c0], 0xc0; ret; 
0x00000000431a48: je short 0x0000000000431a60; bsf eax, eax; add rax, rdi; add rax, rcx; ret; 
0x00000000431b8a: je short 0x0000000000431bdb; xor [rsi+0xf], ah; xlat [rbx]; ret; 
0x00000000432565: je short 0x0000000000432570; sbb eax, eax; or eax, 0x1; ret; 
0x00000000432609: je short 0x00000000004325dc; vpmovmskb eax, xmm2; sub eax, 0xffff; jne 0x0000000000432520; ret; 
0x00000000432647: je short 0x0000000000432660; vpmovmskb eax, xmm2; sub eax, 0xffff; jne 0x0000000000432520; ret; 
0x00000000433b87: je short 0x0000000000433b8b; add [rax], al; xor eax, eax; ret; 
0x00000000439907: je short 0x000000000043990f; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439b4a: je short 0x0000000000439b52; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000443633: je short 0x00000000004435f6; lea r10, [r10+r9]; notrack jmp r10; 
0x000000004451d3: je short 0x0000000000445196; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000044b453: je short 0x000000000044b416; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000044d413: je short 0x000000000044d3d6; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000044ef25: je short 0x000000000044ef30; bsf eax, eax; lea rax, [rdi+rax]; ret; 
0x0000000044f548: je short 0x000000000044f54e; bsf eax, edx; ret; 
0x0000000044f5ed: je short 0x000000000044f600; bsf rax, rdx; ret; 
0x0000000044f590: je short 0x000000000044f610; bsf rax, rdx; ret; 
0x0000000044f7bc: je short 0x000000000044f7e0; bsf rax, rdx; ret; 
0x0000000044ffff: je short 0x0000000000450080; mov byte ptr [rdi], 0x0; vzeroupper; ret; 
0x0000000045421f: je short 0x00000000004542a0; mov byte ptr [rdi], 0x0; lea rax, [rdi]; vzeroupper; ret; 
0x000000004563e0: je short 0x00000000004563b8; movsxd rcx, ecx; add rax, rcx; sub rax, rdi; ret; 
0x000000004568c7: je short 0x00000000004568e0; ror byte ptr [rdi], 0x1; adc [rdi+rdx-0x40], edi; ret; 
0x000000004570ec: je short 0x0000000000457105; std; vmovdqu64 [rdi+rdx-0x100], zmm7; vzeroupper; ret; 
0x00000000457fcd: je short 0x0000000000457fe0; cmp eax, 0x2; je short 0x0000000000457fe8; xor eax, eax; ret; 
0x00000000457fd2: je short 0x0000000000457fe8; xor eax, eax; ret; 
0x00000000458024: je short 0x0000000000458008; ret; 
0x00000000458082: je short 0x0000000000458060; ret; 
0x00000000458e22: je short 0x0000000000458e48; sbb [rcx+rcx*4-0x1f], cl; mov rdx, r13; call rbx; 
0x0000000045919c: je short 0x00000000004591c0; bsf rax, rdx; shr rax, 0x2; ret; 
0x00000000459e8e: je short 0x0000000000459eb4; adc [rcx-0x77], al; ror byte ptr [rbx+0x3108247c], 0xc0; syscall; 
0x0000000045a033: je short 0x000000000045a011; mov rbp, rdi; mov rdi, rbp; mov eax, 0x4f; syscall; 
0x0000000045a78c: je short 0x000000000045a7b8; mov eax, 0x48; syscall; 
0x0000000045a81b: je short 0x000000000045a848; mov eax, 0x48; syscall; 
0x0000000045a971: je short 0x000000000045a9a0; mov eax, 0x101; syscall; 
0x0000000045ab2e: je short 0x000000000045ab31; ret; 
0x0000000045abc7: je short 0x000000000045ac00; mov r10d, ebx; mov rdi, rbp; mov eax, 0x9; syscall; 
0x0000000045ad12: je short 0x000000000045ad45; mov rdi, rbp; xor esi, esi; call r12; 
0x0000000045ada2: je short 0x000000000045add5; mov rdi, rbp; xor esi, esi; call r12; 
0x0000000045b29d: je short 0x000000000045b2c0; mov rsi, [rbx]; mov r13, rbx; mov rdi, rbp; call r12; 
0x0000000045b989: je short 0x000000000045b9ba; mov rdi, rbp; xor esi, esi; call r12; 
0x0000000045ba3a: je short 0x000000000045ba6d; mov rdi, rbp; xor esi, esi; call r12; 
0x0000000045df0e: je short 0x000000000045df20; lea rdi, [rcx+rsi+0x20]; jmp rdx; 
0x0000000045df09: je short 0x000000000045df20; test rdx, rdx; je short 0x000000000045df20; lea rdi, [rcx+rsi+0x20]; jmp rdx; 
0x0000000045f09c: je short 0x000000000045f0a0; ret; 
0x0000000045f0b8: je short 0x000000000045f0c8; mov [rip+0x699e0], eax; pop rbx; ret; 
0x00000000462a70: je short 0x0000000000462a78; ret; 
0x00000000462ed0: je short 0x0000000000462ef6; push rax; mov rdi, [rsp+0x58]; mov rax, [rsp+0x28]; call rax; 
0x0000000046317f: je short 0x00000000004631a5; push rax; mov rdi, [rsp+0x58]; call r14; 
0x000000004634bb: je short 0x00000000004634e1; pop rax; mov rdi, [rsp+0x60]; mov rax, [rsp+0x18]; call rax; 
0x000000004638fe: je short 0x0000000000463924; pop rax; mov rdi, [rsp+0x60]; call r15; 
0x00000000463c73: je short 0x0000000000463c99; push rax; mov rdi, [rsp+0x58]; mov rax, [rsp+0x30]; call rax; 
0x00000000463ee9: je short 0x0000000000463f0f; push rax; mov rdi, [rsp+0x58]; call rbx; 
0x0000000046424a: je short 0x0000000000464270; push rax; mov rdi, [rsp+0x58]; mov rax, [rsp+0x18]; call rax; 
0x000000004646cf: je short 0x00000000004646f5; push rax; mov rdi, [rsp+0x58]; call r15; 
0x00000000464a71: je short 0x0000000000464a97; push rax; mov rdi, [rsp+0x58]; mov rax, [rsp+0x20]; call rax; 
0x00000000464ce6: je short 0x0000000000464d0c; push rax; mov rdi, [rsp+0x58]; call rbx; 
0x00000000465105: je short 0x000000000046512b; push rax; mov rdi, [rsp+0x48]; call r13; 
0x00000000465605: je short 0x000000000046562b; push rax; mov rdi, [rsp+0x48]; call rbx; 
0x00000000465cf8: je short 0x0000000000465d1e; mov rdi, [rsp+0x40]; call r14; 
0x00000000466246: je short 0x000000000046626c; mov rdi, [rsp+0x40]; call rbx; 
0x00000000466c86: je short 0x0000000000466cac; mov rdi, [rsp+0x38]; mov rax, [rsp+0x20]; call rax; 
0x0000000046727a: je short 0x00000000004672a0; mov rdi, [rsp+0x38]; call r15; 
0x00000000467c1a: je short 0x0000000000467c40; pop rax; mov rdi, [rsp+0x50]; mov rax, [rsp+0x20]; call rax; 
0x00000000468004: je short 0x000000000046802a; pop rax; mov rdi, [rsp+0x50]; call rbx; 
0x000000004685e5: je short 0x000000000046860b; push rax; mov rdi, [rsp+0x48]; call r13; 
0x00000000468b85: je short 0x0000000000468bab; push rax; mov rdi, [rsp+0x48]; call rbx; 
0x00000000469317: je short 0x000000000046933d; pop rax; mov rdi, [rsp+0x50]; mov rax, [rsp+0x18]; call rax; 
0x00000000469769: je short 0x000000000046978f; pop rax; mov rdi, [rsp+0x50]; call rbx; 
0x00000000469d45: je short 0x0000000000469d6b; push rax; mov rdi, [rsp+0x48]; call r13; 
0x0000000046a2e8: je short 0x000000000046a30e; push rax; mov rdi, [rsp+0x48]; call rbx; 
0x0000000046ab32: je short 0x000000000046ab58; mov rdi, [rsp+0x38]; call r15; 
0x0000000046ac97: je short 0x000000000046acbd; mov rdi, [rsp+0x38]; lea r8, [rsp+0xa0]; call r15; 
0x0000000046b766: je short 0x000000000046b770; cmp esi, 0x3; je short 0x000000000046b770; ret; 
0x0000000046b76b: je short 0x000000000046b770; ret; 
0x0000000046b78d: je short 0x000000000046b7a8; pop rbx; ret; 
0x0000000046bb96: je short 0x000000000046bbd5; add [rax+0x1], cl; fsubp st(0), st; call qword ptr [rcx+rdi*8-0x1]; 
0x0000000046bf94: je short 0x000000000046bf98; call rax; 
0x0000000046c21a: je short 0x000000000046c21e; call rax; 
0x0000000046d38f: je short 0x000000000046d393; call rax; 
0x0000000046daf2: je short 0x000000000046daf8; ret; 
0x0000000047d01b: je short 0x000000000047d066; add esp, 0x18; pop rbx; pop rbp; ret; 
0x0000000047d5c0: je short 0x000000000047d5c8; ret; 
0x0000000047d5d3: je short 0x000000000047d61d; mov eax, [rax+0xe0]; call qword ptr [rax+0x68]; 
0x0000000047d620: je short 0x000000000047d67d; pop rbp; pop r12; ret; 
0x0000000047def7: je short 0x000000000047df08; cmp rax, rsi; ja short 0x000000000047def0; lea eax, [rdx+rdi]; ret; 
0x0000000047e13d: je short 0x000000000047e140; ret; 
0x0000000047e1a1: je short 0x000000000047e1a4; ret; 
0x0000000047ef5f: je short 0x000000000047ef14; bsr eax, eax; lea rax, [rdi+rax-0x20]; vzeroupper; ret; 
0x0000000047ef84: je short 0x000000000047efa0; bsr eax, eax; lea rax, [rdi+rax-0x20]; vzeroupper; ret; 
0x0000000047f289: je short 0x000000000047f28f; test edx, edx; jne short 0x000000000047f280; ret; 
0x0000000047fa69: je short 0x000000000047fa80; mov cl, dl; and cl, 0xf; je short 0x000000000047fa90; ret; 
0x0000000047fa70: je short 0x000000000047fa90; ret; 
0x0000000047fa85: je short 0x000000000047faa0; add rax, 0x2; ret; 
0x0000000047fd0a: je short 0x000000000047fd40; call rax; 
0x000000004808dd: je short 0x0000000000480918; leave; xor eax, eax; ret; 
0x00000000481673: je short 0x0000000000481679; add [rbp-0x7d7af00a], al; add [rax], al; add [rax-0x7d], cl; ret; 
0x00000000489722: je short 0x0000000000489727; mov [rsi], rdi; mov rax, r8; ret; 
0x0000000048a219: je short 0x000000000048a21c; lock inc dword ptr [r8+0x10]; pop rbx; pop rbp; ret; 
0x0000000048f817: je short 0x000000000048f827; lea rax, [rip+0x3cb80]; mov [rip+0x3cb61], rax; add rsp, 0x8; ret; 
0x0000000048fcb7: je short 0x000000000048fcc3; lea rdx, [rip+0x3b1a0]; mov [rax], rdx; add rsp, 0x8; ret; 
0x0000000048ff56: je short 0x000000000048ff60; pop rbx; pop rbp; pop r12; ret; 
0x00000000491b72: je short 0x0000000000491b8e; lea rbx, [rbp+rdx*8]; nop [rax]; call qword ptr [rbx]; 
0x000000004932ba: je short 0x00000000004932c0; ret; 
0x0000000049656f: je short 0x0000000000496595; adc [rcx-0x77], cl; ret; 
0x0000000049683a: je short 0x000000000049684c; movss xmm0, [rip+0x23774]; divss xmm0, [rip+0x23770]; ret; 
0x00000000496840: je short 0x0000000000496879; add al, [rax]; divss xmm0, [rip+0x23770]; ret; 
0x00000000497ac3: je short 0x0000000000497b14; add rsp, 0x18; ret; 
0x0000000049947e: je short 0x0000000000499490; mov edi, 0x1; jmp rax; 
0x0000000049a91f: je short 0x000000000049a948; mov rsi, [r13+r15+0x8]; mov rdx, [r12]; mov rdi, r14; call rbp; 
0x0000000049a923: je short 0x000000000049a962; or [rcx-0x75], cl; adc al, 0x24; mov rdi, r14; call rbp; 
0x0000000049aa54: je short 0x000000000049aa4a; adc [rcx+rcx*4-0x11], cl; call rax; 
0x0000000049b86c: je short 0x000000000049b892; adc al, ch; in al, dx; sti; call far fword ptr [rbx+0x4c]; 
0x0000000049cae6: je short 0x000000000049caea; call rax; 
0x0000000049cdbb: je short 0x000000000049cdc4; call rax; 
0x0000000049cdb2: je short 0x000000000049cdc9; mov rax, [rdi+0x20]; test rax, rax; je short 0x000000000049cdc4; call rax; 
0x0000000049d00e: je short 0x000000000049cff8; xor eax, eax; add rsp, 0x10; pop rbx; ret; 
0x00000000401d5c: jg short 0x0000000000401cf6; or al, 0x0; add [rbp-0x3d], ebx; nop [rax+rax]; ret; 
0x000000004137a9: jg short 0x0000000000413736; mov ch, 0x0; idiv edi; jmp far fword ptr [rcx]; 
0x0000000041ee8d: jg short 0x000000000041ee8f; add [rax], al; mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rbx+0x18]; 
0x0000000042a0dd: jg short 0x000000000042a0b4; add al, [rax]; cmove rax, rdx; ret; 
0x000000004344b5: jg short 0x0000000000434477; movaps [rdi+0x10], xmm3; jb short 0x00000000004344c6; movaps [rdi], xmm4; notrack jmp r9; 
0x000000004344d0: jg short 0x00000000004344d2; lea r11, [rip+0x6c527]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434605: jg short 0x00000000004345c7; movaps [rdi+0x10], xmm3; jb short 0x0000000000434616; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000434620: jg short 0x0000000000434622; lea r11, [rip+0x6c3d7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434755: jg short 0x0000000000434717; movaps [rdi+0x10], xmm3; jb short 0x0000000000434766; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000434770: jg short 0x0000000000434772; lea r11, [rip+0x6c287]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004348a5: jg short 0x0000000000434867; movaps [rdi+0x10], xmm3; jb short 0x00000000004348b6; movaps [rdi], xmm4; notrack jmp r9; 
0x000000004348c0: jg short 0x00000000004348c2; lea r11, [rip+0x6c137]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004349f5: jg short 0x00000000004349b7; movaps [rdi+0x10], xmm3; jb short 0x0000000000434a06; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000434a10: jg short 0x0000000000434a12; lea r11, [rip+0x6bfe7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434b45: jg short 0x0000000000434b07; movaps [rdi+0x10], xmm3; jb short 0x0000000000434b56; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000434b60: jg short 0x0000000000434b62; lea r11, [rip+0x6be97]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434c95: jg short 0x0000000000434c57; movaps [rdi+0x10], xmm3; jb short 0x0000000000434ca6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000434cb0: jg short 0x0000000000434cb2; lea r11, [rip+0x6bd47]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434d65: jg short 0x0000000000434d67; lea r11, [rip+0x6bc92]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434de5: jg short 0x0000000000434da7; movaps [rdi+0x10], xmm3; jb short 0x0000000000434df6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000434e00: jg short 0x0000000000434e02; lea r11, [rip+0x6bbf7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434f35: jg short 0x0000000000434ef7; movaps [rdi+0x10], xmm3; jb short 0x0000000000434f46; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000434f50: jg short 0x0000000000434f52; lea r11, [rip+0x6baa7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000435085: jg short 0x0000000000435047; movaps [rdi+0x10], xmm3; jb short 0x0000000000435096; movaps [rdi], xmm4; notrack jmp r9; 
0x000000004350a0: jg short 0x00000000004350a2; lea r11, [rip+0x6b957]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004351d5: jg short 0x0000000000435197; movaps [rdi+0x10], xmm3; jb short 0x00000000004351e6; movaps [rdi], xmm4; notrack jmp r9; 
0x000000004351f0: jg short 0x00000000004351f2; lea r11, [rip+0x6b807]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000435325: jg short 0x00000000004352e7; movaps [rdi+0x10], xmm3; jb short 0x0000000000435336; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000435340: jg short 0x0000000000435342; lea r11, [rip+0x6b6b7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000435475: jg short 0x0000000000435437; movaps [rdi+0x10], xmm3; jb short 0x0000000000435486; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000435490: jg short 0x0000000000435492; lea r11, [rip+0x6b567]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004355c5: jg short 0x0000000000435587; movaps [rdi+0x10], xmm3; jb short 0x00000000004355d6; movaps [rdi], xmm4; notrack jmp r9; 
0x000000004355e0: jg short 0x00000000004355e2; lea r11, [rip+0x6b417]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000435715: jg short 0x00000000004356d7; movaps [rdi+0x10], xmm3; jb short 0x0000000000435726; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000435730: jg short 0x0000000000435732; lea r11, [rip+0x6b2c7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000436099: jg short 0x00000000004360ea; ret; 
0x000000004360e0: jg short 0x0000000000436129; mov ebx, 0x4f7f0ff3; ret far; 
0x000000004360e5: jg short 0x0000000000436136; ret far; 
0x0000000043611f: jg short 0x0000000000436168; ret; 
0x0000000043615f: jg short 0x00000000004361a8; ret far; 
0x00000000436e95: jg short 0x0000000000436e57; movaps [rdi+0x10], xmm3; jb short 0x0000000000436ea6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000436eb0: jg short 0x0000000000436eb2; lea r11, [rip+0x69d07]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000436fe5: jg short 0x0000000000436fa7; movaps [rdi+0x10], xmm3; jb short 0x0000000000436ff6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000437000: jg short 0x0000000000437002; lea r11, [rip+0x69bb7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437135: jg short 0x00000000004370f7; movaps [rdi+0x10], xmm3; jb short 0x0000000000437146; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000437150: jg short 0x0000000000437152; lea r11, [rip+0x69a67]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437285: jg short 0x0000000000437247; movaps [rdi+0x10], xmm3; jb short 0x0000000000437296; movaps [rdi], xmm4; notrack jmp r9; 
0x000000004372a0: jg short 0x00000000004372a2; lea r11, [rip+0x69917]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004373d5: jg short 0x0000000000437397; movaps [rdi+0x10], xmm3; jb short 0x00000000004373e6; movaps [rdi], xmm4; notrack jmp r9; 
0x000000004373f0: jg short 0x00000000004373f2; lea r11, [rip+0x697c7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437525: jg short 0x00000000004374e7; movaps [rdi+0x10], xmm3; jb short 0x0000000000437536; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000437540: jg short 0x0000000000437542; lea r11, [rip+0x69677]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437675: jg short 0x0000000000437637; movaps [rdi+0x10], xmm3; jb short 0x0000000000437686; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000437690: jg short 0x0000000000437692; lea r11, [rip+0x69527]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437745: jg short 0x0000000000437747; lea r11, [rip+0x69472]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004377c5: jg short 0x0000000000437787; movaps [rdi+0x10], xmm3; jb short 0x00000000004377d6; movaps [rdi], xmm4; notrack jmp r9; 
0x000000004377e0: jg short 0x00000000004377e2; lea r11, [rip+0x693d7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437915: jg short 0x00000000004378d7; movaps [rdi+0x10], xmm3; jb short 0x0000000000437926; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000437930: jg short 0x0000000000437932; lea r11, [rip+0x69287]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437a65: jg short 0x0000000000437a27; movaps [rdi+0x10], xmm3; jb short 0x0000000000437a76; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000437a80: jg short 0x0000000000437a82; lea r11, [rip+0x69137]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437bb5: jg short 0x0000000000437b77; movaps [rdi+0x10], xmm3; jb short 0x0000000000437bc6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000437bd0: jg short 0x0000000000437bd2; lea r11, [rip+0x68fe7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437d05: jg short 0x0000000000437cc7; movaps [rdi+0x10], xmm3; jb short 0x0000000000437d16; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000437d20: jg short 0x0000000000437d22; lea r11, [rip+0x68e97]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437e55: jg short 0x0000000000437e17; movaps [rdi+0x10], xmm3; jb short 0x0000000000437e66; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000437e70: jg short 0x0000000000437e72; lea r11, [rip+0x68d47]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437fa5: jg short 0x0000000000437f67; movaps [rdi+0x10], xmm3; jb short 0x0000000000437fb6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000437fc0: jg short 0x0000000000437fc2; lea r11, [rip+0x68bf7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004380f5: jg short 0x00000000004380b7; movaps [rdi+0x10], xmm3; jb short 0x0000000000438106; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000438110: jg short 0x0000000000438112; lea r11, [rip+0x68aa7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000438a79: jg short 0x0000000000438aca; ret; 
0x00000000438ac0: jg short 0x0000000000438b09; mov ebx, 0x4f7f0ff3; ret far; 
0x00000000438ac5: jg short 0x0000000000438b16; ret far; 
0x00000000438aff: jg short 0x0000000000438b48; ret; 
0x00000000438b3f: jg short 0x0000000000438b88; ret far; 
0x0000000043b088: jg short 0x000000000043b0d1; loope 0x000000000043b07f; movq [rdi-0x10], mm1; ret; 
0x0000000043b118: jg short 0x000000000043b161; loop 0x000000000043b10f; movq [rdi-0x10], mm1; ret; 
0x0000000043b18f: jg short 0x000000000043b1d8; ret; 
0x0000000043b1a8: jg short 0x000000000043b1f1; jrcxz 0x000000000043b19f; movq [rdi-0x10], mm1; ret; 
0x0000000043b238: jg short 0x000000000043b281; in al, 0xf3; movq [rdi-0x10], mm1; ret; 
0x0000000043b2b8: jg short 0x000000000043b301; in eax, 0xf3; movq [rdi-0x10], mm1; ret; 
0x0000000043b338: jg short 0x000000000043b381; out 0xf3, al; movq [rdi-0x10], mm1; ret; 
0x0000000043b3b8: jg short 0x000000000043b401; out 0xf3, eax; movq [rdi-0x10], mm1; ret; 
0x0000000043b595: jg short 0x000000000043b5de; mov ebx, 0x46f00ff2; ret far; 
0x0000000043b59f: jg short 0x000000000043b5e8; ret far; 
0x0000000043b638: jg short 0x000000000043b681; in al, dx; movdqu [rdi-0x10], xmm1; ret; 
0x0000000043b6b8: jg short 0x000000000043b701; in eax, dx; movdqu [rdi-0x10], xmm1; ret; 
0x0000000043b748: jg short 0x000000000043b791; out dx, al; movdqu [rdi-0x10], xmm1; ret; 
0x0000000043b7c8: jg short 0x000000000043b811; out dx, eax; movdqu [rdi-0x10], xmm1; ret; 
0x0000000043b83c: jg short 0x000000000043b845; ret; 
0x0000000043b896: jg short 0x000000000043b8a7; ret; 
0x0000000043b891: jg short 0x000000000043b8da; psllq mm1, [rdi]; jg short 0x000000000043b8a7; ret; 
0x0000000043b906: jg short 0x000000000043b917; ret; 
0x0000000043b976: jg short 0x000000000043b987; ret; 
0x0000000043b971: jg short 0x000000000043b9ba; or eax, 0xf7f0ff3; ret; 
0x0000000043b9e6: jg short 0x000000000043b9f7; ret; 
0x0000000043b9e1: jg short 0x000000000043ba2a; or al, 0xf3; movq [rdi], mm1; ret; 
0x0000000043ba56: jg short 0x000000000043ba67; ret; 
0x0000000043ba51: jg short 0x000000000043ba9a; or esi, ebx; movq [rdi], mm1; ret; 
0x0000000043bac6: jg short 0x000000000043bad7; ret; 
0x0000000043bac1: jg short 0x000000000043bb0a; or dh, bl; movq [rdi], mm1; ret; 
0x0000000043bb36: jg short 0x000000000043bb47; ret; 
0x0000000043bb31: jg short 0x000000000043bb7a; or ebx, esi; movq [rdi], mm1; ret; 
0x0000000043bba6: jg short 0x000000000043bbb7; ret; 
0x0000000043bba1: jg short 0x000000000043bbea; or bl, dh; movq [rdi], mm1; ret; 
0x0000000043bc16: jg short 0x000000000043bc27; ret; 
0x0000000043bc86: jg short 0x000000000043bc97; ret; 
0x0000000043bcf6: jg short 0x000000000043bd07; ret; 
0x0000000043bcf1: jg short 0x000000000043bd3a; add eax, 0xf7f0ff3; ret; 
0x0000000043bd66: jg short 0x000000000043bd77; ret; 
0x0000000043bd61: jg short 0x000000000043bdaa; add al, 0xf3; movq [rdi], mm1; ret; 
0x0000000043bdd6: jg short 0x000000000043bde7; ret; 
0x0000000043bdd1: jg short 0x000000000043be1a; add esi, ebx; movq [rdi], mm1; ret; 
0x0000000043be46: jg short 0x000000000043be57; ret; 
0x0000000043be41: jg short 0x000000000043be8a; add dh, bl; movq [rdi], mm1; ret; 
0x0000000043beb6: jg short 0x000000000043bec7; ret; 
0x0000000043beb1: jg short 0x000000000043befa; add ebx, esi; movq [rdi], mm1; ret; 
0x0000000043dbb8: jg short 0x000000000043dc01; loope 0x000000000043dbaf; movq [rdi-0x10], mm1; ret; 
0x0000000043dc48: jg short 0x000000000043dc91; loop 0x000000000043dc3f; movq [rdi-0x10], mm1; ret; 
0x0000000043dcbf: jg short 0x000000000043dd08; ret; 
0x0000000043dcd8: jg short 0x000000000043dd21; jrcxz 0x000000000043dccf; movq [rdi-0x10], mm1; ret; 
0x0000000043dd68: jg short 0x000000000043ddb1; in al, 0xf3; movq [rdi-0x10], mm1; ret; 
0x0000000043dde8: jg short 0x000000000043de31; in eax, 0xf3; movq [rdi-0x10], mm1; ret; 
0x0000000043de68: jg short 0x000000000043deb1; out 0xf3, al; movq [rdi-0x10], mm1; ret; 
0x0000000043dee8: jg short 0x000000000043df31; out 0xf3, eax; movq [rdi-0x10], mm1; ret; 
0x0000000043e0c5: jg short 0x000000000043e10e; mov ebx, 0x46f00ff2; ret far; 
0x0000000043e0cf: jg short 0x000000000043e118; ret far; 
0x0000000043e168: jg short 0x000000000043e1b1; in al, dx; movdqu [rdi-0x10], xmm1; ret; 
0x0000000043e1e8: jg short 0x000000000043e231; in eax, dx; movdqu [rdi-0x10], xmm1; ret; 
0x0000000043e278: jg short 0x000000000043e2c1; out dx, al; movdqu [rdi-0x10], xmm1; ret; 
0x0000000043e2f8: jg short 0x000000000043e341; out dx, eax; movdqu [rdi-0x10], xmm1; ret; 
0x0000000043e36c: jg short 0x000000000043e375; ret; 
0x0000000043e3c6: jg short 0x000000000043e3d7; ret; 
0x0000000043e3c1: jg short 0x000000000043e40a; psllq mm1, [rdi]; jg short 0x000000000043e3d7; ret; 
0x0000000043e436: jg short 0x000000000043e447; ret; 
0x0000000043e4a6: jg short 0x000000000043e4b7; ret; 
0x0000000043e4a1: jg short 0x000000000043e4ea; or eax, 0xf7f0ff3; ret; 
0x0000000043e516: jg short 0x000000000043e527; ret; 
0x0000000043e511: jg short 0x000000000043e55a; or al, 0xf3; movq [rdi], mm1; ret; 
0x0000000043e586: jg short 0x000000000043e597; ret; 
0x0000000043e581: jg short 0x000000000043e5ca; or esi, ebx; movq [rdi], mm1; ret; 
0x0000000043e5f6: jg short 0x000000000043e607; ret; 
0x0000000043e5f1: jg short 0x000000000043e63a; or dh, bl; movq [rdi], mm1; ret; 
0x0000000043e666: jg short 0x000000000043e677; ret; 
0x0000000043e661: jg short 0x000000000043e6aa; or ebx, esi; movq [rdi], mm1; ret; 
0x0000000043e6d6: jg short 0x000000000043e6e7; ret; 
0x0000000043e6d1: jg short 0x000000000043e71a; or bl, dh; movq [rdi], mm1; ret; 
0x0000000043e746: jg short 0x000000000043e757; ret; 
0x0000000043e7b6: jg short 0x000000000043e7c7; ret; 
0x0000000043e826: jg short 0x000000000043e837; ret; 
0x0000000043e821: jg short 0x000000000043e86a; add eax, 0xf7f0ff3; ret; 
0x0000000043e896: jg short 0x000000000043e8a7; ret; 
0x0000000043e891: jg short 0x000000000043e8da; add al, 0xf3; movq [rdi], mm1; ret; 
0x0000000043e906: jg short 0x000000000043e917; ret; 
0x0000000043e901: jg short 0x000000000043e94a; add esi, ebx; movq [rdi], mm1; ret; 
0x0000000043e976: jg short 0x000000000043e987; ret; 
0x0000000043e971: jg short 0x000000000043e9ba; add dh, bl; movq [rdi], mm1; ret; 
0x0000000043e9e6: jg short 0x000000000043e9f7; ret; 
0x0000000043e9e1: jg short 0x000000000043ea2a; add ebx, esi; movq [rdi], mm1; ret; 
0x0000000043eb24: jg short 0x000000000043eb2d; vmovdqu [rdi+0x20], ymm1; vmovdqu [r9-0x40], ymm2; vmovdqu [r9-0x20], ymm3; ret; 
0x0000000043eb48: jg short 0x000000000043eb51; vmovdqu [r9-0x20], ymm1; ret; 
0x0000000043eb5c: jg short 0x000000000043eb65; vmovdqu [r9-0x10], xmm1; ret; 
0x0000000043efce: jg short 0x000000000043efc8; ret; 
0x0000000044fe92: jg short 0x000000000044fea8; pextrw edi, mm5, 0x74; ret far; 
0x000000004500ec: jg short 0x0000000000450105; vmovdqu [rdi+rdx-0xf], xmm3; vzeroupper; ret; 
0x0000000045010c: jg short 0x0000000000450125; vmovdqu [rdi+rdx-0x1f], ymm3; vzeroupper; ret; 
0x00000000453716: jg short 0x000000000045371f; ret; 
0x00000000453726: jg short 0x000000000045372f; mov [rdi+0x10], dh; ret; 
0x0000000045373a: jg short 0x0000000000453743; mov [rdi+0x10], cx; ret; 
0x00000000453759: jg short 0x0000000000453762; mov [rdi+0xf], ecx; ret; 
0x00000000453769: jg short 0x0000000000453772; mov [rdi+0x10], ecx; ret; 
0x00000000453779: jg short 0x0000000000453782; mov [rdi+0x10], ecx; mov [rdi+0x14], dh; ret; 
0x0000000045379a: jg short 0x00000000004537a3; mov [rdi+0xe], rcx; ret; 
0x000000004537ba: jg short 0x00000000004537c3; mov [rdi+0xf], rcx; ret; 
0x000000004537da: jg short 0x00000000004537e3; mov [rdi+0x10], rcx; ret; 
0x000000004537fa: jg short 0x0000000000453803; mov [rdi+0x10], rcx; mov [rdi+0x18], dh; ret; 
0x0000000045381e: jg short 0x0000000000453827; mov [rdi+0x10], rdx; mov [rdi+0x18], cx; ret; 
0x0000000045383d: jg short 0x0000000000453846; mov [rdi+0x10], rdx; mov [rdi+0x17], ecx; ret; 
0x0000000045385d: jg short 0x0000000000453866; mov [rdi+0x10], rdx; mov [rdi+0x18], ecx; ret; 
0x0000000045387b: jg short 0x0000000000453884; movdqu [rdi+0xd], xmm2; ret; 
0x0000000045389b: jg short 0x00000000004538a4; movdqu [rdi+0xe], xmm2; ret; 
0x000000004538bb: jg short 0x00000000004538c4; movdqu [rdi+0xf], xmm2; ret; 
0x000000004538db: jg short 0x00000000004538e4; movdqu [rdi+0x10], xmm2; ret; 
0x00000000453db6: jg short 0x0000000000453dbf; lea rax, [rdi+0xf]; ret; 
0x00000000453dc6: jg short 0x0000000000453dcf; mov [rdi+0x10], dh; lea rax, [rdi+0x10]; ret; 
0x00000000453dda: jg short 0x0000000000453de3; mov [rdi+0x10], cx; lea rax, [rdi+0x11]; ret; 
0x00000000453df9: jg short 0x0000000000453e02; mov [rdi+0xf], ecx; lea rax, [rdi+0x12]; ret; 
0x00000000453e19: jg short 0x0000000000453e22; mov [rdi+0x10], ecx; lea rax, [rdi+0x13]; ret; 
0x00000000453e39: jg short 0x0000000000453e42; mov [rdi+0x10], ecx; mov [rdi+0x14], dh; lea rax, [rdi+0x14]; ret; 
0x00000000453e5a: jg short 0x0000000000453e63; mov [rdi+0xe], rcx; lea rax, [rdi+0x15]; ret; 
0x00000000453e7a: jg short 0x0000000000453e83; mov [rdi+0xf], rcx; lea rax, [rdi+0x16]; ret; 
0x00000000453e9a: jg short 0x0000000000453ea3; mov [rdi+0x10], rcx; lea rax, [rdi+0x17]; ret; 
0x00000000453eba: jg short 0x0000000000453ec3; mov [rdi+0x10], rcx; mov [rdi+0x18], dh; lea rax, [rdi+0x18]; ret; 
0x00000000453ede: jg short 0x0000000000453ee7; mov [rdi+0x10], rdx; mov [rdi+0x18], cx; lea rax, [rdi+0x19]; ret; 
0x00000000453efd: jg short 0x0000000000453f06; mov [rdi+0x10], rdx; mov [rdi+0x17], ecx; lea rax, [rdi+0x1a]; ret; 
0x00000000453f1d: jg short 0x0000000000453f26; mov [rdi+0x10], rdx; mov [rdi+0x18], ecx; lea rax, [rdi+0x1b]; ret; 
0x00000000453f3b: jg short 0x0000000000453f44; movdqu [rdi+0xd], xmm2; lea rax, [rdi+0x1c]; ret; 
0x00000000453f5b: jg short 0x0000000000453f64; movdqu [rdi+0xe], xmm2; lea rax, [rdi+0x1d]; ret; 
0x00000000453f7b: jg short 0x0000000000453f84; movdqu [rdi+0xf], xmm2; lea rax, [rdi+0x1e]; ret; 
0x00000000453f3f: jg short 0x0000000000453f98; or eax, 0x1c478d48; ret; 
0x00000000453f9b: jg short 0x0000000000453fa4; movdqu [rdi+0x10], xmm2; lea rax, [rdi+0x1f]; ret; 
0x000000004540b2: jg short 0x00000000004540c8; pextrw edi, mm5, 0x74; ret far; 
0x0000000045432c: jg short 0x0000000000454345; vmovdqu [rdi+rdx-0xf], xmm3; lea rax, [rdi+rdx]; vzeroupper; ret; 
0x0000000045434c: jg short 0x0000000000454365; vmovdqu [rdi+rdx-0x1f], ymm3; lea rax, [rdi+rdx]; vzeroupper; ret; 
0x0000000045654b: jg short 0x0000000000456554; vmovdqu [rsi-0x10], xmm0; ret; 
0x00000000456541: jg short 0x000000000045655a; vmovdqu [rsi-0x20], ymm2; ret; 
0x00000000456545: jg short 0x000000000045659d; loopne 0x000000000045650c; vmovdqu [rdi], xmm0; vmovdqu [rsi-0x10], xmm0; ret; 
0x00000000456a08: jg short 0x0000000000456a3a; movups [r11], xmm8; ret; 
0x00000000456ad6: jg short 0x0000000000456b08; movups [r11], xmm8; ret; 
0x00000000456b17: jg short 0x0000000000456b20; vmovdqu [rdi+rdx-0x20], ymm1; vzeroupper; ret; 
0x00000000456b63: jg short 0x0000000000456b6c; vmovdqu [rdi+rdx-0x20], ymm1; vzeroupper; ret; 
0x00000000456bbe: jg short 0x0000000000456bc7; vmovdqu [rdi+rdx-0x10], xmm1; ret; 
0x00000000456d4f: jg short 0x0000000000456d74; vzeroupper; ret; 
0x00000000456d49: jg short 0x0000000000456d8c; mov al, [0x77f8c5237f7ec1c4]; ret; 
0x00000000456d44: jg short 0x0000000000456dbf; rol ch, 0x7e; jg short 0x0000000000456d8c; mov al, [0x77f8c5237f7ec1c4]; ret; 
0x00000000456df6: jg short 0x0000000000456dfb; vzeroupper; ret; 
0x00000000456df1: jg short 0x0000000000456e53; vmovdqu [r11], ymm8; vzeroupper; ret; 
0x00000000456e82: jg short 0x0000000000456ea7; vzeroupper; ret; 
0x00000000456e7c: jg short 0x0000000000456ebf; mov al, [0x77f8c5237f7ec1c4]; ret; 
0x00000000456e77: jg short 0x0000000000456ef2; rol ch, 0x7e; jg short 0x0000000000456ebf; mov al, [0x77f8c5237f7ec1c4]; ret; 
0x00000000456f12: jg short 0x0000000000456f17; vzeroupper; ret; 
0x00000000456f5f: jg short 0x0000000000456f69; vmovdqu64 [rdi+rdx-0x40], zmm1; vzeroupper; ret; 
0x00000000456f0d: jg short 0x0000000000456f6f; vmovdqu [r11], ymm8; vzeroupper; ret; 
0x00000000456fab: jg short 0x0000000000456fb5; vmovdqu64 [rdi+rdx-0x40], zmm1; vzeroupper; ret; 
0x0000000045700e: jg short 0x0000000000457017; vmovdqu [rdi+rdx-0x20], ymm1; vzeroupper; ret; 
0x00000000457026: jg short 0x000000000045702f; vmovdqu [rdi+rdx-0x10], xmm1; ret; 
0x00000000457209: jg short 0x000000000045722f; vzeroupper; ret; 
0x00000000457202: jg short 0x0000000000457246; std; vmovdqu64 [r11], zmm4; vzeroupper; ret; 
0x000000004571f4: jg short 0x0000000000457268; jmp qword ptr [rdx-0xf]; 
0x000000004572ca: jg short 0x00000000004572cf; vmovdqu64 [r11], zmm8; vzeroupper; ret; 
0x000000004572cf: jg short 0x00000000004572d5; vzeroupper; ret; 
0x0000000045728f: jg short 0x00000000004572db; jmp qword ptr [rdx-0x2f]; 
0x00000000457394: jg short 0x00000000004573ba; vzeroupper; ret; 
0x0000000045738d: jg short 0x00000000004573d1; std; vmovdqu64 [r11], zmm4; vzeroupper; ret; 
0x0000000045737f: jg short 0x00000000004573f3; jmp qword ptr [rdx-0xf]; 
0x00000000457454: jg short 0x0000000000457459; vmovdqu64 [r11], zmm8; vzeroupper; ret; 
0x00000000457459: jg short 0x000000000045745f; vzeroupper; ret; 
0x000000004574c4: jg short 0x00000000004574cd; ret; 
0x00000000457530: jg short 0x0000000000457539; ret; 
0x00000000457544: jg short 0x000000000045754d; movdqu [rdi+0x10], xmm0; movdqu [rdi+rdx-0x10], xmm0; movdqu [rdi+rdx-0x20], xmm0; ret; 
0x00000000457548: jg short 0x0000000000457591; adc bl, dh; movq [rdi+rdx-0x10], mm0; movdqu [rdi+rdx-0x20], xmm0; ret; 
0x00000000457638: jg short 0x0000000000457641; vzeroupper; ret; 
0x00000000457688: jg short 0x0000000000457691; vzeroupper; ret; 
0x00000000457747: jg short 0x0000000000457750; vzeroupper; ret; 
0x000000004577c4: jg short 0x00000000004577ce; vzeroupper; ret; 
0x00000000457824: jg short 0x000000000045782e; vzeroupper; ret; 
0x0000000045790f: jg short 0x0000000000457918; vzeroupper; ret; 
0x0000000045791d: jg short 0x0000000000457926; vzeroupper; ret; 
0x00000000457a9b: jg short 0x0000000000457a60; nop [rax]; mov rax, rdx; pop rbx; ret; 
0x0000000045bb50: jg short 0x000000000045bb9b; mov edi, [rsp]; call rbx; 
0x0000000045bdb8: jg short 0x000000000045bdbd; add [rax], al; mov rdi, [r15]; call rbx; 
0x0000000045d8b2: jg short 0x000000000045d8a4; mov [rdi+0x20], rdx; mov byte ptr [rdi+0x28], 0x1; ret; 
0x0000000045d91a: jg short 0x000000000045d90c; mov [rax+0x20], rcx; mov byte ptr [rax+0x28], 0x1; ret; 
0x00000000477755: jg short 0x00000000004776e2; lea eax, [rax]; idiv edi; jmp far fword ptr [rcx]; 
0x0000000048b06d: jg short 0x000000000048b097; bnd call r11; 
0x0000000048b4fd: jg short 0x000000000048b527; bnd call r11; 
0x0000000048b759: jg short 0x000000000048b783; bnd call r11; 
0x0000000048f669: jg short 0x000000000048f6e0; loopne 0x000000000048f625; add [rax], eax; add [rax], al; ret; 
0x00000000490164: jg short 0x0000000000490174; pcmpistri xmm2, xmm2, 0x3a; cmp edx, ecx; jle 0x0000000000490210; ret; 
0x0000000049023f: jg short 0x0000000000490289; cmova edx, eax; mov eax, 0xd9; syscall; 
0x00000000402af7: jge short 0x0000000000402b41; lea esi, [rip+0x9bb01]; movsxd rcx, [rsi+rcx*4]; add rcx, rsi; notrack jmp rcx; 
0x00000000403cab: jge short 0x0000000000403cb9; add [rbx+rcx*4+0x3d], cl; ret; 
0x000000004197c4: jge short 0x00000000004197c4; jmp qword ptr [rsi+0xf]; 
0x0000000044671f: jge short 0x0000000000446709; add eax, 0x8a0c8b00; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x00000000457411: jge short 0x000000000045745b; out 0x49, eax; jmp qword ptr [rdx-0x2f]; 
0x0000000045ae31: jge short 0x000000000045ae33; call rbx; 
0x0000000045ae28: jge short 0x000000000045ae3a; test rdi, rdi; jne short 0x000000000045ae56; mov rdi, [rbp]; call rbx; 
0x0000000045bae2: jge short 0x000000000045bae4; call rbx; 
0x0000000045bb8d: jge short 0x000000000045bb8f; call rbx; 
0x0000000045bbbd: jge short 0x000000000045bbbf; call rbx; 
0x0000000045bbed: jge short 0x000000000045bbef; call rbx; 
0x0000000045bc15: jge short 0x000000000045bc17; call rbx; 
0x0000000045c04f: jge short 0x000000000045c09a; mov edi, [rdi]; call rbx; 
0x0000000045c0ad: jge short 0x000000000045c0b8; add [rax], al; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x00000000483d2c: jge short 0x0000000000483cf6; add [rax-0x77], cl; ret; 
0x0000000048dde8: jge short 0x000000000048de33; shl ecx, cl; mov [rdi], r9; ret; 
0x0000000048f344: jge short 0x000000000048f346; add [rax], al; leave; ret; 
0x00000000498ee1: jge short 0x0000000000498edb; leave; ret; 
0x0000000049904e: jge short 0x0000000000499048; mov rbp, [rbp]; mov rsp, rcx; pop rcx; jmp rcx; 
0x000000004991a9: jge short 0x00000000004991a3; leave; ret; 
0x000000004991f2: jge short 0x00000000004991ec; mov rbp, [rbp]; mov rsp, rcx; pop rcx; jmp rcx; 
0x0000000049937b: jge short 0x0000000000499375; mov rbp, [rbp]; mov rsp, rcx; pop rcx; jmp rcx; 
0x000000004993cb: jge short 0x00000000004993c5; leave; ret; 
0x0000000049945e: jge short 0x0000000000499458; mov rbp, [rbp]; mov rsp, rcx; pop rcx; jmp rcx; 
0x0000000049b96d: jge short 0x000000000049b97f; add rdi, rbp; call r12; 
0x00000000402861: jl short 0x0000000000402887; or al, 0x48; mov esi, [rsp+0x10]; mov rax, [rsp+0x18]; call rax; 
0x00000000406f86: jl short 0x0000000000406f8f; add [rax-0x9], ecx; ror byte ptr [rax+0x1], 0x1; ret; 
0x0000000041931d: jl short 0x0000000000419343; cmp al, ch; ret far; 
0x00000000421e9e: jl short 0x0000000000421eaa; add [rax+0x1], cl; ret; 
0x00000000421ea8: jl short 0x0000000000421eb4; add [rax+0x39], cl; ret; 
0x00000000425518: jl short 0x000000000042551a; add [rax], al; sub dword ptr [rip+0xa463d], 0x1; pop rbp; ret; 
0x00000000429083: jl short 0x00000000004290aa; and [rcx], dh; imul al; ret; 
0x00000000429f46: jl short 0x0000000000429f48; add [rax-0x73], cl; add eax, 0x7760; cmove rax, rdx; ret; 
0x0000000043eaba: jl short 0x000000000043eb04; adc [rcx-0x3], ebp; vmovups [r9-0x80], zmm6; vmovups [r9-0x40], zmm7; ret; 
0x0000000043eac1: jl short 0x000000000043eb0b; adc [rcx-0x2], esi; vmovups [r9-0x40], zmm7; ret; 
0x0000000043eac8: jl short 0x000000000043eb12; adc [rcx-0x1], edi; ret; 
0x0000000043eaf6: jl short 0x000000000043eb40; adc [rdi+0x1], ecx; vmovups [r9-0x80], zmm2; vmovups [r9-0x40], zmm3; ret; 
0x0000000043eafd: jl short 0x000000000043eb47; adc [rcx-0x2], edx; vmovups [r9-0x40], zmm3; ret; 
0x0000000043eb04: jl short 0x000000000043eb4e; adc [rcx-0x1], ebx; ret; 
0x0000000043ecf4: jl short 0x000000000043ed3e; adc [rcx-0x3], ebp; vmovups [r9-0x80], zmm14; vmovups [r9-0x40], zmm15; ret; 
0x0000000043ecfb: jl short 0x000000000043ed45; adc [rcx-0x2], esi; vmovups [r9-0x40], zmm15; ret; 
0x0000000043ed02: jl short 0x000000000043ed4c; adc [rcx-0x1], edi; ret; 
0x0000000043ee5b: jl short 0x000000000043eea5; adc [rcx+0x5], ebp; vmovups [r9+0x180], zmm14; vmovups [r9+0x1c0], zmm15; ret; 
0x0000000043ee62: jl short 0x000000000043eeac; adc [rcx+0x6], esi; vmovups [r9+0x1c0], zmm15; ret; 
0x0000000043ee69: jl short 0x000000000043eeb3; adc [rcx+0x7], edi; ret; 
0x0000000043efbd: jl short 0x000000000043f007; adc [rdi-0x6], ebp; vmovups [rdi-0x1c0], zmm14; vmovups [rdi-0x200], zmm15; ret; 
0x0000000043efc4: jl short 0x000000000043f00e; adc [rdi-0x7], esi; vmovups [rdi-0x200], zmm15; ret; 
0x0000000043efcb: jl short 0x000000000043f015; adc [rdi-0x8], edi; ret; 
0x000000004564f2: jl short 0x000000000045653c; adc [rsi-0x3], edx; vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x000000004564f9: jl short 0x0000000000456543; adc [rsi-0x2], edx; vmovups [rsi-0x40], zmm2; ret; 
0x00000000456500: jl short 0x000000000045654a; adc [rsi-0x1], edx; ret; 
0x00000000456513: jl short 0x000000000045655d; adc [rdi+0x1], edx; vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x0000000045651a: jl short 0x0000000000456564; adc [rsi-0x2], edx; vmovups [rsi-0x40], zmm2; ret; 
0x00000000456521: jl short 0x000000000045656b; adc [rsi-0x1], edx; ret; 
0x0000000045652e: jl short 0x0000000000456578; adc [rdi], edx; vmovups [rsi-0x40], zmm2; ret; 
0x00000000456534: jl short 0x000000000045657e; adc [rsi-0x1], edx; ret; 
0x000000004565fb: jl short 0x0000000000456645; adc [rsi-0x3], edx; vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x00000000456602: jl short 0x000000000045664c; adc [rsi-0x2], edx; vmovups [rsi-0x40], zmm2; ret; 
0x00000000456609: jl short 0x0000000000456653; adc [rsi-0x1], edx; ret; 
0x00000000456653: jl short 0x000000000045669d; adc [rsi+0x1], edx; vmovups [rsi+0x80], zmm2; vmovups [rsi+0xc0], zmm2; ret; 
0x0000000045665a: jl short 0x00000000004566a4; adc [rsi+0x2], edx; vmovups [rsi+0xc0], zmm2; ret; 
0x00000000456661: jl short 0x00000000004566ab; adc [rsi+0x3], edx; ret; 
0x000000004566f0: jl short 0x000000000045673a; adc [rsi+0x5], edx; vmovups [rsi+0x180], zmm2; vmovups [rsi+0x1c0], zmm2; ret; 
0x000000004566f7: jl short 0x0000000000456741; adc [rsi+0x6], edx; vmovups [rsi+0x1c0], zmm2; ret; 
0x000000004566fe: jl short 0x0000000000456748; adc [rsi+0x7], edx; ret; 
0x000000004570f4: jl short 0x000000000045710d; cld; vzeroupper; ret; 
0x00000000459f35: jl short 0x0000000000459f5b; or [rax+0x1], bh; syscall; 
0x0000000045df12: jl short 0x000000000045df45; and bh, bh; loop 0x000000000045df7e; nop [rax+rax]; ret; 
0x00000000462ed5: jl short 0x0000000000462efb; pop rax; mov rax, [rsp+0x28]; call rax; 
0x00000000463184: jl short 0x00000000004631aa; pop rax; call r14; 
0x00000000463c78: jl short 0x0000000000463c9e; pop rax; mov rax, [rsp+0x30]; call rax; 
0x00000000463eee: jl short 0x0000000000463f14; pop rax; call rbx; 
0x0000000046424f: jl short 0x0000000000464275; pop rax; mov rax, [rsp+0x18]; call rax; 
0x000000004646d4: jl short 0x00000000004646fa; pop rax; call r15; 
0x00000000464a76: jl short 0x0000000000464a9c; pop rax; mov rax, [rsp+0x20]; call rax; 
0x00000000464ceb: jl short 0x0000000000464d11; pop rax; call rbx; 
0x0000000046510a: jl short 0x0000000000465130; call r13; 
0x0000000046528e: jl short 0x00000000004652b4; add [rax-0x78], eax; mov esp, 0x8514; add [rax+0x39], cl; ret far; 
0x0000000046560a: jl short 0x0000000000465630; call rbx; 
0x00000000465cfd: jl short 0x0000000000465d23; call r14; 
0x0000000046624b: jl short 0x0000000000466271; call rbx; 
0x00000000466c8b: jl short 0x0000000000466cb1; cmp [rax-0x75], cl; and al, 0x20; call rax; 
0x00000000467c1f: jl short 0x0000000000467c45; push rax; mov rax, [rsp+0x20]; call rax; 
0x00000000468009: jl short 0x000000000046802f; push rax; call rbx; 
0x000000004685ea: jl short 0x0000000000468610; call r13; 
0x00000000468b8a: jl short 0x0000000000468bb0; call rbx; 
0x0000000046931c: jl short 0x0000000000469342; push rax; mov rax, [rsp+0x18]; call rax; 
0x0000000046976e: jl short 0x0000000000469794; push rax; call rbx; 
0x00000000469d4a: jl short 0x0000000000469d70; call r13; 
0x0000000046a2ed: jl short 0x000000000046a313; call rbx; 
0x0000000046cbf6: jl short 0x000000000046cc34; jmp far fword ptr [rsi]; 
0x000000004738b2: jl short 0x00000000004738d8; adc cl, bl; in eax, 0xdf; loopne 0x0000000000473843; ret; 
0x00000000483732: jl short 0x0000000000483763; jmp far fword ptr [rdi]; 
0x00000000485331: jl short 0x0000000000485339; and [rcx+rcx*4+0x4], cl; and al, 0xe8; ret; 
0x0000000048a875: jl short 0x000000000048a87c; or al, ch; ret; 
0x0000000048d548: jl short 0x000000000048d54a; add [rax], al; mov rcx, [rsp+0x10]; mov rdi, [rsp+0x18]; call rcx; 
0x0000000048ff05: jl short 0x000000000048ff2b; sbb al, ch; ret; 
0x0000000049aaa2: jl short 0x000000000049aac8; sbb al, ch; xchg esi, eax; ret; 
0x0000000049016e: jle 0x0000000000490210; ret; 
0x0000000041f2fb: jle short 0x000000000041f2fe; mov rdi, r12; call qword ptr [rbx+0x18]; 
0x0000000044f591: jle short 0x000000000044f5db; bsf eax, edx; ret; 
0x000000004563ac: jle short 0x00000000004563c4; movsxd rax, ecx; ret; 
0x00000000456d48: jle short 0x0000000000456dc9; mov al, [0x77f8c5237f7ec1c4]; ret; 
0x00000000456e7b: jle short 0x0000000000456efc; mov al, [0x77f8c5237f7ec1c4]; ret; 
0x0000000045bc40: jle short 0x000000000045bc52; test r15, r15; jne 0x000000000045be52; mov rdi, [r14]; call rbx; 
0x0000000045bc70: jle short 0x000000000045bc82; test r15, r15; jne 0x000000000045bfba; mov rdi, [r14]; call rbx; 
0x0000000045bca0: jle short 0x000000000045bcb2; test r15, r15; jne 0x000000000045bf60; mov rdi, [r14]; call rbx; 
0x0000000045bcd0: jle short 0x000000000045bce2; test r15, r15; jne 0x000000000045bf06; mov rdi, [r14]; call rbx; 
0x0000000045bd00: jle short 0x000000000045bd12; test r15, r15; jne 0x000000000045beac; mov rdi, [r14]; call rbx; 
0x0000000045bd30: jle short 0x000000000045bd42; test r15, r15; jne 0x000000000045c014; mov rdi, [r14]; call rbx; 
0x0000000045bd5c: jle short 0x000000000045bd6e; test r15, r15; jne short 0x000000000045bda1; mov rdi, [r14]; call rbx; 
0x0000000045bd88: jle short 0x000000000045bd9a; test r15, r15; jne short 0x000000000045bdf8; mov rdi, [r14]; call rbx; 
0x0000000046b79a: jle short 0x000000000046b7c0; sub eax, 0x1; mov [rdx+0x8], eax; pop rbx; ret; 
0x00000000475977: jle short 0x0000000000475977; jmp qword ptr [rsi+0xf]; 
0x0000000045a3fd: jmp far fword ptr [r15]; 
0x00000000482cc1: jmp far fword ptr [rax+0x7850f01]; 
0x00000000417d5f: jmp far fword ptr [rax-0x38f38bfe]; 
0x00000000485a88: jmp far fword ptr [rax-0x5d7bf0fc]; 
0x000000004647e8: jmp far fword ptr [rax-0x777af0fe]; 
0x000000004133aa: jmp far fword ptr [rax-0x7bf0f0]; 
0x00000000471718: jmp far fword ptr [rbp+0x7f]; 
0x0000000041e064: jmp far fword ptr [rcx+0x202]; 
0x00000000405125: jmp far fword ptr [rcx+0x41]; 
0x000000004130b4: jmp far fword ptr [rcx]; 
0x00000000413f3d: jmp far fword ptr [rdi+0x19ba0008]; 
0x000000004249d0: jmp far fword ptr [rdi+0x32760000]; 
0x00000000405130: jmp far fword ptr [rdi+0x41]; 
0x00000000482b24: jmp far fword ptr [rdi+0x48]; 
0x0000000045e4a1: jmp far fword ptr [rdi-0x45]; 
0x000000004286a2: jmp far fword ptr [rdi-0x78f10000]; 
0x00000000406e64: jmp far fword ptr [rdi]; 
0x00000000486fb4: jmp far fword ptr [rdx+0x9]; 
0x0000000045df9d: jmp far fword ptr [rdx-0x76b7fffa]; 
0x0000000046ab1b: jmp far fword ptr [rdx]; 
0x00000000407f31: jmp far fword ptr [rdx]; 
0x0000000048bf3d: jmp far fword ptr [rsi+0xf66fff9]; 
0x00000000413ddd: jmp far fword ptr [rsi-0x74b40000]; 
0x0000000046cbf8: jmp far fword ptr [rsi]; 
0x000000004336c6: jmp far tbyte ptr [rcx]; 
0x0000000043ef9d: jmp qword ptr [r10+0x71]; 
0x0000000043ef55: jmp qword ptr [r10-0x2f]; 
0x0000000043eee4: jmp qword ptr [r10-0xf]; 
0x000000004506b8: jmp qword ptr [r14+0xf]; 
0x000000004273ef: jmp qword ptr [rax+rax*4+0x3c]; 
0x00000000461390: jmp qword ptr [rax+rcx*2+0x33]; 
0x0000000046db4a: jmp qword ptr [rax+rcx*2+0x3]; 
0x000000004035a3: jmp qword ptr [rax+rcx*2-0x75]; 
0x0000000046dafe: jmp qword ptr [rax+rcx*2-0x77]; 
0x00000000479751: jmp qword ptr [rax+rcx*8]; 
0x00000000414a3e: jmp qword ptr [rax+rdx*8]; 
0x0000000040fd82: jmp qword ptr [rax]; 
0x000000004605e8: jmp qword ptr [rbp+rax*2-0x75]; 
0x00000000402c66: jmp qword ptr [rbx+rax*4+0x38]; 
0x0000000041890b: jmp qword ptr [rbx+rax*4+0x39]; 
0x000000004227e4: jmp qword ptr [rbx+rax*4+0x3c]; 
0x0000000046248a: jmp qword ptr [rbx+rcx*4+0x18]; 
0x00000000494846: jmp qword ptr [rbx+rcx*4+0x30]; 
0x00000000403ec7: jmp qword ptr [rbx+rcx*4+0x4]; 
0x000000004140dc: jmp qword ptr [rbx+rcx*4]; 
0x0000000040511d: jmp qword ptr [rcx+rax*2+0xf]; 
0x0000000045a4c7: jmp qword ptr [rcx+rax*2-0x75]; 
0x0000000040fd56: jmp qword ptr [rcx+rax*2-0x77]; 
0x0000000047950d: jmp qword ptr [rcx+rax*8]; 
0x00000000404610: jmp qword ptr [rcx+rcx*4+0x18]; 
0x0000000049485e: jmp qword ptr [rcx+rcx*4+0x1]; 
0x0000000040f80e: jmp qword ptr [rcx+rcx*4+0x2]; 
0x00000000404878: jmp qword ptr [rcx+rcx*4+0x30]; 
0x0000000040479a: jmp qword ptr [rcx+rcx*4+0x8]; 
0x00000000489909: jmp qword ptr [rdi+0x6d]; 
0x00000000472b68: jmp qword ptr [rdi+0x75]; 
0x00000000485e0f: jmp qword ptr [rdi+rax*8+0x4]; 
0x000000004109d6: jmp qword ptr [rdi+rax*8]; 
0x000000004051a1: jmp qword ptr [rdi+rcx-0x7c]; 
0x000000004145f9: jmp qword ptr [rdi+rcx]; 
0x00000000472811: jmp qword ptr [rdi-0x75]; 
0x0000000043ee36: jmp qword ptr [rdx+0x51]; 
0x0000000043ef97: jmp qword ptr [rdx+0x71]; 
0x0000000043ef4f: jmp qword ptr [rdx-0x2f]; 
0x0000000043ea95: jmp qword ptr [rdx-0xf]; 
0x00000000401790: jmp qword ptr [rsi+0x2e]; 
0x00000000474b47: jmp qword ptr [rsi+0x3d]; 
0x00000000456424: jmp qword ptr [rsi+0x41]; 
0x00000000456153: jmp qword ptr [rsi+0x44]; 
0x0000000043974f: jmp qword ptr [rsi+0x45]; 
0x00000000460e39: jmp qword ptr [rsi+0x48]; 
0x00000000424bb4: jmp qword ptr [rsi+0x49]; 
0x0000000040b132: jmp qword ptr [rsi+0x66]; 
0x00000000401d96: jmp qword ptr [rsi+0xf]; 
0x00000000412135: jmp qword ptr [rsi+rax*8]; 
0x0000000040301d: jmp qword ptr [rsi-0x70]; 
0x000000004139ae: jmp qword ptr [rsi-0x77]; 
0x00000000487566: jmp qword ptr [rsi-0x7b]; 
0x0000000045a449: jmp qword ptr [rsi-0x7d]; 
0x000000004176ae: jmp qword ptr [rsi-0x7f]; 
0x00000000470dd8: jmp qword ptr [rsi]; 
0x00000000423861: jmp qword ptr [rsp+rax*2-0x75]; 
0x0000000041db3b: jmp qword ptr [rsp+rax*2-0x77]; 
0x000000004107ea: jmp qword ptr [rsp+rcx*2-0x75]; 
0x000000004064e8: jmp qword ptr [rsp+rsi*2+0x6b]; 
0x0000000040f1b4: jmp r10; 
0x0000000048b044: jmp r11; 
0x0000000046cec1: jmp r8; 
0x00000000433e82: jmp r9; 
0x00000000401bf9: jmp rax; 
0x000000004091fd: jmp rbx; 
0x00000000402b07: jmp rcx; 
0x00000000408b3d: jmp rdx; 
0x00000000413284: jmp rsi; 
0x000000004163b3: jmp rsp; 
0x000000004969e9: jne 0x000000000040171e; xor eax, eax; add rsp, 0x8; ret; 
0x00000000498af6: jne 0x0000000000401755; mov rax, [rax]; add rsp, 0x8; ret; 
0x00000000498b58: jne 0x000000000040175a; mov [rcx], rdx; add rsp, 0x8; ret; 
0x00000000401ed1: jne 0x0000000000401ddd; nop; nop; leave; ret; 
0x0000000041a270: jne 0x000000000041a30a; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000041ac1d: jne 0x000000000041ad0c; add rsp, 0x38; pop rbx; pop rbp; ret; 
0x00000000425516: jne 0x0000000000425598; sub dword ptr [rip+0xa463d], 0x1; pop rbp; ret; 
0x0000000042d1d3: jne 0x000000000042d0c0; sub eax, ecx; vzeroupper; ret; 
0x0000000043169c: jne 0x0000000000431540; sub eax, ecx; vzeroupper; ret; 
0x000000004318a5: jne 0x0000000000431980; pmovmskb eax, xmm1; bsf eax, eax; lea rax, [rdi+rax+0x30]; ret; 
0x00000000431917: jne 0x00000000004319c0; xor eax, eax; ret; 
0x00000000431d96: jne 0x0000000000431e30; xor eax, eax; vzeroupper; ret; 
0x00000000432614: jne 0x0000000000432520; ret; 
0x0000000043275f: jne 0x0000000000432520; vzeroupper; ret; 
0x000000004339c7: jne 0x0000000000433df3; movzx eax, byte ptr [rdi-0x1]; movzx ecx, byte ptr [rsi-0x1]; sub eax, ecx; ret; 
0x0000000043346d: jne 0x0000000000433df3; movzx eax, byte ptr [rdi-0x1]; movzx edx, byte ptr [rsi-0x1]; sub eax, edx; ret; 
0x000000004333c1: jne 0x0000000000433df3; xor eax, eax; ret; 
0x000000004334b8: jne 0x0000000000433dff; movzx eax, byte ptr [rdi-0x1]; movzx edx, byte ptr [rsi-0x1]; sub eax, edx; ret; 
0x000000004333e9: jne 0x0000000000433dff; xor eax, eax; ret; 
0x000000004336ba: jne 0x0000000000433e0a; movzx eax, byte ptr [rdi-0x1]; movzx ecx, byte ptr [rsi-0x1]; sub eax, ecx; ret; 
0x0000000043354d: jne 0x0000000000433e20; and eax, 0xffff; and ecx, 0xffff; sub eax, ecx; ret; 
0x0000000044fc1a: jne 0x000000000044fcc0; mov rax, r8; vzeroupper; ret; 
0x000000004544f0: jne 0x00000000004543e0; lea rax, [rdi+0xb]; ret; 
0x000000004544a9: jne 0x00000000004543e0; lea rax, [rdi+0xf]; ret; 
0x0000000045444c: jne 0x00000000004545c0; test dl, 0x4; jne short 0x00000000004543e0; lea rax, [rdi+0x3]; ret; 
0x0000000045452e: jne 0x00000000004545f0; test al, 0x40; jne 0x0000000000454600; lea rax, [rdi+0x7]; ret; 
0x00000000454535: jne 0x0000000000454600; lea rax, [rdi+0x7]; ret; 
0x0000000045441d: jne 0x0000000000454600; test dl, 0x40; jne short 0x00000000004543e0; lea rax, [rdi+0x7]; ret; 
0x000000004544e7: jne 0x0000000000454630; test dh, 0x4; jne 0x00000000004543e0; lea rax, [rdi+0xb]; ret; 
0x00000000454580: jne 0x0000000000454660; test ah, 0x40; jne 0x0000000000454670; lea rax, [rdi+0xf]; ret; 
0x00000000454588: jne 0x0000000000454670; lea rax, [rdi+0xf]; ret; 
0x000000004544a0: jne 0x0000000000454670; test dh, 0x40; jne 0x00000000004543e0; lea rax, [rdi+0xf]; ret; 
0x00000000455bb4: jne 0x0000000000455dc0; xor eax, eax; ret; 
0x00000000455d14: jne 0x0000000000455dd5; cmp eax, ecx; jne 0x0000000000455dd5; xor eax, eax; ret; 
0x00000000455c61: jne 0x0000000000455dd5; xor eax, eax; ret; 
0x00000000458b5c: jne 0x0000000000458c01; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000004594ad: jne 0x0000000000459550; mov rax, r8; shr rax, 0x2; vzeroupper; ret; 
0x00000000459d95: jne 0x0000000000459e41; add rsp, 0x68; pop rbp; pop r12; ret; 
0x0000000045bbe5: jne 0x000000000045bc90; mov rdi, [r13]; call rbx; 
0x0000000045bbb5: jne 0x000000000045bcf0; mov rdi, [r13]; call rbx; 
0x0000000045bb85: jne 0x000000000045bd50; mov rdi, [r13]; call rbx; 
0x0000000045bc45: jne 0x000000000045be52; mov rdi, [r14]; call rbx; 
0x0000000045bd05: jne 0x000000000045beac; mov rdi, [r14]; call rbx; 
0x0000000045bcd5: jne 0x000000000045bf06; mov rdi, [r14]; call rbx; 
0x0000000045bca5: jne 0x000000000045bf60; mov rdi, [r14]; call rbx; 
0x0000000045bc75: jne 0x000000000045bfba; mov rdi, [r14]; call rbx; 
0x0000000045bd35: jne 0x000000000045c014; mov rdi, [r14]; call rbx; 
0x0000000045bdb6: jne 0x000000000045c13b; mov rdi, [r15]; call rbx; 
0x0000000045bf1b: jne 0x000000000045c1a9; mov rdi, [r15]; call rbx; 
0x0000000045be3a: jne 0x000000000045c217; mov rdi, [r15]; call rbx; 
0x0000000045bfcf: jne 0x000000000045c285; mov rdi, [r15]; call rbx; 
0x0000000045be94: jne 0x000000000045c2f3; mov rdi, [r15]; call rbx; 
0x0000000045be67: jne 0x000000000045c361; mov rdi, [r15]; call rbx; 
0x0000000045beee: jne 0x000000000045c3cf; mov rdi, [r15]; call rbx; 
0x0000000045bf75: jne 0x000000000045c43d; mov rdi, [r15]; call rbx; 
0x0000000045bde0: jne 0x000000000045c4ab; mov rdi, [r15]; call rbx; 
0x0000000045bec1: jne 0x000000000045c519; mov rdi, [r15]; call rbx; 
0x0000000045bfa2: jne 0x000000000045c587; mov rdi, [r15]; call rbx; 
0x0000000045be0d: jne 0x000000000045c5f5; mov rdi, [r15]; call rbx; 
0x0000000045bf48: jne 0x000000000045c663; mov rdi, [r15]; call rbx; 
0x0000000045bffc: jne 0x000000000045c6d1; mov rdi, [r15]; call rbx; 
0x0000000045c678: jne 0x000000000045c77c; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c60a: jne 0x000000000045c7aa; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c59c: jne 0x000000000045c7d8; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c52e: jne 0x000000000045c806; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c4c0: jne 0x000000000045c834; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c452: jne 0x000000000045c862; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c3e4: jne 0x000000000045c890; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c376: jne 0x000000000045c8be; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c308: jne 0x000000000045c8ec; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c29a: jne 0x000000000045c91a; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c22c: jne 0x000000000045c948; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c1be: jne 0x000000000045c976; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c150: jne 0x000000000045c9a4; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c0e2: jne 0x000000000045c9d2; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c077: jne 0x000000000045ca00; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c0ab: jne 0x000000000045ca2e; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c263: jne 0x000000000045ca5c; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c41b: jne 0x000000000045ca8a; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c187: jne 0x000000000045cab8; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c4f7: jne 0x000000000045cae6; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c33f: jne 0x000000000045cb14; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c5d3: jne 0x000000000045cb42; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c119: jne 0x000000000045cb70; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c489: jne 0x000000000045cb9e; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c2d1: jne 0x000000000045cbcc; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c641: jne 0x000000000045cbfa; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c1f5: jne 0x000000000045cc28; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c565: jne 0x000000000045cc56; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c3ad: jne 0x000000000045cc84; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c6af: jne 0x000000000045ccb2; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000046dfb8: jne 0x000000000046e056; add rsp, 0x98; ret; 
0x0000000047f485: jne 0x000000000047f560; pmovmskb eax, xmm1; bsf eax, eax; lea rax, [rdi+rax+0x30]; ret; 
0x0000000047f4f7: jne 0x000000000047f5a0; xor eax, eax; ret; 
0x0000000047f766: jne 0x000000000047f800; xor eax, eax; vzeroupper; ret; 
0x0000000048d546: jne 0x000000000048d5c8; mov rcx, [rsp+0x10]; mov rdi, [rsp+0x18]; call rcx; 
0x0000000048f342: jne 0x000000000048f3c5; leave; ret; 
0x0000000048f8db: jne 0x000000000048fab5; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000049085b: jne 0x00000000004907d9; nop [rax]; call r13; 
0x00000000493482: jne 0x00000000004937a0; lea rsi, [rip+0x397b1]; mov edi, 0x3005; mov eax, 0x9e; syscall; 
0x00000000495eb9: jne 0x00000000004960e5; add rsp, 0x98; pop rbp; pop r12; ret; 
0x0000000049618c: jne 0x0000000000496324; add rsp, 0x78; pop rbp; pop r12; ret; 
0x0000000049644d: jne 0x00000000004963a0; add rsp, 0x38; ret; 
0x000000004017c8: jne short 0x00000000004017cb; ret; 
0x0000000040f6ed: jne short 0x000000000040f6c8; ret; 
0x0000000040f7ec: jne short 0x000000000040f814; mov eax, r8d; add rsp, 0x118; ret; 
0x0000000040f952: jne short 0x000000000040f954; mov rdi, [r12]; mov rdx, r14; mov rax, [rsp]; call rax; 
0x00000000410f9a: jne short 0x0000000000410fa4; add rsp, 0xd8; ret; 
0x00000000411058: jne short 0x0000000000411062; add rsp, 0xd8; ret; 
0x0000000041af3c: jne short 0x000000000041af50; mov eax, [rdx+0x4c]; cmp [rdx+0x48], eax; cmovne eax, ecx; ret; 
0x0000000041d509: jne short 0x000000000041d510; ret; 
0x0000000041e4ce: jne short 0x000000000041e4e0; sub dword ptr [rip+0xadb19], 0x1; ret; 
0x0000000041eb89: jne short 0x000000000041eb78; ret; 
0x0000000041fad6: jne short 0x000000000041fac8; ret; 
0x0000000041fd91: jne short 0x000000000041fd53; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000042086e: jne short 0x0000000000420860; ret; 
0x000000004208a7: jne short 0x00000000004208b8; sub edx, [rax+0x18]; mov eax, [rdi+0x10]; sub eax, edx; ret; 
0x00000000420c9a: jne short 0x0000000000420ca8; sub dword ptr [rip+0xab34d], 0x1; ret; 
0x00000000421857: jne short 0x0000000000421838; nop [rax]; xor r8d, r8d; mov rax, r8; ret; 
0x000000004259dc: jne short 0x00000000004259e4; add rsp, 0x10; pop rbp; ret; 
0x0000000042662e: jne short 0x0000000000426610; pop rbx; pop rbp; pop r12; ret; 
0x000000004266cd: jne short 0x0000000000426708; sub dword ptr [rip+0xa598a], 0x1; pop rbx; ret; 
0x000000004267d7: jne short 0x00000000004267bf; test r8b, r8b; jne short 0x00000000004267e9; mov dword ptr [rip+0xa5878], 0x0; ret; 
0x000000004267dc: jne short 0x00000000004267e9; mov dword ptr [rip+0xa5878], 0x0; ret; 
0x00000000428887: jne short 0x0000000000428870; sub rax, 0x10; ret; 
0x0000000042bb1c: jne short 0x000000000042bb00; xor eax, eax; sub eax, ecx; ret; 
0x0000000042d0dd: jne short 0x000000000042d0c0; sub eax, ecx; vzeroupper; ret; 
0x00000000431562: jne short 0x0000000000431540; sub eax, ecx; vzeroupper; ret; 
0x00000000431947: jne short 0x00000000004319a0; xor eax, eax; ret; 
0x00000000431b93: jne short 0x0000000000431be0; pmovmskb eax, xmm1; bsf eax, eax; lea rax, [rdi+rax+0x30]; ret; 
0x00000000431dd3: jne short 0x0000000000431df0; xor eax, eax; vzeroupper; ret; 
0x0000000043251a: jne short 0x0000000000432520; vzeroupper; ret; 
0x00000000433dcd: jne short 0x0000000000433df3; xor eax, eax; ret; 
0x00000000433e0c: jne short 0x0000000000433e20; and eax, 0xffff; and ecx, 0xffff; sub eax, ecx; ret; 
0x00000000439787: jne short 0x000000000043978f; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004399c9: jne short 0x00000000004399d2; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004399ca: jne short 0x00000000004399d2; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000044f6b7: jne short 0x000000000044f6bd; xor rax, rax; ret; 
0x0000000044fc53: jne short 0x000000000044fc80; mov rax, r8; vzeroupper; ret; 
0x00000000454455: jne short 0x00000000004543e0; lea rax, [rdi+0x3]; ret; 
0x00000000454426: jne short 0x00000000004543e0; lea rax, [rdi+0x7]; ret; 
0x000000004543d6: jne short 0x00000000004543e4; nop [rax+rax]; xor rax, rax; ret; 
0x00000000455884: jne short 0x0000000000455900; movzx eax, byte ptr [rdi-0x9]; movzx edx, byte ptr [rsi-0x9]; sub eax, edx; ret; 
0x00000000455dd1: jne short 0x0000000000455dd5; cmp eax, ecx; sbb eax, eax; sbb eax, 0xffffffff; ret; 
0x00000000455db9: jne short 0x0000000000455dd5; xor eax, eax; ret; 
0x00000000455ee1: jne short 0x0000000000455ed0; ret; 
0x00000000455ed8: jne short 0x0000000000455ef0; movzx ecx, byte ptr [rsi+rdx+0x3]; test cl, cl; jne short 0x0000000000455ed0; ret; 
0x00000000455f91: jne short 0x0000000000455f80; ret; 
0x00000000455f88: jne short 0x0000000000455fa0; movzx ecx, byte ptr [rsi+rdx+0x3]; test cl, cl; jne short 0x0000000000455f80; ret; 
0x00000000456101: jne short 0x00000000004560f0; lea rax, [rcx-0x1]; ret; 
0x00000000456251: jne short 0x0000000000456240; sub rax, 0x1; ret; 
0x000000004574e7: jne short 0x00000000004574ed; mov rax, rdi; ret; 
0x000000004575b1: jne short 0x0000000000457597; rep ret; 
0x00000000457718: jne short 0x00000000004576fb; vzeroupper; ret; 
0x000000004578db: jne short 0x00000000004578b6; vzeroupper; ret; 
0x000000004586b3: jne short 0x00000000004586d4; add rsp, 0x20; pop rbx; ret; 
0x00000000459097: jne short 0x000000000045909d; xor rax, rax; ret; 
0x000000004594e3: jne short 0x0000000000459510; mov rax, r8; shr rax, 0x2; vzeroupper; ret; 
0x00000000459c3b: jne short 0x0000000000459c51; add rsp, 0x28; ret; 
0x00000000459e5e: jne short 0x0000000000459e70; syscall; 
0x00000000459efe: jne short 0x0000000000459f10; mov eax, 0x1; syscall; 
0x0000000045a7ab: jne short 0x000000000045a7f3; add rsp, 0x68; ret; 
0x0000000045a83a: jne short 0x000000000045a883; add rsp, 0x18; ret; 
0x0000000045a8f2: jne short 0x000000000045a93b; add rsp, 0x58; ret; 
0x0000000045a990: jne short 0x000000000045a9db; add rsp, 0x58; ret; 
0x0000000045ab9e: jne short 0x000000000045aba5; add rsp, 0x28; ret; 
0x0000000045ad24: jne short 0x000000000045ad58; mov rdi, rbp; mov edx, r13d; mov esi, 0x1; call r12; 
0x0000000045adb4: jne short 0x000000000045ade8; mov rdi, rbp; mov rdx, r13; mov esi, 0x1; call r12; 
0x0000000045ae2d: jne short 0x000000000045ae56; mov rdi, [rbp]; call rbx; 
0x0000000045b966: jne short 0x000000000045b970; add rsp, 0x8; pop rbp; pop r12; ret; 
0x0000000045b99b: jne short 0x000000000045b9f0; mov rdi, rbp; xor edx, edx; mov esi, 0x1; call r12; 
0x0000000045ba14: jne short 0x000000000045ba20; pop rbp; pop r12; pop r13; ret; 
0x0000000045ba4c: jne short 0x000000000045ba98; mov rdi, rbp; mov rdx, r13; mov esi, 0x1; call r12; 
0x0000000045bade: jne short 0x000000000045bb08; mov rdi, [rbp]; call rbx; 
0x0000000045bb1f: jne short 0x000000000045bb70; mov rdi, [r12]; call rbx; 
0x0000000045bb80: jne short 0x000000000045bb92; test r14, r14; jne 0x000000000045bd50; mov rdi, [r13]; call rbx; 
0x0000000045bbb0: jne short 0x000000000045bbc2; test r14, r14; jne 0x000000000045bcf0; mov rdi, [r13]; call rbx; 
0x0000000045bb4f: jne short 0x000000000045bbd0; mov rdi, [r12]; call rbx; 
0x0000000045bbe0: jne short 0x000000000045bbf2; test r14, r14; jne 0x000000000045bc90; mov rdi, [r13]; call rbx; 
0x0000000045bc0c: jne short 0x000000000045bc1e; test r14, r14; jne short 0x000000000045bc30; mov rdi, [r13]; call rbx; 
0x0000000045bc11: jne short 0x000000000045bc30; mov rdi, [r13]; call rbx; 
0x0000000045bd61: jne short 0x000000000045bda1; mov rdi, [r14]; call rbx; 
0x0000000045bd8d: jne short 0x000000000045bdf8; mov rdi, [r14]; call rbx; 
0x0000000045c025: jne short 0x000000000045c062; mov rdi, [r15]; call rbx; 
0x0000000045c04e: jne short 0x000000000045c0cd; mov rdi, [r15]; call rbx; 
0x0000000045c6e2: jne short 0x000000000045c72f; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c711: jne short 0x000000000045c757; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045d2fa: jne short 0x000000000045d306; add rsp, 0x88; pop rbx; pop rbp; ret; 
0x0000000045d38a: jne short 0x000000000045d396; add rsp, 0x88; pop rbx; pop rbp; ret; 
0x0000000045d543: jne short 0x000000000045d550; ret; 
0x000000004611c9: jne short 0x000000000046115b; mov rdi, rbx; call rsi; 
0x0000000046dc45: jne short 0x000000000046dc4c; add rsp, 0x18; ret; 
0x0000000046dcda: jne short 0x000000000046dce8; mov [rbx+0x40], esi; xor eax, eax; pop rbx; ret; 
0x0000000046dec0: jne short 0x000000000046df04; mov eax, r9d; add rsp, 0x148; ret; 
0x0000000046f63e: jne short 0x000000000046f668; sub dword ptr [rip+0x5cc99], 0x1; xor eax, eax; add rsp, 0x8; ret; 
0x0000000046fee5: jne short 0x000000000046ff05; add rsp, 0x38; ret; 
0x00000000475540: jne short 0x0000000000475578; sub dword ptr [rip+0x56da7], 0x1; mov eax, r8d; pop rbx; ret; 
0x00000000475698: jne short 0x00000000004756a2; add rsp, 0xd8; ret; 
0x000000004756d8: jne short 0x00000000004756e0; sub dword ptr [rdi], 0x1; ret; 
0x0000000047cf41: jne short 0x000000000047cf30; ret; 
0x0000000047d5d2: jne short 0x000000000047d648; mov rax, [rax+0xe0]; call qword ptr [rax+0x68]; 
0x0000000047e133: jne short 0x000000000047e11c; and r11d, 0xffffffbb; cmp r11d, 0xa; je short 0x000000000047e140; ret; 
0x0000000047f28d: jne short 0x000000000047f280; ret; 
0x0000000047f527: jne short 0x000000000047f580; xor eax, eax; ret; 
0x0000000047f7a3: jne short 0x000000000047f7c0; xor eax, eax; vzeroupper; ret; 
0x000000004803f3: jne short 0x000000000048042a; add rsp, 0xa8; pop rbp; pop r12; ret; 
0x00000000480593: jne short 0x000000000048059d; movzx eax, al; add rsp, 0x58; ret; 
0x0000000048064d: jne short 0x0000000000480674; mov eax, r9d; add rsp, 0x38; ret; 
0x0000000048091d: jne short 0x00000000004808df; leave; mov eax, 0x1; ret; 
0x0000000048699f: jne short 0x00000000004869a8; pop rbx; ret; 
0x00000000486d24: jne short 0x0000000000486d39; mov r14, [rbx]; mov rax, [rbx+0x10]; add rax, [r13]; call rax; 
0x00000000487173: jne short 0x0000000000487177; call rax; 
0x00000000487301: jne short 0x0000000000487305; call rax; 
0x00000000487a10: jne short 0x0000000000487a14; call rax; 
0x00000000487b45: jne short 0x0000000000487b57; mov [rbp-0xd8], r11; call rax; 
0x00000000489630: jne short 0x0000000000489608; mov eax, [rcx]; ret; 
0x0000000048a2b2: jne short 0x000000000048a2c0; lea rax, [r8+0x1]; mov [rip+0x42411], rax; ret; 
0x0000000048a3ab: jne short 0x000000000048a3c0; mov r8, [rip+0x4231c]; mov rax, r8; ret; 
0x0000000048acb5: jne short 0x000000000048acd0; mov qword ptr [rbx], 0x0; pop rbx; or dword ptr [rip+0x3f802], 0x1; ret; 
0x0000000048bf9e: jne short 0x000000000048bf6e; movsx eax, dl; neg eax; ret; 
0x0000000048cb3e: jne short 0x000000000048cb46; add rsp, 0x20; pop rbx; ret; 
0x0000000048cc39: jne short 0x000000000048cc63; add rsp, 0x38; ret; 
0x0000000048cd05: jne short 0x000000000048cd34; add rsp, 0x58; ret; 
0x0000000048ce77: jne short 0x000000000048ceb4; add rsp, 0x68; ret; 
0x0000000048d195: jne short 0x000000000048d1c4; add rsp, 0x58; ret; 
0x0000000048d58c: jne short 0x000000000048d5df; add rsp, 0x110; mov eax, r12d; pop r12; ret; 
0x0000000048f5b9: jne short 0x000000000048f5e0; mov dword ptr [rdx], 0x0; mov eax, 0x1; ret; 
0x0000000048f66a: jne short 0x000000000048f64c; mov eax, 0x1; ret; 
0x0000000048f663: jne short 0x000000000048f652; cmp cx, 0x7fff; jne short 0x000000000048f64c; mov eax, 0x1; ret; 
0x0000000048f64a: jne short 0x000000000048f678; mov dword ptr [rdx], 0x0; mov eax, 0x1; ret; 
0x0000000048f72c: jne short 0x000000000048f790; mov dword ptr [rdx], 0x0; mov eax, 0x2; ret; 
0x0000000048fdba: jne short 0x000000000048fde0; mov rdx, [rbx+0x10]; mov [rdx], rax; pop rbx; ret; 
0x0000000048fe3c: jne short 0x000000000048fe43; add rsp, 0x28; ret; 
0x0000000048ff2a: jne short 0x000000000048ff31; add rsp, 0x38; ret; 
0x000000004905eb: jne short 0x00000000004905f0; mov [rbx], rax; add rsp, 0x10; pop rbx; ret; 
0x00000000492ce0: jne short 0x0000000000492ce8; ret; 
0x00000000493ea5: jne short 0x0000000000493eac; add rsp, 0x38; ret; 
0x00000000493faa: jne short 0x0000000000493fb6; add rsp, 0x30; mov rax, r12; pop r12; ret; 
0x00000000494088: jne short 0x0000000000494094; add rsp, 0x30; mov rax, r12; pop r12; ret; 
0x000000004969b7: jne short 0x00000000004969e0; mov rax, [rsi+0xa8]; add rsp, 0x8; ret; 
0x000000004969c9: jne short 0x0000000000496a00; mov rax, [rsi+0xb8]; add rsp, 0x8; ret; 
0x00000000497abc: jne short 0x0000000000497ac5; cmp qword ptr [r9+0x38], 0x0; je short 0x0000000000497b14; add rsp, 0x18; ret; 
0x00000000498edd: jne short 0x0000000000498ecf; mov r15, [rbp-0x8]; leave; ret; 
0x000000004991a5: jne short 0x0000000000499197; mov r15, [rbp-0x8]; leave; ret; 
0x000000004993c7: jne short 0x00000000004993b9; mov r15, [rbp-0x8]; leave; ret; 
0x000000004996ee: jne short 0x0000000000499710; add rsp, 0x8; ret; 
0x000000004996fb: jne short 0x0000000000499733; mov eax, 0x8; add rsp, 0x8; ret; 
0x00000000499757: jne short 0x0000000000499768; mov rax, [rsi+0x10]; add rsp, 0x8; ret; 
0x0000000049976a: jne short 0x0000000000499793; xor eax, eax; add rsp, 0x8; ret; 
0x000000004997b7: jne short 0x00000000004997c8; mov rax, [rsi+0x10]; add rsp, 0x8; ret; 
0x000000004997ca: jne short 0x00000000004997f3; xor eax, eax; add rsp, 0x8; ret; 
0x0000000049ac78: jne short 0x000000000049ac80; ret; 
0x0000000049aeb8: jne short 0x000000000049aec0; ret; 
0x0000000049b17a: jne short 0x000000000049b19b; xor eax, eax; add rsp, 0x8; ret; 
0x0000000049b756: jne short 0x000000000049b740; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000049b7a9: jne short 0x000000000049b780; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000049b8fd: jne short 0x000000000049b8e0; pop rbx; ret; 
0x0000000049ba15: jne short 0x000000000049b9fd; pop rbx; ret; 
0x0000000049ce3e: jne short 0x000000000049ce20; pop rbx; pop rbp; pop r12; ret; 
0x00000000422a2b: jno short 0x0000000000422a37; add [rax-0x73], cl; add eax, 0x319b; mov [rip+0xa7104], rax; ret; 
0x0000000043367e: jno short 0x0000000000433687; add [rax], al; xor eax, eax; ret; 
0x00000000439c07: jno short 0x0000000000439c0f; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439e4a: jno short 0x0000000000439e52; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043eac4: jno short 0x000000000043eac4; vmovups [r9-0x40], zmm7; ret; 
0x0000000043ecfe: jno short 0x000000000043ecfe; vmovups [r9-0x40], zmm15; ret; 
0x0000000043ee65: jno short 0x000000000043ee6d; vmovups [r9+0x1c0], zmm15; ret; 
0x0000000043efbc: jno short 0x000000000043f03a; adc [rdi-0x6], rbp; vmovups [rdi-0x1c0], zmm14; vmovups [rdi-0x200], zmm15; ret; 
0x0000000043efc3: jno short 0x000000000043f041; adc [rdi-0x7], rsi; vmovups [rdi-0x200], zmm15; ret; 
0x0000000043efca: jno short 0x000000000043f048; adc [rdi-0x8], rdi; ret; 
0x00000000456978: jno short 0x000000000045696a; movups [rcx-0x20], xmm7; movups [rcx-0x30], xmm8; movups [r11], xmm4; ret; 
0x00000000456a66: jno short 0x0000000000456a58; movups [rcx-0x20], xmm7; movups [rcx-0x30], xmm8; movups [r11], xmm4; ret; 
0x0000000048c7c3: jno short 0x000000000048c7c8; add [rcx], dh; shr al, 0xb2; ret far; 
0x00000000403f44: jnp short 0x0000000000403f52; add cl, ch; ret far; 
0x00000000429496: jnp short 0x0000000000429495; call far fword ptr [rdx+0x31]; 
0x0000000043940f: jnp short 0x0000000000439417; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000453bc1: jnp short 0x0000000000453ba1; add al, 0x0; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000004876dc: jnp short 0x00000000004876e6; and eax, 0x8348df74; ret; 
0x0000000040321a: jns short 0x0000000000403221; add [rax-0x77], cl; ret; 
0x00000000439200: jns short 0x0000000000439208; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439423: jns short 0x000000000043942b; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043eacb: jns short 0x000000000043eacc; ret; 
0x0000000043ed05: jns short 0x000000000043ed06; ret; 
0x0000000043ee6c: jns short 0x000000000043ee75; ret; 
0x0000000045697c: jns short 0x000000000045695e; movups [rcx-0x30], xmm8; movups [r11], xmm4; ret; 
0x00000000456a6a: jns short 0x0000000000456a4c; movups [rcx-0x30], xmm8; movups [r11], xmm4; ret; 
0x00000000456d45: jns short 0x0000000000456d07; vmovdqu [rcx-0x60], ymm8; vmovdqu [r11], ymm4; vzeroupper; ret; 
0x00000000456e78: jns short 0x0000000000456e3a; vmovdqu [rcx-0x60], ymm8; vmovdqu [r11], ymm4; vzeroupper; ret; 
0x000000004571fd: jns short 0x00000000004571fd; vmovdqu64 [rcx-0xc0], zmm8; vmovdqu64 [r11], zmm4; vzeroupper; ret; 
0x00000000457388: jns short 0x0000000000457388; vmovdqu64 [rcx-0xc0], zmm8; vmovdqu64 [r11], zmm4; vzeroupper; ret; 
0x0000000047bbdb: jns short 0x000000000047bbe0; add [rax+0x63], cl; or al, 0x8f; add rcx, rdi; notrack jmp rcx; 
0x0000000048a8c3: jns short 0x000000000048a88a; stc; jmp qword ptr [rsi+0xf]; 
0x00000000497ac0: jns short 0x0000000000497afa; add [rdi+rcx*2+0x48], dh; add esp, 0x18; ret; 
0x00000000402602: jo short 0x00000000004025c3; add [rax], esi; add [rax], al; mov eax, 0x9e; syscall; 
0x00000000410286: jo short 0x00000000004102a8; mov edi, ebp; ror rdx, 0x11; xor rdx, fs:[0x30]; call rdx; 
0x0000000042a16c: jo short 0x000000000042a137; add al, [rax]; lea rax, [rip+0x2c9b9]; cmove rax, rdx; ret; 
0x0000000042a23c: jo short 0x000000000042a2b6; add al, [rax]; cmovne rax, rdx; ret; 
0x000000004581fc: jo short 0x0000000000458259; pop rbp; pop r12; ret; 
0x0000000045d90a: jo short 0x000000000045d92c; ret; 
0x000000004657e5: jo short 0x00000000004657f6; mov dh, 0x48; dec dword ptr [rax+0x3948074a]; ret; 
0x00000000466541: jo short 0x0000000000466552; mov dh, 0x48; dec dword ptr [rax+0x3948074a]; ret; 
0x00000000468d69: jo short 0x0000000000468d7a; mov dh, 0x48; dec dword ptr [rax+0x3948074a]; ret; 
0x0000000046a4c1: jo short 0x000000000046a4d2; mov dh, 0x48; dec dword ptr [rax+0x3948074a]; ret; 
0x0000000046eb0b: jo short 0x000000000046eb1b; mov rsi, [rsp+0x10]; mov rdx, rbp; mov rdi, r12; call rbx; 
0x0000000047e06e: jo short 0x000000000047e0b0; mov [rax], rdx; xor eax, eax; ret; 
0x0000000047f01c: jo short 0x000000000047f020; add [rax], al; cmove rax, rdx; ret; 
0x00000000486fec: jo short 0x0000000000486fc4; add al, [rax]; movsxd rax, [rsi+r12*4]; add rax, rsi; notrack jmp rax; 
0x00000000496848: jo short 0x0000000000496881; add al, [rax]; ret; 
0x00000000448eed: jp 0x0000000063938ef8; or al, 0x8a; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000403f95: jp short 0x0000000000403fa3; add [rax+0x29], cl; ret far; 
0x00000000428c7e: jp short 0x0000000000428c87; add [rax+0x63], cl; add al, 0x82; add rax, rdx; notrack jmp rax; 
0x0000000042a3d6: jp short 0x000000000042a3d8; add [rax-0x73], cl; add eax, 0x7600; cmove rax, rdx; ret; 
0x00000000439135: jp short 0x000000000043913d; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043958d: jp short 0x0000000000439595; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000044d560: jp short 0x000000000044d567; add [rbx+0x148b8104], cl; xchg ecx, eax; sub eax, edx; ret; 
0x00000000459725: jp short 0x0000000000459722; dec dword ptr [rax-0x77]; ret; 
0x0000000045c29c: jp short 0x000000000045c2a4; add [rax], al; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x00000000460b12: jp short 0x0000000000460b1a; cli; jmp qword ptr [rsi+0xf]; 
0x0000000046b7dc: jp short 0x000000000046b7d7; call qword ptr [rax-0x5e1f00d]; 
0x0000000046d3c2: jp short 0x000000000046d35e; sti; jmp qword ptr [rsi+0x2e]; 
0x0000000046f3c7: jp short 0x000000000046f3c4; dec dword ptr [rcx+rcx*4+0x65]; mov eax, 0xfffdd4e9; jmp qword ptr [rbx+rcx*4+0x4]; 
0x000000004759dd: jp short 0x0000000000475a27; movsxd ebx, ebx; mov rdx, rbx; call qword ptr [r13+0x38]; 
0x0000000047b804: jp short 0x000000000047b7fe; jmp qword ptr [rsi+0xf]; 
0x0000000047bc3f: jp short 0x000000000047bc44; add [rax+0x63], cl; adc al, 0x91; add rdx, rcx; notrack jmp rdx; 
0x0000000048bcfa: jp short 0x000000000048bd70; adc ecx, [rdi]; mov dh, 0x45; add cl, [rax-0x7d]; ret; 
0x000000004135f7: jrcxz 0x00000000004135f8; jmp qword ptr [rsi+0xf]; 
0x000000004360a7: jrcxz 0x00000000004360f5; mov [rdi-0x15], ebx; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x000000004360ef: jrcxz 0x000000000043613d; mov [rdi-0x15], ebx; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043612d: jrcxz 0x000000000043617b; mov [rdi-0x15], ebx; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000436169: jrcxz 0x00000000004361b7; mov [rdi-0x15], ebx; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x000000004361a3: jrcxz 0x00000000004361f1; mov [rdi-0x15], ebx; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x000000004361db: jrcxz 0x0000000000436229; mov [rdi-0x15], ebx; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000436203: jrcxz 0x0000000000436251; mov [rdi-0x15], ebx; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000438a87: jrcxz 0x0000000000438ad5; mov [rdi-0x15], ebx; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000438acf: jrcxz 0x0000000000438b1d; mov [rdi-0x15], ebx; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000438b0d: jrcxz 0x0000000000438b5b; mov [rdi-0x15], ebx; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000438b49: jrcxz 0x0000000000438b97; mov [rdi-0x15], ebx; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000438b83: jrcxz 0x0000000000438bd1; mov [rdi-0x15], ebx; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000438bbb: jrcxz 0x0000000000438c09; mov [rdi-0x15], ebx; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000438be3: jrcxz 0x0000000000438c31; mov [rdi-0x15], ebx; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043b1a9: jrcxz 0x000000000043b19f; movq [rdi-0x10], mm1; ret; 
0x0000000043dcd9: jrcxz 0x000000000043dccf; movq [rdi-0x10], mm1; ret; 
0x000000004450b9: jrcxz 0x00000000004450b9; add eax, 0x8a0c8b00; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x000000004535d4: jrcxz 0x00000000004535da; add [rcx+0x63], cl; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000453609: jrcxz 0x000000000045360f; add [rcx+0x63], cl; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000045ced5: jrcxz 0x000000000045ced7; loop 0x000000000045ced8; dec dword ptr [rax-0x7f]; ret; 
0x00000000468119: jrcxz 0x0000000000468144; ret; 
0x00000000473064: jrcxz 0x00000000004730aa; mov eax, eax; ret; 
0x0000000047e137: jrcxz 0x000000000047e0f4; cmp r11d, 0xa; je short 0x000000000047e140; ret; 
0x0000000048f3c7: jrcxz 0x000000000048f3c5; jmp qword ptr [rsi+0xf]; 
0x0000000046e202: js 0x000000000046ed3a; mov rdi, [rsp+0x18]; mov rdx, rbp; mov rsi, r12; call rbx; 
0x00000000453645: js 0x00000000670838c2; nop [rax+rax]; mov edx, [rsi]; mov [rdi], edx; ret; 
0x000000004051cb: js short 0x00000000004051dc; test [rdi+rcx-0x7fc00000], ah; call far fword ptr [rax+0xf]; 
0x0000000040576a: js short 0x0000000000405772; add [rdi], cl; test [rcx+rdi*8-0x1], eax; inc dword ptr [rax-0x80]; jmp qword ptr [rdi+rcx-0x7c]; 
0x00000000405914: js short 0x0000000000405925; test bh, al; or al, [rax]; add [rax-0x80], al; call far fword ptr [rax+0xf]; 
0x00000000406274: js short 0x0000000000406285; test [rbx], ch; add [rax], eax; add [rax-0x80], al; call far fword ptr [rax+0xf]; 
0x0000000040630e: js short 0x0000000000406384; cmp al, [rax-0x80]; call far fword ptr [rax+0xf]; 
0x00000000406468: js short 0x0000000000406479; test [rbx], ch; add [rax], eax; add [rax-0x80], al; call far fword ptr [rax+0xf]; 
0x00000000406502: js short 0x0000000000406578; and al, [rax-0x80]; call far fword ptr [rax+0xf]; 
0x00000000412958: js short 0x0000000000412920; test [rax], eax; idiv edi; jmp qword ptr [rax]; 
0x0000000041373e: js short 0x0000000000413707; test eax, edi; idiv bh; call qword ptr [rax]; 
0x000000004177eb: js short 0x00000000004177f5; add [rax+0x63], cl; add al, 0x81; add rax, rcx; notrack jmp rax; 
0x000000004267e0: js short 0x000000000042683a; or al, [rax]; add [rax], al; add [rax], al; ret; 
0x000000004392eb: js short 0x00000000004392f3; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004393a8: js short 0x00000000004393b0; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004396ca: js short 0x00000000004396d2; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004396c9: js short 0x00000000004396d2; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000045a4c4: js short 0x000000000045a48f; cld; jmp qword ptr [rcx+rax*2-0x75]; 
0x0000000046dde0: js short 0x000000000046ddf1; adc [rsp+0x88], edi; mov r10d, 0x8; mov eax, 0xd; syscall; 
0x0000000047e06a: js short 0x000000000047e07c; mov [rax+0x40], rsi; mov [rax], rdx; xor eax, eax; ret; 
0x00000000496195: js short 0x00000000004961f4; pop r12; ret; 
0x0000000049689e: js short 0x00000000004968c8; mov [r9], r8; add rsp, 0x8; ret; 
0x0000000049984e: js short 0x0000000000499878; mov [r9], r8; add rsp, 0x8; ret; 
0x0000000049b1ee: js short 0x000000000049b218; mov [r9], r8; add rsp, 0x8; ret; 
0x00000000402221: lahf; or al, 0x0; add rsp, 0x88; pop rbx; ret; 
0x000000004220b3: lahf; or al, [rax]; syscall; 
0x0000000045f59d: lahf; ret far; 
0x000000004127ed: lahf; ret; 
0x00000000492cdc: lahf; sahf; add eax, [rax]; jne short 0x0000000000492ce8; ret; 
0x0000000045b0ab: lahf; vpaddsw ymm0, ymm15, [rcx+0xf]; lahf; ret; 
0x0000000045af6d: lar eax, [rax]; add [rcx-0x7d], cl; ret far; 
0x0000000043b82c: lddqu xmm0, [rsi+0x10]; movdqu [rdi+0x10], xmm0; lddqu xmm0, [rsi]; movdqu [rdi], xmm0; ret; 
0x0000000043bea6: lddqu xmm0, [rsi+0x1]; lddqu xmm1, [rsi]; movdqu [rdi+0x1], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000043be36: lddqu xmm0, [rsi+0x2]; lddqu xmm1, [rsi]; movdqu [rdi+0x2], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000043bdc6: lddqu xmm0, [rsi+0x3]; lddqu xmm1, [rsi]; movdqu [rdi+0x3], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000043bd56: lddqu xmm0, [rsi+0x4]; lddqu xmm1, [rsi]; movdqu [rdi+0x4], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000043bce6: lddqu xmm0, [rsi+0x5]; lddqu xmm1, [rsi]; movdqu [rdi+0x5], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000043bc76: lddqu xmm0, [rsi+0x6]; lddqu xmm1, [rsi]; movdqu [rdi+0x6], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000043bc06: lddqu xmm0, [rsi+0x7]; lddqu xmm1, [rsi]; movdqu [rdi+0x7], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000043bb96: lddqu xmm0, [rsi+0x8]; lddqu xmm1, [rsi]; movdqu [rdi+0x8], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000043bb26: lddqu xmm0, [rsi+0x9]; lddqu xmm1, [rsi]; movdqu [rdi+0x9], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000043bab6: lddqu xmm0, [rsi+0xa]; lddqu xmm1, [rsi]; movdqu [rdi+0xa], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000043ba46: lddqu xmm0, [rsi+0xb]; lddqu xmm1, [rsi]; movdqu [rdi+0xb], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000043b9d6: lddqu xmm0, [rsi+0xc]; lddqu xmm1, [rsi]; movdqu [rdi+0xc], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000043b966: lddqu xmm0, [rsi+0xd]; lddqu xmm1, [rsi]; movdqu [rdi+0xd], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000043b8f6: lddqu xmm0, [rsi+0xe]; lddqu xmm1, [rsi]; movdqu [rdi+0xe], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000043b886: lddqu xmm0, [rsi+0xf]; lddqu xmm1, [rsi]; movdqu [rdi+0xf], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000043b016: lddqu xmm0, [rsi-0x10]; movdqu [rdi-0x10], xmm0; ret; 
0x0000000043b7bc: lddqu xmm0, [rsi-0x11]; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x11], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000043b73c: lddqu xmm0, [rsi-0x12]; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x12], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000043b6ac: lddqu xmm0, [rsi-0x13]; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x13], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000043b62c: lddqu xmm0, [rsi-0x14]; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x14], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000043b5ac: lddqu xmm0, [rsi-0x15]; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x15], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000043b52c: lddqu xmm0, [rsi-0x16]; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x16], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000043b4ac: lddqu xmm0, [rsi-0x17]; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x17], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000043b42c: lddqu xmm0, [rsi-0x18]; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x18], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000043b3ac: lddqu xmm0, [rsi-0x19]; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x19], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000043b32c: lddqu xmm0, [rsi-0x1a]; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x1a], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000043b2ac: lddqu xmm0, [rsi-0x1b]; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x1b], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000043b22c: lddqu xmm0, [rsi-0x1c]; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x1c], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000043b19c: lddqu xmm0, [rsi-0x1d]; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x1d], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000043b10c: lddqu xmm0, [rsi-0x1e]; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x1e], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000043b07c: lddqu xmm0, [rsi-0x1f]; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x1f], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000043b00c: lddqu xmm0, [rsi-0x20]; movdqu [rdi-0x20], xmm0; lddqu xmm0, [rsi-0x10]; movdqu [rdi-0x10], xmm0; ret; 
0x0000000043b836: lddqu xmm0, [rsi]; movdqu [rdi], xmm0; ret; 
0x0000000043b7c1: lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x11], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000043b741: lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x12], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000043b6b1: lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x13], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000043b631: lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x14], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000043b5b1: lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x15], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000043b531: lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x16], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000043b4b1: lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x17], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000043b431: lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x18], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000043b3b1: lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x19], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000043b331: lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x1a], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000043b2b1: lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x1b], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000043b231: lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x1c], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000043b1a1: lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x1d], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000043b111: lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x1e], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000043b081: lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x1f], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000043beab: lddqu xmm1, [rsi]; movdqu [rdi+0x1], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000043be3b: lddqu xmm1, [rsi]; movdqu [rdi+0x2], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000043bdcb: lddqu xmm1, [rsi]; movdqu [rdi+0x3], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000043bd5b: lddqu xmm1, [rsi]; movdqu [rdi+0x4], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000043bceb: lddqu xmm1, [rsi]; movdqu [rdi+0x5], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000043bc7b: lddqu xmm1, [rsi]; movdqu [rdi+0x6], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000043bc0b: lddqu xmm1, [rsi]; movdqu [rdi+0x7], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000043bb9b: lddqu xmm1, [rsi]; movdqu [rdi+0x8], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000043bb2b: lddqu xmm1, [rsi]; movdqu [rdi+0x9], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000043babb: lddqu xmm1, [rsi]; movdqu [rdi+0xa], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000043ba4b: lddqu xmm1, [rsi]; movdqu [rdi+0xb], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000043b9db: lddqu xmm1, [rsi]; movdqu [rdi+0xc], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000043b96b: lddqu xmm1, [rsi]; movdqu [rdi+0xd], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000043b8fb: lddqu xmm1, [rsi]; movdqu [rdi+0xe], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000043b88b: lddqu xmm1, [rsi]; movdqu [rdi+0xf], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000048a2b5: lea eax, [rax+0x1]; mov [rip+0x42411], rax; ret; 
0x000000004968bc: lea eax, [rax+0x8]; mov [rcx], r8; ret; 
0x0000000047fd04: lea eax, [rax+rax]; test rax, rax; je short 0x000000000047fd40; call rax; 
0x00000000431974: lea eax, [rax+rdi+0x10]; ret; 
0x00000000431984: lea eax, [rax+rdi+0x20]; ret; 
0x00000000431954: lea eax, [rax+rdi-0x10]; ret; 
0x00000000486373: lea eax, [rax+rdx*4]; mov [rdi+0x2f4], edx; mov [rdi+0x308], rax; ret; 
0x00000000486341: lea eax, [rax+rdx*4]; mov [rdi+0x2fc], ecx; mov [rdi+0x310], rax; ret; 
0x0000000042880d: lea eax, [rax-0x10]; ret; 
0x00000000477757: lea eax, [rax]; idiv edi; jmp far fword ptr [rcx]; 
0x0000000047ecdd: lea eax, [rcx+rsi]; ret; 
0x00000000456104: lea eax, [rcx-0x1]; ret; 
0x00000000453dcc: lea eax, [rdi+0x10]; ret; 
0x00000000453de1: lea eax, [rdi+0x11]; ret; 
0x00000000453dff: lea eax, [rdi+0x12]; ret; 
0x00000000453e1f: lea eax, [rdi+0x13]; ret; 
0x00000000453e42: lea eax, [rdi+0x14]; ret; 
0x00000000453e61: lea eax, [rdi+0x15]; ret; 
0x00000000453e81: lea eax, [rdi+0x16]; ret; 
0x00000000453ea1: lea eax, [rdi+0x17]; ret; 
0x00000000453ec4: lea eax, [rdi+0x18]; ret; 
0x00000000453ee9: lea eax, [rdi+0x19]; ret; 
0x00000000453c67: lea eax, [rdi+0x1]; ret; 
0x000000004542a7: lea eax, [rdi+0x1]; vzeroupper; ret; 
0x00000000453f07: lea eax, [rdi+0x1a]; ret; 
0x00000000453f27: lea eax, [rdi+0x1b]; ret; 
0x00000000453f43: lea eax, [rdi+0x1c]; ret; 
0x00000000453f63: lea eax, [rdi+0x1d]; ret; 
0x00000000453f83: lea eax, [rdi+0x1e]; ret; 
0x00000000453fa3: lea eax, [rdi+0x1f]; ret; 
0x00000000453c7a: lea eax, [rdi+0x2]; ret; 
0x000000004542bb: lea eax, [rdi+0x2]; vzeroupper; ret; 
0x00000000453c85: lea eax, [rdi+0x3]; ret; 
0x000000004542d5: lea eax, [rdi+0x3]; vzeroupper; ret; 
0x00000000453c98: lea eax, [rdi+0x4]; ret; 
0x00000000453cad: lea eax, [rdi+0x5]; ret; 
0x00000000453ccb: lea eax, [rdi+0x6]; ret; 
0x00000000453cd7: lea eax, [rdi+0x7]; ret; 
0x00000000453cea: lea eax, [rdi+0x8]; ret; 
0x00000000453cff: lea eax, [rdi+0x9]; ret; 
0x00000000453d1d: lea eax, [rdi+0xa]; ret; 
0x00000000453d3d: lea eax, [rdi+0xb]; ret; 
0x00000000453d5f: lea eax, [rdi+0xc]; ret; 
0x00000000453d7f: lea eax, [rdi+0xd]; ret; 
0x00000000453d9f: lea eax, [rdi+0xe]; ret; 
0x00000000453db9: lea eax, [rdi+0xf]; ret; 
0x000000004319a9: lea eax, [rdi+rax+0x10]; ret; 
0x0000000044f2a7: lea eax, [rdi+rax+0x20]; cmp sil, [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x000000004319b9: lea eax, [rdi+rax+0x20]; ret; 
0x000000004318b3: lea eax, [rdi+rax+0x30]; ret; 
0x0000000044f2c7: lea eax, [rdi+rax+0x40]; cmp sil, [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x0000000044f305: lea eax, [rdi+rax+0x60]; cmp sil, [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x0000000047ef25: lea eax, [rdi+rax-0x20]; vzeroupper; ret; 
0x0000000044ed00: lea eax, [rdi+rax]; cmp [rax], sil; cmovne rax, rdx; ret; 
0x0000000044f16d: lea eax, [rdi+rax]; cmp sil, [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x0000000044ef2b: lea eax, [rdi+rax]; ret; 
0x000000004542ed: lea eax, [rdi+rdx]; vzeroupper; ret; 
0x0000000047ebd9: lea eax, [rdi+rsi]; ret; 
0x0000000048c91c: lea eax, [rdi-0x1]; cmp rax, 0xfffffffffffffffd; jbe short 0x000000000048c930; ret; 
0x00000000453c53: lea eax, [rdi]; ret; 
0x00000000454225: lea eax, [rdi]; vzeroupper; ret; 
0x00000000453167: lea eax, [rdx+0x1]; ret; 
0x0000000045317d: lea eax, [rdx+0x2]; ret; 
0x00000000453195: lea eax, [rdx+0x3]; ret; 
0x000000004531ab: lea eax, [rdx+0x4]; ret; 
0x000000004531bd: lea eax, [rdx+0x5]; ret; 
0x000000004531db: lea eax, [rdx+0x6]; ret; 
0x000000004530e7: lea eax, [rdx+0x7]; ret; 
0x000000004531ed: lea eax, [rdx+0x8]; ret; 
0x0000000045320d: lea eax, [rdx+0x9]; ret; 
0x0000000045322d: lea eax, [rdx+0xa]; ret; 
0x0000000045324d: lea eax, [rdx+0xb]; ret; 
0x0000000045326f: lea eax, [rdx+0xc]; ret; 
0x0000000045328f: lea eax, [rdx+0xd]; ret; 
0x000000004532af: lea eax, [rdx+0xe]; ret; 
0x0000000045313f: lea eax, [rdx+0xf]; ret; 
0x0000000041fdcd: lea eax, [rdx+rdi]; ret; 
0x0000000041fdce: lea eax, [rdx+rdi]; ret; 
0x00000000457a93: lea eax, [rdx+rdx]; pop rbx; and eax, 0x7ff80000; ret; 
0x00000000453155: lea eax, [rdx]; ret; 
0x000000004293c3: lea eax, [rip+0x1067]; lea rdx, [rip+0x2760]; cmovne rax, rdx; ret; 
0x0000000042a2d6: lea eax, [rip+0x14eb4]; lea rdx, [rip+0x170fd]; cmovne rax, rdx; ret; 
0x0000000042a286: lea eax, [rip+0x1c4c4]; lea rdx, [rip+0x1eb1d]; cmovne rax, rdx; ret; 
0x0000000042a41a: lea eax, [rip+0x24ac0]; cmove rax, rdx; ret; 
0x00000000429363: lea eax, [rip+0x25947]; lea rdx, [rip+0x2aff0]; cmovne rax, rdx; ret; 
0x0000000042966a: lea eax, [rip+0x25ea0]; cmove rax, rdx; ret; 
0x0000000042a233: lea eax, [rip+0x25fd7]; lea rdx, [rip+0x27870]; cmovne rax, rdx; ret; 
0x000000004296aa: lea eax, [rip+0x26000]; cmove rax, rdx; ret; 
0x00000000429423: lea eax, [rip+0x26cf7]; lea rdx, [rip+0x26ed0]; cmovne rax, rdx; ret; 
0x0000000047f01a: lea eax, [rip+0x270]; cmove rax, rdx; ret; 
0x00000000429f13: lea eax, [rip+0x2bed7]; cmove rax, rdx; ret; 
0x0000000042a39f: lea eax, [rip+0x2c43b]; cmove rax, rdx; ret; 
0x0000000042a1df: lea eax, [rip+0x2c5eb]; cmove rax, rdx; ret; 
0x0000000042a07f: lea eax, [rip+0x2c75b]; cmove rax, rdx; ret; 
0x0000000042a331: lea eax, [rip+0x2c809]; cmove rax, rdx; ret; 
0x0000000042a171: lea eax, [rip+0x2c9b9]; cmove rax, rdx; ret; 
0x0000000042a011: lea eax, [rip+0x2cb29]; cmove rax, rdx; ret; 
0x0000000042a383: lea eax, [rip+0x2cbf7]; cmove rax, rdx; ret; 
0x0000000042a1c3: lea eax, [rip+0x2cda7]; cmove rax, rdx; ret; 
0x00000000429453: lea eax, [rip+0x2ce37]; cmovne rax, rdx; ret; 
0x0000000042a063: lea eax, [rip+0x2cf17]; cmove rax, rdx; ret; 
0x0000000042a0fa: lea eax, [rip+0x2d390]; cmovne rax, rdx; ret; 
0x0000000042a0db: lea eax, [rip+0x2d57f]; cmove rax, rdx; ret; 
0x0000000042a123: lea eax, [rip+0x2d6c7]; cmove rax, rdx; ret; 
0x00000000422a2f: lea eax, [rip+0x319b]; mov [rip+0xa7104], rax; ret; 
0x00000000422a21: lea eax, [rip+0x3429]; mov [rip+0xa711a], rax; lea rax, [rip+0x319b]; mov [rip+0xa7104], rax; ret; 
0x0000000042970d: lea eax, [rip+0x3acd]; lea rdx, [rip+0x5326]; cmovne rax, rdx; ret; 
0x0000000048f831: lea eax, [rip+0x3cb69]; mov [rip+0x3cb4a], rax; ret; 
0x0000000048f81a: lea eax, [rip+0x3cb80]; mov [rip+0x3cb61], rax; add rsp, 0x8; ret; 
0x000000004855ce: lea eax, [rip+0x44f6c]; shl r12, 0x4; add r12, rax; call qword ptr [r12+0x60]; 
0x00000000479955: lea eax, [rip+0x4d365]; mov r11, rcx; mov dword ptr [rbp-0x4d0], 0x1; mov rax, [rax+rsi*8]; jmp rax; 
0x0000000047992c: lea eax, [rip+0x4d78e]; jmp qword ptr [rax+rcx*8]; 
0x000000004796ed: lea eax, [rip+0x4d7cd]; mov r11, rcx; mov dword ptr [rbp-0x4e8], 0x1; mov rax, [rax+rsi*8]; jmp rax; 
0x0000000047974b: lea eax, [rip+0x4d86f]; jmp qword ptr [rax+rcx*8]; 
0x0000000046c20d: lea eax, [rip+0x5ca2d]; mov rax, [rax+rbp*8]; test rax, rax; je short 0x000000000046c21e; call rax; 
0x0000000046bf87: lea eax, [rip+0x5ccb3]; mov rax, [rax+r12*8]; test rax, rax; je short 0x000000000046bf98; call rax; 
0x0000000048ffe3: lea eax, [rip+0x67]; cmovne rax, rdx; ret; 
0x0000000045f085: lea eax, [rip+0x6b555]; ret; 
0x0000000042a3da: lea eax, [rip+0x7600]; cmove rax, rdx; ret; 
0x00000000429f4a: lea eax, [rip+0x7760]; cmove rax, rdx; ret; 
0x00000000429f94: lea eax, [rip+0x8076]; lea rdx, [rip+0x2a6df]; cmovne rax, rdx; ret; 
0x00000000429fb9: lea eax, [rip+0x8451]; test byte ptr [rip+0xa217f], 0x1; je short 0x0000000000429f81; ret; 
0x0000000047e24a: lea eax, [rip+0x890]; cmove rax, rdx; ret; 
0x0000000047efda: lea eax, [rip+0x8b0]; cmove rax, rdx; ret; 
0x0000000042a352: lea eax, [rip+0x9b08]; lea rdx, [rip+0xf091]; cmovne rax, rdx; ret; 
0x0000000042a192: lea eax, [rip+0x9ca8]; lea rdx, [rip+0xf231]; cmovne rax, rdx; ret; 
0x0000000042292a: lea eax, [rip+0xa7230]; add rsp, 0x10; pop rbp; ret; 
0x0000000041547f: lea eax, [rip+0xb0d9b]; mov rax, [rax+rcx*8]; jmp rax; 
0x00000000414c3b: lea eax, [rip+0xb19df]; jmp qword ptr [rax+rdx*8]; 
0x000000004149cf: lea eax, [rip+0xb1a4b]; mov rax, [rax+rcx*8]; jmp rax; 
0x00000000414a38: lea eax, [rip+0xb1ae2]; jmp qword ptr [rax+rdx*8]; 
0x0000000042a032: lea eax, [rip+0xc808]; lea rdx, [rip+0x11ea1]; cmovne rax, rdx; ret; 
0x000000004585f3: lea eax, [rip+0xcb7]; lea rdx, [rip+0xa90]; cmovne rax, rdx; ret; 
0x0000000047f093: lea eax, [rip-0x27aa9]; cmp rdx, 0x4; cmovne r8, rax; mov rax, r8; ret; 
0x0000000042682b: lea eax, [rip-0x9e1]; mov [rip+0xa3310], rax; lea rax, [rip-0xc6f]; mov [rip+0xa32fa], rax; ret; 
0x00000000426839: lea eax, [rip-0xc6f]; mov [rip+0xa32fa], rax; ret; 
0x00000000437dd8: lea eax, [rsi]; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000046aca0: lea eax, [rsp+0xa0]; call r15; 
0x00000000403102: lea ebx, [rax-0x1]; nop [rax]; call qword ptr [rbp+rbx*8]; 
0x00000000491b75: lea ebx, [rbp+rdx*8]; nop [rax]; call qword ptr [rbx]; 
0x000000004711de: lea ebx, [rdi+rdi*8-0x1]; jmp qword ptr [rsi+0xf]; 
0x00000000411636: lea ebx, [rdi+rsi*8-0x1]; dec dword ptr [rax-0x77]; test [rax], edi; idiv edi; jmp qword ptr [rax+rcx*2-0x75]; 
0x000000004139aa: lea ebx, [rdi+rsi*8-0x1]; jmp qword ptr [rsi-0x77]; 
0x00000000453c36: lea ebx, [rip+0x4de04]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000453c01: lea ebx, [rip+0x4de39]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000453bd5: lea ebx, [rip+0x4de65]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000453bbf: lea ebx, [rip+0x4de7b]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000453b9d: lea ebx, [rip+0x4de9d]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000453b78: lea ebx, [rip+0x4dec2]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000453b5b: lea ebx, [rip+0x4dedf]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000453b03: lea ebx, [rip+0x4df37]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000453606: lea ebx, [rip+0x4e3b4]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000004535d1: lea ebx, [rip+0x4e3e9]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000004535a5: lea ebx, [rip+0x4e415]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000045358f: lea ebx, [rip+0x4e42b]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000045356d: lea ebx, [rip+0x4e44d]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000453548: lea ebx, [rip+0x4e472]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000045352b: lea ebx, [rip+0x4e48f]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000004534d3: lea ebx, [rip+0x4e4e7]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000043dae2: lea ebx, [rip+0x63798]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043d784: lea ebx, [rip+0x63af6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043d92f: lea ebx, [rip+0x63b8b]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043d604: lea ebx, [rip+0x63c76]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043d6c7: lea ebx, [rip+0x63df3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043d484: lea ebx, [rip+0x63df6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043d547: lea ebx, [rip+0x63f73]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043d304: lea ebx, [rip+0x63f76]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043d3c7: lea ebx, [rip+0x640f3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043d184: lea ebx, [rip+0x640f6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043d248: lea ebx, [rip+0x64272]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043d004: lea ebx, [rip+0x64276]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043d0c7: lea ebx, [rip+0x643f3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043ce84: lea ebx, [rip+0x643f6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043cf47: lea ebx, [rip+0x64573]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043cd04: lea ebx, [rip+0x64576]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043cdc7: lea ebx, [rip+0x646f3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043cb84: lea ebx, [rip+0x646f6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043cc47: lea ebx, [rip+0x64873]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043ca04: lea ebx, [rip+0x64876]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043cac7: lea ebx, [rip+0x649f3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c884: lea ebx, [rip+0x649f6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c947: lea ebx, [rip+0x64b73]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c704: lea ebx, [rip+0x64b76]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c7c7: lea ebx, [rip+0x64cf3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c584: lea ebx, [rip+0x64cf6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c647: lea ebx, [rip+0x64e73]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c404: lea ebx, [rip+0x64e76]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c4c7: lea ebx, [rip+0x64ff3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c284: lea ebx, [rip+0x64ff6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c10b: lea ebx, [rip+0x6516f]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c347: lea ebx, [rip+0x65173]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c1c7: lea ebx, [rip+0x652f3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043bf00: lea ebx, [rip+0x6537a]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c08a: lea ebx, [rip+0x65430]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043bf23: lea ebx, [rip+0x65597]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043bfe0: lea ebx, [rip+0x6575a]; sub rdx, 0x80; movsxd r9, [r11+r9*4]; add r9, r11; notrack jmp r9; 
0x0000000043bf79: lea ebx, [rip+0x65781]; sub rdx, 0x80; movsxd r9, [r11+r9*4]; add r9, r11; notrack jmp r9; 
0x0000000043afae: lea ebx, [rip+0x65dcc]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043ac84: lea ebx, [rip+0x660f6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043ae1b: lea ebx, [rip+0x6619f]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043ab04: lea ebx, [rip+0x66276]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043abc7: lea ebx, [rip+0x663f3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043a984: lea ebx, [rip+0x663f6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043aa47: lea ebx, [rip+0x66573]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043a804: lea ebx, [rip+0x66576]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043a8c7: lea ebx, [rip+0x666f3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043a684: lea ebx, [rip+0x666f6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043a748: lea ebx, [rip+0x66872]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043a504: lea ebx, [rip+0x66876]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043a5c7: lea ebx, [rip+0x669f3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043a384: lea ebx, [rip+0x669f6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043a447: lea ebx, [rip+0x66b73]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043a204: lea ebx, [rip+0x66b76]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043a2c7: lea ebx, [rip+0x66cf3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043a084: lea ebx, [rip+0x66cf6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043a147: lea ebx, [rip+0x66e73]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439f04: lea ebx, [rip+0x66e76]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439fc7: lea ebx, [rip+0x66ff3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439d84: lea ebx, [rip+0x66ff6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439e47: lea ebx, [rip+0x67173]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439c04: lea ebx, [rip+0x67176]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439cc7: lea ebx, [rip+0x672f3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439a84: lea ebx, [rip+0x672f6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439b47: lea ebx, [rip+0x67473]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439904: lea ebx, [rip+0x67476]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004399c7: lea ebx, [rip+0x675f3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439784: lea ebx, [rip+0x675f6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043960b: lea ebx, [rip+0x6776f]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439847: lea ebx, [rip+0x67773]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004393a5: lea ebx, [rip+0x67815]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004392e8: lea ebx, [rip+0x678d2]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004396c7: lea ebx, [rip+0x678f3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439420: lea ebx, [rip+0x6795a]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004391fd: lea ebx, [rip+0x679bd]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043958a: lea ebx, [rip+0x67a30]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439132: lea ebx, [rip+0x67a88]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043940c: lea ebx, [rip+0x67bae]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004394e0: lea ebx, [rip+0x67d5a]; sub rdx, 0x80; movsxd r9, [r11+r9*4]; add r9, r11; notrack jmp r9; 
0x0000000043947e: lea ebx, [rip+0x67d7c]; sub rdx, 0x80; movsxd r9, [r11+r9*4]; add r9, r11; notrack jmp r9; 
0x00000000438113: lea ebx, [rip+0x68aa7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000438075: lea ebx, [rip+0x68b45]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437fc3: lea ebx, [rip+0x68bf7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437f25: lea ebx, [rip+0x68c95]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437e73: lea ebx, [rip+0x68d47]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437dd5: lea ebx, [rip+0x68de5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437d23: lea ebx, [rip+0x68e97]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437c85: lea ebx, [rip+0x68f35]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437bd3: lea ebx, [rip+0x68fe7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437b35: lea ebx, [rip+0x69085]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437a83: lea ebx, [rip+0x69137]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004379e5: lea ebx, [rip+0x691d5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437933: lea ebx, [rip+0x69287]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437895: lea ebx, [rip+0x69325]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004377e3: lea ebx, [rip+0x693d7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437748: lea ebx, [rip+0x69472]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437693: lea ebx, [rip+0x69527]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004375f5: lea ebx, [rip+0x695c5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437543: lea ebx, [rip+0x69677]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004374a5: lea ebx, [rip+0x69715]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004373f3: lea ebx, [rip+0x697c7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437355: lea ebx, [rip+0x69865]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004372a3: lea ebx, [rip+0x69917]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437205: lea ebx, [rip+0x699b5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437153: lea ebx, [rip+0x69a67]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004370b5: lea ebx, [rip+0x69b05]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437003: lea ebx, [rip+0x69bb7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000436f65: lea ebx, [rip+0x69c55]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000436eb3: lea ebx, [rip+0x69d07]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000436e15: lea ebx, [rip+0x69da5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000436d67: lea ebx, [rip+0x69e53]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000436c76: lea ebx, [rip+0x69f44]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000436bb7: lea ebx, [rip+0x6a003]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000436b4d: lea ebx, [rip+0x6a06d]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000436a4e: lea ebx, [rip+0x6a16c]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000436814: lea ebx, [rip+0x6a1e6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000436989: lea ebx, [rip+0x6a231]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043673a: lea ebx, [rip+0x6a2c0]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000436916: lea ebx, [rip+0x6a424]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x000000004368bc: lea ebx, [rip+0x6a43e]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x00000000435733: lea ebx, [rip+0x6b2c7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000435695: lea ebx, [rip+0x6b365]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004355e3: lea ebx, [rip+0x6b417]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000435545: lea ebx, [rip+0x6b4b5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000435493: lea ebx, [rip+0x6b567]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004353f5: lea ebx, [rip+0x6b605]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000435343: lea ebx, [rip+0x6b6b7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004352a5: lea ebx, [rip+0x6b755]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004351f3: lea ebx, [rip+0x6b807]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000435155: lea ebx, [rip+0x6b8a5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004350a3: lea ebx, [rip+0x6b957]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000435005: lea ebx, [rip+0x6b9f5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434f53: lea ebx, [rip+0x6baa7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434eb5: lea ebx, [rip+0x6bb45]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434e03: lea ebx, [rip+0x6bbf7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434d68: lea ebx, [rip+0x6bc92]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434cb3: lea ebx, [rip+0x6bd47]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434c15: lea ebx, [rip+0x6bde5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434b63: lea ebx, [rip+0x6be97]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434ac5: lea ebx, [rip+0x6bf35]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434a13: lea ebx, [rip+0x6bfe7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434975: lea ebx, [rip+0x6c085]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004348c3: lea ebx, [rip+0x6c137]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434825: lea ebx, [rip+0x6c1d5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434773: lea ebx, [rip+0x6c287]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004346d5: lea ebx, [rip+0x6c325]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434623: lea ebx, [rip+0x6c3d7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434585: lea ebx, [rip+0x6c475]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004344d3: lea ebx, [rip+0x6c527]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434435: lea ebx, [rip+0x6c5c5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434387: lea ebx, [rip+0x6c673]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434296: lea ebx, [rip+0x6c764]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004341d7: lea ebx, [rip+0x6c823]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043416d: lea ebx, [rip+0x6c88d]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043406e: lea ebx, [rip+0x6c98c]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000433fa9: lea ebx, [rip+0x6ca51]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000433f36: lea ebx, [rip+0x6cc44]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x00000000433ed5: lea ebx, [rip+0x6cc65]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x00000000433264: lea ebx, [rip+0x6d656]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x000000004331ea: lea ebx, [rip+0x6d6d0]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000043315b: lea ebx, [rip+0x6d75f]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000432f50: lea ebx, [rip+0x6d96a]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000432e1e: lea ebx, [rip+0x6da9c]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000432d58: lea ebx, [rip+0x6db62]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000432cda: lea ebx, [rip+0x6dbe0]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000432c45: lea ebx, [rip+0x6dc75]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000432a48: lea ebx, [rip+0x6de72]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000432916: lea ebx, [rip+0x6dfa4]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000043280b: lea ebx, [rip+0x6e0af]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000041d8ce: lea ebx, [rip+0x81a44]; movzx eax, al; movsxd rax, [r11+rax*4]; add rax, r11; notrack jmp rax; 
0x0000000041d900: lea ebx, [rip+0x81a6e]; movzx eax, al; movsxd rax, [r11+rax*4]; add rax, r11; notrack jmp rax; 
0x0000000041d932: lea ebx, [rip+0x81a98]; movzx eax, al; movsxd rax, [r11+rax*4]; add rax, r11; notrack jmp rax; 
0x0000000041d964: lea ebx, [rip+0x81ac2]; movzx eax, al; movsxd rax, [r11+rax*4]; add rax, r11; notrack jmp rax; 
0x0000000040f1a2: lea ebx, [rip+0x8f750]; movzx r10d, r10b; movsxd r10, [r11+r10*4]; add r10, r11; notrack jmp r10; 
0x000000004995bf: lea ebx, [rsp+rcx*8]; mov rsi, [rbx]; call rax; 
0x000000004251d8: lea ecx, [r8+0x280]; shr ecx, 0x3; rep stosq [rdi]; pop rbp; ret; 
0x0000000047f20b: lea ecx, [rax+0x1]; lea r9, [rsp+0x28]; call rbx; 
0x000000004251d9: lea ecx, [rax+0x280]; shr ecx, 0x3; rep stosq [rdi]; pop rbp; ret; 
0x000000004581ce: lea ecx, [rax+0x4]; lea r9, [rsp+0x20]; call rbx; 
0x0000000041b01b: lea ecx, [rbp-0x40]; mov rcx, r14; mov rdi, r15; call r12; 
0x00000000417d05: lea ecx, [rbx+0x40]; lea rdx, [rbx+0x34]; mov esi, 0x1; mov rdi, rbx; call rax; 
0x0000000047bf9f: lea ecx, [rbx+0x40]; mov esi, 0x1; mov rdi, rbx; call r8; 
0x00000000433ee0: lea ecx, [rbx+rcx]; notrack jmp r9; 
0x000000004534de: lea ecx, [rbx+rcx]; notrack jmp rcx; 
0x00000000411864: lea ecx, [rbx+rdx]; add rdx, r15; call qword ptr [rax+r9*8]; 
0x000000004343b1: lea ecx, [rcx-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000430310: lea ecx, [rdx+rcx-0x10]; movzx eax, byte ptr [rdi+rcx]; movzx edx, byte ptr [rsi+rcx]; sub eax, edx; ret; 
0x0000000049b1bb: lea ecx, [rip+0x1f3d7]; movzx eax, al; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x0000000049981b: lea ecx, [rip+0x20d37]; movzx eax, al; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x0000000049686b: lea ecx, [rip+0x2374f]; movzx eax, al; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x0000000047bc3c: lea ecx, [rip+0x37a56]; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x00000000479507: lea ecx, [rip+0x4dcb3]; jmp qword ptr [rcx+rax*8]; 
0x0000000044ec3e: lea ecx, [rip+0x5635c]; mov edx, [rcx+rdx*4]; mov eax, [rcx+rax*4]; sub eax, edx; ret; 
0x0000000044d55d: lea ecx, [rip+0x57a3d]; mov eax, [rcx+rax*4]; mov edx, [rcx+rdx*4]; sub eax, edx; ret; 
0x0000000044d27e: lea ecx, [rip+0x57d1c]; mov edx, [rcx+rdx*4]; mov eax, [rcx+rax*4]; sub eax, edx; ret; 
0x0000000044b5ed: lea ecx, [rip+0x599ad]; mov eax, [rcx+rax*4]; mov edx, [rcx+rdx*4]; sub eax, edx; ret; 
0x000000004466e9: lea ecx, [rip+0x5e8b1]; mov edx, [rcx+rdx*4]; mov eax, [rcx+rax*4]; sub eax, edx; ret; 
0x000000004452d4: lea ecx, [rip+0x5fcc6]; mov eax, [rcx+rax*4]; mov edx, [rcx+rdx*4]; sub eax, edx; ret; 
0x00000000445069: lea ecx, [rip+0x5ff31]; mov edx, [rcx+rdx*4]; mov eax, [rcx+rax*4]; sub eax, edx; ret; 
0x00000000443794: lea ecx, [rip+0x61806]; mov eax, [rcx+rax*4]; mov edx, [rcx+rdx*4]; sub eax, edx; ret; 
0x000000004177e8: lea ecx, [rip+0x878ea]; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x0000000041b856: lea ecx, [rip+0xaf844]; mov [rdx+0xe0], rcx; pop rbx; ret; 
0x0000000045d83e: lea ecx, [rip-0x64]; mov [rax+0x10], rcx; mov [rax+0x8], rdx; ret; 
0x0000000045d556: lea ecx, [rsi+rcx*4]; add eax, [rcx+rdx]; ret; 
0x0000000045d53b: lea ecx, [rsi+rcx*4]; mov edx, [rcx+rdx]; test edx, edx; jne short 0x000000000045d550; ret; 
0x0000000041add2: lea ecx, [rsp+0x18]; call rbp; 
0x00000000458162: lea ecx, [rsp+0x20]; call rbx; 
0x0000000047f20f: lea ecx, [rsp+0x28]; call rbx; 
0x0000000045839d: lea ecx, [rsp+0x30]; call rbx; 
0x0000000046e22d: lea edi, [rax+rsi]; mov rdx, rbp; mov rsi, r12; mov rdi, r13; call rbx; 
0x0000000045df11: lea edi, [rcx+rsi+0x20]; jmp rdx; 
0x000000004344b4: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x00000000004344c6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000434604: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000434616; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000434754: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000434766; movaps [rdi], xmm4; notrack jmp r9; 
0x000000004348a4: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x00000000004348b6; movaps [rdi], xmm4; notrack jmp r9; 
0x000000004349f4: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000434a06; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000434b44: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000434b56; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000434c94: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000434ca6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000434de4: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000434df6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000434f34: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000434f46; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000435084: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000435096; movaps [rdi], xmm4; notrack jmp r9; 
0x000000004351d4: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x00000000004351e6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000435324: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000435336; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000435474: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000435486; movaps [rdi], xmm4; notrack jmp r9; 
0x000000004355c4: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x00000000004355d6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000435714: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000435726; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000436e94: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000436ea6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000436fe4: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000436ff6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000437134: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000437146; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000437284: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000437296; movaps [rdi], xmm4; notrack jmp r9; 
0x000000004373d4: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x00000000004373e6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000437524: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000437536; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000437674: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000437686; movaps [rdi], xmm4; notrack jmp r9; 
0x000000004377c4: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x00000000004377d6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000437914: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000437926; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000437a64: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000437a76; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000437bb4: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000437bc6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000437d04: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000437d16; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000437e54: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000437e66; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000437fa4: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000437fb6; movaps [rdi], xmm4; notrack jmp r9; 
0x000000004380f4: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000438106; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000415141: lea edi, [rdx+rdi*8-0x76b60001]; ret; 
0x0000000048aa70: lea edi, [rip+0x2a22d]; mov eax, 0x59; mov rbp, rsp; mov rsi, rbp; syscall; 
0x00000000487527: lea edi, [rip+0x2d1cb]; movsxd rax, [rdi+r12*4]; add rax, rdi; notrack jmp rax; 
0x0000000049cf28: lea edi, [rip+0x2f3b2]; syscall; 
0x0000000047bbd8: lea edi, [rip+0x379fe]; movsxd rcx, [rdi+rcx*4]; add rcx, rdi; notrack jmp rcx; 
0x000000004767c1: lea edi, [rip+0x3c059]; lea rsi, [rip+0x503f2]; movzx eax, byte ptr [rdi+rax]; jmp qword ptr [rsi+rax*8]; 
0x0000000045de61: lea edi, [rip+0x44851]; mov eax, 0x15; syscall; 
0x00000000475598: lea edi, [rip+0x56d52]; syscall; 
0x00000000475314: lea edi, [rip+0x56fd2]; syscall; 
0x00000000473290: lea edi, [rip+0x5904e]; syscall; 
0x00000000473150: lea edi, [rip+0x5918e]; syscall; 
0x0000000046f688: lea edi, [rip+0x5cc52]; syscall; 
0x0000000046f5c3: lea edi, [rip+0x5cd17]; syscall; 
0x0000000046f421: lea edi, [rip+0x5ceb9]; syscall; 
0x0000000046f347: lea edi, [rip+0x5cf93]; syscall; 
0x00000000461b78: lea edi, [rip+0x6b0f2]; syscall; 
0x00000000461a0c: lea edi, [rip+0x6b25e]; syscall; 
0x000000004618ec: lea edi, [rip+0x6b37e]; syscall; 
0x00000000458bf4: lea edi, [rip+0x74076]; syscall; 
0x00000000428e14: lea edi, [rip+0xa0d46]; syscall; 
0x00000000426214: lea edi, [rip+0xa3946]; syscall; 
0x000000004261b4: lea edi, [rip+0xa39a6]; syscall; 
0x00000000425df4: lea edi, [rip+0xa3d66]; syscall; 
0x00000000425b94: lea edi, [rip+0xa3fc6]; syscall; 
0x000000004255bc: lea edi, [rip+0xa459e]; syscall; 
0x00000000425584: lea edi, [rip+0xa45d6]; syscall; 
0x00000000427174: lea edi, [rip+0xa4ef6]; syscall; 
0x00000000426728: lea edi, [rip+0xa5932]; syscall; 
0x00000000422885: lea edi, [rip+0xa97d5]; syscall; 
0x00000000422854: lea edi, [rip+0xa9816]; syscall; 
0x000000004225d4: lea edi, [rip+0xa9a96]; syscall; 
0x000000004220b0: lea edi, [rip+0xa9fba]; syscall; 
0x00000000420cc6: lea edi, [rip+0xab324]; syscall; 
0x00000000420706: lea edi, [rip+0xab8e4]; syscall; 
0x0000000042039a: lea edi, [rip+0xabc50]; syscall; 
0x00000000420058: lea edi, [rip+0xabf92]; syscall; 
0x0000000041eaf2: lea edi, [rip+0xad4f8]; syscall; 
0x0000000041e852: lea edi, [rip+0xad798]; syscall; 
0x0000000041e4fe: lea edi, [rip+0xadaec]; syscall; 
0x00000000418674: lea edi, [rip+0xb45f6]; syscall; 
0x00000000410783: lea edi, [rip+0xbc387]; syscall; 
0x00000000410643: lea edi, [rip+0xbc4c7]; syscall; 
0x0000000041040c: lea edi, [rip+0xbc6fe]; syscall; 
0x000000004103d1: lea edi, [rip+0xbc739]; syscall; 
0x000000004102ed: lea edi, [rip+0xbc81d]; syscall; 
0x00000000406d21: lea edi, [rip+0xc4e51]; syscall; 
0x0000000040537e: lea edi, [rip+0xc67bc]; syscall; 
0x000000004041ff: lea edi, [rip+0xc7893]; syscall; 
0x000000004041d1: lea edi, [rip+0xc78c1]; syscall; 
0x00000000404085: lea edi, [rip+0xc7a0d]; syscall; 
0x000000004012dd: lea edi, [rip+0xca8ad]; syscall; 
0x0000000041f2fa: lea edi, [rsi+0x1]; mov rdi, r12; call qword ptr [rbx+0x18]; 
0x00000000421724: lea edx, [rax+0x1]; mov [rip+0xa83e2], rdx; ret; 
0x0000000047e034: lea edx, [rax+rdx*4]; mov [rax], rdx; xor eax, eax; ret; 
0x0000000041b017: lea edx, [rbp-0x48]; lea r9, [rbp-0x40]; mov rcx, r14; mov rdi, r15; call r12; 
0x0000000047bf9b: lea edx, [rbx+0x34]; lea rcx, [rbx+0x40]; mov esi, 0x1; mov rdi, rbx; call r8; 
0x00000000417d09: lea edx, [rbx+0x34]; mov esi, 0x1; mov rdi, rbx; call rax; 
0x00000000433fb4: lea edx, [rbx+rdx]; notrack jmp rdx; 
0x0000000040426e: lea edx, [rdi+rdi*8-0x1]; jmp qword ptr [rax+rcx*2-0x75]; 
0x0000000042a4c6: lea edx, [rdx+rcx]; notrack jmp r10; 
0x000000004343b8: lea edx, [rdx-0x40]; notrack jmp r9; 
0x0000000048ffdc: lea edx, [rip+0x11e]; lea rax, [rip+0x67]; cmovne rax, rdx; ret; 
0x0000000042a039: lea edx, [rip+0x11ea1]; cmovne rax, rdx; ret; 
0x0000000042a2dd: lea edx, [rip+0x170fd]; cmovne rax, rdx; ret; 
0x0000000042a28d: lea edx, [rip+0x1eb1d]; cmovne rax, rdx; ret; 
0x0000000042a413: lea edx, [rip+0x24f07]; lea rax, [rip+0x24ac0]; cmove rax, rdx; ret; 
0x00000000429663: lea edx, [rip+0x26267]; lea rax, [rip+0x25ea0]; cmove rax, rdx; ret; 
0x000000004296a3: lea edx, [rip+0x263c7]; lea rax, [rip+0x26000]; cmove rax, rdx; ret; 
0x0000000042942a: lea edx, [rip+0x26ed0]; cmovne rax, rdx; ret; 
0x000000004293ca: lea edx, [rip+0x2760]; cmovne rax, rdx; ret; 
0x0000000042a23a: lea edx, [rip+0x27870]; cmovne rax, rdx; ret; 
0x0000000048fd29: lea edx, [rip+0x29741]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000429f9b: lea edx, [rip+0x2a6df]; cmovne rax, rdx; ret; 
0x0000000042936a: lea edx, [rip+0x2aff0]; cmovne rax, rdx; ret; 
0x0000000042a398: lea edx, [rip+0x2c382]; lea rax, [rip+0x2c43b]; cmove rax, rdx; ret; 
0x0000000042a1d8: lea edx, [rip+0x2c532]; lea rax, [rip+0x2c5eb]; cmove rax, rdx; ret; 
0x0000000042a078: lea edx, [rip+0x2c6a2]; lea rax, [rip+0x2c75b]; cmove rax, rdx; ret; 
0x0000000042a32a: lea edx, [rip+0x2c7c0]; lea rax, [rip+0x2c809]; cmove rax, rdx; ret; 
0x0000000042a16a: lea edx, [rip+0x2c970]; lea rax, [rip+0x2c9b9]; cmove rax, rdx; ret; 
0x0000000042a00a: lea edx, [rip+0x2cae0]; lea rax, [rip+0x2cb29]; cmove rax, rdx; ret; 
0x0000000042a37c: lea edx, [rip+0x2cbae]; lea rax, [rip+0x2cbf7]; cmove rax, rdx; ret; 
0x0000000042a1bc: lea edx, [rip+0x2cd5e]; lea rax, [rip+0x2cda7]; cmove rax, rdx; ret; 
0x0000000042a05c: lea edx, [rip+0x2cece]; lea rax, [rip+0x2cf17]; cmove rax, rdx; ret; 
0x0000000042944c: lea edx, [rip+0x2ceee]; lea rax, [rip+0x2ce37]; cmovne rax, rdx; ret; 
0x0000000042a0f3: lea edx, [rip+0x2d407]; lea rax, [rip+0x2d390]; cmovne rax, rdx; ret; 
0x0000000042a0d4: lea edx, [rip+0x2d536]; lea rax, [rip+0x2d57f]; cmove rax, rdx; ret; 
0x0000000042a11c: lea edx, [rip+0x2d66e]; lea rax, [rip+0x2d6c7]; cmove rax, rdx; ret; 
0x0000000048fcba: lea edx, [rip+0x3b1a0]; mov [rax], rdx; add rsp, 0x8; ret; 
0x000000004598d1: lea edx, [rip+0x4881d]; movsxd rax, [rdx+rbp*4]; add rax, rdx; notrack jmp rax; 
0x00000000429714: lea edx, [rip+0x5326]; cmovne rax, rdx; ret; 
0x0000000044d407: lea edx, [rip+0x54573]; movsxd r9, [r10+r9*4]; vpcmpeqb xmm0, xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000044ec97: lea edx, [rip+0x56303]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000044ec72: lea edx, [rip+0x56328]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000044b447: lea edx, [rip+0x564f3]; movsxd r9, [r10+r9*4]; pcmpeqb xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000044d2d7: lea edx, [rip+0x57cc3]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000044d2b2: lea edx, [rip+0x57ce8]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x00000000448eeb: lea edx, [rip+0x58a0f]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000044b307: lea edx, [rip+0x59c93]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000044b2e2: lea edx, [rip+0x59cb8]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000047f013: lea edx, [rip+0x5a7]; lea rax, [rip+0x270]; cmove rax, rdx; ret; 
0x0000000044688b: lea edx, [rip+0x5b02f]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000448d97: lea edx, [rip+0x5c203]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x00000000448d72: lea edx, [rip+0x5c228]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x000000004451c7: lea edx, [rip+0x5c6b3]; movsxd r9, [r10+r9*4]; vpcmpeqb xmm0, xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000443627: lea edx, [rip+0x5e203]; movsxd r9, [r10+r9*4]; pcmpeqb xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000446737: lea edx, [rip+0x5e863]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000044671d: lea edx, [rip+0x5e87d]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x000000004450b7: lea edx, [rip+0x5fee3]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000044509d: lea edx, [rip+0x5fefd]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x000000004414db: lea edx, [rip+0x6030f]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000443507: lea edx, [rip+0x61a93]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x000000004434ed: lea edx, [rip+0x61aad]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000043f28b: lea edx, [rip+0x6251f]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x000000004413a7: lea edx, [rip+0x63bf3]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000044138d: lea edx, [rip+0x63c0d]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x00000000430257: lea edx, [rip+0x70623]; movsxd r9, [r10+r9*4]; pcmpeqb xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000042eaeb: lea edx, [rip+0x71d4f]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000042d28b: lea edx, [rip+0x7356f]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000042bbbb: lea edx, [rip+0x74bff]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000042a4bb: lea edx, [rip+0x762bf]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000428c7b: lea edx, [rip+0x77a77]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000042a3d3: lea edx, [rip+0x7ae7]; lea rax, [rip+0x7600]; cmove rax, rdx; ret; 
0x00000000429f43: lea edx, [rip+0x7ca7]; lea rax, [rip+0x7760]; cmove rax, rdx; ret; 
0x0000000041d89c: lea edx, [rip+0x81a1a]; movzx eax, al; movsxd rax, [r10+rax*4]; add rax, r10; notrack jmp rax; 
0x0000000041d996: lea edx, [rip+0x81aec]; movzx eax, al; movsxd rax, [r10+rax*4]; add rax, r10; notrack jmp rax; 
0x000000004033ae: lea edx, [rip+0x9b410]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000401beb: lea edx, [rip+0x9ffd3]; movsxd rax, [rdx+rcx*4]; add rax, rdx; notrack jmp rax; 
0x000000004585fa: lea edx, [rip+0xa90]; cmovne rax, rdx; ret; 
0x0000000047efd3: lea edx, [rip+0xb57]; lea rax, [rip+0x8b0]; cmove rax, rdx; ret; 
0x0000000047e243: lea edx, [rip+0xb97]; lea rax, [rip+0x890]; cmove rax, rdx; ret; 
0x0000000042a359: lea edx, [rip+0xf091]; cmovne rax, rdx; ret; 
0x0000000042a199: lea edx, [rip+0xf231]; cmovne rax, rdx; ret; 
0x00000000401f37: lea edx, [rip-0x198]; mov [rax], rdx; mov rax, [rbp-0x8]; leave; ret; 
0x00000000429f0c: lea edx, [rip-0x362]; lea rax, [rip+0x2bed7]; cmove rax, rdx; ret; 
0x000000004567a7: lea edx, [rsi+rcx]; cmp rdi, rdx; jb short 0x00000000004567b2; rep movsb [rdi], [rsi]; ret; 
0x0000000045a7b9: lea edx, [rsp+0x8]; mov esi, 0x10; mov eax, 0x48; syscall; 
0x00000000477bd8: lea esi, [rax]; idiv edi; inc dword ptr [rcx-0x1]; push rsp; ret; 
0x00000000488e14: lea esi, [rbp-0x430]; mov eax, 0x14; syscall; 
0x0000000041adc8: lea esi, [rbx+0x40]; xor r8d, r8d; mov rdi, r13; lea r9, [rsp+0x18]; call rbp; 
0x0000000041aeb7: lea esi, [rbx+0x8]; xor r8d, r8d; mov rdi, r13; lea r9, [rsp+0x18]; call rbp; 
0x0000000049255f: lea esi, [rdx+0x40c7fffc]; sbb [rdx], al; add [rax], al; add [rax-0x77], cl; ret; 
0x00000000486fea: lea esi, [rip+0x2d670]; movsxd rax, [rsi+r12*4]; add rax, rsi; notrack jmp rax; 
0x00000000493489: lea esi, [rip+0x397b1]; mov edi, 0x3005; mov eax, 0x9e; syscall; 
0x00000000457993: lea esi, [rip+0x4a187]; movsxd rax, [rsi+rdi*4]; add rax, rsi; notrack jmp rax; 
0x00000000479bf0: lea esi, [rip+0x4d1ca]; mov dword ptr [rbp-0x530], 0x1; mov dword ptr [rbp-0x4e8], 0x0; mov rax, [rsi+rax*8]; jmp rax; 
0x00000000479c75: lea esi, [rip+0x4d545]; mov r11, rcx; mov dword ptr [rbp-0x508], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x00000000479c3b: lea esi, [rip+0x4d57f]; mov r11, rcx; mov dword ptr [rbp-0x520], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x00000000479b6d: lea esi, [rip+0x4d64d]; mov r11, rcx; mov dword ptr [rbp-0x4f8], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x00000000479b28: lea esi, [rip+0x4d692]; mov dword ptr [rbp-0x4e0], 0x1; mov dword ptr [rbp-0x4f0], 0x20; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000047952d: lea esi, [rip+0x4dc8d]; mov r11, rcx; mov dword ptr [rbp-0x514], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x000000004794ad: lea esi, [rip+0x4dd0d]; mov r11, rcx; mov dword ptr [rbp-0x528], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x000000004767c8: lea esi, [rip+0x503f2]; movzx eax, byte ptr [rdi+rax]; jmp qword ptr [rsi+rax*8]; 
0x0000000041778c: lea esi, [rip+0x8788a]; movzx eax, al; movsxd rax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x0000000040eea1: lea esi, [rip+0x8fa19]; mov edx, edx; movsxd rdx, [rsi+rdx*4]; add rdx, rsi; notrack jmp rdx; 
0x00000000402af9: lea esi, [rip+0x9bb01]; movsxd rcx, [rsi+rcx*4]; add rcx, rsi; notrack jmp rcx; 
0x00000000414e7a: lea esi, [rip+0xb18a0]; sub eax, 0x20; cdqe; movzx eax, byte ptr [rbx+rax]; jmp qword ptr [rsi+rax*8]; 
0x000000004567b8: lea esi, [rsi+rcx-0x1]; std; rep movsb [rdi], [rsi]; cld; ret; 
0x0000000041bee2: lea esi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax+0x90]; 
0x0000000041998a: lea esi, [rsp+0x30]; mov rdi, r15; call qword ptr [r14+0x90]; 
0x000000004025ff: lea esi, [rsp+0x70]; mov edi, 0x3001; mov eax, 0x9e; syscall; 
0x000000004855ca: lea esp, [rax+rax*8]; lea rax, [rip+0x44f6c]; shl r12, 0x4; add r12, rax; call qword ptr [r12+0x60]; 
0x00000000410371: lea esp, [rbx+rax*8+0x8]; nop [rax]; call qword ptr [rbx]; 
0x0000000046e1f5: lea esp, [rcx+rax]; mov r13, rax; mov rdi, r12; call rbx; 
0x0000000042a4c5: lea r10, [r10+r9]; notrack jmp r10; 
0x0000000044d406: lea r10, [rip+0x54573]; movsxd r9, [r10+r9*4]; vpcmpeqb xmm0, xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000044b446: lea r10, [rip+0x564f3]; movsxd r9, [r10+r9*4]; pcmpeqb xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000448eea: lea r10, [rip+0x58a0f]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000044688a: lea r10, [rip+0x5b02f]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x000000004451c6: lea r10, [rip+0x5c6b3]; movsxd r9, [r10+r9*4]; vpcmpeqb xmm0, xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000443626: lea r10, [rip+0x5e203]; movsxd r9, [r10+r9*4]; pcmpeqb xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x000000004414da: lea r10, [rip+0x6030f]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000043f28a: lea r10, [rip+0x6251f]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000430256: lea r10, [rip+0x70623]; movsxd r9, [r10+r9*4]; pcmpeqb xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000042eaea: lea r10, [rip+0x71d4f]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000042d28a: lea r10, [rip+0x7356f]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000042bbba: lea r10, [rip+0x74bff]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000042a4ba: lea r10, [rip+0x762bf]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000041d89b: lea r10, [rip+0x81a1a]; movzx eax, al; movsxd rax, [r10+rax*4]; add rax, r10; notrack jmp rax; 
0x0000000041d995: lea r10, [rip+0x81aec]; movzx eax, al; movsxd rax, [r10+rax*4]; add rax, r10; notrack jmp rax; 
0x00000000453c35: lea r11, [rip+0x4de04]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000453c00: lea r11, [rip+0x4de39]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000453bd4: lea r11, [rip+0x4de65]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000453bbe: lea r11, [rip+0x4de7b]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000453b9c: lea r11, [rip+0x4de9d]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000453b77: lea r11, [rip+0x4dec2]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000453b5a: lea r11, [rip+0x4dedf]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000453b02: lea r11, [rip+0x4df37]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000453605: lea r11, [rip+0x4e3b4]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000004535d0: lea r11, [rip+0x4e3e9]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000004535a4: lea r11, [rip+0x4e415]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000045358e: lea r11, [rip+0x4e42b]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000045356c: lea r11, [rip+0x4e44d]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000453547: lea r11, [rip+0x4e472]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000045352a: lea r11, [rip+0x4e48f]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000004534d2: lea r11, [rip+0x4e4e7]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000043dae1: lea r11, [rip+0x63798]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043d783: lea r11, [rip+0x63af6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043d92e: lea r11, [rip+0x63b8b]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043d603: lea r11, [rip+0x63c76]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043d6c6: lea r11, [rip+0x63df3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043d483: lea r11, [rip+0x63df6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043d546: lea r11, [rip+0x63f73]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043d303: lea r11, [rip+0x63f76]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043d3c6: lea r11, [rip+0x640f3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043d183: lea r11, [rip+0x640f6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043d247: lea r11, [rip+0x64272]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043d003: lea r11, [rip+0x64276]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043d0c6: lea r11, [rip+0x643f3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043ce83: lea r11, [rip+0x643f6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043cf46: lea r11, [rip+0x64573]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043cd03: lea r11, [rip+0x64576]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043cdc6: lea r11, [rip+0x646f3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043cb83: lea r11, [rip+0x646f6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043cc46: lea r11, [rip+0x64873]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043ca03: lea r11, [rip+0x64876]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043cac6: lea r11, [rip+0x649f3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c883: lea r11, [rip+0x649f6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c946: lea r11, [rip+0x64b73]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c703: lea r11, [rip+0x64b76]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c7c6: lea r11, [rip+0x64cf3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c583: lea r11, [rip+0x64cf6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c646: lea r11, [rip+0x64e73]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c403: lea r11, [rip+0x64e76]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c4c6: lea r11, [rip+0x64ff3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c283: lea r11, [rip+0x64ff6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c10a: lea r11, [rip+0x6516f]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c346: lea r11, [rip+0x65173]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c1c6: lea r11, [rip+0x652f3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043beff: lea r11, [rip+0x6537a]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c089: lea r11, [rip+0x65430]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043bf22: lea r11, [rip+0x65597]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043bfdf: lea r11, [rip+0x6575a]; sub rdx, 0x80; movsxd r9, [r11+r9*4]; add r9, r11; notrack jmp r9; 
0x0000000043bf78: lea r11, [rip+0x65781]; sub rdx, 0x80; movsxd r9, [r11+r9*4]; add r9, r11; notrack jmp r9; 
0x0000000043afad: lea r11, [rip+0x65dcc]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043ac83: lea r11, [rip+0x660f6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043ae1a: lea r11, [rip+0x6619f]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043ab03: lea r11, [rip+0x66276]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043abc6: lea r11, [rip+0x663f3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043a983: lea r11, [rip+0x663f6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043aa46: lea r11, [rip+0x66573]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043a803: lea r11, [rip+0x66576]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043a8c6: lea r11, [rip+0x666f3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043a683: lea r11, [rip+0x666f6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043a747: lea r11, [rip+0x66872]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043a503: lea r11, [rip+0x66876]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043a5c6: lea r11, [rip+0x669f3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043a383: lea r11, [rip+0x669f6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043a446: lea r11, [rip+0x66b73]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043a203: lea r11, [rip+0x66b76]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043a2c6: lea r11, [rip+0x66cf3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043a083: lea r11, [rip+0x66cf6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043a146: lea r11, [rip+0x66e73]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439f03: lea r11, [rip+0x66e76]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439fc6: lea r11, [rip+0x66ff3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439d83: lea r11, [rip+0x66ff6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439e46: lea r11, [rip+0x67173]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439c03: lea r11, [rip+0x67176]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439cc6: lea r11, [rip+0x672f3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439a83: lea r11, [rip+0x672f6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439b46: lea r11, [rip+0x67473]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439903: lea r11, [rip+0x67476]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004399c6: lea r11, [rip+0x675f3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439783: lea r11, [rip+0x675f6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043960a: lea r11, [rip+0x6776f]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439846: lea r11, [rip+0x67773]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004393a3: lea r11, [rip+0x67815]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004392e7: lea r11, [rip+0x678d2]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004396c6: lea r11, [rip+0x678f3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043941f: lea r11, [rip+0x6795a]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004391fc: lea r11, [rip+0x679bd]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439589: lea r11, [rip+0x67a30]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439131: lea r11, [rip+0x67a88]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043940b: lea r11, [rip+0x67bae]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004394df: lea r11, [rip+0x67d5a]; sub rdx, 0x80; movsxd r9, [r11+r9*4]; add r9, r11; notrack jmp r9; 
0x0000000043947d: lea r11, [rip+0x67d7c]; sub rdx, 0x80; movsxd r9, [r11+r9*4]; add r9, r11; notrack jmp r9; 
0x00000000438112: lea r11, [rip+0x68aa7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000438074: lea r11, [rip+0x68b45]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437fc2: lea r11, [rip+0x68bf7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437f24: lea r11, [rip+0x68c95]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437e72: lea r11, [rip+0x68d47]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437dd4: lea r11, [rip+0x68de5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437d22: lea r11, [rip+0x68e97]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437c84: lea r11, [rip+0x68f35]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437bd2: lea r11, [rip+0x68fe7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437b34: lea r11, [rip+0x69085]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437a82: lea r11, [rip+0x69137]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004379e4: lea r11, [rip+0x691d5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437932: lea r11, [rip+0x69287]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437894: lea r11, [rip+0x69325]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004377e2: lea r11, [rip+0x693d7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437747: lea r11, [rip+0x69472]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437692: lea r11, [rip+0x69527]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004375f4: lea r11, [rip+0x695c5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437542: lea r11, [rip+0x69677]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004374a4: lea r11, [rip+0x69715]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004373f2: lea r11, [rip+0x697c7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437354: lea r11, [rip+0x69865]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004372a2: lea r11, [rip+0x69917]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437204: lea r11, [rip+0x699b5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437152: lea r11, [rip+0x69a67]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004370b4: lea r11, [rip+0x69b05]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437002: lea r11, [rip+0x69bb7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000436f64: lea r11, [rip+0x69c55]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000436eb2: lea r11, [rip+0x69d07]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000436e14: lea r11, [rip+0x69da5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000436d66: lea r11, [rip+0x69e53]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000436c74: lea r11, [rip+0x69f44]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000436bb5: lea r11, [rip+0x6a003]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000436b4c: lea r11, [rip+0x6a06d]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000436a4d: lea r11, [rip+0x6a16c]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000436813: lea r11, [rip+0x6a1e6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000436988: lea r11, [rip+0x6a231]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000436739: lea r11, [rip+0x6a2c0]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000436915: lea r11, [rip+0x6a424]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x000000004368bb: lea r11, [rip+0x6a43e]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x00000000435732: lea r11, [rip+0x6b2c7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000435694: lea r11, [rip+0x6b365]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004355e2: lea r11, [rip+0x6b417]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000435544: lea r11, [rip+0x6b4b5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000435492: lea r11, [rip+0x6b567]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004353f4: lea r11, [rip+0x6b605]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000435342: lea r11, [rip+0x6b6b7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004352a4: lea r11, [rip+0x6b755]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004351f2: lea r11, [rip+0x6b807]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000435154: lea r11, [rip+0x6b8a5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004350a2: lea r11, [rip+0x6b957]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000435004: lea r11, [rip+0x6b9f5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434f52: lea r11, [rip+0x6baa7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434eb4: lea r11, [rip+0x6bb45]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434e02: lea r11, [rip+0x6bbf7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434d67: lea r11, [rip+0x6bc92]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434cb2: lea r11, [rip+0x6bd47]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434c14: lea r11, [rip+0x6bde5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434b62: lea r11, [rip+0x6be97]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434ac4: lea r11, [rip+0x6bf35]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434a12: lea r11, [rip+0x6bfe7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434974: lea r11, [rip+0x6c085]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004348c2: lea r11, [rip+0x6c137]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434824: lea r11, [rip+0x6c1d5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434772: lea r11, [rip+0x6c287]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004346d4: lea r11, [rip+0x6c325]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434622: lea r11, [rip+0x6c3d7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434584: lea r11, [rip+0x6c475]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004344d2: lea r11, [rip+0x6c527]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434434: lea r11, [rip+0x6c5c5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434386: lea r11, [rip+0x6c673]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434294: lea r11, [rip+0x6c764]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004341d5: lea r11, [rip+0x6c823]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043416c: lea r11, [rip+0x6c88d]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043406d: lea r11, [rip+0x6c98c]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000433fa8: lea r11, [rip+0x6ca51]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000433f35: lea r11, [rip+0x6cc44]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x00000000433ed4: lea r11, [rip+0x6cc65]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x00000000433263: lea r11, [rip+0x6d656]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x000000004331e9: lea r11, [rip+0x6d6d0]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000043315a: lea r11, [rip+0x6d75f]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000432f4f: lea r11, [rip+0x6d96a]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000432e1d: lea r11, [rip+0x6da9c]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000432d57: lea r11, [rip+0x6db62]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000432cd9: lea r11, [rip+0x6dbe0]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000432c44: lea r11, [rip+0x6dc75]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000432a47: lea r11, [rip+0x6de72]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000432915: lea r11, [rip+0x6dfa4]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000043280a: lea r11, [rip+0x6e0af]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000041d8cd: lea r11, [rip+0x81a44]; movzx eax, al; movsxd rax, [r11+rax*4]; add rax, r11; notrack jmp rax; 
0x0000000041d8ff: lea r11, [rip+0x81a6e]; movzx eax, al; movsxd rax, [r11+rax*4]; add rax, r11; notrack jmp rax; 
0x0000000041d931: lea r11, [rip+0x81a98]; movzx eax, al; movsxd rax, [r11+rax*4]; add rax, r11; notrack jmp rax; 
0x0000000041d963: lea r11, [rip+0x81ac2]; movzx eax, al; movsxd rax, [r11+rax*4]; add rax, r11; notrack jmp rax; 
0x0000000040f1a1: lea r11, [rip+0x8f750]; movzx r10d, r10b; movsxd r10, [r11+r10*4]; add r10, r11; notrack jmp r10; 
0x000000004855c9: lea r12, [rax+rax*8]; lea rax, [rip+0x44f6c]; shl r12, 0x4; add r12, rax; call qword ptr [r12+0x60]; 
0x00000000410370: lea r12, [rbx+rax*8+0x8]; nop [rax]; call qword ptr [rbx]; 
0x0000000046e1f4: lea r12, [rcx+rax]; mov r13, rax; mov rdi, r12; call rbx; 
0x0000000041f2f9: lea r15, [r14+0x1]; mov rdi, r12; call qword ptr [rbx+0x18]; 
0x0000000041f2f8: lea r15, [r14+0x1]; mov rdi, r12; call qword ptr [rbx+0x18]; 
0x0000000046e22c: lea r15, [rax+r14]; mov rdx, rbp; mov rsi, r12; mov rdi, r13; call rbx; 
0x0000000046ac9f: lea r8, [rsp+0xa0]; call r15; 
0x00000000437e75: lea r8d, [r14]; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000433edf: lea r9, [r11+r9]; notrack jmp r9; 
0x000000004343b0: lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000041b01a: lea r9, [rbp-0x40]; mov rcx, r14; mov rdi, r15; call r12; 
0x0000000041add1: lea r9, [rsp+0x18]; call rbp; 
0x00000000458161: lea r9, [rsp+0x20]; call rbx; 
0x0000000047f20e: lea r9, [rsp+0x28]; call rbx; 
0x0000000045839c: lea r9, [rsp+0x30]; call rbx; 
0x0000000048a2b4: lea rax, [r8+0x1]; mov [rip+0x42411], rax; ret; 
0x000000004968bb: lea rax, [rax+0x8]; mov [rcx], r8; ret; 
0x00000000431973: lea rax, [rax+rdi+0x10]; ret; 
0x00000000431983: lea rax, [rax+rdi+0x20]; ret; 
0x00000000431953: lea rax, [rax+rdi-0x10]; ret; 
0x00000000486372: lea rax, [rax+rdx*4]; mov [rdi+0x2f4], edx; mov [rdi+0x308], rax; ret; 
0x00000000486340: lea rax, [rax+rdx*4]; mov [rdi+0x2fc], ecx; mov [rdi+0x310], rax; ret; 
0x0000000042880c: lea rax, [rax-0x10]; ret; 
0x0000000047ecdc: lea rax, [rcx+rsi]; ret; 
0x00000000456103: lea rax, [rcx-0x1]; ret; 
0x00000000453dcb: lea rax, [rdi+0x10]; ret; 
0x00000000453de0: lea rax, [rdi+0x11]; ret; 
0x00000000453dfe: lea rax, [rdi+0x12]; ret; 
0x00000000453e1e: lea rax, [rdi+0x13]; ret; 
0x00000000453e41: lea rax, [rdi+0x14]; ret; 
0x00000000453e60: lea rax, [rdi+0x15]; ret; 
0x00000000453e80: lea rax, [rdi+0x16]; ret; 
0x00000000453ea0: lea rax, [rdi+0x17]; ret; 
0x00000000453ec3: lea rax, [rdi+0x18]; ret; 
0x00000000453ee8: lea rax, [rdi+0x19]; ret; 
0x00000000453c66: lea rax, [rdi+0x1]; ret; 
0x000000004542a6: lea rax, [rdi+0x1]; vzeroupper; ret; 
0x00000000453f06: lea rax, [rdi+0x1a]; ret; 
0x00000000453f26: lea rax, [rdi+0x1b]; ret; 
0x00000000453f42: lea rax, [rdi+0x1c]; ret; 
0x00000000453f62: lea rax, [rdi+0x1d]; ret; 
0x00000000453f82: lea rax, [rdi+0x1e]; ret; 
0x00000000453fa2: lea rax, [rdi+0x1f]; ret; 
0x00000000453c79: lea rax, [rdi+0x2]; ret; 
0x000000004542ba: lea rax, [rdi+0x2]; vzeroupper; ret; 
0x00000000453c84: lea rax, [rdi+0x3]; ret; 
0x000000004542d4: lea rax, [rdi+0x3]; vzeroupper; ret; 
0x00000000453c97: lea rax, [rdi+0x4]; ret; 
0x00000000453cac: lea rax, [rdi+0x5]; ret; 
0x00000000453cca: lea rax, [rdi+0x6]; ret; 
0x00000000453cd6: lea rax, [rdi+0x7]; ret; 
0x00000000453ce9: lea rax, [rdi+0x8]; ret; 
0x00000000453cfe: lea rax, [rdi+0x9]; ret; 
0x00000000453d1c: lea rax, [rdi+0xa]; ret; 
0x00000000453d3c: lea rax, [rdi+0xb]; ret; 
0x00000000453d5e: lea rax, [rdi+0xc]; ret; 
0x00000000453d7e: lea rax, [rdi+0xd]; ret; 
0x00000000453d9e: lea rax, [rdi+0xe]; ret; 
0x00000000453db8: lea rax, [rdi+0xf]; ret; 
0x000000004319a8: lea rax, [rdi+rax+0x10]; ret; 
0x0000000044f2a6: lea rax, [rdi+rax+0x20]; cmp sil, [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x000000004319b8: lea rax, [rdi+rax+0x20]; ret; 
0x000000004318b2: lea rax, [rdi+rax+0x30]; ret; 
0x0000000044f2c6: lea rax, [rdi+rax+0x40]; cmp sil, [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x0000000044f304: lea rax, [rdi+rax+0x60]; cmp sil, [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x0000000047ef24: lea rax, [rdi+rax-0x20]; vzeroupper; ret; 
0x0000000044ecff: lea rax, [rdi+rax]; cmp [rax], sil; cmovne rax, rdx; ret; 
0x0000000044f16c: lea rax, [rdi+rax]; cmp sil, [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x0000000044ef2a: lea rax, [rdi+rax]; ret; 
0x000000004542ec: lea rax, [rdi+rdx]; vzeroupper; ret; 
0x0000000047ebd8: lea rax, [rdi+rsi]; ret; 
0x0000000048c91b: lea rax, [rdi-0x1]; cmp rax, 0xfffffffffffffffd; jbe short 0x000000000048c930; ret; 
0x00000000453c52: lea rax, [rdi]; ret; 
0x00000000454224: lea rax, [rdi]; vzeroupper; ret; 
0x00000000453166: lea rax, [rdx+0x1]; ret; 
0x0000000045317c: lea rax, [rdx+0x2]; ret; 
0x00000000453194: lea rax, [rdx+0x3]; ret; 
0x000000004531aa: lea rax, [rdx+0x4]; ret; 
0x000000004531bc: lea rax, [rdx+0x5]; ret; 
0x000000004531da: lea rax, [rdx+0x6]; ret; 
0x000000004530e6: lea rax, [rdx+0x7]; ret; 
0x000000004531ec: lea rax, [rdx+0x8]; ret; 
0x0000000045320c: lea rax, [rdx+0x9]; ret; 
0x0000000045322c: lea rax, [rdx+0xa]; ret; 
0x0000000045324c: lea rax, [rdx+0xb]; ret; 
0x0000000045326e: lea rax, [rdx+0xc]; ret; 
0x0000000045328e: lea rax, [rdx+0xd]; ret; 
0x000000004532ae: lea rax, [rdx+0xe]; ret; 
0x0000000045313e: lea rax, [rdx+0xf]; ret; 
0x00000000453154: lea rax, [rdx]; ret; 
0x000000004293c2: lea rax, [rip+0x1067]; lea rdx, [rip+0x2760]; cmovne rax, rdx; ret; 
0x0000000042a2d5: lea rax, [rip+0x14eb4]; lea rdx, [rip+0x170fd]; cmovne rax, rdx; ret; 
0x0000000042a285: lea rax, [rip+0x1c4c4]; lea rdx, [rip+0x1eb1d]; cmovne rax, rdx; ret; 
0x0000000042a419: lea rax, [rip+0x24ac0]; cmove rax, rdx; ret; 
0x00000000429361: lea rax, [rip+0x25947]; lea rdx, [rip+0x2aff0]; cmovne rax, rdx; ret; 
0x00000000429669: lea rax, [rip+0x25ea0]; cmove rax, rdx; ret; 
0x0000000042a232: lea rax, [rip+0x25fd7]; lea rdx, [rip+0x27870]; cmovne rax, rdx; ret; 
0x000000004296a9: lea rax, [rip+0x26000]; cmove rax, rdx; ret; 
0x00000000429422: lea rax, [rip+0x26cf7]; lea rdx, [rip+0x26ed0]; cmovne rax, rdx; ret; 
0x0000000047f019: lea rax, [rip+0x270]; cmove rax, rdx; ret; 
0x00000000429f12: lea rax, [rip+0x2bed7]; cmove rax, rdx; ret; 
0x0000000042a39e: lea rax, [rip+0x2c43b]; cmove rax, rdx; ret; 
0x0000000042a1de: lea rax, [rip+0x2c5eb]; cmove rax, rdx; ret; 
0x0000000042a07e: lea rax, [rip+0x2c75b]; cmove rax, rdx; ret; 
0x0000000042a330: lea rax, [rip+0x2c809]; cmove rax, rdx; ret; 
0x0000000042a170: lea rax, [rip+0x2c9b9]; cmove rax, rdx; ret; 
0x0000000042a010: lea rax, [rip+0x2cb29]; cmove rax, rdx; ret; 
0x0000000042a382: lea rax, [rip+0x2cbf7]; cmove rax, rdx; ret; 
0x0000000042a1c2: lea rax, [rip+0x2cda7]; cmove rax, rdx; ret; 
0x00000000429452: lea rax, [rip+0x2ce37]; cmovne rax, rdx; ret; 
0x0000000042a062: lea rax, [rip+0x2cf17]; cmove rax, rdx; ret; 
0x0000000042a0f9: lea rax, [rip+0x2d390]; cmovne rax, rdx; ret; 
0x0000000042a0da: lea rax, [rip+0x2d57f]; cmove rax, rdx; ret; 
0x0000000042a122: lea rax, [rip+0x2d6c7]; cmove rax, rdx; ret; 
0x00000000422a2e: lea rax, [rip+0x319b]; mov [rip+0xa7104], rax; ret; 
0x00000000422a20: lea rax, [rip+0x3429]; mov [rip+0xa711a], rax; lea rax, [rip+0x319b]; mov [rip+0xa7104], rax; ret; 
0x0000000042970c: lea rax, [rip+0x3acd]; lea rdx, [rip+0x5326]; cmovne rax, rdx; ret; 
0x0000000048f830: lea rax, [rip+0x3cb69]; mov [rip+0x3cb4a], rax; ret; 
0x0000000048f819: lea rax, [rip+0x3cb80]; mov [rip+0x3cb61], rax; add rsp, 0x8; ret; 
0x000000004855cd: lea rax, [rip+0x44f6c]; shl r12, 0x4; add r12, rax; call qword ptr [r12+0x60]; 
0x00000000479954: lea rax, [rip+0x4d365]; mov r11, rcx; mov dword ptr [rbp-0x4d0], 0x1; mov rax, [rax+rsi*8]; jmp rax; 
0x0000000047992b: lea rax, [rip+0x4d78e]; jmp qword ptr [rax+rcx*8]; 
0x000000004796ec: lea rax, [rip+0x4d7cd]; mov r11, rcx; mov dword ptr [rbp-0x4e8], 0x1; mov rax, [rax+rsi*8]; jmp rax; 
0x0000000047974a: lea rax, [rip+0x4d86f]; jmp qword ptr [rax+rcx*8]; 
0x0000000046c20c: lea rax, [rip+0x5ca2d]; mov rax, [rax+rbp*8]; test rax, rax; je short 0x000000000046c21e; call rax; 
0x0000000046bf86: lea rax, [rip+0x5ccb3]; mov rax, [rax+r12*8]; test rax, rax; je short 0x000000000046bf98; call rax; 
0x0000000048ffe2: lea rax, [rip+0x67]; cmovne rax, rdx; ret; 
0x0000000045f084: lea rax, [rip+0x6b555]; ret; 
0x0000000042a3d9: lea rax, [rip+0x7600]; cmove rax, rdx; ret; 
0x00000000429f49: lea rax, [rip+0x7760]; cmove rax, rdx; ret; 
0x00000000429f93: lea rax, [rip+0x8076]; lea rdx, [rip+0x2a6df]; cmovne rax, rdx; ret; 
0x00000000429fb8: lea rax, [rip+0x8451]; test byte ptr [rip+0xa217f], 0x1; je short 0x0000000000429f81; ret; 
0x0000000047e249: lea rax, [rip+0x890]; cmove rax, rdx; ret; 
0x0000000047efd9: lea rax, [rip+0x8b0]; cmove rax, rdx; ret; 
0x0000000042a351: lea rax, [rip+0x9b08]; lea rdx, [rip+0xf091]; cmovne rax, rdx; ret; 
0x0000000042a191: lea rax, [rip+0x9ca8]; lea rdx, [rip+0xf231]; cmovne rax, rdx; ret; 
0x00000000422929: lea rax, [rip+0xa7230]; add rsp, 0x10; pop rbp; ret; 
0x0000000041547e: lea rax, [rip+0xb0d9b]; mov rax, [rax+rcx*8]; jmp rax; 
0x00000000414c3a: lea rax, [rip+0xb19df]; jmp qword ptr [rax+rdx*8]; 
0x000000004149ce: lea rax, [rip+0xb1a4b]; mov rax, [rax+rcx*8]; jmp rax; 
0x00000000414a37: lea rax, [rip+0xb1ae2]; jmp qword ptr [rax+rdx*8]; 
0x0000000042a031: lea rax, [rip+0xc808]; lea rdx, [rip+0x11ea1]; cmovne rax, rdx; ret; 
0x000000004585f2: lea rax, [rip+0xcb7]; lea rdx, [rip+0xa90]; cmovne rax, rdx; ret; 
0x0000000047f092: lea rax, [rip-0x27aa9]; cmp rdx, 0x4; cmovne r8, rax; mov rax, r8; ret; 
0x0000000042682a: lea rax, [rip-0x9e1]; mov [rip+0xa3310], rax; lea rax, [rip-0xc6f]; mov [rip+0xa32fa], rax; ret; 
0x00000000426838: lea rax, [rip-0xc6f]; mov [rip+0xa32fa], rax; ret; 
0x000000004995be: lea rbx, [r12+rcx*8]; mov rsi, [rbx]; call rax; 
0x00000000403101: lea rbx, [rax-0x1]; nop [rax]; call qword ptr [rbp+rbx*8]; 
0x00000000491b74: lea rbx, [rbp+rdx*8]; nop [rax]; call qword ptr [rbx]; 
0x000000004534dd: lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000047f20a: lea rcx, [rax+0x1]; lea r9, [rsp+0x28]; call rbx; 
0x000000004581cd: lea rcx, [rax+0x4]; lea r9, [rsp+0x20]; call rbx; 
0x00000000417d04: lea rcx, [rbx+0x40]; lea rdx, [rbx+0x34]; mov esi, 0x1; mov rdi, rbx; call rax; 
0x0000000047bf9e: lea rcx, [rbx+0x40]; mov esi, 0x1; mov rdi, rbx; call r8; 
0x00000000411863: lea rcx, [rbx+rdx]; add rdx, r15; call qword ptr [rax+r9*8]; 
0x0000000043030f: lea rcx, [rdx+rcx-0x10]; movzx eax, byte ptr [rdi+rcx]; movzx edx, byte ptr [rsi+rcx]; sub eax, edx; ret; 
0x0000000049b1ba: lea rcx, [rip+0x1f3d7]; movzx eax, al; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x0000000049981a: lea rcx, [rip+0x20d37]; movzx eax, al; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x0000000049686a: lea rcx, [rip+0x2374f]; movzx eax, al; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x0000000047bc3b: lea rcx, [rip+0x37a56]; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x00000000479506: lea rcx, [rip+0x4dcb3]; jmp qword ptr [rcx+rax*8]; 
0x0000000044ec3d: lea rcx, [rip+0x5635c]; mov edx, [rcx+rdx*4]; mov eax, [rcx+rax*4]; sub eax, edx; ret; 
0x0000000044d55c: lea rcx, [rip+0x57a3d]; mov eax, [rcx+rax*4]; mov edx, [rcx+rdx*4]; sub eax, edx; ret; 
0x0000000044d27d: lea rcx, [rip+0x57d1c]; mov edx, [rcx+rdx*4]; mov eax, [rcx+rax*4]; sub eax, edx; ret; 
0x0000000044b5ec: lea rcx, [rip+0x599ad]; mov eax, [rcx+rax*4]; mov edx, [rcx+rdx*4]; sub eax, edx; ret; 
0x000000004466e8: lea rcx, [rip+0x5e8b1]; mov edx, [rcx+rdx*4]; mov eax, [rcx+rax*4]; sub eax, edx; ret; 
0x000000004452d3: lea rcx, [rip+0x5fcc6]; mov eax, [rcx+rax*4]; mov edx, [rcx+rdx*4]; sub eax, edx; ret; 
0x00000000445068: lea rcx, [rip+0x5ff31]; mov edx, [rcx+rdx*4]; mov eax, [rcx+rax*4]; sub eax, edx; ret; 
0x00000000443793: lea rcx, [rip+0x61806]; mov eax, [rcx+rax*4]; mov edx, [rcx+rdx*4]; sub eax, edx; ret; 
0x000000004177e7: lea rcx, [rip+0x878ea]; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x0000000041b855: lea rcx, [rip+0xaf844]; mov [rdx+0xe0], rcx; pop rbx; ret; 
0x0000000045d83d: lea rcx, [rip-0x64]; mov [rax+0x10], rcx; mov [rax+0x8], rdx; ret; 
0x0000000045d555: lea rcx, [rsi+rcx*4]; add eax, [rcx+rdx]; ret; 
0x0000000045d53a: lea rcx, [rsi+rcx*4]; mov edx, [rcx+rdx]; test edx, edx; jne short 0x000000000045d550; ret; 
0x0000000045df10: lea rdi, [rcx+rsi+0x20]; jmp rdx; 
0x000000004344b3: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x00000000004344c6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000434603: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000434616; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000434753: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000434766; movaps [rdi], xmm4; notrack jmp r9; 
0x000000004348a3: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x00000000004348b6; movaps [rdi], xmm4; notrack jmp r9; 
0x000000004349f3: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000434a06; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000434b43: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000434b56; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000434c93: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000434ca6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000434de3: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000434df6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000434f33: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000434f46; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000435083: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000435096; movaps [rdi], xmm4; notrack jmp r9; 
0x000000004351d3: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x00000000004351e6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000435323: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000435336; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000435473: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000435486; movaps [rdi], xmm4; notrack jmp r9; 
0x000000004355c3: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x00000000004355d6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000435713: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000435726; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000436e93: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000436ea6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000436fe3: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000436ff6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000437133: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000437146; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000437283: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000437296; movaps [rdi], xmm4; notrack jmp r9; 
0x000000004373d3: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x00000000004373e6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000437523: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000437536; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000437673: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000437686; movaps [rdi], xmm4; notrack jmp r9; 
0x000000004377c3: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x00000000004377d6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000437913: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000437926; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000437a63: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000437a76; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000437bb3: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000437bc6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000437d03: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000437d16; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000437e53: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000437e66; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000437fa3: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000437fb6; movaps [rdi], xmm4; notrack jmp r9; 
0x000000004380f3: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x0000000000438106; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000048aa6f: lea rdi, [rip+0x2a22d]; mov eax, 0x59; mov rbp, rsp; mov rsi, rbp; syscall; 
0x00000000487526: lea rdi, [rip+0x2d1cb]; movsxd rax, [rdi+r12*4]; add rax, rdi; notrack jmp rax; 
0x0000000049cf27: lea rdi, [rip+0x2f3b2]; syscall; 
0x0000000047bbd7: lea rdi, [rip+0x379fe]; movsxd rcx, [rdi+rcx*4]; add rcx, rdi; notrack jmp rcx; 
0x000000004767c0: lea rdi, [rip+0x3c059]; lea rsi, [rip+0x503f2]; movzx eax, byte ptr [rdi+rax]; jmp qword ptr [rsi+rax*8]; 
0x0000000045de60: lea rdi, [rip+0x44851]; mov eax, 0x15; syscall; 
0x00000000475597: lea rdi, [rip+0x56d52]; syscall; 
0x00000000475313: lea rdi, [rip+0x56fd2]; syscall; 
0x0000000047328f: lea rdi, [rip+0x5904e]; syscall; 
0x0000000047314f: lea rdi, [rip+0x5918e]; syscall; 
0x0000000046f687: lea rdi, [rip+0x5cc52]; syscall; 
0x0000000046f5c2: lea rdi, [rip+0x5cd17]; syscall; 
0x0000000046f420: lea rdi, [rip+0x5ceb9]; syscall; 
0x0000000046f346: lea rdi, [rip+0x5cf93]; syscall; 
0x00000000461b77: lea rdi, [rip+0x6b0f2]; syscall; 
0x00000000461a0b: lea rdi, [rip+0x6b25e]; syscall; 
0x000000004618eb: lea rdi, [rip+0x6b37e]; syscall; 
0x00000000458bf3: lea rdi, [rip+0x74076]; syscall; 
0x00000000428e13: lea rdi, [rip+0xa0d46]; syscall; 
0x00000000426213: lea rdi, [rip+0xa3946]; syscall; 
0x000000004261b3: lea rdi, [rip+0xa39a6]; syscall; 
0x00000000425df3: lea rdi, [rip+0xa3d66]; syscall; 
0x00000000425b93: lea rdi, [rip+0xa3fc6]; syscall; 
0x000000004255bb: lea rdi, [rip+0xa459e]; syscall; 
0x00000000425583: lea rdi, [rip+0xa45d6]; syscall; 
0x00000000427173: lea rdi, [rip+0xa4ef6]; syscall; 
0x00000000426727: lea rdi, [rip+0xa5932]; syscall; 
0x00000000422884: lea rdi, [rip+0xa97d5]; syscall; 
0x00000000422853: lea rdi, [rip+0xa9816]; syscall; 
0x000000004225d3: lea rdi, [rip+0xa9a96]; syscall; 
0x000000004220af: lea rdi, [rip+0xa9fba]; syscall; 
0x00000000420cc5: lea rdi, [rip+0xab324]; syscall; 
0x00000000420705: lea rdi, [rip+0xab8e4]; syscall; 
0x00000000420399: lea rdi, [rip+0xabc50]; syscall; 
0x00000000420057: lea rdi, [rip+0xabf92]; syscall; 
0x0000000041eaf1: lea rdi, [rip+0xad4f8]; syscall; 
0x0000000041e851: lea rdi, [rip+0xad798]; syscall; 
0x0000000041e4fd: lea rdi, [rip+0xadaec]; syscall; 
0x00000000418673: lea rdi, [rip+0xb45f6]; syscall; 
0x00000000410782: lea rdi, [rip+0xbc387]; syscall; 
0x00000000410642: lea rdi, [rip+0xbc4c7]; syscall; 
0x0000000041040b: lea rdi, [rip+0xbc6fe]; syscall; 
0x000000004103d0: lea rdi, [rip+0xbc739]; syscall; 
0x000000004102ec: lea rdi, [rip+0xbc81d]; syscall; 
0x00000000406d20: lea rdi, [rip+0xc4e51]; syscall; 
0x0000000040537d: lea rdi, [rip+0xc67bc]; syscall; 
0x000000004041fe: lea rdi, [rip+0xc7893]; syscall; 
0x000000004041d0: lea rdi, [rip+0xc78c1]; syscall; 
0x00000000404084: lea rdi, [rip+0xc7a0d]; syscall; 
0x000000004012dc: lea rdi, [rip+0xca8ad]; syscall; 
0x00000000433fb3: lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000047e033: lea rdx, [r8+rdx*4]; mov [rax], rdx; xor eax, eax; ret; 
0x00000000421723: lea rdx, [rax+0x1]; mov [rip+0xa83e2], rdx; ret; 
0x0000000041b016: lea rdx, [rbp-0x48]; lea r9, [rbp-0x40]; mov rcx, r14; mov rdi, r15; call r12; 
0x0000000047bf9a: lea rdx, [rbx+0x34]; lea rcx, [rbx+0x40]; mov esi, 0x1; mov rdi, rbx; call r8; 
0x00000000417d06: lea rdx, [rbx+0x34]; mov esi, 0x1; mov rdi, rbx; call rax; 
0x000000004343b7: lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000048ffdb: lea rdx, [rip+0x11e]; lea rax, [rip+0x67]; cmovne rax, rdx; ret; 
0x0000000042a038: lea rdx, [rip+0x11ea1]; cmovne rax, rdx; ret; 
0x0000000042a2dc: lea rdx, [rip+0x170fd]; cmovne rax, rdx; ret; 
0x0000000042a28c: lea rdx, [rip+0x1eb1d]; cmovne rax, rdx; ret; 
0x0000000042a412: lea rdx, [rip+0x24f07]; lea rax, [rip+0x24ac0]; cmove rax, rdx; ret; 
0x00000000429662: lea rdx, [rip+0x26267]; lea rax, [rip+0x25ea0]; cmove rax, rdx; ret; 
0x000000004296a2: lea rdx, [rip+0x263c7]; lea rax, [rip+0x26000]; cmove rax, rdx; ret; 
0x00000000429429: lea rdx, [rip+0x26ed0]; cmovne rax, rdx; ret; 
0x000000004293c9: lea rdx, [rip+0x2760]; cmovne rax, rdx; ret; 
0x0000000042a239: lea rdx, [rip+0x27870]; cmovne rax, rdx; ret; 
0x0000000048fd28: lea rdx, [rip+0x29741]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000429f9a: lea rdx, [rip+0x2a6df]; cmovne rax, rdx; ret; 
0x00000000429369: lea rdx, [rip+0x2aff0]; cmovne rax, rdx; ret; 
0x0000000042a397: lea rdx, [rip+0x2c382]; lea rax, [rip+0x2c43b]; cmove rax, rdx; ret; 
0x0000000042a1d7: lea rdx, [rip+0x2c532]; lea rax, [rip+0x2c5eb]; cmove rax, rdx; ret; 
0x0000000042a077: lea rdx, [rip+0x2c6a2]; lea rax, [rip+0x2c75b]; cmove rax, rdx; ret; 
0x0000000042a329: lea rdx, [rip+0x2c7c0]; lea rax, [rip+0x2c809]; cmove rax, rdx; ret; 
0x0000000042a169: lea rdx, [rip+0x2c970]; lea rax, [rip+0x2c9b9]; cmove rax, rdx; ret; 
0x0000000042a009: lea rdx, [rip+0x2cae0]; lea rax, [rip+0x2cb29]; cmove rax, rdx; ret; 
0x0000000042a37b: lea rdx, [rip+0x2cbae]; lea rax, [rip+0x2cbf7]; cmove rax, rdx; ret; 
0x0000000042a1bb: lea rdx, [rip+0x2cd5e]; lea rax, [rip+0x2cda7]; cmove rax, rdx; ret; 
0x0000000042a05b: lea rdx, [rip+0x2cece]; lea rax, [rip+0x2cf17]; cmove rax, rdx; ret; 
0x0000000042944b: lea rdx, [rip+0x2ceee]; lea rax, [rip+0x2ce37]; cmovne rax, rdx; ret; 
0x0000000042a0f2: lea rdx, [rip+0x2d407]; lea rax, [rip+0x2d390]; cmovne rax, rdx; ret; 
0x0000000042a0d3: lea rdx, [rip+0x2d536]; lea rax, [rip+0x2d57f]; cmove rax, rdx; ret; 
0x0000000042a11b: lea rdx, [rip+0x2d66e]; lea rax, [rip+0x2d6c7]; cmove rax, rdx; ret; 
0x0000000048fcb9: lea rdx, [rip+0x3b1a0]; mov [rax], rdx; add rsp, 0x8; ret; 
0x000000004598d0: lea rdx, [rip+0x4881d]; movsxd rax, [rdx+rbp*4]; add rax, rdx; notrack jmp rax; 
0x00000000429713: lea rdx, [rip+0x5326]; cmovne rax, rdx; ret; 
0x0000000044ec96: lea rdx, [rip+0x56303]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000044ec71: lea rdx, [rip+0x56328]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000044d2d6: lea rdx, [rip+0x57cc3]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000044d2b1: lea rdx, [rip+0x57ce8]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000044b306: lea rdx, [rip+0x59c93]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000044b2e1: lea rdx, [rip+0x59cb8]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000047f012: lea rdx, [rip+0x5a7]; lea rax, [rip+0x270]; cmove rax, rdx; ret; 
0x00000000448d96: lea rdx, [rip+0x5c203]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x00000000448d71: lea rdx, [rip+0x5c228]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x00000000446736: lea rdx, [rip+0x5e863]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000044671c: lea rdx, [rip+0x5e87d]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x000000004450b6: lea rdx, [rip+0x5fee3]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000044509c: lea rdx, [rip+0x5fefd]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x00000000443506: lea rdx, [rip+0x61a93]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x000000004434ec: lea rdx, [rip+0x61aad]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x000000004413a6: lea rdx, [rip+0x63bf3]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000044138c: lea rdx, [rip+0x63c0d]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x00000000428c7a: lea rdx, [rip+0x77a77]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000042a3d2: lea rdx, [rip+0x7ae7]; lea rax, [rip+0x7600]; cmove rax, rdx; ret; 
0x00000000429f42: lea rdx, [rip+0x7ca7]; lea rax, [rip+0x7760]; cmove rax, rdx; ret; 
0x000000004033ad: lea rdx, [rip+0x9b410]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000004033ac: lea rdx, [rip+0x9b410]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000401bea: lea rdx, [rip+0x9ffd3]; movsxd rax, [rdx+rcx*4]; add rax, rdx; notrack jmp rax; 
0x000000004585f9: lea rdx, [rip+0xa90]; cmovne rax, rdx; ret; 
0x0000000047efd2: lea rdx, [rip+0xb57]; lea rax, [rip+0x8b0]; cmove rax, rdx; ret; 
0x0000000047e242: lea rdx, [rip+0xb97]; lea rax, [rip+0x890]; cmove rax, rdx; ret; 
0x0000000042a358: lea rdx, [rip+0xf091]; cmovne rax, rdx; ret; 
0x0000000042a198: lea rdx, [rip+0xf231]; cmovne rax, rdx; ret; 
0x00000000401f36: lea rdx, [rip-0x198]; mov [rax], rdx; mov rax, [rbp-0x8]; leave; ret; 
0x00000000429f0b: lea rdx, [rip-0x362]; lea rax, [rip+0x2bed7]; cmove rax, rdx; ret; 
0x000000004567a6: lea rdx, [rsi+rcx]; cmp rdi, rdx; jb short 0x00000000004567b2; rep movsb [rdi], [rsi]; ret; 
0x0000000045a7b8: lea rdx, [rsp+0x8]; mov esi, 0x10; mov eax, 0x48; syscall; 
0x00000000488e13: lea rsi, [rbp-0x430]; mov eax, 0x14; syscall; 
0x0000000041adc7: lea rsi, [rbx+0x40]; xor r8d, r8d; mov rdi, r13; lea r9, [rsp+0x18]; call rbp; 
0x0000000041aeb6: lea rsi, [rbx+0x8]; xor r8d, r8d; mov rdi, r13; lea r9, [rsp+0x18]; call rbp; 
0x00000000486fe9: lea rsi, [rip+0x2d670]; movsxd rax, [rsi+r12*4]; add rax, rsi; notrack jmp rax; 
0x00000000493488: lea rsi, [rip+0x397b1]; mov edi, 0x3005; mov eax, 0x9e; syscall; 
0x00000000457992: lea rsi, [rip+0x4a187]; movsxd rax, [rsi+rdi*4]; add rax, rsi; notrack jmp rax; 
0x00000000479bef: lea rsi, [rip+0x4d1ca]; mov dword ptr [rbp-0x530], 0x1; mov dword ptr [rbp-0x4e8], 0x0; mov rax, [rsi+rax*8]; jmp rax; 
0x00000000479c74: lea rsi, [rip+0x4d545]; mov r11, rcx; mov dword ptr [rbp-0x508], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x00000000479c3a: lea rsi, [rip+0x4d57f]; mov r11, rcx; mov dword ptr [rbp-0x520], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x00000000479b6c: lea rsi, [rip+0x4d64d]; mov r11, rcx; mov dword ptr [rbp-0x4f8], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x00000000479b27: lea rsi, [rip+0x4d692]; mov dword ptr [rbp-0x4e0], 0x1; mov dword ptr [rbp-0x4f0], 0x20; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000047952c: lea rsi, [rip+0x4dc8d]; mov r11, rcx; mov dword ptr [rbp-0x514], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x000000004794ac: lea rsi, [rip+0x4dd0d]; mov r11, rcx; mov dword ptr [rbp-0x528], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x000000004767c7: lea rsi, [rip+0x503f2]; movzx eax, byte ptr [rdi+rax]; jmp qword ptr [rsi+rax*8]; 
0x0000000041778b: lea rsi, [rip+0x8788a]; movzx eax, al; movsxd rax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x0000000040eea0: lea rsi, [rip+0x8fa19]; mov edx, edx; movsxd rdx, [rsi+rdx*4]; add rdx, rsi; notrack jmp rdx; 
0x00000000402af8: lea rsi, [rip+0x9bb01]; movsxd rcx, [rsi+rcx*4]; add rcx, rsi; notrack jmp rcx; 
0x00000000414e79: lea rsi, [rip+0xb18a0]; sub eax, 0x20; cdqe; movzx eax, byte ptr [rbx+rax]; jmp qword ptr [rsi+rax*8]; 
0x000000004567b7: lea rsi, [rsi+rcx-0x1]; std; rep movsb [rdi], [rsi]; cld; ret; 
0x0000000041bee1: lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax+0x90]; 
0x00000000419989: lea rsi, [rsp+0x30]; mov rdi, r15; call qword ptr [r14+0x90]; 
0x000000004025fe: lea rsi, [rsp+0x70]; mov edi, 0x3001; mov eax, 0x9e; syscall; 
0x0000000042fec7: leave; add al, [rax]; add [rbp-0x77], cl; ret far; 
0x0000000042a174: leave; add al, [rax]; cmove rax, rdx; ret; 
0x0000000042a16d: leave; add al, [rax]; lea rax, [rip+0x2c9b9]; cmove rax, rdx; ret; 
0x00000000430da7: leave; add eax, [rax]; add [rbp-0x77], cl; ret far; 
0x000000004563e4: leave; add rax, rcx; sub rax, rdi; ret; 
0x0000000047fd56: leave; add rsp, 0x8; pop rbp; pop r12; ret; 
0x0000000045a4c5: leave; cld; jmp qword ptr [rcx+rax*2-0x75]; 
0x00000000489798: leave; cmove r8, rax; mov rax, r8; ret; 
0x00000000455ee0: leave; jne short 0x0000000000455ed0; ret; 
0x00000000455f90: leave; jne short 0x0000000000455f80; ret; 
0x00000000456250: leave; jne short 0x0000000000456240; sub rax, 0x1; ret; 
0x00000000487172: leave; jne short 0x0000000000487177; call rax; 
0x00000000487b44: leave; jne short 0x0000000000487b57; mov [rbp-0xd8], r11; call rax; 
0x00000000448ee9: leave; lea r10, [rip+0x58a0f]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000446889: leave; lea r10, [rip+0x5b02f]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x000000004414d9: leave; lea r10, [rip+0x6030f]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000043f289: leave; lea r10, [rip+0x6251f]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000042eae9: leave; lea r10, [rip+0x71d4f]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000042d289: leave; lea r10, [rip+0x7356f]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000042bbb9: leave; lea r10, [rip+0x74bff]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000042a4b9: leave; lea r10, [rip+0x762bf]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000429fb7: leave; lea rax, [rip+0x8451]; test byte ptr [rip+0xa217f], 0x1; je short 0x0000000000429f81; ret; 
0x0000000043258f: leave; mov al, [rdi+rdx-0x1]; mov cl, [rsi+rdx-0x1]; sub eax, ecx; ret; 
0x00000000478ae0: leave; mov dword ptr [rbp-0x4d0], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000048091f: leave; mov eax, 0x1; ret; 
0x0000000046ac94: leave; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; lea r8, [rsp+0xa0]; call r15; 
0x0000000042ba2c: leave; movzx eax, byte ptr [rax+rcx]; movzx edx, byte ptr [rdx+rcx]; sub eax, edx; ret; 
0x00000000499726: leave; nop [rax+rax]; xor eax, eax; ret; 
0x0000000042175b: leave; or dword ptr [rdx], 0x0; ret; 
0x00000000401ed9: leave; ret; 
0x000000004808df: leave; xor eax, eax; ret; 
0x0000000042a35c: lock add [rax], al; cmovne rax, rdx; ret; 
0x0000000048a21b: lock inc dword ptr [r8+0x10]; pop rbx; pop rbp; ret; 
0x0000000045f0d0: lodsb [rsi]; adc eax, [rdx]; add [rcx], bh; ret; 
0x0000000041cf40: lodsb [rsi]; add [rax], al; add [rax-0x77], cl; out dx, eax; call qword ptr [r13+0x20]; 
0x0000000048d5e0: lodsb [rsi]; add ebp, edi; jmp qword ptr [rsi+0x66]; 
0x000000004585b7: lodsb [rsi]; cli; jmp qword ptr [rsi+0xf]; 
0x00000000496abe: lodsb [rsi]; idiv bh; movsxd rax, [r14+rax*4]; add rax, r14; notrack jmp rax; 
0x0000000048df2f: lodsd [rsi]; enter 0x894c, 0x7; shr r9, cl; mov [rdi+0x8], r9; ret; 
0x00000000496a06: lodsd [rsi]; idiv bh; nop [rax]; xor eax, eax; ret; 
0x000000004969ec: lodsd [rsi]; idiv bh; xor eax, eax; add rsp, 0x8; ret; 
0x0000000048df62: lodsd [rsi]; ret; 
0x0000000048ba6b: lodsd [rsi]; stc; dec dword ptr [rax-0x77]; ret; 
0x0000000046c137: lodsd [rsi]; sti; jmp qword ptr [rsi+0xf]; 
0x00000000411544: loop 0x0000000000411587; call qword ptr [rbp+0x38]; 
0x00000000411861: loop 0x0000000000411865; lea rcx, [rbx+rdx]; add rdx, r15; call qword ptr [rax+r9*8]; 
0x00000000414a3a: loop 0x0000000000414a56; or eax, [rax]; jmp qword ptr [rax+rdx*8]; 
0x00000000418fda: loop 0x0000000000419024; mov esi, ebp; mov rdi, rbx; call qword ptr [r13+0x58]; 
0x00000000419c68: loop 0x0000000000419cb2; mov esi, ebp; mov rdi, r15; call qword ptr [r14+0x80]; 
0x0000000042172a: loop 0x00000000004216af; or al, [rax]; ret; 
0x0000000042a02f: loop 0x000000000042a039; lea rax, [rip+0xc808]; lea rdx, [rip+0x11ea1]; cmovne rax, rdx; ret; 
0x0000000042a18f: loop 0x000000000042a199; lea rax, [rip+0x9ca8]; lea rdx, [rip+0xf231]; cmovne rax, rdx; ret; 
0x0000000042a34f: loop 0x000000000042a359; lea rax, [rip+0x9b08]; lea rdx, [rip+0xf091]; cmovne rax, rdx; ret; 
0x0000000042bb1d: loop 0x000000000042bb50; shr byte ptr [rcx], 0xc8; ret; 
0x000000004362a7: loop 0x00000000004362f5; mov [rdi-0x16], ebx; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x000000004362ef: loop 0x000000000043633d; mov [rdi-0x16], ebx; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043632d: loop 0x000000000043637b; mov [rdi-0x16], ebx; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000436365: loop 0x00000000004363b3; mov [rdi-0x16], ebx; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x000000004363a3: loop 0x00000000004363f1; mov [rdi-0x16], ebx; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x000000004363db: loop 0x0000000000436429; mov [rdi-0x16], ebx; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000436403: loop 0x0000000000436451; mov [rdi-0x16], ebx; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000438c87: loop 0x0000000000438cd5; mov [rdi-0x16], ebx; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000438ccf: loop 0x0000000000438d1d; mov [rdi-0x16], ebx; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000438d0d: loop 0x0000000000438d5b; mov [rdi-0x16], ebx; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000438d45: loop 0x0000000000438d93; mov [rdi-0x16], ebx; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000438d83: loop 0x0000000000438dd1; mov [rdi-0x16], ebx; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000438dbb: loop 0x0000000000438e09; mov [rdi-0x16], ebx; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000438de3: loop 0x0000000000438e31; mov [rdi-0x16], ebx; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043b119: loop 0x000000000043b10f; movq [rdi-0x10], mm1; ret; 
0x0000000043dc49: loop 0x000000000043dc3f; movq [rdi-0x10], mm1; ret; 
0x0000000044f03b: loop 0x000000000044f06d; or rax, rdx; bsf rax, rax; lea rax, [rdi+rax]; ret; 
0x00000000457a5f: loop 0x0000000000457a70; movsxd rax, [rsi+rdx*4]; add rax, rsi; notrack jmp rax; 
0x00000000458025: loop 0x0000000000457fea; nop [rax+rax]; xor eax, eax; ret; 
0x00000000459d6b: loop 0x0000000000459db5; mov esi, ebp; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x0000000045a84a: loop 0x000000000045a80a; adc [rax], al; add [rax], al; mov eax, 0x48; syscall; 
0x0000000045be0f: loop 0x000000000045be18; add [rax], al; mov rdi, [r15]; call rbx; 
0x0000000045ced7: loop 0x000000000045ced8; dec dword ptr [rax-0x7f]; ret; 
0x0000000045df16: loop 0x000000000045df7e; nop [rax+rax]; ret; 
0x0000000046fc99: loop 0x000000000046fce7; mov eax, eax; ret; 
0x00000000475d21: loop 0x0000000000475d25; lea rcx, [rbx+rdx]; add rdx, r15; call qword ptr [rax+r9*8]; 
0x00000000478ad8: loop 0x0000000000478ade; add [rcx-0x77], cl; ret far; 
0x0000000047c580: loop 0x000000000047c5ca; mov esi, ebp; mov rdi, rbx; call qword ptr [r13+0x38]; 
0x0000000047c7a6: loop 0x000000000047c7f4; mov esi, esi; mov rdi, rbx; call qword ptr [r15+0x38]; 
0x000000004805d2: loop 0x000000000048058c; adc [rax], al; add [rax], al; syscall; 
0x0000000048ba6a: loop 0x000000000048ba19; stc; dec dword ptr [rax-0x77]; ret; 
0x0000000049ca33: loop 0x000000000049ca30; jmp qword ptr [rsi+0x2e]; 
0x0000000042d0de: loope 0x000000000042d109; enter 0xf8c5, 0x77; ret; 
0x000000004364a7: loope 0x00000000004364f5; mov [rdi-0x17], ebx; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x000000004364ef: loope 0x000000000043653d; mov [rdi-0x17], ebx; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043652d: loope 0x000000000043657b; mov [rdi-0x17], ebx; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000436565: loope 0x00000000004365b3; mov [rdi-0x17], ebx; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x000000004365a3: loope 0x00000000004365f1; mov [rdi-0x17], ebx; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x000000004365db: loope 0x0000000000436629; mov [rdi-0x17], ebx; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000436603: loope 0x0000000000436651; mov [rdi-0x17], ebx; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000438e87: loope 0x0000000000438ed5; mov [rdi-0x17], ebx; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000438ecf: loope 0x0000000000438f1d; mov [rdi-0x17], ebx; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000438f0d: loope 0x0000000000438f5b; mov [rdi-0x17], ebx; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000438f45: loope 0x0000000000438f93; mov [rdi-0x17], ebx; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000438f83: loope 0x0000000000438fd1; mov [rdi-0x17], ebx; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000438fbb: loope 0x0000000000439009; mov [rdi-0x17], ebx; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000438fe3: loope 0x0000000000439031; mov [rdi-0x17], ebx; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043b089: loope 0x000000000043b07f; movq [rdi-0x10], mm1; ret; 
0x0000000043dbb9: loope 0x000000000043dbaf; movq [rdi-0x10], mm1; ret; 
0x00000000453616: loope 0x000000000045367e; nop [rax+rax]; mov [rdi], dh; ret; 
0x00000000453c46: loope 0x0000000000453cae; nop [rax+rax]; mov [rdi], dh; lea rax, [rdi]; ret; 
0x00000000454353: loope 0x000000000045439d; lea eax, [rdi+rdx]; vzeroupper; ret; 
0x0000000045458b: loope 0x000000000045458d; add [rax], al; lea rax, [rdi+0xf]; ret; 
0x00000000458e27: loope 0x0000000000458e75; mov edx, ebp; call rbx; 
0x0000000045fef3: loope 0x000000000045fef8; pop r12; shl eax, cl; ret; 
0x0000000046b75b: loope 0x000000000046b7b6; stc; call qword ptr [rax-0x5e1f00d]; 
0x0000000047d552: loope 0x000000000047d54d; inc dword ptr [rcx+rcx*4-0x2]; mov rdi, rbp; call qword ptr [r14+0x18]; 
0x0000000047fa6e: loope 0x000000000047fa7f; je short 0x000000000047fa90; ret; 
0x0000000048a941: loope 0x000000000048a947; cmp r8, [rcx+rsi+0x10]; jae short 0x000000000048a8f5; xor eax, eax; ret; 
0x0000000048ddeb: loope 0x000000000048de39; mov [rdi], ecx; ret; 
0x0000000048de1c: loope 0x000000000048de6a; mov [rdi-0x8], ecx; ret; 
0x0000000048de9d: loope 0x000000000048deeb; mov [rdi-0x10], ecx; ret; 
0x00000000498a04: loope 0x00000000004989c4; or al, [rax]; add [rax], al; mov edi, 0x1; call rax; 
0x00000000498a2b: loope 0x00000000004989eb; or al, [rax]; add [rax], al; mov edi, 0x1; call rax; 
0x00000000498a81: loope 0x0000000000498a41; sbb al, [rax]; add [rax], al; mov edi, 0x1; call rax; 
0x0000000049b8fe: loope 0x000000000049b95b; ret; 
0x00000000401cdd: loopne 0x0000000000401d45; nop; ret; 
0x0000000040221b: loopne 0x00000000004021dd; mov [rip+0xc9f3c], rax; add rsp, 0x88; pop rbx; ret; 
0x0000000040333c: loopne 0x0000000000403399; pop rbp; pop r12; ret; 
0x000000004033da: loopne 0x000000000040341d; pop rsp; ret; 
0x0000000040f78c: loopne 0x000000000040f78e; add [rax], al; movaps [rsp+0xf0], xmm0; syscall; 
0x0000000041394f: loopne 0x0000000000413950; jmp qword ptr [rsi+0xf]; 
0x00000000417b92: loopne 0x0000000000417bef; pop rbp; pop r12; pop r13; ret; 
0x0000000041854e: loopne 0x00000000004185ab; pop rbp; pop r12; ret; 
0x000000004189dd: loopne 0x00000000004189df; add [rax], al; ret; 
0x00000000418bb3: loopne 0x0000000000418c10; pop rbp; pop r12; pop r13; ret; 
0x00000000418bd9: loopne 0x0000000000418c36; pop rbp; pop r12; pop r13; ret; 
0x0000000041a180: loopne 0x000000000041a182; add [rax], al; mov rax, [rax+0x20]; jmp rax; 
0x0000000041a189: loopne 0x000000000041a1f1; nop [rax+rax]; mov eax, 0xffffffff; pop rbp; ret; 
0x0000000041b85f: loopne 0x000000000041b861; add [rax], al; pop rbx; ret; 
0x0000000041cf3a: loopne 0x000000000041cf84; cmp eax, ebx; jae 0x000000000041cff0; mov rdi, rbp; call qword ptr [r13+0x20]; 
0x0000000041d23f: loopne 0x000000000041d289; cmp ebx, eax; jbe 0x000000000041d2f0; mov rdi, rbp; call qword ptr [r13+0x20]; 
0x0000000041d77e: loopne 0x000000000041d7db; pop rbp; pop r12; ret; 
0x00000000421cb4: loopne 0x0000000000421d11; pop rbp; pop r12; pop r13; ret; 
0x00000000421cec: loopne 0x0000000000421d4b; pop r12; pop r13; ret; 
0x00000000422057: loopne 0x000000000042209a; pop rsp; ret; 
0x00000000422048: loopne 0x00000000004220a5; pop rbp; pop r12; ret; 
0x000000004224b7: loopne 0x0000000000422514; pop rbp; pop r12; pop r13; ret; 
0x00000000423a47: loopne 0x0000000000423a48; jmp qword ptr [rsi+0xf]; 
0x0000000042662f: loopne 0x000000000042668c; pop rbp; pop r12; ret; 
0x00000000428822: loopne 0x0000000000428825; cmovne rax, rdx; ret; 
0x0000000042a00c: loopne 0x0000000000429fd8; add al, [rax]; lea rax, [rip+0x2cb29]; cmove rax, rdx; ret; 
0x0000000043280e: loopne 0x0000000000432816; add [rcx+0x63], cl; or al, 0x93; add rcx, r11; notrack jmp rcx; 
0x00000000434412: loopne 0x0000000000434423; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000434562: loopne 0x0000000000434573; sub [rdi-0x10], ebp; notrack jmp r9; 
0x000000004346b2: loopne 0x00000000004346c3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000434802: loopne 0x0000000000434813; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000434952: loopne 0x0000000000434963; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000434aa2: loopne 0x0000000000434ab3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000434bf2: loopne 0x0000000000434c03; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000434d40: loopne 0x0000000000434d51; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000434e92: loopne 0x0000000000434ea3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000434fe2: loopne 0x0000000000434ff3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000435132: loopne 0x0000000000435143; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000435282: loopne 0x0000000000435293; sub [rdi-0x10], ebp; notrack jmp r9; 
0x000000004353d2: loopne 0x00000000004353e3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000435522: loopne 0x0000000000435533; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000435672: loopne 0x0000000000435683; sub [rdi-0x10], ebp; notrack jmp r9; 
0x0000000043577e: loopne 0x00000000004357cd; mov [rdi-0x18], edx; mov [rdi-0x10], r11; mov [rdi-0x8], rcx; ret; 
0x000000004357bc: loopne 0x000000000043580b; mov [rdi-0x18], edx; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x000000004357f4: loopne 0x0000000000435843; mov [rdi-0x18], edx; mov [rdi-0x10], r11; mov [rdi-0x8], rcx; ret; 
0x00000000435832: loopne 0x0000000000435881; mov [rdi-0x18], edx; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x0000000043586a: loopne 0x00000000004358b9; mov [rdi-0x18], edx; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x00000000435892: loopne 0x00000000004358e1; mov [rdi-0x18], edx; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x00000000436df2: loopne 0x0000000000436e03; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000436f42: loopne 0x0000000000436f53; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000437092: loopne 0x00000000004370a3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x000000004371e2: loopne 0x00000000004371f3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000437332: loopne 0x0000000000437343; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000437482: loopne 0x0000000000437493; sub [rdi-0x10], ebp; notrack jmp r9; 
0x000000004375d2: loopne 0x00000000004375e3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000437720: loopne 0x0000000000437731; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000437872: loopne 0x0000000000437883; sub [rdi-0x10], ebp; notrack jmp r9; 
0x000000004379c2: loopne 0x00000000004379d3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000437b12: loopne 0x0000000000437b23; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000437c62: loopne 0x0000000000437c73; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000437db2: loopne 0x0000000000437dc3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000437f02: loopne 0x0000000000437f13; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000438052: loopne 0x0000000000438063; sub [rdi-0x10], ebp; notrack jmp r9; 
0x0000000043815e: loopne 0x00000000004381ad; mov [rdi-0x18], edx; mov [rdi-0x10], r11; mov [rdi-0x8], rcx; ret; 
0x0000000043819c: loopne 0x00000000004381eb; mov [rdi-0x18], edx; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x000000004381d4: loopne 0x0000000000438223; mov [rdi-0x18], edx; mov [rdi-0x10], r11; mov [rdi-0x8], rcx; ret; 
0x00000000438212: loopne 0x0000000000438261; mov [rdi-0x18], edx; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x0000000043824a: loopne 0x0000000000438299; mov [rdi-0x18], edx; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x00000000438272: loopne 0x00000000004382c1; mov [rdi-0x18], edx; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x0000000043b00f: loopne 0x000000000043b005; movq [rdi-0x20], mm0; lddqu xmm0, [rsi-0x10]; movdqu [rdi-0x10], xmm0; ret; 
0x0000000043db3f: loopne 0x000000000043db35; movq [rdi-0x20], mm0; lddqu xmm0, [rsi-0x10]; movdqu [rdi-0x10], xmm0; ret; 
0x00000000456547: loopne 0x000000000045650c; vmovdqu [rdi], xmm0; vmovdqu [rsi-0x10], xmm0; ret; 
0x000000004568c4: loopne 0x00000000004568d5; adc [rdi+rdx-0x30], esi; movups [rdi+rdx-0x40], xmm7; ret; 
0x0000000045697d: loopne 0x00000000004569c3; movups [rcx-0x30], xmm0; movups [r11], xmm4; ret; 
0x00000000456a6b: loopne 0x0000000000456ab1; movups [rcx-0x30], xmm0; movups [r11], xmm4; ret; 
0x000000004579cd: loopne 0x00000000004579de; movsxd rcx, [rsi+rax*4]; add rcx, rsi; notrack jmp rcx; 
0x0000000045aad3: loopne 0x000000000045ab30; pop r12; ret; 
0x0000000045ab1b: loopne 0x000000000045ab78; pop r12; ret; 
0x0000000045ad4a: loopne 0x000000000045ada9; pop r12; pop r13; jmp rax; 
0x0000000045adda: loopne 0x000000000045ae39; pop r12; pop r13; jmp rax; 
0x0000000045b9c3: loopne 0x000000000045ba22; pop r12; jmp rax; 
0x0000000045ba72: loopne 0x000000000045bad1; pop r12; pop r13; jmp rax; 
0x0000000045ba79: loopne 0x000000000045bae1; nop [rax+rax]; ret; 
0x0000000045d25e: loopne 0x000000000045d2bb; pop rbp; pop r12; pop r13; ret; 
0x0000000045fd37: loopne 0x000000000045fd31; or eax, 0x2; mov [rip+0x6ce72], eax; pop rbx; ret; 
0x0000000045fd68: loopne 0x000000000045fd62; or eax, 0x1; mov [rip+0x6ce41], eax; ret; 
0x0000000045fd98: loopne 0x000000000045fd92; or eax, 0x3; mov [rip+0x6ce11], eax; ret; 
0x0000000045fdd7: loopne 0x000000000045fda0; or eax, 0x10; mov [rip+0x6cdd2], eax; pop rbx; ret; 
0x0000000045fe08: loopne 0x000000000045fdd1; or eax, 0x8; mov [rip+0x6cda1], eax; ret; 
0x0000000045fe38: loopne 0x000000000045fe01; or eax, 0x18; mov [rip+0x6cd71], eax; ret; 
0x0000000046b915: loopne 0x000000000046b974; pop r12; pop r13; ret; 
0x0000000046b997: loopne 0x000000000046b9f6; pop r12; pop r13; ret; 
0x0000000046bf90: loopne 0x000000000046bfda; test eax, eax; je short 0x000000000046bf98; call rax; 
0x0000000046ff76: loopne 0x000000000046ffd3; pop r12; ret; 
0x0000000047000e: loopne 0x000000000047006b; pop r12; ret; 
0x00000000470035: loopne 0x0000000000470092; pop r12; ret; 
0x00000000470052: loopne 0x00000000004700af; pop r12; ret; 
0x000000004738b8: loopne 0x0000000000473843; ret; 
0x0000000047c03e: loopne 0x000000000047c09b; pop rbp; pop r12; ret; 
0x0000000047d5d7: loopne 0x000000000047d5d9; add [rax], al; call qword ptr [rax+0x68]; 
0x0000000047d70c: loopne 0x000000000047d70e; add [rax], al; mov esi, 0xffffffff; call qword ptr [rax+0x18]; 
0x0000000047dba6: loopne 0x000000000047dc05; pop r12; pop r13; pop r14; ret; 
0x0000000047e19c: loopne 0x000000000047e1aa; cmp eax, 0x4; je short 0x000000000047e1a4; ret; 
0x0000000047e2ca: loopne 0x000000000047e30d; pop rsp; pop r13; ret; 
0x0000000047e2b3: loopne 0x000000000047e312; pop r12; pop r13; ret; 
0x0000000047fe57: loopne 0x000000000047feb4; pop rbp; pop r12; pop r13; ret; 
0x0000000047ffd7: loopne 0x0000000000480034; pop rbp; pop r12; pop r13; ret; 
0x000000004800ff: loopne 0x000000000048015c; pop rbp; pop r12; pop r13; ret; 
0x0000000048072c: loopne 0x0000000000480789; pop rbp; pop r12; pop r13; ret; 
0x00000000480764: loopne 0x00000000004807c3; pop r12; pop r13; ret; 
0x00000000483301: loopne 0x0000000000483360; pop r12; pop r13; pop r14; ret; 
0x0000000048337c: loopne 0x00000000004833db; pop r12; pop r13; pop r14; ret; 
0x00000000489317: loopne 0x0000000000489374; pop rbp; pop r12; pop r13; ret; 
0x0000000048a4d7: loopne 0x000000000048a534; pop rbp; pop r12; ret; 
0x0000000048a4f7: loopne 0x000000000048a53a; pop rsp; ret; 
0x0000000048a4ea: loopne 0x000000000048a547; pop rbp; pop r12; ret; 
0x0000000048ab58: loopne 0x000000000048abb5; pop rbp; pop r12; pop r13; ret; 
0x0000000048abd7: loopne 0x000000000048ac36; pop r12; ret; 
0x0000000048d597: loopne 0x000000000048d5da; pop rsp; ret; 
0x0000000048d71d: loopne 0x000000000048d721; sub eax, 0x1; ret; 
0x0000000048f66b: loopne 0x000000000048f625; add [rax], eax; add [rax], al; ret; 
0x00000000490026: loopne 0x0000000000490083; pop r12; ret; 
0x0000000049003d: loopne 0x000000000049009a; pop r12; ret; 
0x00000000490857: loopne 0x0000000000490868; cmp al, 0xa; jne 0x00000000004907d9; nop [rax]; call r13; 
0x00000000490c69: loopne 0x0000000000490cc6; pop r12; ret; 
0x00000000490c7e: loopne 0x0000000000490cdb; pop r12; ret; 
0x00000000493fb2: loopne 0x0000000000493ff5; pop rsp; ret; 
0x00000000494090: loopne 0x00000000004940d3; pop rsp; ret; 
0x00000000495d28: loopne 0x0000000000495d85; pop rbp; pop r12; pop r13; ret; 
0x00000000495d57: loopne 0x0000000000495db4; pop rbp; pop r12; pop r13; ret; 
0x00000000495d6a: loopne 0x0000000000495dc9; pop r12; pop r13; ret; 
0x000000004968b6: loopne 0x00000000004968b0; mov r8, [rax]; lea rax, [rax+0x8]; mov [rcx], r8; ret; 
0x00000000497d73: loopne 0x0000000000497db3; jmp rax; 
0x000000004984b3: loopne 0x00000000004984f3; jmp rax; 
0x00000000498ba0: loopne 0x0000000000498ba3; mov [rsi], eax; mov rax, [rdi+0x98]; ret; 
0x00000000498e9a: loopne 0x0000000000498ee8; mov ecx, esi; mov esi, 0x1; mov edi, 0x1; call rax; 
0x00000000499486: loopne 0x00000000004994ee; nop [rax+rax]; ret; 
0x00000000499866: loopne 0x0000000000499860; mov r8, [rax]; lea rax, [rax+0x8]; mov [rcx], r8; ret; 
0x0000000049adf0: loopne 0x000000000049ae4d; pop rbp; pop r12; ret; 
0x0000000049ae57: loopne 0x000000000049ae9a; pop rsp; ret; 
0x0000000049b206: loopne 0x000000000049b200; mov r8, [rax]; lea rax, [rax+0x8]; mov [rcx], r8; ret; 
0x0000000049ce3f: loopne 0x000000000049ce9c; pop rbp; pop r12; ret; 
0x000000004414dd: lsl eax, [rsi]; add [rdi+0x63], cl; or al, 0x8a; lea r10, [r10+r9]; notrack jmp r10; 
0x000000004027f3: mov [0x1274ed8548000003], al; mov rdx, [rip+0xc9895]; mov rsi, [rsp+0x10]; mov edi, [rsp+0xc]; call rbp; 
0x000000004988a5: mov [0x148b489848fff68e], al; ret; 
0x0000000048aa73: mov [0x4800000059b80002], al; mov ebp, esp; mov rsi, rbp; syscall; 
0x000000004118cb: mov [0x4c86046349000006], al; add eax, esi; notrack jmp rax; 
0x00000000493e09: mov [0x5810438948ffffce], eax; pop rdx; pop rbx; ret; 
0x0000000045f1ac: mov [0x5c415d5b08c48348], eax; pop r13; pop r14; pop r15; ret; 
0x000000004579bd: mov [0x7b358d48d089c3eb], al; mov eax, [0xfe0830ce8c10004]; movsxd rcx, [rsi+rax*4]; add rcx, rsi; notrack jmp rcx; 
0x0000000042eeee: mov [0x840fc9854d000012], al; cdq; adc al, [rax]; add [rbp-0x77], cl; ret far; 
0x0000000043673d: mov [0x8d49931463490006], al; adc al, 0x13; notrack jmp rdx; 
0x00000000436862: mov [0x930c634d19770006], eax; add rsi, rdx; add rdi, rdx; add r9, r11; notrack jmp r9; 
0x0000000047c6d2: mov [0xc483480000441f0f], eax; or [rax-0x1], bh; pop rbx; pop rbp; ret; 
0x0000000042a07a: mov [0xc75b058d480002c6], al; add al, [rax]; cmove rax, rdx; ret; 
0x000000004749f5: mov [0xe9ce75fff883fffa], al; idiv dil; jmp qword ptr [rsi+0xf]; 
0x00000000421a3f: mov [r11+0x10], eax; mov dword ptr [r11+0x14], 0x0; ret; 
0x00000000421a3a: mov [r11+0x24], ebp; pop rbp; mov [r11+0x10], eax; mov dword ptr [r11+0x14], 0x0; ret; 
0x0000000047e9d1: mov [r12], r14; pop r12; pop r13; pop r14; ret; 
0x0000000049cada: mov [r13+rbx*8], rdx; mov rax, [rax+rbx*8]; test rax, rax; je short 0x000000000049caea; call rax; 
0x00000000425d1b: mov [r8+rbp], cl; add rsp, 0x10; mov rax, r8; pop rbp; ret; 
0x00000000425b24: mov [r8+rbx], cl; add rsp, 0x10; mov rax, r8; pop rbx; ret; 
0x0000000048727a: mov [r8-0x7b], r9b; ror byte ptr [rdi], 0x84; ret; 
0x00000000462212: mov [r8-0x7d], r9b; ret; 
0x0000000048f6aa: mov [r8], rax; mov eax, 0x1; mov dword ptr [rdx], 0xffffc002; ret; 
0x0000000043eb99: mov [r9-0x2], cx; ret; 
0x0000000043eb9a: mov [r9-0x2], ecx; ret; 
0x0000000043eb85: mov [r9-0x4], ecx; ret; 
0x00000000486fbe: mov [r9-0x77], r9b; xchg [rax], ebx; add al, 0x0; add [rcx-0x77], cl; ret; 
0x0000000043eb74: mov [r9-0x8], rcx; ret; 
0x000000004968a0: mov [r9], r8; add rsp, 0x8; ret; 
0x0000000047cfbb: mov [rax+0x10], ecx; mov [rax+0x40], rdx; movups [rax], xmm0; ret; 
0x0000000045d845: mov [rax+0x10], ecx; mov [rax+0x8], rdx; ret; 
0x0000000047e069: mov [rax+0x10], edi; mov [rax+0x40], rsi; mov [rax], rdx; xor eax, eax; ret; 
0x0000000047cf7d: mov [rax+0x10], edx; mov [rax+0x40], rcx; ret; 
0x0000000047cfba: mov [rax+0x10], rcx; mov [rax+0x40], rdx; movups [rax], xmm0; ret; 
0x0000000045d844: mov [rax+0x10], rcx; mov [rax+0x8], rdx; ret; 
0x0000000047e068: mov [rax+0x10], rdi; mov [rax+0x40], rsi; mov [rax], rdx; xor eax, eax; ret; 
0x0000000047cf7c: mov [rax+0x10], rdx; mov [rax+0x40], rcx; ret; 
0x0000000047d74c: mov [rax+0x18], edx; xor eax, eax; mov [rbx], ecx; pop rbx; ret; 
0x0000000047d74b: mov [rax+0x18], rdx; xor eax, eax; mov [rbx], ecx; pop rbx; ret; 
0x0000000045d8fb: mov [rax+0x20], ecx; mov byte ptr [rax+0x28], 0x1; ret; 
0x00000000422177: mov [rax+0x20], edx; add rsp, 0x8; ret; 
0x0000000045d909: mov [rax+0x20], esi; ret; 
0x0000000045d8fa: mov [rax+0x20], rcx; mov byte ptr [rax+0x28], 0x1; ret; 
0x00000000422176: mov [rax+0x20], rdx; add rsp, 0x8; ret; 
0x0000000045d908: mov [rax+0x20], rsi; ret; 
0x0000000047cf81: mov [rax+0x40], ecx; ret; 
0x0000000047cfbf: mov [rax+0x40], edx; movups [rax], xmm0; ret; 
0x0000000047e06d: mov [rax+0x40], esi; mov [rax], rdx; xor eax, eax; ret; 
0x0000000047cf80: mov [rax+0x40], rcx; ret; 
0x0000000047cfbe: mov [rax+0x40], rdx; movups [rax], xmm0; ret; 
0x0000000047e06c: mov [rax+0x40], rsi; mov [rax], rdx; xor eax, eax; ret; 
0x0000000045d849: mov [rax+0x8], edx; ret; 
0x0000000045d848: mov [rax+0x8], rdx; ret; 
0x0000000046eb0a: mov [rax+0xe], dh; mov rsi, [rsp+0x10]; mov rdx, rbp; mov rdi, r12; call rbx; 
0x0000000046eb09: mov [rax+0xe], sil; mov rsi, [rsp+0x10]; mov rdx, rbp; mov rdi, r12; call rbx; 
0x000000004598d4: mov [rax+rax], al; movsxd rax, [rdx+rbp*4]; add rax, rdx; notrack jmp rax; 
0x00000000425d1c: mov [rax+rbp], cl; add rsp, 0x10; mov rax, r8; pop rbp; ret; 
0x00000000425b25: mov [rax+rbx], cl; add rsp, 0x10; mov rax, r8; pop rbx; ret; 
0x00000000483f11: mov [rax+rcx], dh; add [rbx+rdi+0xd], cl; ret far; 
0x0000000048727b: mov [rax-0x7b], cl; ror byte ptr [rdi], 0x84; ret; 
0x00000000462213: mov [rax-0x7d], cl; ret; 
0x0000000046dde5: mov [rax], al; add [rax], al; mov r10d, 0x8; mov eax, 0xd; syscall; 
0x0000000045d2ff: mov [rax], al; add [rax], al; pop rbx; pop rbp; ret; 
0x00000000402227: mov [rax], al; add [rax], al; pop rbx; ret; 
0x0000000048f6ab: mov [rax], eax; mov eax, 0x1; mov dword ptr [rdx], 0xffffc002; ret; 
0x0000000048fd55: mov [rax], edi; pop rbx; ret; 
0x0000000048fcc1: mov [rax], edx; add rsp, 0x8; ret; 
0x0000000047cf7a: mov [rax], edx; mov [rax+0x10], rdx; mov [rax+0x40], rcx; ret; 
0x00000000401f3e: mov [rax], edx; mov rax, [rbp-0x8]; leave; ret; 
0x0000000048fd49: mov [rax], edx; pop rbx; ret; 
0x0000000047e038: mov [rax], edx; xor eax, eax; ret; 
0x0000000048fd54: mov [rax], rdi; pop rbx; ret; 
0x0000000048fcc0: mov [rax], rdx; add rsp, 0x8; ret; 
0x0000000047cf79: mov [rax], rdx; mov [rax+0x10], rdx; mov [rax+0x40], rcx; ret; 
0x00000000401f3d: mov [rax], rdx; mov rax, [rbp-0x8]; leave; ret; 
0x0000000048fd48: mov [rax], rdx; pop rbx; ret; 
0x0000000047e037: mov [rax], rdx; xor eax, eax; ret; 
0x000000004229c8: mov [rbp+0x31], eax; sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; syscall; 
0x000000004265bc: mov [rbp+0x5be80007], bl; mov ch, 0xff; jmp qword ptr [rsi+0x66]; 
0x0000000047d6b1: mov [rbp+0x74], eax; mov eax, 0x1; pop rbp; pop r12; ret; 
0x0000000049cadb: mov [rbp+rbx*8], edx; mov rax, [rax+rbx*8]; test rax, rax; je short 0x000000000049caea; call rax; 
0x00000000478e48: mov [rbp-0x4d8], ebx; call qword ptr [r8+0x38]; 
0x0000000047944d: mov [rbp-0x4d8], ebx; call qword ptr [rbx+0x38]; 
0x00000000479dc0: mov [rbp-0x4d8], ebx; mov rdx, rbx; mov rsi, r9; mov rdi, r12; call qword ptr [rax+0x38]; 
0x00000000478e47: mov [rbp-0x4d8], r11; call qword ptr [r8+0x38]; 
0x0000000047944c: mov [rbp-0x4d8], r11; call qword ptr [rbx+0x38]; 
0x00000000479dbf: mov [rbp-0x4d8], r11; mov rdx, rbx; mov rsi, r9; mov rdi, r12; call qword ptr [rax+0x38]; 
0x000000004148e8: mov [rbp-0x4e8], ecx; mov rdx, r15; mov rsi, r11; mov rdi, r12; call qword ptr [rcx+0x38]; 
0x000000004148e7: mov [rbp-0x4e8], r9d; mov rdx, r15; mov rsi, r11; mov rdi, r12; call qword ptr [rcx+0x38]; 
0x00000000415893: mov [rbp-0x4f0], ecx; call qword ptr [rax+0x38]; 
0x00000000415892: mov [rbp-0x4f0], r9d; call qword ptr [rax+0x38]; 
0x0000000047a0c0: mov [rbp-0x4f8], ecx; call qword ptr [rax+0x38]; 
0x00000000415356: mov [rbp-0x4f8], ecx; call qword ptr [rbx+0x38]; 
0x00000000414709: mov [rbp-0x4f8], ecx; mov rdx, r15; mov rsi, r8; mov rdi, r12; call qword ptr [rax+0x38]; 
0x000000004143a4: mov [rbp-0x4f8], esi; jmp rax; 
0x0000000047a0bf: mov [rbp-0x4f8], r9; call qword ptr [rax+0x38]; 
0x00000000415355: mov [rbp-0x4f8], r9d; call qword ptr [rbx+0x38]; 
0x00000000414708: mov [rbp-0x4f8], r9d; mov rdx, r15; mov rsi, r8; mov rdi, r12; call qword ptr [rax+0x38]; 
0x000000004143a3: mov [rbp-0x4f8], rsi; jmp rax; 
0x00000000415aef: mov [rbp-0x500], ebx; call qword ptr [rax+0x38]; 
0x0000000047a0b9: mov [rbp-0x500], ebx; mov [rbp-0x4f8], r9; call qword ptr [rax+0x38]; 
0x00000000415aee: mov [rbp-0x500], r11; call qword ptr [rax+0x38]; 
0x0000000047a0b8: mov [rbp-0x500], r11; mov [rbp-0x4f8], r9; call qword ptr [rax+0x38]; 
0x00000000415ae8: mov [rbp-0x508], edx; mov [rbp-0x500], r11; call qword ptr [rax+0x38]; 
0x00000000415ae7: mov [rbp-0x508], r10d; mov [rbp-0x500], r11; call qword ptr [rax+0x38]; 
0x00000000413356: mov [rbp-0x8b8], ecx; call qword ptr [r11+rax*8-0x40]; 
0x00000000413355: mov [rbp-0x8b8], rcx; call qword ptr [r11+rax*8-0x40]; 
0x00000000477bd7: mov [rbp-0x8d0], ecx; call qword ptr [r11+rax*8-0x40]; 
0x00000000477bd6: mov [rbp-0x8d0], rcx; call qword ptr [r11+rax*8-0x40]; 
0x0000000041334f: mov [rbp-0x8e0], edx; mov [rbp-0x8b8], rcx; call qword ptr [r11+rax*8-0x40]; 
0x0000000041334e: mov [rbp-0x8e0], rdx; mov [rbp-0x8b8], rcx; call qword ptr [r11+rax*8-0x40]; 
0x000000004771c4: mov [rbp-0x8f0], eax; mov rdx, r8; mov rsi, r12; mov rdi, r13; call qword ptr [r15+0x38]; 
0x00000000475f64: mov [rbp-0x8f0], ecx; mov rdx, r9; mov rsi, r12; mov rdi, r13; call qword ptr [rcx+0x38]; 
0x00000000413348: mov [rbp-0x8f0], edx; mov [rbp-0x8e0], rdx; mov [rbp-0x8b8], rcx; call qword ptr [r11+rax*8-0x40]; 
0x00000000413347: mov [rbp-0x8f0], r10; mov [rbp-0x8e0], rdx; mov [rbp-0x8b8], rcx; call qword ptr [r11+rax*8-0x40]; 
0x000000004771c3: mov [rbp-0x8f0], r8; mov rdx, r8; mov rsi, r12; mov rdi, r13; call qword ptr [r15+0x38]; 
0x00000000475f63: mov [rbp-0x8f0], r9; mov rdx, r9; mov rsi, r12; mov rdi, r13; call qword ptr [rcx+0x38]; 
0x000000004777fd: mov [rbp-0x900], ecx; mov rdx, rcx; mov rsi, r12; mov rdi, r13; call qword ptr [r15+0x38]; 
0x00000000477bd0: mov [rbp-0x900], edx; mov [rbp-0x8d0], rcx; call qword ptr [r11+rax*8-0x40]; 
0x000000004777fc: mov [rbp-0x900], rcx; mov rdx, rcx; mov rsi, r12; mov rdi, r13; call qword ptr [r15+0x38]; 
0x00000000477bcf: mov [rbp-0x900], rdx; mov [rbp-0x8d0], rcx; call qword ptr [r11+rax*8-0x40]; 
0x00000000477bc9: mov [rbp-0x908], edx; mov [rbp-0x900], rdx; mov [rbp-0x8d0], rcx; call qword ptr [r11+rax*8-0x40]; 
0x00000000477bc8: mov [rbp-0x908], r10; mov [rbp-0x900], rdx; mov [rbp-0x8d0], rcx; call qword ptr [r11+rax*8-0x40]; 
0x00000000476dd5: mov [rbp-0x928], ecx; mov rdx, rcx; mov rsi, r12; mov rdi, r13; call qword ptr [r8+0x38]; 
0x00000000476dd4: mov [rbp-0x928], rcx; mov rdx, rcx; mov rsi, r12; mov rdi, r13; call qword ptr [r8+0x38]; 
0x00000000412232: mov [rbp-0x940], ebx; call rax; 
0x00000000412231: mov [rbp-0x940], r11d; call rax; 
0x0000000041222b: mov [rbp-0x94c], ecx; mov [rbp-0x940], r11d; call rax; 
0x0000000041222a: mov [rbp-0x94c], r9d; mov [rbp-0x940], r11d; call rax; 
0x00000000476ada: mov [rbp-0x958], cl; call rax; 
0x00000000476ad9: mov [rbp-0x958], r9b; call rax; 
0x00000000476ad3: mov [rbp-0x970], edx; mov [rbp-0x958], r9b; call rax; 
0x00000000476ad2: mov [rbp-0x970], r10d; mov [rbp-0x958], r9b; call rax; 
0x00000000487b48: mov [rbp-0xd8], ebx; call rax; 
0x00000000487cfd: mov [rbp-0xd8], edx; call r15; 
0x00000000487cfc: mov [rbp-0xd8], r10; call r15; 
0x00000000487b47: mov [rbp-0xd8], r11; call rax; 
0x00000000471a30: mov [rbp-0xe8], eax; call rax; 
0x00000000471a2f: mov [rbp-0xe8], r8; call rax; 
0x000000004875f1: mov [rbp-0xf0], ebx; call r10; 
0x00000000487cf6: mov [rbp-0xf0], ebx; mov [rbp-0xd8], r10; call r15; 
0x000000004875f0: mov [rbp-0xf0], r11; call r10; 
0x00000000487cf5: mov [rbp-0xf0], r11; mov [rbp-0xd8], r10; call r15; 
0x00000000421a40: mov [rbx+0x10], eax; mov dword ptr [r11+0x14], 0x0; ret; 
0x0000000048cb82: mov [rbx+0x10], eax; pop rax; pop rdx; pop rbx; ret; 
0x0000000048cb81: mov [rbx+0x10], rax; pop rax; pop rdx; pop rbx; ret; 
0x0000000048cab7: mov [rbx+0x18], eax; pop rax; pop rdx; pop rbx; ret; 
0x00000000493f19: mov [rbx+0x18], eax; pop rbx; ret; 
0x0000000048cab6: mov [rbx+0x18], rax; pop rax; pop rdx; pop rbx; ret; 
0x00000000493f18: mov [rbx+0x18], rax; pop rbx; ret; 
0x00000000493fdd: mov [rbx+0x20], eax; pop rbx; ret; 
0x00000000493fdc: mov [rbx+0x20], rax; pop rbx; ret; 
0x00000000421a3b: mov [rbx+0x24], ebp; pop rbp; mov [r11+0x10], eax; mov dword ptr [r11+0x14], 0x0; ret; 
0x0000000046dcff: mov [rbx+0x40], esi; pop rbx; ret; 
0x0000000046dcdc: mov [rbx+0x40], esi; xor eax, eax; pop rbx; ret; 
0x0000000047df5e: mov [rbx+0x60], ebp; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000420788: mov [rbx+0x60], ebp; pop rbx; pop rbp; pop r12; ret; 
0x0000000047df5d: mov [rbx+0x60], rbp; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000420787: mov [rbx+0x60], rbp; pop rbx; pop rbp; pop r12; ret; 
0x0000000047d01a: mov [rbx+0x74], eax; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000047d61e: mov [rbx+0x74], edx; pop rbx; pop rbp; pop r12; ret; 
0x0000000046b787: mov [rbx+0x8], eax; cmp eax, 0xfffffffd; je short 0x000000000046b7a8; pop rbx; ret; 
0x0000000041b77f: mov [rbx+0x90], eax; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000041b77e: mov [rbx+0x90], rax; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000004988d7: mov [rbx+0x98], edx; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000004988d6: mov [rbx+0x98], rdx; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000041b84f: mov [rbx+0xd8], ecx; lea rcx, [rip+0xaf844]; mov [rdx+0xe0], rcx; pop rbx; ret; 
0x0000000041b84e: mov [rbx+0xd8], rcx; lea rcx, [rip+0xaf844]; mov [rdx+0xe0], rcx; pop rbx; ret; 
0x000000004905ee: mov [rbx], eax; add rsp, 0x10; pop rbx; ret; 
0x0000000041f142: mov [rbx], eax; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x00000000495dad: mov [rbx], eax; pop rax; pop rdx; pop rbx; ret; 
0x0000000047d751: mov [rbx], ecx; pop rbx; ret; 
0x000000004905ed: mov [rbx], rax; add rsp, 0x10; pop rbx; ret; 
0x00000000495dac: mov [rbx], rax; pop rax; pop rdx; pop rbx; ret; 
0x0000000043eb9b: mov [rcx-0x2], ecx; ret; 
0x0000000043eb86: mov [rcx-0x4], ecx; ret; 
0x00000000486fbf: mov [rcx-0x77], cl; xchg [rax], ebx; add al, 0x0; add [rcx-0x77], cl; ret; 
0x0000000043eb75: mov [rcx-0x8], ecx; ret; 
0x0000000047d3c3: mov [rcx], eax; add [rax], al; mov esi, r15d; mov rdi, rbp; call qword ptr [r14+0x18]; 
0x000000004968a1: mov [rcx], eax; add rsp, 0x8; ret; 
0x0000000045965e: mov [rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000004968c0: mov [rcx], eax; ret; 
0x00000000498b5f: mov [rcx], edx; add rsp, 0x8; ret; 
0x0000000046db0c: mov [rcx], edx; mov rdx, 0xffffffffffffffe0; mov fs:[rdx], rax; ret; 
0x000000004968bf: mov [rcx], r8; ret; 
0x00000000498b5e: mov [rcx], rdx; add rsp, 0x8; ret; 
0x0000000046db0b: mov [rcx], rdx; mov rdx, 0xffffffffffffffe0; mov fs:[rdx], rax; ret; 
0x00000000453ddc: mov [rdi+0x10], cx; lea rax, [rdi+0x11]; ret; 
0x0000000045373c: mov [rdi+0x10], cx; ret; 
0x00000000453dc8: mov [rdi+0x10], dh; lea rax, [rdi+0x10]; ret; 
0x00000000453728: mov [rdi+0x10], dh; ret; 
0x00000000453ddd: mov [rdi+0x10], ecx; lea rax, [rdi+0x11]; ret; 
0x00000000453e1b: mov [rdi+0x10], ecx; lea rax, [rdi+0x13]; ret; 
0x00000000453e9d: mov [rdi+0x10], ecx; lea rax, [rdi+0x17]; ret; 
0x00000000453e3b: mov [rdi+0x10], ecx; mov [rdi+0x14], dh; lea rax, [rdi+0x14]; ret; 
0x0000000045377b: mov [rdi+0x10], ecx; mov [rdi+0x14], dh; ret; 
0x00000000453ebd: mov [rdi+0x10], ecx; mov [rdi+0x18], dh; lea rax, [rdi+0x18]; ret; 
0x000000004537fd: mov [rdi+0x10], ecx; mov [rdi+0x18], dh; ret; 
0x0000000045373d: mov [rdi+0x10], ecx; ret; 
0x00000000453f00: mov [rdi+0x10], edx; mov [rdi+0x17], ecx; lea rax, [rdi+0x1a]; ret; 
0x00000000453840: mov [rdi+0x10], edx; mov [rdi+0x17], ecx; ret; 
0x00000000453ee1: mov [rdi+0x10], edx; mov [rdi+0x18], cx; lea rax, [rdi+0x19]; ret; 
0x00000000453821: mov [rdi+0x10], edx; mov [rdi+0x18], cx; ret; 
0x00000000453f20: mov [rdi+0x10], edx; mov [rdi+0x18], ecx; lea rax, [rdi+0x1b]; ret; 
0x00000000453860: mov [rdi+0x10], edx; mov [rdi+0x18], ecx; ret; 
0x0000000048dfae: mov [rdi+0x10], r9; ret; 
0x00000000453e9c: mov [rdi+0x10], rcx; lea rax, [rdi+0x17]; ret; 
0x00000000453ebc: mov [rdi+0x10], rcx; mov [rdi+0x18], dh; lea rax, [rdi+0x18]; ret; 
0x000000004537fc: mov [rdi+0x10], rcx; mov [rdi+0x18], dh; ret; 
0x000000004537dc: mov [rdi+0x10], rcx; ret; 
0x00000000453eff: mov [rdi+0x10], rdx; mov [rdi+0x17], ecx; lea rax, [rdi+0x1a]; ret; 
0x0000000045383f: mov [rdi+0x10], rdx; mov [rdi+0x17], ecx; ret; 
0x00000000453ee0: mov [rdi+0x10], rdx; mov [rdi+0x18], cx; lea rax, [rdi+0x19]; ret; 
0x00000000453820: mov [rdi+0x10], rdx; mov [rdi+0x18], cx; ret; 
0x00000000453f1f: mov [rdi+0x10], rdx; mov [rdi+0x18], ecx; lea rax, [rdi+0x1b]; ret; 
0x0000000045385f: mov [rdi+0x10], rdx; mov [rdi+0x18], ecx; ret; 
0x00000000453e3e: mov [rdi+0x14], dh; lea rax, [rdi+0x14]; ret; 
0x0000000045377e: mov [rdi+0x14], dh; ret; 
0x00000000453f03: mov [rdi+0x17], ecx; lea rax, [rdi+0x1a]; ret; 
0x00000000453843: mov [rdi+0x17], ecx; ret; 
0x00000000453ee4: mov [rdi+0x18], cx; lea rax, [rdi+0x19]; ret; 
0x00000000453824: mov [rdi+0x18], cx; ret; 
0x00000000453ec0: mov [rdi+0x18], dh; lea rax, [rdi+0x18]; ret; 
0x00000000453800: mov [rdi+0x18], dh; ret; 
0x0000000041ebb7: mov [rdi+0x18], eax; mov [rdi+0x8], rax; ret; 
0x00000000453ee5: mov [rdi+0x18], ecx; lea rax, [rdi+0x19]; ret; 
0x00000000453f23: mov [rdi+0x18], ecx; lea rax, [rdi+0x1b]; ret; 
0x00000000453825: mov [rdi+0x18], ecx; ret; 
0x0000000041ebe4: mov [rdi+0x18], edx; mov [rdi+0x48], rax; movups [rdi+0x8], xmm0; ret; 
0x0000000042095c: mov [rdi+0x18], esi; mov [rdi+0x8], rax; xor eax, eax; ret; 
0x0000000041ebb5: mov [rdi+0x18], rax; mov [rdi+0x8], rax; ret; 
0x0000000041ebe3: mov [rdi+0x18], rdx; mov [rdi+0x48], rax; movups [rdi+0x8], xmm0; ret; 
0x0000000042095b: mov [rdi+0x18], rsi; mov [rdi+0x8], rax; xor eax, eax; ret; 
0x0000000043bde7: mov [rdi+0x1], dx; mov [rdi], cx; ret; 
0x0000000043bde8: mov [rdi+0x1], edx; mov [rdi], cx; ret; 
0x0000000043bd05: mov [rdi+0x1], edx; mov [rdi], ecx; ret; 
0x0000000043bb48: mov [rdi+0x1], edx; mov [rdi], rcx; ret; 
0x0000000043bb47: mov [rdi+0x1], rdx; mov [rdi], rcx; ret; 
0x0000000045d88f: mov [rdi+0x20], edx; mov byte ptr [rdi+0x28], 0x1; ret; 
0x0000000045d8a1: mov [rdi+0x20], esi; ret; 
0x0000000045d88e: mov [rdi+0x20], rdx; mov byte ptr [rdi+0x28], 0x1; ret; 
0x0000000045d8a0: mov [rdi+0x20], rsi; ret; 
0x00000000453c76: mov [rdi+0x2], dh; lea rax, [rdi+0x2]; ret; 
0x00000000453646: mov [rdi+0x2], dh; ret; 
0x0000000043bc95: mov [rdi+0x2], edx; mov [rdi], ecx; ret; 
0x0000000043bad8: mov [rdi+0x2], edx; mov [rdi], rcx; ret; 
0x0000000043bad7: mov [rdi+0x2], rdx; mov [rdi], rcx; ret; 
0x00000000486376: mov [rdi+0x2f4], edx; mov [rdi+0x308], rax; ret; 
0x00000000486344: mov [rdi+0x2fc], ecx; mov [rdi+0x310], rax; ret; 
0x0000000048633a: mov [rdi+0x308], eax; lea rax, [rax+rdx*4]; mov [rdi+0x2fc], ecx; mov [rdi+0x310], rax; ret; 
0x0000000048637d: mov [rdi+0x308], eax; ret; 
0x00000000486339: mov [rdi+0x308], rax; lea rax, [rax+rdx*4]; mov [rdi+0x2fc], ecx; mov [rdi+0x310], rax; ret; 
0x0000000048637c: mov [rdi+0x308], rax; ret; 
0x0000000048636c: mov [rdi+0x310], eax; lea rax, [rax+rdx*4]; mov [rdi+0x2f4], edx; mov [rdi+0x308], rax; ret; 
0x0000000048634b: mov [rdi+0x310], eax; ret; 
0x0000000048636b: mov [rdi+0x310], rax; lea rax, [rax+rdx*4]; mov [rdi+0x2f4], edx; mov [rdi+0x308], rax; ret; 
0x0000000048634a: mov [rdi+0x310], rax; ret; 
0x00000000453cc7: mov [rdi+0x3], edx; lea rax, [rdi+0x6]; ret; 
0x0000000043bc25: mov [rdi+0x3], edx; mov [rdi], ecx; ret; 
0x0000000043ba68: mov [rdi+0x3], edx; mov [rdi], rcx; ret; 
0x00000000453687: mov [rdi+0x3], edx; ret; 
0x0000000043ba67: mov [rdi+0x3], rdx; mov [rdi], rcx; ret; 
0x0000000041ebe8: mov [rdi+0x48], eax; movups [rdi+0x8], xmm0; ret; 
0x0000000041ebb3: mov [rdi+0x48], edx; mov [rdi+0x18], rax; mov [rdi+0x8], rax; ret; 
0x0000000041ebe7: mov [rdi+0x48], rax; movups [rdi+0x8], xmm0; ret; 
0x0000000041ebb0: mov [rdi+0x48], rdx; mov [rdi+0x18], rax; mov [rdi+0x8], rax; ret; 
0x00000000453c92: mov [rdi+0x4], dh; mov [rdi], ecx; lea rax, [rdi+0x4]; ret; 
0x00000000453662: mov [rdi+0x4], dh; mov [rdi], ecx; ret; 
0x00000000453ca8: mov [rdi+0x4], dx; lea rax, [rdi+0x5]; ret; 
0x00000000453678: mov [rdi+0x4], dx; ret; 
0x00000000453ca9: mov [rdi+0x4], edx; lea rax, [rdi+0x5]; ret; 
0x0000000043b9f8: mov [rdi+0x4], edx; mov [rdi], rcx; ret; 
0x00000000453679: mov [rdi+0x4], edx; ret; 
0x0000000043b9f7: mov [rdi+0x4], rdx; mov [rdi], rcx; ret; 
0x00000000453d5b: mov [rdi+0x5], edx; lea rax, [rdi+0xc]; ret; 
0x0000000043b988: mov [rdi+0x5], edx; mov [rdi], rcx; ret; 
0x000000004536eb: mov [rdi+0x5], edx; ret; 
0x00000000453d5a: mov [rdi+0x5], rdx; lea rax, [rdi+0xc]; ret; 
0x0000000043b987: mov [rdi+0x5], rdx; mov [rdi], rcx; ret; 
0x000000004536ea: mov [rdi+0x5], rdx; ret; 
0x00000000453d7b: mov [rdi+0x6], edx; lea rax, [rdi+0xd]; ret; 
0x0000000043b918: mov [rdi+0x6], edx; mov [rdi], rcx; ret; 
0x000000004536fb: mov [rdi+0x6], edx; ret; 
0x00000000453d7a: mov [rdi+0x6], rdx; lea rax, [rdi+0xd]; ret; 
0x0000000043b917: mov [rdi+0x6], rdx; mov [rdi], rcx; ret; 
0x000000004536fa: mov [rdi+0x6], rdx; ret; 
0x00000000453d19: mov [rdi+0x7], edx; lea rax, [rdi+0xa]; ret; 
0x00000000453d9b: mov [rdi+0x7], edx; lea rax, [rdi+0xe]; ret; 
0x0000000043b8a8: mov [rdi+0x7], edx; mov [rdi], rcx; ret; 
0x000000004536c9: mov [rdi+0x7], edx; ret; 
0x00000000453d9a: mov [rdi+0x7], rdx; lea rax, [rdi+0xe]; ret; 
0x0000000043b8a7: mov [rdi+0x7], rdx; mov [rdi], rcx; ret; 
0x0000000045370a: mov [rdi+0x7], rdx; ret; 
0x00000000453ce3: mov [rdi+0x8], dh; mov [rdi], rcx; lea rax, [rdi+0x8]; ret; 
0x000000004536a3: mov [rdi+0x8], dh; mov [rdi], rcx; ret; 
0x00000000453cfa: mov [rdi+0x8], dx; lea rax, [rdi+0x9]; ret; 
0x000000004536ba: mov [rdi+0x8], dx; ret; 
0x0000000048f746: mov [rdi+0x8], eax; mov eax, 0x2; ret; 
0x0000000041ebbb: mov [rdi+0x8], eax; ret; 
0x0000000048dfa8: mov [rdi+0x8], eax; shr r9, cl; mov [rdi+0x10], r9; ret; 
0x00000000420920: mov [rdi+0x8], eax; xor eax, eax; ret; 
0x0000000048df38: mov [rdi+0x8], ecx; ret; 
0x00000000453cfb: mov [rdi+0x8], edx; lea rax, [rdi+0x9]; ret; 
0x00000000453d39: mov [rdi+0x8], edx; lea rax, [rdi+0xb]; ret; 
0x0000000048f428: mov [rdi+0x8], edx; mov eax, ecx; adc eax, eax; ret; 
0x000000004536bb: mov [rdi+0x8], edx; ret; 
0x0000000048f427: mov [rdi+0x8], r10; mov eax, ecx; adc eax, eax; ret; 
0x0000000048dfa7: mov [rdi+0x8], r8; shr r9, cl; mov [rdi+0x10], r9; ret; 
0x0000000048df37: mov [rdi+0x8], r9; ret; 
0x0000000048f745: mov [rdi+0x8], rax; mov eax, 0x2; ret; 
0x0000000041ebba: mov [rdi+0x8], rax; ret; 
0x0000000042091f: mov [rdi+0x8], rax; xor eax, eax; ret; 
0x00000000498bb5: mov [rdi+0x98], esi; ret; 
0x00000000498bb4: mov [rdi+0x98], rsi; ret; 
0x000000004189cd: mov [rdi+0xd8], edx; mov rdx, [rdi+0xa0]; mov [rdx+0xe0], rcx; ret; 
0x000000004189cc: mov [rdi+0xd8], rdx; mov rdx, [rdi+0xa0]; mov [rdx+0xe0], rcx; ret; 
0x00000000453e5d: mov [rdi+0xe], ecx; lea rax, [rdi+0x15]; ret; 
0x0000000045379d: mov [rdi+0xe], ecx; ret; 
0x00000000453e5c: mov [rdi+0xe], rcx; lea rax, [rdi+0x15]; ret; 
0x0000000045379c: mov [rdi+0xe], rcx; ret; 
0x00000000453dfb: mov [rdi+0xf], ecx; lea rax, [rdi+0x12]; ret; 
0x00000000453e7d: mov [rdi+0xf], ecx; lea rax, [rdi+0x16]; ret; 
0x0000000045375b: mov [rdi+0xf], ecx; ret; 
0x00000000453e7c: mov [rdi+0xf], rcx; lea rax, [rdi+0x16]; ret; 
0x000000004537bc: mov [rdi+0xf], rcx; ret; 
0x0000000048e56c: mov [rdi+r11*8+0x8], r9; add rdx, r8; mov rax, rdx; pop rbx; ret; 
0x0000000048e56d: mov [rdi+rbx*8+0x8], ecx; add rdx, r8; mov rax, rdx; pop rbx; ret; 
0x000000004575de: mov [rdi+rdx-0x2], cx; mov [rdi], cx; ret; 
0x00000000457763: mov [rdi+rdx-0x2], cx; mov [rdi], cx; vzeroupper; ret; 
0x00000000456868: mov [rdi+rdx-0x2], cx; mov [rdi], si; ret; 
0x00000000456867: mov [rdi+rdx-0x2], cx; mov [rdi], si; ret; 
0x000000004575df: mov [rdi+rdx-0x2], ecx; mov [rdi], cx; ret; 
0x00000000457764: mov [rdi+rdx-0x2], ecx; mov [rdi], cx; vzeroupper; ret; 
0x00000000456869: mov [rdi+rdx-0x2], ecx; mov [rdi], si; ret; 
0x000000004542e8: mov [rdi+rdx-0x3], ecx; lea rax, [rdi+rdx]; vzeroupper; ret; 
0x000000004500b8: mov [rdi+rdx-0x3], ecx; vzeroupper; ret; 
0x000000004575d7: mov [rdi+rdx-0x4], ecx; mov [rdi], ecx; ret; 
0x00000000457759: mov [rdi+rdx-0x4], ecx; mov [rdi], ecx; vzeroupper; ret; 
0x00000000456859: mov [rdi+rdx-0x4], ecx; mov [rdi], esi; ret; 
0x00000000456858: mov [rdi+rdx-0x4], ecx; mov [rdi], esi; ret; 
0x0000000045430c: mov [rdi+rdx-0x7], ecx; lea rax, [rdi+rdx]; vzeroupper; ret; 
0x000000004500cc: mov [rdi+rdx-0x7], ecx; vzeroupper; ret; 
0x0000000045430b: mov [rdi+rdx-0x7], r9; lea rax, [rdi+rdx]; vzeroupper; ret; 
0x000000004500cb: mov [rdi+rdx-0x7], r9; vzeroupper; ret; 
0x000000004575cf: mov [rdi+rdx-0x8], ecx; mov [rdi], rcx; ret; 
0x0000000045774e: mov [rdi+rdx-0x8], ecx; mov [rdi], rcx; vzeroupper; ret; 
0x0000000045684b: mov [rdi+rdx-0x8], ecx; mov [rdi], rsi; ret; 
0x000000004575ce: mov [rdi+rdx-0x8], rcx; mov [rdi], rcx; ret; 
0x0000000045774d: mov [rdi+rdx-0x8], rcx; mov [rdi], rcx; vzeroupper; ret; 
0x00000000456849: mov [rdi+rdx-0x8], rcx; mov [rdi], rsi; ret; 
0x0000000045684a: mov [rdi+rdx-0x8], rcx; mov [rdi], rsi; ret; 
0x00000000498b71: mov [rdi+rsi*8], edx; add rsp, 0x8; ret; 
0x00000000498b70: mov [rdi+rsi*8], rdx; add rsp, 0x8; ret; 
0x00000000435785: mov [rdi-0x10], ebx; mov [rdi-0x8], rcx; ret; 
0x000000004357c3: mov [rdi-0x10], ebx; mov [rdi-0x8], rdx; ret; 
0x0000000048de9f: mov [rdi-0x10], ecx; ret; 
0x00000000435784: mov [rdi-0x10], r11; mov [rdi-0x8], rcx; ret; 
0x000000004357c2: mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x0000000048de9e: mov [rdi-0x10], r9; ret; 
0x00000000435938: mov [rdi-0x11], ebx; mov [rdi-0x9], r8; mov [rdi-0x4], edx; ret; 
0x00000000435a34: mov [rdi-0x11], ebx; mov [rdi-0x9], rcx; mov [rdi-0x1], dl; ret; 
0x00000000435980: mov [rdi-0x11], ebx; mov [rdi-0x9], rcx; mov [rdi-0x4], edx; ret; 
0x00000000435937: mov [rdi-0x11], r11; mov [rdi-0x9], r8; mov [rdi-0x4], edx; ret; 
0x00000000435a33: mov [rdi-0x11], r11; mov [rdi-0x9], rcx; mov [rdi-0x1], dl; ret; 
0x0000000043597f: mov [rdi-0x11], r11; mov [rdi-0x9], rcx; mov [rdi-0x4], edx; ret; 
0x00000000435b08: mov [rdi-0x12], ebx; mov [rdi-0xa], rcx; mov [rdi-0x4], edx; ret; 
0x00000000435b07: mov [rdi-0x12], r11; mov [rdi-0xa], rcx; mov [rdi-0x4], edx; ret; 
0x00000000435ce8: mov [rdi-0x13], ebx; mov [rdi-0xb], rcx; mov [rdi-0x4], edx; ret; 
0x00000000435ce7: mov [rdi-0x13], r11; mov [rdi-0xb], rcx; mov [rdi-0x4], edx; ret; 
0x00000000435ed8: mov [rdi-0x14], ebx; mov [rdi-0xc], rcx; mov [rdi-0x4], edx; ret; 
0x00000000435ed7: mov [rdi-0x14], r11; mov [rdi-0xc], rcx; mov [rdi-0x4], edx; ret; 
0x000000004360a9: mov [rdi-0x15], ebx; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x000000004360a8: mov [rdi-0x15], r11; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x000000004362a9: mov [rdi-0x16], ebx; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x000000004362a8: mov [rdi-0x16], r11; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x000000004364a9: mov [rdi-0x17], ebx; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x000000004364a8: mov [rdi-0x17], r11; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000435781: mov [rdi-0x18], edx; mov [rdi-0x10], r11; mov [rdi-0x8], rcx; ret; 
0x000000004357bf: mov [rdi-0x18], edx; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x00000000435780: mov [rdi-0x18], r10; mov [rdi-0x10], r11; mov [rdi-0x8], rcx; ret; 
0x000000004357be: mov [rdi-0x18], r10; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x00000000435934: mov [rdi-0x19], edx; mov [rdi-0x11], r11; mov [rdi-0x9], r8; mov [rdi-0x4], edx; ret; 
0x00000000435a30: mov [rdi-0x19], edx; mov [rdi-0x11], r11; mov [rdi-0x9], rcx; mov [rdi-0x1], dl; ret; 
0x0000000043597c: mov [rdi-0x19], edx; mov [rdi-0x11], r11; mov [rdi-0x9], rcx; mov [rdi-0x4], edx; ret; 
0x00000000435933: mov [rdi-0x19], r10; mov [rdi-0x11], r11; mov [rdi-0x9], r8; mov [rdi-0x4], edx; ret; 
0x00000000435a2f: mov [rdi-0x19], r10; mov [rdi-0x11], r11; mov [rdi-0x9], rcx; mov [rdi-0x1], dl; ret; 
0x0000000043597b: mov [rdi-0x19], r10; mov [rdi-0x11], r11; mov [rdi-0x9], rcx; mov [rdi-0x4], edx; ret; 
0x00000000435a3b: mov [rdi-0x1], dl; ret; 
0x00000000435b04: mov [rdi-0x1a], edx; mov [rdi-0x12], r11; mov [rdi-0xa], rcx; mov [rdi-0x4], edx; ret; 
0x00000000435b03: mov [rdi-0x1a], r10; mov [rdi-0x12], r11; mov [rdi-0xa], rcx; mov [rdi-0x4], edx; ret; 
0x00000000435ce4: mov [rdi-0x1b], edx; mov [rdi-0x13], r11; mov [rdi-0xb], rcx; mov [rdi-0x4], edx; ret; 
0x00000000435ce3: mov [rdi-0x1b], r10; mov [rdi-0x13], r11; mov [rdi-0xb], rcx; mov [rdi-0x4], edx; ret; 
0x00000000435ed4: mov [rdi-0x1c], edx; mov [rdi-0x14], r11; mov [rdi-0xc], rcx; mov [rdi-0x4], edx; ret; 
0x00000000435ed3: mov [rdi-0x1c], r10; mov [rdi-0x14], r11; mov [rdi-0xc], rcx; mov [rdi-0x4], edx; ret; 
0x000000004360a5: mov [rdi-0x1d], edx; mov [rdi-0x15], r11; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x000000004360a4: mov [rdi-0x1d], r10; mov [rdi-0x15], r11; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x000000004362a5: mov [rdi-0x1e], edx; mov [rdi-0x16], r11; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x000000004362a4: mov [rdi-0x1e], r10; mov [rdi-0x16], r11; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x000000004364a5: mov [rdi-0x1f], edx; mov [rdi-0x17], r11; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x000000004364a4: mov [rdi-0x1f], r10; mov [rdi-0x17], r11; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043577d: mov [rdi-0x20], ecx; mov [rdi-0x18], r10; mov [rdi-0x10], r11; mov [rdi-0x8], rcx; ret; 
0x000000004357bb: mov [rdi-0x20], ecx; mov [rdi-0x18], r10; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x0000000043577c: mov [rdi-0x20], r9; mov [rdi-0x18], r10; mov [rdi-0x10], r11; mov [rdi-0x8], rcx; ret; 
0x000000004357ba: mov [rdi-0x20], r9; mov [rdi-0x18], r10; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x00000000435e8c: mov [rdi-0x2], cx; ret; 
0x00000000435ca4: mov [rdi-0x2], dx; ret; 
0x00000000435e8d: mov [rdi-0x2], ecx; ret; 
0x00000000435ca5: mov [rdi-0x2], edx; ret; 
0x00000000435e88: mov [rdi-0x3], dx; mov [rdi-0x2], cx; ret; 
0x00000000435e89: mov [rdi-0x3], edx; mov [rdi-0x2], cx; ret; 
0x00000000436269: mov [rdi-0x4], ecx; ret; 
0x0000000043593f: mov [rdi-0x4], edx; ret; 
0x00000000436266: mov [rdi-0x5], edx; mov [rdi-0x4], ecx; ret; 
0x00000000436466: mov [rdi-0x6], edx; mov [rdi-0x4], ecx; ret; 
0x00000000436666: mov [rdi-0x7], edx; mov [rdi-0x4], ecx; ret; 
0x0000000048de98: mov [rdi-0x8], eax; shl r9, cl; mov [rdi-0x10], r9; ret; 
0x00000000435789: mov [rdi-0x8], ecx; ret; 
0x000000004357c7: mov [rdi-0x8], edx; ret; 
0x0000000048de97: mov [rdi-0x8], r8; shl r9, cl; mov [rdi-0x10], r9; ret; 
0x0000000048de1d: mov [rdi-0x8], r9; ret; 
0x0000000043b13b: mov [rdi-0x8], rcx; ret; 
0x00000000435788: mov [rdi-0x8], rcx; ret; 
0x000000004362ae: mov [rdi-0x8], rdx; ret; 
0x000000004357c6: mov [rdi-0x8], rdx; ret; 
0x0000000043593c: mov [rdi-0x9], eax; mov [rdi-0x4], edx; ret; 
0x00000000435a38: mov [rdi-0x9], ecx; mov [rdi-0x1], dl; ret; 
0x00000000435984: mov [rdi-0x9], ecx; mov [rdi-0x4], edx; ret; 
0x0000000043b3d8: mov [rdi-0x9], edx; mov [rdi-0x4], ecx; ret; 
0x0000000043593b: mov [rdi-0x9], r8; mov [rdi-0x4], edx; ret; 
0x00000000435a37: mov [rdi-0x9], rcx; mov [rdi-0x1], dl; ret; 
0x00000000435983: mov [rdi-0x9], rcx; mov [rdi-0x4], edx; ret; 
0x0000000043b3d7: mov [rdi-0x9], rdx; mov [rdi-0x4], ecx; ret; 
0x00000000435b0c: mov [rdi-0xa], ecx; mov [rdi-0x4], edx; ret; 
0x0000000043b358: mov [rdi-0xa], edx; mov [rdi-0x4], ecx; ret; 
0x00000000435b0b: mov [rdi-0xa], rcx; mov [rdi-0x4], edx; ret; 
0x0000000043b357: mov [rdi-0xa], rdx; mov [rdi-0x4], ecx; ret; 
0x00000000435cec: mov [rdi-0xb], ecx; mov [rdi-0x4], edx; ret; 
0x0000000043b2d8: mov [rdi-0xb], edx; mov [rdi-0x4], ecx; ret; 
0x00000000435ceb: mov [rdi-0xb], rcx; mov [rdi-0x4], edx; ret; 
0x0000000043b2d7: mov [rdi-0xb], rdx; mov [rdi-0x4], ecx; ret; 
0x00000000435edc: mov [rdi-0xc], ecx; mov [rdi-0x4], edx; ret; 
0x0000000043b258: mov [rdi-0xc], edx; mov [rdi-0x4], ecx; ret; 
0x00000000435edb: mov [rdi-0xc], rcx; mov [rdi-0x4], edx; ret; 
0x0000000043b257: mov [rdi-0xc], rdx; mov [rdi-0x4], ecx; ret; 
0x000000004360ad: mov [rdi-0xd], ecx; mov [rdi-0x8], rdx; ret; 
0x0000000043b1c9: mov [rdi-0xd], edx; mov [rdi-0x8], rcx; ret; 
0x000000004360ac: mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043b1c8: mov [rdi-0xd], rdx; mov [rdi-0x8], rcx; ret; 
0x000000004362ad: mov [rdi-0xe], ecx; mov [rdi-0x8], rdx; ret; 
0x0000000043b139: mov [rdi-0xe], edx; mov [rdi-0x8], rcx; ret; 
0x000000004362ac: mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043b138: mov [rdi-0xe], rdx; mov [rdi-0x8], rcx; ret; 
0x000000004364ad: mov [rdi-0xf], ecx; mov [rdi-0x8], rdx; ret; 
0x0000000043b0a9: mov [rdi-0xf], edx; mov [rdi-0x8], rcx; ret; 
0x000000004364ac: mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043b0a8: mov [rdi-0xf], rdx; mov [rdi-0x8], rcx; ret; 
0x00000000499a84: mov [rdi], cl; mov dh, 0x53; add [rax-0x7d], ecx; ret; 
0x0000000043eba6: mov [rdi], cl; ret; 
0x00000000457739: mov [rdi], cl; vzeroupper; ret; 
0x00000000453c73: mov [rdi], cx; mov [rdi+0x2], dh; lea rax, [rdi+0x2]; ret; 
0x00000000453643: mov [rdi], cx; mov [rdi+0x2], dh; ret; 
0x00000000456576: mov [rdi], cx; mov [rsi-0x2], cx; ret; 
0x000000004542b3: mov [rdi], cx; mov byte ptr [rdi+0x2], 0x0; lea rax, [rdi+0x2]; vzeroupper; ret; 
0x00000000450093: mov [rdi], cx; mov byte ptr [rdi+0x2], 0x0; vzeroupper; ret; 
0x0000000043bdeb: mov [rdi], cx; ret; 
0x00000000457768: mov [rdi], cx; vzeroupper; ret; 
0x00000000453c50: mov [rdi], dh; lea rax, [rdi]; ret; 
0x00000000453620: mov [rdi], dh; ret; 
0x0000000043bec3: mov [rdi], dl; ret; 
0x00000000453c63: mov [rdi], dx; lea rax, [rdi+0x1]; ret; 
0x000000004542a3: mov [rdi], dx; lea rax, [rdi+0x1]; vzeroupper; ret; 
0x0000000043be53: mov [rdi], dx; ret; 
0x00000000450083: mov [rdi], dx; vzeroupper; ret; 
0x0000000048a41c: mov [rdi], eax; mov rax, [rip+0x422a3]; mov [rsi], rax; ret; 
0x0000000048de18: mov [rdi], eax; shl r9, cl; mov [rdi-0x8], r9; ret; 
0x0000000048df32: mov [rdi], eax; shr r9, cl; mov [rdi+0x8], r9; ret; 
0x00000000453c95: mov [rdi], ecx; lea rax, [rdi+0x4]; ret; 
0x00000000453ce7: mov [rdi], ecx; lea rax, [rdi+0x8]; ret; 
0x00000000453c74: mov [rdi], ecx; mov [rdi+0x2], dh; lea rax, [rdi+0x2]; ret; 
0x00000000453644: mov [rdi], ecx; mov [rdi+0x2], dh; ret; 
0x00000000453cc5: mov [rdi], ecx; mov [rdi+0x3], edx; lea rax, [rdi+0x6]; ret; 
0x00000000453685: mov [rdi], ecx; mov [rdi+0x3], edx; ret; 
0x00000000453ca6: mov [rdi], ecx; mov [rdi+0x4], dx; lea rax, [rdi+0x5]; ret; 
0x00000000453676: mov [rdi], ecx; mov [rdi+0x4], dx; ret; 
0x00000000453d58: mov [rdi], ecx; mov [rdi+0x5], rdx; lea rax, [rdi+0xc]; ret; 
0x000000004536e8: mov [rdi], ecx; mov [rdi+0x5], rdx; ret; 
0x00000000453d78: mov [rdi], ecx; mov [rdi+0x6], rdx; lea rax, [rdi+0xd]; ret; 
0x000000004536f8: mov [rdi], ecx; mov [rdi+0x6], rdx; ret; 
0x00000000453d17: mov [rdi], ecx; mov [rdi+0x7], edx; lea rax, [rdi+0xa]; ret; 
0x000000004536c7: mov [rdi], ecx; mov [rdi+0x7], edx; ret; 
0x00000000453d98: mov [rdi], ecx; mov [rdi+0x7], rdx; lea rax, [rdi+0xe]; ret; 
0x00000000453708: mov [rdi], ecx; mov [rdi+0x7], rdx; ret; 
0x00000000453cf8: mov [rdi], ecx; mov [rdi+0x8], dx; lea rax, [rdi+0x9]; ret; 
0x000000004536b8: mov [rdi], ecx; mov [rdi+0x8], dx; ret; 
0x00000000453d37: mov [rdi], ecx; mov [rdi+0x8], edx; lea rax, [rdi+0xb]; ret; 
0x000000004536d7: mov [rdi], ecx; mov [rdi+0x8], edx; ret; 
0x00000000454309: mov [rdi], ecx; mov [rdi+rdx-0x7], r9; lea rax, [rdi+rdx]; vzeroupper; ret; 
0x000000004500c9: mov [rdi], ecx; mov [rdi+rdx-0x7], r9; vzeroupper; ret; 
0x00000000456577: mov [rdi], ecx; mov [rsi-0x2], cx; ret; 
0x0000000045656b: mov [rdi], ecx; mov [rsi-0x4], ecx; ret; 
0x000000004542b4: mov [rdi], ecx; mov byte ptr [rdi+0x2], 0x0; lea rax, [rdi+0x2]; vzeroupper; ret; 
0x00000000450094: mov [rdi], ecx; mov byte ptr [rdi+0x2], 0x0; vzeroupper; ret; 
0x000000004500b2: mov [rdi], ecx; mov ecx, [rsi+rdx-0x3]; mov [rdi+rdx-0x3], ecx; vzeroupper; ret; 
0x0000000043b8ac: mov [rdi], ecx; ret; 
0x00000000457753: mov [rdi], ecx; vzeroupper; ret; 
0x00000000453c64: mov [rdi], edx; lea rax, [rdi+0x1]; ret; 
0x000000004542a4: mov [rdi], edx; lea rax, [rdi+0x1]; vzeroupper; ret; 
0x00000000453c82: mov [rdi], edx; lea rax, [rdi+0x3]; ret; 
0x000000004542d2: mov [rdi], edx; lea rax, [rdi+0x3]; vzeroupper; ret; 
0x00000000453cd4: mov [rdi], edx; lea rax, [rdi+0x7]; ret; 
0x0000000043bbb4: mov [rdi], edx; ret; 
0x00000000450084: mov [rdi], edx; vzeroupper; ret; 
0x0000000043eb97: mov [rdi], esi; mov [r9-0x2], cx; ret; 
0x0000000043eb83: mov [rdi], esi; mov [r9-0x4], ecx; ret; 
0x0000000043eb72: mov [rdi], esi; mov [r9-0x8], rcx; ret; 
0x0000000048f5f6: mov [rdi], esi; mov [rdx], eax; mov eax, 0x1; ret; 
0x00000000456850: mov [rdi], esi; ret; 
0x0000000048de17: mov [rdi], r8; shl r9, cl; mov [rdi-0x8], r9; ret; 
0x0000000048df31: mov [rdi], r8; shr r9, cl; mov [rdi+0x8], r9; ret; 
0x0000000048ddec: mov [rdi], r9; ret; 
0x0000000048a41b: mov [rdi], rax; mov rax, [rip+0x422a3]; mov [rsi], rax; ret; 
0x00000000453ce6: mov [rdi], rcx; lea rax, [rdi+0x8]; ret; 
0x00000000453d57: mov [rdi], rcx; mov [rdi+0x5], rdx; lea rax, [rdi+0xc]; ret; 
0x000000004536e7: mov [rdi], rcx; mov [rdi+0x5], rdx; ret; 
0x00000000453d77: mov [rdi], rcx; mov [rdi+0x6], rdx; lea rax, [rdi+0xd]; ret; 
0x000000004536f7: mov [rdi], rcx; mov [rdi+0x6], rdx; ret; 
0x00000000453d16: mov [rdi], rcx; mov [rdi+0x7], edx; lea rax, [rdi+0xa]; ret; 
0x000000004536c6: mov [rdi], rcx; mov [rdi+0x7], edx; ret; 
0x00000000453d97: mov [rdi], rcx; mov [rdi+0x7], rdx; lea rax, [rdi+0xe]; ret; 
0x00000000453707: mov [rdi], rcx; mov [rdi+0x7], rdx; ret; 
0x00000000453cf7: mov [rdi], rcx; mov [rdi+0x8], dx; lea rax, [rdi+0x9]; ret; 
0x000000004536b7: mov [rdi], rcx; mov [rdi+0x8], dx; ret; 
0x00000000453d36: mov [rdi], rcx; mov [rdi+0x8], edx; lea rax, [rdi+0xb]; ret; 
0x000000004536d6: mov [rdi], rcx; mov [rdi+0x8], edx; ret; 
0x00000000454308: mov [rdi], rcx; mov [rdi+rdx-0x7], r9; lea rax, [rdi+rdx]; vzeroupper; ret; 
0x000000004500c8: mov [rdi], rcx; mov [rdi+rdx-0x7], r9; vzeroupper; ret; 
0x0000000043b8ab: mov [rdi], rcx; ret; 
0x00000000457752: mov [rdi], rcx; vzeroupper; ret; 
0x00000000453cd3: mov [rdi], rdx; lea rax, [rdi+0x7]; ret; 
0x0000000043bbb3: mov [rdi], rdx; ret; 
0x0000000043eb71: mov [rdi], rsi; mov [r9-0x8], rcx; ret; 
0x0000000048f5f5: mov [rdi], rsi; mov [rdx], eax; mov eax, 0x1; ret; 
0x0000000045684f: mov [rdi], rsi; ret; 
0x0000000043eb96: mov [rdi], si; mov [r9-0x2], cx; ret; 
0x0000000045686d: mov [rdi], si; ret; 
0x0000000042216f: mov [rdx+0x28], ecx; mov rax, [rdi+0x28]; mov [rax+0x20], rdx; add rsp, 0x8; ret; 
0x0000000042216e: mov [rdx+0x28], rcx; mov rax, [rdi+0x28]; mov [rax+0x20], rdx; add rsp, 0x8; ret; 
0x00000000453179: mov [rdx+0x2], al; lea rax, [rdx+0x2]; ret; 
0x000000004519c9: mov [rdx+0x2], al; mov rax, rdi; ret; 
0x000000004531d7: mov [rdx+0x3], eax; lea rax, [rdx+0x6]; ret; 
0x00000000451a07: mov [rdx+0x3], eax; mov rax, rdi; ret; 
0x000000004531a7: mov [rdx+0x4], al; lea rax, [rdx+0x4]; ret; 
0x000000004519e7: mov [rdx+0x4], al; mov rax, rdi; ret; 
0x000000004531b8: mov [rdx+0x4], ax; lea rax, [rdx+0x5]; ret; 
0x000000004519f8: mov [rdx+0x4], ax; mov rax, rdi; ret; 
0x000000004531b9: mov [rdx+0x4], eax; lea rax, [rdx+0x5]; ret; 
0x000000004519f9: mov [rdx+0x4], eax; mov rax, rdi; ret; 
0x000000004531e9: mov [rdx+0x5], eax; lea rax, [rdx+0x8]; ret; 
0x0000000045326b: mov [rdx+0x5], eax; lea rax, [rdx+0xc]; ret; 
0x00000000451a19: mov [rdx+0x5], eax; mov rax, rdi; ret; 
0x0000000045326a: mov [rdx+0x5], rax; lea rax, [rdx+0xc]; ret; 
0x00000000451a5a: mov [rdx+0x5], rax; mov rax, rdi; ret; 
0x00000000439134: mov [rdx+0x6], bh; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000453209: mov [rdx+0x6], eax; lea rax, [rdx+0x9]; ret; 
0x0000000045328b: mov [rdx+0x6], eax; lea rax, [rdx+0xd]; ret; 
0x00000000451a29: mov [rdx+0x6], eax; mov rax, rdi; ret; 
0x0000000045328a: mov [rdx+0x6], rax; lea rax, [rdx+0xd]; ret; 
0x00000000451a7a: mov [rdx+0x6], rax; mov rax, rdi; ret; 
0x00000000453229: mov [rdx+0x7], eax; lea rax, [rdx+0xa]; ret; 
0x000000004532ab: mov [rdx+0x7], eax; lea rax, [rdx+0xe]; ret; 
0x00000000451a39: mov [rdx+0x7], eax; mov rax, rdi; ret; 
0x000000004532aa: mov [rdx+0x7], rax; lea rax, [rdx+0xe]; ret; 
0x00000000451a9a: mov [rdx+0x7], rax; mov rax, rdi; ret; 
0x00000000453249: mov [rdx+0x8], eax; lea rax, [rdx+0xb]; ret; 
0x0000000045313b: mov [rdx+0x8], eax; lea rax, [rdx+0xf]; ret; 
0x0000000045198b: mov [rdx+0x8], eax; mov rax, rdi; ret; 
0x0000000046b79f: mov [rdx+0x8], eax; pop rbx; ret; 
0x0000000045313a: mov [rdx+0x8], rax; lea rax, [rdx+0xf]; ret; 
0x0000000045198a: mov [rdx+0x8], rax; mov rax, rdi; ret; 
0x0000000041b85d: mov [rdx+0xe0], ecx; pop rbx; ret; 
0x000000004189db: mov [rdx+0xe0], ecx; ret; 
0x0000000041b85c: mov [rdx+0xe0], rcx; pop rbx; ret; 
0x000000004189da: mov [rdx+0xe0], rcx; ret; 
0x00000000428ed0: mov [rdx+rcx], cs; add al, ch; xlat [rbx]; ret; 
0x0000000047b803: mov [rdx-0x8], edi; jmp qword ptr [rsi+0xf]; 
0x0000000045bf1d: mov [rdx], al; add [rax], al; mov rdi, [r15]; call rbx; 
0x00000000453152: mov [rdx], al; lea rax, [rdx]; ret; 
0x000000004519a2: mov [rdx], al; mov rax, rdi; ret; 
0x00000000453163: mov [rdx], ax; lea rax, [rdx+0x1]; ret; 
0x00000000453173: mov [rdx], ax; mov al, [rcx+0x2]; mov [rdx+0x2], al; lea rax, [rdx+0x2]; ret; 
0x000000004519c3: mov [rdx], ax; mov al, [rcx+0x2]; mov [rdx+0x2], al; mov rax, rdi; ret; 
0x000000004519b3: mov [rdx], ax; mov rax, rdi; ret; 
0x00000000453164: mov [rdx], eax; lea rax, [rdx+0x1]; ret; 
0x00000000453192: mov [rdx], eax; lea rax, [rdx+0x3]; ret; 
0x000000004530e4: mov [rdx], eax; lea rax, [rdx+0x7]; ret; 
0x00000000453174: mov [rdx], eax; mov al, [rcx+0x2]; mov [rdx+0x2], al; lea rax, [rdx+0x2]; ret; 
0x000000004519c4: mov [rdx], eax; mov al, [rcx+0x2]; mov [rdx+0x2], al; mov rax, rdi; ret; 
0x000000004531a2: mov [rdx], eax; mov al, [rcx+0x4]; mov [rdx+0x4], al; lea rax, [rdx+0x4]; ret; 
0x000000004519e2: mov [rdx], eax; mov al, [rcx+0x4]; mov [rdx+0x4], al; mov rax, rdi; ret; 
0x000000004531b2: mov [rdx], eax; mov ax, [rcx+0x4]; mov [rdx+0x4], ax; lea rax, [rdx+0x5]; ret; 
0x000000004519f2: mov [rdx], eax; mov ax, [rcx+0x4]; mov [rdx+0x4], ax; mov rax, rdi; ret; 
0x0000000048f5f8: mov [rdx], eax; mov eax, 0x1; ret; 
0x0000000048f787: mov [rdx], eax; mov eax, 0x2; ret; 
0x00000000459c92: mov [rdx], eax; mov eax, 0xffffffff; ret; 
0x000000004531d2: mov [rdx], eax; mov eax, [rcx+0x3]; mov [rdx+0x3], eax; lea rax, [rdx+0x6]; ret; 
0x00000000451a02: mov [rdx], eax; mov eax, [rcx+0x3]; mov [rdx+0x3], eax; mov rax, rdi; ret; 
0x000000004531e4: mov [rdx], eax; mov eax, [rcx+0x5]; mov [rdx+0x5], eax; lea rax, [rdx+0x8]; ret; 
0x00000000451a14: mov [rdx], eax; mov eax, [rcx+0x5]; mov [rdx+0x5], eax; mov rax, rdi; ret; 
0x00000000453204: mov [rdx], eax; mov eax, [rcx+0x6]; mov [rdx+0x6], eax; lea rax, [rdx+0x9]; ret; 
0x00000000451a24: mov [rdx], eax; mov eax, [rcx+0x6]; mov [rdx+0x6], eax; mov rax, rdi; ret; 
0x00000000453224: mov [rdx], eax; mov eax, [rcx+0x7]; mov [rdx+0x7], eax; lea rax, [rdx+0xa]; ret; 
0x00000000451a34: mov [rdx], eax; mov eax, [rcx+0x7]; mov [rdx+0x7], eax; mov rax, rdi; ret; 
0x00000000453244: mov [rdx], eax; mov eax, [rcx+0x8]; mov [rdx+0x8], eax; lea rax, [rdx+0xb]; ret; 
0x00000000451a44: mov [rdx], eax; mov eax, [rcx+0x8]; mov [rdx+0x8], eax; mov rax, rdi; ret; 
0x00000000459eca: mov [rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000453264: mov [rdx], eax; mov rax, [rcx+0x5]; mov [rdx+0x5], rax; lea rax, [rdx+0xc]; ret; 
0x00000000451a54: mov [rdx], eax; mov rax, [rcx+0x5]; mov [rdx+0x5], rax; mov rax, rdi; ret; 
0x00000000453284: mov [rdx], eax; mov rax, [rcx+0x6]; mov [rdx+0x6], rax; lea rax, [rdx+0xd]; ret; 
0x00000000451a74: mov [rdx], eax; mov rax, [rcx+0x6]; mov [rdx+0x6], rax; mov rax, rdi; ret; 
0x000000004532a4: mov [rdx], eax; mov rax, [rcx+0x7]; mov [rdx+0x7], rax; lea rax, [rdx+0xe]; ret; 
0x00000000451a94: mov [rdx], eax; mov rax, [rcx+0x7]; mov [rdx+0x7], rax; mov rax, rdi; ret; 
0x00000000453134: mov [rdx], eax; mov rax, [rcx+0x8]; mov [rdx+0x8], rax; lea rax, [rdx+0xf]; ret; 
0x00000000451984: mov [rdx], eax; mov rax, [rcx+0x8]; mov [rdx+0x8], rax; mov rax, rdi; ret; 
0x00000000451934: mov [rdx], eax; mov rax, rdi; ret; 
0x0000000048fdc1: mov [rdx], eax; pop rbx; ret; 
0x00000000420879: mov [rdx], eax; ret; 
0x000000004806b2: mov [rdx], eax; xor eax, eax; mov qword ptr [rip+0x4bc37], 0xffffffffffffffff; ret; 
0x0000000047d2cc: mov [rdx], ecx; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000490a37: mov [rdx], es; add al, ch; push rcx; sub bh, dh; call qword ptr [rax-0x5e1f00d]; 
0x00000000490a36: mov [rdx], es; add al, ch; push rcx; sub bh, dh; call qword ptr [rax-0x5e1f00d]; 
0x000000004530e3: mov [rdx], rax; lea rax, [rdx+0x7]; ret; 
0x000000004531e3: mov [rdx], rax; mov eax, [rcx+0x5]; mov [rdx+0x5], eax; lea rax, [rdx+0x8]; ret; 
0x00000000451a13: mov [rdx], rax; mov eax, [rcx+0x5]; mov [rdx+0x5], eax; mov rax, rdi; ret; 
0x00000000453203: mov [rdx], rax; mov eax, [rcx+0x6]; mov [rdx+0x6], eax; lea rax, [rdx+0x9]; ret; 
0x00000000451a23: mov [rdx], rax; mov eax, [rcx+0x6]; mov [rdx+0x6], eax; mov rax, rdi; ret; 
0x00000000453223: mov [rdx], rax; mov eax, [rcx+0x7]; mov [rdx+0x7], eax; lea rax, [rdx+0xa]; ret; 
0x00000000451a33: mov [rdx], rax; mov eax, [rcx+0x7]; mov [rdx+0x7], eax; mov rax, rdi; ret; 
0x00000000453243: mov [rdx], rax; mov eax, [rcx+0x8]; mov [rdx+0x8], eax; lea rax, [rdx+0xb]; ret; 
0x00000000451a43: mov [rdx], rax; mov eax, [rcx+0x8]; mov [rdx+0x8], eax; mov rax, rdi; ret; 
0x00000000453263: mov [rdx], rax; mov rax, [rcx+0x5]; mov [rdx+0x5], rax; lea rax, [rdx+0xc]; ret; 
0x00000000451a53: mov [rdx], rax; mov rax, [rcx+0x5]; mov [rdx+0x5], rax; mov rax, rdi; ret; 
0x00000000453283: mov [rdx], rax; mov rax, [rcx+0x6]; mov [rdx+0x6], rax; lea rax, [rdx+0xd]; ret; 
0x00000000451a73: mov [rdx], rax; mov rax, [rcx+0x6]; mov [rdx+0x6], rax; mov rax, rdi; ret; 
0x000000004532a3: mov [rdx], rax; mov rax, [rcx+0x7]; mov [rdx+0x7], rax; lea rax, [rdx+0xe]; ret; 
0x00000000451a93: mov [rdx], rax; mov rax, [rcx+0x7]; mov [rdx+0x7], rax; mov rax, rdi; ret; 
0x00000000453133: mov [rdx], rax; mov rax, [rcx+0x8]; mov [rdx+0x8], rax; lea rax, [rdx+0xf]; ret; 
0x00000000451983: mov [rdx], rax; mov rax, [rcx+0x8]; mov [rdx+0x8], rax; mov rax, rdi; ret; 
0x00000000451933: mov [rdx], rax; mov rax, rdi; ret; 
0x0000000048fdc0: mov [rdx], rax; pop rbx; ret; 
0x00000000420878: mov [rdx], rax; ret; 
0x0000000047d2cb: mov [rdx], rcx; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000049b8f4: mov [rip+0x306d6], ebx; test rbx, rbx; jne short 0x000000000049b8e0; pop rbx; ret; 
0x0000000049b8f3: mov [rip+0x306d6], rbx; test rbx, rbx; jne short 0x000000000049b8e0; pop rbx; ret; 
0x0000000048f838: mov [rip+0x3cb4a], eax; ret; 
0x0000000048f837: mov [rip+0x3cb4a], rax; ret; 
0x0000000048f821: mov [rip+0x3cb61], eax; add rsp, 0x8; ret; 
0x0000000048f820: mov [rip+0x3cb61], rax; add rsp, 0x8; ret; 
0x0000000048a2b9: mov [rip+0x42411], eax; ret; 
0x0000000048a2b8: mov [rip+0x42411], rax; ret; 
0x00000000480694: mov [rip+0x4bc5e], eax; cmp rdi, rax; ja short 0x00000000004806c8; xor eax, eax; ret; 
0x00000000480693: mov [rip+0x4bc5e], rax; cmp rdi, rax; ja short 0x00000000004806c8; xor eax, eax; ret; 
0x0000000046dae1: mov [rip+0x5d2c9], eax; mov [rip+0x5d2ca], rdx; cmp fs:[rdi], rsi; je short 0x000000000046daf8; ret; 
0x0000000046dae0: mov [rip+0x5d2c9], rax; mov [rip+0x5d2ca], rdx; cmp fs:[rdi], rsi; je short 0x000000000046daf8; ret; 
0x0000000046dae8: mov [rip+0x5d2ca], edx; cmp fs:[rdi], rsi; je short 0x000000000046daf8; ret; 
0x0000000046dae7: mov [rip+0x5d2ca], rdx; cmp fs:[rdi], rsi; je short 0x000000000046daf8; ret; 
0x0000000045f0ba: mov [rip+0x699e0], eax; pop rbx; ret; 
0x0000000045fe3d: mov [rip+0x6cd71], eax; ret; 
0x0000000045fe0d: mov [rip+0x6cda1], eax; ret; 
0x0000000045fddc: mov [rip+0x6cdd2], eax; pop rbx; ret; 
0x0000000045fd9d: mov [rip+0x6ce11], eax; ret; 
0x0000000045fd6d: mov [rip+0x6ce41], eax; ret; 
0x0000000045fd3c: mov [rip+0x6ce72], eax; pop rbx; ret; 
0x0000000045d3fd: mov [rip+0x6d04d], eax; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000045d3fc: mov [rip+0x6d04d], rax; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000426840: mov [rip+0xa32fa], eax; ret; 
0x0000000042683f: mov [rip+0xa32fa], rax; ret; 
0x00000000426832: mov [rip+0xa3310], eax; lea rax, [rip-0xc6f]; mov [rip+0xa32fa], rax; ret; 
0x00000000426831: mov [rip+0xa3310], rax; lea rax, [rip-0xc6f]; mov [rip+0xa32fa], rax; ret; 
0x00000000422a36: mov [rip+0xa7104], eax; ret; 
0x00000000422a35: mov [rip+0xa7104], rax; ret; 
0x00000000422a28: mov [rip+0xa711a], eax; lea rax, [rip+0x319b]; mov [rip+0xa7104], rax; ret; 
0x00000000422a27: mov [rip+0xa711a], rax; lea rax, [rip+0x319b]; mov [rip+0xa7104], rax; ret; 
0x00000000421ad2: mov [rip+0xa8014], eax; ret; 
0x00000000421aac: mov [rip+0xa801e], eax; ret; 
0x00000000421aab: mov [rip+0xa801e], rax; ret; 
0x00000000421a83: mov [rip+0xa803f], eax; ret; 
0x00000000421a82: mov [rip+0xa803f], rax; ret; 
0x00000000421a63: mov [rip+0xa8057], eax; ret; 
0x00000000421a62: mov [rip+0xa8057], rax; ret; 
0x00000000421759: mov [rip+0xa83c9], eax; ret; 
0x00000000421758: mov [rip+0xa83c9], rax; ret; 
0x00000000421742: mov [rip+0xa83d8], eax; ret; 
0x00000000421741: mov [rip+0xa83d8], rax; ret; 
0x00000000421728: mov [rip+0xa83e2], edx; ret; 
0x00000000421727: mov [rip+0xa83e2], rdx; ret; 
0x000000004216e9: mov [rip+0xa83e9], eax; ret; 
0x000000004216e8: mov [rip+0xa83e9], rax; ret; 
0x000000004216d9: mov [rip+0xa8401], eax; ret; 
0x000000004216d8: mov [rip+0xa8401], rax; ret; 
0x00000000421b16: mov [rip+0xaa55c], eax; ret; 
0x00000000421b15: mov [rip+0xaa55c], rax; ret; 
0x00000000421ae8: mov [rip+0xaa586], eax; ret; 
0x00000000420c40: mov [rip+0xab3b2], ebx; add dword ptr [rip+0xab3a7], 0x1; pop rbx; ret; 
0x00000000420c3f: mov [rip+0xab3b2], rbx; add dword ptr [rip+0xab3a7], 0x1; pop rbx; ret; 
0x0000000040221e: mov [rip+0xc9f3c], eax; add rsp, 0x88; pop rbx; ret; 
0x0000000040221d: mov [rip+0xc9f3c], rax; add rsp, 0x88; pop rbx; ret; 
0x00000000415204: mov [rip-0x76bc0000], al; ror byte ptr [rcx-0x4ef73], 0x1; jmp far fword ptr [rcx]; 
0x00000000402f02: mov [rsi+0x10], esi; syscall; 
0x00000000402f01: mov [rsi+0x10], rsi; syscall; 
0x00000000402f00: mov [rsi+0x10], rsi; syscall; 
0x00000000402ef6: mov [rsi+0x8], eax; mov eax, 0x9e; mov [rsi], rsi; mov [rsi+0x10], rsi; syscall; 
0x00000000402ef5: mov [rsi+0x8], rax; mov eax, 0x9e; mov [rsi], rsi; mov [rsi+0x10], rsi; syscall; 
0x00000000456579: mov [rsi-0x2], cx; ret; 
0x0000000045657a: mov [rsi-0x2], ecx; ret; 
0x0000000045656d: mov [rsi-0x4], ecx; ret; 
0x00000000498ba2: mov [rsi], eax; mov rax, [rdi+0x98]; ret; 
0x0000000048a426: mov [rsi], eax; ret; 
0x00000000489725: mov [rsi], edi; mov rax, r8; ret; 
0x00000000437f28: mov [rsi], es; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000402eff: mov [rsi], esi; mov [rsi+0x10], rsi; syscall; 
0x0000000048a425: mov [rsi], rax; ret; 
0x00000000489724: mov [rsi], rdi; mov rax, r8; ret; 
0x00000000402efe: mov [rsi], rsi; mov [rsi+0x10], rsi; syscall; 
0x0000000042414e: mov [rsp+0x10], eax; call rax; 
0x00000000419a54: mov [rsp+0x10], ecx; xor edx, edx; mov rdi, r15; call qword ptr [r14+0x80]; 
0x00000000499598: mov [rsp+0x10], edx; call rax; 
0x00000000499597: mov [rsp+0x10], r10; call rax; 
0x0000000042414d: mov [rsp+0x10], r8; call rax; 
0x00000000419a53: mov [rsp+0x10], rcx; xor edx, edx; mov rdi, r15; call qword ptr [r14+0x80]; 
0x00000000424149: mov [rsp+0x18], edx; mov [rsp+0x10], r8; call rax; 
0x00000000424148: mov [rsp+0x18], r10; mov [rsp+0x10], r8; call rax; 
0x0000000045a785: mov [rsp+0x20], eax; cmp esi, 0x9; je short 0x000000000045a7b8; mov eax, 0x48; syscall; 
0x0000000045a784: mov [rsp+0x20], rax; cmp esi, 0x9; je short 0x000000000045a7b8; mov eax, 0x48; syscall; 
0x000000004805ca: mov [rsp+0x28], eax; xor eax, eax; mov rdx, rsp; mov eax, 0x10; syscall; 
0x000000004805c9: mov [rsp+0x28], rax; xor eax, eax; mov rdx, rsp; mov eax, 0x10; syscall; 
0x0000000045c07e: mov [rsp+0x8], eax; mov rdi, [r8]; call rbx; 
0x00000000419aaf: mov [rsp+0x8], ecx; mov rdi, r15; call rax; 
0x0000000045c07d: mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x00000000419aae: mov [rsp+0x8], rcx; mov rdi, r15; call rax; 
0x00000000419aad: mov [rsp+0x8], rcx; mov rdi, r15; call rax; 
0x00000000458081: mov [rsp+rbx*8-0x3d], dh; nop [rax]; xor eax, eax; ret; 
0x00000000424169: mov [rsp], eax; call rdx; 
0x0000000041ccec: mov [rsp], eax; mov edx, 0x1; mov rdi, rbp; call qword ptr [rax+0x80]; 
0x0000000041cd29: mov [rsp], eax; mov rdx, r8; mov rsi, r12; mov rdi, rbp; call qword ptr [rax+0x78]; 
0x0000000041c090: mov [rsp], ecx; mov rdi, rbp; call rax; 
0x0000000047e9d2: mov [rsp], esi; pop r12; pop r13; pop r14; ret; 
0x0000000041cceb: mov [rsp], r8; mov edx, 0x1; mov rdi, rbp; call qword ptr [rax+0x80]; 
0x0000000041cd28: mov [rsp], r8; mov rdx, r8; mov rsi, r12; mov rdi, rbp; call qword ptr [rax+0x78]; 
0x00000000424168: mov [rsp], rax; call rdx; 
0x0000000041c08e: mov [rsp], rcx; mov rdi, rbp; call rax; 
0x0000000041c08f: mov [rsp], rcx; mov rdi, rbp; call rax; 
0x00000000497d70: mov ah, 0x4c; add eax, esp; notrack jmp rax; 
0x0000000042a2d8: mov ah, 0x4e; add [rax], eax; lea rdx, [rip+0x170fd]; cmovne rax, rdx; ret; 
0x00000000435548: mov ah, 0x6; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004033b1: mov ah, 0x9; add [rax+0x63], cl; add al, 0x82; add rax, rdx; notrack jmp rax; 
0x00000000453608: mov ah, 0xe3; add al, 0x0; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000430260: mov ah, [rsi+0xf]; je short 0x0000000000430226; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000443630: mov ah, [rsi+0xf]; je short 0x00000000004435f6; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000044b450: mov ah, [rsi+0xf]; je short 0x000000000044b416; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000496a1b: mov al, 0x0; add [rax], al; add rsp, 0x8; ret; 
0x00000000498c17: mov al, 0x0; add [rax], al; ret; 
0x0000000045bfd1: mov al, 0x2; add [rax], al; mov rdi, [r15]; call rbx; 
0x0000000045a9dc: mov al, 0x2d; add [rax], al; endbr64; xor eax, eax; syscall; 
0x0000000044688e: mov al, 0x5; add [rdi+0x63], cl; or al, 0x8a; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000423352: mov al, 0x80; add [rax], al; add [rsi-0x77], ah; psubsw mm2, [rsi+rdi*8-0x1]; call qword ptr [rax-0x2bc272b8]; 
0x0000000047efdc: mov al, 0x8; add [rax], al; cmove rax, rdx; ret; 
0x0000000044f2ef: mov al, 0xc5; std; xlat [rbx]; ret; 
0x00000000458281: mov al, 0xfa; jmp qword ptr [rsi+0x2e]; 
0x00000000426a7c: mov al, 0xff; call qword ptr [rax+0x1bac031]; 
0x0000000047d5b7: mov al, [0x30788348000000]; je short 0x000000000047d5c8; ret; 
0x00000000498bc7: mov al, [0x401f0fc3000000]; endbr64; mov rax, [rdi+0xb8]; ret; 
0x0000000041a175: mov al, [0x485def8948000000]; mov eax, [rax+0xe0]; mov rax, [rax+0x20]; jmp rax; 
0x0000000047ddc9: mov al, [0x48c0ef0f66000000]; mov dword ptr [rax+0x50], 0x0; movups [rax+0x40], xmm0; pop rbx; ret; 
0x0000000041fc03: mov al, [0x48ffffffff000000]; mov dword ptr [rdi+0xa8], 0x0; ret; 
0x0000000049ce38: mov al, [0x5be075db8548fff8]; pop rbp; pop r12; ret; 
0x00000000411047: mov al, [0x6418244c8b480000]; xor rcx, [0x28]; jne short 0x0000000000411062; add rsp, 0xd8; ret; 
0x0000000049cb8b: mov al, [0x68c0c2c748ffffff]; add [rcx], r14b; jmp qword ptr [rax+rcx*2-0x75]; 
0x00000000456d4a: mov al, [0x77f8c5237f7ec1c4]; ret; 
0x00000000474424: mov al, [0x8304768b41000000]; ret; 
0x00000000474450: mov al, [0x8324348b41000000]; ret; 
0x00000000475a03: mov al, [0x852c8d4c000000]; add [rax], al; add [rax+0x29], cl; ret; 
0x0000000047d54e: mov al, [0x8944fff9e12be890]; dec byte ptr [rax-0x77]; out dx, eax; call qword ptr [r14+0x18]; 
0x0000000048fd21: mov al, [0x8d4808438b000000]; adc eax, 0x29741; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000436b50: mov al, [0x8d49931463490006]; adc al, 0x13; notrack jmp rdx; 
0x00000000414e7c: mov al, [0x984820e883000b18]; movzx eax, byte ptr [rbx+rax]; jmp qword ptr [rsi+rax*8]; 
0x000000004199fc: mov al, [0xaf20c5c749000005]; add [rax-0x39], r9b; ret; 
0x000000004189d6: mov al, [0xe08a8948000000]; add [rax], al; ret; 
0x00000000403ebd: mov al, [0xfff868e9ffffffff]; jmp qword ptr [rbx+rcx*4+0x4]; 
0x00000000453176: mov al, [rcx+0x2]; mov [rdx+0x2], al; lea rax, [rdx+0x2]; ret; 
0x000000004519c6: mov al, [rcx+0x2]; mov [rdx+0x2], al; mov rax, rdi; ret; 
0x000000004531a4: mov al, [rcx+0x4]; mov [rdx+0x4], al; lea rax, [rdx+0x4]; ret; 
0x000000004519e4: mov al, [rcx+0x4]; mov [rdx+0x4], al; mov rax, rdi; ret; 
0x00000000453150: mov al, [rcx]; mov [rdx], al; lea rax, [rdx]; ret; 
0x000000004519a0: mov al, [rcx]; mov [rdx], al; mov rax, rdi; ret; 
0x00000000432590: mov al, [rdi+rdx-0x1]; mov cl, [rsi+rdx-0x1]; sub eax, ecx; ret; 
0x00000000448eee: mov al, [rip+0xc634f00]; mov cl, [rdi-0x73]; adc al, 0xa; notrack jmp r10; 
0x00000000438116: mov al, [rsi]; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004451d0: mov al, ch; stc; je short 0x0000000000445196; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000044d410: mov al, ch; stc; je short 0x000000000044d3d6; lea r10, [r10+r9]; notrack jmp r10; 
0x000000004531b4: mov ax, [rcx+0x4]; mov [rdx+0x4], ax; lea rax, [rdx+0x5]; ret; 
0x000000004519f4: mov ax, [rcx+0x4]; mov [rdx+0x4], ax; mov rax, rdi; ret; 
0x00000000453160: mov ax, [rcx]; mov [rdx], ax; lea rax, [rdx+0x1]; ret; 
0x000000004519b0: mov ax, [rcx]; mov [rdx], ax; mov rax, rdi; ret; 
0x000000004542a1: mov bh, 0x16; mov [rdi], dx; lea rax, [rdi+0x1]; vzeroupper; ret; 
0x0000000043be51: mov bh, 0x16; mov [rdi], dx; ret; 
0x00000000450081: mov bh, 0x16; mov [rdi], dx; vzeroupper; ret; 
0x00000000456866: mov bh, 0x36; mov [rdi+rdx-0x2], cx; mov [rdi], si; ret; 
0x00000000482144: mov bh, 0x3d; ret; 
0x00000000454428: mov bh, 0x48; lea eax, [rdi+0x7]; ret; 
0x0000000049a471: mov bh, 0x5d; and [rsi-0x9], ah; ret; 
0x000000004352a8: mov bh, 0x6; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004139a9: mov bh, 0x8d; pop rsp; idiv edi; jmp qword ptr [rsi-0x77]; 
0x0000000041a14f: mov bh, 0x90; add [rax], al; add cl, ch; ret far; 
0x000000004585f5: mov bh, 0xc; add [rax], al; lea rdx, [rip+0xa90]; cmovne rax, rdx; ret; 
0x00000000450091: mov bh, 0xe; mov [rdi], cx; mov byte ptr [rdi+0x2], 0x0; vzeroupper; ret; 
0x00000000457b1e: mov bh, 0xfa; jmp qword ptr [rsi+0x66]; 
0x0000000045deb2: mov bh, 0xff; jmp qword ptr [rsi+0x66]; 
0x000000004197c3: mov bh, [rbp-0x2]; jmp qword ptr [rsi+0xf]; 
0x0000000042904f: mov bh, bh; jmp qword ptr [rsi+0xf]; 
0x0000000046a871: mov bh, cl; jmp qword ptr [rsi+0x2e]; 
0x00000000455d1e: mov bl, 0x0; add [rax], al; xor eax, eax; ret; 
0x0000000047c8b6: mov bl, 0x4d; clc; jmp qword ptr [rsi+0xf]; 
0x0000000045c643: mov bl, 0x5; add [rax], al; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x00000000435698: mov bl, 0x6; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000435697: mov bl, 0x6; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000420c43: mov bl, 0xa; add [rbx+0xab3a705], al; add [rcx], al; pop rbx; ret; 
0x00000000420c49: mov bl, 0xa; add [rcx], al; pop rbx; ret; 
0x00000000420c9f: mov bl, 0xa; add [rcx], al; ret; 
0x00000000479509: mov bl, 0xdc; add al, 0x0; jmp qword ptr [rcx+rax*8]; 
0x000000004266d1: mov bl, [rcx+0xa]; add [rcx], al; pop rbx; ret; 
0x0000000045d8fe: mov byte ptr [rax+0x28], 0x1; ret; 
0x00000000455937: mov byte ptr [rax+0x75], 0xc5; movzx eax, byte ptr [rdi-0x9]; movzx edx, byte ptr [rsi-0x9]; sub eax, edx; ret; 
0x00000000462d07: mov byte ptr [rax-0x7c], 0xf6; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x0000000041439c: mov byte ptr [rbp-0x508], 0x20; mov [rbp-0x4f8], rsi; jmp rax; 
0x0000000047eb36: mov byte ptr [rcx], 0x0; add [rax+0xf], cl; mov ebp, 0xf80148c0; ret; 
0x0000000045d892: mov byte ptr [rdi+0x28], 0x1; ret; 
0x000000004542b6: mov byte ptr [rdi+0x2], 0x0; lea rax, [rdi+0x2]; vzeroupper; ret; 
0x00000000450096: mov byte ptr [rdi+0x2], 0x0; vzeroupper; ret; 
0x0000000046c650: mov byte ptr [rdi], 0x0; add rsp, 0x8; pop rbx; pop r14; ret; 
0x00000000454221: mov byte ptr [rdi], 0x0; lea rax, [rdi]; vzeroupper; ret; 
0x00000000450001: mov byte ptr [rdi], 0x0; vzeroupper; ret; 
0x0000000042a07b: mov byte ptr [rdx], 0x0; lea rax, [rip+0x2c75b]; cmove rax, rdx; ret; 
0x00000000497314: mov byte ptr [rip+0x351b5], 0x8; ret; 
0x0000000049730d: mov byte ptr [rip+0x351bb], 0x8; mov byte ptr [rip+0x351b5], 0x8; ret; 
0x00000000497306: mov byte ptr [rip+0x351c1], 0x8; mov byte ptr [rip+0x351bb], 0x8; mov byte ptr [rip+0x351b5], 0x8; ret; 
0x000000004972ff: mov byte ptr [rip+0x351c7], 0x8; mov byte ptr [rip+0x351c1], 0x8; mov byte ptr [rip+0x351bb], 0x8; mov byte ptr [rip+0x351b5], 0x8; ret; 
0x000000004451ca: mov byte ptr [rip+0xc634f00], 0x8a; vpcmpeqb xmm0, xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000401d5a: mov byte ptr [rip+0xc987f], 0x1; pop rbp; ret; 
0x0000000043438a: mov byte ptr [rsi], 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004137ab: mov ch, 0x0; idiv edi; jmp far fword ptr [rcx]; 
0x0000000047db87: mov ch, 0x1; add [rax], al; mov rdi, r13; call qword ptr [r14+0x20]; 
0x0000000045bca7: mov ch, 0x2; add [rax], al; mov rdi, [r14]; call rbx; 
0x0000000041035d: mov ch, 0x4c; add [rax+0x39], cl; ret; 
0x00000000410356: mov ch, 0x4c; add [rax-0x39], cl; rcl al, 0xb5; add [rax+0x39], r9b; ret; 
0x00000000433746: mov ch, 0x6; add [rax], al; xor eax, eax; ret; 
0x00000000435495: mov ch, 0x6; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000049b8ae: mov ch, 0xf8; call far fword ptr [rbx+0x4c]; 
0x0000000049b87d: mov ch, 0xf8; dec dword ptr [rax-0x7d]; ret; 
0x000000004265c2: mov ch, 0xff; jmp qword ptr [rsi+0x66]; 
0x0000000047fa80: mov ch, dh; and ch, 0xf; je short 0x000000000047faa0; add rax, 0x2; ret; 
0x000000004205fb: mov cl, 0x0; add [rax], al; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [r13+0x18]; 
0x00000000410741: mov cl, 0x15; leave; ret; 
0x00000000497d33: mov cl, 0x4c; add eax, ecx; notrack jmp rax; 
0x0000000046b7db: mov cl, 0x7a; stc; call qword ptr [rax-0x5e1f00d]; 
0x0000000049348b: mov cl, 0x97; add eax, [rax]; mov edi, 0x3005; mov eax, 0x9e; syscall; 
0x000000004466eb: mov cl, 0xe8; add eax, 0x91148b00; mov eax, [rcx+rax*4]; sub eax, edx; ret; 
0x0000000046815a: mov cl, 0xf9; dec dword ptr [rcx-0x77]; ret far; 
0x00000000401bf4: mov cl, [rax+0x1]; sar byte ptr [rsi], 0x1; jmp rax; 
0x000000004163af: mov cl, [rax]; add cl, ch; jmp rsp; 
0x00000000441395: mov cl, [rbx-0x37d67dfc]; ret; 
0x0000000046cebc: mov cl, [rcx+0x1]; sar byte ptr [rsi], 0x1; jmp r8; 
0x0000000042a4c4: mov cl, [rdi-0x73]; adc al, 0xa; notrack jmp r10; 
0x00000000432594: mov cl, [rsi+rdx-0x1]; sub eax, ecx; ret; 
0x0000000043eba4: mov cl, [rsi]; mov [rdi], cl; ret; 
0x0000000047fa6b: mov cl, dl; and cl, 0xf; je short 0x000000000047fa90; ret; 
0x0000000043eb91: mov cx, [rcx-0x2]; mov [rdi], si; mov [r9-0x2], cx; ret; 
0x0000000043eb92: mov cx, [rcx-0x2]; mov [rdi], si; mov [r9-0x2], cx; ret; 
0x00000000453dd4: mov cx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], cx; lea rax, [rdi+0x11]; ret; 
0x00000000453734: mov cx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], cx; ret; 
0x00000000453818: mov cx, [rsi+0x18]; movdqu [rdi], xmm0; mov [rdi+0x10], rdx; mov [rdi+0x18], cx; ret; 
0x00000000435e84: mov cx, [rsi-0x2]; mov [rdi-0x3], dx; mov [rdi-0x2], cx; ret; 
0x0000000043bde4: mov cx, [rsi]; mov [rdi+0x1], dx; mov [rdi], cx; ret; 
0x00000000453c70: mov cx, [rsi]; mov [rdi], cx; mov [rdi+0x2], dh; lea rax, [rdi+0x2]; ret; 
0x00000000453640: mov cx, [rsi]; mov [rdi], cx; mov [rdi+0x2], dh; ret; 
0x0000000041eef1: mov dh, 0x0; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000420d24: mov dh, 0x0; ret; 
0x0000000040f6e9: mov dh, 0x11; test dl, dl; jne short 0x000000000040f6c8; ret; 
0x00000000428881: mov dh, 0x14; add [rax+rdi-0x3e], eax; jne short 0x0000000000428870; sub rax, 0x10; ret; 
0x00000000414c37: mov dh, 0x14; add ecx, [rax-0x73]; add eax, 0xb19df; jmp qword ptr [rax+rdx*8]; 
0x00000000414a34: mov dh, 0x14; add ecx, [rax-0x73]; add eax, 0xb1ae2; jmp qword ptr [rax+rdx*8]; 
0x0000000043bec1: mov dh, 0x16; mov [rdi], dl; ret; 
0x000000004320e5: mov dh, 0x16; sub eax, edx; ret; 
0x0000000041ee51: mov dh, 0x2; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000041f2f7: mov dh, 0x36; lea r15, [r14+0x1]; mov rdi, r12; call qword ptr [rbx+0x18]; 
0x00000000468155: mov dh, 0x3; add al, ch; xor esi, [rcx-0x76b60007]; ret far; 
0x00000000406843: mov dh, 0x43; add [rax-0x7d], ecx; ret; 
0x0000000049d031: mov dh, 0x44; and al, 0xf; add rsp, 0x10; pop rbx; ret; 
0x0000000048bcfe: mov dh, 0x45; add cl, [rax-0x7d]; ret; 
0x0000000048bef4: mov dh, 0x45; add ecx, [rax-0x7d]; ret; 
0x00000000411dac: mov dh, 0x46; or al, 0x83; ret; 
0x000000004558f1: mov dh, 0x47; cmc; movzx edx, byte ptr [rsi-0xb]; sub eax, edx; ret; 
0x000000004336c1: mov dh, 0x47; dec dword ptr [rdi]; mov dh, 0x4e; jmp far fword ptr [rcx]; 
0x00000000433474: mov dh, 0x47; dec dword ptr [rdi]; mov dh, 0x56; jmp far fword ptr [rcx]; 
0x000000004558e1: mov dh, 0x47; hlt; movzx edx, byte ptr [rsi-0xc]; sub eax, edx; ret; 
0x000000004558d1: mov dh, 0x47; movzx edx, byte ptr [rsi-0xd]; sub eax, edx; ret; 
0x000000004558c1: mov dh, 0x47; movzx edx, byte ptr [rsi-0xe]; sub eax, edx; ret; 
0x000000004657e7: mov dh, 0x48; dec dword ptr [rax+0x3948074a]; ret; 
0x00000000479503: mov dh, 0x4; add cl, [rax-0x73]; or eax, 0x4dcb3; jmp qword ptr [rcx+rax*8]; 
0x00000000479b21: mov dh, 0x4; add cl, [rcx-0x77]; ret far; 
0x000000004145e5: mov dh, 0x4; add ecx, [rax-0x75]; add al, 0xc6; jmp rax; 
0x00000000410a11: mov dh, 0x4b; add [rax-0x7d], ecx; ret; 
0x000000004336c5: mov dh, 0x4e; jmp far fword ptr [rcx]; 
0x00000000406861: mov dh, 0x53; add [rax-0x7d], ecx; ret; 
0x00000000497994: mov dh, 0x53; add cl, [rax-0x7d]; ret; 
0x0000000042cf86: mov dh, 0x54; cmp ah, [rax]; sub eax, edx; vzeroupper; ret; 
0x000000004558f5: mov dh, 0x56; cmc; sub eax, edx; ret; 
0x000000004558e5: mov dh, 0x56; hlt; sub eax, edx; ret; 
0x00000000433478: mov dh, 0x56; jmp far fword ptr [rcx]; 
0x000000004558d5: mov dh, 0x56; sub eax, edx; ret; 
0x000000004558c5: mov dh, 0x56; sub eax, edx; ret; 
0x00000000471df8: mov dh, 0x58; or al, 0x89; fdiv st, st(6); ret; 
0x00000000470755: mov dh, 0x58; or al, 0xf6; ret; 
0x00000000435346: mov dh, 0x6; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000405118: mov dh, 0x78; add eax, [rax-0x80]; jmp qword ptr [rcx+rax*2+0xf]; 
0x000000004325a1: mov dh, 0x7; movzx ecx, byte ptr [rsi]; sub eax, ecx; ret; 
0x000000004320e2: mov dh, 0x7; movzx edx, byte ptr [rsi]; sub eax, edx; ret; 
0x0000000042b874: mov dh, 0x7; sub eax, ecx; ret; 
0x00000000431584: mov dh, 0x7; sub eax, ecx; vzeroupper; ret; 
0x000000004607eb: mov dh, 0xc0; add eax, 0x1; push rax; call rbx; 
0x00000000480596: mov dh, 0xc0; add rsp, 0x58; ret; 
0x0000000041d8a3: mov dh, 0xc0; movsxd rax, [r10+rax*4]; add rax, r10; notrack jmp rax; 
0x0000000041d8d5: mov dh, 0xc0; movsxd rax, [r11+rax*4]; add rax, r11; notrack jmp rax; 
0x00000000497bb5: mov dh, 0xc0; movsxd rax, [r13+rax*4]; add rax, r13; notrack jmp rax; 
0x00000000496872: mov dh, 0xc0; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x000000004176e8: mov dh, 0xc0; movsxd rax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x00000000493ef1: mov dh, 0xc0; neg eax; ret; 
0x0000000048fbae: mov dh, 0xc0; pop rbx; pop rbp; pop r12; ret; 
0x00000000432105: mov dh, 0xc0; sar rdx, cl; movzx edx, dl; sub eax, edx; ret; 
0x00000000457a31: mov dh, 0xc1; pop rbx; ret; 
0x0000000041dff4: mov dh, 0xc3; pop rbx; pop rbp; pop r12; ret; 
0x000000004574f2: mov dh, 0xc6; mov rdx, rdi; rep stosb [rdi]; mov rax, rdx; ret; 
0x00000000462d06: mov dh, 0xc6; test sil, sil; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x00000000479928: mov dh, 0xc; add cl, [rax-0x73]; add eax, 0x4d78e; jmp qword ptr [rax+rcx*8]; 
0x00000000479747: mov dh, 0xc; add cl, [rax-0x73]; add eax, 0x4d86f; jmp qword ptr [rax+rcx*8]; 
0x0000000041547b: mov dh, 0xc; add ecx, [rax-0x73]; add eax, 0xb0d9b; mov rax, [rax+rcx*8]; jmp rax; 
0x000000004149cb: mov dh, 0xc; add ecx, [rax-0x73]; add eax, 0xb1a4b; mov rax, [rax+rcx*8]; jmp rax; 
0x0000000040f1aa: mov dh, 0xd2; movsxd r10, [r11+r10*4]; add r10, r11; notrack jmp r10; 
0x0000000043210b: mov dh, 0xd2; sub eax, edx; ret; 
0x0000000045683d: mov dh, 0xe; mov [rdi], cl; ret; 
0x0000000042b871: mov dh, 0xe; movzx eax, byte ptr [rdi]; sub eax, ecx; ret; 
0x00000000431581: mov dh, 0xe; movzx eax, byte ptr [rdi]; sub eax, ecx; vzeroupper; ret; 
0x000000004325a4: mov dh, 0xe; sub eax, ecx; ret; 
0x0000000047f145: mov dh, 0xf3; call rbp; 
0x00000000497d6b: mov dh, 0xf6; movsxd rax, [r12+rsi*4]; add rax, r12; notrack jmp rax; 
0x00000000497d2e: mov dh, 0xf6; movsxd rax, [r9+rsi*4]; add rax, r9; notrack jmp rax; 
0x000000004264e4: mov dh, 0xff; jmp qword ptr [rsi+0xf]; 
0x000000004932f2: mov dh, 0xff; nop [rax]; add rsp, 0x8; ret; 
0x0000000046cdca: mov dl, 0x5; add [rax], al; xchg ax, ax; ret; 
0x00000000435736: mov dl, 0x6; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000045c1c0: mov dl, 0x7; add [rax], al; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x00000000475d8b: mov dl, 0x8; add [rax], al; movsxd rax, [r14+rax*4]; add rax, r14; notrack jmp rax; 
0x00000000420c42: mov dl, 0xb3; or al, [rax]; add dword ptr [rip+0xab3a7], 0x1; pop rbx; ret; 
0x0000000049cf2a: mov dl, 0xf3; add al, [rax]; syscall; 
0x00000000492573: mov dl, 0xfc; call qword ptr [rax+0x44b04d8b]; 
0x00000000435ac0: mov dl, [rsi-0x1]; mov [rdi-0x1], dl; ret; 
0x00000000421a43: mov dword ptr [r11+0x14], 0x0; ret; 
0x00000000410245: mov dword ptr [rax+0x10], 0x0; mov esi, ebp; ror rdx, 0x11; xor rdx, fs:[0x30]; call rdx; 
0x0000000047ddd2: mov dword ptr [rax+0x50], 0x0; movups [rax+0x40], xmm0; pop rbx; ret; 
0x0000000041fa75: mov dword ptr [rax+0x8], 0x0; movdqa xmm0, [rip+0x7fa8c]; mov dword ptr [rdi+0xc0], 0xffffffff; movups [rdi+0xa0], xmm0; ret; 
0x0000000041f9e5: mov dword ptr [rax+0x8], 0x0; movdqa xmm0, [rip+0x7fb1c]; mov dword ptr [rdi+0xc0], 0xffffffff; movups [rdi+0xa0], xmm0; ret; 
0x0000000041fb45: mov dword ptr [rax+0x8], 0x0; ret; 
0x0000000041bedd: mov dword ptr [rax+rax], 0x748d4800; and al, 0x10; mov rdi, rbp; call qword ptr [rax+0x90]; 
0x00000000431fa9: mov dword ptr [rax-0x15000000], 0xbc0ff3d0; ror byte ptr [rax+0x1], 0xf8; vzeroupper; ret; 
0x0000000041fb3e: mov dword ptr [rax], 0x0; mov qword ptr [rax+0x8], 0x0; ret; 
0x0000000048fd9d: mov dword ptr [rax], 0x0; mov rdx, [rdi+0x458]; mov [rax], rdx; pop rbx; ret; 
0x00000000459ca8: mov dword ptr [rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000045abf0: mov dword ptr [rax], 0x16; mov rax, 0xffffffffffffffff; ret; 
0x00000000418a14: mov dword ptr [rax], 0x89480000; ret; 
0x00000000425d9b: mov dword ptr [rax], 0xc; add rsp, 0x10; mov rax, r8; pop rbp; ret; 
0x000000004806d0: mov dword ptr [rax], 0xc; mov eax, 0xffffffff; ret; 
0x000000004248eb: mov dword ptr [rax], 0xc; mov rax, r8; ret; 
0x000000004788a9: mov dword ptr [rbp-0x4c8], 0x0; mov dword ptr [rbp-0x4f0], 0x20; jmp rax; 
0x00000000479bb6: mov dword ptr [rbp-0x4d0], 0x1; mov r9d, 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000047995e: mov dword ptr [rbp-0x4d0], 0x1; mov rax, [rax+rsi*8]; jmp rax; 
0x00000000478ae1: mov dword ptr [rbp-0x4d0], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x00000000414392: mov dword ptr [rbp-0x4e0], 0x0; mov byte ptr [rbp-0x508], 0x20; mov [rbp-0x4f8], rsi; jmp rax; 
0x00000000479b2e: mov dword ptr [rbp-0x4e0], 0x1; mov dword ptr [rbp-0x4f0], 0x20; mov rax, [rsi+rax*8]; jmp rax; 
0x00000000479c00: mov dword ptr [rbp-0x4e8], 0x0; mov rax, [rsi+rax*8]; jmp rax; 
0x000000004796f6: mov dword ptr [rbp-0x4e8], 0x1; mov rax, [rax+rsi*8]; jmp rax; 
0x00000000415524: mov dword ptr [rbp-0x4f0], 0x1; cdqe; movzx eax, byte ptr [rbx+rax]; mov rax, [rsi+rax*8]; jmp rax; 
0x000000004788b3: mov dword ptr [rbp-0x4f0], 0x20; jmp rax; 
0x00000000479b38: mov dword ptr [rbp-0x4f0], 0x20; mov rax, [rsi+rax*8]; jmp rax; 
0x00000000479b76: mov dword ptr [rbp-0x4f8], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x00000000478894: mov dword ptr [rbp-0x508], 0x0; mov dword ptr [rbp-0x514], 0x0; mov qword ptr [rbp-0x4c8], 0x0; mov dword ptr [rbp-0x4f0], 0x20; jmp rax; 
0x00000000479c7e: mov dword ptr [rbp-0x508], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000047889e: mov dword ptr [rbp-0x514], 0x0; mov qword ptr [rbp-0x4c8], 0x0; mov dword ptr [rbp-0x4f0], 0x20; jmp rax; 
0x00000000479536: mov dword ptr [rbp-0x514], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x00000000414387: mov dword ptr [rbp-0x51c], 0x0; mov qword ptr [rbp-0x4e0], 0x0; mov byte ptr [rbp-0x508], 0x20; mov [rbp-0x4f8], rsi; jmp rax; 
0x00000000479c44: mov dword ptr [rbp-0x520], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x000000004794b6: mov dword ptr [rbp-0x528], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x00000000479bf6: mov dword ptr [rbp-0x530], 0x1; mov dword ptr [rbp-0x4e8], 0x0; mov rax, [rsi+rax*8]; jmp rax; 
0x000000004154cf: mov dword ptr [rbp-0x53c], 0x1; cdqe; movzx eax, byte ptr [rbx+rax]; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000048bf46: mov dword ptr [rbx+0x10], 0x0; movups [rbx], xmm0; pop rbx; ret; 
0x0000000046b7b7: mov dword ptr [rbx+0x10], 0x0; pop rbx; ret; 
0x00000000421a44: mov dword ptr [rbx+0x14], 0x0; ret; 
0x0000000045fe09: mov dword ptr [rbx+0x58908c8], 0x6cda1; ret; 
0x0000000045fdd8: mov dword ptr [rbx+0x58910c8], 0x6cdd2; pop rbx; ret; 
0x0000000045fe39: mov dword ptr [rbx+0x58918c8], 0x6cd71; ret; 
0x0000000041eccd: mov dword ptr [rbx+0x58], 0x0; movups [rbx+0x48], xmm0; pop rbx; ret; 
0x000000004209cd: mov dword ptr [rbx+0x58], 0x0; pxor xmm0, xmm0; movups [rbx+0x48], xmm0; pop rbx; ret; 
0x0000000041d31e: mov dword ptr [rbx+0x70], 0xffffffff; pop rbx; ret; 
0x00000000498887: mov dword ptr [rbx+0x98], 0x0; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000414c30: mov dword ptr [rbx-0x67b7df18], 0x314b60f; lea rax, [rip+0xb19df]; jmp qword ptr [rax+rdx*8]; 
0x00000000414a2d: mov dword ptr [rbx-0x67b7df18], 0x314b60f; lea rax, [rip+0xb1ae2]; jmp qword ptr [rax+rdx*8]; 
0x00000000461637: mov dword ptr [rbx], 0x0; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000049d02a: mov dword ptr [rbx], 0x0; movzx eax, byte ptr [rsp+0xf]; add rsp, 0x10; pop rbx; ret; 
0x0000000048acb8: mov dword ptr [rbx], 0x0; pop rbx; or dword ptr [rip+0x3f802], 0x1; ret; 
0x00000000489738: mov dword ptr [rcx], 0xffff35e9; call qword ptr [rax+0x37bb41]; 
0x0000000041fc01: mov dword ptr [rdi+0xa0], 0xffffffff; mov qword ptr [rdi+0xa8], 0x0; ret; 
0x0000000041fbf4: mov dword ptr [rdi+0xa8], 0x0; ret; 
0x0000000041f9f4: mov dword ptr [rdi+0xc0], 0xffffffff; movups [rdi+0xa0], xmm0; ret; 
0x0000000048f5bb: mov dword ptr [rdx], 0x0; mov eax, 0x1; ret; 
0x0000000048f72e: mov dword ptr [rdx], 0x0; mov eax, 0x2; ret; 
0x00000000487e15: mov dword ptr [rdx], 0x16c3e800; add [rax], al; mov r10, [rbp-0x90]; call r10; 
0x0000000042a32d: mov dword ptr [rdx], 0x58d4800; or eax, ecx; add al, [rax]; cmove rax, rdx; ret; 
0x0000000048f6b2: mov dword ptr [rdx], 0xffffc002; ret; 
0x0000000049cedb: mov dword ptr [rip+0x2f3f3], 0x0; add rsp, 0x8; ret; 
0x0000000049ca8c: mov dword ptr [rip+0x2f722], 0x0; add rsp, 0x8; ret; 
0x00000000492cd0: mov dword ptr [rip+0x397c6], 0x2; test byte ptr [rip+0x39e9f], 0x40; jne short 0x0000000000492ce8; ret; 
0x0000000048c941: mov dword ptr [rip+0x3fa15], 0x0; add rsp, 0x8; ret; 
0x000000004806b7: mov dword ptr [rip+0x4bc37], 0xffffffff; ret; 
0x000000004267de: mov dword ptr [rip+0xa5878], 0x0; ret; 
0x00000000421ac8: mov dword ptr [rip+0xa8022], 0x1; mov [rip+0xa8014], eax; ret; 
0x00000000421aa1: mov dword ptr [rip+0xa8049], 0x1; mov [rip+0xa801e], rax; ret; 
0x00000000421a78: mov dword ptr [rip+0xa8072], 0x1; mov [rip+0xa803f], rax; ret; 
0x00000000421a58: mov dword ptr [rip+0xa8092], 0x1; mov [rip+0xa8057], rax; ret; 
0x00000000420ce0: mov dword ptr [rip+0xab30e], 0x0; ret; 
0x00000000420cd5: mov dword ptr [rip+0xab311], 0x0; mov qword ptr [rip+0xab30e], 0x0; ret; 
0x000000004017d5: mov dword ptr [rip+0xcabd9], 0x0; pop rdx; ret; 
0x00000000434299: mov dword ptr [rsi], 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000048d5a2: mov dword ptr [rsp], 0x0; mov rax, [rsp+0x10]; mov rdi, [rsp+0x18]; call rax; 
0x00000000459ca7: mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000045abef: mov dword ptr fs:[rax], 0x16; mov rax, 0xffffffffffffffff; ret; 
0x00000000425d9a: mov dword ptr fs:[rax], 0xc; add rsp, 0x10; mov rax, r8; pop rbp; ret; 
0x000000004806cf: mov dword ptr fs:[rax], 0xc; mov eax, 0xffffffff; ret; 
0x000000004248ea: mov dword ptr fs:[rax], 0xc; mov rax, r8; ret; 
0x00000000434298: mov dword ptr fs:[rsi], 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043bde0: mov dx, [rsi+0x1]; mov cx, [rsi]; mov [rdi+0x1], dx; mov [rdi], cx; ret; 
0x00000000453ca2: mov dx, [rsi+0x4]; mov [rdi], ecx; mov [rdi+0x4], dx; lea rax, [rdi+0x5]; ret; 
0x00000000453672: mov dx, [rsi+0x4]; mov [rdi], ecx; mov [rdi+0x4], dx; ret; 
0x00000000453cf3: mov dx, [rsi+0x8]; mov [rdi], rcx; mov [rdi+0x8], dx; lea rax, [rdi+0x9]; ret; 
0x000000004536b3: mov dx, [rsi+0x8]; mov [rdi], rcx; mov [rdi+0x8], dx; ret; 
0x00000000435ca0: mov dx, [rsi-0x2]; mov [rdi-0x2], dx; ret; 
0x00000000435e80: mov dx, [rsi-0x3]; mov cx, [rsi-0x2]; mov [rdi-0x3], dx; mov [rdi-0x2], cx; ret; 
0x00000000453c60: mov dx, [rsi]; mov [rdi], dx; lea rax, [rdi+0x1]; ret; 
0x00000000453630: mov dx, [rsi]; mov [rdi], dx; ret; 
0x00000000457a73: mov eax, 0x0; and ch, 0xf0; pop rbx; cmovne rax, rdx; ret; 
0x00000000402057: mov eax, 0x0; leave; ret; 
0x00000000401009: mov eax, 0x0; test rax, rax; je short 0x0000000000401016; call rax; 
0x00000000401ccd: mov eax, 0x0; test rax, rax; je short 0x0000000000401ce0; mov edi, 0x4caed0; jmp rax; 
0x00000000401d0f: mov eax, 0x0; test rax, rax; je short 0x0000000000401d20; mov edi, 0x4caed0; jmp rax; 
0x00000000459d74: mov eax, 0x101; syscall; 
0x00000000480518: mov eax, 0x106; syscall; 
0x00000000421b0c: mov eax, 0x10; cmovne rax, rdx; mov [rip+0xaa55c], rax; ret; 
0x00000000457ac1: mov eax, 0x10; pop rbx; ret; 
0x000000004805d3: mov eax, 0x10; syscall; 
0x00000000490287: mov eax, 0x11; syscall; 
0x0000000045aa4b: mov eax, 0x12e; xor edi, edi; syscall; 
0x00000000488e1a: mov eax, 0x14; syscall; 
0x0000000045de67: mov eax, 0x15; syscall; 
0x00000000429180: mov eax, 0x16; ret; 
0x00000000459bd4: mov eax, 0x18; syscall; 
0x0000000045d427: mov eax, 0x19; syscall; 
0x000000004895d0: mov eax, 0x1; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000499538: mov eax, 0x1; cmp [rsi+0x8], rcx; ja short 0x0000000000499545; sbb eax, eax; ret; 
0x0000000048f5d5: mov eax, 0x1; mov [rdi], rsi; ret; 
0x0000000048f6ad: mov eax, 0x1; mov dword ptr [rdx], 0xffffc002; ret; 
0x0000000041f949: mov eax, 0x1; movups [rbp+0x38], xmm0; pop rbp; pop r12; ret; 
0x000000004753f9: mov eax, 0x1; pop rbp; pop r12; pop r13; ret; 
0x0000000047d6b4: mov eax, 0x1; pop rbp; pop r12; ret; 
0x000000004292d3: mov eax, 0x1; pop rbx; pop rbp; pop r12; ret; 
0x0000000047c6ba: mov eax, 0x1; pop rbx; pop rbp; ret; 
0x00000000480920: mov eax, 0x1; ret; 
0x0000000047fac1: mov eax, 0x1; ret; 
0x00000000459f00: mov eax, 0x1; syscall; 
0x0000000045acc4: mov eax, 0x1c; syscall; 
0x00000000457aba: mov eax, 0x20; pop rbx; ret; 
0x00000000459644: mov eax, 0x25; syscall; 
0x000000004940a4: mov eax, 0x26; syscall; 
0x00000000490274: mov eax, 0x27; syscall; 
0x0000000048f734: mov eax, 0x2; ret; 
0x0000000047fad1: mov eax, 0x2; ret; 
0x00000000457ab3: mov eax, 0x30; pop rbx; ret; 
0x0000000047fae1: mov eax, 0x3; ret; 
0x0000000045a724: mov eax, 0x3; syscall; 
0x00000000480434: mov eax, 0x3f; syscall; 
0x00000000457aac: mov eax, 0x40; pop rbx; ret; 
0x0000000046b0e1: mov eax, 0x44000000; mov eax, eax; pop rbp; pop r12; ret; 
0x000000004969cf: mov eax, 0x48000000; add esp, 0x8; ret; 
0x0000000045a78e: mov eax, 0x48; syscall; 
0x000000004996e5: mov eax, 0x4; cmp dil, 0x3; jne short 0x0000000000499710; add rsp, 0x8; ret; 
0x0000000047faf1: mov eax, 0x4; ret; 
0x00000000459c73: mov eax, 0x4; syscall; 
0x0000000045a03b: mov eax, 0x4f; syscall; 
0x0000000048aa76: mov eax, 0x59; mov rbp, rsp; mov rsi, rbp; syscall; 
0x0000000047fb01: mov eax, 0x5; ret; 
0x00000000459cd2: mov eax, 0x5; syscall; 
0x00000000459cd1: mov eax, 0x5; syscall; 
0x00000000457aa5: mov eax, 0x60; pop rbx; ret; 
0x00000000435158: mov eax, 0x63490006; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000045d454: mov eax, 0x63; syscall; 
0x00000000480464: mov eax, 0x66; syscall; 
0x00000000480484: mov eax, 0x68; syscall; 
0x0000000047fb11: mov eax, 0x6; ret; 
0x000000004804b3: mov eax, 0x6; syscall; 
0x00000000480474: mov eax, 0x6b; syscall; 
0x00000000480494: mov eax, 0x6c; syscall; 
0x0000000047fb21: mov eax, 0x7; ret; 
0x0000000049023b: mov eax, 0x7fffffff; cmova rdx, rax; mov eax, 0xd9; syscall; 
0x00000000457acf: mov eax, 0x80; pop rbx; ret; 
0x000000004996fd: mov eax, 0x8; add rsp, 0x8; ret; 
0x000000004996fc: mov eax, 0x8; add rsp, 0x8; ret; 
0x00000000457ac8: mov eax, 0x8; pop rbx; ret; 
0x00000000459f94: mov eax, 0x8; syscall; 
0x0000000044b2e4: mov eax, 0x8b00059c; or al, 0x8a; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000045abcf: mov eax, 0x9; syscall; 
0x00000000402ef9: mov eax, 0x9e; mov [rsi], rsi; mov [rsi+0x10], rsi; syscall; 
0x00000000402608: mov eax, 0x9e; syscall; 
0x0000000045ac94: mov eax, 0xa; syscall; 
0x0000000045ac64: mov eax, 0xb; syscall; 
0x0000000040f7a6: mov eax, 0xba; syscall; 
0x0000000041b019: mov eax, 0xc04d8d4c; mov rcx, r14; mov rdi, r15; call r12; 
0x00000000480684: mov eax, 0xc; syscall; 
0x0000000049cf22: mov eax, 0xca; lea rdi, [rip+0x2f3b2]; syscall; 
0x00000000475592: mov eax, 0xca; lea rdi, [rip+0x56d52]; syscall; 
0x0000000047530e: mov eax, 0xca; lea rdi, [rip+0x56fd2]; syscall; 
0x0000000047328a: mov eax, 0xca; lea rdi, [rip+0x5904e]; syscall; 
0x0000000047314a: mov eax, 0xca; lea rdi, [rip+0x5918e]; syscall; 
0x0000000046f682: mov eax, 0xca; lea rdi, [rip+0x5cc52]; syscall; 
0x0000000046f5bd: mov eax, 0xca; lea rdi, [rip+0x5cd17]; syscall; 
0x0000000046f41b: mov eax, 0xca; lea rdi, [rip+0x5ceb9]; syscall; 
0x0000000046f341: mov eax, 0xca; lea rdi, [rip+0x5cf93]; syscall; 
0x00000000461b72: mov eax, 0xca; lea rdi, [rip+0x6b0f2]; syscall; 
0x00000000461a06: mov eax, 0xca; lea rdi, [rip+0x6b25e]; syscall; 
0x000000004618e6: mov eax, 0xca; lea rdi, [rip+0x6b37e]; syscall; 
0x00000000458bee: mov eax, 0xca; lea rdi, [rip+0x74076]; syscall; 
0x00000000428e0e: mov eax, 0xca; lea rdi, [rip+0xa0d46]; syscall; 
0x0000000042620e: mov eax, 0xca; lea rdi, [rip+0xa3946]; syscall; 
0x000000004261ae: mov eax, 0xca; lea rdi, [rip+0xa39a6]; syscall; 
0x00000000425dee: mov eax, 0xca; lea rdi, [rip+0xa3d66]; syscall; 
0x00000000425b8e: mov eax, 0xca; lea rdi, [rip+0xa3fc6]; syscall; 
0x000000004255b6: mov eax, 0xca; lea rdi, [rip+0xa459e]; syscall; 
0x0000000042557e: mov eax, 0xca; lea rdi, [rip+0xa45d6]; syscall; 
0x0000000042716e: mov eax, 0xca; lea rdi, [rip+0xa4ef6]; syscall; 
0x00000000426722: mov eax, 0xca; lea rdi, [rip+0xa5932]; syscall; 
0x0000000042287f: mov eax, 0xca; lea rdi, [rip+0xa97d5]; syscall; 
0x0000000042284e: mov eax, 0xca; lea rdi, [rip+0xa9816]; syscall; 
0x000000004225ce: mov eax, 0xca; lea rdi, [rip+0xa9a96]; syscall; 
0x000000004220aa: mov eax, 0xca; lea rdi, [rip+0xa9fba]; syscall; 
0x00000000420cc0: mov eax, 0xca; lea rdi, [rip+0xab324]; syscall; 
0x00000000420700: mov eax, 0xca; lea rdi, [rip+0xab8e4]; syscall; 
0x00000000420394: mov eax, 0xca; lea rdi, [rip+0xabc50]; syscall; 
0x00000000420052: mov eax, 0xca; lea rdi, [rip+0xabf92]; syscall; 
0x0000000041eaec: mov eax, 0xca; lea rdi, [rip+0xad4f8]; syscall; 
0x0000000041e84c: mov eax, 0xca; lea rdi, [rip+0xad798]; syscall; 
0x0000000041e4f8: mov eax, 0xca; lea rdi, [rip+0xadaec]; syscall; 
0x0000000041866e: mov eax, 0xca; lea rdi, [rip+0xb45f6]; syscall; 
0x0000000041077d: mov eax, 0xca; lea rdi, [rip+0xbc387]; syscall; 
0x0000000041063d: mov eax, 0xca; lea rdi, [rip+0xbc4c7]; syscall; 
0x00000000410406: mov eax, 0xca; lea rdi, [rip+0xbc6fe]; syscall; 
0x000000004103cb: mov eax, 0xca; lea rdi, [rip+0xbc739]; syscall; 
0x000000004102e7: mov eax, 0xca; lea rdi, [rip+0xbc81d]; syscall; 
0x00000000406d1b: mov eax, 0xca; lea rdi, [rip+0xc4e51]; syscall; 
0x00000000405378: mov eax, 0xca; lea rdi, [rip+0xc67bc]; syscall; 
0x000000004041f9: mov eax, 0xca; lea rdi, [rip+0xc7893]; syscall; 
0x000000004041cb: mov eax, 0xca; lea rdi, [rip+0xc78c1]; syscall; 
0x0000000040407f: mov eax, 0xca; lea rdi, [rip+0xc7a0d]; syscall; 
0x000000004012d7: mov eax, 0xca; lea rdi, [rip+0xca8ad]; syscall; 
0x00000000401446: mov eax, 0xca; syscall; 
0x0000000047e1ad: mov eax, 0xca; xor r10, r10; add rdi, 0x308; mov esi, 0x80; syscall; 
0x00000000490244: mov eax, 0xd9; syscall; 
0x0000000046ddef: mov eax, 0xd; syscall; 
0x0000000047fd45: mov eax, 0xe4; syscall; 
0x000000004237ac: mov eax, 0xe80007c4; ret far; 
0x0000000045a584: mov eax, 0xe9fffcc8; ret far; 
0x0000000040f7d4: mov eax, 0xe; syscall; 
0x0000000040f7b2: mov eax, 0xea; syscall; 
0x0000000046dd21: mov eax, 0xf; syscall; 
0x0000000046f3c4: mov eax, 0xfb7a76e8; dec dword ptr [rcx+rcx*4+0x65]; mov eax, 0xfffdd4e9; jmp qword ptr [rbx+rcx*4+0x4]; 
0x00000000480429: mov eax, 0xfdd361e8; call qword ptr [rax-0x5e1f00d]; 
0x0000000046f3cc: mov eax, 0xfffdd4e9; jmp qword ptr [rbx+rcx*4+0x4]; 
0x0000000046f3cd: mov eax, 0xfffdd4e9; jmp qword ptr [rbx+rcx*4+0x4]; 
0x0000000048f690: mov eax, 0xffffc002; sub eax, ecx; mov [rdx], eax; mov eax, 0x1; ret; 
0x0000000048f7bd: mov eax, 0xffffc002; sub eax, r8d; mov [rdx], eax; mov eax, 0x2; ret; 
0x0000000046db25: mov eax, 0xffffffb0; movsxd rdi, edi; mov rax, fs:[rax]; mov rax, [rax+rdi*8+0x80]; ret; 
0x00000000459ca1: mov eax, 0xffffffc0; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000045abe9: mov eax, 0xffffffc0; mov dword ptr fs:[rax], 0x16; mov rax, 0xffffffffffffffff; ret; 
0x000000004806c9: mov eax, 0xffffffc0; mov dword ptr fs:[rax], 0xc; mov eax, 0xffffffff; ret; 
0x0000000048acd5: mov eax, 0xffffffc0; pop rbx; mov eax, fs:[rax]; ret; 
0x000000004248e1: mov eax, 0xffffffc0; xor r8d, r8d; mov dword ptr fs:[rax], 0xc; mov rax, r8; ret; 
0x0000000046db85: mov eax, 0xffffffe0; add rax, fs:[0x0]; ret; 
0x0000000046db65: mov eax, 0xffffffe8; add rax, fs:[0x0]; ret; 
0x0000000046db45: mov eax, 0xfffffff0; add rax, fs:[0x0]; ret; 
0x0000000046f47e: mov eax, 0xffffffff; pop rbp; pop r12; pop r13; ret; 
0x0000000041f971: mov eax, 0xffffffff; pop rbp; pop r12; ret; 
0x0000000041a190: mov eax, 0xffffffff; pop rbp; ret; 
0x0000000041a608: mov eax, 0xffffffff; pop rbx; pop rbp; ret; 
0x0000000041bc33: mov eax, 0xffffffff; pop rbx; ret; 
0x0000000041fca5: mov eax, 0xffffffff; ret; 
0x0000000041af50: mov eax, 0xffffffff; ret; 
0x00000000459e55: mov eax, [0x18]; test eax, eax; jne short 0x0000000000459e70; syscall; 
0x00000000459ef5: mov eax, [0x18]; test eax, eax; jne short 0x0000000000459f10; mov eax, 0x1; syscall; 
0x00000000457a56: mov eax, [0x83c2890ce8c10004]; loop 0x0000000000457a70; movsxd rax, [rsi+rdx*4]; add rax, rsi; notrack jmp rax; 
0x0000000042969b: mov eax, [0x8d48d03948000a2a]; adc eax, 0x263c7; lea rax, [rip+0x26000]; cmove rax, rdx; ret; 
0x00000000436817: mov eax, [0x8d49931463490006]; adc al, 0x13; notrack jmp rdx; 
0x000000004579c6: mov eax, [0xfe0830ce8c10004]; movsxd rcx, [rsi+rax*4]; add rcx, rsi; notrack jmp rcx; 
0x0000000045e333: mov eax, [0xfffffd0de90006c1]; nop [rax]; ret; 
0x0000000045807a: mov eax, [r8+rax*4]; sub eax, [r8+r9*4]; je short 0x0000000000458060; ret; 
0x00000000410269: mov eax, [rax+0x18]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000041a185: mov eax, [rax+0x20]; jmp rax; 
0x0000000046dbdf: mov eax, [rax+0x58]; mov rdx, 0xffffffffffffffe0; add rax, 0x200; mov fs:[rdx], rax; ret; 
0x0000000041fad0: mov eax, [rax+0x68]; test rax, rax; jne short 0x000000000041fac8; ret; 
0x00000000402030: mov eax, [rax+0x8]; mov rdi, rax; call rdx; 
0x0000000048c955: mov eax, [rax+0x8]; ret; 
0x0000000048c965: mov eax, [rax+0x8]; sub rax, fs:[0x0]; ret; 
0x0000000047d5d5: mov eax, [rax+0xe0]; call qword ptr [rax+0x68]; 
0x0000000047d70a: mov eax, [rax+0xe0]; mov esi, 0xffffffff; call qword ptr [rax+0x18]; 
0x0000000041a17e: mov eax, [rax+0xe0]; mov rax, [rax+0x20]; jmp rax; 
0x0000000045807b: mov eax, [rax+rax*4]; sub eax, [r8+r9*4]; je short 0x0000000000458060; ret; 
0x0000000046c214: mov eax, [rax+rbp*8]; test rax, rax; je short 0x000000000046c21e; call rax; 
0x0000000049cae0: mov eax, [rax+rbx*8]; test rax, rax; je short 0x000000000049caea; call rax; 
0x000000004149d6: mov eax, [rax+rcx*8]; jmp rax; 
0x0000000046db33: mov eax, [rax+rdi*8+0x80]; ret; 
0x00000000479701: mov eax, [rax+rsi*8]; jmp rax; 
0x00000000498afd: mov eax, [rax]; add rsp, 0x8; ret; 
0x000000004968b9: mov eax, [rax]; lea rax, [rax+0x8]; mov [rcx], r8; ret; 
0x000000004968c9: mov eax, [rax]; mov [r9], r8; add rsp, 0x8; ret; 
0x0000000046db30: mov eax, [rax]; mov rax, [rax+rdi*8+0x80]; ret; 
0x0000000048acdd: mov eax, [rax]; ret; 
0x0000000046bf8e: mov eax, [rax]; test rax, rax; je short 0x000000000046bf98; call rax; 
0x00000000420869: mov eax, [rax]; test rax, rax; jne short 0x0000000000420860; ret; 
0x0000000045b36f: mov eax, [rbp-0x58]; mov r15d, r13d; call rax; 
0x00000000401f41: mov eax, [rbp-0x8]; leave; ret; 
0x0000000040202c: mov eax, [rbp-0x8]; mov rax, [rax+0x8]; mov rdi, rax; call rdx; 
0x0000000048f336: mov eax, [rbp-0x8]; xor rax, fs:[0x28]; jne 0x000000000048f3c5; leave; ret; 
0x00000000486d2a: mov eax, [rbx+0x10]; add rax, [r13]; call rax; 
0x0000000048716b: mov eax, [rbx+0x10]; add rax, [r15]; test ecx, ecx; jne short 0x0000000000487177; call rax; 
0x00000000487a08: mov eax, [rbx+0x10]; add rax, [r15]; test edx, edx; jne short 0x0000000000487a14; call rax; 
0x000000004872f8: mov eax, [rbx+0x10]; add rax, [r15]; test r11d, r11d; jne short 0x0000000000487305; call rax; 
0x0000000048fd51: mov eax, [rbx+0x10]; mov [rax], rdi; pop rbx; ret; 
0x0000000048fd41: mov eax, [rbx+0x10]; mov rdx, [rdi+0x30]; mov [rax], rdx; pop rbx; ret; 
0x0000000041ed21: mov eax, [rbx+0x18]; add rsp, 0x10; pop rbx; jmp rax; 
0x0000000041f43d: mov eax, [rbx+0x40]; add rsp, 0x20; pop rbx; jmp rax; 
0x0000000041f8bf: mov eax, [rbx+0x48]; add rsp, 0x20; xor edx, edx; pop rbx; jmp rax; 
0x0000000048fd25: mov eax, [rbx+0x8]; lea rdx, [rip+0x29741]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000004984aa: mov eax, [rbx+0x8]; movsxd rax, [r12+rax*4]; add rax, r12; notrack jmp rax; 
0x000000004531d4: mov eax, [rcx+0x3]; mov [rdx+0x3], eax; lea rax, [rdx+0x6]; ret; 
0x00000000451a04: mov eax, [rcx+0x3]; mov [rdx+0x3], eax; mov rax, rdi; ret; 
0x000000004531b5: mov eax, [rcx+0x4]; mov [rdx+0x4], ax; lea rax, [rdx+0x5]; ret; 
0x000000004519f5: mov eax, [rcx+0x4]; mov [rdx+0x4], ax; mov rax, rdi; ret; 
0x000000004531e6: mov eax, [rcx+0x5]; mov [rdx+0x5], eax; lea rax, [rdx+0x8]; ret; 
0x00000000451a16: mov eax, [rcx+0x5]; mov [rdx+0x5], eax; mov rax, rdi; ret; 
0x00000000453267: mov eax, [rcx+0x5]; mov [rdx+0x5], rax; lea rax, [rdx+0xc]; ret; 
0x00000000451a57: mov eax, [rcx+0x5]; mov [rdx+0x5], rax; mov rax, rdi; ret; 
0x00000000453206: mov eax, [rcx+0x6]; mov [rdx+0x6], eax; lea rax, [rdx+0x9]; ret; 
0x00000000451a26: mov eax, [rcx+0x6]; mov [rdx+0x6], eax; mov rax, rdi; ret; 
0x00000000453287: mov eax, [rcx+0x6]; mov [rdx+0x6], rax; lea rax, [rdx+0xd]; ret; 
0x00000000451a77: mov eax, [rcx+0x6]; mov [rdx+0x6], rax; mov rax, rdi; ret; 
0x00000000453226: mov eax, [rcx+0x7]; mov [rdx+0x7], eax; lea rax, [rdx+0xa]; ret; 
0x00000000451a36: mov eax, [rcx+0x7]; mov [rdx+0x7], eax; mov rax, rdi; ret; 
0x000000004532a7: mov eax, [rcx+0x7]; mov [rdx+0x7], rax; lea rax, [rdx+0xe]; ret; 
0x00000000451a97: mov eax, [rcx+0x7]; mov [rdx+0x7], rax; mov rax, rdi; ret; 
0x00000000453246: mov eax, [rcx+0x8]; mov [rdx+0x8], eax; lea rax, [rdx+0xb]; ret; 
0x00000000451a46: mov eax, [rcx+0x8]; mov [rdx+0x8], eax; mov rax, rdi; ret; 
0x00000000453137: mov eax, [rcx+0x8]; mov [rdx+0x8], rax; lea rax, [rdx+0xf]; ret; 
0x00000000451987: mov eax, [rcx+0x8]; mov [rdx+0x8], rax; mov rax, rdi; ret; 
0x0000000044379a: mov eax, [rcx+rax*4]; mov edx, [rcx+rdx*4]; sub eax, edx; ret; 
0x0000000045801d: mov eax, [rcx+rax*4]; sub eax, [rcx+r8*4]; je short 0x0000000000458008; ret; 
0x00000000445072: mov eax, [rcx+rax*4]; sub eax, edx; ret; 
0x00000000428819: mov eax, [rcx+rax+0x8]; sub rdx, 0x8; and eax, 0x1; cmovne rax, rdx; ret; 
0x0000000047d86f: mov eax, [rcx]; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000453161: mov eax, [rcx]; mov [rdx], ax; lea rax, [rdx+0x1]; ret; 
0x000000004519b1: mov eax, [rcx]; mov [rdx], ax; mov rax, rdi; ret; 
0x00000000453190: mov eax, [rcx]; mov [rdx], eax; lea rax, [rdx+0x3]; ret; 
0x000000004519d0: mov eax, [rcx]; mov [rdx], eax; mov rax, rdi; ret; 
0x000000004530e1: mov eax, [rcx]; mov [rdx], rax; lea rax, [rdx+0x7]; ret; 
0x00000000451931: mov eax, [rcx]; mov [rdx], rax; mov rax, rdi; ret; 
0x00000000489632: mov eax, [rcx]; ret; 
0x00000000420884: mov eax, [rdi+0x10]; sub eax, [rsi+0x10]; ret; 
0x000000004208ac: mov eax, [rdi+0x10]; sub eax, edx; ret; 
0x0000000047dfae: mov eax, [rdi+0x10]; sub rdx, [rcx+0x10]; sar rdx, 0x2; sub eax, edx; ret; 
0x0000000047dfc0: mov eax, [rdi+0x10]; sub rdx, [rcx+0x8]; sar rdx, 0x2; sub eax, edx; ret; 
0x0000000045bdb0: mov eax, [rdi+0x10]; test r8, r8; jne 0x000000000045c13b; mov rdi, [r15]; call rbx; 
0x0000000045bf15: mov eax, [rdi+0x10]; test r8, r8; jne 0x000000000045c1a9; mov rdi, [r15]; call rbx; 
0x0000000045be34: mov eax, [rdi+0x10]; test r8, r8; jne 0x000000000045c217; mov rdi, [r15]; call rbx; 
0x0000000045bfc9: mov eax, [rdi+0x10]; test r8, r8; jne 0x000000000045c285; mov rdi, [r15]; call rbx; 
0x0000000045be8e: mov eax, [rdi+0x10]; test r8, r8; jne 0x000000000045c2f3; mov rdi, [r15]; call rbx; 
0x0000000045be61: mov eax, [rdi+0x10]; test r8, r8; jne 0x000000000045c361; mov rdi, [r15]; call rbx; 
0x0000000045bee8: mov eax, [rdi+0x10]; test r8, r8; jne 0x000000000045c3cf; mov rdi, [r15]; call rbx; 
0x0000000045bf6f: mov eax, [rdi+0x10]; test r8, r8; jne 0x000000000045c43d; mov rdi, [r15]; call rbx; 
0x0000000045bdda: mov eax, [rdi+0x10]; test r8, r8; jne 0x000000000045c4ab; mov rdi, [r15]; call rbx; 
0x0000000045bebb: mov eax, [rdi+0x10]; test r8, r8; jne 0x000000000045c519; mov rdi, [r15]; call rbx; 
0x0000000045bf9c: mov eax, [rdi+0x10]; test r8, r8; jne 0x000000000045c587; mov rdi, [r15]; call rbx; 
0x0000000045be07: mov eax, [rdi+0x10]; test r8, r8; jne 0x000000000045c5f5; mov rdi, [r15]; call rbx; 
0x0000000045bf42: mov eax, [rdi+0x10]; test r8, r8; jne 0x000000000045c663; mov rdi, [r15]; call rbx; 
0x0000000045bff6: mov eax, [rdi+0x10]; test r8, r8; jne 0x000000000045c6d1; mov rdi, [r15]; call rbx; 
0x0000000045c01f: mov eax, [rdi+0x10]; test r8, r8; jne short 0x000000000045c062; mov rdi, [r15]; call rbx; 
0x0000000045c048: mov eax, [rdi+0x10]; test r8, r8; jne short 0x000000000045c0cd; mov rdi, [r15]; call rbx; 
0x0000000046d386: mov eax, [rdi+0x20]; mov rbp, rdi; test rax, rax; je short 0x000000000046d393; call rax; 
0x0000000049cdb5: mov eax, [rdi+0x20]; test rax, rax; je short 0x000000000049cdc4; call rax; 
0x00000000421625: mov eax, [rdi+0x28]; cmp [rdi+0x10], rax; cmovae rax, [rdi+0x10]; sub rax, [rdi+0x18]; ret; 
0x00000000422173: mov eax, [rdi+0x28]; mov [rax+0x20], rdx; add rsp, 0x8; ret; 
0x0000000041ebaf: mov eax, [rdi+0x48]; mov [rdi+0x48], rdx; mov [rdi+0x18], rax; mov [rdi+0x8], rax; ret; 
0x00000000420bf5: mov eax, [rdi+0x68]; ret; 
0x00000000420d1b: mov eax, [rdi+0x8]; cmp rax, rdx; jae short 0x0000000000420d48; movzx eax, byte ptr [rax]; ret; 
0x00000000498b15: mov eax, [rdi+0x90]; ret; 
0x00000000498b85: mov eax, [rdi+0x98]; ret; 
0x0000000047d5b5: mov eax, [rdi+0xa0]; cmp qword ptr [rax+0x30], 0x0; je short 0x000000000047d5c8; ret; 
0x00000000498bc5: mov eax, [rdi+0xa0]; ret; 
0x00000000498c25: mov eax, [rdi+0xa8]; ret; 
0x00000000498c15: mov eax, [rdi+0xb0]; ret; 
0x00000000498bd5: mov eax, [rdi+0xb8]; ret; 
0x000000004333e4: mov eax, [rdi-0x4]; cmp ecx, eax; jne 0x0000000000433dff; xor eax, eax; ret; 
0x00000000433941: mov eax, [rdi-0x8]; cmp rcx, rax; jne 0x0000000000433df3; xor eax, eax; ret; 
0x00000000421a95: mov eax, [rdi]; cmp rax, 0x2000000; jbe short 0x0000000000421aa0; ret; 
0x000000004216f5: mov eax, [rdi]; cmp rax, 0x408; jbe short 0x0000000000421700; ret; 
0x00000000421af5: mov eax, [rdi]; cmp rax, 0xa0; jbe short 0x0000000000421b00; ret; 
0x00000000421735: mov eax, [rdi]; cmp rax, 0xffff; jbe short 0x0000000000421740; ret; 
0x000000004932b5: mov eax, [rdi]; cmp rax, rsi; je short 0x00000000004932c0; ret; 
0x00000000420876: mov eax, [rdi]; mov [rdx], rax; ret; 
0x00000000421755: mov eax, [rdi]; nop; mov [rip+0xa83c9], rax; ret; 
0x000000004216e5: mov eax, [rdi]; nop; mov [rip+0xa83e9], rax; ret; 
0x000000004216d5: mov eax, [rdi]; nop; mov [rip+0xa8401], rax; ret; 
0x00000000421ae5: mov eax, [rdi]; nop; mov [rip+0xaa586], eax; ret; 
0x00000000421ac5: mov eax, [rdi]; nop; mov dword ptr [rip+0xa8022], 0x1; mov [rip+0xa8014], eax; ret; 
0x00000000421a75: mov eax, [rdi]; nop; mov dword ptr [rip+0xa8072], 0x1; mov [rip+0xa803f], rax; ret; 
0x00000000421a55: mov eax, [rdi]; nop; mov dword ptr [rip+0xa8092], 0x1; mov [rip+0xa8057], rax; ret; 
0x0000000049ac74: mov eax, [rdi]; test eax, eax; jne short 0x000000000049ac80; ret; 
0x0000000049aeb4: mov eax, [rdi]; test eax, eax; jne short 0x000000000049aec0; ret; 
0x0000000041af3e: mov eax, [rdx+0x4c]; cmp [rdx+0x48], eax; cmovne eax, ecx; ret; 
0x00000000441396: mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000048a8fa: mov eax, [rdx+rax]; mov edx, 0x0; cmp rax, 0xffffffffffffffff; cmove rax, rdx; ret; 
0x000000004904c4: mov eax, [rip+0x3c71e]; ret; 
0x0000000048a415: mov eax, [rip+0x3f0a5]; mov [rdi], rax; mov rax, [rip+0x422a3]; mov [rsi], rax; ret; 
0x0000000048a41f: mov eax, [rip+0x422a3]; mov [rsi], rax; ret; 
0x0000000048a3ae: mov eax, [rip+0x4231c]; mov rax, r8; ret; 
0x0000000048a2ac: mov eax, [rip+0x4241e]; jne short 0x000000000048a2c0; lea rax, [r8+0x1]; mov [rip+0x42411], rax; ret; 
0x0000000047fd01: mov eax, [rip+0x48d91]; test rax, rax; je short 0x000000000047fd40; call rax; 
0x00000000475d19: mov eax, [rip+0x57009]; shl rdx, 0x2; lea rcx, [rbx+rdx]; add rdx, r15; call qword ptr [rax+r9*8]; 
0x0000000046af85: mov eax, [rip+0x61225]; ret; 
0x00000000462a68: mov eax, [rip+0x6972e]; test eax, eax; je short 0x0000000000462a78; ret; 
0x000000004615d5: mov eax, [rip+0x6b68d]; ret; 
0x0000000045f094: mov eax, [rip+0x6dbb6]; test eax, eax; je short 0x000000000045f0a0; ret; 
0x0000000045d3a4: mov eax, [rip+0x6f83e]; mov edx, 0x64; test eax, eax; cmove eax, edx; ret; 
0x0000000045ab25: mov eax, [rip+0x6f9ad]; test rax, rax; je short 0x000000000045ab31; ret; 
0x00000000420bd5: mov eax, [rip+0xa8905]; ret; 
0x00000000411859: mov eax, [rip+0xbb4c9]; shl rdx, 0x2; lea rcx, [rbx+rdx]; add rdx, r15; call qword ptr [rax+r9*8]; 
0x0000000049975a: mov eax, [rsi+0x10]; add rsp, 0x8; ret; 
0x000000004969ba: mov eax, [rsi+0xa8]; add rsp, 0x8; ret; 
0x00000000496a19: mov eax, [rsi+0xb0]; add rsp, 0x8; ret; 
0x000000004969cd: mov eax, [rsi+0xb8]; add rsp, 0x8; ret; 
0x000000004145e9: mov eax, [rsi+rax*8]; jmp rax; 
0x00000000437fc6: mov eax, [rsi]; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000048d5aa: mov eax, [rsp+0x10]; mov rdi, [rsp+0x18]; call rax; 
0x0000000040286a: mov eax, [rsp+0x18]; call rax; 
0x00000000464a7a: mov eax, [rsp+0x20]; call rax; 
0x00000000462ed9: mov eax, [rsp+0x28]; call rax; 
0x00000000463c7c: mov eax, [rsp+0x30]; call rax; 
0x0000000046ab27: mov eax, [rsp+0x48]; mov rcx, [rsp+0x18]; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; call r15; 
0x00000000459eb2: mov eax, [rsp+0x8]; add rsp, 0x28; ret; 
0x00000000499593: mov eax, [rsp+0x8]; mov [rsp+0x10], r10; call rax; 
0x0000000045aec9: mov eax, [rsp+0x8]; mov rdi, r13; call rax; 
0x0000000049aa4b: mov eax, [rsp+0x8]; mov rdx, r15; mov rsi, [r12+r14*8+0x10]; mov rdi, r13; call rax; 
0x0000000046dc38: mov eax, [rsp+0x8]; xor rax, fs:[0x28]; jne short 0x000000000046dc4c; add rsp, 0x18; ret; 
0x000000004963ad: mov eax, [rsp]; add rsp, 0x38; ret; 
0x0000000040f95c: mov eax, [rsp]; call rax; 
0x00000000419705: mov eax, [rsp]; mov esi, 0xffffffff; mov rdi, r8; call qword ptr [rax+0x18]; 
0x0000000040fac1: mov eax, [rsp]; mov r13, r15; add r15, r12; call rax; 
0x0000000040f8c1: mov eax, [rsp]; mov rdx, r14; mov rsi, r13; mov rdi, r12; call rax; 
0x0000000040fa4c: mov eax, [rsp]; mov rsi, r12; mov rdi, r13; call rax; 
0x0000000048b84e: mov eax, [rsp]; mov rsp, rbx; mov rbx, [rsp]; add rsp, 0x18; bnd jmp r11; 
0x0000000040f7ef: mov eax, eax; add rsp, 0x118; ret; 
0x00000000459de6: mov eax, eax; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x00000000459f32: mov eax, eax; mov edi, [rsp+0x8]; mov eax, 0x1; syscall; 
0x00000000459e92: mov eax, eax; mov edi, [rsp+0x8]; xor eax, eax; syscall; 
0x00000000426c0a: mov eax, eax; pop r12; pop r13; ret; 
0x00000000421ece: mov eax, eax; pop r12; ret; 
0x00000000426c77: mov eax, eax; pop r13; ret; 
0x0000000041b6f7: mov eax, eax; pop rbp; pop r12; ret; 
0x00000000425d24: mov eax, eax; pop rbp; ret; 
0x0000000042642a: mov eax, eax; pop rbx; pop rbp; pop r12; ret; 
0x0000000041054c: mov eax, eax; pop rbx; pop rbp; ret; 
0x0000000041072e: mov eax, eax; pop rbx; ret; 
0x00000000410541: mov eax, eax; ret; 
0x000000004594b4: mov eax, eax; shr rax, 0x2; vzeroupper; ret; 
0x000000004596a2: mov eax, eax; syscall; 
0x0000000044fc21: mov eax, eax; vzeroupper; ret; 
0x00000000498a7d: mov eax, ebp; mov rcx, r12; mov esi, 0x1a; mov edi, 0x1; call rax; 
0x00000000498a00: mov eax, ebp; mov rcx, r12; mov esi, 0xa; mov edi, 0x1; call rax; 
0x00000000490836: mov eax, ebp; pop r12; pop r13; ret; 
0x0000000045b2c9: mov eax, ebp; pop rbp; pop r12; pop r13; ret; 
0x0000000041ca9e: mov eax, ebp; pop rbx; pop rbp; pop r12; ret; 
0x00000000498d33: mov eax, ebp; pop rbx; pop rbp; ret; 
0x0000000048f563: mov eax, ebx; adc rax, rdx; pop rbp; pop rbx; ret; 
0x0000000047e199: mov eax, ebx; and eax, 0xc; cmp eax, 0x4; je short 0x000000000047e1a4; ret; 
0x0000000049892c: mov eax, ebx; mov rcx, r12; or esi, 0x2; mov edi, 0x1; call rax; 
0x0000000041d3f9: mov eax, ebx; pop rbx; pop rbp; pop r12; ret; 
0x0000000041a61e: mov eax, ebx; pop rbx; pop rbp; ret; 
0x000000004266f7: mov eax, ebx; syscall; 
0x0000000048f42b: mov eax, ecx; adc eax, eax; ret; 
0x0000000046dec3: mov eax, ecx; add rsp, 0x148; ret; 
0x00000000480650: mov eax, ecx; add rsp, 0x38; ret; 
0x00000000457adf: mov eax, ecx; and eax, 0x7ff80000; div esi; mov eax, eax; ret; 
0x0000000047e031: mov eax, ecx; lea rdx, [r8+rdx*4]; mov [rax], rdx; xor eax, eax; ret; 
0x000000004073d6: mov eax, ecx; pop r12; ret; 
0x000000004757c8: mov eax, ecx; pop r14; ret; 
0x000000004073a8: mov eax, ecx; pop rbx; pop rbp; pop r12; ret; 
0x00000000457a43: mov eax, ecx; pop rbx; shr eax, 0x6; and eax, 0x3fffc00; ret; 
0x000000004579f8: mov eax, ecx; pop rbx; shr eax, 0xe; and eax, 0x3fc00; ret; 
0x0000000048c023: mov eax, ecx; sub eax, r8d; ret; 
0x0000000040f79f: mov eax, ecx; syscall; 
0x00000000420c05: mov eax, edi; ret; 
0x00000000457a16: mov eax, edx; and ecx, 0x3fc00; cmp edx, 0xff; cmove rax, rcx; ret; 
0x00000000457aa1: mov eax, edx; pop rbx; ret; 
0x000000004502f9: mov eax, edx; ret; 
0x000000004028a2: mov eax, edx; syscall; 
0x0000000046df89: mov eax, esi; mov r10d, 0x8; mov rsi, r8; mov eax, 0xe; syscall; 
0x0000000048d6d9: mov eax, esi; mov rsp, r8; mov rbp, r9; nop; jmp rdx; 
0x00000000459692: mov eax, esi; syscall; 
0x00000000498e99: mov eax, esp; mov rcx, r14; mov esi, 0x1; mov edi, 0x1; call rax; 
0x0000000047e2c9: mov eax, esp; pop r12; pop r13; ret; 
0x000000004033d9: mov eax, esp; pop r12; ret; 
0x0000000045b9c2: mov eax, esp; pop rbp; pop r12; jmp rax; 
0x0000000045ad49: mov eax, esp; pop rbp; pop r12; pop r13; jmp rax; 
0x00000000421ceb: mov eax, esp; pop rbp; pop r12; pop r13; ret; 
0x0000000048abd6: mov eax, esp; pop rbp; pop r12; ret; 
0x0000000045aad2: mov eax, esp; pop rbx; pop r12; ret; 
0x0000000040333b: mov eax, esp; pop rbx; pop rbp; pop r12; ret; 
0x00000000459e54: mov eax, fs:[0x18]; test eax, eax; jne short 0x0000000000459e70; syscall; 
0x00000000459ef4: mov eax, fs:[0x18]; test eax, eax; jne short 0x0000000000459f10; mov eax, 0x1; syscall; 
0x0000000048acdc: mov eax, fs:[rax]; ret; 
0x0000000047e198: mov eax, r11d; and eax, 0xc; cmp eax, 0x4; je short 0x000000000047e1a4; ret; 
0x0000000048d595: mov eax, r12d; pop r12; ret; 
0x00000000495d68: mov eax, r12d; pop rbp; pop r12; pop r13; ret; 
0x0000000048abd5: mov eax, r12d; pop rbp; pop r12; ret; 
0x0000000046ff74: mov eax, r12d; pop rbx; pop r12; ret; 
0x0000000041854c: mov eax, r12d; pop rbx; pop rbp; pop r12; ret; 
0x0000000040f7ed: mov eax, r8d; add rsp, 0x118; ret; 
0x0000000040f7ee: mov eax, r8d; add rsp, 0x118; ret; 
0x0000000046b0e5: mov eax, r8d; pop rbp; pop r12; ret; 
0x000000004105ed: mov eax, r8d; pop rbx; pop rbp; ret; 
0x0000000041072d: mov eax, r8d; pop rbx; ret; 
0x00000000473065: mov eax, r8d; ret; 
0x000000004596a1: mov eax, r8d; syscall; 
0x0000000046dec1: mov eax, r9d; add rsp, 0x148; ret; 
0x0000000048064f: mov eax, r9d; add rsp, 0x38; ret; 
0x0000000041b2f5: mov eax, r9d; syscall; 
0x000000004391ff: mov ebp, 0x49000679; movsxd edx, [rbx+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434c18: mov ebp, 0x63490006; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000047eb3c: mov ebp, 0xf80148c0; ret; 
0x0000000047edcc: mov ebp, 0xf80148c6; ret; 
0x00000000479848: mov ebp, 0xfffffb28; fdivp st(7), st; call far fword ptr [rdi]; 
0x00000000488e0e: mov ebp, 0xfffffba0; lea rsi, [rbp-0x430]; mov eax, 0x14; syscall; 
0x00000000498ed8: mov ebp, [rbp-0x18]; mov r14, [rbp-0x10]; mov r15, [rbp-0x8]; leave; ret; 
0x00000000499051: mov ebp, [rbp]; mov rsp, rcx; pop rcx; jmp rcx; 
0x0000000045bb18: mov ebp, [rsp+0x10]; test r13, r13; jne short 0x000000000045bb70; mov rdi, [r12]; call rbx; 
0x0000000045bb48: mov ebp, [rsp+0x10]; test r13, r13; jne short 0x000000000045bbd0; mov rdi, [r12]; call rbx; 
0x0000000046e1f9: mov ebp, eax; mov rdi, r12; call rbx; 
0x0000000045b2a3: mov ebp, ebx; mov rdi, rbp; call r12; 
0x0000000047875b: mov ebp, ebx; sar r13, 0x2; mov rdx, r13; call qword ptr [rax+0x38]; 
0x0000000048d6df: mov ebp, ecx; nop; jmp rdx; 
0x0000000040fac5: mov ebp, edi; add r15, r12; call rax; 
0x0000000045a036: mov ebp, edi; mov rdi, rbp; mov eax, 0x4f; syscall; 
0x0000000046d38a: mov ebp, edi; test rax, rax; je short 0x000000000046d393; call rax; 
0x0000000048aa7c: mov ebp, esp; mov rsi, rbp; syscall; 
0x0000000043b597: mov ebx, 0x46f00ff2; ret far; 
0x0000000043b591: mov ebx, 0x477f0ff3; mov ebx, 0x46f00ff2; ret far; 
0x000000004360c3: mov ebx, 0x4e6f0ff3; ret far; 
0x000000004360e2: mov ebx, 0x4f7f0ff3; ret far; 
0x00000000402afc: mov ebx, 0x63480009; or al, 0x8e; add rcx, rsi; notrack jmp rcx; 
0x00000000434e06: mov ebx, 0x63490006; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000049730f: mov ebx, 0x8000351; mov byte ptr [rip+0x351b5], 0x8; ret; 
0x000000004074e4: mov ebx, 0x850f5f3c; test byte ptr [rax], 0x0; add [rax-0x7d], cl; ret; 
0x0000000047e138: mov ebx, 0xafb8341; je short 0x000000000047e140; ret; 
0x00000000492cf1: mov ebx, 0xe900026d; xchg [rsi-0x1], ah; jmp qword ptr [rsi+0xf]; 
0x000000004647e3: mov ebx, 0xffff6de9; jmp far fword ptr [rax-0x777af0fe]; 
0x00000000487ce8: mov ebx, [rbp-0xf0]; mov r10, [rbp-0xd8]; mov [rbp-0xf0], r11; mov [rbp-0xd8], r10; call r15; 
0x000000004875e7: mov ebx, [rbp-0xf0]; nop [rax]; mov [rbp-0xf0], r11; call r10; 
0x000000004358d1: mov ebx, [rsi-0x10]; mov rdx, [rsi-0x8]; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x0000000048ca61: mov ebx, [rsp+0x30]; mov rdx, [rsp+0x38]; mov rcx, [rsp+0x40]; add rsp, 0x48; jmp qword ptr [rax]; 
0x0000000048c9df: mov ebx, [rsp+0x30]; mov rdx, [rsp+0x38]; mov rcx, [rsp+0x40]; add rsp, 0x58; jmp qword ptr [rax]; 
0x0000000048b855: mov ebx, [rsp]; add rsp, 0x18; bnd jmp r11; 
0x0000000048b03c: mov ebx, [rsp]; add rsp, 0x30; bnd jmp r11; 
0x0000000048b14e: mov ebx, [rsp]; add rsp, 0x30; bnd ret; 
0x00000000479bb4: mov ebx, ecx; mov dword ptr [rbp-0x4d0], 0x1; mov r9d, 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000047995c: mov ebx, ecx; mov dword ptr [rbp-0x4d0], 0x1; mov rax, [rax+rsi*8]; jmp rax; 
0x000000004796f4: mov ebx, ecx; mov dword ptr [rbp-0x4e8], 0x1; mov rax, [rax+rsi*8]; jmp rax; 
0x00000000479b74: mov ebx, ecx; mov dword ptr [rbp-0x4f8], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x00000000479c7c: mov ebx, ecx; mov dword ptr [rbp-0x508], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x00000000479534: mov ebx, ecx; mov dword ptr [rbp-0x514], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x00000000479c42: mov ebx, ecx; mov dword ptr [rbp-0x520], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x000000004794b4: mov ebx, ecx; mov dword ptr [rbp-0x528], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x00000000478adc: mov ebx, ecx; xor r9d, r9d; mov dword ptr [rbp-0x4d0], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000047d5cd: mov ebx, edi; test byte ptr [rdi], 0x2; jne short 0x000000000047d648; mov rax, [rax+0xe0]; call qword ptr [rax+0x68]; 
0x00000000479bc1: mov ecx, 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000040f79a: mov ecx, 0x27; mov eax, ecx; syscall; 
0x0000000041d4b4: mov ecx, 0x3; mov edx, 0x1; mov rdi, rbx; call qword ptr [rbp+0x48]; 
0x0000000042a173: mov ecx, 0x480002c9; cmove eax, edx; ret; 
0x00000000435008: mov ecx, 0x63490006; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004127bc: mov ecx, 0x8bfffff1; test [rax], edx; idiv edi; inc dword ptr [rcx]; ret; 
0x0000000045ac11: mov ecx, 0x9; xor edi, edi; or r10d, 0x40; mov eax, ecx; syscall; 
0x00000000459655: mov ecx, 0xffffffc0; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000046db04: mov ecx, 0xffffffe8; mov fs:[rcx], rdx; mov rdx, 0xffffffffffffffe0; mov fs:[rdx], rax; ret; 
0x0000000047cf76: mov ecx, [rax+0x10]; mov [rax], rdx; mov [rax+0x10], rdx; mov [rax+0x40], rcx; ret; 
0x0000000043948e: mov ecx, [rbp+0x1]; fnstcw [rsi]; jmp r9; 
0x0000000043eb93: mov ecx, [rcx-0x2]; mov [rdi], si; mov [r9-0x2], cx; ret; 
0x0000000043eb7f: mov ecx, [rcx-0x4]; mov [rdi], esi; mov [r9-0x4], ecx; ret; 
0x0000000043eb80: mov ecx, [rcx-0x4]; mov [rdi], esi; mov [r9-0x4], ecx; ret; 
0x0000000043eb6e: mov ecx, [rcx-0x8]; mov [rdi], rsi; mov [r9-0x8], rcx; ret; 
0x0000000048b064: mov ecx, [rdi+0x18]; mov rsi, [rdi+0x20]; mov rdi, [rdi+0x28]; bnd call r11; 
0x00000000433ede: mov ecx, [rdi-0x73]; or al, 0xb; notrack jmp r9; 
0x00000000441393: mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000043690f: mov ecx, [rip+0x93b23]; lea r11, [rip+0x6a424]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x000000004368b5: mov ecx, [rip+0x93b7d]; lea r11, [rip+0x6a43e]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x00000000433f2f: mov ecx, [rip+0x96503]; lea r11, [rip+0x6cc44]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x00000000433ece: mov ecx, [rip+0x96564]; lea r11, [rip+0x6cc65]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x00000000453dd5: mov ecx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], cx; lea rax, [rdi+0x11]; ret; 
0x00000000453735: mov ecx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], cx; ret; 
0x00000000453e14: mov ecx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], ecx; lea rax, [rdi+0x13]; ret; 
0x00000000453774: mov ecx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], ecx; mov [rdi+0x14], dh; ret; 
0x00000000453764: mov ecx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], ecx; ret; 
0x00000000453e95: mov ecx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], rcx; lea rax, [rdi+0x17]; ret; 
0x000000004537f5: mov ecx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], rcx; mov [rdi+0x18], dh; ret; 
0x000000004537d5: mov ecx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], rcx; ret; 
0x00000000453838: mov ecx, [rsi+0x17]; movdqu [rdi], xmm0; mov [rdi+0x10], rdx; mov [rdi+0x17], ecx; ret; 
0x00000000453819: mov ecx, [rsi+0x18]; movdqu [rdi], xmm0; mov [rdi+0x10], rdx; mov [rdi+0x18], cx; ret; 
0x00000000453858: mov ecx, [rsi+0x18]; movdqu [rdi], xmm0; mov [rdi+0x10], rdx; mov [rdi+0x18], ecx; ret; 
0x00000000453e55: mov ecx, [rsi+0xe]; movdqu [rdi], xmm0; mov [rdi+0xe], rcx; lea rax, [rdi+0x15]; ret; 
0x00000000453795: mov ecx, [rsi+0xe]; movdqu [rdi], xmm0; mov [rdi+0xe], rcx; ret; 
0x00000000453df4: mov ecx, [rsi+0xf]; movdqu [rdi], xmm0; mov [rdi+0xf], ecx; lea rax, [rdi+0x12]; ret; 
0x00000000453754: mov ecx, [rsi+0xf]; movdqu [rdi], xmm0; mov [rdi+0xf], ecx; ret; 
0x00000000453e75: mov ecx, [rsi+0xf]; movdqu [rdi], xmm0; mov [rdi+0xf], rcx; lea rax, [rdi+0x16]; ret; 
0x000000004537b5: mov ecx, [rsi+0xf]; movdqu [rdi], xmm0; mov [rdi+0xf], rcx; ret; 
0x000000004542e4: mov ecx, [rsi+rdx-0x3]; mov [rdi+rdx-0x3], ecx; lea rax, [rdi+rdx]; vzeroupper; ret; 
0x000000004500b4: mov ecx, [rsi+rdx-0x3]; mov [rdi+rdx-0x3], ecx; vzeroupper; ret; 
0x00000000456853: mov ecx, [rsi+rdx-0x4]; mov esi, [rsi]; mov [rdi+rdx-0x4], ecx; mov [rdi], esi; ret; 
0x000000004500c4: mov ecx, [rsi+rdx-0x7]; mov [rdi], rcx; mov [rdi+rdx-0x7], r9; vzeroupper; ret; 
0x00000000456843: mov ecx, [rsi+rdx-0x8]; mov rsi, [rsi]; mov [rdi+rdx-0x8], rcx; mov [rdi], rsi; ret; 
0x00000000435e85: mov ecx, [rsi-0x2]; mov [rdi-0x3], dx; mov [rdi-0x2], cx; ret; 
0x00000000455baf: mov ecx, [rsi-0x4]; cmp eax, ecx; jne 0x0000000000455dc0; xor eax, eax; ret; 
0x00000000433646: mov ecx, [rsi-0x4]; cmp ecx, eax; jne 0x0000000000433dff; xor eax, eax; ret; 
0x00000000436263: mov ecx, [rsi-0x4]; mov [rdi-0x5], edx; mov [rdi-0x4], ecx; ret; 
0x00000000436463: mov ecx, [rsi-0x4]; mov [rdi-0x6], edx; mov [rdi-0x4], ecx; ret; 
0x00000000436663: mov ecx, [rsi-0x4]; mov [rdi-0x7], edx; mov [rdi-0x4], ecx; ret; 
0x0000000043b3d4: mov ecx, [rsi-0x4]; mov [rdi-0x9], rdx; mov [rdi-0x4], ecx; ret; 
0x0000000043b354: mov ecx, [rsi-0x4]; mov [rdi-0xa], rdx; mov [rdi-0x4], ecx; ret; 
0x0000000043b2d4: mov ecx, [rsi-0x4]; mov [rdi-0xb], rdx; mov [rdi-0x4], ecx; ret; 
0x0000000043b254: mov ecx, [rsi-0x4]; mov [rdi-0xc], rdx; mov [rdi-0x4], ecx; ret; 
0x000000004333bb: mov ecx, [rsi-0x8]; cmp rcx, rax; jne 0x0000000000433df3; xor eax, eax; ret; 
0x00000000433dc7: mov ecx, [rsi-0x8]; cmp rcx, rax; jne short 0x0000000000433df3; xor eax, eax; ret; 
0x0000000043b1c5: mov ecx, [rsi-0x8]; mov [rdi-0xd], rdx; mov [rdi-0x8], rcx; ret; 
0x0000000043b135: mov ecx, [rsi-0x8]; mov [rdi-0xe], rdx; mov [rdi-0x8], rcx; ret; 
0x0000000043b0a5: mov ecx, [rsi-0x8]; mov [rdi-0xf], rdx; mov [rdi-0x8], rcx; ret; 
0x00000000435ab1: mov ecx, [rsi-0x9]; mov edx, [rsi-0x4]; mov [rdi-0x9], rcx; mov [rdi-0x4], edx; ret; 
0x00000000435c91: mov ecx, [rsi-0xa]; mov edx, [rsi-0x4]; mov [rdi-0xa], rcx; mov [rdi-0x4], edx; ret; 
0x00000000435e71: mov ecx, [rsi-0xb]; mov edx, [rsi-0x4]; mov [rdi-0xb], rcx; mov [rdi-0x4], edx; ret; 
0x00000000436051: mov ecx, [rsi-0xc]; mov edx, [rsi-0x4]; mov [rdi-0xc], rcx; mov [rdi-0x4], edx; ret; 
0x00000000436241: mov ecx, [rsi-0xd]; mov rdx, [rsi-0x8]; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000436441: mov ecx, [rsi-0xe]; mov rdx, [rsi-0x8]; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000436641: mov ecx, [rsi-0xf]; mov rdx, [rsi-0x8]; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043bde5: mov ecx, [rsi]; mov [rdi+0x1], dx; mov [rdi], cx; ret; 
0x0000000043bd03: mov ecx, [rsi]; mov [rdi+0x1], edx; mov [rdi], ecx; ret; 
0x0000000043bb45: mov ecx, [rsi]; mov [rdi+0x1], rdx; mov [rdi], rcx; ret; 
0x0000000043bc93: mov ecx, [rsi]; mov [rdi+0x2], edx; mov [rdi], ecx; ret; 
0x0000000043bad5: mov ecx, [rsi]; mov [rdi+0x2], rdx; mov [rdi], rcx; ret; 
0x0000000043bc23: mov ecx, [rsi]; mov [rdi+0x3], edx; mov [rdi], ecx; ret; 
0x0000000043ba65: mov ecx, [rsi]; mov [rdi+0x3], rdx; mov [rdi], rcx; ret; 
0x00000000453c90: mov ecx, [rsi]; mov [rdi+0x4], dh; mov [rdi], ecx; lea rax, [rdi+0x4]; ret; 
0x00000000453660: mov ecx, [rsi]; mov [rdi+0x4], dh; mov [rdi], ecx; ret; 
0x0000000043b9f5: mov ecx, [rsi]; mov [rdi+0x4], rdx; mov [rdi], rcx; ret; 
0x0000000043b985: mov ecx, [rsi]; mov [rdi+0x5], rdx; mov [rdi], rcx; ret; 
0x0000000043b915: mov ecx, [rsi]; mov [rdi+0x6], rdx; mov [rdi], rcx; ret; 
0x0000000043b8a5: mov ecx, [rsi]; mov [rdi+0x7], rdx; mov [rdi], rcx; ret; 
0x00000000453ce1: mov ecx, [rsi]; mov [rdi+0x8], dh; mov [rdi], rcx; lea rax, [rdi+0x8]; ret; 
0x000000004536a1: mov ecx, [rsi]; mov [rdi+0x8], dh; mov [rdi], rcx; ret; 
0x00000000453c71: mov ecx, [rsi]; mov [rdi], cx; mov [rdi+0x2], dh; lea rax, [rdi+0x2]; ret; 
0x00000000453641: mov ecx, [rsi]; mov [rdi], cx; mov [rdi+0x2], dh; ret; 
0x00000000453670: mov ecx, [rsi]; mov dx, [rsi+0x4]; mov [rdi], ecx; mov [rdi+0x4], dx; ret; 
0x000000004536b1: mov ecx, [rsi]; mov dx, [rsi+0x8]; mov [rdi], rcx; mov [rdi+0x8], dx; ret; 
0x00000000453680: mov ecx, [rsi]; mov edx, [rsi+0x3]; mov [rdi], ecx; mov [rdi+0x3], edx; ret; 
0x000000004536c1: mov ecx, [rsi]; mov edx, [rsi+0x7]; mov [rdi], rcx; mov [rdi+0x7], edx; ret; 
0x000000004536d1: mov ecx, [rsi]; mov edx, [rsi+0x8]; mov [rdi], rcx; mov [rdi+0x8], edx; ret; 
0x000000004536e1: mov ecx, [rsi]; mov rdx, [rsi+0x5]; mov [rdi], rcx; mov [rdi+0x5], rdx; ret; 
0x000000004536f1: mov ecx, [rsi]; mov rdx, [rsi+0x6]; mov [rdi], rcx; mov [rdi+0x6], rdx; ret; 
0x00000000453701: mov ecx, [rsi]; mov rdx, [rsi+0x7]; mov [rdi], rcx; mov [rdi+0x7], rdx; ret; 
0x0000000048d54d: mov ecx, [rsp+0x10]; mov rdi, [rsp+0x18]; call rcx; 
0x000000004584eb: mov ecx, [rsp+0x10]; mov rdi, r12; mov rsi, [rsp+0x18]; call rbx; 
0x000000004685da: mov ecx, [rsp+0x18]; mov rcx, [rsp+0x28]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x48]; call r13; 
0x0000000046ab2c: mov ecx, [rsp+0x18]; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; call r15; 
0x00000000465cf2: mov ecx, [rsp+0x18]; mov rsi, [rsp+0x48]; mov rdi, [rsp+0x40]; call r14; 
0x00000000463179: mov ecx, [rsp+0x18]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; call r14; 
0x00000000464ce0: mov ecx, [rsp+0x18]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; call rbx; 
0x00000000467ffe: mov ecx, [rsp+0x18]; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; call rbx; 
0x00000000410f8d: mov ecx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x0000000000410fa4; add rsp, 0xd8; ret; 
0x0000000041104b: mov ecx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x0000000000411062; add rsp, 0xd8; ret; 
0x0000000045a8e5: mov ecx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x000000000045a93b; add rsp, 0x58; ret; 
0x0000000045a983: mov ecx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x000000000045a9db; add rsp, 0x58; ret; 
0x0000000047568b: mov ecx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x00000000004756a2; add rsp, 0xd8; ret; 
0x0000000048fe2f: mov ecx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x000000000048fe43; add rsp, 0x28; ret; 
0x00000000458fa3: mov ecx, [rsp+0x20]; mov rdi, rbp; mov rsi, [rsp+0x18]; call rbx; 
0x000000004650ff: mov ecx, [rsp+0x20]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x48]; call r13; 
0x00000000463ee3: mov ecx, [rsp+0x20]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; call rbx; 
0x00000000463c6d: mov ecx, [rsp+0x20]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; mov rax, [rsp+0x30]; call rax; 
0x00000000469763: mov ecx, [rsp+0x20]; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; call rbx; 
0x000000004638f8: mov ecx, [rsp+0x20]; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x60]; call r15; 
0x000000004685df: mov ecx, [rsp+0x28]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x48]; call r13; 
0x0000000045a79e: mov ecx, [rsp+0x28]; xor rcx, fs:[0x28]; jne short 0x000000000045a7f3; add rsp, 0x68; ret; 
0x0000000046fed8: mov ecx, [rsp+0x28]; xor rcx, fs:[0x28]; jne short 0x000000000046ff05; add rsp, 0x38; ret; 
0x0000000048cc2c: mov ecx, [rsp+0x28]; xor rcx, fs:[0x28]; jne short 0x000000000048cc63; add rsp, 0x38; ret; 
0x00000000493e98: mov ecx, [rsp+0x28]; xor rcx, fs:[0x28]; jne short 0x0000000000493eac; add rsp, 0x38; ret; 
0x00000000465ced: mov ecx, [rsp+0x30]; mov rcx, [rsp+0x18]; mov rsi, [rsp+0x48]; mov rdi, [rsp+0x40]; call r14; 
0x00000000467274: mov ecx, [rsp+0x30]; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; call r15; 
0x00000000466c80: mov ecx, [rsp+0x30]; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; mov rax, [rsp+0x20]; call rax; 
0x00000000466240: mov ecx, [rsp+0x30]; mov rsi, [rsp+0x48]; mov rdi, [rsp+0x40]; call rbx; 
0x00000000464a6b: mov ecx, [rsp+0x30]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; mov rax, [rsp+0x20]; call rax; 
0x00000000469311: mov ecx, [rsp+0x30]; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; mov rax, [rsp+0x18]; call rax; 
0x00000000467c14: mov ecx, [rsp+0x30]; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; mov rax, [rsp+0x20]; call rax; 
0x0000000048ca6b: mov ecx, [rsp+0x40]; add rsp, 0x48; jmp qword ptr [rax]; 
0x0000000048c9e9: mov ecx, [rsp+0x40]; add rsp, 0x58; jmp qword ptr [rax]; 
0x0000000048ccf8: mov ecx, [rsp+0x48]; xor rcx, fs:[0x28]; jne short 0x000000000048cd34; add rsp, 0x58; ret; 
0x0000000048d188: mov ecx, [rsp+0x48]; xor rcx, fs:[0x28]; jne short 0x000000000048d1c4; add rsp, 0x58; ret; 
0x0000000048ce6a: mov ecx, [rsp+0x58]; xor rcx, fs:[0x28]; jne short 0x000000000048ceb4; add rsp, 0x68; ret; 
0x0000000046dfa8: mov ecx, [rsp+0x88]; xor rcx, fs:[0x28]; jne 0x000000000046e056; add rsp, 0x98; ret; 
0x0000000045a82d: mov ecx, [rsp+0x8]; xor rcx, fs:[0x28]; jne short 0x000000000045a883; add rsp, 0x18; ret; 
0x0000000045d550: mov ecx, eax; and ecx, [rsi+0x10]; lea rcx, [rsi+rcx*4]; add eax, [rcx+rdx]; ret; 
0x0000000048962b: mov ecx, eax; cmp rcx, rdx; jne short 0x0000000000489608; mov eax, [rcx]; ret; 
0x0000000045801b: mov ecx, eax; mov eax, [rcx+rax*4]; sub eax, [rcx+r8*4]; je short 0x0000000000458008; ret; 
0x0000000042091a: mov ecx, edx; add rax, rcx; mov [rdi+0x8], rax; xor eax, eax; ret; 
0x00000000474b83: mov ecx, edx; clc; jmp qword ptr [rsi+0xf]; 
0x00000000456826: mov ecx, edx; rep movsb [rdi], [rsi]; ret; 
0x00000000498e9c: mov ecx, esi; mov esi, 0x1; mov edi, 0x1; call rax; 
0x0000000041b01f: mov ecx, esi; mov rdi, r15; call r12; 
0x00000000458e1e: mov ecx, esi; mov rsi, [rsp+0x18]; mov rcx, r12; mov rdx, r13; call rbx; 
0x00000000460773: mov ecx, esi; mov rsi, [rsp+0x18]; xor r8d, r8d; call rbx; 
0x00000000498a80: mov ecx, esp; mov esi, 0x1a; mov edi, 0x1; call rax; 
0x00000000498a03: mov ecx, esp; mov esi, 0xa; mov edi, 0x1; call rax; 
0x00000000458e26: mov ecx, esp; mov rdx, r13; call rbx; 
0x0000000049892f: mov ecx, esp; or esi, 0x2; mov edi, 0x1; call rax; 
0x00000000498934: mov edi, 0x1; call rax; 
0x00000000499480: mov edi, 0x1; jmp rax; 
0x0000000040f7cf: mov edi, 0x2; mov eax, 0xe; syscall; 
0x0000000041b2f0: mov edi, 0x2; mov eax, r9d; syscall; 
0x00000000402603: mov edi, 0x3001; mov eax, 0x9e; syscall; 
0x000000004028f0: mov edi, 0x3002; mov eax, 0x9e; syscall; 
0x00000000402921: mov edi, 0x3003; mov eax, 0x9e; syscall; 
0x0000000049348f: mov edi, 0x3005; mov eax, 0x9e; syscall; 
0x00000000403eb9: mov edi, 0x45c748ff; mov al, [0xfff868e9ffffffff]; jmp qword ptr [rbx+rcx*4+0x4]; 
0x00000000459ead: mov edi, 0x48000242; mov eax, [rsp+0x8]; add rsp, 0x28; ret; 
0x0000000041c72d: mov edi, 0x4c000000; mov edx, ebp; mov rsi, r15; mov rdi, rbp; call qword ptr [rax+0x40]; 
0x00000000401cd7: mov edi, 0x4caed0; jmp rax; 
0x0000000042a4bd: mov edi, 0x4f000762; movsxd ecx, [rdx+rcx*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000434a16: mov edi, 0x63490006; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000040478c: mov edi, 0xc0c748ff; sar bh, 0xff; dec dword ptr [rbx-0xd373]; jmp qword ptr [rcx+rcx*4+0x8]; 
0x0000000046b23c: mov edi, 0xff254ee8; jmp qword ptr [rsi+0x66]; 
0x00000000459d6f: mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x0000000045c083: mov edi, [rax]; call rbx; 
0x0000000049b96c: mov edi, [rbp+0x10]; add rdi, rbp; call r12; 
0x0000000045ae27: mov edi, [rbp+0x10]; test rdi, rdi; jne short 0x000000000045ae56; mov rdi, [rbp]; call rbx; 
0x00000000488e0d: mov edi, [rbp-0x460]; lea rsi, [rbp-0x430]; mov eax, 0x14; syscall; 
0x00000000498ee0: mov edi, [rbp-0x8]; leave; ret; 
0x0000000049904d: mov edi, [rbp-0x8]; mov rbp, [rbp]; mov rsp, rcx; pop rcx; jmp rcx; 
0x0000000045ae30: mov edi, [rbp]; call rbx; 
0x0000000048b06c: mov edi, [rdi+0x28]; bnd call r11; 
0x0000000045bdbd: mov edi, [rdi]; call rbx; 
0x0000000048c915: mov edi, [rip+0x3fa45]; lea rax, [rdi-0x1]; cmp rax, 0xfffffffffffffffd; jbe short 0x000000000048c930; ret; 
0x0000000045bc3f: mov edi, [rsi+0x10]; test r15, r15; jne 0x000000000045be52; mov rdi, [r14]; call rbx; 
0x0000000045bcff: mov edi, [rsi+0x10]; test r15, r15; jne 0x000000000045beac; mov rdi, [r14]; call rbx; 
0x0000000045bccf: mov edi, [rsi+0x10]; test r15, r15; jne 0x000000000045bf06; mov rdi, [r14]; call rbx; 
0x0000000045bc9f: mov edi, [rsi+0x10]; test r15, r15; jne 0x000000000045bf60; mov rdi, [r14]; call rbx; 
0x0000000045bc6f: mov edi, [rsi+0x10]; test r15, r15; jne 0x000000000045bfba; mov rdi, [r14]; call rbx; 
0x0000000045bd2f: mov edi, [rsi+0x10]; test r15, r15; jne 0x000000000045c014; mov rdi, [r14]; call rbx; 
0x0000000045bd5b: mov edi, [rsi+0x10]; test r15, r15; jne short 0x000000000045bda1; mov rdi, [r14]; call rbx; 
0x0000000045bd87: mov edi, [rsi+0x10]; test r15, r15; jne short 0x000000000045bdf8; mov rdi, [r14]; call rbx; 
0x0000000045bc4c: mov edi, [rsi]; call rbx; 
0x0000000048d5af: mov edi, [rsp+0x18]; call rax; 
0x0000000048d552: mov edi, [rsp+0x18]; call rcx; 
0x0000000046e209: mov edi, [rsp+0x18]; mov rdx, rbp; mov rsi, r12; call rbx; 
0x0000000048b034: mov edi, [rsp+0x28]; mov rsp, rbx; mov rbx, [rsp]; add rsp, 0x30; bnd jmp r11; 
0x0000000046727e: mov edi, [rsp+0x38]; call r15; 
0x0000000046ac9b: mov edi, [rsp+0x38]; lea r8, [rsp+0xa0]; call r15; 
0x00000000466c8a: mov edi, [rsp+0x38]; mov rax, [rsp+0x20]; call rax; 
0x00000000465cfc: mov edi, [rsp+0x40]; call r14; 
0x0000000046624a: mov edi, [rsp+0x40]; call rbx; 
0x00000000465109: mov edi, [rsp+0x48]; call r13; 
0x00000000465609: mov edi, [rsp+0x48]; call rbx; 
0x00000000468008: mov edi, [rsp+0x50]; call rbx; 
0x0000000046931b: mov edi, [rsp+0x50]; mov rax, [rsp+0x18]; call rax; 
0x00000000467c1e: mov edi, [rsp+0x50]; mov rax, [rsp+0x20]; call rax; 
0x00000000463183: mov edi, [rsp+0x58]; call r14; 
0x000000004646d3: mov edi, [rsp+0x58]; call r15; 
0x00000000463eed: mov edi, [rsp+0x58]; call rbx; 
0x0000000046424e: mov edi, [rsp+0x58]; mov rax, [rsp+0x18]; call rax; 
0x00000000464a75: mov edi, [rsp+0x58]; mov rax, [rsp+0x20]; call rax; 
0x00000000462ed4: mov edi, [rsp+0x58]; mov rax, [rsp+0x28]; call rax; 
0x00000000463c77: mov edi, [rsp+0x58]; mov rax, [rsp+0x30]; call rax; 
0x00000000463902: mov edi, [rsp+0x60]; call r15; 
0x000000004634bf: mov edi, [rsp+0x60]; mov rax, [rsp+0x18]; call rax; 
0x0000000041f473: mov edi, [rsp+0x8]; add rsp, 0x20; pop rbx; jmp rax; 
0x00000000459f34: mov edi, [rsp+0x8]; mov eax, 0x1; syscall; 
0x00000000459e94: mov edi, [rsp+0x8]; xor eax, eax; syscall; 
0x00000000402808: mov edi, [rsp+0xc]; call rbp; 
0x00000000402860: mov edi, [rsp+0xc]; mov rsi, [rsp+0x10]; mov rax, [rsp+0x18]; call rax; 
0x0000000041ed46: mov edi, [rsp]; add rsp, 0x10; pop rbx; jmp rax; 
0x0000000045bb22: mov edi, [rsp]; call rbx; 
0x0000000040f955: mov edi, [rsp]; mov rdx, r14; mov rax, [rsp]; call rax; 
0x0000000047f141: mov edi, [rsp]; movzx esi, bl; call rbp; 
0x0000000047f205: mov edi, [rsp]; push 0x0; lea rcx, [rax+0x1]; lea r9, [rsp+0x28]; call rbx; 
0x0000000041badf: mov edi, eax; call qword ptr [r15+0x18]; 
0x0000000041970e: mov edi, eax; call qword ptr [rax+0x18]; 
0x00000000402034: mov edi, eax; call rdx; 
0x0000000046fc93: mov edi, eax; cmp rdx, rcx; jae short 0x000000000046fc7c; mov rax, r8; ret; 
0x0000000040f7a4: mov edi, eax; mov eax, 0xba; syscall; 
0x0000000041cf45: mov edi, ebp; call qword ptr [r13+0x20]; 
0x0000000041cee2: mov edi, ebp; call qword ptr [r13+0x90]; 
0x0000000047d3cb: mov edi, ebp; call qword ptr [r14+0x18]; 
0x0000000047db8c: mov edi, ebp; call qword ptr [r14+0x20]; 
0x000000004771d1: mov edi, ebp; call qword ptr [r15+0x38]; 
0x0000000041bd05: mov edi, ebp; call qword ptr [r15+0x40]; 
0x0000000041c125: mov edi, ebp; call qword ptr [r15+0x80]; 
0x0000000041bc9c: mov edi, ebp; call qword ptr [r15+0x90]; 
0x0000000040307e: mov edi, ebp; call qword ptr [r15+rbx*8]; 
0x00000000476de2: mov edi, ebp; call qword ptr [r8+0x38]; 
0x0000000041cc40: mov edi, ebp; call qword ptr [rax+0x18]; 
0x0000000041c738: mov edi, ebp; call qword ptr [rax+0x40]; 
0x0000000041cd33: mov edi, ebp; call qword ptr [rax+0x78]; 
0x0000000041c045: mov edi, ebp; call qword ptr [rax+0x80]; 
0x0000000041bee7: mov edi, ebp; call qword ptr [rax+0x90]; 
0x000000004955c2: mov edi, ebp; call qword ptr [rax]; 
0x000000004184bc: mov edi, ebp; call qword ptr [rbx+0x10]; 
0x0000000041ee97: mov edi, ebp; call qword ptr [rbx+0x18]; 
0x0000000041c1db: mov edi, ebp; call qword ptr [rbx+0x80]; 
0x0000000041df52: mov edi, ebp; call qword ptr [rbx+0x88]; 
0x0000000047c3db: mov edi, ebp; call qword ptr [rbx+0x90]; 
0x00000000495466: mov edi, ebp; call qword ptr [rbx]; 
0x00000000475f71: mov edi, ebp; call qword ptr [rcx+0x38]; 
0x0000000045b2a6: mov edi, ebp; call r12; 
0x0000000040fa53: mov edi, ebp; call rax; 
0x0000000046e237: mov edi, ebp; call rbx; 
0x0000000041adcf: mov edi, ebp; lea r9, [rsp+0x18]; call rbp; 
0x00000000476ad0: mov edi, ebp; mov [rbp-0x970], r10d; mov [rbp-0x958], r9b; call rax; 
0x0000000045a039: mov edi, ebp; mov eax, 0x4f; syscall; 
0x0000000045abcd: mov edi, ebp; mov eax, 0x9; syscall; 
0x0000000042342d: mov edi, ebp; mov eax, 0xca; syscall; 
0x0000000047fd43: mov edi, ebp; mov eax, 0xe4; syscall; 
0x0000000045ad27: mov edi, ebp; mov edx, r13d; mov esi, 0x1; call r12; 
0x0000000045b9bf: mov edi, ebp; mov rax, r12; pop rbp; pop r12; jmp rax; 
0x0000000045adb7: mov edi, ebp; mov rdx, r13; mov esi, 0x1; call r12; 
0x00000000458fa8: mov edi, ebp; mov rsi, [rsp+0x18]; call rbx; 
0x0000000041a17a: mov edi, ebp; pop rbp; mov rax, [rax+0xe0]; mov rax, [rax+0x20]; jmp rax; 
0x0000000047d334: mov edi, ebp; pop rbp; pop r12; jmp rax; 
0x00000000426c84: mov edi, ebp; pop rbp; pop r12; pop r13; jmp rax; 
0x0000000041ee0c: mov edi, ebp; pop rbx; pop rbp; jmp rax; 
0x000000004263fb: mov edi, ebp; pop rbx; pop rbp; pop r12; jmp rax; 
0x00000000410288: mov edi, ebp; ror rdx, 0x11; xor rdx, fs:[0x30]; call rdx; 
0x0000000047691e: mov edi, ebp; sub rdx, rsi; sar rdx, 0x2; call qword ptr [r12+0x38]; 
0x0000000045b99e: mov edi, ebp; xor edx, edx; mov esi, 0x1; call r12; 
0x0000000045ad15: mov edi, ebp; xor esi, esi; call r12; 
0x000000004207cb: mov edi, ebx; call qword ptr [r12+0x18]; 
0x0000000041ca5e: mov edi, ebx; call qword ptr [r12+0x80]; 
0x0000000041d6e6: mov edi, ebx; call qword ptr [r12+0x88]; 
0x00000000420605: mov edi, ebx; call qword ptr [r13+0x18]; 
0x0000000047c585: mov edi, ebx; call qword ptr [r13+0x38]; 
0x00000000418fdf: mov edi, ebx; call qword ptr [r13+0x58]; 
0x0000000041f7af: mov edi, ebx; call qword ptr [r13+0x60]; 
0x00000000417524: mov edi, ebx; call qword ptr [r14+0x38]; 
0x0000000041d5ab: mov edi, ebx; call qword ptr [r14+0x78]; 
0x0000000041fece: mov edi, ebx; call qword ptr [r15+0x18]; 
0x0000000047c7ab: mov edi, ebx; call qword ptr [r15+0x38]; 
0x00000000420240: mov edi, ebx; call qword ptr [r15+0x58]; 
0x0000000041ec30: mov edi, ebx; call qword ptr [rbp+0x18]; 
0x0000000041f261: mov edi, ebx; call qword ptr [rbp+0x20]; 
0x0000000041fcf1: mov edi, ebx; call qword ptr [rbp+0x30]; 
0x0000000041d4bf: mov edi, ebx; call qword ptr [rbp+0x48]; 
0x00000000418761: mov edi, ebx; call qword ptr [rbp+0x60]; 
0x000000004190a2: mov edi, ebx; call qword ptr [rbp+0x68]; 
0x0000000041c8d4: mov edi, ebx; call qword ptr [rbp+0x70]; 
0x0000000041a891: mov edi, ebx; call qword ptr [rbp+0x80]; 
0x00000000460a75: mov edi, ebx; call r12; 
0x00000000461ad5: mov edi, ebx; call r14; 
0x000000004994e4: mov edi, ebx; call r15; 
0x0000000047bfa8: mov edi, ebx; call r8; 
0x00000000417d12: mov edi, ebx; call rax; 
0x0000000046162a: mov edi, ebx; call rbp; 
0x000000004611cc: mov edi, ebx; call rsi; 
0x000000004274f1: mov edi, ebx; mov eax, 0xca; syscall; 
0x0000000041d56b: mov edi, ebx; mov edx, 0x1; call qword ptr [r14+0x80]; 
0x0000000041b9ea: mov edi, ebx; sub rdx, rsi; call qword ptr [r12+0x70]; 
0x000000004193b1: mov edi, ebx; sub rdx, rsi; call qword ptr [rax+0x70]; 
0x00000000419d41: mov edi, edi; call qword ptr [r13+0x80]; 
0x00000000418e31: mov edi, edi; call qword ptr [r14+0x38]; 
0x00000000419a5b: mov edi, edi; call qword ptr [r14+0x80]; 
0x0000000041998f: mov edi, edi; call qword ptr [r14+0x90]; 
0x00000000418e9e: mov edi, edi; call qword ptr [rbp+0x38]; 
0x00000000419f37: mov edi, edi; call qword ptr [rbp+0x80]; 
0x0000000041279a: mov edi, edi; call qword ptr [rbx+0x38]; 
0x0000000041a027: mov edi, edi; call qword ptr [rbx+0x80]; 
0x000000004124f1: mov edi, edi; call qword ptr [rcx+0x38]; 
0x0000000041b022: mov edi, edi; call r12; 
0x00000000419ab4: mov edi, edi; call rax; 
0x0000000048cbbf: mov edi, edi; dec dword ptr [rax-0x77]; adc [r8+0x5a], bl; pop rbx; ret; 
0x000000004995bc: mov edi, edi; lea rbx, [r12+rcx*8]; mov rsi, [rbx]; call rax; 
0x00000000412228: mov edi, edi; mov [rbp-0x94c], r9d; mov [rbp-0x940], r11d; call rax; 
0x0000000042876c: mov edi, edi; mov eax, 0xca; syscall; 
0x0000000049958d: mov edi, edi; mov rdx, [r10]; mov rax, [rsp+0x8]; mov [rsp+0x10], r10; call rax; 
0x000000004122d5: mov edi, edi; sub rdx, rsi; call qword ptr [rbx+0x38]; 
0x0000000046fd17: mov edi, edx; cmp rax, 0x9; ja short 0x000000000046fcf0; mov rax, r8; ret; 
0x00000000459690: mov edi, edx; mov eax, esi; syscall; 
0x0000000045969f: mov edi, edx; mov eax, r8d; syscall; 
0x0000000047ef1f: mov edi, esi; bsr eax, eax; lea rax, [rdi+rax-0x20]; vzeroupper; ret; 
0x000000004270f6: mov edi, esi; call rax; 
0x0000000046e572: mov edi, esi; call rbp; 
0x0000000045b36c: mov edi, esi; mov rax, [rbp-0x58]; mov r15d, r13d; call rax; 
0x0000000046e314: mov edi, esi; mov rdx, r12; call rbp; 
0x00000000414716: mov edi, esp; call qword ptr [rax+0x38]; 
0x0000000041f2fe: mov edi, esp; call qword ptr [rbx+0x18]; 
0x000000004148f5: mov edi, esp; call qword ptr [rcx+0x38]; 
0x0000000040f8cb: mov edi, esp; call rax; 
0x0000000046e1fc: mov edi, esp; call rbx; 
0x0000000045839a: mov edi, esp; lea r9, [rsp+0x30]; call rbx; 
0x00000000478e45: mov edi, esp; mov [rbp-0x4d8], r11; call qword ptr [r8+0x38]; 
0x0000000047944a: mov edi, esp; mov [rbp-0x4d8], r11; call qword ptr [rbx+0x38]; 
0x00000000415890: mov edi, esp; mov [rbp-0x4f0], r9d; call qword ptr [rax+0x38]; 
0x00000000415353: mov edi, esp; mov [rbp-0x4f8], r9d; call qword ptr [rbx+0x38]; 
0x0000000047a0b6: mov edi, esp; mov [rbp-0x500], r11; mov [rbp-0x4f8], r9; call qword ptr [rax+0x38]; 
0x00000000415ae5: mov edi, esp; mov [rbp-0x508], r10d; mov [rbp-0x500], r11; call qword ptr [rax+0x38]; 
0x00000000471a2d: mov edi, esp; mov [rbp-0xe8], r8; call rax; 
0x00000000426598: mov edi, esp; mov eax, 0xca; syscall; 
0x000000004584f0: mov edi, esp; mov rsi, [rsp+0x18]; call rbx; 
0x0000000041423d: mov edi, esp; sub r15, r13; mov rdx, r15; call qword ptr [rax+0x38]; 
0x000000004147e2: mov edi, esp; sub r15, r8; mov rdx, r15; call qword ptr [rax+0x38]; 
0x00000000478c55: mov edi, esp; sub rbx, r8; sar rbx, 0x2; mov rdx, rbx; call qword ptr [rax+0x38]; 
0x000000004291ad: mov edx, 0x0; cmp rax, 0xffffffffffffffff; cmove rax, rdx; add rsp, 0x8; ret; 
0x0000000048a8fd: mov edx, 0x0; cmp rax, 0xffffffffffffffff; cmove rax, rdx; ret; 
0x0000000044ecfa: mov edx, 0x0; lea rax, [rdi+rax]; cmp [rax], sil; cmovne rax, rdx; ret; 
0x000000004579e6: mov edx, 0x0; pop rbx; cmove rax, rdx; ret; 
0x00000000418e28: mov edx, 0x10; mov rsi, r13; mov rdi, r15; call qword ptr [r14+0x38]; 
0x0000000041d56d: mov edx, 0x1; call qword ptr [r14+0x80]; 
0x0000000049cf18: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x2f3b2]; syscall; 
0x00000000475588: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x56d52]; syscall; 
0x00000000475304: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x56fd2]; syscall; 
0x00000000473280: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x5904e]; syscall; 
0x00000000473140: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x5918e]; syscall; 
0x0000000046f678: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x5cc52]; syscall; 
0x0000000046f5b3: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x5cd17]; syscall; 
0x0000000046f411: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x5ceb9]; syscall; 
0x0000000046f337: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x5cf93]; syscall; 
0x00000000461b68: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x6b0f2]; syscall; 
0x000000004619fc: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x6b25e]; syscall; 
0x000000004618dc: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x6b37e]; syscall; 
0x00000000458be4: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x74076]; syscall; 
0x00000000428e04: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa0d46]; syscall; 
0x00000000426204: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa3946]; syscall; 
0x000000004261a4: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa39a6]; syscall; 
0x00000000425de4: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa3d66]; syscall; 
0x00000000425b84: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa3fc6]; syscall; 
0x000000004255ac: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa459e]; syscall; 
0x00000000425574: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa45d6]; syscall; 
0x00000000427164: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa4ef6]; syscall; 
0x00000000426718: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa5932]; syscall; 
0x00000000422875: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa97d5]; syscall; 
0x00000000422844: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa9816]; syscall; 
0x000000004225c4: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa9a96]; syscall; 
0x000000004220a0: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa9fba]; syscall; 
0x00000000420cb6: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xab324]; syscall; 
0x000000004206f6: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xab8e4]; syscall; 
0x0000000042038a: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xabc50]; syscall; 
0x00000000420048: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xabf92]; syscall; 
0x0000000041eae2: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xad4f8]; syscall; 
0x0000000041e842: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xad798]; syscall; 
0x0000000041e4ee: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xadaec]; syscall; 
0x00000000418664: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb45f6]; syscall; 
0x00000000410773: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbc387]; syscall; 
0x00000000410633: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbc4c7]; syscall; 
0x000000004103fc: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbc6fe]; syscall; 
0x000000004103c1: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbc739]; syscall; 
0x000000004102dd: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbc81d]; syscall; 
0x00000000406d11: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc4e51]; syscall; 
0x0000000040536e: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc67bc]; syscall; 
0x000000004041ef: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc7893]; syscall; 
0x000000004041c1: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc78c1]; syscall; 
0x00000000404075: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc7a0d]; syscall; 
0x000000004012cd: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xca8ad]; syscall; 
0x0000000040143c: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x000000004266ed: mov edx, 0x1; mov esi, 0x81; mov eax, ebx; syscall; 
0x0000000042658d: mov edx, 0x1; mov esi, 0x81; mov rdi, r12; mov eax, 0xca; syscall; 
0x00000000427b20: mov edx, 0x1; mov esi, 0x81; mov rdi, r13; mov eax, 0xca; syscall; 
0x00000000428761: mov edx, 0x1; mov esi, 0x81; mov rdi, r15; mov eax, 0xca; syscall; 
0x00000000423422: mov edx, 0x1; mov esi, 0x81; mov rdi, rbp; mov eax, 0xca; syscall; 
0x000000004274e6: mov edx, 0x1; mov esi, 0x81; mov rdi, rbx; mov eax, 0xca; syscall; 
0x00000000419f31: mov edx, 0x1; mov rdi, r15; call qword ptr [rbp+0x80]; 
0x0000000041ccef: mov edx, 0x1; mov rdi, rbp; call qword ptr [rax+0x80]; 
0x0000000041c2a9: mov edx, 0x1; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x0000000041d4b9: mov edx, 0x1; mov rdi, rbx; call qword ptr [rbp+0x48]; 
0x0000000041a88b: mov edx, 0x1; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x0000000041b2e8: mov edx, 0x1; mov rsi, rbx; mov edi, 0x2; mov eax, r9d; syscall; 
0x000000004216aa: mov edx, 0x2; mov esi, 0x80; mov eax, 0xca; syscall; 
0x00000000419d3b: mov edx, 0x2; mov rdi, r15; call qword ptr [r13+0x80]; 
0x0000000041c1d5: mov edx, 0x2; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x0000000041d3dc: mov edx, 0x2; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x00000000402891: mov edx, 0x3c; nop [rax+rax]; xor edi, edi; mov eax, edx; syscall; 
0x0000000041bcfa: mov edx, 0x4c000000; mov edx, ebp; mov rsi, r12; mov rdi, rbp; call qword ptr [r15+0x40]; 
0x00000000434f56: mov edx, 0x63490006; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000045d3aa: mov edx, 0x64; test eax, eax; cmove eax, edx; ret; 
0x0000000048f742: mov edx, 0x894830e8; or [r8+0x2], r15b; ret; 
0x0000000046ddea: mov edx, 0x8; mov eax, 0xd; syscall; 
0x0000000046df8c: mov edx, 0x8; mov rsi, r8; mov eax, 0xe; syscall; 
0x00000000420b6b: mov edx, 0x90fffffe; endbr64; mov rax, 0xffffffffffffffff; ret; 
0x00000000497799: mov edx, 0xfc0c7; add [rax], al; syscall; 
0x00000000459c89: mov edx, 0xffffffc0; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000459ec1: mov edx, 0xffffffc0; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000046dbe3: mov edx, 0xffffffe0; add rax, 0x200; mov fs:[rdx], rax; ret; 
0x0000000046db0f: mov edx, 0xffffffe0; mov fs:[rdx], rax; ret; 
0x00000000462d0b: mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x0000000041e4c5: mov edx, [0x18]; test edx, edx; jne short 0x000000000041e4e0; sub dword ptr [rip+0xadb19], 0x1; ret; 
0x00000000420c91: mov edx, [0x18]; test edx, edx; jne short 0x0000000000420ca8; sub dword ptr [rip+0xab34d], 0x1; ret; 
0x000000004756cf: mov edx, [0x18]; test edx, edx; jne short 0x00000000004756e0; sub dword ptr [rdi], 0x1; ret; 
0x00000000402029: mov edx, [rax]; mov rax, [rbp-0x8]; mov rax, [rax+0x8]; mov rdi, rax; call rdx; 
0x0000000041c089: mov edx, [rbp+0x40]; sub rdx, rsi; mov [rsp], rcx; mov rdi, rbp; call rax; 
0x0000000048778e: mov edx, [rbp-0x90]; call r10; 
0x00000000487cef: mov edx, [rbp-0xd8]; mov [rbp-0xf0], r11; mov [rbp-0xd8], r10; call r15; 
0x000000004875e0: mov edx, [rbp-0xf8]; mov r11, [rbp-0xf0]; nop [rax]; mov [rbp-0xf0], r11; call r10; 
0x0000000048fdbd: mov edx, [rbx+0x10]; mov [rdx], rax; pop rbx; ret; 
0x0000000041b9e6: mov edx, [rbx+0x40]; mov rdi, rbx; sub rdx, rsi; call qword ptr [r12+0x70]; 
0x000000004193ad: mov edx, [rbx+0x40]; mov rdi, rbx; sub rdx, rsi; call qword ptr [rax+0x70]; 
0x0000000044506f: mov edx, [rcx+rdx*4]; mov eax, [rcx+rax*4]; sub eax, edx; ret; 
0x0000000044379d: mov edx, [rcx+rdx*4]; sub eax, edx; ret; 
0x0000000045d83a: mov edx, [rcx+rdx]; lea rcx, [rip-0x64]; mov [rax+0x10], rcx; mov [rax+0x8], rdx; ret; 
0x0000000045d53e: mov edx, [rcx+rdx]; test edx, edx; jne short 0x000000000045d550; ret; 
0x0000000048fd45: mov edx, [rdi+0x30]; mov [rax], rdx; pop rbx; ret; 
0x00000000419aa8: mov edx, [rdi+0x40]; sub rdx, rsi; mov [rsp+0x8], rcx; mov rdi, r15; call rax; 
0x0000000048fda4: mov edx, [rdi+0x458]; mov [rax], rdx; pop rbx; ret; 
0x000000004189d4: mov edx, [rdi+0xa0]; mov [rdx+0xe0], rcx; ret; 
0x00000000499590: mov edx, [rdx]; mov rax, [rsp+0x8]; mov [rsp+0x10], r10; call rax; 
0x000000004902ff: mov edx, [rip+0x3c193]; add word ptr [rdx+rax*2], 0x1; ret; 
0x0000000040285a: mov edx, [rip+0xc9838]; mov edi, [rsp+0xc]; mov rsi, [rsp+0x10]; mov rax, [rsp+0x18]; call rax; 
0x000000004027fd: mov edx, [rip+0xc9895]; mov rsi, [rsp+0x10]; mov edi, [rsp+0xc]; call rbp; 
0x0000000043bde1: mov edx, [rsi+0x1]; mov cx, [rsi]; mov [rdi+0x1], dx; mov [rdi], cx; ret; 
0x0000000043bd00: mov edx, [rsi+0x1]; mov ecx, [rsi]; mov [rdi+0x1], edx; mov [rdi], ecx; ret; 
0x0000000043bb41: mov edx, [rsi+0x1]; mov rcx, [rsi]; mov [rdi+0x1], rdx; mov [rdi], rcx; ret; 
0x0000000047691a: mov edx, [rsi+0x20]; mov rdi, r13; sub rdx, rsi; sar rdx, 0x2; call qword ptr [r12+0x38]; 
0x000000004122d1: mov edx, [rsi+0x20]; mov rdi, r15; sub rdx, rsi; call qword ptr [rbx+0x38]; 
0x0000000043bc90: mov edx, [rsi+0x2]; mov ecx, [rsi]; mov [rdi+0x2], edx; mov [rdi], ecx; ret; 
0x0000000043bad1: mov edx, [rsi+0x2]; mov rcx, [rsi]; mov [rdi+0x2], rdx; mov [rdi], rcx; ret; 
0x00000000453cc2: mov edx, [rsi+0x3]; mov [rdi], ecx; mov [rdi+0x3], edx; lea rax, [rdi+0x6]; ret; 
0x00000000453682: mov edx, [rsi+0x3]; mov [rdi], ecx; mov [rdi+0x3], edx; ret; 
0x0000000043bc20: mov edx, [rsi+0x3]; mov ecx, [rsi]; mov [rdi+0x3], edx; mov [rdi], ecx; ret; 
0x0000000043ba61: mov edx, [rsi+0x3]; mov rcx, [rsi]; mov [rdi+0x3], rdx; mov [rdi], rcx; ret; 
0x00000000453ca3: mov edx, [rsi+0x4]; mov [rdi], ecx; mov [rdi+0x4], dx; lea rax, [rdi+0x5]; ret; 
0x00000000453673: mov edx, [rsi+0x4]; mov [rdi], ecx; mov [rdi+0x4], dx; ret; 
0x0000000043b9f1: mov edx, [rsi+0x4]; mov rcx, [rsi]; mov [rdi+0x4], rdx; mov [rdi], rcx; ret; 
0x00000000453d54: mov edx, [rsi+0x5]; mov [rdi], rcx; mov [rdi+0x5], rdx; lea rax, [rdi+0xc]; ret; 
0x000000004536e4: mov edx, [rsi+0x5]; mov [rdi], rcx; mov [rdi+0x5], rdx; ret; 
0x0000000043b981: mov edx, [rsi+0x5]; mov rcx, [rsi]; mov [rdi+0x5], rdx; mov [rdi], rcx; ret; 
0x00000000453d74: mov edx, [rsi+0x6]; mov [rdi], rcx; mov [rdi+0x6], rdx; lea rax, [rdi+0xd]; ret; 
0x000000004536f4: mov edx, [rsi+0x6]; mov [rdi], rcx; mov [rdi+0x6], rdx; ret; 
0x0000000043b911: mov edx, [rsi+0x6]; mov rcx, [rsi]; mov [rdi+0x6], rdx; mov [rdi], rcx; ret; 
0x00000000453d13: mov edx, [rsi+0x7]; mov [rdi], rcx; mov [rdi+0x7], edx; lea rax, [rdi+0xa]; ret; 
0x000000004536c3: mov edx, [rsi+0x7]; mov [rdi], rcx; mov [rdi+0x7], edx; ret; 
0x00000000453d94: mov edx, [rsi+0x7]; mov [rdi], rcx; mov [rdi+0x7], rdx; lea rax, [rdi+0xe]; ret; 
0x00000000453704: mov edx, [rsi+0x7]; mov [rdi], rcx; mov [rdi+0x7], rdx; ret; 
0x0000000043b8a1: mov edx, [rsi+0x7]; mov rcx, [rsi]; mov [rdi+0x7], rdx; mov [rdi], rcx; ret; 
0x00000000453cf4: mov edx, [rsi+0x8]; mov [rdi], rcx; mov [rdi+0x8], dx; lea rax, [rdi+0x9]; ret; 
0x000000004536b4: mov edx, [rsi+0x8]; mov [rdi], rcx; mov [rdi+0x8], dx; ret; 
0x00000000453d33: mov edx, [rsi+0x8]; mov [rdi], rcx; mov [rdi+0x8], edx; lea rax, [rdi+0xb]; ret; 
0x000000004536d3: mov edx, [rsi+0x8]; mov [rdi], rcx; mov [rdi+0x8], edx; ret; 
0x00000000435ca1: mov edx, [rsi-0x2]; mov [rdi-0x2], dx; ret; 
0x00000000435e81: mov edx, [rsi-0x3]; mov cx, [rsi-0x2]; mov [rdi-0x3], dx; mov [rdi-0x2], cx; ret; 
0x00000000435a98: mov edx, [rsi-0x4]; mov [rdi-0x11], r11; mov [rdi-0x9], rcx; mov [rdi-0x4], edx; ret; 
0x00000000435c78: mov edx, [rsi-0x4]; mov [rdi-0x12], r11; mov [rdi-0xa], rcx; mov [rdi-0x4], edx; ret; 
0x00000000435e58: mov edx, [rsi-0x4]; mov [rdi-0x13], r11; mov [rdi-0xb], rcx; mov [rdi-0x4], edx; ret; 
0x00000000436038: mov edx, [rsi-0x4]; mov [rdi-0x14], r11; mov [rdi-0xc], rcx; mov [rdi-0x4], edx; ret; 
0x00000000436060: mov edx, [rsi-0x4]; mov [rdi-0x4], edx; ret; 
0x00000000435ab4: mov edx, [rsi-0x4]; mov [rdi-0x9], rcx; mov [rdi-0x4], edx; ret; 
0x00000000435c94: mov edx, [rsi-0x4]; mov [rdi-0xa], rcx; mov [rdi-0x4], edx; ret; 
0x00000000435e74: mov edx, [rsi-0x4]; mov [rdi-0xb], rcx; mov [rdi-0x4], edx; ret; 
0x00000000436054: mov edx, [rsi-0x4]; mov [rdi-0xc], rcx; mov [rdi-0x4], edx; ret; 
0x00000000436260: mov edx, [rsi-0x5]; mov ecx, [rsi-0x4]; mov [rdi-0x5], edx; mov [rdi-0x4], ecx; ret; 
0x00000000436460: mov edx, [rsi-0x6]; mov ecx, [rsi-0x4]; mov [rdi-0x6], edx; mov [rdi-0x4], ecx; ret; 
0x00000000436660: mov edx, [rsi-0x7]; mov ecx, [rsi-0x4]; mov [rdi-0x7], edx; mov [rdi-0x4], ecx; ret; 
0x000000004358d5: mov edx, [rsi-0x8]; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x00000000436229: mov edx, [rsi-0x8]; mov [rdi-0x15], r11; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000436429: mov edx, [rsi-0x8]; mov [rdi-0x16], r11; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000436629: mov edx, [rsi-0x8]; mov [rdi-0x17], r11; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x000000004358b9: mov edx, [rsi-0x8]; mov [rdi-0x18], r10; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x000000004358f1: mov edx, [rsi-0x8]; mov [rdi-0x8], rdx; ret; 
0x00000000436245: mov edx, [rsi-0x8]; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000436445: mov edx, [rsi-0x8]; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000436645: mov edx, [rsi-0x8]; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043b3d1: mov edx, [rsi-0x9]; mov ecx, [rsi-0x4]; mov [rdi-0x9], rdx; mov [rdi-0x4], ecx; ret; 
0x0000000043b351: mov edx, [rsi-0xa]; mov ecx, [rsi-0x4]; mov [rdi-0xa], rdx; mov [rdi-0x4], ecx; ret; 
0x0000000043b2d1: mov edx, [rsi-0xb]; mov ecx, [rsi-0x4]; mov [rdi-0xb], rdx; mov [rdi-0x4], ecx; ret; 
0x0000000043b251: mov edx, [rsi-0xc]; mov ecx, [rsi-0x4]; mov [rdi-0xc], rdx; mov [rdi-0x4], ecx; ret; 
0x0000000043b1c1: mov edx, [rsi-0xd]; mov rcx, [rsi-0x8]; mov [rdi-0xd], rdx; mov [rdi-0x8], rcx; ret; 
0x0000000043b131: mov edx, [rsi-0xe]; mov rcx, [rsi-0x8]; mov [rdi-0xe], rdx; mov [rdi-0x8], rcx; ret; 
0x0000000043b0a1: mov edx, [rsi-0xf]; mov rcx, [rsi-0x8]; mov [rdi-0xf], rdx; mov [rdi-0x8], rcx; ret; 
0x00000000453c61: mov edx, [rsi]; mov [rdi], dx; lea rax, [rdi+0x1]; ret; 
0x00000000453631: mov edx, [rsi]; mov [rdi], dx; ret; 
0x00000000453c80: mov edx, [rsi]; mov [rdi], edx; lea rax, [rdi+0x3]; ret; 
0x000000004542d0: mov edx, [rsi]; mov [rdi], edx; lea rax, [rdi+0x3]; vzeroupper; ret; 
0x0000000043bd70: mov edx, [rsi]; mov [rdi], edx; ret; 
0x000000004500a0: mov edx, [rsi]; mov [rdi], edx; vzeroupper; ret; 
0x00000000453cd1: mov edx, [rsi]; mov [rdi], rdx; lea rax, [rdi+0x7]; ret; 
0x0000000043bbb1: mov edx, [rsi]; mov [rdi], rdx; ret; 
0x00000000459c2e: mov edx, [rsp+0x18]; xor rdx, fs:[0x28]; jne short 0x0000000000459c51; add rsp, 0x28; ret; 
0x0000000045ab91: mov edx, [rsp+0x18]; xor rdx, fs:[0x28]; jne short 0x000000000045aba5; add rsp, 0x28; ret; 
0x0000000048ff1d: mov edx, [rsp+0x28]; xor rdx, fs:[0x28]; jne short 0x000000000048ff31; add rsp, 0x38; ret; 
0x0000000048ca66: mov edx, [rsp+0x38]; mov rcx, [rsp+0x40]; add rsp, 0x48; jmp qword ptr [rax]; 
0x0000000048c9e4: mov edx, [rsp+0x38]; mov rcx, [rsp+0x40]; add rsp, 0x58; jmp qword ptr [rax]; 
0x000000004634b5: mov edx, [rsp+0x68]; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x60]; mov rax, [rsp+0x18]; call rax; 
0x0000000049a927: mov edx, [rsp]; mov rdi, r14; call rbp; 
0x00000000457a5c: mov edx, eax; and edx, 0xf; movsxd rax, [rsi+rdx*4]; add rax, rsi; notrack jmp rax; 
0x0000000040f7b0: mov edx, eax; mov eax, 0xea; syscall; 
0x00000000458078: mov edx, eax; mov eax, [r8+rax*4]; sub eax, [r8+r9*4]; je short 0x0000000000458060; ret; 
0x000000004028ec: mov edx, eax; mov esi, edx; mov edi, 0x3002; mov eax, 0x9e; syscall; 
0x00000000420866: mov edx, eax; mov rax, [rax]; test rax, rax; jne short 0x0000000000420860; ret; 
0x000000004771cb: mov edx, eax; mov rsi, r12; mov rdi, r13; call qword ptr [r15+0x38]; 
0x0000000041cd2d: mov edx, eax; mov rsi, r12; mov rdi, rbp; call qword ptr [rax+0x78]; 
0x00000000471a27: mov edx, eax; mov rsi, r14; mov rdi, r12; mov [rbp-0xe8], r8; call rax; 
0x0000000045a8cb: mov edx, eax; mov rsi, r9; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x00000000427f74: mov edx, eax; pop rbx; pop rbp; pop r12; jmp rax; 
0x00000000495420: mov edx, ebp; add rax, [rbx]; mov rsi, r12; mov edi, ebp; call rax; 
0x00000000478762: mov edx, ebp; call qword ptr [rax+0x38]; 
0x00000000458e29: mov edx, ebp; call rbx; 
0x0000000045ad2a: mov edx, ebp; mov esi, 0x1; call r12; 
0x0000000049b5d1: mov edx, ebp; mov esi, 0x40; mov rdi, r13; call rbx; 
0x000000004584e8: mov edx, ebp; mov r9, [rsp+0x10]; mov rdi, r12; mov rsi, [rsp+0x18]; call rbx; 
0x0000000046eb13: mov edx, ebp; mov rdi, r12; call rbx; 
0x00000000412794: mov edx, ebp; mov rsi, r10; mov rdi, r15; call qword ptr [rbx+0x38]; 
0x00000000412e39: mov edx, ebp; mov rsi, r10; mov rdi, r15; call qword ptr [rcx+0x38]; 
0x0000000046e20e: mov edx, ebp; mov rsi, r12; call rbx; 
0x00000000403079: mov edx, ebp; mov rsi, r12; mov edi, ebp; call qword ptr [r15+rbx*8]; 
0x000000004955bd: mov edx, ebp; mov rsi, r12; mov edi, ebp; call qword ptr [rax]; 
0x00000000495461: mov edx, ebp; mov rsi, r12; mov edi, ebp; call qword ptr [rbx]; 
0x0000000046e231: mov edx, ebp; mov rsi, r12; mov rdi, r13; call rbx; 
0x000000004124eb: mov edx, ebp; mov rsi, r12; mov rdi, r15; call qword ptr [rcx+0x38]; 
0x0000000041bcff: mov edx, ebp; mov rsi, r12; mov rdi, rbp; call qword ptr [r15+0x40]; 
0x0000000041c11f: mov edx, ebp; mov rsi, r12; mov rdi, rbp; call qword ptr [r15+0x80]; 
0x0000000041d5a5: mov edx, ebp; mov rsi, r12; mov rdi, rbx; call qword ptr [r14+0x78]; 
0x0000000046e24c: mov edx, ebp; mov rsi, r15; mov rdi, r12; call rbx; 
0x0000000041c732: mov edx, ebp; mov rsi, r15; mov rdi, rbp; call qword ptr [rax+0x40]; 
0x00000000458394: mov edx, ebp; xor r8d, r8d; mov rdi, r12; lea r9, [rsp+0x30]; call rbx; 
0x000000004759e2: mov edx, ebx; call qword ptr [r13+0x38]; 
0x00000000478c5f: mov edx, ebx; call qword ptr [rax+0x38]; 
0x0000000045abca: mov edx, ebx; mov rdi, rbp; mov eax, 0x9; syscall; 
0x00000000412b7e: mov edx, ebx; mov rsi, r12; mov rdi, r15; call qword ptr [rcx+0x38]; 
0x00000000479dc7: mov edx, ebx; mov rsi, r9; mov rdi, r12; call qword ptr [rax+0x38]; 
0x00000000480510: mov edx, ecx; cmp r9d, 0x1; ja short 0x0000000000480548; mov eax, 0x106; syscall; 
0x00000000490285: mov edx, ecx; mov eax, 0x11; syscall; 
0x0000000045d425: mov edx, ecx; mov eax, 0x19; syscall; 
0x000000004995b9: mov edx, ecx; mov rdi, r15; lea rbx, [r12+rcx*8]; mov rsi, [rbx]; call rax; 
0x0000000041588a: mov edx, ecx; mov rsi, r11; mov rdi, r12; mov [rbp-0x4f0], r9d; call qword ptr [rax+0x38]; 
0x0000000041534d: mov edx, ecx; mov rsi, r11; mov rdi, r12; mov [rbp-0x4f8], r9d; call qword ptr [rbx+0x38]; 
0x00000000477804: mov edx, ecx; mov rsi, r12; mov rdi, r13; call qword ptr [r15+0x38]; 
0x00000000476ddc: mov edx, ecx; mov rsi, r12; mov rdi, r13; call qword ptr [r8+0x38]; 
0x00000000475f6b: mov edx, ecx; mov rsi, r12; mov rdi, r13; call qword ptr [rcx+0x38]; 
0x00000000478e3f: mov edx, ecx; mov rsi, r9; mov rdi, r12; mov [rbp-0x4d8], r11; call qword ptr [r8+0x38]; 
0x00000000479444: mov edx, ecx; mov rsi, r9; mov rdi, r12; mov [rbp-0x4d8], r11; call qword ptr [rbx+0x38]; 
0x00000000414243: mov edx, edi; call qword ptr [rax+0x38]; 
0x0000000049aa50: mov edx, edi; mov rsi, [r12+r14*8+0x10]; mov rdi, r13; call rax; 
0x000000004148ef: mov edx, edi; mov rsi, r11; mov rdi, r12; call qword ptr [rcx+0x38]; 
0x0000000046e56c: mov edx, edi; mov rsi, r12; mov rdi, r14; call rbp; 
0x0000000041c8ce: mov edx, edi; mov rsi, r14; mov rdi, rbx; call qword ptr [rbp+0x70]; 
0x00000000414710: mov edx, edi; mov rsi, r8; mov rdi, r12; call qword ptr [rax+0x38]; 
0x000000004574f5: mov edx, edi; rep stosb [rdi]; mov rax, rdx; ret; 
0x0000000040eea7: mov edx, edx; movsxd rdx, [rsi+rdx*4]; add rdx, rsi; notrack jmp rdx; 
0x0000000040f959: mov edx, esi; mov rax, [rsp]; call rax; 
0x0000000040fa49: mov edx, esi; mov rax, [rsp]; mov rsi, r12; mov rdi, r13; call rax; 
0x0000000040f8c5: mov edx, esi; mov rsi, r13; mov rdi, r12; call rax; 
0x00000000411543: mov edx, esp; call qword ptr [r13+0x38]; 
0x0000000046e317: mov edx, esp; call rbp; 
0x000000004805d1: mov edx, esp; mov eax, 0x10; syscall; 
0x0000000045a849: mov edx, esp; mov esi, 0x10; mov eax, 0x48; syscall; 
0x0000000047c7a5: mov edx, esp; mov rsi, r14; mov rdi, rbx; call qword ptr [r15+0x38]; 
0x00000000459d6a: mov edx, esp; mov rsi, rbp; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x00000000419c67: mov edx, esp; mov rsi, rbp; mov rdi, r15; call qword ptr [r14+0x80]; 
0x0000000047c57f: mov edx, esp; mov rsi, rbp; mov rdi, rbx; call qword ptr [r13+0x38]; 
0x00000000418fd9: mov edx, esp; mov rsi, rbp; mov rdi, rbx; call qword ptr [r13+0x58]; 
0x0000000041e4c4: mov edx, fs:[0x18]; test edx, edx; jne short 0x000000000041e4e0; sub dword ptr [rip+0xadb19], 0x1; ret; 
0x00000000420c90: mov edx, fs:[0x18]; test edx, edx; jne short 0x0000000000420ca8; sub dword ptr [rip+0xab34d], 0x1; ret; 
0x000000004756ce: mov edx, fs:[0x18]; test edx, edx; jne short 0x00000000004756e0; sub dword ptr [rdi], 0x1; ret; 
0x00000000459d68: mov edx, r12d; mov rsi, rbp; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x00000000419c66: mov edx, r12d; mov rsi, rbp; mov rdi, r15; call qword ptr [r14+0x80]; 
0x0000000045ad29: mov edx, r13d; mov esi, 0x1; call r12; 
0x0000000041c11e: mov edx, r13d; mov rsi, r12; mov rdi, rbp; call qword ptr [r15+0x80]; 
0x0000000040f7af: mov edx, r8d; mov eax, 0xea; syscall; 
0x0000000045a8ca: mov edx, r8d; mov rsi, r9; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x0000000045a8c9: mov edx, r8d; mov rsi, r9; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x0000000045d558: mov es, [rbx]; add al, 0x11; ret; 
0x0000000041d0f6: mov es, [rcx]; add [rax], al; mov rsi, rsp; mov rdi, rbp; call qword ptr [r13+0x90]; 
0x00000000437d26: mov es, [rsi]; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000045a7bd: mov esi, 0x10; mov eax, 0x48; syscall; 
0x0000000045ad2c: mov esi, 0x1; call r12; 
0x00000000498e9e: mov esi, 0x1; mov edi, 0x1; call rax; 
0x0000000047bfa0: mov esi, 0x1; mov rdi, rbx; call r8; 
0x00000000417d0c: mov esi, 0x1; mov rdi, rbx; call rax; 
0x00000000498a82: mov esi, 0x1a; mov edi, 0x1; call rax; 
0x0000000041212a: mov esi, 0x20e883c3; cdqe; movzx eax, byte ptr [rdi+rax]; jmp qword ptr [rsi+rax*8]; 
0x00000000414c2f: mov esi, 0x20e883c7; cdqe; movzx edx, byte ptr [rbx+rax]; lea rax, [rip+0xb19df]; jmp qword ptr [rax+rdx*8]; 
0x00000000414a2c: mov esi, 0x20e883c7; cdqe; movzx edx, byte ptr [rbx+rax]; lea rax, [rip+0xb1ae2]; jmp qword ptr [rax+rdx*8]; 
0x00000000414e77: mov esi, 0x358d48c7; mov al, [0x984820e883000b18]; movzx eax, byte ptr [rbx+rax]; jmp qword ptr [rsi+rax*8]; 
0x0000000045ad0d: mov esi, 0x3; je short 0x000000000045ad45; mov rdi, rbp; xor esi, esi; call r12; 
0x0000000045ad9d: mov esi, 0x3; je short 0x000000000045add5; mov rdi, rbp; xor esi, esi; call r12; 
0x0000000045b984: mov esi, 0x3; je short 0x000000000045b9ba; mov rdi, rbp; xor esi, esi; call r12; 
0x0000000045ba35: mov esi, 0x3; je short 0x000000000045ba6d; mov rdi, rbp; xor esi, esi; call r12; 
0x0000000045799c: mov esi, 0x3ef00148; jmp rax; 
0x0000000049b5d3: mov esi, 0x40; mov rdi, r13; call rbx; 
0x00000000434b66: mov esi, 0x63490006; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000047305f: mov esi, 0x77cf390e; jrcxz 0x00000000004730aa; mov eax, eax; ret; 
0x000000004216af: mov esi, 0x80; mov eax, 0xca; syscall; 
0x0000000047e1bc: mov esi, 0x80; syscall; 
0x0000000049cf1d: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x2f3b2]; syscall; 
0x0000000047558d: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x56d52]; syscall; 
0x00000000475309: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x56fd2]; syscall; 
0x00000000473285: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x5904e]; syscall; 
0x00000000473145: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x5918e]; syscall; 
0x0000000046f67d: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x5cc52]; syscall; 
0x0000000046f5b8: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x5cd17]; syscall; 
0x0000000046f416: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x5ceb9]; syscall; 
0x0000000046f33c: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x5cf93]; syscall; 
0x00000000461b6d: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x6b0f2]; syscall; 
0x00000000461a01: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x6b25e]; syscall; 
0x000000004618e1: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x6b37e]; syscall; 
0x00000000458be9: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x74076]; syscall; 
0x00000000428e09: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa0d46]; syscall; 
0x00000000426209: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa3946]; syscall; 
0x000000004261a9: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa39a6]; syscall; 
0x00000000425de9: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa3d66]; syscall; 
0x00000000425b89: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa3fc6]; syscall; 
0x000000004255b1: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa459e]; syscall; 
0x00000000425579: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa45d6]; syscall; 
0x00000000427169: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa4ef6]; syscall; 
0x0000000042671d: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa5932]; syscall; 
0x0000000042287a: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa97d5]; syscall; 
0x00000000422849: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa9816]; syscall; 
0x000000004225c9: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa9a96]; syscall; 
0x000000004220a5: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa9fba]; syscall; 
0x00000000420cbb: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xab324]; syscall; 
0x000000004206fb: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xab8e4]; syscall; 
0x0000000042038f: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xabc50]; syscall; 
0x0000000042004d: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xabf92]; syscall; 
0x0000000041eae7: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xad4f8]; syscall; 
0x0000000041e847: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xad798]; syscall; 
0x0000000041e4f3: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xadaec]; syscall; 
0x00000000418669: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb45f6]; syscall; 
0x00000000410778: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbc387]; syscall; 
0x00000000410638: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbc4c7]; syscall; 
0x00000000410401: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbc6fe]; syscall; 
0x000000004103c6: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbc739]; syscall; 
0x000000004102e2: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbc81d]; syscall; 
0x00000000406d16: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc4e51]; syscall; 
0x00000000405373: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc67bc]; syscall; 
0x000000004041f4: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc7893]; syscall; 
0x000000004041c6: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc78c1]; syscall; 
0x0000000040407a: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc7a0d]; syscall; 
0x000000004012d2: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xca8ad]; syscall; 
0x00000000401441: mov esi, 0x81; mov eax, 0xca; syscall; 
0x000000004266f2: mov esi, 0x81; mov eax, ebx; syscall; 
0x00000000426592: mov esi, 0x81; mov rdi, r12; mov eax, 0xca; syscall; 
0x00000000427b25: mov esi, 0x81; mov rdi, r13; mov eax, 0xca; syscall; 
0x00000000428766: mov esi, 0x81; mov rdi, r15; mov eax, 0xca; syscall; 
0x00000000423427: mov esi, 0x81; mov rdi, rbp; mov eax, 0xca; syscall; 
0x000000004274eb: mov esi, 0x81; mov rdi, rbx; mov eax, 0xca; syscall; 
0x00000000410872: mov esi, 0x83480143; ret; 
0x00000000498a05: mov esi, 0xa; mov edi, 0x1; call rax; 
0x0000000047d710: mov esi, 0xffffffff; call qword ptr [rax+0x18]; 
0x0000000041bad9: mov esi, 0xffffffff; mov rdi, r8; call qword ptr [r15+0x18]; 
0x00000000419708: mov esi, 0xffffffff; mov rdi, r8; call qword ptr [rax+0x18]; 
0x0000000041cc3a: mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rax+0x18]; 
0x0000000041ee91: mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rbx+0x18]; 
0x000000004207c5: mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [r12+0x18]; 
0x000000004205ff: mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [r13+0x18]; 
0x0000000041fec8: mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [r15+0x18]; 
0x0000000041ec2a: mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp+0x18]; 
0x0000000041fd83: mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp+0x30]; 
0x00000000410285: mov esi, [rax+0x20]; mov edi, ebp; ror rdx, 0x11; xor rdx, fs:[0x30]; call rdx; 
0x0000000045b369: mov esi, [rax]; mov rdi, r14; mov rax, [rbp-0x58]; mov r15d, r13d; call rax; 
0x0000000045bbdf: mov esi, [rbp+0x10]; test r14, r14; jne 0x000000000045bc90; mov rdi, [r13]; call rbx; 
0x0000000045bbaf: mov esi, [rbp+0x10]; test r14, r14; jne 0x000000000045bcf0; mov rdi, [r13]; call rbx; 
0x0000000045bb7f: mov esi, [rbp+0x10]; test r14, r14; jne 0x000000000045bd50; mov rdi, [r13]; call rbx; 
0x0000000045bc0b: mov esi, [rbp+0x10]; test r14, r14; jne short 0x000000000045bc30; mov rdi, [r13]; call rbx; 
0x0000000049a922: mov esi, [rbp+rdi+0x8]; mov rdx, [r12]; mov rdi, r14; call rbp; 
0x00000000498edc: mov esi, [rbp-0x10]; mov r15, [rbp-0x8]; leave; ret; 
0x000000004611c8: mov esi, [rbp-0x70]; mov rdi, rbx; call rsi; 
0x0000000040f951: mov esi, [rbp]; mov rdi, [r12]; mov rdx, r14; mov rax, [rsp]; call rax; 
0x000000004193a9: mov esi, [rbx+0x10]; mov rdx, [rbx+0x40]; mov rdi, rbx; sub rdx, rsi; call qword ptr [rax+0x70]; 
0x000000004995c3: mov esi, [rbx]; call rax; 
0x0000000045b2a0: mov esi, [rbx]; mov r13, rbx; mov rdi, rbp; call r12; 
0x00000000486d27: mov esi, [rbx]; mov rax, [rbx+0x10]; add rax, [r13]; call rax; 
0x0000000048b068: mov esi, [rdi+0x20]; mov rdi, [rdi+0x28]; bnd call r11; 
0x000000004122cd: mov esi, [rsi+0x18]; mov rdx, [r14+0x20]; mov rdi, r15; sub rdx, rsi; call qword ptr [rbx+0x38]; 
0x00000000456857: mov esi, [rsi]; mov [rdi+rdx-0x4], ecx; mov [rdi], esi; ret; 
0x00000000456848: mov esi, [rsi]; mov [rdi+rdx-0x8], rcx; mov [rdi], rsi; ret; 
0x0000000043eb90: mov esi, [rsi]; mov cx, [rcx-0x2]; mov [rdi], si; mov [r9-0x2], cx; ret; 
0x0000000043eb7e: mov esi, [rsi]; mov ecx, [rcx-0x4]; mov [rdi], esi; mov [r9-0x4], ecx; ret; 
0x0000000045aec6: mov esi, [rsi]; mov rax, [rsp+0x8]; mov rdi, r13; call rax; 
0x0000000043eb6b: mov esi, [rsi]; mov rcx, [rcx-0x8]; mov [rdi], rsi; mov [r9-0x8], rcx; ret; 
0x00000000402804: mov esi, [rsp+0x10]; mov edi, [rsp+0xc]; call rbp; 
0x00000000459f2d: mov esi, [rsp+0x10]; mov r8d, eax; mov edi, [rsp+0x8]; mov eax, 0x1; syscall; 
0x00000000459e8d: mov esi, [rsp+0x10]; mov r8d, eax; mov edi, [rsp+0x8]; xor eax, eax; syscall; 
0x00000000402865: mov esi, [rsp+0x10]; mov rax, [rsp+0x18]; call rax; 
0x0000000041f46e: mov esi, [rsp+0x10]; mov rdi, [rsp+0x8]; add rsp, 0x20; pop rbx; jmp rax; 
0x0000000046eb0e: mov esi, [rsp+0x10]; mov rdx, rbp; mov rdi, r12; call rbx; 
0x00000000426ed9: mov esi, [rsp+0x18]; add rsp, 0x18; jmp rax; 
0x000000004584f3: mov esi, [rsp+0x18]; call rbx; 
0x00000000458e21: mov esi, [rsp+0x18]; mov rcx, r12; mov rdx, r13; call rbx; 
0x000000004269c1: mov esi, [rsp+0x18]; pop rbx; pop rbp; pop r12; jmp rax; 
0x00000000460776: mov esi, [rsp+0x18]; xor r8d, r8d; call rbx; 
0x00000000428311: mov esi, [rsp+0x28]; mov rdi, r12; call rax; 
0x000000004270f1: mov esi, [rsp+0x38]; mov rdi, r14; call rax; 
0x00000000467279: mov esi, [rsp+0x40]; mov rdi, [rsp+0x38]; call r15; 
0x0000000046ac96: mov esi, [rsp+0x40]; mov rdi, [rsp+0x38]; lea r8, [rsp+0xa0]; call r15; 
0x00000000466c85: mov esi, [rsp+0x40]; mov rdi, [rsp+0x38]; mov rax, [rsp+0x20]; call rax; 
0x00000000465cf7: mov esi, [rsp+0x48]; mov rdi, [rsp+0x40]; call r14; 
0x00000000466245: mov esi, [rsp+0x48]; mov rdi, [rsp+0x40]; call rbx; 
0x00000000465104: mov esi, [rsp+0x50]; mov rdi, [rsp+0x48]; call r13; 
0x00000000465604: mov esi, [rsp+0x50]; mov rdi, [rsp+0x48]; call rbx; 
0x0000000046317e: mov esi, [rsp+0x50]; mov rdi, [rsp+0x58]; call r14; 
0x000000004646ce: mov esi, [rsp+0x50]; mov rdi, [rsp+0x58]; call r15; 
0x00000000463ee8: mov esi, [rsp+0x50]; mov rdi, [rsp+0x58]; call rbx; 
0x00000000464249: mov esi, [rsp+0x50]; mov rdi, [rsp+0x58]; mov rax, [rsp+0x18]; call rax; 
0x00000000464a70: mov esi, [rsp+0x50]; mov rdi, [rsp+0x58]; mov rax, [rsp+0x20]; call rax; 
0x00000000462ecf: mov esi, [rsp+0x50]; mov rdi, [rsp+0x58]; mov rax, [rsp+0x28]; call rax; 
0x00000000463c72: mov esi, [rsp+0x50]; mov rdi, [rsp+0x58]; mov rax, [rsp+0x30]; call rax; 
0x00000000468003: mov esi, [rsp+0x58]; mov rdi, [rsp+0x50]; call rbx; 
0x00000000469316: mov esi, [rsp+0x58]; mov rdi, [rsp+0x50]; mov rax, [rsp+0x18]; call rax; 
0x00000000467c19: mov esi, [rsp+0x58]; mov rdi, [rsp+0x50]; mov rax, [rsp+0x20]; call rax; 
0x000000004638fd: mov esi, [rsp+0x58]; mov rdi, [rsp+0x60]; call r15; 
0x000000004634ba: mov esi, [rsp+0x58]; mov rdi, [rsp+0x60]; mov rax, [rsp+0x18]; call rax; 
0x0000000041ed41: mov esi, [rsp+0xc]; mov rdi, [rsp]; add rsp, 0x10; pop rbx; jmp rax; 
0x0000000049aa53: mov esi, [rsp+rsi*8+0x10]; mov rdi, r13; call rax; 
0x0000000046df92: mov esi, eax; mov eax, 0xe; syscall; 
0x0000000040f7ad: mov esi, eax; mov edx, r8d; mov eax, 0xea; syscall; 
0x00000000414713: mov esi, eax; mov rdi, r12; call qword ptr [rax+0x38]; 
0x000000004147df: mov esi, eax; mov rdi, r12; sub r15, r8; mov rdx, r15; call qword ptr [rax+0x38]; 
0x00000000459d6d: mov esi, ebp; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x00000000459de3: mov esi, ebp; mov r8d, eax; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x0000000040fabe: mov esi, ebp; mov rax, [rsp]; mov r13, r15; add r15, r12; call rax; 
0x0000000040f8c8: mov esi, ebp; mov rdi, r12; call rax; 
0x0000000041423a: mov esi, ebp; mov rdi, r12; sub r15, r13; mov rdx, r15; call qword ptr [rax+0x38]; 
0x0000000046e311: mov esi, ebp; mov rdi, r14; mov rdx, r12; call rbp; 
0x00000000418e2e: mov esi, ebp; mov rdi, r15; call qword ptr [r14+0x38]; 
0x00000000419c6a: mov esi, ebp; mov rdi, r15; call qword ptr [r14+0x80]; 
0x00000000418e9b: mov esi, ebp; mov rdi, r15; call qword ptr [rbp+0x38]; 
0x0000000041ca5b: mov esi, ebp; mov rdi, rbx; call qword ptr [r12+0x80]; 
0x0000000047c582: mov esi, ebp; mov rdi, rbx; call qword ptr [r13+0x38]; 
0x00000000418fdc: mov esi, ebp; mov rdi, rbx; call qword ptr [r13+0x58]; 
0x0000000041024c: mov esi, ebp; ror rdx, 0x11; xor rdx, fs:[0x30]; call rdx; 
0x0000000048aa7f: mov esi, ebp; syscall; 
0x0000000041b2ee: mov esi, ebx; mov edi, 0x2; mov eax, r9d; syscall; 
0x000000004148f2: mov esi, ebx; mov rdi, r12; call qword ptr [rcx+0x38]; 
0x0000000041588d: mov esi, ebx; mov rdi, r12; mov [rbp-0x4f0], r9d; call qword ptr [rax+0x38]; 
0x00000000415350: mov esi, ebx; mov rdi, r12; mov [rbp-0x4f8], r9d; call qword ptr [rbx+0x38]; 
0x00000000415ae2: mov esi, ebx; mov rdi, r12; mov [rbp-0x508], r10d; mov [rbp-0x500], r11; call qword ptr [rax+0x38]; 
0x00000000413345: mov esi, ecx; mov [rbp-0x8f0], r10; mov [rbp-0x8e0], rdx; mov [rbp-0x8b8], rcx; call qword ptr [r11+rax*8-0x40]; 
0x00000000477bc6: mov esi, ecx; mov [rbp-0x908], r10; mov [rbp-0x900], rdx; mov [rbp-0x8d0], rcx; call qword ptr [r11+rax*8-0x40]; 
0x0000000040f7cd: mov esi, ecx; mov edi, 0x2; mov eax, 0xe; syscall; 
0x0000000045a8ce: mov esi, ecx; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x00000000479dca: mov esi, ecx; mov rdi, r12; call qword ptr [rax+0x38]; 
0x00000000478e42: mov esi, ecx; mov rdi, r12; mov [rbp-0x4d8], r11; call qword ptr [r8+0x38]; 
0x00000000479447: mov esi, ecx; mov rdi, r12; mov [rbp-0x4d8], r11; call qword ptr [rbx+0x38]; 
0x0000000047a0b3: mov esi, ecx; mov rdi, r12; mov [rbp-0x500], r11; mov [rbp-0x4f8], r9; call qword ptr [rax+0x38]; 
0x0000000045aa49: mov esi, edi; mov eax, 0x12e; xor edi, edi; syscall; 
0x0000000046e24f: mov esi, edi; mov rdi, r12; call rbx; 
0x0000000047d3c8: mov esi, edi; mov rdi, rbp; call qword ptr [r14+0x18]; 
0x0000000041c735: mov esi, edi; mov rdi, rbp; call qword ptr [rax+0x40]; 
0x00000000499479: mov esi, edi; test rax, rax; je short 0x0000000000499490; mov edi, 0x1; jmp rax; 
0x00000000459c6b: mov esi, edx; cmp r8d, 0x1; ja short 0x0000000000459ca0; mov eax, 0x4; syscall; 
0x00000000459cca: mov esi, edx; cmp r8d, 0x1; ja short 0x0000000000459d00; mov eax, 0x5; syscall; 
0x000000004804ab: mov esi, edx; cmp r8d, 0x1; ja short 0x00000000004804e0; mov eax, 0x6; syscall; 
0x000000004028ee: mov esi, edx; mov edi, 0x3002; mov eax, 0x9e; syscall; 
0x00000000412797: mov esi, edx; mov rdi, r15; call qword ptr [rbx+0x38]; 
0x00000000412e3c: mov esi, edx; mov rdi, r15; call qword ptr [rcx+0x38]; 
0x00000000471a2a: mov esi, esi; mov rdi, r12; mov [rbp-0xe8], r8; call rax; 
0x00000000476acd: mov esi, esi; mov rdi, r13; mov [rbp-0x970], r10d; mov [rbp-0x958], r9b; call rax; 
0x00000000412225: mov esi, esi; mov rdi, r15; mov [rbp-0x94c], r9d; mov [rbp-0x940], r11d; call rax; 
0x0000000047c7a8: mov esi, esi; mov rdi, rbx; call qword ptr [r15+0x38]; 
0x0000000041c8d1: mov esi, esi; mov rdi, rbx; call qword ptr [rbp+0x70]; 
0x000000004994e1: mov esi, esi; mov rdi, rbx; call r15; 
0x00000000428f91: mov esi, esp; call rax; 
0x0000000046e211: mov esi, esp; call rbx; 
0x0000000040307c: mov esi, esp; mov edi, ebp; call qword ptr [r15+rbx*8]; 
0x000000004955c0: mov esi, esp; mov edi, ebp; call qword ptr [rax]; 
0x00000000495464: mov esi, esp; mov edi, ebp; call qword ptr [rbx]; 
0x00000000495426: mov esi, esp; mov edi, ebp; call rax; 
0x0000000047fd41: mov esi, esp; mov edi, ebp; mov eax, 0xe4; syscall; 
0x000000004771ce: mov esi, esp; mov rdi, r13; call qword ptr [r15+0x38]; 
0x00000000476ddf: mov esi, esp; mov rdi, r13; call qword ptr [r8+0x38]; 
0x00000000475f6e: mov esi, esp; mov rdi, r13; call qword ptr [rcx+0x38]; 
0x0000000040fa50: mov esi, esp; mov rdi, r13; call rax; 
0x0000000046e234: mov esi, esp; mov rdi, r13; call rbx; 
0x0000000046e56f: mov esi, esp; mov rdi, r14; call rbp; 
0x000000004124ee: mov esi, esp; mov rdi, r15; call qword ptr [rcx+0x38]; 
0x0000000041cedf: mov esi, esp; mov rdi, rbp; call qword ptr [r13+0x90]; 
0x0000000041bd02: mov esi, esp; mov rdi, rbp; call qword ptr [r15+0x40]; 
0x0000000041c122: mov esi, esp; mov rdi, rbp; call qword ptr [r15+0x80]; 
0x0000000041bc99: mov esi, esp; mov rdi, rbp; call qword ptr [r15+0x90]; 
0x0000000041cd30: mov esi, esp; mov rdi, rbp; call qword ptr [rax+0x78]; 
0x0000000047c3d8: mov esi, esp; mov rdi, rbp; call qword ptr [rbx+0x90]; 
0x0000000041d5a8: mov esi, esp; mov rdi, rbx; call qword ptr [r14+0x78]; 
0x00000000427c82: mov esi, esp; pop r12; pop r13; jmp rax; 
0x0000000047d3c7: mov esi, r15d; mov rdi, rbp; call qword ptr [r14+0x18]; 
0x000000004535a2: mov esp, 0x1d8d4cd2; adc eax, 0x490004e4; movsxd ecx, [rbx+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000453bd2: mov esp, 0x1d8d4cd2; fiadd st, word ptr gs:[rax+rax]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000431981: mov esp, 0x448d48c0; cmp [rax], ah; ret; 
0x00000000431971: mov esp, 0x448d48c0; cmp [rax], dl; ret; 
0x00000000431951: mov esp, 0x448d48c0; cmp al, dh; ret; 
0x00000000434d6b: mov esp, 0x63490006; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000465293: mov esp, 0x8514; add [rax+0x39], cl; ret far; 
0x0000000041a619: mov esp, 0x8c48348; mov eax, ebx; pop rbx; pop rbp; ret; 
0x00000000402e5f: mov esp, 0x90005; add [rax-0x77], cl; ret; 
0x00000000454530: mov esp, 0xa8000000; jne 0x0000000000454600; lea rax, [rdi+0x7]; ret; 
0x0000000044fa12: mov esp, 0xc08348c0; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x00000000431e82: mov esp, 0xc08348c0; add rax, rdi; vzeroupper; ret; 
0x00000000431e72: mov esp, 0xc08348c0; and [rax+0x1], cl; clc; vzeroupper; ret; 
0x0000000043172a: mov esp, 0xc22948c0; jbe 0x00000000004319d0; add rax, rdi; add rax, rcx; ret; 
0x0000000047f30a: mov esp, 0xc22948c0; jbe 0x000000000047f5b0; add rax, rdi; add rax, rcx; ret; 
0x00000000431991: mov esp, 0xc22948c0; jbe short 0x00000000004319d0; add rax, rdi; ret; 
0x000000004319a1: mov esp, 0xc22948c0; jbe short 0x00000000004319d0; lea rax, [rdi+rax+0x10]; ret; 
0x000000004319b1: mov esp, 0xc22948c0; jbe short 0x00000000004319d0; lea rax, [rdi+rax+0x20]; ret; 
0x000000004319c1: mov esp, 0xc22948c0; jbe short 0x00000000004319d0; lea rax, [rdi+rax+0x30]; ret; 
0x0000000047f571: mov esp, 0xc22948c0; jbe short 0x000000000047f5b0; add rax, rdi; ret; 
0x0000000047f581: mov esp, 0xc22948c0; jbe short 0x000000000047f5b0; lea rax, [rdi+rax+0x10]; ret; 
0x0000000047f591: mov esp, 0xc22948c0; jbe short 0x000000000047f5b0; lea rax, [rdi+rax+0x20]; ret; 
0x0000000047f5a1: mov esp, 0xc22948c0; jbe short 0x000000000047f5b0; lea rax, [rdi+rax+0x30]; ret; 
0x00000000431de2: mov esp, 0xc23948c0; jbe short 0x0000000000431e50; add rax, rdi; vzeroupper; ret; 
0x0000000047f7b2: mov esp, 0xc23948c0; jbe short 0x000000000047f820; add rax, rdi; vzeroupper; ret; 
0x0000000044f395: mov esp, 0xc80148c0; add rax, rdi; vzeroupper; ret; 
0x0000000044f6a3: mov esp, 0xd00148d2; sub rax, rdi; ret; 
0x00000000459248: mov esp, 0xd00148d2; sub rax, rdi; shr rax, 0x2; ret; 
0x00000000423a41: mov esp, 0xd6e80007; loopne 0x0000000000423a48; jmp qword ptr [rsi+0xf]; 
0x00000000431a4b: mov esp, 0xf80148c0; add rax, rcx; ret; 
0x0000000044f927: mov esp, 0xf80148c0; add rax, rcx; sub rax, rdx; vzeroupper; ret; 
0x00000000431f17: mov esp, 0xf80148c0; add rax, rcx; vzeroupper; ret; 
0x00000000431961: mov esp, 0xf80148c0; ret; 
0x00000000459592: mov esp, 0xf80148c0; sub rax, rdx; shr rax, 0x2; vzeroupper; ret; 
0x0000000044f9e2: mov esp, 0xf80148c0; sub rax, rdx; vzeroupper; ret; 
0x00000000431e62: mov esp, 0xf80148c0; vzeroupper; ret; 
0x0000000045bad8: mov esp, [rbp+0x10]; test r12, r12; jne short 0x000000000045bb08; mov rdi, [rbp]; call rbx; 
0x0000000048d6dc: mov esp, eax; mov rbp, r9; nop; jmp rdx; 
0x0000000048b852: mov esp, ebx; mov rbx, [rsp]; add rsp, 0x18; bnd jmp r11; 
0x0000000048b039: mov esp, ebx; mov rbx, [rsp]; add rsp, 0x30; bnd jmp r11; 
0x0000000048b14b: mov esp, ebx; mov rbx, [rsp]; add rsp, 0x30; bnd ret; 
0x00000000499055: mov esp, ecx; pop rcx; jmp rcx; 
0x0000000045965d: mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000046db0a: mov fs:[rcx], rdx; mov rdx, 0xffffffffffffffe0; mov fs:[rdx], rax; ret; 
0x00000000459c91: mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000459ec9: mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x000000004806b1: mov fs:[rdx], eax; xor eax, eax; mov qword ptr [rip+0x4bc37], 0xffffffffffffffff; ret; 
0x0000000046db15: mov fs:[rdx], rax; ret; 
0x0000000048d5a1: mov qword ptr [r12], 0x0; mov rax, [rsp+0x10]; mov rdi, [rsp+0x18]; call rax; 
0x00000000410244: mov qword ptr [rax+0x10], 0x0; mov esi, ebp; ror rdx, 0x11; xor rdx, fs:[0x30]; call rdx; 
0x0000000047ddd1: mov qword ptr [rax+0x50], 0x0; movups [rax+0x40], xmm0; pop rbx; ret; 
0x0000000041fa74: mov qword ptr [rax+0x8], 0x0; movdqa xmm0, [rip+0x7fa8c]; mov dword ptr [rdi+0xc0], 0xffffffff; movups [rdi+0xa0], xmm0; ret; 
0x0000000041f9e4: mov qword ptr [rax+0x8], 0x0; movdqa xmm0, [rip+0x7fb1c]; mov dword ptr [rdi+0xc0], 0xffffffff; movups [rdi+0xa0], xmm0; ret; 
0x0000000041fb44: mov qword ptr [rax+0x8], 0x0; ret; 
0x0000000041fb3d: mov qword ptr [rax], 0x0; mov qword ptr [rax+0x8], 0x0; ret; 
0x0000000048fd9c: mov qword ptr [rax], 0x0; mov rdx, [rdi+0x458]; mov [rax], rdx; pop rbx; ret; 
0x000000004788a8: mov qword ptr [rbp-0x4c8], 0x0; mov dword ptr [rbp-0x4f0], 0x20; jmp rax; 
0x00000000414391: mov qword ptr [rbp-0x4e0], 0x0; mov byte ptr [rbp-0x508], 0x20; mov [rbp-0x4f8], rsi; jmp rax; 
0x0000000048bf45: mov qword ptr [rbx+0x10], 0x0; movups [rbx], xmm0; pop rbx; ret; 
0x0000000046b7b6: mov qword ptr [rbx+0x10], 0x0; pop rbx; ret; 
0x0000000041eccc: mov qword ptr [rbx+0x58], 0x0; movups [rbx+0x48], xmm0; pop rbx; ret; 
0x000000004209cc: mov qword ptr [rbx+0x58], 0x0; pxor xmm0, xmm0; movups [rbx+0x48], xmm0; pop rbx; ret; 
0x00000000498886: mov qword ptr [rbx+0x98], 0x0; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000461636: mov qword ptr [rbx], 0x0; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000049d029: mov qword ptr [rbx], 0x0; movzx eax, byte ptr [rsp+0xf]; add rsp, 0x10; pop rbx; ret; 
0x0000000048acb7: mov qword ptr [rbx], 0x0; pop rbx; or dword ptr [rip+0x3f802], 0x1; ret; 
0x0000000041fc00: mov qword ptr [rdi+0xa0], 0xffffffffffffffff; mov qword ptr [rdi+0xa8], 0x0; ret; 
0x0000000041fbf1: mov qword ptr [rdi+0xa8], 0x0; ret; 
0x0000000049ceda: mov qword ptr [rip+0x2f3f3], 0x0; add rsp, 0x8; ret; 
0x0000000049ca8b: mov qword ptr [rip+0x2f722], 0x0; add rsp, 0x8; ret; 
0x0000000048c940: mov qword ptr [rip+0x3fa15], 0x0; add rsp, 0x8; ret; 
0x000000004806b6: mov qword ptr [rip+0x4bc37], 0xffffffffffffffff; ret; 
0x00000000420cdf: mov qword ptr [rip+0xab30e], 0x0; ret; 
0x00000000420cd4: mov qword ptr [rip+0xab311], 0x0; mov qword ptr [rip+0xab30e], 0x0; ret; 
0x000000004017d4: mov qword ptr [rip+0xcabd9], 0x0; pop rdx; ret; 
0x0000000048d5a0: mov qword ptr fs:[r12], 0x0; mov rax, [rsp+0x10]; mov rdi, [rsp+0x18]; call rax; 
0x0000000048778d: mov r10, [rbp-0x90]; call r10; 
0x00000000487cee: mov r10, [rbp-0xd8]; mov [rbp-0xf0], r11; mov [rbp-0xd8], r10; call r15; 
0x000000004875df: mov r10, [rbp-0xf8]; mov r11, [rbp-0xf0]; nop [rax]; mov [rbp-0xf0], r11; call r10; 
0x00000000458077: mov r10, rax; mov eax, [r8+rax*4]; sub eax, [r8+r9*4]; je short 0x0000000000458060; ret; 
0x00000000490284: mov r10, rcx; mov eax, 0x11; syscall; 
0x0000000045d424: mov r10, rcx; mov eax, 0x19; syscall; 
0x0000000046dde9: mov r10d, 0x8; mov eax, 0xd; syscall; 
0x0000000046df8b: mov r10d, 0x8; mov rsi, r8; mov eax, 0xe; syscall; 
0x0000000045abc9: mov r10d, ebx; mov rdi, rbp; mov eax, 0x9; syscall; 
0x00000000487ce7: mov r11, [rbp-0xf0]; mov r10, [rbp-0xd8]; mov [rbp-0xf0], r11; mov [rbp-0xd8], r10; call r15; 
0x000000004875e6: mov r11, [rbp-0xf0]; nop [rax]; mov [rbp-0xf0], r11; call r10; 
0x000000004358d0: mov r11, [rsi-0x10]; mov rdx, [rsi-0x8]; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x0000000048ca60: mov r11, [rsp+0x30]; mov rdx, [rsp+0x38]; mov rcx, [rsp+0x40]; add rsp, 0x48; jmp qword ptr [rax]; 
0x0000000048c9de: mov r11, [rsp+0x30]; mov rdx, [rsp+0x38]; mov rcx, [rsp+0x40]; add rsp, 0x58; jmp qword ptr [rax]; 
0x00000000479bb3: mov r11, rcx; mov dword ptr [rbp-0x4d0], 0x1; mov r9d, 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000047995b: mov r11, rcx; mov dword ptr [rbp-0x4d0], 0x1; mov rax, [rax+rsi*8]; jmp rax; 
0x000000004796f3: mov r11, rcx; mov dword ptr [rbp-0x4e8], 0x1; mov rax, [rax+rsi*8]; jmp rax; 
0x00000000479b73: mov r11, rcx; mov dword ptr [rbp-0x4f8], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x00000000479c7b: mov r11, rcx; mov dword ptr [rbp-0x508], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x00000000479533: mov r11, rcx; mov dword ptr [rbp-0x514], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x00000000479c41: mov r11, rcx; mov dword ptr [rbp-0x520], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x000000004794b3: mov r11, rcx; mov dword ptr [rbp-0x528], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x00000000478adb: mov r11, rcx; xor r9d, r9d; mov dword ptr [rbp-0x4d0], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x00000000420c9e: mov r11b, 0xa; add [rcx], al; ret; 
0x0000000043b596: mov r11d, 0x46f00ff2; ret far; 
0x000000004360e1: mov r11d, 0x4f7f0ff3; ret far; 
0x00000000434eb7: mov r11d, 0x63490006; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000493ee3: mov r12, 0x48c0950fc085ffff; add esp, 0x8; movzx eax, al; neg eax; ret; 
0x0000000045bad7: mov r12, [rbp+0x10]; test r12, r12; jne short 0x000000000045bb08; mov rdi, [rbp]; call rbx; 
0x0000000045bb17: mov r13, [r12+0x10]; test r13, r13; jne short 0x000000000045bb70; mov rdi, [r12]; call rbx; 
0x0000000045bb47: mov r13, [r12+0x10]; test r13, r13; jne short 0x000000000045bbd0; mov rdi, [r12]; call rbx; 
0x00000000498ed7: mov r13, [rbp-0x18]; mov r14, [rbp-0x10]; mov r15, [rbp-0x8]; leave; ret; 
0x0000000040fac4: mov r13, r15; add r15, r12; call rax; 
0x0000000046e1f8: mov r13, rax; mov rdi, r12; call rbx; 
0x0000000045b2a2: mov r13, rbx; mov rdi, rbp; call r12; 
0x00000000478759: mov r13, rbx; sar r13, 0x2; mov rdx, r13; call qword ptr [rax+0x38]; 
0x0000000047875a: mov r13, rbx; sar r13, 0x2; mov rdx, r13; call qword ptr [rax+0x38]; 
0x00000000434cb5: mov r13d, 0x63490006; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000045bbde: mov r14, [r13+0x10]; test r14, r14; jne 0x000000000045bc90; mov rdi, [r13]; call rbx; 
0x0000000045bbae: mov r14, [r13+0x10]; test r14, r14; jne 0x000000000045bcf0; mov rdi, [r13]; call rbx; 
0x0000000045bb7e: mov r14, [r13+0x10]; test r14, r14; jne 0x000000000045bd50; mov rdi, [r13]; call rbx; 
0x0000000045bc0a: mov r14, [r13+0x10]; test r14, r14; jne short 0x000000000045bc30; mov rdi, [r13]; call rbx; 
0x00000000498edb: mov r14, [rbp-0x10]; mov r15, [rbp-0x8]; leave; ret; 
0x00000000486d26: mov r14, [rbx]; mov rax, [rbx+0x10]; add rax, [r13]; call rax; 
0x0000000045bc3e: mov r15, [r14+0x10]; test r15, r15; jne 0x000000000045be52; mov rdi, [r14]; call rbx; 
0x0000000045bcfe: mov r15, [r14+0x10]; test r15, r15; jne 0x000000000045beac; mov rdi, [r14]; call rbx; 
0x0000000045bcce: mov r15, [r14+0x10]; test r15, r15; jne 0x000000000045bf06; mov rdi, [r14]; call rbx; 
0x0000000045bc9e: mov r15, [r14+0x10]; test r15, r15; jne 0x000000000045bf60; mov rdi, [r14]; call rbx; 
0x0000000045bc6e: mov r15, [r14+0x10]; test r15, r15; jne 0x000000000045bfba; mov rdi, [r14]; call rbx; 
0x0000000045bd2e: mov r15, [r14+0x10]; test r15, r15; jne 0x000000000045c014; mov rdi, [r14]; call rbx; 
0x0000000045bd5a: mov r15, [r14+0x10]; test r15, r15; jne short 0x000000000045bda1; mov rdi, [r14]; call rbx; 
0x0000000045bd86: mov r15, [r14+0x10]; test r15, r15; jne short 0x000000000045bdf8; mov rdi, [r14]; call rbx; 
0x00000000498edf: mov r15, [rbp-0x8]; leave; ret; 
0x0000000049904c: mov r15, [rbp-0x8]; mov rbp, [rbp]; mov rsp, rcx; pop rcx; jmp rcx; 
0x0000000045b372: mov r15d, r13d; call rax; 
0x000000004813c9: mov r8, 0xe9c0558b48c28949; ret; 
0x0000000045bdaf: mov r8, [r15+0x10]; test r8, r8; jne 0x000000000045c13b; mov rdi, [r15]; call rbx; 
0x0000000045bf14: mov r8, [r15+0x10]; test r8, r8; jne 0x000000000045c1a9; mov rdi, [r15]; call rbx; 
0x0000000045be33: mov r8, [r15+0x10]; test r8, r8; jne 0x000000000045c217; mov rdi, [r15]; call rbx; 
0x0000000045bfc8: mov r8, [r15+0x10]; test r8, r8; jne 0x000000000045c285; mov rdi, [r15]; call rbx; 
0x0000000045be8d: mov r8, [r15+0x10]; test r8, r8; jne 0x000000000045c2f3; mov rdi, [r15]; call rbx; 
0x0000000045be60: mov r8, [r15+0x10]; test r8, r8; jne 0x000000000045c361; mov rdi, [r15]; call rbx; 
0x0000000045bee7: mov r8, [r15+0x10]; test r8, r8; jne 0x000000000045c3cf; mov rdi, [r15]; call rbx; 
0x0000000045bf6e: mov r8, [r15+0x10]; test r8, r8; jne 0x000000000045c43d; mov rdi, [r15]; call rbx; 
0x0000000045bdd9: mov r8, [r15+0x10]; test r8, r8; jne 0x000000000045c4ab; mov rdi, [r15]; call rbx; 
0x0000000045beba: mov r8, [r15+0x10]; test r8, r8; jne 0x000000000045c519; mov rdi, [r15]; call rbx; 
0x0000000045bf9b: mov r8, [r15+0x10]; test r8, r8; jne 0x000000000045c587; mov rdi, [r15]; call rbx; 
0x0000000045be06: mov r8, [r15+0x10]; test r8, r8; jne 0x000000000045c5f5; mov rdi, [r15]; call rbx; 
0x0000000045bf41: mov r8, [r15+0x10]; test r8, r8; jne 0x000000000045c663; mov rdi, [r15]; call rbx; 
0x0000000045bff5: mov r8, [r15+0x10]; test r8, r8; jne 0x000000000045c6d1; mov rdi, [r15]; call rbx; 
0x0000000045c01e: mov r8, [r15+0x10]; test r8, r8; jne short 0x000000000045c062; mov rdi, [r15]; call rbx; 
0x0000000045c047: mov r8, [r15+0x10]; test r8, r8; jne short 0x000000000045c0cd; mov rdi, [r15]; call rbx; 
0x000000004968c8: mov r8, [r8]; mov [r9], r8; add rsp, 0x8; ret; 
0x000000004968b8: mov r8, [rax]; lea rax, [rax+0x8]; mov [rcx], r8; ret; 
0x0000000048a3ad: mov r8, [rip+0x4231c]; mov rax, r8; ret; 
0x0000000048a2ab: mov r8, [rip+0x4241e]; jne short 0x000000000048a2c0; lea rax, [r8+0x1]; mov [rip+0x42411], rax; ret; 
0x0000000046ab26: mov r8, [rsp+0x48]; mov rcx, [rsp+0x18]; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; call r15; 
0x00000000498e98: mov r8, r12; mov rcx, r14; mov esi, 0x1; mov edi, 0x1; call rax; 
0x00000000498a7c: mov r8, r13; mov rcx, r12; mov esi, 0x1a; mov edi, 0x1; call rax; 
0x000000004989ff: mov r8, r13; mov rcx, r12; mov esi, 0xa; mov edi, 0x1; call rax; 
0x0000000049892b: mov r8, rbx; mov rcx, r12; or esi, 0x2; mov edi, 0x1; call rax; 
0x0000000047e030: mov r8, rcx; lea rdx, [r8+rdx*4]; mov [rax], rdx; xor eax, eax; ret; 
0x0000000046df87: mov r8, rsi; mov r10d, 0x8; mov rsi, r8; mov eax, 0xe; syscall; 
0x00000000438077: mov r8d, [r14]; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000459de5: mov r8d, eax; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x00000000459f31: mov r8d, eax; mov edi, [rsp+0x8]; mov eax, 0x1; syscall; 
0x00000000459e91: mov r8d, eax; mov edi, [rsp+0x8]; xor eax, eax; syscall; 
0x000000004500c3: mov r9, [rsi+rdx-0x7]; mov [rdi], rcx; mov [rdi+rdx-0x7], r9; vzeroupper; ret; 
0x000000004584ea: mov r9, [rsp+0x10]; mov rdi, r12; mov rsi, [rsp+0x18]; call rbx; 
0x000000004685d9: mov r9, [rsp+0x18]; mov rcx, [rsp+0x28]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x48]; call r13; 
0x00000000463178: mov r9, [rsp+0x18]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; call r14; 
0x00000000464cdf: mov r9, [rsp+0x18]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; call rbx; 
0x00000000467ffd: mov r9, [rsp+0x18]; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; call rbx; 
0x00000000463ee2: mov r9, [rsp+0x20]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; call rbx; 
0x00000000463c6c: mov r9, [rsp+0x20]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; mov rax, [rsp+0x30]; call rax; 
0x00000000469762: mov r9, [rsp+0x20]; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; call rbx; 
0x000000004638f7: mov r9, [rsp+0x20]; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x60]; call r15; 
0x00000000465cec: mov r9, [rsp+0x30]; mov rcx, [rsp+0x18]; mov rsi, [rsp+0x48]; mov rdi, [rsp+0x40]; call r14; 
0x00000000467273: mov r9, [rsp+0x30]; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; call r15; 
0x00000000466c7f: mov r9, [rsp+0x30]; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; mov rax, [rsp+0x20]; call rax; 
0x0000000046623f: mov r9, [rsp+0x30]; mov rsi, [rsp+0x48]; mov rdi, [rsp+0x40]; call rbx; 
0x00000000458e1d: mov r9, r14; mov rsi, [rsp+0x18]; mov rcx, r12; mov rdx, r13; call rbx; 
0x00000000460772: mov r9, r14; mov rsi, [rsp+0x18]; xor r8d, r8d; call rbx; 
0x0000000045801a: mov r9, rax; mov eax, [rcx+rax*4]; sub eax, [rcx+r8*4]; je short 0x0000000000458008; ret; 
0x00000000479bc0: mov r9d, 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x00000000401008: mov rax, 0x0; test rax, rax; je short 0x0000000000401016; call rax; 
0x0000000047fac0: mov rax, 0x1; ret; 
0x0000000047fad0: mov rax, 0x2; ret; 
0x0000000047fae0: mov rax, 0x3; ret; 
0x0000000047faf0: mov rax, 0x4; ret; 
0x0000000047fb00: mov rax, 0x5; ret; 
0x0000000047fb10: mov rax, 0x6; ret; 
0x0000000047fb20: mov rax, 0x7; ret; 
0x0000000048f6a0: mov rax, 0x8000000000000000; mov [r8], rax; mov eax, 0x1; mov dword ptr [rdx], 0xffffc002; ret; 
0x0000000046dd20: mov rax, 0xf; syscall; 
0x0000000046db24: mov rax, 0xffffffffffffffb0; movsxd rdi, edi; mov rax, fs:[rax]; mov rax, [rax+rdi*8+0x80]; ret; 
0x00000000459ca0: mov rax, 0xffffffffffffffc0; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000045abe8: mov rax, 0xffffffffffffffc0; mov dword ptr fs:[rax], 0x16; mov rax, 0xffffffffffffffff; ret; 
0x000000004806c8: mov rax, 0xffffffffffffffc0; mov dword ptr fs:[rax], 0xc; mov eax, 0xffffffff; ret; 
0x0000000048acd4: mov rax, 0xffffffffffffffc0; pop rbx; mov eax, fs:[rax]; ret; 
0x000000004248e0: mov rax, 0xffffffffffffffc0; xor r8d, r8d; mov dword ptr fs:[rax], 0xc; mov rax, r8; ret; 
0x0000000046db84: mov rax, 0xffffffffffffffe0; add rax, fs:[0x0]; ret; 
0x0000000046db64: mov rax, 0xffffffffffffffe8; add rax, fs:[0x0]; ret; 
0x0000000046db44: mov rax, 0xfffffffffffffff0; add rax, fs:[0x0]; ret; 
0x0000000041fca4: mov rax, 0xffffffffffffffff; ret; 
0x00000000410268: mov rax, [rax+0x18]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000041a184: mov rax, [rax+0x20]; jmp rax; 
0x0000000046dbde: mov rax, [rax+0x58]; mov rdx, 0xffffffffffffffe0; add rax, 0x200; mov fs:[rdx], rax; ret; 
0x0000000041facf: mov rax, [rax+0x68]; test rax, rax; jne short 0x000000000041fac8; ret; 
0x0000000040202f: mov rax, [rax+0x8]; mov rdi, rax; call rdx; 
0x0000000048c954: mov rax, [rax+0x8]; ret; 
0x0000000048c964: mov rax, [rax+0x8]; sub rax, fs:[0x0]; ret; 
0x0000000047d5d4: mov rax, [rax+0xe0]; call qword ptr [rax+0x68]; 
0x0000000047d709: mov rax, [rax+0xe0]; mov esi, 0xffffffff; call qword ptr [rax+0x18]; 
0x0000000041a17d: mov rax, [rax+0xe0]; mov rax, [rax+0x20]; jmp rax; 
0x0000000046bf8d: mov rax, [rax+r12*8]; test rax, rax; je short 0x000000000046bf98; call rax; 
0x0000000046c213: mov rax, [rax+rbp*8]; test rax, rax; je short 0x000000000046c21e; call rax; 
0x0000000049cadf: mov rax, [rax+rbx*8]; test rax, rax; je short 0x000000000049caea; call rax; 
0x000000004149d5: mov rax, [rax+rcx*8]; jmp rax; 
0x0000000046db32: mov rax, [rax+rdi*8+0x80]; ret; 
0x00000000479700: mov rax, [rax+rsi*8]; jmp rax; 
0x00000000498afc: mov rax, [rax]; add rsp, 0x8; ret; 
0x0000000046db2f: mov rax, [rax]; mov rax, [rax+rdi*8+0x80]; ret; 
0x00000000420868: mov rax, [rax]; test rax, rax; jne short 0x0000000000420860; ret; 
0x0000000045b36e: mov rax, [rbp-0x58]; mov r15d, r13d; call rax; 
0x00000000401f40: mov rax, [rbp-0x8]; leave; ret; 
0x0000000040202b: mov rax, [rbp-0x8]; mov rax, [rax+0x8]; mov rdi, rax; call rdx; 
0x0000000048f335: mov rax, [rbp-0x8]; xor rax, fs:[0x28]; jne 0x000000000048f3c5; leave; ret; 
0x00000000486d29: mov rax, [rbx+0x10]; add rax, [r13]; call rax; 
0x0000000048716a: mov rax, [rbx+0x10]; add rax, [r15]; test ecx, ecx; jne short 0x0000000000487177; call rax; 
0x00000000487a07: mov rax, [rbx+0x10]; add rax, [r15]; test edx, edx; jne short 0x0000000000487a14; call rax; 
0x000000004872f7: mov rax, [rbx+0x10]; add rax, [r15]; test r11d, r11d; jne short 0x0000000000487305; call rax; 
0x0000000048fd50: mov rax, [rbx+0x10]; mov [rax], rdi; pop rbx; ret; 
0x0000000048fd40: mov rax, [rbx+0x10]; mov rdx, [rdi+0x30]; mov [rax], rdx; pop rbx; ret; 
0x0000000041ed20: mov rax, [rbx+0x18]; add rsp, 0x10; pop rbx; jmp rax; 
0x0000000041f43c: mov rax, [rbx+0x40]; add rsp, 0x20; pop rbx; jmp rax; 
0x0000000041f8be: mov rax, [rbx+0x48]; add rsp, 0x20; xor edx, edx; pop rbx; jmp rax; 
0x00000000453266: mov rax, [rcx+0x5]; mov [rdx+0x5], rax; lea rax, [rdx+0xc]; ret; 
0x00000000451a56: mov rax, [rcx+0x5]; mov [rdx+0x5], rax; mov rax, rdi; ret; 
0x00000000453286: mov rax, [rcx+0x6]; mov [rdx+0x6], rax; lea rax, [rdx+0xd]; ret; 
0x00000000451a76: mov rax, [rcx+0x6]; mov [rdx+0x6], rax; mov rax, rdi; ret; 
0x000000004532a6: mov rax, [rcx+0x7]; mov [rdx+0x7], rax; lea rax, [rdx+0xe]; ret; 
0x00000000451a96: mov rax, [rcx+0x7]; mov [rdx+0x7], rax; mov rax, rdi; ret; 
0x00000000453136: mov rax, [rcx+0x8]; mov [rdx+0x8], rax; lea rax, [rdx+0xf]; ret; 
0x00000000451986: mov rax, [rcx+0x8]; mov [rdx+0x8], rax; mov rax, rdi; ret; 
0x00000000428818: mov rax, [rcx+rax+0x8]; sub rdx, 0x8; and eax, 0x1; cmovne rax, rdx; ret; 
0x000000004530e0: mov rax, [rcx]; mov [rdx], rax; lea rax, [rdx+0x7]; ret; 
0x00000000451930: mov rax, [rcx]; mov [rdx], rax; mov rax, rdi; ret; 
0x0000000046d385: mov rax, [rdi+0x20]; mov rbp, rdi; test rax, rax; je short 0x000000000046d393; call rax; 
0x0000000049cdb4: mov rax, [rdi+0x20]; test rax, rax; je short 0x000000000049cdc4; call rax; 
0x00000000421624: mov rax, [rdi+0x28]; cmp [rdi+0x10], rax; cmovae rax, [rdi+0x10]; sub rax, [rdi+0x18]; ret; 
0x00000000422172: mov rax, [rdi+0x28]; mov [rax+0x20], rdx; add rsp, 0x8; ret; 
0x0000000041ebae: mov rax, [rdi+0x48]; mov [rdi+0x48], rdx; mov [rdi+0x18], rax; mov [rdi+0x8], rax; ret; 
0x00000000420bf4: mov rax, [rdi+0x68]; ret; 
0x00000000420d1a: mov rax, [rdi+0x8]; cmp rax, rdx; jae short 0x0000000000420d48; movzx eax, byte ptr [rax]; ret; 
0x00000000498b14: mov rax, [rdi+0x90]; ret; 
0x00000000498b84: mov rax, [rdi+0x98]; ret; 
0x0000000047d5b4: mov rax, [rdi+0xa0]; cmp qword ptr [rax+0x30], 0x0; je short 0x000000000047d5c8; ret; 
0x00000000498bc4: mov rax, [rdi+0xa0]; ret; 
0x00000000498c24: mov rax, [rdi+0xa8]; ret; 
0x00000000498c14: mov rax, [rdi+0xb0]; ret; 
0x00000000498bd4: mov rax, [rdi+0xb8]; ret; 
0x00000000433940: mov rax, [rdi-0x8]; cmp rcx, rax; jne 0x0000000000433df3; xor eax, eax; ret; 
0x00000000421a94: mov rax, [rdi]; cmp rax, 0x2000000; jbe short 0x0000000000421aa0; ret; 
0x000000004216f4: mov rax, [rdi]; cmp rax, 0x408; jbe short 0x0000000000421700; ret; 
0x00000000421af4: mov rax, [rdi]; cmp rax, 0xa0; jbe short 0x0000000000421b00; ret; 
0x00000000421734: mov rax, [rdi]; cmp rax, 0xffff; jbe short 0x0000000000421740; ret; 
0x000000004932b4: mov rax, [rdi]; cmp rax, rsi; je short 0x00000000004932c0; ret; 
0x00000000420875: mov rax, [rdi]; mov [rdx], rax; ret; 
0x00000000421754: mov rax, [rdi]; nop; mov [rip+0xa83c9], rax; ret; 
0x000000004216e4: mov rax, [rdi]; nop; mov [rip+0xa83e9], rax; ret; 
0x000000004216d4: mov rax, [rdi]; nop; mov [rip+0xa8401], rax; ret; 
0x00000000421ae4: mov rax, [rdi]; nop; mov [rip+0xaa586], eax; ret; 
0x00000000421ac4: mov rax, [rdi]; nop; mov dword ptr [rip+0xa8022], 0x1; mov [rip+0xa8014], eax; ret; 
0x00000000421a74: mov rax, [rdi]; nop; mov dword ptr [rip+0xa8072], 0x1; mov [rip+0xa803f], rax; ret; 
0x00000000421a54: mov rax, [rdi]; nop; mov dword ptr [rip+0xa8092], 0x1; mov [rip+0xa8057], rax; ret; 
0x0000000048a8f9: mov rax, [rdx+rax]; mov edx, 0x0; cmp rax, 0xffffffffffffffff; cmove rax, rdx; ret; 
0x0000000048a414: mov rax, [rip+0x3f0a5]; mov [rdi], rax; mov rax, [rip+0x422a3]; mov [rsi], rax; ret; 
0x0000000048a41e: mov rax, [rip+0x422a3]; mov [rsi], rax; ret; 
0x0000000047fd00: mov rax, [rip+0x48d91]; test rax, rax; je short 0x000000000047fd40; call rax; 
0x00000000475d17: mov rax, [rip+0x57009]; shl rdx, 0x2; lea rcx, [rbx+rdx]; add rdx, r15; call qword ptr [rax+r9*8]; 
0x0000000046af84: mov rax, [rip+0x61225]; ret; 
0x000000004615d4: mov rax, [rip+0x6b68d]; ret; 
0x0000000045ab24: mov rax, [rip+0x6f9ad]; test rax, rax; je short 0x000000000045ab31; ret; 
0x00000000420bd4: mov rax, [rip+0xa8905]; ret; 
0x00000000411857: mov rax, [rip+0xbb4c9]; shl rdx, 0x2; lea rcx, [rbx+rdx]; add rdx, r15; call qword ptr [rax+r9*8]; 
0x00000000499759: mov rax, [rsi+0x10]; add rsp, 0x8; ret; 
0x000000004969b9: mov rax, [rsi+0xa8]; add rsp, 0x8; ret; 
0x00000000496a18: mov rax, [rsi+0xb0]; add rsp, 0x8; ret; 
0x000000004969cc: mov rax, [rsi+0xb8]; add rsp, 0x8; ret; 
0x000000004145e8: mov rax, [rsi+rax*8]; jmp rax; 
0x0000000048d5a9: mov rax, [rsp+0x10]; mov rdi, [rsp+0x18]; call rax; 
0x00000000402869: mov rax, [rsp+0x18]; call rax; 
0x00000000464a79: mov rax, [rsp+0x20]; call rax; 
0x00000000462ed8: mov rax, [rsp+0x28]; call rax; 
0x00000000463c7b: mov rax, [rsp+0x30]; call rax; 
0x00000000459eb1: mov rax, [rsp+0x8]; add rsp, 0x28; ret; 
0x00000000499592: mov rax, [rsp+0x8]; mov [rsp+0x10], r10; call rax; 
0x0000000045aec7: mov rax, [rsp+0x8]; mov rdi, r13; call rax; 
0x0000000045aec8: mov rax, [rsp+0x8]; mov rdi, r13; call rax; 
0x0000000049aa4a: mov rax, [rsp+0x8]; mov rdx, r15; mov rsi, [r12+r14*8+0x10]; mov rdi, r13; call rax; 
0x0000000046dc37: mov rax, [rsp+0x8]; xor rax, fs:[0x28]; jne short 0x000000000046dc4c; add rsp, 0x18; ret; 
0x000000004963ac: mov rax, [rsp]; add rsp, 0x38; ret; 
0x0000000040f95a: mov rax, [rsp]; call rax; 
0x0000000040f95b: mov rax, [rsp]; call rax; 
0x00000000419704: mov rax, [rsp]; mov esi, 0xffffffff; mov rdi, r8; call qword ptr [rax+0x18]; 
0x0000000040fac0: mov rax, [rsp]; mov r13, r15; add r15, r12; call rax; 
0x0000000040f8c0: mov rax, [rsp]; mov rdx, r14; mov rsi, r13; mov rdi, r12; call rax; 
0x0000000040fa4b: mov rax, [rsp]; mov rsi, r12; mov rdi, r13; call rax; 
0x0000000040fa4a: mov rax, [rsp]; mov rsi, r12; mov rdi, r13; call rax; 
0x0000000048b84d: mov rax, [rsp]; mov rsp, rbx; mov rbx, [rsp]; add rsp, 0x18; bnd jmp r11; 
0x0000000046db2e: mov rax, fs:[rax]; mov rax, [rax+rdi*8+0x80]; ret; 
0x0000000047e2c8: mov rax, r12; pop r12; pop r13; ret; 
0x000000004033d8: mov rax, r12; pop r12; ret; 
0x0000000045b9c1: mov rax, r12; pop rbp; pop r12; jmp rax; 
0x0000000045ad48: mov rax, r12; pop rbp; pop r12; pop r13; jmp rax; 
0x00000000421cea: mov rax, r12; pop rbp; pop r12; pop r13; ret; 
0x0000000045aad1: mov rax, r12; pop rbx; pop r12; ret; 
0x0000000040333a: mov rax, r12; pop rbx; pop rbp; pop r12; ret; 
0x00000000490835: mov rax, r13; pop r12; pop r13; ret; 
0x0000000045b2c8: mov rax, r13; pop rbp; pop r12; pop r13; ret; 
0x00000000426c09: mov rax, r8; pop r12; pop r13; ret; 
0x00000000421ecd: mov rax, r8; pop r12; ret; 
0x00000000426c76: mov rax, r8; pop r13; ret; 
0x0000000041b6f6: mov rax, r8; pop rbp; pop r12; ret; 
0x00000000425d23: mov rax, r8; pop rbp; ret; 
0x00000000426429: mov rax, r8; pop rbx; pop rbp; pop r12; ret; 
0x0000000041054b: mov rax, r8; pop rbx; pop rbp; ret; 
0x00000000425b2c: mov rax, r8; pop rbx; ret; 
0x00000000410540: mov rax, r8; ret; 
0x00000000489726: mov rax, r8; ret; 
0x000000004594b3: mov rax, r8; shr rax, 0x2; vzeroupper; ret; 
0x0000000044fc20: mov rax, r8; vzeroupper; ret; 
0x000000004073d5: mov rax, r9; pop r12; ret; 
0x000000004757c7: mov rax, r9; pop r14; ret; 
0x000000004073a7: mov rax, r9; pop rbx; pop rbp; pop r12; ret; 
0x0000000041ca9d: mov rax, rbp; pop rbx; pop rbp; pop r12; ret; 
0x00000000498d32: mov rax, rbp; pop rbx; pop rbp; ret; 
0x0000000041d3f8: mov rax, rbx; pop rbx; pop rbp; pop r12; ret; 
0x00000000420c04: mov rax, rdi; ret; 
0x00000000457aa0: mov rax, rdx; pop rbx; ret; 
0x000000004502f8: mov rax, rdx; ret; 
0x00000000499050: mov rbp, [rbp]; mov rsp, rcx; pop rcx; jmp rcx; 
0x0000000048d6de: mov rbp, r9; nop; jmp rdx; 
0x0000000045a035: mov rbp, rdi; mov rdi, rbp; mov eax, 0x4f; syscall; 
0x0000000046d389: mov rbp, rdi; test rax, rax; je short 0x000000000046d393; call rax; 
0x0000000048aa7b: mov rbp, rsp; mov rsi, rbp; syscall; 
0x0000000048b854: mov rbx, [rsp]; add rsp, 0x18; bnd jmp r11; 
0x0000000048b03b: mov rbx, [rsp]; add rsp, 0x30; bnd jmp r11; 
0x0000000048b14d: mov rbx, [rsp]; add rsp, 0x30; bnd ret; 
0x0000000047d5cc: mov rbx, rdi; test byte ptr [rdi], 0x2; jne short 0x000000000047d648; mov rax, [rax+0xe0]; call qword ptr [rax+0x68]; 
0x00000000459654: mov rcx, 0xffffffffffffffc0; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000046db03: mov rcx, 0xffffffffffffffe8; mov fs:[rcx], rdx; mov rdx, 0xffffffffffffffe0; mov fs:[rdx], rax; ret; 
0x0000000047cf75: mov rcx, [rax+0x10]; mov [rax], rdx; mov [rax+0x10], rdx; mov [rax+0x40], rcx; ret; 
0x0000000043eb6d: mov rcx, [rcx-0x8]; mov [rdi], rsi; mov [r9-0x8], rcx; ret; 
0x0000000043eb6c: mov rcx, [rcx-0x8]; mov [rdi], rsi; mov [r9-0x8], rcx; ret; 
0x0000000048b063: mov rcx, [rdi+0x18]; mov rsi, [rdi+0x20]; mov rdi, [rdi+0x28]; bnd call r11; 
0x0000000043690e: mov rcx, [rip+0x93b23]; lea r11, [rip+0x6a424]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x000000004368b4: mov rcx, [rip+0x93b7d]; lea r11, [rip+0x6a43e]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x00000000433f2e: mov rcx, [rip+0x96503]; lea r11, [rip+0x6cc44]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x00000000433ecd: mov rcx, [rip+0x96564]; lea r11, [rip+0x6cc65]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x00000000453e94: mov rcx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], rcx; lea rax, [rdi+0x17]; ret; 
0x000000004537f4: mov rcx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], rcx; mov [rdi+0x18], dh; ret; 
0x000000004537d4: mov rcx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], rcx; ret; 
0x00000000453e54: mov rcx, [rsi+0xe]; movdqu [rdi], xmm0; mov [rdi+0xe], rcx; lea rax, [rdi+0x15]; ret; 
0x00000000453794: mov rcx, [rsi+0xe]; movdqu [rdi], xmm0; mov [rdi+0xe], rcx; ret; 
0x00000000453e74: mov rcx, [rsi+0xf]; movdqu [rdi], xmm0; mov [rdi+0xf], rcx; lea rax, [rdi+0x16]; ret; 
0x000000004537b4: mov rcx, [rsi+0xf]; movdqu [rdi], xmm0; mov [rdi+0xf], rcx; ret; 
0x00000000456842: mov rcx, [rsi+rdx-0x8]; mov rsi, [rsi]; mov [rdi+rdx-0x8], rcx; mov [rdi], rsi; ret; 
0x000000004333ba: mov rcx, [rsi-0x8]; cmp rcx, rax; jne 0x0000000000433df3; xor eax, eax; ret; 
0x00000000433dc6: mov rcx, [rsi-0x8]; cmp rcx, rax; jne short 0x0000000000433df3; xor eax, eax; ret; 
0x0000000043b1c4: mov rcx, [rsi-0x8]; mov [rdi-0xd], rdx; mov [rdi-0x8], rcx; ret; 
0x0000000043b1c3: mov rcx, [rsi-0x8]; mov [rdi-0xd], rdx; mov [rdi-0x8], rcx; ret; 
0x0000000043b133: mov rcx, [rsi-0x8]; mov [rdi-0xe], rdx; mov [rdi-0x8], rcx; ret; 
0x0000000043b134: mov rcx, [rsi-0x8]; mov [rdi-0xe], rdx; mov [rdi-0x8], rcx; ret; 
0x0000000043b0a4: mov rcx, [rsi-0x8]; mov [rdi-0xf], rdx; mov [rdi-0x8], rcx; ret; 
0x00000000435ab0: mov rcx, [rsi-0x9]; mov edx, [rsi-0x4]; mov [rdi-0x9], rcx; mov [rdi-0x4], edx; ret; 
0x00000000435c90: mov rcx, [rsi-0xa]; mov edx, [rsi-0x4]; mov [rdi-0xa], rcx; mov [rdi-0x4], edx; ret; 
0x00000000435e70: mov rcx, [rsi-0xb]; mov edx, [rsi-0x4]; mov [rdi-0xb], rcx; mov [rdi-0x4], edx; ret; 
0x00000000436050: mov rcx, [rsi-0xc]; mov edx, [rsi-0x4]; mov [rdi-0xc], rcx; mov [rdi-0x4], edx; ret; 
0x00000000436240: mov rcx, [rsi-0xd]; mov rdx, [rsi-0x8]; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000436440: mov rcx, [rsi-0xe]; mov rdx, [rsi-0x8]; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000436640: mov rcx, [rsi-0xf]; mov rdx, [rsi-0x8]; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043bb44: mov rcx, [rsi]; mov [rdi+0x1], rdx; mov [rdi], rcx; ret; 
0x0000000043bad4: mov rcx, [rsi]; mov [rdi+0x2], rdx; mov [rdi], rcx; ret; 
0x0000000043ba64: mov rcx, [rsi]; mov [rdi+0x3], rdx; mov [rdi], rcx; ret; 
0x0000000043b9f4: mov rcx, [rsi]; mov [rdi+0x4], rdx; mov [rdi], rcx; ret; 
0x0000000043b984: mov rcx, [rsi]; mov [rdi+0x5], rdx; mov [rdi], rcx; ret; 
0x0000000043b914: mov rcx, [rsi]; mov [rdi+0x6], rdx; mov [rdi], rcx; ret; 
0x0000000043b8a4: mov rcx, [rsi]; mov [rdi+0x7], rdx; mov [rdi], rcx; ret; 
0x00000000453ce0: mov rcx, [rsi]; mov [rdi+0x8], dh; mov [rdi], rcx; lea rax, [rdi+0x8]; ret; 
0x000000004536a0: mov rcx, [rsi]; mov [rdi+0x8], dh; mov [rdi], rcx; ret; 
0x000000004536b0: mov rcx, [rsi]; mov dx, [rsi+0x8]; mov [rdi], rcx; mov [rdi+0x8], dx; ret; 
0x000000004536c0: mov rcx, [rsi]; mov edx, [rsi+0x7]; mov [rdi], rcx; mov [rdi+0x7], edx; ret; 
0x000000004536d0: mov rcx, [rsi]; mov edx, [rsi+0x8]; mov [rdi], rcx; mov [rdi+0x8], edx; ret; 
0x000000004536e0: mov rcx, [rsi]; mov rdx, [rsi+0x5]; mov [rdi], rcx; mov [rdi+0x5], rdx; ret; 
0x000000004536f0: mov rcx, [rsi]; mov rdx, [rsi+0x6]; mov [rdi], rcx; mov [rdi+0x6], rdx; ret; 
0x00000000453700: mov rcx, [rsi]; mov rdx, [rsi+0x7]; mov [rdi], rcx; mov [rdi+0x7], rdx; ret; 
0x0000000048d54c: mov rcx, [rsp+0x10]; mov rdi, [rsp+0x18]; call rcx; 
0x0000000046ab2a: mov rcx, [rsp+0x18]; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; call r15; 
0x00000000465cf1: mov rcx, [rsp+0x18]; mov rsi, [rsp+0x48]; mov rdi, [rsp+0x40]; call r14; 
0x00000000410f8c: mov rcx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x0000000000410fa4; add rsp, 0xd8; ret; 
0x0000000041104a: mov rcx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x0000000000411062; add rsp, 0xd8; ret; 
0x0000000045a8e3: mov rcx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x000000000045a93b; add rsp, 0x58; ret; 
0x0000000045a981: mov rcx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x000000000045a9db; add rsp, 0x58; ret; 
0x0000000047568a: mov rcx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x00000000004756a2; add rsp, 0xd8; ret; 
0x0000000048fe2e: mov rcx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x000000000048fe43; add rsp, 0x28; ret; 
0x00000000458fa2: mov rcx, [rsp+0x20]; mov rdi, rbp; mov rsi, [rsp+0x18]; call rbx; 
0x000000004650fe: mov rcx, [rsp+0x20]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x48]; call r13; 
0x000000004685de: mov rcx, [rsp+0x28]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x48]; call r13; 
0x0000000045a79c: mov rcx, [rsp+0x28]; xor rcx, fs:[0x28]; jne short 0x000000000045a7f3; add rsp, 0x68; ret; 
0x0000000046fed7: mov rcx, [rsp+0x28]; xor rcx, fs:[0x28]; jne short 0x000000000046ff05; add rsp, 0x38; ret; 
0x0000000048cc2b: mov rcx, [rsp+0x28]; xor rcx, fs:[0x28]; jne short 0x000000000048cc63; add rsp, 0x38; ret; 
0x00000000493e97: mov rcx, [rsp+0x28]; xor rcx, fs:[0x28]; jne short 0x0000000000493eac; add rsp, 0x38; ret; 
0x00000000464a6a: mov rcx, [rsp+0x30]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; mov rax, [rsp+0x20]; call rax; 
0x00000000469310: mov rcx, [rsp+0x30]; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; mov rax, [rsp+0x18]; call rax; 
0x00000000467c13: mov rcx, [rsp+0x30]; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; mov rax, [rsp+0x20]; call rax; 
0x0000000048ca6a: mov rcx, [rsp+0x40]; add rsp, 0x48; jmp qword ptr [rax]; 
0x0000000048c9e8: mov rcx, [rsp+0x40]; add rsp, 0x58; jmp qword ptr [rax]; 
0x0000000048ccf7: mov rcx, [rsp+0x48]; xor rcx, fs:[0x28]; jne short 0x000000000048cd34; add rsp, 0x58; ret; 
0x0000000048d187: mov rcx, [rsp+0x48]; xor rcx, fs:[0x28]; jne short 0x000000000048d1c4; add rsp, 0x58; ret; 
0x0000000048ce69: mov rcx, [rsp+0x58]; xor rcx, fs:[0x28]; jne short 0x000000000048ceb4; add rsp, 0x68; ret; 
0x0000000046dfa7: mov rcx, [rsp+0x88]; xor rcx, fs:[0x28]; jne 0x000000000046e056; add rsp, 0x98; ret; 
0x0000000045a82b: mov rcx, [rsp+0x8]; xor rcx, fs:[0x28]; jne short 0x000000000045a883; add rsp, 0x18; ret; 
0x00000000498a7f: mov rcx, r12; mov esi, 0x1a; mov edi, 0x1; call rax; 
0x00000000498a02: mov rcx, r12; mov esi, 0xa; mov edi, 0x1; call rax; 
0x00000000458e25: mov rcx, r12; mov rdx, r13; call rbx; 
0x0000000049892e: mov rcx, r12; or esi, 0x2; mov edi, 0x1; call rax; 
0x00000000498e9b: mov rcx, r14; mov esi, 0x1; mov edi, 0x1; call rax; 
0x0000000041b01e: mov rcx, r14; mov rdi, r15; call r12; 
0x0000000048962a: mov rcx, rax; cmp rcx, rdx; jne short 0x0000000000489608; mov eax, [rcx]; ret; 
0x00000000420919: mov rcx, rdx; add rax, rcx; mov [rdi+0x8], rax; xor eax, eax; ret; 
0x00000000456825: mov rcx, rdx; rep movsb [rdi], [rsi]; ret; 
0x0000000045bb20: mov rdi, [r12]; call rbx; 
0x0000000040f954: mov rdi, [r12]; mov rdx, r14; mov rax, [rsp]; call rax; 
0x0000000047f140: mov rdi, [r12]; movzx esi, bl; call rbp; 
0x0000000047f204: mov rdi, [r12]; push 0x0; lea rcx, [rax+0x1]; lea r9, [rsp+0x28]; call rbx; 
0x0000000049b96b: mov rdi, [r13+0x10]; add rdi, rbp; call r12; 
0x0000000045bb8b: mov rdi, [r13]; call rbx; 
0x0000000045bd62: mov rdi, [r14]; call rbx; 
0x0000000045bc4b: mov rdi, [r14]; call rbx; 
0x0000000045bdbc: mov rdi, [r15]; call rbx; 
0x0000000045c082: mov rdi, [r8]; call rbx; 
0x0000000045ae26: mov rdi, [rbp+0x10]; test rdi, rdi; jne short 0x000000000045ae56; mov rdi, [rbp]; call rbx; 
0x0000000045ae2f: mov rdi, [rbp]; call rbx; 
0x0000000048b06b: mov rdi, [rdi+0x28]; bnd call r11; 
0x0000000048c914: mov rdi, [rip+0x3fa45]; lea rax, [rdi-0x1]; cmp rax, 0xfffffffffffffffd; jbe short 0x000000000048c930; ret; 
0x0000000048d5ae: mov rdi, [rsp+0x18]; call rax; 
0x0000000048d551: mov rdi, [rsp+0x18]; call rcx; 
0x0000000046e208: mov rdi, [rsp+0x18]; mov rdx, rbp; mov rsi, r12; call rbx; 
0x0000000048b033: mov rdi, [rsp+0x28]; mov rsp, rbx; mov rbx, [rsp]; add rsp, 0x30; bnd jmp r11; 
0x0000000046727c: mov rdi, [rsp+0x38]; call r15; 
0x0000000046ac99: mov rdi, [rsp+0x38]; lea r8, [rsp+0xa0]; call r15; 
0x00000000466c88: mov rdi, [rsp+0x38]; mov rax, [rsp+0x20]; call rax; 
0x00000000465cfa: mov rdi, [rsp+0x40]; call r14; 
0x00000000466248: mov rdi, [rsp+0x40]; call rbx; 
0x00000000465108: mov rdi, [rsp+0x48]; call r13; 
0x00000000465608: mov rdi, [rsp+0x48]; call rbx; 
0x00000000468007: mov rdi, [rsp+0x50]; call rbx; 
0x0000000046931a: mov rdi, [rsp+0x50]; mov rax, [rsp+0x18]; call rax; 
0x00000000467c1d: mov rdi, [rsp+0x50]; mov rax, [rsp+0x20]; call rax; 
0x00000000463182: mov rdi, [rsp+0x58]; call r14; 
0x000000004646d2: mov rdi, [rsp+0x58]; call r15; 
0x00000000463eec: mov rdi, [rsp+0x58]; call rbx; 
0x0000000046424d: mov rdi, [rsp+0x58]; mov rax, [rsp+0x18]; call rax; 
0x00000000464a74: mov rdi, [rsp+0x58]; mov rax, [rsp+0x20]; call rax; 
0x00000000462ed3: mov rdi, [rsp+0x58]; mov rax, [rsp+0x28]; call rax; 
0x00000000463c76: mov rdi, [rsp+0x58]; mov rax, [rsp+0x30]; call rax; 
0x00000000463901: mov rdi, [rsp+0x60]; call r15; 
0x000000004634be: mov rdi, [rsp+0x60]; mov rax, [rsp+0x18]; call rax; 
0x0000000041f472: mov rdi, [rsp+0x8]; add rsp, 0x20; pop rbx; jmp rax; 
0x0000000041ed45: mov rdi, [rsp]; add rsp, 0x10; pop rbx; jmp rax; 
0x00000000414715: mov rdi, r12; call qword ptr [rax+0x38]; 
0x0000000041f2fd: mov rdi, r12; call qword ptr [rbx+0x18]; 
0x000000004148f4: mov rdi, r12; call qword ptr [rcx+0x38]; 
0x0000000040f8ca: mov rdi, r12; call rax; 
0x0000000046e1fb: mov rdi, r12; call rbx; 
0x00000000458399: mov rdi, r12; lea r9, [rsp+0x30]; call rbx; 
0x00000000478e44: mov rdi, r12; mov [rbp-0x4d8], r11; call qword ptr [r8+0x38]; 
0x00000000479449: mov rdi, r12; mov [rbp-0x4d8], r11; call qword ptr [rbx+0x38]; 
0x0000000041588f: mov rdi, r12; mov [rbp-0x4f0], r9d; call qword ptr [rax+0x38]; 
0x00000000415352: mov rdi, r12; mov [rbp-0x4f8], r9d; call qword ptr [rbx+0x38]; 
0x0000000047a0b5: mov rdi, r12; mov [rbp-0x500], r11; mov [rbp-0x4f8], r9; call qword ptr [rax+0x38]; 
0x00000000415ae4: mov rdi, r12; mov [rbp-0x508], r10d; mov [rbp-0x500], r11; call qword ptr [rax+0x38]; 
0x00000000471a2c: mov rdi, r12; mov [rbp-0xe8], r8; call rax; 
0x00000000426597: mov rdi, r12; mov eax, 0xca; syscall; 
0x000000004584ef: mov rdi, r12; mov rsi, [rsp+0x18]; call rbx; 
0x0000000041423c: mov rdi, r12; sub r15, r13; mov rdx, r15; call qword ptr [rax+0x38]; 
0x000000004147e1: mov rdi, r12; sub r15, r8; mov rdx, r15; call qword ptr [rax+0x38]; 
0x00000000478c54: mov rdi, r12; sub rbx, r8; sar rbx, 0x2; mov rdx, rbx; call qword ptr [rax+0x38]; 
0x0000000047db8b: mov rdi, r13; call qword ptr [r14+0x20]; 
0x000000004771d0: mov rdi, r13; call qword ptr [r15+0x38]; 
0x00000000476de1: mov rdi, r13; call qword ptr [r8+0x38]; 
0x00000000475f70: mov rdi, r13; call qword ptr [rcx+0x38]; 
0x0000000040fa52: mov rdi, r13; call rax; 
0x0000000046e236: mov rdi, r13; call rbx; 
0x0000000041adce: mov rdi, r13; lea r9, [rsp+0x18]; call rbp; 
0x00000000476acf: mov rdi, r13; mov [rbp-0x970], r10d; mov [rbp-0x958], r9b; call rax; 
0x00000000427b2a: mov rdi, r13; mov eax, 0xca; syscall; 
0x0000000047691d: mov rdi, r13; sub rdx, rsi; sar rdx, 0x2; call qword ptr [r12+0x38]; 
0x000000004270f5: mov rdi, r14; call rax; 
0x0000000046e571: mov rdi, r14; call rbp; 
0x0000000045b36b: mov rdi, r14; mov rax, [rbp-0x58]; mov r15d, r13d; call rax; 
0x0000000046e313: mov rdi, r14; mov rdx, r12; call rbp; 
0x00000000419d40: mov rdi, r15; call qword ptr [r13+0x80]; 
0x00000000418e30: mov rdi, r15; call qword ptr [r14+0x38]; 
0x00000000419a5a: mov rdi, r15; call qword ptr [r14+0x80]; 
0x0000000041998e: mov rdi, r15; call qword ptr [r14+0x90]; 
0x00000000418e9d: mov rdi, r15; call qword ptr [rbp+0x38]; 
0x00000000419f36: mov rdi, r15; call qword ptr [rbp+0x80]; 
0x00000000412799: mov rdi, r15; call qword ptr [rbx+0x38]; 
0x0000000041a026: mov rdi, r15; call qword ptr [rbx+0x80]; 
0x000000004124f0: mov rdi, r15; call qword ptr [rcx+0x38]; 
0x0000000041b021: mov rdi, r15; call r12; 
0x00000000419ab3: mov rdi, r15; call rax; 
0x000000004995bb: mov rdi, r15; lea rbx, [r12+rcx*8]; mov rsi, [rbx]; call rax; 
0x00000000412227: mov rdi, r15; mov [rbp-0x94c], r9d; mov [rbp-0x940], r11d; call rax; 
0x0000000042876b: mov rdi, r15; mov eax, 0xca; syscall; 
0x0000000049958c: mov rdi, r15; mov rdx, [r10]; mov rax, [rsp+0x8]; mov [rsp+0x10], r10; call rax; 
0x000000004122d4: mov rdi, r15; sub rdx, rsi; call qword ptr [rbx+0x38]; 
0x0000000041bade: mov rdi, r8; call qword ptr [r15+0x18]; 
0x0000000041970d: mov rdi, r8; call qword ptr [rax+0x18]; 
0x00000000402033: mov rdi, rax; call rdx; 
0x0000000046fc92: mov rdi, rax; cmp rdx, rcx; jae short 0x000000000046fc7c; mov rax, r8; ret; 
0x0000000040f7a3: mov rdi, rax; mov eax, 0xba; syscall; 
0x0000000041cf44: mov rdi, rbp; call qword ptr [r13+0x20]; 
0x0000000041cee1: mov rdi, rbp; call qword ptr [r13+0x90]; 
0x0000000047d3ca: mov rdi, rbp; call qword ptr [r14+0x18]; 
0x0000000041bd04: mov rdi, rbp; call qword ptr [r15+0x40]; 
0x0000000041c124: mov rdi, rbp; call qword ptr [r15+0x80]; 
0x0000000041bc9b: mov rdi, rbp; call qword ptr [r15+0x90]; 
0x0000000041cc3f: mov rdi, rbp; call qword ptr [rax+0x18]; 
0x0000000041c737: mov rdi, rbp; call qword ptr [rax+0x40]; 
0x0000000041cd32: mov rdi, rbp; call qword ptr [rax+0x78]; 
0x0000000041c044: mov rdi, rbp; call qword ptr [rax+0x80]; 
0x0000000041bee6: mov rdi, rbp; call qword ptr [rax+0x90]; 
0x000000004184bb: mov rdi, rbp; call qword ptr [rbx+0x10]; 
0x0000000041ee96: mov rdi, rbp; call qword ptr [rbx+0x18]; 
0x0000000041c1da: mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x0000000041df51: mov rdi, rbp; call qword ptr [rbx+0x88]; 
0x0000000047c3da: mov rdi, rbp; call qword ptr [rbx+0x90]; 
0x0000000045b2a5: mov rdi, rbp; call r12; 
0x0000000041c093: mov rdi, rbp; call rax; 
0x0000000045a038: mov rdi, rbp; mov eax, 0x4f; syscall; 
0x0000000045abcc: mov rdi, rbp; mov eax, 0x9; syscall; 
0x0000000042342c: mov rdi, rbp; mov eax, 0xca; syscall; 
0x0000000045ad26: mov rdi, rbp; mov edx, r13d; mov esi, 0x1; call r12; 
0x0000000045b9be: mov rdi, rbp; mov rax, r12; pop rbp; pop r12; jmp rax; 
0x0000000045adb6: mov rdi, rbp; mov rdx, r13; mov esi, 0x1; call r12; 
0x00000000458fa7: mov rdi, rbp; mov rsi, [rsp+0x18]; call rbx; 
0x0000000041a179: mov rdi, rbp; pop rbp; mov rax, [rax+0xe0]; mov rax, [rax+0x20]; jmp rax; 
0x0000000047d333: mov rdi, rbp; pop rbp; pop r12; jmp rax; 
0x00000000426c83: mov rdi, rbp; pop rbp; pop r12; pop r13; jmp rax; 
0x0000000041ee0b: mov rdi, rbp; pop rbx; pop rbp; jmp rax; 
0x000000004263fa: mov rdi, rbp; pop rbx; pop rbp; pop r12; jmp rax; 
0x0000000045b99d: mov rdi, rbp; xor edx, edx; mov esi, 0x1; call r12; 
0x0000000045ad14: mov rdi, rbp; xor esi, esi; call r12; 
0x000000004207ca: mov rdi, rbx; call qword ptr [r12+0x18]; 
0x0000000041ca5d: mov rdi, rbx; call qword ptr [r12+0x80]; 
0x0000000041d6e5: mov rdi, rbx; call qword ptr [r12+0x88]; 
0x00000000420604: mov rdi, rbx; call qword ptr [r13+0x18]; 
0x0000000047c584: mov rdi, rbx; call qword ptr [r13+0x38]; 
0x00000000418fde: mov rdi, rbx; call qword ptr [r13+0x58]; 
0x0000000041f7ae: mov rdi, rbx; call qword ptr [r13+0x60]; 
0x00000000417523: mov rdi, rbx; call qword ptr [r14+0x38]; 
0x0000000041d5aa: mov rdi, rbx; call qword ptr [r14+0x78]; 
0x0000000041fecd: mov rdi, rbx; call qword ptr [r15+0x18]; 
0x0000000047c7aa: mov rdi, rbx; call qword ptr [r15+0x38]; 
0x0000000042023f: mov rdi, rbx; call qword ptr [r15+0x58]; 
0x0000000041ec2f: mov rdi, rbx; call qword ptr [rbp+0x18]; 
0x0000000041f260: mov rdi, rbx; call qword ptr [rbp+0x20]; 
0x0000000041fcf0: mov rdi, rbx; call qword ptr [rbp+0x30]; 
0x0000000041d4be: mov rdi, rbx; call qword ptr [rbp+0x48]; 
0x00000000418760: mov rdi, rbx; call qword ptr [rbp+0x60]; 
0x000000004190a1: mov rdi, rbx; call qword ptr [rbp+0x68]; 
0x0000000041c8d3: mov rdi, rbx; call qword ptr [rbp+0x70]; 
0x0000000041a890: mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x00000000460a74: mov rdi, rbx; call r12; 
0x00000000461ad4: mov rdi, rbx; call r14; 
0x000000004994e3: mov rdi, rbx; call r15; 
0x0000000047bfa7: mov rdi, rbx; call r8; 
0x00000000417d11: mov rdi, rbx; call rax; 
0x00000000461629: mov rdi, rbx; call rbp; 
0x000000004611cb: mov rdi, rbx; call rsi; 
0x000000004274f0: mov rdi, rbx; mov eax, 0xca; syscall; 
0x0000000041d56a: mov rdi, rbx; mov edx, 0x1; call qword ptr [r14+0x80]; 
0x0000000041b9e8: mov rdi, rbx; sub rdx, rsi; call qword ptr [r12+0x70]; 
0x000000004193af: mov rdi, rbx; sub rdx, rsi; call qword ptr [rax+0x70]; 
0x0000000046fd16: mov rdi, rdx; cmp rax, 0x9; ja short 0x000000000046fcf0; mov rax, r8; ret; 
0x0000000047ef1e: mov rdi, rsi; bsr eax, eax; lea rax, [rdi+rax-0x20]; vzeroupper; ret; 
0x00000000459c88: mov rdx, 0xffffffffffffffc0; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000459ec0: mov rdx, 0xffffffffffffffc0; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000046dbe2: mov rdx, 0xffffffffffffffe0; add rax, 0x200; mov fs:[rdx], rax; ret; 
0x0000000046db0e: mov rdx, 0xffffffffffffffe0; mov fs:[rdx], rax; ret; 
0x0000000049958f: mov rdx, [r10]; mov rax, [rsp+0x8]; mov [rsp+0x10], r10; call rax; 
0x0000000049a926: mov rdx, [r12]; mov rdi, r14; call rbp; 
0x00000000476919: mov rdx, [r14+0x20]; mov rdi, r13; sub rdx, rsi; sar rdx, 0x2; call qword ptr [r12+0x38]; 
0x000000004122d0: mov rdx, [r14+0x20]; mov rdi, r15; sub rdx, rsi; call qword ptr [rbx+0x38]; 
0x00000000419aa7: mov rdx, [r15+0x40]; sub rdx, rsi; mov [rsp+0x8], rcx; mov rdi, r15; call rax; 
0x00000000402028: mov rdx, [rax]; mov rax, [rbp-0x8]; mov rax, [rax+0x8]; mov rdi, rax; call rdx; 
0x0000000041c088: mov rdx, [rbp+0x40]; sub rdx, rsi; mov [rsp], rcx; mov rdi, rbp; call rax; 
0x0000000048fdbc: mov rdx, [rbx+0x10]; mov [rdx], rax; pop rbx; ret; 
0x0000000041b9e5: mov rdx, [rbx+0x40]; mov rdi, rbx; sub rdx, rsi; call qword ptr [r12+0x70]; 
0x000000004193ac: mov rdx, [rbx+0x40]; mov rdi, rbx; sub rdx, rsi; call qword ptr [rax+0x70]; 
0x0000000045d839: mov rdx, [rcx+rdx]; lea rcx, [rip-0x64]; mov [rax+0x10], rcx; mov [rax+0x8], rdx; ret; 
0x0000000048fd44: mov rdx, [rdi+0x30]; mov [rax], rdx; pop rbx; ret; 
0x0000000048fda3: mov rdx, [rdi+0x458]; mov [rax], rdx; pop rbx; ret; 
0x000000004189d3: mov rdx, [rdi+0xa0]; mov [rdx+0xe0], rcx; ret; 
0x000000004902fe: mov rdx, [rip+0x3c193]; add word ptr [rdx+rax*2], 0x1; ret; 
0x00000000402859: mov rdx, [rip+0xc9838]; mov edi, [rsp+0xc]; mov rsi, [rsp+0x10]; mov rax, [rsp+0x18]; call rax; 
0x000000004027fc: mov rdx, [rip+0xc9895]; mov rsi, [rsp+0x10]; mov edi, [rsp+0xc]; call rbp; 
0x0000000043bb40: mov rdx, [rsi+0x1]; mov rcx, [rsi]; mov [rdi+0x1], rdx; mov [rdi], rcx; ret; 
0x0000000043bad0: mov rdx, [rsi+0x2]; mov rcx, [rsi]; mov [rdi+0x2], rdx; mov [rdi], rcx; ret; 
0x0000000043ba60: mov rdx, [rsi+0x3]; mov rcx, [rsi]; mov [rdi+0x3], rdx; mov [rdi], rcx; ret; 
0x0000000043b9f0: mov rdx, [rsi+0x4]; mov rcx, [rsi]; mov [rdi+0x4], rdx; mov [rdi], rcx; ret; 
0x00000000453d53: mov rdx, [rsi+0x5]; mov [rdi], rcx; mov [rdi+0x5], rdx; lea rax, [rdi+0xc]; ret; 
0x000000004536e3: mov rdx, [rsi+0x5]; mov [rdi], rcx; mov [rdi+0x5], rdx; ret; 
0x0000000043b980: mov rdx, [rsi+0x5]; mov rcx, [rsi]; mov [rdi+0x5], rdx; mov [rdi], rcx; ret; 
0x00000000453d73: mov rdx, [rsi+0x6]; mov [rdi], rcx; mov [rdi+0x6], rdx; lea rax, [rdi+0xd]; ret; 
0x000000004536f3: mov rdx, [rsi+0x6]; mov [rdi], rcx; mov [rdi+0x6], rdx; ret; 
0x0000000043b910: mov rdx, [rsi+0x6]; mov rcx, [rsi]; mov [rdi+0x6], rdx; mov [rdi], rcx; ret; 
0x00000000453d93: mov rdx, [rsi+0x7]; mov [rdi], rcx; mov [rdi+0x7], rdx; lea rax, [rdi+0xe]; ret; 
0x00000000453703: mov rdx, [rsi+0x7]; mov [rdi], rcx; mov [rdi+0x7], rdx; ret; 
0x0000000043b8a0: mov rdx, [rsi+0x7]; mov rcx, [rsi]; mov [rdi+0x7], rdx; mov [rdi], rcx; ret; 
0x000000004358d4: mov rdx, [rsi-0x8]; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x00000000436228: mov rdx, [rsi-0x8]; mov [rdi-0x15], r11; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000436226: mov rdx, [rsi-0x8]; mov [rdi-0x15], r11; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000436428: mov rdx, [rsi-0x8]; mov [rdi-0x16], r11; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000436426: mov rdx, [rsi-0x8]; mov [rdi-0x16], r11; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000436628: mov rdx, [rsi-0x8]; mov [rdi-0x17], r11; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x000000004358b8: mov rdx, [rsi-0x8]; mov [rdi-0x18], r10; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x000000004358f0: mov rdx, [rsi-0x8]; mov [rdi-0x8], rdx; ret; 
0x00000000436242: mov rdx, [rsi-0x8]; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000436244: mov rdx, [rsi-0x8]; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000436444: mov rdx, [rsi-0x8]; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000436442: mov rdx, [rsi-0x8]; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000436644: mov rdx, [rsi-0x8]; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043b3d0: mov rdx, [rsi-0x9]; mov ecx, [rsi-0x4]; mov [rdi-0x9], rdx; mov [rdi-0x4], ecx; ret; 
0x0000000043b350: mov rdx, [rsi-0xa]; mov ecx, [rsi-0x4]; mov [rdi-0xa], rdx; mov [rdi-0x4], ecx; ret; 
0x0000000043b2d0: mov rdx, [rsi-0xb]; mov ecx, [rsi-0x4]; mov [rdi-0xb], rdx; mov [rdi-0x4], ecx; ret; 
0x0000000043b250: mov rdx, [rsi-0xc]; mov ecx, [rsi-0x4]; mov [rdi-0xc], rdx; mov [rdi-0x4], ecx; ret; 
0x0000000043b1c0: mov rdx, [rsi-0xd]; mov rcx, [rsi-0x8]; mov [rdi-0xd], rdx; mov [rdi-0x8], rcx; ret; 
0x0000000043b130: mov rdx, [rsi-0xe]; mov rcx, [rsi-0x8]; mov [rdi-0xe], rdx; mov [rdi-0x8], rcx; ret; 
0x0000000043b0a0: mov rdx, [rsi-0xf]; mov rcx, [rsi-0x8]; mov [rdi-0xf], rdx; mov [rdi-0x8], rcx; ret; 
0x00000000453cd0: mov rdx, [rsi]; mov [rdi], rdx; lea rax, [rdi+0x7]; ret; 
0x0000000043bbb0: mov rdx, [rsi]; mov [rdi], rdx; ret; 
0x00000000459c2d: mov rdx, [rsp+0x18]; xor rdx, fs:[0x28]; jne short 0x0000000000459c51; add rsp, 0x28; ret; 
0x0000000045ab90: mov rdx, [rsp+0x18]; xor rdx, fs:[0x28]; jne short 0x000000000045aba5; add rsp, 0x28; ret; 
0x0000000048ff1c: mov rdx, [rsp+0x28]; xor rdx, fs:[0x28]; jne short 0x000000000048ff31; add rsp, 0x38; ret; 
0x0000000048ca65: mov rdx, [rsp+0x38]; mov rcx, [rsp+0x40]; add rsp, 0x48; jmp qword ptr [rax]; 
0x0000000048c9e3: mov rdx, [rsp+0x38]; mov rcx, [rsp+0x40]; add rsp, 0x58; jmp qword ptr [rax]; 
0x000000004634b4: mov rdx, [rsp+0x68]; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x60]; mov rax, [rsp+0x18]; call rax; 
0x00000000411542: mov rdx, r12; call qword ptr [r13+0x38]; 
0x0000000046e316: mov rdx, r12; call rbp; 
0x0000000047c7a4: mov rdx, r12; mov rsi, r14; mov rdi, rbx; call qword ptr [r15+0x38]; 
0x0000000047c57e: mov rdx, r12; mov rsi, rbp; mov rdi, rbx; call qword ptr [r13+0x38]; 
0x00000000418fd8: mov rdx, r12; mov rsi, rbp; mov rdi, rbx; call qword ptr [r13+0x58]; 
0x0000000049541f: mov rdx, r13; add rax, [rbx]; mov rsi, r12; mov edi, ebp; call rax; 
0x00000000478761: mov rdx, r13; call qword ptr [rax+0x38]; 
0x00000000458e28: mov rdx, r13; call rbx; 
0x0000000045adb9: mov rdx, r13; mov esi, 0x1; call r12; 
0x000000004584e7: mov rdx, r13; mov r9, [rsp+0x10]; mov rdi, r12; mov rsi, [rsp+0x18]; call rbx; 
0x00000000412793: mov rdx, r13; mov rsi, r10; mov rdi, r15; call qword ptr [rbx+0x38]; 
0x00000000412e38: mov rdx, r13; mov rsi, r10; mov rdi, r15; call qword ptr [rcx+0x38]; 
0x00000000403078: mov rdx, r13; mov rsi, r12; mov edi, ebp; call qword ptr [r15+rbx*8]; 
0x000000004955bc: mov rdx, r13; mov rsi, r12; mov edi, ebp; call qword ptr [rax]; 
0x00000000495460: mov rdx, r13; mov rsi, r12; mov edi, ebp; call qword ptr [rbx]; 
0x000000004124ea: mov rdx, r13; mov rsi, r12; mov rdi, r15; call qword ptr [rcx+0x38]; 
0x0000000041bcfe: mov rdx, r13; mov rsi, r12; mov rdi, rbp; call qword ptr [r15+0x40]; 
0x0000000041c731: mov rdx, r13; mov rsi, r15; mov rdi, rbp; call qword ptr [rax+0x40]; 
0x00000000458393: mov rdx, r13; xor r8d, r8d; mov rdi, r12; lea r9, [rsp+0x30]; call rbx; 
0x0000000040f958: mov rdx, r14; mov rax, [rsp]; call rax; 
0x0000000040fa48: mov rdx, r14; mov rax, [rsp]; mov rsi, r12; mov rdi, r13; call rax; 
0x0000000040f8c4: mov rdx, r14; mov rsi, r13; mov rdi, r12; call rax; 
0x00000000414242: mov rdx, r15; call qword ptr [rax+0x38]; 
0x0000000049aa4f: mov rdx, r15; mov rsi, [r12+r14*8+0x10]; mov rdi, r13; call rax; 
0x000000004148ee: mov rdx, r15; mov rsi, r11; mov rdi, r12; call qword ptr [rcx+0x38]; 
0x0000000046e56b: mov rdx, r15; mov rsi, r12; mov rdi, r14; call rbp; 
0x0000000041c8cd: mov rdx, r15; mov rsi, r14; mov rdi, rbx; call qword ptr [rbp+0x70]; 
0x0000000041470f: mov rdx, r15; mov rsi, r8; mov rdi, r12; call qword ptr [rax+0x38]; 
0x000000004771ca: mov rdx, r8; mov rsi, r12; mov rdi, r13; call qword ptr [r15+0x38]; 
0x0000000041cd2c: mov rdx, r8; mov rsi, r12; mov rdi, rbp; call qword ptr [rax+0x78]; 
0x00000000471a26: mov rdx, r8; mov rsi, r14; mov rdi, r12; mov [rbp-0xe8], r8; call rax; 
0x00000000427f73: mov rdx, r8; pop rbx; pop rbp; pop r12; jmp rax; 
0x000000004995b8: mov rdx, r9; mov rdi, r15; lea rbx, [r12+rcx*8]; mov rsi, [rbx]; call rax; 
0x00000000475f6a: mov rdx, r9; mov rsi, r12; mov rdi, r13; call qword ptr [rcx+0x38]; 
0x00000000420865: mov rdx, rax; mov rax, [rax]; test rax, rax; jne short 0x0000000000420860; ret; 
0x0000000049b5d0: mov rdx, rbp; mov esi, 0x40; mov rdi, r13; call rbx; 
0x0000000046eb12: mov rdx, rbp; mov rdi, r12; call rbx; 
0x0000000046e20d: mov rdx, rbp; mov rsi, r12; call rbx; 
0x0000000046e230: mov rdx, rbp; mov rsi, r12; mov rdi, r13; call rbx; 
0x0000000041d5a4: mov rdx, rbp; mov rsi, r12; mov rdi, rbx; call qword ptr [r14+0x78]; 
0x0000000046e24b: mov rdx, rbp; mov rsi, r15; mov rdi, r12; call rbx; 
0x000000004759e1: mov rdx, rbx; call qword ptr [r13+0x38]; 
0x00000000478c5e: mov rdx, rbx; call qword ptr [rax+0x38]; 
0x00000000412b7d: mov rdx, rbx; mov rsi, r12; mov rdi, r15; call qword ptr [rcx+0x38]; 
0x00000000479dc6: mov rdx, rbx; mov rsi, r9; mov rdi, r12; call qword ptr [rax+0x38]; 
0x0000000048050f: mov rdx, rcx; cmp r9d, 0x1; ja short 0x0000000000480548; mov eax, 0x106; syscall; 
0x00000000415889: mov rdx, rcx; mov rsi, r11; mov rdi, r12; mov [rbp-0x4f0], r9d; call qword ptr [rax+0x38]; 
0x0000000041534c: mov rdx, rcx; mov rsi, r11; mov rdi, r12; mov [rbp-0x4f8], r9d; call qword ptr [rbx+0x38]; 
0x00000000477803: mov rdx, rcx; mov rsi, r12; mov rdi, r13; call qword ptr [r15+0x38]; 
0x00000000476ddb: mov rdx, rcx; mov rsi, r12; mov rdi, r13; call qword ptr [r8+0x38]; 
0x00000000478e3e: mov rdx, rcx; mov rsi, r9; mov rdi, r12; mov [rbp-0x4d8], r11; call qword ptr [r8+0x38]; 
0x00000000479443: mov rdx, rcx; mov rsi, r9; mov rdi, r12; mov [rbp-0x4d8], r11; call qword ptr [rbx+0x38]; 
0x000000004574f4: mov rdx, rdi; rep stosb [rdi]; mov rax, rdx; ret; 
0x000000004805d0: mov rdx, rsp; mov eax, 0x10; syscall; 
0x0000000045a848: mov rdx, rsp; mov esi, 0x10; mov eax, 0x48; syscall; 
0x0000000049aa52: mov rsi, [r12+r14*8+0x10]; mov rdi, r13; call rax; 
0x0000000049a921: mov rsi, [r13+r15+0x8]; mov rdx, [r12]; mov rdi, r14; call rbp; 
0x0000000040f950: mov rsi, [r13]; mov rdi, [r12]; mov rdx, r14; mov rax, [rsp]; call rax; 
0x000000004122cc: mov rsi, [r14+0x18]; mov rdx, [r14+0x20]; mov rdi, r15; sub rdx, rsi; call qword ptr [rbx+0x38]; 
0x0000000045aec5: mov rsi, [r14]; mov rax, [rsp+0x8]; mov rdi, r13; call rax; 
0x00000000410284: mov rsi, [rax+0x20]; mov edi, ebp; ror rdx, 0x11; xor rdx, fs:[0x30]; call rdx; 
0x0000000045b368: mov rsi, [rax]; mov rdi, r14; mov rax, [rbp-0x58]; mov r15d, r13d; call rax; 
0x000000004611c7: mov rsi, [rbp-0x70]; mov rdi, rbx; call rsi; 
0x000000004193a8: mov rsi, [rbx+0x10]; mov rdx, [rbx+0x40]; mov rdi, rbx; sub rdx, rsi; call qword ptr [rax+0x70]; 
0x000000004995c2: mov rsi, [rbx]; call rax; 
0x0000000045b29f: mov rsi, [rbx]; mov r13, rbx; mov rdi, rbp; call r12; 
0x0000000048b067: mov rsi, [rdi+0x20]; mov rdi, [rdi+0x28]; bnd call r11; 
0x00000000456847: mov rsi, [rsi]; mov [rdi+rdx-0x8], rcx; mov [rdi], rsi; ret; 
0x0000000043eb6a: mov rsi, [rsi]; mov rcx, [rcx-0x8]; mov [rdi], rsi; mov [r9-0x8], rcx; ret; 
0x00000000402803: mov rsi, [rsp+0x10]; mov edi, [rsp+0xc]; call rbp; 
0x00000000459f2c: mov rsi, [rsp+0x10]; mov r8d, eax; mov edi, [rsp+0x8]; mov eax, 0x1; syscall; 
0x00000000459e8c: mov rsi, [rsp+0x10]; mov r8d, eax; mov edi, [rsp+0x8]; xor eax, eax; syscall; 
0x00000000402864: mov rsi, [rsp+0x10]; mov rax, [rsp+0x18]; call rax; 
0x0000000041f46d: mov rsi, [rsp+0x10]; mov rdi, [rsp+0x8]; add rsp, 0x20; pop rbx; jmp rax; 
0x0000000046eb0d: mov rsi, [rsp+0x10]; mov rdx, rbp; mov rdi, r12; call rbx; 
0x00000000426ed8: mov rsi, [rsp+0x18]; add rsp, 0x18; jmp rax; 
0x000000004584f2: mov rsi, [rsp+0x18]; call rbx; 
0x00000000458e20: mov rsi, [rsp+0x18]; mov rcx, r12; mov rdx, r13; call rbx; 
0x000000004269c0: mov rsi, [rsp+0x18]; pop rbx; pop rbp; pop r12; jmp rax; 
0x00000000460775: mov rsi, [rsp+0x18]; xor r8d, r8d; call rbx; 
0x00000000428310: mov rsi, [rsp+0x28]; mov rdi, r12; call rax; 
0x000000004270f0: mov rsi, [rsp+0x38]; mov rdi, r14; call rax; 
0x00000000467278: mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; call r15; 
0x0000000046ac95: mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; lea r8, [rsp+0xa0]; call r15; 
0x00000000466c84: mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; mov rax, [rsp+0x20]; call rax; 
0x00000000465cf6: mov rsi, [rsp+0x48]; mov rdi, [rsp+0x40]; call r14; 
0x00000000466244: mov rsi, [rsp+0x48]; mov rdi, [rsp+0x40]; call rbx; 
0x00000000465103: mov rsi, [rsp+0x50]; mov rdi, [rsp+0x48]; call r13; 
0x00000000465603: mov rsi, [rsp+0x50]; mov rdi, [rsp+0x48]; call rbx; 
0x0000000046317d: mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; call r14; 
0x000000004646cd: mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; call r15; 
0x00000000463ee7: mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; call rbx; 
0x00000000464248: mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; mov rax, [rsp+0x18]; call rax; 
0x00000000464a6f: mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; mov rax, [rsp+0x20]; call rax; 
0x00000000462ece: mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; mov rax, [rsp+0x28]; call rax; 
0x00000000463c71: mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; mov rax, [rsp+0x30]; call rax; 
0x00000000468002: mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; call rbx; 
0x00000000469315: mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; mov rax, [rsp+0x18]; call rax; 
0x00000000467c18: mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; mov rax, [rsp+0x20]; call rax; 
0x000000004638fc: mov rsi, [rsp+0x58]; mov rdi, [rsp+0x60]; call r15; 
0x000000004634b9: mov rsi, [rsp+0x58]; mov rdi, [rsp+0x60]; mov rax, [rsp+0x18]; call rax; 
0x00000000412796: mov rsi, r10; mov rdi, r15; call qword ptr [rbx+0x38]; 
0x00000000412e3b: mov rsi, r10; mov rdi, r15; call qword ptr [rcx+0x38]; 
0x000000004148f1: mov rsi, r11; mov rdi, r12; call qword ptr [rcx+0x38]; 
0x0000000041588c: mov rsi, r11; mov rdi, r12; mov [rbp-0x4f0], r9d; call qword ptr [rax+0x38]; 
0x0000000041534f: mov rsi, r11; mov rdi, r12; mov [rbp-0x4f8], r9d; call qword ptr [rbx+0x38]; 
0x00000000415ae1: mov rsi, r11; mov rdi, r12; mov [rbp-0x508], r10d; mov [rbp-0x500], r11; call qword ptr [rax+0x38]; 
0x00000000428f90: mov rsi, r12; call rax; 
0x0000000046e210: mov rsi, r12; call rbx; 
0x0000000040307b: mov rsi, r12; mov edi, ebp; call qword ptr [r15+rbx*8]; 
0x000000004955bf: mov rsi, r12; mov edi, ebp; call qword ptr [rax]; 
0x00000000495463: mov rsi, r12; mov edi, ebp; call qword ptr [rbx]; 
0x00000000495425: mov rsi, r12; mov edi, ebp; call rax; 
0x0000000047fd40: mov rsi, r12; mov edi, ebp; mov eax, 0xe4; syscall; 
0x000000004771cd: mov rsi, r12; mov rdi, r13; call qword ptr [r15+0x38]; 
0x00000000476dde: mov rsi, r12; mov rdi, r13; call qword ptr [r8+0x38]; 
0x00000000475f6d: mov rsi, r12; mov rdi, r13; call qword ptr [rcx+0x38]; 
0x0000000040fa4f: mov rsi, r12; mov rdi, r13; call rax; 
0x0000000046e233: mov rsi, r12; mov rdi, r13; call rbx; 
0x0000000046e56e: mov rsi, r12; mov rdi, r14; call rbp; 
0x000000004124ed: mov rsi, r12; mov rdi, r15; call qword ptr [rcx+0x38]; 
0x0000000041bd01: mov rsi, r12; mov rdi, rbp; call qword ptr [r15+0x40]; 
0x0000000041c121: mov rsi, r12; mov rdi, rbp; call qword ptr [r15+0x80]; 
0x0000000041cd2f: mov rsi, r12; mov rdi, rbp; call qword ptr [rax+0x78]; 
0x0000000041d5a7: mov rsi, r12; mov rdi, rbx; call qword ptr [r14+0x78]; 
0x00000000427c81: mov rsi, r12; pop r12; pop r13; jmp rax; 
0x0000000040f8c7: mov rsi, r13; mov rdi, r12; call rax; 
0x0000000040f8c6: mov rsi, r13; mov rdi, r12; call rax; 
0x00000000414239: mov rsi, r13; mov rdi, r12; sub r15, r13; mov rdx, r15; call qword ptr [rax+0x38]; 
0x0000000046e310: mov rsi, r13; mov rdi, r14; mov rdx, r12; call rbp; 
0x00000000418e2d: mov rsi, r13; mov rdi, r15; call qword ptr [r14+0x38]; 
0x00000000418e9a: mov rsi, r13; mov rdi, r15; call qword ptr [rbp+0x38]; 
0x00000000471a29: mov rsi, r14; mov rdi, r12; mov [rbp-0xe8], r8; call rax; 
0x00000000476acc: mov rsi, r14; mov rdi, r13; mov [rbp-0x970], r10d; mov [rbp-0x958], r9b; call rax; 
0x00000000412224: mov rsi, r14; mov rdi, r15; mov [rbp-0x94c], r9d; mov [rbp-0x940], r11d; call rax; 
0x0000000047c7a7: mov rsi, r14; mov rdi, rbx; call qword ptr [r15+0x38]; 
0x0000000041c8d0: mov rsi, r14; mov rdi, rbx; call qword ptr [rbp+0x70]; 
0x000000004994e0: mov rsi, r14; mov rdi, rbx; call r15; 
0x0000000046e24e: mov rsi, r15; mov rdi, r12; call rbx; 
0x0000000041c734: mov rsi, r15; mov rdi, rbp; call qword ptr [rax+0x40]; 
0x0000000046df91: mov rsi, r8; mov eax, 0xe; syscall; 
0x00000000414712: mov rsi, r8; mov rdi, r12; call qword ptr [rax+0x38]; 
0x000000004147de: mov rsi, r8; mov rdi, r12; sub r15, r8; mov rdx, r15; call qword ptr [rax+0x38]; 
0x0000000040f7cc: mov rsi, r9; mov edi, 0x2; mov eax, 0xe; syscall; 
0x0000000045a8cd: mov rsi, r9; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x00000000479dc9: mov rsi, r9; mov rdi, r12; call qword ptr [rax+0x38]; 
0x00000000478e41: mov rsi, r9; mov rdi, r12; mov [rbp-0x4d8], r11; call qword ptr [r8+0x38]; 
0x00000000479446: mov rsi, r9; mov rdi, r12; mov [rbp-0x4d8], r11; call qword ptr [rbx+0x38]; 
0x0000000047a0b2: mov rsi, r9; mov rdi, r12; mov [rbp-0x500], r11; mov [rbp-0x4f8], r9; call qword ptr [rax+0x38]; 
0x00000000459d6c: mov rsi, rbp; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x00000000459de2: mov rsi, rbp; mov r8d, eax; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x0000000040fabd: mov rsi, rbp; mov rax, [rsp]; mov r13, r15; add r15, r12; call rax; 
0x00000000419c69: mov rsi, rbp; mov rdi, r15; call qword ptr [r14+0x80]; 
0x0000000041ca5a: mov rsi, rbp; mov rdi, rbx; call qword ptr [r12+0x80]; 
0x0000000047c581: mov rsi, rbp; mov rdi, rbx; call qword ptr [r13+0x38]; 
0x00000000418fdb: mov rsi, rbp; mov rdi, rbx; call qword ptr [r13+0x58]; 
0x0000000048aa7e: mov rsi, rbp; syscall; 
0x0000000041b2ed: mov rsi, rbx; mov edi, 0x2; mov eax, r9d; syscall; 
0x00000000413344: mov rsi, rcx; mov [rbp-0x8f0], r10; mov [rbp-0x8e0], rdx; mov [rbp-0x8b8], rcx; call qword ptr [r11+rax*8-0x40]; 
0x00000000477bc5: mov rsi, rcx; mov [rbp-0x908], r10; mov [rbp-0x900], rdx; mov [rbp-0x8d0], rcx; call qword ptr [r11+rax*8-0x40]; 
0x00000000499478: mov rsi, rdi; test rax, rax; je short 0x0000000000499490; mov edi, 0x1; jmp rax; 
0x00000000459c6a: mov rsi, rdx; cmp r8d, 0x1; ja short 0x0000000000459ca0; mov eax, 0x4; syscall; 
0x00000000459cc9: mov rsi, rdx; cmp r8d, 0x1; ja short 0x0000000000459d00; mov eax, 0x5; syscall; 
0x000000004804aa: mov rsi, rdx; cmp r8d, 0x1; ja short 0x00000000004804e0; mov eax, 0x6; syscall; 
0x0000000041cede: mov rsi, rsp; mov rdi, rbp; call qword ptr [r13+0x90]; 
0x0000000041bc98: mov rsi, rsp; mov rdi, rbp; call qword ptr [r15+0x90]; 
0x0000000047c3d7: mov rsi, rsp; mov rdi, rbp; call qword ptr [rbx+0x90]; 
0x0000000048d6db: mov rsp, r8; mov rbp, r9; nop; jmp rdx; 
0x0000000048b851: mov rsp, rbx; mov rbx, [rsp]; add rsp, 0x18; bnd jmp r11; 
0x0000000048b038: mov rsp, rbx; mov rbx, [rsp]; add rsp, 0x30; bnd jmp r11; 
0x0000000048b14a: mov rsp, rbx; mov rbx, [rsp]; add rsp, 0x30; bnd ret; 
0x00000000499054: mov rsp, rcx; pop rcx; jmp rcx; 
0x0000000043eb8f: mov si, [rsi]; mov cx, [rcx-0x2]; mov [rdi], si; mov [r9-0x2], cx; ret; 
0x000000004190f6: mov ss, [rsi+rdi*8+0x3145ffff]; sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000047992e: mov ss, di; add al, 0x0; jmp qword ptr [rax+rcx*8]; 
0x000000004344b7: movaps [rdi+0x10], xmm3; jb short 0x00000000004344c6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000434607: movaps [rdi+0x10], xmm3; jb short 0x0000000000434616; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000434757: movaps [rdi+0x10], xmm3; jb short 0x0000000000434766; movaps [rdi], xmm4; notrack jmp r9; 
0x000000004348a7: movaps [rdi+0x10], xmm3; jb short 0x00000000004348b6; movaps [rdi], xmm4; notrack jmp r9; 
0x000000004349f7: movaps [rdi+0x10], xmm3; jb short 0x0000000000434a06; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000434b47: movaps [rdi+0x10], xmm3; jb short 0x0000000000434b56; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000434c97: movaps [rdi+0x10], xmm3; jb short 0x0000000000434ca6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000434de7: movaps [rdi+0x10], xmm3; jb short 0x0000000000434df6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000434f37: movaps [rdi+0x10], xmm3; jb short 0x0000000000434f46; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000435087: movaps [rdi+0x10], xmm3; jb short 0x0000000000435096; movaps [rdi], xmm4; notrack jmp r9; 
0x000000004351d7: movaps [rdi+0x10], xmm3; jb short 0x00000000004351e6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000435327: movaps [rdi+0x10], xmm3; jb short 0x0000000000435336; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000435477: movaps [rdi+0x10], xmm3; jb short 0x0000000000435486; movaps [rdi], xmm4; notrack jmp r9; 
0x000000004355c7: movaps [rdi+0x10], xmm3; jb short 0x00000000004355d6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000435717: movaps [rdi+0x10], xmm3; jb short 0x0000000000435726; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000436e97: movaps [rdi+0x10], xmm3; jb short 0x0000000000436ea6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000436fe7: movaps [rdi+0x10], xmm3; jb short 0x0000000000436ff6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000437137: movaps [rdi+0x10], xmm3; jb short 0x0000000000437146; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000437287: movaps [rdi+0x10], xmm3; jb short 0x0000000000437296; movaps [rdi], xmm4; notrack jmp r9; 
0x000000004373d7: movaps [rdi+0x10], xmm3; jb short 0x00000000004373e6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000437527: movaps [rdi+0x10], xmm3; jb short 0x0000000000437536; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000437677: movaps [rdi+0x10], xmm3; jb short 0x0000000000437686; movaps [rdi], xmm4; notrack jmp r9; 
0x000000004377c7: movaps [rdi+0x10], xmm3; jb short 0x00000000004377d6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000437917: movaps [rdi+0x10], xmm3; jb short 0x0000000000437926; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000437a67: movaps [rdi+0x10], xmm3; jb short 0x0000000000437a76; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000437bb7: movaps [rdi+0x10], xmm3; jb short 0x0000000000437bc6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000437d07: movaps [rdi+0x10], xmm3; jb short 0x0000000000437d16; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000437e57: movaps [rdi+0x10], xmm3; jb short 0x0000000000437e66; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000437fa7: movaps [rdi+0x10], xmm3; jb short 0x0000000000437fb6; movaps [rdi], xmm4; notrack jmp r9; 
0x000000004380f7: movaps [rdi+0x10], xmm3; jb short 0x0000000000438106; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000434413: movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043440f: movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000434409: movaps [rdi-0x30], xmm3; jb short 0x000000000043441d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000434559: movaps [rdi-0x30], xmm3; jb short 0x000000000043456d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x000000004346a9: movaps [rdi-0x30], xmm3; jb short 0x00000000004346bd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x000000004347f9: movaps [rdi-0x30], xmm3; jb short 0x000000000043480d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000434949: movaps [rdi-0x30], xmm3; jb short 0x000000000043495d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000434a99: movaps [rdi-0x30], xmm3; jb short 0x0000000000434aad; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000434be9: movaps [rdi-0x30], xmm3; jb short 0x0000000000434bfd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000434d37: movaps [rdi-0x30], xmm3; jb short 0x0000000000434d50; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000434e89: movaps [rdi-0x30], xmm3; jb short 0x0000000000434e9d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000434fd9: movaps [rdi-0x30], xmm3; jb short 0x0000000000434fed; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000435129: movaps [rdi-0x30], xmm3; jb short 0x000000000043513d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000435279: movaps [rdi-0x30], xmm3; jb short 0x000000000043528d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x000000004353c9: movaps [rdi-0x30], xmm3; jb short 0x00000000004353dd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000435519: movaps [rdi-0x30], xmm3; jb short 0x000000000043552d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000435669: movaps [rdi-0x30], xmm3; jb short 0x000000000043567d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000436de9: movaps [rdi-0x30], xmm3; jb short 0x0000000000436dfd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000436f39: movaps [rdi-0x30], xmm3; jb short 0x0000000000436f4d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000437089: movaps [rdi-0x30], xmm3; jb short 0x000000000043709d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x000000004371d9: movaps [rdi-0x30], xmm3; jb short 0x00000000004371ed; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000437329: movaps [rdi-0x30], xmm3; jb short 0x000000000043733d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000437479: movaps [rdi-0x30], xmm3; jb short 0x000000000043748d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x000000004375c9: movaps [rdi-0x30], xmm3; jb short 0x00000000004375dd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000437717: movaps [rdi-0x30], xmm3; jb short 0x0000000000437730; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000437869: movaps [rdi-0x30], xmm3; jb short 0x000000000043787d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x000000004379b9: movaps [rdi-0x30], xmm3; jb short 0x00000000004379cd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000437b09: movaps [rdi-0x30], xmm3; jb short 0x0000000000437b1d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000437c59: movaps [rdi-0x30], xmm3; jb short 0x0000000000437c6d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000437da9: movaps [rdi-0x30], xmm3; jb short 0x0000000000437dbd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000437ef9: movaps [rdi-0x30], xmm3; jb short 0x0000000000437f0d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000438049: movaps [rdi-0x30], xmm3; jb short 0x000000000043805d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x000000004344bd: movaps [rdi], xmm4; notrack jmp r9; 
0x0000000040f778: movaps [rsp+0xc0], xmm0; movaps [rsp+0xd0], xmm0; movaps [rsp+0xe0], xmm0; movaps [rsp+0xf0], xmm0; syscall; 
0x0000000040f780: movaps [rsp+0xd0], xmm0; movaps [rsp+0xe0], xmm0; movaps [rsp+0xf0], xmm0; syscall; 
0x0000000040f788: movaps [rsp+0xe0], xmm0; movaps [rsp+0xf0], xmm0; syscall; 
0x0000000040f790: movaps [rsp+0xf0], xmm0; syscall; 
0x000000004343aa: movaps xmm1, [rsi-0x1]; jb short 0x00000000004343b7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043445a: movaps xmm1, [rsi-0x1]; jb short 0x0000000000434467; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000436d8a: movaps xmm1, [rsi-0x1]; jb short 0x0000000000436d97; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000436e3a: movaps xmm1, [rsi-0x1]; jb short 0x0000000000436e47; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000004344fa: movaps xmm1, [rsi-0x2]; jb short 0x0000000000434507; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000004345aa: movaps xmm1, [rsi-0x2]; jb short 0x00000000004345b7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000436eda: movaps xmm1, [rsi-0x2]; jb short 0x0000000000436ee7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000436f8a: movaps xmm1, [rsi-0x2]; jb short 0x0000000000436f97; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043464a: movaps xmm1, [rsi-0x3]; jb short 0x0000000000434657; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000004346fa: movaps xmm1, [rsi-0x3]; jb short 0x0000000000434707; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043702a: movaps xmm1, [rsi-0x3]; jb short 0x0000000000437037; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000004370da: movaps xmm1, [rsi-0x3]; jb short 0x00000000004370e7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043479a: movaps xmm1, [rsi-0x4]; jb short 0x00000000004347a7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043484a: movaps xmm1, [rsi-0x4]; jb short 0x0000000000434857; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043717a: movaps xmm1, [rsi-0x4]; jb short 0x0000000000437187; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043722a: movaps xmm1, [rsi-0x4]; jb short 0x0000000000437237; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000004348ea: movaps xmm1, [rsi-0x5]; jb short 0x00000000004348f7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043499a: movaps xmm1, [rsi-0x5]; jb short 0x00000000004349a7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000004372ca: movaps xmm1, [rsi-0x5]; jb short 0x00000000004372d7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043737a: movaps xmm1, [rsi-0x5]; jb short 0x0000000000437387; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000434a3a: movaps xmm1, [rsi-0x6]; jb short 0x0000000000434a47; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000434aea: movaps xmm1, [rsi-0x6]; jb short 0x0000000000434af7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043741a: movaps xmm1, [rsi-0x6]; jb short 0x0000000000437427; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000004374ca: movaps xmm1, [rsi-0x6]; jb short 0x00000000004374d7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000434b8a: movaps xmm1, [rsi-0x7]; jb short 0x0000000000434b97; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000434c3a: movaps xmm1, [rsi-0x7]; jb short 0x0000000000434c47; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043756a: movaps xmm1, [rsi-0x7]; jb short 0x0000000000437577; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043761a: movaps xmm1, [rsi-0x7]; jb short 0x0000000000437627; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000434cda: movaps xmm1, [rsi-0x8]; jb short 0x0000000000434ce7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000434d8a: movaps xmm1, [rsi-0x8]; jb short 0x0000000000434d97; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000004376ba: movaps xmm1, [rsi-0x8]; jb short 0x00000000004376c7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043776a: movaps xmm1, [rsi-0x8]; jb short 0x0000000000437777; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000434e2a: movaps xmm1, [rsi-0x9]; jb short 0x0000000000434e37; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000434eda: movaps xmm1, [rsi-0x9]; jb short 0x0000000000434ee7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043780a: movaps xmm1, [rsi-0x9]; jb short 0x0000000000437817; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000004378ba: movaps xmm1, [rsi-0x9]; jb short 0x00000000004378c7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000434f7a: movaps xmm1, [rsi-0xa]; jb short 0x0000000000434f87; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043502a: movaps xmm1, [rsi-0xa]; jb short 0x0000000000435037; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043795a: movaps xmm1, [rsi-0xa]; jb short 0x0000000000437967; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000437a0a: movaps xmm1, [rsi-0xa]; jb short 0x0000000000437a17; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000004350ca: movaps xmm1, [rsi-0xb]; jb short 0x00000000004350d7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043517a: movaps xmm1, [rsi-0xb]; jb short 0x0000000000435187; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000437aaa: movaps xmm1, [rsi-0xb]; jb short 0x0000000000437ab7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000437b5a: movaps xmm1, [rsi-0xb]; jb short 0x0000000000437b67; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043521a: movaps xmm1, [rsi-0xc]; jb short 0x0000000000435227; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000004352ca: movaps xmm1, [rsi-0xc]; jb short 0x00000000004352d7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000437bfa: movaps xmm1, [rsi-0xc]; jb short 0x0000000000437c07; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000437caa: movaps xmm1, [rsi-0xc]; jb short 0x0000000000437cb7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043536a: movaps xmm1, [rsi-0xd]; jb short 0x0000000000435377; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043541a: movaps xmm1, [rsi-0xd]; jb short 0x0000000000435427; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000437d4a: movaps xmm1, [rsi-0xd]; jb short 0x0000000000437d57; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000437dfa: movaps xmm1, [rsi-0xd]; jb short 0x0000000000437e07; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000004354ba: movaps xmm1, [rsi-0xe]; jb short 0x00000000004354c7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043556a: movaps xmm1, [rsi-0xe]; jb short 0x0000000000435577; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000437e9a: movaps xmm1, [rsi-0xe]; jb short 0x0000000000437ea7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000437f4a: movaps xmm1, [rsi-0xe]; jb short 0x0000000000437f57; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043560a: movaps xmm1, [rsi-0xf]; jb short 0x0000000000435617; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000004356ba: movaps xmm1, [rsi-0xf]; jb short 0x00000000004356c7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000437fea: movaps xmm1, [rsi-0xf]; jb short 0x0000000000437ff7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043809a: movaps xmm1, [rsi-0xf]; jb short 0x00000000004380a7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000462c83: movd mm3, eax; punpckldq xmm1, xmm3; punpcklqdq xmm0, xmm1; movups [rdx+0x48], xmm0; ret; 
0x00000000462c82: movd xmm3, eax; punpckldq xmm1, xmm3; punpcklqdq xmm0, xmm1; movups [rdx+0x48], xmm0; ret; 
0x000000004575a5: movdqa [rcx+0x30], xmm0; add rcx, 0x40; cmp rdx, rcx; jne short 0x0000000000457597; rep ret; 
0x0000000041fa7c: movdqa xmm0, [rip+0x7fa8c]; mov dword ptr [rdi+0xc0], 0xffffffff; movups [rdi+0xa0], xmm0; ret; 
0x0000000041f9ec: movdqa xmm0, [rip+0x7fb1c]; mov dword ptr [rdi+0xc0], 0xffffffff; movups [rdi+0xa0], xmm0; ret; 
0x0000000043810c: movdqu [r8], xmm0; lea r11, [rip+0x68aa7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437fbc: movdqu [r8], xmm0; lea r11, [rip+0x68bf7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437e6c: movdqu [r8], xmm0; lea r11, [rip+0x68d47]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437d1c: movdqu [r8], xmm0; lea r11, [rip+0x68e97]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437bcc: movdqu [r8], xmm0; lea r11, [rip+0x68fe7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437a7c: movdqu [r8], xmm0; lea r11, [rip+0x69137]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043792c: movdqu [r8], xmm0; lea r11, [rip+0x69287]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004377dc: movdqu [r8], xmm0; lea r11, [rip+0x693d7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437742: movdqu [r8], xmm0; lea r11, [rip+0x69472]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043768c: movdqu [r8], xmm0; lea r11, [rip+0x69527]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043753c: movdqu [r8], xmm0; lea r11, [rip+0x69677]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004373ec: movdqu [r8], xmm0; lea r11, [rip+0x697c7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043729c: movdqu [r8], xmm0; lea r11, [rip+0x69917]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043714c: movdqu [r8], xmm0; lea r11, [rip+0x69a67]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000436ffc: movdqu [r8], xmm0; lea r11, [rip+0x69bb7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000436eac: movdqu [r8], xmm0; lea r11, [rip+0x69d07]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043572c: movdqu [r8], xmm0; lea r11, [rip+0x6b2c7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004355dc: movdqu [r8], xmm0; lea r11, [rip+0x6b417]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043548c: movdqu [r8], xmm0; lea r11, [rip+0x6b567]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043533c: movdqu [r8], xmm0; lea r11, [rip+0x6b6b7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004351ec: movdqu [r8], xmm0; lea r11, [rip+0x6b807]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043509c: movdqu [r8], xmm0; lea r11, [rip+0x6b957]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434f4c: movdqu [r8], xmm0; lea r11, [rip+0x6baa7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434dfc: movdqu [r8], xmm0; lea r11, [rip+0x6bbf7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434d62: movdqu [r8], xmm0; lea r11, [rip+0x6bc92]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434cac: movdqu [r8], xmm0; lea r11, [rip+0x6bd47]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434b5c: movdqu [r8], xmm0; lea r11, [rip+0x6be97]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434a0c: movdqu [r8], xmm0; lea r11, [rip+0x6bfe7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004348bc: movdqu [r8], xmm0; lea r11, [rip+0x6c137]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043476c: movdqu [r8], xmm0; lea r11, [rip+0x6c287]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043461c: movdqu [r8], xmm0; lea r11, [rip+0x6c3d7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004344cc: movdqu [r8], xmm0; lea r11, [rip+0x6c527]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043b831: movdqu [rdi+0x10], xmm0; lddqu xmm0, [rsi]; movdqu [rdi], xmm0; ret; 
0x00000000457546: movdqu [rdi+0x10], xmm0; movdqu [rdi+rdx-0x10], xmm0; movdqu [rdi+rdx-0x20], xmm0; ret; 
0x00000000453f9d: movdqu [rdi+0x10], xmm2; lea rax, [rdi+0x1f]; ret; 
0x000000004538dd: movdqu [rdi+0x10], xmm2; ret; 
0x0000000043beaf: movdqu [rdi+0x1], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000043be3f: movdqu [rdi+0x2], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000043bdcf: movdqu [rdi+0x3], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000043bd5f: movdqu [rdi+0x4], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000043bcef: movdqu [rdi+0x5], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000043bc7f: movdqu [rdi+0x6], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000043bc0f: movdqu [rdi+0x7], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000043bb9f: movdqu [rdi+0x8], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000043bb2f: movdqu [rdi+0x9], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000043babf: movdqu [rdi+0xa], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000043ba4f: movdqu [rdi+0xb], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000043b9df: movdqu [rdi+0xc], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000043b96f: movdqu [rdi+0xd], xmm0; movdqu [rdi], xmm1; ret; 
0x00000000453f3d: movdqu [rdi+0xd], xmm2; lea rax, [rdi+0x1c]; ret; 
0x0000000045387d: movdqu [rdi+0xd], xmm2; ret; 
0x0000000043b8ff: movdqu [rdi+0xe], xmm0; movdqu [rdi], xmm1; ret; 
0x00000000453f5d: movdqu [rdi+0xe], xmm2; lea rax, [rdi+0x1d]; ret; 
0x0000000045389d: movdqu [rdi+0xe], xmm2; ret; 
0x0000000043b88f: movdqu [rdi+0xf], xmm0; movdqu [rdi], xmm1; ret; 
0x00000000453f7d: movdqu [rdi+0xf], xmm2; lea rax, [rdi+0x1e]; ret; 
0x000000004538bd: movdqu [rdi+0xf], xmm2; ret; 
0x0000000045754b: movdqu [rdi+rdx-0x10], xmm0; movdqu [rdi+rdx-0x20], xmm0; ret; 
0x000000004574bc: movdqu [rdi+rdx-0x10], xmm0; movdqu [rdi], xmm0; ret; 
0x00000000457551: movdqu [rdi+rdx-0x20], xmm0; ret; 
0x0000000043b01b: movdqu [rdi-0x10], xmm0; ret; 
0x0000000043b08b: movdqu [rdi-0x10], xmm1; ret; 
0x0000000043b7c6: movdqu [rdi-0x11], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000043b746: movdqu [rdi-0x12], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000043b6b6: movdqu [rdi-0x13], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000043b636: movdqu [rdi-0x14], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000043b5b6: movdqu [rdi-0x15], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000043b536: movdqu [rdi-0x16], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000043b4b6: movdqu [rdi-0x17], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000043b436: movdqu [rdi-0x18], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000043b3b6: movdqu [rdi-0x19], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000043b336: movdqu [rdi-0x1a], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000043b2b6: movdqu [rdi-0x1b], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000043b236: movdqu [rdi-0x1c], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000043b1a6: movdqu [rdi-0x1d], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000043b116: movdqu [rdi-0x1e], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000043b086: movdqu [rdi-0x1f], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000043b011: movdqu [rdi-0x20], xmm0; lddqu xmm0, [rsi-0x10]; movdqu [rdi-0x10], xmm0; ret; 
0x00000000453db4: movdqu [rdi], xmm0; lea rax, [rdi+0xf]; ret; 
0x00000000453dd8: movdqu [rdi], xmm0; mov [rdi+0x10], cx; lea rax, [rdi+0x11]; ret; 
0x00000000453738: movdqu [rdi], xmm0; mov [rdi+0x10], cx; ret; 
0x00000000453dc4: movdqu [rdi], xmm0; mov [rdi+0x10], dh; lea rax, [rdi+0x10]; ret; 
0x00000000453724: movdqu [rdi], xmm0; mov [rdi+0x10], dh; ret; 
0x00000000453e17: movdqu [rdi], xmm0; mov [rdi+0x10], ecx; lea rax, [rdi+0x13]; ret; 
0x00000000453e37: movdqu [rdi], xmm0; mov [rdi+0x10], ecx; mov [rdi+0x14], dh; lea rax, [rdi+0x14]; ret; 
0x00000000453777: movdqu [rdi], xmm0; mov [rdi+0x10], ecx; mov [rdi+0x14], dh; ret; 
0x00000000453767: movdqu [rdi], xmm0; mov [rdi+0x10], ecx; ret; 
0x00000000453e98: movdqu [rdi], xmm0; mov [rdi+0x10], rcx; lea rax, [rdi+0x17]; ret; 
0x00000000453eb8: movdqu [rdi], xmm0; mov [rdi+0x10], rcx; mov [rdi+0x18], dh; lea rax, [rdi+0x18]; ret; 
0x000000004537f8: movdqu [rdi], xmm0; mov [rdi+0x10], rcx; mov [rdi+0x18], dh; ret; 
0x000000004537d8: movdqu [rdi], xmm0; mov [rdi+0x10], rcx; ret; 
0x00000000453efb: movdqu [rdi], xmm0; mov [rdi+0x10], rdx; mov [rdi+0x17], ecx; lea rax, [rdi+0x1a]; ret; 
0x0000000045383b: movdqu [rdi], xmm0; mov [rdi+0x10], rdx; mov [rdi+0x17], ecx; ret; 
0x00000000453edc: movdqu [rdi], xmm0; mov [rdi+0x10], rdx; mov [rdi+0x18], cx; lea rax, [rdi+0x19]; ret; 
0x0000000045381c: movdqu [rdi], xmm0; mov [rdi+0x10], rdx; mov [rdi+0x18], cx; ret; 
0x00000000453f1b: movdqu [rdi], xmm0; mov [rdi+0x10], rdx; mov [rdi+0x18], ecx; lea rax, [rdi+0x1b]; ret; 
0x0000000045385b: movdqu [rdi], xmm0; mov [rdi+0x10], rdx; mov [rdi+0x18], ecx; ret; 
0x00000000453e58: movdqu [rdi], xmm0; mov [rdi+0xe], rcx; lea rax, [rdi+0x15]; ret; 
0x00000000453798: movdqu [rdi], xmm0; mov [rdi+0xe], rcx; ret; 
0x00000000453df7: movdqu [rdi], xmm0; mov [rdi+0xf], ecx; lea rax, [rdi+0x12]; ret; 
0x00000000453757: movdqu [rdi], xmm0; mov [rdi+0xf], ecx; ret; 
0x00000000453e78: movdqu [rdi], xmm0; mov [rdi+0xf], rcx; lea rax, [rdi+0x16]; ret; 
0x000000004537b8: movdqu [rdi], xmm0; mov [rdi+0xf], rcx; ret; 
0x00000000457542: movdqu [rdi], xmm0; movdqu [rdi+0x10], xmm0; movdqu [rdi+rdx-0x10], xmm0; movdqu [rdi+rdx-0x20], xmm0; ret; 
0x00000000453f99: movdqu [rdi], xmm0; movdqu [rdi+0x10], xmm2; lea rax, [rdi+0x1f]; ret; 
0x000000004538d9: movdqu [rdi], xmm0; movdqu [rdi+0x10], xmm2; ret; 
0x00000000453f39: movdqu [rdi], xmm0; movdqu [rdi+0xd], xmm2; lea rax, [rdi+0x1c]; ret; 
0x00000000453879: movdqu [rdi], xmm0; movdqu [rdi+0xd], xmm2; ret; 
0x00000000453f59: movdqu [rdi], xmm0; movdqu [rdi+0xe], xmm2; lea rax, [rdi+0x1d]; ret; 
0x00000000453899: movdqu [rdi], xmm0; movdqu [rdi+0xe], xmm2; ret; 
0x00000000453f79: movdqu [rdi], xmm0; movdqu [rdi+0xf], xmm2; lea rax, [rdi+0x1e]; ret; 
0x000000004538b9: movdqu [rdi], xmm0; movdqu [rdi+0xf], xmm2; ret; 
0x0000000043b83a: movdqu [rdi], xmm0; ret; 
0x0000000043b894: movdqu [rdi], xmm1; ret; 
0x00000000453730: movdqu xmm0, [rsi]; mov cx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], cx; ret; 
0x00000000453760: movdqu xmm0, [rsi]; mov ecx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], ecx; ret; 
0x00000000453750: movdqu xmm0, [rsi]; mov ecx, [rsi+0xf]; movdqu [rdi], xmm0; mov [rdi+0xf], ecx; ret; 
0x000000004537d0: movdqu xmm0, [rsi]; mov rcx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], rcx; ret; 
0x00000000453790: movdqu xmm0, [rsi]; mov rcx, [rsi+0xe]; movdqu [rdi], xmm0; mov [rdi+0xe], rcx; ret; 
0x000000004537b0: movdqu xmm0, [rsi]; mov rcx, [rsi+0xf]; movdqu [rdi], xmm0; mov [rdi+0xf], rcx; ret; 
0x00000000453db0: movdqu xmm0, [rsi]; movdqu [rdi], xmm0; lea rax, [rdi+0xf]; ret; 
0x00000000453dc0: movdqu xmm0, [rsi]; movdqu [rdi], xmm0; mov [rdi+0x10], dh; lea rax, [rdi+0x10]; ret; 
0x00000000453720: movdqu xmm0, [rsi]; movdqu [rdi], xmm0; mov [rdi+0x10], dh; ret; 
0x00000000453710: movdqu xmm0, [rsi]; movdqu [rdi], xmm0; ret; 
0x000000004538d0: movdqu xmm0, [rsi]; movdqu xmm2, [rsi+0x10]; movdqu [rdi], xmm0; movdqu [rdi+0x10], xmm2; ret; 
0x00000000453870: movdqu xmm0, [rsi]; movdqu xmm2, [rsi+0xd]; movdqu [rdi], xmm0; movdqu [rdi+0xd], xmm2; ret; 
0x00000000453890: movdqu xmm0, [rsi]; movdqu xmm2, [rsi+0xe]; movdqu [rdi], xmm0; movdqu [rdi+0xe], xmm2; ret; 
0x000000004538b0: movdqu xmm0, [rsi]; movdqu xmm2, [rsi+0xf]; movdqu [rdi], xmm0; movdqu [rdi+0xf], xmm2; ret; 
0x00000000453f94: movdqu xmm2, [rsi+0x10]; movdqu [rdi], xmm0; movdqu [rdi+0x10], xmm2; lea rax, [rdi+0x1f]; ret; 
0x000000004538d4: movdqu xmm2, [rsi+0x10]; movdqu [rdi], xmm0; movdqu [rdi+0x10], xmm2; ret; 
0x00000000453f34: movdqu xmm2, [rsi+0xd]; movdqu [rdi], xmm0; movdqu [rdi+0xd], xmm2; lea rax, [rdi+0x1c]; ret; 
0x00000000453874: movdqu xmm2, [rsi+0xd]; movdqu [rdi], xmm0; movdqu [rdi+0xd], xmm2; ret; 
0x00000000453f54: movdqu xmm2, [rsi+0xe]; movdqu [rdi], xmm0; movdqu [rdi+0xe], xmm2; lea rax, [rdi+0x1d]; ret; 
0x00000000453894: movdqu xmm2, [rsi+0xe]; movdqu [rdi], xmm0; movdqu [rdi+0xe], xmm2; ret; 
0x00000000453f74: movdqu xmm2, [rsi+0xf]; movdqu [rdi], xmm0; movdqu [rdi+0xf], xmm2; lea rax, [rdi+0x1e]; ret; 
0x000000004538b4: movdqu xmm2, [rsi+0xf]; movdqu [rdi], xmm0; movdqu [rdi+0xf], xmm2; ret; 
0x0000000048f77f: movhps xmm0, [rsp-0x18]; movups [rdi], xmm0; mov [rdx], eax; mov eax, 0x2; ret; 
0x00000000454591: movnti [r14+0x66], r12d; nop [rax+rax]; nop; lea rax, [rdi]; ret; 
0x0000000045375c: movnti [r8+0x66f0ff3], r10; mov ecx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], ecx; ret; 
0x0000000045375d: movnti [rax+0x66f0ff3], edx; mov ecx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], ecx; ret; 
0x00000000454592: movnti [rsi+0x66], esp; nop [rax+rax]; nop; lea rax, [rdi]; ret; 
0x000000004208a8: movntps [rax+0x18], xmm2; mov eax, [rdi+0x10]; sub eax, edx; ret; 
0x0000000043810e: movq [r8], mm0; lea r11, [rip+0x68aa7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437fbe: movq [r8], mm0; lea r11, [rip+0x68bf7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437e6e: movq [r8], mm0; lea r11, [rip+0x68d47]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437d1e: movq [r8], mm0; lea r11, [rip+0x68e97]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437bce: movq [r8], mm0; lea r11, [rip+0x68fe7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437a7e: movq [r8], mm0; lea r11, [rip+0x69137]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043792e: movq [r8], mm0; lea r11, [rip+0x69287]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004377de: movq [r8], mm0; lea r11, [rip+0x693d7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437743: movq [r8], mm0; lea r11, [rip+0x69472]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043768e: movq [r8], mm0; lea r11, [rip+0x69527]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043753e: movq [r8], mm0; lea r11, [rip+0x69677]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004373ee: movq [r8], mm0; lea r11, [rip+0x697c7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043729e: movq [r8], mm0; lea r11, [rip+0x69917]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043714e: movq [r8], mm0; lea r11, [rip+0x69a67]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000436ffe: movq [r8], mm0; lea r11, [rip+0x69bb7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000436eae: movq [r8], mm0; lea r11, [rip+0x69d07]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043572e: movq [r8], mm0; lea r11, [rip+0x6b2c7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004355de: movq [r8], mm0; lea r11, [rip+0x6b417]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043548e: movq [r8], mm0; lea r11, [rip+0x6b567]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043533e: movq [r8], mm0; lea r11, [rip+0x6b6b7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004351ee: movq [r8], mm0; lea r11, [rip+0x6b807]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043509e: movq [r8], mm0; lea r11, [rip+0x6b957]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434f4e: movq [r8], mm0; lea r11, [rip+0x6baa7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434dfe: movq [r8], mm0; lea r11, [rip+0x6bbf7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434d63: movq [r8], mm0; lea r11, [rip+0x6bc92]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434cae: movq [r8], mm0; lea r11, [rip+0x6bd47]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434b5e: movq [r8], mm0; lea r11, [rip+0x6be97]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434a0e: movq [r8], mm0; lea r11, [rip+0x6bfe7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004348be: movq [r8], mm0; lea r11, [rip+0x6c137]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043476e: movq [r8], mm0; lea r11, [rip+0x6c287]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043461e: movq [r8], mm0; lea r11, [rip+0x6c3d7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004344ce: movq [r8], mm0; lea r11, [rip+0x6c527]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043810f: movq [rax], mm0; lea r11, [rip+0x68aa7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437fbf: movq [rax], mm0; lea r11, [rip+0x68bf7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437e6f: movq [rax], mm0; lea r11, [rip+0x68d47]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437d1f: movq [rax], mm0; lea r11, [rip+0x68e97]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437bcf: movq [rax], mm0; lea r11, [rip+0x68fe7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437a7f: movq [rax], mm0; lea r11, [rip+0x69137]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043792f: movq [rax], mm0; lea r11, [rip+0x69287]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004377df: movq [rax], mm0; lea r11, [rip+0x693d7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437744: movq [rax], mm0; lea r11, [rip+0x69472]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043768f: movq [rax], mm0; lea r11, [rip+0x69527]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043753f: movq [rax], mm0; lea r11, [rip+0x69677]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004373ef: movq [rax], mm0; lea r11, [rip+0x697c7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043729f: movq [rax], mm0; lea r11, [rip+0x69917]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043714f: movq [rax], mm0; lea r11, [rip+0x69a67]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000436fff: movq [rax], mm0; lea r11, [rip+0x69bb7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000436eaf: movq [rax], mm0; lea r11, [rip+0x69d07]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043572f: movq [rax], mm0; lea r11, [rip+0x6b2c7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004355df: movq [rax], mm0; lea r11, [rip+0x6b417]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043548f: movq [rax], mm0; lea r11, [rip+0x6b567]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043533f: movq [rax], mm0; lea r11, [rip+0x6b6b7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004351ef: movq [rax], mm0; lea r11, [rip+0x6b807]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043509f: movq [rax], mm0; lea r11, [rip+0x6b957]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434f4f: movq [rax], mm0; lea r11, [rip+0x6baa7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434dff: movq [rax], mm0; lea r11, [rip+0x6bbf7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434d64: movq [rax], mm0; lea r11, [rip+0x6bc92]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434caf: movq [rax], mm0; lea r11, [rip+0x6bd47]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434b5f: movq [rax], mm0; lea r11, [rip+0x6be97]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434a0f: movq [rax], mm0; lea r11, [rip+0x6bfe7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004348bf: movq [rax], mm0; lea r11, [rip+0x6c137]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043476f: movq [rax], mm0; lea r11, [rip+0x6c287]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043461f: movq [rax], mm0; lea r11, [rip+0x6c3d7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004344cf: movq [rax], mm0; lea r11, [rip+0x6c527]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004575a6: movq [rcx+0x30], mm0; add rcx, 0x40; cmp rdx, rcx; jne short 0x0000000000457597; rep ret; 
0x0000000043b832: movq [rdi+0x10], mm0; lddqu xmm0, [rsi]; movdqu [rdi], xmm0; ret; 
0x00000000457547: movq [rdi+0x10], mm0; movdqu [rdi+rdx-0x10], xmm0; movdqu [rdi+rdx-0x20], xmm0; ret; 
0x00000000453f9e: movq [rdi+0x10], mm2; lea rax, [rdi+0x1f]; ret; 
0x000000004538de: movq [rdi+0x10], mm2; ret; 
0x0000000043beb0: movq [rdi+0x1], mm0; movdqu [rdi], xmm1; ret; 
0x0000000043be40: movq [rdi+0x2], mm0; movdqu [rdi], xmm1; ret; 
0x0000000043bdd0: movq [rdi+0x3], mm0; movdqu [rdi], xmm1; ret; 
0x0000000043bd60: movq [rdi+0x4], mm0; movdqu [rdi], xmm1; ret; 
0x0000000043bcf0: movq [rdi+0x5], mm0; movdqu [rdi], xmm1; ret; 
0x0000000043bc80: movq [rdi+0x6], mm0; movdqu [rdi], xmm1; ret; 
0x0000000043bc10: movq [rdi+0x7], mm0; movdqu [rdi], xmm1; ret; 
0x0000000043bba0: movq [rdi+0x8], mm0; movdqu [rdi], xmm1; ret; 
0x0000000043bb30: movq [rdi+0x9], mm0; movdqu [rdi], xmm1; ret; 
0x0000000043bac0: movq [rdi+0xa], mm0; movdqu [rdi], xmm1; ret; 
0x0000000043ba50: movq [rdi+0xb], mm0; movdqu [rdi], xmm1; ret; 
0x0000000043b9e0: movq [rdi+0xc], mm0; movdqu [rdi], xmm1; ret; 
0x0000000043b970: movq [rdi+0xd], mm0; movdqu [rdi], xmm1; ret; 
0x00000000453f3e: movq [rdi+0xd], mm2; lea rax, [rdi+0x1c]; ret; 
0x0000000045387e: movq [rdi+0xd], mm2; ret; 
0x0000000043b900: movq [rdi+0xe], mm0; movdqu [rdi], xmm1; ret; 
0x00000000453f5e: movq [rdi+0xe], mm2; lea rax, [rdi+0x1d]; ret; 
0x0000000045389e: movq [rdi+0xe], mm2; ret; 
0x0000000043b890: movq [rdi+0xf], mm0; movdqu [rdi], xmm1; ret; 
0x00000000453f7e: movq [rdi+0xf], mm2; lea rax, [rdi+0x1e]; ret; 
0x000000004538be: movq [rdi+0xf], mm2; ret; 
0x0000000045754c: movq [rdi+rdx-0x10], mm0; movdqu [rdi+rdx-0x20], xmm0; ret; 
0x000000004574bd: movq [rdi+rdx-0x10], mm0; movdqu [rdi], xmm0; ret; 
0x00000000457552: movq [rdi+rdx-0x20], mm0; ret; 
0x0000000043b01c: movq [rdi-0x10], mm0; ret; 
0x0000000043b08c: movq [rdi-0x10], mm1; ret; 
0x0000000043b7c7: movq [rdi-0x11], mm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000043b747: movq [rdi-0x12], mm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000043b6b7: movq [rdi-0x13], mm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000043b637: movq [rdi-0x14], mm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000043b5b7: movq [rdi-0x15], mm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000043b537: movq [rdi-0x16], mm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000043b4b7: movq [rdi-0x17], mm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000043b437: movq [rdi-0x18], mm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000043b3b7: movq [rdi-0x19], mm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000043b337: movq [rdi-0x1a], mm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000043b2b7: movq [rdi-0x1b], mm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000043b237: movq [rdi-0x1c], mm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000043b1a7: movq [rdi-0x1d], mm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000043b117: movq [rdi-0x1e], mm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000043b087: movq [rdi-0x1f], mm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000043b012: movq [rdi-0x20], mm0; lddqu xmm0, [rsi-0x10]; movdqu [rdi-0x10], xmm0; ret; 
0x00000000453db5: movq [rdi], mm0; lea rax, [rdi+0xf]; ret; 
0x00000000453dd9: movq [rdi], mm0; mov [rdi+0x10], cx; lea rax, [rdi+0x11]; ret; 
0x00000000453739: movq [rdi], mm0; mov [rdi+0x10], cx; ret; 
0x00000000453dc5: movq [rdi], mm0; mov [rdi+0x10], dh; lea rax, [rdi+0x10]; ret; 
0x00000000453725: movq [rdi], mm0; mov [rdi+0x10], dh; ret; 
0x00000000453e18: movq [rdi], mm0; mov [rdi+0x10], ecx; lea rax, [rdi+0x13]; ret; 
0x00000000453e38: movq [rdi], mm0; mov [rdi+0x10], ecx; mov [rdi+0x14], dh; lea rax, [rdi+0x14]; ret; 
0x00000000453778: movq [rdi], mm0; mov [rdi+0x10], ecx; mov [rdi+0x14], dh; ret; 
0x00000000453768: movq [rdi], mm0; mov [rdi+0x10], ecx; ret; 
0x00000000453e99: movq [rdi], mm0; mov [rdi+0x10], rcx; lea rax, [rdi+0x17]; ret; 
0x00000000453eb9: movq [rdi], mm0; mov [rdi+0x10], rcx; mov [rdi+0x18], dh; lea rax, [rdi+0x18]; ret; 
0x000000004537f9: movq [rdi], mm0; mov [rdi+0x10], rcx; mov [rdi+0x18], dh; ret; 
0x000000004537d9: movq [rdi], mm0; mov [rdi+0x10], rcx; ret; 
0x00000000453efc: movq [rdi], mm0; mov [rdi+0x10], rdx; mov [rdi+0x17], ecx; lea rax, [rdi+0x1a]; ret; 
0x0000000045383c: movq [rdi], mm0; mov [rdi+0x10], rdx; mov [rdi+0x17], ecx; ret; 
0x00000000453edd: movq [rdi], mm0; mov [rdi+0x10], rdx; mov [rdi+0x18], cx; lea rax, [rdi+0x19]; ret; 
0x0000000045381d: movq [rdi], mm0; mov [rdi+0x10], rdx; mov [rdi+0x18], cx; ret; 
0x00000000453f1c: movq [rdi], mm0; mov [rdi+0x10], rdx; mov [rdi+0x18], ecx; lea rax, [rdi+0x1b]; ret; 
0x0000000045385c: movq [rdi], mm0; mov [rdi+0x10], rdx; mov [rdi+0x18], ecx; ret; 
0x00000000453e59: movq [rdi], mm0; mov [rdi+0xe], rcx; lea rax, [rdi+0x15]; ret; 
0x00000000453799: movq [rdi], mm0; mov [rdi+0xe], rcx; ret; 
0x00000000453df8: movq [rdi], mm0; mov [rdi+0xf], ecx; lea rax, [rdi+0x12]; ret; 
0x00000000453758: movq [rdi], mm0; mov [rdi+0xf], ecx; ret; 
0x00000000453e79: movq [rdi], mm0; mov [rdi+0xf], rcx; lea rax, [rdi+0x16]; ret; 
0x000000004537b9: movq [rdi], mm0; mov [rdi+0xf], rcx; ret; 
0x00000000457543: movq [rdi], mm0; movdqu [rdi+0x10], xmm0; movdqu [rdi+rdx-0x10], xmm0; movdqu [rdi+rdx-0x20], xmm0; ret; 
0x00000000453f9a: movq [rdi], mm0; movdqu [rdi+0x10], xmm2; lea rax, [rdi+0x1f]; ret; 
0x000000004538da: movq [rdi], mm0; movdqu [rdi+0x10], xmm2; ret; 
0x00000000453f3a: movq [rdi], mm0; movdqu [rdi+0xd], xmm2; lea rax, [rdi+0x1c]; ret; 
0x0000000045387a: movq [rdi], mm0; movdqu [rdi+0xd], xmm2; ret; 
0x00000000453f5a: movq [rdi], mm0; movdqu [rdi+0xe], xmm2; lea rax, [rdi+0x1d]; ret; 
0x0000000045389a: movq [rdi], mm0; movdqu [rdi+0xe], xmm2; ret; 
0x00000000453f7a: movq [rdi], mm0; movdqu [rdi+0xf], xmm2; lea rax, [rdi+0x1e]; ret; 
0x000000004538ba: movq [rdi], mm0; movdqu [rdi+0xf], xmm2; ret; 
0x0000000043b83b: movq [rdi], mm0; ret; 
0x0000000043b895: movq [rdi], mm1; ret; 
0x0000000041fa7d: movq mm0, [rip+0x7fa8c]; mov dword ptr [rdi+0xc0], 0xffffffff; movups [rdi+0xa0], xmm0; ret; 
0x0000000041f9ed: movq mm0, [rip+0x7fb1c]; mov dword ptr [rdi+0xc0], 0xffffffff; movups [rdi+0xa0], xmm0; ret; 
0x00000000453731: movq mm0, [rsi]; mov cx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], cx; ret; 
0x00000000453761: movq mm0, [rsi]; mov ecx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], ecx; ret; 
0x00000000453751: movq mm0, [rsi]; mov ecx, [rsi+0xf]; movdqu [rdi], xmm0; mov [rdi+0xf], ecx; ret; 
0x000000004537d1: movq mm0, [rsi]; mov rcx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], rcx; ret; 
0x00000000453791: movq mm0, [rsi]; mov rcx, [rsi+0xe]; movdqu [rdi], xmm0; mov [rdi+0xe], rcx; ret; 
0x000000004537b1: movq mm0, [rsi]; mov rcx, [rsi+0xf]; movdqu [rdi], xmm0; mov [rdi+0xf], rcx; ret; 
0x00000000453db1: movq mm0, [rsi]; movdqu [rdi], xmm0; lea rax, [rdi+0xf]; ret; 
0x00000000453dc1: movq mm0, [rsi]; movdqu [rdi], xmm0; mov [rdi+0x10], dh; lea rax, [rdi+0x10]; ret; 
0x00000000453721: movq mm0, [rsi]; movdqu [rdi], xmm0; mov [rdi+0x10], dh; ret; 
0x00000000453711: movq mm0, [rsi]; movdqu [rdi], xmm0; ret; 
0x000000004538d1: movq mm0, [rsi]; movdqu xmm2, [rsi+0x10]; movdqu [rdi], xmm0; movdqu [rdi+0x10], xmm2; ret; 
0x00000000453871: movq mm0, [rsi]; movdqu xmm2, [rsi+0xd]; movdqu [rdi], xmm0; movdqu [rdi+0xd], xmm2; ret; 
0x00000000453891: movq mm0, [rsi]; movdqu xmm2, [rsi+0xe]; movdqu [rdi], xmm0; movdqu [rdi+0xe], xmm2; ret; 
0x000000004538b1: movq mm0, [rsi]; movdqu xmm2, [rsi+0xf]; movdqu [rdi], xmm0; movdqu [rdi+0xf], xmm2; ret; 
0x00000000453f95: movq mm2, [rsi+0x10]; movdqu [rdi], xmm0; movdqu [rdi+0x10], xmm2; lea rax, [rdi+0x1f]; ret; 
0x000000004538d5: movq mm2, [rsi+0x10]; movdqu [rdi], xmm0; movdqu [rdi+0x10], xmm2; ret; 
0x00000000453f35: movq mm2, [rsi+0xd]; movdqu [rdi], xmm0; movdqu [rdi+0xd], xmm2; lea rax, [rdi+0x1c]; ret; 
0x00000000453875: movq mm2, [rsi+0xd]; movdqu [rdi], xmm0; movdqu [rdi+0xd], xmm2; ret; 
0x00000000453f55: movq mm2, [rsi+0xe]; movdqu [rdi], xmm0; movdqu [rdi+0xe], xmm2; lea rax, [rdi+0x1d]; ret; 
0x00000000453895: movq mm2, [rsi+0xe]; movdqu [rdi], xmm0; movdqu [rdi+0xe], xmm2; ret; 
0x00000000453f75: movq mm2, [rsi+0xf]; movdqu [rdi], xmm0; movdqu [rdi+0xf], xmm2; lea rax, [rdi+0x1e]; ret; 
0x000000004538b5: movq mm2, [rsi+0xf]; movdqu [rdi], xmm0; movdqu [rdi+0xf], xmm2; ret; 
0x000000004567be: movsb [rdi], [rsi]; cld; ret; 
0x0000000046f4f0: movsb [rdi], [rsi]; ret far; 
0x000000004567b0: movsb [rdi], [rsi]; ret; 
0x0000000045bbe7: movsd [rdi], [rsi]; add [rax], al; add [rcx-0x75], cl; jge short 0x000000000045bbef; call rbx; 
0x00000000476fe5: movsd [rdi], [rsi]; clc; idiv bh; dec dword ptr [rbp+0x63]; ret; 
0x000000004776a9: movsd [rdi], [rsi]; clc; idiv bh; jmp qword ptr [rsi-0x70]; 
0x0000000048de15: movsd [rdi], [rsi]; enter 0x894c, 0x7; shl r9, cl; mov [rdi-0x8], r9; ret; 
0x00000000435157: movsd [rdi], [rsi]; mov eax, 0x63490006; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000048b062: movsd [rdi], [rsi]; mov rcx, [rdi+0x18]; mov rsi, [rdi+0x20]; mov rdi, [rdi+0x28]; bnd call r11; 
0x00000000421aeb: movsd [rdi], [rsi]; or al, [rax]; ret; 
0x0000000048de52: movsd [rdi], [rsi]; ret; 
0x00000000480161: movsd [rdi], [rsi]; std; jmp qword ptr [rsp+rax*2-0x77]; 
0x0000000048b061: movsq [rdi], [rsi]; mov rcx, [rdi+0x18]; mov rsi, [rdi+0x20]; mov rdi, [rdi+0x28]; bnd call r11; 
0x0000000049683c: movss xmm0, [rip+0x23774]; divss xmm0, [rip+0x23770]; ret; 
0x00000000412129: movsx eax, bl; sub eax, 0x20; cdqe; movzx eax, byte ptr [rdi+rax]; jmp qword ptr [rsi+rax*8]; 
0x0000000048bfa0: movsx eax, dl; neg eax; ret; 
0x00000000412128: movsx eax, r11b; sub eax, 0x20; cdqe; movzx eax, byte ptr [rdi+rax]; jmp qword ptr [rsi+rax*8]; 
0x0000000047305e: movsx ecx, byte ptr [rsi]; cmp edi, ecx; ja short 0x0000000000473048; mov eax, r8d; ret; 
0x0000000045d455: movsxd eax, [rax]; add [rax], al; syscall; 
0x00000000497bb8: movsxd eax, [rbp+rax*4]; add rax, r13; notrack jmp rax; 
0x0000000045f1d0: movsxd eax, [rbp+rax*4]; add rax, rbp; notrack jmp rax; 
0x0000000041d8d8: movsxd eax, [rbx+rax*4]; add rax, r11; notrack jmp rax; 
0x0000000045f189: movsxd eax, [rbx+rax*4]; add rax, rbx; notrack jmp rax; 
0x000000004177ef: movsxd eax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x00000000497d31: movsxd eax, [rcx+rsi*4]; add rax, r9; notrack jmp rax; 
0x00000000456821: movsxd eax, [rcx]; add [rax], al; mov rcx, rdx; rep movsb [rdi], [rsi]; ret; 
0x0000000047bb43: movsxd eax, [rdi+rax*4]; add rax, rdi; notrack jmp rax; 
0x0000000048752e: movsxd eax, [rdi]; add rax, rdi; notrack jmp rax; 
0x0000000041d8a6: movsxd eax, [rdx+rax*4]; add rax, r10; notrack jmp rax; 
0x000000004033b5: movsxd eax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000004598d8: movsxd eax, [rdx+rbp*4]; add rax, rdx; notrack jmp rax; 
0x0000000046ceba: movsxd eax, [rdx+rcx*4]; add r8, rdx; notrack jmp r8; 
0x00000000401bf2: movsxd eax, [rdx+rcx*4]; add rax, rdx; notrack jmp rax; 
0x000000004296a6: movsxd eax, [rdx]; add [rax-0x73], cl; add eax, 0x26000; cmove rax, rdx; ret; 
0x0000000044ec41: movsxd eax, [rip-0x6eeb7500]; mov eax, [rcx+rax*4]; sub eax, edx; ret; 
0x0000000044ec75: movsxd eax, [rip-0x75f37500]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x000000004118d0: movsxd eax, [rsi+rax*4]; add rax, r14; notrack jmp rax; 
0x000000004176eb: movsxd eax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x0000000045799a: movsxd eax, [rsi+rdi*4]; add rax, rsi; notrack jmp rax; 
0x00000000457a62: movsxd eax, [rsi+rdx*4]; add rax, rsi; notrack jmp rax; 
0x0000000043a987: movsxd eax, [rsi]; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043abc9: movsxd eax, [rsi]; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000486ff1: movsxd eax, [rsi]; add rax, rsi; notrack jmp rax; 
0x000000004984ae: movsxd eax, [rsp+rax*4]; add rax, r12; notrack jmp rax; 
0x00000000497d6e: movsxd eax, [rsp+rsi*4]; add rax, r12; notrack jmp rax; 
0x000000004563af: movsxd eax, ecx; ret; 
0x00000000446739: movsxd ebp, eax; add eax, 0x8a0c8b00; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x000000004901a0: movsxd ebx, ebx; cmp ch, [rcx]; shl byte ptr [rsi+0xf], 0x1; outsd dx, [rsi]; ret; 
0x000000004759df: movsxd ebx, ebx; mov rdx, rbx; call qword ptr [r13+0x38]; 
0x0000000043948c: movsxd ecx, [rbx+rcx*4]; add r9, r11; notrack jmp r9; 
0x00000000433edc: movsxd ecx, [rbx+rcx*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x00000000432812: movsxd ecx, [rbx+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000433e75: movsxd ecx, [rbx+rdx*4]; add rsi, rdx; add rdi, rdx; add r9, r11; notrack jmp r9; 
0x000000004534da: movsxd ecx, [rbx+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000047bbdf: movsxd ecx, [rdi+rcx*4]; add rcx, rdi; notrack jmp rcx; 
0x0000000042a4c2: movsxd ecx, [rdx+rcx*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000043025e: movsxd ecx, [rdx+rcx*4]; pcmpeqb xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x000000004451ce: movsxd ecx, [rdx+rcx*4]; vpcmpeqb xmm0, xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x000000004579d0: movsxd ecx, [rsi+rax*4]; add rcx, rsi; notrack jmp rcx; 
0x00000000402b00: movsxd ecx, [rsi+rcx*4]; add rcx, rsi; notrack jmp rcx; 
0x000000004563e3: movsxd ecx, ecx; add rax, rcx; sub rax, rdi; ret; 
0x0000000046db2c: movsxd edi, edi; mov rax, fs:[rax]; mov rax, [rax+rdi*8+0x80]; ret; 
0x0000000048239d: movsxd edx, [rbp+rdx*4]; add rdx, r13; notrack jmp rdx; 
0x0000000040f1ad: movsxd edx, [rbx+rdx*4]; add r10, r11; notrack jmp r10; 
0x00000000433fb0: movsxd edx, [rbx+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000047bc43: movsxd edx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x0000000040eeaa: movsxd edx, [rsi+rdx*4]; add rdx, rsi; notrack jmp rdx; 
0x00000000417521: movsxd edx, ebp; mov rdi, rbx; call qword ptr [r14+0x38]; 
0x00000000488e0b: movsxd edx, ebx; mov edi, [rbp-0x460]; lea rsi, [rbp-0x430]; mov eax, 0x14; syscall; 
0x00000000418e98: movsxd edx, ebx; mov rsi, r13; mov rdi, r15; call qword ptr [rbp+0x38]; 
0x0000000049ae73: movsxd esi, esi; jmp qword ptr [rsi+0x2e]; 
0x00000000411540: movsxd esp, esp; mov rdx, r12; call qword ptr [r13+0x38]; 
0x0000000040f1ac: movsxd r10, [r11+r10*4]; add r10, r11; notrack jmp r10; 
0x0000000041153f: movsxd r12, r12d; mov rdx, r12; call qword ptr [r13+0x38]; 
0x0000000049ae72: movsxd r14, esi; jmp qword ptr [rsi+0x2e]; 
0x0000000046ceb9: movsxd r8, [rdx+r9*4]; add r8, rdx; notrack jmp r8; 
0x0000000042a4c1: movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000043025d: movsxd r9, [r10+r9*4]; pcmpeqb xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x000000004451cd: movsxd r9, [r10+r9*4]; vpcmpeqb xmm0, xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000043948b: movsxd r9, [r11+r9*4]; add r9, r11; notrack jmp r9; 
0x00000000433edb: movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x00000000433e74: movsxd r9, [r11+rdx*4]; add rsi, rdx; add rdi, rdx; add r9, r11; notrack jmp r9; 
0x0000000041d8a5: movsxd rax, [r10+rax*4]; add rax, r10; notrack jmp rax; 
0x0000000041d8d7: movsxd rax, [r11+rax*4]; add rax, r11; notrack jmp rax; 
0x000000004984ad: movsxd rax, [r12+rax*4]; add rax, r12; notrack jmp rax; 
0x00000000497d6d: movsxd rax, [r12+rsi*4]; add rax, r12; notrack jmp rax; 
0x00000000497bb7: movsxd rax, [r13+rax*4]; add rax, r13; notrack jmp rax; 
0x000000004118cf: movsxd rax, [r14+rax*4]; add rax, r14; notrack jmp rax; 
0x00000000497d30: movsxd rax, [r9+rsi*4]; add rax, r9; notrack jmp rax; 
0x0000000045f1cf: movsxd rax, [rbp+rax*4]; add rax, rbp; notrack jmp rax; 
0x0000000045f188: movsxd rax, [rbx+rax*4]; add rax, rbx; notrack jmp rax; 
0x000000004177ee: movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x0000000048752d: movsxd rax, [rdi+r12*4]; add rax, rdi; notrack jmp rax; 
0x0000000047bb42: movsxd rax, [rdi+rax*4]; add rax, rdi; notrack jmp rax; 
0x000000004033b4: movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000004598d7: movsxd rax, [rdx+rbp*4]; add rax, rdx; notrack jmp rax; 
0x00000000401bf1: movsxd rax, [rdx+rcx*4]; add rax, rdx; notrack jmp rax; 
0x00000000486ff0: movsxd rax, [rsi+r12*4]; add rax, rsi; notrack jmp rax; 
0x000000004176ea: movsxd rax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x00000000457999: movsxd rax, [rsi+rdi*4]; add rax, rsi; notrack jmp rax; 
0x00000000457a61: movsxd rax, [rsi+rdx*4]; add rax, rsi; notrack jmp rax; 
0x000000004563ae: movsxd rax, ecx; ret; 
0x000000004759de: movsxd rbx, ebx; mov rdx, rbx; call qword ptr [r13+0x38]; 
0x00000000432811: movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x000000004534d9: movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000047bbde: movsxd rcx, [rdi+rcx*4]; add rcx, rdi; notrack jmp rcx; 
0x000000004579cf: movsxd rcx, [rsi+rax*4]; add rcx, rsi; notrack jmp rcx; 
0x00000000402aff: movsxd rcx, [rsi+rcx*4]; add rcx, rsi; notrack jmp rcx; 
0x000000004563e2: movsxd rcx, ecx; add rax, rcx; sub rax, rdi; ret; 
0x0000000046db2b: movsxd rdi, edi; mov rax, fs:[rax]; mov rax, [rax+rdi*8+0x80]; ret; 
0x00000000433faf: movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000048239c: movsxd rdx, [r13+rdx*4]; add rdx, r13; notrack jmp rdx; 
0x0000000047bc42: movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x0000000040eea9: movsxd rdx, [rsi+rdx*4]; add rdx, rsi; notrack jmp rdx; 
0x0000000047b96d: movsxd rdx, ebp; mov rdi, rbx; call qword ptr [r14+0x38]; 
0x00000000488e0a: movsxd rdx, ebx; mov edi, [rbp-0x460]; lea rsi, [rbp-0x430]; mov eax, 0x14; syscall; 
0x00000000418e97: movsxd rdx, ebx; mov rsi, r13; mov rdi, r15; call qword ptr [rbp+0x38]; 
0x00000000417520: movsxd rdx, r13d; mov rdi, rbx; call qword ptr [r14+0x38]; 
0x00000000456983: movups [r11], xmm4; ret; 
0x00000000456a0a: movups [r11], xmm8; ret; 
0x0000000047ddd9: movups [rax+0x40], xmm0; pop rbx; ret; 
0x0000000047cfc1: movups [rax], xmm0; ret; 
0x0000000041f94e: movups [rbp+0x38], xmm0; pop rbp; pop r12; ret; 
0x0000000041b7e2: movups [rbx+0x18], xmm0; movups [rbx+0x28], xmm0; pop rbx; ret; 
0x0000000041b7e6: movups [rbx+0x28], xmm0; pop rbx; ret; 
0x0000000041f1e5: movups [rbx+0x38], xmm0; pop rbx; pop rbp; pop r12; ret; 
0x0000000041ecd4: movups [rbx+0x48], xmm0; pop rbx; ret; 
0x0000000041b7de: movups [rbx+0x8], xmm0; movups [rbx+0x18], xmm0; movups [rbx+0x28], xmm0; pop rbx; ret; 
0x0000000041bc25: movups [rbx+0x8], xmm0; pop rbx; ret; 
0x0000000048bf4d: movups [rbx], xmm0; pop rbx; ret; 
0x00000000456a0b: movups [rbx], xmm0; ret; 
0x00000000456984: movups [rbx], xmm4; ret; 
0x0000000041fbe7: movups [rcx+0x20], xmm0; movups [rcx+0x30], xmm0; movups [rcx+0x40], xmm0; mov qword ptr [rdi+0xa8], 0x0; ret; 
0x0000000041fbeb: movups [rcx+0x30], xmm0; movups [rcx+0x40], xmm0; mov qword ptr [rdi+0xa8], 0x0; ret; 
0x0000000041fbef: movups [rcx+0x40], xmm0; mov qword ptr [rdi+0xa8], 0x0; ret; 
0x00000000456976: movups [rcx-0x10], xmm6; movups [rcx-0x20], xmm7; movups [rcx-0x30], xmm8; movups [r11], xmm4; ret; 
0x0000000045697a: movups [rcx-0x20], xmm7; movups [rcx-0x30], xmm8; movups [r11], xmm4; ret; 
0x0000000045697f: movups [rcx-0x30], xmm0; movups [r11], xmm4; ret; 
0x0000000045697e: movups [rcx-0x30], xmm8; movups [r11], xmm4; ret; 
0x000000004568e4: movups [rdi+0x10], xmm1; movups [rdi+rdx-0x10], xmm2; movups [rdi+rdx-0x20], xmm3; ret; 
0x000000004569fe: movups [rdi+0x10], xmm5; movups [rdi+0x20], xmm6; movups [rdi+0x30], xmm7; movups [r11], xmm8; ret; 
0x00000000456a02: movups [rdi+0x20], xmm6; movups [rdi+0x30], xmm7; movups [r11], xmm8; ret; 
0x00000000456a06: movups [rdi+0x30], xmm7; movups [r11], xmm8; ret; 
0x0000000041ebe9: movups [rdi+0x8], xmm0; ret; 
0x0000000041f9fe: movups [rdi+0xa0], xmm0; ret; 
0x00000000456746: movups [rdi+rdx-0x10], xmm1; ret; 
0x000000004568e8: movups [rdi+rdx-0x10], xmm2; movups [rdi+rdx-0x20], xmm3; ret; 
0x000000004568bb: movups [rdi+rdx-0x10], xmm4; movups [rdi+rdx-0x20], xmm5; movups [rdi+rdx-0x30], xmm6; movups [rdi+rdx-0x40], xmm7; ret; 
0x000000004568ed: movups [rdi+rdx-0x20], xmm3; ret; 
0x000000004568c0: movups [rdi+rdx-0x20], xmm5; movups [rdi+rdx-0x30], xmm6; movups [rdi+rdx-0x40], xmm7; ret; 
0x000000004568c5: movups [rdi+rdx-0x30], xmm6; movups [rdi+rdx-0x40], xmm7; ret; 
0x000000004568ca: movups [rdi+rdx-0x40], xmm7; ret; 
0x0000000048f784: movups [rdi], xmm0; mov [rdx], eax; mov eax, 0x2; ret; 
0x000000004568e1: movups [rdi], xmm0; movups [rdi+0x10], xmm1; movups [rdi+rdx-0x10], xmm2; movups [rdi+rdx-0x20], xmm3; ret; 
0x00000000456743: movups [rdi], xmm0; movups [rdi+rdx-0x10], xmm1; ret; 
0x00000000462c8e: movups [rdx+0x48], xmm0; ret; 
0x0000000046dddc: movups [rsp+0x78], xmm6; movups [rsp+0x88], xmm7; mov r10d, 0x8; mov eax, 0xd; syscall; 
0x0000000046dde1: movups [rsp+0x88], xmm7; mov r10d, 0x8; mov eax, 0xd; syscall; 
0x0000000049683d: movups xmm0, [rip+0x23774]; divss xmm0, [rip+0x23770]; ret; 
0x0000000045673b: movups xmm0, [rsi]; movups xmm1, [rsi+rdx-0x10]; movups [rdi], xmm0; movups [rdi+rdx-0x10], xmm1; ret; 
0x0000000045673e: movups xmm1, [rsi+rdx-0x10]; movups [rdi], xmm0; movups [rdi+rdx-0x10], xmm1; ret; 
0x000000004607ea: movzx eax, al; add eax, 0x1; push rax; call rbx; 
0x00000000480595: movzx eax, al; add rsp, 0x58; ret; 
0x0000000041d8a2: movzx eax, al; movsxd rax, [r10+rax*4]; add rax, r10; notrack jmp rax; 
0x0000000041d8d4: movzx eax, al; movsxd rax, [r11+rax*4]; add rax, r11; notrack jmp rax; 
0x00000000497bb4: movzx eax, al; movsxd rax, [r13+rax*4]; add rax, r13; notrack jmp rax; 
0x00000000496871: movzx eax, al; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x000000004176e7: movzx eax, al; movsxd rax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x00000000493ef0: movzx eax, al; neg eax; ret; 
0x0000000048fbad: movzx eax, al; pop rbx; pop rbp; pop r12; ret; 
0x00000000432104: movzx eax, al; sar rdx, cl; movzx edx, dl; sub eax, edx; ret; 
0x0000000041dff3: movzx eax, bl; pop rbx; pop rbp; pop r12; ret; 
0x0000000042d0a2: movzx eax, byte ptr [rax+rcx+0x40]; movzx edx, byte ptr [rdx+rcx+0x40]; sub eax, edx; vzeroupper; ret; 
0x0000000042cfbc: movzx eax, byte ptr [rax+rcx+0x60]; movzx edx, byte ptr [rdx+rcx+0x60]; sub eax, edx; vzeroupper; ret; 
0x0000000042ba2d: movzx eax, byte ptr [rax+rcx]; movzx edx, byte ptr [rdx+rcx]; sub eax, edx; ret; 
0x0000000042cf57: movzx eax, byte ptr [rax+rcx]; movzx edx, byte ptr [rdx+rcx]; sub eax, edx; vzeroupper; ret; 
0x0000000042cf80: movzx eax, byte ptr [rax+rdi+0x20]; movzx edx, byte ptr [rdx+rdi+0x20]; sub eax, edx; vzeroupper; ret; 
0x0000000042cfa0: movzx eax, byte ptr [rax+rdi+0x40]; movzx edx, byte ptr [rdx+rdi+0x40]; sub eax, edx; vzeroupper; ret; 
0x000000004313b7: movzx eax, byte ptr [rax+rdi]; movzx edx, byte ptr [rdx+rdi]; sub eax, edx; vzeroupper; ret; 
0x0000000041eef0: movzx eax, byte ptr [rax]; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000420d23: movzx eax, byte ptr [rax]; ret; 
0x00000000414e85: movzx eax, byte ptr [rbx+rax]; jmp qword ptr [rsi+rax*8]; 
0x000000004145e4: movzx eax, byte ptr [rbx+rax]; mov rax, [rsi+rax*8]; jmp rax; 
0x00000000412131: movzx eax, byte ptr [rdi+rax]; jmp qword ptr [rsi+rax*8]; 
0x000000004327b4: movzx eax, byte ptr [rdi+rcx+0x20]; movzx edx, byte ptr [rsi+rcx+0x20]; sub eax, edx; vzeroupper; ret; 
0x000000004327d4: movzx eax, byte ptr [rdi+rcx+0x40]; movzx edx, byte ptr [rsi+rcx+0x40]; sub eax, edx; vzeroupper; ret; 
0x0000000043279a: movzx eax, byte ptr [rdi+rcx+0x60]; movzx edx, byte ptr [rsi+rcx+0x60]; sub eax, edx; vzeroupper; ret; 
0x00000000430314: movzx eax, byte ptr [rdi+rcx]; movzx edx, byte ptr [rsi+rcx]; sub eax, edx; ret; 
0x00000000432524: movzx eax, byte ptr [rdi+rcx]; movzx edx, byte ptr [rsi+rcx]; sub eax, edx; vzeroupper; ret; 
0x0000000042cdf4: movzx eax, byte ptr [rdi+rdx+0x20]; movzx edx, byte ptr [rsi+rdx+0x20]; sub eax, edx; vzeroupper; ret; 
0x0000000042ce14: movzx eax, byte ptr [rdi+rdx+0x40]; movzx edx, byte ptr [rsi+rdx+0x40]; sub eax, edx; vzeroupper; ret; 
0x0000000042ce34: movzx eax, byte ptr [rdi+rdx+0x60]; movzx edx, byte ptr [rsi+rdx+0x60]; sub eax, edx; vzeroupper; ret; 
0x0000000042b8c3: movzx eax, byte ptr [rdi+rdx]; movzx edx, byte ptr [rsi+rdx]; sub eax, edx; ret; 
0x0000000042cdda: movzx eax, byte ptr [rdi+rdx]; movzx edx, byte ptr [rsi+rdx]; sub eax, edx; vzeroupper; ret; 
0x0000000042b858: movzx eax, byte ptr [rdi+rdx]; sub eax, ecx; ret; 
0x000000004558a0: movzx eax, byte ptr [rdi-0x10]; movzx edx, byte ptr [rsi-0x10]; sub eax, edx; ret; 
0x00000000455c5a: movzx eax, byte ptr [rdi-0x1]; cmp al, [rsi-0x1]; jne 0x0000000000455dd5; xor eax, eax; ret; 
0x00000000455db2: movzx eax, byte ptr [rdi-0x1]; cmp al, [rsi-0x1]; jne short 0x0000000000455dd5; xor eax, eax; ret; 
0x000000004336c0: movzx eax, byte ptr [rdi-0x1]; movzx ecx, byte ptr [rsi-0x1]; sub eax, ecx; ret; 
0x00000000433473: movzx eax, byte ptr [rdi-0x1]; movzx edx, byte ptr [rsi-0x1]; sub eax, edx; ret; 
0x00000000455887: movzx eax, byte ptr [rdi-0x9]; movzx edx, byte ptr [rsi-0x9]; sub eax, edx; ret; 
0x00000000455900: movzx eax, byte ptr [rdi-0xa]; movzx edx, byte ptr [rsi-0xa]; sub eax, edx; ret; 
0x000000004558f0: movzx eax, byte ptr [rdi-0xb]; movzx edx, byte ptr [rsi-0xb]; sub eax, edx; ret; 
0x000000004558e0: movzx eax, byte ptr [rdi-0xc]; movzx edx, byte ptr [rsi-0xc]; sub eax, edx; ret; 
0x000000004558d0: movzx eax, byte ptr [rdi-0xd]; movzx edx, byte ptr [rsi-0xd]; sub eax, edx; ret; 
0x000000004558c0: movzx eax, byte ptr [rdi-0xe]; movzx edx, byte ptr [rsi-0xe]; sub eax, edx; ret; 
0x000000004558b0: movzx eax, byte ptr [rdi-0xf]; movzx edx, byte ptr [rsi-0xf]; sub eax, edx; ret; 
0x000000004325a0: movzx eax, byte ptr [rdi]; movzx ecx, byte ptr [rsi]; sub eax, ecx; ret; 
0x000000004320e1: movzx eax, byte ptr [rdi]; movzx edx, byte ptr [rsi]; sub eax, edx; ret; 
0x0000000042b873: movzx eax, byte ptr [rdi]; sub eax, ecx; ret; 
0x00000000431583: movzx eax, byte ptr [rdi]; sub eax, ecx; vzeroupper; ret; 
0x00000000479502: movzx eax, byte ptr [rdx+rax]; lea rcx, [rip+0x4dcb3]; jmp qword ptr [rcx+rax*8]; 
0x0000000041ee50: movzx eax, byte ptr [rdx]; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000049d030: movzx eax, byte ptr [rsp+0xf]; add rsp, 0x10; pop rbx; ret; 
0x00000000457a30: movzx eax, cl; pop rbx; ret; 
0x000000004574f1: movzx eax, dh; mov rdx, rdi; rep stosb [rdi]; mov rax, rdx; ret; 
0x00000000462d05: movzx eax, dh; test sil, sil; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x000000004574f0: movzx eax, sil; mov rdx, rdi; rep stosb [rdi]; mov rax, rdx; ret; 
0x00000000462d04: movzx eax, sil; test sil, sil; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x0000000041547a: movzx ecx, byte ptr [rbx+rax]; lea rax, [rip+0xb0d9b]; mov rax, [rax+rcx*8]; jmp rax; 
0x000000004149ca: movzx ecx, byte ptr [rbx+rax]; lea rax, [rip+0xb1a4b]; mov rax, [rax+rcx*8]; jmp rax; 
0x00000000479927: movzx ecx, byte ptr [rdx+rax]; lea rax, [rip+0x4d78e]; jmp qword ptr [rax+rcx*8]; 
0x00000000479746: movzx ecx, byte ptr [rdx+rax]; lea rax, [rip+0x4d86f]; jmp qword ptr [rax+rcx*8]; 
0x00000000455eda: movzx ecx, byte ptr [rsi+rdx+0x3]; test cl, cl; jne short 0x0000000000455ed0; ret; 
0x00000000455f8a: movzx ecx, byte ptr [rsi+rdx+0x3]; test cl, cl; jne short 0x0000000000455f80; ret; 
0x0000000045624a: movzx ecx, byte ptr [rsi+rdx+0x3]; test cl, cl; jne short 0x0000000000456240; sub rax, 0x1; ret; 
0x0000000042b854: movzx ecx, byte ptr [rsi+rdx]; movzx eax, byte ptr [rdi+rdx]; sub eax, ecx; ret; 
0x000000004336c4: movzx ecx, byte ptr [rsi-0x1]; sub eax, ecx; ret; 
0x0000000045683c: movzx ecx, byte ptr [rsi]; mov [rdi], cl; ret; 
0x0000000042b870: movzx ecx, byte ptr [rsi]; movzx eax, byte ptr [rdi]; sub eax, ecx; ret; 
0x00000000431580: movzx ecx, byte ptr [rsi]; movzx eax, byte ptr [rdi]; sub eax, ecx; vzeroupper; ret; 
0x000000004325a3: movzx ecx, byte ptr [rsi]; sub eax, ecx; ret; 
0x00000000456860: movzx ecx, word ptr [rsi+rdx-0x2]; movzx esi, word ptr [rsi]; mov [rdi+rdx-0x2], cx; mov [rdi], si; ret; 
0x00000000450090: movzx ecx, word ptr [rsi]; mov [rdi], cx; mov byte ptr [rdi+0x2], 0x0; vzeroupper; ret; 
0x00000000414c36: movzx edx, byte ptr [rbx+rax]; lea rax, [rip+0xb19df]; jmp qword ptr [rax+rdx*8]; 
0x00000000414a33: movzx edx, byte ptr [rbx+rax]; lea rax, [rip+0xb1ae2]; jmp qword ptr [rax+rdx*8]; 
0x00000000428880: movzx edx, byte ptr [rcx+rax]; cmp dl, r8b; jne short 0x0000000000428870; sub rax, 0x10; ret; 
0x0000000040f6e8: movzx edx, byte ptr [rcx]; test dl, dl; jne short 0x000000000040f6c8; ret; 
0x0000000042d0a6: movzx edx, byte ptr [rdx+rcx+0x40]; sub eax, edx; vzeroupper; ret; 
0x0000000042cfc1: movzx edx, byte ptr [rdx+rcx+0x60]; sub eax, edx; vzeroupper; ret; 
0x0000000042ba31: movzx edx, byte ptr [rdx+rcx]; sub eax, edx; ret; 
0x0000000042cf5b: movzx edx, byte ptr [rdx+rcx]; sub eax, edx; vzeroupper; ret; 
0x0000000042cf85: movzx edx, byte ptr [rdx+rdi+0x20]; sub eax, edx; vzeroupper; ret; 
0x0000000042cfa4: movzx edx, byte ptr [rdx+rdi+0x40]; sub eax, edx; vzeroupper; ret; 
0x000000004313bb: movzx edx, byte ptr [rdx+rdi]; sub eax, edx; vzeroupper; ret; 
0x000000004560fa: movzx edx, byte ptr [rsi+rax+0x3]; test dl, dl; jne short 0x00000000004560f0; lea rax, [rcx-0x1]; ret; 
0x000000004327b9: movzx edx, byte ptr [rsi+rcx+0x20]; sub eax, edx; vzeroupper; ret; 
0x000000004327d8: movzx edx, byte ptr [rsi+rcx+0x40]; sub eax, edx; vzeroupper; ret; 
0x0000000043279f: movzx edx, byte ptr [rsi+rcx+0x60]; sub eax, edx; vzeroupper; ret; 
0x00000000430318: movzx edx, byte ptr [rsi+rcx]; sub eax, edx; ret; 
0x00000000432528: movzx edx, byte ptr [rsi+rcx]; sub eax, edx; vzeroupper; ret; 
0x0000000042cdf9: movzx edx, byte ptr [rsi+rdx+0x20]; sub eax, edx; vzeroupper; ret; 
0x0000000042ce18: movzx edx, byte ptr [rsi+rdx+0x40]; sub eax, edx; vzeroupper; ret; 
0x0000000042ce39: movzx edx, byte ptr [rsi+rdx+0x60]; sub eax, edx; vzeroupper; ret; 
0x0000000042b8c7: movzx edx, byte ptr [rsi+rdx]; sub eax, edx; ret; 
0x0000000042cdde: movzx edx, byte ptr [rsi+rdx]; sub eax, edx; vzeroupper; ret; 
0x000000004558a4: movzx edx, byte ptr [rsi-0x10]; sub eax, edx; ret; 
0x0000000043b7e0: movzx edx, byte ptr [rsi-0x1]; mov [rdi-0x1], dl; ret; 
0x00000000433477: movzx edx, byte ptr [rsi-0x1]; sub eax, edx; ret; 
0x0000000045588b: movzx edx, byte ptr [rsi-0x9]; sub eax, edx; ret; 
0x00000000455904: movzx edx, byte ptr [rsi-0xa]; sub eax, edx; ret; 
0x000000004558f4: movzx edx, byte ptr [rsi-0xb]; sub eax, edx; ret; 
0x000000004558e4: movzx edx, byte ptr [rsi-0xc]; sub eax, edx; ret; 
0x000000004558d2: movzx edx, byte ptr [rsi-0xd]; sub eax, edx; ret; 
0x000000004558d4: movzx edx, byte ptr [rsi-0xd]; sub eax, edx; ret; 
0x000000004558c4: movzx edx, byte ptr [rsi-0xe]; sub eax, edx; ret; 
0x000000004558c2: movzx edx, byte ptr [rsi-0xe]; sub eax, edx; ret; 
0x000000004558b4: movzx edx, byte ptr [rsi-0xf]; sub eax, edx; ret; 
0x0000000043bec0: movzx edx, byte ptr [rsi]; mov [rdi], dl; ret; 
0x000000004320e4: movzx edx, byte ptr [rsi]; sub eax, edx; ret; 
0x0000000040f1a9: movzx edx, dl; movsxd r10, [r11+r10*4]; add r10, r11; notrack jmp r10; 
0x0000000043210a: movzx edx, dl; sub eax, edx; ret; 
0x0000000043b760: movzx edx, word ptr [rsi-0x2]; mov [rdi-0x2], dx; ret; 
0x000000004542a0: movzx edx, word ptr [rsi]; mov [rdi], dx; lea rax, [rdi+0x1]; vzeroupper; ret; 
0x0000000043be50: movzx edx, word ptr [rsi]; mov [rdi], dx; ret; 
0x00000000450080: movzx edx, word ptr [rsi]; mov [rdi], dx; vzeroupper; ret; 
0x0000000047f144: movzx esi, bl; call rbp; 
0x0000000041f2f5: movzx esi, byte ptr [r14]; lea r15, [r14+0x1]; mov rdi, r12; call qword ptr [rbx+0x18]; 
0x0000000041f2f6: movzx esi, byte ptr [rsi]; lea r15, [r14+0x1]; mov rdi, r12; call qword ptr [rbx+0x18]; 
0x00000000497d6a: movzx esi, dh; movsxd rax, [r12+rsi*4]; add rax, r12; notrack jmp rax; 
0x00000000497d2d: movzx esi, dh; movsxd rax, [r9+rsi*4]; add rax, r9; notrack jmp rax; 
0x00000000497d69: movzx esi, sil; movsxd rax, [r12+rsi*4]; add rax, r12; notrack jmp rax; 
0x00000000497d2c: movzx esi, sil; movsxd rax, [r9+rsi*4]; add rax, r9; notrack jmp rax; 
0x00000000456865: movzx esi, word ptr [rsi]; mov [rdi+rdx-0x2], cx; mov [rdi], si; ret; 
0x0000000040f1a8: movzx r10d, r10b; movsxd r10, [r11+r10*4]; add r10, r11; notrack jmp r10; 
0x0000000043152a: movzx r8d, byte ptr [r8+rcx]; movzx edx, byte ptr [rdx+rcx]; sub eax, edx; vzeroupper; ret; 
0x0000000043ac86: mul byte ptr [rax+0x6]; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043a986: mul byte ptr [rbx+0x6]; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043a686: mul byte ptr [rsi+0x6]; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000045965b: neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000459c8f: neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000459ec7: neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x000000004806af: neg eax; mov fs:[rdx], eax; xor eax, eax; mov qword ptr [rip+0x4bc37], 0xffffffffffffffff; ret; 
0x0000000048bfa3: neg eax; ret; 
0x00000000489795: neg eax; test cl, cl; cmove r8, rax; mov rax, r8; ret; 
0x00000000489794: neg rax; test cl, cl; cmove r8, rax; mov rax, r8; ret; 
0x0000000047fa95: nop [rax+rax]; add rax, 0x3; ret; 
0x0000000047fa98: nop [rax+rax]; add rax, 0x3; ret; 
0x0000000047fa97: nop [rax+rax]; add rax, 0x3; ret; 
0x00000000426ec8: nop [rax+rax]; add rsp, 0x18; ret; 
0x00000000426ec7: nop [rax+rax]; add rsp, 0x18; ret; 
0x00000000460933: nop [rax+rax]; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000460932: nop [rax+rax]; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000486446: nop [rax+rax]; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000486447: nop [rax+rax]; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000486448: nop [rax+rax]; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000431968: nop [rax+rax]; bsf eax, eax; lea rax, [rax+rdi+0x10]; ret; 
0x00000000431967: nop [rax+rax]; bsf eax, eax; lea rax, [rax+rdi+0x10]; ret; 
0x0000000048f73a: nop [rax+rax]; bts rax, 0x30; mov [rdi+0x8], rax; mov eax, 0x2; ret; 
0x0000000048f73b: nop [rax+rax]; bts rax, 0x30; mov [rdi+0x8], rax; mov eax, 0x2; ret; 
0x0000000048f5c8: nop [rax+rax]; bts rsi, 0x34; mov eax, 0x1; mov [rdi], rsi; ret; 
0x0000000048f5c7: nop [rax+rax]; bts rsi, 0x34; mov eax, 0x1; mov [rdi], rsi; ret; 
0x00000000423073: nop [rax+rax]; call rax; 
0x0000000045f07b: nop [rax+rax]; endbr64; lea rax, [rip+0x6b555]; ret; 
0x0000000045f07a: nop [rax+rax]; endbr64; lea rax, [rip+0x6b555]; ret; 
0x00000000459bc8: nop [rax+rax]; endbr64; mov eax, 0x18; syscall; 
0x0000000045d448: nop [rax+rax]; endbr64; mov eax, 0x63; syscall; 
0x0000000048685a: nop [rax+rax]; endbr64; mov eax, 0xffffffff; ret; 
0x0000000041f217: nop [rax+rax]; endbr64; mov eax, 0xffffffff; ret; 
0x0000000041f218: nop [rax+rax]; endbr64; mov eax, 0xffffffff; ret; 
0x0000000048685b: nop [rax+rax]; endbr64; mov eax, 0xffffffff; ret; 
0x0000000045d41b: nop [rax+rax]; endbr64; mov r10, rcx; mov eax, 0x19; syscall; 
0x0000000046db78: nop [rax+rax]; endbr64; mov rax, 0xffffffffffffffe0; add rax, fs:[0x0]; ret; 
0x0000000046db75: nop [rax+rax]; endbr64; mov rax, 0xffffffffffffffe0; add rax, fs:[0x0]; ret; 
0x0000000046db77: nop [rax+rax]; endbr64; mov rax, 0xffffffffffffffe0; add rax, fs:[0x0]; ret; 
0x0000000046db58: nop [rax+rax]; endbr64; mov rax, 0xffffffffffffffe8; add rax, fs:[0x0]; ret; 
0x0000000046db55: nop [rax+rax]; endbr64; mov rax, 0xffffffffffffffe8; add rax, fs:[0x0]; ret; 
0x0000000046db57: nop [rax+rax]; endbr64; mov rax, 0xffffffffffffffe8; add rax, fs:[0x0]; ret; 
0x0000000046db3b: nop [rax+rax]; endbr64; mov rax, 0xfffffffffffffff0; add rax, fs:[0x0]; ret; 
0x00000000420b8b: nop [rax+rax]; endbr64; mov rax, 0xffffffffffffffff; ret; 
0x00000000420b8a: nop [rax+rax]; endbr64; mov rax, 0xffffffffffffffff; ret; 
0x00000000420be8: nop [rax+rax]; endbr64; mov rax, [rdi+0x68]; ret; 
0x00000000420be7: nop [rax+rax]; endbr64; mov rax, [rdi+0x68]; ret; 
0x0000000046af78: nop [rax+rax]; endbr64; mov rax, [rip+0x61225]; ret; 
0x000000004615c6: nop [rax+rax]; endbr64; mov rax, [rip+0x6b68d]; ret; 
0x000000004615c7: nop [rax+rax]; endbr64; mov rax, [rip+0x6b68d]; ret; 
0x000000004615c8: nop [rax+rax]; endbr64; mov rax, [rip+0x6b68d]; ret; 
0x00000000420bc5: nop [rax+rax]; endbr64; mov rax, [rip+0xa8905]; ret; 
0x00000000420bc7: nop [rax+rax]; endbr64; mov rax, [rip+0xa8905]; ret; 
0x00000000420bc8: nop [rax+rax]; endbr64; mov rax, [rip+0xa8905]; ret; 
0x00000000420bba: nop [rax+rax]; endbr64; ret; 
0x00000000420bbb: nop [rax+rax]; endbr64; ret; 
0x0000000041fc18: nop [rax+rax]; endbr64; xor eax, eax; ret; 
0x0000000041fc17: nop [rax+rax]; endbr64; xor eax, eax; ret; 
0x000000004545b8: nop [rax+rax]; lea rax, [rdi+0x2]; ret; 
0x000000004545b7: nop [rax+rax]; lea rax, [rdi+0x2]; ret; 
0x000000004545b5: nop [rax+rax]; lea rax, [rdi+0x2]; ret; 
0x000000004545c8: nop [rax+rax]; lea rax, [rdi+0x3]; ret; 
0x000000004545c7: nop [rax+rax]; lea rax, [rdi+0x3]; ret; 
0x000000004545c5: nop [rax+rax]; lea rax, [rdi+0x3]; ret; 
0x000000004545d8: nop [rax+rax]; lea rax, [rdi+0x4]; ret; 
0x000000004545d7: nop [rax+rax]; lea rax, [rdi+0x4]; ret; 
0x000000004545d5: nop [rax+rax]; lea rax, [rdi+0x4]; ret; 
0x000000004545e5: nop [rax+rax]; lea rax, [rdi+0x5]; ret; 
0x000000004545e7: nop [rax+rax]; lea rax, [rdi+0x5]; ret; 
0x000000004545e8: nop [rax+rax]; lea rax, [rdi+0x5]; ret; 
0x000000004545f7: nop [rax+rax]; lea rax, [rdi+0x6]; ret; 
0x000000004545f5: nop [rax+rax]; lea rax, [rdi+0x6]; ret; 
0x000000004545f8: nop [rax+rax]; lea rax, [rdi+0x6]; ret; 
0x00000000454608: nop [rax+rax]; lea rax, [rdi+0x8]; ret; 
0x00000000454607: nop [rax+rax]; lea rax, [rdi+0x8]; ret; 
0x00000000454605: nop [rax+rax]; lea rax, [rdi+0x8]; ret; 
0x00000000454617: nop [rax+rax]; lea rax, [rdi+0x9]; ret; 
0x00000000454618: nop [rax+rax]; lea rax, [rdi+0x9]; ret; 
0x00000000454615: nop [rax+rax]; lea rax, [rdi+0x9]; ret; 
0x00000000454628: nop [rax+rax]; lea rax, [rdi+0xa]; ret; 
0x00000000454627: nop [rax+rax]; lea rax, [rdi+0xa]; ret; 
0x00000000454625: nop [rax+rax]; lea rax, [rdi+0xa]; ret; 
0x00000000454637: nop [rax+rax]; lea rax, [rdi+0xb]; ret; 
0x00000000454635: nop [rax+rax]; lea rax, [rdi+0xb]; ret; 
0x00000000454638: nop [rax+rax]; lea rax, [rdi+0xb]; ret; 
0x00000000454648: nop [rax+rax]; lea rax, [rdi+0xc]; ret; 
0x00000000454647: nop [rax+rax]; lea rax, [rdi+0xc]; ret; 
0x00000000454645: nop [rax+rax]; lea rax, [rdi+0xc]; ret; 
0x00000000454657: nop [rax+rax]; lea rax, [rdi+0xd]; ret; 
0x00000000454655: nop [rax+rax]; lea rax, [rdi+0xd]; ret; 
0x00000000454658: nop [rax+rax]; lea rax, [rdi+0xd]; ret; 
0x00000000454667: nop [rax+rax]; lea rax, [rdi+0xe]; ret; 
0x00000000454665: nop [rax+rax]; lea rax, [rdi+0xe]; ret; 
0x00000000454668: nop [rax+rax]; lea rax, [rdi+0xe]; ret; 
0x000000004767b8: nop [rax+rax]; lea rdi, [rip+0x3c059]; lea rsi, [rip+0x503f2]; movzx eax, byte ptr [rdi+rax]; jmp qword ptr [rsi+rax*8]; 
0x000000004767b7: nop [rax+rax]; lea rdi, [rip+0x3c059]; lea rsi, [rip+0x503f2]; movzx eax, byte ptr [rdi+rax]; jmp qword ptr [rsi+rax*8]; 
0x000000004767b6: nop [rax+rax]; lea rdi, [rip+0x3c059]; lea rsi, [rip+0x503f2]; movzx eax, byte ptr [rdi+rax]; jmp qword ptr [rsi+rax*8]; 
0x0000000045a7b3: nop [rax+rax]; lea rdx, [rsp+0x8]; mov esi, 0x10; mov eax, 0x48; syscall; 
0x0000000045a7b2: nop [rax+rax]; lea rdx, [rsp+0x8]; mov esi, 0x10; mov eax, 0x48; syscall; 
0x0000000045d903: nop [rax+rax]; mov [rax+0x20], rsi; ret; 
0x0000000045d898: nop [rax+rax]; mov [rdi+0x20], rsi; ret; 
0x0000000045d897: nop [rax+rax]; mov [rdi+0x20], rsi; ret; 
0x00000000498b67: nop [rax+rax]; mov [rdi+rsi*8], rdx; add rsp, 0x8; ret; 
0x00000000498b66: nop [rax+rax]; mov [rdi+rsi*8], rdx; add rsp, 0x8; ret; 
0x00000000498b68: nop [rax+rax]; mov [rdi+rsi*8], rdx; add rsp, 0x8; ret; 
0x00000000453c47: nop [rax+rax]; mov [rdi], dh; lea rax, [rdi]; ret; 
0x00000000453c48: nop [rax+rax]; mov [rdi], dh; lea rax, [rdi]; ret; 
0x00000000453617: nop [rax+rax]; mov [rdi], dh; ret; 
0x00000000453618: nop [rax+rax]; mov [rdi], dh; ret; 
0x00000000453158: nop [rax+rax]; mov ax, [rcx]; mov [rdx], ax; lea rax, [rdx+0x1]; ret; 
0x000000004519a8: nop [rax+rax]; mov ax, [rcx]; mov [rdx], ax; mov rax, rdi; ret; 
0x00000000453638: nop [rax+rax]; mov cx, [rsi]; mov [rdi], cx; mov [rdi+0x2], dh; ret; 
0x00000000453637: nop [rax+rax]; mov cx, [rsi]; mov [rdi], cx; mov [rdi+0x2], dh; ret; 
0x00000000492cc8: nop [rax+rax]; mov dword ptr [rip+0x397c6], 0x2; test byte ptr [rip+0x39e9f], 0x40; jne short 0x0000000000492ce8; ret; 
0x00000000492cc6: nop [rax+rax]; mov dword ptr [rip+0x397c6], 0x2; test byte ptr [rip+0x39e9f], 0x40; jne short 0x0000000000492ce8; ret; 
0x00000000492cc7: nop [rax+rax]; mov dword ptr [rip+0x397c6], 0x2; test byte ptr [rip+0x39e9f], 0x40; jne short 0x0000000000492ce8; ret; 
0x00000000453c57: nop [rax+rax]; mov dx, [rsi]; mov [rdi], dx; lea rax, [rdi+0x1]; ret; 
0x00000000453c56: nop [rax+rax]; mov dx, [rsi]; mov [rdi], dx; lea rax, [rdi+0x1]; ret; 
0x00000000453c58: nop [rax+rax]; mov dx, [rsi]; mov [rdi], dx; lea rax, [rdi+0x1]; ret; 
0x0000000041a18b: nop [rax+rax]; mov eax, 0xffffffff; pop rbp; ret; 
0x0000000041a18a: nop [rax+rax]; mov eax, 0xffffffff; pop rbp; ret; 
0x00000000420d43: nop [rax+rax]; mov eax, 0xffffffff; ret; 
0x00000000420967: nop [rax+rax]; mov eax, 0xffffffff; ret; 
0x0000000041af48: nop [rax+rax]; mov eax, 0xffffffff; ret; 
0x00000000420966: nop [rax+rax]; mov eax, 0xffffffff; ret; 
0x00000000453658: nop [rax+rax]; mov ecx, [rsi]; mov [rdi+0x4], dh; mov [rdi], ecx; ret; 
0x00000000453657: nop [rax+rax]; mov ecx, [rsi]; mov [rdi+0x4], dh; mov [rdi], ecx; ret; 
0x00000000453655: nop [rax+rax]; mov ecx, [rsi]; mov [rdi+0x4], dh; mov [rdi], ecx; ret; 
0x0000000045968a: nop [rax+rax]; mov edi, edx; mov eax, esi; syscall; 
0x0000000045968b: nop [rax+rax]; mov edi, edx; mov eax, esi; syscall; 
0x0000000047cc26: nop [rax+rax]; mov edx, 0x10; mov rsi, r13; mov rdi, r15; call qword ptr [r14+0x38]; 
0x0000000047cc27: nop [rax+rax]; mov edx, 0x10; mov rsi, r13; mov rdi, r15; call qword ptr [r14+0x38]; 
0x0000000047cc28: nop [rax+rax]; mov edx, 0x10; mov rsi, r13; mov rdi, r15; call qword ptr [r14+0x38]; 
0x0000000045364b: nop [rax+rax]; mov edx, [rsi]; mov [rdi], edx; ret; 
0x0000000045364a: nop [rax+rax]; mov edx, [rsi]; mov [rdi], edx; ret; 
0x0000000048d59b: nop [rax+rax]; mov qword ptr fs:[r12], 0x0; mov rax, [rsp+0x10]; mov rdi, [rsp+0x18]; call rax; 
0x000000004968c3: nop [rax+rax]; mov r8, [r8]; mov [r9], r8; add rsp, 0x8; ret; 
0x0000000047fac8: nop [rax+rax]; mov rax, 0x2; ret; 
0x0000000047fad8: nop [rax+rax]; mov rax, 0x3; ret; 
0x0000000047fae8: nop [rax+rax]; mov rax, 0x4; ret; 
0x0000000047faf8: nop [rax+rax]; mov rax, 0x5; ret; 
0x0000000047fb08: nop [rax+rax]; mov rax, 0x6; ret; 
0x0000000047fb18: nop [rax+rax]; mov rax, 0x7; ret; 
0x00000000459c9b: nop [rax+rax]; mov rax, 0xffffffffffffffc0; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000459c9a: nop [rax+rax]; mov rax, 0xffffffffffffffc0; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000004806c2: nop [rax+rax]; mov rax, 0xffffffffffffffc0; mov dword ptr fs:[rax], 0xc; mov eax, 0xffffffff; ret; 
0x000000004806c3: nop [rax+rax]; mov rax, 0xffffffffffffffc0; mov dword ptr fs:[rax], 0xc; mov eax, 0xffffffff; ret; 
0x00000000410263: nop [rax+rax]; mov rax, [rax+0x18]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000410262: nop [rax+rax]; mov rax, [rax+0x18]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000496a13: nop [rax+rax]; mov rax, [rsi+0xb0]; add rsp, 0x8; ret; 
0x0000000045956b: nop [rax+rax]; mov rax, r8; shr rax, 0x2; vzeroupper; ret; 
0x0000000044fcd7: nop [rax+rax]; mov rax, r8; vzeroupper; ret; 
0x0000000044fcd8: nop [rax+rax]; mov rax, r8; vzeroupper; ret; 
0x00000000453697: nop [rax+rax]; mov rcx, [rsi]; mov [rdi+0x8], dh; mov [rdi], rcx; ret; 
0x00000000453698: nop [rax+rax]; mov rcx, [rsi]; mov [rdi+0x8], dh; mov [rdi], rcx; ret; 
0x0000000045368b: nop [rax+rax]; mov rdx, [rsi]; mov [rdi], rdx; ret; 
0x00000000403073: nop [rax+rax]; mov rdx, r13; mov rsi, r12; mov edi, ebp; call qword ptr [r15+rbx*8]; 
0x0000000049545a: nop [rax+rax]; mov rdx, r13; mov rsi, r12; mov edi, ebp; call qword ptr [rbx]; 
0x0000000049545b: nop [rax+rax]; mov rdx, r13; mov rsi, r12; mov edi, ebp; call qword ptr [rbx]; 
0x0000000049b5ca: nop [rax+rax]; mov rdx, rbp; mov esi, 0x40; mov rdi, r13; call rbx; 
0x0000000049b5cb: nop [rax+rax]; mov rdx, rbp; mov esi, 0x40; mov rdi, r13; call rbx; 
0x00000000428308: nop [rax+rax]; mov rsi, [rsp+0x28]; mov rdi, r12; call rax; 
0x00000000428f88: nop [rax+rax]; mov rsi, r12; call rax; 
0x00000000428f87: nop [rax+rax]; mov rsi, r12; call rax; 
0x000000004558fb: nop [rax+rax]; movzx eax, byte ptr [rdi-0xa]; movzx edx, byte ptr [rsi-0xa]; sub eax, edx; ret; 
0x000000004558eb: nop [rax+rax]; movzx eax, byte ptr [rdi-0xb]; movzx edx, byte ptr [rsi-0xb]; sub eax, edx; ret; 
0x000000004558db: nop [rax+rax]; movzx eax, byte ptr [rdi-0xc]; movzx edx, byte ptr [rsi-0xc]; sub eax, edx; ret; 
0x000000004558cb: nop [rax+rax]; movzx eax, byte ptr [rdi-0xd]; movzx edx, byte ptr [rsi-0xd]; sub eax, edx; ret; 
0x000000004558bb: nop [rax+rax]; movzx eax, byte ptr [rdi-0xe]; movzx edx, byte ptr [rsi-0xe]; sub eax, edx; ret; 
0x000000004558ab: nop [rax+rax]; movzx eax, byte ptr [rdi-0xf]; movzx edx, byte ptr [rsi-0xf]; sub eax, edx; ret; 
0x0000000043259b: nop [rax+rax]; movzx eax, byte ptr [rdi]; movzx ecx, byte ptr [rsi]; sub eax, ecx; ret; 
0x0000000042ea27: nop [rax+rax]; movzx ecx, byte ptr [rsi]; movzx eax, byte ptr [rdi]; sub eax, ecx; ret; 
0x0000000042ea28: nop [rax+rax]; movzx ecx, byte ptr [rsi]; movzx eax, byte ptr [rdi]; sub eax, ecx; ret; 
0x00000000431ba2: nop [rax+rax]; nop [rax]; bsf eax, eax; lea rax, [rax+rdi-0x10]; ret; 
0x00000000431ba4: nop [rax+rax]; nop [rax]; bsf eax, eax; lea rax, [rax+rdi-0x10]; ret; 
0x00000000431ba5: nop [rax+rax]; nop [rax]; bsf eax, eax; lea rax, [rax+rdi-0x10]; ret; 
0x00000000459634: nop [rax+rax]; nop [rax]; endbr64; mov eax, 0x25; syscall; 
0x00000000459633: nop [rax+rax]; nop [rax]; endbr64; mov eax, 0x25; syscall; 
0x00000000459632: nop [rax+rax]; nop [rax]; endbr64; mov eax, 0x25; syscall; 
0x0000000045a713: nop [rax+rax]; nop [rax]; endbr64; mov eax, 0x3; syscall; 
0x0000000045a714: nop [rax+rax]; nop [rax]; endbr64; mov eax, 0x3; syscall; 
0x0000000045a715: nop [rax+rax]; nop [rax]; endbr64; mov eax, 0x3; syscall; 
0x00000000498c04: nop [rax+rax]; nop [rax]; endbr64; mov rax, [rdi+0xb0]; ret; 
0x00000000498c02: nop [rax+rax]; nop [rax]; endbr64; mov rax, [rdi+0xb0]; ret; 
0x00000000498c05: nop [rax+rax]; nop [rax]; endbr64; mov rax, [rdi+0xb0]; ret; 
0x0000000043b643: nop [rax+rax]; nop [rax]; mov edx, [rsi-0x4]; mov [rdi-0x4], edx; ret; 
0x0000000043b644: nop [rax+rax]; nop [rax]; mov edx, [rsi-0x4]; mov [rdi-0x4], edx; ret; 
0x0000000043b641: nop [rax+rax]; nop [rax]; mov edx, [rsi-0x4]; mov [rdi-0x4], edx; ret; 
0x0000000046dd13: nop [rax+rax]; nop [rax]; mov rax, 0xf; syscall; 
0x0000000046dd14: nop [rax+rax]; nop [rax]; mov rax, 0xf; syscall; 
0x0000000046dd11: nop [rax+rax]; nop [rax]; mov rax, 0xf; syscall; 
0x000000004358e4: nop [rax+rax]; nop [rax]; mov rdx, [rsi-0x8]; mov [rdi-0x8], rdx; ret; 
0x000000004358e1: nop [rax+rax]; nop [rax]; mov rdx, [rsi-0x8]; mov [rdi-0x8], rdx; ret; 
0x000000004358e3: nop [rax+rax]; nop [rax]; mov rdx, [rsi-0x8]; mov [rdi-0x8], rdx; ret; 
0x0000000043b7d3: nop [rax+rax]; nop [rax]; movzx edx, byte ptr [rsi-0x1]; mov [rdi-0x1], dl; ret; 
0x0000000043b7d1: nop [rax+rax]; nop [rax]; movzx edx, byte ptr [rsi-0x1]; mov [rdi-0x1], dl; ret; 
0x0000000043b7d4: nop [rax+rax]; nop [rax]; movzx edx, byte ptr [rsi-0x1]; mov [rdi-0x1], dl; ret; 
0x0000000043b751: nop [rax+rax]; nop [rax]; movzx edx, word ptr [rsi-0x2]; mov [rdi-0x2], dx; ret; 
0x0000000043b754: nop [rax+rax]; nop [rax]; movzx edx, word ptr [rsi-0x2]; mov [rdi-0x2], dx; ret; 
0x0000000043b753: nop [rax+rax]; nop [rax]; movzx edx, word ptr [rsi-0x2]; mov [rdi-0x2], dx; ret; 
0x00000000456272: nop [rax+rax]; nop [rax]; xor eax, eax; ret; 
0x00000000456275: nop [rax+rax]; nop [rax]; xor eax, eax; ret; 
0x00000000456274: nop [rax+rax]; nop [rax]; xor eax, eax; ret; 
0x0000000047ef94: nop [rax+rax]; nop [rax]; xor eax, eax; vzeroupper; ret; 
0x0000000047ef92: nop [rax+rax]; nop [rax]; xor eax, eax; vzeroupper; ret; 
0x0000000047ef95: nop [rax+rax]; nop [rax]; xor eax, eax; vzeroupper; ret; 
0x0000000045acb6: nop [rax+rax]; nop; endbr64; mov eax, 0x1c; syscall; 
0x0000000045acb7: nop [rax+rax]; nop; endbr64; mov eax, 0x1c; syscall; 
0x0000000045acb5: nop [rax+rax]; nop; endbr64; mov eax, 0x1c; syscall; 
0x00000000480456: nop [rax+rax]; nop; endbr64; mov eax, 0x66; syscall; 
0x00000000480457: nop [rax+rax]; nop; endbr64; mov eax, 0x66; syscall; 
0x00000000480455: nop [rax+rax]; nop; endbr64; mov eax, 0x66; syscall; 
0x0000000045ac87: nop [rax+rax]; nop; endbr64; mov eax, 0xa; syscall; 
0x0000000045ac86: nop [rax+rax]; nop; endbr64; mov eax, 0xa; syscall; 
0x0000000045ac85: nop [rax+rax]; nop; endbr64; mov eax, 0xa; syscall; 
0x0000000045ac57: nop [rax+rax]; nop; endbr64; mov eax, 0xb; syscall; 
0x0000000045ac55: nop [rax+rax]; nop; endbr64; mov eax, 0xb; syscall; 
0x0000000045ac56: nop [rax+rax]; nop; endbr64; mov eax, 0xb; syscall; 
0x00000000498b06: nop [rax+rax]; nop; endbr64; mov rax, [rdi+0x90]; ret; 
0x00000000498b04: nop [rax+rax]; nop; endbr64; mov rax, [rdi+0x90]; ret; 
0x00000000498b07: nop [rax+rax]; nop; endbr64; mov rax, [rdi+0x90]; ret; 
0x000000004545a7: nop [rax+rax]; nop; lea rax, [rdi+0x1]; ret; 
0x000000004545a6: nop [rax+rax]; nop; lea rax, [rdi+0x1]; ret; 
0x000000004545a4: nop [rax+rax]; nop; lea rax, [rdi+0x1]; ret; 
0x00000000454596: nop [rax+rax]; nop; lea rax, [rdi]; ret; 
0x00000000454594: nop [rax+rax]; nop; lea rax, [rdi]; ret; 
0x00000000454597: nop [rax+rax]; nop; lea rax, [rdi]; ret; 
0x0000000047fab7: nop [rax+rax]; nop; mov rax, 0x1; ret; 
0x0000000047fab4: nop [rax+rax]; nop; mov rax, 0x1; ret; 
0x0000000047fab6: nop [rax+rax]; nop; mov rax, 0x1; ret; 
0x00000000431e47: nop [rax+rax]; nop; vzeroupper; xor eax, eax; ret; 
0x00000000431e46: nop [rax+rax]; nop; vzeroupper; xor eax, eax; ret; 
0x00000000431e44: nop [rax+rax]; nop; vzeroupper; xor eax, eax; ret; 
0x0000000041bc2b: nop [rax+rax]; or dword ptr [rbx], 0x20; mov eax, 0xffffffff; pop rbx; ret; 
0x0000000048fb1b: nop [rax+rax]; pop rbp; ret; 
0x00000000492db7: nop [rax+rax]; pop rbp; ret; 
0x0000000048fb1a: nop [rax+rax]; pop rbp; ret; 
0x00000000492db8: nop [rax+rax]; pop rbp; ret; 
0x0000000049ca36: nop [rax+rax]; ret; 
0x00000000401d63: nop [rax+rax]; ret; 
0x0000000049ca37: nop [rax+rax]; ret; 
0x0000000045df18: nop [rax+rax]; ret; 
0x0000000045df17: nop [rax+rax]; ret; 
0x0000000045ba7a: nop [rax+rax]; ret; 
0x000000004208b3: nop [rax+rax]; sub edx, [rax+0x10]; mov eax, [rdi+0x10]; sub eax, edx; ret; 
0x000000004208b2: nop [rax+rax]; sub edx, [rax+0x10]; mov eax, [rdi+0x10]; sub eax, edx; ret; 
0x0000000041fdd2: nop [rax+rax]; sub rax, rcx; sub eax, 0x1; ret; 
0x0000000041fdd3: nop [rax+rax]; sub rax, rcx; sub eax, 0x1; ret; 
0x0000000047df03: nop [rax+rax]; sub rcx, rax; sar rcx, 0x2; lea eax, [rcx-0x1]; ret; 
0x0000000047df02: nop [rax+rax]; sub rcx, rax; sar rcx, 0x2; lea eax, [rcx-0x1]; ret; 
0x00000000431e57: nop [rax+rax]; tzcnt eax, eax; add rax, rdi; vzeroupper; ret; 
0x00000000431e58: nop [rax+rax]; tzcnt eax, eax; add rax, rdi; vzeroupper; ret; 
0x00000000431e56: nop [rax+rax]; tzcnt eax, eax; add rax, rdi; vzeroupper; ret; 
0x00000000453626: nop [rax+rax]; xchg ax, ax; mov dx, [rsi]; mov [rdi], dx; ret; 
0x00000000453625: nop [rax+rax]; xchg ax, ax; mov dx, [rsi]; mov [rdi], dx; ret; 
0x00000000453623: nop [rax+rax]; xchg ax, ax; mov dx, [rsi]; mov [rdi], dx; ret; 
0x000000004579a3: nop [rax+rax]; xor eax, eax; pop rbx; ret; 
0x0000000044fce8: nop [rax+rax]; xor eax, eax; ret; 
0x0000000041aadb: nop [rax+rax]; xor eax, eax; ret; 
0x0000000041aada: nop [rax+rax]; xor eax, eax; ret; 
0x0000000044fce7: nop [rax+rax]; xor eax, eax; ret; 
0x0000000043156b: nop [rax+rax]; xor eax, eax; vzeroupper; ret; 
0x0000000043156a: nop [rax+rax]; xor eax, eax; vzeroupper; ret; 
0x00000000402897: nop [rax+rax]; xor edi, edi; mov eax, edx; syscall; 
0x00000000402896: nop [rax+rax]; xor edi, edi; mov eax, edx; syscall; 
0x00000000402898: nop [rax+rax]; xor edi, edi; mov eax, edx; syscall; 
0x0000000047faa7: nop [rax+rax]; xor rax, rax; ret; 
0x000000004543d8: nop [rax+rax]; xor rax, rax; ret; 
0x0000000047faa5: nop [rax+rax]; xor rax, rax; ret; 
0x0000000047fa8c: nop [rax]; add rax, 0x1; ret; 
0x000000004932f4: nop [rax]; add rsp, 0x8; ret; 
0x00000000433e1c: nop [rax]; and eax, 0xff; and ecx, 0xff; sub eax, ecx; ret; 
0x00000000431959: nop [rax]; bsf eax, eax; add rax, rdi; ret; 
0x00000000431979: nop [rax]; bsf eax, eax; lea rax, [rax+rdi+0x20]; ret; 
0x0000000043194c: nop [rax]; bsf eax, eax; lea rax, [rax+rdi-0x10]; ret; 
0x00000000431bad: nop [rax]; bsf eax, eax; lea rax, [rax+rdi-0x10]; ret; 
0x00000000403105: nop [rax]; call qword ptr [rbp+rbx*8]; 
0x00000000410375: nop [rax]; call qword ptr [rbx]; 
0x00000000491b79: nop [rax]; call qword ptr [rbx]; 
0x00000000490861: nop [rax]; call r13; 
0x00000000490604: nop [rax]; call rax; 
0x0000000048a341: nop [rax]; cmp rax, r8; ja short 0x000000000048a358; add rsp, 0x8; ret; 
0x0000000041f159: nop [rax]; endbr64; cmp qword ptr [rdi+0x38], 0x0; je short 0x000000000041f170; ret; 
0x00000000498bac: nop [rax]; endbr64; mov [rdi+0x98], rsi; ret; 
0x0000000045aa0c: nop [rax]; endbr64; mov eax, 0x1; syscall; 
0x0000000045963c: nop [rax]; endbr64; mov eax, 0x25; syscall; 
0x00000000494099: nop [rax]; endbr64; mov eax, 0x26; syscall; 
0x0000000049026c: nop [rax]; endbr64; mov eax, 0x27; syscall; 
0x0000000045a71d: nop [rax]; endbr64; mov eax, 0x3; syscall; 
0x0000000048047c: nop [rax]; endbr64; mov eax, 0x68; syscall; 
0x0000000048046c: nop [rax]; endbr64; mov eax, 0x6b; syscall; 
0x0000000048048c: nop [rax]; endbr64; mov eax, 0x6c; syscall; 
0x00000000459f89: nop [rax]; endbr64; mov eax, 0x8; syscall; 
0x00000000480679: nop [rax]; endbr64; mov eax, 0xc; syscall; 
0x00000000420b7c: nop [rax]; endbr64; mov eax, 0xffffffff; ret; 
0x0000000042087c: nop [rax]; endbr64; mov eax, [rdi+0x10]; sub eax, [rsi+0x10]; ret; 
0x0000000049027c: nop [rax]; endbr64; mov r10, rcx; mov eax, 0x11; syscall; 
0x0000000048c959: nop [rax]; endbr64; mov rax, [rax+0x8]; sub rax, fs:[0x0]; ret; 
0x00000000498b79: nop [rax]; endbr64; mov rax, [rdi+0x98]; ret; 
0x00000000498bbc: nop [rax]; endbr64; mov rax, [rdi+0xa0]; ret; 
0x00000000498c1c: nop [rax]; endbr64; mov rax, [rdi+0xa8]; ret; 
0x00000000498c0d: nop [rax]; endbr64; mov rax, [rdi+0xb0]; ret; 
0x00000000498bcc: nop [rax]; endbr64; mov rax, [rdi+0xb8]; ret; 
0x000000004615dc: nop [rax]; endbr64; mov rax, [rip+0x6b68d]; ret; 
0x00000000420bf9: nop [rax]; endbr64; mov rax, rdi; ret; 
0x0000000045d7dc: nop [rax]; endbr64; ret; 
0x00000000420b9c: nop [rax]; endbr64; xor eax, eax; ret; 
0x0000000048f82c: nop [rax]; lea rax, [rip+0x3cb69]; mov [rip+0x3cb4a], rax; ret; 
0x000000004875ed: nop [rax]; mov [rbp-0xf0], r11; call r10; 
0x00000000424145: nop [rax]; mov [rsp+0x18], r10; mov [rsp+0x10], r8; call rax; 
0x0000000045199d: nop [rax]; mov al, [rcx]; mov [rdx], al; mov rax, rdi; ret; 
0x0000000041bb64: nop [rax]; mov eax, 0xffffffff; ret; 
0x0000000045318c: nop [rax]; mov eax, [rcx]; mov [rdx], eax; lea rax, [rdx+0x3]; ret; 
0x00000000462a61: nop [rax]; mov eax, [rip+0x6972e]; test eax, eax; je short 0x0000000000462a78; ret; 
0x00000000418e21: nop [rax]; mov edx, 0x10; mov rsi, r13; mov rdi, r15; call qword ptr [r14+0x38]; 
0x0000000043b64c: nop [rax]; mov edx, [rsi-0x4]; mov [rdi-0x4], edx; ret; 
0x0000000043bd69: nop [rax]; mov edx, [rsi]; mov [rdi], edx; ret; 
0x0000000046dd1c: nop [rax]; mov rax, 0xf; syscall; 
0x0000000046df29: nop [rax]; mov rax, 0xffffffffffffffc0; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000045abe1: nop [rax]; mov rax, 0xffffffffffffffc0; mov dword ptr fs:[rax], 0x16; mov rax, 0xffffffffffffffff; ret; 
0x0000000048fd4d: nop [rax]; mov rax, [rbx+0x10]; mov [rax], rdi; pop rbx; ret; 
0x000000004530dd: nop [rax]; mov rax, [rcx]; mov [rdx], rax; lea rax, [rdx+0x7]; ret; 
0x0000000045192d: nop [rax]; mov rax, [rcx]; mov [rdx], rax; mov rax, rdi; ret; 
0x00000000457a9d: nop [rax]; mov rax, rdx; pop rbx; ret; 
0x000000004358ec: nop [rax]; mov rdx, [rsi-0x8]; mov [rdi-0x8], rdx; ret; 
0x0000000043bba9: nop [rax]; mov rdx, [rsi]; mov [rdi], rdx; ret; 
0x0000000045a841: nop [rax]; mov rdx, rsp; mov esi, 0x10; mov eax, 0x48; syscall; 
0x00000000426ed5: nop [rax]; mov rsi, [rsp+0x18]; add rsp, 0x18; jmp rax; 
0x000000004270ed: nop [rax]; mov rsi, [rsp+0x38]; mov rdi, r14; call rax; 
0x0000000047fd3d: nop [rax]; mov rsi, r12; mov edi, ebp; mov eax, 0xe4; syscall; 
0x0000000046e30c: nop [rax]; mov rsi, r13; mov rdi, r14; mov rdx, r12; call rbp; 
0x0000000041b561: nop [rax]; mov rsi, rbx; mov edi, 0x2; mov eax, r9d; syscall; 
0x00000000453719: nop [rax]; movdqu xmm0, [rsi]; movdqu [rdi], xmm0; mov [rdi+0x10], dh; ret; 
0x0000000045589d: nop [rax]; movzx eax, byte ptr [rdi-0x10]; movzx edx, byte ptr [rsi-0x10]; sub eax, edx; ret; 
0x0000000043281d: nop [rax]; movzx eax, byte ptr [rdi]; movzx ecx, byte ptr [rsi]; sub eax, ecx; ret; 
0x00000000457a29: nop [rax]; movzx eax, cl; pop rbx; ret; 
0x0000000042b86d: nop [rax]; movzx ecx, byte ptr [rsi]; movzx eax, byte ptr [rdi]; sub eax, ecx; ret; 
0x0000000043b7dc: nop [rax]; movzx edx, byte ptr [rsi-0x1]; mov [rdi-0x1], dl; ret; 
0x0000000043beb9: nop [rax]; movzx edx, byte ptr [rsi]; mov [rdi], dl; ret; 
0x0000000043b75c: nop [rax]; movzx edx, word ptr [rsi-0x2]; mov [rdi-0x2], dx; ret; 
0x0000000043be49: nop [rax]; movzx edx, word ptr [rsi]; mov [rdi], dx; ret; 
0x00000000450079: nop [rax]; movzx edx, word ptr [rsi]; mov [rdi], dx; vzeroupper; ret; 
0x0000000042799c: nop [rax]; pop rbp; pop r12; pop r13; jmp rax; 
0x00000000458651: nop [rax]; pop rbp; ret; 
0x0000000041fc85: nop [rax]; pop rbp; ret; 
0x00000000491ba9: nop [rax]; pop rbx; pop rbp; pop r12; ret; 
0x000000004216bd: nop [rax]; ret; 
0x00000000407654: nop [rax]; ret; 
0x0000000045b9c9: nop [rax]; ret; 
0x0000000044f4ad: nop [rax]; tzcnt eax, eax; add rax, rdi; vzeroupper; ret; 
0x0000000045627d: nop [rax]; xor eax, eax; ret; 
0x0000000040f6f1: nop [rax]; xor eax, eax; ret; 
0x0000000041d4ec: nop [rax]; xor eax, eax; ret; 
0x0000000047ef9d: nop [rax]; xor eax, eax; vzeroupper; ret; 
0x0000000041892d: nop [rax]; xor r8d, r8d; mov rax, r8; ret; 
0x0000000041b721: nop [rax]; xor r8d, r8d; mov rax, r8; ret; 
0x0000000047fd32: nop edx, edi; add rsp, 0x8; pop rbp; pop r12; ret; 
0x0000000041f161: nop edx, edi; cmp qword ptr [rdi+0x38], 0x0; je short 0x000000000041f170; ret; 
0x0000000041b681: nop edx, edi; cmp qword ptr [rip+0xad914], 0x0; je short 0x000000000041b68f; ret; 
0x0000000045f081: nop edx, edi; lea rax, [rip+0x6b555]; ret; 
0x00000000498bb1: nop edx, edi; mov [rdi+0x98], rsi; ret; 
0x00000000459bd1: nop edx, edi; mov eax, 0x18; syscall; 
0x0000000045aa11: nop edx, edi; mov eax, 0x1; syscall; 
0x0000000045acc1: nop edx, edi; mov eax, 0x1c; syscall; 
0x00000000459641: nop edx, edi; mov eax, 0x25; syscall; 
0x000000004940a1: nop edx, edi; mov eax, 0x26; syscall; 
0x00000000490271: nop edx, edi; mov eax, 0x27; syscall; 
0x0000000045a721: nop edx, edi; mov eax, 0x3; syscall; 
0x00000000480431: nop edx, edi; mov eax, 0x3f; syscall; 
0x0000000045d451: nop edx, edi; mov eax, 0x63; syscall; 
0x00000000480461: nop edx, edi; mov eax, 0x66; syscall; 
0x00000000480481: nop edx, edi; mov eax, 0x68; syscall; 
0x00000000480471: nop edx, edi; mov eax, 0x6b; syscall; 
0x00000000480491: nop edx, edi; mov eax, 0x6c; syscall; 
0x00000000459f91: nop edx, edi; mov eax, 0x8; syscall; 
0x0000000045ac91: nop edx, edi; mov eax, 0xa; syscall; 
0x0000000045ac61: nop edx, edi; mov eax, 0xb; syscall; 
0x00000000480681: nop edx, edi; mov eax, 0xc; syscall; 
0x0000000041f221: nop edx, edi; mov eax, 0xffffffff; ret; 
0x00000000420881: nop edx, edi; mov eax, [rdi+0x10]; sub eax, [rsi+0x10]; ret; 
0x0000000049ac71: nop edx, edi; mov eax, [rdi]; test eax, eax; jne short 0x000000000049ac80; ret; 
0x0000000049aeb1: nop edx, edi; mov eax, [rdi]; test eax, eax; jne short 0x000000000049aec0; ret; 
0x000000004904c1: nop edx, edi; mov eax, [rip+0x3c71e]; ret; 
0x0000000045f091: nop edx, edi; mov eax, [rip+0x6dbb6]; test eax, eax; je short 0x000000000045f0a0; ret; 
0x00000000459e51: nop edx, edi; mov eax, fs:[0x18]; test eax, eax; jne short 0x0000000000459e70; syscall; 
0x00000000420cd1: nop edx, edi; mov qword ptr [rip+0xab311], 0x0; mov qword ptr [rip+0xab30e], 0x0; ret; 
0x00000000490281: nop edx, edi; mov r10, rcx; mov eax, 0x11; syscall; 
0x0000000045d421: nop edx, edi; mov r10, rcx; mov eax, 0x19; syscall; 
0x0000000048acd1: nop edx, edi; mov rax, 0xffffffffffffffc0; pop rbx; mov eax, fs:[rax]; ret; 
0x0000000046db81: nop edx, edi; mov rax, 0xffffffffffffffe0; add rax, fs:[0x0]; ret; 
0x0000000046db61: nop edx, edi; mov rax, 0xffffffffffffffe8; add rax, fs:[0x0]; ret; 
0x0000000046db41: nop edx, edi; mov rax, 0xfffffffffffffff0; add rax, fs:[0x0]; ret; 
0x0000000041fca1: nop edx, edi; mov rax, 0xffffffffffffffff; ret; 
0x0000000048c951: nop edx, edi; mov rax, [rax+0x8]; ret; 
0x0000000048c961: nop edx, edi; mov rax, [rax+0x8]; sub rax, fs:[0x0]; ret; 
0x00000000420bf1: nop edx, edi; mov rax, [rdi+0x68]; ret; 
0x00000000498b11: nop edx, edi; mov rax, [rdi+0x90]; ret; 
0x00000000498b81: nop edx, edi; mov rax, [rdi+0x98]; ret; 
0x0000000047d5b1: nop edx, edi; mov rax, [rdi+0xa0]; cmp qword ptr [rax+0x30], 0x0; je short 0x000000000047d5c8; ret; 
0x00000000498bc1: nop edx, edi; mov rax, [rdi+0xa0]; ret; 
0x00000000498c21: nop edx, edi; mov rax, [rdi+0xa8]; ret; 
0x00000000498c11: nop edx, edi; mov rax, [rdi+0xb0]; ret; 
0x00000000498bd1: nop edx, edi; mov rax, [rdi+0xb8]; ret; 
0x00000000421a91: nop edx, edi; mov rax, [rdi]; cmp rax, 0x2000000; jbe short 0x0000000000421aa0; ret; 
0x000000004216f1: nop edx, edi; mov rax, [rdi]; cmp rax, 0x408; jbe short 0x0000000000421700; ret; 
0x00000000421af1: nop edx, edi; mov rax, [rdi]; cmp rax, 0xa0; jbe short 0x0000000000421b00; ret; 
0x00000000421731: nop edx, edi; mov rax, [rdi]; cmp rax, 0xffff; jbe short 0x0000000000421740; ret; 
0x000000004932b1: nop edx, edi; mov rax, [rdi]; cmp rax, rsi; je short 0x00000000004932c0; ret; 
0x00000000421751: nop edx, edi; mov rax, [rdi]; nop; mov [rip+0xa83c9], rax; ret; 
0x000000004216e1: nop edx, edi; mov rax, [rdi]; nop; mov [rip+0xa83e9], rax; ret; 
0x000000004216d1: nop edx, edi; mov rax, [rdi]; nop; mov [rip+0xa8401], rax; ret; 
0x00000000421ae1: nop edx, edi; mov rax, [rdi]; nop; mov [rip+0xaa586], eax; ret; 
0x0000000046af81: nop edx, edi; mov rax, [rip+0x61225]; ret; 
0x000000004615d1: nop edx, edi; mov rax, [rip+0x6b68d]; ret; 
0x0000000045ab21: nop edx, edi; mov rax, [rip+0x6f9ad]; test rax, rax; je short 0x000000000045ab31; ret; 
0x00000000420bd1: nop edx, edi; mov rax, [rip+0xa8905]; ret; 
0x00000000420c01: nop edx, edi; mov rax, rdi; ret; 
0x00000000401cb1: nop edx, edi; ret; 
0x0000000049d335: nop edx, edi; sub rsp, 0x8; add rsp, 0x8; ret; 
0x000000004574e1: nop edx, edi; test rdx, rdx; jne short 0x00000000004574ed; mov rax, rdi; ret; 
0x0000000044f6b1: nop edx, edi; test rsi, rsi; jne short 0x000000000044f6bd; xor rax, rax; ret; 
0x00000000459091: nop edx, edi; test rsi, rsi; jne short 0x000000000045909d; xor rax, rax; ret; 
0x0000000041fc21: nop edx, edi; xor eax, eax; ret; 
0x0000000045a9e1: nop edx, edi; xor eax, eax; syscall; 
0x0000000041d501: nop edx, edi; xor eax, eax; test rdx, rdx; jne short 0x000000000041d510; ret; 
0x000000004193c9: nop; add [rax], al; add [rcx+0x1], cl; ret; 
0x0000000041a150: nop; add [rax], al; add cl, ch; ret far; 
0x00000000488f4c: nop; add [rax], eax; add [rcx-0x77], cl; ret far; 
0x00000000402614: nop; add al, [rax]; add [rax-0x39], cl; ret; 
0x0000000049abff: nop; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000004961ff: nop; call rax; 
0x0000000045acbf: nop; endbr64; mov eax, 0x1c; syscall; 
0x0000000048042f: nop; endbr64; mov eax, 0x3f; syscall; 
0x0000000048045f: nop; endbr64; mov eax, 0x66; syscall; 
0x0000000045ac8f: nop; endbr64; mov eax, 0xa; syscall; 
0x0000000045ac5f: nop; endbr64; mov eax, 0xb; syscall; 
0x00000000420ccf: nop; endbr64; mov qword ptr [rip+0xab311], 0x0; mov qword ptr [rip+0xab30e], 0x0; ret; 
0x0000000041fc9f: nop; endbr64; mov rax, 0xffffffffffffffff; ret; 
0x00000000498b0f: nop; endbr64; mov rax, [rdi+0x90]; ret; 
0x00000000401caf: nop; endbr64; ret; 
0x0000000048d6e1: nop; jmp rdx; 
0x000000004545af: nop; lea rax, [rdi+0x1]; ret; 
0x0000000045459f: nop; lea rax, [rdi]; ret; 
0x00000000401ed8: nop; leave; ret; 
0x0000000047e036: nop; mov [rax], rdx; xor eax, eax; ret; 
0x00000000486375: nop; mov [rdi+0x2f4], edx; mov [rdi+0x308], rax; ret; 
0x00000000486343: nop; mov [rdi+0x2fc], ecx; mov [rdi+0x310], rax; ret; 
0x00000000421757: nop; mov [rip+0xa83c9], rax; ret; 
0x00000000421740: nop; mov [rip+0xa83d8], rax; ret; 
0x000000004216e7: nop; mov [rip+0xa83e9], rax; ret; 
0x000000004216d7: nop; mov [rip+0xa8401], rax; ret; 
0x00000000421ae7: nop; mov [rip+0xaa586], eax; ret; 
0x0000000045314f: nop; mov al, [rcx]; mov [rdx], al; lea rax, [rdx]; ret; 
0x00000000435abf: nop; mov dl, [rsi-0x1]; mov [rdi-0x1], dl; ret; 
0x00000000421ac7: nop; mov dword ptr [rip+0xa8022], 0x1; mov [rip+0xa8014], eax; ret; 
0x00000000421aa0: nop; mov dword ptr [rip+0xa8049], 0x1; mov [rip+0xa801e], rax; ret; 
0x00000000421a77: nop; mov dword ptr [rip+0xa8072], 0x1; mov [rip+0xa803f], rax; ret; 
0x00000000421a57: nop; mov dword ptr [rip+0xa8092], 0x1; mov [rip+0xa8057], rax; ret; 
0x00000000435c9f: nop; mov dx, [rsi-0x2]; mov [rdi-0x2], dx; ret; 
0x0000000045362f: nop; mov dx, [rsi]; mov [rdi], dx; ret; 
0x00000000402056: nop; mov eax, 0x0; leave; ret; 
0x0000000042917f: nop; mov eax, 0x16; ret; 
0x0000000043605f: nop; mov edx, [rsi-0x4]; mov [rdi-0x4], edx; ret; 
0x00000000453c7f: nop; mov edx, [rsi]; mov [rdi], edx; lea rax, [rdi+0x3]; ret; 
0x0000000045009f: nop; mov edx, [rsi]; mov [rdi], edx; vzeroupper; ret; 
0x0000000041fbff: nop; mov qword ptr [rdi+0xa0], 0xffffffffffffffff; mov qword ptr [rdi+0xa8], 0x0; ret; 
0x0000000047fabf: nop; mov rax, 0x1; ret; 
0x000000004611ca: nop; mov rdi, rbx; call rsi; 
0x00000000453ccf: nop; mov rdx, [rsi]; mov [rdi], rdx; lea rax, [rdi+0x7]; ret; 
0x000000004994df: nop; mov rsi, r14; mov rdi, rbx; call r15; 
0x00000000453daf: nop; movdqu xmm0, [rsi]; movdqu [rdi], xmm0; lea rax, [rdi+0xf]; ret; 
0x0000000045370f: nop; movdqu xmm0, [rsi]; movdqu [rdi], xmm0; ret; 
0x0000000046dd10: nop; nop [rax+rax]; nop [rax]; mov rax, 0xf; syscall; 
0x00000000401ed7: nop; nop; leave; ret; 
0x0000000048684f: nop; or byte ptr [rdi+0x31d], 0x4; xor eax, eax; ret; 
0x000000004481ed: nop; or eax, [rax]; add [rbp-0x77], cl; ret far; 
0x0000000045626f: nop; rep ret; 
0x00000000401cdf: nop; ret; 
0x00000000431e4f: nop; vzeroupper; xor eax, eax; ret; 
0x000000004319cf: nop; xor eax, eax; ret; 
0x0000000040eeaf: notrack bnd jmp rdx; 
0x0000000045bc4d: notrack call rbx; 
0x0000000040f1b3: notrack jmp r10; 
0x0000000046cec0: notrack jmp r8; 
0x00000000433e81: notrack jmp r9; 
0x00000000401bf8: notrack jmp rax; 
0x00000000402b06: notrack jmp rcx; 
0x0000000040eeb0: notrack jmp rdx; 
0x0000000046b788: or [r11+0x1974fdf8], al; pop rbx; ret; 
0x00000000428c73: or [r11+0x5e7709f8], r8b; lea rdx, [rip+0x77a77]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000041b7e0: or [r15], cl; adc [rbx+0x18], eax; movups [rbx+0x28], xmm0; pop rbx; ret; 
0x0000000048f747: or [r8+0x2], r15b; ret; 
0x00000000420d1c: or [r8+0x39], r9b; shl byte ptr [rbx+0x25], 0x1; movzx eax, byte ptr [rax]; ret; 
0x0000000048f7bb: or [r8-0x3ffe], r15b; sub eax, r8d; mov [rdx], eax; mov eax, 0x2; ret; 
0x0000000048fd26: or [r8-0x73], cl; adc eax, 0x29741; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000451988: or [r8-0x77], cl; or [rax-0x77], cl; clc; ret; 
0x00000000480d12: or [r8-0x7b], cl; shl byte ptr [rdi+0x48], 0x89; ret; 
0x0000000048a97d: or [r8-0x7b], cl; shl byte ptr [rsp+rdi+0x48], 0x89; ret; 
0x000000004984ab: or [r9+0x63], cl; add al, 0x84; add rax, r12; notrack jmp rax; 
0x0000000045b811: or [r9-0x75], cl; add [rbx+0x94901e0], eax; ret; 
0x00000000451a47: or [r9-0x76b7f7be], cl; clc; ret; 
0x00000000420961: or [r9], r14b; rol bl, 0x66; nop [rax+rax]; mov eax, 0xffffffff; ret; 
0x00000000499537: or [rax+0x1], bh; cmp [rsi+0x8], rcx; ja short 0x0000000000499545; sbb eax, eax; ret; 
0x0000000047c6b9: or [rax+0x1], bh; pop rbx; pop rbp; ret; 
0x00000000459f37: or [rax+0x1], bh; syscall; 
0x0000000045e585: or [rax+0x1], cl; ret far; 
0x0000000049051e: or [rax+0x1], cl; ret; 
0x00000000499536: or [rax+0x1], dil; cmp [rsi+0x8], rcx; ja short 0x0000000000499545; sbb eax, eax; ret; 
0x0000000048f748: or [rax+0x2], bh; ret; 
0x000000004636a0: or [rax+0x39], cl; ret far; 
0x0000000042496e: or [rax+0x39], cl; ret; 
0x00000000420d1d: or [rax+0x39], cl; shl byte ptr [rbx+0x25], 0x1; movzx eax, byte ptr [rax]; ret; 
0x00000000495684: or [rax+0x3], cl; add [r13+0x31], r8b; jmp qword ptr [rsi-0x7d]; 
0x00000000402ef8: or [rax+0x9e], bh; mov [rsi], rsi; mov [rsi+0x10], rsi; syscall; 
0x00000000402ef7: or [rax+0x9e], r15b; mov [rsi], rsi; mov [rsi+0x10], rsi; syscall; 
0x0000000047e817: or [rax+0xf], cl; ret; 
0x000000004216f9: or [rax+rax], al; add [rsi+0x1], dh; ret; 
0x0000000042ed87: or [rax+rax], edx; add [rbp-0x77], cl; ret far; 
0x0000000048c967: or [rax+rcx*2+0x2b], ah; add al, 0x25; add [rax], al; add [rax], al; ret; 
0x0000000048c966: or [rax+rcx*2+0x2b], spl; add al, 0x25; add [rax], al; add [rax], al; ret; 
0x0000000041a607: or [rax-0x1], bh; pop rbx; pop rbp; ret; 
0x0000000048f7bc: or [rax-0x3ffe], bh; sub eax, r8d; mov [rdx], eax; mov eax, 0x2; ret; 
0x0000000048fd27: or [rax-0x73], cl; adc eax, 0x29741; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000042a350: or [rax-0x73], cl; add eax, 0x9b08; lea rdx, [rip+0xf091]; cmovne rax, rdx; ret; 
0x0000000042a190: or [rax-0x73], cl; add eax, 0x9ca8; lea rdx, [rip+0xf231]; cmovne rax, rdx; ret; 
0x0000000042a030: or [rax-0x73], cl; add eax, 0xc808; lea rdx, [rip+0x11ea1]; cmovne rax, rdx; ret; 
0x000000004585f1: or [rax-0x73], cl; add eax, 0xcb7; lea rdx, [rip+0xa90]; cmovne rax, rdx; ret; 
0x0000000048eb2c: or [rax-0x73], cl; push rdi; add [rcx-0x77], ecx; push rsp; ret; 
0x0000000048f1d4: or [rax-0x73], cl; push rsi; add [rcx-0x77], ecx; push rsp; ret; 
0x0000000047fcff: or [rax-0x75], cl; add eax, 0x48d91; test rax, rax; je short 0x000000000047fd40; call rax; 
0x0000000041b5d3: or [rax-0x75], cl; xor ecx, [rax-0x7d]; ret; 
0x0000000045198c: or [rax-0x77], cl; clc; ret; 
0x00000000451989: or [rax-0x77], cl; or [rax-0x77], cl; clc; ret; 
0x0000000041ee0a: or [rax-0x77], cl; out dx, eax; pop rbx; pop rbp; jmp rax; 
0x00000000496643: or [rax-0x77], cl; ret far; 
0x000000004230a4: or [rax-0x77], cl; ret; 
0x0000000045af53: or [rax-0x77], ecx; ret far; 
0x000000004230a3: or [rax-0x77], r9b; ret; 
0x00000000480d13: or [rax-0x7b], cl; shl byte ptr [rdi+0x48], 0x89; ret; 
0x0000000048a97e: or [rax-0x7b], cl; shl byte ptr [rsp+rdi+0x48], 0x89; ret; 
0x00000000404c8a: or [rax-0x7d], cl; ret; 
0x0000000042868e: or [rax-0x7f], ecx; sti; jmp far fword ptr [rcx]; 
0x00000000423762: or [rax], al; add [rax-0x7d], cl; ret far; 
0x00000000474022: or [rax], al; add [rax-0x7d], cl; ret; 
0x00000000405992: or [rax], al; add [rax-0x80], al; call far fword ptr [rax+0xf]; 
0x000000004996fe: or [rax], al; add [rax], al; add rsp, 0x8; ret; 
0x0000000046ddeb: or [rax], al; add [rax], al; mov eax, 0xd; syscall; 
0x0000000046df8d: or [rax], al; add [rax], al; mov rsi, r8; mov eax, 0xe; syscall; 
0x00000000457ac9: or [rax], al; add [rax], al; pop rbx; ret; 
0x00000000459f95: or [rax], al; add [rax], al; syscall; 
0x0000000042e138: or [rax], al; add [rbp-0x77], cl; ret far; 
0x00000000483f13: or [rax], al; add [rbx+rdi+0xd], cl; ret far; 
0x00000000475d8c: or [rax], al; add [rcx+0x63], cl; add al, 0x86; add rax, r14; notrack jmp rax; 
0x0000000045c0e5: or [rax], al; add [rcx+rcx*4+0x44], cl; and al, 0x8; mov rdi, [r8]; call rbx; 
0x0000000041268a: or [rax], al; add [rcx-0x7d], al; in al, dx; add [rax-0x8ff43], eax; jmp qword ptr [rax]; 
0x00000000433550: or [rax], al; add [rip+0xffff], ah; and ecx, 0xffff; sub eax, ecx; ret; 
0x0000000040eea5: or [rax], al; mov edx, edx; movsxd rdx, [rsi+rdx*4]; add rdx, rsi; notrack jmp rdx; 
0x000000004177ec: or [rax], al; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x0000000041d8a0: or [rax], al; movzx eax, al; movsxd rax, [r10+rax*4]; add rax, r10; notrack jmp rax; 
0x0000000041d8d2: or [rax], al; movzx eax, al; movsxd rax, [r11+rax*4]; add rax, r11; notrack jmp rax; 
0x00000000417790: or [rax], al; movzx eax, al; movsxd rax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x0000000040f1a6: or [rax], al; movzx r10d, r10b; movsxd r10, [r11+r10*4]; add r10, r11; notrack jmp r10; 
0x00000000402e62: or [rax], eax; add [rax-0x77], cl; ret; 
0x000000004057a3: or [rax], eax; add [rax-0x80], al; call far fword ptr [rax+0xf]; 
0x000000004145f4: or [rax], eax; add [rax-0x80], al; jmp qword ptr [rdi+rcx]; 
0x0000000045abd0: or [rax], eax; add [rax], al; syscall; 
0x0000000044e34f: or [rax], eax; add [rbp-0x77], cl; ret far; 
0x0000000042f798: or [rax], eax; add [rbp-0x77], cl; ret far; 
0x000000004792ce: or [rax], eax; add [rbx-0x4d77b], cl; dec dword ptr [rcx-0x4df73]; jmp far fword ptr [rcx]; 
0x0000000045c07a: or [rax], eax; add [rcx+rcx*4+0x44], cl; and al, 0x8; mov rdi, [r8]; call rbx; 
0x00000000412e35: or [rax], eax; add [rcx+rcx*4-0x16], cl; mov rsi, r10; mov rdi, r15; call qword ptr [rcx+0x38]; 
0x00000000436913: or [rax], eax; lea r11, [rip+0x6a424]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x000000004368b9: or [rax], eax; lea r11, [rip+0x6a43e]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x00000000433f33: or [rax], eax; lea r11, [rip+0x6cc44]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x00000000433ed2: or [rax], eax; lea r11, [rip+0x6cc65]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x00000000401d58: or [rax], eax; mov byte ptr [rip+0xc987f], 0x1; pop rbp; ret; 
0x000000004033b2: or [rax], eax; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000401bef: or [rax], eax; movsxd rax, [rdx+rcx*4]; add rax, rdx; notrack jmp rax; 
0x00000000402afd: or [rax], eax; movsxd rcx, [rsi+rcx*4]; add rcx, rsi; notrack jmp rcx; 
0x0000000045c152: or [rax], r8b; add [rcx+rcx*4+0x44], cl; and al, 0x8; mov rdi, [r8]; call rbx; 
0x0000000041aeb9: or [rbp+0x31], al; ror byte ptr [rcx+rcx*4-0x11], 0x4c; lea ecx, [rsp+0x18]; call rbp; 
0x00000000410547: or [rbp+0x31], al; ror byte ptr [rcx+rcx*4-0x40], 0x5b; pop rbp; ret; 
0x00000000491ba2: or [rbp+0x41], bl; pop rsp; jmp rax; 
0x0000000045b96b: or [rbp+0x41], bl; pop rsp; ret; 
0x0000000046b789: or [rbx+0x1974fdf8], al; pop rbx; ret; 
0x0000000047bbd1: or [rbx+0x29772ef9], al; lea rdi, [rip+0x379fe]; movsxd rcx, [rdi+rcx*4]; add rcx, rdi; notrack jmp rcx; 
0x0000000046b767: or [rbx+0x37403fe], al; ret; 
0x000000004249b8: or [rbx+0x3d485bc1], eax; jmp far fword ptr [rcx]; 
0x0000000046c656: or [rbx+0x41], bl; pop rsi; ret; 
0x0000000041caee: or [rbx+0x48], bl; sub eax, edx; pop rbp; pop r12; ret; 
0x00000000429207: or [rbx+0x5d], bl; pop r12; pop r13; pop r14; ret; 
0x0000000041c4b4: or [rbx+0x5d], bl; pop r12; pop r13; ret; 
0x0000000048ff57: or [rbx+0x5d], bl; pop r12; ret; 
0x00000000403549: or [rbx+0x5d], bl; ret; 
0x00000000428c74: or [rbx+0x5e7709f8], al; lea rdx, [rip+0x77a77]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000041ce53: or [rbx+rcx*4+0x4], cl; and al, 0xe9; ret far; 
0x0000000040a9bd: or [rbx+rcx*4+0xc], cl; and al, 0xe9; ret far; 
0x0000000048ca95: or [rbx+rcx*4+0xd], cl; ret; 
0x0000000042a354: or [rbx-0x72b80000], bl; adc eax, 0xf091; cmovne rax, rdx; ret; 
0x0000000047e1b8: or [rbx], al; add [rax], al; mov esi, 0x80; syscall; 
0x0000000048637f: or [rbx], al; add [rax], al; ret; 
0x00000000463213: or [rcx+0x39], cl; ret far; 
0x000000004984ac: or [rcx+0x63], cl; add al, 0x84; add rax, r12; notrack jmp rax; 
0x0000000048e570: or [rcx+rax-0x3e], cl; mov rax, rdx; pop rbx; ret; 
0x000000004968bd: or [rcx+rcx*4+0x1], cl; ret; 
0x00000000499596: or [rcx+rcx*4+0x54], cl; and al, 0x10; call rax; 
0x0000000040aaa6: or [rcx+rcx*4+0xc], cl; and al, 0xe8; push rax; ret far; 
0x00000000409d2b: or [rcx+rcx*4+0xc], cl; and al, 0xe8; ret far; 
0x0000000040e133: or [rcx+rcx*4+0xc], cl; and al, 0xe8; ret; 
0x0000000045aecc: or [rcx+rcx*4-0x11], cl; call rax; 
0x0000000049541d: or [rcx+rcx*4-0x16], cl; add rax, [rbx]; mov rsi, r12; mov edi, ebp; call rax; 
0x000000004955bb: or [rcx+rcx*4-0x16], cl; mov rsi, r12; mov edi, ebp; call qword ptr [rax]; 
0x00000000419ab2: or [rcx+rcx*4-0x1], cl; call rax; 
0x0000000048abd4: or [rcx+rcx*4-0x20], al; pop rbp; pop r12; ret; 
0x0000000046ff73: or [rcx+rcx*4-0x20], al; pop rbx; pop r12; ret; 
0x0000000045aad0: or [rcx+rcx*4-0x20], cl; pop rbx; pop r12; ret; 
0x0000000048a4d4: or [rcx+rcx*4-0x20], cl; pop rbx; pop rbp; pop r12; ret; 
0x000000004995b7: or [rcx+rcx*4-0x36], cl; mov rdi, r15; lea rbx, [r12+rcx*8]; mov rsi, [rbx]; call rax; 
0x000000004187a6: or [rcx+rcx*4-0x40], al; pop rbx; pop rbp; ret; 
0x0000000049aa4e: or [rcx+rcx*4-0x6], cl; mov rsi, [r12+r14*8+0x10]; mov rdi, r13; call rax; 
0x0000000048f562: or [rcx-0x2feeb728], cl; pop rbp; pop rbx; ret; 
0x0000000049a925: or [rcx-0x75], cl; adc al, 0x24; mov rdi, r14; call rbp; 
0x0000000045b812: or [rcx-0x75], cl; add [rbx+0x94901e0], eax; ret; 
0x00000000419eeb: or [rcx-0x75], cl; sub [r13-0x7b], r8b; shl byte ptr [rbx+rbp*2+0x49], 0x2b; and [r8+0x1], r9b; ret; 
0x00000000451a48: or [rcx-0x76b7f7be], cl; clc; ret; 
0x0000000045af3c: or [rcx-0xa], al; ret; 
0x00000000428f11: or [rcx], dh; rcr byte ptr [rbx+0x5d], 0x41; pop rsp; pop r13; ret; 
0x00000000420962: or [rcx], dh; rol bl, 0x66; nop [rax+rax]; mov eax, 0xffffffff; ret; 
0x00000000492ceb: or [rcx], dh; ror byte ptr [rax-0x73], 0x3d; mov ebx, 0xe900026d; xchg [rsi-0x1], ah; jmp qword ptr [rsi+0xf]; 
0x00000000499540: or [rdi+0x2], dh; sbb eax, eax; ret; 
0x0000000049953f: or [rdi+0x2], r14b; sbb eax, eax; ret; 
0x00000000401cd6: or [rdi+0x4caed0], edi; jmp rax; 
0x00000000428c77: or [rdi+0x5e], esi; lea rdx, [rip+0x77a77]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000004057ec: or [rdi+rcx-0x7b], dl; ret; 
0x0000000046fd1c: or [rdi-0x2f], esi; mov rax, r8; ret; 
0x0000000048091b: or [rdi], ch; jne short 0x00000000004808df; leave; mov eax, 0x1; ret; 
0x0000000041b7e1: or [rdi], cl; adc [rbx+0x18], eax; movups [rbx+0x28], xmm0; pop rbx; ret; 
0x00000000480594: or [rdi], cl; mov dh, 0xc0; add rsp, 0x58; ret; 
0x00000000493eef: or [rdi], cl; mov dh, 0xc0; neg eax; ret; 
0x000000004344bc: or [rdi], ecx; sub [rdi], esp; notrack jmp r9; 
0x00000000456555: or [rdx+0xa], dh; vmovq [rdi], xmm0; vmovq [rsi-0x8], xmm0; ret; 
0x000000004876dd: or [rip-0x7cb7208c], ah; ret; 
0x0000000045a7bc: or [rsi+0x10], bh; mov eax, 0x48; syscall; 
0x000000004585f6: or al, 0x0; add [rax-0x73], cl; adc eax, 0xa90; cmovne rax, rdx; ret; 
0x000000004017d9: or al, 0x0; add [rax], al; add [rax], al; pop rdx; ret; 
0x000000004806d2: or al, 0x0; add [rax], al; mov eax, 0xffffffff; ret; 
0x000000004248ed: or al, 0x0; add [rax], al; mov rax, r8; ret; 
0x00000000480685: or al, 0x0; add [rax], al; syscall; 
0x00000000401d5e: or al, 0x0; add [rbp-0x3d], ebx; nop [rax+rax]; ret; 
0x0000000042f4b8: or al, 0x0; add [rbp-0x77], cl; ret far; 
0x0000000044e04f: or al, 0x0; add [rbp-0x77], cl; ret far; 
0x00000000402222: or al, 0x0; add rsp, 0x88; pop rbx; ret; 
0x0000000040285e: or al, 0x0; mov edi, [rsp+0xc]; mov rsi, [rsp+0x10]; mov rax, [rsp+0x18]; call rax; 
0x00000000402801: or al, 0x0; mov rsi, [rsp+0x10]; mov edi, [rsp+0xc]; call rbp; 
0x000000004012e1: or al, 0x0; syscall; 
0x00000000411865: or al, 0x13; add rdx, r15; call qword ptr [rax+r9*8]; 
0x0000000042b856: or al, 0x16; movzx eax, byte ptr [rdi+rdx]; sub eax, ecx; ret; 
0x00000000425b26: or al, 0x18; add rsp, 0x10; mov rax, r8; pop rbx; ret; 
0x0000000041c091: or al, 0x24; mov rdi, rbp; call rax; 
0x00000000425d1d: or al, 0x28; add rsp, 0x10; mov rax, r8; pop rbp; ret; 
0x00000000479929: or al, 0x2; lea rax, [rip+0x4d78e]; jmp qword ptr [rax+rcx*8]; 
0x00000000479748: or al, 0x2; lea rax, [rip+0x4d86f]; jmp qword ptr [rax+rcx*8]; 
0x0000000041547c: or al, 0x3; lea rax, [rip+0xb0d9b]; mov rax, [rax+rcx*8]; jmp rax; 
0x000000004149cc: or al, 0x3; lea rax, [rip+0xb1a4b]; mov rax, [rax+rcx*8]; jmp rax; 
0x0000000042880b: or al, 0x48; lea eax, [rax-0x10]; ret; 
0x0000000041ed44: or al, 0x48; mov edi, [rsp]; add rsp, 0x10; pop rbx; jmp rax; 
0x000000004902fd: or al, 0x48; mov edx, [rip+0x3c193]; add word ptr [rdx+rax*2], 0x1; ret; 
0x00000000402863: or al, 0x48; mov esi, [rsp+0x10]; mov rax, [rsp+0x18]; call rax; 
0x0000000048a2b3: or al, 0x49; lea eax, [rax+0x1]; mov [rip+0x42411], rax; ret; 
0x0000000047b2a1: or al, 0x7e; ret far; 
0x0000000041682a: or al, 0x7e; ret; 
0x000000004579cb: or al, 0x83; loopne 0x00000000004579de; movsxd rcx, [rsi+rax*4]; add rcx, rsi; notrack jmp rcx; 
0x00000000411dad: or al, 0x83; ret; 
0x000000004249ca: or al, 0x83; shr dword ptr [rsi+0x48], 0x3d; jmp far fword ptr [rdi+0x32760000]; 
0x000000004579d1: or al, 0x86; add rcx, rsi; notrack jmp rcx; 
0x00000000471dfa: or al, 0x89; fdiv st, st(6); ret; 
0x0000000046dcdb: or al, 0x89; jae short 0x000000000046dd1f; xor eax, eax; pop rbx; ret; 
0x0000000042a4c3: or al, 0x8a; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000441394: or al, 0x8a; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000043025f: or al, 0x8a; pcmpeqb xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x000000004451cf: or al, 0x8a; vpcmpeqb xmm0, xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000043948d: or al, 0x8b; add r9, r11; notrack jmp r9; 
0x00000000433edd: or al, 0x8b; lea r9, [r11+r9]; notrack jmp r9; 
0x0000000043eb7d: or al, 0x8b; mov ecx, [rcx-0x4]; mov [rdi], esi; mov [r9-0x4], ecx; ret; 
0x0000000045d557: or al, 0x8e; add eax, [rcx+rdx]; ret; 
0x00000000402b01: or al, 0x8e; add rcx, rsi; notrack jmp rcx; 
0x0000000045d53c: or al, 0x8e; mov edx, [rcx+rdx]; test edx, edx; jne short 0x000000000045d550; ret; 
0x0000000047bbe0: or al, 0x8f; add rcx, rdi; notrack jmp rcx; 
0x00000000432813: or al, 0x93; add rcx, r11; notrack jmp rcx; 
0x00000000433e76: or al, 0x93; add rsi, rdx; add rdi, rdx; add r9, r11; notrack jmp r9; 
0x000000004534db: or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000428ed1: or al, 0xa; add al, ch; xlat [rbx]; ret; 
0x00000000458280: or al, 0xb0; cli; jmp qword ptr [rsi+0x2e]; 
0x00000000433ee1: or al, 0xb; notrack jmp r9; 
0x000000004534df: or al, 0xb; notrack jmp rcx; 
0x00000000454652: or al, 0xc3; nop [rax+rax]; lea rax, [rdi+0xd]; ret; 
0x000000004932f0: or al, 0xcd; mov dh, 0xff; nop [rax]; add rsp, 0x8; ret; 
0x00000000476a06: or al, 0xe9; ret; 
0x0000000043b9e2: or al, 0xf3; movq [rdi], mm1; ret; 
0x00000000470757: or al, 0xf6; ret; 
0x00000000474b7b: or al, 0xf; test [rdi-0x1600000f], ah; mov ecx, edx; clc; jmp qword ptr [rsi+0xf]; 
0x0000000045c454: or al, [rax+rax]; add [rcx+rcx*4+0x44], cl; and al, 0x8; mov rdi, [r8]; call rbx; 
0x00000000413109: or al, [rax]; add [rax-0x77], cl; fimul st, dword ptr [rcx+rcx*4-0x1a]; mov rdi, r15; call qword ptr [rcx+0x38]; 
0x00000000405918: or al, [rax]; add [rax-0x80], al; call far fword ptr [rax+0xf]; 
0x00000000420cd9: or al, [rax]; add [rax], al; add [rax], al; mov qword ptr [rip+0xab30e], 0x0; ret; 
0x00000000420ce4: or al, [rax]; add [rax], al; add [rax], al; ret; 
0x00000000498a06: or al, [rax]; add [rax], al; mov edi, 0x1; call rax; 
0x0000000045ac95: or al, [rax]; add [rax], al; syscall; 
0x00000000421acc: or al, [rax]; add [rax], eax; add [rax], al; mov [rip+0xa8014], eax; ret; 
0x00000000421aa5: or al, [rax]; add [rax], eax; add [rax], al; mov [rip+0xa801e], rax; ret; 
0x00000000421a7c: or al, [rax]; add [rax], eax; add [rax], al; mov [rip+0xa803f], rax; ret; 
0x00000000421a5c: or al, [rax]; add [rax], eax; add [rax], al; mov [rip+0xa8057], rax; ret; 
0x00000000425520: or al, [rax]; add [rbp-0x3d], ebx; nop [rax]; ret; 
0x0000000042dfb8: or al, [rax]; add [rbp-0x77], cl; ret far; 
0x000000004118c3: or al, [rax]; add [rbx-0x78f0f808], al; mov [0x4c86046349000006], al; add eax, esi; notrack jmp rax; 
0x0000000045c11c: or al, [rax]; add [rcx+rcx*4+0x44], cl; and al, 0x8; mov rdi, [r8]; call rbx; 
0x00000000420c44: or al, [rax]; add dword ptr [rip+0xab3a7], 0x1; pop rbx; ret; 
0x0000000042292e: or al, [rax]; add rsp, 0x10; pop rbp; ret; 
0x0000000042935f: or al, [rax]; lea rax, [rip+0x25947]; lea rdx, [rip+0x2aff0]; cmovne rax, rdx; ret; 
0x00000000422a2c: or al, [rax]; lea rax, [rip+0x319b]; mov [rip+0xa7104], rax; ret; 
0x00000000422927: or al, [rax]; lea rax, [rip+0xa7230]; add rsp, 0x10; pop rbp; ret; 
0x00000000426836: or al, [rax]; lea rax, [rip-0xc6f]; mov [rip+0xa32fa], rax; ret; 
0x0000000041b85a: or al, [rax]; mov [rdx+0xe0], rcx; pop rbx; ret; 
0x00000000420c3d: or al, [rax]; mov [rip+0xab3b2], rbx; add dword ptr [rip+0xab3a7], 0x1; pop rbx; ret; 
0x00000000420bd9: or al, [rax]; ret; 
0x0000000041e502: or al, [rax]; syscall; 
0x00000000454633: or al, bl; nop [rax+rax]; lea rax, [rdi+0xb]; ret; 
0x0000000048b9a8: or al, ch; and cl, [rbx]; add [rcx-0x77], cl; ret; 
0x0000000042500b: or al, ch; call rax; 
0x00000000499094: or al, ch; idiv dil; jmp qword ptr [rsi+0xf]; 
0x00000000459eab: or al, ch; mov edi, 0x48000242; mov eax, [rsp+0x8]; add rsp, 0x28; ret; 
0x000000004180c7: or al, ch; ret; 
0x0000000042a034: or al, cl; add [rax], al; lea rdx, [rip+0x11ea1]; cmovne rax, rdx; ret; 
0x0000000042a4c8: or bh, [rsi]; jmp r10; 
0x00000000486841: or bh, bh; adc eax, 0x43cb8; xor eax, eax; add rsp, 0x8; ret; 
0x00000000402620: or bh, bh; push rbx; adc [rax-0x7d], cl; ret; 
0x0000000047ccd1: or bh, dh; jmp qword ptr [rsi+0x2e]; 
0x0000000048f81c: or bl, 0x3; add [rax-0x77], cl; add eax, 0x3cb61; add rsp, 0x8; ret; 
0x0000000045ba15: or bl, [rbp+0x41]; pop rsp; pop r13; ret; 
0x0000000048c94e: or bl, al; endbr64; mov rax, [rax+0x8]; ret; 
0x00000000454613: or bl, al; nop [rax+rax]; lea rax, [rdi+0x9]; ret; 
0x00000000498b64: or bl, al; nop [rax+rax]; mov [rdi+rsi*8], rdx; add rsp, 0x8; ret; 
0x00000000498b77: or bl, al; nop [rax]; endbr64; mov rax, [rdi+0x98]; ret; 
0x0000000048f82a: or bl, al; nop [rax]; lea rax, [rip+0x3cb69]; mov [rip+0x3cb4a], rax; ret; 
0x0000000045d84b: or bl, al; nop [rax]; ret; 
0x0000000048684d: or bl, al; nop; or byte ptr [rdi+0x31d], 0x4; xor eax, eax; ret; 
0x0000000049978b: or bl, ch; iretd; xchg ax, ax; xor eax, eax; ret; 
0x0000000047d54c: or bl, ch; mov al, [0x8944fff9e12be890]; dec byte ptr [rax-0x77]; out dx, eax; call qword ptr [r14+0x18]; 
0x0000000043bba3: or bl, dh; movq [rdi], mm1; ret; 
0x0000000049978a: or bl, r13b; iretd; xchg ax, ax; xor eax, eax; ret; 
0x00000000421aa3: or byte ptr [r10], 0x0; add [rax], eax; add [rax], al; mov [rip+0xa801e], rax; ret; 
0x0000000048f6a9: or byte ptr [rcx-0x77], 0x0; mov eax, 0x1; mov dword ptr [rdx], 0xffffc002; ret; 
0x00000000486900: or byte ptr [rdi+0x31d], 0x4; ret; 
0x00000000486850: or byte ptr [rdi+0x31d], 0x4; xor eax, eax; ret; 
0x00000000421acb: or byte ptr [rdx], 0x0; add [rax], eax; add [rax], al; mov [rip+0xa8014], eax; ret; 
0x00000000421aa4: or byte ptr [rdx], 0x0; add [rax], eax; add [rax], al; mov [rip+0xa801e], rax; ret; 
0x00000000421a7b: or byte ptr [rdx], 0x0; add [rax], eax; add [rax], al; mov [rip+0xa803f], rax; ret; 
0x00000000421a5b: or byte ptr [rdx], 0x0; add [rax], eax; add [rax], al; mov [rip+0xa8057], rax; ret; 
0x00000000421a66: or byte ptr [rdx], 0x0; ret; 
0x0000000048fcb8: or cl, [rax-0x73]; adc eax, 0x3b1a0; mov [rax], rdx; add rsp, 0x8; ret; 
0x0000000041b498: or cl, [rax-0x7d]; ret; 
0x00000000480cd2: or cl, bl; std; call qword ptr [rax+0x31f1894c]; 
0x000000004033aa: or dh, [rdi+0x26]; lea rdx, [rip+0x9b410]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000047def6: or dh, [rdi+rcx+0x48]; cmp eax, esi; ja short 0x000000000047def0; lea eax, [rdx+rdi]; ret; 
0x0000000041fdc6: or dh, [rdi+rcx+0x48]; cmp ecx, esi; ja short 0x000000000041fdc0; lea eax, [rdx+rdi]; ret; 
0x00000000430312: or dh, al; movzx eax, byte ptr [rdi+rcx]; movzx edx, byte ptr [rsi+rcx]; sub eax, edx; ret; 
0x0000000043bac3: or dh, bl; movq [rdi], mm1; ret; 
0x000000004608fc: or dl, bh; call qword ptr [rax-0x5e1f00d]; 
0x0000000046092f: or dl, bh; jmp qword ptr [rsi+0xf]; 
0x0000000045f18b: or dword ptr [rax+0x1], 0xffffffd8; notrack jmp rax; 
0x0000000041fac8: or dword ptr [rax+0x74], 0x80; mov rax, [rax+0x68]; test rax, rax; jne short 0x000000000041fac8; ret; 
0x00000000487522: or dword ptr [rax+rax], 0x3d8d4800; ret far; 
0x0000000041bc30: or dword ptr [rbx], 0x20; mov eax, 0xffffffff; pop rbx; ret; 
0x0000000041d8da: or dword ptr [rcx+rax-0x28], 0x3e; jmp rax; 
0x0000000045c079: or dword ptr [rcx], 0x0; add [rcx+rcx*4+0x44], cl; and al, 0x8; mov rdi, [r8]; call rbx; 
0x000000004216ec: or dword ptr [rdx], 0x0; ret; 
0x0000000048acbf: or dword ptr [rip+0x3f802], 0x1; ret; 
0x00000000462a81: or dword ptr [rip+0x69714], 0x2; add rsp, 0x8; ret; 
0x0000000045fdd9: or eax, 0x10; mov [rip+0x6cdd2], eax; pop rbx; ret; 
0x0000000045fe3a: or eax, 0x18; mov [rip+0x6cd71], eax; ret; 
0x0000000045fd6a: or eax, 0x1; mov [rip+0x6ce41], eax; ret; 
0x00000000432569: or eax, 0x1; ret; 
0x00000000453f41: or eax, 0x1c478d48; ret; 
0x0000000049b1bc: or eax, 0x1f3d7; movzx eax, al; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x0000000049981c: or eax, 0x20d37; movzx eax, al; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x0000000049686c: or eax, 0x2374f; movzx eax, al; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x0000000045fd39: or eax, 0x2; mov [rip+0x6ce72], eax; pop rbx; ret; 
0x00000000454662: or eax, 0x2e6666c3; nop [rax+rax]; lea rax, [rdi+0xe]; ret; 
0x0000000047bc3d: or eax, 0x37a56; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x0000000045fd9a: or eax, 0x3; mov [rip+0x6ce11], eax; ret; 
0x0000000044f7b5: or eax, 0x48fad348; test edx, edx; je short 0x000000000044f7e0; bsf rax, rdx; ret; 
0x000000004794af: or eax, 0x490004dd; mov ebx, ecx; mov dword ptr [rbp-0x528], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x00000000479508: or eax, 0x4dcb3; jmp qword ptr [rcx+rax*8]; 
0x0000000044ec3f: or eax, 0x5635c; mov edx, [rcx+rdx*4]; mov eax, [rcx+rax*4]; sub eax, edx; ret; 
0x0000000044d55e: or eax, 0x57a3d; mov eax, [rcx+rax*4]; mov edx, [rcx+rdx*4]; sub eax, edx; ret; 
0x0000000044d27f: or eax, 0x57d1c; mov edx, [rcx+rdx*4]; mov eax, [rcx+rax*4]; sub eax, edx; ret; 
0x0000000044b5ee: or eax, 0x599ad; mov eax, [rcx+rax*4]; mov edx, [rcx+rdx*4]; sub eax, edx; ret; 
0x000000004033d2: or eax, 0x5be43145; pop rbp; mov rax, r12; pop r12; ret; 
0x0000000042301a: or eax, 0x5d5bc031; pop r12; ret; 
0x000000004466ea: or eax, 0x5e8b1; mov edx, [rcx+rdx*4]; mov eax, [rcx+rax*4]; sub eax, edx; ret; 
0x000000004452d5: or eax, 0x5fcc6; mov eax, [rcx+rax*4]; mov edx, [rcx+rdx*4]; sub eax, edx; ret; 
0x0000000044506a: or eax, 0x5ff31; mov edx, [rcx+rdx*4]; mov eax, [rcx+rax*4]; sub eax, edx; ret; 
0x00000000443795: or eax, 0x61806; mov eax, [rcx+rax*4]; mov edx, [rcx+rdx*4]; sub eax, edx; ret; 
0x00000000453f38: or eax, 0x77f0ff3; movdqu [rdi+0xd], xmm2; lea rax, [rdi+0x1c]; ret; 
0x00000000453878: or eax, 0x77f0ff3; movdqu [rdi+0xd], xmm2; ret; 
0x000000004177e9: or eax, 0x878ea; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x0000000042dcb8: or eax, 0x894d0000; ret far; 
0x0000000045fe0a: or eax, 0x8; mov [rip+0x6cda1], eax; ret; 
0x0000000044138f: or eax, 0x8b00063c; or al, 0x8a; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x00000000415482: or eax, 0x8b48000b; add al, 0xc8; jmp rax; 
0x00000000436910: or eax, 0x93b23; lea r11, [rip+0x6a424]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x000000004368b6: or eax, 0x93b7d; lea r11, [rip+0x6a43e]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x00000000433f30: or eax, 0x96503; lea r11, [rip+0x6cc44]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x00000000433ecf: or eax, 0x96564; lea r11, [rip+0x6cc65]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x0000000041b857: or eax, 0xaf844; mov [rdx+0xe0], rcx; pop rbx; ret; 
0x000000004591b2: or eax, 0xc2bc0f48; shr rax, 0x2; ret; 
0x000000004849dc: or eax, 0xe8f7894c; sti; ret; 
0x0000000043b969: or eax, 0xef00ff2; movdqu [rdi+0xd], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000043b972: or eax, 0xf7f0ff3; ret; 
0x0000000045d83f: or eax, 0xffffff9c; mov [rax+0x10], rcx; mov [rax+0x8], rdx; ret; 
0x00000000459661: or eax, 0xffffffff; ret; 
0x0000000047e246: or eax, [rax]; add [rax-0x73], cl; add eax, 0x890; cmove rax, rdx; ret; 
0x0000000047efd6: or eax, [rax]; add [rax-0x73], cl; add eax, 0x8b0; cmove rax, rdx; ret; 
0x0000000045ac65: or eax, [rax]; add [rax], al; syscall; 
0x00000000494265: or eax, [rax]; add [rbp+0x1bf0142], cl; add [rax], al; add [rcx-0x4cf7b], cl; jmp qword ptr [rsi+0x2e]; 
0x0000000042de38: or eax, [rax]; add [rbp-0x77], cl; ret far; 
0x0000000047aa0e: or eax, [rax]; add [rcx-0x7f], al; clc; fdivp st(7), st; call far fword ptr [rdi]; 
0x00000000414a3c: or eax, [rax]; jmp qword ptr [rax+rdx*8]; 
0x000000004149d3: or eax, [rax]; mov rax, [rax+rcx*8]; jmp rax; 
0x0000000041185d: or eax, [rax]; shl rdx, 0x2; lea rcx, [rbx+rdx]; add rdx, r15; call qword ptr [rax+r9*8]; 
0x00000000414e7e: or eax, [rax]; sub eax, 0x20; cdqe; movzx eax, byte ptr [rbx+rax]; jmp qword ptr [rsi+rax*8]; 
0x000000004102f1: or eax, [rax]; syscall; 
0x0000000048fc41: or eax, [rbp-0x76b70007]; ret; 
0x0000000046b783: or eax, [rbx+0x438901e8]; or [rbx+0x1974fdf8], al; pop rbx; ret; 
0x00000000454643: or eax, ebx; nop [rax+rax]; lea rax, [rdi+0xc]; ret; 
0x0000000042a333: or eax, ecx; add al, [rax]; cmove rax, rdx; ret; 
0x000000004267dd: or eax, edi; add eax, 0xa5878; add [rax], al; add [rax], al; ret; 
0x0000000044f03e: or eax, edx; bsf rax, rax; lea rax, [rdi+rax]; ret; 
0x00000000497d28: or ebx, [rdx+0xf40fff6]; mov dh, 0xf6; movsxd rax, [r9+rsi*4]; add rax, r9; notrack jmp rax; 
0x00000000454623: or ebx, eax; nop [rax+rax]; lea rax, [rdi+0xa]; ret; 
0x0000000043bb33: or ebx, esi; movq [rdi], mm1; ret; 
0x000000004975d0: or ecx, [eax-0x7d]; ret; 
0x000000004975d1: or ecx, [rax-0x7d]; ret; 
0x00000000433ee2: or edi, [rsi]; jmp r9; 
0x000000004534e0: or edi, [rsi]; jmp rcx; 
0x0000000045ac19: or edx, 0x40; mov eax, ecx; syscall; 
0x000000004124e6: or edx, [rax+rax]; add [rcx+rcx*4-0x16], cl; mov rsi, r12; mov rdi, r15; call qword ptr [rcx+0x38]; 
0x0000000044f69f: or edx, ecx; bsf rdx, rdx; add rax, rdx; sub rax, rdi; ret; 
0x00000000498931: or esi, 0x2; mov edi, 0x1; call rax; 
0x00000000457527: or esi, ebx; movq [rdi+rdx-0x10], mm0; movdqu [rdi], xmm0; ret; 
0x0000000043ba53: or esi, ebx; movq [rdi], mm1; ret; 
0x0000000041bc31: or esp, [rax]; mov eax, 0xffffffff; pop rbx; ret; 
0x00000000433f32: or gs:[rax], eax; lea r11, [rip+0x6cc44]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x00000000433ed0: or gs:[rax], eax; lea r11, [rip+0x6cc65]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x000000004608fb: or r10b, dil; call qword ptr [rax-0x5e1f00d]; 
0x0000000045ac18: or r10d, 0x40; mov eax, ecx; syscall; 
0x0000000043bba2: or r11b, r14b; movq [rdi], mm1; ret; 
0x00000000454612: or r11b, r8b; nop [rax+rax]; lea rax, [rdi+0x9]; ret; 
0x0000000043bb32: or r11d, r14d; movq [rdi], mm1; ret; 
0x00000000454622: or r11d, r8d; nop [rax+rax]; lea rax, [rdi+0xa]; ret; 
0x00000000430311: or r14b, al; movzx eax, byte ptr [rdi+rcx]; movzx edx, byte ptr [rsi+rcx]; sub eax, edx; ret; 
0x0000000043bac2: or r14b, r11b; movq [rdi], mm1; ret; 
0x0000000043ba52: or r14d, r11d; movq [rdi], mm1; ret; 
0x00000000425587: or r8b, [r8]; syscall; 
0x0000000042551f: or r8b, [rax]; add [rbp-0x3d], ebx; nop [rax]; ret; 
0x00000000427177: or r8b, [rax]; syscall; 
0x00000000454632: or r8b, r11b; nop [rax+rax]; lea rax, [rdi+0xb]; ret; 
0x00000000418677: or r8d, [r8]; syscall; 
0x00000000454642: or r8d, r11d; nop [rax+rax]; lea rax, [rdi+0xc]; ret; 
0x00000000459660: or rax, 0xffffffffffffffff; ret; 
0x00000000430627: or rax, [r8]; add [rbp-0x77], cl; ret far; 
0x0000000044f03d: or rax, rdx; bsf rax, rax; lea rax, [rdi+rax]; ret; 
0x0000000044f69e: or rdx, rcx; bsf rdx, rdx; add rax, rdx; sub rax, rdi; ret; 
0x00000000402c4e: out 0x0, al; add [rax], al; add rsp, 0x98; ret; 
0x0000000042a2d3: out 0x2, al; lea rax, [rip+0x14eb4]; lea rdx, [rip+0x170fd]; cmovne rax, rdx; ret; 
0x0000000042a283: out 0x2, al; lea rax, [rip+0x1c4c4]; lea rdx, [rip+0x1eb1d]; cmovne rax, rdx; ret; 
0x0000000042970a: out 0x2, al; lea rax, [rip+0x3acd]; lea rdx, [rip+0x5326]; cmovne rax, rdx; ret; 
0x00000000429f91: out 0x2, al; lea rax, [rip+0x8076]; lea rdx, [rip+0x2a6df]; cmovne rax, rdx; ret; 
0x000000004934dd: out 0x2, al; syscall; 
0x00000000496838: out 0x20, eax; je short 0x000000000049684c; movss xmm0, [rip+0x23774]; divss xmm0, [rip+0x23770]; ret; 
0x00000000427c83: out 0x41, al; pop rsp; pop r13; jmp rax; 
0x0000000047e134: out 0x41, eax; and ebx, 0xffffffbb; cmp r11d, 0xa; je short 0x000000000047e140; ret; 
0x00000000415891: out 0x44, eax; mov [rbp-0x4f0], ecx; call qword ptr [rax+0x38]; 
0x00000000415354: out 0x44, eax; mov [rbp-0x4f8], ecx; call qword ptr [rbx+0x38]; 
0x00000000415ae6: out 0x44, eax; mov [rbp-0x508], edx; mov [rbp-0x500], r11; call qword ptr [rax+0x38]; 
0x000000004267d8: out 0x45, al; test al, al; jne short 0x00000000004267e9; mov dword ptr [rip+0xa5878], 0x0; ret; 
0x0000000048f5f4: out 0x48, al; mov [rdi], esi; mov [rdx], eax; mov eax, 0x1; ret; 
0x0000000041cee0: out 0x48, al; mov edi, ebp; call qword ptr [r13+0x90]; 
0x0000000041bd03: out 0x48, al; mov edi, ebp; call qword ptr [r15+0x40]; 
0x0000000041c123: out 0x48, al; mov edi, ebp; call qword ptr [r15+0x80]; 
0x0000000041bc9a: out 0x48, al; mov edi, ebp; call qword ptr [r15+0x90]; 
0x0000000041cd31: out 0x48, al; mov edi, ebp; call qword ptr [rax+0x78]; 
0x0000000047c3d9: out 0x48, al; mov edi, ebp; call qword ptr [rbx+0x90]; 
0x0000000041d5a9: out 0x48, al; mov edi, ebx; call qword ptr [r14+0x78]; 
0x000000004584f1: out 0x48, eax; mov esi, [rsp+0x18]; call rbx; 
0x00000000428888: out 0x48, eax; sub eax, 0x10; ret; 
0x00000000457412: out 0x49, eax; jmp qword ptr [rdx-0x2f]; 
0x00000000435b06: out 0x4c, al; mov [rdi-0x12], ebx; mov [rdi-0xa], rcx; mov [rdi-0x4], edx; ret; 
0x000000004771cf: out 0x4c, al; mov edi, ebp; call qword ptr [r15+0x38]; 
0x00000000476de0: out 0x4c, al; mov edi, ebp; call qword ptr [r8+0x38]; 
0x00000000475f6f: out 0x4c, al; mov edi, ebp; call qword ptr [rcx+0x38]; 
0x0000000040fa51: out 0x4c, al; mov edi, ebp; call rax; 
0x0000000046e235: out 0x4c, al; mov edi, ebp; call rbx; 
0x000000004124ef: out 0x4c, al; mov edi, edi; call qword ptr [rcx+0x38]; 
0x0000000046e570: out 0x4c, al; mov edi, esi; call rbp; 
0x0000000045839b: out 0x4c, eax; lea ecx, [rsp+0x30]; call rbx; 
0x00000000478e46: out 0x4c, eax; mov [rbp-0x4d8], ebx; call qword ptr [r8+0x38]; 
0x0000000047944b: out 0x4c, eax; mov [rbp-0x4d8], ebx; call qword ptr [rbx+0x38]; 
0x0000000047a0b7: out 0x4c, eax; mov [rbp-0x500], ebx; mov [rbp-0x4f8], r9; call qword ptr [rax+0x38]; 
0x00000000471a2e: out 0x4c, eax; mov [rbp-0xe8], eax; call rax; 
0x00000000435936: out 0x4c, eax; mov [rdi-0x11], ebx; mov [rdi-0x9], r8; mov [rdi-0x4], edx; ret; 
0x00000000435a32: out 0x4c, eax; mov [rdi-0x11], ebx; mov [rdi-0x9], rcx; mov [rdi-0x1], dl; ret; 
0x0000000043597e: out 0x4c, eax; mov [rdi-0x11], ebx; mov [rdi-0x9], rcx; mov [rdi-0x4], edx; ret; 
0x00000000478c56: out 0x4c, eax; sub ebx, eax; sar rbx, 0x2; mov rdx, rbx; call qword ptr [rax+0x38]; 
0x000000004147e3: out 0x4d, eax; sub edi, eax; mov rdx, r15; call qword ptr [rax+0x38]; 
0x0000000041423e: out 0x4d, eax; sub edi, ebp; mov rdx, r15; call qword ptr [rax+0x38]; 
0x0000000047d331: out 0x5b, al; mov rdi, rbp; pop rbp; pop r12; jmp rax; 
0x0000000049ba16: out 0x5b, al; ret; 
0x000000004969e7: out 0x60, eax; jne 0x000000000040171e; xor eax, eax; add rsp, 0x8; ret; 
0x00000000496b66: out 0x77, eax; ret far; 
0x0000000042a3d5: out 0x7a, eax; add [rax], al; lea rax, [rip+0x7600]; cmove rax, rdx; ret; 
0x00000000411e4b: out 0x83, al; ret; 
0x0000000040307d: out 0x89, al; out dx, eax; call qword ptr [r15+rbx*8]; 
0x000000004955c1: out 0x89, al; out dx, eax; call qword ptr [rax]; 
0x00000000495465: out 0x89, al; out dx, eax; call qword ptr [rbx]; 
0x00000000495427: out 0x89, al; out dx, eax; call rax; 
0x0000000047fd42: out 0x89, al; out dx, eax; mov eax, 0xe4; syscall; 
0x000000004534d5: out 0xe4, eax; add al, 0x0; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000046d9e7: out 0xe8, al; ret; 
0x000000004579e4: out 0xf0, al; mov edx, 0x0; pop rbx; cmove rax, rdx; ret; 
0x0000000043b339: out 0xf3, al; movq [rdi-0x10], mm1; ret; 
0x0000000043b3b9: out 0xf3, eax; movq [rdi-0x10], mm1; ret; 
0x0000000046f022: out 0xfe, eax; jmp qword ptr [rsi+0x2e]; 
0x00000000416297: out 0xff, al; jmp qword ptr [rsi+0xf]; 
0x00000000473004: out 0xff, eax; jmp qword ptr [rsi+0xf]; 
0x000000004723bb: out 0xff, eax; jmp qword ptr [rsi-0x70]; 
0x00000000479dce: out 0xff, eax; push rax; cmp [rax+0x39], cl; ret; 
0x000000004741e9: out dx, al; adc [rcx+0x39], cl; ret; 
0x00000000495082: out dx, al; idiv bh; jmp qword ptr [rsi+0x2e]; 
0x0000000043b73f: out dx, al; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x12], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000435b0a: out dx, al; mov [rdi-0xa], rcx; mov [rdi-0x4], edx; ret; 
0x00000000459d6e: out dx, al; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x00000000459de4: out dx, al; mov r8d, eax; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x0000000040fabf: out dx, al; mov rax, [rsp]; mov r13, r15; add r15, r12; call rax; 
0x0000000040f8c9: out dx, al; mov rdi, r12; call rax; 
0x0000000041423b: out dx, al; mov rdi, r12; sub r15, r13; mov rdx, r15; call qword ptr [rax+0x38]; 
0x0000000046e312: out dx, al; mov rdi, r14; mov rdx, r12; call rbp; 
0x00000000418e2f: out dx, al; mov rdi, r15; call qword ptr [r14+0x38]; 
0x00000000419c6b: out dx, al; mov rdi, r15; call qword ptr [r14+0x80]; 
0x00000000418e9c: out dx, al; mov rdi, r15; call qword ptr [rbp+0x38]; 
0x0000000041ca5c: out dx, al; mov rdi, rbx; call qword ptr [r12+0x80]; 
0x0000000047c583: out dx, al; mov rdi, rbx; call qword ptr [r13+0x38]; 
0x00000000418fdd: out dx, al; mov rdi, rbx; call qword ptr [r13+0x58]; 
0x0000000043b749: out dx, al; movdqu [rdi-0x10], xmm1; ret; 
0x000000004174ae: out dx, al; ret far; 
0x0000000041024d: out dx, al; ror rdx, 0x11; xor rdx, fs:[0x30]; call rdx; 
0x0000000048059e: out dx, al; sar ebp, 0x1; jmp qword ptr [rsi+0x2e]; 
0x0000000048aa80: out dx, al; syscall; 
0x000000004770b9: out dx, eax; add [rax-0x93343], eax; jmp qword ptr [rax]; 
0x0000000041fcfd: out dx, eax; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000041fd55: out dx, eax; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000041cf46: out dx, eax; call qword ptr [r13+0x20]; 
0x0000000041cee3: out dx, eax; call qword ptr [r13+0x90]; 
0x0000000047d3cc: out dx, eax; call qword ptr [r14+0x18]; 
0x0000000047db8d: out dx, eax; call qword ptr [r14+0x20]; 
0x000000004771d2: out dx, eax; call qword ptr [r15+0x38]; 
0x0000000041bd06: out dx, eax; call qword ptr [r15+0x40]; 
0x0000000041c126: out dx, eax; call qword ptr [r15+0x80]; 
0x0000000041bc9d: out dx, eax; call qword ptr [r15+0x90]; 
0x0000000040307f: out dx, eax; call qword ptr [r15+rbx*8]; 
0x00000000476de3: out dx, eax; call qword ptr [r8+0x38]; 
0x0000000041cc41: out dx, eax; call qword ptr [rax+0x18]; 
0x0000000041c739: out dx, eax; call qword ptr [rax+0x40]; 
0x0000000041cd34: out dx, eax; call qword ptr [rax+0x78]; 
0x0000000041c046: out dx, eax; call qword ptr [rax+0x80]; 
0x0000000041bee8: out dx, eax; call qword ptr [rax+0x90]; 
0x000000004955c3: out dx, eax; call qword ptr [rax]; 
0x000000004184bd: out dx, eax; call qword ptr [rbx+0x10]; 
0x0000000041ee98: out dx, eax; call qword ptr [rbx+0x18]; 
0x0000000041c1dc: out dx, eax; call qword ptr [rbx+0x80]; 
0x0000000041df53: out dx, eax; call qword ptr [rbx+0x88]; 
0x0000000047c3dc: out dx, eax; call qword ptr [rbx+0x90]; 
0x00000000495467: out dx, eax; call qword ptr [rbx]; 
0x00000000475f72: out dx, eax; call qword ptr [rcx+0x38]; 
0x0000000045b2a7: out dx, eax; call r12; 
0x0000000040fa54: out dx, eax; call rax; 
0x0000000046e238: out dx, eax; call rbx; 
0x000000004782f6: out dx, eax; fdiv st(7), st; jmp qword ptr [rsi+0xf]; 
0x0000000043b7bf: out dx, eax; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x11], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000436c73: out dx, eax; lea r11, [rip+0x69f44]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000436bb4: out dx, eax; lea r11, [rip+0x6a003]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434293: out dx, eax; lea r11, [rip+0x6c764]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004341d4: out dx, eax; lea r11, [rip+0x6c823]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000041add0: out dx, eax; lea r9, [rsp+0x18]; call rbp; 
0x00000000476ad1: out dx, eax; mov [rbp-0x970], r10d; mov [rbp-0x958], r9b; call rax; 
0x0000000043593a: out dx, eax; mov [rdi-0x9], r8; mov [rdi-0x4], edx; ret; 
0x00000000435a36: out dx, eax; mov [rdi-0x9], rcx; mov [rdi-0x1], dl; ret; 
0x00000000435982: out dx, eax; mov [rdi-0x9], rcx; mov [rdi-0x4], edx; ret; 
0x0000000045a03a: out dx, eax; mov eax, 0x4f; syscall; 
0x0000000045abce: out dx, eax; mov eax, 0x9; syscall; 
0x0000000042342e: out dx, eax; mov eax, 0xca; syscall; 
0x0000000047fd44: out dx, eax; mov eax, 0xe4; syscall; 
0x0000000045ad28: out dx, eax; mov edx, r13d; mov esi, 0x1; call r12; 
0x0000000045b9c0: out dx, eax; mov rax, r12; pop rbp; pop r12; jmp rax; 
0x0000000045adb8: out dx, eax; mov rdx, r13; mov esi, 0x1; call r12; 
0x00000000414241: out dx, eax; mov rdx, r15; call qword ptr [rax+0x38]; 
0x00000000458fa9: out dx, eax; mov rsi, [rsp+0x18]; call rbx; 
0x0000000043b7c9: out dx, eax; movdqu [rdi-0x10], xmm1; ret; 
0x0000000041a17b: out dx, eax; pop rbp; mov rax, [rax+0xe0]; mov rax, [rax+0x20]; jmp rax; 
0x0000000047d335: out dx, eax; pop rbp; pop r12; jmp rax; 
0x00000000426c85: out dx, eax; pop rbp; pop r12; pop r13; jmp rax; 
0x0000000041ee0d: out dx, eax; pop rbx; pop rbp; jmp rax; 
0x000000004263fc: out dx, eax; pop rbx; pop rbp; pop r12; jmp rax; 
0x0000000046d41d: out dx, eax; ret; 
0x000000004209d6: out dx, eax; ror byte ptr [rdi], 0x11; pop rbx; ret; 
0x00000000410289: out dx, eax; ror rdx, 0x11; xor rdx, fs:[0x30]; call rdx; 
0x0000000047691f: out dx, eax; sub rdx, rsi; sar rdx, 0x2; call qword ptr [r12+0x38]; 
0x0000000045b99f: out dx, eax; xor edx, edx; mov esi, 0x1; call r12; 
0x0000000045ad16: out dx, eax; xor esi, esi; call r12; 
0x0000000042942d: outsb dx, [rsi]; add al, [rax]; cmovne rax, rdx; ret; 
0x00000000421460: outsb dx, [rsi]; ret far; 
0x0000000040fdd2: outsb dx, [rsi]; ret; 
0x00000000484e7b: outsb dx, [rsi]; shl byte ptr [rsi+0x48], 0xf; outsb dx, [rsi]; ret far; 
0x0000000041f5ed: outsd dx, [rsi]; add [rax], eax; add [rsi-0x1], bh; mov rdi, rbx; call qword ptr [rbp+0x18]; 
0x00000000457260: outsd dx, [rsi]; add [rdx-0xf], esp; dec byte ptr [rax+0x6f]; jmp qword ptr [r10-0xf]; 
0x0000000041fa7e: outsd dx, [rsi]; add eax, 0x7fa8c; mov dword ptr [rdi+0xc0], 0xffffffff; movups [rdi+0xa0], xmm0; ret; 
0x0000000041f9ee: outsd dx, [rsi]; add eax, 0x7fb1c; mov dword ptr [rdi+0xc0], 0xffffffff; movups [rdi+0xa0], xmm0; ret; 
0x0000000043efc0: outsd dx, [rsi]; cli; vmovups [rdi-0x1c0], zmm14; vmovups [rdi-0x200], zmm15; ret; 
0x0000000043376d: outsd dx, [rsi]; data64 ret far; 
0x0000000047974d: outsd dx, [rsi]; fadd st, dword ptr [rax+rax]; jmp qword ptr [rax+rcx*8]; 
0x0000000042a65e: outsd dx, [rsi]; fsub st(1), st; imul edi, 0xffffffff; jmp qword ptr [rsi+0x66]; 
0x00000000412333: outsd dx, [rsi]; idiv bh; jmp qword ptr [rsi+0xf]; 
0x00000000457266: outsd dx, [rsi]; jmp qword ptr [r10-0xf]; 
0x00000000457b1d: outsd dx, [rsi]; mov bh, 0xfa; jmp qword ptr [rsi+0x66]; 
0x000000004360c2: outsd dx, [rsi]; mov ebx, 0x4e6f0ff3; ret far; 
0x0000000043f117: outsd dx, [rsi]; pop rcx; jmp qword ptr [rdx-0x2f]; 
0x00000000433772: outsd dx, [rsi]; push rdi; ret far; 
0x00000000433bad: outsd dx, [rsi]; push rdi; ret; 
0x0000000047ec1a: outsd dx, [rsi]; push rdi; xor [rsi+0xf], ah; outsd dx, [rsi]; ret; 
0x00000000453876: outsd dx, [rsi]; push rsi; or eax, 0x77f0ff3; movdqu [rdi+0xd], xmm2; ret; 
0x00000000436142: outsd dx, [rsi]; ret far; 
0x00000000433bb2: outsd dx, [rsi]; ret; 
0x00000000498db4: outsd dx, [rsi]; xchg ebp, eax; cmp ah, 0xff; jmp qword ptr [rsi+0xf]; 
0x00000000489b1a: outsd dx, [rsi]; xchg ebp, eax; cmp ch, 0xff; jmp qword ptr [rsi+0xf]; 
0x000000004992b6: outsd dx, [rsi]; xchg ebp, eax; cmp dh, 0xff; jmp qword ptr [rsi+0xf]; 
0x0000000042d28d: outsd dx, [rsi]; xor eax, 0x634f0007; or al, 0x8a; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000430262: pcmpeqb mm0, mm1; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000047fa84: pcmpeqb mm3, [rcx]; add rax, 0x2; ret; 
0x0000000047fa6f: pcmpeqb mm3, [rsi]; ret; 
0x00000000430261: pcmpeqb xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000456578: pcmpgtd mm1, [rcx-0x7f3c01b2]; cli; add [rdx+0x2], esi; mov [rdi], cl; ret; 
0x00000000490166: pcmpistri xmm2, xmm2, 0x3a; cmp edx, ecx; jle 0x0000000000490210; ret; 
0x00000000456458: pcmpistri xmm3, xmm3, 0x3a; movsxd rcx, ecx; add rax, rcx; sub rax, rdi; ret; 
0x0000000045773a: pextrw edi, mm0, 0x77; ret; 
0x0000000044fe94: pextrw edi, mm5, 0x74; ret far; 
0x000000004318ac: pmovmskb eax, mm1; bsf eax, eax; lea rax, [rdi+rax+0x30]; ret; 
0x00000000431912: pmovmskb eax, mm1; test eax, eax; jne 0x00000000004319c0; xor eax, eax; ret; 
0x0000000047f4f2: pmovmskb eax, mm1; test eax, eax; jne 0x000000000047f5a0; xor eax, eax; ret; 
0x00000000431942: pmovmskb eax, mm1; test eax, eax; jne short 0x00000000004319a0; xor eax, eax; ret; 
0x0000000047f522: pmovmskb eax, mm1; test eax, eax; jne short 0x000000000047f580; xor eax, eax; ret; 
0x000000004318ab: pmovmskb eax, xmm1; bsf eax, eax; lea rax, [rdi+rax+0x30]; ret; 
0x00000000431911: pmovmskb eax, xmm1; test eax, eax; jne 0x00000000004319c0; xor eax, eax; ret; 
0x0000000047f4f1: pmovmskb eax, xmm1; test eax, eax; jne 0x000000000047f5a0; xor eax, eax; ret; 
0x00000000431941: pmovmskb eax, xmm1; test eax, eax; jne short 0x00000000004319a0; xor eax, eax; ret; 
0x0000000047f521: pmovmskb eax, xmm1; test eax, eax; jne short 0x000000000047f580; xor eax, eax; ret; 
0x0000000044f543: pmovmskb edx, mm4; test edx, edx; je short 0x000000000044f54e; bsf eax, edx; ret; 
0x0000000044f542: pmovmskb edx, xmm4; test edx, edx; je short 0x000000000044f54e; bsf eax, edx; ret; 
0x00000000437bd6: pop qword ptr [rsi]; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004263ff: pop r12; jmp rax; 
0x00000000426c74: pop r12; mov rax, r8; pop r13; ret; 
0x00000000426c87: pop r12; pop r13; jmp rax; 
0x000000004757c3: pop r12; pop r13; mov rax, r9; pop r14; ret; 
0x000000004272e6: pop r12; pop r13; pop r14; pop r15; jmp rax; 
0x000000004018d3: pop r12; pop r13; pop r14; pop r15; ret; 
0x0000000040f689: pop r12; pop r13; pop r14; ret; 
0x00000000411591: pop r12; pop r13; ret; 
0x0000000040333f: pop r12; ret; 
0x0000000045fef5: pop r12; shl eax, cl; ret; 
0x00000000426c89: pop r13; jmp rax; 
0x000000004757c5: pop r13; mov rax, r9; pop r14; ret; 
0x000000004272e8: pop r13; pop r14; pop r15; jmp rax; 
0x0000000040374e: pop r13; pop r14; pop r15; pop rbp; ret; 
0x000000004018d5: pop r13; pop r14; pop r15; ret; 
0x0000000040f68b: pop r13; pop r14; ret; 
0x00000000411593: pop r13; ret; 
0x000000004272ea: pop r14; pop r15; jmp rax; 
0x00000000403750: pop r14; pop r15; pop rbp; ret; 
0x000000004018d7: pop r14; pop r15; ret; 
0x0000000040f68d: pop r14; ret; 
0x000000004272ec: pop r15; jmp rax; 
0x00000000403752: pop r15; pop rbp; ret; 
0x000000004018d9: pop r15; ret; 
0x00000000429365: pop r9; add al, [rax]; lea rdx, [rip+0x2aff0]; cmovne rax, rdx; ret; 
0x000000004970f1: pop rax; add [rax], eax; add [rax-0x80], al; call qword ptr [rcx]; 
0x00000000463186: pop rax; call r14; 
0x000000004646d6: pop rax; call r15; 
0x00000000463ef0: pop rax; call rbx; 
0x0000000048c9f0: pop rax; jmp qword ptr [rax]; 
0x00000000464251: pop rax; mov rax, [rsp+0x18]; call rax; 
0x00000000464a78: pop rax; mov rax, [rsp+0x20]; call rax; 
0x00000000462ed7: pop rax; mov rax, [rsp+0x28]; call rax; 
0x00000000463c7a: pop rax; mov rax, [rsp+0x30]; call rax; 
0x00000000468006: pop rax; mov rdi, [rsp+0x50]; call rbx; 
0x00000000469319: pop rax; mov rdi, [rsp+0x50]; mov rax, [rsp+0x18]; call rax; 
0x00000000467c1c: pop rax; mov rdi, [rsp+0x50]; mov rax, [rsp+0x20]; call rax; 
0x00000000463900: pop rax; mov rdi, [rsp+0x60]; call r15; 
0x000000004634bd: pop rax; mov rdi, [rsp+0x60]; mov rax, [rsp+0x18]; call rax; 
0x0000000041875f: pop rax; mov rdi, rbx; call qword ptr [rbp+0x60]; 
0x0000000046dbe0: pop rax; mov rdx, 0xffffffffffffffe0; add rax, 0x200; mov fs:[rdx], rax; ret; 
0x00000000471df9: pop rax; or al, 0x89; fdiv st, st(6); ret; 
0x00000000470756: pop rax; or al, 0xf6; ret; 
0x000000004267e1: pop rax; or al, [rax]; add [rax], al; add [rax], al; ret; 
0x0000000048caba: pop rax; pop rdx; pop rbx; ret; 
0x0000000045a8f7: pop rax; ret; 
0x0000000048ce6d: pop rax; xor rcx, fs:[0x28]; jne short 0x000000000048ceb4; add rsp, 0x68; ret; 
0x0000000049a472: pop rbp; and [rsi-0x9], ah; ret; 
0x00000000462371: pop rbp; cld; dec dword ptr [rax-0x77]; ret; 
0x0000000048ba0f: pop rbp; fdiv st(4), st; jmp qword ptr [rsi+0x66]; 
0x0000000041ee0f: pop rbp; jmp rax; 
0x00000000421a3e: pop rbp; mov [r11+0x10], eax; mov dword ptr [r11+0x14], 0x0; ret; 
0x00000000499ac4: pop rbp; mov eax, r8d; ret; 
0x0000000041a17c: pop rbp; mov rax, [rax+0xe0]; mov rax, [rax+0x20]; jmp rax; 
0x0000000047e2c7: pop rbp; mov rax, r12; pop r12; pop r13; ret; 
0x000000004033d7: pop rbp; mov rax, r12; pop r12; ret; 
0x00000000490834: pop rbp; mov rax, r13; pop r12; pop r13; ret; 
0x00000000426c08: pop rbp; mov rax, r8; pop r12; pop r13; ret; 
0x00000000421ecc: pop rbp; mov rax, r8; pop r12; ret; 
0x000000004073d4: pop rbp; mov rax, r9; pop r12; ret; 
0x000000004757c6: pop rbp; mov rax, r9; pop r14; ret; 
0x00000000427c80: pop rbp; mov rsi, r12; pop r12; pop r13; jmp rax; 
0x000000004263fe: pop rbp; pop r12; jmp rax; 
0x00000000426c73: pop rbp; pop r12; mov rax, r8; pop r13; ret; 
0x00000000426c86: pop rbp; pop r12; pop r13; jmp rax; 
0x0000000040f688: pop rbp; pop r12; pop r13; pop r14; ret; 
0x00000000411590: pop rbp; pop r12; pop r13; ret; 
0x0000000040333e: pop rbp; pop r12; ret; 
0x000000004272e9: pop rbp; pop r14; pop r15; jmp rax; 
0x0000000040374f: pop rbp; pop r14; pop r15; pop rbp; ret; 
0x000000004018d6: pop rbp; pop r14; pop r15; ret; 
0x0000000040f68c: pop rbp; pop r14; ret; 
0x0000000048f568: pop rbp; pop rbx; ret; 
0x00000000401d61: pop rbp; ret; 
0x0000000045fef1: pop rbp; shl ecx, 0x3; pop r12; shl eax, cl; ret; 
0x00000000491b9f: pop rbx; add rax, [rdx+0x8]; pop rbp; pop r12; jmp rax; 
0x00000000457a96: pop rbx; and eax, 0x7ff80000; ret; 
0x0000000045fe36: pop rbx; and eax, 0xffffffc7; or eax, 0x18; mov [rip+0x6cd71], eax; ret; 
0x0000000045fe06: pop rbx; and eax, 0xffffffc7; or eax, 0x8; mov [rip+0x6cda1], eax; ret; 
0x0000000045fd66: pop rbx; and eax, 0xfffffff8; or eax, 0x1; mov [rip+0x6ce41], eax; ret; 
0x0000000045fd96: pop rbx; and eax, 0xfffffff8; or eax, 0x3; mov [rip+0x6ce11], eax; ret; 
0x000000004579eb: pop rbx; cmove rax, rdx; ret; 
0x00000000457a7b: pop rbx; cmovne rax, rdx; ret; 
0x0000000041ed28: pop rbx; jmp rax; 
0x000000004265c1: pop rbx; mov ch, 0xff; jmp qword ptr [rsi+0x66]; 
0x0000000041f970: pop rbx; mov eax, 0xffffffff; pop rbp; pop r12; ret; 
0x0000000048acdb: pop rbx; mov eax, fs:[rax]; ret; 
0x000000004730ea: pop rbx; mov eax, r8d; pop rbp; pop r12; ret; 
0x0000000041e23c: pop rbx; mov edx, 0x1; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x000000004207c4: pop rbx; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [r12+0x18]; 
0x0000000041b6f5: pop rbx; mov rax, r8; pop rbp; pop r12; ret; 
0x0000000047d332: pop rbx; mov rdi, rbp; pop rbp; pop r12; jmp rax; 
0x0000000048acbe: pop rbx; or dword ptr [rip+0x3f802], 0x1; ret; 
0x0000000045aad4: pop rbx; pop r12; ret; 
0x0000000046c657: pop rbx; pop r14; ret; 
0x0000000041ee0e: pop rbx; pop rbp; jmp rax; 
0x00000000499ac3: pop rbx; pop rbp; mov eax, r8d; ret; 
0x000000004033d6: pop rbx; pop rbp; mov rax, r12; pop r12; ret; 
0x00000000421ecb: pop rbx; pop rbp; mov rax, r8; pop r12; ret; 
0x000000004073d3: pop rbx; pop rbp; mov rax, r9; pop r12; ret; 
0x000000004263fd: pop rbx; pop rbp; pop r12; jmp rax; 
0x0000000041158f: pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000040333d: pop rbx; pop rbp; pop r12; ret; 
0x000000004965fd: pop rbx; pop rbp; pop r14; ret; 
0x0000000040354a: pop rbx; pop rbp; ret; 
0x0000000040222b: pop rbx; ret; 
0x00000000457a45: pop rbx; shr eax, 0x6; and eax, 0x3fffc00; ret; 
0x000000004579fa: pop rbx; shr eax, 0xe; and eax, 0x3fc00; ret; 
0x0000000041caef: pop rbx; sub rax, rdx; pop rbp; pop r12; ret; 
0x0000000041d420: pop rbx; xor eax, eax; pop rbp; pop r12; ret; 
0x00000000430037: pop rcx; add [rax], eax; add [rbp-0x77], cl; ret far; 
0x00000000429366: pop rcx; add al, [rax]; lea rdx, [rip+0x2aff0]; cmovne rax, rdx; ret; 
0x00000000446924: pop rcx; and al, 0x0; add [rbp-0x77], cl; ret far; 
0x0000000043f119: pop rcx; jmp qword ptr [rdx-0x2f]; 
0x0000000043eaec: pop rcx; jmp qword ptr [rdx-0xf]; 
0x00000000499057: pop rcx; jmp rcx; 
0x0000000045e584: pop rcx; or [rax+0x1], cl; ret far; 
0x00000000430717: pop rcx; or al, [rax]; add [rbp-0x77], cl; ret far; 
0x0000000042672b: pop rcx; or al, [rax]; syscall; 
0x000000004767c3: pop rcx; rol byte ptr [rbx], 0x0; lea rsi, [rip+0x503f2]; movzx eax, byte ptr [rdi+rax]; jmp qword ptr [rsi+rax*8]; 
0x0000000046b75c: pop rcx; stc; call qword ptr [rax-0x5e1f00d]; 
0x000000004854f3: pop rcx; sub al, 0xfa; dec dword ptr [rcx-0x77]; ret; 
0x000000004344b9: pop rdi; adc [rdx+0x9], dh; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000428afd: pop rdi; adc [rdx], cl; add [rax+0x39], cl; ret; 
0x0000000042a236: pop rdi; add al, [rax]; lea rdx, [rip+0x27870]; cmovne rax, rdx; ret; 
0x00000000435ed9: pop rdi; in al, dx; mov [rdi-0xc], rcx; mov [rdi-0x4], edx; ret; 
0x00000000435ce9: pop rdi; in eax, dx; mov [rdi-0xb], rcx; mov [rdi-0x4], edx; ret; 
0x000000004272ed: pop rdi; jmp rax; 
0x00000000435b09: pop rdi; out dx, al; mov [rdi-0xa], rcx; mov [rdi-0x4], edx; ret; 
0x00000000435939: pop rdi; out dx, eax; mov [rdi-0x9], r8; mov [rdi-0x4], edx; ret; 
0x00000000435a35: pop rdi; out dx, eax; mov [rdi-0x9], rcx; mov [rdi-0x1], dl; ret; 
0x00000000435981: pop rdi; out dx, eax; mov [rdi-0x9], rcx; mov [rdi-0x4], edx; ret; 
0x00000000403753: pop rdi; pop rbp; ret; 
0x000000004018da: pop rdi; ret; 
0x00000000434d39: pop rdi; shl byte ptr [rdx+0x13], 0x1; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043440b: pop rdi; shl byte ptr [rdx+0xe], 0x1; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000048ff32: pop rdx; fdivr st, st(4); jmp qword ptr [rsi+0x2e]; 
0x0000000040c032: pop rdx; idiv bh; jmp qword ptr [rsi+0x2e]; 
0x000000004794fb: pop rdx; ja 0x00000000004789b8; movzx eax, byte ptr [rdx+rax]; lea rcx, [rip+0x4dcb3]; jmp qword ptr [rcx+rax*8]; 
0x00000000479920: pop rdx; ja 0x00000000004789b8; movzx ecx, byte ptr [rdx+rax]; lea rax, [rip+0x4d78e]; jmp qword ptr [rax+rcx*8]; 
0x0000000047973f: pop rdx; ja 0x00000000004789b8; movzx ecx, byte ptr [rdx+rax]; lea rax, [rip+0x4d86f]; jmp qword ptr [rax+rcx*8]; 
0x0000000045af3b: pop rdx; or [rcx-0xa], al; ret; 
0x0000000048cabb: pop rdx; pop rbx; ret; 
0x000000004017df: pop rdx; ret; 
0x00000000429499: pop rdx; xor eax, eax; pop rbp; pop r12; ret; 
0x0000000042966d: pop rsi; add al, [rax]; cmove rax, rdx; ret; 
0x00000000496846: pop rsi; add eax, 0x23770; ret; 
0x00000000428c79: pop rsi; lea rdx, [rip+0x77a77]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000041ec29: pop rsi; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp+0x18]; 
0x000000004272eb: pop rsi; pop r15; jmp rax; 
0x00000000403751: pop rsi; pop r15; pop rbp; ret; 
0x000000004018d8: pop rsi; pop r15; ret; 
0x00000000404cfe: pop rsi; ret; 
0x000000004139ab: pop rsp; idiv edi; jmp qword ptr [rsi-0x77]; 
0x00000000426400: pop rsp; jmp rax; 
0x00000000426c75: pop rsp; mov rax, r8; pop r13; ret; 
0x00000000421b18: pop rsp; movsd [rdi], [rsi]; or al, [rax]; ret; 
0x0000000044ec40: pop rsp; movsxd eax, [rip-0x6eeb7500]; mov eax, [rcx+rax*4]; sub eax, edx; ret; 
0x00000000426c88: pop rsp; pop r13; jmp rax; 
0x000000004757c4: pop rsp; pop r13; mov rax, r9; pop r14; ret; 
0x000000004272e7: pop rsp; pop r13; pop r14; pop r15; jmp rax; 
0x000000004018d4: pop rsp; pop r13; pop r14; pop r15; ret; 
0x0000000040f68a: pop rsp; pop r13; pop r14; ret; 
0x00000000411592: pop rsp; pop r13; ret; 
0x00000000403340: pop rsp; ret; 
0x0000000045fef6: pop rsp; shl eax, cl; ret; 
0x00000000465b30: pop rsp; xlat [rbx]; stc; jmp qword ptr [rsi+0x66]; 
0x00000000498e09: popfq; cmp ch, 0xff; jmp qword ptr [rsi+0xf]; 
0x00000000453b9f: popfq; fiadd st, word ptr [rax+rax]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000004801ce: popfq; std; jmp qword ptr [rsi+0xf]; 
0x0000000043b892: psllq mm1, [r15]; jg short 0x000000000043b8a7; ret; 
0x0000000043e3c2: psllq mm1, [r15]; jg short 0x000000000043e3d7; ret; 
0x0000000043b893: psllq mm1, [rdi]; jg short 0x000000000043b8a7; ret; 
0x0000000043e3c3: psllq mm1, [rdi]; jg short 0x000000000043e3d7; ret; 
0x00000000453755: psllq mm1, [rdi]; jg short 0x0000000000453762; mov [rdi+0xf], ecx; ret; 
0x000000004537b6: psllq mm1, [rdi]; jg short 0x00000000004537c3; mov [rdi+0xf], rcx; ret; 
0x000000004538b8: psllq mm1, [rdi]; jg short 0x00000000004538c4; movdqu [rdi+0xf], xmm2; ret; 
0x00000000453df5: psllq mm1, [rdi]; jg short 0x0000000000453e02; mov [rdi+0xf], ecx; lea rax, [rdi+0x12]; ret; 
0x00000000453e76: psllq mm1, [rdi]; jg short 0x0000000000453e83; mov [rdi+0xf], rcx; lea rax, [rdi+0x16]; ret; 
0x00000000453f78: psllq mm1, [rdi]; jg short 0x0000000000453f84; movdqu [rdi+0xf], xmm2; lea rax, [rdi+0x1e]; ret; 
0x00000000423359: psubsw mm2, [rsi+rdi*8-0x1]; call qword ptr [rax-0x2bc272b8]; 
0x0000000047cfb6: punpckhqdq xmm0, xmm0; mov [rax+0x10], rcx; mov [rax+0x40], rdx; movups [rax], xmm0; ret; 
0x0000000041ebdf: punpckhqdq xmm0, xmm0; mov [rdi+0x18], rdx; mov [rdi+0x48], rax; movups [rdi+0x8], xmm0; ret; 
0x00000000462c87: punpckldq mm1, mm3; punpcklqdq xmm0, xmm1; movups [rdx+0x48], xmm0; ret; 
0x00000000462c86: punpckldq xmm1, xmm3; punpcklqdq xmm0, xmm1; movups [rdx+0x48], xmm0; ret; 
0x0000000041bc21: punpcklqdq xmm0, xmm0; movups [rbx+0x8], xmm0; pop rbx; ret; 
0x00000000462c8a: punpcklqdq xmm0, xmm1; movups [rdx+0x48], xmm0; ret; 
0x0000000047f208: push 0x0; lea rcx, [rax+0x1]; lea r9, [rsp+0x28]; call rbx; 
0x000000004581cb: push 0x0; lea rcx, [rax+0x4]; lea r9, [rsp+0x20]; call rbx; 
0x00000000460770: push 0x0; mov r9, r14; mov rsi, [rsp+0x18]; xor r8d, r8d; call rbx; 
0x000000004650fc: push 0x0; mov rcx, [rsp+0x20]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x48]; call r13; 
0x00000000464246: push 0x0; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; mov rax, [rsp+0x18]; call rax; 
0x00000000462ecc: push 0x0; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; mov rax, [rsp+0x28]; call rax; 
0x0000000045815f: push 0x1; lea r9, [rsp+0x20]; call rbx; 
0x000000004581c9: push 0x1; push 0x0; lea rcx, [rax+0x4]; lea r9, [rsp+0x20]; call rbx; 
0x0000000045815b: push 0x1; xor edx, edx; push 0x1; lea r9, [rsp+0x20]; call rbx; 
0x000000004598cf: push 0x1d158d48; mov [rax+rax], al; movsxd rax, [rdx+rbp*4]; add rax, rdx; notrack jmp rax; 
0x000000004634b8: push 0x24748b48; pop rax; mov rdi, [rsp+0x60]; mov rax, [rsp+0x18]; call rax; 
0x00000000401f39: push 0x48fffffe; mov [rax], edx; mov rax, [rbp-0x8]; leave; ret; 
0x000000004192c7: push 0x5c415d5b; pop r13; pop r14; pop r15; ret; 
0x0000000047f160: push 0x5c415d5b; pop r13; ret; 
0x0000000043a507: push 0x63490006; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000424bdd: push 0x6e0f4966; ret; 
0x00000000492572: push 0xffffffffffffffb2; cld; call qword ptr [rax+0x44b04d8b]; 
0x00000000455db7: push qword ptr [rbp+0x1a]; xor eax, eax; ret; 
0x0000000045ae2c: push qword ptr [rbp+0x27]; mov rdi, [rbp]; call rbx; 
0x000000004996fa: push qword ptr [rbp+0x36]; mov eax, 0x8; add rsp, 0x8; ret; 
0x0000000045bd60: push qword ptr [rbp+0x3e]; mov rdi, [r14]; call rbx; 
0x0000000045c710: push qword ptr [rbp+0x44]; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x00000000432519: push qword ptr [rbp+0x4]; vzeroupper; ret; 
0x0000000045c6e1: push qword ptr [rbp+0x4b]; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045bd8c: push qword ptr [rbp+0x69]; mov rdi, [r14]; call rbx; 
0x0000000049cdb1: push qword ptr [rbp+rdx+0x48]; mov eax, [rdi+0x20]; test rax, rax; je short 0x000000000049cdc4; call rax; 
0x0000000049c2fd: push qword ptr [rbp+rdx-0x18]; ret far; 
0x0000000041fd90: push qword ptr [rbp-0x40]; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000459650: push qword ptr [rbx+0x1]; ret; 
0x0000000040291e: push qword ptr [rcx]; idiv byte ptr [rdi+0x3003]; mov eax, 0x9e; syscall; 
0x0000000041e263: push qword ptr [rcx]; ror byte ptr [rax-0x7d], 0xc4; sbb [rbx+0x5d], bl; ret; 
0x0000000045969b: push qword ptr [rdi+0x22]; hlt; mov edi, edx; mov eax, r8d; syscall; 
0x0000000045aa59: push qword ptr [rdi+0x4]; ret; 
0x00000000459f0c: push qword ptr [rdi+0x51]; ret; 
0x00000000459e67: push qword ptr [rdi+0x56]; ret; 
0x00000000459fa0: push qword ptr [rdi+0x5]; ret; 
0x0000000045abdb: push qword ptr [rdi+0x62]; pop rbx; pop rbp; ret; 
0x00000000459c7f: push qword ptr [rdi+0x6]; ret; 
0x00000000459cde: push qword ptr [rdi+0x7]; ret; 
0x0000000045a9ed: push qword ptr [rdi+0x8]; ret; 
0x00000000480524: push qword ptr [rdi+0x9]; ret; 
0x00000000490293: push qword ptr [rdi+0xa]; ret; 
0x0000000045abc6: push qword ptr [rdi+rsi+0x41]; mov edx, ebx; mov rdi, rbp; mov eax, 0x9; syscall; 
0x0000000047fd54: push qword ptr [rdi-0x37]; add rsp, 0x8; pop rbp; pop r12; ret; 
0x000000004343ac: push qword ptr [rdx+0x7]; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000045a032: push qword ptr [rsp+rbx*8+0x48]; mov ebp, edi; mov rdi, rbp; mov eax, 0x4f; syscall; 
0x00000000464cdd: push r12; mov r9, [rsp+0x18]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; call rbx; 
0x00000000467ffb: push r12; mov r9, [rsp+0x18]; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; call rbx; 
0x00000000469760: push r12; mov r9, [rsp+0x20]; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; call rbx; 
0x0000000046623d: push r12; mov r9, [rsp+0x30]; mov rsi, [rsp+0x48]; mov rdi, [rsp+0x40]; call rbx; 
0x00000000465601: push r12; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x48]; call rbx; 
0x00000000463ee0: push r14; mov r9, [rsp+0x20]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; call rbx; 
0x0000000047cf7e: push rax; adc [rax-0x77], cl; ret; 
0x000000004208b9: push rax; adc [rbx-0x2fd6efb9], cl; ret; 
0x00000000421725: push rax; add [rax-0x77], ecx; adc eax, 0xa83e2; ret; 
0x000000004932a0: push rax; add al, 0x0; add bl, ch; ret; 
0x00000000448b2d: push rax; add al, [rax]; add [rbp-0x77], cl; ret far; 
0x0000000041694c: push rax; and al, 0x0; add [rax+0x39], cl; ret; 
0x000000004607f0: push rax; call rbx; 
0x0000000049b824: push rax; cld; dec dword ptr [rax-0x7d]; ret; 
0x00000000478c62: push rax; cmp [rax+0x39], cl; ret; 
0x00000000413d33: push rax; fdiv st(7), st; jmp qword ptr [rsi+0xf]; 
0x00000000421b70: push rax; idiv ch; jmp qword ptr [rsi+0x66]; 
0x00000000491b6e: push rax; inc dword ptr [rbp+0x481a74c0]; lea ebx, [rbp+rdx*8]; nop [rax]; call qword ptr [rbx]; 
0x0000000041264a: push rax; inc esi; test [rax], eax; idiv edi; jmp qword ptr [rax]; 
0x00000000499769: push rax; jne short 0x0000000000499793; xor eax, eax; add rsp, 0x8; ret; 
0x000000004997c9: push rax; jne short 0x00000000004997f3; xor eax, eax; add rsp, 0x8; ret; 
0x0000000049b179: push rax; jne short 0x000000000049b19b; xor eax, eax; add rsp, 0x8; ret; 
0x0000000046931e: push rax; mov rax, [rsp+0x18]; call rax; 
0x00000000467c21: push rax; mov rax, [rsp+0x20]; call rax; 
0x00000000465107: push rax; mov rdi, [rsp+0x48]; call r13; 
0x00000000465607: push rax; mov rdi, [rsp+0x48]; call rbx; 
0x00000000463181: push rax; mov rdi, [rsp+0x58]; call r14; 
0x000000004646d1: push rax; mov rdi, [rsp+0x58]; call r15; 
0x00000000463eeb: push rax; mov rdi, [rsp+0x58]; call rbx; 
0x0000000046424c: push rax; mov rdi, [rsp+0x58]; mov rax, [rsp+0x18]; call rax; 
0x00000000464a73: push rax; mov rdi, [rsp+0x58]; mov rax, [rsp+0x20]; call rax; 
0x00000000462ed2: push rax; mov rdi, [rsp+0x58]; mov rax, [rsp+0x28]; call rax; 
0x00000000463c75: push rax; mov rdi, [rsp+0x58]; mov rax, [rsp+0x30]; call rax; 
0x0000000047cfc0: push rax; movups [rax], xmm0; ret; 
0x0000000045d84a: push rax; or bl, al; nop [rax]; ret; 
0x00000000465600: push rax; push r12; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x48]; call rbx; 
0x000000004646cb: push rax; push rbx; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; call r15; 
0x0000000040aaac: push rax; ret far; 
0x000000004208aa: push rax; sbb [rbx-0x2fd6efb9], cl; ret; 
0x0000000047d705: push rax; sbb [rsi+0x1f], dh; mov rax, [rax+0xe0]; mov esi, 0xffffffff; call qword ptr [rax+0x18]; 
0x0000000049b97b: push rbp; adc [rax-0x7d], cl; ret; 
0x0000000048e1bd: push rbp; call qword ptr [rax+0x48068b48]; 
0x0000000046d418: push rbp; enter 0xd231, 0xe8; out dx, eax; ret; 
0x00000000413b2e: push rbp; fdivp st(7), st; jmp qword ptr [rsi+0xf]; 
0x00000000405a5e: push rbp; idiv bh; jmp qword ptr [rsi+0xf]; 
0x00000000421ea7: push rbp; jl short 0x0000000000421eb4; add [rax+0x39], cl; ret; 
0x0000000041b018: push rbp; mov eax, 0xc04d8d4c; mov rcx, r14; mov rdi, r15; call r12; 
0x00000000499093: push rbp; or al, ch; idiv dil; jmp qword ptr [rsi+0xf]; 
0x00000000428a97: push rbp; ret far; 
0x00000000474a64: push rbp; sub dh, al; add [rip-0xb9517], ch; jmp qword ptr [rsi-0x70]; 
0x0000000041c08a: push rbp; sub rdx, rsi; mov [rsp], rcx; mov rdi, rbp; call rax; 
0x00000000402622: push rbx; adc [rax-0x7d], cl; ret; 
0x00000000406862: push rbx; add [rax-0x7d], ecx; ret; 
0x00000000429716: push rbx; add [rax], al; cmovne rax, rdx; ret; 
0x00000000429717: push rbx; add [rax], al; cmovne rax, rdx; ret; 
0x00000000497995: push rbx; add cl, [rax-0x7d]; ret; 
0x00000000456ff9: push rbx; jb short 0x0000000000457001; movzx ecx, byte ptr [rsi]; mov [rdi], cl; ret; 
0x0000000047d61f: push rbx; je short 0x000000000047d67d; pop rbp; pop r12; ret; 
0x00000000463177: push rbx; mov r9, [rsp+0x18]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; call r14; 
0x000000004638f6: push rbx; mov r9, [rsp+0x20]; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x60]; call r15; 
0x00000000467272: push rbx; mov r9, [rsp+0x30]; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; call r15; 
0x0000000045b99c: push rbx; mov rdi, rbp; xor edx, edx; mov esi, 0x1; call r12; 
0x0000000041b9e7: push rbx; mov rdi, rbx; sub rdx, rsi; call qword ptr [r12+0x70]; 
0x000000004193ae: push rbx; mov rdi, rbx; sub rdx, rsi; call qword ptr [rax+0x70]; 
0x000000004646cc: push rbx; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; call r15; 
0x0000000041b67f: push rbx; nop edx, edi; cmp qword ptr [rip+0xad914], 0x0; je short 0x000000000041b68f; ret; 
0x000000004904bf: push rbx; nop edx, edi; mov eax, [rip+0x3c71e]; ret; 
0x000000004908ef: push rbx; nop edx, edi; ret; 
0x0000000049d333: push rbx; nop edx, edi; sub rsp, 0x8; add rsp, 0x8; ret; 
0x0000000041b5d2: push rbx; or [rax-0x75], cl; xor ecx, [rax-0x7d]; ret; 
0x0000000045b28a: push rbx; or [rax-0x7d], cl; ret; 
0x0000000045de63: push rcx; add al, 0x0; mov eax, 0x15; syscall; 
0x0000000048d58d: push rcx; add rsp, 0x110; mov eax, r12d; pop r12; ret; 
0x0000000043ecfa: push rcx; jl short 0x000000000043ed45; adc [rcx-0x2], esi; vmovups [r9-0x40], zmm15; ret; 
0x0000000043ed01: push rcx; jl short 0x000000000043ed4c; adc [rcx-0x1], edi; ret; 
0x0000000043ee61: push rcx; jl short 0x000000000043eeac; adc [rcx+0x6], esi; vmovups [r9+0x1c0], zmm15; ret; 
0x0000000043ee68: push rcx; jl short 0x000000000043eeb3; adc [rcx+0x7], edi; ret; 
0x0000000042496d: push rcx; or [rax+0x39], cl; ret; 
0x00000000406d23: push rcx; or al, 0x0; syscall; 
0x00000000459f0e: push rcx; ret; 
0x00000000422bb5: push rcx; sbb [rcx+0x1], cl; ret; 
0x00000000490a3b: push rcx; sub bh, dh; call qword ptr [rax-0x5e1f00d]; 
0x000000004184b5: push rdi; add [rax], eax; add [rcx], dh; test byte ptr [rax-0x77], 0xef; call qword ptr [rbx+0x10]; 
0x0000000048eb2f: push rdi; add [rcx-0x77], ecx; push rsp; ret; 
0x00000000453caa: push rdi; add al, 0x48; lea eax, [rdi+0x5]; ret; 
0x0000000043b9f9: push rdi; add al, 0x48; mov [rdi], ecx; ret; 
0x00000000453d5c: push rdi; add eax, 0xc478d48; ret; 
0x0000000046921d: push rdi; add eax, [rax]; add [rcx-0x73], cl; add r9b, [r8+0x39]; ret; 
0x00000000431df8: push rdi; add rax, 0x20; add rax, rdi; vzeroupper; ret; 
0x0000000045d890: push rdi; and dh, al; sub [r9], r8b; ret; 
0x000000004357c8: push rdi; clc; ret; 
0x00000000435940: push rdi; cld; ret; 
0x00000000436467: push rdi; cli; mov [rdi-0x4], ecx; ret; 
0x0000000043b2d9: push rdi; cmc; mov [rdi-0x4], ecx; ret; 
0x0000000045965a: push rdi; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x00000000459c8e: push rdi; fsub st, dword ptr [rcx+rcx*4+0x2]; mov eax, 0xffffffff; ret; 
0x00000000459ec6: push rdi; fsub st, dword ptr [rcx+rcx*4+0x2]; mov rax, 0xffffffffffffffff; ret; 
0x000000004806ae: push rdi; fsub st, dword ptr [rcx+rcx*4+0x2]; xor eax, eax; mov qword ptr [rip+0x4bc37], 0xffffffffffffffff; ret; 
0x0000000043b259: push rdi; hlt; mov [rdi-0x4], ecx; ret; 
0x00000000421e9d: push rdi; jl short 0x0000000000421eaa; add [rax+0x1], cl; ret; 
0x0000000041ebb4: push rdi; mov [rdi+0x18], rax; mov [rdi+0x8], rax; ret; 
0x0000000043b13a: push rdi; mov [rdi-0x8], rcx; ret; 
0x000000004350a5: push rdi; mov ecx, 0x63490006; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000041bad8: push rdi; mov esi, 0xffffffff; mov rdi, r8; call qword ptr [r15+0x18]; 
0x0000000048f561: push rdi; or [rcx-0x2feeb728], cl; pop rbp; pop rbx; ret; 
0x00000000421a65: push rdi; or byte ptr [rdx], 0x0; ret; 
0x00000000453f40: push rdi; or eax, 0x1c478d48; ret; 
0x00000000433773: push rdi; ret far; 
0x00000000433bae: push rdi; ret; 
0x0000000041ebe5: push rdi; sbb [rax-0x77], cl; movups [rdi+0x8], xmm0; ret; 
0x0000000045d88a: push rdi; sbb [rdi+0x16], dh; mov [rdi+0x20], rdx; mov byte ptr [rdi+0x28], 0x1; ret; 
0x0000000045d8b0: push rdi; sbb [rdi-0x10], bh; mov [rdi+0x20], rdx; mov byte ptr [rdi+0x28], 0x1; ret; 
0x0000000046da93: push rdi; stc; jmp qword ptr [rsi+0x2e]; 
0x00000000436667: push rdi; stc; mov [rdi-0x4], ecx; ret; 
0x00000000435e8a: push rdi; std; mov [rdi-0x2], cx; ret; 
0x00000000436267: push rdi; sti; mov [rdi-0x4], ecx; ret; 
0x00000000411df8: push rdi; sub dh, al; add [rcx-0x7d], cl; ret; 
0x00000000419aa9: push rdi; sub rdx, rsi; mov [rsp+0x8], rcx; mov rdi, r15; call rax; 
0x0000000047ec1b: push rdi; xor [rsi+0xf], ah; outsd dx, [rsi]; ret; 
0x00000000431948: push rdi; xor eax, eax; ret; 
0x0000000043b1ca: push rdi; xrelease mov [rdi-0x8], rcx; ret; 
0x0000000047e20a: push rdx; clc; call far fword ptr [rdx+0x31]; 
0x000000004789ea: push rdx; in al, 0xfa; jmp qword ptr [rsi-0x70]; 
0x0000000047a692: push rdx; in eax, 0xff; jmp qword ptr [rsi+0x2e]; 
0x000000004343b9: push rdx; sar byte ptr [rsi], 0x41; jmp rcx; 
0x000000004538d7: push rsi; adc bl, dh; movq [rdi], mm0; movdqu [rdi+0x10], xmm2; ret; 
0x0000000043bd01: push rsi; add [rbx+0x157890e], ecx; mov [rdi], ecx; ret; 
0x0000000048f1d7: push rsi; add [rcx-0x77], ecx; push rsp; ret; 
0x0000000045665d: push rsi; add ah, [rdx-0xf]; jl short 0x00000000004566ab; adc [rsi+0x3], edx; ret; 
0x000000004017d1: push rsi; add al, [rax]; mov qword ptr [rip+0xcabd9], 0x0; pop rdx; ret; 
0x0000000043bc91: push rsi; add cl, [rbx+0x257890e]; mov [rdi], ecx; ret; 
0x0000000043b982: push rsi; add eax, 0x480e8b48; mov [rdi+0x5], edx; mov [rdi], rcx; ret; 
0x00000000453d55: push rsi; add eax, 0x480f8948; mov [rdi+0x5], edx; lea rax, [rdi+0xc]; ret; 
0x000000004536e5: push rsi; add eax, 0x480f8948; mov [rdi+0x5], edx; ret; 
0x000000004566f3: push rsi; add eax, 0x487cf162; adc [rsi+0x6], edx; vmovups [rsi+0x1c0], zmm2; ret; 
0x0000000043bc21: push rsi; add ecx, [rbx+0x357890e]; mov [rdi], ecx; ret; 
0x00000000453cc3: push rsi; add ecx, [rcx+0x357890f]; lea rax, [rdi+0x6]; ret; 
0x00000000453683: push rsi; add ecx, [rcx+0x357890f]; ret; 
0x00000000460e36: push rsi; add edi, edx; jmp qword ptr [rsi+0x48]; 
0x0000000047691b: push rsi; and [rcx+rcx*4-0x11], cl; sub rdx, rsi; sar rdx, 0x2; call qword ptr [r12+0x38]; 
0x000000004122d2: push rsi; and [rcx+rcx*4-0x1], cl; sub rdx, rsi; call qword ptr [rbx+0x38]; 
0x000000004358d6: push rsi; clc; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x000000004358f2: push rsi; clc; mov [rdi-0x8], rdx; ret; 
0x00000000436246: push rsi; clc; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000436446: push rsi; clc; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000436646: push rsi; clc; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000436061: push rsi; cld; mov [rdi-0x4], edx; ret; 
0x00000000435ab5: push rsi; cld; mov [rdi-0x9], rcx; mov [rdi-0x4], edx; ret; 
0x00000000435c95: push rsi; cld; mov [rdi-0xa], rcx; mov [rdi-0x4], edx; ret; 
0x00000000435e75: push rsi; cld; mov [rdi-0xb], rcx; mov [rdi-0x4], edx; ret; 
0x00000000436055: push rsi; cld; mov [rdi-0xc], rcx; mov [rdi-0x4], edx; ret; 
0x000000004558f6: push rsi; cmc; sub eax, edx; ret; 
0x000000004558e6: push rsi; hlt; sub eax, edx; ret; 
0x000000004876eb: push rsi; idiv bh; call qword ptr [rax+0x4cf8894c]; 
0x00000000433479: push rsi; jmp far fword ptr [rcx]; 
0x00000000456546: push rsi; loopne 0x000000000045650c; vmovdqu [rdi], xmm0; vmovdqu [rsi-0x10], xmm0; ret; 
0x00000000463ee1: push rsi; mov r9, [rsp+0x20]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; call rbx; 
0x0000000043b1c2: push rsi; mov rcx, [rsi-0x8]; mov [rdi-0xd], rdx; mov [rdi-0x8], rcx; ret; 
0x0000000043b132: push rsi; mov rcx, [rsi-0x8]; mov [rdi-0xe], rdx; mov [rdi-0x8], rcx; ret; 
0x00000000453f37: push rsi; or eax, 0x77f0ff3; movdqu [rdi+0xd], xmm2; lea rax, [rdi+0x1c]; ret; 
0x00000000453877: push rsi; or eax, 0x77f0ff3; movdqu [rdi+0xd], xmm2; ret; 
0x000000004538b7: push rsi; psllq mm1, [rdi]; jg short 0x00000000004538c4; movdqu [rdi+0xf], xmm2; ret; 
0x000000004707c3: push rsi; ret; 
0x00000000459e69: push rsi; ret; 
0x000000004564f5: push rsi; std; vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x000000004558c6: push rsi; sub eax, edx; ret; 
0x000000004558d6: push rsi; sub eax, edx; ret; 
0x0000000043b3d2: push rsi; test dword ptr [rbx-0x76b703b2], 0x4f89f757; cld; ret; 
0x00000000499599: push rsp; and al, 0x10; call rax; 
0x0000000042414a: push rsp; and al, 0x18; mov [rsp+0x10], r8; call rax; 
0x0000000048ca67: push rsp; and al, 0x38; mov rcx, [rsp+0x40]; add rsp, 0x48; jmp qword ptr [rax]; 
0x0000000048c9e5: push rsp; and al, 0x38; mov rcx, [rsp+0x40]; add rsp, 0x58; jmp qword ptr [rax]; 
0x0000000045a7ba: push rsp; and al, 0x8; mov esi, 0x10; mov eax, 0x48; syscall; 
0x0000000042cf87: push rsp; cmp ah, [rax]; sub eax, edx; vzeroupper; ret; 
0x00000000464cde: push rsp; mov r9, [rsp+0x18]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; call rbx; 
0x00000000467ffc: push rsp; mov r9, [rsp+0x18]; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; call rbx; 
0x00000000469761: push rsp; mov r9, [rsp+0x20]; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; call rbx; 
0x0000000046623e: push rsp; mov r9, [rsp+0x30]; mov rsi, [rsp+0x48]; mov rdi, [rsp+0x40]; call rbx; 
0x00000000465602: push rsp; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x48]; call rbx; 
0x0000000044c569: push rsp; or eax, 0x894d0000; ret far; 
0x0000000041335e: push rsp; ret; 
0x0000000048239e: push rsp; xchg ebp, eax; add [rcx+rax-0x16], cl; notrack jmp rdx; 
0x0000000042a195: pushfq; add [rax], al; lea rdx, [rip+0xf231]; cmovne rax, rdx; ret; 
0x00000000467b18: pushfq; add [rax], eax; add [rcx+0x3948fc51], cl; ret; 
0x0000000044b2e5: pushfq; add eax, 0x8a0c8b00; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000049cb57: pushfq; ret; 
0x0000000047ddce: pxor mm0, mm0; mov qword ptr [rax+0x50], 0x0; movups [rax+0x40], xmm0; pop rbx; ret; 
0x0000000048bf42: pxor mm0, mm0; mov qword ptr [rbx+0x10], 0x0; movups [rbx], xmm0; pop rbx; ret; 
0x0000000041ecc9: pxor mm0, mm0; mov qword ptr [rbx+0x58], 0x0; movups [rbx+0x48], xmm0; pop rbx; ret; 
0x000000004209d5: pxor mm0, mm0; movups [rbx+0x48], xmm0; pop rbx; ret; 
0x0000000047ddcd: pxor xmm0, xmm0; mov qword ptr [rax+0x50], 0x0; movups [rax+0x40], xmm0; pop rbx; ret; 
0x0000000048bf41: pxor xmm0, xmm0; mov qword ptr [rbx+0x10], 0x0; movups [rbx], xmm0; pop rbx; ret; 
0x0000000041ecc8: pxor xmm0, xmm0; mov qword ptr [rbx+0x58], 0x0; movups [rbx+0x48], xmm0; pop rbx; ret; 
0x000000004209d4: pxor xmm0, xmm0; movups [rbx+0x48], xmm0; pop rbx; ret; 
0x0000000041035b: rcl al, 0xb5; add [rax+0x39], r9b; ret; 
0x00000000464cdb: rcl byte ptr [rax+0x41], 0x54; mov r9, [rsp+0x18]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; call rbx; 
0x00000000467ff9: rcl byte ptr [rax+0x41], 0x54; mov r9, [rsp+0x18]; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; call rbx; 
0x0000000046975e: rcl byte ptr [rax+0x41], 0x54; mov r9, [rsp+0x20]; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; call rbx; 
0x0000000046623b: rcl byte ptr [rax+0x41], 0x54; mov r9, [rsp+0x30]; mov rsi, [rsp+0x48]; mov rdi, [rsp+0x40]; call rbx; 
0x000000004655ff: rcl byte ptr [rax+0x41], 0x54; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x48]; call rbx; 
0x00000000463ede: rcl byte ptr [rax+0x41], 0x56; mov r9, [rsp+0x20]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; call rbx; 
0x00000000463175: rcl byte ptr [rax+0x53], 0x4c; mov ecx, [rsp+0x18]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; call r14; 
0x000000004638f4: rcl byte ptr [rax+0x53], 0x4c; mov ecx, [rsp+0x20]; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x60]; call r15; 
0x00000000467270: rcl byte ptr [rax+0x53], 0x4c; mov ecx, [rsp+0x30]; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; call r15; 
0x000000004478ad: rcl byte ptr [rax+rax], 0x1; add [rbp-0x77], cl; ret far; 
0x000000004563a6: rcl byte ptr [rax], 0x29; cmp edx, ecx; jle short 0x00000000004563c4; movsxd rax, ecx; ret; 
0x000000004785ba: rcl byte ptr [rcx-0x2], cl; jmp qword ptr [rsi-0x70]; 
0x00000000464244: rcl byte ptr [rsi+0x6a], 0x0; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; mov rax, [rsp+0x18]; call rax; 
0x00000000449a2d: rcr byte ptr [rax], 0x0; add [rbp-0x77], cl; ret far; 
0x0000000041caf2: rcr byte ptr [rbp+0x41], 0x1; pop rsp; ret; 
0x00000000426c72: rcr byte ptr [rbp+0x41], 0x5c; mov rax, r8; pop r13; ret; 
0x00000000418f92: rcr byte ptr [rbp+0x41], 0x5c; pop r13; pop r14; ret; 
0x0000000041b6f8: rcr byte ptr [rbp+0x41], 0x5c; ret; 
0x0000000048f567: rcr byte ptr [rbp+0x5b], 0x1; ret; 
0x0000000049cb3f: rcr byte ptr [rbx+0x5d], 0x1; pop r12; pop r13; pop r14; ret; 
0x00000000419028: rcr byte ptr [rbx+0x5d], 0x41; pop rsp; pop r13; pop r14; ret; 
0x0000000041158e: rcr byte ptr [rbx+0x5d], 0x41; pop rsp; pop r13; ret; 
0x0000000042301c: rcr byte ptr [rbx+0x5d], 0x41; pop rsp; ret; 
0x0000000042640a: rcr byte ptr [rbx+0x5d], 0x4c; mov eax, eax; pop r12; ret; 
0x00000000498d48: rcr byte ptr [rbx+0x5d], 0xc3; nop [rax]; endbr64; ret; 
0x00000000457aa2: rcr byte ptr [rbx-0x3d], 0x1; mov eax, 0x60; pop rbx; ret; 
0x000000004471bd: rcr byte ptr [rbx], 0x0; add [rbp-0x77], cl; ret far; 
0x000000004249ba: rcr dword ptr [rbx+0x48], 0x3d; jmp far fword ptr [rcx]; 
0x0000000045feef: rcr dword ptr [rbx+0x5d], 0xc1; loope 0x000000000045fef8; pop r12; shl eax, cl; ret; 
0x0000000048d719: rcr dword ptr [rcx], 0xc0; and eax, 0x2; sub eax, 0x1; ret; 
0x000000004583d9: rcr dword ptr [rdx-0x5117fffc], cl; scasb [rdi]; cli; jmp qword ptr [rsi+0xf]; 
0x000000004567bd: rep movsb [rdi], [rsi]; cld; ret; 
0x000000004567af: rep movsb [rdi], [rsi]; ret; 
0x0000000048b060: rep movsq [rdi], [rsi]; mov rcx, [rdi+0x18]; mov rsi, [rdi+0x20]; mov rdi, [rdi+0x28]; bnd call r11; 
0x0000000041f289: rep ret; 
0x000000004574f7: rep stosb [rdi]; mov rax, rdx; ret; 
0x000000004251e2: rep stosq [rdi]; pop rbp; ret; 
0x000000004013a4: ret far; 
0x00000000410372: ret; 
0x0000000049cc9d: ret; 
0x0000000040101a: ret; 
0x0000000042a32c: rol bh, 0x2; add [rax-0x73], cl; add eax, 0x2c809; cmove rax, rdx; ret; 
0x0000000048c030: rol bl, 0x1; mov eax, 0x1; ret; 
0x000000004208bf: rol bl, 0x1; mov eax, 0xffffffff; ret; 
0x0000000043210e: rol bl, 0x1; xor eax, eax; ret; 
0x00000000455f95: rol bl, 0x48; mov eax, edi; ret; 
0x00000000420ba5: rol bl, 0x66; nop [rax+rax]; endbr64; mov eax, 0xffffffff; ret; 
0x00000000486858: rol bl, 0x66; nop [rax+rax]; endbr64; mov eax, 0xffffffff; ret; 
0x00000000420be5: rol bl, 0x66; nop [rax+rax]; endbr64; mov rax, [rdi+0x68]; ret; 
0x00000000420964: rol bl, 0x66; nop [rax+rax]; mov eax, 0xffffffff; ret; 
0x0000000047fab2: rol bl, 0x66; nop [rax+rax]; nop; mov rax, 0x1; ret; 
0x00000000456981: rol byte ptr [r9+0xf], 0x1; adc [rbx], esp; ret; 
0x0000000044fa16: rol byte ptr [rax+0x48], 0x1; clc; sub rax, rdx; vzeroupper; ret; 
0x00000000431e1b: rol byte ptr [rax+0x48], 0x1; clc; vzeroupper; ret; 
0x0000000045aab3: rol byte ptr [rax+rax*8-0x38b7af8c], 0xc0; sar bh, 0xff; jmp qword ptr [rdi+rax*8]; 
0x0000000041a5ff: rol byte ptr [rax+rax*8-0x7cb7e98c], 0xc4; or [rax-0x1], bh; pop rbx; pop rbp; ret; 
0x0000000047faf2: rol byte ptr [rax+rax], 0x0; add bl, al; nop [rax+rax]; mov rax, 0x5; ret; 
0x00000000465f29: rol byte ptr [rax+rcx*2], 0x39; ret; 
0x0000000046aaf0: rol byte ptr [rax+rcx*2], 0x83; ret; 
0x00000000427b9c: rol byte ptr [rax], 0x0; add [rax-0x7d], cl; call far fword ptr [rdi]; 
0x0000000040100a: rol byte ptr [rax], 0x0; add [rax], al; test rax, rax; je short 0x0000000000401016; call rax; 
0x0000000040f784: rol byte ptr [rax], 0x1; add [rax], al; movaps [rsp+0xe0], xmm0; movaps [rsp+0xf0], xmm0; syscall; 
0x000000004792c8: rol byte ptr [rbp-0x407af040], 0x1; or [rax], eax; add [rbx-0x4d77b], cl; dec dword ptr [rcx-0x4df73]; jmp far fword ptr [rcx]; 
0x00000000496449: rol byte ptr [rbp-0x7b], 0xc0; jne 0x00000000004963a0; add rsp, 0x38; ret; 
0x00000000455dd6: rol byte ptr [rbx+0xfc3ffd8], 0x1f; add [rax], r8b; xor eax, eax; ret; 
0x0000000048d71b: rol byte ptr [rbx-0x177cfd20], 0x1; ret; 
0x0000000047fae2: rol byte ptr [rbx], 0x0; add [rax], al; ret; 
0x000000004767c4: rol byte ptr [rbx], 0x0; lea rsi, [rip+0x503f2]; movzx eax, byte ptr [rdi+rax]; jmp qword ptr [rsi+rax*8]; 
0x0000000047faa2: rol byte ptr [rbx], 0xc3; nop [rax+rax]; xor rax, rax; ret; 
0x00000000426c0b: rol byte ptr [rcx+0x5c], 0x41; pop rbp; ret; 
0x00000000456982: rol byte ptr [rcx+0xf], 0x1; adc [rbx], esp; ret; 
0x0000000045b0a8: rol byte ptr [rcx+0xf], cl; lahf; vpaddsw ymm0, ymm15, [rcx+0xf]; lahf; ret; 
0x0000000047f285: rol byte ptr [rcx+rdi], 0xf2; je short 0x000000000047f28f; test edx, edx; jne short 0x000000000047f280; ret; 
0x0000000047fac2: rol byte ptr [rcx], 0x0; add [rax], al; ret; 
0x000000004607ee: rol byte ptr [rcx], 0x50; call rbx; 
0x00000000463832: rol byte ptr [rcx], 0x89; xor [rax-0x7d], ecx; ret; 
0x0000000047fa92: rol byte ptr [rcx], 0xc3; nop [rax+rax]; add rax, 0x3; ret; 
0x00000000471f03: rol byte ptr [rcx], 0xc7; test [rdi+rdi*8-0x1], esp; jmp qword ptr [rsi]; 
0x0000000047fb22: rol byte ptr [rdi], 0x0; add [rax], al; ret; 
0x0000000047fad2: rol byte ptr [rdx], 0x0; add [rax], al; ret; 
0x0000000047fa89: rol byte ptr [rdx], 0xc3; nop [rax]; add rax, 0x1; ret; 
0x0000000045c530: rol byte ptr [rdx], cl; add [rax], al; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000047fb12: rol byte ptr [rsi], 0x0; add [rax], al; ret; 
0x0000000044ac2d: rol byte ptr [rsi], 0x0; add [rbp-0x77], cl; ret far; 
0x00000000434978: rol byte ptr [rsi], 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000431e9f: rol ch, 0x1; std; xlat [rbx]; ret; 
0x00000000456d46: rol ch, 0x7e; jg short 0x0000000000456d8c; mov al, [0x77f8c5237f7ec1c4]; ret; 
0x00000000456e79: rol ch, 0x7e; jg short 0x0000000000456ebf; mov al, [0x77f8c5237f7ec1c4]; ret; 
0x0000000044fce2: rol ch, 0xf8; ja short 0x000000000044fcaa; nop [rax+rax]; xor eax, eax; ret; 
0x0000000047ee66: rol ch, cl; std; xlat [rbx]; ret; 
0x0000000047fa6c: rol dword ptr [rax+0x1e740fe1], 0x1; ret; 
0x00000000431524: rol dword ptr [rax+0x49], 0x29; ret far; 
0x00000000479bf3: rol dword ptr [rax+rax], 0x1; mov dword ptr [rbp-0x530], 0x1; mov dword ptr [rbp-0x4e8], 0x0; mov rax, [rsi+rax*8]; jmp rax; 
0x00000000479958: rol dword ptr [rax+rax], cl; mov r11, rcx; mov dword ptr [rbp-0x4d0], 0x1; mov rax, [rax+rsi*8]; jmp rax; 
0x00000000465238: rol dword ptr [rax+rcx*2], 0x39; ret far; 
0x00000000431dd0: rol dword ptr [rbp+0x311b75c0], 0xc0; vzeroupper; ret; 
0x00000000431944: rol dword ptr [rbp+0x315775c0], 0xc0; ret; 
0x00000000431914: rol dword ptr [rbp-0x5c7af040], 0x0; add [rax], al; xor eax, eax; ret; 
0x0000000044fc17: rol dword ptr [rbp-0x5f7af040], 0x0; add [rax], al; mov rax, r8; vzeroupper; ret; 
0x00000000431d93: rol dword ptr [rbp-0x6b7af040], 0x0; add [rax], al; xor eax, eax; vzeroupper; ret; 
0x00000000490302: rol dword ptr [rbx], 0x0; add word ptr [rdx+rax*2], 0x1; ret; 
0x000000004902f9: rol dword ptr [rbx], 0x0; jae short 0x000000000049030a; mov rdx, [rip+0x3c193]; add word ptr [rdx+rax*2], 0x1; ret; 
0x0000000046671b: rol dword ptr [rbx], 0x1; add al, ch; insd [rdi], dx; ret far; 
0x000000004757c2: rol dword ptr [rcx+0x5c], 0x41; pop rbp; mov rax, r9; pop r14; ret; 
0x0000000048752a: rol dword ptr [rdx], 0x1; add [rdx+0x63], cl; add al, 0xa7; add rax, rdi; notrack jmp rax; 
0x00000000434828: rol dword ptr [rsi], 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000479957: rol dword ptr gs:[rax+rax], cl; mov r11, rcx; mov dword ptr [rbp-0x4d0], 0x1; mov rax, [rax+rsi*8]; jmp rax; 
0x00000000436c6f: ror byte ptr [r8-0x7d], 0xef; lea r11, [rip+0x69f44]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043428f: ror byte ptr [r8-0x7d], 0xef; lea r11, [rip+0x6c764]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000041b01c: ror byte ptr [r9+rcx*4-0xf], 0x4c; mov edi, edi; call r12; 
0x00000000406f8b: ror byte ptr [rax+0x1], 0x1; ret; 
0x0000000044f396: ror byte ptr [rax+0x1], 0xc8; add rax, rdi; vzeroupper; ret; 
0x00000000431a4c: ror byte ptr [rax+0x1], 0xf8; add rax, rcx; ret; 
0x0000000044f928: ror byte ptr [rax+0x1], 0xf8; add rax, rcx; sub rax, rdx; vzeroupper; ret; 
0x00000000431f18: ror byte ptr [rax+0x1], 0xf8; add rax, rcx; vzeroupper; ret; 
0x00000000431962: ror byte ptr [rax+0x1], 0xf8; ret; 
0x00000000459593: ror byte ptr [rax+0x1], 0xf8; sub rax, rdx; shr rax, 0x2; vzeroupper; ret; 
0x0000000044f9e3: ror byte ptr [rax+0x1], 0xf8; sub rax, rdx; vzeroupper; ret; 
0x00000000431e63: ror byte ptr [rax+0x1], 0xf8; vzeroupper; ret; 
0x0000000044f6a4: ror byte ptr [rax+0x1], cl; ror byte ptr [rax+0x29], 0x1; clc; ret; 
0x00000000459249: ror byte ptr [rax+0x1], cl; ror byte ptr [rax+0x29], 0x1; clc; shr rax, 0x2; ret; 
0x0000000044f6a7: ror byte ptr [rax+0x29], 0x1; clc; ret; 
0x0000000045924c: ror byte ptr [rax+0x29], 0x1; clc; shr rax, 0x2; ret; 
0x0000000041f257: ror byte ptr [rax+0x29], 0x1; ror dword ptr [rax+0x39], 0x1; enter 0x2876, 0x48; mov edi, ebx; call qword ptr [rbp+0x20]; 
0x0000000047de1c: ror byte ptr [rax+0x29], 0x1; ror dword ptr [rax+0x39], 0x1; enter 0x2b76, 0x48; mov edi, ebx; call qword ptr [rbp+0x30]; 
0x0000000041fce7: ror byte ptr [rax+0x29], 0x1; ror dword ptr [rax+0x39], 0x1; enter 0x3076, 0x48; mov edi, ebx; call qword ptr [rbp+0x30]; 
0x0000000041df48: ror byte ptr [rax+0x29], 0x1; ror dword ptr [rax+0x39], 0x1; enter 0x3776, 0x48; mov edi, ebp; call qword ptr [rbx+0x88]; 
0x0000000041f1a1: ror byte ptr [rax+0x29], 0x1; ror dword ptr [rax+0x39], 0x1; enter 0x6676, 0x48; mov edi, ebx; call qword ptr [rbp+0x68]; 
0x0000000043172b: ror byte ptr [rax+0x29], 0xc2; jbe 0x00000000004319d0; add rax, rdi; add rax, rcx; ret; 
0x0000000047f30b: ror byte ptr [rax+0x29], 0xc2; jbe 0x000000000047f5b0; add rax, rdi; add rax, rcx; ret; 
0x00000000431992: ror byte ptr [rax+0x29], 0xc2; jbe short 0x00000000004319d0; add rax, rdi; ret; 
0x000000004319a2: ror byte ptr [rax+0x29], 0xc2; jbe short 0x00000000004319d0; lea rax, [rdi+rax+0x10]; ret; 
0x000000004319b2: ror byte ptr [rax+0x29], 0xc2; jbe short 0x00000000004319d0; lea rax, [rdi+rax+0x20]; ret; 
0x000000004319c2: ror byte ptr [rax+0x29], 0xc2; jbe short 0x00000000004319d0; lea rax, [rdi+rax+0x30]; ret; 
0x0000000047f572: ror byte ptr [rax+0x29], 0xc2; jbe short 0x000000000047f5b0; add rax, rdi; ret; 
0x0000000047f582: ror byte ptr [rax+0x29], 0xc2; jbe short 0x000000000047f5b0; lea rax, [rdi+rax+0x10]; ret; 
0x0000000047f592: ror byte ptr [rax+0x29], 0xc2; jbe short 0x000000000047f5b0; lea rax, [rdi+rax+0x20]; ret; 
0x0000000047f5a2: ror byte ptr [rax+0x29], 0xc2; jbe short 0x000000000047f5b0; lea rax, [rdi+rax+0x30]; ret; 
0x00000000425b1e: ror byte ptr [rax+0x39], 0x1; ret; 
0x00000000431de3: ror byte ptr [rax+0x39], 0xc2; jbe short 0x0000000000431e50; add rax, rdi; vzeroupper; ret; 
0x0000000047f7b3: ror byte ptr [rax+0x39], 0xc2; jbe short 0x000000000047f820; add rax, rdi; vzeroupper; ret; 
0x00000000421680: ror byte ptr [rax+0x39], 0xfa; setae al; ret; 
0x0000000040eea8: ror byte ptr [rax+0x63], cl; adc al, 0x96; add rdx, rsi; notrack jmp rdx; 
0x00000000498bf6: ror byte ptr [rax+0xf], 0x45; and al, 0x10; add rsp, 0x28; ret; 
0x000000004592d6: ror byte ptr [rax+0xf], cl; ret; 
0x00000000456328: ror byte ptr [rax-0x1], 0xc0; add rsp, 0x100; sub rax, rdx; ret; 
0x00000000456325: ror byte ptr [rax-0x1], 0xc0; inc rax; add rsp, 0x100; sub rax, rdx; ret; 
0x00000000432106: ror byte ptr [rax-0x2d], 0xfa; movzx edx, dl; sub eax, edx; ret; 
0x0000000044f5e6: ror byte ptr [rax-0x2d], 0xfa; test rdx, rdx; je short 0x000000000044f600; bsf rax, rdx; ret; 
0x0000000044f589: ror byte ptr [rax-0x2d], 0xfa; test rdx, rdx; je short 0x000000000044f610; bsf rax, rdx; ret; 
0x00000000462483: ror byte ptr [rax-0x39], 0xc0; sar bh, 0xff; jmp qword ptr [rbx+rcx*4+0x18]; 
0x000000004140d5: ror byte ptr [rax-0x39], 0xc0; sar bh, 0xff; jmp qword ptr [rbx+rcx*4]; 
0x00000000459708: ror byte ptr [rax-0x39], 0xc0; sar bh, 0xff; jmp qword ptr [rsp+rax*2-0x75]; 
0x0000000042a411: ror byte ptr [rax-0x73], 0x1; adc eax, 0x24f07; lea rax, [rip+0x24ac0]; cmove rax, rdx; ret; 
0x00000000429661: ror byte ptr [rax-0x73], 0x1; adc eax, 0x26267; lea rax, [rip+0x25ea0]; cmove rax, rdx; ret; 
0x000000004296a1: ror byte ptr [rax-0x73], 0x1; adc eax, 0x263c7; lea rax, [rip+0x26000]; cmove rax, rdx; ret; 
0x0000000047f011: ror byte ptr [rax-0x73], 0x1; adc eax, 0x5a7; lea rax, [rip+0x270]; cmove rax, rdx; ret; 
0x0000000042a3d1: ror byte ptr [rax-0x73], 0x1; adc eax, 0x7ae7; lea rax, [rip+0x7600]; cmove rax, rdx; ret; 
0x00000000429f41: ror byte ptr [rax-0x73], 0x1; adc eax, 0x7ca7; lea rax, [rip+0x7760]; cmove rax, rdx; ret; 
0x0000000047efd1: ror byte ptr [rax-0x73], 0x1; adc eax, 0xb57; lea rax, [rip+0x8b0]; cmove rax, rdx; ret; 
0x0000000047e241: ror byte ptr [rax-0x73], 0x1; adc eax, 0xb97; lea rax, [rip+0x890]; cmove rax, rdx; ret; 
0x00000000412d0a: ror byte ptr [rax-0x73], 0x34; ret; 
0x00000000487e10: ror byte ptr [rax-0x73], 0x35; add bh, 0x2; add al, ch; ret; 
0x00000000428a8e: ror byte ptr [rax-0x73], 0x35; sbb [rbp+0x7], ebp; add al, ch; push rbp; ret far; 
0x00000000424502: ror byte ptr [rax-0x73], 0x3c; ret; 
0x00000000492ced: ror byte ptr [rax-0x73], 0x3d; mov ebx, 0xe900026d; xchg [rsi-0x1], ah; jmp qword ptr [rsi+0xf]; 
0x00000000431982: ror byte ptr [rax-0x73], 0x44; cmp [rax], ah; ret; 
0x00000000431972: ror byte ptr [rax-0x73], 0x44; cmp [rax], dl; ret; 
0x00000000431952: ror byte ptr [rax-0x73], 0x44; cmp al, dh; ret; 
0x000000004230a0: ror byte ptr [rax-0x75], 0x46; or [rax-0x77], cl; ret; 
0x00000000458fa1: ror byte ptr [rax-0x75], 0x4c; and al, 0x20; mov rdi, rbp; mov rsi, [rsp+0x18]; call rbx; 
0x0000000040683e: ror byte ptr [rax-0x77], 0x1; fisttp word ptr [rdi], st; mov dh, 0x43; add [rax-0x7d], ecx; ret; 
0x0000000041a119: ror byte ptr [rax-0x77], 0x1; ret; 
0x0000000047cfb9: ror byte ptr [rax-0x77], 0x48; adc [rax-0x77], cl; push rax; movups [rax], xmm0; ret; 
0x0000000041ebe2: ror byte ptr [rax-0x77], 0x57; sbb [rax-0x77], cl; movups [rdi+0x8], xmm0; ret; 
0x000000004805cf: ror byte ptr [rax-0x77], 0xe2; mov eax, 0x10; syscall; 
0x0000000041ca59: ror byte ptr [rax-0x77], cl; out dx, al; mov rdi, rbx; call qword ptr [r12+0x80]; 
0x0000000041c043: ror byte ptr [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x80]; 
0x0000000041c345: ror byte ptr [rax-0x77], cl; out dx, eax; call qword ptr [rbx+0x80]; 
0x0000000041d505: ror byte ptr [rax-0x7b], 0xd2; jne short 0x000000000041d510; ret; 
0x0000000048971e: ror byte ptr [rax-0x7b], 0xf6; je short 0x0000000000489727; mov [rsi], rdi; mov rax, r8; ret; 
0x00000000487176: ror byte ptr [rax-0x7d], 0x1; ret; 
0x00000000465f26: ror byte ptr [rax-0x7d], 0x1; rol byte ptr [rax+rcx*2], 0x39; ret; 
0x0000000044fa13: ror byte ptr [rax-0x7d], 0xc0; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x00000000431e83: ror byte ptr [rax-0x7d], 0xc0; add rax, rdi; vzeroupper; ret; 
0x00000000431e73: ror byte ptr [rax-0x7d], 0xc0; and [rax+0x1], cl; clc; vzeroupper; ret; 
0x00000000457c2e: ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x5d], bl; pop r12; pop r13; ret; 
0x0000000041ec69: ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x5d], bl; ret; 
0x00000000493eeb: ror byte ptr [rax-0x7d], 0xc4; or [rdi], cl; mov dh, 0xc0; neg eax; ret; 
0x00000000480597: ror byte ptr [rax-0x7d], 0xc4; pop rax; ret; 
0x0000000049a1a9: ror byte ptr [rax-0x7d], 0xc4; sbb [rbx+0x5d], bl; pop r12; pop r13; ret; 
0x0000000041e265: ror byte ptr [rax-0x7d], 0xc4; sbb [rbx+0x5d], bl; ret; 
0x00000000499a0f: ror byte ptr [rax-0x7d], 0xc4; sbb [rcx+rcx*4-0x40], al; pop rbx; pop rbp; ret; 
0x0000000043939f: ror byte ptr [rax-0x7d], 0xea; lea r11, [rip+0x67815]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000436c70: ror byte ptr [rax-0x7d], 0xef; lea r11, [rip+0x69f44]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434290: ror byte ptr [rax-0x7d], 0xef; lea r11, [rip+0x6c764]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000045632b: ror byte ptr [rax-0x7f], 0xc4; add [rcx], al; add [rax], al; sub rax, rdx; ret; 
0x0000000040f7f0: ror byte ptr [rax-0x7f], 0xc4; sbb [rcx], al; add [rax], al; ret; 
0x00000000489793: ror byte ptr [rax-0x9], 0xd8; test cl, cl; cmove r8, rax; mov rax, r8; ret; 
0x000000004535a3: ror byte ptr [rbp+rcx*4+0x1d], cl; adc eax, 0x490004e4; movsxd ecx, [rbx+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000453bd3: ror byte ptr [rbp+rcx*4+0x1d], cl; fiadd st, word ptr gs:[rax+rax]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000459e93: ror byte ptr [rbx+0x3108247c], 0xc0; syscall; 
0x0000000045aa48: ror byte ptr [rcx+0x12eb8fe], cl; add [rax], al; xor edi, edi; syscall; 
0x00000000469278: ror byte ptr [rcx+0x3948fc51], cl; ret; 
0x00000000497bb6: ror byte ptr [rcx+0x63], 0x44; test [rax], eax; add rax, r13; notrack jmp rax; 
0x0000000041d8d6: ror byte ptr [rcx+0x63], 0x4; or dword ptr [rcx+rax-0x28], 0x3e; jmp rax; 
0x000000004753e4: ror byte ptr [rcx+rcx*4+0x2b], 0x5b; pop rbp; pop r12; pop r13; ret; 
0x00000000464fc6: ror byte ptr [rcx+rcx*4+0x5c], 0x24; sub [rcx-0x77], cl; ret; 
0x0000000041adcd: ror byte ptr [rcx+rcx*4-0x11], 0x4c; lea ecx, [rsp+0x18]; call rbp; 
0x00000000458398: ror byte ptr [rcx+rcx*4-0x19], 0x4c; lea ecx, [rsp+0x30]; call rbx; 
0x00000000419a59: ror byte ptr [rcx+rcx*4-0x1], cl; call qword ptr [r14+0x80]; 
0x0000000041a025: ror byte ptr [rcx+rcx*4-0x1], cl; call qword ptr [rbx+0x80]; 
0x0000000040f7cb: ror byte ptr [rcx+rcx*4-0x32], cl; mov edi, 0x2; mov eax, 0xe; syscall; 
0x0000000041054a: ror byte ptr [rcx+rcx*4-0x40], 0x5b; pop rbp; ret; 
0x00000000412223: ror byte ptr [rcx+rcx*4-0xa], cl; mov rdi, r15; mov [rbp-0x94c], r9d; mov [rbp-0x940], r11d; call rax; 
0x0000000041b01d: ror byte ptr [rcx+rcx*4-0xf], 0x4c; mov edi, edi; call r12; 
0x00000000473578: ror byte ptr [rcx-0x3f], 0xe3; and [rcx+0x9], cl; ret; 
0x0000000048fba9: ror byte ptr [rcx-0x49f0fbad], 0xc0; pop rbx; pop rbp; pop r12; ret; 
0x0000000041520a: ror byte ptr [rcx-0x4ef73], 0x1; jmp far fword ptr [rcx]; 
0x000000004159fa: ror byte ptr [rcx-0x4ef73], cl; jmp far fword ptr [rcx]; 
0x0000000045b80e: ror byte ptr [rcx-0x77], 0x1; or [r9-0x75], cl; add [rbx+0x94901e0], eax; ret; 
0x00000000462d28: ror byte ptr [rcx-0x77], cl; ret far; 
0x000000004190b6: ror byte ptr [rcx-0xc916ed], 0xff; jmp qword ptr [rsi-0x70]; 
0x0000000040f1ab: ror byte ptr [rdi+0x63], cl; adc al, 0x93; add r10, r11; notrack jmp r10; 
0x0000000046dd22: ror byte ptr [rdi], 0x0; add [rax], al; syscall; 
0x0000000044a32d: ror byte ptr [rdi], 0x0; add [rbp-0x77], cl; ret far; 
0x000000004209d7: ror byte ptr [rdi], 0x11; pop rbx; ret; 
0x000000004568c9: ror byte ptr [rdi], 0x1; adc [rdi+rdx-0x40], edi; ret; 
0x0000000040f6e7: ror byte ptr [rdi], 0x1; mov dh, 0x11; test dl, dl; jne short 0x000000000040f6c8; ret; 
0x000000004344b6: ror byte ptr [rdi], 0x29; pop rdi; adc [rdx+0x9], dh; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000045a9e5: ror byte ptr [rdi], 0x5; cmp rax, 0xfffffffffffff000; ja short 0x000000000045a9f8; ret; 
0x00000000418a11: ror byte ptr [rdi], 0x84; mov dword ptr [rax], 0x89480000; ret; 
0x00000000402611: ror byte ptr [rdi], 0x84; nop; add al, [rax]; add [rax-0x39], cl; ret; 
0x00000000426a0e: ror byte ptr [rdi], 0x84; ret far; 
0x0000000041607f: ror byte ptr [rdi], 0x84; ret; 
0x0000000045bf47: ror byte ptr [rdi], 0x85; adc eax, 0x49000007; mov edi, [rdi]; call rbx; 
0x0000000045bdb5: ror byte ptr [rdi], 0x85; jg short 0x000000000045bdbd; add [rax], al; mov rdi, [r15]; call rbx; 
0x0000000045be0c: ror byte ptr [rdi], 0x85; loop 0x000000000045be18; add [rax], al; mov rdi, [r15]; call rbx; 
0x0000000045bf1a: ror byte ptr [rdi], 0x85; mov [rdx], al; add [rax], al; mov rdi, [r15]; call rbx; 
0x00000000415201: ror byte ptr [rdi], 0x85; mov [rip-0x76bc0000], al; ror byte ptr [rcx-0x4ef73], 0x1; jmp far fword ptr [rcx]; 
0x0000000045bfce: ror byte ptr [rdi], 0x85; mov al, 0x2; add [rax], al; mov rdi, [r15]; call rbx; 
0x000000004233cc: ror byte ptr [rdi], 0x85; ret far; 
0x00000000463c9c: ror byte ptr [rdi], 0x85; ret; 
0x0000000045a2fe: ror byte ptr [rdi], 0x88; ret far; 
0x0000000046ba78: ror byte ptr [rdi], 0x94; ret; 
0x000000004607e9: ror byte ptr [rdi], cl; mov dh, 0xc0; add eax, 0x1; push rax; call rbx; 
0x0000000045912f: ror byte ptr [rdi], cl; test [rdx+0x48000000], bl; bsf eax, edx; shr rax, 0x2; ret; 
0x0000000044f74b: ror byte ptr [rdi], cl; test [rsi+0x48000000], bl; bsf eax, edx; ret; 
0x0000000042a41c: ror byte ptr [rdx+0x2], 0x0; cmove rax, rdx; ret; 
0x0000000048091e: ror cl, 0xb8; add [rax], eax; add [rax], al; ret; 
0x0000000047ebca: ror dword ptr [rax+0x21], 0xce; je 0x000000000047ed00; bsr rsi, rsi; lea rax, [rdi+rsi]; ret; 
0x0000000041f25a: ror dword ptr [rax+0x39], 0x1; enter 0x2876, 0x48; mov edi, ebx; call qword ptr [rbp+0x20]; 
0x0000000047de1f: ror dword ptr [rax+0x39], 0x1; enter 0x2b76, 0x48; mov edi, ebx; call qword ptr [rbp+0x30]; 
0x0000000041fcea: ror dword ptr [rax+0x39], 0x1; enter 0x3076, 0x48; mov edi, ebx; call qword ptr [rbp+0x30]; 
0x0000000041df4b: ror dword ptr [rax+0x39], 0x1; enter 0x3776, 0x48; mov edi, ebp; call qword ptr [rbx+0x88]; 
0x00000000411539: ror dword ptr [rax+0x39], 0x1; enter 0x6176, 0x4d; movsxd esp, esp; mov rdx, r12; call qword ptr [r13+0x38]; 
0x0000000041d3d4: ror dword ptr [rax+0x39], 0x1; enter 0x6676, 0x31; idiv byte ptr [rdx+0x2]; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x0000000041f1a4: ror dword ptr [rax+0x39], 0x1; enter 0x6676, 0x48; mov edi, ebx; call qword ptr [rbp+0x68]; 
0x000000004759d8: ror dword ptr [rax+0x39], 0x1; enter 0x7a76, 0x48; movsxd ebx, ebx; mov rdx, rbx; call qword ptr [r13+0x38]; 
0x0000000048962c: ror dword ptr [rax+0x39], 0xd1; jne short 0x0000000000489608; mov eax, [rcx]; ret; 
0x0000000045f1ce: ror dword ptr [rax+0x63], 0x1; test [rax], r8d; add rax, rbp; notrack jmp rax; 
0x000000004249b4: ror dword ptr [rax-0x3f], 0xe9; or [rbx+0x3d485bc1], eax; jmp far fword ptr [rcx]; 
0x000000004249c6: ror dword ptr [rax-0x3f], 0xe9; or al, 0x83; shr dword ptr [rsi+0x48], 0x3d; jmp far fword ptr [rdi+0x32760000]; 
0x0000000045a3f7: ror dword ptr [rax-0x73], 0x40; inc esi; jmp far fword ptr [r15]; 
0x0000000041eb85: ror dword ptr [rax-0x7b], 0xd2; jne short 0x000000000041eb78; ret; 
0x0000000047cf3d: ror dword ptr [rax-0x7b], 0xd2; jne short 0x000000000047cf30; ret; 
0x00000000465235: ror dword ptr [rax-0x7d], 0x1; rol dword ptr [rax+rcx*2], 0x39; ret far; 
0x0000000045c3af: ror dword ptr [rax], 0x1; add [rax], al; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x00000000457a15: ror dword ptr [rcx+0xe181d0], 0xfc; add eax, [rax]; cmp edx, 0xff; cmove rax, rcx; ret; 
0x00000000418e99: ror dword ptr [rcx+rcx*4-0x12], cl; mov rdi, r15; call qword ptr [rbp+0x38]; 
0x0000000046fd1e: ror dword ptr [rcx+rcx*4-0x40], 0x1; ret; 
0x000000004145f3: ror dword ptr [rcx], 0x0; add [rax-0x80], al; jmp qword ptr [rdi+rcx]; 
0x00000000430264: ror dword ptr [rdi-0x73], 0x14; or bh, [rsi]; jmp r10; 
0x0000000041f1e4: ror dword ptr [rdi], 0x11; cmp [r11+0x5d], bl; pop r12; ret; 
0x00000000424bda: ror dword ptr [rdi], 0x11; push 0x6e0f4966; ret; 
0x00000000462c8d: ror dword ptr [rdi], 0x11; ret; 
0x0000000047d619: ror dword ptr [rdi], 0x11; xor [rcx+0x5d5b7453], cl; pop r12; ret; 
0x0000000045af6a: ror dword ptr [rdi], 0x84; lar eax, [rax]; add [rcx-0x7d], cl; ret far; 
0x000000004333e8: ror dword ptr [rdi], 0x85; adc [rdx], cl; add [rax], al; xor eax, eax; ret; 
0x00000000433af4: ror dword ptr [rdi], 0x85; add al, 0x3; add [rax], al; xor eax, eax; ret; 
0x000000004338c6: ror dword ptr [rdi], 0x85; add eax, 0xc0310000; ret; 
0x00000000433846: ror dword ptr [rdi], 0x85; cmpsb [rsi], [rdi]; add eax, 0xc0310000; ret; 
0x00000000433b84: ror dword ptr [rdi], 0x85; je short 0x0000000000433b8b; add [rax], al; xor eax, eax; ret; 
0x0000000043367b: ror dword ptr [rdi], 0x85; jno short 0x0000000000433687; add [rax], al; xor eax, eax; ret; 
0x00000000433743: ror dword ptr [rdi], 0x85; mov ch, 0x6; add [rax], al; xor eax, eax; ret; 
0x000000004333c0: ror dword ptr [rdi], 0x85; sub al, 0xa; add [rax], al; xor eax, eax; ret; 
0x000000004698d8: ror dword ptr [rdi], cl; test [rcx+rax], bh; add [rcx-0x73], cl; add cl, [rax+0x39]; ret far; 
0x0000000041c544: ror dword ptr [rdi], cl; xchg [rip+0x48000002], ah; lea esi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax+0x90]; 
0x000000004966ed: ror dword ptr [rdi], cl; xchg esp, eax; ret; 
0x0000000041026d: ror eax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000041024f: ror edx, 0x11; xor rdx, fs:[0x30]; call rdx; 
0x0000000041eb84: ror qword ptr [r8-0x7b], 0xd2; jne short 0x000000000041eb78; ret; 
0x0000000047cf3c: ror qword ptr [r8-0x7b], 0xd2; jne short 0x000000000047cf30; ret; 
0x0000000041026c: ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000041024e: ror rdx, 0x11; xor rdx, fs:[0x30]; call rdx; 
0x00000000402efa: sahf; add [rax], al; add [rax-0x77], cl; mov [rsi+0x10], rsi; syscall; 
0x000000004597be: sahf; add al, 0x0; add [rax-0x39], cl; ret; 
0x00000000492cdd: sahf; add eax, [rax]; jne short 0x0000000000492ce8; ret; 
0x00000000405a15: sahf; idiv bh; inc dword ptr [rax-0x80]; jmp qword ptr [rdi+rcx-0x7c]; 
0x000000004769e2: sahf; idiv bh; jmp qword ptr [rsi+0x2e]; 
0x00000000428f86: sahf; nop [rax+rax]; mov rsi, r12; call rax; 
0x000000004255be: sahf; or r8b, [r8]; syscall; 
0x00000000498ddd: sar ah, 0xff; jmp qword ptr [rsi+0xf]; 
0x000000004904bd: sar ah, cl; push rbx; nop edx, edi; mov eax, [rip+0x3c71e]; ret; 
0x0000000048acd7: sar bh, 0xff; call far fword ptr [rbx+0x64]; 
0x00000000480261: sar bh, 0xff; call qword ptr [rbx+0x64]; 
0x000000004042b0: sar bh, 0xff; dec dword ptr [rax-0x39]; ret; 
0x000000004605e1: sar bh, 0xff; dec dword ptr [rbp+rcx*4+0x7b]; jmp qword ptr [rbp+rax*2-0x75]; 
0x000000004627ec: sar bh, 0xff; dec dword ptr [rbx-0x8b63]; jmp qword ptr [rcx+rcx*4+0x18]; 
0x0000000040486f: sar bh, 0xff; dec dword ptr [rbx-0xd34b]; jmp qword ptr [rcx+rcx*4+0x30]; 
0x00000000404607: sar bh, 0xff; dec dword ptr [rbx-0xd363]; jmp qword ptr [rcx+rcx*4+0x18]; 
0x00000000404791: sar bh, 0xff; dec dword ptr [rbx-0xd373]; jmp qword ptr [rcx+rcx*4+0x8]; 
0x0000000047fec4: sar bh, 0xff; dec dword ptr [rcx-0x74bb9b11]; sub ebp, eax; test al, 0xfd; jmp qword ptr [rsp+rax*2-0x77]; 
0x0000000045a28b: sar bh, 0xff; inc dword ptr [rbp+0x31]; jmp qword ptr [rdi+rax*8]; 
0x00000000402c63: sar bh, 0xff; jmp qword ptr [rbx+rax*4+0x38]; 
0x00000000418908: sar bh, 0xff; jmp qword ptr [rbx+rax*4+0x39]; 
0x00000000462487: sar bh, 0xff; jmp qword ptr [rbx+rcx*4+0x18]; 
0x00000000494843: sar bh, 0xff; jmp qword ptr [rbx+rcx*4+0x30]; 
0x000000004140d9: sar bh, 0xff; jmp qword ptr [rbx+rcx*4]; 
0x000000004624a0: sar bh, 0xff; jmp qword ptr [rcx+rcx*4+0x18]; 
0x0000000049485b: sar bh, 0xff; jmp qword ptr [rcx+rcx*4+0x1]; 
0x000000004109d3: sar bh, 0xff; jmp qword ptr [rdi+rax*8]; 
0x0000000045970c: sar bh, 0xff; jmp qword ptr [rsp+rax*2-0x75]; 
0x00000000459657: sar bh, 0xff; push rdi; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x00000000459c8b: sar bh, 0xff; push rdi; fsub st, dword ptr [rcx+rcx*4+0x2]; mov eax, 0xffffffff; ret; 
0x00000000459ec3: sar bh, 0xff; push rdi; fsub st, dword ptr [rcx+rcx*4+0x2]; mov rax, 0xffffffffffffffff; ret; 
0x0000000048f6b5: sar bh, 0xff; ret; 
0x0000000048f692: sar bh, 0xff; sub eax, ecx; mov [rdx], eax; mov eax, 0x1; ret; 
0x0000000048f7bf: sar bh, 0xff; sub eax, r8d; mov [rdx], eax; mov eax, 0x2; ret; 
0x00000000490242: sar byte ptr [r8+0xd9], 0x1; syscall; 
0x00000000421b0b: sar byte ptr [rax+0x10], 0x48; cmovne eax, edx; mov [rip+0xaa55c], rax; ret; 
0x000000004392ea: sar byte ptr [rax+0x6], cl; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000490243: sar byte ptr [rax+0xd9], 0x1; syscall; 
0x00000000403caa: sar byte ptr [rbp+0xc], cl; add [rbx+rcx*4+0x3d], cl; ret; 
0x00000000489040: sar byte ptr [rbp+rbp*8-0x15], cl; ret; 
0x00000000459de7: sar byte ptr [rdi-0x64], 0xb8; add [rcx], eax; add [rax], al; syscall; 
0x0000000049cf17: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x2f3b2]; syscall; 
0x00000000475587: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x56d52]; syscall; 
0x00000000475303: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x56fd2]; syscall; 
0x0000000047327f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x5904e]; syscall; 
0x0000000047313f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x5918e]; syscall; 
0x0000000046f677: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x5cc52]; syscall; 
0x0000000046f5b2: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x5cd17]; syscall; 
0x0000000046f410: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x5ceb9]; syscall; 
0x0000000046f336: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x5cf93]; syscall; 
0x00000000461b67: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x6b0f2]; syscall; 
0x000000004619fb: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x6b25e]; syscall; 
0x000000004618db: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x6b37e]; syscall; 
0x00000000458be3: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x74076]; syscall; 
0x00000000428e03: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa0d46]; syscall; 
0x00000000426203: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa3946]; syscall; 
0x000000004261a3: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa39a6]; syscall; 
0x00000000425de3: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa3d66]; syscall; 
0x00000000425b83: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa3fc6]; syscall; 
0x000000004255ab: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa459e]; syscall; 
0x00000000425573: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa45d6]; syscall; 
0x00000000427163: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa4ef6]; syscall; 
0x00000000426717: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa5932]; syscall; 
0x00000000422874: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa97d5]; syscall; 
0x00000000422843: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa9816]; syscall; 
0x000000004225c3: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa9a96]; syscall; 
0x0000000042209f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xa9fba]; syscall; 
0x00000000420cb5: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xab324]; syscall; 
0x000000004206f5: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xab8e4]; syscall; 
0x00000000420389: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xabc50]; syscall; 
0x00000000420047: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xabf92]; syscall; 
0x0000000041eae1: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xad4f8]; syscall; 
0x0000000041e841: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xad798]; syscall; 
0x0000000041e4ed: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xadaec]; syscall; 
0x00000000418663: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb45f6]; syscall; 
0x00000000410772: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbc387]; syscall; 
0x00000000410632: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbc4c7]; syscall; 
0x000000004103fb: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbc6fe]; syscall; 
0x000000004103c0: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbc739]; syscall; 
0x000000004102dc: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbc81d]; syscall; 
0x00000000406d10: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc4e51]; syscall; 
0x0000000040536d: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc67bc]; syscall; 
0x000000004041ee: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc7893]; syscall; 
0x000000004041c0: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc78c1]; syscall; 
0x00000000404074: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc7a0d]; syscall; 
0x000000004012cc: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xca8ad]; syscall; 
0x0000000040143b: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; syscall; 
0x000000004266ec: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, ebx; syscall; 
0x0000000042658c: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov rdi, r12; mov eax, 0xca; syscall; 
0x00000000427b1f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov rdi, r13; mov eax, 0xca; syscall; 
0x00000000428760: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov rdi, r15; mov eax, 0xca; syscall; 
0x00000000423421: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov rdi, rbp; mov eax, 0xca; syscall; 
0x000000004274e5: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov rdi, rbx; mov eax, 0xca; syscall; 
0x000000004216a9: sar byte ptr [rdx+0x2], cl; mov esi, 0x80; mov eax, 0xca; syscall; 
0x0000000044ecf9: sar byte ptr [rdx], 0x48; lea eax, [rdi+rax]; cmp [rax], sil; cmovne rax, rdx; ret; 
0x0000000049016a: sar byte ptr [rdx], cl; cmp edx, ecx; jle 0x0000000000490210; ret; 
0x0000000045b9a1: sar byte ptr [rsi+0x1], cl; call r12; 
0x0000000046cebf: sar byte ptr [rsi], 0x1; jmp r8; 
0x00000000401bf7: sar byte ptr [rsi], 0x1; jmp rax; 
0x000000004343ba: sar byte ptr [rsi], 0x41; jmp rcx; 
0x0000000043f0fb: sar ch, 0xff; jmp qword ptr [rdx-0xf]; 
0x000000004041d3: sar dword ptr [rax+0xc], 0x0; syscall; 
0x0000000043eab9: sar dword ptr [rax+rcx*2+0x11], 0x1; imul edi, ebp, 0x487cd162; adc [rcx-0x2], esi; vmovups [r9-0x40], zmm7; ret; 
0x0000000043ef51: sar dword ptr [rax+rcx*2+0x11], 0x1; jmp qword ptr [r10-0x2f]; 
0x0000000043eac0: sar dword ptr [rax+rcx*2+0x11], 0x1; jno short 0x000000000043eac4; vmovups [r9-0x40], zmm7; ret; 
0x0000000043eac7: sar dword ptr [rax+rcx*2+0x11], 0x1; jns short 0x000000000043eacc; ret; 
0x00000000457a72: sar dword ptr [rax], 0x1; and ch, 0xf0; pop rbx; cmovne rax, rdx; ret; 
0x00000000457410: sar dword ptr [rbp+0x48], 0x1; out 0x49, eax; jmp qword ptr [rdx-0x2f]; 
0x00000000456d4d: sar dword ptr [rsi+0x7f], 0x23; vzeroupper; ret; 
0x000000004030fc: sar eax, 0x3; je short 0x0000000000403116; lea rbx, [rax-0x1]; nop [rax]; call qword ptr [rbp+rbx*8]; 
0x0000000049412c: sar eax, 0x3; pop rbx; pop rbp; pop r12; ret; 
0x00000000498b9c: sar eax, 0x3f; and eax, 0x1; mov [rsi], eax; mov rax, [rdi+0x98]; ret; 
0x0000000045728d: sar ebp, 0x1; jg short 0x00000000004572db; jmp qword ptr [rdx-0x2f]; 
0x0000000048059f: sar ebp, 0x1; jmp qword ptr [rsi+0x2e]; 
0x0000000047875e: sar ebp, 0x2; mov rdx, r13; call qword ptr [rax+0x38]; 
0x0000000048042c: sar ebp, cl; call qword ptr [rax-0x5e1f00d]; 
0x00000000478c5b: sar ebx, 0x2; mov rdx, rbx; call qword ptr [rax+0x38]; 
0x0000000047df0c: sar ecx, 0x2; lea eax, [rcx-0x1]; ret; 
0x00000000403f3d: sar edi, 0x1; dec dword ptr [rcx+rcx*4+0x3d]; xor [rbx+0xc], edi; add cl, ch; ret far; 
0x00000000401bed: sar edi, cl; or [rax], eax; movsxd rax, [rdx+rcx*4]; add rax, rdx; notrack jmp rax; 
0x00000000476924: sar edx, 0x2; call qword ptr [r12+0x38]; 
0x0000000047dfb6: sar edx, 0x2; sub eax, edx; ret; 
0x0000000048bf2b: sar edx, 0xff; call qword ptr [rax-0x5e1f00d]; 
0x00000000432108: sar edx, cl; movzx edx, dl; sub eax, edx; ret; 
0x0000000044f747: sar edx, cl; test rdx, rdx; je 0x000000000044f7f0; bsf rax, rdx; ret; 
0x0000000044f5e8: sar edx, cl; test rdx, rdx; je short 0x000000000044f600; bsf rax, rdx; ret; 
0x0000000044f58b: sar edx, cl; test rdx, rdx; je short 0x000000000044f610; bsf rax, rdx; ret; 
0x0000000044f7b7: sar edx, cl; test rdx, rdx; je short 0x000000000044f7e0; bsf rax, rdx; ret; 
0x00000000457207: sar esi, 0x1; jg short 0x000000000045722f; vzeroupper; ret; 
0x00000000457392: sar esi, 0x1; jg short 0x00000000004573ba; vzeroupper; ret; 
0x0000000047875d: sar r13, 0x2; mov rdx, r13; call qword ptr [rax+0x38]; 
0x000000004030fb: sar rax, 0x3; je short 0x0000000000403116; lea rbx, [rax-0x1]; nop [rax]; call qword ptr [rbp+rbx*8]; 
0x0000000049412b: sar rax, 0x3; pop rbx; pop rbp; pop r12; ret; 
0x00000000498b9b: sar rax, 0x3f; and eax, 0x1; mov [rsi], eax; mov rax, [rdi+0x98]; ret; 
0x00000000478c5a: sar rbx, 0x2; mov rdx, rbx; call qword ptr [rax+0x38]; 
0x0000000047df0b: sar rcx, 0x2; lea eax, [rcx-0x1]; ret; 
0x00000000476923: sar rdx, 0x2; call qword ptr [r12+0x38]; 
0x00000000476922: sar rdx, 0x2; call qword ptr [r12+0x38]; 
0x0000000047dfb5: sar rdx, 0x2; sub eax, edx; ret; 
0x00000000432107: sar rdx, cl; movzx edx, dl; sub eax, edx; ret; 
0x0000000044f746: sar rdx, cl; test rdx, rdx; je 0x000000000044f7f0; bsf rax, rdx; ret; 
0x0000000044f5e7: sar rdx, cl; test rdx, rdx; je short 0x000000000044f600; bsf rax, rdx; ret; 
0x0000000044f58a: sar rdx, cl; test rdx, rdx; je short 0x000000000044f610; bsf rax, rdx; ret; 
0x0000000044f7c6: sar rdx, cl; test rdx, rdx; je short 0x000000000044f7e0; bsf rax, rdx; ret; 
0x0000000044f7b6: sar rdx, cl; test rdx, rdx; je short 0x000000000044f7e0; bsf rax, rdx; ret; 
0x0000000041ed3f: sbb [r11+0x480c2474], cl; mov edi, [rsp]; add rsp, 0x10; pop rbx; jmp rax; 
0x0000000041b7e4: sbb [r15], cl; adc [rbx+0x28], eax; pop rbx; ret; 
0x00000000421a1b: sbb [r8+0x39], cl; ret; 
0x0000000048cab8: sbb [r8+0x5a], bl; pop rbx; ret; 
0x0000000048b065: sbb [r8-0x75], r9b; ja short 0x000000000048b08b; mov rdi, [rdi+0x28]; bnd call r11; 
0x0000000048b4f5: sbb [r8-0x75], r9b; ja short 0x000000000048b51b; mov rdi, [rdi+0x28]; bnd call r11; 
0x0000000048b751: sbb [r8-0x75], r9b; ja short 0x000000000048b777; mov rdi, [rdi+0x28]; bnd call r11; 
0x0000000049b977: sbb [r9-0x75], r9b; push rbp; adc [rax-0x7d], cl; ret; 
0x0000000045e5ae: sbb [rax+0x1], ecx; ret far; 
0x0000000048d7bc: sbb [rax+0x39], cl; ret far; 
0x00000000421a1c: sbb [rax+0x39], cl; ret; 
0x0000000045d8f3: sbb [rax+0x3b], cl; sbb [rdi+0x12], sil; mov [rax+0x20], rcx; mov byte ptr [rax+0x28], 0x1; ret; 
0x0000000048cab9: sbb [rax+0x5a], bl; pop rbx; ret; 
0x0000000045f187: sbb [rax+0x63], cl; add al, 0x83; add rax, rbx; notrack jmp rax; 
0x00000000486fc3: sbb [rax+rax], al; add [rcx-0x77], cl; ret; 
0x0000000041026a: sbb [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x000000004685dd: sbb [rax-0x75], cl; and al, 0x28; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x48]; call r13; 
0x0000000048b066: sbb [rax-0x75], cl; ja short 0x000000000048b08b; mov rdi, [rdi+0x28]; bnd call r11; 
0x0000000048b4f6: sbb [rax-0x75], cl; ja short 0x000000000048b51b; mov rdi, [rdi+0x28]; bnd call r11; 
0x0000000048b752: sbb [rax-0x75], cl; ja short 0x000000000048b777; mov rdi, [rdi+0x28]; bnd call r11; 
0x00000000459e8b: sbb [rax-0x75], cl; je short 0x0000000000459eb4; adc [rcx-0x77], al; ror byte ptr [rbx+0x3108247c], 0xc0; syscall; 
0x0000000046317c: sbb [rax-0x75], cl; je short 0x00000000004631a5; push rax; mov rdi, [rsp+0x58]; call r14; 
0x00000000464ce3: sbb [rax-0x75], cl; je short 0x0000000000464d0c; push rax; mov rdi, [rsp+0x58]; call rbx; 
0x00000000465cf5: sbb [rax-0x75], cl; je short 0x0000000000465d1e; mov rdi, [rsp+0x40]; call r14; 
0x00000000468001: sbb [rax-0x75], cl; je short 0x000000000046802a; pop rax; mov rdi, [rsp+0x50]; call rbx; 
0x0000000046ab2f: sbb [rax-0x75], cl; je short 0x000000000046ab58; mov rdi, [rsp+0x38]; call r15; 
0x0000000049aa9f: sbb [rax-0x75], cl; jl short 0x000000000049aac8; sbb al, ch; xchg esi, eax; ret; 
0x0000000049963a: sbb [rax-0x75], cl; or [rax-0x77], cl; ret; 
0x0000000048ff02: sbb [rax-0x75], ecx; jl short 0x000000000048ff2b; sbb al, ch; ret; 
0x0000000041ebe6: sbb [rax-0x77], cl; movups [rdi+0x8], xmm0; ret; 
0x00000000419ece: sbb [rax-0x77], cl; ret far; 
0x00000000402ef4: sbb [rax-0x77], ecx; or [rax+0x9e], r15b; mov [rsi], rsi; mov [rsi+0x10], rsi; syscall; 
0x0000000048f646: sbb [rax-0x7b], ecx; div byte ptr [rbp+0x2c]; mov dword ptr [rdx], 0x0; mov eax, 0x1; ret; 
0x0000000047fa86: sbb [rax-0x7d], ecx; rol byte ptr [rdx], 0xc3; nop [rax]; add rax, 0x1; ret; 
0x00000000459bd5: sbb [rax], al; add [rax], al; syscall; 
0x00000000459e58: sbb [rax], al; add [rax], al; test eax, eax; jne short 0x0000000000459e70; syscall; 
0x00000000449a2e: sbb [rax], al; add [rbp-0x77], cl; ret far; 
0x0000000045d428: sbb [rax], eax; add [rax], al; syscall; 
0x0000000044740e: sbb [rax], eax; add [rbp-0x77], cl; ret far; 
0x0000000041485b: sbb [rax], eax; add [rcx-0x80], al; call qword ptr [rbx+0xf]; 
0x00000000428a92: sbb [rbp+0x7], ebp; add al, ch; push rbp; ret far; 
0x0000000041ed40: sbb [rbx+0x480c2474], cl; mov edi, [rsp]; add rsp, 0x10; pop rbx; jmp rax; 
0x00000000499ac2: sbb [rbx+0x5d], bl; mov eax, r8d; ret; 
0x000000004269c4: sbb [rbx+0x5d], bl; pop r12; jmp rax; 
0x00000000417a57: sbb [rbx+0x5d], bl; pop r12; pop r13; ret; 
0x0000000041a279: sbb [rbx+0x5d], bl; ret; 
0x000000004208ab: sbb [rbx-0x2fd6efb9], cl; ret; 
0x00000000414e7d: sbb [rbx], cl; add [rbx-0x67b7df18], al; movzx eax, byte ptr [rbx+rax]; jmp qword ptr [rsi+rax*8]; 
0x00000000422bb6: sbb [rcx+0x1], cl; ret; 
0x0000000042414c: sbb [rcx+rcx*4+0x44], cl; and al, 0x10; call rax; 
0x00000000458e24: sbb [rcx+rcx*4-0x1f], cl; mov rdx, r13; call rbx; 
0x000000004105ec: sbb [rcx+rcx*4-0x40], al; pop rbx; pop rbp; ret; 
0x0000000049b978: sbb [rcx-0x75], cl; push rbp; adc [rax-0x7d], cl; ret; 
0x000000004122cf: sbb [rcx-0x75], cl; push rsi; and [rcx+rcx*4-0x1], cl; sub rdx, rsi; call qword ptr [rbx+0x38]; 
0x0000000049082f: sbb [rcx-0x77], cl; vminsd xmm9, xmm4, [rcx+rcx*4-0x18]; pop r12; pop r13; ret; 
0x0000000040f7f4: sbb [rcx], al; add [rax], al; ret; 
0x0000000041a8c3: sbb [rcx], dh; rcr byte ptr [rbx+0x5d], 0x41; pop rsp; pop r13; ret; 
0x0000000045d8f7: sbb [rdi+0x12], dh; mov [rax+0x20], rcx; mov byte ptr [rax+0x28], 0x1; ret; 
0x0000000045d8f6: sbb [rdi+0x12], sil; mov [rax+0x20], rcx; mov byte ptr [rax+0x28], 0x1; ret; 
0x0000000045d88b: sbb [rdi+0x16], dh; mov [rdi+0x20], rdx; mov byte ptr [rdi+0x28], 0x1; ret; 
0x0000000045d919: sbb [rdi-0x10], bh; mov [rax+0x20], rcx; mov byte ptr [rax+0x28], 0x1; ret; 
0x0000000045d8b1: sbb [rdi-0x10], bh; mov [rdi+0x20], rdx; mov byte ptr [rdi+0x28], 0x1; ret; 
0x0000000045d918: sbb [rdi-0x10], dil; mov [rax+0x20], rcx; mov byte ptr [rax+0x28], 0x1; ret; 
0x0000000041b7e5: sbb [rdi], cl; adc [rbx+0x28], eax; pop rbx; ret; 
0x00000000492564: sbb [rdx], al; add [rax], al; add [rax-0x77], cl; ret; 
0x0000000047d706: sbb [rsi+0x1f], dh; mov rax, [rax+0xe0]; mov esi, 0xffffffff; call qword ptr [rax+0x18]; 
0x00000000443797: sbb [rsi], al; add [rbx+0x148b8104], cl; xchg ecx, eax; sub eax, edx; ret; 
0x0000000045acc5: sbb al, 0x0; add [rax], al; syscall; 
0x0000000044b679: sbb al, 0x0; add [rbp-0x77], cl; ret far; 
0x0000000044b5d3: sbb al, 0x0; add [rcx+0x29], cl; ret far; 
0x000000004017c4: sbb al, 0x0; test al, al; jne short 0x00000000004017cb; ret; 
0x0000000048a3b0: sbb al, 0x23; add al, 0x0; mov rax, r8; ret; 
0x0000000048b856: sbb al, 0x24; add rsp, 0x18; bnd jmp r11; 
0x0000000048b03d: sbb al, 0x24; add rsp, 0x30; bnd jmp r11; 
0x0000000048b14f: sbb al, 0x24; add rsp, 0x30; bnd ret; 
0x00000000459f50: sbb al, 0x42; add al, [rax]; mov rax, [rsp+0x8]; add rsp, 0x28; ret; 
0x0000000044d280: sbb al, 0x7d; add eax, 0x91148b00; mov eax, [rcx+rax*4]; sub eax, edx; ret; 
0x0000000046a870: sbb al, 0x8a; stc; jmp qword ptr [rsi+0x2e]; 
0x000000004911c0: sbb al, 0xc6; cld; call qword ptr [rax-0x170876b4]; 
0x000000004995c0: sbb al, 0xcc; mov rsi, [rbx]; call rax; 
0x0000000046166b: sbb al, 0xfa; jmp qword ptr [rsi-0x70]; 
0x00000000498a83: sbb al, [rax]; add [rax], al; mov edi, 0x1; call rax; 
0x0000000044b85a: sbb al, [rax]; add [rbp-0x77], cl; ret far; 
0x000000004091fb: sbb al, ch; jmp rbx; 
0x0000000048ff07: sbb al, ch; ret; 
0x0000000049aaa4: sbb al, ch; xchg esi, eax; ret; 
0x0000000044b859: sbb al, fs:[rax]; add [rbp-0x77], cl; ret far; 
0x00000000426ed3: sbb bl, al; nop [rax]; mov rsi, [rsp+0x18]; add rsp, 0x18; jmp rax; 
0x0000000045381b: sbb bl, dh; movq [rdi], mm0; mov [rdi+0x10], rdx; mov [rdi+0x18], cx; ret; 
0x0000000045385a: sbb bl, dh; movq [rdi], mm0; mov [rdi+0x10], rdx; mov [rdi+0x18], ecx; ret; 
0x0000000045381a: sbb bl, r14b; movq [rdi], mm0; mov [rdi+0x10], rdx; mov [rdi+0x18], cx; ret; 
0x00000000453859: sbb bl, r14b; movq [rdi], mm0; mov [rdi+0x10], rdx; mov [rdi+0x18], ecx; ret; 
0x0000000044936d: sbb byte ptr [rdi], 0x0; add [rbp-0x77], cl; ret far; 
0x000000004149d1: sbb cl, [r11]; add [rax-0x75], cl; add al, 0xc8; jmp rax; 
0x0000000048f5b5: sbb cl, [rax-0x7b]; div byte ptr [rbp+0x25]; mov dword ptr [rdx], 0x0; mov eax, 0x1; ret; 
0x000000004149d2: sbb cl, [rbx]; add [rax-0x75], cl; add al, 0xc8; jmp rax; 
0x00000000422a2a: sbb dh, [rcx+0xa]; add [rax-0x73], cl; add eax, 0x319b; mov [rip+0xa7104], rax; ret; 
0x0000000048b85b: sbb dl, dh; jmp r11; 
0x00000000497bb0: sbb dword ptr [rbx-0x49f0000a], 0xffffffc0; movsxd rax, [r13+rax*4]; add rax, r13; notrack jmp rax; 
0x00000000424bb0: sbb dword ptr [rcx-0x4], 0xffffffff; jmp qword ptr [rsi+0x49]; 
0x0000000045b281: sbb eax, 0x1f0f3ceb; add [rax-0x73], cl; push rbx; or [rax-0x7d], cl; ret; 
0x0000000049b8f5: sbb eax, 0x306d6; test rbx, rbx; jne short 0x000000000049b8e0; pop rbx; ret; 
0x00000000486902: sbb eax, 0x4000003; ret; 
0x00000000486852: sbb eax, 0x4000003; xor eax, eax; ret; 
0x000000004100c2: sbb eax, 0x441f0f; add [rbx+rcx*4+0x63], cl; or [rax-0x7d], cl; ret; 
0x0000000043b964: sbb eax, 0x46f00ff2; or eax, 0xef00ff2; movdqu [rdi+0xd], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000042a28f: sbb eax, 0x480001eb; cmovne eax, edx; ret; 
0x000000004598d3: sbb eax, 0x48000488; movsxd eax, [rdx+rbp*4]; add rax, rdx; notrack jmp rax; 
0x0000000042a393: sbb eax, 0x4802000a; lea edx, [rip+0x2c382]; lea rax, [rip+0x2c43b]; cmove rax, rdx; ret; 
0x0000000042a325: sbb eax, 0x4802000a; lea edx, [rip+0x2c7c0]; lea rax, [rip+0x2c809]; cmove rax, rdx; ret; 
0x0000000042a377: sbb eax, 0x4802000a; lea edx, [rip+0x2cbae]; lea rax, [rip+0x2cbf7]; cmove rax, rdx; ret; 
0x00000000453c37: sbb eax, 0x4de04; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000453c02: sbb eax, 0x4de39; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000453bd6: sbb eax, 0x4de65; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000453bc0: sbb eax, 0x4de7b; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000453b9e: sbb eax, 0x4de9d; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000453b79: sbb eax, 0x4dec2; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000453b5c: sbb eax, 0x4dedf; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000453b04: sbb eax, 0x4df37; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000453607: sbb eax, 0x4e3b4; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000004535d2: sbb eax, 0x4e3e9; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000004535a6: sbb eax, 0x4e415; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000453590: sbb eax, 0x4e42b; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000045356e: sbb eax, 0x4e44d; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000453549: sbb eax, 0x4e472; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000045352c: sbb eax, 0x4e48f; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000004534d4: sbb eax, 0x4e4e7; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000042eaee: sbb eax, 0x634f0007; or al, 0x8a; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000043dae3: sbb eax, 0x63798; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043d785: sbb eax, 0x63af6; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043d930: sbb eax, 0x63b8b; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043d605: sbb eax, 0x63c76; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043d6c8: sbb eax, 0x63df3; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043d485: sbb eax, 0x63df6; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043d548: sbb eax, 0x63f73; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043d305: sbb eax, 0x63f76; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043d3c8: sbb eax, 0x640f3; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043d185: sbb eax, 0x640f6; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043d249: sbb eax, 0x64272; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043d005: sbb eax, 0x64276; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043d0c8: sbb eax, 0x643f3; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043ce85: sbb eax, 0x643f6; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043cf48: sbb eax, 0x64573; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043cd05: sbb eax, 0x64576; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043cdc8: sbb eax, 0x646f3; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043cb85: sbb eax, 0x646f6; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043cc48: sbb eax, 0x64873; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043ca05: sbb eax, 0x64876; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043cac8: sbb eax, 0x649f3; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c885: sbb eax, 0x649f6; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c948: sbb eax, 0x64b73; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c705: sbb eax, 0x64b76; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c7c8: sbb eax, 0x64cf3; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c585: sbb eax, 0x64cf6; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c648: sbb eax, 0x64e73; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c405: sbb eax, 0x64e76; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c4c8: sbb eax, 0x64ff3; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c285: sbb eax, 0x64ff6; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c10c: sbb eax, 0x6516f; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c348: sbb eax, 0x65173; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c1c8: sbb eax, 0x652f3; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043bf01: sbb eax, 0x6537a; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c08b: sbb eax, 0x65430; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043bf24: sbb eax, 0x65597; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043bfe1: sbb eax, 0x6575a; sub rdx, 0x80; movsxd r9, [r11+r9*4]; add r9, r11; notrack jmp r9; 
0x0000000043bf7a: sbb eax, 0x65781; sub rdx, 0x80; movsxd r9, [r11+r9*4]; add r9, r11; notrack jmp r9; 
0x0000000043afaf: sbb eax, 0x65dcc; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043ac85: sbb eax, 0x660f6; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043ae1c: sbb eax, 0x6619f; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043ab05: sbb eax, 0x66276; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043abc8: sbb eax, 0x663f3; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043a985: sbb eax, 0x663f6; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043aa48: sbb eax, 0x66573; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043a805: sbb eax, 0x66576; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043a8c8: sbb eax, 0x666f3; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043a685: sbb eax, 0x666f6; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043a749: sbb eax, 0x66872; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043a505: sbb eax, 0x66876; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043a5c8: sbb eax, 0x669f3; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043a385: sbb eax, 0x669f6; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043a448: sbb eax, 0x66b73; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043a205: sbb eax, 0x66b76; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043a2c8: sbb eax, 0x66cf3; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043a085: sbb eax, 0x66cf6; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043a148: sbb eax, 0x66e73; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439f05: sbb eax, 0x66e76; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439fc8: sbb eax, 0x66ff3; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439d85: sbb eax, 0x66ff6; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439e48: sbb eax, 0x67173; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439c05: sbb eax, 0x67176; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439cc8: sbb eax, 0x672f3; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439a85: sbb eax, 0x672f6; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439b48: sbb eax, 0x67473; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439905: sbb eax, 0x67476; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004399c8: sbb eax, 0x675f3; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439785: sbb eax, 0x675f6; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043960c: sbb eax, 0x6776f; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439848: sbb eax, 0x67773; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004393a6: sbb eax, 0x67815; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004392e9: sbb eax, 0x678d2; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004396c8: sbb eax, 0x678f3; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439421: sbb eax, 0x6795a; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004391fe: sbb eax, 0x679bd; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043958b: sbb eax, 0x67a30; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439133: sbb eax, 0x67a88; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043940d: sbb eax, 0x67bae; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004394e1: sbb eax, 0x67d5a; sub rdx, 0x80; movsxd r9, [r11+r9*4]; add r9, r11; notrack jmp r9; 
0x0000000043947f: sbb eax, 0x67d7c; sub rdx, 0x80; movsxd r9, [r11+r9*4]; add r9, r11; notrack jmp r9; 
0x00000000438114: sbb eax, 0x68aa7; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000438076: sbb eax, 0x68b45; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437fc4: sbb eax, 0x68bf7; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437f26: sbb eax, 0x68c95; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437e74: sbb eax, 0x68d47; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437dd6: sbb eax, 0x68de5; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437d24: sbb eax, 0x68e97; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437c86: sbb eax, 0x68f35; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437bd4: sbb eax, 0x68fe7; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437b36: sbb eax, 0x69085; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437a84: sbb eax, 0x69137; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004379e6: sbb eax, 0x691d5; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437934: sbb eax, 0x69287; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437896: sbb eax, 0x69325; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004377e4: sbb eax, 0x693d7; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437749: sbb eax, 0x69472; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437694: sbb eax, 0x69527; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004375f6: sbb eax, 0x695c5; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437544: sbb eax, 0x69677; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004374a6: sbb eax, 0x69715; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004373f4: sbb eax, 0x697c7; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437356: sbb eax, 0x69865; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004372a4: sbb eax, 0x69917; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437206: sbb eax, 0x699b5; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437154: sbb eax, 0x69a67; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004370b6: sbb eax, 0x69b05; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000437004: sbb eax, 0x69bb7; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000436f66: sbb eax, 0x69c55; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000436eb4: sbb eax, 0x69d07; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000436e16: sbb eax, 0x69da5; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000436d68: sbb eax, 0x69e53; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000436c77: sbb eax, 0x69f44; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000436bb8: sbb eax, 0x6a003; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000436b4e: sbb eax, 0x6a06d; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000436a4f: sbb eax, 0x6a16c; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000436815: sbb eax, 0x6a1e6; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043698a: sbb eax, 0x6a231; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043673b: sbb eax, 0x6a2c0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000436917: sbb eax, 0x6a424; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x000000004368bd: sbb eax, 0x6a43e; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x00000000435734: sbb eax, 0x6b2c7; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000435696: sbb eax, 0x6b365; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004355e4: sbb eax, 0x6b417; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000435546: sbb eax, 0x6b4b5; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000435494: sbb eax, 0x6b567; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004353f6: sbb eax, 0x6b605; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000435344: sbb eax, 0x6b6b7; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004352a6: sbb eax, 0x6b755; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004351f4: sbb eax, 0x6b807; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000435156: sbb eax, 0x6b8a5; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004350a4: sbb eax, 0x6b957; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000435006: sbb eax, 0x6b9f5; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434f54: sbb eax, 0x6baa7; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434eb6: sbb eax, 0x6bb45; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434e04: sbb eax, 0x6bbf7; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434d69: sbb eax, 0x6bc92; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434cb4: sbb eax, 0x6bd47; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434c16: sbb eax, 0x6bde5; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434b64: sbb eax, 0x6be97; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434ac6: sbb eax, 0x6bf35; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434a14: sbb eax, 0x6bfe7; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434976: sbb eax, 0x6c085; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004348c4: sbb eax, 0x6c137; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434826: sbb eax, 0x6c1d5; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434774: sbb eax, 0x6c287; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004346d6: sbb eax, 0x6c325; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434624: sbb eax, 0x6c3d7; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434586: sbb eax, 0x6c475; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004344d4: sbb eax, 0x6c527; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434436: sbb eax, 0x6c5c5; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434388: sbb eax, 0x6c673; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434297: sbb eax, 0x6c764; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004341d8: sbb eax, 0x6c823; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043416e: sbb eax, 0x6c88d; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043406f: sbb eax, 0x6c98c; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000433faa: sbb eax, 0x6ca51; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000433f37: sbb eax, 0x6cc44; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x00000000433ed6: sbb eax, 0x6cc65; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x00000000433265: sbb eax, 0x6d656; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x000000004331eb: sbb eax, 0x6d6d0; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000043315c: sbb eax, 0x6d75f; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000432f51: sbb eax, 0x6d96a; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000432e1f: sbb eax, 0x6da9c; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000432d59: sbb eax, 0x6db62; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000432cdb: sbb eax, 0x6dbe0; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000432c46: sbb eax, 0x6dc75; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000432a49: sbb eax, 0x6de72; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000432917: sbb eax, 0x6dfa4; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000043280c: sbb eax, 0x6e0af; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000045bc12: sbb eax, 0x7d8b49; call rbx; 
0x0000000041d8cf: sbb eax, 0x81a44; movzx eax, al; movsxd rax, [r11+rax*4]; add rax, r11; notrack jmp rax; 
0x0000000041d901: sbb eax, 0x81a6e; movzx eax, al; movsxd rax, [r11+rax*4]; add rax, r11; notrack jmp rax; 
0x0000000041d933: sbb eax, 0x81a98; movzx eax, al; movsxd rax, [r11+rax*4]; add rax, r11; notrack jmp rax; 
0x0000000041d965: sbb eax, 0x81ac2; movzx eax, al; movsxd rax, [r11+rax*4]; add rax, r11; notrack jmp rax; 
0x000000004495ad: sbb eax, 0x894d0000; ret far; 
0x0000000040f1a3: sbb eax, 0x8f750; movzx r10d, r10b; movsxd r10, [r11+r10*4]; add r10, r11; notrack jmp r10; 
0x00000000420c41: sbb eax, 0xab3b2; add dword ptr [rip+0xab3a7], 0x1; pop rbx; ret; 
0x0000000044f392: sbb eax, 0xc0bc0ff3; add rax, rcx; add rax, rdi; vzeroupper; ret; 
0x0000000041d4e7: sbb eax, 0xe6ebe074; nop [rax]; xor eax, eax; ret; 
0x00000000418e5f: sbb eax, 0xeb000028; ret; 
0x000000004102ef: sbb eax, 0xf000bc8; add eax, 0xffff28e9; jmp qword ptr [rsi+0xf]; 
0x00000000455dd7: sbb eax, 0xffffffff; ret; 
0x0000000047b085: sbb eax, [rax]; add [rax+0x39], cl; ret; 
0x000000004471be: sbb eax, [rax]; add [rbp-0x77], cl; ret far; 
0x0000000040c8fe: sbb eax, [rax]; add [rbx-0x7bf0fe08], al; ret; 
0x0000000048d71a: sbb eax, eax; and eax, 0x2; sub eax, 0x1; ret; 
0x00000000432567: sbb eax, eax; or eax, 0x1; ret; 
0x00000000499543: sbb eax, eax; ret; 
0x00000000455dd5: sbb eax, eax; sbb eax, 0xffffffff; ret; 
0x000000004163ae: sbb ecx, [rdx-0x16fff8]; in al, 0xff; jmp qword ptr [rsi+0xf]; 
0x0000000048f425: sbb edx, ebx; mov [rdi+0x8], r10; mov eax, ecx; adc eax, eax; ret; 
0x000000004934da: sbb esi, esi; and esi, 0x2; syscall; 
0x0000000048f423: sbb r10, r11; mov [rdi+0x8], r10; mov eax, ecx; adc eax, eax; ret; 
0x0000000042eaed: sbb rax, 0x634f0007; or al, 0x8a; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000044dbcf: scasb [rdi]; adc [rax], al; add [rbp-0x77], cl; ret far; 
0x0000000044d8cf: scasb [rdi]; adc eax, [rax]; add [rbp-0x77], cl; ret far; 
0x0000000044eacf: scasb [rdi]; add [rax], eax; add [rbp-0x77], cl; ret far; 
0x0000000044e7cf: scasb [rdi]; add al, 0x0; add [rbp-0x77], cl; ret far; 
0x00000000401cd9: scasb [rdi]; add dil, r15b; loopne 0x0000000000401d45; nop; ret; 
0x000000004583df: scasb [rdi]; cli; jmp qword ptr [rsi+0xf]; 
0x0000000044e1cf: scasb [rdi]; or al, [rax]; add [rbp-0x77], cl; ret far; 
0x0000000044decf: scasb [rdi]; or eax, 0x894d0000; ret far; 
0x0000000040a28e: scasb [rdi]; ret far; 
0x000000004583de: scasb [rdi]; scasb [rdi]; cli; jmp qword ptr [rsi+0xf]; 
0x000000004683e2: scasb [rdi]; stc; dec dword ptr [rbp-0x77]; ret; 
0x0000000048bf3e: scasb [rdi]; stc; jmp qword ptr [rsi+0xf]; 
0x0000000041996d: scasd [rdi]; add [rax-0x39], r9b; ret; 
0x0000000042936d: scasd [rdi]; add al, [rax]; cmovne rax, rdx; ret; 
0x0000000045f107: scasd [rdi]; add al, [rax]; nop [rax+rax]; ret; 
0x0000000049281c: scasd [rdi]; cld; call qword ptr [rax-0x4c117]; 
0x00000000419dc0: scasd [rdi]; ret; 
0x000000004828d0: scasd [rdi]; std; call qword ptr [rax-0x1107a3a]; 
0x000000004017c1: seta al; sbb al, 0x0; test al, al; jne short 0x00000000004017cb; ret; 
0x00000000421684: setae al; ret; 
0x0000000046dcfa: sete dh; xor eax, eax; mov [rbx+0x40], esi; pop rbx; ret; 
0x0000000046dcf9: sete sil; xor eax, eax; mov [rbx+0x40], esi; pop rbx; ret; 
0x00000000493ee9: setne al; add rsp, 0x8; movzx eax, al; neg eax; ret; 
0x000000004392e3: sfence; lea r11, [rip+0x678d2]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043912e: sfence; lea r11, [rip+0x67a88]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043680f: sfence; lea r11, [rip+0x6a1e6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000436736: sfence; lea r11, [rip+0x6a2c0]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000493ef2: shl bh, 0xd8; ret; 
0x00000000431faf: shl bl, 0x1; bsf eax, eax; add rax, rdi; vzeroupper; ret; 
0x0000000044fa62: shl byte ptr [rax+0x48], 0x1; clc; sub rax, rdx; vzeroupper; ret; 
0x00000000431e3b: shl byte ptr [rax+0x48], 0x1; clc; vzeroupper; ret; 
0x0000000046db26: shl byte ptr [rax+0x48ffffff], 0x63; jmp qword ptr [rax+rcx*2-0x75]; 
0x0000000048ff55: shl byte ptr [rax+rcx+0x5b], 0x5d; pop r12; ret; 
0x0000000045df0d: shl byte ptr [rax+rdx+0x48], cl; lea edi, [rcx+rsi+0x20]; jmp rdx; 
0x0000000044f9f6: shl byte ptr [rax], 0x48; add eax, edi; sub rax, rdx; vzeroupper; ret; 
0x00000000431dfb: shl byte ptr [rax], 0x48; add eax, edi; vzeroupper; ret; 
0x00000000459efd: shl byte ptr [rbp+0x10], 0xb8; add [rax], eax; add [rax], al; syscall; 
0x0000000041e4cd: shl byte ptr [rbp+0x10], cl; sub dword ptr [rip+0xadb19], 0x1; ret; 
0x0000000048acb4: shl byte ptr [rbp+0x19], 0x48; mov dword ptr [rbx], 0x0; pop rbx; or dword ptr [rip+0x3f802], 0x1; ret; 
0x00000000487a0f: shl byte ptr [rbp+0x2], cl; call rax; 
0x000000004594e2: shl byte ptr [rbp+0x2b], 0x4c; mov eax, eax; shr rax, 0x2; vzeroupper; ret; 
0x0000000044fc52: shl byte ptr [rbp+0x2b], 0x4c; mov eax, eax; vzeroupper; ret; 
0x0000000047553f: shl byte ptr [rbp+0x36], 0x83; sub eax, 0x56da7; add [rcx+rcx*4-0x40], eax; pop rbx; ret; 
0x0000000041035c: shl byte ptr [rbp+0x3948004c], 0x1; ret; 
0x000000004905ea: shl byte ptr [rbp+0x3], cl; mov [rbx], rax; add rsp, 0x10; pop rbx; ret; 
0x0000000045c024: shl byte ptr [rbp+0x3b], 0x49; mov edi, [rdi]; call rbx; 
0x000000004574e6: shl byte ptr [rbp+0x4], cl; mov rax, rdi; ret; 
0x00000000431b92: shl byte ptr [rbp+0x4b], 0x66; pmovmskb eax, mm1; bsf eax, eax; lea rax, [rdi+rax+0x30]; ret; 
0x0000000041d508: shl byte ptr [rbp+0x5], cl; ret; 
0x0000000048f72b: shl byte ptr [rbp+0x62], 0xc7; add al, [rax]; add [rax], al; add [rax+0x2], bh; ret; 
0x000000004756d7: shl byte ptr [rbp+0x6], cl; sub dword ptr [rdi], 0x1; ret; 
0x0000000045c04d: shl byte ptr [rbp+0x7d], 0x49; mov edi, [rdi]; call rbx; 
0x000000004267db: shl byte ptr [rbp+0xb], 0xc7; add eax, 0xa5878; add [rax], al; add [rax], al; ret; 
0x0000000045d542: shl byte ptr [rbp+0xb], cl; ret; 
0x00000000420c99: shl byte ptr [rbp+0xc], cl; sub dword ptr [rip+0xab34d], 0x1; ret; 
0x0000000044f390: shl byte ptr [rbp+rbx-0xd], 0xf; mov esp, 0xc80148c0; add rax, rdi; vzeroupper; ret; 
0x000000004591b0: shl byte ptr [rbp+rcx+0x48], cl; bsf eax, edx; shr rax, 0x2; ret; 
0x0000000047fa68: shl byte ptr [rbp+rdx-0x78], cl; rol dword ptr [rax+0x1e740fe1], 0x1; ret; 
0x0000000042086d: shl byte ptr [rbp-0x10], 0xc3; add rdx, 0x60; mov rax, [rdi]; mov [rdx], rax; ret; 
0x00000000456100: shl byte ptr [rbp-0x13], cl; lea rax, [rcx-0x1]; ret; 
0x0000000041eb88: shl byte ptr [rbp-0x13], cl; ret; 
0x0000000042bb1b: shl byte ptr [rbp-0x1e], 0x31; shr byte ptr [rcx], 0xc8; ret; 
0x0000000042d0dc: shl byte ptr [rbp-0x1f], 0x29; enter 0xf8c5, 0x77; ret; 
0x00000000421856: shl byte ptr [rbp-0x21], cl; nop [rax]; xor r8d, r8d; mov rax, r8; ret; 
0x00000000431561: shl byte ptr [rbp-0x24], 0x29; enter 0xf8c5, 0x77; ret; 
0x0000000040f6ec: shl byte ptr [rbp-0x27], cl; ret; 
0x00000000431e9d: shl byte ptr [rbp-0x30], 0xc5; std; xlat [rbx]; ret; 
0x0000000044f2ed: shl byte ptr [rbp-0x50], 0xc5; std; xlat [rbx]; ret; 
0x0000000047f28c: shl byte ptr [rbp-0xf], cl; ret; 
0x00000000420d20: shl byte ptr [rbx+0x25], 0x1; movzx eax, byte ptr [rax]; ret; 
0x00000000419ef2: shl byte ptr [rbx+rbp*2+0x49], 0x2b; and [r8+0x1], r9b; ret; 
0x00000000431f12: shl byte ptr [rbx+rbx-0xd], 0xf; mov esp, 0xf80148c0; add rax, rcx; vzeroupper; ret; 
0x00000000480832: shl byte ptr [rcx+rcx-0x80], 0x78; jmp far fword ptr [rdi]; 
0x0000000044f5ec: shl byte ptr [rcx+rdx+0x48], cl; bsf eax, edx; ret; 
0x0000000049544f: shl byte ptr [rcx-0x73], cl; dec dword ptr [rbp+r9*4+0x74]; ret; 
0x0000000044912d: shl byte ptr [rcx], 0x0; add [rbp-0x77], cl; ret far; 
0x0000000042167d: shl byte ptr [rcx], 0x1; ror byte ptr [rax+0x39], 0xfa; setae al; ret; 
0x00000000457af5: shl byte ptr [rcx], 0x1; shl byte ptr [rip+0x3fffc00], cl; div ecx; mov eax, eax; ret; 
0x0000000042023c: shl byte ptr [rcx], cl; test byte ptr [rax-0x77], 0xdf; call qword ptr [r15+0x58]; 
0x00000000480d16: shl byte ptr [rdi+0x48], 0x89; ret; 
0x0000000048a34a: shl byte ptr [rdi+0xb], 0x48; add esp, 0x8; ret; 
0x000000004248e9: shl byte ptr [rdi+rax*8], 0xc; add [rax], al; add [rcx+rcx*4-0x40], cl; ret; 
0x00000000434d3a: shl byte ptr [rdx+0x13], 0x1; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000044f7bb: shl byte ptr [rdx+0x48], cl; bsf eax, edx; ret; 
0x0000000045919b: shl byte ptr [rdx+0x48], cl; bsf eax, edx; shr rax, 0x2; ret; 
0x0000000043673c: shl byte ptr [rdx+0x63490006], 0x14; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043440c: shl byte ptr [rdx+0xe], 0x1; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000401011: shl byte ptr [rdx+rax-0x1], 0xd0; add rsp, 0x8; ret; 
0x0000000048fcb6: shl byte ptr [rdx+rcx+0x48], 0x8d; adc eax, 0x3b1a0; mov [rax], rdx; add rsp, 0x8; ret; 
0x00000000457af7: shl byte ptr [rip+0x3fffc00], cl; div ecx; mov eax, eax; ret; 
0x0000000045a966: shl byte ptr [rip+0x410000], cl; cmp eax, 0x410000; je short 0x000000000045a9a0; mov eax, 0x101; syscall; 
0x0000000041f439: shl byte ptr [rsi+0x14], 0x48; mov eax, [rbx+0x40]; add rsp, 0x20; pop rbx; jmp rax; 
0x00000000484e7c: shl byte ptr [rsi+0x48], 0xf; outsb dx, [rsi]; ret far; 
0x0000000047ec56: shl byte ptr [rsi+0xf], 0x1; outsd dx, [rsi]; ret; 
0x0000000048f816: shl byte ptr [rsi+rcx+0x48], 0x8d; add eax, 0x3cb80; mov [rip+0x3cb61], rax; add rsp, 0x8; ret; 
0x0000000044f58f: shl byte ptr [rsi+rdi*2+0x48], cl; bsf eax, edx; ret; 
0x000000004563df: shl byte ptr [rsi+rdx*8+0x48], cl; movsxd ecx, ecx; add rax, rcx; sub rax, rdi; ret; 
0x00000000431a47: shl byte ptr [rsi+rdx+0xf], 0xbc; ror byte ptr [rax+0x1], 0xf8; add rax, rcx; ret; 
0x0000000048a981: shl byte ptr [rsp+rdi+0x48], 0x89; ret; 
0x000000004776a3: shl dh, 0xff; dec dword ptr [rbx+rcx*4-0x5b]; clc; idiv bh; jmp qword ptr [rsi-0x70]; 
0x00000000431428: shl dword ptr [rax+0x49], 0x39; ret far; 
0x0000000048962f: shl dword ptr [rbp-0x2a], 0x1; mov eax, [rcx]; ret; 
0x0000000045d551: shl dword ptr [rbx], 0x4e; adc [rax-0x73], cl; or al, 0x8e; add eax, [rcx+rdx]; ret; 
0x0000000042ea16: shl dword ptr [rsi+0xb], cl; movzx ecx, byte ptr [rsi+rdx]; movzx eax, byte ptr [rdi+rdx]; sub eax, ecx; ret; 
0x0000000047ec52: shl dword ptr [rsi+0xf], 0xd7; shl byte ptr [rsi+0xf], 0x1; outsd dx, [rsi]; ret; 
0x00000000455e7f: shl dword ptr [rsi+0xf], 0xda; ret; 
0x0000000045fef7: shl eax, cl; ret; 
0x00000000456827: shl ebx, 0x1; movsb [rdi], [rsi]; ret; 
0x0000000045fef2: shl ecx, 0x3; pop r12; shl eax, cl; ret; 
0x0000000048a940: shl ecx, 0x4; cmp r8, [rcx+rsi+0x10]; jae short 0x000000000048a8f5; xor eax, eax; ret; 
0x00000000479a23: shl ecx, 0xff; jmp qword ptr [rsi+0xf]; 
0x0000000048de9c: shl ecx, cl; mov [rdi-0x10], r9; ret; 
0x0000000048de1b: shl ecx, cl; mov [rdi-0x8], r9; ret; 
0x0000000048ddea: shl ecx, cl; mov [rdi], r9; ret; 
0x00000000411860: shl edx, 0x2; lea rcx, [rbx+rdx]; add rdx, r15; call qword ptr [rax+r9*8]; 
0x0000000044f03a: shl edx, 0x30; or rax, rdx; bsf rax, rax; lea rax, [rdi+rax]; ret; 
0x0000000048f5f3: shl esi, cl; mov [rdi], rsi; mov [rdx], eax; mov eax, 0x1; ret; 
0x000000004855d5: shl esp, 0x4; add r12, rax; call qword ptr [r12+0x60]; 
0x000000004855d4: shl r12, 0x4; add r12, rax; call qword ptr [r12+0x60]; 
0x0000000048de9b: shl r9, cl; mov [rdi-0x10], r9; ret; 
0x0000000048de1a: shl r9, cl; mov [rdi-0x8], r9; ret; 
0x0000000048dde9: shl r9, cl; mov [rdi], r9; ret; 
0x0000000048a93f: shl rcx, 0x4; cmp r8, [rcx+rsi+0x10]; jae short 0x000000000048a8f5; xor eax, eax; ret; 
0x0000000041185f: shl rdx, 0x2; lea rcx, [rbx+rdx]; add rdx, r15; call qword ptr [rax+r9*8]; 
0x0000000044f039: shl rdx, 0x30; or rax, rdx; bsf rax, rax; lea rax, [rdi+rax]; ret; 
0x0000000048f5f2: shl rsi, cl; mov [rdi], rsi; mov [rdx], eax; mov eax, 0x1; ret; 
0x0000000048de94: shld eax, ecx, cl; mov [rdi-0x8], r8; shl r9, cl; mov [rdi-0x10], r9; ret; 
0x0000000048de14: shld eax, ecx, cl; mov [rdi], r8; shl r9, cl; mov [rdi-0x8], r9; ret; 
0x0000000048de93: shld r8, r9, cl; mov [rdi-0x8], r8; shl r9, cl; mov [rdi-0x10], r9; ret; 
0x0000000048de12: shld r8, r9, cl; mov [rdi], r8; shl r9, cl; mov [rdi-0x8], r9; ret; 
0x00000000461c58: shr al, 0x2; cmc; stc; jmp qword ptr [rsi+0xf]; 
0x0000000048c7c8: shr al, 0xb2; ret far; 
0x0000000046d41b: shr al, cl; out dx, eax; ret; 
0x00000000490601: shr bl, 0xcf; nop [rax]; call rax; 
0x0000000042bb1f: shr byte ptr [rcx], 0xc8; ret; 
0x0000000046ac38: shr byte ptr [rcx], cl; ret; 
0x0000000043210c: shr byte ptr [rcx], cl; rol bl, 0x1; xor eax, eax; ret; 
0x0000000045815e: shr byte ptr [rdx+0x1], cl; lea r9, [rsp+0x20]; call rbx; 
0x00000000401d1a: shr byte ptr [rsi-0x1f00ffb4], 0x1; ret; 
0x00000000401cd8: shr byte ptr [rsi-0x1f00ffb4], 0x1; xchg ax, ax; ret; 
0x0000000047cb9b: shr cl, 0x22; clc; jmp qword ptr [rsi+0x2e]; 
0x000000004197c1: shr cl, 0x8a; jge short 0x00000000004197c4; jmp qword ptr [rsi+0xf]; 
0x0000000047c8b4: shr cl, 0xb3; clc; jmp qword ptr [rsi+0xf]; 
0x000000004146c1: shr dword ptr [rcx], cl; ret; 
0x000000004249cc: shr dword ptr [rsi+0x48], 0x3d; jmp far fword ptr [rdi+0x32760000]; 
0x0000000045913b: shr eax, 0x2; ret; 
0x0000000045937c: shr eax, 0x2; vzeroupper; ret; 
0x0000000041036d: shr eax, 0x3; lea r12, [rbx+rax*8+0x8]; nop [rax]; call qword ptr [rbx]; 
0x00000000421720: shr eax, 0x4; lea rdx, [rax+0x1]; mov [rip+0xa83e2], rdx; ret; 
0x00000000457a46: shr eax, 0x6; and eax, 0x3fffc00; ret; 
0x000000004579c9: shr eax, 0xc; and eax, 0xf; movsxd rcx, [rsi+rax*4]; add rcx, rsi; notrack jmp rcx; 
0x000000004579fb: shr eax, 0xe; and eax, 0x3fc00; ret; 
0x000000004251df: shr ecx, 0x3; rep stosq [rdi]; pop rbp; ret; 
0x0000000048dfac: shr ecx, cl; mov [rdi+0x10], r9; ret; 
0x0000000048df35: shr ecx, cl; mov [rdi+0x8], r9; ret; 
0x0000000048df04: shr ecx, cl; mov [rdi], r9; ret; 
0x0000000048dfab: shr r9, cl; mov [rdi+0x10], r9; ret; 
0x0000000048df34: shr r9, cl; mov [rdi+0x8], r9; ret; 
0x0000000048df03: shr r9, cl; mov [rdi], r9; ret; 
0x0000000045913a: shr rax, 0x2; ret; 
0x0000000045937b: shr rax, 0x2; vzeroupper; ret; 
0x0000000041036c: shr rax, 0x3; lea r12, [rbx+rax*8+0x8]; nop [rax]; call qword ptr [rbx]; 
0x0000000042171f: shr rax, 0x4; lea rdx, [rax+0x1]; mov [rip+0xa83e2], rdx; ret; 
0x0000000048dfa4: shrd eax, ecx, cl; mov [rdi+0x8], r8; shr r9, cl; mov [rdi+0x10], r9; ret; 
0x0000000048df2e: shrd eax, ecx, cl; mov [rdi], r8; shr r9, cl; mov [rdi+0x8], r9; ret; 
0x0000000048dfa3: shrd r8, r9, cl; mov [rdi+0x8], r8; shr r9, cl; mov [rdi+0x10], r9; ret; 
0x0000000048df2c: shrd r8, r9, cl; mov [rdi], r8; shr r9, cl; mov [rdi+0x8], r9; ret; 
0x0000000048df2d: shrd r8, r9, cl; mov [rdi], r8; shr r9, cl; mov [rdi+0x8], r9; ret; 
0x000000004542b5: shufps xmm0, [rdi+0x2], 0x0; lea rax, [rdi+0x2]; vzeroupper; ret; 
0x00000000450095: shufps xmm0, [rdi+0x2], 0x0; vzeroupper; ret; 
0x00000000412b7a: sldt [rax]; mov rdx, rbx; mov rsi, r12; mov rdi, r15; call qword ptr [rcx+0x38]; 
0x00000000431077: stc; add [rax], al; add [rbp-0x77], cl; ret far; 
0x00000000480514: stc; add [rdi+0x30], esi; mov eax, 0x106; syscall; 
0x0000000046b75d: stc; call qword ptr [rax-0x5e1f00d]; 
0x0000000048ba6c: stc; dec dword ptr [rax-0x77]; ret; 
0x0000000048ff51: stc; dec dword ptr [rax-0x7b]; shl byte ptr [rax+rcx+0x5b], 0x5d; pop r12; ret; 
0x000000004683e3: stc; dec dword ptr [rbp-0x77]; ret; 
0x0000000046815b: stc; dec dword ptr [rcx-0x77]; ret far; 
0x0000000047d553: stc; inc dword ptr [rcx+rcx*4-0x2]; mov rdi, rbp; call qword ptr [r14+0x18]; 
0x00000000434b8c: stc; jb short 0x0000000000434b97; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000434c3c: stc; jb short 0x0000000000434c47; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043756c: stc; jb short 0x0000000000437577; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043761c: stc; jb short 0x0000000000437627; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000004451d2: stc; je short 0x0000000000445196; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000044d412: stc; je short 0x000000000044d3d6; lea r10, [r10+r9]; notrack jmp r10; 
0x000000004639c4: stc; jmp qword ptr [rsi+0x2e]; 
0x00000000461310: stc; jmp qword ptr [rsi+0x49]; 
0x0000000046cd6e: stc; jmp qword ptr [rsi+0x66]; 
0x00000000463ad3: stc; jmp qword ptr [rsi+0x66]; 
0x00000000461c5c: stc; jmp qword ptr [rsi+0xf]; 
0x00000000469b4c: stc; jmp qword ptr [rsi-0x70]; 
0x0000000045430f: stc; lea rax, [rdi+rdx]; vzeroupper; ret; 
0x00000000436668: stc; mov [rdi-0x4], ecx; ret; 
0x000000004500c7: stc; mov [rdi], rcx; mov [rdi+rdx-0x7], r9; vzeroupper; ret; 
0x00000000436662: stc; mov ecx, [rsi-0x4]; mov [rdi-0x7], edx; mov [rdi-0x4], ecx; ret; 
0x0000000047bbe4: stc; notrack jmp rcx; 
0x0000000042f797: stc; or [rax], eax; add [rbp-0x77], cl; ret far; 
0x0000000045f547: stc; ret far; 
0x0000000043efc8: stc; vmovups [rdi-0x200], zmm15; ret; 
0x000000004500cf: stc; vzeroupper; ret; 
0x00000000477973: std; add al, [rax]; add [rcx-0x8ef63], cl; dec dword ptr [rax-0x77]; ret far; 
0x0000000047875f: std; add cl, [rcx+rcx*4-0x16]; call qword ptr [rax+0x38]; 
0x0000000045c6b1: std; add eax, 0x894c0000; and al, 0x8; mov rdi, [r8]; call rbx; 
0x0000000040fac6: std; add r15, r12; call rax; 
0x00000000429497: std; call far fword ptr [rdx+0x31]; 
0x00000000480cd4: std; call qword ptr [rax+0x31f1894c]; 
0x000000004828d1: std; call qword ptr [rax-0x1107a3a]; 
0x0000000048042d: std; call qword ptr [rax-0x5e1f00d]; 
0x00000000421424: std; dec dword ptr [rax-0x77]; ret; 
0x0000000047f13e: std; dec dword ptr [rcx-0x75]; cmp al, 0x24; movzx esi, bl; call rbp; 
0x0000000044509f: std; inc byte ptr [rip-0x75f37500]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000043464c: std; jb short 0x0000000000434657; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000004346fc: std; jb short 0x0000000000434707; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043702c: std; jb short 0x0000000000437037; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000004370dc: std; jb short 0x00000000004370e7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000048c922: std; jbe short 0x000000000048c930; ret; 
0x0000000046b78c: std; je short 0x000000000046b7a8; pop rbx; ret; 
0x0000000045728e: std; jg short 0x00000000004572db; jmp qword ptr [rdx-0x2f]; 
0x0000000048296e: std; jmp far fword ptr [rdi+0x41]; 
0x0000000045e4a0: std; jmp far fword ptr [rdi-0x45]; 
0x00000000428334: std; jmp qword ptr [rsi+0x2e]; 
0x00000000421b72: std; jmp qword ptr [rsi+0x66]; 
0x000000004857ae: std; jmp qword ptr [rsi+0x66]; 
0x000000004801cf: std; jmp qword ptr [rsi+0xf]; 
0x0000000047e66c: std; jmp qword ptr [rsi-0x70]; 
0x0000000047fed1: std; jmp qword ptr [rsp+rax*2-0x77]; 
0x000000004542eb: std; lea rax, [rdi+rdx]; vzeroupper; ret; 
0x000000004542e7: std; mov [rdi+rdx-0x3], ecx; lea rax, [rdi+rdx]; vzeroupper; ret; 
0x000000004500b7: std; mov [rdi+rdx-0x3], ecx; vzeroupper; ret; 
0x00000000435e8b: std; mov [rdi-0x2], cx; ret; 
0x00000000435e83: std; mov cx, [rsi-0x2]; mov [rdi-0x3], dx; mov [rdi-0x2], cx; ret; 
0x0000000045a037: std; mov rdi, rbp; mov eax, 0x4f; syscall; 
0x000000004567bc: std; rep movsb [rdi], [rsi]; cld; ret; 
0x0000000046130e: std; stc; jmp qword ptr [rsi+0x49]; 
0x0000000046d38b: std; test rax, rax; je short 0x000000000046d393; call rax; 
0x00000000457204: std; vmovdqu64 [r11], zmm4; vzeroupper; ret; 
0x000000004570ee: std; vmovdqu64 [rdi+rdx-0x100], zmm7; vzeroupper; ret; 
0x0000000043ecf8: std; vmovups [r9-0x80], zmm14; vmovups [r9-0x40], zmm15; ret; 
0x0000000043eabe: std; vmovups [r9-0x80], zmm6; vmovups [r9-0x40], zmm7; ret; 
0x000000004564f6: std; vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x000000004500bb: std; vzeroupper; ret; 
0x0000000042ce63: std; xlat [rbx]; ret far; 
0x00000000431ea1: std; xlat [rbx]; ret; 
0x00000000431dce: std; xlat [rbx]; rol dword ptr [rbp+0x311b75c0], 0xc0; vzeroupper; ret; 
0x0000000049b872: sti; call far fword ptr [rbx+0x4c]; 
0x0000000049b871: sti; call far fword ptr [rbx+0x4c]; 
0x0000000049bbad: sti; call qword ptr [rax+0x30658b4c]; 
0x00000000471afd: sti; clc; jmp qword ptr [rsi-0x7f]; 
0x0000000046f3c8: sti; dec dword ptr [rcx+rcx*4+0x65]; mov eax, 0xfffdd4e9; jmp qword ptr [rbx+rcx*4+0x4]; 
0x000000004348ec: sti; jb short 0x00000000004348f7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043499c: sti; jb short 0x00000000004349a7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000004372cc: sti; jb short 0x00000000004372d7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043737c: sti; jb short 0x0000000000437387; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000428691: sti; jmp far fword ptr [rcx]; 
0x000000004286a1: sti; jmp far fword ptr [rdi-0x78f10000]; 
0x0000000046d3c4: sti; jmp qword ptr [rsi+0x2e]; 
0x0000000046c138: sti; jmp qword ptr [rsi+0xf]; 
0x00000000436268: sti; mov [rdi-0x4], ecx; ret; 
0x00000000436262: sti; mov ecx, [rsi-0x4]; mov [rdi-0x5], edx; mov [rdi-0x4], ecx; ret; 
0x000000004849e1: sti; ret; 
0x000000004214e0: sti; std; dec dword ptr [rax-0x77]; ret; 
0x0000000047d5ce: sti; test byte ptr [rdi], 0x2; jne short 0x000000000047d648; mov rax, [rax+0xe0]; call qword ptr [rax+0x68]; 
0x0000000043efb9: sti; vmovups [rdi-0x180], zmm13; vmovups [rdi-0x1c0], zmm14; vmovups [rdi-0x200], zmm15; ret; 
0x000000004598da: stosb [rdi]; add rax, rdx; notrack jmp rax; 
0x000000004574f8: stosb [rdi]; mov rax, rdx; ret; 
0x00000000423072: stosb [rdi]; nop [rax+rax]; call rax; 
0x0000000044f864: stosd [rdi]; fimul st, dword ptr [rax+0xf]; mov esp, 0xd00148d2; sub rax, rdi; ret; 
0x000000004251e4: stosd [rdi]; pop rbp; ret; 
0x0000000045f590: stosd [rdi]; ret far; 
0x000000004683e1: stosd [rdi]; scasb [rdi]; stc; dec dword ptr [rbp-0x77]; ret; 
0x0000000048a949: stosd [rdi]; xor eax, eax; ret; 
0x000000004251e3: stosq [rdi]; pop rbp; ret; 
0x00000000419eee: sub [r13-0x7b], r8b; shl byte ptr [rbx+rbp*2+0x49], 0x2b; and [r8+0x1], r9b; ret; 
0x00000000411572: sub [r15+rcx-0x4a], r8b; ret; 
0x0000000045d893: sub [r9], r8b; ret; 
0x0000000047bbd6: sub [rax-0x73], ecx; cmp eax, 0x379fe; movsxd rcx, [rdi+rcx*4]; add rcx, rdi; notrack jmp rcx; 
0x000000004685e2: sub [rax-0x75], cl; je short 0x000000000046860b; push rax; mov rdi, [rsp+0x48]; call r13; 
0x00000000469d42: sub [rax-0x75], cl; je short 0x0000000000469d6b; push rax; mov rdi, [rsp+0x48]; call r13; 
0x0000000045badf: sub [rax-0x75], cl; jge short 0x000000000045bae4; call rbx; 
0x0000000048b037: sub [rax-0x77], cl; fmul st, qword ptr [rax-0x75]; sbb al, 0x24; add rsp, 0x30; bnd jmp r11; 
0x000000004244b5: sub [rax-0x7d], cl; call qword ptr [rsi+rsi*2]; 
0x00000000478d59: sub [rax], al; add [rax-0x7d], cl; ret; 
0x0000000046dfb4: sub [rax], al; add [rax], al; jne 0x000000000046e056; add rsp, 0x98; ret; 
0x0000000048f33e: sub [rax], al; add [rax], al; jne 0x000000000048f3c5; leave; ret; 
0x00000000410f96: sub [rax], al; add [rax], al; jne short 0x0000000000410fa4; add rsp, 0xd8; ret; 
0x00000000411054: sub [rax], al; add [rax], al; jne short 0x0000000000411062; add rsp, 0xd8; ret; 
0x00000000459c37: sub [rax], al; add [rax], al; jne short 0x0000000000459c51; add rsp, 0x28; ret; 
0x0000000045a7a7: sub [rax], al; add [rax], al; jne short 0x000000000045a7f3; add rsp, 0x68; ret; 
0x0000000045a836: sub [rax], al; add [rax], al; jne short 0x000000000045a883; add rsp, 0x18; ret; 
0x0000000045a8ee: sub [rax], al; add [rax], al; jne short 0x000000000045a93b; add rsp, 0x58; ret; 
0x0000000045a98c: sub [rax], al; add [rax], al; jne short 0x000000000045a9db; add rsp, 0x58; ret; 
0x0000000045ab9a: sub [rax], al; add [rax], al; jne short 0x000000000045aba5; add rsp, 0x28; ret; 
0x0000000046dc41: sub [rax], al; add [rax], al; jne short 0x000000000046dc4c; add rsp, 0x18; ret; 
0x0000000046fee1: sub [rax], al; add [rax], al; jne short 0x000000000046ff05; add rsp, 0x38; ret; 
0x00000000475694: sub [rax], al; add [rax], al; jne short 0x00000000004756a2; add rsp, 0xd8; ret; 
0x0000000048cc35: sub [rax], al; add [rax], al; jne short 0x000000000048cc63; add rsp, 0x38; ret; 
0x0000000048cd01: sub [rax], al; add [rax], al; jne short 0x000000000048cd34; add rsp, 0x58; ret; 
0x0000000048ce73: sub [rax], al; add [rax], al; jne short 0x000000000048ceb4; add rsp, 0x68; ret; 
0x0000000048d191: sub [rax], al; add [rax], al; jne short 0x000000000048d1c4; add rsp, 0x58; ret; 
0x0000000048fe38: sub [rax], al; add [rax], al; jne short 0x000000000048fe43; add rsp, 0x28; ret; 
0x0000000048ff26: sub [rax], al; add [rax], al; jne short 0x000000000048ff31; add rsp, 0x38; ret; 
0x00000000493ea1: sub [rax], al; add [rax], al; jne short 0x0000000000493eac; add rsp, 0x38; ret; 
0x00000000418e60: sub [rax], al; add bl, ch; ret; 
0x0000000040513a: sub [rbp+0x9], al; ret; 
0x00000000419eef: sub [rbp-0x7b], al; shl byte ptr [rbx+rbp*2+0x49], 0x2b; and [r8+0x1], r9b; ret; 
0x0000000046f63f: sub [rbx+0x5cc992d], al; add [rcx], al; xor eax, eax; add rsp, 0x8; ret; 
0x00000000458cc3: sub [rbx+0x5d], bl; pop r12; pop r13; ret; 
0x00000000493c08: sub [rbx-0x1b], dh; mov eax, 0x1; ret; 
0x00000000493c07: sub [rbx-0x1b], sil; mov eax, 0x1; ret; 
0x00000000428314: sub [rcx+rcx*4-0x19], cl; call rax; 
0x0000000041809c: sub [rcx+rcx*4-0x40], al; pop rbx; pop rbp; ret; 
0x0000000048d6d8: sub [rcx-0x3b76b310], cl; mov rbp, r9; nop; jmp rdx; 
0x00000000464fcb: sub [rcx-0x77], cl; ret; 
0x0000000045d894: sub [rcx], al; ret; 
0x000000004805cd: sub [rcx], dh; ror byte ptr [rax-0x77], 0xe2; mov eax, 0x10; syscall; 
0x000000004344b8: sub [rdi+0x10], ebx; jb short 0x00000000004344c6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000434608: sub [rdi+0x10], ebx; jb short 0x0000000000434616; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000434758: sub [rdi+0x10], ebx; jb short 0x0000000000434766; movaps [rdi], xmm4; notrack jmp r9; 
0x000000004348a8: sub [rdi+0x10], ebx; jb short 0x00000000004348b6; movaps [rdi], xmm4; notrack jmp r9; 
0x000000004349f8: sub [rdi+0x10], ebx; jb short 0x0000000000434a06; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000434b48: sub [rdi+0x10], ebx; jb short 0x0000000000434b56; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000434c98: sub [rdi+0x10], ebx; jb short 0x0000000000434ca6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000434de8: sub [rdi+0x10], ebx; jb short 0x0000000000434df6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000434f38: sub [rdi+0x10], ebx; jb short 0x0000000000434f46; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000435088: sub [rdi+0x10], ebx; jb short 0x0000000000435096; movaps [rdi], xmm4; notrack jmp r9; 
0x000000004351d8: sub [rdi+0x10], ebx; jb short 0x00000000004351e6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000435328: sub [rdi+0x10], ebx; jb short 0x0000000000435336; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000435478: sub [rdi+0x10], ebx; jb short 0x0000000000435486; movaps [rdi], xmm4; notrack jmp r9; 
0x000000004355c8: sub [rdi+0x10], ebx; jb short 0x00000000004355d6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000435718: sub [rdi+0x10], ebx; jb short 0x0000000000435726; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000436e98: sub [rdi+0x10], ebx; jb short 0x0000000000436ea6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000436fe8: sub [rdi+0x10], ebx; jb short 0x0000000000436ff6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000437138: sub [rdi+0x10], ebx; jb short 0x0000000000437146; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000437288: sub [rdi+0x10], ebx; jb short 0x0000000000437296; movaps [rdi], xmm4; notrack jmp r9; 
0x000000004373d8: sub [rdi+0x10], ebx; jb short 0x00000000004373e6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000437528: sub [rdi+0x10], ebx; jb short 0x0000000000437536; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000437678: sub [rdi+0x10], ebx; jb short 0x0000000000437686; movaps [rdi], xmm4; notrack jmp r9; 
0x000000004377c8: sub [rdi+0x10], ebx; jb short 0x00000000004377d6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000437918: sub [rdi+0x10], ebx; jb short 0x0000000000437926; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000437a68: sub [rdi+0x10], ebx; jb short 0x0000000000437a76; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000437bb8: sub [rdi+0x10], ebx; jb short 0x0000000000437bc6; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000437d08: sub [rdi+0x10], ebx; jb short 0x0000000000437d16; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000437e58: sub [rdi+0x10], ebx; jb short 0x0000000000437e66; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000437fa8: sub [rdi+0x10], ebx; jb short 0x0000000000437fb6; movaps [rdi], xmm4; notrack jmp r9; 
0x000000004380f8: sub [rdi+0x10], ebx; jb short 0x0000000000438106; movaps [rdi], xmm4; notrack jmp r9; 
0x000000004176e4: sub [rdi+0x29], esi; movzx eax, al; movsxd rax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x0000000047bb3f: sub [rdi+0xe], esi; movsxd rax, [rdi+rax*4]; add rax, rdi; notrack jmp rax; 
0x00000000411573: sub [rdi+rcx-0x4a], al; ret; 
0x00000000434414: sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000434410: sub [rdi-0x20], esp; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043440a: sub [rdi-0x30], ebx; jb short 0x000000000043441d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043455a: sub [rdi-0x30], ebx; jb short 0x000000000043456d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x000000004346aa: sub [rdi-0x30], ebx; jb short 0x00000000004346bd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x000000004347fa: sub [rdi-0x30], ebx; jb short 0x000000000043480d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043494a: sub [rdi-0x30], ebx; jb short 0x000000000043495d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000434a9a: sub [rdi-0x30], ebx; jb short 0x0000000000434aad; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000434bea: sub [rdi-0x30], ebx; jb short 0x0000000000434bfd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000434d38: sub [rdi-0x30], ebx; jb short 0x0000000000434d50; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000434e8a: sub [rdi-0x30], ebx; jb short 0x0000000000434e9d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000434fda: sub [rdi-0x30], ebx; jb short 0x0000000000434fed; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043512a: sub [rdi-0x30], ebx; jb short 0x000000000043513d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043527a: sub [rdi-0x30], ebx; jb short 0x000000000043528d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x000000004353ca: sub [rdi-0x30], ebx; jb short 0x00000000004353dd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043551a: sub [rdi-0x30], ebx; jb short 0x000000000043552d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043566a: sub [rdi-0x30], ebx; jb short 0x000000000043567d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000436dea: sub [rdi-0x30], ebx; jb short 0x0000000000436dfd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000436f3a: sub [rdi-0x30], ebx; jb short 0x0000000000436f4d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043708a: sub [rdi-0x30], ebx; jb short 0x000000000043709d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x000000004371da: sub [rdi-0x30], ebx; jb short 0x00000000004371ed; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043732a: sub [rdi-0x30], ebx; jb short 0x000000000043733d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043747a: sub [rdi-0x30], ebx; jb short 0x000000000043748d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x000000004375ca: sub [rdi-0x30], ebx; jb short 0x00000000004375dd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000437718: sub [rdi-0x30], ebx; jb short 0x0000000000437730; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043786a: sub [rdi-0x30], ebx; jb short 0x000000000043787d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x000000004379ba: sub [rdi-0x30], ebx; jb short 0x00000000004379cd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000437b0a: sub [rdi-0x30], ebx; jb short 0x0000000000437b1d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000437c5a: sub [rdi-0x30], ebx; jb short 0x0000000000437c6d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000437daa: sub [rdi-0x30], ebx; jb short 0x0000000000437dbd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000437efa: sub [rdi-0x30], ebx; jb short 0x0000000000437f0d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043804a: sub [rdi-0x30], ebx; jb short 0x000000000043805d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000485fd0: sub [rdi], cl; xchg ebp, eax; ret; 
0x000000004176e6: sub [rdi], ecx; mov dh, 0xc0; movsxd rax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x000000004344be: sub [rdi], esp; notrack jmp r9; 
0x00000000430447: sub [rip-0x76b30000], ecx; ret far; 
0x000000004343ab: sub [rsi-0x1], cl; jb short 0x00000000004343b7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043445b: sub [rsi-0x1], cl; jb short 0x0000000000434467; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000436d8b: sub [rsi-0x1], cl; jb short 0x0000000000436d97; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000436e3b: sub [rsi-0x1], cl; jb short 0x0000000000436e47; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000004344fb: sub [rsi-0x2], cl; jb short 0x0000000000434507; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000004345ab: sub [rsi-0x2], cl; jb short 0x00000000004345b7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000436edb: sub [rsi-0x2], cl; jb short 0x0000000000436ee7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000436f8b: sub [rsi-0x2], cl; jb short 0x0000000000436f97; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043464b: sub [rsi-0x3], cl; jb short 0x0000000000434657; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000004346fb: sub [rsi-0x3], cl; jb short 0x0000000000434707; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043702b: sub [rsi-0x3], cl; jb short 0x0000000000437037; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000004370db: sub [rsi-0x3], cl; jb short 0x00000000004370e7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043479b: sub [rsi-0x4], cl; jb short 0x00000000004347a7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043484b: sub [rsi-0x4], cl; jb short 0x0000000000434857; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043717b: sub [rsi-0x4], cl; jb short 0x0000000000437187; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043722b: sub [rsi-0x4], cl; jb short 0x0000000000437237; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000004348eb: sub [rsi-0x5], cl; jb short 0x00000000004348f7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043499b: sub [rsi-0x5], cl; jb short 0x00000000004349a7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000004372cb: sub [rsi-0x5], cl; jb short 0x00000000004372d7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043737b: sub [rsi-0x5], cl; jb short 0x0000000000437387; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000434a3b: sub [rsi-0x6], cl; jb short 0x0000000000434a47; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000434aeb: sub [rsi-0x6], cl; jb short 0x0000000000434af7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043741b: sub [rsi-0x6], cl; jb short 0x0000000000437427; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000004374cb: sub [rsi-0x6], cl; jb short 0x00000000004374d7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000434b8b: sub [rsi-0x7], cl; jb short 0x0000000000434b97; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000434c3b: sub [rsi-0x7], cl; jb short 0x0000000000434c47; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043756b: sub [rsi-0x7], cl; jb short 0x0000000000437577; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043761b: sub [rsi-0x7], cl; jb short 0x0000000000437627; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000434cdb: sub [rsi-0x8], cl; jb short 0x0000000000434ce7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000434d8b: sub [rsi-0x8], cl; jb short 0x0000000000434d97; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000004376bb: sub [rsi-0x8], cl; jb short 0x00000000004376c7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043776b: sub [rsi-0x8], cl; jb short 0x0000000000437777; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000434e2b: sub [rsi-0x9], cl; jb short 0x0000000000434e37; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000434edb: sub [rsi-0x9], cl; jb short 0x0000000000434ee7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043780b: sub [rsi-0x9], cl; jb short 0x0000000000437817; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000004378bb: sub [rsi-0x9], cl; jb short 0x00000000004378c7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000434f7b: sub [rsi-0xa], cl; jb short 0x0000000000434f87; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043502b: sub [rsi-0xa], cl; jb short 0x0000000000435037; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043795b: sub [rsi-0xa], cl; jb short 0x0000000000437967; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000437a0b: sub [rsi-0xa], cl; jb short 0x0000000000437a17; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000004350cb: sub [rsi-0xb], cl; jb short 0x00000000004350d7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043517b: sub [rsi-0xb], cl; jb short 0x0000000000435187; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000437aab: sub [rsi-0xb], cl; jb short 0x0000000000437ab7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000437b5b: sub [rsi-0xb], cl; jb short 0x0000000000437b67; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043521b: sub [rsi-0xc], cl; jb short 0x0000000000435227; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000004352cb: sub [rsi-0xc], cl; jb short 0x00000000004352d7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000437bfb: sub [rsi-0xc], cl; jb short 0x0000000000437c07; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000437cab: sub [rsi-0xc], cl; jb short 0x0000000000437cb7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043536b: sub [rsi-0xd], cl; jb short 0x0000000000435377; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043541b: sub [rsi-0xd], cl; jb short 0x0000000000435427; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000437d4b: sub [rsi-0xd], cl; jb short 0x0000000000437d57; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000437dfb: sub [rsi-0xd], cl; jb short 0x0000000000437e07; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000004354bb: sub [rsi-0xe], cl; jb short 0x00000000004354c7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043556b: sub [rsi-0xe], cl; jb short 0x0000000000435577; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000437e9b: sub [rsi-0xe], cl; jb short 0x0000000000437ea7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000437f4b: sub [rsi-0xe], cl; jb short 0x0000000000437f57; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043560b: sub [rsi-0xf], cl; jb short 0x0000000000435617; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000004356bb: sub [rsi-0xf], cl; jb short 0x00000000004356c7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000437feb: sub [rsi-0xf], cl; jb short 0x0000000000437ff7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043809b: sub [rsi-0xf], cl; jb short 0x00000000004380a7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000040f779: sub [rsp+0xc0], eax; movaps [rsp+0xd0], xmm0; movaps [rsp+0xe0], xmm0; movaps [rsp+0xf0], xmm0; syscall; 
0x0000000040f781: sub [rsp+0xd0], eax; movaps [rsp+0xe0], xmm0; movaps [rsp+0xf0], xmm0; syscall; 
0x0000000040f789: sub [rsp+0xe0], eax; movaps [rsp+0xf0], xmm0; syscall; 
0x0000000040f791: sub [rsp+0xf0], eax; syscall; 
0x00000000458274: sub [rsp+rax+0x3d8d4800], ebx; xor [rsp+rax-0x4ff31800], ebx; cli; jmp qword ptr [rsi+0x2e]; 
0x0000000049ca32: sub ah, dl; sti; jmp qword ptr [rsi+0x2e]; 
0x0000000047ebd0: sub al, 0x1; add [rax], al; bsr rsi, rsi; lea rax, [rdi+rsi]; ret; 
0x00000000457736: sub al, 0x72; add cl, [rax+0x77f8c50f]; ret; 
0x000000004333c3: sub al, 0xa; add [rax], al; xor eax, eax; ret; 
0x0000000048f64b: sub al, 0xc7; add al, [rax]; add [rax], al; add [rax+0x1], bh; ret; 
0x000000004854f4: sub al, 0xfa; dec dword ptr [rcx-0x77]; ret; 
0x00000000432785: sub al, ch; std; xlat [rbx]; ret; 
0x0000000045a78d: sub bh, [rax+0x48]; syscall; 
0x00000000421422: sub bh, ah; std; dec dword ptr [rax-0x77]; ret; 
0x00000000490a3c: sub bh, dh; call qword ptr [rax-0x5e1f00d]; 
0x0000000046087f: sub bh, dl; jmp qword ptr [rsi+0x2e]; 
0x0000000047a690: sub cl, ch; push rdx; in eax, 0xff; jmp qword ptr [rsi+0x2e]; 
0x00000000411df9: sub dh, al; add [rcx-0x7d], cl; ret; 
0x00000000474a65: sub dh, al; add [rip-0xb9517], ch; jmp qword ptr [rsi-0x70]; 
0x00000000448d74: sub dl, al; add eax, 0x8a0c8b00; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000048b06e: sub dl, dh; call r11; 
0x0000000041cf3f: sub dword ptr [rax+rax-0x76b80000], 0xffffffef; call qword ptr [r13+0x20]; 
0x000000004801f4: sub dword ptr [rbx+0x4], 0x1; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000046cfbc: sub dword ptr [rdi+0x3], 0x62cbe800; stc; jmp qword ptr [rsi+0x66]; 
0x000000004756da: sub dword ptr [rdi], 0x1; ret; 
0x00000000475542: sub dword ptr [rip+0x56da7], 0x1; mov eax, r8d; pop rbx; ret; 
0x00000000475541: sub dword ptr [rip+0x56da7], 0x1; mov eax, r8d; pop rbx; ret; 
0x0000000046f640: sub dword ptr [rip+0x5cc99], 0x1; xor eax, eax; add rsp, 0x8; ret; 
0x0000000042551c: sub dword ptr [rip+0xa463d], 0x1; pop rbp; ret; 
0x000000004266cf: sub dword ptr [rip+0xa598a], 0x1; pop rbx; ret; 
0x00000000420c9c: sub dword ptr [rip+0xab34d], 0x1; ret; 
0x0000000041e4d0: sub dword ptr [rip+0xadb19], 0x1; ret; 
0x00000000410721: sub dword ptr [rip+0xbc3e7], 0x1; add rsp, 0x10; mov eax, r8d; pop rbx; ret; 
0x00000000410722: sub dword ptr [rip+0xbc3e7], 0x1; add rsp, 0x10; mov eax, r8d; pop rbx; ret; 
0x00000000433ba6: sub dword ptr [rip-0xcfffffe], 0xf; outsd dx, [rsi]; push rdi; ret; 
0x00000000430301: sub dword ptr [rsi+0xe], 0x0; add [rcx+0x29], cl; ret far; 
0x0000000041c03d: sub dword ptr [rsi], 0x3; add [rax], al; xor edx, edx; mov rdi, rbp; call qword ptr [rax+0x80]; 
0x0000000042888a: sub eax, 0x10; ret; 
0x0000000042171c: sub eax, 0x11; shr rax, 0x4; lea rdx, [rax+0x1]; mov [rip+0xa83e2], rdx; ret; 
0x0000000046b79c: sub eax, 0x1; mov [rdx+0x8], eax; pop rbx; ret; 
0x0000000041fddb: sub eax, 0x1; ret; 
0x00000000414e80: sub eax, 0x20; cdqe; movzx eax, byte ptr [rbx+rax]; jmp qword ptr [rsi+rax*8]; 
0x000000004145df: sub eax, 0x20; cdqe; movzx eax, byte ptr [rbx+rax]; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000041212c: sub eax, 0x20; cdqe; movzx eax, byte ptr [rdi+rax]; jmp qword ptr [rsi+rax*8]; 
0x00000000414c31: sub eax, 0x20; cdqe; movzx edx, byte ptr [rbx+rax]; lea rax, [rip+0xb19df]; jmp qword ptr [rax+rdx*8]; 
0x00000000414a2e: sub eax, 0x20; cdqe; movzx edx, byte ptr [rbx+rax]; lea rax, [rip+0xb1ae2]; jmp qword ptr [rax+rdx*8]; 
0x0000000046c20f: sub eax, 0x480005ca; mov eax, [rax+rbp*8]; test rax, rax; je short 0x000000000046c21e; call rax; 
0x000000004293be: sub eax, 0x4802000a; lea eax, [rip+0x1067]; lea rdx, [rip+0x2760]; cmovne rax, rdx; ret; 
0x0000000042935e: sub eax, 0x4840000a; lea eax, [rip+0x25947]; lea rdx, [rip+0x2aff0]; cmovne rax, rdx; ret; 
0x0000000045c1f7: sub eax, 0x4c00000a; mov [rsp+0x8], eax; mov rdi, [r8]; call rbx; 
0x00000000475543: sub eax, 0x56da7; add [rcx+rcx*4-0x40], eax; pop rbx; ret; 
0x0000000048cd06: sub eax, 0x58c48348; ret; 
0x0000000042551d: sub eax, 0xa463d; add [rbp-0x3d], ebx; nop [rax]; ret; 
0x00000000474a68: sub eax, 0xfff46ae9; jmp qword ptr [rsi-0x70]; 
0x0000000043260f: sub eax, 0xffff; jne 0x0000000000432520; ret; 
0x0000000043275c: sub eax, 0xffffffff; jne 0x0000000000432520; vzeroupper; ret; 
0x00000000432517: sub eax, 0xffffffff; jne short 0x0000000000432520; vzeroupper; ret; 
0x0000000048c96a: sub eax, [0x0]; ret; 
0x0000000045807e: sub eax, [r8+r9*4]; je short 0x0000000000458060; ret; 
0x0000000045807f: sub eax, [rax+rcx*4]; je short 0x0000000000458060; ret; 
0x00000000403543: sub eax, [rbx+0x8]; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000411da9: sub eax, [rcx+0xf]; mov dh, 0x46; or al, 0x83; ret; 
0x00000000458020: sub eax, [rcx+r8*4]; je short 0x0000000000458008; ret; 
0x00000000458021: sub eax, [rcx+rax*4]; je short 0x0000000000458008; ret; 
0x00000000421632: sub eax, [rdi+0x18]; ret; 
0x0000000045bcd7: sub eax, [rdx]; add [rax], al; mov rdi, [r14]; call rbx; 
0x00000000420887: sub eax, [rsi+0x10]; ret; 
0x0000000048f7c3: sub eax, eax; mov [rdx], eax; mov eax, 0x2; ret; 
0x0000000048c026: sub eax, eax; ret; 
0x0000000041036a: sub eax, ebx; shr rax, 0x3; lea r12, [rbx+rax*8+0x8]; nop [rax]; call qword ptr [rbx]; 
0x00000000432563: sub eax, ecx; je short 0x0000000000432570; sbb eax, eax; or eax, 0x1; ret; 
0x0000000048f695: sub eax, ecx; mov [rdx], eax; mov eax, 0x1; ret; 
0x0000000042b85c: sub eax, ecx; ret; 
0x0000000041fdd9: sub eax, ecx; sub eax, 0x1; ret; 
0x0000000042d0df: sub eax, ecx; vzeroupper; ret; 
0x0000000044f6a9: sub eax, edi; ret; 
0x0000000045924e: sub eax, edi; shr rax, 0x2; ret; 
0x0000000041caf1: sub eax, edx; pop rbp; pop r12; ret; 
0x000000004558c7: sub eax, edx; ret; 
0x000000004208af: sub eax, edx; ret; 
0x000000004558d7: sub eax, edx; ret; 
0x00000000459379: sub eax, edx; shr rax, 0x2; vzeroupper; ret; 
0x0000000042cde2: sub eax, edx; vzeroupper; ret; 
0x0000000041cf39: sub eax, esp; cmp rax, rbx; jae 0x000000000041cff0; mov rdi, rbp; call qword ptr [r13+0x20]; 
0x0000000041d23e: sub eax, esp; cmp rbx, rax; jbe 0x000000000041d2f0; mov rdi, rbp; call qword ptr [r13+0x20]; 
0x0000000048f7c2: sub eax, r8d; mov [rdx], eax; mov eax, 0x2; ret; 
0x0000000048c025: sub eax, r8d; ret; 
0x0000000047fecd: sub ebp, eax; test al, 0xfd; jmp qword ptr [rsp+rax*2-0x77]; 
0x00000000415c49: sub ebp, ecx; imul edi, ebx, 0xffffffff; call qword ptr [rax+0x188d8944]; 
0x000000004753e7: sub ebx, [rbx+0x5d]; pop r12; pop r13; ret; 
0x00000000478c58: sub ebx, eax; sar rbx, 0x2; mov rdx, rbx; call qword ptr [rax+0x38]; 
0x0000000042a013: sub ebx, ecx; add al, [rax]; cmove rax, rdx; ret; 
0x00000000478758: sub ebx, esi; mov r13, rbx; sar r13, 0x2; mov rdx, r13; call qword ptr [rax+0x38]; 
0x00000000493c02: sub ecx, [rax+0x10]; cmp rcx, [rax+0x28]; jae short 0x0000000000493bf0; mov eax, 0x1; ret; 
0x0000000048e5d2: sub ecx, [rax-0x7d]; ret; 
0x000000004594e4: sub ecx, [rcx+rcx*4-0x40]; shr rax, 0x2; vzeroupper; ret; 
0x0000000044fc54: sub ecx, [rcx+rcx*4-0x40]; vzeroupper; ret; 
0x0000000045c189: sub ecx, [rcx]; add [rax], al; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000047df09: sub ecx, eax; sar rcx, 0x2; lea eax, [rcx-0x1]; ret; 
0x00000000448ee8: sub ecx, ecx; lea r10, [rip+0x58a0f]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000446888: sub ecx, ecx; lea r10, [rip+0x5b02f]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x000000004414d8: sub ecx, ecx; lea r10, [rip+0x6030f]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000043f288: sub ecx, ecx; lea r10, [rip+0x6251f]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000042eae8: sub ecx, ecx; lea r10, [rip+0x71d4f]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000042d288: sub ecx, ecx; lea r10, [rip+0x7356f]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000042bbb8: sub ecx, ecx; lea r10, [rip+0x74bff]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000042a4b8: sub ecx, ecx; lea r10, [rip+0x762bf]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000041d6da: sub ecx, edx; cmp rax, rcx; jbe 0x000000000041d7d0; mov rdi, rbx; call qword ptr [r12+0x88]; 
0x0000000041f56a: sub ecx, edx; cmp rax, rcx; jbe 0x000000000041f718; mov rdi, rbx; call qword ptr [rbp+0x20]; 
0x0000000041f7a3: sub ecx, edx; cmp rax, rcx; jbe 0x000000000041f878; mov rdi, rbx; call qword ptr [r13+0x60]; 
0x0000000041df4a: sub ecx, edx; cmp rax, rcx; jbe short 0x000000000041df88; mov rdi, rbp; call qword ptr [rbx+0x88]; 
0x0000000041f1a3: sub ecx, edx; cmp rax, rcx; jbe short 0x000000000041f210; mov rdi, rbx; call qword ptr [rbp+0x68]; 
0x0000000041f259: sub ecx, edx; cmp rax, rcx; jbe short 0x000000000041f288; mov rdi, rbx; call qword ptr [rbp+0x20]; 
0x0000000041fce9: sub ecx, edx; cmp rax, rcx; jbe short 0x000000000041fd20; mov rdi, rbx; call qword ptr [rbp+0x30]; 
0x0000000047de1e: sub ecx, edx; cmp rax, rcx; jbe short 0x000000000047de50; mov rdi, rbx; call qword ptr [rbp+0x30]; 
0x00000000436d63: sub edi, 0x20; lea r11, [rip+0x69e53]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434383: sub edi, 0x20; lea r11, [rip+0x6c673]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000436c72: sub edi, 0x40; lea r11, [rip+0x69f44]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000436bb3: sub edi, 0x40; lea r11, [rip+0x6a003]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434292: sub edi, 0x40; lea r11, [rip+0x6c764]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004341d3: sub edi, 0x40; lea r11, [rip+0x6c823]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000045a81c: sub edi, [rax+0x48]; syscall; 
0x000000004147e5: sub edi, eax; mov rdx, r15; call qword ptr [rax+0x38]; 
0x00000000414240: sub edi, ebp; mov rdx, r15; call qword ptr [rax+0x38]; 
0x0000000041b769: sub edi, ecx; cmp rax, rdi; jbe short 0x000000000041b790; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x0000000047db80: sub edi, edx; cmp rax, rdi; jbe 0x000000000047dd40; mov rdi, r13; call qword ptr [r14+0x20]; 
0x0000000043dadf: sub edi, edx; lea r11, [rip+0x63798]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043afab: sub edi, edx; lea r11, [rip+0x65dcc]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004908ed: sub edi, esi; push rbx; nop edx, edi; ret; 
0x000000004934d3: sub edx, 0x1; cmp r8b, 0x1; sbb esi, esi; and esi, 0x2; syscall; 
0x000000004393a1: sub edx, 0x40; lea r11, [rip+0x67815]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439485: sub edx, 0x80; movsxd r9, [r11+r9*4]; add r9, r11; notrack jmp r9; 
0x0000000042881e: sub edx, 0x8; and eax, 0x1; cmovne rax, rdx; ret; 
0x000000004208b8: sub edx, [rax+0x10]; mov eax, [rdi+0x10]; sub eax, edx; ret; 
0x000000004208a9: sub edx, [rax+0x18]; mov eax, [rdi+0x10]; sub eax, edx; ret; 
0x0000000047dfb2: sub edx, [rcx+0x10]; sar rdx, 0x2; sub eax, edx; ret; 
0x0000000047dfc4: sub edx, [rcx+0x8]; sar rdx, 0x2; sub eax, edx; ret; 
0x0000000043172d: sub edx, eax; jbe 0x00000000004319d0; add rax, rdi; add rax, rcx; ret; 
0x0000000047f30d: sub edx, eax; jbe 0x000000000047f5b0; add rax, rdi; add rax, rcx; ret; 
0x00000000431994: sub edx, eax; jbe short 0x00000000004319d0; add rax, rdi; ret; 
0x000000004319a4: sub edx, eax; jbe short 0x00000000004319d0; lea rax, [rdi+rax+0x10]; ret; 
0x000000004319b4: sub edx, eax; jbe short 0x00000000004319d0; lea rax, [rdi+rax+0x20]; ret; 
0x000000004319c4: sub edx, eax; jbe short 0x00000000004319d0; lea rax, [rdi+rax+0x30]; ret; 
0x0000000047f574: sub edx, eax; jbe short 0x000000000047f5b0; add rax, rdi; ret; 
0x0000000047f584: sub edx, eax; jbe short 0x000000000047f5b0; lea rax, [rdi+rax+0x10]; ret; 
0x0000000047f594: sub edx, eax; jbe short 0x000000000047f5b0; lea rax, [rdi+rax+0x20]; ret; 
0x0000000047f5a4: sub edx, eax; jbe short 0x000000000047f5b0; lea rax, [rdi+rax+0x30]; ret; 
0x00000000453bbc: sub edx, ecx; lea r11, [rip+0x4de7b]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000045358c: sub edx, ecx; lea r11, [rip+0x4e42b]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000041b9ed: sub edx, esi; call qword ptr [r12+0x70]; 
0x000000004193b4: sub edx, esi; call qword ptr [rax+0x70]; 
0x000000004122d8: sub edx, esi; call qword ptr [rbx+0x38]; 
0x000000004563a8: sub edx, esi; cmp edx, ecx; jle short 0x00000000004563c4; movsxd rax, ecx; ret; 
0x00000000419aac: sub edx, esi; mov [rsp+0x8], rcx; mov rdi, r15; call rax; 
0x0000000041c08d: sub edx, esi; mov [rsp], rcx; mov rdi, rbp; call rax; 
0x00000000476921: sub edx, esi; sar rdx, 0x2; call qword ptr [r12+0x38]; 
0x0000000041cce9: sub esi, ecx; mov [rsp], r8; mov edx, 0x1; mov rdi, rbp; call qword ptr [rax+0x80]; 
0x00000000418759: sub esi, edx; cmp rax, rsi; jbe short 0x00000000004187b8; mov rdi, rbx; call qword ptr [rbp+0x60]; 
0x0000000041909a: sub esi, edx; cmp rax, rsi; jbe short 0x0000000000419114; mov rdi, rbx; call qword ptr [rbp+0x68]; 
0x0000000047d2a9: sub esi, edx; cmp rax, rsi; jbe short 0x000000000047d2e8; mov rdi, rbx; call qword ptr [rbp+0x20]; 
0x0000000043d781: sub esi, edx; lea r11, [rip+0x63af6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043d601: sub esi, edx; lea r11, [rip+0x63c76]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043d481: sub esi, edx; lea r11, [rip+0x63df6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043d301: sub esi, edx; lea r11, [rip+0x63f76]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043d181: sub esi, edx; lea r11, [rip+0x640f6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043d001: sub esi, edx; lea r11, [rip+0x64276]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043ce81: sub esi, edx; lea r11, [rip+0x643f6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043cd01: sub esi, edx; lea r11, [rip+0x64576]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043cb81: sub esi, edx; lea r11, [rip+0x646f6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043ca01: sub esi, edx; lea r11, [rip+0x64876]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c881: sub esi, edx; lea r11, [rip+0x649f6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c701: sub esi, edx; lea r11, [rip+0x64b76]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c581: sub esi, edx; lea r11, [rip+0x64cf6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c401: sub esi, edx; lea r11, [rip+0x64e76]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c281: sub esi, edx; lea r11, [rip+0x64ff6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c108: sub esi, edx; lea r11, [rip+0x6516f]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043ac81: sub esi, edx; lea r11, [rip+0x660f6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043ab01: sub esi, edx; lea r11, [rip+0x66276]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043a981: sub esi, edx; lea r11, [rip+0x663f6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043a801: sub esi, edx; lea r11, [rip+0x66576]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043a681: sub esi, edx; lea r11, [rip+0x666f6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043a501: sub esi, edx; lea r11, [rip+0x66876]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043a381: sub esi, edx; lea r11, [rip+0x669f6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043a201: sub esi, edx; lea r11, [rip+0x66b76]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043a081: sub esi, edx; lea r11, [rip+0x66cf6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439f01: sub esi, edx; lea r11, [rip+0x66e76]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439d81: sub esi, edx; lea r11, [rip+0x66ff6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439c01: sub esi, edx; lea r11, [rip+0x67176]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439a81: sub esi, edx; lea r11, [rip+0x672f6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439901: sub esi, edx; lea r11, [rip+0x67476]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439781: sub esi, edx; lea r11, [rip+0x675f6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439608: sub esi, edx; lea r11, [rip+0x6776f]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000041d568: sub esi, edx; mov rdi, rbx; mov edx, 0x1; call qword ptr [r14+0x80]; 
0x0000000049d339: sub esp, 0x8; add rsp, 0x8; ret; 
0x00000000401005: sub esp, 0x8; mov rax, 0x0; test rax, rax; je short 0x0000000000401016; call rax; 
0x0000000047fcfd: sub esp, 0x8; mov rax, [rip+0x48d91]; test rax, rax; je short 0x000000000047fd40; call rax; 
0x0000000047d551: sub esp, ecx; stc; inc dword ptr [rcx+rcx*4-0x2]; mov rdi, rbp; call qword ptr [r14+0x18]; 
0x00000000453591: sub esp, esp; add al, 0x0; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000041423f: sub r15, r13; mov rdx, r15; call qword ptr [rax+0x38]; 
0x000000004147e4: sub r15, r8; mov rdx, r15; call qword ptr [rax+0x38]; 
0x00000000448ee7: sub r9, rcx; lea r10, [rip+0x58a0f]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000446887: sub r9, rcx; lea r10, [rip+0x5b02f]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x000000004414d7: sub r9, rcx; lea r10, [rip+0x6030f]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000043f287: sub r9, rcx; lea r10, [rip+0x6251f]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000042eae7: sub r9, rcx; lea r10, [rip+0x71d4f]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000042d287: sub r9, rcx; lea r10, [rip+0x7356f]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000042bbb7: sub r9, rcx; lea r10, [rip+0x74bff]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000042a4b7: sub r9, rcx; lea r10, [rip+0x762bf]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000428889: sub rax, 0x10; ret; 
0x0000000042171b: sub rax, 0x11; shr rax, 0x4; lea rdx, [rax+0x1]; mov [rip+0xa83e2], rdx; ret; 
0x00000000456253: sub rax, 0x1; ret; 
0x0000000048c969: sub rax, [0x0]; ret; 
0x00000000421631: sub rax, [rdi+0x18]; ret; 
0x0000000048c968: sub rax, fs:[0x0]; ret; 
0x0000000041cf38: sub rax, r12; cmp rax, rbx; jae 0x000000000041cff0; mov rdi, rbp; call qword ptr [r13+0x20]; 
0x0000000041d23d: sub rax, r12; cmp rbx, rax; jbe 0x000000000041d2f0; mov rdi, rbp; call qword ptr [r13+0x20]; 
0x00000000410369: sub rax, rbx; shr rax, 0x3; lea r12, [rbx+rax*8+0x8]; nop [rax]; call qword ptr [rbx]; 
0x00000000432562: sub rax, rcx; je short 0x0000000000432570; sbb eax, eax; or eax, 0x1; ret; 
0x0000000041fdd8: sub rax, rcx; sub eax, 0x1; ret; 
0x0000000044f6a8: sub rax, rdi; ret; 
0x0000000045924d: sub rax, rdi; shr rax, 0x2; ret; 
0x0000000041caf0: sub rax, rdx; pop rbp; pop r12; ret; 
0x00000000456333: sub rax, rdx; ret; 
0x00000000459378: sub rax, rdx; shr rax, 0x2; vzeroupper; ret; 
0x0000000044f92f: sub rax, rdx; vzeroupper; ret; 
0x00000000478757: sub rbx, r14; mov r13, rbx; sar r13, 0x2; mov rdx, r13; call qword ptr [rax+0x38]; 
0x00000000478c57: sub rbx, r8; sar rbx, 0x2; mov rdx, rbx; call qword ptr [rax+0x38]; 
0x00000000493c01: sub rcx, [rax+0x10]; cmp rcx, [rax+0x28]; jae short 0x0000000000493bf0; mov eax, 0x1; ret; 
0x0000000047df08: sub rcx, rax; sar rcx, 0x2; lea eax, [rcx-0x1]; ret; 
0x0000000041d6d9: sub rcx, rdx; cmp rax, rcx; jbe 0x000000000041d7d0; mov rdi, rbx; call qword ptr [r12+0x88]; 
0x0000000041f569: sub rcx, rdx; cmp rax, rcx; jbe 0x000000000041f718; mov rdi, rbx; call qword ptr [rbp+0x20]; 
0x0000000041f7a2: sub rcx, rdx; cmp rax, rcx; jbe 0x000000000041f878; mov rdi, rbx; call qword ptr [r13+0x60]; 
0x0000000041df49: sub rcx, rdx; cmp rax, rcx; jbe short 0x000000000041df88; mov rdi, rbp; call qword ptr [rbx+0x88]; 
0x0000000041f1a2: sub rcx, rdx; cmp rax, rcx; jbe short 0x000000000041f210; mov rdi, rbx; call qword ptr [rbp+0x68]; 
0x0000000041f258: sub rcx, rdx; cmp rax, rcx; jbe short 0x000000000041f288; mov rdi, rbx; call qword ptr [rbp+0x20]; 
0x0000000041fce8: sub rcx, rdx; cmp rax, rcx; jbe short 0x000000000041fd20; mov rdi, rbx; call qword ptr [rbp+0x30]; 
0x0000000047de1d: sub rcx, rdx; cmp rax, rcx; jbe short 0x000000000047de50; mov rdi, rbx; call qword ptr [rbp+0x30]; 
0x00000000436d62: sub rdi, 0x20; lea r11, [rip+0x69e53]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434382: sub rdi, 0x20; lea r11, [rip+0x6c673]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000436c71: sub rdi, 0x40; lea r11, [rip+0x69f44]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000436bb1: sub rdi, 0x40; lea r11, [rip+0x6a003]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434291: sub rdi, 0x40; lea r11, [rip+0x6c764]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004341d1: sub rdi, 0x40; lea r11, [rip+0x6c823]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000041b768: sub rdi, rcx; cmp rax, rdi; jbe short 0x000000000041b790; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x0000000047db7f: sub rdi, rdx; cmp rax, rdi; jbe 0x000000000047dd40; mov rdi, r13; call qword ptr [r14+0x20]; 
0x0000000043dade: sub rdi, rdx; lea r11, [rip+0x63798]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043afaa: sub rdi, rdx; lea r11, [rip+0x65dcc]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004393a0: sub rdx, 0x40; lea r11, [rip+0x67815]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439484: sub rdx, 0x80; movsxd r9, [r11+r9*4]; add r9, r11; notrack jmp r9; 
0x0000000042881d: sub rdx, 0x8; and eax, 0x1; cmovne rax, rdx; ret; 
0x0000000047dfb1: sub rdx, [rcx+0x10]; sar rdx, 0x2; sub eax, edx; ret; 
0x0000000047dfc3: sub rdx, [rcx+0x8]; sar rdx, 0x2; sub eax, edx; ret; 
0x0000000043172c: sub rdx, rax; jbe 0x00000000004319d0; add rax, rdi; add rax, rcx; ret; 
0x0000000047f30c: sub rdx, rax; jbe 0x000000000047f5b0; add rax, rdi; add rax, rcx; ret; 
0x00000000431993: sub rdx, rax; jbe short 0x00000000004319d0; add rax, rdi; ret; 
0x000000004319a3: sub rdx, rax; jbe short 0x00000000004319d0; lea rax, [rdi+rax+0x10]; ret; 
0x000000004319b3: sub rdx, rax; jbe short 0x00000000004319d0; lea rax, [rdi+rax+0x20]; ret; 
0x000000004319c3: sub rdx, rax; jbe short 0x00000000004319d0; lea rax, [rdi+rax+0x30]; ret; 
0x0000000047f573: sub rdx, rax; jbe short 0x000000000047f5b0; add rax, rdi; ret; 
0x0000000047f583: sub rdx, rax; jbe short 0x000000000047f5b0; lea rax, [rdi+rax+0x10]; ret; 
0x0000000047f593: sub rdx, rax; jbe short 0x000000000047f5b0; lea rax, [rdi+rax+0x20]; ret; 
0x0000000047f5a3: sub rdx, rax; jbe short 0x000000000047f5b0; lea rax, [rdi+rax+0x30]; ret; 
0x00000000453bbb: sub rdx, rcx; lea r11, [rip+0x4de7b]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000045358b: sub rdx, rcx; lea r11, [rip+0x4e42b]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000041b9ec: sub rdx, rsi; call qword ptr [r12+0x70]; 
0x000000004193b3: sub rdx, rsi; call qword ptr [rax+0x70]; 
0x000000004122d7: sub rdx, rsi; call qword ptr [rbx+0x38]; 
0x00000000419aaa: sub rdx, rsi; mov [rsp+0x8], rcx; mov rdi, r15; call rax; 
0x0000000041c08b: sub rdx, rsi; mov [rsp], rcx; mov rdi, rbp; call rax; 
0x00000000476920: sub rdx, rsi; sar rdx, 0x2; call qword ptr [r12+0x38]; 
0x0000000041cce8: sub rsi, rcx; mov [rsp], r8; mov edx, 0x1; mov rdi, rbp; call qword ptr [rax+0x80]; 
0x00000000418758: sub rsi, rdx; cmp rax, rsi; jbe short 0x00000000004187b8; mov rdi, rbx; call qword ptr [rbp+0x60]; 
0x00000000419099: sub rsi, rdx; cmp rax, rsi; jbe short 0x0000000000419114; mov rdi, rbx; call qword ptr [rbp+0x68]; 
0x0000000047d2a8: sub rsi, rdx; cmp rax, rsi; jbe short 0x000000000047d2e8; mov rdi, rbx; call qword ptr [rbp+0x20]; 
0x0000000043d780: sub rsi, rdx; lea r11, [rip+0x63af6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043d600: sub rsi, rdx; lea r11, [rip+0x63c76]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043d480: sub rsi, rdx; lea r11, [rip+0x63df6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043d300: sub rsi, rdx; lea r11, [rip+0x63f76]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043d180: sub rsi, rdx; lea r11, [rip+0x640f6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043d000: sub rsi, rdx; lea r11, [rip+0x64276]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043ce80: sub rsi, rdx; lea r11, [rip+0x643f6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043cd00: sub rsi, rdx; lea r11, [rip+0x64576]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043cb80: sub rsi, rdx; lea r11, [rip+0x646f6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043ca00: sub rsi, rdx; lea r11, [rip+0x64876]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c880: sub rsi, rdx; lea r11, [rip+0x649f6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c700: sub rsi, rdx; lea r11, [rip+0x64b76]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c580: sub rsi, rdx; lea r11, [rip+0x64cf6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c400: sub rsi, rdx; lea r11, [rip+0x64e76]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c280: sub rsi, rdx; lea r11, [rip+0x64ff6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c107: sub rsi, rdx; lea r11, [rip+0x6516f]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043ac80: sub rsi, rdx; lea r11, [rip+0x660f6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043ab00: sub rsi, rdx; lea r11, [rip+0x66276]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043a980: sub rsi, rdx; lea r11, [rip+0x663f6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043a800: sub rsi, rdx; lea r11, [rip+0x66576]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043a680: sub rsi, rdx; lea r11, [rip+0x666f6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043a500: sub rsi, rdx; lea r11, [rip+0x66876]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043a380: sub rsi, rdx; lea r11, [rip+0x669f6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043a200: sub rsi, rdx; lea r11, [rip+0x66b76]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043a080: sub rsi, rdx; lea r11, [rip+0x66cf6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439f00: sub rsi, rdx; lea r11, [rip+0x66e76]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439d80: sub rsi, rdx; lea r11, [rip+0x66ff6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439c00: sub rsi, rdx; lea r11, [rip+0x67176]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439a80: sub rsi, rdx; lea r11, [rip+0x672f6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439900: sub rsi, rdx; lea r11, [rip+0x67476]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439780: sub rsi, rdx; lea r11, [rip+0x675f6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439607: sub rsi, rdx; lea r11, [rip+0x6776f]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000041d567: sub rsi, rdx; mov rdi, rbx; mov edx, 0x1; call qword ptr [r14+0x80]; 
0x0000000049d338: sub rsp, 0x8; add rsp, 0x8; ret; 
0x00000000401004: sub rsp, 0x8; mov rax, 0x0; test rax, rax; je short 0x0000000000401016; call rax; 
0x0000000047fcfc: sub rsp, 0x8; mov rax, [rip+0x48d91]; test rax, rax; je short 0x000000000047fd40; call rax; 
0x000000004012e3: syscall; 
0x0000000045c48b: sysret; add [rax], al; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000046dfb9: test [rax+0x48000000], ebx; add esp, 0x98; ret; 
0x0000000045bf1c: test [rax+0x49000002], ecx; mov edi, [rdi]; call rbx; 
0x0000000045bfd0: test [rax+0x49000002], esi; mov edi, [rdi]; call rbx; 
0x0000000045aec0: test [rax+0x49000003], cl; mov esi, [rsi]; mov rax, [rsp+0x8]; mov rdi, r13; call rax; 
0x0000000044fc1b: test [rax+0x4c000000], esp; mov eax, eax; vzeroupper; ret; 
0x00000000437b37: test [rax+0x63490006], edx; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043346e: test [rax+0xf000009], eax; mov dh, 0x47; dec dword ptr [rdi]; mov dh, 0x56; jmp far fword ptr [rcx]; 
0x0000000045452f: test [rax+rax+0x40a80000], edi; jne 0x0000000000454600; lea rax, [rdi+0x7]; ret; 
0x000000004957af: test [rax+rax+0x438b0000], al; adc [rbp+0x2d840fc0], al; add eax, [rax]; add [rax+0x1], cl; ret; 
0x00000000431d97: test [rax+rax-0x3fcf0000], edx; vzeroupper; ret; 
0x0000000048d547: test [rax+rax], edi; add [rax-0x75], cl; and al, 0x10; mov rdi, [rsp+0x18]; call rcx; 
0x00000000425517: test [rax+rax], edi; add [rbx+0xa463d2d], al; add [rcx], al; pop rbp; ret; 
0x0000000047871c: test [rax+rbx*8], ah; add [rax], al; add [rax-0x39], cl; ret; 
0x0000000044ba38: test [rax+rbx-0x76b30000], al; ret far; 
0x000000004822b5: test [rax+rdi*4], ah; add al, [rax]; add [rax+0x29], cl; ret; 
0x0000000040f78a: test [rax], ah; add [rax], al; add [rdi], cl; sub [rsp+0xf0], eax; syscall; 
0x0000000044a0ec: test [rax], al; adc al, [rax]; add [rbp-0x77], cl; ret far; 
0x0000000047fa9a: test [rax], al; add [rax], al; add [rax], al; add rax, 0x3; ret; 
0x00000000426eca: test [rax], al; add [rax], al; add [rax], al; add rsp, 0x18; ret; 
0x000000004545ba: test [rax], al; add [rax], al; add [rax], al; lea rax, [rdi+0x2]; ret; 
0x000000004545ca: test [rax], al; add [rax], al; add [rax], al; lea rax, [rdi+0x3]; ret; 
0x000000004545da: test [rax], al; add [rax], al; add [rax], al; lea rax, [rdi+0x4]; ret; 
0x000000004545ea: test [rax], al; add [rax], al; add [rax], al; lea rax, [rdi+0x5]; ret; 
0x000000004545fa: test [rax], al; add [rax], al; add [rax], al; lea rax, [rdi+0x6]; ret; 
0x0000000045460a: test [rax], al; add [rax], al; add [rax], al; lea rax, [rdi+0x8]; ret; 
0x0000000045461a: test [rax], al; add [rax], al; add [rax], al; lea rax, [rdi+0x9]; ret; 
0x0000000045462a: test [rax], al; add [rax], al; add [rax], al; lea rax, [rdi+0xa]; ret; 
0x0000000045463a: test [rax], al; add [rax], al; add [rax], al; lea rax, [rdi+0xb]; ret; 
0x0000000045464a: test [rax], al; add [rax], al; add [rax], al; lea rax, [rdi+0xc]; ret; 
0x0000000045465a: test [rax], al; add [rax], al; add [rax], al; lea rax, [rdi+0xd]; ret; 
0x0000000045466a: test [rax], al; add [rax], al; add [rax], al; lea rax, [rdi+0xe]; ret; 
0x0000000045d89a: test [rax], al; add [rax], al; add [rax], al; mov [rdi+0x20], rsi; ret; 
0x0000000045361a: test [rax], al; add [rax], al; add [rax], al; mov [rdi], dh; ret; 
0x0000000041af4a: test [rax], al; add [rax], al; add [rax], al; mov eax, 0xffffffff; ret; 
0x0000000047faca: test [rax], al; add [rax], al; add [rax], al; mov rax, 0x2; ret; 
0x0000000047fada: test [rax], al; add [rax], al; add [rax], al; mov rax, 0x3; ret; 
0x0000000047faea: test [rax], al; add [rax], al; add [rax], al; mov rax, 0x4; ret; 
0x0000000047fafa: test [rax], al; add [rax], al; add [rax], al; mov rax, 0x5; ret; 
0x0000000047fb0a: test [rax], al; add [rax], al; add [rax], al; mov rax, 0x6; ret; 
0x0000000047fb1a: test [rax], al; add [rax], al; add [rax], al; mov rax, 0x7; ret; 
0x00000000428f8a: test [rax], al; add [rax], al; add [rax], al; mov rsi, r12; call rax; 
0x00000000492dba: test [rax], al; add [rax], al; add [rax], al; pop rbp; ret; 
0x0000000045df1a: test [rax], al; add [rax], al; add [rax], al; ret; 
0x0000000044fcea: test [rax], al; add [rax], al; add [rax], al; xor eax, eax; ret; 
0x000000004543da: test [rax], al; add [rax], al; add [rax], al; xor rax, rax; ret; 
0x0000000044a9ec: test [rax], al; or [rax], eax; add [rbp-0x77], cl; ret far; 
0x000000004497ec: test [rax], al; sbb eax, [rax]; add [rbp-0x77], cl; ret far; 
0x00000000447d4c: test [rax], dh; adc [rax], al; add [rbp-0x77], cl; ret far; 
0x000000004770b2: test [rax], dl; add eax, 0x83410000; out dx, eax; add [rax-0x93343], eax; jmp qword ptr [rax]; 
0x00000000475a0a: test [rax], eax; add [rax], al; add [rax+0x29], cl; ret; 
0x00000000497bba: test [rax], eax; add rax, r13; notrack jmp rax; 
0x0000000045f1d2: test [rax], eax; add rax, rbp; notrack jmp rax; 
0x0000000041264d: test [rax], eax; idiv edi; jmp qword ptr [rax]; 
0x00000000475af2: test [rax], ebp; idiv edi; jmp qword ptr [rax+rcx*2-0x75]; 
0x0000000041163d: test [rax], edi; idiv edi; jmp qword ptr [rax+rcx*2-0x75]; 
0x000000004127c1: test [rax], edx; idiv edi; inc dword ptr [rcx]; ret; 
0x000000004130b0: test [rax], edx; idiv edi; jmp far fword ptr [rcx]; 
0x00000000497bb9: test [rax], r8d; add rax, r13; notrack jmp rax; 
0x0000000045f1d1: test [rax], r8d; add rax, rbp; notrack jmp rax; 
0x0000000045bbe6: test [rbp+0x49000000], esp; mov edi, [rbp]; call rbx; 
0x0000000045bca6: test [rbp+0x49000002], esi; mov edi, [rsi]; call rbx; 
0x000000004594ae: test [rbp+0x4c000000], ebx; mov eax, eax; shr rax, 0x2; vzeroupper; ret; 
0x0000000045c0ac: test [rbp+0x9], edi; add [rax], al; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000044c568: test [rbp+rcx], dl; add [rbp-0x77], cl; ret far; 
0x0000000046b7d6: test [rbp-0x4e17fffd], eax; jp short 0x000000000046b7d7; call qword ptr [rax-0x5e1f00d]; 
0x00000000413818: test [rbp], dl; add [rax+0x39], cl; ret; 
0x0000000048f343: test [rbp], edi; add [rax], al; leave; ret; 
0x0000000045c642: test [rbx+0x4c000005], esi; mov [rsp+0x8], eax; mov rdi, [r8]; call rbx; 
0x0000000045c078: test [rbx+0x4c000009], eax; mov [rsp+0x8], eax; mov rdi, [r8]; call rbx; 
0x000000004336a7: test [rbx+0x7], edx; add [rax], al; xor eax, eax; ret; 
0x00000000423060: test [rbx+0xa], dh; add [rax-0x7d], cl; ret far; 
0x00000000433af6: test [rbx+rax], eax; add [rax], al; xor eax, eax; ret; 
0x0000000044c748: test [rbx+rcx], dh; add [rbp-0x77], cl; ret far; 
0x00000000406276: test [rbx], ch; add [rax], eax; add [rax-0x80], al; call far fword ptr [rax+0xf]; 
0x0000000046986e: test [rbx], dl; add [rax], eax; add [rcx-0x73], cl; add cl, [rax+0x39]; ret far; 
0x0000000046b7d7: test [rbx], eax; add al, ch; mov cl, 0x7a; stc; call qword ptr [rax-0x5e1f00d]; 
0x0000000045bcd6: test [rbx], ebp; add al, [rax]; add [rcx-0x75], cl; notrack call rbx; 
0x0000000045bd06: test [rcx+0x49000001], esp; mov edi, [rsi]; call rbx; 
0x0000000045be95: test [rcx+0x4], ebx; add [rax], al; mov rdi, [r15]; call rbx; 
0x0000000045c5d4: test [rcx+0x5], ebp; add [rax], al; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c41c: test [rcx+0x6], ebp; add [rax], al; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000043367d: test [rcx+0x7], esi; add [rax], al; xor eax, eax; ret; 
0x0000000043358d: test [rcx+0x8], esp; add [rax], al; xor eax, eax; ret; 
0x0000000043349d: test [rcx+0x9], edx; add [rax], al; xor eax, eax; ret; 
0x0000000045c11a: test [rcx+0xa], edx; add [rax], al; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x000000004984b0: test [rcx+rax-0x20], cl; notrack jmp rax; 
0x000000004698da: test [rcx+rax], bh; add [rcx-0x73], cl; add cl, [rax+0x39]; ret far; 
0x0000000047ebcf: test [rcx+rax], ch; add [rax], al; bsr rsi, rsi; lea rax, [rdi+rsi]; ret; 
0x0000000044c928: test [rcx+rcx-0x76b30000], dl; ret far; 
0x0000000040576e: test [rcx+rdi*8-0x1], eax; inc dword ptr [rax-0x80]; jmp qword ptr [rdi+rcx-0x7c]; 
0x00000000498af7: test [rcx-0x74], ebx; idiv bh; mov rax, [rax]; add rsp, 0x8; ret; 
0x0000000042fd56: test [rcx], bh; add al, 0x0; add [rbp-0x77], cl; ret far; 
0x00000000430536: test [rcx], bh; or al, 0x0; add [rbp-0x77], cl; ret far; 
0x0000000042f066: test [rcx], ch; adc [rax], eax; add [rbp-0x77], cl; ret far; 
0x00000000430446: test [rcx], ch; or eax, 0x894d0000; ret far; 
0x0000000042ed86: test [rcx], cl; adc al, 0x0; add [rbp-0x77], cl; ret far; 
0x0000000045bdb7: test [rdi+0x3], edi; add [rax], al; mov rdi, [r15]; call rbx; 
0x00000000458b5d: test [rdi+0x48000000], ebx; add esp, 0x8; pop rbx; pop rbp; ret; 
0x0000000044cb08: test [rdi+rax-0x76b30000], dh; ret far; 
0x000000004051cd: test [rdi+rcx-0x7fc00000], ah; call far fword ptr [rax+0xf]; 
0x00000000427c3a: test [rdi+rdi*8-0x1], ch; call qword ptr [rax+0x48ed0148]; 
0x00000000490fe7: test [rdi+rdi*8-0x1], ebp; call far fword ptr [rbx+0x48]; 
0x00000000470dd4: test [rdi+rdi*8-0x1], esp; jmp qword ptr [rsi]; 
0x00000000474b7d: test [rdi-0x1600000f], ah; mov ecx, edx; clc; jmp qword ptr [rsi+0xf]; 
0x0000000045af6c: test [rdi], cl; add al, [rax]; add [rcx-0x7d], cl; ret far; 
0x0000000045bc46: test [rdi], eax; add al, [rax]; add [rcx-0x75], cl; notrack call rbx; 
0x0000000045bc76: test [rdi], edi; add eax, [rax]; add [rcx-0x75], cl; notrack call rbx; 
0x00000000459131: test [rdx+0x48000000], bl; bsf eax, edx; shr rax, 0x2; ret; 
0x0000000049618d: test [rdx+0x48000001], edx; add esp, 0x78; pop rbp; pop r12; ret; 
0x0000000045c60b: test [rdx+0x4c000001], ebx; mov [rsp+0x8], eax; mov rdi, [r8]; call rbx; 
0x0000000045c1bf: test [rdx+0x4c000007], esi; mov [rsp+0x8], eax; mov rdi, [r8]; call rbx; 
0x0000000045c377: test [rdx+0x5], eax; add [rax], al; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c29b: test [rdx+0x6], edi; add [rax], al; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045bec2: test [rdx+0x6], edx; add [rax], al; mov rdi, [r15]; call rbx; 
0x0000000044b858: test [rdx+rbx], ah; add [rbp-0x77], cl; ret far; 
0x000000004333c2: test [rdx+rcx], ebp; add [rax], al; xor eax, eax; ret; 
0x00000000414859: test [rdx], esp; sbb [rax], eax; add [rcx-0x80], al; call qword ptr [rbx+0xf]; 
0x0000000045bbb6: test [rip+0x49000001], esi; mov edi, [rbp]; call rbx; 
0x0000000045bf49: test [rip+0x49000007], edx; mov edi, [rdi]; call rbx; 
0x0000000045c1f6: test [rip+0x4c00000a], ebp; mov [rsp+0x8], eax; mov rdi, [r8]; call rbx; 
0x00000000455c62: test [rsi+0x1], ebp; add [rax], al; xor eax, eax; ret; 
0x0000000043169d: test [rsi+0x29fffffe], ebx; enter 0xf8c5, 0x77; ret; 
0x0000000045c4c1: test [rsi+0x3], ebp; add [rax], al; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000044f74d: test [rsi+0x48000000], bl; bsf eax, edx; ret; 
0x00000000459d96: test [rsi+0x48000000], esp; add esp, 0x68; pop rbp; pop r12; ret; 
0x0000000045c3e5: test [rsi+0x4c000004], esp; mov [rsp+0x8], eax; mov rdi, [r8]; call rbx; 
0x0000000045c151: test [rsi+0x8], ecx; add [rax], al; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000044bc08: test [rsi+rdx-0x76b30000], dh; ret far; 
0x00000000457e1a: test [rsi-0x14000002], esi; ret far; 
0x0000000047c8e8: test [rsi-0x74fffffe], cl; adc [rax-0x77], ecx; ret far; 
0x0000000044da4e: test [rsi], ch; adc al, [rax]; add [rbp-0x77], cl; ret far; 
0x0000000044d74e: test [rsi], ch; adc eax, 0x894d0000; ret far; 
0x0000000044e94e: test [rsi], ch; add eax, [rax]; add [rbp-0x77], cl; ret far; 
0x0000000044e34e: test [rsi], ch; or [rax], eax; add [rbp-0x77], cl; ret far; 
0x0000000044e04e: test [rsi], ch; or al, 0x0; add [rbp-0x77], cl; ret far; 
0x000000004059b5: test [rsi], esp; add [rax], eax; add [rax-0x80], al; jmp qword ptr [rdi+rcx-0x7c]; 
0x000000004338c8: test [rsi], esp; add eax, 0xc0310000; ret; 
0x0000000044b678: test [rsp+rbx], al; add [rbp-0x77], cl; ret far; 
0x00000000405f57: test [rsp+rdi*8-0x1], al; dec dword ptr [rcx+0x3c8348c9]; ret far; 
0x00000000454586: test ah, 0x40; jne 0x0000000000454670; lea rax, [rdi+0xf]; ret; 
0x0000000044bfc8: test ah, dh; adc al, [rax]; add [rbp-0x77], cl; ret far; 
0x0000000044cec8: test ah, dh; add eax, [rax]; add [rbp-0x77], cl; ret far; 
0x0000000044bde8: test ah, dl; adc al, 0x0; add [rbp-0x77], cl; ret far; 
0x0000000044cce8: test ah, dl; add eax, 0x894d0000; ret far; 
0x0000000041fbf6: test al, 0x0; add [rax], al; add [rax], al; add [rax], al; ret; 
0x000000004969bc: test al, 0x0; add [rax], al; add rsp, 0x8; ret; 
0x000000004803f8: test al, 0x0; add [rax], al; pop rbp; pop r12; ret; 
0x00000000498c27: test al, 0x0; add [rax], al; ret; 
0x00000000454534: test al, 0x40; jne 0x0000000000454600; lea rax, [rdi+0x7]; ret; 
0x0000000045b370: test al, 0x45; mov edi, ebp; call rax; 
0x0000000041fc9e: test al, 0x90; endbr64; mov rax, 0xffffffffffffffff; ret; 
0x0000000042a194: test al, 0x9c; add [rax], al; lea rdx, [rip+0xf231]; cmovne rax, rdx; ret; 
0x0000000049256f: test al, 0xe8; push 0xffffffffffffffb2; cld; call qword ptr [rax+0x44b04d8b]; 
0x0000000047fecf: test al, 0xfd; jmp qword ptr [rsp+rax*2-0x77]; 
0x00000000447f9c: test al, ah; or eax, 0x894d0000; ret far; 
0x0000000044912c: test al, al; and [rax], eax; add [rbp-0x77], cl; ret far; 
0x000000004017c6: test al, al; jne short 0x00000000004017cb; ret; 
0x000000004267da: test al, al; jne short 0x00000000004267e9; mov dword ptr [rip+0xa5878], 0x0; ret; 
0x0000000042bb1a: test al, al; jne short 0x000000000042bb00; xor eax, eax; sub eax, ecx; ret; 
0x0000000048bf9c: test al, al; jne short 0x000000000048bf6e; movsx eax, dl; neg eax; ret; 
0x00000000449a2c: test al, al; sbb [rax], al; add [rbp-0x77], cl; ret far; 
0x000000004471bc: test al, al; sbb eax, [rax]; add [rbp-0x77], cl; ret far; 
0x000000004478ac: test al, dl; adc al, 0x0; add [rbp-0x77], cl; ret far; 
0x00000000418a13: test bh, al; add [rax], al; add [rax-0x77], cl; ret; 
0x00000000405916: test bh, al; or al, [rax]; add [rax-0x80], al; call far fword ptr [rax+0xf]; 
0x00000000404979: test bh, bh; add [rax], eax; add [rcx], dh; imul al; ret far; 
0x000000004996f9: test bh, bh; jne short 0x0000000000499733; mov eax, 0x8; add rsp, 0x8; ret; 
0x0000000049689c: test bh, bh; js short 0x00000000004968c8; mov [r9], r8; add rsp, 0x8; ret; 
0x0000000049984c: test bh, bh; js short 0x0000000000499878; mov [r9], r8; add rsp, 0x8; ret; 
0x0000000049b1ec: test bh, bh; js short 0x000000000049b218; mov [r9], r8; add rsp, 0x8; ret; 
0x00000000435c99: test byte ptr [r9-0x6f3c03a9], 0x66; mov edx, [rsi-0x2]; mov [rdi-0x2], dx; ret; 
0x0000000045d915: test byte ptr [rax+0x3b], 0x48; sbb [rdi-0x10], bh; mov [rax+0x20], rcx; mov byte ptr [rax+0x28], 0x1; ret; 
0x0000000045d8ad: test byte ptr [rax+0x3b], 0x57; sbb [rdi-0x10], bh; mov [rdi+0x20], rdx; mov byte ptr [rdi+0x28], 0x1; ret; 
0x0000000043d186: test byte ptr [rax+0x6], 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000045de5f: test byte ptr [rax-0x73], 0x3d; push rcx; add al, 0x0; mov eax, 0x15; syscall; 
0x0000000047c7a9: test byte ptr [rax-0x77], 0xdf; call qword ptr [r15+0x38]; 
0x0000000042023e: test byte ptr [rax-0x77], 0xdf; call qword ptr [r15+0x58]; 
0x0000000041c8d2: test byte ptr [rax-0x77], 0xdf; call qword ptr [rbp+0x70]; 
0x000000004994e2: test byte ptr [rax-0x77], 0xdf; call r15; 
0x000000004184ba: test byte ptr [rax-0x77], 0xef; call qword ptr [rbx+0x10]; 
0x000000004074e9: test byte ptr [rax], 0x0; add [rax-0x7d], cl; ret; 
0x000000004563dd: test byte ptr [rbp+0x48d674d2], 0x63; leave; add rax, rcx; sub rax, rdi; ret; 
0x00000000418676: test byte ptr [rbp+0xb], 0x0; syscall; 
0x0000000046dcf6: test byte ptr [rbp-0x6bf0bf40], 0xc6; xor eax, eax; mov [rbx+0x40], esi; pop rbx; ret; 
0x0000000043ce86: test byte ptr [rbx+0x6], 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000435c76: test byte ptr [rbx-0x76b303aa], 0x5f; out dx, al; mov [rdi-0xa], rcx; mov [rdi-0x4], edx; ret; 
0x00000000435c92: test byte ptr [rbx-0x76b703aa], 0x4f; test byte ptr [rcx-0x6f3c03a9], 0x66; mov edx, [rsi-0x2]; mov [rdi-0x2], dx; ret; 
0x00000000497d6c: test byte ptr [rcx+0x63], 0x4; mov ah, 0x4c; add eax, esp; notrack jmp rax; 
0x00000000497d2f: test byte ptr [rcx+0x63], 0x4; mov cl, 0x4c; add eax, ecx; notrack jmp rax; 
0x0000000043c886: test byte ptr [rcx+0x6], 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000476ace: test byte ptr [rcx+rcx*4-0x11], 0x44; mov [rbp-0x970], edx; mov [rbp-0x958], r9b; call rax; 
0x0000000042141d: test byte ptr [rcx+rcx*4-0x11], 0xe8; sub bh, ah; std; dec dword ptr [rax-0x77]; ret; 
0x00000000471a2b: test byte ptr [rcx+rcx*4-0x19], 0x4c; mov [rbp-0xe8], eax; call rax; 
0x00000000412226: test byte ptr [rcx+rcx*4-0x1], 0x44; mov [rbp-0x94c], ecx; mov [rbp-0x940], r11d; call rax; 
0x00000000435c9a: test byte ptr [rcx-0x6f3c03a9], 0x66; mov edx, [rsi-0x2]; mov [rdi-0x2], dx; ret; 
0x0000000043c286: test byte ptr [rdi+0x6], 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000047d5cf: test byte ptr [rdi], 0x2; jne short 0x000000000047d648; mov rax, [rax+0xe0]; call qword ptr [rax+0x68]; 
0x0000000049ba8e: test byte ptr [rdi], 0x84; ret far; 
0x0000000045ec9d: test byte ptr [rdi], 0x84; xchg edi, eax; add [rax], al; add [rax-0x7d], cl; ret; 
0x0000000045bbb4: test byte ptr [rdi], 0x85; xor eax, 0x49000001; mov edi, [rbp]; call rbx; 
0x00000000492cda: test byte ptr [rip+0x39e9f], 0x40; jne short 0x0000000000492ce8; ret; 
0x0000000048ffd4: test byte ptr [rip+0x3c10f], 0x10; lea rdx, [rip+0x11e]; lea rax, [rip+0x67]; cmovne rax, rdx; ret; 
0x000000004585eb: test byte ptr [rip+0x73af8], 0x8; lea rax, [rip+0xcb7]; lea rdx, [rip+0xa90]; cmovne rax, rdx; ret; 
0x0000000042a390: test byte ptr [rip+0xa1d5e], 0x2; lea rdx, [rip+0x2c382]; lea rax, [rip+0x2c43b]; cmove rax, rdx; ret; 
0x0000000042a374: test byte ptr [rip+0xa1d7a], 0x2; lea rdx, [rip+0x2cbae]; lea rax, [rip+0x2cbf7]; cmove rax, rdx; ret; 
0x0000000042a322: test byte ptr [rip+0xa1dcc], 0x2; lea rdx, [rip+0x2c7c0]; lea rax, [rip+0x2c809]; cmove rax, rdx; ret; 
0x0000000042a22b: test byte ptr [rip+0xa1eb7], 0x2; lea rax, [rip+0x25fd7]; lea rdx, [rip+0x27870]; cmovne rax, rdx; ret; 
0x0000000042a1d0: test byte ptr [rip+0xa1f1e], 0x2; lea rdx, [rip+0x2c532]; lea rax, [rip+0x2c5eb]; cmove rax, rdx; ret; 
0x0000000042a1b4: test byte ptr [rip+0xa1f3a], 0x2; lea rdx, [rip+0x2cd5e]; lea rax, [rip+0x2cda7]; cmove rax, rdx; ret; 
0x0000000042a162: test byte ptr [rip+0xa1f8c], 0x2; lea rdx, [rip+0x2c970]; lea rax, [rip+0x2c9b9]; cmove rax, rdx; ret; 
0x0000000042a114: test byte ptr [rip+0xa1fda], 0x2; lea rdx, [rip+0x2d66e]; lea rax, [rip+0x2d6c7]; cmove rax, rdx; ret; 
0x0000000042a070: test byte ptr [rip+0xa207e], 0x2; lea rdx, [rip+0x2c6a2]; lea rax, [rip+0x2c75b]; cmove rax, rdx; ret; 
0x0000000042a054: test byte ptr [rip+0xa209a], 0x2; lea rdx, [rip+0x2cece]; lea rax, [rip+0x2cf17]; cmove rax, rdx; ret; 
0x0000000042a002: test byte ptr [rip+0xa20ec], 0x2; lea rdx, [rip+0x2cae0]; lea rax, [rip+0x2cb29]; cmove rax, rdx; ret; 
0x00000000429fbf: test byte ptr [rip+0xa217f], 0x1; je short 0x0000000000429f81; ret; 
0x00000000429f04: test byte ptr [rip+0xa2239], 0x10; lea rdx, [rip-0x362]; lea rax, [rip+0x2bed7]; cmove rax, rdx; ret; 
0x00000000429444: test byte ptr [rip+0xa2c9f], 0x10; lea rdx, [rip+0x2ceee]; lea rax, [rip+0x2ce37]; cmovne rax, rdx; ret; 
0x0000000042941b: test byte ptr [rip+0xa2cc7], 0x2; lea rax, [rip+0x26cf7]; lea rdx, [rip+0x26ed0]; cmovne rax, rdx; ret; 
0x000000004293bb: test byte ptr [rip+0xa2d27], 0x2; lea rax, [rip+0x1067]; lea rdx, [rip+0x2760]; cmovne rax, rdx; ret; 
0x0000000042935b: test byte ptr [rip+0xa2de2], 0x40; lea rax, [rip+0x25947]; lea rdx, [rip+0x2aff0]; cmovne rax, rdx; ret; 
0x0000000043cb86: test byte ptr [rsi+0x6], 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000427176: test byte ptr [rsi+0xa], 0x0; syscall; 
0x0000000043c586: test byte ptr [rsi+rax], 0x49; movsxd edx, [rbx+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000044b4db: test cl, ah; sbb eax, 0x894d0000; ret far; 
0x000000004145f2: test cl, al; or [rax], eax; add [rax-0x80], al; jmp qword ptr [rdi+rcx]; 
0x00000000431076: test cl, bh; add [rax], al; add [rbp-0x77], cl; ret far; 
0x0000000042f796: test cl, bh; or [rax], eax; add [rbp-0x77], cl; ret far; 
0x00000000430e96: test cl, bl; add al, [rax]; add [rbp-0x77], cl; ret far; 
0x0000000042f4b6: test cl, bl; or al, 0x0; add [rbp-0x77], cl; ret far; 
0x0000000042d836: test cl, ch; adc [rax], eax; add [rbp-0x77], cl; ret far; 
0x0000000042d536: test cl, ch; adc al, 0x0; add [rbp-0x77], cl; ret far; 
0x00000000430f86: test cl, ch; add [rax], eax; add [rbp-0x77], cl; ret far; 
0x0000000042e736: test cl, ch; add al, [rax]; add [rbp-0x77], cl; ret far; 
0x0000000042e436: test cl, ch; add eax, 0x894d0000; ret far; 
0x0000000042e136: test cl, ch; or [rax], al; add [rbp-0x77], cl; ret far; 
0x0000000042de36: test cl, ch; or eax, [rax]; add [rbp-0x77], cl; ret far; 
0x0000000042fec6: test cl, cl; add al, [rax]; add [rbp-0x77], cl; ret far; 
0x00000000430da6: test cl, cl; add eax, [rax]; add [rbp-0x77], cl; ret far; 
0x00000000489797: test cl, cl; cmove r8, rax; mov rax, r8; ret; 
0x00000000455edf: test cl, cl; jne short 0x0000000000455ed0; ret; 
0x00000000455f8f: test cl, cl; jne short 0x0000000000455f80; ret; 
0x0000000045624f: test cl, cl; jne short 0x0000000000456240; sub rax, 0x1; ret; 
0x000000004544a7: test dh, 0x40; jne 0x00000000004543e0; lea rax, [rdi+0xf]; ret; 
0x000000004544ed: test dh, 0x4; jne 0x00000000004543e0; lea rax, [rdi+0xb]; ret; 
0x0000000047eb35: test dh, al; add [rax], eax; add [rax+0xf], cl; mov ebp, 0xf80148c0; ret; 
0x00000000462d09: test dh, dh; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x000000004996f8: test dil, dil; jne short 0x0000000000499733; mov eax, 0x8; add rsp, 0x8; ret; 
0x0000000049689b: test dil, dil; js short 0x00000000004968c8; mov [r9], r8; add rsp, 0x8; ret; 
0x0000000049984b: test dil, dil; js short 0x0000000000499878; mov [r9], r8; add rsp, 0x8; ret; 
0x0000000049b1eb: test dil, dil; js short 0x000000000049b218; mov [r9], r8; add rsp, 0x8; ret; 
0x00000000454424: test dl, 0x40; jne short 0x00000000004543e0; lea rax, [rdi+0x7]; ret; 
0x00000000454452: test dl, 0x4; jne short 0x00000000004543e0; lea rax, [rdi+0x3]; ret; 
0x00000000418b12: test dl, cl; add [rax], al; add [rax-0x77], cl; ret; 
0x0000000040f6eb: test dl, dl; jne short 0x000000000040f6c8; ret; 
0x000000004560ff: test dl, dl; jne short 0x00000000004560f0; lea rax, [rcx-0x1]; ret; 
0x00000000486998: test dword ptr [rax+0x21], 0xc73948f0; jne short 0x00000000004869a8; pop rbx; ret; 
0x0000000047db7b: test dword ptr [rax+0x29], 0xd72948d0; cmp rax, rdi; jbe 0x000000000047dd40; mov rdi, r13; call qword ptr [r14+0x20]; 
0x0000000045b36d: test dword ptr [rax-0x75], 0x8945a845; out dx, eax; call rax; 
0x0000000048050b: test dword ptr [rax-0x77], 0xca8948d6; cmp r9d, 0x1; ja short 0x0000000000480548; mov eax, 0x106; syscall; 
0x00000000459c69: test dword ptr [rax-0x77], 0xf88341d6; add [rdi+0x2d], esi; mov eax, 0x4; syscall; 
0x000000004804a9: test dword ptr [rax-0x77], 0xf88341d6; add [rdi+0x2d], esi; mov eax, 0x6; syscall; 
0x00000000459cc8: test dword ptr [rax-0x77], 0xf88341d6; add [rdi+0x2e], esi; mov eax, 0x5; syscall; 
0x0000000046e24a: test dword ptr [rax-0x77], 0xfe894cea; mov rdi, r12; call rbx; 
0x0000000040f1a5: test dword ptr [rax], 0xb60f4500; ror byte ptr [rdi+0x63], cl; adc al, 0x93; add r10, r11; notrack jmp r10; 
0x00000000448ee2: test dword ptr [rbp+rcx*4+0x48], 0xc929490f; lea r10, [rip+0x58a0f]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000446882: test dword ptr [rbp+rcx*4+0x48], 0xc929490f; lea r10, [rip+0x5b02f]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x000000004414d2: test dword ptr [rbp+rcx*4+0x48], 0xc929490f; lea r10, [rip+0x6030f]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000043f282: test dword ptr [rbp+rcx*4+0x48], 0xc929490f; lea r10, [rip+0x6251f]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000042eae2: test dword ptr [rbp+rcx*4+0x48], 0xc929490f; lea r10, [rip+0x71d4f]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000042d282: test dword ptr [rbp+rcx*4+0x48], 0xc929490f; lea r10, [rip+0x7356f]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000042bbb2: test dword ptr [rbp+rcx*4+0x48], 0xc929490f; lea r10, [rip+0x74bff]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000042a4b2: test dword ptr [rbp+rcx*4+0x48], 0xc929490f; lea r10, [rip+0x762bf]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000047d014: test dword ptr [rbp-0x3dbaf013], 0x48744389; add esp, 0x18; pop rbx; pop rbp; ret; 
0x00000000437fc5: test dword ptr [rbx+0x63490006], 0x8d499314; adc al, 0x13; notrack jmp rdx; 
0x00000000435ab3: test dword ptr [rbx-0x76b703aa], 0x5789f74f; cld; ret; 
0x0000000043b3d3: test dword ptr [rbx-0x76b703b2], 0x4f89f757; cld; ret; 
0x00000000463709: test dword ptr [rdi], 0x33486; add [rcx-0xa], al; ret; 
0x0000000049ca2e: test dword ptr [rdx], 0xe22ae900; sti; jmp qword ptr [rsi+0x2e]; 
0x0000000046a86b: test eax, 0xe8000390; sbb al, 0x8a; stc; jmp qword ptr [rsi+0x2e]; 
0x00000000456268: test eax, 0xfffd3be9; jmp qword ptr [rsi-0x70]; 
0x0000000045d3af: test eax, eax; cmove eax, edx; ret; 
0x00000000498bf5: test eax, eax; cmovne rax, [rsp+0x10]; add rsp, 0x28; ret; 
0x00000000401010: test eax, eax; je short 0x0000000000401016; call rax; 
0x00000000401cd3: test eax, eax; je short 0x0000000000401ce0; mov edi, 0x4caed0; jmp rax; 
0x00000000401d15: test eax, eax; je short 0x0000000000401d20; mov edi, 0x4caed0; jmp rax; 
0x0000000041fb39: test eax, eax; je short 0x000000000041fb4c; mov qword ptr [rax], 0x0; mov qword ptr [rax+0x8], 0x0; ret; 
0x00000000431148: test eax, eax; je short 0x000000000043114d; xchg edx, eax; sub eax, edx; ret; 
0x0000000044ef23: test eax, eax; je short 0x000000000044ef30; bsf eax, eax; lea rax, [rdi+rax]; ret; 
0x0000000045ab2c: test eax, eax; je short 0x000000000045ab31; ret; 
0x0000000045f09a: test eax, eax; je short 0x000000000045f0a0; ret; 
0x00000000462a6e: test eax, eax; je short 0x0000000000462a78; ret; 
0x0000000046bf92: test eax, eax; je short 0x000000000046bf98; call rax; 
0x0000000046c218: test eax, eax; je short 0x000000000046c21e; call rax; 
0x0000000046d38d: test eax, eax; je short 0x000000000046d393; call rax; 
0x0000000047fd08: test eax, eax; je short 0x000000000047fd40; call rax; 
0x00000000491b70: test eax, eax; je short 0x0000000000491b8e; lea rbx, [rbp+rdx*8]; nop [rax]; call qword ptr [rbx]; 
0x0000000049947c: test eax, eax; je short 0x0000000000499490; mov edi, 0x1; jmp rax; 
0x0000000049cae4: test eax, eax; je short 0x000000000049caea; call rax; 
0x0000000049cdb9: test eax, eax; je short 0x000000000049cdc4; call rax; 
0x00000000425514: test eax, eax; jne 0x0000000000425598; sub dword ptr [rip+0xa463d], 0x1; pop rbp; ret; 
0x0000000042d1d1: test eax, eax; jne 0x000000000042d0c0; sub eax, ecx; vzeroupper; ret; 
0x0000000043169a: test eax, eax; jne 0x0000000000431540; sub eax, ecx; vzeroupper; ret; 
0x00000000431915: test eax, eax; jne 0x00000000004319c0; xor eax, eax; ret; 
0x00000000431d94: test eax, eax; jne 0x0000000000431e30; xor eax, eax; vzeroupper; ret; 
0x0000000044fc18: test eax, eax; jne 0x000000000044fcc0; mov rax, r8; vzeroupper; ret; 
0x0000000045bdb4: test eax, eax; jne 0x000000000045c13b; mov rdi, [r15]; call rbx; 
0x0000000045bf19: test eax, eax; jne 0x000000000045c1a9; mov rdi, [r15]; call rbx; 
0x0000000045be38: test eax, eax; jne 0x000000000045c217; mov rdi, [r15]; call rbx; 
0x0000000045bfcd: test eax, eax; jne 0x000000000045c285; mov rdi, [r15]; call rbx; 
0x0000000045be92: test eax, eax; jne 0x000000000045c2f3; mov rdi, [r15]; call rbx; 
0x0000000045be65: test eax, eax; jne 0x000000000045c361; mov rdi, [r15]; call rbx; 
0x0000000045beec: test eax, eax; jne 0x000000000045c3cf; mov rdi, [r15]; call rbx; 
0x0000000045bf73: test eax, eax; jne 0x000000000045c43d; mov rdi, [r15]; call rbx; 
0x0000000045bdde: test eax, eax; jne 0x000000000045c4ab; mov rdi, [r15]; call rbx; 
0x0000000045bebf: test eax, eax; jne 0x000000000045c519; mov rdi, [r15]; call rbx; 
0x0000000045bfa0: test eax, eax; jne 0x000000000045c587; mov rdi, [r15]; call rbx; 
0x0000000045be0b: test eax, eax; jne 0x000000000045c5f5; mov rdi, [r15]; call rbx; 
0x0000000045bf46: test eax, eax; jne 0x000000000045c663; mov rdi, [r15]; call rbx; 
0x0000000045bffa: test eax, eax; jne 0x000000000045c6d1; mov rdi, [r15]; call rbx; 
0x0000000047f4f5: test eax, eax; jne 0x000000000047f5a0; xor eax, eax; ret; 
0x0000000047f764: test eax, eax; jne 0x000000000047f800; xor eax, eax; vzeroupper; ret; 
0x0000000048d544: test eax, eax; jne 0x000000000048d5c8; mov rcx, [rsp+0x10]; mov rdi, [rsp+0x18]; call rcx; 
0x0000000049644b: test eax, eax; jne 0x00000000004963a0; add rsp, 0x38; ret; 
0x0000000041fad4: test eax, eax; jne short 0x000000000041fac8; ret; 
0x0000000042086c: test eax, eax; jne short 0x0000000000420860; ret; 
0x000000004266cb: test eax, eax; jne short 0x0000000000426708; sub dword ptr [rip+0xa598a], 0x1; pop rbx; ret; 
0x0000000042d0db: test eax, eax; jne short 0x000000000042d0c0; sub eax, ecx; vzeroupper; ret; 
0x00000000431560: test eax, eax; jne short 0x0000000000431540; sub eax, ecx; vzeroupper; ret; 
0x00000000431945: test eax, eax; jne short 0x00000000004319a0; xor eax, eax; ret; 
0x00000000431dd1: test eax, eax; jne short 0x0000000000431df0; xor eax, eax; vzeroupper; ret; 
0x0000000044fc51: test eax, eax; jne short 0x000000000044fc80; mov rax, r8; vzeroupper; ret; 
0x000000004543d4: test eax, eax; jne short 0x00000000004543e4; nop [rax+rax]; xor rax, rax; ret; 
0x00000000459e5c: test eax, eax; jne short 0x0000000000459e70; syscall; 
0x00000000459efc: test eax, eax; jne short 0x0000000000459f10; mov eax, 0x1; syscall; 
0x0000000045c023: test eax, eax; jne short 0x000000000045c062; mov rdi, [r15]; call rbx; 
0x0000000045c04c: test eax, eax; jne short 0x000000000045c0cd; mov rdi, [r15]; call rbx; 
0x0000000047f525: test eax, eax; jne short 0x000000000047f580; xor eax, eax; ret; 
0x0000000047f7a1: test eax, eax; jne short 0x000000000047f7c0; xor eax, eax; vzeroupper; ret; 
0x0000000048f72a: test eax, eax; jne short 0x000000000048f790; mov dword ptr [rdx], 0x0; mov eax, 0x2; ret; 
0x0000000049ac76: test eax, eax; jne short 0x000000000049ac80; ret; 
0x0000000049aeb6: test eax, eax; jne short 0x000000000049aec0; ret; 
0x0000000042a0f0: test eax, eax; lea rdx, [rip+0x2d407]; lea rax, [rip+0x2d390]; cmovne rax, rdx; ret; 
0x0000000042a0d1: test eax, eax; lea rdx, [rip+0x2d536]; lea rax, [rip+0x2d57f]; cmove rax, rdx; ret; 
0x00000000421b0a: test eax, eax; mov eax, 0x10; cmovne rax, rdx; mov [rip+0xaa55c], rax; ret; 
0x00000000412949: test eax, edi; idiv bh; call qword ptr [rax]; 
0x00000000496b5f: test eax, edx; add [rax], al; add [rbp+0x39], cl; out 0x77, eax; ret far; 
0x0000000045bb86: test ebp, eax; add [rax], eax; add [rcx-0x75], cl; jge short 0x000000000045bb8f; call rbx; 
0x0000000045bb1d: test ebp, ebp; jne short 0x000000000045bb70; mov rdi, [r12]; call rbx; 
0x0000000045bb4d: test ebp, ebp; jne short 0x000000000045bbd0; mov rdi, [r12]; call rbx; 
0x00000000488f0e: test ebp, ecx; add [rax], eax; add [rax+0x63], cl; ret; 
0x0000000045c6b0: test ebp, edi; add eax, 0x894c0000; and al, 0x8; mov rdi, [r8]; call rbx; 
0x000000004872ff: test ebx, ebx; jne short 0x0000000000487305; call rax; 
0x0000000049b8fb: test ebx, ebx; jne short 0x000000000049b8e0; pop rbx; ret; 
0x0000000049ba13: test ebx, ebx; jne short 0x000000000049b9fd; pop rbx; ret; 
0x00000000427e88: test ebx, esp; add [rax], al; add [rax-0x7d], cl; call qword ptr [rax]; 
0x0000000045c4f8: test ecx, ebp; add eax, 0x894c0000; and al, 0x8; mov rdi, [r8]; call rbx; 
0x0000000045bd36: test ecx, ebx; add al, [rax]; add [rcx-0x75], cl; notrack call rbx; 
0x00000000487171: test ecx, ecx; jne short 0x0000000000487177; call rax; 
0x00000000487b43: test ecx, ecx; jne short 0x0000000000487b57; mov [rbp-0xd8], r11; call rax; 
0x0000000048fc42: test ecx, edi; dec dword ptr [rax-0x77]; ret; 
0x000000004278bc: test edi, ebx; add [rax], al; add [rax-0x7d], cl; call qword ptr [rax]; 
0x000000004058e3: test edi, ecx; idiv edi; inc dword ptr [rax-0x80]; jmp qword ptr [rdi+rcx-0x7c]; 
0x0000000045bc43: test edi, edi; jne 0x000000000045be52; mov rdi, [r14]; call rbx; 
0x0000000045bd03: test edi, edi; jne 0x000000000045beac; mov rdi, [r14]; call rbx; 
0x0000000045bcd3: test edi, edi; jne 0x000000000045bf06; mov rdi, [r14]; call rbx; 
0x0000000045bca3: test edi, edi; jne 0x000000000045bf60; mov rdi, [r14]; call rbx; 
0x0000000045bc73: test edi, edi; jne 0x000000000045bfba; mov rdi, [r14]; call rbx; 
0x0000000045bd33: test edi, edi; jne 0x000000000045c014; mov rdi, [r14]; call rbx; 
0x0000000045c676: test edi, edi; jne 0x000000000045c77c; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c608: test edi, edi; jne 0x000000000045c7aa; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c59a: test edi, edi; jne 0x000000000045c7d8; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c52c: test edi, edi; jne 0x000000000045c806; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c4be: test edi, edi; jne 0x000000000045c834; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c450: test edi, edi; jne 0x000000000045c862; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c3e2: test edi, edi; jne 0x000000000045c890; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c374: test edi, edi; jne 0x000000000045c8be; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c306: test edi, edi; jne 0x000000000045c8ec; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c298: test edi, edi; jne 0x000000000045c91a; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c22a: test edi, edi; jne 0x000000000045c948; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c1bc: test edi, edi; jne 0x000000000045c976; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c14e: test edi, edi; jne 0x000000000045c9a4; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c0e0: test edi, edi; jne 0x000000000045c9d2; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c075: test edi, edi; jne 0x000000000045ca00; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c0a9: test edi, edi; jne 0x000000000045ca2e; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c261: test edi, edi; jne 0x000000000045ca5c; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c419: test edi, edi; jne 0x000000000045ca8a; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c185: test edi, edi; jne 0x000000000045cab8; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c4f5: test edi, edi; jne 0x000000000045cae6; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c33d: test edi, edi; jne 0x000000000045cb14; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c5d1: test edi, edi; jne 0x000000000045cb42; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c117: test edi, edi; jne 0x000000000045cb70; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c487: test edi, edi; jne 0x000000000045cb9e; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c2cf: test edi, edi; jne 0x000000000045cbcc; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c63f: test edi, edi; jne 0x000000000045cbfa; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c1f3: test edi, edi; jne 0x000000000045cc28; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c563: test edi, edi; jne 0x000000000045cc56; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c3ab: test edi, edi; jne 0x000000000045cc84; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c6ad: test edi, edi; jne 0x000000000045ccb2; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045ae2b: test edi, edi; jne short 0x000000000045ae56; mov rdi, [rbp]; call rbx; 
0x0000000045bd5f: test edi, edi; jne short 0x000000000045bda1; mov rdi, [r14]; call rbx; 
0x0000000045bd8b: test edi, edi; jne short 0x000000000045bdf8; mov rdi, [r14]; call rbx; 
0x0000000045c6e0: test edi, edi; jne short 0x000000000045c72f; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c70f: test edi, edi; jne short 0x000000000045c757; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x00000000427b91: test edx, ebp; add [rax], al; add [rax-0x7d], cl; call qword ptr [rax]; 
0x0000000044f74a: test edx, edx; je 0x000000000044f7f0; bsf rax, rdx; ret; 
0x0000000045912e: test edx, edx; je 0x00000000004591d0; bsf rax, rdx; shr rax, 0x2; ret; 
0x0000000044f546: test edx, edx; je short 0x000000000044f54e; bsf eax, edx; ret; 
0x0000000044f5eb: test edx, edx; je short 0x000000000044f600; bsf rax, rdx; ret; 
0x0000000044f58e: test edx, edx; je short 0x000000000044f610; bsf rax, rdx; ret; 
0x0000000044f7ba: test edx, edx; je short 0x000000000044f7e0; bsf rax, rdx; ret; 
0x0000000045919a: test edx, edx; je short 0x00000000004591c0; bsf rax, rdx; shr rax, 0x2; ret; 
0x0000000045df0c: test edx, edx; je short 0x000000000045df20; lea rdi, [rcx+rsi+0x20]; jmp rdx; 
0x0000000041d507: test edx, edx; jne short 0x000000000041d510; ret; 
0x0000000041e4cc: test edx, edx; jne short 0x000000000041e4e0; sub dword ptr [rip+0xadb19], 0x1; ret; 
0x0000000041eb87: test edx, edx; jne short 0x000000000041eb78; ret; 
0x00000000420c98: test edx, edx; jne short 0x0000000000420ca8; sub dword ptr [rip+0xab34d], 0x1; ret; 
0x000000004574e5: test edx, edx; jne short 0x00000000004574ed; mov rax, rdi; ret; 
0x0000000045d541: test edx, edx; jne short 0x000000000045d550; ret; 
0x000000004756d6: test edx, edx; jne short 0x00000000004756e0; sub dword ptr [rdi], 0x1; ret; 
0x0000000047cf3f: test edx, edx; jne short 0x000000000047cf30; ret; 
0x0000000047f28b: test edx, edx; jne short 0x000000000047f280; ret; 
0x00000000487a0e: test edx, edx; jne short 0x0000000000487a14; call rax; 
0x0000000045c309: test esi, ebx; add eax, 0x894c0000; and al, 0x8; mov rdi, [r8]; call rbx; 
0x0000000041ad4c: test esi, edi; call qword ptr [rax-0x5e1f00d]; 
0x000000004074e8: test esi, esi; add [rax], al; add [rax-0x7d], cl; ret; 
0x00000000428808: test esi, esi; je short 0x0000000000428818; lea rax, [rax-0x10]; ret; 
0x0000000046b764: test esi, esi; je short 0x000000000046b770; cmp esi, 0x3; je short 0x000000000046b770; ret; 
0x00000000489720: test esi, esi; je short 0x0000000000489727; mov [rsi], rdi; mov rax, r8; ret; 
0x0000000045bbe3: test esi, esi; jne 0x000000000045bc90; mov rdi, [r13]; call rbx; 
0x0000000045bbb3: test esi, esi; jne 0x000000000045bcf0; mov rdi, [r13]; call rbx; 
0x0000000045bb83: test esi, esi; jne 0x000000000045bd50; mov rdi, [r13]; call rbx; 
0x0000000044f6b5: test esi, esi; jne short 0x000000000044f6bd; xor rax, rax; ret; 
0x00000000459095: test esi, esi; jne short 0x000000000045909d; xor rax, rax; ret; 
0x0000000045bc0f: test esi, esi; jne short 0x000000000045bc30; mov rdi, [r13]; call rbx; 
0x0000000048f5b7: test esi, esi; jne short 0x000000000048f5e0; mov dword ptr [rdx], 0x0; mov eax, 0x1; ret; 
0x0000000048f648: test esi, esi; jne short 0x000000000048f678; mov dword ptr [rdx], 0x0; mov eax, 0x1; ret; 
0x00000000475e31: test esp, ecx; idiv bh; jmp qword ptr [rax]; 
0x0000000045badc: test esp, esp; jne short 0x000000000045bb08; mov rdi, [rbp]; call rbx; 
0x00000000435ab2: test qword ptr [rbx-0x76b703aa], 0x5789f74f; cld; ret; 
0x000000004872fe: test r11d, r11d; jne short 0x0000000000487305; call rax; 
0x0000000045badb: test r12, r12; jne short 0x000000000045bb08; mov rdi, [rbp]; call rbx; 
0x0000000045bb1c: test r13, r13; jne short 0x000000000045bb70; mov rdi, [r12]; call rbx; 
0x0000000045bb4c: test r13, r13; jne short 0x000000000045bbd0; mov rdi, [r12]; call rbx; 
0x0000000045bbe2: test r14, r14; jne 0x000000000045bc90; mov rdi, [r13]; call rbx; 
0x0000000045bbb2: test r14, r14; jne 0x000000000045bcf0; mov rdi, [r13]; call rbx; 
0x0000000045bb82: test r14, r14; jne 0x000000000045bd50; mov rdi, [r13]; call rbx; 
0x0000000045bc0e: test r14, r14; jne short 0x000000000045bc30; mov rdi, [r13]; call rbx; 
0x0000000041ad4b: test r14d, edi; call qword ptr [rax-0x5e1f00d]; 
0x0000000045bc42: test r15, r15; jne 0x000000000045be52; mov rdi, [r14]; call rbx; 
0x0000000045bd02: test r15, r15; jne 0x000000000045beac; mov rdi, [r14]; call rbx; 
0x0000000045bcd2: test r15, r15; jne 0x000000000045bf06; mov rdi, [r14]; call rbx; 
0x0000000045bca2: test r15, r15; jne 0x000000000045bf60; mov rdi, [r14]; call rbx; 
0x0000000045bc72: test r15, r15; jne 0x000000000045bfba; mov rdi, [r14]; call rbx; 
0x0000000045bd32: test r15, r15; jne 0x000000000045c014; mov rdi, [r14]; call rbx; 
0x0000000045bd5e: test r15, r15; jne short 0x000000000045bda1; mov rdi, [r14]; call rbx; 
0x0000000045bd8a: test r15, r15; jne short 0x000000000045bdf8; mov rdi, [r14]; call rbx; 
0x0000000045bdb3: test r8, r8; jne 0x000000000045c13b; mov rdi, [r15]; call rbx; 
0x0000000045bf18: test r8, r8; jne 0x000000000045c1a9; mov rdi, [r15]; call rbx; 
0x0000000045be37: test r8, r8; jne 0x000000000045c217; mov rdi, [r15]; call rbx; 
0x0000000045bfcc: test r8, r8; jne 0x000000000045c285; mov rdi, [r15]; call rbx; 
0x0000000045be91: test r8, r8; jne 0x000000000045c2f3; mov rdi, [r15]; call rbx; 
0x0000000045be64: test r8, r8; jne 0x000000000045c361; mov rdi, [r15]; call rbx; 
0x0000000045beeb: test r8, r8; jne 0x000000000045c3cf; mov rdi, [r15]; call rbx; 
0x0000000045bf72: test r8, r8; jne 0x000000000045c43d; mov rdi, [r15]; call rbx; 
0x0000000045bddd: test r8, r8; jne 0x000000000045c4ab; mov rdi, [r15]; call rbx; 
0x0000000045bebe: test r8, r8; jne 0x000000000045c519; mov rdi, [r15]; call rbx; 
0x0000000045bf9f: test r8, r8; jne 0x000000000045c587; mov rdi, [r15]; call rbx; 
0x0000000045be0a: test r8, r8; jne 0x000000000045c5f5; mov rdi, [r15]; call rbx; 
0x0000000045bf45: test r8, r8; jne 0x000000000045c663; mov rdi, [r15]; call rbx; 
0x0000000045bff9: test r8, r8; jne 0x000000000045c6d1; mov rdi, [r15]; call rbx; 
0x0000000045c022: test r8, r8; jne short 0x000000000045c062; mov rdi, [r15]; call rbx; 
0x0000000045c04b: test r8, r8; jne short 0x000000000045c0cd; mov rdi, [r15]; call rbx; 
0x000000004267d9: test r8b, r8b; jne short 0x00000000004267e9; mov dword ptr [rip+0xa5878], 0x0; ret; 
0x00000000431147: test r8d, r8d; je short 0x000000000043114d; xchg edx, eax; sub eax, edx; ret; 
0x0000000049644a: test r8d, r8d; jne 0x00000000004963a0; add rsp, 0x38; ret; 
0x00000000487b42: test r9d, r9d; jne short 0x0000000000487b57; mov [rbp-0xd8], r11; call rax; 
0x00000000498bf4: test rax, rax; cmovne rax, [rsp+0x10]; add rsp, 0x28; ret; 
0x0000000040100f: test rax, rax; je short 0x0000000000401016; call rax; 
0x00000000401cd2: test rax, rax; je short 0x0000000000401ce0; mov edi, 0x4caed0; jmp rax; 
0x00000000401d14: test rax, rax; je short 0x0000000000401d20; mov edi, 0x4caed0; jmp rax; 
0x0000000041fb38: test rax, rax; je short 0x000000000041fb4c; mov qword ptr [rax], 0x0; mov qword ptr [rax+0x8], 0x0; ret; 
0x0000000045ab2b: test rax, rax; je short 0x000000000045ab31; ret; 
0x0000000046bf91: test rax, rax; je short 0x000000000046bf98; call rax; 
0x0000000046c217: test rax, rax; je short 0x000000000046c21e; call rax; 
0x0000000046d38c: test rax, rax; je short 0x000000000046d393; call rax; 
0x0000000047fd07: test rax, rax; je short 0x000000000047fd40; call rax; 
0x0000000049947b: test rax, rax; je short 0x0000000000499490; mov edi, 0x1; jmp rax; 
0x0000000049cae3: test rax, rax; je short 0x000000000049caea; call rax; 
0x0000000049cdb8: test rax, rax; je short 0x000000000049cdc4; call rax; 
0x0000000041fad3: test rax, rax; jne short 0x000000000041fac8; ret; 
0x0000000042086b: test rax, rax; jne short 0x0000000000420860; ret; 
0x0000000048f729: test rax, rax; jne short 0x000000000048f790; mov dword ptr [rdx], 0x0; mov eax, 0x2; ret; 
0x00000000421b09: test rax, rax; mov eax, 0x10; cmovne rax, rdx; mov [rip+0xaa55c], rax; ret; 
0x0000000049b8fa: test rbx, rbx; jne short 0x000000000049b8e0; pop rbx; ret; 
0x0000000049ba12: test rbx, rbx; jne short 0x000000000049b9fd; pop rbx; ret; 
0x0000000045c675: test rdi, rdi; jne 0x000000000045c77c; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c607: test rdi, rdi; jne 0x000000000045c7aa; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c599: test rdi, rdi; jne 0x000000000045c7d8; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c52b: test rdi, rdi; jne 0x000000000045c806; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c4bd: test rdi, rdi; jne 0x000000000045c834; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c44f: test rdi, rdi; jne 0x000000000045c862; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c3e1: test rdi, rdi; jne 0x000000000045c890; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c373: test rdi, rdi; jne 0x000000000045c8be; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c305: test rdi, rdi; jne 0x000000000045c8ec; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c297: test rdi, rdi; jne 0x000000000045c91a; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c229: test rdi, rdi; jne 0x000000000045c948; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c1bb: test rdi, rdi; jne 0x000000000045c976; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c14d: test rdi, rdi; jne 0x000000000045c9a4; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c0df: test rdi, rdi; jne 0x000000000045c9d2; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c074: test rdi, rdi; jne 0x000000000045ca00; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c0a8: test rdi, rdi; jne 0x000000000045ca2e; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c260: test rdi, rdi; jne 0x000000000045ca5c; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c418: test rdi, rdi; jne 0x000000000045ca8a; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c184: test rdi, rdi; jne 0x000000000045cab8; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c4f4: test rdi, rdi; jne 0x000000000045cae6; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c33c: test rdi, rdi; jne 0x000000000045cb14; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c5d0: test rdi, rdi; jne 0x000000000045cb42; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c116: test rdi, rdi; jne 0x000000000045cb70; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c486: test rdi, rdi; jne 0x000000000045cb9e; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c2ce: test rdi, rdi; jne 0x000000000045cbcc; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c63e: test rdi, rdi; jne 0x000000000045cbfa; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c1f2: test rdi, rdi; jne 0x000000000045cc28; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c562: test rdi, rdi; jne 0x000000000045cc56; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c3aa: test rdi, rdi; jne 0x000000000045cc84; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c6ac: test rdi, rdi; jne 0x000000000045ccb2; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045ae2a: test rdi, rdi; jne short 0x000000000045ae56; mov rdi, [rbp]; call rbx; 
0x0000000045c6df: test rdi, rdi; jne short 0x000000000045c72f; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045c70e: test rdi, rdi; jne short 0x000000000045c757; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000044f749: test rdx, rdx; je 0x000000000044f7f0; bsf rax, rdx; ret; 
0x0000000045912d: test rdx, rdx; je 0x00000000004591d0; bsf rax, rdx; shr rax, 0x2; ret; 
0x0000000044f5ea: test rdx, rdx; je short 0x000000000044f600; bsf rax, rdx; ret; 
0x0000000044f58d: test rdx, rdx; je short 0x000000000044f610; bsf rax, rdx; ret; 
0x0000000044f7b9: test rdx, rdx; je short 0x000000000044f7e0; bsf rax, rdx; ret; 
0x00000000459199: test rdx, rdx; je short 0x00000000004591c0; bsf rax, rdx; shr rax, 0x2; ret; 
0x0000000045df0b: test rdx, rdx; je short 0x000000000045df20; lea rdi, [rcx+rsi+0x20]; jmp rdx; 
0x0000000041d506: test rdx, rdx; jne short 0x000000000041d510; ret; 
0x0000000041eb86: test rdx, rdx; jne short 0x000000000041eb78; ret; 
0x000000004574e4: test rdx, rdx; jne short 0x00000000004574ed; mov rax, rdi; ret; 
0x0000000047cf3e: test rdx, rdx; jne short 0x000000000047cf30; ret; 
0x00000000428807: test rsi, rsi; je short 0x0000000000428818; lea rax, [rax-0x10]; ret; 
0x0000000048971f: test rsi, rsi; je short 0x0000000000489727; mov [rsi], rdi; mov rax, r8; ret; 
0x0000000044f6b4: test rsi, rsi; jne short 0x000000000044f6bd; xor rax, rax; ret; 
0x00000000459094: test rsi, rsi; jne short 0x000000000045909d; xor rax, rax; ret; 
0x0000000048f5b6: test rsi, rsi; jne short 0x000000000048f5e0; mov dword ptr [rdx], 0x0; mov eax, 0x1; ret; 
0x0000000048f647: test rsi, rsi; jne short 0x000000000048f678; mov dword ptr [rdx], 0x0; mov eax, 0x1; ret; 
0x00000000462d08: test sil, sil; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x00000000431e70: tzcnt eax, eax; add rax, 0x20; add rax, rdi; vzeroupper; ret; 
0x00000000431e80: tzcnt eax, eax; add rax, 0x40; add rax, rdi; vzeroupper; ret; 
0x00000000431eae: tzcnt eax, eax; add rax, 0x60; add rax, rdi; vzeroupper; ret; 
0x0000000044f393: tzcnt eax, eax; add rax, rcx; add rax, rdi; vzeroupper; ret; 
0x00000000431f15: tzcnt eax, eax; add rax, rdi; add rax, rcx; vzeroupper; ret; 
0x0000000044f9e0: tzcnt eax, eax; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x00000000431e60: tzcnt eax, eax; add rax, rdi; vzeroupper; ret; 
0x0000000041f592: ud0 edi, edi; jmp qword ptr [rsi+0x2e]; 
0x00000000427f46: ud0 edi, edi; jmp qword ptr [rsi+0xf]; 
0x0000000043941d: ud2; lea r11, [rip+0x6795a]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000490832: vminsd xmm9, xmm4, [rcx+rcx*4-0x18]; pop r12; pop r13; ret; 
0x0000000045762f: vmovdqu [edi+edx-0x20], ymm0; vmovdqu [rdi], ymm0; vzeroupper; ret; 
0x00000000456d4c: vmovdqu [r11], ymm4; vzeroupper; ret; 
0x00000000456df3: vmovdqu [r11], ymm8; vzeroupper; ret; 
0x0000000043eb5e: vmovdqu [r9-0x10], xmm1; ret; 
0x0000000043eb4a: vmovdqu [r9-0x20], ymm1; ret; 
0x0000000043eb31: vmovdqu [r9-0x20], ymm3; ret; 
0x0000000043eb2b: vmovdqu [r9-0x40], ymm2; vmovdqu [r9-0x20], ymm3; ret; 
0x00000000456d42: vmovdqu [rcx-0x40], ymm7; vmovdqu [rcx-0x60], ymm8; vmovdqu [r11], ymm4; vzeroupper; ret; 
0x00000000456d47: vmovdqu [rcx-0x60], ymm8; vmovdqu [r11], ymm4; vzeroupper; ret; 
0x000000004576a4: vmovdqu [rdi+0x20], ymm0; vmovdqu [rdi+rdx-0x20], ymm0; vmovdqu [rdi+rdx-0x40], ymm0; vzeroupper; ret; 
0x0000000043eb26: vmovdqu [rdi+0x20], ymm1; vmovdqu [r9-0x40], ymm2; vmovdqu [r9-0x20], ymm3; ret; 
0x00000000456c8c: vmovdqu [rdi+0x20], ymm1; vmovdqu [rdi+rdx-0x20], ymm2; vmovdqu [rdi+rdx-0x40], ymm3; vzeroupper; ret; 
0x00000000456de9: vmovdqu [rdi+0x40], ymm6; vmovdqu [rdi+0x60], ymm7; vmovdqu [r11], ymm8; vzeroupper; ret; 
0x00000000456dee: vmovdqu [rdi+0x60], ymm7; vmovdqu [r11], ymm8; vzeroupper; ret; 
0x0000000045773f: vmovdqu [rdi+rdx-0x10], xmm0; vmovdqu [rdi], xmm0; vzeroupper; ret; 
0x00000000456bc0: vmovdqu [rdi+rdx-0x10], xmm1; ret; 
0x0000000045434e: vmovdqu [rdi+rdx-0x1f], ymm3; lea rax, [rdi+rdx]; vzeroupper; ret; 
0x0000000045010e: vmovdqu [rdi+rdx-0x1f], ymm3; vzeroupper; ret; 
0x000000004576a9: vmovdqu [rdi+rdx-0x20], ymm0; vmovdqu [rdi+rdx-0x40], ymm0; vzeroupper; ret; 
0x00000000457630: vmovdqu [rdi+rdx-0x20], ymm0; vmovdqu [rdi], ymm0; vzeroupper; ret; 
0x00000000456b19: vmovdqu [rdi+rdx-0x20], ymm1; vzeroupper; ret; 
0x00000000456c91: vmovdqu [rdi+rdx-0x20], ymm2; vmovdqu [rdi+rdx-0x40], ymm3; vzeroupper; ret; 
0x000000004576af: vmovdqu [rdi+rdx-0x40], ymm0; vzeroupper; ret; 
0x00000000456c97: vmovdqu [rdi+rdx-0x40], ymm3; vzeroupper; ret; 
0x00000000456c5d: vmovdqu [rdi+rdx-0x40], ymm5; vmovdqu [rdi+rdx-0x60], ymm6; vmovdqu [rdi+rdx-0x80], ymm7; vzeroupper; ret; 
0x00000000456c63: vmovdqu [rdi+rdx-0x60], ymm6; vmovdqu [rdi+rdx-0x80], ymm7; vzeroupper; ret; 
0x00000000456c69: vmovdqu [rdi+rdx-0x80], ymm7; vzeroupper; ret; 
0x0000000045432e: vmovdqu [rdi+rdx-0xf], xmm3; lea rax, [rdi+rdx]; vzeroupper; ret; 
0x000000004500ee: vmovdqu [rdi+rdx-0xf], xmm3; vzeroupper; ret; 
0x0000000043eb5a: vmovdqu [rdi], xmm0; vmovdqu [r9-0x10], xmm1; ret; 
0x00000000456bbc: vmovdqu [rdi], xmm0; vmovdqu [rdi+rdx-0x10], xmm1; ret; 
0x00000000456549: vmovdqu [rdi], xmm0; vmovdqu [rsi-0x10], xmm0; ret; 
0x00000000457745: vmovdqu [rdi], xmm0; vzeroupper; ret; 
0x0000000045432a: vmovdqu [rdi], xmm2; vmovdqu [rdi+rdx-0xf], xmm3; lea rax, [rdi+rdx]; vzeroupper; ret; 
0x000000004500ea: vmovdqu [rdi], xmm2; vmovdqu [rdi+rdx-0xf], xmm3; vzeroupper; ret; 
0x0000000043eb46: vmovdqu [rdi], ymm0; vmovdqu [r9-0x20], ymm1; ret; 
0x0000000043eb22: vmovdqu [rdi], ymm0; vmovdqu [rdi+0x20], ymm1; vmovdqu [r9-0x40], ymm2; vmovdqu [r9-0x20], ymm3; ret; 
0x00000000456b15: vmovdqu [rdi], ymm0; vmovdqu [rdi+rdx-0x20], ymm1; vzeroupper; ret; 
0x00000000457636: vmovdqu [rdi], ymm0; vzeroupper; ret; 
0x0000000045434a: vmovdqu [rdi], ymm2; vmovdqu [rdi+rdx-0x1f], ymm3; lea rax, [rdi+rdx]; vzeroupper; ret; 
0x0000000045010a: vmovdqu [rdi], ymm2; vmovdqu [rdi+rdx-0x1f], ymm3; vzeroupper; ret; 
0x0000000045653f: vmovdqu [rdi], ymm2; vmovdqu [rsi-0x20], ymm2; ret; 
0x0000000045654d: vmovdqu [rsi-0x10], xmm0; ret; 
0x00000000456543: vmovdqu [rsi-0x20], ymm2; ret; 
0x0000000043eb51: vmovdqu xmm0, [rsi]; vmovdqu xmm1, [rcx-0x10]; vmovdqu [rdi], xmm0; vmovdqu [r9-0x10], xmm1; ret; 
0x00000000456bb2: vmovdqu xmm0, [rsi]; vmovdqu xmm1, [rsi+rdx-0x10]; vmovdqu [rdi], xmm0; vmovdqu [rdi+rdx-0x10], xmm1; ret; 
0x0000000043eb55: vmovdqu xmm1, [rcx-0x10]; vmovdqu [rdi], xmm0; vmovdqu [r9-0x10], xmm1; ret; 
0x00000000456bb6: vmovdqu xmm1, [rsi+rdx-0x10]; vmovdqu [rdi], xmm0; vmovdqu [rdi+rdx-0x10], xmm1; ret; 
0x000000004500e4: vmovdqu xmm3, [rsi+rdx-0xf]; vmovdqu [rdi], xmm2; vmovdqu [rdi+rdx-0xf], xmm3; vzeroupper; ret; 
0x0000000043eb3d: vmovdqu ymm0, [rsi]; vmovdqu ymm1, [rcx-0x20]; vmovdqu [rdi], ymm0; vmovdqu [r9-0x20], ymm1; ret; 
0x0000000043eb41: vmovdqu ymm1, [rcx-0x20]; vmovdqu [rdi], ymm0; vmovdqu [r9-0x20], ymm1; ret; 
0x00000000456b0f: vmovdqu ymm1, [rsi+rdx-0x20]; vmovdqu [rdi], ymm0; vmovdqu [rdi+rdx-0x20], ymm1; vzeroupper; ret; 
0x00000000450104: vmovdqu ymm3, [rsi+rdx-0x1f]; vmovdqu [rdi], ymm2; vmovdqu [rdi+rdx-0x1f], ymm3; vzeroupper; ret; 
0x00000000457206: vmovdqu64 [r11], zmm4; vzeroupper; ret; 
0x000000004572cc: vmovdqu64 [r11], zmm8; vzeroupper; ret; 
0x000000004571f8: vmovdqu64 [rcx-0x80], zmm7; vmovdqu64 [rcx-0xc0], zmm8; vmovdqu64 [r11], zmm4; vzeroupper; ret; 
0x000000004571ff: vmovdqu64 [rcx-0xc0], zmm8; vmovdqu64 [r11], zmm4; vzeroupper; ret; 
0x00000000457843: vmovdqu64 [rdi+0x40], zmm0; vmovdqu64 [rdi+rdx-0x40], zmm0; vmovdqu64 [rdi+rdx-0x80], zmm0; vzeroupper; ret; 
0x0000000045711e: vmovdqu64 [rdi+0x40], zmm1; vmovdqu64 [rdi+rdx-0x40], zmm2; vmovdqu64 [rdi+rdx-0x80], zmm3; vzeroupper; ret; 
0x000000004572be: vmovdqu64 [rdi+0x80], zmm6; vmovdqu64 [rdi+0xc0], zmm7; vmovdqu64 [r11], zmm8; vzeroupper; ret; 
0x000000004572c5: vmovdqu64 [rdi+0xc0], zmm7; vmovdqu64 [r11], zmm8; vzeroupper; ret; 
0x000000004570ef: vmovdqu64 [rdi+rdx-0x100], zmm7; vzeroupper; ret; 
0x0000000045784a: vmovdqu64 [rdi+rdx-0x40], zmm0; vmovdqu64 [rdi+rdx-0x80], zmm0; vzeroupper; ret; 
0x000000004577b9: vmovdqu64 [rdi+rdx-0x40], zmm0; vmovdqu64 [rdi], zmm0; vzeroupper; ret; 
0x00000000456f62: vmovdqu64 [rdi+rdx-0x40], zmm1; vzeroupper; ret; 
0x00000000457125: vmovdqu64 [rdi+rdx-0x40], zmm2; vmovdqu64 [rdi+rdx-0x80], zmm3; vzeroupper; ret; 
0x00000000457852: vmovdqu64 [rdi+rdx-0x80], zmm0; vzeroupper; ret; 
0x0000000045712d: vmovdqu64 [rdi+rdx-0x80], zmm3; vzeroupper; ret; 
0x000000004570df: vmovdqu64 [rdi+rdx-0x80], zmm5; vmovdqu64 [rdi+rdx-0xc0], zmm6; vmovdqu64 [rdi+rdx-0x100], zmm7; vzeroupper; ret; 
0x000000004570e7: vmovdqu64 [rdi+rdx-0xc0], zmm6; vmovdqu64 [rdi+rdx-0x100], zmm7; vzeroupper; ret; 
0x00000000456f5c: vmovdqu64 [rdi], zmm0; vmovdqu64 [rdi+rdx-0x40], zmm1; vzeroupper; ret; 
0x000000004577c1: vmovdqu64 [rdi], zmm0; vzeroupper; ret; 
0x00000000456f54: vmovdqu64 zmm1, [rsi+rdx-0x40]; vmovdqu64 [rdi], zmm0; vmovdqu64 [rdi+rdx-0x40], zmm1; vzeroupper; ret; 
0x00000000456558: vmovq [rdi], xmm0; vmovq [rsi-0x8], xmm0; ret; 
0x0000000045655c: vmovq [rsi-0x8], xmm0; ret; 
0x0000000043ee52: vmovups [r9+0x100], zmm12; vmovups [r9+0x140], zmm13; vmovups [r9+0x180], zmm14; vmovups [r9+0x1c0], zmm15; ret; 
0x0000000043ee59: vmovups [r9+0x140], zmm13; vmovups [r9+0x180], zmm14; vmovups [r9+0x1c0], zmm15; ret; 
0x0000000043ee60: vmovups [r9+0x180], zmm14; vmovups [r9+0x1c0], zmm15; ret; 
0x0000000043ee67: vmovups [r9+0x1c0], zmm15; ret; 
0x0000000043eceb: vmovups [r9-0x100], zmm12; vmovups [r9-0xc0], zmm13; vmovups [r9-0x80], zmm14; vmovups [r9-0x40], zmm15; ret; 
0x0000000043eab1: vmovups [r9-0x100], zmm4; vmovups [r9-0xc0], zmm5; vmovups [r9-0x80], zmm6; vmovups [r9-0x40], zmm7; ret; 
0x0000000043ed00: vmovups [r9-0x40], zmm15; ret; 
0x0000000043eb02: vmovups [r9-0x40], zmm3; ret; 
0x0000000043eac6: vmovups [r9-0x40], zmm7; ret; 
0x0000000043ecf9: vmovups [r9-0x80], zmm14; vmovups [r9-0x40], zmm15; ret; 
0x0000000043eafb: vmovups [r9-0x80], zmm2; vmovups [r9-0x40], zmm3; ret; 
0x0000000043eabf: vmovups [r9-0x80], zmm6; vmovups [r9-0x40], zmm7; ret; 
0x0000000043ecf2: vmovups [r9-0xc0], zmm13; vmovups [r9-0x80], zmm14; vmovups [r9-0x40], zmm15; ret; 
0x0000000043eab8: vmovups [r9-0xc0], zmm5; vmovups [r9-0x80], zmm6; vmovups [r9-0x40], zmm7; ret; 
0x0000000043eaf4: vmovups [rdi+0x40], zmm1; vmovups [r9-0x80], zmm2; vmovups [r9-0x40], zmm3; ret; 
0x00000000456511: vmovups [rdi+0x40], zmm2; vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x0000000043efb4: vmovups [rdi-0x140], zmm12; vmovups [rdi-0x180], zmm13; vmovups [rdi-0x1c0], zmm14; vmovups [rdi-0x200], zmm15; ret; 
0x0000000043efbb: vmovups [rdi-0x180], zmm13; vmovups [rdi-0x1c0], zmm14; vmovups [rdi-0x200], zmm15; ret; 
0x0000000043efc2: vmovups [rdi-0x1c0], zmm14; vmovups [rdi-0x200], zmm15; ret; 
0x0000000043efc9: vmovups [rdi-0x200], zmm15; ret; 
0x0000000043eaee: vmovups [rdi], zmm0; vmovups [rdi+0x40], zmm1; vmovups [r9-0x80], zmm2; vmovups [r9-0x40], zmm3; ret; 
0x0000000045650b: vmovups [rdi], zmm2; vmovups [rdi+0x40], zmm2; vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x0000000045652c: vmovups [rdi], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x000000004566e7: vmovups [rsi+0x100], zmm2; vmovups [rsi+0x140], zmm2; vmovups [rsi+0x180], zmm2; vmovups [rsi+0x1c0], zmm2; ret; 
0x000000004566ee: vmovups [rsi+0x140], zmm2; vmovups [rsi+0x180], zmm2; vmovups [rsi+0x1c0], zmm2; ret; 
0x000000004566f5: vmovups [rsi+0x180], zmm2; vmovups [rsi+0x1c0], zmm2; ret; 
0x000000004566fc: vmovups [rsi+0x1c0], zmm2; ret; 
0x00000000456651: vmovups [rsi+0x40], zmm2; vmovups [rsi+0x80], zmm2; vmovups [rsi+0xc0], zmm2; ret; 
0x00000000456658: vmovups [rsi+0x80], zmm2; vmovups [rsi+0xc0], zmm2; ret; 
0x0000000045665f: vmovups [rsi+0xc0], zmm2; ret; 
0x000000004564e9: vmovups [rsi-0x100], zmm2; vmovups [rsi-0xc0], zmm2; vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x000000004564fe: vmovups [rsi-0x40], zmm2; ret; 
0x000000004564f7: vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x000000004564f0: vmovups [rsi-0xc0], zmm2; vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x0000000045664b: vmovups [rsi], zmm2; vmovups [rsi+0x40], zmm2; vmovups [rsi+0x80], zmm2; vmovups [rsi+0xc0], zmm2; ret; 
0x000000004854f1: vmulps xmm5, xmm2, [rdx+rdi*8]; dec dword ptr [rcx-0x77]; ret; 
0x0000000045b0ac: vpaddsw ymm0, ymm15, [rcx+0xf]; lahf; ret; 
0x000000004451d1: vpcmpeqb xmm0, xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000432645: vpcmpeqb xmm2, xmm2, [rdi]; vpmovmskb eax, xmm2; sub eax, 0xffff; jne 0x0000000000432520; ret; 
0x00000000432607: vpcmpeqb xmm2, xmm2, xmm1; vpmovmskb eax, xmm2; sub eax, 0xffff; jne 0x0000000000432520; ret; 
0x0000000043260b: vpmovmskb eax, xmm2; sub eax, 0xffff; jne 0x0000000000432520; ret; 
0x00000000432758: vpmovmskb eax, ymm2; sub eax, 0xffffffff; jne 0x0000000000432520; vzeroupper; ret; 
0x00000000432513: vpmovmskb eax, ymm2; sub eax, 0xffffffff; jne short 0x0000000000432520; vzeroupper; ret; 
0x000000004324d4: vptest ymm5, ymm0; jae 0x0000000000432770; xor eax, eax; vzeroupper; ret; 
0x0000000042cde4: vzeroupper; ret; 
0x00000000431e50: vzeroupper; xor eax, eax; ret; 
0x00000000465f87: xchg [rax*1+0x39480000], esp; ret; 
0x0000000041fec3: xchg [rax+0x1], ch; add [rax], al; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [r15+0x18]; 
0x0000000047bb45: xchg [rax+0x1], ecx; clc; notrack jmp rax; 
0x0000000041ca53: xchg [rax+0x31000000], ch; ror byte ptr [rax-0x77], cl; out dx, al; mov rdi, rbx; call qword ptr [r12+0x80]; 
0x000000004969ce: xchg [rax+0x48000000], bh; add esp, 0x8; ret; 
0x000000004969bb: xchg [rax+0x48000000], ch; add esp, 0x8; ret; 
0x00000000496a1a: xchg [rax+0x48000000], dh; add esp, 0x8; ret; 
0x0000000047d5b6: xchg [rax+0x48000000], esp; cmp dword ptr [rax+0x30], 0x0; je short 0x000000000047d5c8; ret; 
0x00000000479b1b: xchg [rax+0xfffffee], ebx; mov dh, 0x4; add cl, [rcx-0x77]; ret far; 
0x000000004984a5: xchg [rax+rax+0x438b0000], ecx; or [rcx+0x63], cl; add al, 0x84; add rax, r12; notrack jmp rax; 
0x0000000041c33f: xchg [rax+rax-0x2dcf0000], ch; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x00000000498ba6: xchg [rax-0x3d000000], ebx; nop [rax]; endbr64; mov [rdi+0x98], rsi; ret; 
0x00000000498c16: xchg [rax-0x3d000000], esi; nop [rax]; endbr64; mov rax, [rdi+0xa8]; ret; 
0x00000000498bc6: xchg [rax-0x3d000000], esp; nop [rax]; endbr64; mov rax, [rdi+0xb8]; ret; 
0x000000004574b7: xchg [rax-0xd000000], eax; movq [rdi+rdx-0x10], mm0; movdqu [rdi], xmm0; ret; 
0x0000000041f065: xchg [rax], eax; add [rax], al; mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rbx+0x18]; 
0x00000000486fc2: xchg [rax], ebx; add al, 0x0; add [rcx-0x77], cl; ret; 
0x00000000420236: xchg [rbp+0x31000001], dl; shl byte ptr [rcx], cl; test byte ptr [rax-0x77], 0xdf; call qword ptr [r15+0x58]; 
0x0000000047db86: xchg [rbp+0x4c000001], dh; mov edi, ebp; call qword ptr [r14+0x20]; 
0x0000000041f570: xchg [rbx+0x48000001], ah; mov edi, ebx; call qword ptr [rbp+0x20]; 
0x00000000431730: xchg [rbx+0x48000002], bl; add eax, edi; add rax, rcx; ret; 
0x00000000497baf: xchg [rbx+0xffff69b], eax; mov dh, 0xc0; movsxd rax, [r13+rax*4]; add rax, r13; notrack jmp rax; 
0x0000000047d3c2: xchg [rcx+0x44000001], cl; mov esi, edi; mov rdi, rbp; call qword ptr [r14+0x18]; 
0x00000000487521: xchg [rcx+0x4800000c], eax; lea edi, [rip+0x2d1cb]; movsxd rax, [rdi+r12*4]; add rax, rdi; notrack jmp rax; 
0x00000000457995: xchg [rcx+0x63480004], esp; add al, 0xbe; add rax, rsi; notrack jmp rax; 
0x00000000479922: xchg [rcx+0xffffff0], edx; mov dh, 0xc; add cl, [rax-0x73]; add eax, 0x4d78e; jmp qword ptr [rax+rcx*8]; 
0x000000004118d2: xchg [rcx+rax-0x10], cl; notrack jmp rax; 
0x0000000041a01f: xchg [rcx+rax], ah; add [rax], al; xor edx, edx; mov rdi, r15; call qword ptr [rbx+0x80]; 
0x0000000041f5ec: xchg [rdi+0x1], ch; add [rax], al; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp+0x18]; 
0x000000004184b4: xchg [rdi+0x1], dl; add [rax], al; xor esi, esi; mov rdi, rbp; call qword ptr [rbx+0x10]; 
0x0000000041d244: xchg [rdi+0x48000000], ah; mov edi, ebp; call qword ptr [r13+0x20]; 
0x00000000412e33: xchg [rdi+0x4c000009], ah; mov edx, ebp; mov rsi, r10; mov rdi, r15; call qword ptr [rcx+0x38]; 
0x0000000041ee8c: xchg [rdi], bh; add [rax], al; mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rbx+0x18]; 
0x000000004118ca: xchg [rdx+0x49000006], esp; movsxd eax, [rsi+rax*4]; add rax, r14; notrack jmp rax; 
0x00000000475d8a: xchg [rdx+0x49000008], esi; movsxd eax, [rsi+rax*4]; add rax, r14; notrack jmp rax; 
0x0000000047c579: xchg [rdx+0x4c000000], al; mov edx, esp; mov rsi, rbp; mov rdi, rbx; call qword ptr [r13+0x38]; 
0x00000000437935: xchg [rdx+0x63490006], edx; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000496abc: xchg [rdx-0x54], esp; idiv bh; movsxd rax, [r14+rax*4]; add rax, r14; notrack jmp rax; 
0x00000000476767: xchg [rdx], al; add al, ch; and ebx, ecx; clc; call qword ptr [rax-0x3f7c3977]; 
0x00000000468039: xchg [rdx], dl; add al, [rax]; add [rcx-0x77], al; xor ecx, [rcx-0x77]; ret far; 
0x0000000041c546: xchg [rip+0x48000002], ah; lea esi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax+0x90]; 
0x0000000047bc36: xchg [rip+0x48000002], esp; lea ecx, [rip+0x37a56]; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x0000000041d0f5: xchg [rsi+0x48000001], cl; mov esi, esp; mov rdi, rbp; call qword ptr [r13+0x90]; 
0x000000004794fd: xchg [rsi+0xffffff4], esi; mov dh, 0x4; add cl, [rax-0x73]; or eax, 0x4dcb3; jmp qword ptr [rcx+rax*8]; 
0x00000000492cf6: xchg [rsi-0x1], ah; jmp qword ptr [rsi+0xf]; 
0x00000000427b9b: xchg al, al; add [rax], al; add [rax-0x7d], cl; call far fword ptr [rdi]; 
0x000000004961fe: xchg ax, ax; call rax; 
0x0000000045314e: xchg ax, ax; mov al, [rcx]; mov [rdx], al; lea rax, [rdx]; ret; 
0x0000000045362e: xchg ax, ax; mov dx, [rsi]; mov [rdi], dx; ret; 
0x0000000042917e: xchg ax, ax; mov eax, 0x16; ret; 
0x00000000453c7e: xchg ax, ax; mov edx, [rsi]; mov [rdi], edx; lea rax, [rdi+0x3]; ret; 
0x0000000045009e: xchg ax, ax; mov edx, [rsi]; mov [rdi], edx; vzeroupper; ret; 
0x000000004994de: xchg ax, ax; mov rsi, r14; mov rdi, rbx; call r15; 
0x00000000453dae: xchg ax, ax; movdqu xmm0, [rsi]; movdqu [rdi], xmm0; lea rax, [rdi+0xf]; ret; 
0x0000000045626e: xchg ax, ax; rep ret; 
0x00000000401cde: xchg ax, ax; ret; 
0x000000004319ce: xchg ax, ax; xor eax, eax; ret; 
0x0000000048aba2: xchg bh, dh; jmp qword ptr [rsi+0x2e]; 
0x0000000041a886: xchg ch, dl; add [rax], al; add [rdx+0x1], bh; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x0000000048239f: xchg ebp, eax; add [rcx+rax-0x16], cl; notrack jmp rdx; 
0x00000000498db5: xchg ebp, eax; cmp ah, 0xff; jmp qword ptr [rsi+0xf]; 
0x00000000489b1b: xchg ebp, eax; cmp ch, 0xff; jmp qword ptr [rsi+0xf]; 
0x000000004992b7: xchg ebp, eax; cmp dh, 0xff; jmp qword ptr [rsi+0xf]; 
0x0000000049329f: xchg ebp, eax; push rax; add al, 0x0; add bl, ch; ret; 
0x00000000485fd2: xchg ebp, eax; ret; 
0x0000000048ff84: xchg ebp, eax; stc; jmp qword ptr [rsi+0xf]; 
0x00000000469f5f: xchg ebp, ecx; add al, 0x0; add [rax+0x39], cl; ret far; 
0x0000000040f1af: xchg ebx, eax; add r10, r11; notrack jmp r10; 
0x00000000432814: xchg ebx, eax; add rcx, r11; notrack jmp rcx; 
0x00000000433e77: xchg ebx, eax; add rsi, rdx; add rdi, rdx; add r9, r11; notrack jmp r9; 
0x00000000403219: xchg ebx, eax; jns short 0x0000000000403221; add [rax-0x77], cl; ret; 
0x000000004534dc: xchg ebx, eax; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000433fb2: xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000041f216: xchg ebx, eax; nop [rax+rax]; endbr64; mov eax, 0xffffffff; ret; 
0x000000004193c8: xchg ebx, eax; nop; add [rax], al; add [rcx+0x1], cl; ret; 
0x00000000410785: xchg ebx, eax; or eax, [rax]; syscall; 
0x00000000490301: xchg ebx, eax; rol dword ptr [rbx], 0x0; add word ptr [rdx+rax*2], 0x1; ret; 
0x0000000047bc45: xchg ecx, eax; add rdx, rcx; notrack jmp rdx; 
0x00000000413cf2: xchg ecx, eax; fdiv st(7), st; jmp qword ptr [rsi+0x2e]; 
0x0000000047fd03: xchg ecx, eax; lea eax, [rax+rax]; test rax, rax; je short 0x000000000047fd40; call rax; 
0x0000000042a35b: xchg ecx, eax; lock add [rax], al; cmovne rax, rdx; ret; 
0x00000000445071: xchg ecx, eax; mov eax, [rcx+rax*4]; sub eax, edx; ret; 
0x00000000401d56: xchg ecx, eax; or [rax], eax; mov byte ptr [rip+0xc987f], 0x1; pop rbp; ret; 
0x0000000043f0fa: xchg ecx, eax; sar ch, 0xff; jmp qword ptr [rdx-0xf]; 
0x0000000044379f: xchg ecx, eax; sub eax, edx; ret; 
0x0000000045eca0: xchg edi, eax; add [rax], al; add [rax-0x7d], cl; ret; 
0x0000000048fd2c: xchg edi, eax; add al, [rax]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000049348c: xchg edi, eax; add eax, [rax]; mov edi, 0x3005; mov eax, 0x9e; syscall; 
0x0000000040857e: xchg edi, eax; idiv edi; jmp qword ptr [rsi+0xf]; 
0x000000004189d5: xchg edi, eax; mov al, [0xe08a8948000000]; add [rax], al; ret; 
0x00000000434b65: xchg edi, eax; mov esi, 0x63490006; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000422888: xchg edi, eax; or al, [rax]; syscall; 
0x00000000469b4a: xchg edi, eax; stc; jmp qword ptr [rsi-0x70]; 
0x00000000460ffa: xchg edx, eax; add edx, edi; jmp qword ptr [rsi+0x48]; 
0x00000000415a52: xchg edx, eax; idiv bh; jmp qword ptr [rsi+0x2e]; 
0x00000000434d6a: xchg edx, eax; mov esp, 0x63490006; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000045aab2: xchg edx, eax; rol byte ptr [rax+rax*8-0x38b7af8c], 0xc0; sar bh, 0xff; jmp qword ptr [rdi+rax*8]; 
0x0000000043114c: xchg edx, eax; sub eax, edx; ret; 
0x0000000045ab4e: xchg edx, edi; jmp qword ptr [rsi+0x2e]; 
0x00000000457a64: xchg esi, eax; add rax, rsi; notrack jmp rax; 
0x0000000040eeac: xchg esi, eax; add rdx, rsi; notrack jmp rdx; 
0x0000000041892c: xchg esi, eax; nop [rax]; xor r8d, r8d; mov rax, r8; ret; 
0x0000000041691e: xchg esi, eax; out 0xff, al; jmp qword ptr [rsi+0xf]; 
0x0000000049aaa6: xchg esi, eax; ret; 
0x0000000040c8fd: xchg esi, eax; sbb eax, [rax]; add [rbx-0x7bf0fe08], al; ret; 
0x0000000044c929: xchg esp, eax; or [rax], eax; add [rbp-0x77], cl; ret far; 
0x00000000405121: xchg esp, eax; ret; 
0x00000000478d57: xchg esp, edx; sub [rax], al; add [rax-0x7d], cl; ret; 
0x0000000048fd2b: xchg r15d, eax; add al, [rax]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000045d61e: xlat [rbx]; add [rax], al; add [rax+0x1], cl; ret far; 
0x0000000047992f: xlat [rbx]; add al, 0x0; jmp qword ptr [rax+rcx*8]; 
0x00000000433e7d: xlat [rbx]; add r9, r11; notrack jmp r9; 
0x0000000046fd18: xlat [rbx]; cmp rax, 0x9; ja short 0x000000000046fcf0; mov rax, r8; ret; 
0x0000000047db81: xlat [rbx]; cmp rax, rdi; jbe 0x000000000047dd40; mov rdi, r13; call qword ptr [r14+0x20]; 
0x000000004567ac: xlat [rbx]; jb short 0x00000000004567b2; rep movsb [rdi], [rsi]; ret; 
0x0000000043dae0: xlat [rbx]; lea r11, [rip+0x63798]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043d92d: xlat [rbx]; lea r11, [rip+0x63b8b]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c088: xlat [rbx]; lea r11, [rip+0x65430]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043bf21: xlat [rbx]; lea r11, [rip+0x65597]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043afac: xlat [rbx]; lea r11, [rip+0x65dcc]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043ae19: xlat [rbx]; lea r11, [rip+0x6619f]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004391fb: xlat [rbx]; lea r11, [rip+0x679bd]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000439588: xlat [rbx]; lea r11, [rip+0x67a30]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043940a: xlat [rbx]; lea r11, [rip+0x67bae]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000436a4c: xlat [rbx]; lea r11, [rip+0x6a16c]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000436987: xlat [rbx]; lea r11, [rip+0x6a231]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043406c: xlat [rbx]; lea r11, [rip+0x6c98c]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000433fa7: xlat [rbx]; lea r11, [rip+0x6ca51]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000433262: xlat [rbx]; lea r11, [rip+0x6d656]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x000000004331e8: xlat [rbx]; lea r11, [rip+0x6d6d0]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000433159: xlat [rbx]; lea r11, [rip+0x6d75f]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000432f4e: xlat [rbx]; lea r11, [rip+0x6d96a]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000432e1c: xlat [rbx]; lea r11, [rip+0x6da9c]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000432d56: xlat [rbx]; lea r11, [rip+0x6db62]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000432cd8: xlat [rbx]; lea r11, [rip+0x6dbe0]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000432c43: xlat [rbx]; lea r11, [rip+0x6dc75]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000432a46: xlat [rbx]; lea r11, [rip+0x6de72]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000432914: xlat [rbx]; lea r11, [rip+0x6dfa4]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000432809: xlat [rbx]; lea r11, [rip+0x6e0af]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000459691: xlat [rbx]; mov eax, esi; syscall; 
0x000000004596a0: xlat [rbx]; mov eax, r8d; syscall; 
0x0000000041e855: xlat [rbx]; or al, [rax]; syscall; 
0x0000000042ce64: xlat [rbx]; ret far; 
0x0000000041b165: xlat [rbx]; ret; 
0x0000000047ee65: xlat [rbx]; rol ch, cl; std; xlat [rbx]; ret; 
0x00000000431dcf: xlat [rbx]; rol dword ptr [rbp+0x311b75c0], 0xc0; vzeroupper; ret; 
0x00000000431943: xlat [rbx]; rol dword ptr [rbp+0x315775c0], 0xc0; ret; 
0x00000000431913: xlat [rbx]; rol dword ptr [rbp-0x5c7af040], 0x0; add [rax], al; xor eax, eax; ret; 
0x0000000047ec55: xlat [rbx]; shl byte ptr [rsi+0xf], 0x1; outsd dx, [rsi]; ret; 
0x00000000465b31: xlat [rbx]; stc; jmp qword ptr [rsi+0x66]; 
0x00000000405232: xor [r11-0x78f0fd07], r8b; ret; 
0x0000000043189d: xor [r14+0xf], r12b; xlat [rbx]; ret; 
0x0000000041fbed: xor [r15], cl; adc [rcx+0x40], eax; mov qword ptr [rdi+0xa8], 0x0; ret; 
0x0000000041ec62: xor [r8-0x77], cl; and [r9], sil; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x5d], bl; ret; 
0x00000000480517: xor [rax+0x106], bh; syscall; 
0x00000000418e96: xor [rax+0x63], ecx; ror dword ptr [rcx+rcx*4-0x12], cl; mov rdi, r15; call qword ptr [rbp+0x38]; 
0x00000000410351: xor [rax-0x39], ecx; ret; 
0x00000000465cf0: xor [rax-0x75], cl; and al, 0x18; mov rsi, [rsp+0x48]; mov rdi, [rsp+0x40]; call r14; 
0x00000000466243: xor [rax-0x75], cl; je short 0x000000000046626c; mov rdi, [rsp+0x40]; call rbx; 
0x00000000466c83: xor [rax-0x75], cl; je short 0x0000000000466cac; mov rdi, [rsp+0x38]; mov rax, [rsp+0x20]; call rax; 
0x00000000467277: xor [rax-0x75], cl; je short 0x00000000004672a0; mov rdi, [rsp+0x38]; call r15; 
0x0000000041ec63: xor [rax-0x77], cl; and [r9], sil; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x5d], bl; ret; 
0x0000000048b149: xor [rax-0x77], cl; fmul st, qword ptr [rax-0x75]; sbb al, 0x24; add rsp, 0x30; bnd ret; 
0x0000000048f744: xor [rax-0x77], cl; or [r8+0x2], r15b; ret; 
0x0000000045ad13: xor [rax-0x77], ecx; out dx, eax; xor esi, esi; call r12; 
0x0000000049c2fa: xor [rax-0x7b], cl; push qword ptr [rbp+rdx-0x18]; ret far; 
0x00000000428806: xor [rax-0x7b], ecx; div byte ptr [rsp+rcx+0x48]; lea eax, [rax-0x10]; ret; 
0x00000000463835: xor [rax-0x7d], ecx; ret; 
0x00000000402605: xor [rax], al; add [rax+0x9e], bh; syscall; 
0x00000000410275: xor [rax], al; add [rax], al; call rax; 
0x00000000410257: xor [rax], al; add [rax], al; call rdx; 
0x00000000457ab4: xor [rax], al; add [rax], al; pop rbx; ret; 
0x0000000047d5be: xor [rax], al; je short 0x000000000047d5c8; ret; 
0x00000000422a32: xor [rax], eax; add [rax-0x77], cl; add eax, 0xa7104; ret; 
0x00000000424f19: xor [rax], ecx; add [rax+0x39], ecx; ret; 
0x0000000048a946: xor [rax], edx; jae short 0x000000000048a8f5; xor eax, eax; ret; 
0x0000000045df13: xor [rax], esp; jmp rdx; 
0x0000000048a945: xor [rax], r10d; jae short 0x000000000048a8f5; xor eax, eax; ret; 
0x00000000424f18: xor [rax], r9; add [rax+0x39], ecx; ret; 
0x00000000456a09: xor [rbp+0xf], al; adc [rbx], eax; ret; 
0x00000000499756: xor [rbp+0xf], dh; mov rax, [rsi+0x10]; add rsp, 0x8; ret; 
0x00000000412647: xor [rbp+rcx*4+0x50], cl; inc esi; test [rax], eax; idiv edi; jmp qword ptr [rax]; 
0x0000000040f686: xor [rbx+0x5d], bl; pop r12; pop r13; pop r14; ret; 
0x0000000041e71c: xor [rbx+0x5d], bl; pop r12; ret; 
0x000000004965fc: xor [rbx+0x5d], bl; pop r14; ret; 
0x00000000403f43: xor [rbx+0xc], edi; add cl, ch; ret far; 
0x0000000041fd8d: xor [rbx-0x3f8a0008], al; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000405233: xor [rbx-0x78f0fd07], al; ret; 
0x00000000496587: xor [rcx+0x21], cl; ret far; 
0x0000000047d61c: xor [rcx+0x5d5b7453], cl; pop r12; ret; 
0x0000000041998d: xor [rcx+rcx*4-0x1], cl; call qword ptr [r14+0x90]; 
0x00000000493faf: xor [rcx+rcx*4-0x20], cl; pop r12; ret; 
0x0000000045b36a: xor [rcx+rcx*4-0x9], cl; mov rax, [rbp-0x58]; mov r15d, r13d; call rax; 
0x0000000041bc94: xor [rcx], al; add [rax], al; mov rsi, rsp; mov rdi, rbp; call qword ptr [r15+0x90]; 
0x0000000041fbee: xor [rdi], cl; adc [rcx+0x40], eax; mov qword ptr [rdi+0xa8], 0x0; ret; 
0x0000000043698b: xor [rdx+0x63490006], esp; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043958c: xor [rdx+0x6], bh; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000048538e: xor [rsi+0xf], ah; insb [rdi], dx; ret; 
0x0000000047ec1c: xor [rsi+0xf], ah; outsd dx, [rsi]; ret; 
0x0000000043189e: xor [rsi+0xf], ah; xlat [rbx]; ret; 
0x0000000043c08c: xor [rsi+rax], dl; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000045827b: xor [rsp+rax-0x4ff31800], ebx; cli; jmp qword ptr [rsi+0x2e]; 
0x0000000047e9d3: xor al, 0x24; pop r12; pop r13; pop r14; ret; 
0x0000000047c045: xor al, 0x3; add [rax], al; add bl, ch; ret far; 
0x0000000047bf9d: xor al, 0x48; lea ecx, [rbx+0x40]; mov esi, 0x1; mov rdi, rbx; call r8; 
0x000000004969cb: xor al, 0x48; mov eax, [rsi+0xb8]; add rsp, 0x8; ret; 
0x0000000048f5d4: xor al, 0xb8; add [rax], eax; add [rax], al; mov [rdi], rsi; ret; 
0x00000000417d0b: xor al, 0xbe; add [rax], eax; add [rax], al; mov rdi, rbx; call rax; 
0x0000000042a1da: xor al, ch; add al, [rax]; lea rax, [rip+0x2c5eb]; cmove rax, rdx; ret; 
0x000000004319cc: xor bl, al; xchg ax, ax; xor eax, eax; ret; 
0x000000004769e0: xor ch, cl; sahf; idiv bh; jmp qword ptr [rsi+0x2e]; 
0x0000000045ad25: xor cl, [rax-0x77]; out dx, eax; mov edx, r13d; mov esi, 0x1; call r12; 
0x0000000045adb5: xor cl, [rax-0x77]; out dx, eax; mov rdx, r13; mov esi, 0x1; call r12; 
0x00000000498af4: xor cl, [rax]; jne 0x0000000000401755; mov rax, [rax]; add rsp, 0x8; ret; 
0x0000000048b042: xor dl, dh; jmp r11; 
0x0000000048b154: xor dl, dh; ret; 
0x00000000486feb: xor eax, 0x2d670; movsxd rax, [rsi+r12*4]; add rax, rsi; notrack jmp rax; 
0x00000000499752: xor eax, 0x303c2376; jne short 0x0000000000499768; mov rax, [rsi+0x10]; add rsp, 0x8; ret; 
0x000000004997b2: xor eax, 0x303c2376; jne short 0x00000000004997c8; mov rax, [rsi+0x10]; add rsp, 0x8; ret; 
0x0000000049348a: xor eax, 0x397b1; mov edi, 0x3005; mov eax, 0x9e; syscall; 
0x00000000456fd7: xor eax, 0x48000002; mov ecx, edx; rep movsb [rdi], [rsi]; ret; 
0x0000000045bbb7: xor eax, 0x49000001; mov edi, [rbp]; call rbx; 
0x00000000437c87: xor eax, 0x4900068f; movsxd edx, [rbx+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000434ac7: xor eax, 0x490006bf; movsxd edx, [rbx+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000457994: xor eax, 0x4a187; movsxd rax, [rsi+rdi*4]; add rax, rsi; notrack jmp rax; 
0x00000000479bf1: xor eax, 0x4d1ca; mov dword ptr [rbp-0x530], 0x1; mov dword ptr [rbp-0x4e8], 0x0; mov rax, [rsi+rax*8]; jmp rax; 
0x00000000479c76: xor eax, 0x4d545; mov r11, rcx; mov dword ptr [rbp-0x508], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x00000000479c3c: xor eax, 0x4d57f; mov r11, rcx; mov dword ptr [rbp-0x520], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x00000000479b6e: xor eax, 0x4d64d; mov r11, rcx; mov dword ptr [rbp-0x4f8], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x00000000479b29: xor eax, 0x4d692; mov dword ptr [rbp-0x4e0], 0x1; mov dword ptr [rbp-0x4f0], 0x20; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000047952e: xor eax, 0x4dc8d; mov r11, rcx; mov dword ptr [rbp-0x514], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x000000004794ae: xor eax, 0x4dd0d; mov r11, rcx; mov dword ptr [rbp-0x528], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x000000004767c9: xor eax, 0x503f2; movzx eax, byte ptr [rdi+rax]; jmp qword ptr [rsi+rax*8]; 
0x0000000042d28e: xor eax, 0x634f0007; or al, 0x8a; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000040b25f: xor eax, 0x7503f883; ret far; 
0x000000004578f9: xor eax, 0x7701fa80; cmp dh, [rdx+0x2]; mov [rdi], cl; vzeroupper; ret; 
0x0000000041778d: xor eax, 0x8788a; movzx eax, al; movsxd rax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x0000000040eea2: xor eax, 0x8fa19; mov edx, edx; movsxd rdx, [rsi+rdx*4]; add rdx, rsi; notrack jmp rdx; 
0x00000000402afa: xor eax, 0x9bb01; movsxd rcx, [rsi+rcx*4]; add rcx, rsi; notrack jmp rcx; 
0x000000004803f4: xor eax, 0xa8c48148; add [rax], al; add [rbp+0x41], bl; pop rsp; ret; 
0x00000000414e7b: xor eax, 0xb18a0; sub eax, 0x20; cdqe; movzx eax, byte ptr [rbx+rax]; jmp qword ptr [rsi+rax*8]; 
0x0000000048f33b: xor eax, [0x28]; jne 0x000000000048f3c5; leave; ret; 
0x0000000040f7e5: xor eax, [0x28]; jne short 0x000000000040f814; mov eax, r8d; add rsp, 0x118; ret; 
0x000000004259d5: xor eax, [0x28]; jne short 0x00000000004259e4; add rsp, 0x10; pop rbp; ret; 
0x0000000046dc3e: xor eax, [0x28]; jne short 0x000000000046dc4c; add rsp, 0x18; ret; 
0x0000000046deb9: xor eax, [0x28]; jne short 0x000000000046df04; mov eax, r9d; add rsp, 0x148; ret; 
0x00000000480646: xor eax, [0x28]; jne short 0x0000000000480674; mov eax, r9d; add rsp, 0x38; ret; 
0x0000000048cb37: xor eax, [0x28]; jne short 0x000000000048cb46; add rsp, 0x20; pop rbx; ret; 
0x00000000410272: xor eax, [0x30]; call rax; 
0x00000000456ba4: xor eax, [rax+0x3b7701fa]; jb short 0x0000000000456bb1; movzx ecx, byte ptr [rsi]; mov [rdi], cl; ret; 
0x0000000049d010: xor eax, eax; add rsp, 0x10; pop rbx; ret; 
0x0000000041e264: xor eax, eax; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000041ec68: xor eax, eax; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000046f647: xor eax, eax; add rsp, 0x8; ret; 
0x0000000046077b: xor eax, eax; call rbx; 
0x0000000045a816: xor eax, eax; cmp esi, 0x9; je short 0x000000000045a848; mov eax, 0x48; syscall; 
0x0000000042167f: xor eax, eax; cmp rdx, rdi; setae al; ret; 
0x0000000046dcfd: xor eax, eax; mov [rbx+0x40], esi; pop rbx; ret; 
0x0000000047d74f: xor eax, eax; mov [rbx], ecx; pop rbx; ret; 
0x000000004248e8: xor eax, eax; mov dword ptr fs:[rax], 0xc; mov rax, r8; ret; 
0x000000004806b4: xor eax, eax; mov qword ptr [rip+0x4bc37], 0xffffffffffffffff; ret; 
0x00000000410549: xor eax, eax; mov rax, r8; pop rbx; pop rbp; ret; 
0x0000000041053e: xor eax, eax; mov rax, r8; ret; 
0x00000000458fa0: xor eax, eax; mov rcx, [rsp+0x20]; mov rdi, rbp; mov rsi, [rsp+0x18]; call rbx; 
0x00000000458397: xor eax, eax; mov rdi, r12; lea r9, [rsp+0x30]; call rbx; 
0x0000000041adcc: xor eax, eax; mov rdi, r13; lea r9, [rsp+0x18]; call rbp; 
0x000000004805ce: xor eax, eax; mov rdx, rsp; mov eax, 0x10; syscall; 
0x0000000041d421: xor eax, eax; pop rbp; pop r12; ret; 
0x0000000042301b: xor eax, eax; pop rbx; pop rbp; pop r12; ret; 
0x000000004895e4: xor eax, eax; pop rbx; pop rbp; ret; 
0x000000004579a8: xor eax, eax; pop rbx; ret; 
0x0000000041bc1f: xor eax, eax; punpcklqdq xmm0, xmm0; movups [rbx+0x8], xmm0; pop rbx; ret; 
0x0000000040f6f8: xor eax, eax; ret; 
0x0000000042bb1e: xor eax, eax; sub eax, ecx; ret; 
0x00000000459e98: xor eax, eax; syscall; 
0x00000000496448: xor eax, eax; test r8d, r8d; jne 0x00000000004963a0; add rsp, 0x38; ret; 
0x0000000041d504: xor eax, eax; test rdx, rdx; jne short 0x000000000041d510; ret; 
0x00000000431570: xor eax, eax; vzeroupper; ret; 
0x0000000040f6e6: xor eax, edx; movzx edx, byte ptr [rcx]; test dl, dl; jne short 0x000000000040f6c8; ret; 
0x000000004586ac: xor ebx, [0x28]; jne short 0x00000000004586d4; add rsp, 0x20; pop rbx; ret; 
0x0000000046dfb1: xor ecx, [0x28]; jne 0x000000000046e056; add rsp, 0x98; ret; 
0x00000000410f93: xor ecx, [0x28]; jne short 0x0000000000410fa4; add rsp, 0xd8; ret; 
0x00000000411051: xor ecx, [0x28]; jne short 0x0000000000411062; add rsp, 0xd8; ret; 
0x0000000045a7a4: xor ecx, [0x28]; jne short 0x000000000045a7f3; add rsp, 0x68; ret; 
0x0000000045a833: xor ecx, [0x28]; jne short 0x000000000045a883; add rsp, 0x18; ret; 
0x0000000045a8eb: xor ecx, [0x28]; jne short 0x000000000045a93b; add rsp, 0x58; ret; 
0x0000000045a989: xor ecx, [0x28]; jne short 0x000000000045a9db; add rsp, 0x58; ret; 
0x0000000046fede: xor ecx, [0x28]; jne short 0x000000000046ff05; add rsp, 0x38; ret; 
0x00000000475691: xor ecx, [0x28]; jne short 0x00000000004756a2; add rsp, 0xd8; ret; 
0x0000000048cc32: xor ecx, [0x28]; jne short 0x000000000048cc63; add rsp, 0x38; ret; 
0x0000000048ccfe: xor ecx, [0x28]; jne short 0x000000000048cd34; add rsp, 0x58; ret; 
0x0000000048ce70: xor ecx, [0x28]; jne short 0x000000000048ceb4; add rsp, 0x68; ret; 
0x0000000048d18e: xor ecx, [0x28]; jne short 0x000000000048d1c4; add rsp, 0x58; ret; 
0x0000000048fe35: xor ecx, [0x28]; jne short 0x000000000048fe43; add rsp, 0x28; ret; 
0x00000000493e9e: xor ecx, [0x28]; jne short 0x0000000000493eac; add rsp, 0x38; ret; 
0x0000000041b5d6: xor ecx, [rax-0x7d]; ret; 
0x0000000045b2a1: xor ecx, [rcx-0x77]; fisttp qword ptr [rax-0x77], st; out dx, eax; call r12; 
0x00000000468040: xor ecx, [rcx-0x77]; ret far; 
0x00000000497d7e: xor ecx, [rcx-0x7d]; ret; 
0x00000000426835: xor ecx, [rdx]; add [rax-0x73], cl; add eax, 0xfffff391; mov [rip+0xa32fa], rax; ret; 
0x00000000478adf: xor ecx, ecx; mov dword ptr [rbp-0x4d0], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000046ac93: xor ecx, ecx; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; lea r8, [rsp+0xa0]; call r15; 
0x0000000044506b: xor edi, edi; add eax, 0x91148b00; mov eax, [rcx+rax*4]; sub eax, edx; ret; 
0x000000004028a0: xor edi, edi; mov eax, edx; syscall; 
0x0000000045ac16: xor edi, edi; or r10d, 0x40; mov eax, ecx; syscall; 
0x0000000045aa50: xor edi, edi; syscall; 
0x00000000459c34: xor edx, [0x28]; jne short 0x0000000000459c51; add rsp, 0x28; ret; 
0x0000000045ab97: xor edx, [0x28]; jne short 0x000000000045aba5; add rsp, 0x28; ret; 
0x0000000048058c: xor edx, [0x28]; jne short 0x000000000048059d; movzx eax, al; add rsp, 0x58; ret; 
0x0000000048ff23: xor edx, [0x28]; jne short 0x000000000048ff31; add rsp, 0x38; ret; 
0x00000000410254: xor edx, [0x30]; call rdx; 
0x0000000041a149: xor edx, [rip-0x74b70000]; mov bh, 0x90; add [rax], al; add cl, ch; ret far; 
0x0000000047e1b3: xor edx, edx; add rdi, 0x308; mov esi, 0x80; syscall; 
0x00000000457af6: xor edx, edx; and eax, 0x3fffc00; div ecx; mov eax, eax; ret; 
0x00000000473073: xor edx, edx; div ecx; add r8d, eax; mov eax, r8d; ret; 
0x0000000040143a: xor edx, edx; mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x000000004266eb: xor edx, edx; mov edx, 0x1; mov esi, 0x81; mov eax, ebx; syscall; 
0x000000004216a8: xor edx, edx; mov edx, 0x2; mov esi, 0x80; mov eax, 0xca; syscall; 
0x0000000045b9a0: xor edx, edx; mov esi, 0x1; call r12; 
0x0000000045aa47: xor edx, edx; mov esi, edi; mov eax, 0x12e; xor edi, edi; syscall; 
0x0000000045aa46: xor edx, edx; mov esi, edi; mov eax, 0x12e; xor edi, edi; syscall; 
0x00000000419a58: xor edx, edx; mov rdi, r15; call qword ptr [r14+0x80]; 
0x0000000041a024: xor edx, edx; mov rdi, r15; call qword ptr [rbx+0x80]; 
0x0000000041c042: xor edx, edx; mov rdi, rbp; call qword ptr [rax+0x80]; 
0x0000000041c344: xor edx, edx; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x0000000040f7ca: xor edx, edx; mov rsi, r9; mov edi, 0x2; mov eax, 0xe; syscall; 
0x0000000041ca58: xor edx, edx; mov rsi, rbp; mov rdi, rbx; call qword ptr [r12+0x80]; 
0x000000004607e8: xor edx, edx; movzx eax, al; add eax, 0x1; push rax; call rbx; 
0x0000000041f8c6: xor edx, edx; pop rbx; jmp rax; 
0x0000000045815d: xor edx, edx; push 0x1; lea r9, [rsp+0x20]; call rbx; 
0x0000000042023b: xor edx, edx; xor esi, esi; mov rdi, rbx; call qword ptr [r15+0x58]; 
0x0000000042a19b: xor edx, esi; add [rax], al; cmovne rax, rdx; ret; 
0x00000000468159: xor esi, [rcx-0x76b60007]; ret far; 
0x0000000045ad17: xor esi, esi; call r12; 
0x0000000045de5e: xor esi, esi; lea rdi, [rip+0x44851]; mov eax, 0x15; syscall; 
0x0000000041d4b2: xor esi, esi; mov ecx, 0x3; mov edx, 0x1; mov rdi, rbx; call qword ptr [rbp+0x48]; 
0x0000000040291f: xor esi, esi; mov edi, 0x3003; mov eax, 0x9e; syscall; 
0x00000000419f2f: xor esi, esi; mov edx, 0x1; mov rdi, r15; call qword ptr [rbp+0x80]; 
0x0000000041c2a7: xor esi, esi; mov edx, 0x1; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x00000000419d39: xor esi, esi; mov edx, 0x2; mov rdi, r15; call qword ptr [r13+0x80]; 
0x0000000041c1d3: xor esi, esi; mov edx, 0x2; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x0000000041d3da: xor esi, esi; mov edx, 0x2; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x000000004184b9: xor esi, esi; mov rdi, rbp; call qword ptr [rbx+0x10]; 
0x0000000042023d: xor esi, esi; mov rdi, rbx; call qword ptr [r15+0x58]; 
0x0000000041d4b1: xor esi, r14d; mov ecx, 0x3; mov edx, 0x1; mov rdi, rbx; call qword ptr [rbp+0x48]; 
0x0000000047e1b2: xor r10, r10; add rdi, 0x308; mov esi, 0x80; syscall; 
0x00000000401439: xor r10d, r10d; mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x000000004266ea: xor r10d, r10d; mov edx, 0x1; mov esi, 0x81; mov eax, ebx; syscall; 
0x000000004216a7: xor r10d, r10d; mov edx, 0x2; mov esi, 0x80; mov eax, 0xca; syscall; 
0x0000000046077a: xor r8d, r8d; call rbx; 
0x000000004248e7: xor r8d, r8d; mov dword ptr fs:[rax], 0xc; mov rax, r8; ret; 
0x00000000410548: xor r8d, r8d; mov rax, r8; pop rbx; pop rbp; ret; 
0x0000000041053d: xor r8d, r8d; mov rax, r8; ret; 
0x00000000458f9f: xor r8d, r8d; mov rcx, [rsp+0x20]; mov rdi, rbp; mov rsi, [rsp+0x18]; call rbx; 
0x00000000458396: xor r8d, r8d; mov rdi, r12; lea r9, [rsp+0x30]; call rbx; 
0x0000000041adca: xor r8d, r8d; mov rdi, r13; lea r9, [rsp+0x18]; call rbp; 
0x00000000478ade: xor r9d, r9d; mov dword ptr [rbp-0x4d0], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000046ac92: xor r9d, r9d; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; lea r8, [rsp+0xa0]; call r15; 
0x0000000048f33a: xor rax, [0x28]; jne 0x000000000048f3c5; leave; ret; 
0x0000000040f7e4: xor rax, [0x28]; jne short 0x000000000040f814; mov eax, r8d; add rsp, 0x118; ret; 
0x000000004259d4: xor rax, [0x28]; jne short 0x00000000004259e4; add rsp, 0x10; pop rbp; ret; 
0x0000000046dc3d: xor rax, [0x28]; jne short 0x000000000046dc4c; add rsp, 0x18; ret; 
0x0000000046deb8: xor rax, [0x28]; jne short 0x000000000046df04; mov eax, r9d; add rsp, 0x148; ret; 
0x00000000480645: xor rax, [0x28]; jne short 0x0000000000480674; mov eax, r9d; add rsp, 0x38; ret; 
0x0000000048cb36: xor rax, [0x28]; jne short 0x000000000048cb46; add rsp, 0x20; pop rbx; ret; 
0x00000000410271: xor rax, [0x30]; call rax; 
0x0000000048f339: xor rax, fs:[0x28]; jne 0x000000000048f3c5; leave; ret; 
0x0000000040f7e3: xor rax, fs:[0x28]; jne short 0x000000000040f814; mov eax, r8d; add rsp, 0x118; ret; 
0x000000004259d3: xor rax, fs:[0x28]; jne short 0x00000000004259e4; add rsp, 0x10; pop rbp; ret; 
0x0000000046dc3c: xor rax, fs:[0x28]; jne short 0x000000000046dc4c; add rsp, 0x18; ret; 
0x0000000046deb7: xor rax, fs:[0x28]; jne short 0x000000000046df04; mov eax, r9d; add rsp, 0x148; ret; 
0x00000000480644: xor rax, fs:[0x28]; jne short 0x0000000000480674; mov eax, r9d; add rsp, 0x38; ret; 
0x0000000048cb35: xor rax, fs:[0x28]; jne short 0x000000000048cb46; add rsp, 0x20; pop rbx; ret; 
0x00000000410270: xor rax, fs:[0x30]; call rax; 
0x0000000044f6b9: xor rax, rax; ret; 
0x0000000040f6e5: xor rax, rdx; movzx edx, byte ptr [rcx]; test dl, dl; jne short 0x000000000040f6c8; ret; 
0x000000004586ab: xor rbx, [0x28]; jne short 0x00000000004586d4; add rsp, 0x20; pop rbx; ret; 
0x000000004586aa: xor rbx, fs:[0x28]; jne short 0x00000000004586d4; add rsp, 0x20; pop rbx; ret; 
0x0000000046dfb0: xor rcx, [0x28]; jne 0x000000000046e056; add rsp, 0x98; ret; 
0x00000000410f92: xor rcx, [0x28]; jne short 0x0000000000410fa4; add rsp, 0xd8; ret; 
0x00000000411050: xor rcx, [0x28]; jne short 0x0000000000411062; add rsp, 0xd8; ret; 
0x0000000045a7a3: xor rcx, [0x28]; jne short 0x000000000045a7f3; add rsp, 0x68; ret; 
0x0000000045a832: xor rcx, [0x28]; jne short 0x000000000045a883; add rsp, 0x18; ret; 
0x0000000045a8ea: xor rcx, [0x28]; jne short 0x000000000045a93b; add rsp, 0x58; ret; 
0x0000000045a988: xor rcx, [0x28]; jne short 0x000000000045a9db; add rsp, 0x58; ret; 
0x0000000046fedd: xor rcx, [0x28]; jne short 0x000000000046ff05; add rsp, 0x38; ret; 
0x00000000475690: xor rcx, [0x28]; jne short 0x00000000004756a2; add rsp, 0xd8; ret; 
0x0000000048cc31: xor rcx, [0x28]; jne short 0x000000000048cc63; add rsp, 0x38; ret; 
0x0000000048ccfd: xor rcx, [0x28]; jne short 0x000000000048cd34; add rsp, 0x58; ret; 
0x0000000048ce6f: xor rcx, [0x28]; jne short 0x000000000048ceb4; add rsp, 0x68; ret; 
0x0000000048d18d: xor rcx, [0x28]; jne short 0x000000000048d1c4; add rsp, 0x58; ret; 
0x0000000048fe34: xor rcx, [0x28]; jne short 0x000000000048fe43; add rsp, 0x28; ret; 
0x00000000493e9d: xor rcx, [0x28]; jne short 0x0000000000493eac; add rsp, 0x38; ret; 
0x0000000046dfaf: xor rcx, fs:[0x28]; jne 0x000000000046e056; add rsp, 0x98; ret; 
0x00000000410f91: xor rcx, fs:[0x28]; jne short 0x0000000000410fa4; add rsp, 0xd8; ret; 
0x0000000041104f: xor rcx, fs:[0x28]; jne short 0x0000000000411062; add rsp, 0xd8; ret; 
0x0000000045a7a2: xor rcx, fs:[0x28]; jne short 0x000000000045a7f3; add rsp, 0x68; ret; 
0x0000000045a831: xor rcx, fs:[0x28]; jne short 0x000000000045a883; add rsp, 0x18; ret; 
0x0000000045a8e9: xor rcx, fs:[0x28]; jne short 0x000000000045a93b; add rsp, 0x58; ret; 
0x0000000045a987: xor rcx, fs:[0x28]; jne short 0x000000000045a9db; add rsp, 0x58; ret; 
0x0000000046fedc: xor rcx, fs:[0x28]; jne short 0x000000000046ff05; add rsp, 0x38; ret; 
0x0000000047568f: xor rcx, fs:[0x28]; jne short 0x00000000004756a2; add rsp, 0xd8; ret; 
0x0000000048cc30: xor rcx, fs:[0x28]; jne short 0x000000000048cc63; add rsp, 0x38; ret; 
0x0000000048ccfb: xor rcx, fs:[0x28]; jne short 0x000000000048cd34; add rsp, 0x58; ret; 
0x0000000048ce6e: xor rcx, fs:[0x28]; jne short 0x000000000048ceb4; add rsp, 0x68; ret; 
0x0000000048d18b: xor rcx, fs:[0x28]; jne short 0x000000000048d1c4; add rsp, 0x58; ret; 
0x0000000048fe33: xor rcx, fs:[0x28]; jne short 0x000000000048fe43; add rsp, 0x28; ret; 
0x00000000493e9c: xor rcx, fs:[0x28]; jne short 0x0000000000493eac; add rsp, 0x38; ret; 
0x00000000459c33: xor rdx, [0x28]; jne short 0x0000000000459c51; add rsp, 0x28; ret; 
0x0000000045ab96: xor rdx, [0x28]; jne short 0x000000000045aba5; add rsp, 0x28; ret; 
0x0000000048058b: xor rdx, [0x28]; jne short 0x000000000048059d; movzx eax, al; add rsp, 0x58; ret; 
0x0000000048ff22: xor rdx, [0x28]; jne short 0x000000000048ff31; add rsp, 0x38; ret; 
0x00000000410253: xor rdx, [0x30]; call rdx; 
0x00000000459c32: xor rdx, fs:[0x28]; jne short 0x0000000000459c51; add rsp, 0x28; ret; 
0x0000000045ab95: xor rdx, fs:[0x28]; jne short 0x000000000045aba5; add rsp, 0x28; ret; 
0x00000000480589: xor rdx, fs:[0x28]; jne short 0x000000000048059d; movzx eax, al; add rsp, 0x58; ret; 
0x0000000048ff21: xor rdx, fs:[0x28]; jne short 0x000000000048ff31; add rsp, 0x38; ret; 
0x00000000410252: xor rdx, fs:[0x30]; call rdx; 
0x0000000041d3d9: xor si, si; mov edx, 0x2; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x0000000043b1cb: xrelease mov [rdi-0x8], rcx; ret; 
0x000000004360ae: xrelease mov [rdi-0x8], rdx; ret; 

CONFIG [ search: ROP-JOP-SYS (default), x_match: none, max_len: 5, syntax: Intel, regex_filter: none ]
RESULT [ unique_gadgets: 16813, search_time: 202.647932ms, print_time: 993.651497ms ]
